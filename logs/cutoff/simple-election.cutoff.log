
**********************************************************************

	[QRM]: ivybench/sym_quorum/ivy/simple-election.ivy

**********************************************************************


---------- Parsing Ivy ----------


Printing isolate this:

OK


=============================================================================================================

	[FW]: Forward Reachability on [ivybench/sym_quorum/ivy/simple-election: acceptor=3,proposer=3]

=============================================================================================================


==============================================

	Set up for forward reachability

==============================================

[FW NOTE]: number of state atoms: 27

[FW NOTE]: number of interpreted atoms (e.g. member,le): 9

[FW NOTE]: symmetric group order: 36

[FW NOTE]: number of branching actions: 21

ivy_to_cpp target=qrm simple-election.acceptor_3_proposer_3.finite.ivy

[IVY_TO_CPP RESULT]: OK

swig -c++ -python -o simple-election.acceptor_3_proposer_3.finite_wrap.cpp ivy_exec.i

[SWIG RESULT]: OK

g++ -std=c++11 -fpic -pthread -O3 simple-election.acceptor_3_proposer_3.finite.cpp simple-election.acceptor_3_proposer_3.finite_wrap.cpp -I/home/yunrong/.pyenv/versions/3.12.0/include/python3.12 -c

[G++ RESULT]: OK

g++ -shared simple-election.acceptor_3_proposer_3.finite.o simple-election.acceptor_3_proposer_3.finite_wrap.o -o _ivy_exec.so -lm -lstdc++

[LINK RESULT]: OK

[QRM NOTE]: Time elapsed since start: 7.963 seconds

[QRM NOTE]: Time elapsed since last: 7.963 seconds

[QRM NOTE]: Peak memory: 1196261 bytes


===================================

	Forward reachability

===================================

[FW NOTE]: dfs max depth: 7

[FW NOTE]: number of total reachable states:        254

[FW NOTE]: number of dfs representative states:     26

[FW NOTE]: number of dfs non-representative states: 228


====================================================================================================================

	[FW RESULT]: Forward Reachability on [ivybench/sym_quorum/ivy/simple-election: acceptor=3,proposer=3]

====================================================================================================================

sort: acceptor=['acceptor0', 'acceptor1', 'acceptor2']
sort: proposer=['proposer0', 'proposer1', 'proposer2']
sort: quorum=['quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2']
predicate: member('acceptor', 'quorum')
predicate: didNotPromise('acceptor',)
predicate: promise('acceptor', 'proposer')
predicate: leader('proposer',)
predicate: start('proposer',)
predicate: chosenAt('quorum', 'proposer')
interpreted atoms: {'member(acceptor0,quorum__acceptor0_acceptor1)': '1', 'member(acceptor0,quorum__acceptor0_acceptor2)': '1', 'member(acceptor0,quorum__acceptor1_acceptor2)': '0', 'member(acceptor1,quorum__acceptor0_acceptor1)': '1', 'member(acceptor1,quorum__acceptor0_acceptor2)': '0', 'member(acceptor1,quorum__acceptor1_acceptor2)': '1', 'member(acceptor2,quorum__acceptor0_acceptor1)': '0', 'member(acceptor2,quorum__acceptor0_acceptor2)': '1', 'member(acceptor2,quorum__acceptor1_acceptor2)': '1'}
state atoms: ['chosenAt(quorum__acceptor0_acceptor1,proposer0)', 'chosenAt(quorum__acceptor0_acceptor1,proposer1)', 'chosenAt(quorum__acceptor0_acceptor1,proposer2)', 'chosenAt(quorum__acceptor0_acceptor2,proposer0)', 'chosenAt(quorum__acceptor0_acceptor2,proposer1)', 'chosenAt(quorum__acceptor0_acceptor2,proposer2)', 'chosenAt(quorum__acceptor1_acceptor2,proposer0)', 'chosenAt(quorum__acceptor1_acceptor2,proposer1)', 'chosenAt(quorum__acceptor1_acceptor2,proposer2)', 'didNotPromise(acceptor0)', 'didNotPromise(acceptor1)', 'didNotPromise(acceptor2)', 'leader(proposer0)', 'leader(proposer1)', 'leader(proposer2)', 'promise(acceptor0,proposer0)', 'promise(acceptor0,proposer1)', 'promise(acceptor0,proposer2)', 'promise(acceptor1,proposer0)', 'promise(acceptor1,proposer1)', 'promise(acceptor1,proposer2)', 'promise(acceptor2,proposer0)', 'promise(acceptor2,proposer1)', 'promise(acceptor2,proposer2)', 'start(proposer0)', 'start(proposer1)', 'start(proposer2)']
representative states : 117440939, 117441451, 117442475, 117444523, 50597803, 201367467, 9798197163, 9800294315, 134782891, 136880043, 203464619, 17108907, 348075, 50595755, 201365419, 9798195115, 9800292267, 134780843, 136877995, 203462571, 17106859, 50594731, 201364395, 9798194091, 9800291243, 203461547


=== State Orbit 0 =====================
size : 1
repr state: 000000000111000000000000000
lex min decimal: 117440939
states:
000000000111000000000000000




=== State Orbit 1 =====================
size : 3
repr state: 000000000111000000000000100
lex min decimal: 117441451
states:
000000000111000000000000001
000000000111000000000000100
000000000111000000000000010




=== State Orbit 2 =====================
size : 3
repr state: 000000000111000000000000110
lex min decimal: 117442475
states:
000000000111000000000000101
000000000111000000000000011
000000000111000000000000110




=== State Orbit 3 =====================
size : 1
repr state: 000000000111000000000000111
lex min decimal: 117444523
states:
000000000111000000000000111




=== State Orbit 4 =====================
size : 9
repr state: 000000000011000100000000111
lex min decimal: 50597803
states:
000000000101000000010000111
000000000011000100000000111
000000000101000000001000111
000000000110000000000001111
000000000110000000000010111
000000000011000001000000111
000000000101000000100000111
000000000110000000000100111
000000000011000010000000111




=== State Orbit 5 =====================
size : 9
repr state: 100000000001000100100000111
lex min decimal: 201367467
states:
001000000001000001001000111
000000100100000000100100111
100000000001000100100000111
000000010100000000010010111
000010000010000010000010111
000001000010000001000001111
000100000010000100000100111
000000001100000000001001111
010000000001000010010000111




=== State Orbit 6 =====================
size : 3
repr state: 100100100000000100100100111
lex min decimal: 9798197163
states:
010010010000000010010010111
100100100000000100100100111
001001001000000001001001111




=== State Orbit 7 =====================
size : 3
repr state: 100100100000100100100100111
lex min decimal: 9800294315
states:
001001001000001001001001111
010010010000010010010010111
100100100000100100100100111




=== State Orbit 8 =====================
size : 18
repr state: 100000000000000100100010111
lex min decimal: 134782891
states:
000000010000000100010010111
000000001000000010001001111
000000001000000100001001111
100000000000000100100010111
001000000000000001001100111
000010000000000010100010111
001000000000000001001010111
000001000000000001100001111
000100000000000100001100111
000000100000000010100100111
000000100000000001100100111
000100000000000100010100111
010000000000000010010100111
010000000000000010010001111
000000010000000001010010111
000010000000000010001010111
000001000000000001010001111
100000000000000100100001111




=== State Orbit 9 =====================
size : 18
repr state: 100000000000100100100010111
lex min decimal: 136880043
states:
000000001000001010001001111
001000000000001001001100111
100000000000100100100010111
000000100000100010100100111
010000000000010010010001111
000010000000010010001010111
100000000000100100100001111
000000001000001100001001111
000000010000010100010010111
000001000000001001010001111
000100000000100100001100111
000001000000001001100001111
000100000000100100010100111
001000000000001001001010111
010000000000010010010100111
000000010000010001010010111
000000100000100001100100111
000010000000010010100010111




=== State Orbit 10 =====================
size : 9
repr state: 100000000001100100100000111
lex min decimal: 203464619
states:
000001000010001001000001111
001000000001001001001000111
000100000010100100000100111
100000000001100100100000111
000000100100100000100100111
000010000010010010000010111
000000010100010000010010111
010000000001010010010000111
000000001100001000001001111




=== State Orbit 11 =====================
size : 18
repr state: 000000000001000100010000111
lex min decimal: 17108907
states:
000000000001000001010000111
000000000010000100000001111
000000000100000000100001111
000000000010000010000100111
000000000100000000001010111
000000000001000001100000111
000000000010000001000100111
000000000001000100010000111
000000000001000100001000111
000000000100000000001100111
000000000010000100000010111
000000000100000000100010111
000000000100000000010100111
000000000100000000010001111
000000000010000001000010111
000000000001000010100000111
000000000001000010001000111
000000000010000010000001111




=== State Orbit 12 =====================
size : 6
repr state: 000000000000000100010001111
lex min decimal: 348075
states:
000000000000000001010100111
000000000000000010100001111
000000000000000001100010111
000000000000000100010001111
000000000000000010001100111
000000000000000100001010111




=== State Orbit 13 =====================
size : 18
repr state: 000000000011000100000000110
lex min decimal: 50595755
states:
000000000011000100000000110
000000000011000001000000101
000000000011000010000000011
000000000011000001000000011
000000000101000000010000110
000000000101000000010000011
000000000101000000001000101
000000000011000010000000110
000000000101000000001000011
000000000101000000100000101
000000000110000000000001101
000000000101000000100000110
000000000110000000000100101
000000000110000000000010011
000000000110000000000001011
000000000011000100000000101
000000000110000000000010110
000000000110000000000100110




=== State Orbit 14 =====================
size : 18
repr state: 100000000001000100100000110
lex min decimal: 201365419
states:
000001000010000001000001011
000000010100000000010010011
100000000001000100100000101
001000000001000001001000101
000000100100000000100100101
010000000001000010010000011
000100000010000100000100110
000010000010000010000010011
001000000001000001001000011
000000001100000000001001101
100000000001000100100000110
000010000010000010000010110
000000001100000000001001011
010000000001000010010000110
000000100100000000100100110
000001000010000001000001101
000000010100000000010010110
000100000010000100000100101




=== State Orbit 15 =====================
size : 6
repr state: 100100100000000100100100110
lex min decimal: 9798195115
states:
001001001000000001001001101
010010010000000010010010110
100100100000000100100100110
010010010000000010010010011
001001001000000001001001011
100100100000000100100100101




=== State Orbit 16 =====================
size : 6
repr state: 100100100000100100100100110
lex min decimal: 9800292267
states:
001001001000001001001001011
001001001000001001001001101
010010010000010010010010011
100100100000100100100100101
010010010000010010010010110
100100100000100100100100110




=== State Orbit 17 =====================
size : 18
repr state: 100000000000000100100010110
lex min decimal: 134780843
states:
000100000000000100001100101
100000000000000100100010110
000010000000000010001010011
000010000000000010100010110
000001000000000001100001101
000001000000000001010001011
000000100000000001100100101
000000010000000100010010110
100000000000000100100001101
000100000000000100010100110
010000000000000010010100110
001000000000000001001100101
000000010000000001010010011
000000100000000010100100110
010000000000000010010001011
000000001000000010001001011
001000000000000001001010011
000000001000000100001001101




=== State Orbit 18 =====================
size : 18
repr state: 100000000000100100100010110
lex min decimal: 136877995
states:
000000001000001100001001101
000000001000001010001001011
000001000000001001100001101
100000000000100100100001101
001000000000001001001100101
001000000000001001001010011
000100000000100100001100101
000010000000010010100010110
010000000000010010010001011
000001000000001001010001011
000000100000100010100100110
100000000000100100100010110
000000010000010001010010011
000000010000010100010010110
000010000000010010001010011
010000000000010010010100110
000000100000100001100100101
000100000000100100010100110




=== State Orbit 19 =====================
size : 18
repr state: 100000000001100100100000110
lex min decimal: 203462571
states:
100000000001100100100000110
000100000010100100000100101
000000100100100000100100101
010000000001010010010000110
000000100100100000100100110
001000000001001001001000101
000010000010010010000010011
000000001100001000001001011
000000010100010000010010011
100000000001100100100000101
000100000010100100000100110
010000000001010010010000011
000010000010010010000010110
000000010100010000010010110
000001000010001001000001101
001000000001001001001000011
000001000010001001000001011
000000001100001000001001101




=== State Orbit 20 =====================
size : 18
repr state: 000000000001000100010000110
lex min decimal: 17106859
states:
000000000001000100001000101
000000000100000000100010110
000000000100000000010001011
000000000100000000100001101
000000000010000010000100110
000000000001000010001000011
000000000100000000001100101
000000000001000001010000011
000000000010000001000100101
000000000100000000010100110
000000000001000001100000101
000000000010000001000010011
000000000001000010100000110
000000000010000100000001101
000000000100000000001010011
000000000010000010000001011
000000000010000100000010110
000000000001000100010000110




=== State Orbit 21 =====================
size : 9
repr state: 000000000011000100000000100
lex min decimal: 50594731
states:
000000000110000000000001001
000000000101000000010000010
000000000110000000000010010
000000000011000001000000001
000000000101000000001000001
000000000011000100000000100
000000000011000010000000010
000000000101000000100000100
000000000110000000000100100




=== State Orbit 22 =====================
size : 9
repr state: 100000000001000100100000100
lex min decimal: 201364395
states:
000000010100000000010010010
000100000010000100000100100
000000100100000000100100100
000000001100000000001001001
001000000001000001001000001
100000000001000100100000100
000001000010000001000001001
000010000010000010000010010
010000000001000010010000010




=== State Orbit 23 =====================
size : 3
repr state: 100100100000000100100100100
lex min decimal: 9798194091
states:
001001001000000001001001001
010010010000000010010010010
100100100000000100100100100




=== State Orbit 24 =====================
size : 3
repr state: 100100100000100100100100100
lex min decimal: 9800291243
states:
001001001000001001001001001
010010010000010010010010010
100100100000100100100100100




=== State Orbit 25 =====================
size : 9
repr state: 100000000001100100100000100
lex min decimal: 203461547
states:
000001000010001001000001001
010000000001010010010000010
000010000010010010000010010
100000000001100100100000100
000000010100010000010010010
000000001100001000001001001
001000000001001001001000001
000100000010100100000100100
000000100100100000100100100



[QRM NOTE]: Time elapsed since start: 8.387 seconds

[QRM NOTE]: Time elapsed since last: 0.424 seconds

[QRM NOTE]: Peak memory: 1302890 bytes


======================================

	Reduce Equivalent Atoms

======================================

[FW NOTE]: equivalent atoms

[FW NOTE]: complement atoms

[FW NOTE]: remove_atom_ids: set()

[QRM NOTE]: Time elapsed since start: 8.399 seconds

[QRM NOTE]: Time elapsed since last: 0.012 seconds

[QRM NOTE]: Peak memory: 334866 bytes


====================================================================================================================

	[PRIME]: Prime Orbit Generatation on [ivybench/sym_quorum/ivy/simple-election: acceptor=3,proposer=3]

====================================================================================================================


===============================================================================================================

	[PRIME RESULT]: Prime Orbits on [ivybench/sym_quorum/ivy/simple-election: acceptor=3,proposer=3]

===============================================================================================================


=== Prime Orbit 0 =====================
size : 18
num_suborbits: 1
0 (*) : -1--------1----------------
0     : ['chosenAt(quorum__acceptor0_acceptor1,proposer1)', 'didNotPromise(acceptor1)']
1     : --1-------1----------------
1     : ['chosenAt(quorum__acceptor0_acceptor1,proposer2)', 'didNotPromise(acceptor1)']
2     : 1---------1----------------
2     : ['chosenAt(quorum__acceptor0_acceptor1,proposer0)', 'didNotPromise(acceptor1)']
3     : ----1------1---------------
3     : ['chosenAt(quorum__acceptor0_acceptor2,proposer1)', 'didNotPromise(acceptor2)']
4     : -----1-----1---------------
4     : ['chosenAt(quorum__acceptor0_acceptor2,proposer2)', 'didNotPromise(acceptor2)']
5     : ---1-------1---------------
5     : ['chosenAt(quorum__acceptor0_acceptor2,proposer0)', 'didNotPromise(acceptor2)']
6     : -1-------1-----------------
6     : ['chosenAt(quorum__acceptor0_acceptor1,proposer1)', 'didNotPromise(acceptor0)']
7     : --1------1-----------------
7     : ['chosenAt(quorum__acceptor0_acceptor1,proposer2)', 'didNotPromise(acceptor0)']
8     : 1--------1-----------------
8     : ['chosenAt(quorum__acceptor0_acceptor1,proposer0)', 'didNotPromise(acceptor0)']
9     : -------1---1---------------
9     : ['chosenAt(quorum__acceptor1_acceptor2,proposer1)', 'didNotPromise(acceptor2)']
10     : --------1--1---------------
10     : ['chosenAt(quorum__acceptor1_acceptor2,proposer2)', 'didNotPromise(acceptor2)']
11     : ------1----1---------------
11     : ['chosenAt(quorum__acceptor1_acceptor2,proposer0)', 'didNotPromise(acceptor2)']
12     : ----1----1-----------------
12     : ['chosenAt(quorum__acceptor0_acceptor2,proposer1)', 'didNotPromise(acceptor0)']
13     : -----1---1-----------------
13     : ['chosenAt(quorum__acceptor0_acceptor2,proposer2)', 'didNotPromise(acceptor0)']
14     : ---1-----1-----------------
14     : ['chosenAt(quorum__acceptor0_acceptor2,proposer0)', 'didNotPromise(acceptor0)']
15     : -------1--1----------------
15     : ['chosenAt(quorum__acceptor1_acceptor2,proposer1)', 'didNotPromise(acceptor1)']
16     : --------1-1----------------
16     : ['chosenAt(quorum__acceptor1_acceptor2,proposer2)', 'didNotPromise(acceptor1)']
17     : ------1---1----------------
17     : ['chosenAt(quorum__acceptor1_acceptor2,proposer0)', 'didNotPromise(acceptor1)']
num_forall :   0
num_exists :   0
num_literals : 0
quantified form : None
qcost : 0


=== Prime Orbit 1 =====================
size : 9
num_suborbits: 1
18 (*) : ----------1---------1------
18     : ['didNotPromise(acceptor1)', 'promise(acceptor1,proposer2)']
19     : ----------1--------1-------
19     : ['didNotPromise(acceptor1)', 'promise(acceptor1,proposer1)']
20     : ----------1-------1--------
20     : ['didNotPromise(acceptor1)', 'promise(acceptor1,proposer0)']
21     : -----------1-----------1---
21     : ['didNotPromise(acceptor2)', 'promise(acceptor2,proposer2)']
22     : -----------1----------1----
22     : ['didNotPromise(acceptor2)', 'promise(acceptor2,proposer1)']
23     : -----------1---------1-----
23     : ['didNotPromise(acceptor2)', 'promise(acceptor2,proposer0)']
24     : ---------1-------1---------
24     : ['didNotPromise(acceptor0)', 'promise(acceptor0,proposer2)']
25     : ---------1------1----------
25     : ['didNotPromise(acceptor0)', 'promise(acceptor0,proposer1)']
26     : ---------1-----1-----------
26     : ['didNotPromise(acceptor0)', 'promise(acceptor0,proposer0)']
num_forall :   0
num_exists :   0
num_literals : 0
quantified form : None
qcost : 0


=== Prime Orbit 2 =====================
size : 18
num_suborbits: 1
27 (*) : -1----------1--------------
27     : ['chosenAt(quorum__acceptor0_acceptor1,proposer1)', 'leader(proposer0)']
28     : --1---------1--------------
28     : ['chosenAt(quorum__acceptor0_acceptor1,proposer2)', 'leader(proposer0)']
29     : 1------------1-------------
29     : ['chosenAt(quorum__acceptor0_acceptor1,proposer0)', 'leader(proposer1)']
30     : --1----------1-------------
30     : ['chosenAt(quorum__acceptor0_acceptor1,proposer2)', 'leader(proposer1)']
31     : 1-------------1------------
31     : ['chosenAt(quorum__acceptor0_acceptor1,proposer0)', 'leader(proposer2)']
32     : -1------------1------------
32     : ['chosenAt(quorum__acceptor0_acceptor1,proposer1)', 'leader(proposer2)']
33     : ----1-------1--------------
33     : ['chosenAt(quorum__acceptor0_acceptor2,proposer1)', 'leader(proposer0)']
34     : -----1------1--------------
34     : ['chosenAt(quorum__acceptor0_acceptor2,proposer2)', 'leader(proposer0)']
35     : ---1---------1-------------
35     : ['chosenAt(quorum__acceptor0_acceptor2,proposer0)', 'leader(proposer1)']
36     : -----1-------1-------------
36     : ['chosenAt(quorum__acceptor0_acceptor2,proposer2)', 'leader(proposer1)']
37     : ---1----------1------------
37     : ['chosenAt(quorum__acceptor0_acceptor2,proposer0)', 'leader(proposer2)']
38     : ----1---------1------------
38     : ['chosenAt(quorum__acceptor0_acceptor2,proposer1)', 'leader(proposer2)']
39     : -------1----1--------------
39     : ['chosenAt(quorum__acceptor1_acceptor2,proposer1)', 'leader(proposer0)']
40     : --------1---1--------------
40     : ['chosenAt(quorum__acceptor1_acceptor2,proposer2)', 'leader(proposer0)']
41     : ------1------1-------------
41     : ['chosenAt(quorum__acceptor1_acceptor2,proposer0)', 'leader(proposer1)']
42     : --------1----1-------------
42     : ['chosenAt(quorum__acceptor1_acceptor2,proposer2)', 'leader(proposer1)']
43     : ------1-------1------------
43     : ['chosenAt(quorum__acceptor1_acceptor2,proposer0)', 'leader(proposer2)']
44     : -------1------1------------
44     : ['chosenAt(quorum__acceptor1_acceptor2,proposer1)', 'leader(proposer2)']
num_forall :   0
num_exists :   0
num_literals : 0
quantified form : None
qcost : 0


=== Prime Orbit 3 =====================
size : 3
num_suborbits: 1
45 (*) : ------------1-----------0--
45     : ['leader(proposer0)', '~start(proposer0)']
46     : -------------1-----------0-
46     : ['leader(proposer1)', '~start(proposer1)']
47     : --------------1-----------0
47     : ['leader(proposer2)', '~start(proposer2)']
num_forall :   0
num_exists :   0
num_literals : 0
quantified form : None
qcost : 0


=== Prime Orbit 4 =====================
size : 3
num_suborbits: 1
48 (*) : ------------1-1------------
48     : ['leader(proposer0)', 'leader(proposer2)']
49     : ------------11-------------
49     : ['leader(proposer0)', 'leader(proposer1)']
50     : -------------11------------
50     : ['leader(proposer1)', 'leader(proposer2)']
num_forall :   0
num_exists :   0
num_literals : 0
quantified form : None
qcost : 0


=== Prime Orbit 5 =====================
size : 9
num_suborbits: 1
51 (*) : ----------------------1--0-
51     : ['promise(acceptor2,proposer1)', '~start(proposer1)']
52     : -----------------------1--0
52     : ['promise(acceptor2,proposer2)', '~start(proposer2)']
53     : ---------------------1--0--
53     : ['promise(acceptor2,proposer0)', '~start(proposer0)']
54     : -------------------1-----0-
54     : ['promise(acceptor1,proposer1)', '~start(proposer1)']
55     : --------------------1-----0
55     : ['promise(acceptor1,proposer2)', '~start(proposer2)']
56     : ------------------1-----0--
56     : ['promise(acceptor1,proposer0)', '~start(proposer0)']
57     : ----------------1--------0-
57     : ['promise(acceptor0,proposer1)', '~start(proposer1)']
58     : -----------------1--------0
58     : ['promise(acceptor0,proposer2)', '~start(proposer2)']
59     : ---------------1--------0--
59     : ['promise(acceptor0,proposer0)', '~start(proposer0)']
num_forall :   0
num_exists :   0
num_literals : 0
quantified form : None
qcost : 0


=== Prime Orbit 6 =====================
size : 36
num_suborbits: 1
60 (*) : ---1------------------1----
60     : ['chosenAt(quorum__acceptor0_acceptor2,proposer0)', 'promise(acceptor2,proposer1)']
61     : ---1-------------------1---
61     : ['chosenAt(quorum__acceptor0_acceptor2,proposer0)', 'promise(acceptor2,proposer2)']
62     : ----1----------------1-----
62     : ['chosenAt(quorum__acceptor0_acceptor2,proposer1)', 'promise(acceptor2,proposer0)']
63     : ----1------------------1---
63     : ['chosenAt(quorum__acceptor0_acceptor2,proposer1)', 'promise(acceptor2,proposer2)']
64     : -----1---------------1-----
64     : ['chosenAt(quorum__acceptor0_acceptor2,proposer2)', 'promise(acceptor2,proposer0)']
65     : -----1----------------1----
65     : ['chosenAt(quorum__acceptor0_acceptor2,proposer2)', 'promise(acceptor2,proposer1)']
66     : 1------------------1-------
66     : ['chosenAt(quorum__acceptor0_acceptor1,proposer0)', 'promise(acceptor1,proposer1)']
67     : 1-------------------1------
67     : ['chosenAt(quorum__acceptor0_acceptor1,proposer0)', 'promise(acceptor1,proposer2)']
68     : -1----------------1--------
68     : ['chosenAt(quorum__acceptor0_acceptor1,proposer1)', 'promise(acceptor1,proposer0)']
69     : -1------------------1------
69     : ['chosenAt(quorum__acceptor0_acceptor1,proposer1)', 'promise(acceptor1,proposer2)']
70     : --1---------------1--------
70     : ['chosenAt(quorum__acceptor0_acceptor1,proposer2)', 'promise(acceptor1,proposer0)']
71     : --1----------------1-------
71     : ['chosenAt(quorum__acceptor0_acceptor1,proposer2)', 'promise(acceptor1,proposer1)']
72     : ------1---------------1----
72     : ['chosenAt(quorum__acceptor1_acceptor2,proposer0)', 'promise(acceptor2,proposer1)']
73     : ------1----------------1---
73     : ['chosenAt(quorum__acceptor1_acceptor2,proposer0)', 'promise(acceptor2,proposer2)']
74     : -------1-------------1-----
74     : ['chosenAt(quorum__acceptor1_acceptor2,proposer1)', 'promise(acceptor2,proposer0)']
75     : -------1---------------1---
75     : ['chosenAt(quorum__acceptor1_acceptor2,proposer1)', 'promise(acceptor2,proposer2)']
76     : --------1------------1-----
76     : ['chosenAt(quorum__acceptor1_acceptor2,proposer2)', 'promise(acceptor2,proposer0)']
77     : --------1-------------1----
77     : ['chosenAt(quorum__acceptor1_acceptor2,proposer2)', 'promise(acceptor2,proposer1)']
78     : 1---------------1----------
78     : ['chosenAt(quorum__acceptor0_acceptor1,proposer0)', 'promise(acceptor0,proposer1)']
79     : 1----------------1---------
79     : ['chosenAt(quorum__acceptor0_acceptor1,proposer0)', 'promise(acceptor0,proposer2)']
80     : -1-------------1-----------
80     : ['chosenAt(quorum__acceptor0_acceptor1,proposer1)', 'promise(acceptor0,proposer0)']
81     : -1---------------1---------
81     : ['chosenAt(quorum__acceptor0_acceptor1,proposer1)', 'promise(acceptor0,proposer2)']
82     : --1------------1-----------
82     : ['chosenAt(quorum__acceptor0_acceptor1,proposer2)', 'promise(acceptor0,proposer0)']
83     : --1-------------1----------
83     : ['chosenAt(quorum__acceptor0_acceptor1,proposer2)', 'promise(acceptor0,proposer1)']
84     : ------1------------1-------
84     : ['chosenAt(quorum__acceptor1_acceptor2,proposer0)', 'promise(acceptor1,proposer1)']
85     : ------1-------------1------
85     : ['chosenAt(quorum__acceptor1_acceptor2,proposer0)', 'promise(acceptor1,proposer2)']
86     : -------1----------1--------
86     : ['chosenAt(quorum__acceptor1_acceptor2,proposer1)', 'promise(acceptor1,proposer0)']
87     : -------1------------1------
87     : ['chosenAt(quorum__acceptor1_acceptor2,proposer1)', 'promise(acceptor1,proposer2)']
88     : --------1---------1--------
88     : ['chosenAt(quorum__acceptor1_acceptor2,proposer2)', 'promise(acceptor1,proposer0)']
89     : --------1----------1-------
89     : ['chosenAt(quorum__acceptor1_acceptor2,proposer2)', 'promise(acceptor1,proposer1)']
90     : ---1------------1----------
90     : ['chosenAt(quorum__acceptor0_acceptor2,proposer0)', 'promise(acceptor0,proposer1)']
91     : ---1-------------1---------
91     : ['chosenAt(quorum__acceptor0_acceptor2,proposer0)', 'promise(acceptor0,proposer2)']
92     : ----1----------1-----------
92     : ['chosenAt(quorum__acceptor0_acceptor2,proposer1)', 'promise(acceptor0,proposer0)']
93     : ----1------------1---------
93     : ['chosenAt(quorum__acceptor0_acceptor2,proposer1)', 'promise(acceptor0,proposer2)']
94     : -----1---------1-----------
94     : ['chosenAt(quorum__acceptor0_acceptor2,proposer2)', 'promise(acceptor0,proposer0)']
95     : -----1----------1----------
95     : ['chosenAt(quorum__acceptor0_acceptor2,proposer2)', 'promise(acceptor0,proposer1)']
num_forall :   0
num_exists :   0
num_literals : 0
quantified form : None
qcost : 0


=== Prime Orbit 7 =====================
size : 9
num_suborbits: 1
96 (*) : ---------------------11----
96     : ['promise(acceptor2,proposer0)', 'promise(acceptor2,proposer1)']
97     : ---------------------1-1---
97     : ['promise(acceptor2,proposer0)', 'promise(acceptor2,proposer2)']
98     : ----------------------11---
98     : ['promise(acceptor2,proposer1)', 'promise(acceptor2,proposer2)']
99     : ------------------11-------
99     : ['promise(acceptor1,proposer0)', 'promise(acceptor1,proposer1)']
100     : ------------------1-1------
100     : ['promise(acceptor1,proposer0)', 'promise(acceptor1,proposer2)']
101     : -------------------11------
101     : ['promise(acceptor1,proposer1)', 'promise(acceptor1,proposer2)']
102     : ---------------11----------
102     : ['promise(acceptor0,proposer0)', 'promise(acceptor0,proposer1)']
103     : ---------------1-1---------
103     : ['promise(acceptor0,proposer0)', 'promise(acceptor0,proposer2)']
104     : ----------------11---------
104     : ['promise(acceptor0,proposer1)', 'promise(acceptor0,proposer2)']
num_forall :   0
num_exists :   0
num_literals : 0
quantified form : None
qcost : 0


=== Prime Orbit 8 =====================
size : 18
num_suborbits: 1
105 (*) : ---1-----------0-----------
105     : ['chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~promise(acceptor0,proposer0)']
106     : ----1-----------0----------
106     : ['chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~promise(acceptor0,proposer1)']
107     : -----1-----------0---------
107     : ['chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~promise(acceptor0,proposer2)']
108     : 1--------------0-----------
108     : ['chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~promise(acceptor0,proposer0)']
109     : -1--------------0----------
109     : ['chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~promise(acceptor0,proposer1)']
110     : --1--------------0---------
110     : ['chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~promise(acceptor0,proposer2)']
111     : ------1-----------0--------
111     : ['chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~promise(acceptor1,proposer0)']
112     : -------1-----------0-------
112     : ['chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~promise(acceptor1,proposer1)']
113     : --------1-----------0------
113     : ['chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~promise(acceptor1,proposer2)']
114     : 1-----------------0--------
114     : ['chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~promise(acceptor1,proposer0)']
115     : -1-----------------0-------
115     : ['chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~promise(acceptor1,proposer1)']
116     : --1-----------------0------
116     : ['chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~promise(acceptor1,proposer2)']
117     : ------1--------------0-----
117     : ['chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~promise(acceptor2,proposer0)']
118     : -------1--------------0----
118     : ['chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~promise(acceptor2,proposer1)']
119     : --------1--------------0---
119     : ['chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~promise(acceptor2,proposer2)']
120     : ---1-----------------0-----
120     : ['chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~promise(acceptor2,proposer0)']
121     : ----1-----------------0----
121     : ['chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~promise(acceptor2,proposer1)']
122     : -----1-----------------0---
122     : ['chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~promise(acceptor2,proposer2)']
num_forall :   0
num_exists :   0
num_literals : 0
quantified form : None
qcost : 0


=== Prime Orbit 9 =====================
size : 9
num_suborbits: 1
123 (*) : -1-----------------------0-
123     : ['chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~start(proposer1)']
124     : --1-----------------------0
124     : ['chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~start(proposer2)']
125     : 1-----------------------0--
125     : ['chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~start(proposer0)']
126     : ----1--------------------0-
126     : ['chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~start(proposer1)']
127     : -----1--------------------0
127     : ['chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~start(proposer2)']
128     : ---1--------------------0--
128     : ['chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~start(proposer0)']
129     : -------1-----------------0-
129     : ['chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~start(proposer1)']
130     : --------1-----------------0
130     : ['chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~start(proposer2)']
131     : ------1-----------------0--
131     : ['chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~start(proposer0)']
num_forall :   0
num_exists :   0
num_literals : 0
quantified form : None
qcost : 0


=== Prime Orbit 10 =====================
size : 27
num_suborbits: 2
132 (*) : -1-1-----------------------
132     : ['chosenAt(quorum__acceptor0_acceptor1,proposer1)', 'chosenAt(quorum__acceptor0_acceptor2,proposer0)']
133     : --11-----------------------
133     : ['chosenAt(quorum__acceptor0_acceptor1,proposer2)', 'chosenAt(quorum__acceptor0_acceptor2,proposer0)']
134     : 1---1----------------------
134     : ['chosenAt(quorum__acceptor0_acceptor1,proposer0)', 'chosenAt(quorum__acceptor0_acceptor2,proposer1)']
135     : --1-1----------------------
135     : ['chosenAt(quorum__acceptor0_acceptor1,proposer2)', 'chosenAt(quorum__acceptor0_acceptor2,proposer1)']
136     : 1----1---------------------
136     : ['chosenAt(quorum__acceptor0_acceptor1,proposer0)', 'chosenAt(quorum__acceptor0_acceptor2,proposer2)']
137     : -1---1---------------------
137     : ['chosenAt(quorum__acceptor0_acceptor1,proposer1)', 'chosenAt(quorum__acceptor0_acceptor2,proposer2)']
138     : -1----1--------------------
138     : ['chosenAt(quorum__acceptor0_acceptor1,proposer1)', 'chosenAt(quorum__acceptor1_acceptor2,proposer0)']
139     : --1---1--------------------
139     : ['chosenAt(quorum__acceptor0_acceptor1,proposer2)', 'chosenAt(quorum__acceptor1_acceptor2,proposer0)']
140     : 1------1-------------------
140     : ['chosenAt(quorum__acceptor0_acceptor1,proposer0)', 'chosenAt(quorum__acceptor1_acceptor2,proposer1)']
141     : --1----1-------------------
141     : ['chosenAt(quorum__acceptor0_acceptor1,proposer2)', 'chosenAt(quorum__acceptor1_acceptor2,proposer1)']
142     : 1-------1------------------
142     : ['chosenAt(quorum__acceptor0_acceptor1,proposer0)', 'chosenAt(quorum__acceptor1_acceptor2,proposer2)']
143     : -1------1------------------
143     : ['chosenAt(quorum__acceptor0_acceptor1,proposer1)', 'chosenAt(quorum__acceptor1_acceptor2,proposer2)']
144     : ----1-1--------------------
144     : ['chosenAt(quorum__acceptor0_acceptor2,proposer1)', 'chosenAt(quorum__acceptor1_acceptor2,proposer0)']
145     : -----11--------------------
145     : ['chosenAt(quorum__acceptor0_acceptor2,proposer2)', 'chosenAt(quorum__acceptor1_acceptor2,proposer0)']
146     : ---1---1-------------------
146     : ['chosenAt(quorum__acceptor0_acceptor2,proposer0)', 'chosenAt(quorum__acceptor1_acceptor2,proposer1)']
147     : -----1-1-------------------
147     : ['chosenAt(quorum__acceptor0_acceptor2,proposer2)', 'chosenAt(quorum__acceptor1_acceptor2,proposer1)']
148     : ---1----1------------------
148     : ['chosenAt(quorum__acceptor0_acceptor2,proposer0)', 'chosenAt(quorum__acceptor1_acceptor2,proposer2)']
149     : ----1---1------------------
149     : ['chosenAt(quorum__acceptor0_acceptor2,proposer1)', 'chosenAt(quorum__acceptor1_acceptor2,proposer2)']
150 (*) : 11-------------------------
150     : ['chosenAt(quorum__acceptor0_acceptor1,proposer0)', 'chosenAt(quorum__acceptor0_acceptor1,proposer1)']
151     : 1-1------------------------
151     : ['chosenAt(quorum__acceptor0_acceptor1,proposer0)', 'chosenAt(quorum__acceptor0_acceptor1,proposer2)']
152     : -11------------------------
152     : ['chosenAt(quorum__acceptor0_acceptor1,proposer1)', 'chosenAt(quorum__acceptor0_acceptor1,proposer2)']
153     : ---11----------------------
153     : ['chosenAt(quorum__acceptor0_acceptor2,proposer0)', 'chosenAt(quorum__acceptor0_acceptor2,proposer1)']
154     : ---1-1---------------------
154     : ['chosenAt(quorum__acceptor0_acceptor2,proposer0)', 'chosenAt(quorum__acceptor0_acceptor2,proposer2)']
155     : ----11---------------------
155     : ['chosenAt(quorum__acceptor0_acceptor2,proposer1)', 'chosenAt(quorum__acceptor0_acceptor2,proposer2)']
156     : ------11-------------------
156     : ['chosenAt(quorum__acceptor1_acceptor2,proposer0)', 'chosenAt(quorum__acceptor1_acceptor2,proposer1)']
157     : ------1-1------------------
157     : ['chosenAt(quorum__acceptor1_acceptor2,proposer0)', 'chosenAt(quorum__acceptor1_acceptor2,proposer2)']
158     : -------11------------------
158     : ['chosenAt(quorum__acceptor1_acceptor2,proposer1)', 'chosenAt(quorum__acceptor1_acceptor2,proposer2)']
num_forall :   0
num_exists :   0
num_literals : 0
quantified form : None
qcost : 0


=== Prime Orbit 11 =====================
size : 36
num_suborbits: 1
159 (*) : -------------1--0-1--------
159     : ['leader(proposer1)', 'promise(acceptor1,proposer0)', '~promise(acceptor0,proposer1)']
160     : --------------1--01--------
160     : ['leader(proposer2)', 'promise(acceptor1,proposer0)', '~promise(acceptor0,proposer2)']
161     : ------------1--0---1-------
161     : ['leader(proposer0)', 'promise(acceptor1,proposer1)', '~promise(acceptor0,proposer0)']
162     : --------------1--0-1-------
162     : ['leader(proposer2)', 'promise(acceptor1,proposer1)', '~promise(acceptor0,proposer2)']
163     : ------------1--0----1------
163     : ['leader(proposer0)', 'promise(acceptor1,proposer2)', '~promise(acceptor0,proposer0)']
164     : -------------1--0---1------
164     : ['leader(proposer1)', 'promise(acceptor1,proposer2)', '~promise(acceptor0,proposer1)']
165     : -------------1--0----1-----
165     : ['leader(proposer1)', 'promise(acceptor2,proposer0)', '~promise(acceptor0,proposer1)']
166     : --------------1--0---1-----
166     : ['leader(proposer2)', 'promise(acceptor2,proposer0)', '~promise(acceptor0,proposer2)']
167     : ------------1--0------1----
167     : ['leader(proposer0)', 'promise(acceptor2,proposer1)', '~promise(acceptor0,proposer0)']
168     : --------------1--0----1----
168     : ['leader(proposer2)', 'promise(acceptor2,proposer1)', '~promise(acceptor0,proposer2)']
169     : ------------1--0-------1---
169     : ['leader(proposer0)', 'promise(acceptor2,proposer2)', '~promise(acceptor0,proposer0)']
170     : -------------1--0------1---
170     : ['leader(proposer1)', 'promise(acceptor2,proposer2)', '~promise(acceptor0,proposer1)']
171     : -------------1-1---0-------
171     : ['leader(proposer1)', 'promise(acceptor0,proposer0)', '~promise(acceptor1,proposer1)']
172     : --------------11----0------
172     : ['leader(proposer2)', 'promise(acceptor0,proposer0)', '~promise(acceptor1,proposer2)']
173     : ------------1---1-0--------
173     : ['leader(proposer0)', 'promise(acceptor0,proposer1)', '~promise(acceptor1,proposer0)']
174     : --------------1-1---0------
174     : ['leader(proposer2)', 'promise(acceptor0,proposer1)', '~promise(acceptor1,proposer2)']
175     : ------------1----10--------
175     : ['leader(proposer0)', 'promise(acceptor0,proposer2)', '~promise(acceptor1,proposer0)']
176     : -------------1---1-0-------
176     : ['leader(proposer1)', 'promise(acceptor0,proposer2)', '~promise(acceptor1,proposer1)']
177     : -------------1-----0-1-----
177     : ['leader(proposer1)', 'promise(acceptor2,proposer0)', '~promise(acceptor1,proposer1)']
178     : --------------1-----01-----
178     : ['leader(proposer2)', 'promise(acceptor2,proposer0)', '~promise(acceptor1,proposer2)']
179     : ------------1-----0---1----
179     : ['leader(proposer0)', 'promise(acceptor2,proposer1)', '~promise(acceptor1,proposer0)']
180     : --------------1-----0-1----
180     : ['leader(proposer2)', 'promise(acceptor2,proposer1)', '~promise(acceptor1,proposer2)']
181     : ------------1-----0----1---
181     : ['leader(proposer0)', 'promise(acceptor2,proposer2)', '~promise(acceptor1,proposer0)']
182     : -------------1-----0---1---
182     : ['leader(proposer1)', 'promise(acceptor2,proposer2)', '~promise(acceptor1,proposer1)']
183     : -------------1-1------0----
183     : ['leader(proposer1)', 'promise(acceptor0,proposer0)', '~promise(acceptor2,proposer1)']
184     : --------------11-------0---
184     : ['leader(proposer2)', 'promise(acceptor0,proposer0)', '~promise(acceptor2,proposer2)']
185     : ------------1---1----0-----
185     : ['leader(proposer0)', 'promise(acceptor0,proposer1)', '~promise(acceptor2,proposer0)']
186     : --------------1-1------0---
186     : ['leader(proposer2)', 'promise(acceptor0,proposer1)', '~promise(acceptor2,proposer2)']
187     : ------------1----1---0-----
187     : ['leader(proposer0)', 'promise(acceptor0,proposer2)', '~promise(acceptor2,proposer0)']
188     : -------------1---1----0----
188     : ['leader(proposer1)', 'promise(acceptor0,proposer2)', '~promise(acceptor2,proposer1)']
189     : -------------1----1---0----
189     : ['leader(proposer1)', 'promise(acceptor1,proposer0)', '~promise(acceptor2,proposer1)']
190     : --------------1---1----0---
190     : ['leader(proposer2)', 'promise(acceptor1,proposer0)', '~promise(acceptor2,proposer2)']
191     : ------------1------1-0-----
191     : ['leader(proposer0)', 'promise(acceptor1,proposer1)', '~promise(acceptor2,proposer0)']
192     : --------------1----1---0---
192     : ['leader(proposer2)', 'promise(acceptor1,proposer1)', '~promise(acceptor2,proposer2)']
193     : ------------1-------10-----
193     : ['leader(proposer0)', 'promise(acceptor1,proposer2)', '~promise(acceptor2,proposer0)']
194     : -------------1------1-0----
194     : ['leader(proposer1)', 'promise(acceptor1,proposer2)', '~promise(acceptor2,proposer1)']
num_forall :   0
num_exists :   0
num_literals : 0
quantified form : None
qcost : 0


=== Prime Orbit 12 =====================
size : 18
num_suborbits: 1
195 (*) : ----0--------1----1--------
195     : ['leader(proposer1)', 'promise(acceptor1,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)']
196     : -----0--------1---1--------
196     : ['leader(proposer2)', 'promise(acceptor1,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)']
197     : ---0--------1------1-------
197     : ['leader(proposer0)', 'promise(acceptor1,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)']
198     : -----0--------1----1-------
198     : ['leader(proposer2)', 'promise(acceptor1,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)']
199     : ---0--------1-------1------
199     : ['leader(proposer0)', 'promise(acceptor1,proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)']
200     : ----0--------1------1------
200     : ['leader(proposer1)', 'promise(acceptor1,proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)']
201     : -0-----------1-------1-----
201     : ['leader(proposer1)', 'promise(acceptor2,proposer0)', '~chosenAt(quorum__acceptor0_acceptor1,proposer1)']
202     : --0-----------1------1-----
202     : ['leader(proposer2)', 'promise(acceptor2,proposer0)', '~chosenAt(quorum__acceptor0_acceptor1,proposer2)']
203     : 0-----------1---------1----
203     : ['leader(proposer0)', 'promise(acceptor2,proposer1)', '~chosenAt(quorum__acceptor0_acceptor1,proposer0)']
204     : --0-----------1-------1----
204     : ['leader(proposer2)', 'promise(acceptor2,proposer1)', '~chosenAt(quorum__acceptor0_acceptor1,proposer2)']
205     : 0-----------1----------1---
205     : ['leader(proposer0)', 'promise(acceptor2,proposer2)', '~chosenAt(quorum__acceptor0_acceptor1,proposer0)']
206     : -0-----------1---------1---
206     : ['leader(proposer1)', 'promise(acceptor2,proposer2)', '~chosenAt(quorum__acceptor0_acceptor1,proposer1)']
207     : -------0-----1-1-----------
207     : ['leader(proposer1)', 'promise(acceptor0,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)']
208     : --------0-----11-----------
208     : ['leader(proposer2)', 'promise(acceptor0,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)']
209     : ------0-----1---1----------
209     : ['leader(proposer0)', 'promise(acceptor0,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)']
210     : --------0-----1-1----------
210     : ['leader(proposer2)', 'promise(acceptor0,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)']
211     : ------0-----1----1---------
211     : ['leader(proposer0)', 'promise(acceptor0,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)']
212     : -------0-----1---1---------
212     : ['leader(proposer1)', 'promise(acceptor0,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)']
num_forall :   0
num_exists :   0
num_literals : 0
quantified form : None
qcost : 0


=== Prime Orbit 13 =====================
size : 36
num_suborbits: 1
213 (*) : ---------1---1----1--------
213     : ['didNotPromise(acceptor0)', 'leader(proposer1)', 'promise(acceptor1,proposer0)']
214     : ---------1----1---1--------
214     : ['didNotPromise(acceptor0)', 'leader(proposer2)', 'promise(acceptor1,proposer0)']
215     : ---------1--1------1-------
215     : ['didNotPromise(acceptor0)', 'leader(proposer0)', 'promise(acceptor1,proposer1)']
216     : ---------1----1----1-------
216     : ['didNotPromise(acceptor0)', 'leader(proposer2)', 'promise(acceptor1,proposer1)']
217     : ---------1--1-------1------
217     : ['didNotPromise(acceptor0)', 'leader(proposer0)', 'promise(acceptor1,proposer2)']
218     : ---------1---1------1------
218     : ['didNotPromise(acceptor0)', 'leader(proposer1)', 'promise(acceptor1,proposer2)']
219     : ---------1---1-------1-----
219     : ['didNotPromise(acceptor0)', 'leader(proposer1)', 'promise(acceptor2,proposer0)']
220     : ---------1----1------1-----
220     : ['didNotPromise(acceptor0)', 'leader(proposer2)', 'promise(acceptor2,proposer0)']
221     : ---------1--1---------1----
221     : ['didNotPromise(acceptor0)', 'leader(proposer0)', 'promise(acceptor2,proposer1)']
222     : ---------1----1-------1----
222     : ['didNotPromise(acceptor0)', 'leader(proposer2)', 'promise(acceptor2,proposer1)']
223     : ---------1--1----------1---
223     : ['didNotPromise(acceptor0)', 'leader(proposer0)', 'promise(acceptor2,proposer2)']
224     : ---------1---1---------1---
224     : ['didNotPromise(acceptor0)', 'leader(proposer1)', 'promise(acceptor2,proposer2)']
225     : ----------1--1-1-----------
225     : ['didNotPromise(acceptor1)', 'leader(proposer1)', 'promise(acceptor0,proposer0)']
226     : ----------1---11-----------
226     : ['didNotPromise(acceptor1)', 'leader(proposer2)', 'promise(acceptor0,proposer0)']
227     : ----------1-1---1----------
227     : ['didNotPromise(acceptor1)', 'leader(proposer0)', 'promise(acceptor0,proposer1)']
228     : ----------1---1-1----------
228     : ['didNotPromise(acceptor1)', 'leader(proposer2)', 'promise(acceptor0,proposer1)']
229     : ----------1-1----1---------
229     : ['didNotPromise(acceptor1)', 'leader(proposer0)', 'promise(acceptor0,proposer2)']
230     : ----------1--1---1---------
230     : ['didNotPromise(acceptor1)', 'leader(proposer1)', 'promise(acceptor0,proposer2)']
231     : ----------1--1-------1-----
231     : ['didNotPromise(acceptor1)', 'leader(proposer1)', 'promise(acceptor2,proposer0)']
232     : ----------1---1------1-----
232     : ['didNotPromise(acceptor1)', 'leader(proposer2)', 'promise(acceptor2,proposer0)']
233     : ----------1-1---------1----
233     : ['didNotPromise(acceptor1)', 'leader(proposer0)', 'promise(acceptor2,proposer1)']
234     : ----------1---1-------1----
234     : ['didNotPromise(acceptor1)', 'leader(proposer2)', 'promise(acceptor2,proposer1)']
235     : ----------1-1----------1---
235     : ['didNotPromise(acceptor1)', 'leader(proposer0)', 'promise(acceptor2,proposer2)']
236     : ----------1--1---------1---
236     : ['didNotPromise(acceptor1)', 'leader(proposer1)', 'promise(acceptor2,proposer2)']
237     : -----------1-1-1-----------
237     : ['didNotPromise(acceptor2)', 'leader(proposer1)', 'promise(acceptor0,proposer0)']
238     : -----------1--11-----------
238     : ['didNotPromise(acceptor2)', 'leader(proposer2)', 'promise(acceptor0,proposer0)']
239     : -----------11---1----------
239     : ['didNotPromise(acceptor2)', 'leader(proposer0)', 'promise(acceptor0,proposer1)']
240     : -----------1--1-1----------
240     : ['didNotPromise(acceptor2)', 'leader(proposer2)', 'promise(acceptor0,proposer1)']
241     : -----------11----1---------
241     : ['didNotPromise(acceptor2)', 'leader(proposer0)', 'promise(acceptor0,proposer2)']
242     : -----------1-1---1---------
242     : ['didNotPromise(acceptor2)', 'leader(proposer1)', 'promise(acceptor0,proposer2)']
243     : -----------1-1----1--------
243     : ['didNotPromise(acceptor2)', 'leader(proposer1)', 'promise(acceptor1,proposer0)']
244     : -----------1--1---1--------
244     : ['didNotPromise(acceptor2)', 'leader(proposer2)', 'promise(acceptor1,proposer0)']
245     : -----------11------1-------
245     : ['didNotPromise(acceptor2)', 'leader(proposer0)', 'promise(acceptor1,proposer1)']
246     : -----------1--1----1-------
246     : ['didNotPromise(acceptor2)', 'leader(proposer2)', 'promise(acceptor1,proposer1)']
247     : -----------11-------1------
247     : ['didNotPromise(acceptor2)', 'leader(proposer0)', 'promise(acceptor1,proposer2)']
248     : -----------1-1------1------
248     : ['didNotPromise(acceptor2)', 'leader(proposer1)', 'promise(acceptor1,proposer2)']
num_forall :   0
num_exists :   0
num_literals : 0
quantified form : None
qcost : 0


=== Prime Orbit 14 =====================
size : 9
num_suborbits: 1
249 (*) : ------0-----------1--1-----
249     : ['promise(acceptor1,proposer0)', 'promise(acceptor2,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)']
250     : -------0-----------1--1----
250     : ['promise(acceptor1,proposer1)', 'promise(acceptor2,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)']
251     : --------0-----------1--1---
251     : ['promise(acceptor1,proposer2)', 'promise(acceptor2,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)']
252     : ---0-----------1-----1-----
252     : ['promise(acceptor0,proposer0)', 'promise(acceptor2,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)']
253     : ----0-----------1-----1----
253     : ['promise(acceptor0,proposer1)', 'promise(acceptor2,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)']
254     : -----0-----------1-----1---
254     : ['promise(acceptor0,proposer2)', 'promise(acceptor2,proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)']
255     : 0--------------1--1--------
255     : ['promise(acceptor0,proposer0)', 'promise(acceptor1,proposer0)', '~chosenAt(quorum__acceptor0_acceptor1,proposer0)']
256     : -0--------------1--1-------
256     : ['promise(acceptor0,proposer1)', 'promise(acceptor1,proposer1)', '~chosenAt(quorum__acceptor0_acceptor1,proposer1)']
257     : --0--------------1--1------
257     : ['promise(acceptor0,proposer2)', 'promise(acceptor1,proposer2)', '~chosenAt(quorum__acceptor0_acceptor1,proposer2)']
num_forall :   0
num_exists :   0
num_literals : 0
quantified form : None
qcost : 0


=== Prime Orbit 15 =====================
size : 36
num_suborbits: 2
258 (*) : -------------1----1--1-----
258     : ['leader(proposer1)', 'promise(acceptor1,proposer0)', 'promise(acceptor2,proposer0)']
259     : --------------1---1--1-----
259     : ['leader(proposer2)', 'promise(acceptor1,proposer0)', 'promise(acceptor2,proposer0)']
260     : ------------1------1--1----
260     : ['leader(proposer0)', 'promise(acceptor1,proposer1)', 'promise(acceptor2,proposer1)']
261     : --------------1----1--1----
261     : ['leader(proposer2)', 'promise(acceptor1,proposer1)', 'promise(acceptor2,proposer1)']
262     : ------------1-------1--1---
262     : ['leader(proposer0)', 'promise(acceptor1,proposer2)', 'promise(acceptor2,proposer2)']
263     : -------------1------1--1---
263     : ['leader(proposer1)', 'promise(acceptor1,proposer2)', 'promise(acceptor2,proposer2)']
264     : -------------1-1-----1-----
264     : ['leader(proposer1)', 'promise(acceptor0,proposer0)', 'promise(acceptor2,proposer0)']
265     : --------------11-----1-----
265     : ['leader(proposer2)', 'promise(acceptor0,proposer0)', 'promise(acceptor2,proposer0)']
266     : ------------1---1-----1----
266     : ['leader(proposer0)', 'promise(acceptor0,proposer1)', 'promise(acceptor2,proposer1)']
267     : --------------1-1-----1----
267     : ['leader(proposer2)', 'promise(acceptor0,proposer1)', 'promise(acceptor2,proposer1)']
268     : ------------1----1-----1---
268     : ['leader(proposer0)', 'promise(acceptor0,proposer2)', 'promise(acceptor2,proposer2)']
269     : -------------1---1-----1---
269     : ['leader(proposer1)', 'promise(acceptor0,proposer2)', 'promise(acceptor2,proposer2)']
270     : -------------1-1--1--------
270     : ['leader(proposer1)', 'promise(acceptor0,proposer0)', 'promise(acceptor1,proposer0)']
271     : --------------11--1--------
271     : ['leader(proposer2)', 'promise(acceptor0,proposer0)', 'promise(acceptor1,proposer0)']
272     : ------------1---1--1-------
272     : ['leader(proposer0)', 'promise(acceptor0,proposer1)', 'promise(acceptor1,proposer1)']
273     : --------------1-1--1-------
273     : ['leader(proposer2)', 'promise(acceptor0,proposer1)', 'promise(acceptor1,proposer1)']
274     : ------------1----1--1------
274     : ['leader(proposer0)', 'promise(acceptor0,proposer2)', 'promise(acceptor1,proposer2)']
275     : -------------1---1--1------
275     : ['leader(proposer1)', 'promise(acceptor0,proposer2)', 'promise(acceptor1,proposer2)']
357 (*) : ------------1---1---1------
357     : ['leader(proposer0)', 'promise(acceptor0,proposer1)', 'promise(acceptor1,proposer2)']
358     : ------------1----1-1-------
358     : ['leader(proposer0)', 'promise(acceptor0,proposer2)', 'promise(acceptor1,proposer1)']
359     : -------------1-1----1------
359     : ['leader(proposer1)', 'promise(acceptor0,proposer0)', 'promise(acceptor1,proposer2)']
360     : -------------1---11--------
360     : ['leader(proposer1)', 'promise(acceptor0,proposer2)', 'promise(acceptor1,proposer0)']
361     : --------------11---1-------
361     : ['leader(proposer2)', 'promise(acceptor0,proposer0)', 'promise(acceptor1,proposer1)']
362     : --------------1-1-1--------
362     : ['leader(proposer2)', 'promise(acceptor0,proposer1)', 'promise(acceptor1,proposer0)']
363     : ------------1---1------1---
363     : ['leader(proposer0)', 'promise(acceptor0,proposer1)', 'promise(acceptor2,proposer2)']
364     : ------------1----1----1----
364     : ['leader(proposer0)', 'promise(acceptor0,proposer2)', 'promise(acceptor2,proposer1)']
365     : -------------1-1-------1---
365     : ['leader(proposer1)', 'promise(acceptor0,proposer0)', 'promise(acceptor2,proposer2)']
366     : -------------1---1---1-----
366     : ['leader(proposer1)', 'promise(acceptor0,proposer2)', 'promise(acceptor2,proposer0)']
367     : --------------11------1----
367     : ['leader(proposer2)', 'promise(acceptor0,proposer0)', 'promise(acceptor2,proposer1)']
368     : --------------1-1----1-----
368     : ['leader(proposer2)', 'promise(acceptor0,proposer1)', 'promise(acceptor2,proposer0)']
369     : ------------1------1---1---
369     : ['leader(proposer0)', 'promise(acceptor1,proposer1)', 'promise(acceptor2,proposer2)']
370     : ------------1-------1-1----
370     : ['leader(proposer0)', 'promise(acceptor1,proposer2)', 'promise(acceptor2,proposer1)']
371     : -------------1----1----1---
371     : ['leader(proposer1)', 'promise(acceptor1,proposer0)', 'promise(acceptor2,proposer2)']
372     : -------------1------11-----
372     : ['leader(proposer1)', 'promise(acceptor1,proposer2)', 'promise(acceptor2,proposer0)']
373     : --------------1---1---1----
373     : ['leader(proposer2)', 'promise(acceptor1,proposer0)', 'promise(acceptor2,proposer1)']
374     : --------------1----1-1-----
374     : ['leader(proposer2)', 'promise(acceptor1,proposer1)', 'promise(acceptor2,proposer0)']
num_forall :   0
num_exists :   0
num_literals : 0
quantified form : None
qcost : 0


=== Prime Orbit 16 =====================
size : 9
num_suborbits: 1
276 (*) : 0-----------1--------0-----
276     : ['leader(proposer0)', '~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~promise(acceptor2,proposer0)']
277     : -0-----------1--------0----
277     : ['leader(proposer1)', '~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~promise(acceptor2,proposer1)']
278     : --0-----------1--------0---
278     : ['leader(proposer2)', '~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~promise(acceptor2,proposer2)']
279     : ---0--------1-----0--------
279     : ['leader(proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~promise(acceptor1,proposer0)']
280     : ----0--------1-----0-------
280     : ['leader(proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~promise(acceptor1,proposer1)']
281     : -----0--------1-----0------
281     : ['leader(proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~promise(acceptor1,proposer2)']
282     : ------0-----1--0-----------
282     : ['leader(proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~promise(acceptor0,proposer0)']
283     : -------0-----1--0----------
283     : ['leader(proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~promise(acceptor0,proposer1)']
284     : --------0-----1--0---------
284     : ['leader(proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~promise(acceptor0,proposer2)']
num_forall :   0
num_exists :   0
num_literals : 0
quantified form : None
qcost : 0


=== Prime Orbit 17 =====================
size : 9
num_suborbits: 1
285 (*) : 0----------11--------------
285     : ['didNotPromise(acceptor2)', 'leader(proposer0)', '~chosenAt(quorum__acceptor0_acceptor1,proposer0)']
286     : -0---------1-1-------------
286     : ['didNotPromise(acceptor2)', 'leader(proposer1)', '~chosenAt(quorum__acceptor0_acceptor1,proposer1)']
287     : --0--------1--1------------
287     : ['didNotPromise(acceptor2)', 'leader(proposer2)', '~chosenAt(quorum__acceptor0_acceptor1,proposer2)']
288     : ---0------1-1--------------
288     : ['didNotPromise(acceptor1)', 'leader(proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)']
289     : ----0-----1--1-------------
289     : ['didNotPromise(acceptor1)', 'leader(proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)']
290     : -----0----1---1------------
290     : ['didNotPromise(acceptor1)', 'leader(proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)']
291     : ------0--1--1--------------
291     : ['didNotPromise(acceptor0)', 'leader(proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)']
292     : -------0-1---1-------------
292     : ['didNotPromise(acceptor0)', 'leader(proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)']
293     : --------01----1------------
293     : ['didNotPromise(acceptor0)', 'leader(proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)']
num_forall :   0
num_exists :   0
num_literals : 0
quantified form : None
qcost : 0


=== Prime Orbit 18 =====================
size : 9
num_suborbits: 1
294 (*) : ------------1-----0--0-----
294     : ['leader(proposer0)', '~promise(acceptor1,proposer0)', '~promise(acceptor2,proposer0)']
295     : -------------1-----0--0----
295     : ['leader(proposer1)', '~promise(acceptor1,proposer1)', '~promise(acceptor2,proposer1)']
296     : --------------1-----0--0---
296     : ['leader(proposer2)', '~promise(acceptor1,proposer2)', '~promise(acceptor2,proposer2)']
297     : ------------1--0-----0-----
297     : ['leader(proposer0)', '~promise(acceptor0,proposer0)', '~promise(acceptor2,proposer0)']
298     : -------------1--0-----0----
298     : ['leader(proposer1)', '~promise(acceptor0,proposer1)', '~promise(acceptor2,proposer1)']
299     : --------------1--0-----0---
299     : ['leader(proposer2)', '~promise(acceptor0,proposer2)', '~promise(acceptor2,proposer2)']
300     : ------------1--0--0--------
300     : ['leader(proposer0)', '~promise(acceptor0,proposer0)', '~promise(acceptor1,proposer0)']
301     : -------------1--0--0-------
301     : ['leader(proposer1)', '~promise(acceptor0,proposer1)', '~promise(acceptor1,proposer1)']
302     : --------------1--0--0------
302     : ['leader(proposer2)', '~promise(acceptor0,proposer2)', '~promise(acceptor1,proposer2)']
num_forall :   0
num_exists :   0
num_literals : 0
quantified form : None
qcost : 0


=== Prime Orbit 19 =====================
size : 18
num_suborbits: 1
303 (*) : -----------11-----0--------
303     : ['didNotPromise(acceptor2)', 'leader(proposer0)', '~promise(acceptor1,proposer0)']
304     : -----------1-1-----0-------
304     : ['didNotPromise(acceptor2)', 'leader(proposer1)', '~promise(acceptor1,proposer1)']
305     : -----------1--1-----0------
305     : ['didNotPromise(acceptor2)', 'leader(proposer2)', '~promise(acceptor1,proposer2)']
306     : ----------1-1--------0-----
306     : ['didNotPromise(acceptor1)', 'leader(proposer0)', '~promise(acceptor2,proposer0)']
307     : ----------1--1--------0----
307     : ['didNotPromise(acceptor1)', 'leader(proposer1)', '~promise(acceptor2,proposer1)']
308     : ----------1---1--------0---
308     : ['didNotPromise(acceptor1)', 'leader(proposer2)', '~promise(acceptor2,proposer2)']
309     : -----------11--0-----------
309     : ['didNotPromise(acceptor2)', 'leader(proposer0)', '~promise(acceptor0,proposer0)']
310     : -----------1-1--0----------
310     : ['didNotPromise(acceptor2)', 'leader(proposer1)', '~promise(acceptor0,proposer1)']
311     : -----------1--1--0---------
311     : ['didNotPromise(acceptor2)', 'leader(proposer2)', '~promise(acceptor0,proposer2)']
312     : ---------1--1--------0-----
312     : ['didNotPromise(acceptor0)', 'leader(proposer0)', '~promise(acceptor2,proposer0)']
313     : ---------1---1--------0----
313     : ['didNotPromise(acceptor0)', 'leader(proposer1)', '~promise(acceptor2,proposer1)']
314     : ---------1----1--------0---
314     : ['didNotPromise(acceptor0)', 'leader(proposer2)', '~promise(acceptor2,proposer2)']
315     : ----------1-1--0-----------
315     : ['didNotPromise(acceptor1)', 'leader(proposer0)', '~promise(acceptor0,proposer0)']
316     : ----------1--1--0----------
316     : ['didNotPromise(acceptor1)', 'leader(proposer1)', '~promise(acceptor0,proposer1)']
317     : ----------1---1--0---------
317     : ['didNotPromise(acceptor1)', 'leader(proposer2)', '~promise(acceptor0,proposer2)']
318     : ---------1--1-----0--------
318     : ['didNotPromise(acceptor0)', 'leader(proposer0)', '~promise(acceptor1,proposer0)']
319     : ---------1---1-----0-------
319     : ['didNotPromise(acceptor0)', 'leader(proposer1)', '~promise(acceptor1,proposer1)']
320     : ---------1----1-----0------
320     : ['didNotPromise(acceptor0)', 'leader(proposer2)', '~promise(acceptor1,proposer2)']
num_forall :   0
num_exists :   0
num_literals : 0
quantified form : None
qcost : 0


=== Prime Orbit 20 =====================
size : 9
num_suborbits: 1
321 (*) : ---------1-11--------------
321     : ['didNotPromise(acceptor0)', 'didNotPromise(acceptor2)', 'leader(proposer0)']
322     : ---------1-1-1-------------
322     : ['didNotPromise(acceptor0)', 'didNotPromise(acceptor2)', 'leader(proposer1)']
323     : ---------1-1--1------------
323     : ['didNotPromise(acceptor0)', 'didNotPromise(acceptor2)', 'leader(proposer2)']
324     : ---------11-1--------------
324     : ['didNotPromise(acceptor0)', 'didNotPromise(acceptor1)', 'leader(proposer0)']
325     : ---------11--1-------------
325     : ['didNotPromise(acceptor0)', 'didNotPromise(acceptor1)', 'leader(proposer1)']
326     : ---------11---1------------
326     : ['didNotPromise(acceptor0)', 'didNotPromise(acceptor1)', 'leader(proposer2)']
327     : ----------111--------------
327     : ['didNotPromise(acceptor1)', 'didNotPromise(acceptor2)', 'leader(proposer0)']
328     : ----------11-1-------------
328     : ['didNotPromise(acceptor1)', 'didNotPromise(acceptor2)', 'leader(proposer1)']
329     : ----------11--1------------
329     : ['didNotPromise(acceptor1)', 'didNotPromise(acceptor2)', 'leader(proposer2)']
num_forall :   0
num_exists :   0
num_literals : 0
quantified form : None
qcost : 0


=== Prime Orbit 21 =====================
size : 18
num_suborbits: 1
330 (*) : 1--0-----------------1-----
330     : ['chosenAt(quorum__acceptor0_acceptor1,proposer0)', 'promise(acceptor2,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)']
331     : -1--0-----------------1----
331     : ['chosenAt(quorum__acceptor0_acceptor1,proposer1)', 'promise(acceptor2,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)']
332     : --1--0-----------------1---
332     : ['chosenAt(quorum__acceptor0_acceptor1,proposer2)', 'promise(acceptor2,proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)']
333     : 0--1--------------1--------
333     : ['chosenAt(quorum__acceptor0_acceptor2,proposer0)', 'promise(acceptor1,proposer0)', '~chosenAt(quorum__acceptor0_acceptor1,proposer0)']
334     : -0--1--------------1-------
334     : ['chosenAt(quorum__acceptor0_acceptor2,proposer1)', 'promise(acceptor1,proposer1)', '~chosenAt(quorum__acceptor0_acceptor1,proposer1)']
335     : --0--1--------------1------
335     : ['chosenAt(quorum__acceptor0_acceptor2,proposer2)', 'promise(acceptor1,proposer2)', '~chosenAt(quorum__acceptor0_acceptor1,proposer2)']
336     : 1-----0--------------1-----
336     : ['chosenAt(quorum__acceptor0_acceptor1,proposer0)', 'promise(acceptor2,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)']
337     : -1-----0--------------1----
337     : ['chosenAt(quorum__acceptor0_acceptor1,proposer1)', 'promise(acceptor2,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)']
338     : --1-----0--------------1---
338     : ['chosenAt(quorum__acceptor0_acceptor1,proposer2)', 'promise(acceptor2,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)']
339     : 0-----1--------1-----------
339     : ['chosenAt(quorum__acceptor1_acceptor2,proposer0)', 'promise(acceptor0,proposer0)', '~chosenAt(quorum__acceptor0_acceptor1,proposer0)']
340     : -0-----1--------1----------
340     : ['chosenAt(quorum__acceptor1_acceptor2,proposer1)', 'promise(acceptor0,proposer1)', '~chosenAt(quorum__acceptor0_acceptor1,proposer1)']
341     : --0-----1--------1---------
341     : ['chosenAt(quorum__acceptor1_acceptor2,proposer2)', 'promise(acceptor0,proposer2)', '~chosenAt(quorum__acceptor0_acceptor1,proposer2)']
342     : ---1--0-----------1--------
342     : ['chosenAt(quorum__acceptor0_acceptor2,proposer0)', 'promise(acceptor1,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)']
343     : ----1--0-----------1-------
343     : ['chosenAt(quorum__acceptor0_acceptor2,proposer1)', 'promise(acceptor1,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)']
344     : -----1--0-----------1------
344     : ['chosenAt(quorum__acceptor0_acceptor2,proposer2)', 'promise(acceptor1,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)']
345     : ---0--1--------1-----------
345     : ['chosenAt(quorum__acceptor1_acceptor2,proposer0)', 'promise(acceptor0,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)']
346     : ----0--1--------1----------
346     : ['chosenAt(quorum__acceptor1_acceptor2,proposer1)', 'promise(acceptor0,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)']
347     : -----0--1--------1---------
347     : ['chosenAt(quorum__acceptor1_acceptor2,proposer2)', 'promise(acceptor0,proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)']
num_forall :   0
num_exists :   0
num_literals : 0
quantified form : None
qcost : 0


=== Prime Orbit 22 =====================
size : 9
num_suborbits: 1
348 (*) : 1--1--0--------------------
348     : ['chosenAt(quorum__acceptor0_acceptor1,proposer0)', 'chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)']
349     : -1--1--0-------------------
349     : ['chosenAt(quorum__acceptor0_acceptor1,proposer1)', 'chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)']
350     : --1--1--0------------------
350     : ['chosenAt(quorum__acceptor0_acceptor1,proposer2)', 'chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)']
351     : 1--0--1--------------------
351     : ['chosenAt(quorum__acceptor0_acceptor1,proposer0)', 'chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)']
352     : -1--0--1-------------------
352     : ['chosenAt(quorum__acceptor0_acceptor1,proposer1)', 'chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)']
353     : --1--0--1------------------
353     : ['chosenAt(quorum__acceptor0_acceptor1,proposer2)', 'chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)']
354     : 0--1--1--------------------
354     : ['chosenAt(quorum__acceptor0_acceptor2,proposer0)', 'chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~chosenAt(quorum__acceptor0_acceptor1,proposer0)']
355     : -0--1--1-------------------
355     : ['chosenAt(quorum__acceptor0_acceptor2,proposer1)', 'chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~chosenAt(quorum__acceptor0_acceptor1,proposer1)']
356     : --0--1--1------------------
356     : ['chosenAt(quorum__acceptor0_acceptor2,proposer2)', 'chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~chosenAt(quorum__acceptor0_acceptor1,proposer2)']
num_forall :   0
num_exists :   0
num_literals : 0
quantified form : None
qcost : 0


=== Prime Orbit 23 =====================
size : 9
num_suborbits: 1
375 (*) : -----------0----------000--
375     : ['~didNotPromise(acceptor2)', '~promise(acceptor2,proposer1)', '~promise(acceptor2,proposer2)', '~start(proposer0)']
376     : -----------0---------0-0-0-
376     : ['~didNotPromise(acceptor2)', '~promise(acceptor2,proposer0)', '~promise(acceptor2,proposer2)', '~start(proposer1)']
377     : -----------0---------00---0
377     : ['~didNotPromise(acceptor2)', '~promise(acceptor2,proposer0)', '~promise(acceptor2,proposer1)', '~start(proposer2)']
378     : ----------0--------00---0--
378     : ['~didNotPromise(acceptor1)', '~promise(acceptor1,proposer1)', '~promise(acceptor1,proposer2)', '~start(proposer0)']
379     : ----------0-------0-0----0-
379     : ['~didNotPromise(acceptor1)', '~promise(acceptor1,proposer0)', '~promise(acceptor1,proposer2)', '~start(proposer1)']
380     : ----------0-------00------0
380     : ['~didNotPromise(acceptor1)', '~promise(acceptor1,proposer0)', '~promise(acceptor1,proposer1)', '~start(proposer2)']
381     : ---------0------00------0--
381     : ['~didNotPromise(acceptor0)', '~promise(acceptor0,proposer1)', '~promise(acceptor0,proposer2)', '~start(proposer0)']
382     : ---------0-----0-0-------0-
382     : ['~didNotPromise(acceptor0)', '~promise(acceptor0,proposer0)', '~promise(acceptor0,proposer2)', '~start(proposer1)']
383     : ---------0-----00---------0
383     : ['~didNotPromise(acceptor0)', '~promise(acceptor0,proposer0)', '~promise(acceptor0,proposer1)', '~start(proposer2)']
num_forall :   0
num_exists :   0
num_literals : 0
quantified form : None
qcost : 0


=== Prime Orbit 24 =====================
size : 3
num_suborbits: 1
384 (*) : -----------0---------000---
384     : ['~didNotPromise(acceptor2)', '~promise(acceptor2,proposer0)', '~promise(acceptor2,proposer1)', '~promise(acceptor2,proposer2)']
385     : ----------0-------000------
385     : ['~didNotPromise(acceptor1)', '~promise(acceptor1,proposer0)', '~promise(acceptor1,proposer1)', '~promise(acceptor1,proposer2)']
386     : ---------0-----000---------
386     : ['~didNotPromise(acceptor0)', '~promise(acceptor0,proposer0)', '~promise(acceptor0,proposer1)', '~promise(acceptor0,proposer2)']
num_forall :   0
num_exists :   0
num_literals : 0
quantified form : None
qcost : 0


=== Prime Orbit 25 =====================
size : 9
num_suborbits: 1
387 (*) : -----0--0-----1--------1---
387     : ['leader(proposer2)', 'promise(acceptor2,proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)']
388     : ----0--0-----1--------1----
388     : ['leader(proposer1)', 'promise(acceptor2,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)']
389     : ---0--0-----1--------1-----
389     : ['leader(proposer0)', 'promise(acceptor2,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)']
390     : --0-----0-----1-----1------
390     : ['leader(proposer2)', 'promise(acceptor1,proposer2)', '~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)']
391     : -0-----0-----1-----1-------
391     : ['leader(proposer1)', 'promise(acceptor1,proposer1)', '~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)']
392     : 0-----0-----1-----1--------
392     : ['leader(proposer0)', 'promise(acceptor1,proposer0)', '~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)']
393     : --0--0--------1--1---------
393     : ['leader(proposer2)', 'promise(acceptor0,proposer2)', '~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)']
394     : -0--0--------1--1----------
394     : ['leader(proposer1)', 'promise(acceptor0,proposer1)', '~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)']
395     : 0--0--------1--1-----------
395     : ['leader(proposer0)', 'promise(acceptor0,proposer0)', '~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)']
num_forall :   0
num_exists :   0
num_literals : 0
quantified form : None
qcost : 0


=== Prime Orbit 26 =====================
size : 3
num_suborbits: 1
396 (*) : --0--0--0-----1------------
396     : ['leader(proposer2)', '~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)']
397     : -0--0--0-----1-------------
397     : ['leader(proposer1)', '~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)']
398     : 0--0--0-----1--------------
398     : ['leader(proposer0)', '~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)']
num_forall :   0
num_exists :   0
num_literals : 0
quantified form : None
qcost : 0


=== Prime Orbit 27 =====================
size : 9
num_suborbits: 1
399 (*) : ---------0-----0---------00
399     : ['~didNotPromise(acceptor0)', '~promise(acceptor0,proposer0)', '~start(proposer1)', '~start(proposer2)']
400     : ---------0------0-------0-0
400     : ['~didNotPromise(acceptor0)', '~promise(acceptor0,proposer1)', '~start(proposer0)', '~start(proposer2)']
401     : ---------0-------0------00-
401     : ['~didNotPromise(acceptor0)', '~promise(acceptor0,proposer2)', '~start(proposer0)', '~start(proposer1)']
402     : ----------0-------0------00
402     : ['~didNotPromise(acceptor1)', '~promise(acceptor1,proposer0)', '~start(proposer1)', '~start(proposer2)']
403     : ----------0--------0----0-0
403     : ['~didNotPromise(acceptor1)', '~promise(acceptor1,proposer1)', '~start(proposer0)', '~start(proposer2)']
404     : ----------0---------0---00-
404     : ['~didNotPromise(acceptor1)', '~promise(acceptor1,proposer2)', '~start(proposer0)', '~start(proposer1)']
405     : -----------0---------0---00
405     : ['~didNotPromise(acceptor2)', '~promise(acceptor2,proposer0)', '~start(proposer1)', '~start(proposer2)']
406     : -----------0----------0-0-0
406     : ['~didNotPromise(acceptor2)', '~promise(acceptor2,proposer1)', '~start(proposer0)', '~start(proposer2)']
407     : -----------0-----------000-
407     : ['~didNotPromise(acceptor2)', '~promise(acceptor2,proposer2)', '~start(proposer0)', '~start(proposer1)']
num_forall :   0
num_exists :   0
num_literals : 0
quantified form : None
qcost : 0


=== Prime Orbit 28 =====================
size : 3
num_suborbits: 1
408 (*) : ---------0--------------000
408     : ['~didNotPromise(acceptor0)', '~start(proposer0)', '~start(proposer1)', '~start(proposer2)']
409     : ----------0-------------000
409     : ['~didNotPromise(acceptor1)', '~start(proposer0)', '~start(proposer1)', '~start(proposer2)']
410     : -----------0------------000
410     : ['~didNotPromise(acceptor2)', '~start(proposer0)', '~start(proposer1)', '~start(proposer2)']
num_forall :   0
num_exists :   0
num_literals : 0
quantified form : None
qcost : 0


=== Prime Orbit 29 =====================
size : 18
num_suborbits: 1
411 (*) : ---0-----0------00---1-----
411     : ['promise(acceptor2,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~didNotPromise(acceptor0)', '~promise(acceptor0,proposer1)', '~promise(acceptor0,proposer2)']
412     : ----0----0-----0-0----1----
412     : ['promise(acceptor2,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~didNotPromise(acceptor0)', '~promise(acceptor0,proposer0)', '~promise(acceptor0,proposer2)']
413     : -----0---0-----00------1---
413     : ['promise(acceptor2,proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~didNotPromise(acceptor0)', '~promise(acceptor0,proposer0)', '~promise(acceptor0,proposer1)']
414     : 0--------0------001--------
414     : ['promise(acceptor1,proposer0)', '~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~didNotPromise(acceptor0)', '~promise(acceptor0,proposer1)', '~promise(acceptor0,proposer2)']
415     : -0-------0-----0-0-1-------
415     : ['promise(acceptor1,proposer1)', '~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~didNotPromise(acceptor0)', '~promise(acceptor0,proposer0)', '~promise(acceptor0,proposer2)']
416     : --0------0-----00---1------
416     : ['promise(acceptor1,proposer2)', '~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~didNotPromise(acceptor0)', '~promise(acceptor0,proposer0)', '~promise(acceptor0,proposer1)']
417     : ------0---0--------001-----
417     : ['promise(acceptor2,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor1)', '~promise(acceptor1,proposer1)', '~promise(acceptor1,proposer2)']
418     : -------0--0-------0-0-1----
418     : ['promise(acceptor2,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor1)', '~promise(acceptor1,proposer0)', '~promise(acceptor1,proposer2)']
419     : --------0-0-------00---1---
419     : ['promise(acceptor2,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor1)', '~promise(acceptor1,proposer0)', '~promise(acceptor1,proposer1)']
420     : 0---------0----1---00------
420     : ['promise(acceptor0,proposer0)', '~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~didNotPromise(acceptor1)', '~promise(acceptor1,proposer1)', '~promise(acceptor1,proposer2)']
421     : -0--------0-----1-0-0------
421     : ['promise(acceptor0,proposer1)', '~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~didNotPromise(acceptor1)', '~promise(acceptor1,proposer0)', '~promise(acceptor1,proposer2)']
422     : --0-------0------100-------
422     : ['promise(acceptor0,proposer2)', '~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~didNotPromise(acceptor1)', '~promise(acceptor1,proposer0)', '~promise(acceptor1,proposer1)']
423     : ------0----0------1---00---
423     : ['promise(acceptor1,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor2)', '~promise(acceptor2,proposer1)', '~promise(acceptor2,proposer2)']
424     : -------0---0-------1-0-0---
424     : ['promise(acceptor1,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor2)', '~promise(acceptor2,proposer0)', '~promise(acceptor2,proposer2)']
425     : --------0--0--------100----
425     : ['promise(acceptor1,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor2)', '~promise(acceptor2,proposer0)', '~promise(acceptor2,proposer1)']
426     : ---0-------0---1------00---
426     : ['promise(acceptor0,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~didNotPromise(acceptor2)', '~promise(acceptor2,proposer1)', '~promise(acceptor2,proposer2)']
427     : ----0------0----1----0-0---
427     : ['promise(acceptor0,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~didNotPromise(acceptor2)', '~promise(acceptor2,proposer0)', '~promise(acceptor2,proposer2)']
428     : -----0-----0-----1---00----
428     : ['promise(acceptor0,proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~didNotPromise(acceptor2)', '~promise(acceptor2,proposer0)', '~promise(acceptor2,proposer1)']
num_forall :   0
num_exists :   0
num_literals : 0
quantified form : None
qcost : 0


=== Prime Orbit 30 =====================
size : 36
num_suborbits: 1
429 (*) : ------0---0--------0-1----0
429     : ['promise(acceptor2,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor1)', '~promise(acceptor1,proposer1)', '~start(proposer2)']
430     : ------0---0---------01---0-
430     : ['promise(acceptor2,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor1)', '~promise(acceptor1,proposer2)', '~start(proposer1)']
431     : -------0--0-------0---1---0
431     : ['promise(acceptor2,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor1)', '~promise(acceptor1,proposer0)', '~start(proposer2)']
432     : -------0--0---------0-1-0--
432     : ['promise(acceptor2,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor1)', '~promise(acceptor1,proposer2)', '~start(proposer0)']
433     : --------0-0-------0----1-0-
433     : ['promise(acceptor2,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor1)', '~promise(acceptor1,proposer0)', '~start(proposer1)']
434     : --------0-0--------0---10--
434     : ['promise(acceptor2,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor1)', '~promise(acceptor1,proposer1)', '~start(proposer0)']
435     : ------0----0------1---0---0
435     : ['promise(acceptor1,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor2)', '~promise(acceptor2,proposer1)', '~start(proposer2)']
436     : ------0----0------1----0-0-
436     : ['promise(acceptor1,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor2)', '~promise(acceptor2,proposer2)', '~start(proposer1)']
437     : -------0---0-------1-0----0
437     : ['promise(acceptor1,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor2)', '~promise(acceptor2,proposer0)', '~start(proposer2)']
438     : -------0---0-------1---00--
438     : ['promise(acceptor1,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor2)', '~promise(acceptor2,proposer2)', '~start(proposer0)']
439     : --------0--0--------10---0-
439     : ['promise(acceptor1,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor2)', '~promise(acceptor2,proposer0)', '~start(proposer1)']
440     : --------0--0--------1-0-0--
440     : ['promise(acceptor1,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor2)', '~promise(acceptor2,proposer1)', '~start(proposer0)']
441     : ---0-----0------0----1----0
441     : ['promise(acceptor2,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~didNotPromise(acceptor0)', '~promise(acceptor0,proposer1)', '~start(proposer2)']
442     : ---0-----0-------0---1---0-
442     : ['promise(acceptor2,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~didNotPromise(acceptor0)', '~promise(acceptor0,proposer2)', '~start(proposer1)']
443     : ----0----0-----0------1---0
443     : ['promise(acceptor2,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~didNotPromise(acceptor0)', '~promise(acceptor0,proposer0)', '~start(proposer2)']
444     : ----0----0-------0----1-0--
444     : ['promise(acceptor2,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~didNotPromise(acceptor0)', '~promise(acceptor0,proposer2)', '~start(proposer0)']
445     : -----0---0-----0-------1-0-
445     : ['promise(acceptor2,proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~didNotPromise(acceptor0)', '~promise(acceptor0,proposer0)', '~start(proposer1)']
446     : -----0---0------0------10--
446     : ['promise(acceptor2,proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~didNotPromise(acceptor0)', '~promise(acceptor0,proposer1)', '~start(proposer0)']
447     : ---0-------0---1------0---0
447     : ['promise(acceptor0,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~didNotPromise(acceptor2)', '~promise(acceptor2,proposer1)', '~start(proposer2)']
448     : ---0-------0---1-------0-0-
448     : ['promise(acceptor0,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~didNotPromise(acceptor2)', '~promise(acceptor2,proposer2)', '~start(proposer1)']
449     : ----0------0----1----0----0
449     : ['promise(acceptor0,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~didNotPromise(acceptor2)', '~promise(acceptor2,proposer0)', '~start(proposer2)']
450     : ----0------0----1------00--
450     : ['promise(acceptor0,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~didNotPromise(acceptor2)', '~promise(acceptor2,proposer2)', '~start(proposer0)']
451     : -----0-----0-----1---0---0-
451     : ['promise(acceptor0,proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~didNotPromise(acceptor2)', '~promise(acceptor2,proposer0)', '~start(proposer1)']
452     : -----0-----0-----1----0-0--
452     : ['promise(acceptor0,proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~didNotPromise(acceptor2)', '~promise(acceptor2,proposer1)', '~start(proposer0)']
453     : 0--------0------0-1-------0
453     : ['promise(acceptor1,proposer0)', '~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~didNotPromise(acceptor0)', '~promise(acceptor0,proposer1)', '~start(proposer2)']
454     : 0--------0-------01------0-
454     : ['promise(acceptor1,proposer0)', '~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~didNotPromise(acceptor0)', '~promise(acceptor0,proposer2)', '~start(proposer1)']
455     : -0-------0-----0---1------0
455     : ['promise(acceptor1,proposer1)', '~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~didNotPromise(acceptor0)', '~promise(acceptor0,proposer0)', '~start(proposer2)']
456     : -0-------0-------0-1----0--
456     : ['promise(acceptor1,proposer1)', '~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~didNotPromise(acceptor0)', '~promise(acceptor0,proposer2)', '~start(proposer0)']
457     : --0------0-----0----1----0-
457     : ['promise(acceptor1,proposer2)', '~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~didNotPromise(acceptor0)', '~promise(acceptor0,proposer0)', '~start(proposer1)']
458     : --0------0------0---1---0--
458     : ['promise(acceptor1,proposer2)', '~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~didNotPromise(acceptor0)', '~promise(acceptor0,proposer1)', '~start(proposer0)']
459     : 0---------0----1---0------0
459     : ['promise(acceptor0,proposer0)', '~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~didNotPromise(acceptor1)', '~promise(acceptor1,proposer1)', '~start(proposer2)']
460     : 0---------0----1----0----0-
460     : ['promise(acceptor0,proposer0)', '~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~didNotPromise(acceptor1)', '~promise(acceptor1,proposer2)', '~start(proposer1)']
461     : -0--------0-----1-0-------0
461     : ['promise(acceptor0,proposer1)', '~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~didNotPromise(acceptor1)', '~promise(acceptor1,proposer0)', '~start(proposer2)']
462     : -0--------0-----1---0---0--
462     : ['promise(acceptor0,proposer1)', '~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~didNotPromise(acceptor1)', '~promise(acceptor1,proposer2)', '~start(proposer0)']
463     : --0-------0------10------0-
463     : ['promise(acceptor0,proposer2)', '~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~didNotPromise(acceptor1)', '~promise(acceptor1,proposer0)', '~start(proposer1)']
464     : --0-------0------1-0----0--
464     : ['promise(acceptor0,proposer2)', '~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~didNotPromise(acceptor1)', '~promise(acceptor1,proposer1)', '~start(proposer0)']
num_forall :   0
num_exists :   0
num_literals : 0
quantified form : None
qcost : 0


=== Prime Orbit 31 =====================
size : 36
num_suborbits: 1
465 (*) : --0--1----0--------0----0--
465     : ['chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~didNotPromise(acceptor1)', '~promise(acceptor1,proposer1)', '~start(proposer0)']
466     : -0--1-----0---------0---0--
466     : ['chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~didNotPromise(acceptor1)', '~promise(acceptor1,proposer2)', '~start(proposer0)']
467     : --0--1----0-------0------0-
467     : ['chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~didNotPromise(acceptor1)', '~promise(acceptor1,proposer0)', '~start(proposer1)']
468     : 0--1------0---------0----0-
468     : ['chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~didNotPromise(acceptor1)', '~promise(acceptor1,proposer2)', '~start(proposer1)']
469     : -0--1-----0-------0-------0
469     : ['chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~didNotPromise(acceptor1)', '~promise(acceptor1,proposer0)', '~start(proposer2)']
470     : 0--1------0--------0------0
470     : ['chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~didNotPromise(acceptor1)', '~promise(acceptor1,proposer1)', '~start(proposer2)']
471     : --1--0-----0----------0-0--
471     : ['chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~didNotPromise(acceptor2)', '~promise(acceptor2,proposer1)', '~start(proposer0)']
472     : -1--0------0-----------00--
472     : ['chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~didNotPromise(acceptor2)', '~promise(acceptor2,proposer2)', '~start(proposer0)']
473     : --1--0-----0---------0---0-
473     : ['chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~didNotPromise(acceptor2)', '~promise(acceptor2,proposer0)', '~start(proposer1)']
474     : 1--0-------0-----------0-0-
474     : ['chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~didNotPromise(acceptor2)', '~promise(acceptor2,proposer2)', '~start(proposer1)']
475     : -1--0------0---------0----0
475     : ['chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~didNotPromise(acceptor2)', '~promise(acceptor2,proposer0)', '~start(proposer2)']
476     : 1--0-------0----------0---0
476     : ['chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~didNotPromise(acceptor2)', '~promise(acceptor2,proposer1)', '~start(proposer2)']
477     : --0-----10------0-------0--
477     : ['chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~didNotPromise(acceptor0)', '~promise(acceptor0,proposer1)', '~start(proposer0)']
478     : -0-----1-0-------0------0--
478     : ['chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~didNotPromise(acceptor0)', '~promise(acceptor0,proposer2)', '~start(proposer0)']
479     : --0-----10-----0---------0-
479     : ['chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~didNotPromise(acceptor0)', '~promise(acceptor0,proposer0)', '~start(proposer1)']
480     : 0-----1--0-------0-------0-
480     : ['chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~didNotPromise(acceptor0)', '~promise(acceptor0,proposer2)', '~start(proposer1)']
481     : -0-----1-0-----0----------0
481     : ['chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~didNotPromise(acceptor0)', '~promise(acceptor0,proposer0)', '~start(proposer2)']
482     : 0-----1--0------0---------0
482     : ['chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~didNotPromise(acceptor0)', '~promise(acceptor0,proposer1)', '~start(proposer2)']
483     : --1-----0--0----------0-0--
483     : ['chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor2)', '~promise(acceptor2,proposer1)', '~start(proposer0)']
484     : -1-----0---0-----------00--
484     : ['chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor2)', '~promise(acceptor2,proposer2)', '~start(proposer0)']
485     : --1-----0--0---------0---0-
485     : ['chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor2)', '~promise(acceptor2,proposer0)', '~start(proposer1)']
486     : 1-----0----0-----------0-0-
486     : ['chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor2)', '~promise(acceptor2,proposer2)', '~start(proposer1)']
487     : -1-----0---0---------0----0
487     : ['chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor2)', '~promise(acceptor2,proposer0)', '~start(proposer2)']
488     : 1-----0----0----------0---0
488     : ['chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor2)', '~promise(acceptor2,proposer1)', '~start(proposer2)']
489     : -----0--10------0-------0--
489     : ['chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~didNotPromise(acceptor0)', '~promise(acceptor0,proposer1)', '~start(proposer0)']
490     : ----0--1-0-------0------0--
490     : ['chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~didNotPromise(acceptor0)', '~promise(acceptor0,proposer2)', '~start(proposer0)']
491     : -----0--10-----0---------0-
491     : ['chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~didNotPromise(acceptor0)', '~promise(acceptor0,proposer0)', '~start(proposer1)']
492     : ---0--1--0-------0-------0-
492     : ['chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~didNotPromise(acceptor0)', '~promise(acceptor0,proposer2)', '~start(proposer1)']
493     : ----0--1-0-----0----------0
493     : ['chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~didNotPromise(acceptor0)', '~promise(acceptor0,proposer0)', '~start(proposer2)']
494     : ---0--1--0------0---------0
494     : ['chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~didNotPromise(acceptor0)', '~promise(acceptor0,proposer1)', '~start(proposer2)']
495     : -----1--0-0--------0----0--
495     : ['chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor1)', '~promise(acceptor1,proposer1)', '~start(proposer0)']
496     : ----1--0--0---------0---0--
496     : ['chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor1)', '~promise(acceptor1,proposer2)', '~start(proposer0)']
497     : -----1--0-0-------0------0-
497     : ['chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor1)', '~promise(acceptor1,proposer0)', '~start(proposer1)']
498     : ---1--0---0---------0----0-
498     : ['chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor1)', '~promise(acceptor1,proposer2)', '~start(proposer1)']
499     : ----1--0--0-------0-------0
499     : ['chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor1)', '~promise(acceptor1,proposer0)', '~start(proposer2)']
500     : ---1--0---0--------0------0
500     : ['chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor1)', '~promise(acceptor1,proposer1)', '~start(proposer2)']
num_forall :   0
num_exists :   0
num_literals : 0
quantified form : None
qcost : 0


=== Prime Orbit 32 =====================
size : 18
num_suborbits: 1
501 (*) : -----1--0-0-------00-------
501     : ['chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor1)', '~promise(acceptor1,proposer0)', '~promise(acceptor1,proposer1)']
502     : ----1--0--0-------0-0------
502     : ['chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor1)', '~promise(acceptor1,proposer0)', '~promise(acceptor1,proposer2)']
503     : ---1--0---0--------00------
503     : ['chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor1)', '~promise(acceptor1,proposer1)', '~promise(acceptor1,proposer2)']
504     : --1-----0--0---------00----
504     : ['chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor2)', '~promise(acceptor2,proposer0)', '~promise(acceptor2,proposer1)']
505     : -1-----0---0---------0-0---
505     : ['chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor2)', '~promise(acceptor2,proposer0)', '~promise(acceptor2,proposer2)']
506     : 1-----0----0----------00---
506     : ['chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor2)', '~promise(acceptor2,proposer1)', '~promise(acceptor2,proposer2)']
507     : -----0--10-----00----------
507     : ['chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~didNotPromise(acceptor0)', '~promise(acceptor0,proposer0)', '~promise(acceptor0,proposer1)']
508     : ----0--1-0-----0-0---------
508     : ['chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~didNotPromise(acceptor0)', '~promise(acceptor0,proposer0)', '~promise(acceptor0,proposer2)']
509     : ---0--1--0------00---------
509     : ['chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~didNotPromise(acceptor0)', '~promise(acceptor0,proposer1)', '~promise(acceptor0,proposer2)']
510     : --1--0-----0---------00----
510     : ['chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~didNotPromise(acceptor2)', '~promise(acceptor2,proposer0)', '~promise(acceptor2,proposer1)']
511     : -1--0------0---------0-0---
511     : ['chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~didNotPromise(acceptor2)', '~promise(acceptor2,proposer0)', '~promise(acceptor2,proposer2)']
512     : 1--0-------0----------00---
512     : ['chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~didNotPromise(acceptor2)', '~promise(acceptor2,proposer1)', '~promise(acceptor2,proposer2)']
513     : --0-----10-----00----------
513     : ['chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~didNotPromise(acceptor0)', '~promise(acceptor0,proposer0)', '~promise(acceptor0,proposer1)']
514     : -0-----1-0-----0-0---------
514     : ['chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~didNotPromise(acceptor0)', '~promise(acceptor0,proposer0)', '~promise(acceptor0,proposer2)']
515     : 0-----1--0------00---------
515     : ['chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~didNotPromise(acceptor0)', '~promise(acceptor0,proposer1)', '~promise(acceptor0,proposer2)']
516     : --0--1----0-------00-------
516     : ['chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~didNotPromise(acceptor1)', '~promise(acceptor1,proposer0)', '~promise(acceptor1,proposer1)']
517     : -0--1-----0-------0-0------
517     : ['chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~didNotPromise(acceptor1)', '~promise(acceptor1,proposer0)', '~promise(acceptor1,proposer2)']
518     : 0--1------0--------00------
518     : ['chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~didNotPromise(acceptor1)', '~promise(acceptor1,proposer1)', '~promise(acceptor1,proposer2)']
num_forall :   0
num_exists :   0
num_literals : 0
quantified form : None
qcost : 0


=== Prime Orbit 33 =====================
size : 9
num_suborbits: 1
519 (*) : -0-------00-------------0-0
519     : ['~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~start(proposer0)', '~start(proposer2)']
520     : --0------00-------------00-
520     : ['~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~start(proposer0)', '~start(proposer1)']
521     : 0--------00--------------00
521     : ['~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~start(proposer1)', '~start(proposer2)']
522     : ----0----0-0------------0-0
522     : ['~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor2)', '~start(proposer0)', '~start(proposer2)']
523     : -----0---0-0------------00-
523     : ['~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor2)', '~start(proposer0)', '~start(proposer1)']
524     : ---0-----0-0-------------00
524     : ['~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor2)', '~start(proposer1)', '~start(proposer2)']
525     : -------0--00------------0-0
525     : ['~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~start(proposer0)', '~start(proposer2)']
526     : --------0-00------------00-
526     : ['~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~start(proposer0)', '~start(proposer1)']
527     : ------0---00-------------00
527     : ['~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~start(proposer1)', '~start(proposer2)']
num_forall :   0
num_exists :   0
num_literals : 0
quantified form : None
qcost : 0


=== Prime Orbit 34 =====================
size : 18
num_suborbits: 1
528 (*) : -------0--0-----------1-0-0
528     : ['promise(acceptor2,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor1)', '~start(proposer0)', '~start(proposer2)']
529     : --------0-0------------100-
529     : ['promise(acceptor2,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor1)', '~start(proposer0)', '~start(proposer1)']
530     : ------0---0----------1---00
530     : ['promise(acceptor2,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor1)', '~start(proposer1)', '~start(proposer2)']
531     : -------0---0-------1----0-0
531     : ['promise(acceptor1,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor2)', '~start(proposer0)', '~start(proposer2)']
532     : --------0--0--------1---00-
532     : ['promise(acceptor1,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor2)', '~start(proposer0)', '~start(proposer1)']
533     : ------0----0------1------00
533     : ['promise(acceptor1,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor2)', '~start(proposer1)', '~start(proposer2)']
534     : ----0----0------------1-0-0
534     : ['promise(acceptor2,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~didNotPromise(acceptor0)', '~start(proposer0)', '~start(proposer2)']
535     : -----0---0-------------100-
535     : ['promise(acceptor2,proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~didNotPromise(acceptor0)', '~start(proposer0)', '~start(proposer1)']
536     : ---0-----0-----------1---00
536     : ['promise(acceptor2,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~didNotPromise(acceptor0)', '~start(proposer1)', '~start(proposer2)']
537     : ----0------0----1-------0-0
537     : ['promise(acceptor0,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~didNotPromise(acceptor2)', '~start(proposer0)', '~start(proposer2)']
538     : -----0-----0-----1------00-
538     : ['promise(acceptor0,proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~didNotPromise(acceptor2)', '~start(proposer0)', '~start(proposer1)']
539     : ---0-------0---1---------00
539     : ['promise(acceptor0,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~didNotPromise(acceptor2)', '~start(proposer1)', '~start(proposer2)']
540     : -0-------0---------1----0-0
540     : ['promise(acceptor1,proposer1)', '~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~didNotPromise(acceptor0)', '~start(proposer0)', '~start(proposer2)']
541     : --0------0----------1---00-
541     : ['promise(acceptor1,proposer2)', '~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~didNotPromise(acceptor0)', '~start(proposer0)', '~start(proposer1)']
542     : 0--------0--------1------00
542     : ['promise(acceptor1,proposer0)', '~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~didNotPromise(acceptor0)', '~start(proposer1)', '~start(proposer2)']
543     : -0--------0-----1-------0-0
543     : ['promise(acceptor0,proposer1)', '~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~didNotPromise(acceptor1)', '~start(proposer0)', '~start(proposer2)']
544     : --0-------0------1------00-
544     : ['promise(acceptor0,proposer2)', '~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~didNotPromise(acceptor1)', '~start(proposer0)', '~start(proposer1)']
545     : 0---------0----1---------00
545     : ['promise(acceptor0,proposer0)', '~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~didNotPromise(acceptor1)', '~start(proposer1)', '~start(proposer2)']
num_forall :   0
num_exists :   0
num_literals : 0
quantified form : None
qcost : 0


=== Prime Orbit 35 =====================
size : 18
num_suborbits: 1
546 (*) : ----1--0--0-------------0-0
546     : ['chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor1)', '~start(proposer0)', '~start(proposer2)']
547     : -----1--0-0-------------00-
547     : ['chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor1)', '~start(proposer0)', '~start(proposer1)']
548     : ---1--0---0--------------00
548     : ['chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor1)', '~start(proposer1)', '~start(proposer2)']
549     : -1-----0---0------------0-0
549     : ['chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor2)', '~start(proposer0)', '~start(proposer2)']
550     : --1-----0--0------------00-
550     : ['chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor2)', '~start(proposer0)', '~start(proposer1)']
551     : 1-----0----0-------------00
551     : ['chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor2)', '~start(proposer1)', '~start(proposer2)']
552     : ----0--1-0--------------0-0
552     : ['chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~didNotPromise(acceptor0)', '~start(proposer0)', '~start(proposer2)']
553     : -----0--10--------------00-
553     : ['chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~didNotPromise(acceptor0)', '~start(proposer0)', '~start(proposer1)']
554     : ---0--1--0---------------00
554     : ['chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~didNotPromise(acceptor0)', '~start(proposer1)', '~start(proposer2)']
555     : -1--0------0------------0-0
555     : ['chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~didNotPromise(acceptor2)', '~start(proposer0)', '~start(proposer2)']
556     : --1--0-----0------------00-
556     : ['chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~didNotPromise(acceptor2)', '~start(proposer0)', '~start(proposer1)']
557     : 1--0-------0-------------00
557     : ['chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~didNotPromise(acceptor2)', '~start(proposer1)', '~start(proposer2)']
558     : -0-----1-0--------------0-0
558     : ['chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~didNotPromise(acceptor0)', '~start(proposer0)', '~start(proposer2)']
559     : --0-----10--------------00-
559     : ['chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~didNotPromise(acceptor0)', '~start(proposer0)', '~start(proposer1)']
560     : 0-----1--0---------------00
560     : ['chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~didNotPromise(acceptor0)', '~start(proposer1)', '~start(proposer2)']
561     : -0--1-----0-------------0-0
561     : ['chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~didNotPromise(acceptor1)', '~start(proposer0)', '~start(proposer2)']
562     : --0--1----0-------------00-
562     : ['chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~didNotPromise(acceptor1)', '~start(proposer0)', '~start(proposer1)']
563     : 0--1------0--------------00
563     : ['chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~didNotPromise(acceptor1)', '~start(proposer1)', '~start(proposer2)']
num_forall :   0
num_exists :   0
num_literals : 0
quantified form : None
qcost : 0


=== Prime Orbit 36 =====================
size : 9
num_suborbits: 1
564 (*) : --0-----0-0---1---00-------
564     : ['leader(proposer2)', '~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor1)', '~promise(acceptor1,proposer0)', '~promise(acceptor1,proposer1)']
565     : -0-----0--0--1----0-0------
565     : ['leader(proposer1)', '~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor1)', '~promise(acceptor1,proposer0)', '~promise(acceptor1,proposer2)']
566     : 0-----0---0-1------00------
566     : ['leader(proposer0)', '~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor1)', '~promise(acceptor1,proposer1)', '~promise(acceptor1,proposer2)']
567     : -----0--0--0--1------00----
567     : ['leader(proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor2)', '~promise(acceptor2,proposer0)', '~promise(acceptor2,proposer1)']
568     : ----0--0---0-1-------0-0---
568     : ['leader(proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor2)', '~promise(acceptor2,proposer0)', '~promise(acceptor2,proposer2)']
569     : ---0--0----01---------00---
569     : ['leader(proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor2)', '~promise(acceptor2,proposer1)', '~promise(acceptor2,proposer2)']
570     : --0--0---0----100----------
570     : ['leader(proposer2)', '~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~didNotPromise(acceptor0)', '~promise(acceptor0,proposer0)', '~promise(acceptor0,proposer1)']
571     : -0--0----0---1-0-0---------
571     : ['leader(proposer1)', '~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~didNotPromise(acceptor0)', '~promise(acceptor0,proposer0)', '~promise(acceptor0,proposer2)']
572     : 0--0-----0--1---00---------
572     : ['leader(proposer0)', '~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~didNotPromise(acceptor0)', '~promise(acceptor0,proposer1)', '~promise(acceptor0,proposer2)']
num_forall :   0
num_exists :   0
num_literals : 0
quantified form : None
qcost : 0


=== Prime Orbit 37 =====================
size : 18
num_suborbits: 1
573 (*) : --0-----0-0---1---0------0-
573     : ['leader(proposer2)', '~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor1)', '~promise(acceptor1,proposer0)', '~start(proposer1)']
574     : -0-----0--0--1----0-------0
574     : ['leader(proposer1)', '~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor1)', '~promise(acceptor1,proposer0)', '~start(proposer2)']
575     : --0-----0-0---1----0----0--
575     : ['leader(proposer2)', '~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor1)', '~promise(acceptor1,proposer1)', '~start(proposer0)']
576     : 0-----0---0-1------0------0
576     : ['leader(proposer0)', '~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor1)', '~promise(acceptor1,proposer1)', '~start(proposer2)']
577     : -0-----0--0--1------0---0--
577     : ['leader(proposer1)', '~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor1)', '~promise(acceptor1,proposer2)', '~start(proposer0)']
578     : 0-----0---0-1-------0----0-
578     : ['leader(proposer0)', '~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor1)', '~promise(acceptor1,proposer2)', '~start(proposer1)']
579     : -----0--0--0--1------0---0-
579     : ['leader(proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor2)', '~promise(acceptor2,proposer0)', '~start(proposer1)']
580     : ----0--0---0-1-------0----0
580     : ['leader(proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor2)', '~promise(acceptor2,proposer0)', '~start(proposer2)']
581     : -----0--0--0--1-------0-0--
581     : ['leader(proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor2)', '~promise(acceptor2,proposer1)', '~start(proposer0)']
582     : ---0--0----01---------0---0
582     : ['leader(proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor2)', '~promise(acceptor2,proposer1)', '~start(proposer2)']
583     : ----0--0---0-1---------00--
583     : ['leader(proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor2)', '~promise(acceptor2,proposer2)', '~start(proposer0)']
584     : ---0--0----01----------0-0-
584     : ['leader(proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor2)', '~promise(acceptor2,proposer2)', '~start(proposer1)']
585     : --0--0---0----10---------0-
585     : ['leader(proposer2)', '~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~didNotPromise(acceptor0)', '~promise(acceptor0,proposer0)', '~start(proposer1)']
586     : -0--0----0---1-0----------0
586     : ['leader(proposer1)', '~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~didNotPromise(acceptor0)', '~promise(acceptor0,proposer0)', '~start(proposer2)']
587     : --0--0---0----1-0-------0--
587     : ['leader(proposer2)', '~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~didNotPromise(acceptor0)', '~promise(acceptor0,proposer1)', '~start(proposer0)']
588     : 0--0-----0--1---0---------0
588     : ['leader(proposer0)', '~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~didNotPromise(acceptor0)', '~promise(acceptor0,proposer1)', '~start(proposer2)']
589     : -0--0----0---1---0------0--
589     : ['leader(proposer1)', '~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~didNotPromise(acceptor0)', '~promise(acceptor0,proposer2)', '~start(proposer0)']
590     : 0--0-----0--1----0-------0-
590     : ['leader(proposer0)', '~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~didNotPromise(acceptor0)', '~promise(acceptor0,proposer2)', '~start(proposer1)']
num_forall :   0
num_exists :   0
num_literals : 0
quantified form : None
qcost : 0


=== Prime Orbit 38 =====================
size : 18
num_suborbits: 1
591 (*) : ---0----0--0---1----1-0----
591     : ['promise(acceptor0,proposer0)', 'promise(acceptor1,proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor2)', '~promise(acceptor2,proposer1)']
592     : ---0---0---0---1---1---0---
592     : ['promise(acceptor0,proposer0)', 'promise(acceptor1,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor2)', '~promise(acceptor2,proposer2)']
593     : ----0---0--0----1---10-----
593     : ['promise(acceptor0,proposer1)', 'promise(acceptor1,proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor2)', '~promise(acceptor2,proposer0)']
594     : ----0-0----0----1-1----0---
594     : ['promise(acceptor0,proposer1)', 'promise(acceptor1,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor2)', '~promise(acceptor2,proposer2)']
595     : -----0-0---0-----1-1-0-----
595     : ['promise(acceptor0,proposer2)', 'promise(acceptor1,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor2)', '~promise(acceptor2,proposer0)']
596     : -----00----0-----11---0----
596     : ['promise(acceptor0,proposer2)', 'promise(acceptor1,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor2)', '~promise(acceptor2,proposer1)']
597     : 0-------0-0----1---0---1---
597     : ['promise(acceptor0,proposer0)', 'promise(acceptor2,proposer2)', '~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor1)', '~promise(acceptor1,proposer1)']
598     : 0------0--0----1----0-1----
598     : ['promise(acceptor0,proposer0)', 'promise(acceptor2,proposer1)', '~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor1)', '~promise(acceptor1,proposer2)']
599     : -0------0-0-----1-0----1---
599     : ['promise(acceptor0,proposer1)', 'promise(acceptor2,proposer2)', '~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor1)', '~promise(acceptor1,proposer0)']
600     : -0----0---0-----1---01-----
600     : ['promise(acceptor0,proposer1)', 'promise(acceptor2,proposer0)', '~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor1)', '~promise(acceptor1,proposer2)']
601     : --0----0--0------10---1----
601     : ['promise(acceptor0,proposer2)', 'promise(acceptor2,proposer1)', '~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor1)', '~promise(acceptor1,proposer0)']
602     : --0---0---0------1-0-1-----
602     : ['promise(acceptor0,proposer2)', 'promise(acceptor2,proposer0)', '~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor1)', '~promise(acceptor1,proposer1)']
603     : 0----0---0------0-1----1---
603     : ['promise(acceptor1,proposer0)', 'promise(acceptor2,proposer2)', '~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~didNotPromise(acceptor0)', '~promise(acceptor0,proposer1)']
604     : 0---0----0-------01---1----
604     : ['promise(acceptor1,proposer0)', 'promise(acceptor2,proposer1)', '~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~didNotPromise(acceptor0)', '~promise(acceptor0,proposer2)']
605     : -0---0---0-----0---1---1---
605     : ['promise(acceptor1,proposer1)', 'promise(acceptor2,proposer2)', '~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~didNotPromise(acceptor0)', '~promise(acceptor0,proposer0)']
606     : -0-0-----0-------0-1-1-----
606     : ['promise(acceptor1,proposer1)', 'promise(acceptor2,proposer0)', '~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~didNotPromise(acceptor0)', '~promise(acceptor0,proposer2)']
607     : --0-0----0-----0----1-1----
607     : ['promise(acceptor1,proposer2)', 'promise(acceptor2,proposer1)', '~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~didNotPromise(acceptor0)', '~promise(acceptor0,proposer0)']
608     : --00-----0------0---11-----
608     : ['promise(acceptor1,proposer2)', 'promise(acceptor2,proposer0)', '~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~didNotPromise(acceptor0)', '~promise(acceptor0,proposer1)']
num_forall :   0
num_exists :   0
num_literals : 0
quantified form : None
qcost : 0


=== Prime Orbit 39 =====================
size : 18
num_suborbits: 1
609 (*) : 0-------0-0----1-------1-0-
609     : ['promise(acceptor0,proposer0)', 'promise(acceptor2,proposer2)', '~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor1)', '~start(proposer1)']
610     : 0------0--0----1------1---0
610     : ['promise(acceptor0,proposer0)', 'promise(acceptor2,proposer1)', '~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor1)', '~start(proposer2)']
611     : -0------0-0-----1------10--
611     : ['promise(acceptor0,proposer1)', 'promise(acceptor2,proposer2)', '~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor1)', '~start(proposer0)']
612     : -0----0---0-----1----1----0
612     : ['promise(acceptor0,proposer1)', 'promise(acceptor2,proposer0)', '~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor1)', '~start(proposer2)']
613     : --0----0--0------1----1-0--
613     : ['promise(acceptor0,proposer2)', 'promise(acceptor2,proposer1)', '~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor1)', '~start(proposer0)']
614     : --0---0---0------1---1---0-
614     : ['promise(acceptor0,proposer2)', 'promise(acceptor2,proposer0)', '~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor1)', '~start(proposer1)']
615     : ---0----0--0---1----1----0-
615     : ['promise(acceptor0,proposer0)', 'promise(acceptor1,proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor2)', '~start(proposer1)']
616     : ---0---0---0---1---1------0
616     : ['promise(acceptor0,proposer0)', 'promise(acceptor1,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor2)', '~start(proposer2)']
617     : ----0---0--0----1---1---0--
617     : ['promise(acceptor0,proposer1)', 'promise(acceptor1,proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor2)', '~start(proposer0)']
618     : ----0-0----0----1-1-------0
618     : ['promise(acceptor0,proposer1)', 'promise(acceptor1,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor2)', '~start(proposer2)']
619     : -----0-0---0-----1-1----0--
619     : ['promise(acceptor0,proposer2)', 'promise(acceptor1,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor2)', '~start(proposer0)']
620     : -----00----0-----11------0-
620     : ['promise(acceptor0,proposer2)', 'promise(acceptor1,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor2)', '~start(proposer1)']
621     : 0----0---0--------1----1-0-
621     : ['promise(acceptor1,proposer0)', 'promise(acceptor2,proposer2)', '~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~didNotPromise(acceptor0)', '~start(proposer1)']
622     : 0---0----0--------1---1---0
622     : ['promise(acceptor1,proposer0)', 'promise(acceptor2,proposer1)', '~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~didNotPromise(acceptor0)', '~start(proposer2)']
623     : -0---0---0---------1---10--
623     : ['promise(acceptor1,proposer1)', 'promise(acceptor2,proposer2)', '~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~didNotPromise(acceptor0)', '~start(proposer0)']
624     : -0-0-----0---------1-1----0
624     : ['promise(acceptor1,proposer1)', 'promise(acceptor2,proposer0)', '~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~didNotPromise(acceptor0)', '~start(proposer2)']
625     : --0-0----0----------1-1-0--
625     : ['promise(acceptor1,proposer2)', 'promise(acceptor2,proposer1)', '~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~didNotPromise(acceptor0)', '~start(proposer0)']
626     : --00-----0----------11---0-
626     : ['promise(acceptor1,proposer2)', 'promise(acceptor2,proposer0)', '~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~didNotPromise(acceptor0)', '~start(proposer1)']
num_forall :   0
num_exists :   0
num_literals : 0
quantified form : None
qcost : 0


=== Prime Orbit 40 =====================
size : 18
num_suborbits: 1
627 (*) : ------0---00--------0--0-0-
627     : ['~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor1,proposer2)', '~promise(acceptor2,proposer2)', '~start(proposer1)']
628     : ------0---00-------0--0---0
628     : ['~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor1,proposer1)', '~promise(acceptor2,proposer1)', '~start(proposer2)']
629     : -------0--00--------0--00--
629     : ['~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor1,proposer2)', '~promise(acceptor2,proposer2)', '~start(proposer0)']
630     : -------0--00------0--0----0
630     : ['~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor1,proposer0)', '~promise(acceptor2,proposer0)', '~start(proposer2)']
631     : --------0-00-------0--0-0--
631     : ['~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor1,proposer1)', '~promise(acceptor2,proposer1)', '~start(proposer0)']
632     : --------0-00------0--0---0-
632     : ['~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor1,proposer0)', '~promise(acceptor2,proposer0)', '~start(proposer1)']
633     : ---0-----0-0-----0-----0-0-
633     : ['~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor2)', '~promise(acceptor0,proposer2)', '~promise(acceptor2,proposer2)', '~start(proposer1)']
634     : ---0-----0-0----0-----0---0
634     : ['~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor2)', '~promise(acceptor0,proposer1)', '~promise(acceptor2,proposer1)', '~start(proposer2)']
635     : ----0----0-0-----0-----00--
635     : ['~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor2)', '~promise(acceptor0,proposer2)', '~promise(acceptor2,proposer2)', '~start(proposer0)']
636     : ----0----0-0---0-----0----0
636     : ['~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor2)', '~promise(acceptor0,proposer0)', '~promise(acceptor2,proposer0)', '~start(proposer2)']
637     : -----0---0-0----0-----0-0--
637     : ['~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor2)', '~promise(acceptor0,proposer1)', '~promise(acceptor2,proposer1)', '~start(proposer0)']
638     : -----0---0-0---0-----0---0-
638     : ['~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor2)', '~promise(acceptor0,proposer0)', '~promise(acceptor2,proposer0)', '~start(proposer1)']
639     : 0--------00------0--0----0-
639     : ['~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~promise(acceptor0,proposer2)', '~promise(acceptor1,proposer2)', '~start(proposer1)']
640     : 0--------00-----0--0------0
640     : ['~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~promise(acceptor0,proposer1)', '~promise(acceptor1,proposer1)', '~start(proposer2)']
641     : -0-------00------0--0---0--
641     : ['~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~promise(acceptor0,proposer2)', '~promise(acceptor1,proposer2)', '~start(proposer0)']
642     : -0-------00----0--0-------0
642     : ['~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~promise(acceptor0,proposer0)', '~promise(acceptor1,proposer0)', '~start(proposer2)']
643     : --0------00-----0--0----0--
643     : ['~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~promise(acceptor0,proposer1)', '~promise(acceptor1,proposer1)', '~start(proposer0)']
644     : --0------00----0--0------0-
644     : ['~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~promise(acceptor0,proposer0)', '~promise(acceptor1,proposer0)', '~start(proposer1)']
num_forall :   0
num_exists :   0
num_literals : 0
quantified form : None
qcost : 0


=== Prime Orbit 41 =====================
size : 9
num_suborbits: 1
645 (*) : -----0--0--0--1---------00-
645     : ['leader(proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor2)', '~start(proposer0)', '~start(proposer1)']
646     : ----0--0---0-1----------0-0
646     : ['leader(proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor2)', '~start(proposer0)', '~start(proposer2)']
647     : ---0--0----01------------00
647     : ['leader(proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor2)', '~start(proposer1)', '~start(proposer2)']
648     : --0-----0-0---1---------00-
648     : ['leader(proposer2)', '~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor1)', '~start(proposer0)', '~start(proposer1)']
649     : -0-----0--0--1----------0-0
649     : ['leader(proposer1)', '~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor1)', '~start(proposer0)', '~start(proposer2)']
650     : 0-----0---0-1------------00
650     : ['leader(proposer0)', '~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor1)', '~start(proposer1)', '~start(proposer2)']
651     : --0--0---0----1---------00-
651     : ['leader(proposer2)', '~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~didNotPromise(acceptor0)', '~start(proposer0)', '~start(proposer1)']
652     : -0--0----0---1----------0-0
652     : ['leader(proposer1)', '~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~didNotPromise(acceptor0)', '~start(proposer0)', '~start(proposer2)']
653     : 0--0-----0--1------------00
653     : ['leader(proposer0)', '~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~didNotPromise(acceptor0)', '~start(proposer1)', '~start(proposer2)']
num_forall :   0
num_exists :   0
num_literals : 0
quantified form : None
qcost : 0


=== Prime Orbit 42 =====================
size : 18
num_suborbits: 1
654 (*) : -0-0--0--00----------1----0
654     : ['promise(acceptor2,proposer0)', '~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~start(proposer2)']
655     : --00--0--00----------1---0-
655     : ['promise(acceptor2,proposer0)', '~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~start(proposer1)']
656     : 0---0--0-00-----------1---0
656     : ['promise(acceptor2,proposer1)', '~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~start(proposer2)']
657     : --0-0--0-00-----------1-0--
657     : ['promise(acceptor2,proposer1)', '~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~start(proposer0)']
658     : 0----0--000------------1-0-
658     : ['promise(acceptor2,proposer2)', '~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~start(proposer1)']
659     : -0---0--000------------10--
659     : ['promise(acceptor2,proposer2)', '~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~start(proposer0)']
660     : 0---0-0--0-0------1-------0
660     : ['promise(acceptor1,proposer0)', '~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor2)', '~start(proposer2)']
661     : 0----00--0-0------1------0-
661     : ['promise(acceptor1,proposer0)', '~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor2)', '~start(proposer1)']
662     : -0-0---0-0-0-------1------0
662     : ['promise(acceptor1,proposer1)', '~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor2)', '~start(proposer2)']
663     : -0---0-0-0-0-------1----0--
663     : ['promise(acceptor1,proposer1)', '~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor2)', '~start(proposer0)']
664     : --00----00-0--------1----0-
664     : ['promise(acceptor1,proposer2)', '~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor2)', '~start(proposer1)']
665     : --0-0---00-0--------1---0--
665     : ['promise(acceptor1,proposer2)', '~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor2)', '~start(proposer0)']
666     : 0--0---0--00---1----------0
666     : ['promise(acceptor0,proposer0)', '~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~start(proposer2)']
667     : 0--0----0-00---1---------0-
667     : ['promise(acceptor0,proposer0)', '~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~start(proposer1)']
668     : -0--0-0---00----1---------0
668     : ['promise(acceptor0,proposer1)', '~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~start(proposer2)']
669     : -0--0---0-00----1-------0--
669     : ['promise(acceptor0,proposer1)', '~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~start(proposer0)']
670     : --0--00---00-----1-------0-
670     : ['promise(acceptor0,proposer2)', '~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~start(proposer1)']
671     : --0--0-0--00-----1------0--
671     : ['promise(acceptor0,proposer2)', '~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~start(proposer0)']
num_forall :   0
num_exists :   0
num_literals : 0
quantified form : None
qcost : 0


=== Prime Orbit 43 =====================
size : 36
num_suborbits: 1
672 (*) : -0----0--00----0-----1----0
672     : ['promise(acceptor2,proposer0)', '~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~promise(acceptor0,proposer0)', '~start(proposer2)']
673     : --0---0--00----0-----1---0-
673     : ['promise(acceptor2,proposer0)', '~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~promise(acceptor0,proposer0)', '~start(proposer1)']
674     : 0------0-00-----0-----1---0
674     : ['promise(acceptor2,proposer1)', '~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~promise(acceptor0,proposer1)', '~start(proposer2)']
675     : --0----0-00-----0-----1-0--
675     : ['promise(acceptor2,proposer1)', '~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~promise(acceptor0,proposer1)', '~start(proposer0)']
676     : 0-------000------0-----1-0-
676     : ['promise(acceptor2,proposer2)', '~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~promise(acceptor0,proposer2)', '~start(proposer1)']
677     : -0------000------0-----10--
677     : ['promise(acceptor2,proposer2)', '~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~promise(acceptor0,proposer2)', '~start(proposer0)']
678     : ----0-0--0-0---0--1-------0
678     : ['promise(acceptor1,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor2)', '~promise(acceptor0,proposer0)', '~start(proposer2)']
679     : -----00--0-0---0--1------0-
679     : ['promise(acceptor1,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor2)', '~promise(acceptor0,proposer0)', '~start(proposer1)']
680     : ---0---0-0-0----0--1------0
680     : ['promise(acceptor1,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor2)', '~promise(acceptor0,proposer1)', '~start(proposer2)']
681     : -----0-0-0-0----0--1----0--
681     : ['promise(acceptor1,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor2)', '~promise(acceptor0,proposer1)', '~start(proposer0)']
682     : ---0----00-0-----0--1----0-
682     : ['promise(acceptor1,proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor2)', '~promise(acceptor0,proposer2)', '~start(proposer1)']
683     : ----0---00-0-----0--1---0--
683     : ['promise(acceptor1,proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor2)', '~promise(acceptor0,proposer2)', '~start(proposer0)']
684     : -0-0-----00-------0--1----0
684     : ['promise(acceptor2,proposer0)', '~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~promise(acceptor1,proposer0)', '~start(proposer2)']
685     : --00-----00-------0--1---0-
685     : ['promise(acceptor2,proposer0)', '~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~promise(acceptor1,proposer0)', '~start(proposer1)']
686     : 0---0----00--------0--1---0
686     : ['promise(acceptor2,proposer1)', '~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~promise(acceptor1,proposer1)', '~start(proposer2)']
687     : --0-0----00--------0--1-0--
687     : ['promise(acceptor2,proposer1)', '~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~promise(acceptor1,proposer1)', '~start(proposer0)']
688     : 0----0---00---------0--1-0-
688     : ['promise(acceptor2,proposer2)', '~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~promise(acceptor1,proposer2)', '~start(proposer1)']
689     : -0---0---00---------0--10--
689     : ['promise(acceptor2,proposer2)', '~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~promise(acceptor1,proposer2)', '~start(proposer0)']
690     : ---0---0--00---1--0-------0
690     : ['promise(acceptor0,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor1,proposer0)', '~start(proposer2)']
691     : ---0----0-00---1--0------0-
691     : ['promise(acceptor0,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor1,proposer0)', '~start(proposer1)']
692     : ----0-0---00----1--0------0
692     : ['promise(acceptor0,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor1,proposer1)', '~start(proposer2)']
693     : ----0---0-00----1--0----0--
693     : ['promise(acceptor0,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor1,proposer1)', '~start(proposer0)']
694     : -----00---00-----1--0----0-
694     : ['promise(acceptor0,proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor1,proposer2)', '~start(proposer1)']
695     : -----0-0--00-----1--0---0--
695     : ['promise(acceptor0,proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor1,proposer2)', '~start(proposer0)']
696     : 0---0----0-0------1--0----0
696     : ['promise(acceptor1,proposer0)', '~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor2)', '~promise(acceptor2,proposer0)', '~start(proposer2)']
697     : 0----0---0-0------1--0---0-
697     : ['promise(acceptor1,proposer0)', '~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor2)', '~promise(acceptor2,proposer0)', '~start(proposer1)']
698     : -0-0-----0-0-------1--0---0
698     : ['promise(acceptor1,proposer1)', '~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor2)', '~promise(acceptor2,proposer1)', '~start(proposer2)']
699     : -0---0---0-0-------1--0-0--
699     : ['promise(acceptor1,proposer1)', '~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor2)', '~promise(acceptor2,proposer1)', '~start(proposer0)']
700     : --00-----0-0--------1--0-0-
700     : ['promise(acceptor1,proposer2)', '~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor2)', '~promise(acceptor2,proposer2)', '~start(proposer1)']
701     : --0-0----0-0--------1--00--
701     : ['promise(acceptor1,proposer2)', '~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor2)', '~promise(acceptor2,proposer2)', '~start(proposer0)']
702     : 0------0--00---1-----0----0
702     : ['promise(acceptor0,proposer0)', '~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor2,proposer0)', '~start(proposer2)']
703     : 0-------0-00---1-----0---0-
703     : ['promise(acceptor0,proposer0)', '~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor2,proposer0)', '~start(proposer1)']
704     : -0----0---00----1-----0---0
704     : ['promise(acceptor0,proposer1)', '~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor2,proposer1)', '~start(proposer2)']
705     : -0------0-00----1-----0-0--
705     : ['promise(acceptor0,proposer1)', '~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor2,proposer1)', '~start(proposer0)']
706     : --0---0---00-----1-----0-0-
706     : ['promise(acceptor0,proposer2)', '~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor2,proposer2)', '~start(proposer1)']
707     : --0----0--00-----1-----00--
707     : ['promise(acceptor0,proposer2)', '~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor2,proposer2)', '~start(proposer0)']
num_forall :   0
num_exists :   0
num_literals : 0
quantified form : None
qcost : 0


=== Prime Orbit 44 =====================
size : 9
num_suborbits: 1
708 (*) : ---0-----0-0----00----00---
708     : ['~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor2)', '~promise(acceptor0,proposer1)', '~promise(acceptor0,proposer2)', '~promise(acceptor2,proposer1)', '~promise(acceptor2,proposer2)']
709     : ----0----0-0---0-0---0-0---
709     : ['~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor2)', '~promise(acceptor0,proposer0)', '~promise(acceptor0,proposer2)', '~promise(acceptor2,proposer0)', '~promise(acceptor2,proposer2)']
710     : -----0---0-0---00----00----
710     : ['~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor2)', '~promise(acceptor0,proposer0)', '~promise(acceptor0,proposer1)', '~promise(acceptor2,proposer0)', '~promise(acceptor2,proposer1)']
711     : 0--------00-----00-00------
711     : ['~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~promise(acceptor0,proposer1)', '~promise(acceptor0,proposer2)', '~promise(acceptor1,proposer1)', '~promise(acceptor1,proposer2)']
712     : -0-------00----0-00-0------
712     : ['~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~promise(acceptor0,proposer0)', '~promise(acceptor0,proposer2)', '~promise(acceptor1,proposer0)', '~promise(acceptor1,proposer2)']
713     : --0------00----00-00-------
713     : ['~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~promise(acceptor0,proposer0)', '~promise(acceptor0,proposer1)', '~promise(acceptor1,proposer0)', '~promise(acceptor1,proposer1)']
714     : ------0---00-------00-00---
714     : ['~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor1,proposer1)', '~promise(acceptor1,proposer2)', '~promise(acceptor2,proposer1)', '~promise(acceptor2,proposer2)']
715     : -------0--00------0-00-0---
715     : ['~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor1,proposer0)', '~promise(acceptor1,proposer2)', '~promise(acceptor2,proposer0)', '~promise(acceptor2,proposer2)']
716     : --------0-00------00-00----
716     : ['~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor1,proposer0)', '~promise(acceptor1,proposer1)', '~promise(acceptor2,proposer0)', '~promise(acceptor2,proposer1)']
num_forall :   0
num_exists :   0
num_literals : 0
quantified form : None
qcost : 0


=== Prime Orbit 45 =====================
size : 18
num_suborbits: 1
717 (*) : --0--0-0--00-----10--0-----
717     : ['promise(acceptor0,proposer2)', '~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor1,proposer0)', '~promise(acceptor2,proposer0)']
718     : -0--0---0-00----1-0--0-----
718     : ['promise(acceptor0,proposer1)', '~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor1,proposer0)', '~promise(acceptor2,proposer0)']
719     : --0--00---00-----1-0--0----
719     : ['promise(acceptor0,proposer2)', '~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor1,proposer1)', '~promise(acceptor2,proposer1)']
720     : 0--0----0-00---1---0--0----
720     : ['promise(acceptor0,proposer0)', '~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor1,proposer1)', '~promise(acceptor2,proposer1)']
721     : -0--0-0---00----1---0--0---
721     : ['promise(acceptor0,proposer1)', '~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor1,proposer2)', '~promise(acceptor2,proposer2)']
722     : 0--0---0--00---1----0--0---
722     : ['promise(acceptor0,proposer0)', '~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor1,proposer2)', '~promise(acceptor2,proposer2)']
723     : --0-0---00-0---0----10-----
723     : ['promise(acceptor1,proposer2)', '~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor2)', '~promise(acceptor0,proposer0)', '~promise(acceptor2,proposer0)']
724     : -0---0-0-0-0---0---1-0-----
724     : ['promise(acceptor1,proposer1)', '~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor2)', '~promise(acceptor0,proposer0)', '~promise(acceptor2,proposer0)']
725     : --00----00-0----0---1-0----
725     : ['promise(acceptor1,proposer2)', '~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor2)', '~promise(acceptor0,proposer1)', '~promise(acceptor2,proposer1)']
726     : 0----00--0-0----0-1---0----
726     : ['promise(acceptor1,proposer0)', '~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor2)', '~promise(acceptor0,proposer1)', '~promise(acceptor2,proposer1)']
727     : -0-0---0-0-0-----0-1---0---
727     : ['promise(acceptor1,proposer1)', '~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor2)', '~promise(acceptor0,proposer2)', '~promise(acceptor2,proposer2)']
728     : 0---0-0--0-0-----01----0---
728     : ['promise(acceptor1,proposer0)', '~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor2)', '~promise(acceptor0,proposer2)', '~promise(acceptor2,proposer2)']
729     : -0---0--000----0--0----1---
729     : ['promise(acceptor2,proposer2)', '~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~promise(acceptor0,proposer0)', '~promise(acceptor1,proposer0)']
730     : --0-0--0-00----0--0---1----
730     : ['promise(acceptor2,proposer1)', '~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~promise(acceptor0,proposer0)', '~promise(acceptor1,proposer0)']
731     : 0----0--000-----0--0---1---
731     : ['promise(acceptor2,proposer2)', '~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~promise(acceptor0,proposer1)', '~promise(acceptor1,proposer1)']
732     : --00--0--00-----0--0-1-----
732     : ['promise(acceptor2,proposer0)', '~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~promise(acceptor0,proposer1)', '~promise(acceptor1,proposer1)']
733     : 0---0--0-00------0--0-1----
733     : ['promise(acceptor2,proposer1)', '~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~promise(acceptor0,proposer2)', '~promise(acceptor1,proposer2)']
734     : -0-0--0--00------0--01-----
734     : ['promise(acceptor2,proposer0)', '~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~promise(acceptor0,proposer2)', '~promise(acceptor1,proposer2)']
num_forall :   0
num_exists :   0
num_literals : 0
quantified form : None
qcost : 0


=== Prime Orbit 46 =====================
size : 36
num_suborbits: 1
735 (*) : -----0-0--00-----10-00-----
735     : ['promise(acceptor0,proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor1,proposer0)', '~promise(acceptor1,proposer2)', '~promise(acceptor2,proposer0)']
736     : ----0---0-00----1-00-0-----
736     : ['promise(acceptor0,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor1,proposer0)', '~promise(acceptor1,proposer1)', '~promise(acceptor2,proposer0)']
737     : -----00---00-----1-00-0----
737     : ['promise(acceptor0,proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor1,proposer1)', '~promise(acceptor1,proposer2)', '~promise(acceptor2,proposer1)']
738     : ---0----0-00---1--00--0----
738     : ['promise(acceptor0,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor1,proposer0)', '~promise(acceptor1,proposer1)', '~promise(acceptor2,proposer1)']
739     : ----0-0---00----1--00--0---
739     : ['promise(acceptor0,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor1,proposer1)', '~promise(acceptor1,proposer2)', '~promise(acceptor2,proposer2)']
740     : ---0---0--00---1--0-0--0---
740     : ['promise(acceptor0,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor1,proposer0)', '~promise(acceptor1,proposer2)', '~promise(acceptor2,proposer2)']
741     : --0----0--00-----10--0-0---
741     : ['promise(acceptor0,proposer2)', '~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor1,proposer0)', '~promise(acceptor2,proposer0)', '~promise(acceptor2,proposer2)']
742     : -0------0-00----1-0--00----
742     : ['promise(acceptor0,proposer1)', '~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor1,proposer0)', '~promise(acceptor2,proposer0)', '~promise(acceptor2,proposer1)']
743     : --0---0---00-----1-0--00---
743     : ['promise(acceptor0,proposer2)', '~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor1,proposer1)', '~promise(acceptor2,proposer1)', '~promise(acceptor2,proposer2)']
744     : 0-------0-00---1---0-00----
744     : ['promise(acceptor0,proposer0)', '~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor1,proposer1)', '~promise(acceptor2,proposer0)', '~promise(acceptor2,proposer1)']
745     : -0----0---00----1---0-00---
745     : ['promise(acceptor0,proposer1)', '~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor1,proposer2)', '~promise(acceptor2,proposer1)', '~promise(acceptor2,proposer2)']
746     : 0------0--00---1----00-0---
746     : ['promise(acceptor0,proposer0)', '~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor1,proposer2)', '~promise(acceptor2,proposer0)', '~promise(acceptor2,proposer2)']
747     : ----0---00-0---0-0--10-----
747     : ['promise(acceptor1,proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor2)', '~promise(acceptor0,proposer0)', '~promise(acceptor0,proposer2)', '~promise(acceptor2,proposer0)']
748     : -----0-0-0-0---00--1-0-----
748     : ['promise(acceptor1,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor2)', '~promise(acceptor0,proposer0)', '~promise(acceptor0,proposer1)', '~promise(acceptor2,proposer0)']
749     : ---0----00-0----00--1-0----
749     : ['promise(acceptor1,proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor2)', '~promise(acceptor0,proposer1)', '~promise(acceptor0,proposer2)', '~promise(acceptor2,proposer1)']
750     : -----00--0-0---00-1---0----
750     : ['promise(acceptor1,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor2)', '~promise(acceptor0,proposer0)', '~promise(acceptor0,proposer1)', '~promise(acceptor2,proposer1)']
751     : ---0---0-0-0----00-1---0---
751     : ['promise(acceptor1,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor2)', '~promise(acceptor0,proposer1)', '~promise(acceptor0,proposer2)', '~promise(acceptor2,proposer2)']
752     : ----0-0--0-0---0-01----0---
752     : ['promise(acceptor1,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor2)', '~promise(acceptor0,proposer0)', '~promise(acceptor0,proposer2)', '~promise(acceptor2,proposer2)']
753     : --0-0----0-0---0----10-0---
753     : ['promise(acceptor1,proposer2)', '~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor2)', '~promise(acceptor0,proposer0)', '~promise(acceptor2,proposer0)', '~promise(acceptor2,proposer2)']
754     : -0---0---0-0---0---1-00----
754     : ['promise(acceptor1,proposer1)', '~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor2)', '~promise(acceptor0,proposer0)', '~promise(acceptor2,proposer0)', '~promise(acceptor2,proposer1)']
755     : --00-----0-0----0---1-00---
755     : ['promise(acceptor1,proposer2)', '~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor2)', '~promise(acceptor0,proposer1)', '~promise(acceptor2,proposer1)', '~promise(acceptor2,proposer2)']
756     : 0----0---0-0----0-1--00----
756     : ['promise(acceptor1,proposer0)', '~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor2)', '~promise(acceptor0,proposer1)', '~promise(acceptor2,proposer0)', '~promise(acceptor2,proposer1)']
757     : -0-0-----0-0-----0-1--00---
757     : ['promise(acceptor1,proposer1)', '~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor2)', '~promise(acceptor0,proposer2)', '~promise(acceptor2,proposer1)', '~promise(acceptor2,proposer2)']
758     : 0---0----0-0-----01--0-0---
758     : ['promise(acceptor1,proposer0)', '~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor2)', '~promise(acceptor0,proposer2)', '~promise(acceptor2,proposer0)', '~promise(acceptor2,proposer2)']
759     : -0------000----0-00----1---
759     : ['promise(acceptor2,proposer2)', '~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~promise(acceptor0,proposer0)', '~promise(acceptor0,proposer2)', '~promise(acceptor1,proposer0)']
760     : --0----0-00----00-0---1----
760     : ['promise(acceptor2,proposer1)', '~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~promise(acceptor0,proposer0)', '~promise(acceptor0,proposer1)', '~promise(acceptor1,proposer0)']
761     : 0-------000-----00-0---1---
761     : ['promise(acceptor2,proposer2)', '~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~promise(acceptor0,proposer1)', '~promise(acceptor0,proposer2)', '~promise(acceptor1,proposer1)']
762     : --0---0--00----00--0-1-----
762     : ['promise(acceptor2,proposer0)', '~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~promise(acceptor0,proposer0)', '~promise(acceptor0,proposer1)', '~promise(acceptor1,proposer1)']
763     : 0------0-00-----00--0-1----
763     : ['promise(acceptor2,proposer1)', '~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~promise(acceptor0,proposer1)', '~promise(acceptor0,proposer2)', '~promise(acceptor1,proposer2)']
764     : -0----0--00----0-0--01-----
764     : ['promise(acceptor2,proposer0)', '~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~promise(acceptor0,proposer0)', '~promise(acceptor0,proposer2)', '~promise(acceptor1,proposer2)']
765     : -0---0---00----0--0-0--1---
765     : ['promise(acceptor2,proposer2)', '~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~promise(acceptor0,proposer0)', '~promise(acceptor1,proposer0)', '~promise(acceptor1,proposer2)']
766     : --0-0----00----0--00--1----
766     : ['promise(acceptor2,proposer1)', '~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~promise(acceptor0,proposer0)', '~promise(acceptor1,proposer0)', '~promise(acceptor1,proposer1)']
767     : 0----0---00-----0--00--1---
767     : ['promise(acceptor2,proposer2)', '~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~promise(acceptor0,proposer1)', '~promise(acceptor1,proposer1)', '~promise(acceptor1,proposer2)']
768     : --00-----00-----0-00-1-----
768     : ['promise(acceptor2,proposer0)', '~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~promise(acceptor0,proposer1)', '~promise(acceptor1,proposer0)', '~promise(acceptor1,proposer1)']
769     : 0---0----00------0-00-1----
769     : ['promise(acceptor2,proposer1)', '~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~promise(acceptor0,proposer2)', '~promise(acceptor1,proposer1)', '~promise(acceptor1,proposer2)']
770     : -0-0-----00------00-01-----
770     : ['promise(acceptor2,proposer0)', '~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~promise(acceptor0,proposer2)', '~promise(acceptor1,proposer0)', '~promise(acceptor1,proposer2)']
num_forall :   0
num_exists :   0
num_literals : 0
quantified form : None
qcost : 0


=== Prime Orbit 47 =====================
size : 18
num_suborbits: 1
771 (*) : 0--0----0000-----0-------0-
771     : ['~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor0,proposer2)', '~start(proposer1)']
772     : 0--0---0-000----0---------0
772     : ['~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor0,proposer1)', '~start(proposer2)']
773     : -0--0---0000-----0------0--
773     : ['~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor0,proposer2)', '~start(proposer0)']
774     : -0--0-0--000---0----------0
774     : ['~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor0,proposer0)', '~start(proposer2)']
775     : --0--0-0-000----0-------0--
775     : ['~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor0,proposer1)', '~start(proposer0)']
776     : --0--00--000---0---------0-
776     : ['~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor0,proposer0)', '~start(proposer1)']
777     : 0----00--000--------0----0-
777     : ['~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor1,proposer2)', '~start(proposer1)']
778     : 0---0-0--000-------0------0
778     : ['~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor1,proposer1)', '~start(proposer2)']
779     : -0---0-0-000--------0---0--
779     : ['~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor1,proposer2)', '~start(proposer0)']
780     : -0-0---0-000------0-------0
780     : ['~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor1,proposer0)', '~start(proposer2)']
781     : --0-0---0000-------0----0--
781     : ['~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor1,proposer1)', '~start(proposer0)']
782     : --00----0000------0------0-
782     : ['~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor1,proposer0)', '~start(proposer1)']
783     : --00--0--000-----------0-0-
783     : ['~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor2,proposer2)', '~start(proposer1)']
784     : -0-0--0--000----------0---0
784     : ['~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor2,proposer1)', '~start(proposer2)']
785     : --0-0--0-000-----------00--
785     : ['~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor2,proposer2)', '~start(proposer0)']
786     : 0---0--0-000---------0----0
786     : ['~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor2,proposer0)', '~start(proposer2)']
787     : -0---0--0000----------0-0--
787     : ['~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor2,proposer1)', '~start(proposer0)']
788     : 0----0--0000---------0---0-
788     : ['~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor2,proposer0)', '~start(proposer1)']
num_forall :   0
num_exists :   0
num_literals : 0
quantified form : None
qcost : 0


=== Prime Orbit 48 =====================
size : 18
num_suborbits: 1
789 (*) : 0-------0000-----0---0---0-
789     : ['~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor0,proposer2)', '~promise(acceptor2,proposer0)', '~start(proposer1)']
790     : 0------0-000----0----0----0
790     : ['~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor0,proposer1)', '~promise(acceptor2,proposer0)', '~start(proposer2)']
791     : -0------0000-----0----0-0--
791     : ['~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor0,proposer2)', '~promise(acceptor2,proposer1)', '~start(proposer0)']
792     : -0----0--000---0------0---0
792     : ['~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor0,proposer0)', '~promise(acceptor2,proposer1)', '~start(proposer2)']
793     : --0----0-000----0------00--
793     : ['~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor0,proposer1)', '~promise(acceptor2,proposer2)', '~start(proposer0)']
794     : --0---0--000---0-------0-0-
794     : ['~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor0,proposer0)', '~promise(acceptor2,proposer2)', '~start(proposer1)']
795     : ---0----0000-----00------0-
795     : ['~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor0,proposer2)', '~promise(acceptor1,proposer0)', '~start(proposer1)']
796     : ---0---0-000----0-0-------0
796     : ['~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor0,proposer1)', '~promise(acceptor1,proposer0)', '~start(proposer2)']
797     : ----0---0000-----0-0----0--
797     : ['~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor0,proposer2)', '~promise(acceptor1,proposer1)', '~start(proposer0)']
798     : ----0-0--000---0---0------0
798     : ['~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor0,proposer0)', '~promise(acceptor1,proposer1)', '~start(proposer2)']
799     : -----0-0-000----0---0---0--
799     : ['~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor0,proposer1)', '~promise(acceptor1,proposer2)', '~start(proposer0)']
800     : -----00--000---0----0----0-
800     : ['~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor0,proposer0)', '~promise(acceptor1,proposer2)', '~start(proposer1)']
801     : 0----0---000--------00---0-
801     : ['~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor1,proposer2)', '~promise(acceptor2,proposer0)', '~start(proposer1)']
802     : 0---0----000-------0-0----0
802     : ['~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor1,proposer1)', '~promise(acceptor2,proposer0)', '~start(proposer2)']
803     : -0---0---000--------0-0-0--
803     : ['~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor1,proposer2)', '~promise(acceptor2,proposer1)', '~start(proposer0)']
804     : -0-0-----000------0---0---0
804     : ['~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor1,proposer0)', '~promise(acceptor2,proposer1)', '~start(proposer2)']
805     : --0-0----000-------0---00--
805     : ['~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor1,proposer1)', '~promise(acceptor2,proposer2)', '~start(proposer0)']
806     : --00-----000------0----0-0-
806     : ['~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor1,proposer0)', '~promise(acceptor2,proposer2)', '~start(proposer1)']
num_forall :   0
num_exists :   0
num_literals : 0
quantified form : None
qcost : 0


=== Prime Orbit 49 =====================
size : 3
num_suborbits: 1
807 (*) : 0-00-00-0000-------------0-
807     : ['~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~start(proposer1)']
808     : 00-00-00-000--------------0
808     : ['~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~start(proposer2)']
809     : -00-00-00000------------0--
809     : ['~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~start(proposer0)']
num_forall :   0
num_exists :   0
num_literals : 0
quantified form : None
qcost : 0


=== Prime Orbit 50 =====================
size : 18
num_suborbits: 1
810 (*) : 0---0-0--000-----0-00--0---
810     : ['~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor0,proposer2)', '~promise(acceptor1,proposer1)', '~promise(acceptor1,proposer2)', '~promise(acceptor2,proposer2)']
811     : 0----00--000----0--00-0----
811     : ['~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor0,proposer1)', '~promise(acceptor1,proposer1)', '~promise(acceptor1,proposer2)', '~promise(acceptor2,proposer1)']
812     : -0-0---0-000-----00-0--0---
812     : ['~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor0,proposer2)', '~promise(acceptor1,proposer0)', '~promise(acceptor1,proposer2)', '~promise(acceptor2,proposer2)']
813     : -0---0-0-000---0--0-00-----
813     : ['~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor0,proposer0)', '~promise(acceptor1,proposer0)', '~promise(acceptor1,proposer2)', '~promise(acceptor2,proposer0)']
814     : --00----0000----0-00--0----
814     : ['~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor0,proposer1)', '~promise(acceptor1,proposer0)', '~promise(acceptor1,proposer1)', '~promise(acceptor2,proposer1)']
815     : --0-0---0000---0--00-0-----
815     : ['~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor0,proposer0)', '~promise(acceptor1,proposer0)', '~promise(acceptor1,proposer1)', '~promise(acceptor2,proposer0)']
816     : -0-0--0--000-----0--0-00---
816     : ['~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor0,proposer2)', '~promise(acceptor1,proposer2)', '~promise(acceptor2,proposer1)', '~promise(acceptor2,proposer2)']
817     : --00--0--000----0--0--00---
817     : ['~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor0,proposer1)', '~promise(acceptor1,proposer1)', '~promise(acceptor2,proposer1)', '~promise(acceptor2,proposer2)']
818     : 0---0--0-000-----0--00-0---
818     : ['~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor0,proposer2)', '~promise(acceptor1,proposer2)', '~promise(acceptor2,proposer0)', '~promise(acceptor2,proposer2)']
819     : --0-0--0-000---0--0--0-0---
819     : ['~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor0,proposer0)', '~promise(acceptor1,proposer0)', '~promise(acceptor2,proposer0)', '~promise(acceptor2,proposer2)']
820     : 0----0--0000----0--0-00----
820     : ['~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor0,proposer1)', '~promise(acceptor1,proposer1)', '~promise(acceptor2,proposer0)', '~promise(acceptor2,proposer1)']
821     : -0---0--0000---0--0--00----
821     : ['~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor0,proposer0)', '~promise(acceptor1,proposer0)', '~promise(acceptor2,proposer0)', '~promise(acceptor2,proposer1)']
822     : 0--0---0-000----00--0--0---
822     : ['~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor0,proposer1)', '~promise(acceptor0,proposer2)', '~promise(acceptor1,proposer2)', '~promise(acceptor2,proposer2)']
823     : 0--0----0000----00-0--0----
823     : ['~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor0,proposer1)', '~promise(acceptor0,proposer2)', '~promise(acceptor1,proposer1)', '~promise(acceptor2,proposer1)']
824     : -0--0-0--000---0-0--0--0---
824     : ['~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor0,proposer0)', '~promise(acceptor0,proposer2)', '~promise(acceptor1,proposer2)', '~promise(acceptor2,proposer2)']
825     : -0--0---0000---0-00--0-----
825     : ['~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor0,proposer0)', '~promise(acceptor0,proposer2)', '~promise(acceptor1,proposer0)', '~promise(acceptor2,proposer0)']
826     : --0--00--000---00--0--0----
826     : ['~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor0,proposer0)', '~promise(acceptor0,proposer1)', '~promise(acceptor1,proposer1)', '~promise(acceptor2,proposer1)']
827     : --0--0-0-000---00-0--0-----
827     : ['~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor0,proposer0)', '~promise(acceptor0,proposer1)', '~promise(acceptor1,proposer0)', '~promise(acceptor2,proposer0)']
num_forall :   0
num_exists :   0
num_literals : 0
quantified form : None
qcost : 0


=== Prime Orbit 51 =====================
size : 18
num_suborbits: 1
828 (*) : ----0-0--000---0-0-00--0---
828     : ['~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor0,proposer0)', '~promise(acceptor0,proposer2)', '~promise(acceptor1,proposer1)', '~promise(acceptor1,proposer2)', '~promise(acceptor2,proposer2)']
829     : -----00--000---00--00-0----
829     : ['~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor0,proposer0)', '~promise(acceptor0,proposer1)', '~promise(acceptor1,proposer1)', '~promise(acceptor1,proposer2)', '~promise(acceptor2,proposer1)']
830     : ---0---0-000----000-0--0---
830     : ['~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor0,proposer1)', '~promise(acceptor0,proposer2)', '~promise(acceptor1,proposer0)', '~promise(acceptor1,proposer2)', '~promise(acceptor2,proposer2)']
831     : -----0-0-000---00-0-00-----
831     : ['~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor0,proposer0)', '~promise(acceptor0,proposer1)', '~promise(acceptor1,proposer0)', '~promise(acceptor1,proposer2)', '~promise(acceptor2,proposer0)']
832     : ---0----0000----0000--0----
832     : ['~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor0,proposer1)', '~promise(acceptor0,proposer2)', '~promise(acceptor1,proposer0)', '~promise(acceptor1,proposer1)', '~promise(acceptor2,proposer1)']
833     : ----0---0000---0-000-0-----
833     : ['~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor0,proposer0)', '~promise(acceptor0,proposer2)', '~promise(acceptor1,proposer0)', '~promise(acceptor1,proposer1)', '~promise(acceptor2,proposer0)']
834     : -0----0--000---0-0--0-00---
834     : ['~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor0,proposer0)', '~promise(acceptor0,proposer2)', '~promise(acceptor1,proposer2)', '~promise(acceptor2,proposer1)', '~promise(acceptor2,proposer2)']
835     : --0---0--000---00--0--00---
835     : ['~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor0,proposer0)', '~promise(acceptor0,proposer1)', '~promise(acceptor1,proposer1)', '~promise(acceptor2,proposer1)', '~promise(acceptor2,proposer2)']
836     : 0------0-000----00--00-0---
836     : ['~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor0,proposer1)', '~promise(acceptor0,proposer2)', '~promise(acceptor1,proposer2)', '~promise(acceptor2,proposer0)', '~promise(acceptor2,proposer2)']
837     : --0----0-000---00-0--0-0---
837     : ['~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor0,proposer0)', '~promise(acceptor0,proposer1)', '~promise(acceptor1,proposer0)', '~promise(acceptor2,proposer0)', '~promise(acceptor2,proposer2)']
838     : 0-------0000----00-0-00----
838     : ['~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor0,proposer1)', '~promise(acceptor0,proposer2)', '~promise(acceptor1,proposer1)', '~promise(acceptor2,proposer0)', '~promise(acceptor2,proposer1)']
839     : -0------0000---0-00--00----
839     : ['~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor0,proposer0)', '~promise(acceptor0,proposer2)', '~promise(acceptor1,proposer0)', '~promise(acceptor2,proposer0)', '~promise(acceptor2,proposer1)']
840     : -0-0-----000-----00-0-00---
840     : ['~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor0,proposer2)', '~promise(acceptor1,proposer0)', '~promise(acceptor1,proposer2)', '~promise(acceptor2,proposer1)', '~promise(acceptor2,proposer2)']
841     : --00-----000----0-00--00---
841     : ['~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor0,proposer1)', '~promise(acceptor1,proposer0)', '~promise(acceptor1,proposer1)', '~promise(acceptor2,proposer1)', '~promise(acceptor2,proposer2)']
842     : 0---0----000-----0-000-0---
842     : ['~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor0,proposer2)', '~promise(acceptor1,proposer1)', '~promise(acceptor1,proposer2)', '~promise(acceptor2,proposer0)', '~promise(acceptor2,proposer2)']
843     : --0-0----000---0--00-0-0---
843     : ['~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor0,proposer0)', '~promise(acceptor1,proposer0)', '~promise(acceptor1,proposer1)', '~promise(acceptor2,proposer0)', '~promise(acceptor2,proposer2)']
844     : 0----0---000----0--0000----
844     : ['~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor0,proposer1)', '~promise(acceptor1,proposer1)', '~promise(acceptor1,proposer2)', '~promise(acceptor2,proposer0)', '~promise(acceptor2,proposer1)']
845     : -0---0---000---0--0-000----
845     : ['~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor0,proposer0)', '~promise(acceptor1,proposer0)', '~promise(acceptor1,proposer2)', '~promise(acceptor2,proposer0)', '~promise(acceptor2,proposer1)']
num_forall :   0
num_exists :   0
num_literals : 0
quantified form : None
qcost : 0


=== Prime Orbit 52 =====================
size : 3
num_suborbits: 1
846 (*) : 0-00-00-0000----0--0--0----
846     : ['~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor0,proposer1)', '~promise(acceptor1,proposer1)', '~promise(acceptor2,proposer1)']
847     : 00-00-00-000-----0--0--0---
847     : ['~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor0,proposer2)', '~promise(acceptor1,proposer2)', '~promise(acceptor2,proposer2)']
848     : -00-00-00000---0--0--0-----
848     : ['~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor0,proposer0)', '~promise(acceptor1,proposer0)', '~promise(acceptor2,proposer0)']
num_forall :   0
num_exists :   0
num_literals : 0
quantified form : None
qcost : 0



[PRIME NOTE]: number of orbits after merging: 53

[PRIME NOTE]: number of orbits before merging: 55

[PRIME NOTE]: number of primes: 849

[QRM NOTE]: Time elapsed since start: 8.877 seconds

[QRM NOTE]: Time elapsed since last: 0.477 seconds

[QRM NOTE]: Peak memory: 2516998 bytes


=========================================================================================================

	[RED]: PRIME REDUCTION on [ivybench/sym_quorum/ivy/simple-election: acceptor=3,proposer=3]

=========================================================================================================

definition primes: {0, 1, 32, 38, 8, 44, 45, 14, 46, 50, 51, 52, 21, 22, 24, 29}


New level: 0
 pending : [2, 3, 4, 5, 6, 7, 9, 10, 11, 12, 13, 15, 16, 17, 18, 19, 20, 23, 25, 26, 27, 28, 30, 31, 33, 34, 35, 36, 37, 39, 40, 41, 42, 43, 47, 48, 49]
 solution : []


Before reduction : 
 pending  : [2, 3, 4, 5, 6, 7, 9, 10, 11, 12, 13, 15, 16, 17, 18, 19, 20, 23, 25, 26, 27, 28, 30, 31, 33, 34, 35, 36, 37, 39, 40, 41, 42, 43, 47, 48, 49]
 solution : []

Essensial at level 0 : {7}

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 1048576), (3, 17179869184), (4, 17179869184), (5, 134217728), (6, 0), (7, -1), (8, -1), (9, 1048576), (10, 0), (11, 33554432), (12, 67108864), (13, 524288), (14, -1), (15, 1114112), (16, 2147483648), (17, 16777216), (18, 1073741824), (19, 8388608), (20, 262144), (21, -1), (22, -1), (23, 134217728), (24, -1), (25, 4194304), (26, 4294967296), (27, 1073741824), (28, 4294967296), (29, -1), (30, 1048576), (31, 16384), (32, -1), (33, 2147483648), (34, 4194304), (35, 32768), (36, 4194304), (37, 268435456), (38, -1), (39, 16384), (40, 134217728), (41, 1073741824), (42, 524288), (43, 524288), (44, -1), (45, -1), (46, -1), (47, 67108864), (48, 16777216), (49, 67108864), (50, -1), (51, -1), (52, -1)]

Covered at level 0 : {10, 6}

After reduction : 
 pending  : [2, 3, 4, 5, 9, 11, 12, 13, 15, 16, 17, 18, 19, 20, 23, 25, 26, 27, 28, 30, 31, 33, 34, 35, 36, 37, 39, 40, 41, 42, 43, 47, 48, 49]
 solution : [7]


Before reduction : 
 pending  : [2, 3, 4, 5, 9, 11, 12, 13, 15, 16, 17, 18, 19, 20, 23, 25, 26, 27, 28, 30, 31, 33, 34, 35, 36, 37, 39, 40, 41, 42, 43, 47, 48, 49]
 solution : [7]

Essensial at level 0 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 1048576), (3, 17179869184), (4, 17179869184), (5, 134217728), (6, 0), (7, -1), (8, -1), (9, 1048576), (10, 0), (11, 33554432), (12, 67108864), (13, 524288), (14, -1), (15, 1114112), (16, 2147483648), (17, 16777216), (18, 1073741824), (19, 8388608), (20, 262144), (21, -1), (22, -1), (23, 134217728), (24, -1), (25, 4194304), (26, 4294967296), (27, 1073741824), (28, 4294967296), (29, -1), (30, 1048576), (31, 16384), (32, -1), (33, 2147483648), (34, 4194304), (35, 32768), (36, 4194304), (37, 268435456), (38, -1), (39, 16384), (40, 134217728), (41, 1073741824), (42, 524288), (43, 524288), (44, -1), (45, -1), (46, -1), (47, 67108864), (48, 16777216), (49, 67108864), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 1048576), (3, 17179869184), (4, 17179869184), (5, 134217728), (6, -1), (7, -1), (8, -1), (9, 1048576), (10, -1), (11, 33554432), (12, 67108864), (13, 524288), (14, -1), (15, 1114112), (16, 2147483648), (17, 16777216), (18, 1073741824), (19, 8388608), (20, 262144), (21, -1), (22, -1), (23, 134217728), (24, -1), (25, 4194304), (26, 4294967296), (27, 1073741824), (28, 4294967296), (29, -1), (30, 1048576), (31, 16384), (32, -1), (33, 2147483648), (34, 4194304), (35, 32768), (36, 4194304), (37, 268435456), (38, -1), (39, 16384), (40, 134217728), (41, 1073741824), (42, 524288), (43, 524288), (44, -1), (45, -1), (46, -1), (47, 67108864), (48, 16777216), (49, 67108864), (50, -1), (51, -1), (52, -1)]

Covered at level 0 : set()

After reduction : 
 pending  : [2, 3, 4, 5, 9, 11, 12, 13, 15, 16, 17, 18, 19, 20, 23, 25, 26, 27, 28, 30, 31, 33, 34, 35, 36, 37, 39, 40, 41, 42, 43, 47, 48, 49]
 solution : [7]

[QRM NOTE]: Time elapsed since start: 8.988 seconds

[QRM NOTE]: Time elapsed since last: 0.111 seconds

[QRM NOTE]: Peak memory: 1307377 bytes


=============================================================================================================

	[QI]: Quantifier Inference on [ivybench/sym_quorum/ivy/simple-election: acceptor=3,proposer=3]

=============================================================================================================


---------- quantifier_inference ----------


=== Prime Orbit 7 =====================
size : 9
num_suborbits: 1
96 (*) : ---------------------11----
96     : ['promise(acceptor2,proposer0)', 'promise(acceptor2,proposer1)']
97     : ---------------------1-1---
97     : ['promise(acceptor2,proposer0)', 'promise(acceptor2,proposer2)']
98     : ----------------------11---
98     : ['promise(acceptor2,proposer1)', 'promise(acceptor2,proposer2)']
99     : ------------------11-------
99     : ['promise(acceptor1,proposer0)', 'promise(acceptor1,proposer1)']
100     : ------------------1-1------
100     : ['promise(acceptor1,proposer0)', 'promise(acceptor1,proposer2)']
101     : -------------------11------
101     : ['promise(acceptor1,proposer1)', 'promise(acceptor1,proposer2)']
102     : ---------------11----------
102     : ['promise(acceptor0,proposer0)', 'promise(acceptor0,proposer1)']
103     : ---------------1-1---------
103     : ['promise(acceptor0,proposer0)', 'promise(acceptor0,proposer2)']
104     : ----------------11---------
104     : ['promise(acceptor0,proposer1)', 'promise(acceptor0,proposer2)']
num_forall :   0
num_exists :   0
num_literals : 0
quantified form : None
qcost : 0




---------- QPrime ----------


---------- ConstArgBinding ----------

terms: ['promise(acceptor2,proposer0)', 'promise(acceptor2,proposer1)']

sign_func_name2args: {'0$promise': [(Const('acceptor2', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Const('proposer0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))), (Const('acceptor2', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Const('proposer1', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))))]}

const2sigs: {Const('acceptor2', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))): [acceptor$0$promise$0$0, acceptor$0$promise$0$1], Const('proposer0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))): [proposer$0$promise$1$0], Const('proposer1', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))): [proposer$0$promise$1$1]}

sig2const: {'acceptor$0$promise$0$0': Const('acceptor2', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), 'proposer$0$promise$1$0': Const('proposer0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))), 'acceptor$0$promise$0$1': Const('acceptor2', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), 'proposer$0$promise$1$1': Const('proposer1', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))}


---------- ArgPartition ----------

sort2class_sigs: {EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')): [acceptor$0$promise$0$0; acceptor$0$promise$0$1], EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')): [proposer$0$promise$1$0, proposer$0$promise$1$1]}

sort2part_sig: {EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')): acceptor$0$promise$0$0; acceptor$0$promise$0$1, EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')): proposer$0$promise$1$0 | proposer$0$promise$1$1}

part_sig: ('acceptor$0$promise$0$0; acceptor$0$promise$0$1', 'proposer$0$promise$1$0 | proposer$0$promise$1$1')


---------- SigGenerator ----------

terms:  ['promise(acceptor2,proposer0)', 'promise(acceptor2,proposer1)']

func_name2symbol:  {'promise': Const('promise', FunctionSort(EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')), EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')), BooleanSort()))}

func_name2args_sort:  {'promise': (EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')), EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))}

sign_func_name2count:  {'0$promise': 2}


---------- ProductArgPartition ----------

sort2class_sigs: {EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')): [acceptor$0$promise$0$0; acceptor$0$promise$0$1], EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')): [proposer$0$promise$1$0, proposer$0$promise$1$1]}

sort2part_sig: {EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')): acceptor$0$promise$0$0; acceptor$0$promise$0$1, EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')): proposer$0$promise$1$0 | proposer$0$promise$1$1}

	sort: acceptor

	identical_classes: {'acceptor$0$promise$0; acceptor$0$promise$0': [acceptor$0$promise$0$0; acceptor$0$promise$0$1]}

	identical_single_classes: {'acceptor$0$promise$0; acceptor$0$promise$0': acceptor$0$promise$0$0; acceptor$0$promise$0$1}

	identical_multi_classes: {}

	sort: proposer

	identical_classes: {'proposer$0$promise$1': [proposer$0$promise$1$0, proposer$0$promise$1$1]}

	identical_single_classes: {}

	identical_multi_classes: {'proposer$0$promise$1': [proposer$0$promise$1$0, proposer$0$promise$1$1]}


---------- QInference: _set_sort_to_quantifier_mode ----------

quantifier mode: acceptor: QuantifierMode.forall

quantifier mode: proposer: QuantifierMode.forall


---------- QInference: _set_constraint_mode ----------

constraint mode: ConstraintMode.no_merge


---------- QFormula: _set_qvars ----------

forall_qvars: {Var('PROPOSER1', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))), Var('ACCEPTOR0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Var('PROPOSER0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))}

exists_qvars: set()


---------- QFormula: _set_signed_func_name_to_args ----------

signed_func_name2args: {'0$promise': [[Var('ACCEPTOR0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Var('PROPOSER0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))], [Var('ACCEPTOR0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Var('PROPOSER1', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))]]}


---------- QFormula: _set_qterms ----------

qterms: ['promise(ACCEPTOR0,PROPOSER1)', 'promise(ACCEPTOR0,PROPOSER0)']


---------- QFormula: get_qclause ----------

qclause: forall PROPOSER1,PROPOSER0,ACCEPTOR0. ~promise(ACCEPTOR0,PROPOSER1) | ~promise(ACCEPTOR0,PROPOSER0) | PROPOSER0 = PROPOSER1


=== Prime Orbit 2 =====================
size : 18
num_suborbits: 1
27 (*) : -1----------1--------------
27     : ['chosenAt(quorum__acceptor0_acceptor1,proposer1)', 'leader(proposer0)']
28     : --1---------1--------------
28     : ['chosenAt(quorum__acceptor0_acceptor1,proposer2)', 'leader(proposer0)']
29     : 1------------1-------------
29     : ['chosenAt(quorum__acceptor0_acceptor1,proposer0)', 'leader(proposer1)']
30     : --1----------1-------------
30     : ['chosenAt(quorum__acceptor0_acceptor1,proposer2)', 'leader(proposer1)']
31     : 1-------------1------------
31     : ['chosenAt(quorum__acceptor0_acceptor1,proposer0)', 'leader(proposer2)']
32     : -1------------1------------
32     : ['chosenAt(quorum__acceptor0_acceptor1,proposer1)', 'leader(proposer2)']
33     : ----1-------1--------------
33     : ['chosenAt(quorum__acceptor0_acceptor2,proposer1)', 'leader(proposer0)']
34     : -----1------1--------------
34     : ['chosenAt(quorum__acceptor0_acceptor2,proposer2)', 'leader(proposer0)']
35     : ---1---------1-------------
35     : ['chosenAt(quorum__acceptor0_acceptor2,proposer0)', 'leader(proposer1)']
36     : -----1-------1-------------
36     : ['chosenAt(quorum__acceptor0_acceptor2,proposer2)', 'leader(proposer1)']
37     : ---1----------1------------
37     : ['chosenAt(quorum__acceptor0_acceptor2,proposer0)', 'leader(proposer2)']
38     : ----1---------1------------
38     : ['chosenAt(quorum__acceptor0_acceptor2,proposer1)', 'leader(proposer2)']
39     : -------1----1--------------
39     : ['chosenAt(quorum__acceptor1_acceptor2,proposer1)', 'leader(proposer0)']
40     : --------1---1--------------
40     : ['chosenAt(quorum__acceptor1_acceptor2,proposer2)', 'leader(proposer0)']
41     : ------1------1-------------
41     : ['chosenAt(quorum__acceptor1_acceptor2,proposer0)', 'leader(proposer1)']
42     : --------1----1-------------
42     : ['chosenAt(quorum__acceptor1_acceptor2,proposer2)', 'leader(proposer1)']
43     : ------1-------1------------
43     : ['chosenAt(quorum__acceptor1_acceptor2,proposer0)', 'leader(proposer2)']
44     : -------1------1------------
44     : ['chosenAt(quorum__acceptor1_acceptor2,proposer1)', 'leader(proposer2)']
num_forall :   0
num_exists :   0
num_literals : 0
quantified form : None
qcost : 0




---------- QPrime ----------


---------- ConstArgBinding ----------

terms: ['chosenAt(quorum__acceptor0_acceptor1,proposer1)', 'leader(proposer0)']

sign_func_name2args: {'0$chosenAt': [(Const('quorum__acceptor0_acceptor1', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), Const('proposer1', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))))], '0$leader': [(Const('proposer0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))),)]}

const2sigs: {Const('quorum__acceptor0_acceptor1', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))): [quorum$0$chosenAt$0$0], Const('proposer1', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))): [proposer$0$chosenAt$1$0], Const('proposer0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))): [proposer$0$leader$0$0]}

sig2const: {'quorum$0$chosenAt$0$0': Const('quorum__acceptor0_acceptor1', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), 'proposer$0$chosenAt$1$0': Const('proposer1', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))), 'proposer$0$leader$0$0': Const('proposer0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))}


---------- ArgPartition ----------

sort2class_sigs: {EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')): [quorum$0$chosenAt$0$0], EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')): [proposer$0$chosenAt$1$0, proposer$0$leader$0$0]}

sort2part_sig: {EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')): quorum$0$chosenAt$0$0, EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')): proposer$0$chosenAt$1$0 | proposer$0$leader$0$0}

part_sig: ('proposer$0$chosenAt$1$0 | proposer$0$leader$0$0', 'quorum$0$chosenAt$0$0')


---------- SigGenerator ----------

terms:  ['chosenAt(quorum__acceptor0_acceptor1,proposer1)', 'leader(proposer0)']

func_name2symbol:  {'chosenAt': Const('chosenAt', FunctionSort(EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')), EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')), BooleanSort())), 'leader': Const('leader', FunctionSort(EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')), BooleanSort()))}

func_name2args_sort:  {'chosenAt': (EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')), EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))), 'leader': (EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')),)}

sign_func_name2count:  {'0$chosenAt': 1, '0$leader': 1}


---------- ProductArgPartition ----------

sort2class_sigs: {EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')): [quorum$0$chosenAt$0$0], EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')): [proposer$0$chosenAt$1$0, proposer$0$leader$0$0]}

sort2part_sig: {EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')): quorum$0$chosenAt$0$0, EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')): proposer$0$chosenAt$1$0 | proposer$0$leader$0$0}

	sort: quorum

	identical_classes: {'quorum$0$chosenAt$0': [quorum$0$chosenAt$0$0]}

	identical_single_classes: {'quorum$0$chosenAt$0': quorum$0$chosenAt$0$0}

	identical_multi_classes: {}

	sort: proposer

	identical_classes: {'proposer$0$chosenAt$1': [proposer$0$chosenAt$1$0], 'proposer$0$leader$0': [proposer$0$leader$0$0]}

	identical_single_classes: {'proposer$0$chosenAt$1': proposer$0$chosenAt$1$0, 'proposer$0$leader$0': proposer$0$leader$0$0}

	identical_multi_classes: {}


---------- QInference: _set_sort_to_quantifier_mode ----------

quantifier mode: quorum: QuantifierMode.forall

quantifier mode: proposer: QuantifierMode.forall


---------- QInference: _set_constraint_mode ----------

constraint mode: ConstraintMode.no_merge


---------- QFormula: _set_qvars ----------

forall_qvars: {Var('PROPOSER1', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))), Var('PROPOSER0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))), Var('QUORUM0', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')))}

exists_qvars: set()


---------- QFormula: _set_signed_func_name_to_args ----------

signed_func_name2args: {'0$chosenAt': [[Var('QUORUM0', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), Var('PROPOSER0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))]], '0$leader': [[Var('PROPOSER1', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))]]}


---------- QFormula: _set_qterms ----------

qterms: ['leader(PROPOSER1)', 'chosenAt(QUORUM0,PROPOSER0)']


---------- QFormula: get_qclause ----------

qclause: forall PROPOSER1,PROPOSER0,QUORUM0. ~leader(PROPOSER1) | ~chosenAt(QUORUM0,PROPOSER0) | PROPOSER0 = PROPOSER1


=== Prime Orbit 3 =====================
size : 3
num_suborbits: 1
45 (*) : ------------1-----------0--
45     : ['leader(proposer0)', '~start(proposer0)']
46     : -------------1-----------0-
46     : ['leader(proposer1)', '~start(proposer1)']
47     : --------------1-----------0
47     : ['leader(proposer2)', '~start(proposer2)']
num_forall :   0
num_exists :   0
num_literals : 0
quantified form : None
qcost : 0




---------- QPrime ----------


---------- ConstArgBinding ----------

terms: ['leader(proposer0)', '~start(proposer0)']

sign_func_name2args: {'0$leader': [(Const('proposer0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))),)], '1$start': [(Const('proposer0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))),)]}

const2sigs: {Const('proposer0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))): [proposer$0$leader$0$0, proposer$1$start$0$0]}

sig2const: {'proposer$0$leader$0$0': Const('proposer0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))), 'proposer$1$start$0$0': Const('proposer0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))}


---------- ArgPartition ----------

sort2class_sigs: {EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')): [proposer$0$leader$0$0; proposer$1$start$0$0]}

sort2part_sig: {EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')): proposer$0$leader$0$0; proposer$1$start$0$0}

part_sig: ('proposer$0$leader$0$0; proposer$1$start$0$0',)


---------- SigGenerator ----------

terms:  ['leader(proposer0)', '~start(proposer0)']

func_name2symbol:  {'leader': Const('leader', FunctionSort(EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')), BooleanSort())), 'start': Const('start', FunctionSort(EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')), BooleanSort()))}

func_name2args_sort:  {'leader': (EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')),), 'start': (EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')),)}

sign_func_name2count:  {'0$leader': 1, '1$start': 1}


---------- ProductArgPartition ----------

sort2class_sigs: {EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')): [proposer$0$leader$0$0; proposer$1$start$0$0]}

sort2part_sig: {EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')): proposer$0$leader$0$0; proposer$1$start$0$0}

	sort: proposer

	identical_classes: {'proposer$0$leader$0; proposer$1$start$0': [proposer$0$leader$0$0; proposer$1$start$0$0]}

	identical_single_classes: {'proposer$0$leader$0; proposer$1$start$0': proposer$0$leader$0$0; proposer$1$start$0$0}

	identical_multi_classes: {}


---------- QInference: _set_sort_to_quantifier_mode ----------

quantifier mode: proposer: QuantifierMode.forall


---------- QInference: _set_constraint_mode ----------

constraint mode: ConstraintMode.no_merge


---------- QFormula: _set_qvars ----------

forall_qvars: {Var('PROPOSER0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))}

exists_qvars: set()


---------- QFormula: _set_signed_func_name_to_args ----------

signed_func_name2args: {'0$leader': [[Var('PROPOSER0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))]], '1$start': [[Var('PROPOSER0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))]]}


---------- QFormula: _set_qterms ----------

qterms: ['~start(PROPOSER0)', 'leader(PROPOSER0)']


---------- QFormula: get_qclause ----------

qclause: forall PROPOSER0. start(PROPOSER0) | ~leader(PROPOSER0)


=== Prime Orbit 4 =====================
size : 3
num_suborbits: 1
48 (*) : ------------1-1------------
48     : ['leader(proposer0)', 'leader(proposer2)']
49     : ------------11-------------
49     : ['leader(proposer0)', 'leader(proposer1)']
50     : -------------11------------
50     : ['leader(proposer1)', 'leader(proposer2)']
num_forall :   0
num_exists :   0
num_literals : 0
quantified form : None
qcost : 0




---------- QPrime ----------


---------- ConstArgBinding ----------

terms: ['leader(proposer0)', 'leader(proposer2)']

sign_func_name2args: {'0$leader': [(Const('proposer0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))),), (Const('proposer2', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))),)]}

const2sigs: {Const('proposer0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))): [proposer$0$leader$0$0], Const('proposer2', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))): [proposer$0$leader$0$1]}

sig2const: {'proposer$0$leader$0$0': Const('proposer0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))), 'proposer$0$leader$0$1': Const('proposer2', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))}


---------- ArgPartition ----------

sort2class_sigs: {EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')): [proposer$0$leader$0$0, proposer$0$leader$0$1]}

sort2part_sig: {EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')): proposer$0$leader$0$0 | proposer$0$leader$0$1}

part_sig: ('proposer$0$leader$0$0 | proposer$0$leader$0$1',)


---------- SigGenerator ----------

terms:  ['leader(proposer0)', 'leader(proposer2)']

func_name2symbol:  {'leader': Const('leader', FunctionSort(EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')), BooleanSort()))}

func_name2args_sort:  {'leader': (EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')),)}

sign_func_name2count:  {'0$leader': 2}


---------- ProductArgPartition ----------

sort2class_sigs: {EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')): [proposer$0$leader$0$0, proposer$0$leader$0$1]}

sort2part_sig: {EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')): proposer$0$leader$0$0 | proposer$0$leader$0$1}

	sort: proposer

	identical_classes: {'proposer$0$leader$0': [proposer$0$leader$0$0, proposer$0$leader$0$1]}

	identical_single_classes: {}

	identical_multi_classes: {'proposer$0$leader$0': [proposer$0$leader$0$0, proposer$0$leader$0$1]}


---------- QInference: _set_sort_to_quantifier_mode ----------

quantifier mode: proposer: QuantifierMode.forall


---------- QInference: _set_constraint_mode ----------

constraint mode: ConstraintMode.no_merge


---------- QFormula: _set_qvars ----------

forall_qvars: {Var('PROPOSER1', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))), Var('PROPOSER0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))}

exists_qvars: set()


---------- QFormula: _set_signed_func_name_to_args ----------

signed_func_name2args: {'0$leader': [[Var('PROPOSER0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))], [Var('PROPOSER1', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))]]}


---------- QFormula: _set_qterms ----------

qterms: ['leader(PROPOSER0)', 'leader(PROPOSER1)']


---------- QFormula: get_qclause ----------

qclause: forall PROPOSER1,PROPOSER0. ~leader(PROPOSER0) | ~leader(PROPOSER1) | PROPOSER0 = PROPOSER1


=== Prime Orbit 5 =====================
size : 9
num_suborbits: 1
51 (*) : ----------------------1--0-
51     : ['promise(acceptor2,proposer1)', '~start(proposer1)']
52     : -----------------------1--0
52     : ['promise(acceptor2,proposer2)', '~start(proposer2)']
53     : ---------------------1--0--
53     : ['promise(acceptor2,proposer0)', '~start(proposer0)']
54     : -------------------1-----0-
54     : ['promise(acceptor1,proposer1)', '~start(proposer1)']
55     : --------------------1-----0
55     : ['promise(acceptor1,proposer2)', '~start(proposer2)']
56     : ------------------1-----0--
56     : ['promise(acceptor1,proposer0)', '~start(proposer0)']
57     : ----------------1--------0-
57     : ['promise(acceptor0,proposer1)', '~start(proposer1)']
58     : -----------------1--------0
58     : ['promise(acceptor0,proposer2)', '~start(proposer2)']
59     : ---------------1--------0--
59     : ['promise(acceptor0,proposer0)', '~start(proposer0)']
num_forall :   0
num_exists :   0
num_literals : 0
quantified form : None
qcost : 0




---------- QPrime ----------


---------- ConstArgBinding ----------

terms: ['promise(acceptor2,proposer1)', '~start(proposer1)']

sign_func_name2args: {'0$promise': [(Const('acceptor2', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Const('proposer1', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))))], '1$start': [(Const('proposer1', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))),)]}

const2sigs: {Const('acceptor2', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))): [acceptor$0$promise$0$0], Const('proposer1', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))): [proposer$0$promise$1$0, proposer$1$start$0$0]}

sig2const: {'acceptor$0$promise$0$0': Const('acceptor2', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), 'proposer$0$promise$1$0': Const('proposer1', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))), 'proposer$1$start$0$0': Const('proposer1', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))}


---------- ArgPartition ----------

sort2class_sigs: {EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')): [acceptor$0$promise$0$0], EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')): [proposer$0$promise$1$0; proposer$1$start$0$0]}

sort2part_sig: {EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')): acceptor$0$promise$0$0, EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')): proposer$0$promise$1$0; proposer$1$start$0$0}

part_sig: ('acceptor$0$promise$0$0', 'proposer$0$promise$1$0; proposer$1$start$0$0')


---------- SigGenerator ----------

terms:  ['promise(acceptor2,proposer1)', '~start(proposer1)']

func_name2symbol:  {'promise': Const('promise', FunctionSort(EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')), EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')), BooleanSort())), 'start': Const('start', FunctionSort(EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')), BooleanSort()))}

func_name2args_sort:  {'promise': (EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')), EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))), 'start': (EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')),)}

sign_func_name2count:  {'0$promise': 1, '1$start': 1}


---------- ProductArgPartition ----------

sort2class_sigs: {EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')): [acceptor$0$promise$0$0], EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')): [proposer$0$promise$1$0; proposer$1$start$0$0]}

sort2part_sig: {EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')): acceptor$0$promise$0$0, EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')): proposer$0$promise$1$0; proposer$1$start$0$0}

	sort: acceptor

	identical_classes: {'acceptor$0$promise$0': [acceptor$0$promise$0$0]}

	identical_single_classes: {'acceptor$0$promise$0': acceptor$0$promise$0$0}

	identical_multi_classes: {}

	sort: proposer

	identical_classes: {'proposer$0$promise$1; proposer$1$start$0': [proposer$0$promise$1$0; proposer$1$start$0$0]}

	identical_single_classes: {'proposer$0$promise$1; proposer$1$start$0': proposer$0$promise$1$0; proposer$1$start$0$0}

	identical_multi_classes: {}


---------- QInference: _set_sort_to_quantifier_mode ----------

quantifier mode: acceptor: QuantifierMode.forall

quantifier mode: proposer: QuantifierMode.forall


---------- QInference: _set_constraint_mode ----------

constraint mode: ConstraintMode.no_merge


---------- QFormula: _set_qvars ----------

forall_qvars: {Var('ACCEPTOR0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Var('PROPOSER0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))}

exists_qvars: set()


---------- QFormula: _set_signed_func_name_to_args ----------

signed_func_name2args: {'0$promise': [[Var('ACCEPTOR0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Var('PROPOSER0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))]], '1$start': [[Var('PROPOSER0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))]]}


---------- QFormula: _set_qterms ----------

qterms: ['~start(PROPOSER0)', 'promise(ACCEPTOR0,PROPOSER0)']


---------- QFormula: get_qclause ----------

qclause: forall ACCEPTOR0,PROPOSER0. start(PROPOSER0) | ~promise(ACCEPTOR0,PROPOSER0)


=== Prime Orbit 9 =====================
size : 9
num_suborbits: 1
123 (*) : -1-----------------------0-
123     : ['chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~start(proposer1)']
124     : --1-----------------------0
124     : ['chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~start(proposer2)']
125     : 1-----------------------0--
125     : ['chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~start(proposer0)']
126     : ----1--------------------0-
126     : ['chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~start(proposer1)']
127     : -----1--------------------0
127     : ['chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~start(proposer2)']
128     : ---1--------------------0--
128     : ['chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~start(proposer0)']
129     : -------1-----------------0-
129     : ['chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~start(proposer1)']
130     : --------1-----------------0
130     : ['chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~start(proposer2)']
131     : ------1-----------------0--
131     : ['chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~start(proposer0)']
num_forall :   0
num_exists :   0
num_literals : 0
quantified form : None
qcost : 0




---------- QPrime ----------


---------- ConstArgBinding ----------

terms: ['chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~start(proposer1)']

sign_func_name2args: {'0$chosenAt': [(Const('quorum__acceptor0_acceptor1', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), Const('proposer1', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))))], '1$start': [(Const('proposer1', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))),)]}

const2sigs: {Const('quorum__acceptor0_acceptor1', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))): [quorum$0$chosenAt$0$0], Const('proposer1', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))): [proposer$0$chosenAt$1$0, proposer$1$start$0$0]}

sig2const: {'quorum$0$chosenAt$0$0': Const('quorum__acceptor0_acceptor1', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), 'proposer$0$chosenAt$1$0': Const('proposer1', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))), 'proposer$1$start$0$0': Const('proposer1', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))}


---------- ArgPartition ----------

sort2class_sigs: {EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')): [quorum$0$chosenAt$0$0], EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')): [proposer$0$chosenAt$1$0; proposer$1$start$0$0]}

sort2part_sig: {EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')): quorum$0$chosenAt$0$0, EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')): proposer$0$chosenAt$1$0; proposer$1$start$0$0}

part_sig: ('proposer$0$chosenAt$1$0; proposer$1$start$0$0', 'quorum$0$chosenAt$0$0')


---------- SigGenerator ----------

terms:  ['chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~start(proposer1)']

func_name2symbol:  {'chosenAt': Const('chosenAt', FunctionSort(EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')), EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')), BooleanSort())), 'start': Const('start', FunctionSort(EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')), BooleanSort()))}

func_name2args_sort:  {'chosenAt': (EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')), EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))), 'start': (EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')),)}

sign_func_name2count:  {'0$chosenAt': 1, '1$start': 1}


---------- ProductArgPartition ----------

sort2class_sigs: {EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')): [quorum$0$chosenAt$0$0], EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')): [proposer$0$chosenAt$1$0; proposer$1$start$0$0]}

sort2part_sig: {EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')): quorum$0$chosenAt$0$0, EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')): proposer$0$chosenAt$1$0; proposer$1$start$0$0}

	sort: quorum

	identical_classes: {'quorum$0$chosenAt$0': [quorum$0$chosenAt$0$0]}

	identical_single_classes: {'quorum$0$chosenAt$0': quorum$0$chosenAt$0$0}

	identical_multi_classes: {}

	sort: proposer

	identical_classes: {'proposer$0$chosenAt$1; proposer$1$start$0': [proposer$0$chosenAt$1$0; proposer$1$start$0$0]}

	identical_single_classes: {'proposer$0$chosenAt$1; proposer$1$start$0': proposer$0$chosenAt$1$0; proposer$1$start$0$0}

	identical_multi_classes: {}


---------- QInference: _set_sort_to_quantifier_mode ----------

quantifier mode: quorum: QuantifierMode.forall

quantifier mode: proposer: QuantifierMode.forall


---------- QInference: _set_constraint_mode ----------

constraint mode: ConstraintMode.no_merge


---------- QFormula: _set_qvars ----------

forall_qvars: {Var('PROPOSER0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))), Var('QUORUM0', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')))}

exists_qvars: set()


---------- QFormula: _set_signed_func_name_to_args ----------

signed_func_name2args: {'0$chosenAt': [[Var('QUORUM0', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), Var('PROPOSER0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))]], '1$start': [[Var('PROPOSER0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))]]}


---------- QFormula: _set_qterms ----------

qterms: ['~start(PROPOSER0)', 'chosenAt(QUORUM0,PROPOSER0)']


---------- QFormula: get_qclause ----------

qclause: forall PROPOSER0,QUORUM0. start(PROPOSER0) | ~chosenAt(QUORUM0,PROPOSER0)


=== Prime Orbit 11 =====================
size : 36
num_suborbits: 1
159 (*) : -------------1--0-1--------
159     : ['leader(proposer1)', 'promise(acceptor1,proposer0)', '~promise(acceptor0,proposer1)']
160     : --------------1--01--------
160     : ['leader(proposer2)', 'promise(acceptor1,proposer0)', '~promise(acceptor0,proposer2)']
161     : ------------1--0---1-------
161     : ['leader(proposer0)', 'promise(acceptor1,proposer1)', '~promise(acceptor0,proposer0)']
162     : --------------1--0-1-------
162     : ['leader(proposer2)', 'promise(acceptor1,proposer1)', '~promise(acceptor0,proposer2)']
163     : ------------1--0----1------
163     : ['leader(proposer0)', 'promise(acceptor1,proposer2)', '~promise(acceptor0,proposer0)']
164     : -------------1--0---1------
164     : ['leader(proposer1)', 'promise(acceptor1,proposer2)', '~promise(acceptor0,proposer1)']
165     : -------------1--0----1-----
165     : ['leader(proposer1)', 'promise(acceptor2,proposer0)', '~promise(acceptor0,proposer1)']
166     : --------------1--0---1-----
166     : ['leader(proposer2)', 'promise(acceptor2,proposer0)', '~promise(acceptor0,proposer2)']
167     : ------------1--0------1----
167     : ['leader(proposer0)', 'promise(acceptor2,proposer1)', '~promise(acceptor0,proposer0)']
168     : --------------1--0----1----
168     : ['leader(proposer2)', 'promise(acceptor2,proposer1)', '~promise(acceptor0,proposer2)']
169     : ------------1--0-------1---
169     : ['leader(proposer0)', 'promise(acceptor2,proposer2)', '~promise(acceptor0,proposer0)']
170     : -------------1--0------1---
170     : ['leader(proposer1)', 'promise(acceptor2,proposer2)', '~promise(acceptor0,proposer1)']
171     : -------------1-1---0-------
171     : ['leader(proposer1)', 'promise(acceptor0,proposer0)', '~promise(acceptor1,proposer1)']
172     : --------------11----0------
172     : ['leader(proposer2)', 'promise(acceptor0,proposer0)', '~promise(acceptor1,proposer2)']
173     : ------------1---1-0--------
173     : ['leader(proposer0)', 'promise(acceptor0,proposer1)', '~promise(acceptor1,proposer0)']
174     : --------------1-1---0------
174     : ['leader(proposer2)', 'promise(acceptor0,proposer1)', '~promise(acceptor1,proposer2)']
175     : ------------1----10--------
175     : ['leader(proposer0)', 'promise(acceptor0,proposer2)', '~promise(acceptor1,proposer0)']
176     : -------------1---1-0-------
176     : ['leader(proposer1)', 'promise(acceptor0,proposer2)', '~promise(acceptor1,proposer1)']
177     : -------------1-----0-1-----
177     : ['leader(proposer1)', 'promise(acceptor2,proposer0)', '~promise(acceptor1,proposer1)']
178     : --------------1-----01-----
178     : ['leader(proposer2)', 'promise(acceptor2,proposer0)', '~promise(acceptor1,proposer2)']
179     : ------------1-----0---1----
179     : ['leader(proposer0)', 'promise(acceptor2,proposer1)', '~promise(acceptor1,proposer0)']
180     : --------------1-----0-1----
180     : ['leader(proposer2)', 'promise(acceptor2,proposer1)', '~promise(acceptor1,proposer2)']
181     : ------------1-----0----1---
181     : ['leader(proposer0)', 'promise(acceptor2,proposer2)', '~promise(acceptor1,proposer0)']
182     : -------------1-----0---1---
182     : ['leader(proposer1)', 'promise(acceptor2,proposer2)', '~promise(acceptor1,proposer1)']
183     : -------------1-1------0----
183     : ['leader(proposer1)', 'promise(acceptor0,proposer0)', '~promise(acceptor2,proposer1)']
184     : --------------11-------0---
184     : ['leader(proposer2)', 'promise(acceptor0,proposer0)', '~promise(acceptor2,proposer2)']
185     : ------------1---1----0-----
185     : ['leader(proposer0)', 'promise(acceptor0,proposer1)', '~promise(acceptor2,proposer0)']
186     : --------------1-1------0---
186     : ['leader(proposer2)', 'promise(acceptor0,proposer1)', '~promise(acceptor2,proposer2)']
187     : ------------1----1---0-----
187     : ['leader(proposer0)', 'promise(acceptor0,proposer2)', '~promise(acceptor2,proposer0)']
188     : -------------1---1----0----
188     : ['leader(proposer1)', 'promise(acceptor0,proposer2)', '~promise(acceptor2,proposer1)']
189     : -------------1----1---0----
189     : ['leader(proposer1)', 'promise(acceptor1,proposer0)', '~promise(acceptor2,proposer1)']
190     : --------------1---1----0---
190     : ['leader(proposer2)', 'promise(acceptor1,proposer0)', '~promise(acceptor2,proposer2)']
191     : ------------1------1-0-----
191     : ['leader(proposer0)', 'promise(acceptor1,proposer1)', '~promise(acceptor2,proposer0)']
192     : --------------1----1---0---
192     : ['leader(proposer2)', 'promise(acceptor1,proposer1)', '~promise(acceptor2,proposer2)']
193     : ------------1-------10-----
193     : ['leader(proposer0)', 'promise(acceptor1,proposer2)', '~promise(acceptor2,proposer0)']
194     : -------------1------1-0----
194     : ['leader(proposer1)', 'promise(acceptor1,proposer2)', '~promise(acceptor2,proposer1)']
num_forall :   0
num_exists :   0
num_literals : 0
quantified form : None
qcost : 0




---------- QPrime ----------


---------- ConstArgBinding ----------

terms: ['leader(proposer1)', '~promise(acceptor0,proposer1)', 'promise(acceptor1,proposer0)']

sign_func_name2args: {'0$leader': [(Const('proposer1', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))),)], '1$promise': [(Const('acceptor0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Const('proposer1', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))))], '0$promise': [(Const('acceptor1', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Const('proposer0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))))]}

const2sigs: {Const('proposer1', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))): [proposer$0$leader$0$0, proposer$1$promise$1$0], Const('acceptor0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))): [acceptor$1$promise$0$0], Const('acceptor1', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))): [acceptor$0$promise$0$0], Const('proposer0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))): [proposer$0$promise$1$0]}

sig2const: {'proposer$0$leader$0$0': Const('proposer1', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))), 'acceptor$1$promise$0$0': Const('acceptor0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), 'proposer$1$promise$1$0': Const('proposer1', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))), 'acceptor$0$promise$0$0': Const('acceptor1', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), 'proposer$0$promise$1$0': Const('proposer0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))}


---------- ArgPartition ----------

sort2class_sigs: {EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')): [proposer$0$leader$0$0; proposer$1$promise$1$0, proposer$0$promise$1$0], EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')): [acceptor$0$promise$0$0, acceptor$1$promise$0$0]}

sort2part_sig: {EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')): proposer$0$leader$0$0; proposer$1$promise$1$0 | proposer$0$promise$1$0, EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')): acceptor$0$promise$0$0 | acceptor$1$promise$0$0}

part_sig: ('acceptor$0$promise$0$0 | acceptor$1$promise$0$0', 'proposer$0$leader$0$0; proposer$1$promise$1$0 | proposer$0$promise$1$0')


---------- SigGenerator ----------

terms:  ['leader(proposer1)', '~promise(acceptor0,proposer1)', 'promise(acceptor1,proposer0)']

func_name2symbol:  {'leader': Const('leader', FunctionSort(EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')), BooleanSort())), 'promise': Const('promise', FunctionSort(EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')), EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')), BooleanSort()))}

func_name2args_sort:  {'leader': (EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')),), 'promise': (EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')), EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))}

sign_func_name2count:  {'0$leader': 1, '1$promise': 1, '0$promise': 1}


---------- ProductArgPartition ----------

sort2class_sigs: {EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')): [proposer$0$leader$0$0; proposer$1$promise$1$0, proposer$0$promise$1$0], EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')): [acceptor$0$promise$0$0, acceptor$1$promise$0$0]}

sort2part_sig: {EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')): proposer$0$leader$0$0; proposer$1$promise$1$0 | proposer$0$promise$1$0, EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')): acceptor$0$promise$0$0 | acceptor$1$promise$0$0}

	sort: proposer

	identical_classes: {'proposer$0$leader$0; proposer$1$promise$1': [proposer$0$leader$0$0; proposer$1$promise$1$0], 'proposer$0$promise$1': [proposer$0$promise$1$0]}

	identical_single_classes: {'proposer$0$leader$0; proposer$1$promise$1': proposer$0$leader$0$0; proposer$1$promise$1$0, 'proposer$0$promise$1': proposer$0$promise$1$0}

	identical_multi_classes: {}

	sort: acceptor

	identical_classes: {'acceptor$0$promise$0': [acceptor$0$promise$0$0], 'acceptor$1$promise$0': [acceptor$1$promise$0$0]}

	identical_single_classes: {'acceptor$0$promise$0': acceptor$0$promise$0$0, 'acceptor$1$promise$0': acceptor$1$promise$0$0}

	identical_multi_classes: {}


---------- QInference: _set_sort_to_quantifier_mode ----------

quantifier mode: proposer: QuantifierMode.forall

quantifier mode: acceptor: QuantifierMode.forall


---------- QInference: _set_constraint_mode ----------

constraint mode: ConstraintMode.no_merge


---------- QFormula: _set_qvars ----------

forall_qvars: {Var('PROPOSER1', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))), Var('PROPOSER0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))), Var('ACCEPTOR0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Var('ACCEPTOR1', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')))}

exists_qvars: set()


---------- QFormula: _set_signed_func_name_to_args ----------

signed_func_name2args: {'0$leader': [[Var('PROPOSER0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))]], '1$promise': [[Var('ACCEPTOR1', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Var('PROPOSER0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))]], '0$promise': [[Var('ACCEPTOR0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Var('PROPOSER1', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))]]}


---------- QFormula: _set_qterms ----------

qterms: ['promise(ACCEPTOR0,PROPOSER1)', 'leader(PROPOSER0)', '~promise(ACCEPTOR1,PROPOSER0)']


---------- QFormula: get_qclause ----------

qclause: forall ACCEPTOR1,PROPOSER1,PROPOSER0,ACCEPTOR0. ~promise(ACCEPTOR0,PROPOSER1) | ~leader(PROPOSER0) | promise(ACCEPTOR1,PROPOSER0) | (PROPOSER0 = PROPOSER1 | ACCEPTOR0 = ACCEPTOR1)


=== Prime Orbit 12 =====================
size : 18
num_suborbits: 1
195 (*) : ----0--------1----1--------
195     : ['leader(proposer1)', 'promise(acceptor1,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)']
196     : -----0--------1---1--------
196     : ['leader(proposer2)', 'promise(acceptor1,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)']
197     : ---0--------1------1-------
197     : ['leader(proposer0)', 'promise(acceptor1,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)']
198     : -----0--------1----1-------
198     : ['leader(proposer2)', 'promise(acceptor1,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)']
199     : ---0--------1-------1------
199     : ['leader(proposer0)', 'promise(acceptor1,proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)']
200     : ----0--------1------1------
200     : ['leader(proposer1)', 'promise(acceptor1,proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)']
201     : -0-----------1-------1-----
201     : ['leader(proposer1)', 'promise(acceptor2,proposer0)', '~chosenAt(quorum__acceptor0_acceptor1,proposer1)']
202     : --0-----------1------1-----
202     : ['leader(proposer2)', 'promise(acceptor2,proposer0)', '~chosenAt(quorum__acceptor0_acceptor1,proposer2)']
203     : 0-----------1---------1----
203     : ['leader(proposer0)', 'promise(acceptor2,proposer1)', '~chosenAt(quorum__acceptor0_acceptor1,proposer0)']
204     : --0-----------1-------1----
204     : ['leader(proposer2)', 'promise(acceptor2,proposer1)', '~chosenAt(quorum__acceptor0_acceptor1,proposer2)']
205     : 0-----------1----------1---
205     : ['leader(proposer0)', 'promise(acceptor2,proposer2)', '~chosenAt(quorum__acceptor0_acceptor1,proposer0)']
206     : -0-----------1---------1---
206     : ['leader(proposer1)', 'promise(acceptor2,proposer2)', '~chosenAt(quorum__acceptor0_acceptor1,proposer1)']
207     : -------0-----1-1-----------
207     : ['leader(proposer1)', 'promise(acceptor0,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)']
208     : --------0-----11-----------
208     : ['leader(proposer2)', 'promise(acceptor0,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)']
209     : ------0-----1---1----------
209     : ['leader(proposer0)', 'promise(acceptor0,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)']
210     : --------0-----1-1----------
210     : ['leader(proposer2)', 'promise(acceptor0,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)']
211     : ------0-----1----1---------
211     : ['leader(proposer0)', 'promise(acceptor0,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)']
212     : -------0-----1---1---------
212     : ['leader(proposer1)', 'promise(acceptor0,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)']
num_forall :   0
num_exists :   0
num_literals : 0
quantified form : None
qcost : 0




---------- QPrime ----------


---------- ConstArgBinding ----------

terms: ['~chosenAt(quorum__acceptor0_acceptor2,proposer1)', 'leader(proposer1)', 'promise(acceptor1,proposer0)', '~member(acceptor1,quorum__acceptor0_acceptor2)']

sign_func_name2args: {'1$chosenAt': [(Const('quorum__acceptor0_acceptor2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), Const('proposer1', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))))], '0$leader': [(Const('proposer1', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))),)], '0$promise': [(Const('acceptor1', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Const('proposer0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))))], '1$member': [(Const('acceptor1', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Const('quorum__acceptor0_acceptor2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))))]}

const2sigs: {Const('quorum__acceptor0_acceptor2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))): [quorum$1$chosenAt$0$0, quorum$1$member$1$0], Const('proposer1', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))): [proposer$1$chosenAt$1$0, proposer$0$leader$0$0], Const('acceptor1', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))): [acceptor$0$promise$0$0, acceptor$1$member$0$0], Const('proposer0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))): [proposer$0$promise$1$0]}

sig2const: {'quorum$1$chosenAt$0$0': Const('quorum__acceptor0_acceptor2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), 'proposer$1$chosenAt$1$0': Const('proposer1', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))), 'proposer$0$leader$0$0': Const('proposer1', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))), 'acceptor$0$promise$0$0': Const('acceptor1', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), 'proposer$0$promise$1$0': Const('proposer0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))), 'acceptor$1$member$0$0': Const('acceptor1', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), 'quorum$1$member$1$0': Const('quorum__acceptor0_acceptor2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')))}


---------- ArgPartition ----------

sort2class_sigs: {EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')): [quorum$1$chosenAt$0$0; quorum$1$member$1$0], EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')): [proposer$0$leader$0$0; proposer$1$chosenAt$1$0, proposer$0$promise$1$0], EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')): [acceptor$0$promise$0$0; acceptor$1$member$0$0]}

sort2part_sig: {EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')): quorum$1$chosenAt$0$0; quorum$1$member$1$0, EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')): proposer$0$leader$0$0; proposer$1$chosenAt$1$0 | proposer$0$promise$1$0, EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')): acceptor$0$promise$0$0; acceptor$1$member$0$0}

part_sig: ('acceptor$0$promise$0$0; acceptor$1$member$0$0', 'proposer$0$leader$0$0; proposer$1$chosenAt$1$0 | proposer$0$promise$1$0', 'quorum$1$chosenAt$0$0; quorum$1$member$1$0')


---------- SigGenerator ----------

terms:  ['~chosenAt(quorum__acceptor0_acceptor2,proposer1)', 'leader(proposer1)', 'promise(acceptor1,proposer0)', '~member(acceptor1,quorum__acceptor0_acceptor2)']

func_name2symbol:  {'chosenAt': Const('chosenAt', FunctionSort(EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')), EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')), BooleanSort())), 'leader': Const('leader', FunctionSort(EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')), BooleanSort())), 'promise': Const('promise', FunctionSort(EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')), EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')), BooleanSort())), 'member': Const('member', FunctionSort(EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')), EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')), BooleanSort()))}

func_name2args_sort:  {'chosenAt': (EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')), EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))), 'leader': (EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')),), 'promise': (EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')), EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))), 'member': (EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')), EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')))}

sign_func_name2count:  {'1$chosenAt': 1, '0$leader': 1, '0$promise': 1, '1$member': 1}


---------- ProductArgPartition ----------

sort2class_sigs: {EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')): [quorum$1$chosenAt$0$0; quorum$1$member$1$0], EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')): [proposer$0$leader$0$0; proposer$1$chosenAt$1$0, proposer$0$promise$1$0], EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')): [acceptor$0$promise$0$0; acceptor$1$member$0$0]}

sort2part_sig: {EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')): quorum$1$chosenAt$0$0; quorum$1$member$1$0, EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')): proposer$0$leader$0$0; proposer$1$chosenAt$1$0 | proposer$0$promise$1$0, EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')): acceptor$0$promise$0$0; acceptor$1$member$0$0}

	sort: quorum

	identical_classes: {'quorum$1$chosenAt$0; quorum$1$member$1': [quorum$1$chosenAt$0$0; quorum$1$member$1$0]}

	identical_single_classes: {'quorum$1$chosenAt$0; quorum$1$member$1': quorum$1$chosenAt$0$0; quorum$1$member$1$0}

	identical_multi_classes: {}

	sort: proposer

	identical_classes: {'proposer$0$leader$0; proposer$1$chosenAt$1': [proposer$0$leader$0$0; proposer$1$chosenAt$1$0], 'proposer$0$promise$1': [proposer$0$promise$1$0]}

	identical_single_classes: {'proposer$0$leader$0; proposer$1$chosenAt$1': proposer$0$leader$0$0; proposer$1$chosenAt$1$0, 'proposer$0$promise$1': proposer$0$promise$1$0}

	identical_multi_classes: {}

	sort: acceptor

	identical_classes: {'acceptor$0$promise$0; acceptor$1$member$0': [acceptor$0$promise$0$0; acceptor$1$member$0$0]}

	identical_single_classes: {'acceptor$0$promise$0; acceptor$1$member$0': acceptor$0$promise$0$0; acceptor$1$member$0$0}

	identical_multi_classes: {}


---------- QInference: _set_sort_to_quantifier_mode ----------

quantifier mode: quorum: QuantifierMode.forall

quantifier mode: proposer: QuantifierMode.forall

quantifier mode: acceptor: QuantifierMode.forall


---------- QInference: _set_constraint_mode ----------

constraint mode: ConstraintMode.no_merge


---------- QFormula: _set_qvars ----------

forall_qvars: {Var('ACCEPTOR0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Var('PROPOSER1', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))), Var('PROPOSER0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))), Var('QUORUM0', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')))}

exists_qvars: set()


---------- QFormula: _set_signed_func_name_to_args ----------

signed_func_name2args: {'1$chosenAt': [[Var('QUORUM0', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), Var('PROPOSER0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))]], '0$leader': [[Var('PROPOSER0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))]], '0$promise': [[Var('ACCEPTOR0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Var('PROPOSER1', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))]], '1$member': [[Var('ACCEPTOR0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Var('QUORUM0', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')))]]}


---------- QFormula: _set_qterms ----------

qterms: ['~chosenAt(QUORUM0,PROPOSER0)', 'promise(ACCEPTOR0,PROPOSER1)', 'leader(PROPOSER0)', '~member(ACCEPTOR0,QUORUM0)']


---------- QFormula: get_qclause ----------

qclause: forall QUORUM0,ACCEPTOR0,PROPOSER0,PROPOSER1. chosenAt(QUORUM0,PROPOSER0) | ~promise(ACCEPTOR0,PROPOSER1) | ~leader(PROPOSER0) | member(ACCEPTOR0,QUORUM0) | PROPOSER0 = PROPOSER1


=== Prime Orbit 13 =====================
size : 36
num_suborbits: 1
213 (*) : ---------1---1----1--------
213     : ['didNotPromise(acceptor0)', 'leader(proposer1)', 'promise(acceptor1,proposer0)']
214     : ---------1----1---1--------
214     : ['didNotPromise(acceptor0)', 'leader(proposer2)', 'promise(acceptor1,proposer0)']
215     : ---------1--1------1-------
215     : ['didNotPromise(acceptor0)', 'leader(proposer0)', 'promise(acceptor1,proposer1)']
216     : ---------1----1----1-------
216     : ['didNotPromise(acceptor0)', 'leader(proposer2)', 'promise(acceptor1,proposer1)']
217     : ---------1--1-------1------
217     : ['didNotPromise(acceptor0)', 'leader(proposer0)', 'promise(acceptor1,proposer2)']
218     : ---------1---1------1------
218     : ['didNotPromise(acceptor0)', 'leader(proposer1)', 'promise(acceptor1,proposer2)']
219     : ---------1---1-------1-----
219     : ['didNotPromise(acceptor0)', 'leader(proposer1)', 'promise(acceptor2,proposer0)']
220     : ---------1----1------1-----
220     : ['didNotPromise(acceptor0)', 'leader(proposer2)', 'promise(acceptor2,proposer0)']
221     : ---------1--1---------1----
221     : ['didNotPromise(acceptor0)', 'leader(proposer0)', 'promise(acceptor2,proposer1)']
222     : ---------1----1-------1----
222     : ['didNotPromise(acceptor0)', 'leader(proposer2)', 'promise(acceptor2,proposer1)']
223     : ---------1--1----------1---
223     : ['didNotPromise(acceptor0)', 'leader(proposer0)', 'promise(acceptor2,proposer2)']
224     : ---------1---1---------1---
224     : ['didNotPromise(acceptor0)', 'leader(proposer1)', 'promise(acceptor2,proposer2)']
225     : ----------1--1-1-----------
225     : ['didNotPromise(acceptor1)', 'leader(proposer1)', 'promise(acceptor0,proposer0)']
226     : ----------1---11-----------
226     : ['didNotPromise(acceptor1)', 'leader(proposer2)', 'promise(acceptor0,proposer0)']
227     : ----------1-1---1----------
227     : ['didNotPromise(acceptor1)', 'leader(proposer0)', 'promise(acceptor0,proposer1)']
228     : ----------1---1-1----------
228     : ['didNotPromise(acceptor1)', 'leader(proposer2)', 'promise(acceptor0,proposer1)']
229     : ----------1-1----1---------
229     : ['didNotPromise(acceptor1)', 'leader(proposer0)', 'promise(acceptor0,proposer2)']
230     : ----------1--1---1---------
230     : ['didNotPromise(acceptor1)', 'leader(proposer1)', 'promise(acceptor0,proposer2)']
231     : ----------1--1-------1-----
231     : ['didNotPromise(acceptor1)', 'leader(proposer1)', 'promise(acceptor2,proposer0)']
232     : ----------1---1------1-----
232     : ['didNotPromise(acceptor1)', 'leader(proposer2)', 'promise(acceptor2,proposer0)']
233     : ----------1-1---------1----
233     : ['didNotPromise(acceptor1)', 'leader(proposer0)', 'promise(acceptor2,proposer1)']
234     : ----------1---1-------1----
234     : ['didNotPromise(acceptor1)', 'leader(proposer2)', 'promise(acceptor2,proposer1)']
235     : ----------1-1----------1---
235     : ['didNotPromise(acceptor1)', 'leader(proposer0)', 'promise(acceptor2,proposer2)']
236     : ----------1--1---------1---
236     : ['didNotPromise(acceptor1)', 'leader(proposer1)', 'promise(acceptor2,proposer2)']
237     : -----------1-1-1-----------
237     : ['didNotPromise(acceptor2)', 'leader(proposer1)', 'promise(acceptor0,proposer0)']
238     : -----------1--11-----------
238     : ['didNotPromise(acceptor2)', 'leader(proposer2)', 'promise(acceptor0,proposer0)']
239     : -----------11---1----------
239     : ['didNotPromise(acceptor2)', 'leader(proposer0)', 'promise(acceptor0,proposer1)']
240     : -----------1--1-1----------
240     : ['didNotPromise(acceptor2)', 'leader(proposer2)', 'promise(acceptor0,proposer1)']
241     : -----------11----1---------
241     : ['didNotPromise(acceptor2)', 'leader(proposer0)', 'promise(acceptor0,proposer2)']
242     : -----------1-1---1---------
242     : ['didNotPromise(acceptor2)', 'leader(proposer1)', 'promise(acceptor0,proposer2)']
243     : -----------1-1----1--------
243     : ['didNotPromise(acceptor2)', 'leader(proposer1)', 'promise(acceptor1,proposer0)']
244     : -----------1--1---1--------
244     : ['didNotPromise(acceptor2)', 'leader(proposer2)', 'promise(acceptor1,proposer0)']
245     : -----------11------1-------
245     : ['didNotPromise(acceptor2)', 'leader(proposer0)', 'promise(acceptor1,proposer1)']
246     : -----------1--1----1-------
246     : ['didNotPromise(acceptor2)', 'leader(proposer2)', 'promise(acceptor1,proposer1)']
247     : -----------11-------1------
247     : ['didNotPromise(acceptor2)', 'leader(proposer0)', 'promise(acceptor1,proposer2)']
248     : -----------1-1------1------
248     : ['didNotPromise(acceptor2)', 'leader(proposer1)', 'promise(acceptor1,proposer2)']
num_forall :   0
num_exists :   0
num_literals : 0
quantified form : None
qcost : 0




---------- QPrime ----------


---------- ConstArgBinding ----------

terms: ['didNotPromise(acceptor0)', 'leader(proposer1)', 'promise(acceptor1,proposer0)']

sign_func_name2args: {'0$didNotPromise': [(Const('acceptor0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))),)], '0$leader': [(Const('proposer1', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))),)], '0$promise': [(Const('acceptor1', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Const('proposer0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))))]}

const2sigs: {Const('acceptor0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))): [acceptor$0$didNotPromise$0$0], Const('proposer1', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))): [proposer$0$leader$0$0], Const('acceptor1', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))): [acceptor$0$promise$0$0], Const('proposer0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))): [proposer$0$promise$1$0]}

sig2const: {'acceptor$0$didNotPromise$0$0': Const('acceptor0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), 'proposer$0$leader$0$0': Const('proposer1', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))), 'acceptor$0$promise$0$0': Const('acceptor1', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), 'proposer$0$promise$1$0': Const('proposer0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))}


---------- ArgPartition ----------

sort2class_sigs: {EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')): [acceptor$0$didNotPromise$0$0, acceptor$0$promise$0$0], EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')): [proposer$0$leader$0$0, proposer$0$promise$1$0]}

sort2part_sig: {EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')): acceptor$0$didNotPromise$0$0 | acceptor$0$promise$0$0, EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')): proposer$0$leader$0$0 | proposer$0$promise$1$0}

part_sig: ('acceptor$0$didNotPromise$0$0 | acceptor$0$promise$0$0', 'proposer$0$leader$0$0 | proposer$0$promise$1$0')


---------- SigGenerator ----------

terms:  ['didNotPromise(acceptor0)', 'leader(proposer1)', 'promise(acceptor1,proposer0)']

func_name2symbol:  {'didNotPromise': Const('didNotPromise', FunctionSort(EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')), BooleanSort())), 'leader': Const('leader', FunctionSort(EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')), BooleanSort())), 'promise': Const('promise', FunctionSort(EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')), EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')), BooleanSort()))}

func_name2args_sort:  {'didNotPromise': (EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')),), 'leader': (EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')),), 'promise': (EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')), EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))}

sign_func_name2count:  {'0$didNotPromise': 1, '0$leader': 1, '0$promise': 1}


---------- ProductArgPartition ----------

sort2class_sigs: {EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')): [acceptor$0$didNotPromise$0$0, acceptor$0$promise$0$0], EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')): [proposer$0$leader$0$0, proposer$0$promise$1$0]}

sort2part_sig: {EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')): acceptor$0$didNotPromise$0$0 | acceptor$0$promise$0$0, EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')): proposer$0$leader$0$0 | proposer$0$promise$1$0}

	sort: acceptor

	identical_classes: {'acceptor$0$didNotPromise$0': [acceptor$0$didNotPromise$0$0], 'acceptor$0$promise$0': [acceptor$0$promise$0$0]}

	identical_single_classes: {'acceptor$0$didNotPromise$0': acceptor$0$didNotPromise$0$0, 'acceptor$0$promise$0': acceptor$0$promise$0$0}

	identical_multi_classes: {}

	sort: proposer

	identical_classes: {'proposer$0$leader$0': [proposer$0$leader$0$0], 'proposer$0$promise$1': [proposer$0$promise$1$0]}

	identical_single_classes: {'proposer$0$leader$0': proposer$0$leader$0$0, 'proposer$0$promise$1': proposer$0$promise$1$0}

	identical_multi_classes: {}


---------- QInference: _set_sort_to_quantifier_mode ----------

quantifier mode: acceptor: QuantifierMode.forall

quantifier mode: proposer: QuantifierMode.forall


---------- QInference: _set_constraint_mode ----------

constraint mode: ConstraintMode.no_merge


---------- QFormula: _set_qvars ----------

forall_qvars: {Var('ACCEPTOR1', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Var('ACCEPTOR0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Var('PROPOSER1', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))), Var('PROPOSER0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))}

exists_qvars: set()


---------- QFormula: _set_signed_func_name_to_args ----------

signed_func_name2args: {'0$didNotPromise': [[Var('ACCEPTOR0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')))]], '0$leader': [[Var('PROPOSER0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))]], '0$promise': [[Var('ACCEPTOR1', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Var('PROPOSER1', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))]]}


---------- QFormula: _set_qterms ----------

qterms: ['promise(ACCEPTOR1,PROPOSER1)', 'leader(PROPOSER0)', 'didNotPromise(ACCEPTOR0)']


---------- QFormula: get_qclause ----------

qclause: forall ACCEPTOR1,ACCEPTOR0,PROPOSER0,PROPOSER1. ~promise(ACCEPTOR1,PROPOSER1) | ~leader(PROPOSER0) | ~didNotPromise(ACCEPTOR0) | (PROPOSER0 = PROPOSER1 | ACCEPTOR0 = ACCEPTOR1)


=== Prime Orbit 15 =====================
size : 36
num_suborbits: 2
258 (*) : -------------1----1--1-----
258     : ['leader(proposer1)', 'promise(acceptor1,proposer0)', 'promise(acceptor2,proposer0)']
259     : --------------1---1--1-----
259     : ['leader(proposer2)', 'promise(acceptor1,proposer0)', 'promise(acceptor2,proposer0)']
260     : ------------1------1--1----
260     : ['leader(proposer0)', 'promise(acceptor1,proposer1)', 'promise(acceptor2,proposer1)']
261     : --------------1----1--1----
261     : ['leader(proposer2)', 'promise(acceptor1,proposer1)', 'promise(acceptor2,proposer1)']
262     : ------------1-------1--1---
262     : ['leader(proposer0)', 'promise(acceptor1,proposer2)', 'promise(acceptor2,proposer2)']
263     : -------------1------1--1---
263     : ['leader(proposer1)', 'promise(acceptor1,proposer2)', 'promise(acceptor2,proposer2)']
264     : -------------1-1-----1-----
264     : ['leader(proposer1)', 'promise(acceptor0,proposer0)', 'promise(acceptor2,proposer0)']
265     : --------------11-----1-----
265     : ['leader(proposer2)', 'promise(acceptor0,proposer0)', 'promise(acceptor2,proposer0)']
266     : ------------1---1-----1----
266     : ['leader(proposer0)', 'promise(acceptor0,proposer1)', 'promise(acceptor2,proposer1)']
267     : --------------1-1-----1----
267     : ['leader(proposer2)', 'promise(acceptor0,proposer1)', 'promise(acceptor2,proposer1)']
268     : ------------1----1-----1---
268     : ['leader(proposer0)', 'promise(acceptor0,proposer2)', 'promise(acceptor2,proposer2)']
269     : -------------1---1-----1---
269     : ['leader(proposer1)', 'promise(acceptor0,proposer2)', 'promise(acceptor2,proposer2)']
270     : -------------1-1--1--------
270     : ['leader(proposer1)', 'promise(acceptor0,proposer0)', 'promise(acceptor1,proposer0)']
271     : --------------11--1--------
271     : ['leader(proposer2)', 'promise(acceptor0,proposer0)', 'promise(acceptor1,proposer0)']
272     : ------------1---1--1-------
272     : ['leader(proposer0)', 'promise(acceptor0,proposer1)', 'promise(acceptor1,proposer1)']
273     : --------------1-1--1-------
273     : ['leader(proposer2)', 'promise(acceptor0,proposer1)', 'promise(acceptor1,proposer1)']
274     : ------------1----1--1------
274     : ['leader(proposer0)', 'promise(acceptor0,proposer2)', 'promise(acceptor1,proposer2)']
275     : -------------1---1--1------
275     : ['leader(proposer1)', 'promise(acceptor0,proposer2)', 'promise(acceptor1,proposer2)']
357 (*) : ------------1---1---1------
357     : ['leader(proposer0)', 'promise(acceptor0,proposer1)', 'promise(acceptor1,proposer2)']
358     : ------------1----1-1-------
358     : ['leader(proposer0)', 'promise(acceptor0,proposer2)', 'promise(acceptor1,proposer1)']
359     : -------------1-1----1------
359     : ['leader(proposer1)', 'promise(acceptor0,proposer0)', 'promise(acceptor1,proposer2)']
360     : -------------1---11--------
360     : ['leader(proposer1)', 'promise(acceptor0,proposer2)', 'promise(acceptor1,proposer0)']
361     : --------------11---1-------
361     : ['leader(proposer2)', 'promise(acceptor0,proposer0)', 'promise(acceptor1,proposer1)']
362     : --------------1-1-1--------
362     : ['leader(proposer2)', 'promise(acceptor0,proposer1)', 'promise(acceptor1,proposer0)']
363     : ------------1---1------1---
363     : ['leader(proposer0)', 'promise(acceptor0,proposer1)', 'promise(acceptor2,proposer2)']
364     : ------------1----1----1----
364     : ['leader(proposer0)', 'promise(acceptor0,proposer2)', 'promise(acceptor2,proposer1)']
365     : -------------1-1-------1---
365     : ['leader(proposer1)', 'promise(acceptor0,proposer0)', 'promise(acceptor2,proposer2)']
366     : -------------1---1---1-----
366     : ['leader(proposer1)', 'promise(acceptor0,proposer2)', 'promise(acceptor2,proposer0)']
367     : --------------11------1----
367     : ['leader(proposer2)', 'promise(acceptor0,proposer0)', 'promise(acceptor2,proposer1)']
368     : --------------1-1----1-----
368     : ['leader(proposer2)', 'promise(acceptor0,proposer1)', 'promise(acceptor2,proposer0)']
369     : ------------1------1---1---
369     : ['leader(proposer0)', 'promise(acceptor1,proposer1)', 'promise(acceptor2,proposer2)']
370     : ------------1-------1-1----
370     : ['leader(proposer0)', 'promise(acceptor1,proposer2)', 'promise(acceptor2,proposer1)']
371     : -------------1----1----1---
371     : ['leader(proposer1)', 'promise(acceptor1,proposer0)', 'promise(acceptor2,proposer2)']
372     : -------------1------11-----
372     : ['leader(proposer1)', 'promise(acceptor1,proposer2)', 'promise(acceptor2,proposer0)']
373     : --------------1---1---1----
373     : ['leader(proposer2)', 'promise(acceptor1,proposer0)', 'promise(acceptor2,proposer1)']
374     : --------------1----1-1-----
374     : ['leader(proposer2)', 'promise(acceptor1,proposer1)', 'promise(acceptor2,proposer0)']
num_forall :   0
num_exists :   0
num_literals : 0
quantified form : None
qcost : 0




---------- QPrime ----------


---------- ConstArgBinding ----------

terms: ['leader(proposer1)', 'promise(acceptor1,proposer0)', 'promise(acceptor2,proposer0)']

sign_func_name2args: {'0$leader': [(Const('proposer1', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))),)], '0$promise': [(Const('acceptor1', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Const('proposer0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))), (Const('acceptor2', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Const('proposer0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))))]}

const2sigs: {Const('proposer1', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))): [proposer$0$leader$0$0], Const('acceptor1', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))): [acceptor$0$promise$0$0], Const('proposer0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))): [proposer$0$promise$1$0, proposer$0$promise$1$1], Const('acceptor2', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))): [acceptor$0$promise$0$1]}

sig2const: {'proposer$0$leader$0$0': Const('proposer1', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))), 'acceptor$0$promise$0$0': Const('acceptor1', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), 'proposer$0$promise$1$0': Const('proposer0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))), 'acceptor$0$promise$0$1': Const('acceptor2', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), 'proposer$0$promise$1$1': Const('proposer0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))}


---------- ArgPartition ----------

sort2class_sigs: {EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')): [proposer$0$leader$0$0, proposer$0$promise$1$0; proposer$0$promise$1$1], EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')): [acceptor$0$promise$0$0, acceptor$0$promise$0$1]}

sort2part_sig: {EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')): proposer$0$leader$0$0 | proposer$0$promise$1$0; proposer$0$promise$1$1, EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')): acceptor$0$promise$0$0 | acceptor$0$promise$0$1}

part_sig: ('acceptor$0$promise$0$0 | acceptor$0$promise$0$1', 'proposer$0$leader$0$0 | proposer$0$promise$1$0; proposer$0$promise$1$1')


---------- QPrime ----------


---------- ConstArgBinding ----------

terms: ['leader(proposer0)', 'promise(acceptor0,proposer1)', 'promise(acceptor1,proposer2)']

sign_func_name2args: {'0$leader': [(Const('proposer0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))),)], '0$promise': [(Const('acceptor0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Const('proposer1', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))), (Const('acceptor1', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Const('proposer2', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))))]}

const2sigs: {Const('proposer0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))): [proposer$0$leader$0$0], Const('acceptor0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))): [acceptor$0$promise$0$0], Const('proposer1', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))): [proposer$0$promise$1$0], Const('acceptor1', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))): [acceptor$0$promise$0$1], Const('proposer2', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))): [proposer$0$promise$1$1]}

sig2const: {'proposer$0$leader$0$0': Const('proposer0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))), 'acceptor$0$promise$0$0': Const('acceptor0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), 'proposer$0$promise$1$0': Const('proposer1', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))), 'acceptor$0$promise$0$1': Const('acceptor1', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), 'proposer$0$promise$1$1': Const('proposer2', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))}


---------- ArgPartition ----------

sort2class_sigs: {EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')): [proposer$0$leader$0$0, proposer$0$promise$1$0, proposer$0$promise$1$1], EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')): [acceptor$0$promise$0$0, acceptor$0$promise$0$1]}

sort2part_sig: {EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')): proposer$0$leader$0$0 | proposer$0$promise$1$0 | proposer$0$promise$1$1, EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')): acceptor$0$promise$0$0 | acceptor$0$promise$0$1}

part_sig: ('acceptor$0$promise$0$0 | acceptor$0$promise$0$1', 'proposer$0$leader$0$0 | proposer$0$promise$1$0 | proposer$0$promise$1$1')


---------- SigGenerator ----------

terms:  ['leader(proposer1)', 'promise(acceptor1,proposer0)', 'promise(acceptor2,proposer0)']

func_name2symbol:  {'leader': Const('leader', FunctionSort(EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')), BooleanSort())), 'promise': Const('promise', FunctionSort(EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')), EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')), BooleanSort()))}

func_name2args_sort:  {'leader': (EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')),), 'promise': (EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')), EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))}

sign_func_name2count:  {'0$leader': 1, '0$promise': 2}


---------- ProductArgPartition ----------

sort2class_sigs: {EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')): [proposer$0$leader$0$0, proposer$0$promise$1$0, proposer$0$promise$1$1], EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')): [acceptor$0$promise$0$0, acceptor$0$promise$0$1]}

sort2part_sig: {EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')): proposer$0$leader$0$0 | proposer$0$promise$1$0 | proposer$0$promise$1$1, EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')): acceptor$0$promise$0$0 | acceptor$0$promise$0$1}

	sort: proposer

	identical_classes: {'proposer$0$leader$0': [proposer$0$leader$0$0], 'proposer$0$promise$1': [proposer$0$promise$1$0, proposer$0$promise$1$1]}

	identical_single_classes: {'proposer$0$leader$0': proposer$0$leader$0$0}

	identical_multi_classes: {'proposer$0$promise$1': [proposer$0$promise$1$0, proposer$0$promise$1$1]}

	sort: acceptor

	identical_classes: {'acceptor$0$promise$0': [acceptor$0$promise$0$0, acceptor$0$promise$0$1]}

	identical_single_classes: {}

	identical_multi_classes: {'acceptor$0$promise$0': [acceptor$0$promise$0$0, acceptor$0$promise$0$1]}


---------- QInference: _set_sort_to_quantifier_mode ----------

quantifier mode: proposer: QuantifierMode.forall

quantifier mode: acceptor: QuantifierMode.forall


---------- QInference: _set_constraint_mode ----------

constraint mode: ConstraintMode.merge


---------- QFormula: _set_qvars ----------

forall_qvars: {Var('ACCEPTOR1', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Var('PROPOSER2', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))), Var('PROPOSER0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))), Var('PROPOSER1', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))), Var('ACCEPTOR0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')))}

exists_qvars: set()


---------- QFormula: _set_signed_func_name_to_args ----------

signed_func_name2args: {'0$leader': [[Var('PROPOSER0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))]], '0$promise': [[Var('ACCEPTOR0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Var('PROPOSER1', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))], [Var('ACCEPTOR1', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Var('PROPOSER2', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))]]}


---------- QFormula: _set_qterms ----------

qterms: ['promise(ACCEPTOR1,PROPOSER2)', 'promise(ACCEPTOR0,PROPOSER1)', 'leader(PROPOSER0)']


---------- QFormula: _get_partition_constraint ----------

partition: ('acceptor$0$promise$0$0 | acceptor$0$promise$0$1', 'proposer$0$leader$0$0 | proposer$0$promise$1$0; proposer$0$promise$1$1')[]

sort partition signature: acceptor$0$promise$0$0 | acceptor$0$promise$0$1

class signature: acceptor$0$promise$0$0


---------- QFormula: _get_class_constraint ----------

qvars: ['ACCEPTOR0:acceptor']

eq_terms: []

class signature: acceptor$0$promise$0$1


---------- QFormula: _get_class_constraint ----------

qvars: ['ACCEPTOR1:acceptor']

eq_terms: []


---------- QFormula: _get_diff_class_constraint ----------

qvars: ['ACCEPTOR1:acceptor', 'ACCEPTOR0:acceptor']

eq_terms: ['ACCEPTOR0:acceptor ~= ACCEPTOR1']

sort partition signature: proposer$0$leader$0$0 | proposer$0$promise$1$0; proposer$0$promise$1$1

class signature: proposer$0$leader$0$0


---------- QFormula: _get_class_constraint ----------

qvars: ['PROPOSER0:proposer']

eq_terms: []

class signature: proposer$0$promise$1$0; proposer$0$promise$1$1


---------- QFormula: _get_class_constraint ----------

qvars: ['PROPOSER1:proposer', 'PROPOSER2:proposer']

eq_terms: ['PROPOSER1:proposer = PROPOSER2']


---------- QFormula: _get_diff_class_constraint ----------

qvars: ['PROPOSER1:proposer', 'PROPOSER0:proposer']

eq_terms: ['PROPOSER0:proposer ~= PROPOSER1']

constraint: ['ACCEPTOR0:acceptor ~= ACCEPTOR1', 'PROPOSER1:proposer = PROPOSER2', 'PROPOSER0:proposer ~= PROPOSER1']


---------- QFormula: _get_partition_constraint ----------

partition: ('acceptor$0$promise$0$0 | acceptor$0$promise$0$1', 'proposer$0$leader$0$0 | proposer$0$promise$1$0 | proposer$0$promise$1$1')[]

sort partition signature: acceptor$0$promise$0$0 | acceptor$0$promise$0$1

class signature: acceptor$0$promise$0$0


---------- QFormula: _get_class_constraint ----------

qvars: ['ACCEPTOR0:acceptor']

eq_terms: []

class signature: acceptor$0$promise$0$1


---------- QFormula: _get_class_constraint ----------

qvars: ['ACCEPTOR1:acceptor']

eq_terms: []


---------- QFormula: _get_diff_class_constraint ----------

qvars: ['ACCEPTOR1:acceptor', 'ACCEPTOR0:acceptor']

eq_terms: ['ACCEPTOR0:acceptor ~= ACCEPTOR1']

sort partition signature: proposer$0$leader$0$0 | proposer$0$promise$1$0 | proposer$0$promise$1$1

class signature: proposer$0$leader$0$0


---------- QFormula: _get_class_constraint ----------

qvars: ['PROPOSER0:proposer']

eq_terms: []

class signature: proposer$0$promise$1$0


---------- QFormula: _get_class_constraint ----------

qvars: ['PROPOSER1:proposer']

eq_terms: []

class signature: proposer$0$promise$1$1


---------- QFormula: _get_class_constraint ----------

qvars: ['PROPOSER2:proposer']

eq_terms: []


---------- QFormula: _get_diff_class_constraint ----------

qvars: ['PROPOSER1:proposer', 'PROPOSER0:proposer', 'PROPOSER2:proposer']

eq_terms: ['PROPOSER0:proposer ~= PROPOSER1', 'PROPOSER0:proposer ~= PROPOSER2', 'PROPOSER1:proposer ~= PROPOSER2']

constraint: ['ACCEPTOR0:acceptor ~= ACCEPTOR1', 'PROPOSER0:proposer ~= PROPOSER1', 'PROPOSER0:proposer ~= PROPOSER2', 'PROPOSER1:proposer ~= PROPOSER2']


---------- QFormula: _get_partition_constraint ----------

partition: ('acceptor$0$promise$0$0 | acceptor$0$promise$0$1', 'proposer$0$leader$0$0 | proposer$0$promise$1$0; proposer$0$promise$1$1')[]

sort partition signature: acceptor$0$promise$0$0 | acceptor$0$promise$0$1

class signature: acceptor$0$promise$0$0


---------- QFormula: _get_class_constraint ----------

qvars: ['ACCEPTOR0:acceptor']

eq_terms: []

class signature: acceptor$0$promise$0$1


---------- QFormula: _get_class_constraint ----------

qvars: ['ACCEPTOR1:acceptor']

eq_terms: []


---------- QFormula: _get_diff_class_constraint ----------

qvars: ['ACCEPTOR1:acceptor', 'ACCEPTOR0:acceptor']

eq_terms: ['ACCEPTOR0:acceptor ~= ACCEPTOR1']

sort partition signature: proposer$0$leader$0$0 | proposer$0$promise$1$0; proposer$0$promise$1$1

class signature: proposer$0$leader$0$0


---------- QFormula: _get_class_constraint ----------

qvars: ['PROPOSER0:proposer']

eq_terms: []

class signature: proposer$0$promise$1$0; proposer$0$promise$1$1


---------- QFormula: _get_class_constraint ----------

qvars: ['PROPOSER1:proposer', 'PROPOSER2:proposer']

eq_terms: ['PROPOSER1:proposer = PROPOSER2']


---------- QFormula: _get_diff_class_constraint ----------

qvars: ['PROPOSER1:proposer', 'PROPOSER0:proposer']

eq_terms: ['PROPOSER0:proposer ~= PROPOSER1']

constraint: ['ACCEPTOR0:acceptor ~= ACCEPTOR1', 'PROPOSER1:proposer = PROPOSER2', 'PROPOSER0:proposer ~= PROPOSER1']


---------- QFormula: _get_partition_constraint ----------

partition: ('acceptor$0$promise$0$0 | acceptor$0$promise$0$1', 'proposer$0$leader$0$0 | proposer$0$promise$1$0 | proposer$0$promise$1$1')[]

sort partition signature: acceptor$0$promise$0$0 | acceptor$0$promise$0$1

class signature: acceptor$0$promise$0$0


---------- QFormula: _get_class_constraint ----------

qvars: ['ACCEPTOR0:acceptor']

eq_terms: []

class signature: acceptor$0$promise$0$1


---------- QFormula: _get_class_constraint ----------

qvars: ['ACCEPTOR1:acceptor']

eq_terms: []


---------- QFormula: _get_diff_class_constraint ----------

qvars: ['ACCEPTOR1:acceptor', 'ACCEPTOR0:acceptor']

eq_terms: ['ACCEPTOR0:acceptor ~= ACCEPTOR1']

sort partition signature: proposer$0$leader$0$0 | proposer$0$promise$1$0 | proposer$0$promise$1$1

class signature: proposer$0$leader$0$0


---------- QFormula: _get_class_constraint ----------

qvars: ['PROPOSER0:proposer']

eq_terms: []

class signature: proposer$0$promise$1$0


---------- QFormula: _get_class_constraint ----------

qvars: ['PROPOSER1:proposer']

eq_terms: []

class signature: proposer$0$promise$1$1


---------- QFormula: _get_class_constraint ----------

qvars: ['PROPOSER2:proposer']

eq_terms: []


---------- QFormula: _get_diff_class_constraint ----------

qvars: ['PROPOSER1:proposer', 'PROPOSER0:proposer', 'PROPOSER2:proposer']

eq_terms: ['PROPOSER0:proposer ~= PROPOSER1', 'PROPOSER0:proposer ~= PROPOSER2', 'PROPOSER1:proposer ~= PROPOSER2']

constraint: ['ACCEPTOR0:acceptor ~= ACCEPTOR1', 'PROPOSER0:proposer ~= PROPOSER1', 'PROPOSER0:proposer ~= PROPOSER2', 'PROPOSER1:proposer ~= PROPOSER2']


---------- QFormula: _get_partition_constraint ----------

partition: ('acceptor$0$promise$0$0; acceptor$0$promise$0$1', 'proposer$0$leader$0$0 | proposer$0$promise$1$0 | proposer$0$promise$1$1')[]

sort partition signature: acceptor$0$promise$0$0; acceptor$0$promise$0$1

class signature: acceptor$0$promise$0$0; acceptor$0$promise$0$1


---------- QFormula: _get_class_constraint ----------

qvars: ['ACCEPTOR0:acceptor', 'ACCEPTOR1:acceptor']

eq_terms: ['ACCEPTOR0:acceptor = ACCEPTOR1']


---------- QFormula: _get_diff_class_constraint ----------

qvars: ['ACCEPTOR0:acceptor']

eq_terms: []

sort partition signature: proposer$0$leader$0$0 | proposer$0$promise$1$0 | proposer$0$promise$1$1

class signature: proposer$0$leader$0$0


---------- QFormula: _get_class_constraint ----------

qvars: ['PROPOSER0:proposer']

eq_terms: []

class signature: proposer$0$promise$1$0


---------- QFormula: _get_class_constraint ----------

qvars: ['PROPOSER1:proposer']

eq_terms: []

class signature: proposer$0$promise$1$1


---------- QFormula: _get_class_constraint ----------

qvars: ['PROPOSER2:proposer']

eq_terms: []


---------- QFormula: _get_diff_class_constraint ----------

qvars: ['PROPOSER1:proposer', 'PROPOSER0:proposer', 'PROPOSER2:proposer']

eq_terms: ['PROPOSER0:proposer ~= PROPOSER1', 'PROPOSER0:proposer ~= PROPOSER2', 'PROPOSER1:proposer ~= PROPOSER2']

constraint: ['ACCEPTOR0:acceptor = ACCEPTOR1', 'PROPOSER0:proposer ~= PROPOSER1', 'PROPOSER0:proposer ~= PROPOSER2', 'PROPOSER1:proposer ~= PROPOSER2']


---------- QFormula: _get_partition_constraint ----------

partition: ('acceptor$0$promise$0$0; acceptor$0$promise$0$1', 'proposer$0$leader$0$0 | proposer$0$promise$1$0 | proposer$0$promise$1$1')[]

sort partition signature: acceptor$0$promise$0$0; acceptor$0$promise$0$1

class signature: acceptor$0$promise$0$0; acceptor$0$promise$0$1


---------- QFormula: _get_class_constraint ----------

qvars: ['ACCEPTOR0:acceptor', 'ACCEPTOR1:acceptor']

eq_terms: ['ACCEPTOR0:acceptor = ACCEPTOR1']


---------- QFormula: _get_diff_class_constraint ----------

qvars: ['ACCEPTOR0:acceptor']

eq_terms: []

sort partition signature: proposer$0$leader$0$0 | proposer$0$promise$1$0 | proposer$0$promise$1$1

class signature: proposer$0$leader$0$0


---------- QFormula: _get_class_constraint ----------

qvars: ['PROPOSER0:proposer']

eq_terms: []

class signature: proposer$0$promise$1$0


---------- QFormula: _get_class_constraint ----------

qvars: ['PROPOSER1:proposer']

eq_terms: []

class signature: proposer$0$promise$1$1


---------- QFormula: _get_class_constraint ----------

qvars: ['PROPOSER2:proposer']

eq_terms: []


---------- QFormula: _get_diff_class_constraint ----------

qvars: ['PROPOSER1:proposer', 'PROPOSER0:proposer', 'PROPOSER2:proposer']

eq_terms: ['PROPOSER0:proposer ~= PROPOSER1', 'PROPOSER0:proposer ~= PROPOSER2', 'PROPOSER1:proposer ~= PROPOSER2']

constraint: ['ACCEPTOR0:acceptor = ACCEPTOR1', 'PROPOSER0:proposer ~= PROPOSER1', 'PROPOSER0:proposer ~= PROPOSER2', 'PROPOSER1:proposer ~= PROPOSER2']


---------- QFormula: _get_partition_constraint ----------

partition: ('acceptor$0$promise$0$0; acceptor$0$promise$0$1', 'proposer$0$leader$0$0 | proposer$0$promise$1$0; proposer$0$promise$1$1')[]

sort partition signature: acceptor$0$promise$0$0; acceptor$0$promise$0$1

class signature: acceptor$0$promise$0$0; acceptor$0$promise$0$1


---------- QFormula: _get_class_constraint ----------

qvars: ['ACCEPTOR0:acceptor', 'ACCEPTOR1:acceptor']

eq_terms: ['ACCEPTOR0:acceptor = ACCEPTOR1']


---------- QFormula: _get_diff_class_constraint ----------

qvars: ['ACCEPTOR0:acceptor']

eq_terms: []

sort partition signature: proposer$0$leader$0$0 | proposer$0$promise$1$0; proposer$0$promise$1$1

class signature: proposer$0$leader$0$0


---------- QFormula: _get_class_constraint ----------

qvars: ['PROPOSER0:proposer']

eq_terms: []

class signature: proposer$0$promise$1$0; proposer$0$promise$1$1


---------- QFormula: _get_class_constraint ----------

qvars: ['PROPOSER1:proposer', 'PROPOSER2:proposer']

eq_terms: ['PROPOSER1:proposer = PROPOSER2']


---------- QFormula: _get_diff_class_constraint ----------

qvars: ['PROPOSER1:proposer', 'PROPOSER0:proposer']

eq_terms: ['PROPOSER0:proposer ~= PROPOSER1']

constraint: ['ACCEPTOR0:acceptor = ACCEPTOR1', 'PROPOSER1:proposer = PROPOSER2', 'PROPOSER0:proposer ~= PROPOSER1']


---------- QFormula: get_qclause ----------

qclause: forall PROPOSER1,PROPOSER2,ACCEPTOR0,PROPOSER0,ACCEPTOR1. ~promise(ACCEPTOR1,PROPOSER2) | ~promise(ACCEPTOR0,PROPOSER1) | ~leader(PROPOSER0) | ((ACCEPTOR0 = ACCEPTOR1 | PROPOSER1 ~= PROPOSER2 | PROPOSER0 = PROPOSER1) & (ACCEPTOR0 = ACCEPTOR1 | PROPOSER0 = PROPOSER1 | PROPOSER0 = PROPOSER2 | PROPOSER1 = PROPOSER2))


=== Prime Orbit 16 =====================
size : 9
num_suborbits: 1
276 (*) : 0-----------1--------0-----
276     : ['leader(proposer0)', '~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~promise(acceptor2,proposer0)']
277     : -0-----------1--------0----
277     : ['leader(proposer1)', '~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~promise(acceptor2,proposer1)']
278     : --0-----------1--------0---
278     : ['leader(proposer2)', '~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~promise(acceptor2,proposer2)']
279     : ---0--------1-----0--------
279     : ['leader(proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~promise(acceptor1,proposer0)']
280     : ----0--------1-----0-------
280     : ['leader(proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~promise(acceptor1,proposer1)']
281     : -----0--------1-----0------
281     : ['leader(proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~promise(acceptor1,proposer2)']
282     : ------0-----1--0-----------
282     : ['leader(proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~promise(acceptor0,proposer0)']
283     : -------0-----1--0----------
283     : ['leader(proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~promise(acceptor0,proposer1)']
284     : --------0-----1--0---------
284     : ['leader(proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~promise(acceptor0,proposer2)']
num_forall :   0
num_exists :   0
num_literals : 0
quantified form : None
qcost : 0




---------- QPrime ----------


---------- ConstArgBinding ----------

terms: ['~chosenAt(quorum__acceptor0_acceptor1,proposer0)', 'leader(proposer0)', '~promise(acceptor2,proposer0)', '~member(acceptor2,quorum__acceptor0_acceptor1)']

sign_func_name2args: {'1$chosenAt': [(Const('quorum__acceptor0_acceptor1', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), Const('proposer0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))))], '0$leader': [(Const('proposer0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))),)], '1$promise': [(Const('acceptor2', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Const('proposer0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))))], '1$member': [(Const('acceptor2', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Const('quorum__acceptor0_acceptor1', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))))]}

const2sigs: {Const('quorum__acceptor0_acceptor1', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))): [quorum$1$chosenAt$0$0, quorum$1$member$1$0], Const('proposer0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))): [proposer$1$chosenAt$1$0, proposer$0$leader$0$0, proposer$1$promise$1$0], Const('acceptor2', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))): [acceptor$1$promise$0$0, acceptor$1$member$0$0]}

sig2const: {'quorum$1$chosenAt$0$0': Const('quorum__acceptor0_acceptor1', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), 'proposer$1$chosenAt$1$0': Const('proposer0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))), 'proposer$0$leader$0$0': Const('proposer0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))), 'acceptor$1$promise$0$0': Const('acceptor2', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), 'proposer$1$promise$1$0': Const('proposer0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))), 'acceptor$1$member$0$0': Const('acceptor2', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), 'quorum$1$member$1$0': Const('quorum__acceptor0_acceptor1', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')))}


---------- ArgPartition ----------

sort2class_sigs: {EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')): [quorum$1$chosenAt$0$0; quorum$1$member$1$0], EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')): [proposer$0$leader$0$0; proposer$1$chosenAt$1$0; proposer$1$promise$1$0], EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')): [acceptor$1$member$0$0; acceptor$1$promise$0$0]}

sort2part_sig: {EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')): quorum$1$chosenAt$0$0; quorum$1$member$1$0, EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')): proposer$0$leader$0$0; proposer$1$chosenAt$1$0; proposer$1$promise$1$0, EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')): acceptor$1$member$0$0; acceptor$1$promise$0$0}

part_sig: ('acceptor$1$member$0$0; acceptor$1$promise$0$0', 'proposer$0$leader$0$0; proposer$1$chosenAt$1$0; proposer$1$promise$1$0', 'quorum$1$chosenAt$0$0; quorum$1$member$1$0')


---------- SigGenerator ----------

terms:  ['~chosenAt(quorum__acceptor0_acceptor1,proposer0)', 'leader(proposer0)', '~promise(acceptor2,proposer0)', '~member(acceptor2,quorum__acceptor0_acceptor1)']

func_name2symbol:  {'chosenAt': Const('chosenAt', FunctionSort(EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')), EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')), BooleanSort())), 'leader': Const('leader', FunctionSort(EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')), BooleanSort())), 'promise': Const('promise', FunctionSort(EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')), EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')), BooleanSort())), 'member': Const('member', FunctionSort(EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')), EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')), BooleanSort()))}

func_name2args_sort:  {'chosenAt': (EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')), EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))), 'leader': (EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')),), 'promise': (EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')), EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))), 'member': (EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')), EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')))}

sign_func_name2count:  {'1$chosenAt': 1, '0$leader': 1, '1$promise': 1, '1$member': 1}


---------- ProductArgPartition ----------

sort2class_sigs: {EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')): [quorum$1$chosenAt$0$0; quorum$1$member$1$0], EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')): [proposer$0$leader$0$0; proposer$1$chosenAt$1$0; proposer$1$promise$1$0], EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')): [acceptor$1$member$0$0; acceptor$1$promise$0$0]}

sort2part_sig: {EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')): quorum$1$chosenAt$0$0; quorum$1$member$1$0, EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')): proposer$0$leader$0$0; proposer$1$chosenAt$1$0; proposer$1$promise$1$0, EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')): acceptor$1$member$0$0; acceptor$1$promise$0$0}

	sort: quorum

	identical_classes: {'quorum$1$chosenAt$0; quorum$1$member$1': [quorum$1$chosenAt$0$0; quorum$1$member$1$0]}

	identical_single_classes: {'quorum$1$chosenAt$0; quorum$1$member$1': quorum$1$chosenAt$0$0; quorum$1$member$1$0}

	identical_multi_classes: {}

	sort: proposer

	identical_classes: {'proposer$0$leader$0; proposer$1$chosenAt$1; proposer$1$promise$1': [proposer$0$leader$0$0; proposer$1$chosenAt$1$0; proposer$1$promise$1$0]}

	identical_single_classes: {'proposer$0$leader$0; proposer$1$chosenAt$1; proposer$1$promise$1': proposer$0$leader$0$0; proposer$1$chosenAt$1$0; proposer$1$promise$1$0}

	identical_multi_classes: {}

	sort: acceptor

	identical_classes: {'acceptor$1$member$0; acceptor$1$promise$0': [acceptor$1$member$0$0; acceptor$1$promise$0$0]}

	identical_single_classes: {'acceptor$1$member$0; acceptor$1$promise$0': acceptor$1$member$0$0; acceptor$1$promise$0$0}

	identical_multi_classes: {}


---------- QInference: _set_sort_to_quantifier_mode ----------

quantifier mode: quorum: QuantifierMode.forall

quantifier mode: proposer: QuantifierMode.forall

quantifier mode: acceptor: QuantifierMode.forall


---------- QInference: _set_constraint_mode ----------

constraint mode: ConstraintMode.no_merge


---------- QFormula: _set_qvars ----------

forall_qvars: {Var('ACCEPTOR0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Var('PROPOSER0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))), Var('QUORUM0', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')))}

exists_qvars: set()


---------- QFormula: _set_signed_func_name_to_args ----------

signed_func_name2args: {'1$chosenAt': [[Var('QUORUM0', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), Var('PROPOSER0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))]], '0$leader': [[Var('PROPOSER0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))]], '1$promise': [[Var('ACCEPTOR0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Var('PROPOSER0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))]], '1$member': [[Var('ACCEPTOR0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Var('QUORUM0', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')))]]}


---------- QFormula: _set_qterms ----------

qterms: ['~chosenAt(QUORUM0,PROPOSER0)', '~promise(ACCEPTOR0,PROPOSER0)', 'leader(PROPOSER0)', '~member(ACCEPTOR0,QUORUM0)']


---------- QFormula: get_qclause ----------

qclause: forall ACCEPTOR0,PROPOSER0,QUORUM0. chosenAt(QUORUM0,PROPOSER0) | promise(ACCEPTOR0,PROPOSER0) | ~leader(PROPOSER0) | member(ACCEPTOR0,QUORUM0)


=== Prime Orbit 17 =====================
size : 9
num_suborbits: 1
285 (*) : 0----------11--------------
285     : ['didNotPromise(acceptor2)', 'leader(proposer0)', '~chosenAt(quorum__acceptor0_acceptor1,proposer0)']
286     : -0---------1-1-------------
286     : ['didNotPromise(acceptor2)', 'leader(proposer1)', '~chosenAt(quorum__acceptor0_acceptor1,proposer1)']
287     : --0--------1--1------------
287     : ['didNotPromise(acceptor2)', 'leader(proposer2)', '~chosenAt(quorum__acceptor0_acceptor1,proposer2)']
288     : ---0------1-1--------------
288     : ['didNotPromise(acceptor1)', 'leader(proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)']
289     : ----0-----1--1-------------
289     : ['didNotPromise(acceptor1)', 'leader(proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)']
290     : -----0----1---1------------
290     : ['didNotPromise(acceptor1)', 'leader(proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)']
291     : ------0--1--1--------------
291     : ['didNotPromise(acceptor0)', 'leader(proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)']
292     : -------0-1---1-------------
292     : ['didNotPromise(acceptor0)', 'leader(proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)']
293     : --------01----1------------
293     : ['didNotPromise(acceptor0)', 'leader(proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)']
num_forall :   0
num_exists :   0
num_literals : 0
quantified form : None
qcost : 0




---------- QPrime ----------


---------- ConstArgBinding ----------

terms: ['~chosenAt(quorum__acceptor0_acceptor1,proposer0)', 'didNotPromise(acceptor2)', 'leader(proposer0)', '~member(acceptor2,quorum__acceptor0_acceptor1)']

sign_func_name2args: {'1$chosenAt': [(Const('quorum__acceptor0_acceptor1', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), Const('proposer0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))))], '0$didNotPromise': [(Const('acceptor2', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))),)], '0$leader': [(Const('proposer0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))),)], '1$member': [(Const('acceptor2', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Const('quorum__acceptor0_acceptor1', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))))]}

const2sigs: {Const('quorum__acceptor0_acceptor1', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))): [quorum$1$chosenAt$0$0, quorum$1$member$1$0], Const('proposer0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))): [proposer$1$chosenAt$1$0, proposer$0$leader$0$0], Const('acceptor2', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))): [acceptor$0$didNotPromise$0$0, acceptor$1$member$0$0]}

sig2const: {'quorum$1$chosenAt$0$0': Const('quorum__acceptor0_acceptor1', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), 'proposer$1$chosenAt$1$0': Const('proposer0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))), 'acceptor$0$didNotPromise$0$0': Const('acceptor2', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), 'proposer$0$leader$0$0': Const('proposer0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))), 'acceptor$1$member$0$0': Const('acceptor2', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), 'quorum$1$member$1$0': Const('quorum__acceptor0_acceptor1', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')))}


---------- ArgPartition ----------

sort2class_sigs: {EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')): [quorum$1$chosenAt$0$0; quorum$1$member$1$0], EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')): [proposer$0$leader$0$0; proposer$1$chosenAt$1$0], EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')): [acceptor$0$didNotPromise$0$0; acceptor$1$member$0$0]}

sort2part_sig: {EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')): quorum$1$chosenAt$0$0; quorum$1$member$1$0, EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')): proposer$0$leader$0$0; proposer$1$chosenAt$1$0, EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')): acceptor$0$didNotPromise$0$0; acceptor$1$member$0$0}

part_sig: ('acceptor$0$didNotPromise$0$0; acceptor$1$member$0$0', 'proposer$0$leader$0$0; proposer$1$chosenAt$1$0', 'quorum$1$chosenAt$0$0; quorum$1$member$1$0')


---------- SigGenerator ----------

terms:  ['~chosenAt(quorum__acceptor0_acceptor1,proposer0)', 'didNotPromise(acceptor2)', 'leader(proposer0)', '~member(acceptor2,quorum__acceptor0_acceptor1)']

func_name2symbol:  {'chosenAt': Const('chosenAt', FunctionSort(EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')), EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')), BooleanSort())), 'didNotPromise': Const('didNotPromise', FunctionSort(EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')), BooleanSort())), 'leader': Const('leader', FunctionSort(EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')), BooleanSort())), 'member': Const('member', FunctionSort(EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')), EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')), BooleanSort()))}

func_name2args_sort:  {'chosenAt': (EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')), EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))), 'didNotPromise': (EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')),), 'leader': (EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')),), 'member': (EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')), EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')))}

sign_func_name2count:  {'1$chosenAt': 1, '0$didNotPromise': 1, '0$leader': 1, '1$member': 1}


---------- ProductArgPartition ----------

sort2class_sigs: {EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')): [quorum$1$chosenAt$0$0; quorum$1$member$1$0], EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')): [proposer$0$leader$0$0; proposer$1$chosenAt$1$0], EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')): [acceptor$0$didNotPromise$0$0; acceptor$1$member$0$0]}

sort2part_sig: {EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')): quorum$1$chosenAt$0$0; quorum$1$member$1$0, EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')): proposer$0$leader$0$0; proposer$1$chosenAt$1$0, EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')): acceptor$0$didNotPromise$0$0; acceptor$1$member$0$0}

	sort: quorum

	identical_classes: {'quorum$1$chosenAt$0; quorum$1$member$1': [quorum$1$chosenAt$0$0; quorum$1$member$1$0]}

	identical_single_classes: {'quorum$1$chosenAt$0; quorum$1$member$1': quorum$1$chosenAt$0$0; quorum$1$member$1$0}

	identical_multi_classes: {}

	sort: proposer

	identical_classes: {'proposer$0$leader$0; proposer$1$chosenAt$1': [proposer$0$leader$0$0; proposer$1$chosenAt$1$0]}

	identical_single_classes: {'proposer$0$leader$0; proposer$1$chosenAt$1': proposer$0$leader$0$0; proposer$1$chosenAt$1$0}

	identical_multi_classes: {}

	sort: acceptor

	identical_classes: {'acceptor$0$didNotPromise$0; acceptor$1$member$0': [acceptor$0$didNotPromise$0$0; acceptor$1$member$0$0]}

	identical_single_classes: {'acceptor$0$didNotPromise$0; acceptor$1$member$0': acceptor$0$didNotPromise$0$0; acceptor$1$member$0$0}

	identical_multi_classes: {}


---------- QInference: _set_sort_to_quantifier_mode ----------

quantifier mode: quorum: QuantifierMode.forall

quantifier mode: proposer: QuantifierMode.forall

quantifier mode: acceptor: QuantifierMode.forall


---------- QInference: _set_constraint_mode ----------

constraint mode: ConstraintMode.no_merge


---------- QFormula: _set_qvars ----------

forall_qvars: {Var('ACCEPTOR0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Var('PROPOSER0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))), Var('QUORUM0', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')))}

exists_qvars: set()


---------- QFormula: _set_signed_func_name_to_args ----------

signed_func_name2args: {'1$chosenAt': [[Var('QUORUM0', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), Var('PROPOSER0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))]], '0$didNotPromise': [[Var('ACCEPTOR0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')))]], '0$leader': [[Var('PROPOSER0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))]], '1$member': [[Var('ACCEPTOR0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Var('QUORUM0', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')))]]}


---------- QFormula: _set_qterms ----------

qterms: ['~chosenAt(QUORUM0,PROPOSER0)', 'leader(PROPOSER0)', '~member(ACCEPTOR0,QUORUM0)', 'didNotPromise(ACCEPTOR0)']


---------- QFormula: get_qclause ----------

qclause: forall ACCEPTOR0,PROPOSER0,QUORUM0. chosenAt(QUORUM0,PROPOSER0) | ~leader(PROPOSER0) | member(ACCEPTOR0,QUORUM0) | ~didNotPromise(ACCEPTOR0)


=== Prime Orbit 18 =====================
size : 9
num_suborbits: 1
294 (*) : ------------1-----0--0-----
294     : ['leader(proposer0)', '~promise(acceptor1,proposer0)', '~promise(acceptor2,proposer0)']
295     : -------------1-----0--0----
295     : ['leader(proposer1)', '~promise(acceptor1,proposer1)', '~promise(acceptor2,proposer1)']
296     : --------------1-----0--0---
296     : ['leader(proposer2)', '~promise(acceptor1,proposer2)', '~promise(acceptor2,proposer2)']
297     : ------------1--0-----0-----
297     : ['leader(proposer0)', '~promise(acceptor0,proposer0)', '~promise(acceptor2,proposer0)']
298     : -------------1--0-----0----
298     : ['leader(proposer1)', '~promise(acceptor0,proposer1)', '~promise(acceptor2,proposer1)']
299     : --------------1--0-----0---
299     : ['leader(proposer2)', '~promise(acceptor0,proposer2)', '~promise(acceptor2,proposer2)']
300     : ------------1--0--0--------
300     : ['leader(proposer0)', '~promise(acceptor0,proposer0)', '~promise(acceptor1,proposer0)']
301     : -------------1--0--0-------
301     : ['leader(proposer1)', '~promise(acceptor0,proposer1)', '~promise(acceptor1,proposer1)']
302     : --------------1--0--0------
302     : ['leader(proposer2)', '~promise(acceptor0,proposer2)', '~promise(acceptor1,proposer2)']
num_forall :   0
num_exists :   0
num_literals : 0
quantified form : None
qcost : 0




---------- QPrime ----------


---------- ConstArgBinding ----------

terms: ['leader(proposer0)', '~promise(acceptor1,proposer0)', '~promise(acceptor2,proposer0)']

sign_func_name2args: {'0$leader': [(Const('proposer0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))),)], '1$promise': [(Const('acceptor1', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Const('proposer0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))), (Const('acceptor2', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Const('proposer0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))))]}

const2sigs: {Const('proposer0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))): [proposer$0$leader$0$0, proposer$1$promise$1$0, proposer$1$promise$1$1], Const('acceptor1', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))): [acceptor$1$promise$0$0], Const('acceptor2', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))): [acceptor$1$promise$0$1]}

sig2const: {'proposer$0$leader$0$0': Const('proposer0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))), 'acceptor$1$promise$0$0': Const('acceptor1', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), 'proposer$1$promise$1$0': Const('proposer0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))), 'acceptor$1$promise$0$1': Const('acceptor2', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), 'proposer$1$promise$1$1': Const('proposer0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))}


---------- ArgPartition ----------

sort2class_sigs: {EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')): [proposer$0$leader$0$0; proposer$1$promise$1$0; proposer$1$promise$1$1], EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')): [acceptor$1$promise$0$0, acceptor$1$promise$0$1]}

sort2part_sig: {EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')): proposer$0$leader$0$0; proposer$1$promise$1$0; proposer$1$promise$1$1, EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')): acceptor$1$promise$0$0 | acceptor$1$promise$0$1}

part_sig: ('acceptor$1$promise$0$0 | acceptor$1$promise$0$1', 'proposer$0$leader$0$0; proposer$1$promise$1$0; proposer$1$promise$1$1')


---------- SigGenerator ----------

terms:  ['leader(proposer0)', '~promise(acceptor1,proposer0)', '~promise(acceptor2,proposer0)']

func_name2symbol:  {'leader': Const('leader', FunctionSort(EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')), BooleanSort())), 'promise': Const('promise', FunctionSort(EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')), EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')), BooleanSort()))}

func_name2args_sort:  {'leader': (EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')),), 'promise': (EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')), EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))}

sign_func_name2count:  {'0$leader': 1, '1$promise': 2}


---------- ProductArgPartition ----------

sort2class_sigs: {EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')): [proposer$0$leader$0$0; proposer$1$promise$1$0; proposer$1$promise$1$1], EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')): [acceptor$1$promise$0$0, acceptor$1$promise$0$1]}

sort2part_sig: {EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')): proposer$0$leader$0$0; proposer$1$promise$1$0; proposer$1$promise$1$1, EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')): acceptor$1$promise$0$0 | acceptor$1$promise$0$1}

	sort: proposer

	identical_classes: {'proposer$0$leader$0; proposer$1$promise$1; proposer$1$promise$1': [proposer$0$leader$0$0; proposer$1$promise$1$0; proposer$1$promise$1$1]}

	identical_single_classes: {'proposer$0$leader$0; proposer$1$promise$1; proposer$1$promise$1': proposer$0$leader$0$0; proposer$1$promise$1$0; proposer$1$promise$1$1}

	identical_multi_classes: {}

	sort: acceptor

	identical_classes: {'acceptor$1$promise$0': [acceptor$1$promise$0$0, acceptor$1$promise$0$1]}

	identical_single_classes: {}

	identical_multi_classes: {'acceptor$1$promise$0': [acceptor$1$promise$0$0, acceptor$1$promise$0$1]}


---------- QInference: _set_sort_to_quantifier_mode ----------

quantifier mode: proposer: QuantifierMode.forall

quantifier mode: acceptor: QuantifierMode.forall


---------- QInference: _set_constraint_mode ----------

constraint mode: ConstraintMode.no_merge


---------- QFormula: _set_qvars ----------

forall_qvars: {Var('ACCEPTOR0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Var('PROPOSER0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))), Var('ACCEPTOR1', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')))}

exists_qvars: set()


---------- QFormula: _set_signed_func_name_to_args ----------

signed_func_name2args: {'0$leader': [[Var('PROPOSER0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))]], '1$promise': [[Var('ACCEPTOR0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Var('PROPOSER0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))], [Var('ACCEPTOR1', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Var('PROPOSER0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))]]}


---------- QFormula: _set_qterms ----------

qterms: ['~promise(ACCEPTOR0,PROPOSER0)', 'leader(PROPOSER0)', '~promise(ACCEPTOR1,PROPOSER0)']


---------- QFormula: get_qclause ----------

qclause: forall ACCEPTOR1,ACCEPTOR0,PROPOSER0. promise(ACCEPTOR0,PROPOSER0) | ~leader(PROPOSER0) | promise(ACCEPTOR1,PROPOSER0) | ACCEPTOR0 = ACCEPTOR1


=== Prime Orbit 19 =====================
size : 18
num_suborbits: 1
303 (*) : -----------11-----0--------
303     : ['didNotPromise(acceptor2)', 'leader(proposer0)', '~promise(acceptor1,proposer0)']
304     : -----------1-1-----0-------
304     : ['didNotPromise(acceptor2)', 'leader(proposer1)', '~promise(acceptor1,proposer1)']
305     : -----------1--1-----0------
305     : ['didNotPromise(acceptor2)', 'leader(proposer2)', '~promise(acceptor1,proposer2)']
306     : ----------1-1--------0-----
306     : ['didNotPromise(acceptor1)', 'leader(proposer0)', '~promise(acceptor2,proposer0)']
307     : ----------1--1--------0----
307     : ['didNotPromise(acceptor1)', 'leader(proposer1)', '~promise(acceptor2,proposer1)']
308     : ----------1---1--------0---
308     : ['didNotPromise(acceptor1)', 'leader(proposer2)', '~promise(acceptor2,proposer2)']
309     : -----------11--0-----------
309     : ['didNotPromise(acceptor2)', 'leader(proposer0)', '~promise(acceptor0,proposer0)']
310     : -----------1-1--0----------
310     : ['didNotPromise(acceptor2)', 'leader(proposer1)', '~promise(acceptor0,proposer1)']
311     : -----------1--1--0---------
311     : ['didNotPromise(acceptor2)', 'leader(proposer2)', '~promise(acceptor0,proposer2)']
312     : ---------1--1--------0-----
312     : ['didNotPromise(acceptor0)', 'leader(proposer0)', '~promise(acceptor2,proposer0)']
313     : ---------1---1--------0----
313     : ['didNotPromise(acceptor0)', 'leader(proposer1)', '~promise(acceptor2,proposer1)']
314     : ---------1----1--------0---
314     : ['didNotPromise(acceptor0)', 'leader(proposer2)', '~promise(acceptor2,proposer2)']
315     : ----------1-1--0-----------
315     : ['didNotPromise(acceptor1)', 'leader(proposer0)', '~promise(acceptor0,proposer0)']
316     : ----------1--1--0----------
316     : ['didNotPromise(acceptor1)', 'leader(proposer1)', '~promise(acceptor0,proposer1)']
317     : ----------1---1--0---------
317     : ['didNotPromise(acceptor1)', 'leader(proposer2)', '~promise(acceptor0,proposer2)']
318     : ---------1--1-----0--------
318     : ['didNotPromise(acceptor0)', 'leader(proposer0)', '~promise(acceptor1,proposer0)']
319     : ---------1---1-----0-------
319     : ['didNotPromise(acceptor0)', 'leader(proposer1)', '~promise(acceptor1,proposer1)']
320     : ---------1----1-----0------
320     : ['didNotPromise(acceptor0)', 'leader(proposer2)', '~promise(acceptor1,proposer2)']
num_forall :   0
num_exists :   0
num_literals : 0
quantified form : None
qcost : 0




---------- QPrime ----------


---------- ConstArgBinding ----------

terms: ['didNotPromise(acceptor2)', 'leader(proposer0)', '~promise(acceptor1,proposer0)']

sign_func_name2args: {'0$didNotPromise': [(Const('acceptor2', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))),)], '0$leader': [(Const('proposer0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))),)], '1$promise': [(Const('acceptor1', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Const('proposer0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))))]}

const2sigs: {Const('acceptor2', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))): [acceptor$0$didNotPromise$0$0], Const('proposer0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))): [proposer$0$leader$0$0, proposer$1$promise$1$0], Const('acceptor1', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))): [acceptor$1$promise$0$0]}

sig2const: {'acceptor$0$didNotPromise$0$0': Const('acceptor2', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), 'proposer$0$leader$0$0': Const('proposer0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))), 'acceptor$1$promise$0$0': Const('acceptor1', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), 'proposer$1$promise$1$0': Const('proposer0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))}


---------- ArgPartition ----------

sort2class_sigs: {EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')): [acceptor$0$didNotPromise$0$0, acceptor$1$promise$0$0], EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')): [proposer$0$leader$0$0; proposer$1$promise$1$0]}

sort2part_sig: {EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')): acceptor$0$didNotPromise$0$0 | acceptor$1$promise$0$0, EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')): proposer$0$leader$0$0; proposer$1$promise$1$0}

part_sig: ('acceptor$0$didNotPromise$0$0 | acceptor$1$promise$0$0', 'proposer$0$leader$0$0; proposer$1$promise$1$0')


---------- SigGenerator ----------

terms:  ['didNotPromise(acceptor2)', 'leader(proposer0)', '~promise(acceptor1,proposer0)']

func_name2symbol:  {'didNotPromise': Const('didNotPromise', FunctionSort(EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')), BooleanSort())), 'leader': Const('leader', FunctionSort(EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')), BooleanSort())), 'promise': Const('promise', FunctionSort(EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')), EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')), BooleanSort()))}

func_name2args_sort:  {'didNotPromise': (EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')),), 'leader': (EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')),), 'promise': (EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')), EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))}

sign_func_name2count:  {'0$didNotPromise': 1, '0$leader': 1, '1$promise': 1}


---------- ProductArgPartition ----------

sort2class_sigs: {EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')): [acceptor$0$didNotPromise$0$0, acceptor$1$promise$0$0], EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')): [proposer$0$leader$0$0; proposer$1$promise$1$0]}

sort2part_sig: {EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')): acceptor$0$didNotPromise$0$0 | acceptor$1$promise$0$0, EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')): proposer$0$leader$0$0; proposer$1$promise$1$0}

	sort: acceptor

	identical_classes: {'acceptor$0$didNotPromise$0': [acceptor$0$didNotPromise$0$0], 'acceptor$1$promise$0': [acceptor$1$promise$0$0]}

	identical_single_classes: {'acceptor$0$didNotPromise$0': acceptor$0$didNotPromise$0$0, 'acceptor$1$promise$0': acceptor$1$promise$0$0}

	identical_multi_classes: {}

	sort: proposer

	identical_classes: {'proposer$0$leader$0; proposer$1$promise$1': [proposer$0$leader$0$0; proposer$1$promise$1$0]}

	identical_single_classes: {'proposer$0$leader$0; proposer$1$promise$1': proposer$0$leader$0$0; proposer$1$promise$1$0}

	identical_multi_classes: {}


---------- QInference: _set_sort_to_quantifier_mode ----------

quantifier mode: acceptor: QuantifierMode.forall

quantifier mode: proposer: QuantifierMode.forall


---------- QInference: _set_constraint_mode ----------

constraint mode: ConstraintMode.no_merge


---------- QFormula: _set_qvars ----------

forall_qvars: {Var('ACCEPTOR1', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Var('ACCEPTOR0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Var('PROPOSER0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))}

exists_qvars: set()


---------- QFormula: _set_signed_func_name_to_args ----------

signed_func_name2args: {'0$didNotPromise': [[Var('ACCEPTOR0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')))]], '0$leader': [[Var('PROPOSER0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))]], '1$promise': [[Var('ACCEPTOR1', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Var('PROPOSER0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))]]}


---------- QFormula: _set_qterms ----------

qterms: ['leader(PROPOSER0)', '~promise(ACCEPTOR1,PROPOSER0)', 'didNotPromise(ACCEPTOR0)']


---------- QFormula: get_qclause ----------

qclause: forall ACCEPTOR1,ACCEPTOR0,PROPOSER0. ~leader(PROPOSER0) | promise(ACCEPTOR1,PROPOSER0) | ~didNotPromise(ACCEPTOR0) | ACCEPTOR0 = ACCEPTOR1


=== Prime Orbit 20 =====================
size : 9
num_suborbits: 1
321 (*) : ---------1-11--------------
321     : ['didNotPromise(acceptor0)', 'didNotPromise(acceptor2)', 'leader(proposer0)']
322     : ---------1-1-1-------------
322     : ['didNotPromise(acceptor0)', 'didNotPromise(acceptor2)', 'leader(proposer1)']
323     : ---------1-1--1------------
323     : ['didNotPromise(acceptor0)', 'didNotPromise(acceptor2)', 'leader(proposer2)']
324     : ---------11-1--------------
324     : ['didNotPromise(acceptor0)', 'didNotPromise(acceptor1)', 'leader(proposer0)']
325     : ---------11--1-------------
325     : ['didNotPromise(acceptor0)', 'didNotPromise(acceptor1)', 'leader(proposer1)']
326     : ---------11---1------------
326     : ['didNotPromise(acceptor0)', 'didNotPromise(acceptor1)', 'leader(proposer2)']
327     : ----------111--------------
327     : ['didNotPromise(acceptor1)', 'didNotPromise(acceptor2)', 'leader(proposer0)']
328     : ----------11-1-------------
328     : ['didNotPromise(acceptor1)', 'didNotPromise(acceptor2)', 'leader(proposer1)']
329     : ----------11--1------------
329     : ['didNotPromise(acceptor1)', 'didNotPromise(acceptor2)', 'leader(proposer2)']
num_forall :   0
num_exists :   0
num_literals : 0
quantified form : None
qcost : 0




---------- QPrime ----------


---------- ConstArgBinding ----------

terms: ['didNotPromise(acceptor0)', 'didNotPromise(acceptor2)', 'leader(proposer0)']

sign_func_name2args: {'0$didNotPromise': [(Const('acceptor0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))),), (Const('acceptor2', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))),)], '0$leader': [(Const('proposer0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))),)]}

const2sigs: {Const('acceptor0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))): [acceptor$0$didNotPromise$0$0], Const('acceptor2', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))): [acceptor$0$didNotPromise$0$1], Const('proposer0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))): [proposer$0$leader$0$0]}

sig2const: {'acceptor$0$didNotPromise$0$0': Const('acceptor0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), 'acceptor$0$didNotPromise$0$1': Const('acceptor2', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), 'proposer$0$leader$0$0': Const('proposer0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))}


---------- ArgPartition ----------

sort2class_sigs: {EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')): [acceptor$0$didNotPromise$0$0, acceptor$0$didNotPromise$0$1], EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')): [proposer$0$leader$0$0]}

sort2part_sig: {EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')): acceptor$0$didNotPromise$0$0 | acceptor$0$didNotPromise$0$1, EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')): proposer$0$leader$0$0}

part_sig: ('acceptor$0$didNotPromise$0$0 | acceptor$0$didNotPromise$0$1', 'proposer$0$leader$0$0')


---------- SigGenerator ----------

terms:  ['didNotPromise(acceptor0)', 'didNotPromise(acceptor2)', 'leader(proposer0)']

func_name2symbol:  {'didNotPromise': Const('didNotPromise', FunctionSort(EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')), BooleanSort())), 'leader': Const('leader', FunctionSort(EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')), BooleanSort()))}

func_name2args_sort:  {'didNotPromise': (EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')),), 'leader': (EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')),)}

sign_func_name2count:  {'0$didNotPromise': 2, '0$leader': 1}


---------- ProductArgPartition ----------

sort2class_sigs: {EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')): [acceptor$0$didNotPromise$0$0, acceptor$0$didNotPromise$0$1], EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')): [proposer$0$leader$0$0]}

sort2part_sig: {EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')): acceptor$0$didNotPromise$0$0 | acceptor$0$didNotPromise$0$1, EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')): proposer$0$leader$0$0}

	sort: acceptor

	identical_classes: {'acceptor$0$didNotPromise$0': [acceptor$0$didNotPromise$0$0, acceptor$0$didNotPromise$0$1]}

	identical_single_classes: {}

	identical_multi_classes: {'acceptor$0$didNotPromise$0': [acceptor$0$didNotPromise$0$0, acceptor$0$didNotPromise$0$1]}

	sort: proposer

	identical_classes: {'proposer$0$leader$0': [proposer$0$leader$0$0]}

	identical_single_classes: {'proposer$0$leader$0': proposer$0$leader$0$0}

	identical_multi_classes: {}


---------- QInference: _set_sort_to_quantifier_mode ----------

quantifier mode: acceptor: QuantifierMode.forall

quantifier mode: proposer: QuantifierMode.forall


---------- QInference: _set_constraint_mode ----------

constraint mode: ConstraintMode.no_merge


---------- QFormula: _set_qvars ----------

forall_qvars: {Var('ACCEPTOR1', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Var('ACCEPTOR0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Var('PROPOSER0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))}

exists_qvars: set()


---------- QFormula: _set_signed_func_name_to_args ----------

signed_func_name2args: {'0$didNotPromise': [[Var('ACCEPTOR0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')))], [Var('ACCEPTOR1', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')))]], '0$leader': [[Var('PROPOSER0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))]]}


---------- QFormula: _set_qterms ----------

qterms: ['leader(PROPOSER0)', 'didNotPromise(ACCEPTOR0)', 'didNotPromise(ACCEPTOR1)']


---------- QFormula: get_qclause ----------

qclause: forall ACCEPTOR1,ACCEPTOR0,PROPOSER0. ~leader(PROPOSER0) | ~didNotPromise(ACCEPTOR0) | ~didNotPromise(ACCEPTOR1) | ACCEPTOR0 = ACCEPTOR1


=== Prime Orbit 23 =====================
size : 9
num_suborbits: 1
375 (*) : -----------0----------000--
375     : ['~didNotPromise(acceptor2)', '~promise(acceptor2,proposer1)', '~promise(acceptor2,proposer2)', '~start(proposer0)']
376     : -----------0---------0-0-0-
376     : ['~didNotPromise(acceptor2)', '~promise(acceptor2,proposer0)', '~promise(acceptor2,proposer2)', '~start(proposer1)']
377     : -----------0---------00---0
377     : ['~didNotPromise(acceptor2)', '~promise(acceptor2,proposer0)', '~promise(acceptor2,proposer1)', '~start(proposer2)']
378     : ----------0--------00---0--
378     : ['~didNotPromise(acceptor1)', '~promise(acceptor1,proposer1)', '~promise(acceptor1,proposer2)', '~start(proposer0)']
379     : ----------0-------0-0----0-
379     : ['~didNotPromise(acceptor1)', '~promise(acceptor1,proposer0)', '~promise(acceptor1,proposer2)', '~start(proposer1)']
380     : ----------0-------00------0
380     : ['~didNotPromise(acceptor1)', '~promise(acceptor1,proposer0)', '~promise(acceptor1,proposer1)', '~start(proposer2)']
381     : ---------0------00------0--
381     : ['~didNotPromise(acceptor0)', '~promise(acceptor0,proposer1)', '~promise(acceptor0,proposer2)', '~start(proposer0)']
382     : ---------0-----0-0-------0-
382     : ['~didNotPromise(acceptor0)', '~promise(acceptor0,proposer0)', '~promise(acceptor0,proposer2)', '~start(proposer1)']
383     : ---------0-----00---------0
383     : ['~didNotPromise(acceptor0)', '~promise(acceptor0,proposer0)', '~promise(acceptor0,proposer1)', '~start(proposer2)']
num_forall :   0
num_exists :   0
num_literals : 0
quantified form : None
qcost : 0




---------- QPrime ----------


---------- ConstArgBinding ----------

terms: ['~didNotPromise(acceptor2)', '~promise(acceptor2,proposer1)', '~promise(acceptor2,proposer2)', '~start(proposer0)']

sign_func_name2args: {'1$didNotPromise': [(Const('acceptor2', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))),)], '1$promise': [(Const('acceptor2', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Const('proposer1', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))), (Const('acceptor2', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Const('proposer2', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))))], '1$start': [(Const('proposer0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))),)]}

const2sigs: {Const('acceptor2', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))): [acceptor$1$didNotPromise$0$0, acceptor$1$promise$0$0, acceptor$1$promise$0$1], Const('proposer1', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))): [proposer$1$promise$1$0], Const('proposer2', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))): [proposer$1$promise$1$1], Const('proposer0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))): [proposer$1$start$0$0]}

sig2const: {'acceptor$1$didNotPromise$0$0': Const('acceptor2', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), 'acceptor$1$promise$0$0': Const('acceptor2', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), 'proposer$1$promise$1$0': Const('proposer1', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))), 'acceptor$1$promise$0$1': Const('acceptor2', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), 'proposer$1$promise$1$1': Const('proposer2', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))), 'proposer$1$start$0$0': Const('proposer0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))}


---------- ArgPartition ----------

sort2class_sigs: {EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')): [acceptor$1$didNotPromise$0$0; acceptor$1$promise$0$0; acceptor$1$promise$0$1], EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')): [proposer$1$promise$1$0, proposer$1$promise$1$1, proposer$1$start$0$0]}

sort2part_sig: {EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')): acceptor$1$didNotPromise$0$0; acceptor$1$promise$0$0; acceptor$1$promise$0$1, EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')): proposer$1$promise$1$0 | proposer$1$promise$1$1 | proposer$1$start$0$0}

part_sig: ('acceptor$1$didNotPromise$0$0; acceptor$1$promise$0$0; acceptor$1$promise$0$1', 'proposer$1$promise$1$0 | proposer$1$promise$1$1 | proposer$1$start$0$0')


---------- SigGenerator ----------

terms:  ['~didNotPromise(acceptor2)', '~promise(acceptor2,proposer1)', '~promise(acceptor2,proposer2)', '~start(proposer0)']

func_name2symbol:  {'didNotPromise': Const('didNotPromise', FunctionSort(EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')), BooleanSort())), 'promise': Const('promise', FunctionSort(EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')), EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')), BooleanSort())), 'start': Const('start', FunctionSort(EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')), BooleanSort()))}

func_name2args_sort:  {'didNotPromise': (EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')),), 'promise': (EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')), EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))), 'start': (EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')),)}

sign_func_name2count:  {'1$didNotPromise': 1, '1$promise': 2, '1$start': 1}


---------- ProductArgPartition ----------

sort2class_sigs: {EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')): [acceptor$1$didNotPromise$0$0; acceptor$1$promise$0$0; acceptor$1$promise$0$1], EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')): [proposer$1$promise$1$0, proposer$1$promise$1$1, proposer$1$start$0$0]}

sort2part_sig: {EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')): acceptor$1$didNotPromise$0$0; acceptor$1$promise$0$0; acceptor$1$promise$0$1, EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')): proposer$1$promise$1$0 | proposer$1$promise$1$1 | proposer$1$start$0$0}

	sort: acceptor

	identical_classes: {'acceptor$1$didNotPromise$0; acceptor$1$promise$0; acceptor$1$promise$0': [acceptor$1$didNotPromise$0$0; acceptor$1$promise$0$0; acceptor$1$promise$0$1]}

	identical_single_classes: {'acceptor$1$didNotPromise$0; acceptor$1$promise$0; acceptor$1$promise$0': acceptor$1$didNotPromise$0$0; acceptor$1$promise$0$0; acceptor$1$promise$0$1}

	identical_multi_classes: {}

	sort: proposer

	identical_classes: {'proposer$1$promise$1': [proposer$1$promise$1$0, proposer$1$promise$1$1], 'proposer$1$start$0': [proposer$1$start$0$0]}

	identical_single_classes: {'proposer$1$start$0': proposer$1$start$0$0}

	identical_multi_classes: {'proposer$1$promise$1': [proposer$1$promise$1$0, proposer$1$promise$1$1]}


---------- QInference: _set_sort_to_quantifier_mode ----------

quantifier mode: acceptor: QuantifierMode.forall

quantifier mode: proposer: QuantifierMode.forall_exists


---------- QInference: _set_constraint_mode ----------

constraint mode: ConstraintMode.no_merge


---------- QFormula: _set_qvars ----------

forall_qvars: {Var('PROPOSER1', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))), Var('ACCEPTOR0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')))}

exists_qvars: {Var('PROPOSER0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))}


---------- QFormula: _set_signed_func_name_to_args ----------

signed_func_name2args: {'1$didNotPromise': [[Var('ACCEPTOR0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')))]], '1$promise': [[Var('ACCEPTOR0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Var('PROPOSER0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))], [Var('ACCEPTOR0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Var('PROPOSER0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))]], '1$start': [[Var('PROPOSER1', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))]]}


---------- QFormula: _set_qterms ----------

qterms: ['~didNotPromise(ACCEPTOR0)', '~promise(ACCEPTOR0,PROPOSER0)', '~start(PROPOSER1)']


---------- QFormula: get_qclause ----------

qclause: forall PROPOSER1,ACCEPTOR0. didNotPromise(ACCEPTOR0) | start(PROPOSER1) | (exists PROPOSER0. (promise(ACCEPTOR0,PROPOSER0) & PROPOSER0 ~= PROPOSER1))


=== Prime Orbit 25 =====================
size : 9
num_suborbits: 1
387 (*) : -----0--0-----1--------1---
387     : ['leader(proposer2)', 'promise(acceptor2,proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)']
388     : ----0--0-----1--------1----
388     : ['leader(proposer1)', 'promise(acceptor2,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)']
389     : ---0--0-----1--------1-----
389     : ['leader(proposer0)', 'promise(acceptor2,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)']
390     : --0-----0-----1-----1------
390     : ['leader(proposer2)', 'promise(acceptor1,proposer2)', '~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)']
391     : -0-----0-----1-----1-------
391     : ['leader(proposer1)', 'promise(acceptor1,proposer1)', '~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)']
392     : 0-----0-----1-----1--------
392     : ['leader(proposer0)', 'promise(acceptor1,proposer0)', '~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)']
393     : --0--0--------1--1---------
393     : ['leader(proposer2)', 'promise(acceptor0,proposer2)', '~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)']
394     : -0--0--------1--1----------
394     : ['leader(proposer1)', 'promise(acceptor0,proposer1)', '~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)']
395     : 0--0--------1--1-----------
395     : ['leader(proposer0)', 'promise(acceptor0,proposer0)', '~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)']
num_forall :   0
num_exists :   0
num_literals : 0
quantified form : None
qcost : 0




---------- QPrime ----------


---------- ConstArgBinding ----------

terms: ['~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', 'leader(proposer2)', 'promise(acceptor2,proposer2)', 'member(acceptor2,quorum__acceptor0_acceptor2)', 'member(acceptor2,quorum__acceptor1_acceptor2)']

sign_func_name2args: {'1$chosenAt': [(Const('quorum__acceptor0_acceptor2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), Const('proposer2', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))), (Const('quorum__acceptor1_acceptor2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), Const('proposer2', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))))], '0$leader': [(Const('proposer2', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))),)], '0$promise': [(Const('acceptor2', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Const('proposer2', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))))], '0$member': [(Const('acceptor2', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Const('quorum__acceptor0_acceptor2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')))), (Const('acceptor2', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Const('quorum__acceptor1_acceptor2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))))]}

const2sigs: {Const('quorum__acceptor0_acceptor2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))): [quorum$1$chosenAt$0$0, quorum$0$member$1$0], Const('proposer2', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))): [proposer$1$chosenAt$1$0, proposer$1$chosenAt$1$1, proposer$0$leader$0$0, proposer$0$promise$1$0], Const('quorum__acceptor1_acceptor2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))): [quorum$1$chosenAt$0$1, quorum$0$member$1$1], Const('acceptor2', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))): [acceptor$0$promise$0$0, acceptor$0$member$0$0, acceptor$0$member$0$1]}

sig2const: {'quorum$1$chosenAt$0$0': Const('quorum__acceptor0_acceptor2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), 'proposer$1$chosenAt$1$0': Const('proposer2', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))), 'quorum$1$chosenAt$0$1': Const('quorum__acceptor1_acceptor2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), 'proposer$1$chosenAt$1$1': Const('proposer2', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))), 'proposer$0$leader$0$0': Const('proposer2', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))), 'acceptor$0$promise$0$0': Const('acceptor2', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), 'proposer$0$promise$1$0': Const('proposer2', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))), 'acceptor$0$member$0$0': Const('acceptor2', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), 'quorum$0$member$1$0': Const('quorum__acceptor0_acceptor2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), 'acceptor$0$member$0$1': Const('acceptor2', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), 'quorum$0$member$1$1': Const('quorum__acceptor1_acceptor2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')))}


---------- ArgPartition ----------

sort2class_sigs: {EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')): [quorum$0$member$1$0; quorum$1$chosenAt$0$0, quorum$0$member$1$1; quorum$1$chosenAt$0$1], EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')): [proposer$0$leader$0$0; proposer$0$promise$1$0; proposer$1$chosenAt$1$0; proposer$1$chosenAt$1$1], EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')): [acceptor$0$member$0$0; acceptor$0$member$0$1; acceptor$0$promise$0$0]}

sort2part_sig: {EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')): quorum$0$member$1$0; quorum$1$chosenAt$0$0 | quorum$0$member$1$1; quorum$1$chosenAt$0$1, EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')): proposer$0$leader$0$0; proposer$0$promise$1$0; proposer$1$chosenAt$1$0; proposer$1$chosenAt$1$1, EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')): acceptor$0$member$0$0; acceptor$0$member$0$1; acceptor$0$promise$0$0}

part_sig: ('acceptor$0$member$0$0; acceptor$0$member$0$1; acceptor$0$promise$0$0', 'proposer$0$leader$0$0; proposer$0$promise$1$0; proposer$1$chosenAt$1$0; proposer$1$chosenAt$1$1', 'quorum$0$member$1$0; quorum$1$chosenAt$0$0 | quorum$0$member$1$1; quorum$1$chosenAt$0$1')


---------- SigGenerator ----------

terms:  ['~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', 'leader(proposer2)', 'promise(acceptor2,proposer2)', 'member(acceptor2,quorum__acceptor0_acceptor2)', 'member(acceptor2,quorum__acceptor1_acceptor2)']

func_name2symbol:  {'chosenAt': Const('chosenAt', FunctionSort(EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')), EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')), BooleanSort())), 'leader': Const('leader', FunctionSort(EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')), BooleanSort())), 'promise': Const('promise', FunctionSort(EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')), EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')), BooleanSort())), 'member': Const('member', FunctionSort(EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')), EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')), BooleanSort()))}

func_name2args_sort:  {'chosenAt': (EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')), EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))), 'leader': (EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')),), 'promise': (EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')), EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))), 'member': (EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')), EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')))}

sign_func_name2count:  {'1$chosenAt': 2, '0$leader': 1, '0$promise': 1, '0$member': 2}


---------- ProductArgPartition ----------

sort2class_sigs: {EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')): [quorum$0$member$1$0; quorum$1$chosenAt$0$0, quorum$0$member$1$1; quorum$1$chosenAt$0$1], EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')): [proposer$0$leader$0$0; proposer$0$promise$1$0; proposer$1$chosenAt$1$0; proposer$1$chosenAt$1$1], EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')): [acceptor$0$member$0$0; acceptor$0$member$0$1; acceptor$0$promise$0$0]}

sort2part_sig: {EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')): quorum$0$member$1$0; quorum$1$chosenAt$0$0 | quorum$0$member$1$1; quorum$1$chosenAt$0$1, EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')): proposer$0$leader$0$0; proposer$0$promise$1$0; proposer$1$chosenAt$1$0; proposer$1$chosenAt$1$1, EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')): acceptor$0$member$0$0; acceptor$0$member$0$1; acceptor$0$promise$0$0}

	sort: quorum

	identical_classes: {'quorum$0$member$1; quorum$1$chosenAt$0': [quorum$0$member$1$0; quorum$1$chosenAt$0$0, quorum$0$member$1$1; quorum$1$chosenAt$0$1]}

	identical_single_classes: {}

	identical_multi_classes: {'quorum$0$member$1; quorum$1$chosenAt$0': [quorum$0$member$1$0, quorum$1$chosenAt$0$0, quorum$0$member$1$1, quorum$1$chosenAt$0$1]}

	sort: proposer

	identical_classes: {'proposer$0$leader$0; proposer$0$promise$1; proposer$1$chosenAt$1; proposer$1$chosenAt$1': [proposer$0$leader$0$0; proposer$0$promise$1$0; proposer$1$chosenAt$1$0; proposer$1$chosenAt$1$1]}

	identical_single_classes: {'proposer$0$leader$0; proposer$0$promise$1; proposer$1$chosenAt$1; proposer$1$chosenAt$1': proposer$0$leader$0$0; proposer$0$promise$1$0; proposer$1$chosenAt$1$0; proposer$1$chosenAt$1$1}

	identical_multi_classes: {}

	sort: acceptor

	identical_classes: {'acceptor$0$member$0; acceptor$0$member$0; acceptor$0$promise$0': [acceptor$0$member$0$0; acceptor$0$member$0$1; acceptor$0$promise$0$0]}

	identical_single_classes: {'acceptor$0$member$0; acceptor$0$member$0; acceptor$0$promise$0': acceptor$0$member$0$0; acceptor$0$member$0$1; acceptor$0$promise$0$0}

	identical_multi_classes: {}


---------- QInference: _set_sort_to_quantifier_mode ----------

quantifier mode: quorum: QuantifierMode.forall

quantifier mode: proposer: QuantifierMode.forall

quantifier mode: acceptor: QuantifierMode.forall


---------- QInference: _set_constraint_mode ----------

constraint mode: ConstraintMode.no_merge


---------- QFormula: _set_qvars ----------

forall_qvars: {Var('ACCEPTOR0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Var('PROPOSER0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))), Var('QUORUM1', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), Var('QUORUM0', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')))}

exists_qvars: set()


---------- QFormula: _set_signed_func_name_to_args ----------

signed_func_name2args: {'1$chosenAt': [[Var('QUORUM0', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), Var('PROPOSER0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))], [Var('QUORUM1', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), Var('PROPOSER0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))]], '0$leader': [[Var('PROPOSER0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))]], '0$promise': [[Var('ACCEPTOR0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Var('PROPOSER0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))]], '0$member': [[Var('ACCEPTOR0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Var('QUORUM0', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')))], [Var('ACCEPTOR0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Var('QUORUM1', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')))]]}


---------- QFormula: _set_qterms ----------

qterms: ['leader(PROPOSER0)', 'promise(ACCEPTOR0,PROPOSER0)', 'member(ACCEPTOR0,QUORUM1)', 'member(ACCEPTOR0,QUORUM0)', '~chosenAt(QUORUM1,PROPOSER0)', '~chosenAt(QUORUM0,PROPOSER0)']


---------- QFormula: get_qclause ----------

qclause: forall QUORUM1,ACCEPTOR0,PROPOSER0,QUORUM0. ~leader(PROPOSER0) | ~promise(ACCEPTOR0,PROPOSER0) | ~member(ACCEPTOR0,QUORUM1) | ~member(ACCEPTOR0,QUORUM0) | chosenAt(QUORUM1,PROPOSER0) | chosenAt(QUORUM0,PROPOSER0) | QUORUM0 = QUORUM1


=== Prime Orbit 26 =====================
size : 3
num_suborbits: 1
396 (*) : --0--0--0-----1------------
396     : ['leader(proposer2)', '~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)']
397     : -0--0--0-----1-------------
397     : ['leader(proposer1)', '~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)']
398     : 0--0--0-----1--------------
398     : ['leader(proposer0)', '~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)']
num_forall :   0
num_exists :   0
num_literals : 0
quantified form : None
qcost : 0




---------- QPrime ----------


---------- ConstArgBinding ----------

terms: ['~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', 'leader(proposer2)']

sign_func_name2args: {'1$chosenAt': [(Const('quorum__acceptor0_acceptor1', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), Const('proposer2', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))), (Const('quorum__acceptor0_acceptor2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), Const('proposer2', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))), (Const('quorum__acceptor1_acceptor2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), Const('proposer2', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))))], '0$leader': [(Const('proposer2', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))),)]}

const2sigs: {Const('quorum__acceptor0_acceptor1', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))): [quorum$1$chosenAt$0$0], Const('proposer2', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))): [proposer$1$chosenAt$1$0, proposer$1$chosenAt$1$1, proposer$1$chosenAt$1$2, proposer$0$leader$0$0], Const('quorum__acceptor0_acceptor2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))): [quorum$1$chosenAt$0$1], Const('quorum__acceptor1_acceptor2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))): [quorum$1$chosenAt$0$2]}

sig2const: {'quorum$1$chosenAt$0$0': Const('quorum__acceptor0_acceptor1', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), 'proposer$1$chosenAt$1$0': Const('proposer2', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))), 'quorum$1$chosenAt$0$1': Const('quorum__acceptor0_acceptor2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), 'proposer$1$chosenAt$1$1': Const('proposer2', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))), 'quorum$1$chosenAt$0$2': Const('quorum__acceptor1_acceptor2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), 'proposer$1$chosenAt$1$2': Const('proposer2', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))), 'proposer$0$leader$0$0': Const('proposer2', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))}


---------- ArgPartition ----------

sort2class_sigs: {EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')): [quorum$1$chosenAt$0$0, quorum$1$chosenAt$0$1, quorum$1$chosenAt$0$2], EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')): [proposer$0$leader$0$0; proposer$1$chosenAt$1$0; proposer$1$chosenAt$1$1; proposer$1$chosenAt$1$2]}

sort2part_sig: {EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')): quorum$1$chosenAt$0$0 | quorum$1$chosenAt$0$1 | quorum$1$chosenAt$0$2, EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')): proposer$0$leader$0$0; proposer$1$chosenAt$1$0; proposer$1$chosenAt$1$1; proposer$1$chosenAt$1$2}

part_sig: ('proposer$0$leader$0$0; proposer$1$chosenAt$1$0; proposer$1$chosenAt$1$1; proposer$1$chosenAt$1$2', 'quorum$1$chosenAt$0$0 | quorum$1$chosenAt$0$1 | quorum$1$chosenAt$0$2')


---------- SigGenerator ----------

terms:  ['~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', 'leader(proposer2)']

func_name2symbol:  {'chosenAt': Const('chosenAt', FunctionSort(EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')), EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')), BooleanSort())), 'leader': Const('leader', FunctionSort(EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')), BooleanSort()))}

func_name2args_sort:  {'chosenAt': (EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')), EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))), 'leader': (EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')),)}

sign_func_name2count:  {'1$chosenAt': 3, '0$leader': 1}


---------- ProductArgPartition ----------

sort2class_sigs: {EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')): [quorum$1$chosenAt$0$0, quorum$1$chosenAt$0$1, quorum$1$chosenAt$0$2], EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')): [proposer$0$leader$0$0; proposer$1$chosenAt$1$0; proposer$1$chosenAt$1$1; proposer$1$chosenAt$1$2]}

sort2part_sig: {EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')): quorum$1$chosenAt$0$0 | quorum$1$chosenAt$0$1 | quorum$1$chosenAt$0$2, EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')): proposer$0$leader$0$0; proposer$1$chosenAt$1$0; proposer$1$chosenAt$1$1; proposer$1$chosenAt$1$2}

	sort: quorum

	identical_classes: {'quorum$1$chosenAt$0': [quorum$1$chosenAt$0$0, quorum$1$chosenAt$0$1, quorum$1$chosenAt$0$2]}

	identical_single_classes: {}

	identical_multi_classes: {'quorum$1$chosenAt$0': [quorum$1$chosenAt$0$0, quorum$1$chosenAt$0$1, quorum$1$chosenAt$0$2]}

	sort: proposer

	identical_classes: {'proposer$0$leader$0; proposer$1$chosenAt$1; proposer$1$chosenAt$1; proposer$1$chosenAt$1': [proposer$0$leader$0$0; proposer$1$chosenAt$1$0; proposer$1$chosenAt$1$1; proposer$1$chosenAt$1$2]}

	identical_single_classes: {'proposer$0$leader$0; proposer$1$chosenAt$1; proposer$1$chosenAt$1; proposer$1$chosenAt$1': proposer$0$leader$0$0; proposer$1$chosenAt$1$0; proposer$1$chosenAt$1$1; proposer$1$chosenAt$1$2}

	identical_multi_classes: {}


---------- QInference: _set_sort_to_quantifier_mode ----------

quantifier mode: quorum: QuantifierMode.exists

quantifier mode: proposer: QuantifierMode.forall


---------- QInference: _set_constraint_mode ----------

constraint mode: ConstraintMode.no_merge


---------- QFormula: _set_qvars ----------

forall_qvars: {Var('PROPOSER0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))}

exists_qvars: {Var('QUORUM0', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')))}


---------- QFormula: _set_signed_func_name_to_args ----------

signed_func_name2args: {'1$chosenAt': [[Var('QUORUM0', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), Var('PROPOSER0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))], [Var('QUORUM0', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), Var('PROPOSER0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))], [Var('QUORUM0', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), Var('PROPOSER0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))]], '0$leader': [[Var('PROPOSER0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))]]}


---------- QFormula: _set_qterms ----------

qterms: ['~chosenAt(QUORUM0,PROPOSER0)', 'leader(PROPOSER0)']


---------- QFormula: get_qclause ----------

qclause: forall PROPOSER0. (exists QUORUM0. chosenAt(QUORUM0,PROPOSER0) | ~leader(PROPOSER0))


=== Prime Orbit 27 =====================
size : 9
num_suborbits: 1
399 (*) : ---------0-----0---------00
399     : ['~didNotPromise(acceptor0)', '~promise(acceptor0,proposer0)', '~start(proposer1)', '~start(proposer2)']
400     : ---------0------0-------0-0
400     : ['~didNotPromise(acceptor0)', '~promise(acceptor0,proposer1)', '~start(proposer0)', '~start(proposer2)']
401     : ---------0-------0------00-
401     : ['~didNotPromise(acceptor0)', '~promise(acceptor0,proposer2)', '~start(proposer0)', '~start(proposer1)']
402     : ----------0-------0------00
402     : ['~didNotPromise(acceptor1)', '~promise(acceptor1,proposer0)', '~start(proposer1)', '~start(proposer2)']
403     : ----------0--------0----0-0
403     : ['~didNotPromise(acceptor1)', '~promise(acceptor1,proposer1)', '~start(proposer0)', '~start(proposer2)']
404     : ----------0---------0---00-
404     : ['~didNotPromise(acceptor1)', '~promise(acceptor1,proposer2)', '~start(proposer0)', '~start(proposer1)']
405     : -----------0---------0---00
405     : ['~didNotPromise(acceptor2)', '~promise(acceptor2,proposer0)', '~start(proposer1)', '~start(proposer2)']
406     : -----------0----------0-0-0
406     : ['~didNotPromise(acceptor2)', '~promise(acceptor2,proposer1)', '~start(proposer0)', '~start(proposer2)']
407     : -----------0-----------000-
407     : ['~didNotPromise(acceptor2)', '~promise(acceptor2,proposer2)', '~start(proposer0)', '~start(proposer1)']
num_forall :   0
num_exists :   0
num_literals : 0
quantified form : None
qcost : 0




---------- QPrime ----------


---------- ConstArgBinding ----------

terms: ['~didNotPromise(acceptor0)', '~promise(acceptor0,proposer0)', '~start(proposer1)', '~start(proposer2)']

sign_func_name2args: {'1$didNotPromise': [(Const('acceptor0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))),)], '1$promise': [(Const('acceptor0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Const('proposer0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))))], '1$start': [(Const('proposer1', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))),), (Const('proposer2', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))),)]}

const2sigs: {Const('acceptor0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))): [acceptor$1$didNotPromise$0$0, acceptor$1$promise$0$0], Const('proposer0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))): [proposer$1$promise$1$0], Const('proposer1', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))): [proposer$1$start$0$0], Const('proposer2', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))): [proposer$1$start$0$1]}

sig2const: {'acceptor$1$didNotPromise$0$0': Const('acceptor0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), 'acceptor$1$promise$0$0': Const('acceptor0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), 'proposer$1$promise$1$0': Const('proposer0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))), 'proposer$1$start$0$0': Const('proposer1', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))), 'proposer$1$start$0$1': Const('proposer2', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))}


---------- ArgPartition ----------

sort2class_sigs: {EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')): [acceptor$1$didNotPromise$0$0; acceptor$1$promise$0$0], EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')): [proposer$1$promise$1$0, proposer$1$start$0$0, proposer$1$start$0$1]}

sort2part_sig: {EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')): acceptor$1$didNotPromise$0$0; acceptor$1$promise$0$0, EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')): proposer$1$promise$1$0 | proposer$1$start$0$0 | proposer$1$start$0$1}

part_sig: ('acceptor$1$didNotPromise$0$0; acceptor$1$promise$0$0', 'proposer$1$promise$1$0 | proposer$1$start$0$0 | proposer$1$start$0$1')


---------- SigGenerator ----------

terms:  ['~didNotPromise(acceptor0)', '~promise(acceptor0,proposer0)', '~start(proposer1)', '~start(proposer2)']

func_name2symbol:  {'didNotPromise': Const('didNotPromise', FunctionSort(EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')), BooleanSort())), 'promise': Const('promise', FunctionSort(EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')), EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')), BooleanSort())), 'start': Const('start', FunctionSort(EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')), BooleanSort()))}

func_name2args_sort:  {'didNotPromise': (EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')),), 'promise': (EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')), EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))), 'start': (EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')),)}

sign_func_name2count:  {'1$didNotPromise': 1, '1$promise': 1, '1$start': 2}


---------- ProductArgPartition ----------

sort2class_sigs: {EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')): [acceptor$1$didNotPromise$0$0; acceptor$1$promise$0$0], EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')): [proposer$1$promise$1$0, proposer$1$start$0$0, proposer$1$start$0$1]}

sort2part_sig: {EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')): acceptor$1$didNotPromise$0$0; acceptor$1$promise$0$0, EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')): proposer$1$promise$1$0 | proposer$1$start$0$0 | proposer$1$start$0$1}

	sort: acceptor

	identical_classes: {'acceptor$1$didNotPromise$0; acceptor$1$promise$0': [acceptor$1$didNotPromise$0$0; acceptor$1$promise$0$0]}

	identical_single_classes: {'acceptor$1$didNotPromise$0; acceptor$1$promise$0': acceptor$1$didNotPromise$0$0; acceptor$1$promise$0$0}

	identical_multi_classes: {}

	sort: proposer

	identical_classes: {'proposer$1$promise$1': [proposer$1$promise$1$0], 'proposer$1$start$0': [proposer$1$start$0$0, proposer$1$start$0$1]}

	identical_single_classes: {'proposer$1$promise$1': proposer$1$promise$1$0}

	identical_multi_classes: {'proposer$1$start$0': [proposer$1$start$0$0, proposer$1$start$0$1]}


---------- QInference: _set_sort_to_quantifier_mode ----------

quantifier mode: acceptor: QuantifierMode.forall

quantifier mode: proposer: QuantifierMode.forall_exists


---------- QInference: _set_constraint_mode ----------

constraint mode: ConstraintMode.no_merge


---------- QFormula: _set_qvars ----------

forall_qvars: {Var('PROPOSER1', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))), Var('ACCEPTOR0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')))}

exists_qvars: {Var('PROPOSER0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))}


---------- QFormula: _set_signed_func_name_to_args ----------

signed_func_name2args: {'1$didNotPromise': [[Var('ACCEPTOR0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')))]], '1$promise': [[Var('ACCEPTOR0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Var('PROPOSER1', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))]], '1$start': [[Var('PROPOSER0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))], [Var('PROPOSER0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))]]}


---------- QFormula: _set_qterms ----------

qterms: ['~didNotPromise(ACCEPTOR0)', '~start(PROPOSER0)', '~promise(ACCEPTOR0,PROPOSER1)']


---------- QFormula: get_qclause ----------

qclause: forall PROPOSER1,ACCEPTOR0. didNotPromise(ACCEPTOR0) | promise(ACCEPTOR0,PROPOSER1) | (exists PROPOSER0. (start(PROPOSER0) & PROPOSER0 ~= PROPOSER1))


=== Prime Orbit 28 =====================
size : 3
num_suborbits: 1
408 (*) : ---------0--------------000
408     : ['~didNotPromise(acceptor0)', '~start(proposer0)', '~start(proposer1)', '~start(proposer2)']
409     : ----------0-------------000
409     : ['~didNotPromise(acceptor1)', '~start(proposer0)', '~start(proposer1)', '~start(proposer2)']
410     : -----------0------------000
410     : ['~didNotPromise(acceptor2)', '~start(proposer0)', '~start(proposer1)', '~start(proposer2)']
num_forall :   0
num_exists :   0
num_literals : 0
quantified form : None
qcost : 0




---------- QPrime ----------


---------- ConstArgBinding ----------

terms: ['~didNotPromise(acceptor0)', '~start(proposer0)', '~start(proposer1)', '~start(proposer2)']

sign_func_name2args: {'1$didNotPromise': [(Const('acceptor0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))),)], '1$start': [(Const('proposer0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))),), (Const('proposer1', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))),), (Const('proposer2', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))),)]}

const2sigs: {Const('acceptor0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))): [acceptor$1$didNotPromise$0$0], Const('proposer0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))): [proposer$1$start$0$0], Const('proposer1', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))): [proposer$1$start$0$1], Const('proposer2', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))): [proposer$1$start$0$2]}

sig2const: {'acceptor$1$didNotPromise$0$0': Const('acceptor0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), 'proposer$1$start$0$0': Const('proposer0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))), 'proposer$1$start$0$1': Const('proposer1', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))), 'proposer$1$start$0$2': Const('proposer2', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))}


---------- ArgPartition ----------

sort2class_sigs: {EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')): [acceptor$1$didNotPromise$0$0], EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')): [proposer$1$start$0$0, proposer$1$start$0$1, proposer$1$start$0$2]}

sort2part_sig: {EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')): acceptor$1$didNotPromise$0$0, EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')): proposer$1$start$0$0 | proposer$1$start$0$1 | proposer$1$start$0$2}

part_sig: ('acceptor$1$didNotPromise$0$0', 'proposer$1$start$0$0 | proposer$1$start$0$1 | proposer$1$start$0$2')


---------- SigGenerator ----------

terms:  ['~didNotPromise(acceptor0)', '~start(proposer0)', '~start(proposer1)', '~start(proposer2)']

func_name2symbol:  {'didNotPromise': Const('didNotPromise', FunctionSort(EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')), BooleanSort())), 'start': Const('start', FunctionSort(EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')), BooleanSort()))}

func_name2args_sort:  {'didNotPromise': (EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')),), 'start': (EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')),)}

sign_func_name2count:  {'1$didNotPromise': 1, '1$start': 3}


---------- ProductArgPartition ----------

sort2class_sigs: {EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')): [acceptor$1$didNotPromise$0$0], EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')): [proposer$1$start$0$0, proposer$1$start$0$1, proposer$1$start$0$2]}

sort2part_sig: {EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')): acceptor$1$didNotPromise$0$0, EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')): proposer$1$start$0$0 | proposer$1$start$0$1 | proposer$1$start$0$2}

	sort: acceptor

	identical_classes: {'acceptor$1$didNotPromise$0': [acceptor$1$didNotPromise$0$0]}

	identical_single_classes: {'acceptor$1$didNotPromise$0': acceptor$1$didNotPromise$0$0}

	identical_multi_classes: {}

	sort: proposer

	identical_classes: {'proposer$1$start$0': [proposer$1$start$0$0, proposer$1$start$0$1, proposer$1$start$0$2]}

	identical_single_classes: {}

	identical_multi_classes: {'proposer$1$start$0': [proposer$1$start$0$0, proposer$1$start$0$1, proposer$1$start$0$2]}


---------- QInference: _set_sort_to_quantifier_mode ----------

quantifier mode: acceptor: QuantifierMode.forall

quantifier mode: proposer: QuantifierMode.exists


---------- QInference: _set_constraint_mode ----------

constraint mode: ConstraintMode.no_merge


---------- QFormula: _set_qvars ----------

forall_qvars: {Var('ACCEPTOR0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')))}

exists_qvars: {Var('PROPOSER0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))}


---------- QFormula: _set_signed_func_name_to_args ----------

signed_func_name2args: {'1$didNotPromise': [[Var('ACCEPTOR0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')))]], '1$start': [[Var('PROPOSER0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))], [Var('PROPOSER0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))], [Var('PROPOSER0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))]]}


---------- QFormula: _set_qterms ----------

qterms: ['~didNotPromise(ACCEPTOR0)', '~start(PROPOSER0)']


---------- QFormula: get_qclause ----------

qclause: forall ACCEPTOR0. (exists PROPOSER0. didNotPromise(ACCEPTOR0) | start(PROPOSER0))


=== Prime Orbit 30 =====================
size : 36
num_suborbits: 1
429 (*) : ------0---0--------0-1----0
429     : ['promise(acceptor2,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor1)', '~promise(acceptor1,proposer1)', '~start(proposer2)']
430     : ------0---0---------01---0-
430     : ['promise(acceptor2,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor1)', '~promise(acceptor1,proposer2)', '~start(proposer1)']
431     : -------0--0-------0---1---0
431     : ['promise(acceptor2,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor1)', '~promise(acceptor1,proposer0)', '~start(proposer2)']
432     : -------0--0---------0-1-0--
432     : ['promise(acceptor2,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor1)', '~promise(acceptor1,proposer2)', '~start(proposer0)']
433     : --------0-0-------0----1-0-
433     : ['promise(acceptor2,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor1)', '~promise(acceptor1,proposer0)', '~start(proposer1)']
434     : --------0-0--------0---10--
434     : ['promise(acceptor2,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor1)', '~promise(acceptor1,proposer1)', '~start(proposer0)']
435     : ------0----0------1---0---0
435     : ['promise(acceptor1,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor2)', '~promise(acceptor2,proposer1)', '~start(proposer2)']
436     : ------0----0------1----0-0-
436     : ['promise(acceptor1,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor2)', '~promise(acceptor2,proposer2)', '~start(proposer1)']
437     : -------0---0-------1-0----0
437     : ['promise(acceptor1,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor2)', '~promise(acceptor2,proposer0)', '~start(proposer2)']
438     : -------0---0-------1---00--
438     : ['promise(acceptor1,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor2)', '~promise(acceptor2,proposer2)', '~start(proposer0)']
439     : --------0--0--------10---0-
439     : ['promise(acceptor1,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor2)', '~promise(acceptor2,proposer0)', '~start(proposer1)']
440     : --------0--0--------1-0-0--
440     : ['promise(acceptor1,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor2)', '~promise(acceptor2,proposer1)', '~start(proposer0)']
441     : ---0-----0------0----1----0
441     : ['promise(acceptor2,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~didNotPromise(acceptor0)', '~promise(acceptor0,proposer1)', '~start(proposer2)']
442     : ---0-----0-------0---1---0-
442     : ['promise(acceptor2,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~didNotPromise(acceptor0)', '~promise(acceptor0,proposer2)', '~start(proposer1)']
443     : ----0----0-----0------1---0
443     : ['promise(acceptor2,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~didNotPromise(acceptor0)', '~promise(acceptor0,proposer0)', '~start(proposer2)']
444     : ----0----0-------0----1-0--
444     : ['promise(acceptor2,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~didNotPromise(acceptor0)', '~promise(acceptor0,proposer2)', '~start(proposer0)']
445     : -----0---0-----0-------1-0-
445     : ['promise(acceptor2,proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~didNotPromise(acceptor0)', '~promise(acceptor0,proposer0)', '~start(proposer1)']
446     : -----0---0------0------10--
446     : ['promise(acceptor2,proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~didNotPromise(acceptor0)', '~promise(acceptor0,proposer1)', '~start(proposer0)']
447     : ---0-------0---1------0---0
447     : ['promise(acceptor0,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~didNotPromise(acceptor2)', '~promise(acceptor2,proposer1)', '~start(proposer2)']
448     : ---0-------0---1-------0-0-
448     : ['promise(acceptor0,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~didNotPromise(acceptor2)', '~promise(acceptor2,proposer2)', '~start(proposer1)']
449     : ----0------0----1----0----0
449     : ['promise(acceptor0,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~didNotPromise(acceptor2)', '~promise(acceptor2,proposer0)', '~start(proposer2)']
450     : ----0------0----1------00--
450     : ['promise(acceptor0,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~didNotPromise(acceptor2)', '~promise(acceptor2,proposer2)', '~start(proposer0)']
451     : -----0-----0-----1---0---0-
451     : ['promise(acceptor0,proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~didNotPromise(acceptor2)', '~promise(acceptor2,proposer0)', '~start(proposer1)']
452     : -----0-----0-----1----0-0--
452     : ['promise(acceptor0,proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~didNotPromise(acceptor2)', '~promise(acceptor2,proposer1)', '~start(proposer0)']
453     : 0--------0------0-1-------0
453     : ['promise(acceptor1,proposer0)', '~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~didNotPromise(acceptor0)', '~promise(acceptor0,proposer1)', '~start(proposer2)']
454     : 0--------0-------01------0-
454     : ['promise(acceptor1,proposer0)', '~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~didNotPromise(acceptor0)', '~promise(acceptor0,proposer2)', '~start(proposer1)']
455     : -0-------0-----0---1------0
455     : ['promise(acceptor1,proposer1)', '~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~didNotPromise(acceptor0)', '~promise(acceptor0,proposer0)', '~start(proposer2)']
456     : -0-------0-------0-1----0--
456     : ['promise(acceptor1,proposer1)', '~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~didNotPromise(acceptor0)', '~promise(acceptor0,proposer2)', '~start(proposer0)']
457     : --0------0-----0----1----0-
457     : ['promise(acceptor1,proposer2)', '~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~didNotPromise(acceptor0)', '~promise(acceptor0,proposer0)', '~start(proposer1)']
458     : --0------0------0---1---0--
458     : ['promise(acceptor1,proposer2)', '~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~didNotPromise(acceptor0)', '~promise(acceptor0,proposer1)', '~start(proposer0)']
459     : 0---------0----1---0------0
459     : ['promise(acceptor0,proposer0)', '~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~didNotPromise(acceptor1)', '~promise(acceptor1,proposer1)', '~start(proposer2)']
460     : 0---------0----1----0----0-
460     : ['promise(acceptor0,proposer0)', '~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~didNotPromise(acceptor1)', '~promise(acceptor1,proposer2)', '~start(proposer1)']
461     : -0--------0-----1-0-------0
461     : ['promise(acceptor0,proposer1)', '~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~didNotPromise(acceptor1)', '~promise(acceptor1,proposer0)', '~start(proposer2)']
462     : -0--------0-----1---0---0--
462     : ['promise(acceptor0,proposer1)', '~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~didNotPromise(acceptor1)', '~promise(acceptor1,proposer2)', '~start(proposer0)']
463     : --0-------0------10------0-
463     : ['promise(acceptor0,proposer2)', '~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~didNotPromise(acceptor1)', '~promise(acceptor1,proposer0)', '~start(proposer1)']
464     : --0-------0------1-0----0--
464     : ['promise(acceptor0,proposer2)', '~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~didNotPromise(acceptor1)', '~promise(acceptor1,proposer1)', '~start(proposer0)']
num_forall :   0
num_exists :   0
num_literals : 0
quantified form : None
qcost : 0




---------- QPrime ----------


---------- ConstArgBinding ----------

terms: ['~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor1)', '~promise(acceptor1,proposer1)', 'promise(acceptor2,proposer0)', '~start(proposer2)', 'member(acceptor1,quorum__acceptor1_acceptor2)', 'member(acceptor2,quorum__acceptor1_acceptor2)']

sign_func_name2args: {'1$chosenAt': [(Const('quorum__acceptor1_acceptor2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), Const('proposer0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))))], '1$didNotPromise': [(Const('acceptor1', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))),)], '1$promise': [(Const('acceptor1', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Const('proposer1', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))))], '0$promise': [(Const('acceptor2', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Const('proposer0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))))], '1$start': [(Const('proposer2', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))),)], '0$member': [(Const('acceptor1', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Const('quorum__acceptor1_acceptor2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')))), (Const('acceptor2', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Const('quorum__acceptor1_acceptor2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))))]}

const2sigs: {Const('quorum__acceptor1_acceptor2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))): [quorum$1$chosenAt$0$0, quorum$0$member$1$0, quorum$0$member$1$1], Const('proposer0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))): [proposer$1$chosenAt$1$0, proposer$0$promise$1$0], Const('acceptor1', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))): [acceptor$1$didNotPromise$0$0, acceptor$1$promise$0$0, acceptor$0$member$0$0], Const('proposer1', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))): [proposer$1$promise$1$0], Const('acceptor2', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))): [acceptor$0$promise$0$0, acceptor$0$member$0$1], Const('proposer2', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))): [proposer$1$start$0$0]}

sig2const: {'quorum$1$chosenAt$0$0': Const('quorum__acceptor1_acceptor2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), 'proposer$1$chosenAt$1$0': Const('proposer0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))), 'acceptor$1$didNotPromise$0$0': Const('acceptor1', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), 'acceptor$1$promise$0$0': Const('acceptor1', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), 'proposer$1$promise$1$0': Const('proposer1', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))), 'acceptor$0$promise$0$0': Const('acceptor2', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), 'proposer$0$promise$1$0': Const('proposer0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))), 'proposer$1$start$0$0': Const('proposer2', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))), 'acceptor$0$member$0$0': Const('acceptor1', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), 'quorum$0$member$1$0': Const('quorum__acceptor1_acceptor2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), 'acceptor$0$member$0$1': Const('acceptor2', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), 'quorum$0$member$1$1': Const('quorum__acceptor1_acceptor2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')))}


---------- ArgPartition ----------

sort2class_sigs: {EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')): [quorum$0$member$1$0; quorum$0$member$1$1; quorum$1$chosenAt$0$0], EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')): [proposer$0$promise$1$0; proposer$1$chosenAt$1$0, proposer$1$promise$1$0, proposer$1$start$0$0], EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')): [acceptor$0$member$0$0; acceptor$1$didNotPromise$0$0; acceptor$1$promise$0$0, acceptor$0$member$0$1; acceptor$0$promise$0$0]}

sort2part_sig: {EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')): quorum$0$member$1$0; quorum$0$member$1$1; quorum$1$chosenAt$0$0, EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')): proposer$0$promise$1$0; proposer$1$chosenAt$1$0 | proposer$1$promise$1$0 | proposer$1$start$0$0, EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')): acceptor$0$member$0$0; acceptor$1$didNotPromise$0$0; acceptor$1$promise$0$0 | acceptor$0$member$0$1; acceptor$0$promise$0$0}

part_sig: ('acceptor$0$member$0$0; acceptor$1$didNotPromise$0$0; acceptor$1$promise$0$0 | acceptor$0$member$0$1; acceptor$0$promise$0$0', 'proposer$0$promise$1$0; proposer$1$chosenAt$1$0 | proposer$1$promise$1$0 | proposer$1$start$0$0', 'quorum$0$member$1$0; quorum$0$member$1$1; quorum$1$chosenAt$0$0')


---------- SigGenerator ----------

terms:  ['~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor1)', '~promise(acceptor1,proposer1)', 'promise(acceptor2,proposer0)', '~start(proposer2)', 'member(acceptor1,quorum__acceptor1_acceptor2)', 'member(acceptor2,quorum__acceptor1_acceptor2)']

func_name2symbol:  {'chosenAt': Const('chosenAt', FunctionSort(EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')), EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')), BooleanSort())), 'didNotPromise': Const('didNotPromise', FunctionSort(EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')), BooleanSort())), 'promise': Const('promise', FunctionSort(EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')), EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')), BooleanSort())), 'start': Const('start', FunctionSort(EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')), BooleanSort())), 'member': Const('member', FunctionSort(EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')), EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')), BooleanSort()))}

func_name2args_sort:  {'chosenAt': (EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')), EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))), 'didNotPromise': (EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')),), 'promise': (EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')), EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))), 'start': (EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')),), 'member': (EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')), EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')))}

sign_func_name2count:  {'1$chosenAt': 1, '1$didNotPromise': 1, '1$promise': 1, '0$promise': 1, '1$start': 1, '0$member': 2}


---------- ProductArgPartition ----------

sort2class_sigs: {EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')): [quorum$0$member$1$0; quorum$0$member$1$1; quorum$1$chosenAt$0$0], EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')): [proposer$0$promise$1$0; proposer$1$chosenAt$1$0, proposer$1$promise$1$0, proposer$1$start$0$0], EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')): [acceptor$0$member$0$0; acceptor$1$didNotPromise$0$0; acceptor$1$promise$0$0, acceptor$0$member$0$1; acceptor$0$promise$0$0]}

sort2part_sig: {EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')): quorum$0$member$1$0; quorum$0$member$1$1; quorum$1$chosenAt$0$0, EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')): proposer$0$promise$1$0; proposer$1$chosenAt$1$0 | proposer$1$promise$1$0 | proposer$1$start$0$0, EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')): acceptor$0$member$0$0; acceptor$1$didNotPromise$0$0; acceptor$1$promise$0$0 | acceptor$0$member$0$1; acceptor$0$promise$0$0}

	sort: quorum

	identical_classes: {'quorum$0$member$1; quorum$0$member$1; quorum$1$chosenAt$0': [quorum$0$member$1$0; quorum$0$member$1$1; quorum$1$chosenAt$0$0]}

	identical_single_classes: {'quorum$0$member$1; quorum$0$member$1; quorum$1$chosenAt$0': quorum$0$member$1$0; quorum$0$member$1$1; quorum$1$chosenAt$0$0}

	identical_multi_classes: {}

	sort: proposer

	identical_classes: {'proposer$0$promise$1; proposer$1$chosenAt$1': [proposer$0$promise$1$0; proposer$1$chosenAt$1$0], 'proposer$1$promise$1': [proposer$1$promise$1$0], 'proposer$1$start$0': [proposer$1$start$0$0]}

	identical_single_classes: {'proposer$0$promise$1; proposer$1$chosenAt$1': proposer$0$promise$1$0; proposer$1$chosenAt$1$0, 'proposer$1$promise$1': proposer$1$promise$1$0, 'proposer$1$start$0': proposer$1$start$0$0}

	identical_multi_classes: {}

	sort: acceptor

	identical_classes: {'acceptor$0$member$0; acceptor$1$didNotPromise$0; acceptor$1$promise$0': [acceptor$0$member$0$0; acceptor$1$didNotPromise$0$0; acceptor$1$promise$0$0], 'acceptor$0$member$0; acceptor$0$promise$0': [acceptor$0$member$0$1; acceptor$0$promise$0$0]}

	identical_single_classes: {'acceptor$0$member$0; acceptor$1$didNotPromise$0; acceptor$1$promise$0': acceptor$0$member$0$0; acceptor$1$didNotPromise$0$0; acceptor$1$promise$0$0, 'acceptor$0$member$0; acceptor$0$promise$0': acceptor$0$member$0$1; acceptor$0$promise$0$0}

	identical_multi_classes: {}


---------- QInference: _set_sort_to_quantifier_mode ----------

quantifier mode: quorum: QuantifierMode.forall

quantifier mode: proposer: QuantifierMode.forall

quantifier mode: acceptor: QuantifierMode.forall


---------- QInference: _set_constraint_mode ----------

constraint mode: ConstraintMode.no_merge


---------- QFormula: _set_qvars ----------

forall_qvars: {Var('ACCEPTOR1', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Var('PROPOSER2', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))), Var('PROPOSER0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))), Var('QUORUM0', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), Var('PROPOSER1', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))), Var('ACCEPTOR0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')))}

exists_qvars: set()


---------- QFormula: _set_signed_func_name_to_args ----------

signed_func_name2args: {'1$chosenAt': [[Var('QUORUM0', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), Var('PROPOSER0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))]], '1$didNotPromise': [[Var('ACCEPTOR0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')))]], '1$promise': [[Var('ACCEPTOR0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Var('PROPOSER1', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))]], '0$promise': [[Var('ACCEPTOR1', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Var('PROPOSER0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))]], '1$start': [[Var('PROPOSER2', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))]], '0$member': [[Var('ACCEPTOR0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Var('QUORUM0', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')))], [Var('ACCEPTOR1', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Var('QUORUM0', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')))]]}


---------- QFormula: _set_qterms ----------

qterms: ['promise(ACCEPTOR1,PROPOSER0)', '~promise(ACCEPTOR0,PROPOSER1)', '~didNotPromise(ACCEPTOR0)', '~start(PROPOSER2)', 'member(ACCEPTOR1,QUORUM0)', 'member(ACCEPTOR0,QUORUM0)', '~chosenAt(QUORUM0,PROPOSER0)']


---------- QFormula: get_qclause ----------

qclause: forall PROPOSER1,PROPOSER2,ACCEPTOR0,PROPOSER0,QUORUM0,ACCEPTOR1. ~promise(ACCEPTOR1,PROPOSER0) | promise(ACCEPTOR0,PROPOSER1) | didNotPromise(ACCEPTOR0) | start(PROPOSER2) | ~member(ACCEPTOR1,QUORUM0) | ~member(ACCEPTOR0,QUORUM0) | chosenAt(QUORUM0,PROPOSER0) | (PROPOSER0 = PROPOSER1 | PROPOSER0 = PROPOSER2 | PROPOSER1 = PROPOSER2 | ACCEPTOR0 = ACCEPTOR1)


=== Prime Orbit 31 =====================
size : 36
num_suborbits: 1
465 (*) : --0--1----0--------0----0--
465     : ['chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~didNotPromise(acceptor1)', '~promise(acceptor1,proposer1)', '~start(proposer0)']
466     : -0--1-----0---------0---0--
466     : ['chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~didNotPromise(acceptor1)', '~promise(acceptor1,proposer2)', '~start(proposer0)']
467     : --0--1----0-------0------0-
467     : ['chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~didNotPromise(acceptor1)', '~promise(acceptor1,proposer0)', '~start(proposer1)']
468     : 0--1------0---------0----0-
468     : ['chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~didNotPromise(acceptor1)', '~promise(acceptor1,proposer2)', '~start(proposer1)']
469     : -0--1-----0-------0-------0
469     : ['chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~didNotPromise(acceptor1)', '~promise(acceptor1,proposer0)', '~start(proposer2)']
470     : 0--1------0--------0------0
470     : ['chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~didNotPromise(acceptor1)', '~promise(acceptor1,proposer1)', '~start(proposer2)']
471     : --1--0-----0----------0-0--
471     : ['chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~didNotPromise(acceptor2)', '~promise(acceptor2,proposer1)', '~start(proposer0)']
472     : -1--0------0-----------00--
472     : ['chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~didNotPromise(acceptor2)', '~promise(acceptor2,proposer2)', '~start(proposer0)']
473     : --1--0-----0---------0---0-
473     : ['chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~didNotPromise(acceptor2)', '~promise(acceptor2,proposer0)', '~start(proposer1)']
474     : 1--0-------0-----------0-0-
474     : ['chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~didNotPromise(acceptor2)', '~promise(acceptor2,proposer2)', '~start(proposer1)']
475     : -1--0------0---------0----0
475     : ['chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~didNotPromise(acceptor2)', '~promise(acceptor2,proposer0)', '~start(proposer2)']
476     : 1--0-------0----------0---0
476     : ['chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~didNotPromise(acceptor2)', '~promise(acceptor2,proposer1)', '~start(proposer2)']
477     : --0-----10------0-------0--
477     : ['chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~didNotPromise(acceptor0)', '~promise(acceptor0,proposer1)', '~start(proposer0)']
478     : -0-----1-0-------0------0--
478     : ['chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~didNotPromise(acceptor0)', '~promise(acceptor0,proposer2)', '~start(proposer0)']
479     : --0-----10-----0---------0-
479     : ['chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~didNotPromise(acceptor0)', '~promise(acceptor0,proposer0)', '~start(proposer1)']
480     : 0-----1--0-------0-------0-
480     : ['chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~didNotPromise(acceptor0)', '~promise(acceptor0,proposer2)', '~start(proposer1)']
481     : -0-----1-0-----0----------0
481     : ['chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~didNotPromise(acceptor0)', '~promise(acceptor0,proposer0)', '~start(proposer2)']
482     : 0-----1--0------0---------0
482     : ['chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~didNotPromise(acceptor0)', '~promise(acceptor0,proposer1)', '~start(proposer2)']
483     : --1-----0--0----------0-0--
483     : ['chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor2)', '~promise(acceptor2,proposer1)', '~start(proposer0)']
484     : -1-----0---0-----------00--
484     : ['chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor2)', '~promise(acceptor2,proposer2)', '~start(proposer0)']
485     : --1-----0--0---------0---0-
485     : ['chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor2)', '~promise(acceptor2,proposer0)', '~start(proposer1)']
486     : 1-----0----0-----------0-0-
486     : ['chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor2)', '~promise(acceptor2,proposer2)', '~start(proposer1)']
487     : -1-----0---0---------0----0
487     : ['chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor2)', '~promise(acceptor2,proposer0)', '~start(proposer2)']
488     : 1-----0----0----------0---0
488     : ['chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor2)', '~promise(acceptor2,proposer1)', '~start(proposer2)']
489     : -----0--10------0-------0--
489     : ['chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~didNotPromise(acceptor0)', '~promise(acceptor0,proposer1)', '~start(proposer0)']
490     : ----0--1-0-------0------0--
490     : ['chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~didNotPromise(acceptor0)', '~promise(acceptor0,proposer2)', '~start(proposer0)']
491     : -----0--10-----0---------0-
491     : ['chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~didNotPromise(acceptor0)', '~promise(acceptor0,proposer0)', '~start(proposer1)']
492     : ---0--1--0-------0-------0-
492     : ['chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~didNotPromise(acceptor0)', '~promise(acceptor0,proposer2)', '~start(proposer1)']
493     : ----0--1-0-----0----------0
493     : ['chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~didNotPromise(acceptor0)', '~promise(acceptor0,proposer0)', '~start(proposer2)']
494     : ---0--1--0------0---------0
494     : ['chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~didNotPromise(acceptor0)', '~promise(acceptor0,proposer1)', '~start(proposer2)']
495     : -----1--0-0--------0----0--
495     : ['chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor1)', '~promise(acceptor1,proposer1)', '~start(proposer0)']
496     : ----1--0--0---------0---0--
496     : ['chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor1)', '~promise(acceptor1,proposer2)', '~start(proposer0)']
497     : -----1--0-0-------0------0-
497     : ['chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor1)', '~promise(acceptor1,proposer0)', '~start(proposer1)']
498     : ---1--0---0---------0----0-
498     : ['chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor1)', '~promise(acceptor1,proposer2)', '~start(proposer1)']
499     : ----1--0--0-------0-------0
499     : ['chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor1)', '~promise(acceptor1,proposer0)', '~start(proposer2)']
500     : ---1--0---0--------0------0
500     : ['chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor1)', '~promise(acceptor1,proposer1)', '~start(proposer2)']
num_forall :   0
num_exists :   0
num_literals : 0
quantified form : None
qcost : 0




---------- QPrime ----------


---------- ConstArgBinding ----------

terms: ['~chosenAt(quorum__acceptor0_acceptor1,proposer2)', 'chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~didNotPromise(acceptor1)', '~promise(acceptor1,proposer1)', '~start(proposer0)', 'member(acceptor1,quorum__acceptor0_acceptor1)', '~member(acceptor1,quorum__acceptor0_acceptor2)']

sign_func_name2args: {'1$chosenAt': [(Const('quorum__acceptor0_acceptor1', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), Const('proposer2', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))))], '0$chosenAt': [(Const('quorum__acceptor0_acceptor2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), Const('proposer2', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))))], '1$didNotPromise': [(Const('acceptor1', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))),)], '1$promise': [(Const('acceptor1', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Const('proposer1', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))))], '1$start': [(Const('proposer0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))),)], '0$member': [(Const('acceptor1', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Const('quorum__acceptor0_acceptor1', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))))], '1$member': [(Const('acceptor1', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Const('quorum__acceptor0_acceptor2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))))]}

const2sigs: {Const('quorum__acceptor0_acceptor1', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))): [quorum$1$chosenAt$0$0, quorum$0$member$1$0], Const('proposer2', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))): [proposer$1$chosenAt$1$0, proposer$0$chosenAt$1$0], Const('quorum__acceptor0_acceptor2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))): [quorum$0$chosenAt$0$0, quorum$1$member$1$0], Const('acceptor1', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))): [acceptor$1$didNotPromise$0$0, acceptor$1$promise$0$0, acceptor$0$member$0$0, acceptor$1$member$0$0], Const('proposer1', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))): [proposer$1$promise$1$0], Const('proposer0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))): [proposer$1$start$0$0]}

sig2const: {'quorum$1$chosenAt$0$0': Const('quorum__acceptor0_acceptor1', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), 'proposer$1$chosenAt$1$0': Const('proposer2', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))), 'quorum$0$chosenAt$0$0': Const('quorum__acceptor0_acceptor2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), 'proposer$0$chosenAt$1$0': Const('proposer2', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))), 'acceptor$1$didNotPromise$0$0': Const('acceptor1', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), 'acceptor$1$promise$0$0': Const('acceptor1', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), 'proposer$1$promise$1$0': Const('proposer1', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))), 'proposer$1$start$0$0': Const('proposer0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))), 'acceptor$0$member$0$0': Const('acceptor1', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), 'quorum$0$member$1$0': Const('quorum__acceptor0_acceptor1', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), 'acceptor$1$member$0$0': Const('acceptor1', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), 'quorum$1$member$1$0': Const('quorum__acceptor0_acceptor2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')))}


---------- ArgPartition ----------

sort2class_sigs: {EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')): [quorum$0$chosenAt$0$0; quorum$1$member$1$0, quorum$0$member$1$0; quorum$1$chosenAt$0$0], EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')): [proposer$0$chosenAt$1$0; proposer$1$chosenAt$1$0, proposer$1$promise$1$0, proposer$1$start$0$0], EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')): [acceptor$0$member$0$0; acceptor$1$didNotPromise$0$0; acceptor$1$member$0$0; acceptor$1$promise$0$0]}

sort2part_sig: {EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')): quorum$0$chosenAt$0$0; quorum$1$member$1$0 | quorum$0$member$1$0; quorum$1$chosenAt$0$0, EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')): proposer$0$chosenAt$1$0; proposer$1$chosenAt$1$0 | proposer$1$promise$1$0 | proposer$1$start$0$0, EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')): acceptor$0$member$0$0; acceptor$1$didNotPromise$0$0; acceptor$1$member$0$0; acceptor$1$promise$0$0}

part_sig: ('acceptor$0$member$0$0; acceptor$1$didNotPromise$0$0; acceptor$1$member$0$0; acceptor$1$promise$0$0', 'proposer$0$chosenAt$1$0; proposer$1$chosenAt$1$0 | proposer$1$promise$1$0 | proposer$1$start$0$0', 'quorum$0$chosenAt$0$0; quorum$1$member$1$0 | quorum$0$member$1$0; quorum$1$chosenAt$0$0')


---------- SigGenerator ----------

terms:  ['~chosenAt(quorum__acceptor0_acceptor1,proposer2)', 'chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~didNotPromise(acceptor1)', '~promise(acceptor1,proposer1)', '~start(proposer0)', 'member(acceptor1,quorum__acceptor0_acceptor1)', '~member(acceptor1,quorum__acceptor0_acceptor2)']

func_name2symbol:  {'chosenAt': Const('chosenAt', FunctionSort(EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')), EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')), BooleanSort())), 'didNotPromise': Const('didNotPromise', FunctionSort(EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')), BooleanSort())), 'promise': Const('promise', FunctionSort(EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')), EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')), BooleanSort())), 'start': Const('start', FunctionSort(EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')), BooleanSort())), 'member': Const('member', FunctionSort(EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')), EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')), BooleanSort()))}

func_name2args_sort:  {'chosenAt': (EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')), EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))), 'didNotPromise': (EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')),), 'promise': (EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')), EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))), 'start': (EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')),), 'member': (EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')), EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')))}

sign_func_name2count:  {'1$chosenAt': 1, '0$chosenAt': 1, '1$didNotPromise': 1, '1$promise': 1, '1$start': 1, '0$member': 1, '1$member': 1}


---------- ProductArgPartition ----------

sort2class_sigs: {EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')): [quorum$0$chosenAt$0$0; quorum$1$member$1$0, quorum$0$member$1$0; quorum$1$chosenAt$0$0], EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')): [proposer$0$chosenAt$1$0; proposer$1$chosenAt$1$0, proposer$1$promise$1$0, proposer$1$start$0$0], EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')): [acceptor$0$member$0$0; acceptor$1$didNotPromise$0$0; acceptor$1$member$0$0; acceptor$1$promise$0$0]}

sort2part_sig: {EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')): quorum$0$chosenAt$0$0; quorum$1$member$1$0 | quorum$0$member$1$0; quorum$1$chosenAt$0$0, EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')): proposer$0$chosenAt$1$0; proposer$1$chosenAt$1$0 | proposer$1$promise$1$0 | proposer$1$start$0$0, EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')): acceptor$0$member$0$0; acceptor$1$didNotPromise$0$0; acceptor$1$member$0$0; acceptor$1$promise$0$0}

	sort: quorum

	identical_classes: {'quorum$0$chosenAt$0; quorum$1$member$1': [quorum$0$chosenAt$0$0; quorum$1$member$1$0], 'quorum$0$member$1; quorum$1$chosenAt$0': [quorum$0$member$1$0; quorum$1$chosenAt$0$0]}

	identical_single_classes: {'quorum$0$chosenAt$0; quorum$1$member$1': quorum$0$chosenAt$0$0; quorum$1$member$1$0, 'quorum$0$member$1; quorum$1$chosenAt$0': quorum$0$member$1$0; quorum$1$chosenAt$0$0}

	identical_multi_classes: {}

	sort: proposer

	identical_classes: {'proposer$0$chosenAt$1; proposer$1$chosenAt$1': [proposer$0$chosenAt$1$0; proposer$1$chosenAt$1$0], 'proposer$1$promise$1': [proposer$1$promise$1$0], 'proposer$1$start$0': [proposer$1$start$0$0]}

	identical_single_classes: {'proposer$0$chosenAt$1; proposer$1$chosenAt$1': proposer$0$chosenAt$1$0; proposer$1$chosenAt$1$0, 'proposer$1$promise$1': proposer$1$promise$1$0, 'proposer$1$start$0': proposer$1$start$0$0}

	identical_multi_classes: {}

	sort: acceptor

	identical_classes: {'acceptor$0$member$0; acceptor$1$didNotPromise$0; acceptor$1$member$0; acceptor$1$promise$0': [acceptor$0$member$0$0; acceptor$1$didNotPromise$0$0; acceptor$1$member$0$0; acceptor$1$promise$0$0]}

	identical_single_classes: {'acceptor$0$member$0; acceptor$1$didNotPromise$0; acceptor$1$member$0; acceptor$1$promise$0': acceptor$0$member$0$0; acceptor$1$didNotPromise$0$0; acceptor$1$member$0$0; acceptor$1$promise$0$0}

	identical_multi_classes: {}


---------- QInference: _set_sort_to_quantifier_mode ----------

quantifier mode: quorum: QuantifierMode.forall

quantifier mode: proposer: QuantifierMode.forall

quantifier mode: acceptor: QuantifierMode.forall


---------- QInference: _set_constraint_mode ----------

constraint mode: ConstraintMode.no_merge


---------- QFormula: _set_qvars ----------

forall_qvars: {Var('PROPOSER2', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))), Var('PROPOSER0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))), Var('QUORUM0', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), Var('QUORUM1', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), Var('PROPOSER1', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))), Var('ACCEPTOR0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')))}

exists_qvars: set()


---------- QFormula: _set_signed_func_name_to_args ----------

signed_func_name2args: {'1$chosenAt': [[Var('QUORUM1', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), Var('PROPOSER0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))]], '0$chosenAt': [[Var('QUORUM0', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), Var('PROPOSER0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))]], '1$didNotPromise': [[Var('ACCEPTOR0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')))]], '1$promise': [[Var('ACCEPTOR0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Var('PROPOSER1', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))]], '1$start': [[Var('PROPOSER2', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))]], '0$member': [[Var('ACCEPTOR0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Var('QUORUM1', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')))]], '1$member': [[Var('ACCEPTOR0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Var('QUORUM0', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')))]]}


---------- QFormula: _set_qterms ----------

qterms: ['~promise(ACCEPTOR0,PROPOSER1)', '~didNotPromise(ACCEPTOR0)', '~start(PROPOSER2)', 'member(ACCEPTOR0,QUORUM1)', '~member(ACCEPTOR0,QUORUM0)', 'chosenAt(QUORUM0,PROPOSER0)', '~chosenAt(QUORUM1,PROPOSER0)']


---------- QFormula: get_qclause ----------

qclause: forall PROPOSER1,PROPOSER2,ACCEPTOR0,PROPOSER0,QUORUM0,QUORUM1. promise(ACCEPTOR0,PROPOSER1) | didNotPromise(ACCEPTOR0) | start(PROPOSER2) | ~member(ACCEPTOR0,QUORUM1) | member(ACCEPTOR0,QUORUM0) | ~chosenAt(QUORUM0,PROPOSER0) | chosenAt(QUORUM1,PROPOSER0) | (PROPOSER0 = PROPOSER1 | PROPOSER0 = PROPOSER2 | QUORUM0 = QUORUM1 | PROPOSER1 = PROPOSER2)


=== Prime Orbit 33 =====================
size : 9
num_suborbits: 1
519 (*) : -0-------00-------------0-0
519     : ['~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~start(proposer0)', '~start(proposer2)']
520     : --0------00-------------00-
520     : ['~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~start(proposer0)', '~start(proposer1)']
521     : 0--------00--------------00
521     : ['~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~start(proposer1)', '~start(proposer2)']
522     : ----0----0-0------------0-0
522     : ['~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor2)', '~start(proposer0)', '~start(proposer2)']
523     : -----0---0-0------------00-
523     : ['~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor2)', '~start(proposer0)', '~start(proposer1)']
524     : ---0-----0-0-------------00
524     : ['~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor2)', '~start(proposer1)', '~start(proposer2)']
525     : -------0--00------------0-0
525     : ['~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~start(proposer0)', '~start(proposer2)']
526     : --------0-00------------00-
526     : ['~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~start(proposer0)', '~start(proposer1)']
527     : ------0---00-------------00
527     : ['~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~start(proposer1)', '~start(proposer2)']
num_forall :   0
num_exists :   0
num_literals : 0
quantified form : None
qcost : 0




---------- QPrime ----------


---------- ConstArgBinding ----------

terms: ['~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~start(proposer0)', '~start(proposer2)', 'member(acceptor0,quorum__acceptor0_acceptor1)', 'member(acceptor1,quorum__acceptor0_acceptor1)']

sign_func_name2args: {'1$chosenAt': [(Const('quorum__acceptor0_acceptor1', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), Const('proposer1', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))))], '1$didNotPromise': [(Const('acceptor0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))),), (Const('acceptor1', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))),)], '1$start': [(Const('proposer0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))),), (Const('proposer2', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))),)], '0$member': [(Const('acceptor0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Const('quorum__acceptor0_acceptor1', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')))), (Const('acceptor1', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Const('quorum__acceptor0_acceptor1', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))))]}

const2sigs: {Const('quorum__acceptor0_acceptor1', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))): [quorum$1$chosenAt$0$0, quorum$0$member$1$0, quorum$0$member$1$1], Const('proposer1', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))): [proposer$1$chosenAt$1$0], Const('acceptor0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))): [acceptor$1$didNotPromise$0$0, acceptor$0$member$0$0], Const('acceptor1', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))): [acceptor$1$didNotPromise$0$1, acceptor$0$member$0$1], Const('proposer0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))): [proposer$1$start$0$0], Const('proposer2', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))): [proposer$1$start$0$1]}

sig2const: {'quorum$1$chosenAt$0$0': Const('quorum__acceptor0_acceptor1', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), 'proposer$1$chosenAt$1$0': Const('proposer1', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))), 'acceptor$1$didNotPromise$0$0': Const('acceptor0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), 'acceptor$1$didNotPromise$0$1': Const('acceptor1', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), 'proposer$1$start$0$0': Const('proposer0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))), 'proposer$1$start$0$1': Const('proposer2', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))), 'acceptor$0$member$0$0': Const('acceptor0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), 'quorum$0$member$1$0': Const('quorum__acceptor0_acceptor1', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), 'acceptor$0$member$0$1': Const('acceptor1', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), 'quorum$0$member$1$1': Const('quorum__acceptor0_acceptor1', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')))}


---------- ArgPartition ----------

sort2class_sigs: {EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')): [quorum$0$member$1$0; quorum$0$member$1$1; quorum$1$chosenAt$0$0], EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')): [proposer$1$chosenAt$1$0, proposer$1$start$0$0, proposer$1$start$0$1], EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')): [acceptor$0$member$0$0; acceptor$1$didNotPromise$0$0, acceptor$0$member$0$1; acceptor$1$didNotPromise$0$1]}

sort2part_sig: {EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')): quorum$0$member$1$0; quorum$0$member$1$1; quorum$1$chosenAt$0$0, EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')): proposer$1$chosenAt$1$0 | proposer$1$start$0$0 | proposer$1$start$0$1, EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')): acceptor$0$member$0$0; acceptor$1$didNotPromise$0$0 | acceptor$0$member$0$1; acceptor$1$didNotPromise$0$1}

part_sig: ('acceptor$0$member$0$0; acceptor$1$didNotPromise$0$0 | acceptor$0$member$0$1; acceptor$1$didNotPromise$0$1', 'proposer$1$chosenAt$1$0 | proposer$1$start$0$0 | proposer$1$start$0$1', 'quorum$0$member$1$0; quorum$0$member$1$1; quorum$1$chosenAt$0$0')


---------- SigGenerator ----------

terms:  ['~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~start(proposer0)', '~start(proposer2)', 'member(acceptor0,quorum__acceptor0_acceptor1)', 'member(acceptor1,quorum__acceptor0_acceptor1)']

func_name2symbol:  {'chosenAt': Const('chosenAt', FunctionSort(EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')), EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')), BooleanSort())), 'didNotPromise': Const('didNotPromise', FunctionSort(EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')), BooleanSort())), 'start': Const('start', FunctionSort(EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')), BooleanSort())), 'member': Const('member', FunctionSort(EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')), EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')), BooleanSort()))}

func_name2args_sort:  {'chosenAt': (EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')), EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))), 'didNotPromise': (EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')),), 'start': (EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')),), 'member': (EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')), EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')))}

sign_func_name2count:  {'1$chosenAt': 1, '1$didNotPromise': 2, '1$start': 2, '0$member': 2}


---------- ProductArgPartition ----------

sort2class_sigs: {EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')): [quorum$0$member$1$0; quorum$0$member$1$1; quorum$1$chosenAt$0$0], EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')): [proposer$1$chosenAt$1$0, proposer$1$start$0$0, proposer$1$start$0$1], EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')): [acceptor$0$member$0$0; acceptor$1$didNotPromise$0$0, acceptor$0$member$0$1; acceptor$1$didNotPromise$0$1]}

sort2part_sig: {EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')): quorum$0$member$1$0; quorum$0$member$1$1; quorum$1$chosenAt$0$0, EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')): proposer$1$chosenAt$1$0 | proposer$1$start$0$0 | proposer$1$start$0$1, EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')): acceptor$0$member$0$0; acceptor$1$didNotPromise$0$0 | acceptor$0$member$0$1; acceptor$1$didNotPromise$0$1}

	sort: quorum

	identical_classes: {'quorum$0$member$1; quorum$0$member$1; quorum$1$chosenAt$0': [quorum$0$member$1$0; quorum$0$member$1$1; quorum$1$chosenAt$0$0]}

	identical_single_classes: {'quorum$0$member$1; quorum$0$member$1; quorum$1$chosenAt$0': quorum$0$member$1$0; quorum$0$member$1$1; quorum$1$chosenAt$0$0}

	identical_multi_classes: {}

	sort: proposer

	identical_classes: {'proposer$1$chosenAt$1': [proposer$1$chosenAt$1$0], 'proposer$1$start$0': [proposer$1$start$0$0, proposer$1$start$0$1]}

	identical_single_classes: {'proposer$1$chosenAt$1': proposer$1$chosenAt$1$0}

	identical_multi_classes: {'proposer$1$start$0': [proposer$1$start$0$0, proposer$1$start$0$1]}

	sort: acceptor

	identical_classes: {'acceptor$0$member$0; acceptor$1$didNotPromise$0': [acceptor$0$member$0$0; acceptor$1$didNotPromise$0$0, acceptor$0$member$0$1; acceptor$1$didNotPromise$0$1]}

	identical_single_classes: {}

	identical_multi_classes: {'acceptor$0$member$0; acceptor$1$didNotPromise$0': [acceptor$0$member$0$0, acceptor$1$didNotPromise$0$0, acceptor$0$member$0$1, acceptor$1$didNotPromise$0$1]}


---------- QInference: _set_sort_to_quantifier_mode ----------

quantifier mode: quorum: QuantifierMode.forall

quantifier mode: proposer: QuantifierMode.forall_exists

quantifier mode: acceptor: QuantifierMode.forall


---------- QInference: _set_constraint_mode ----------

constraint mode: ConstraintMode.no_merge


---------- QFormula: _set_qvars ----------

forall_qvars: {Var('PROPOSER1', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))), Var('ACCEPTOR0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Var('QUORUM0', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), Var('ACCEPTOR1', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')))}

exists_qvars: {Var('PROPOSER0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))}


---------- QFormula: _set_signed_func_name_to_args ----------

signed_func_name2args: {'1$chosenAt': [[Var('QUORUM0', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), Var('PROPOSER1', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))]], '1$didNotPromise': [[Var('ACCEPTOR0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')))], [Var('ACCEPTOR1', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')))]], '1$start': [[Var('PROPOSER0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))], [Var('PROPOSER0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))]], '0$member': [[Var('ACCEPTOR0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Var('QUORUM0', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')))], [Var('ACCEPTOR1', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Var('QUORUM0', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')))]]}


---------- QFormula: _set_qterms ----------

qterms: ['~didNotPromise(ACCEPTOR0)', 'member(ACCEPTOR1,QUORUM0)', '~start(PROPOSER0)', '~chosenAt(QUORUM0,PROPOSER1)', 'member(ACCEPTOR0,QUORUM0)', '~didNotPromise(ACCEPTOR1)']


---------- QFormula: get_qclause ----------

qclause: forall ACCEPTOR1,PROPOSER1,QUORUM0,ACCEPTOR0. didNotPromise(ACCEPTOR0) | ~member(ACCEPTOR1,QUORUM0) | chosenAt(QUORUM0,PROPOSER1) | ~member(ACCEPTOR0,QUORUM0) | didNotPromise(ACCEPTOR1) | (exists PROPOSER0. (start(PROPOSER0) & PROPOSER0 ~= PROPOSER1)) | ACCEPTOR0 = ACCEPTOR1


=== Prime Orbit 34 =====================
size : 18
num_suborbits: 1
528 (*) : -------0--0-----------1-0-0
528     : ['promise(acceptor2,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor1)', '~start(proposer0)', '~start(proposer2)']
529     : --------0-0------------100-
529     : ['promise(acceptor2,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor1)', '~start(proposer0)', '~start(proposer1)']
530     : ------0---0----------1---00
530     : ['promise(acceptor2,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor1)', '~start(proposer1)', '~start(proposer2)']
531     : -------0---0-------1----0-0
531     : ['promise(acceptor1,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor2)', '~start(proposer0)', '~start(proposer2)']
532     : --------0--0--------1---00-
532     : ['promise(acceptor1,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor2)', '~start(proposer0)', '~start(proposer1)']
533     : ------0----0------1------00
533     : ['promise(acceptor1,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor2)', '~start(proposer1)', '~start(proposer2)']
534     : ----0----0------------1-0-0
534     : ['promise(acceptor2,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~didNotPromise(acceptor0)', '~start(proposer0)', '~start(proposer2)']
535     : -----0---0-------------100-
535     : ['promise(acceptor2,proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~didNotPromise(acceptor0)', '~start(proposer0)', '~start(proposer1)']
536     : ---0-----0-----------1---00
536     : ['promise(acceptor2,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~didNotPromise(acceptor0)', '~start(proposer1)', '~start(proposer2)']
537     : ----0------0----1-------0-0
537     : ['promise(acceptor0,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~didNotPromise(acceptor2)', '~start(proposer0)', '~start(proposer2)']
538     : -----0-----0-----1------00-
538     : ['promise(acceptor0,proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~didNotPromise(acceptor2)', '~start(proposer0)', '~start(proposer1)']
539     : ---0-------0---1---------00
539     : ['promise(acceptor0,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~didNotPromise(acceptor2)', '~start(proposer1)', '~start(proposer2)']
540     : -0-------0---------1----0-0
540     : ['promise(acceptor1,proposer1)', '~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~didNotPromise(acceptor0)', '~start(proposer0)', '~start(proposer2)']
541     : --0------0----------1---00-
541     : ['promise(acceptor1,proposer2)', '~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~didNotPromise(acceptor0)', '~start(proposer0)', '~start(proposer1)']
542     : 0--------0--------1------00
542     : ['promise(acceptor1,proposer0)', '~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~didNotPromise(acceptor0)', '~start(proposer1)', '~start(proposer2)']
543     : -0--------0-----1-------0-0
543     : ['promise(acceptor0,proposer1)', '~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~didNotPromise(acceptor1)', '~start(proposer0)', '~start(proposer2)']
544     : --0-------0------1------00-
544     : ['promise(acceptor0,proposer2)', '~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~didNotPromise(acceptor1)', '~start(proposer0)', '~start(proposer1)']
545     : 0---------0----1---------00
545     : ['promise(acceptor0,proposer0)', '~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~didNotPromise(acceptor1)', '~start(proposer1)', '~start(proposer2)']
num_forall :   0
num_exists :   0
num_literals : 0
quantified form : None
qcost : 0




---------- QPrime ----------


---------- ConstArgBinding ----------

terms: ['~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor1)', 'promise(acceptor2,proposer1)', '~start(proposer0)', '~start(proposer2)', 'member(acceptor1,quorum__acceptor1_acceptor2)', 'member(acceptor2,quorum__acceptor1_acceptor2)']

sign_func_name2args: {'1$chosenAt': [(Const('quorum__acceptor1_acceptor2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), Const('proposer1', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))))], '1$didNotPromise': [(Const('acceptor1', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))),)], '0$promise': [(Const('acceptor2', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Const('proposer1', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))))], '1$start': [(Const('proposer0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))),), (Const('proposer2', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))),)], '0$member': [(Const('acceptor1', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Const('quorum__acceptor1_acceptor2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')))), (Const('acceptor2', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Const('quorum__acceptor1_acceptor2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))))]}

const2sigs: {Const('quorum__acceptor1_acceptor2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))): [quorum$1$chosenAt$0$0, quorum$0$member$1$0, quorum$0$member$1$1], Const('proposer1', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))): [proposer$1$chosenAt$1$0, proposer$0$promise$1$0], Const('acceptor1', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))): [acceptor$1$didNotPromise$0$0, acceptor$0$member$0$0], Const('acceptor2', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))): [acceptor$0$promise$0$0, acceptor$0$member$0$1], Const('proposer0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))): [proposer$1$start$0$0], Const('proposer2', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))): [proposer$1$start$0$1]}

sig2const: {'quorum$1$chosenAt$0$0': Const('quorum__acceptor1_acceptor2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), 'proposer$1$chosenAt$1$0': Const('proposer1', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))), 'acceptor$1$didNotPromise$0$0': Const('acceptor1', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), 'acceptor$0$promise$0$0': Const('acceptor2', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), 'proposer$0$promise$1$0': Const('proposer1', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))), 'proposer$1$start$0$0': Const('proposer0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))), 'proposer$1$start$0$1': Const('proposer2', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))), 'acceptor$0$member$0$0': Const('acceptor1', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), 'quorum$0$member$1$0': Const('quorum__acceptor1_acceptor2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), 'acceptor$0$member$0$1': Const('acceptor2', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), 'quorum$0$member$1$1': Const('quorum__acceptor1_acceptor2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')))}


---------- ArgPartition ----------

sort2class_sigs: {EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')): [quorum$0$member$1$0; quorum$0$member$1$1; quorum$1$chosenAt$0$0], EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')): [proposer$0$promise$1$0; proposer$1$chosenAt$1$0, proposer$1$start$0$0, proposer$1$start$0$1], EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')): [acceptor$0$member$0$0; acceptor$1$didNotPromise$0$0, acceptor$0$member$0$1; acceptor$0$promise$0$0]}

sort2part_sig: {EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')): quorum$0$member$1$0; quorum$0$member$1$1; quorum$1$chosenAt$0$0, EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')): proposer$0$promise$1$0; proposer$1$chosenAt$1$0 | proposer$1$start$0$0 | proposer$1$start$0$1, EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')): acceptor$0$member$0$0; acceptor$1$didNotPromise$0$0 | acceptor$0$member$0$1; acceptor$0$promise$0$0}

part_sig: ('acceptor$0$member$0$0; acceptor$1$didNotPromise$0$0 | acceptor$0$member$0$1; acceptor$0$promise$0$0', 'proposer$0$promise$1$0; proposer$1$chosenAt$1$0 | proposer$1$start$0$0 | proposer$1$start$0$1', 'quorum$0$member$1$0; quorum$0$member$1$1; quorum$1$chosenAt$0$0')


---------- SigGenerator ----------

terms:  ['~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor1)', 'promise(acceptor2,proposer1)', '~start(proposer0)', '~start(proposer2)', 'member(acceptor1,quorum__acceptor1_acceptor2)', 'member(acceptor2,quorum__acceptor1_acceptor2)']

func_name2symbol:  {'chosenAt': Const('chosenAt', FunctionSort(EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')), EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')), BooleanSort())), 'didNotPromise': Const('didNotPromise', FunctionSort(EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')), BooleanSort())), 'promise': Const('promise', FunctionSort(EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')), EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')), BooleanSort())), 'start': Const('start', FunctionSort(EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')), BooleanSort())), 'member': Const('member', FunctionSort(EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')), EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')), BooleanSort()))}

func_name2args_sort:  {'chosenAt': (EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')), EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))), 'didNotPromise': (EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')),), 'promise': (EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')), EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))), 'start': (EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')),), 'member': (EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')), EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')))}

sign_func_name2count:  {'1$chosenAt': 1, '1$didNotPromise': 1, '0$promise': 1, '1$start': 2, '0$member': 2}


---------- ProductArgPartition ----------

sort2class_sigs: {EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')): [quorum$0$member$1$0; quorum$0$member$1$1; quorum$1$chosenAt$0$0], EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')): [proposer$0$promise$1$0; proposer$1$chosenAt$1$0, proposer$1$start$0$0, proposer$1$start$0$1], EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')): [acceptor$0$member$0$0; acceptor$1$didNotPromise$0$0, acceptor$0$member$0$1; acceptor$0$promise$0$0]}

sort2part_sig: {EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')): quorum$0$member$1$0; quorum$0$member$1$1; quorum$1$chosenAt$0$0, EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')): proposer$0$promise$1$0; proposer$1$chosenAt$1$0 | proposer$1$start$0$0 | proposer$1$start$0$1, EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')): acceptor$0$member$0$0; acceptor$1$didNotPromise$0$0 | acceptor$0$member$0$1; acceptor$0$promise$0$0}

	sort: quorum

	identical_classes: {'quorum$0$member$1; quorum$0$member$1; quorum$1$chosenAt$0': [quorum$0$member$1$0; quorum$0$member$1$1; quorum$1$chosenAt$0$0]}

	identical_single_classes: {'quorum$0$member$1; quorum$0$member$1; quorum$1$chosenAt$0': quorum$0$member$1$0; quorum$0$member$1$1; quorum$1$chosenAt$0$0}

	identical_multi_classes: {}

	sort: proposer

	identical_classes: {'proposer$0$promise$1; proposer$1$chosenAt$1': [proposer$0$promise$1$0; proposer$1$chosenAt$1$0], 'proposer$1$start$0': [proposer$1$start$0$0, proposer$1$start$0$1]}

	identical_single_classes: {'proposer$0$promise$1; proposer$1$chosenAt$1': proposer$0$promise$1$0; proposer$1$chosenAt$1$0}

	identical_multi_classes: {'proposer$1$start$0': [proposer$1$start$0$0, proposer$1$start$0$1]}

	sort: acceptor

	identical_classes: {'acceptor$0$member$0; acceptor$1$didNotPromise$0': [acceptor$0$member$0$0; acceptor$1$didNotPromise$0$0], 'acceptor$0$member$0; acceptor$0$promise$0': [acceptor$0$member$0$1; acceptor$0$promise$0$0]}

	identical_single_classes: {'acceptor$0$member$0; acceptor$1$didNotPromise$0': acceptor$0$member$0$0; acceptor$1$didNotPromise$0$0, 'acceptor$0$member$0; acceptor$0$promise$0': acceptor$0$member$0$1; acceptor$0$promise$0$0}

	identical_multi_classes: {}


---------- QInference: _set_sort_to_quantifier_mode ----------

quantifier mode: quorum: QuantifierMode.forall

quantifier mode: proposer: QuantifierMode.forall_exists

quantifier mode: acceptor: QuantifierMode.forall


---------- QInference: _set_constraint_mode ----------

constraint mode: ConstraintMode.no_merge


---------- QFormula: _set_qvars ----------

forall_qvars: {Var('PROPOSER1', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))), Var('ACCEPTOR0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Var('QUORUM0', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), Var('ACCEPTOR1', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')))}

exists_qvars: {Var('PROPOSER0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))}


---------- QFormula: _set_signed_func_name_to_args ----------

signed_func_name2args: {'1$chosenAt': [[Var('QUORUM0', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), Var('PROPOSER1', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))]], '1$didNotPromise': [[Var('ACCEPTOR0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')))]], '0$promise': [[Var('ACCEPTOR1', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Var('PROPOSER1', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))]], '1$start': [[Var('PROPOSER0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))], [Var('PROPOSER0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))]], '0$member': [[Var('ACCEPTOR0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Var('QUORUM0', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')))], [Var('ACCEPTOR1', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Var('QUORUM0', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')))]]}


---------- QFormula: _set_qterms ----------

qterms: ['~didNotPromise(ACCEPTOR0)', 'promise(ACCEPTOR1,PROPOSER1)', 'member(ACCEPTOR1,QUORUM0)', '~start(PROPOSER0)', '~chosenAt(QUORUM0,PROPOSER1)', 'member(ACCEPTOR0,QUORUM0)']


---------- QFormula: get_qclause ----------

qclause: forall ACCEPTOR1,PROPOSER1,QUORUM0,ACCEPTOR0. didNotPromise(ACCEPTOR0) | ~promise(ACCEPTOR1,PROPOSER1) | ~member(ACCEPTOR1,QUORUM0) | chosenAt(QUORUM0,PROPOSER1) | ~member(ACCEPTOR0,QUORUM0) | (exists PROPOSER0. (start(PROPOSER0) & PROPOSER0 ~= PROPOSER1)) | ACCEPTOR0 = ACCEPTOR1


=== Prime Orbit 35 =====================
size : 18
num_suborbits: 1
546 (*) : ----1--0--0-------------0-0
546     : ['chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor1)', '~start(proposer0)', '~start(proposer2)']
547     : -----1--0-0-------------00-
547     : ['chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor1)', '~start(proposer0)', '~start(proposer1)']
548     : ---1--0---0--------------00
548     : ['chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor1)', '~start(proposer1)', '~start(proposer2)']
549     : -1-----0---0------------0-0
549     : ['chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor2)', '~start(proposer0)', '~start(proposer2)']
550     : --1-----0--0------------00-
550     : ['chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor2)', '~start(proposer0)', '~start(proposer1)']
551     : 1-----0----0-------------00
551     : ['chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor2)', '~start(proposer1)', '~start(proposer2)']
552     : ----0--1-0--------------0-0
552     : ['chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~didNotPromise(acceptor0)', '~start(proposer0)', '~start(proposer2)']
553     : -----0--10--------------00-
553     : ['chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~didNotPromise(acceptor0)', '~start(proposer0)', '~start(proposer1)']
554     : ---0--1--0---------------00
554     : ['chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~didNotPromise(acceptor0)', '~start(proposer1)', '~start(proposer2)']
555     : -1--0------0------------0-0
555     : ['chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~didNotPromise(acceptor2)', '~start(proposer0)', '~start(proposer2)']
556     : --1--0-----0------------00-
556     : ['chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~didNotPromise(acceptor2)', '~start(proposer0)', '~start(proposer1)']
557     : 1--0-------0-------------00
557     : ['chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~didNotPromise(acceptor2)', '~start(proposer1)', '~start(proposer2)']
558     : -0-----1-0--------------0-0
558     : ['chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~didNotPromise(acceptor0)', '~start(proposer0)', '~start(proposer2)']
559     : --0-----10--------------00-
559     : ['chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~didNotPromise(acceptor0)', '~start(proposer0)', '~start(proposer1)']
560     : 0-----1--0---------------00
560     : ['chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~didNotPromise(acceptor0)', '~start(proposer1)', '~start(proposer2)']
561     : -0--1-----0-------------0-0
561     : ['chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~didNotPromise(acceptor1)', '~start(proposer0)', '~start(proposer2)']
562     : --0--1----0-------------00-
562     : ['chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~didNotPromise(acceptor1)', '~start(proposer0)', '~start(proposer1)']
563     : 0--1------0--------------00
563     : ['chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~didNotPromise(acceptor1)', '~start(proposer1)', '~start(proposer2)']
num_forall :   0
num_exists :   0
num_literals : 0
quantified form : None
qcost : 0




---------- QPrime ----------


---------- ConstArgBinding ----------

terms: ['chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor1)', '~start(proposer0)', '~start(proposer2)', '~member(acceptor1,quorum__acceptor0_acceptor2)', 'member(acceptor1,quorum__acceptor1_acceptor2)']

sign_func_name2args: {'0$chosenAt': [(Const('quorum__acceptor0_acceptor2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), Const('proposer1', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))))], '1$chosenAt': [(Const('quorum__acceptor1_acceptor2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), Const('proposer1', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))))], '1$didNotPromise': [(Const('acceptor1', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))),)], '1$start': [(Const('proposer0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))),), (Const('proposer2', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))),)], '1$member': [(Const('acceptor1', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Const('quorum__acceptor0_acceptor2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))))], '0$member': [(Const('acceptor1', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Const('quorum__acceptor1_acceptor2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))))]}

const2sigs: {Const('quorum__acceptor0_acceptor2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))): [quorum$0$chosenAt$0$0, quorum$1$member$1$0], Const('proposer1', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))): [proposer$0$chosenAt$1$0, proposer$1$chosenAt$1$0], Const('quorum__acceptor1_acceptor2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))): [quorum$1$chosenAt$0$0, quorum$0$member$1$0], Const('acceptor1', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))): [acceptor$1$didNotPromise$0$0, acceptor$1$member$0$0, acceptor$0$member$0$0], Const('proposer0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))): [proposer$1$start$0$0], Const('proposer2', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))): [proposer$1$start$0$1]}

sig2const: {'quorum$0$chosenAt$0$0': Const('quorum__acceptor0_acceptor2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), 'proposer$0$chosenAt$1$0': Const('proposer1', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))), 'quorum$1$chosenAt$0$0': Const('quorum__acceptor1_acceptor2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), 'proposer$1$chosenAt$1$0': Const('proposer1', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))), 'acceptor$1$didNotPromise$0$0': Const('acceptor1', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), 'proposer$1$start$0$0': Const('proposer0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))), 'proposer$1$start$0$1': Const('proposer2', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))), 'acceptor$1$member$0$0': Const('acceptor1', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), 'quorum$1$member$1$0': Const('quorum__acceptor0_acceptor2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), 'acceptor$0$member$0$0': Const('acceptor1', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), 'quorum$0$member$1$0': Const('quorum__acceptor1_acceptor2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')))}


---------- ArgPartition ----------

sort2class_sigs: {EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')): [quorum$0$chosenAt$0$0; quorum$1$member$1$0, quorum$0$member$1$0; quorum$1$chosenAt$0$0], EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')): [proposer$0$chosenAt$1$0; proposer$1$chosenAt$1$0, proposer$1$start$0$0, proposer$1$start$0$1], EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')): [acceptor$0$member$0$0; acceptor$1$didNotPromise$0$0; acceptor$1$member$0$0]}

sort2part_sig: {EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')): quorum$0$chosenAt$0$0; quorum$1$member$1$0 | quorum$0$member$1$0; quorum$1$chosenAt$0$0, EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')): proposer$0$chosenAt$1$0; proposer$1$chosenAt$1$0 | proposer$1$start$0$0 | proposer$1$start$0$1, EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')): acceptor$0$member$0$0; acceptor$1$didNotPromise$0$0; acceptor$1$member$0$0}

part_sig: ('acceptor$0$member$0$0; acceptor$1$didNotPromise$0$0; acceptor$1$member$0$0', 'proposer$0$chosenAt$1$0; proposer$1$chosenAt$1$0 | proposer$1$start$0$0 | proposer$1$start$0$1', 'quorum$0$chosenAt$0$0; quorum$1$member$1$0 | quorum$0$member$1$0; quorum$1$chosenAt$0$0')


---------- SigGenerator ----------

terms:  ['chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor1)', '~start(proposer0)', '~start(proposer2)', '~member(acceptor1,quorum__acceptor0_acceptor2)', 'member(acceptor1,quorum__acceptor1_acceptor2)']

func_name2symbol:  {'chosenAt': Const('chosenAt', FunctionSort(EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')), EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')), BooleanSort())), 'didNotPromise': Const('didNotPromise', FunctionSort(EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')), BooleanSort())), 'start': Const('start', FunctionSort(EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')), BooleanSort())), 'member': Const('member', FunctionSort(EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')), EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')), BooleanSort()))}

func_name2args_sort:  {'chosenAt': (EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')), EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))), 'didNotPromise': (EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')),), 'start': (EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')),), 'member': (EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')), EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')))}

sign_func_name2count:  {'0$chosenAt': 1, '1$chosenAt': 1, '1$didNotPromise': 1, '1$start': 2, '1$member': 1, '0$member': 1}


---------- ProductArgPartition ----------

sort2class_sigs: {EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')): [quorum$0$chosenAt$0$0; quorum$1$member$1$0, quorum$0$member$1$0; quorum$1$chosenAt$0$0], EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')): [proposer$0$chosenAt$1$0; proposer$1$chosenAt$1$0, proposer$1$start$0$0, proposer$1$start$0$1], EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')): [acceptor$0$member$0$0; acceptor$1$didNotPromise$0$0; acceptor$1$member$0$0]}

sort2part_sig: {EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')): quorum$0$chosenAt$0$0; quorum$1$member$1$0 | quorum$0$member$1$0; quorum$1$chosenAt$0$0, EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')): proposer$0$chosenAt$1$0; proposer$1$chosenAt$1$0 | proposer$1$start$0$0 | proposer$1$start$0$1, EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')): acceptor$0$member$0$0; acceptor$1$didNotPromise$0$0; acceptor$1$member$0$0}

	sort: quorum

	identical_classes: {'quorum$0$chosenAt$0; quorum$1$member$1': [quorum$0$chosenAt$0$0; quorum$1$member$1$0], 'quorum$0$member$1; quorum$1$chosenAt$0': [quorum$0$member$1$0; quorum$1$chosenAt$0$0]}

	identical_single_classes: {'quorum$0$chosenAt$0; quorum$1$member$1': quorum$0$chosenAt$0$0; quorum$1$member$1$0, 'quorum$0$member$1; quorum$1$chosenAt$0': quorum$0$member$1$0; quorum$1$chosenAt$0$0}

	identical_multi_classes: {}

	sort: proposer

	identical_classes: {'proposer$0$chosenAt$1; proposer$1$chosenAt$1': [proposer$0$chosenAt$1$0; proposer$1$chosenAt$1$0], 'proposer$1$start$0': [proposer$1$start$0$0, proposer$1$start$0$1]}

	identical_single_classes: {'proposer$0$chosenAt$1; proposer$1$chosenAt$1': proposer$0$chosenAt$1$0; proposer$1$chosenAt$1$0}

	identical_multi_classes: {'proposer$1$start$0': [proposer$1$start$0$0, proposer$1$start$0$1]}

	sort: acceptor

	identical_classes: {'acceptor$0$member$0; acceptor$1$didNotPromise$0; acceptor$1$member$0': [acceptor$0$member$0$0; acceptor$1$didNotPromise$0$0; acceptor$1$member$0$0]}

	identical_single_classes: {'acceptor$0$member$0; acceptor$1$didNotPromise$0; acceptor$1$member$0': acceptor$0$member$0$0; acceptor$1$didNotPromise$0$0; acceptor$1$member$0$0}

	identical_multi_classes: {}


---------- QInference: _set_sort_to_quantifier_mode ----------

quantifier mode: quorum: QuantifierMode.forall

quantifier mode: proposer: QuantifierMode.forall_exists

quantifier mode: acceptor: QuantifierMode.forall


---------- QInference: _set_constraint_mode ----------

constraint mode: ConstraintMode.no_merge


---------- QFormula: _set_qvars ----------

forall_qvars: {Var('PROPOSER1', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))), Var('ACCEPTOR0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Var('QUORUM1', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), Var('QUORUM0', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')))}

exists_qvars: {Var('PROPOSER0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))}


---------- QFormula: _set_signed_func_name_to_args ----------

signed_func_name2args: {'0$chosenAt': [[Var('QUORUM0', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), Var('PROPOSER1', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))]], '1$chosenAt': [[Var('QUORUM1', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), Var('PROPOSER1', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))]], '1$didNotPromise': [[Var('ACCEPTOR0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')))]], '1$start': [[Var('PROPOSER0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))], [Var('PROPOSER0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))]], '1$member': [[Var('ACCEPTOR0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Var('QUORUM0', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')))]], '0$member': [[Var('ACCEPTOR0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Var('QUORUM1', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')))]]}


---------- QFormula: _set_qterms ----------

qterms: ['chosenAt(QUORUM0,PROPOSER1)', '~didNotPromise(ACCEPTOR0)', 'member(ACCEPTOR0,QUORUM1)', '~start(PROPOSER0)', '~member(ACCEPTOR0,QUORUM0)', '~chosenAt(QUORUM1,PROPOSER1)']


---------- QFormula: get_qclause ----------

qclause: forall QUORUM1,PROPOSER1,QUORUM0,ACCEPTOR0. ~chosenAt(QUORUM0,PROPOSER1) | didNotPromise(ACCEPTOR0) | ~member(ACCEPTOR0,QUORUM1) | member(ACCEPTOR0,QUORUM0) | chosenAt(QUORUM1,PROPOSER1) | (exists PROPOSER0. (start(PROPOSER0) & PROPOSER0 ~= PROPOSER1)) | QUORUM0 = QUORUM1


=== Prime Orbit 36 =====================
size : 9
num_suborbits: 1
564 (*) : --0-----0-0---1---00-------
564     : ['leader(proposer2)', '~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor1)', '~promise(acceptor1,proposer0)', '~promise(acceptor1,proposer1)']
565     : -0-----0--0--1----0-0------
565     : ['leader(proposer1)', '~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor1)', '~promise(acceptor1,proposer0)', '~promise(acceptor1,proposer2)']
566     : 0-----0---0-1------00------
566     : ['leader(proposer0)', '~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor1)', '~promise(acceptor1,proposer1)', '~promise(acceptor1,proposer2)']
567     : -----0--0--0--1------00----
567     : ['leader(proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor2)', '~promise(acceptor2,proposer0)', '~promise(acceptor2,proposer1)']
568     : ----0--0---0-1-------0-0---
568     : ['leader(proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor2)', '~promise(acceptor2,proposer0)', '~promise(acceptor2,proposer2)']
569     : ---0--0----01---------00---
569     : ['leader(proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor2)', '~promise(acceptor2,proposer1)', '~promise(acceptor2,proposer2)']
570     : --0--0---0----100----------
570     : ['leader(proposer2)', '~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~didNotPromise(acceptor0)', '~promise(acceptor0,proposer0)', '~promise(acceptor0,proposer1)']
571     : -0--0----0---1-0-0---------
571     : ['leader(proposer1)', '~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~didNotPromise(acceptor0)', '~promise(acceptor0,proposer0)', '~promise(acceptor0,proposer2)']
572     : 0--0-----0--1---00---------
572     : ['leader(proposer0)', '~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~didNotPromise(acceptor0)', '~promise(acceptor0,proposer1)', '~promise(acceptor0,proposer2)']
num_forall :   0
num_exists :   0
num_literals : 0
quantified form : None
qcost : 0




---------- QPrime ----------


---------- ConstArgBinding ----------

terms: ['~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor1)', 'leader(proposer2)', '~promise(acceptor1,proposer0)', '~promise(acceptor1,proposer1)', 'member(acceptor1,quorum__acceptor0_acceptor1)', 'member(acceptor1,quorum__acceptor1_acceptor2)']

sign_func_name2args: {'1$chosenAt': [(Const('quorum__acceptor0_acceptor1', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), Const('proposer2', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))), (Const('quorum__acceptor1_acceptor2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), Const('proposer2', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))))], '1$didNotPromise': [(Const('acceptor1', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))),)], '0$leader': [(Const('proposer2', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))),)], '1$promise': [(Const('acceptor1', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Const('proposer0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))), (Const('acceptor1', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Const('proposer1', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))))], '0$member': [(Const('acceptor1', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Const('quorum__acceptor0_acceptor1', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')))), (Const('acceptor1', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Const('quorum__acceptor1_acceptor2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))))]}

const2sigs: {Const('quorum__acceptor0_acceptor1', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))): [quorum$1$chosenAt$0$0, quorum$0$member$1$0], Const('proposer2', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))): [proposer$1$chosenAt$1$0, proposer$1$chosenAt$1$1, proposer$0$leader$0$0], Const('quorum__acceptor1_acceptor2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))): [quorum$1$chosenAt$0$1, quorum$0$member$1$1], Const('acceptor1', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))): [acceptor$1$didNotPromise$0$0, acceptor$1$promise$0$0, acceptor$1$promise$0$1, acceptor$0$member$0$0, acceptor$0$member$0$1], Const('proposer0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))): [proposer$1$promise$1$0], Const('proposer1', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))): [proposer$1$promise$1$1]}

sig2const: {'quorum$1$chosenAt$0$0': Const('quorum__acceptor0_acceptor1', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), 'proposer$1$chosenAt$1$0': Const('proposer2', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))), 'quorum$1$chosenAt$0$1': Const('quorum__acceptor1_acceptor2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), 'proposer$1$chosenAt$1$1': Const('proposer2', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))), 'acceptor$1$didNotPromise$0$0': Const('acceptor1', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), 'proposer$0$leader$0$0': Const('proposer2', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))), 'acceptor$1$promise$0$0': Const('acceptor1', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), 'proposer$1$promise$1$0': Const('proposer0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))), 'acceptor$1$promise$0$1': Const('acceptor1', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), 'proposer$1$promise$1$1': Const('proposer1', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))), 'acceptor$0$member$0$0': Const('acceptor1', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), 'quorum$0$member$1$0': Const('quorum__acceptor0_acceptor1', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), 'acceptor$0$member$0$1': Const('acceptor1', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), 'quorum$0$member$1$1': Const('quorum__acceptor1_acceptor2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')))}


---------- ArgPartition ----------

sort2class_sigs: {EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')): [quorum$0$member$1$0; quorum$1$chosenAt$0$0, quorum$0$member$1$1; quorum$1$chosenAt$0$1], EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')): [proposer$0$leader$0$0; proposer$1$chosenAt$1$0; proposer$1$chosenAt$1$1, proposer$1$promise$1$0, proposer$1$promise$1$1], EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')): [acceptor$0$member$0$0; acceptor$0$member$0$1; acceptor$1$didNotPromise$0$0; acceptor$1$promise$0$0; acceptor$1$promise$0$1]}

sort2part_sig: {EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')): quorum$0$member$1$0; quorum$1$chosenAt$0$0 | quorum$0$member$1$1; quorum$1$chosenAt$0$1, EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')): proposer$0$leader$0$0; proposer$1$chosenAt$1$0; proposer$1$chosenAt$1$1 | proposer$1$promise$1$0 | proposer$1$promise$1$1, EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')): acceptor$0$member$0$0; acceptor$0$member$0$1; acceptor$1$didNotPromise$0$0; acceptor$1$promise$0$0; acceptor$1$promise$0$1}

part_sig: ('acceptor$0$member$0$0; acceptor$0$member$0$1; acceptor$1$didNotPromise$0$0; acceptor$1$promise$0$0; acceptor$1$promise$0$1', 'proposer$0$leader$0$0; proposer$1$chosenAt$1$0; proposer$1$chosenAt$1$1 | proposer$1$promise$1$0 | proposer$1$promise$1$1', 'quorum$0$member$1$0; quorum$1$chosenAt$0$0 | quorum$0$member$1$1; quorum$1$chosenAt$0$1')


---------- SigGenerator ----------

terms:  ['~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor1)', 'leader(proposer2)', '~promise(acceptor1,proposer0)', '~promise(acceptor1,proposer1)', 'member(acceptor1,quorum__acceptor0_acceptor1)', 'member(acceptor1,quorum__acceptor1_acceptor2)']

func_name2symbol:  {'chosenAt': Const('chosenAt', FunctionSort(EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')), EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')), BooleanSort())), 'didNotPromise': Const('didNotPromise', FunctionSort(EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')), BooleanSort())), 'leader': Const('leader', FunctionSort(EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')), BooleanSort())), 'promise': Const('promise', FunctionSort(EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')), EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')), BooleanSort())), 'member': Const('member', FunctionSort(EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')), EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')), BooleanSort()))}

func_name2args_sort:  {'chosenAt': (EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')), EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))), 'didNotPromise': (EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')),), 'leader': (EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')),), 'promise': (EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')), EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))), 'member': (EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')), EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')))}

sign_func_name2count:  {'1$chosenAt': 2, '1$didNotPromise': 1, '0$leader': 1, '1$promise': 2, '0$member': 2}


---------- ProductArgPartition ----------

sort2class_sigs: {EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')): [quorum$0$member$1$0; quorum$1$chosenAt$0$0, quorum$0$member$1$1; quorum$1$chosenAt$0$1], EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')): [proposer$0$leader$0$0; proposer$1$chosenAt$1$0; proposer$1$chosenAt$1$1, proposer$1$promise$1$0, proposer$1$promise$1$1], EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')): [acceptor$0$member$0$0; acceptor$0$member$0$1; acceptor$1$didNotPromise$0$0; acceptor$1$promise$0$0; acceptor$1$promise$0$1]}

sort2part_sig: {EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')): quorum$0$member$1$0; quorum$1$chosenAt$0$0 | quorum$0$member$1$1; quorum$1$chosenAt$0$1, EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')): proposer$0$leader$0$0; proposer$1$chosenAt$1$0; proposer$1$chosenAt$1$1 | proposer$1$promise$1$0 | proposer$1$promise$1$1, EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')): acceptor$0$member$0$0; acceptor$0$member$0$1; acceptor$1$didNotPromise$0$0; acceptor$1$promise$0$0; acceptor$1$promise$0$1}

	sort: quorum

	identical_classes: {'quorum$0$member$1; quorum$1$chosenAt$0': [quorum$0$member$1$0; quorum$1$chosenAt$0$0, quorum$0$member$1$1; quorum$1$chosenAt$0$1]}

	identical_single_classes: {}

	identical_multi_classes: {'quorum$0$member$1; quorum$1$chosenAt$0': [quorum$0$member$1$0, quorum$1$chosenAt$0$0, quorum$0$member$1$1, quorum$1$chosenAt$0$1]}

	sort: proposer

	identical_classes: {'proposer$0$leader$0; proposer$1$chosenAt$1; proposer$1$chosenAt$1': [proposer$0$leader$0$0; proposer$1$chosenAt$1$0; proposer$1$chosenAt$1$1], 'proposer$1$promise$1': [proposer$1$promise$1$0, proposer$1$promise$1$1]}

	identical_single_classes: {'proposer$0$leader$0; proposer$1$chosenAt$1; proposer$1$chosenAt$1': proposer$0$leader$0$0; proposer$1$chosenAt$1$0; proposer$1$chosenAt$1$1}

	identical_multi_classes: {'proposer$1$promise$1': [proposer$1$promise$1$0, proposer$1$promise$1$1]}

	sort: acceptor

	identical_classes: {'acceptor$0$member$0; acceptor$0$member$0; acceptor$1$didNotPromise$0; acceptor$1$promise$0; acceptor$1$promise$0': [acceptor$0$member$0$0; acceptor$0$member$0$1; acceptor$1$didNotPromise$0$0; acceptor$1$promise$0$0; acceptor$1$promise$0$1]}

	identical_single_classes: {'acceptor$0$member$0; acceptor$0$member$0; acceptor$1$didNotPromise$0; acceptor$1$promise$0; acceptor$1$promise$0': acceptor$0$member$0$0; acceptor$0$member$0$1; acceptor$1$didNotPromise$0$0; acceptor$1$promise$0$0; acceptor$1$promise$0$1}

	identical_multi_classes: {}


---------- QInference: _set_sort_to_quantifier_mode ----------

quantifier mode: quorum: QuantifierMode.forall

quantifier mode: proposer: QuantifierMode.forall_exists

quantifier mode: acceptor: QuantifierMode.forall


---------- QInference: _set_constraint_mode ----------

constraint mode: ConstraintMode.no_merge


---------- QFormula: _set_qvars ----------

forall_qvars: {Var('PROPOSER1', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))), Var('ACCEPTOR0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Var('QUORUM1', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), Var('QUORUM0', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')))}

exists_qvars: {Var('PROPOSER0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))}


---------- QFormula: _set_signed_func_name_to_args ----------

signed_func_name2args: {'1$chosenAt': [[Var('QUORUM0', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), Var('PROPOSER1', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))], [Var('QUORUM1', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), Var('PROPOSER1', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))]], '1$didNotPromise': [[Var('ACCEPTOR0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')))]], '0$leader': [[Var('PROPOSER1', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))]], '1$promise': [[Var('ACCEPTOR0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Var('PROPOSER0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))], [Var('ACCEPTOR0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Var('PROPOSER0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))]], '0$member': [[Var('ACCEPTOR0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Var('QUORUM0', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')))], [Var('ACCEPTOR0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Var('QUORUM1', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')))]]}


---------- QFormula: _set_qterms ----------

qterms: ['~didNotPromise(ACCEPTOR0)', '~promise(ACCEPTOR0,PROPOSER0)', 'leader(PROPOSER1)', 'member(ACCEPTOR0,QUORUM1)', '~chosenAt(QUORUM0,PROPOSER1)', 'member(ACCEPTOR0,QUORUM0)', '~chosenAt(QUORUM1,PROPOSER1)']


---------- QFormula: get_qclause ----------

qclause: forall QUORUM1,PROPOSER1,QUORUM0,ACCEPTOR0. didNotPromise(ACCEPTOR0) | ~leader(PROPOSER1) | ~member(ACCEPTOR0,QUORUM1) | chosenAt(QUORUM0,PROPOSER1) | ~member(ACCEPTOR0,QUORUM0) | chosenAt(QUORUM1,PROPOSER1) | (exists PROPOSER0. (promise(ACCEPTOR0,PROPOSER0) & PROPOSER0 ~= PROPOSER1)) | QUORUM0 = QUORUM1


=== Prime Orbit 37 =====================
size : 18
num_suborbits: 1
573 (*) : --0-----0-0---1---0------0-
573     : ['leader(proposer2)', '~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor1)', '~promise(acceptor1,proposer0)', '~start(proposer1)']
574     : -0-----0--0--1----0-------0
574     : ['leader(proposer1)', '~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor1)', '~promise(acceptor1,proposer0)', '~start(proposer2)']
575     : --0-----0-0---1----0----0--
575     : ['leader(proposer2)', '~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor1)', '~promise(acceptor1,proposer1)', '~start(proposer0)']
576     : 0-----0---0-1------0------0
576     : ['leader(proposer0)', '~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor1)', '~promise(acceptor1,proposer1)', '~start(proposer2)']
577     : -0-----0--0--1------0---0--
577     : ['leader(proposer1)', '~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor1)', '~promise(acceptor1,proposer2)', '~start(proposer0)']
578     : 0-----0---0-1-------0----0-
578     : ['leader(proposer0)', '~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor1)', '~promise(acceptor1,proposer2)', '~start(proposer1)']
579     : -----0--0--0--1------0---0-
579     : ['leader(proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor2)', '~promise(acceptor2,proposer0)', '~start(proposer1)']
580     : ----0--0---0-1-------0----0
580     : ['leader(proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor2)', '~promise(acceptor2,proposer0)', '~start(proposer2)']
581     : -----0--0--0--1-------0-0--
581     : ['leader(proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor2)', '~promise(acceptor2,proposer1)', '~start(proposer0)']
582     : ---0--0----01---------0---0
582     : ['leader(proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor2)', '~promise(acceptor2,proposer1)', '~start(proposer2)']
583     : ----0--0---0-1---------00--
583     : ['leader(proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor2)', '~promise(acceptor2,proposer2)', '~start(proposer0)']
584     : ---0--0----01----------0-0-
584     : ['leader(proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor2)', '~promise(acceptor2,proposer2)', '~start(proposer1)']
585     : --0--0---0----10---------0-
585     : ['leader(proposer2)', '~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~didNotPromise(acceptor0)', '~promise(acceptor0,proposer0)', '~start(proposer1)']
586     : -0--0----0---1-0----------0
586     : ['leader(proposer1)', '~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~didNotPromise(acceptor0)', '~promise(acceptor0,proposer0)', '~start(proposer2)']
587     : --0--0---0----1-0-------0--
587     : ['leader(proposer2)', '~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~didNotPromise(acceptor0)', '~promise(acceptor0,proposer1)', '~start(proposer0)']
588     : 0--0-----0--1---0---------0
588     : ['leader(proposer0)', '~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~didNotPromise(acceptor0)', '~promise(acceptor0,proposer1)', '~start(proposer2)']
589     : -0--0----0---1---0------0--
589     : ['leader(proposer1)', '~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~didNotPromise(acceptor0)', '~promise(acceptor0,proposer2)', '~start(proposer0)']
590     : 0--0-----0--1----0-------0-
590     : ['leader(proposer0)', '~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~didNotPromise(acceptor0)', '~promise(acceptor0,proposer2)', '~start(proposer1)']
num_forall :   0
num_exists :   0
num_literals : 0
quantified form : None
qcost : 0




---------- QPrime ----------


---------- ConstArgBinding ----------

terms: ['~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor1)', 'leader(proposer2)', '~promise(acceptor1,proposer0)', '~start(proposer1)', 'member(acceptor1,quorum__acceptor0_acceptor1)', 'member(acceptor1,quorum__acceptor1_acceptor2)']

sign_func_name2args: {'1$chosenAt': [(Const('quorum__acceptor0_acceptor1', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), Const('proposer2', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))), (Const('quorum__acceptor1_acceptor2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), Const('proposer2', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))))], '1$didNotPromise': [(Const('acceptor1', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))),)], '0$leader': [(Const('proposer2', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))),)], '1$promise': [(Const('acceptor1', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Const('proposer0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))))], '1$start': [(Const('proposer1', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))),)], '0$member': [(Const('acceptor1', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Const('quorum__acceptor0_acceptor1', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')))), (Const('acceptor1', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Const('quorum__acceptor1_acceptor2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))))]}

const2sigs: {Const('quorum__acceptor0_acceptor1', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))): [quorum$1$chosenAt$0$0, quorum$0$member$1$0], Const('proposer2', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))): [proposer$1$chosenAt$1$0, proposer$1$chosenAt$1$1, proposer$0$leader$0$0], Const('quorum__acceptor1_acceptor2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))): [quorum$1$chosenAt$0$1, quorum$0$member$1$1], Const('acceptor1', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))): [acceptor$1$didNotPromise$0$0, acceptor$1$promise$0$0, acceptor$0$member$0$0, acceptor$0$member$0$1], Const('proposer0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))): [proposer$1$promise$1$0], Const('proposer1', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))): [proposer$1$start$0$0]}

sig2const: {'quorum$1$chosenAt$0$0': Const('quorum__acceptor0_acceptor1', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), 'proposer$1$chosenAt$1$0': Const('proposer2', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))), 'quorum$1$chosenAt$0$1': Const('quorum__acceptor1_acceptor2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), 'proposer$1$chosenAt$1$1': Const('proposer2', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))), 'acceptor$1$didNotPromise$0$0': Const('acceptor1', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), 'proposer$0$leader$0$0': Const('proposer2', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))), 'acceptor$1$promise$0$0': Const('acceptor1', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), 'proposer$1$promise$1$0': Const('proposer0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))), 'proposer$1$start$0$0': Const('proposer1', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))), 'acceptor$0$member$0$0': Const('acceptor1', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), 'quorum$0$member$1$0': Const('quorum__acceptor0_acceptor1', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), 'acceptor$0$member$0$1': Const('acceptor1', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), 'quorum$0$member$1$1': Const('quorum__acceptor1_acceptor2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')))}


---------- ArgPartition ----------

sort2class_sigs: {EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')): [quorum$0$member$1$0; quorum$1$chosenAt$0$0, quorum$0$member$1$1; quorum$1$chosenAt$0$1], EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')): [proposer$0$leader$0$0; proposer$1$chosenAt$1$0; proposer$1$chosenAt$1$1, proposer$1$promise$1$0, proposer$1$start$0$0], EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')): [acceptor$0$member$0$0; acceptor$0$member$0$1; acceptor$1$didNotPromise$0$0; acceptor$1$promise$0$0]}

sort2part_sig: {EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')): quorum$0$member$1$0; quorum$1$chosenAt$0$0 | quorum$0$member$1$1; quorum$1$chosenAt$0$1, EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')): proposer$0$leader$0$0; proposer$1$chosenAt$1$0; proposer$1$chosenAt$1$1 | proposer$1$promise$1$0 | proposer$1$start$0$0, EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')): acceptor$0$member$0$0; acceptor$0$member$0$1; acceptor$1$didNotPromise$0$0; acceptor$1$promise$0$0}

part_sig: ('acceptor$0$member$0$0; acceptor$0$member$0$1; acceptor$1$didNotPromise$0$0; acceptor$1$promise$0$0', 'proposer$0$leader$0$0; proposer$1$chosenAt$1$0; proposer$1$chosenAt$1$1 | proposer$1$promise$1$0 | proposer$1$start$0$0', 'quorum$0$member$1$0; quorum$1$chosenAt$0$0 | quorum$0$member$1$1; quorum$1$chosenAt$0$1')


---------- SigGenerator ----------

terms:  ['~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor1)', 'leader(proposer2)', '~promise(acceptor1,proposer0)', '~start(proposer1)', 'member(acceptor1,quorum__acceptor0_acceptor1)', 'member(acceptor1,quorum__acceptor1_acceptor2)']

func_name2symbol:  {'chosenAt': Const('chosenAt', FunctionSort(EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')), EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')), BooleanSort())), 'didNotPromise': Const('didNotPromise', FunctionSort(EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')), BooleanSort())), 'leader': Const('leader', FunctionSort(EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')), BooleanSort())), 'promise': Const('promise', FunctionSort(EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')), EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')), BooleanSort())), 'start': Const('start', FunctionSort(EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')), BooleanSort())), 'member': Const('member', FunctionSort(EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')), EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')), BooleanSort()))}

func_name2args_sort:  {'chosenAt': (EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')), EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))), 'didNotPromise': (EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')),), 'leader': (EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')),), 'promise': (EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')), EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))), 'start': (EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')),), 'member': (EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')), EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')))}

sign_func_name2count:  {'1$chosenAt': 2, '1$didNotPromise': 1, '0$leader': 1, '1$promise': 1, '1$start': 1, '0$member': 2}


---------- ProductArgPartition ----------

sort2class_sigs: {EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')): [quorum$0$member$1$0; quorum$1$chosenAt$0$0, quorum$0$member$1$1; quorum$1$chosenAt$0$1], EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')): [proposer$0$leader$0$0; proposer$1$chosenAt$1$0; proposer$1$chosenAt$1$1, proposer$1$promise$1$0, proposer$1$start$0$0], EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')): [acceptor$0$member$0$0; acceptor$0$member$0$1; acceptor$1$didNotPromise$0$0; acceptor$1$promise$0$0]}

sort2part_sig: {EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')): quorum$0$member$1$0; quorum$1$chosenAt$0$0 | quorum$0$member$1$1; quorum$1$chosenAt$0$1, EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')): proposer$0$leader$0$0; proposer$1$chosenAt$1$0; proposer$1$chosenAt$1$1 | proposer$1$promise$1$0 | proposer$1$start$0$0, EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')): acceptor$0$member$0$0; acceptor$0$member$0$1; acceptor$1$didNotPromise$0$0; acceptor$1$promise$0$0}

	sort: quorum

	identical_classes: {'quorum$0$member$1; quorum$1$chosenAt$0': [quorum$0$member$1$0; quorum$1$chosenAt$0$0, quorum$0$member$1$1; quorum$1$chosenAt$0$1]}

	identical_single_classes: {}

	identical_multi_classes: {'quorum$0$member$1; quorum$1$chosenAt$0': [quorum$0$member$1$0, quorum$1$chosenAt$0$0, quorum$0$member$1$1, quorum$1$chosenAt$0$1]}

	sort: proposer

	identical_classes: {'proposer$0$leader$0; proposer$1$chosenAt$1; proposer$1$chosenAt$1': [proposer$0$leader$0$0; proposer$1$chosenAt$1$0; proposer$1$chosenAt$1$1], 'proposer$1$promise$1': [proposer$1$promise$1$0], 'proposer$1$start$0': [proposer$1$start$0$0]}

	identical_single_classes: {'proposer$0$leader$0; proposer$1$chosenAt$1; proposer$1$chosenAt$1': proposer$0$leader$0$0; proposer$1$chosenAt$1$0; proposer$1$chosenAt$1$1, 'proposer$1$promise$1': proposer$1$promise$1$0, 'proposer$1$start$0': proposer$1$start$0$0}

	identical_multi_classes: {}

	sort: acceptor

	identical_classes: {'acceptor$0$member$0; acceptor$0$member$0; acceptor$1$didNotPromise$0; acceptor$1$promise$0': [acceptor$0$member$0$0; acceptor$0$member$0$1; acceptor$1$didNotPromise$0$0; acceptor$1$promise$0$0]}

	identical_single_classes: {'acceptor$0$member$0; acceptor$0$member$0; acceptor$1$didNotPromise$0; acceptor$1$promise$0': acceptor$0$member$0$0; acceptor$0$member$0$1; acceptor$1$didNotPromise$0$0; acceptor$1$promise$0$0}

	identical_multi_classes: {}


---------- QInference: _set_sort_to_quantifier_mode ----------

quantifier mode: quorum: QuantifierMode.forall

quantifier mode: proposer: QuantifierMode.forall

quantifier mode: acceptor: QuantifierMode.forall


---------- QInference: _set_constraint_mode ----------

constraint mode: ConstraintMode.no_merge


---------- QFormula: _set_qvars ----------

forall_qvars: {Var('PROPOSER2', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))), Var('PROPOSER0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))), Var('QUORUM0', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), Var('QUORUM1', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), Var('PROPOSER1', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))), Var('ACCEPTOR0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')))}

exists_qvars: set()


---------- QFormula: _set_signed_func_name_to_args ----------

signed_func_name2args: {'1$chosenAt': [[Var('QUORUM0', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), Var('PROPOSER0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))], [Var('QUORUM1', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), Var('PROPOSER0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))]], '1$didNotPromise': [[Var('ACCEPTOR0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')))]], '0$leader': [[Var('PROPOSER0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))]], '1$promise': [[Var('ACCEPTOR0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Var('PROPOSER1', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))]], '1$start': [[Var('PROPOSER2', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))]], '0$member': [[Var('ACCEPTOR0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Var('QUORUM0', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')))], [Var('ACCEPTOR0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Var('QUORUM1', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')))]]}


---------- QFormula: _set_qterms ----------

qterms: ['~promise(ACCEPTOR0,PROPOSER1)', '~didNotPromise(ACCEPTOR0)', '~start(PROPOSER2)', 'leader(PROPOSER0)', 'member(ACCEPTOR0,QUORUM1)', 'member(ACCEPTOR0,QUORUM0)', '~chosenAt(QUORUM1,PROPOSER0)', '~chosenAt(QUORUM0,PROPOSER0)']


---------- QFormula: get_qclause ----------

qclause: forall PROPOSER1,PROPOSER2,ACCEPTOR0,PROPOSER0,QUORUM0,QUORUM1. promise(ACCEPTOR0,PROPOSER1) | didNotPromise(ACCEPTOR0) | start(PROPOSER2) | ~leader(PROPOSER0) | ~member(ACCEPTOR0,QUORUM1) | ~member(ACCEPTOR0,QUORUM0) | chosenAt(QUORUM1,PROPOSER0) | chosenAt(QUORUM0,PROPOSER0) | (PROPOSER0 = PROPOSER1 | PROPOSER0 = PROPOSER2 | QUORUM0 = QUORUM1 | PROPOSER1 = PROPOSER2)


=== Prime Orbit 39 =====================
size : 18
num_suborbits: 1
609 (*) : 0-------0-0----1-------1-0-
609     : ['promise(acceptor0,proposer0)', 'promise(acceptor2,proposer2)', '~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor1)', '~start(proposer1)']
610     : 0------0--0----1------1---0
610     : ['promise(acceptor0,proposer0)', 'promise(acceptor2,proposer1)', '~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor1)', '~start(proposer2)']
611     : -0------0-0-----1------10--
611     : ['promise(acceptor0,proposer1)', 'promise(acceptor2,proposer2)', '~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor1)', '~start(proposer0)']
612     : -0----0---0-----1----1----0
612     : ['promise(acceptor0,proposer1)', 'promise(acceptor2,proposer0)', '~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor1)', '~start(proposer2)']
613     : --0----0--0------1----1-0--
613     : ['promise(acceptor0,proposer2)', 'promise(acceptor2,proposer1)', '~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor1)', '~start(proposer0)']
614     : --0---0---0------1---1---0-
614     : ['promise(acceptor0,proposer2)', 'promise(acceptor2,proposer0)', '~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor1)', '~start(proposer1)']
615     : ---0----0--0---1----1----0-
615     : ['promise(acceptor0,proposer0)', 'promise(acceptor1,proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor2)', '~start(proposer1)']
616     : ---0---0---0---1---1------0
616     : ['promise(acceptor0,proposer0)', 'promise(acceptor1,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor2)', '~start(proposer2)']
617     : ----0---0--0----1---1---0--
617     : ['promise(acceptor0,proposer1)', 'promise(acceptor1,proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor2)', '~start(proposer0)']
618     : ----0-0----0----1-1-------0
618     : ['promise(acceptor0,proposer1)', 'promise(acceptor1,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor2)', '~start(proposer2)']
619     : -----0-0---0-----1-1----0--
619     : ['promise(acceptor0,proposer2)', 'promise(acceptor1,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor2)', '~start(proposer0)']
620     : -----00----0-----11------0-
620     : ['promise(acceptor0,proposer2)', 'promise(acceptor1,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor2)', '~start(proposer1)']
621     : 0----0---0--------1----1-0-
621     : ['promise(acceptor1,proposer0)', 'promise(acceptor2,proposer2)', '~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~didNotPromise(acceptor0)', '~start(proposer1)']
622     : 0---0----0--------1---1---0
622     : ['promise(acceptor1,proposer0)', 'promise(acceptor2,proposer1)', '~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~didNotPromise(acceptor0)', '~start(proposer2)']
623     : -0---0---0---------1---10--
623     : ['promise(acceptor1,proposer1)', 'promise(acceptor2,proposer2)', '~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~didNotPromise(acceptor0)', '~start(proposer0)']
624     : -0-0-----0---------1-1----0
624     : ['promise(acceptor1,proposer1)', 'promise(acceptor2,proposer0)', '~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~didNotPromise(acceptor0)', '~start(proposer2)']
625     : --0-0----0----------1-1-0--
625     : ['promise(acceptor1,proposer2)', 'promise(acceptor2,proposer1)', '~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~didNotPromise(acceptor0)', '~start(proposer0)']
626     : --00-----0----------11---0-
626     : ['promise(acceptor1,proposer2)', 'promise(acceptor2,proposer0)', '~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~didNotPromise(acceptor0)', '~start(proposer1)']
num_forall :   0
num_exists :   0
num_literals : 0
quantified form : None
qcost : 0




---------- QPrime ----------


---------- ConstArgBinding ----------

terms: ['~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor1)', 'promise(acceptor0,proposer0)', 'promise(acceptor2,proposer2)', '~start(proposer1)', 'member(acceptor0,quorum__acceptor0_acceptor1)', 'member(acceptor1,quorum__acceptor0_acceptor1)', '~member(acceptor2,quorum__acceptor0_acceptor1)', '~member(acceptor0,quorum__acceptor1_acceptor2)', 'member(acceptor1,quorum__acceptor1_acceptor2)', 'member(acceptor2,quorum__acceptor1_acceptor2)']

sign_func_name2args: {'1$chosenAt': [(Const('quorum__acceptor0_acceptor1', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), Const('proposer0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))), (Const('quorum__acceptor1_acceptor2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), Const('proposer2', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))))], '1$didNotPromise': [(Const('acceptor1', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))),)], '0$promise': [(Const('acceptor0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Const('proposer0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))), (Const('acceptor2', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Const('proposer2', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))))], '1$start': [(Const('proposer1', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))),)], '0$member': [(Const('acceptor0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Const('quorum__acceptor0_acceptor1', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')))), (Const('acceptor1', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Const('quorum__acceptor0_acceptor1', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')))), (Const('acceptor1', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Const('quorum__acceptor1_acceptor2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')))), (Const('acceptor2', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Const('quorum__acceptor1_acceptor2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))))], '1$member': [(Const('acceptor2', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Const('quorum__acceptor0_acceptor1', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')))), (Const('acceptor0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Const('quorum__acceptor1_acceptor2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))))]}

const2sigs: {Const('quorum__acceptor0_acceptor1', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))): [quorum$1$chosenAt$0$0, quorum$0$member$1$0, quorum$0$member$1$1, quorum$1$member$1$0], Const('proposer0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))): [proposer$1$chosenAt$1$0, proposer$0$promise$1$0], Const('quorum__acceptor1_acceptor2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))): [quorum$1$chosenAt$0$1, quorum$0$member$1$2, quorum$0$member$1$3, quorum$1$member$1$1], Const('proposer2', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))): [proposer$1$chosenAt$1$1, proposer$0$promise$1$1], Const('acceptor1', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))): [acceptor$1$didNotPromise$0$0, acceptor$0$member$0$1, acceptor$0$member$0$2], Const('acceptor0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))): [acceptor$0$promise$0$0, acceptor$0$member$0$0, acceptor$1$member$0$1], Const('acceptor2', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))): [acceptor$0$promise$0$1, acceptor$0$member$0$3, acceptor$1$member$0$0], Const('proposer1', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))): [proposer$1$start$0$0]}

sig2const: {'quorum$1$chosenAt$0$0': Const('quorum__acceptor0_acceptor1', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), 'proposer$1$chosenAt$1$0': Const('proposer0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))), 'quorum$1$chosenAt$0$1': Const('quorum__acceptor1_acceptor2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), 'proposer$1$chosenAt$1$1': Const('proposer2', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))), 'acceptor$1$didNotPromise$0$0': Const('acceptor1', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), 'acceptor$0$promise$0$0': Const('acceptor0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), 'proposer$0$promise$1$0': Const('proposer0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))), 'acceptor$0$promise$0$1': Const('acceptor2', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), 'proposer$0$promise$1$1': Const('proposer2', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))), 'proposer$1$start$0$0': Const('proposer1', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))), 'acceptor$0$member$0$0': Const('acceptor0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), 'quorum$0$member$1$0': Const('quorum__acceptor0_acceptor1', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), 'acceptor$0$member$0$1': Const('acceptor1', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), 'quorum$0$member$1$1': Const('quorum__acceptor0_acceptor1', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), 'acceptor$0$member$0$2': Const('acceptor1', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), 'quorum$0$member$1$2': Const('quorum__acceptor1_acceptor2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), 'acceptor$0$member$0$3': Const('acceptor2', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), 'quorum$0$member$1$3': Const('quorum__acceptor1_acceptor2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), 'acceptor$1$member$0$0': Const('acceptor2', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), 'quorum$1$member$1$0': Const('quorum__acceptor0_acceptor1', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), 'acceptor$1$member$0$1': Const('acceptor0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), 'quorum$1$member$1$1': Const('quorum__acceptor1_acceptor2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')))}


---------- ArgPartition ----------

sort2class_sigs: {EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')): [quorum$0$member$1$0; quorum$0$member$1$1; quorum$1$chosenAt$0$0; quorum$1$member$1$0, quorum$0$member$1$2; quorum$0$member$1$3; quorum$1$chosenAt$0$1; quorum$1$member$1$1], EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')): [proposer$0$promise$1$0; proposer$1$chosenAt$1$0, proposer$0$promise$1$1; proposer$1$chosenAt$1$1, proposer$1$start$0$0], EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')): [acceptor$0$member$0$0; acceptor$0$promise$0$0; acceptor$1$member$0$1, acceptor$0$member$0$1; acceptor$0$member$0$2; acceptor$1$didNotPromise$0$0, acceptor$0$member$0$3; acceptor$0$promise$0$1; acceptor$1$member$0$0]}

sort2part_sig: {EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')): quorum$0$member$1$0; quorum$0$member$1$1; quorum$1$chosenAt$0$0; quorum$1$member$1$0 | quorum$0$member$1$2; quorum$0$member$1$3; quorum$1$chosenAt$0$1; quorum$1$member$1$1, EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')): proposer$0$promise$1$0; proposer$1$chosenAt$1$0 | proposer$0$promise$1$1; proposer$1$chosenAt$1$1 | proposer$1$start$0$0, EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')): acceptor$0$member$0$0; acceptor$0$promise$0$0; acceptor$1$member$0$1 | acceptor$0$member$0$1; acceptor$0$member$0$2; acceptor$1$didNotPromise$0$0 | acceptor$0$member$0$3; acceptor$0$promise$0$1; acceptor$1$member$0$0}

part_sig: ('acceptor$0$member$0$0; acceptor$0$promise$0$0; acceptor$1$member$0$1 | acceptor$0$member$0$1; acceptor$0$member$0$2; acceptor$1$didNotPromise$0$0 | acceptor$0$member$0$3; acceptor$0$promise$0$1; acceptor$1$member$0$0', 'proposer$0$promise$1$0; proposer$1$chosenAt$1$0 | proposer$0$promise$1$1; proposer$1$chosenAt$1$1 | proposer$1$start$0$0', 'quorum$0$member$1$0; quorum$0$member$1$1; quorum$1$chosenAt$0$0; quorum$1$member$1$0 | quorum$0$member$1$2; quorum$0$member$1$3; quorum$1$chosenAt$0$1; quorum$1$member$1$1')


---------- SigGenerator ----------

terms:  ['~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor1)', 'promise(acceptor0,proposer0)', 'promise(acceptor2,proposer2)', '~start(proposer1)', 'member(acceptor0,quorum__acceptor0_acceptor1)', 'member(acceptor1,quorum__acceptor0_acceptor1)', '~member(acceptor2,quorum__acceptor0_acceptor1)', '~member(acceptor0,quorum__acceptor1_acceptor2)', 'member(acceptor1,quorum__acceptor1_acceptor2)', 'member(acceptor2,quorum__acceptor1_acceptor2)']

func_name2symbol:  {'chosenAt': Const('chosenAt', FunctionSort(EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')), EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')), BooleanSort())), 'didNotPromise': Const('didNotPromise', FunctionSort(EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')), BooleanSort())), 'promise': Const('promise', FunctionSort(EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')), EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')), BooleanSort())), 'start': Const('start', FunctionSort(EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')), BooleanSort())), 'member': Const('member', FunctionSort(EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')), EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')), BooleanSort()))}

func_name2args_sort:  {'chosenAt': (EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')), EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))), 'didNotPromise': (EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')),), 'promise': (EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')), EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))), 'start': (EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')),), 'member': (EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')), EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')))}

sign_func_name2count:  {'1$chosenAt': 2, '1$didNotPromise': 1, '0$promise': 2, '1$start': 1, '0$member': 4, '1$member': 2}


---------- ProductArgPartition ----------

sort2class_sigs: {EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')): [quorum$0$member$1$0; quorum$0$member$1$1; quorum$1$chosenAt$0$0; quorum$1$member$1$0, quorum$0$member$1$2; quorum$0$member$1$3; quorum$1$chosenAt$0$1; quorum$1$member$1$1], EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')): [proposer$0$promise$1$0; proposer$1$chosenAt$1$0, proposer$0$promise$1$1; proposer$1$chosenAt$1$1, proposer$1$start$0$0], EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')): [acceptor$0$member$0$0; acceptor$0$promise$0$0; acceptor$1$member$0$1, acceptor$0$member$0$1; acceptor$0$member$0$2; acceptor$1$didNotPromise$0$0, acceptor$0$member$0$3; acceptor$0$promise$0$1; acceptor$1$member$0$0]}

sort2part_sig: {EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')): quorum$0$member$1$0; quorum$0$member$1$1; quorum$1$chosenAt$0$0; quorum$1$member$1$0 | quorum$0$member$1$2; quorum$0$member$1$3; quorum$1$chosenAt$0$1; quorum$1$member$1$1, EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')): proposer$0$promise$1$0; proposer$1$chosenAt$1$0 | proposer$0$promise$1$1; proposer$1$chosenAt$1$1 | proposer$1$start$0$0, EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')): acceptor$0$member$0$0; acceptor$0$promise$0$0; acceptor$1$member$0$1 | acceptor$0$member$0$1; acceptor$0$member$0$2; acceptor$1$didNotPromise$0$0 | acceptor$0$member$0$3; acceptor$0$promise$0$1; acceptor$1$member$0$0}

	sort: quorum

	identical_classes: {'quorum$0$member$1; quorum$0$member$1; quorum$1$chosenAt$0; quorum$1$member$1': [quorum$0$member$1$0; quorum$0$member$1$1; quorum$1$chosenAt$0$0; quorum$1$member$1$0, quorum$0$member$1$2; quorum$0$member$1$3; quorum$1$chosenAt$0$1; quorum$1$member$1$1]}

	identical_single_classes: {}

	identical_multi_classes: {'quorum$0$member$1; quorum$0$member$1; quorum$1$chosenAt$0; quorum$1$member$1': [quorum$0$member$1$0, quorum$0$member$1$1, quorum$1$chosenAt$0$0, quorum$1$member$1$0, quorum$0$member$1$2, quorum$0$member$1$3, quorum$1$chosenAt$0$1, quorum$1$member$1$1]}

	sort: proposer

	identical_classes: {'proposer$0$promise$1; proposer$1$chosenAt$1': [proposer$0$promise$1$0; proposer$1$chosenAt$1$0, proposer$0$promise$1$1; proposer$1$chosenAt$1$1], 'proposer$1$start$0': [proposer$1$start$0$0]}

	identical_single_classes: {'proposer$1$start$0': proposer$1$start$0$0}

	identical_multi_classes: {'proposer$0$promise$1; proposer$1$chosenAt$1': [proposer$0$promise$1$0, proposer$1$chosenAt$1$0, proposer$0$promise$1$1, proposer$1$chosenAt$1$1]}

	sort: acceptor

	identical_classes: {'acceptor$0$member$0; acceptor$0$promise$0; acceptor$1$member$0': [acceptor$0$member$0$0; acceptor$0$promise$0$0; acceptor$1$member$0$1, acceptor$0$member$0$3; acceptor$0$promise$0$1; acceptor$1$member$0$0], 'acceptor$0$member$0; acceptor$0$member$0; acceptor$1$didNotPromise$0': [acceptor$0$member$0$1; acceptor$0$member$0$2; acceptor$1$didNotPromise$0$0]}

	identical_single_classes: {'acceptor$0$member$0; acceptor$0$member$0; acceptor$1$didNotPromise$0': acceptor$0$member$0$1; acceptor$0$member$0$2; acceptor$1$didNotPromise$0$0}

	identical_multi_classes: {'acceptor$0$member$0; acceptor$0$promise$0; acceptor$1$member$0': [acceptor$0$member$0$0, acceptor$0$promise$0$0, acceptor$1$member$0$1, acceptor$0$member$0$3, acceptor$0$promise$0$1, acceptor$1$member$0$0]}


---------- QInference: _set_sort_to_quantifier_mode ----------

quantifier mode: quorum: QuantifierMode.forall

quantifier mode: proposer: QuantifierMode.forall

quantifier mode: acceptor: QuantifierMode.forall


---------- QInference: _set_constraint_mode ----------

constraint mode: ConstraintMode.no_merge


---------- QFormula: _set_qvars ----------

forall_qvars: {Var('ACCEPTOR1', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Var('PROPOSER2', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))), Var('PROPOSER0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))), Var('QUORUM0', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), Var('QUORUM1', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), Var('ACCEPTOR2', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Var('PROPOSER1', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))), Var('ACCEPTOR0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')))}

exists_qvars: set()


---------- QFormula: _set_signed_func_name_to_args ----------

signed_func_name2args: {'1$chosenAt': [[Var('QUORUM0', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), Var('PROPOSER0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))], [Var('QUORUM1', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), Var('PROPOSER1', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))]], '1$didNotPromise': [[Var('ACCEPTOR1', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')))]], '0$promise': [[Var('ACCEPTOR0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Var('PROPOSER0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))], [Var('ACCEPTOR2', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Var('PROPOSER1', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))]], '1$start': [[Var('PROPOSER2', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))]], '0$member': [[Var('ACCEPTOR0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Var('QUORUM0', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')))], [Var('ACCEPTOR1', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Var('QUORUM0', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')))], [Var('ACCEPTOR1', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Var('QUORUM1', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')))], [Var('ACCEPTOR2', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Var('QUORUM1', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')))]], '1$member': [[Var('ACCEPTOR2', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Var('QUORUM0', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')))], [Var('ACCEPTOR0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Var('QUORUM1', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')))]]}


---------- QFormula: _set_qterms ----------

qterms: ['member(ACCEPTOR1,QUORUM1)', 'member(ACCEPTOR2,QUORUM1)', '~start(PROPOSER2)', 'promise(ACCEPTOR2,PROPOSER1)', 'promise(ACCEPTOR0,PROPOSER0)', 'member(ACCEPTOR1,QUORUM0)', '~member(ACCEPTOR0,QUORUM1)', 'member(ACCEPTOR0,QUORUM0)', '~chosenAt(QUORUM0,PROPOSER0)', '~chosenAt(QUORUM1,PROPOSER1)', '~didNotPromise(ACCEPTOR1)', '~member(ACCEPTOR2,QUORUM0)']


---------- QFormula: get_qclause ----------

qclause: forall PROPOSER1,PROPOSER2,ACCEPTOR2,ACCEPTOR0,PROPOSER0,QUORUM0,ACCEPTOR1,QUORUM1. ~member(ACCEPTOR1,QUORUM1) | ~member(ACCEPTOR2,QUORUM1) | start(PROPOSER2) | ~promise(ACCEPTOR2,PROPOSER1) | ~promise(ACCEPTOR0,PROPOSER0) | ~member(ACCEPTOR1,QUORUM0) | member(ACCEPTOR0,QUORUM1) | ~member(ACCEPTOR0,QUORUM0) | chosenAt(QUORUM0,PROPOSER0) | chosenAt(QUORUM1,PROPOSER1) | didNotPromise(ACCEPTOR1) | member(ACCEPTOR2,QUORUM0) | (PROPOSER0 = PROPOSER2 | ACCEPTOR0 = ACCEPTOR1 | PROPOSER1 = PROPOSER2 | ACCEPTOR1 = ACCEPTOR2 | PROPOSER0 = PROPOSER1 | QUORUM0 = QUORUM1 | ACCEPTOR0 = ACCEPTOR2)


=== Prime Orbit 40 =====================
size : 18
num_suborbits: 1
627 (*) : ------0---00--------0--0-0-
627     : ['~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor1,proposer2)', '~promise(acceptor2,proposer2)', '~start(proposer1)']
628     : ------0---00-------0--0---0
628     : ['~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor1,proposer1)', '~promise(acceptor2,proposer1)', '~start(proposer2)']
629     : -------0--00--------0--00--
629     : ['~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor1,proposer2)', '~promise(acceptor2,proposer2)', '~start(proposer0)']
630     : -------0--00------0--0----0
630     : ['~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor1,proposer0)', '~promise(acceptor2,proposer0)', '~start(proposer2)']
631     : --------0-00-------0--0-0--
631     : ['~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor1,proposer1)', '~promise(acceptor2,proposer1)', '~start(proposer0)']
632     : --------0-00------0--0---0-
632     : ['~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor1,proposer0)', '~promise(acceptor2,proposer0)', '~start(proposer1)']
633     : ---0-----0-0-----0-----0-0-
633     : ['~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor2)', '~promise(acceptor0,proposer2)', '~promise(acceptor2,proposer2)', '~start(proposer1)']
634     : ---0-----0-0----0-----0---0
634     : ['~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor2)', '~promise(acceptor0,proposer1)', '~promise(acceptor2,proposer1)', '~start(proposer2)']
635     : ----0----0-0-----0-----00--
635     : ['~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor2)', '~promise(acceptor0,proposer2)', '~promise(acceptor2,proposer2)', '~start(proposer0)']
636     : ----0----0-0---0-----0----0
636     : ['~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor2)', '~promise(acceptor0,proposer0)', '~promise(acceptor2,proposer0)', '~start(proposer2)']
637     : -----0---0-0----0-----0-0--
637     : ['~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor2)', '~promise(acceptor0,proposer1)', '~promise(acceptor2,proposer1)', '~start(proposer0)']
638     : -----0---0-0---0-----0---0-
638     : ['~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor2)', '~promise(acceptor0,proposer0)', '~promise(acceptor2,proposer0)', '~start(proposer1)']
639     : 0--------00------0--0----0-
639     : ['~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~promise(acceptor0,proposer2)', '~promise(acceptor1,proposer2)', '~start(proposer1)']
640     : 0--------00-----0--0------0
640     : ['~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~promise(acceptor0,proposer1)', '~promise(acceptor1,proposer1)', '~start(proposer2)']
641     : -0-------00------0--0---0--
641     : ['~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~promise(acceptor0,proposer2)', '~promise(acceptor1,proposer2)', '~start(proposer0)']
642     : -0-------00----0--0-------0
642     : ['~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~promise(acceptor0,proposer0)', '~promise(acceptor1,proposer0)', '~start(proposer2)']
643     : --0------00-----0--0----0--
643     : ['~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~promise(acceptor0,proposer1)', '~promise(acceptor1,proposer1)', '~start(proposer0)']
644     : --0------00----0--0------0-
644     : ['~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~promise(acceptor0,proposer0)', '~promise(acceptor1,proposer0)', '~start(proposer1)']
num_forall :   0
num_exists :   0
num_literals : 0
quantified form : None
qcost : 0




---------- QPrime ----------


---------- ConstArgBinding ----------

terms: ['~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor1,proposer2)', '~promise(acceptor2,proposer2)', '~start(proposer1)', 'member(acceptor1,quorum__acceptor1_acceptor2)', 'member(acceptor2,quorum__acceptor1_acceptor2)']

sign_func_name2args: {'1$chosenAt': [(Const('quorum__acceptor1_acceptor2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), Const('proposer0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))))], '1$didNotPromise': [(Const('acceptor1', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))),), (Const('acceptor2', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))),)], '1$promise': [(Const('acceptor1', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Const('proposer2', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))), (Const('acceptor2', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Const('proposer2', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))))], '1$start': [(Const('proposer1', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))),)], '0$member': [(Const('acceptor1', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Const('quorum__acceptor1_acceptor2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')))), (Const('acceptor2', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Const('quorum__acceptor1_acceptor2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))))]}

const2sigs: {Const('quorum__acceptor1_acceptor2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))): [quorum$1$chosenAt$0$0, quorum$0$member$1$0, quorum$0$member$1$1], Const('proposer0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))): [proposer$1$chosenAt$1$0], Const('acceptor1', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))): [acceptor$1$didNotPromise$0$0, acceptor$1$promise$0$0, acceptor$0$member$0$0], Const('acceptor2', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))): [acceptor$1$didNotPromise$0$1, acceptor$1$promise$0$1, acceptor$0$member$0$1], Const('proposer2', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))): [proposer$1$promise$1$0, proposer$1$promise$1$1], Const('proposer1', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))): [proposer$1$start$0$0]}

sig2const: {'quorum$1$chosenAt$0$0': Const('quorum__acceptor1_acceptor2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), 'proposer$1$chosenAt$1$0': Const('proposer0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))), 'acceptor$1$didNotPromise$0$0': Const('acceptor1', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), 'acceptor$1$didNotPromise$0$1': Const('acceptor2', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), 'acceptor$1$promise$0$0': Const('acceptor1', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), 'proposer$1$promise$1$0': Const('proposer2', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))), 'acceptor$1$promise$0$1': Const('acceptor2', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), 'proposer$1$promise$1$1': Const('proposer2', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))), 'proposer$1$start$0$0': Const('proposer1', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))), 'acceptor$0$member$0$0': Const('acceptor1', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), 'quorum$0$member$1$0': Const('quorum__acceptor1_acceptor2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), 'acceptor$0$member$0$1': Const('acceptor2', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), 'quorum$0$member$1$1': Const('quorum__acceptor1_acceptor2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')))}


---------- ArgPartition ----------

sort2class_sigs: {EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')): [quorum$0$member$1$0; quorum$0$member$1$1; quorum$1$chosenAt$0$0], EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')): [proposer$1$chosenAt$1$0, proposer$1$promise$1$0; proposer$1$promise$1$1, proposer$1$start$0$0], EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')): [acceptor$0$member$0$0; acceptor$1$didNotPromise$0$0; acceptor$1$promise$0$0, acceptor$0$member$0$1; acceptor$1$didNotPromise$0$1; acceptor$1$promise$0$1]}

sort2part_sig: {EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')): quorum$0$member$1$0; quorum$0$member$1$1; quorum$1$chosenAt$0$0, EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')): proposer$1$chosenAt$1$0 | proposer$1$promise$1$0; proposer$1$promise$1$1 | proposer$1$start$0$0, EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')): acceptor$0$member$0$0; acceptor$1$didNotPromise$0$0; acceptor$1$promise$0$0 | acceptor$0$member$0$1; acceptor$1$didNotPromise$0$1; acceptor$1$promise$0$1}

part_sig: ('acceptor$0$member$0$0; acceptor$1$didNotPromise$0$0; acceptor$1$promise$0$0 | acceptor$0$member$0$1; acceptor$1$didNotPromise$0$1; acceptor$1$promise$0$1', 'proposer$1$chosenAt$1$0 | proposer$1$promise$1$0; proposer$1$promise$1$1 | proposer$1$start$0$0', 'quorum$0$member$1$0; quorum$0$member$1$1; quorum$1$chosenAt$0$0')


---------- SigGenerator ----------

terms:  ['~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor1,proposer2)', '~promise(acceptor2,proposer2)', '~start(proposer1)', 'member(acceptor1,quorum__acceptor1_acceptor2)', 'member(acceptor2,quorum__acceptor1_acceptor2)']

func_name2symbol:  {'chosenAt': Const('chosenAt', FunctionSort(EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')), EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')), BooleanSort())), 'didNotPromise': Const('didNotPromise', FunctionSort(EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')), BooleanSort())), 'promise': Const('promise', FunctionSort(EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')), EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')), BooleanSort())), 'start': Const('start', FunctionSort(EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')), BooleanSort())), 'member': Const('member', FunctionSort(EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')), EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')), BooleanSort()))}

func_name2args_sort:  {'chosenAt': (EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')), EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))), 'didNotPromise': (EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')),), 'promise': (EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')), EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))), 'start': (EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')),), 'member': (EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')), EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')))}

sign_func_name2count:  {'1$chosenAt': 1, '1$didNotPromise': 2, '1$promise': 2, '1$start': 1, '0$member': 2}


---------- ProductArgPartition ----------

sort2class_sigs: {EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')): [quorum$0$member$1$0; quorum$0$member$1$1; quorum$1$chosenAt$0$0], EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')): [proposer$1$chosenAt$1$0, proposer$1$promise$1$0; proposer$1$promise$1$1, proposer$1$start$0$0], EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')): [acceptor$0$member$0$0; acceptor$1$didNotPromise$0$0; acceptor$1$promise$0$0, acceptor$0$member$0$1; acceptor$1$didNotPromise$0$1; acceptor$1$promise$0$1]}

sort2part_sig: {EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')): quorum$0$member$1$0; quorum$0$member$1$1; quorum$1$chosenAt$0$0, EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')): proposer$1$chosenAt$1$0 | proposer$1$promise$1$0; proposer$1$promise$1$1 | proposer$1$start$0$0, EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')): acceptor$0$member$0$0; acceptor$1$didNotPromise$0$0; acceptor$1$promise$0$0 | acceptor$0$member$0$1; acceptor$1$didNotPromise$0$1; acceptor$1$promise$0$1}

	sort: quorum

	identical_classes: {'quorum$0$member$1; quorum$0$member$1; quorum$1$chosenAt$0': [quorum$0$member$1$0; quorum$0$member$1$1; quorum$1$chosenAt$0$0]}

	identical_single_classes: {'quorum$0$member$1; quorum$0$member$1; quorum$1$chosenAt$0': quorum$0$member$1$0; quorum$0$member$1$1; quorum$1$chosenAt$0$0}

	identical_multi_classes: {}

	sort: proposer

	identical_classes: {'proposer$1$chosenAt$1': [proposer$1$chosenAt$1$0], 'proposer$1$promise$1; proposer$1$promise$1': [proposer$1$promise$1$0; proposer$1$promise$1$1], 'proposer$1$start$0': [proposer$1$start$0$0]}

	identical_single_classes: {'proposer$1$chosenAt$1': proposer$1$chosenAt$1$0, 'proposer$1$promise$1; proposer$1$promise$1': proposer$1$promise$1$0; proposer$1$promise$1$1, 'proposer$1$start$0': proposer$1$start$0$0}

	identical_multi_classes: {}

	sort: acceptor

	identical_classes: {'acceptor$0$member$0; acceptor$1$didNotPromise$0; acceptor$1$promise$0': [acceptor$0$member$0$0; acceptor$1$didNotPromise$0$0; acceptor$1$promise$0$0, acceptor$0$member$0$1; acceptor$1$didNotPromise$0$1; acceptor$1$promise$0$1]}

	identical_single_classes: {}

	identical_multi_classes: {'acceptor$0$member$0; acceptor$1$didNotPromise$0; acceptor$1$promise$0': [acceptor$0$member$0$0, acceptor$1$didNotPromise$0$0, acceptor$1$promise$0$0, acceptor$0$member$0$1, acceptor$1$didNotPromise$0$1, acceptor$1$promise$0$1]}


---------- QInference: _set_sort_to_quantifier_mode ----------

quantifier mode: quorum: QuantifierMode.forall

quantifier mode: proposer: QuantifierMode.forall

quantifier mode: acceptor: QuantifierMode.forall


---------- QInference: _set_constraint_mode ----------

constraint mode: ConstraintMode.no_merge


---------- QFormula: _set_qvars ----------

forall_qvars: {Var('ACCEPTOR1', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Var('PROPOSER2', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))), Var('PROPOSER0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))), Var('QUORUM0', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), Var('PROPOSER1', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))), Var('ACCEPTOR0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')))}

exists_qvars: set()


---------- QFormula: _set_signed_func_name_to_args ----------

signed_func_name2args: {'1$chosenAt': [[Var('QUORUM0', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), Var('PROPOSER0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))]], '1$didNotPromise': [[Var('ACCEPTOR0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')))], [Var('ACCEPTOR1', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')))]], '1$promise': [[Var('ACCEPTOR0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Var('PROPOSER1', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))], [Var('ACCEPTOR1', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Var('PROPOSER1', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))]], '1$start': [[Var('PROPOSER2', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))]], '0$member': [[Var('ACCEPTOR0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Var('QUORUM0', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')))], [Var('ACCEPTOR1', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Var('QUORUM0', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')))]]}


---------- QFormula: _set_qterms ----------

qterms: ['~promise(ACCEPTOR0,PROPOSER1)', '~didNotPromise(ACCEPTOR0)', '~start(PROPOSER2)', '~promise(ACCEPTOR1,PROPOSER1)', 'member(ACCEPTOR1,QUORUM0)', 'member(ACCEPTOR0,QUORUM0)', '~chosenAt(QUORUM0,PROPOSER0)', '~didNotPromise(ACCEPTOR1)']


---------- QFormula: get_qclause ----------

qclause: forall PROPOSER1,PROPOSER2,ACCEPTOR0,PROPOSER0,QUORUM0,ACCEPTOR1. promise(ACCEPTOR0,PROPOSER1) | didNotPromise(ACCEPTOR0) | start(PROPOSER2) | promise(ACCEPTOR1,PROPOSER1) | ~member(ACCEPTOR1,QUORUM0) | ~member(ACCEPTOR0,QUORUM0) | chosenAt(QUORUM0,PROPOSER0) | didNotPromise(ACCEPTOR1) | (PROPOSER0 = PROPOSER1 | PROPOSER0 = PROPOSER2 | PROPOSER1 = PROPOSER2 | ACCEPTOR0 = ACCEPTOR1)


=== Prime Orbit 41 =====================
size : 9
num_suborbits: 1
645 (*) : -----0--0--0--1---------00-
645     : ['leader(proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor2)', '~start(proposer0)', '~start(proposer1)']
646     : ----0--0---0-1----------0-0
646     : ['leader(proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor2)', '~start(proposer0)', '~start(proposer2)']
647     : ---0--0----01------------00
647     : ['leader(proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor2)', '~start(proposer1)', '~start(proposer2)']
648     : --0-----0-0---1---------00-
648     : ['leader(proposer2)', '~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor1)', '~start(proposer0)', '~start(proposer1)']
649     : -0-----0--0--1----------0-0
649     : ['leader(proposer1)', '~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor1)', '~start(proposer0)', '~start(proposer2)']
650     : 0-----0---0-1------------00
650     : ['leader(proposer0)', '~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor1)', '~start(proposer1)', '~start(proposer2)']
651     : --0--0---0----1---------00-
651     : ['leader(proposer2)', '~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~didNotPromise(acceptor0)', '~start(proposer0)', '~start(proposer1)']
652     : -0--0----0---1----------0-0
652     : ['leader(proposer1)', '~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~didNotPromise(acceptor0)', '~start(proposer0)', '~start(proposer2)']
653     : 0--0-----0--1------------00
653     : ['leader(proposer0)', '~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~didNotPromise(acceptor0)', '~start(proposer1)', '~start(proposer2)']
num_forall :   0
num_exists :   0
num_literals : 0
quantified form : None
qcost : 0




---------- QPrime ----------


---------- ConstArgBinding ----------

terms: ['~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor2)', 'leader(proposer2)', '~start(proposer0)', '~start(proposer1)', 'member(acceptor2,quorum__acceptor0_acceptor2)', 'member(acceptor2,quorum__acceptor1_acceptor2)']

sign_func_name2args: {'1$chosenAt': [(Const('quorum__acceptor0_acceptor2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), Const('proposer2', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))), (Const('quorum__acceptor1_acceptor2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), Const('proposer2', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))))], '1$didNotPromise': [(Const('acceptor2', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))),)], '0$leader': [(Const('proposer2', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))),)], '1$start': [(Const('proposer0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))),), (Const('proposer1', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))),)], '0$member': [(Const('acceptor2', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Const('quorum__acceptor0_acceptor2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')))), (Const('acceptor2', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Const('quorum__acceptor1_acceptor2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))))]}

const2sigs: {Const('quorum__acceptor0_acceptor2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))): [quorum$1$chosenAt$0$0, quorum$0$member$1$0], Const('proposer2', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))): [proposer$1$chosenAt$1$0, proposer$1$chosenAt$1$1, proposer$0$leader$0$0], Const('quorum__acceptor1_acceptor2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))): [quorum$1$chosenAt$0$1, quorum$0$member$1$1], Const('acceptor2', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))): [acceptor$1$didNotPromise$0$0, acceptor$0$member$0$0, acceptor$0$member$0$1], Const('proposer0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))): [proposer$1$start$0$0], Const('proposer1', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))): [proposer$1$start$0$1]}

sig2const: {'quorum$1$chosenAt$0$0': Const('quorum__acceptor0_acceptor2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), 'proposer$1$chosenAt$1$0': Const('proposer2', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))), 'quorum$1$chosenAt$0$1': Const('quorum__acceptor1_acceptor2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), 'proposer$1$chosenAt$1$1': Const('proposer2', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))), 'acceptor$1$didNotPromise$0$0': Const('acceptor2', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), 'proposer$0$leader$0$0': Const('proposer2', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))), 'proposer$1$start$0$0': Const('proposer0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))), 'proposer$1$start$0$1': Const('proposer1', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))), 'acceptor$0$member$0$0': Const('acceptor2', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), 'quorum$0$member$1$0': Const('quorum__acceptor0_acceptor2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), 'acceptor$0$member$0$1': Const('acceptor2', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), 'quorum$0$member$1$1': Const('quorum__acceptor1_acceptor2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')))}


---------- ArgPartition ----------

sort2class_sigs: {EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')): [quorum$0$member$1$0; quorum$1$chosenAt$0$0, quorum$0$member$1$1; quorum$1$chosenAt$0$1], EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')): [proposer$0$leader$0$0; proposer$1$chosenAt$1$0; proposer$1$chosenAt$1$1, proposer$1$start$0$0, proposer$1$start$0$1], EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')): [acceptor$0$member$0$0; acceptor$0$member$0$1; acceptor$1$didNotPromise$0$0]}

sort2part_sig: {EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')): quorum$0$member$1$0; quorum$1$chosenAt$0$0 | quorum$0$member$1$1; quorum$1$chosenAt$0$1, EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')): proposer$0$leader$0$0; proposer$1$chosenAt$1$0; proposer$1$chosenAt$1$1 | proposer$1$start$0$0 | proposer$1$start$0$1, EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')): acceptor$0$member$0$0; acceptor$0$member$0$1; acceptor$1$didNotPromise$0$0}

part_sig: ('acceptor$0$member$0$0; acceptor$0$member$0$1; acceptor$1$didNotPromise$0$0', 'proposer$0$leader$0$0; proposer$1$chosenAt$1$0; proposer$1$chosenAt$1$1 | proposer$1$start$0$0 | proposer$1$start$0$1', 'quorum$0$member$1$0; quorum$1$chosenAt$0$0 | quorum$0$member$1$1; quorum$1$chosenAt$0$1')


---------- SigGenerator ----------

terms:  ['~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor2)', 'leader(proposer2)', '~start(proposer0)', '~start(proposer1)', 'member(acceptor2,quorum__acceptor0_acceptor2)', 'member(acceptor2,quorum__acceptor1_acceptor2)']

func_name2symbol:  {'chosenAt': Const('chosenAt', FunctionSort(EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')), EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')), BooleanSort())), 'didNotPromise': Const('didNotPromise', FunctionSort(EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')), BooleanSort())), 'leader': Const('leader', FunctionSort(EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')), BooleanSort())), 'start': Const('start', FunctionSort(EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')), BooleanSort())), 'member': Const('member', FunctionSort(EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')), EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')), BooleanSort()))}

func_name2args_sort:  {'chosenAt': (EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')), EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))), 'didNotPromise': (EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')),), 'leader': (EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')),), 'start': (EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')),), 'member': (EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')), EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')))}

sign_func_name2count:  {'1$chosenAt': 2, '1$didNotPromise': 1, '0$leader': 1, '1$start': 2, '0$member': 2}


---------- ProductArgPartition ----------

sort2class_sigs: {EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')): [quorum$0$member$1$0; quorum$1$chosenAt$0$0, quorum$0$member$1$1; quorum$1$chosenAt$0$1], EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')): [proposer$0$leader$0$0; proposer$1$chosenAt$1$0; proposer$1$chosenAt$1$1, proposer$1$start$0$0, proposer$1$start$0$1], EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')): [acceptor$0$member$0$0; acceptor$0$member$0$1; acceptor$1$didNotPromise$0$0]}

sort2part_sig: {EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')): quorum$0$member$1$0; quorum$1$chosenAt$0$0 | quorum$0$member$1$1; quorum$1$chosenAt$0$1, EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')): proposer$0$leader$0$0; proposer$1$chosenAt$1$0; proposer$1$chosenAt$1$1 | proposer$1$start$0$0 | proposer$1$start$0$1, EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')): acceptor$0$member$0$0; acceptor$0$member$0$1; acceptor$1$didNotPromise$0$0}

	sort: quorum

	identical_classes: {'quorum$0$member$1; quorum$1$chosenAt$0': [quorum$0$member$1$0; quorum$1$chosenAt$0$0, quorum$0$member$1$1; quorum$1$chosenAt$0$1]}

	identical_single_classes: {}

	identical_multi_classes: {'quorum$0$member$1; quorum$1$chosenAt$0': [quorum$0$member$1$0, quorum$1$chosenAt$0$0, quorum$0$member$1$1, quorum$1$chosenAt$0$1]}

	sort: proposer

	identical_classes: {'proposer$0$leader$0; proposer$1$chosenAt$1; proposer$1$chosenAt$1': [proposer$0$leader$0$0; proposer$1$chosenAt$1$0; proposer$1$chosenAt$1$1], 'proposer$1$start$0': [proposer$1$start$0$0, proposer$1$start$0$1]}

	identical_single_classes: {'proposer$0$leader$0; proposer$1$chosenAt$1; proposer$1$chosenAt$1': proposer$0$leader$0$0; proposer$1$chosenAt$1$0; proposer$1$chosenAt$1$1}

	identical_multi_classes: {'proposer$1$start$0': [proposer$1$start$0$0, proposer$1$start$0$1]}

	sort: acceptor

	identical_classes: {'acceptor$0$member$0; acceptor$0$member$0; acceptor$1$didNotPromise$0': [acceptor$0$member$0$0; acceptor$0$member$0$1; acceptor$1$didNotPromise$0$0]}

	identical_single_classes: {'acceptor$0$member$0; acceptor$0$member$0; acceptor$1$didNotPromise$0': acceptor$0$member$0$0; acceptor$0$member$0$1; acceptor$1$didNotPromise$0$0}

	identical_multi_classes: {}


---------- QInference: _set_sort_to_quantifier_mode ----------

quantifier mode: quorum: QuantifierMode.forall

quantifier mode: proposer: QuantifierMode.forall_exists

quantifier mode: acceptor: QuantifierMode.forall


---------- QInference: _set_constraint_mode ----------

constraint mode: ConstraintMode.no_merge


---------- QFormula: _set_qvars ----------

forall_qvars: {Var('PROPOSER1', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))), Var('ACCEPTOR0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Var('QUORUM1', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), Var('QUORUM0', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')))}

exists_qvars: {Var('PROPOSER0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))}


---------- QFormula: _set_signed_func_name_to_args ----------

signed_func_name2args: {'1$chosenAt': [[Var('QUORUM0', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), Var('PROPOSER1', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))], [Var('QUORUM1', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), Var('PROPOSER1', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))]], '1$didNotPromise': [[Var('ACCEPTOR0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')))]], '0$leader': [[Var('PROPOSER1', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))]], '1$start': [[Var('PROPOSER0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))], [Var('PROPOSER0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))]], '0$member': [[Var('ACCEPTOR0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Var('QUORUM0', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')))], [Var('ACCEPTOR0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Var('QUORUM1', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')))]]}


---------- QFormula: _set_qterms ----------

qterms: ['~didNotPromise(ACCEPTOR0)', 'leader(PROPOSER1)', 'member(ACCEPTOR0,QUORUM1)', '~start(PROPOSER0)', '~chosenAt(QUORUM0,PROPOSER1)', 'member(ACCEPTOR0,QUORUM0)', '~chosenAt(QUORUM1,PROPOSER1)']


---------- QFormula: get_qclause ----------

qclause: forall QUORUM1,PROPOSER1,QUORUM0,ACCEPTOR0. didNotPromise(ACCEPTOR0) | ~leader(PROPOSER1) | ~member(ACCEPTOR0,QUORUM1) | chosenAt(QUORUM0,PROPOSER1) | ~member(ACCEPTOR0,QUORUM0) | chosenAt(QUORUM1,PROPOSER1) | (exists PROPOSER0. (start(PROPOSER0) & PROPOSER0 ~= PROPOSER1)) | QUORUM0 = QUORUM1


=== Prime Orbit 42 =====================
size : 18
num_suborbits: 1
654 (*) : -0-0--0--00----------1----0
654     : ['promise(acceptor2,proposer0)', '~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~start(proposer2)']
655     : --00--0--00----------1---0-
655     : ['promise(acceptor2,proposer0)', '~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~start(proposer1)']
656     : 0---0--0-00-----------1---0
656     : ['promise(acceptor2,proposer1)', '~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~start(proposer2)']
657     : --0-0--0-00-----------1-0--
657     : ['promise(acceptor2,proposer1)', '~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~start(proposer0)']
658     : 0----0--000------------1-0-
658     : ['promise(acceptor2,proposer2)', '~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~start(proposer1)']
659     : -0---0--000------------10--
659     : ['promise(acceptor2,proposer2)', '~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~start(proposer0)']
660     : 0---0-0--0-0------1-------0
660     : ['promise(acceptor1,proposer0)', '~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor2)', '~start(proposer2)']
661     : 0----00--0-0------1------0-
661     : ['promise(acceptor1,proposer0)', '~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor2)', '~start(proposer1)']
662     : -0-0---0-0-0-------1------0
662     : ['promise(acceptor1,proposer1)', '~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor2)', '~start(proposer2)']
663     : -0---0-0-0-0-------1----0--
663     : ['promise(acceptor1,proposer1)', '~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor2)', '~start(proposer0)']
664     : --00----00-0--------1----0-
664     : ['promise(acceptor1,proposer2)', '~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor2)', '~start(proposer1)']
665     : --0-0---00-0--------1---0--
665     : ['promise(acceptor1,proposer2)', '~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor2)', '~start(proposer0)']
666     : 0--0---0--00---1----------0
666     : ['promise(acceptor0,proposer0)', '~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~start(proposer2)']
667     : 0--0----0-00---1---------0-
667     : ['promise(acceptor0,proposer0)', '~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~start(proposer1)']
668     : -0--0-0---00----1---------0
668     : ['promise(acceptor0,proposer1)', '~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~start(proposer2)']
669     : -0--0---0-00----1-------0--
669     : ['promise(acceptor0,proposer1)', '~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~start(proposer0)']
670     : --0--00---00-----1-------0-
670     : ['promise(acceptor0,proposer2)', '~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~start(proposer1)']
671     : --0--0-0--00-----1------0--
671     : ['promise(acceptor0,proposer2)', '~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~start(proposer0)']
num_forall :   0
num_exists :   0
num_literals : 0
quantified form : None
qcost : 0




---------- QPrime ----------


---------- ConstArgBinding ----------

terms: ['~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', 'promise(acceptor2,proposer0)', '~start(proposer2)', 'member(acceptor0,quorum__acceptor0_acceptor1)', 'member(acceptor1,quorum__acceptor0_acceptor1)', '~member(acceptor2,quorum__acceptor0_acceptor1)', 'member(acceptor0,quorum__acceptor0_acceptor2)', '~member(acceptor1,quorum__acceptor0_acceptor2)', 'member(acceptor2,quorum__acceptor0_acceptor2)', '~member(acceptor0,quorum__acceptor1_acceptor2)', 'member(acceptor1,quorum__acceptor1_acceptor2)', 'member(acceptor2,quorum__acceptor1_acceptor2)']

sign_func_name2args: {'1$chosenAt': [(Const('quorum__acceptor0_acceptor1', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), Const('proposer1', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))), (Const('quorum__acceptor0_acceptor2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), Const('proposer0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))), (Const('quorum__acceptor1_acceptor2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), Const('proposer0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))))], '1$didNotPromise': [(Const('acceptor0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))),), (Const('acceptor1', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))),)], '0$promise': [(Const('acceptor2', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Const('proposer0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))))], '1$start': [(Const('proposer2', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))),)], '0$member': [(Const('acceptor0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Const('quorum__acceptor0_acceptor1', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')))), (Const('acceptor1', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Const('quorum__acceptor0_acceptor1', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')))), (Const('acceptor0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Const('quorum__acceptor0_acceptor2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')))), (Const('acceptor2', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Const('quorum__acceptor0_acceptor2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')))), (Const('acceptor1', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Const('quorum__acceptor1_acceptor2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')))), (Const('acceptor2', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Const('quorum__acceptor1_acceptor2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))))], '1$member': [(Const('acceptor2', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Const('quorum__acceptor0_acceptor1', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')))), (Const('acceptor1', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Const('quorum__acceptor0_acceptor2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')))), (Const('acceptor0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Const('quorum__acceptor1_acceptor2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))))]}

const2sigs: {Const('quorum__acceptor0_acceptor1', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))): [quorum$1$chosenAt$0$0, quorum$0$member$1$0, quorum$0$member$1$1, quorum$1$member$1$0], Const('proposer1', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))): [proposer$1$chosenAt$1$0], Const('quorum__acceptor0_acceptor2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))): [quorum$1$chosenAt$0$1, quorum$0$member$1$2, quorum$0$member$1$3, quorum$1$member$1$1], Const('proposer0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))): [proposer$1$chosenAt$1$1, proposer$1$chosenAt$1$2, proposer$0$promise$1$0], Const('quorum__acceptor1_acceptor2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))): [quorum$1$chosenAt$0$2, quorum$0$member$1$4, quorum$0$member$1$5, quorum$1$member$1$2], Const('acceptor0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))): [acceptor$1$didNotPromise$0$0, acceptor$0$member$0$0, acceptor$0$member$0$2, acceptor$1$member$0$2], Const('acceptor1', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))): [acceptor$1$didNotPromise$0$1, acceptor$0$member$0$1, acceptor$0$member$0$4, acceptor$1$member$0$1], Const('acceptor2', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))): [acceptor$0$promise$0$0, acceptor$0$member$0$3, acceptor$0$member$0$5, acceptor$1$member$0$0], Const('proposer2', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))): [proposer$1$start$0$0]}

sig2const: {'quorum$1$chosenAt$0$0': Const('quorum__acceptor0_acceptor1', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), 'proposer$1$chosenAt$1$0': Const('proposer1', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))), 'quorum$1$chosenAt$0$1': Const('quorum__acceptor0_acceptor2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), 'proposer$1$chosenAt$1$1': Const('proposer0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))), 'quorum$1$chosenAt$0$2': Const('quorum__acceptor1_acceptor2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), 'proposer$1$chosenAt$1$2': Const('proposer0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))), 'acceptor$1$didNotPromise$0$0': Const('acceptor0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), 'acceptor$1$didNotPromise$0$1': Const('acceptor1', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), 'acceptor$0$promise$0$0': Const('acceptor2', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), 'proposer$0$promise$1$0': Const('proposer0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))), 'proposer$1$start$0$0': Const('proposer2', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))), 'acceptor$0$member$0$0': Const('acceptor0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), 'quorum$0$member$1$0': Const('quorum__acceptor0_acceptor1', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), 'acceptor$0$member$0$1': Const('acceptor1', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), 'quorum$0$member$1$1': Const('quorum__acceptor0_acceptor1', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), 'acceptor$0$member$0$2': Const('acceptor0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), 'quorum$0$member$1$2': Const('quorum__acceptor0_acceptor2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), 'acceptor$0$member$0$3': Const('acceptor2', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), 'quorum$0$member$1$3': Const('quorum__acceptor0_acceptor2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), 'acceptor$0$member$0$4': Const('acceptor1', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), 'quorum$0$member$1$4': Const('quorum__acceptor1_acceptor2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), 'acceptor$0$member$0$5': Const('acceptor2', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), 'quorum$0$member$1$5': Const('quorum__acceptor1_acceptor2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), 'acceptor$1$member$0$0': Const('acceptor2', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), 'quorum$1$member$1$0': Const('quorum__acceptor0_acceptor1', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), 'acceptor$1$member$0$1': Const('acceptor1', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), 'quorum$1$member$1$1': Const('quorum__acceptor0_acceptor2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), 'acceptor$1$member$0$2': Const('acceptor0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), 'quorum$1$member$1$2': Const('quorum__acceptor1_acceptor2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')))}


---------- ArgPartition ----------

sort2class_sigs: {EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')): [quorum$0$member$1$0; quorum$0$member$1$1; quorum$1$chosenAt$0$0; quorum$1$member$1$0, quorum$0$member$1$2; quorum$0$member$1$3; quorum$1$chosenAt$0$1; quorum$1$member$1$1, quorum$0$member$1$4; quorum$0$member$1$5; quorum$1$chosenAt$0$2; quorum$1$member$1$2], EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')): [proposer$0$promise$1$0; proposer$1$chosenAt$1$1; proposer$1$chosenAt$1$2, proposer$1$chosenAt$1$0, proposer$1$start$0$0], EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')): [acceptor$0$member$0$0; acceptor$0$member$0$2; acceptor$1$didNotPromise$0$0; acceptor$1$member$0$2, acceptor$0$member$0$1; acceptor$0$member$0$4; acceptor$1$didNotPromise$0$1; acceptor$1$member$0$1, acceptor$0$member$0$3; acceptor$0$member$0$5; acceptor$0$promise$0$0; acceptor$1$member$0$0]}

sort2part_sig: {EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')): quorum$0$member$1$0; quorum$0$member$1$1; quorum$1$chosenAt$0$0; quorum$1$member$1$0 | quorum$0$member$1$2; quorum$0$member$1$3; quorum$1$chosenAt$0$1; quorum$1$member$1$1 | quorum$0$member$1$4; quorum$0$member$1$5; quorum$1$chosenAt$0$2; quorum$1$member$1$2, EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')): proposer$0$promise$1$0; proposer$1$chosenAt$1$1; proposer$1$chosenAt$1$2 | proposer$1$chosenAt$1$0 | proposer$1$start$0$0, EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')): acceptor$0$member$0$0; acceptor$0$member$0$2; acceptor$1$didNotPromise$0$0; acceptor$1$member$0$2 | acceptor$0$member$0$1; acceptor$0$member$0$4; acceptor$1$didNotPromise$0$1; acceptor$1$member$0$1 | acceptor$0$member$0$3; acceptor$0$member$0$5; acceptor$0$promise$0$0; acceptor$1$member$0$0}

part_sig: ('acceptor$0$member$0$0; acceptor$0$member$0$2; acceptor$1$didNotPromise$0$0; acceptor$1$member$0$2 | acceptor$0$member$0$1; acceptor$0$member$0$4; acceptor$1$didNotPromise$0$1; acceptor$1$member$0$1 | acceptor$0$member$0$3; acceptor$0$member$0$5; acceptor$0$promise$0$0; acceptor$1$member$0$0', 'proposer$0$promise$1$0; proposer$1$chosenAt$1$1; proposer$1$chosenAt$1$2 | proposer$1$chosenAt$1$0 | proposer$1$start$0$0', 'quorum$0$member$1$0; quorum$0$member$1$1; quorum$1$chosenAt$0$0; quorum$1$member$1$0 | quorum$0$member$1$2; quorum$0$member$1$3; quorum$1$chosenAt$0$1; quorum$1$member$1$1 | quorum$0$member$1$4; quorum$0$member$1$5; quorum$1$chosenAt$0$2; quorum$1$member$1$2')


---------- SigGenerator ----------

terms:  ['~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', 'promise(acceptor2,proposer0)', '~start(proposer2)', 'member(acceptor0,quorum__acceptor0_acceptor1)', 'member(acceptor1,quorum__acceptor0_acceptor1)', '~member(acceptor2,quorum__acceptor0_acceptor1)', 'member(acceptor0,quorum__acceptor0_acceptor2)', '~member(acceptor1,quorum__acceptor0_acceptor2)', 'member(acceptor2,quorum__acceptor0_acceptor2)', '~member(acceptor0,quorum__acceptor1_acceptor2)', 'member(acceptor1,quorum__acceptor1_acceptor2)', 'member(acceptor2,quorum__acceptor1_acceptor2)']

func_name2symbol:  {'chosenAt': Const('chosenAt', FunctionSort(EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')), EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')), BooleanSort())), 'didNotPromise': Const('didNotPromise', FunctionSort(EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')), BooleanSort())), 'promise': Const('promise', FunctionSort(EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')), EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')), BooleanSort())), 'start': Const('start', FunctionSort(EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')), BooleanSort())), 'member': Const('member', FunctionSort(EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')), EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')), BooleanSort()))}

func_name2args_sort:  {'chosenAt': (EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')), EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))), 'didNotPromise': (EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')),), 'promise': (EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')), EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))), 'start': (EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')),), 'member': (EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')), EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')))}

sign_func_name2count:  {'1$chosenAt': 3, '1$didNotPromise': 2, '0$promise': 1, '1$start': 1, '0$member': 6, '1$member': 3}


---------- ProductArgPartition ----------

sort2class_sigs: {EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')): [quorum$0$member$1$0; quorum$0$member$1$1; quorum$1$chosenAt$0$0; quorum$1$member$1$0, quorum$0$member$1$2; quorum$0$member$1$3; quorum$1$chosenAt$0$1; quorum$1$member$1$1, quorum$0$member$1$4; quorum$0$member$1$5; quorum$1$chosenAt$0$2; quorum$1$member$1$2], EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')): [proposer$0$promise$1$0; proposer$1$chosenAt$1$1; proposer$1$chosenAt$1$2, proposer$1$chosenAt$1$0, proposer$1$start$0$0], EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')): [acceptor$0$member$0$0; acceptor$0$member$0$2; acceptor$1$didNotPromise$0$0; acceptor$1$member$0$2, acceptor$0$member$0$1; acceptor$0$member$0$4; acceptor$1$didNotPromise$0$1; acceptor$1$member$0$1, acceptor$0$member$0$3; acceptor$0$member$0$5; acceptor$0$promise$0$0; acceptor$1$member$0$0]}

sort2part_sig: {EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')): quorum$0$member$1$0; quorum$0$member$1$1; quorum$1$chosenAt$0$0; quorum$1$member$1$0 | quorum$0$member$1$2; quorum$0$member$1$3; quorum$1$chosenAt$0$1; quorum$1$member$1$1 | quorum$0$member$1$4; quorum$0$member$1$5; quorum$1$chosenAt$0$2; quorum$1$member$1$2, EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')): proposer$0$promise$1$0; proposer$1$chosenAt$1$1; proposer$1$chosenAt$1$2 | proposer$1$chosenAt$1$0 | proposer$1$start$0$0, EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')): acceptor$0$member$0$0; acceptor$0$member$0$2; acceptor$1$didNotPromise$0$0; acceptor$1$member$0$2 | acceptor$0$member$0$1; acceptor$0$member$0$4; acceptor$1$didNotPromise$0$1; acceptor$1$member$0$1 | acceptor$0$member$0$3; acceptor$0$member$0$5; acceptor$0$promise$0$0; acceptor$1$member$0$0}

	sort: quorum

	identical_classes: {'quorum$0$member$1; quorum$0$member$1; quorum$1$chosenAt$0; quorum$1$member$1': [quorum$0$member$1$0; quorum$0$member$1$1; quorum$1$chosenAt$0$0; quorum$1$member$1$0, quorum$0$member$1$2; quorum$0$member$1$3; quorum$1$chosenAt$0$1; quorum$1$member$1$1, quorum$0$member$1$4; quorum$0$member$1$5; quorum$1$chosenAt$0$2; quorum$1$member$1$2]}

	identical_single_classes: {}

	identical_multi_classes: {'quorum$0$member$1; quorum$0$member$1; quorum$1$chosenAt$0; quorum$1$member$1': [quorum$0$member$1$0, quorum$0$member$1$1, quorum$1$chosenAt$0$0, quorum$1$member$1$0, quorum$0$member$1$2, quorum$0$member$1$3, quorum$1$chosenAt$0$1, quorum$1$member$1$1, quorum$0$member$1$4, quorum$0$member$1$5, quorum$1$chosenAt$0$2, quorum$1$member$1$2]}

	sort: proposer

	identical_classes: {'proposer$0$promise$1; proposer$1$chosenAt$1; proposer$1$chosenAt$1': [proposer$0$promise$1$0; proposer$1$chosenAt$1$1; proposer$1$chosenAt$1$2], 'proposer$1$chosenAt$1': [proposer$1$chosenAt$1$0], 'proposer$1$start$0': [proposer$1$start$0$0]}

	identical_single_classes: {'proposer$0$promise$1; proposer$1$chosenAt$1; proposer$1$chosenAt$1': proposer$0$promise$1$0; proposer$1$chosenAt$1$1; proposer$1$chosenAt$1$2, 'proposer$1$chosenAt$1': proposer$1$chosenAt$1$0, 'proposer$1$start$0': proposer$1$start$0$0}

	identical_multi_classes: {}

	sort: acceptor

	identical_classes: {'acceptor$0$member$0; acceptor$0$member$0; acceptor$1$didNotPromise$0; acceptor$1$member$0': [acceptor$0$member$0$0; acceptor$0$member$0$2; acceptor$1$didNotPromise$0$0; acceptor$1$member$0$2, acceptor$0$member$0$1; acceptor$0$member$0$4; acceptor$1$didNotPromise$0$1; acceptor$1$member$0$1], 'acceptor$0$member$0; acceptor$0$member$0; acceptor$0$promise$0; acceptor$1$member$0': [acceptor$0$member$0$3; acceptor$0$member$0$5; acceptor$0$promise$0$0; acceptor$1$member$0$0]}

	identical_single_classes: {'acceptor$0$member$0; acceptor$0$member$0; acceptor$0$promise$0; acceptor$1$member$0': acceptor$0$member$0$3; acceptor$0$member$0$5; acceptor$0$promise$0$0; acceptor$1$member$0$0}

	identical_multi_classes: {'acceptor$0$member$0; acceptor$0$member$0; acceptor$1$didNotPromise$0; acceptor$1$member$0': [acceptor$0$member$0$0, acceptor$0$member$0$2, acceptor$1$didNotPromise$0$0, acceptor$1$member$0$2, acceptor$0$member$0$1, acceptor$0$member$0$4, acceptor$1$didNotPromise$0$1, acceptor$1$member$0$1]}


---------- QInference: _set_sort_to_quantifier_mode ----------

quantifier mode: quorum: QuantifierMode.forall

quantifier mode: proposer: QuantifierMode.forall

quantifier mode: acceptor: QuantifierMode.forall


---------- QInference: _set_constraint_mode ----------

constraint mode: ConstraintMode.no_merge


---------- QFormula: _set_qvars ----------

forall_qvars: {Var('QUORUM2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), Var('PROPOSER2', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))), Var('ACCEPTOR1', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Var('PROPOSER0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))), Var('QUORUM0', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), Var('QUORUM1', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), Var('ACCEPTOR2', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Var('PROPOSER1', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))), Var('ACCEPTOR0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')))}

exists_qvars: set()


---------- QFormula: _set_signed_func_name_to_args ----------

signed_func_name2args: {'1$chosenAt': [[Var('QUORUM0', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), Var('PROPOSER1', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))], [Var('QUORUM1', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), Var('PROPOSER0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))], [Var('QUORUM2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), Var('PROPOSER0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))]], '1$didNotPromise': [[Var('ACCEPTOR0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')))], [Var('ACCEPTOR1', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')))]], '0$promise': [[Var('ACCEPTOR2', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Var('PROPOSER0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))]], '1$start': [[Var('PROPOSER2', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))]], '0$member': [[Var('ACCEPTOR0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Var('QUORUM0', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')))], [Var('ACCEPTOR1', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Var('QUORUM0', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')))], [Var('ACCEPTOR0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Var('QUORUM1', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')))], [Var('ACCEPTOR2', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Var('QUORUM1', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')))], [Var('ACCEPTOR1', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Var('QUORUM2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')))], [Var('ACCEPTOR2', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Var('QUORUM2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')))]], '1$member': [[Var('ACCEPTOR2', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Var('QUORUM0', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')))], [Var('ACCEPTOR1', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Var('QUORUM1', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')))], [Var('ACCEPTOR0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Var('QUORUM2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')))]]}


---------- QFormula: _set_qterms ----------

qterms: ['~chosenAt(QUORUM2,PROPOSER0)', 'promise(ACCEPTOR2,PROPOSER0)', 'member(ACCEPTOR2,QUORUM1)', '~didNotPromise(ACCEPTOR0)', '~start(PROPOSER2)', 'member(ACCEPTOR0,QUORUM1)', 'member(ACCEPTOR1,QUORUM0)', 'member(ACCEPTOR0,QUORUM0)', 'member(ACCEPTOR1,QUORUM2)', 'member(ACCEPTOR2,QUORUM2)', '~chosenAt(QUORUM0,PROPOSER1)', '~member(ACCEPTOR1,QUORUM1)', '~chosenAt(QUORUM1,PROPOSER0)', '~member(ACCEPTOR0,QUORUM2)', '~didNotPromise(ACCEPTOR1)', '~member(ACCEPTOR2,QUORUM0)']


---------- QFormula: get_qclause ----------

qclause: forall PROPOSER1,PROPOSER2,QUORUM2,ACCEPTOR2,ACCEPTOR0,PROPOSER0,QUORUM0,ACCEPTOR1,QUORUM1. chosenAt(QUORUM2,PROPOSER0) | ~promise(ACCEPTOR2,PROPOSER0) | ~member(ACCEPTOR2,QUORUM1) | didNotPromise(ACCEPTOR0) | start(PROPOSER2) | ~member(ACCEPTOR0,QUORUM1) | ~member(ACCEPTOR1,QUORUM0) | ~member(ACCEPTOR0,QUORUM0) | ~member(ACCEPTOR1,QUORUM2) | ~member(ACCEPTOR2,QUORUM2) | chosenAt(QUORUM0,PROPOSER1) | member(ACCEPTOR1,QUORUM1) | chosenAt(QUORUM1,PROPOSER0) | member(ACCEPTOR0,QUORUM2) | didNotPromise(ACCEPTOR1) | member(ACCEPTOR2,QUORUM0) | (QUORUM1 = QUORUM2 | PROPOSER0 = PROPOSER2 | PROPOSER1 = PROPOSER2 | ACCEPTOR0 = ACCEPTOR1 | ACCEPTOR1 = ACCEPTOR2 | PROPOSER0 = PROPOSER1 | QUORUM0 = QUORUM2 | QUORUM0 = QUORUM1 | ACCEPTOR0 = ACCEPTOR2)


=== Prime Orbit 43 =====================
size : 36
num_suborbits: 1
672 (*) : -0----0--00----0-----1----0
672     : ['promise(acceptor2,proposer0)', '~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~promise(acceptor0,proposer0)', '~start(proposer2)']
673     : --0---0--00----0-----1---0-
673     : ['promise(acceptor2,proposer0)', '~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~promise(acceptor0,proposer0)', '~start(proposer1)']
674     : 0------0-00-----0-----1---0
674     : ['promise(acceptor2,proposer1)', '~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~promise(acceptor0,proposer1)', '~start(proposer2)']
675     : --0----0-00-----0-----1-0--
675     : ['promise(acceptor2,proposer1)', '~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~promise(acceptor0,proposer1)', '~start(proposer0)']
676     : 0-------000------0-----1-0-
676     : ['promise(acceptor2,proposer2)', '~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~promise(acceptor0,proposer2)', '~start(proposer1)']
677     : -0------000------0-----10--
677     : ['promise(acceptor2,proposer2)', '~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~promise(acceptor0,proposer2)', '~start(proposer0)']
678     : ----0-0--0-0---0--1-------0
678     : ['promise(acceptor1,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor2)', '~promise(acceptor0,proposer0)', '~start(proposer2)']
679     : -----00--0-0---0--1------0-
679     : ['promise(acceptor1,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor2)', '~promise(acceptor0,proposer0)', '~start(proposer1)']
680     : ---0---0-0-0----0--1------0
680     : ['promise(acceptor1,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor2)', '~promise(acceptor0,proposer1)', '~start(proposer2)']
681     : -----0-0-0-0----0--1----0--
681     : ['promise(acceptor1,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor2)', '~promise(acceptor0,proposer1)', '~start(proposer0)']
682     : ---0----00-0-----0--1----0-
682     : ['promise(acceptor1,proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor2)', '~promise(acceptor0,proposer2)', '~start(proposer1)']
683     : ----0---00-0-----0--1---0--
683     : ['promise(acceptor1,proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor2)', '~promise(acceptor0,proposer2)', '~start(proposer0)']
684     : -0-0-----00-------0--1----0
684     : ['promise(acceptor2,proposer0)', '~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~promise(acceptor1,proposer0)', '~start(proposer2)']
685     : --00-----00-------0--1---0-
685     : ['promise(acceptor2,proposer0)', '~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~promise(acceptor1,proposer0)', '~start(proposer1)']
686     : 0---0----00--------0--1---0
686     : ['promise(acceptor2,proposer1)', '~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~promise(acceptor1,proposer1)', '~start(proposer2)']
687     : --0-0----00--------0--1-0--
687     : ['promise(acceptor2,proposer1)', '~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~promise(acceptor1,proposer1)', '~start(proposer0)']
688     : 0----0---00---------0--1-0-
688     : ['promise(acceptor2,proposer2)', '~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~promise(acceptor1,proposer2)', '~start(proposer1)']
689     : -0---0---00---------0--10--
689     : ['promise(acceptor2,proposer2)', '~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~promise(acceptor1,proposer2)', '~start(proposer0)']
690     : ---0---0--00---1--0-------0
690     : ['promise(acceptor0,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor1,proposer0)', '~start(proposer2)']
691     : ---0----0-00---1--0------0-
691     : ['promise(acceptor0,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor1,proposer0)', '~start(proposer1)']
692     : ----0-0---00----1--0------0
692     : ['promise(acceptor0,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor1,proposer1)', '~start(proposer2)']
693     : ----0---0-00----1--0----0--
693     : ['promise(acceptor0,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor1,proposer1)', '~start(proposer0)']
694     : -----00---00-----1--0----0-
694     : ['promise(acceptor0,proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor1,proposer2)', '~start(proposer1)']
695     : -----0-0--00-----1--0---0--
695     : ['promise(acceptor0,proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor1,proposer2)', '~start(proposer0)']
696     : 0---0----0-0------1--0----0
696     : ['promise(acceptor1,proposer0)', '~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor2)', '~promise(acceptor2,proposer0)', '~start(proposer2)']
697     : 0----0---0-0------1--0---0-
697     : ['promise(acceptor1,proposer0)', '~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor2)', '~promise(acceptor2,proposer0)', '~start(proposer1)']
698     : -0-0-----0-0-------1--0---0
698     : ['promise(acceptor1,proposer1)', '~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor2)', '~promise(acceptor2,proposer1)', '~start(proposer2)']
699     : -0---0---0-0-------1--0-0--
699     : ['promise(acceptor1,proposer1)', '~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor2)', '~promise(acceptor2,proposer1)', '~start(proposer0)']
700     : --00-----0-0--------1--0-0-
700     : ['promise(acceptor1,proposer2)', '~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor2)', '~promise(acceptor2,proposer2)', '~start(proposer1)']
701     : --0-0----0-0--------1--00--
701     : ['promise(acceptor1,proposer2)', '~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor2)', '~promise(acceptor2,proposer2)', '~start(proposer0)']
702     : 0------0--00---1-----0----0
702     : ['promise(acceptor0,proposer0)', '~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor2,proposer0)', '~start(proposer2)']
703     : 0-------0-00---1-----0---0-
703     : ['promise(acceptor0,proposer0)', '~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor2,proposer0)', '~start(proposer1)']
704     : -0----0---00----1-----0---0
704     : ['promise(acceptor0,proposer1)', '~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor2,proposer1)', '~start(proposer2)']
705     : -0------0-00----1-----0-0--
705     : ['promise(acceptor0,proposer1)', '~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor2,proposer1)', '~start(proposer0)']
706     : --0---0---00-----1-----0-0-
706     : ['promise(acceptor0,proposer2)', '~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor2,proposer2)', '~start(proposer1)']
707     : --0----0--00-----1-----00--
707     : ['promise(acceptor0,proposer2)', '~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor2,proposer2)', '~start(proposer0)']
num_forall :   0
num_exists :   0
num_literals : 0
quantified form : None
qcost : 0




---------- QPrime ----------


---------- ConstArgBinding ----------

terms: ['~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~promise(acceptor0,proposer0)', 'promise(acceptor2,proposer0)', '~start(proposer2)', 'member(acceptor0,quorum__acceptor0_acceptor1)', 'member(acceptor1,quorum__acceptor0_acceptor1)', '~member(acceptor2,quorum__acceptor0_acceptor1)', '~member(acceptor0,quorum__acceptor1_acceptor2)', 'member(acceptor1,quorum__acceptor1_acceptor2)', 'member(acceptor2,quorum__acceptor1_acceptor2)']

sign_func_name2args: {'1$chosenAt': [(Const('quorum__acceptor0_acceptor1', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), Const('proposer1', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))), (Const('quorum__acceptor1_acceptor2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), Const('proposer0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))))], '1$didNotPromise': [(Const('acceptor0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))),), (Const('acceptor1', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))),)], '1$promise': [(Const('acceptor0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Const('proposer0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))))], '0$promise': [(Const('acceptor2', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Const('proposer0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))))], '1$start': [(Const('proposer2', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))),)], '0$member': [(Const('acceptor0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Const('quorum__acceptor0_acceptor1', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')))), (Const('acceptor1', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Const('quorum__acceptor0_acceptor1', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')))), (Const('acceptor1', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Const('quorum__acceptor1_acceptor2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')))), (Const('acceptor2', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Const('quorum__acceptor1_acceptor2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))))], '1$member': [(Const('acceptor2', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Const('quorum__acceptor0_acceptor1', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')))), (Const('acceptor0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Const('quorum__acceptor1_acceptor2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))))]}

const2sigs: {Const('quorum__acceptor0_acceptor1', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))): [quorum$1$chosenAt$0$0, quorum$0$member$1$0, quorum$0$member$1$1, quorum$1$member$1$0], Const('proposer1', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))): [proposer$1$chosenAt$1$0], Const('quorum__acceptor1_acceptor2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))): [quorum$1$chosenAt$0$1, quorum$0$member$1$2, quorum$0$member$1$3, quorum$1$member$1$1], Const('proposer0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))): [proposer$1$chosenAt$1$1, proposer$1$promise$1$0, proposer$0$promise$1$0], Const('acceptor0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))): [acceptor$1$didNotPromise$0$0, acceptor$1$promise$0$0, acceptor$0$member$0$0, acceptor$1$member$0$1], Const('acceptor1', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))): [acceptor$1$didNotPromise$0$1, acceptor$0$member$0$1, acceptor$0$member$0$2], Const('acceptor2', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))): [acceptor$0$promise$0$0, acceptor$0$member$0$3, acceptor$1$member$0$0], Const('proposer2', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))): [proposer$1$start$0$0]}

sig2const: {'quorum$1$chosenAt$0$0': Const('quorum__acceptor0_acceptor1', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), 'proposer$1$chosenAt$1$0': Const('proposer1', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))), 'quorum$1$chosenAt$0$1': Const('quorum__acceptor1_acceptor2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), 'proposer$1$chosenAt$1$1': Const('proposer0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))), 'acceptor$1$didNotPromise$0$0': Const('acceptor0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), 'acceptor$1$didNotPromise$0$1': Const('acceptor1', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), 'acceptor$1$promise$0$0': Const('acceptor0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), 'proposer$1$promise$1$0': Const('proposer0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))), 'acceptor$0$promise$0$0': Const('acceptor2', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), 'proposer$0$promise$1$0': Const('proposer0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))), 'proposer$1$start$0$0': Const('proposer2', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))), 'acceptor$0$member$0$0': Const('acceptor0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), 'quorum$0$member$1$0': Const('quorum__acceptor0_acceptor1', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), 'acceptor$0$member$0$1': Const('acceptor1', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), 'quorum$0$member$1$1': Const('quorum__acceptor0_acceptor1', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), 'acceptor$0$member$0$2': Const('acceptor1', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), 'quorum$0$member$1$2': Const('quorum__acceptor1_acceptor2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), 'acceptor$0$member$0$3': Const('acceptor2', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), 'quorum$0$member$1$3': Const('quorum__acceptor1_acceptor2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), 'acceptor$1$member$0$0': Const('acceptor2', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), 'quorum$1$member$1$0': Const('quorum__acceptor0_acceptor1', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), 'acceptor$1$member$0$1': Const('acceptor0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), 'quorum$1$member$1$1': Const('quorum__acceptor1_acceptor2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')))}


---------- ArgPartition ----------

sort2class_sigs: {EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')): [quorum$0$member$1$0; quorum$0$member$1$1; quorum$1$chosenAt$0$0; quorum$1$member$1$0, quorum$0$member$1$2; quorum$0$member$1$3; quorum$1$chosenAt$0$1; quorum$1$member$1$1], EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')): [proposer$0$promise$1$0; proposer$1$chosenAt$1$1; proposer$1$promise$1$0, proposer$1$chosenAt$1$0, proposer$1$start$0$0], EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')): [acceptor$0$member$0$0; acceptor$1$didNotPromise$0$0; acceptor$1$member$0$1; acceptor$1$promise$0$0, acceptor$0$member$0$1; acceptor$0$member$0$2; acceptor$1$didNotPromise$0$1, acceptor$0$member$0$3; acceptor$0$promise$0$0; acceptor$1$member$0$0]}

sort2part_sig: {EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')): quorum$0$member$1$0; quorum$0$member$1$1; quorum$1$chosenAt$0$0; quorum$1$member$1$0 | quorum$0$member$1$2; quorum$0$member$1$3; quorum$1$chosenAt$0$1; quorum$1$member$1$1, EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')): proposer$0$promise$1$0; proposer$1$chosenAt$1$1; proposer$1$promise$1$0 | proposer$1$chosenAt$1$0 | proposer$1$start$0$0, EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')): acceptor$0$member$0$0; acceptor$1$didNotPromise$0$0; acceptor$1$member$0$1; acceptor$1$promise$0$0 | acceptor$0$member$0$1; acceptor$0$member$0$2; acceptor$1$didNotPromise$0$1 | acceptor$0$member$0$3; acceptor$0$promise$0$0; acceptor$1$member$0$0}

part_sig: ('acceptor$0$member$0$0; acceptor$1$didNotPromise$0$0; acceptor$1$member$0$1; acceptor$1$promise$0$0 | acceptor$0$member$0$1; acceptor$0$member$0$2; acceptor$1$didNotPromise$0$1 | acceptor$0$member$0$3; acceptor$0$promise$0$0; acceptor$1$member$0$0', 'proposer$0$promise$1$0; proposer$1$chosenAt$1$1; proposer$1$promise$1$0 | proposer$1$chosenAt$1$0 | proposer$1$start$0$0', 'quorum$0$member$1$0; quorum$0$member$1$1; quorum$1$chosenAt$0$0; quorum$1$member$1$0 | quorum$0$member$1$2; quorum$0$member$1$3; quorum$1$chosenAt$0$1; quorum$1$member$1$1')


---------- SigGenerator ----------

terms:  ['~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~promise(acceptor0,proposer0)', 'promise(acceptor2,proposer0)', '~start(proposer2)', 'member(acceptor0,quorum__acceptor0_acceptor1)', 'member(acceptor1,quorum__acceptor0_acceptor1)', '~member(acceptor2,quorum__acceptor0_acceptor1)', '~member(acceptor0,quorum__acceptor1_acceptor2)', 'member(acceptor1,quorum__acceptor1_acceptor2)', 'member(acceptor2,quorum__acceptor1_acceptor2)']

func_name2symbol:  {'chosenAt': Const('chosenAt', FunctionSort(EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')), EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')), BooleanSort())), 'didNotPromise': Const('didNotPromise', FunctionSort(EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')), BooleanSort())), 'promise': Const('promise', FunctionSort(EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')), EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')), BooleanSort())), 'start': Const('start', FunctionSort(EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')), BooleanSort())), 'member': Const('member', FunctionSort(EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')), EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')), BooleanSort()))}

func_name2args_sort:  {'chosenAt': (EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')), EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))), 'didNotPromise': (EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')),), 'promise': (EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')), EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))), 'start': (EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')),), 'member': (EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')), EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')))}

sign_func_name2count:  {'1$chosenAt': 2, '1$didNotPromise': 2, '1$promise': 1, '0$promise': 1, '1$start': 1, '0$member': 4, '1$member': 2}


---------- ProductArgPartition ----------

sort2class_sigs: {EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')): [quorum$0$member$1$0; quorum$0$member$1$1; quorum$1$chosenAt$0$0; quorum$1$member$1$0, quorum$0$member$1$2; quorum$0$member$1$3; quorum$1$chosenAt$0$1; quorum$1$member$1$1], EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')): [proposer$0$promise$1$0; proposer$1$chosenAt$1$1; proposer$1$promise$1$0, proposer$1$chosenAt$1$0, proposer$1$start$0$0], EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')): [acceptor$0$member$0$0; acceptor$1$didNotPromise$0$0; acceptor$1$member$0$1; acceptor$1$promise$0$0, acceptor$0$member$0$1; acceptor$0$member$0$2; acceptor$1$didNotPromise$0$1, acceptor$0$member$0$3; acceptor$0$promise$0$0; acceptor$1$member$0$0]}

sort2part_sig: {EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')): quorum$0$member$1$0; quorum$0$member$1$1; quorum$1$chosenAt$0$0; quorum$1$member$1$0 | quorum$0$member$1$2; quorum$0$member$1$3; quorum$1$chosenAt$0$1; quorum$1$member$1$1, EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')): proposer$0$promise$1$0; proposer$1$chosenAt$1$1; proposer$1$promise$1$0 | proposer$1$chosenAt$1$0 | proposer$1$start$0$0, EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')): acceptor$0$member$0$0; acceptor$1$didNotPromise$0$0; acceptor$1$member$0$1; acceptor$1$promise$0$0 | acceptor$0$member$0$1; acceptor$0$member$0$2; acceptor$1$didNotPromise$0$1 | acceptor$0$member$0$3; acceptor$0$promise$0$0; acceptor$1$member$0$0}

	sort: quorum

	identical_classes: {'quorum$0$member$1; quorum$0$member$1; quorum$1$chosenAt$0; quorum$1$member$1': [quorum$0$member$1$0; quorum$0$member$1$1; quorum$1$chosenAt$0$0; quorum$1$member$1$0, quorum$0$member$1$2; quorum$0$member$1$3; quorum$1$chosenAt$0$1; quorum$1$member$1$1]}

	identical_single_classes: {}

	identical_multi_classes: {'quorum$0$member$1; quorum$0$member$1; quorum$1$chosenAt$0; quorum$1$member$1': [quorum$0$member$1$0, quorum$0$member$1$1, quorum$1$chosenAt$0$0, quorum$1$member$1$0, quorum$0$member$1$2, quorum$0$member$1$3, quorum$1$chosenAt$0$1, quorum$1$member$1$1]}

	sort: proposer

	identical_classes: {'proposer$0$promise$1; proposer$1$chosenAt$1; proposer$1$promise$1': [proposer$0$promise$1$0; proposer$1$chosenAt$1$1; proposer$1$promise$1$0], 'proposer$1$chosenAt$1': [proposer$1$chosenAt$1$0], 'proposer$1$start$0': [proposer$1$start$0$0]}

	identical_single_classes: {'proposer$0$promise$1; proposer$1$chosenAt$1; proposer$1$promise$1': proposer$0$promise$1$0; proposer$1$chosenAt$1$1; proposer$1$promise$1$0, 'proposer$1$chosenAt$1': proposer$1$chosenAt$1$0, 'proposer$1$start$0': proposer$1$start$0$0}

	identical_multi_classes: {}

	sort: acceptor

	identical_classes: {'acceptor$0$member$0; acceptor$1$didNotPromise$0; acceptor$1$member$0; acceptor$1$promise$0': [acceptor$0$member$0$0; acceptor$1$didNotPromise$0$0; acceptor$1$member$0$1; acceptor$1$promise$0$0], 'acceptor$0$member$0; acceptor$0$member$0; acceptor$1$didNotPromise$0': [acceptor$0$member$0$1; acceptor$0$member$0$2; acceptor$1$didNotPromise$0$1], 'acceptor$0$member$0; acceptor$0$promise$0; acceptor$1$member$0': [acceptor$0$member$0$3; acceptor$0$promise$0$0; acceptor$1$member$0$0]}

	identical_single_classes: {'acceptor$0$member$0; acceptor$1$didNotPromise$0; acceptor$1$member$0; acceptor$1$promise$0': acceptor$0$member$0$0; acceptor$1$didNotPromise$0$0; acceptor$1$member$0$1; acceptor$1$promise$0$0, 'acceptor$0$member$0; acceptor$0$member$0; acceptor$1$didNotPromise$0': acceptor$0$member$0$1; acceptor$0$member$0$2; acceptor$1$didNotPromise$0$1, 'acceptor$0$member$0; acceptor$0$promise$0; acceptor$1$member$0': acceptor$0$member$0$3; acceptor$0$promise$0$0; acceptor$1$member$0$0}

	identical_multi_classes: {}


---------- QInference: _set_sort_to_quantifier_mode ----------

quantifier mode: quorum: QuantifierMode.forall

quantifier mode: proposer: QuantifierMode.forall

quantifier mode: acceptor: QuantifierMode.forall


---------- QInference: _set_constraint_mode ----------

constraint mode: ConstraintMode.no_merge


---------- QFormula: _set_qvars ----------

forall_qvars: {Var('ACCEPTOR1', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Var('PROPOSER2', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))), Var('PROPOSER0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))), Var('QUORUM0', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), Var('QUORUM1', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), Var('ACCEPTOR2', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Var('PROPOSER1', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))), Var('ACCEPTOR0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')))}

exists_qvars: set()


---------- QFormula: _set_signed_func_name_to_args ----------

signed_func_name2args: {'1$chosenAt': [[Var('QUORUM0', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), Var('PROPOSER1', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))], [Var('QUORUM1', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), Var('PROPOSER0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))]], '1$didNotPromise': [[Var('ACCEPTOR0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')))], [Var('ACCEPTOR1', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')))]], '1$promise': [[Var('ACCEPTOR0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Var('PROPOSER0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))]], '0$promise': [[Var('ACCEPTOR2', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Var('PROPOSER0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))]], '1$start': [[Var('PROPOSER2', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))]], '0$member': [[Var('ACCEPTOR0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Var('QUORUM0', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')))], [Var('ACCEPTOR1', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Var('QUORUM0', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')))], [Var('ACCEPTOR1', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Var('QUORUM1', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')))], [Var('ACCEPTOR2', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Var('QUORUM1', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')))]], '1$member': [[Var('ACCEPTOR2', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Var('QUORUM0', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')))], [Var('ACCEPTOR0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Var('QUORUM1', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')))]]}


---------- QFormula: _set_qterms ----------

qterms: ['member(ACCEPTOR1,QUORUM1)', 'promise(ACCEPTOR2,PROPOSER0)', 'member(ACCEPTOR2,QUORUM1)', '~didNotPromise(ACCEPTOR0)', '~promise(ACCEPTOR0,PROPOSER0)', '~start(PROPOSER2)', 'member(ACCEPTOR1,QUORUM0)', 'member(ACCEPTOR0,QUORUM0)', '~chosenAt(QUORUM0,PROPOSER1)', '~chosenAt(QUORUM1,PROPOSER0)', '~member(ACCEPTOR0,QUORUM1)', '~didNotPromise(ACCEPTOR1)', '~member(ACCEPTOR2,QUORUM0)']


---------- QFormula: get_qclause ----------

qclause: forall PROPOSER1,PROPOSER2,ACCEPTOR2,ACCEPTOR0,PROPOSER0,QUORUM0,ACCEPTOR1,QUORUM1. ~member(ACCEPTOR1,QUORUM1) | ~promise(ACCEPTOR2,PROPOSER0) | ~member(ACCEPTOR2,QUORUM1) | didNotPromise(ACCEPTOR0) | promise(ACCEPTOR0,PROPOSER0) | start(PROPOSER2) | ~member(ACCEPTOR1,QUORUM0) | ~member(ACCEPTOR0,QUORUM0) | chosenAt(QUORUM0,PROPOSER1) | chosenAt(QUORUM1,PROPOSER0) | member(ACCEPTOR0,QUORUM1) | didNotPromise(ACCEPTOR1) | member(ACCEPTOR2,QUORUM0) | (PROPOSER0 = PROPOSER2 | ACCEPTOR0 = ACCEPTOR1 | PROPOSER1 = PROPOSER2 | ACCEPTOR1 = ACCEPTOR2 | PROPOSER0 = PROPOSER1 | QUORUM0 = QUORUM1 | ACCEPTOR0 = ACCEPTOR2)


=== Prime Orbit 47 =====================
size : 18
num_suborbits: 1
771 (*) : 0--0----0000-----0-------0-
771     : ['~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor0,proposer2)', '~start(proposer1)']
772     : 0--0---0-000----0---------0
772     : ['~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor0,proposer1)', '~start(proposer2)']
773     : -0--0---0000-----0------0--
773     : ['~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor0,proposer2)', '~start(proposer0)']
774     : -0--0-0--000---0----------0
774     : ['~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor0,proposer0)', '~start(proposer2)']
775     : --0--0-0-000----0-------0--
775     : ['~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor0,proposer1)', '~start(proposer0)']
776     : --0--00--000---0---------0-
776     : ['~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor0,proposer0)', '~start(proposer1)']
777     : 0----00--000--------0----0-
777     : ['~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor1,proposer2)', '~start(proposer1)']
778     : 0---0-0--000-------0------0
778     : ['~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor1,proposer1)', '~start(proposer2)']
779     : -0---0-0-000--------0---0--
779     : ['~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor1,proposer2)', '~start(proposer0)']
780     : -0-0---0-000------0-------0
780     : ['~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor1,proposer0)', '~start(proposer2)']
781     : --0-0---0000-------0----0--
781     : ['~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor1,proposer1)', '~start(proposer0)']
782     : --00----0000------0------0-
782     : ['~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor1,proposer0)', '~start(proposer1)']
783     : --00--0--000-----------0-0-
783     : ['~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor2,proposer2)', '~start(proposer1)']
784     : -0-0--0--000----------0---0
784     : ['~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor2,proposer1)', '~start(proposer2)']
785     : --0-0--0-000-----------00--
785     : ['~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor2,proposer2)', '~start(proposer0)']
786     : 0---0--0-000---------0----0
786     : ['~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor2,proposer0)', '~start(proposer2)']
787     : -0---0--0000----------0-0--
787     : ['~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor2,proposer1)', '~start(proposer0)']
788     : 0----0--0000---------0---0-
788     : ['~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor2,proposer0)', '~start(proposer1)']
num_forall :   0
num_exists :   0
num_literals : 0
quantified form : None
qcost : 0




---------- QPrime ----------


---------- ConstArgBinding ----------

terms: ['~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor0,proposer2)', '~start(proposer1)', 'member(acceptor0,quorum__acceptor0_acceptor1)', 'member(acceptor1,quorum__acceptor0_acceptor1)', '~member(acceptor2,quorum__acceptor0_acceptor1)', 'member(acceptor0,quorum__acceptor0_acceptor2)', '~member(acceptor1,quorum__acceptor0_acceptor2)', 'member(acceptor2,quorum__acceptor0_acceptor2)', '~member(acceptor0,quorum__acceptor1_acceptor2)', 'member(acceptor1,quorum__acceptor1_acceptor2)', 'member(acceptor2,quorum__acceptor1_acceptor2)']

sign_func_name2args: {'1$chosenAt': [(Const('quorum__acceptor0_acceptor1', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), Const('proposer0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))), (Const('quorum__acceptor0_acceptor2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), Const('proposer0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))), (Const('quorum__acceptor1_acceptor2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), Const('proposer2', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))))], '1$didNotPromise': [(Const('acceptor0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))),), (Const('acceptor1', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))),), (Const('acceptor2', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))),)], '1$promise': [(Const('acceptor0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Const('proposer2', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))))], '1$start': [(Const('proposer1', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))),)], '0$member': [(Const('acceptor0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Const('quorum__acceptor0_acceptor1', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')))), (Const('acceptor1', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Const('quorum__acceptor0_acceptor1', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')))), (Const('acceptor0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Const('quorum__acceptor0_acceptor2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')))), (Const('acceptor2', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Const('quorum__acceptor0_acceptor2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')))), (Const('acceptor1', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Const('quorum__acceptor1_acceptor2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')))), (Const('acceptor2', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Const('quorum__acceptor1_acceptor2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))))], '1$member': [(Const('acceptor2', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Const('quorum__acceptor0_acceptor1', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')))), (Const('acceptor1', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Const('quorum__acceptor0_acceptor2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')))), (Const('acceptor0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Const('quorum__acceptor1_acceptor2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))))]}

const2sigs: {Const('quorum__acceptor0_acceptor1', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))): [quorum$1$chosenAt$0$0, quorum$0$member$1$0, quorum$0$member$1$1, quorum$1$member$1$0], Const('proposer0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))): [proposer$1$chosenAt$1$0, proposer$1$chosenAt$1$1], Const('quorum__acceptor0_acceptor2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))): [quorum$1$chosenAt$0$1, quorum$0$member$1$2, quorum$0$member$1$3, quorum$1$member$1$1], Const('quorum__acceptor1_acceptor2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))): [quorum$1$chosenAt$0$2, quorum$0$member$1$4, quorum$0$member$1$5, quorum$1$member$1$2], Const('proposer2', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))): [proposer$1$chosenAt$1$2, proposer$1$promise$1$0], Const('acceptor0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))): [acceptor$1$didNotPromise$0$0, acceptor$1$promise$0$0, acceptor$0$member$0$0, acceptor$0$member$0$2, acceptor$1$member$0$2], Const('acceptor1', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))): [acceptor$1$didNotPromise$0$1, acceptor$0$member$0$1, acceptor$0$member$0$4, acceptor$1$member$0$1], Const('acceptor2', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))): [acceptor$1$didNotPromise$0$2, acceptor$0$member$0$3, acceptor$0$member$0$5, acceptor$1$member$0$0], Const('proposer1', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))): [proposer$1$start$0$0]}

sig2const: {'quorum$1$chosenAt$0$0': Const('quorum__acceptor0_acceptor1', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), 'proposer$1$chosenAt$1$0': Const('proposer0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))), 'quorum$1$chosenAt$0$1': Const('quorum__acceptor0_acceptor2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), 'proposer$1$chosenAt$1$1': Const('proposer0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))), 'quorum$1$chosenAt$0$2': Const('quorum__acceptor1_acceptor2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), 'proposer$1$chosenAt$1$2': Const('proposer2', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))), 'acceptor$1$didNotPromise$0$0': Const('acceptor0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), 'acceptor$1$didNotPromise$0$1': Const('acceptor1', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), 'acceptor$1$didNotPromise$0$2': Const('acceptor2', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), 'acceptor$1$promise$0$0': Const('acceptor0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), 'proposer$1$promise$1$0': Const('proposer2', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))), 'proposer$1$start$0$0': Const('proposer1', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))), 'acceptor$0$member$0$0': Const('acceptor0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), 'quorum$0$member$1$0': Const('quorum__acceptor0_acceptor1', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), 'acceptor$0$member$0$1': Const('acceptor1', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), 'quorum$0$member$1$1': Const('quorum__acceptor0_acceptor1', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), 'acceptor$0$member$0$2': Const('acceptor0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), 'quorum$0$member$1$2': Const('quorum__acceptor0_acceptor2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), 'acceptor$0$member$0$3': Const('acceptor2', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), 'quorum$0$member$1$3': Const('quorum__acceptor0_acceptor2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), 'acceptor$0$member$0$4': Const('acceptor1', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), 'quorum$0$member$1$4': Const('quorum__acceptor1_acceptor2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), 'acceptor$0$member$0$5': Const('acceptor2', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), 'quorum$0$member$1$5': Const('quorum__acceptor1_acceptor2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), 'acceptor$1$member$0$0': Const('acceptor2', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), 'quorum$1$member$1$0': Const('quorum__acceptor0_acceptor1', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), 'acceptor$1$member$0$1': Const('acceptor1', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), 'quorum$1$member$1$1': Const('quorum__acceptor0_acceptor2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), 'acceptor$1$member$0$2': Const('acceptor0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), 'quorum$1$member$1$2': Const('quorum__acceptor1_acceptor2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')))}


---------- ArgPartition ----------

sort2class_sigs: {EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')): [quorum$0$member$1$0; quorum$0$member$1$1; quorum$1$chosenAt$0$0; quorum$1$member$1$0, quorum$0$member$1$2; quorum$0$member$1$3; quorum$1$chosenAt$0$1; quorum$1$member$1$1, quorum$0$member$1$4; quorum$0$member$1$5; quorum$1$chosenAt$0$2; quorum$1$member$1$2], EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')): [proposer$1$chosenAt$1$0; proposer$1$chosenAt$1$1, proposer$1$chosenAt$1$2; proposer$1$promise$1$0, proposer$1$start$0$0], EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')): [acceptor$0$member$0$0; acceptor$0$member$0$2; acceptor$1$didNotPromise$0$0; acceptor$1$member$0$2; acceptor$1$promise$0$0, acceptor$0$member$0$1; acceptor$0$member$0$4; acceptor$1$didNotPromise$0$1; acceptor$1$member$0$1, acceptor$0$member$0$3; acceptor$0$member$0$5; acceptor$1$didNotPromise$0$2; acceptor$1$member$0$0]}

sort2part_sig: {EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')): quorum$0$member$1$0; quorum$0$member$1$1; quorum$1$chosenAt$0$0; quorum$1$member$1$0 | quorum$0$member$1$2; quorum$0$member$1$3; quorum$1$chosenAt$0$1; quorum$1$member$1$1 | quorum$0$member$1$4; quorum$0$member$1$5; quorum$1$chosenAt$0$2; quorum$1$member$1$2, EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')): proposer$1$chosenAt$1$0; proposer$1$chosenAt$1$1 | proposer$1$chosenAt$1$2; proposer$1$promise$1$0 | proposer$1$start$0$0, EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')): acceptor$0$member$0$0; acceptor$0$member$0$2; acceptor$1$didNotPromise$0$0; acceptor$1$member$0$2; acceptor$1$promise$0$0 | acceptor$0$member$0$1; acceptor$0$member$0$4; acceptor$1$didNotPromise$0$1; acceptor$1$member$0$1 | acceptor$0$member$0$3; acceptor$0$member$0$5; acceptor$1$didNotPromise$0$2; acceptor$1$member$0$0}

part_sig: ('acceptor$0$member$0$0; acceptor$0$member$0$2; acceptor$1$didNotPromise$0$0; acceptor$1$member$0$2; acceptor$1$promise$0$0 | acceptor$0$member$0$1; acceptor$0$member$0$4; acceptor$1$didNotPromise$0$1; acceptor$1$member$0$1 | acceptor$0$member$0$3; acceptor$0$member$0$5; acceptor$1$didNotPromise$0$2; acceptor$1$member$0$0', 'proposer$1$chosenAt$1$0; proposer$1$chosenAt$1$1 | proposer$1$chosenAt$1$2; proposer$1$promise$1$0 | proposer$1$start$0$0', 'quorum$0$member$1$0; quorum$0$member$1$1; quorum$1$chosenAt$0$0; quorum$1$member$1$0 | quorum$0$member$1$2; quorum$0$member$1$3; quorum$1$chosenAt$0$1; quorum$1$member$1$1 | quorum$0$member$1$4; quorum$0$member$1$5; quorum$1$chosenAt$0$2; quorum$1$member$1$2')


---------- SigGenerator ----------

terms:  ['~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor0,proposer2)', '~start(proposer1)', 'member(acceptor0,quorum__acceptor0_acceptor1)', 'member(acceptor1,quorum__acceptor0_acceptor1)', '~member(acceptor2,quorum__acceptor0_acceptor1)', 'member(acceptor0,quorum__acceptor0_acceptor2)', '~member(acceptor1,quorum__acceptor0_acceptor2)', 'member(acceptor2,quorum__acceptor0_acceptor2)', '~member(acceptor0,quorum__acceptor1_acceptor2)', 'member(acceptor1,quorum__acceptor1_acceptor2)', 'member(acceptor2,quorum__acceptor1_acceptor2)']

func_name2symbol:  {'chosenAt': Const('chosenAt', FunctionSort(EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')), EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')), BooleanSort())), 'didNotPromise': Const('didNotPromise', FunctionSort(EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')), BooleanSort())), 'promise': Const('promise', FunctionSort(EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')), EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')), BooleanSort())), 'start': Const('start', FunctionSort(EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')), BooleanSort())), 'member': Const('member', FunctionSort(EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')), EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')), BooleanSort()))}

func_name2args_sort:  {'chosenAt': (EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')), EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))), 'didNotPromise': (EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')),), 'promise': (EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')), EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))), 'start': (EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')),), 'member': (EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')), EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')))}

sign_func_name2count:  {'1$chosenAt': 3, '1$didNotPromise': 3, '1$promise': 1, '1$start': 1, '0$member': 6, '1$member': 3}


---------- ProductArgPartition ----------

sort2class_sigs: {EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')): [quorum$0$member$1$0; quorum$0$member$1$1; quorum$1$chosenAt$0$0; quorum$1$member$1$0, quorum$0$member$1$2; quorum$0$member$1$3; quorum$1$chosenAt$0$1; quorum$1$member$1$1, quorum$0$member$1$4; quorum$0$member$1$5; quorum$1$chosenAt$0$2; quorum$1$member$1$2], EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')): [proposer$1$chosenAt$1$0; proposer$1$chosenAt$1$1, proposer$1$chosenAt$1$2; proposer$1$promise$1$0, proposer$1$start$0$0], EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')): [acceptor$0$member$0$0; acceptor$0$member$0$2; acceptor$1$didNotPromise$0$0; acceptor$1$member$0$2; acceptor$1$promise$0$0, acceptor$0$member$0$1; acceptor$0$member$0$4; acceptor$1$didNotPromise$0$1; acceptor$1$member$0$1, acceptor$0$member$0$3; acceptor$0$member$0$5; acceptor$1$didNotPromise$0$2; acceptor$1$member$0$0]}

sort2part_sig: {EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')): quorum$0$member$1$0; quorum$0$member$1$1; quorum$1$chosenAt$0$0; quorum$1$member$1$0 | quorum$0$member$1$2; quorum$0$member$1$3; quorum$1$chosenAt$0$1; quorum$1$member$1$1 | quorum$0$member$1$4; quorum$0$member$1$5; quorum$1$chosenAt$0$2; quorum$1$member$1$2, EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')): proposer$1$chosenAt$1$0; proposer$1$chosenAt$1$1 | proposer$1$chosenAt$1$2; proposer$1$promise$1$0 | proposer$1$start$0$0, EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')): acceptor$0$member$0$0; acceptor$0$member$0$2; acceptor$1$didNotPromise$0$0; acceptor$1$member$0$2; acceptor$1$promise$0$0 | acceptor$0$member$0$1; acceptor$0$member$0$4; acceptor$1$didNotPromise$0$1; acceptor$1$member$0$1 | acceptor$0$member$0$3; acceptor$0$member$0$5; acceptor$1$didNotPromise$0$2; acceptor$1$member$0$0}

	sort: quorum

	identical_classes: {'quorum$0$member$1; quorum$0$member$1; quorum$1$chosenAt$0; quorum$1$member$1': [quorum$0$member$1$0; quorum$0$member$1$1; quorum$1$chosenAt$0$0; quorum$1$member$1$0, quorum$0$member$1$2; quorum$0$member$1$3; quorum$1$chosenAt$0$1; quorum$1$member$1$1, quorum$0$member$1$4; quorum$0$member$1$5; quorum$1$chosenAt$0$2; quorum$1$member$1$2]}

	identical_single_classes: {}

	identical_multi_classes: {'quorum$0$member$1; quorum$0$member$1; quorum$1$chosenAt$0; quorum$1$member$1': [quorum$0$member$1$0, quorum$0$member$1$1, quorum$1$chosenAt$0$0, quorum$1$member$1$0, quorum$0$member$1$2, quorum$0$member$1$3, quorum$1$chosenAt$0$1, quorum$1$member$1$1, quorum$0$member$1$4, quorum$0$member$1$5, quorum$1$chosenAt$0$2, quorum$1$member$1$2]}

	sort: proposer

	identical_classes: {'proposer$1$chosenAt$1; proposer$1$chosenAt$1': [proposer$1$chosenAt$1$0; proposer$1$chosenAt$1$1], 'proposer$1$chosenAt$1; proposer$1$promise$1': [proposer$1$chosenAt$1$2; proposer$1$promise$1$0], 'proposer$1$start$0': [proposer$1$start$0$0]}

	identical_single_classes: {'proposer$1$chosenAt$1; proposer$1$chosenAt$1': proposer$1$chosenAt$1$0; proposer$1$chosenAt$1$1, 'proposer$1$chosenAt$1; proposer$1$promise$1': proposer$1$chosenAt$1$2; proposer$1$promise$1$0, 'proposer$1$start$0': proposer$1$start$0$0}

	identical_multi_classes: {}

	sort: acceptor

	identical_classes: {'acceptor$0$member$0; acceptor$0$member$0; acceptor$1$didNotPromise$0; acceptor$1$member$0; acceptor$1$promise$0': [acceptor$0$member$0$0; acceptor$0$member$0$2; acceptor$1$didNotPromise$0$0; acceptor$1$member$0$2; acceptor$1$promise$0$0], 'acceptor$0$member$0; acceptor$0$member$0; acceptor$1$didNotPromise$0; acceptor$1$member$0': [acceptor$0$member$0$1; acceptor$0$member$0$4; acceptor$1$didNotPromise$0$1; acceptor$1$member$0$1, acceptor$0$member$0$3; acceptor$0$member$0$5; acceptor$1$didNotPromise$0$2; acceptor$1$member$0$0]}

	identical_single_classes: {'acceptor$0$member$0; acceptor$0$member$0; acceptor$1$didNotPromise$0; acceptor$1$member$0; acceptor$1$promise$0': acceptor$0$member$0$0; acceptor$0$member$0$2; acceptor$1$didNotPromise$0$0; acceptor$1$member$0$2; acceptor$1$promise$0$0}

	identical_multi_classes: {'acceptor$0$member$0; acceptor$0$member$0; acceptor$1$didNotPromise$0; acceptor$1$member$0': [acceptor$0$member$0$1, acceptor$0$member$0$4, acceptor$1$didNotPromise$0$1, acceptor$1$member$0$1, acceptor$0$member$0$3, acceptor$0$member$0$5, acceptor$1$didNotPromise$0$2, acceptor$1$member$0$0]}


---------- QInference: _set_sort_to_quantifier_mode ----------

quantifier mode: quorum: QuantifierMode.forall

quantifier mode: proposer: QuantifierMode.forall

quantifier mode: acceptor: QuantifierMode.forall


---------- QInference: _set_constraint_mode ----------

constraint mode: ConstraintMode.no_merge


---------- QFormula: _set_qvars ----------

forall_qvars: {Var('QUORUM2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), Var('PROPOSER2', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))), Var('ACCEPTOR1', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Var('PROPOSER0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))), Var('QUORUM0', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), Var('QUORUM1', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), Var('ACCEPTOR2', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Var('PROPOSER1', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))), Var('ACCEPTOR0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')))}

exists_qvars: set()


---------- QFormula: _set_signed_func_name_to_args ----------

signed_func_name2args: {'1$chosenAt': [[Var('QUORUM0', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), Var('PROPOSER0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))], [Var('QUORUM1', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), Var('PROPOSER0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))], [Var('QUORUM2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), Var('PROPOSER1', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))]], '1$didNotPromise': [[Var('ACCEPTOR0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')))], [Var('ACCEPTOR1', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')))], [Var('ACCEPTOR2', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')))]], '1$promise': [[Var('ACCEPTOR0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Var('PROPOSER1', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))]], '1$start': [[Var('PROPOSER2', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))]], '0$member': [[Var('ACCEPTOR0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Var('QUORUM0', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')))], [Var('ACCEPTOR1', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Var('QUORUM0', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')))], [Var('ACCEPTOR0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Var('QUORUM1', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')))], [Var('ACCEPTOR2', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Var('QUORUM1', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')))], [Var('ACCEPTOR1', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Var('QUORUM2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')))], [Var('ACCEPTOR2', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Var('QUORUM2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')))]], '1$member': [[Var('ACCEPTOR2', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Var('QUORUM0', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')))], [Var('ACCEPTOR1', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Var('QUORUM1', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')))], [Var('ACCEPTOR0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Var('QUORUM2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')))]]}


---------- QFormula: _set_qterms ----------

qterms: ['~didNotPromise(ACCEPTOR2)', '~chosenAt(QUORUM2,PROPOSER1)', 'member(ACCEPTOR2,QUORUM1)', '~promise(ACCEPTOR0,PROPOSER1)', '~didNotPromise(ACCEPTOR0)', '~start(PROPOSER2)', 'member(ACCEPTOR0,QUORUM1)', 'member(ACCEPTOR1,QUORUM0)', 'member(ACCEPTOR0,QUORUM0)', 'member(ACCEPTOR1,QUORUM2)', 'member(ACCEPTOR2,QUORUM2)', '~member(ACCEPTOR0,QUORUM2)', '~member(ACCEPTOR1,QUORUM1)', '~chosenAt(QUORUM1,PROPOSER0)', '~chosenAt(QUORUM0,PROPOSER0)', '~didNotPromise(ACCEPTOR1)', '~member(ACCEPTOR2,QUORUM0)']


---------- QFormula: get_qclause ----------

qclause: forall PROPOSER1,PROPOSER2,QUORUM2,ACCEPTOR2,ACCEPTOR0,PROPOSER0,QUORUM0,ACCEPTOR1,QUORUM1. didNotPromise(ACCEPTOR2) | chosenAt(QUORUM2,PROPOSER1) | ~member(ACCEPTOR2,QUORUM1) | promise(ACCEPTOR0,PROPOSER1) | didNotPromise(ACCEPTOR0) | start(PROPOSER2) | ~member(ACCEPTOR0,QUORUM1) | ~member(ACCEPTOR1,QUORUM0) | ~member(ACCEPTOR0,QUORUM0) | ~member(ACCEPTOR1,QUORUM2) | ~member(ACCEPTOR2,QUORUM2) | member(ACCEPTOR0,QUORUM2) | member(ACCEPTOR1,QUORUM1) | chosenAt(QUORUM1,PROPOSER0) | chosenAt(QUORUM0,PROPOSER0) | didNotPromise(ACCEPTOR1) | member(ACCEPTOR2,QUORUM0) | (QUORUM1 = QUORUM2 | PROPOSER0 = PROPOSER2 | PROPOSER1 = PROPOSER2 | ACCEPTOR0 = ACCEPTOR1 | ACCEPTOR1 = ACCEPTOR2 | PROPOSER0 = PROPOSER1 | QUORUM0 = QUORUM2 | QUORUM0 = QUORUM1 | ACCEPTOR0 = ACCEPTOR2)


=== Prime Orbit 48 =====================
size : 18
num_suborbits: 1
789 (*) : 0-------0000-----0---0---0-
789     : ['~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor0,proposer2)', '~promise(acceptor2,proposer0)', '~start(proposer1)']
790     : 0------0-000----0----0----0
790     : ['~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor0,proposer1)', '~promise(acceptor2,proposer0)', '~start(proposer2)']
791     : -0------0000-----0----0-0--
791     : ['~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor0,proposer2)', '~promise(acceptor2,proposer1)', '~start(proposer0)']
792     : -0----0--000---0------0---0
792     : ['~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor0,proposer0)', '~promise(acceptor2,proposer1)', '~start(proposer2)']
793     : --0----0-000----0------00--
793     : ['~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor0,proposer1)', '~promise(acceptor2,proposer2)', '~start(proposer0)']
794     : --0---0--000---0-------0-0-
794     : ['~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor0,proposer0)', '~promise(acceptor2,proposer2)', '~start(proposer1)']
795     : ---0----0000-----00------0-
795     : ['~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor0,proposer2)', '~promise(acceptor1,proposer0)', '~start(proposer1)']
796     : ---0---0-000----0-0-------0
796     : ['~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor0,proposer1)', '~promise(acceptor1,proposer0)', '~start(proposer2)']
797     : ----0---0000-----0-0----0--
797     : ['~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor0,proposer2)', '~promise(acceptor1,proposer1)', '~start(proposer0)']
798     : ----0-0--000---0---0------0
798     : ['~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor0,proposer0)', '~promise(acceptor1,proposer1)', '~start(proposer2)']
799     : -----0-0-000----0---0---0--
799     : ['~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor0,proposer1)', '~promise(acceptor1,proposer2)', '~start(proposer0)']
800     : -----00--000---0----0----0-
800     : ['~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor0,proposer0)', '~promise(acceptor1,proposer2)', '~start(proposer1)']
801     : 0----0---000--------00---0-
801     : ['~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor1,proposer2)', '~promise(acceptor2,proposer0)', '~start(proposer1)']
802     : 0---0----000-------0-0----0
802     : ['~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor1,proposer1)', '~promise(acceptor2,proposer0)', '~start(proposer2)']
803     : -0---0---000--------0-0-0--
803     : ['~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor1,proposer2)', '~promise(acceptor2,proposer1)', '~start(proposer0)']
804     : -0-0-----000------0---0---0
804     : ['~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor1,proposer0)', '~promise(acceptor2,proposer1)', '~start(proposer2)']
805     : --0-0----000-------0---00--
805     : ['~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor1,proposer1)', '~promise(acceptor2,proposer2)', '~start(proposer0)']
806     : --00-----000------0----0-0-
806     : ['~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor1,proposer0)', '~promise(acceptor2,proposer2)', '~start(proposer1)']
num_forall :   0
num_exists :   0
num_literals : 0
quantified form : None
qcost : 0




---------- QPrime ----------


---------- ConstArgBinding ----------

terms: ['~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor0,proposer2)', '~promise(acceptor2,proposer0)', '~start(proposer1)', 'member(acceptor0,quorum__acceptor0_acceptor1)', 'member(acceptor1,quorum__acceptor0_acceptor1)', '~member(acceptor2,quorum__acceptor0_acceptor1)', '~member(acceptor0,quorum__acceptor1_acceptor2)', 'member(acceptor1,quorum__acceptor1_acceptor2)', 'member(acceptor2,quorum__acceptor1_acceptor2)']

sign_func_name2args: {'1$chosenAt': [(Const('quorum__acceptor0_acceptor1', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), Const('proposer0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))), (Const('quorum__acceptor1_acceptor2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), Const('proposer2', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))))], '1$didNotPromise': [(Const('acceptor0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))),), (Const('acceptor1', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))),), (Const('acceptor2', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))),)], '1$promise': [(Const('acceptor0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Const('proposer2', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))), (Const('acceptor2', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Const('proposer0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))))], '1$start': [(Const('proposer1', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))),)], '0$member': [(Const('acceptor0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Const('quorum__acceptor0_acceptor1', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')))), (Const('acceptor1', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Const('quorum__acceptor0_acceptor1', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')))), (Const('acceptor1', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Const('quorum__acceptor1_acceptor2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')))), (Const('acceptor2', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Const('quorum__acceptor1_acceptor2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))))], '1$member': [(Const('acceptor2', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Const('quorum__acceptor0_acceptor1', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')))), (Const('acceptor0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Const('quorum__acceptor1_acceptor2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))))]}

const2sigs: {Const('quorum__acceptor0_acceptor1', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))): [quorum$1$chosenAt$0$0, quorum$0$member$1$0, quorum$0$member$1$1, quorum$1$member$1$0], Const('proposer0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))): [proposer$1$chosenAt$1$0, proposer$1$promise$1$1], Const('quorum__acceptor1_acceptor2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))): [quorum$1$chosenAt$0$1, quorum$0$member$1$2, quorum$0$member$1$3, quorum$1$member$1$1], Const('proposer2', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))): [proposer$1$chosenAt$1$1, proposer$1$promise$1$0], Const('acceptor0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))): [acceptor$1$didNotPromise$0$0, acceptor$1$promise$0$0, acceptor$0$member$0$0, acceptor$1$member$0$1], Const('acceptor1', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))): [acceptor$1$didNotPromise$0$1, acceptor$0$member$0$1, acceptor$0$member$0$2], Const('acceptor2', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))): [acceptor$1$didNotPromise$0$2, acceptor$1$promise$0$1, acceptor$0$member$0$3, acceptor$1$member$0$0], Const('proposer1', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))): [proposer$1$start$0$0]}

sig2const: {'quorum$1$chosenAt$0$0': Const('quorum__acceptor0_acceptor1', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), 'proposer$1$chosenAt$1$0': Const('proposer0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))), 'quorum$1$chosenAt$0$1': Const('quorum__acceptor1_acceptor2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), 'proposer$1$chosenAt$1$1': Const('proposer2', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))), 'acceptor$1$didNotPromise$0$0': Const('acceptor0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), 'acceptor$1$didNotPromise$0$1': Const('acceptor1', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), 'acceptor$1$didNotPromise$0$2': Const('acceptor2', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), 'acceptor$1$promise$0$0': Const('acceptor0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), 'proposer$1$promise$1$0': Const('proposer2', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))), 'acceptor$1$promise$0$1': Const('acceptor2', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), 'proposer$1$promise$1$1': Const('proposer0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))), 'proposer$1$start$0$0': Const('proposer1', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))), 'acceptor$0$member$0$0': Const('acceptor0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), 'quorum$0$member$1$0': Const('quorum__acceptor0_acceptor1', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), 'acceptor$0$member$0$1': Const('acceptor1', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), 'quorum$0$member$1$1': Const('quorum__acceptor0_acceptor1', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), 'acceptor$0$member$0$2': Const('acceptor1', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), 'quorum$0$member$1$2': Const('quorum__acceptor1_acceptor2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), 'acceptor$0$member$0$3': Const('acceptor2', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), 'quorum$0$member$1$3': Const('quorum__acceptor1_acceptor2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), 'acceptor$1$member$0$0': Const('acceptor2', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), 'quorum$1$member$1$0': Const('quorum__acceptor0_acceptor1', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), 'acceptor$1$member$0$1': Const('acceptor0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), 'quorum$1$member$1$1': Const('quorum__acceptor1_acceptor2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')))}


---------- ArgPartition ----------

sort2class_sigs: {EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')): [quorum$0$member$1$0; quorum$0$member$1$1; quorum$1$chosenAt$0$0; quorum$1$member$1$0, quorum$0$member$1$2; quorum$0$member$1$3; quorum$1$chosenAt$0$1; quorum$1$member$1$1], EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')): [proposer$1$chosenAt$1$0; proposer$1$promise$1$1, proposer$1$chosenAt$1$1; proposer$1$promise$1$0, proposer$1$start$0$0], EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')): [acceptor$0$member$0$0; acceptor$1$didNotPromise$0$0; acceptor$1$member$0$1; acceptor$1$promise$0$0, acceptor$0$member$0$1; acceptor$0$member$0$2; acceptor$1$didNotPromise$0$1, acceptor$0$member$0$3; acceptor$1$didNotPromise$0$2; acceptor$1$member$0$0; acceptor$1$promise$0$1]}

sort2part_sig: {EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')): quorum$0$member$1$0; quorum$0$member$1$1; quorum$1$chosenAt$0$0; quorum$1$member$1$0 | quorum$0$member$1$2; quorum$0$member$1$3; quorum$1$chosenAt$0$1; quorum$1$member$1$1, EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')): proposer$1$chosenAt$1$0; proposer$1$promise$1$1 | proposer$1$chosenAt$1$1; proposer$1$promise$1$0 | proposer$1$start$0$0, EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')): acceptor$0$member$0$0; acceptor$1$didNotPromise$0$0; acceptor$1$member$0$1; acceptor$1$promise$0$0 | acceptor$0$member$0$1; acceptor$0$member$0$2; acceptor$1$didNotPromise$0$1 | acceptor$0$member$0$3; acceptor$1$didNotPromise$0$2; acceptor$1$member$0$0; acceptor$1$promise$0$1}

part_sig: ('acceptor$0$member$0$0; acceptor$1$didNotPromise$0$0; acceptor$1$member$0$1; acceptor$1$promise$0$0 | acceptor$0$member$0$1; acceptor$0$member$0$2; acceptor$1$didNotPromise$0$1 | acceptor$0$member$0$3; acceptor$1$didNotPromise$0$2; acceptor$1$member$0$0; acceptor$1$promise$0$1', 'proposer$1$chosenAt$1$0; proposer$1$promise$1$1 | proposer$1$chosenAt$1$1; proposer$1$promise$1$0 | proposer$1$start$0$0', 'quorum$0$member$1$0; quorum$0$member$1$1; quorum$1$chosenAt$0$0; quorum$1$member$1$0 | quorum$0$member$1$2; quorum$0$member$1$3; quorum$1$chosenAt$0$1; quorum$1$member$1$1')


---------- SigGenerator ----------

terms:  ['~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor0,proposer2)', '~promise(acceptor2,proposer0)', '~start(proposer1)', 'member(acceptor0,quorum__acceptor0_acceptor1)', 'member(acceptor1,quorum__acceptor0_acceptor1)', '~member(acceptor2,quorum__acceptor0_acceptor1)', '~member(acceptor0,quorum__acceptor1_acceptor2)', 'member(acceptor1,quorum__acceptor1_acceptor2)', 'member(acceptor2,quorum__acceptor1_acceptor2)']

func_name2symbol:  {'chosenAt': Const('chosenAt', FunctionSort(EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')), EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')), BooleanSort())), 'didNotPromise': Const('didNotPromise', FunctionSort(EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')), BooleanSort())), 'promise': Const('promise', FunctionSort(EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')), EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')), BooleanSort())), 'start': Const('start', FunctionSort(EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')), BooleanSort())), 'member': Const('member', FunctionSort(EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')), EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')), BooleanSort()))}

func_name2args_sort:  {'chosenAt': (EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')), EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))), 'didNotPromise': (EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')),), 'promise': (EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')), EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))), 'start': (EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')),), 'member': (EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')), EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')))}

sign_func_name2count:  {'1$chosenAt': 2, '1$didNotPromise': 3, '1$promise': 2, '1$start': 1, '0$member': 4, '1$member': 2}


---------- ProductArgPartition ----------

sort2class_sigs: {EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')): [quorum$0$member$1$0; quorum$0$member$1$1; quorum$1$chosenAt$0$0; quorum$1$member$1$0, quorum$0$member$1$2; quorum$0$member$1$3; quorum$1$chosenAt$0$1; quorum$1$member$1$1], EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')): [proposer$1$chosenAt$1$0; proposer$1$promise$1$1, proposer$1$chosenAt$1$1; proposer$1$promise$1$0, proposer$1$start$0$0], EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')): [acceptor$0$member$0$0; acceptor$1$didNotPromise$0$0; acceptor$1$member$0$1; acceptor$1$promise$0$0, acceptor$0$member$0$1; acceptor$0$member$0$2; acceptor$1$didNotPromise$0$1, acceptor$0$member$0$3; acceptor$1$didNotPromise$0$2; acceptor$1$member$0$0; acceptor$1$promise$0$1]}

sort2part_sig: {EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')): quorum$0$member$1$0; quorum$0$member$1$1; quorum$1$chosenAt$0$0; quorum$1$member$1$0 | quorum$0$member$1$2; quorum$0$member$1$3; quorum$1$chosenAt$0$1; quorum$1$member$1$1, EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')): proposer$1$chosenAt$1$0; proposer$1$promise$1$1 | proposer$1$chosenAt$1$1; proposer$1$promise$1$0 | proposer$1$start$0$0, EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')): acceptor$0$member$0$0; acceptor$1$didNotPromise$0$0; acceptor$1$member$0$1; acceptor$1$promise$0$0 | acceptor$0$member$0$1; acceptor$0$member$0$2; acceptor$1$didNotPromise$0$1 | acceptor$0$member$0$3; acceptor$1$didNotPromise$0$2; acceptor$1$member$0$0; acceptor$1$promise$0$1}

	sort: quorum

	identical_classes: {'quorum$0$member$1; quorum$0$member$1; quorum$1$chosenAt$0; quorum$1$member$1': [quorum$0$member$1$0; quorum$0$member$1$1; quorum$1$chosenAt$0$0; quorum$1$member$1$0, quorum$0$member$1$2; quorum$0$member$1$3; quorum$1$chosenAt$0$1; quorum$1$member$1$1]}

	identical_single_classes: {}

	identical_multi_classes: {'quorum$0$member$1; quorum$0$member$1; quorum$1$chosenAt$0; quorum$1$member$1': [quorum$0$member$1$0, quorum$0$member$1$1, quorum$1$chosenAt$0$0, quorum$1$member$1$0, quorum$0$member$1$2, quorum$0$member$1$3, quorum$1$chosenAt$0$1, quorum$1$member$1$1]}

	sort: proposer

	identical_classes: {'proposer$1$chosenAt$1; proposer$1$promise$1': [proposer$1$chosenAt$1$0; proposer$1$promise$1$1, proposer$1$chosenAt$1$1; proposer$1$promise$1$0], 'proposer$1$start$0': [proposer$1$start$0$0]}

	identical_single_classes: {'proposer$1$start$0': proposer$1$start$0$0}

	identical_multi_classes: {'proposer$1$chosenAt$1; proposer$1$promise$1': [proposer$1$chosenAt$1$0, proposer$1$promise$1$1, proposer$1$chosenAt$1$1, proposer$1$promise$1$0]}

	sort: acceptor

	identical_classes: {'acceptor$0$member$0; acceptor$1$didNotPromise$0; acceptor$1$member$0; acceptor$1$promise$0': [acceptor$0$member$0$0; acceptor$1$didNotPromise$0$0; acceptor$1$member$0$1; acceptor$1$promise$0$0, acceptor$0$member$0$3; acceptor$1$didNotPromise$0$2; acceptor$1$member$0$0; acceptor$1$promise$0$1], 'acceptor$0$member$0; acceptor$0$member$0; acceptor$1$didNotPromise$0': [acceptor$0$member$0$1; acceptor$0$member$0$2; acceptor$1$didNotPromise$0$1]}

	identical_single_classes: {'acceptor$0$member$0; acceptor$0$member$0; acceptor$1$didNotPromise$0': acceptor$0$member$0$1; acceptor$0$member$0$2; acceptor$1$didNotPromise$0$1}

	identical_multi_classes: {'acceptor$0$member$0; acceptor$1$didNotPromise$0; acceptor$1$member$0; acceptor$1$promise$0': [acceptor$0$member$0$0, acceptor$1$didNotPromise$0$0, acceptor$1$member$0$1, acceptor$1$promise$0$0, acceptor$0$member$0$3, acceptor$1$didNotPromise$0$2, acceptor$1$member$0$0, acceptor$1$promise$0$1]}


---------- QInference: _set_sort_to_quantifier_mode ----------

quantifier mode: quorum: QuantifierMode.forall

quantifier mode: proposer: QuantifierMode.forall

quantifier mode: acceptor: QuantifierMode.forall


---------- QInference: _set_constraint_mode ----------

constraint mode: ConstraintMode.no_merge


---------- QFormula: _set_qvars ----------

forall_qvars: {Var('ACCEPTOR1', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Var('PROPOSER2', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))), Var('PROPOSER0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))), Var('QUORUM0', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), Var('QUORUM1', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), Var('ACCEPTOR2', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Var('PROPOSER1', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))), Var('ACCEPTOR0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')))}

exists_qvars: set()


---------- QFormula: _set_signed_func_name_to_args ----------

signed_func_name2args: {'1$chosenAt': [[Var('QUORUM0', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), Var('PROPOSER0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))], [Var('QUORUM1', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), Var('PROPOSER1', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))]], '1$didNotPromise': [[Var('ACCEPTOR0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')))], [Var('ACCEPTOR1', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')))], [Var('ACCEPTOR2', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')))]], '1$promise': [[Var('ACCEPTOR0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Var('PROPOSER1', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))], [Var('ACCEPTOR2', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Var('PROPOSER0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))]], '1$start': [[Var('PROPOSER2', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))]], '0$member': [[Var('ACCEPTOR0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Var('QUORUM0', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')))], [Var('ACCEPTOR1', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Var('QUORUM0', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')))], [Var('ACCEPTOR1', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Var('QUORUM1', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')))], [Var('ACCEPTOR2', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Var('QUORUM1', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')))]], '1$member': [[Var('ACCEPTOR2', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Var('QUORUM0', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')))], [Var('ACCEPTOR0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Var('QUORUM1', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')))]]}


---------- QFormula: _set_qterms ----------

qterms: ['~didNotPromise(ACCEPTOR2)', 'member(ACCEPTOR1,QUORUM1)', 'member(ACCEPTOR2,QUORUM1)', '~promise(ACCEPTOR0,PROPOSER1)', '~promise(ACCEPTOR2,PROPOSER0)', '~didNotPromise(ACCEPTOR0)', '~start(PROPOSER2)', 'member(ACCEPTOR1,QUORUM0)', '~member(ACCEPTOR0,QUORUM1)', 'member(ACCEPTOR0,QUORUM0)', '~chosenAt(QUORUM0,PROPOSER0)', '~chosenAt(QUORUM1,PROPOSER1)', '~didNotPromise(ACCEPTOR1)', '~member(ACCEPTOR2,QUORUM0)']


---------- QFormula: get_qclause ----------

qclause: forall PROPOSER1,PROPOSER2,ACCEPTOR2,ACCEPTOR0,PROPOSER0,QUORUM0,ACCEPTOR1,QUORUM1. didNotPromise(ACCEPTOR2) | ~member(ACCEPTOR1,QUORUM1) | ~member(ACCEPTOR2,QUORUM1) | promise(ACCEPTOR0,PROPOSER1) | promise(ACCEPTOR2,PROPOSER0) | didNotPromise(ACCEPTOR0) | start(PROPOSER2) | ~member(ACCEPTOR1,QUORUM0) | member(ACCEPTOR0,QUORUM1) | ~member(ACCEPTOR0,QUORUM0) | chosenAt(QUORUM0,PROPOSER0) | chosenAt(QUORUM1,PROPOSER1) | didNotPromise(ACCEPTOR1) | member(ACCEPTOR2,QUORUM0) | (PROPOSER0 = PROPOSER2 | ACCEPTOR0 = ACCEPTOR1 | PROPOSER1 = PROPOSER2 | ACCEPTOR1 = ACCEPTOR2 | PROPOSER0 = PROPOSER1 | QUORUM0 = QUORUM1 | ACCEPTOR0 = ACCEPTOR2)


=== Prime Orbit 49 =====================
size : 3
num_suborbits: 1
807 (*) : 0-00-00-0000-------------0-
807     : ['~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~start(proposer1)']
808     : 00-00-00-000--------------0
808     : ['~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~start(proposer2)']
809     : -00-00-00000------------0--
809     : ['~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~start(proposer0)']
num_forall :   0
num_exists :   0
num_literals : 0
quantified form : None
qcost : 0




---------- QPrime ----------


---------- ConstArgBinding ----------

terms: ['~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~start(proposer1)', 'member(acceptor0,quorum__acceptor0_acceptor1)', 'member(acceptor1,quorum__acceptor0_acceptor1)', '~member(acceptor2,quorum__acceptor0_acceptor1)', 'member(acceptor0,quorum__acceptor0_acceptor2)', '~member(acceptor1,quorum__acceptor0_acceptor2)', 'member(acceptor2,quorum__acceptor0_acceptor2)', '~member(acceptor0,quorum__acceptor1_acceptor2)', 'member(acceptor1,quorum__acceptor1_acceptor2)', 'member(acceptor2,quorum__acceptor1_acceptor2)']

sign_func_name2args: {'1$chosenAt': [(Const('quorum__acceptor0_acceptor1', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), Const('proposer0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))), (Const('quorum__acceptor0_acceptor1', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), Const('proposer2', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))), (Const('quorum__acceptor0_acceptor2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), Const('proposer0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))), (Const('quorum__acceptor0_acceptor2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), Const('proposer2', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))), (Const('quorum__acceptor1_acceptor2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), Const('proposer0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))), (Const('quorum__acceptor1_acceptor2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), Const('proposer2', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))))], '1$didNotPromise': [(Const('acceptor0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))),), (Const('acceptor1', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))),), (Const('acceptor2', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))),)], '1$start': [(Const('proposer1', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))),)], '0$member': [(Const('acceptor0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Const('quorum__acceptor0_acceptor1', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')))), (Const('acceptor1', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Const('quorum__acceptor0_acceptor1', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')))), (Const('acceptor0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Const('quorum__acceptor0_acceptor2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')))), (Const('acceptor2', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Const('quorum__acceptor0_acceptor2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')))), (Const('acceptor1', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Const('quorum__acceptor1_acceptor2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')))), (Const('acceptor2', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Const('quorum__acceptor1_acceptor2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))))], '1$member': [(Const('acceptor2', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Const('quorum__acceptor0_acceptor1', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')))), (Const('acceptor1', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Const('quorum__acceptor0_acceptor2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')))), (Const('acceptor0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Const('quorum__acceptor1_acceptor2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))))]}

const2sigs: {Const('quorum__acceptor0_acceptor1', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))): [quorum$1$chosenAt$0$0, quorum$1$chosenAt$0$1, quorum$0$member$1$0, quorum$0$member$1$1, quorum$1$member$1$0], Const('proposer0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))): [proposer$1$chosenAt$1$0, proposer$1$chosenAt$1$2, proposer$1$chosenAt$1$4], Const('proposer2', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))): [proposer$1$chosenAt$1$1, proposer$1$chosenAt$1$3, proposer$1$chosenAt$1$5], Const('quorum__acceptor0_acceptor2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))): [quorum$1$chosenAt$0$2, quorum$1$chosenAt$0$3, quorum$0$member$1$2, quorum$0$member$1$3, quorum$1$member$1$1], Const('quorum__acceptor1_acceptor2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))): [quorum$1$chosenAt$0$4, quorum$1$chosenAt$0$5, quorum$0$member$1$4, quorum$0$member$1$5, quorum$1$member$1$2], Const('acceptor0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))): [acceptor$1$didNotPromise$0$0, acceptor$0$member$0$0, acceptor$0$member$0$2, acceptor$1$member$0$2], Const('acceptor1', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))): [acceptor$1$didNotPromise$0$1, acceptor$0$member$0$1, acceptor$0$member$0$4, acceptor$1$member$0$1], Const('acceptor2', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))): [acceptor$1$didNotPromise$0$2, acceptor$0$member$0$3, acceptor$0$member$0$5, acceptor$1$member$0$0], Const('proposer1', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))): [proposer$1$start$0$0]}

sig2const: {'quorum$1$chosenAt$0$0': Const('quorum__acceptor0_acceptor1', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), 'proposer$1$chosenAt$1$0': Const('proposer0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))), 'quorum$1$chosenAt$0$1': Const('quorum__acceptor0_acceptor1', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), 'proposer$1$chosenAt$1$1': Const('proposer2', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))), 'quorum$1$chosenAt$0$2': Const('quorum__acceptor0_acceptor2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), 'proposer$1$chosenAt$1$2': Const('proposer0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))), 'quorum$1$chosenAt$0$3': Const('quorum__acceptor0_acceptor2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), 'proposer$1$chosenAt$1$3': Const('proposer2', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))), 'quorum$1$chosenAt$0$4': Const('quorum__acceptor1_acceptor2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), 'proposer$1$chosenAt$1$4': Const('proposer0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))), 'quorum$1$chosenAt$0$5': Const('quorum__acceptor1_acceptor2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), 'proposer$1$chosenAt$1$5': Const('proposer2', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))), 'acceptor$1$didNotPromise$0$0': Const('acceptor0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), 'acceptor$1$didNotPromise$0$1': Const('acceptor1', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), 'acceptor$1$didNotPromise$0$2': Const('acceptor2', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), 'proposer$1$start$0$0': Const('proposer1', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))), 'acceptor$0$member$0$0': Const('acceptor0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), 'quorum$0$member$1$0': Const('quorum__acceptor0_acceptor1', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), 'acceptor$0$member$0$1': Const('acceptor1', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), 'quorum$0$member$1$1': Const('quorum__acceptor0_acceptor1', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), 'acceptor$0$member$0$2': Const('acceptor0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), 'quorum$0$member$1$2': Const('quorum__acceptor0_acceptor2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), 'acceptor$0$member$0$3': Const('acceptor2', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), 'quorum$0$member$1$3': Const('quorum__acceptor0_acceptor2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), 'acceptor$0$member$0$4': Const('acceptor1', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), 'quorum$0$member$1$4': Const('quorum__acceptor1_acceptor2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), 'acceptor$0$member$0$5': Const('acceptor2', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), 'quorum$0$member$1$5': Const('quorum__acceptor1_acceptor2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), 'acceptor$1$member$0$0': Const('acceptor2', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), 'quorum$1$member$1$0': Const('quorum__acceptor0_acceptor1', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), 'acceptor$1$member$0$1': Const('acceptor1', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), 'quorum$1$member$1$1': Const('quorum__acceptor0_acceptor2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), 'acceptor$1$member$0$2': Const('acceptor0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), 'quorum$1$member$1$2': Const('quorum__acceptor1_acceptor2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')))}


---------- ArgPartition ----------

sort2class_sigs: {EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')): [quorum$0$member$1$0; quorum$0$member$1$1; quorum$1$chosenAt$0$0; quorum$1$chosenAt$0$1; quorum$1$member$1$0, quorum$0$member$1$2; quorum$0$member$1$3; quorum$1$chosenAt$0$2; quorum$1$chosenAt$0$3; quorum$1$member$1$1, quorum$0$member$1$4; quorum$0$member$1$5; quorum$1$chosenAt$0$4; quorum$1$chosenAt$0$5; quorum$1$member$1$2], EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')): [proposer$1$chosenAt$1$0; proposer$1$chosenAt$1$2; proposer$1$chosenAt$1$4, proposer$1$chosenAt$1$1; proposer$1$chosenAt$1$3; proposer$1$chosenAt$1$5, proposer$1$start$0$0], EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')): [acceptor$0$member$0$0; acceptor$0$member$0$2; acceptor$1$didNotPromise$0$0; acceptor$1$member$0$2, acceptor$0$member$0$1; acceptor$0$member$0$4; acceptor$1$didNotPromise$0$1; acceptor$1$member$0$1, acceptor$0$member$0$3; acceptor$0$member$0$5; acceptor$1$didNotPromise$0$2; acceptor$1$member$0$0]}

sort2part_sig: {EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')): quorum$0$member$1$0; quorum$0$member$1$1; quorum$1$chosenAt$0$0; quorum$1$chosenAt$0$1; quorum$1$member$1$0 | quorum$0$member$1$2; quorum$0$member$1$3; quorum$1$chosenAt$0$2; quorum$1$chosenAt$0$3; quorum$1$member$1$1 | quorum$0$member$1$4; quorum$0$member$1$5; quorum$1$chosenAt$0$4; quorum$1$chosenAt$0$5; quorum$1$member$1$2, EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')): proposer$1$chosenAt$1$0; proposer$1$chosenAt$1$2; proposer$1$chosenAt$1$4 | proposer$1$chosenAt$1$1; proposer$1$chosenAt$1$3; proposer$1$chosenAt$1$5 | proposer$1$start$0$0, EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')): acceptor$0$member$0$0; acceptor$0$member$0$2; acceptor$1$didNotPromise$0$0; acceptor$1$member$0$2 | acceptor$0$member$0$1; acceptor$0$member$0$4; acceptor$1$didNotPromise$0$1; acceptor$1$member$0$1 | acceptor$0$member$0$3; acceptor$0$member$0$5; acceptor$1$didNotPromise$0$2; acceptor$1$member$0$0}

part_sig: ('acceptor$0$member$0$0; acceptor$0$member$0$2; acceptor$1$didNotPromise$0$0; acceptor$1$member$0$2 | acceptor$0$member$0$1; acceptor$0$member$0$4; acceptor$1$didNotPromise$0$1; acceptor$1$member$0$1 | acceptor$0$member$0$3; acceptor$0$member$0$5; acceptor$1$didNotPromise$0$2; acceptor$1$member$0$0', 'proposer$1$chosenAt$1$0; proposer$1$chosenAt$1$2; proposer$1$chosenAt$1$4 | proposer$1$chosenAt$1$1; proposer$1$chosenAt$1$3; proposer$1$chosenAt$1$5 | proposer$1$start$0$0', 'quorum$0$member$1$0; quorum$0$member$1$1; quorum$1$chosenAt$0$0; quorum$1$chosenAt$0$1; quorum$1$member$1$0 | quorum$0$member$1$2; quorum$0$member$1$3; quorum$1$chosenAt$0$2; quorum$1$chosenAt$0$3; quorum$1$member$1$1 | quorum$0$member$1$4; quorum$0$member$1$5; quorum$1$chosenAt$0$4; quorum$1$chosenAt$0$5; quorum$1$member$1$2')


---------- SigGenerator ----------

terms:  ['~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~start(proposer1)', 'member(acceptor0,quorum__acceptor0_acceptor1)', 'member(acceptor1,quorum__acceptor0_acceptor1)', '~member(acceptor2,quorum__acceptor0_acceptor1)', 'member(acceptor0,quorum__acceptor0_acceptor2)', '~member(acceptor1,quorum__acceptor0_acceptor2)', 'member(acceptor2,quorum__acceptor0_acceptor2)', '~member(acceptor0,quorum__acceptor1_acceptor2)', 'member(acceptor1,quorum__acceptor1_acceptor2)', 'member(acceptor2,quorum__acceptor1_acceptor2)']

func_name2symbol:  {'chosenAt': Const('chosenAt', FunctionSort(EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')), EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')), BooleanSort())), 'didNotPromise': Const('didNotPromise', FunctionSort(EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')), BooleanSort())), 'start': Const('start', FunctionSort(EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')), BooleanSort())), 'member': Const('member', FunctionSort(EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')), EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')), BooleanSort()))}

func_name2args_sort:  {'chosenAt': (EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')), EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))), 'didNotPromise': (EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')),), 'start': (EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')),), 'member': (EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')), EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')))}

sign_func_name2count:  {'1$chosenAt': 6, '1$didNotPromise': 3, '1$start': 1, '0$member': 6, '1$member': 3}


---------- ProductArgPartition ----------

sort2class_sigs: {EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')): [quorum$0$member$1$0; quorum$0$member$1$1; quorum$1$chosenAt$0$0; quorum$1$chosenAt$0$1; quorum$1$member$1$0, quorum$0$member$1$2; quorum$0$member$1$3; quorum$1$chosenAt$0$2; quorum$1$chosenAt$0$3; quorum$1$member$1$1, quorum$0$member$1$4; quorum$0$member$1$5; quorum$1$chosenAt$0$4; quorum$1$chosenAt$0$5; quorum$1$member$1$2], EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')): [proposer$1$chosenAt$1$0; proposer$1$chosenAt$1$2; proposer$1$chosenAt$1$4, proposer$1$chosenAt$1$1; proposer$1$chosenAt$1$3; proposer$1$chosenAt$1$5, proposer$1$start$0$0], EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')): [acceptor$0$member$0$0; acceptor$0$member$0$2; acceptor$1$didNotPromise$0$0; acceptor$1$member$0$2, acceptor$0$member$0$1; acceptor$0$member$0$4; acceptor$1$didNotPromise$0$1; acceptor$1$member$0$1, acceptor$0$member$0$3; acceptor$0$member$0$5; acceptor$1$didNotPromise$0$2; acceptor$1$member$0$0]}

sort2part_sig: {EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')): quorum$0$member$1$0; quorum$0$member$1$1; quorum$1$chosenAt$0$0; quorum$1$chosenAt$0$1; quorum$1$member$1$0 | quorum$0$member$1$2; quorum$0$member$1$3; quorum$1$chosenAt$0$2; quorum$1$chosenAt$0$3; quorum$1$member$1$1 | quorum$0$member$1$4; quorum$0$member$1$5; quorum$1$chosenAt$0$4; quorum$1$chosenAt$0$5; quorum$1$member$1$2, EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')): proposer$1$chosenAt$1$0; proposer$1$chosenAt$1$2; proposer$1$chosenAt$1$4 | proposer$1$chosenAt$1$1; proposer$1$chosenAt$1$3; proposer$1$chosenAt$1$5 | proposer$1$start$0$0, EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')): acceptor$0$member$0$0; acceptor$0$member$0$2; acceptor$1$didNotPromise$0$0; acceptor$1$member$0$2 | acceptor$0$member$0$1; acceptor$0$member$0$4; acceptor$1$didNotPromise$0$1; acceptor$1$member$0$1 | acceptor$0$member$0$3; acceptor$0$member$0$5; acceptor$1$didNotPromise$0$2; acceptor$1$member$0$0}

	sort: quorum

	identical_classes: {'quorum$0$member$1; quorum$0$member$1; quorum$1$chosenAt$0; quorum$1$chosenAt$0; quorum$1$member$1': [quorum$0$member$1$0; quorum$0$member$1$1; quorum$1$chosenAt$0$0; quorum$1$chosenAt$0$1; quorum$1$member$1$0, quorum$0$member$1$2; quorum$0$member$1$3; quorum$1$chosenAt$0$2; quorum$1$chosenAt$0$3; quorum$1$member$1$1, quorum$0$member$1$4; quorum$0$member$1$5; quorum$1$chosenAt$0$4; quorum$1$chosenAt$0$5; quorum$1$member$1$2]}

	identical_single_classes: {}

	identical_multi_classes: {'quorum$0$member$1; quorum$0$member$1; quorum$1$chosenAt$0; quorum$1$chosenAt$0; quorum$1$member$1': [quorum$0$member$1$0, quorum$0$member$1$1, quorum$1$chosenAt$0$0, quorum$1$chosenAt$0$1, quorum$1$member$1$0, quorum$0$member$1$2, quorum$0$member$1$3, quorum$1$chosenAt$0$2, quorum$1$chosenAt$0$3, quorum$1$member$1$1, quorum$0$member$1$4, quorum$0$member$1$5, quorum$1$chosenAt$0$4, quorum$1$chosenAt$0$5, quorum$1$member$1$2]}

	sort: proposer

	identical_classes: {'proposer$1$chosenAt$1; proposer$1$chosenAt$1; proposer$1$chosenAt$1': [proposer$1$chosenAt$1$0; proposer$1$chosenAt$1$2; proposer$1$chosenAt$1$4, proposer$1$chosenAt$1$1; proposer$1$chosenAt$1$3; proposer$1$chosenAt$1$5], 'proposer$1$start$0': [proposer$1$start$0$0]}

	identical_single_classes: {'proposer$1$start$0': proposer$1$start$0$0}

	identical_multi_classes: {'proposer$1$chosenAt$1; proposer$1$chosenAt$1; proposer$1$chosenAt$1': [proposer$1$chosenAt$1$0, proposer$1$chosenAt$1$2, proposer$1$chosenAt$1$4, proposer$1$chosenAt$1$1, proposer$1$chosenAt$1$3, proposer$1$chosenAt$1$5]}

	sort: acceptor

	identical_classes: {'acceptor$0$member$0; acceptor$0$member$0; acceptor$1$didNotPromise$0; acceptor$1$member$0': [acceptor$0$member$0$0; acceptor$0$member$0$2; acceptor$1$didNotPromise$0$0; acceptor$1$member$0$2, acceptor$0$member$0$1; acceptor$0$member$0$4; acceptor$1$didNotPromise$0$1; acceptor$1$member$0$1, acceptor$0$member$0$3; acceptor$0$member$0$5; acceptor$1$didNotPromise$0$2; acceptor$1$member$0$0]}

	identical_single_classes: {}

	identical_multi_classes: {'acceptor$0$member$0; acceptor$0$member$0; acceptor$1$didNotPromise$0; acceptor$1$member$0': [acceptor$0$member$0$0, acceptor$0$member$0$2, acceptor$1$didNotPromise$0$0, acceptor$1$member$0$2, acceptor$0$member$0$1, acceptor$0$member$0$4, acceptor$1$didNotPromise$0$1, acceptor$1$member$0$1, acceptor$0$member$0$3, acceptor$0$member$0$5, acceptor$1$didNotPromise$0$2, acceptor$1$member$0$0]}


---------- QInference: _set_sort_to_quantifier_mode ----------

quantifier mode: quorum: QuantifierMode.forall

quantifier mode: proposer: QuantifierMode.forall_exists

quantifier mode: acceptor: QuantifierMode.forall


---------- QInference: _set_constraint_mode ----------

constraint mode: ConstraintMode.no_merge


---------- QFormula: _set_qvars ----------

forall_qvars: {Var('QUORUM2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), Var('ACCEPTOR1', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Var('QUORUM0', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), Var('QUORUM1', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), Var('ACCEPTOR2', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Var('PROPOSER1', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))), Var('ACCEPTOR0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')))}

exists_qvars: {Var('PROPOSER0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))}


---------- QFormula: _set_signed_func_name_to_args ----------

signed_func_name2args: {'1$chosenAt': [[Var('QUORUM0', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), Var('PROPOSER0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))], [Var('QUORUM0', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), Var('PROPOSER0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))], [Var('QUORUM1', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), Var('PROPOSER0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))], [Var('QUORUM1', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), Var('PROPOSER0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))], [Var('QUORUM2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), Var('PROPOSER0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))], [Var('QUORUM2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), Var('PROPOSER0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))]], '1$didNotPromise': [[Var('ACCEPTOR0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')))], [Var('ACCEPTOR1', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')))], [Var('ACCEPTOR2', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')))]], '1$start': [[Var('PROPOSER1', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))]], '0$member': [[Var('ACCEPTOR0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Var('QUORUM0', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')))], [Var('ACCEPTOR1', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Var('QUORUM0', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')))], [Var('ACCEPTOR0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Var('QUORUM1', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')))], [Var('ACCEPTOR2', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Var('QUORUM1', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')))], [Var('ACCEPTOR1', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Var('QUORUM2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')))], [Var('ACCEPTOR2', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Var('QUORUM2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')))]], '1$member': [[Var('ACCEPTOR2', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Var('QUORUM0', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')))], [Var('ACCEPTOR1', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Var('QUORUM1', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')))], [Var('ACCEPTOR0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Var('QUORUM2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')))]]}


---------- QFormula: _set_qterms ----------

qterms: ['~chosenAt(QUORUM2,PROPOSER0)', '~didNotPromise(ACCEPTOR2)', 'member(ACCEPTOR2,QUORUM1)', '~didNotPromise(ACCEPTOR0)', 'member(ACCEPTOR0,QUORUM1)', 'member(ACCEPTOR1,QUORUM0)', 'member(ACCEPTOR0,QUORUM0)', '~start(PROPOSER1)', 'member(ACCEPTOR1,QUORUM2)', 'member(ACCEPTOR2,QUORUM2)', '~member(ACCEPTOR0,QUORUM2)', '~member(ACCEPTOR1,QUORUM1)', '~chosenAt(QUORUM1,PROPOSER0)', '~chosenAt(QUORUM0,PROPOSER0)', '~didNotPromise(ACCEPTOR1)', '~member(ACCEPTOR2,QUORUM0)']


---------- QFormula: get_qclause ----------

qclause: forall PROPOSER1,QUORUM2,ACCEPTOR2,ACCEPTOR0,QUORUM0,ACCEPTOR1,QUORUM1. didNotPromise(ACCEPTOR2) | ~member(ACCEPTOR2,QUORUM1) | didNotPromise(ACCEPTOR0) | ~member(ACCEPTOR0,QUORUM1) | ~member(ACCEPTOR1,QUORUM0) | ~member(ACCEPTOR0,QUORUM0) | start(PROPOSER1) | ~member(ACCEPTOR1,QUORUM2) | ~member(ACCEPTOR2,QUORUM2) | member(ACCEPTOR0,QUORUM2) | member(ACCEPTOR1,QUORUM1) | didNotPromise(ACCEPTOR1) | member(ACCEPTOR2,QUORUM0) | (exists PROPOSER0. ((chosenAt(QUORUM2,PROPOSER0) | chosenAt(QUORUM1,PROPOSER0) | chosenAt(QUORUM0,PROPOSER0)) & PROPOSER0 ~= PROPOSER1)) | (QUORUM1 = QUORUM2 | ACCEPTOR0 = ACCEPTOR1 | ACCEPTOR1 = ACCEPTOR2 | QUORUM0 = QUORUM2 | QUORUM0 = QUORUM1 | ACCEPTOR0 = ACCEPTOR2)


=======================================================================================================================

	[QI RESULT]: Quantified Prime Orbits on [ivybench/sym_quorum/ivy/simple-election: acceptor=3,proposer=3]

=======================================================================================================================


=== Prime Orbit 7 =====================
size : 9
num_suborbits: 1
96 (*) : ---------------------11----
96     : ['promise(acceptor2,proposer0)', 'promise(acceptor2,proposer1)']
97     : ---------------------1-1---
97     : ['promise(acceptor2,proposer0)', 'promise(acceptor2,proposer2)']
98     : ----------------------11---
98     : ['promise(acceptor2,proposer1)', 'promise(acceptor2,proposer2)']
99     : ------------------11-------
99     : ['promise(acceptor1,proposer0)', 'promise(acceptor1,proposer1)']
100     : ------------------1-1------
100     : ['promise(acceptor1,proposer0)', 'promise(acceptor1,proposer2)']
101     : -------------------11------
101     : ['promise(acceptor1,proposer1)', 'promise(acceptor1,proposer2)']
102     : ---------------11----------
102     : ['promise(acceptor0,proposer0)', 'promise(acceptor0,proposer1)']
103     : ---------------1-1---------
103     : ['promise(acceptor0,proposer0)', 'promise(acceptor0,proposer2)']
104     : ----------------11---------
104     : ['promise(acceptor0,proposer1)', 'promise(acceptor0,proposer2)']
num_forall :   3
num_exists :   0
num_literals : 3
quantified form : forall PROPOSER1,PROPOSER0,ACCEPTOR0. ~promise(ACCEPTOR0,PROPOSER1) | ~promise(ACCEPTOR0,PROPOSER0) | PROPOSER0 = PROPOSER1
qcost : 6




=== Prime Orbit 2 =====================
size : 18
num_suborbits: 1
27 (*) : -1----------1--------------
27     : ['chosenAt(quorum__acceptor0_acceptor1,proposer1)', 'leader(proposer0)']
28     : --1---------1--------------
28     : ['chosenAt(quorum__acceptor0_acceptor1,proposer2)', 'leader(proposer0)']
29     : 1------------1-------------
29     : ['chosenAt(quorum__acceptor0_acceptor1,proposer0)', 'leader(proposer1)']
30     : --1----------1-------------
30     : ['chosenAt(quorum__acceptor0_acceptor1,proposer2)', 'leader(proposer1)']
31     : 1-------------1------------
31     : ['chosenAt(quorum__acceptor0_acceptor1,proposer0)', 'leader(proposer2)']
32     : -1------------1------------
32     : ['chosenAt(quorum__acceptor0_acceptor1,proposer1)', 'leader(proposer2)']
33     : ----1-------1--------------
33     : ['chosenAt(quorum__acceptor0_acceptor2,proposer1)', 'leader(proposer0)']
34     : -----1------1--------------
34     : ['chosenAt(quorum__acceptor0_acceptor2,proposer2)', 'leader(proposer0)']
35     : ---1---------1-------------
35     : ['chosenAt(quorum__acceptor0_acceptor2,proposer0)', 'leader(proposer1)']
36     : -----1-------1-------------
36     : ['chosenAt(quorum__acceptor0_acceptor2,proposer2)', 'leader(proposer1)']
37     : ---1----------1------------
37     : ['chosenAt(quorum__acceptor0_acceptor2,proposer0)', 'leader(proposer2)']
38     : ----1---------1------------
38     : ['chosenAt(quorum__acceptor0_acceptor2,proposer1)', 'leader(proposer2)']
39     : -------1----1--------------
39     : ['chosenAt(quorum__acceptor1_acceptor2,proposer1)', 'leader(proposer0)']
40     : --------1---1--------------
40     : ['chosenAt(quorum__acceptor1_acceptor2,proposer2)', 'leader(proposer0)']
41     : ------1------1-------------
41     : ['chosenAt(quorum__acceptor1_acceptor2,proposer0)', 'leader(proposer1)']
42     : --------1----1-------------
42     : ['chosenAt(quorum__acceptor1_acceptor2,proposer2)', 'leader(proposer1)']
43     : ------1-------1------------
43     : ['chosenAt(quorum__acceptor1_acceptor2,proposer0)', 'leader(proposer2)']
44     : -------1------1------------
44     : ['chosenAt(quorum__acceptor1_acceptor2,proposer1)', 'leader(proposer2)']
num_forall :   3
num_exists :   0
num_literals : 3
quantified form : forall PROPOSER1,PROPOSER0,QUORUM0. ~leader(PROPOSER1) | ~chosenAt(QUORUM0,PROPOSER0) | PROPOSER0 = PROPOSER1
qcost : 6




=== Prime Orbit 3 =====================
size : 3
num_suborbits: 1
45 (*) : ------------1-----------0--
45     : ['leader(proposer0)', '~start(proposer0)']
46     : -------------1-----------0-
46     : ['leader(proposer1)', '~start(proposer1)']
47     : --------------1-----------0
47     : ['leader(proposer2)', '~start(proposer2)']
num_forall :   1
num_exists :   0
num_literals : 2
quantified form : forall PROPOSER0. start(PROPOSER0) | ~leader(PROPOSER0)
qcost : 3




=== Prime Orbit 4 =====================
size : 3
num_suborbits: 1
48 (*) : ------------1-1------------
48     : ['leader(proposer0)', 'leader(proposer2)']
49     : ------------11-------------
49     : ['leader(proposer0)', 'leader(proposer1)']
50     : -------------11------------
50     : ['leader(proposer1)', 'leader(proposer2)']
num_forall :   2
num_exists :   0
num_literals : 3
quantified form : forall PROPOSER1,PROPOSER0. ~leader(PROPOSER0) | ~leader(PROPOSER1) | PROPOSER0 = PROPOSER1
qcost : 5




=== Prime Orbit 5 =====================
size : 9
num_suborbits: 1
51 (*) : ----------------------1--0-
51     : ['promise(acceptor2,proposer1)', '~start(proposer1)']
52     : -----------------------1--0
52     : ['promise(acceptor2,proposer2)', '~start(proposer2)']
53     : ---------------------1--0--
53     : ['promise(acceptor2,proposer0)', '~start(proposer0)']
54     : -------------------1-----0-
54     : ['promise(acceptor1,proposer1)', '~start(proposer1)']
55     : --------------------1-----0
55     : ['promise(acceptor1,proposer2)', '~start(proposer2)']
56     : ------------------1-----0--
56     : ['promise(acceptor1,proposer0)', '~start(proposer0)']
57     : ----------------1--------0-
57     : ['promise(acceptor0,proposer1)', '~start(proposer1)']
58     : -----------------1--------0
58     : ['promise(acceptor0,proposer2)', '~start(proposer2)']
59     : ---------------1--------0--
59     : ['promise(acceptor0,proposer0)', '~start(proposer0)']
num_forall :   2
num_exists :   0
num_literals : 2
quantified form : forall ACCEPTOR0,PROPOSER0. start(PROPOSER0) | ~promise(ACCEPTOR0,PROPOSER0)
qcost : 4




=== Prime Orbit 9 =====================
size : 9
num_suborbits: 1
123 (*) : -1-----------------------0-
123     : ['chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~start(proposer1)']
124     : --1-----------------------0
124     : ['chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~start(proposer2)']
125     : 1-----------------------0--
125     : ['chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~start(proposer0)']
126     : ----1--------------------0-
126     : ['chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~start(proposer1)']
127     : -----1--------------------0
127     : ['chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~start(proposer2)']
128     : ---1--------------------0--
128     : ['chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~start(proposer0)']
129     : -------1-----------------0-
129     : ['chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~start(proposer1)']
130     : --------1-----------------0
130     : ['chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~start(proposer2)']
131     : ------1-----------------0--
131     : ['chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~start(proposer0)']
num_forall :   2
num_exists :   0
num_literals : 2
quantified form : forall PROPOSER0,QUORUM0. start(PROPOSER0) | ~chosenAt(QUORUM0,PROPOSER0)
qcost : 4




=== Prime Orbit 11 =====================
size : 36
num_suborbits: 1
159 (*) : -------------1--0-1--------
159     : ['leader(proposer1)', 'promise(acceptor1,proposer0)', '~promise(acceptor0,proposer1)']
160     : --------------1--01--------
160     : ['leader(proposer2)', 'promise(acceptor1,proposer0)', '~promise(acceptor0,proposer2)']
161     : ------------1--0---1-------
161     : ['leader(proposer0)', 'promise(acceptor1,proposer1)', '~promise(acceptor0,proposer0)']
162     : --------------1--0-1-------
162     : ['leader(proposer2)', 'promise(acceptor1,proposer1)', '~promise(acceptor0,proposer2)']
163     : ------------1--0----1------
163     : ['leader(proposer0)', 'promise(acceptor1,proposer2)', '~promise(acceptor0,proposer0)']
164     : -------------1--0---1------
164     : ['leader(proposer1)', 'promise(acceptor1,proposer2)', '~promise(acceptor0,proposer1)']
165     : -------------1--0----1-----
165     : ['leader(proposer1)', 'promise(acceptor2,proposer0)', '~promise(acceptor0,proposer1)']
166     : --------------1--0---1-----
166     : ['leader(proposer2)', 'promise(acceptor2,proposer0)', '~promise(acceptor0,proposer2)']
167     : ------------1--0------1----
167     : ['leader(proposer0)', 'promise(acceptor2,proposer1)', '~promise(acceptor0,proposer0)']
168     : --------------1--0----1----
168     : ['leader(proposer2)', 'promise(acceptor2,proposer1)', '~promise(acceptor0,proposer2)']
169     : ------------1--0-------1---
169     : ['leader(proposer0)', 'promise(acceptor2,proposer2)', '~promise(acceptor0,proposer0)']
170     : -------------1--0------1---
170     : ['leader(proposer1)', 'promise(acceptor2,proposer2)', '~promise(acceptor0,proposer1)']
171     : -------------1-1---0-------
171     : ['leader(proposer1)', 'promise(acceptor0,proposer0)', '~promise(acceptor1,proposer1)']
172     : --------------11----0------
172     : ['leader(proposer2)', 'promise(acceptor0,proposer0)', '~promise(acceptor1,proposer2)']
173     : ------------1---1-0--------
173     : ['leader(proposer0)', 'promise(acceptor0,proposer1)', '~promise(acceptor1,proposer0)']
174     : --------------1-1---0------
174     : ['leader(proposer2)', 'promise(acceptor0,proposer1)', '~promise(acceptor1,proposer2)']
175     : ------------1----10--------
175     : ['leader(proposer0)', 'promise(acceptor0,proposer2)', '~promise(acceptor1,proposer0)']
176     : -------------1---1-0-------
176     : ['leader(proposer1)', 'promise(acceptor0,proposer2)', '~promise(acceptor1,proposer1)']
177     : -------------1-----0-1-----
177     : ['leader(proposer1)', 'promise(acceptor2,proposer0)', '~promise(acceptor1,proposer1)']
178     : --------------1-----01-----
178     : ['leader(proposer2)', 'promise(acceptor2,proposer0)', '~promise(acceptor1,proposer2)']
179     : ------------1-----0---1----
179     : ['leader(proposer0)', 'promise(acceptor2,proposer1)', '~promise(acceptor1,proposer0)']
180     : --------------1-----0-1----
180     : ['leader(proposer2)', 'promise(acceptor2,proposer1)', '~promise(acceptor1,proposer2)']
181     : ------------1-----0----1---
181     : ['leader(proposer0)', 'promise(acceptor2,proposer2)', '~promise(acceptor1,proposer0)']
182     : -------------1-----0---1---
182     : ['leader(proposer1)', 'promise(acceptor2,proposer2)', '~promise(acceptor1,proposer1)']
183     : -------------1-1------0----
183     : ['leader(proposer1)', 'promise(acceptor0,proposer0)', '~promise(acceptor2,proposer1)']
184     : --------------11-------0---
184     : ['leader(proposer2)', 'promise(acceptor0,proposer0)', '~promise(acceptor2,proposer2)']
185     : ------------1---1----0-----
185     : ['leader(proposer0)', 'promise(acceptor0,proposer1)', '~promise(acceptor2,proposer0)']
186     : --------------1-1------0---
186     : ['leader(proposer2)', 'promise(acceptor0,proposer1)', '~promise(acceptor2,proposer2)']
187     : ------------1----1---0-----
187     : ['leader(proposer0)', 'promise(acceptor0,proposer2)', '~promise(acceptor2,proposer0)']
188     : -------------1---1----0----
188     : ['leader(proposer1)', 'promise(acceptor0,proposer2)', '~promise(acceptor2,proposer1)']
189     : -------------1----1---0----
189     : ['leader(proposer1)', 'promise(acceptor1,proposer0)', '~promise(acceptor2,proposer1)']
190     : --------------1---1----0---
190     : ['leader(proposer2)', 'promise(acceptor1,proposer0)', '~promise(acceptor2,proposer2)']
191     : ------------1------1-0-----
191     : ['leader(proposer0)', 'promise(acceptor1,proposer1)', '~promise(acceptor2,proposer0)']
192     : --------------1----1---0---
192     : ['leader(proposer2)', 'promise(acceptor1,proposer1)', '~promise(acceptor2,proposer2)']
193     : ------------1-------10-----
193     : ['leader(proposer0)', 'promise(acceptor1,proposer2)', '~promise(acceptor2,proposer0)']
194     : -------------1------1-0----
194     : ['leader(proposer1)', 'promise(acceptor1,proposer2)', '~promise(acceptor2,proposer1)']
num_forall :   4
num_exists :   0
num_literals : 5
quantified form : forall ACCEPTOR1,PROPOSER1,PROPOSER0,ACCEPTOR0. ~promise(ACCEPTOR0,PROPOSER1) | ~leader(PROPOSER0) | promise(ACCEPTOR1,PROPOSER0) | (PROPOSER0 = PROPOSER1 | ACCEPTOR0 = ACCEPTOR1)
qcost : 9




=== Prime Orbit 12 =====================
size : 18
num_suborbits: 1
195 (*) : ----0--------1----1--------
195     : ['leader(proposer1)', 'promise(acceptor1,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)']
196     : -----0--------1---1--------
196     : ['leader(proposer2)', 'promise(acceptor1,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)']
197     : ---0--------1------1-------
197     : ['leader(proposer0)', 'promise(acceptor1,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)']
198     : -----0--------1----1-------
198     : ['leader(proposer2)', 'promise(acceptor1,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)']
199     : ---0--------1-------1------
199     : ['leader(proposer0)', 'promise(acceptor1,proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)']
200     : ----0--------1------1------
200     : ['leader(proposer1)', 'promise(acceptor1,proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)']
201     : -0-----------1-------1-----
201     : ['leader(proposer1)', 'promise(acceptor2,proposer0)', '~chosenAt(quorum__acceptor0_acceptor1,proposer1)']
202     : --0-----------1------1-----
202     : ['leader(proposer2)', 'promise(acceptor2,proposer0)', '~chosenAt(quorum__acceptor0_acceptor1,proposer2)']
203     : 0-----------1---------1----
203     : ['leader(proposer0)', 'promise(acceptor2,proposer1)', '~chosenAt(quorum__acceptor0_acceptor1,proposer0)']
204     : --0-----------1-------1----
204     : ['leader(proposer2)', 'promise(acceptor2,proposer1)', '~chosenAt(quorum__acceptor0_acceptor1,proposer2)']
205     : 0-----------1----------1---
205     : ['leader(proposer0)', 'promise(acceptor2,proposer2)', '~chosenAt(quorum__acceptor0_acceptor1,proposer0)']
206     : -0-----------1---------1---
206     : ['leader(proposer1)', 'promise(acceptor2,proposer2)', '~chosenAt(quorum__acceptor0_acceptor1,proposer1)']
207     : -------0-----1-1-----------
207     : ['leader(proposer1)', 'promise(acceptor0,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)']
208     : --------0-----11-----------
208     : ['leader(proposer2)', 'promise(acceptor0,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)']
209     : ------0-----1---1----------
209     : ['leader(proposer0)', 'promise(acceptor0,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)']
210     : --------0-----1-1----------
210     : ['leader(proposer2)', 'promise(acceptor0,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)']
211     : ------0-----1----1---------
211     : ['leader(proposer0)', 'promise(acceptor0,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)']
212     : -------0-----1---1---------
212     : ['leader(proposer1)', 'promise(acceptor0,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)']
num_forall :   4
num_exists :   0
num_literals : 5
quantified form : forall QUORUM0,ACCEPTOR0,PROPOSER0,PROPOSER1. chosenAt(QUORUM0,PROPOSER0) | ~promise(ACCEPTOR0,PROPOSER1) | ~leader(PROPOSER0) | member(ACCEPTOR0,QUORUM0) | PROPOSER0 = PROPOSER1
qcost : 9




=== Prime Orbit 13 =====================
size : 36
num_suborbits: 1
213 (*) : ---------1---1----1--------
213     : ['didNotPromise(acceptor0)', 'leader(proposer1)', 'promise(acceptor1,proposer0)']
214     : ---------1----1---1--------
214     : ['didNotPromise(acceptor0)', 'leader(proposer2)', 'promise(acceptor1,proposer0)']
215     : ---------1--1------1-------
215     : ['didNotPromise(acceptor0)', 'leader(proposer0)', 'promise(acceptor1,proposer1)']
216     : ---------1----1----1-------
216     : ['didNotPromise(acceptor0)', 'leader(proposer2)', 'promise(acceptor1,proposer1)']
217     : ---------1--1-------1------
217     : ['didNotPromise(acceptor0)', 'leader(proposer0)', 'promise(acceptor1,proposer2)']
218     : ---------1---1------1------
218     : ['didNotPromise(acceptor0)', 'leader(proposer1)', 'promise(acceptor1,proposer2)']
219     : ---------1---1-------1-----
219     : ['didNotPromise(acceptor0)', 'leader(proposer1)', 'promise(acceptor2,proposer0)']
220     : ---------1----1------1-----
220     : ['didNotPromise(acceptor0)', 'leader(proposer2)', 'promise(acceptor2,proposer0)']
221     : ---------1--1---------1----
221     : ['didNotPromise(acceptor0)', 'leader(proposer0)', 'promise(acceptor2,proposer1)']
222     : ---------1----1-------1----
222     : ['didNotPromise(acceptor0)', 'leader(proposer2)', 'promise(acceptor2,proposer1)']
223     : ---------1--1----------1---
223     : ['didNotPromise(acceptor0)', 'leader(proposer0)', 'promise(acceptor2,proposer2)']
224     : ---------1---1---------1---
224     : ['didNotPromise(acceptor0)', 'leader(proposer1)', 'promise(acceptor2,proposer2)']
225     : ----------1--1-1-----------
225     : ['didNotPromise(acceptor1)', 'leader(proposer1)', 'promise(acceptor0,proposer0)']
226     : ----------1---11-----------
226     : ['didNotPromise(acceptor1)', 'leader(proposer2)', 'promise(acceptor0,proposer0)']
227     : ----------1-1---1----------
227     : ['didNotPromise(acceptor1)', 'leader(proposer0)', 'promise(acceptor0,proposer1)']
228     : ----------1---1-1----------
228     : ['didNotPromise(acceptor1)', 'leader(proposer2)', 'promise(acceptor0,proposer1)']
229     : ----------1-1----1---------
229     : ['didNotPromise(acceptor1)', 'leader(proposer0)', 'promise(acceptor0,proposer2)']
230     : ----------1--1---1---------
230     : ['didNotPromise(acceptor1)', 'leader(proposer1)', 'promise(acceptor0,proposer2)']
231     : ----------1--1-------1-----
231     : ['didNotPromise(acceptor1)', 'leader(proposer1)', 'promise(acceptor2,proposer0)']
232     : ----------1---1------1-----
232     : ['didNotPromise(acceptor1)', 'leader(proposer2)', 'promise(acceptor2,proposer0)']
233     : ----------1-1---------1----
233     : ['didNotPromise(acceptor1)', 'leader(proposer0)', 'promise(acceptor2,proposer1)']
234     : ----------1---1-------1----
234     : ['didNotPromise(acceptor1)', 'leader(proposer2)', 'promise(acceptor2,proposer1)']
235     : ----------1-1----------1---
235     : ['didNotPromise(acceptor1)', 'leader(proposer0)', 'promise(acceptor2,proposer2)']
236     : ----------1--1---------1---
236     : ['didNotPromise(acceptor1)', 'leader(proposer1)', 'promise(acceptor2,proposer2)']
237     : -----------1-1-1-----------
237     : ['didNotPromise(acceptor2)', 'leader(proposer1)', 'promise(acceptor0,proposer0)']
238     : -----------1--11-----------
238     : ['didNotPromise(acceptor2)', 'leader(proposer2)', 'promise(acceptor0,proposer0)']
239     : -----------11---1----------
239     : ['didNotPromise(acceptor2)', 'leader(proposer0)', 'promise(acceptor0,proposer1)']
240     : -----------1--1-1----------
240     : ['didNotPromise(acceptor2)', 'leader(proposer2)', 'promise(acceptor0,proposer1)']
241     : -----------11----1---------
241     : ['didNotPromise(acceptor2)', 'leader(proposer0)', 'promise(acceptor0,proposer2)']
242     : -----------1-1---1---------
242     : ['didNotPromise(acceptor2)', 'leader(proposer1)', 'promise(acceptor0,proposer2)']
243     : -----------1-1----1--------
243     : ['didNotPromise(acceptor2)', 'leader(proposer1)', 'promise(acceptor1,proposer0)']
244     : -----------1--1---1--------
244     : ['didNotPromise(acceptor2)', 'leader(proposer2)', 'promise(acceptor1,proposer0)']
245     : -----------11------1-------
245     : ['didNotPromise(acceptor2)', 'leader(proposer0)', 'promise(acceptor1,proposer1)']
246     : -----------1--1----1-------
246     : ['didNotPromise(acceptor2)', 'leader(proposer2)', 'promise(acceptor1,proposer1)']
247     : -----------11-------1------
247     : ['didNotPromise(acceptor2)', 'leader(proposer0)', 'promise(acceptor1,proposer2)']
248     : -----------1-1------1------
248     : ['didNotPromise(acceptor2)', 'leader(proposer1)', 'promise(acceptor1,proposer2)']
num_forall :   4
num_exists :   0
num_literals : 5
quantified form : forall ACCEPTOR1,ACCEPTOR0,PROPOSER0,PROPOSER1. ~promise(ACCEPTOR1,PROPOSER1) | ~leader(PROPOSER0) | ~didNotPromise(ACCEPTOR0) | (PROPOSER0 = PROPOSER1 | ACCEPTOR0 = ACCEPTOR1)
qcost : 9




=== Prime Orbit 15 =====================
size : 36
num_suborbits: 2
258 (*) : -------------1----1--1-----
258     : ['leader(proposer1)', 'promise(acceptor1,proposer0)', 'promise(acceptor2,proposer0)']
259     : --------------1---1--1-----
259     : ['leader(proposer2)', 'promise(acceptor1,proposer0)', 'promise(acceptor2,proposer0)']
260     : ------------1------1--1----
260     : ['leader(proposer0)', 'promise(acceptor1,proposer1)', 'promise(acceptor2,proposer1)']
261     : --------------1----1--1----
261     : ['leader(proposer2)', 'promise(acceptor1,proposer1)', 'promise(acceptor2,proposer1)']
262     : ------------1-------1--1---
262     : ['leader(proposer0)', 'promise(acceptor1,proposer2)', 'promise(acceptor2,proposer2)']
263     : -------------1------1--1---
263     : ['leader(proposer1)', 'promise(acceptor1,proposer2)', 'promise(acceptor2,proposer2)']
264     : -------------1-1-----1-----
264     : ['leader(proposer1)', 'promise(acceptor0,proposer0)', 'promise(acceptor2,proposer0)']
265     : --------------11-----1-----
265     : ['leader(proposer2)', 'promise(acceptor0,proposer0)', 'promise(acceptor2,proposer0)']
266     : ------------1---1-----1----
266     : ['leader(proposer0)', 'promise(acceptor0,proposer1)', 'promise(acceptor2,proposer1)']
267     : --------------1-1-----1----
267     : ['leader(proposer2)', 'promise(acceptor0,proposer1)', 'promise(acceptor2,proposer1)']
268     : ------------1----1-----1---
268     : ['leader(proposer0)', 'promise(acceptor0,proposer2)', 'promise(acceptor2,proposer2)']
269     : -------------1---1-----1---
269     : ['leader(proposer1)', 'promise(acceptor0,proposer2)', 'promise(acceptor2,proposer2)']
270     : -------------1-1--1--------
270     : ['leader(proposer1)', 'promise(acceptor0,proposer0)', 'promise(acceptor1,proposer0)']
271     : --------------11--1--------
271     : ['leader(proposer2)', 'promise(acceptor0,proposer0)', 'promise(acceptor1,proposer0)']
272     : ------------1---1--1-------
272     : ['leader(proposer0)', 'promise(acceptor0,proposer1)', 'promise(acceptor1,proposer1)']
273     : --------------1-1--1-------
273     : ['leader(proposer2)', 'promise(acceptor0,proposer1)', 'promise(acceptor1,proposer1)']
274     : ------------1----1--1------
274     : ['leader(proposer0)', 'promise(acceptor0,proposer2)', 'promise(acceptor1,proposer2)']
275     : -------------1---1--1------
275     : ['leader(proposer1)', 'promise(acceptor0,proposer2)', 'promise(acceptor1,proposer2)']
357 (*) : ------------1---1---1------
357     : ['leader(proposer0)', 'promise(acceptor0,proposer1)', 'promise(acceptor1,proposer2)']
358     : ------------1----1-1-------
358     : ['leader(proposer0)', 'promise(acceptor0,proposer2)', 'promise(acceptor1,proposer1)']
359     : -------------1-1----1------
359     : ['leader(proposer1)', 'promise(acceptor0,proposer0)', 'promise(acceptor1,proposer2)']
360     : -------------1---11--------
360     : ['leader(proposer1)', 'promise(acceptor0,proposer2)', 'promise(acceptor1,proposer0)']
361     : --------------11---1-------
361     : ['leader(proposer2)', 'promise(acceptor0,proposer0)', 'promise(acceptor1,proposer1)']
362     : --------------1-1-1--------
362     : ['leader(proposer2)', 'promise(acceptor0,proposer1)', 'promise(acceptor1,proposer0)']
363     : ------------1---1------1---
363     : ['leader(proposer0)', 'promise(acceptor0,proposer1)', 'promise(acceptor2,proposer2)']
364     : ------------1----1----1----
364     : ['leader(proposer0)', 'promise(acceptor0,proposer2)', 'promise(acceptor2,proposer1)']
365     : -------------1-1-------1---
365     : ['leader(proposer1)', 'promise(acceptor0,proposer0)', 'promise(acceptor2,proposer2)']
366     : -------------1---1---1-----
366     : ['leader(proposer1)', 'promise(acceptor0,proposer2)', 'promise(acceptor2,proposer0)']
367     : --------------11------1----
367     : ['leader(proposer2)', 'promise(acceptor0,proposer0)', 'promise(acceptor2,proposer1)']
368     : --------------1-1----1-----
368     : ['leader(proposer2)', 'promise(acceptor0,proposer1)', 'promise(acceptor2,proposer0)']
369     : ------------1------1---1---
369     : ['leader(proposer0)', 'promise(acceptor1,proposer1)', 'promise(acceptor2,proposer2)']
370     : ------------1-------1-1----
370     : ['leader(proposer0)', 'promise(acceptor1,proposer2)', 'promise(acceptor2,proposer1)']
371     : -------------1----1----1---
371     : ['leader(proposer1)', 'promise(acceptor1,proposer0)', 'promise(acceptor2,proposer2)']
372     : -------------1------11-----
372     : ['leader(proposer1)', 'promise(acceptor1,proposer2)', 'promise(acceptor2,proposer0)']
373     : --------------1---1---1----
373     : ['leader(proposer2)', 'promise(acceptor1,proposer0)', 'promise(acceptor2,proposer1)']
374     : --------------1----1-1-----
374     : ['leader(proposer2)', 'promise(acceptor1,proposer1)', 'promise(acceptor2,proposer0)']
num_forall :   5
num_exists :   0
num_literals : 10
quantified form : forall PROPOSER1,PROPOSER2,ACCEPTOR0,PROPOSER0,ACCEPTOR1. ~promise(ACCEPTOR1,PROPOSER2) | ~promise(ACCEPTOR0,PROPOSER1) | ~leader(PROPOSER0) | ((ACCEPTOR0 = ACCEPTOR1 | PROPOSER1 ~= PROPOSER2 | PROPOSER0 = PROPOSER1) & (ACCEPTOR0 = ACCEPTOR1 | PROPOSER0 = PROPOSER1 | PROPOSER0 = PROPOSER2 | PROPOSER1 = PROPOSER2))
qcost : 15




=== Prime Orbit 16 =====================
size : 9
num_suborbits: 1
276 (*) : 0-----------1--------0-----
276     : ['leader(proposer0)', '~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~promise(acceptor2,proposer0)']
277     : -0-----------1--------0----
277     : ['leader(proposer1)', '~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~promise(acceptor2,proposer1)']
278     : --0-----------1--------0---
278     : ['leader(proposer2)', '~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~promise(acceptor2,proposer2)']
279     : ---0--------1-----0--------
279     : ['leader(proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~promise(acceptor1,proposer0)']
280     : ----0--------1-----0-------
280     : ['leader(proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~promise(acceptor1,proposer1)']
281     : -----0--------1-----0------
281     : ['leader(proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~promise(acceptor1,proposer2)']
282     : ------0-----1--0-----------
282     : ['leader(proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~promise(acceptor0,proposer0)']
283     : -------0-----1--0----------
283     : ['leader(proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~promise(acceptor0,proposer1)']
284     : --------0-----1--0---------
284     : ['leader(proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~promise(acceptor0,proposer2)']
num_forall :   3
num_exists :   0
num_literals : 4
quantified form : forall ACCEPTOR0,PROPOSER0,QUORUM0. chosenAt(QUORUM0,PROPOSER0) | promise(ACCEPTOR0,PROPOSER0) | ~leader(PROPOSER0) | member(ACCEPTOR0,QUORUM0)
qcost : 7




=== Prime Orbit 17 =====================
size : 9
num_suborbits: 1
285 (*) : 0----------11--------------
285     : ['didNotPromise(acceptor2)', 'leader(proposer0)', '~chosenAt(quorum__acceptor0_acceptor1,proposer0)']
286     : -0---------1-1-------------
286     : ['didNotPromise(acceptor2)', 'leader(proposer1)', '~chosenAt(quorum__acceptor0_acceptor1,proposer1)']
287     : --0--------1--1------------
287     : ['didNotPromise(acceptor2)', 'leader(proposer2)', '~chosenAt(quorum__acceptor0_acceptor1,proposer2)']
288     : ---0------1-1--------------
288     : ['didNotPromise(acceptor1)', 'leader(proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)']
289     : ----0-----1--1-------------
289     : ['didNotPromise(acceptor1)', 'leader(proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)']
290     : -----0----1---1------------
290     : ['didNotPromise(acceptor1)', 'leader(proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)']
291     : ------0--1--1--------------
291     : ['didNotPromise(acceptor0)', 'leader(proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)']
292     : -------0-1---1-------------
292     : ['didNotPromise(acceptor0)', 'leader(proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)']
293     : --------01----1------------
293     : ['didNotPromise(acceptor0)', 'leader(proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)']
num_forall :   3
num_exists :   0
num_literals : 4
quantified form : forall ACCEPTOR0,PROPOSER0,QUORUM0. chosenAt(QUORUM0,PROPOSER0) | ~leader(PROPOSER0) | member(ACCEPTOR0,QUORUM0) | ~didNotPromise(ACCEPTOR0)
qcost : 7




=== Prime Orbit 18 =====================
size : 9
num_suborbits: 1
294 (*) : ------------1-----0--0-----
294     : ['leader(proposer0)', '~promise(acceptor1,proposer0)', '~promise(acceptor2,proposer0)']
295     : -------------1-----0--0----
295     : ['leader(proposer1)', '~promise(acceptor1,proposer1)', '~promise(acceptor2,proposer1)']
296     : --------------1-----0--0---
296     : ['leader(proposer2)', '~promise(acceptor1,proposer2)', '~promise(acceptor2,proposer2)']
297     : ------------1--0-----0-----
297     : ['leader(proposer0)', '~promise(acceptor0,proposer0)', '~promise(acceptor2,proposer0)']
298     : -------------1--0-----0----
298     : ['leader(proposer1)', '~promise(acceptor0,proposer1)', '~promise(acceptor2,proposer1)']
299     : --------------1--0-----0---
299     : ['leader(proposer2)', '~promise(acceptor0,proposer2)', '~promise(acceptor2,proposer2)']
300     : ------------1--0--0--------
300     : ['leader(proposer0)', '~promise(acceptor0,proposer0)', '~promise(acceptor1,proposer0)']
301     : -------------1--0--0-------
301     : ['leader(proposer1)', '~promise(acceptor0,proposer1)', '~promise(acceptor1,proposer1)']
302     : --------------1--0--0------
302     : ['leader(proposer2)', '~promise(acceptor0,proposer2)', '~promise(acceptor1,proposer2)']
num_forall :   3
num_exists :   0
num_literals : 4
quantified form : forall ACCEPTOR1,ACCEPTOR0,PROPOSER0. promise(ACCEPTOR0,PROPOSER0) | ~leader(PROPOSER0) | promise(ACCEPTOR1,PROPOSER0) | ACCEPTOR0 = ACCEPTOR1
qcost : 7




=== Prime Orbit 19 =====================
size : 18
num_suborbits: 1
303 (*) : -----------11-----0--------
303     : ['didNotPromise(acceptor2)', 'leader(proposer0)', '~promise(acceptor1,proposer0)']
304     : -----------1-1-----0-------
304     : ['didNotPromise(acceptor2)', 'leader(proposer1)', '~promise(acceptor1,proposer1)']
305     : -----------1--1-----0------
305     : ['didNotPromise(acceptor2)', 'leader(proposer2)', '~promise(acceptor1,proposer2)']
306     : ----------1-1--------0-----
306     : ['didNotPromise(acceptor1)', 'leader(proposer0)', '~promise(acceptor2,proposer0)']
307     : ----------1--1--------0----
307     : ['didNotPromise(acceptor1)', 'leader(proposer1)', '~promise(acceptor2,proposer1)']
308     : ----------1---1--------0---
308     : ['didNotPromise(acceptor1)', 'leader(proposer2)', '~promise(acceptor2,proposer2)']
309     : -----------11--0-----------
309     : ['didNotPromise(acceptor2)', 'leader(proposer0)', '~promise(acceptor0,proposer0)']
310     : -----------1-1--0----------
310     : ['didNotPromise(acceptor2)', 'leader(proposer1)', '~promise(acceptor0,proposer1)']
311     : -----------1--1--0---------
311     : ['didNotPromise(acceptor2)', 'leader(proposer2)', '~promise(acceptor0,proposer2)']
312     : ---------1--1--------0-----
312     : ['didNotPromise(acceptor0)', 'leader(proposer0)', '~promise(acceptor2,proposer0)']
313     : ---------1---1--------0----
313     : ['didNotPromise(acceptor0)', 'leader(proposer1)', '~promise(acceptor2,proposer1)']
314     : ---------1----1--------0---
314     : ['didNotPromise(acceptor0)', 'leader(proposer2)', '~promise(acceptor2,proposer2)']
315     : ----------1-1--0-----------
315     : ['didNotPromise(acceptor1)', 'leader(proposer0)', '~promise(acceptor0,proposer0)']
316     : ----------1--1--0----------
316     : ['didNotPromise(acceptor1)', 'leader(proposer1)', '~promise(acceptor0,proposer1)']
317     : ----------1---1--0---------
317     : ['didNotPromise(acceptor1)', 'leader(proposer2)', '~promise(acceptor0,proposer2)']
318     : ---------1--1-----0--------
318     : ['didNotPromise(acceptor0)', 'leader(proposer0)', '~promise(acceptor1,proposer0)']
319     : ---------1---1-----0-------
319     : ['didNotPromise(acceptor0)', 'leader(proposer1)', '~promise(acceptor1,proposer1)']
320     : ---------1----1-----0------
320     : ['didNotPromise(acceptor0)', 'leader(proposer2)', '~promise(acceptor1,proposer2)']
num_forall :   3
num_exists :   0
num_literals : 4
quantified form : forall ACCEPTOR1,ACCEPTOR0,PROPOSER0. ~leader(PROPOSER0) | promise(ACCEPTOR1,PROPOSER0) | ~didNotPromise(ACCEPTOR0) | ACCEPTOR0 = ACCEPTOR1
qcost : 7




=== Prime Orbit 20 =====================
size : 9
num_suborbits: 1
321 (*) : ---------1-11--------------
321     : ['didNotPromise(acceptor0)', 'didNotPromise(acceptor2)', 'leader(proposer0)']
322     : ---------1-1-1-------------
322     : ['didNotPromise(acceptor0)', 'didNotPromise(acceptor2)', 'leader(proposer1)']
323     : ---------1-1--1------------
323     : ['didNotPromise(acceptor0)', 'didNotPromise(acceptor2)', 'leader(proposer2)']
324     : ---------11-1--------------
324     : ['didNotPromise(acceptor0)', 'didNotPromise(acceptor1)', 'leader(proposer0)']
325     : ---------11--1-------------
325     : ['didNotPromise(acceptor0)', 'didNotPromise(acceptor1)', 'leader(proposer1)']
326     : ---------11---1------------
326     : ['didNotPromise(acceptor0)', 'didNotPromise(acceptor1)', 'leader(proposer2)']
327     : ----------111--------------
327     : ['didNotPromise(acceptor1)', 'didNotPromise(acceptor2)', 'leader(proposer0)']
328     : ----------11-1-------------
328     : ['didNotPromise(acceptor1)', 'didNotPromise(acceptor2)', 'leader(proposer1)']
329     : ----------11--1------------
329     : ['didNotPromise(acceptor1)', 'didNotPromise(acceptor2)', 'leader(proposer2)']
num_forall :   3
num_exists :   0
num_literals : 4
quantified form : forall ACCEPTOR1,ACCEPTOR0,PROPOSER0. ~leader(PROPOSER0) | ~didNotPromise(ACCEPTOR0) | ~didNotPromise(ACCEPTOR1) | ACCEPTOR0 = ACCEPTOR1
qcost : 7




=== Prime Orbit 23 =====================
size : 9
num_suborbits: 1
375 (*) : -----------0----------000--
375     : ['~didNotPromise(acceptor2)', '~promise(acceptor2,proposer1)', '~promise(acceptor2,proposer2)', '~start(proposer0)']
376     : -----------0---------0-0-0-
376     : ['~didNotPromise(acceptor2)', '~promise(acceptor2,proposer0)', '~promise(acceptor2,proposer2)', '~start(proposer1)']
377     : -----------0---------00---0
377     : ['~didNotPromise(acceptor2)', '~promise(acceptor2,proposer0)', '~promise(acceptor2,proposer1)', '~start(proposer2)']
378     : ----------0--------00---0--
378     : ['~didNotPromise(acceptor1)', '~promise(acceptor1,proposer1)', '~promise(acceptor1,proposer2)', '~start(proposer0)']
379     : ----------0-------0-0----0-
379     : ['~didNotPromise(acceptor1)', '~promise(acceptor1,proposer0)', '~promise(acceptor1,proposer2)', '~start(proposer1)']
380     : ----------0-------00------0
380     : ['~didNotPromise(acceptor1)', '~promise(acceptor1,proposer0)', '~promise(acceptor1,proposer1)', '~start(proposer2)']
381     : ---------0------00------0--
381     : ['~didNotPromise(acceptor0)', '~promise(acceptor0,proposer1)', '~promise(acceptor0,proposer2)', '~start(proposer0)']
382     : ---------0-----0-0-------0-
382     : ['~didNotPromise(acceptor0)', '~promise(acceptor0,proposer0)', '~promise(acceptor0,proposer2)', '~start(proposer1)']
383     : ---------0-----00---------0
383     : ['~didNotPromise(acceptor0)', '~promise(acceptor0,proposer0)', '~promise(acceptor0,proposer1)', '~start(proposer2)']
num_forall :   2
num_exists :   1
num_literals : 4
quantified form : forall PROPOSER1,ACCEPTOR0. didNotPromise(ACCEPTOR0) | start(PROPOSER1) | (exists PROPOSER0. (promise(ACCEPTOR0,PROPOSER0) & PROPOSER0 ~= PROPOSER1))
qcost : 7




=== Prime Orbit 25 =====================
size : 9
num_suborbits: 1
387 (*) : -----0--0-----1--------1---
387     : ['leader(proposer2)', 'promise(acceptor2,proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)']
388     : ----0--0-----1--------1----
388     : ['leader(proposer1)', 'promise(acceptor2,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)']
389     : ---0--0-----1--------1-----
389     : ['leader(proposer0)', 'promise(acceptor2,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)']
390     : --0-----0-----1-----1------
390     : ['leader(proposer2)', 'promise(acceptor1,proposer2)', '~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)']
391     : -0-----0-----1-----1-------
391     : ['leader(proposer1)', 'promise(acceptor1,proposer1)', '~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)']
392     : 0-----0-----1-----1--------
392     : ['leader(proposer0)', 'promise(acceptor1,proposer0)', '~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)']
393     : --0--0--------1--1---------
393     : ['leader(proposer2)', 'promise(acceptor0,proposer2)', '~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)']
394     : -0--0--------1--1----------
394     : ['leader(proposer1)', 'promise(acceptor0,proposer1)', '~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)']
395     : 0--0--------1--1-----------
395     : ['leader(proposer0)', 'promise(acceptor0,proposer0)', '~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)']
num_forall :   4
num_exists :   0
num_literals : 7
quantified form : forall QUORUM1,ACCEPTOR0,PROPOSER0,QUORUM0. ~leader(PROPOSER0) | ~promise(ACCEPTOR0,PROPOSER0) | ~member(ACCEPTOR0,QUORUM1) | ~member(ACCEPTOR0,QUORUM0) | chosenAt(QUORUM1,PROPOSER0) | chosenAt(QUORUM0,PROPOSER0) | QUORUM0 = QUORUM1
qcost : 11




=== Prime Orbit 26 =====================
size : 3
num_suborbits: 1
396 (*) : --0--0--0-----1------------
396     : ['leader(proposer2)', '~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)']
397     : -0--0--0-----1-------------
397     : ['leader(proposer1)', '~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)']
398     : 0--0--0-----1--------------
398     : ['leader(proposer0)', '~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)']
num_forall :   1
num_exists :   1
num_literals : 2
quantified form : forall PROPOSER0. (exists QUORUM0. chosenAt(QUORUM0,PROPOSER0) | ~leader(PROPOSER0))
qcost : 4




=== Prime Orbit 27 =====================
size : 9
num_suborbits: 1
399 (*) : ---------0-----0---------00
399     : ['~didNotPromise(acceptor0)', '~promise(acceptor0,proposer0)', '~start(proposer1)', '~start(proposer2)']
400     : ---------0------0-------0-0
400     : ['~didNotPromise(acceptor0)', '~promise(acceptor0,proposer1)', '~start(proposer0)', '~start(proposer2)']
401     : ---------0-------0------00-
401     : ['~didNotPromise(acceptor0)', '~promise(acceptor0,proposer2)', '~start(proposer0)', '~start(proposer1)']
402     : ----------0-------0------00
402     : ['~didNotPromise(acceptor1)', '~promise(acceptor1,proposer0)', '~start(proposer1)', '~start(proposer2)']
403     : ----------0--------0----0-0
403     : ['~didNotPromise(acceptor1)', '~promise(acceptor1,proposer1)', '~start(proposer0)', '~start(proposer2)']
404     : ----------0---------0---00-
404     : ['~didNotPromise(acceptor1)', '~promise(acceptor1,proposer2)', '~start(proposer0)', '~start(proposer1)']
405     : -----------0---------0---00
405     : ['~didNotPromise(acceptor2)', '~promise(acceptor2,proposer0)', '~start(proposer1)', '~start(proposer2)']
406     : -----------0----------0-0-0
406     : ['~didNotPromise(acceptor2)', '~promise(acceptor2,proposer1)', '~start(proposer0)', '~start(proposer2)']
407     : -----------0-----------000-
407     : ['~didNotPromise(acceptor2)', '~promise(acceptor2,proposer2)', '~start(proposer0)', '~start(proposer1)']
num_forall :   2
num_exists :   1
num_literals : 4
quantified form : forall PROPOSER1,ACCEPTOR0. didNotPromise(ACCEPTOR0) | promise(ACCEPTOR0,PROPOSER1) | (exists PROPOSER0. (start(PROPOSER0) & PROPOSER0 ~= PROPOSER1))
qcost : 7




=== Prime Orbit 28 =====================
size : 3
num_suborbits: 1
408 (*) : ---------0--------------000
408     : ['~didNotPromise(acceptor0)', '~start(proposer0)', '~start(proposer1)', '~start(proposer2)']
409     : ----------0-------------000
409     : ['~didNotPromise(acceptor1)', '~start(proposer0)', '~start(proposer1)', '~start(proposer2)']
410     : -----------0------------000
410     : ['~didNotPromise(acceptor2)', '~start(proposer0)', '~start(proposer1)', '~start(proposer2)']
num_forall :   1
num_exists :   1
num_literals : 2
quantified form : forall ACCEPTOR0. (exists PROPOSER0. didNotPromise(ACCEPTOR0) | start(PROPOSER0))
qcost : 4




=== Prime Orbit 30 =====================
size : 36
num_suborbits: 1
429 (*) : ------0---0--------0-1----0
429     : ['promise(acceptor2,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor1)', '~promise(acceptor1,proposer1)', '~start(proposer2)']
430     : ------0---0---------01---0-
430     : ['promise(acceptor2,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor1)', '~promise(acceptor1,proposer2)', '~start(proposer1)']
431     : -------0--0-------0---1---0
431     : ['promise(acceptor2,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor1)', '~promise(acceptor1,proposer0)', '~start(proposer2)']
432     : -------0--0---------0-1-0--
432     : ['promise(acceptor2,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor1)', '~promise(acceptor1,proposer2)', '~start(proposer0)']
433     : --------0-0-------0----1-0-
433     : ['promise(acceptor2,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor1)', '~promise(acceptor1,proposer0)', '~start(proposer1)']
434     : --------0-0--------0---10--
434     : ['promise(acceptor2,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor1)', '~promise(acceptor1,proposer1)', '~start(proposer0)']
435     : ------0----0------1---0---0
435     : ['promise(acceptor1,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor2)', '~promise(acceptor2,proposer1)', '~start(proposer2)']
436     : ------0----0------1----0-0-
436     : ['promise(acceptor1,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor2)', '~promise(acceptor2,proposer2)', '~start(proposer1)']
437     : -------0---0-------1-0----0
437     : ['promise(acceptor1,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor2)', '~promise(acceptor2,proposer0)', '~start(proposer2)']
438     : -------0---0-------1---00--
438     : ['promise(acceptor1,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor2)', '~promise(acceptor2,proposer2)', '~start(proposer0)']
439     : --------0--0--------10---0-
439     : ['promise(acceptor1,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor2)', '~promise(acceptor2,proposer0)', '~start(proposer1)']
440     : --------0--0--------1-0-0--
440     : ['promise(acceptor1,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor2)', '~promise(acceptor2,proposer1)', '~start(proposer0)']
441     : ---0-----0------0----1----0
441     : ['promise(acceptor2,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~didNotPromise(acceptor0)', '~promise(acceptor0,proposer1)', '~start(proposer2)']
442     : ---0-----0-------0---1---0-
442     : ['promise(acceptor2,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~didNotPromise(acceptor0)', '~promise(acceptor0,proposer2)', '~start(proposer1)']
443     : ----0----0-----0------1---0
443     : ['promise(acceptor2,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~didNotPromise(acceptor0)', '~promise(acceptor0,proposer0)', '~start(proposer2)']
444     : ----0----0-------0----1-0--
444     : ['promise(acceptor2,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~didNotPromise(acceptor0)', '~promise(acceptor0,proposer2)', '~start(proposer0)']
445     : -----0---0-----0-------1-0-
445     : ['promise(acceptor2,proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~didNotPromise(acceptor0)', '~promise(acceptor0,proposer0)', '~start(proposer1)']
446     : -----0---0------0------10--
446     : ['promise(acceptor2,proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~didNotPromise(acceptor0)', '~promise(acceptor0,proposer1)', '~start(proposer0)']
447     : ---0-------0---1------0---0
447     : ['promise(acceptor0,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~didNotPromise(acceptor2)', '~promise(acceptor2,proposer1)', '~start(proposer2)']
448     : ---0-------0---1-------0-0-
448     : ['promise(acceptor0,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~didNotPromise(acceptor2)', '~promise(acceptor2,proposer2)', '~start(proposer1)']
449     : ----0------0----1----0----0
449     : ['promise(acceptor0,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~didNotPromise(acceptor2)', '~promise(acceptor2,proposer0)', '~start(proposer2)']
450     : ----0------0----1------00--
450     : ['promise(acceptor0,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~didNotPromise(acceptor2)', '~promise(acceptor2,proposer2)', '~start(proposer0)']
451     : -----0-----0-----1---0---0-
451     : ['promise(acceptor0,proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~didNotPromise(acceptor2)', '~promise(acceptor2,proposer0)', '~start(proposer1)']
452     : -----0-----0-----1----0-0--
452     : ['promise(acceptor0,proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~didNotPromise(acceptor2)', '~promise(acceptor2,proposer1)', '~start(proposer0)']
453     : 0--------0------0-1-------0
453     : ['promise(acceptor1,proposer0)', '~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~didNotPromise(acceptor0)', '~promise(acceptor0,proposer1)', '~start(proposer2)']
454     : 0--------0-------01------0-
454     : ['promise(acceptor1,proposer0)', '~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~didNotPromise(acceptor0)', '~promise(acceptor0,proposer2)', '~start(proposer1)']
455     : -0-------0-----0---1------0
455     : ['promise(acceptor1,proposer1)', '~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~didNotPromise(acceptor0)', '~promise(acceptor0,proposer0)', '~start(proposer2)']
456     : -0-------0-------0-1----0--
456     : ['promise(acceptor1,proposer1)', '~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~didNotPromise(acceptor0)', '~promise(acceptor0,proposer2)', '~start(proposer0)']
457     : --0------0-----0----1----0-
457     : ['promise(acceptor1,proposer2)', '~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~didNotPromise(acceptor0)', '~promise(acceptor0,proposer0)', '~start(proposer1)']
458     : --0------0------0---1---0--
458     : ['promise(acceptor1,proposer2)', '~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~didNotPromise(acceptor0)', '~promise(acceptor0,proposer1)', '~start(proposer0)']
459     : 0---------0----1---0------0
459     : ['promise(acceptor0,proposer0)', '~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~didNotPromise(acceptor1)', '~promise(acceptor1,proposer1)', '~start(proposer2)']
460     : 0---------0----1----0----0-
460     : ['promise(acceptor0,proposer0)', '~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~didNotPromise(acceptor1)', '~promise(acceptor1,proposer2)', '~start(proposer1)']
461     : -0--------0-----1-0-------0
461     : ['promise(acceptor0,proposer1)', '~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~didNotPromise(acceptor1)', '~promise(acceptor1,proposer0)', '~start(proposer2)']
462     : -0--------0-----1---0---0--
462     : ['promise(acceptor0,proposer1)', '~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~didNotPromise(acceptor1)', '~promise(acceptor1,proposer2)', '~start(proposer0)']
463     : --0-------0------10------0-
463     : ['promise(acceptor0,proposer2)', '~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~didNotPromise(acceptor1)', '~promise(acceptor1,proposer0)', '~start(proposer1)']
464     : --0-------0------1-0----0--
464     : ['promise(acceptor0,proposer2)', '~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~didNotPromise(acceptor1)', '~promise(acceptor1,proposer1)', '~start(proposer0)']
num_forall :   6
num_exists :   0
num_literals : 11
quantified form : forall PROPOSER1,PROPOSER2,ACCEPTOR0,PROPOSER0,QUORUM0,ACCEPTOR1. ~promise(ACCEPTOR1,PROPOSER0) | promise(ACCEPTOR0,PROPOSER1) | didNotPromise(ACCEPTOR0) | start(PROPOSER2) | ~member(ACCEPTOR1,QUORUM0) | ~member(ACCEPTOR0,QUORUM0) | chosenAt(QUORUM0,PROPOSER0) | (PROPOSER0 = PROPOSER1 | PROPOSER0 = PROPOSER2 | PROPOSER1 = PROPOSER2 | ACCEPTOR0 = ACCEPTOR1)
qcost : 17




=== Prime Orbit 31 =====================
size : 36
num_suborbits: 1
465 (*) : --0--1----0--------0----0--
465     : ['chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~didNotPromise(acceptor1)', '~promise(acceptor1,proposer1)', '~start(proposer0)']
466     : -0--1-----0---------0---0--
466     : ['chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~didNotPromise(acceptor1)', '~promise(acceptor1,proposer2)', '~start(proposer0)']
467     : --0--1----0-------0------0-
467     : ['chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~didNotPromise(acceptor1)', '~promise(acceptor1,proposer0)', '~start(proposer1)']
468     : 0--1------0---------0----0-
468     : ['chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~didNotPromise(acceptor1)', '~promise(acceptor1,proposer2)', '~start(proposer1)']
469     : -0--1-----0-------0-------0
469     : ['chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~didNotPromise(acceptor1)', '~promise(acceptor1,proposer0)', '~start(proposer2)']
470     : 0--1------0--------0------0
470     : ['chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~didNotPromise(acceptor1)', '~promise(acceptor1,proposer1)', '~start(proposer2)']
471     : --1--0-----0----------0-0--
471     : ['chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~didNotPromise(acceptor2)', '~promise(acceptor2,proposer1)', '~start(proposer0)']
472     : -1--0------0-----------00--
472     : ['chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~didNotPromise(acceptor2)', '~promise(acceptor2,proposer2)', '~start(proposer0)']
473     : --1--0-----0---------0---0-
473     : ['chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~didNotPromise(acceptor2)', '~promise(acceptor2,proposer0)', '~start(proposer1)']
474     : 1--0-------0-----------0-0-
474     : ['chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~didNotPromise(acceptor2)', '~promise(acceptor2,proposer2)', '~start(proposer1)']
475     : -1--0------0---------0----0
475     : ['chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~didNotPromise(acceptor2)', '~promise(acceptor2,proposer0)', '~start(proposer2)']
476     : 1--0-------0----------0---0
476     : ['chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~didNotPromise(acceptor2)', '~promise(acceptor2,proposer1)', '~start(proposer2)']
477     : --0-----10------0-------0--
477     : ['chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~didNotPromise(acceptor0)', '~promise(acceptor0,proposer1)', '~start(proposer0)']
478     : -0-----1-0-------0------0--
478     : ['chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~didNotPromise(acceptor0)', '~promise(acceptor0,proposer2)', '~start(proposer0)']
479     : --0-----10-----0---------0-
479     : ['chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~didNotPromise(acceptor0)', '~promise(acceptor0,proposer0)', '~start(proposer1)']
480     : 0-----1--0-------0-------0-
480     : ['chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~didNotPromise(acceptor0)', '~promise(acceptor0,proposer2)', '~start(proposer1)']
481     : -0-----1-0-----0----------0
481     : ['chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~didNotPromise(acceptor0)', '~promise(acceptor0,proposer0)', '~start(proposer2)']
482     : 0-----1--0------0---------0
482     : ['chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~didNotPromise(acceptor0)', '~promise(acceptor0,proposer1)', '~start(proposer2)']
483     : --1-----0--0----------0-0--
483     : ['chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor2)', '~promise(acceptor2,proposer1)', '~start(proposer0)']
484     : -1-----0---0-----------00--
484     : ['chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor2)', '~promise(acceptor2,proposer2)', '~start(proposer0)']
485     : --1-----0--0---------0---0-
485     : ['chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor2)', '~promise(acceptor2,proposer0)', '~start(proposer1)']
486     : 1-----0----0-----------0-0-
486     : ['chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor2)', '~promise(acceptor2,proposer2)', '~start(proposer1)']
487     : -1-----0---0---------0----0
487     : ['chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor2)', '~promise(acceptor2,proposer0)', '~start(proposer2)']
488     : 1-----0----0----------0---0
488     : ['chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor2)', '~promise(acceptor2,proposer1)', '~start(proposer2)']
489     : -----0--10------0-------0--
489     : ['chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~didNotPromise(acceptor0)', '~promise(acceptor0,proposer1)', '~start(proposer0)']
490     : ----0--1-0-------0------0--
490     : ['chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~didNotPromise(acceptor0)', '~promise(acceptor0,proposer2)', '~start(proposer0)']
491     : -----0--10-----0---------0-
491     : ['chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~didNotPromise(acceptor0)', '~promise(acceptor0,proposer0)', '~start(proposer1)']
492     : ---0--1--0-------0-------0-
492     : ['chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~didNotPromise(acceptor0)', '~promise(acceptor0,proposer2)', '~start(proposer1)']
493     : ----0--1-0-----0----------0
493     : ['chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~didNotPromise(acceptor0)', '~promise(acceptor0,proposer0)', '~start(proposer2)']
494     : ---0--1--0------0---------0
494     : ['chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~didNotPromise(acceptor0)', '~promise(acceptor0,proposer1)', '~start(proposer2)']
495     : -----1--0-0--------0----0--
495     : ['chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor1)', '~promise(acceptor1,proposer1)', '~start(proposer0)']
496     : ----1--0--0---------0---0--
496     : ['chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor1)', '~promise(acceptor1,proposer2)', '~start(proposer0)']
497     : -----1--0-0-------0------0-
497     : ['chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor1)', '~promise(acceptor1,proposer0)', '~start(proposer1)']
498     : ---1--0---0---------0----0-
498     : ['chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor1)', '~promise(acceptor1,proposer2)', '~start(proposer1)']
499     : ----1--0--0-------0-------0
499     : ['chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor1)', '~promise(acceptor1,proposer0)', '~start(proposer2)']
500     : ---1--0---0--------0------0
500     : ['chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor1)', '~promise(acceptor1,proposer1)', '~start(proposer2)']
num_forall :   6
num_exists :   0
num_literals : 11
quantified form : forall PROPOSER1,PROPOSER2,ACCEPTOR0,PROPOSER0,QUORUM0,QUORUM1. promise(ACCEPTOR0,PROPOSER1) | didNotPromise(ACCEPTOR0) | start(PROPOSER2) | ~member(ACCEPTOR0,QUORUM1) | member(ACCEPTOR0,QUORUM0) | ~chosenAt(QUORUM0,PROPOSER0) | chosenAt(QUORUM1,PROPOSER0) | (PROPOSER0 = PROPOSER1 | PROPOSER0 = PROPOSER2 | QUORUM0 = QUORUM1 | PROPOSER1 = PROPOSER2)
qcost : 17




=== Prime Orbit 33 =====================
size : 9
num_suborbits: 1
519 (*) : -0-------00-------------0-0
519     : ['~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~start(proposer0)', '~start(proposer2)']
520     : --0------00-------------00-
520     : ['~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~start(proposer0)', '~start(proposer1)']
521     : 0--------00--------------00
521     : ['~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~start(proposer1)', '~start(proposer2)']
522     : ----0----0-0------------0-0
522     : ['~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor2)', '~start(proposer0)', '~start(proposer2)']
523     : -----0---0-0------------00-
523     : ['~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor2)', '~start(proposer0)', '~start(proposer1)']
524     : ---0-----0-0-------------00
524     : ['~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor2)', '~start(proposer1)', '~start(proposer2)']
525     : -------0--00------------0-0
525     : ['~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~start(proposer0)', '~start(proposer2)']
526     : --------0-00------------00-
526     : ['~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~start(proposer0)', '~start(proposer1)']
527     : ------0---00-------------00
527     : ['~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~start(proposer1)', '~start(proposer2)']
num_forall :   4
num_exists :   1
num_literals : 8
quantified form : forall ACCEPTOR1,PROPOSER1,QUORUM0,ACCEPTOR0. didNotPromise(ACCEPTOR0) | ~member(ACCEPTOR1,QUORUM0) | chosenAt(QUORUM0,PROPOSER1) | ~member(ACCEPTOR0,QUORUM0) | didNotPromise(ACCEPTOR1) | (exists PROPOSER0. (start(PROPOSER0) & PROPOSER0 ~= PROPOSER1)) | ACCEPTOR0 = ACCEPTOR1
qcost : 13




=== Prime Orbit 34 =====================
size : 18
num_suborbits: 1
528 (*) : -------0--0-----------1-0-0
528     : ['promise(acceptor2,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor1)', '~start(proposer0)', '~start(proposer2)']
529     : --------0-0------------100-
529     : ['promise(acceptor2,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor1)', '~start(proposer0)', '~start(proposer1)']
530     : ------0---0----------1---00
530     : ['promise(acceptor2,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor1)', '~start(proposer1)', '~start(proposer2)']
531     : -------0---0-------1----0-0
531     : ['promise(acceptor1,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor2)', '~start(proposer0)', '~start(proposer2)']
532     : --------0--0--------1---00-
532     : ['promise(acceptor1,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor2)', '~start(proposer0)', '~start(proposer1)']
533     : ------0----0------1------00
533     : ['promise(acceptor1,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor2)', '~start(proposer1)', '~start(proposer2)']
534     : ----0----0------------1-0-0
534     : ['promise(acceptor2,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~didNotPromise(acceptor0)', '~start(proposer0)', '~start(proposer2)']
535     : -----0---0-------------100-
535     : ['promise(acceptor2,proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~didNotPromise(acceptor0)', '~start(proposer0)', '~start(proposer1)']
536     : ---0-----0-----------1---00
536     : ['promise(acceptor2,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~didNotPromise(acceptor0)', '~start(proposer1)', '~start(proposer2)']
537     : ----0------0----1-------0-0
537     : ['promise(acceptor0,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~didNotPromise(acceptor2)', '~start(proposer0)', '~start(proposer2)']
538     : -----0-----0-----1------00-
538     : ['promise(acceptor0,proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~didNotPromise(acceptor2)', '~start(proposer0)', '~start(proposer1)']
539     : ---0-------0---1---------00
539     : ['promise(acceptor0,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~didNotPromise(acceptor2)', '~start(proposer1)', '~start(proposer2)']
540     : -0-------0---------1----0-0
540     : ['promise(acceptor1,proposer1)', '~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~didNotPromise(acceptor0)', '~start(proposer0)', '~start(proposer2)']
541     : --0------0----------1---00-
541     : ['promise(acceptor1,proposer2)', '~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~didNotPromise(acceptor0)', '~start(proposer0)', '~start(proposer1)']
542     : 0--------0--------1------00
542     : ['promise(acceptor1,proposer0)', '~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~didNotPromise(acceptor0)', '~start(proposer1)', '~start(proposer2)']
543     : -0--------0-----1-------0-0
543     : ['promise(acceptor0,proposer1)', '~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~didNotPromise(acceptor1)', '~start(proposer0)', '~start(proposer2)']
544     : --0-------0------1------00-
544     : ['promise(acceptor0,proposer2)', '~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~didNotPromise(acceptor1)', '~start(proposer0)', '~start(proposer1)']
545     : 0---------0----1---------00
545     : ['promise(acceptor0,proposer0)', '~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~didNotPromise(acceptor1)', '~start(proposer1)', '~start(proposer2)']
num_forall :   4
num_exists :   1
num_literals : 8
quantified form : forall ACCEPTOR1,PROPOSER1,QUORUM0,ACCEPTOR0. didNotPromise(ACCEPTOR0) | ~promise(ACCEPTOR1,PROPOSER1) | ~member(ACCEPTOR1,QUORUM0) | chosenAt(QUORUM0,PROPOSER1) | ~member(ACCEPTOR0,QUORUM0) | (exists PROPOSER0. (start(PROPOSER0) & PROPOSER0 ~= PROPOSER1)) | ACCEPTOR0 = ACCEPTOR1
qcost : 13




=== Prime Orbit 35 =====================
size : 18
num_suborbits: 1
546 (*) : ----1--0--0-------------0-0
546     : ['chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor1)', '~start(proposer0)', '~start(proposer2)']
547     : -----1--0-0-------------00-
547     : ['chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor1)', '~start(proposer0)', '~start(proposer1)']
548     : ---1--0---0--------------00
548     : ['chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor1)', '~start(proposer1)', '~start(proposer2)']
549     : -1-----0---0------------0-0
549     : ['chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor2)', '~start(proposer0)', '~start(proposer2)']
550     : --1-----0--0------------00-
550     : ['chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor2)', '~start(proposer0)', '~start(proposer1)']
551     : 1-----0----0-------------00
551     : ['chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor2)', '~start(proposer1)', '~start(proposer2)']
552     : ----0--1-0--------------0-0
552     : ['chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~didNotPromise(acceptor0)', '~start(proposer0)', '~start(proposer2)']
553     : -----0--10--------------00-
553     : ['chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~didNotPromise(acceptor0)', '~start(proposer0)', '~start(proposer1)']
554     : ---0--1--0---------------00
554     : ['chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~didNotPromise(acceptor0)', '~start(proposer1)', '~start(proposer2)']
555     : -1--0------0------------0-0
555     : ['chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~didNotPromise(acceptor2)', '~start(proposer0)', '~start(proposer2)']
556     : --1--0-----0------------00-
556     : ['chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~didNotPromise(acceptor2)', '~start(proposer0)', '~start(proposer1)']
557     : 1--0-------0-------------00
557     : ['chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~didNotPromise(acceptor2)', '~start(proposer1)', '~start(proposer2)']
558     : -0-----1-0--------------0-0
558     : ['chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~didNotPromise(acceptor0)', '~start(proposer0)', '~start(proposer2)']
559     : --0-----10--------------00-
559     : ['chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~didNotPromise(acceptor0)', '~start(proposer0)', '~start(proposer1)']
560     : 0-----1--0---------------00
560     : ['chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~didNotPromise(acceptor0)', '~start(proposer1)', '~start(proposer2)']
561     : -0--1-----0-------------0-0
561     : ['chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~didNotPromise(acceptor1)', '~start(proposer0)', '~start(proposer2)']
562     : --0--1----0-------------00-
562     : ['chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~didNotPromise(acceptor1)', '~start(proposer0)', '~start(proposer1)']
563     : 0--1------0--------------00
563     : ['chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~didNotPromise(acceptor1)', '~start(proposer1)', '~start(proposer2)']
num_forall :   4
num_exists :   1
num_literals : 8
quantified form : forall QUORUM1,PROPOSER1,QUORUM0,ACCEPTOR0. ~chosenAt(QUORUM0,PROPOSER1) | didNotPromise(ACCEPTOR0) | ~member(ACCEPTOR0,QUORUM1) | member(ACCEPTOR0,QUORUM0) | chosenAt(QUORUM1,PROPOSER1) | (exists PROPOSER0. (start(PROPOSER0) & PROPOSER0 ~= PROPOSER1)) | QUORUM0 = QUORUM1
qcost : 13




=== Prime Orbit 36 =====================
size : 9
num_suborbits: 1
564 (*) : --0-----0-0---1---00-------
564     : ['leader(proposer2)', '~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor1)', '~promise(acceptor1,proposer0)', '~promise(acceptor1,proposer1)']
565     : -0-----0--0--1----0-0------
565     : ['leader(proposer1)', '~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor1)', '~promise(acceptor1,proposer0)', '~promise(acceptor1,proposer2)']
566     : 0-----0---0-1------00------
566     : ['leader(proposer0)', '~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor1)', '~promise(acceptor1,proposer1)', '~promise(acceptor1,proposer2)']
567     : -----0--0--0--1------00----
567     : ['leader(proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor2)', '~promise(acceptor2,proposer0)', '~promise(acceptor2,proposer1)']
568     : ----0--0---0-1-------0-0---
568     : ['leader(proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor2)', '~promise(acceptor2,proposer0)', '~promise(acceptor2,proposer2)']
569     : ---0--0----01---------00---
569     : ['leader(proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor2)', '~promise(acceptor2,proposer1)', '~promise(acceptor2,proposer2)']
570     : --0--0---0----100----------
570     : ['leader(proposer2)', '~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~didNotPromise(acceptor0)', '~promise(acceptor0,proposer0)', '~promise(acceptor0,proposer1)']
571     : -0--0----0---1-0-0---------
571     : ['leader(proposer1)', '~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~didNotPromise(acceptor0)', '~promise(acceptor0,proposer0)', '~promise(acceptor0,proposer2)']
572     : 0--0-----0--1---00---------
572     : ['leader(proposer0)', '~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~didNotPromise(acceptor0)', '~promise(acceptor0,proposer1)', '~promise(acceptor0,proposer2)']
num_forall :   4
num_exists :   1
num_literals : 9
quantified form : forall QUORUM1,PROPOSER1,QUORUM0,ACCEPTOR0. didNotPromise(ACCEPTOR0) | ~leader(PROPOSER1) | ~member(ACCEPTOR0,QUORUM1) | chosenAt(QUORUM0,PROPOSER1) | ~member(ACCEPTOR0,QUORUM0) | chosenAt(QUORUM1,PROPOSER1) | (exists PROPOSER0. (promise(ACCEPTOR0,PROPOSER0) & PROPOSER0 ~= PROPOSER1)) | QUORUM0 = QUORUM1
qcost : 14




=== Prime Orbit 37 =====================
size : 18
num_suborbits: 1
573 (*) : --0-----0-0---1---0------0-
573     : ['leader(proposer2)', '~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor1)', '~promise(acceptor1,proposer0)', '~start(proposer1)']
574     : -0-----0--0--1----0-------0
574     : ['leader(proposer1)', '~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor1)', '~promise(acceptor1,proposer0)', '~start(proposer2)']
575     : --0-----0-0---1----0----0--
575     : ['leader(proposer2)', '~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor1)', '~promise(acceptor1,proposer1)', '~start(proposer0)']
576     : 0-----0---0-1------0------0
576     : ['leader(proposer0)', '~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor1)', '~promise(acceptor1,proposer1)', '~start(proposer2)']
577     : -0-----0--0--1------0---0--
577     : ['leader(proposer1)', '~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor1)', '~promise(acceptor1,proposer2)', '~start(proposer0)']
578     : 0-----0---0-1-------0----0-
578     : ['leader(proposer0)', '~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor1)', '~promise(acceptor1,proposer2)', '~start(proposer1)']
579     : -----0--0--0--1------0---0-
579     : ['leader(proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor2)', '~promise(acceptor2,proposer0)', '~start(proposer1)']
580     : ----0--0---0-1-------0----0
580     : ['leader(proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor2)', '~promise(acceptor2,proposer0)', '~start(proposer2)']
581     : -----0--0--0--1-------0-0--
581     : ['leader(proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor2)', '~promise(acceptor2,proposer1)', '~start(proposer0)']
582     : ---0--0----01---------0---0
582     : ['leader(proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor2)', '~promise(acceptor2,proposer1)', '~start(proposer2)']
583     : ----0--0---0-1---------00--
583     : ['leader(proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor2)', '~promise(acceptor2,proposer2)', '~start(proposer0)']
584     : ---0--0----01----------0-0-
584     : ['leader(proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor2)', '~promise(acceptor2,proposer2)', '~start(proposer1)']
585     : --0--0---0----10---------0-
585     : ['leader(proposer2)', '~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~didNotPromise(acceptor0)', '~promise(acceptor0,proposer0)', '~start(proposer1)']
586     : -0--0----0---1-0----------0
586     : ['leader(proposer1)', '~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~didNotPromise(acceptor0)', '~promise(acceptor0,proposer0)', '~start(proposer2)']
587     : --0--0---0----1-0-------0--
587     : ['leader(proposer2)', '~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~didNotPromise(acceptor0)', '~promise(acceptor0,proposer1)', '~start(proposer0)']
588     : 0--0-----0--1---0---------0
588     : ['leader(proposer0)', '~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~didNotPromise(acceptor0)', '~promise(acceptor0,proposer1)', '~start(proposer2)']
589     : -0--0----0---1---0------0--
589     : ['leader(proposer1)', '~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~didNotPromise(acceptor0)', '~promise(acceptor0,proposer2)', '~start(proposer0)']
590     : 0--0-----0--1----0-------0-
590     : ['leader(proposer0)', '~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~didNotPromise(acceptor0)', '~promise(acceptor0,proposer2)', '~start(proposer1)']
num_forall :   6
num_exists :   0
num_literals : 12
quantified form : forall PROPOSER1,PROPOSER2,ACCEPTOR0,PROPOSER0,QUORUM0,QUORUM1. promise(ACCEPTOR0,PROPOSER1) | didNotPromise(ACCEPTOR0) | start(PROPOSER2) | ~leader(PROPOSER0) | ~member(ACCEPTOR0,QUORUM1) | ~member(ACCEPTOR0,QUORUM0) | chosenAt(QUORUM1,PROPOSER0) | chosenAt(QUORUM0,PROPOSER0) | (PROPOSER0 = PROPOSER1 | PROPOSER0 = PROPOSER2 | QUORUM0 = QUORUM1 | PROPOSER1 = PROPOSER2)
qcost : 18




=== Prime Orbit 39 =====================
size : 18
num_suborbits: 1
609 (*) : 0-------0-0----1-------1-0-
609     : ['promise(acceptor0,proposer0)', 'promise(acceptor2,proposer2)', '~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor1)', '~start(proposer1)']
610     : 0------0--0----1------1---0
610     : ['promise(acceptor0,proposer0)', 'promise(acceptor2,proposer1)', '~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor1)', '~start(proposer2)']
611     : -0------0-0-----1------10--
611     : ['promise(acceptor0,proposer1)', 'promise(acceptor2,proposer2)', '~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor1)', '~start(proposer0)']
612     : -0----0---0-----1----1----0
612     : ['promise(acceptor0,proposer1)', 'promise(acceptor2,proposer0)', '~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor1)', '~start(proposer2)']
613     : --0----0--0------1----1-0--
613     : ['promise(acceptor0,proposer2)', 'promise(acceptor2,proposer1)', '~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor1)', '~start(proposer0)']
614     : --0---0---0------1---1---0-
614     : ['promise(acceptor0,proposer2)', 'promise(acceptor2,proposer0)', '~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor1)', '~start(proposer1)']
615     : ---0----0--0---1----1----0-
615     : ['promise(acceptor0,proposer0)', 'promise(acceptor1,proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor2)', '~start(proposer1)']
616     : ---0---0---0---1---1------0
616     : ['promise(acceptor0,proposer0)', 'promise(acceptor1,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor2)', '~start(proposer2)']
617     : ----0---0--0----1---1---0--
617     : ['promise(acceptor0,proposer1)', 'promise(acceptor1,proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor2)', '~start(proposer0)']
618     : ----0-0----0----1-1-------0
618     : ['promise(acceptor0,proposer1)', 'promise(acceptor1,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor2)', '~start(proposer2)']
619     : -----0-0---0-----1-1----0--
619     : ['promise(acceptor0,proposer2)', 'promise(acceptor1,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor2)', '~start(proposer0)']
620     : -----00----0-----11------0-
620     : ['promise(acceptor0,proposer2)', 'promise(acceptor1,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor2)', '~start(proposer1)']
621     : 0----0---0--------1----1-0-
621     : ['promise(acceptor1,proposer0)', 'promise(acceptor2,proposer2)', '~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~didNotPromise(acceptor0)', '~start(proposer1)']
622     : 0---0----0--------1---1---0
622     : ['promise(acceptor1,proposer0)', 'promise(acceptor2,proposer1)', '~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~didNotPromise(acceptor0)', '~start(proposer2)']
623     : -0---0---0---------1---10--
623     : ['promise(acceptor1,proposer1)', 'promise(acceptor2,proposer2)', '~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~didNotPromise(acceptor0)', '~start(proposer0)']
624     : -0-0-----0---------1-1----0
624     : ['promise(acceptor1,proposer1)', 'promise(acceptor2,proposer0)', '~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~didNotPromise(acceptor0)', '~start(proposer2)']
625     : --0-0----0----------1-1-0--
625     : ['promise(acceptor1,proposer2)', 'promise(acceptor2,proposer1)', '~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~didNotPromise(acceptor0)', '~start(proposer0)']
626     : --00-----0----------11---0-
626     : ['promise(acceptor1,proposer2)', 'promise(acceptor2,proposer0)', '~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~didNotPromise(acceptor0)', '~start(proposer1)']
num_forall :   8
num_exists :   0
num_literals : 19
quantified form : forall PROPOSER1,PROPOSER2,ACCEPTOR2,ACCEPTOR0,PROPOSER0,QUORUM0,ACCEPTOR1,QUORUM1. ~member(ACCEPTOR1,QUORUM1) | ~member(ACCEPTOR2,QUORUM1) | start(PROPOSER2) | ~promise(ACCEPTOR2,PROPOSER1) | ~promise(ACCEPTOR0,PROPOSER0) | ~member(ACCEPTOR1,QUORUM0) | member(ACCEPTOR0,QUORUM1) | ~member(ACCEPTOR0,QUORUM0) | chosenAt(QUORUM0,PROPOSER0) | chosenAt(QUORUM1,PROPOSER1) | didNotPromise(ACCEPTOR1) | member(ACCEPTOR2,QUORUM0) | (PROPOSER0 = PROPOSER2 | ACCEPTOR0 = ACCEPTOR1 | PROPOSER1 = PROPOSER2 | ACCEPTOR1 = ACCEPTOR2 | PROPOSER0 = PROPOSER1 | QUORUM0 = QUORUM1 | ACCEPTOR0 = ACCEPTOR2)
qcost : 27




=== Prime Orbit 40 =====================
size : 18
num_suborbits: 1
627 (*) : ------0---00--------0--0-0-
627     : ['~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor1,proposer2)', '~promise(acceptor2,proposer2)', '~start(proposer1)']
628     : ------0---00-------0--0---0
628     : ['~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor1,proposer1)', '~promise(acceptor2,proposer1)', '~start(proposer2)']
629     : -------0--00--------0--00--
629     : ['~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor1,proposer2)', '~promise(acceptor2,proposer2)', '~start(proposer0)']
630     : -------0--00------0--0----0
630     : ['~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor1,proposer0)', '~promise(acceptor2,proposer0)', '~start(proposer2)']
631     : --------0-00-------0--0-0--
631     : ['~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor1,proposer1)', '~promise(acceptor2,proposer1)', '~start(proposer0)']
632     : --------0-00------0--0---0-
632     : ['~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor1,proposer0)', '~promise(acceptor2,proposer0)', '~start(proposer1)']
633     : ---0-----0-0-----0-----0-0-
633     : ['~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor2)', '~promise(acceptor0,proposer2)', '~promise(acceptor2,proposer2)', '~start(proposer1)']
634     : ---0-----0-0----0-----0---0
634     : ['~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor2)', '~promise(acceptor0,proposer1)', '~promise(acceptor2,proposer1)', '~start(proposer2)']
635     : ----0----0-0-----0-----00--
635     : ['~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor2)', '~promise(acceptor0,proposer2)', '~promise(acceptor2,proposer2)', '~start(proposer0)']
636     : ----0----0-0---0-----0----0
636     : ['~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor2)', '~promise(acceptor0,proposer0)', '~promise(acceptor2,proposer0)', '~start(proposer2)']
637     : -----0---0-0----0-----0-0--
637     : ['~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor2)', '~promise(acceptor0,proposer1)', '~promise(acceptor2,proposer1)', '~start(proposer0)']
638     : -----0---0-0---0-----0---0-
638     : ['~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor2)', '~promise(acceptor0,proposer0)', '~promise(acceptor2,proposer0)', '~start(proposer1)']
639     : 0--------00------0--0----0-
639     : ['~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~promise(acceptor0,proposer2)', '~promise(acceptor1,proposer2)', '~start(proposer1)']
640     : 0--------00-----0--0------0
640     : ['~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~promise(acceptor0,proposer1)', '~promise(acceptor1,proposer1)', '~start(proposer2)']
641     : -0-------00------0--0---0--
641     : ['~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~promise(acceptor0,proposer2)', '~promise(acceptor1,proposer2)', '~start(proposer0)']
642     : -0-------00----0--0-------0
642     : ['~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~promise(acceptor0,proposer0)', '~promise(acceptor1,proposer0)', '~start(proposer2)']
643     : --0------00-----0--0----0--
643     : ['~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~promise(acceptor0,proposer1)', '~promise(acceptor1,proposer1)', '~start(proposer0)']
644     : --0------00----0--0------0-
644     : ['~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~promise(acceptor0,proposer0)', '~promise(acceptor1,proposer0)', '~start(proposer1)']
num_forall :   6
num_exists :   0
num_literals : 12
quantified form : forall PROPOSER1,PROPOSER2,ACCEPTOR0,PROPOSER0,QUORUM0,ACCEPTOR1. promise(ACCEPTOR0,PROPOSER1) | didNotPromise(ACCEPTOR0) | start(PROPOSER2) | promise(ACCEPTOR1,PROPOSER1) | ~member(ACCEPTOR1,QUORUM0) | ~member(ACCEPTOR0,QUORUM0) | chosenAt(QUORUM0,PROPOSER0) | didNotPromise(ACCEPTOR1) | (PROPOSER0 = PROPOSER1 | PROPOSER0 = PROPOSER2 | PROPOSER1 = PROPOSER2 | ACCEPTOR0 = ACCEPTOR1)
qcost : 18




=== Prime Orbit 41 =====================
size : 9
num_suborbits: 1
645 (*) : -----0--0--0--1---------00-
645     : ['leader(proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor2)', '~start(proposer0)', '~start(proposer1)']
646     : ----0--0---0-1----------0-0
646     : ['leader(proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor2)', '~start(proposer0)', '~start(proposer2)']
647     : ---0--0----01------------00
647     : ['leader(proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor2)', '~start(proposer1)', '~start(proposer2)']
648     : --0-----0-0---1---------00-
648     : ['leader(proposer2)', '~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor1)', '~start(proposer0)', '~start(proposer1)']
649     : -0-----0--0--1----------0-0
649     : ['leader(proposer1)', '~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor1)', '~start(proposer0)', '~start(proposer2)']
650     : 0-----0---0-1------------00
650     : ['leader(proposer0)', '~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor1)', '~start(proposer1)', '~start(proposer2)']
651     : --0--0---0----1---------00-
651     : ['leader(proposer2)', '~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~didNotPromise(acceptor0)', '~start(proposer0)', '~start(proposer1)']
652     : -0--0----0---1----------0-0
652     : ['leader(proposer1)', '~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~didNotPromise(acceptor0)', '~start(proposer0)', '~start(proposer2)']
653     : 0--0-----0--1------------00
653     : ['leader(proposer0)', '~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~didNotPromise(acceptor0)', '~start(proposer1)', '~start(proposer2)']
num_forall :   4
num_exists :   1
num_literals : 9
quantified form : forall QUORUM1,PROPOSER1,QUORUM0,ACCEPTOR0. didNotPromise(ACCEPTOR0) | ~leader(PROPOSER1) | ~member(ACCEPTOR0,QUORUM1) | chosenAt(QUORUM0,PROPOSER1) | ~member(ACCEPTOR0,QUORUM0) | chosenAt(QUORUM1,PROPOSER1) | (exists PROPOSER0. (start(PROPOSER0) & PROPOSER0 ~= PROPOSER1)) | QUORUM0 = QUORUM1
qcost : 14




=== Prime Orbit 42 =====================
size : 18
num_suborbits: 1
654 (*) : -0-0--0--00----------1----0
654     : ['promise(acceptor2,proposer0)', '~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~start(proposer2)']
655     : --00--0--00----------1---0-
655     : ['promise(acceptor2,proposer0)', '~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~start(proposer1)']
656     : 0---0--0-00-----------1---0
656     : ['promise(acceptor2,proposer1)', '~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~start(proposer2)']
657     : --0-0--0-00-----------1-0--
657     : ['promise(acceptor2,proposer1)', '~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~start(proposer0)']
658     : 0----0--000------------1-0-
658     : ['promise(acceptor2,proposer2)', '~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~start(proposer1)']
659     : -0---0--000------------10--
659     : ['promise(acceptor2,proposer2)', '~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~start(proposer0)']
660     : 0---0-0--0-0------1-------0
660     : ['promise(acceptor1,proposer0)', '~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor2)', '~start(proposer2)']
661     : 0----00--0-0------1------0-
661     : ['promise(acceptor1,proposer0)', '~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor2)', '~start(proposer1)']
662     : -0-0---0-0-0-------1------0
662     : ['promise(acceptor1,proposer1)', '~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor2)', '~start(proposer2)']
663     : -0---0-0-0-0-------1----0--
663     : ['promise(acceptor1,proposer1)', '~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor2)', '~start(proposer0)']
664     : --00----00-0--------1----0-
664     : ['promise(acceptor1,proposer2)', '~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor2)', '~start(proposer1)']
665     : --0-0---00-0--------1---0--
665     : ['promise(acceptor1,proposer2)', '~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor2)', '~start(proposer0)']
666     : 0--0---0--00---1----------0
666     : ['promise(acceptor0,proposer0)', '~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~start(proposer2)']
667     : 0--0----0-00---1---------0-
667     : ['promise(acceptor0,proposer0)', '~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~start(proposer1)']
668     : -0--0-0---00----1---------0
668     : ['promise(acceptor0,proposer1)', '~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~start(proposer2)']
669     : -0--0---0-00----1-------0--
669     : ['promise(acceptor0,proposer1)', '~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~start(proposer0)']
670     : --0--00---00-----1-------0-
670     : ['promise(acceptor0,proposer2)', '~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~start(proposer1)']
671     : --0--0-0--00-----1------0--
671     : ['promise(acceptor0,proposer2)', '~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~start(proposer0)']
num_forall :   9
num_exists :   0
num_literals : 25
quantified form : forall PROPOSER1,PROPOSER2,QUORUM2,ACCEPTOR2,ACCEPTOR0,PROPOSER0,QUORUM0,ACCEPTOR1,QUORUM1. chosenAt(QUORUM2,PROPOSER0) | ~promise(ACCEPTOR2,PROPOSER0) | ~member(ACCEPTOR2,QUORUM1) | didNotPromise(ACCEPTOR0) | start(PROPOSER2) | ~member(ACCEPTOR0,QUORUM1) | ~member(ACCEPTOR1,QUORUM0) | ~member(ACCEPTOR0,QUORUM0) | ~member(ACCEPTOR1,QUORUM2) | ~member(ACCEPTOR2,QUORUM2) | chosenAt(QUORUM0,PROPOSER1) | member(ACCEPTOR1,QUORUM1) | chosenAt(QUORUM1,PROPOSER0) | member(ACCEPTOR0,QUORUM2) | didNotPromise(ACCEPTOR1) | member(ACCEPTOR2,QUORUM0) | (QUORUM1 = QUORUM2 | PROPOSER0 = PROPOSER2 | PROPOSER1 = PROPOSER2 | ACCEPTOR0 = ACCEPTOR1 | ACCEPTOR1 = ACCEPTOR2 | PROPOSER0 = PROPOSER1 | QUORUM0 = QUORUM2 | QUORUM0 = QUORUM1 | ACCEPTOR0 = ACCEPTOR2)
qcost : 34




=== Prime Orbit 43 =====================
size : 36
num_suborbits: 1
672 (*) : -0----0--00----0-----1----0
672     : ['promise(acceptor2,proposer0)', '~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~promise(acceptor0,proposer0)', '~start(proposer2)']
673     : --0---0--00----0-----1---0-
673     : ['promise(acceptor2,proposer0)', '~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~promise(acceptor0,proposer0)', '~start(proposer1)']
674     : 0------0-00-----0-----1---0
674     : ['promise(acceptor2,proposer1)', '~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~promise(acceptor0,proposer1)', '~start(proposer2)']
675     : --0----0-00-----0-----1-0--
675     : ['promise(acceptor2,proposer1)', '~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~promise(acceptor0,proposer1)', '~start(proposer0)']
676     : 0-------000------0-----1-0-
676     : ['promise(acceptor2,proposer2)', '~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~promise(acceptor0,proposer2)', '~start(proposer1)']
677     : -0------000------0-----10--
677     : ['promise(acceptor2,proposer2)', '~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~promise(acceptor0,proposer2)', '~start(proposer0)']
678     : ----0-0--0-0---0--1-------0
678     : ['promise(acceptor1,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor2)', '~promise(acceptor0,proposer0)', '~start(proposer2)']
679     : -----00--0-0---0--1------0-
679     : ['promise(acceptor1,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor2)', '~promise(acceptor0,proposer0)', '~start(proposer1)']
680     : ---0---0-0-0----0--1------0
680     : ['promise(acceptor1,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor2)', '~promise(acceptor0,proposer1)', '~start(proposer2)']
681     : -----0-0-0-0----0--1----0--
681     : ['promise(acceptor1,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor2)', '~promise(acceptor0,proposer1)', '~start(proposer0)']
682     : ---0----00-0-----0--1----0-
682     : ['promise(acceptor1,proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor2)', '~promise(acceptor0,proposer2)', '~start(proposer1)']
683     : ----0---00-0-----0--1---0--
683     : ['promise(acceptor1,proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor2)', '~promise(acceptor0,proposer2)', '~start(proposer0)']
684     : -0-0-----00-------0--1----0
684     : ['promise(acceptor2,proposer0)', '~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~promise(acceptor1,proposer0)', '~start(proposer2)']
685     : --00-----00-------0--1---0-
685     : ['promise(acceptor2,proposer0)', '~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~promise(acceptor1,proposer0)', '~start(proposer1)']
686     : 0---0----00--------0--1---0
686     : ['promise(acceptor2,proposer1)', '~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~promise(acceptor1,proposer1)', '~start(proposer2)']
687     : --0-0----00--------0--1-0--
687     : ['promise(acceptor2,proposer1)', '~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~promise(acceptor1,proposer1)', '~start(proposer0)']
688     : 0----0---00---------0--1-0-
688     : ['promise(acceptor2,proposer2)', '~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~promise(acceptor1,proposer2)', '~start(proposer1)']
689     : -0---0---00---------0--10--
689     : ['promise(acceptor2,proposer2)', '~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~promise(acceptor1,proposer2)', '~start(proposer0)']
690     : ---0---0--00---1--0-------0
690     : ['promise(acceptor0,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor1,proposer0)', '~start(proposer2)']
691     : ---0----0-00---1--0------0-
691     : ['promise(acceptor0,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor1,proposer0)', '~start(proposer1)']
692     : ----0-0---00----1--0------0
692     : ['promise(acceptor0,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor1,proposer1)', '~start(proposer2)']
693     : ----0---0-00----1--0----0--
693     : ['promise(acceptor0,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor1,proposer1)', '~start(proposer0)']
694     : -----00---00-----1--0----0-
694     : ['promise(acceptor0,proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor1,proposer2)', '~start(proposer1)']
695     : -----0-0--00-----1--0---0--
695     : ['promise(acceptor0,proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor1,proposer2)', '~start(proposer0)']
696     : 0---0----0-0------1--0----0
696     : ['promise(acceptor1,proposer0)', '~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor2)', '~promise(acceptor2,proposer0)', '~start(proposer2)']
697     : 0----0---0-0------1--0---0-
697     : ['promise(acceptor1,proposer0)', '~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor2)', '~promise(acceptor2,proposer0)', '~start(proposer1)']
698     : -0-0-----0-0-------1--0---0
698     : ['promise(acceptor1,proposer1)', '~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor2)', '~promise(acceptor2,proposer1)', '~start(proposer2)']
699     : -0---0---0-0-------1--0-0--
699     : ['promise(acceptor1,proposer1)', '~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor2)', '~promise(acceptor2,proposer1)', '~start(proposer0)']
700     : --00-----0-0--------1--0-0-
700     : ['promise(acceptor1,proposer2)', '~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor2)', '~promise(acceptor2,proposer2)', '~start(proposer1)']
701     : --0-0----0-0--------1--00--
701     : ['promise(acceptor1,proposer2)', '~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor2)', '~promise(acceptor2,proposer2)', '~start(proposer0)']
702     : 0------0--00---1-----0----0
702     : ['promise(acceptor0,proposer0)', '~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor2,proposer0)', '~start(proposer2)']
703     : 0-------0-00---1-----0---0-
703     : ['promise(acceptor0,proposer0)', '~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor2,proposer0)', '~start(proposer1)']
704     : -0----0---00----1-----0---0
704     : ['promise(acceptor0,proposer1)', '~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor2,proposer1)', '~start(proposer2)']
705     : -0------0-00----1-----0-0--
705     : ['promise(acceptor0,proposer1)', '~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor2,proposer1)', '~start(proposer0)']
706     : --0---0---00-----1-----0-0-
706     : ['promise(acceptor0,proposer2)', '~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor2,proposer2)', '~start(proposer1)']
707     : --0----0--00-----1-----00--
707     : ['promise(acceptor0,proposer2)', '~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor2,proposer2)', '~start(proposer0)']
num_forall :   8
num_exists :   0
num_literals : 20
quantified form : forall PROPOSER1,PROPOSER2,ACCEPTOR2,ACCEPTOR0,PROPOSER0,QUORUM0,ACCEPTOR1,QUORUM1. ~member(ACCEPTOR1,QUORUM1) | ~promise(ACCEPTOR2,PROPOSER0) | ~member(ACCEPTOR2,QUORUM1) | didNotPromise(ACCEPTOR0) | promise(ACCEPTOR0,PROPOSER0) | start(PROPOSER2) | ~member(ACCEPTOR1,QUORUM0) | ~member(ACCEPTOR0,QUORUM0) | chosenAt(QUORUM0,PROPOSER1) | chosenAt(QUORUM1,PROPOSER0) | member(ACCEPTOR0,QUORUM1) | didNotPromise(ACCEPTOR1) | member(ACCEPTOR2,QUORUM0) | (PROPOSER0 = PROPOSER2 | ACCEPTOR0 = ACCEPTOR1 | PROPOSER1 = PROPOSER2 | ACCEPTOR1 = ACCEPTOR2 | PROPOSER0 = PROPOSER1 | QUORUM0 = QUORUM1 | ACCEPTOR0 = ACCEPTOR2)
qcost : 28




=== Prime Orbit 47 =====================
size : 18
num_suborbits: 1
771 (*) : 0--0----0000-----0-------0-
771     : ['~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor0,proposer2)', '~start(proposer1)']
772     : 0--0---0-000----0---------0
772     : ['~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor0,proposer1)', '~start(proposer2)']
773     : -0--0---0000-----0------0--
773     : ['~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor0,proposer2)', '~start(proposer0)']
774     : -0--0-0--000---0----------0
774     : ['~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor0,proposer0)', '~start(proposer2)']
775     : --0--0-0-000----0-------0--
775     : ['~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor0,proposer1)', '~start(proposer0)']
776     : --0--00--000---0---------0-
776     : ['~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor0,proposer0)', '~start(proposer1)']
777     : 0----00--000--------0----0-
777     : ['~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor1,proposer2)', '~start(proposer1)']
778     : 0---0-0--000-------0------0
778     : ['~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor1,proposer1)', '~start(proposer2)']
779     : -0---0-0-000--------0---0--
779     : ['~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor1,proposer2)', '~start(proposer0)']
780     : -0-0---0-000------0-------0
780     : ['~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor1,proposer0)', '~start(proposer2)']
781     : --0-0---0000-------0----0--
781     : ['~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor1,proposer1)', '~start(proposer0)']
782     : --00----0000------0------0-
782     : ['~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor1,proposer0)', '~start(proposer1)']
783     : --00--0--000-----------0-0-
783     : ['~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor2,proposer2)', '~start(proposer1)']
784     : -0-0--0--000----------0---0
784     : ['~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor2,proposer1)', '~start(proposer2)']
785     : --0-0--0-000-----------00--
785     : ['~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor2,proposer2)', '~start(proposer0)']
786     : 0---0--0-000---------0----0
786     : ['~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor2,proposer0)', '~start(proposer2)']
787     : -0---0--0000----------0-0--
787     : ['~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor2,proposer1)', '~start(proposer0)']
788     : 0----0--0000---------0---0-
788     : ['~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor2,proposer0)', '~start(proposer1)']
num_forall :   9
num_exists :   0
num_literals : 26
quantified form : forall PROPOSER1,PROPOSER2,QUORUM2,ACCEPTOR2,ACCEPTOR0,PROPOSER0,QUORUM0,ACCEPTOR1,QUORUM1. didNotPromise(ACCEPTOR2) | chosenAt(QUORUM2,PROPOSER1) | ~member(ACCEPTOR2,QUORUM1) | promise(ACCEPTOR0,PROPOSER1) | didNotPromise(ACCEPTOR0) | start(PROPOSER2) | ~member(ACCEPTOR0,QUORUM1) | ~member(ACCEPTOR1,QUORUM0) | ~member(ACCEPTOR0,QUORUM0) | ~member(ACCEPTOR1,QUORUM2) | ~member(ACCEPTOR2,QUORUM2) | member(ACCEPTOR0,QUORUM2) | member(ACCEPTOR1,QUORUM1) | chosenAt(QUORUM1,PROPOSER0) | chosenAt(QUORUM0,PROPOSER0) | didNotPromise(ACCEPTOR1) | member(ACCEPTOR2,QUORUM0) | (QUORUM1 = QUORUM2 | PROPOSER0 = PROPOSER2 | PROPOSER1 = PROPOSER2 | ACCEPTOR0 = ACCEPTOR1 | ACCEPTOR1 = ACCEPTOR2 | PROPOSER0 = PROPOSER1 | QUORUM0 = QUORUM2 | QUORUM0 = QUORUM1 | ACCEPTOR0 = ACCEPTOR2)
qcost : 35




=== Prime Orbit 48 =====================
size : 18
num_suborbits: 1
789 (*) : 0-------0000-----0---0---0-
789     : ['~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor0,proposer2)', '~promise(acceptor2,proposer0)', '~start(proposer1)']
790     : 0------0-000----0----0----0
790     : ['~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor0,proposer1)', '~promise(acceptor2,proposer0)', '~start(proposer2)']
791     : -0------0000-----0----0-0--
791     : ['~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor0,proposer2)', '~promise(acceptor2,proposer1)', '~start(proposer0)']
792     : -0----0--000---0------0---0
792     : ['~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor0,proposer0)', '~promise(acceptor2,proposer1)', '~start(proposer2)']
793     : --0----0-000----0------00--
793     : ['~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor0,proposer1)', '~promise(acceptor2,proposer2)', '~start(proposer0)']
794     : --0---0--000---0-------0-0-
794     : ['~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor0,proposer0)', '~promise(acceptor2,proposer2)', '~start(proposer1)']
795     : ---0----0000-----00------0-
795     : ['~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor0,proposer2)', '~promise(acceptor1,proposer0)', '~start(proposer1)']
796     : ---0---0-000----0-0-------0
796     : ['~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor0,proposer1)', '~promise(acceptor1,proposer0)', '~start(proposer2)']
797     : ----0---0000-----0-0----0--
797     : ['~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor0,proposer2)', '~promise(acceptor1,proposer1)', '~start(proposer0)']
798     : ----0-0--000---0---0------0
798     : ['~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor0,proposer0)', '~promise(acceptor1,proposer1)', '~start(proposer2)']
799     : -----0-0-000----0---0---0--
799     : ['~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor0,proposer1)', '~promise(acceptor1,proposer2)', '~start(proposer0)']
800     : -----00--000---0----0----0-
800     : ['~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor0,proposer0)', '~promise(acceptor1,proposer2)', '~start(proposer1)']
801     : 0----0---000--------00---0-
801     : ['~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor1,proposer2)', '~promise(acceptor2,proposer0)', '~start(proposer1)']
802     : 0---0----000-------0-0----0
802     : ['~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor1,proposer1)', '~promise(acceptor2,proposer0)', '~start(proposer2)']
803     : -0---0---000--------0-0-0--
803     : ['~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor1,proposer2)', '~promise(acceptor2,proposer1)', '~start(proposer0)']
804     : -0-0-----000------0---0---0
804     : ['~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor1,proposer0)', '~promise(acceptor2,proposer1)', '~start(proposer2)']
805     : --0-0----000-------0---00--
805     : ['~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor1,proposer1)', '~promise(acceptor2,proposer2)', '~start(proposer0)']
806     : --00-----000------0----0-0-
806     : ['~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor1,proposer0)', '~promise(acceptor2,proposer2)', '~start(proposer1)']
num_forall :   8
num_exists :   0
num_literals : 21
quantified form : forall PROPOSER1,PROPOSER2,ACCEPTOR2,ACCEPTOR0,PROPOSER0,QUORUM0,ACCEPTOR1,QUORUM1. didNotPromise(ACCEPTOR2) | ~member(ACCEPTOR1,QUORUM1) | ~member(ACCEPTOR2,QUORUM1) | promise(ACCEPTOR0,PROPOSER1) | promise(ACCEPTOR2,PROPOSER0) | didNotPromise(ACCEPTOR0) | start(PROPOSER2) | ~member(ACCEPTOR1,QUORUM0) | member(ACCEPTOR0,QUORUM1) | ~member(ACCEPTOR0,QUORUM0) | chosenAt(QUORUM0,PROPOSER0) | chosenAt(QUORUM1,PROPOSER1) | didNotPromise(ACCEPTOR1) | member(ACCEPTOR2,QUORUM0) | (PROPOSER0 = PROPOSER2 | ACCEPTOR0 = ACCEPTOR1 | PROPOSER1 = PROPOSER2 | ACCEPTOR1 = ACCEPTOR2 | PROPOSER0 = PROPOSER1 | QUORUM0 = QUORUM1 | ACCEPTOR0 = ACCEPTOR2)
qcost : 29




=== Prime Orbit 49 =====================
size : 3
num_suborbits: 1
807 (*) : 0-00-00-0000-------------0-
807     : ['~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~start(proposer1)']
808     : 00-00-00-000--------------0
808     : ['~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~start(proposer2)']
809     : -00-00-00000------------0--
809     : ['~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~start(proposer0)']
num_forall :   7
num_exists :   1
num_literals : 23
quantified form : forall PROPOSER1,QUORUM2,ACCEPTOR2,ACCEPTOR0,QUORUM0,ACCEPTOR1,QUORUM1. didNotPromise(ACCEPTOR2) | ~member(ACCEPTOR2,QUORUM1) | didNotPromise(ACCEPTOR0) | ~member(ACCEPTOR0,QUORUM1) | ~member(ACCEPTOR1,QUORUM0) | ~member(ACCEPTOR0,QUORUM0) | start(PROPOSER1) | ~member(ACCEPTOR1,QUORUM2) | ~member(ACCEPTOR2,QUORUM2) | member(ACCEPTOR0,QUORUM2) | member(ACCEPTOR1,QUORUM1) | didNotPromise(ACCEPTOR1) | member(ACCEPTOR2,QUORUM0) | (exists PROPOSER0. ((chosenAt(QUORUM2,PROPOSER0) | chosenAt(QUORUM1,PROPOSER0) | chosenAt(QUORUM0,PROPOSER0)) & PROPOSER0 ~= PROPOSER1)) | (QUORUM1 = QUORUM2 | ACCEPTOR0 = ACCEPTOR1 | ACCEPTOR1 = ACCEPTOR2 | QUORUM0 = QUORUM2 | QUORUM0 = QUORUM1 | ACCEPTOR0 = ACCEPTOR2)
qcost : 31



[QRM NOTE]: Time elapsed since start: 9.531 seconds

[QRM NOTE]: Time elapsed since last: 0.543 seconds

[QRM NOTE]: Peak memory: 3263449 bytes


======================================================================================================

	[MIN]: Minimization on [ivybench/sym_quorum/ivy/simple-election: acceptor=3,proposer=3]

======================================================================================================


New level: 1
 pending : [2, 3, 4, 5, 9, 11, 12, 13, 15, 16, 17, 18, 19, 20, 23, 25, 26, 27, 28, 30, 31, 33, 34, 35, 36, 37, 39, 40, 41, 42, 43, 47, 48, 49]
 solution : [7]


Before reduction : 
 pending  : [2, 3, 4, 5, 9, 11, 12, 13, 15, 16, 17, 18, 19, 20, 23, 25, 26, 27, 28, 30, 31, 33, 34, 35, 36, 37, 39, 40, 41, 42, 43, 47, 48, 49]
 solution : [7]

Essensial at level 1 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 1048576), (3, 17179869184), (4, 17179869184), (5, 134217728), (6, -1), (7, -1), (8, -1), (9, 1048576), (10, -1), (11, 33554432), (12, 67108864), (13, 524288), (14, -1), (15, 1114112), (16, 2147483648), (17, 16777216), (18, 1073741824), (19, 8388608), (20, 262144), (21, -1), (22, -1), (23, 134217728), (24, -1), (25, 4194304), (26, 4294967296), (27, 1073741824), (28, 4294967296), (29, -1), (30, 1048576), (31, 16384), (32, -1), (33, 2147483648), (34, 4194304), (35, 32768), (36, 4194304), (37, 268435456), (38, -1), (39, 16384), (40, 134217728), (41, 1073741824), (42, 524288), (43, 524288), (44, -1), (45, -1), (46, -1), (47, 67108864), (48, 16777216), (49, 67108864), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 1048576), (3, 17179869184), (4, 17179869184), (5, 134217728), (6, -1), (7, -1), (8, -1), (9, 1048576), (10, -1), (11, 33554432), (12, 67108864), (13, 524288), (14, -1), (15, 1114112), (16, 2147483648), (17, 16777216), (18, 1073741824), (19, 8388608), (20, 262144), (21, -1), (22, -1), (23, 134217728), (24, -1), (25, 4194304), (26, 4294967296), (27, 1073741824), (28, 4294967296), (29, -1), (30, 1048576), (31, 16384), (32, -1), (33, 2147483648), (34, 4194304), (35, 32768), (36, 4194304), (37, 268435456), (38, -1), (39, 16384), (40, 134217728), (41, 1073741824), (42, 524288), (43, 524288), (44, -1), (45, -1), (46, -1), (47, 67108864), (48, 16777216), (49, 67108864), (50, -1), (51, -1), (52, -1)]

Covered at level 1 : set()

After reduction : 
 pending  : [2, 3, 4, 5, 9, 11, 12, 13, 15, 16, 17, 18, 19, 20, 23, 25, 26, 27, 28, 30, 31, 33, 34, 35, 36, 37, 39, 40, 41, 42, 43, 47, 48, 49]
 solution : [7]


Solution : [7] has cost 6.


Decide in level 1 among pending : [2, 3, 4, 5, 9, 11, 12, 13, 15, 16, 17, 18, 19, 20, 23, 25, 26, 27, 28, 30, 31, 33, 34, 35, 36, 37, 39, 40, 41, 42, 43, 47, 48, 49]

Coverage : [(0, -1), (1, -1), (2, 1048576), (3, 17179869184), (4, 17179869184), (5, 134217728), (6, -1), (7, -1), (8, -1), (9, 1048576), (10, -1), (11, 33554432), (12, 67108864), (13, 524288), (14, -1), (15, 1114112), (16, 2147483648), (17, 16777216), (18, 1073741824), (19, 8388608), (20, 262144), (21, -1), (22, -1), (23, 134217728), (24, -1), (25, 4194304), (26, 4294967296), (27, 1073741824), (28, 4294967296), (29, -1), (30, 1048576), (31, 16384), (32, -1), (33, 2147483648), (34, 4194304), (35, 32768), (36, 4194304), (37, 268435456), (38, -1), (39, 16384), (40, 134217728), (41, 1073741824), (42, 524288), (43, 524288), (44, -1), (45, -1), (46, -1), (47, 67108864), (48, 16777216), (49, 67108864), (50, -1), (51, -1), (52, -1)]

Decide 3 with phase True at level 1

After decision at level 1
 pending : [2, 4, 5, 9, 11, 12, 13, 15, 16, 17, 18, 19, 20, 23, 25, 26, 27, 28, 30, 31, 33, 34, 35, 36, 37, 39, 40, 41, 42, 43, 47, 48, 49]
 solution : [7, 3]


New level: 2
 pending : [2, 4, 5, 9, 11, 12, 13, 15, 16, 17, 18, 19, 20, 23, 25, 26, 27, 28, 30, 31, 33, 34, 35, 36, 37, 39, 40, 41, 42, 43, 47, 48, 49]
 solution : [7, 3]


Before reduction : 
 pending  : [2, 4, 5, 9, 11, 12, 13, 15, 16, 17, 18, 19, 20, 23, 25, 26, 27, 28, 30, 31, 33, 34, 35, 36, 37, 39, 40, 41, 42, 43, 47, 48, 49]
 solution : [7, 3]

Essensial at level 2 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 1048576), (3, 17179869184), (4, 17179869184), (5, 134217728), (6, -1), (7, -1), (8, -1), (9, 1048576), (10, -1), (11, 33554432), (12, 67108864), (13, 524288), (14, -1), (15, 1114112), (16, 2147483648), (17, 16777216), (18, 1073741824), (19, 8388608), (20, 262144), (21, -1), (22, -1), (23, 134217728), (24, -1), (25, 4194304), (26, 4294967296), (27, 1073741824), (28, 4294967296), (29, -1), (30, 1048576), (31, 16384), (32, -1), (33, 2147483648), (34, 4194304), (35, 32768), (36, 4194304), (37, 268435456), (38, -1), (39, 16384), (40, 134217728), (41, 1073741824), (42, 524288), (43, 524288), (44, -1), (45, -1), (46, -1), (47, 67108864), (48, 16777216), (49, 67108864), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 524288), (3, -1), (4, 4294967296), (5, 67108864), (6, -1), (7, -1), (8, -1), (9, 524288), (10, -1), (11, 16777216), (12, 33554432), (13, 262144), (14, -1), (15, 557056), (16, 1073741824), (17, 8388608), (18, 536870912), (19, 4194304), (20, 131072), (21, -1), (22, -1), (23, 67108864), (24, -1), (25, 2097152), (26, 2147483648), (27, 268435456), (28, 536870912), (29, -1), (30, 524288), (31, 8192), (32, -1), (33, 536870912), (34, 1048576), (35, 8192), (36, 2097152), (37, 67108864), (38, -1), (39, 8192), (40, 67108864), (41, 134217728), (42, 262144), (43, 262144), (44, -1), (45, -1), (46, -1), (47, 33554432), (48, 8388608), (49, 33554432), (50, -1), (51, -1), (52, -1)]

Covered at level 2 : set()

After reduction : 
 pending  : [2, 4, 5, 9, 11, 12, 13, 15, 16, 17, 18, 19, 20, 23, 25, 26, 27, 28, 30, 31, 33, 34, 35, 36, 37, 39, 40, 41, 42, 43, 47, 48, 49]
 solution : [7, 3]


Solution : [7, 3] has cost 9.


Decide in level 2 among pending : [2, 4, 5, 9, 11, 12, 13, 15, 16, 17, 18, 19, 20, 23, 25, 26, 27, 28, 30, 31, 33, 34, 35, 36, 37, 39, 40, 41, 42, 43, 47, 48, 49]

Coverage : [(0, -1), (1, -1), (2, 524288), (3, -1), (4, 4294967296), (5, 67108864), (6, -1), (7, -1), (8, -1), (9, 524288), (10, -1), (11, 16777216), (12, 33554432), (13, 262144), (14, -1), (15, 557056), (16, 1073741824), (17, 8388608), (18, 536870912), (19, 4194304), (20, 131072), (21, -1), (22, -1), (23, 67108864), (24, -1), (25, 2097152), (26, 2147483648), (27, 268435456), (28, 536870912), (29, -1), (30, 524288), (31, 8192), (32, -1), (33, 536870912), (34, 1048576), (35, 8192), (36, 2097152), (37, 67108864), (38, -1), (39, 8192), (40, 67108864), (41, 134217728), (42, 262144), (43, 262144), (44, -1), (45, -1), (46, -1), (47, 33554432), (48, 8388608), (49, 33554432), (50, -1), (51, -1), (52, -1)]

Decide 4 with phase True at level 2

After decision at level 2
 pending : [2, 5, 9, 11, 12, 13, 15, 16, 17, 18, 19, 20, 23, 25, 26, 27, 28, 30, 31, 33, 34, 35, 36, 37, 39, 40, 41, 42, 43, 47, 48, 49]
 solution : [7, 3, 4]


New level: 3
 pending : [2, 5, 9, 11, 12, 13, 15, 16, 17, 18, 19, 20, 23, 25, 26, 27, 28, 30, 31, 33, 34, 35, 36, 37, 39, 40, 41, 42, 43, 47, 48, 49]
 solution : [7, 3, 4]


Before reduction : 
 pending  : [2, 5, 9, 11, 12, 13, 15, 16, 17, 18, 19, 20, 23, 25, 26, 27, 28, 30, 31, 33, 34, 35, 36, 37, 39, 40, 41, 42, 43, 47, 48, 49]
 solution : [7, 3, 4]

Essensial at level 3 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 524288), (3, -1), (4, 4294967296), (5, 67108864), (6, -1), (7, -1), (8, -1), (9, 524288), (10, -1), (11, 16777216), (12, 33554432), (13, 262144), (14, -1), (15, 557056), (16, 1073741824), (17, 8388608), (18, 536870912), (19, 4194304), (20, 131072), (21, -1), (22, -1), (23, 67108864), (24, -1), (25, 2097152), (26, 2147483648), (27, 268435456), (28, 536870912), (29, -1), (30, 524288), (31, 8192), (32, -1), (33, 536870912), (34, 1048576), (35, 8192), (36, 2097152), (37, 67108864), (38, -1), (39, 8192), (40, 67108864), (41, 134217728), (42, 262144), (43, 262144), (44, -1), (45, -1), (46, -1), (47, 33554432), (48, 8388608), (49, 33554432), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 131072), (3, -1), (4, -1), (5, 67108864), (6, -1), (7, -1), (8, -1), (9, 524288), (10, -1), (11, 4194304), (12, 8388608), (13, 65536), (14, -1), (15, 139264), (16, 268435456), (17, 2097152), (18, 134217728), (19, 1048576), (20, 32768), (21, -1), (22, -1), (23, 67108864), (24, -1), (25, 524288), (26, 536870912), (27, 268435456), (28, 536870912), (29, -1), (30, 524288), (31, 8192), (32, -1), (33, 536870912), (34, 1048576), (35, 8192), (36, 524288), (37, 33554432), (38, -1), (39, 8192), (40, 67108864), (41, 134217728), (42, 262144), (43, 262144), (44, -1), (45, -1), (46, -1), (47, 33554432), (48, 8388608), (49, 33554432), (50, -1), (51, -1), (52, -1)]

Covered at level 3 : set()

After reduction : 
 pending  : [2, 5, 9, 11, 12, 13, 15, 16, 17, 18, 19, 20, 23, 25, 26, 27, 28, 30, 31, 33, 34, 35, 36, 37, 39, 40, 41, 42, 43, 47, 48, 49]
 solution : [7, 3, 4]


Solution : [7, 3, 4] has cost 14.


Decide in level 3 among pending : [2, 5, 9, 11, 12, 13, 15, 16, 17, 18, 19, 20, 23, 25, 26, 27, 28, 30, 31, 33, 34, 35, 36, 37, 39, 40, 41, 42, 43, 47, 48, 49]

Coverage : [(0, -1), (1, -1), (2, 131072), (3, -1), (4, -1), (5, 67108864), (6, -1), (7, -1), (8, -1), (9, 524288), (10, -1), (11, 4194304), (12, 8388608), (13, 65536), (14, -1), (15, 139264), (16, 268435456), (17, 2097152), (18, 134217728), (19, 1048576), (20, 32768), (21, -1), (22, -1), (23, 67108864), (24, -1), (25, 524288), (26, 536870912), (27, 268435456), (28, 536870912), (29, -1), (30, 524288), (31, 8192), (32, -1), (33, 536870912), (34, 1048576), (35, 8192), (36, 524288), (37, 33554432), (38, -1), (39, 8192), (40, 67108864), (41, 134217728), (42, 262144), (43, 262144), (44, -1), (45, -1), (46, -1), (47, 33554432), (48, 8388608), (49, 33554432), (50, -1), (51, -1), (52, -1)]

Decide 26 with phase True at level 3

After decision at level 3
 pending : [2, 5, 9, 11, 12, 13, 15, 16, 17, 18, 19, 20, 23, 25, 27, 28, 30, 31, 33, 34, 35, 36, 37, 39, 40, 41, 42, 43, 47, 48, 49]
 solution : [7, 3, 4, 26]


New level: 4
 pending : [2, 5, 9, 11, 12, 13, 15, 16, 17, 18, 19, 20, 23, 25, 27, 28, 30, 31, 33, 34, 35, 36, 37, 39, 40, 41, 42, 43, 47, 48, 49]
 solution : [7, 3, 4, 26]


Before reduction : 
 pending  : [2, 5, 9, 11, 12, 13, 15, 16, 17, 18, 19, 20, 23, 25, 27, 28, 30, 31, 33, 34, 35, 36, 37, 39, 40, 41, 42, 43, 47, 48, 49]
 solution : [7, 3, 4, 26]

Essensial at level 4 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 131072), (3, -1), (4, -1), (5, 67108864), (6, -1), (7, -1), (8, -1), (9, 524288), (10, -1), (11, 4194304), (12, 8388608), (13, 65536), (14, -1), (15, 139264), (16, 268435456), (17, 2097152), (18, 134217728), (19, 1048576), (20, 32768), (21, -1), (22, -1), (23, 67108864), (24, -1), (25, 524288), (26, 536870912), (27, 268435456), (28, 536870912), (29, -1), (30, 524288), (31, 8192), (32, -1), (33, 536870912), (34, 1048576), (35, 8192), (36, 524288), (37, 33554432), (38, -1), (39, 8192), (40, 67108864), (41, 134217728), (42, 262144), (43, 262144), (44, -1), (45, -1), (46, -1), (47, 33554432), (48, 8388608), (49, 33554432), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 0), (3, -1), (4, -1), (5, 67108864), (6, -1), (7, -1), (8, -1), (9, 131072), (10, -1), (11, 0), (12, 0), (13, 0), (14, -1), (15, 0), (16, 0), (17, 0), (18, 0), (19, 0), (20, 0), (21, -1), (22, -1), (23, 67108864), (24, -1), (25, 0), (26, -1), (27, 268435456), (28, 536870912), (29, -1), (30, 262144), (31, 4096), (32, -1), (33, 536870912), (34, 1048576), (35, 8192), (36, 0), (37, 1024), (38, -1), (39, 2048), (40, 33554432), (41, 2048), (42, 65536), (43, 65536), (44, -1), (45, -1), (46, -1), (47, 16777216), (48, 2097152), (49, 8388608), (50, -1), (51, -1), (52, -1)]

Covered at level 4 : {2, 36, 11, 12, 13, 15, 16, 17, 18, 19, 20, 25}

After reduction : 
 pending  : [5, 9, 23, 27, 28, 30, 31, 33, 34, 35, 37, 39, 40, 41, 42, 43, 47, 48, 49]
 solution : [7, 3, 4, 26]


Before reduction : 
 pending  : [5, 9, 23, 27, 28, 30, 31, 33, 34, 35, 37, 39, 40, 41, 42, 43, 47, 48, 49]
 solution : [7, 3, 4, 26]

Essensial at level 4 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 0), (3, -1), (4, -1), (5, 67108864), (6, -1), (7, -1), (8, -1), (9, 131072), (10, -1), (11, 0), (12, 0), (13, 0), (14, -1), (15, 0), (16, 0), (17, 0), (18, 0), (19, 0), (20, 0), (21, -1), (22, -1), (23, 67108864), (24, -1), (25, 0), (26, -1), (27, 268435456), (28, 536870912), (29, -1), (30, 262144), (31, 4096), (32, -1), (33, 536870912), (34, 1048576), (35, 8192), (36, 0), (37, 1024), (38, -1), (39, 2048), (40, 33554432), (41, 2048), (42, 65536), (43, 65536), (44, -1), (45, -1), (46, -1), (47, 16777216), (48, 2097152), (49, 8388608), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 67108864), (6, -1), (7, -1), (8, -1), (9, 131072), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, 67108864), (24, -1), (25, -1), (26, -1), (27, 268435456), (28, 536870912), (29, -1), (30, 262144), (31, 4096), (32, -1), (33, 536870912), (34, 1048576), (35, 8192), (36, -1), (37, 1024), (38, -1), (39, 2048), (40, 33554432), (41, 2048), (42, 65536), (43, 65536), (44, -1), (45, -1), (46, -1), (47, 16777216), (48, 2097152), (49, 8388608), (50, -1), (51, -1), (52, -1)]

Covered at level 4 : set()

After reduction : 
 pending  : [5, 9, 23, 27, 28, 30, 31, 33, 34, 35, 37, 39, 40, 41, 42, 43, 47, 48, 49]
 solution : [7, 3, 4, 26]


Solution : [7, 3, 4, 26] has cost 18.


Decide in level 4 among pending : [5, 9, 23, 27, 28, 30, 31, 33, 34, 35, 37, 39, 40, 41, 42, 43, 47, 48, 49]

Coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 67108864), (6, -1), (7, -1), (8, -1), (9, 131072), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, 67108864), (24, -1), (25, -1), (26, -1), (27, 268435456), (28, 536870912), (29, -1), (30, 262144), (31, 4096), (32, -1), (33, 536870912), (34, 1048576), (35, 8192), (36, -1), (37, 1024), (38, -1), (39, 2048), (40, 33554432), (41, 2048), (42, 65536), (43, 65536), (44, -1), (45, -1), (46, -1), (47, 16777216), (48, 2097152), (49, 8388608), (50, -1), (51, -1), (52, -1)]

Decide 28 with phase True at level 4

After decision at level 4
 pending : [5, 9, 23, 27, 30, 31, 33, 34, 35, 37, 39, 40, 41, 42, 43, 47, 48, 49]
 solution : [7, 3, 4, 26, 28]


New level: 5
 pending : [5, 9, 23, 27, 30, 31, 33, 34, 35, 37, 39, 40, 41, 42, 43, 47, 48, 49]
 solution : [7, 3, 4, 26, 28]


Before reduction : 
 pending  : [5, 9, 23, 27, 30, 31, 33, 34, 35, 37, 39, 40, 41, 42, 43, 47, 48, 49]
 solution : [7, 3, 4, 26, 28]

Essensial at level 5 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 67108864), (6, -1), (7, -1), (8, -1), (9, 131072), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, 67108864), (24, -1), (25, -1), (26, -1), (27, 268435456), (28, 536870912), (29, -1), (30, 262144), (31, 4096), (32, -1), (33, 536870912), (34, 1048576), (35, 8192), (36, -1), (37, 1024), (38, -1), (39, 2048), (40, 33554432), (41, 2048), (42, 65536), (43, 65536), (44, -1), (45, -1), (46, -1), (47, 16777216), (48, 2097152), (49, 8388608), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 67108864), (6, -1), (7, -1), (8, -1), (9, 131072), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, 67108864), (24, -1), (25, -1), (26, -1), (27, 134217728), (28, -1), (29, -1), (30, 262144), (31, 4096), (32, -1), (33, 268435456), (34, 524288), (35, 4096), (36, -1), (37, 1024), (38, -1), (39, 2048), (40, 33554432), (41, 2048), (42, 65536), (43, 65536), (44, -1), (45, -1), (46, -1), (47, 16777216), (48, 2097152), (49, 8388608), (50, -1), (51, -1), (52, -1)]

Covered at level 5 : set()

After reduction : 
 pending  : [5, 9, 23, 27, 30, 31, 33, 34, 35, 37, 39, 40, 41, 42, 43, 47, 48, 49]
 solution : [7, 3, 4, 26, 28]


Solution : [7, 3, 4, 26, 28] has cost 22.


Decide in level 5 among pending : [5, 9, 23, 27, 30, 31, 33, 34, 35, 37, 39, 40, 41, 42, 43, 47, 48, 49]

Coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 67108864), (6, -1), (7, -1), (8, -1), (9, 131072), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, 67108864), (24, -1), (25, -1), (26, -1), (27, 134217728), (28, -1), (29, -1), (30, 262144), (31, 4096), (32, -1), (33, 268435456), (34, 524288), (35, 4096), (36, -1), (37, 1024), (38, -1), (39, 2048), (40, 33554432), (41, 2048), (42, 65536), (43, 65536), (44, -1), (45, -1), (46, -1), (47, 16777216), (48, 2097152), (49, 8388608), (50, -1), (51, -1), (52, -1)]

Decide 33 with phase True at level 5

After decision at level 5
 pending : [5, 9, 23, 27, 30, 31, 34, 35, 37, 39, 40, 41, 42, 43, 47, 48, 49]
 solution : [7, 3, 4, 26, 28, 33]


New level: 6
 pending : [5, 9, 23, 27, 30, 31, 34, 35, 37, 39, 40, 41, 42, 43, 47, 48, 49]
 solution : [7, 3, 4, 26, 28, 33]


Before reduction : 
 pending  : [5, 9, 23, 27, 30, 31, 34, 35, 37, 39, 40, 41, 42, 43, 47, 48, 49]
 solution : [7, 3, 4, 26, 28, 33]

Essensial at level 6 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 67108864), (6, -1), (7, -1), (8, -1), (9, 131072), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, 67108864), (24, -1), (25, -1), (26, -1), (27, 134217728), (28, -1), (29, -1), (30, 262144), (31, 4096), (32, -1), (33, 268435456), (34, 524288), (35, 4096), (36, -1), (37, 1024), (38, -1), (39, 2048), (40, 33554432), (41, 2048), (42, 65536), (43, 65536), (44, -1), (45, -1), (46, -1), (47, 16777216), (48, 2097152), (49, 8388608), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 67108864), (6, -1), (7, -1), (8, -1), (9, 32768), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, 67108864), (24, -1), (25, -1), (26, -1), (27, 2048), (28, -1), (29, -1), (30, 65536), (31, 1024), (32, -1), (33, -1), (34, 0), (35, 0), (36, -1), (37, 512), (38, -1), (39, 512), (40, 8388608), (41, 0), (42, 16384), (43, 16384), (44, -1), (45, -1), (46, -1), (47, 4194304), (48, 524288), (49, 2097152), (50, -1), (51, -1), (52, -1)]

Covered at level 6 : {41, 34, 35}

After reduction : 
 pending  : [5, 9, 23, 27, 30, 31, 37, 39, 40, 42, 43, 47, 48, 49]
 solution : [7, 3, 4, 26, 28, 33]


Before reduction : 
 pending  : [5, 9, 23, 27, 30, 31, 37, 39, 40, 42, 43, 47, 48, 49]
 solution : [7, 3, 4, 26, 28, 33]

Essensial at level 6 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 67108864), (6, -1), (7, -1), (8, -1), (9, 32768), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, 67108864), (24, -1), (25, -1), (26, -1), (27, 2048), (28, -1), (29, -1), (30, 65536), (31, 1024), (32, -1), (33, -1), (34, 0), (35, 0), (36, -1), (37, 512), (38, -1), (39, 512), (40, 8388608), (41, 0), (42, 16384), (43, 16384), (44, -1), (45, -1), (46, -1), (47, 4194304), (48, 524288), (49, 2097152), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 67108864), (6, -1), (7, -1), (8, -1), (9, 32768), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, 67108864), (24, -1), (25, -1), (26, -1), (27, 2048), (28, -1), (29, -1), (30, 65536), (31, 1024), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, 512), (38, -1), (39, 512), (40, 8388608), (41, -1), (42, 16384), (43, 16384), (44, -1), (45, -1), (46, -1), (47, 4194304), (48, 524288), (49, 2097152), (50, -1), (51, -1), (52, -1)]

Covered at level 6 : set()

After reduction : 
 pending  : [5, 9, 23, 27, 30, 31, 37, 39, 40, 42, 43, 47, 48, 49]
 solution : [7, 3, 4, 26, 28, 33]


Solution : [7, 3, 4, 26, 28, 33] has cost 35.


Decide in level 6 among pending : [5, 9, 23, 27, 30, 31, 37, 39, 40, 42, 43, 47, 48, 49]

Coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 67108864), (6, -1), (7, -1), (8, -1), (9, 32768), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, 67108864), (24, -1), (25, -1), (26, -1), (27, 2048), (28, -1), (29, -1), (30, 65536), (31, 1024), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, 512), (38, -1), (39, 512), (40, 8388608), (41, -1), (42, 16384), (43, 16384), (44, -1), (45, -1), (46, -1), (47, 4194304), (48, 524288), (49, 2097152), (50, -1), (51, -1), (52, -1)]

Decide 5 with phase True at level 6

After decision at level 6
 pending : [9, 23, 27, 30, 31, 37, 39, 40, 42, 43, 47, 48, 49]
 solution : [7, 3, 4, 26, 28, 33, 5]


New level: 7
 pending : [9, 23, 27, 30, 31, 37, 39, 40, 42, 43, 47, 48, 49]
 solution : [7, 3, 4, 26, 28, 33, 5]


Before reduction : 
 pending  : [9, 23, 27, 30, 31, 37, 39, 40, 42, 43, 47, 48, 49]
 solution : [7, 3, 4, 26, 28, 33, 5]

Essensial at level 7 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 67108864), (6, -1), (7, -1), (8, -1), (9, 32768), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, 67108864), (24, -1), (25, -1), (26, -1), (27, 2048), (28, -1), (29, -1), (30, 65536), (31, 1024), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, 512), (38, -1), (39, 512), (40, 8388608), (41, -1), (42, 16384), (43, 16384), (44, -1), (45, -1), (46, -1), (47, 4194304), (48, 524288), (49, 2097152), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, 0), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, 0), (24, -1), (25, -1), (26, -1), (27, 0), (28, -1), (29, -1), (30, 0), (31, 0), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, 0), (38, -1), (39, 0), (40, 0), (41, -1), (42, 0), (43, 0), (44, -1), (45, -1), (46, -1), (47, 0), (48, 0), (49, 0), (50, -1), (51, -1), (52, -1)]

Covered at level 7 : {37, 39, 40, 9, 42, 43, 47, 48, 49, 23, 27, 30, 31}

After reduction : 
 pending  : []
 solution : [7, 3, 4, 26, 28, 33, 5]


Before reduction : 
 pending  : []
 solution : [7, 3, 4, 26, 28, 33, 5]

Essensial at level 7 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, 0), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, 0), (24, -1), (25, -1), (26, -1), (27, 0), (28, -1), (29, -1), (30, 0), (31, 0), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, 0), (38, -1), (39, 0), (40, 0), (41, -1), (42, 0), (43, 0), (44, -1), (45, -1), (46, -1), (47, 0), (48, 0), (49, 0), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 7 : set()

After reduction : 
 pending  : []
 solution : [7, 3, 4, 26, 28, 33, 5]


Solution : [7, 3, 4, 26, 28, 33, 5] has cost 39.


Before backtrack at level 7
 pending : []
 solution : [7, 3, 4, 26, 28, 33, 5]

After backtrack at level 7
 pending : [9, 23, 27, 30, 31, 37, 39, 40, 42, 43, 47, 48, 49]
 solution : [7, 3, 4, 26, 28, 33, 5]


Invert decision for 5 at level 6


New level: 7
 pending : [9, 23, 27, 30, 31, 37, 39, 40, 42, 43, 47, 48, 49]
 solution : [7, 3, 4, 26, 28, 33]


Before reduction : 
 pending  : [9, 23, 27, 30, 31, 37, 39, 40, 42, 43, 47, 48, 49]
 solution : [7, 3, 4, 26, 28, 33]

Essensial at level 7 : {23}

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, 0), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, 0), (28, -1), (29, -1), (30, 0), (31, 0), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, 0), (38, -1), (39, 0), (40, 0), (41, -1), (42, 0), (43, 0), (44, -1), (45, -1), (46, -1), (47, 0), (48, 0), (49, 0), (50, -1), (51, -1), (52, -1)]

Covered at level 7 : {37, 39, 40, 9, 42, 43, 47, 48, 49, 27, 30, 31}

After reduction : 
 pending  : []
 solution : [7, 3, 4, 26, 28, 33, 23]


Before reduction : 
 pending  : []
 solution : [7, 3, 4, 26, 28, 33, 23]

Essensial at level 7 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, 0), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, 0), (28, -1), (29, -1), (30, 0), (31, 0), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, 0), (38, -1), (39, 0), (40, 0), (41, -1), (42, 0), (43, 0), (44, -1), (45, -1), (46, -1), (47, 0), (48, 0), (49, 0), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 7 : set()

After reduction : 
 pending  : []
 solution : [7, 3, 4, 26, 28, 33, 23]


Solution : [7, 3, 4, 26, 28, 33, 23] has cost 42.


Before backtrack at level 7
 pending : []
 solution : [7, 3, 4, 26, 28, 33, 23]

After backtrack at level 7
 pending : [23, 9, 27, 30, 31, 37, 39, 40, 42, 43, 47, 48, 49]
 solution : [7, 3, 4, 26, 28, 33]


Before backtrack at level 6
 pending : [23, 9, 27, 30, 31, 37, 39, 40, 42, 43, 47, 48, 49]
 solution : [7, 3, 4, 26, 28, 33]

After backtrack at level 6
 pending : [23, 9, 27, 30, 31, 37, 39, 40, 42, 43, 47, 48, 49, 34, 35, 41, 5]
 solution : [7, 3, 4, 26, 28, 33]


Invert decision for 33 at level 5


New level: 6
 pending : [23, 9, 27, 30, 31, 37, 39, 40, 42, 43, 47, 48, 49, 34, 35, 41, 5]
 solution : [7, 3, 4, 26, 28]


Before reduction : 
 pending  : [23, 9, 27, 30, 31, 37, 39, 40, 42, 43, 47, 48, 49, 34, 35, 41, 5]
 solution : [7, 3, 4, 26, 28]

Essensial at level 6 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 67108864), (6, -1), (7, -1), (8, -1), (9, 131072), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, 67108864), (24, -1), (25, -1), (26, -1), (27, 134217728), (28, -1), (29, -1), (30, 262144), (31, 4096), (32, -1), (33, -1), (34, 524288), (35, 4096), (36, -1), (37, 1024), (38, -1), (39, 2048), (40, 33554432), (41, 2048), (42, 65536), (43, 65536), (44, -1), (45, -1), (46, -1), (47, 16777216), (48, 2097152), (49, 8388608), (50, -1), (51, -1), (52, -1)]

Covered at level 6 : set()

After reduction : 
 pending  : [23, 9, 27, 30, 31, 37, 39, 40, 42, 43, 47, 48, 49, 34, 35, 41, 5]
 solution : [7, 3, 4, 26, 28]


Solution : [7, 3, 4, 26, 28] has cost 22.


Decide in level 6 among pending : [23, 9, 27, 30, 31, 37, 39, 40, 42, 43, 47, 48, 49, 34, 35, 41, 5]

Coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 67108864), (6, -1), (7, -1), (8, -1), (9, 131072), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, 67108864), (24, -1), (25, -1), (26, -1), (27, 134217728), (28, -1), (29, -1), (30, 262144), (31, 4096), (32, -1), (33, -1), (34, 524288), (35, 4096), (36, -1), (37, 1024), (38, -1), (39, 2048), (40, 33554432), (41, 2048), (42, 65536), (43, 65536), (44, -1), (45, -1), (46, -1), (47, 16777216), (48, 2097152), (49, 8388608), (50, -1), (51, -1), (52, -1)]

Decide 27 with phase True at level 6

After decision at level 6
 pending : [23, 9, 30, 31, 37, 39, 40, 42, 43, 47, 48, 49, 34, 35, 41, 5]
 solution : [7, 3, 4, 26, 28, 27]


New level: 7
 pending : [23, 9, 30, 31, 37, 39, 40, 42, 43, 47, 48, 49, 34, 35, 41, 5]
 solution : [7, 3, 4, 26, 28, 27]


Before reduction : 
 pending  : [23, 9, 30, 31, 37, 39, 40, 42, 43, 47, 48, 49, 34, 35, 41, 5]
 solution : [7, 3, 4, 26, 28, 27]

Essensial at level 7 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 67108864), (6, -1), (7, -1), (8, -1), (9, 131072), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, 67108864), (24, -1), (25, -1), (26, -1), (27, 134217728), (28, -1), (29, -1), (30, 262144), (31, 4096), (32, -1), (33, -1), (34, 524288), (35, 4096), (36, -1), (37, 1024), (38, -1), (39, 2048), (40, 33554432), (41, 2048), (42, 65536), (43, 65536), (44, -1), (45, -1), (46, -1), (47, 16777216), (48, 2097152), (49, 8388608), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 16777216), (6, -1), (7, -1), (8, -1), (9, 32768), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, 16777216), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, 65536), (31, 1024), (32, -1), (33, -1), (34, 0), (35, 0), (36, -1), (37, 512), (38, -1), (39, 512), (40, 16777216), (41, 0), (42, 16384), (43, 16384), (44, -1), (45, -1), (46, -1), (47, 8388608), (48, 524288), (49, 8388608), (50, -1), (51, -1), (52, -1)]

Covered at level 7 : {41, 34, 35}

After reduction : 
 pending  : [23, 9, 30, 31, 37, 39, 40, 42, 43, 47, 48, 49, 5]
 solution : [7, 3, 4, 26, 28, 27]


Before reduction : 
 pending  : [23, 9, 30, 31, 37, 39, 40, 42, 43, 47, 48, 49, 5]
 solution : [7, 3, 4, 26, 28, 27]

Essensial at level 7 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 16777216), (6, -1), (7, -1), (8, -1), (9, 32768), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, 16777216), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, 65536), (31, 1024), (32, -1), (33, -1), (34, 0), (35, 0), (36, -1), (37, 512), (38, -1), (39, 512), (40, 16777216), (41, 0), (42, 16384), (43, 16384), (44, -1), (45, -1), (46, -1), (47, 8388608), (48, 524288), (49, 8388608), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 16777216), (6, -1), (7, -1), (8, -1), (9, 32768), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, 16777216), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, 65536), (31, 1024), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, 512), (38, -1), (39, 512), (40, 16777216), (41, -1), (42, 16384), (43, 16384), (44, -1), (45, -1), (46, -1), (47, 8388608), (48, 524288), (49, 8388608), (50, -1), (51, -1), (52, -1)]

Covered at level 7 : set()

After reduction : 
 pending  : [23, 9, 30, 31, 37, 39, 40, 42, 43, 47, 48, 49, 5]
 solution : [7, 3, 4, 26, 28, 27]


Solution : [7, 3, 4, 26, 28, 27] has cost 29.


Decide in level 7 among pending : [23, 9, 30, 31, 37, 39, 40, 42, 43, 47, 48, 49, 5]

Coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 16777216), (6, -1), (7, -1), (8, -1), (9, 32768), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, 16777216), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, 65536), (31, 1024), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, 512), (38, -1), (39, 512), (40, 16777216), (41, -1), (42, 16384), (43, 16384), (44, -1), (45, -1), (46, -1), (47, 8388608), (48, 524288), (49, 8388608), (50, -1), (51, -1), (52, -1)]

Decide 23 with phase True at level 7

After decision at level 7
 pending : [9, 30, 31, 37, 39, 40, 42, 43, 47, 48, 49, 5]
 solution : [7, 3, 4, 26, 28, 27, 23]


New level: 8
 pending : [9, 30, 31, 37, 39, 40, 42, 43, 47, 48, 49, 5]
 solution : [7, 3, 4, 26, 28, 27, 23]


Before reduction : 
 pending  : [9, 30, 31, 37, 39, 40, 42, 43, 47, 48, 49, 5]
 solution : [7, 3, 4, 26, 28, 27, 23]

Essensial at level 8 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 16777216), (6, -1), (7, -1), (8, -1), (9, 32768), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, 16777216), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, 65536), (31, 1024), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, 512), (38, -1), (39, 512), (40, 16777216), (41, -1), (42, 16384), (43, 16384), (44, -1), (45, -1), (46, -1), (47, 8388608), (48, 524288), (49, 8388608), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 0), (6, -1), (7, -1), (8, -1), (9, 0), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, 0), (31, 0), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, 0), (38, -1), (39, 0), (40, 0), (41, -1), (42, 0), (43, 0), (44, -1), (45, -1), (46, -1), (47, 0), (48, 0), (49, 0), (50, -1), (51, -1), (52, -1)]

Covered at level 8 : {37, 5, 39, 40, 9, 42, 43, 47, 48, 49, 30, 31}

After reduction : 
 pending  : []
 solution : [7, 3, 4, 26, 28, 27, 23]


Before reduction : 
 pending  : []
 solution : [7, 3, 4, 26, 28, 27, 23]

Essensial at level 8 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 0), (6, -1), (7, -1), (8, -1), (9, 0), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, 0), (31, 0), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, 0), (38, -1), (39, 0), (40, 0), (41, -1), (42, 0), (43, 0), (44, -1), (45, -1), (46, -1), (47, 0), (48, 0), (49, 0), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 8 : set()

After reduction : 
 pending  : []
 solution : [7, 3, 4, 26, 28, 27, 23]


Solution : [7, 3, 4, 26, 28, 27, 23] has cost 36.


Before backtrack at level 8
 pending : []
 solution : [7, 3, 4, 26, 28, 27, 23]

After backtrack at level 8
 pending : [9, 30, 31, 37, 39, 40, 42, 43, 47, 48, 49, 5]
 solution : [7, 3, 4, 26, 28, 27, 23]


Invert decision for 23 at level 7


New level: 8
 pending : [9, 30, 31, 37, 39, 40, 42, 43, 47, 48, 49, 5]
 solution : [7, 3, 4, 26, 28, 27]


Before reduction : 
 pending  : [9, 30, 31, 37, 39, 40, 42, 43, 47, 48, 49, 5]
 solution : [7, 3, 4, 26, 28, 27]

Essensial at level 8 : {5}

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, 0), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, 0), (31, 0), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, 0), (38, -1), (39, 0), (40, 0), (41, -1), (42, 0), (43, 0), (44, -1), (45, -1), (46, -1), (47, 0), (48, 0), (49, 0), (50, -1), (51, -1), (52, -1)]

Covered at level 8 : {37, 39, 40, 9, 42, 43, 47, 48, 49, 30, 31}

After reduction : 
 pending  : []
 solution : [7, 3, 4, 26, 28, 27, 5]


Before reduction : 
 pending  : []
 solution : [7, 3, 4, 26, 28, 27, 5]

Essensial at level 8 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, 0), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, 0), (31, 0), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, 0), (38, -1), (39, 0), (40, 0), (41, -1), (42, 0), (43, 0), (44, -1), (45, -1), (46, -1), (47, 0), (48, 0), (49, 0), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 8 : set()

After reduction : 
 pending  : []
 solution : [7, 3, 4, 26, 28, 27, 5]


Solution : [7, 3, 4, 26, 28, 27, 5] has cost 33.


Before backtrack at level 8
 pending : []
 solution : [7, 3, 4, 26, 28, 27, 5]

After backtrack at level 8
 pending : [5, 9, 30, 31, 37, 39, 40, 42, 43, 47, 48, 49]
 solution : [7, 3, 4, 26, 28, 27]


Before backtrack at level 7
 pending : [5, 9, 30, 31, 37, 39, 40, 42, 43, 47, 48, 49]
 solution : [7, 3, 4, 26, 28, 27]

After backtrack at level 7
 pending : [5, 9, 30, 31, 37, 39, 40, 42, 43, 47, 48, 49, 34, 35, 41, 23]
 solution : [7, 3, 4, 26, 28, 27]


Invert decision for 27 at level 6


New level: 7
 pending : [5, 9, 30, 31, 37, 39, 40, 42, 43, 47, 48, 49, 34, 35, 41, 23]
 solution : [7, 3, 4, 26, 28]


Before reduction : 
 pending  : [5, 9, 30, 31, 37, 39, 40, 42, 43, 47, 48, 49, 34, 35, 41, 23]
 solution : [7, 3, 4, 26, 28]

Essensial at level 7 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 67108864), (6, -1), (7, -1), (8, -1), (9, 131072), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, 67108864), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, 262144), (31, 4096), (32, -1), (33, -1), (34, 524288), (35, 4096), (36, -1), (37, 1024), (38, -1), (39, 2048), (40, 33554432), (41, 2048), (42, 65536), (43, 65536), (44, -1), (45, -1), (46, -1), (47, 16777216), (48, 2097152), (49, 8388608), (50, -1), (51, -1), (52, -1)]

Covered at level 7 : set()

After reduction : 
 pending  : [5, 9, 30, 31, 37, 39, 40, 42, 43, 47, 48, 49, 34, 35, 41, 23]
 solution : [7, 3, 4, 26, 28]


Solution : [7, 3, 4, 26, 28] has cost 22.


Decide in level 7 among pending : [5, 9, 30, 31, 37, 39, 40, 42, 43, 47, 48, 49, 34, 35, 41, 23]

Coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 67108864), (6, -1), (7, -1), (8, -1), (9, 131072), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, 67108864), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, 262144), (31, 4096), (32, -1), (33, -1), (34, 524288), (35, 4096), (36, -1), (37, 1024), (38, -1), (39, 2048), (40, 33554432), (41, 2048), (42, 65536), (43, 65536), (44, -1), (45, -1), (46, -1), (47, 16777216), (48, 2097152), (49, 8388608), (50, -1), (51, -1), (52, -1)]

Decide 5 with phase True at level 7

After decision at level 7
 pending : [9, 30, 31, 37, 39, 40, 42, 43, 47, 48, 49, 34, 35, 41, 23]
 solution : [7, 3, 4, 26, 28, 5]


New level: 8
 pending : [9, 30, 31, 37, 39, 40, 42, 43, 47, 48, 49, 34, 35, 41, 23]
 solution : [7, 3, 4, 26, 28, 5]


Before reduction : 
 pending  : [9, 30, 31, 37, 39, 40, 42, 43, 47, 48, 49, 34, 35, 41, 23]
 solution : [7, 3, 4, 26, 28, 5]

Essensial at level 8 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 67108864), (6, -1), (7, -1), (8, -1), (9, 131072), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, 67108864), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, 262144), (31, 4096), (32, -1), (33, -1), (34, 524288), (35, 4096), (36, -1), (37, 1024), (38, -1), (39, 2048), (40, 33554432), (41, 2048), (42, 65536), (43, 65536), (44, -1), (45, -1), (46, -1), (47, 16777216), (48, 2097152), (49, 8388608), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, 0), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, 0), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, 0), (31, 0), (32, -1), (33, -1), (34, 0), (35, 0), (36, -1), (37, 0), (38, -1), (39, 0), (40, 0), (41, 0), (42, 0), (43, 0), (44, -1), (45, -1), (46, -1), (47, 0), (48, 0), (49, 0), (50, -1), (51, -1), (52, -1)]

Covered at level 8 : {34, 35, 37, 39, 40, 9, 42, 43, 41, 47, 48, 49, 23, 30, 31}

After reduction : 
 pending  : []
 solution : [7, 3, 4, 26, 28, 5]


Before reduction : 
 pending  : []
 solution : [7, 3, 4, 26, 28, 5]

Essensial at level 8 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, 0), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, 0), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, 0), (31, 0), (32, -1), (33, -1), (34, 0), (35, 0), (36, -1), (37, 0), (38, -1), (39, 0), (40, 0), (41, 0), (42, 0), (43, 0), (44, -1), (45, -1), (46, -1), (47, 0), (48, 0), (49, 0), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 8 : set()

After reduction : 
 pending  : []
 solution : [7, 3, 4, 26, 28, 5]


Solution : [7, 3, 4, 26, 28, 5] has cost 26.


Before backtrack at level 8
 pending : []
 solution : [7, 3, 4, 26, 28, 5]

After backtrack at level 8
 pending : [9, 30, 31, 37, 39, 40, 42, 43, 47, 48, 49, 34, 35, 41, 23]
 solution : [7, 3, 4, 26, 28, 5]


Invert decision for 5 at level 7


New level: 8
 pending : [9, 30, 31, 37, 39, 40, 42, 43, 47, 48, 49, 34, 35, 41, 23]
 solution : [7, 3, 4, 26, 28]


Before reduction : 
 pending  : [9, 30, 31, 37, 39, 40, 42, 43, 47, 48, 49, 34, 35, 41, 23]
 solution : [7, 3, 4, 26, 28]

Essensial at level 8 : {23}

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, 0), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, 0), (31, 0), (32, -1), (33, -1), (34, 0), (35, 0), (36, -1), (37, 0), (38, -1), (39, 0), (40, 0), (41, 0), (42, 0), (43, 0), (44, -1), (45, -1), (46, -1), (47, 0), (48, 0), (49, 0), (50, -1), (51, -1), (52, -1)]

Covered at level 8 : {34, 35, 37, 39, 40, 9, 42, 43, 41, 47, 48, 49, 30, 31}

After reduction : 
 pending  : []
 solution : [7, 3, 4, 26, 28, 23]


Before reduction : 
 pending  : []
 solution : [7, 3, 4, 26, 28, 23]

Essensial at level 8 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, 0), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, 0), (31, 0), (32, -1), (33, -1), (34, 0), (35, 0), (36, -1), (37, 0), (38, -1), (39, 0), (40, 0), (41, 0), (42, 0), (43, 0), (44, -1), (45, -1), (46, -1), (47, 0), (48, 0), (49, 0), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 8 : set()

After reduction : 
 pending  : []
 solution : [7, 3, 4, 26, 28, 23]


Solution : [7, 3, 4, 26, 28, 23] has cost 29.


Before backtrack at level 8
 pending : []
 solution : [7, 3, 4, 26, 28, 23]

After backtrack at level 8
 pending : [23, 9, 30, 31, 37, 39, 40, 42, 43, 47, 48, 49, 34, 35, 41]
 solution : [7, 3, 4, 26, 28]


Before backtrack at level 7
 pending : [23, 9, 30, 31, 37, 39, 40, 42, 43, 47, 48, 49, 34, 35, 41]
 solution : [7, 3, 4, 26, 28]

After backtrack at level 7
 pending : [23, 9, 30, 31, 37, 39, 40, 42, 43, 47, 48, 49, 34, 35, 41, 5]
 solution : [7, 3, 4, 26, 28]


Before backtrack at level 6
 pending : [23, 9, 30, 31, 37, 39, 40, 42, 43, 47, 48, 49, 34, 35, 41, 5]
 solution : [7, 3, 4, 26, 28]

After backtrack at level 6
 pending : [23, 9, 30, 31, 37, 39, 40, 42, 43, 47, 48, 49, 34, 35, 41, 5, 27]
 solution : [7, 3, 4, 26, 28]


Before backtrack at level 5
 pending : [23, 9, 30, 31, 37, 39, 40, 42, 43, 47, 48, 49, 34, 35, 41, 5, 27]
 solution : [7, 3, 4, 26, 28]

After backtrack at level 5
 pending : [23, 9, 30, 31, 37, 39, 40, 42, 43, 47, 48, 49, 34, 35, 41, 5, 27, 33]
 solution : [7, 3, 4, 26, 28]


Invert decision for 28 at level 4


New level: 5
 pending : [23, 9, 30, 31, 37, 39, 40, 42, 43, 47, 48, 49, 34, 35, 41, 5, 27, 33]
 solution : [7, 3, 4, 26]


Before reduction : 
 pending  : [23, 9, 30, 31, 37, 39, 40, 42, 43, 47, 48, 49, 34, 35, 41, 5, 27, 33]
 solution : [7, 3, 4, 26]

Essensial at level 5 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 67108864), (6, -1), (7, -1), (8, -1), (9, 131072), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, 67108864), (24, -1), (25, -1), (26, -1), (27, 268435456), (28, -1), (29, -1), (30, 262144), (31, 4096), (32, -1), (33, 536870912), (34, 1048576), (35, 8192), (36, -1), (37, 1024), (38, -1), (39, 2048), (40, 33554432), (41, 2048), (42, 65536), (43, 65536), (44, -1), (45, -1), (46, -1), (47, 16777216), (48, 2097152), (49, 8388608), (50, -1), (51, -1), (52, -1)]

Covered at level 5 : set()

After reduction : 
 pending  : [23, 9, 30, 31, 37, 39, 40, 42, 43, 47, 48, 49, 34, 35, 41, 5, 27, 33]
 solution : [7, 3, 4, 26]


Solution : [7, 3, 4, 26] has cost 18.


Decide in level 5 among pending : [23, 9, 30, 31, 37, 39, 40, 42, 43, 47, 48, 49, 34, 35, 41, 5, 27, 33]

Coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 67108864), (6, -1), (7, -1), (8, -1), (9, 131072), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, 67108864), (24, -1), (25, -1), (26, -1), (27, 268435456), (28, -1), (29, -1), (30, 262144), (31, 4096), (32, -1), (33, 536870912), (34, 1048576), (35, 8192), (36, -1), (37, 1024), (38, -1), (39, 2048), (40, 33554432), (41, 2048), (42, 65536), (43, 65536), (44, -1), (45, -1), (46, -1), (47, 16777216), (48, 2097152), (49, 8388608), (50, -1), (51, -1), (52, -1)]

Decide 33 with phase True at level 5

After decision at level 5
 pending : [23, 9, 30, 31, 37, 39, 40, 42, 43, 47, 48, 49, 34, 35, 41, 5, 27]
 solution : [7, 3, 4, 26, 33]


New level: 6
 pending : [23, 9, 30, 31, 37, 39, 40, 42, 43, 47, 48, 49, 34, 35, 41, 5, 27]
 solution : [7, 3, 4, 26, 33]


Before reduction : 
 pending  : [23, 9, 30, 31, 37, 39, 40, 42, 43, 47, 48, 49, 34, 35, 41, 5, 27]
 solution : [7, 3, 4, 26, 33]

Essensial at level 6 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 67108864), (6, -1), (7, -1), (8, -1), (9, 131072), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, 67108864), (24, -1), (25, -1), (26, -1), (27, 268435456), (28, -1), (29, -1), (30, 262144), (31, 4096), (32, -1), (33, 536870912), (34, 1048576), (35, 8192), (36, -1), (37, 1024), (38, -1), (39, 2048), (40, 33554432), (41, 2048), (42, 65536), (43, 65536), (44, -1), (45, -1), (46, -1), (47, 16777216), (48, 2097152), (49, 8388608), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 67108864), (6, -1), (7, -1), (8, -1), (9, 32768), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, 67108864), (24, -1), (25, -1), (26, -1), (27, 4096), (28, -1), (29, -1), (30, 65536), (31, 1024), (32, -1), (33, -1), (34, 0), (35, 0), (36, -1), (37, 512), (38, -1), (39, 512), (40, 8388608), (41, 0), (42, 16384), (43, 16384), (44, -1), (45, -1), (46, -1), (47, 4194304), (48, 524288), (49, 2097152), (50, -1), (51, -1), (52, -1)]

Covered at level 6 : {41, 34, 35}

After reduction : 
 pending  : [23, 9, 30, 31, 37, 39, 40, 42, 43, 47, 48, 49, 5, 27]
 solution : [7, 3, 4, 26, 33]


Before reduction : 
 pending  : [23, 9, 30, 31, 37, 39, 40, 42, 43, 47, 48, 49, 5, 27]
 solution : [7, 3, 4, 26, 33]

Essensial at level 6 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 67108864), (6, -1), (7, -1), (8, -1), (9, 32768), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, 67108864), (24, -1), (25, -1), (26, -1), (27, 4096), (28, -1), (29, -1), (30, 65536), (31, 1024), (32, -1), (33, -1), (34, 0), (35, 0), (36, -1), (37, 512), (38, -1), (39, 512), (40, 8388608), (41, 0), (42, 16384), (43, 16384), (44, -1), (45, -1), (46, -1), (47, 4194304), (48, 524288), (49, 2097152), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 67108864), (6, -1), (7, -1), (8, -1), (9, 32768), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, 67108864), (24, -1), (25, -1), (26, -1), (27, 4096), (28, -1), (29, -1), (30, 65536), (31, 1024), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, 512), (38, -1), (39, 512), (40, 8388608), (41, -1), (42, 16384), (43, 16384), (44, -1), (45, -1), (46, -1), (47, 4194304), (48, 524288), (49, 2097152), (50, -1), (51, -1), (52, -1)]

Covered at level 6 : set()

After reduction : 
 pending  : [23, 9, 30, 31, 37, 39, 40, 42, 43, 47, 48, 49, 5, 27]
 solution : [7, 3, 4, 26, 33]


Solution : [7, 3, 4, 26, 33] has cost 31.


Before backtrack at level 6
 pending : [23, 9, 30, 31, 37, 39, 40, 42, 43, 47, 48, 49, 5, 27]
 solution : [7, 3, 4, 26, 33]

After backtrack at level 6
 pending : [23, 9, 30, 31, 37, 39, 40, 42, 43, 47, 48, 49, 5, 27, 34, 35, 41]
 solution : [7, 3, 4, 26, 33]


Invert decision for 33 at level 5


New level: 6
 pending : [23, 9, 30, 31, 37, 39, 40, 42, 43, 47, 48, 49, 5, 27, 34, 35, 41]
 solution : [7, 3, 4, 26]


Before reduction : 
 pending  : [23, 9, 30, 31, 37, 39, 40, 42, 43, 47, 48, 49, 5, 27, 34, 35, 41]
 solution : [7, 3, 4, 26]

Essensial at level 6 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 67108864), (6, -1), (7, -1), (8, -1), (9, 32768), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, 67108864), (24, -1), (25, -1), (26, -1), (27, 4096), (28, -1), (29, -1), (30, 65536), (31, 1024), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, 512), (38, -1), (39, 512), (40, 8388608), (41, -1), (42, 16384), (43, 16384), (44, -1), (45, -1), (46, -1), (47, 4194304), (48, 524288), (49, 2097152), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 67108864), (6, -1), (7, -1), (8, -1), (9, 131072), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, 67108864), (24, -1), (25, -1), (26, -1), (27, 268435456), (28, -1), (29, -1), (30, 262144), (31, 4096), (32, -1), (33, -1), (34, 1048576), (35, 8192), (36, -1), (37, 1024), (38, -1), (39, 2048), (40, 33554432), (41, 2048), (42, 65536), (43, 65536), (44, -1), (45, -1), (46, -1), (47, 16777216), (48, 2097152), (49, 8388608), (50, -1), (51, -1), (52, -1)]

Covered at level 6 : set()

After reduction : 
 pending  : [23, 9, 30, 31, 37, 39, 40, 42, 43, 47, 48, 49, 5, 27, 34, 35, 41]
 solution : [7, 3, 4, 26]


Solution : [7, 3, 4, 26] has cost 18.


Decide in level 6 among pending : [23, 9, 30, 31, 37, 39, 40, 42, 43, 47, 48, 49, 5, 27, 34, 35, 41]

Coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 67108864), (6, -1), (7, -1), (8, -1), (9, 131072), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, 67108864), (24, -1), (25, -1), (26, -1), (27, 268435456), (28, -1), (29, -1), (30, 262144), (31, 4096), (32, -1), (33, -1), (34, 1048576), (35, 8192), (36, -1), (37, 1024), (38, -1), (39, 2048), (40, 33554432), (41, 2048), (42, 65536), (43, 65536), (44, -1), (45, -1), (46, -1), (47, 16777216), (48, 2097152), (49, 8388608), (50, -1), (51, -1), (52, -1)]

Decide 27 with phase True at level 6

After decision at level 6
 pending : [23, 9, 30, 31, 37, 39, 40, 42, 43, 47, 48, 49, 5, 34, 35, 41]
 solution : [7, 3, 4, 26, 27]


New level: 7
 pending : [23, 9, 30, 31, 37, 39, 40, 42, 43, 47, 48, 49, 5, 34, 35, 41]
 solution : [7, 3, 4, 26, 27]


Before reduction : 
 pending  : [23, 9, 30, 31, 37, 39, 40, 42, 43, 47, 48, 49, 5, 34, 35, 41]
 solution : [7, 3, 4, 26, 27]

Essensial at level 7 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 67108864), (6, -1), (7, -1), (8, -1), (9, 131072), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, 67108864), (24, -1), (25, -1), (26, -1), (27, 268435456), (28, -1), (29, -1), (30, 262144), (31, 4096), (32, -1), (33, -1), (34, 1048576), (35, 8192), (36, -1), (37, 1024), (38, -1), (39, 2048), (40, 33554432), (41, 2048), (42, 65536), (43, 65536), (44, -1), (45, -1), (46, -1), (47, 16777216), (48, 2097152), (49, 8388608), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 16777216), (6, -1), (7, -1), (8, -1), (9, 32768), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, 16777216), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, 65536), (31, 1024), (32, -1), (33, -1), (34, 0), (35, 0), (36, -1), (37, 512), (38, -1), (39, 512), (40, 16777216), (41, 0), (42, 16384), (43, 16384), (44, -1), (45, -1), (46, -1), (47, 8388608), (48, 524288), (49, 8388608), (50, -1), (51, -1), (52, -1)]

Covered at level 7 : {41, 34, 35}

After reduction : 
 pending  : [23, 9, 30, 31, 37, 39, 40, 42, 43, 47, 48, 49, 5]
 solution : [7, 3, 4, 26, 27]


Before reduction : 
 pending  : [23, 9, 30, 31, 37, 39, 40, 42, 43, 47, 48, 49, 5]
 solution : [7, 3, 4, 26, 27]

Essensial at level 7 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 16777216), (6, -1), (7, -1), (8, -1), (9, 32768), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, 16777216), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, 65536), (31, 1024), (32, -1), (33, -1), (34, 0), (35, 0), (36, -1), (37, 512), (38, -1), (39, 512), (40, 16777216), (41, 0), (42, 16384), (43, 16384), (44, -1), (45, -1), (46, -1), (47, 8388608), (48, 524288), (49, 8388608), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 16777216), (6, -1), (7, -1), (8, -1), (9, 32768), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, 16777216), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, 65536), (31, 1024), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, 512), (38, -1), (39, 512), (40, 16777216), (41, -1), (42, 16384), (43, 16384), (44, -1), (45, -1), (46, -1), (47, 8388608), (48, 524288), (49, 8388608), (50, -1), (51, -1), (52, -1)]

Covered at level 7 : set()

After reduction : 
 pending  : [23, 9, 30, 31, 37, 39, 40, 42, 43, 47, 48, 49, 5]
 solution : [7, 3, 4, 26, 27]


Solution : [7, 3, 4, 26, 27] has cost 25.


Decide in level 7 among pending : [23, 9, 30, 31, 37, 39, 40, 42, 43, 47, 48, 49, 5]

Coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 16777216), (6, -1), (7, -1), (8, -1), (9, 32768), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, 16777216), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, 65536), (31, 1024), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, 512), (38, -1), (39, 512), (40, 16777216), (41, -1), (42, 16384), (43, 16384), (44, -1), (45, -1), (46, -1), (47, 8388608), (48, 524288), (49, 8388608), (50, -1), (51, -1), (52, -1)]

Decide 23 with phase True at level 7

After decision at level 7
 pending : [9, 30, 31, 37, 39, 40, 42, 43, 47, 48, 49, 5]
 solution : [7, 3, 4, 26, 27, 23]


New level: 8
 pending : [9, 30, 31, 37, 39, 40, 42, 43, 47, 48, 49, 5]
 solution : [7, 3, 4, 26, 27, 23]


Before reduction : 
 pending  : [9, 30, 31, 37, 39, 40, 42, 43, 47, 48, 49, 5]
 solution : [7, 3, 4, 26, 27, 23]

Essensial at level 8 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 16777216), (6, -1), (7, -1), (8, -1), (9, 32768), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, 16777216), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, 65536), (31, 1024), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, 512), (38, -1), (39, 512), (40, 16777216), (41, -1), (42, 16384), (43, 16384), (44, -1), (45, -1), (46, -1), (47, 8388608), (48, 524288), (49, 8388608), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 0), (6, -1), (7, -1), (8, -1), (9, 0), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, 0), (31, 0), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, 0), (38, -1), (39, 0), (40, 0), (41, -1), (42, 0), (43, 0), (44, -1), (45, -1), (46, -1), (47, 0), (48, 0), (49, 0), (50, -1), (51, -1), (52, -1)]

Covered at level 8 : {37, 5, 39, 40, 9, 42, 43, 47, 48, 49, 30, 31}

After reduction : 
 pending  : []
 solution : [7, 3, 4, 26, 27, 23]


Before reduction : 
 pending  : []
 solution : [7, 3, 4, 26, 27, 23]

Essensial at level 8 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 0), (6, -1), (7, -1), (8, -1), (9, 0), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, 0), (31, 0), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, 0), (38, -1), (39, 0), (40, 0), (41, -1), (42, 0), (43, 0), (44, -1), (45, -1), (46, -1), (47, 0), (48, 0), (49, 0), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 8 : set()

After reduction : 
 pending  : []
 solution : [7, 3, 4, 26, 27, 23]


Solution : [7, 3, 4, 26, 27, 23] has cost 32.


Before backtrack at level 8
 pending : []
 solution : [7, 3, 4, 26, 27, 23]

After backtrack at level 8
 pending : [9, 30, 31, 37, 39, 40, 42, 43, 47, 48, 49, 5]
 solution : [7, 3, 4, 26, 27, 23]


Invert decision for 23 at level 7


New level: 8
 pending : [9, 30, 31, 37, 39, 40, 42, 43, 47, 48, 49, 5]
 solution : [7, 3, 4, 26, 27]


Before reduction : 
 pending  : [9, 30, 31, 37, 39, 40, 42, 43, 47, 48, 49, 5]
 solution : [7, 3, 4, 26, 27]

Essensial at level 8 : {5}

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, 0), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, 0), (31, 0), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, 0), (38, -1), (39, 0), (40, 0), (41, -1), (42, 0), (43, 0), (44, -1), (45, -1), (46, -1), (47, 0), (48, 0), (49, 0), (50, -1), (51, -1), (52, -1)]

Covered at level 8 : {37, 39, 40, 9, 42, 43, 47, 48, 49, 30, 31}

After reduction : 
 pending  : []
 solution : [7, 3, 4, 26, 27, 5]


Before reduction : 
 pending  : []
 solution : [7, 3, 4, 26, 27, 5]

Essensial at level 8 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, 0), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, 0), (31, 0), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, 0), (38, -1), (39, 0), (40, 0), (41, -1), (42, 0), (43, 0), (44, -1), (45, -1), (46, -1), (47, 0), (48, 0), (49, 0), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 8 : set()

After reduction : 
 pending  : []
 solution : [7, 3, 4, 26, 27, 5]


Solution : [7, 3, 4, 26, 27, 5] has cost 29.


Before backtrack at level 8
 pending : []
 solution : [7, 3, 4, 26, 27, 5]

After backtrack at level 8
 pending : [5, 9, 30, 31, 37, 39, 40, 42, 43, 47, 48, 49]
 solution : [7, 3, 4, 26, 27]


Before backtrack at level 7
 pending : [5, 9, 30, 31, 37, 39, 40, 42, 43, 47, 48, 49]
 solution : [7, 3, 4, 26, 27]

After backtrack at level 7
 pending : [5, 9, 30, 31, 37, 39, 40, 42, 43, 47, 48, 49, 34, 35, 41, 23]
 solution : [7, 3, 4, 26, 27]


Invert decision for 27 at level 6


New level: 7
 pending : [5, 9, 30, 31, 37, 39, 40, 42, 43, 47, 48, 49, 34, 35, 41, 23]
 solution : [7, 3, 4, 26]


Before reduction : 
 pending  : [5, 9, 30, 31, 37, 39, 40, 42, 43, 47, 48, 49, 34, 35, 41, 23]
 solution : [7, 3, 4, 26]

Essensial at level 7 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 67108864), (6, -1), (7, -1), (8, -1), (9, 131072), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, 67108864), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, 262144), (31, 4096), (32, -1), (33, -1), (34, 1048576), (35, 8192), (36, -1), (37, 1024), (38, -1), (39, 2048), (40, 33554432), (41, 2048), (42, 65536), (43, 65536), (44, -1), (45, -1), (46, -1), (47, 16777216), (48, 2097152), (49, 8388608), (50, -1), (51, -1), (52, -1)]

Covered at level 7 : set()

After reduction : 
 pending  : [5, 9, 30, 31, 37, 39, 40, 42, 43, 47, 48, 49, 34, 35, 41, 23]
 solution : [7, 3, 4, 26]


Solution : [7, 3, 4, 26] has cost 18.


Decide in level 7 among pending : [5, 9, 30, 31, 37, 39, 40, 42, 43, 47, 48, 49, 34, 35, 41, 23]

Coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 67108864), (6, -1), (7, -1), (8, -1), (9, 131072), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, 67108864), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, 262144), (31, 4096), (32, -1), (33, -1), (34, 1048576), (35, 8192), (36, -1), (37, 1024), (38, -1), (39, 2048), (40, 33554432), (41, 2048), (42, 65536), (43, 65536), (44, -1), (45, -1), (46, -1), (47, 16777216), (48, 2097152), (49, 8388608), (50, -1), (51, -1), (52, -1)]

Decide 5 with phase True at level 7

After decision at level 7
 pending : [9, 30, 31, 37, 39, 40, 42, 43, 47, 48, 49, 34, 35, 41, 23]
 solution : [7, 3, 4, 26, 5]


New level: 8
 pending : [9, 30, 31, 37, 39, 40, 42, 43, 47, 48, 49, 34, 35, 41, 23]
 solution : [7, 3, 4, 26, 5]


Before reduction : 
 pending  : [9, 30, 31, 37, 39, 40, 42, 43, 47, 48, 49, 34, 35, 41, 23]
 solution : [7, 3, 4, 26, 5]

Essensial at level 8 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 67108864), (6, -1), (7, -1), (8, -1), (9, 131072), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, 67108864), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, 262144), (31, 4096), (32, -1), (33, -1), (34, 1048576), (35, 8192), (36, -1), (37, 1024), (38, -1), (39, 2048), (40, 33554432), (41, 2048), (42, 65536), (43, 65536), (44, -1), (45, -1), (46, -1), (47, 16777216), (48, 2097152), (49, 8388608), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, 0), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, 0), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, 0), (31, 0), (32, -1), (33, -1), (34, 0), (35, 0), (36, -1), (37, 0), (38, -1), (39, 0), (40, 0), (41, 0), (42, 0), (43, 0), (44, -1), (45, -1), (46, -1), (47, 0), (48, 0), (49, 0), (50, -1), (51, -1), (52, -1)]

Covered at level 8 : {34, 35, 37, 39, 40, 9, 42, 43, 41, 47, 48, 49, 23, 30, 31}

After reduction : 
 pending  : []
 solution : [7, 3, 4, 26, 5]


Before reduction : 
 pending  : []
 solution : [7, 3, 4, 26, 5]

Essensial at level 8 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, 0), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, 0), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, 0), (31, 0), (32, -1), (33, -1), (34, 0), (35, 0), (36, -1), (37, 0), (38, -1), (39, 0), (40, 0), (41, 0), (42, 0), (43, 0), (44, -1), (45, -1), (46, -1), (47, 0), (48, 0), (49, 0), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 8 : set()

After reduction : 
 pending  : []
 solution : [7, 3, 4, 26, 5]


Solution : [7, 3, 4, 26, 5] has cost 22.


Before backtrack at level 8
 pending : []
 solution : [7, 3, 4, 26, 5]

After backtrack at level 8
 pending : [9, 30, 31, 37, 39, 40, 42, 43, 47, 48, 49, 34, 35, 41, 23]
 solution : [7, 3, 4, 26, 5]


Invert decision for 5 at level 7


New level: 8
 pending : [9, 30, 31, 37, 39, 40, 42, 43, 47, 48, 49, 34, 35, 41, 23]
 solution : [7, 3, 4, 26]


Before reduction : 
 pending  : [9, 30, 31, 37, 39, 40, 42, 43, 47, 48, 49, 34, 35, 41, 23]
 solution : [7, 3, 4, 26]

Essensial at level 8 : {23}

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, 0), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, 0), (31, 0), (32, -1), (33, -1), (34, 0), (35, 0), (36, -1), (37, 0), (38, -1), (39, 0), (40, 0), (41, 0), (42, 0), (43, 0), (44, -1), (45, -1), (46, -1), (47, 0), (48, 0), (49, 0), (50, -1), (51, -1), (52, -1)]

Covered at level 8 : {34, 35, 37, 39, 40, 9, 42, 43, 41, 47, 48, 49, 30, 31}

After reduction : 
 pending  : []
 solution : [7, 3, 4, 26, 23]


Before reduction : 
 pending  : []
 solution : [7, 3, 4, 26, 23]

Essensial at level 8 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, 0), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, 0), (31, 0), (32, -1), (33, -1), (34, 0), (35, 0), (36, -1), (37, 0), (38, -1), (39, 0), (40, 0), (41, 0), (42, 0), (43, 0), (44, -1), (45, -1), (46, -1), (47, 0), (48, 0), (49, 0), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 8 : set()

After reduction : 
 pending  : []
 solution : [7, 3, 4, 26, 23]


Solution : [7, 3, 4, 26, 23] has cost 25.


Before backtrack at level 8
 pending : []
 solution : [7, 3, 4, 26, 23]

After backtrack at level 8
 pending : [23, 9, 30, 31, 37, 39, 40, 42, 43, 47, 48, 49, 34, 35, 41]
 solution : [7, 3, 4, 26]


Before backtrack at level 7
 pending : [23, 9, 30, 31, 37, 39, 40, 42, 43, 47, 48, 49, 34, 35, 41]
 solution : [7, 3, 4, 26]

After backtrack at level 7
 pending : [23, 9, 30, 31, 37, 39, 40, 42, 43, 47, 48, 49, 34, 35, 41, 5]
 solution : [7, 3, 4, 26]


Before backtrack at level 6
 pending : [23, 9, 30, 31, 37, 39, 40, 42, 43, 47, 48, 49, 34, 35, 41, 5]
 solution : [7, 3, 4, 26]

After backtrack at level 6
 pending : [23, 9, 30, 31, 37, 39, 40, 42, 43, 47, 48, 49, 34, 35, 41, 5, 27]
 solution : [7, 3, 4, 26]


Before backtrack at level 5
 pending : [23, 9, 30, 31, 37, 39, 40, 42, 43, 47, 48, 49, 34, 35, 41, 5, 27]
 solution : [7, 3, 4, 26]

After backtrack at level 5
 pending : [23, 9, 30, 31, 37, 39, 40, 42, 43, 47, 48, 49, 34, 35, 41, 5, 27, 33]
 solution : [7, 3, 4, 26]


Before backtrack at level 4
 pending : [23, 9, 30, 31, 37, 39, 40, 42, 43, 47, 48, 49, 34, 35, 41, 5, 27, 33]
 solution : [7, 3, 4, 26]

After backtrack at level 4
 pending : [23, 9, 30, 31, 37, 39, 40, 42, 43, 47, 48, 49, 34, 35, 41, 5, 27, 33, 2, 11, 12, 13, 15, 16, 17, 18, 19, 20, 25, 36, 28]
 solution : [7, 3, 4, 26]


Invert decision for 26 at level 3


New level: 4
 pending : [23, 9, 30, 31, 37, 39, 40, 42, 43, 47, 48, 49, 34, 35, 41, 5, 27, 33, 2, 11, 12, 13, 15, 16, 17, 18, 19, 20, 25, 36, 28]
 solution : [7, 3, 4]


Before reduction : 
 pending  : [23, 9, 30, 31, 37, 39, 40, 42, 43, 47, 48, 49, 34, 35, 41, 5, 27, 33, 2, 11, 12, 13, 15, 16, 17, 18, 19, 20, 25, 36, 28]
 solution : [7, 3, 4]

Essensial at level 4 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 131072), (3, -1), (4, -1), (5, 67108864), (6, -1), (7, -1), (8, -1), (9, 524288), (10, -1), (11, 4194304), (12, 8388608), (13, 65536), (14, -1), (15, 139264), (16, 268435456), (17, 2097152), (18, 134217728), (19, 1048576), (20, 32768), (21, -1), (22, -1), (23, 67108864), (24, -1), (25, 524288), (26, -1), (27, 268435456), (28, 536870912), (29, -1), (30, 524288), (31, 8192), (32, -1), (33, 536870912), (34, 1048576), (35, 8192), (36, 524288), (37, 33554432), (38, -1), (39, 8192), (40, 67108864), (41, 134217728), (42, 262144), (43, 262144), (44, -1), (45, -1), (46, -1), (47, 33554432), (48, 8388608), (49, 33554432), (50, -1), (51, -1), (52, -1)]

Covered at level 4 : set()

After reduction : 
 pending  : [23, 9, 30, 31, 37, 39, 40, 42, 43, 47, 48, 49, 34, 35, 41, 5, 27, 33, 2, 11, 12, 13, 15, 16, 17, 18, 19, 20, 25, 36, 28]
 solution : [7, 3, 4]


Solution : [7, 3, 4] has cost 14.


Decide in level 4 among pending : [23, 9, 30, 31, 37, 39, 40, 42, 43, 47, 48, 49, 34, 35, 41, 5, 27, 33, 2, 11, 12, 13, 15, 16, 17, 18, 19, 20, 25, 36, 28]

Coverage : [(0, -1), (1, -1), (2, 131072), (3, -1), (4, -1), (5, 67108864), (6, -1), (7, -1), (8, -1), (9, 524288), (10, -1), (11, 4194304), (12, 8388608), (13, 65536), (14, -1), (15, 139264), (16, 268435456), (17, 2097152), (18, 134217728), (19, 1048576), (20, 32768), (21, -1), (22, -1), (23, 67108864), (24, -1), (25, 524288), (26, -1), (27, 268435456), (28, 536870912), (29, -1), (30, 524288), (31, 8192), (32, -1), (33, 536870912), (34, 1048576), (35, 8192), (36, 524288), (37, 33554432), (38, -1), (39, 8192), (40, 67108864), (41, 134217728), (42, 262144), (43, 262144), (44, -1), (45, -1), (46, -1), (47, 33554432), (48, 8388608), (49, 33554432), (50, -1), (51, -1), (52, -1)]

Decide 33 with phase True at level 4

After decision at level 4
 pending : [23, 9, 30, 31, 37, 39, 40, 42, 43, 47, 48, 49, 34, 35, 41, 5, 27, 2, 11, 12, 13, 15, 16, 17, 18, 19, 20, 25, 36, 28]
 solution : [7, 3, 4, 33]


New level: 5
 pending : [23, 9, 30, 31, 37, 39, 40, 42, 43, 47, 48, 49, 34, 35, 41, 5, 27, 2, 11, 12, 13, 15, 16, 17, 18, 19, 20, 25, 36, 28]
 solution : [7, 3, 4, 33]


Before reduction : 
 pending  : [23, 9, 30, 31, 37, 39, 40, 42, 43, 47, 48, 49, 34, 35, 41, 5, 27, 2, 11, 12, 13, 15, 16, 17, 18, 19, 20, 25, 36, 28]
 solution : [7, 3, 4, 33]

Essensial at level 5 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 131072), (3, -1), (4, -1), (5, 67108864), (6, -1), (7, -1), (8, -1), (9, 524288), (10, -1), (11, 4194304), (12, 8388608), (13, 65536), (14, -1), (15, 139264), (16, 268435456), (17, 2097152), (18, 134217728), (19, 1048576), (20, 32768), (21, -1), (22, -1), (23, 67108864), (24, -1), (25, 524288), (26, -1), (27, 268435456), (28, 536870912), (29, -1), (30, 524288), (31, 8192), (32, -1), (33, 536870912), (34, 1048576), (35, 8192), (36, 524288), (37, 33554432), (38, -1), (39, 8192), (40, 67108864), (41, 134217728), (42, 262144), (43, 262144), (44, -1), (45, -1), (46, -1), (47, 33554432), (48, 8388608), (49, 33554432), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 131072), (3, -1), (4, -1), (5, 67108864), (6, -1), (7, -1), (8, -1), (9, 131072), (10, -1), (11, 4194304), (12, 8388608), (13, 65536), (14, -1), (15, 139264), (16, 268435456), (17, 2097152), (18, 134217728), (19, 1048576), (20, 32768), (21, -1), (22, -1), (23, 67108864), (24, -1), (25, 524288), (26, -1), (27, 8192), (28, 524288), (29, -1), (30, 131072), (31, 2048), (32, -1), (33, -1), (34, 0), (35, 0), (36, 524288), (37, 33554432), (38, -1), (39, 2048), (40, 16777216), (41, 4096), (42, 65536), (43, 65536), (44, -1), (45, -1), (46, -1), (47, 8388608), (48, 2097152), (49, 8388608), (50, -1), (51, -1), (52, -1)]

Covered at level 5 : {34, 35}

After reduction : 
 pending  : [23, 9, 30, 31, 37, 39, 40, 42, 43, 47, 48, 49, 41, 5, 27, 2, 11, 12, 13, 15, 16, 17, 18, 19, 20, 25, 36, 28]
 solution : [7, 3, 4, 33]


Before reduction : 
 pending  : [23, 9, 30, 31, 37, 39, 40, 42, 43, 47, 48, 49, 41, 5, 27, 2, 11, 12, 13, 15, 16, 17, 18, 19, 20, 25, 36, 28]
 solution : [7, 3, 4, 33]

Essensial at level 5 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 131072), (3, -1), (4, -1), (5, 67108864), (6, -1), (7, -1), (8, -1), (9, 131072), (10, -1), (11, 4194304), (12, 8388608), (13, 65536), (14, -1), (15, 139264), (16, 268435456), (17, 2097152), (18, 134217728), (19, 1048576), (20, 32768), (21, -1), (22, -1), (23, 67108864), (24, -1), (25, 524288), (26, -1), (27, 8192), (28, 524288), (29, -1), (30, 131072), (31, 2048), (32, -1), (33, -1), (34, 0), (35, 0), (36, 524288), (37, 33554432), (38, -1), (39, 2048), (40, 16777216), (41, 4096), (42, 65536), (43, 65536), (44, -1), (45, -1), (46, -1), (47, 8388608), (48, 2097152), (49, 8388608), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 131072), (3, -1), (4, -1), (5, 67108864), (6, -1), (7, -1), (8, -1), (9, 131072), (10, -1), (11, 4194304), (12, 8388608), (13, 65536), (14, -1), (15, 139264), (16, 268435456), (17, 2097152), (18, 134217728), (19, 1048576), (20, 32768), (21, -1), (22, -1), (23, 67108864), (24, -1), (25, 524288), (26, -1), (27, 8192), (28, 524288), (29, -1), (30, 131072), (31, 2048), (32, -1), (33, -1), (34, -1), (35, -1), (36, 524288), (37, 33554432), (38, -1), (39, 2048), (40, 16777216), (41, 4096), (42, 65536), (43, 65536), (44, -1), (45, -1), (46, -1), (47, 8388608), (48, 2097152), (49, 8388608), (50, -1), (51, -1), (52, -1)]

Covered at level 5 : set()

After reduction : 
 pending  : [23, 9, 30, 31, 37, 39, 40, 42, 43, 47, 48, 49, 41, 5, 27, 2, 11, 12, 13, 15, 16, 17, 18, 19, 20, 25, 36, 28]
 solution : [7, 3, 4, 33]


Solution : [7, 3, 4, 33] has cost 27.


Before backtrack at level 5
 pending : [23, 9, 30, 31, 37, 39, 40, 42, 43, 47, 48, 49, 41, 5, 27, 2, 11, 12, 13, 15, 16, 17, 18, 19, 20, 25, 36, 28]
 solution : [7, 3, 4, 33]

After backtrack at level 5
 pending : [23, 9, 30, 31, 37, 39, 40, 42, 43, 47, 48, 49, 41, 5, 27, 2, 11, 12, 13, 15, 16, 17, 18, 19, 20, 25, 36, 28, 34, 35]
 solution : [7, 3, 4, 33]


Invert decision for 33 at level 4


New level: 5
 pending : [23, 9, 30, 31, 37, 39, 40, 42, 43, 47, 48, 49, 41, 5, 27, 2, 11, 12, 13, 15, 16, 17, 18, 19, 20, 25, 36, 28, 34, 35]
 solution : [7, 3, 4]


Before reduction : 
 pending  : [23, 9, 30, 31, 37, 39, 40, 42, 43, 47, 48, 49, 41, 5, 27, 2, 11, 12, 13, 15, 16, 17, 18, 19, 20, 25, 36, 28, 34, 35]
 solution : [7, 3, 4]

Essensial at level 5 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 131072), (3, -1), (4, -1), (5, 67108864), (6, -1), (7, -1), (8, -1), (9, 131072), (10, -1), (11, 4194304), (12, 8388608), (13, 65536), (14, -1), (15, 139264), (16, 268435456), (17, 2097152), (18, 134217728), (19, 1048576), (20, 32768), (21, -1), (22, -1), (23, 67108864), (24, -1), (25, 524288), (26, -1), (27, 8192), (28, 524288), (29, -1), (30, 131072), (31, 2048), (32, -1), (33, -1), (34, -1), (35, -1), (36, 524288), (37, 33554432), (38, -1), (39, 2048), (40, 16777216), (41, 4096), (42, 65536), (43, 65536), (44, -1), (45, -1), (46, -1), (47, 8388608), (48, 2097152), (49, 8388608), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 131072), (3, -1), (4, -1), (5, 67108864), (6, -1), (7, -1), (8, -1), (9, 524288), (10, -1), (11, 4194304), (12, 8388608), (13, 65536), (14, -1), (15, 139264), (16, 268435456), (17, 2097152), (18, 134217728), (19, 1048576), (20, 32768), (21, -1), (22, -1), (23, 67108864), (24, -1), (25, 524288), (26, -1), (27, 268435456), (28, 536870912), (29, -1), (30, 524288), (31, 8192), (32, -1), (33, -1), (34, 1048576), (35, 8192), (36, 524288), (37, 33554432), (38, -1), (39, 8192), (40, 67108864), (41, 134217728), (42, 262144), (43, 262144), (44, -1), (45, -1), (46, -1), (47, 33554432), (48, 8388608), (49, 33554432), (50, -1), (51, -1), (52, -1)]

Covered at level 5 : set()

After reduction : 
 pending  : [23, 9, 30, 31, 37, 39, 40, 42, 43, 47, 48, 49, 41, 5, 27, 2, 11, 12, 13, 15, 16, 17, 18, 19, 20, 25, 36, 28, 34, 35]
 solution : [7, 3, 4]


Solution : [7, 3, 4] has cost 14.


Decide in level 5 among pending : [23, 9, 30, 31, 37, 39, 40, 42, 43, 47, 48, 49, 41, 5, 27, 2, 11, 12, 13, 15, 16, 17, 18, 19, 20, 25, 36, 28, 34, 35]

Coverage : [(0, -1), (1, -1), (2, 131072), (3, -1), (4, -1), (5, 67108864), (6, -1), (7, -1), (8, -1), (9, 524288), (10, -1), (11, 4194304), (12, 8388608), (13, 65536), (14, -1), (15, 139264), (16, 268435456), (17, 2097152), (18, 134217728), (19, 1048576), (20, 32768), (21, -1), (22, -1), (23, 67108864), (24, -1), (25, 524288), (26, -1), (27, 268435456), (28, 536870912), (29, -1), (30, 524288), (31, 8192), (32, -1), (33, -1), (34, 1048576), (35, 8192), (36, 524288), (37, 33554432), (38, -1), (39, 8192), (40, 67108864), (41, 134217728), (42, 262144), (43, 262144), (44, -1), (45, -1), (46, -1), (47, 33554432), (48, 8388608), (49, 33554432), (50, -1), (51, -1), (52, -1)]

Decide 28 with phase True at level 5

After decision at level 5
 pending : [23, 9, 30, 31, 37, 39, 40, 42, 43, 47, 48, 49, 41, 5, 27, 2, 11, 12, 13, 15, 16, 17, 18, 19, 20, 25, 36, 34, 35]
 solution : [7, 3, 4, 28]


New level: 6
 pending : [23, 9, 30, 31, 37, 39, 40, 42, 43, 47, 48, 49, 41, 5, 27, 2, 11, 12, 13, 15, 16, 17, 18, 19, 20, 25, 36, 34, 35]
 solution : [7, 3, 4, 28]


Before reduction : 
 pending  : [23, 9, 30, 31, 37, 39, 40, 42, 43, 47, 48, 49, 41, 5, 27, 2, 11, 12, 13, 15, 16, 17, 18, 19, 20, 25, 36, 34, 35]
 solution : [7, 3, 4, 28]

Essensial at level 6 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 131072), (3, -1), (4, -1), (5, 67108864), (6, -1), (7, -1), (8, -1), (9, 524288), (10, -1), (11, 4194304), (12, 8388608), (13, 65536), (14, -1), (15, 139264), (16, 268435456), (17, 2097152), (18, 134217728), (19, 1048576), (20, 32768), (21, -1), (22, -1), (23, 67108864), (24, -1), (25, 524288), (26, -1), (27, 268435456), (28, 536870912), (29, -1), (30, 524288), (31, 8192), (32, -1), (33, -1), (34, 1048576), (35, 8192), (36, 524288), (37, 33554432), (38, -1), (39, 8192), (40, 67108864), (41, 134217728), (42, 262144), (43, 262144), (44, -1), (45, -1), (46, -1), (47, 33554432), (48, 8388608), (49, 33554432), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 131072), (3, -1), (4, -1), (5, 67108864), (6, -1), (7, -1), (8, -1), (9, 524288), (10, -1), (11, 4194304), (12, 8388608), (13, 65536), (14, -1), (15, 139264), (16, 268435456), (17, 2097152), (18, 134217728), (19, 1048576), (20, 32768), (21, -1), (22, -1), (23, 67108864), (24, -1), (25, 524288), (26, -1), (27, 134217728), (28, -1), (29, -1), (30, 524288), (31, 8192), (32, -1), (33, -1), (34, 524288), (35, 4096), (36, 524288), (37, 33554432), (38, -1), (39, 8192), (40, 67108864), (41, 134217728), (42, 262144), (43, 262144), (44, -1), (45, -1), (46, -1), (47, 33554432), (48, 8388608), (49, 33554432), (50, -1), (51, -1), (52, -1)]

Covered at level 6 : set()

After reduction : 
 pending  : [23, 9, 30, 31, 37, 39, 40, 42, 43, 47, 48, 49, 41, 5, 27, 2, 11, 12, 13, 15, 16, 17, 18, 19, 20, 25, 36, 34, 35]
 solution : [7, 3, 4, 28]


Solution : [7, 3, 4, 28] has cost 18.


Decide in level 6 among pending : [23, 9, 30, 31, 37, 39, 40, 42, 43, 47, 48, 49, 41, 5, 27, 2, 11, 12, 13, 15, 16, 17, 18, 19, 20, 25, 36, 34, 35]

Coverage : [(0, -1), (1, -1), (2, 131072), (3, -1), (4, -1), (5, 67108864), (6, -1), (7, -1), (8, -1), (9, 524288), (10, -1), (11, 4194304), (12, 8388608), (13, 65536), (14, -1), (15, 139264), (16, 268435456), (17, 2097152), (18, 134217728), (19, 1048576), (20, 32768), (21, -1), (22, -1), (23, 67108864), (24, -1), (25, 524288), (26, -1), (27, 134217728), (28, -1), (29, -1), (30, 524288), (31, 8192), (32, -1), (33, -1), (34, 524288), (35, 4096), (36, 524288), (37, 33554432), (38, -1), (39, 8192), (40, 67108864), (41, 134217728), (42, 262144), (43, 262144), (44, -1), (45, -1), (46, -1), (47, 33554432), (48, 8388608), (49, 33554432), (50, -1), (51, -1), (52, -1)]

Decide 16 with phase True at level 6

After decision at level 6
 pending : [23, 9, 30, 31, 37, 39, 40, 42, 43, 47, 48, 49, 41, 5, 27, 2, 11, 12, 13, 15, 17, 18, 19, 20, 25, 36, 34, 35]
 solution : [7, 3, 4, 28, 16]


New level: 7
 pending : [23, 9, 30, 31, 37, 39, 40, 42, 43, 47, 48, 49, 41, 5, 27, 2, 11, 12, 13, 15, 17, 18, 19, 20, 25, 36, 34, 35]
 solution : [7, 3, 4, 28, 16]


Before reduction : 
 pending  : [23, 9, 30, 31, 37, 39, 40, 42, 43, 47, 48, 49, 41, 5, 27, 2, 11, 12, 13, 15, 17, 18, 19, 20, 25, 36, 34, 35]
 solution : [7, 3, 4, 28, 16]

Essensial at level 7 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 131072), (3, -1), (4, -1), (5, 67108864), (6, -1), (7, -1), (8, -1), (9, 524288), (10, -1), (11, 4194304), (12, 8388608), (13, 65536), (14, -1), (15, 139264), (16, 268435456), (17, 2097152), (18, 134217728), (19, 1048576), (20, 32768), (21, -1), (22, -1), (23, 67108864), (24, -1), (25, 524288), (26, -1), (27, 134217728), (28, -1), (29, -1), (30, 524288), (31, 8192), (32, -1), (33, -1), (34, 524288), (35, 4096), (36, 524288), (37, 33554432), (38, -1), (39, 8192), (40, 67108864), (41, 134217728), (42, 262144), (43, 262144), (44, -1), (45, -1), (46, -1), (47, 33554432), (48, 8388608), (49, 33554432), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 0), (3, -1), (4, -1), (5, 67108864), (6, -1), (7, -1), (8, -1), (9, 131072), (10, -1), (11, 0), (12, 0), (13, 0), (14, -1), (15, 0), (16, -1), (17, 0), (18, 0), (19, 0), (20, 0), (21, -1), (22, -1), (23, 67108864), (24, -1), (25, 0), (26, -1), (27, 134217728), (28, -1), (29, -1), (30, 262144), (31, 4096), (32, -1), (33, -1), (34, 524288), (35, 4096), (36, 0), (37, 1024), (38, -1), (39, 2048), (40, 33554432), (41, 2048), (42, 65536), (43, 65536), (44, -1), (45, -1), (46, -1), (47, 16777216), (48, 2097152), (49, 33554432), (50, -1), (51, -1), (52, -1)]

Covered at level 7 : {2, 36, 11, 12, 13, 15, 17, 18, 19, 20, 25}

After reduction : 
 pending  : [23, 9, 30, 31, 37, 39, 40, 42, 43, 47, 48, 49, 41, 5, 27, 34, 35]
 solution : [7, 3, 4, 28, 16]


Before reduction : 
 pending  : [23, 9, 30, 31, 37, 39, 40, 42, 43, 47, 48, 49, 41, 5, 27, 34, 35]
 solution : [7, 3, 4, 28, 16]

Essensial at level 7 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 0), (3, -1), (4, -1), (5, 67108864), (6, -1), (7, -1), (8, -1), (9, 131072), (10, -1), (11, 0), (12, 0), (13, 0), (14, -1), (15, 0), (16, -1), (17, 0), (18, 0), (19, 0), (20, 0), (21, -1), (22, -1), (23, 67108864), (24, -1), (25, 0), (26, -1), (27, 134217728), (28, -1), (29, -1), (30, 262144), (31, 4096), (32, -1), (33, -1), (34, 524288), (35, 4096), (36, 0), (37, 1024), (38, -1), (39, 2048), (40, 33554432), (41, 2048), (42, 65536), (43, 65536), (44, -1), (45, -1), (46, -1), (47, 16777216), (48, 2097152), (49, 33554432), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 67108864), (6, -1), (7, -1), (8, -1), (9, 131072), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, 67108864), (24, -1), (25, -1), (26, -1), (27, 134217728), (28, -1), (29, -1), (30, 262144), (31, 4096), (32, -1), (33, -1), (34, 524288), (35, 4096), (36, -1), (37, 1024), (38, -1), (39, 2048), (40, 33554432), (41, 2048), (42, 65536), (43, 65536), (44, -1), (45, -1), (46, -1), (47, 16777216), (48, 2097152), (49, 33554432), (50, -1), (51, -1), (52, -1)]

Covered at level 7 : set()

After reduction : 
 pending  : [23, 9, 30, 31, 37, 39, 40, 42, 43, 47, 48, 49, 41, 5, 27, 34, 35]
 solution : [7, 3, 4, 28, 16]


Solution : [7, 3, 4, 28, 16] has cost 25.


Before backtrack at level 7
 pending : [23, 9, 30, 31, 37, 39, 40, 42, 43, 47, 48, 49, 41, 5, 27, 34, 35]
 solution : [7, 3, 4, 28, 16]

After backtrack at level 7
 pending : [23, 9, 30, 31, 37, 39, 40, 42, 43, 47, 48, 49, 41, 5, 27, 34, 35, 2, 11, 12, 13, 15, 17, 18, 19, 20, 25, 36]
 solution : [7, 3, 4, 28, 16]


Invert decision for 16 at level 6


New level: 7
 pending : [23, 9, 30, 31, 37, 39, 40, 42, 43, 47, 48, 49, 41, 5, 27, 34, 35, 2, 11, 12, 13, 15, 17, 18, 19, 20, 25, 36]
 solution : [7, 3, 4, 28]


Before reduction : 
 pending  : [23, 9, 30, 31, 37, 39, 40, 42, 43, 47, 48, 49, 41, 5, 27, 34, 35, 2, 11, 12, 13, 15, 17, 18, 19, 20, 25, 36]
 solution : [7, 3, 4, 28]

Essensial at level 7 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 67108864), (6, -1), (7, -1), (8, -1), (9, 131072), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, 67108864), (24, -1), (25, -1), (26, -1), (27, 134217728), (28, -1), (29, -1), (30, 262144), (31, 4096), (32, -1), (33, -1), (34, 524288), (35, 4096), (36, -1), (37, 1024), (38, -1), (39, 2048), (40, 33554432), (41, 2048), (42, 65536), (43, 65536), (44, -1), (45, -1), (46, -1), (47, 16777216), (48, 2097152), (49, 33554432), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 131072), (3, -1), (4, -1), (5, 67108864), (6, -1), (7, -1), (8, -1), (9, 524288), (10, -1), (11, 4194304), (12, 8388608), (13, 65536), (14, -1), (15, 139264), (16, -1), (17, 2097152), (18, 134217728), (19, 1048576), (20, 32768), (21, -1), (22, -1), (23, 67108864), (24, -1), (25, 524288), (26, -1), (27, 134217728), (28, -1), (29, -1), (30, 524288), (31, 8192), (32, -1), (33, -1), (34, 524288), (35, 4096), (36, 524288), (37, 33554432), (38, -1), (39, 8192), (40, 67108864), (41, 134217728), (42, 262144), (43, 262144), (44, -1), (45, -1), (46, -1), (47, 33554432), (48, 8388608), (49, 33554432), (50, -1), (51, -1), (52, -1)]

Covered at level 7 : set()

After reduction : 
 pending  : [23, 9, 30, 31, 37, 39, 40, 42, 43, 47, 48, 49, 41, 5, 27, 34, 35, 2, 11, 12, 13, 15, 17, 18, 19, 20, 25, 36]
 solution : [7, 3, 4, 28]


Solution : [7, 3, 4, 28] has cost 18.


Decide in level 7 among pending : [23, 9, 30, 31, 37, 39, 40, 42, 43, 47, 48, 49, 41, 5, 27, 34, 35, 2, 11, 12, 13, 15, 17, 18, 19, 20, 25, 36]

Coverage : [(0, -1), (1, -1), (2, 131072), (3, -1), (4, -1), (5, 67108864), (6, -1), (7, -1), (8, -1), (9, 524288), (10, -1), (11, 4194304), (12, 8388608), (13, 65536), (14, -1), (15, 139264), (16, -1), (17, 2097152), (18, 134217728), (19, 1048576), (20, 32768), (21, -1), (22, -1), (23, 67108864), (24, -1), (25, 524288), (26, -1), (27, 134217728), (28, -1), (29, -1), (30, 524288), (31, 8192), (32, -1), (33, -1), (34, 524288), (35, 4096), (36, 524288), (37, 33554432), (38, -1), (39, 8192), (40, 67108864), (41, 134217728), (42, 262144), (43, 262144), (44, -1), (45, -1), (46, -1), (47, 33554432), (48, 8388608), (49, 33554432), (50, -1), (51, -1), (52, -1)]

Decide 41 with phase True at level 7

After decision at level 7
 pending : [23, 9, 30, 31, 37, 39, 40, 42, 43, 47, 48, 49, 5, 27, 34, 35, 2, 11, 12, 13, 15, 17, 18, 19, 20, 25, 36]
 solution : [7, 3, 4, 28, 41]


New level: 8
 pending : [23, 9, 30, 31, 37, 39, 40, 42, 43, 47, 48, 49, 5, 27, 34, 35, 2, 11, 12, 13, 15, 17, 18, 19, 20, 25, 36]
 solution : [7, 3, 4, 28, 41]


Before reduction : 
 pending  : [23, 9, 30, 31, 37, 39, 40, 42, 43, 47, 48, 49, 5, 27, 34, 35, 2, 11, 12, 13, 15, 17, 18, 19, 20, 25, 36]
 solution : [7, 3, 4, 28, 41]

Essensial at level 8 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 131072), (3, -1), (4, -1), (5, 67108864), (6, -1), (7, -1), (8, -1), (9, 524288), (10, -1), (11, 4194304), (12, 8388608), (13, 65536), (14, -1), (15, 139264), (16, -1), (17, 2097152), (18, 134217728), (19, 1048576), (20, 32768), (21, -1), (22, -1), (23, 67108864), (24, -1), (25, 524288), (26, -1), (27, 134217728), (28, -1), (29, -1), (30, 524288), (31, 8192), (32, -1), (33, -1), (34, 524288), (35, 4096), (36, 524288), (37, 33554432), (38, -1), (39, 8192), (40, 67108864), (41, 134217728), (42, 262144), (43, 262144), (44, -1), (45, -1), (46, -1), (47, 33554432), (48, 8388608), (49, 33554432), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 131072), (3, -1), (4, -1), (5, 67108864), (6, -1), (7, -1), (8, -1), (9, 524288), (10, -1), (11, 4194304), (12, 8388608), (13, 65536), (14, -1), (15, 139264), (16, -1), (17, 2097152), (18, 134217728), (19, 1048576), (20, 32768), (21, -1), (22, -1), (23, 67108864), (24, -1), (25, 524288), (26, -1), (27, 67108864), (28, -1), (29, -1), (30, 524288), (31, 8192), (32, -1), (33, -1), (34, 262144), (35, 2048), (36, 524288), (37, 16777216), (38, -1), (39, 8192), (40, 67108864), (41, -1), (42, 262144), (43, 262144), (44, -1), (45, -1), (46, -1), (47, 33554432), (48, 8388608), (49, 33554432), (50, -1), (51, -1), (52, -1)]

Covered at level 8 : set()

After reduction : 
 pending  : [23, 9, 30, 31, 37, 39, 40, 42, 43, 47, 48, 49, 5, 27, 34, 35, 2, 11, 12, 13, 15, 17, 18, 19, 20, 25, 36]
 solution : [7, 3, 4, 28, 41]


Solution : [7, 3, 4, 28, 41] has cost 32.


Before backtrack at level 8
 pending : [23, 9, 30, 31, 37, 39, 40, 42, 43, 47, 48, 49, 5, 27, 34, 35, 2, 11, 12, 13, 15, 17, 18, 19, 20, 25, 36]
 solution : [7, 3, 4, 28, 41]

After backtrack at level 8
 pending : [23, 9, 30, 31, 37, 39, 40, 42, 43, 47, 48, 49, 5, 27, 34, 35, 2, 11, 12, 13, 15, 17, 18, 19, 20, 25, 36]
 solution : [7, 3, 4, 28, 41]


Invert decision for 41 at level 7


New level: 8
 pending : [23, 9, 30, 31, 37, 39, 40, 42, 43, 47, 48, 49, 5, 27, 34, 35, 2, 11, 12, 13, 15, 17, 18, 19, 20, 25, 36]
 solution : [7, 3, 4, 28]


Before reduction : 
 pending  : [23, 9, 30, 31, 37, 39, 40, 42, 43, 47, 48, 49, 5, 27, 34, 35, 2, 11, 12, 13, 15, 17, 18, 19, 20, 25, 36]
 solution : [7, 3, 4, 28]

Essensial at level 8 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 131072), (3, -1), (4, -1), (5, 67108864), (6, -1), (7, -1), (8, -1), (9, 524288), (10, -1), (11, 4194304), (12, 8388608), (13, 65536), (14, -1), (15, 139264), (16, -1), (17, 2097152), (18, 134217728), (19, 1048576), (20, 32768), (21, -1), (22, -1), (23, 67108864), (24, -1), (25, 524288), (26, -1), (27, 67108864), (28, -1), (29, -1), (30, 524288), (31, 8192), (32, -1), (33, -1), (34, 262144), (35, 2048), (36, 524288), (37, 16777216), (38, -1), (39, 8192), (40, 67108864), (41, -1), (42, 262144), (43, 262144), (44, -1), (45, -1), (46, -1), (47, 33554432), (48, 8388608), (49, 33554432), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 131072), (3, -1), (4, -1), (5, 67108864), (6, -1), (7, -1), (8, -1), (9, 524288), (10, -1), (11, 4194304), (12, 8388608), (13, 65536), (14, -1), (15, 139264), (16, -1), (17, 2097152), (18, 134217728), (19, 1048576), (20, 32768), (21, -1), (22, -1), (23, 67108864), (24, -1), (25, 524288), (26, -1), (27, 134217728), (28, -1), (29, -1), (30, 524288), (31, 8192), (32, -1), (33, -1), (34, 524288), (35, 4096), (36, 524288), (37, 33554432), (38, -1), (39, 8192), (40, 67108864), (41, -1), (42, 262144), (43, 262144), (44, -1), (45, -1), (46, -1), (47, 33554432), (48, 8388608), (49, 33554432), (50, -1), (51, -1), (52, -1)]

Covered at level 8 : set()

After reduction : 
 pending  : [23, 9, 30, 31, 37, 39, 40, 42, 43, 47, 48, 49, 5, 27, 34, 35, 2, 11, 12, 13, 15, 17, 18, 19, 20, 25, 36]
 solution : [7, 3, 4, 28]


Solution : [7, 3, 4, 28] has cost 18.


Decide in level 8 among pending : [23, 9, 30, 31, 37, 39, 40, 42, 43, 47, 48, 49, 5, 27, 34, 35, 2, 11, 12, 13, 15, 17, 18, 19, 20, 25, 36]

Coverage : [(0, -1), (1, -1), (2, 131072), (3, -1), (4, -1), (5, 67108864), (6, -1), (7, -1), (8, -1), (9, 524288), (10, -1), (11, 4194304), (12, 8388608), (13, 65536), (14, -1), (15, 139264), (16, -1), (17, 2097152), (18, 134217728), (19, 1048576), (20, 32768), (21, -1), (22, -1), (23, 67108864), (24, -1), (25, 524288), (26, -1), (27, 134217728), (28, -1), (29, -1), (30, 524288), (31, 8192), (32, -1), (33, -1), (34, 524288), (35, 4096), (36, 524288), (37, 33554432), (38, -1), (39, 8192), (40, 67108864), (41, -1), (42, 262144), (43, 262144), (44, -1), (45, -1), (46, -1), (47, 33554432), (48, 8388608), (49, 33554432), (50, -1), (51, -1), (52, -1)]

Decide 27 with phase True at level 8

After decision at level 8
 pending : [23, 9, 30, 31, 37, 39, 40, 42, 43, 47, 48, 49, 5, 34, 35, 2, 11, 12, 13, 15, 17, 18, 19, 20, 25, 36]
 solution : [7, 3, 4, 28, 27]


New level: 9
 pending : [23, 9, 30, 31, 37, 39, 40, 42, 43, 47, 48, 49, 5, 34, 35, 2, 11, 12, 13, 15, 17, 18, 19, 20, 25, 36]
 solution : [7, 3, 4, 28, 27]


Before reduction : 
 pending  : [23, 9, 30, 31, 37, 39, 40, 42, 43, 47, 48, 49, 5, 34, 35, 2, 11, 12, 13, 15, 17, 18, 19, 20, 25, 36]
 solution : [7, 3, 4, 28, 27]

Essensial at level 9 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 131072), (3, -1), (4, -1), (5, 67108864), (6, -1), (7, -1), (8, -1), (9, 524288), (10, -1), (11, 4194304), (12, 8388608), (13, 65536), (14, -1), (15, 139264), (16, -1), (17, 2097152), (18, 134217728), (19, 1048576), (20, 32768), (21, -1), (22, -1), (23, 67108864), (24, -1), (25, 524288), (26, -1), (27, 134217728), (28, -1), (29, -1), (30, 524288), (31, 8192), (32, -1), (33, -1), (34, 524288), (35, 4096), (36, 524288), (37, 33554432), (38, -1), (39, 8192), (40, 67108864), (41, -1), (42, 262144), (43, 262144), (44, -1), (45, -1), (46, -1), (47, 33554432), (48, 8388608), (49, 33554432), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 131072), (3, -1), (4, -1), (5, 16777216), (6, -1), (7, -1), (8, -1), (9, 131072), (10, -1), (11, 4194304), (12, 8388608), (13, 65536), (14, -1), (15, 139264), (16, -1), (17, 2097152), (18, 134217728), (19, 1048576), (20, 32768), (21, -1), (22, -1), (23, 16777216), (24, -1), (25, 524288), (26, -1), (27, -1), (28, -1), (29, -1), (30, 131072), (31, 2048), (32, -1), (33, -1), (34, 0), (35, 0), (36, 524288), (37, 33554432), (38, -1), (39, 2048), (40, 33554432), (41, -1), (42, 65536), (43, 65536), (44, -1), (45, -1), (46, -1), (47, 8388608), (48, 2097152), (49, 16777216), (50, -1), (51, -1), (52, -1)]

Covered at level 9 : {34, 35}

After reduction : 
 pending  : [23, 9, 30, 31, 37, 39, 40, 42, 43, 47, 48, 49, 5, 2, 11, 12, 13, 15, 17, 18, 19, 20, 25, 36]
 solution : [7, 3, 4, 28, 27]


Before reduction : 
 pending  : [23, 9, 30, 31, 37, 39, 40, 42, 43, 47, 48, 49, 5, 2, 11, 12, 13, 15, 17, 18, 19, 20, 25, 36]
 solution : [7, 3, 4, 28, 27]

Essensial at level 9 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 131072), (3, -1), (4, -1), (5, 16777216), (6, -1), (7, -1), (8, -1), (9, 131072), (10, -1), (11, 4194304), (12, 8388608), (13, 65536), (14, -1), (15, 139264), (16, -1), (17, 2097152), (18, 134217728), (19, 1048576), (20, 32768), (21, -1), (22, -1), (23, 16777216), (24, -1), (25, 524288), (26, -1), (27, -1), (28, -1), (29, -1), (30, 131072), (31, 2048), (32, -1), (33, -1), (34, 0), (35, 0), (36, 524288), (37, 33554432), (38, -1), (39, 2048), (40, 33554432), (41, -1), (42, 65536), (43, 65536), (44, -1), (45, -1), (46, -1), (47, 8388608), (48, 2097152), (49, 16777216), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 131072), (3, -1), (4, -1), (5, 16777216), (6, -1), (7, -1), (8, -1), (9, 131072), (10, -1), (11, 4194304), (12, 8388608), (13, 65536), (14, -1), (15, 139264), (16, -1), (17, 2097152), (18, 134217728), (19, 1048576), (20, 32768), (21, -1), (22, -1), (23, 16777216), (24, -1), (25, 524288), (26, -1), (27, -1), (28, -1), (29, -1), (30, 131072), (31, 2048), (32, -1), (33, -1), (34, -1), (35, -1), (36, 524288), (37, 33554432), (38, -1), (39, 2048), (40, 33554432), (41, -1), (42, 65536), (43, 65536), (44, -1), (45, -1), (46, -1), (47, 8388608), (48, 2097152), (49, 16777216), (50, -1), (51, -1), (52, -1)]

Covered at level 9 : set()

After reduction : 
 pending  : [23, 9, 30, 31, 37, 39, 40, 42, 43, 47, 48, 49, 5, 2, 11, 12, 13, 15, 17, 18, 19, 20, 25, 36]
 solution : [7, 3, 4, 28, 27]


Solution : [7, 3, 4, 28, 27] has cost 25.


Before backtrack at level 9
 pending : [23, 9, 30, 31, 37, 39, 40, 42, 43, 47, 48, 49, 5, 2, 11, 12, 13, 15, 17, 18, 19, 20, 25, 36]
 solution : [7, 3, 4, 28, 27]

After backtrack at level 9
 pending : [23, 9, 30, 31, 37, 39, 40, 42, 43, 47, 48, 49, 5, 2, 11, 12, 13, 15, 17, 18, 19, 20, 25, 36, 34, 35]
 solution : [7, 3, 4, 28, 27]


Invert decision for 27 at level 8


New level: 9
 pending : [23, 9, 30, 31, 37, 39, 40, 42, 43, 47, 48, 49, 5, 2, 11, 12, 13, 15, 17, 18, 19, 20, 25, 36, 34, 35]
 solution : [7, 3, 4, 28]


Before reduction : 
 pending  : [23, 9, 30, 31, 37, 39, 40, 42, 43, 47, 48, 49, 5, 2, 11, 12, 13, 15, 17, 18, 19, 20, 25, 36, 34, 35]
 solution : [7, 3, 4, 28]

Essensial at level 9 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 131072), (3, -1), (4, -1), (5, 16777216), (6, -1), (7, -1), (8, -1), (9, 131072), (10, -1), (11, 4194304), (12, 8388608), (13, 65536), (14, -1), (15, 139264), (16, -1), (17, 2097152), (18, 134217728), (19, 1048576), (20, 32768), (21, -1), (22, -1), (23, 16777216), (24, -1), (25, 524288), (26, -1), (27, -1), (28, -1), (29, -1), (30, 131072), (31, 2048), (32, -1), (33, -1), (34, -1), (35, -1), (36, 524288), (37, 33554432), (38, -1), (39, 2048), (40, 33554432), (41, -1), (42, 65536), (43, 65536), (44, -1), (45, -1), (46, -1), (47, 8388608), (48, 2097152), (49, 16777216), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 131072), (3, -1), (4, -1), (5, 67108864), (6, -1), (7, -1), (8, -1), (9, 524288), (10, -1), (11, 4194304), (12, 8388608), (13, 65536), (14, -1), (15, 139264), (16, -1), (17, 2097152), (18, 134217728), (19, 1048576), (20, 32768), (21, -1), (22, -1), (23, 67108864), (24, -1), (25, 524288), (26, -1), (27, -1), (28, -1), (29, -1), (30, 524288), (31, 8192), (32, -1), (33, -1), (34, 524288), (35, 4096), (36, 524288), (37, 33554432), (38, -1), (39, 8192), (40, 67108864), (41, -1), (42, 262144), (43, 262144), (44, -1), (45, -1), (46, -1), (47, 33554432), (48, 8388608), (49, 33554432), (50, -1), (51, -1), (52, -1)]

Covered at level 9 : set()

After reduction : 
 pending  : [23, 9, 30, 31, 37, 39, 40, 42, 43, 47, 48, 49, 5, 2, 11, 12, 13, 15, 17, 18, 19, 20, 25, 36, 34, 35]
 solution : [7, 3, 4, 28]


Solution : [7, 3, 4, 28] has cost 18.


Decide in level 9 among pending : [23, 9, 30, 31, 37, 39, 40, 42, 43, 47, 48, 49, 5, 2, 11, 12, 13, 15, 17, 18, 19, 20, 25, 36, 34, 35]

Coverage : [(0, -1), (1, -1), (2, 131072), (3, -1), (4, -1), (5, 67108864), (6, -1), (7, -1), (8, -1), (9, 524288), (10, -1), (11, 4194304), (12, 8388608), (13, 65536), (14, -1), (15, 139264), (16, -1), (17, 2097152), (18, 134217728), (19, 1048576), (20, 32768), (21, -1), (22, -1), (23, 67108864), (24, -1), (25, 524288), (26, -1), (27, -1), (28, -1), (29, -1), (30, 524288), (31, 8192), (32, -1), (33, -1), (34, 524288), (35, 4096), (36, 524288), (37, 33554432), (38, -1), (39, 8192), (40, 67108864), (41, -1), (42, 262144), (43, 262144), (44, -1), (45, -1), (46, -1), (47, 33554432), (48, 8388608), (49, 33554432), (50, -1), (51, -1), (52, -1)]

Decide 18 with phase True at level 9

After decision at level 9
 pending : [23, 9, 30, 31, 37, 39, 40, 42, 43, 47, 48, 49, 5, 2, 11, 12, 13, 15, 17, 19, 20, 25, 36, 34, 35]
 solution : [7, 3, 4, 28, 18]


New level: 10
 pending : [23, 9, 30, 31, 37, 39, 40, 42, 43, 47, 48, 49, 5, 2, 11, 12, 13, 15, 17, 19, 20, 25, 36, 34, 35]
 solution : [7, 3, 4, 28, 18]


Before reduction : 
 pending  : [23, 9, 30, 31, 37, 39, 40, 42, 43, 47, 48, 49, 5, 2, 11, 12, 13, 15, 17, 19, 20, 25, 36, 34, 35]
 solution : [7, 3, 4, 28, 18]

Essensial at level 10 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 131072), (3, -1), (4, -1), (5, 67108864), (6, -1), (7, -1), (8, -1), (9, 524288), (10, -1), (11, 4194304), (12, 8388608), (13, 65536), (14, -1), (15, 139264), (16, -1), (17, 2097152), (18, 134217728), (19, 1048576), (20, 32768), (21, -1), (22, -1), (23, 67108864), (24, -1), (25, 524288), (26, -1), (27, -1), (28, -1), (29, -1), (30, 524288), (31, 8192), (32, -1), (33, -1), (34, 524288), (35, 4096), (36, 524288), (37, 33554432), (38, -1), (39, 8192), (40, 67108864), (41, -1), (42, 262144), (43, 262144), (44, -1), (45, -1), (46, -1), (47, 33554432), (48, 8388608), (49, 33554432), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 0), (3, -1), (4, -1), (5, 67108864), (6, -1), (7, -1), (8, -1), (9, 131072), (10, -1), (11, 0), (12, 0), (13, 0), (14, -1), (15, 0), (16, -1), (17, 0), (18, -1), (19, 0), (20, 0), (21, -1), (22, -1), (23, 67108864), (24, -1), (25, 0), (26, -1), (27, -1), (28, -1), (29, -1), (30, 262144), (31, 4096), (32, -1), (33, -1), (34, 524288), (35, 4096), (36, 0), (37, 33554432), (38, -1), (39, 2048), (40, 33554432), (41, -1), (42, 131072), (43, 131072), (44, -1), (45, -1), (46, -1), (47, 33554432), (48, 8388608), (49, 33554432), (50, -1), (51, -1), (52, -1)]

Covered at level 10 : {2, 36, 11, 12, 13, 15, 17, 19, 20, 25}

After reduction : 
 pending  : [23, 9, 30, 31, 37, 39, 40, 42, 43, 47, 48, 49, 5, 34, 35]
 solution : [7, 3, 4, 28, 18]


Before reduction : 
 pending  : [23, 9, 30, 31, 37, 39, 40, 42, 43, 47, 48, 49, 5, 34, 35]
 solution : [7, 3, 4, 28, 18]

Essensial at level 10 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 0), (3, -1), (4, -1), (5, 67108864), (6, -1), (7, -1), (8, -1), (9, 131072), (10, -1), (11, 0), (12, 0), (13, 0), (14, -1), (15, 0), (16, -1), (17, 0), (18, -1), (19, 0), (20, 0), (21, -1), (22, -1), (23, 67108864), (24, -1), (25, 0), (26, -1), (27, -1), (28, -1), (29, -1), (30, 262144), (31, 4096), (32, -1), (33, -1), (34, 524288), (35, 4096), (36, 0), (37, 33554432), (38, -1), (39, 2048), (40, 33554432), (41, -1), (42, 131072), (43, 131072), (44, -1), (45, -1), (46, -1), (47, 33554432), (48, 8388608), (49, 33554432), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 67108864), (6, -1), (7, -1), (8, -1), (9, 131072), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, 67108864), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, 262144), (31, 4096), (32, -1), (33, -1), (34, 524288), (35, 4096), (36, -1), (37, 1024), (38, -1), (39, 2048), (40, 33554432), (41, -1), (42, 131072), (43, 131072), (44, -1), (45, -1), (46, -1), (47, 33554432), (48, 4194304), (49, 33554432), (50, -1), (51, -1), (52, -1)]

Covered at level 10 : set()

After reduction : 
 pending  : [23, 9, 30, 31, 37, 39, 40, 42, 43, 47, 48, 49, 5, 34, 35]
 solution : [7, 3, 4, 28, 18]


Solution : [7, 3, 4, 28, 18] has cost 25.


Before backtrack at level 10
 pending : [23, 9, 30, 31, 37, 39, 40, 42, 43, 47, 48, 49, 5, 34, 35]
 solution : [7, 3, 4, 28, 18]

After backtrack at level 10
 pending : [23, 9, 30, 31, 37, 39, 40, 42, 43, 47, 48, 49, 5, 34, 35, 2, 11, 12, 13, 15, 17, 19, 20, 25, 36]
 solution : [7, 3, 4, 28, 18]


Invert decision for 18 at level 9


New level: 10
 pending : [23, 9, 30, 31, 37, 39, 40, 42, 43, 47, 48, 49, 5, 34, 35, 2, 11, 12, 13, 15, 17, 19, 20, 25, 36]
 solution : [7, 3, 4, 28]


Before reduction : 
 pending  : [23, 9, 30, 31, 37, 39, 40, 42, 43, 47, 48, 49, 5, 34, 35, 2, 11, 12, 13, 15, 17, 19, 20, 25, 36]
 solution : [7, 3, 4, 28]

Essensial at level 10 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 67108864), (6, -1), (7, -1), (8, -1), (9, 131072), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, 67108864), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, 262144), (31, 4096), (32, -1), (33, -1), (34, 524288), (35, 4096), (36, -1), (37, 1024), (38, -1), (39, 2048), (40, 33554432), (41, -1), (42, 131072), (43, 131072), (44, -1), (45, -1), (46, -1), (47, 33554432), (48, 4194304), (49, 33554432), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 131072), (3, -1), (4, -1), (5, 67108864), (6, -1), (7, -1), (8, -1), (9, 524288), (10, -1), (11, 4194304), (12, 8388608), (13, 65536), (14, -1), (15, 139264), (16, -1), (17, 2097152), (18, -1), (19, 1048576), (20, 32768), (21, -1), (22, -1), (23, 67108864), (24, -1), (25, 524288), (26, -1), (27, -1), (28, -1), (29, -1), (30, 524288), (31, 8192), (32, -1), (33, -1), (34, 524288), (35, 4096), (36, 524288), (37, 33554432), (38, -1), (39, 8192), (40, 67108864), (41, -1), (42, 262144), (43, 262144), (44, -1), (45, -1), (46, -1), (47, 33554432), (48, 8388608), (49, 33554432), (50, -1), (51, -1), (52, -1)]

Covered at level 10 : set()

After reduction : 
 pending  : [23, 9, 30, 31, 37, 39, 40, 42, 43, 47, 48, 49, 5, 34, 35, 2, 11, 12, 13, 15, 17, 19, 20, 25, 36]
 solution : [7, 3, 4, 28]


Solution : [7, 3, 4, 28] has cost 18.


Decide in level 10 among pending : [23, 9, 30, 31, 37, 39, 40, 42, 43, 47, 48, 49, 5, 34, 35, 2, 11, 12, 13, 15, 17, 19, 20, 25, 36]

Coverage : [(0, -1), (1, -1), (2, 131072), (3, -1), (4, -1), (5, 67108864), (6, -1), (7, -1), (8, -1), (9, 524288), (10, -1), (11, 4194304), (12, 8388608), (13, 65536), (14, -1), (15, 139264), (16, -1), (17, 2097152), (18, -1), (19, 1048576), (20, 32768), (21, -1), (22, -1), (23, 67108864), (24, -1), (25, 524288), (26, -1), (27, -1), (28, -1), (29, -1), (30, 524288), (31, 8192), (32, -1), (33, -1), (34, 524288), (35, 4096), (36, 524288), (37, 33554432), (38, -1), (39, 8192), (40, 67108864), (41, -1), (42, 262144), (43, 262144), (44, -1), (45, -1), (46, -1), (47, 33554432), (48, 8388608), (49, 33554432), (50, -1), (51, -1), (52, -1)]

Decide 23 with phase True at level 10

After decision at level 10
 pending : [9, 30, 31, 37, 39, 40, 42, 43, 47, 48, 49, 5, 34, 35, 2, 11, 12, 13, 15, 17, 19, 20, 25, 36]
 solution : [7, 3, 4, 28, 23]


New level: 11
 pending : [9, 30, 31, 37, 39, 40, 42, 43, 47, 48, 49, 5, 34, 35, 2, 11, 12, 13, 15, 17, 19, 20, 25, 36]
 solution : [7, 3, 4, 28, 23]


Before reduction : 
 pending  : [9, 30, 31, 37, 39, 40, 42, 43, 47, 48, 49, 5, 34, 35, 2, 11, 12, 13, 15, 17, 19, 20, 25, 36]
 solution : [7, 3, 4, 28, 23]

Essensial at level 11 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 131072), (3, -1), (4, -1), (5, 67108864), (6, -1), (7, -1), (8, -1), (9, 524288), (10, -1), (11, 4194304), (12, 8388608), (13, 65536), (14, -1), (15, 139264), (16, -1), (17, 2097152), (18, -1), (19, 1048576), (20, 32768), (21, -1), (22, -1), (23, 67108864), (24, -1), (25, 524288), (26, -1), (27, -1), (28, -1), (29, -1), (30, 524288), (31, 8192), (32, -1), (33, -1), (34, 524288), (35, 4096), (36, 524288), (37, 33554432), (38, -1), (39, 8192), (40, 67108864), (41, -1), (42, 262144), (43, 262144), (44, -1), (45, -1), (46, -1), (47, 33554432), (48, 8388608), (49, 33554432), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 65536), (3, -1), (4, -1), (5, 0), (6, -1), (7, -1), (8, -1), (9, 0), (10, -1), (11, 2097152), (12, 4194304), (13, 32768), (14, -1), (15, 67584), (16, -1), (17, 2097152), (18, -1), (19, 1048576), (20, 32768), (21, -1), (22, -1), (23, -1), (24, -1), (25, 524288), (26, -1), (27, -1), (28, -1), (29, -1), (30, 0), (31, 0), (32, -1), (33, -1), (34, 0), (35, 0), (36, 524288), (37, 262144), (38, -1), (39, 0), (40, 0), (41, -1), (42, 0), (43, 0), (44, -1), (45, -1), (46, -1), (47, 0), (48, 0), (49, 0), (50, -1), (51, -1), (52, -1)]

Covered at level 11 : {34, 35, 5, 39, 40, 9, 42, 43, 47, 48, 49, 30, 31}

After reduction : 
 pending  : [37, 2, 11, 12, 13, 15, 17, 19, 20, 25, 36]
 solution : [7, 3, 4, 28, 23]


Before reduction : 
 pending  : [37, 2, 11, 12, 13, 15, 17, 19, 20, 25, 36]
 solution : [7, 3, 4, 28, 23]

Essensial at level 11 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 65536), (3, -1), (4, -1), (5, 0), (6, -1), (7, -1), (8, -1), (9, 0), (10, -1), (11, 2097152), (12, 4194304), (13, 32768), (14, -1), (15, 67584), (16, -1), (17, 2097152), (18, -1), (19, 1048576), (20, 32768), (21, -1), (22, -1), (23, -1), (24, -1), (25, 524288), (26, -1), (27, -1), (28, -1), (29, -1), (30, 0), (31, 0), (32, -1), (33, -1), (34, 0), (35, 0), (36, 524288), (37, 262144), (38, -1), (39, 0), (40, 0), (41, -1), (42, 0), (43, 0), (44, -1), (45, -1), (46, -1), (47, 0), (48, 0), (49, 0), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 65536), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, 2097152), (12, 4194304), (13, 32768), (14, -1), (15, 67584), (16, -1), (17, 2097152), (18, -1), (19, 1048576), (20, 32768), (21, -1), (22, -1), (23, -1), (24, -1), (25, 524288), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, 524288), (37, 262144), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 11 : set()

After reduction : 
 pending  : [37, 2, 11, 12, 13, 15, 17, 19, 20, 25, 36]
 solution : [7, 3, 4, 28, 23]


Solution : [7, 3, 4, 28, 23] has cost 25.


Before backtrack at level 11
 pending : [37, 2, 11, 12, 13, 15, 17, 19, 20, 25, 36]
 solution : [7, 3, 4, 28, 23]

After backtrack at level 11
 pending : [37, 2, 11, 12, 13, 15, 17, 19, 20, 25, 36, 9, 30, 31, 39, 40, 42, 43, 47, 48, 49, 5, 34, 35]
 solution : [7, 3, 4, 28, 23]


Invert decision for 23 at level 10


New level: 11
 pending : [37, 2, 11, 12, 13, 15, 17, 19, 20, 25, 36, 9, 30, 31, 39, 40, 42, 43, 47, 48, 49, 5, 34, 35]
 solution : [7, 3, 4, 28]


Before reduction : 
 pending  : [37, 2, 11, 12, 13, 15, 17, 19, 20, 25, 36, 9, 30, 31, 39, 40, 42, 43, 47, 48, 49, 5, 34, 35]
 solution : [7, 3, 4, 28]

Essensial at level 11 : {5}

Before removed
 coverage : [(0, -1), (1, -1), (2, 65536), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, 2097152), (12, 4194304), (13, 32768), (14, -1), (15, 67584), (16, -1), (17, 2097152), (18, -1), (19, 1048576), (20, 32768), (21, -1), (22, -1), (23, -1), (24, -1), (25, 524288), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, 524288), (37, 262144), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 65536), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, 0), (10, -1), (11, 2097152), (12, 4194304), (13, 32768), (14, -1), (15, 67584), (16, -1), (17, 2097152), (18, -1), (19, 1048576), (20, 32768), (21, -1), (22, -1), (23, -1), (24, -1), (25, 524288), (26, -1), (27, -1), (28, -1), (29, -1), (30, 0), (31, 0), (32, -1), (33, -1), (34, 0), (35, 0), (36, 524288), (37, 32768), (38, -1), (39, 0), (40, 0), (41, -1), (42, 0), (43, 0), (44, -1), (45, -1), (46, -1), (47, 0), (48, 0), (49, 0), (50, -1), (51, -1), (52, -1)]

Covered at level 11 : {34, 35, 39, 40, 9, 42, 43, 47, 48, 49, 30, 31}

After reduction : 
 pending  : [37, 2, 11, 12, 13, 15, 17, 19, 20, 25, 36]
 solution : [7, 3, 4, 28, 5]


Before reduction : 
 pending  : [37, 2, 11, 12, 13, 15, 17, 19, 20, 25, 36]
 solution : [7, 3, 4, 28, 5]

Essensial at level 11 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 65536), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, 0), (10, -1), (11, 2097152), (12, 4194304), (13, 32768), (14, -1), (15, 67584), (16, -1), (17, 2097152), (18, -1), (19, 1048576), (20, 32768), (21, -1), (22, -1), (23, -1), (24, -1), (25, 524288), (26, -1), (27, -1), (28, -1), (29, -1), (30, 0), (31, 0), (32, -1), (33, -1), (34, 0), (35, 0), (36, 524288), (37, 32768), (38, -1), (39, 0), (40, 0), (41, -1), (42, 0), (43, 0), (44, -1), (45, -1), (46, -1), (47, 0), (48, 0), (49, 0), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 65536), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, 2097152), (12, 4194304), (13, 32768), (14, -1), (15, 67584), (16, -1), (17, 2097152), (18, -1), (19, 1048576), (20, 32768), (21, -1), (22, -1), (23, -1), (24, -1), (25, 524288), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, 524288), (37, 32768), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 11 : set()

After reduction : 
 pending  : [37, 2, 11, 12, 13, 15, 17, 19, 20, 25, 36]
 solution : [7, 3, 4, 28, 5]


Solution : [7, 3, 4, 28, 5] has cost 22.


Decide in level 11 among pending : [37, 2, 11, 12, 13, 15, 17, 19, 20, 25, 36]

Coverage : [(0, -1), (1, -1), (2, 65536), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, 2097152), (12, 4194304), (13, 32768), (14, -1), (15, 67584), (16, -1), (17, 2097152), (18, -1), (19, 1048576), (20, 32768), (21, -1), (22, -1), (23, -1), (24, -1), (25, 524288), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, 524288), (37, 32768), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Decide 12 with phase True at level 11

After decision at level 11
 pending : [37, 2, 11, 13, 15, 17, 19, 20, 25, 36]
 solution : [7, 3, 4, 28, 5, 12]


New level: 12
 pending : [37, 2, 11, 13, 15, 17, 19, 20, 25, 36]
 solution : [7, 3, 4, 28, 5, 12]


Before reduction : 
 pending  : [37, 2, 11, 13, 15, 17, 19, 20, 25, 36]
 solution : [7, 3, 4, 28, 5, 12]

Essensial at level 12 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 65536), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, 2097152), (12, 4194304), (13, 32768), (14, -1), (15, 67584), (16, -1), (17, 2097152), (18, -1), (19, 1048576), (20, 32768), (21, -1), (22, -1), (23, -1), (24, -1), (25, 524288), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, 524288), (37, 32768), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 0), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, 0), (12, -1), (13, 0), (14, -1), (15, 0), (16, -1), (17, 32768), (18, -1), (19, 8192), (20, 8192), (21, -1), (22, -1), (23, -1), (24, -1), (25, 2048), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, 2048), (37, 1024), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 12 : {2, 11, 13, 15}

After reduction : 
 pending  : [37, 17, 19, 20, 25, 36]
 solution : [7, 3, 4, 28, 5, 12]


Before reduction : 
 pending  : [37, 17, 19, 20, 25, 36]
 solution : [7, 3, 4, 28, 5, 12]

Essensial at level 12 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 0), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, 0), (12, -1), (13, 0), (14, -1), (15, 0), (16, -1), (17, 32768), (18, -1), (19, 8192), (20, 8192), (21, -1), (22, -1), (23, -1), (24, -1), (25, 2048), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, 2048), (37, 1024), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, 32768), (18, -1), (19, 8192), (20, 8192), (21, -1), (22, -1), (23, -1), (24, -1), (25, 2048), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, 2048), (37, 1024), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 12 : set()

After reduction : 
 pending  : [37, 17, 19, 20, 25, 36]
 solution : [7, 3, 4, 28, 5, 12]


Solution : [7, 3, 4, 28, 5, 12] has cost 31.


Before backtrack at level 12
 pending : [37, 17, 19, 20, 25, 36]
 solution : [7, 3, 4, 28, 5, 12]

After backtrack at level 12
 pending : [37, 17, 19, 20, 25, 36, 2, 11, 13, 15]
 solution : [7, 3, 4, 28, 5, 12]


Invert decision for 12 at level 11


New level: 12
 pending : [37, 17, 19, 20, 25, 36, 2, 11, 13, 15]
 solution : [7, 3, 4, 28, 5]


Before reduction : 
 pending  : [37, 17, 19, 20, 25, 36, 2, 11, 13, 15]
 solution : [7, 3, 4, 28, 5]

Essensial at level 12 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, 32768), (18, -1), (19, 8192), (20, 8192), (21, -1), (22, -1), (23, -1), (24, -1), (25, 2048), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, 2048), (37, 1024), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 65536), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, 2097152), (12, -1), (13, 32768), (14, -1), (15, 67584), (16, -1), (17, 2097152), (18, -1), (19, 1048576), (20, 32768), (21, -1), (22, -1), (23, -1), (24, -1), (25, 524288), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, 524288), (37, 32768), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 12 : set()

After reduction : 
 pending  : [37, 17, 19, 20, 25, 36, 2, 11, 13, 15]
 solution : [7, 3, 4, 28, 5]


Solution : [7, 3, 4, 28, 5] has cost 22.


Decide in level 12 among pending : [37, 17, 19, 20, 25, 36, 2, 11, 13, 15]

Coverage : [(0, -1), (1, -1), (2, 65536), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, 2097152), (12, -1), (13, 32768), (14, -1), (15, 67584), (16, -1), (17, 2097152), (18, -1), (19, 1048576), (20, 32768), (21, -1), (22, -1), (23, -1), (24, -1), (25, 524288), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, 524288), (37, 32768), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Decide 17 with phase True at level 12

After decision at level 12
 pending : [37, 19, 20, 25, 36, 2, 11, 13, 15]
 solution : [7, 3, 4, 28, 5, 17]


New level: 13
 pending : [37, 19, 20, 25, 36, 2, 11, 13, 15]
 solution : [7, 3, 4, 28, 5, 17]


Before reduction : 
 pending  : [37, 19, 20, 25, 36, 2, 11, 13, 15]
 solution : [7, 3, 4, 28, 5, 17]

Essensial at level 13 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 65536), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, 2097152), (12, -1), (13, 32768), (14, -1), (15, 67584), (16, -1), (17, 2097152), (18, -1), (19, 1048576), (20, 32768), (21, -1), (22, -1), (23, -1), (24, -1), (25, 524288), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, 524288), (37, 32768), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 32768), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, 524288), (12, -1), (13, 0), (14, -1), (15, 33280), (16, -1), (17, -1), (18, -1), (19, 0), (20, 0), (21, -1), (22, -1), (23, -1), (24, -1), (25, 131072), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, 131072), (37, 512), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 13 : {19, 20, 13}

After reduction : 
 pending  : [37, 25, 36, 2, 11, 15]
 solution : [7, 3, 4, 28, 5, 17]


Before reduction : 
 pending  : [37, 25, 36, 2, 11, 15]
 solution : [7, 3, 4, 28, 5, 17]

Essensial at level 13 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 32768), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, 524288), (12, -1), (13, 0), (14, -1), (15, 33280), (16, -1), (17, -1), (18, -1), (19, 0), (20, 0), (21, -1), (22, -1), (23, -1), (24, -1), (25, 131072), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, 131072), (37, 512), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 32768), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, 524288), (12, -1), (13, -1), (14, -1), (15, 33280), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, 131072), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, 131072), (37, 512), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 13 : set()

After reduction : 
 pending  : [37, 25, 36, 2, 11, 15]
 solution : [7, 3, 4, 28, 5, 17]


Solution : [7, 3, 4, 28, 5, 17] has cost 29.


Before backtrack at level 13
 pending : [37, 25, 36, 2, 11, 15]
 solution : [7, 3, 4, 28, 5, 17]

After backtrack at level 13
 pending : [37, 25, 36, 2, 11, 15, 19, 20, 13]
 solution : [7, 3, 4, 28, 5, 17]


Invert decision for 17 at level 12


New level: 13
 pending : [37, 25, 36, 2, 11, 15, 19, 20, 13]
 solution : [7, 3, 4, 28, 5]


Before reduction : 
 pending  : [37, 25, 36, 2, 11, 15, 19, 20, 13]
 solution : [7, 3, 4, 28, 5]

Essensial at level 13 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 32768), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, 524288), (12, -1), (13, -1), (14, -1), (15, 33280), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, 131072), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, 131072), (37, 512), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 65536), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, 2097152), (12, -1), (13, 32768), (14, -1), (15, 67584), (16, -1), (17, -1), (18, -1), (19, 1048576), (20, 32768), (21, -1), (22, -1), (23, -1), (24, -1), (25, 524288), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, 524288), (37, 32768), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 13 : set()

After reduction : 
 pending  : [37, 25, 36, 2, 11, 15, 19, 20, 13]
 solution : [7, 3, 4, 28, 5]


Solution : [7, 3, 4, 28, 5] has cost 22.


Decide in level 13 among pending : [37, 25, 36, 2, 11, 15, 19, 20, 13]

Coverage : [(0, -1), (1, -1), (2, 65536), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, 2097152), (12, -1), (13, 32768), (14, -1), (15, 67584), (16, -1), (17, -1), (18, -1), (19, 1048576), (20, 32768), (21, -1), (22, -1), (23, -1), (24, -1), (25, 524288), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, 524288), (37, 32768), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Decide 11 with phase True at level 13

After decision at level 13
 pending : [37, 25, 36, 2, 15, 19, 20, 13]
 solution : [7, 3, 4, 28, 5, 11]


New level: 14
 pending : [37, 25, 36, 2, 15, 19, 20, 13]
 solution : [7, 3, 4, 28, 5, 11]


Before reduction : 
 pending  : [37, 25, 36, 2, 15, 19, 20, 13]
 solution : [7, 3, 4, 28, 5, 11]

Essensial at level 14 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 65536), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, 2097152), (12, -1), (13, 32768), (14, -1), (15, 67584), (16, -1), (17, -1), (18, -1), (19, 1048576), (20, 32768), (21, -1), (22, -1), (23, -1), (24, -1), (25, 524288), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, 524288), (37, 32768), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 0), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, 0), (14, -1), (15, 0), (16, -1), (17, -1), (18, -1), (19, 8192), (20, 8192), (21, -1), (22, -1), (23, -1), (24, -1), (25, 2048), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, 2048), (37, 1024), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 14 : {2, 13, 15}

After reduction : 
 pending  : [37, 25, 36, 19, 20]
 solution : [7, 3, 4, 28, 5, 11]


Before reduction : 
 pending  : [37, 25, 36, 19, 20]
 solution : [7, 3, 4, 28, 5, 11]

Essensial at level 14 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 0), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, 0), (14, -1), (15, 0), (16, -1), (17, -1), (18, -1), (19, 8192), (20, 8192), (21, -1), (22, -1), (23, -1), (24, -1), (25, 2048), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, 2048), (37, 1024), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, 8192), (20, 8192), (21, -1), (22, -1), (23, -1), (24, -1), (25, 2048), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, 2048), (37, 1024), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 14 : set()

After reduction : 
 pending  : [37, 25, 36, 19, 20]
 solution : [7, 3, 4, 28, 5, 11]


Solution : [7, 3, 4, 28, 5, 11] has cost 31.


Before backtrack at level 14
 pending : [37, 25, 36, 19, 20]
 solution : [7, 3, 4, 28, 5, 11]

After backtrack at level 14
 pending : [37, 25, 36, 19, 20, 2, 15, 13]
 solution : [7, 3, 4, 28, 5, 11]


Invert decision for 11 at level 13


New level: 14
 pending : [37, 25, 36, 19, 20, 2, 15, 13]
 solution : [7, 3, 4, 28, 5]


Before reduction : 
 pending  : [37, 25, 36, 19, 20, 2, 15, 13]
 solution : [7, 3, 4, 28, 5]

Essensial at level 14 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, 8192), (20, 8192), (21, -1), (22, -1), (23, -1), (24, -1), (25, 2048), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, 2048), (37, 1024), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 65536), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, 32768), (14, -1), (15, 67584), (16, -1), (17, -1), (18, -1), (19, 1048576), (20, 32768), (21, -1), (22, -1), (23, -1), (24, -1), (25, 524288), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, 524288), (37, 32768), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 14 : set()

After reduction : 
 pending  : [37, 25, 36, 19, 20, 2, 15, 13]
 solution : [7, 3, 4, 28, 5]


Solution : [7, 3, 4, 28, 5] has cost 22.


Decide in level 14 among pending : [37, 25, 36, 19, 20, 2, 15, 13]

Coverage : [(0, -1), (1, -1), (2, 65536), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, 32768), (14, -1), (15, 67584), (16, -1), (17, -1), (18, -1), (19, 1048576), (20, 32768), (21, -1), (22, -1), (23, -1), (24, -1), (25, 524288), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, 524288), (37, 32768), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Decide 19 with phase True at level 14

After decision at level 14
 pending : [37, 25, 36, 20, 2, 15, 13]
 solution : [7, 3, 4, 28, 5, 19]


New level: 15
 pending : [37, 25, 36, 20, 2, 15, 13]
 solution : [7, 3, 4, 28, 5, 19]


Before reduction : 
 pending  : [37, 25, 36, 20, 2, 15, 13]
 solution : [7, 3, 4, 28, 5, 19]

Essensial at level 15 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 65536), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, 32768), (14, -1), (15, 67584), (16, -1), (17, -1), (18, -1), (19, 1048576), (20, 32768), (21, -1), (22, -1), (23, -1), (24, -1), (25, 524288), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, 524288), (37, 32768), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 32768), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, 0), (14, -1), (15, 33280), (16, -1), (17, -1), (18, -1), (19, -1), (20, 0), (21, -1), (22, -1), (23, -1), (24, -1), (25, 131072), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, 131072), (37, 512), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 15 : {20, 13}

After reduction : 
 pending  : [37, 25, 36, 2, 15]
 solution : [7, 3, 4, 28, 5, 19]


Before reduction : 
 pending  : [37, 25, 36, 2, 15]
 solution : [7, 3, 4, 28, 5, 19]

Essensial at level 15 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 32768), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, 0), (14, -1), (15, 33280), (16, -1), (17, -1), (18, -1), (19, -1), (20, 0), (21, -1), (22, -1), (23, -1), (24, -1), (25, 131072), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, 131072), (37, 512), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 32768), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, 33280), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, 131072), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, 131072), (37, 512), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 15 : set()

After reduction : 
 pending  : [37, 25, 36, 2, 15]
 solution : [7, 3, 4, 28, 5, 19]


Solution : [7, 3, 4, 28, 5, 19] has cost 29.


Before backtrack at level 15
 pending : [37, 25, 36, 2, 15]
 solution : [7, 3, 4, 28, 5, 19]

After backtrack at level 15
 pending : [37, 25, 36, 2, 15, 20, 13]
 solution : [7, 3, 4, 28, 5, 19]


Invert decision for 19 at level 14


New level: 15
 pending : [37, 25, 36, 2, 15, 20, 13]
 solution : [7, 3, 4, 28, 5]


Before reduction : 
 pending  : [37, 25, 36, 2, 15, 20, 13]
 solution : [7, 3, 4, 28, 5]

Essensial at level 15 : {20}

Before removed
 coverage : [(0, -1), (1, -1), (2, 32768), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, 33280), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, 131072), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, 131072), (37, 512), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 65536), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, 16384), (14, -1), (15, 67584), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, 524288), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, 524288), (37, 32768), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 15 : set()

After reduction : 
 pending  : [37, 25, 36, 2, 15, 13]
 solution : [7, 3, 4, 28, 5, 20]


Before reduction : 
 pending  : [37, 25, 36, 2, 15, 13]
 solution : [7, 3, 4, 28, 5, 20]

Essensial at level 15 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 65536), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, 16384), (14, -1), (15, 67584), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, 524288), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, 524288), (37, 32768), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 65536), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, 16384), (14, -1), (15, 67584), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, 524288), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, 524288), (37, 32768), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 15 : set()

After reduction : 
 pending  : [37, 25, 36, 2, 15, 13]
 solution : [7, 3, 4, 28, 5, 20]


Solution : [7, 3, 4, 28, 5, 20] has cost 29.


Before backtrack at level 15
 pending : [37, 25, 36, 2, 15, 13]
 solution : [7, 3, 4, 28, 5, 20]

After backtrack at level 15
 pending : [37, 25, 36, 2, 15, 13, 20]
 solution : [7, 3, 4, 28, 5]


Before backtrack at level 14
 pending : [37, 25, 36, 2, 15, 13, 20]
 solution : [7, 3, 4, 28, 5]

After backtrack at level 14
 pending : [37, 25, 36, 2, 15, 13, 20, 19]
 solution : [7, 3, 4, 28, 5]


Before backtrack at level 13
 pending : [37, 25, 36, 2, 15, 13, 20, 19]
 solution : [7, 3, 4, 28, 5]

After backtrack at level 13
 pending : [37, 25, 36, 2, 15, 13, 20, 19, 11]
 solution : [7, 3, 4, 28, 5]


Before backtrack at level 12
 pending : [37, 25, 36, 2, 15, 13, 20, 19, 11]
 solution : [7, 3, 4, 28, 5]

After backtrack at level 12
 pending : [37, 25, 36, 2, 15, 13, 20, 19, 11, 17]
 solution : [7, 3, 4, 28, 5]


Before backtrack at level 11
 pending : [37, 25, 36, 2, 15, 13, 20, 19, 11, 17]
 solution : [7, 3, 4, 28, 5]

After backtrack at level 11
 pending : [37, 25, 36, 2, 15, 13, 20, 19, 11, 17, 5, 9, 30, 31, 39, 40, 42, 43, 47, 48, 49, 34, 35, 12]
 solution : [7, 3, 4, 28]


Before backtrack at level 10
 pending : [37, 25, 36, 2, 15, 13, 20, 19, 11, 17, 5, 9, 30, 31, 39, 40, 42, 43, 47, 48, 49, 34, 35, 12]
 solution : [7, 3, 4, 28]

After backtrack at level 10
 pending : [37, 25, 36, 2, 15, 13, 20, 19, 11, 17, 5, 9, 30, 31, 39, 40, 42, 43, 47, 48, 49, 34, 35, 12, 23]
 solution : [7, 3, 4, 28]


Before backtrack at level 9
 pending : [37, 25, 36, 2, 15, 13, 20, 19, 11, 17, 5, 9, 30, 31, 39, 40, 42, 43, 47, 48, 49, 34, 35, 12, 23]
 solution : [7, 3, 4, 28]

After backtrack at level 9
 pending : [37, 25, 36, 2, 15, 13, 20, 19, 11, 17, 5, 9, 30, 31, 39, 40, 42, 43, 47, 48, 49, 34, 35, 12, 23, 18]
 solution : [7, 3, 4, 28]


Before backtrack at level 8
 pending : [37, 25, 36, 2, 15, 13, 20, 19, 11, 17, 5, 9, 30, 31, 39, 40, 42, 43, 47, 48, 49, 34, 35, 12, 23, 18]
 solution : [7, 3, 4, 28]

After backtrack at level 8
 pending : [37, 25, 36, 2, 15, 13, 20, 19, 11, 17, 5, 9, 30, 31, 39, 40, 42, 43, 47, 48, 49, 34, 35, 12, 23, 18, 27]
 solution : [7, 3, 4, 28]


Before backtrack at level 7
 pending : [37, 25, 36, 2, 15, 13, 20, 19, 11, 17, 5, 9, 30, 31, 39, 40, 42, 43, 47, 48, 49, 34, 35, 12, 23, 18, 27]
 solution : [7, 3, 4, 28]

After backtrack at level 7
 pending : [37, 25, 36, 2, 15, 13, 20, 19, 11, 17, 5, 9, 30, 31, 39, 40, 42, 43, 47, 48, 49, 34, 35, 12, 23, 18, 27, 41]
 solution : [7, 3, 4, 28]


Before backtrack at level 6
 pending : [37, 25, 36, 2, 15, 13, 20, 19, 11, 17, 5, 9, 30, 31, 39, 40, 42, 43, 47, 48, 49, 34, 35, 12, 23, 18, 27, 41]
 solution : [7, 3, 4, 28]

After backtrack at level 6
 pending : [37, 25, 36, 2, 15, 13, 20, 19, 11, 17, 5, 9, 30, 31, 39, 40, 42, 43, 47, 48, 49, 34, 35, 12, 23, 18, 27, 41, 16]
 solution : [7, 3, 4, 28]


Invert decision for 28 at level 5


New level: 6
 pending : [37, 25, 36, 2, 15, 13, 20, 19, 11, 17, 5, 9, 30, 31, 39, 40, 42, 43, 47, 48, 49, 34, 35, 12, 23, 18, 27, 41, 16]
 solution : [7, 3, 4]


Before reduction : 
 pending  : [37, 25, 36, 2, 15, 13, 20, 19, 11, 17, 5, 9, 30, 31, 39, 40, 42, 43, 47, 48, 49, 34, 35, 12, 23, 18, 27, 41, 16]
 solution : [7, 3, 4]

Essensial at level 6 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 65536), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, 16384), (14, -1), (15, 67584), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, 524288), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, 524288), (37, 32768), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 131072), (3, -1), (4, -1), (5, 67108864), (6, -1), (7, -1), (8, -1), (9, 524288), (10, -1), (11, 4194304), (12, 8388608), (13, 65536), (14, -1), (15, 139264), (16, 268435456), (17, 2097152), (18, 134217728), (19, 1048576), (20, 32768), (21, -1), (22, -1), (23, 67108864), (24, -1), (25, 524288), (26, -1), (27, 268435456), (28, -1), (29, -1), (30, 524288), (31, 8192), (32, -1), (33, -1), (34, 1048576), (35, 8192), (36, 524288), (37, 33554432), (38, -1), (39, 8192), (40, 67108864), (41, 134217728), (42, 262144), (43, 262144), (44, -1), (45, -1), (46, -1), (47, 33554432), (48, 8388608), (49, 33554432), (50, -1), (51, -1), (52, -1)]

Covered at level 6 : set()

After reduction : 
 pending  : [37, 25, 36, 2, 15, 13, 20, 19, 11, 17, 5, 9, 30, 31, 39, 40, 42, 43, 47, 48, 49, 34, 35, 12, 23, 18, 27, 41, 16]
 solution : [7, 3, 4]


Solution : [7, 3, 4] has cost 14.


Decide in level 6 among pending : [37, 25, 36, 2, 15, 13, 20, 19, 11, 17, 5, 9, 30, 31, 39, 40, 42, 43, 47, 48, 49, 34, 35, 12, 23, 18, 27, 41, 16]

Coverage : [(0, -1), (1, -1), (2, 131072), (3, -1), (4, -1), (5, 67108864), (6, -1), (7, -1), (8, -1), (9, 524288), (10, -1), (11, 4194304), (12, 8388608), (13, 65536), (14, -1), (15, 139264), (16, 268435456), (17, 2097152), (18, 134217728), (19, 1048576), (20, 32768), (21, -1), (22, -1), (23, 67108864), (24, -1), (25, 524288), (26, -1), (27, 268435456), (28, -1), (29, -1), (30, 524288), (31, 8192), (32, -1), (33, -1), (34, 1048576), (35, 8192), (36, 524288), (37, 33554432), (38, -1), (39, 8192), (40, 67108864), (41, 134217728), (42, 262144), (43, 262144), (44, -1), (45, -1), (46, -1), (47, 33554432), (48, 8388608), (49, 33554432), (50, -1), (51, -1), (52, -1)]

Decide 27 with phase True at level 6

After decision at level 6
 pending : [37, 25, 36, 2, 15, 13, 20, 19, 11, 17, 5, 9, 30, 31, 39, 40, 42, 43, 47, 48, 49, 34, 35, 12, 23, 18, 41, 16]
 solution : [7, 3, 4, 27]


New level: 7
 pending : [37, 25, 36, 2, 15, 13, 20, 19, 11, 17, 5, 9, 30, 31, 39, 40, 42, 43, 47, 48, 49, 34, 35, 12, 23, 18, 41, 16]
 solution : [7, 3, 4, 27]


Before reduction : 
 pending  : [37, 25, 36, 2, 15, 13, 20, 19, 11, 17, 5, 9, 30, 31, 39, 40, 42, 43, 47, 48, 49, 34, 35, 12, 23, 18, 41, 16]
 solution : [7, 3, 4, 27]

Essensial at level 7 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 131072), (3, -1), (4, -1), (5, 67108864), (6, -1), (7, -1), (8, -1), (9, 524288), (10, -1), (11, 4194304), (12, 8388608), (13, 65536), (14, -1), (15, 139264), (16, 268435456), (17, 2097152), (18, 134217728), (19, 1048576), (20, 32768), (21, -1), (22, -1), (23, 67108864), (24, -1), (25, 524288), (26, -1), (27, 268435456), (28, -1), (29, -1), (30, 524288), (31, 8192), (32, -1), (33, -1), (34, 1048576), (35, 8192), (36, 524288), (37, 33554432), (38, -1), (39, 8192), (40, 67108864), (41, 134217728), (42, 262144), (43, 262144), (44, -1), (45, -1), (46, -1), (47, 33554432), (48, 8388608), (49, 33554432), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 131072), (3, -1), (4, -1), (5, 16777216), (6, -1), (7, -1), (8, -1), (9, 131072), (10, -1), (11, 4194304), (12, 8388608), (13, 65536), (14, -1), (15, 139264), (16, 268435456), (17, 2097152), (18, 134217728), (19, 1048576), (20, 32768), (21, -1), (22, -1), (23, 16777216), (24, -1), (25, 524288), (26, -1), (27, -1), (28, -1), (29, -1), (30, 131072), (31, 2048), (32, -1), (33, -1), (34, 0), (35, 0), (36, 524288), (37, 33554432), (38, -1), (39, 2048), (40, 33554432), (41, 512), (42, 65536), (43, 65536), (44, -1), (45, -1), (46, -1), (47, 8388608), (48, 2097152), (49, 16777216), (50, -1), (51, -1), (52, -1)]

Covered at level 7 : {34, 35}

After reduction : 
 pending  : [37, 25, 36, 2, 15, 13, 20, 19, 11, 17, 5, 9, 30, 31, 39, 40, 42, 43, 47, 48, 49, 12, 23, 18, 41, 16]
 solution : [7, 3, 4, 27]


Before reduction : 
 pending  : [37, 25, 36, 2, 15, 13, 20, 19, 11, 17, 5, 9, 30, 31, 39, 40, 42, 43, 47, 48, 49, 12, 23, 18, 41, 16]
 solution : [7, 3, 4, 27]

Essensial at level 7 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 131072), (3, -1), (4, -1), (5, 16777216), (6, -1), (7, -1), (8, -1), (9, 131072), (10, -1), (11, 4194304), (12, 8388608), (13, 65536), (14, -1), (15, 139264), (16, 268435456), (17, 2097152), (18, 134217728), (19, 1048576), (20, 32768), (21, -1), (22, -1), (23, 16777216), (24, -1), (25, 524288), (26, -1), (27, -1), (28, -1), (29, -1), (30, 131072), (31, 2048), (32, -1), (33, -1), (34, 0), (35, 0), (36, 524288), (37, 33554432), (38, -1), (39, 2048), (40, 33554432), (41, 512), (42, 65536), (43, 65536), (44, -1), (45, -1), (46, -1), (47, 8388608), (48, 2097152), (49, 16777216), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 131072), (3, -1), (4, -1), (5, 16777216), (6, -1), (7, -1), (8, -1), (9, 131072), (10, -1), (11, 4194304), (12, 8388608), (13, 65536), (14, -1), (15, 139264), (16, 268435456), (17, 2097152), (18, 134217728), (19, 1048576), (20, 32768), (21, -1), (22, -1), (23, 16777216), (24, -1), (25, 524288), (26, -1), (27, -1), (28, -1), (29, -1), (30, 131072), (31, 2048), (32, -1), (33, -1), (34, -1), (35, -1), (36, 524288), (37, 33554432), (38, -1), (39, 2048), (40, 33554432), (41, 512), (42, 65536), (43, 65536), (44, -1), (45, -1), (46, -1), (47, 8388608), (48, 2097152), (49, 16777216), (50, -1), (51, -1), (52, -1)]

Covered at level 7 : set()

After reduction : 
 pending  : [37, 25, 36, 2, 15, 13, 20, 19, 11, 17, 5, 9, 30, 31, 39, 40, 42, 43, 47, 48, 49, 12, 23, 18, 41, 16]
 solution : [7, 3, 4, 27]


Solution : [7, 3, 4, 27] has cost 21.


Decide in level 7 among pending : [37, 25, 36, 2, 15, 13, 20, 19, 11, 17, 5, 9, 30, 31, 39, 40, 42, 43, 47, 48, 49, 12, 23, 18, 41, 16]

Coverage : [(0, -1), (1, -1), (2, 131072), (3, -1), (4, -1), (5, 16777216), (6, -1), (7, -1), (8, -1), (9, 131072), (10, -1), (11, 4194304), (12, 8388608), (13, 65536), (14, -1), (15, 139264), (16, 268435456), (17, 2097152), (18, 134217728), (19, 1048576), (20, 32768), (21, -1), (22, -1), (23, 16777216), (24, -1), (25, 524288), (26, -1), (27, -1), (28, -1), (29, -1), (30, 131072), (31, 2048), (32, -1), (33, -1), (34, -1), (35, -1), (36, 524288), (37, 33554432), (38, -1), (39, 2048), (40, 33554432), (41, 512), (42, 65536), (43, 65536), (44, -1), (45, -1), (46, -1), (47, 8388608), (48, 2097152), (49, 16777216), (50, -1), (51, -1), (52, -1)]

Decide 16 with phase True at level 7

After decision at level 7
 pending : [37, 25, 36, 2, 15, 13, 20, 19, 11, 17, 5, 9, 30, 31, 39, 40, 42, 43, 47, 48, 49, 12, 23, 18, 41]
 solution : [7, 3, 4, 27, 16]


New level: 8
 pending : [37, 25, 36, 2, 15, 13, 20, 19, 11, 17, 5, 9, 30, 31, 39, 40, 42, 43, 47, 48, 49, 12, 23, 18, 41]
 solution : [7, 3, 4, 27, 16]


Before reduction : 
 pending  : [37, 25, 36, 2, 15, 13, 20, 19, 11, 17, 5, 9, 30, 31, 39, 40, 42, 43, 47, 48, 49, 12, 23, 18, 41]
 solution : [7, 3, 4, 27, 16]

Essensial at level 8 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 131072), (3, -1), (4, -1), (5, 16777216), (6, -1), (7, -1), (8, -1), (9, 131072), (10, -1), (11, 4194304), (12, 8388608), (13, 65536), (14, -1), (15, 139264), (16, 268435456), (17, 2097152), (18, 134217728), (19, 1048576), (20, 32768), (21, -1), (22, -1), (23, 16777216), (24, -1), (25, 524288), (26, -1), (27, -1), (28, -1), (29, -1), (30, 131072), (31, 2048), (32, -1), (33, -1), (34, -1), (35, -1), (36, 524288), (37, 33554432), (38, -1), (39, 2048), (40, 33554432), (41, 512), (42, 65536), (43, 65536), (44, -1), (45, -1), (46, -1), (47, 8388608), (48, 2097152), (49, 16777216), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 0), (3, -1), (4, -1), (5, 16777216), (6, -1), (7, -1), (8, -1), (9, 32768), (10, -1), (11, 0), (12, 0), (13, 0), (14, -1), (15, 0), (16, -1), (17, 0), (18, 0), (19, 0), (20, 0), (21, -1), (22, -1), (23, 16777216), (24, -1), (25, 0), (26, -1), (27, -1), (28, -1), (29, -1), (30, 65536), (31, 1024), (32, -1), (33, -1), (34, -1), (35, -1), (36, 0), (37, 512), (38, -1), (39, 512), (40, 16777216), (41, 0), (42, 16384), (43, 16384), (44, -1), (45, -1), (46, -1), (47, 4194304), (48, 524288), (49, 16777216), (50, -1), (51, -1), (52, -1)]

Covered at level 8 : {2, 36, 41, 11, 12, 13, 15, 17, 18, 19, 20, 25}

After reduction : 
 pending  : [37, 5, 9, 30, 31, 39, 40, 42, 43, 47, 48, 49, 23]
 solution : [7, 3, 4, 27, 16]


Before reduction : 
 pending  : [37, 5, 9, 30, 31, 39, 40, 42, 43, 47, 48, 49, 23]
 solution : [7, 3, 4, 27, 16]

Essensial at level 8 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 0), (3, -1), (4, -1), (5, 16777216), (6, -1), (7, -1), (8, -1), (9, 32768), (10, -1), (11, 0), (12, 0), (13, 0), (14, -1), (15, 0), (16, -1), (17, 0), (18, 0), (19, 0), (20, 0), (21, -1), (22, -1), (23, 16777216), (24, -1), (25, 0), (26, -1), (27, -1), (28, -1), (29, -1), (30, 65536), (31, 1024), (32, -1), (33, -1), (34, -1), (35, -1), (36, 0), (37, 512), (38, -1), (39, 512), (40, 16777216), (41, 0), (42, 16384), (43, 16384), (44, -1), (45, -1), (46, -1), (47, 4194304), (48, 524288), (49, 16777216), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 16777216), (6, -1), (7, -1), (8, -1), (9, 32768), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, 16777216), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, 65536), (31, 1024), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, 512), (38, -1), (39, 512), (40, 16777216), (41, -1), (42, 16384), (43, 16384), (44, -1), (45, -1), (46, -1), (47, 4194304), (48, 524288), (49, 16777216), (50, -1), (51, -1), (52, -1)]

Covered at level 8 : set()

After reduction : 
 pending  : [37, 5, 9, 30, 31, 39, 40, 42, 43, 47, 48, 49, 23]
 solution : [7, 3, 4, 27, 16]


Solution : [7, 3, 4, 27, 16] has cost 28.


Before backtrack at level 8
 pending : [37, 5, 9, 30, 31, 39, 40, 42, 43, 47, 48, 49, 23]
 solution : [7, 3, 4, 27, 16]

After backtrack at level 8
 pending : [37, 5, 9, 30, 31, 39, 40, 42, 43, 47, 48, 49, 23, 25, 36, 2, 15, 13, 20, 19, 11, 17, 12, 18, 41]
 solution : [7, 3, 4, 27, 16]


Invert decision for 16 at level 7


New level: 8
 pending : [37, 5, 9, 30, 31, 39, 40, 42, 43, 47, 48, 49, 23, 25, 36, 2, 15, 13, 20, 19, 11, 17, 12, 18, 41]
 solution : [7, 3, 4, 27]


Before reduction : 
 pending  : [37, 5, 9, 30, 31, 39, 40, 42, 43, 47, 48, 49, 23, 25, 36, 2, 15, 13, 20, 19, 11, 17, 12, 18, 41]
 solution : [7, 3, 4, 27]

Essensial at level 8 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 16777216), (6, -1), (7, -1), (8, -1), (9, 32768), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, 16777216), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, 65536), (31, 1024), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, 512), (38, -1), (39, 512), (40, 16777216), (41, -1), (42, 16384), (43, 16384), (44, -1), (45, -1), (46, -1), (47, 4194304), (48, 524288), (49, 16777216), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 131072), (3, -1), (4, -1), (5, 16777216), (6, -1), (7, -1), (8, -1), (9, 131072), (10, -1), (11, 4194304), (12, 8388608), (13, 65536), (14, -1), (15, 139264), (16, -1), (17, 2097152), (18, 134217728), (19, 1048576), (20, 32768), (21, -1), (22, -1), (23, 16777216), (24, -1), (25, 524288), (26, -1), (27, -1), (28, -1), (29, -1), (30, 131072), (31, 2048), (32, -1), (33, -1), (34, -1), (35, -1), (36, 524288), (37, 33554432), (38, -1), (39, 2048), (40, 33554432), (41, 512), (42, 65536), (43, 65536), (44, -1), (45, -1), (46, -1), (47, 8388608), (48, 2097152), (49, 16777216), (50, -1), (51, -1), (52, -1)]

Covered at level 8 : set()

After reduction : 
 pending  : [37, 5, 9, 30, 31, 39, 40, 42, 43, 47, 48, 49, 23, 25, 36, 2, 15, 13, 20, 19, 11, 17, 12, 18, 41]
 solution : [7, 3, 4, 27]


Solution : [7, 3, 4, 27] has cost 21.


Decide in level 8 among pending : [37, 5, 9, 30, 31, 39, 40, 42, 43, 47, 48, 49, 23, 25, 36, 2, 15, 13, 20, 19, 11, 17, 12, 18, 41]

Coverage : [(0, -1), (1, -1), (2, 131072), (3, -1), (4, -1), (5, 16777216), (6, -1), (7, -1), (8, -1), (9, 131072), (10, -1), (11, 4194304), (12, 8388608), (13, 65536), (14, -1), (15, 139264), (16, -1), (17, 2097152), (18, 134217728), (19, 1048576), (20, 32768), (21, -1), (22, -1), (23, 16777216), (24, -1), (25, 524288), (26, -1), (27, -1), (28, -1), (29, -1), (30, 131072), (31, 2048), (32, -1), (33, -1), (34, -1), (35, -1), (36, 524288), (37, 33554432), (38, -1), (39, 2048), (40, 33554432), (41, 512), (42, 65536), (43, 65536), (44, -1), (45, -1), (46, -1), (47, 8388608), (48, 2097152), (49, 16777216), (50, -1), (51, -1), (52, -1)]

Decide 18 with phase True at level 8

After decision at level 8
 pending : [37, 5, 9, 30, 31, 39, 40, 42, 43, 47, 48, 49, 23, 25, 36, 2, 15, 13, 20, 19, 11, 17, 12, 41]
 solution : [7, 3, 4, 27, 18]


New level: 9
 pending : [37, 5, 9, 30, 31, 39, 40, 42, 43, 47, 48, 49, 23, 25, 36, 2, 15, 13, 20, 19, 11, 17, 12, 41]
 solution : [7, 3, 4, 27, 18]


Before reduction : 
 pending  : [37, 5, 9, 30, 31, 39, 40, 42, 43, 47, 48, 49, 23, 25, 36, 2, 15, 13, 20, 19, 11, 17, 12, 41]
 solution : [7, 3, 4, 27, 18]

Essensial at level 9 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 131072), (3, -1), (4, -1), (5, 16777216), (6, -1), (7, -1), (8, -1), (9, 131072), (10, -1), (11, 4194304), (12, 8388608), (13, 65536), (14, -1), (15, 139264), (16, -1), (17, 2097152), (18, 134217728), (19, 1048576), (20, 32768), (21, -1), (22, -1), (23, 16777216), (24, -1), (25, 524288), (26, -1), (27, -1), (28, -1), (29, -1), (30, 131072), (31, 2048), (32, -1), (33, -1), (34, -1), (35, -1), (36, 524288), (37, 33554432), (38, -1), (39, 2048), (40, 33554432), (41, 512), (42, 65536), (43, 65536), (44, -1), (45, -1), (46, -1), (47, 8388608), (48, 2097152), (49, 16777216), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 0), (3, -1), (4, -1), (5, 16777216), (6, -1), (7, -1), (8, -1), (9, 32768), (10, -1), (11, 0), (12, 0), (13, 0), (14, -1), (15, 0), (16, -1), (17, 0), (18, -1), (19, 0), (20, 0), (21, -1), (22, -1), (23, 16777216), (24, -1), (25, 0), (26, -1), (27, -1), (28, -1), (29, -1), (30, 65536), (31, 1024), (32, -1), (33, -1), (34, -1), (35, -1), (36, 0), (37, 512), (38, -1), (39, 512), (40, 16777216), (41, 0), (42, 32768), (43, 32768), (44, -1), (45, -1), (46, -1), (47, 8388608), (48, 1048576), (49, 16777216), (50, -1), (51, -1), (52, -1)]

Covered at level 9 : {2, 36, 41, 11, 12, 13, 15, 17, 19, 20, 25}

After reduction : 
 pending  : [37, 5, 9, 30, 31, 39, 40, 42, 43, 47, 48, 49, 23]
 solution : [7, 3, 4, 27, 18]


Before reduction : 
 pending  : [37, 5, 9, 30, 31, 39, 40, 42, 43, 47, 48, 49, 23]
 solution : [7, 3, 4, 27, 18]

Essensial at level 9 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 0), (3, -1), (4, -1), (5, 16777216), (6, -1), (7, -1), (8, -1), (9, 32768), (10, -1), (11, 0), (12, 0), (13, 0), (14, -1), (15, 0), (16, -1), (17, 0), (18, -1), (19, 0), (20, 0), (21, -1), (22, -1), (23, 16777216), (24, -1), (25, 0), (26, -1), (27, -1), (28, -1), (29, -1), (30, 65536), (31, 1024), (32, -1), (33, -1), (34, -1), (35, -1), (36, 0), (37, 512), (38, -1), (39, 512), (40, 16777216), (41, 0), (42, 32768), (43, 32768), (44, -1), (45, -1), (46, -1), (47, 8388608), (48, 1048576), (49, 16777216), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 16777216), (6, -1), (7, -1), (8, -1), (9, 32768), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, 16777216), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, 65536), (31, 1024), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, 512), (38, -1), (39, 512), (40, 16777216), (41, -1), (42, 32768), (43, 32768), (44, -1), (45, -1), (46, -1), (47, 8388608), (48, 1048576), (49, 16777216), (50, -1), (51, -1), (52, -1)]

Covered at level 9 : set()

After reduction : 
 pending  : [37, 5, 9, 30, 31, 39, 40, 42, 43, 47, 48, 49, 23]
 solution : [7, 3, 4, 27, 18]


Solution : [7, 3, 4, 27, 18] has cost 28.


Before backtrack at level 9
 pending : [37, 5, 9, 30, 31, 39, 40, 42, 43, 47, 48, 49, 23]
 solution : [7, 3, 4, 27, 18]

After backtrack at level 9
 pending : [37, 5, 9, 30, 31, 39, 40, 42, 43, 47, 48, 49, 23, 25, 36, 2, 15, 13, 20, 19, 11, 17, 12, 41]
 solution : [7, 3, 4, 27, 18]


Invert decision for 18 at level 8


New level: 9
 pending : [37, 5, 9, 30, 31, 39, 40, 42, 43, 47, 48, 49, 23, 25, 36, 2, 15, 13, 20, 19, 11, 17, 12, 41]
 solution : [7, 3, 4, 27]


Before reduction : 
 pending  : [37, 5, 9, 30, 31, 39, 40, 42, 43, 47, 48, 49, 23, 25, 36, 2, 15, 13, 20, 19, 11, 17, 12, 41]
 solution : [7, 3, 4, 27]

Essensial at level 9 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 16777216), (6, -1), (7, -1), (8, -1), (9, 32768), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, 16777216), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, 65536), (31, 1024), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, 512), (38, -1), (39, 512), (40, 16777216), (41, -1), (42, 32768), (43, 32768), (44, -1), (45, -1), (46, -1), (47, 8388608), (48, 1048576), (49, 16777216), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 131072), (3, -1), (4, -1), (5, 16777216), (6, -1), (7, -1), (8, -1), (9, 131072), (10, -1), (11, 4194304), (12, 8388608), (13, 65536), (14, -1), (15, 139264), (16, -1), (17, 2097152), (18, -1), (19, 1048576), (20, 32768), (21, -1), (22, -1), (23, 16777216), (24, -1), (25, 524288), (26, -1), (27, -1), (28, -1), (29, -1), (30, 131072), (31, 2048), (32, -1), (33, -1), (34, -1), (35, -1), (36, 524288), (37, 33554432), (38, -1), (39, 2048), (40, 33554432), (41, 512), (42, 65536), (43, 65536), (44, -1), (45, -1), (46, -1), (47, 8388608), (48, 2097152), (49, 16777216), (50, -1), (51, -1), (52, -1)]

Covered at level 9 : set()

After reduction : 
 pending  : [37, 5, 9, 30, 31, 39, 40, 42, 43, 47, 48, 49, 23, 25, 36, 2, 15, 13, 20, 19, 11, 17, 12, 41]
 solution : [7, 3, 4, 27]


Solution : [7, 3, 4, 27] has cost 21.


Decide in level 9 among pending : [37, 5, 9, 30, 31, 39, 40, 42, 43, 47, 48, 49, 23, 25, 36, 2, 15, 13, 20, 19, 11, 17, 12, 41]

Coverage : [(0, -1), (1, -1), (2, 131072), (3, -1), (4, -1), (5, 16777216), (6, -1), (7, -1), (8, -1), (9, 131072), (10, -1), (11, 4194304), (12, 8388608), (13, 65536), (14, -1), (15, 139264), (16, -1), (17, 2097152), (18, -1), (19, 1048576), (20, 32768), (21, -1), (22, -1), (23, 16777216), (24, -1), (25, 524288), (26, -1), (27, -1), (28, -1), (29, -1), (30, 131072), (31, 2048), (32, -1), (33, -1), (34, -1), (35, -1), (36, 524288), (37, 33554432), (38, -1), (39, 2048), (40, 33554432), (41, 512), (42, 65536), (43, 65536), (44, -1), (45, -1), (46, -1), (47, 8388608), (48, 2097152), (49, 16777216), (50, -1), (51, -1), (52, -1)]

Decide 37 with phase True at level 9

After decision at level 9
 pending : [5, 9, 30, 31, 39, 40, 42, 43, 47, 48, 49, 23, 25, 36, 2, 15, 13, 20, 19, 11, 17, 12, 41]
 solution : [7, 3, 4, 27, 37]


New level: 10
 pending : [5, 9, 30, 31, 39, 40, 42, 43, 47, 48, 49, 23, 25, 36, 2, 15, 13, 20, 19, 11, 17, 12, 41]
 solution : [7, 3, 4, 27, 37]


Before reduction : 
 pending  : [5, 9, 30, 31, 39, 40, 42, 43, 47, 48, 49, 23, 25, 36, 2, 15, 13, 20, 19, 11, 17, 12, 41]
 solution : [7, 3, 4, 27, 37]

Essensial at level 10 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 131072), (3, -1), (4, -1), (5, 16777216), (6, -1), (7, -1), (8, -1), (9, 131072), (10, -1), (11, 4194304), (12, 8388608), (13, 65536), (14, -1), (15, 139264), (16, -1), (17, 2097152), (18, -1), (19, 1048576), (20, 32768), (21, -1), (22, -1), (23, 16777216), (24, -1), (25, 524288), (26, -1), (27, -1), (28, -1), (29, -1), (30, 131072), (31, 2048), (32, -1), (33, -1), (34, -1), (35, -1), (36, 524288), (37, 33554432), (38, -1), (39, 2048), (40, 33554432), (41, 512), (42, 65536), (43, 65536), (44, -1), (45, -1), (46, -1), (47, 8388608), (48, 2097152), (49, 16777216), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 65536), (3, -1), (4, -1), (5, 4194304), (6, -1), (7, -1), (8, -1), (9, 32768), (10, -1), (11, 2097152), (12, 4194304), (13, 32768), (14, -1), (15, 67584), (16, -1), (17, 2097152), (18, -1), (19, 1048576), (20, 32768), (21, -1), (22, -1), (23, 4194304), (24, -1), (25, 131072), (26, -1), (27, -1), (28, -1), (29, -1), (30, 32768), (31, 512), (32, -1), (33, -1), (34, -1), (35, -1), (36, 131072), (37, -1), (38, -1), (39, 512), (40, 33554432), (41, 0), (42, 16384), (43, 16384), (44, -1), (45, -1), (46, -1), (47, 4194304), (48, 524288), (49, 16777216), (50, -1), (51, -1), (52, -1)]

Covered at level 10 : {41}

After reduction : 
 pending  : [5, 9, 30, 31, 39, 40, 42, 43, 47, 48, 49, 23, 25, 36, 2, 15, 13, 20, 19, 11, 17, 12]
 solution : [7, 3, 4, 27, 37]


Before reduction : 
 pending  : [5, 9, 30, 31, 39, 40, 42, 43, 47, 48, 49, 23, 25, 36, 2, 15, 13, 20, 19, 11, 17, 12]
 solution : [7, 3, 4, 27, 37]

Essensial at level 10 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 65536), (3, -1), (4, -1), (5, 4194304), (6, -1), (7, -1), (8, -1), (9, 32768), (10, -1), (11, 2097152), (12, 4194304), (13, 32768), (14, -1), (15, 67584), (16, -1), (17, 2097152), (18, -1), (19, 1048576), (20, 32768), (21, -1), (22, -1), (23, 4194304), (24, -1), (25, 131072), (26, -1), (27, -1), (28, -1), (29, -1), (30, 32768), (31, 512), (32, -1), (33, -1), (34, -1), (35, -1), (36, 131072), (37, -1), (38, -1), (39, 512), (40, 33554432), (41, 0), (42, 16384), (43, 16384), (44, -1), (45, -1), (46, -1), (47, 4194304), (48, 524288), (49, 16777216), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 65536), (3, -1), (4, -1), (5, 4194304), (6, -1), (7, -1), (8, -1), (9, 32768), (10, -1), (11, 2097152), (12, 4194304), (13, 32768), (14, -1), (15, 67584), (16, -1), (17, 2097152), (18, -1), (19, 1048576), (20, 32768), (21, -1), (22, -1), (23, 4194304), (24, -1), (25, 131072), (26, -1), (27, -1), (28, -1), (29, -1), (30, 32768), (31, 512), (32, -1), (33, -1), (34, -1), (35, -1), (36, 131072), (37, -1), (38, -1), (39, 512), (40, 33554432), (41, -1), (42, 16384), (43, 16384), (44, -1), (45, -1), (46, -1), (47, 4194304), (48, 524288), (49, 16777216), (50, -1), (51, -1), (52, -1)]

Covered at level 10 : set()

After reduction : 
 pending  : [5, 9, 30, 31, 39, 40, 42, 43, 47, 48, 49, 23, 25, 36, 2, 15, 13, 20, 19, 11, 17, 12]
 solution : [7, 3, 4, 27, 37]


Solution : [7, 3, 4, 27, 37] has cost 39.


Before backtrack at level 10
 pending : [5, 9, 30, 31, 39, 40, 42, 43, 47, 48, 49, 23, 25, 36, 2, 15, 13, 20, 19, 11, 17, 12]
 solution : [7, 3, 4, 27, 37]

After backtrack at level 10
 pending : [5, 9, 30, 31, 39, 40, 42, 43, 47, 48, 49, 23, 25, 36, 2, 15, 13, 20, 19, 11, 17, 12, 41]
 solution : [7, 3, 4, 27, 37]


Invert decision for 37 at level 9


New level: 10
 pending : [5, 9, 30, 31, 39, 40, 42, 43, 47, 48, 49, 23, 25, 36, 2, 15, 13, 20, 19, 11, 17, 12, 41]
 solution : [7, 3, 4, 27]


Before reduction : 
 pending  : [5, 9, 30, 31, 39, 40, 42, 43, 47, 48, 49, 23, 25, 36, 2, 15, 13, 20, 19, 11, 17, 12, 41]
 solution : [7, 3, 4, 27]

Essensial at level 10 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 65536), (3, -1), (4, -1), (5, 4194304), (6, -1), (7, -1), (8, -1), (9, 32768), (10, -1), (11, 2097152), (12, 4194304), (13, 32768), (14, -1), (15, 67584), (16, -1), (17, 2097152), (18, -1), (19, 1048576), (20, 32768), (21, -1), (22, -1), (23, 4194304), (24, -1), (25, 131072), (26, -1), (27, -1), (28, -1), (29, -1), (30, 32768), (31, 512), (32, -1), (33, -1), (34, -1), (35, -1), (36, 131072), (37, -1), (38, -1), (39, 512), (40, 33554432), (41, -1), (42, 16384), (43, 16384), (44, -1), (45, -1), (46, -1), (47, 4194304), (48, 524288), (49, 16777216), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 131072), (3, -1), (4, -1), (5, 16777216), (6, -1), (7, -1), (8, -1), (9, 131072), (10, -1), (11, 4194304), (12, 8388608), (13, 65536), (14, -1), (15, 139264), (16, -1), (17, 2097152), (18, -1), (19, 1048576), (20, 32768), (21, -1), (22, -1), (23, 16777216), (24, -1), (25, 524288), (26, -1), (27, -1), (28, -1), (29, -1), (30, 131072), (31, 2048), (32, -1), (33, -1), (34, -1), (35, -1), (36, 524288), (37, -1), (38, -1), (39, 2048), (40, 33554432), (41, 512), (42, 65536), (43, 65536), (44, -1), (45, -1), (46, -1), (47, 8388608), (48, 2097152), (49, 16777216), (50, -1), (51, -1), (52, -1)]

Covered at level 10 : set()

After reduction : 
 pending  : [5, 9, 30, 31, 39, 40, 42, 43, 47, 48, 49, 23, 25, 36, 2, 15, 13, 20, 19, 11, 17, 12, 41]
 solution : [7, 3, 4, 27]


Solution : [7, 3, 4, 27] has cost 21.


Decide in level 10 among pending : [5, 9, 30, 31, 39, 40, 42, 43, 47, 48, 49, 23, 25, 36, 2, 15, 13, 20, 19, 11, 17, 12, 41]

Coverage : [(0, -1), (1, -1), (2, 131072), (3, -1), (4, -1), (5, 16777216), (6, -1), (7, -1), (8, -1), (9, 131072), (10, -1), (11, 4194304), (12, 8388608), (13, 65536), (14, -1), (15, 139264), (16, -1), (17, 2097152), (18, -1), (19, 1048576), (20, 32768), (21, -1), (22, -1), (23, 16777216), (24, -1), (25, 524288), (26, -1), (27, -1), (28, -1), (29, -1), (30, 131072), (31, 2048), (32, -1), (33, -1), (34, -1), (35, -1), (36, 524288), (37, -1), (38, -1), (39, 2048), (40, 33554432), (41, 512), (42, 65536), (43, 65536), (44, -1), (45, -1), (46, -1), (47, 8388608), (48, 2097152), (49, 16777216), (50, -1), (51, -1), (52, -1)]

Decide 40 with phase True at level 10

After decision at level 10
 pending : [5, 9, 30, 31, 39, 42, 43, 47, 48, 49, 23, 25, 36, 2, 15, 13, 20, 19, 11, 17, 12, 41]
 solution : [7, 3, 4, 27, 40]


New level: 11
 pending : [5, 9, 30, 31, 39, 42, 43, 47, 48, 49, 23, 25, 36, 2, 15, 13, 20, 19, 11, 17, 12, 41]
 solution : [7, 3, 4, 27, 40]


Before reduction : 
 pending  : [5, 9, 30, 31, 39, 42, 43, 47, 48, 49, 23, 25, 36, 2, 15, 13, 20, 19, 11, 17, 12, 41]
 solution : [7, 3, 4, 27, 40]

Essensial at level 11 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 131072), (3, -1), (4, -1), (5, 16777216), (6, -1), (7, -1), (8, -1), (9, 131072), (10, -1), (11, 4194304), (12, 8388608), (13, 65536), (14, -1), (15, 139264), (16, -1), (17, 2097152), (18, -1), (19, 1048576), (20, 32768), (21, -1), (22, -1), (23, 16777216), (24, -1), (25, 524288), (26, -1), (27, -1), (28, -1), (29, -1), (30, 131072), (31, 2048), (32, -1), (33, -1), (34, -1), (35, -1), (36, 524288), (37, -1), (38, -1), (39, 2048), (40, 33554432), (41, 512), (42, 65536), (43, 65536), (44, -1), (45, -1), (46, -1), (47, 8388608), (48, 2097152), (49, 16777216), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 65536), (3, -1), (4, -1), (5, 16777216), (6, -1), (7, -1), (8, -1), (9, 0), (10, -1), (11, 4194304), (12, 8388608), (13, 65536), (14, -1), (15, 67584), (16, -1), (17, 2097152), (18, -1), (19, 1048576), (20, 32768), (21, -1), (22, -1), (23, 65536), (24, -1), (25, 524288), (26, -1), (27, -1), (28, -1), (29, -1), (30, 0), (31, 0), (32, -1), (33, -1), (34, -1), (35, -1), (36, 524288), (37, -1), (38, -1), (39, 0), (40, -1), (41, 512), (42, 0), (43, 0), (44, -1), (45, -1), (46, -1), (47, 0), (48, 0), (49, 0), (50, -1), (51, -1), (52, -1)]

Covered at level 11 : {39, 9, 42, 43, 47, 48, 49, 30, 31}

After reduction : 
 pending  : [5, 23, 25, 36, 2, 15, 13, 20, 19, 11, 17, 12, 41]
 solution : [7, 3, 4, 27, 40]


Before reduction : 
 pending  : [5, 23, 25, 36, 2, 15, 13, 20, 19, 11, 17, 12, 41]
 solution : [7, 3, 4, 27, 40]

Essensial at level 11 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 65536), (3, -1), (4, -1), (5, 16777216), (6, -1), (7, -1), (8, -1), (9, 0), (10, -1), (11, 4194304), (12, 8388608), (13, 65536), (14, -1), (15, 67584), (16, -1), (17, 2097152), (18, -1), (19, 1048576), (20, 32768), (21, -1), (22, -1), (23, 65536), (24, -1), (25, 524288), (26, -1), (27, -1), (28, -1), (29, -1), (30, 0), (31, 0), (32, -1), (33, -1), (34, -1), (35, -1), (36, 524288), (37, -1), (38, -1), (39, 0), (40, -1), (41, 512), (42, 0), (43, 0), (44, -1), (45, -1), (46, -1), (47, 0), (48, 0), (49, 0), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 65536), (3, -1), (4, -1), (5, 16777216), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, 4194304), (12, 8388608), (13, 65536), (14, -1), (15, 67584), (16, -1), (17, 2097152), (18, -1), (19, 1048576), (20, 32768), (21, -1), (22, -1), (23, 65536), (24, -1), (25, 524288), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, 524288), (37, -1), (38, -1), (39, -1), (40, -1), (41, 512), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 11 : set()

After reduction : 
 pending  : [5, 23, 25, 36, 2, 15, 13, 20, 19, 11, 17, 12, 41]
 solution : [7, 3, 4, 27, 40]


Solution : [7, 3, 4, 27, 40] has cost 39.


Before backtrack at level 11
 pending : [5, 23, 25, 36, 2, 15, 13, 20, 19, 11, 17, 12, 41]
 solution : [7, 3, 4, 27, 40]

After backtrack at level 11
 pending : [5, 23, 25, 36, 2, 15, 13, 20, 19, 11, 17, 12, 41, 9, 30, 31, 39, 42, 43, 47, 48, 49]
 solution : [7, 3, 4, 27, 40]


Invert decision for 40 at level 10


New level: 11
 pending : [5, 23, 25, 36, 2, 15, 13, 20, 19, 11, 17, 12, 41, 9, 30, 31, 39, 42, 43, 47, 48, 49]
 solution : [7, 3, 4, 27]


Before reduction : 
 pending  : [5, 23, 25, 36, 2, 15, 13, 20, 19, 11, 17, 12, 41, 9, 30, 31, 39, 42, 43, 47, 48, 49]
 solution : [7, 3, 4, 27]

Essensial at level 11 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 65536), (3, -1), (4, -1), (5, 16777216), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, 4194304), (12, 8388608), (13, 65536), (14, -1), (15, 67584), (16, -1), (17, 2097152), (18, -1), (19, 1048576), (20, 32768), (21, -1), (22, -1), (23, 65536), (24, -1), (25, 524288), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, 524288), (37, -1), (38, -1), (39, -1), (40, -1), (41, 512), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 131072), (3, -1), (4, -1), (5, 16777216), (6, -1), (7, -1), (8, -1), (9, 131072), (10, -1), (11, 4194304), (12, 8388608), (13, 65536), (14, -1), (15, 139264), (16, -1), (17, 2097152), (18, -1), (19, 1048576), (20, 32768), (21, -1), (22, -1), (23, 16777216), (24, -1), (25, 524288), (26, -1), (27, -1), (28, -1), (29, -1), (30, 131072), (31, 2048), (32, -1), (33, -1), (34, -1), (35, -1), (36, 524288), (37, -1), (38, -1), (39, 2048), (40, -1), (41, 512), (42, 65536), (43, 65536), (44, -1), (45, -1), (46, -1), (47, 8388608), (48, 2097152), (49, 16777216), (50, -1), (51, -1), (52, -1)]

Covered at level 11 : set()

After reduction : 
 pending  : [5, 23, 25, 36, 2, 15, 13, 20, 19, 11, 17, 12, 41, 9, 30, 31, 39, 42, 43, 47, 48, 49]
 solution : [7, 3, 4, 27]


Solution : [7, 3, 4, 27] has cost 21.


Decide in level 11 among pending : [5, 23, 25, 36, 2, 15, 13, 20, 19, 11, 17, 12, 41, 9, 30, 31, 39, 42, 43, 47, 48, 49]

Coverage : [(0, -1), (1, -1), (2, 131072), (3, -1), (4, -1), (5, 16777216), (6, -1), (7, -1), (8, -1), (9, 131072), (10, -1), (11, 4194304), (12, 8388608), (13, 65536), (14, -1), (15, 139264), (16, -1), (17, 2097152), (18, -1), (19, 1048576), (20, 32768), (21, -1), (22, -1), (23, 16777216), (24, -1), (25, 524288), (26, -1), (27, -1), (28, -1), (29, -1), (30, 131072), (31, 2048), (32, -1), (33, -1), (34, -1), (35, -1), (36, 524288), (37, -1), (38, -1), (39, 2048), (40, -1), (41, 512), (42, 65536), (43, 65536), (44, -1), (45, -1), (46, -1), (47, 8388608), (48, 2097152), (49, 16777216), (50, -1), (51, -1), (52, -1)]

Decide 5 with phase True at level 11

After decision at level 11
 pending : [23, 25, 36, 2, 15, 13, 20, 19, 11, 17, 12, 41, 9, 30, 31, 39, 42, 43, 47, 48, 49]
 solution : [7, 3, 4, 27, 5]


New level: 12
 pending : [23, 25, 36, 2, 15, 13, 20, 19, 11, 17, 12, 41, 9, 30, 31, 39, 42, 43, 47, 48, 49]
 solution : [7, 3, 4, 27, 5]


Before reduction : 
 pending  : [23, 25, 36, 2, 15, 13, 20, 19, 11, 17, 12, 41, 9, 30, 31, 39, 42, 43, 47, 48, 49]
 solution : [7, 3, 4, 27, 5]

Essensial at level 12 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 131072), (3, -1), (4, -1), (5, 16777216), (6, -1), (7, -1), (8, -1), (9, 131072), (10, -1), (11, 4194304), (12, 8388608), (13, 65536), (14, -1), (15, 139264), (16, -1), (17, 2097152), (18, -1), (19, 1048576), (20, 32768), (21, -1), (22, -1), (23, 16777216), (24, -1), (25, 524288), (26, -1), (27, -1), (28, -1), (29, -1), (30, 131072), (31, 2048), (32, -1), (33, -1), (34, -1), (35, -1), (36, 524288), (37, -1), (38, -1), (39, 2048), (40, -1), (41, 512), (42, 65536), (43, 65536), (44, -1), (45, -1), (46, -1), (47, 8388608), (48, 2097152), (49, 16777216), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 65536), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, 0), (10, -1), (11, 2097152), (12, 4194304), (13, 32768), (14, -1), (15, 67584), (16, -1), (17, 2097152), (18, -1), (19, 1048576), (20, 32768), (21, -1), (22, -1), (23, 0), (24, -1), (25, 524288), (26, -1), (27, -1), (28, -1), (29, -1), (30, 0), (31, 0), (32, -1), (33, -1), (34, -1), (35, -1), (36, 524288), (37, -1), (38, -1), (39, 0), (40, -1), (41, 512), (42, 0), (43, 0), (44, -1), (45, -1), (46, -1), (47, 0), (48, 0), (49, 0), (50, -1), (51, -1), (52, -1)]

Covered at level 12 : {39, 9, 42, 43, 47, 48, 49, 23, 30, 31}

After reduction : 
 pending  : [25, 36, 2, 15, 13, 20, 19, 11, 17, 12, 41]
 solution : [7, 3, 4, 27, 5]


Before reduction : 
 pending  : [25, 36, 2, 15, 13, 20, 19, 11, 17, 12, 41]
 solution : [7, 3, 4, 27, 5]

Essensial at level 12 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 65536), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, 0), (10, -1), (11, 2097152), (12, 4194304), (13, 32768), (14, -1), (15, 67584), (16, -1), (17, 2097152), (18, -1), (19, 1048576), (20, 32768), (21, -1), (22, -1), (23, 0), (24, -1), (25, 524288), (26, -1), (27, -1), (28, -1), (29, -1), (30, 0), (31, 0), (32, -1), (33, -1), (34, -1), (35, -1), (36, 524288), (37, -1), (38, -1), (39, 0), (40, -1), (41, 512), (42, 0), (43, 0), (44, -1), (45, -1), (46, -1), (47, 0), (48, 0), (49, 0), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 65536), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, 2097152), (12, 4194304), (13, 32768), (14, -1), (15, 67584), (16, -1), (17, 2097152), (18, -1), (19, 1048576), (20, 32768), (21, -1), (22, -1), (23, -1), (24, -1), (25, 524288), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, 524288), (37, -1), (38, -1), (39, -1), (40, -1), (41, 512), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 12 : set()

After reduction : 
 pending  : [25, 36, 2, 15, 13, 20, 19, 11, 17, 12, 41]
 solution : [7, 3, 4, 27, 5]


Solution : [7, 3, 4, 27, 5] has cost 25.


Before backtrack at level 12
 pending : [25, 36, 2, 15, 13, 20, 19, 11, 17, 12, 41]
 solution : [7, 3, 4, 27, 5]

After backtrack at level 12
 pending : [25, 36, 2, 15, 13, 20, 19, 11, 17, 12, 41, 23, 9, 30, 31, 39, 42, 43, 47, 48, 49]
 solution : [7, 3, 4, 27, 5]


Invert decision for 5 at level 11


New level: 12
 pending : [25, 36, 2, 15, 13, 20, 19, 11, 17, 12, 41, 23, 9, 30, 31, 39, 42, 43, 47, 48, 49]
 solution : [7, 3, 4, 27]


Before reduction : 
 pending  : [25, 36, 2, 15, 13, 20, 19, 11, 17, 12, 41, 23, 9, 30, 31, 39, 42, 43, 47, 48, 49]
 solution : [7, 3, 4, 27]

Essensial at level 12 : {23}

Before removed
 coverage : [(0, -1), (1, -1), (2, 65536), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, 2097152), (12, 4194304), (13, 32768), (14, -1), (15, 67584), (16, -1), (17, 2097152), (18, -1), (19, 1048576), (20, 32768), (21, -1), (22, -1), (23, -1), (24, -1), (25, 524288), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, 524288), (37, -1), (38, -1), (39, -1), (40, -1), (41, 512), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 65536), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, 0), (10, -1), (11, 2097152), (12, 4194304), (13, 32768), (14, -1), (15, 67584), (16, -1), (17, 2097152), (18, -1), (19, 1048576), (20, 32768), (21, -1), (22, -1), (23, -1), (24, -1), (25, 524288), (26, -1), (27, -1), (28, -1), (29, -1), (30, 0), (31, 0), (32, -1), (33, -1), (34, -1), (35, -1), (36, 524288), (37, -1), (38, -1), (39, 0), (40, -1), (41, 512), (42, 0), (43, 0), (44, -1), (45, -1), (46, -1), (47, 0), (48, 0), (49, 0), (50, -1), (51, -1), (52, -1)]

Covered at level 12 : {39, 9, 42, 43, 47, 48, 49, 30, 31}

After reduction : 
 pending  : [25, 36, 2, 15, 13, 20, 19, 11, 17, 12, 41]
 solution : [7, 3, 4, 27, 23]


Before reduction : 
 pending  : [25, 36, 2, 15, 13, 20, 19, 11, 17, 12, 41]
 solution : [7, 3, 4, 27, 23]

Essensial at level 12 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 65536), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, 0), (10, -1), (11, 2097152), (12, 4194304), (13, 32768), (14, -1), (15, 67584), (16, -1), (17, 2097152), (18, -1), (19, 1048576), (20, 32768), (21, -1), (22, -1), (23, -1), (24, -1), (25, 524288), (26, -1), (27, -1), (28, -1), (29, -1), (30, 0), (31, 0), (32, -1), (33, -1), (34, -1), (35, -1), (36, 524288), (37, -1), (38, -1), (39, 0), (40, -1), (41, 512), (42, 0), (43, 0), (44, -1), (45, -1), (46, -1), (47, 0), (48, 0), (49, 0), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 65536), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, 2097152), (12, 4194304), (13, 32768), (14, -1), (15, 67584), (16, -1), (17, 2097152), (18, -1), (19, 1048576), (20, 32768), (21, -1), (22, -1), (23, -1), (24, -1), (25, 524288), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, 524288), (37, -1), (38, -1), (39, -1), (40, -1), (41, 512), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 12 : set()

After reduction : 
 pending  : [25, 36, 2, 15, 13, 20, 19, 11, 17, 12, 41]
 solution : [7, 3, 4, 27, 23]


Solution : [7, 3, 4, 27, 23] has cost 28.


Before backtrack at level 12
 pending : [25, 36, 2, 15, 13, 20, 19, 11, 17, 12, 41]
 solution : [7, 3, 4, 27, 23]

After backtrack at level 12
 pending : [25, 36, 2, 15, 13, 20, 19, 11, 17, 12, 41, 23, 9, 30, 31, 39, 42, 43, 47, 48, 49]
 solution : [7, 3, 4, 27]


Before backtrack at level 11
 pending : [25, 36, 2, 15, 13, 20, 19, 11, 17, 12, 41, 23, 9, 30, 31, 39, 42, 43, 47, 48, 49]
 solution : [7, 3, 4, 27]

After backtrack at level 11
 pending : [25, 36, 2, 15, 13, 20, 19, 11, 17, 12, 41, 23, 9, 30, 31, 39, 42, 43, 47, 48, 49, 5]
 solution : [7, 3, 4, 27]


Before backtrack at level 10
 pending : [25, 36, 2, 15, 13, 20, 19, 11, 17, 12, 41, 23, 9, 30, 31, 39, 42, 43, 47, 48, 49, 5]
 solution : [7, 3, 4, 27]

After backtrack at level 10
 pending : [25, 36, 2, 15, 13, 20, 19, 11, 17, 12, 41, 23, 9, 30, 31, 39, 42, 43, 47, 48, 49, 5, 40]
 solution : [7, 3, 4, 27]


Before backtrack at level 9
 pending : [25, 36, 2, 15, 13, 20, 19, 11, 17, 12, 41, 23, 9, 30, 31, 39, 42, 43, 47, 48, 49, 5, 40]
 solution : [7, 3, 4, 27]

After backtrack at level 9
 pending : [25, 36, 2, 15, 13, 20, 19, 11, 17, 12, 41, 23, 9, 30, 31, 39, 42, 43, 47, 48, 49, 5, 40, 37]
 solution : [7, 3, 4, 27]


Before backtrack at level 8
 pending : [25, 36, 2, 15, 13, 20, 19, 11, 17, 12, 41, 23, 9, 30, 31, 39, 42, 43, 47, 48, 49, 5, 40, 37]
 solution : [7, 3, 4, 27]

After backtrack at level 8
 pending : [25, 36, 2, 15, 13, 20, 19, 11, 17, 12, 41, 23, 9, 30, 31, 39, 42, 43, 47, 48, 49, 5, 40, 37, 18]
 solution : [7, 3, 4, 27]


Before backtrack at level 7
 pending : [25, 36, 2, 15, 13, 20, 19, 11, 17, 12, 41, 23, 9, 30, 31, 39, 42, 43, 47, 48, 49, 5, 40, 37, 18]
 solution : [7, 3, 4, 27]

After backtrack at level 7
 pending : [25, 36, 2, 15, 13, 20, 19, 11, 17, 12, 41, 23, 9, 30, 31, 39, 42, 43, 47, 48, 49, 5, 40, 37, 18, 34, 35, 16]
 solution : [7, 3, 4, 27]


Invert decision for 27 at level 6


New level: 7
 pending : [25, 36, 2, 15, 13, 20, 19, 11, 17, 12, 41, 23, 9, 30, 31, 39, 42, 43, 47, 48, 49, 5, 40, 37, 18, 34, 35, 16]
 solution : [7, 3, 4]


Before reduction : 
 pending  : [25, 36, 2, 15, 13, 20, 19, 11, 17, 12, 41, 23, 9, 30, 31, 39, 42, 43, 47, 48, 49, 5, 40, 37, 18, 34, 35, 16]
 solution : [7, 3, 4]

Essensial at level 7 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 65536), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, 2097152), (12, 4194304), (13, 32768), (14, -1), (15, 67584), (16, -1), (17, 2097152), (18, -1), (19, 1048576), (20, 32768), (21, -1), (22, -1), (23, -1), (24, -1), (25, 524288), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, 524288), (37, -1), (38, -1), (39, -1), (40, -1), (41, 512), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 131072), (3, -1), (4, -1), (5, 67108864), (6, -1), (7, -1), (8, -1), (9, 524288), (10, -1), (11, 4194304), (12, 8388608), (13, 65536), (14, -1), (15, 139264), (16, 268435456), (17, 2097152), (18, 134217728), (19, 1048576), (20, 32768), (21, -1), (22, -1), (23, 67108864), (24, -1), (25, 524288), (26, -1), (27, -1), (28, -1), (29, -1), (30, 524288), (31, 8192), (32, -1), (33, -1), (34, 1048576), (35, 8192), (36, 524288), (37, 33554432), (38, -1), (39, 8192), (40, 67108864), (41, 134217728), (42, 262144), (43, 262144), (44, -1), (45, -1), (46, -1), (47, 33554432), (48, 8388608), (49, 33554432), (50, -1), (51, -1), (52, -1)]

Covered at level 7 : set()

After reduction : 
 pending  : [25, 36, 2, 15, 13, 20, 19, 11, 17, 12, 41, 23, 9, 30, 31, 39, 42, 43, 47, 48, 49, 5, 40, 37, 18, 34, 35, 16]
 solution : [7, 3, 4]


Solution : [7, 3, 4] has cost 14.


Decide in level 7 among pending : [25, 36, 2, 15, 13, 20, 19, 11, 17, 12, 41, 23, 9, 30, 31, 39, 42, 43, 47, 48, 49, 5, 40, 37, 18, 34, 35, 16]

Coverage : [(0, -1), (1, -1), (2, 131072), (3, -1), (4, -1), (5, 67108864), (6, -1), (7, -1), (8, -1), (9, 524288), (10, -1), (11, 4194304), (12, 8388608), (13, 65536), (14, -1), (15, 139264), (16, 268435456), (17, 2097152), (18, 134217728), (19, 1048576), (20, 32768), (21, -1), (22, -1), (23, 67108864), (24, -1), (25, 524288), (26, -1), (27, -1), (28, -1), (29, -1), (30, 524288), (31, 8192), (32, -1), (33, -1), (34, 1048576), (35, 8192), (36, 524288), (37, 33554432), (38, -1), (39, 8192), (40, 67108864), (41, 134217728), (42, 262144), (43, 262144), (44, -1), (45, -1), (46, -1), (47, 33554432), (48, 8388608), (49, 33554432), (50, -1), (51, -1), (52, -1)]

Decide 16 with phase True at level 7

After decision at level 7
 pending : [25, 36, 2, 15, 13, 20, 19, 11, 17, 12, 41, 23, 9, 30, 31, 39, 42, 43, 47, 48, 49, 5, 40, 37, 18, 34, 35]
 solution : [7, 3, 4, 16]


New level: 8
 pending : [25, 36, 2, 15, 13, 20, 19, 11, 17, 12, 41, 23, 9, 30, 31, 39, 42, 43, 47, 48, 49, 5, 40, 37, 18, 34, 35]
 solution : [7, 3, 4, 16]


Before reduction : 
 pending  : [25, 36, 2, 15, 13, 20, 19, 11, 17, 12, 41, 23, 9, 30, 31, 39, 42, 43, 47, 48, 49, 5, 40, 37, 18, 34, 35]
 solution : [7, 3, 4, 16]

Essensial at level 8 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 131072), (3, -1), (4, -1), (5, 67108864), (6, -1), (7, -1), (8, -1), (9, 524288), (10, -1), (11, 4194304), (12, 8388608), (13, 65536), (14, -1), (15, 139264), (16, 268435456), (17, 2097152), (18, 134217728), (19, 1048576), (20, 32768), (21, -1), (22, -1), (23, 67108864), (24, -1), (25, 524288), (26, -1), (27, -1), (28, -1), (29, -1), (30, 524288), (31, 8192), (32, -1), (33, -1), (34, 1048576), (35, 8192), (36, 524288), (37, 33554432), (38, -1), (39, 8192), (40, 67108864), (41, 134217728), (42, 262144), (43, 262144), (44, -1), (45, -1), (46, -1), (47, 33554432), (48, 8388608), (49, 33554432), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 0), (3, -1), (4, -1), (5, 67108864), (6, -1), (7, -1), (8, -1), (9, 131072), (10, -1), (11, 0), (12, 0), (13, 0), (14, -1), (15, 0), (16, -1), (17, 0), (18, 0), (19, 0), (20, 0), (21, -1), (22, -1), (23, 67108864), (24, -1), (25, 0), (26, -1), (27, -1), (28, -1), (29, -1), (30, 262144), (31, 4096), (32, -1), (33, -1), (34, 1048576), (35, 8192), (36, 0), (37, 1024), (38, -1), (39, 2048), (40, 33554432), (41, 2048), (42, 65536), (43, 65536), (44, -1), (45, -1), (46, -1), (47, 16777216), (48, 2097152), (49, 33554432), (50, -1), (51, -1), (52, -1)]

Covered at level 8 : {2, 36, 11, 12, 13, 15, 17, 18, 19, 20, 25}

After reduction : 
 pending  : [41, 23, 9, 30, 31, 39, 42, 43, 47, 48, 49, 5, 40, 37, 34, 35]
 solution : [7, 3, 4, 16]


Before reduction : 
 pending  : [41, 23, 9, 30, 31, 39, 42, 43, 47, 48, 49, 5, 40, 37, 34, 35]
 solution : [7, 3, 4, 16]

Essensial at level 8 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 0), (3, -1), (4, -1), (5, 67108864), (6, -1), (7, -1), (8, -1), (9, 131072), (10, -1), (11, 0), (12, 0), (13, 0), (14, -1), (15, 0), (16, -1), (17, 0), (18, 0), (19, 0), (20, 0), (21, -1), (22, -1), (23, 67108864), (24, -1), (25, 0), (26, -1), (27, -1), (28, -1), (29, -1), (30, 262144), (31, 4096), (32, -1), (33, -1), (34, 1048576), (35, 8192), (36, 0), (37, 1024), (38, -1), (39, 2048), (40, 33554432), (41, 2048), (42, 65536), (43, 65536), (44, -1), (45, -1), (46, -1), (47, 16777216), (48, 2097152), (49, 33554432), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 67108864), (6, -1), (7, -1), (8, -1), (9, 131072), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, 67108864), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, 262144), (31, 4096), (32, -1), (33, -1), (34, 1048576), (35, 8192), (36, -1), (37, 1024), (38, -1), (39, 2048), (40, 33554432), (41, 2048), (42, 65536), (43, 65536), (44, -1), (45, -1), (46, -1), (47, 16777216), (48, 2097152), (49, 33554432), (50, -1), (51, -1), (52, -1)]

Covered at level 8 : set()

After reduction : 
 pending  : [41, 23, 9, 30, 31, 39, 42, 43, 47, 48, 49, 5, 40, 37, 34, 35]
 solution : [7, 3, 4, 16]


Solution : [7, 3, 4, 16] has cost 21.


Decide in level 8 among pending : [41, 23, 9, 30, 31, 39, 42, 43, 47, 48, 49, 5, 40, 37, 34, 35]

Coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 67108864), (6, -1), (7, -1), (8, -1), (9, 131072), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, 67108864), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, 262144), (31, 4096), (32, -1), (33, -1), (34, 1048576), (35, 8192), (36, -1), (37, 1024), (38, -1), (39, 2048), (40, 33554432), (41, 2048), (42, 65536), (43, 65536), (44, -1), (45, -1), (46, -1), (47, 16777216), (48, 2097152), (49, 33554432), (50, -1), (51, -1), (52, -1)]

Decide 23 with phase True at level 8

After decision at level 8
 pending : [41, 9, 30, 31, 39, 42, 43, 47, 48, 49, 5, 40, 37, 34, 35]
 solution : [7, 3, 4, 16, 23]


New level: 9
 pending : [41, 9, 30, 31, 39, 42, 43, 47, 48, 49, 5, 40, 37, 34, 35]
 solution : [7, 3, 4, 16, 23]


Before reduction : 
 pending  : [41, 9, 30, 31, 39, 42, 43, 47, 48, 49, 5, 40, 37, 34, 35]
 solution : [7, 3, 4, 16, 23]

Essensial at level 9 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 67108864), (6, -1), (7, -1), (8, -1), (9, 131072), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, 67108864), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, 262144), (31, 4096), (32, -1), (33, -1), (34, 1048576), (35, 8192), (36, -1), (37, 1024), (38, -1), (39, 2048), (40, 33554432), (41, 2048), (42, 65536), (43, 65536), (44, -1), (45, -1), (46, -1), (47, 16777216), (48, 2097152), (49, 33554432), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 0), (6, -1), (7, -1), (8, -1), (9, 0), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, 0), (31, 0), (32, -1), (33, -1), (34, 0), (35, 0), (36, -1), (37, 0), (38, -1), (39, 0), (40, 0), (41, 0), (42, 0), (43, 0), (44, -1), (45, -1), (46, -1), (47, 0), (48, 0), (49, 0), (50, -1), (51, -1), (52, -1)]

Covered at level 9 : {34, 35, 5, 37, 39, 40, 41, 9, 42, 43, 47, 48, 49, 30, 31}

After reduction : 
 pending  : []
 solution : [7, 3, 4, 16, 23]


Before reduction : 
 pending  : []
 solution : [7, 3, 4, 16, 23]

Essensial at level 9 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 0), (6, -1), (7, -1), (8, -1), (9, 0), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, 0), (31, 0), (32, -1), (33, -1), (34, 0), (35, 0), (36, -1), (37, 0), (38, -1), (39, 0), (40, 0), (41, 0), (42, 0), (43, 0), (44, -1), (45, -1), (46, -1), (47, 0), (48, 0), (49, 0), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 9 : set()

After reduction : 
 pending  : []
 solution : [7, 3, 4, 16, 23]


Solution : [7, 3, 4, 16, 23] has cost 28.


Before backtrack at level 9
 pending : []
 solution : [7, 3, 4, 16, 23]

After backtrack at level 9
 pending : [41, 9, 30, 31, 39, 42, 43, 47, 48, 49, 5, 40, 37, 34, 35]
 solution : [7, 3, 4, 16, 23]


Invert decision for 23 at level 8


New level: 9
 pending : [41, 9, 30, 31, 39, 42, 43, 47, 48, 49, 5, 40, 37, 34, 35]
 solution : [7, 3, 4, 16]


Before reduction : 
 pending  : [41, 9, 30, 31, 39, 42, 43, 47, 48, 49, 5, 40, 37, 34, 35]
 solution : [7, 3, 4, 16]

Essensial at level 9 : {5}

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, 0), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, 0), (31, 0), (32, -1), (33, -1), (34, 0), (35, 0), (36, -1), (37, 0), (38, -1), (39, 0), (40, 0), (41, 0), (42, 0), (43, 0), (44, -1), (45, -1), (46, -1), (47, 0), (48, 0), (49, 0), (50, -1), (51, -1), (52, -1)]

Covered at level 9 : {34, 35, 37, 39, 40, 41, 9, 42, 43, 47, 48, 49, 30, 31}

After reduction : 
 pending  : []
 solution : [7, 3, 4, 16, 5]


Before reduction : 
 pending  : []
 solution : [7, 3, 4, 16, 5]

Essensial at level 9 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, 0), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, 0), (31, 0), (32, -1), (33, -1), (34, 0), (35, 0), (36, -1), (37, 0), (38, -1), (39, 0), (40, 0), (41, 0), (42, 0), (43, 0), (44, -1), (45, -1), (46, -1), (47, 0), (48, 0), (49, 0), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 9 : set()

After reduction : 
 pending  : []
 solution : [7, 3, 4, 16, 5]


Solution : [7, 3, 4, 16, 5] has cost 25.


Before backtrack at level 9
 pending : []
 solution : [7, 3, 4, 16, 5]

After backtrack at level 9
 pending : [5, 41, 9, 30, 31, 39, 42, 43, 47, 48, 49, 40, 37, 34, 35]
 solution : [7, 3, 4, 16]


Before backtrack at level 8
 pending : [5, 41, 9, 30, 31, 39, 42, 43, 47, 48, 49, 40, 37, 34, 35]
 solution : [7, 3, 4, 16]

After backtrack at level 8
 pending : [5, 41, 9, 30, 31, 39, 42, 43, 47, 48, 49, 40, 37, 34, 35, 25, 36, 2, 15, 13, 20, 19, 11, 17, 12, 18, 23]
 solution : [7, 3, 4, 16]


Invert decision for 16 at level 7


New level: 8
 pending : [5, 41, 9, 30, 31, 39, 42, 43, 47, 48, 49, 40, 37, 34, 35, 25, 36, 2, 15, 13, 20, 19, 11, 17, 12, 18, 23]
 solution : [7, 3, 4]


Before reduction : 
 pending  : [5, 41, 9, 30, 31, 39, 42, 43, 47, 48, 49, 40, 37, 34, 35, 25, 36, 2, 15, 13, 20, 19, 11, 17, 12, 18, 23]
 solution : [7, 3, 4]

Essensial at level 8 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 131072), (3, -1), (4, -1), (5, 67108864), (6, -1), (7, -1), (8, -1), (9, 524288), (10, -1), (11, 4194304), (12, 8388608), (13, 65536), (14, -1), (15, 139264), (16, -1), (17, 2097152), (18, 134217728), (19, 1048576), (20, 32768), (21, -1), (22, -1), (23, 67108864), (24, -1), (25, 524288), (26, -1), (27, -1), (28, -1), (29, -1), (30, 524288), (31, 8192), (32, -1), (33, -1), (34, 1048576), (35, 8192), (36, 524288), (37, 33554432), (38, -1), (39, 8192), (40, 67108864), (41, 134217728), (42, 262144), (43, 262144), (44, -1), (45, -1), (46, -1), (47, 33554432), (48, 8388608), (49, 33554432), (50, -1), (51, -1), (52, -1)]

Covered at level 8 : set()

After reduction : 
 pending  : [5, 41, 9, 30, 31, 39, 42, 43, 47, 48, 49, 40, 37, 34, 35, 25, 36, 2, 15, 13, 20, 19, 11, 17, 12, 18, 23]
 solution : [7, 3, 4]


Solution : [7, 3, 4] has cost 14.


Decide in level 8 among pending : [5, 41, 9, 30, 31, 39, 42, 43, 47, 48, 49, 40, 37, 34, 35, 25, 36, 2, 15, 13, 20, 19, 11, 17, 12, 18, 23]

Coverage : [(0, -1), (1, -1), (2, 131072), (3, -1), (4, -1), (5, 67108864), (6, -1), (7, -1), (8, -1), (9, 524288), (10, -1), (11, 4194304), (12, 8388608), (13, 65536), (14, -1), (15, 139264), (16, -1), (17, 2097152), (18, 134217728), (19, 1048576), (20, 32768), (21, -1), (22, -1), (23, 67108864), (24, -1), (25, 524288), (26, -1), (27, -1), (28, -1), (29, -1), (30, 524288), (31, 8192), (32, -1), (33, -1), (34, 1048576), (35, 8192), (36, 524288), (37, 33554432), (38, -1), (39, 8192), (40, 67108864), (41, 134217728), (42, 262144), (43, 262144), (44, -1), (45, -1), (46, -1), (47, 33554432), (48, 8388608), (49, 33554432), (50, -1), (51, -1), (52, -1)]

Decide 41 with phase True at level 8

After decision at level 8
 pending : [5, 9, 30, 31, 39, 42, 43, 47, 48, 49, 40, 37, 34, 35, 25, 36, 2, 15, 13, 20, 19, 11, 17, 12, 18, 23]
 solution : [7, 3, 4, 41]


New level: 9
 pending : [5, 9, 30, 31, 39, 42, 43, 47, 48, 49, 40, 37, 34, 35, 25, 36, 2, 15, 13, 20, 19, 11, 17, 12, 18, 23]
 solution : [7, 3, 4, 41]


Before reduction : 
 pending  : [5, 9, 30, 31, 39, 42, 43, 47, 48, 49, 40, 37, 34, 35, 25, 36, 2, 15, 13, 20, 19, 11, 17, 12, 18, 23]
 solution : [7, 3, 4, 41]

Essensial at level 9 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 131072), (3, -1), (4, -1), (5, 67108864), (6, -1), (7, -1), (8, -1), (9, 524288), (10, -1), (11, 4194304), (12, 8388608), (13, 65536), (14, -1), (15, 139264), (16, -1), (17, 2097152), (18, 134217728), (19, 1048576), (20, 32768), (21, -1), (22, -1), (23, 67108864), (24, -1), (25, 524288), (26, -1), (27, -1), (28, -1), (29, -1), (30, 524288), (31, 8192), (32, -1), (33, -1), (34, 1048576), (35, 8192), (36, 524288), (37, 33554432), (38, -1), (39, 8192), (40, 67108864), (41, 134217728), (42, 262144), (43, 262144), (44, -1), (45, -1), (46, -1), (47, 33554432), (48, 8388608), (49, 33554432), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 131072), (3, -1), (4, -1), (5, 67108864), (6, -1), (7, -1), (8, -1), (9, 524288), (10, -1), (11, 4194304), (12, 8388608), (13, 65536), (14, -1), (15, 139264), (16, -1), (17, 2097152), (18, 134217728), (19, 1048576), (20, 32768), (21, -1), (22, -1), (23, 67108864), (24, -1), (25, 524288), (26, -1), (27, -1), (28, -1), (29, -1), (30, 524288), (31, 8192), (32, -1), (33, -1), (34, 524288), (35, 4096), (36, 524288), (37, 16777216), (38, -1), (39, 8192), (40, 67108864), (41, -1), (42, 262144), (43, 262144), (44, -1), (45, -1), (46, -1), (47, 33554432), (48, 8388608), (49, 33554432), (50, -1), (51, -1), (52, -1)]

Covered at level 9 : set()

After reduction : 
 pending  : [5, 9, 30, 31, 39, 42, 43, 47, 48, 49, 40, 37, 34, 35, 25, 36, 2, 15, 13, 20, 19, 11, 17, 12, 18, 23]
 solution : [7, 3, 4, 41]


Solution : [7, 3, 4, 41] has cost 28.


Before backtrack at level 9
 pending : [5, 9, 30, 31, 39, 42, 43, 47, 48, 49, 40, 37, 34, 35, 25, 36, 2, 15, 13, 20, 19, 11, 17, 12, 18, 23]
 solution : [7, 3, 4, 41]

After backtrack at level 9
 pending : [5, 9, 30, 31, 39, 42, 43, 47, 48, 49, 40, 37, 34, 35, 25, 36, 2, 15, 13, 20, 19, 11, 17, 12, 18, 23]
 solution : [7, 3, 4, 41]


Invert decision for 41 at level 8


New level: 9
 pending : [5, 9, 30, 31, 39, 42, 43, 47, 48, 49, 40, 37, 34, 35, 25, 36, 2, 15, 13, 20, 19, 11, 17, 12, 18, 23]
 solution : [7, 3, 4]


Before reduction : 
 pending  : [5, 9, 30, 31, 39, 42, 43, 47, 48, 49, 40, 37, 34, 35, 25, 36, 2, 15, 13, 20, 19, 11, 17, 12, 18, 23]
 solution : [7, 3, 4]

Essensial at level 9 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 131072), (3, -1), (4, -1), (5, 67108864), (6, -1), (7, -1), (8, -1), (9, 524288), (10, -1), (11, 4194304), (12, 8388608), (13, 65536), (14, -1), (15, 139264), (16, -1), (17, 2097152), (18, 134217728), (19, 1048576), (20, 32768), (21, -1), (22, -1), (23, 67108864), (24, -1), (25, 524288), (26, -1), (27, -1), (28, -1), (29, -1), (30, 524288), (31, 8192), (32, -1), (33, -1), (34, 524288), (35, 4096), (36, 524288), (37, 16777216), (38, -1), (39, 8192), (40, 67108864), (41, -1), (42, 262144), (43, 262144), (44, -1), (45, -1), (46, -1), (47, 33554432), (48, 8388608), (49, 33554432), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 131072), (3, -1), (4, -1), (5, 67108864), (6, -1), (7, -1), (8, -1), (9, 524288), (10, -1), (11, 4194304), (12, 8388608), (13, 65536), (14, -1), (15, 139264), (16, -1), (17, 2097152), (18, 134217728), (19, 1048576), (20, 32768), (21, -1), (22, -1), (23, 67108864), (24, -1), (25, 524288), (26, -1), (27, -1), (28, -1), (29, -1), (30, 524288), (31, 8192), (32, -1), (33, -1), (34, 1048576), (35, 8192), (36, 524288), (37, 33554432), (38, -1), (39, 8192), (40, 67108864), (41, -1), (42, 262144), (43, 262144), (44, -1), (45, -1), (46, -1), (47, 33554432), (48, 8388608), (49, 33554432), (50, -1), (51, -1), (52, -1)]

Covered at level 9 : set()

After reduction : 
 pending  : [5, 9, 30, 31, 39, 42, 43, 47, 48, 49, 40, 37, 34, 35, 25, 36, 2, 15, 13, 20, 19, 11, 17, 12, 18, 23]
 solution : [7, 3, 4]


Solution : [7, 3, 4] has cost 14.


Decide in level 9 among pending : [5, 9, 30, 31, 39, 42, 43, 47, 48, 49, 40, 37, 34, 35, 25, 36, 2, 15, 13, 20, 19, 11, 17, 12, 18, 23]

Coverage : [(0, -1), (1, -1), (2, 131072), (3, -1), (4, -1), (5, 67108864), (6, -1), (7, -1), (8, -1), (9, 524288), (10, -1), (11, 4194304), (12, 8388608), (13, 65536), (14, -1), (15, 139264), (16, -1), (17, 2097152), (18, 134217728), (19, 1048576), (20, 32768), (21, -1), (22, -1), (23, 67108864), (24, -1), (25, 524288), (26, -1), (27, -1), (28, -1), (29, -1), (30, 524288), (31, 8192), (32, -1), (33, -1), (34, 1048576), (35, 8192), (36, 524288), (37, 33554432), (38, -1), (39, 8192), (40, 67108864), (41, -1), (42, 262144), (43, 262144), (44, -1), (45, -1), (46, -1), (47, 33554432), (48, 8388608), (49, 33554432), (50, -1), (51, -1), (52, -1)]

Decide 18 with phase True at level 9

After decision at level 9
 pending : [5, 9, 30, 31, 39, 42, 43, 47, 48, 49, 40, 37, 34, 35, 25, 36, 2, 15, 13, 20, 19, 11, 17, 12, 23]
 solution : [7, 3, 4, 18]


New level: 10
 pending : [5, 9, 30, 31, 39, 42, 43, 47, 48, 49, 40, 37, 34, 35, 25, 36, 2, 15, 13, 20, 19, 11, 17, 12, 23]
 solution : [7, 3, 4, 18]


Before reduction : 
 pending  : [5, 9, 30, 31, 39, 42, 43, 47, 48, 49, 40, 37, 34, 35, 25, 36, 2, 15, 13, 20, 19, 11, 17, 12, 23]
 solution : [7, 3, 4, 18]

Essensial at level 10 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 131072), (3, -1), (4, -1), (5, 67108864), (6, -1), (7, -1), (8, -1), (9, 524288), (10, -1), (11, 4194304), (12, 8388608), (13, 65536), (14, -1), (15, 139264), (16, -1), (17, 2097152), (18, 134217728), (19, 1048576), (20, 32768), (21, -1), (22, -1), (23, 67108864), (24, -1), (25, 524288), (26, -1), (27, -1), (28, -1), (29, -1), (30, 524288), (31, 8192), (32, -1), (33, -1), (34, 1048576), (35, 8192), (36, 524288), (37, 33554432), (38, -1), (39, 8192), (40, 67108864), (41, -1), (42, 262144), (43, 262144), (44, -1), (45, -1), (46, -1), (47, 33554432), (48, 8388608), (49, 33554432), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 0), (3, -1), (4, -1), (5, 67108864), (6, -1), (7, -1), (8, -1), (9, 131072), (10, -1), (11, 0), (12, 0), (13, 0), (14, -1), (15, 0), (16, -1), (17, 0), (18, -1), (19, 0), (20, 0), (21, -1), (22, -1), (23, 67108864), (24, -1), (25, 0), (26, -1), (27, -1), (28, -1), (29, -1), (30, 262144), (31, 4096), (32, -1), (33, -1), (34, 1048576), (35, 8192), (36, 0), (37, 1024), (38, -1), (39, 2048), (40, 33554432), (41, -1), (42, 131072), (43, 131072), (44, -1), (45, -1), (46, -1), (47, 33554432), (48, 4194304), (49, 33554432), (50, -1), (51, -1), (52, -1)]

Covered at level 10 : {2, 36, 11, 12, 13, 15, 17, 19, 20, 25}

After reduction : 
 pending  : [5, 9, 30, 31, 39, 42, 43, 47, 48, 49, 40, 37, 34, 35, 23]
 solution : [7, 3, 4, 18]


Before reduction : 
 pending  : [5, 9, 30, 31, 39, 42, 43, 47, 48, 49, 40, 37, 34, 35, 23]
 solution : [7, 3, 4, 18]

Essensial at level 10 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 0), (3, -1), (4, -1), (5, 67108864), (6, -1), (7, -1), (8, -1), (9, 131072), (10, -1), (11, 0), (12, 0), (13, 0), (14, -1), (15, 0), (16, -1), (17, 0), (18, -1), (19, 0), (20, 0), (21, -1), (22, -1), (23, 67108864), (24, -1), (25, 0), (26, -1), (27, -1), (28, -1), (29, -1), (30, 262144), (31, 4096), (32, -1), (33, -1), (34, 1048576), (35, 8192), (36, 0), (37, 1024), (38, -1), (39, 2048), (40, 33554432), (41, -1), (42, 131072), (43, 131072), (44, -1), (45, -1), (46, -1), (47, 33554432), (48, 4194304), (49, 33554432), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 67108864), (6, -1), (7, -1), (8, -1), (9, 131072), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, 67108864), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, 262144), (31, 4096), (32, -1), (33, -1), (34, 1048576), (35, 8192), (36, -1), (37, 1024), (38, -1), (39, 2048), (40, 33554432), (41, -1), (42, 131072), (43, 131072), (44, -1), (45, -1), (46, -1), (47, 33554432), (48, 4194304), (49, 33554432), (50, -1), (51, -1), (52, -1)]

Covered at level 10 : set()

After reduction : 
 pending  : [5, 9, 30, 31, 39, 42, 43, 47, 48, 49, 40, 37, 34, 35, 23]
 solution : [7, 3, 4, 18]


Solution : [7, 3, 4, 18] has cost 21.


Decide in level 10 among pending : [5, 9, 30, 31, 39, 42, 43, 47, 48, 49, 40, 37, 34, 35, 23]

Coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 67108864), (6, -1), (7, -1), (8, -1), (9, 131072), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, 67108864), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, 262144), (31, 4096), (32, -1), (33, -1), (34, 1048576), (35, 8192), (36, -1), (37, 1024), (38, -1), (39, 2048), (40, 33554432), (41, -1), (42, 131072), (43, 131072), (44, -1), (45, -1), (46, -1), (47, 33554432), (48, 4194304), (49, 33554432), (50, -1), (51, -1), (52, -1)]

Decide 5 with phase True at level 10

After decision at level 10
 pending : [9, 30, 31, 39, 42, 43, 47, 48, 49, 40, 37, 34, 35, 23]
 solution : [7, 3, 4, 18, 5]


New level: 11
 pending : [9, 30, 31, 39, 42, 43, 47, 48, 49, 40, 37, 34, 35, 23]
 solution : [7, 3, 4, 18, 5]


Before reduction : 
 pending  : [9, 30, 31, 39, 42, 43, 47, 48, 49, 40, 37, 34, 35, 23]
 solution : [7, 3, 4, 18, 5]

Essensial at level 11 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 67108864), (6, -1), (7, -1), (8, -1), (9, 131072), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, 67108864), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, 262144), (31, 4096), (32, -1), (33, -1), (34, 1048576), (35, 8192), (36, -1), (37, 1024), (38, -1), (39, 2048), (40, 33554432), (41, -1), (42, 131072), (43, 131072), (44, -1), (45, -1), (46, -1), (47, 33554432), (48, 4194304), (49, 33554432), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, 0), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, 0), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, 0), (31, 0), (32, -1), (33, -1), (34, 0), (35, 0), (36, -1), (37, 0), (38, -1), (39, 0), (40, 0), (41, -1), (42, 0), (43, 0), (44, -1), (45, -1), (46, -1), (47, 0), (48, 0), (49, 0), (50, -1), (51, -1), (52, -1)]

Covered at level 11 : {34, 35, 37, 39, 40, 9, 42, 43, 47, 48, 49, 23, 30, 31}

After reduction : 
 pending  : []
 solution : [7, 3, 4, 18, 5]


Before reduction : 
 pending  : []
 solution : [7, 3, 4, 18, 5]

Essensial at level 11 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, 0), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, 0), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, 0), (31, 0), (32, -1), (33, -1), (34, 0), (35, 0), (36, -1), (37, 0), (38, -1), (39, 0), (40, 0), (41, -1), (42, 0), (43, 0), (44, -1), (45, -1), (46, -1), (47, 0), (48, 0), (49, 0), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 11 : set()

After reduction : 
 pending  : []
 solution : [7, 3, 4, 18, 5]


Solution : [7, 3, 4, 18, 5] has cost 25.


Before backtrack at level 11
 pending : []
 solution : [7, 3, 4, 18, 5]

After backtrack at level 11
 pending : [9, 30, 31, 39, 42, 43, 47, 48, 49, 40, 37, 34, 35, 23]
 solution : [7, 3, 4, 18, 5]


Invert decision for 5 at level 10


New level: 11
 pending : [9, 30, 31, 39, 42, 43, 47, 48, 49, 40, 37, 34, 35, 23]
 solution : [7, 3, 4, 18]


Before reduction : 
 pending  : [9, 30, 31, 39, 42, 43, 47, 48, 49, 40, 37, 34, 35, 23]
 solution : [7, 3, 4, 18]

Essensial at level 11 : {23}

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, 0), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, 0), (31, 0), (32, -1), (33, -1), (34, 0), (35, 0), (36, -1), (37, 0), (38, -1), (39, 0), (40, 0), (41, -1), (42, 0), (43, 0), (44, -1), (45, -1), (46, -1), (47, 0), (48, 0), (49, 0), (50, -1), (51, -1), (52, -1)]

Covered at level 11 : {34, 35, 37, 39, 40, 9, 42, 43, 47, 48, 49, 30, 31}

After reduction : 
 pending  : []
 solution : [7, 3, 4, 18, 23]


Before reduction : 
 pending  : []
 solution : [7, 3, 4, 18, 23]

Essensial at level 11 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, 0), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, 0), (31, 0), (32, -1), (33, -1), (34, 0), (35, 0), (36, -1), (37, 0), (38, -1), (39, 0), (40, 0), (41, -1), (42, 0), (43, 0), (44, -1), (45, -1), (46, -1), (47, 0), (48, 0), (49, 0), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 11 : set()

After reduction : 
 pending  : []
 solution : [7, 3, 4, 18, 23]


Solution : [7, 3, 4, 18, 23] has cost 28.


Before backtrack at level 11
 pending : []
 solution : [7, 3, 4, 18, 23]

After backtrack at level 11
 pending : [23, 9, 30, 31, 39, 42, 43, 47, 48, 49, 40, 37, 34, 35]
 solution : [7, 3, 4, 18]


Before backtrack at level 10
 pending : [23, 9, 30, 31, 39, 42, 43, 47, 48, 49, 40, 37, 34, 35]
 solution : [7, 3, 4, 18]

After backtrack at level 10
 pending : [23, 9, 30, 31, 39, 42, 43, 47, 48, 49, 40, 37, 34, 35, 25, 36, 2, 15, 13, 20, 19, 11, 17, 12, 5]
 solution : [7, 3, 4, 18]


Invert decision for 18 at level 9


New level: 10
 pending : [23, 9, 30, 31, 39, 42, 43, 47, 48, 49, 40, 37, 34, 35, 25, 36, 2, 15, 13, 20, 19, 11, 17, 12, 5]
 solution : [7, 3, 4]


Before reduction : 
 pending  : [23, 9, 30, 31, 39, 42, 43, 47, 48, 49, 40, 37, 34, 35, 25, 36, 2, 15, 13, 20, 19, 11, 17, 12, 5]
 solution : [7, 3, 4]

Essensial at level 10 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 131072), (3, -1), (4, -1), (5, 67108864), (6, -1), (7, -1), (8, -1), (9, 524288), (10, -1), (11, 4194304), (12, 8388608), (13, 65536), (14, -1), (15, 139264), (16, -1), (17, 2097152), (18, -1), (19, 1048576), (20, 32768), (21, -1), (22, -1), (23, 67108864), (24, -1), (25, 524288), (26, -1), (27, -1), (28, -1), (29, -1), (30, 524288), (31, 8192), (32, -1), (33, -1), (34, 1048576), (35, 8192), (36, 524288), (37, 33554432), (38, -1), (39, 8192), (40, 67108864), (41, -1), (42, 262144), (43, 262144), (44, -1), (45, -1), (46, -1), (47, 33554432), (48, 8388608), (49, 33554432), (50, -1), (51, -1), (52, -1)]

Covered at level 10 : set()

After reduction : 
 pending  : [23, 9, 30, 31, 39, 42, 43, 47, 48, 49, 40, 37, 34, 35, 25, 36, 2, 15, 13, 20, 19, 11, 17, 12, 5]
 solution : [7, 3, 4]


Solution : [7, 3, 4] has cost 14.


Decide in level 10 among pending : [23, 9, 30, 31, 39, 42, 43, 47, 48, 49, 40, 37, 34, 35, 25, 36, 2, 15, 13, 20, 19, 11, 17, 12, 5]

Coverage : [(0, -1), (1, -1), (2, 131072), (3, -1), (4, -1), (5, 67108864), (6, -1), (7, -1), (8, -1), (9, 524288), (10, -1), (11, 4194304), (12, 8388608), (13, 65536), (14, -1), (15, 139264), (16, -1), (17, 2097152), (18, -1), (19, 1048576), (20, 32768), (21, -1), (22, -1), (23, 67108864), (24, -1), (25, 524288), (26, -1), (27, -1), (28, -1), (29, -1), (30, 524288), (31, 8192), (32, -1), (33, -1), (34, 1048576), (35, 8192), (36, 524288), (37, 33554432), (38, -1), (39, 8192), (40, 67108864), (41, -1), (42, 262144), (43, 262144), (44, -1), (45, -1), (46, -1), (47, 33554432), (48, 8388608), (49, 33554432), (50, -1), (51, -1), (52, -1)]

Decide 23 with phase True at level 10

After decision at level 10
 pending : [9, 30, 31, 39, 42, 43, 47, 48, 49, 40, 37, 34, 35, 25, 36, 2, 15, 13, 20, 19, 11, 17, 12, 5]
 solution : [7, 3, 4, 23]


New level: 11
 pending : [9, 30, 31, 39, 42, 43, 47, 48, 49, 40, 37, 34, 35, 25, 36, 2, 15, 13, 20, 19, 11, 17, 12, 5]
 solution : [7, 3, 4, 23]


Before reduction : 
 pending  : [9, 30, 31, 39, 42, 43, 47, 48, 49, 40, 37, 34, 35, 25, 36, 2, 15, 13, 20, 19, 11, 17, 12, 5]
 solution : [7, 3, 4, 23]

Essensial at level 11 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 131072), (3, -1), (4, -1), (5, 67108864), (6, -1), (7, -1), (8, -1), (9, 524288), (10, -1), (11, 4194304), (12, 8388608), (13, 65536), (14, -1), (15, 139264), (16, -1), (17, 2097152), (18, -1), (19, 1048576), (20, 32768), (21, -1), (22, -1), (23, 67108864), (24, -1), (25, 524288), (26, -1), (27, -1), (28, -1), (29, -1), (30, 524288), (31, 8192), (32, -1), (33, -1), (34, 1048576), (35, 8192), (36, 524288), (37, 33554432), (38, -1), (39, 8192), (40, 67108864), (41, -1), (42, 262144), (43, 262144), (44, -1), (45, -1), (46, -1), (47, 33554432), (48, 8388608), (49, 33554432), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 65536), (3, -1), (4, -1), (5, 0), (6, -1), (7, -1), (8, -1), (9, 0), (10, -1), (11, 2097152), (12, 4194304), (13, 32768), (14, -1), (15, 67584), (16, -1), (17, 2097152), (18, -1), (19, 1048576), (20, 32768), (21, -1), (22, -1), (23, -1), (24, -1), (25, 524288), (26, -1), (27, -1), (28, -1), (29, -1), (30, 0), (31, 0), (32, -1), (33, -1), (34, 0), (35, 0), (36, 524288), (37, 262144), (38, -1), (39, 0), (40, 0), (41, -1), (42, 0), (43, 0), (44, -1), (45, -1), (46, -1), (47, 0), (48, 0), (49, 0), (50, -1), (51, -1), (52, -1)]

Covered at level 11 : {34, 35, 5, 39, 40, 9, 42, 43, 47, 48, 49, 30, 31}

After reduction : 
 pending  : [37, 25, 36, 2, 15, 13, 20, 19, 11, 17, 12]
 solution : [7, 3, 4, 23]


Before reduction : 
 pending  : [37, 25, 36, 2, 15, 13, 20, 19, 11, 17, 12]
 solution : [7, 3, 4, 23]

Essensial at level 11 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 65536), (3, -1), (4, -1), (5, 0), (6, -1), (7, -1), (8, -1), (9, 0), (10, -1), (11, 2097152), (12, 4194304), (13, 32768), (14, -1), (15, 67584), (16, -1), (17, 2097152), (18, -1), (19, 1048576), (20, 32768), (21, -1), (22, -1), (23, -1), (24, -1), (25, 524288), (26, -1), (27, -1), (28, -1), (29, -1), (30, 0), (31, 0), (32, -1), (33, -1), (34, 0), (35, 0), (36, 524288), (37, 262144), (38, -1), (39, 0), (40, 0), (41, -1), (42, 0), (43, 0), (44, -1), (45, -1), (46, -1), (47, 0), (48, 0), (49, 0), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 65536), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, 2097152), (12, 4194304), (13, 32768), (14, -1), (15, 67584), (16, -1), (17, 2097152), (18, -1), (19, 1048576), (20, 32768), (21, -1), (22, -1), (23, -1), (24, -1), (25, 524288), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, 524288), (37, 262144), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 11 : set()

After reduction : 
 pending  : [37, 25, 36, 2, 15, 13, 20, 19, 11, 17, 12]
 solution : [7, 3, 4, 23]


Solution : [7, 3, 4, 23] has cost 21.


Decide in level 11 among pending : [37, 25, 36, 2, 15, 13, 20, 19, 11, 17, 12]

Coverage : [(0, -1), (1, -1), (2, 65536), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, 2097152), (12, 4194304), (13, 32768), (14, -1), (15, 67584), (16, -1), (17, 2097152), (18, -1), (19, 1048576), (20, 32768), (21, -1), (22, -1), (23, -1), (24, -1), (25, 524288), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, 524288), (37, 262144), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Decide 12 with phase True at level 11

After decision at level 11
 pending : [37, 25, 36, 2, 15, 13, 20, 19, 11, 17]
 solution : [7, 3, 4, 23, 12]


New level: 12
 pending : [37, 25, 36, 2, 15, 13, 20, 19, 11, 17]
 solution : [7, 3, 4, 23, 12]


Before reduction : 
 pending  : [37, 25, 36, 2, 15, 13, 20, 19, 11, 17]
 solution : [7, 3, 4, 23, 12]

Essensial at level 12 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 65536), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, 2097152), (12, 4194304), (13, 32768), (14, -1), (15, 67584), (16, -1), (17, 2097152), (18, -1), (19, 1048576), (20, 32768), (21, -1), (22, -1), (23, -1), (24, -1), (25, 524288), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, 524288), (37, 262144), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 0), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, 0), (12, -1), (13, 0), (14, -1), (15, 0), (16, -1), (17, 32768), (18, -1), (19, 8192), (20, 8192), (21, -1), (22, -1), (23, -1), (24, -1), (25, 2048), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, 2048), (37, 1024), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 12 : {2, 11, 13, 15}

After reduction : 
 pending  : [37, 25, 36, 20, 19, 17]
 solution : [7, 3, 4, 23, 12]


Before reduction : 
 pending  : [37, 25, 36, 20, 19, 17]
 solution : [7, 3, 4, 23, 12]

Essensial at level 12 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 0), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, 0), (12, -1), (13, 0), (14, -1), (15, 0), (16, -1), (17, 32768), (18, -1), (19, 8192), (20, 8192), (21, -1), (22, -1), (23, -1), (24, -1), (25, 2048), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, 2048), (37, 1024), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, 32768), (18, -1), (19, 8192), (20, 8192), (21, -1), (22, -1), (23, -1), (24, -1), (25, 2048), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, 2048), (37, 1024), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 12 : set()

After reduction : 
 pending  : [37, 25, 36, 20, 19, 17]
 solution : [7, 3, 4, 23, 12]


Solution : [7, 3, 4, 23, 12] has cost 30.


Before backtrack at level 12
 pending : [37, 25, 36, 20, 19, 17]
 solution : [7, 3, 4, 23, 12]

After backtrack at level 12
 pending : [37, 25, 36, 20, 19, 17, 2, 15, 13, 11]
 solution : [7, 3, 4, 23, 12]


Invert decision for 12 at level 11


New level: 12
 pending : [37, 25, 36, 20, 19, 17, 2, 15, 13, 11]
 solution : [7, 3, 4, 23]


Before reduction : 
 pending  : [37, 25, 36, 20, 19, 17, 2, 15, 13, 11]
 solution : [7, 3, 4, 23]

Essensial at level 12 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, 32768), (18, -1), (19, 8192), (20, 8192), (21, -1), (22, -1), (23, -1), (24, -1), (25, 2048), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, 2048), (37, 1024), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 65536), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, 2097152), (12, -1), (13, 32768), (14, -1), (15, 67584), (16, -1), (17, 2097152), (18, -1), (19, 1048576), (20, 32768), (21, -1), (22, -1), (23, -1), (24, -1), (25, 524288), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, 524288), (37, 262144), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 12 : set()

After reduction : 
 pending  : [37, 25, 36, 20, 19, 17, 2, 15, 13, 11]
 solution : [7, 3, 4, 23]


Solution : [7, 3, 4, 23] has cost 21.


Decide in level 12 among pending : [37, 25, 36, 20, 19, 17, 2, 15, 13, 11]

Coverage : [(0, -1), (1, -1), (2, 65536), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, 2097152), (12, -1), (13, 32768), (14, -1), (15, 67584), (16, -1), (17, 2097152), (18, -1), (19, 1048576), (20, 32768), (21, -1), (22, -1), (23, -1), (24, -1), (25, 524288), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, 524288), (37, 262144), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Decide 17 with phase True at level 12

After decision at level 12
 pending : [37, 25, 36, 20, 19, 2, 15, 13, 11]
 solution : [7, 3, 4, 23, 17]


New level: 13
 pending : [37, 25, 36, 20, 19, 2, 15, 13, 11]
 solution : [7, 3, 4, 23, 17]


Before reduction : 
 pending  : [37, 25, 36, 20, 19, 2, 15, 13, 11]
 solution : [7, 3, 4, 23, 17]

Essensial at level 13 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 65536), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, 2097152), (12, -1), (13, 32768), (14, -1), (15, 67584), (16, -1), (17, 2097152), (18, -1), (19, 1048576), (20, 32768), (21, -1), (22, -1), (23, -1), (24, -1), (25, 524288), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, 524288), (37, 262144), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 32768), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, 524288), (12, -1), (13, 0), (14, -1), (15, 33280), (16, -1), (17, -1), (18, -1), (19, 0), (20, 0), (21, -1), (22, -1), (23, -1), (24, -1), (25, 131072), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, 131072), (37, 512), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 13 : {19, 20, 13}

After reduction : 
 pending  : [37, 25, 36, 2, 15, 11]
 solution : [7, 3, 4, 23, 17]


Before reduction : 
 pending  : [37, 25, 36, 2, 15, 11]
 solution : [7, 3, 4, 23, 17]

Essensial at level 13 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 32768), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, 524288), (12, -1), (13, 0), (14, -1), (15, 33280), (16, -1), (17, -1), (18, -1), (19, 0), (20, 0), (21, -1), (22, -1), (23, -1), (24, -1), (25, 131072), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, 131072), (37, 512), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 32768), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, 524288), (12, -1), (13, -1), (14, -1), (15, 33280), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, 131072), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, 131072), (37, 512), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 13 : set()

After reduction : 
 pending  : [37, 25, 36, 2, 15, 11]
 solution : [7, 3, 4, 23, 17]


Solution : [7, 3, 4, 23, 17] has cost 28.


Before backtrack at level 13
 pending : [37, 25, 36, 2, 15, 11]
 solution : [7, 3, 4, 23, 17]

After backtrack at level 13
 pending : [37, 25, 36, 2, 15, 11, 20, 19, 13]
 solution : [7, 3, 4, 23, 17]


Invert decision for 17 at level 12


New level: 13
 pending : [37, 25, 36, 2, 15, 11, 20, 19, 13]
 solution : [7, 3, 4, 23]


Before reduction : 
 pending  : [37, 25, 36, 2, 15, 11, 20, 19, 13]
 solution : [7, 3, 4, 23]

Essensial at level 13 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 32768), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, 524288), (12, -1), (13, -1), (14, -1), (15, 33280), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, 131072), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, 131072), (37, 512), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 65536), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, 2097152), (12, -1), (13, 32768), (14, -1), (15, 67584), (16, -1), (17, -1), (18, -1), (19, 1048576), (20, 32768), (21, -1), (22, -1), (23, -1), (24, -1), (25, 524288), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, 524288), (37, 262144), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 13 : set()

After reduction : 
 pending  : [37, 25, 36, 2, 15, 11, 20, 19, 13]
 solution : [7, 3, 4, 23]


Solution : [7, 3, 4, 23] has cost 21.


Decide in level 13 among pending : [37, 25, 36, 2, 15, 11, 20, 19, 13]

Coverage : [(0, -1), (1, -1), (2, 65536), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, 2097152), (12, -1), (13, 32768), (14, -1), (15, 67584), (16, -1), (17, -1), (18, -1), (19, 1048576), (20, 32768), (21, -1), (22, -1), (23, -1), (24, -1), (25, 524288), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, 524288), (37, 262144), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Decide 11 with phase True at level 13

After decision at level 13
 pending : [37, 25, 36, 2, 15, 20, 19, 13]
 solution : [7, 3, 4, 23, 11]


New level: 14
 pending : [37, 25, 36, 2, 15, 20, 19, 13]
 solution : [7, 3, 4, 23, 11]


Before reduction : 
 pending  : [37, 25, 36, 2, 15, 20, 19, 13]
 solution : [7, 3, 4, 23, 11]

Essensial at level 14 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 65536), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, 2097152), (12, -1), (13, 32768), (14, -1), (15, 67584), (16, -1), (17, -1), (18, -1), (19, 1048576), (20, 32768), (21, -1), (22, -1), (23, -1), (24, -1), (25, 524288), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, 524288), (37, 262144), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 0), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, 0), (14, -1), (15, 0), (16, -1), (17, -1), (18, -1), (19, 8192), (20, 8192), (21, -1), (22, -1), (23, -1), (24, -1), (25, 2048), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, 2048), (37, 1024), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 14 : {2, 13, 15}

After reduction : 
 pending  : [37, 25, 36, 20, 19]
 solution : [7, 3, 4, 23, 11]


Before reduction : 
 pending  : [37, 25, 36, 20, 19]
 solution : [7, 3, 4, 23, 11]

Essensial at level 14 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 0), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, 0), (14, -1), (15, 0), (16, -1), (17, -1), (18, -1), (19, 8192), (20, 8192), (21, -1), (22, -1), (23, -1), (24, -1), (25, 2048), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, 2048), (37, 1024), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, 8192), (20, 8192), (21, -1), (22, -1), (23, -1), (24, -1), (25, 2048), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, 2048), (37, 1024), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 14 : set()

After reduction : 
 pending  : [37, 25, 36, 20, 19]
 solution : [7, 3, 4, 23, 11]


Solution : [7, 3, 4, 23, 11] has cost 30.


Before backtrack at level 14
 pending : [37, 25, 36, 20, 19]
 solution : [7, 3, 4, 23, 11]

After backtrack at level 14
 pending : [37, 25, 36, 20, 19, 2, 15, 13]
 solution : [7, 3, 4, 23, 11]


Invert decision for 11 at level 13


New level: 14
 pending : [37, 25, 36, 20, 19, 2, 15, 13]
 solution : [7, 3, 4, 23]


Before reduction : 
 pending  : [37, 25, 36, 20, 19, 2, 15, 13]
 solution : [7, 3, 4, 23]

Essensial at level 14 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, 8192), (20, 8192), (21, -1), (22, -1), (23, -1), (24, -1), (25, 2048), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, 2048), (37, 1024), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 65536), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, 32768), (14, -1), (15, 67584), (16, -1), (17, -1), (18, -1), (19, 1048576), (20, 32768), (21, -1), (22, -1), (23, -1), (24, -1), (25, 524288), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, 524288), (37, 262144), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 14 : set()

After reduction : 
 pending  : [37, 25, 36, 20, 19, 2, 15, 13]
 solution : [7, 3, 4, 23]


Solution : [7, 3, 4, 23] has cost 21.


Decide in level 14 among pending : [37, 25, 36, 20, 19, 2, 15, 13]

Coverage : [(0, -1), (1, -1), (2, 65536), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, 32768), (14, -1), (15, 67584), (16, -1), (17, -1), (18, -1), (19, 1048576), (20, 32768), (21, -1), (22, -1), (23, -1), (24, -1), (25, 524288), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, 524288), (37, 262144), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Decide 19 with phase True at level 14

After decision at level 14
 pending : [37, 25, 36, 20, 2, 15, 13]
 solution : [7, 3, 4, 23, 19]


New level: 15
 pending : [37, 25, 36, 20, 2, 15, 13]
 solution : [7, 3, 4, 23, 19]


Before reduction : 
 pending  : [37, 25, 36, 20, 2, 15, 13]
 solution : [7, 3, 4, 23, 19]

Essensial at level 15 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 65536), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, 32768), (14, -1), (15, 67584), (16, -1), (17, -1), (18, -1), (19, 1048576), (20, 32768), (21, -1), (22, -1), (23, -1), (24, -1), (25, 524288), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, 524288), (37, 262144), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 32768), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, 0), (14, -1), (15, 33280), (16, -1), (17, -1), (18, -1), (19, -1), (20, 0), (21, -1), (22, -1), (23, -1), (24, -1), (25, 131072), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, 131072), (37, 512), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 15 : {20, 13}

After reduction : 
 pending  : [37, 25, 36, 2, 15]
 solution : [7, 3, 4, 23, 19]


Before reduction : 
 pending  : [37, 25, 36, 2, 15]
 solution : [7, 3, 4, 23, 19]

Essensial at level 15 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 32768), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, 0), (14, -1), (15, 33280), (16, -1), (17, -1), (18, -1), (19, -1), (20, 0), (21, -1), (22, -1), (23, -1), (24, -1), (25, 131072), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, 131072), (37, 512), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 32768), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, 33280), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, 131072), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, 131072), (37, 512), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 15 : set()

After reduction : 
 pending  : [37, 25, 36, 2, 15]
 solution : [7, 3, 4, 23, 19]


Solution : [7, 3, 4, 23, 19] has cost 28.


Before backtrack at level 15
 pending : [37, 25, 36, 2, 15]
 solution : [7, 3, 4, 23, 19]

After backtrack at level 15
 pending : [37, 25, 36, 2, 15, 20, 13]
 solution : [7, 3, 4, 23, 19]


Invert decision for 19 at level 14


New level: 15
 pending : [37, 25, 36, 2, 15, 20, 13]
 solution : [7, 3, 4, 23]


Before reduction : 
 pending  : [37, 25, 36, 2, 15, 20, 13]
 solution : [7, 3, 4, 23]

Essensial at level 15 : {20}

Before removed
 coverage : [(0, -1), (1, -1), (2, 32768), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, 33280), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, 131072), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, 131072), (37, 512), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 65536), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, 16384), (14, -1), (15, 67584), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, 524288), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, 524288), (37, 262144), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 15 : set()

After reduction : 
 pending  : [37, 25, 36, 2, 15, 13]
 solution : [7, 3, 4, 23, 20]


Before reduction : 
 pending  : [37, 25, 36, 2, 15, 13]
 solution : [7, 3, 4, 23, 20]

Essensial at level 15 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 65536), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, 16384), (14, -1), (15, 67584), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, 524288), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, 524288), (37, 262144), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 65536), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, 16384), (14, -1), (15, 67584), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, 524288), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, 524288), (37, 262144), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 15 : set()

After reduction : 
 pending  : [37, 25, 36, 2, 15, 13]
 solution : [7, 3, 4, 23, 20]


Solution : [7, 3, 4, 23, 20] has cost 28.


Before backtrack at level 15
 pending : [37, 25, 36, 2, 15, 13]
 solution : [7, 3, 4, 23, 20]

After backtrack at level 15
 pending : [37, 25, 36, 2, 15, 13, 20]
 solution : [7, 3, 4, 23]


Before backtrack at level 14
 pending : [37, 25, 36, 2, 15, 13, 20]
 solution : [7, 3, 4, 23]

After backtrack at level 14
 pending : [37, 25, 36, 2, 15, 13, 20, 19]
 solution : [7, 3, 4, 23]


Before backtrack at level 13
 pending : [37, 25, 36, 2, 15, 13, 20, 19]
 solution : [7, 3, 4, 23]

After backtrack at level 13
 pending : [37, 25, 36, 2, 15, 13, 20, 19, 11]
 solution : [7, 3, 4, 23]


Before backtrack at level 12
 pending : [37, 25, 36, 2, 15, 13, 20, 19, 11]
 solution : [7, 3, 4, 23]

After backtrack at level 12
 pending : [37, 25, 36, 2, 15, 13, 20, 19, 11, 17]
 solution : [7, 3, 4, 23]


Before backtrack at level 11
 pending : [37, 25, 36, 2, 15, 13, 20, 19, 11, 17]
 solution : [7, 3, 4, 23]

After backtrack at level 11
 pending : [37, 25, 36, 2, 15, 13, 20, 19, 11, 17, 9, 30, 31, 39, 42, 43, 47, 48, 49, 40, 34, 35, 5, 12]
 solution : [7, 3, 4, 23]


Invert decision for 23 at level 10


New level: 11
 pending : [37, 25, 36, 2, 15, 13, 20, 19, 11, 17, 9, 30, 31, 39, 42, 43, 47, 48, 49, 40, 34, 35, 5, 12]
 solution : [7, 3, 4]


Before reduction : 
 pending  : [37, 25, 36, 2, 15, 13, 20, 19, 11, 17, 9, 30, 31, 39, 42, 43, 47, 48, 49, 40, 34, 35, 5, 12]
 solution : [7, 3, 4]

Essensial at level 11 : {5}

Before removed
 coverage : [(0, -1), (1, -1), (2, 65536), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, 16384), (14, -1), (15, 67584), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, 524288), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, 524288), (37, 262144), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 65536), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, 0), (10, -1), (11, 2097152), (12, 4194304), (13, 32768), (14, -1), (15, 67584), (16, -1), (17, 2097152), (18, -1), (19, 1048576), (20, 32768), (21, -1), (22, -1), (23, -1), (24, -1), (25, 524288), (26, -1), (27, -1), (28, -1), (29, -1), (30, 0), (31, 0), (32, -1), (33, -1), (34, 0), (35, 0), (36, 524288), (37, 32768), (38, -1), (39, 0), (40, 0), (41, -1), (42, 0), (43, 0), (44, -1), (45, -1), (46, -1), (47, 0), (48, 0), (49, 0), (50, -1), (51, -1), (52, -1)]

Covered at level 11 : {34, 35, 39, 40, 9, 42, 43, 47, 48, 49, 30, 31}

After reduction : 
 pending  : [37, 25, 36, 2, 15, 13, 20, 19, 11, 17, 12]
 solution : [7, 3, 4, 5]


Before reduction : 
 pending  : [37, 25, 36, 2, 15, 13, 20, 19, 11, 17, 12]
 solution : [7, 3, 4, 5]

Essensial at level 11 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 65536), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, 0), (10, -1), (11, 2097152), (12, 4194304), (13, 32768), (14, -1), (15, 67584), (16, -1), (17, 2097152), (18, -1), (19, 1048576), (20, 32768), (21, -1), (22, -1), (23, -1), (24, -1), (25, 524288), (26, -1), (27, -1), (28, -1), (29, -1), (30, 0), (31, 0), (32, -1), (33, -1), (34, 0), (35, 0), (36, 524288), (37, 32768), (38, -1), (39, 0), (40, 0), (41, -1), (42, 0), (43, 0), (44, -1), (45, -1), (46, -1), (47, 0), (48, 0), (49, 0), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 65536), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, 2097152), (12, 4194304), (13, 32768), (14, -1), (15, 67584), (16, -1), (17, 2097152), (18, -1), (19, 1048576), (20, 32768), (21, -1), (22, -1), (23, -1), (24, -1), (25, 524288), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, 524288), (37, 32768), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 11 : set()

After reduction : 
 pending  : [37, 25, 36, 2, 15, 13, 20, 19, 11, 17, 12]
 solution : [7, 3, 4, 5]


Solution : [7, 3, 4, 5] has cost 18.


Decide in level 11 among pending : [37, 25, 36, 2, 15, 13, 20, 19, 11, 17, 12]

Coverage : [(0, -1), (1, -1), (2, 65536), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, 2097152), (12, 4194304), (13, 32768), (14, -1), (15, 67584), (16, -1), (17, 2097152), (18, -1), (19, 1048576), (20, 32768), (21, -1), (22, -1), (23, -1), (24, -1), (25, 524288), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, 524288), (37, 32768), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Decide 12 with phase True at level 11

After decision at level 11
 pending : [37, 25, 36, 2, 15, 13, 20, 19, 11, 17]
 solution : [7, 3, 4, 5, 12]


New level: 12
 pending : [37, 25, 36, 2, 15, 13, 20, 19, 11, 17]
 solution : [7, 3, 4, 5, 12]


Before reduction : 
 pending  : [37, 25, 36, 2, 15, 13, 20, 19, 11, 17]
 solution : [7, 3, 4, 5, 12]

Essensial at level 12 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 65536), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, 2097152), (12, 4194304), (13, 32768), (14, -1), (15, 67584), (16, -1), (17, 2097152), (18, -1), (19, 1048576), (20, 32768), (21, -1), (22, -1), (23, -1), (24, -1), (25, 524288), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, 524288), (37, 32768), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 0), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, 0), (12, -1), (13, 0), (14, -1), (15, 0), (16, -1), (17, 32768), (18, -1), (19, 8192), (20, 8192), (21, -1), (22, -1), (23, -1), (24, -1), (25, 2048), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, 2048), (37, 1024), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 12 : {2, 11, 13, 15}

After reduction : 
 pending  : [37, 25, 36, 20, 19, 17]
 solution : [7, 3, 4, 5, 12]


Before reduction : 
 pending  : [37, 25, 36, 20, 19, 17]
 solution : [7, 3, 4, 5, 12]

Essensial at level 12 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 0), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, 0), (12, -1), (13, 0), (14, -1), (15, 0), (16, -1), (17, 32768), (18, -1), (19, 8192), (20, 8192), (21, -1), (22, -1), (23, -1), (24, -1), (25, 2048), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, 2048), (37, 1024), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, 32768), (18, -1), (19, 8192), (20, 8192), (21, -1), (22, -1), (23, -1), (24, -1), (25, 2048), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, 2048), (37, 1024), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 12 : set()

After reduction : 
 pending  : [37, 25, 36, 20, 19, 17]
 solution : [7, 3, 4, 5, 12]


Solution : [7, 3, 4, 5, 12] has cost 27.


Before backtrack at level 12
 pending : [37, 25, 36, 20, 19, 17]
 solution : [7, 3, 4, 5, 12]

After backtrack at level 12
 pending : [37, 25, 36, 20, 19, 17, 2, 15, 13, 11]
 solution : [7, 3, 4, 5, 12]


Invert decision for 12 at level 11


New level: 12
 pending : [37, 25, 36, 20, 19, 17, 2, 15, 13, 11]
 solution : [7, 3, 4, 5]


Before reduction : 
 pending  : [37, 25, 36, 20, 19, 17, 2, 15, 13, 11]
 solution : [7, 3, 4, 5]

Essensial at level 12 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, 32768), (18, -1), (19, 8192), (20, 8192), (21, -1), (22, -1), (23, -1), (24, -1), (25, 2048), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, 2048), (37, 1024), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 65536), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, 2097152), (12, -1), (13, 32768), (14, -1), (15, 67584), (16, -1), (17, 2097152), (18, -1), (19, 1048576), (20, 32768), (21, -1), (22, -1), (23, -1), (24, -1), (25, 524288), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, 524288), (37, 32768), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 12 : set()

After reduction : 
 pending  : [37, 25, 36, 20, 19, 17, 2, 15, 13, 11]
 solution : [7, 3, 4, 5]


Solution : [7, 3, 4, 5] has cost 18.


Decide in level 12 among pending : [37, 25, 36, 20, 19, 17, 2, 15, 13, 11]

Coverage : [(0, -1), (1, -1), (2, 65536), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, 2097152), (12, -1), (13, 32768), (14, -1), (15, 67584), (16, -1), (17, 2097152), (18, -1), (19, 1048576), (20, 32768), (21, -1), (22, -1), (23, -1), (24, -1), (25, 524288), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, 524288), (37, 32768), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Decide 17 with phase True at level 12

After decision at level 12
 pending : [37, 25, 36, 20, 19, 2, 15, 13, 11]
 solution : [7, 3, 4, 5, 17]


New level: 13
 pending : [37, 25, 36, 20, 19, 2, 15, 13, 11]
 solution : [7, 3, 4, 5, 17]


Before reduction : 
 pending  : [37, 25, 36, 20, 19, 2, 15, 13, 11]
 solution : [7, 3, 4, 5, 17]

Essensial at level 13 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 65536), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, 2097152), (12, -1), (13, 32768), (14, -1), (15, 67584), (16, -1), (17, 2097152), (18, -1), (19, 1048576), (20, 32768), (21, -1), (22, -1), (23, -1), (24, -1), (25, 524288), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, 524288), (37, 32768), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 32768), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, 524288), (12, -1), (13, 0), (14, -1), (15, 33280), (16, -1), (17, -1), (18, -1), (19, 0), (20, 0), (21, -1), (22, -1), (23, -1), (24, -1), (25, 131072), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, 131072), (37, 512), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 13 : {19, 20, 13}

After reduction : 
 pending  : [37, 25, 36, 2, 15, 11]
 solution : [7, 3, 4, 5, 17]


Before reduction : 
 pending  : [37, 25, 36, 2, 15, 11]
 solution : [7, 3, 4, 5, 17]

Essensial at level 13 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 32768), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, 524288), (12, -1), (13, 0), (14, -1), (15, 33280), (16, -1), (17, -1), (18, -1), (19, 0), (20, 0), (21, -1), (22, -1), (23, -1), (24, -1), (25, 131072), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, 131072), (37, 512), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 32768), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, 524288), (12, -1), (13, -1), (14, -1), (15, 33280), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, 131072), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, 131072), (37, 512), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 13 : set()

After reduction : 
 pending  : [37, 25, 36, 2, 15, 11]
 solution : [7, 3, 4, 5, 17]


Solution : [7, 3, 4, 5, 17] has cost 25.


Before backtrack at level 13
 pending : [37, 25, 36, 2, 15, 11]
 solution : [7, 3, 4, 5, 17]

After backtrack at level 13
 pending : [37, 25, 36, 2, 15, 11, 20, 19, 13]
 solution : [7, 3, 4, 5, 17]


Invert decision for 17 at level 12


New level: 13
 pending : [37, 25, 36, 2, 15, 11, 20, 19, 13]
 solution : [7, 3, 4, 5]


Before reduction : 
 pending  : [37, 25, 36, 2, 15, 11, 20, 19, 13]
 solution : [7, 3, 4, 5]

Essensial at level 13 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 32768), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, 524288), (12, -1), (13, -1), (14, -1), (15, 33280), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, 131072), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, 131072), (37, 512), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 65536), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, 2097152), (12, -1), (13, 32768), (14, -1), (15, 67584), (16, -1), (17, -1), (18, -1), (19, 1048576), (20, 32768), (21, -1), (22, -1), (23, -1), (24, -1), (25, 524288), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, 524288), (37, 32768), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 13 : set()

After reduction : 
 pending  : [37, 25, 36, 2, 15, 11, 20, 19, 13]
 solution : [7, 3, 4, 5]


Solution : [7, 3, 4, 5] has cost 18.


Decide in level 13 among pending : [37, 25, 36, 2, 15, 11, 20, 19, 13]

Coverage : [(0, -1), (1, -1), (2, 65536), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, 2097152), (12, -1), (13, 32768), (14, -1), (15, 67584), (16, -1), (17, -1), (18, -1), (19, 1048576), (20, 32768), (21, -1), (22, -1), (23, -1), (24, -1), (25, 524288), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, 524288), (37, 32768), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Decide 11 with phase True at level 13

After decision at level 13
 pending : [37, 25, 36, 2, 15, 20, 19, 13]
 solution : [7, 3, 4, 5, 11]


New level: 14
 pending : [37, 25, 36, 2, 15, 20, 19, 13]
 solution : [7, 3, 4, 5, 11]


Before reduction : 
 pending  : [37, 25, 36, 2, 15, 20, 19, 13]
 solution : [7, 3, 4, 5, 11]

Essensial at level 14 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 65536), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, 2097152), (12, -1), (13, 32768), (14, -1), (15, 67584), (16, -1), (17, -1), (18, -1), (19, 1048576), (20, 32768), (21, -1), (22, -1), (23, -1), (24, -1), (25, 524288), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, 524288), (37, 32768), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 0), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, 0), (14, -1), (15, 0), (16, -1), (17, -1), (18, -1), (19, 8192), (20, 8192), (21, -1), (22, -1), (23, -1), (24, -1), (25, 2048), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, 2048), (37, 1024), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 14 : {2, 13, 15}

After reduction : 
 pending  : [37, 25, 36, 20, 19]
 solution : [7, 3, 4, 5, 11]


Before reduction : 
 pending  : [37, 25, 36, 20, 19]
 solution : [7, 3, 4, 5, 11]

Essensial at level 14 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 0), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, 0), (14, -1), (15, 0), (16, -1), (17, -1), (18, -1), (19, 8192), (20, 8192), (21, -1), (22, -1), (23, -1), (24, -1), (25, 2048), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, 2048), (37, 1024), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, 8192), (20, 8192), (21, -1), (22, -1), (23, -1), (24, -1), (25, 2048), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, 2048), (37, 1024), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 14 : set()

After reduction : 
 pending  : [37, 25, 36, 20, 19]
 solution : [7, 3, 4, 5, 11]


Solution : [7, 3, 4, 5, 11] has cost 27.


Before backtrack at level 14
 pending : [37, 25, 36, 20, 19]
 solution : [7, 3, 4, 5, 11]

After backtrack at level 14
 pending : [37, 25, 36, 20, 19, 2, 15, 13]
 solution : [7, 3, 4, 5, 11]


Invert decision for 11 at level 13


New level: 14
 pending : [37, 25, 36, 20, 19, 2, 15, 13]
 solution : [7, 3, 4, 5]


Before reduction : 
 pending  : [37, 25, 36, 20, 19, 2, 15, 13]
 solution : [7, 3, 4, 5]

Essensial at level 14 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, 8192), (20, 8192), (21, -1), (22, -1), (23, -1), (24, -1), (25, 2048), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, 2048), (37, 1024), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 65536), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, 32768), (14, -1), (15, 67584), (16, -1), (17, -1), (18, -1), (19, 1048576), (20, 32768), (21, -1), (22, -1), (23, -1), (24, -1), (25, 524288), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, 524288), (37, 32768), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 14 : set()

After reduction : 
 pending  : [37, 25, 36, 20, 19, 2, 15, 13]
 solution : [7, 3, 4, 5]


Solution : [7, 3, 4, 5] has cost 18.


Decide in level 14 among pending : [37, 25, 36, 20, 19, 2, 15, 13]

Coverage : [(0, -1), (1, -1), (2, 65536), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, 32768), (14, -1), (15, 67584), (16, -1), (17, -1), (18, -1), (19, 1048576), (20, 32768), (21, -1), (22, -1), (23, -1), (24, -1), (25, 524288), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, 524288), (37, 32768), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Decide 19 with phase True at level 14

After decision at level 14
 pending : [37, 25, 36, 20, 2, 15, 13]
 solution : [7, 3, 4, 5, 19]


New level: 15
 pending : [37, 25, 36, 20, 2, 15, 13]
 solution : [7, 3, 4, 5, 19]


Before reduction : 
 pending  : [37, 25, 36, 20, 2, 15, 13]
 solution : [7, 3, 4, 5, 19]

Essensial at level 15 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 65536), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, 32768), (14, -1), (15, 67584), (16, -1), (17, -1), (18, -1), (19, 1048576), (20, 32768), (21, -1), (22, -1), (23, -1), (24, -1), (25, 524288), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, 524288), (37, 32768), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 32768), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, 0), (14, -1), (15, 33280), (16, -1), (17, -1), (18, -1), (19, -1), (20, 0), (21, -1), (22, -1), (23, -1), (24, -1), (25, 131072), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, 131072), (37, 512), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 15 : {20, 13}

After reduction : 
 pending  : [37, 25, 36, 2, 15]
 solution : [7, 3, 4, 5, 19]


Before reduction : 
 pending  : [37, 25, 36, 2, 15]
 solution : [7, 3, 4, 5, 19]

Essensial at level 15 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 32768), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, 0), (14, -1), (15, 33280), (16, -1), (17, -1), (18, -1), (19, -1), (20, 0), (21, -1), (22, -1), (23, -1), (24, -1), (25, 131072), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, 131072), (37, 512), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 32768), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, 33280), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, 131072), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, 131072), (37, 512), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 15 : set()

After reduction : 
 pending  : [37, 25, 36, 2, 15]
 solution : [7, 3, 4, 5, 19]


Solution : [7, 3, 4, 5, 19] has cost 25.


Before backtrack at level 15
 pending : [37, 25, 36, 2, 15]
 solution : [7, 3, 4, 5, 19]

After backtrack at level 15
 pending : [37, 25, 36, 2, 15, 20, 13]
 solution : [7, 3, 4, 5, 19]


Invert decision for 19 at level 14


New level: 15
 pending : [37, 25, 36, 2, 15, 20, 13]
 solution : [7, 3, 4, 5]


Before reduction : 
 pending  : [37, 25, 36, 2, 15, 20, 13]
 solution : [7, 3, 4, 5]

Essensial at level 15 : {20}

Before removed
 coverage : [(0, -1), (1, -1), (2, 32768), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, 33280), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, 131072), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, 131072), (37, 512), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 65536), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, 16384), (14, -1), (15, 67584), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, 524288), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, 524288), (37, 32768), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 15 : set()

After reduction : 
 pending  : [37, 25, 36, 2, 15, 13]
 solution : [7, 3, 4, 5, 20]


Before reduction : 
 pending  : [37, 25, 36, 2, 15, 13]
 solution : [7, 3, 4, 5, 20]

Essensial at level 15 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 65536), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, 16384), (14, -1), (15, 67584), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, 524288), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, 524288), (37, 32768), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 65536), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, 16384), (14, -1), (15, 67584), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, 524288), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, 524288), (37, 32768), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 15 : set()

After reduction : 
 pending  : [37, 25, 36, 2, 15, 13]
 solution : [7, 3, 4, 5, 20]


Solution : [7, 3, 4, 5, 20] has cost 25.


Before backtrack at level 15
 pending : [37, 25, 36, 2, 15, 13]
 solution : [7, 3, 4, 5, 20]

After backtrack at level 15
 pending : [37, 25, 36, 2, 15, 13, 20]
 solution : [7, 3, 4, 5]


Before backtrack at level 14
 pending : [37, 25, 36, 2, 15, 13, 20]
 solution : [7, 3, 4, 5]

After backtrack at level 14
 pending : [37, 25, 36, 2, 15, 13, 20, 19]
 solution : [7, 3, 4, 5]


Before backtrack at level 13
 pending : [37, 25, 36, 2, 15, 13, 20, 19]
 solution : [7, 3, 4, 5]

After backtrack at level 13
 pending : [37, 25, 36, 2, 15, 13, 20, 19, 11]
 solution : [7, 3, 4, 5]


Before backtrack at level 12
 pending : [37, 25, 36, 2, 15, 13, 20, 19, 11]
 solution : [7, 3, 4, 5]

After backtrack at level 12
 pending : [37, 25, 36, 2, 15, 13, 20, 19, 11, 17]
 solution : [7, 3, 4, 5]


Before backtrack at level 11
 pending : [37, 25, 36, 2, 15, 13, 20, 19, 11, 17]
 solution : [7, 3, 4, 5]

After backtrack at level 11
 pending : [37, 25, 36, 2, 15, 13, 20, 19, 11, 17, 5, 9, 30, 31, 39, 42, 43, 47, 48, 49, 40, 34, 35, 12]
 solution : [7, 3, 4]


Before backtrack at level 10
 pending : [37, 25, 36, 2, 15, 13, 20, 19, 11, 17, 5, 9, 30, 31, 39, 42, 43, 47, 48, 49, 40, 34, 35, 12]
 solution : [7, 3, 4]

After backtrack at level 10
 pending : [37, 25, 36, 2, 15, 13, 20, 19, 11, 17, 5, 9, 30, 31, 39, 42, 43, 47, 48, 49, 40, 34, 35, 12, 23]
 solution : [7, 3, 4]


Before backtrack at level 9
 pending : [37, 25, 36, 2, 15, 13, 20, 19, 11, 17, 5, 9, 30, 31, 39, 42, 43, 47, 48, 49, 40, 34, 35, 12, 23]
 solution : [7, 3, 4]

After backtrack at level 9
 pending : [37, 25, 36, 2, 15, 13, 20, 19, 11, 17, 5, 9, 30, 31, 39, 42, 43, 47, 48, 49, 40, 34, 35, 12, 23, 18]
 solution : [7, 3, 4]


Before backtrack at level 8
 pending : [37, 25, 36, 2, 15, 13, 20, 19, 11, 17, 5, 9, 30, 31, 39, 42, 43, 47, 48, 49, 40, 34, 35, 12, 23, 18]
 solution : [7, 3, 4]

After backtrack at level 8
 pending : [37, 25, 36, 2, 15, 13, 20, 19, 11, 17, 5, 9, 30, 31, 39, 42, 43, 47, 48, 49, 40, 34, 35, 12, 23, 18, 41]
 solution : [7, 3, 4]


Before backtrack at level 7
 pending : [37, 25, 36, 2, 15, 13, 20, 19, 11, 17, 5, 9, 30, 31, 39, 42, 43, 47, 48, 49, 40, 34, 35, 12, 23, 18, 41]
 solution : [7, 3, 4]

After backtrack at level 7
 pending : [37, 25, 36, 2, 15, 13, 20, 19, 11, 17, 5, 9, 30, 31, 39, 42, 43, 47, 48, 49, 40, 34, 35, 12, 23, 18, 41, 16]
 solution : [7, 3, 4]


Before backtrack at level 6
 pending : [37, 25, 36, 2, 15, 13, 20, 19, 11, 17, 5, 9, 30, 31, 39, 42, 43, 47, 48, 49, 40, 34, 35, 12, 23, 18, 41, 16]
 solution : [7, 3, 4]

After backtrack at level 6
 pending : [37, 25, 36, 2, 15, 13, 20, 19, 11, 17, 5, 9, 30, 31, 39, 42, 43, 47, 48, 49, 40, 34, 35, 12, 23, 18, 41, 16, 27]
 solution : [7, 3, 4]


Before backtrack at level 5
 pending : [37, 25, 36, 2, 15, 13, 20, 19, 11, 17, 5, 9, 30, 31, 39, 42, 43, 47, 48, 49, 40, 34, 35, 12, 23, 18, 41, 16, 27]
 solution : [7, 3, 4]

After backtrack at level 5
 pending : [37, 25, 36, 2, 15, 13, 20, 19, 11, 17, 5, 9, 30, 31, 39, 42, 43, 47, 48, 49, 40, 34, 35, 12, 23, 18, 41, 16, 27, 28]
 solution : [7, 3, 4]


Before backtrack at level 4
 pending : [37, 25, 36, 2, 15, 13, 20, 19, 11, 17, 5, 9, 30, 31, 39, 42, 43, 47, 48, 49, 40, 34, 35, 12, 23, 18, 41, 16, 27, 28]
 solution : [7, 3, 4]

After backtrack at level 4
 pending : [37, 25, 36, 2, 15, 13, 20, 19, 11, 17, 5, 9, 30, 31, 39, 42, 43, 47, 48, 49, 40, 34, 35, 12, 23, 18, 41, 16, 27, 28, 33]
 solution : [7, 3, 4]


Before backtrack at level 3
 pending : [37, 25, 36, 2, 15, 13, 20, 19, 11, 17, 5, 9, 30, 31, 39, 42, 43, 47, 48, 49, 40, 34, 35, 12, 23, 18, 41, 16, 27, 28, 33]
 solution : [7, 3, 4]

After backtrack at level 3
 pending : [37, 25, 36, 2, 15, 13, 20, 19, 11, 17, 5, 9, 30, 31, 39, 42, 43, 47, 48, 49, 40, 34, 35, 12, 23, 18, 41, 16, 27, 28, 33, 26]
 solution : [7, 3, 4]


Invert decision for 4 at level 2


New level: 3
 pending : [37, 25, 36, 2, 15, 13, 20, 19, 11, 17, 5, 9, 30, 31, 39, 42, 43, 47, 48, 49, 40, 34, 35, 12, 23, 18, 41, 16, 27, 28, 33, 26]
 solution : [7, 3]


Before reduction : 
 pending  : [37, 25, 36, 2, 15, 13, 20, 19, 11, 17, 5, 9, 30, 31, 39, 42, 43, 47, 48, 49, 40, 34, 35, 12, 23, 18, 41, 16, 27, 28, 33, 26]
 solution : [7, 3]

Essensial at level 3 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 65536), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, 16384), (14, -1), (15, 67584), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, 524288), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, 524288), (37, 32768), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 524288), (3, -1), (4, -1), (5, 67108864), (6, -1), (7, -1), (8, -1), (9, 524288), (10, -1), (11, 16777216), (12, 33554432), (13, 262144), (14, -1), (15, 557056), (16, 1073741824), (17, 8388608), (18, 536870912), (19, 4194304), (20, 131072), (21, -1), (22, -1), (23, 67108864), (24, -1), (25, 2097152), (26, 2147483648), (27, 268435456), (28, 536870912), (29, -1), (30, 524288), (31, 8192), (32, -1), (33, 536870912), (34, 1048576), (35, 8192), (36, 2097152), (37, 67108864), (38, -1), (39, 8192), (40, 67108864), (41, 134217728), (42, 262144), (43, 262144), (44, -1), (45, -1), (46, -1), (47, 33554432), (48, 8388608), (49, 33554432), (50, -1), (51, -1), (52, -1)]

Covered at level 3 : set()

After reduction : 
 pending  : [37, 25, 36, 2, 15, 13, 20, 19, 11, 17, 5, 9, 30, 31, 39, 42, 43, 47, 48, 49, 40, 34, 35, 12, 23, 18, 41, 16, 27, 28, 33, 26]
 solution : [7, 3]


Solution : [7, 3] has cost 9.


Decide in level 3 among pending : [37, 25, 36, 2, 15, 13, 20, 19, 11, 17, 5, 9, 30, 31, 39, 42, 43, 47, 48, 49, 40, 34, 35, 12, 23, 18, 41, 16, 27, 28, 33, 26]

Coverage : [(0, -1), (1, -1), (2, 524288), (3, -1), (4, -1), (5, 67108864), (6, -1), (7, -1), (8, -1), (9, 524288), (10, -1), (11, 16777216), (12, 33554432), (13, 262144), (14, -1), (15, 557056), (16, 1073741824), (17, 8388608), (18, 536870912), (19, 4194304), (20, 131072), (21, -1), (22, -1), (23, 67108864), (24, -1), (25, 2097152), (26, 2147483648), (27, 268435456), (28, 536870912), (29, -1), (30, 524288), (31, 8192), (32, -1), (33, 536870912), (34, 1048576), (35, 8192), (36, 2097152), (37, 67108864), (38, -1), (39, 8192), (40, 67108864), (41, 134217728), (42, 262144), (43, 262144), (44, -1), (45, -1), (46, -1), (47, 33554432), (48, 8388608), (49, 33554432), (50, -1), (51, -1), (52, -1)]

Decide 26 with phase True at level 3

After decision at level 3
 pending : [37, 25, 36, 2, 15, 13, 20, 19, 11, 17, 5, 9, 30, 31, 39, 42, 43, 47, 48, 49, 40, 34, 35, 12, 23, 18, 41, 16, 27, 28, 33]
 solution : [7, 3, 26]


New level: 4
 pending : [37, 25, 36, 2, 15, 13, 20, 19, 11, 17, 5, 9, 30, 31, 39, 42, 43, 47, 48, 49, 40, 34, 35, 12, 23, 18, 41, 16, 27, 28, 33]
 solution : [7, 3, 26]


Before reduction : 
 pending  : [37, 25, 36, 2, 15, 13, 20, 19, 11, 17, 5, 9, 30, 31, 39, 42, 43, 47, 48, 49, 40, 34, 35, 12, 23, 18, 41, 16, 27, 28, 33]
 solution : [7, 3, 26]

Essensial at level 4 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 524288), (3, -1), (4, -1), (5, 67108864), (6, -1), (7, -1), (8, -1), (9, 524288), (10, -1), (11, 16777216), (12, 33554432), (13, 262144), (14, -1), (15, 557056), (16, 1073741824), (17, 8388608), (18, 536870912), (19, 4194304), (20, 131072), (21, -1), (22, -1), (23, 67108864), (24, -1), (25, 2097152), (26, 2147483648), (27, 268435456), (28, 536870912), (29, -1), (30, 524288), (31, 8192), (32, -1), (33, 536870912), (34, 1048576), (35, 8192), (36, 2097152), (37, 67108864), (38, -1), (39, 8192), (40, 67108864), (41, 134217728), (42, 262144), (43, 262144), (44, -1), (45, -1), (46, -1), (47, 33554432), (48, 8388608), (49, 33554432), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 0), (3, -1), (4, -1), (5, 67108864), (6, -1), (7, -1), (8, -1), (9, 131072), (10, -1), (11, 0), (12, 0), (13, 0), (14, -1), (15, 0), (16, 0), (17, 0), (18, 0), (19, 0), (20, 0), (21, -1), (22, -1), (23, 67108864), (24, -1), (25, 0), (26, -1), (27, 268435456), (28, 536870912), (29, -1), (30, 262144), (31, 4096), (32, -1), (33, 536870912), (34, 1048576), (35, 8192), (36, 0), (37, 1024), (38, -1), (39, 2048), (40, 33554432), (41, 2048), (42, 65536), (43, 65536), (44, -1), (45, -1), (46, -1), (47, 16777216), (48, 2097152), (49, 8388608), (50, -1), (51, -1), (52, -1)]

Covered at level 4 : {2, 36, 11, 12, 13, 15, 16, 17, 18, 19, 20, 25}

After reduction : 
 pending  : [37, 5, 9, 30, 31, 39, 42, 43, 47, 48, 49, 40, 34, 35, 23, 41, 27, 28, 33]
 solution : [7, 3, 26]


Before reduction : 
 pending  : [37, 5, 9, 30, 31, 39, 42, 43, 47, 48, 49, 40, 34, 35, 23, 41, 27, 28, 33]
 solution : [7, 3, 26]

Essensial at level 4 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 0), (3, -1), (4, -1), (5, 67108864), (6, -1), (7, -1), (8, -1), (9, 131072), (10, -1), (11, 0), (12, 0), (13, 0), (14, -1), (15, 0), (16, 0), (17, 0), (18, 0), (19, 0), (20, 0), (21, -1), (22, -1), (23, 67108864), (24, -1), (25, 0), (26, -1), (27, 268435456), (28, 536870912), (29, -1), (30, 262144), (31, 4096), (32, -1), (33, 536870912), (34, 1048576), (35, 8192), (36, 0), (37, 1024), (38, -1), (39, 2048), (40, 33554432), (41, 2048), (42, 65536), (43, 65536), (44, -1), (45, -1), (46, -1), (47, 16777216), (48, 2097152), (49, 8388608), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 67108864), (6, -1), (7, -1), (8, -1), (9, 131072), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, 67108864), (24, -1), (25, -1), (26, -1), (27, 268435456), (28, 536870912), (29, -1), (30, 262144), (31, 4096), (32, -1), (33, 536870912), (34, 1048576), (35, 8192), (36, -1), (37, 1024), (38, -1), (39, 2048), (40, 33554432), (41, 2048), (42, 65536), (43, 65536), (44, -1), (45, -1), (46, -1), (47, 16777216), (48, 2097152), (49, 8388608), (50, -1), (51, -1), (52, -1)]

Covered at level 4 : set()

After reduction : 
 pending  : [37, 5, 9, 30, 31, 39, 42, 43, 47, 48, 49, 40, 34, 35, 23, 41, 27, 28, 33]
 solution : [7, 3, 26]


Solution : [7, 3, 26] has cost 13.


Decide in level 4 among pending : [37, 5, 9, 30, 31, 39, 42, 43, 47, 48, 49, 40, 34, 35, 23, 41, 27, 28, 33]

Coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 67108864), (6, -1), (7, -1), (8, -1), (9, 131072), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, 67108864), (24, -1), (25, -1), (26, -1), (27, 268435456), (28, 536870912), (29, -1), (30, 262144), (31, 4096), (32, -1), (33, 536870912), (34, 1048576), (35, 8192), (36, -1), (37, 1024), (38, -1), (39, 2048), (40, 33554432), (41, 2048), (42, 65536), (43, 65536), (44, -1), (45, -1), (46, -1), (47, 16777216), (48, 2097152), (49, 8388608), (50, -1), (51, -1), (52, -1)]

Decide 28 with phase True at level 4

After decision at level 4
 pending : [37, 5, 9, 30, 31, 39, 42, 43, 47, 48, 49, 40, 34, 35, 23, 41, 27, 33]
 solution : [7, 3, 26, 28]


New level: 5
 pending : [37, 5, 9, 30, 31, 39, 42, 43, 47, 48, 49, 40, 34, 35, 23, 41, 27, 33]
 solution : [7, 3, 26, 28]


Before reduction : 
 pending  : [37, 5, 9, 30, 31, 39, 42, 43, 47, 48, 49, 40, 34, 35, 23, 41, 27, 33]
 solution : [7, 3, 26, 28]

Essensial at level 5 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 67108864), (6, -1), (7, -1), (8, -1), (9, 131072), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, 67108864), (24, -1), (25, -1), (26, -1), (27, 268435456), (28, 536870912), (29, -1), (30, 262144), (31, 4096), (32, -1), (33, 536870912), (34, 1048576), (35, 8192), (36, -1), (37, 1024), (38, -1), (39, 2048), (40, 33554432), (41, 2048), (42, 65536), (43, 65536), (44, -1), (45, -1), (46, -1), (47, 16777216), (48, 2097152), (49, 8388608), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 67108864), (6, -1), (7, -1), (8, -1), (9, 131072), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, 67108864), (24, -1), (25, -1), (26, -1), (27, 134217728), (28, -1), (29, -1), (30, 262144), (31, 4096), (32, -1), (33, 268435456), (34, 524288), (35, 4096), (36, -1), (37, 1024), (38, -1), (39, 2048), (40, 33554432), (41, 2048), (42, 65536), (43, 65536), (44, -1), (45, -1), (46, -1), (47, 16777216), (48, 2097152), (49, 8388608), (50, -1), (51, -1), (52, -1)]

Covered at level 5 : set()

After reduction : 
 pending  : [37, 5, 9, 30, 31, 39, 42, 43, 47, 48, 49, 40, 34, 35, 23, 41, 27, 33]
 solution : [7, 3, 26, 28]


Solution : [7, 3, 26, 28] has cost 17.


Decide in level 5 among pending : [37, 5, 9, 30, 31, 39, 42, 43, 47, 48, 49, 40, 34, 35, 23, 41, 27, 33]

Coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 67108864), (6, -1), (7, -1), (8, -1), (9, 131072), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, 67108864), (24, -1), (25, -1), (26, -1), (27, 134217728), (28, -1), (29, -1), (30, 262144), (31, 4096), (32, -1), (33, 268435456), (34, 524288), (35, 4096), (36, -1), (37, 1024), (38, -1), (39, 2048), (40, 33554432), (41, 2048), (42, 65536), (43, 65536), (44, -1), (45, -1), (46, -1), (47, 16777216), (48, 2097152), (49, 8388608), (50, -1), (51, -1), (52, -1)]

Decide 33 with phase True at level 5

After decision at level 5
 pending : [37, 5, 9, 30, 31, 39, 42, 43, 47, 48, 49, 40, 34, 35, 23, 41, 27]
 solution : [7, 3, 26, 28, 33]


New level: 6
 pending : [37, 5, 9, 30, 31, 39, 42, 43, 47, 48, 49, 40, 34, 35, 23, 41, 27]
 solution : [7, 3, 26, 28, 33]


Before reduction : 
 pending  : [37, 5, 9, 30, 31, 39, 42, 43, 47, 48, 49, 40, 34, 35, 23, 41, 27]
 solution : [7, 3, 26, 28, 33]

Essensial at level 6 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 67108864), (6, -1), (7, -1), (8, -1), (9, 131072), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, 67108864), (24, -1), (25, -1), (26, -1), (27, 134217728), (28, -1), (29, -1), (30, 262144), (31, 4096), (32, -1), (33, 268435456), (34, 524288), (35, 4096), (36, -1), (37, 1024), (38, -1), (39, 2048), (40, 33554432), (41, 2048), (42, 65536), (43, 65536), (44, -1), (45, -1), (46, -1), (47, 16777216), (48, 2097152), (49, 8388608), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 67108864), (6, -1), (7, -1), (8, -1), (9, 32768), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, 67108864), (24, -1), (25, -1), (26, -1), (27, 2048), (28, -1), (29, -1), (30, 65536), (31, 1024), (32, -1), (33, -1), (34, 0), (35, 0), (36, -1), (37, 512), (38, -1), (39, 512), (40, 8388608), (41, 0), (42, 16384), (43, 16384), (44, -1), (45, -1), (46, -1), (47, 4194304), (48, 524288), (49, 2097152), (50, -1), (51, -1), (52, -1)]

Covered at level 6 : {41, 34, 35}

After reduction : 
 pending  : [37, 5, 9, 30, 31, 39, 42, 43, 47, 48, 49, 40, 23, 27]
 solution : [7, 3, 26, 28, 33]


Before reduction : 
 pending  : [37, 5, 9, 30, 31, 39, 42, 43, 47, 48, 49, 40, 23, 27]
 solution : [7, 3, 26, 28, 33]

Essensial at level 6 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 67108864), (6, -1), (7, -1), (8, -1), (9, 32768), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, 67108864), (24, -1), (25, -1), (26, -1), (27, 2048), (28, -1), (29, -1), (30, 65536), (31, 1024), (32, -1), (33, -1), (34, 0), (35, 0), (36, -1), (37, 512), (38, -1), (39, 512), (40, 8388608), (41, 0), (42, 16384), (43, 16384), (44, -1), (45, -1), (46, -1), (47, 4194304), (48, 524288), (49, 2097152), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 67108864), (6, -1), (7, -1), (8, -1), (9, 32768), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, 67108864), (24, -1), (25, -1), (26, -1), (27, 2048), (28, -1), (29, -1), (30, 65536), (31, 1024), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, 512), (38, -1), (39, 512), (40, 8388608), (41, -1), (42, 16384), (43, 16384), (44, -1), (45, -1), (46, -1), (47, 4194304), (48, 524288), (49, 2097152), (50, -1), (51, -1), (52, -1)]

Covered at level 6 : set()

After reduction : 
 pending  : [37, 5, 9, 30, 31, 39, 42, 43, 47, 48, 49, 40, 23, 27]
 solution : [7, 3, 26, 28, 33]


Solution : [7, 3, 26, 28, 33] has cost 30.


Before backtrack at level 6
 pending : [37, 5, 9, 30, 31, 39, 42, 43, 47, 48, 49, 40, 23, 27]
 solution : [7, 3, 26, 28, 33]

After backtrack at level 6
 pending : [37, 5, 9, 30, 31, 39, 42, 43, 47, 48, 49, 40, 23, 27, 34, 35, 41]
 solution : [7, 3, 26, 28, 33]


Invert decision for 33 at level 5


New level: 6
 pending : [37, 5, 9, 30, 31, 39, 42, 43, 47, 48, 49, 40, 23, 27, 34, 35, 41]
 solution : [7, 3, 26, 28]


Before reduction : 
 pending  : [37, 5, 9, 30, 31, 39, 42, 43, 47, 48, 49, 40, 23, 27, 34, 35, 41]
 solution : [7, 3, 26, 28]

Essensial at level 6 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 67108864), (6, -1), (7, -1), (8, -1), (9, 32768), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, 67108864), (24, -1), (25, -1), (26, -1), (27, 2048), (28, -1), (29, -1), (30, 65536), (31, 1024), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, 512), (38, -1), (39, 512), (40, 8388608), (41, -1), (42, 16384), (43, 16384), (44, -1), (45, -1), (46, -1), (47, 4194304), (48, 524288), (49, 2097152), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 67108864), (6, -1), (7, -1), (8, -1), (9, 131072), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, 67108864), (24, -1), (25, -1), (26, -1), (27, 134217728), (28, -1), (29, -1), (30, 262144), (31, 4096), (32, -1), (33, -1), (34, 524288), (35, 4096), (36, -1), (37, 1024), (38, -1), (39, 2048), (40, 33554432), (41, 2048), (42, 65536), (43, 65536), (44, -1), (45, -1), (46, -1), (47, 16777216), (48, 2097152), (49, 8388608), (50, -1), (51, -1), (52, -1)]

Covered at level 6 : set()

After reduction : 
 pending  : [37, 5, 9, 30, 31, 39, 42, 43, 47, 48, 49, 40, 23, 27, 34, 35, 41]
 solution : [7, 3, 26, 28]


Solution : [7, 3, 26, 28] has cost 17.


Decide in level 6 among pending : [37, 5, 9, 30, 31, 39, 42, 43, 47, 48, 49, 40, 23, 27, 34, 35, 41]

Coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 67108864), (6, -1), (7, -1), (8, -1), (9, 131072), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, 67108864), (24, -1), (25, -1), (26, -1), (27, 134217728), (28, -1), (29, -1), (30, 262144), (31, 4096), (32, -1), (33, -1), (34, 524288), (35, 4096), (36, -1), (37, 1024), (38, -1), (39, 2048), (40, 33554432), (41, 2048), (42, 65536), (43, 65536), (44, -1), (45, -1), (46, -1), (47, 16777216), (48, 2097152), (49, 8388608), (50, -1), (51, -1), (52, -1)]

Decide 27 with phase True at level 6

After decision at level 6
 pending : [37, 5, 9, 30, 31, 39, 42, 43, 47, 48, 49, 40, 23, 34, 35, 41]
 solution : [7, 3, 26, 28, 27]


New level: 7
 pending : [37, 5, 9, 30, 31, 39, 42, 43, 47, 48, 49, 40, 23, 34, 35, 41]
 solution : [7, 3, 26, 28, 27]


Before reduction : 
 pending  : [37, 5, 9, 30, 31, 39, 42, 43, 47, 48, 49, 40, 23, 34, 35, 41]
 solution : [7, 3, 26, 28, 27]

Essensial at level 7 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 67108864), (6, -1), (7, -1), (8, -1), (9, 131072), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, 67108864), (24, -1), (25, -1), (26, -1), (27, 134217728), (28, -1), (29, -1), (30, 262144), (31, 4096), (32, -1), (33, -1), (34, 524288), (35, 4096), (36, -1), (37, 1024), (38, -1), (39, 2048), (40, 33554432), (41, 2048), (42, 65536), (43, 65536), (44, -1), (45, -1), (46, -1), (47, 16777216), (48, 2097152), (49, 8388608), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 16777216), (6, -1), (7, -1), (8, -1), (9, 32768), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, 16777216), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, 65536), (31, 1024), (32, -1), (33, -1), (34, 0), (35, 0), (36, -1), (37, 512), (38, -1), (39, 512), (40, 16777216), (41, 0), (42, 16384), (43, 16384), (44, -1), (45, -1), (46, -1), (47, 4194304), (48, 524288), (49, 4194304), (50, -1), (51, -1), (52, -1)]

Covered at level 7 : {41, 34, 35}

After reduction : 
 pending  : [37, 5, 9, 30, 31, 39, 42, 43, 47, 48, 49, 40, 23]
 solution : [7, 3, 26, 28, 27]


Before reduction : 
 pending  : [37, 5, 9, 30, 31, 39, 42, 43, 47, 48, 49, 40, 23]
 solution : [7, 3, 26, 28, 27]

Essensial at level 7 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 16777216), (6, -1), (7, -1), (8, -1), (9, 32768), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, 16777216), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, 65536), (31, 1024), (32, -1), (33, -1), (34, 0), (35, 0), (36, -1), (37, 512), (38, -1), (39, 512), (40, 16777216), (41, 0), (42, 16384), (43, 16384), (44, -1), (45, -1), (46, -1), (47, 4194304), (48, 524288), (49, 4194304), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 16777216), (6, -1), (7, -1), (8, -1), (9, 32768), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, 16777216), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, 65536), (31, 1024), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, 512), (38, -1), (39, 512), (40, 16777216), (41, -1), (42, 16384), (43, 16384), (44, -1), (45, -1), (46, -1), (47, 4194304), (48, 524288), (49, 4194304), (50, -1), (51, -1), (52, -1)]

Covered at level 7 : set()

After reduction : 
 pending  : [37, 5, 9, 30, 31, 39, 42, 43, 47, 48, 49, 40, 23]
 solution : [7, 3, 26, 28, 27]


Solution : [7, 3, 26, 28, 27] has cost 24.


Before backtrack at level 7
 pending : [37, 5, 9, 30, 31, 39, 42, 43, 47, 48, 49, 40, 23]
 solution : [7, 3, 26, 28, 27]

After backtrack at level 7
 pending : [37, 5, 9, 30, 31, 39, 42, 43, 47, 48, 49, 40, 23, 34, 35, 41]
 solution : [7, 3, 26, 28, 27]


Invert decision for 27 at level 6


New level: 7
 pending : [37, 5, 9, 30, 31, 39, 42, 43, 47, 48, 49, 40, 23, 34, 35, 41]
 solution : [7, 3, 26, 28]


Before reduction : 
 pending  : [37, 5, 9, 30, 31, 39, 42, 43, 47, 48, 49, 40, 23, 34, 35, 41]
 solution : [7, 3, 26, 28]

Essensial at level 7 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 16777216), (6, -1), (7, -1), (8, -1), (9, 32768), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, 16777216), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, 65536), (31, 1024), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, 512), (38, -1), (39, 512), (40, 16777216), (41, -1), (42, 16384), (43, 16384), (44, -1), (45, -1), (46, -1), (47, 4194304), (48, 524288), (49, 4194304), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 67108864), (6, -1), (7, -1), (8, -1), (9, 131072), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, 67108864), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, 262144), (31, 4096), (32, -1), (33, -1), (34, 524288), (35, 4096), (36, -1), (37, 1024), (38, -1), (39, 2048), (40, 33554432), (41, 2048), (42, 65536), (43, 65536), (44, -1), (45, -1), (46, -1), (47, 16777216), (48, 2097152), (49, 8388608), (50, -1), (51, -1), (52, -1)]

Covered at level 7 : set()

After reduction : 
 pending  : [37, 5, 9, 30, 31, 39, 42, 43, 47, 48, 49, 40, 23, 34, 35, 41]
 solution : [7, 3, 26, 28]


Solution : [7, 3, 26, 28] has cost 17.


Decide in level 7 among pending : [37, 5, 9, 30, 31, 39, 42, 43, 47, 48, 49, 40, 23, 34, 35, 41]

Coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 67108864), (6, -1), (7, -1), (8, -1), (9, 131072), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, 67108864), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, 262144), (31, 4096), (32, -1), (33, -1), (34, 524288), (35, 4096), (36, -1), (37, 1024), (38, -1), (39, 2048), (40, 33554432), (41, 2048), (42, 65536), (43, 65536), (44, -1), (45, -1), (46, -1), (47, 16777216), (48, 2097152), (49, 8388608), (50, -1), (51, -1), (52, -1)]

Decide 5 with phase True at level 7

After decision at level 7
 pending : [37, 9, 30, 31, 39, 42, 43, 47, 48, 49, 40, 23, 34, 35, 41]
 solution : [7, 3, 26, 28, 5]


New level: 8
 pending : [37, 9, 30, 31, 39, 42, 43, 47, 48, 49, 40, 23, 34, 35, 41]
 solution : [7, 3, 26, 28, 5]


Before reduction : 
 pending  : [37, 9, 30, 31, 39, 42, 43, 47, 48, 49, 40, 23, 34, 35, 41]
 solution : [7, 3, 26, 28, 5]

Essensial at level 8 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 67108864), (6, -1), (7, -1), (8, -1), (9, 131072), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, 67108864), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, 262144), (31, 4096), (32, -1), (33, -1), (34, 524288), (35, 4096), (36, -1), (37, 1024), (38, -1), (39, 2048), (40, 33554432), (41, 2048), (42, 65536), (43, 65536), (44, -1), (45, -1), (46, -1), (47, 16777216), (48, 2097152), (49, 8388608), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, 0), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, 0), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, 0), (31, 0), (32, -1), (33, -1), (34, 0), (35, 0), (36, -1), (37, 0), (38, -1), (39, 0), (40, 0), (41, 0), (42, 0), (43, 0), (44, -1), (45, -1), (46, -1), (47, 0), (48, 0), (49, 0), (50, -1), (51, -1), (52, -1)]

Covered at level 8 : {34, 35, 37, 39, 40, 9, 42, 43, 41, 47, 48, 49, 23, 30, 31}

After reduction : 
 pending  : []
 solution : [7, 3, 26, 28, 5]


Before reduction : 
 pending  : []
 solution : [7, 3, 26, 28, 5]

Essensial at level 8 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, 0), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, 0), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, 0), (31, 0), (32, -1), (33, -1), (34, 0), (35, 0), (36, -1), (37, 0), (38, -1), (39, 0), (40, 0), (41, 0), (42, 0), (43, 0), (44, -1), (45, -1), (46, -1), (47, 0), (48, 0), (49, 0), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 8 : set()

After reduction : 
 pending  : []
 solution : [7, 3, 26, 28, 5]


Solution : [7, 3, 26, 28, 5] has cost 21.


Before backtrack at level 8
 pending : []
 solution : [7, 3, 26, 28, 5]

After backtrack at level 8
 pending : [37, 9, 30, 31, 39, 42, 43, 47, 48, 49, 40, 23, 34, 35, 41]
 solution : [7, 3, 26, 28, 5]


Invert decision for 5 at level 7


New level: 8
 pending : [37, 9, 30, 31, 39, 42, 43, 47, 48, 49, 40, 23, 34, 35, 41]
 solution : [7, 3, 26, 28]


Before reduction : 
 pending  : [37, 9, 30, 31, 39, 42, 43, 47, 48, 49, 40, 23, 34, 35, 41]
 solution : [7, 3, 26, 28]

Essensial at level 8 : {23}

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, 0), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, 0), (31, 0), (32, -1), (33, -1), (34, 0), (35, 0), (36, -1), (37, 0), (38, -1), (39, 0), (40, 0), (41, 0), (42, 0), (43, 0), (44, -1), (45, -1), (46, -1), (47, 0), (48, 0), (49, 0), (50, -1), (51, -1), (52, -1)]

Covered at level 8 : {34, 35, 37, 39, 40, 9, 42, 43, 41, 47, 48, 49, 30, 31}

After reduction : 
 pending  : []
 solution : [7, 3, 26, 28, 23]


Before reduction : 
 pending  : []
 solution : [7, 3, 26, 28, 23]

Essensial at level 8 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, 0), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, 0), (31, 0), (32, -1), (33, -1), (34, 0), (35, 0), (36, -1), (37, 0), (38, -1), (39, 0), (40, 0), (41, 0), (42, 0), (43, 0), (44, -1), (45, -1), (46, -1), (47, 0), (48, 0), (49, 0), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 8 : set()

After reduction : 
 pending  : []
 solution : [7, 3, 26, 28, 23]


Solution : [7, 3, 26, 28, 23] has cost 24.


Before backtrack at level 8
 pending : []
 solution : [7, 3, 26, 28, 23]

After backtrack at level 8
 pending : [23, 37, 9, 30, 31, 39, 42, 43, 47, 48, 49, 40, 34, 35, 41]
 solution : [7, 3, 26, 28]


Before backtrack at level 7
 pending : [23, 37, 9, 30, 31, 39, 42, 43, 47, 48, 49, 40, 34, 35, 41]
 solution : [7, 3, 26, 28]

After backtrack at level 7
 pending : [23, 37, 9, 30, 31, 39, 42, 43, 47, 48, 49, 40, 34, 35, 41, 5]
 solution : [7, 3, 26, 28]


Before backtrack at level 6
 pending : [23, 37, 9, 30, 31, 39, 42, 43, 47, 48, 49, 40, 34, 35, 41, 5]
 solution : [7, 3, 26, 28]

After backtrack at level 6
 pending : [23, 37, 9, 30, 31, 39, 42, 43, 47, 48, 49, 40, 34, 35, 41, 5, 27]
 solution : [7, 3, 26, 28]


Before backtrack at level 5
 pending : [23, 37, 9, 30, 31, 39, 42, 43, 47, 48, 49, 40, 34, 35, 41, 5, 27]
 solution : [7, 3, 26, 28]

After backtrack at level 5
 pending : [23, 37, 9, 30, 31, 39, 42, 43, 47, 48, 49, 40, 34, 35, 41, 5, 27, 33]
 solution : [7, 3, 26, 28]


Invert decision for 28 at level 4


New level: 5
 pending : [23, 37, 9, 30, 31, 39, 42, 43, 47, 48, 49, 40, 34, 35, 41, 5, 27, 33]
 solution : [7, 3, 26]


Before reduction : 
 pending  : [23, 37, 9, 30, 31, 39, 42, 43, 47, 48, 49, 40, 34, 35, 41, 5, 27, 33]
 solution : [7, 3, 26]

Essensial at level 5 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 67108864), (6, -1), (7, -1), (8, -1), (9, 131072), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, 67108864), (24, -1), (25, -1), (26, -1), (27, 268435456), (28, -1), (29, -1), (30, 262144), (31, 4096), (32, -1), (33, 536870912), (34, 1048576), (35, 8192), (36, -1), (37, 1024), (38, -1), (39, 2048), (40, 33554432), (41, 2048), (42, 65536), (43, 65536), (44, -1), (45, -1), (46, -1), (47, 16777216), (48, 2097152), (49, 8388608), (50, -1), (51, -1), (52, -1)]

Covered at level 5 : set()

After reduction : 
 pending  : [23, 37, 9, 30, 31, 39, 42, 43, 47, 48, 49, 40, 34, 35, 41, 5, 27, 33]
 solution : [7, 3, 26]


Solution : [7, 3, 26] has cost 13.


Decide in level 5 among pending : [23, 37, 9, 30, 31, 39, 42, 43, 47, 48, 49, 40, 34, 35, 41, 5, 27, 33]

Coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 67108864), (6, -1), (7, -1), (8, -1), (9, 131072), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, 67108864), (24, -1), (25, -1), (26, -1), (27, 268435456), (28, -1), (29, -1), (30, 262144), (31, 4096), (32, -1), (33, 536870912), (34, 1048576), (35, 8192), (36, -1), (37, 1024), (38, -1), (39, 2048), (40, 33554432), (41, 2048), (42, 65536), (43, 65536), (44, -1), (45, -1), (46, -1), (47, 16777216), (48, 2097152), (49, 8388608), (50, -1), (51, -1), (52, -1)]

Decide 33 with phase True at level 5

After decision at level 5
 pending : [23, 37, 9, 30, 31, 39, 42, 43, 47, 48, 49, 40, 34, 35, 41, 5, 27]
 solution : [7, 3, 26, 33]


New level: 6
 pending : [23, 37, 9, 30, 31, 39, 42, 43, 47, 48, 49, 40, 34, 35, 41, 5, 27]
 solution : [7, 3, 26, 33]


Before reduction : 
 pending  : [23, 37, 9, 30, 31, 39, 42, 43, 47, 48, 49, 40, 34, 35, 41, 5, 27]
 solution : [7, 3, 26, 33]

Essensial at level 6 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 67108864), (6, -1), (7, -1), (8, -1), (9, 131072), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, 67108864), (24, -1), (25, -1), (26, -1), (27, 268435456), (28, -1), (29, -1), (30, 262144), (31, 4096), (32, -1), (33, 536870912), (34, 1048576), (35, 8192), (36, -1), (37, 1024), (38, -1), (39, 2048), (40, 33554432), (41, 2048), (42, 65536), (43, 65536), (44, -1), (45, -1), (46, -1), (47, 16777216), (48, 2097152), (49, 8388608), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 67108864), (6, -1), (7, -1), (8, -1), (9, 32768), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, 67108864), (24, -1), (25, -1), (26, -1), (27, 4096), (28, -1), (29, -1), (30, 65536), (31, 1024), (32, -1), (33, -1), (34, 0), (35, 0), (36, -1), (37, 512), (38, -1), (39, 512), (40, 8388608), (41, 0), (42, 16384), (43, 16384), (44, -1), (45, -1), (46, -1), (47, 4194304), (48, 524288), (49, 2097152), (50, -1), (51, -1), (52, -1)]

Covered at level 6 : {41, 34, 35}

After reduction : 
 pending  : [23, 37, 9, 30, 31, 39, 42, 43, 47, 48, 49, 40, 5, 27]
 solution : [7, 3, 26, 33]


Before reduction : 
 pending  : [23, 37, 9, 30, 31, 39, 42, 43, 47, 48, 49, 40, 5, 27]
 solution : [7, 3, 26, 33]

Essensial at level 6 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 67108864), (6, -1), (7, -1), (8, -1), (9, 32768), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, 67108864), (24, -1), (25, -1), (26, -1), (27, 4096), (28, -1), (29, -1), (30, 65536), (31, 1024), (32, -1), (33, -1), (34, 0), (35, 0), (36, -1), (37, 512), (38, -1), (39, 512), (40, 8388608), (41, 0), (42, 16384), (43, 16384), (44, -1), (45, -1), (46, -1), (47, 4194304), (48, 524288), (49, 2097152), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 67108864), (6, -1), (7, -1), (8, -1), (9, 32768), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, 67108864), (24, -1), (25, -1), (26, -1), (27, 4096), (28, -1), (29, -1), (30, 65536), (31, 1024), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, 512), (38, -1), (39, 512), (40, 8388608), (41, -1), (42, 16384), (43, 16384), (44, -1), (45, -1), (46, -1), (47, 4194304), (48, 524288), (49, 2097152), (50, -1), (51, -1), (52, -1)]

Covered at level 6 : set()

After reduction : 
 pending  : [23, 37, 9, 30, 31, 39, 42, 43, 47, 48, 49, 40, 5, 27]
 solution : [7, 3, 26, 33]


Solution : [7, 3, 26, 33] has cost 26.


Before backtrack at level 6
 pending : [23, 37, 9, 30, 31, 39, 42, 43, 47, 48, 49, 40, 5, 27]
 solution : [7, 3, 26, 33]

After backtrack at level 6
 pending : [23, 37, 9, 30, 31, 39, 42, 43, 47, 48, 49, 40, 5, 27, 34, 35, 41]
 solution : [7, 3, 26, 33]


Invert decision for 33 at level 5


New level: 6
 pending : [23, 37, 9, 30, 31, 39, 42, 43, 47, 48, 49, 40, 5, 27, 34, 35, 41]
 solution : [7, 3, 26]


Before reduction : 
 pending  : [23, 37, 9, 30, 31, 39, 42, 43, 47, 48, 49, 40, 5, 27, 34, 35, 41]
 solution : [7, 3, 26]

Essensial at level 6 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 67108864), (6, -1), (7, -1), (8, -1), (9, 32768), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, 67108864), (24, -1), (25, -1), (26, -1), (27, 4096), (28, -1), (29, -1), (30, 65536), (31, 1024), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, 512), (38, -1), (39, 512), (40, 8388608), (41, -1), (42, 16384), (43, 16384), (44, -1), (45, -1), (46, -1), (47, 4194304), (48, 524288), (49, 2097152), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 67108864), (6, -1), (7, -1), (8, -1), (9, 131072), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, 67108864), (24, -1), (25, -1), (26, -1), (27, 268435456), (28, -1), (29, -1), (30, 262144), (31, 4096), (32, -1), (33, -1), (34, 1048576), (35, 8192), (36, -1), (37, 1024), (38, -1), (39, 2048), (40, 33554432), (41, 2048), (42, 65536), (43, 65536), (44, -1), (45, -1), (46, -1), (47, 16777216), (48, 2097152), (49, 8388608), (50, -1), (51, -1), (52, -1)]

Covered at level 6 : set()

After reduction : 
 pending  : [23, 37, 9, 30, 31, 39, 42, 43, 47, 48, 49, 40, 5, 27, 34, 35, 41]
 solution : [7, 3, 26]


Solution : [7, 3, 26] has cost 13.


Decide in level 6 among pending : [23, 37, 9, 30, 31, 39, 42, 43, 47, 48, 49, 40, 5, 27, 34, 35, 41]

Coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 67108864), (6, -1), (7, -1), (8, -1), (9, 131072), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, 67108864), (24, -1), (25, -1), (26, -1), (27, 268435456), (28, -1), (29, -1), (30, 262144), (31, 4096), (32, -1), (33, -1), (34, 1048576), (35, 8192), (36, -1), (37, 1024), (38, -1), (39, 2048), (40, 33554432), (41, 2048), (42, 65536), (43, 65536), (44, -1), (45, -1), (46, -1), (47, 16777216), (48, 2097152), (49, 8388608), (50, -1), (51, -1), (52, -1)]

Decide 27 with phase True at level 6

After decision at level 6
 pending : [23, 37, 9, 30, 31, 39, 42, 43, 47, 48, 49, 40, 5, 34, 35, 41]
 solution : [7, 3, 26, 27]


New level: 7
 pending : [23, 37, 9, 30, 31, 39, 42, 43, 47, 48, 49, 40, 5, 34, 35, 41]
 solution : [7, 3, 26, 27]


Before reduction : 
 pending  : [23, 37, 9, 30, 31, 39, 42, 43, 47, 48, 49, 40, 5, 34, 35, 41]
 solution : [7, 3, 26, 27]

Essensial at level 7 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 67108864), (6, -1), (7, -1), (8, -1), (9, 131072), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, 67108864), (24, -1), (25, -1), (26, -1), (27, 268435456), (28, -1), (29, -1), (30, 262144), (31, 4096), (32, -1), (33, -1), (34, 1048576), (35, 8192), (36, -1), (37, 1024), (38, -1), (39, 2048), (40, 33554432), (41, 2048), (42, 65536), (43, 65536), (44, -1), (45, -1), (46, -1), (47, 16777216), (48, 2097152), (49, 8388608), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 16777216), (6, -1), (7, -1), (8, -1), (9, 32768), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, 16777216), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, 65536), (31, 1024), (32, -1), (33, -1), (34, 0), (35, 0), (36, -1), (37, 512), (38, -1), (39, 512), (40, 16777216), (41, 0), (42, 16384), (43, 16384), (44, -1), (45, -1), (46, -1), (47, 4194304), (48, 524288), (49, 4194304), (50, -1), (51, -1), (52, -1)]

Covered at level 7 : {41, 34, 35}

After reduction : 
 pending  : [23, 37, 9, 30, 31, 39, 42, 43, 47, 48, 49, 40, 5]
 solution : [7, 3, 26, 27]


Before reduction : 
 pending  : [23, 37, 9, 30, 31, 39, 42, 43, 47, 48, 49, 40, 5]
 solution : [7, 3, 26, 27]

Essensial at level 7 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 16777216), (6, -1), (7, -1), (8, -1), (9, 32768), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, 16777216), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, 65536), (31, 1024), (32, -1), (33, -1), (34, 0), (35, 0), (36, -1), (37, 512), (38, -1), (39, 512), (40, 16777216), (41, 0), (42, 16384), (43, 16384), (44, -1), (45, -1), (46, -1), (47, 4194304), (48, 524288), (49, 4194304), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 16777216), (6, -1), (7, -1), (8, -1), (9, 32768), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, 16777216), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, 65536), (31, 1024), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, 512), (38, -1), (39, 512), (40, 16777216), (41, -1), (42, 16384), (43, 16384), (44, -1), (45, -1), (46, -1), (47, 4194304), (48, 524288), (49, 4194304), (50, -1), (51, -1), (52, -1)]

Covered at level 7 : set()

After reduction : 
 pending  : [23, 37, 9, 30, 31, 39, 42, 43, 47, 48, 49, 40, 5]
 solution : [7, 3, 26, 27]


Solution : [7, 3, 26, 27] has cost 20.


Decide in level 7 among pending : [23, 37, 9, 30, 31, 39, 42, 43, 47, 48, 49, 40, 5]

Coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 16777216), (6, -1), (7, -1), (8, -1), (9, 32768), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, 16777216), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, 65536), (31, 1024), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, 512), (38, -1), (39, 512), (40, 16777216), (41, -1), (42, 16384), (43, 16384), (44, -1), (45, -1), (46, -1), (47, 4194304), (48, 524288), (49, 4194304), (50, -1), (51, -1), (52, -1)]

Decide 23 with phase True at level 7

After decision at level 7
 pending : [37, 9, 30, 31, 39, 42, 43, 47, 48, 49, 40, 5]
 solution : [7, 3, 26, 27, 23]


New level: 8
 pending : [37, 9, 30, 31, 39, 42, 43, 47, 48, 49, 40, 5]
 solution : [7, 3, 26, 27, 23]


Before reduction : 
 pending  : [37, 9, 30, 31, 39, 42, 43, 47, 48, 49, 40, 5]
 solution : [7, 3, 26, 27, 23]

Essensial at level 8 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 16777216), (6, -1), (7, -1), (8, -1), (9, 32768), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, 16777216), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, 65536), (31, 1024), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, 512), (38, -1), (39, 512), (40, 16777216), (41, -1), (42, 16384), (43, 16384), (44, -1), (45, -1), (46, -1), (47, 4194304), (48, 524288), (49, 4194304), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 0), (6, -1), (7, -1), (8, -1), (9, 0), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, 0), (31, 0), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, 0), (38, -1), (39, 0), (40, 0), (41, -1), (42, 0), (43, 0), (44, -1), (45, -1), (46, -1), (47, 0), (48, 0), (49, 0), (50, -1), (51, -1), (52, -1)]

Covered at level 8 : {37, 5, 39, 40, 9, 42, 43, 47, 48, 49, 30, 31}

After reduction : 
 pending  : []
 solution : [7, 3, 26, 27, 23]


Before reduction : 
 pending  : []
 solution : [7, 3, 26, 27, 23]

Essensial at level 8 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 0), (6, -1), (7, -1), (8, -1), (9, 0), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, 0), (31, 0), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, 0), (38, -1), (39, 0), (40, 0), (41, -1), (42, 0), (43, 0), (44, -1), (45, -1), (46, -1), (47, 0), (48, 0), (49, 0), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 8 : set()

After reduction : 
 pending  : []
 solution : [7, 3, 26, 27, 23]


Solution : [7, 3, 26, 27, 23] has cost 27.


Before backtrack at level 8
 pending : []
 solution : [7, 3, 26, 27, 23]

After backtrack at level 8
 pending : [37, 9, 30, 31, 39, 42, 43, 47, 48, 49, 40, 5]
 solution : [7, 3, 26, 27, 23]


Invert decision for 23 at level 7


New level: 8
 pending : [37, 9, 30, 31, 39, 42, 43, 47, 48, 49, 40, 5]
 solution : [7, 3, 26, 27]


Before reduction : 
 pending  : [37, 9, 30, 31, 39, 42, 43, 47, 48, 49, 40, 5]
 solution : [7, 3, 26, 27]

Essensial at level 8 : {5}

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, 0), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, 0), (31, 0), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, 0), (38, -1), (39, 0), (40, 0), (41, -1), (42, 0), (43, 0), (44, -1), (45, -1), (46, -1), (47, 0), (48, 0), (49, 0), (50, -1), (51, -1), (52, -1)]

Covered at level 8 : {37, 39, 40, 9, 42, 43, 47, 48, 49, 30, 31}

After reduction : 
 pending  : []
 solution : [7, 3, 26, 27, 5]


Before reduction : 
 pending  : []
 solution : [7, 3, 26, 27, 5]

Essensial at level 8 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, 0), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, 0), (31, 0), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, 0), (38, -1), (39, 0), (40, 0), (41, -1), (42, 0), (43, 0), (44, -1), (45, -1), (46, -1), (47, 0), (48, 0), (49, 0), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 8 : set()

After reduction : 
 pending  : []
 solution : [7, 3, 26, 27, 5]


Solution : [7, 3, 26, 27, 5] has cost 24.


Before backtrack at level 8
 pending : []
 solution : [7, 3, 26, 27, 5]

After backtrack at level 8
 pending : [5, 37, 9, 30, 31, 39, 42, 43, 47, 48, 49, 40]
 solution : [7, 3, 26, 27]


Before backtrack at level 7
 pending : [5, 37, 9, 30, 31, 39, 42, 43, 47, 48, 49, 40]
 solution : [7, 3, 26, 27]

After backtrack at level 7
 pending : [5, 37, 9, 30, 31, 39, 42, 43, 47, 48, 49, 40, 34, 35, 41, 23]
 solution : [7, 3, 26, 27]


Invert decision for 27 at level 6


New level: 7
 pending : [5, 37, 9, 30, 31, 39, 42, 43, 47, 48, 49, 40, 34, 35, 41, 23]
 solution : [7, 3, 26]


Before reduction : 
 pending  : [5, 37, 9, 30, 31, 39, 42, 43, 47, 48, 49, 40, 34, 35, 41, 23]
 solution : [7, 3, 26]

Essensial at level 7 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 67108864), (6, -1), (7, -1), (8, -1), (9, 131072), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, 67108864), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, 262144), (31, 4096), (32, -1), (33, -1), (34, 1048576), (35, 8192), (36, -1), (37, 1024), (38, -1), (39, 2048), (40, 33554432), (41, 2048), (42, 65536), (43, 65536), (44, -1), (45, -1), (46, -1), (47, 16777216), (48, 2097152), (49, 8388608), (50, -1), (51, -1), (52, -1)]

Covered at level 7 : set()

After reduction : 
 pending  : [5, 37, 9, 30, 31, 39, 42, 43, 47, 48, 49, 40, 34, 35, 41, 23]
 solution : [7, 3, 26]


Solution : [7, 3, 26] has cost 13.


Decide in level 7 among pending : [5, 37, 9, 30, 31, 39, 42, 43, 47, 48, 49, 40, 34, 35, 41, 23]

Coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 67108864), (6, -1), (7, -1), (8, -1), (9, 131072), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, 67108864), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, 262144), (31, 4096), (32, -1), (33, -1), (34, 1048576), (35, 8192), (36, -1), (37, 1024), (38, -1), (39, 2048), (40, 33554432), (41, 2048), (42, 65536), (43, 65536), (44, -1), (45, -1), (46, -1), (47, 16777216), (48, 2097152), (49, 8388608), (50, -1), (51, -1), (52, -1)]

Decide 5 with phase True at level 7

After decision at level 7
 pending : [37, 9, 30, 31, 39, 42, 43, 47, 48, 49, 40, 34, 35, 41, 23]
 solution : [7, 3, 26, 5]


New level: 8
 pending : [37, 9, 30, 31, 39, 42, 43, 47, 48, 49, 40, 34, 35, 41, 23]
 solution : [7, 3, 26, 5]


Before reduction : 
 pending  : [37, 9, 30, 31, 39, 42, 43, 47, 48, 49, 40, 34, 35, 41, 23]
 solution : [7, 3, 26, 5]

Essensial at level 8 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 67108864), (6, -1), (7, -1), (8, -1), (9, 131072), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, 67108864), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, 262144), (31, 4096), (32, -1), (33, -1), (34, 1048576), (35, 8192), (36, -1), (37, 1024), (38, -1), (39, 2048), (40, 33554432), (41, 2048), (42, 65536), (43, 65536), (44, -1), (45, -1), (46, -1), (47, 16777216), (48, 2097152), (49, 8388608), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, 0), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, 0), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, 0), (31, 0), (32, -1), (33, -1), (34, 0), (35, 0), (36, -1), (37, 0), (38, -1), (39, 0), (40, 0), (41, 0), (42, 0), (43, 0), (44, -1), (45, -1), (46, -1), (47, 0), (48, 0), (49, 0), (50, -1), (51, -1), (52, -1)]

Covered at level 8 : {34, 35, 37, 39, 40, 9, 42, 43, 41, 47, 48, 49, 23, 30, 31}

After reduction : 
 pending  : []
 solution : [7, 3, 26, 5]


Before reduction : 
 pending  : []
 solution : [7, 3, 26, 5]

Essensial at level 8 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, 0), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, 0), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, 0), (31, 0), (32, -1), (33, -1), (34, 0), (35, 0), (36, -1), (37, 0), (38, -1), (39, 0), (40, 0), (41, 0), (42, 0), (43, 0), (44, -1), (45, -1), (46, -1), (47, 0), (48, 0), (49, 0), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 8 : set()

After reduction : 
 pending  : []
 solution : [7, 3, 26, 5]


Solution : [7, 3, 26, 5] has cost 17.


Before backtrack at level 8
 pending : []
 solution : [7, 3, 26, 5]

After backtrack at level 8
 pending : [37, 9, 30, 31, 39, 42, 43, 47, 48, 49, 40, 34, 35, 41, 23]
 solution : [7, 3, 26, 5]


Invert decision for 5 at level 7


New level: 8
 pending : [37, 9, 30, 31, 39, 42, 43, 47, 48, 49, 40, 34, 35, 41, 23]
 solution : [7, 3, 26]


Before reduction : 
 pending  : [37, 9, 30, 31, 39, 42, 43, 47, 48, 49, 40, 34, 35, 41, 23]
 solution : [7, 3, 26]

Essensial at level 8 : {23}

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, 0), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, 0), (31, 0), (32, -1), (33, -1), (34, 0), (35, 0), (36, -1), (37, 0), (38, -1), (39, 0), (40, 0), (41, 0), (42, 0), (43, 0), (44, -1), (45, -1), (46, -1), (47, 0), (48, 0), (49, 0), (50, -1), (51, -1), (52, -1)]

Covered at level 8 : {34, 35, 37, 39, 40, 9, 42, 43, 41, 47, 48, 49, 30, 31}

After reduction : 
 pending  : []
 solution : [7, 3, 26, 23]


Before reduction : 
 pending  : []
 solution : [7, 3, 26, 23]

Essensial at level 8 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, 0), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, 0), (31, 0), (32, -1), (33, -1), (34, 0), (35, 0), (36, -1), (37, 0), (38, -1), (39, 0), (40, 0), (41, 0), (42, 0), (43, 0), (44, -1), (45, -1), (46, -1), (47, 0), (48, 0), (49, 0), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 8 : set()

After reduction : 
 pending  : []
 solution : [7, 3, 26, 23]


Solution : [7, 3, 26, 23] has cost 20.


Before backtrack at level 8
 pending : []
 solution : [7, 3, 26, 23]

After backtrack at level 8
 pending : [23, 37, 9, 30, 31, 39, 42, 43, 47, 48, 49, 40, 34, 35, 41]
 solution : [7, 3, 26]


Before backtrack at level 7
 pending : [23, 37, 9, 30, 31, 39, 42, 43, 47, 48, 49, 40, 34, 35, 41]
 solution : [7, 3, 26]

After backtrack at level 7
 pending : [23, 37, 9, 30, 31, 39, 42, 43, 47, 48, 49, 40, 34, 35, 41, 5]
 solution : [7, 3, 26]


Before backtrack at level 6
 pending : [23, 37, 9, 30, 31, 39, 42, 43, 47, 48, 49, 40, 34, 35, 41, 5]
 solution : [7, 3, 26]

After backtrack at level 6
 pending : [23, 37, 9, 30, 31, 39, 42, 43, 47, 48, 49, 40, 34, 35, 41, 5, 27]
 solution : [7, 3, 26]


Before backtrack at level 5
 pending : [23, 37, 9, 30, 31, 39, 42, 43, 47, 48, 49, 40, 34, 35, 41, 5, 27]
 solution : [7, 3, 26]

After backtrack at level 5
 pending : [23, 37, 9, 30, 31, 39, 42, 43, 47, 48, 49, 40, 34, 35, 41, 5, 27, 33]
 solution : [7, 3, 26]


Before backtrack at level 4
 pending : [23, 37, 9, 30, 31, 39, 42, 43, 47, 48, 49, 40, 34, 35, 41, 5, 27, 33]
 solution : [7, 3, 26]

After backtrack at level 4
 pending : [23, 37, 9, 30, 31, 39, 42, 43, 47, 48, 49, 40, 34, 35, 41, 5, 27, 33, 25, 36, 2, 15, 13, 20, 19, 11, 17, 12, 18, 16, 28]
 solution : [7, 3, 26]


Invert decision for 26 at level 3


New level: 4
 pending : [23, 37, 9, 30, 31, 39, 42, 43, 47, 48, 49, 40, 34, 35, 41, 5, 27, 33, 25, 36, 2, 15, 13, 20, 19, 11, 17, 12, 18, 16, 28]
 solution : [7, 3]


Before reduction : 
 pending  : [23, 37, 9, 30, 31, 39, 42, 43, 47, 48, 49, 40, 34, 35, 41, 5, 27, 33, 25, 36, 2, 15, 13, 20, 19, 11, 17, 12, 18, 16, 28]
 solution : [7, 3]

Essensial at level 4 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 524288), (3, -1), (4, -1), (5, 67108864), (6, -1), (7, -1), (8, -1), (9, 524288), (10, -1), (11, 16777216), (12, 33554432), (13, 262144), (14, -1), (15, 557056), (16, 1073741824), (17, 8388608), (18, 536870912), (19, 4194304), (20, 131072), (21, -1), (22, -1), (23, 67108864), (24, -1), (25, 2097152), (26, -1), (27, 268435456), (28, 536870912), (29, -1), (30, 524288), (31, 8192), (32, -1), (33, 536870912), (34, 1048576), (35, 8192), (36, 2097152), (37, 67108864), (38, -1), (39, 8192), (40, 67108864), (41, 134217728), (42, 262144), (43, 262144), (44, -1), (45, -1), (46, -1), (47, 33554432), (48, 8388608), (49, 33554432), (50, -1), (51, -1), (52, -1)]

Covered at level 4 : set()

After reduction : 
 pending  : [23, 37, 9, 30, 31, 39, 42, 43, 47, 48, 49, 40, 34, 35, 41, 5, 27, 33, 25, 36, 2, 15, 13, 20, 19, 11, 17, 12, 18, 16, 28]
 solution : [7, 3]


Solution : [7, 3] has cost 9.


Decide in level 4 among pending : [23, 37, 9, 30, 31, 39, 42, 43, 47, 48, 49, 40, 34, 35, 41, 5, 27, 33, 25, 36, 2, 15, 13, 20, 19, 11, 17, 12, 18, 16, 28]

Coverage : [(0, -1), (1, -1), (2, 524288), (3, -1), (4, -1), (5, 67108864), (6, -1), (7, -1), (8, -1), (9, 524288), (10, -1), (11, 16777216), (12, 33554432), (13, 262144), (14, -1), (15, 557056), (16, 1073741824), (17, 8388608), (18, 536870912), (19, 4194304), (20, 131072), (21, -1), (22, -1), (23, 67108864), (24, -1), (25, 2097152), (26, -1), (27, 268435456), (28, 536870912), (29, -1), (30, 524288), (31, 8192), (32, -1), (33, 536870912), (34, 1048576), (35, 8192), (36, 2097152), (37, 67108864), (38, -1), (39, 8192), (40, 67108864), (41, 134217728), (42, 262144), (43, 262144), (44, -1), (45, -1), (46, -1), (47, 33554432), (48, 8388608), (49, 33554432), (50, -1), (51, -1), (52, -1)]

Decide 16 with phase True at level 4

After decision at level 4
 pending : [23, 37, 9, 30, 31, 39, 42, 43, 47, 48, 49, 40, 34, 35, 41, 5, 27, 33, 25, 36, 2, 15, 13, 20, 19, 11, 17, 12, 18, 28]
 solution : [7, 3, 16]


New level: 5
 pending : [23, 37, 9, 30, 31, 39, 42, 43, 47, 48, 49, 40, 34, 35, 41, 5, 27, 33, 25, 36, 2, 15, 13, 20, 19, 11, 17, 12, 18, 28]
 solution : [7, 3, 16]


Before reduction : 
 pending  : [23, 37, 9, 30, 31, 39, 42, 43, 47, 48, 49, 40, 34, 35, 41, 5, 27, 33, 25, 36, 2, 15, 13, 20, 19, 11, 17, 12, 18, 28]
 solution : [7, 3, 16]

Essensial at level 5 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 524288), (3, -1), (4, -1), (5, 67108864), (6, -1), (7, -1), (8, -1), (9, 524288), (10, -1), (11, 16777216), (12, 33554432), (13, 262144), (14, -1), (15, 557056), (16, 1073741824), (17, 8388608), (18, 536870912), (19, 4194304), (20, 131072), (21, -1), (22, -1), (23, 67108864), (24, -1), (25, 2097152), (26, -1), (27, 268435456), (28, 536870912), (29, -1), (30, 524288), (31, 8192), (32, -1), (33, 536870912), (34, 1048576), (35, 8192), (36, 2097152), (37, 67108864), (38, -1), (39, 8192), (40, 67108864), (41, 134217728), (42, 262144), (43, 262144), (44, -1), (45, -1), (46, -1), (47, 33554432), (48, 8388608), (49, 33554432), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 0), (3, -1), (4, -1), (5, 67108864), (6, -1), (7, -1), (8, -1), (9, 131072), (10, -1), (11, 0), (12, 0), (13, 0), (14, -1), (15, 0), (16, -1), (17, 0), (18, 0), (19, 0), (20, 0), (21, -1), (22, -1), (23, 67108864), (24, -1), (25, 0), (26, -1), (27, 268435456), (28, 536870912), (29, -1), (30, 262144), (31, 4096), (32, -1), (33, 536870912), (34, 1048576), (35, 8192), (36, 0), (37, 1024), (38, -1), (39, 2048), (40, 33554432), (41, 2048), (42, 65536), (43, 65536), (44, -1), (45, -1), (46, -1), (47, 16777216), (48, 2097152), (49, 33554432), (50, -1), (51, -1), (52, -1)]

Covered at level 5 : {2, 36, 11, 12, 13, 15, 17, 18, 19, 20, 25}

After reduction : 
 pending  : [23, 37, 9, 30, 31, 39, 42, 43, 47, 48, 49, 40, 34, 35, 41, 5, 27, 33, 28]
 solution : [7, 3, 16]


Before reduction : 
 pending  : [23, 37, 9, 30, 31, 39, 42, 43, 47, 48, 49, 40, 34, 35, 41, 5, 27, 33, 28]
 solution : [7, 3, 16]

Essensial at level 5 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 0), (3, -1), (4, -1), (5, 67108864), (6, -1), (7, -1), (8, -1), (9, 131072), (10, -1), (11, 0), (12, 0), (13, 0), (14, -1), (15, 0), (16, -1), (17, 0), (18, 0), (19, 0), (20, 0), (21, -1), (22, -1), (23, 67108864), (24, -1), (25, 0), (26, -1), (27, 268435456), (28, 536870912), (29, -1), (30, 262144), (31, 4096), (32, -1), (33, 536870912), (34, 1048576), (35, 8192), (36, 0), (37, 1024), (38, -1), (39, 2048), (40, 33554432), (41, 2048), (42, 65536), (43, 65536), (44, -1), (45, -1), (46, -1), (47, 16777216), (48, 2097152), (49, 33554432), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 67108864), (6, -1), (7, -1), (8, -1), (9, 131072), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, 67108864), (24, -1), (25, -1), (26, -1), (27, 268435456), (28, 536870912), (29, -1), (30, 262144), (31, 4096), (32, -1), (33, 536870912), (34, 1048576), (35, 8192), (36, -1), (37, 1024), (38, -1), (39, 2048), (40, 33554432), (41, 2048), (42, 65536), (43, 65536), (44, -1), (45, -1), (46, -1), (47, 16777216), (48, 2097152), (49, 33554432), (50, -1), (51, -1), (52, -1)]

Covered at level 5 : set()

After reduction : 
 pending  : [23, 37, 9, 30, 31, 39, 42, 43, 47, 48, 49, 40, 34, 35, 41, 5, 27, 33, 28]
 solution : [7, 3, 16]


Solution : [7, 3, 16] has cost 16.


Decide in level 5 among pending : [23, 37, 9, 30, 31, 39, 42, 43, 47, 48, 49, 40, 34, 35, 41, 5, 27, 33, 28]

Coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 67108864), (6, -1), (7, -1), (8, -1), (9, 131072), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, 67108864), (24, -1), (25, -1), (26, -1), (27, 268435456), (28, 536870912), (29, -1), (30, 262144), (31, 4096), (32, -1), (33, 536870912), (34, 1048576), (35, 8192), (36, -1), (37, 1024), (38, -1), (39, 2048), (40, 33554432), (41, 2048), (42, 65536), (43, 65536), (44, -1), (45, -1), (46, -1), (47, 16777216), (48, 2097152), (49, 33554432), (50, -1), (51, -1), (52, -1)]

Decide 33 with phase True at level 5

After decision at level 5
 pending : [23, 37, 9, 30, 31, 39, 42, 43, 47, 48, 49, 40, 34, 35, 41, 5, 27, 28]
 solution : [7, 3, 16, 33]


New level: 6
 pending : [23, 37, 9, 30, 31, 39, 42, 43, 47, 48, 49, 40, 34, 35, 41, 5, 27, 28]
 solution : [7, 3, 16, 33]


Before reduction : 
 pending  : [23, 37, 9, 30, 31, 39, 42, 43, 47, 48, 49, 40, 34, 35, 41, 5, 27, 28]
 solution : [7, 3, 16, 33]

Essensial at level 6 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 67108864), (6, -1), (7, -1), (8, -1), (9, 131072), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, 67108864), (24, -1), (25, -1), (26, -1), (27, 268435456), (28, 536870912), (29, -1), (30, 262144), (31, 4096), (32, -1), (33, 536870912), (34, 1048576), (35, 8192), (36, -1), (37, 1024), (38, -1), (39, 2048), (40, 33554432), (41, 2048), (42, 65536), (43, 65536), (44, -1), (45, -1), (46, -1), (47, 16777216), (48, 2097152), (49, 33554432), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 67108864), (6, -1), (7, -1), (8, -1), (9, 32768), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, 67108864), (24, -1), (25, -1), (26, -1), (27, 4096), (28, 524288), (29, -1), (30, 65536), (31, 1024), (32, -1), (33, -1), (34, 0), (35, 0), (36, -1), (37, 512), (38, -1), (39, 512), (40, 8388608), (41, 0), (42, 16384), (43, 16384), (44, -1), (45, -1), (46, -1), (47, 4194304), (48, 524288), (49, 8388608), (50, -1), (51, -1), (52, -1)]

Covered at level 6 : {41, 34, 35}

After reduction : 
 pending  : [23, 37, 9, 30, 31, 39, 42, 43, 47, 48, 49, 40, 5, 27, 28]
 solution : [7, 3, 16, 33]


Before reduction : 
 pending  : [23, 37, 9, 30, 31, 39, 42, 43, 47, 48, 49, 40, 5, 27, 28]
 solution : [7, 3, 16, 33]

Essensial at level 6 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 67108864), (6, -1), (7, -1), (8, -1), (9, 32768), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, 67108864), (24, -1), (25, -1), (26, -1), (27, 4096), (28, 524288), (29, -1), (30, 65536), (31, 1024), (32, -1), (33, -1), (34, 0), (35, 0), (36, -1), (37, 512), (38, -1), (39, 512), (40, 8388608), (41, 0), (42, 16384), (43, 16384), (44, -1), (45, -1), (46, -1), (47, 4194304), (48, 524288), (49, 8388608), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 67108864), (6, -1), (7, -1), (8, -1), (9, 32768), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, 67108864), (24, -1), (25, -1), (26, -1), (27, 4096), (28, 524288), (29, -1), (30, 65536), (31, 1024), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, 512), (38, -1), (39, 512), (40, 8388608), (41, -1), (42, 16384), (43, 16384), (44, -1), (45, -1), (46, -1), (47, 4194304), (48, 524288), (49, 8388608), (50, -1), (51, -1), (52, -1)]

Covered at level 6 : set()

After reduction : 
 pending  : [23, 37, 9, 30, 31, 39, 42, 43, 47, 48, 49, 40, 5, 27, 28]
 solution : [7, 3, 16, 33]


Solution : [7, 3, 16, 33] has cost 29.


Before backtrack at level 6
 pending : [23, 37, 9, 30, 31, 39, 42, 43, 47, 48, 49, 40, 5, 27, 28]
 solution : [7, 3, 16, 33]

After backtrack at level 6
 pending : [23, 37, 9, 30, 31, 39, 42, 43, 47, 48, 49, 40, 5, 27, 28, 34, 35, 41]
 solution : [7, 3, 16, 33]


Invert decision for 33 at level 5


New level: 6
 pending : [23, 37, 9, 30, 31, 39, 42, 43, 47, 48, 49, 40, 5, 27, 28, 34, 35, 41]
 solution : [7, 3, 16]


Before reduction : 
 pending  : [23, 37, 9, 30, 31, 39, 42, 43, 47, 48, 49, 40, 5, 27, 28, 34, 35, 41]
 solution : [7, 3, 16]

Essensial at level 6 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 67108864), (6, -1), (7, -1), (8, -1), (9, 32768), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, 67108864), (24, -1), (25, -1), (26, -1), (27, 4096), (28, 524288), (29, -1), (30, 65536), (31, 1024), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, 512), (38, -1), (39, 512), (40, 8388608), (41, -1), (42, 16384), (43, 16384), (44, -1), (45, -1), (46, -1), (47, 4194304), (48, 524288), (49, 8388608), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 67108864), (6, -1), (7, -1), (8, -1), (9, 131072), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, 67108864), (24, -1), (25, -1), (26, -1), (27, 268435456), (28, 536870912), (29, -1), (30, 262144), (31, 4096), (32, -1), (33, -1), (34, 1048576), (35, 8192), (36, -1), (37, 1024), (38, -1), (39, 2048), (40, 33554432), (41, 2048), (42, 65536), (43, 65536), (44, -1), (45, -1), (46, -1), (47, 16777216), (48, 2097152), (49, 33554432), (50, -1), (51, -1), (52, -1)]

Covered at level 6 : set()

After reduction : 
 pending  : [23, 37, 9, 30, 31, 39, 42, 43, 47, 48, 49, 40, 5, 27, 28, 34, 35, 41]
 solution : [7, 3, 16]


Solution : [7, 3, 16] has cost 16.


Decide in level 6 among pending : [23, 37, 9, 30, 31, 39, 42, 43, 47, 48, 49, 40, 5, 27, 28, 34, 35, 41]

Coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 67108864), (6, -1), (7, -1), (8, -1), (9, 131072), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, 67108864), (24, -1), (25, -1), (26, -1), (27, 268435456), (28, 536870912), (29, -1), (30, 262144), (31, 4096), (32, -1), (33, -1), (34, 1048576), (35, 8192), (36, -1), (37, 1024), (38, -1), (39, 2048), (40, 33554432), (41, 2048), (42, 65536), (43, 65536), (44, -1), (45, -1), (46, -1), (47, 16777216), (48, 2097152), (49, 33554432), (50, -1), (51, -1), (52, -1)]

Decide 28 with phase True at level 6

After decision at level 6
 pending : [23, 37, 9, 30, 31, 39, 42, 43, 47, 48, 49, 40, 5, 27, 34, 35, 41]
 solution : [7, 3, 16, 28]


New level: 7
 pending : [23, 37, 9, 30, 31, 39, 42, 43, 47, 48, 49, 40, 5, 27, 34, 35, 41]
 solution : [7, 3, 16, 28]


Before reduction : 
 pending  : [23, 37, 9, 30, 31, 39, 42, 43, 47, 48, 49, 40, 5, 27, 34, 35, 41]
 solution : [7, 3, 16, 28]

Essensial at level 7 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 67108864), (6, -1), (7, -1), (8, -1), (9, 131072), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, 67108864), (24, -1), (25, -1), (26, -1), (27, 268435456), (28, 536870912), (29, -1), (30, 262144), (31, 4096), (32, -1), (33, -1), (34, 1048576), (35, 8192), (36, -1), (37, 1024), (38, -1), (39, 2048), (40, 33554432), (41, 2048), (42, 65536), (43, 65536), (44, -1), (45, -1), (46, -1), (47, 16777216), (48, 2097152), (49, 33554432), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 67108864), (6, -1), (7, -1), (8, -1), (9, 131072), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, 67108864), (24, -1), (25, -1), (26, -1), (27, 134217728), (28, -1), (29, -1), (30, 262144), (31, 4096), (32, -1), (33, -1), (34, 524288), (35, 4096), (36, -1), (37, 1024), (38, -1), (39, 2048), (40, 33554432), (41, 2048), (42, 65536), (43, 65536), (44, -1), (45, -1), (46, -1), (47, 16777216), (48, 2097152), (49, 33554432), (50, -1), (51, -1), (52, -1)]

Covered at level 7 : set()

After reduction : 
 pending  : [23, 37, 9, 30, 31, 39, 42, 43, 47, 48, 49, 40, 5, 27, 34, 35, 41]
 solution : [7, 3, 16, 28]


Solution : [7, 3, 16, 28] has cost 20.


Before backtrack at level 7
 pending : [23, 37, 9, 30, 31, 39, 42, 43, 47, 48, 49, 40, 5, 27, 34, 35, 41]
 solution : [7, 3, 16, 28]

After backtrack at level 7
 pending : [23, 37, 9, 30, 31, 39, 42, 43, 47, 48, 49, 40, 5, 27, 34, 35, 41]
 solution : [7, 3, 16, 28]


Invert decision for 28 at level 6


New level: 7
 pending : [23, 37, 9, 30, 31, 39, 42, 43, 47, 48, 49, 40, 5, 27, 34, 35, 41]
 solution : [7, 3, 16]


Before reduction : 
 pending  : [23, 37, 9, 30, 31, 39, 42, 43, 47, 48, 49, 40, 5, 27, 34, 35, 41]
 solution : [7, 3, 16]

Essensial at level 7 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 67108864), (6, -1), (7, -1), (8, -1), (9, 131072), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, 67108864), (24, -1), (25, -1), (26, -1), (27, 134217728), (28, -1), (29, -1), (30, 262144), (31, 4096), (32, -1), (33, -1), (34, 524288), (35, 4096), (36, -1), (37, 1024), (38, -1), (39, 2048), (40, 33554432), (41, 2048), (42, 65536), (43, 65536), (44, -1), (45, -1), (46, -1), (47, 16777216), (48, 2097152), (49, 33554432), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 67108864), (6, -1), (7, -1), (8, -1), (9, 131072), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, 67108864), (24, -1), (25, -1), (26, -1), (27, 268435456), (28, -1), (29, -1), (30, 262144), (31, 4096), (32, -1), (33, -1), (34, 1048576), (35, 8192), (36, -1), (37, 1024), (38, -1), (39, 2048), (40, 33554432), (41, 2048), (42, 65536), (43, 65536), (44, -1), (45, -1), (46, -1), (47, 16777216), (48, 2097152), (49, 33554432), (50, -1), (51, -1), (52, -1)]

Covered at level 7 : set()

After reduction : 
 pending  : [23, 37, 9, 30, 31, 39, 42, 43, 47, 48, 49, 40, 5, 27, 34, 35, 41]
 solution : [7, 3, 16]


Solution : [7, 3, 16] has cost 16.


Decide in level 7 among pending : [23, 37, 9, 30, 31, 39, 42, 43, 47, 48, 49, 40, 5, 27, 34, 35, 41]

Coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 67108864), (6, -1), (7, -1), (8, -1), (9, 131072), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, 67108864), (24, -1), (25, -1), (26, -1), (27, 268435456), (28, -1), (29, -1), (30, 262144), (31, 4096), (32, -1), (33, -1), (34, 1048576), (35, 8192), (36, -1), (37, 1024), (38, -1), (39, 2048), (40, 33554432), (41, 2048), (42, 65536), (43, 65536), (44, -1), (45, -1), (46, -1), (47, 16777216), (48, 2097152), (49, 33554432), (50, -1), (51, -1), (52, -1)]

Decide 27 with phase True at level 7

After decision at level 7
 pending : [23, 37, 9, 30, 31, 39, 42, 43, 47, 48, 49, 40, 5, 34, 35, 41]
 solution : [7, 3, 16, 27]


New level: 8
 pending : [23, 37, 9, 30, 31, 39, 42, 43, 47, 48, 49, 40, 5, 34, 35, 41]
 solution : [7, 3, 16, 27]


Before reduction : 
 pending  : [23, 37, 9, 30, 31, 39, 42, 43, 47, 48, 49, 40, 5, 34, 35, 41]
 solution : [7, 3, 16, 27]

Essensial at level 8 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 67108864), (6, -1), (7, -1), (8, -1), (9, 131072), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, 67108864), (24, -1), (25, -1), (26, -1), (27, 268435456), (28, -1), (29, -1), (30, 262144), (31, 4096), (32, -1), (33, -1), (34, 1048576), (35, 8192), (36, -1), (37, 1024), (38, -1), (39, 2048), (40, 33554432), (41, 2048), (42, 65536), (43, 65536), (44, -1), (45, -1), (46, -1), (47, 16777216), (48, 2097152), (49, 33554432), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 16777216), (6, -1), (7, -1), (8, -1), (9, 32768), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, 16777216), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, 65536), (31, 1024), (32, -1), (33, -1), (34, 0), (35, 0), (36, -1), (37, 512), (38, -1), (39, 512), (40, 16777216), (41, 0), (42, 16384), (43, 16384), (44, -1), (45, -1), (46, -1), (47, 4194304), (48, 524288), (49, 16777216), (50, -1), (51, -1), (52, -1)]

Covered at level 8 : {41, 34, 35}

After reduction : 
 pending  : [23, 37, 9, 30, 31, 39, 42, 43, 47, 48, 49, 40, 5]
 solution : [7, 3, 16, 27]


Before reduction : 
 pending  : [23, 37, 9, 30, 31, 39, 42, 43, 47, 48, 49, 40, 5]
 solution : [7, 3, 16, 27]

Essensial at level 8 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 16777216), (6, -1), (7, -1), (8, -1), (9, 32768), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, 16777216), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, 65536), (31, 1024), (32, -1), (33, -1), (34, 0), (35, 0), (36, -1), (37, 512), (38, -1), (39, 512), (40, 16777216), (41, 0), (42, 16384), (43, 16384), (44, -1), (45, -1), (46, -1), (47, 4194304), (48, 524288), (49, 16777216), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 16777216), (6, -1), (7, -1), (8, -1), (9, 32768), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, 16777216), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, 65536), (31, 1024), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, 512), (38, -1), (39, 512), (40, 16777216), (41, -1), (42, 16384), (43, 16384), (44, -1), (45, -1), (46, -1), (47, 4194304), (48, 524288), (49, 16777216), (50, -1), (51, -1), (52, -1)]

Covered at level 8 : set()

After reduction : 
 pending  : [23, 37, 9, 30, 31, 39, 42, 43, 47, 48, 49, 40, 5]
 solution : [7, 3, 16, 27]


Solution : [7, 3, 16, 27] has cost 23.


Before backtrack at level 8
 pending : [23, 37, 9, 30, 31, 39, 42, 43, 47, 48, 49, 40, 5]
 solution : [7, 3, 16, 27]

After backtrack at level 8
 pending : [23, 37, 9, 30, 31, 39, 42, 43, 47, 48, 49, 40, 5, 34, 35, 41]
 solution : [7, 3, 16, 27]


Invert decision for 27 at level 7


New level: 8
 pending : [23, 37, 9, 30, 31, 39, 42, 43, 47, 48, 49, 40, 5, 34, 35, 41]
 solution : [7, 3, 16]


Before reduction : 
 pending  : [23, 37, 9, 30, 31, 39, 42, 43, 47, 48, 49, 40, 5, 34, 35, 41]
 solution : [7, 3, 16]

Essensial at level 8 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 16777216), (6, -1), (7, -1), (8, -1), (9, 32768), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, 16777216), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, 65536), (31, 1024), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, 512), (38, -1), (39, 512), (40, 16777216), (41, -1), (42, 16384), (43, 16384), (44, -1), (45, -1), (46, -1), (47, 4194304), (48, 524288), (49, 16777216), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 67108864), (6, -1), (7, -1), (8, -1), (9, 131072), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, 67108864), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, 262144), (31, 4096), (32, -1), (33, -1), (34, 1048576), (35, 8192), (36, -1), (37, 1024), (38, -1), (39, 2048), (40, 33554432), (41, 2048), (42, 65536), (43, 65536), (44, -1), (45, -1), (46, -1), (47, 16777216), (48, 2097152), (49, 33554432), (50, -1), (51, -1), (52, -1)]

Covered at level 8 : set()

After reduction : 
 pending  : [23, 37, 9, 30, 31, 39, 42, 43, 47, 48, 49, 40, 5, 34, 35, 41]
 solution : [7, 3, 16]


Solution : [7, 3, 16] has cost 16.


Decide in level 8 among pending : [23, 37, 9, 30, 31, 39, 42, 43, 47, 48, 49, 40, 5, 34, 35, 41]

Coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 67108864), (6, -1), (7, -1), (8, -1), (9, 131072), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, 67108864), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, 262144), (31, 4096), (32, -1), (33, -1), (34, 1048576), (35, 8192), (36, -1), (37, 1024), (38, -1), (39, 2048), (40, 33554432), (41, 2048), (42, 65536), (43, 65536), (44, -1), (45, -1), (46, -1), (47, 16777216), (48, 2097152), (49, 33554432), (50, -1), (51, -1), (52, -1)]

Decide 23 with phase True at level 8

After decision at level 8
 pending : [37, 9, 30, 31, 39, 42, 43, 47, 48, 49, 40, 5, 34, 35, 41]
 solution : [7, 3, 16, 23]


New level: 9
 pending : [37, 9, 30, 31, 39, 42, 43, 47, 48, 49, 40, 5, 34, 35, 41]
 solution : [7, 3, 16, 23]


Before reduction : 
 pending  : [37, 9, 30, 31, 39, 42, 43, 47, 48, 49, 40, 5, 34, 35, 41]
 solution : [7, 3, 16, 23]

Essensial at level 9 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 67108864), (6, -1), (7, -1), (8, -1), (9, 131072), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, 67108864), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, 262144), (31, 4096), (32, -1), (33, -1), (34, 1048576), (35, 8192), (36, -1), (37, 1024), (38, -1), (39, 2048), (40, 33554432), (41, 2048), (42, 65536), (43, 65536), (44, -1), (45, -1), (46, -1), (47, 16777216), (48, 2097152), (49, 33554432), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 0), (6, -1), (7, -1), (8, -1), (9, 0), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, 0), (31, 0), (32, -1), (33, -1), (34, 0), (35, 0), (36, -1), (37, 0), (38, -1), (39, 0), (40, 0), (41, 0), (42, 0), (43, 0), (44, -1), (45, -1), (46, -1), (47, 0), (48, 0), (49, 0), (50, -1), (51, -1), (52, -1)]

Covered at level 9 : {34, 35, 37, 5, 39, 40, 9, 42, 43, 41, 47, 48, 49, 30, 31}

After reduction : 
 pending  : []
 solution : [7, 3, 16, 23]


Before reduction : 
 pending  : []
 solution : [7, 3, 16, 23]

Essensial at level 9 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 0), (6, -1), (7, -1), (8, -1), (9, 0), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, 0), (31, 0), (32, -1), (33, -1), (34, 0), (35, 0), (36, -1), (37, 0), (38, -1), (39, 0), (40, 0), (41, 0), (42, 0), (43, 0), (44, -1), (45, -1), (46, -1), (47, 0), (48, 0), (49, 0), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 9 : set()

After reduction : 
 pending  : []
 solution : [7, 3, 16, 23]


Solution : [7, 3, 16, 23] has cost 23.


Before backtrack at level 9
 pending : []
 solution : [7, 3, 16, 23]

After backtrack at level 9
 pending : [37, 9, 30, 31, 39, 42, 43, 47, 48, 49, 40, 5, 34, 35, 41]
 solution : [7, 3, 16, 23]


Invert decision for 23 at level 8


New level: 9
 pending : [37, 9, 30, 31, 39, 42, 43, 47, 48, 49, 40, 5, 34, 35, 41]
 solution : [7, 3, 16]


Before reduction : 
 pending  : [37, 9, 30, 31, 39, 42, 43, 47, 48, 49, 40, 5, 34, 35, 41]
 solution : [7, 3, 16]

Essensial at level 9 : {5}

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, 0), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, 0), (31, 0), (32, -1), (33, -1), (34, 0), (35, 0), (36, -1), (37, 0), (38, -1), (39, 0), (40, 0), (41, 0), (42, 0), (43, 0), (44, -1), (45, -1), (46, -1), (47, 0), (48, 0), (49, 0), (50, -1), (51, -1), (52, -1)]

Covered at level 9 : {34, 35, 37, 39, 40, 9, 42, 43, 41, 47, 48, 49, 30, 31}

After reduction : 
 pending  : []
 solution : [7, 3, 16, 5]


Before reduction : 
 pending  : []
 solution : [7, 3, 16, 5]

Essensial at level 9 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, 0), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, 0), (31, 0), (32, -1), (33, -1), (34, 0), (35, 0), (36, -1), (37, 0), (38, -1), (39, 0), (40, 0), (41, 0), (42, 0), (43, 0), (44, -1), (45, -1), (46, -1), (47, 0), (48, 0), (49, 0), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 9 : set()

After reduction : 
 pending  : []
 solution : [7, 3, 16, 5]


Solution : [7, 3, 16, 5] has cost 20.


Before backtrack at level 9
 pending : []
 solution : [7, 3, 16, 5]

After backtrack at level 9
 pending : [5, 37, 9, 30, 31, 39, 42, 43, 47, 48, 49, 40, 34, 35, 41]
 solution : [7, 3, 16]


Before backtrack at level 8
 pending : [5, 37, 9, 30, 31, 39, 42, 43, 47, 48, 49, 40, 34, 35, 41]
 solution : [7, 3, 16]

After backtrack at level 8
 pending : [5, 37, 9, 30, 31, 39, 42, 43, 47, 48, 49, 40, 34, 35, 41, 23]
 solution : [7, 3, 16]


Before backtrack at level 7
 pending : [5, 37, 9, 30, 31, 39, 42, 43, 47, 48, 49, 40, 34, 35, 41, 23]
 solution : [7, 3, 16]

After backtrack at level 7
 pending : [5, 37, 9, 30, 31, 39, 42, 43, 47, 48, 49, 40, 34, 35, 41, 23, 27]
 solution : [7, 3, 16]


Before backtrack at level 6
 pending : [5, 37, 9, 30, 31, 39, 42, 43, 47, 48, 49, 40, 34, 35, 41, 23, 27]
 solution : [7, 3, 16]

After backtrack at level 6
 pending : [5, 37, 9, 30, 31, 39, 42, 43, 47, 48, 49, 40, 34, 35, 41, 23, 27, 28]
 solution : [7, 3, 16]


Before backtrack at level 5
 pending : [5, 37, 9, 30, 31, 39, 42, 43, 47, 48, 49, 40, 34, 35, 41, 23, 27, 28]
 solution : [7, 3, 16]

After backtrack at level 5
 pending : [5, 37, 9, 30, 31, 39, 42, 43, 47, 48, 49, 40, 34, 35, 41, 23, 27, 28, 25, 36, 2, 15, 13, 20, 19, 11, 17, 12, 18, 33]
 solution : [7, 3, 16]


Invert decision for 16 at level 4


New level: 5
 pending : [5, 37, 9, 30, 31, 39, 42, 43, 47, 48, 49, 40, 34, 35, 41, 23, 27, 28, 25, 36, 2, 15, 13, 20, 19, 11, 17, 12, 18, 33]
 solution : [7, 3]


Before reduction : 
 pending  : [5, 37, 9, 30, 31, 39, 42, 43, 47, 48, 49, 40, 34, 35, 41, 23, 27, 28, 25, 36, 2, 15, 13, 20, 19, 11, 17, 12, 18, 33]
 solution : [7, 3]

Essensial at level 5 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 524288), (3, -1), (4, -1), (5, 67108864), (6, -1), (7, -1), (8, -1), (9, 524288), (10, -1), (11, 16777216), (12, 33554432), (13, 262144), (14, -1), (15, 557056), (16, -1), (17, 8388608), (18, 536870912), (19, 4194304), (20, 131072), (21, -1), (22, -1), (23, 67108864), (24, -1), (25, 2097152), (26, -1), (27, 268435456), (28, 536870912), (29, -1), (30, 524288), (31, 8192), (32, -1), (33, 536870912), (34, 1048576), (35, 8192), (36, 2097152), (37, 67108864), (38, -1), (39, 8192), (40, 67108864), (41, 134217728), (42, 262144), (43, 262144), (44, -1), (45, -1), (46, -1), (47, 33554432), (48, 8388608), (49, 33554432), (50, -1), (51, -1), (52, -1)]

Covered at level 5 : set()

After reduction : 
 pending  : [5, 37, 9, 30, 31, 39, 42, 43, 47, 48, 49, 40, 34, 35, 41, 23, 27, 28, 25, 36, 2, 15, 13, 20, 19, 11, 17, 12, 18, 33]
 solution : [7, 3]


Solution : [7, 3] has cost 9.


Decide in level 5 among pending : [5, 37, 9, 30, 31, 39, 42, 43, 47, 48, 49, 40, 34, 35, 41, 23, 27, 28, 25, 36, 2, 15, 13, 20, 19, 11, 17, 12, 18, 33]

Coverage : [(0, -1), (1, -1), (2, 524288), (3, -1), (4, -1), (5, 67108864), (6, -1), (7, -1), (8, -1), (9, 524288), (10, -1), (11, 16777216), (12, 33554432), (13, 262144), (14, -1), (15, 557056), (16, -1), (17, 8388608), (18, 536870912), (19, 4194304), (20, 131072), (21, -1), (22, -1), (23, 67108864), (24, -1), (25, 2097152), (26, -1), (27, 268435456), (28, 536870912), (29, -1), (30, 524288), (31, 8192), (32, -1), (33, 536870912), (34, 1048576), (35, 8192), (36, 2097152), (37, 67108864), (38, -1), (39, 8192), (40, 67108864), (41, 134217728), (42, 262144), (43, 262144), (44, -1), (45, -1), (46, -1), (47, 33554432), (48, 8388608), (49, 33554432), (50, -1), (51, -1), (52, -1)]

Decide 28 with phase True at level 5

After decision at level 5
 pending : [5, 37, 9, 30, 31, 39, 42, 43, 47, 48, 49, 40, 34, 35, 41, 23, 27, 25, 36, 2, 15, 13, 20, 19, 11, 17, 12, 18, 33]
 solution : [7, 3, 28]


New level: 6
 pending : [5, 37, 9, 30, 31, 39, 42, 43, 47, 48, 49, 40, 34, 35, 41, 23, 27, 25, 36, 2, 15, 13, 20, 19, 11, 17, 12, 18, 33]
 solution : [7, 3, 28]


Before reduction : 
 pending  : [5, 37, 9, 30, 31, 39, 42, 43, 47, 48, 49, 40, 34, 35, 41, 23, 27, 25, 36, 2, 15, 13, 20, 19, 11, 17, 12, 18, 33]
 solution : [7, 3, 28]

Essensial at level 6 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 524288), (3, -1), (4, -1), (5, 67108864), (6, -1), (7, -1), (8, -1), (9, 524288), (10, -1), (11, 16777216), (12, 33554432), (13, 262144), (14, -1), (15, 557056), (16, -1), (17, 8388608), (18, 536870912), (19, 4194304), (20, 131072), (21, -1), (22, -1), (23, 67108864), (24, -1), (25, 2097152), (26, -1), (27, 268435456), (28, 536870912), (29, -1), (30, 524288), (31, 8192), (32, -1), (33, 536870912), (34, 1048576), (35, 8192), (36, 2097152), (37, 67108864), (38, -1), (39, 8192), (40, 67108864), (41, 134217728), (42, 262144), (43, 262144), (44, -1), (45, -1), (46, -1), (47, 33554432), (48, 8388608), (49, 33554432), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 524288), (3, -1), (4, -1), (5, 67108864), (6, -1), (7, -1), (8, -1), (9, 524288), (10, -1), (11, 16777216), (12, 33554432), (13, 262144), (14, -1), (15, 557056), (16, -1), (17, 8388608), (18, 536870912), (19, 4194304), (20, 131072), (21, -1), (22, -1), (23, 67108864), (24, -1), (25, 2097152), (26, -1), (27, 134217728), (28, -1), (29, -1), (30, 524288), (31, 8192), (32, -1), (33, 268435456), (34, 524288), (35, 4096), (36, 2097152), (37, 67108864), (38, -1), (39, 8192), (40, 67108864), (41, 134217728), (42, 262144), (43, 262144), (44, -1), (45, -1), (46, -1), (47, 33554432), (48, 8388608), (49, 33554432), (50, -1), (51, -1), (52, -1)]

Covered at level 6 : set()

After reduction : 
 pending  : [5, 37, 9, 30, 31, 39, 42, 43, 47, 48, 49, 40, 34, 35, 41, 23, 27, 25, 36, 2, 15, 13, 20, 19, 11, 17, 12, 18, 33]
 solution : [7, 3, 28]


Solution : [7, 3, 28] has cost 13.


Decide in level 6 among pending : [5, 37, 9, 30, 31, 39, 42, 43, 47, 48, 49, 40, 34, 35, 41, 23, 27, 25, 36, 2, 15, 13, 20, 19, 11, 17, 12, 18, 33]

Coverage : [(0, -1), (1, -1), (2, 524288), (3, -1), (4, -1), (5, 67108864), (6, -1), (7, -1), (8, -1), (9, 524288), (10, -1), (11, 16777216), (12, 33554432), (13, 262144), (14, -1), (15, 557056), (16, -1), (17, 8388608), (18, 536870912), (19, 4194304), (20, 131072), (21, -1), (22, -1), (23, 67108864), (24, -1), (25, 2097152), (26, -1), (27, 134217728), (28, -1), (29, -1), (30, 524288), (31, 8192), (32, -1), (33, 268435456), (34, 524288), (35, 4096), (36, 2097152), (37, 67108864), (38, -1), (39, 8192), (40, 67108864), (41, 134217728), (42, 262144), (43, 262144), (44, -1), (45, -1), (46, -1), (47, 33554432), (48, 8388608), (49, 33554432), (50, -1), (51, -1), (52, -1)]

Decide 18 with phase True at level 6

After decision at level 6
 pending : [5, 37, 9, 30, 31, 39, 42, 43, 47, 48, 49, 40, 34, 35, 41, 23, 27, 25, 36, 2, 15, 13, 20, 19, 11, 17, 12, 33]
 solution : [7, 3, 28, 18]


New level: 7
 pending : [5, 37, 9, 30, 31, 39, 42, 43, 47, 48, 49, 40, 34, 35, 41, 23, 27, 25, 36, 2, 15, 13, 20, 19, 11, 17, 12, 33]
 solution : [7, 3, 28, 18]


Before reduction : 
 pending  : [5, 37, 9, 30, 31, 39, 42, 43, 47, 48, 49, 40, 34, 35, 41, 23, 27, 25, 36, 2, 15, 13, 20, 19, 11, 17, 12, 33]
 solution : [7, 3, 28, 18]

Essensial at level 7 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 524288), (3, -1), (4, -1), (5, 67108864), (6, -1), (7, -1), (8, -1), (9, 524288), (10, -1), (11, 16777216), (12, 33554432), (13, 262144), (14, -1), (15, 557056), (16, -1), (17, 8388608), (18, 536870912), (19, 4194304), (20, 131072), (21, -1), (22, -1), (23, 67108864), (24, -1), (25, 2097152), (26, -1), (27, 134217728), (28, -1), (29, -1), (30, 524288), (31, 8192), (32, -1), (33, 268435456), (34, 524288), (35, 4096), (36, 2097152), (37, 67108864), (38, -1), (39, 8192), (40, 67108864), (41, 134217728), (42, 262144), (43, 262144), (44, -1), (45, -1), (46, -1), (47, 33554432), (48, 8388608), (49, 33554432), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 0), (3, -1), (4, -1), (5, 67108864), (6, -1), (7, -1), (8, -1), (9, 131072), (10, -1), (11, 0), (12, 0), (13, 0), (14, -1), (15, 0), (16, -1), (17, 0), (18, -1), (19, 0), (20, 0), (21, -1), (22, -1), (23, 67108864), (24, -1), (25, 0), (26, -1), (27, 134217728), (28, -1), (29, -1), (30, 262144), (31, 4096), (32, -1), (33, 268435456), (34, 524288), (35, 4096), (36, 0), (37, 1024), (38, -1), (39, 2048), (40, 33554432), (41, 2048), (42, 131072), (43, 131072), (44, -1), (45, -1), (46, -1), (47, 33554432), (48, 4194304), (49, 33554432), (50, -1), (51, -1), (52, -1)]

Covered at level 7 : {2, 36, 11, 12, 13, 15, 17, 19, 20, 25}

After reduction : 
 pending  : [5, 37, 9, 30, 31, 39, 42, 43, 47, 48, 49, 40, 34, 35, 41, 23, 27, 33]
 solution : [7, 3, 28, 18]


Before reduction : 
 pending  : [5, 37, 9, 30, 31, 39, 42, 43, 47, 48, 49, 40, 34, 35, 41, 23, 27, 33]
 solution : [7, 3, 28, 18]

Essensial at level 7 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 0), (3, -1), (4, -1), (5, 67108864), (6, -1), (7, -1), (8, -1), (9, 131072), (10, -1), (11, 0), (12, 0), (13, 0), (14, -1), (15, 0), (16, -1), (17, 0), (18, -1), (19, 0), (20, 0), (21, -1), (22, -1), (23, 67108864), (24, -1), (25, 0), (26, -1), (27, 134217728), (28, -1), (29, -1), (30, 262144), (31, 4096), (32, -1), (33, 268435456), (34, 524288), (35, 4096), (36, 0), (37, 1024), (38, -1), (39, 2048), (40, 33554432), (41, 2048), (42, 131072), (43, 131072), (44, -1), (45, -1), (46, -1), (47, 33554432), (48, 4194304), (49, 33554432), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 67108864), (6, -1), (7, -1), (8, -1), (9, 131072), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, 67108864), (24, -1), (25, -1), (26, -1), (27, 134217728), (28, -1), (29, -1), (30, 262144), (31, 4096), (32, -1), (33, 268435456), (34, 524288), (35, 4096), (36, -1), (37, 1024), (38, -1), (39, 2048), (40, 33554432), (41, 2048), (42, 131072), (43, 131072), (44, -1), (45, -1), (46, -1), (47, 16777216), (48, 2097152), (49, 33554432), (50, -1), (51, -1), (52, -1)]

Covered at level 7 : set()

After reduction : 
 pending  : [5, 37, 9, 30, 31, 39, 42, 43, 47, 48, 49, 40, 34, 35, 41, 23, 27, 33]
 solution : [7, 3, 28, 18]


Solution : [7, 3, 28, 18] has cost 20.


Before backtrack at level 7
 pending : [5, 37, 9, 30, 31, 39, 42, 43, 47, 48, 49, 40, 34, 35, 41, 23, 27, 33]
 solution : [7, 3, 28, 18]

After backtrack at level 7
 pending : [5, 37, 9, 30, 31, 39, 42, 43, 47, 48, 49, 40, 34, 35, 41, 23, 27, 33, 25, 36, 2, 15, 13, 20, 19, 11, 17, 12]
 solution : [7, 3, 28, 18]


Invert decision for 18 at level 6


New level: 7
 pending : [5, 37, 9, 30, 31, 39, 42, 43, 47, 48, 49, 40, 34, 35, 41, 23, 27, 33, 25, 36, 2, 15, 13, 20, 19, 11, 17, 12]
 solution : [7, 3, 28]


Before reduction : 
 pending  : [5, 37, 9, 30, 31, 39, 42, 43, 47, 48, 49, 40, 34, 35, 41, 23, 27, 33, 25, 36, 2, 15, 13, 20, 19, 11, 17, 12]
 solution : [7, 3, 28]

Essensial at level 7 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 67108864), (6, -1), (7, -1), (8, -1), (9, 131072), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, 67108864), (24, -1), (25, -1), (26, -1), (27, 134217728), (28, -1), (29, -1), (30, 262144), (31, 4096), (32, -1), (33, 268435456), (34, 524288), (35, 4096), (36, -1), (37, 1024), (38, -1), (39, 2048), (40, 33554432), (41, 2048), (42, 131072), (43, 131072), (44, -1), (45, -1), (46, -1), (47, 16777216), (48, 2097152), (49, 33554432), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 524288), (3, -1), (4, -1), (5, 67108864), (6, -1), (7, -1), (8, -1), (9, 524288), (10, -1), (11, 16777216), (12, 33554432), (13, 262144), (14, -1), (15, 557056), (16, -1), (17, 8388608), (18, -1), (19, 4194304), (20, 131072), (21, -1), (22, -1), (23, 67108864), (24, -1), (25, 2097152), (26, -1), (27, 134217728), (28, -1), (29, -1), (30, 524288), (31, 8192), (32, -1), (33, 268435456), (34, 524288), (35, 4096), (36, 2097152), (37, 67108864), (38, -1), (39, 8192), (40, 67108864), (41, 134217728), (42, 262144), (43, 262144), (44, -1), (45, -1), (46, -1), (47, 33554432), (48, 8388608), (49, 33554432), (50, -1), (51, -1), (52, -1)]

Covered at level 7 : set()

After reduction : 
 pending  : [5, 37, 9, 30, 31, 39, 42, 43, 47, 48, 49, 40, 34, 35, 41, 23, 27, 33, 25, 36, 2, 15, 13, 20, 19, 11, 17, 12]
 solution : [7, 3, 28]


Solution : [7, 3, 28] has cost 13.


Decide in level 7 among pending : [5, 37, 9, 30, 31, 39, 42, 43, 47, 48, 49, 40, 34, 35, 41, 23, 27, 33, 25, 36, 2, 15, 13, 20, 19, 11, 17, 12]

Coverage : [(0, -1), (1, -1), (2, 524288), (3, -1), (4, -1), (5, 67108864), (6, -1), (7, -1), (8, -1), (9, 524288), (10, -1), (11, 16777216), (12, 33554432), (13, 262144), (14, -1), (15, 557056), (16, -1), (17, 8388608), (18, -1), (19, 4194304), (20, 131072), (21, -1), (22, -1), (23, 67108864), (24, -1), (25, 2097152), (26, -1), (27, 134217728), (28, -1), (29, -1), (30, 524288), (31, 8192), (32, -1), (33, 268435456), (34, 524288), (35, 4096), (36, 2097152), (37, 67108864), (38, -1), (39, 8192), (40, 67108864), (41, 134217728), (42, 262144), (43, 262144), (44, -1), (45, -1), (46, -1), (47, 33554432), (48, 8388608), (49, 33554432), (50, -1), (51, -1), (52, -1)]

Decide 33 with phase True at level 7

After decision at level 7
 pending : [5, 37, 9, 30, 31, 39, 42, 43, 47, 48, 49, 40, 34, 35, 41, 23, 27, 25, 36, 2, 15, 13, 20, 19, 11, 17, 12]
 solution : [7, 3, 28, 33]


New level: 8
 pending : [5, 37, 9, 30, 31, 39, 42, 43, 47, 48, 49, 40, 34, 35, 41, 23, 27, 25, 36, 2, 15, 13, 20, 19, 11, 17, 12]
 solution : [7, 3, 28, 33]


Before reduction : 
 pending  : [5, 37, 9, 30, 31, 39, 42, 43, 47, 48, 49, 40, 34, 35, 41, 23, 27, 25, 36, 2, 15, 13, 20, 19, 11, 17, 12]
 solution : [7, 3, 28, 33]

Essensial at level 8 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 524288), (3, -1), (4, -1), (5, 67108864), (6, -1), (7, -1), (8, -1), (9, 524288), (10, -1), (11, 16777216), (12, 33554432), (13, 262144), (14, -1), (15, 557056), (16, -1), (17, 8388608), (18, -1), (19, 4194304), (20, 131072), (21, -1), (22, -1), (23, 67108864), (24, -1), (25, 2097152), (26, -1), (27, 134217728), (28, -1), (29, -1), (30, 524288), (31, 8192), (32, -1), (33, 268435456), (34, 524288), (35, 4096), (36, 2097152), (37, 67108864), (38, -1), (39, 8192), (40, 67108864), (41, 134217728), (42, 262144), (43, 262144), (44, -1), (45, -1), (46, -1), (47, 33554432), (48, 8388608), (49, 33554432), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 524288), (3, -1), (4, -1), (5, 67108864), (6, -1), (7, -1), (8, -1), (9, 131072), (10, -1), (11, 16777216), (12, 33554432), (13, 262144), (14, -1), (15, 557056), (16, -1), (17, 8388608), (18, -1), (19, 4194304), (20, 131072), (21, -1), (22, -1), (23, 67108864), (24, -1), (25, 2097152), (26, -1), (27, 4096), (28, -1), (29, -1), (30, 131072), (31, 2048), (32, -1), (33, -1), (34, 0), (35, 0), (36, 2097152), (37, 67108864), (38, -1), (39, 2048), (40, 16777216), (41, 4096), (42, 65536), (43, 65536), (44, -1), (45, -1), (46, -1), (47, 8388608), (48, 2097152), (49, 8388608), (50, -1), (51, -1), (52, -1)]

Covered at level 8 : {34, 35}

After reduction : 
 pending  : [5, 37, 9, 30, 31, 39, 42, 43, 47, 48, 49, 40, 41, 23, 27, 25, 36, 2, 15, 13, 20, 19, 11, 17, 12]
 solution : [7, 3, 28, 33]


Before reduction : 
 pending  : [5, 37, 9, 30, 31, 39, 42, 43, 47, 48, 49, 40, 41, 23, 27, 25, 36, 2, 15, 13, 20, 19, 11, 17, 12]
 solution : [7, 3, 28, 33]

Essensial at level 8 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 524288), (3, -1), (4, -1), (5, 67108864), (6, -1), (7, -1), (8, -1), (9, 131072), (10, -1), (11, 16777216), (12, 33554432), (13, 262144), (14, -1), (15, 557056), (16, -1), (17, 8388608), (18, -1), (19, 4194304), (20, 131072), (21, -1), (22, -1), (23, 67108864), (24, -1), (25, 2097152), (26, -1), (27, 4096), (28, -1), (29, -1), (30, 131072), (31, 2048), (32, -1), (33, -1), (34, 0), (35, 0), (36, 2097152), (37, 67108864), (38, -1), (39, 2048), (40, 16777216), (41, 4096), (42, 65536), (43, 65536), (44, -1), (45, -1), (46, -1), (47, 8388608), (48, 2097152), (49, 8388608), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 524288), (3, -1), (4, -1), (5, 67108864), (6, -1), (7, -1), (8, -1), (9, 131072), (10, -1), (11, 16777216), (12, 33554432), (13, 262144), (14, -1), (15, 557056), (16, -1), (17, 8388608), (18, -1), (19, 4194304), (20, 131072), (21, -1), (22, -1), (23, 67108864), (24, -1), (25, 2097152), (26, -1), (27, 4096), (28, -1), (29, -1), (30, 131072), (31, 2048), (32, -1), (33, -1), (34, -1), (35, -1), (36, 2097152), (37, 67108864), (38, -1), (39, 2048), (40, 16777216), (41, 4096), (42, 65536), (43, 65536), (44, -1), (45, -1), (46, -1), (47, 8388608), (48, 2097152), (49, 8388608), (50, -1), (51, -1), (52, -1)]

Covered at level 8 : set()

After reduction : 
 pending  : [5, 37, 9, 30, 31, 39, 42, 43, 47, 48, 49, 40, 41, 23, 27, 25, 36, 2, 15, 13, 20, 19, 11, 17, 12]
 solution : [7, 3, 28, 33]


Solution : [7, 3, 28, 33] has cost 26.


Before backtrack at level 8
 pending : [5, 37, 9, 30, 31, 39, 42, 43, 47, 48, 49, 40, 41, 23, 27, 25, 36, 2, 15, 13, 20, 19, 11, 17, 12]
 solution : [7, 3, 28, 33]

After backtrack at level 8
 pending : [5, 37, 9, 30, 31, 39, 42, 43, 47, 48, 49, 40, 41, 23, 27, 25, 36, 2, 15, 13, 20, 19, 11, 17, 12, 34, 35]
 solution : [7, 3, 28, 33]


Invert decision for 33 at level 7


New level: 8
 pending : [5, 37, 9, 30, 31, 39, 42, 43, 47, 48, 49, 40, 41, 23, 27, 25, 36, 2, 15, 13, 20, 19, 11, 17, 12, 34, 35]
 solution : [7, 3, 28]


Before reduction : 
 pending  : [5, 37, 9, 30, 31, 39, 42, 43, 47, 48, 49, 40, 41, 23, 27, 25, 36, 2, 15, 13, 20, 19, 11, 17, 12, 34, 35]
 solution : [7, 3, 28]

Essensial at level 8 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 524288), (3, -1), (4, -1), (5, 67108864), (6, -1), (7, -1), (8, -1), (9, 131072), (10, -1), (11, 16777216), (12, 33554432), (13, 262144), (14, -1), (15, 557056), (16, -1), (17, 8388608), (18, -1), (19, 4194304), (20, 131072), (21, -1), (22, -1), (23, 67108864), (24, -1), (25, 2097152), (26, -1), (27, 4096), (28, -1), (29, -1), (30, 131072), (31, 2048), (32, -1), (33, -1), (34, -1), (35, -1), (36, 2097152), (37, 67108864), (38, -1), (39, 2048), (40, 16777216), (41, 4096), (42, 65536), (43, 65536), (44, -1), (45, -1), (46, -1), (47, 8388608), (48, 2097152), (49, 8388608), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 524288), (3, -1), (4, -1), (5, 67108864), (6, -1), (7, -1), (8, -1), (9, 524288), (10, -1), (11, 16777216), (12, 33554432), (13, 262144), (14, -1), (15, 557056), (16, -1), (17, 8388608), (18, -1), (19, 4194304), (20, 131072), (21, -1), (22, -1), (23, 67108864), (24, -1), (25, 2097152), (26, -1), (27, 134217728), (28, -1), (29, -1), (30, 524288), (31, 8192), (32, -1), (33, -1), (34, 524288), (35, 4096), (36, 2097152), (37, 67108864), (38, -1), (39, 8192), (40, 67108864), (41, 134217728), (42, 262144), (43, 262144), (44, -1), (45, -1), (46, -1), (47, 33554432), (48, 8388608), (49, 33554432), (50, -1), (51, -1), (52, -1)]

Covered at level 8 : set()

After reduction : 
 pending  : [5, 37, 9, 30, 31, 39, 42, 43, 47, 48, 49, 40, 41, 23, 27, 25, 36, 2, 15, 13, 20, 19, 11, 17, 12, 34, 35]
 solution : [7, 3, 28]


Solution : [7, 3, 28] has cost 13.


Decide in level 8 among pending : [5, 37, 9, 30, 31, 39, 42, 43, 47, 48, 49, 40, 41, 23, 27, 25, 36, 2, 15, 13, 20, 19, 11, 17, 12, 34, 35]

Coverage : [(0, -1), (1, -1), (2, 524288), (3, -1), (4, -1), (5, 67108864), (6, -1), (7, -1), (8, -1), (9, 524288), (10, -1), (11, 16777216), (12, 33554432), (13, 262144), (14, -1), (15, 557056), (16, -1), (17, 8388608), (18, -1), (19, 4194304), (20, 131072), (21, -1), (22, -1), (23, 67108864), (24, -1), (25, 2097152), (26, -1), (27, 134217728), (28, -1), (29, -1), (30, 524288), (31, 8192), (32, -1), (33, -1), (34, 524288), (35, 4096), (36, 2097152), (37, 67108864), (38, -1), (39, 8192), (40, 67108864), (41, 134217728), (42, 262144), (43, 262144), (44, -1), (45, -1), (46, -1), (47, 33554432), (48, 8388608), (49, 33554432), (50, -1), (51, -1), (52, -1)]

Decide 41 with phase True at level 8

After decision at level 8
 pending : [5, 37, 9, 30, 31, 39, 42, 43, 47, 48, 49, 40, 23, 27, 25, 36, 2, 15, 13, 20, 19, 11, 17, 12, 34, 35]
 solution : [7, 3, 28, 41]


New level: 9
 pending : [5, 37, 9, 30, 31, 39, 42, 43, 47, 48, 49, 40, 23, 27, 25, 36, 2, 15, 13, 20, 19, 11, 17, 12, 34, 35]
 solution : [7, 3, 28, 41]


Before reduction : 
 pending  : [5, 37, 9, 30, 31, 39, 42, 43, 47, 48, 49, 40, 23, 27, 25, 36, 2, 15, 13, 20, 19, 11, 17, 12, 34, 35]
 solution : [7, 3, 28, 41]

Essensial at level 9 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 524288), (3, -1), (4, -1), (5, 67108864), (6, -1), (7, -1), (8, -1), (9, 524288), (10, -1), (11, 16777216), (12, 33554432), (13, 262144), (14, -1), (15, 557056), (16, -1), (17, 8388608), (18, -1), (19, 4194304), (20, 131072), (21, -1), (22, -1), (23, 67108864), (24, -1), (25, 2097152), (26, -1), (27, 134217728), (28, -1), (29, -1), (30, 524288), (31, 8192), (32, -1), (33, -1), (34, 524288), (35, 4096), (36, 2097152), (37, 67108864), (38, -1), (39, 8192), (40, 67108864), (41, 134217728), (42, 262144), (43, 262144), (44, -1), (45, -1), (46, -1), (47, 33554432), (48, 8388608), (49, 33554432), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 524288), (3, -1), (4, -1), (5, 67108864), (6, -1), (7, -1), (8, -1), (9, 524288), (10, -1), (11, 16777216), (12, 33554432), (13, 262144), (14, -1), (15, 557056), (16, -1), (17, 8388608), (18, -1), (19, 4194304), (20, 131072), (21, -1), (22, -1), (23, 67108864), (24, -1), (25, 2097152), (26, -1), (27, 67108864), (28, -1), (29, -1), (30, 524288), (31, 8192), (32, -1), (33, -1), (34, 262144), (35, 2048), (36, 2097152), (37, 33554432), (38, -1), (39, 8192), (40, 67108864), (41, -1), (42, 262144), (43, 262144), (44, -1), (45, -1), (46, -1), (47, 33554432), (48, 8388608), (49, 33554432), (50, -1), (51, -1), (52, -1)]

Covered at level 9 : set()

After reduction : 
 pending  : [5, 37, 9, 30, 31, 39, 42, 43, 47, 48, 49, 40, 23, 27, 25, 36, 2, 15, 13, 20, 19, 11, 17, 12, 34, 35]
 solution : [7, 3, 28, 41]


Solution : [7, 3, 28, 41] has cost 27.


Before backtrack at level 9
 pending : [5, 37, 9, 30, 31, 39, 42, 43, 47, 48, 49, 40, 23, 27, 25, 36, 2, 15, 13, 20, 19, 11, 17, 12, 34, 35]
 solution : [7, 3, 28, 41]

After backtrack at level 9
 pending : [5, 37, 9, 30, 31, 39, 42, 43, 47, 48, 49, 40, 23, 27, 25, 36, 2, 15, 13, 20, 19, 11, 17, 12, 34, 35]
 solution : [7, 3, 28, 41]


Invert decision for 41 at level 8


New level: 9
 pending : [5, 37, 9, 30, 31, 39, 42, 43, 47, 48, 49, 40, 23, 27, 25, 36, 2, 15, 13, 20, 19, 11, 17, 12, 34, 35]
 solution : [7, 3, 28]


Before reduction : 
 pending  : [5, 37, 9, 30, 31, 39, 42, 43, 47, 48, 49, 40, 23, 27, 25, 36, 2, 15, 13, 20, 19, 11, 17, 12, 34, 35]
 solution : [7, 3, 28]

Essensial at level 9 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 524288), (3, -1), (4, -1), (5, 67108864), (6, -1), (7, -1), (8, -1), (9, 524288), (10, -1), (11, 16777216), (12, 33554432), (13, 262144), (14, -1), (15, 557056), (16, -1), (17, 8388608), (18, -1), (19, 4194304), (20, 131072), (21, -1), (22, -1), (23, 67108864), (24, -1), (25, 2097152), (26, -1), (27, 67108864), (28, -1), (29, -1), (30, 524288), (31, 8192), (32, -1), (33, -1), (34, 262144), (35, 2048), (36, 2097152), (37, 33554432), (38, -1), (39, 8192), (40, 67108864), (41, -1), (42, 262144), (43, 262144), (44, -1), (45, -1), (46, -1), (47, 33554432), (48, 8388608), (49, 33554432), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 524288), (3, -1), (4, -1), (5, 67108864), (6, -1), (7, -1), (8, -1), (9, 524288), (10, -1), (11, 16777216), (12, 33554432), (13, 262144), (14, -1), (15, 557056), (16, -1), (17, 8388608), (18, -1), (19, 4194304), (20, 131072), (21, -1), (22, -1), (23, 67108864), (24, -1), (25, 2097152), (26, -1), (27, 134217728), (28, -1), (29, -1), (30, 524288), (31, 8192), (32, -1), (33, -1), (34, 524288), (35, 4096), (36, 2097152), (37, 67108864), (38, -1), (39, 8192), (40, 67108864), (41, -1), (42, 262144), (43, 262144), (44, -1), (45, -1), (46, -1), (47, 33554432), (48, 8388608), (49, 33554432), (50, -1), (51, -1), (52, -1)]

Covered at level 9 : set()

After reduction : 
 pending  : [5, 37, 9, 30, 31, 39, 42, 43, 47, 48, 49, 40, 23, 27, 25, 36, 2, 15, 13, 20, 19, 11, 17, 12, 34, 35]
 solution : [7, 3, 28]


Solution : [7, 3, 28] has cost 13.


Decide in level 9 among pending : [5, 37, 9, 30, 31, 39, 42, 43, 47, 48, 49, 40, 23, 27, 25, 36, 2, 15, 13, 20, 19, 11, 17, 12, 34, 35]

Coverage : [(0, -1), (1, -1), (2, 524288), (3, -1), (4, -1), (5, 67108864), (6, -1), (7, -1), (8, -1), (9, 524288), (10, -1), (11, 16777216), (12, 33554432), (13, 262144), (14, -1), (15, 557056), (16, -1), (17, 8388608), (18, -1), (19, 4194304), (20, 131072), (21, -1), (22, -1), (23, 67108864), (24, -1), (25, 2097152), (26, -1), (27, 134217728), (28, -1), (29, -1), (30, 524288), (31, 8192), (32, -1), (33, -1), (34, 524288), (35, 4096), (36, 2097152), (37, 67108864), (38, -1), (39, 8192), (40, 67108864), (41, -1), (42, 262144), (43, 262144), (44, -1), (45, -1), (46, -1), (47, 33554432), (48, 8388608), (49, 33554432), (50, -1), (51, -1), (52, -1)]

Decide 27 with phase True at level 9

After decision at level 9
 pending : [5, 37, 9, 30, 31, 39, 42, 43, 47, 48, 49, 40, 23, 25, 36, 2, 15, 13, 20, 19, 11, 17, 12, 34, 35]
 solution : [7, 3, 28, 27]


New level: 10
 pending : [5, 37, 9, 30, 31, 39, 42, 43, 47, 48, 49, 40, 23, 25, 36, 2, 15, 13, 20, 19, 11, 17, 12, 34, 35]
 solution : [7, 3, 28, 27]


Before reduction : 
 pending  : [5, 37, 9, 30, 31, 39, 42, 43, 47, 48, 49, 40, 23, 25, 36, 2, 15, 13, 20, 19, 11, 17, 12, 34, 35]
 solution : [7, 3, 28, 27]

Essensial at level 10 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 524288), (3, -1), (4, -1), (5, 67108864), (6, -1), (7, -1), (8, -1), (9, 524288), (10, -1), (11, 16777216), (12, 33554432), (13, 262144), (14, -1), (15, 557056), (16, -1), (17, 8388608), (18, -1), (19, 4194304), (20, 131072), (21, -1), (22, -1), (23, 67108864), (24, -1), (25, 2097152), (26, -1), (27, 134217728), (28, -1), (29, -1), (30, 524288), (31, 8192), (32, -1), (33, -1), (34, 524288), (35, 4096), (36, 2097152), (37, 67108864), (38, -1), (39, 8192), (40, 67108864), (41, -1), (42, 262144), (43, 262144), (44, -1), (45, -1), (46, -1), (47, 33554432), (48, 8388608), (49, 33554432), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 524288), (3, -1), (4, -1), (5, 16777216), (6, -1), (7, -1), (8, -1), (9, 131072), (10, -1), (11, 16777216), (12, 33554432), (13, 262144), (14, -1), (15, 557056), (16, -1), (17, 8388608), (18, -1), (19, 4194304), (20, 131072), (21, -1), (22, -1), (23, 16777216), (24, -1), (25, 2097152), (26, -1), (27, -1), (28, -1), (29, -1), (30, 131072), (31, 2048), (32, -1), (33, -1), (34, 0), (35, 0), (36, 2097152), (37, 67108864), (38, -1), (39, 2048), (40, 33554432), (41, -1), (42, 65536), (43, 65536), (44, -1), (45, -1), (46, -1), (47, 8388608), (48, 2097152), (49, 16777216), (50, -1), (51, -1), (52, -1)]

Covered at level 10 : {34, 35}

After reduction : 
 pending  : [5, 37, 9, 30, 31, 39, 42, 43, 47, 48, 49, 40, 23, 25, 36, 2, 15, 13, 20, 19, 11, 17, 12]
 solution : [7, 3, 28, 27]


Before reduction : 
 pending  : [5, 37, 9, 30, 31, 39, 42, 43, 47, 48, 49, 40, 23, 25, 36, 2, 15, 13, 20, 19, 11, 17, 12]
 solution : [7, 3, 28, 27]

Essensial at level 10 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 524288), (3, -1), (4, -1), (5, 16777216), (6, -1), (7, -1), (8, -1), (9, 131072), (10, -1), (11, 16777216), (12, 33554432), (13, 262144), (14, -1), (15, 557056), (16, -1), (17, 8388608), (18, -1), (19, 4194304), (20, 131072), (21, -1), (22, -1), (23, 16777216), (24, -1), (25, 2097152), (26, -1), (27, -1), (28, -1), (29, -1), (30, 131072), (31, 2048), (32, -1), (33, -1), (34, 0), (35, 0), (36, 2097152), (37, 67108864), (38, -1), (39, 2048), (40, 33554432), (41, -1), (42, 65536), (43, 65536), (44, -1), (45, -1), (46, -1), (47, 8388608), (48, 2097152), (49, 16777216), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 524288), (3, -1), (4, -1), (5, 16777216), (6, -1), (7, -1), (8, -1), (9, 131072), (10, -1), (11, 16777216), (12, 33554432), (13, 262144), (14, -1), (15, 557056), (16, -1), (17, 8388608), (18, -1), (19, 4194304), (20, 131072), (21, -1), (22, -1), (23, 16777216), (24, -1), (25, 2097152), (26, -1), (27, -1), (28, -1), (29, -1), (30, 131072), (31, 2048), (32, -1), (33, -1), (34, -1), (35, -1), (36, 2097152), (37, 67108864), (38, -1), (39, 2048), (40, 33554432), (41, -1), (42, 65536), (43, 65536), (44, -1), (45, -1), (46, -1), (47, 8388608), (48, 2097152), (49, 16777216), (50, -1), (51, -1), (52, -1)]

Covered at level 10 : set()

After reduction : 
 pending  : [5, 37, 9, 30, 31, 39, 42, 43, 47, 48, 49, 40, 23, 25, 36, 2, 15, 13, 20, 19, 11, 17, 12]
 solution : [7, 3, 28, 27]


Solution : [7, 3, 28, 27] has cost 20.


Before backtrack at level 10
 pending : [5, 37, 9, 30, 31, 39, 42, 43, 47, 48, 49, 40, 23, 25, 36, 2, 15, 13, 20, 19, 11, 17, 12]
 solution : [7, 3, 28, 27]

After backtrack at level 10
 pending : [5, 37, 9, 30, 31, 39, 42, 43, 47, 48, 49, 40, 23, 25, 36, 2, 15, 13, 20, 19, 11, 17, 12, 34, 35]
 solution : [7, 3, 28, 27]


Invert decision for 27 at level 9


New level: 10
 pending : [5, 37, 9, 30, 31, 39, 42, 43, 47, 48, 49, 40, 23, 25, 36, 2, 15, 13, 20, 19, 11, 17, 12, 34, 35]
 solution : [7, 3, 28]


Before reduction : 
 pending  : [5, 37, 9, 30, 31, 39, 42, 43, 47, 48, 49, 40, 23, 25, 36, 2, 15, 13, 20, 19, 11, 17, 12, 34, 35]
 solution : [7, 3, 28]

Essensial at level 10 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 524288), (3, -1), (4, -1), (5, 16777216), (6, -1), (7, -1), (8, -1), (9, 131072), (10, -1), (11, 16777216), (12, 33554432), (13, 262144), (14, -1), (15, 557056), (16, -1), (17, 8388608), (18, -1), (19, 4194304), (20, 131072), (21, -1), (22, -1), (23, 16777216), (24, -1), (25, 2097152), (26, -1), (27, -1), (28, -1), (29, -1), (30, 131072), (31, 2048), (32, -1), (33, -1), (34, -1), (35, -1), (36, 2097152), (37, 67108864), (38, -1), (39, 2048), (40, 33554432), (41, -1), (42, 65536), (43, 65536), (44, -1), (45, -1), (46, -1), (47, 8388608), (48, 2097152), (49, 16777216), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 524288), (3, -1), (4, -1), (5, 67108864), (6, -1), (7, -1), (8, -1), (9, 524288), (10, -1), (11, 16777216), (12, 33554432), (13, 262144), (14, -1), (15, 557056), (16, -1), (17, 8388608), (18, -1), (19, 4194304), (20, 131072), (21, -1), (22, -1), (23, 67108864), (24, -1), (25, 2097152), (26, -1), (27, -1), (28, -1), (29, -1), (30, 524288), (31, 8192), (32, -1), (33, -1), (34, 524288), (35, 4096), (36, 2097152), (37, 67108864), (38, -1), (39, 8192), (40, 67108864), (41, -1), (42, 262144), (43, 262144), (44, -1), (45, -1), (46, -1), (47, 33554432), (48, 8388608), (49, 33554432), (50, -1), (51, -1), (52, -1)]

Covered at level 10 : set()

After reduction : 
 pending  : [5, 37, 9, 30, 31, 39, 42, 43, 47, 48, 49, 40, 23, 25, 36, 2, 15, 13, 20, 19, 11, 17, 12, 34, 35]
 solution : [7, 3, 28]


Solution : [7, 3, 28] has cost 13.


Decide in level 10 among pending : [5, 37, 9, 30, 31, 39, 42, 43, 47, 48, 49, 40, 23, 25, 36, 2, 15, 13, 20, 19, 11, 17, 12, 34, 35]

Coverage : [(0, -1), (1, -1), (2, 524288), (3, -1), (4, -1), (5, 67108864), (6, -1), (7, -1), (8, -1), (9, 524288), (10, -1), (11, 16777216), (12, 33554432), (13, 262144), (14, -1), (15, 557056), (16, -1), (17, 8388608), (18, -1), (19, 4194304), (20, 131072), (21, -1), (22, -1), (23, 67108864), (24, -1), (25, 2097152), (26, -1), (27, -1), (28, -1), (29, -1), (30, 524288), (31, 8192), (32, -1), (33, -1), (34, 524288), (35, 4096), (36, 2097152), (37, 67108864), (38, -1), (39, 8192), (40, 67108864), (41, -1), (42, 262144), (43, 262144), (44, -1), (45, -1), (46, -1), (47, 33554432), (48, 8388608), (49, 33554432), (50, -1), (51, -1), (52, -1)]

Decide 5 with phase True at level 10

After decision at level 10
 pending : [37, 9, 30, 31, 39, 42, 43, 47, 48, 49, 40, 23, 25, 36, 2, 15, 13, 20, 19, 11, 17, 12, 34, 35]
 solution : [7, 3, 28, 5]


New level: 11
 pending : [37, 9, 30, 31, 39, 42, 43, 47, 48, 49, 40, 23, 25, 36, 2, 15, 13, 20, 19, 11, 17, 12, 34, 35]
 solution : [7, 3, 28, 5]


Before reduction : 
 pending  : [37, 9, 30, 31, 39, 42, 43, 47, 48, 49, 40, 23, 25, 36, 2, 15, 13, 20, 19, 11, 17, 12, 34, 35]
 solution : [7, 3, 28, 5]

Essensial at level 11 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 524288), (3, -1), (4, -1), (5, 67108864), (6, -1), (7, -1), (8, -1), (9, 524288), (10, -1), (11, 16777216), (12, 33554432), (13, 262144), (14, -1), (15, 557056), (16, -1), (17, 8388608), (18, -1), (19, 4194304), (20, 131072), (21, -1), (22, -1), (23, 67108864), (24, -1), (25, 2097152), (26, -1), (27, -1), (28, -1), (29, -1), (30, 524288), (31, 8192), (32, -1), (33, -1), (34, 524288), (35, 4096), (36, 2097152), (37, 67108864), (38, -1), (39, 8192), (40, 67108864), (41, -1), (42, 262144), (43, 262144), (44, -1), (45, -1), (46, -1), (47, 33554432), (48, 8388608), (49, 33554432), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 262144), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, 0), (10, -1), (11, 8388608), (12, 16777216), (13, 131072), (14, -1), (15, 270336), (16, -1), (17, 8388608), (18, -1), (19, 4194304), (20, 131072), (21, -1), (22, -1), (23, 0), (24, -1), (25, 2097152), (26, -1), (27, -1), (28, -1), (29, -1), (30, 0), (31, 0), (32, -1), (33, -1), (34, 0), (35, 0), (36, 2097152), (37, 65536), (38, -1), (39, 0), (40, 0), (41, -1), (42, 0), (43, 0), (44, -1), (45, -1), (46, -1), (47, 0), (48, 0), (49, 0), (50, -1), (51, -1), (52, -1)]

Covered at level 11 : {34, 35, 39, 40, 9, 42, 43, 47, 48, 49, 23, 30, 31}

After reduction : 
 pending  : [37, 25, 36, 2, 15, 13, 20, 19, 11, 17, 12]
 solution : [7, 3, 28, 5]


Before reduction : 
 pending  : [37, 25, 36, 2, 15, 13, 20, 19, 11, 17, 12]
 solution : [7, 3, 28, 5]

Essensial at level 11 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 262144), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, 0), (10, -1), (11, 8388608), (12, 16777216), (13, 131072), (14, -1), (15, 270336), (16, -1), (17, 8388608), (18, -1), (19, 4194304), (20, 131072), (21, -1), (22, -1), (23, 0), (24, -1), (25, 2097152), (26, -1), (27, -1), (28, -1), (29, -1), (30, 0), (31, 0), (32, -1), (33, -1), (34, 0), (35, 0), (36, 2097152), (37, 65536), (38, -1), (39, 0), (40, 0), (41, -1), (42, 0), (43, 0), (44, -1), (45, -1), (46, -1), (47, 0), (48, 0), (49, 0), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 262144), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, 8388608), (12, 16777216), (13, 131072), (14, -1), (15, 270336), (16, -1), (17, 8388608), (18, -1), (19, 4194304), (20, 131072), (21, -1), (22, -1), (23, -1), (24, -1), (25, 2097152), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, 2097152), (37, 65536), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 11 : set()

After reduction : 
 pending  : [37, 25, 36, 2, 15, 13, 20, 19, 11, 17, 12]
 solution : [7, 3, 28, 5]


Solution : [7, 3, 28, 5] has cost 17.


Decide in level 11 among pending : [37, 25, 36, 2, 15, 13, 20, 19, 11, 17, 12]

Coverage : [(0, -1), (1, -1), (2, 262144), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, 8388608), (12, 16777216), (13, 131072), (14, -1), (15, 270336), (16, -1), (17, 8388608), (18, -1), (19, 4194304), (20, 131072), (21, -1), (22, -1), (23, -1), (24, -1), (25, 2097152), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, 2097152), (37, 65536), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Decide 12 with phase True at level 11

After decision at level 11
 pending : [37, 25, 36, 2, 15, 13, 20, 19, 11, 17]
 solution : [7, 3, 28, 5, 12]


New level: 12
 pending : [37, 25, 36, 2, 15, 13, 20, 19, 11, 17]
 solution : [7, 3, 28, 5, 12]


Before reduction : 
 pending  : [37, 25, 36, 2, 15, 13, 20, 19, 11, 17]
 solution : [7, 3, 28, 5, 12]

Essensial at level 12 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 262144), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, 8388608), (12, 16777216), (13, 131072), (14, -1), (15, 270336), (16, -1), (17, 8388608), (18, -1), (19, 4194304), (20, 131072), (21, -1), (22, -1), (23, -1), (24, -1), (25, 2097152), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, 2097152), (37, 65536), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 0), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, 0), (12, -1), (13, 0), (14, -1), (15, 0), (16, -1), (17, 131072), (18, -1), (19, 32768), (20, 32768), (21, -1), (22, -1), (23, -1), (24, -1), (25, 2048), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, 2048), (37, 1024), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 12 : {2, 11, 13, 15}

After reduction : 
 pending  : [37, 25, 36, 20, 19, 17]
 solution : [7, 3, 28, 5, 12]


Before reduction : 
 pending  : [37, 25, 36, 20, 19, 17]
 solution : [7, 3, 28, 5, 12]

Essensial at level 12 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 0), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, 0), (12, -1), (13, 0), (14, -1), (15, 0), (16, -1), (17, 131072), (18, -1), (19, 32768), (20, 32768), (21, -1), (22, -1), (23, -1), (24, -1), (25, 2048), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, 2048), (37, 1024), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, 131072), (18, -1), (19, 32768), (20, 32768), (21, -1), (22, -1), (23, -1), (24, -1), (25, 2048), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, 2048), (37, 1024), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 12 : set()

After reduction : 
 pending  : [37, 25, 36, 20, 19, 17]
 solution : [7, 3, 28, 5, 12]


Solution : [7, 3, 28, 5, 12] has cost 26.


Before backtrack at level 12
 pending : [37, 25, 36, 20, 19, 17]
 solution : [7, 3, 28, 5, 12]

After backtrack at level 12
 pending : [37, 25, 36, 20, 19, 17, 2, 15, 13, 11]
 solution : [7, 3, 28, 5, 12]


Invert decision for 12 at level 11


New level: 12
 pending : [37, 25, 36, 20, 19, 17, 2, 15, 13, 11]
 solution : [7, 3, 28, 5]


Before reduction : 
 pending  : [37, 25, 36, 20, 19, 17, 2, 15, 13, 11]
 solution : [7, 3, 28, 5]

Essensial at level 12 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, 131072), (18, -1), (19, 32768), (20, 32768), (21, -1), (22, -1), (23, -1), (24, -1), (25, 2048), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, 2048), (37, 1024), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 262144), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, 8388608), (12, -1), (13, 131072), (14, -1), (15, 270336), (16, -1), (17, 8388608), (18, -1), (19, 4194304), (20, 131072), (21, -1), (22, -1), (23, -1), (24, -1), (25, 2097152), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, 2097152), (37, 65536), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 12 : set()

After reduction : 
 pending  : [37, 25, 36, 20, 19, 17, 2, 15, 13, 11]
 solution : [7, 3, 28, 5]


Solution : [7, 3, 28, 5] has cost 17.


Decide in level 12 among pending : [37, 25, 36, 20, 19, 17, 2, 15, 13, 11]

Coverage : [(0, -1), (1, -1), (2, 262144), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, 8388608), (12, -1), (13, 131072), (14, -1), (15, 270336), (16, -1), (17, 8388608), (18, -1), (19, 4194304), (20, 131072), (21, -1), (22, -1), (23, -1), (24, -1), (25, 2097152), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, 2097152), (37, 65536), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Decide 17 with phase True at level 12

After decision at level 12
 pending : [37, 25, 36, 20, 19, 2, 15, 13, 11]
 solution : [7, 3, 28, 5, 17]


New level: 13
 pending : [37, 25, 36, 20, 19, 2, 15, 13, 11]
 solution : [7, 3, 28, 5, 17]


Before reduction : 
 pending  : [37, 25, 36, 20, 19, 2, 15, 13, 11]
 solution : [7, 3, 28, 5, 17]

Essensial at level 13 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 262144), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, 8388608), (12, -1), (13, 131072), (14, -1), (15, 270336), (16, -1), (17, 8388608), (18, -1), (19, 4194304), (20, 131072), (21, -1), (22, -1), (23, -1), (24, -1), (25, 2097152), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, 2097152), (37, 65536), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 131072), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, 2097152), (12, -1), (13, 0), (14, -1), (15, 133120), (16, -1), (17, -1), (18, -1), (19, 0), (20, 0), (21, -1), (22, -1), (23, -1), (24, -1), (25, 524288), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, 524288), (37, 1024), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 13 : {19, 20, 13}

After reduction : 
 pending  : [37, 25, 36, 2, 15, 11]
 solution : [7, 3, 28, 5, 17]


Before reduction : 
 pending  : [37, 25, 36, 2, 15, 11]
 solution : [7, 3, 28, 5, 17]

Essensial at level 13 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 131072), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, 2097152), (12, -1), (13, 0), (14, -1), (15, 133120), (16, -1), (17, -1), (18, -1), (19, 0), (20, 0), (21, -1), (22, -1), (23, -1), (24, -1), (25, 524288), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, 524288), (37, 1024), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 131072), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, 2097152), (12, -1), (13, -1), (14, -1), (15, 133120), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, 524288), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, 524288), (37, 1024), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 13 : set()

After reduction : 
 pending  : [37, 25, 36, 2, 15, 11]
 solution : [7, 3, 28, 5, 17]


Solution : [7, 3, 28, 5, 17] has cost 24.


Before backtrack at level 13
 pending : [37, 25, 36, 2, 15, 11]
 solution : [7, 3, 28, 5, 17]

After backtrack at level 13
 pending : [37, 25, 36, 2, 15, 11, 20, 19, 13]
 solution : [7, 3, 28, 5, 17]


Invert decision for 17 at level 12


New level: 13
 pending : [37, 25, 36, 2, 15, 11, 20, 19, 13]
 solution : [7, 3, 28, 5]


Before reduction : 
 pending  : [37, 25, 36, 2, 15, 11, 20, 19, 13]
 solution : [7, 3, 28, 5]

Essensial at level 13 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 131072), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, 2097152), (12, -1), (13, -1), (14, -1), (15, 133120), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, 524288), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, 524288), (37, 1024), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 262144), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, 8388608), (12, -1), (13, 131072), (14, -1), (15, 270336), (16, -1), (17, -1), (18, -1), (19, 4194304), (20, 131072), (21, -1), (22, -1), (23, -1), (24, -1), (25, 2097152), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, 2097152), (37, 65536), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 13 : set()

After reduction : 
 pending  : [37, 25, 36, 2, 15, 11, 20, 19, 13]
 solution : [7, 3, 28, 5]


Solution : [7, 3, 28, 5] has cost 17.


Decide in level 13 among pending : [37, 25, 36, 2, 15, 11, 20, 19, 13]

Coverage : [(0, -1), (1, -1), (2, 262144), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, 8388608), (12, -1), (13, 131072), (14, -1), (15, 270336), (16, -1), (17, -1), (18, -1), (19, 4194304), (20, 131072), (21, -1), (22, -1), (23, -1), (24, -1), (25, 2097152), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, 2097152), (37, 65536), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Decide 11 with phase True at level 13

After decision at level 13
 pending : [37, 25, 36, 2, 15, 20, 19, 13]
 solution : [7, 3, 28, 5, 11]


New level: 14
 pending : [37, 25, 36, 2, 15, 20, 19, 13]
 solution : [7, 3, 28, 5, 11]


Before reduction : 
 pending  : [37, 25, 36, 2, 15, 20, 19, 13]
 solution : [7, 3, 28, 5, 11]

Essensial at level 14 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 262144), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, 8388608), (12, -1), (13, 131072), (14, -1), (15, 270336), (16, -1), (17, -1), (18, -1), (19, 4194304), (20, 131072), (21, -1), (22, -1), (23, -1), (24, -1), (25, 2097152), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, 2097152), (37, 65536), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 0), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, 0), (14, -1), (15, 0), (16, -1), (17, -1), (18, -1), (19, 32768), (20, 32768), (21, -1), (22, -1), (23, -1), (24, -1), (25, 2048), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, 2048), (37, 1024), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 14 : {2, 13, 15}

After reduction : 
 pending  : [37, 25, 36, 20, 19]
 solution : [7, 3, 28, 5, 11]


Before reduction : 
 pending  : [37, 25, 36, 20, 19]
 solution : [7, 3, 28, 5, 11]

Essensial at level 14 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 0), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, 0), (14, -1), (15, 0), (16, -1), (17, -1), (18, -1), (19, 32768), (20, 32768), (21, -1), (22, -1), (23, -1), (24, -1), (25, 2048), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, 2048), (37, 1024), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, 32768), (20, 32768), (21, -1), (22, -1), (23, -1), (24, -1), (25, 2048), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, 2048), (37, 1024), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 14 : set()

After reduction : 
 pending  : [37, 25, 36, 20, 19]
 solution : [7, 3, 28, 5, 11]


Solution : [7, 3, 28, 5, 11] has cost 26.


Before backtrack at level 14
 pending : [37, 25, 36, 20, 19]
 solution : [7, 3, 28, 5, 11]

After backtrack at level 14
 pending : [37, 25, 36, 20, 19, 2, 15, 13]
 solution : [7, 3, 28, 5, 11]


Invert decision for 11 at level 13


New level: 14
 pending : [37, 25, 36, 20, 19, 2, 15, 13]
 solution : [7, 3, 28, 5]


Before reduction : 
 pending  : [37, 25, 36, 20, 19, 2, 15, 13]
 solution : [7, 3, 28, 5]

Essensial at level 14 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, 32768), (20, 32768), (21, -1), (22, -1), (23, -1), (24, -1), (25, 2048), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, 2048), (37, 1024), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 262144), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, 131072), (14, -1), (15, 270336), (16, -1), (17, -1), (18, -1), (19, 4194304), (20, 131072), (21, -1), (22, -1), (23, -1), (24, -1), (25, 2097152), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, 2097152), (37, 65536), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 14 : set()

After reduction : 
 pending  : [37, 25, 36, 20, 19, 2, 15, 13]
 solution : [7, 3, 28, 5]


Solution : [7, 3, 28, 5] has cost 17.


Decide in level 14 among pending : [37, 25, 36, 20, 19, 2, 15, 13]

Coverage : [(0, -1), (1, -1), (2, 262144), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, 131072), (14, -1), (15, 270336), (16, -1), (17, -1), (18, -1), (19, 4194304), (20, 131072), (21, -1), (22, -1), (23, -1), (24, -1), (25, 2097152), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, 2097152), (37, 65536), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Decide 19 with phase True at level 14

After decision at level 14
 pending : [37, 25, 36, 20, 2, 15, 13]
 solution : [7, 3, 28, 5, 19]


New level: 15
 pending : [37, 25, 36, 20, 2, 15, 13]
 solution : [7, 3, 28, 5, 19]


Before reduction : 
 pending  : [37, 25, 36, 20, 2, 15, 13]
 solution : [7, 3, 28, 5, 19]

Essensial at level 15 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 262144), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, 131072), (14, -1), (15, 270336), (16, -1), (17, -1), (18, -1), (19, 4194304), (20, 131072), (21, -1), (22, -1), (23, -1), (24, -1), (25, 2097152), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, 2097152), (37, 65536), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 131072), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, 0), (14, -1), (15, 133120), (16, -1), (17, -1), (18, -1), (19, -1), (20, 0), (21, -1), (22, -1), (23, -1), (24, -1), (25, 524288), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, 524288), (37, 1024), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 15 : {20, 13}

After reduction : 
 pending  : [37, 25, 36, 2, 15]
 solution : [7, 3, 28, 5, 19]


Before reduction : 
 pending  : [37, 25, 36, 2, 15]
 solution : [7, 3, 28, 5, 19]

Essensial at level 15 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 131072), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, 0), (14, -1), (15, 133120), (16, -1), (17, -1), (18, -1), (19, -1), (20, 0), (21, -1), (22, -1), (23, -1), (24, -1), (25, 524288), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, 524288), (37, 1024), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 131072), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, 133120), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, 524288), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, 524288), (37, 1024), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 15 : set()

After reduction : 
 pending  : [37, 25, 36, 2, 15]
 solution : [7, 3, 28, 5, 19]


Solution : [7, 3, 28, 5, 19] has cost 24.


Before backtrack at level 15
 pending : [37, 25, 36, 2, 15]
 solution : [7, 3, 28, 5, 19]

After backtrack at level 15
 pending : [37, 25, 36, 2, 15, 20, 13]
 solution : [7, 3, 28, 5, 19]


Invert decision for 19 at level 14


New level: 15
 pending : [37, 25, 36, 2, 15, 20, 13]
 solution : [7, 3, 28, 5]


Before reduction : 
 pending  : [37, 25, 36, 2, 15, 20, 13]
 solution : [7, 3, 28, 5]

Essensial at level 15 : {20}

Before removed
 coverage : [(0, -1), (1, -1), (2, 131072), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, 133120), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, 524288), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, 524288), (37, 1024), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 262144), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, 65536), (14, -1), (15, 270336), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, 2097152), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, 2097152), (37, 65536), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 15 : set()

After reduction : 
 pending  : [37, 25, 36, 2, 15, 13]
 solution : [7, 3, 28, 5, 20]


Before reduction : 
 pending  : [37, 25, 36, 2, 15, 13]
 solution : [7, 3, 28, 5, 20]

Essensial at level 15 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 262144), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, 65536), (14, -1), (15, 270336), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, 2097152), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, 2097152), (37, 65536), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 262144), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, 65536), (14, -1), (15, 270336), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, 2097152), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, 2097152), (37, 65536), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 15 : set()

After reduction : 
 pending  : [37, 25, 36, 2, 15, 13]
 solution : [7, 3, 28, 5, 20]


Solution : [7, 3, 28, 5, 20] has cost 24.


Before backtrack at level 15
 pending : [37, 25, 36, 2, 15, 13]
 solution : [7, 3, 28, 5, 20]

After backtrack at level 15
 pending : [37, 25, 36, 2, 15, 13, 20]
 solution : [7, 3, 28, 5]


Before backtrack at level 14
 pending : [37, 25, 36, 2, 15, 13, 20]
 solution : [7, 3, 28, 5]

After backtrack at level 14
 pending : [37, 25, 36, 2, 15, 13, 20, 19]
 solution : [7, 3, 28, 5]


Before backtrack at level 13
 pending : [37, 25, 36, 2, 15, 13, 20, 19]
 solution : [7, 3, 28, 5]

After backtrack at level 13
 pending : [37, 25, 36, 2, 15, 13, 20, 19, 11]
 solution : [7, 3, 28, 5]


Before backtrack at level 12
 pending : [37, 25, 36, 2, 15, 13, 20, 19, 11]
 solution : [7, 3, 28, 5]

After backtrack at level 12
 pending : [37, 25, 36, 2, 15, 13, 20, 19, 11, 17]
 solution : [7, 3, 28, 5]


Before backtrack at level 11
 pending : [37, 25, 36, 2, 15, 13, 20, 19, 11, 17]
 solution : [7, 3, 28, 5]

After backtrack at level 11
 pending : [37, 25, 36, 2, 15, 13, 20, 19, 11, 17, 9, 30, 31, 39, 42, 43, 47, 48, 49, 40, 23, 34, 35, 12]
 solution : [7, 3, 28, 5]


Invert decision for 5 at level 10


New level: 11
 pending : [37, 25, 36, 2, 15, 13, 20, 19, 11, 17, 9, 30, 31, 39, 42, 43, 47, 48, 49, 40, 23, 34, 35, 12]
 solution : [7, 3, 28]


Before reduction : 
 pending  : [37, 25, 36, 2, 15, 13, 20, 19, 11, 17, 9, 30, 31, 39, 42, 43, 47, 48, 49, 40, 23, 34, 35, 12]
 solution : [7, 3, 28]

Essensial at level 11 : {23}

Before removed
 coverage : [(0, -1), (1, -1), (2, 262144), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, 65536), (14, -1), (15, 270336), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, 2097152), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, 2097152), (37, 65536), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 262144), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, 0), (10, -1), (11, 8388608), (12, 16777216), (13, 131072), (14, -1), (15, 270336), (16, -1), (17, 8388608), (18, -1), (19, 4194304), (20, 131072), (21, -1), (22, -1), (23, -1), (24, -1), (25, 2097152), (26, -1), (27, -1), (28, -1), (29, -1), (30, 0), (31, 0), (32, -1), (33, -1), (34, 0), (35, 0), (36, 2097152), (37, 524288), (38, -1), (39, 0), (40, 0), (41, -1), (42, 0), (43, 0), (44, -1), (45, -1), (46, -1), (47, 0), (48, 0), (49, 0), (50, -1), (51, -1), (52, -1)]

Covered at level 11 : {34, 35, 39, 40, 9, 42, 43, 47, 48, 49, 30, 31}

After reduction : 
 pending  : [37, 25, 36, 2, 15, 13, 20, 19, 11, 17, 12]
 solution : [7, 3, 28, 23]


Before reduction : 
 pending  : [37, 25, 36, 2, 15, 13, 20, 19, 11, 17, 12]
 solution : [7, 3, 28, 23]

Essensial at level 11 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 262144), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, 0), (10, -1), (11, 8388608), (12, 16777216), (13, 131072), (14, -1), (15, 270336), (16, -1), (17, 8388608), (18, -1), (19, 4194304), (20, 131072), (21, -1), (22, -1), (23, -1), (24, -1), (25, 2097152), (26, -1), (27, -1), (28, -1), (29, -1), (30, 0), (31, 0), (32, -1), (33, -1), (34, 0), (35, 0), (36, 2097152), (37, 524288), (38, -1), (39, 0), (40, 0), (41, -1), (42, 0), (43, 0), (44, -1), (45, -1), (46, -1), (47, 0), (48, 0), (49, 0), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 262144), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, 8388608), (12, 16777216), (13, 131072), (14, -1), (15, 270336), (16, -1), (17, 8388608), (18, -1), (19, 4194304), (20, 131072), (21, -1), (22, -1), (23, -1), (24, -1), (25, 2097152), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, 2097152), (37, 524288), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 11 : set()

After reduction : 
 pending  : [37, 25, 36, 2, 15, 13, 20, 19, 11, 17, 12]
 solution : [7, 3, 28, 23]


Solution : [7, 3, 28, 23] has cost 20.


Before backtrack at level 11
 pending : [37, 25, 36, 2, 15, 13, 20, 19, 11, 17, 12]
 solution : [7, 3, 28, 23]

After backtrack at level 11
 pending : [37, 25, 36, 2, 15, 13, 20, 19, 11, 17, 12, 23, 9, 30, 31, 39, 42, 43, 47, 48, 49, 40, 34, 35]
 solution : [7, 3, 28]


Before backtrack at level 10
 pending : [37, 25, 36, 2, 15, 13, 20, 19, 11, 17, 12, 23, 9, 30, 31, 39, 42, 43, 47, 48, 49, 40, 34, 35]
 solution : [7, 3, 28]

After backtrack at level 10
 pending : [37, 25, 36, 2, 15, 13, 20, 19, 11, 17, 12, 23, 9, 30, 31, 39, 42, 43, 47, 48, 49, 40, 34, 35, 5]
 solution : [7, 3, 28]


Before backtrack at level 9
 pending : [37, 25, 36, 2, 15, 13, 20, 19, 11, 17, 12, 23, 9, 30, 31, 39, 42, 43, 47, 48, 49, 40, 34, 35, 5]
 solution : [7, 3, 28]

After backtrack at level 9
 pending : [37, 25, 36, 2, 15, 13, 20, 19, 11, 17, 12, 23, 9, 30, 31, 39, 42, 43, 47, 48, 49, 40, 34, 35, 5, 27]
 solution : [7, 3, 28]


Before backtrack at level 8
 pending : [37, 25, 36, 2, 15, 13, 20, 19, 11, 17, 12, 23, 9, 30, 31, 39, 42, 43, 47, 48, 49, 40, 34, 35, 5, 27]
 solution : [7, 3, 28]

After backtrack at level 8
 pending : [37, 25, 36, 2, 15, 13, 20, 19, 11, 17, 12, 23, 9, 30, 31, 39, 42, 43, 47, 48, 49, 40, 34, 35, 5, 27, 41]
 solution : [7, 3, 28]


Before backtrack at level 7
 pending : [37, 25, 36, 2, 15, 13, 20, 19, 11, 17, 12, 23, 9, 30, 31, 39, 42, 43, 47, 48, 49, 40, 34, 35, 5, 27, 41]
 solution : [7, 3, 28]

After backtrack at level 7
 pending : [37, 25, 36, 2, 15, 13, 20, 19, 11, 17, 12, 23, 9, 30, 31, 39, 42, 43, 47, 48, 49, 40, 34, 35, 5, 27, 41, 33]
 solution : [7, 3, 28]


Before backtrack at level 6
 pending : [37, 25, 36, 2, 15, 13, 20, 19, 11, 17, 12, 23, 9, 30, 31, 39, 42, 43, 47, 48, 49, 40, 34, 35, 5, 27, 41, 33]
 solution : [7, 3, 28]

After backtrack at level 6
 pending : [37, 25, 36, 2, 15, 13, 20, 19, 11, 17, 12, 23, 9, 30, 31, 39, 42, 43, 47, 48, 49, 40, 34, 35, 5, 27, 41, 33, 18]
 solution : [7, 3, 28]


Invert decision for 28 at level 5


New level: 6
 pending : [37, 25, 36, 2, 15, 13, 20, 19, 11, 17, 12, 23, 9, 30, 31, 39, 42, 43, 47, 48, 49, 40, 34, 35, 5, 27, 41, 33, 18]
 solution : [7, 3]


Before reduction : 
 pending  : [37, 25, 36, 2, 15, 13, 20, 19, 11, 17, 12, 23, 9, 30, 31, 39, 42, 43, 47, 48, 49, 40, 34, 35, 5, 27, 41, 33, 18]
 solution : [7, 3]

Essensial at level 6 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 262144), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, 8388608), (12, 16777216), (13, 131072), (14, -1), (15, 270336), (16, -1), (17, 8388608), (18, -1), (19, 4194304), (20, 131072), (21, -1), (22, -1), (23, -1), (24, -1), (25, 2097152), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, 2097152), (37, 524288), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 524288), (3, -1), (4, -1), (5, 67108864), (6, -1), (7, -1), (8, -1), (9, 524288), (10, -1), (11, 16777216), (12, 33554432), (13, 262144), (14, -1), (15, 557056), (16, -1), (17, 8388608), (18, 536870912), (19, 4194304), (20, 131072), (21, -1), (22, -1), (23, 67108864), (24, -1), (25, 2097152), (26, -1), (27, 268435456), (28, -1), (29, -1), (30, 524288), (31, 8192), (32, -1), (33, 536870912), (34, 1048576), (35, 8192), (36, 2097152), (37, 67108864), (38, -1), (39, 8192), (40, 67108864), (41, 134217728), (42, 262144), (43, 262144), (44, -1), (45, -1), (46, -1), (47, 33554432), (48, 8388608), (49, 33554432), (50, -1), (51, -1), (52, -1)]

Covered at level 6 : set()

After reduction : 
 pending  : [37, 25, 36, 2, 15, 13, 20, 19, 11, 17, 12, 23, 9, 30, 31, 39, 42, 43, 47, 48, 49, 40, 34, 35, 5, 27, 41, 33, 18]
 solution : [7, 3]


Solution : [7, 3] has cost 9.


Decide in level 6 among pending : [37, 25, 36, 2, 15, 13, 20, 19, 11, 17, 12, 23, 9, 30, 31, 39, 42, 43, 47, 48, 49, 40, 34, 35, 5, 27, 41, 33, 18]

Coverage : [(0, -1), (1, -1), (2, 524288), (3, -1), (4, -1), (5, 67108864), (6, -1), (7, -1), (8, -1), (9, 524288), (10, -1), (11, 16777216), (12, 33554432), (13, 262144), (14, -1), (15, 557056), (16, -1), (17, 8388608), (18, 536870912), (19, 4194304), (20, 131072), (21, -1), (22, -1), (23, 67108864), (24, -1), (25, 2097152), (26, -1), (27, 268435456), (28, -1), (29, -1), (30, 524288), (31, 8192), (32, -1), (33, 536870912), (34, 1048576), (35, 8192), (36, 2097152), (37, 67108864), (38, -1), (39, 8192), (40, 67108864), (41, 134217728), (42, 262144), (43, 262144), (44, -1), (45, -1), (46, -1), (47, 33554432), (48, 8388608), (49, 33554432), (50, -1), (51, -1), (52, -1)]

Decide 33 with phase True at level 6

After decision at level 6
 pending : [37, 25, 36, 2, 15, 13, 20, 19, 11, 17, 12, 23, 9, 30, 31, 39, 42, 43, 47, 48, 49, 40, 34, 35, 5, 27, 41, 18]
 solution : [7, 3, 33]


New level: 7
 pending : [37, 25, 36, 2, 15, 13, 20, 19, 11, 17, 12, 23, 9, 30, 31, 39, 42, 43, 47, 48, 49, 40, 34, 35, 5, 27, 41, 18]
 solution : [7, 3, 33]


Before reduction : 
 pending  : [37, 25, 36, 2, 15, 13, 20, 19, 11, 17, 12, 23, 9, 30, 31, 39, 42, 43, 47, 48, 49, 40, 34, 35, 5, 27, 41, 18]
 solution : [7, 3, 33]

Essensial at level 7 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 524288), (3, -1), (4, -1), (5, 67108864), (6, -1), (7, -1), (8, -1), (9, 524288), (10, -1), (11, 16777216), (12, 33554432), (13, 262144), (14, -1), (15, 557056), (16, -1), (17, 8388608), (18, 536870912), (19, 4194304), (20, 131072), (21, -1), (22, -1), (23, 67108864), (24, -1), (25, 2097152), (26, -1), (27, 268435456), (28, -1), (29, -1), (30, 524288), (31, 8192), (32, -1), (33, 536870912), (34, 1048576), (35, 8192), (36, 2097152), (37, 67108864), (38, -1), (39, 8192), (40, 67108864), (41, 134217728), (42, 262144), (43, 262144), (44, -1), (45, -1), (46, -1), (47, 33554432), (48, 8388608), (49, 33554432), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 524288), (3, -1), (4, -1), (5, 67108864), (6, -1), (7, -1), (8, -1), (9, 131072), (10, -1), (11, 16777216), (12, 33554432), (13, 262144), (14, -1), (15, 557056), (16, -1), (17, 8388608), (18, 536870912), (19, 4194304), (20, 131072), (21, -1), (22, -1), (23, 67108864), (24, -1), (25, 2097152), (26, -1), (27, 8192), (28, -1), (29, -1), (30, 131072), (31, 2048), (32, -1), (33, -1), (34, 0), (35, 0), (36, 2097152), (37, 67108864), (38, -1), (39, 2048), (40, 16777216), (41, 4096), (42, 65536), (43, 65536), (44, -1), (45, -1), (46, -1), (47, 8388608), (48, 2097152), (49, 8388608), (50, -1), (51, -1), (52, -1)]

Covered at level 7 : {34, 35}

After reduction : 
 pending  : [37, 25, 36, 2, 15, 13, 20, 19, 11, 17, 12, 23, 9, 30, 31, 39, 42, 43, 47, 48, 49, 40, 5, 27, 41, 18]
 solution : [7, 3, 33]


Before reduction : 
 pending  : [37, 25, 36, 2, 15, 13, 20, 19, 11, 17, 12, 23, 9, 30, 31, 39, 42, 43, 47, 48, 49, 40, 5, 27, 41, 18]
 solution : [7, 3, 33]

Essensial at level 7 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 524288), (3, -1), (4, -1), (5, 67108864), (6, -1), (7, -1), (8, -1), (9, 131072), (10, -1), (11, 16777216), (12, 33554432), (13, 262144), (14, -1), (15, 557056), (16, -1), (17, 8388608), (18, 536870912), (19, 4194304), (20, 131072), (21, -1), (22, -1), (23, 67108864), (24, -1), (25, 2097152), (26, -1), (27, 8192), (28, -1), (29, -1), (30, 131072), (31, 2048), (32, -1), (33, -1), (34, 0), (35, 0), (36, 2097152), (37, 67108864), (38, -1), (39, 2048), (40, 16777216), (41, 4096), (42, 65536), (43, 65536), (44, -1), (45, -1), (46, -1), (47, 8388608), (48, 2097152), (49, 8388608), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 524288), (3, -1), (4, -1), (5, 67108864), (6, -1), (7, -1), (8, -1), (9, 131072), (10, -1), (11, 16777216), (12, 33554432), (13, 262144), (14, -1), (15, 557056), (16, -1), (17, 8388608), (18, 536870912), (19, 4194304), (20, 131072), (21, -1), (22, -1), (23, 67108864), (24, -1), (25, 2097152), (26, -1), (27, 8192), (28, -1), (29, -1), (30, 131072), (31, 2048), (32, -1), (33, -1), (34, -1), (35, -1), (36, 2097152), (37, 67108864), (38, -1), (39, 2048), (40, 16777216), (41, 4096), (42, 65536), (43, 65536), (44, -1), (45, -1), (46, -1), (47, 8388608), (48, 2097152), (49, 8388608), (50, -1), (51, -1), (52, -1)]

Covered at level 7 : set()

After reduction : 
 pending  : [37, 25, 36, 2, 15, 13, 20, 19, 11, 17, 12, 23, 9, 30, 31, 39, 42, 43, 47, 48, 49, 40, 5, 27, 41, 18]
 solution : [7, 3, 33]


Solution : [7, 3, 33] has cost 22.


Before backtrack at level 7
 pending : [37, 25, 36, 2, 15, 13, 20, 19, 11, 17, 12, 23, 9, 30, 31, 39, 42, 43, 47, 48, 49, 40, 5, 27, 41, 18]
 solution : [7, 3, 33]

After backtrack at level 7
 pending : [37, 25, 36, 2, 15, 13, 20, 19, 11, 17, 12, 23, 9, 30, 31, 39, 42, 43, 47, 48, 49, 40, 5, 27, 41, 18, 34, 35]
 solution : [7, 3, 33]


Invert decision for 33 at level 6


New level: 7
 pending : [37, 25, 36, 2, 15, 13, 20, 19, 11, 17, 12, 23, 9, 30, 31, 39, 42, 43, 47, 48, 49, 40, 5, 27, 41, 18, 34, 35]
 solution : [7, 3]


Before reduction : 
 pending  : [37, 25, 36, 2, 15, 13, 20, 19, 11, 17, 12, 23, 9, 30, 31, 39, 42, 43, 47, 48, 49, 40, 5, 27, 41, 18, 34, 35]
 solution : [7, 3]

Essensial at level 7 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 524288), (3, -1), (4, -1), (5, 67108864), (6, -1), (7, -1), (8, -1), (9, 131072), (10, -1), (11, 16777216), (12, 33554432), (13, 262144), (14, -1), (15, 557056), (16, -1), (17, 8388608), (18, 536870912), (19, 4194304), (20, 131072), (21, -1), (22, -1), (23, 67108864), (24, -1), (25, 2097152), (26, -1), (27, 8192), (28, -1), (29, -1), (30, 131072), (31, 2048), (32, -1), (33, -1), (34, -1), (35, -1), (36, 2097152), (37, 67108864), (38, -1), (39, 2048), (40, 16777216), (41, 4096), (42, 65536), (43, 65536), (44, -1), (45, -1), (46, -1), (47, 8388608), (48, 2097152), (49, 8388608), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 524288), (3, -1), (4, -1), (5, 67108864), (6, -1), (7, -1), (8, -1), (9, 524288), (10, -1), (11, 16777216), (12, 33554432), (13, 262144), (14, -1), (15, 557056), (16, -1), (17, 8388608), (18, 536870912), (19, 4194304), (20, 131072), (21, -1), (22, -1), (23, 67108864), (24, -1), (25, 2097152), (26, -1), (27, 268435456), (28, -1), (29, -1), (30, 524288), (31, 8192), (32, -1), (33, -1), (34, 1048576), (35, 8192), (36, 2097152), (37, 67108864), (38, -1), (39, 8192), (40, 67108864), (41, 134217728), (42, 262144), (43, 262144), (44, -1), (45, -1), (46, -1), (47, 33554432), (48, 8388608), (49, 33554432), (50, -1), (51, -1), (52, -1)]

Covered at level 7 : set()

After reduction : 
 pending  : [37, 25, 36, 2, 15, 13, 20, 19, 11, 17, 12, 23, 9, 30, 31, 39, 42, 43, 47, 48, 49, 40, 5, 27, 41, 18, 34, 35]
 solution : [7, 3]


Solution : [7, 3] has cost 9.


Decide in level 7 among pending : [37, 25, 36, 2, 15, 13, 20, 19, 11, 17, 12, 23, 9, 30, 31, 39, 42, 43, 47, 48, 49, 40, 5, 27, 41, 18, 34, 35]

Coverage : [(0, -1), (1, -1), (2, 524288), (3, -1), (4, -1), (5, 67108864), (6, -1), (7, -1), (8, -1), (9, 524288), (10, -1), (11, 16777216), (12, 33554432), (13, 262144), (14, -1), (15, 557056), (16, -1), (17, 8388608), (18, 536870912), (19, 4194304), (20, 131072), (21, -1), (22, -1), (23, 67108864), (24, -1), (25, 2097152), (26, -1), (27, 268435456), (28, -1), (29, -1), (30, 524288), (31, 8192), (32, -1), (33, -1), (34, 1048576), (35, 8192), (36, 2097152), (37, 67108864), (38, -1), (39, 8192), (40, 67108864), (41, 134217728), (42, 262144), (43, 262144), (44, -1), (45, -1), (46, -1), (47, 33554432), (48, 8388608), (49, 33554432), (50, -1), (51, -1), (52, -1)]

Decide 18 with phase True at level 7

After decision at level 7
 pending : [37, 25, 36, 2, 15, 13, 20, 19, 11, 17, 12, 23, 9, 30, 31, 39, 42, 43, 47, 48, 49, 40, 5, 27, 41, 34, 35]
 solution : [7, 3, 18]


New level: 8
 pending : [37, 25, 36, 2, 15, 13, 20, 19, 11, 17, 12, 23, 9, 30, 31, 39, 42, 43, 47, 48, 49, 40, 5, 27, 41, 34, 35]
 solution : [7, 3, 18]


Before reduction : 
 pending  : [37, 25, 36, 2, 15, 13, 20, 19, 11, 17, 12, 23, 9, 30, 31, 39, 42, 43, 47, 48, 49, 40, 5, 27, 41, 34, 35]
 solution : [7, 3, 18]

Essensial at level 8 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 524288), (3, -1), (4, -1), (5, 67108864), (6, -1), (7, -1), (8, -1), (9, 524288), (10, -1), (11, 16777216), (12, 33554432), (13, 262144), (14, -1), (15, 557056), (16, -1), (17, 8388608), (18, 536870912), (19, 4194304), (20, 131072), (21, -1), (22, -1), (23, 67108864), (24, -1), (25, 2097152), (26, -1), (27, 268435456), (28, -1), (29, -1), (30, 524288), (31, 8192), (32, -1), (33, -1), (34, 1048576), (35, 8192), (36, 2097152), (37, 67108864), (38, -1), (39, 8192), (40, 67108864), (41, 134217728), (42, 262144), (43, 262144), (44, -1), (45, -1), (46, -1), (47, 33554432), (48, 8388608), (49, 33554432), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 0), (3, -1), (4, -1), (5, 67108864), (6, -1), (7, -1), (8, -1), (9, 131072), (10, -1), (11, 0), (12, 0), (13, 0), (14, -1), (15, 0), (16, -1), (17, 0), (18, -1), (19, 0), (20, 0), (21, -1), (22, -1), (23, 67108864), (24, -1), (25, 0), (26, -1), (27, 268435456), (28, -1), (29, -1), (30, 262144), (31, 4096), (32, -1), (33, -1), (34, 1048576), (35, 8192), (36, 0), (37, 1024), (38, -1), (39, 2048), (40, 33554432), (41, 2048), (42, 131072), (43, 131072), (44, -1), (45, -1), (46, -1), (47, 16777216), (48, 2097152), (49, 33554432), (50, -1), (51, -1), (52, -1)]

Covered at level 8 : {2, 36, 11, 12, 13, 15, 17, 19, 20, 25}

After reduction : 
 pending  : [37, 23, 9, 30, 31, 39, 42, 43, 47, 48, 49, 40, 5, 27, 41, 34, 35]
 solution : [7, 3, 18]


Before reduction : 
 pending  : [37, 23, 9, 30, 31, 39, 42, 43, 47, 48, 49, 40, 5, 27, 41, 34, 35]
 solution : [7, 3, 18]

Essensial at level 8 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 0), (3, -1), (4, -1), (5, 67108864), (6, -1), (7, -1), (8, -1), (9, 131072), (10, -1), (11, 0), (12, 0), (13, 0), (14, -1), (15, 0), (16, -1), (17, 0), (18, -1), (19, 0), (20, 0), (21, -1), (22, -1), (23, 67108864), (24, -1), (25, 0), (26, -1), (27, 268435456), (28, -1), (29, -1), (30, 262144), (31, 4096), (32, -1), (33, -1), (34, 1048576), (35, 8192), (36, 0), (37, 1024), (38, -1), (39, 2048), (40, 33554432), (41, 2048), (42, 131072), (43, 131072), (44, -1), (45, -1), (46, -1), (47, 16777216), (48, 2097152), (49, 33554432), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 67108864), (6, -1), (7, -1), (8, -1), (9, 131072), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, 67108864), (24, -1), (25, -1), (26, -1), (27, 268435456), (28, -1), (29, -1), (30, 262144), (31, 4096), (32, -1), (33, -1), (34, 1048576), (35, 8192), (36, -1), (37, 1024), (38, -1), (39, 2048), (40, 33554432), (41, 2048), (42, 131072), (43, 131072), (44, -1), (45, -1), (46, -1), (47, 16777216), (48, 2097152), (49, 33554432), (50, -1), (51, -1), (52, -1)]

Covered at level 8 : set()

After reduction : 
 pending  : [37, 23, 9, 30, 31, 39, 42, 43, 47, 48, 49, 40, 5, 27, 41, 34, 35]
 solution : [7, 3, 18]


Solution : [7, 3, 18] has cost 16.


Decide in level 8 among pending : [37, 23, 9, 30, 31, 39, 42, 43, 47, 48, 49, 40, 5, 27, 41, 34, 35]

Coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 67108864), (6, -1), (7, -1), (8, -1), (9, 131072), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, 67108864), (24, -1), (25, -1), (26, -1), (27, 268435456), (28, -1), (29, -1), (30, 262144), (31, 4096), (32, -1), (33, -1), (34, 1048576), (35, 8192), (36, -1), (37, 1024), (38, -1), (39, 2048), (40, 33554432), (41, 2048), (42, 131072), (43, 131072), (44, -1), (45, -1), (46, -1), (47, 16777216), (48, 2097152), (49, 33554432), (50, -1), (51, -1), (52, -1)]

Decide 27 with phase True at level 8

After decision at level 8
 pending : [37, 23, 9, 30, 31, 39, 42, 43, 47, 48, 49, 40, 5, 41, 34, 35]
 solution : [7, 3, 18, 27]


New level: 9
 pending : [37, 23, 9, 30, 31, 39, 42, 43, 47, 48, 49, 40, 5, 41, 34, 35]
 solution : [7, 3, 18, 27]


Before reduction : 
 pending  : [37, 23, 9, 30, 31, 39, 42, 43, 47, 48, 49, 40, 5, 41, 34, 35]
 solution : [7, 3, 18, 27]

Essensial at level 9 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 67108864), (6, -1), (7, -1), (8, -1), (9, 131072), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, 67108864), (24, -1), (25, -1), (26, -1), (27, 268435456), (28, -1), (29, -1), (30, 262144), (31, 4096), (32, -1), (33, -1), (34, 1048576), (35, 8192), (36, -1), (37, 1024), (38, -1), (39, 2048), (40, 33554432), (41, 2048), (42, 131072), (43, 131072), (44, -1), (45, -1), (46, -1), (47, 16777216), (48, 2097152), (49, 33554432), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 16777216), (6, -1), (7, -1), (8, -1), (9, 32768), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, 16777216), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, 65536), (31, 1024), (32, -1), (33, -1), (34, 0), (35, 0), (36, -1), (37, 512), (38, -1), (39, 512), (40, 16777216), (41, 0), (42, 32768), (43, 32768), (44, -1), (45, -1), (46, -1), (47, 4194304), (48, 524288), (49, 16777216), (50, -1), (51, -1), (52, -1)]

Covered at level 9 : {41, 34, 35}

After reduction : 
 pending  : [37, 23, 9, 30, 31, 39, 42, 43, 47, 48, 49, 40, 5]
 solution : [7, 3, 18, 27]


Before reduction : 
 pending  : [37, 23, 9, 30, 31, 39, 42, 43, 47, 48, 49, 40, 5]
 solution : [7, 3, 18, 27]

Essensial at level 9 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 16777216), (6, -1), (7, -1), (8, -1), (9, 32768), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, 16777216), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, 65536), (31, 1024), (32, -1), (33, -1), (34, 0), (35, 0), (36, -1), (37, 512), (38, -1), (39, 512), (40, 16777216), (41, 0), (42, 32768), (43, 32768), (44, -1), (45, -1), (46, -1), (47, 4194304), (48, 524288), (49, 16777216), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 16777216), (6, -1), (7, -1), (8, -1), (9, 32768), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, 16777216), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, 65536), (31, 1024), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, 512), (38, -1), (39, 512), (40, 16777216), (41, -1), (42, 32768), (43, 32768), (44, -1), (45, -1), (46, -1), (47, 4194304), (48, 524288), (49, 16777216), (50, -1), (51, -1), (52, -1)]

Covered at level 9 : set()

After reduction : 
 pending  : [37, 23, 9, 30, 31, 39, 42, 43, 47, 48, 49, 40, 5]
 solution : [7, 3, 18, 27]


Solution : [7, 3, 18, 27] has cost 23.


Before backtrack at level 9
 pending : [37, 23, 9, 30, 31, 39, 42, 43, 47, 48, 49, 40, 5]
 solution : [7, 3, 18, 27]

After backtrack at level 9
 pending : [37, 23, 9, 30, 31, 39, 42, 43, 47, 48, 49, 40, 5, 41, 34, 35]
 solution : [7, 3, 18, 27]


Invert decision for 27 at level 8


New level: 9
 pending : [37, 23, 9, 30, 31, 39, 42, 43, 47, 48, 49, 40, 5, 41, 34, 35]
 solution : [7, 3, 18]


Before reduction : 
 pending  : [37, 23, 9, 30, 31, 39, 42, 43, 47, 48, 49, 40, 5, 41, 34, 35]
 solution : [7, 3, 18]

Essensial at level 9 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 16777216), (6, -1), (7, -1), (8, -1), (9, 32768), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, 16777216), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, 65536), (31, 1024), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, 512), (38, -1), (39, 512), (40, 16777216), (41, -1), (42, 32768), (43, 32768), (44, -1), (45, -1), (46, -1), (47, 4194304), (48, 524288), (49, 16777216), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 67108864), (6, -1), (7, -1), (8, -1), (9, 131072), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, 67108864), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, 262144), (31, 4096), (32, -1), (33, -1), (34, 1048576), (35, 8192), (36, -1), (37, 1024), (38, -1), (39, 2048), (40, 33554432), (41, 2048), (42, 131072), (43, 131072), (44, -1), (45, -1), (46, -1), (47, 16777216), (48, 2097152), (49, 33554432), (50, -1), (51, -1), (52, -1)]

Covered at level 9 : set()

After reduction : 
 pending  : [37, 23, 9, 30, 31, 39, 42, 43, 47, 48, 49, 40, 5, 41, 34, 35]
 solution : [7, 3, 18]


Solution : [7, 3, 18] has cost 16.


Decide in level 9 among pending : [37, 23, 9, 30, 31, 39, 42, 43, 47, 48, 49, 40, 5, 41, 34, 35]

Coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 67108864), (6, -1), (7, -1), (8, -1), (9, 131072), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, 67108864), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, 262144), (31, 4096), (32, -1), (33, -1), (34, 1048576), (35, 8192), (36, -1), (37, 1024), (38, -1), (39, 2048), (40, 33554432), (41, 2048), (42, 131072), (43, 131072), (44, -1), (45, -1), (46, -1), (47, 16777216), (48, 2097152), (49, 33554432), (50, -1), (51, -1), (52, -1)]

Decide 23 with phase True at level 9

After decision at level 9
 pending : [37, 9, 30, 31, 39, 42, 43, 47, 48, 49, 40, 5, 41, 34, 35]
 solution : [7, 3, 18, 23]


New level: 10
 pending : [37, 9, 30, 31, 39, 42, 43, 47, 48, 49, 40, 5, 41, 34, 35]
 solution : [7, 3, 18, 23]


Before reduction : 
 pending  : [37, 9, 30, 31, 39, 42, 43, 47, 48, 49, 40, 5, 41, 34, 35]
 solution : [7, 3, 18, 23]

Essensial at level 10 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 67108864), (6, -1), (7, -1), (8, -1), (9, 131072), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, 67108864), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, 262144), (31, 4096), (32, -1), (33, -1), (34, 1048576), (35, 8192), (36, -1), (37, 1024), (38, -1), (39, 2048), (40, 33554432), (41, 2048), (42, 131072), (43, 131072), (44, -1), (45, -1), (46, -1), (47, 16777216), (48, 2097152), (49, 33554432), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 0), (6, -1), (7, -1), (8, -1), (9, 0), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, 0), (31, 0), (32, -1), (33, -1), (34, 0), (35, 0), (36, -1), (37, 0), (38, -1), (39, 0), (40, 0), (41, 0), (42, 0), (43, 0), (44, -1), (45, -1), (46, -1), (47, 0), (48, 0), (49, 0), (50, -1), (51, -1), (52, -1)]

Covered at level 10 : {34, 35, 37, 5, 39, 40, 9, 42, 43, 41, 47, 48, 49, 30, 31}

After reduction : 
 pending  : []
 solution : [7, 3, 18, 23]


Before reduction : 
 pending  : []
 solution : [7, 3, 18, 23]

Essensial at level 10 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 0), (6, -1), (7, -1), (8, -1), (9, 0), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, 0), (31, 0), (32, -1), (33, -1), (34, 0), (35, 0), (36, -1), (37, 0), (38, -1), (39, 0), (40, 0), (41, 0), (42, 0), (43, 0), (44, -1), (45, -1), (46, -1), (47, 0), (48, 0), (49, 0), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 10 : set()

After reduction : 
 pending  : []
 solution : [7, 3, 18, 23]


Solution : [7, 3, 18, 23] has cost 23.


Before backtrack at level 10
 pending : []
 solution : [7, 3, 18, 23]

After backtrack at level 10
 pending : [37, 9, 30, 31, 39, 42, 43, 47, 48, 49, 40, 5, 41, 34, 35]
 solution : [7, 3, 18, 23]


Invert decision for 23 at level 9


New level: 10
 pending : [37, 9, 30, 31, 39, 42, 43, 47, 48, 49, 40, 5, 41, 34, 35]
 solution : [7, 3, 18]


Before reduction : 
 pending  : [37, 9, 30, 31, 39, 42, 43, 47, 48, 49, 40, 5, 41, 34, 35]
 solution : [7, 3, 18]

Essensial at level 10 : {5}

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, 0), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, 0), (31, 0), (32, -1), (33, -1), (34, 0), (35, 0), (36, -1), (37, 0), (38, -1), (39, 0), (40, 0), (41, 0), (42, 0), (43, 0), (44, -1), (45, -1), (46, -1), (47, 0), (48, 0), (49, 0), (50, -1), (51, -1), (52, -1)]

Covered at level 10 : {34, 35, 37, 39, 40, 9, 42, 43, 41, 47, 48, 49, 30, 31}

After reduction : 
 pending  : []
 solution : [7, 3, 18, 5]


Before reduction : 
 pending  : []
 solution : [7, 3, 18, 5]

Essensial at level 10 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, 0), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, 0), (31, 0), (32, -1), (33, -1), (34, 0), (35, 0), (36, -1), (37, 0), (38, -1), (39, 0), (40, 0), (41, 0), (42, 0), (43, 0), (44, -1), (45, -1), (46, -1), (47, 0), (48, 0), (49, 0), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 10 : set()

After reduction : 
 pending  : []
 solution : [7, 3, 18, 5]


Solution : [7, 3, 18, 5] has cost 20.


Before backtrack at level 10
 pending : []
 solution : [7, 3, 18, 5]

After backtrack at level 10
 pending : [5, 37, 9, 30, 31, 39, 42, 43, 47, 48, 49, 40, 41, 34, 35]
 solution : [7, 3, 18]


Before backtrack at level 9
 pending : [5, 37, 9, 30, 31, 39, 42, 43, 47, 48, 49, 40, 41, 34, 35]
 solution : [7, 3, 18]

After backtrack at level 9
 pending : [5, 37, 9, 30, 31, 39, 42, 43, 47, 48, 49, 40, 41, 34, 35, 23]
 solution : [7, 3, 18]


Before backtrack at level 8
 pending : [5, 37, 9, 30, 31, 39, 42, 43, 47, 48, 49, 40, 41, 34, 35, 23]
 solution : [7, 3, 18]

After backtrack at level 8
 pending : [5, 37, 9, 30, 31, 39, 42, 43, 47, 48, 49, 40, 41, 34, 35, 23, 25, 36, 2, 15, 13, 20, 19, 11, 17, 12, 27]
 solution : [7, 3, 18]


Invert decision for 18 at level 7


New level: 8
 pending : [5, 37, 9, 30, 31, 39, 42, 43, 47, 48, 49, 40, 41, 34, 35, 23, 25, 36, 2, 15, 13, 20, 19, 11, 17, 12, 27]
 solution : [7, 3]


Before reduction : 
 pending  : [5, 37, 9, 30, 31, 39, 42, 43, 47, 48, 49, 40, 41, 34, 35, 23, 25, 36, 2, 15, 13, 20, 19, 11, 17, 12, 27]
 solution : [7, 3]

Essensial at level 8 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 524288), (3, -1), (4, -1), (5, 67108864), (6, -1), (7, -1), (8, -1), (9, 524288), (10, -1), (11, 16777216), (12, 33554432), (13, 262144), (14, -1), (15, 557056), (16, -1), (17, 8388608), (18, -1), (19, 4194304), (20, 131072), (21, -1), (22, -1), (23, 67108864), (24, -1), (25, 2097152), (26, -1), (27, 268435456), (28, -1), (29, -1), (30, 524288), (31, 8192), (32, -1), (33, -1), (34, 1048576), (35, 8192), (36, 2097152), (37, 67108864), (38, -1), (39, 8192), (40, 67108864), (41, 134217728), (42, 262144), (43, 262144), (44, -1), (45, -1), (46, -1), (47, 33554432), (48, 8388608), (49, 33554432), (50, -1), (51, -1), (52, -1)]

Covered at level 8 : set()

After reduction : 
 pending  : [5, 37, 9, 30, 31, 39, 42, 43, 47, 48, 49, 40, 41, 34, 35, 23, 25, 36, 2, 15, 13, 20, 19, 11, 17, 12, 27]
 solution : [7, 3]


Solution : [7, 3] has cost 9.


Decide in level 8 among pending : [5, 37, 9, 30, 31, 39, 42, 43, 47, 48, 49, 40, 41, 34, 35, 23, 25, 36, 2, 15, 13, 20, 19, 11, 17, 12, 27]

Coverage : [(0, -1), (1, -1), (2, 524288), (3, -1), (4, -1), (5, 67108864), (6, -1), (7, -1), (8, -1), (9, 524288), (10, -1), (11, 16777216), (12, 33554432), (13, 262144), (14, -1), (15, 557056), (16, -1), (17, 8388608), (18, -1), (19, 4194304), (20, 131072), (21, -1), (22, -1), (23, 67108864), (24, -1), (25, 2097152), (26, -1), (27, 268435456), (28, -1), (29, -1), (30, 524288), (31, 8192), (32, -1), (33, -1), (34, 1048576), (35, 8192), (36, 2097152), (37, 67108864), (38, -1), (39, 8192), (40, 67108864), (41, 134217728), (42, 262144), (43, 262144), (44, -1), (45, -1), (46, -1), (47, 33554432), (48, 8388608), (49, 33554432), (50, -1), (51, -1), (52, -1)]

Decide 27 with phase True at level 8

After decision at level 8
 pending : [5, 37, 9, 30, 31, 39, 42, 43, 47, 48, 49, 40, 41, 34, 35, 23, 25, 36, 2, 15, 13, 20, 19, 11, 17, 12]
 solution : [7, 3, 27]


New level: 9
 pending : [5, 37, 9, 30, 31, 39, 42, 43, 47, 48, 49, 40, 41, 34, 35, 23, 25, 36, 2, 15, 13, 20, 19, 11, 17, 12]
 solution : [7, 3, 27]


Before reduction : 
 pending  : [5, 37, 9, 30, 31, 39, 42, 43, 47, 48, 49, 40, 41, 34, 35, 23, 25, 36, 2, 15, 13, 20, 19, 11, 17, 12]
 solution : [7, 3, 27]

Essensial at level 9 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 524288), (3, -1), (4, -1), (5, 67108864), (6, -1), (7, -1), (8, -1), (9, 524288), (10, -1), (11, 16777216), (12, 33554432), (13, 262144), (14, -1), (15, 557056), (16, -1), (17, 8388608), (18, -1), (19, 4194304), (20, 131072), (21, -1), (22, -1), (23, 67108864), (24, -1), (25, 2097152), (26, -1), (27, 268435456), (28, -1), (29, -1), (30, 524288), (31, 8192), (32, -1), (33, -1), (34, 1048576), (35, 8192), (36, 2097152), (37, 67108864), (38, -1), (39, 8192), (40, 67108864), (41, 134217728), (42, 262144), (43, 262144), (44, -1), (45, -1), (46, -1), (47, 33554432), (48, 8388608), (49, 33554432), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 524288), (3, -1), (4, -1), (5, 16777216), (6, -1), (7, -1), (8, -1), (9, 131072), (10, -1), (11, 16777216), (12, 33554432), (13, 262144), (14, -1), (15, 557056), (16, -1), (17, 8388608), (18, -1), (19, 4194304), (20, 131072), (21, -1), (22, -1), (23, 16777216), (24, -1), (25, 2097152), (26, -1), (27, -1), (28, -1), (29, -1), (30, 131072), (31, 2048), (32, -1), (33, -1), (34, 0), (35, 0), (36, 2097152), (37, 67108864), (38, -1), (39, 2048), (40, 33554432), (41, 512), (42, 65536), (43, 65536), (44, -1), (45, -1), (46, -1), (47, 8388608), (48, 2097152), (49, 16777216), (50, -1), (51, -1), (52, -1)]

Covered at level 9 : {34, 35}

After reduction : 
 pending  : [5, 37, 9, 30, 31, 39, 42, 43, 47, 48, 49, 40, 41, 23, 25, 36, 2, 15, 13, 20, 19, 11, 17, 12]
 solution : [7, 3, 27]


Before reduction : 
 pending  : [5, 37, 9, 30, 31, 39, 42, 43, 47, 48, 49, 40, 41, 23, 25, 36, 2, 15, 13, 20, 19, 11, 17, 12]
 solution : [7, 3, 27]

Essensial at level 9 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 524288), (3, -1), (4, -1), (5, 16777216), (6, -1), (7, -1), (8, -1), (9, 131072), (10, -1), (11, 16777216), (12, 33554432), (13, 262144), (14, -1), (15, 557056), (16, -1), (17, 8388608), (18, -1), (19, 4194304), (20, 131072), (21, -1), (22, -1), (23, 16777216), (24, -1), (25, 2097152), (26, -1), (27, -1), (28, -1), (29, -1), (30, 131072), (31, 2048), (32, -1), (33, -1), (34, 0), (35, 0), (36, 2097152), (37, 67108864), (38, -1), (39, 2048), (40, 33554432), (41, 512), (42, 65536), (43, 65536), (44, -1), (45, -1), (46, -1), (47, 8388608), (48, 2097152), (49, 16777216), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 524288), (3, -1), (4, -1), (5, 16777216), (6, -1), (7, -1), (8, -1), (9, 131072), (10, -1), (11, 16777216), (12, 33554432), (13, 262144), (14, -1), (15, 557056), (16, -1), (17, 8388608), (18, -1), (19, 4194304), (20, 131072), (21, -1), (22, -1), (23, 16777216), (24, -1), (25, 2097152), (26, -1), (27, -1), (28, -1), (29, -1), (30, 131072), (31, 2048), (32, -1), (33, -1), (34, -1), (35, -1), (36, 2097152), (37, 67108864), (38, -1), (39, 2048), (40, 33554432), (41, 512), (42, 65536), (43, 65536), (44, -1), (45, -1), (46, -1), (47, 8388608), (48, 2097152), (49, 16777216), (50, -1), (51, -1), (52, -1)]

Covered at level 9 : set()

After reduction : 
 pending  : [5, 37, 9, 30, 31, 39, 42, 43, 47, 48, 49, 40, 41, 23, 25, 36, 2, 15, 13, 20, 19, 11, 17, 12]
 solution : [7, 3, 27]


Solution : [7, 3, 27] has cost 16.


Decide in level 9 among pending : [5, 37, 9, 30, 31, 39, 42, 43, 47, 48, 49, 40, 41, 23, 25, 36, 2, 15, 13, 20, 19, 11, 17, 12]

Coverage : [(0, -1), (1, -1), (2, 524288), (3, -1), (4, -1), (5, 16777216), (6, -1), (7, -1), (8, -1), (9, 131072), (10, -1), (11, 16777216), (12, 33554432), (13, 262144), (14, -1), (15, 557056), (16, -1), (17, 8388608), (18, -1), (19, 4194304), (20, 131072), (21, -1), (22, -1), (23, 16777216), (24, -1), (25, 2097152), (26, -1), (27, -1), (28, -1), (29, -1), (30, 131072), (31, 2048), (32, -1), (33, -1), (34, -1), (35, -1), (36, 2097152), (37, 67108864), (38, -1), (39, 2048), (40, 33554432), (41, 512), (42, 65536), (43, 65536), (44, -1), (45, -1), (46, -1), (47, 8388608), (48, 2097152), (49, 16777216), (50, -1), (51, -1), (52, -1)]

Decide 37 with phase True at level 9

After decision at level 9
 pending : [5, 9, 30, 31, 39, 42, 43, 47, 48, 49, 40, 41, 23, 25, 36, 2, 15, 13, 20, 19, 11, 17, 12]
 solution : [7, 3, 27, 37]


New level: 10
 pending : [5, 9, 30, 31, 39, 42, 43, 47, 48, 49, 40, 41, 23, 25, 36, 2, 15, 13, 20, 19, 11, 17, 12]
 solution : [7, 3, 27, 37]


Before reduction : 
 pending  : [5, 9, 30, 31, 39, 42, 43, 47, 48, 49, 40, 41, 23, 25, 36, 2, 15, 13, 20, 19, 11, 17, 12]
 solution : [7, 3, 27, 37]

Essensial at level 10 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 524288), (3, -1), (4, -1), (5, 16777216), (6, -1), (7, -1), (8, -1), (9, 131072), (10, -1), (11, 16777216), (12, 33554432), (13, 262144), (14, -1), (15, 557056), (16, -1), (17, 8388608), (18, -1), (19, 4194304), (20, 131072), (21, -1), (22, -1), (23, 16777216), (24, -1), (25, 2097152), (26, -1), (27, -1), (28, -1), (29, -1), (30, 131072), (31, 2048), (32, -1), (33, -1), (34, -1), (35, -1), (36, 2097152), (37, 67108864), (38, -1), (39, 2048), (40, 33554432), (41, 512), (42, 65536), (43, 65536), (44, -1), (45, -1), (46, -1), (47, 8388608), (48, 2097152), (49, 16777216), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 262144), (3, -1), (4, -1), (5, 4194304), (6, -1), (7, -1), (8, -1), (9, 32768), (10, -1), (11, 8388608), (12, 16777216), (13, 131072), (14, -1), (15, 270336), (16, -1), (17, 8388608), (18, -1), (19, 4194304), (20, 131072), (21, -1), (22, -1), (23, 4194304), (24, -1), (25, 524288), (26, -1), (27, -1), (28, -1), (29, -1), (30, 32768), (31, 512), (32, -1), (33, -1), (34, -1), (35, -1), (36, 524288), (37, -1), (38, -1), (39, 512), (40, 33554432), (41, 0), (42, 16384), (43, 16384), (44, -1), (45, -1), (46, -1), (47, 4194304), (48, 524288), (49, 16777216), (50, -1), (51, -1), (52, -1)]

Covered at level 10 : {41}

After reduction : 
 pending  : [5, 9, 30, 31, 39, 42, 43, 47, 48, 49, 40, 23, 25, 36, 2, 15, 13, 20, 19, 11, 17, 12]
 solution : [7, 3, 27, 37]


Before reduction : 
 pending  : [5, 9, 30, 31, 39, 42, 43, 47, 48, 49, 40, 23, 25, 36, 2, 15, 13, 20, 19, 11, 17, 12]
 solution : [7, 3, 27, 37]

Essensial at level 10 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 262144), (3, -1), (4, -1), (5, 4194304), (6, -1), (7, -1), (8, -1), (9, 32768), (10, -1), (11, 8388608), (12, 16777216), (13, 131072), (14, -1), (15, 270336), (16, -1), (17, 8388608), (18, -1), (19, 4194304), (20, 131072), (21, -1), (22, -1), (23, 4194304), (24, -1), (25, 524288), (26, -1), (27, -1), (28, -1), (29, -1), (30, 32768), (31, 512), (32, -1), (33, -1), (34, -1), (35, -1), (36, 524288), (37, -1), (38, -1), (39, 512), (40, 33554432), (41, 0), (42, 16384), (43, 16384), (44, -1), (45, -1), (46, -1), (47, 4194304), (48, 524288), (49, 16777216), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 262144), (3, -1), (4, -1), (5, 4194304), (6, -1), (7, -1), (8, -1), (9, 32768), (10, -1), (11, 8388608), (12, 16777216), (13, 131072), (14, -1), (15, 270336), (16, -1), (17, 8388608), (18, -1), (19, 4194304), (20, 131072), (21, -1), (22, -1), (23, 4194304), (24, -1), (25, 524288), (26, -1), (27, -1), (28, -1), (29, -1), (30, 32768), (31, 512), (32, -1), (33, -1), (34, -1), (35, -1), (36, 524288), (37, -1), (38, -1), (39, 512), (40, 33554432), (41, -1), (42, 16384), (43, 16384), (44, -1), (45, -1), (46, -1), (47, 4194304), (48, 524288), (49, 16777216), (50, -1), (51, -1), (52, -1)]

Covered at level 10 : set()

After reduction : 
 pending  : [5, 9, 30, 31, 39, 42, 43, 47, 48, 49, 40, 23, 25, 36, 2, 15, 13, 20, 19, 11, 17, 12]
 solution : [7, 3, 27, 37]


Solution : [7, 3, 27, 37] has cost 34.


Before backtrack at level 10
 pending : [5, 9, 30, 31, 39, 42, 43, 47, 48, 49, 40, 23, 25, 36, 2, 15, 13, 20, 19, 11, 17, 12]
 solution : [7, 3, 27, 37]

After backtrack at level 10
 pending : [5, 9, 30, 31, 39, 42, 43, 47, 48, 49, 40, 23, 25, 36, 2, 15, 13, 20, 19, 11, 17, 12, 41]
 solution : [7, 3, 27, 37]


Invert decision for 37 at level 9


New level: 10
 pending : [5, 9, 30, 31, 39, 42, 43, 47, 48, 49, 40, 23, 25, 36, 2, 15, 13, 20, 19, 11, 17, 12, 41]
 solution : [7, 3, 27]


Before reduction : 
 pending  : [5, 9, 30, 31, 39, 42, 43, 47, 48, 49, 40, 23, 25, 36, 2, 15, 13, 20, 19, 11, 17, 12, 41]
 solution : [7, 3, 27]

Essensial at level 10 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 262144), (3, -1), (4, -1), (5, 4194304), (6, -1), (7, -1), (8, -1), (9, 32768), (10, -1), (11, 8388608), (12, 16777216), (13, 131072), (14, -1), (15, 270336), (16, -1), (17, 8388608), (18, -1), (19, 4194304), (20, 131072), (21, -1), (22, -1), (23, 4194304), (24, -1), (25, 524288), (26, -1), (27, -1), (28, -1), (29, -1), (30, 32768), (31, 512), (32, -1), (33, -1), (34, -1), (35, -1), (36, 524288), (37, -1), (38, -1), (39, 512), (40, 33554432), (41, -1), (42, 16384), (43, 16384), (44, -1), (45, -1), (46, -1), (47, 4194304), (48, 524288), (49, 16777216), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 524288), (3, -1), (4, -1), (5, 16777216), (6, -1), (7, -1), (8, -1), (9, 131072), (10, -1), (11, 16777216), (12, 33554432), (13, 262144), (14, -1), (15, 557056), (16, -1), (17, 8388608), (18, -1), (19, 4194304), (20, 131072), (21, -1), (22, -1), (23, 16777216), (24, -1), (25, 2097152), (26, -1), (27, -1), (28, -1), (29, -1), (30, 131072), (31, 2048), (32, -1), (33, -1), (34, -1), (35, -1), (36, 2097152), (37, -1), (38, -1), (39, 2048), (40, 33554432), (41, 512), (42, 65536), (43, 65536), (44, -1), (45, -1), (46, -1), (47, 8388608), (48, 2097152), (49, 16777216), (50, -1), (51, -1), (52, -1)]

Covered at level 10 : set()

After reduction : 
 pending  : [5, 9, 30, 31, 39, 42, 43, 47, 48, 49, 40, 23, 25, 36, 2, 15, 13, 20, 19, 11, 17, 12, 41]
 solution : [7, 3, 27]


Solution : [7, 3, 27] has cost 16.


Decide in level 10 among pending : [5, 9, 30, 31, 39, 42, 43, 47, 48, 49, 40, 23, 25, 36, 2, 15, 13, 20, 19, 11, 17, 12, 41]

Coverage : [(0, -1), (1, -1), (2, 524288), (3, -1), (4, -1), (5, 16777216), (6, -1), (7, -1), (8, -1), (9, 131072), (10, -1), (11, 16777216), (12, 33554432), (13, 262144), (14, -1), (15, 557056), (16, -1), (17, 8388608), (18, -1), (19, 4194304), (20, 131072), (21, -1), (22, -1), (23, 16777216), (24, -1), (25, 2097152), (26, -1), (27, -1), (28, -1), (29, -1), (30, 131072), (31, 2048), (32, -1), (33, -1), (34, -1), (35, -1), (36, 2097152), (37, -1), (38, -1), (39, 2048), (40, 33554432), (41, 512), (42, 65536), (43, 65536), (44, -1), (45, -1), (46, -1), (47, 8388608), (48, 2097152), (49, 16777216), (50, -1), (51, -1), (52, -1)]

Decide 40 with phase True at level 10

After decision at level 10
 pending : [5, 9, 30, 31, 39, 42, 43, 47, 48, 49, 23, 25, 36, 2, 15, 13, 20, 19, 11, 17, 12, 41]
 solution : [7, 3, 27, 40]


New level: 11
 pending : [5, 9, 30, 31, 39, 42, 43, 47, 48, 49, 23, 25, 36, 2, 15, 13, 20, 19, 11, 17, 12, 41]
 solution : [7, 3, 27, 40]


Before reduction : 
 pending  : [5, 9, 30, 31, 39, 42, 43, 47, 48, 49, 23, 25, 36, 2, 15, 13, 20, 19, 11, 17, 12, 41]
 solution : [7, 3, 27, 40]

Essensial at level 11 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 524288), (3, -1), (4, -1), (5, 16777216), (6, -1), (7, -1), (8, -1), (9, 131072), (10, -1), (11, 16777216), (12, 33554432), (13, 262144), (14, -1), (15, 557056), (16, -1), (17, 8388608), (18, -1), (19, 4194304), (20, 131072), (21, -1), (22, -1), (23, 16777216), (24, -1), (25, 2097152), (26, -1), (27, -1), (28, -1), (29, -1), (30, 131072), (31, 2048), (32, -1), (33, -1), (34, -1), (35, -1), (36, 2097152), (37, -1), (38, -1), (39, 2048), (40, 33554432), (41, 512), (42, 65536), (43, 65536), (44, -1), (45, -1), (46, -1), (47, 8388608), (48, 2097152), (49, 16777216), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 262144), (3, -1), (4, -1), (5, 16777216), (6, -1), (7, -1), (8, -1), (9, 0), (10, -1), (11, 16777216), (12, 33554432), (13, 262144), (14, -1), (15, 270336), (16, -1), (17, 8388608), (18, -1), (19, 4194304), (20, 131072), (21, -1), (22, -1), (23, 65536), (24, -1), (25, 2097152), (26, -1), (27, -1), (28, -1), (29, -1), (30, 0), (31, 0), (32, -1), (33, -1), (34, -1), (35, -1), (36, 2097152), (37, -1), (38, -1), (39, 0), (40, -1), (41, 512), (42, 0), (43, 0), (44, -1), (45, -1), (46, -1), (47, 0), (48, 0), (49, 0), (50, -1), (51, -1), (52, -1)]

Covered at level 11 : {39, 9, 42, 43, 47, 48, 49, 30, 31}

After reduction : 
 pending  : [5, 23, 25, 36, 2, 15, 13, 20, 19, 11, 17, 12, 41]
 solution : [7, 3, 27, 40]


Before reduction : 
 pending  : [5, 23, 25, 36, 2, 15, 13, 20, 19, 11, 17, 12, 41]
 solution : [7, 3, 27, 40]

Essensial at level 11 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 262144), (3, -1), (4, -1), (5, 16777216), (6, -1), (7, -1), (8, -1), (9, 0), (10, -1), (11, 16777216), (12, 33554432), (13, 262144), (14, -1), (15, 270336), (16, -1), (17, 8388608), (18, -1), (19, 4194304), (20, 131072), (21, -1), (22, -1), (23, 65536), (24, -1), (25, 2097152), (26, -1), (27, -1), (28, -1), (29, -1), (30, 0), (31, 0), (32, -1), (33, -1), (34, -1), (35, -1), (36, 2097152), (37, -1), (38, -1), (39, 0), (40, -1), (41, 512), (42, 0), (43, 0), (44, -1), (45, -1), (46, -1), (47, 0), (48, 0), (49, 0), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 262144), (3, -1), (4, -1), (5, 16777216), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, 16777216), (12, 33554432), (13, 262144), (14, -1), (15, 270336), (16, -1), (17, 8388608), (18, -1), (19, 4194304), (20, 131072), (21, -1), (22, -1), (23, 65536), (24, -1), (25, 2097152), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, 2097152), (37, -1), (38, -1), (39, -1), (40, -1), (41, 512), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 11 : set()

After reduction : 
 pending  : [5, 23, 25, 36, 2, 15, 13, 20, 19, 11, 17, 12, 41]
 solution : [7, 3, 27, 40]


Solution : [7, 3, 27, 40] has cost 34.


Before backtrack at level 11
 pending : [5, 23, 25, 36, 2, 15, 13, 20, 19, 11, 17, 12, 41]
 solution : [7, 3, 27, 40]

After backtrack at level 11
 pending : [5, 23, 25, 36, 2, 15, 13, 20, 19, 11, 17, 12, 41, 9, 30, 31, 39, 42, 43, 47, 48, 49]
 solution : [7, 3, 27, 40]


Invert decision for 40 at level 10


New level: 11
 pending : [5, 23, 25, 36, 2, 15, 13, 20, 19, 11, 17, 12, 41, 9, 30, 31, 39, 42, 43, 47, 48, 49]
 solution : [7, 3, 27]


Before reduction : 
 pending  : [5, 23, 25, 36, 2, 15, 13, 20, 19, 11, 17, 12, 41, 9, 30, 31, 39, 42, 43, 47, 48, 49]
 solution : [7, 3, 27]

Essensial at level 11 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 262144), (3, -1), (4, -1), (5, 16777216), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, 16777216), (12, 33554432), (13, 262144), (14, -1), (15, 270336), (16, -1), (17, 8388608), (18, -1), (19, 4194304), (20, 131072), (21, -1), (22, -1), (23, 65536), (24, -1), (25, 2097152), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, 2097152), (37, -1), (38, -1), (39, -1), (40, -1), (41, 512), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 524288), (3, -1), (4, -1), (5, 16777216), (6, -1), (7, -1), (8, -1), (9, 131072), (10, -1), (11, 16777216), (12, 33554432), (13, 262144), (14, -1), (15, 557056), (16, -1), (17, 8388608), (18, -1), (19, 4194304), (20, 131072), (21, -1), (22, -1), (23, 16777216), (24, -1), (25, 2097152), (26, -1), (27, -1), (28, -1), (29, -1), (30, 131072), (31, 2048), (32, -1), (33, -1), (34, -1), (35, -1), (36, 2097152), (37, -1), (38, -1), (39, 2048), (40, -1), (41, 512), (42, 65536), (43, 65536), (44, -1), (45, -1), (46, -1), (47, 8388608), (48, 2097152), (49, 16777216), (50, -1), (51, -1), (52, -1)]

Covered at level 11 : set()

After reduction : 
 pending  : [5, 23, 25, 36, 2, 15, 13, 20, 19, 11, 17, 12, 41, 9, 30, 31, 39, 42, 43, 47, 48, 49]
 solution : [7, 3, 27]


Solution : [7, 3, 27] has cost 16.


Decide in level 11 among pending : [5, 23, 25, 36, 2, 15, 13, 20, 19, 11, 17, 12, 41, 9, 30, 31, 39, 42, 43, 47, 48, 49]

Coverage : [(0, -1), (1, -1), (2, 524288), (3, -1), (4, -1), (5, 16777216), (6, -1), (7, -1), (8, -1), (9, 131072), (10, -1), (11, 16777216), (12, 33554432), (13, 262144), (14, -1), (15, 557056), (16, -1), (17, 8388608), (18, -1), (19, 4194304), (20, 131072), (21, -1), (22, -1), (23, 16777216), (24, -1), (25, 2097152), (26, -1), (27, -1), (28, -1), (29, -1), (30, 131072), (31, 2048), (32, -1), (33, -1), (34, -1), (35, -1), (36, 2097152), (37, -1), (38, -1), (39, 2048), (40, -1), (41, 512), (42, 65536), (43, 65536), (44, -1), (45, -1), (46, -1), (47, 8388608), (48, 2097152), (49, 16777216), (50, -1), (51, -1), (52, -1)]

Decide 12 with phase True at level 11

After decision at level 11
 pending : [5, 23, 25, 36, 2, 15, 13, 20, 19, 11, 17, 41, 9, 30, 31, 39, 42, 43, 47, 48, 49]
 solution : [7, 3, 27, 12]


New level: 12
 pending : [5, 23, 25, 36, 2, 15, 13, 20, 19, 11, 17, 41, 9, 30, 31, 39, 42, 43, 47, 48, 49]
 solution : [7, 3, 27, 12]


Before reduction : 
 pending  : [5, 23, 25, 36, 2, 15, 13, 20, 19, 11, 17, 41, 9, 30, 31, 39, 42, 43, 47, 48, 49]
 solution : [7, 3, 27, 12]

Essensial at level 12 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 524288), (3, -1), (4, -1), (5, 16777216), (6, -1), (7, -1), (8, -1), (9, 131072), (10, -1), (11, 16777216), (12, 33554432), (13, 262144), (14, -1), (15, 557056), (16, -1), (17, 8388608), (18, -1), (19, 4194304), (20, 131072), (21, -1), (22, -1), (23, 16777216), (24, -1), (25, 2097152), (26, -1), (27, -1), (28, -1), (29, -1), (30, 131072), (31, 2048), (32, -1), (33, -1), (34, -1), (35, -1), (36, 2097152), (37, -1), (38, -1), (39, 2048), (40, -1), (41, 512), (42, 65536), (43, 65536), (44, -1), (45, -1), (46, -1), (47, 8388608), (48, 2097152), (49, 16777216), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 0), (3, -1), (4, -1), (5, 16777216), (6, -1), (7, -1), (8, -1), (9, 32768), (10, -1), (11, 0), (12, -1), (13, 0), (14, -1), (15, 0), (16, -1), (17, 131072), (18, -1), (19, 32768), (20, 32768), (21, -1), (22, -1), (23, 16777216), (24, -1), (25, 2048), (26, -1), (27, -1), (28, -1), (29, -1), (30, 65536), (31, 1024), (32, -1), (33, -1), (34, -1), (35, -1), (36, 2048), (37, -1), (38, -1), (39, 512), (40, -1), (41, 512), (42, 32768), (43, 32768), (44, -1), (45, -1), (46, -1), (47, 8388608), (48, 2097152), (49, 16777216), (50, -1), (51, -1), (52, -1)]

Covered at level 12 : {2, 11, 13, 15}

After reduction : 
 pending  : [5, 23, 25, 36, 20, 19, 17, 41, 9, 30, 31, 39, 42, 43, 47, 48, 49]
 solution : [7, 3, 27, 12]


Before reduction : 
 pending  : [5, 23, 25, 36, 20, 19, 17, 41, 9, 30, 31, 39, 42, 43, 47, 48, 49]
 solution : [7, 3, 27, 12]

Essensial at level 12 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 0), (3, -1), (4, -1), (5, 16777216), (6, -1), (7, -1), (8, -1), (9, 32768), (10, -1), (11, 0), (12, -1), (13, 0), (14, -1), (15, 0), (16, -1), (17, 131072), (18, -1), (19, 32768), (20, 32768), (21, -1), (22, -1), (23, 16777216), (24, -1), (25, 2048), (26, -1), (27, -1), (28, -1), (29, -1), (30, 65536), (31, 1024), (32, -1), (33, -1), (34, -1), (35, -1), (36, 2048), (37, -1), (38, -1), (39, 512), (40, -1), (41, 512), (42, 32768), (43, 32768), (44, -1), (45, -1), (46, -1), (47, 8388608), (48, 2097152), (49, 16777216), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 16777216), (6, -1), (7, -1), (8, -1), (9, 32768), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, 131072), (18, -1), (19, 32768), (20, 32768), (21, -1), (22, -1), (23, 16777216), (24, -1), (25, 2048), (26, -1), (27, -1), (28, -1), (29, -1), (30, 65536), (31, 1024), (32, -1), (33, -1), (34, -1), (35, -1), (36, 2048), (37, -1), (38, -1), (39, 512), (40, -1), (41, 512), (42, 32768), (43, 32768), (44, -1), (45, -1), (46, -1), (47, 8388608), (48, 2097152), (49, 16777216), (50, -1), (51, -1), (52, -1)]

Covered at level 12 : set()

After reduction : 
 pending  : [5, 23, 25, 36, 20, 19, 17, 41, 9, 30, 31, 39, 42, 43, 47, 48, 49]
 solution : [7, 3, 27, 12]


Solution : [7, 3, 27, 12] has cost 25.


Before backtrack at level 12
 pending : [5, 23, 25, 36, 20, 19, 17, 41, 9, 30, 31, 39, 42, 43, 47, 48, 49]
 solution : [7, 3, 27, 12]

After backtrack at level 12
 pending : [5, 23, 25, 36, 20, 19, 17, 41, 9, 30, 31, 39, 42, 43, 47, 48, 49, 2, 15, 13, 11]
 solution : [7, 3, 27, 12]


Invert decision for 12 at level 11


New level: 12
 pending : [5, 23, 25, 36, 20, 19, 17, 41, 9, 30, 31, 39, 42, 43, 47, 48, 49, 2, 15, 13, 11]
 solution : [7, 3, 27]


Before reduction : 
 pending  : [5, 23, 25, 36, 20, 19, 17, 41, 9, 30, 31, 39, 42, 43, 47, 48, 49, 2, 15, 13, 11]
 solution : [7, 3, 27]

Essensial at level 12 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 16777216), (6, -1), (7, -1), (8, -1), (9, 32768), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, 131072), (18, -1), (19, 32768), (20, 32768), (21, -1), (22, -1), (23, 16777216), (24, -1), (25, 2048), (26, -1), (27, -1), (28, -1), (29, -1), (30, 65536), (31, 1024), (32, -1), (33, -1), (34, -1), (35, -1), (36, 2048), (37, -1), (38, -1), (39, 512), (40, -1), (41, 512), (42, 32768), (43, 32768), (44, -1), (45, -1), (46, -1), (47, 8388608), (48, 2097152), (49, 16777216), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 524288), (3, -1), (4, -1), (5, 16777216), (6, -1), (7, -1), (8, -1), (9, 131072), (10, -1), (11, 16777216), (12, -1), (13, 262144), (14, -1), (15, 557056), (16, -1), (17, 8388608), (18, -1), (19, 4194304), (20, 131072), (21, -1), (22, -1), (23, 16777216), (24, -1), (25, 2097152), (26, -1), (27, -1), (28, -1), (29, -1), (30, 131072), (31, 2048), (32, -1), (33, -1), (34, -1), (35, -1), (36, 2097152), (37, -1), (38, -1), (39, 2048), (40, -1), (41, 512), (42, 65536), (43, 65536), (44, -1), (45, -1), (46, -1), (47, 8388608), (48, 2097152), (49, 16777216), (50, -1), (51, -1), (52, -1)]

Covered at level 12 : set()

After reduction : 
 pending  : [5, 23, 25, 36, 20, 19, 17, 41, 9, 30, 31, 39, 42, 43, 47, 48, 49, 2, 15, 13, 11]
 solution : [7, 3, 27]


Solution : [7, 3, 27] has cost 16.


Decide in level 12 among pending : [5, 23, 25, 36, 20, 19, 17, 41, 9, 30, 31, 39, 42, 43, 47, 48, 49, 2, 15, 13, 11]

Coverage : [(0, -1), (1, -1), (2, 524288), (3, -1), (4, -1), (5, 16777216), (6, -1), (7, -1), (8, -1), (9, 131072), (10, -1), (11, 16777216), (12, -1), (13, 262144), (14, -1), (15, 557056), (16, -1), (17, 8388608), (18, -1), (19, 4194304), (20, 131072), (21, -1), (22, -1), (23, 16777216), (24, -1), (25, 2097152), (26, -1), (27, -1), (28, -1), (29, -1), (30, 131072), (31, 2048), (32, -1), (33, -1), (34, -1), (35, -1), (36, 2097152), (37, -1), (38, -1), (39, 2048), (40, -1), (41, 512), (42, 65536), (43, 65536), (44, -1), (45, -1), (46, -1), (47, 8388608), (48, 2097152), (49, 16777216), (50, -1), (51, -1), (52, -1)]

Decide 5 with phase True at level 12

After decision at level 12
 pending : [23, 25, 36, 20, 19, 17, 41, 9, 30, 31, 39, 42, 43, 47, 48, 49, 2, 15, 13, 11]
 solution : [7, 3, 27, 5]


New level: 13
 pending : [23, 25, 36, 20, 19, 17, 41, 9, 30, 31, 39, 42, 43, 47, 48, 49, 2, 15, 13, 11]
 solution : [7, 3, 27, 5]


Before reduction : 
 pending  : [23, 25, 36, 20, 19, 17, 41, 9, 30, 31, 39, 42, 43, 47, 48, 49, 2, 15, 13, 11]
 solution : [7, 3, 27, 5]

Essensial at level 13 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 524288), (3, -1), (4, -1), (5, 16777216), (6, -1), (7, -1), (8, -1), (9, 131072), (10, -1), (11, 16777216), (12, -1), (13, 262144), (14, -1), (15, 557056), (16, -1), (17, 8388608), (18, -1), (19, 4194304), (20, 131072), (21, -1), (22, -1), (23, 16777216), (24, -1), (25, 2097152), (26, -1), (27, -1), (28, -1), (29, -1), (30, 131072), (31, 2048), (32, -1), (33, -1), (34, -1), (35, -1), (36, 2097152), (37, -1), (38, -1), (39, 2048), (40, -1), (41, 512), (42, 65536), (43, 65536), (44, -1), (45, -1), (46, -1), (47, 8388608), (48, 2097152), (49, 16777216), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 262144), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, 0), (10, -1), (11, 8388608), (12, -1), (13, 131072), (14, -1), (15, 270336), (16, -1), (17, 8388608), (18, -1), (19, 4194304), (20, 131072), (21, -1), (22, -1), (23, 0), (24, -1), (25, 2097152), (26, -1), (27, -1), (28, -1), (29, -1), (30, 0), (31, 0), (32, -1), (33, -1), (34, -1), (35, -1), (36, 2097152), (37, -1), (38, -1), (39, 0), (40, -1), (41, 512), (42, 0), (43, 0), (44, -1), (45, -1), (46, -1), (47, 0), (48, 0), (49, 0), (50, -1), (51, -1), (52, -1)]

Covered at level 13 : {39, 9, 42, 43, 47, 48, 49, 23, 30, 31}

After reduction : 
 pending  : [25, 36, 20, 19, 17, 41, 2, 15, 13, 11]
 solution : [7, 3, 27, 5]


Before reduction : 
 pending  : [25, 36, 20, 19, 17, 41, 2, 15, 13, 11]
 solution : [7, 3, 27, 5]

Essensial at level 13 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 262144), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, 0), (10, -1), (11, 8388608), (12, -1), (13, 131072), (14, -1), (15, 270336), (16, -1), (17, 8388608), (18, -1), (19, 4194304), (20, 131072), (21, -1), (22, -1), (23, 0), (24, -1), (25, 2097152), (26, -1), (27, -1), (28, -1), (29, -1), (30, 0), (31, 0), (32, -1), (33, -1), (34, -1), (35, -1), (36, 2097152), (37, -1), (38, -1), (39, 0), (40, -1), (41, 512), (42, 0), (43, 0), (44, -1), (45, -1), (46, -1), (47, 0), (48, 0), (49, 0), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 262144), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, 8388608), (12, -1), (13, 131072), (14, -1), (15, 270336), (16, -1), (17, 8388608), (18, -1), (19, 4194304), (20, 131072), (21, -1), (22, -1), (23, -1), (24, -1), (25, 2097152), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, 2097152), (37, -1), (38, -1), (39, -1), (40, -1), (41, 512), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 13 : set()

After reduction : 
 pending  : [25, 36, 20, 19, 17, 41, 2, 15, 13, 11]
 solution : [7, 3, 27, 5]


Solution : [7, 3, 27, 5] has cost 20.


Before backtrack at level 13
 pending : [25, 36, 20, 19, 17, 41, 2, 15, 13, 11]
 solution : [7, 3, 27, 5]

After backtrack at level 13
 pending : [25, 36, 20, 19, 17, 41, 2, 15, 13, 11, 23, 9, 30, 31, 39, 42, 43, 47, 48, 49]
 solution : [7, 3, 27, 5]


Invert decision for 5 at level 12


New level: 13
 pending : [25, 36, 20, 19, 17, 41, 2, 15, 13, 11, 23, 9, 30, 31, 39, 42, 43, 47, 48, 49]
 solution : [7, 3, 27]


Before reduction : 
 pending  : [25, 36, 20, 19, 17, 41, 2, 15, 13, 11, 23, 9, 30, 31, 39, 42, 43, 47, 48, 49]
 solution : [7, 3, 27]

Essensial at level 13 : {23}

Before removed
 coverage : [(0, -1), (1, -1), (2, 262144), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, 8388608), (12, -1), (13, 131072), (14, -1), (15, 270336), (16, -1), (17, 8388608), (18, -1), (19, 4194304), (20, 131072), (21, -1), (22, -1), (23, -1), (24, -1), (25, 2097152), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, 2097152), (37, -1), (38, -1), (39, -1), (40, -1), (41, 512), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 262144), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, 0), (10, -1), (11, 8388608), (12, -1), (13, 131072), (14, -1), (15, 270336), (16, -1), (17, 8388608), (18, -1), (19, 4194304), (20, 131072), (21, -1), (22, -1), (23, -1), (24, -1), (25, 2097152), (26, -1), (27, -1), (28, -1), (29, -1), (30, 0), (31, 0), (32, -1), (33, -1), (34, -1), (35, -1), (36, 2097152), (37, -1), (38, -1), (39, 0), (40, -1), (41, 512), (42, 0), (43, 0), (44, -1), (45, -1), (46, -1), (47, 0), (48, 0), (49, 0), (50, -1), (51, -1), (52, -1)]

Covered at level 13 : {39, 9, 42, 43, 47, 48, 49, 30, 31}

After reduction : 
 pending  : [25, 36, 20, 19, 17, 41, 2, 15, 13, 11]
 solution : [7, 3, 27, 23]


Before reduction : 
 pending  : [25, 36, 20, 19, 17, 41, 2, 15, 13, 11]
 solution : [7, 3, 27, 23]

Essensial at level 13 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 262144), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, 0), (10, -1), (11, 8388608), (12, -1), (13, 131072), (14, -1), (15, 270336), (16, -1), (17, 8388608), (18, -1), (19, 4194304), (20, 131072), (21, -1), (22, -1), (23, -1), (24, -1), (25, 2097152), (26, -1), (27, -1), (28, -1), (29, -1), (30, 0), (31, 0), (32, -1), (33, -1), (34, -1), (35, -1), (36, 2097152), (37, -1), (38, -1), (39, 0), (40, -1), (41, 512), (42, 0), (43, 0), (44, -1), (45, -1), (46, -1), (47, 0), (48, 0), (49, 0), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 262144), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, 8388608), (12, -1), (13, 131072), (14, -1), (15, 270336), (16, -1), (17, 8388608), (18, -1), (19, 4194304), (20, 131072), (21, -1), (22, -1), (23, -1), (24, -1), (25, 2097152), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, 2097152), (37, -1), (38, -1), (39, -1), (40, -1), (41, 512), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 13 : set()

After reduction : 
 pending  : [25, 36, 20, 19, 17, 41, 2, 15, 13, 11]
 solution : [7, 3, 27, 23]


Solution : [7, 3, 27, 23] has cost 23.


Before backtrack at level 13
 pending : [25, 36, 20, 19, 17, 41, 2, 15, 13, 11]
 solution : [7, 3, 27, 23]

After backtrack at level 13
 pending : [25, 36, 20, 19, 17, 41, 2, 15, 13, 11, 23, 9, 30, 31, 39, 42, 43, 47, 48, 49]
 solution : [7, 3, 27]


Before backtrack at level 12
 pending : [25, 36, 20, 19, 17, 41, 2, 15, 13, 11, 23, 9, 30, 31, 39, 42, 43, 47, 48, 49]
 solution : [7, 3, 27]

After backtrack at level 12
 pending : [25, 36, 20, 19, 17, 41, 2, 15, 13, 11, 23, 9, 30, 31, 39, 42, 43, 47, 48, 49, 5]
 solution : [7, 3, 27]


Before backtrack at level 11
 pending : [25, 36, 20, 19, 17, 41, 2, 15, 13, 11, 23, 9, 30, 31, 39, 42, 43, 47, 48, 49, 5]
 solution : [7, 3, 27]

After backtrack at level 11
 pending : [25, 36, 20, 19, 17, 41, 2, 15, 13, 11, 23, 9, 30, 31, 39, 42, 43, 47, 48, 49, 5, 12]
 solution : [7, 3, 27]


Before backtrack at level 10
 pending : [25, 36, 20, 19, 17, 41, 2, 15, 13, 11, 23, 9, 30, 31, 39, 42, 43, 47, 48, 49, 5, 12]
 solution : [7, 3, 27]

After backtrack at level 10
 pending : [25, 36, 20, 19, 17, 41, 2, 15, 13, 11, 23, 9, 30, 31, 39, 42, 43, 47, 48, 49, 5, 12, 40]
 solution : [7, 3, 27]


Before backtrack at level 9
 pending : [25, 36, 20, 19, 17, 41, 2, 15, 13, 11, 23, 9, 30, 31, 39, 42, 43, 47, 48, 49, 5, 12, 40]
 solution : [7, 3, 27]

After backtrack at level 9
 pending : [25, 36, 20, 19, 17, 41, 2, 15, 13, 11, 23, 9, 30, 31, 39, 42, 43, 47, 48, 49, 5, 12, 40, 34, 35, 37]
 solution : [7, 3, 27]


Invert decision for 27 at level 8


New level: 9
 pending : [25, 36, 20, 19, 17, 41, 2, 15, 13, 11, 23, 9, 30, 31, 39, 42, 43, 47, 48, 49, 5, 12, 40, 34, 35, 37]
 solution : [7, 3]


Before reduction : 
 pending  : [25, 36, 20, 19, 17, 41, 2, 15, 13, 11, 23, 9, 30, 31, 39, 42, 43, 47, 48, 49, 5, 12, 40, 34, 35, 37]
 solution : [7, 3]

Essensial at level 9 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 262144), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, 8388608), (12, -1), (13, 131072), (14, -1), (15, 270336), (16, -1), (17, 8388608), (18, -1), (19, 4194304), (20, 131072), (21, -1), (22, -1), (23, -1), (24, -1), (25, 2097152), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, 2097152), (37, -1), (38, -1), (39, -1), (40, -1), (41, 512), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 524288), (3, -1), (4, -1), (5, 67108864), (6, -1), (7, -1), (8, -1), (9, 524288), (10, -1), (11, 16777216), (12, 33554432), (13, 262144), (14, -1), (15, 557056), (16, -1), (17, 8388608), (18, -1), (19, 4194304), (20, 131072), (21, -1), (22, -1), (23, 67108864), (24, -1), (25, 2097152), (26, -1), (27, -1), (28, -1), (29, -1), (30, 524288), (31, 8192), (32, -1), (33, -1), (34, 1048576), (35, 8192), (36, 2097152), (37, 67108864), (38, -1), (39, 8192), (40, 67108864), (41, 134217728), (42, 262144), (43, 262144), (44, -1), (45, -1), (46, -1), (47, 33554432), (48, 8388608), (49, 33554432), (50, -1), (51, -1), (52, -1)]

Covered at level 9 : set()

After reduction : 
 pending  : [25, 36, 20, 19, 17, 41, 2, 15, 13, 11, 23, 9, 30, 31, 39, 42, 43, 47, 48, 49, 5, 12, 40, 34, 35, 37]
 solution : [7, 3]


Solution : [7, 3] has cost 9.


Decide in level 9 among pending : [25, 36, 20, 19, 17, 41, 2, 15, 13, 11, 23, 9, 30, 31, 39, 42, 43, 47, 48, 49, 5, 12, 40, 34, 35, 37]

Coverage : [(0, -1), (1, -1), (2, 524288), (3, -1), (4, -1), (5, 67108864), (6, -1), (7, -1), (8, -1), (9, 524288), (10, -1), (11, 16777216), (12, 33554432), (13, 262144), (14, -1), (15, 557056), (16, -1), (17, 8388608), (18, -1), (19, 4194304), (20, 131072), (21, -1), (22, -1), (23, 67108864), (24, -1), (25, 2097152), (26, -1), (27, -1), (28, -1), (29, -1), (30, 524288), (31, 8192), (32, -1), (33, -1), (34, 1048576), (35, 8192), (36, 2097152), (37, 67108864), (38, -1), (39, 8192), (40, 67108864), (41, 134217728), (42, 262144), (43, 262144), (44, -1), (45, -1), (46, -1), (47, 33554432), (48, 8388608), (49, 33554432), (50, -1), (51, -1), (52, -1)]

Decide 41 with phase True at level 9

After decision at level 9
 pending : [25, 36, 20, 19, 17, 2, 15, 13, 11, 23, 9, 30, 31, 39, 42, 43, 47, 48, 49, 5, 12, 40, 34, 35, 37]
 solution : [7, 3, 41]


New level: 10
 pending : [25, 36, 20, 19, 17, 2, 15, 13, 11, 23, 9, 30, 31, 39, 42, 43, 47, 48, 49, 5, 12, 40, 34, 35, 37]
 solution : [7, 3, 41]


Before reduction : 
 pending  : [25, 36, 20, 19, 17, 2, 15, 13, 11, 23, 9, 30, 31, 39, 42, 43, 47, 48, 49, 5, 12, 40, 34, 35, 37]
 solution : [7, 3, 41]

Essensial at level 10 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 524288), (3, -1), (4, -1), (5, 67108864), (6, -1), (7, -1), (8, -1), (9, 524288), (10, -1), (11, 16777216), (12, 33554432), (13, 262144), (14, -1), (15, 557056), (16, -1), (17, 8388608), (18, -1), (19, 4194304), (20, 131072), (21, -1), (22, -1), (23, 67108864), (24, -1), (25, 2097152), (26, -1), (27, -1), (28, -1), (29, -1), (30, 524288), (31, 8192), (32, -1), (33, -1), (34, 1048576), (35, 8192), (36, 2097152), (37, 67108864), (38, -1), (39, 8192), (40, 67108864), (41, 134217728), (42, 262144), (43, 262144), (44, -1), (45, -1), (46, -1), (47, 33554432), (48, 8388608), (49, 33554432), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 524288), (3, -1), (4, -1), (5, 67108864), (6, -1), (7, -1), (8, -1), (9, 524288), (10, -1), (11, 16777216), (12, 33554432), (13, 262144), (14, -1), (15, 557056), (16, -1), (17, 8388608), (18, -1), (19, 4194304), (20, 131072), (21, -1), (22, -1), (23, 67108864), (24, -1), (25, 2097152), (26, -1), (27, -1), (28, -1), (29, -1), (30, 524288), (31, 8192), (32, -1), (33, -1), (34, 524288), (35, 4096), (36, 2097152), (37, 33554432), (38, -1), (39, 8192), (40, 67108864), (41, -1), (42, 262144), (43, 262144), (44, -1), (45, -1), (46, -1), (47, 33554432), (48, 8388608), (49, 33554432), (50, -1), (51, -1), (52, -1)]

Covered at level 10 : set()

After reduction : 
 pending  : [25, 36, 20, 19, 17, 2, 15, 13, 11, 23, 9, 30, 31, 39, 42, 43, 47, 48, 49, 5, 12, 40, 34, 35, 37]
 solution : [7, 3, 41]


Solution : [7, 3, 41] has cost 23.


Before backtrack at level 10
 pending : [25, 36, 20, 19, 17, 2, 15, 13, 11, 23, 9, 30, 31, 39, 42, 43, 47, 48, 49, 5, 12, 40, 34, 35, 37]
 solution : [7, 3, 41]

After backtrack at level 10
 pending : [25, 36, 20, 19, 17, 2, 15, 13, 11, 23, 9, 30, 31, 39, 42, 43, 47, 48, 49, 5, 12, 40, 34, 35, 37]
 solution : [7, 3, 41]


Invert decision for 41 at level 9


New level: 10
 pending : [25, 36, 20, 19, 17, 2, 15, 13, 11, 23, 9, 30, 31, 39, 42, 43, 47, 48, 49, 5, 12, 40, 34, 35, 37]
 solution : [7, 3]


Before reduction : 
 pending  : [25, 36, 20, 19, 17, 2, 15, 13, 11, 23, 9, 30, 31, 39, 42, 43, 47, 48, 49, 5, 12, 40, 34, 35, 37]
 solution : [7, 3]

Essensial at level 10 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 524288), (3, -1), (4, -1), (5, 67108864), (6, -1), (7, -1), (8, -1), (9, 524288), (10, -1), (11, 16777216), (12, 33554432), (13, 262144), (14, -1), (15, 557056), (16, -1), (17, 8388608), (18, -1), (19, 4194304), (20, 131072), (21, -1), (22, -1), (23, 67108864), (24, -1), (25, 2097152), (26, -1), (27, -1), (28, -1), (29, -1), (30, 524288), (31, 8192), (32, -1), (33, -1), (34, 524288), (35, 4096), (36, 2097152), (37, 33554432), (38, -1), (39, 8192), (40, 67108864), (41, -1), (42, 262144), (43, 262144), (44, -1), (45, -1), (46, -1), (47, 33554432), (48, 8388608), (49, 33554432), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 524288), (3, -1), (4, -1), (5, 67108864), (6, -1), (7, -1), (8, -1), (9, 524288), (10, -1), (11, 16777216), (12, 33554432), (13, 262144), (14, -1), (15, 557056), (16, -1), (17, 8388608), (18, -1), (19, 4194304), (20, 131072), (21, -1), (22, -1), (23, 67108864), (24, -1), (25, 2097152), (26, -1), (27, -1), (28, -1), (29, -1), (30, 524288), (31, 8192), (32, -1), (33, -1), (34, 1048576), (35, 8192), (36, 2097152), (37, 67108864), (38, -1), (39, 8192), (40, 67108864), (41, -1), (42, 262144), (43, 262144), (44, -1), (45, -1), (46, -1), (47, 33554432), (48, 8388608), (49, 33554432), (50, -1), (51, -1), (52, -1)]

Covered at level 10 : set()

After reduction : 
 pending  : [25, 36, 20, 19, 17, 2, 15, 13, 11, 23, 9, 30, 31, 39, 42, 43, 47, 48, 49, 5, 12, 40, 34, 35, 37]
 solution : [7, 3]


Solution : [7, 3] has cost 9.


Decide in level 10 among pending : [25, 36, 20, 19, 17, 2, 15, 13, 11, 23, 9, 30, 31, 39, 42, 43, 47, 48, 49, 5, 12, 40, 34, 35, 37]

Coverage : [(0, -1), (1, -1), (2, 524288), (3, -1), (4, -1), (5, 67108864), (6, -1), (7, -1), (8, -1), (9, 524288), (10, -1), (11, 16777216), (12, 33554432), (13, 262144), (14, -1), (15, 557056), (16, -1), (17, 8388608), (18, -1), (19, 4194304), (20, 131072), (21, -1), (22, -1), (23, 67108864), (24, -1), (25, 2097152), (26, -1), (27, -1), (28, -1), (29, -1), (30, 524288), (31, 8192), (32, -1), (33, -1), (34, 1048576), (35, 8192), (36, 2097152), (37, 67108864), (38, -1), (39, 8192), (40, 67108864), (41, -1), (42, 262144), (43, 262144), (44, -1), (45, -1), (46, -1), (47, 33554432), (48, 8388608), (49, 33554432), (50, -1), (51, -1), (52, -1)]

Decide 23 with phase True at level 10

After decision at level 10
 pending : [25, 36, 20, 19, 17, 2, 15, 13, 11, 9, 30, 31, 39, 42, 43, 47, 48, 49, 5, 12, 40, 34, 35, 37]
 solution : [7, 3, 23]


New level: 11
 pending : [25, 36, 20, 19, 17, 2, 15, 13, 11, 9, 30, 31, 39, 42, 43, 47, 48, 49, 5, 12, 40, 34, 35, 37]
 solution : [7, 3, 23]


Before reduction : 
 pending  : [25, 36, 20, 19, 17, 2, 15, 13, 11, 9, 30, 31, 39, 42, 43, 47, 48, 49, 5, 12, 40, 34, 35, 37]
 solution : [7, 3, 23]

Essensial at level 11 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 524288), (3, -1), (4, -1), (5, 67108864), (6, -1), (7, -1), (8, -1), (9, 524288), (10, -1), (11, 16777216), (12, 33554432), (13, 262144), (14, -1), (15, 557056), (16, -1), (17, 8388608), (18, -1), (19, 4194304), (20, 131072), (21, -1), (22, -1), (23, 67108864), (24, -1), (25, 2097152), (26, -1), (27, -1), (28, -1), (29, -1), (30, 524288), (31, 8192), (32, -1), (33, -1), (34, 1048576), (35, 8192), (36, 2097152), (37, 67108864), (38, -1), (39, 8192), (40, 67108864), (41, -1), (42, 262144), (43, 262144), (44, -1), (45, -1), (46, -1), (47, 33554432), (48, 8388608), (49, 33554432), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 262144), (3, -1), (4, -1), (5, 0), (6, -1), (7, -1), (8, -1), (9, 0), (10, -1), (11, 8388608), (12, 16777216), (13, 131072), (14, -1), (15, 270336), (16, -1), (17, 8388608), (18, -1), (19, 4194304), (20, 131072), (21, -1), (22, -1), (23, -1), (24, -1), (25, 2097152), (26, -1), (27, -1), (28, -1), (29, -1), (30, 0), (31, 0), (32, -1), (33, -1), (34, 0), (35, 0), (36, 2097152), (37, 524288), (38, -1), (39, 0), (40, 0), (41, -1), (42, 0), (43, 0), (44, -1), (45, -1), (46, -1), (47, 0), (48, 0), (49, 0), (50, -1), (51, -1), (52, -1)]

Covered at level 11 : {34, 35, 5, 39, 40, 9, 42, 43, 47, 48, 49, 30, 31}

After reduction : 
 pending  : [25, 36, 20, 19, 17, 2, 15, 13, 11, 12, 37]
 solution : [7, 3, 23]


Before reduction : 
 pending  : [25, 36, 20, 19, 17, 2, 15, 13, 11, 12, 37]
 solution : [7, 3, 23]

Essensial at level 11 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 262144), (3, -1), (4, -1), (5, 0), (6, -1), (7, -1), (8, -1), (9, 0), (10, -1), (11, 8388608), (12, 16777216), (13, 131072), (14, -1), (15, 270336), (16, -1), (17, 8388608), (18, -1), (19, 4194304), (20, 131072), (21, -1), (22, -1), (23, -1), (24, -1), (25, 2097152), (26, -1), (27, -1), (28, -1), (29, -1), (30, 0), (31, 0), (32, -1), (33, -1), (34, 0), (35, 0), (36, 2097152), (37, 524288), (38, -1), (39, 0), (40, 0), (41, -1), (42, 0), (43, 0), (44, -1), (45, -1), (46, -1), (47, 0), (48, 0), (49, 0), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 262144), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, 8388608), (12, 16777216), (13, 131072), (14, -1), (15, 270336), (16, -1), (17, 8388608), (18, -1), (19, 4194304), (20, 131072), (21, -1), (22, -1), (23, -1), (24, -1), (25, 2097152), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, 2097152), (37, 524288), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 11 : set()

After reduction : 
 pending  : [25, 36, 20, 19, 17, 2, 15, 13, 11, 12, 37]
 solution : [7, 3, 23]


Solution : [7, 3, 23] has cost 16.


Decide in level 11 among pending : [25, 36, 20, 19, 17, 2, 15, 13, 11, 12, 37]

Coverage : [(0, -1), (1, -1), (2, 262144), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, 8388608), (12, 16777216), (13, 131072), (14, -1), (15, 270336), (16, -1), (17, 8388608), (18, -1), (19, 4194304), (20, 131072), (21, -1), (22, -1), (23, -1), (24, -1), (25, 2097152), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, 2097152), (37, 524288), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Decide 12 with phase True at level 11

After decision at level 11
 pending : [25, 36, 20, 19, 17, 2, 15, 13, 11, 37]
 solution : [7, 3, 23, 12]


New level: 12
 pending : [25, 36, 20, 19, 17, 2, 15, 13, 11, 37]
 solution : [7, 3, 23, 12]


Before reduction : 
 pending  : [25, 36, 20, 19, 17, 2, 15, 13, 11, 37]
 solution : [7, 3, 23, 12]

Essensial at level 12 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 262144), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, 8388608), (12, 16777216), (13, 131072), (14, -1), (15, 270336), (16, -1), (17, 8388608), (18, -1), (19, 4194304), (20, 131072), (21, -1), (22, -1), (23, -1), (24, -1), (25, 2097152), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, 2097152), (37, 524288), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 0), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, 0), (12, -1), (13, 0), (14, -1), (15, 0), (16, -1), (17, 131072), (18, -1), (19, 32768), (20, 32768), (21, -1), (22, -1), (23, -1), (24, -1), (25, 2048), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, 2048), (37, 1024), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 12 : {2, 11, 13, 15}

After reduction : 
 pending  : [25, 36, 20, 19, 17, 37]
 solution : [7, 3, 23, 12]


Before reduction : 
 pending  : [25, 36, 20, 19, 17, 37]
 solution : [7, 3, 23, 12]

Essensial at level 12 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 0), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, 0), (12, -1), (13, 0), (14, -1), (15, 0), (16, -1), (17, 131072), (18, -1), (19, 32768), (20, 32768), (21, -1), (22, -1), (23, -1), (24, -1), (25, 2048), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, 2048), (37, 1024), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, 131072), (18, -1), (19, 32768), (20, 32768), (21, -1), (22, -1), (23, -1), (24, -1), (25, 2048), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, 2048), (37, 1024), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 12 : set()

After reduction : 
 pending  : [25, 36, 20, 19, 17, 37]
 solution : [7, 3, 23, 12]


Solution : [7, 3, 23, 12] has cost 25.


Before backtrack at level 12
 pending : [25, 36, 20, 19, 17, 37]
 solution : [7, 3, 23, 12]

After backtrack at level 12
 pending : [25, 36, 20, 19, 17, 37, 2, 15, 13, 11]
 solution : [7, 3, 23, 12]


Invert decision for 12 at level 11


New level: 12
 pending : [25, 36, 20, 19, 17, 37, 2, 15, 13, 11]
 solution : [7, 3, 23]


Before reduction : 
 pending  : [25, 36, 20, 19, 17, 37, 2, 15, 13, 11]
 solution : [7, 3, 23]

Essensial at level 12 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, 131072), (18, -1), (19, 32768), (20, 32768), (21, -1), (22, -1), (23, -1), (24, -1), (25, 2048), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, 2048), (37, 1024), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 262144), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, 8388608), (12, -1), (13, 131072), (14, -1), (15, 270336), (16, -1), (17, 8388608), (18, -1), (19, 4194304), (20, 131072), (21, -1), (22, -1), (23, -1), (24, -1), (25, 2097152), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, 2097152), (37, 524288), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 12 : set()

After reduction : 
 pending  : [25, 36, 20, 19, 17, 37, 2, 15, 13, 11]
 solution : [7, 3, 23]


Solution : [7, 3, 23] has cost 16.


Decide in level 12 among pending : [25, 36, 20, 19, 17, 37, 2, 15, 13, 11]

Coverage : [(0, -1), (1, -1), (2, 262144), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, 8388608), (12, -1), (13, 131072), (14, -1), (15, 270336), (16, -1), (17, 8388608), (18, -1), (19, 4194304), (20, 131072), (21, -1), (22, -1), (23, -1), (24, -1), (25, 2097152), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, 2097152), (37, 524288), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Decide 17 with phase True at level 12

After decision at level 12
 pending : [25, 36, 20, 19, 37, 2, 15, 13, 11]
 solution : [7, 3, 23, 17]


New level: 13
 pending : [25, 36, 20, 19, 37, 2, 15, 13, 11]
 solution : [7, 3, 23, 17]


Before reduction : 
 pending  : [25, 36, 20, 19, 37, 2, 15, 13, 11]
 solution : [7, 3, 23, 17]

Essensial at level 13 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 262144), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, 8388608), (12, -1), (13, 131072), (14, -1), (15, 270336), (16, -1), (17, 8388608), (18, -1), (19, 4194304), (20, 131072), (21, -1), (22, -1), (23, -1), (24, -1), (25, 2097152), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, 2097152), (37, 524288), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 131072), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, 2097152), (12, -1), (13, 0), (14, -1), (15, 133120), (16, -1), (17, -1), (18, -1), (19, 0), (20, 0), (21, -1), (22, -1), (23, -1), (24, -1), (25, 524288), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, 524288), (37, 1024), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 13 : {19, 20, 13}

After reduction : 
 pending  : [25, 36, 37, 2, 15, 11]
 solution : [7, 3, 23, 17]


Before reduction : 
 pending  : [25, 36, 37, 2, 15, 11]
 solution : [7, 3, 23, 17]

Essensial at level 13 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 131072), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, 2097152), (12, -1), (13, 0), (14, -1), (15, 133120), (16, -1), (17, -1), (18, -1), (19, 0), (20, 0), (21, -1), (22, -1), (23, -1), (24, -1), (25, 524288), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, 524288), (37, 1024), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 131072), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, 2097152), (12, -1), (13, -1), (14, -1), (15, 133120), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, 524288), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, 524288), (37, 1024), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 13 : set()

After reduction : 
 pending  : [25, 36, 37, 2, 15, 11]
 solution : [7, 3, 23, 17]


Solution : [7, 3, 23, 17] has cost 23.


Before backtrack at level 13
 pending : [25, 36, 37, 2, 15, 11]
 solution : [7, 3, 23, 17]

After backtrack at level 13
 pending : [25, 36, 37, 2, 15, 11, 20, 19, 13]
 solution : [7, 3, 23, 17]


Invert decision for 17 at level 12


New level: 13
 pending : [25, 36, 37, 2, 15, 11, 20, 19, 13]
 solution : [7, 3, 23]


Before reduction : 
 pending  : [25, 36, 37, 2, 15, 11, 20, 19, 13]
 solution : [7, 3, 23]

Essensial at level 13 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 131072), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, 2097152), (12, -1), (13, -1), (14, -1), (15, 133120), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, 524288), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, 524288), (37, 1024), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 262144), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, 8388608), (12, -1), (13, 131072), (14, -1), (15, 270336), (16, -1), (17, -1), (18, -1), (19, 4194304), (20, 131072), (21, -1), (22, -1), (23, -1), (24, -1), (25, 2097152), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, 2097152), (37, 524288), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 13 : set()

After reduction : 
 pending  : [25, 36, 37, 2, 15, 11, 20, 19, 13]
 solution : [7, 3, 23]


Solution : [7, 3, 23] has cost 16.


Decide in level 13 among pending : [25, 36, 37, 2, 15, 11, 20, 19, 13]

Coverage : [(0, -1), (1, -1), (2, 262144), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, 8388608), (12, -1), (13, 131072), (14, -1), (15, 270336), (16, -1), (17, -1), (18, -1), (19, 4194304), (20, 131072), (21, -1), (22, -1), (23, -1), (24, -1), (25, 2097152), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, 2097152), (37, 524288), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Decide 11 with phase True at level 13

After decision at level 13
 pending : [25, 36, 37, 2, 15, 20, 19, 13]
 solution : [7, 3, 23, 11]


New level: 14
 pending : [25, 36, 37, 2, 15, 20, 19, 13]
 solution : [7, 3, 23, 11]


Before reduction : 
 pending  : [25, 36, 37, 2, 15, 20, 19, 13]
 solution : [7, 3, 23, 11]

Essensial at level 14 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 262144), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, 8388608), (12, -1), (13, 131072), (14, -1), (15, 270336), (16, -1), (17, -1), (18, -1), (19, 4194304), (20, 131072), (21, -1), (22, -1), (23, -1), (24, -1), (25, 2097152), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, 2097152), (37, 524288), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 0), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, 0), (14, -1), (15, 0), (16, -1), (17, -1), (18, -1), (19, 32768), (20, 32768), (21, -1), (22, -1), (23, -1), (24, -1), (25, 2048), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, 2048), (37, 1024), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 14 : {2, 13, 15}

After reduction : 
 pending  : [25, 36, 37, 20, 19]
 solution : [7, 3, 23, 11]


Before reduction : 
 pending  : [25, 36, 37, 20, 19]
 solution : [7, 3, 23, 11]

Essensial at level 14 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 0), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, 0), (14, -1), (15, 0), (16, -1), (17, -1), (18, -1), (19, 32768), (20, 32768), (21, -1), (22, -1), (23, -1), (24, -1), (25, 2048), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, 2048), (37, 1024), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, 32768), (20, 32768), (21, -1), (22, -1), (23, -1), (24, -1), (25, 2048), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, 2048), (37, 1024), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 14 : set()

After reduction : 
 pending  : [25, 36, 37, 20, 19]
 solution : [7, 3, 23, 11]


Solution : [7, 3, 23, 11] has cost 25.


Before backtrack at level 14
 pending : [25, 36, 37, 20, 19]
 solution : [7, 3, 23, 11]

After backtrack at level 14
 pending : [25, 36, 37, 20, 19, 2, 15, 13]
 solution : [7, 3, 23, 11]


Invert decision for 11 at level 13


New level: 14
 pending : [25, 36, 37, 20, 19, 2, 15, 13]
 solution : [7, 3, 23]


Before reduction : 
 pending  : [25, 36, 37, 20, 19, 2, 15, 13]
 solution : [7, 3, 23]

Essensial at level 14 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, 32768), (20, 32768), (21, -1), (22, -1), (23, -1), (24, -1), (25, 2048), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, 2048), (37, 1024), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 262144), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, 131072), (14, -1), (15, 270336), (16, -1), (17, -1), (18, -1), (19, 4194304), (20, 131072), (21, -1), (22, -1), (23, -1), (24, -1), (25, 2097152), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, 2097152), (37, 524288), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 14 : set()

After reduction : 
 pending  : [25, 36, 37, 20, 19, 2, 15, 13]
 solution : [7, 3, 23]


Solution : [7, 3, 23] has cost 16.


Decide in level 14 among pending : [25, 36, 37, 20, 19, 2, 15, 13]

Coverage : [(0, -1), (1, -1), (2, 262144), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, 131072), (14, -1), (15, 270336), (16, -1), (17, -1), (18, -1), (19, 4194304), (20, 131072), (21, -1), (22, -1), (23, -1), (24, -1), (25, 2097152), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, 2097152), (37, 524288), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Decide 19 with phase True at level 14

After decision at level 14
 pending : [25, 36, 37, 20, 2, 15, 13]
 solution : [7, 3, 23, 19]


New level: 15
 pending : [25, 36, 37, 20, 2, 15, 13]
 solution : [7, 3, 23, 19]


Before reduction : 
 pending  : [25, 36, 37, 20, 2, 15, 13]
 solution : [7, 3, 23, 19]

Essensial at level 15 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 262144), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, 131072), (14, -1), (15, 270336), (16, -1), (17, -1), (18, -1), (19, 4194304), (20, 131072), (21, -1), (22, -1), (23, -1), (24, -1), (25, 2097152), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, 2097152), (37, 524288), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 131072), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, 0), (14, -1), (15, 133120), (16, -1), (17, -1), (18, -1), (19, -1), (20, 0), (21, -1), (22, -1), (23, -1), (24, -1), (25, 524288), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, 524288), (37, 1024), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 15 : {20, 13}

After reduction : 
 pending  : [25, 36, 37, 2, 15]
 solution : [7, 3, 23, 19]


Before reduction : 
 pending  : [25, 36, 37, 2, 15]
 solution : [7, 3, 23, 19]

Essensial at level 15 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 131072), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, 0), (14, -1), (15, 133120), (16, -1), (17, -1), (18, -1), (19, -1), (20, 0), (21, -1), (22, -1), (23, -1), (24, -1), (25, 524288), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, 524288), (37, 1024), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 131072), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, 133120), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, 524288), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, 524288), (37, 1024), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 15 : set()

After reduction : 
 pending  : [25, 36, 37, 2, 15]
 solution : [7, 3, 23, 19]


Solution : [7, 3, 23, 19] has cost 23.


Before backtrack at level 15
 pending : [25, 36, 37, 2, 15]
 solution : [7, 3, 23, 19]

After backtrack at level 15
 pending : [25, 36, 37, 2, 15, 20, 13]
 solution : [7, 3, 23, 19]


Invert decision for 19 at level 14


New level: 15
 pending : [25, 36, 37, 2, 15, 20, 13]
 solution : [7, 3, 23]


Before reduction : 
 pending  : [25, 36, 37, 2, 15, 20, 13]
 solution : [7, 3, 23]

Essensial at level 15 : {20}

Before removed
 coverage : [(0, -1), (1, -1), (2, 131072), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, 133120), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, 524288), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, 524288), (37, 1024), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 262144), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, 65536), (14, -1), (15, 270336), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, 2097152), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, 2097152), (37, 524288), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 15 : set()

After reduction : 
 pending  : [25, 36, 37, 2, 15, 13]
 solution : [7, 3, 23, 20]


Before reduction : 
 pending  : [25, 36, 37, 2, 15, 13]
 solution : [7, 3, 23, 20]

Essensial at level 15 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 262144), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, 65536), (14, -1), (15, 270336), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, 2097152), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, 2097152), (37, 524288), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 262144), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, 65536), (14, -1), (15, 270336), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, 2097152), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, 2097152), (37, 524288), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 15 : set()

After reduction : 
 pending  : [25, 36, 37, 2, 15, 13]
 solution : [7, 3, 23, 20]


Solution : [7, 3, 23, 20] has cost 23.


Before backtrack at level 15
 pending : [25, 36, 37, 2, 15, 13]
 solution : [7, 3, 23, 20]

After backtrack at level 15
 pending : [25, 36, 37, 2, 15, 13, 20]
 solution : [7, 3, 23]


Before backtrack at level 14
 pending : [25, 36, 37, 2, 15, 13, 20]
 solution : [7, 3, 23]

After backtrack at level 14
 pending : [25, 36, 37, 2, 15, 13, 20, 19]
 solution : [7, 3, 23]


Before backtrack at level 13
 pending : [25, 36, 37, 2, 15, 13, 20, 19]
 solution : [7, 3, 23]

After backtrack at level 13
 pending : [25, 36, 37, 2, 15, 13, 20, 19, 11]
 solution : [7, 3, 23]


Before backtrack at level 12
 pending : [25, 36, 37, 2, 15, 13, 20, 19, 11]
 solution : [7, 3, 23]

After backtrack at level 12
 pending : [25, 36, 37, 2, 15, 13, 20, 19, 11, 17]
 solution : [7, 3, 23]


Before backtrack at level 11
 pending : [25, 36, 37, 2, 15, 13, 20, 19, 11, 17]
 solution : [7, 3, 23]

After backtrack at level 11
 pending : [25, 36, 37, 2, 15, 13, 20, 19, 11, 17, 9, 30, 31, 39, 42, 43, 47, 48, 49, 5, 40, 34, 35, 12]
 solution : [7, 3, 23]


Invert decision for 23 at level 10


New level: 11
 pending : [25, 36, 37, 2, 15, 13, 20, 19, 11, 17, 9, 30, 31, 39, 42, 43, 47, 48, 49, 5, 40, 34, 35, 12]
 solution : [7, 3]


Before reduction : 
 pending  : [25, 36, 37, 2, 15, 13, 20, 19, 11, 17, 9, 30, 31, 39, 42, 43, 47, 48, 49, 5, 40, 34, 35, 12]
 solution : [7, 3]

Essensial at level 11 : {5}

Before removed
 coverage : [(0, -1), (1, -1), (2, 262144), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, 65536), (14, -1), (15, 270336), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, 2097152), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, 2097152), (37, 524288), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 262144), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, 0), (10, -1), (11, 8388608), (12, 16777216), (13, 131072), (14, -1), (15, 270336), (16, -1), (17, 8388608), (18, -1), (19, 4194304), (20, 131072), (21, -1), (22, -1), (23, -1), (24, -1), (25, 2097152), (26, -1), (27, -1), (28, -1), (29, -1), (30, 0), (31, 0), (32, -1), (33, -1), (34, 0), (35, 0), (36, 2097152), (37, 65536), (38, -1), (39, 0), (40, 0), (41, -1), (42, 0), (43, 0), (44, -1), (45, -1), (46, -1), (47, 0), (48, 0), (49, 0), (50, -1), (51, -1), (52, -1)]

Covered at level 11 : {34, 35, 39, 40, 9, 42, 43, 47, 48, 49, 30, 31}

After reduction : 
 pending  : [25, 36, 37, 2, 15, 13, 20, 19, 11, 17, 12]
 solution : [7, 3, 5]


Before reduction : 
 pending  : [25, 36, 37, 2, 15, 13, 20, 19, 11, 17, 12]
 solution : [7, 3, 5]

Essensial at level 11 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 262144), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, 0), (10, -1), (11, 8388608), (12, 16777216), (13, 131072), (14, -1), (15, 270336), (16, -1), (17, 8388608), (18, -1), (19, 4194304), (20, 131072), (21, -1), (22, -1), (23, -1), (24, -1), (25, 2097152), (26, -1), (27, -1), (28, -1), (29, -1), (30, 0), (31, 0), (32, -1), (33, -1), (34, 0), (35, 0), (36, 2097152), (37, 65536), (38, -1), (39, 0), (40, 0), (41, -1), (42, 0), (43, 0), (44, -1), (45, -1), (46, -1), (47, 0), (48, 0), (49, 0), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 262144), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, 8388608), (12, 16777216), (13, 131072), (14, -1), (15, 270336), (16, -1), (17, 8388608), (18, -1), (19, 4194304), (20, 131072), (21, -1), (22, -1), (23, -1), (24, -1), (25, 2097152), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, 2097152), (37, 65536), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 11 : set()

After reduction : 
 pending  : [25, 36, 37, 2, 15, 13, 20, 19, 11, 17, 12]
 solution : [7, 3, 5]


Solution : [7, 3, 5] has cost 13.


Decide in level 11 among pending : [25, 36, 37, 2, 15, 13, 20, 19, 11, 17, 12]

Coverage : [(0, -1), (1, -1), (2, 262144), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, 8388608), (12, 16777216), (13, 131072), (14, -1), (15, 270336), (16, -1), (17, 8388608), (18, -1), (19, 4194304), (20, 131072), (21, -1), (22, -1), (23, -1), (24, -1), (25, 2097152), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, 2097152), (37, 65536), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Decide 12 with phase True at level 11

After decision at level 11
 pending : [25, 36, 37, 2, 15, 13, 20, 19, 11, 17]
 solution : [7, 3, 5, 12]


New level: 12
 pending : [25, 36, 37, 2, 15, 13, 20, 19, 11, 17]
 solution : [7, 3, 5, 12]


Before reduction : 
 pending  : [25, 36, 37, 2, 15, 13, 20, 19, 11, 17]
 solution : [7, 3, 5, 12]

Essensial at level 12 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 262144), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, 8388608), (12, 16777216), (13, 131072), (14, -1), (15, 270336), (16, -1), (17, 8388608), (18, -1), (19, 4194304), (20, 131072), (21, -1), (22, -1), (23, -1), (24, -1), (25, 2097152), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, 2097152), (37, 65536), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 0), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, 0), (12, -1), (13, 0), (14, -1), (15, 0), (16, -1), (17, 131072), (18, -1), (19, 32768), (20, 32768), (21, -1), (22, -1), (23, -1), (24, -1), (25, 2048), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, 2048), (37, 1024), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 12 : {2, 11, 13, 15}

After reduction : 
 pending  : [25, 36, 37, 20, 19, 17]
 solution : [7, 3, 5, 12]


Before reduction : 
 pending  : [25, 36, 37, 20, 19, 17]
 solution : [7, 3, 5, 12]

Essensial at level 12 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 0), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, 0), (12, -1), (13, 0), (14, -1), (15, 0), (16, -1), (17, 131072), (18, -1), (19, 32768), (20, 32768), (21, -1), (22, -1), (23, -1), (24, -1), (25, 2048), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, 2048), (37, 1024), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, 131072), (18, -1), (19, 32768), (20, 32768), (21, -1), (22, -1), (23, -1), (24, -1), (25, 2048), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, 2048), (37, 1024), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 12 : set()

After reduction : 
 pending  : [25, 36, 37, 20, 19, 17]
 solution : [7, 3, 5, 12]


Solution : [7, 3, 5, 12] has cost 22.


Before backtrack at level 12
 pending : [25, 36, 37, 20, 19, 17]
 solution : [7, 3, 5, 12]

After backtrack at level 12
 pending : [25, 36, 37, 20, 19, 17, 2, 15, 13, 11]
 solution : [7, 3, 5, 12]


Invert decision for 12 at level 11


New level: 12
 pending : [25, 36, 37, 20, 19, 17, 2, 15, 13, 11]
 solution : [7, 3, 5]


Before reduction : 
 pending  : [25, 36, 37, 20, 19, 17, 2, 15, 13, 11]
 solution : [7, 3, 5]

Essensial at level 12 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, 131072), (18, -1), (19, 32768), (20, 32768), (21, -1), (22, -1), (23, -1), (24, -1), (25, 2048), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, 2048), (37, 1024), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 262144), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, 8388608), (12, -1), (13, 131072), (14, -1), (15, 270336), (16, -1), (17, 8388608), (18, -1), (19, 4194304), (20, 131072), (21, -1), (22, -1), (23, -1), (24, -1), (25, 2097152), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, 2097152), (37, 65536), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 12 : set()

After reduction : 
 pending  : [25, 36, 37, 20, 19, 17, 2, 15, 13, 11]
 solution : [7, 3, 5]


Solution : [7, 3, 5] has cost 13.


Decide in level 12 among pending : [25, 36, 37, 20, 19, 17, 2, 15, 13, 11]

Coverage : [(0, -1), (1, -1), (2, 262144), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, 8388608), (12, -1), (13, 131072), (14, -1), (15, 270336), (16, -1), (17, 8388608), (18, -1), (19, 4194304), (20, 131072), (21, -1), (22, -1), (23, -1), (24, -1), (25, 2097152), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, 2097152), (37, 65536), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Decide 17 with phase True at level 12

After decision at level 12
 pending : [25, 36, 37, 20, 19, 2, 15, 13, 11]
 solution : [7, 3, 5, 17]


New level: 13
 pending : [25, 36, 37, 20, 19, 2, 15, 13, 11]
 solution : [7, 3, 5, 17]


Before reduction : 
 pending  : [25, 36, 37, 20, 19, 2, 15, 13, 11]
 solution : [7, 3, 5, 17]

Essensial at level 13 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 262144), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, 8388608), (12, -1), (13, 131072), (14, -1), (15, 270336), (16, -1), (17, 8388608), (18, -1), (19, 4194304), (20, 131072), (21, -1), (22, -1), (23, -1), (24, -1), (25, 2097152), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, 2097152), (37, 65536), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 131072), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, 2097152), (12, -1), (13, 0), (14, -1), (15, 133120), (16, -1), (17, -1), (18, -1), (19, 0), (20, 0), (21, -1), (22, -1), (23, -1), (24, -1), (25, 524288), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, 524288), (37, 1024), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 13 : {19, 20, 13}

After reduction : 
 pending  : [25, 36, 37, 2, 15, 11]
 solution : [7, 3, 5, 17]


Before reduction : 
 pending  : [25, 36, 37, 2, 15, 11]
 solution : [7, 3, 5, 17]

Essensial at level 13 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 131072), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, 2097152), (12, -1), (13, 0), (14, -1), (15, 133120), (16, -1), (17, -1), (18, -1), (19, 0), (20, 0), (21, -1), (22, -1), (23, -1), (24, -1), (25, 524288), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, 524288), (37, 1024), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 131072), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, 2097152), (12, -1), (13, -1), (14, -1), (15, 133120), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, 524288), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, 524288), (37, 1024), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 13 : set()

After reduction : 
 pending  : [25, 36, 37, 2, 15, 11]
 solution : [7, 3, 5, 17]


Solution : [7, 3, 5, 17] has cost 20.


Before backtrack at level 13
 pending : [25, 36, 37, 2, 15, 11]
 solution : [7, 3, 5, 17]

After backtrack at level 13
 pending : [25, 36, 37, 2, 15, 11, 20, 19, 13]
 solution : [7, 3, 5, 17]


Invert decision for 17 at level 12


New level: 13
 pending : [25, 36, 37, 2, 15, 11, 20, 19, 13]
 solution : [7, 3, 5]


Before reduction : 
 pending  : [25, 36, 37, 2, 15, 11, 20, 19, 13]
 solution : [7, 3, 5]

Essensial at level 13 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 131072), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, 2097152), (12, -1), (13, -1), (14, -1), (15, 133120), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, 524288), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, 524288), (37, 1024), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 262144), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, 8388608), (12, -1), (13, 131072), (14, -1), (15, 270336), (16, -1), (17, -1), (18, -1), (19, 4194304), (20, 131072), (21, -1), (22, -1), (23, -1), (24, -1), (25, 2097152), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, 2097152), (37, 65536), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 13 : set()

After reduction : 
 pending  : [25, 36, 37, 2, 15, 11, 20, 19, 13]
 solution : [7, 3, 5]


Solution : [7, 3, 5] has cost 13.


Decide in level 13 among pending : [25, 36, 37, 2, 15, 11, 20, 19, 13]

Coverage : [(0, -1), (1, -1), (2, 262144), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, 8388608), (12, -1), (13, 131072), (14, -1), (15, 270336), (16, -1), (17, -1), (18, -1), (19, 4194304), (20, 131072), (21, -1), (22, -1), (23, -1), (24, -1), (25, 2097152), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, 2097152), (37, 65536), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Decide 11 with phase True at level 13

After decision at level 13
 pending : [25, 36, 37, 2, 15, 20, 19, 13]
 solution : [7, 3, 5, 11]


New level: 14
 pending : [25, 36, 37, 2, 15, 20, 19, 13]
 solution : [7, 3, 5, 11]


Before reduction : 
 pending  : [25, 36, 37, 2, 15, 20, 19, 13]
 solution : [7, 3, 5, 11]

Essensial at level 14 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 262144), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, 8388608), (12, -1), (13, 131072), (14, -1), (15, 270336), (16, -1), (17, -1), (18, -1), (19, 4194304), (20, 131072), (21, -1), (22, -1), (23, -1), (24, -1), (25, 2097152), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, 2097152), (37, 65536), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 0), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, 0), (14, -1), (15, 0), (16, -1), (17, -1), (18, -1), (19, 32768), (20, 32768), (21, -1), (22, -1), (23, -1), (24, -1), (25, 2048), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, 2048), (37, 1024), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 14 : {2, 13, 15}

After reduction : 
 pending  : [25, 36, 37, 20, 19]
 solution : [7, 3, 5, 11]


Before reduction : 
 pending  : [25, 36, 37, 20, 19]
 solution : [7, 3, 5, 11]

Essensial at level 14 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 0), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, 0), (14, -1), (15, 0), (16, -1), (17, -1), (18, -1), (19, 32768), (20, 32768), (21, -1), (22, -1), (23, -1), (24, -1), (25, 2048), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, 2048), (37, 1024), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, 32768), (20, 32768), (21, -1), (22, -1), (23, -1), (24, -1), (25, 2048), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, 2048), (37, 1024), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 14 : set()

After reduction : 
 pending  : [25, 36, 37, 20, 19]
 solution : [7, 3, 5, 11]


Solution : [7, 3, 5, 11] has cost 22.


Before backtrack at level 14
 pending : [25, 36, 37, 20, 19]
 solution : [7, 3, 5, 11]

After backtrack at level 14
 pending : [25, 36, 37, 20, 19, 2, 15, 13]
 solution : [7, 3, 5, 11]


Invert decision for 11 at level 13


New level: 14
 pending : [25, 36, 37, 20, 19, 2, 15, 13]
 solution : [7, 3, 5]


Before reduction : 
 pending  : [25, 36, 37, 20, 19, 2, 15, 13]
 solution : [7, 3, 5]

Essensial at level 14 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, 32768), (20, 32768), (21, -1), (22, -1), (23, -1), (24, -1), (25, 2048), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, 2048), (37, 1024), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 262144), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, 131072), (14, -1), (15, 270336), (16, -1), (17, -1), (18, -1), (19, 4194304), (20, 131072), (21, -1), (22, -1), (23, -1), (24, -1), (25, 2097152), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, 2097152), (37, 65536), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 14 : set()

After reduction : 
 pending  : [25, 36, 37, 20, 19, 2, 15, 13]
 solution : [7, 3, 5]


Solution : [7, 3, 5] has cost 13.


Decide in level 14 among pending : [25, 36, 37, 20, 19, 2, 15, 13]

Coverage : [(0, -1), (1, -1), (2, 262144), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, 131072), (14, -1), (15, 270336), (16, -1), (17, -1), (18, -1), (19, 4194304), (20, 131072), (21, -1), (22, -1), (23, -1), (24, -1), (25, 2097152), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, 2097152), (37, 65536), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Decide 19 with phase True at level 14

After decision at level 14
 pending : [25, 36, 37, 20, 2, 15, 13]
 solution : [7, 3, 5, 19]


New level: 15
 pending : [25, 36, 37, 20, 2, 15, 13]
 solution : [7, 3, 5, 19]


Before reduction : 
 pending  : [25, 36, 37, 20, 2, 15, 13]
 solution : [7, 3, 5, 19]

Essensial at level 15 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 262144), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, 131072), (14, -1), (15, 270336), (16, -1), (17, -1), (18, -1), (19, 4194304), (20, 131072), (21, -1), (22, -1), (23, -1), (24, -1), (25, 2097152), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, 2097152), (37, 65536), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 131072), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, 0), (14, -1), (15, 133120), (16, -1), (17, -1), (18, -1), (19, -1), (20, 0), (21, -1), (22, -1), (23, -1), (24, -1), (25, 524288), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, 524288), (37, 1024), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 15 : {20, 13}

After reduction : 
 pending  : [25, 36, 37, 2, 15]
 solution : [7, 3, 5, 19]


Before reduction : 
 pending  : [25, 36, 37, 2, 15]
 solution : [7, 3, 5, 19]

Essensial at level 15 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 131072), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, 0), (14, -1), (15, 133120), (16, -1), (17, -1), (18, -1), (19, -1), (20, 0), (21, -1), (22, -1), (23, -1), (24, -1), (25, 524288), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, 524288), (37, 1024), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 131072), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, 133120), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, 524288), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, 524288), (37, 1024), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 15 : set()

After reduction : 
 pending  : [25, 36, 37, 2, 15]
 solution : [7, 3, 5, 19]


Solution : [7, 3, 5, 19] has cost 20.


Before backtrack at level 15
 pending : [25, 36, 37, 2, 15]
 solution : [7, 3, 5, 19]

After backtrack at level 15
 pending : [25, 36, 37, 2, 15, 20, 13]
 solution : [7, 3, 5, 19]


Invert decision for 19 at level 14


New level: 15
 pending : [25, 36, 37, 2, 15, 20, 13]
 solution : [7, 3, 5]


Before reduction : 
 pending  : [25, 36, 37, 2, 15, 20, 13]
 solution : [7, 3, 5]

Essensial at level 15 : {20}

Before removed
 coverage : [(0, -1), (1, -1), (2, 131072), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, 133120), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, 524288), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, 524288), (37, 1024), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 262144), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, 65536), (14, -1), (15, 270336), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, 2097152), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, 2097152), (37, 65536), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 15 : set()

After reduction : 
 pending  : [25, 36, 37, 2, 15, 13]
 solution : [7, 3, 5, 20]


Before reduction : 
 pending  : [25, 36, 37, 2, 15, 13]
 solution : [7, 3, 5, 20]

Essensial at level 15 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 262144), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, 65536), (14, -1), (15, 270336), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, 2097152), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, 2097152), (37, 65536), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 262144), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, 65536), (14, -1), (15, 270336), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, 2097152), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, 2097152), (37, 65536), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 15 : set()

After reduction : 
 pending  : [25, 36, 37, 2, 15, 13]
 solution : [7, 3, 5, 20]


Solution : [7, 3, 5, 20] has cost 20.


Before backtrack at level 15
 pending : [25, 36, 37, 2, 15, 13]
 solution : [7, 3, 5, 20]

After backtrack at level 15
 pending : [25, 36, 37, 2, 15, 13, 20]
 solution : [7, 3, 5]


Before backtrack at level 14
 pending : [25, 36, 37, 2, 15, 13, 20]
 solution : [7, 3, 5]

After backtrack at level 14
 pending : [25, 36, 37, 2, 15, 13, 20, 19]
 solution : [7, 3, 5]


Before backtrack at level 13
 pending : [25, 36, 37, 2, 15, 13, 20, 19]
 solution : [7, 3, 5]

After backtrack at level 13
 pending : [25, 36, 37, 2, 15, 13, 20, 19, 11]
 solution : [7, 3, 5]


Before backtrack at level 12
 pending : [25, 36, 37, 2, 15, 13, 20, 19, 11]
 solution : [7, 3, 5]

After backtrack at level 12
 pending : [25, 36, 37, 2, 15, 13, 20, 19, 11, 17]
 solution : [7, 3, 5]


Before backtrack at level 11
 pending : [25, 36, 37, 2, 15, 13, 20, 19, 11, 17]
 solution : [7, 3, 5]

After backtrack at level 11
 pending : [25, 36, 37, 2, 15, 13, 20, 19, 11, 17, 5, 9, 30, 31, 39, 42, 43, 47, 48, 49, 40, 34, 35, 12]
 solution : [7, 3]


Before backtrack at level 10
 pending : [25, 36, 37, 2, 15, 13, 20, 19, 11, 17, 5, 9, 30, 31, 39, 42, 43, 47, 48, 49, 40, 34, 35, 12]
 solution : [7, 3]

After backtrack at level 10
 pending : [25, 36, 37, 2, 15, 13, 20, 19, 11, 17, 5, 9, 30, 31, 39, 42, 43, 47, 48, 49, 40, 34, 35, 12, 23]
 solution : [7, 3]


Before backtrack at level 9
 pending : [25, 36, 37, 2, 15, 13, 20, 19, 11, 17, 5, 9, 30, 31, 39, 42, 43, 47, 48, 49, 40, 34, 35, 12, 23]
 solution : [7, 3]

After backtrack at level 9
 pending : [25, 36, 37, 2, 15, 13, 20, 19, 11, 17, 5, 9, 30, 31, 39, 42, 43, 47, 48, 49, 40, 34, 35, 12, 23, 41]
 solution : [7, 3]


Before backtrack at level 8
 pending : [25, 36, 37, 2, 15, 13, 20, 19, 11, 17, 5, 9, 30, 31, 39, 42, 43, 47, 48, 49, 40, 34, 35, 12, 23, 41]
 solution : [7, 3]

After backtrack at level 8
 pending : [25, 36, 37, 2, 15, 13, 20, 19, 11, 17, 5, 9, 30, 31, 39, 42, 43, 47, 48, 49, 40, 34, 35, 12, 23, 41, 27]
 solution : [7, 3]


Before backtrack at level 7
 pending : [25, 36, 37, 2, 15, 13, 20, 19, 11, 17, 5, 9, 30, 31, 39, 42, 43, 47, 48, 49, 40, 34, 35, 12, 23, 41, 27]
 solution : [7, 3]

After backtrack at level 7
 pending : [25, 36, 37, 2, 15, 13, 20, 19, 11, 17, 5, 9, 30, 31, 39, 42, 43, 47, 48, 49, 40, 34, 35, 12, 23, 41, 27, 18]
 solution : [7, 3]


Before backtrack at level 6
 pending : [25, 36, 37, 2, 15, 13, 20, 19, 11, 17, 5, 9, 30, 31, 39, 42, 43, 47, 48, 49, 40, 34, 35, 12, 23, 41, 27, 18]
 solution : [7, 3]

After backtrack at level 6
 pending : [25, 36, 37, 2, 15, 13, 20, 19, 11, 17, 5, 9, 30, 31, 39, 42, 43, 47, 48, 49, 40, 34, 35, 12, 23, 41, 27, 18, 33]
 solution : [7, 3]


Before backtrack at level 5
 pending : [25, 36, 37, 2, 15, 13, 20, 19, 11, 17, 5, 9, 30, 31, 39, 42, 43, 47, 48, 49, 40, 34, 35, 12, 23, 41, 27, 18, 33]
 solution : [7, 3]

After backtrack at level 5
 pending : [25, 36, 37, 2, 15, 13, 20, 19, 11, 17, 5, 9, 30, 31, 39, 42, 43, 47, 48, 49, 40, 34, 35, 12, 23, 41, 27, 18, 33, 28]
 solution : [7, 3]


Before backtrack at level 4
 pending : [25, 36, 37, 2, 15, 13, 20, 19, 11, 17, 5, 9, 30, 31, 39, 42, 43, 47, 48, 49, 40, 34, 35, 12, 23, 41, 27, 18, 33, 28]
 solution : [7, 3]

After backtrack at level 4
 pending : [25, 36, 37, 2, 15, 13, 20, 19, 11, 17, 5, 9, 30, 31, 39, 42, 43, 47, 48, 49, 40, 34, 35, 12, 23, 41, 27, 18, 33, 28, 16]
 solution : [7, 3]


Before backtrack at level 3
 pending : [25, 36, 37, 2, 15, 13, 20, 19, 11, 17, 5, 9, 30, 31, 39, 42, 43, 47, 48, 49, 40, 34, 35, 12, 23, 41, 27, 18, 33, 28, 16]
 solution : [7, 3]

After backtrack at level 3
 pending : [25, 36, 37, 2, 15, 13, 20, 19, 11, 17, 5, 9, 30, 31, 39, 42, 43, 47, 48, 49, 40, 34, 35, 12, 23, 41, 27, 18, 33, 28, 16, 26]
 solution : [7, 3]


Before backtrack at level 2
 pending : [25, 36, 37, 2, 15, 13, 20, 19, 11, 17, 5, 9, 30, 31, 39, 42, 43, 47, 48, 49, 40, 34, 35, 12, 23, 41, 27, 18, 33, 28, 16, 26]
 solution : [7, 3]

After backtrack at level 2
 pending : [25, 36, 37, 2, 15, 13, 20, 19, 11, 17, 5, 9, 30, 31, 39, 42, 43, 47, 48, 49, 40, 34, 35, 12, 23, 41, 27, 18, 33, 28, 16, 26, 4]
 solution : [7, 3]


Invert decision for 3 at level 1


New level: 2
 pending : [25, 36, 37, 2, 15, 13, 20, 19, 11, 17, 5, 9, 30, 31, 39, 42, 43, 47, 48, 49, 40, 34, 35, 12, 23, 41, 27, 18, 33, 28, 16, 26, 4]
 solution : [7]


Before reduction : 
 pending  : [25, 36, 37, 2, 15, 13, 20, 19, 11, 17, 5, 9, 30, 31, 39, 42, 43, 47, 48, 49, 40, 34, 35, 12, 23, 41, 27, 18, 33, 28, 16, 26, 4]
 solution : [7]

Essensial at level 2 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 262144), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, 65536), (14, -1), (15, 270336), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, 2097152), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, 2097152), (37, 65536), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 1048576), (3, -1), (4, 17179869184), (5, 134217728), (6, -1), (7, -1), (8, -1), (9, 1048576), (10, -1), (11, 33554432), (12, 67108864), (13, 524288), (14, -1), (15, 1114112), (16, 2147483648), (17, 16777216), (18, 1073741824), (19, 8388608), (20, 262144), (21, -1), (22, -1), (23, 134217728), (24, -1), (25, 4194304), (26, 4294967296), (27, 1073741824), (28, 4294967296), (29, -1), (30, 1048576), (31, 16384), (32, -1), (33, 2147483648), (34, 4194304), (35, 32768), (36, 4194304), (37, 268435456), (38, -1), (39, 16384), (40, 134217728), (41, 1073741824), (42, 524288), (43, 524288), (44, -1), (45, -1), (46, -1), (47, 67108864), (48, 16777216), (49, 67108864), (50, -1), (51, -1), (52, -1)]

Covered at level 2 : set()

After reduction : 
 pending  : [25, 36, 37, 2, 15, 13, 20, 19, 11, 17, 5, 9, 30, 31, 39, 42, 43, 47, 48, 49, 40, 34, 35, 12, 23, 41, 27, 18, 33, 28, 16, 26, 4]
 solution : [7]


Solution : [7] has cost 6.


Decide in level 2 among pending : [25, 36, 37, 2, 15, 13, 20, 19, 11, 17, 5, 9, 30, 31, 39, 42, 43, 47, 48, 49, 40, 34, 35, 12, 23, 41, 27, 18, 33, 28, 16, 26, 4]

Coverage : [(0, -1), (1, -1), (2, 1048576), (3, -1), (4, 17179869184), (5, 134217728), (6, -1), (7, -1), (8, -1), (9, 1048576), (10, -1), (11, 33554432), (12, 67108864), (13, 524288), (14, -1), (15, 1114112), (16, 2147483648), (17, 16777216), (18, 1073741824), (19, 8388608), (20, 262144), (21, -1), (22, -1), (23, 134217728), (24, -1), (25, 4194304), (26, 4294967296), (27, 1073741824), (28, 4294967296), (29, -1), (30, 1048576), (31, 16384), (32, -1), (33, 2147483648), (34, 4194304), (35, 32768), (36, 4194304), (37, 268435456), (38, -1), (39, 16384), (40, 134217728), (41, 1073741824), (42, 524288), (43, 524288), (44, -1), (45, -1), (46, -1), (47, 67108864), (48, 16777216), (49, 67108864), (50, -1), (51, -1), (52, -1)]

Decide 4 with phase True at level 2

After decision at level 2
 pending : [25, 36, 37, 2, 15, 13, 20, 19, 11, 17, 5, 9, 30, 31, 39, 42, 43, 47, 48, 49, 40, 34, 35, 12, 23, 41, 27, 18, 33, 28, 16, 26]
 solution : [7, 4]


New level: 3
 pending : [25, 36, 37, 2, 15, 13, 20, 19, 11, 17, 5, 9, 30, 31, 39, 42, 43, 47, 48, 49, 40, 34, 35, 12, 23, 41, 27, 18, 33, 28, 16, 26]
 solution : [7, 4]


Before reduction : 
 pending  : [25, 36, 37, 2, 15, 13, 20, 19, 11, 17, 5, 9, 30, 31, 39, 42, 43, 47, 48, 49, 40, 34, 35, 12, 23, 41, 27, 18, 33, 28, 16, 26]
 solution : [7, 4]

Essensial at level 3 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 1048576), (3, -1), (4, 17179869184), (5, 134217728), (6, -1), (7, -1), (8, -1), (9, 1048576), (10, -1), (11, 33554432), (12, 67108864), (13, 524288), (14, -1), (15, 1114112), (16, 2147483648), (17, 16777216), (18, 1073741824), (19, 8388608), (20, 262144), (21, -1), (22, -1), (23, 134217728), (24, -1), (25, 4194304), (26, 4294967296), (27, 1073741824), (28, 4294967296), (29, -1), (30, 1048576), (31, 16384), (32, -1), (33, 2147483648), (34, 4194304), (35, 32768), (36, 4194304), (37, 268435456), (38, -1), (39, 16384), (40, 134217728), (41, 1073741824), (42, 524288), (43, 524288), (44, -1), (45, -1), (46, -1), (47, 67108864), (48, 16777216), (49, 67108864), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 262144), (3, -1), (4, -1), (5, 134217728), (6, -1), (7, -1), (8, -1), (9, 1048576), (10, -1), (11, 8388608), (12, 16777216), (13, 131072), (14, -1), (15, 278528), (16, 536870912), (17, 4194304), (18, 268435456), (19, 2097152), (20, 65536), (21, -1), (22, -1), (23, 134217728), (24, -1), (25, 1048576), (26, 1073741824), (27, 1073741824), (28, 4294967296), (29, -1), (30, 1048576), (31, 16384), (32, -1), (33, 2147483648), (34, 4194304), (35, 32768), (36, 1048576), (37, 67108864), (38, -1), (39, 16384), (40, 134217728), (41, 268435456), (42, 524288), (43, 524288), (44, -1), (45, -1), (46, -1), (47, 67108864), (48, 16777216), (49, 67108864), (50, -1), (51, -1), (52, -1)]

Covered at level 3 : set()

After reduction : 
 pending  : [25, 36, 37, 2, 15, 13, 20, 19, 11, 17, 5, 9, 30, 31, 39, 42, 43, 47, 48, 49, 40, 34, 35, 12, 23, 41, 27, 18, 33, 28, 16, 26]
 solution : [7, 4]


Solution : [7, 4] has cost 11.


Decide in level 3 among pending : [25, 36, 37, 2, 15, 13, 20, 19, 11, 17, 5, 9, 30, 31, 39, 42, 43, 47, 48, 49, 40, 34, 35, 12, 23, 41, 27, 18, 33, 28, 16, 26]

Coverage : [(0, -1), (1, -1), (2, 262144), (3, -1), (4, -1), (5, 134217728), (6, -1), (7, -1), (8, -1), (9, 1048576), (10, -1), (11, 8388608), (12, 16777216), (13, 131072), (14, -1), (15, 278528), (16, 536870912), (17, 4194304), (18, 268435456), (19, 2097152), (20, 65536), (21, -1), (22, -1), (23, 134217728), (24, -1), (25, 1048576), (26, 1073741824), (27, 1073741824), (28, 4294967296), (29, -1), (30, 1048576), (31, 16384), (32, -1), (33, 2147483648), (34, 4194304), (35, 32768), (36, 1048576), (37, 67108864), (38, -1), (39, 16384), (40, 134217728), (41, 268435456), (42, 524288), (43, 524288), (44, -1), (45, -1), (46, -1), (47, 67108864), (48, 16777216), (49, 67108864), (50, -1), (51, -1), (52, -1)]

Decide 28 with phase True at level 3

After decision at level 3
 pending : [25, 36, 37, 2, 15, 13, 20, 19, 11, 17, 5, 9, 30, 31, 39, 42, 43, 47, 48, 49, 40, 34, 35, 12, 23, 41, 27, 18, 33, 16, 26]
 solution : [7, 4, 28]


New level: 4
 pending : [25, 36, 37, 2, 15, 13, 20, 19, 11, 17, 5, 9, 30, 31, 39, 42, 43, 47, 48, 49, 40, 34, 35, 12, 23, 41, 27, 18, 33, 16, 26]
 solution : [7, 4, 28]


Before reduction : 
 pending  : [25, 36, 37, 2, 15, 13, 20, 19, 11, 17, 5, 9, 30, 31, 39, 42, 43, 47, 48, 49, 40, 34, 35, 12, 23, 41, 27, 18, 33, 16, 26]
 solution : [7, 4, 28]

Essensial at level 4 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 262144), (3, -1), (4, -1), (5, 134217728), (6, -1), (7, -1), (8, -1), (9, 1048576), (10, -1), (11, 8388608), (12, 16777216), (13, 131072), (14, -1), (15, 278528), (16, 536870912), (17, 4194304), (18, 268435456), (19, 2097152), (20, 65536), (21, -1), (22, -1), (23, 134217728), (24, -1), (25, 1048576), (26, 1073741824), (27, 1073741824), (28, 4294967296), (29, -1), (30, 1048576), (31, 16384), (32, -1), (33, 2147483648), (34, 4194304), (35, 32768), (36, 1048576), (37, 67108864), (38, -1), (39, 16384), (40, 134217728), (41, 268435456), (42, 524288), (43, 524288), (44, -1), (45, -1), (46, -1), (47, 67108864), (48, 16777216), (49, 67108864), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 262144), (3, -1), (4, -1), (5, 134217728), (6, -1), (7, -1), (8, -1), (9, 1048576), (10, -1), (11, 8388608), (12, 16777216), (13, 131072), (14, -1), (15, 278528), (16, 536870912), (17, 4194304), (18, 268435456), (19, 2097152), (20, 65536), (21, -1), (22, -1), (23, 134217728), (24, -1), (25, 1048576), (26, 1073741824), (27, 536870912), (28, -1), (29, -1), (30, 1048576), (31, 16384), (32, -1), (33, 1073741824), (34, 2097152), (35, 16384), (36, 1048576), (37, 67108864), (38, -1), (39, 16384), (40, 134217728), (41, 134217728), (42, 524288), (43, 524288), (44, -1), (45, -1), (46, -1), (47, 67108864), (48, 16777216), (49, 67108864), (50, -1), (51, -1), (52, -1)]

Covered at level 4 : set()

After reduction : 
 pending  : [25, 36, 37, 2, 15, 13, 20, 19, 11, 17, 5, 9, 30, 31, 39, 42, 43, 47, 48, 49, 40, 34, 35, 12, 23, 41, 27, 18, 33, 16, 26]
 solution : [7, 4, 28]


Solution : [7, 4, 28] has cost 15.


Decide in level 4 among pending : [25, 36, 37, 2, 15, 13, 20, 19, 11, 17, 5, 9, 30, 31, 39, 42, 43, 47, 48, 49, 40, 34, 35, 12, 23, 41, 27, 18, 33, 16, 26]

Coverage : [(0, -1), (1, -1), (2, 262144), (3, -1), (4, -1), (5, 134217728), (6, -1), (7, -1), (8, -1), (9, 1048576), (10, -1), (11, 8388608), (12, 16777216), (13, 131072), (14, -1), (15, 278528), (16, 536870912), (17, 4194304), (18, 268435456), (19, 2097152), (20, 65536), (21, -1), (22, -1), (23, 134217728), (24, -1), (25, 1048576), (26, 1073741824), (27, 536870912), (28, -1), (29, -1), (30, 1048576), (31, 16384), (32, -1), (33, 1073741824), (34, 2097152), (35, 16384), (36, 1048576), (37, 67108864), (38, -1), (39, 16384), (40, 134217728), (41, 134217728), (42, 524288), (43, 524288), (44, -1), (45, -1), (46, -1), (47, 67108864), (48, 16777216), (49, 67108864), (50, -1), (51, -1), (52, -1)]

Decide 33 with phase True at level 4

After decision at level 4
 pending : [25, 36, 37, 2, 15, 13, 20, 19, 11, 17, 5, 9, 30, 31, 39, 42, 43, 47, 48, 49, 40, 34, 35, 12, 23, 41, 27, 18, 16, 26]
 solution : [7, 4, 28, 33]


New level: 5
 pending : [25, 36, 37, 2, 15, 13, 20, 19, 11, 17, 5, 9, 30, 31, 39, 42, 43, 47, 48, 49, 40, 34, 35, 12, 23, 41, 27, 18, 16, 26]
 solution : [7, 4, 28, 33]


Before reduction : 
 pending  : [25, 36, 37, 2, 15, 13, 20, 19, 11, 17, 5, 9, 30, 31, 39, 42, 43, 47, 48, 49, 40, 34, 35, 12, 23, 41, 27, 18, 16, 26]
 solution : [7, 4, 28, 33]

Essensial at level 5 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 262144), (3, -1), (4, -1), (5, 134217728), (6, -1), (7, -1), (8, -1), (9, 1048576), (10, -1), (11, 8388608), (12, 16777216), (13, 131072), (14, -1), (15, 278528), (16, 536870912), (17, 4194304), (18, 268435456), (19, 2097152), (20, 65536), (21, -1), (22, -1), (23, 134217728), (24, -1), (25, 1048576), (26, 1073741824), (27, 536870912), (28, -1), (29, -1), (30, 1048576), (31, 16384), (32, -1), (33, 1073741824), (34, 2097152), (35, 16384), (36, 1048576), (37, 67108864), (38, -1), (39, 16384), (40, 134217728), (41, 134217728), (42, 524288), (43, 524288), (44, -1), (45, -1), (46, -1), (47, 67108864), (48, 16777216), (49, 67108864), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 262144), (3, -1), (4, -1), (5, 134217728), (6, -1), (7, -1), (8, -1), (9, 262144), (10, -1), (11, 8388608), (12, 16777216), (13, 131072), (14, -1), (15, 278528), (16, 536870912), (17, 4194304), (18, 268435456), (19, 2097152), (20, 65536), (21, -1), (22, -1), (23, 134217728), (24, -1), (25, 1048576), (26, 1073741824), (27, 16384), (28, -1), (29, -1), (30, 262144), (31, 4096), (32, -1), (33, -1), (34, 0), (35, 0), (36, 1048576), (37, 67108864), (38, -1), (39, 4096), (40, 33554432), (41, 4096), (42, 131072), (43, 131072), (44, -1), (45, -1), (46, -1), (47, 16777216), (48, 4194304), (49, 16777216), (50, -1), (51, -1), (52, -1)]

Covered at level 5 : {34, 35}

After reduction : 
 pending  : [25, 36, 37, 2, 15, 13, 20, 19, 11, 17, 5, 9, 30, 31, 39, 42, 43, 47, 48, 49, 40, 12, 23, 41, 27, 18, 16, 26]
 solution : [7, 4, 28, 33]


Before reduction : 
 pending  : [25, 36, 37, 2, 15, 13, 20, 19, 11, 17, 5, 9, 30, 31, 39, 42, 43, 47, 48, 49, 40, 12, 23, 41, 27, 18, 16, 26]
 solution : [7, 4, 28, 33]

Essensial at level 5 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 262144), (3, -1), (4, -1), (5, 134217728), (6, -1), (7, -1), (8, -1), (9, 262144), (10, -1), (11, 8388608), (12, 16777216), (13, 131072), (14, -1), (15, 278528), (16, 536870912), (17, 4194304), (18, 268435456), (19, 2097152), (20, 65536), (21, -1), (22, -1), (23, 134217728), (24, -1), (25, 1048576), (26, 1073741824), (27, 16384), (28, -1), (29, -1), (30, 262144), (31, 4096), (32, -1), (33, -1), (34, 0), (35, 0), (36, 1048576), (37, 67108864), (38, -1), (39, 4096), (40, 33554432), (41, 4096), (42, 131072), (43, 131072), (44, -1), (45, -1), (46, -1), (47, 16777216), (48, 4194304), (49, 16777216), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 262144), (3, -1), (4, -1), (5, 134217728), (6, -1), (7, -1), (8, -1), (9, 262144), (10, -1), (11, 8388608), (12, 16777216), (13, 131072), (14, -1), (15, 278528), (16, 536870912), (17, 4194304), (18, 268435456), (19, 2097152), (20, 65536), (21, -1), (22, -1), (23, 134217728), (24, -1), (25, 1048576), (26, 1073741824), (27, 16384), (28, -1), (29, -1), (30, 262144), (31, 4096), (32, -1), (33, -1), (34, -1), (35, -1), (36, 1048576), (37, 67108864), (38, -1), (39, 4096), (40, 33554432), (41, 4096), (42, 131072), (43, 131072), (44, -1), (45, -1), (46, -1), (47, 16777216), (48, 4194304), (49, 16777216), (50, -1), (51, -1), (52, -1)]

Covered at level 5 : set()

After reduction : 
 pending  : [25, 36, 37, 2, 15, 13, 20, 19, 11, 17, 5, 9, 30, 31, 39, 42, 43, 47, 48, 49, 40, 12, 23, 41, 27, 18, 16, 26]
 solution : [7, 4, 28, 33]


Solution : [7, 4, 28, 33] has cost 28.


Before backtrack at level 5
 pending : [25, 36, 37, 2, 15, 13, 20, 19, 11, 17, 5, 9, 30, 31, 39, 42, 43, 47, 48, 49, 40, 12, 23, 41, 27, 18, 16, 26]
 solution : [7, 4, 28, 33]

After backtrack at level 5
 pending : [25, 36, 37, 2, 15, 13, 20, 19, 11, 17, 5, 9, 30, 31, 39, 42, 43, 47, 48, 49, 40, 12, 23, 41, 27, 18, 16, 26, 34, 35]
 solution : [7, 4, 28, 33]


Invert decision for 33 at level 4


New level: 5
 pending : [25, 36, 37, 2, 15, 13, 20, 19, 11, 17, 5, 9, 30, 31, 39, 42, 43, 47, 48, 49, 40, 12, 23, 41, 27, 18, 16, 26, 34, 35]
 solution : [7, 4, 28]


Before reduction : 
 pending  : [25, 36, 37, 2, 15, 13, 20, 19, 11, 17, 5, 9, 30, 31, 39, 42, 43, 47, 48, 49, 40, 12, 23, 41, 27, 18, 16, 26, 34, 35]
 solution : [7, 4, 28]

Essensial at level 5 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 262144), (3, -1), (4, -1), (5, 134217728), (6, -1), (7, -1), (8, -1), (9, 262144), (10, -1), (11, 8388608), (12, 16777216), (13, 131072), (14, -1), (15, 278528), (16, 536870912), (17, 4194304), (18, 268435456), (19, 2097152), (20, 65536), (21, -1), (22, -1), (23, 134217728), (24, -1), (25, 1048576), (26, 1073741824), (27, 16384), (28, -1), (29, -1), (30, 262144), (31, 4096), (32, -1), (33, -1), (34, -1), (35, -1), (36, 1048576), (37, 67108864), (38, -1), (39, 4096), (40, 33554432), (41, 4096), (42, 131072), (43, 131072), (44, -1), (45, -1), (46, -1), (47, 16777216), (48, 4194304), (49, 16777216), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 262144), (3, -1), (4, -1), (5, 134217728), (6, -1), (7, -1), (8, -1), (9, 1048576), (10, -1), (11, 8388608), (12, 16777216), (13, 131072), (14, -1), (15, 278528), (16, 536870912), (17, 4194304), (18, 268435456), (19, 2097152), (20, 65536), (21, -1), (22, -1), (23, 134217728), (24, -1), (25, 1048576), (26, 1073741824), (27, 536870912), (28, -1), (29, -1), (30, 1048576), (31, 16384), (32, -1), (33, -1), (34, 2097152), (35, 16384), (36, 1048576), (37, 67108864), (38, -1), (39, 16384), (40, 134217728), (41, 134217728), (42, 524288), (43, 524288), (44, -1), (45, -1), (46, -1), (47, 67108864), (48, 16777216), (49, 67108864), (50, -1), (51, -1), (52, -1)]

Covered at level 5 : set()

After reduction : 
 pending  : [25, 36, 37, 2, 15, 13, 20, 19, 11, 17, 5, 9, 30, 31, 39, 42, 43, 47, 48, 49, 40, 12, 23, 41, 27, 18, 16, 26, 34, 35]
 solution : [7, 4, 28]


Solution : [7, 4, 28] has cost 15.


Decide in level 5 among pending : [25, 36, 37, 2, 15, 13, 20, 19, 11, 17, 5, 9, 30, 31, 39, 42, 43, 47, 48, 49, 40, 12, 23, 41, 27, 18, 16, 26, 34, 35]

Coverage : [(0, -1), (1, -1), (2, 262144), (3, -1), (4, -1), (5, 134217728), (6, -1), (7, -1), (8, -1), (9, 1048576), (10, -1), (11, 8388608), (12, 16777216), (13, 131072), (14, -1), (15, 278528), (16, 536870912), (17, 4194304), (18, 268435456), (19, 2097152), (20, 65536), (21, -1), (22, -1), (23, 134217728), (24, -1), (25, 1048576), (26, 1073741824), (27, 536870912), (28, -1), (29, -1), (30, 1048576), (31, 16384), (32, -1), (33, -1), (34, 2097152), (35, 16384), (36, 1048576), (37, 67108864), (38, -1), (39, 16384), (40, 134217728), (41, 134217728), (42, 524288), (43, 524288), (44, -1), (45, -1), (46, -1), (47, 67108864), (48, 16777216), (49, 67108864), (50, -1), (51, -1), (52, -1)]

Decide 26 with phase True at level 5

After decision at level 5
 pending : [25, 36, 37, 2, 15, 13, 20, 19, 11, 17, 5, 9, 30, 31, 39, 42, 43, 47, 48, 49, 40, 12, 23, 41, 27, 18, 16, 34, 35]
 solution : [7, 4, 28, 26]


New level: 6
 pending : [25, 36, 37, 2, 15, 13, 20, 19, 11, 17, 5, 9, 30, 31, 39, 42, 43, 47, 48, 49, 40, 12, 23, 41, 27, 18, 16, 34, 35]
 solution : [7, 4, 28, 26]


Before reduction : 
 pending  : [25, 36, 37, 2, 15, 13, 20, 19, 11, 17, 5, 9, 30, 31, 39, 42, 43, 47, 48, 49, 40, 12, 23, 41, 27, 18, 16, 34, 35]
 solution : [7, 4, 28, 26]

Essensial at level 6 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 262144), (3, -1), (4, -1), (5, 134217728), (6, -1), (7, -1), (8, -1), (9, 1048576), (10, -1), (11, 8388608), (12, 16777216), (13, 131072), (14, -1), (15, 278528), (16, 536870912), (17, 4194304), (18, 268435456), (19, 2097152), (20, 65536), (21, -1), (22, -1), (23, 134217728), (24, -1), (25, 1048576), (26, 1073741824), (27, 536870912), (28, -1), (29, -1), (30, 1048576), (31, 16384), (32, -1), (33, -1), (34, 2097152), (35, 16384), (36, 1048576), (37, 67108864), (38, -1), (39, 16384), (40, 134217728), (41, 134217728), (42, 524288), (43, 524288), (44, -1), (45, -1), (46, -1), (47, 67108864), (48, 16777216), (49, 67108864), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 0), (3, -1), (4, -1), (5, 134217728), (6, -1), (7, -1), (8, -1), (9, 262144), (10, -1), (11, 0), (12, 0), (13, 0), (14, -1), (15, 0), (16, 0), (17, 0), (18, 0), (19, 0), (20, 0), (21, -1), (22, -1), (23, 134217728), (24, -1), (25, 0), (26, -1), (27, 536870912), (28, -1), (29, -1), (30, 524288), (31, 4096), (32, -1), (33, -1), (34, 2097152), (35, 4096), (36, 0), (37, 2048), (38, -1), (39, 2048), (40, 67108864), (41, 2048), (42, 131072), (43, 131072), (44, -1), (45, -1), (46, -1), (47, 33554432), (48, 4194304), (49, 16777216), (50, -1), (51, -1), (52, -1)]

Covered at level 6 : {2, 36, 11, 12, 13, 15, 16, 17, 18, 19, 20, 25}

After reduction : 
 pending  : [37, 5, 9, 30, 31, 39, 42, 43, 47, 48, 49, 40, 23, 41, 27, 34, 35]
 solution : [7, 4, 28, 26]


Before reduction : 
 pending  : [37, 5, 9, 30, 31, 39, 42, 43, 47, 48, 49, 40, 23, 41, 27, 34, 35]
 solution : [7, 4, 28, 26]

Essensial at level 6 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 0), (3, -1), (4, -1), (5, 134217728), (6, -1), (7, -1), (8, -1), (9, 262144), (10, -1), (11, 0), (12, 0), (13, 0), (14, -1), (15, 0), (16, 0), (17, 0), (18, 0), (19, 0), (20, 0), (21, -1), (22, -1), (23, 134217728), (24, -1), (25, 0), (26, -1), (27, 536870912), (28, -1), (29, -1), (30, 524288), (31, 4096), (32, -1), (33, -1), (34, 2097152), (35, 4096), (36, 0), (37, 2048), (38, -1), (39, 2048), (40, 67108864), (41, 2048), (42, 131072), (43, 131072), (44, -1), (45, -1), (46, -1), (47, 33554432), (48, 4194304), (49, 16777216), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 134217728), (6, -1), (7, -1), (8, -1), (9, 262144), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, 134217728), (24, -1), (25, -1), (26, -1), (27, 536870912), (28, -1), (29, -1), (30, 524288), (31, 4096), (32, -1), (33, -1), (34, 2097152), (35, 4096), (36, -1), (37, 2048), (38, -1), (39, 2048), (40, 67108864), (41, 2048), (42, 131072), (43, 131072), (44, -1), (45, -1), (46, -1), (47, 33554432), (48, 4194304), (49, 16777216), (50, -1), (51, -1), (52, -1)]

Covered at level 6 : set()

After reduction : 
 pending  : [37, 5, 9, 30, 31, 39, 42, 43, 47, 48, 49, 40, 23, 41, 27, 34, 35]
 solution : [7, 4, 28, 26]


Solution : [7, 4, 28, 26] has cost 19.


Before backtrack at level 6
 pending : [37, 5, 9, 30, 31, 39, 42, 43, 47, 48, 49, 40, 23, 41, 27, 34, 35]
 solution : [7, 4, 28, 26]

After backtrack at level 6
 pending : [37, 5, 9, 30, 31, 39, 42, 43, 47, 48, 49, 40, 23, 41, 27, 34, 35, 25, 36, 2, 15, 13, 20, 19, 11, 17, 12, 18, 16]
 solution : [7, 4, 28, 26]


Invert decision for 26 at level 5


New level: 6
 pending : [37, 5, 9, 30, 31, 39, 42, 43, 47, 48, 49, 40, 23, 41, 27, 34, 35, 25, 36, 2, 15, 13, 20, 19, 11, 17, 12, 18, 16]
 solution : [7, 4, 28]


Before reduction : 
 pending  : [37, 5, 9, 30, 31, 39, 42, 43, 47, 48, 49, 40, 23, 41, 27, 34, 35, 25, 36, 2, 15, 13, 20, 19, 11, 17, 12, 18, 16]
 solution : [7, 4, 28]

Essensial at level 6 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 134217728), (6, -1), (7, -1), (8, -1), (9, 262144), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, 134217728), (24, -1), (25, -1), (26, -1), (27, 536870912), (28, -1), (29, -1), (30, 524288), (31, 4096), (32, -1), (33, -1), (34, 2097152), (35, 4096), (36, -1), (37, 2048), (38, -1), (39, 2048), (40, 67108864), (41, 2048), (42, 131072), (43, 131072), (44, -1), (45, -1), (46, -1), (47, 33554432), (48, 4194304), (49, 16777216), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 262144), (3, -1), (4, -1), (5, 134217728), (6, -1), (7, -1), (8, -1), (9, 1048576), (10, -1), (11, 8388608), (12, 16777216), (13, 131072), (14, -1), (15, 278528), (16, 536870912), (17, 4194304), (18, 268435456), (19, 2097152), (20, 65536), (21, -1), (22, -1), (23, 134217728), (24, -1), (25, 1048576), (26, -1), (27, 536870912), (28, -1), (29, -1), (30, 1048576), (31, 16384), (32, -1), (33, -1), (34, 2097152), (35, 16384), (36, 1048576), (37, 67108864), (38, -1), (39, 16384), (40, 134217728), (41, 134217728), (42, 524288), (43, 524288), (44, -1), (45, -1), (46, -1), (47, 67108864), (48, 16777216), (49, 67108864), (50, -1), (51, -1), (52, -1)]

Covered at level 6 : set()

After reduction : 
 pending  : [37, 5, 9, 30, 31, 39, 42, 43, 47, 48, 49, 40, 23, 41, 27, 34, 35, 25, 36, 2, 15, 13, 20, 19, 11, 17, 12, 18, 16]
 solution : [7, 4, 28]


Solution : [7, 4, 28] has cost 15.


Decide in level 6 among pending : [37, 5, 9, 30, 31, 39, 42, 43, 47, 48, 49, 40, 23, 41, 27, 34, 35, 25, 36, 2, 15, 13, 20, 19, 11, 17, 12, 18, 16]

Coverage : [(0, -1), (1, -1), (2, 262144), (3, -1), (4, -1), (5, 134217728), (6, -1), (7, -1), (8, -1), (9, 1048576), (10, -1), (11, 8388608), (12, 16777216), (13, 131072), (14, -1), (15, 278528), (16, 536870912), (17, 4194304), (18, 268435456), (19, 2097152), (20, 65536), (21, -1), (22, -1), (23, 134217728), (24, -1), (25, 1048576), (26, -1), (27, 536870912), (28, -1), (29, -1), (30, 1048576), (31, 16384), (32, -1), (33, -1), (34, 2097152), (35, 16384), (36, 1048576), (37, 67108864), (38, -1), (39, 16384), (40, 134217728), (41, 134217728), (42, 524288), (43, 524288), (44, -1), (45, -1), (46, -1), (47, 67108864), (48, 16777216), (49, 67108864), (50, -1), (51, -1), (52, -1)]

Decide 27 with phase True at level 6

After decision at level 6
 pending : [37, 5, 9, 30, 31, 39, 42, 43, 47, 48, 49, 40, 23, 41, 34, 35, 25, 36, 2, 15, 13, 20, 19, 11, 17, 12, 18, 16]
 solution : [7, 4, 28, 27]


New level: 7
 pending : [37, 5, 9, 30, 31, 39, 42, 43, 47, 48, 49, 40, 23, 41, 34, 35, 25, 36, 2, 15, 13, 20, 19, 11, 17, 12, 18, 16]
 solution : [7, 4, 28, 27]


Before reduction : 
 pending  : [37, 5, 9, 30, 31, 39, 42, 43, 47, 48, 49, 40, 23, 41, 34, 35, 25, 36, 2, 15, 13, 20, 19, 11, 17, 12, 18, 16]
 solution : [7, 4, 28, 27]

Essensial at level 7 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 262144), (3, -1), (4, -1), (5, 134217728), (6, -1), (7, -1), (8, -1), (9, 1048576), (10, -1), (11, 8388608), (12, 16777216), (13, 131072), (14, -1), (15, 278528), (16, 536870912), (17, 4194304), (18, 268435456), (19, 2097152), (20, 65536), (21, -1), (22, -1), (23, 134217728), (24, -1), (25, 1048576), (26, -1), (27, 536870912), (28, -1), (29, -1), (30, 1048576), (31, 16384), (32, -1), (33, -1), (34, 2097152), (35, 16384), (36, 1048576), (37, 67108864), (38, -1), (39, 16384), (40, 134217728), (41, 134217728), (42, 524288), (43, 524288), (44, -1), (45, -1), (46, -1), (47, 67108864), (48, 16777216), (49, 67108864), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 262144), (3, -1), (4, -1), (5, 33554432), (6, -1), (7, -1), (8, -1), (9, 262144), (10, -1), (11, 8388608), (12, 16777216), (13, 131072), (14, -1), (15, 278528), (16, 536870912), (17, 4194304), (18, 268435456), (19, 2097152), (20, 65536), (21, -1), (22, -1), (23, 33554432), (24, -1), (25, 1048576), (26, -1), (27, -1), (28, -1), (29, -1), (30, 262144), (31, 4096), (32, -1), (33, -1), (34, 0), (35, 0), (36, 1048576), (37, 33554432), (38, -1), (39, 4096), (40, 67108864), (41, 512), (42, 131072), (43, 131072), (44, -1), (45, -1), (46, -1), (47, 16777216), (48, 4194304), (49, 33554432), (50, -1), (51, -1), (52, -1)]

Covered at level 7 : {34, 35}

After reduction : 
 pending  : [37, 5, 9, 30, 31, 39, 42, 43, 47, 48, 49, 40, 23, 41, 25, 36, 2, 15, 13, 20, 19, 11, 17, 12, 18, 16]
 solution : [7, 4, 28, 27]


Before reduction : 
 pending  : [37, 5, 9, 30, 31, 39, 42, 43, 47, 48, 49, 40, 23, 41, 25, 36, 2, 15, 13, 20, 19, 11, 17, 12, 18, 16]
 solution : [7, 4, 28, 27]

Essensial at level 7 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 262144), (3, -1), (4, -1), (5, 33554432), (6, -1), (7, -1), (8, -1), (9, 262144), (10, -1), (11, 8388608), (12, 16777216), (13, 131072), (14, -1), (15, 278528), (16, 536870912), (17, 4194304), (18, 268435456), (19, 2097152), (20, 65536), (21, -1), (22, -1), (23, 33554432), (24, -1), (25, 1048576), (26, -1), (27, -1), (28, -1), (29, -1), (30, 262144), (31, 4096), (32, -1), (33, -1), (34, 0), (35, 0), (36, 1048576), (37, 33554432), (38, -1), (39, 4096), (40, 67108864), (41, 512), (42, 131072), (43, 131072), (44, -1), (45, -1), (46, -1), (47, 16777216), (48, 4194304), (49, 33554432), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 262144), (3, -1), (4, -1), (5, 33554432), (6, -1), (7, -1), (8, -1), (9, 262144), (10, -1), (11, 8388608), (12, 16777216), (13, 131072), (14, -1), (15, 278528), (16, 536870912), (17, 4194304), (18, 268435456), (19, 2097152), (20, 65536), (21, -1), (22, -1), (23, 33554432), (24, -1), (25, 1048576), (26, -1), (27, -1), (28, -1), (29, -1), (30, 262144), (31, 4096), (32, -1), (33, -1), (34, -1), (35, -1), (36, 1048576), (37, 33554432), (38, -1), (39, 4096), (40, 67108864), (41, 512), (42, 131072), (43, 131072), (44, -1), (45, -1), (46, -1), (47, 16777216), (48, 4194304), (49, 33554432), (50, -1), (51, -1), (52, -1)]

Covered at level 7 : set()

After reduction : 
 pending  : [37, 5, 9, 30, 31, 39, 42, 43, 47, 48, 49, 40, 23, 41, 25, 36, 2, 15, 13, 20, 19, 11, 17, 12, 18, 16]
 solution : [7, 4, 28, 27]


Solution : [7, 4, 28, 27] has cost 22.


Before backtrack at level 7
 pending : [37, 5, 9, 30, 31, 39, 42, 43, 47, 48, 49, 40, 23, 41, 25, 36, 2, 15, 13, 20, 19, 11, 17, 12, 18, 16]
 solution : [7, 4, 28, 27]

After backtrack at level 7
 pending : [37, 5, 9, 30, 31, 39, 42, 43, 47, 48, 49, 40, 23, 41, 25, 36, 2, 15, 13, 20, 19, 11, 17, 12, 18, 16, 34, 35]
 solution : [7, 4, 28, 27]


Invert decision for 27 at level 6


New level: 7
 pending : [37, 5, 9, 30, 31, 39, 42, 43, 47, 48, 49, 40, 23, 41, 25, 36, 2, 15, 13, 20, 19, 11, 17, 12, 18, 16, 34, 35]
 solution : [7, 4, 28]


Before reduction : 
 pending  : [37, 5, 9, 30, 31, 39, 42, 43, 47, 48, 49, 40, 23, 41, 25, 36, 2, 15, 13, 20, 19, 11, 17, 12, 18, 16, 34, 35]
 solution : [7, 4, 28]

Essensial at level 7 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 262144), (3, -1), (4, -1), (5, 33554432), (6, -1), (7, -1), (8, -1), (9, 262144), (10, -1), (11, 8388608), (12, 16777216), (13, 131072), (14, -1), (15, 278528), (16, 536870912), (17, 4194304), (18, 268435456), (19, 2097152), (20, 65536), (21, -1), (22, -1), (23, 33554432), (24, -1), (25, 1048576), (26, -1), (27, -1), (28, -1), (29, -1), (30, 262144), (31, 4096), (32, -1), (33, -1), (34, -1), (35, -1), (36, 1048576), (37, 33554432), (38, -1), (39, 4096), (40, 67108864), (41, 512), (42, 131072), (43, 131072), (44, -1), (45, -1), (46, -1), (47, 16777216), (48, 4194304), (49, 33554432), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 262144), (3, -1), (4, -1), (5, 134217728), (6, -1), (7, -1), (8, -1), (9, 1048576), (10, -1), (11, 8388608), (12, 16777216), (13, 131072), (14, -1), (15, 278528), (16, 536870912), (17, 4194304), (18, 268435456), (19, 2097152), (20, 65536), (21, -1), (22, -1), (23, 134217728), (24, -1), (25, 1048576), (26, -1), (27, -1), (28, -1), (29, -1), (30, 1048576), (31, 16384), (32, -1), (33, -1), (34, 2097152), (35, 16384), (36, 1048576), (37, 67108864), (38, -1), (39, 16384), (40, 134217728), (41, 134217728), (42, 524288), (43, 524288), (44, -1), (45, -1), (46, -1), (47, 67108864), (48, 16777216), (49, 67108864), (50, -1), (51, -1), (52, -1)]

Covered at level 7 : set()

After reduction : 
 pending  : [37, 5, 9, 30, 31, 39, 42, 43, 47, 48, 49, 40, 23, 41, 25, 36, 2, 15, 13, 20, 19, 11, 17, 12, 18, 16, 34, 35]
 solution : [7, 4, 28]


Solution : [7, 4, 28] has cost 15.


Decide in level 7 among pending : [37, 5, 9, 30, 31, 39, 42, 43, 47, 48, 49, 40, 23, 41, 25, 36, 2, 15, 13, 20, 19, 11, 17, 12, 18, 16, 34, 35]

Coverage : [(0, -1), (1, -1), (2, 262144), (3, -1), (4, -1), (5, 134217728), (6, -1), (7, -1), (8, -1), (9, 1048576), (10, -1), (11, 8388608), (12, 16777216), (13, 131072), (14, -1), (15, 278528), (16, 536870912), (17, 4194304), (18, 268435456), (19, 2097152), (20, 65536), (21, -1), (22, -1), (23, 134217728), (24, -1), (25, 1048576), (26, -1), (27, -1), (28, -1), (29, -1), (30, 1048576), (31, 16384), (32, -1), (33, -1), (34, 2097152), (35, 16384), (36, 1048576), (37, 67108864), (38, -1), (39, 16384), (40, 134217728), (41, 134217728), (42, 524288), (43, 524288), (44, -1), (45, -1), (46, -1), (47, 67108864), (48, 16777216), (49, 67108864), (50, -1), (51, -1), (52, -1)]

Decide 16 with phase True at level 7

After decision at level 7
 pending : [37, 5, 9, 30, 31, 39, 42, 43, 47, 48, 49, 40, 23, 41, 25, 36, 2, 15, 13, 20, 19, 11, 17, 12, 18, 34, 35]
 solution : [7, 4, 28, 16]


New level: 8
 pending : [37, 5, 9, 30, 31, 39, 42, 43, 47, 48, 49, 40, 23, 41, 25, 36, 2, 15, 13, 20, 19, 11, 17, 12, 18, 34, 35]
 solution : [7, 4, 28, 16]


Before reduction : 
 pending  : [37, 5, 9, 30, 31, 39, 42, 43, 47, 48, 49, 40, 23, 41, 25, 36, 2, 15, 13, 20, 19, 11, 17, 12, 18, 34, 35]
 solution : [7, 4, 28, 16]

Essensial at level 8 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 262144), (3, -1), (4, -1), (5, 134217728), (6, -1), (7, -1), (8, -1), (9, 1048576), (10, -1), (11, 8388608), (12, 16777216), (13, 131072), (14, -1), (15, 278528), (16, 536870912), (17, 4194304), (18, 268435456), (19, 2097152), (20, 65536), (21, -1), (22, -1), (23, 134217728), (24, -1), (25, 1048576), (26, -1), (27, -1), (28, -1), (29, -1), (30, 1048576), (31, 16384), (32, -1), (33, -1), (34, 2097152), (35, 16384), (36, 1048576), (37, 67108864), (38, -1), (39, 16384), (40, 134217728), (41, 134217728), (42, 524288), (43, 524288), (44, -1), (45, -1), (46, -1), (47, 67108864), (48, 16777216), (49, 67108864), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 0), (3, -1), (4, -1), (5, 134217728), (6, -1), (7, -1), (8, -1), (9, 262144), (10, -1), (11, 0), (12, 0), (13, 0), (14, -1), (15, 0), (16, -1), (17, 0), (18, 0), (19, 0), (20, 0), (21, -1), (22, -1), (23, 134217728), (24, -1), (25, 0), (26, -1), (27, -1), (28, -1), (29, -1), (30, 524288), (31, 4096), (32, -1), (33, -1), (34, 2097152), (35, 4096), (36, 0), (37, 2048), (38, -1), (39, 2048), (40, 67108864), (41, 2048), (42, 131072), (43, 131072), (44, -1), (45, -1), (46, -1), (47, 33554432), (48, 4194304), (49, 67108864), (50, -1), (51, -1), (52, -1)]

Covered at level 8 : {2, 36, 11, 12, 13, 15, 17, 18, 19, 20, 25}

After reduction : 
 pending  : [37, 5, 9, 30, 31, 39, 42, 43, 47, 48, 49, 40, 23, 41, 34, 35]
 solution : [7, 4, 28, 16]


Before reduction : 
 pending  : [37, 5, 9, 30, 31, 39, 42, 43, 47, 48, 49, 40, 23, 41, 34, 35]
 solution : [7, 4, 28, 16]

Essensial at level 8 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 0), (3, -1), (4, -1), (5, 134217728), (6, -1), (7, -1), (8, -1), (9, 262144), (10, -1), (11, 0), (12, 0), (13, 0), (14, -1), (15, 0), (16, -1), (17, 0), (18, 0), (19, 0), (20, 0), (21, -1), (22, -1), (23, 134217728), (24, -1), (25, 0), (26, -1), (27, -1), (28, -1), (29, -1), (30, 524288), (31, 4096), (32, -1), (33, -1), (34, 2097152), (35, 4096), (36, 0), (37, 2048), (38, -1), (39, 2048), (40, 67108864), (41, 2048), (42, 131072), (43, 131072), (44, -1), (45, -1), (46, -1), (47, 33554432), (48, 4194304), (49, 67108864), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 134217728), (6, -1), (7, -1), (8, -1), (9, 262144), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, 134217728), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, 524288), (31, 4096), (32, -1), (33, -1), (34, 2097152), (35, 4096), (36, -1), (37, 2048), (38, -1), (39, 2048), (40, 67108864), (41, 2048), (42, 131072), (43, 131072), (44, -1), (45, -1), (46, -1), (47, 33554432), (48, 4194304), (49, 67108864), (50, -1), (51, -1), (52, -1)]

Covered at level 8 : set()

After reduction : 
 pending  : [37, 5, 9, 30, 31, 39, 42, 43, 47, 48, 49, 40, 23, 41, 34, 35]
 solution : [7, 4, 28, 16]


Solution : [7, 4, 28, 16] has cost 22.


Before backtrack at level 8
 pending : [37, 5, 9, 30, 31, 39, 42, 43, 47, 48, 49, 40, 23, 41, 34, 35]
 solution : [7, 4, 28, 16]

After backtrack at level 8
 pending : [37, 5, 9, 30, 31, 39, 42, 43, 47, 48, 49, 40, 23, 41, 34, 35, 25, 36, 2, 15, 13, 20, 19, 11, 17, 12, 18]
 solution : [7, 4, 28, 16]


Invert decision for 16 at level 7


New level: 8
 pending : [37, 5, 9, 30, 31, 39, 42, 43, 47, 48, 49, 40, 23, 41, 34, 35, 25, 36, 2, 15, 13, 20, 19, 11, 17, 12, 18]
 solution : [7, 4, 28]


Before reduction : 
 pending  : [37, 5, 9, 30, 31, 39, 42, 43, 47, 48, 49, 40, 23, 41, 34, 35, 25, 36, 2, 15, 13, 20, 19, 11, 17, 12, 18]
 solution : [7, 4, 28]

Essensial at level 8 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 134217728), (6, -1), (7, -1), (8, -1), (9, 262144), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, 134217728), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, 524288), (31, 4096), (32, -1), (33, -1), (34, 2097152), (35, 4096), (36, -1), (37, 2048), (38, -1), (39, 2048), (40, 67108864), (41, 2048), (42, 131072), (43, 131072), (44, -1), (45, -1), (46, -1), (47, 33554432), (48, 4194304), (49, 67108864), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 262144), (3, -1), (4, -1), (5, 134217728), (6, -1), (7, -1), (8, -1), (9, 1048576), (10, -1), (11, 8388608), (12, 16777216), (13, 131072), (14, -1), (15, 278528), (16, -1), (17, 4194304), (18, 268435456), (19, 2097152), (20, 65536), (21, -1), (22, -1), (23, 134217728), (24, -1), (25, 1048576), (26, -1), (27, -1), (28, -1), (29, -1), (30, 1048576), (31, 16384), (32, -1), (33, -1), (34, 2097152), (35, 16384), (36, 1048576), (37, 67108864), (38, -1), (39, 16384), (40, 134217728), (41, 134217728), (42, 524288), (43, 524288), (44, -1), (45, -1), (46, -1), (47, 67108864), (48, 16777216), (49, 67108864), (50, -1), (51, -1), (52, -1)]

Covered at level 8 : set()

After reduction : 
 pending  : [37, 5, 9, 30, 31, 39, 42, 43, 47, 48, 49, 40, 23, 41, 34, 35, 25, 36, 2, 15, 13, 20, 19, 11, 17, 12, 18]
 solution : [7, 4, 28]


Solution : [7, 4, 28] has cost 15.


Decide in level 8 among pending : [37, 5, 9, 30, 31, 39, 42, 43, 47, 48, 49, 40, 23, 41, 34, 35, 25, 36, 2, 15, 13, 20, 19, 11, 17, 12, 18]

Coverage : [(0, -1), (1, -1), (2, 262144), (3, -1), (4, -1), (5, 134217728), (6, -1), (7, -1), (8, -1), (9, 1048576), (10, -1), (11, 8388608), (12, 16777216), (13, 131072), (14, -1), (15, 278528), (16, -1), (17, 4194304), (18, 268435456), (19, 2097152), (20, 65536), (21, -1), (22, -1), (23, 134217728), (24, -1), (25, 1048576), (26, -1), (27, -1), (28, -1), (29, -1), (30, 1048576), (31, 16384), (32, -1), (33, -1), (34, 2097152), (35, 16384), (36, 1048576), (37, 67108864), (38, -1), (39, 16384), (40, 134217728), (41, 134217728), (42, 524288), (43, 524288), (44, -1), (45, -1), (46, -1), (47, 67108864), (48, 16777216), (49, 67108864), (50, -1), (51, -1), (52, -1)]

Decide 18 with phase True at level 8

After decision at level 8
 pending : [37, 5, 9, 30, 31, 39, 42, 43, 47, 48, 49, 40, 23, 41, 34, 35, 25, 36, 2, 15, 13, 20, 19, 11, 17, 12]
 solution : [7, 4, 28, 18]


New level: 9
 pending : [37, 5, 9, 30, 31, 39, 42, 43, 47, 48, 49, 40, 23, 41, 34, 35, 25, 36, 2, 15, 13, 20, 19, 11, 17, 12]
 solution : [7, 4, 28, 18]


Before reduction : 
 pending  : [37, 5, 9, 30, 31, 39, 42, 43, 47, 48, 49, 40, 23, 41, 34, 35, 25, 36, 2, 15, 13, 20, 19, 11, 17, 12]
 solution : [7, 4, 28, 18]

Essensial at level 9 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 262144), (3, -1), (4, -1), (5, 134217728), (6, -1), (7, -1), (8, -1), (9, 1048576), (10, -1), (11, 8388608), (12, 16777216), (13, 131072), (14, -1), (15, 278528), (16, -1), (17, 4194304), (18, 268435456), (19, 2097152), (20, 65536), (21, -1), (22, -1), (23, 134217728), (24, -1), (25, 1048576), (26, -1), (27, -1), (28, -1), (29, -1), (30, 1048576), (31, 16384), (32, -1), (33, -1), (34, 2097152), (35, 16384), (36, 1048576), (37, 67108864), (38, -1), (39, 16384), (40, 134217728), (41, 134217728), (42, 524288), (43, 524288), (44, -1), (45, -1), (46, -1), (47, 67108864), (48, 16777216), (49, 67108864), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 0), (3, -1), (4, -1), (5, 134217728), (6, -1), (7, -1), (8, -1), (9, 262144), (10, -1), (11, 0), (12, 0), (13, 0), (14, -1), (15, 0), (16, -1), (17, 0), (18, -1), (19, 0), (20, 0), (21, -1), (22, -1), (23, 134217728), (24, -1), (25, 0), (26, -1), (27, -1), (28, -1), (29, -1), (30, 524288), (31, 4096), (32, -1), (33, -1), (34, 2097152), (35, 4096), (36, 0), (37, 2048), (38, -1), (39, 2048), (40, 67108864), (41, 2048), (42, 262144), (43, 262144), (44, -1), (45, -1), (46, -1), (47, 33554432), (48, 4194304), (49, 67108864), (50, -1), (51, -1), (52, -1)]

Covered at level 9 : {2, 36, 11, 12, 13, 15, 17, 19, 20, 25}

After reduction : 
 pending  : [37, 5, 9, 30, 31, 39, 42, 43, 47, 48, 49, 40, 23, 41, 34, 35]
 solution : [7, 4, 28, 18]


Before reduction : 
 pending  : [37, 5, 9, 30, 31, 39, 42, 43, 47, 48, 49, 40, 23, 41, 34, 35]
 solution : [7, 4, 28, 18]

Essensial at level 9 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 0), (3, -1), (4, -1), (5, 134217728), (6, -1), (7, -1), (8, -1), (9, 262144), (10, -1), (11, 0), (12, 0), (13, 0), (14, -1), (15, 0), (16, -1), (17, 0), (18, -1), (19, 0), (20, 0), (21, -1), (22, -1), (23, 134217728), (24, -1), (25, 0), (26, -1), (27, -1), (28, -1), (29, -1), (30, 524288), (31, 4096), (32, -1), (33, -1), (34, 2097152), (35, 4096), (36, 0), (37, 2048), (38, -1), (39, 2048), (40, 67108864), (41, 2048), (42, 262144), (43, 262144), (44, -1), (45, -1), (46, -1), (47, 33554432), (48, 4194304), (49, 67108864), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 134217728), (6, -1), (7, -1), (8, -1), (9, 262144), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, 134217728), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, 524288), (31, 4096), (32, -1), (33, -1), (34, 2097152), (35, 4096), (36, -1), (37, 2048), (38, -1), (39, 2048), (40, 67108864), (41, 2048), (42, 262144), (43, 262144), (44, -1), (45, -1), (46, -1), (47, 33554432), (48, 4194304), (49, 67108864), (50, -1), (51, -1), (52, -1)]

Covered at level 9 : set()

After reduction : 
 pending  : [37, 5, 9, 30, 31, 39, 42, 43, 47, 48, 49, 40, 23, 41, 34, 35]
 solution : [7, 4, 28, 18]


Solution : [7, 4, 28, 18] has cost 22.


Before backtrack at level 9
 pending : [37, 5, 9, 30, 31, 39, 42, 43, 47, 48, 49, 40, 23, 41, 34, 35]
 solution : [7, 4, 28, 18]

After backtrack at level 9
 pending : [37, 5, 9, 30, 31, 39, 42, 43, 47, 48, 49, 40, 23, 41, 34, 35, 25, 36, 2, 15, 13, 20, 19, 11, 17, 12]
 solution : [7, 4, 28, 18]


Invert decision for 18 at level 8


New level: 9
 pending : [37, 5, 9, 30, 31, 39, 42, 43, 47, 48, 49, 40, 23, 41, 34, 35, 25, 36, 2, 15, 13, 20, 19, 11, 17, 12]
 solution : [7, 4, 28]


Before reduction : 
 pending  : [37, 5, 9, 30, 31, 39, 42, 43, 47, 48, 49, 40, 23, 41, 34, 35, 25, 36, 2, 15, 13, 20, 19, 11, 17, 12]
 solution : [7, 4, 28]

Essensial at level 9 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 134217728), (6, -1), (7, -1), (8, -1), (9, 262144), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, 134217728), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, 524288), (31, 4096), (32, -1), (33, -1), (34, 2097152), (35, 4096), (36, -1), (37, 2048), (38, -1), (39, 2048), (40, 67108864), (41, 2048), (42, 262144), (43, 262144), (44, -1), (45, -1), (46, -1), (47, 33554432), (48, 4194304), (49, 67108864), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 262144), (3, -1), (4, -1), (5, 134217728), (6, -1), (7, -1), (8, -1), (9, 1048576), (10, -1), (11, 8388608), (12, 16777216), (13, 131072), (14, -1), (15, 278528), (16, -1), (17, 4194304), (18, -1), (19, 2097152), (20, 65536), (21, -1), (22, -1), (23, 134217728), (24, -1), (25, 1048576), (26, -1), (27, -1), (28, -1), (29, -1), (30, 1048576), (31, 16384), (32, -1), (33, -1), (34, 2097152), (35, 16384), (36, 1048576), (37, 67108864), (38, -1), (39, 16384), (40, 134217728), (41, 134217728), (42, 524288), (43, 524288), (44, -1), (45, -1), (46, -1), (47, 67108864), (48, 16777216), (49, 67108864), (50, -1), (51, -1), (52, -1)]

Covered at level 9 : set()

After reduction : 
 pending  : [37, 5, 9, 30, 31, 39, 42, 43, 47, 48, 49, 40, 23, 41, 34, 35, 25, 36, 2, 15, 13, 20, 19, 11, 17, 12]
 solution : [7, 4, 28]


Solution : [7, 4, 28] has cost 15.


Decide in level 9 among pending : [37, 5, 9, 30, 31, 39, 42, 43, 47, 48, 49, 40, 23, 41, 34, 35, 25, 36, 2, 15, 13, 20, 19, 11, 17, 12]

Coverage : [(0, -1), (1, -1), (2, 262144), (3, -1), (4, -1), (5, 134217728), (6, -1), (7, -1), (8, -1), (9, 1048576), (10, -1), (11, 8388608), (12, 16777216), (13, 131072), (14, -1), (15, 278528), (16, -1), (17, 4194304), (18, -1), (19, 2097152), (20, 65536), (21, -1), (22, -1), (23, 134217728), (24, -1), (25, 1048576), (26, -1), (27, -1), (28, -1), (29, -1), (30, 1048576), (31, 16384), (32, -1), (33, -1), (34, 2097152), (35, 16384), (36, 1048576), (37, 67108864), (38, -1), (39, 16384), (40, 134217728), (41, 134217728), (42, 524288), (43, 524288), (44, -1), (45, -1), (46, -1), (47, 67108864), (48, 16777216), (49, 67108864), (50, -1), (51, -1), (52, -1)]

Decide 5 with phase True at level 9

After decision at level 9
 pending : [37, 9, 30, 31, 39, 42, 43, 47, 48, 49, 40, 23, 41, 34, 35, 25, 36, 2, 15, 13, 20, 19, 11, 17, 12]
 solution : [7, 4, 28, 5]


New level: 10
 pending : [37, 9, 30, 31, 39, 42, 43, 47, 48, 49, 40, 23, 41, 34, 35, 25, 36, 2, 15, 13, 20, 19, 11, 17, 12]
 solution : [7, 4, 28, 5]


Before reduction : 
 pending  : [37, 9, 30, 31, 39, 42, 43, 47, 48, 49, 40, 23, 41, 34, 35, 25, 36, 2, 15, 13, 20, 19, 11, 17, 12]
 solution : [7, 4, 28, 5]

Essensial at level 10 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 262144), (3, -1), (4, -1), (5, 134217728), (6, -1), (7, -1), (8, -1), (9, 1048576), (10, -1), (11, 8388608), (12, 16777216), (13, 131072), (14, -1), (15, 278528), (16, -1), (17, 4194304), (18, -1), (19, 2097152), (20, 65536), (21, -1), (22, -1), (23, 134217728), (24, -1), (25, 1048576), (26, -1), (27, -1), (28, -1), (29, -1), (30, 1048576), (31, 16384), (32, -1), (33, -1), (34, 2097152), (35, 16384), (36, 1048576), (37, 67108864), (38, -1), (39, 16384), (40, 134217728), (41, 134217728), (42, 524288), (43, 524288), (44, -1), (45, -1), (46, -1), (47, 67108864), (48, 16777216), (49, 67108864), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 131072), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, 0), (10, -1), (11, 4194304), (12, 8388608), (13, 65536), (14, -1), (15, 135168), (16, -1), (17, 4194304), (18, -1), (19, 2097152), (20, 65536), (21, -1), (22, -1), (23, 0), (24, -1), (25, 524288), (26, -1), (27, -1), (28, -1), (29, -1), (30, 0), (31, 0), (32, -1), (33, -1), (34, 0), (35, 0), (36, 524288), (37, 32768), (38, -1), (39, 0), (40, 0), (41, 512), (42, 0), (43, 0), (44, -1), (45, -1), (46, -1), (47, 0), (48, 0), (49, 0), (50, -1), (51, -1), (52, -1)]

Covered at level 10 : {34, 35, 39, 40, 9, 42, 43, 47, 48, 49, 23, 30, 31}

After reduction : 
 pending  : [37, 41, 25, 36, 2, 15, 13, 20, 19, 11, 17, 12]
 solution : [7, 4, 28, 5]


Before reduction : 
 pending  : [37, 41, 25, 36, 2, 15, 13, 20, 19, 11, 17, 12]
 solution : [7, 4, 28, 5]

Essensial at level 10 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 131072), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, 0), (10, -1), (11, 4194304), (12, 8388608), (13, 65536), (14, -1), (15, 135168), (16, -1), (17, 4194304), (18, -1), (19, 2097152), (20, 65536), (21, -1), (22, -1), (23, 0), (24, -1), (25, 524288), (26, -1), (27, -1), (28, -1), (29, -1), (30, 0), (31, 0), (32, -1), (33, -1), (34, 0), (35, 0), (36, 524288), (37, 32768), (38, -1), (39, 0), (40, 0), (41, 512), (42, 0), (43, 0), (44, -1), (45, -1), (46, -1), (47, 0), (48, 0), (49, 0), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 131072), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, 4194304), (12, 8388608), (13, 65536), (14, -1), (15, 135168), (16, -1), (17, 4194304), (18, -1), (19, 2097152), (20, 65536), (21, -1), (22, -1), (23, -1), (24, -1), (25, 524288), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, 524288), (37, 32768), (38, -1), (39, -1), (40, -1), (41, 512), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 10 : set()

After reduction : 
 pending  : [37, 41, 25, 36, 2, 15, 13, 20, 19, 11, 17, 12]
 solution : [7, 4, 28, 5]


Solution : [7, 4, 28, 5] has cost 19.


Before backtrack at level 10
 pending : [37, 41, 25, 36, 2, 15, 13, 20, 19, 11, 17, 12]
 solution : [7, 4, 28, 5]

After backtrack at level 10
 pending : [37, 41, 25, 36, 2, 15, 13, 20, 19, 11, 17, 12, 9, 30, 31, 39, 42, 43, 47, 48, 49, 40, 23, 34, 35]
 solution : [7, 4, 28, 5]


Invert decision for 5 at level 9


New level: 10
 pending : [37, 41, 25, 36, 2, 15, 13, 20, 19, 11, 17, 12, 9, 30, 31, 39, 42, 43, 47, 48, 49, 40, 23, 34, 35]
 solution : [7, 4, 28]


Before reduction : 
 pending  : [37, 41, 25, 36, 2, 15, 13, 20, 19, 11, 17, 12, 9, 30, 31, 39, 42, 43, 47, 48, 49, 40, 23, 34, 35]
 solution : [7, 4, 28]

Essensial at level 10 : {23}

Before removed
 coverage : [(0, -1), (1, -1), (2, 131072), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, 4194304), (12, 8388608), (13, 65536), (14, -1), (15, 135168), (16, -1), (17, 4194304), (18, -1), (19, 2097152), (20, 65536), (21, -1), (22, -1), (23, -1), (24, -1), (25, 524288), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, 524288), (37, 32768), (38, -1), (39, -1), (40, -1), (41, 512), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 131072), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, 0), (10, -1), (11, 4194304), (12, 8388608), (13, 65536), (14, -1), (15, 135168), (16, -1), (17, 4194304), (18, -1), (19, 2097152), (20, 65536), (21, -1), (22, -1), (23, -1), (24, -1), (25, 524288), (26, -1), (27, -1), (28, -1), (29, -1), (30, 0), (31, 0), (32, -1), (33, -1), (34, 0), (35, 0), (36, 524288), (37, 262144), (38, -1), (39, 0), (40, 0), (41, 4096), (42, 0), (43, 0), (44, -1), (45, -1), (46, -1), (47, 0), (48, 0), (49, 0), (50, -1), (51, -1), (52, -1)]

Covered at level 10 : {34, 35, 39, 40, 9, 42, 43, 47, 48, 49, 30, 31}

After reduction : 
 pending  : [37, 41, 25, 36, 2, 15, 13, 20, 19, 11, 17, 12]
 solution : [7, 4, 28, 23]


Before reduction : 
 pending  : [37, 41, 25, 36, 2, 15, 13, 20, 19, 11, 17, 12]
 solution : [7, 4, 28, 23]

Essensial at level 10 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 131072), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, 0), (10, -1), (11, 4194304), (12, 8388608), (13, 65536), (14, -1), (15, 135168), (16, -1), (17, 4194304), (18, -1), (19, 2097152), (20, 65536), (21, -1), (22, -1), (23, -1), (24, -1), (25, 524288), (26, -1), (27, -1), (28, -1), (29, -1), (30, 0), (31, 0), (32, -1), (33, -1), (34, 0), (35, 0), (36, 524288), (37, 262144), (38, -1), (39, 0), (40, 0), (41, 4096), (42, 0), (43, 0), (44, -1), (45, -1), (46, -1), (47, 0), (48, 0), (49, 0), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 131072), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, 4194304), (12, 8388608), (13, 65536), (14, -1), (15, 135168), (16, -1), (17, 4194304), (18, -1), (19, 2097152), (20, 65536), (21, -1), (22, -1), (23, -1), (24, -1), (25, 524288), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, 524288), (37, 262144), (38, -1), (39, -1), (40, -1), (41, 512), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 10 : set()

After reduction : 
 pending  : [37, 41, 25, 36, 2, 15, 13, 20, 19, 11, 17, 12]
 solution : [7, 4, 28, 23]


Solution : [7, 4, 28, 23] has cost 22.


Before backtrack at level 10
 pending : [37, 41, 25, 36, 2, 15, 13, 20, 19, 11, 17, 12]
 solution : [7, 4, 28, 23]

After backtrack at level 10
 pending : [37, 41, 25, 36, 2, 15, 13, 20, 19, 11, 17, 12, 23, 9, 30, 31, 39, 42, 43, 47, 48, 49, 40, 34, 35]
 solution : [7, 4, 28]


Before backtrack at level 9
 pending : [37, 41, 25, 36, 2, 15, 13, 20, 19, 11, 17, 12, 23, 9, 30, 31, 39, 42, 43, 47, 48, 49, 40, 34, 35]
 solution : [7, 4, 28]

After backtrack at level 9
 pending : [37, 41, 25, 36, 2, 15, 13, 20, 19, 11, 17, 12, 23, 9, 30, 31, 39, 42, 43, 47, 48, 49, 40, 34, 35, 5]
 solution : [7, 4, 28]


Before backtrack at level 8
 pending : [37, 41, 25, 36, 2, 15, 13, 20, 19, 11, 17, 12, 23, 9, 30, 31, 39, 42, 43, 47, 48, 49, 40, 34, 35, 5]
 solution : [7, 4, 28]

After backtrack at level 8
 pending : [37, 41, 25, 36, 2, 15, 13, 20, 19, 11, 17, 12, 23, 9, 30, 31, 39, 42, 43, 47, 48, 49, 40, 34, 35, 5, 18]
 solution : [7, 4, 28]


Before backtrack at level 7
 pending : [37, 41, 25, 36, 2, 15, 13, 20, 19, 11, 17, 12, 23, 9, 30, 31, 39, 42, 43, 47, 48, 49, 40, 34, 35, 5, 18]
 solution : [7, 4, 28]

After backtrack at level 7
 pending : [37, 41, 25, 36, 2, 15, 13, 20, 19, 11, 17, 12, 23, 9, 30, 31, 39, 42, 43, 47, 48, 49, 40, 34, 35, 5, 18, 16]
 solution : [7, 4, 28]


Before backtrack at level 6
 pending : [37, 41, 25, 36, 2, 15, 13, 20, 19, 11, 17, 12, 23, 9, 30, 31, 39, 42, 43, 47, 48, 49, 40, 34, 35, 5, 18, 16]
 solution : [7, 4, 28]

After backtrack at level 6
 pending : [37, 41, 25, 36, 2, 15, 13, 20, 19, 11, 17, 12, 23, 9, 30, 31, 39, 42, 43, 47, 48, 49, 40, 34, 35, 5, 18, 16, 27]
 solution : [7, 4, 28]


Before backtrack at level 5
 pending : [37, 41, 25, 36, 2, 15, 13, 20, 19, 11, 17, 12, 23, 9, 30, 31, 39, 42, 43, 47, 48, 49, 40, 34, 35, 5, 18, 16, 27]
 solution : [7, 4, 28]

After backtrack at level 5
 pending : [37, 41, 25, 36, 2, 15, 13, 20, 19, 11, 17, 12, 23, 9, 30, 31, 39, 42, 43, 47, 48, 49, 40, 34, 35, 5, 18, 16, 27, 26]
 solution : [7, 4, 28]


Before backtrack at level 4
 pending : [37, 41, 25, 36, 2, 15, 13, 20, 19, 11, 17, 12, 23, 9, 30, 31, 39, 42, 43, 47, 48, 49, 40, 34, 35, 5, 18, 16, 27, 26]
 solution : [7, 4, 28]

After backtrack at level 4
 pending : [37, 41, 25, 36, 2, 15, 13, 20, 19, 11, 17, 12, 23, 9, 30, 31, 39, 42, 43, 47, 48, 49, 40, 34, 35, 5, 18, 16, 27, 26, 33]
 solution : [7, 4, 28]


Invert decision for 28 at level 3


New level: 4
 pending : [37, 41, 25, 36, 2, 15, 13, 20, 19, 11, 17, 12, 23, 9, 30, 31, 39, 42, 43, 47, 48, 49, 40, 34, 35, 5, 18, 16, 27, 26, 33]
 solution : [7, 4]


Before reduction : 
 pending  : [37, 41, 25, 36, 2, 15, 13, 20, 19, 11, 17, 12, 23, 9, 30, 31, 39, 42, 43, 47, 48, 49, 40, 34, 35, 5, 18, 16, 27, 26, 33]
 solution : [7, 4]

Essensial at level 4 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 131072), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, 4194304), (12, 8388608), (13, 65536), (14, -1), (15, 135168), (16, -1), (17, 4194304), (18, -1), (19, 2097152), (20, 65536), (21, -1), (22, -1), (23, -1), (24, -1), (25, 524288), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, 524288), (37, 262144), (38, -1), (39, -1), (40, -1), (41, 512), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 262144), (3, -1), (4, -1), (5, 134217728), (6, -1), (7, -1), (8, -1), (9, 1048576), (10, -1), (11, 8388608), (12, 16777216), (13, 131072), (14, -1), (15, 278528), (16, 536870912), (17, 4194304), (18, 268435456), (19, 2097152), (20, 65536), (21, -1), (22, -1), (23, 134217728), (24, -1), (25, 1048576), (26, 1073741824), (27, 1073741824), (28, -1), (29, -1), (30, 1048576), (31, 16384), (32, -1), (33, 2147483648), (34, 4194304), (35, 32768), (36, 1048576), (37, 67108864), (38, -1), (39, 16384), (40, 134217728), (41, 268435456), (42, 524288), (43, 524288), (44, -1), (45, -1), (46, -1), (47, 67108864), (48, 16777216), (49, 67108864), (50, -1), (51, -1), (52, -1)]

Covered at level 4 : set()

After reduction : 
 pending  : [37, 41, 25, 36, 2, 15, 13, 20, 19, 11, 17, 12, 23, 9, 30, 31, 39, 42, 43, 47, 48, 49, 40, 34, 35, 5, 18, 16, 27, 26, 33]
 solution : [7, 4]


Solution : [7, 4] has cost 11.


Decide in level 4 among pending : [37, 41, 25, 36, 2, 15, 13, 20, 19, 11, 17, 12, 23, 9, 30, 31, 39, 42, 43, 47, 48, 49, 40, 34, 35, 5, 18, 16, 27, 26, 33]

Coverage : [(0, -1), (1, -1), (2, 262144), (3, -1), (4, -1), (5, 134217728), (6, -1), (7, -1), (8, -1), (9, 1048576), (10, -1), (11, 8388608), (12, 16777216), (13, 131072), (14, -1), (15, 278528), (16, 536870912), (17, 4194304), (18, 268435456), (19, 2097152), (20, 65536), (21, -1), (22, -1), (23, 134217728), (24, -1), (25, 1048576), (26, 1073741824), (27, 1073741824), (28, -1), (29, -1), (30, 1048576), (31, 16384), (32, -1), (33, 2147483648), (34, 4194304), (35, 32768), (36, 1048576), (37, 67108864), (38, -1), (39, 16384), (40, 134217728), (41, 268435456), (42, 524288), (43, 524288), (44, -1), (45, -1), (46, -1), (47, 67108864), (48, 16777216), (49, 67108864), (50, -1), (51, -1), (52, -1)]

Decide 33 with phase True at level 4

After decision at level 4
 pending : [37, 41, 25, 36, 2, 15, 13, 20, 19, 11, 17, 12, 23, 9, 30, 31, 39, 42, 43, 47, 48, 49, 40, 34, 35, 5, 18, 16, 27, 26]
 solution : [7, 4, 33]


New level: 5
 pending : [37, 41, 25, 36, 2, 15, 13, 20, 19, 11, 17, 12, 23, 9, 30, 31, 39, 42, 43, 47, 48, 49, 40, 34, 35, 5, 18, 16, 27, 26]
 solution : [7, 4, 33]


Before reduction : 
 pending  : [37, 41, 25, 36, 2, 15, 13, 20, 19, 11, 17, 12, 23, 9, 30, 31, 39, 42, 43, 47, 48, 49, 40, 34, 35, 5, 18, 16, 27, 26]
 solution : [7, 4, 33]

Essensial at level 5 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 262144), (3, -1), (4, -1), (5, 134217728), (6, -1), (7, -1), (8, -1), (9, 1048576), (10, -1), (11, 8388608), (12, 16777216), (13, 131072), (14, -1), (15, 278528), (16, 536870912), (17, 4194304), (18, 268435456), (19, 2097152), (20, 65536), (21, -1), (22, -1), (23, 134217728), (24, -1), (25, 1048576), (26, 1073741824), (27, 1073741824), (28, -1), (29, -1), (30, 1048576), (31, 16384), (32, -1), (33, 2147483648), (34, 4194304), (35, 32768), (36, 1048576), (37, 67108864), (38, -1), (39, 16384), (40, 134217728), (41, 268435456), (42, 524288), (43, 524288), (44, -1), (45, -1), (46, -1), (47, 67108864), (48, 16777216), (49, 67108864), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 262144), (3, -1), (4, -1), (5, 134217728), (6, -1), (7, -1), (8, -1), (9, 262144), (10, -1), (11, 8388608), (12, 16777216), (13, 131072), (14, -1), (15, 278528), (16, 536870912), (17, 4194304), (18, 268435456), (19, 2097152), (20, 65536), (21, -1), (22, -1), (23, 134217728), (24, -1), (25, 1048576), (26, 1073741824), (27, 32768), (28, -1), (29, -1), (30, 262144), (31, 4096), (32, -1), (33, -1), (34, 0), (35, 0), (36, 1048576), (37, 67108864), (38, -1), (39, 4096), (40, 33554432), (41, 8192), (42, 131072), (43, 131072), (44, -1), (45, -1), (46, -1), (47, 16777216), (48, 4194304), (49, 16777216), (50, -1), (51, -1), (52, -1)]

Covered at level 5 : {34, 35}

After reduction : 
 pending  : [37, 41, 25, 36, 2, 15, 13, 20, 19, 11, 17, 12, 23, 9, 30, 31, 39, 42, 43, 47, 48, 49, 40, 5, 18, 16, 27, 26]
 solution : [7, 4, 33]


Before reduction : 
 pending  : [37, 41, 25, 36, 2, 15, 13, 20, 19, 11, 17, 12, 23, 9, 30, 31, 39, 42, 43, 47, 48, 49, 40, 5, 18, 16, 27, 26]
 solution : [7, 4, 33]

Essensial at level 5 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 262144), (3, -1), (4, -1), (5, 134217728), (6, -1), (7, -1), (8, -1), (9, 262144), (10, -1), (11, 8388608), (12, 16777216), (13, 131072), (14, -1), (15, 278528), (16, 536870912), (17, 4194304), (18, 268435456), (19, 2097152), (20, 65536), (21, -1), (22, -1), (23, 134217728), (24, -1), (25, 1048576), (26, 1073741824), (27, 32768), (28, -1), (29, -1), (30, 262144), (31, 4096), (32, -1), (33, -1), (34, 0), (35, 0), (36, 1048576), (37, 67108864), (38, -1), (39, 4096), (40, 33554432), (41, 8192), (42, 131072), (43, 131072), (44, -1), (45, -1), (46, -1), (47, 16777216), (48, 4194304), (49, 16777216), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 262144), (3, -1), (4, -1), (5, 134217728), (6, -1), (7, -1), (8, -1), (9, 262144), (10, -1), (11, 8388608), (12, 16777216), (13, 131072), (14, -1), (15, 278528), (16, 536870912), (17, 4194304), (18, 268435456), (19, 2097152), (20, 65536), (21, -1), (22, -1), (23, 134217728), (24, -1), (25, 1048576), (26, 1073741824), (27, 32768), (28, -1), (29, -1), (30, 262144), (31, 4096), (32, -1), (33, -1), (34, -1), (35, -1), (36, 1048576), (37, 67108864), (38, -1), (39, 4096), (40, 33554432), (41, 8192), (42, 131072), (43, 131072), (44, -1), (45, -1), (46, -1), (47, 16777216), (48, 4194304), (49, 16777216), (50, -1), (51, -1), (52, -1)]

Covered at level 5 : set()

After reduction : 
 pending  : [37, 41, 25, 36, 2, 15, 13, 20, 19, 11, 17, 12, 23, 9, 30, 31, 39, 42, 43, 47, 48, 49, 40, 5, 18, 16, 27, 26]
 solution : [7, 4, 33]


Solution : [7, 4, 33] has cost 24.


Before backtrack at level 5
 pending : [37, 41, 25, 36, 2, 15, 13, 20, 19, 11, 17, 12, 23, 9, 30, 31, 39, 42, 43, 47, 48, 49, 40, 5, 18, 16, 27, 26]
 solution : [7, 4, 33]

After backtrack at level 5
 pending : [37, 41, 25, 36, 2, 15, 13, 20, 19, 11, 17, 12, 23, 9, 30, 31, 39, 42, 43, 47, 48, 49, 40, 5, 18, 16, 27, 26, 34, 35]
 solution : [7, 4, 33]


Invert decision for 33 at level 4


New level: 5
 pending : [37, 41, 25, 36, 2, 15, 13, 20, 19, 11, 17, 12, 23, 9, 30, 31, 39, 42, 43, 47, 48, 49, 40, 5, 18, 16, 27, 26, 34, 35]
 solution : [7, 4]


Before reduction : 
 pending  : [37, 41, 25, 36, 2, 15, 13, 20, 19, 11, 17, 12, 23, 9, 30, 31, 39, 42, 43, 47, 48, 49, 40, 5, 18, 16, 27, 26, 34, 35]
 solution : [7, 4]

Essensial at level 5 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 262144), (3, -1), (4, -1), (5, 134217728), (6, -1), (7, -1), (8, -1), (9, 262144), (10, -1), (11, 8388608), (12, 16777216), (13, 131072), (14, -1), (15, 278528), (16, 536870912), (17, 4194304), (18, 268435456), (19, 2097152), (20, 65536), (21, -1), (22, -1), (23, 134217728), (24, -1), (25, 1048576), (26, 1073741824), (27, 32768), (28, -1), (29, -1), (30, 262144), (31, 4096), (32, -1), (33, -1), (34, -1), (35, -1), (36, 1048576), (37, 67108864), (38, -1), (39, 4096), (40, 33554432), (41, 8192), (42, 131072), (43, 131072), (44, -1), (45, -1), (46, -1), (47, 16777216), (48, 4194304), (49, 16777216), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 262144), (3, -1), (4, -1), (5, 134217728), (6, -1), (7, -1), (8, -1), (9, 1048576), (10, -1), (11, 8388608), (12, 16777216), (13, 131072), (14, -1), (15, 278528), (16, 536870912), (17, 4194304), (18, 268435456), (19, 2097152), (20, 65536), (21, -1), (22, -1), (23, 134217728), (24, -1), (25, 1048576), (26, 1073741824), (27, 1073741824), (28, -1), (29, -1), (30, 1048576), (31, 16384), (32, -1), (33, -1), (34, 4194304), (35, 32768), (36, 1048576), (37, 67108864), (38, -1), (39, 16384), (40, 134217728), (41, 268435456), (42, 524288), (43, 524288), (44, -1), (45, -1), (46, -1), (47, 67108864), (48, 16777216), (49, 67108864), (50, -1), (51, -1), (52, -1)]

Covered at level 5 : set()

After reduction : 
 pending  : [37, 41, 25, 36, 2, 15, 13, 20, 19, 11, 17, 12, 23, 9, 30, 31, 39, 42, 43, 47, 48, 49, 40, 5, 18, 16, 27, 26, 34, 35]
 solution : [7, 4]


Solution : [7, 4] has cost 11.


Decide in level 5 among pending : [37, 41, 25, 36, 2, 15, 13, 20, 19, 11, 17, 12, 23, 9, 30, 31, 39, 42, 43, 47, 48, 49, 40, 5, 18, 16, 27, 26, 34, 35]

Coverage : [(0, -1), (1, -1), (2, 262144), (3, -1), (4, -1), (5, 134217728), (6, -1), (7, -1), (8, -1), (9, 1048576), (10, -1), (11, 8388608), (12, 16777216), (13, 131072), (14, -1), (15, 278528), (16, 536870912), (17, 4194304), (18, 268435456), (19, 2097152), (20, 65536), (21, -1), (22, -1), (23, 134217728), (24, -1), (25, 1048576), (26, 1073741824), (27, 1073741824), (28, -1), (29, -1), (30, 1048576), (31, 16384), (32, -1), (33, -1), (34, 4194304), (35, 32768), (36, 1048576), (37, 67108864), (38, -1), (39, 16384), (40, 134217728), (41, 268435456), (42, 524288), (43, 524288), (44, -1), (45, -1), (46, -1), (47, 67108864), (48, 16777216), (49, 67108864), (50, -1), (51, -1), (52, -1)]

Decide 27 with phase True at level 5

After decision at level 5
 pending : [37, 41, 25, 36, 2, 15, 13, 20, 19, 11, 17, 12, 23, 9, 30, 31, 39, 42, 43, 47, 48, 49, 40, 5, 18, 16, 26, 34, 35]
 solution : [7, 4, 27]


New level: 6
 pending : [37, 41, 25, 36, 2, 15, 13, 20, 19, 11, 17, 12, 23, 9, 30, 31, 39, 42, 43, 47, 48, 49, 40, 5, 18, 16, 26, 34, 35]
 solution : [7, 4, 27]


Before reduction : 
 pending  : [37, 41, 25, 36, 2, 15, 13, 20, 19, 11, 17, 12, 23, 9, 30, 31, 39, 42, 43, 47, 48, 49, 40, 5, 18, 16, 26, 34, 35]
 solution : [7, 4, 27]

Essensial at level 6 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 262144), (3, -1), (4, -1), (5, 134217728), (6, -1), (7, -1), (8, -1), (9, 1048576), (10, -1), (11, 8388608), (12, 16777216), (13, 131072), (14, -1), (15, 278528), (16, 536870912), (17, 4194304), (18, 268435456), (19, 2097152), (20, 65536), (21, -1), (22, -1), (23, 134217728), (24, -1), (25, 1048576), (26, 1073741824), (27, 1073741824), (28, -1), (29, -1), (30, 1048576), (31, 16384), (32, -1), (33, -1), (34, 4194304), (35, 32768), (36, 1048576), (37, 67108864), (38, -1), (39, 16384), (40, 134217728), (41, 268435456), (42, 524288), (43, 524288), (44, -1), (45, -1), (46, -1), (47, 67108864), (48, 16777216), (49, 67108864), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 262144), (3, -1), (4, -1), (5, 33554432), (6, -1), (7, -1), (8, -1), (9, 262144), (10, -1), (11, 8388608), (12, 16777216), (13, 131072), (14, -1), (15, 278528), (16, 536870912), (17, 4194304), (18, 268435456), (19, 2097152), (20, 65536), (21, -1), (22, -1), (23, 33554432), (24, -1), (25, 1048576), (26, 1073741824), (27, -1), (28, -1), (29, -1), (30, 262144), (31, 4096), (32, -1), (33, -1), (34, 0), (35, 0), (36, 1048576), (37, 33554432), (38, -1), (39, 4096), (40, 67108864), (41, 512), (42, 131072), (43, 131072), (44, -1), (45, -1), (46, -1), (47, 16777216), (48, 4194304), (49, 33554432), (50, -1), (51, -1), (52, -1)]

Covered at level 6 : {34, 35}

After reduction : 
 pending  : [37, 41, 25, 36, 2, 15, 13, 20, 19, 11, 17, 12, 23, 9, 30, 31, 39, 42, 43, 47, 48, 49, 40, 5, 18, 16, 26]
 solution : [7, 4, 27]


Before reduction : 
 pending  : [37, 41, 25, 36, 2, 15, 13, 20, 19, 11, 17, 12, 23, 9, 30, 31, 39, 42, 43, 47, 48, 49, 40, 5, 18, 16, 26]
 solution : [7, 4, 27]

Essensial at level 6 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 262144), (3, -1), (4, -1), (5, 33554432), (6, -1), (7, -1), (8, -1), (9, 262144), (10, -1), (11, 8388608), (12, 16777216), (13, 131072), (14, -1), (15, 278528), (16, 536870912), (17, 4194304), (18, 268435456), (19, 2097152), (20, 65536), (21, -1), (22, -1), (23, 33554432), (24, -1), (25, 1048576), (26, 1073741824), (27, -1), (28, -1), (29, -1), (30, 262144), (31, 4096), (32, -1), (33, -1), (34, 0), (35, 0), (36, 1048576), (37, 33554432), (38, -1), (39, 4096), (40, 67108864), (41, 512), (42, 131072), (43, 131072), (44, -1), (45, -1), (46, -1), (47, 16777216), (48, 4194304), (49, 33554432), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 262144), (3, -1), (4, -1), (5, 33554432), (6, -1), (7, -1), (8, -1), (9, 262144), (10, -1), (11, 8388608), (12, 16777216), (13, 131072), (14, -1), (15, 278528), (16, 536870912), (17, 4194304), (18, 268435456), (19, 2097152), (20, 65536), (21, -1), (22, -1), (23, 33554432), (24, -1), (25, 1048576), (26, 1073741824), (27, -1), (28, -1), (29, -1), (30, 262144), (31, 4096), (32, -1), (33, -1), (34, -1), (35, -1), (36, 1048576), (37, 33554432), (38, -1), (39, 4096), (40, 67108864), (41, 512), (42, 131072), (43, 131072), (44, -1), (45, -1), (46, -1), (47, 16777216), (48, 4194304), (49, 33554432), (50, -1), (51, -1), (52, -1)]

Covered at level 6 : set()

After reduction : 
 pending  : [37, 41, 25, 36, 2, 15, 13, 20, 19, 11, 17, 12, 23, 9, 30, 31, 39, 42, 43, 47, 48, 49, 40, 5, 18, 16, 26]
 solution : [7, 4, 27]


Solution : [7, 4, 27] has cost 18.


Before backtrack at level 6
 pending : [37, 41, 25, 36, 2, 15, 13, 20, 19, 11, 17, 12, 23, 9, 30, 31, 39, 42, 43, 47, 48, 49, 40, 5, 18, 16, 26]
 solution : [7, 4, 27]

After backtrack at level 6
 pending : [37, 41, 25, 36, 2, 15, 13, 20, 19, 11, 17, 12, 23, 9, 30, 31, 39, 42, 43, 47, 48, 49, 40, 5, 18, 16, 26, 34, 35]
 solution : [7, 4, 27]


Invert decision for 27 at level 5


New level: 6
 pending : [37, 41, 25, 36, 2, 15, 13, 20, 19, 11, 17, 12, 23, 9, 30, 31, 39, 42, 43, 47, 48, 49, 40, 5, 18, 16, 26, 34, 35]
 solution : [7, 4]


Before reduction : 
 pending  : [37, 41, 25, 36, 2, 15, 13, 20, 19, 11, 17, 12, 23, 9, 30, 31, 39, 42, 43, 47, 48, 49, 40, 5, 18, 16, 26, 34, 35]
 solution : [7, 4]

Essensial at level 6 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 262144), (3, -1), (4, -1), (5, 33554432), (6, -1), (7, -1), (8, -1), (9, 262144), (10, -1), (11, 8388608), (12, 16777216), (13, 131072), (14, -1), (15, 278528), (16, 536870912), (17, 4194304), (18, 268435456), (19, 2097152), (20, 65536), (21, -1), (22, -1), (23, 33554432), (24, -1), (25, 1048576), (26, 1073741824), (27, -1), (28, -1), (29, -1), (30, 262144), (31, 4096), (32, -1), (33, -1), (34, -1), (35, -1), (36, 1048576), (37, 33554432), (38, -1), (39, 4096), (40, 67108864), (41, 512), (42, 131072), (43, 131072), (44, -1), (45, -1), (46, -1), (47, 16777216), (48, 4194304), (49, 33554432), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 262144), (3, -1), (4, -1), (5, 134217728), (6, -1), (7, -1), (8, -1), (9, 1048576), (10, -1), (11, 8388608), (12, 16777216), (13, 131072), (14, -1), (15, 278528), (16, 536870912), (17, 4194304), (18, 268435456), (19, 2097152), (20, 65536), (21, -1), (22, -1), (23, 134217728), (24, -1), (25, 1048576), (26, 1073741824), (27, -1), (28, -1), (29, -1), (30, 1048576), (31, 16384), (32, -1), (33, -1), (34, 4194304), (35, 32768), (36, 1048576), (37, 67108864), (38, -1), (39, 16384), (40, 134217728), (41, 268435456), (42, 524288), (43, 524288), (44, -1), (45, -1), (46, -1), (47, 67108864), (48, 16777216), (49, 67108864), (50, -1), (51, -1), (52, -1)]

Covered at level 6 : set()

After reduction : 
 pending  : [37, 41, 25, 36, 2, 15, 13, 20, 19, 11, 17, 12, 23, 9, 30, 31, 39, 42, 43, 47, 48, 49, 40, 5, 18, 16, 26, 34, 35]
 solution : [7, 4]


Solution : [7, 4] has cost 11.


Decide in level 6 among pending : [37, 41, 25, 36, 2, 15, 13, 20, 19, 11, 17, 12, 23, 9, 30, 31, 39, 42, 43, 47, 48, 49, 40, 5, 18, 16, 26, 34, 35]

Coverage : [(0, -1), (1, -1), (2, 262144), (3, -1), (4, -1), (5, 134217728), (6, -1), (7, -1), (8, -1), (9, 1048576), (10, -1), (11, 8388608), (12, 16777216), (13, 131072), (14, -1), (15, 278528), (16, 536870912), (17, 4194304), (18, 268435456), (19, 2097152), (20, 65536), (21, -1), (22, -1), (23, 134217728), (24, -1), (25, 1048576), (26, 1073741824), (27, -1), (28, -1), (29, -1), (30, 1048576), (31, 16384), (32, -1), (33, -1), (34, 4194304), (35, 32768), (36, 1048576), (37, 67108864), (38, -1), (39, 16384), (40, 134217728), (41, 268435456), (42, 524288), (43, 524288), (44, -1), (45, -1), (46, -1), (47, 67108864), (48, 16777216), (49, 67108864), (50, -1), (51, -1), (52, -1)]

Decide 26 with phase True at level 6

After decision at level 6
 pending : [37, 41, 25, 36, 2, 15, 13, 20, 19, 11, 17, 12, 23, 9, 30, 31, 39, 42, 43, 47, 48, 49, 40, 5, 18, 16, 34, 35]
 solution : [7, 4, 26]


New level: 7
 pending : [37, 41, 25, 36, 2, 15, 13, 20, 19, 11, 17, 12, 23, 9, 30, 31, 39, 42, 43, 47, 48, 49, 40, 5, 18, 16, 34, 35]
 solution : [7, 4, 26]


Before reduction : 
 pending  : [37, 41, 25, 36, 2, 15, 13, 20, 19, 11, 17, 12, 23, 9, 30, 31, 39, 42, 43, 47, 48, 49, 40, 5, 18, 16, 34, 35]
 solution : [7, 4, 26]

Essensial at level 7 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 262144), (3, -1), (4, -1), (5, 134217728), (6, -1), (7, -1), (8, -1), (9, 1048576), (10, -1), (11, 8388608), (12, 16777216), (13, 131072), (14, -1), (15, 278528), (16, 536870912), (17, 4194304), (18, 268435456), (19, 2097152), (20, 65536), (21, -1), (22, -1), (23, 134217728), (24, -1), (25, 1048576), (26, 1073741824), (27, -1), (28, -1), (29, -1), (30, 1048576), (31, 16384), (32, -1), (33, -1), (34, 4194304), (35, 32768), (36, 1048576), (37, 67108864), (38, -1), (39, 16384), (40, 134217728), (41, 268435456), (42, 524288), (43, 524288), (44, -1), (45, -1), (46, -1), (47, 67108864), (48, 16777216), (49, 67108864), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 0), (3, -1), (4, -1), (5, 134217728), (6, -1), (7, -1), (8, -1), (9, 262144), (10, -1), (11, 0), (12, 0), (13, 0), (14, -1), (15, 0), (16, 0), (17, 0), (18, 0), (19, 0), (20, 0), (21, -1), (22, -1), (23, 134217728), (24, -1), (25, 0), (26, -1), (27, -1), (28, -1), (29, -1), (30, 524288), (31, 4096), (32, -1), (33, -1), (34, 4194304), (35, 8192), (36, 0), (37, 2048), (38, -1), (39, 2048), (40, 67108864), (41, 4096), (42, 131072), (43, 131072), (44, -1), (45, -1), (46, -1), (47, 33554432), (48, 4194304), (49, 16777216), (50, -1), (51, -1), (52, -1)]

Covered at level 7 : {2, 36, 11, 12, 13, 15, 16, 17, 18, 19, 20, 25}

After reduction : 
 pending  : [37, 41, 23, 9, 30, 31, 39, 42, 43, 47, 48, 49, 40, 5, 34, 35]
 solution : [7, 4, 26]


Before reduction : 
 pending  : [37, 41, 23, 9, 30, 31, 39, 42, 43, 47, 48, 49, 40, 5, 34, 35]
 solution : [7, 4, 26]

Essensial at level 7 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 0), (3, -1), (4, -1), (5, 134217728), (6, -1), (7, -1), (8, -1), (9, 262144), (10, -1), (11, 0), (12, 0), (13, 0), (14, -1), (15, 0), (16, 0), (17, 0), (18, 0), (19, 0), (20, 0), (21, -1), (22, -1), (23, 134217728), (24, -1), (25, 0), (26, -1), (27, -1), (28, -1), (29, -1), (30, 524288), (31, 4096), (32, -1), (33, -1), (34, 4194304), (35, 8192), (36, 0), (37, 2048), (38, -1), (39, 2048), (40, 67108864), (41, 4096), (42, 131072), (43, 131072), (44, -1), (45, -1), (46, -1), (47, 33554432), (48, 4194304), (49, 16777216), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 134217728), (6, -1), (7, -1), (8, -1), (9, 262144), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, 134217728), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, 524288), (31, 4096), (32, -1), (33, -1), (34, 4194304), (35, 8192), (36, -1), (37, 2048), (38, -1), (39, 2048), (40, 67108864), (41, 4096), (42, 131072), (43, 131072), (44, -1), (45, -1), (46, -1), (47, 33554432), (48, 4194304), (49, 16777216), (50, -1), (51, -1), (52, -1)]

Covered at level 7 : set()

After reduction : 
 pending  : [37, 41, 23, 9, 30, 31, 39, 42, 43, 47, 48, 49, 40, 5, 34, 35]
 solution : [7, 4, 26]


Solution : [7, 4, 26] has cost 15.


Decide in level 7 among pending : [37, 41, 23, 9, 30, 31, 39, 42, 43, 47, 48, 49, 40, 5, 34, 35]

Coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 134217728), (6, -1), (7, -1), (8, -1), (9, 262144), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, 134217728), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, 524288), (31, 4096), (32, -1), (33, -1), (34, 4194304), (35, 8192), (36, -1), (37, 2048), (38, -1), (39, 2048), (40, 67108864), (41, 4096), (42, 131072), (43, 131072), (44, -1), (45, -1), (46, -1), (47, 33554432), (48, 4194304), (49, 16777216), (50, -1), (51, -1), (52, -1)]

Decide 23 with phase True at level 7

After decision at level 7
 pending : [37, 41, 9, 30, 31, 39, 42, 43, 47, 48, 49, 40, 5, 34, 35]
 solution : [7, 4, 26, 23]


New level: 8
 pending : [37, 41, 9, 30, 31, 39, 42, 43, 47, 48, 49, 40, 5, 34, 35]
 solution : [7, 4, 26, 23]


Before reduction : 
 pending  : [37, 41, 9, 30, 31, 39, 42, 43, 47, 48, 49, 40, 5, 34, 35]
 solution : [7, 4, 26, 23]

Essensial at level 8 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 134217728), (6, -1), (7, -1), (8, -1), (9, 262144), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, 134217728), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, 524288), (31, 4096), (32, -1), (33, -1), (34, 4194304), (35, 8192), (36, -1), (37, 2048), (38, -1), (39, 2048), (40, 67108864), (41, 4096), (42, 131072), (43, 131072), (44, -1), (45, -1), (46, -1), (47, 33554432), (48, 4194304), (49, 16777216), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 0), (6, -1), (7, -1), (8, -1), (9, 0), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, 0), (31, 0), (32, -1), (33, -1), (34, 0), (35, 0), (36, -1), (37, 0), (38, -1), (39, 0), (40, 0), (41, 0), (42, 0), (43, 0), (44, -1), (45, -1), (46, -1), (47, 0), (48, 0), (49, 0), (50, -1), (51, -1), (52, -1)]

Covered at level 8 : {34, 35, 37, 5, 39, 40, 41, 9, 42, 43, 47, 48, 49, 30, 31}

After reduction : 
 pending  : []
 solution : [7, 4, 26, 23]


Before reduction : 
 pending  : []
 solution : [7, 4, 26, 23]

Essensial at level 8 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 0), (6, -1), (7, -1), (8, -1), (9, 0), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, 0), (31, 0), (32, -1), (33, -1), (34, 0), (35, 0), (36, -1), (37, 0), (38, -1), (39, 0), (40, 0), (41, 0), (42, 0), (43, 0), (44, -1), (45, -1), (46, -1), (47, 0), (48, 0), (49, 0), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 8 : set()

After reduction : 
 pending  : []
 solution : [7, 4, 26, 23]


Solution : [7, 4, 26, 23] has cost 22.


Before backtrack at level 8
 pending : []
 solution : [7, 4, 26, 23]

After backtrack at level 8
 pending : [37, 41, 9, 30, 31, 39, 42, 43, 47, 48, 49, 40, 5, 34, 35]
 solution : [7, 4, 26, 23]


Invert decision for 23 at level 7


New level: 8
 pending : [37, 41, 9, 30, 31, 39, 42, 43, 47, 48, 49, 40, 5, 34, 35]
 solution : [7, 4, 26]


Before reduction : 
 pending  : [37, 41, 9, 30, 31, 39, 42, 43, 47, 48, 49, 40, 5, 34, 35]
 solution : [7, 4, 26]

Essensial at level 8 : {5}

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, 0), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, 0), (31, 0), (32, -1), (33, -1), (34, 0), (35, 0), (36, -1), (37, 0), (38, -1), (39, 0), (40, 0), (41, 0), (42, 0), (43, 0), (44, -1), (45, -1), (46, -1), (47, 0), (48, 0), (49, 0), (50, -1), (51, -1), (52, -1)]

Covered at level 8 : {34, 35, 37, 39, 40, 41, 9, 42, 43, 47, 48, 49, 30, 31}

After reduction : 
 pending  : []
 solution : [7, 4, 26, 5]


Before reduction : 
 pending  : []
 solution : [7, 4, 26, 5]

Essensial at level 8 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, 0), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, 0), (31, 0), (32, -1), (33, -1), (34, 0), (35, 0), (36, -1), (37, 0), (38, -1), (39, 0), (40, 0), (41, 0), (42, 0), (43, 0), (44, -1), (45, -1), (46, -1), (47, 0), (48, 0), (49, 0), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 8 : set()

After reduction : 
 pending  : []
 solution : [7, 4, 26, 5]


Solution : [7, 4, 26, 5] has cost 19.


Before backtrack at level 8
 pending : []
 solution : [7, 4, 26, 5]

After backtrack at level 8
 pending : [5, 37, 41, 9, 30, 31, 39, 42, 43, 47, 48, 49, 40, 34, 35]
 solution : [7, 4, 26]


Before backtrack at level 7
 pending : [5, 37, 41, 9, 30, 31, 39, 42, 43, 47, 48, 49, 40, 34, 35]
 solution : [7, 4, 26]

After backtrack at level 7
 pending : [5, 37, 41, 9, 30, 31, 39, 42, 43, 47, 48, 49, 40, 34, 35, 25, 36, 2, 15, 13, 20, 19, 11, 17, 12, 18, 16, 23]
 solution : [7, 4, 26]


Invert decision for 26 at level 6


New level: 7
 pending : [5, 37, 41, 9, 30, 31, 39, 42, 43, 47, 48, 49, 40, 34, 35, 25, 36, 2, 15, 13, 20, 19, 11, 17, 12, 18, 16, 23]
 solution : [7, 4]


Before reduction : 
 pending  : [5, 37, 41, 9, 30, 31, 39, 42, 43, 47, 48, 49, 40, 34, 35, 25, 36, 2, 15, 13, 20, 19, 11, 17, 12, 18, 16, 23]
 solution : [7, 4]

Essensial at level 7 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 262144), (3, -1), (4, -1), (5, 134217728), (6, -1), (7, -1), (8, -1), (9, 1048576), (10, -1), (11, 8388608), (12, 16777216), (13, 131072), (14, -1), (15, 278528), (16, 536870912), (17, 4194304), (18, 268435456), (19, 2097152), (20, 65536), (21, -1), (22, -1), (23, 134217728), (24, -1), (25, 1048576), (26, -1), (27, -1), (28, -1), (29, -1), (30, 1048576), (31, 16384), (32, -1), (33, -1), (34, 4194304), (35, 32768), (36, 1048576), (37, 67108864), (38, -1), (39, 16384), (40, 134217728), (41, 268435456), (42, 524288), (43, 524288), (44, -1), (45, -1), (46, -1), (47, 67108864), (48, 16777216), (49, 67108864), (50, -1), (51, -1), (52, -1)]

Covered at level 7 : set()

After reduction : 
 pending  : [5, 37, 41, 9, 30, 31, 39, 42, 43, 47, 48, 49, 40, 34, 35, 25, 36, 2, 15, 13, 20, 19, 11, 17, 12, 18, 16, 23]
 solution : [7, 4]


Solution : [7, 4] has cost 11.


Decide in level 7 among pending : [5, 37, 41, 9, 30, 31, 39, 42, 43, 47, 48, 49, 40, 34, 35, 25, 36, 2, 15, 13, 20, 19, 11, 17, 12, 18, 16, 23]

Coverage : [(0, -1), (1, -1), (2, 262144), (3, -1), (4, -1), (5, 134217728), (6, -1), (7, -1), (8, -1), (9, 1048576), (10, -1), (11, 8388608), (12, 16777216), (13, 131072), (14, -1), (15, 278528), (16, 536870912), (17, 4194304), (18, 268435456), (19, 2097152), (20, 65536), (21, -1), (22, -1), (23, 134217728), (24, -1), (25, 1048576), (26, -1), (27, -1), (28, -1), (29, -1), (30, 1048576), (31, 16384), (32, -1), (33, -1), (34, 4194304), (35, 32768), (36, 1048576), (37, 67108864), (38, -1), (39, 16384), (40, 134217728), (41, 268435456), (42, 524288), (43, 524288), (44, -1), (45, -1), (46, -1), (47, 67108864), (48, 16777216), (49, 67108864), (50, -1), (51, -1), (52, -1)]

Decide 16 with phase True at level 7

After decision at level 7
 pending : [5, 37, 41, 9, 30, 31, 39, 42, 43, 47, 48, 49, 40, 34, 35, 25, 36, 2, 15, 13, 20, 19, 11, 17, 12, 18, 23]
 solution : [7, 4, 16]


New level: 8
 pending : [5, 37, 41, 9, 30, 31, 39, 42, 43, 47, 48, 49, 40, 34, 35, 25, 36, 2, 15, 13, 20, 19, 11, 17, 12, 18, 23]
 solution : [7, 4, 16]


Before reduction : 
 pending  : [5, 37, 41, 9, 30, 31, 39, 42, 43, 47, 48, 49, 40, 34, 35, 25, 36, 2, 15, 13, 20, 19, 11, 17, 12, 18, 23]
 solution : [7, 4, 16]

Essensial at level 8 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 262144), (3, -1), (4, -1), (5, 134217728), (6, -1), (7, -1), (8, -1), (9, 1048576), (10, -1), (11, 8388608), (12, 16777216), (13, 131072), (14, -1), (15, 278528), (16, 536870912), (17, 4194304), (18, 268435456), (19, 2097152), (20, 65536), (21, -1), (22, -1), (23, 134217728), (24, -1), (25, 1048576), (26, -1), (27, -1), (28, -1), (29, -1), (30, 1048576), (31, 16384), (32, -1), (33, -1), (34, 4194304), (35, 32768), (36, 1048576), (37, 67108864), (38, -1), (39, 16384), (40, 134217728), (41, 268435456), (42, 524288), (43, 524288), (44, -1), (45, -1), (46, -1), (47, 67108864), (48, 16777216), (49, 67108864), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 0), (3, -1), (4, -1), (5, 134217728), (6, -1), (7, -1), (8, -1), (9, 262144), (10, -1), (11, 0), (12, 0), (13, 0), (14, -1), (15, 0), (16, -1), (17, 0), (18, 0), (19, 0), (20, 0), (21, -1), (22, -1), (23, 134217728), (24, -1), (25, 0), (26, -1), (27, -1), (28, -1), (29, -1), (30, 524288), (31, 4096), (32, -1), (33, -1), (34, 4194304), (35, 8192), (36, 0), (37, 2048), (38, -1), (39, 2048), (40, 67108864), (41, 4096), (42, 131072), (43, 131072), (44, -1), (45, -1), (46, -1), (47, 33554432), (48, 4194304), (49, 67108864), (50, -1), (51, -1), (52, -1)]

Covered at level 8 : {2, 36, 11, 12, 13, 15, 17, 18, 19, 20, 25}

After reduction : 
 pending  : [5, 37, 41, 9, 30, 31, 39, 42, 43, 47, 48, 49, 40, 34, 35, 23]
 solution : [7, 4, 16]


Before reduction : 
 pending  : [5, 37, 41, 9, 30, 31, 39, 42, 43, 47, 48, 49, 40, 34, 35, 23]
 solution : [7, 4, 16]

Essensial at level 8 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 0), (3, -1), (4, -1), (5, 134217728), (6, -1), (7, -1), (8, -1), (9, 262144), (10, -1), (11, 0), (12, 0), (13, 0), (14, -1), (15, 0), (16, -1), (17, 0), (18, 0), (19, 0), (20, 0), (21, -1), (22, -1), (23, 134217728), (24, -1), (25, 0), (26, -1), (27, -1), (28, -1), (29, -1), (30, 524288), (31, 4096), (32, -1), (33, -1), (34, 4194304), (35, 8192), (36, 0), (37, 2048), (38, -1), (39, 2048), (40, 67108864), (41, 4096), (42, 131072), (43, 131072), (44, -1), (45, -1), (46, -1), (47, 33554432), (48, 4194304), (49, 67108864), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 134217728), (6, -1), (7, -1), (8, -1), (9, 262144), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, 134217728), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, 524288), (31, 4096), (32, -1), (33, -1), (34, 4194304), (35, 8192), (36, -1), (37, 2048), (38, -1), (39, 2048), (40, 67108864), (41, 4096), (42, 131072), (43, 131072), (44, -1), (45, -1), (46, -1), (47, 33554432), (48, 4194304), (49, 67108864), (50, -1), (51, -1), (52, -1)]

Covered at level 8 : set()

After reduction : 
 pending  : [5, 37, 41, 9, 30, 31, 39, 42, 43, 47, 48, 49, 40, 34, 35, 23]
 solution : [7, 4, 16]


Solution : [7, 4, 16] has cost 18.


Before backtrack at level 8
 pending : [5, 37, 41, 9, 30, 31, 39, 42, 43, 47, 48, 49, 40, 34, 35, 23]
 solution : [7, 4, 16]

After backtrack at level 8
 pending : [5, 37, 41, 9, 30, 31, 39, 42, 43, 47, 48, 49, 40, 34, 35, 23, 25, 36, 2, 15, 13, 20, 19, 11, 17, 12, 18]
 solution : [7, 4, 16]


Invert decision for 16 at level 7


New level: 8
 pending : [5, 37, 41, 9, 30, 31, 39, 42, 43, 47, 48, 49, 40, 34, 35, 23, 25, 36, 2, 15, 13, 20, 19, 11, 17, 12, 18]
 solution : [7, 4]


Before reduction : 
 pending  : [5, 37, 41, 9, 30, 31, 39, 42, 43, 47, 48, 49, 40, 34, 35, 23, 25, 36, 2, 15, 13, 20, 19, 11, 17, 12, 18]
 solution : [7, 4]

Essensial at level 8 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 134217728), (6, -1), (7, -1), (8, -1), (9, 262144), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, 134217728), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, 524288), (31, 4096), (32, -1), (33, -1), (34, 4194304), (35, 8192), (36, -1), (37, 2048), (38, -1), (39, 2048), (40, 67108864), (41, 4096), (42, 131072), (43, 131072), (44, -1), (45, -1), (46, -1), (47, 33554432), (48, 4194304), (49, 67108864), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 262144), (3, -1), (4, -1), (5, 134217728), (6, -1), (7, -1), (8, -1), (9, 1048576), (10, -1), (11, 8388608), (12, 16777216), (13, 131072), (14, -1), (15, 278528), (16, -1), (17, 4194304), (18, 268435456), (19, 2097152), (20, 65536), (21, -1), (22, -1), (23, 134217728), (24, -1), (25, 1048576), (26, -1), (27, -1), (28, -1), (29, -1), (30, 1048576), (31, 16384), (32, -1), (33, -1), (34, 4194304), (35, 32768), (36, 1048576), (37, 67108864), (38, -1), (39, 16384), (40, 134217728), (41, 268435456), (42, 524288), (43, 524288), (44, -1), (45, -1), (46, -1), (47, 67108864), (48, 16777216), (49, 67108864), (50, -1), (51, -1), (52, -1)]

Covered at level 8 : set()

After reduction : 
 pending  : [5, 37, 41, 9, 30, 31, 39, 42, 43, 47, 48, 49, 40, 34, 35, 23, 25, 36, 2, 15, 13, 20, 19, 11, 17, 12, 18]
 solution : [7, 4]


Solution : [7, 4] has cost 11.


Decide in level 8 among pending : [5, 37, 41, 9, 30, 31, 39, 42, 43, 47, 48, 49, 40, 34, 35, 23, 25, 36, 2, 15, 13, 20, 19, 11, 17, 12, 18]

Coverage : [(0, -1), (1, -1), (2, 262144), (3, -1), (4, -1), (5, 134217728), (6, -1), (7, -1), (8, -1), (9, 1048576), (10, -1), (11, 8388608), (12, 16777216), (13, 131072), (14, -1), (15, 278528), (16, -1), (17, 4194304), (18, 268435456), (19, 2097152), (20, 65536), (21, -1), (22, -1), (23, 134217728), (24, -1), (25, 1048576), (26, -1), (27, -1), (28, -1), (29, -1), (30, 1048576), (31, 16384), (32, -1), (33, -1), (34, 4194304), (35, 32768), (36, 1048576), (37, 67108864), (38, -1), (39, 16384), (40, 134217728), (41, 268435456), (42, 524288), (43, 524288), (44, -1), (45, -1), (46, -1), (47, 67108864), (48, 16777216), (49, 67108864), (50, -1), (51, -1), (52, -1)]

Decide 41 with phase True at level 8

After decision at level 8
 pending : [5, 37, 9, 30, 31, 39, 42, 43, 47, 48, 49, 40, 34, 35, 23, 25, 36, 2, 15, 13, 20, 19, 11, 17, 12, 18]
 solution : [7, 4, 41]


New level: 9
 pending : [5, 37, 9, 30, 31, 39, 42, 43, 47, 48, 49, 40, 34, 35, 23, 25, 36, 2, 15, 13, 20, 19, 11, 17, 12, 18]
 solution : [7, 4, 41]


Before reduction : 
 pending  : [5, 37, 9, 30, 31, 39, 42, 43, 47, 48, 49, 40, 34, 35, 23, 25, 36, 2, 15, 13, 20, 19, 11, 17, 12, 18]
 solution : [7, 4, 41]

Essensial at level 9 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 262144), (3, -1), (4, -1), (5, 134217728), (6, -1), (7, -1), (8, -1), (9, 1048576), (10, -1), (11, 8388608), (12, 16777216), (13, 131072), (14, -1), (15, 278528), (16, -1), (17, 4194304), (18, 268435456), (19, 2097152), (20, 65536), (21, -1), (22, -1), (23, 134217728), (24, -1), (25, 1048576), (26, -1), (27, -1), (28, -1), (29, -1), (30, 1048576), (31, 16384), (32, -1), (33, -1), (34, 4194304), (35, 32768), (36, 1048576), (37, 67108864), (38, -1), (39, 16384), (40, 134217728), (41, 268435456), (42, 524288), (43, 524288), (44, -1), (45, -1), (46, -1), (47, 67108864), (48, 16777216), (49, 67108864), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 262144), (3, -1), (4, -1), (5, 134217728), (6, -1), (7, -1), (8, -1), (9, 1048576), (10, -1), (11, 8388608), (12, 16777216), (13, 131072), (14, -1), (15, 278528), (16, -1), (17, 4194304), (18, 268435456), (19, 2097152), (20, 65536), (21, -1), (22, -1), (23, 134217728), (24, -1), (25, 1048576), (26, -1), (27, -1), (28, -1), (29, -1), (30, 1048576), (31, 16384), (32, -1), (33, -1), (34, 2097152), (35, 16384), (36, 1048576), (37, 33554432), (38, -1), (39, 16384), (40, 134217728), (41, -1), (42, 524288), (43, 524288), (44, -1), (45, -1), (46, -1), (47, 67108864), (48, 16777216), (49, 67108864), (50, -1), (51, -1), (52, -1)]

Covered at level 9 : set()

After reduction : 
 pending  : [5, 37, 9, 30, 31, 39, 42, 43, 47, 48, 49, 40, 34, 35, 23, 25, 36, 2, 15, 13, 20, 19, 11, 17, 12, 18]
 solution : [7, 4, 41]


Solution : [7, 4, 41] has cost 25.


Before backtrack at level 9
 pending : [5, 37, 9, 30, 31, 39, 42, 43, 47, 48, 49, 40, 34, 35, 23, 25, 36, 2, 15, 13, 20, 19, 11, 17, 12, 18]
 solution : [7, 4, 41]

After backtrack at level 9
 pending : [5, 37, 9, 30, 31, 39, 42, 43, 47, 48, 49, 40, 34, 35, 23, 25, 36, 2, 15, 13, 20, 19, 11, 17, 12, 18]
 solution : [7, 4, 41]


Invert decision for 41 at level 8


New level: 9
 pending : [5, 37, 9, 30, 31, 39, 42, 43, 47, 48, 49, 40, 34, 35, 23, 25, 36, 2, 15, 13, 20, 19, 11, 17, 12, 18]
 solution : [7, 4]


Before reduction : 
 pending  : [5, 37, 9, 30, 31, 39, 42, 43, 47, 48, 49, 40, 34, 35, 23, 25, 36, 2, 15, 13, 20, 19, 11, 17, 12, 18]
 solution : [7, 4]

Essensial at level 9 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 262144), (3, -1), (4, -1), (5, 134217728), (6, -1), (7, -1), (8, -1), (9, 1048576), (10, -1), (11, 8388608), (12, 16777216), (13, 131072), (14, -1), (15, 278528), (16, -1), (17, 4194304), (18, 268435456), (19, 2097152), (20, 65536), (21, -1), (22, -1), (23, 134217728), (24, -1), (25, 1048576), (26, -1), (27, -1), (28, -1), (29, -1), (30, 1048576), (31, 16384), (32, -1), (33, -1), (34, 2097152), (35, 16384), (36, 1048576), (37, 33554432), (38, -1), (39, 16384), (40, 134217728), (41, -1), (42, 524288), (43, 524288), (44, -1), (45, -1), (46, -1), (47, 67108864), (48, 16777216), (49, 67108864), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 262144), (3, -1), (4, -1), (5, 134217728), (6, -1), (7, -1), (8, -1), (9, 1048576), (10, -1), (11, 8388608), (12, 16777216), (13, 131072), (14, -1), (15, 278528), (16, -1), (17, 4194304), (18, 268435456), (19, 2097152), (20, 65536), (21, -1), (22, -1), (23, 134217728), (24, -1), (25, 1048576), (26, -1), (27, -1), (28, -1), (29, -1), (30, 1048576), (31, 16384), (32, -1), (33, -1), (34, 4194304), (35, 32768), (36, 1048576), (37, 67108864), (38, -1), (39, 16384), (40, 134217728), (41, -1), (42, 524288), (43, 524288), (44, -1), (45, -1), (46, -1), (47, 67108864), (48, 16777216), (49, 67108864), (50, -1), (51, -1), (52, -1)]

Covered at level 9 : set()

After reduction : 
 pending  : [5, 37, 9, 30, 31, 39, 42, 43, 47, 48, 49, 40, 34, 35, 23, 25, 36, 2, 15, 13, 20, 19, 11, 17, 12, 18]
 solution : [7, 4]


Solution : [7, 4] has cost 11.


Decide in level 9 among pending : [5, 37, 9, 30, 31, 39, 42, 43, 47, 48, 49, 40, 34, 35, 23, 25, 36, 2, 15, 13, 20, 19, 11, 17, 12, 18]

Coverage : [(0, -1), (1, -1), (2, 262144), (3, -1), (4, -1), (5, 134217728), (6, -1), (7, -1), (8, -1), (9, 1048576), (10, -1), (11, 8388608), (12, 16777216), (13, 131072), (14, -1), (15, 278528), (16, -1), (17, 4194304), (18, 268435456), (19, 2097152), (20, 65536), (21, -1), (22, -1), (23, 134217728), (24, -1), (25, 1048576), (26, -1), (27, -1), (28, -1), (29, -1), (30, 1048576), (31, 16384), (32, -1), (33, -1), (34, 4194304), (35, 32768), (36, 1048576), (37, 67108864), (38, -1), (39, 16384), (40, 134217728), (41, -1), (42, 524288), (43, 524288), (44, -1), (45, -1), (46, -1), (47, 67108864), (48, 16777216), (49, 67108864), (50, -1), (51, -1), (52, -1)]

Decide 18 with phase True at level 9

After decision at level 9
 pending : [5, 37, 9, 30, 31, 39, 42, 43, 47, 48, 49, 40, 34, 35, 23, 25, 36, 2, 15, 13, 20, 19, 11, 17, 12]
 solution : [7, 4, 18]


New level: 10
 pending : [5, 37, 9, 30, 31, 39, 42, 43, 47, 48, 49, 40, 34, 35, 23, 25, 36, 2, 15, 13, 20, 19, 11, 17, 12]
 solution : [7, 4, 18]


Before reduction : 
 pending  : [5, 37, 9, 30, 31, 39, 42, 43, 47, 48, 49, 40, 34, 35, 23, 25, 36, 2, 15, 13, 20, 19, 11, 17, 12]
 solution : [7, 4, 18]

Essensial at level 10 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 262144), (3, -1), (4, -1), (5, 134217728), (6, -1), (7, -1), (8, -1), (9, 1048576), (10, -1), (11, 8388608), (12, 16777216), (13, 131072), (14, -1), (15, 278528), (16, -1), (17, 4194304), (18, 268435456), (19, 2097152), (20, 65536), (21, -1), (22, -1), (23, 134217728), (24, -1), (25, 1048576), (26, -1), (27, -1), (28, -1), (29, -1), (30, 1048576), (31, 16384), (32, -1), (33, -1), (34, 4194304), (35, 32768), (36, 1048576), (37, 67108864), (38, -1), (39, 16384), (40, 134217728), (41, -1), (42, 524288), (43, 524288), (44, -1), (45, -1), (46, -1), (47, 67108864), (48, 16777216), (49, 67108864), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 0), (3, -1), (4, -1), (5, 134217728), (6, -1), (7, -1), (8, -1), (9, 262144), (10, -1), (11, 0), (12, 0), (13, 0), (14, -1), (15, 0), (16, -1), (17, 0), (18, -1), (19, 0), (20, 0), (21, -1), (22, -1), (23, 134217728), (24, -1), (25, 0), (26, -1), (27, -1), (28, -1), (29, -1), (30, 524288), (31, 4096), (32, -1), (33, -1), (34, 4194304), (35, 8192), (36, 0), (37, 2048), (38, -1), (39, 2048), (40, 67108864), (41, -1), (42, 262144), (43, 262144), (44, -1), (45, -1), (46, -1), (47, 33554432), (48, 4194304), (49, 67108864), (50, -1), (51, -1), (52, -1)]

Covered at level 10 : {2, 36, 11, 12, 13, 15, 17, 19, 20, 25}

After reduction : 
 pending  : [5, 37, 9, 30, 31, 39, 42, 43, 47, 48, 49, 40, 34, 35, 23]
 solution : [7, 4, 18]


Before reduction : 
 pending  : [5, 37, 9, 30, 31, 39, 42, 43, 47, 48, 49, 40, 34, 35, 23]
 solution : [7, 4, 18]

Essensial at level 10 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 0), (3, -1), (4, -1), (5, 134217728), (6, -1), (7, -1), (8, -1), (9, 262144), (10, -1), (11, 0), (12, 0), (13, 0), (14, -1), (15, 0), (16, -1), (17, 0), (18, -1), (19, 0), (20, 0), (21, -1), (22, -1), (23, 134217728), (24, -1), (25, 0), (26, -1), (27, -1), (28, -1), (29, -1), (30, 524288), (31, 4096), (32, -1), (33, -1), (34, 4194304), (35, 8192), (36, 0), (37, 2048), (38, -1), (39, 2048), (40, 67108864), (41, -1), (42, 262144), (43, 262144), (44, -1), (45, -1), (46, -1), (47, 33554432), (48, 4194304), (49, 67108864), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 134217728), (6, -1), (7, -1), (8, -1), (9, 262144), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, 134217728), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, 524288), (31, 4096), (32, -1), (33, -1), (34, 4194304), (35, 8192), (36, -1), (37, 2048), (38, -1), (39, 2048), (40, 67108864), (41, -1), (42, 262144), (43, 262144), (44, -1), (45, -1), (46, -1), (47, 33554432), (48, 4194304), (49, 67108864), (50, -1), (51, -1), (52, -1)]

Covered at level 10 : set()

After reduction : 
 pending  : [5, 37, 9, 30, 31, 39, 42, 43, 47, 48, 49, 40, 34, 35, 23]
 solution : [7, 4, 18]


Solution : [7, 4, 18] has cost 18.


Before backtrack at level 10
 pending : [5, 37, 9, 30, 31, 39, 42, 43, 47, 48, 49, 40, 34, 35, 23]
 solution : [7, 4, 18]

After backtrack at level 10
 pending : [5, 37, 9, 30, 31, 39, 42, 43, 47, 48, 49, 40, 34, 35, 23, 25, 36, 2, 15, 13, 20, 19, 11, 17, 12]
 solution : [7, 4, 18]


Invert decision for 18 at level 9


New level: 10
 pending : [5, 37, 9, 30, 31, 39, 42, 43, 47, 48, 49, 40, 34, 35, 23, 25, 36, 2, 15, 13, 20, 19, 11, 17, 12]
 solution : [7, 4]


Before reduction : 
 pending  : [5, 37, 9, 30, 31, 39, 42, 43, 47, 48, 49, 40, 34, 35, 23, 25, 36, 2, 15, 13, 20, 19, 11, 17, 12]
 solution : [7, 4]

Essensial at level 10 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 134217728), (6, -1), (7, -1), (8, -1), (9, 262144), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, 134217728), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, 524288), (31, 4096), (32, -1), (33, -1), (34, 4194304), (35, 8192), (36, -1), (37, 2048), (38, -1), (39, 2048), (40, 67108864), (41, -1), (42, 262144), (43, 262144), (44, -1), (45, -1), (46, -1), (47, 33554432), (48, 4194304), (49, 67108864), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 262144), (3, -1), (4, -1), (5, 134217728), (6, -1), (7, -1), (8, -1), (9, 1048576), (10, -1), (11, 8388608), (12, 16777216), (13, 131072), (14, -1), (15, 278528), (16, -1), (17, 4194304), (18, -1), (19, 2097152), (20, 65536), (21, -1), (22, -1), (23, 134217728), (24, -1), (25, 1048576), (26, -1), (27, -1), (28, -1), (29, -1), (30, 1048576), (31, 16384), (32, -1), (33, -1), (34, 4194304), (35, 32768), (36, 1048576), (37, 67108864), (38, -1), (39, 16384), (40, 134217728), (41, -1), (42, 524288), (43, 524288), (44, -1), (45, -1), (46, -1), (47, 67108864), (48, 16777216), (49, 67108864), (50, -1), (51, -1), (52, -1)]

Covered at level 10 : set()

After reduction : 
 pending  : [5, 37, 9, 30, 31, 39, 42, 43, 47, 48, 49, 40, 34, 35, 23, 25, 36, 2, 15, 13, 20, 19, 11, 17, 12]
 solution : [7, 4]


Solution : [7, 4] has cost 11.


Decide in level 10 among pending : [5, 37, 9, 30, 31, 39, 42, 43, 47, 48, 49, 40, 34, 35, 23, 25, 36, 2, 15, 13, 20, 19, 11, 17, 12]

Coverage : [(0, -1), (1, -1), (2, 262144), (3, -1), (4, -1), (5, 134217728), (6, -1), (7, -1), (8, -1), (9, 1048576), (10, -1), (11, 8388608), (12, 16777216), (13, 131072), (14, -1), (15, 278528), (16, -1), (17, 4194304), (18, -1), (19, 2097152), (20, 65536), (21, -1), (22, -1), (23, 134217728), (24, -1), (25, 1048576), (26, -1), (27, -1), (28, -1), (29, -1), (30, 1048576), (31, 16384), (32, -1), (33, -1), (34, 4194304), (35, 32768), (36, 1048576), (37, 67108864), (38, -1), (39, 16384), (40, 134217728), (41, -1), (42, 524288), (43, 524288), (44, -1), (45, -1), (46, -1), (47, 67108864), (48, 16777216), (49, 67108864), (50, -1), (51, -1), (52, -1)]

Decide 5 with phase True at level 10

After decision at level 10
 pending : [37, 9, 30, 31, 39, 42, 43, 47, 48, 49, 40, 34, 35, 23, 25, 36, 2, 15, 13, 20, 19, 11, 17, 12]
 solution : [7, 4, 5]


New level: 11
 pending : [37, 9, 30, 31, 39, 42, 43, 47, 48, 49, 40, 34, 35, 23, 25, 36, 2, 15, 13, 20, 19, 11, 17, 12]
 solution : [7, 4, 5]


Before reduction : 
 pending  : [37, 9, 30, 31, 39, 42, 43, 47, 48, 49, 40, 34, 35, 23, 25, 36, 2, 15, 13, 20, 19, 11, 17, 12]
 solution : [7, 4, 5]

Essensial at level 11 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 262144), (3, -1), (4, -1), (5, 134217728), (6, -1), (7, -1), (8, -1), (9, 1048576), (10, -1), (11, 8388608), (12, 16777216), (13, 131072), (14, -1), (15, 278528), (16, -1), (17, 4194304), (18, -1), (19, 2097152), (20, 65536), (21, -1), (22, -1), (23, 134217728), (24, -1), (25, 1048576), (26, -1), (27, -1), (28, -1), (29, -1), (30, 1048576), (31, 16384), (32, -1), (33, -1), (34, 4194304), (35, 32768), (36, 1048576), (37, 67108864), (38, -1), (39, 16384), (40, 134217728), (41, -1), (42, 524288), (43, 524288), (44, -1), (45, -1), (46, -1), (47, 67108864), (48, 16777216), (49, 67108864), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 131072), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, 0), (10, -1), (11, 4194304), (12, 8388608), (13, 65536), (14, -1), (15, 135168), (16, -1), (17, 4194304), (18, -1), (19, 2097152), (20, 65536), (21, -1), (22, -1), (23, 0), (24, -1), (25, 524288), (26, -1), (27, -1), (28, -1), (29, -1), (30, 0), (31, 0), (32, -1), (33, -1), (34, 0), (35, 0), (36, 524288), (37, 32768), (38, -1), (39, 0), (40, 0), (41, -1), (42, 0), (43, 0), (44, -1), (45, -1), (46, -1), (47, 0), (48, 0), (49, 0), (50, -1), (51, -1), (52, -1)]

Covered at level 11 : {34, 35, 39, 40, 9, 42, 43, 47, 48, 49, 23, 30, 31}

After reduction : 
 pending  : [37, 25, 36, 2, 15, 13, 20, 19, 11, 17, 12]
 solution : [7, 4, 5]


Before reduction : 
 pending  : [37, 25, 36, 2, 15, 13, 20, 19, 11, 17, 12]
 solution : [7, 4, 5]

Essensial at level 11 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 131072), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, 0), (10, -1), (11, 4194304), (12, 8388608), (13, 65536), (14, -1), (15, 135168), (16, -1), (17, 4194304), (18, -1), (19, 2097152), (20, 65536), (21, -1), (22, -1), (23, 0), (24, -1), (25, 524288), (26, -1), (27, -1), (28, -1), (29, -1), (30, 0), (31, 0), (32, -1), (33, -1), (34, 0), (35, 0), (36, 524288), (37, 32768), (38, -1), (39, 0), (40, 0), (41, -1), (42, 0), (43, 0), (44, -1), (45, -1), (46, -1), (47, 0), (48, 0), (49, 0), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 131072), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, 4194304), (12, 8388608), (13, 65536), (14, -1), (15, 135168), (16, -1), (17, 4194304), (18, -1), (19, 2097152), (20, 65536), (21, -1), (22, -1), (23, -1), (24, -1), (25, 524288), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, 524288), (37, 32768), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 11 : set()

After reduction : 
 pending  : [37, 25, 36, 2, 15, 13, 20, 19, 11, 17, 12]
 solution : [7, 4, 5]


Solution : [7, 4, 5] has cost 15.


Decide in level 11 among pending : [37, 25, 36, 2, 15, 13, 20, 19, 11, 17, 12]

Coverage : [(0, -1), (1, -1), (2, 131072), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, 4194304), (12, 8388608), (13, 65536), (14, -1), (15, 135168), (16, -1), (17, 4194304), (18, -1), (19, 2097152), (20, 65536), (21, -1), (22, -1), (23, -1), (24, -1), (25, 524288), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, 524288), (37, 32768), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Decide 12 with phase True at level 11

After decision at level 11
 pending : [37, 25, 36, 2, 15, 13, 20, 19, 11, 17]
 solution : [7, 4, 5, 12]


New level: 12
 pending : [37, 25, 36, 2, 15, 13, 20, 19, 11, 17]
 solution : [7, 4, 5, 12]


Before reduction : 
 pending  : [37, 25, 36, 2, 15, 13, 20, 19, 11, 17]
 solution : [7, 4, 5, 12]

Essensial at level 12 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 131072), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, 4194304), (12, 8388608), (13, 65536), (14, -1), (15, 135168), (16, -1), (17, 4194304), (18, -1), (19, 2097152), (20, 65536), (21, -1), (22, -1), (23, -1), (24, -1), (25, 524288), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, 524288), (37, 32768), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 0), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, 0), (12, -1), (13, 0), (14, -1), (15, 0), (16, -1), (17, 65536), (18, -1), (19, 16384), (20, 16384), (21, -1), (22, -1), (23, -1), (24, -1), (25, 2048), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, 2048), (37, 1024), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 12 : {2, 11, 13, 15}

After reduction : 
 pending  : [37, 25, 36, 20, 19, 17]
 solution : [7, 4, 5, 12]


Before reduction : 
 pending  : [37, 25, 36, 20, 19, 17]
 solution : [7, 4, 5, 12]

Essensial at level 12 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 0), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, 0), (12, -1), (13, 0), (14, -1), (15, 0), (16, -1), (17, 65536), (18, -1), (19, 16384), (20, 16384), (21, -1), (22, -1), (23, -1), (24, -1), (25, 2048), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, 2048), (37, 1024), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, 65536), (18, -1), (19, 16384), (20, 16384), (21, -1), (22, -1), (23, -1), (24, -1), (25, 2048), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, 2048), (37, 1024), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 12 : set()

After reduction : 
 pending  : [37, 25, 36, 20, 19, 17]
 solution : [7, 4, 5, 12]


Solution : [7, 4, 5, 12] has cost 24.


Before backtrack at level 12
 pending : [37, 25, 36, 20, 19, 17]
 solution : [7, 4, 5, 12]

After backtrack at level 12
 pending : [37, 25, 36, 20, 19, 17, 2, 15, 13, 11]
 solution : [7, 4, 5, 12]


Invert decision for 12 at level 11


New level: 12
 pending : [37, 25, 36, 20, 19, 17, 2, 15, 13, 11]
 solution : [7, 4, 5]


Before reduction : 
 pending  : [37, 25, 36, 20, 19, 17, 2, 15, 13, 11]
 solution : [7, 4, 5]

Essensial at level 12 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, 65536), (18, -1), (19, 16384), (20, 16384), (21, -1), (22, -1), (23, -1), (24, -1), (25, 2048), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, 2048), (37, 1024), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 131072), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, 4194304), (12, -1), (13, 65536), (14, -1), (15, 135168), (16, -1), (17, 4194304), (18, -1), (19, 2097152), (20, 65536), (21, -1), (22, -1), (23, -1), (24, -1), (25, 524288), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, 524288), (37, 32768), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 12 : set()

After reduction : 
 pending  : [37, 25, 36, 20, 19, 17, 2, 15, 13, 11]
 solution : [7, 4, 5]


Solution : [7, 4, 5] has cost 15.


Decide in level 12 among pending : [37, 25, 36, 20, 19, 17, 2, 15, 13, 11]

Coverage : [(0, -1), (1, -1), (2, 131072), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, 4194304), (12, -1), (13, 65536), (14, -1), (15, 135168), (16, -1), (17, 4194304), (18, -1), (19, 2097152), (20, 65536), (21, -1), (22, -1), (23, -1), (24, -1), (25, 524288), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, 524288), (37, 32768), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Decide 17 with phase True at level 12

After decision at level 12
 pending : [37, 25, 36, 20, 19, 2, 15, 13, 11]
 solution : [7, 4, 5, 17]


New level: 13
 pending : [37, 25, 36, 20, 19, 2, 15, 13, 11]
 solution : [7, 4, 5, 17]


Before reduction : 
 pending  : [37, 25, 36, 20, 19, 2, 15, 13, 11]
 solution : [7, 4, 5, 17]

Essensial at level 13 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 131072), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, 4194304), (12, -1), (13, 65536), (14, -1), (15, 135168), (16, -1), (17, 4194304), (18, -1), (19, 2097152), (20, 65536), (21, -1), (22, -1), (23, -1), (24, -1), (25, 524288), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, 524288), (37, 32768), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 65536), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, 1048576), (12, -1), (13, 0), (14, -1), (15, 66048), (16, -1), (17, -1), (18, -1), (19, 0), (20, 0), (21, -1), (22, -1), (23, -1), (24, -1), (25, 131072), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, 131072), (37, 512), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 13 : {19, 20, 13}

After reduction : 
 pending  : [37, 25, 36, 2, 15, 11]
 solution : [7, 4, 5, 17]


Before reduction : 
 pending  : [37, 25, 36, 2, 15, 11]
 solution : [7, 4, 5, 17]

Essensial at level 13 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 65536), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, 1048576), (12, -1), (13, 0), (14, -1), (15, 66048), (16, -1), (17, -1), (18, -1), (19, 0), (20, 0), (21, -1), (22, -1), (23, -1), (24, -1), (25, 131072), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, 131072), (37, 512), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 65536), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, 1048576), (12, -1), (13, -1), (14, -1), (15, 66048), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, 131072), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, 131072), (37, 512), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 13 : set()

After reduction : 
 pending  : [37, 25, 36, 2, 15, 11]
 solution : [7, 4, 5, 17]


Solution : [7, 4, 5, 17] has cost 22.


Before backtrack at level 13
 pending : [37, 25, 36, 2, 15, 11]
 solution : [7, 4, 5, 17]

After backtrack at level 13
 pending : [37, 25, 36, 2, 15, 11, 20, 19, 13]
 solution : [7, 4, 5, 17]


Invert decision for 17 at level 12


New level: 13
 pending : [37, 25, 36, 2, 15, 11, 20, 19, 13]
 solution : [7, 4, 5]


Before reduction : 
 pending  : [37, 25, 36, 2, 15, 11, 20, 19, 13]
 solution : [7, 4, 5]

Essensial at level 13 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 65536), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, 1048576), (12, -1), (13, -1), (14, -1), (15, 66048), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, 131072), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, 131072), (37, 512), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 131072), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, 4194304), (12, -1), (13, 65536), (14, -1), (15, 135168), (16, -1), (17, -1), (18, -1), (19, 2097152), (20, 65536), (21, -1), (22, -1), (23, -1), (24, -1), (25, 524288), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, 524288), (37, 32768), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 13 : set()

After reduction : 
 pending  : [37, 25, 36, 2, 15, 11, 20, 19, 13]
 solution : [7, 4, 5]


Solution : [7, 4, 5] has cost 15.


Decide in level 13 among pending : [37, 25, 36, 2, 15, 11, 20, 19, 13]

Coverage : [(0, -1), (1, -1), (2, 131072), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, 4194304), (12, -1), (13, 65536), (14, -1), (15, 135168), (16, -1), (17, -1), (18, -1), (19, 2097152), (20, 65536), (21, -1), (22, -1), (23, -1), (24, -1), (25, 524288), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, 524288), (37, 32768), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Decide 11 with phase True at level 13

After decision at level 13
 pending : [37, 25, 36, 2, 15, 20, 19, 13]
 solution : [7, 4, 5, 11]


New level: 14
 pending : [37, 25, 36, 2, 15, 20, 19, 13]
 solution : [7, 4, 5, 11]


Before reduction : 
 pending  : [37, 25, 36, 2, 15, 20, 19, 13]
 solution : [7, 4, 5, 11]

Essensial at level 14 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 131072), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, 4194304), (12, -1), (13, 65536), (14, -1), (15, 135168), (16, -1), (17, -1), (18, -1), (19, 2097152), (20, 65536), (21, -1), (22, -1), (23, -1), (24, -1), (25, 524288), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, 524288), (37, 32768), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 0), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, 0), (14, -1), (15, 0), (16, -1), (17, -1), (18, -1), (19, 16384), (20, 16384), (21, -1), (22, -1), (23, -1), (24, -1), (25, 2048), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, 2048), (37, 1024), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 14 : {2, 13, 15}

After reduction : 
 pending  : [37, 25, 36, 20, 19]
 solution : [7, 4, 5, 11]


Before reduction : 
 pending  : [37, 25, 36, 20, 19]
 solution : [7, 4, 5, 11]

Essensial at level 14 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 0), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, 0), (14, -1), (15, 0), (16, -1), (17, -1), (18, -1), (19, 16384), (20, 16384), (21, -1), (22, -1), (23, -1), (24, -1), (25, 2048), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, 2048), (37, 1024), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, 16384), (20, 16384), (21, -1), (22, -1), (23, -1), (24, -1), (25, 2048), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, 2048), (37, 1024), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 14 : set()

After reduction : 
 pending  : [37, 25, 36, 20, 19]
 solution : [7, 4, 5, 11]


Solution : [7, 4, 5, 11] has cost 24.


Before backtrack at level 14
 pending : [37, 25, 36, 20, 19]
 solution : [7, 4, 5, 11]

After backtrack at level 14
 pending : [37, 25, 36, 20, 19, 2, 15, 13]
 solution : [7, 4, 5, 11]


Invert decision for 11 at level 13


New level: 14
 pending : [37, 25, 36, 20, 19, 2, 15, 13]
 solution : [7, 4, 5]


Before reduction : 
 pending  : [37, 25, 36, 20, 19, 2, 15, 13]
 solution : [7, 4, 5]

Essensial at level 14 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, 16384), (20, 16384), (21, -1), (22, -1), (23, -1), (24, -1), (25, 2048), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, 2048), (37, 1024), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 131072), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, 65536), (14, -1), (15, 135168), (16, -1), (17, -1), (18, -1), (19, 2097152), (20, 65536), (21, -1), (22, -1), (23, -1), (24, -1), (25, 524288), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, 524288), (37, 32768), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 14 : set()

After reduction : 
 pending  : [37, 25, 36, 20, 19, 2, 15, 13]
 solution : [7, 4, 5]


Solution : [7, 4, 5] has cost 15.


Decide in level 14 among pending : [37, 25, 36, 20, 19, 2, 15, 13]

Coverage : [(0, -1), (1, -1), (2, 131072), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, 65536), (14, -1), (15, 135168), (16, -1), (17, -1), (18, -1), (19, 2097152), (20, 65536), (21, -1), (22, -1), (23, -1), (24, -1), (25, 524288), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, 524288), (37, 32768), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Decide 19 with phase True at level 14

After decision at level 14
 pending : [37, 25, 36, 20, 2, 15, 13]
 solution : [7, 4, 5, 19]


New level: 15
 pending : [37, 25, 36, 20, 2, 15, 13]
 solution : [7, 4, 5, 19]


Before reduction : 
 pending  : [37, 25, 36, 20, 2, 15, 13]
 solution : [7, 4, 5, 19]

Essensial at level 15 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 131072), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, 65536), (14, -1), (15, 135168), (16, -1), (17, -1), (18, -1), (19, 2097152), (20, 65536), (21, -1), (22, -1), (23, -1), (24, -1), (25, 524288), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, 524288), (37, 32768), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 65536), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, 0), (14, -1), (15, 66048), (16, -1), (17, -1), (18, -1), (19, -1), (20, 0), (21, -1), (22, -1), (23, -1), (24, -1), (25, 131072), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, 131072), (37, 512), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 15 : {20, 13}

After reduction : 
 pending  : [37, 25, 36, 2, 15]
 solution : [7, 4, 5, 19]


Before reduction : 
 pending  : [37, 25, 36, 2, 15]
 solution : [7, 4, 5, 19]

Essensial at level 15 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 65536), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, 0), (14, -1), (15, 66048), (16, -1), (17, -1), (18, -1), (19, -1), (20, 0), (21, -1), (22, -1), (23, -1), (24, -1), (25, 131072), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, 131072), (37, 512), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 65536), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, 66048), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, 131072), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, 131072), (37, 512), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 15 : set()

After reduction : 
 pending  : [37, 25, 36, 2, 15]
 solution : [7, 4, 5, 19]


Solution : [7, 4, 5, 19] has cost 22.


Before backtrack at level 15
 pending : [37, 25, 36, 2, 15]
 solution : [7, 4, 5, 19]

After backtrack at level 15
 pending : [37, 25, 36, 2, 15, 20, 13]
 solution : [7, 4, 5, 19]


Invert decision for 19 at level 14


New level: 15
 pending : [37, 25, 36, 2, 15, 20, 13]
 solution : [7, 4, 5]


Before reduction : 
 pending  : [37, 25, 36, 2, 15, 20, 13]
 solution : [7, 4, 5]

Essensial at level 15 : {20}

Before removed
 coverage : [(0, -1), (1, -1), (2, 65536), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, 66048), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, 131072), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, 131072), (37, 512), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 131072), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, 32768), (14, -1), (15, 135168), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, 524288), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, 524288), (37, 32768), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 15 : set()

After reduction : 
 pending  : [37, 25, 36, 2, 15, 13]
 solution : [7, 4, 5, 20]


Before reduction : 
 pending  : [37, 25, 36, 2, 15, 13]
 solution : [7, 4, 5, 20]

Essensial at level 15 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 131072), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, 32768), (14, -1), (15, 135168), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, 524288), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, 524288), (37, 32768), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 131072), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, 32768), (14, -1), (15, 135168), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, 524288), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, 524288), (37, 32768), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 15 : set()

After reduction : 
 pending  : [37, 25, 36, 2, 15, 13]
 solution : [7, 4, 5, 20]


Solution : [7, 4, 5, 20] has cost 22.


Before backtrack at level 15
 pending : [37, 25, 36, 2, 15, 13]
 solution : [7, 4, 5, 20]

After backtrack at level 15
 pending : [37, 25, 36, 2, 15, 13, 20]
 solution : [7, 4, 5]


Before backtrack at level 14
 pending : [37, 25, 36, 2, 15, 13, 20]
 solution : [7, 4, 5]

After backtrack at level 14
 pending : [37, 25, 36, 2, 15, 13, 20, 19]
 solution : [7, 4, 5]


Before backtrack at level 13
 pending : [37, 25, 36, 2, 15, 13, 20, 19]
 solution : [7, 4, 5]

After backtrack at level 13
 pending : [37, 25, 36, 2, 15, 13, 20, 19, 11]
 solution : [7, 4, 5]


Before backtrack at level 12
 pending : [37, 25, 36, 2, 15, 13, 20, 19, 11]
 solution : [7, 4, 5]

After backtrack at level 12
 pending : [37, 25, 36, 2, 15, 13, 20, 19, 11, 17]
 solution : [7, 4, 5]


Before backtrack at level 11
 pending : [37, 25, 36, 2, 15, 13, 20, 19, 11, 17]
 solution : [7, 4, 5]

After backtrack at level 11
 pending : [37, 25, 36, 2, 15, 13, 20, 19, 11, 17, 9, 30, 31, 39, 42, 43, 47, 48, 49, 40, 34, 35, 23, 12]
 solution : [7, 4, 5]


Invert decision for 5 at level 10


New level: 11
 pending : [37, 25, 36, 2, 15, 13, 20, 19, 11, 17, 9, 30, 31, 39, 42, 43, 47, 48, 49, 40, 34, 35, 23, 12]
 solution : [7, 4]


Before reduction : 
 pending  : [37, 25, 36, 2, 15, 13, 20, 19, 11, 17, 9, 30, 31, 39, 42, 43, 47, 48, 49, 40, 34, 35, 23, 12]
 solution : [7, 4]

Essensial at level 11 : {23}

Before removed
 coverage : [(0, -1), (1, -1), (2, 131072), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, 32768), (14, -1), (15, 135168), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, 524288), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, 524288), (37, 32768), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 131072), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, 0), (10, -1), (11, 4194304), (12, 8388608), (13, 65536), (14, -1), (15, 135168), (16, -1), (17, 4194304), (18, -1), (19, 2097152), (20, 65536), (21, -1), (22, -1), (23, -1), (24, -1), (25, 524288), (26, -1), (27, -1), (28, -1), (29, -1), (30, 0), (31, 0), (32, -1), (33, -1), (34, 0), (35, 0), (36, 524288), (37, 262144), (38, -1), (39, 0), (40, 0), (41, -1), (42, 0), (43, 0), (44, -1), (45, -1), (46, -1), (47, 0), (48, 0), (49, 0), (50, -1), (51, -1), (52, -1)]

Covered at level 11 : {34, 35, 39, 40, 9, 42, 43, 47, 48, 49, 30, 31}

After reduction : 
 pending  : [37, 25, 36, 2, 15, 13, 20, 19, 11, 17, 12]
 solution : [7, 4, 23]


Before reduction : 
 pending  : [37, 25, 36, 2, 15, 13, 20, 19, 11, 17, 12]
 solution : [7, 4, 23]

Essensial at level 11 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 131072), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, 0), (10, -1), (11, 4194304), (12, 8388608), (13, 65536), (14, -1), (15, 135168), (16, -1), (17, 4194304), (18, -1), (19, 2097152), (20, 65536), (21, -1), (22, -1), (23, -1), (24, -1), (25, 524288), (26, -1), (27, -1), (28, -1), (29, -1), (30, 0), (31, 0), (32, -1), (33, -1), (34, 0), (35, 0), (36, 524288), (37, 262144), (38, -1), (39, 0), (40, 0), (41, -1), (42, 0), (43, 0), (44, -1), (45, -1), (46, -1), (47, 0), (48, 0), (49, 0), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 131072), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, 4194304), (12, 8388608), (13, 65536), (14, -1), (15, 135168), (16, -1), (17, 4194304), (18, -1), (19, 2097152), (20, 65536), (21, -1), (22, -1), (23, -1), (24, -1), (25, 524288), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, 524288), (37, 262144), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 11 : set()

After reduction : 
 pending  : [37, 25, 36, 2, 15, 13, 20, 19, 11, 17, 12]
 solution : [7, 4, 23]


Solution : [7, 4, 23] has cost 18.


Before backtrack at level 11
 pending : [37, 25, 36, 2, 15, 13, 20, 19, 11, 17, 12]
 solution : [7, 4, 23]

After backtrack at level 11
 pending : [37, 25, 36, 2, 15, 13, 20, 19, 11, 17, 12, 23, 9, 30, 31, 39, 42, 43, 47, 48, 49, 40, 34, 35]
 solution : [7, 4]


Before backtrack at level 10
 pending : [37, 25, 36, 2, 15, 13, 20, 19, 11, 17, 12, 23, 9, 30, 31, 39, 42, 43, 47, 48, 49, 40, 34, 35]
 solution : [7, 4]

After backtrack at level 10
 pending : [37, 25, 36, 2, 15, 13, 20, 19, 11, 17, 12, 23, 9, 30, 31, 39, 42, 43, 47, 48, 49, 40, 34, 35, 5]
 solution : [7, 4]


Before backtrack at level 9
 pending : [37, 25, 36, 2, 15, 13, 20, 19, 11, 17, 12, 23, 9, 30, 31, 39, 42, 43, 47, 48, 49, 40, 34, 35, 5]
 solution : [7, 4]

After backtrack at level 9
 pending : [37, 25, 36, 2, 15, 13, 20, 19, 11, 17, 12, 23, 9, 30, 31, 39, 42, 43, 47, 48, 49, 40, 34, 35, 5, 18]
 solution : [7, 4]


Before backtrack at level 8
 pending : [37, 25, 36, 2, 15, 13, 20, 19, 11, 17, 12, 23, 9, 30, 31, 39, 42, 43, 47, 48, 49, 40, 34, 35, 5, 18]
 solution : [7, 4]

After backtrack at level 8
 pending : [37, 25, 36, 2, 15, 13, 20, 19, 11, 17, 12, 23, 9, 30, 31, 39, 42, 43, 47, 48, 49, 40, 34, 35, 5, 18, 41]
 solution : [7, 4]


Before backtrack at level 7
 pending : [37, 25, 36, 2, 15, 13, 20, 19, 11, 17, 12, 23, 9, 30, 31, 39, 42, 43, 47, 48, 49, 40, 34, 35, 5, 18, 41]
 solution : [7, 4]

After backtrack at level 7
 pending : [37, 25, 36, 2, 15, 13, 20, 19, 11, 17, 12, 23, 9, 30, 31, 39, 42, 43, 47, 48, 49, 40, 34, 35, 5, 18, 41, 16]
 solution : [7, 4]


Before backtrack at level 6
 pending : [37, 25, 36, 2, 15, 13, 20, 19, 11, 17, 12, 23, 9, 30, 31, 39, 42, 43, 47, 48, 49, 40, 34, 35, 5, 18, 41, 16]
 solution : [7, 4]

After backtrack at level 6
 pending : [37, 25, 36, 2, 15, 13, 20, 19, 11, 17, 12, 23, 9, 30, 31, 39, 42, 43, 47, 48, 49, 40, 34, 35, 5, 18, 41, 16, 26]
 solution : [7, 4]


Before backtrack at level 5
 pending : [37, 25, 36, 2, 15, 13, 20, 19, 11, 17, 12, 23, 9, 30, 31, 39, 42, 43, 47, 48, 49, 40, 34, 35, 5, 18, 41, 16, 26]
 solution : [7, 4]

After backtrack at level 5
 pending : [37, 25, 36, 2, 15, 13, 20, 19, 11, 17, 12, 23, 9, 30, 31, 39, 42, 43, 47, 48, 49, 40, 34, 35, 5, 18, 41, 16, 26, 27]
 solution : [7, 4]


Before backtrack at level 4
 pending : [37, 25, 36, 2, 15, 13, 20, 19, 11, 17, 12, 23, 9, 30, 31, 39, 42, 43, 47, 48, 49, 40, 34, 35, 5, 18, 41, 16, 26, 27]
 solution : [7, 4]

After backtrack at level 4
 pending : [37, 25, 36, 2, 15, 13, 20, 19, 11, 17, 12, 23, 9, 30, 31, 39, 42, 43, 47, 48, 49, 40, 34, 35, 5, 18, 41, 16, 26, 27, 33]
 solution : [7, 4]


Before backtrack at level 3
 pending : [37, 25, 36, 2, 15, 13, 20, 19, 11, 17, 12, 23, 9, 30, 31, 39, 42, 43, 47, 48, 49, 40, 34, 35, 5, 18, 41, 16, 26, 27, 33]
 solution : [7, 4]

After backtrack at level 3
 pending : [37, 25, 36, 2, 15, 13, 20, 19, 11, 17, 12, 23, 9, 30, 31, 39, 42, 43, 47, 48, 49, 40, 34, 35, 5, 18, 41, 16, 26, 27, 33, 28]
 solution : [7, 4]


Invert decision for 4 at level 2


New level: 3
 pending : [37, 25, 36, 2, 15, 13, 20, 19, 11, 17, 12, 23, 9, 30, 31, 39, 42, 43, 47, 48, 49, 40, 34, 35, 5, 18, 41, 16, 26, 27, 33, 28]
 solution : [7]


Before reduction : 
 pending  : [37, 25, 36, 2, 15, 13, 20, 19, 11, 17, 12, 23, 9, 30, 31, 39, 42, 43, 47, 48, 49, 40, 34, 35, 5, 18, 41, 16, 26, 27, 33, 28]
 solution : [7]

Essensial at level 3 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 131072), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, 4194304), (12, 8388608), (13, 65536), (14, -1), (15, 135168), (16, -1), (17, 4194304), (18, -1), (19, 2097152), (20, 65536), (21, -1), (22, -1), (23, -1), (24, -1), (25, 524288), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, 524288), (37, 262144), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 1048576), (3, -1), (4, -1), (5, 134217728), (6, -1), (7, -1), (8, -1), (9, 1048576), (10, -1), (11, 33554432), (12, 67108864), (13, 524288), (14, -1), (15, 1114112), (16, 2147483648), (17, 16777216), (18, 1073741824), (19, 8388608), (20, 262144), (21, -1), (22, -1), (23, 134217728), (24, -1), (25, 4194304), (26, 4294967296), (27, 1073741824), (28, 4294967296), (29, -1), (30, 1048576), (31, 16384), (32, -1), (33, 2147483648), (34, 4194304), (35, 32768), (36, 4194304), (37, 268435456), (38, -1), (39, 16384), (40, 134217728), (41, 1073741824), (42, 524288), (43, 524288), (44, -1), (45, -1), (46, -1), (47, 67108864), (48, 16777216), (49, 67108864), (50, -1), (51, -1), (52, -1)]

Covered at level 3 : set()

After reduction : 
 pending  : [37, 25, 36, 2, 15, 13, 20, 19, 11, 17, 12, 23, 9, 30, 31, 39, 42, 43, 47, 48, 49, 40, 34, 35, 5, 18, 41, 16, 26, 27, 33, 28]
 solution : [7]


Solution : [7] has cost 6.


Decide in level 3 among pending : [37, 25, 36, 2, 15, 13, 20, 19, 11, 17, 12, 23, 9, 30, 31, 39, 42, 43, 47, 48, 49, 40, 34, 35, 5, 18, 41, 16, 26, 27, 33, 28]

Coverage : [(0, -1), (1, -1), (2, 1048576), (3, -1), (4, -1), (5, 134217728), (6, -1), (7, -1), (8, -1), (9, 1048576), (10, -1), (11, 33554432), (12, 67108864), (13, 524288), (14, -1), (15, 1114112), (16, 2147483648), (17, 16777216), (18, 1073741824), (19, 8388608), (20, 262144), (21, -1), (22, -1), (23, 134217728), (24, -1), (25, 4194304), (26, 4294967296), (27, 1073741824), (28, 4294967296), (29, -1), (30, 1048576), (31, 16384), (32, -1), (33, 2147483648), (34, 4194304), (35, 32768), (36, 4194304), (37, 268435456), (38, -1), (39, 16384), (40, 134217728), (41, 1073741824), (42, 524288), (43, 524288), (44, -1), (45, -1), (46, -1), (47, 67108864), (48, 16777216), (49, 67108864), (50, -1), (51, -1), (52, -1)]

Decide 26 with phase True at level 3

After decision at level 3
 pending : [37, 25, 36, 2, 15, 13, 20, 19, 11, 17, 12, 23, 9, 30, 31, 39, 42, 43, 47, 48, 49, 40, 34, 35, 5, 18, 41, 16, 27, 33, 28]
 solution : [7, 26]


New level: 4
 pending : [37, 25, 36, 2, 15, 13, 20, 19, 11, 17, 12, 23, 9, 30, 31, 39, 42, 43, 47, 48, 49, 40, 34, 35, 5, 18, 41, 16, 27, 33, 28]
 solution : [7, 26]


Before reduction : 
 pending  : [37, 25, 36, 2, 15, 13, 20, 19, 11, 17, 12, 23, 9, 30, 31, 39, 42, 43, 47, 48, 49, 40, 34, 35, 5, 18, 41, 16, 27, 33, 28]
 solution : [7, 26]

Essensial at level 4 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 1048576), (3, -1), (4, -1), (5, 134217728), (6, -1), (7, -1), (8, -1), (9, 1048576), (10, -1), (11, 33554432), (12, 67108864), (13, 524288), (14, -1), (15, 1114112), (16, 2147483648), (17, 16777216), (18, 1073741824), (19, 8388608), (20, 262144), (21, -1), (22, -1), (23, 134217728), (24, -1), (25, 4194304), (26, 4294967296), (27, 1073741824), (28, 4294967296), (29, -1), (30, 1048576), (31, 16384), (32, -1), (33, 2147483648), (34, 4194304), (35, 32768), (36, 4194304), (37, 268435456), (38, -1), (39, 16384), (40, 134217728), (41, 1073741824), (42, 524288), (43, 524288), (44, -1), (45, -1), (46, -1), (47, 67108864), (48, 16777216), (49, 67108864), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 0), (3, -1), (4, -1), (5, 134217728), (6, -1), (7, -1), (8, -1), (9, 262144), (10, -1), (11, 0), (12, 0), (13, 0), (14, -1), (15, 0), (16, 0), (17, 0), (18, 0), (19, 0), (20, 0), (21, -1), (22, -1), (23, 134217728), (24, -1), (25, 0), (26, -1), (27, 1073741824), (28, 4294967296), (29, -1), (30, 524288), (31, 4096), (32, -1), (33, 2147483648), (34, 4194304), (35, 8192), (36, 0), (37, 2048), (38, -1), (39, 2048), (40, 67108864), (41, 4096), (42, 131072), (43, 131072), (44, -1), (45, -1), (46, -1), (47, 33554432), (48, 4194304), (49, 16777216), (50, -1), (51, -1), (52, -1)]

Covered at level 4 : {2, 36, 11, 12, 13, 15, 16, 17, 18, 19, 20, 25}

After reduction : 
 pending  : [37, 23, 9, 30, 31, 39, 42, 43, 47, 48, 49, 40, 34, 35, 5, 41, 27, 33, 28]
 solution : [7, 26]


Before reduction : 
 pending  : [37, 23, 9, 30, 31, 39, 42, 43, 47, 48, 49, 40, 34, 35, 5, 41, 27, 33, 28]
 solution : [7, 26]

Essensial at level 4 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 0), (3, -1), (4, -1), (5, 134217728), (6, -1), (7, -1), (8, -1), (9, 262144), (10, -1), (11, 0), (12, 0), (13, 0), (14, -1), (15, 0), (16, 0), (17, 0), (18, 0), (19, 0), (20, 0), (21, -1), (22, -1), (23, 134217728), (24, -1), (25, 0), (26, -1), (27, 1073741824), (28, 4294967296), (29, -1), (30, 524288), (31, 4096), (32, -1), (33, 2147483648), (34, 4194304), (35, 8192), (36, 0), (37, 2048), (38, -1), (39, 2048), (40, 67108864), (41, 4096), (42, 131072), (43, 131072), (44, -1), (45, -1), (46, -1), (47, 33554432), (48, 4194304), (49, 16777216), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 134217728), (6, -1), (7, -1), (8, -1), (9, 262144), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, 134217728), (24, -1), (25, -1), (26, -1), (27, 1073741824), (28, 4294967296), (29, -1), (30, 524288), (31, 4096), (32, -1), (33, 2147483648), (34, 4194304), (35, 8192), (36, -1), (37, 2048), (38, -1), (39, 2048), (40, 67108864), (41, 4096), (42, 131072), (43, 131072), (44, -1), (45, -1), (46, -1), (47, 33554432), (48, 4194304), (49, 16777216), (50, -1), (51, -1), (52, -1)]

Covered at level 4 : set()

After reduction : 
 pending  : [37, 23, 9, 30, 31, 39, 42, 43, 47, 48, 49, 40, 34, 35, 5, 41, 27, 33, 28]
 solution : [7, 26]


Solution : [7, 26] has cost 10.


Decide in level 4 among pending : [37, 23, 9, 30, 31, 39, 42, 43, 47, 48, 49, 40, 34, 35, 5, 41, 27, 33, 28]

Coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 134217728), (6, -1), (7, -1), (8, -1), (9, 262144), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, 134217728), (24, -1), (25, -1), (26, -1), (27, 1073741824), (28, 4294967296), (29, -1), (30, 524288), (31, 4096), (32, -1), (33, 2147483648), (34, 4194304), (35, 8192), (36, -1), (37, 2048), (38, -1), (39, 2048), (40, 67108864), (41, 4096), (42, 131072), (43, 131072), (44, -1), (45, -1), (46, -1), (47, 33554432), (48, 4194304), (49, 16777216), (50, -1), (51, -1), (52, -1)]

Decide 28 with phase True at level 4

After decision at level 4
 pending : [37, 23, 9, 30, 31, 39, 42, 43, 47, 48, 49, 40, 34, 35, 5, 41, 27, 33]
 solution : [7, 26, 28]


New level: 5
 pending : [37, 23, 9, 30, 31, 39, 42, 43, 47, 48, 49, 40, 34, 35, 5, 41, 27, 33]
 solution : [7, 26, 28]


Before reduction : 
 pending  : [37, 23, 9, 30, 31, 39, 42, 43, 47, 48, 49, 40, 34, 35, 5, 41, 27, 33]
 solution : [7, 26, 28]

Essensial at level 5 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 134217728), (6, -1), (7, -1), (8, -1), (9, 262144), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, 134217728), (24, -1), (25, -1), (26, -1), (27, 1073741824), (28, 4294967296), (29, -1), (30, 524288), (31, 4096), (32, -1), (33, 2147483648), (34, 4194304), (35, 8192), (36, -1), (37, 2048), (38, -1), (39, 2048), (40, 67108864), (41, 4096), (42, 131072), (43, 131072), (44, -1), (45, -1), (46, -1), (47, 33554432), (48, 4194304), (49, 16777216), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 134217728), (6, -1), (7, -1), (8, -1), (9, 262144), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, 134217728), (24, -1), (25, -1), (26, -1), (27, 536870912), (28, -1), (29, -1), (30, 524288), (31, 4096), (32, -1), (33, 1073741824), (34, 2097152), (35, 4096), (36, -1), (37, 2048), (38, -1), (39, 2048), (40, 67108864), (41, 2048), (42, 131072), (43, 131072), (44, -1), (45, -1), (46, -1), (47, 33554432), (48, 4194304), (49, 16777216), (50, -1), (51, -1), (52, -1)]

Covered at level 5 : set()

After reduction : 
 pending  : [37, 23, 9, 30, 31, 39, 42, 43, 47, 48, 49, 40, 34, 35, 5, 41, 27, 33]
 solution : [7, 26, 28]


Solution : [7, 26, 28] has cost 14.


Decide in level 5 among pending : [37, 23, 9, 30, 31, 39, 42, 43, 47, 48, 49, 40, 34, 35, 5, 41, 27, 33]

Coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 134217728), (6, -1), (7, -1), (8, -1), (9, 262144), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, 134217728), (24, -1), (25, -1), (26, -1), (27, 536870912), (28, -1), (29, -1), (30, 524288), (31, 4096), (32, -1), (33, 1073741824), (34, 2097152), (35, 4096), (36, -1), (37, 2048), (38, -1), (39, 2048), (40, 67108864), (41, 2048), (42, 131072), (43, 131072), (44, -1), (45, -1), (46, -1), (47, 33554432), (48, 4194304), (49, 16777216), (50, -1), (51, -1), (52, -1)]

Decide 33 with phase True at level 5

After decision at level 5
 pending : [37, 23, 9, 30, 31, 39, 42, 43, 47, 48, 49, 40, 34, 35, 5, 41, 27]
 solution : [7, 26, 28, 33]


New level: 6
 pending : [37, 23, 9, 30, 31, 39, 42, 43, 47, 48, 49, 40, 34, 35, 5, 41, 27]
 solution : [7, 26, 28, 33]


Before reduction : 
 pending  : [37, 23, 9, 30, 31, 39, 42, 43, 47, 48, 49, 40, 34, 35, 5, 41, 27]
 solution : [7, 26, 28, 33]

Essensial at level 6 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 134217728), (6, -1), (7, -1), (8, -1), (9, 262144), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, 134217728), (24, -1), (25, -1), (26, -1), (27, 536870912), (28, -1), (29, -1), (30, 524288), (31, 4096), (32, -1), (33, 1073741824), (34, 2097152), (35, 4096), (36, -1), (37, 2048), (38, -1), (39, 2048), (40, 67108864), (41, 2048), (42, 131072), (43, 131072), (44, -1), (45, -1), (46, -1), (47, 33554432), (48, 4194304), (49, 16777216), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 134217728), (6, -1), (7, -1), (8, -1), (9, 65536), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, 134217728), (24, -1), (25, -1), (26, -1), (27, 2048), (28, -1), (29, -1), (30, 131072), (31, 1024), (32, -1), (33, -1), (34, 0), (35, 0), (36, -1), (37, 512), (38, -1), (39, 512), (40, 16777216), (41, 0), (42, 32768), (43, 32768), (44, -1), (45, -1), (46, -1), (47, 8388608), (48, 1048576), (49, 4194304), (50, -1), (51, -1), (52, -1)]

Covered at level 6 : {41, 34, 35}

After reduction : 
 pending  : [37, 23, 9, 30, 31, 39, 42, 43, 47, 48, 49, 40, 5, 27]
 solution : [7, 26, 28, 33]


Before reduction : 
 pending  : [37, 23, 9, 30, 31, 39, 42, 43, 47, 48, 49, 40, 5, 27]
 solution : [7, 26, 28, 33]

Essensial at level 6 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 134217728), (6, -1), (7, -1), (8, -1), (9, 65536), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, 134217728), (24, -1), (25, -1), (26, -1), (27, 2048), (28, -1), (29, -1), (30, 131072), (31, 1024), (32, -1), (33, -1), (34, 0), (35, 0), (36, -1), (37, 512), (38, -1), (39, 512), (40, 16777216), (41, 0), (42, 32768), (43, 32768), (44, -1), (45, -1), (46, -1), (47, 8388608), (48, 1048576), (49, 4194304), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 134217728), (6, -1), (7, -1), (8, -1), (9, 65536), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, 134217728), (24, -1), (25, -1), (26, -1), (27, 2048), (28, -1), (29, -1), (30, 131072), (31, 1024), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, 512), (38, -1), (39, 512), (40, 16777216), (41, -1), (42, 32768), (43, 32768), (44, -1), (45, -1), (46, -1), (47, 8388608), (48, 1048576), (49, 4194304), (50, -1), (51, -1), (52, -1)]

Covered at level 6 : set()

After reduction : 
 pending  : [37, 23, 9, 30, 31, 39, 42, 43, 47, 48, 49, 40, 5, 27]
 solution : [7, 26, 28, 33]


Solution : [7, 26, 28, 33] has cost 27.


Before backtrack at level 6
 pending : [37, 23, 9, 30, 31, 39, 42, 43, 47, 48, 49, 40, 5, 27]
 solution : [7, 26, 28, 33]

After backtrack at level 6
 pending : [37, 23, 9, 30, 31, 39, 42, 43, 47, 48, 49, 40, 5, 27, 34, 35, 41]
 solution : [7, 26, 28, 33]


Invert decision for 33 at level 5


New level: 6
 pending : [37, 23, 9, 30, 31, 39, 42, 43, 47, 48, 49, 40, 5, 27, 34, 35, 41]
 solution : [7, 26, 28]


Before reduction : 
 pending  : [37, 23, 9, 30, 31, 39, 42, 43, 47, 48, 49, 40, 5, 27, 34, 35, 41]
 solution : [7, 26, 28]

Essensial at level 6 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 134217728), (6, -1), (7, -1), (8, -1), (9, 65536), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, 134217728), (24, -1), (25, -1), (26, -1), (27, 2048), (28, -1), (29, -1), (30, 131072), (31, 1024), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, 512), (38, -1), (39, 512), (40, 16777216), (41, -1), (42, 32768), (43, 32768), (44, -1), (45, -1), (46, -1), (47, 8388608), (48, 1048576), (49, 4194304), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 134217728), (6, -1), (7, -1), (8, -1), (9, 262144), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, 134217728), (24, -1), (25, -1), (26, -1), (27, 536870912), (28, -1), (29, -1), (30, 524288), (31, 4096), (32, -1), (33, -1), (34, 2097152), (35, 4096), (36, -1), (37, 2048), (38, -1), (39, 2048), (40, 67108864), (41, 2048), (42, 131072), (43, 131072), (44, -1), (45, -1), (46, -1), (47, 33554432), (48, 4194304), (49, 16777216), (50, -1), (51, -1), (52, -1)]

Covered at level 6 : set()

After reduction : 
 pending  : [37, 23, 9, 30, 31, 39, 42, 43, 47, 48, 49, 40, 5, 27, 34, 35, 41]
 solution : [7, 26, 28]


Solution : [7, 26, 28] has cost 14.


Decide in level 6 among pending : [37, 23, 9, 30, 31, 39, 42, 43, 47, 48, 49, 40, 5, 27, 34, 35, 41]

Coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 134217728), (6, -1), (7, -1), (8, -1), (9, 262144), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, 134217728), (24, -1), (25, -1), (26, -1), (27, 536870912), (28, -1), (29, -1), (30, 524288), (31, 4096), (32, -1), (33, -1), (34, 2097152), (35, 4096), (36, -1), (37, 2048), (38, -1), (39, 2048), (40, 67108864), (41, 2048), (42, 131072), (43, 131072), (44, -1), (45, -1), (46, -1), (47, 33554432), (48, 4194304), (49, 16777216), (50, -1), (51, -1), (52, -1)]

Decide 27 with phase True at level 6

After decision at level 6
 pending : [37, 23, 9, 30, 31, 39, 42, 43, 47, 48, 49, 40, 5, 34, 35, 41]
 solution : [7, 26, 28, 27]


New level: 7
 pending : [37, 23, 9, 30, 31, 39, 42, 43, 47, 48, 49, 40, 5, 34, 35, 41]
 solution : [7, 26, 28, 27]


Before reduction : 
 pending  : [37, 23, 9, 30, 31, 39, 42, 43, 47, 48, 49, 40, 5, 34, 35, 41]
 solution : [7, 26, 28, 27]

Essensial at level 7 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 134217728), (6, -1), (7, -1), (8, -1), (9, 262144), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, 134217728), (24, -1), (25, -1), (26, -1), (27, 536870912), (28, -1), (29, -1), (30, 524288), (31, 4096), (32, -1), (33, -1), (34, 2097152), (35, 4096), (36, -1), (37, 2048), (38, -1), (39, 2048), (40, 67108864), (41, 2048), (42, 131072), (43, 131072), (44, -1), (45, -1), (46, -1), (47, 33554432), (48, 4194304), (49, 16777216), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 33554432), (6, -1), (7, -1), (8, -1), (9, 65536), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, 33554432), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, 131072), (31, 1024), (32, -1), (33, -1), (34, 0), (35, 0), (36, -1), (37, 512), (38, -1), (39, 512), (40, 33554432), (41, 0), (42, 32768), (43, 32768), (44, -1), (45, -1), (46, -1), (47, 8388608), (48, 1048576), (49, 8388608), (50, -1), (51, -1), (52, -1)]

Covered at level 7 : {41, 34, 35}

After reduction : 
 pending  : [37, 23, 9, 30, 31, 39, 42, 43, 47, 48, 49, 40, 5]
 solution : [7, 26, 28, 27]


Before reduction : 
 pending  : [37, 23, 9, 30, 31, 39, 42, 43, 47, 48, 49, 40, 5]
 solution : [7, 26, 28, 27]

Essensial at level 7 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 33554432), (6, -1), (7, -1), (8, -1), (9, 65536), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, 33554432), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, 131072), (31, 1024), (32, -1), (33, -1), (34, 0), (35, 0), (36, -1), (37, 512), (38, -1), (39, 512), (40, 33554432), (41, 0), (42, 32768), (43, 32768), (44, -1), (45, -1), (46, -1), (47, 8388608), (48, 1048576), (49, 8388608), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 33554432), (6, -1), (7, -1), (8, -1), (9, 65536), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, 33554432), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, 131072), (31, 1024), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, 512), (38, -1), (39, 512), (40, 33554432), (41, -1), (42, 32768), (43, 32768), (44, -1), (45, -1), (46, -1), (47, 8388608), (48, 1048576), (49, 8388608), (50, -1), (51, -1), (52, -1)]

Covered at level 7 : set()

After reduction : 
 pending  : [37, 23, 9, 30, 31, 39, 42, 43, 47, 48, 49, 40, 5]
 solution : [7, 26, 28, 27]


Solution : [7, 26, 28, 27] has cost 21.


Before backtrack at level 7
 pending : [37, 23, 9, 30, 31, 39, 42, 43, 47, 48, 49, 40, 5]
 solution : [7, 26, 28, 27]

After backtrack at level 7
 pending : [37, 23, 9, 30, 31, 39, 42, 43, 47, 48, 49, 40, 5, 34, 35, 41]
 solution : [7, 26, 28, 27]


Invert decision for 27 at level 6


New level: 7
 pending : [37, 23, 9, 30, 31, 39, 42, 43, 47, 48, 49, 40, 5, 34, 35, 41]
 solution : [7, 26, 28]


Before reduction : 
 pending  : [37, 23, 9, 30, 31, 39, 42, 43, 47, 48, 49, 40, 5, 34, 35, 41]
 solution : [7, 26, 28]

Essensial at level 7 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 33554432), (6, -1), (7, -1), (8, -1), (9, 65536), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, 33554432), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, 131072), (31, 1024), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, 512), (38, -1), (39, 512), (40, 33554432), (41, -1), (42, 32768), (43, 32768), (44, -1), (45, -1), (46, -1), (47, 8388608), (48, 1048576), (49, 8388608), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 134217728), (6, -1), (7, -1), (8, -1), (9, 262144), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, 134217728), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, 524288), (31, 4096), (32, -1), (33, -1), (34, 2097152), (35, 4096), (36, -1), (37, 2048), (38, -1), (39, 2048), (40, 67108864), (41, 2048), (42, 131072), (43, 131072), (44, -1), (45, -1), (46, -1), (47, 33554432), (48, 4194304), (49, 16777216), (50, -1), (51, -1), (52, -1)]

Covered at level 7 : set()

After reduction : 
 pending  : [37, 23, 9, 30, 31, 39, 42, 43, 47, 48, 49, 40, 5, 34, 35, 41]
 solution : [7, 26, 28]


Solution : [7, 26, 28] has cost 14.


Decide in level 7 among pending : [37, 23, 9, 30, 31, 39, 42, 43, 47, 48, 49, 40, 5, 34, 35, 41]

Coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 134217728), (6, -1), (7, -1), (8, -1), (9, 262144), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, 134217728), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, 524288), (31, 4096), (32, -1), (33, -1), (34, 2097152), (35, 4096), (36, -1), (37, 2048), (38, -1), (39, 2048), (40, 67108864), (41, 2048), (42, 131072), (43, 131072), (44, -1), (45, -1), (46, -1), (47, 33554432), (48, 4194304), (49, 16777216), (50, -1), (51, -1), (52, -1)]

Decide 23 with phase True at level 7

After decision at level 7
 pending : [37, 9, 30, 31, 39, 42, 43, 47, 48, 49, 40, 5, 34, 35, 41]
 solution : [7, 26, 28, 23]


New level: 8
 pending : [37, 9, 30, 31, 39, 42, 43, 47, 48, 49, 40, 5, 34, 35, 41]
 solution : [7, 26, 28, 23]


Before reduction : 
 pending  : [37, 9, 30, 31, 39, 42, 43, 47, 48, 49, 40, 5, 34, 35, 41]
 solution : [7, 26, 28, 23]

Essensial at level 8 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 134217728), (6, -1), (7, -1), (8, -1), (9, 262144), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, 134217728), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, 524288), (31, 4096), (32, -1), (33, -1), (34, 2097152), (35, 4096), (36, -1), (37, 2048), (38, -1), (39, 2048), (40, 67108864), (41, 2048), (42, 131072), (43, 131072), (44, -1), (45, -1), (46, -1), (47, 33554432), (48, 4194304), (49, 16777216), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 0), (6, -1), (7, -1), (8, -1), (9, 0), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, 0), (31, 0), (32, -1), (33, -1), (34, 0), (35, 0), (36, -1), (37, 0), (38, -1), (39, 0), (40, 0), (41, 0), (42, 0), (43, 0), (44, -1), (45, -1), (46, -1), (47, 0), (48, 0), (49, 0), (50, -1), (51, -1), (52, -1)]

Covered at level 8 : {34, 35, 37, 5, 39, 40, 9, 42, 43, 41, 47, 48, 49, 30, 31}

After reduction : 
 pending  : []
 solution : [7, 26, 28, 23]


Before reduction : 
 pending  : []
 solution : [7, 26, 28, 23]

Essensial at level 8 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 0), (6, -1), (7, -1), (8, -1), (9, 0), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, 0), (31, 0), (32, -1), (33, -1), (34, 0), (35, 0), (36, -1), (37, 0), (38, -1), (39, 0), (40, 0), (41, 0), (42, 0), (43, 0), (44, -1), (45, -1), (46, -1), (47, 0), (48, 0), (49, 0), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 8 : set()

After reduction : 
 pending  : []
 solution : [7, 26, 28, 23]


Solution : [7, 26, 28, 23] has cost 21.


Before backtrack at level 8
 pending : []
 solution : [7, 26, 28, 23]

After backtrack at level 8
 pending : [37, 9, 30, 31, 39, 42, 43, 47, 48, 49, 40, 5, 34, 35, 41]
 solution : [7, 26, 28, 23]


Invert decision for 23 at level 7


New level: 8
 pending : [37, 9, 30, 31, 39, 42, 43, 47, 48, 49, 40, 5, 34, 35, 41]
 solution : [7, 26, 28]


Before reduction : 
 pending  : [37, 9, 30, 31, 39, 42, 43, 47, 48, 49, 40, 5, 34, 35, 41]
 solution : [7, 26, 28]

Essensial at level 8 : {5}

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, 0), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, 0), (31, 0), (32, -1), (33, -1), (34, 0), (35, 0), (36, -1), (37, 0), (38, -1), (39, 0), (40, 0), (41, 0), (42, 0), (43, 0), (44, -1), (45, -1), (46, -1), (47, 0), (48, 0), (49, 0), (50, -1), (51, -1), (52, -1)]

Covered at level 8 : {34, 35, 37, 39, 40, 9, 42, 43, 41, 47, 48, 49, 30, 31}

After reduction : 
 pending  : []
 solution : [7, 26, 28, 5]


Before reduction : 
 pending  : []
 solution : [7, 26, 28, 5]

Essensial at level 8 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, 0), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, 0), (31, 0), (32, -1), (33, -1), (34, 0), (35, 0), (36, -1), (37, 0), (38, -1), (39, 0), (40, 0), (41, 0), (42, 0), (43, 0), (44, -1), (45, -1), (46, -1), (47, 0), (48, 0), (49, 0), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 8 : set()

After reduction : 
 pending  : []
 solution : [7, 26, 28, 5]


Solution : [7, 26, 28, 5] has cost 18.


Before backtrack at level 8
 pending : []
 solution : [7, 26, 28, 5]

After backtrack at level 8
 pending : [5, 37, 9, 30, 31, 39, 42, 43, 47, 48, 49, 40, 34, 35, 41]
 solution : [7, 26, 28]


Before backtrack at level 7
 pending : [5, 37, 9, 30, 31, 39, 42, 43, 47, 48, 49, 40, 34, 35, 41]
 solution : [7, 26, 28]

After backtrack at level 7
 pending : [5, 37, 9, 30, 31, 39, 42, 43, 47, 48, 49, 40, 34, 35, 41, 23]
 solution : [7, 26, 28]


Before backtrack at level 6
 pending : [5, 37, 9, 30, 31, 39, 42, 43, 47, 48, 49, 40, 34, 35, 41, 23]
 solution : [7, 26, 28]

After backtrack at level 6
 pending : [5, 37, 9, 30, 31, 39, 42, 43, 47, 48, 49, 40, 34, 35, 41, 23, 27]
 solution : [7, 26, 28]


Before backtrack at level 5
 pending : [5, 37, 9, 30, 31, 39, 42, 43, 47, 48, 49, 40, 34, 35, 41, 23, 27]
 solution : [7, 26, 28]

After backtrack at level 5
 pending : [5, 37, 9, 30, 31, 39, 42, 43, 47, 48, 49, 40, 34, 35, 41, 23, 27, 33]
 solution : [7, 26, 28]


Invert decision for 28 at level 4


New level: 5
 pending : [5, 37, 9, 30, 31, 39, 42, 43, 47, 48, 49, 40, 34, 35, 41, 23, 27, 33]
 solution : [7, 26]


Before reduction : 
 pending  : [5, 37, 9, 30, 31, 39, 42, 43, 47, 48, 49, 40, 34, 35, 41, 23, 27, 33]
 solution : [7, 26]

Essensial at level 5 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 134217728), (6, -1), (7, -1), (8, -1), (9, 262144), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, 134217728), (24, -1), (25, -1), (26, -1), (27, 1073741824), (28, -1), (29, -1), (30, 524288), (31, 4096), (32, -1), (33, 2147483648), (34, 4194304), (35, 8192), (36, -1), (37, 2048), (38, -1), (39, 2048), (40, 67108864), (41, 4096), (42, 131072), (43, 131072), (44, -1), (45, -1), (46, -1), (47, 33554432), (48, 4194304), (49, 16777216), (50, -1), (51, -1), (52, -1)]

Covered at level 5 : set()

After reduction : 
 pending  : [5, 37, 9, 30, 31, 39, 42, 43, 47, 48, 49, 40, 34, 35, 41, 23, 27, 33]
 solution : [7, 26]


Solution : [7, 26] has cost 10.


Decide in level 5 among pending : [5, 37, 9, 30, 31, 39, 42, 43, 47, 48, 49, 40, 34, 35, 41, 23, 27, 33]

Coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 134217728), (6, -1), (7, -1), (8, -1), (9, 262144), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, 134217728), (24, -1), (25, -1), (26, -1), (27, 1073741824), (28, -1), (29, -1), (30, 524288), (31, 4096), (32, -1), (33, 2147483648), (34, 4194304), (35, 8192), (36, -1), (37, 2048), (38, -1), (39, 2048), (40, 67108864), (41, 4096), (42, 131072), (43, 131072), (44, -1), (45, -1), (46, -1), (47, 33554432), (48, 4194304), (49, 16777216), (50, -1), (51, -1), (52, -1)]

Decide 33 with phase True at level 5

After decision at level 5
 pending : [5, 37, 9, 30, 31, 39, 42, 43, 47, 48, 49, 40, 34, 35, 41, 23, 27]
 solution : [7, 26, 33]


New level: 6
 pending : [5, 37, 9, 30, 31, 39, 42, 43, 47, 48, 49, 40, 34, 35, 41, 23, 27]
 solution : [7, 26, 33]


Before reduction : 
 pending  : [5, 37, 9, 30, 31, 39, 42, 43, 47, 48, 49, 40, 34, 35, 41, 23, 27]
 solution : [7, 26, 33]

Essensial at level 6 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 134217728), (6, -1), (7, -1), (8, -1), (9, 262144), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, 134217728), (24, -1), (25, -1), (26, -1), (27, 1073741824), (28, -1), (29, -1), (30, 524288), (31, 4096), (32, -1), (33, 2147483648), (34, 4194304), (35, 8192), (36, -1), (37, 2048), (38, -1), (39, 2048), (40, 67108864), (41, 4096), (42, 131072), (43, 131072), (44, -1), (45, -1), (46, -1), (47, 33554432), (48, 4194304), (49, 16777216), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 134217728), (6, -1), (7, -1), (8, -1), (9, 65536), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, 134217728), (24, -1), (25, -1), (26, -1), (27, 4096), (28, -1), (29, -1), (30, 131072), (31, 1024), (32, -1), (33, -1), (34, 0), (35, 0), (36, -1), (37, 512), (38, -1), (39, 512), (40, 16777216), (41, 0), (42, 32768), (43, 32768), (44, -1), (45, -1), (46, -1), (47, 8388608), (48, 1048576), (49, 4194304), (50, -1), (51, -1), (52, -1)]

Covered at level 6 : {41, 34, 35}

After reduction : 
 pending  : [5, 37, 9, 30, 31, 39, 42, 43, 47, 48, 49, 40, 23, 27]
 solution : [7, 26, 33]


Before reduction : 
 pending  : [5, 37, 9, 30, 31, 39, 42, 43, 47, 48, 49, 40, 23, 27]
 solution : [7, 26, 33]

Essensial at level 6 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 134217728), (6, -1), (7, -1), (8, -1), (9, 65536), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, 134217728), (24, -1), (25, -1), (26, -1), (27, 4096), (28, -1), (29, -1), (30, 131072), (31, 1024), (32, -1), (33, -1), (34, 0), (35, 0), (36, -1), (37, 512), (38, -1), (39, 512), (40, 16777216), (41, 0), (42, 32768), (43, 32768), (44, -1), (45, -1), (46, -1), (47, 8388608), (48, 1048576), (49, 4194304), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 134217728), (6, -1), (7, -1), (8, -1), (9, 65536), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, 134217728), (24, -1), (25, -1), (26, -1), (27, 4096), (28, -1), (29, -1), (30, 131072), (31, 1024), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, 512), (38, -1), (39, 512), (40, 16777216), (41, -1), (42, 32768), (43, 32768), (44, -1), (45, -1), (46, -1), (47, 8388608), (48, 1048576), (49, 4194304), (50, -1), (51, -1), (52, -1)]

Covered at level 6 : set()

After reduction : 
 pending  : [5, 37, 9, 30, 31, 39, 42, 43, 47, 48, 49, 40, 23, 27]
 solution : [7, 26, 33]


Solution : [7, 26, 33] has cost 23.


Before backtrack at level 6
 pending : [5, 37, 9, 30, 31, 39, 42, 43, 47, 48, 49, 40, 23, 27]
 solution : [7, 26, 33]

After backtrack at level 6
 pending : [5, 37, 9, 30, 31, 39, 42, 43, 47, 48, 49, 40, 23, 27, 34, 35, 41]
 solution : [7, 26, 33]


Invert decision for 33 at level 5


New level: 6
 pending : [5, 37, 9, 30, 31, 39, 42, 43, 47, 48, 49, 40, 23, 27, 34, 35, 41]
 solution : [7, 26]


Before reduction : 
 pending  : [5, 37, 9, 30, 31, 39, 42, 43, 47, 48, 49, 40, 23, 27, 34, 35, 41]
 solution : [7, 26]

Essensial at level 6 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 134217728), (6, -1), (7, -1), (8, -1), (9, 65536), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, 134217728), (24, -1), (25, -1), (26, -1), (27, 4096), (28, -1), (29, -1), (30, 131072), (31, 1024), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, 512), (38, -1), (39, 512), (40, 16777216), (41, -1), (42, 32768), (43, 32768), (44, -1), (45, -1), (46, -1), (47, 8388608), (48, 1048576), (49, 4194304), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 134217728), (6, -1), (7, -1), (8, -1), (9, 262144), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, 134217728), (24, -1), (25, -1), (26, -1), (27, 1073741824), (28, -1), (29, -1), (30, 524288), (31, 4096), (32, -1), (33, -1), (34, 4194304), (35, 8192), (36, -1), (37, 2048), (38, -1), (39, 2048), (40, 67108864), (41, 4096), (42, 131072), (43, 131072), (44, -1), (45, -1), (46, -1), (47, 33554432), (48, 4194304), (49, 16777216), (50, -1), (51, -1), (52, -1)]

Covered at level 6 : set()

After reduction : 
 pending  : [5, 37, 9, 30, 31, 39, 42, 43, 47, 48, 49, 40, 23, 27, 34, 35, 41]
 solution : [7, 26]


Solution : [7, 26] has cost 10.


Decide in level 6 among pending : [5, 37, 9, 30, 31, 39, 42, 43, 47, 48, 49, 40, 23, 27, 34, 35, 41]

Coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 134217728), (6, -1), (7, -1), (8, -1), (9, 262144), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, 134217728), (24, -1), (25, -1), (26, -1), (27, 1073741824), (28, -1), (29, -1), (30, 524288), (31, 4096), (32, -1), (33, -1), (34, 4194304), (35, 8192), (36, -1), (37, 2048), (38, -1), (39, 2048), (40, 67108864), (41, 4096), (42, 131072), (43, 131072), (44, -1), (45, -1), (46, -1), (47, 33554432), (48, 4194304), (49, 16777216), (50, -1), (51, -1), (52, -1)]

Decide 27 with phase True at level 6

After decision at level 6
 pending : [5, 37, 9, 30, 31, 39, 42, 43, 47, 48, 49, 40, 23, 34, 35, 41]
 solution : [7, 26, 27]


New level: 7
 pending : [5, 37, 9, 30, 31, 39, 42, 43, 47, 48, 49, 40, 23, 34, 35, 41]
 solution : [7, 26, 27]


Before reduction : 
 pending  : [5, 37, 9, 30, 31, 39, 42, 43, 47, 48, 49, 40, 23, 34, 35, 41]
 solution : [7, 26, 27]

Essensial at level 7 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 134217728), (6, -1), (7, -1), (8, -1), (9, 262144), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, 134217728), (24, -1), (25, -1), (26, -1), (27, 1073741824), (28, -1), (29, -1), (30, 524288), (31, 4096), (32, -1), (33, -1), (34, 4194304), (35, 8192), (36, -1), (37, 2048), (38, -1), (39, 2048), (40, 67108864), (41, 4096), (42, 131072), (43, 131072), (44, -1), (45, -1), (46, -1), (47, 33554432), (48, 4194304), (49, 16777216), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 33554432), (6, -1), (7, -1), (8, -1), (9, 65536), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, 33554432), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, 131072), (31, 1024), (32, -1), (33, -1), (34, 0), (35, 0), (36, -1), (37, 512), (38, -1), (39, 512), (40, 33554432), (41, 0), (42, 32768), (43, 32768), (44, -1), (45, -1), (46, -1), (47, 8388608), (48, 1048576), (49, 8388608), (50, -1), (51, -1), (52, -1)]

Covered at level 7 : {41, 34, 35}

After reduction : 
 pending  : [5, 37, 9, 30, 31, 39, 42, 43, 47, 48, 49, 40, 23]
 solution : [7, 26, 27]


Before reduction : 
 pending  : [5, 37, 9, 30, 31, 39, 42, 43, 47, 48, 49, 40, 23]
 solution : [7, 26, 27]

Essensial at level 7 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 33554432), (6, -1), (7, -1), (8, -1), (9, 65536), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, 33554432), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, 131072), (31, 1024), (32, -1), (33, -1), (34, 0), (35, 0), (36, -1), (37, 512), (38, -1), (39, 512), (40, 33554432), (41, 0), (42, 32768), (43, 32768), (44, -1), (45, -1), (46, -1), (47, 8388608), (48, 1048576), (49, 8388608), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 33554432), (6, -1), (7, -1), (8, -1), (9, 65536), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, 33554432), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, 131072), (31, 1024), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, 512), (38, -1), (39, 512), (40, 33554432), (41, -1), (42, 32768), (43, 32768), (44, -1), (45, -1), (46, -1), (47, 8388608), (48, 1048576), (49, 8388608), (50, -1), (51, -1), (52, -1)]

Covered at level 7 : set()

After reduction : 
 pending  : [5, 37, 9, 30, 31, 39, 42, 43, 47, 48, 49, 40, 23]
 solution : [7, 26, 27]


Solution : [7, 26, 27] has cost 17.


Decide in level 7 among pending : [5, 37, 9, 30, 31, 39, 42, 43, 47, 48, 49, 40, 23]

Coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 33554432), (6, -1), (7, -1), (8, -1), (9, 65536), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, 33554432), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, 131072), (31, 1024), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, 512), (38, -1), (39, 512), (40, 33554432), (41, -1), (42, 32768), (43, 32768), (44, -1), (45, -1), (46, -1), (47, 8388608), (48, 1048576), (49, 8388608), (50, -1), (51, -1), (52, -1)]

Decide 5 with phase True at level 7

After decision at level 7
 pending : [37, 9, 30, 31, 39, 42, 43, 47, 48, 49, 40, 23]
 solution : [7, 26, 27, 5]


New level: 8
 pending : [37, 9, 30, 31, 39, 42, 43, 47, 48, 49, 40, 23]
 solution : [7, 26, 27, 5]


Before reduction : 
 pending  : [37, 9, 30, 31, 39, 42, 43, 47, 48, 49, 40, 23]
 solution : [7, 26, 27, 5]

Essensial at level 8 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 33554432), (6, -1), (7, -1), (8, -1), (9, 65536), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, 33554432), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, 131072), (31, 1024), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, 512), (38, -1), (39, 512), (40, 33554432), (41, -1), (42, 32768), (43, 32768), (44, -1), (45, -1), (46, -1), (47, 8388608), (48, 1048576), (49, 8388608), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, 0), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, 0), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, 0), (31, 0), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, 0), (38, -1), (39, 0), (40, 0), (41, -1), (42, 0), (43, 0), (44, -1), (45, -1), (46, -1), (47, 0), (48, 0), (49, 0), (50, -1), (51, -1), (52, -1)]

Covered at level 8 : {37, 39, 40, 9, 42, 43, 47, 48, 49, 23, 30, 31}

After reduction : 
 pending  : []
 solution : [7, 26, 27, 5]


Before reduction : 
 pending  : []
 solution : [7, 26, 27, 5]

Essensial at level 8 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, 0), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, 0), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, 0), (31, 0), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, 0), (38, -1), (39, 0), (40, 0), (41, -1), (42, 0), (43, 0), (44, -1), (45, -1), (46, -1), (47, 0), (48, 0), (49, 0), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 8 : set()

After reduction : 
 pending  : []
 solution : [7, 26, 27, 5]


Solution : [7, 26, 27, 5] has cost 21.


Before backtrack at level 8
 pending : []
 solution : [7, 26, 27, 5]

After backtrack at level 8
 pending : [37, 9, 30, 31, 39, 42, 43, 47, 48, 49, 40, 23]
 solution : [7, 26, 27, 5]


Invert decision for 5 at level 7


New level: 8
 pending : [37, 9, 30, 31, 39, 42, 43, 47, 48, 49, 40, 23]
 solution : [7, 26, 27]


Before reduction : 
 pending  : [37, 9, 30, 31, 39, 42, 43, 47, 48, 49, 40, 23]
 solution : [7, 26, 27]

Essensial at level 8 : {23}

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, 0), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, 0), (31, 0), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, 0), (38, -1), (39, 0), (40, 0), (41, -1), (42, 0), (43, 0), (44, -1), (45, -1), (46, -1), (47, 0), (48, 0), (49, 0), (50, -1), (51, -1), (52, -1)]

Covered at level 8 : {37, 39, 40, 9, 42, 43, 47, 48, 49, 30, 31}

After reduction : 
 pending  : []
 solution : [7, 26, 27, 23]


Before reduction : 
 pending  : []
 solution : [7, 26, 27, 23]

Essensial at level 8 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, 0), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, 0), (31, 0), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, 0), (38, -1), (39, 0), (40, 0), (41, -1), (42, 0), (43, 0), (44, -1), (45, -1), (46, -1), (47, 0), (48, 0), (49, 0), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 8 : set()

After reduction : 
 pending  : []
 solution : [7, 26, 27, 23]


Solution : [7, 26, 27, 23] has cost 24.


Before backtrack at level 8
 pending : []
 solution : [7, 26, 27, 23]

After backtrack at level 8
 pending : [23, 37, 9, 30, 31, 39, 42, 43, 47, 48, 49, 40]
 solution : [7, 26, 27]


Before backtrack at level 7
 pending : [23, 37, 9, 30, 31, 39, 42, 43, 47, 48, 49, 40]
 solution : [7, 26, 27]

After backtrack at level 7
 pending : [23, 37, 9, 30, 31, 39, 42, 43, 47, 48, 49, 40, 34, 35, 41, 5]
 solution : [7, 26, 27]


Invert decision for 27 at level 6


New level: 7
 pending : [23, 37, 9, 30, 31, 39, 42, 43, 47, 48, 49, 40, 34, 35, 41, 5]
 solution : [7, 26]


Before reduction : 
 pending  : [23, 37, 9, 30, 31, 39, 42, 43, 47, 48, 49, 40, 34, 35, 41, 5]
 solution : [7, 26]

Essensial at level 7 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 134217728), (6, -1), (7, -1), (8, -1), (9, 262144), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, 134217728), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, 524288), (31, 4096), (32, -1), (33, -1), (34, 4194304), (35, 8192), (36, -1), (37, 2048), (38, -1), (39, 2048), (40, 67108864), (41, 4096), (42, 131072), (43, 131072), (44, -1), (45, -1), (46, -1), (47, 33554432), (48, 4194304), (49, 16777216), (50, -1), (51, -1), (52, -1)]

Covered at level 7 : set()

After reduction : 
 pending  : [23, 37, 9, 30, 31, 39, 42, 43, 47, 48, 49, 40, 34, 35, 41, 5]
 solution : [7, 26]


Solution : [7, 26] has cost 10.


Decide in level 7 among pending : [23, 37, 9, 30, 31, 39, 42, 43, 47, 48, 49, 40, 34, 35, 41, 5]

Coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 134217728), (6, -1), (7, -1), (8, -1), (9, 262144), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, 134217728), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, 524288), (31, 4096), (32, -1), (33, -1), (34, 4194304), (35, 8192), (36, -1), (37, 2048), (38, -1), (39, 2048), (40, 67108864), (41, 4096), (42, 131072), (43, 131072), (44, -1), (45, -1), (46, -1), (47, 33554432), (48, 4194304), (49, 16777216), (50, -1), (51, -1), (52, -1)]

Decide 23 with phase True at level 7

After decision at level 7
 pending : [37, 9, 30, 31, 39, 42, 43, 47, 48, 49, 40, 34, 35, 41, 5]
 solution : [7, 26, 23]


New level: 8
 pending : [37, 9, 30, 31, 39, 42, 43, 47, 48, 49, 40, 34, 35, 41, 5]
 solution : [7, 26, 23]


Before reduction : 
 pending  : [37, 9, 30, 31, 39, 42, 43, 47, 48, 49, 40, 34, 35, 41, 5]
 solution : [7, 26, 23]

Essensial at level 8 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 134217728), (6, -1), (7, -1), (8, -1), (9, 262144), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, 134217728), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, 524288), (31, 4096), (32, -1), (33, -1), (34, 4194304), (35, 8192), (36, -1), (37, 2048), (38, -1), (39, 2048), (40, 67108864), (41, 4096), (42, 131072), (43, 131072), (44, -1), (45, -1), (46, -1), (47, 33554432), (48, 4194304), (49, 16777216), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 0), (6, -1), (7, -1), (8, -1), (9, 0), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, 0), (31, 0), (32, -1), (33, -1), (34, 0), (35, 0), (36, -1), (37, 0), (38, -1), (39, 0), (40, 0), (41, 0), (42, 0), (43, 0), (44, -1), (45, -1), (46, -1), (47, 0), (48, 0), (49, 0), (50, -1), (51, -1), (52, -1)]

Covered at level 8 : {34, 35, 37, 5, 39, 40, 9, 42, 43, 41, 47, 48, 49, 30, 31}

After reduction : 
 pending  : []
 solution : [7, 26, 23]


Before reduction : 
 pending  : []
 solution : [7, 26, 23]

Essensial at level 8 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 0), (6, -1), (7, -1), (8, -1), (9, 0), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, 0), (31, 0), (32, -1), (33, -1), (34, 0), (35, 0), (36, -1), (37, 0), (38, -1), (39, 0), (40, 0), (41, 0), (42, 0), (43, 0), (44, -1), (45, -1), (46, -1), (47, 0), (48, 0), (49, 0), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 8 : set()

After reduction : 
 pending  : []
 solution : [7, 26, 23]


Solution : [7, 26, 23] has cost 17.


Before backtrack at level 8
 pending : []
 solution : [7, 26, 23]

After backtrack at level 8
 pending : [37, 9, 30, 31, 39, 42, 43, 47, 48, 49, 40, 34, 35, 41, 5]
 solution : [7, 26, 23]


Invert decision for 23 at level 7


New level: 8
 pending : [37, 9, 30, 31, 39, 42, 43, 47, 48, 49, 40, 34, 35, 41, 5]
 solution : [7, 26]


Before reduction : 
 pending  : [37, 9, 30, 31, 39, 42, 43, 47, 48, 49, 40, 34, 35, 41, 5]
 solution : [7, 26]

Essensial at level 8 : {5}

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, 0), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, 0), (31, 0), (32, -1), (33, -1), (34, 0), (35, 0), (36, -1), (37, 0), (38, -1), (39, 0), (40, 0), (41, 0), (42, 0), (43, 0), (44, -1), (45, -1), (46, -1), (47, 0), (48, 0), (49, 0), (50, -1), (51, -1), (52, -1)]

Covered at level 8 : {34, 35, 37, 39, 40, 9, 42, 43, 41, 47, 48, 49, 30, 31}

After reduction : 
 pending  : []
 solution : [7, 26, 5]


Before reduction : 
 pending  : []
 solution : [7, 26, 5]

Essensial at level 8 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, 0), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, 0), (31, 0), (32, -1), (33, -1), (34, 0), (35, 0), (36, -1), (37, 0), (38, -1), (39, 0), (40, 0), (41, 0), (42, 0), (43, 0), (44, -1), (45, -1), (46, -1), (47, 0), (48, 0), (49, 0), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 8 : set()

After reduction : 
 pending  : []
 solution : [7, 26, 5]


Solution : [7, 26, 5] has cost 14.


Before backtrack at level 8
 pending : []
 solution : [7, 26, 5]

After backtrack at level 8
 pending : [5, 37, 9, 30, 31, 39, 42, 43, 47, 48, 49, 40, 34, 35, 41]
 solution : [7, 26]


Before backtrack at level 7
 pending : [5, 37, 9, 30, 31, 39, 42, 43, 47, 48, 49, 40, 34, 35, 41]
 solution : [7, 26]

After backtrack at level 7
 pending : [5, 37, 9, 30, 31, 39, 42, 43, 47, 48, 49, 40, 34, 35, 41, 23]
 solution : [7, 26]


Before backtrack at level 6
 pending : [5, 37, 9, 30, 31, 39, 42, 43, 47, 48, 49, 40, 34, 35, 41, 23]
 solution : [7, 26]

After backtrack at level 6
 pending : [5, 37, 9, 30, 31, 39, 42, 43, 47, 48, 49, 40, 34, 35, 41, 23, 27]
 solution : [7, 26]


Before backtrack at level 5
 pending : [5, 37, 9, 30, 31, 39, 42, 43, 47, 48, 49, 40, 34, 35, 41, 23, 27]
 solution : [7, 26]

After backtrack at level 5
 pending : [5, 37, 9, 30, 31, 39, 42, 43, 47, 48, 49, 40, 34, 35, 41, 23, 27, 33]
 solution : [7, 26]


Before backtrack at level 4
 pending : [5, 37, 9, 30, 31, 39, 42, 43, 47, 48, 49, 40, 34, 35, 41, 23, 27, 33]
 solution : [7, 26]

After backtrack at level 4
 pending : [5, 37, 9, 30, 31, 39, 42, 43, 47, 48, 49, 40, 34, 35, 41, 23, 27, 33, 25, 36, 2, 15, 13, 20, 19, 11, 17, 12, 18, 16, 28]
 solution : [7, 26]


Invert decision for 26 at level 3


New level: 4
 pending : [5, 37, 9, 30, 31, 39, 42, 43, 47, 48, 49, 40, 34, 35, 41, 23, 27, 33, 25, 36, 2, 15, 13, 20, 19, 11, 17, 12, 18, 16, 28]
 solution : [7]


Before reduction : 
 pending  : [5, 37, 9, 30, 31, 39, 42, 43, 47, 48, 49, 40, 34, 35, 41, 23, 27, 33, 25, 36, 2, 15, 13, 20, 19, 11, 17, 12, 18, 16, 28]
 solution : [7]

Essensial at level 4 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 1048576), (3, -1), (4, -1), (5, 134217728), (6, -1), (7, -1), (8, -1), (9, 1048576), (10, -1), (11, 33554432), (12, 67108864), (13, 524288), (14, -1), (15, 1114112), (16, 2147483648), (17, 16777216), (18, 1073741824), (19, 8388608), (20, 262144), (21, -1), (22, -1), (23, 134217728), (24, -1), (25, 4194304), (26, -1), (27, 1073741824), (28, 4294967296), (29, -1), (30, 1048576), (31, 16384), (32, -1), (33, 2147483648), (34, 4194304), (35, 32768), (36, 4194304), (37, 268435456), (38, -1), (39, 16384), (40, 134217728), (41, 1073741824), (42, 524288), (43, 524288), (44, -1), (45, -1), (46, -1), (47, 67108864), (48, 16777216), (49, 67108864), (50, -1), (51, -1), (52, -1)]

Covered at level 4 : set()

After reduction : 
 pending  : [5, 37, 9, 30, 31, 39, 42, 43, 47, 48, 49, 40, 34, 35, 41, 23, 27, 33, 25, 36, 2, 15, 13, 20, 19, 11, 17, 12, 18, 16, 28]
 solution : [7]


Solution : [7] has cost 6.


Decide in level 4 among pending : [5, 37, 9, 30, 31, 39, 42, 43, 47, 48, 49, 40, 34, 35, 41, 23, 27, 33, 25, 36, 2, 15, 13, 20, 19, 11, 17, 12, 18, 16, 28]

Coverage : [(0, -1), (1, -1), (2, 1048576), (3, -1), (4, -1), (5, 134217728), (6, -1), (7, -1), (8, -1), (9, 1048576), (10, -1), (11, 33554432), (12, 67108864), (13, 524288), (14, -1), (15, 1114112), (16, 2147483648), (17, 16777216), (18, 1073741824), (19, 8388608), (20, 262144), (21, -1), (22, -1), (23, 134217728), (24, -1), (25, 4194304), (26, -1), (27, 1073741824), (28, 4294967296), (29, -1), (30, 1048576), (31, 16384), (32, -1), (33, 2147483648), (34, 4194304), (35, 32768), (36, 4194304), (37, 268435456), (38, -1), (39, 16384), (40, 134217728), (41, 1073741824), (42, 524288), (43, 524288), (44, -1), (45, -1), (46, -1), (47, 67108864), (48, 16777216), (49, 67108864), (50, -1), (51, -1), (52, -1)]

Decide 28 with phase True at level 4

After decision at level 4
 pending : [5, 37, 9, 30, 31, 39, 42, 43, 47, 48, 49, 40, 34, 35, 41, 23, 27, 33, 25, 36, 2, 15, 13, 20, 19, 11, 17, 12, 18, 16]
 solution : [7, 28]


New level: 5
 pending : [5, 37, 9, 30, 31, 39, 42, 43, 47, 48, 49, 40, 34, 35, 41, 23, 27, 33, 25, 36, 2, 15, 13, 20, 19, 11, 17, 12, 18, 16]
 solution : [7, 28]


Before reduction : 
 pending  : [5, 37, 9, 30, 31, 39, 42, 43, 47, 48, 49, 40, 34, 35, 41, 23, 27, 33, 25, 36, 2, 15, 13, 20, 19, 11, 17, 12, 18, 16]
 solution : [7, 28]

Essensial at level 5 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 1048576), (3, -1), (4, -1), (5, 134217728), (6, -1), (7, -1), (8, -1), (9, 1048576), (10, -1), (11, 33554432), (12, 67108864), (13, 524288), (14, -1), (15, 1114112), (16, 2147483648), (17, 16777216), (18, 1073741824), (19, 8388608), (20, 262144), (21, -1), (22, -1), (23, 134217728), (24, -1), (25, 4194304), (26, -1), (27, 1073741824), (28, 4294967296), (29, -1), (30, 1048576), (31, 16384), (32, -1), (33, 2147483648), (34, 4194304), (35, 32768), (36, 4194304), (37, 268435456), (38, -1), (39, 16384), (40, 134217728), (41, 1073741824), (42, 524288), (43, 524288), (44, -1), (45, -1), (46, -1), (47, 67108864), (48, 16777216), (49, 67108864), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 1048576), (3, -1), (4, -1), (5, 134217728), (6, -1), (7, -1), (8, -1), (9, 1048576), (10, -1), (11, 33554432), (12, 67108864), (13, 524288), (14, -1), (15, 1114112), (16, 2147483648), (17, 16777216), (18, 1073741824), (19, 8388608), (20, 262144), (21, -1), (22, -1), (23, 134217728), (24, -1), (25, 4194304), (26, -1), (27, 536870912), (28, -1), (29, -1), (30, 1048576), (31, 16384), (32, -1), (33, 1073741824), (34, 2097152), (35, 16384), (36, 4194304), (37, 268435456), (38, -1), (39, 16384), (40, 134217728), (41, 536870912), (42, 524288), (43, 524288), (44, -1), (45, -1), (46, -1), (47, 67108864), (48, 16777216), (49, 67108864), (50, -1), (51, -1), (52, -1)]

Covered at level 5 : set()

After reduction : 
 pending  : [5, 37, 9, 30, 31, 39, 42, 43, 47, 48, 49, 40, 34, 35, 41, 23, 27, 33, 25, 36, 2, 15, 13, 20, 19, 11, 17, 12, 18, 16]
 solution : [7, 28]


Solution : [7, 28] has cost 10.


Decide in level 5 among pending : [5, 37, 9, 30, 31, 39, 42, 43, 47, 48, 49, 40, 34, 35, 41, 23, 27, 33, 25, 36, 2, 15, 13, 20, 19, 11, 17, 12, 18, 16]

Coverage : [(0, -1), (1, -1), (2, 1048576), (3, -1), (4, -1), (5, 134217728), (6, -1), (7, -1), (8, -1), (9, 1048576), (10, -1), (11, 33554432), (12, 67108864), (13, 524288), (14, -1), (15, 1114112), (16, 2147483648), (17, 16777216), (18, 1073741824), (19, 8388608), (20, 262144), (21, -1), (22, -1), (23, 134217728), (24, -1), (25, 4194304), (26, -1), (27, 536870912), (28, -1), (29, -1), (30, 1048576), (31, 16384), (32, -1), (33, 1073741824), (34, 2097152), (35, 16384), (36, 4194304), (37, 268435456), (38, -1), (39, 16384), (40, 134217728), (41, 536870912), (42, 524288), (43, 524288), (44, -1), (45, -1), (46, -1), (47, 67108864), (48, 16777216), (49, 67108864), (50, -1), (51, -1), (52, -1)]

Decide 16 with phase True at level 5

After decision at level 5
 pending : [5, 37, 9, 30, 31, 39, 42, 43, 47, 48, 49, 40, 34, 35, 41, 23, 27, 33, 25, 36, 2, 15, 13, 20, 19, 11, 17, 12, 18]
 solution : [7, 28, 16]


New level: 6
 pending : [5, 37, 9, 30, 31, 39, 42, 43, 47, 48, 49, 40, 34, 35, 41, 23, 27, 33, 25, 36, 2, 15, 13, 20, 19, 11, 17, 12, 18]
 solution : [7, 28, 16]


Before reduction : 
 pending  : [5, 37, 9, 30, 31, 39, 42, 43, 47, 48, 49, 40, 34, 35, 41, 23, 27, 33, 25, 36, 2, 15, 13, 20, 19, 11, 17, 12, 18]
 solution : [7, 28, 16]

Essensial at level 6 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 1048576), (3, -1), (4, -1), (5, 134217728), (6, -1), (7, -1), (8, -1), (9, 1048576), (10, -1), (11, 33554432), (12, 67108864), (13, 524288), (14, -1), (15, 1114112), (16, 2147483648), (17, 16777216), (18, 1073741824), (19, 8388608), (20, 262144), (21, -1), (22, -1), (23, 134217728), (24, -1), (25, 4194304), (26, -1), (27, 536870912), (28, -1), (29, -1), (30, 1048576), (31, 16384), (32, -1), (33, 1073741824), (34, 2097152), (35, 16384), (36, 4194304), (37, 268435456), (38, -1), (39, 16384), (40, 134217728), (41, 536870912), (42, 524288), (43, 524288), (44, -1), (45, -1), (46, -1), (47, 67108864), (48, 16777216), (49, 67108864), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 0), (3, -1), (4, -1), (5, 134217728), (6, -1), (7, -1), (8, -1), (9, 262144), (10, -1), (11, 0), (12, 0), (13, 0), (14, -1), (15, 0), (16, -1), (17, 0), (18, 0), (19, 0), (20, 0), (21, -1), (22, -1), (23, 134217728), (24, -1), (25, 0), (26, -1), (27, 536870912), (28, -1), (29, -1), (30, 524288), (31, 4096), (32, -1), (33, 1073741824), (34, 2097152), (35, 4096), (36, 0), (37, 2048), (38, -1), (39, 2048), (40, 67108864), (41, 2048), (42, 131072), (43, 131072), (44, -1), (45, -1), (46, -1), (47, 33554432), (48, 4194304), (49, 67108864), (50, -1), (51, -1), (52, -1)]

Covered at level 6 : {2, 36, 11, 12, 13, 15, 17, 18, 19, 20, 25}

After reduction : 
 pending  : [5, 37, 9, 30, 31, 39, 42, 43, 47, 48, 49, 40, 34, 35, 41, 23, 27, 33]
 solution : [7, 28, 16]


Before reduction : 
 pending  : [5, 37, 9, 30, 31, 39, 42, 43, 47, 48, 49, 40, 34, 35, 41, 23, 27, 33]
 solution : [7, 28, 16]

Essensial at level 6 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 0), (3, -1), (4, -1), (5, 134217728), (6, -1), (7, -1), (8, -1), (9, 262144), (10, -1), (11, 0), (12, 0), (13, 0), (14, -1), (15, 0), (16, -1), (17, 0), (18, 0), (19, 0), (20, 0), (21, -1), (22, -1), (23, 134217728), (24, -1), (25, 0), (26, -1), (27, 536870912), (28, -1), (29, -1), (30, 524288), (31, 4096), (32, -1), (33, 1073741824), (34, 2097152), (35, 4096), (36, 0), (37, 2048), (38, -1), (39, 2048), (40, 67108864), (41, 2048), (42, 131072), (43, 131072), (44, -1), (45, -1), (46, -1), (47, 33554432), (48, 4194304), (49, 67108864), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 134217728), (6, -1), (7, -1), (8, -1), (9, 262144), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, 134217728), (24, -1), (25, -1), (26, -1), (27, 536870912), (28, -1), (29, -1), (30, 524288), (31, 4096), (32, -1), (33, 1073741824), (34, 2097152), (35, 4096), (36, -1), (37, 2048), (38, -1), (39, 2048), (40, 67108864), (41, 2048), (42, 131072), (43, 131072), (44, -1), (45, -1), (46, -1), (47, 33554432), (48, 4194304), (49, 67108864), (50, -1), (51, -1), (52, -1)]

Covered at level 6 : set()

After reduction : 
 pending  : [5, 37, 9, 30, 31, 39, 42, 43, 47, 48, 49, 40, 34, 35, 41, 23, 27, 33]
 solution : [7, 28, 16]


Solution : [7, 28, 16] has cost 17.


Before backtrack at level 6
 pending : [5, 37, 9, 30, 31, 39, 42, 43, 47, 48, 49, 40, 34, 35, 41, 23, 27, 33]
 solution : [7, 28, 16]

After backtrack at level 6
 pending : [5, 37, 9, 30, 31, 39, 42, 43, 47, 48, 49, 40, 34, 35, 41, 23, 27, 33, 25, 36, 2, 15, 13, 20, 19, 11, 17, 12, 18]
 solution : [7, 28, 16]


Invert decision for 16 at level 5


New level: 6
 pending : [5, 37, 9, 30, 31, 39, 42, 43, 47, 48, 49, 40, 34, 35, 41, 23, 27, 33, 25, 36, 2, 15, 13, 20, 19, 11, 17, 12, 18]
 solution : [7, 28]


Before reduction : 
 pending  : [5, 37, 9, 30, 31, 39, 42, 43, 47, 48, 49, 40, 34, 35, 41, 23, 27, 33, 25, 36, 2, 15, 13, 20, 19, 11, 17, 12, 18]
 solution : [7, 28]

Essensial at level 6 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 134217728), (6, -1), (7, -1), (8, -1), (9, 262144), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, 134217728), (24, -1), (25, -1), (26, -1), (27, 536870912), (28, -1), (29, -1), (30, 524288), (31, 4096), (32, -1), (33, 1073741824), (34, 2097152), (35, 4096), (36, -1), (37, 2048), (38, -1), (39, 2048), (40, 67108864), (41, 2048), (42, 131072), (43, 131072), (44, -1), (45, -1), (46, -1), (47, 33554432), (48, 4194304), (49, 67108864), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 1048576), (3, -1), (4, -1), (5, 134217728), (6, -1), (7, -1), (8, -1), (9, 1048576), (10, -1), (11, 33554432), (12, 67108864), (13, 524288), (14, -1), (15, 1114112), (16, -1), (17, 16777216), (18, 1073741824), (19, 8388608), (20, 262144), (21, -1), (22, -1), (23, 134217728), (24, -1), (25, 4194304), (26, -1), (27, 536870912), (28, -1), (29, -1), (30, 1048576), (31, 16384), (32, -1), (33, 1073741824), (34, 2097152), (35, 16384), (36, 4194304), (37, 268435456), (38, -1), (39, 16384), (40, 134217728), (41, 536870912), (42, 524288), (43, 524288), (44, -1), (45, -1), (46, -1), (47, 67108864), (48, 16777216), (49, 67108864), (50, -1), (51, -1), (52, -1)]

Covered at level 6 : set()

After reduction : 
 pending  : [5, 37, 9, 30, 31, 39, 42, 43, 47, 48, 49, 40, 34, 35, 41, 23, 27, 33, 25, 36, 2, 15, 13, 20, 19, 11, 17, 12, 18]
 solution : [7, 28]


Solution : [7, 28] has cost 10.


Decide in level 6 among pending : [5, 37, 9, 30, 31, 39, 42, 43, 47, 48, 49, 40, 34, 35, 41, 23, 27, 33, 25, 36, 2, 15, 13, 20, 19, 11, 17, 12, 18]

Coverage : [(0, -1), (1, -1), (2, 1048576), (3, -1), (4, -1), (5, 134217728), (6, -1), (7, -1), (8, -1), (9, 1048576), (10, -1), (11, 33554432), (12, 67108864), (13, 524288), (14, -1), (15, 1114112), (16, -1), (17, 16777216), (18, 1073741824), (19, 8388608), (20, 262144), (21, -1), (22, -1), (23, 134217728), (24, -1), (25, 4194304), (26, -1), (27, 536870912), (28, -1), (29, -1), (30, 1048576), (31, 16384), (32, -1), (33, 1073741824), (34, 2097152), (35, 16384), (36, 4194304), (37, 268435456), (38, -1), (39, 16384), (40, 134217728), (41, 536870912), (42, 524288), (43, 524288), (44, -1), (45, -1), (46, -1), (47, 67108864), (48, 16777216), (49, 67108864), (50, -1), (51, -1), (52, -1)]

Decide 33 with phase True at level 6

After decision at level 6
 pending : [5, 37, 9, 30, 31, 39, 42, 43, 47, 48, 49, 40, 34, 35, 41, 23, 27, 25, 36, 2, 15, 13, 20, 19, 11, 17, 12, 18]
 solution : [7, 28, 33]


New level: 7
 pending : [5, 37, 9, 30, 31, 39, 42, 43, 47, 48, 49, 40, 34, 35, 41, 23, 27, 25, 36, 2, 15, 13, 20, 19, 11, 17, 12, 18]
 solution : [7, 28, 33]


Before reduction : 
 pending  : [5, 37, 9, 30, 31, 39, 42, 43, 47, 48, 49, 40, 34, 35, 41, 23, 27, 25, 36, 2, 15, 13, 20, 19, 11, 17, 12, 18]
 solution : [7, 28, 33]

Essensial at level 7 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 1048576), (3, -1), (4, -1), (5, 134217728), (6, -1), (7, -1), (8, -1), (9, 1048576), (10, -1), (11, 33554432), (12, 67108864), (13, 524288), (14, -1), (15, 1114112), (16, -1), (17, 16777216), (18, 1073741824), (19, 8388608), (20, 262144), (21, -1), (22, -1), (23, 134217728), (24, -1), (25, 4194304), (26, -1), (27, 536870912), (28, -1), (29, -1), (30, 1048576), (31, 16384), (32, -1), (33, 1073741824), (34, 2097152), (35, 16384), (36, 4194304), (37, 268435456), (38, -1), (39, 16384), (40, 134217728), (41, 536870912), (42, 524288), (43, 524288), (44, -1), (45, -1), (46, -1), (47, 67108864), (48, 16777216), (49, 67108864), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 1048576), (3, -1), (4, -1), (5, 134217728), (6, -1), (7, -1), (8, -1), (9, 262144), (10, -1), (11, 33554432), (12, 67108864), (13, 524288), (14, -1), (15, 1114112), (16, -1), (17, 16777216), (18, 1073741824), (19, 8388608), (20, 262144), (21, -1), (22, -1), (23, 134217728), (24, -1), (25, 4194304), (26, -1), (27, 16384), (28, -1), (29, -1), (30, 262144), (31, 4096), (32, -1), (33, -1), (34, 0), (35, 0), (36, 4194304), (37, 268435456), (38, -1), (39, 4096), (40, 33554432), (41, 16384), (42, 131072), (43, 131072), (44, -1), (45, -1), (46, -1), (47, 16777216), (48, 4194304), (49, 16777216), (50, -1), (51, -1), (52, -1)]

Covered at level 7 : {34, 35}

After reduction : 
 pending  : [5, 37, 9, 30, 31, 39, 42, 43, 47, 48, 49, 40, 41, 23, 27, 25, 36, 2, 15, 13, 20, 19, 11, 17, 12, 18]
 solution : [7, 28, 33]


Before reduction : 
 pending  : [5, 37, 9, 30, 31, 39, 42, 43, 47, 48, 49, 40, 41, 23, 27, 25, 36, 2, 15, 13, 20, 19, 11, 17, 12, 18]
 solution : [7, 28, 33]

Essensial at level 7 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 1048576), (3, -1), (4, -1), (5, 134217728), (6, -1), (7, -1), (8, -1), (9, 262144), (10, -1), (11, 33554432), (12, 67108864), (13, 524288), (14, -1), (15, 1114112), (16, -1), (17, 16777216), (18, 1073741824), (19, 8388608), (20, 262144), (21, -1), (22, -1), (23, 134217728), (24, -1), (25, 4194304), (26, -1), (27, 16384), (28, -1), (29, -1), (30, 262144), (31, 4096), (32, -1), (33, -1), (34, 0), (35, 0), (36, 4194304), (37, 268435456), (38, -1), (39, 4096), (40, 33554432), (41, 16384), (42, 131072), (43, 131072), (44, -1), (45, -1), (46, -1), (47, 16777216), (48, 4194304), (49, 16777216), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 1048576), (3, -1), (4, -1), (5, 134217728), (6, -1), (7, -1), (8, -1), (9, 262144), (10, -1), (11, 33554432), (12, 67108864), (13, 524288), (14, -1), (15, 1114112), (16, -1), (17, 16777216), (18, 1073741824), (19, 8388608), (20, 262144), (21, -1), (22, -1), (23, 134217728), (24, -1), (25, 4194304), (26, -1), (27, 16384), (28, -1), (29, -1), (30, 262144), (31, 4096), (32, -1), (33, -1), (34, -1), (35, -1), (36, 4194304), (37, 268435456), (38, -1), (39, 4096), (40, 33554432), (41, 16384), (42, 131072), (43, 131072), (44, -1), (45, -1), (46, -1), (47, 16777216), (48, 4194304), (49, 16777216), (50, -1), (51, -1), (52, -1)]

Covered at level 7 : set()

After reduction : 
 pending  : [5, 37, 9, 30, 31, 39, 42, 43, 47, 48, 49, 40, 41, 23, 27, 25, 36, 2, 15, 13, 20, 19, 11, 17, 12, 18]
 solution : [7, 28, 33]


Solution : [7, 28, 33] has cost 23.


Before backtrack at level 7
 pending : [5, 37, 9, 30, 31, 39, 42, 43, 47, 48, 49, 40, 41, 23, 27, 25, 36, 2, 15, 13, 20, 19, 11, 17, 12, 18]
 solution : [7, 28, 33]

After backtrack at level 7
 pending : [5, 37, 9, 30, 31, 39, 42, 43, 47, 48, 49, 40, 41, 23, 27, 25, 36, 2, 15, 13, 20, 19, 11, 17, 12, 18, 34, 35]
 solution : [7, 28, 33]


Invert decision for 33 at level 6


New level: 7
 pending : [5, 37, 9, 30, 31, 39, 42, 43, 47, 48, 49, 40, 41, 23, 27, 25, 36, 2, 15, 13, 20, 19, 11, 17, 12, 18, 34, 35]
 solution : [7, 28]


Before reduction : 
 pending  : [5, 37, 9, 30, 31, 39, 42, 43, 47, 48, 49, 40, 41, 23, 27, 25, 36, 2, 15, 13, 20, 19, 11, 17, 12, 18, 34, 35]
 solution : [7, 28]

Essensial at level 7 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 1048576), (3, -1), (4, -1), (5, 134217728), (6, -1), (7, -1), (8, -1), (9, 262144), (10, -1), (11, 33554432), (12, 67108864), (13, 524288), (14, -1), (15, 1114112), (16, -1), (17, 16777216), (18, 1073741824), (19, 8388608), (20, 262144), (21, -1), (22, -1), (23, 134217728), (24, -1), (25, 4194304), (26, -1), (27, 16384), (28, -1), (29, -1), (30, 262144), (31, 4096), (32, -1), (33, -1), (34, -1), (35, -1), (36, 4194304), (37, 268435456), (38, -1), (39, 4096), (40, 33554432), (41, 16384), (42, 131072), (43, 131072), (44, -1), (45, -1), (46, -1), (47, 16777216), (48, 4194304), (49, 16777216), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 1048576), (3, -1), (4, -1), (5, 134217728), (6, -1), (7, -1), (8, -1), (9, 1048576), (10, -1), (11, 33554432), (12, 67108864), (13, 524288), (14, -1), (15, 1114112), (16, -1), (17, 16777216), (18, 1073741824), (19, 8388608), (20, 262144), (21, -1), (22, -1), (23, 134217728), (24, -1), (25, 4194304), (26, -1), (27, 536870912), (28, -1), (29, -1), (30, 1048576), (31, 16384), (32, -1), (33, -1), (34, 2097152), (35, 16384), (36, 4194304), (37, 268435456), (38, -1), (39, 16384), (40, 134217728), (41, 536870912), (42, 524288), (43, 524288), (44, -1), (45, -1), (46, -1), (47, 67108864), (48, 16777216), (49, 67108864), (50, -1), (51, -1), (52, -1)]

Covered at level 7 : set()

After reduction : 
 pending  : [5, 37, 9, 30, 31, 39, 42, 43, 47, 48, 49, 40, 41, 23, 27, 25, 36, 2, 15, 13, 20, 19, 11, 17, 12, 18, 34, 35]
 solution : [7, 28]


Solution : [7, 28] has cost 10.


Decide in level 7 among pending : [5, 37, 9, 30, 31, 39, 42, 43, 47, 48, 49, 40, 41, 23, 27, 25, 36, 2, 15, 13, 20, 19, 11, 17, 12, 18, 34, 35]

Coverage : [(0, -1), (1, -1), (2, 1048576), (3, -1), (4, -1), (5, 134217728), (6, -1), (7, -1), (8, -1), (9, 1048576), (10, -1), (11, 33554432), (12, 67108864), (13, 524288), (14, -1), (15, 1114112), (16, -1), (17, 16777216), (18, 1073741824), (19, 8388608), (20, 262144), (21, -1), (22, -1), (23, 134217728), (24, -1), (25, 4194304), (26, -1), (27, 536870912), (28, -1), (29, -1), (30, 1048576), (31, 16384), (32, -1), (33, -1), (34, 2097152), (35, 16384), (36, 4194304), (37, 268435456), (38, -1), (39, 16384), (40, 134217728), (41, 536870912), (42, 524288), (43, 524288), (44, -1), (45, -1), (46, -1), (47, 67108864), (48, 16777216), (49, 67108864), (50, -1), (51, -1), (52, -1)]

Decide 18 with phase True at level 7

After decision at level 7
 pending : [5, 37, 9, 30, 31, 39, 42, 43, 47, 48, 49, 40, 41, 23, 27, 25, 36, 2, 15, 13, 20, 19, 11, 17, 12, 34, 35]
 solution : [7, 28, 18]


New level: 8
 pending : [5, 37, 9, 30, 31, 39, 42, 43, 47, 48, 49, 40, 41, 23, 27, 25, 36, 2, 15, 13, 20, 19, 11, 17, 12, 34, 35]
 solution : [7, 28, 18]


Before reduction : 
 pending  : [5, 37, 9, 30, 31, 39, 42, 43, 47, 48, 49, 40, 41, 23, 27, 25, 36, 2, 15, 13, 20, 19, 11, 17, 12, 34, 35]
 solution : [7, 28, 18]

Essensial at level 8 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 1048576), (3, -1), (4, -1), (5, 134217728), (6, -1), (7, -1), (8, -1), (9, 1048576), (10, -1), (11, 33554432), (12, 67108864), (13, 524288), (14, -1), (15, 1114112), (16, -1), (17, 16777216), (18, 1073741824), (19, 8388608), (20, 262144), (21, -1), (22, -1), (23, 134217728), (24, -1), (25, 4194304), (26, -1), (27, 536870912), (28, -1), (29, -1), (30, 1048576), (31, 16384), (32, -1), (33, -1), (34, 2097152), (35, 16384), (36, 4194304), (37, 268435456), (38, -1), (39, 16384), (40, 134217728), (41, 536870912), (42, 524288), (43, 524288), (44, -1), (45, -1), (46, -1), (47, 67108864), (48, 16777216), (49, 67108864), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 0), (3, -1), (4, -1), (5, 134217728), (6, -1), (7, -1), (8, -1), (9, 262144), (10, -1), (11, 0), (12, 0), (13, 0), (14, -1), (15, 0), (16, -1), (17, 0), (18, -1), (19, 0), (20, 0), (21, -1), (22, -1), (23, 134217728), (24, -1), (25, 0), (26, -1), (27, 536870912), (28, -1), (29, -1), (30, 524288), (31, 4096), (32, -1), (33, -1), (34, 2097152), (35, 4096), (36, 0), (37, 2048), (38, -1), (39, 2048), (40, 67108864), (41, 2048), (42, 262144), (43, 262144), (44, -1), (45, -1), (46, -1), (47, 33554432), (48, 4194304), (49, 67108864), (50, -1), (51, -1), (52, -1)]

Covered at level 8 : {2, 36, 11, 12, 13, 15, 17, 19, 20, 25}

After reduction : 
 pending  : [5, 37, 9, 30, 31, 39, 42, 43, 47, 48, 49, 40, 41, 23, 27, 34, 35]
 solution : [7, 28, 18]


Before reduction : 
 pending  : [5, 37, 9, 30, 31, 39, 42, 43, 47, 48, 49, 40, 41, 23, 27, 34, 35]
 solution : [7, 28, 18]

Essensial at level 8 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 0), (3, -1), (4, -1), (5, 134217728), (6, -1), (7, -1), (8, -1), (9, 262144), (10, -1), (11, 0), (12, 0), (13, 0), (14, -1), (15, 0), (16, -1), (17, 0), (18, -1), (19, 0), (20, 0), (21, -1), (22, -1), (23, 134217728), (24, -1), (25, 0), (26, -1), (27, 536870912), (28, -1), (29, -1), (30, 524288), (31, 4096), (32, -1), (33, -1), (34, 2097152), (35, 4096), (36, 0), (37, 2048), (38, -1), (39, 2048), (40, 67108864), (41, 2048), (42, 262144), (43, 262144), (44, -1), (45, -1), (46, -1), (47, 33554432), (48, 4194304), (49, 67108864), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 134217728), (6, -1), (7, -1), (8, -1), (9, 262144), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, 134217728), (24, -1), (25, -1), (26, -1), (27, 536870912), (28, -1), (29, -1), (30, 524288), (31, 4096), (32, -1), (33, -1), (34, 2097152), (35, 4096), (36, -1), (37, 2048), (38, -1), (39, 2048), (40, 67108864), (41, 2048), (42, 262144), (43, 262144), (44, -1), (45, -1), (46, -1), (47, 33554432), (48, 4194304), (49, 67108864), (50, -1), (51, -1), (52, -1)]

Covered at level 8 : set()

After reduction : 
 pending  : [5, 37, 9, 30, 31, 39, 42, 43, 47, 48, 49, 40, 41, 23, 27, 34, 35]
 solution : [7, 28, 18]


Solution : [7, 28, 18] has cost 17.


Before backtrack at level 8
 pending : [5, 37, 9, 30, 31, 39, 42, 43, 47, 48, 49, 40, 41, 23, 27, 34, 35]
 solution : [7, 28, 18]

After backtrack at level 8
 pending : [5, 37, 9, 30, 31, 39, 42, 43, 47, 48, 49, 40, 41, 23, 27, 34, 35, 25, 36, 2, 15, 13, 20, 19, 11, 17, 12]
 solution : [7, 28, 18]


Invert decision for 18 at level 7


New level: 8
 pending : [5, 37, 9, 30, 31, 39, 42, 43, 47, 48, 49, 40, 41, 23, 27, 34, 35, 25, 36, 2, 15, 13, 20, 19, 11, 17, 12]
 solution : [7, 28]


Before reduction : 
 pending  : [5, 37, 9, 30, 31, 39, 42, 43, 47, 48, 49, 40, 41, 23, 27, 34, 35, 25, 36, 2, 15, 13, 20, 19, 11, 17, 12]
 solution : [7, 28]

Essensial at level 8 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 134217728), (6, -1), (7, -1), (8, -1), (9, 262144), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, 134217728), (24, -1), (25, -1), (26, -1), (27, 536870912), (28, -1), (29, -1), (30, 524288), (31, 4096), (32, -1), (33, -1), (34, 2097152), (35, 4096), (36, -1), (37, 2048), (38, -1), (39, 2048), (40, 67108864), (41, 2048), (42, 262144), (43, 262144), (44, -1), (45, -1), (46, -1), (47, 33554432), (48, 4194304), (49, 67108864), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 1048576), (3, -1), (4, -1), (5, 134217728), (6, -1), (7, -1), (8, -1), (9, 1048576), (10, -1), (11, 33554432), (12, 67108864), (13, 524288), (14, -1), (15, 1114112), (16, -1), (17, 16777216), (18, -1), (19, 8388608), (20, 262144), (21, -1), (22, -1), (23, 134217728), (24, -1), (25, 4194304), (26, -1), (27, 536870912), (28, -1), (29, -1), (30, 1048576), (31, 16384), (32, -1), (33, -1), (34, 2097152), (35, 16384), (36, 4194304), (37, 268435456), (38, -1), (39, 16384), (40, 134217728), (41, 536870912), (42, 524288), (43, 524288), (44, -1), (45, -1), (46, -1), (47, 67108864), (48, 16777216), (49, 67108864), (50, -1), (51, -1), (52, -1)]

Covered at level 8 : set()

After reduction : 
 pending  : [5, 37, 9, 30, 31, 39, 42, 43, 47, 48, 49, 40, 41, 23, 27, 34, 35, 25, 36, 2, 15, 13, 20, 19, 11, 17, 12]
 solution : [7, 28]


Solution : [7, 28] has cost 10.


Decide in level 8 among pending : [5, 37, 9, 30, 31, 39, 42, 43, 47, 48, 49, 40, 41, 23, 27, 34, 35, 25, 36, 2, 15, 13, 20, 19, 11, 17, 12]

Coverage : [(0, -1), (1, -1), (2, 1048576), (3, -1), (4, -1), (5, 134217728), (6, -1), (7, -1), (8, -1), (9, 1048576), (10, -1), (11, 33554432), (12, 67108864), (13, 524288), (14, -1), (15, 1114112), (16, -1), (17, 16777216), (18, -1), (19, 8388608), (20, 262144), (21, -1), (22, -1), (23, 134217728), (24, -1), (25, 4194304), (26, -1), (27, 536870912), (28, -1), (29, -1), (30, 1048576), (31, 16384), (32, -1), (33, -1), (34, 2097152), (35, 16384), (36, 4194304), (37, 268435456), (38, -1), (39, 16384), (40, 134217728), (41, 536870912), (42, 524288), (43, 524288), (44, -1), (45, -1), (46, -1), (47, 67108864), (48, 16777216), (49, 67108864), (50, -1), (51, -1), (52, -1)]

Decide 41 with phase True at level 8

After decision at level 8
 pending : [5, 37, 9, 30, 31, 39, 42, 43, 47, 48, 49, 40, 23, 27, 34, 35, 25, 36, 2, 15, 13, 20, 19, 11, 17, 12]
 solution : [7, 28, 41]


New level: 9
 pending : [5, 37, 9, 30, 31, 39, 42, 43, 47, 48, 49, 40, 23, 27, 34, 35, 25, 36, 2, 15, 13, 20, 19, 11, 17, 12]
 solution : [7, 28, 41]


Before reduction : 
 pending  : [5, 37, 9, 30, 31, 39, 42, 43, 47, 48, 49, 40, 23, 27, 34, 35, 25, 36, 2, 15, 13, 20, 19, 11, 17, 12]
 solution : [7, 28, 41]

Essensial at level 9 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 1048576), (3, -1), (4, -1), (5, 134217728), (6, -1), (7, -1), (8, -1), (9, 1048576), (10, -1), (11, 33554432), (12, 67108864), (13, 524288), (14, -1), (15, 1114112), (16, -1), (17, 16777216), (18, -1), (19, 8388608), (20, 262144), (21, -1), (22, -1), (23, 134217728), (24, -1), (25, 4194304), (26, -1), (27, 536870912), (28, -1), (29, -1), (30, 1048576), (31, 16384), (32, -1), (33, -1), (34, 2097152), (35, 16384), (36, 4194304), (37, 268435456), (38, -1), (39, 16384), (40, 134217728), (41, 536870912), (42, 524288), (43, 524288), (44, -1), (45, -1), (46, -1), (47, 67108864), (48, 16777216), (49, 67108864), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 1048576), (3, -1), (4, -1), (5, 134217728), (6, -1), (7, -1), (8, -1), (9, 1048576), (10, -1), (11, 33554432), (12, 67108864), (13, 524288), (14, -1), (15, 1114112), (16, -1), (17, 16777216), (18, -1), (19, 8388608), (20, 262144), (21, -1), (22, -1), (23, 134217728), (24, -1), (25, 4194304), (26, -1), (27, 268435456), (28, -1), (29, -1), (30, 1048576), (31, 16384), (32, -1), (33, -1), (34, 1048576), (35, 8192), (36, 4194304), (37, 134217728), (38, -1), (39, 16384), (40, 134217728), (41, -1), (42, 524288), (43, 524288), (44, -1), (45, -1), (46, -1), (47, 67108864), (48, 16777216), (49, 67108864), (50, -1), (51, -1), (52, -1)]

Covered at level 9 : set()

After reduction : 
 pending  : [5, 37, 9, 30, 31, 39, 42, 43, 47, 48, 49, 40, 23, 27, 34, 35, 25, 36, 2, 15, 13, 20, 19, 11, 17, 12]
 solution : [7, 28, 41]


Solution : [7, 28, 41] has cost 24.


Before backtrack at level 9
 pending : [5, 37, 9, 30, 31, 39, 42, 43, 47, 48, 49, 40, 23, 27, 34, 35, 25, 36, 2, 15, 13, 20, 19, 11, 17, 12]
 solution : [7, 28, 41]

After backtrack at level 9
 pending : [5, 37, 9, 30, 31, 39, 42, 43, 47, 48, 49, 40, 23, 27, 34, 35, 25, 36, 2, 15, 13, 20, 19, 11, 17, 12]
 solution : [7, 28, 41]


Invert decision for 41 at level 8


New level: 9
 pending : [5, 37, 9, 30, 31, 39, 42, 43, 47, 48, 49, 40, 23, 27, 34, 35, 25, 36, 2, 15, 13, 20, 19, 11, 17, 12]
 solution : [7, 28]


Before reduction : 
 pending  : [5, 37, 9, 30, 31, 39, 42, 43, 47, 48, 49, 40, 23, 27, 34, 35, 25, 36, 2, 15, 13, 20, 19, 11, 17, 12]
 solution : [7, 28]

Essensial at level 9 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 1048576), (3, -1), (4, -1), (5, 134217728), (6, -1), (7, -1), (8, -1), (9, 1048576), (10, -1), (11, 33554432), (12, 67108864), (13, 524288), (14, -1), (15, 1114112), (16, -1), (17, 16777216), (18, -1), (19, 8388608), (20, 262144), (21, -1), (22, -1), (23, 134217728), (24, -1), (25, 4194304), (26, -1), (27, 268435456), (28, -1), (29, -1), (30, 1048576), (31, 16384), (32, -1), (33, -1), (34, 1048576), (35, 8192), (36, 4194304), (37, 134217728), (38, -1), (39, 16384), (40, 134217728), (41, -1), (42, 524288), (43, 524288), (44, -1), (45, -1), (46, -1), (47, 67108864), (48, 16777216), (49, 67108864), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 1048576), (3, -1), (4, -1), (5, 134217728), (6, -1), (7, -1), (8, -1), (9, 1048576), (10, -1), (11, 33554432), (12, 67108864), (13, 524288), (14, -1), (15, 1114112), (16, -1), (17, 16777216), (18, -1), (19, 8388608), (20, 262144), (21, -1), (22, -1), (23, 134217728), (24, -1), (25, 4194304), (26, -1), (27, 536870912), (28, -1), (29, -1), (30, 1048576), (31, 16384), (32, -1), (33, -1), (34, 2097152), (35, 16384), (36, 4194304), (37, 268435456), (38, -1), (39, 16384), (40, 134217728), (41, -1), (42, 524288), (43, 524288), (44, -1), (45, -1), (46, -1), (47, 67108864), (48, 16777216), (49, 67108864), (50, -1), (51, -1), (52, -1)]

Covered at level 9 : set()

After reduction : 
 pending  : [5, 37, 9, 30, 31, 39, 42, 43, 47, 48, 49, 40, 23, 27, 34, 35, 25, 36, 2, 15, 13, 20, 19, 11, 17, 12]
 solution : [7, 28]


Solution : [7, 28] has cost 10.


Decide in level 9 among pending : [5, 37, 9, 30, 31, 39, 42, 43, 47, 48, 49, 40, 23, 27, 34, 35, 25, 36, 2, 15, 13, 20, 19, 11, 17, 12]

Coverage : [(0, -1), (1, -1), (2, 1048576), (3, -1), (4, -1), (5, 134217728), (6, -1), (7, -1), (8, -1), (9, 1048576), (10, -1), (11, 33554432), (12, 67108864), (13, 524288), (14, -1), (15, 1114112), (16, -1), (17, 16777216), (18, -1), (19, 8388608), (20, 262144), (21, -1), (22, -1), (23, 134217728), (24, -1), (25, 4194304), (26, -1), (27, 536870912), (28, -1), (29, -1), (30, 1048576), (31, 16384), (32, -1), (33, -1), (34, 2097152), (35, 16384), (36, 4194304), (37, 268435456), (38, -1), (39, 16384), (40, 134217728), (41, -1), (42, 524288), (43, 524288), (44, -1), (45, -1), (46, -1), (47, 67108864), (48, 16777216), (49, 67108864), (50, -1), (51, -1), (52, -1)]

Decide 27 with phase True at level 9

After decision at level 9
 pending : [5, 37, 9, 30, 31, 39, 42, 43, 47, 48, 49, 40, 23, 34, 35, 25, 36, 2, 15, 13, 20, 19, 11, 17, 12]
 solution : [7, 28, 27]


New level: 10
 pending : [5, 37, 9, 30, 31, 39, 42, 43, 47, 48, 49, 40, 23, 34, 35, 25, 36, 2, 15, 13, 20, 19, 11, 17, 12]
 solution : [7, 28, 27]


Before reduction : 
 pending  : [5, 37, 9, 30, 31, 39, 42, 43, 47, 48, 49, 40, 23, 34, 35, 25, 36, 2, 15, 13, 20, 19, 11, 17, 12]
 solution : [7, 28, 27]

Essensial at level 10 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 1048576), (3, -1), (4, -1), (5, 134217728), (6, -1), (7, -1), (8, -1), (9, 1048576), (10, -1), (11, 33554432), (12, 67108864), (13, 524288), (14, -1), (15, 1114112), (16, -1), (17, 16777216), (18, -1), (19, 8388608), (20, 262144), (21, -1), (22, -1), (23, 134217728), (24, -1), (25, 4194304), (26, -1), (27, 536870912), (28, -1), (29, -1), (30, 1048576), (31, 16384), (32, -1), (33, -1), (34, 2097152), (35, 16384), (36, 4194304), (37, 268435456), (38, -1), (39, 16384), (40, 134217728), (41, -1), (42, 524288), (43, 524288), (44, -1), (45, -1), (46, -1), (47, 67108864), (48, 16777216), (49, 67108864), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 1048576), (3, -1), (4, -1), (5, 33554432), (6, -1), (7, -1), (8, -1), (9, 262144), (10, -1), (11, 33554432), (12, 67108864), (13, 524288), (14, -1), (15, 1114112), (16, -1), (17, 16777216), (18, -1), (19, 8388608), (20, 262144), (21, -1), (22, -1), (23, 33554432), (24, -1), (25, 4194304), (26, -1), (27, -1), (28, -1), (29, -1), (30, 262144), (31, 4096), (32, -1), (33, -1), (34, 0), (35, 0), (36, 4194304), (37, 134217728), (38, -1), (39, 4096), (40, 67108864), (41, -1), (42, 131072), (43, 131072), (44, -1), (45, -1), (46, -1), (47, 16777216), (48, 4194304), (49, 33554432), (50, -1), (51, -1), (52, -1)]

Covered at level 10 : {34, 35}

After reduction : 
 pending  : [5, 37, 9, 30, 31, 39, 42, 43, 47, 48, 49, 40, 23, 25, 36, 2, 15, 13, 20, 19, 11, 17, 12]
 solution : [7, 28, 27]


Before reduction : 
 pending  : [5, 37, 9, 30, 31, 39, 42, 43, 47, 48, 49, 40, 23, 25, 36, 2, 15, 13, 20, 19, 11, 17, 12]
 solution : [7, 28, 27]

Essensial at level 10 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 1048576), (3, -1), (4, -1), (5, 33554432), (6, -1), (7, -1), (8, -1), (9, 262144), (10, -1), (11, 33554432), (12, 67108864), (13, 524288), (14, -1), (15, 1114112), (16, -1), (17, 16777216), (18, -1), (19, 8388608), (20, 262144), (21, -1), (22, -1), (23, 33554432), (24, -1), (25, 4194304), (26, -1), (27, -1), (28, -1), (29, -1), (30, 262144), (31, 4096), (32, -1), (33, -1), (34, 0), (35, 0), (36, 4194304), (37, 134217728), (38, -1), (39, 4096), (40, 67108864), (41, -1), (42, 131072), (43, 131072), (44, -1), (45, -1), (46, -1), (47, 16777216), (48, 4194304), (49, 33554432), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 1048576), (3, -1), (4, -1), (5, 33554432), (6, -1), (7, -1), (8, -1), (9, 262144), (10, -1), (11, 33554432), (12, 67108864), (13, 524288), (14, -1), (15, 1114112), (16, -1), (17, 16777216), (18, -1), (19, 8388608), (20, 262144), (21, -1), (22, -1), (23, 33554432), (24, -1), (25, 4194304), (26, -1), (27, -1), (28, -1), (29, -1), (30, 262144), (31, 4096), (32, -1), (33, -1), (34, -1), (35, -1), (36, 4194304), (37, 134217728), (38, -1), (39, 4096), (40, 67108864), (41, -1), (42, 131072), (43, 131072), (44, -1), (45, -1), (46, -1), (47, 16777216), (48, 4194304), (49, 33554432), (50, -1), (51, -1), (52, -1)]

Covered at level 10 : set()

After reduction : 
 pending  : [5, 37, 9, 30, 31, 39, 42, 43, 47, 48, 49, 40, 23, 25, 36, 2, 15, 13, 20, 19, 11, 17, 12]
 solution : [7, 28, 27]


Solution : [7, 28, 27] has cost 17.


Before backtrack at level 10
 pending : [5, 37, 9, 30, 31, 39, 42, 43, 47, 48, 49, 40, 23, 25, 36, 2, 15, 13, 20, 19, 11, 17, 12]
 solution : [7, 28, 27]

After backtrack at level 10
 pending : [5, 37, 9, 30, 31, 39, 42, 43, 47, 48, 49, 40, 23, 25, 36, 2, 15, 13, 20, 19, 11, 17, 12, 34, 35]
 solution : [7, 28, 27]


Invert decision for 27 at level 9


New level: 10
 pending : [5, 37, 9, 30, 31, 39, 42, 43, 47, 48, 49, 40, 23, 25, 36, 2, 15, 13, 20, 19, 11, 17, 12, 34, 35]
 solution : [7, 28]


Before reduction : 
 pending  : [5, 37, 9, 30, 31, 39, 42, 43, 47, 48, 49, 40, 23, 25, 36, 2, 15, 13, 20, 19, 11, 17, 12, 34, 35]
 solution : [7, 28]

Essensial at level 10 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 1048576), (3, -1), (4, -1), (5, 33554432), (6, -1), (7, -1), (8, -1), (9, 262144), (10, -1), (11, 33554432), (12, 67108864), (13, 524288), (14, -1), (15, 1114112), (16, -1), (17, 16777216), (18, -1), (19, 8388608), (20, 262144), (21, -1), (22, -1), (23, 33554432), (24, -1), (25, 4194304), (26, -1), (27, -1), (28, -1), (29, -1), (30, 262144), (31, 4096), (32, -1), (33, -1), (34, -1), (35, -1), (36, 4194304), (37, 134217728), (38, -1), (39, 4096), (40, 67108864), (41, -1), (42, 131072), (43, 131072), (44, -1), (45, -1), (46, -1), (47, 16777216), (48, 4194304), (49, 33554432), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 1048576), (3, -1), (4, -1), (5, 134217728), (6, -1), (7, -1), (8, -1), (9, 1048576), (10, -1), (11, 33554432), (12, 67108864), (13, 524288), (14, -1), (15, 1114112), (16, -1), (17, 16777216), (18, -1), (19, 8388608), (20, 262144), (21, -1), (22, -1), (23, 134217728), (24, -1), (25, 4194304), (26, -1), (27, -1), (28, -1), (29, -1), (30, 1048576), (31, 16384), (32, -1), (33, -1), (34, 2097152), (35, 16384), (36, 4194304), (37, 268435456), (38, -1), (39, 16384), (40, 134217728), (41, -1), (42, 524288), (43, 524288), (44, -1), (45, -1), (46, -1), (47, 67108864), (48, 16777216), (49, 67108864), (50, -1), (51, -1), (52, -1)]

Covered at level 10 : set()

After reduction : 
 pending  : [5, 37, 9, 30, 31, 39, 42, 43, 47, 48, 49, 40, 23, 25, 36, 2, 15, 13, 20, 19, 11, 17, 12, 34, 35]
 solution : [7, 28]


Solution : [7, 28] has cost 10.


Decide in level 10 among pending : [5, 37, 9, 30, 31, 39, 42, 43, 47, 48, 49, 40, 23, 25, 36, 2, 15, 13, 20, 19, 11, 17, 12, 34, 35]

Coverage : [(0, -1), (1, -1), (2, 1048576), (3, -1), (4, -1), (5, 134217728), (6, -1), (7, -1), (8, -1), (9, 1048576), (10, -1), (11, 33554432), (12, 67108864), (13, 524288), (14, -1), (15, 1114112), (16, -1), (17, 16777216), (18, -1), (19, 8388608), (20, 262144), (21, -1), (22, -1), (23, 134217728), (24, -1), (25, 4194304), (26, -1), (27, -1), (28, -1), (29, -1), (30, 1048576), (31, 16384), (32, -1), (33, -1), (34, 2097152), (35, 16384), (36, 4194304), (37, 268435456), (38, -1), (39, 16384), (40, 134217728), (41, -1), (42, 524288), (43, 524288), (44, -1), (45, -1), (46, -1), (47, 67108864), (48, 16777216), (49, 67108864), (50, -1), (51, -1), (52, -1)]

Decide 37 with phase True at level 10

After decision at level 10
 pending : [5, 9, 30, 31, 39, 42, 43, 47, 48, 49, 40, 23, 25, 36, 2, 15, 13, 20, 19, 11, 17, 12, 34, 35]
 solution : [7, 28, 37]


New level: 11
 pending : [5, 9, 30, 31, 39, 42, 43, 47, 48, 49, 40, 23, 25, 36, 2, 15, 13, 20, 19, 11, 17, 12, 34, 35]
 solution : [7, 28, 37]


Before reduction : 
 pending  : [5, 9, 30, 31, 39, 42, 43, 47, 48, 49, 40, 23, 25, 36, 2, 15, 13, 20, 19, 11, 17, 12, 34, 35]
 solution : [7, 28, 37]

Essensial at level 11 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 1048576), (3, -1), (4, -1), (5, 134217728), (6, -1), (7, -1), (8, -1), (9, 1048576), (10, -1), (11, 33554432), (12, 67108864), (13, 524288), (14, -1), (15, 1114112), (16, -1), (17, 16777216), (18, -1), (19, 8388608), (20, 262144), (21, -1), (22, -1), (23, 134217728), (24, -1), (25, 4194304), (26, -1), (27, -1), (28, -1), (29, -1), (30, 1048576), (31, 16384), (32, -1), (33, -1), (34, 2097152), (35, 16384), (36, 4194304), (37, 268435456), (38, -1), (39, 16384), (40, 134217728), (41, -1), (42, 524288), (43, 524288), (44, -1), (45, -1), (46, -1), (47, 67108864), (48, 16777216), (49, 67108864), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 524288), (3, -1), (4, -1), (5, 33554432), (6, -1), (7, -1), (8, -1), (9, 262144), (10, -1), (11, 16777216), (12, 33554432), (13, 262144), (14, -1), (15, 540672), (16, -1), (17, 16777216), (18, -1), (19, 8388608), (20, 262144), (21, -1), (22, -1), (23, 33554432), (24, -1), (25, 1048576), (26, -1), (27, -1), (28, -1), (29, -1), (30, 262144), (31, 4096), (32, -1), (33, -1), (34, 2097152), (35, 4096), (36, 1048576), (37, -1), (38, -1), (39, 4096), (40, 134217728), (41, -1), (42, 131072), (43, 131072), (44, -1), (45, -1), (46, -1), (47, 33554432), (48, 4194304), (49, 67108864), (50, -1), (51, -1), (52, -1)]

Covered at level 11 : set()

After reduction : 
 pending  : [5, 9, 30, 31, 39, 42, 43, 47, 48, 49, 40, 23, 25, 36, 2, 15, 13, 20, 19, 11, 17, 12, 34, 35]
 solution : [7, 28, 37]


Solution : [7, 28, 37] has cost 28.


Before backtrack at level 11
 pending : [5, 9, 30, 31, 39, 42, 43, 47, 48, 49, 40, 23, 25, 36, 2, 15, 13, 20, 19, 11, 17, 12, 34, 35]
 solution : [7, 28, 37]

After backtrack at level 11
 pending : [5, 9, 30, 31, 39, 42, 43, 47, 48, 49, 40, 23, 25, 36, 2, 15, 13, 20, 19, 11, 17, 12, 34, 35]
 solution : [7, 28, 37]


Invert decision for 37 at level 10


New level: 11
 pending : [5, 9, 30, 31, 39, 42, 43, 47, 48, 49, 40, 23, 25, 36, 2, 15, 13, 20, 19, 11, 17, 12, 34, 35]
 solution : [7, 28]


Before reduction : 
 pending  : [5, 9, 30, 31, 39, 42, 43, 47, 48, 49, 40, 23, 25, 36, 2, 15, 13, 20, 19, 11, 17, 12, 34, 35]
 solution : [7, 28]

Essensial at level 11 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 524288), (3, -1), (4, -1), (5, 33554432), (6, -1), (7, -1), (8, -1), (9, 262144), (10, -1), (11, 16777216), (12, 33554432), (13, 262144), (14, -1), (15, 540672), (16, -1), (17, 16777216), (18, -1), (19, 8388608), (20, 262144), (21, -1), (22, -1), (23, 33554432), (24, -1), (25, 1048576), (26, -1), (27, -1), (28, -1), (29, -1), (30, 262144), (31, 4096), (32, -1), (33, -1), (34, 2097152), (35, 4096), (36, 1048576), (37, -1), (38, -1), (39, 4096), (40, 134217728), (41, -1), (42, 131072), (43, 131072), (44, -1), (45, -1), (46, -1), (47, 33554432), (48, 4194304), (49, 67108864), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 1048576), (3, -1), (4, -1), (5, 134217728), (6, -1), (7, -1), (8, -1), (9, 1048576), (10, -1), (11, 33554432), (12, 67108864), (13, 524288), (14, -1), (15, 1114112), (16, -1), (17, 16777216), (18, -1), (19, 8388608), (20, 262144), (21, -1), (22, -1), (23, 134217728), (24, -1), (25, 4194304), (26, -1), (27, -1), (28, -1), (29, -1), (30, 1048576), (31, 16384), (32, -1), (33, -1), (34, 2097152), (35, 16384), (36, 4194304), (37, -1), (38, -1), (39, 16384), (40, 134217728), (41, -1), (42, 524288), (43, 524288), (44, -1), (45, -1), (46, -1), (47, 67108864), (48, 16777216), (49, 67108864), (50, -1), (51, -1), (52, -1)]

Covered at level 11 : set()

After reduction : 
 pending  : [5, 9, 30, 31, 39, 42, 43, 47, 48, 49, 40, 23, 25, 36, 2, 15, 13, 20, 19, 11, 17, 12, 34, 35]
 solution : [7, 28]


Solution : [7, 28] has cost 10.


Decide in level 11 among pending : [5, 9, 30, 31, 39, 42, 43, 47, 48, 49, 40, 23, 25, 36, 2, 15, 13, 20, 19, 11, 17, 12, 34, 35]

Coverage : [(0, -1), (1, -1), (2, 1048576), (3, -1), (4, -1), (5, 134217728), (6, -1), (7, -1), (8, -1), (9, 1048576), (10, -1), (11, 33554432), (12, 67108864), (13, 524288), (14, -1), (15, 1114112), (16, -1), (17, 16777216), (18, -1), (19, 8388608), (20, 262144), (21, -1), (22, -1), (23, 134217728), (24, -1), (25, 4194304), (26, -1), (27, -1), (28, -1), (29, -1), (30, 1048576), (31, 16384), (32, -1), (33, -1), (34, 2097152), (35, 16384), (36, 4194304), (37, -1), (38, -1), (39, 16384), (40, 134217728), (41, -1), (42, 524288), (43, 524288), (44, -1), (45, -1), (46, -1), (47, 67108864), (48, 16777216), (49, 67108864), (50, -1), (51, -1), (52, -1)]

Decide 5 with phase True at level 11

After decision at level 11
 pending : [9, 30, 31, 39, 42, 43, 47, 48, 49, 40, 23, 25, 36, 2, 15, 13, 20, 19, 11, 17, 12, 34, 35]
 solution : [7, 28, 5]


New level: 12
 pending : [9, 30, 31, 39, 42, 43, 47, 48, 49, 40, 23, 25, 36, 2, 15, 13, 20, 19, 11, 17, 12, 34, 35]
 solution : [7, 28, 5]


Before reduction : 
 pending  : [9, 30, 31, 39, 42, 43, 47, 48, 49, 40, 23, 25, 36, 2, 15, 13, 20, 19, 11, 17, 12, 34, 35]
 solution : [7, 28, 5]

Essensial at level 12 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 1048576), (3, -1), (4, -1), (5, 134217728), (6, -1), (7, -1), (8, -1), (9, 1048576), (10, -1), (11, 33554432), (12, 67108864), (13, 524288), (14, -1), (15, 1114112), (16, -1), (17, 16777216), (18, -1), (19, 8388608), (20, 262144), (21, -1), (22, -1), (23, 134217728), (24, -1), (25, 4194304), (26, -1), (27, -1), (28, -1), (29, -1), (30, 1048576), (31, 16384), (32, -1), (33, -1), (34, 2097152), (35, 16384), (36, 4194304), (37, -1), (38, -1), (39, 16384), (40, 134217728), (41, -1), (42, 524288), (43, 524288), (44, -1), (45, -1), (46, -1), (47, 67108864), (48, 16777216), (49, 67108864), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 524288), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, 0), (10, -1), (11, 16777216), (12, 33554432), (13, 262144), (14, -1), (15, 540672), (16, -1), (17, 16777216), (18, -1), (19, 8388608), (20, 262144), (21, -1), (22, -1), (23, 0), (24, -1), (25, 2097152), (26, -1), (27, -1), (28, -1), (29, -1), (30, 0), (31, 0), (32, -1), (33, -1), (34, 0), (35, 0), (36, 2097152), (37, -1), (38, -1), (39, 0), (40, 0), (41, -1), (42, 0), (43, 0), (44, -1), (45, -1), (46, -1), (47, 0), (48, 0), (49, 0), (50, -1), (51, -1), (52, -1)]

Covered at level 12 : {34, 35, 39, 40, 9, 42, 43, 47, 48, 49, 23, 30, 31}

After reduction : 
 pending  : [25, 36, 2, 15, 13, 20, 19, 11, 17, 12]
 solution : [7, 28, 5]


Before reduction : 
 pending  : [25, 36, 2, 15, 13, 20, 19, 11, 17, 12]
 solution : [7, 28, 5]

Essensial at level 12 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 524288), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, 0), (10, -1), (11, 16777216), (12, 33554432), (13, 262144), (14, -1), (15, 540672), (16, -1), (17, 16777216), (18, -1), (19, 8388608), (20, 262144), (21, -1), (22, -1), (23, 0), (24, -1), (25, 2097152), (26, -1), (27, -1), (28, -1), (29, -1), (30, 0), (31, 0), (32, -1), (33, -1), (34, 0), (35, 0), (36, 2097152), (37, -1), (38, -1), (39, 0), (40, 0), (41, -1), (42, 0), (43, 0), (44, -1), (45, -1), (46, -1), (47, 0), (48, 0), (49, 0), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 524288), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, 16777216), (12, 33554432), (13, 262144), (14, -1), (15, 540672), (16, -1), (17, 16777216), (18, -1), (19, 8388608), (20, 262144), (21, -1), (22, -1), (23, -1), (24, -1), (25, 2097152), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, 2097152), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 12 : set()

After reduction : 
 pending  : [25, 36, 2, 15, 13, 20, 19, 11, 17, 12]
 solution : [7, 28, 5]


Solution : [7, 28, 5] has cost 14.


Decide in level 12 among pending : [25, 36, 2, 15, 13, 20, 19, 11, 17, 12]

Coverage : [(0, -1), (1, -1), (2, 524288), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, 16777216), (12, 33554432), (13, 262144), (14, -1), (15, 540672), (16, -1), (17, 16777216), (18, -1), (19, 8388608), (20, 262144), (21, -1), (22, -1), (23, -1), (24, -1), (25, 2097152), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, 2097152), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Decide 12 with phase True at level 12

After decision at level 12
 pending : [25, 36, 2, 15, 13, 20, 19, 11, 17]
 solution : [7, 28, 5, 12]


New level: 13
 pending : [25, 36, 2, 15, 13, 20, 19, 11, 17]
 solution : [7, 28, 5, 12]


Before reduction : 
 pending  : [25, 36, 2, 15, 13, 20, 19, 11, 17]
 solution : [7, 28, 5, 12]

Essensial at level 13 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 524288), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, 16777216), (12, 33554432), (13, 262144), (14, -1), (15, 540672), (16, -1), (17, 16777216), (18, -1), (19, 8388608), (20, 262144), (21, -1), (22, -1), (23, -1), (24, -1), (25, 2097152), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, 2097152), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 0), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, 0), (12, -1), (13, 0), (14, -1), (15, 0), (16, -1), (17, 262144), (18, -1), (19, 65536), (20, 65536), (21, -1), (22, -1), (23, -1), (24, -1), (25, 2048), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, 2048), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 13 : {2, 11, 13, 15}

After reduction : 
 pending  : [25, 36, 20, 19, 17]
 solution : [7, 28, 5, 12]


Before reduction : 
 pending  : [25, 36, 20, 19, 17]
 solution : [7, 28, 5, 12]

Essensial at level 13 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 0), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, 0), (12, -1), (13, 0), (14, -1), (15, 0), (16, -1), (17, 262144), (18, -1), (19, 65536), (20, 65536), (21, -1), (22, -1), (23, -1), (24, -1), (25, 2048), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, 2048), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, 262144), (18, -1), (19, 65536), (20, 65536), (21, -1), (22, -1), (23, -1), (24, -1), (25, 2048), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, 2048), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 13 : set()

After reduction : 
 pending  : [25, 36, 20, 19, 17]
 solution : [7, 28, 5, 12]


Solution : [7, 28, 5, 12] has cost 23.


Before backtrack at level 13
 pending : [25, 36, 20, 19, 17]
 solution : [7, 28, 5, 12]

After backtrack at level 13
 pending : [25, 36, 20, 19, 17, 2, 15, 13, 11]
 solution : [7, 28, 5, 12]


Invert decision for 12 at level 12


New level: 13
 pending : [25, 36, 20, 19, 17, 2, 15, 13, 11]
 solution : [7, 28, 5]


Before reduction : 
 pending  : [25, 36, 20, 19, 17, 2, 15, 13, 11]
 solution : [7, 28, 5]

Essensial at level 13 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, 262144), (18, -1), (19, 65536), (20, 65536), (21, -1), (22, -1), (23, -1), (24, -1), (25, 2048), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, 2048), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 524288), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, 16777216), (12, -1), (13, 262144), (14, -1), (15, 540672), (16, -1), (17, 16777216), (18, -1), (19, 8388608), (20, 262144), (21, -1), (22, -1), (23, -1), (24, -1), (25, 2097152), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, 2097152), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 13 : set()

After reduction : 
 pending  : [25, 36, 20, 19, 17, 2, 15, 13, 11]
 solution : [7, 28, 5]


Solution : [7, 28, 5] has cost 14.


Decide in level 13 among pending : [25, 36, 20, 19, 17, 2, 15, 13, 11]

Coverage : [(0, -1), (1, -1), (2, 524288), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, 16777216), (12, -1), (13, 262144), (14, -1), (15, 540672), (16, -1), (17, 16777216), (18, -1), (19, 8388608), (20, 262144), (21, -1), (22, -1), (23, -1), (24, -1), (25, 2097152), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, 2097152), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Decide 17 with phase True at level 13

After decision at level 13
 pending : [25, 36, 20, 19, 2, 15, 13, 11]
 solution : [7, 28, 5, 17]


New level: 14
 pending : [25, 36, 20, 19, 2, 15, 13, 11]
 solution : [7, 28, 5, 17]


Before reduction : 
 pending  : [25, 36, 20, 19, 2, 15, 13, 11]
 solution : [7, 28, 5, 17]

Essensial at level 14 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 524288), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, 16777216), (12, -1), (13, 262144), (14, -1), (15, 540672), (16, -1), (17, 16777216), (18, -1), (19, 8388608), (20, 262144), (21, -1), (22, -1), (23, -1), (24, -1), (25, 2097152), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, 2097152), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 262144), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, 4194304), (12, -1), (13, 0), (14, -1), (15, 264192), (16, -1), (17, -1), (18, -1), (19, 0), (20, 0), (21, -1), (22, -1), (23, -1), (24, -1), (25, 524288), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, 524288), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 14 : {19, 20, 13}

After reduction : 
 pending  : [25, 36, 2, 15, 11]
 solution : [7, 28, 5, 17]


Before reduction : 
 pending  : [25, 36, 2, 15, 11]
 solution : [7, 28, 5, 17]

Essensial at level 14 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 262144), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, 4194304), (12, -1), (13, 0), (14, -1), (15, 264192), (16, -1), (17, -1), (18, -1), (19, 0), (20, 0), (21, -1), (22, -1), (23, -1), (24, -1), (25, 524288), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, 524288), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 262144), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, 4194304), (12, -1), (13, -1), (14, -1), (15, 264192), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, 524288), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, 524288), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 14 : set()

After reduction : 
 pending  : [25, 36, 2, 15, 11]
 solution : [7, 28, 5, 17]


Solution : [7, 28, 5, 17] has cost 21.


Before backtrack at level 14
 pending : [25, 36, 2, 15, 11]
 solution : [7, 28, 5, 17]

After backtrack at level 14
 pending : [25, 36, 2, 15, 11, 20, 19, 13]
 solution : [7, 28, 5, 17]


Invert decision for 17 at level 13


New level: 14
 pending : [25, 36, 2, 15, 11, 20, 19, 13]
 solution : [7, 28, 5]


Before reduction : 
 pending  : [25, 36, 2, 15, 11, 20, 19, 13]
 solution : [7, 28, 5]

Essensial at level 14 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 262144), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, 4194304), (12, -1), (13, -1), (14, -1), (15, 264192), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, 524288), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, 524288), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 524288), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, 16777216), (12, -1), (13, 262144), (14, -1), (15, 540672), (16, -1), (17, -1), (18, -1), (19, 8388608), (20, 262144), (21, -1), (22, -1), (23, -1), (24, -1), (25, 2097152), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, 2097152), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 14 : set()

After reduction : 
 pending  : [25, 36, 2, 15, 11, 20, 19, 13]
 solution : [7, 28, 5]


Solution : [7, 28, 5] has cost 14.


Decide in level 14 among pending : [25, 36, 2, 15, 11, 20, 19, 13]

Coverage : [(0, -1), (1, -1), (2, 524288), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, 16777216), (12, -1), (13, 262144), (14, -1), (15, 540672), (16, -1), (17, -1), (18, -1), (19, 8388608), (20, 262144), (21, -1), (22, -1), (23, -1), (24, -1), (25, 2097152), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, 2097152), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Decide 11 with phase True at level 14

After decision at level 14
 pending : [25, 36, 2, 15, 20, 19, 13]
 solution : [7, 28, 5, 11]


New level: 15
 pending : [25, 36, 2, 15, 20, 19, 13]
 solution : [7, 28, 5, 11]


Before reduction : 
 pending  : [25, 36, 2, 15, 20, 19, 13]
 solution : [7, 28, 5, 11]

Essensial at level 15 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 524288), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, 16777216), (12, -1), (13, 262144), (14, -1), (15, 540672), (16, -1), (17, -1), (18, -1), (19, 8388608), (20, 262144), (21, -1), (22, -1), (23, -1), (24, -1), (25, 2097152), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, 2097152), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 0), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, 0), (14, -1), (15, 0), (16, -1), (17, -1), (18, -1), (19, 65536), (20, 65536), (21, -1), (22, -1), (23, -1), (24, -1), (25, 2048), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, 2048), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 15 : {2, 13, 15}

After reduction : 
 pending  : [25, 36, 20, 19]
 solution : [7, 28, 5, 11]


Before reduction : 
 pending  : [25, 36, 20, 19]
 solution : [7, 28, 5, 11]

Essensial at level 15 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 0), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, 0), (14, -1), (15, 0), (16, -1), (17, -1), (18, -1), (19, 65536), (20, 65536), (21, -1), (22, -1), (23, -1), (24, -1), (25, 2048), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, 2048), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, 65536), (20, 65536), (21, -1), (22, -1), (23, -1), (24, -1), (25, 2048), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, 2048), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 15 : set()

After reduction : 
 pending  : [25, 36, 20, 19]
 solution : [7, 28, 5, 11]


Solution : [7, 28, 5, 11] has cost 23.


Before backtrack at level 15
 pending : [25, 36, 20, 19]
 solution : [7, 28, 5, 11]

After backtrack at level 15
 pending : [25, 36, 20, 19, 2, 15, 13]
 solution : [7, 28, 5, 11]


Invert decision for 11 at level 14


New level: 15
 pending : [25, 36, 20, 19, 2, 15, 13]
 solution : [7, 28, 5]


Before reduction : 
 pending  : [25, 36, 20, 19, 2, 15, 13]
 solution : [7, 28, 5]

Essensial at level 15 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, 65536), (20, 65536), (21, -1), (22, -1), (23, -1), (24, -1), (25, 2048), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, 2048), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 524288), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, 262144), (14, -1), (15, 540672), (16, -1), (17, -1), (18, -1), (19, 8388608), (20, 262144), (21, -1), (22, -1), (23, -1), (24, -1), (25, 2097152), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, 2097152), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 15 : set()

After reduction : 
 pending  : [25, 36, 20, 19, 2, 15, 13]
 solution : [7, 28, 5]


Solution : [7, 28, 5] has cost 14.


Decide in level 15 among pending : [25, 36, 20, 19, 2, 15, 13]

Coverage : [(0, -1), (1, -1), (2, 524288), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, 262144), (14, -1), (15, 540672), (16, -1), (17, -1), (18, -1), (19, 8388608), (20, 262144), (21, -1), (22, -1), (23, -1), (24, -1), (25, 2097152), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, 2097152), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Decide 19 with phase True at level 15

After decision at level 15
 pending : [25, 36, 20, 2, 15, 13]
 solution : [7, 28, 5, 19]


New level: 16
 pending : [25, 36, 20, 2, 15, 13]
 solution : [7, 28, 5, 19]


Before reduction : 
 pending  : [25, 36, 20, 2, 15, 13]
 solution : [7, 28, 5, 19]

Essensial at level 16 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 524288), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, 262144), (14, -1), (15, 540672), (16, -1), (17, -1), (18, -1), (19, 8388608), (20, 262144), (21, -1), (22, -1), (23, -1), (24, -1), (25, 2097152), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, 2097152), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 262144), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, 0), (14, -1), (15, 264192), (16, -1), (17, -1), (18, -1), (19, -1), (20, 0), (21, -1), (22, -1), (23, -1), (24, -1), (25, 524288), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, 524288), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 16 : {20, 13}

After reduction : 
 pending  : [25, 36, 2, 15]
 solution : [7, 28, 5, 19]


Before reduction : 
 pending  : [25, 36, 2, 15]
 solution : [7, 28, 5, 19]

Essensial at level 16 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 262144), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, 0), (14, -1), (15, 264192), (16, -1), (17, -1), (18, -1), (19, -1), (20, 0), (21, -1), (22, -1), (23, -1), (24, -1), (25, 524288), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, 524288), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 262144), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, 264192), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, 524288), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, 524288), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 16 : set()

After reduction : 
 pending  : [25, 36, 2, 15]
 solution : [7, 28, 5, 19]


Solution : [7, 28, 5, 19] has cost 21.


Before backtrack at level 16
 pending : [25, 36, 2, 15]
 solution : [7, 28, 5, 19]

After backtrack at level 16
 pending : [25, 36, 2, 15, 20, 13]
 solution : [7, 28, 5, 19]


Invert decision for 19 at level 15


New level: 16
 pending : [25, 36, 2, 15, 20, 13]
 solution : [7, 28, 5]


Before reduction : 
 pending  : [25, 36, 2, 15, 20, 13]
 solution : [7, 28, 5]

Essensial at level 16 : {20}

Before removed
 coverage : [(0, -1), (1, -1), (2, 262144), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, 264192), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, 524288), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, 524288), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 524288), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, 131072), (14, -1), (15, 540672), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, 2097152), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, 2097152), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 16 : set()

After reduction : 
 pending  : [25, 36, 2, 15, 13]
 solution : [7, 28, 5, 20]


Before reduction : 
 pending  : [25, 36, 2, 15, 13]
 solution : [7, 28, 5, 20]

Essensial at level 16 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 524288), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, 131072), (14, -1), (15, 540672), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, 2097152), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, 2097152), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 524288), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, 131072), (14, -1), (15, 540672), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, 2097152), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, 2097152), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 16 : set()

After reduction : 
 pending  : [25, 36, 2, 15, 13]
 solution : [7, 28, 5, 20]


Solution : [7, 28, 5, 20] has cost 21.


Before backtrack at level 16
 pending : [25, 36, 2, 15, 13]
 solution : [7, 28, 5, 20]

After backtrack at level 16
 pending : [25, 36, 2, 15, 13, 20]
 solution : [7, 28, 5]


Before backtrack at level 15
 pending : [25, 36, 2, 15, 13, 20]
 solution : [7, 28, 5]

After backtrack at level 15
 pending : [25, 36, 2, 15, 13, 20, 19]
 solution : [7, 28, 5]


Before backtrack at level 14
 pending : [25, 36, 2, 15, 13, 20, 19]
 solution : [7, 28, 5]

After backtrack at level 14
 pending : [25, 36, 2, 15, 13, 20, 19, 11]
 solution : [7, 28, 5]


Before backtrack at level 13
 pending : [25, 36, 2, 15, 13, 20, 19, 11]
 solution : [7, 28, 5]

After backtrack at level 13
 pending : [25, 36, 2, 15, 13, 20, 19, 11, 17]
 solution : [7, 28, 5]


Before backtrack at level 12
 pending : [25, 36, 2, 15, 13, 20, 19, 11, 17]
 solution : [7, 28, 5]

After backtrack at level 12
 pending : [25, 36, 2, 15, 13, 20, 19, 11, 17, 9, 30, 31, 39, 42, 43, 47, 48, 49, 40, 23, 34, 35, 12]
 solution : [7, 28, 5]


Invert decision for 5 at level 11


New level: 12
 pending : [25, 36, 2, 15, 13, 20, 19, 11, 17, 9, 30, 31, 39, 42, 43, 47, 48, 49, 40, 23, 34, 35, 12]
 solution : [7, 28]


Before reduction : 
 pending  : [25, 36, 2, 15, 13, 20, 19, 11, 17, 9, 30, 31, 39, 42, 43, 47, 48, 49, 40, 23, 34, 35, 12]
 solution : [7, 28]

Essensial at level 12 : {23}

Before removed
 coverage : [(0, -1), (1, -1), (2, 524288), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, 131072), (14, -1), (15, 540672), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, 2097152), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, 2097152), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 524288), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, 0), (10, -1), (11, 16777216), (12, 33554432), (13, 262144), (14, -1), (15, 540672), (16, -1), (17, 16777216), (18, -1), (19, 8388608), (20, 262144), (21, -1), (22, -1), (23, -1), (24, -1), (25, 2097152), (26, -1), (27, -1), (28, -1), (29, -1), (30, 0), (31, 0), (32, -1), (33, -1), (34, 0), (35, 0), (36, 2097152), (37, -1), (38, -1), (39, 0), (40, 0), (41, -1), (42, 0), (43, 0), (44, -1), (45, -1), (46, -1), (47, 0), (48, 0), (49, 0), (50, -1), (51, -1), (52, -1)]

Covered at level 12 : {34, 35, 39, 40, 9, 42, 43, 47, 48, 49, 30, 31}

After reduction : 
 pending  : [25, 36, 2, 15, 13, 20, 19, 11, 17, 12]
 solution : [7, 28, 23]


Before reduction : 
 pending  : [25, 36, 2, 15, 13, 20, 19, 11, 17, 12]
 solution : [7, 28, 23]

Essensial at level 12 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 524288), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, 0), (10, -1), (11, 16777216), (12, 33554432), (13, 262144), (14, -1), (15, 540672), (16, -1), (17, 16777216), (18, -1), (19, 8388608), (20, 262144), (21, -1), (22, -1), (23, -1), (24, -1), (25, 2097152), (26, -1), (27, -1), (28, -1), (29, -1), (30, 0), (31, 0), (32, -1), (33, -1), (34, 0), (35, 0), (36, 2097152), (37, -1), (38, -1), (39, 0), (40, 0), (41, -1), (42, 0), (43, 0), (44, -1), (45, -1), (46, -1), (47, 0), (48, 0), (49, 0), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 524288), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, 16777216), (12, 33554432), (13, 262144), (14, -1), (15, 540672), (16, -1), (17, 16777216), (18, -1), (19, 8388608), (20, 262144), (21, -1), (22, -1), (23, -1), (24, -1), (25, 2097152), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, 2097152), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 12 : set()

After reduction : 
 pending  : [25, 36, 2, 15, 13, 20, 19, 11, 17, 12]
 solution : [7, 28, 23]


Solution : [7, 28, 23] has cost 17.


Before backtrack at level 12
 pending : [25, 36, 2, 15, 13, 20, 19, 11, 17, 12]
 solution : [7, 28, 23]

After backtrack at level 12
 pending : [25, 36, 2, 15, 13, 20, 19, 11, 17, 12, 23, 9, 30, 31, 39, 42, 43, 47, 48, 49, 40, 34, 35]
 solution : [7, 28]


Before backtrack at level 11
 pending : [25, 36, 2, 15, 13, 20, 19, 11, 17, 12, 23, 9, 30, 31, 39, 42, 43, 47, 48, 49, 40, 34, 35]
 solution : [7, 28]

After backtrack at level 11
 pending : [25, 36, 2, 15, 13, 20, 19, 11, 17, 12, 23, 9, 30, 31, 39, 42, 43, 47, 48, 49, 40, 34, 35, 5]
 solution : [7, 28]


Before backtrack at level 10
 pending : [25, 36, 2, 15, 13, 20, 19, 11, 17, 12, 23, 9, 30, 31, 39, 42, 43, 47, 48, 49, 40, 34, 35, 5]
 solution : [7, 28]

After backtrack at level 10
 pending : [25, 36, 2, 15, 13, 20, 19, 11, 17, 12, 23, 9, 30, 31, 39, 42, 43, 47, 48, 49, 40, 34, 35, 5, 37]
 solution : [7, 28]


Before backtrack at level 9
 pending : [25, 36, 2, 15, 13, 20, 19, 11, 17, 12, 23, 9, 30, 31, 39, 42, 43, 47, 48, 49, 40, 34, 35, 5, 37]
 solution : [7, 28]

After backtrack at level 9
 pending : [25, 36, 2, 15, 13, 20, 19, 11, 17, 12, 23, 9, 30, 31, 39, 42, 43, 47, 48, 49, 40, 34, 35, 5, 37, 27]
 solution : [7, 28]


Before backtrack at level 8
 pending : [25, 36, 2, 15, 13, 20, 19, 11, 17, 12, 23, 9, 30, 31, 39, 42, 43, 47, 48, 49, 40, 34, 35, 5, 37, 27]
 solution : [7, 28]

After backtrack at level 8
 pending : [25, 36, 2, 15, 13, 20, 19, 11, 17, 12, 23, 9, 30, 31, 39, 42, 43, 47, 48, 49, 40, 34, 35, 5, 37, 27, 41]
 solution : [7, 28]


Before backtrack at level 7
 pending : [25, 36, 2, 15, 13, 20, 19, 11, 17, 12, 23, 9, 30, 31, 39, 42, 43, 47, 48, 49, 40, 34, 35, 5, 37, 27, 41]
 solution : [7, 28]

After backtrack at level 7
 pending : [25, 36, 2, 15, 13, 20, 19, 11, 17, 12, 23, 9, 30, 31, 39, 42, 43, 47, 48, 49, 40, 34, 35, 5, 37, 27, 41, 18]
 solution : [7, 28]


Before backtrack at level 6
 pending : [25, 36, 2, 15, 13, 20, 19, 11, 17, 12, 23, 9, 30, 31, 39, 42, 43, 47, 48, 49, 40, 34, 35, 5, 37, 27, 41, 18]
 solution : [7, 28]

After backtrack at level 6
 pending : [25, 36, 2, 15, 13, 20, 19, 11, 17, 12, 23, 9, 30, 31, 39, 42, 43, 47, 48, 49, 40, 34, 35, 5, 37, 27, 41, 18, 33]
 solution : [7, 28]


Before backtrack at level 5
 pending : [25, 36, 2, 15, 13, 20, 19, 11, 17, 12, 23, 9, 30, 31, 39, 42, 43, 47, 48, 49, 40, 34, 35, 5, 37, 27, 41, 18, 33]
 solution : [7, 28]

After backtrack at level 5
 pending : [25, 36, 2, 15, 13, 20, 19, 11, 17, 12, 23, 9, 30, 31, 39, 42, 43, 47, 48, 49, 40, 34, 35, 5, 37, 27, 41, 18, 33, 16]
 solution : [7, 28]


Invert decision for 28 at level 4


New level: 5
 pending : [25, 36, 2, 15, 13, 20, 19, 11, 17, 12, 23, 9, 30, 31, 39, 42, 43, 47, 48, 49, 40, 34, 35, 5, 37, 27, 41, 18, 33, 16]
 solution : [7]


Before reduction : 
 pending  : [25, 36, 2, 15, 13, 20, 19, 11, 17, 12, 23, 9, 30, 31, 39, 42, 43, 47, 48, 49, 40, 34, 35, 5, 37, 27, 41, 18, 33, 16]
 solution : [7]

Essensial at level 5 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 524288), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, 16777216), (12, 33554432), (13, 262144), (14, -1), (15, 540672), (16, -1), (17, 16777216), (18, -1), (19, 8388608), (20, 262144), (21, -1), (22, -1), (23, -1), (24, -1), (25, 2097152), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, 2097152), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 1048576), (3, -1), (4, -1), (5, 134217728), (6, -1), (7, -1), (8, -1), (9, 1048576), (10, -1), (11, 33554432), (12, 67108864), (13, 524288), (14, -1), (15, 1114112), (16, 2147483648), (17, 16777216), (18, 1073741824), (19, 8388608), (20, 262144), (21, -1), (22, -1), (23, 134217728), (24, -1), (25, 4194304), (26, -1), (27, 1073741824), (28, -1), (29, -1), (30, 1048576), (31, 16384), (32, -1), (33, 2147483648), (34, 4194304), (35, 32768), (36, 4194304), (37, 268435456), (38, -1), (39, 16384), (40, 134217728), (41, 1073741824), (42, 524288), (43, 524288), (44, -1), (45, -1), (46, -1), (47, 67108864), (48, 16777216), (49, 67108864), (50, -1), (51, -1), (52, -1)]

Covered at level 5 : set()

After reduction : 
 pending  : [25, 36, 2, 15, 13, 20, 19, 11, 17, 12, 23, 9, 30, 31, 39, 42, 43, 47, 48, 49, 40, 34, 35, 5, 37, 27, 41, 18, 33, 16]
 solution : [7]


Solution : [7] has cost 6.


Decide in level 5 among pending : [25, 36, 2, 15, 13, 20, 19, 11, 17, 12, 23, 9, 30, 31, 39, 42, 43, 47, 48, 49, 40, 34, 35, 5, 37, 27, 41, 18, 33, 16]

Coverage : [(0, -1), (1, -1), (2, 1048576), (3, -1), (4, -1), (5, 134217728), (6, -1), (7, -1), (8, -1), (9, 1048576), (10, -1), (11, 33554432), (12, 67108864), (13, 524288), (14, -1), (15, 1114112), (16, 2147483648), (17, 16777216), (18, 1073741824), (19, 8388608), (20, 262144), (21, -1), (22, -1), (23, 134217728), (24, -1), (25, 4194304), (26, -1), (27, 1073741824), (28, -1), (29, -1), (30, 1048576), (31, 16384), (32, -1), (33, 2147483648), (34, 4194304), (35, 32768), (36, 4194304), (37, 268435456), (38, -1), (39, 16384), (40, 134217728), (41, 1073741824), (42, 524288), (43, 524288), (44, -1), (45, -1), (46, -1), (47, 67108864), (48, 16777216), (49, 67108864), (50, -1), (51, -1), (52, -1)]

Decide 33 with phase True at level 5

After decision at level 5
 pending : [25, 36, 2, 15, 13, 20, 19, 11, 17, 12, 23, 9, 30, 31, 39, 42, 43, 47, 48, 49, 40, 34, 35, 5, 37, 27, 41, 18, 16]
 solution : [7, 33]


New level: 6
 pending : [25, 36, 2, 15, 13, 20, 19, 11, 17, 12, 23, 9, 30, 31, 39, 42, 43, 47, 48, 49, 40, 34, 35, 5, 37, 27, 41, 18, 16]
 solution : [7, 33]


Before reduction : 
 pending  : [25, 36, 2, 15, 13, 20, 19, 11, 17, 12, 23, 9, 30, 31, 39, 42, 43, 47, 48, 49, 40, 34, 35, 5, 37, 27, 41, 18, 16]
 solution : [7, 33]

Essensial at level 6 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 1048576), (3, -1), (4, -1), (5, 134217728), (6, -1), (7, -1), (8, -1), (9, 1048576), (10, -1), (11, 33554432), (12, 67108864), (13, 524288), (14, -1), (15, 1114112), (16, 2147483648), (17, 16777216), (18, 1073741824), (19, 8388608), (20, 262144), (21, -1), (22, -1), (23, 134217728), (24, -1), (25, 4194304), (26, -1), (27, 1073741824), (28, -1), (29, -1), (30, 1048576), (31, 16384), (32, -1), (33, 2147483648), (34, 4194304), (35, 32768), (36, 4194304), (37, 268435456), (38, -1), (39, 16384), (40, 134217728), (41, 1073741824), (42, 524288), (43, 524288), (44, -1), (45, -1), (46, -1), (47, 67108864), (48, 16777216), (49, 67108864), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 1048576), (3, -1), (4, -1), (5, 134217728), (6, -1), (7, -1), (8, -1), (9, 262144), (10, -1), (11, 33554432), (12, 67108864), (13, 524288), (14, -1), (15, 1114112), (16, 2147483648), (17, 16777216), (18, 1073741824), (19, 8388608), (20, 262144), (21, -1), (22, -1), (23, 134217728), (24, -1), (25, 4194304), (26, -1), (27, 32768), (28, -1), (29, -1), (30, 262144), (31, 4096), (32, -1), (33, -1), (34, 0), (35, 0), (36, 4194304), (37, 268435456), (38, -1), (39, 4096), (40, 33554432), (41, 32768), (42, 131072), (43, 131072), (44, -1), (45, -1), (46, -1), (47, 16777216), (48, 4194304), (49, 16777216), (50, -1), (51, -1), (52, -1)]

Covered at level 6 : {34, 35}

After reduction : 
 pending  : [25, 36, 2, 15, 13, 20, 19, 11, 17, 12, 23, 9, 30, 31, 39, 42, 43, 47, 48, 49, 40, 5, 37, 27, 41, 18, 16]
 solution : [7, 33]


Before reduction : 
 pending  : [25, 36, 2, 15, 13, 20, 19, 11, 17, 12, 23, 9, 30, 31, 39, 42, 43, 47, 48, 49, 40, 5, 37, 27, 41, 18, 16]
 solution : [7, 33]

Essensial at level 6 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 1048576), (3, -1), (4, -1), (5, 134217728), (6, -1), (7, -1), (8, -1), (9, 262144), (10, -1), (11, 33554432), (12, 67108864), (13, 524288), (14, -1), (15, 1114112), (16, 2147483648), (17, 16777216), (18, 1073741824), (19, 8388608), (20, 262144), (21, -1), (22, -1), (23, 134217728), (24, -1), (25, 4194304), (26, -1), (27, 32768), (28, -1), (29, -1), (30, 262144), (31, 4096), (32, -1), (33, -1), (34, 0), (35, 0), (36, 4194304), (37, 268435456), (38, -1), (39, 4096), (40, 33554432), (41, 32768), (42, 131072), (43, 131072), (44, -1), (45, -1), (46, -1), (47, 16777216), (48, 4194304), (49, 16777216), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 1048576), (3, -1), (4, -1), (5, 134217728), (6, -1), (7, -1), (8, -1), (9, 262144), (10, -1), (11, 33554432), (12, 67108864), (13, 524288), (14, -1), (15, 1114112), (16, 2147483648), (17, 16777216), (18, 1073741824), (19, 8388608), (20, 262144), (21, -1), (22, -1), (23, 134217728), (24, -1), (25, 4194304), (26, -1), (27, 32768), (28, -1), (29, -1), (30, 262144), (31, 4096), (32, -1), (33, -1), (34, -1), (35, -1), (36, 4194304), (37, 268435456), (38, -1), (39, 4096), (40, 33554432), (41, 32768), (42, 131072), (43, 131072), (44, -1), (45, -1), (46, -1), (47, 16777216), (48, 4194304), (49, 16777216), (50, -1), (51, -1), (52, -1)]

Covered at level 6 : set()

After reduction : 
 pending  : [25, 36, 2, 15, 13, 20, 19, 11, 17, 12, 23, 9, 30, 31, 39, 42, 43, 47, 48, 49, 40, 5, 37, 27, 41, 18, 16]
 solution : [7, 33]


Solution : [7, 33] has cost 19.


Before backtrack at level 6
 pending : [25, 36, 2, 15, 13, 20, 19, 11, 17, 12, 23, 9, 30, 31, 39, 42, 43, 47, 48, 49, 40, 5, 37, 27, 41, 18, 16]
 solution : [7, 33]

After backtrack at level 6
 pending : [25, 36, 2, 15, 13, 20, 19, 11, 17, 12, 23, 9, 30, 31, 39, 42, 43, 47, 48, 49, 40, 5, 37, 27, 41, 18, 16, 34, 35]
 solution : [7, 33]


Invert decision for 33 at level 5


New level: 6
 pending : [25, 36, 2, 15, 13, 20, 19, 11, 17, 12, 23, 9, 30, 31, 39, 42, 43, 47, 48, 49, 40, 5, 37, 27, 41, 18, 16, 34, 35]
 solution : [7]


Before reduction : 
 pending  : [25, 36, 2, 15, 13, 20, 19, 11, 17, 12, 23, 9, 30, 31, 39, 42, 43, 47, 48, 49, 40, 5, 37, 27, 41, 18, 16, 34, 35]
 solution : [7]

Essensial at level 6 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 1048576), (3, -1), (4, -1), (5, 134217728), (6, -1), (7, -1), (8, -1), (9, 262144), (10, -1), (11, 33554432), (12, 67108864), (13, 524288), (14, -1), (15, 1114112), (16, 2147483648), (17, 16777216), (18, 1073741824), (19, 8388608), (20, 262144), (21, -1), (22, -1), (23, 134217728), (24, -1), (25, 4194304), (26, -1), (27, 32768), (28, -1), (29, -1), (30, 262144), (31, 4096), (32, -1), (33, -1), (34, -1), (35, -1), (36, 4194304), (37, 268435456), (38, -1), (39, 4096), (40, 33554432), (41, 32768), (42, 131072), (43, 131072), (44, -1), (45, -1), (46, -1), (47, 16777216), (48, 4194304), (49, 16777216), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 1048576), (3, -1), (4, -1), (5, 134217728), (6, -1), (7, -1), (8, -1), (9, 1048576), (10, -1), (11, 33554432), (12, 67108864), (13, 524288), (14, -1), (15, 1114112), (16, 2147483648), (17, 16777216), (18, 1073741824), (19, 8388608), (20, 262144), (21, -1), (22, -1), (23, 134217728), (24, -1), (25, 4194304), (26, -1), (27, 1073741824), (28, -1), (29, -1), (30, 1048576), (31, 16384), (32, -1), (33, -1), (34, 4194304), (35, 32768), (36, 4194304), (37, 268435456), (38, -1), (39, 16384), (40, 134217728), (41, 1073741824), (42, 524288), (43, 524288), (44, -1), (45, -1), (46, -1), (47, 67108864), (48, 16777216), (49, 67108864), (50, -1), (51, -1), (52, -1)]

Covered at level 6 : set()

After reduction : 
 pending  : [25, 36, 2, 15, 13, 20, 19, 11, 17, 12, 23, 9, 30, 31, 39, 42, 43, 47, 48, 49, 40, 5, 37, 27, 41, 18, 16, 34, 35]
 solution : [7]


Solution : [7] has cost 6.


Decide in level 6 among pending : [25, 36, 2, 15, 13, 20, 19, 11, 17, 12, 23, 9, 30, 31, 39, 42, 43, 47, 48, 49, 40, 5, 37, 27, 41, 18, 16, 34, 35]

Coverage : [(0, -1), (1, -1), (2, 1048576), (3, -1), (4, -1), (5, 134217728), (6, -1), (7, -1), (8, -1), (9, 1048576), (10, -1), (11, 33554432), (12, 67108864), (13, 524288), (14, -1), (15, 1114112), (16, 2147483648), (17, 16777216), (18, 1073741824), (19, 8388608), (20, 262144), (21, -1), (22, -1), (23, 134217728), (24, -1), (25, 4194304), (26, -1), (27, 1073741824), (28, -1), (29, -1), (30, 1048576), (31, 16384), (32, -1), (33, -1), (34, 4194304), (35, 32768), (36, 4194304), (37, 268435456), (38, -1), (39, 16384), (40, 134217728), (41, 1073741824), (42, 524288), (43, 524288), (44, -1), (45, -1), (46, -1), (47, 67108864), (48, 16777216), (49, 67108864), (50, -1), (51, -1), (52, -1)]

Decide 16 with phase True at level 6

After decision at level 6
 pending : [25, 36, 2, 15, 13, 20, 19, 11, 17, 12, 23, 9, 30, 31, 39, 42, 43, 47, 48, 49, 40, 5, 37, 27, 41, 18, 34, 35]
 solution : [7, 16]


New level: 7
 pending : [25, 36, 2, 15, 13, 20, 19, 11, 17, 12, 23, 9, 30, 31, 39, 42, 43, 47, 48, 49, 40, 5, 37, 27, 41, 18, 34, 35]
 solution : [7, 16]


Before reduction : 
 pending  : [25, 36, 2, 15, 13, 20, 19, 11, 17, 12, 23, 9, 30, 31, 39, 42, 43, 47, 48, 49, 40, 5, 37, 27, 41, 18, 34, 35]
 solution : [7, 16]

Essensial at level 7 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 1048576), (3, -1), (4, -1), (5, 134217728), (6, -1), (7, -1), (8, -1), (9, 1048576), (10, -1), (11, 33554432), (12, 67108864), (13, 524288), (14, -1), (15, 1114112), (16, 2147483648), (17, 16777216), (18, 1073741824), (19, 8388608), (20, 262144), (21, -1), (22, -1), (23, 134217728), (24, -1), (25, 4194304), (26, -1), (27, 1073741824), (28, -1), (29, -1), (30, 1048576), (31, 16384), (32, -1), (33, -1), (34, 4194304), (35, 32768), (36, 4194304), (37, 268435456), (38, -1), (39, 16384), (40, 134217728), (41, 1073741824), (42, 524288), (43, 524288), (44, -1), (45, -1), (46, -1), (47, 67108864), (48, 16777216), (49, 67108864), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 0), (3, -1), (4, -1), (5, 134217728), (6, -1), (7, -1), (8, -1), (9, 262144), (10, -1), (11, 0), (12, 0), (13, 0), (14, -1), (15, 0), (16, -1), (17, 0), (18, 0), (19, 0), (20, 0), (21, -1), (22, -1), (23, 134217728), (24, -1), (25, 0), (26, -1), (27, 1073741824), (28, -1), (29, -1), (30, 524288), (31, 4096), (32, -1), (33, -1), (34, 4194304), (35, 8192), (36, 0), (37, 2048), (38, -1), (39, 2048), (40, 67108864), (41, 4096), (42, 131072), (43, 131072), (44, -1), (45, -1), (46, -1), (47, 33554432), (48, 4194304), (49, 67108864), (50, -1), (51, -1), (52, -1)]

Covered at level 7 : {2, 36, 11, 12, 13, 15, 17, 18, 19, 20, 25}

After reduction : 
 pending  : [23, 9, 30, 31, 39, 42, 43, 47, 48, 49, 40, 5, 37, 27, 41, 34, 35]
 solution : [7, 16]


Before reduction : 
 pending  : [23, 9, 30, 31, 39, 42, 43, 47, 48, 49, 40, 5, 37, 27, 41, 34, 35]
 solution : [7, 16]

Essensial at level 7 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 0), (3, -1), (4, -1), (5, 134217728), (6, -1), (7, -1), (8, -1), (9, 262144), (10, -1), (11, 0), (12, 0), (13, 0), (14, -1), (15, 0), (16, -1), (17, 0), (18, 0), (19, 0), (20, 0), (21, -1), (22, -1), (23, 134217728), (24, -1), (25, 0), (26, -1), (27, 1073741824), (28, -1), (29, -1), (30, 524288), (31, 4096), (32, -1), (33, -1), (34, 4194304), (35, 8192), (36, 0), (37, 2048), (38, -1), (39, 2048), (40, 67108864), (41, 4096), (42, 131072), (43, 131072), (44, -1), (45, -1), (46, -1), (47, 33554432), (48, 4194304), (49, 67108864), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 134217728), (6, -1), (7, -1), (8, -1), (9, 262144), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, 134217728), (24, -1), (25, -1), (26, -1), (27, 1073741824), (28, -1), (29, -1), (30, 524288), (31, 4096), (32, -1), (33, -1), (34, 4194304), (35, 8192), (36, -1), (37, 2048), (38, -1), (39, 2048), (40, 67108864), (41, 4096), (42, 131072), (43, 131072), (44, -1), (45, -1), (46, -1), (47, 33554432), (48, 4194304), (49, 67108864), (50, -1), (51, -1), (52, -1)]

Covered at level 7 : set()

After reduction : 
 pending  : [23, 9, 30, 31, 39, 42, 43, 47, 48, 49, 40, 5, 37, 27, 41, 34, 35]
 solution : [7, 16]


Solution : [7, 16] has cost 13.


Decide in level 7 among pending : [23, 9, 30, 31, 39, 42, 43, 47, 48, 49, 40, 5, 37, 27, 41, 34, 35]

Coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 134217728), (6, -1), (7, -1), (8, -1), (9, 262144), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, 134217728), (24, -1), (25, -1), (26, -1), (27, 1073741824), (28, -1), (29, -1), (30, 524288), (31, 4096), (32, -1), (33, -1), (34, 4194304), (35, 8192), (36, -1), (37, 2048), (38, -1), (39, 2048), (40, 67108864), (41, 4096), (42, 131072), (43, 131072), (44, -1), (45, -1), (46, -1), (47, 33554432), (48, 4194304), (49, 67108864), (50, -1), (51, -1), (52, -1)]

Decide 27 with phase True at level 7

After decision at level 7
 pending : [23, 9, 30, 31, 39, 42, 43, 47, 48, 49, 40, 5, 37, 41, 34, 35]
 solution : [7, 16, 27]


New level: 8
 pending : [23, 9, 30, 31, 39, 42, 43, 47, 48, 49, 40, 5, 37, 41, 34, 35]
 solution : [7, 16, 27]


Before reduction : 
 pending  : [23, 9, 30, 31, 39, 42, 43, 47, 48, 49, 40, 5, 37, 41, 34, 35]
 solution : [7, 16, 27]

Essensial at level 8 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 134217728), (6, -1), (7, -1), (8, -1), (9, 262144), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, 134217728), (24, -1), (25, -1), (26, -1), (27, 1073741824), (28, -1), (29, -1), (30, 524288), (31, 4096), (32, -1), (33, -1), (34, 4194304), (35, 8192), (36, -1), (37, 2048), (38, -1), (39, 2048), (40, 67108864), (41, 4096), (42, 131072), (43, 131072), (44, -1), (45, -1), (46, -1), (47, 33554432), (48, 4194304), (49, 67108864), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 33554432), (6, -1), (7, -1), (8, -1), (9, 65536), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, 33554432), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, 131072), (31, 1024), (32, -1), (33, -1), (34, 0), (35, 0), (36, -1), (37, 512), (38, -1), (39, 512), (40, 33554432), (41, 0), (42, 32768), (43, 32768), (44, -1), (45, -1), (46, -1), (47, 8388608), (48, 1048576), (49, 33554432), (50, -1), (51, -1), (52, -1)]

Covered at level 8 : {41, 34, 35}

After reduction : 
 pending  : [23, 9, 30, 31, 39, 42, 43, 47, 48, 49, 40, 5, 37]
 solution : [7, 16, 27]


Before reduction : 
 pending  : [23, 9, 30, 31, 39, 42, 43, 47, 48, 49, 40, 5, 37]
 solution : [7, 16, 27]

Essensial at level 8 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 33554432), (6, -1), (7, -1), (8, -1), (9, 65536), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, 33554432), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, 131072), (31, 1024), (32, -1), (33, -1), (34, 0), (35, 0), (36, -1), (37, 512), (38, -1), (39, 512), (40, 33554432), (41, 0), (42, 32768), (43, 32768), (44, -1), (45, -1), (46, -1), (47, 8388608), (48, 1048576), (49, 33554432), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 33554432), (6, -1), (7, -1), (8, -1), (9, 65536), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, 33554432), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, 131072), (31, 1024), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, 512), (38, -1), (39, 512), (40, 33554432), (41, -1), (42, 32768), (43, 32768), (44, -1), (45, -1), (46, -1), (47, 8388608), (48, 1048576), (49, 33554432), (50, -1), (51, -1), (52, -1)]

Covered at level 8 : set()

After reduction : 
 pending  : [23, 9, 30, 31, 39, 42, 43, 47, 48, 49, 40, 5, 37]
 solution : [7, 16, 27]


Solution : [7, 16, 27] has cost 20.


Before backtrack at level 8
 pending : [23, 9, 30, 31, 39, 42, 43, 47, 48, 49, 40, 5, 37]
 solution : [7, 16, 27]

After backtrack at level 8
 pending : [23, 9, 30, 31, 39, 42, 43, 47, 48, 49, 40, 5, 37, 41, 34, 35]
 solution : [7, 16, 27]


Invert decision for 27 at level 7


New level: 8
 pending : [23, 9, 30, 31, 39, 42, 43, 47, 48, 49, 40, 5, 37, 41, 34, 35]
 solution : [7, 16]


Before reduction : 
 pending  : [23, 9, 30, 31, 39, 42, 43, 47, 48, 49, 40, 5, 37, 41, 34, 35]
 solution : [7, 16]

Essensial at level 8 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 33554432), (6, -1), (7, -1), (8, -1), (9, 65536), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, 33554432), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, 131072), (31, 1024), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, 512), (38, -1), (39, 512), (40, 33554432), (41, -1), (42, 32768), (43, 32768), (44, -1), (45, -1), (46, -1), (47, 8388608), (48, 1048576), (49, 33554432), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 134217728), (6, -1), (7, -1), (8, -1), (9, 262144), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, 134217728), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, 524288), (31, 4096), (32, -1), (33, -1), (34, 4194304), (35, 8192), (36, -1), (37, 2048), (38, -1), (39, 2048), (40, 67108864), (41, 4096), (42, 131072), (43, 131072), (44, -1), (45, -1), (46, -1), (47, 33554432), (48, 4194304), (49, 67108864), (50, -1), (51, -1), (52, -1)]

Covered at level 8 : set()

After reduction : 
 pending  : [23, 9, 30, 31, 39, 42, 43, 47, 48, 49, 40, 5, 37, 41, 34, 35]
 solution : [7, 16]


Solution : [7, 16] has cost 13.


Decide in level 8 among pending : [23, 9, 30, 31, 39, 42, 43, 47, 48, 49, 40, 5, 37, 41, 34, 35]

Coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 134217728), (6, -1), (7, -1), (8, -1), (9, 262144), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, 134217728), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, 524288), (31, 4096), (32, -1), (33, -1), (34, 4194304), (35, 8192), (36, -1), (37, 2048), (38, -1), (39, 2048), (40, 67108864), (41, 4096), (42, 131072), (43, 131072), (44, -1), (45, -1), (46, -1), (47, 33554432), (48, 4194304), (49, 67108864), (50, -1), (51, -1), (52, -1)]

Decide 23 with phase True at level 8

After decision at level 8
 pending : [9, 30, 31, 39, 42, 43, 47, 48, 49, 40, 5, 37, 41, 34, 35]
 solution : [7, 16, 23]


New level: 9
 pending : [9, 30, 31, 39, 42, 43, 47, 48, 49, 40, 5, 37, 41, 34, 35]
 solution : [7, 16, 23]


Before reduction : 
 pending  : [9, 30, 31, 39, 42, 43, 47, 48, 49, 40, 5, 37, 41, 34, 35]
 solution : [7, 16, 23]

Essensial at level 9 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 134217728), (6, -1), (7, -1), (8, -1), (9, 262144), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, 134217728), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, 524288), (31, 4096), (32, -1), (33, -1), (34, 4194304), (35, 8192), (36, -1), (37, 2048), (38, -1), (39, 2048), (40, 67108864), (41, 4096), (42, 131072), (43, 131072), (44, -1), (45, -1), (46, -1), (47, 33554432), (48, 4194304), (49, 67108864), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 0), (6, -1), (7, -1), (8, -1), (9, 0), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, 0), (31, 0), (32, -1), (33, -1), (34, 0), (35, 0), (36, -1), (37, 0), (38, -1), (39, 0), (40, 0), (41, 0), (42, 0), (43, 0), (44, -1), (45, -1), (46, -1), (47, 0), (48, 0), (49, 0), (50, -1), (51, -1), (52, -1)]

Covered at level 9 : {34, 35, 5, 37, 39, 40, 9, 42, 43, 41, 47, 48, 49, 30, 31}

After reduction : 
 pending  : []
 solution : [7, 16, 23]


Before reduction : 
 pending  : []
 solution : [7, 16, 23]

Essensial at level 9 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 0), (6, -1), (7, -1), (8, -1), (9, 0), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, 0), (31, 0), (32, -1), (33, -1), (34, 0), (35, 0), (36, -1), (37, 0), (38, -1), (39, 0), (40, 0), (41, 0), (42, 0), (43, 0), (44, -1), (45, -1), (46, -1), (47, 0), (48, 0), (49, 0), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 9 : set()

After reduction : 
 pending  : []
 solution : [7, 16, 23]


Solution : [7, 16, 23] has cost 20.


Before backtrack at level 9
 pending : []
 solution : [7, 16, 23]

After backtrack at level 9
 pending : [9, 30, 31, 39, 42, 43, 47, 48, 49, 40, 5, 37, 41, 34, 35]
 solution : [7, 16, 23]


Invert decision for 23 at level 8


New level: 9
 pending : [9, 30, 31, 39, 42, 43, 47, 48, 49, 40, 5, 37, 41, 34, 35]
 solution : [7, 16]


Before reduction : 
 pending  : [9, 30, 31, 39, 42, 43, 47, 48, 49, 40, 5, 37, 41, 34, 35]
 solution : [7, 16]

Essensial at level 9 : {5}

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, 0), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, 0), (31, 0), (32, -1), (33, -1), (34, 0), (35, 0), (36, -1), (37, 0), (38, -1), (39, 0), (40, 0), (41, 0), (42, 0), (43, 0), (44, -1), (45, -1), (46, -1), (47, 0), (48, 0), (49, 0), (50, -1), (51, -1), (52, -1)]

Covered at level 9 : {34, 35, 37, 39, 40, 9, 42, 43, 41, 47, 48, 49, 30, 31}

After reduction : 
 pending  : []
 solution : [7, 16, 5]


Before reduction : 
 pending  : []
 solution : [7, 16, 5]

Essensial at level 9 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, 0), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, 0), (31, 0), (32, -1), (33, -1), (34, 0), (35, 0), (36, -1), (37, 0), (38, -1), (39, 0), (40, 0), (41, 0), (42, 0), (43, 0), (44, -1), (45, -1), (46, -1), (47, 0), (48, 0), (49, 0), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 9 : set()

After reduction : 
 pending  : []
 solution : [7, 16, 5]


Solution : [7, 16, 5] has cost 17.


Before backtrack at level 9
 pending : []
 solution : [7, 16, 5]

After backtrack at level 9
 pending : [5, 9, 30, 31, 39, 42, 43, 47, 48, 49, 40, 37, 41, 34, 35]
 solution : [7, 16]


Before backtrack at level 8
 pending : [5, 9, 30, 31, 39, 42, 43, 47, 48, 49, 40, 37, 41, 34, 35]
 solution : [7, 16]

After backtrack at level 8
 pending : [5, 9, 30, 31, 39, 42, 43, 47, 48, 49, 40, 37, 41, 34, 35, 23]
 solution : [7, 16]


Before backtrack at level 7
 pending : [5, 9, 30, 31, 39, 42, 43, 47, 48, 49, 40, 37, 41, 34, 35, 23]
 solution : [7, 16]

After backtrack at level 7
 pending : [5, 9, 30, 31, 39, 42, 43, 47, 48, 49, 40, 37, 41, 34, 35, 23, 25, 36, 2, 15, 13, 20, 19, 11, 17, 12, 18, 27]
 solution : [7, 16]


Invert decision for 16 at level 6


New level: 7
 pending : [5, 9, 30, 31, 39, 42, 43, 47, 48, 49, 40, 37, 41, 34, 35, 23, 25, 36, 2, 15, 13, 20, 19, 11, 17, 12, 18, 27]
 solution : [7]


Before reduction : 
 pending  : [5, 9, 30, 31, 39, 42, 43, 47, 48, 49, 40, 37, 41, 34, 35, 23, 25, 36, 2, 15, 13, 20, 19, 11, 17, 12, 18, 27]
 solution : [7]

Essensial at level 7 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 1048576), (3, -1), (4, -1), (5, 134217728), (6, -1), (7, -1), (8, -1), (9, 1048576), (10, -1), (11, 33554432), (12, 67108864), (13, 524288), (14, -1), (15, 1114112), (16, -1), (17, 16777216), (18, 1073741824), (19, 8388608), (20, 262144), (21, -1), (22, -1), (23, 134217728), (24, -1), (25, 4194304), (26, -1), (27, 1073741824), (28, -1), (29, -1), (30, 1048576), (31, 16384), (32, -1), (33, -1), (34, 4194304), (35, 32768), (36, 4194304), (37, 268435456), (38, -1), (39, 16384), (40, 134217728), (41, 1073741824), (42, 524288), (43, 524288), (44, -1), (45, -1), (46, -1), (47, 67108864), (48, 16777216), (49, 67108864), (50, -1), (51, -1), (52, -1)]

Covered at level 7 : set()

After reduction : 
 pending  : [5, 9, 30, 31, 39, 42, 43, 47, 48, 49, 40, 37, 41, 34, 35, 23, 25, 36, 2, 15, 13, 20, 19, 11, 17, 12, 18, 27]
 solution : [7]


Solution : [7] has cost 6.


Decide in level 7 among pending : [5, 9, 30, 31, 39, 42, 43, 47, 48, 49, 40, 37, 41, 34, 35, 23, 25, 36, 2, 15, 13, 20, 19, 11, 17, 12, 18, 27]

Coverage : [(0, -1), (1, -1), (2, 1048576), (3, -1), (4, -1), (5, 134217728), (6, -1), (7, -1), (8, -1), (9, 1048576), (10, -1), (11, 33554432), (12, 67108864), (13, 524288), (14, -1), (15, 1114112), (16, -1), (17, 16777216), (18, 1073741824), (19, 8388608), (20, 262144), (21, -1), (22, -1), (23, 134217728), (24, -1), (25, 4194304), (26, -1), (27, 1073741824), (28, -1), (29, -1), (30, 1048576), (31, 16384), (32, -1), (33, -1), (34, 4194304), (35, 32768), (36, 4194304), (37, 268435456), (38, -1), (39, 16384), (40, 134217728), (41, 1073741824), (42, 524288), (43, 524288), (44, -1), (45, -1), (46, -1), (47, 67108864), (48, 16777216), (49, 67108864), (50, -1), (51, -1), (52, -1)]

Decide 41 with phase True at level 7

After decision at level 7
 pending : [5, 9, 30, 31, 39, 42, 43, 47, 48, 49, 40, 37, 34, 35, 23, 25, 36, 2, 15, 13, 20, 19, 11, 17, 12, 18, 27]
 solution : [7, 41]


New level: 8
 pending : [5, 9, 30, 31, 39, 42, 43, 47, 48, 49, 40, 37, 34, 35, 23, 25, 36, 2, 15, 13, 20, 19, 11, 17, 12, 18, 27]
 solution : [7, 41]


Before reduction : 
 pending  : [5, 9, 30, 31, 39, 42, 43, 47, 48, 49, 40, 37, 34, 35, 23, 25, 36, 2, 15, 13, 20, 19, 11, 17, 12, 18, 27]
 solution : [7, 41]

Essensial at level 8 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 1048576), (3, -1), (4, -1), (5, 134217728), (6, -1), (7, -1), (8, -1), (9, 1048576), (10, -1), (11, 33554432), (12, 67108864), (13, 524288), (14, -1), (15, 1114112), (16, -1), (17, 16777216), (18, 1073741824), (19, 8388608), (20, 262144), (21, -1), (22, -1), (23, 134217728), (24, -1), (25, 4194304), (26, -1), (27, 1073741824), (28, -1), (29, -1), (30, 1048576), (31, 16384), (32, -1), (33, -1), (34, 4194304), (35, 32768), (36, 4194304), (37, 268435456), (38, -1), (39, 16384), (40, 134217728), (41, 1073741824), (42, 524288), (43, 524288), (44, -1), (45, -1), (46, -1), (47, 67108864), (48, 16777216), (49, 67108864), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 1048576), (3, -1), (4, -1), (5, 134217728), (6, -1), (7, -1), (8, -1), (9, 1048576), (10, -1), (11, 33554432), (12, 67108864), (13, 524288), (14, -1), (15, 1114112), (16, -1), (17, 16777216), (18, 1073741824), (19, 8388608), (20, 262144), (21, -1), (22, -1), (23, 134217728), (24, -1), (25, 4194304), (26, -1), (27, 536870912), (28, -1), (29, -1), (30, 1048576), (31, 16384), (32, -1), (33, -1), (34, 2097152), (35, 16384), (36, 4194304), (37, 134217728), (38, -1), (39, 16384), (40, 134217728), (41, -1), (42, 524288), (43, 524288), (44, -1), (45, -1), (46, -1), (47, 67108864), (48, 16777216), (49, 67108864), (50, -1), (51, -1), (52, -1)]

Covered at level 8 : set()

After reduction : 
 pending  : [5, 9, 30, 31, 39, 42, 43, 47, 48, 49, 40, 37, 34, 35, 23, 25, 36, 2, 15, 13, 20, 19, 11, 17, 12, 18, 27]
 solution : [7, 41]


Solution : [7, 41] has cost 20.


Before backtrack at level 8
 pending : [5, 9, 30, 31, 39, 42, 43, 47, 48, 49, 40, 37, 34, 35, 23, 25, 36, 2, 15, 13, 20, 19, 11, 17, 12, 18, 27]
 solution : [7, 41]

After backtrack at level 8
 pending : [5, 9, 30, 31, 39, 42, 43, 47, 48, 49, 40, 37, 34, 35, 23, 25, 36, 2, 15, 13, 20, 19, 11, 17, 12, 18, 27]
 solution : [7, 41]


Invert decision for 41 at level 7


New level: 8
 pending : [5, 9, 30, 31, 39, 42, 43, 47, 48, 49, 40, 37, 34, 35, 23, 25, 36, 2, 15, 13, 20, 19, 11, 17, 12, 18, 27]
 solution : [7]


Before reduction : 
 pending  : [5, 9, 30, 31, 39, 42, 43, 47, 48, 49, 40, 37, 34, 35, 23, 25, 36, 2, 15, 13, 20, 19, 11, 17, 12, 18, 27]
 solution : [7]

Essensial at level 8 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 1048576), (3, -1), (4, -1), (5, 134217728), (6, -1), (7, -1), (8, -1), (9, 1048576), (10, -1), (11, 33554432), (12, 67108864), (13, 524288), (14, -1), (15, 1114112), (16, -1), (17, 16777216), (18, 1073741824), (19, 8388608), (20, 262144), (21, -1), (22, -1), (23, 134217728), (24, -1), (25, 4194304), (26, -1), (27, 536870912), (28, -1), (29, -1), (30, 1048576), (31, 16384), (32, -1), (33, -1), (34, 2097152), (35, 16384), (36, 4194304), (37, 134217728), (38, -1), (39, 16384), (40, 134217728), (41, -1), (42, 524288), (43, 524288), (44, -1), (45, -1), (46, -1), (47, 67108864), (48, 16777216), (49, 67108864), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 1048576), (3, -1), (4, -1), (5, 134217728), (6, -1), (7, -1), (8, -1), (9, 1048576), (10, -1), (11, 33554432), (12, 67108864), (13, 524288), (14, -1), (15, 1114112), (16, -1), (17, 16777216), (18, 1073741824), (19, 8388608), (20, 262144), (21, -1), (22, -1), (23, 134217728), (24, -1), (25, 4194304), (26, -1), (27, 1073741824), (28, -1), (29, -1), (30, 1048576), (31, 16384), (32, -1), (33, -1), (34, 4194304), (35, 32768), (36, 4194304), (37, 268435456), (38, -1), (39, 16384), (40, 134217728), (41, -1), (42, 524288), (43, 524288), (44, -1), (45, -1), (46, -1), (47, 67108864), (48, 16777216), (49, 67108864), (50, -1), (51, -1), (52, -1)]

Covered at level 8 : set()

After reduction : 
 pending  : [5, 9, 30, 31, 39, 42, 43, 47, 48, 49, 40, 37, 34, 35, 23, 25, 36, 2, 15, 13, 20, 19, 11, 17, 12, 18, 27]
 solution : [7]


Solution : [7] has cost 6.


Decide in level 8 among pending : [5, 9, 30, 31, 39, 42, 43, 47, 48, 49, 40, 37, 34, 35, 23, 25, 36, 2, 15, 13, 20, 19, 11, 17, 12, 18, 27]

Coverage : [(0, -1), (1, -1), (2, 1048576), (3, -1), (4, -1), (5, 134217728), (6, -1), (7, -1), (8, -1), (9, 1048576), (10, -1), (11, 33554432), (12, 67108864), (13, 524288), (14, -1), (15, 1114112), (16, -1), (17, 16777216), (18, 1073741824), (19, 8388608), (20, 262144), (21, -1), (22, -1), (23, 134217728), (24, -1), (25, 4194304), (26, -1), (27, 1073741824), (28, -1), (29, -1), (30, 1048576), (31, 16384), (32, -1), (33, -1), (34, 4194304), (35, 32768), (36, 4194304), (37, 268435456), (38, -1), (39, 16384), (40, 134217728), (41, -1), (42, 524288), (43, 524288), (44, -1), (45, -1), (46, -1), (47, 67108864), (48, 16777216), (49, 67108864), (50, -1), (51, -1), (52, -1)]

Decide 18 with phase True at level 8

After decision at level 8
 pending : [5, 9, 30, 31, 39, 42, 43, 47, 48, 49, 40, 37, 34, 35, 23, 25, 36, 2, 15, 13, 20, 19, 11, 17, 12, 27]
 solution : [7, 18]


New level: 9
 pending : [5, 9, 30, 31, 39, 42, 43, 47, 48, 49, 40, 37, 34, 35, 23, 25, 36, 2, 15, 13, 20, 19, 11, 17, 12, 27]
 solution : [7, 18]


Before reduction : 
 pending  : [5, 9, 30, 31, 39, 42, 43, 47, 48, 49, 40, 37, 34, 35, 23, 25, 36, 2, 15, 13, 20, 19, 11, 17, 12, 27]
 solution : [7, 18]

Essensial at level 9 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 1048576), (3, -1), (4, -1), (5, 134217728), (6, -1), (7, -1), (8, -1), (9, 1048576), (10, -1), (11, 33554432), (12, 67108864), (13, 524288), (14, -1), (15, 1114112), (16, -1), (17, 16777216), (18, 1073741824), (19, 8388608), (20, 262144), (21, -1), (22, -1), (23, 134217728), (24, -1), (25, 4194304), (26, -1), (27, 1073741824), (28, -1), (29, -1), (30, 1048576), (31, 16384), (32, -1), (33, -1), (34, 4194304), (35, 32768), (36, 4194304), (37, 268435456), (38, -1), (39, 16384), (40, 134217728), (41, -1), (42, 524288), (43, 524288), (44, -1), (45, -1), (46, -1), (47, 67108864), (48, 16777216), (49, 67108864), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 0), (3, -1), (4, -1), (5, 134217728), (6, -1), (7, -1), (8, -1), (9, 262144), (10, -1), (11, 0), (12, 0), (13, 0), (14, -1), (15, 0), (16, -1), (17, 0), (18, -1), (19, 0), (20, 0), (21, -1), (22, -1), (23, 134217728), (24, -1), (25, 0), (26, -1), (27, 1073741824), (28, -1), (29, -1), (30, 524288), (31, 4096), (32, -1), (33, -1), (34, 4194304), (35, 8192), (36, 0), (37, 2048), (38, -1), (39, 2048), (40, 67108864), (41, -1), (42, 262144), (43, 262144), (44, -1), (45, -1), (46, -1), (47, 33554432), (48, 4194304), (49, 67108864), (50, -1), (51, -1), (52, -1)]

Covered at level 9 : {2, 36, 11, 12, 13, 15, 17, 19, 20, 25}

After reduction : 
 pending  : [5, 9, 30, 31, 39, 42, 43, 47, 48, 49, 40, 37, 34, 35, 23, 27]
 solution : [7, 18]


Before reduction : 
 pending  : [5, 9, 30, 31, 39, 42, 43, 47, 48, 49, 40, 37, 34, 35, 23, 27]
 solution : [7, 18]

Essensial at level 9 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 0), (3, -1), (4, -1), (5, 134217728), (6, -1), (7, -1), (8, -1), (9, 262144), (10, -1), (11, 0), (12, 0), (13, 0), (14, -1), (15, 0), (16, -1), (17, 0), (18, -1), (19, 0), (20, 0), (21, -1), (22, -1), (23, 134217728), (24, -1), (25, 0), (26, -1), (27, 1073741824), (28, -1), (29, -1), (30, 524288), (31, 4096), (32, -1), (33, -1), (34, 4194304), (35, 8192), (36, 0), (37, 2048), (38, -1), (39, 2048), (40, 67108864), (41, -1), (42, 262144), (43, 262144), (44, -1), (45, -1), (46, -1), (47, 33554432), (48, 4194304), (49, 67108864), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 134217728), (6, -1), (7, -1), (8, -1), (9, 262144), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, 134217728), (24, -1), (25, -1), (26, -1), (27, 1073741824), (28, -1), (29, -1), (30, 524288), (31, 4096), (32, -1), (33, -1), (34, 4194304), (35, 8192), (36, -1), (37, 2048), (38, -1), (39, 2048), (40, 67108864), (41, -1), (42, 262144), (43, 262144), (44, -1), (45, -1), (46, -1), (47, 33554432), (48, 4194304), (49, 67108864), (50, -1), (51, -1), (52, -1)]

Covered at level 9 : set()

After reduction : 
 pending  : [5, 9, 30, 31, 39, 42, 43, 47, 48, 49, 40, 37, 34, 35, 23, 27]
 solution : [7, 18]


Solution : [7, 18] has cost 13.


Decide in level 9 among pending : [5, 9, 30, 31, 39, 42, 43, 47, 48, 49, 40, 37, 34, 35, 23, 27]

Coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 134217728), (6, -1), (7, -1), (8, -1), (9, 262144), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, 134217728), (24, -1), (25, -1), (26, -1), (27, 1073741824), (28, -1), (29, -1), (30, 524288), (31, 4096), (32, -1), (33, -1), (34, 4194304), (35, 8192), (36, -1), (37, 2048), (38, -1), (39, 2048), (40, 67108864), (41, -1), (42, 262144), (43, 262144), (44, -1), (45, -1), (46, -1), (47, 33554432), (48, 4194304), (49, 67108864), (50, -1), (51, -1), (52, -1)]

Decide 27 with phase True at level 9

After decision at level 9
 pending : [5, 9, 30, 31, 39, 42, 43, 47, 48, 49, 40, 37, 34, 35, 23]
 solution : [7, 18, 27]


New level: 10
 pending : [5, 9, 30, 31, 39, 42, 43, 47, 48, 49, 40, 37, 34, 35, 23]
 solution : [7, 18, 27]


Before reduction : 
 pending  : [5, 9, 30, 31, 39, 42, 43, 47, 48, 49, 40, 37, 34, 35, 23]
 solution : [7, 18, 27]

Essensial at level 10 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 134217728), (6, -1), (7, -1), (8, -1), (9, 262144), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, 134217728), (24, -1), (25, -1), (26, -1), (27, 1073741824), (28, -1), (29, -1), (30, 524288), (31, 4096), (32, -1), (33, -1), (34, 4194304), (35, 8192), (36, -1), (37, 2048), (38, -1), (39, 2048), (40, 67108864), (41, -1), (42, 262144), (43, 262144), (44, -1), (45, -1), (46, -1), (47, 33554432), (48, 4194304), (49, 67108864), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 33554432), (6, -1), (7, -1), (8, -1), (9, 65536), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, 33554432), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, 131072), (31, 1024), (32, -1), (33, -1), (34, 0), (35, 0), (36, -1), (37, 512), (38, -1), (39, 512), (40, 33554432), (41, -1), (42, 65536), (43, 65536), (44, -1), (45, -1), (46, -1), (47, 8388608), (48, 1048576), (49, 33554432), (50, -1), (51, -1), (52, -1)]

Covered at level 10 : {34, 35}

After reduction : 
 pending  : [5, 9, 30, 31, 39, 42, 43, 47, 48, 49, 40, 37, 23]
 solution : [7, 18, 27]


Before reduction : 
 pending  : [5, 9, 30, 31, 39, 42, 43, 47, 48, 49, 40, 37, 23]
 solution : [7, 18, 27]

Essensial at level 10 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 33554432), (6, -1), (7, -1), (8, -1), (9, 65536), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, 33554432), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, 131072), (31, 1024), (32, -1), (33, -1), (34, 0), (35, 0), (36, -1), (37, 512), (38, -1), (39, 512), (40, 33554432), (41, -1), (42, 65536), (43, 65536), (44, -1), (45, -1), (46, -1), (47, 8388608), (48, 1048576), (49, 33554432), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 33554432), (6, -1), (7, -1), (8, -1), (9, 65536), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, 33554432), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, 131072), (31, 1024), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, 512), (38, -1), (39, 512), (40, 33554432), (41, -1), (42, 65536), (43, 65536), (44, -1), (45, -1), (46, -1), (47, 8388608), (48, 1048576), (49, 33554432), (50, -1), (51, -1), (52, -1)]

Covered at level 10 : set()

After reduction : 
 pending  : [5, 9, 30, 31, 39, 42, 43, 47, 48, 49, 40, 37, 23]
 solution : [7, 18, 27]


Solution : [7, 18, 27] has cost 20.


Before backtrack at level 10
 pending : [5, 9, 30, 31, 39, 42, 43, 47, 48, 49, 40, 37, 23]
 solution : [7, 18, 27]

After backtrack at level 10
 pending : [5, 9, 30, 31, 39, 42, 43, 47, 48, 49, 40, 37, 23, 34, 35]
 solution : [7, 18, 27]


Invert decision for 27 at level 9


New level: 10
 pending : [5, 9, 30, 31, 39, 42, 43, 47, 48, 49, 40, 37, 23, 34, 35]
 solution : [7, 18]


Before reduction : 
 pending  : [5, 9, 30, 31, 39, 42, 43, 47, 48, 49, 40, 37, 23, 34, 35]
 solution : [7, 18]

Essensial at level 10 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 33554432), (6, -1), (7, -1), (8, -1), (9, 65536), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, 33554432), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, 131072), (31, 1024), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, 512), (38, -1), (39, 512), (40, 33554432), (41, -1), (42, 65536), (43, 65536), (44, -1), (45, -1), (46, -1), (47, 8388608), (48, 1048576), (49, 33554432), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 134217728), (6, -1), (7, -1), (8, -1), (9, 262144), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, 134217728), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, 524288), (31, 4096), (32, -1), (33, -1), (34, 4194304), (35, 8192), (36, -1), (37, 2048), (38, -1), (39, 2048), (40, 67108864), (41, -1), (42, 262144), (43, 262144), (44, -1), (45, -1), (46, -1), (47, 33554432), (48, 4194304), (49, 67108864), (50, -1), (51, -1), (52, -1)]

Covered at level 10 : set()

After reduction : 
 pending  : [5, 9, 30, 31, 39, 42, 43, 47, 48, 49, 40, 37, 23, 34, 35]
 solution : [7, 18]


Solution : [7, 18] has cost 13.


Decide in level 10 among pending : [5, 9, 30, 31, 39, 42, 43, 47, 48, 49, 40, 37, 23, 34, 35]

Coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 134217728), (6, -1), (7, -1), (8, -1), (9, 262144), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, 134217728), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, 524288), (31, 4096), (32, -1), (33, -1), (34, 4194304), (35, 8192), (36, -1), (37, 2048), (38, -1), (39, 2048), (40, 67108864), (41, -1), (42, 262144), (43, 262144), (44, -1), (45, -1), (46, -1), (47, 33554432), (48, 4194304), (49, 67108864), (50, -1), (51, -1), (52, -1)]

Decide 5 with phase True at level 10

After decision at level 10
 pending : [9, 30, 31, 39, 42, 43, 47, 48, 49, 40, 37, 23, 34, 35]
 solution : [7, 18, 5]


New level: 11
 pending : [9, 30, 31, 39, 42, 43, 47, 48, 49, 40, 37, 23, 34, 35]
 solution : [7, 18, 5]


Before reduction : 
 pending  : [9, 30, 31, 39, 42, 43, 47, 48, 49, 40, 37, 23, 34, 35]
 solution : [7, 18, 5]

Essensial at level 11 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 134217728), (6, -1), (7, -1), (8, -1), (9, 262144), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, 134217728), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, 524288), (31, 4096), (32, -1), (33, -1), (34, 4194304), (35, 8192), (36, -1), (37, 2048), (38, -1), (39, 2048), (40, 67108864), (41, -1), (42, 262144), (43, 262144), (44, -1), (45, -1), (46, -1), (47, 33554432), (48, 4194304), (49, 67108864), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, 0), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, 0), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, 0), (31, 0), (32, -1), (33, -1), (34, 0), (35, 0), (36, -1), (37, 0), (38, -1), (39, 0), (40, 0), (41, -1), (42, 0), (43, 0), (44, -1), (45, -1), (46, -1), (47, 0), (48, 0), (49, 0), (50, -1), (51, -1), (52, -1)]

Covered at level 11 : {34, 35, 37, 39, 40, 9, 42, 43, 47, 48, 49, 23, 30, 31}

After reduction : 
 pending  : []
 solution : [7, 18, 5]


Before reduction : 
 pending  : []
 solution : [7, 18, 5]

Essensial at level 11 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, 0), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, 0), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, 0), (31, 0), (32, -1), (33, -1), (34, 0), (35, 0), (36, -1), (37, 0), (38, -1), (39, 0), (40, 0), (41, -1), (42, 0), (43, 0), (44, -1), (45, -1), (46, -1), (47, 0), (48, 0), (49, 0), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 11 : set()

After reduction : 
 pending  : []
 solution : [7, 18, 5]


Solution : [7, 18, 5] has cost 17.


Before backtrack at level 11
 pending : []
 solution : [7, 18, 5]

After backtrack at level 11
 pending : [9, 30, 31, 39, 42, 43, 47, 48, 49, 40, 37, 23, 34, 35]
 solution : [7, 18, 5]


Invert decision for 5 at level 10


New level: 11
 pending : [9, 30, 31, 39, 42, 43, 47, 48, 49, 40, 37, 23, 34, 35]
 solution : [7, 18]


Before reduction : 
 pending  : [9, 30, 31, 39, 42, 43, 47, 48, 49, 40, 37, 23, 34, 35]
 solution : [7, 18]

Essensial at level 11 : {23}

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, 0), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, 0), (31, 0), (32, -1), (33, -1), (34, 0), (35, 0), (36, -1), (37, 0), (38, -1), (39, 0), (40, 0), (41, -1), (42, 0), (43, 0), (44, -1), (45, -1), (46, -1), (47, 0), (48, 0), (49, 0), (50, -1), (51, -1), (52, -1)]

Covered at level 11 : {34, 35, 37, 39, 40, 9, 42, 43, 47, 48, 49, 30, 31}

After reduction : 
 pending  : []
 solution : [7, 18, 23]


Before reduction : 
 pending  : []
 solution : [7, 18, 23]

Essensial at level 11 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, 0), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, 0), (31, 0), (32, -1), (33, -1), (34, 0), (35, 0), (36, -1), (37, 0), (38, -1), (39, 0), (40, 0), (41, -1), (42, 0), (43, 0), (44, -1), (45, -1), (46, -1), (47, 0), (48, 0), (49, 0), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 11 : set()

After reduction : 
 pending  : []
 solution : [7, 18, 23]


Solution : [7, 18, 23] has cost 20.


Before backtrack at level 11
 pending : []
 solution : [7, 18, 23]

After backtrack at level 11
 pending : [23, 9, 30, 31, 39, 42, 43, 47, 48, 49, 40, 37, 34, 35]
 solution : [7, 18]


Before backtrack at level 10
 pending : [23, 9, 30, 31, 39, 42, 43, 47, 48, 49, 40, 37, 34, 35]
 solution : [7, 18]

After backtrack at level 10
 pending : [23, 9, 30, 31, 39, 42, 43, 47, 48, 49, 40, 37, 34, 35, 5]
 solution : [7, 18]


Before backtrack at level 9
 pending : [23, 9, 30, 31, 39, 42, 43, 47, 48, 49, 40, 37, 34, 35, 5]
 solution : [7, 18]

After backtrack at level 9
 pending : [23, 9, 30, 31, 39, 42, 43, 47, 48, 49, 40, 37, 34, 35, 5, 25, 36, 2, 15, 13, 20, 19, 11, 17, 12, 27]
 solution : [7, 18]


Invert decision for 18 at level 8


New level: 9
 pending : [23, 9, 30, 31, 39, 42, 43, 47, 48, 49, 40, 37, 34, 35, 5, 25, 36, 2, 15, 13, 20, 19, 11, 17, 12, 27]
 solution : [7]


Before reduction : 
 pending  : [23, 9, 30, 31, 39, 42, 43, 47, 48, 49, 40, 37, 34, 35, 5, 25, 36, 2, 15, 13, 20, 19, 11, 17, 12, 27]
 solution : [7]

Essensial at level 9 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 1048576), (3, -1), (4, -1), (5, 134217728), (6, -1), (7, -1), (8, -1), (9, 1048576), (10, -1), (11, 33554432), (12, 67108864), (13, 524288), (14, -1), (15, 1114112), (16, -1), (17, 16777216), (18, -1), (19, 8388608), (20, 262144), (21, -1), (22, -1), (23, 134217728), (24, -1), (25, 4194304), (26, -1), (27, 1073741824), (28, -1), (29, -1), (30, 1048576), (31, 16384), (32, -1), (33, -1), (34, 4194304), (35, 32768), (36, 4194304), (37, 268435456), (38, -1), (39, 16384), (40, 134217728), (41, -1), (42, 524288), (43, 524288), (44, -1), (45, -1), (46, -1), (47, 67108864), (48, 16777216), (49, 67108864), (50, -1), (51, -1), (52, -1)]

Covered at level 9 : set()

After reduction : 
 pending  : [23, 9, 30, 31, 39, 42, 43, 47, 48, 49, 40, 37, 34, 35, 5, 25, 36, 2, 15, 13, 20, 19, 11, 17, 12, 27]
 solution : [7]


Solution : [7] has cost 6.


Decide in level 9 among pending : [23, 9, 30, 31, 39, 42, 43, 47, 48, 49, 40, 37, 34, 35, 5, 25, 36, 2, 15, 13, 20, 19, 11, 17, 12, 27]

Coverage : [(0, -1), (1, -1), (2, 1048576), (3, -1), (4, -1), (5, 134217728), (6, -1), (7, -1), (8, -1), (9, 1048576), (10, -1), (11, 33554432), (12, 67108864), (13, 524288), (14, -1), (15, 1114112), (16, -1), (17, 16777216), (18, -1), (19, 8388608), (20, 262144), (21, -1), (22, -1), (23, 134217728), (24, -1), (25, 4194304), (26, -1), (27, 1073741824), (28, -1), (29, -1), (30, 1048576), (31, 16384), (32, -1), (33, -1), (34, 4194304), (35, 32768), (36, 4194304), (37, 268435456), (38, -1), (39, 16384), (40, 134217728), (41, -1), (42, 524288), (43, 524288), (44, -1), (45, -1), (46, -1), (47, 67108864), (48, 16777216), (49, 67108864), (50, -1), (51, -1), (52, -1)]

Decide 27 with phase True at level 9

After decision at level 9
 pending : [23, 9, 30, 31, 39, 42, 43, 47, 48, 49, 40, 37, 34, 35, 5, 25, 36, 2, 15, 13, 20, 19, 11, 17, 12]
 solution : [7, 27]


New level: 10
 pending : [23, 9, 30, 31, 39, 42, 43, 47, 48, 49, 40, 37, 34, 35, 5, 25, 36, 2, 15, 13, 20, 19, 11, 17, 12]
 solution : [7, 27]


Before reduction : 
 pending  : [23, 9, 30, 31, 39, 42, 43, 47, 48, 49, 40, 37, 34, 35, 5, 25, 36, 2, 15, 13, 20, 19, 11, 17, 12]
 solution : [7, 27]

Essensial at level 10 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 1048576), (3, -1), (4, -1), (5, 134217728), (6, -1), (7, -1), (8, -1), (9, 1048576), (10, -1), (11, 33554432), (12, 67108864), (13, 524288), (14, -1), (15, 1114112), (16, -1), (17, 16777216), (18, -1), (19, 8388608), (20, 262144), (21, -1), (22, -1), (23, 134217728), (24, -1), (25, 4194304), (26, -1), (27, 1073741824), (28, -1), (29, -1), (30, 1048576), (31, 16384), (32, -1), (33, -1), (34, 4194304), (35, 32768), (36, 4194304), (37, 268435456), (38, -1), (39, 16384), (40, 134217728), (41, -1), (42, 524288), (43, 524288), (44, -1), (45, -1), (46, -1), (47, 67108864), (48, 16777216), (49, 67108864), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 1048576), (3, -1), (4, -1), (5, 33554432), (6, -1), (7, -1), (8, -1), (9, 262144), (10, -1), (11, 33554432), (12, 67108864), (13, 524288), (14, -1), (15, 1114112), (16, -1), (17, 16777216), (18, -1), (19, 8388608), (20, 262144), (21, -1), (22, -1), (23, 33554432), (24, -1), (25, 4194304), (26, -1), (27, -1), (28, -1), (29, -1), (30, 262144), (31, 4096), (32, -1), (33, -1), (34, 0), (35, 0), (36, 4194304), (37, 134217728), (38, -1), (39, 4096), (40, 67108864), (41, -1), (42, 131072), (43, 131072), (44, -1), (45, -1), (46, -1), (47, 16777216), (48, 4194304), (49, 33554432), (50, -1), (51, -1), (52, -1)]

Covered at level 10 : {34, 35}

After reduction : 
 pending  : [23, 9, 30, 31, 39, 42, 43, 47, 48, 49, 40, 37, 5, 25, 36, 2, 15, 13, 20, 19, 11, 17, 12]
 solution : [7, 27]


Before reduction : 
 pending  : [23, 9, 30, 31, 39, 42, 43, 47, 48, 49, 40, 37, 5, 25, 36, 2, 15, 13, 20, 19, 11, 17, 12]
 solution : [7, 27]

Essensial at level 10 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 1048576), (3, -1), (4, -1), (5, 33554432), (6, -1), (7, -1), (8, -1), (9, 262144), (10, -1), (11, 33554432), (12, 67108864), (13, 524288), (14, -1), (15, 1114112), (16, -1), (17, 16777216), (18, -1), (19, 8388608), (20, 262144), (21, -1), (22, -1), (23, 33554432), (24, -1), (25, 4194304), (26, -1), (27, -1), (28, -1), (29, -1), (30, 262144), (31, 4096), (32, -1), (33, -1), (34, 0), (35, 0), (36, 4194304), (37, 134217728), (38, -1), (39, 4096), (40, 67108864), (41, -1), (42, 131072), (43, 131072), (44, -1), (45, -1), (46, -1), (47, 16777216), (48, 4194304), (49, 33554432), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 1048576), (3, -1), (4, -1), (5, 33554432), (6, -1), (7, -1), (8, -1), (9, 262144), (10, -1), (11, 33554432), (12, 67108864), (13, 524288), (14, -1), (15, 1114112), (16, -1), (17, 16777216), (18, -1), (19, 8388608), (20, 262144), (21, -1), (22, -1), (23, 33554432), (24, -1), (25, 4194304), (26, -1), (27, -1), (28, -1), (29, -1), (30, 262144), (31, 4096), (32, -1), (33, -1), (34, -1), (35, -1), (36, 4194304), (37, 134217728), (38, -1), (39, 4096), (40, 67108864), (41, -1), (42, 131072), (43, 131072), (44, -1), (45, -1), (46, -1), (47, 16777216), (48, 4194304), (49, 33554432), (50, -1), (51, -1), (52, -1)]

Covered at level 10 : set()

After reduction : 
 pending  : [23, 9, 30, 31, 39, 42, 43, 47, 48, 49, 40, 37, 5, 25, 36, 2, 15, 13, 20, 19, 11, 17, 12]
 solution : [7, 27]


Solution : [7, 27] has cost 13.


Decide in level 10 among pending : [23, 9, 30, 31, 39, 42, 43, 47, 48, 49, 40, 37, 5, 25, 36, 2, 15, 13, 20, 19, 11, 17, 12]

Coverage : [(0, -1), (1, -1), (2, 1048576), (3, -1), (4, -1), (5, 33554432), (6, -1), (7, -1), (8, -1), (9, 262144), (10, -1), (11, 33554432), (12, 67108864), (13, 524288), (14, -1), (15, 1114112), (16, -1), (17, 16777216), (18, -1), (19, 8388608), (20, 262144), (21, -1), (22, -1), (23, 33554432), (24, -1), (25, 4194304), (26, -1), (27, -1), (28, -1), (29, -1), (30, 262144), (31, 4096), (32, -1), (33, -1), (34, -1), (35, -1), (36, 4194304), (37, 134217728), (38, -1), (39, 4096), (40, 67108864), (41, -1), (42, 131072), (43, 131072), (44, -1), (45, -1), (46, -1), (47, 16777216), (48, 4194304), (49, 33554432), (50, -1), (51, -1), (52, -1)]

Decide 37 with phase True at level 10

After decision at level 10
 pending : [23, 9, 30, 31, 39, 42, 43, 47, 48, 49, 40, 5, 25, 36, 2, 15, 13, 20, 19, 11, 17, 12]
 solution : [7, 27, 37]


New level: 11
 pending : [23, 9, 30, 31, 39, 42, 43, 47, 48, 49, 40, 5, 25, 36, 2, 15, 13, 20, 19, 11, 17, 12]
 solution : [7, 27, 37]


Before reduction : 
 pending  : [23, 9, 30, 31, 39, 42, 43, 47, 48, 49, 40, 5, 25, 36, 2, 15, 13, 20, 19, 11, 17, 12]
 solution : [7, 27, 37]

Essensial at level 11 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 1048576), (3, -1), (4, -1), (5, 33554432), (6, -1), (7, -1), (8, -1), (9, 262144), (10, -1), (11, 33554432), (12, 67108864), (13, 524288), (14, -1), (15, 1114112), (16, -1), (17, 16777216), (18, -1), (19, 8388608), (20, 262144), (21, -1), (22, -1), (23, 33554432), (24, -1), (25, 4194304), (26, -1), (27, -1), (28, -1), (29, -1), (30, 262144), (31, 4096), (32, -1), (33, -1), (34, -1), (35, -1), (36, 4194304), (37, 134217728), (38, -1), (39, 4096), (40, 67108864), (41, -1), (42, 131072), (43, 131072), (44, -1), (45, -1), (46, -1), (47, 16777216), (48, 4194304), (49, 33554432), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 524288), (3, -1), (4, -1), (5, 8388608), (6, -1), (7, -1), (8, -1), (9, 65536), (10, -1), (11, 16777216), (12, 33554432), (13, 262144), (14, -1), (15, 540672), (16, -1), (17, 16777216), (18, -1), (19, 8388608), (20, 262144), (21, -1), (22, -1), (23, 8388608), (24, -1), (25, 1048576), (26, -1), (27, -1), (28, -1), (29, -1), (30, 65536), (31, 1024), (32, -1), (33, -1), (34, -1), (35, -1), (36, 1048576), (37, -1), (38, -1), (39, 1024), (40, 67108864), (41, -1), (42, 32768), (43, 32768), (44, -1), (45, -1), (46, -1), (47, 8388608), (48, 1048576), (49, 33554432), (50, -1), (51, -1), (52, -1)]

Covered at level 11 : set()

After reduction : 
 pending  : [23, 9, 30, 31, 39, 42, 43, 47, 48, 49, 40, 5, 25, 36, 2, 15, 13, 20, 19, 11, 17, 12]
 solution : [7, 27, 37]


Solution : [7, 27, 37] has cost 31.


Before backtrack at level 11
 pending : [23, 9, 30, 31, 39, 42, 43, 47, 48, 49, 40, 5, 25, 36, 2, 15, 13, 20, 19, 11, 17, 12]
 solution : [7, 27, 37]

After backtrack at level 11
 pending : [23, 9, 30, 31, 39, 42, 43, 47, 48, 49, 40, 5, 25, 36, 2, 15, 13, 20, 19, 11, 17, 12]
 solution : [7, 27, 37]


Invert decision for 37 at level 10


New level: 11
 pending : [23, 9, 30, 31, 39, 42, 43, 47, 48, 49, 40, 5, 25, 36, 2, 15, 13, 20, 19, 11, 17, 12]
 solution : [7, 27]


Before reduction : 
 pending  : [23, 9, 30, 31, 39, 42, 43, 47, 48, 49, 40, 5, 25, 36, 2, 15, 13, 20, 19, 11, 17, 12]
 solution : [7, 27]

Essensial at level 11 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 524288), (3, -1), (4, -1), (5, 8388608), (6, -1), (7, -1), (8, -1), (9, 65536), (10, -1), (11, 16777216), (12, 33554432), (13, 262144), (14, -1), (15, 540672), (16, -1), (17, 16777216), (18, -1), (19, 8388608), (20, 262144), (21, -1), (22, -1), (23, 8388608), (24, -1), (25, 1048576), (26, -1), (27, -1), (28, -1), (29, -1), (30, 65536), (31, 1024), (32, -1), (33, -1), (34, -1), (35, -1), (36, 1048576), (37, -1), (38, -1), (39, 1024), (40, 67108864), (41, -1), (42, 32768), (43, 32768), (44, -1), (45, -1), (46, -1), (47, 8388608), (48, 1048576), (49, 33554432), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 1048576), (3, -1), (4, -1), (5, 33554432), (6, -1), (7, -1), (8, -1), (9, 262144), (10, -1), (11, 33554432), (12, 67108864), (13, 524288), (14, -1), (15, 1114112), (16, -1), (17, 16777216), (18, -1), (19, 8388608), (20, 262144), (21, -1), (22, -1), (23, 33554432), (24, -1), (25, 4194304), (26, -1), (27, -1), (28, -1), (29, -1), (30, 262144), (31, 4096), (32, -1), (33, -1), (34, -1), (35, -1), (36, 4194304), (37, -1), (38, -1), (39, 4096), (40, 67108864), (41, -1), (42, 131072), (43, 131072), (44, -1), (45, -1), (46, -1), (47, 16777216), (48, 4194304), (49, 33554432), (50, -1), (51, -1), (52, -1)]

Covered at level 11 : set()

After reduction : 
 pending  : [23, 9, 30, 31, 39, 42, 43, 47, 48, 49, 40, 5, 25, 36, 2, 15, 13, 20, 19, 11, 17, 12]
 solution : [7, 27]


Solution : [7, 27] has cost 13.


Decide in level 11 among pending : [23, 9, 30, 31, 39, 42, 43, 47, 48, 49, 40, 5, 25, 36, 2, 15, 13, 20, 19, 11, 17, 12]

Coverage : [(0, -1), (1, -1), (2, 1048576), (3, -1), (4, -1), (5, 33554432), (6, -1), (7, -1), (8, -1), (9, 262144), (10, -1), (11, 33554432), (12, 67108864), (13, 524288), (14, -1), (15, 1114112), (16, -1), (17, 16777216), (18, -1), (19, 8388608), (20, 262144), (21, -1), (22, -1), (23, 33554432), (24, -1), (25, 4194304), (26, -1), (27, -1), (28, -1), (29, -1), (30, 262144), (31, 4096), (32, -1), (33, -1), (34, -1), (35, -1), (36, 4194304), (37, -1), (38, -1), (39, 4096), (40, 67108864), (41, -1), (42, 131072), (43, 131072), (44, -1), (45, -1), (46, -1), (47, 16777216), (48, 4194304), (49, 33554432), (50, -1), (51, -1), (52, -1)]

Decide 40 with phase True at level 11

After decision at level 11
 pending : [23, 9, 30, 31, 39, 42, 43, 47, 48, 49, 5, 25, 36, 2, 15, 13, 20, 19, 11, 17, 12]
 solution : [7, 27, 40]


New level: 12
 pending : [23, 9, 30, 31, 39, 42, 43, 47, 48, 49, 5, 25, 36, 2, 15, 13, 20, 19, 11, 17, 12]
 solution : [7, 27, 40]


Before reduction : 
 pending  : [23, 9, 30, 31, 39, 42, 43, 47, 48, 49, 5, 25, 36, 2, 15, 13, 20, 19, 11, 17, 12]
 solution : [7, 27, 40]

Essensial at level 12 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 1048576), (3, -1), (4, -1), (5, 33554432), (6, -1), (7, -1), (8, -1), (9, 262144), (10, -1), (11, 33554432), (12, 67108864), (13, 524288), (14, -1), (15, 1114112), (16, -1), (17, 16777216), (18, -1), (19, 8388608), (20, 262144), (21, -1), (22, -1), (23, 33554432), (24, -1), (25, 4194304), (26, -1), (27, -1), (28, -1), (29, -1), (30, 262144), (31, 4096), (32, -1), (33, -1), (34, -1), (35, -1), (36, 4194304), (37, -1), (38, -1), (39, 4096), (40, 67108864), (41, -1), (42, 131072), (43, 131072), (44, -1), (45, -1), (46, -1), (47, 16777216), (48, 4194304), (49, 33554432), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 524288), (3, -1), (4, -1), (5, 33554432), (6, -1), (7, -1), (8, -1), (9, 0), (10, -1), (11, 33554432), (12, 67108864), (13, 524288), (14, -1), (15, 540672), (16, -1), (17, 16777216), (18, -1), (19, 8388608), (20, 262144), (21, -1), (22, -1), (23, 131072), (24, -1), (25, 4194304), (26, -1), (27, -1), (28, -1), (29, -1), (30, 0), (31, 0), (32, -1), (33, -1), (34, -1), (35, -1), (36, 4194304), (37, -1), (38, -1), (39, 0), (40, -1), (41, -1), (42, 0), (43, 0), (44, -1), (45, -1), (46, -1), (47, 0), (48, 0), (49, 0), (50, -1), (51, -1), (52, -1)]

Covered at level 12 : {39, 9, 42, 43, 47, 48, 49, 30, 31}

After reduction : 
 pending  : [23, 5, 25, 36, 2, 15, 13, 20, 19, 11, 17, 12]
 solution : [7, 27, 40]


Before reduction : 
 pending  : [23, 5, 25, 36, 2, 15, 13, 20, 19, 11, 17, 12]
 solution : [7, 27, 40]

Essensial at level 12 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 524288), (3, -1), (4, -1), (5, 33554432), (6, -1), (7, -1), (8, -1), (9, 0), (10, -1), (11, 33554432), (12, 67108864), (13, 524288), (14, -1), (15, 540672), (16, -1), (17, 16777216), (18, -1), (19, 8388608), (20, 262144), (21, -1), (22, -1), (23, 131072), (24, -1), (25, 4194304), (26, -1), (27, -1), (28, -1), (29, -1), (30, 0), (31, 0), (32, -1), (33, -1), (34, -1), (35, -1), (36, 4194304), (37, -1), (38, -1), (39, 0), (40, -1), (41, -1), (42, 0), (43, 0), (44, -1), (45, -1), (46, -1), (47, 0), (48, 0), (49, 0), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 524288), (3, -1), (4, -1), (5, 33554432), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, 33554432), (12, 67108864), (13, 524288), (14, -1), (15, 540672), (16, -1), (17, 16777216), (18, -1), (19, 8388608), (20, 262144), (21, -1), (22, -1), (23, 131072), (24, -1), (25, 4194304), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, 4194304), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 12 : set()

After reduction : 
 pending  : [23, 5, 25, 36, 2, 15, 13, 20, 19, 11, 17, 12]
 solution : [7, 27, 40]


Solution : [7, 27, 40] has cost 31.


Before backtrack at level 12
 pending : [23, 5, 25, 36, 2, 15, 13, 20, 19, 11, 17, 12]
 solution : [7, 27, 40]

After backtrack at level 12
 pending : [23, 5, 25, 36, 2, 15, 13, 20, 19, 11, 17, 12, 9, 30, 31, 39, 42, 43, 47, 48, 49]
 solution : [7, 27, 40]


Invert decision for 40 at level 11


New level: 12
 pending : [23, 5, 25, 36, 2, 15, 13, 20, 19, 11, 17, 12, 9, 30, 31, 39, 42, 43, 47, 48, 49]
 solution : [7, 27]


Before reduction : 
 pending  : [23, 5, 25, 36, 2, 15, 13, 20, 19, 11, 17, 12, 9, 30, 31, 39, 42, 43, 47, 48, 49]
 solution : [7, 27]

Essensial at level 12 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 524288), (3, -1), (4, -1), (5, 33554432), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, 33554432), (12, 67108864), (13, 524288), (14, -1), (15, 540672), (16, -1), (17, 16777216), (18, -1), (19, 8388608), (20, 262144), (21, -1), (22, -1), (23, 131072), (24, -1), (25, 4194304), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, 4194304), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 1048576), (3, -1), (4, -1), (5, 33554432), (6, -1), (7, -1), (8, -1), (9, 262144), (10, -1), (11, 33554432), (12, 67108864), (13, 524288), (14, -1), (15, 1114112), (16, -1), (17, 16777216), (18, -1), (19, 8388608), (20, 262144), (21, -1), (22, -1), (23, 33554432), (24, -1), (25, 4194304), (26, -1), (27, -1), (28, -1), (29, -1), (30, 262144), (31, 4096), (32, -1), (33, -1), (34, -1), (35, -1), (36, 4194304), (37, -1), (38, -1), (39, 4096), (40, -1), (41, -1), (42, 131072), (43, 131072), (44, -1), (45, -1), (46, -1), (47, 16777216), (48, 4194304), (49, 33554432), (50, -1), (51, -1), (52, -1)]

Covered at level 12 : set()

After reduction : 
 pending  : [23, 5, 25, 36, 2, 15, 13, 20, 19, 11, 17, 12, 9, 30, 31, 39, 42, 43, 47, 48, 49]
 solution : [7, 27]


Solution : [7, 27] has cost 13.


Decide in level 12 among pending : [23, 5, 25, 36, 2, 15, 13, 20, 19, 11, 17, 12, 9, 30, 31, 39, 42, 43, 47, 48, 49]

Coverage : [(0, -1), (1, -1), (2, 1048576), (3, -1), (4, -1), (5, 33554432), (6, -1), (7, -1), (8, -1), (9, 262144), (10, -1), (11, 33554432), (12, 67108864), (13, 524288), (14, -1), (15, 1114112), (16, -1), (17, 16777216), (18, -1), (19, 8388608), (20, 262144), (21, -1), (22, -1), (23, 33554432), (24, -1), (25, 4194304), (26, -1), (27, -1), (28, -1), (29, -1), (30, 262144), (31, 4096), (32, -1), (33, -1), (34, -1), (35, -1), (36, 4194304), (37, -1), (38, -1), (39, 4096), (40, -1), (41, -1), (42, 131072), (43, 131072), (44, -1), (45, -1), (46, -1), (47, 16777216), (48, 4194304), (49, 33554432), (50, -1), (51, -1), (52, -1)]

Decide 12 with phase True at level 12

After decision at level 12
 pending : [23, 5, 25, 36, 2, 15, 13, 20, 19, 11, 17, 9, 30, 31, 39, 42, 43, 47, 48, 49]
 solution : [7, 27, 12]


New level: 13
 pending : [23, 5, 25, 36, 2, 15, 13, 20, 19, 11, 17, 9, 30, 31, 39, 42, 43, 47, 48, 49]
 solution : [7, 27, 12]


Before reduction : 
 pending  : [23, 5, 25, 36, 2, 15, 13, 20, 19, 11, 17, 9, 30, 31, 39, 42, 43, 47, 48, 49]
 solution : [7, 27, 12]

Essensial at level 13 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 1048576), (3, -1), (4, -1), (5, 33554432), (6, -1), (7, -1), (8, -1), (9, 262144), (10, -1), (11, 33554432), (12, 67108864), (13, 524288), (14, -1), (15, 1114112), (16, -1), (17, 16777216), (18, -1), (19, 8388608), (20, 262144), (21, -1), (22, -1), (23, 33554432), (24, -1), (25, 4194304), (26, -1), (27, -1), (28, -1), (29, -1), (30, 262144), (31, 4096), (32, -1), (33, -1), (34, -1), (35, -1), (36, 4194304), (37, -1), (38, -1), (39, 4096), (40, -1), (41, -1), (42, 131072), (43, 131072), (44, -1), (45, -1), (46, -1), (47, 16777216), (48, 4194304), (49, 33554432), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 0), (3, -1), (4, -1), (5, 33554432), (6, -1), (7, -1), (8, -1), (9, 65536), (10, -1), (11, 0), (12, -1), (13, 0), (14, -1), (15, 0), (16, -1), (17, 262144), (18, -1), (19, 65536), (20, 65536), (21, -1), (22, -1), (23, 33554432), (24, -1), (25, 4096), (26, -1), (27, -1), (28, -1), (29, -1), (30, 131072), (31, 1024), (32, -1), (33, -1), (34, -1), (35, -1), (36, 4096), (37, -1), (38, -1), (39, 512), (40, -1), (41, -1), (42, 65536), (43, 65536), (44, -1), (45, -1), (46, -1), (47, 16777216), (48, 4194304), (49, 33554432), (50, -1), (51, -1), (52, -1)]

Covered at level 13 : {2, 11, 13, 15}

After reduction : 
 pending  : [23, 5, 25, 36, 20, 19, 17, 9, 30, 31, 39, 42, 43, 47, 48, 49]
 solution : [7, 27, 12]


Before reduction : 
 pending  : [23, 5, 25, 36, 20, 19, 17, 9, 30, 31, 39, 42, 43, 47, 48, 49]
 solution : [7, 27, 12]

Essensial at level 13 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 0), (3, -1), (4, -1), (5, 33554432), (6, -1), (7, -1), (8, -1), (9, 65536), (10, -1), (11, 0), (12, -1), (13, 0), (14, -1), (15, 0), (16, -1), (17, 262144), (18, -1), (19, 65536), (20, 65536), (21, -1), (22, -1), (23, 33554432), (24, -1), (25, 4096), (26, -1), (27, -1), (28, -1), (29, -1), (30, 131072), (31, 1024), (32, -1), (33, -1), (34, -1), (35, -1), (36, 4096), (37, -1), (38, -1), (39, 512), (40, -1), (41, -1), (42, 65536), (43, 65536), (44, -1), (45, -1), (46, -1), (47, 16777216), (48, 4194304), (49, 33554432), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 33554432), (6, -1), (7, -1), (8, -1), (9, 65536), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, 262144), (18, -1), (19, 65536), (20, 65536), (21, -1), (22, -1), (23, 33554432), (24, -1), (25, 4096), (26, -1), (27, -1), (28, -1), (29, -1), (30, 131072), (31, 1024), (32, -1), (33, -1), (34, -1), (35, -1), (36, 4096), (37, -1), (38, -1), (39, 512), (40, -1), (41, -1), (42, 65536), (43, 65536), (44, -1), (45, -1), (46, -1), (47, 16777216), (48, 4194304), (49, 33554432), (50, -1), (51, -1), (52, -1)]

Covered at level 13 : set()

After reduction : 
 pending  : [23, 5, 25, 36, 20, 19, 17, 9, 30, 31, 39, 42, 43, 47, 48, 49]
 solution : [7, 27, 12]


Solution : [7, 27, 12] has cost 22.


Before backtrack at level 13
 pending : [23, 5, 25, 36, 20, 19, 17, 9, 30, 31, 39, 42, 43, 47, 48, 49]
 solution : [7, 27, 12]

After backtrack at level 13
 pending : [23, 5, 25, 36, 20, 19, 17, 9, 30, 31, 39, 42, 43, 47, 48, 49, 2, 15, 13, 11]
 solution : [7, 27, 12]


Invert decision for 12 at level 12


New level: 13
 pending : [23, 5, 25, 36, 20, 19, 17, 9, 30, 31, 39, 42, 43, 47, 48, 49, 2, 15, 13, 11]
 solution : [7, 27]


Before reduction : 
 pending  : [23, 5, 25, 36, 20, 19, 17, 9, 30, 31, 39, 42, 43, 47, 48, 49, 2, 15, 13, 11]
 solution : [7, 27]

Essensial at level 13 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 33554432), (6, -1), (7, -1), (8, -1), (9, 65536), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, 262144), (18, -1), (19, 65536), (20, 65536), (21, -1), (22, -1), (23, 33554432), (24, -1), (25, 4096), (26, -1), (27, -1), (28, -1), (29, -1), (30, 131072), (31, 1024), (32, -1), (33, -1), (34, -1), (35, -1), (36, 4096), (37, -1), (38, -1), (39, 512), (40, -1), (41, -1), (42, 65536), (43, 65536), (44, -1), (45, -1), (46, -1), (47, 16777216), (48, 4194304), (49, 33554432), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 1048576), (3, -1), (4, -1), (5, 33554432), (6, -1), (7, -1), (8, -1), (9, 262144), (10, -1), (11, 33554432), (12, -1), (13, 524288), (14, -1), (15, 1114112), (16, -1), (17, 16777216), (18, -1), (19, 8388608), (20, 262144), (21, -1), (22, -1), (23, 33554432), (24, -1), (25, 4194304), (26, -1), (27, -1), (28, -1), (29, -1), (30, 262144), (31, 4096), (32, -1), (33, -1), (34, -1), (35, -1), (36, 4194304), (37, -1), (38, -1), (39, 4096), (40, -1), (41, -1), (42, 131072), (43, 131072), (44, -1), (45, -1), (46, -1), (47, 16777216), (48, 4194304), (49, 33554432), (50, -1), (51, -1), (52, -1)]

Covered at level 13 : set()

After reduction : 
 pending  : [23, 5, 25, 36, 20, 19, 17, 9, 30, 31, 39, 42, 43, 47, 48, 49, 2, 15, 13, 11]
 solution : [7, 27]


Solution : [7, 27] has cost 13.


Decide in level 13 among pending : [23, 5, 25, 36, 20, 19, 17, 9, 30, 31, 39, 42, 43, 47, 48, 49, 2, 15, 13, 11]

Coverage : [(0, -1), (1, -1), (2, 1048576), (3, -1), (4, -1), (5, 33554432), (6, -1), (7, -1), (8, -1), (9, 262144), (10, -1), (11, 33554432), (12, -1), (13, 524288), (14, -1), (15, 1114112), (16, -1), (17, 16777216), (18, -1), (19, 8388608), (20, 262144), (21, -1), (22, -1), (23, 33554432), (24, -1), (25, 4194304), (26, -1), (27, -1), (28, -1), (29, -1), (30, 262144), (31, 4096), (32, -1), (33, -1), (34, -1), (35, -1), (36, 4194304), (37, -1), (38, -1), (39, 4096), (40, -1), (41, -1), (42, 131072), (43, 131072), (44, -1), (45, -1), (46, -1), (47, 16777216), (48, 4194304), (49, 33554432), (50, -1), (51, -1), (52, -1)]

Decide 23 with phase True at level 13

After decision at level 13
 pending : [5, 25, 36, 20, 19, 17, 9, 30, 31, 39, 42, 43, 47, 48, 49, 2, 15, 13, 11]
 solution : [7, 27, 23]


New level: 14
 pending : [5, 25, 36, 20, 19, 17, 9, 30, 31, 39, 42, 43, 47, 48, 49, 2, 15, 13, 11]
 solution : [7, 27, 23]


Before reduction : 
 pending  : [5, 25, 36, 20, 19, 17, 9, 30, 31, 39, 42, 43, 47, 48, 49, 2, 15, 13, 11]
 solution : [7, 27, 23]

Essensial at level 14 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 1048576), (3, -1), (4, -1), (5, 33554432), (6, -1), (7, -1), (8, -1), (9, 262144), (10, -1), (11, 33554432), (12, -1), (13, 524288), (14, -1), (15, 1114112), (16, -1), (17, 16777216), (18, -1), (19, 8388608), (20, 262144), (21, -1), (22, -1), (23, 33554432), (24, -1), (25, 4194304), (26, -1), (27, -1), (28, -1), (29, -1), (30, 262144), (31, 4096), (32, -1), (33, -1), (34, -1), (35, -1), (36, 4194304), (37, -1), (38, -1), (39, 4096), (40, -1), (41, -1), (42, 131072), (43, 131072), (44, -1), (45, -1), (46, -1), (47, 16777216), (48, 4194304), (49, 33554432), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 524288), (3, -1), (4, -1), (5, 0), (6, -1), (7, -1), (8, -1), (9, 0), (10, -1), (11, 16777216), (12, -1), (13, 262144), (14, -1), (15, 540672), (16, -1), (17, 16777216), (18, -1), (19, 8388608), (20, 262144), (21, -1), (22, -1), (23, -1), (24, -1), (25, 2097152), (26, -1), (27, -1), (28, -1), (29, -1), (30, 0), (31, 0), (32, -1), (33, -1), (34, -1), (35, -1), (36, 2097152), (37, -1), (38, -1), (39, 0), (40, -1), (41, -1), (42, 0), (43, 0), (44, -1), (45, -1), (46, -1), (47, 0), (48, 0), (49, 0), (50, -1), (51, -1), (52, -1)]

Covered at level 14 : {5, 39, 9, 42, 43, 47, 48, 49, 30, 31}

After reduction : 
 pending  : [25, 36, 20, 19, 17, 2, 15, 13, 11]
 solution : [7, 27, 23]


Before reduction : 
 pending  : [25, 36, 20, 19, 17, 2, 15, 13, 11]
 solution : [7, 27, 23]

Essensial at level 14 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 524288), (3, -1), (4, -1), (5, 0), (6, -1), (7, -1), (8, -1), (9, 0), (10, -1), (11, 16777216), (12, -1), (13, 262144), (14, -1), (15, 540672), (16, -1), (17, 16777216), (18, -1), (19, 8388608), (20, 262144), (21, -1), (22, -1), (23, -1), (24, -1), (25, 2097152), (26, -1), (27, -1), (28, -1), (29, -1), (30, 0), (31, 0), (32, -1), (33, -1), (34, -1), (35, -1), (36, 2097152), (37, -1), (38, -1), (39, 0), (40, -1), (41, -1), (42, 0), (43, 0), (44, -1), (45, -1), (46, -1), (47, 0), (48, 0), (49, 0), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 524288), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, 16777216), (12, -1), (13, 262144), (14, -1), (15, 540672), (16, -1), (17, 16777216), (18, -1), (19, 8388608), (20, 262144), (21, -1), (22, -1), (23, -1), (24, -1), (25, 2097152), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, 2097152), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 14 : set()

After reduction : 
 pending  : [25, 36, 20, 19, 17, 2, 15, 13, 11]
 solution : [7, 27, 23]


Solution : [7, 27, 23] has cost 20.


Before backtrack at level 14
 pending : [25, 36, 20, 19, 17, 2, 15, 13, 11]
 solution : [7, 27, 23]

After backtrack at level 14
 pending : [25, 36, 20, 19, 17, 2, 15, 13, 11, 5, 9, 30, 31, 39, 42, 43, 47, 48, 49]
 solution : [7, 27, 23]


Invert decision for 23 at level 13


New level: 14
 pending : [25, 36, 20, 19, 17, 2, 15, 13, 11, 5, 9, 30, 31, 39, 42, 43, 47, 48, 49]
 solution : [7, 27]


Before reduction : 
 pending  : [25, 36, 20, 19, 17, 2, 15, 13, 11, 5, 9, 30, 31, 39, 42, 43, 47, 48, 49]
 solution : [7, 27]

Essensial at level 14 : {5}

Before removed
 coverage : [(0, -1), (1, -1), (2, 524288), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, 16777216), (12, -1), (13, 262144), (14, -1), (15, 540672), (16, -1), (17, 16777216), (18, -1), (19, 8388608), (20, 262144), (21, -1), (22, -1), (23, -1), (24, -1), (25, 2097152), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, 2097152), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 524288), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, 0), (10, -1), (11, 16777216), (12, -1), (13, 262144), (14, -1), (15, 540672), (16, -1), (17, 16777216), (18, -1), (19, 8388608), (20, 262144), (21, -1), (22, -1), (23, -1), (24, -1), (25, 2097152), (26, -1), (27, -1), (28, -1), (29, -1), (30, 0), (31, 0), (32, -1), (33, -1), (34, -1), (35, -1), (36, 2097152), (37, -1), (38, -1), (39, 0), (40, -1), (41, -1), (42, 0), (43, 0), (44, -1), (45, -1), (46, -1), (47, 0), (48, 0), (49, 0), (50, -1), (51, -1), (52, -1)]

Covered at level 14 : {39, 9, 42, 43, 47, 48, 49, 30, 31}

After reduction : 
 pending  : [25, 36, 20, 19, 17, 2, 15, 13, 11]
 solution : [7, 27, 5]


Before reduction : 
 pending  : [25, 36, 20, 19, 17, 2, 15, 13, 11]
 solution : [7, 27, 5]

Essensial at level 14 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 524288), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, 0), (10, -1), (11, 16777216), (12, -1), (13, 262144), (14, -1), (15, 540672), (16, -1), (17, 16777216), (18, -1), (19, 8388608), (20, 262144), (21, -1), (22, -1), (23, -1), (24, -1), (25, 2097152), (26, -1), (27, -1), (28, -1), (29, -1), (30, 0), (31, 0), (32, -1), (33, -1), (34, -1), (35, -1), (36, 2097152), (37, -1), (38, -1), (39, 0), (40, -1), (41, -1), (42, 0), (43, 0), (44, -1), (45, -1), (46, -1), (47, 0), (48, 0), (49, 0), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 524288), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, 16777216), (12, -1), (13, 262144), (14, -1), (15, 540672), (16, -1), (17, 16777216), (18, -1), (19, 8388608), (20, 262144), (21, -1), (22, -1), (23, -1), (24, -1), (25, 2097152), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, 2097152), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 14 : set()

After reduction : 
 pending  : [25, 36, 20, 19, 17, 2, 15, 13, 11]
 solution : [7, 27, 5]


Solution : [7, 27, 5] has cost 17.


Before backtrack at level 14
 pending : [25, 36, 20, 19, 17, 2, 15, 13, 11]
 solution : [7, 27, 5]

After backtrack at level 14
 pending : [25, 36, 20, 19, 17, 2, 15, 13, 11, 5, 9, 30, 31, 39, 42, 43, 47, 48, 49]
 solution : [7, 27]


Before backtrack at level 13
 pending : [25, 36, 20, 19, 17, 2, 15, 13, 11, 5, 9, 30, 31, 39, 42, 43, 47, 48, 49]
 solution : [7, 27]

After backtrack at level 13
 pending : [25, 36, 20, 19, 17, 2, 15, 13, 11, 5, 9, 30, 31, 39, 42, 43, 47, 48, 49, 23]
 solution : [7, 27]


Before backtrack at level 12
 pending : [25, 36, 20, 19, 17, 2, 15, 13, 11, 5, 9, 30, 31, 39, 42, 43, 47, 48, 49, 23]
 solution : [7, 27]

After backtrack at level 12
 pending : [25, 36, 20, 19, 17, 2, 15, 13, 11, 5, 9, 30, 31, 39, 42, 43, 47, 48, 49, 23, 12]
 solution : [7, 27]


Before backtrack at level 11
 pending : [25, 36, 20, 19, 17, 2, 15, 13, 11, 5, 9, 30, 31, 39, 42, 43, 47, 48, 49, 23, 12]
 solution : [7, 27]

After backtrack at level 11
 pending : [25, 36, 20, 19, 17, 2, 15, 13, 11, 5, 9, 30, 31, 39, 42, 43, 47, 48, 49, 23, 12, 40]
 solution : [7, 27]


Before backtrack at level 10
 pending : [25, 36, 20, 19, 17, 2, 15, 13, 11, 5, 9, 30, 31, 39, 42, 43, 47, 48, 49, 23, 12, 40]
 solution : [7, 27]

After backtrack at level 10
 pending : [25, 36, 20, 19, 17, 2, 15, 13, 11, 5, 9, 30, 31, 39, 42, 43, 47, 48, 49, 23, 12, 40, 34, 35, 37]
 solution : [7, 27]


Invert decision for 27 at level 9


New level: 10
 pending : [25, 36, 20, 19, 17, 2, 15, 13, 11, 5, 9, 30, 31, 39, 42, 43, 47, 48, 49, 23, 12, 40, 34, 35, 37]
 solution : [7]


Before reduction : 
 pending  : [25, 36, 20, 19, 17, 2, 15, 13, 11, 5, 9, 30, 31, 39, 42, 43, 47, 48, 49, 23, 12, 40, 34, 35, 37]
 solution : [7]

Essensial at level 10 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 524288), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, 16777216), (12, -1), (13, 262144), (14, -1), (15, 540672), (16, -1), (17, 16777216), (18, -1), (19, 8388608), (20, 262144), (21, -1), (22, -1), (23, -1), (24, -1), (25, 2097152), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, 2097152), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 1048576), (3, -1), (4, -1), (5, 134217728), (6, -1), (7, -1), (8, -1), (9, 1048576), (10, -1), (11, 33554432), (12, 67108864), (13, 524288), (14, -1), (15, 1114112), (16, -1), (17, 16777216), (18, -1), (19, 8388608), (20, 262144), (21, -1), (22, -1), (23, 134217728), (24, -1), (25, 4194304), (26, -1), (27, -1), (28, -1), (29, -1), (30, 1048576), (31, 16384), (32, -1), (33, -1), (34, 4194304), (35, 32768), (36, 4194304), (37, 268435456), (38, -1), (39, 16384), (40, 134217728), (41, -1), (42, 524288), (43, 524288), (44, -1), (45, -1), (46, -1), (47, 67108864), (48, 16777216), (49, 67108864), (50, -1), (51, -1), (52, -1)]

Covered at level 10 : set()

After reduction : 
 pending  : [25, 36, 20, 19, 17, 2, 15, 13, 11, 5, 9, 30, 31, 39, 42, 43, 47, 48, 49, 23, 12, 40, 34, 35, 37]
 solution : [7]


Solution : [7] has cost 6.


Decide in level 10 among pending : [25, 36, 20, 19, 17, 2, 15, 13, 11, 5, 9, 30, 31, 39, 42, 43, 47, 48, 49, 23, 12, 40, 34, 35, 37]

Coverage : [(0, -1), (1, -1), (2, 1048576), (3, -1), (4, -1), (5, 134217728), (6, -1), (7, -1), (8, -1), (9, 1048576), (10, -1), (11, 33554432), (12, 67108864), (13, 524288), (14, -1), (15, 1114112), (16, -1), (17, 16777216), (18, -1), (19, 8388608), (20, 262144), (21, -1), (22, -1), (23, 134217728), (24, -1), (25, 4194304), (26, -1), (27, -1), (28, -1), (29, -1), (30, 1048576), (31, 16384), (32, -1), (33, -1), (34, 4194304), (35, 32768), (36, 4194304), (37, 268435456), (38, -1), (39, 16384), (40, 134217728), (41, -1), (42, 524288), (43, 524288), (44, -1), (45, -1), (46, -1), (47, 67108864), (48, 16777216), (49, 67108864), (50, -1), (51, -1), (52, -1)]

Decide 37 with phase True at level 10

After decision at level 10
 pending : [25, 36, 20, 19, 17, 2, 15, 13, 11, 5, 9, 30, 31, 39, 42, 43, 47, 48, 49, 23, 12, 40, 34, 35]
 solution : [7, 37]


New level: 11
 pending : [25, 36, 20, 19, 17, 2, 15, 13, 11, 5, 9, 30, 31, 39, 42, 43, 47, 48, 49, 23, 12, 40, 34, 35]
 solution : [7, 37]


Before reduction : 
 pending  : [25, 36, 20, 19, 17, 2, 15, 13, 11, 5, 9, 30, 31, 39, 42, 43, 47, 48, 49, 23, 12, 40, 34, 35]
 solution : [7, 37]

Essensial at level 11 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 1048576), (3, -1), (4, -1), (5, 134217728), (6, -1), (7, -1), (8, -1), (9, 1048576), (10, -1), (11, 33554432), (12, 67108864), (13, 524288), (14, -1), (15, 1114112), (16, -1), (17, 16777216), (18, -1), (19, 8388608), (20, 262144), (21, -1), (22, -1), (23, 134217728), (24, -1), (25, 4194304), (26, -1), (27, -1), (28, -1), (29, -1), (30, 1048576), (31, 16384), (32, -1), (33, -1), (34, 4194304), (35, 32768), (36, 4194304), (37, 268435456), (38, -1), (39, 16384), (40, 134217728), (41, -1), (42, 524288), (43, 524288), (44, -1), (45, -1), (46, -1), (47, 67108864), (48, 16777216), (49, 67108864), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 524288), (3, -1), (4, -1), (5, 33554432), (6, -1), (7, -1), (8, -1), (9, 262144), (10, -1), (11, 16777216), (12, 33554432), (13, 262144), (14, -1), (15, 540672), (16, -1), (17, 16777216), (18, -1), (19, 8388608), (20, 262144), (21, -1), (22, -1), (23, 33554432), (24, -1), (25, 1048576), (26, -1), (27, -1), (28, -1), (29, -1), (30, 262144), (31, 4096), (32, -1), (33, -1), (34, 4194304), (35, 8192), (36, 1048576), (37, -1), (38, -1), (39, 4096), (40, 134217728), (41, -1), (42, 131072), (43, 131072), (44, -1), (45, -1), (46, -1), (47, 33554432), (48, 4194304), (49, 67108864), (50, -1), (51, -1), (52, -1)]

Covered at level 11 : set()

After reduction : 
 pending  : [25, 36, 20, 19, 17, 2, 15, 13, 11, 5, 9, 30, 31, 39, 42, 43, 47, 48, 49, 23, 12, 40, 34, 35]
 solution : [7, 37]


Solution : [7, 37] has cost 24.


Before backtrack at level 11
 pending : [25, 36, 20, 19, 17, 2, 15, 13, 11, 5, 9, 30, 31, 39, 42, 43, 47, 48, 49, 23, 12, 40, 34, 35]
 solution : [7, 37]

After backtrack at level 11
 pending : [25, 36, 20, 19, 17, 2, 15, 13, 11, 5, 9, 30, 31, 39, 42, 43, 47, 48, 49, 23, 12, 40, 34, 35]
 solution : [7, 37]


Invert decision for 37 at level 10


New level: 11
 pending : [25, 36, 20, 19, 17, 2, 15, 13, 11, 5, 9, 30, 31, 39, 42, 43, 47, 48, 49, 23, 12, 40, 34, 35]
 solution : [7]


Before reduction : 
 pending  : [25, 36, 20, 19, 17, 2, 15, 13, 11, 5, 9, 30, 31, 39, 42, 43, 47, 48, 49, 23, 12, 40, 34, 35]
 solution : [7]

Essensial at level 11 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 524288), (3, -1), (4, -1), (5, 33554432), (6, -1), (7, -1), (8, -1), (9, 262144), (10, -1), (11, 16777216), (12, 33554432), (13, 262144), (14, -1), (15, 540672), (16, -1), (17, 16777216), (18, -1), (19, 8388608), (20, 262144), (21, -1), (22, -1), (23, 33554432), (24, -1), (25, 1048576), (26, -1), (27, -1), (28, -1), (29, -1), (30, 262144), (31, 4096), (32, -1), (33, -1), (34, 4194304), (35, 8192), (36, 1048576), (37, -1), (38, -1), (39, 4096), (40, 134217728), (41, -1), (42, 131072), (43, 131072), (44, -1), (45, -1), (46, -1), (47, 33554432), (48, 4194304), (49, 67108864), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 1048576), (3, -1), (4, -1), (5, 134217728), (6, -1), (7, -1), (8, -1), (9, 1048576), (10, -1), (11, 33554432), (12, 67108864), (13, 524288), (14, -1), (15, 1114112), (16, -1), (17, 16777216), (18, -1), (19, 8388608), (20, 262144), (21, -1), (22, -1), (23, 134217728), (24, -1), (25, 4194304), (26, -1), (27, -1), (28, -1), (29, -1), (30, 1048576), (31, 16384), (32, -1), (33, -1), (34, 4194304), (35, 32768), (36, 4194304), (37, -1), (38, -1), (39, 16384), (40, 134217728), (41, -1), (42, 524288), (43, 524288), (44, -1), (45, -1), (46, -1), (47, 67108864), (48, 16777216), (49, 67108864), (50, -1), (51, -1), (52, -1)]

Covered at level 11 : set()

After reduction : 
 pending  : [25, 36, 20, 19, 17, 2, 15, 13, 11, 5, 9, 30, 31, 39, 42, 43, 47, 48, 49, 23, 12, 40, 34, 35]
 solution : [7]


Solution : [7] has cost 6.


Decide in level 11 among pending : [25, 36, 20, 19, 17, 2, 15, 13, 11, 5, 9, 30, 31, 39, 42, 43, 47, 48, 49, 23, 12, 40, 34, 35]

Coverage : [(0, -1), (1, -1), (2, 1048576), (3, -1), (4, -1), (5, 134217728), (6, -1), (7, -1), (8, -1), (9, 1048576), (10, -1), (11, 33554432), (12, 67108864), (13, 524288), (14, -1), (15, 1114112), (16, -1), (17, 16777216), (18, -1), (19, 8388608), (20, 262144), (21, -1), (22, -1), (23, 134217728), (24, -1), (25, 4194304), (26, -1), (27, -1), (28, -1), (29, -1), (30, 1048576), (31, 16384), (32, -1), (33, -1), (34, 4194304), (35, 32768), (36, 4194304), (37, -1), (38, -1), (39, 16384), (40, 134217728), (41, -1), (42, 524288), (43, 524288), (44, -1), (45, -1), (46, -1), (47, 67108864), (48, 16777216), (49, 67108864), (50, -1), (51, -1), (52, -1)]

Decide 5 with phase True at level 11

After decision at level 11
 pending : [25, 36, 20, 19, 17, 2, 15, 13, 11, 9, 30, 31, 39, 42, 43, 47, 48, 49, 23, 12, 40, 34, 35]
 solution : [7, 5]


New level: 12
 pending : [25, 36, 20, 19, 17, 2, 15, 13, 11, 9, 30, 31, 39, 42, 43, 47, 48, 49, 23, 12, 40, 34, 35]
 solution : [7, 5]


Before reduction : 
 pending  : [25, 36, 20, 19, 17, 2, 15, 13, 11, 9, 30, 31, 39, 42, 43, 47, 48, 49, 23, 12, 40, 34, 35]
 solution : [7, 5]

Essensial at level 12 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 1048576), (3, -1), (4, -1), (5, 134217728), (6, -1), (7, -1), (8, -1), (9, 1048576), (10, -1), (11, 33554432), (12, 67108864), (13, 524288), (14, -1), (15, 1114112), (16, -1), (17, 16777216), (18, -1), (19, 8388608), (20, 262144), (21, -1), (22, -1), (23, 134217728), (24, -1), (25, 4194304), (26, -1), (27, -1), (28, -1), (29, -1), (30, 1048576), (31, 16384), (32, -1), (33, -1), (34, 4194304), (35, 32768), (36, 4194304), (37, -1), (38, -1), (39, 16384), (40, 134217728), (41, -1), (42, 524288), (43, 524288), (44, -1), (45, -1), (46, -1), (47, 67108864), (48, 16777216), (49, 67108864), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 524288), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, 0), (10, -1), (11, 16777216), (12, 33554432), (13, 262144), (14, -1), (15, 540672), (16, -1), (17, 16777216), (18, -1), (19, 8388608), (20, 262144), (21, -1), (22, -1), (23, 0), (24, -1), (25, 2097152), (26, -1), (27, -1), (28, -1), (29, -1), (30, 0), (31, 0), (32, -1), (33, -1), (34, 0), (35, 0), (36, 2097152), (37, -1), (38, -1), (39, 0), (40, 0), (41, -1), (42, 0), (43, 0), (44, -1), (45, -1), (46, -1), (47, 0), (48, 0), (49, 0), (50, -1), (51, -1), (52, -1)]

Covered at level 12 : {34, 35, 39, 40, 9, 42, 43, 47, 48, 49, 23, 30, 31}

After reduction : 
 pending  : [25, 36, 20, 19, 17, 2, 15, 13, 11, 12]
 solution : [7, 5]


Before reduction : 
 pending  : [25, 36, 20, 19, 17, 2, 15, 13, 11, 12]
 solution : [7, 5]

Essensial at level 12 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 524288), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, 0), (10, -1), (11, 16777216), (12, 33554432), (13, 262144), (14, -1), (15, 540672), (16, -1), (17, 16777216), (18, -1), (19, 8388608), (20, 262144), (21, -1), (22, -1), (23, 0), (24, -1), (25, 2097152), (26, -1), (27, -1), (28, -1), (29, -1), (30, 0), (31, 0), (32, -1), (33, -1), (34, 0), (35, 0), (36, 2097152), (37, -1), (38, -1), (39, 0), (40, 0), (41, -1), (42, 0), (43, 0), (44, -1), (45, -1), (46, -1), (47, 0), (48, 0), (49, 0), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 524288), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, 16777216), (12, 33554432), (13, 262144), (14, -1), (15, 540672), (16, -1), (17, 16777216), (18, -1), (19, 8388608), (20, 262144), (21, -1), (22, -1), (23, -1), (24, -1), (25, 2097152), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, 2097152), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 12 : set()

After reduction : 
 pending  : [25, 36, 20, 19, 17, 2, 15, 13, 11, 12]
 solution : [7, 5]


Solution : [7, 5] has cost 10.


Decide in level 12 among pending : [25, 36, 20, 19, 17, 2, 15, 13, 11, 12]

Coverage : [(0, -1), (1, -1), (2, 524288), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, 16777216), (12, 33554432), (13, 262144), (14, -1), (15, 540672), (16, -1), (17, 16777216), (18, -1), (19, 8388608), (20, 262144), (21, -1), (22, -1), (23, -1), (24, -1), (25, 2097152), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, 2097152), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Decide 12 with phase True at level 12

After decision at level 12
 pending : [25, 36, 20, 19, 17, 2, 15, 13, 11]
 solution : [7, 5, 12]


New level: 13
 pending : [25, 36, 20, 19, 17, 2, 15, 13, 11]
 solution : [7, 5, 12]


Before reduction : 
 pending  : [25, 36, 20, 19, 17, 2, 15, 13, 11]
 solution : [7, 5, 12]

Essensial at level 13 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 524288), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, 16777216), (12, 33554432), (13, 262144), (14, -1), (15, 540672), (16, -1), (17, 16777216), (18, -1), (19, 8388608), (20, 262144), (21, -1), (22, -1), (23, -1), (24, -1), (25, 2097152), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, 2097152), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 0), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, 0), (12, -1), (13, 0), (14, -1), (15, 0), (16, -1), (17, 262144), (18, -1), (19, 65536), (20, 65536), (21, -1), (22, -1), (23, -1), (24, -1), (25, 2048), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, 2048), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 13 : {2, 11, 13, 15}

After reduction : 
 pending  : [25, 36, 20, 19, 17]
 solution : [7, 5, 12]


Before reduction : 
 pending  : [25, 36, 20, 19, 17]
 solution : [7, 5, 12]

Essensial at level 13 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 0), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, 0), (12, -1), (13, 0), (14, -1), (15, 0), (16, -1), (17, 262144), (18, -1), (19, 65536), (20, 65536), (21, -1), (22, -1), (23, -1), (24, -1), (25, 2048), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, 2048), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, 262144), (18, -1), (19, 65536), (20, 65536), (21, -1), (22, -1), (23, -1), (24, -1), (25, 2048), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, 2048), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 13 : set()

After reduction : 
 pending  : [25, 36, 20, 19, 17]
 solution : [7, 5, 12]


Solution : [7, 5, 12] has cost 19.


Before backtrack at level 13
 pending : [25, 36, 20, 19, 17]
 solution : [7, 5, 12]

After backtrack at level 13
 pending : [25, 36, 20, 19, 17, 2, 15, 13, 11]
 solution : [7, 5, 12]


Invert decision for 12 at level 12


New level: 13
 pending : [25, 36, 20, 19, 17, 2, 15, 13, 11]
 solution : [7, 5]


Before reduction : 
 pending  : [25, 36, 20, 19, 17, 2, 15, 13, 11]
 solution : [7, 5]

Essensial at level 13 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, 262144), (18, -1), (19, 65536), (20, 65536), (21, -1), (22, -1), (23, -1), (24, -1), (25, 2048), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, 2048), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 524288), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, 16777216), (12, -1), (13, 262144), (14, -1), (15, 540672), (16, -1), (17, 16777216), (18, -1), (19, 8388608), (20, 262144), (21, -1), (22, -1), (23, -1), (24, -1), (25, 2097152), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, 2097152), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 13 : set()

After reduction : 
 pending  : [25, 36, 20, 19, 17, 2, 15, 13, 11]
 solution : [7, 5]


Solution : [7, 5] has cost 10.


Decide in level 13 among pending : [25, 36, 20, 19, 17, 2, 15, 13, 11]

Coverage : [(0, -1), (1, -1), (2, 524288), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, 16777216), (12, -1), (13, 262144), (14, -1), (15, 540672), (16, -1), (17, 16777216), (18, -1), (19, 8388608), (20, 262144), (21, -1), (22, -1), (23, -1), (24, -1), (25, 2097152), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, 2097152), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Decide 17 with phase True at level 13

After decision at level 13
 pending : [25, 36, 20, 19, 2, 15, 13, 11]
 solution : [7, 5, 17]


New level: 14
 pending : [25, 36, 20, 19, 2, 15, 13, 11]
 solution : [7, 5, 17]


Before reduction : 
 pending  : [25, 36, 20, 19, 2, 15, 13, 11]
 solution : [7, 5, 17]

Essensial at level 14 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 524288), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, 16777216), (12, -1), (13, 262144), (14, -1), (15, 540672), (16, -1), (17, 16777216), (18, -1), (19, 8388608), (20, 262144), (21, -1), (22, -1), (23, -1), (24, -1), (25, 2097152), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, 2097152), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 262144), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, 4194304), (12, -1), (13, 0), (14, -1), (15, 264192), (16, -1), (17, -1), (18, -1), (19, 0), (20, 0), (21, -1), (22, -1), (23, -1), (24, -1), (25, 524288), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, 524288), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 14 : {19, 20, 13}

After reduction : 
 pending  : [25, 36, 2, 15, 11]
 solution : [7, 5, 17]


Before reduction : 
 pending  : [25, 36, 2, 15, 11]
 solution : [7, 5, 17]

Essensial at level 14 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 262144), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, 4194304), (12, -1), (13, 0), (14, -1), (15, 264192), (16, -1), (17, -1), (18, -1), (19, 0), (20, 0), (21, -1), (22, -1), (23, -1), (24, -1), (25, 524288), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, 524288), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 262144), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, 4194304), (12, -1), (13, -1), (14, -1), (15, 264192), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, 524288), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, 524288), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 14 : set()

After reduction : 
 pending  : [25, 36, 2, 15, 11]
 solution : [7, 5, 17]


Solution : [7, 5, 17] has cost 17.


Before backtrack at level 14
 pending : [25, 36, 2, 15, 11]
 solution : [7, 5, 17]

After backtrack at level 14
 pending : [25, 36, 2, 15, 11, 20, 19, 13]
 solution : [7, 5, 17]


Invert decision for 17 at level 13


New level: 14
 pending : [25, 36, 2, 15, 11, 20, 19, 13]
 solution : [7, 5]


Before reduction : 
 pending  : [25, 36, 2, 15, 11, 20, 19, 13]
 solution : [7, 5]

Essensial at level 14 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 262144), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, 4194304), (12, -1), (13, -1), (14, -1), (15, 264192), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, 524288), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, 524288), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 524288), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, 16777216), (12, -1), (13, 262144), (14, -1), (15, 540672), (16, -1), (17, -1), (18, -1), (19, 8388608), (20, 262144), (21, -1), (22, -1), (23, -1), (24, -1), (25, 2097152), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, 2097152), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 14 : set()

After reduction : 
 pending  : [25, 36, 2, 15, 11, 20, 19, 13]
 solution : [7, 5]


Solution : [7, 5] has cost 10.


Decide in level 14 among pending : [25, 36, 2, 15, 11, 20, 19, 13]

Coverage : [(0, -1), (1, -1), (2, 524288), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, 16777216), (12, -1), (13, 262144), (14, -1), (15, 540672), (16, -1), (17, -1), (18, -1), (19, 8388608), (20, 262144), (21, -1), (22, -1), (23, -1), (24, -1), (25, 2097152), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, 2097152), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Decide 11 with phase True at level 14

After decision at level 14
 pending : [25, 36, 2, 15, 20, 19, 13]
 solution : [7, 5, 11]


New level: 15
 pending : [25, 36, 2, 15, 20, 19, 13]
 solution : [7, 5, 11]


Before reduction : 
 pending  : [25, 36, 2, 15, 20, 19, 13]
 solution : [7, 5, 11]

Essensial at level 15 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 524288), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, 16777216), (12, -1), (13, 262144), (14, -1), (15, 540672), (16, -1), (17, -1), (18, -1), (19, 8388608), (20, 262144), (21, -1), (22, -1), (23, -1), (24, -1), (25, 2097152), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, 2097152), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 0), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, 0), (14, -1), (15, 0), (16, -1), (17, -1), (18, -1), (19, 65536), (20, 65536), (21, -1), (22, -1), (23, -1), (24, -1), (25, 2048), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, 2048), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 15 : {2, 13, 15}

After reduction : 
 pending  : [25, 36, 20, 19]
 solution : [7, 5, 11]


Before reduction : 
 pending  : [25, 36, 20, 19]
 solution : [7, 5, 11]

Essensial at level 15 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 0), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, 0), (14, -1), (15, 0), (16, -1), (17, -1), (18, -1), (19, 65536), (20, 65536), (21, -1), (22, -1), (23, -1), (24, -1), (25, 2048), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, 2048), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, 65536), (20, 65536), (21, -1), (22, -1), (23, -1), (24, -1), (25, 2048), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, 2048), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 15 : set()

After reduction : 
 pending  : [25, 36, 20, 19]
 solution : [7, 5, 11]


Solution : [7, 5, 11] has cost 19.


Before backtrack at level 15
 pending : [25, 36, 20, 19]
 solution : [7, 5, 11]

After backtrack at level 15
 pending : [25, 36, 20, 19, 2, 15, 13]
 solution : [7, 5, 11]


Invert decision for 11 at level 14


New level: 15
 pending : [25, 36, 20, 19, 2, 15, 13]
 solution : [7, 5]


Before reduction : 
 pending  : [25, 36, 20, 19, 2, 15, 13]
 solution : [7, 5]

Essensial at level 15 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, 65536), (20, 65536), (21, -1), (22, -1), (23, -1), (24, -1), (25, 2048), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, 2048), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 524288), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, 262144), (14, -1), (15, 540672), (16, -1), (17, -1), (18, -1), (19, 8388608), (20, 262144), (21, -1), (22, -1), (23, -1), (24, -1), (25, 2097152), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, 2097152), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 15 : set()

After reduction : 
 pending  : [25, 36, 20, 19, 2, 15, 13]
 solution : [7, 5]


Solution : [7, 5] has cost 10.


Decide in level 15 among pending : [25, 36, 20, 19, 2, 15, 13]

Coverage : [(0, -1), (1, -1), (2, 524288), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, 262144), (14, -1), (15, 540672), (16, -1), (17, -1), (18, -1), (19, 8388608), (20, 262144), (21, -1), (22, -1), (23, -1), (24, -1), (25, 2097152), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, 2097152), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Decide 19 with phase True at level 15

After decision at level 15
 pending : [25, 36, 20, 2, 15, 13]
 solution : [7, 5, 19]


New level: 16
 pending : [25, 36, 20, 2, 15, 13]
 solution : [7, 5, 19]


Before reduction : 
 pending  : [25, 36, 20, 2, 15, 13]
 solution : [7, 5, 19]

Essensial at level 16 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 524288), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, 262144), (14, -1), (15, 540672), (16, -1), (17, -1), (18, -1), (19, 8388608), (20, 262144), (21, -1), (22, -1), (23, -1), (24, -1), (25, 2097152), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, 2097152), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 262144), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, 0), (14, -1), (15, 264192), (16, -1), (17, -1), (18, -1), (19, -1), (20, 0), (21, -1), (22, -1), (23, -1), (24, -1), (25, 524288), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, 524288), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 16 : {20, 13}

After reduction : 
 pending  : [25, 36, 2, 15]
 solution : [7, 5, 19]


Before reduction : 
 pending  : [25, 36, 2, 15]
 solution : [7, 5, 19]

Essensial at level 16 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 262144), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, 0), (14, -1), (15, 264192), (16, -1), (17, -1), (18, -1), (19, -1), (20, 0), (21, -1), (22, -1), (23, -1), (24, -1), (25, 524288), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, 524288), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 262144), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, 264192), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, 524288), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, 524288), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 16 : set()

After reduction : 
 pending  : [25, 36, 2, 15]
 solution : [7, 5, 19]


Solution : [7, 5, 19] has cost 17.


Before backtrack at level 16
 pending : [25, 36, 2, 15]
 solution : [7, 5, 19]

After backtrack at level 16
 pending : [25, 36, 2, 15, 20, 13]
 solution : [7, 5, 19]


Invert decision for 19 at level 15


New level: 16
 pending : [25, 36, 2, 15, 20, 13]
 solution : [7, 5]


Before reduction : 
 pending  : [25, 36, 2, 15, 20, 13]
 solution : [7, 5]

Essensial at level 16 : {20}

Before removed
 coverage : [(0, -1), (1, -1), (2, 262144), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, 264192), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, 524288), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, 524288), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 524288), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, 131072), (14, -1), (15, 540672), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, 2097152), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, 2097152), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 16 : set()

After reduction : 
 pending  : [25, 36, 2, 15, 13]
 solution : [7, 5, 20]


Before reduction : 
 pending  : [25, 36, 2, 15, 13]
 solution : [7, 5, 20]

Essensial at level 16 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 524288), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, 131072), (14, -1), (15, 540672), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, 2097152), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, 2097152), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 524288), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, 131072), (14, -1), (15, 540672), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, 2097152), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, 2097152), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 16 : set()

After reduction : 
 pending  : [25, 36, 2, 15, 13]
 solution : [7, 5, 20]


Solution : [7, 5, 20] has cost 17.


Before backtrack at level 16
 pending : [25, 36, 2, 15, 13]
 solution : [7, 5, 20]

After backtrack at level 16
 pending : [25, 36, 2, 15, 13, 20]
 solution : [7, 5]


Before backtrack at level 15
 pending : [25, 36, 2, 15, 13, 20]
 solution : [7, 5]

After backtrack at level 15
 pending : [25, 36, 2, 15, 13, 20, 19]
 solution : [7, 5]


Before backtrack at level 14
 pending : [25, 36, 2, 15, 13, 20, 19]
 solution : [7, 5]

After backtrack at level 14
 pending : [25, 36, 2, 15, 13, 20, 19, 11]
 solution : [7, 5]


Before backtrack at level 13
 pending : [25, 36, 2, 15, 13, 20, 19, 11]
 solution : [7, 5]

After backtrack at level 13
 pending : [25, 36, 2, 15, 13, 20, 19, 11, 17]
 solution : [7, 5]


Before backtrack at level 12
 pending : [25, 36, 2, 15, 13, 20, 19, 11, 17]
 solution : [7, 5]

After backtrack at level 12
 pending : [25, 36, 2, 15, 13, 20, 19, 11, 17, 9, 30, 31, 39, 42, 43, 47, 48, 49, 23, 40, 34, 35, 12]
 solution : [7, 5]


Invert decision for 5 at level 11


New level: 12
 pending : [25, 36, 2, 15, 13, 20, 19, 11, 17, 9, 30, 31, 39, 42, 43, 47, 48, 49, 23, 40, 34, 35, 12]
 solution : [7]


Before reduction : 
 pending  : [25, 36, 2, 15, 13, 20, 19, 11, 17, 9, 30, 31, 39, 42, 43, 47, 48, 49, 23, 40, 34, 35, 12]
 solution : [7]

Essensial at level 12 : {23}

Before removed
 coverage : [(0, -1), (1, -1), (2, 524288), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, 131072), (14, -1), (15, 540672), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, 2097152), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, 2097152), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 524288), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, 0), (10, -1), (11, 16777216), (12, 33554432), (13, 262144), (14, -1), (15, 540672), (16, -1), (17, 16777216), (18, -1), (19, 8388608), (20, 262144), (21, -1), (22, -1), (23, -1), (24, -1), (25, 2097152), (26, -1), (27, -1), (28, -1), (29, -1), (30, 0), (31, 0), (32, -1), (33, -1), (34, 0), (35, 0), (36, 2097152), (37, -1), (38, -1), (39, 0), (40, 0), (41, -1), (42, 0), (43, 0), (44, -1), (45, -1), (46, -1), (47, 0), (48, 0), (49, 0), (50, -1), (51, -1), (52, -1)]

Covered at level 12 : {34, 35, 39, 40, 9, 42, 43, 47, 48, 49, 30, 31}

After reduction : 
 pending  : [25, 36, 2, 15, 13, 20, 19, 11, 17, 12]
 solution : [7, 23]


Before reduction : 
 pending  : [25, 36, 2, 15, 13, 20, 19, 11, 17, 12]
 solution : [7, 23]

Essensial at level 12 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 524288), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, 0), (10, -1), (11, 16777216), (12, 33554432), (13, 262144), (14, -1), (15, 540672), (16, -1), (17, 16777216), (18, -1), (19, 8388608), (20, 262144), (21, -1), (22, -1), (23, -1), (24, -1), (25, 2097152), (26, -1), (27, -1), (28, -1), (29, -1), (30, 0), (31, 0), (32, -1), (33, -1), (34, 0), (35, 0), (36, 2097152), (37, -1), (38, -1), (39, 0), (40, 0), (41, -1), (42, 0), (43, 0), (44, -1), (45, -1), (46, -1), (47, 0), (48, 0), (49, 0), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 524288), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, 16777216), (12, 33554432), (13, 262144), (14, -1), (15, 540672), (16, -1), (17, 16777216), (18, -1), (19, 8388608), (20, 262144), (21, -1), (22, -1), (23, -1), (24, -1), (25, 2097152), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, 2097152), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 12 : set()

After reduction : 
 pending  : [25, 36, 2, 15, 13, 20, 19, 11, 17, 12]
 solution : [7, 23]


Solution : [7, 23] has cost 13.


Decide in level 12 among pending : [25, 36, 2, 15, 13, 20, 19, 11, 17, 12]

Coverage : [(0, -1), (1, -1), (2, 524288), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, 16777216), (12, 33554432), (13, 262144), (14, -1), (15, 540672), (16, -1), (17, 16777216), (18, -1), (19, 8388608), (20, 262144), (21, -1), (22, -1), (23, -1), (24, -1), (25, 2097152), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, 2097152), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Decide 12 with phase True at level 12

After decision at level 12
 pending : [25, 36, 2, 15, 13, 20, 19, 11, 17]
 solution : [7, 23, 12]


New level: 13
 pending : [25, 36, 2, 15, 13, 20, 19, 11, 17]
 solution : [7, 23, 12]


Before reduction : 
 pending  : [25, 36, 2, 15, 13, 20, 19, 11, 17]
 solution : [7, 23, 12]

Essensial at level 13 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 524288), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, 16777216), (12, 33554432), (13, 262144), (14, -1), (15, 540672), (16, -1), (17, 16777216), (18, -1), (19, 8388608), (20, 262144), (21, -1), (22, -1), (23, -1), (24, -1), (25, 2097152), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, 2097152), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 0), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, 0), (12, -1), (13, 0), (14, -1), (15, 0), (16, -1), (17, 262144), (18, -1), (19, 65536), (20, 65536), (21, -1), (22, -1), (23, -1), (24, -1), (25, 2048), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, 2048), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 13 : {2, 11, 13, 15}

After reduction : 
 pending  : [25, 36, 20, 19, 17]
 solution : [7, 23, 12]


Before reduction : 
 pending  : [25, 36, 20, 19, 17]
 solution : [7, 23, 12]

Essensial at level 13 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 0), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, 0), (12, -1), (13, 0), (14, -1), (15, 0), (16, -1), (17, 262144), (18, -1), (19, 65536), (20, 65536), (21, -1), (22, -1), (23, -1), (24, -1), (25, 2048), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, 2048), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, 262144), (18, -1), (19, 65536), (20, 65536), (21, -1), (22, -1), (23, -1), (24, -1), (25, 2048), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, 2048), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 13 : set()

After reduction : 
 pending  : [25, 36, 20, 19, 17]
 solution : [7, 23, 12]


Solution : [7, 23, 12] has cost 22.


Before backtrack at level 13
 pending : [25, 36, 20, 19, 17]
 solution : [7, 23, 12]

After backtrack at level 13
 pending : [25, 36, 20, 19, 17, 2, 15, 13, 11]
 solution : [7, 23, 12]


Invert decision for 12 at level 12


New level: 13
 pending : [25, 36, 20, 19, 17, 2, 15, 13, 11]
 solution : [7, 23]


Before reduction : 
 pending  : [25, 36, 20, 19, 17, 2, 15, 13, 11]
 solution : [7, 23]

Essensial at level 13 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, 262144), (18, -1), (19, 65536), (20, 65536), (21, -1), (22, -1), (23, -1), (24, -1), (25, 2048), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, 2048), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 524288), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, 16777216), (12, -1), (13, 262144), (14, -1), (15, 540672), (16, -1), (17, 16777216), (18, -1), (19, 8388608), (20, 262144), (21, -1), (22, -1), (23, -1), (24, -1), (25, 2097152), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, 2097152), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 13 : set()

After reduction : 
 pending  : [25, 36, 20, 19, 17, 2, 15, 13, 11]
 solution : [7, 23]


Solution : [7, 23] has cost 13.


Decide in level 13 among pending : [25, 36, 20, 19, 17, 2, 15, 13, 11]

Coverage : [(0, -1), (1, -1), (2, 524288), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, 16777216), (12, -1), (13, 262144), (14, -1), (15, 540672), (16, -1), (17, 16777216), (18, -1), (19, 8388608), (20, 262144), (21, -1), (22, -1), (23, -1), (24, -1), (25, 2097152), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, 2097152), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Decide 17 with phase True at level 13

After decision at level 13
 pending : [25, 36, 20, 19, 2, 15, 13, 11]
 solution : [7, 23, 17]


New level: 14
 pending : [25, 36, 20, 19, 2, 15, 13, 11]
 solution : [7, 23, 17]


Before reduction : 
 pending  : [25, 36, 20, 19, 2, 15, 13, 11]
 solution : [7, 23, 17]

Essensial at level 14 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 524288), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, 16777216), (12, -1), (13, 262144), (14, -1), (15, 540672), (16, -1), (17, 16777216), (18, -1), (19, 8388608), (20, 262144), (21, -1), (22, -1), (23, -1), (24, -1), (25, 2097152), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, 2097152), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 262144), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, 4194304), (12, -1), (13, 0), (14, -1), (15, 264192), (16, -1), (17, -1), (18, -1), (19, 0), (20, 0), (21, -1), (22, -1), (23, -1), (24, -1), (25, 524288), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, 524288), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 14 : {19, 20, 13}

After reduction : 
 pending  : [25, 36, 2, 15, 11]
 solution : [7, 23, 17]


Before reduction : 
 pending  : [25, 36, 2, 15, 11]
 solution : [7, 23, 17]

Essensial at level 14 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 262144), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, 4194304), (12, -1), (13, 0), (14, -1), (15, 264192), (16, -1), (17, -1), (18, -1), (19, 0), (20, 0), (21, -1), (22, -1), (23, -1), (24, -1), (25, 524288), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, 524288), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 262144), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, 4194304), (12, -1), (13, -1), (14, -1), (15, 264192), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, 524288), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, 524288), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 14 : set()

After reduction : 
 pending  : [25, 36, 2, 15, 11]
 solution : [7, 23, 17]


Solution : [7, 23, 17] has cost 20.


Before backtrack at level 14
 pending : [25, 36, 2, 15, 11]
 solution : [7, 23, 17]

After backtrack at level 14
 pending : [25, 36, 2, 15, 11, 20, 19, 13]
 solution : [7, 23, 17]


Invert decision for 17 at level 13


New level: 14
 pending : [25, 36, 2, 15, 11, 20, 19, 13]
 solution : [7, 23]


Before reduction : 
 pending  : [25, 36, 2, 15, 11, 20, 19, 13]
 solution : [7, 23]

Essensial at level 14 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 262144), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, 4194304), (12, -1), (13, -1), (14, -1), (15, 264192), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, 524288), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, 524288), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 524288), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, 16777216), (12, -1), (13, 262144), (14, -1), (15, 540672), (16, -1), (17, -1), (18, -1), (19, 8388608), (20, 262144), (21, -1), (22, -1), (23, -1), (24, -1), (25, 2097152), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, 2097152), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 14 : set()

After reduction : 
 pending  : [25, 36, 2, 15, 11, 20, 19, 13]
 solution : [7, 23]


Solution : [7, 23] has cost 13.


Decide in level 14 among pending : [25, 36, 2, 15, 11, 20, 19, 13]

Coverage : [(0, -1), (1, -1), (2, 524288), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, 16777216), (12, -1), (13, 262144), (14, -1), (15, 540672), (16, -1), (17, -1), (18, -1), (19, 8388608), (20, 262144), (21, -1), (22, -1), (23, -1), (24, -1), (25, 2097152), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, 2097152), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Decide 11 with phase True at level 14

After decision at level 14
 pending : [25, 36, 2, 15, 20, 19, 13]
 solution : [7, 23, 11]


New level: 15
 pending : [25, 36, 2, 15, 20, 19, 13]
 solution : [7, 23, 11]


Before reduction : 
 pending  : [25, 36, 2, 15, 20, 19, 13]
 solution : [7, 23, 11]

Essensial at level 15 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 524288), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, 16777216), (12, -1), (13, 262144), (14, -1), (15, 540672), (16, -1), (17, -1), (18, -1), (19, 8388608), (20, 262144), (21, -1), (22, -1), (23, -1), (24, -1), (25, 2097152), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, 2097152), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 0), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, 0), (14, -1), (15, 0), (16, -1), (17, -1), (18, -1), (19, 65536), (20, 65536), (21, -1), (22, -1), (23, -1), (24, -1), (25, 2048), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, 2048), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 15 : {2, 13, 15}

After reduction : 
 pending  : [25, 36, 20, 19]
 solution : [7, 23, 11]


Before reduction : 
 pending  : [25, 36, 20, 19]
 solution : [7, 23, 11]

Essensial at level 15 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 0), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, 0), (14, -1), (15, 0), (16, -1), (17, -1), (18, -1), (19, 65536), (20, 65536), (21, -1), (22, -1), (23, -1), (24, -1), (25, 2048), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, 2048), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, 65536), (20, 65536), (21, -1), (22, -1), (23, -1), (24, -1), (25, 2048), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, 2048), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 15 : set()

After reduction : 
 pending  : [25, 36, 20, 19]
 solution : [7, 23, 11]


Solution : [7, 23, 11] has cost 22.


Before backtrack at level 15
 pending : [25, 36, 20, 19]
 solution : [7, 23, 11]

After backtrack at level 15
 pending : [25, 36, 20, 19, 2, 15, 13]
 solution : [7, 23, 11]


Invert decision for 11 at level 14


New level: 15
 pending : [25, 36, 20, 19, 2, 15, 13]
 solution : [7, 23]


Before reduction : 
 pending  : [25, 36, 20, 19, 2, 15, 13]
 solution : [7, 23]

Essensial at level 15 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, 65536), (20, 65536), (21, -1), (22, -1), (23, -1), (24, -1), (25, 2048), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, 2048), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 524288), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, 262144), (14, -1), (15, 540672), (16, -1), (17, -1), (18, -1), (19, 8388608), (20, 262144), (21, -1), (22, -1), (23, -1), (24, -1), (25, 2097152), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, 2097152), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 15 : set()

After reduction : 
 pending  : [25, 36, 20, 19, 2, 15, 13]
 solution : [7, 23]


Solution : [7, 23] has cost 13.


Decide in level 15 among pending : [25, 36, 20, 19, 2, 15, 13]

Coverage : [(0, -1), (1, -1), (2, 524288), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, 262144), (14, -1), (15, 540672), (16, -1), (17, -1), (18, -1), (19, 8388608), (20, 262144), (21, -1), (22, -1), (23, -1), (24, -1), (25, 2097152), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, 2097152), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Decide 19 with phase True at level 15

After decision at level 15
 pending : [25, 36, 20, 2, 15, 13]
 solution : [7, 23, 19]


New level: 16
 pending : [25, 36, 20, 2, 15, 13]
 solution : [7, 23, 19]


Before reduction : 
 pending  : [25, 36, 20, 2, 15, 13]
 solution : [7, 23, 19]

Essensial at level 16 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 524288), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, 262144), (14, -1), (15, 540672), (16, -1), (17, -1), (18, -1), (19, 8388608), (20, 262144), (21, -1), (22, -1), (23, -1), (24, -1), (25, 2097152), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, 2097152), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 262144), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, 0), (14, -1), (15, 264192), (16, -1), (17, -1), (18, -1), (19, -1), (20, 0), (21, -1), (22, -1), (23, -1), (24, -1), (25, 524288), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, 524288), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 16 : {20, 13}

After reduction : 
 pending  : [25, 36, 2, 15]
 solution : [7, 23, 19]


Before reduction : 
 pending  : [25, 36, 2, 15]
 solution : [7, 23, 19]

Essensial at level 16 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 262144), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, 0), (14, -1), (15, 264192), (16, -1), (17, -1), (18, -1), (19, -1), (20, 0), (21, -1), (22, -1), (23, -1), (24, -1), (25, 524288), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, 524288), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 262144), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, 264192), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, 524288), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, 524288), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 16 : set()

After reduction : 
 pending  : [25, 36, 2, 15]
 solution : [7, 23, 19]


Solution : [7, 23, 19] has cost 20.


Before backtrack at level 16
 pending : [25, 36, 2, 15]
 solution : [7, 23, 19]

After backtrack at level 16
 pending : [25, 36, 2, 15, 20, 13]
 solution : [7, 23, 19]


Invert decision for 19 at level 15


New level: 16
 pending : [25, 36, 2, 15, 20, 13]
 solution : [7, 23]


Before reduction : 
 pending  : [25, 36, 2, 15, 20, 13]
 solution : [7, 23]

Essensial at level 16 : {20}

Before removed
 coverage : [(0, -1), (1, -1), (2, 262144), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, 264192), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, 524288), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, 524288), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 524288), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, 131072), (14, -1), (15, 540672), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, 2097152), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, 2097152), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 16 : set()

After reduction : 
 pending  : [25, 36, 2, 15, 13]
 solution : [7, 23, 20]


Before reduction : 
 pending  : [25, 36, 2, 15, 13]
 solution : [7, 23, 20]

Essensial at level 16 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 524288), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, 131072), (14, -1), (15, 540672), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, 2097152), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, 2097152), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 524288), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, 131072), (14, -1), (15, 540672), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, 2097152), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, 2097152), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 16 : set()

After reduction : 
 pending  : [25, 36, 2, 15, 13]
 solution : [7, 23, 20]


Solution : [7, 23, 20] has cost 20.


Before backtrack at level 16
 pending : [25, 36, 2, 15, 13]
 solution : [7, 23, 20]

After backtrack at level 16
 pending : [25, 36, 2, 15, 13, 20]
 solution : [7, 23]


Before backtrack at level 15
 pending : [25, 36, 2, 15, 13, 20]
 solution : [7, 23]

After backtrack at level 15
 pending : [25, 36, 2, 15, 13, 20, 19]
 solution : [7, 23]


Before backtrack at level 14
 pending : [25, 36, 2, 15, 13, 20, 19]
 solution : [7, 23]

After backtrack at level 14
 pending : [25, 36, 2, 15, 13, 20, 19, 11]
 solution : [7, 23]


Before backtrack at level 13
 pending : [25, 36, 2, 15, 13, 20, 19, 11]
 solution : [7, 23]

After backtrack at level 13
 pending : [25, 36, 2, 15, 13, 20, 19, 11, 17]
 solution : [7, 23]


Before backtrack at level 12
 pending : [25, 36, 2, 15, 13, 20, 19, 11, 17]
 solution : [7, 23]

After backtrack at level 12
 pending : [25, 36, 2, 15, 13, 20, 19, 11, 17, 23, 9, 30, 31, 39, 42, 43, 47, 48, 49, 40, 34, 35, 12]
 solution : [7]


Before backtrack at level 11
 pending : [25, 36, 2, 15, 13, 20, 19, 11, 17, 23, 9, 30, 31, 39, 42, 43, 47, 48, 49, 40, 34, 35, 12]
 solution : [7]

After backtrack at level 11
 pending : [25, 36, 2, 15, 13, 20, 19, 11, 17, 23, 9, 30, 31, 39, 42, 43, 47, 48, 49, 40, 34, 35, 12, 5]
 solution : [7]


Before backtrack at level 10
 pending : [25, 36, 2, 15, 13, 20, 19, 11, 17, 23, 9, 30, 31, 39, 42, 43, 47, 48, 49, 40, 34, 35, 12, 5]
 solution : [7]

After backtrack at level 10
 pending : [25, 36, 2, 15, 13, 20, 19, 11, 17, 23, 9, 30, 31, 39, 42, 43, 47, 48, 49, 40, 34, 35, 12, 5, 37]
 solution : [7]


Before backtrack at level 9
 pending : [25, 36, 2, 15, 13, 20, 19, 11, 17, 23, 9, 30, 31, 39, 42, 43, 47, 48, 49, 40, 34, 35, 12, 5, 37]
 solution : [7]

After backtrack at level 9
 pending : [25, 36, 2, 15, 13, 20, 19, 11, 17, 23, 9, 30, 31, 39, 42, 43, 47, 48, 49, 40, 34, 35, 12, 5, 37, 27]
 solution : [7]


Before backtrack at level 8
 pending : [25, 36, 2, 15, 13, 20, 19, 11, 17, 23, 9, 30, 31, 39, 42, 43, 47, 48, 49, 40, 34, 35, 12, 5, 37, 27]
 solution : [7]

After backtrack at level 8
 pending : [25, 36, 2, 15, 13, 20, 19, 11, 17, 23, 9, 30, 31, 39, 42, 43, 47, 48, 49, 40, 34, 35, 12, 5, 37, 27, 18]
 solution : [7]


Before backtrack at level 7
 pending : [25, 36, 2, 15, 13, 20, 19, 11, 17, 23, 9, 30, 31, 39, 42, 43, 47, 48, 49, 40, 34, 35, 12, 5, 37, 27, 18]
 solution : [7]

After backtrack at level 7
 pending : [25, 36, 2, 15, 13, 20, 19, 11, 17, 23, 9, 30, 31, 39, 42, 43, 47, 48, 49, 40, 34, 35, 12, 5, 37, 27, 18, 41]
 solution : [7]


Before backtrack at level 6
 pending : [25, 36, 2, 15, 13, 20, 19, 11, 17, 23, 9, 30, 31, 39, 42, 43, 47, 48, 49, 40, 34, 35, 12, 5, 37, 27, 18, 41]
 solution : [7]

After backtrack at level 6
 pending : [25, 36, 2, 15, 13, 20, 19, 11, 17, 23, 9, 30, 31, 39, 42, 43, 47, 48, 49, 40, 34, 35, 12, 5, 37, 27, 18, 41, 16]
 solution : [7]


Before backtrack at level 5
 pending : [25, 36, 2, 15, 13, 20, 19, 11, 17, 23, 9, 30, 31, 39, 42, 43, 47, 48, 49, 40, 34, 35, 12, 5, 37, 27, 18, 41, 16]
 solution : [7]

After backtrack at level 5
 pending : [25, 36, 2, 15, 13, 20, 19, 11, 17, 23, 9, 30, 31, 39, 42, 43, 47, 48, 49, 40, 34, 35, 12, 5, 37, 27, 18, 41, 16, 33]
 solution : [7]


Before backtrack at level 4
 pending : [25, 36, 2, 15, 13, 20, 19, 11, 17, 23, 9, 30, 31, 39, 42, 43, 47, 48, 49, 40, 34, 35, 12, 5, 37, 27, 18, 41, 16, 33]
 solution : [7]

After backtrack at level 4
 pending : [25, 36, 2, 15, 13, 20, 19, 11, 17, 23, 9, 30, 31, 39, 42, 43, 47, 48, 49, 40, 34, 35, 12, 5, 37, 27, 18, 41, 16, 33, 28]
 solution : [7]


Before backtrack at level 3
 pending : [25, 36, 2, 15, 13, 20, 19, 11, 17, 23, 9, 30, 31, 39, 42, 43, 47, 48, 49, 40, 34, 35, 12, 5, 37, 27, 18, 41, 16, 33, 28]
 solution : [7]

After backtrack at level 3
 pending : [25, 36, 2, 15, 13, 20, 19, 11, 17, 23, 9, 30, 31, 39, 42, 43, 47, 48, 49, 40, 34, 35, 12, 5, 37, 27, 18, 41, 16, 33, 28, 26]
 solution : [7]


Before backtrack at level 2
 pending : [25, 36, 2, 15, 13, 20, 19, 11, 17, 23, 9, 30, 31, 39, 42, 43, 47, 48, 49, 40, 34, 35, 12, 5, 37, 27, 18, 41, 16, 33, 28, 26]
 solution : [7]

After backtrack at level 2
 pending : [25, 36, 2, 15, 13, 20, 19, 11, 17, 23, 9, 30, 31, 39, 42, 43, 47, 48, 49, 40, 34, 35, 12, 5, 37, 27, 18, 41, 16, 33, 28, 26, 4]
 solution : [7]


Before backtrack at level 1
 pending : [25, 36, 2, 15, 13, 20, 19, 11, 17, 23, 9, 30, 31, 39, 42, 43, 47, 48, 49, 40, 34, 35, 12, 5, 37, 27, 18, 41, 16, 33, 28, 26, 4]
 solution : [7]

After backtrack at level 1
 pending : [25, 36, 2, 15, 13, 20, 19, 11, 17, 23, 9, 30, 31, 39, 42, 43, 47, 48, 49, 40, 34, 35, 12, 5, 37, 27, 18, 41, 16, 33, 28, 26, 4, 3]
 solution : [7]


=====================================================================================================================

	[MIN RESULT]: Minimized Invariants on [ivybench/sym_quorum/ivy/simple-election: acceptor=3,proposer=3]

=====================================================================================================================

[MIN NOTE]: number of minimal solution found: 1

[MIN NOTE]: total qcost: 14

[MIN NOTE]: maximum branch and bound depth: 16

Definitions (length=2)

invariant [def_didNotPromise] didNotPromise(A) = forall P. ~promise(A,P) # definition

invariant [def_chosenAt] chosenAt(Q,P) = forall A. member(A,Q) -> promise(A,P) # definition

Equality Relations (length=0)

Solution 0 : [7, 26, 5] (length = 3)

invariant [invar_7] forall PROPOSER1,PROPOSER0,ACCEPTOR0. ~promise(ACCEPTOR0,PROPOSER1) | ~promise(ACCEPTOR0,PROPOSER0) | PROPOSER0 = PROPOSER1 # qcost: 6

invariant [invar_26] forall PROPOSER0. (exists QUORUM0. chosenAt(QUORUM0,PROPOSER0) | ~leader(PROPOSER0)) # qcost: 4

invariant [invar_5] forall ACCEPTOR0,PROPOSER0. start(PROPOSER0) | ~promise(ACCEPTOR0,PROPOSER0) # qcost: 4




[QRM NOTE]: Time elapsed since start: 11.049 seconds

[QRM NOTE]: Time elapsed since last: 1.519 seconds

[QRM NOTE]: Peak memory: 3182579 bytes


=========================================================================================================

	[IVY_CHECK]: Ivy Check on [ivybench/sym_quorum/ivy/simple-election: acceptor=3,proposer=3]

=========================================================================================================

ivy_check complete=fo ivybench/sym_quorum/ivy/simple-election.acceptor_3_proposer_3.0.ivy


Isolate this:

    The following properties are assumed as axioms:
        ivybench/sym_quorum/ivy/simple-election.acceptor_3_proposer_3.0.ivy: line 17: axiom1

    The following definitions are used:
        ivybench/sym_quorum/ivy/simple-election.acceptor_3_proposer_3.0.ivy: line 29: def2
        ivybench/sym_quorum/ivy/simple-election.acceptor_3_proposer_3.0.ivy: line 30: def3

    The inductive invariant consists of the following conjectures:
        ivybench/sym_quorum/ivy/simple-election.acceptor_3_proposer_3.0.ivy: line 63: def_didNotPromise
        ivybench/sym_quorum/ivy/simple-election.acceptor_3_proposer_3.0.ivy: line 64: def_chosenAt
        ivybench/sym_quorum/ivy/simple-election.acceptor_3_proposer_3.0.ivy: line 65: invar_7
        ivybench/sym_quorum/ivy/simple-election.acceptor_3_proposer_3.0.ivy: line 66: invar_26
        ivybench/sym_quorum/ivy/simple-election.acceptor_3_proposer_3.0.ivy: line 67: invar_5

    The following action implementations are present:
        ivybench/sym_quorum/ivy/simple-election.acceptor_3_proposer_3.0.ivy: line 48: implementation of decide
        ivybench/sym_quorum/ivy/simple-election.acceptor_3_proposer_3.0.ivy: line 39: implementation of send_1a
        ivybench/sym_quorum/ivy/simple-election.acceptor_3_proposer_3.0.ivy: line 42: implementation of send_1b

    The following initializers are present:
        ivybench/sym_quorum/ivy/simple-election.acceptor_3_proposer_3.0.ivy: line 32: init[after4]

    Initialization must establish the invariant
        ivybench/sym_quorum/ivy/simple-election.acceptor_3_proposer_3.0.ivy: line 63: def_didNotPromise ... PASS
        ivybench/sym_quorum/ivy/simple-election.acceptor_3_proposer_3.0.ivy: line 64: def_chosenAt ... PASS
        ivybench/sym_quorum/ivy/simple-election.acceptor_3_proposer_3.0.ivy: line 65: invar_7 ... PASS
        ivybench/sym_quorum/ivy/simple-election.acceptor_3_proposer_3.0.ivy: line 66: invar_26 ... PASS
        ivybench/sym_quorum/ivy/simple-election.acceptor_3_proposer_3.0.ivy: line 67: invar_5 ... PASS

    The following set of external actions must preserve the invariant:
        (internal) ext:decide
            ivybench/sym_quorum/ivy/simple-election.acceptor_3_proposer_3.0.ivy: line 63: def_didNotPromise ... PASS
            ivybench/sym_quorum/ivy/simple-election.acceptor_3_proposer_3.0.ivy: line 64: def_chosenAt ... PASS
            ivybench/sym_quorum/ivy/simple-election.acceptor_3_proposer_3.0.ivy: line 65: invar_7 ... PASS
            ivybench/sym_quorum/ivy/simple-election.acceptor_3_proposer_3.0.ivy: line 66: invar_26 ... PASS
            ivybench/sym_quorum/ivy/simple-election.acceptor_3_proposer_3.0.ivy: line 67: invar_5 ... PASS
        (internal) ext:send_1a
            ivybench/sym_quorum/ivy/simple-election.acceptor_3_proposer_3.0.ivy: line 63: def_didNotPromise ... PASS
            ivybench/sym_quorum/ivy/simple-election.acceptor_3_proposer_3.0.ivy: line 64: def_chosenAt ... PASS
            ivybench/sym_quorum/ivy/simple-election.acceptor_3_proposer_3.0.ivy: line 65: invar_7 ... PASS
            ivybench/sym_quorum/ivy/simple-election.acceptor_3_proposer_3.0.ivy: line 66: invar_26 ... PASS
            ivybench/sym_quorum/ivy/simple-election.acceptor_3_proposer_3.0.ivy: line 67: invar_5 ... PASS
        (internal) ext:send_1b
            ivybench/sym_quorum/ivy/simple-election.acceptor_3_proposer_3.0.ivy: line 63: def_didNotPromise ... PASS
            ivybench/sym_quorum/ivy/simple-election.acceptor_3_proposer_3.0.ivy: line 64: def_chosenAt ... PASS
            ivybench/sym_quorum/ivy/simple-election.acceptor_3_proposer_3.0.ivy: line 65: invar_7 ... PASS
            ivybench/sym_quorum/ivy/simple-election.acceptor_3_proposer_3.0.ivy: line 66: invar_26 ... PASS
            ivybench/sym_quorum/ivy/simple-election.acceptor_3_proposer_3.0.ivy: line 67: invar_5 ... PASS

    The following program assertions are treated as assumptions:
        in action send_1b when called from the environment:
            ivybench/sym_quorum/ivy/simple-election.acceptor_3_proposer_3.0.ivy: line 43: assumption
            ivybench/sym_quorum/ivy/simple-election.acceptor_3_proposer_3.0.ivy: line 44: assumption
        in action decide when called from the environment:
            ivybench/sym_quorum/ivy/simple-election.acceptor_3_proposer_3.0.ivy: line 49: assumption

OK
[IVY_CHECK RESULT]: PASS

[R Implies P]: True

[UNSAT CORE]: ((forall A. didNotPromise(A) <-> (forall P. ~promise(A,P))) & (forall Q,P. chosenAt(Q,P) <-> (forall A. member(A,Q) -> promise(A,P))) & (forall Q1,Q2. (exists A. (member(A,Q1) & member(A,Q2)))) & (forall ACCEPTOR0,PROPOSER0,PROPOSER1. ~promise(ACCEPTOR0,PROPOSER1) | ~promise(ACCEPTOR0,PROPOSER0) | PROPOSER0 = PROPOSER1) & (forall PROPOSER0. (exists QUORUM0. chosenAt(QUORUM0,PROPOSER0) | ~leader(PROPOSER0))))

[QRM NOTE]: Time elapsed since start: 13.532 seconds

[QRM NOTE]: Time elapsed since last: 2.483 seconds

[QRM NOTE]: Peak memory: 2183568 bytes


**********************************************************************

	[QRM]: ivybench/sym_quorum/ivy/simple-election.ivy

**********************************************************************

[QRM RESULT]: PASS

