
**********************************************************************

	[QRM]: ivybench/sym_quorum/ivy/simple-election.ivy

**********************************************************************


---------- Parsing Ivy ----------


Printing isolate this:

OK


=============================================================================================================

	[FW]: Forward Reachability on [ivybench/sym_quorum/ivy/simple-election: acceptor=3,proposer=3]

=============================================================================================================


==============================================

	Set up for forward reachability

==============================================

ivy_to_cpp target=qrm simple-election.acceptor_3_proposer_3.finite.ivy

[IVY_TO_CPP RESULT]: OK

swig -c++ -python -o simple-election.acceptor_3_proposer_3.finite_wrap.cpp ivy_exec.i

[SWIG RESULT]: OK

g++ -std=c++11 -fpic -pthread -O3 simple-election.acceptor_3_proposer_3.finite.cpp simple-election.acceptor_3_proposer_3.finite_wrap.cpp -I/home/yunrong/.pyenv/versions/3.12.0/include/python3.12 -c

[G++ RESULT]: OK

g++ -shared simple-election.acceptor_3_proposer_3.finite.o simple-election.acceptor_3_proposer_3.finite_wrap.o -o _ivy_exec.so -lm -lstdc++

[LINK RESULT]: OK

[FW NOTE]: number of state atoms: 27

[FW NOTE]: number of interpreted atoms (e.g. member,le): 9

[FW NOTE]: number of branching actions: 21

[FW NOTE]: symmetric group order: 36

[QRM NOTE]: Time elapsed since start: 6.307 seconds

[QRM NOTE]: Time elapsed since last: 6.307 seconds

[QRM NOTE]: Peak memory: 1190281 bytes


=====================================

	Symmetric Quotient DFS

=====================================

[FW NOTE]: dfs max depth: 7

[FW NOTE]: number of total reachable states:        254

[FW NOTE]: number of dfs representative states:     26

[FW NOTE]: number of dfs non-representative states: 228


====================================================================================================================

	[FW RESULT]: Forward Reachability on [ivybench/sym_quorum/ivy/simple-election: acceptor=3,proposer=3]

====================================================================================================================

sort: acceptor=['acceptor0', 'acceptor1', 'acceptor2']
sort: proposer=['proposer0', 'proposer1', 'proposer2']
sort: quorum=['quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2']
predicate: start('proposer',)
predicate: didNotPromise('acceptor',)
predicate: promise('acceptor', 'proposer')
predicate: chosenAt('quorum', 'proposer')
predicate: member('acceptor', 'quorum')
predicate: leader('proposer',)
interpreted atoms: {'member(acceptor0,quorum__acceptor0_acceptor1)': '1', 'member(acceptor0,quorum__acceptor0_acceptor2)': '1', 'member(acceptor0,quorum__acceptor1_acceptor2)': '0', 'member(acceptor1,quorum__acceptor0_acceptor1)': '1', 'member(acceptor1,quorum__acceptor0_acceptor2)': '0', 'member(acceptor1,quorum__acceptor1_acceptor2)': '1', 'member(acceptor2,quorum__acceptor0_acceptor1)': '0', 'member(acceptor2,quorum__acceptor0_acceptor2)': '1', 'member(acceptor2,quorum__acceptor1_acceptor2)': '1'}
state atoms: ['chosenAt(quorum__acceptor0_acceptor1,proposer0)', 'chosenAt(quorum__acceptor0_acceptor1,proposer1)', 'chosenAt(quorum__acceptor0_acceptor1,proposer2)', 'chosenAt(quorum__acceptor0_acceptor2,proposer0)', 'chosenAt(quorum__acceptor0_acceptor2,proposer1)', 'chosenAt(quorum__acceptor0_acceptor2,proposer2)', 'chosenAt(quorum__acceptor1_acceptor2,proposer0)', 'chosenAt(quorum__acceptor1_acceptor2,proposer1)', 'chosenAt(quorum__acceptor1_acceptor2,proposer2)', 'didNotPromise(acceptor0)', 'didNotPromise(acceptor1)', 'didNotPromise(acceptor2)', 'leader(proposer0)', 'leader(proposer1)', 'leader(proposer2)', 'promise(acceptor0,proposer0)', 'promise(acceptor0,proposer1)', 'promise(acceptor0,proposer2)', 'promise(acceptor1,proposer0)', 'promise(acceptor1,proposer1)', 'promise(acceptor1,proposer2)', 'promise(acceptor2,proposer0)', 'promise(acceptor2,proposer1)', 'promise(acceptor2,proposer2)', 'start(proposer0)', 'start(proposer1)', 'start(proposer2)']
representative states : 117440939, 117441451, 117442475, 117444523, 50597803, 201367467, 9798197163, 9800294315, 134782891, 136880043, 203464619, 17108907, 348075, 50595755, 201365419, 9798195115, 9800292267, 134780843, 136877995, 203462571, 17106859, 50594731, 201364395, 9798194091, 9800291243, 203461547


=== State Orbit 0 =====================
size : 1
repr state: 000000000111000000000000000
lex min decimal: 117440939
states:
000000000111000000000000000




=== State Orbit 1 =====================
size : 3
repr state: 000000000111000000000000100
lex min decimal: 117441451
states:
000000000111000000000000100
000000000111000000000000010
000000000111000000000000001




=== State Orbit 2 =====================
size : 3
repr state: 000000000111000000000000110
lex min decimal: 117442475
states:
000000000111000000000000110
000000000111000000000000011
000000000111000000000000101




=== State Orbit 3 =====================
size : 1
repr state: 000000000111000000000000111
lex min decimal: 117444523
states:
000000000111000000000000111




=== State Orbit 4 =====================
size : 9
repr state: 000000000011000100000000111
lex min decimal: 50597803
states:
000000000110000000000001111
000000000101000000001000111
000000000011000100000000111
000000000011000001000000111
000000000110000000000010111
000000000101000000100000111
000000000011000010000000111
000000000101000000010000111
000000000110000000000100111




=== State Orbit 5 =====================
size : 9
repr state: 100000000001000100100000111
lex min decimal: 201367467
states:
000100000010000100000100111
000000010100000000010010111
001000000001000001001000111
000010000010000010000010111
100000000001000100100000111
000000100100000000100100111
000000001100000000001001111
000001000010000001000001111
010000000001000010010000111




=== State Orbit 6 =====================
size : 3
repr state: 100100100000000100100100111
lex min decimal: 9798197163
states:
001001001000000001001001111
100100100000000100100100111
010010010000000010010010111




=== State Orbit 7 =====================
size : 3
repr state: 100100100000100100100100111
lex min decimal: 9800294315
states:
100100100000100100100100111
010010010000010010010010111
001001001000001001001001111




=== State Orbit 8 =====================
size : 18
repr state: 100000000000000100100010111
lex min decimal: 134782891
states:
000000010000000001010010111
000100000000000100010100111
000000100000000010100100111
000000001000000100001001111
001000000000000001001010111
000000010000000100010010111
010000000000000010010100111
000010000000000010100010111
000010000000000010001010111
000001000000000001100001111
000100000000000100001100111
000001000000000001010001111
000000100000000001100100111
000000001000000010001001111
100000000000000100100001111
001000000000000001001100111
010000000000000010010001111
100000000000000100100010111




=== State Orbit 9 =====================
size : 18
repr state: 100000000000100100100010111
lex min decimal: 136880043
states:
010000000000010010010001111
000000001000001010001001111
000000010000010100010010111
100000000000100100100001111
000100000000100100001100111
001000000000001001001100111
000001000000001001010001111
000010000000010010100010111
000001000000001001100001111
000000100000100010100100111
000010000000010010001010111
000000010000010001010010111
010000000000010010010100111
000000001000001100001001111
000100000000100100010100111
000000100000100001100100111
100000000000100100100010111
001000000000001001001010111




=== State Orbit 10 =====================
size : 9
repr state: 100000000001100100100000111
lex min decimal: 203464619
states:
010000000001010010010000111
000000010100010000010010111
001000000001001001001000111
000010000010010010000010111
000100000010100100000100111
000000100100100000100100111
000000001100001000001001111
000001000010001001000001111
100000000001100100100000111




=== State Orbit 11 =====================
size : 18
repr state: 000000000001000100010000111
lex min decimal: 17108907
states:
000000000001000010001000111
000000000100000000100010111
000000000100000000001010111
000000000001000100010000111
000000000010000010000100111
000000000010000001000100111
000000000010000100000001111
000000000001000001100000111
000000000100000000010100111
000000000010000010000001111
000000000001000100001000111
000000000001000001010000111
000000000010000001000010111
000000000100000000001100111
000000000010000100000010111
000000000100000000010001111
000000000100000000100001111
000000000001000010100000111




=== State Orbit 12 =====================
size : 6
repr state: 000000000000000100010001111
lex min decimal: 348075
states:
000000000000000001010100111
000000000000000100001010111
000000000000000100010001111
000000000000000010001100111
000000000000000010100001111
000000000000000001100010111




=== State Orbit 13 =====================
size : 18
repr state: 000000000011000100000000110
lex min decimal: 50595755
states:
000000000011000001000000011
000000000101000000100000101
000000000110000000000100110
000000000110000000000010110
000000000110000000000001101
000000000101000000010000110
000000000110000000000010011
000000000110000000000001011
000000000011000010000000011
000000000011000100000000110
000000000011000010000000110
000000000101000000100000110
000000000101000000001000101
000000000101000000010000011
000000000011000100000000101
000000000011000001000000101
000000000110000000000100101
000000000101000000001000011




=== State Orbit 14 =====================
size : 18
repr state: 100000000001000100100000110
lex min decimal: 201365419
states:
100000000001000100100000110
001000000001000001001000011
000100000010000100000100101
000010000010000010000010011
000000010100000000010010011
000000001100000000001001011
000000001100000000001001101
000010000010000010000010110
010000000001000010010000110
000000100100000000100100101
001000000001000001001000101
000000010100000000010010110
000100000010000100000100110
000000100100000000100100110
000001000010000001000001101
010000000001000010010000011
000001000010000001000001011
100000000001000100100000101




=== State Orbit 15 =====================
size : 6
repr state: 100100100000000100100100110
lex min decimal: 9798195115
states:
001001001000000001001001101
100100100000000100100100110
100100100000000100100100101
001001001000000001001001011
010010010000000010010010110
010010010000000010010010011




=== State Orbit 16 =====================
size : 6
repr state: 100100100000100100100100110
lex min decimal: 9800292267
states:
100100100000100100100100101
010010010000010010010010011
001001001000001001001001101
100100100000100100100100110
010010010000010010010010110
001001001000001001001001011




=== State Orbit 17 =====================
size : 18
repr state: 100000000000000100100010110
lex min decimal: 134780843
states:
010000000000000010010001011
000001000000000001010001011
000010000000000010100010110
001000000000000001001100101
000000100000000010100100110
000000010000000001010010011
000100000000000100010100110
000010000000000010001010011
000000001000000100001001101
000000010000000100010010110
100000000000000100100010110
001000000000000001001010011
000001000000000001100001101
000000001000000010001001011
010000000000000010010100110
100000000000000100100001101
000100000000000100001100101
000000100000000001100100101




=== State Orbit 18 =====================
size : 18
repr state: 100000000000100100100010110
lex min decimal: 136877995
states:
000010000000010010100010110
000000001000001100001001101
000001000000001001100001101
000000010000010100010010110
000000100000100010100100110
000000010000010001010010011
010000000000010010010001011
000000001000001010001001011
000001000000001001010001011
100000000000100100100010110
001000000000001001001010011
000100000000100100001100101
000010000000010010001010011
100000000000100100100001101
010000000000010010010100110
001000000000001001001100101
000100000000100100010100110
000000100000100001100100101




=== State Orbit 19 =====================
size : 18
repr state: 100000000001100100100000110
lex min decimal: 203462571
states:
100000000001100100100000101
000000010100010000010010110
000000010100010000010010011
010000000001010010010000110
010000000001010010010000011
001000000001001001001000101
000010000010010010000010110
000000001100001000001001011
100000000001100100100000110
000010000010010010000010011
001000000001001001001000011
000000100100100000100100110
000000100100100000100100101
000000001100001000001001101
000001000010001001000001101
000100000010100100000100110
000001000010001001000001011
000100000010100100000100101




=== State Orbit 20 =====================
size : 18
repr state: 000000000001000100010000110
lex min decimal: 17106859
states:
000000000010000010000001011
000000000100000000100010110
000000000001000010001000011
000000000100000000010001011
000000000010000100000010110
000000000010000010000100110
000000000100000000001010011
000000000001000001100000101
000000000001000100010000110
000000000100000000100001101
000000000010000100000001101
000000000100000000001100101
000000000100000000010100110
000000000001000001010000011
000000000010000001000010011
000000000010000001000100101
000000000001000010100000110
000000000001000100001000101




=== State Orbit 21 =====================
size : 9
repr state: 000000000011000100000000100
lex min decimal: 50594731
states:
000000000011000001000000001
000000000011000100000000100
000000000110000000000001001
000000000011000010000000010
000000000101000000001000001
000000000101000000100000100
000000000110000000000100100
000000000101000000010000010
000000000110000000000010010




=== State Orbit 22 =====================
size : 9
repr state: 100000000001000100100000100
lex min decimal: 201364395
states:
000010000010000010000010010
001000000001000001001000001
000000100100000000100100100
010000000001000010010000010
000000010100000000010010010
000001000010000001000001001
100000000001000100100000100
000100000010000100000100100
000000001100000000001001001




=== State Orbit 23 =====================
size : 3
repr state: 100100100000000100100100100
lex min decimal: 9798194091
states:
001001001000000001001001001
100100100000000100100100100
010010010000000010010010010




=== State Orbit 24 =====================
size : 3
repr state: 100100100000100100100100100
lex min decimal: 9800291243
states:
001001001000001001001001001
100100100000100100100100100
010010010000010010010010010




=== State Orbit 25 =====================
size : 9
repr state: 100000000001100100100000100
lex min decimal: 203461547
states:
000000001100001000001001001
001000000001001001001000001
000000010100010000010010010
000100000010100100000100100
000000100100100000100100100
000010000010010010000010010
000001000010001001000001001
100000000001100100100000100
010000000001010010010000010



[QRM NOTE]: Time elapsed since start: 6.697 seconds

[QRM NOTE]: Time elapsed since last: 0.389 seconds

[QRM NOTE]: Peak memory: 1296806 bytes


======================================

	Reduce Equivalent Atoms

======================================

[FW NOTE]: equivalent atoms

[FW NOTE]: complement atoms

[FW NOTE]: remove_atom_ids: set()

[QRM NOTE]: Time elapsed since start: 6.707 seconds

[QRM NOTE]: Time elapsed since last: 0.010 seconds

[QRM NOTE]: Peak memory: 328828 bytes


====================================================================================================================

	[PRIME]: Prime Orbit Generatation on [ivybench/sym_quorum/ivy/simple-election: acceptor=3,proposer=3]

====================================================================================================================


===============================================================================================================

	[PRIME RESULT]: Prime Orbits on [ivybench/sym_quorum/ivy/simple-election: acceptor=3,proposer=3]

===============================================================================================================


=== Prime Orbit 0 =====================
size : 9
num_suborbits: 1
0 (*) : -----------1-----------1---
0     : ['didNotPromise(acceptor2)', 'promise(acceptor2,proposer2)']
1     : -----------1----------1----
1     : ['didNotPromise(acceptor2)', 'promise(acceptor2,proposer1)']
2     : -----------1---------1-----
2     : ['didNotPromise(acceptor2)', 'promise(acceptor2,proposer0)']
3     : ----------1---------1------
3     : ['didNotPromise(acceptor1)', 'promise(acceptor1,proposer2)']
4     : ----------1--------1-------
4     : ['didNotPromise(acceptor1)', 'promise(acceptor1,proposer1)']
5     : ----------1-------1--------
5     : ['didNotPromise(acceptor1)', 'promise(acceptor1,proposer0)']
6     : ---------1-------1---------
6     : ['didNotPromise(acceptor0)', 'promise(acceptor0,proposer2)']
7     : ---------1------1----------
7     : ['didNotPromise(acceptor0)', 'promise(acceptor0,proposer1)']
8     : ---------1-----1-----------
8     : ['didNotPromise(acceptor0)', 'promise(acceptor0,proposer0)']
num_forall :   0
num_exists :   0
num_literals : 0
quantified form : None
qcost : 0


=== Prime Orbit 1 =====================
size : 18
num_suborbits: 1
9 (*) : ---1-------1---------------
9     : ['chosenAt(quorum__acceptor0_acceptor2,proposer0)', 'didNotPromise(acceptor2)']
10     : ----1------1---------------
10     : ['chosenAt(quorum__acceptor0_acceptor2,proposer1)', 'didNotPromise(acceptor2)']
11     : -----1-----1---------------
11     : ['chosenAt(quorum__acceptor0_acceptor2,proposer2)', 'didNotPromise(acceptor2)']
12     : 1---------1----------------
12     : ['chosenAt(quorum__acceptor0_acceptor1,proposer0)', 'didNotPromise(acceptor1)']
13     : -1--------1----------------
13     : ['chosenAt(quorum__acceptor0_acceptor1,proposer1)', 'didNotPromise(acceptor1)']
14     : --1-------1----------------
14     : ['chosenAt(quorum__acceptor0_acceptor1,proposer2)', 'didNotPromise(acceptor1)']
15     : ------1----1---------------
15     : ['chosenAt(quorum__acceptor1_acceptor2,proposer0)', 'didNotPromise(acceptor2)']
16     : -------1---1---------------
16     : ['chosenAt(quorum__acceptor1_acceptor2,proposer1)', 'didNotPromise(acceptor2)']
17     : --------1--1---------------
17     : ['chosenAt(quorum__acceptor1_acceptor2,proposer2)', 'didNotPromise(acceptor2)']
18     : 1--------1-----------------
18     : ['chosenAt(quorum__acceptor0_acceptor1,proposer0)', 'didNotPromise(acceptor0)']
19     : -1-------1-----------------
19     : ['chosenAt(quorum__acceptor0_acceptor1,proposer1)', 'didNotPromise(acceptor0)']
20     : --1------1-----------------
20     : ['chosenAt(quorum__acceptor0_acceptor1,proposer2)', 'didNotPromise(acceptor0)']
21     : ------1---1----------------
21     : ['chosenAt(quorum__acceptor1_acceptor2,proposer0)', 'didNotPromise(acceptor1)']
22     : -------1--1----------------
22     : ['chosenAt(quorum__acceptor1_acceptor2,proposer1)', 'didNotPromise(acceptor1)']
23     : --------1-1----------------
23     : ['chosenAt(quorum__acceptor1_acceptor2,proposer2)', 'didNotPromise(acceptor1)']
24     : ---1-----1-----------------
24     : ['chosenAt(quorum__acceptor0_acceptor2,proposer0)', 'didNotPromise(acceptor0)']
25     : ----1----1-----------------
25     : ['chosenAt(quorum__acceptor0_acceptor2,proposer1)', 'didNotPromise(acceptor0)']
26     : -----1---1-----------------
26     : ['chosenAt(quorum__acceptor0_acceptor2,proposer2)', 'didNotPromise(acceptor0)']
num_forall :   0
num_exists :   0
num_literals : 0
quantified form : None
qcost : 0


=== Prime Orbit 2 =====================
size : 27
num_suborbits: 2
27 (*) : -11------------------------
27     : ['chosenAt(quorum__acceptor0_acceptor1,proposer1)', 'chosenAt(quorum__acceptor0_acceptor1,proposer2)']
28     : 1-1------------------------
28     : ['chosenAt(quorum__acceptor0_acceptor1,proposer0)', 'chosenAt(quorum__acceptor0_acceptor1,proposer2)']
29     : 11-------------------------
29     : ['chosenAt(quorum__acceptor0_acceptor1,proposer0)', 'chosenAt(quorum__acceptor0_acceptor1,proposer1)']
30     : ----11---------------------
30     : ['chosenAt(quorum__acceptor0_acceptor2,proposer1)', 'chosenAt(quorum__acceptor0_acceptor2,proposer2)']
31     : ---1-1---------------------
31     : ['chosenAt(quorum__acceptor0_acceptor2,proposer0)', 'chosenAt(quorum__acceptor0_acceptor2,proposer2)']
32     : ---11----------------------
32     : ['chosenAt(quorum__acceptor0_acceptor2,proposer0)', 'chosenAt(quorum__acceptor0_acceptor2,proposer1)']
33     : -------11------------------
33     : ['chosenAt(quorum__acceptor1_acceptor2,proposer1)', 'chosenAt(quorum__acceptor1_acceptor2,proposer2)']
34     : ------1-1------------------
34     : ['chosenAt(quorum__acceptor1_acceptor2,proposer0)', 'chosenAt(quorum__acceptor1_acceptor2,proposer2)']
35     : ------11-------------------
35     : ['chosenAt(quorum__acceptor1_acceptor2,proposer0)', 'chosenAt(quorum__acceptor1_acceptor2,proposer1)']
99 (*) : --11-----------------------
99     : ['chosenAt(quorum__acceptor0_acceptor1,proposer2)', 'chosenAt(quorum__acceptor0_acceptor2,proposer0)']
100     : -1-1-----------------------
100     : ['chosenAt(quorum__acceptor0_acceptor1,proposer1)', 'chosenAt(quorum__acceptor0_acceptor2,proposer0)']
101     : --1-1----------------------
101     : ['chosenAt(quorum__acceptor0_acceptor1,proposer2)', 'chosenAt(quorum__acceptor0_acceptor2,proposer1)']
102     : 1---1----------------------
102     : ['chosenAt(quorum__acceptor0_acceptor1,proposer0)', 'chosenAt(quorum__acceptor0_acceptor2,proposer1)']
103     : -1---1---------------------
103     : ['chosenAt(quorum__acceptor0_acceptor1,proposer1)', 'chosenAt(quorum__acceptor0_acceptor2,proposer2)']
104     : 1----1---------------------
104     : ['chosenAt(quorum__acceptor0_acceptor1,proposer0)', 'chosenAt(quorum__acceptor0_acceptor2,proposer2)']
105     : --1---1--------------------
105     : ['chosenAt(quorum__acceptor0_acceptor1,proposer2)', 'chosenAt(quorum__acceptor1_acceptor2,proposer0)']
106     : -1----1--------------------
106     : ['chosenAt(quorum__acceptor0_acceptor1,proposer1)', 'chosenAt(quorum__acceptor1_acceptor2,proposer0)']
107     : --1----1-------------------
107     : ['chosenAt(quorum__acceptor0_acceptor1,proposer2)', 'chosenAt(quorum__acceptor1_acceptor2,proposer1)']
108     : 1------1-------------------
108     : ['chosenAt(quorum__acceptor0_acceptor1,proposer0)', 'chosenAt(quorum__acceptor1_acceptor2,proposer1)']
109     : -1------1------------------
109     : ['chosenAt(quorum__acceptor0_acceptor1,proposer1)', 'chosenAt(quorum__acceptor1_acceptor2,proposer2)']
110     : 1-------1------------------
110     : ['chosenAt(quorum__acceptor0_acceptor1,proposer0)', 'chosenAt(quorum__acceptor1_acceptor2,proposer2)']
111     : -----11--------------------
111     : ['chosenAt(quorum__acceptor0_acceptor2,proposer2)', 'chosenAt(quorum__acceptor1_acceptor2,proposer0)']
112     : ----1-1--------------------
112     : ['chosenAt(quorum__acceptor0_acceptor2,proposer1)', 'chosenAt(quorum__acceptor1_acceptor2,proposer0)']
113     : -----1-1-------------------
113     : ['chosenAt(quorum__acceptor0_acceptor2,proposer2)', 'chosenAt(quorum__acceptor1_acceptor2,proposer1)']
114     : ---1---1-------------------
114     : ['chosenAt(quorum__acceptor0_acceptor2,proposer0)', 'chosenAt(quorum__acceptor1_acceptor2,proposer1)']
115     : ----1---1------------------
115     : ['chosenAt(quorum__acceptor0_acceptor2,proposer1)', 'chosenAt(quorum__acceptor1_acceptor2,proposer2)']
116     : ---1----1------------------
116     : ['chosenAt(quorum__acceptor0_acceptor2,proposer0)', 'chosenAt(quorum__acceptor1_acceptor2,proposer2)']
num_forall :   0
num_exists :   0
num_literals : 0
quantified form : None
qcost : 0


=== Prime Orbit 3 =====================
size : 18
num_suborbits: 1
36 (*) : --1-----------------0------
36     : ['chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~promise(acceptor1,proposer2)']
37     : -1-----------------0-------
37     : ['chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~promise(acceptor1,proposer1)']
38     : 1-----------------0--------
38     : ['chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~promise(acceptor1,proposer0)']
39     : -----1-----------------0---
39     : ['chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~promise(acceptor2,proposer2)']
40     : ----1-----------------0----
40     : ['chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~promise(acceptor2,proposer1)']
41     : ---1-----------------0-----
41     : ['chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~promise(acceptor2,proposer0)']
42     : --1--------------0---------
42     : ['chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~promise(acceptor0,proposer2)']
43     : -1--------------0----------
43     : ['chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~promise(acceptor0,proposer1)']
44     : 1--------------0-----------
44     : ['chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~promise(acceptor0,proposer0)']
45     : --------1--------------0---
45     : ['chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~promise(acceptor2,proposer2)']
46     : -------1--------------0----
46     : ['chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~promise(acceptor2,proposer1)']
47     : ------1--------------0-----
47     : ['chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~promise(acceptor2,proposer0)']
48     : -----1-----------0---------
48     : ['chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~promise(acceptor0,proposer2)']
49     : ----1-----------0----------
49     : ['chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~promise(acceptor0,proposer1)']
50     : ---1-----------0-----------
50     : ['chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~promise(acceptor0,proposer0)']
51     : --------1-----------0------
51     : ['chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~promise(acceptor1,proposer2)']
52     : -------1-----------0-------
52     : ['chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~promise(acceptor1,proposer1)']
53     : ------1-----------0--------
53     : ['chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~promise(acceptor1,proposer0)']
num_forall :   0
num_exists :   0
num_literals : 0
quantified form : None
qcost : 0


=== Prime Orbit 4 =====================
size : 36
num_suborbits: 1
54 (*) : --1----------------1-------
54     : ['chosenAt(quorum__acceptor0_acceptor1,proposer2)', 'promise(acceptor1,proposer1)']
55     : -1------------------1------
55     : ['chosenAt(quorum__acceptor0_acceptor1,proposer1)', 'promise(acceptor1,proposer2)']
56     : --1---------------1--------
56     : ['chosenAt(quorum__acceptor0_acceptor1,proposer2)', 'promise(acceptor1,proposer0)']
57     : 1-------------------1------
57     : ['chosenAt(quorum__acceptor0_acceptor1,proposer0)', 'promise(acceptor1,proposer2)']
58     : -1----------------1--------
58     : ['chosenAt(quorum__acceptor0_acceptor1,proposer1)', 'promise(acceptor1,proposer0)']
59     : 1------------------1-------
59     : ['chosenAt(quorum__acceptor0_acceptor1,proposer0)', 'promise(acceptor1,proposer1)']
60     : -----1----------------1----
60     : ['chosenAt(quorum__acceptor0_acceptor2,proposer2)', 'promise(acceptor2,proposer1)']
61     : ----1------------------1---
61     : ['chosenAt(quorum__acceptor0_acceptor2,proposer1)', 'promise(acceptor2,proposer2)']
62     : -----1---------------1-----
62     : ['chosenAt(quorum__acceptor0_acceptor2,proposer2)', 'promise(acceptor2,proposer0)']
63     : ---1-------------------1---
63     : ['chosenAt(quorum__acceptor0_acceptor2,proposer0)', 'promise(acceptor2,proposer2)']
64     : ----1----------------1-----
64     : ['chosenAt(quorum__acceptor0_acceptor2,proposer1)', 'promise(acceptor2,proposer0)']
65     : ---1------------------1----
65     : ['chosenAt(quorum__acceptor0_acceptor2,proposer0)', 'promise(acceptor2,proposer1)']
66     : --1-------------1----------
66     : ['chosenAt(quorum__acceptor0_acceptor1,proposer2)', 'promise(acceptor0,proposer1)']
67     : -1---------------1---------
67     : ['chosenAt(quorum__acceptor0_acceptor1,proposer1)', 'promise(acceptor0,proposer2)']
68     : --1------------1-----------
68     : ['chosenAt(quorum__acceptor0_acceptor1,proposer2)', 'promise(acceptor0,proposer0)']
69     : 1----------------1---------
69     : ['chosenAt(quorum__acceptor0_acceptor1,proposer0)', 'promise(acceptor0,proposer2)']
70     : -1-------------1-----------
70     : ['chosenAt(quorum__acceptor0_acceptor1,proposer1)', 'promise(acceptor0,proposer0)']
71     : 1---------------1----------
71     : ['chosenAt(quorum__acceptor0_acceptor1,proposer0)', 'promise(acceptor0,proposer1)']
72     : --------1-------------1----
72     : ['chosenAt(quorum__acceptor1_acceptor2,proposer2)', 'promise(acceptor2,proposer1)']
73     : -------1---------------1---
73     : ['chosenAt(quorum__acceptor1_acceptor2,proposer1)', 'promise(acceptor2,proposer2)']
74     : --------1------------1-----
74     : ['chosenAt(quorum__acceptor1_acceptor2,proposer2)', 'promise(acceptor2,proposer0)']
75     : ------1----------------1---
75     : ['chosenAt(quorum__acceptor1_acceptor2,proposer0)', 'promise(acceptor2,proposer2)']
76     : -------1-------------1-----
76     : ['chosenAt(quorum__acceptor1_acceptor2,proposer1)', 'promise(acceptor2,proposer0)']
77     : ------1---------------1----
77     : ['chosenAt(quorum__acceptor1_acceptor2,proposer0)', 'promise(acceptor2,proposer1)']
78     : -----1----------1----------
78     : ['chosenAt(quorum__acceptor0_acceptor2,proposer2)', 'promise(acceptor0,proposer1)']
79     : ----1------------1---------
79     : ['chosenAt(quorum__acceptor0_acceptor2,proposer1)', 'promise(acceptor0,proposer2)']
80     : -----1---------1-----------
80     : ['chosenAt(quorum__acceptor0_acceptor2,proposer2)', 'promise(acceptor0,proposer0)']
81     : ---1-------------1---------
81     : ['chosenAt(quorum__acceptor0_acceptor2,proposer0)', 'promise(acceptor0,proposer2)']
82     : ----1----------1-----------
82     : ['chosenAt(quorum__acceptor0_acceptor2,proposer1)', 'promise(acceptor0,proposer0)']
83     : ---1------------1----------
83     : ['chosenAt(quorum__acceptor0_acceptor2,proposer0)', 'promise(acceptor0,proposer1)']
84     : --------1----------1-------
84     : ['chosenAt(quorum__acceptor1_acceptor2,proposer2)', 'promise(acceptor1,proposer1)']
85     : -------1------------1------
85     : ['chosenAt(quorum__acceptor1_acceptor2,proposer1)', 'promise(acceptor1,proposer2)']
86     : --------1---------1--------
86     : ['chosenAt(quorum__acceptor1_acceptor2,proposer2)', 'promise(acceptor1,proposer0)']
87     : ------1-------------1------
87     : ['chosenAt(quorum__acceptor1_acceptor2,proposer0)', 'promise(acceptor1,proposer2)']
88     : -------1----------1--------
88     : ['chosenAt(quorum__acceptor1_acceptor2,proposer1)', 'promise(acceptor1,proposer0)']
89     : ------1------------1-------
89     : ['chosenAt(quorum__acceptor1_acceptor2,proposer0)', 'promise(acceptor1,proposer1)']
num_forall :   0
num_exists :   0
num_literals : 0
quantified form : None
qcost : 0


=== Prime Orbit 5 =====================
size : 9
num_suborbits: 1
90 (*) : --1-----------------------0
90     : ['chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~start(proposer2)']
91     : -1-----------------------0-
91     : ['chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~start(proposer1)']
92     : 1-----------------------0--
92     : ['chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~start(proposer0)']
93     : -----1--------------------0
93     : ['chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~start(proposer2)']
94     : ----1--------------------0-
94     : ['chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~start(proposer1)']
95     : ---1--------------------0--
95     : ['chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~start(proposer0)']
96     : --------1-----------------0
96     : ['chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~start(proposer2)']
97     : -------1-----------------0-
97     : ['chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~start(proposer1)']
98     : ------1-----------------0--
98     : ['chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~start(proposer0)']
num_forall :   0
num_exists :   0
num_literals : 0
quantified form : None
qcost : 0


=== Prime Orbit 6 =====================
size : 18
num_suborbits: 1
117 (*) : --1---------1--------------
117     : ['chosenAt(quorum__acceptor0_acceptor1,proposer2)', 'leader(proposer0)']
118     : -1----------1--------------
118     : ['chosenAt(quorum__acceptor0_acceptor1,proposer1)', 'leader(proposer0)']
119     : --1----------1-------------
119     : ['chosenAt(quorum__acceptor0_acceptor1,proposer2)', 'leader(proposer1)']
120     : 1------------1-------------
120     : ['chosenAt(quorum__acceptor0_acceptor1,proposer0)', 'leader(proposer1)']
121     : -1------------1------------
121     : ['chosenAt(quorum__acceptor0_acceptor1,proposer1)', 'leader(proposer2)']
122     : 1-------------1------------
122     : ['chosenAt(quorum__acceptor0_acceptor1,proposer0)', 'leader(proposer2)']
123     : -----1------1--------------
123     : ['chosenAt(quorum__acceptor0_acceptor2,proposer2)', 'leader(proposer0)']
124     : ----1-------1--------------
124     : ['chosenAt(quorum__acceptor0_acceptor2,proposer1)', 'leader(proposer0)']
125     : -----1-------1-------------
125     : ['chosenAt(quorum__acceptor0_acceptor2,proposer2)', 'leader(proposer1)']
126     : ---1---------1-------------
126     : ['chosenAt(quorum__acceptor0_acceptor2,proposer0)', 'leader(proposer1)']
127     : ----1---------1------------
127     : ['chosenAt(quorum__acceptor0_acceptor2,proposer1)', 'leader(proposer2)']
128     : ---1----------1------------
128     : ['chosenAt(quorum__acceptor0_acceptor2,proposer0)', 'leader(proposer2)']
129     : --------1---1--------------
129     : ['chosenAt(quorum__acceptor1_acceptor2,proposer2)', 'leader(proposer0)']
130     : -------1----1--------------
130     : ['chosenAt(quorum__acceptor1_acceptor2,proposer1)', 'leader(proposer0)']
131     : --------1----1-------------
131     : ['chosenAt(quorum__acceptor1_acceptor2,proposer2)', 'leader(proposer1)']
132     : ------1------1-------------
132     : ['chosenAt(quorum__acceptor1_acceptor2,proposer0)', 'leader(proposer1)']
133     : -------1------1------------
133     : ['chosenAt(quorum__acceptor1_acceptor2,proposer1)', 'leader(proposer2)']
134     : ------1-------1------------
134     : ['chosenAt(quorum__acceptor1_acceptor2,proposer0)', 'leader(proposer2)']
num_forall :   0
num_exists :   0
num_literals : 0
quantified form : None
qcost : 0


=== Prime Orbit 7 =====================
size : 9
num_suborbits: 1
135 (*) : ----------------------11---
135     : ['promise(acceptor2,proposer1)', 'promise(acceptor2,proposer2)']
136     : ---------------------1-1---
136     : ['promise(acceptor2,proposer0)', 'promise(acceptor2,proposer2)']
137     : ---------------------11----
137     : ['promise(acceptor2,proposer0)', 'promise(acceptor2,proposer1)']
138     : -------------------11------
138     : ['promise(acceptor1,proposer1)', 'promise(acceptor1,proposer2)']
139     : ------------------1-1------
139     : ['promise(acceptor1,proposer0)', 'promise(acceptor1,proposer2)']
140     : ------------------11-------
140     : ['promise(acceptor1,proposer0)', 'promise(acceptor1,proposer1)']
141     : ----------------11---------
141     : ['promise(acceptor0,proposer1)', 'promise(acceptor0,proposer2)']
142     : ---------------1-1---------
142     : ['promise(acceptor0,proposer0)', 'promise(acceptor0,proposer2)']
143     : ---------------11----------
143     : ['promise(acceptor0,proposer0)', 'promise(acceptor0,proposer1)']
num_forall :   0
num_exists :   0
num_literals : 0
quantified form : None
qcost : 0


=== Prime Orbit 8 =====================
size : 3
num_suborbits: 1
144 (*) : -------------11------------
144     : ['leader(proposer1)', 'leader(proposer2)']
145     : ------------1-1------------
145     : ['leader(proposer0)', 'leader(proposer2)']
146     : ------------11-------------
146     : ['leader(proposer0)', 'leader(proposer1)']
num_forall :   0
num_exists :   0
num_literals : 0
quantified form : None
qcost : 0


=== Prime Orbit 9 =====================
size : 9
num_suborbits: 1
147 (*) : -----------------1--------0
147     : ['promise(acceptor0,proposer2)', '~start(proposer2)']
148     : ----------------1--------0-
148     : ['promise(acceptor0,proposer1)', '~start(proposer1)']
149     : ---------------1--------0--
149     : ['promise(acceptor0,proposer0)', '~start(proposer0)']
150     : --------------------1-----0
150     : ['promise(acceptor1,proposer2)', '~start(proposer2)']
151     : -------------------1-----0-
151     : ['promise(acceptor1,proposer1)', '~start(proposer1)']
152     : ------------------1-----0--
152     : ['promise(acceptor1,proposer0)', '~start(proposer0)']
153     : -----------------------1--0
153     : ['promise(acceptor2,proposer2)', '~start(proposer2)']
154     : ----------------------1--0-
154     : ['promise(acceptor2,proposer1)', '~start(proposer1)']
155     : ---------------------1--0--
155     : ['promise(acceptor2,proposer0)', '~start(proposer0)']
num_forall :   0
num_exists :   0
num_literals : 0
quantified form : None
qcost : 0


=== Prime Orbit 10 =====================
size : 3
num_suborbits: 1
156 (*) : --------------1-----------0
156     : ['leader(proposer2)', '~start(proposer2)']
157     : -------------1-----------0-
157     : ['leader(proposer1)', '~start(proposer1)']
158     : ------------1-----------0--
158     : ['leader(proposer0)', '~start(proposer0)']
num_forall :   0
num_exists :   0
num_literals : 0
quantified form : None
qcost : 0


=== Prime Orbit 11 =====================
size : 18
num_suborbits: 1
159 (*) : -0--1--------------1-------
159     : ['chosenAt(quorum__acceptor0_acceptor2,proposer1)', 'promise(acceptor1,proposer1)', '~chosenAt(quorum__acceptor0_acceptor1,proposer1)']
160     : --0--1--------------1------
160     : ['chosenAt(quorum__acceptor0_acceptor2,proposer2)', 'promise(acceptor1,proposer2)', '~chosenAt(quorum__acceptor0_acceptor1,proposer2)']
161     : 0--1--------------1--------
161     : ['chosenAt(quorum__acceptor0_acceptor2,proposer0)', 'promise(acceptor1,proposer0)', '~chosenAt(quorum__acceptor0_acceptor1,proposer0)']
162     : -1--0-----------------1----
162     : ['chosenAt(quorum__acceptor0_acceptor1,proposer1)', 'promise(acceptor2,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)']
163     : --1--0-----------------1---
163     : ['chosenAt(quorum__acceptor0_acceptor1,proposer2)', 'promise(acceptor2,proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)']
164     : 1--0-----------------1-----
164     : ['chosenAt(quorum__acceptor0_acceptor1,proposer0)', 'promise(acceptor2,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)']
165     : -0-----1--------1----------
165     : ['chosenAt(quorum__acceptor1_acceptor2,proposer1)', 'promise(acceptor0,proposer1)', '~chosenAt(quorum__acceptor0_acceptor1,proposer1)']
166     : --0-----1--------1---------
166     : ['chosenAt(quorum__acceptor1_acceptor2,proposer2)', 'promise(acceptor0,proposer2)', '~chosenAt(quorum__acceptor0_acceptor1,proposer2)']
167     : 0-----1--------1-----------
167     : ['chosenAt(quorum__acceptor1_acceptor2,proposer0)', 'promise(acceptor0,proposer0)', '~chosenAt(quorum__acceptor0_acceptor1,proposer0)']
168     : -1-----0--------------1----
168     : ['chosenAt(quorum__acceptor0_acceptor1,proposer1)', 'promise(acceptor2,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)']
169     : --1-----0--------------1---
169     : ['chosenAt(quorum__acceptor0_acceptor1,proposer2)', 'promise(acceptor2,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)']
170     : 1-----0--------------1-----
170     : ['chosenAt(quorum__acceptor0_acceptor1,proposer0)', 'promise(acceptor2,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)']
171     : ----0--1--------1----------
171     : ['chosenAt(quorum__acceptor1_acceptor2,proposer1)', 'promise(acceptor0,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)']
172     : -----0--1--------1---------
172     : ['chosenAt(quorum__acceptor1_acceptor2,proposer2)', 'promise(acceptor0,proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)']
173     : ---0--1--------1-----------
173     : ['chosenAt(quorum__acceptor1_acceptor2,proposer0)', 'promise(acceptor0,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)']
174     : ----1--0-----------1-------
174     : ['chosenAt(quorum__acceptor0_acceptor2,proposer1)', 'promise(acceptor1,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)']
175     : -----1--0-----------1------
175     : ['chosenAt(quorum__acceptor0_acceptor2,proposer2)', 'promise(acceptor1,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)']
176     : ---1--0-----------1--------
176     : ['chosenAt(quorum__acceptor0_acceptor2,proposer0)', 'promise(acceptor1,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)']
num_forall :   0
num_exists :   0
num_literals : 0
quantified form : None
qcost : 0


=== Prime Orbit 12 =====================
size : 9
num_suborbits: 1
177 (*) : -0--1--1-------------------
177     : ['chosenAt(quorum__acceptor0_acceptor2,proposer1)', 'chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~chosenAt(quorum__acceptor0_acceptor1,proposer1)']
178     : --0--1--1------------------
178     : ['chosenAt(quorum__acceptor0_acceptor2,proposer2)', 'chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~chosenAt(quorum__acceptor0_acceptor1,proposer2)']
179     : 0--1--1--------------------
179     : ['chosenAt(quorum__acceptor0_acceptor2,proposer0)', 'chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~chosenAt(quorum__acceptor0_acceptor1,proposer0)']
180     : -1--0--1-------------------
180     : ['chosenAt(quorum__acceptor0_acceptor1,proposer1)', 'chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)']
181     : --1--0--1------------------
181     : ['chosenAt(quorum__acceptor0_acceptor1,proposer2)', 'chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)']
182     : 1--0--1--------------------
182     : ['chosenAt(quorum__acceptor0_acceptor1,proposer0)', 'chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)']
183     : -1--1--0-------------------
183     : ['chosenAt(quorum__acceptor0_acceptor1,proposer1)', 'chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)']
184     : --1--1--0------------------
184     : ['chosenAt(quorum__acceptor0_acceptor1,proposer2)', 'chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)']
185     : 1--1--0--------------------
185     : ['chosenAt(quorum__acceptor0_acceptor1,proposer0)', 'chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)']
num_forall :   0
num_exists :   0
num_literals : 0
quantified form : None
qcost : 0


=== Prime Orbit 13 =====================
size : 9
num_suborbits: 1
186 (*) : ----0--------1-----0-------
186     : ['leader(proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~promise(acceptor1,proposer1)']
187     : -----0--------1-----0------
187     : ['leader(proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~promise(acceptor1,proposer2)']
188     : ---0--------1-----0--------
188     : ['leader(proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~promise(acceptor1,proposer0)']
189     : -0-----------1--------0----
189     : ['leader(proposer1)', '~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~promise(acceptor2,proposer1)']
190     : --0-----------1--------0---
190     : ['leader(proposer2)', '~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~promise(acceptor2,proposer2)']
191     : 0-----------1--------0-----
191     : ['leader(proposer0)', '~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~promise(acceptor2,proposer0)']
192     : -------0-----1--0----------
192     : ['leader(proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~promise(acceptor0,proposer1)']
193     : --------0-----1--0---------
193     : ['leader(proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~promise(acceptor0,proposer2)']
194     : ------0-----1--0-----------
194     : ['leader(proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~promise(acceptor0,proposer0)']
num_forall :   0
num_exists :   0
num_literals : 0
quantified form : None
qcost : 0


=== Prime Orbit 14 =====================
size : 18
num_suborbits: 1
195 (*) : -----------1-1-----0-------
195     : ['didNotPromise(acceptor2)', 'leader(proposer1)', '~promise(acceptor1,proposer1)']
196     : -----------1--1-----0------
196     : ['didNotPromise(acceptor2)', 'leader(proposer2)', '~promise(acceptor1,proposer2)']
197     : -----------11-----0--------
197     : ['didNotPromise(acceptor2)', 'leader(proposer0)', '~promise(acceptor1,proposer0)']
198     : ----------1--1--------0----
198     : ['didNotPromise(acceptor1)', 'leader(proposer1)', '~promise(acceptor2,proposer1)']
199     : ----------1---1--------0---
199     : ['didNotPromise(acceptor1)', 'leader(proposer2)', '~promise(acceptor2,proposer2)']
200     : ----------1-1--------0-----
200     : ['didNotPromise(acceptor1)', 'leader(proposer0)', '~promise(acceptor2,proposer0)']
201     : -----------1-1--0----------
201     : ['didNotPromise(acceptor2)', 'leader(proposer1)', '~promise(acceptor0,proposer1)']
202     : -----------1--1--0---------
202     : ['didNotPromise(acceptor2)', 'leader(proposer2)', '~promise(acceptor0,proposer2)']
203     : -----------11--0-----------
203     : ['didNotPromise(acceptor2)', 'leader(proposer0)', '~promise(acceptor0,proposer0)']
204     : ---------1---1--------0----
204     : ['didNotPromise(acceptor0)', 'leader(proposer1)', '~promise(acceptor2,proposer1)']
205     : ---------1----1--------0---
205     : ['didNotPromise(acceptor0)', 'leader(proposer2)', '~promise(acceptor2,proposer2)']
206     : ---------1--1--------0-----
206     : ['didNotPromise(acceptor0)', 'leader(proposer0)', '~promise(acceptor2,proposer0)']
207     : ----------1--1--0----------
207     : ['didNotPromise(acceptor1)', 'leader(proposer1)', '~promise(acceptor0,proposer1)']
208     : ----------1---1--0---------
208     : ['didNotPromise(acceptor1)', 'leader(proposer2)', '~promise(acceptor0,proposer2)']
209     : ----------1-1--0-----------
209     : ['didNotPromise(acceptor1)', 'leader(proposer0)', '~promise(acceptor0,proposer0)']
210     : ---------1---1-----0-------
210     : ['didNotPromise(acceptor0)', 'leader(proposer1)', '~promise(acceptor1,proposer1)']
211     : ---------1----1-----0------
211     : ['didNotPromise(acceptor0)', 'leader(proposer2)', '~promise(acceptor1,proposer2)']
212     : ---------1--1-----0--------
212     : ['didNotPromise(acceptor0)', 'leader(proposer0)', '~promise(acceptor1,proposer0)']
num_forall :   0
num_exists :   0
num_literals : 0
quantified form : None
qcost : 0


=== Prime Orbit 15 =====================
size : 9
num_suborbits: 1
213 (*) : -------------1-----0--0----
213     : ['leader(proposer1)', '~promise(acceptor1,proposer1)', '~promise(acceptor2,proposer1)']
214     : --------------1-----0--0---
214     : ['leader(proposer2)', '~promise(acceptor1,proposer2)', '~promise(acceptor2,proposer2)']
215     : ------------1-----0--0-----
215     : ['leader(proposer0)', '~promise(acceptor1,proposer0)', '~promise(acceptor2,proposer0)']
216     : -------------1--0-----0----
216     : ['leader(proposer1)', '~promise(acceptor0,proposer1)', '~promise(acceptor2,proposer1)']
217     : --------------1--0-----0---
217     : ['leader(proposer2)', '~promise(acceptor0,proposer2)', '~promise(acceptor2,proposer2)']
218     : ------------1--0-----0-----
218     : ['leader(proposer0)', '~promise(acceptor0,proposer0)', '~promise(acceptor2,proposer0)']
219     : -------------1--0--0-------
219     : ['leader(proposer1)', '~promise(acceptor0,proposer1)', '~promise(acceptor1,proposer1)']
220     : --------------1--0--0------
220     : ['leader(proposer2)', '~promise(acceptor0,proposer2)', '~promise(acceptor1,proposer2)']
221     : ------------1--0--0--------
221     : ['leader(proposer0)', '~promise(acceptor0,proposer0)', '~promise(acceptor1,proposer0)']
num_forall :   0
num_exists :   0
num_literals : 0
quantified form : None
qcost : 0


=== Prime Orbit 16 =====================
size : 9
num_suborbits: 1
222 (*) : ----0-----1--1-------------
222     : ['didNotPromise(acceptor1)', 'leader(proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)']
223     : -----0----1---1------------
223     : ['didNotPromise(acceptor1)', 'leader(proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)']
224     : ---0------1-1--------------
224     : ['didNotPromise(acceptor1)', 'leader(proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)']
225     : -0---------1-1-------------
225     : ['didNotPromise(acceptor2)', 'leader(proposer1)', '~chosenAt(quorum__acceptor0_acceptor1,proposer1)']
226     : --0--------1--1------------
226     : ['didNotPromise(acceptor2)', 'leader(proposer2)', '~chosenAt(quorum__acceptor0_acceptor1,proposer2)']
227     : 0----------11--------------
227     : ['didNotPromise(acceptor2)', 'leader(proposer0)', '~chosenAt(quorum__acceptor0_acceptor1,proposer0)']
228     : -------0-1---1-------------
228     : ['didNotPromise(acceptor0)', 'leader(proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)']
229     : --------01----1------------
229     : ['didNotPromise(acceptor0)', 'leader(proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)']
230     : ------0--1--1--------------
230     : ['didNotPromise(acceptor0)', 'leader(proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)']
num_forall :   0
num_exists :   0
num_literals : 0
quantified form : None
qcost : 0


=== Prime Orbit 17 =====================
size : 9
num_suborbits: 1
231 (*) : ----------11-1-------------
231     : ['didNotPromise(acceptor1)', 'didNotPromise(acceptor2)', 'leader(proposer1)']
232     : ----------11--1------------
232     : ['didNotPromise(acceptor1)', 'didNotPromise(acceptor2)', 'leader(proposer2)']
233     : ----------111--------------
233     : ['didNotPromise(acceptor1)', 'didNotPromise(acceptor2)', 'leader(proposer0)']
234     : ---------1-1-1-------------
234     : ['didNotPromise(acceptor0)', 'didNotPromise(acceptor2)', 'leader(proposer1)']
235     : ---------1-1--1------------
235     : ['didNotPromise(acceptor0)', 'didNotPromise(acceptor2)', 'leader(proposer2)']
236     : ---------1-11--------------
236     : ['didNotPromise(acceptor0)', 'didNotPromise(acceptor2)', 'leader(proposer0)']
237     : ---------11--1-------------
237     : ['didNotPromise(acceptor0)', 'didNotPromise(acceptor1)', 'leader(proposer1)']
238     : ---------11---1------------
238     : ['didNotPromise(acceptor0)', 'didNotPromise(acceptor1)', 'leader(proposer2)']
239     : ---------11-1--------------
239     : ['didNotPromise(acceptor0)', 'didNotPromise(acceptor1)', 'leader(proposer0)']
num_forall :   0
num_exists :   0
num_literals : 0
quantified form : None
qcost : 0


=== Prime Orbit 18 =====================
size : 18
num_suborbits: 1
240 (*) : -------0-----1---1---------
240     : ['leader(proposer1)', 'promise(acceptor0,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)']
241     : --------0-----1-1----------
241     : ['leader(proposer2)', 'promise(acceptor0,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)']
242     : ------0-----1----1---------
242     : ['leader(proposer0)', 'promise(acceptor0,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)']
243     : --------0-----11-----------
243     : ['leader(proposer2)', 'promise(acceptor0,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)']
244     : ------0-----1---1----------
244     : ['leader(proposer0)', 'promise(acceptor0,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)']
245     : -------0-----1-1-----------
245     : ['leader(proposer1)', 'promise(acceptor0,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)']
246     : ----0--------1------1------
246     : ['leader(proposer1)', 'promise(acceptor1,proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)']
247     : -----0--------1----1-------
247     : ['leader(proposer2)', 'promise(acceptor1,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)']
248     : ---0--------1-------1------
248     : ['leader(proposer0)', 'promise(acceptor1,proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)']
249     : -----0--------1---1--------
249     : ['leader(proposer2)', 'promise(acceptor1,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)']
250     : ---0--------1------1-------
250     : ['leader(proposer0)', 'promise(acceptor1,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)']
251     : ----0--------1----1--------
251     : ['leader(proposer1)', 'promise(acceptor1,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)']
252     : -0-----------1---------1---
252     : ['leader(proposer1)', 'promise(acceptor2,proposer2)', '~chosenAt(quorum__acceptor0_acceptor1,proposer1)']
253     : --0-----------1-------1----
253     : ['leader(proposer2)', 'promise(acceptor2,proposer1)', '~chosenAt(quorum__acceptor0_acceptor1,proposer2)']
254     : 0-----------1----------1---
254     : ['leader(proposer0)', 'promise(acceptor2,proposer2)', '~chosenAt(quorum__acceptor0_acceptor1,proposer0)']
255     : --0-----------1------1-----
255     : ['leader(proposer2)', 'promise(acceptor2,proposer0)', '~chosenAt(quorum__acceptor0_acceptor1,proposer2)']
256     : 0-----------1---------1----
256     : ['leader(proposer0)', 'promise(acceptor2,proposer1)', '~chosenAt(quorum__acceptor0_acceptor1,proposer0)']
257     : -0-----------1-------1-----
257     : ['leader(proposer1)', 'promise(acceptor2,proposer0)', '~chosenAt(quorum__acceptor0_acceptor1,proposer1)']
num_forall :   0
num_exists :   0
num_literals : 0
quantified form : None
qcost : 0


=== Prime Orbit 19 =====================
size : 36
num_suborbits: 1
258 (*) : -------------1---1----0----
258     : ['leader(proposer1)', 'promise(acceptor0,proposer2)', '~promise(acceptor2,proposer1)']
259     : --------------1-1------0---
259     : ['leader(proposer2)', 'promise(acceptor0,proposer1)', '~promise(acceptor2,proposer2)']
260     : ------------1----1---0-----
260     : ['leader(proposer0)', 'promise(acceptor0,proposer2)', '~promise(acceptor2,proposer0)']
261     : --------------11-------0---
261     : ['leader(proposer2)', 'promise(acceptor0,proposer0)', '~promise(acceptor2,proposer2)']
262     : ------------1---1----0-----
262     : ['leader(proposer0)', 'promise(acceptor0,proposer1)', '~promise(acceptor2,proposer0)']
263     : -------------1-1------0----
263     : ['leader(proposer1)', 'promise(acceptor0,proposer0)', '~promise(acceptor2,proposer1)']
264     : -------------1---1-0-------
264     : ['leader(proposer1)', 'promise(acceptor0,proposer2)', '~promise(acceptor1,proposer1)']
265     : --------------1-1---0------
265     : ['leader(proposer2)', 'promise(acceptor0,proposer1)', '~promise(acceptor1,proposer2)']
266     : ------------1----10--------
266     : ['leader(proposer0)', 'promise(acceptor0,proposer2)', '~promise(acceptor1,proposer0)']
267     : --------------11----0------
267     : ['leader(proposer2)', 'promise(acceptor0,proposer0)', '~promise(acceptor1,proposer2)']
268     : ------------1---1-0--------
268     : ['leader(proposer0)', 'promise(acceptor0,proposer1)', '~promise(acceptor1,proposer0)']
269     : -------------1-1---0-------
269     : ['leader(proposer1)', 'promise(acceptor0,proposer0)', '~promise(acceptor1,proposer1)']
270     : -------------1------1-0----
270     : ['leader(proposer1)', 'promise(acceptor1,proposer2)', '~promise(acceptor2,proposer1)']
271     : --------------1----1---0---
271     : ['leader(proposer2)', 'promise(acceptor1,proposer1)', '~promise(acceptor2,proposer2)']
272     : ------------1-------10-----
272     : ['leader(proposer0)', 'promise(acceptor1,proposer2)', '~promise(acceptor2,proposer0)']
273     : --------------1---1----0---
273     : ['leader(proposer2)', 'promise(acceptor1,proposer0)', '~promise(acceptor2,proposer2)']
274     : ------------1------1-0-----
274     : ['leader(proposer0)', 'promise(acceptor1,proposer1)', '~promise(acceptor2,proposer0)']
275     : -------------1----1---0----
275     : ['leader(proposer1)', 'promise(acceptor1,proposer0)', '~promise(acceptor2,proposer1)']
276     : -------------1--0---1------
276     : ['leader(proposer1)', 'promise(acceptor1,proposer2)', '~promise(acceptor0,proposer1)']
277     : --------------1--0-1-------
277     : ['leader(proposer2)', 'promise(acceptor1,proposer1)', '~promise(acceptor0,proposer2)']
278     : ------------1--0----1------
278     : ['leader(proposer0)', 'promise(acceptor1,proposer2)', '~promise(acceptor0,proposer0)']
279     : --------------1--01--------
279     : ['leader(proposer2)', 'promise(acceptor1,proposer0)', '~promise(acceptor0,proposer2)']
280     : ------------1--0---1-------
280     : ['leader(proposer0)', 'promise(acceptor1,proposer1)', '~promise(acceptor0,proposer0)']
281     : -------------1--0-1--------
281     : ['leader(proposer1)', 'promise(acceptor1,proposer0)', '~promise(acceptor0,proposer1)']
282     : -------------1-----0---1---
282     : ['leader(proposer1)', 'promise(acceptor2,proposer2)', '~promise(acceptor1,proposer1)']
283     : --------------1-----0-1----
283     : ['leader(proposer2)', 'promise(acceptor2,proposer1)', '~promise(acceptor1,proposer2)']
284     : ------------1-----0----1---
284     : ['leader(proposer0)', 'promise(acceptor2,proposer2)', '~promise(acceptor1,proposer0)']
285     : --------------1-----01-----
285     : ['leader(proposer2)', 'promise(acceptor2,proposer0)', '~promise(acceptor1,proposer2)']
286     : ------------1-----0---1----
286     : ['leader(proposer0)', 'promise(acceptor2,proposer1)', '~promise(acceptor1,proposer0)']
287     : -------------1-----0-1-----
287     : ['leader(proposer1)', 'promise(acceptor2,proposer0)', '~promise(acceptor1,proposer1)']
288     : -------------1--0------1---
288     : ['leader(proposer1)', 'promise(acceptor2,proposer2)', '~promise(acceptor0,proposer1)']
289     : --------------1--0----1----
289     : ['leader(proposer2)', 'promise(acceptor2,proposer1)', '~promise(acceptor0,proposer2)']
290     : ------------1--0-------1---
290     : ['leader(proposer0)', 'promise(acceptor2,proposer2)', '~promise(acceptor0,proposer0)']
291     : --------------1--0---1-----
291     : ['leader(proposer2)', 'promise(acceptor2,proposer0)', '~promise(acceptor0,proposer2)']
292     : ------------1--0------1----
292     : ['leader(proposer0)', 'promise(acceptor2,proposer1)', '~promise(acceptor0,proposer0)']
293     : -------------1--0----1-----
293     : ['leader(proposer1)', 'promise(acceptor2,proposer0)', '~promise(acceptor0,proposer1)']
num_forall :   0
num_exists :   0
num_literals : 0
quantified form : None
qcost : 0


=== Prime Orbit 20 =====================
size : 36
num_suborbits: 1
294 (*) : ----------1--1---1---------
294     : ['didNotPromise(acceptor1)', 'leader(proposer1)', 'promise(acceptor0,proposer2)']
295     : ----------1---1-1----------
295     : ['didNotPromise(acceptor1)', 'leader(proposer2)', 'promise(acceptor0,proposer1)']
296     : ----------1-1----1---------
296     : ['didNotPromise(acceptor1)', 'leader(proposer0)', 'promise(acceptor0,proposer2)']
297     : ----------1---11-----------
297     : ['didNotPromise(acceptor1)', 'leader(proposer2)', 'promise(acceptor0,proposer0)']
298     : ----------1-1---1----------
298     : ['didNotPromise(acceptor1)', 'leader(proposer0)', 'promise(acceptor0,proposer1)']
299     : ----------1--1-1-----------
299     : ['didNotPromise(acceptor1)', 'leader(proposer1)', 'promise(acceptor0,proposer0)']
300     : -----------1-1---1---------
300     : ['didNotPromise(acceptor2)', 'leader(proposer1)', 'promise(acceptor0,proposer2)']
301     : -----------1--1-1----------
301     : ['didNotPromise(acceptor2)', 'leader(proposer2)', 'promise(acceptor0,proposer1)']
302     : -----------11----1---------
302     : ['didNotPromise(acceptor2)', 'leader(proposer0)', 'promise(acceptor0,proposer2)']
303     : -----------1--11-----------
303     : ['didNotPromise(acceptor2)', 'leader(proposer2)', 'promise(acceptor0,proposer0)']
304     : -----------11---1----------
304     : ['didNotPromise(acceptor2)', 'leader(proposer0)', 'promise(acceptor0,proposer1)']
305     : -----------1-1-1-----------
305     : ['didNotPromise(acceptor2)', 'leader(proposer1)', 'promise(acceptor0,proposer0)']
306     : ---------1---1------1------
306     : ['didNotPromise(acceptor0)', 'leader(proposer1)', 'promise(acceptor1,proposer2)']
307     : ---------1----1----1-------
307     : ['didNotPromise(acceptor0)', 'leader(proposer2)', 'promise(acceptor1,proposer1)']
308     : ---------1--1-------1------
308     : ['didNotPromise(acceptor0)', 'leader(proposer0)', 'promise(acceptor1,proposer2)']
309     : ---------1----1---1--------
309     : ['didNotPromise(acceptor0)', 'leader(proposer2)', 'promise(acceptor1,proposer0)']
310     : ---------1--1------1-------
310     : ['didNotPromise(acceptor0)', 'leader(proposer0)', 'promise(acceptor1,proposer1)']
311     : ---------1---1----1--------
311     : ['didNotPromise(acceptor0)', 'leader(proposer1)', 'promise(acceptor1,proposer0)']
312     : -----------1-1------1------
312     : ['didNotPromise(acceptor2)', 'leader(proposer1)', 'promise(acceptor1,proposer2)']
313     : -----------1--1----1-------
313     : ['didNotPromise(acceptor2)', 'leader(proposer2)', 'promise(acceptor1,proposer1)']
314     : -----------11-------1------
314     : ['didNotPromise(acceptor2)', 'leader(proposer0)', 'promise(acceptor1,proposer2)']
315     : -----------1--1---1--------
315     : ['didNotPromise(acceptor2)', 'leader(proposer2)', 'promise(acceptor1,proposer0)']
316     : -----------11------1-------
316     : ['didNotPromise(acceptor2)', 'leader(proposer0)', 'promise(acceptor1,proposer1)']
317     : -----------1-1----1--------
317     : ['didNotPromise(acceptor2)', 'leader(proposer1)', 'promise(acceptor1,proposer0)']
318     : ---------1---1---------1---
318     : ['didNotPromise(acceptor0)', 'leader(proposer1)', 'promise(acceptor2,proposer2)']
319     : ---------1----1-------1----
319     : ['didNotPromise(acceptor0)', 'leader(proposer2)', 'promise(acceptor2,proposer1)']
320     : ---------1--1----------1---
320     : ['didNotPromise(acceptor0)', 'leader(proposer0)', 'promise(acceptor2,proposer2)']
321     : ---------1----1------1-----
321     : ['didNotPromise(acceptor0)', 'leader(proposer2)', 'promise(acceptor2,proposer0)']
322     : ---------1--1---------1----
322     : ['didNotPromise(acceptor0)', 'leader(proposer0)', 'promise(acceptor2,proposer1)']
323     : ---------1---1-------1-----
323     : ['didNotPromise(acceptor0)', 'leader(proposer1)', 'promise(acceptor2,proposer0)']
324     : ----------1--1---------1---
324     : ['didNotPromise(acceptor1)', 'leader(proposer1)', 'promise(acceptor2,proposer2)']
325     : ----------1---1-------1----
325     : ['didNotPromise(acceptor1)', 'leader(proposer2)', 'promise(acceptor2,proposer1)']
326     : ----------1-1----------1---
326     : ['didNotPromise(acceptor1)', 'leader(proposer0)', 'promise(acceptor2,proposer2)']
327     : ----------1---1------1-----
327     : ['didNotPromise(acceptor1)', 'leader(proposer2)', 'promise(acceptor2,proposer0)']
328     : ----------1-1---------1----
328     : ['didNotPromise(acceptor1)', 'leader(proposer0)', 'promise(acceptor2,proposer1)']
329     : ----------1--1-------1-----
329     : ['didNotPromise(acceptor1)', 'leader(proposer1)', 'promise(acceptor2,proposer0)']
num_forall :   0
num_exists :   0
num_literals : 0
quantified form : None
qcost : 0


=== Prime Orbit 21 =====================
size : 36
num_suborbits: 2
330 (*) : -------------1---1-----1---
330     : ['leader(proposer1)', 'promise(acceptor0,proposer2)', 'promise(acceptor2,proposer2)']
331     : --------------1-1-----1----
331     : ['leader(proposer2)', 'promise(acceptor0,proposer1)', 'promise(acceptor2,proposer1)']
332     : ------------1----1-----1---
332     : ['leader(proposer0)', 'promise(acceptor0,proposer2)', 'promise(acceptor2,proposer2)']
333     : --------------11-----1-----
333     : ['leader(proposer2)', 'promise(acceptor0,proposer0)', 'promise(acceptor2,proposer0)']
334     : ------------1---1-----1----
334     : ['leader(proposer0)', 'promise(acceptor0,proposer1)', 'promise(acceptor2,proposer1)']
335     : -------------1-1-----1-----
335     : ['leader(proposer1)', 'promise(acceptor0,proposer0)', 'promise(acceptor2,proposer0)']
336     : -------------1---1--1------
336     : ['leader(proposer1)', 'promise(acceptor0,proposer2)', 'promise(acceptor1,proposer2)']
337     : --------------1-1--1-------
337     : ['leader(proposer2)', 'promise(acceptor0,proposer1)', 'promise(acceptor1,proposer1)']
338     : ------------1----1--1------
338     : ['leader(proposer0)', 'promise(acceptor0,proposer2)', 'promise(acceptor1,proposer2)']
339     : --------------11--1--------
339     : ['leader(proposer2)', 'promise(acceptor0,proposer0)', 'promise(acceptor1,proposer0)']
340     : ------------1---1--1-------
340     : ['leader(proposer0)', 'promise(acceptor0,proposer1)', 'promise(acceptor1,proposer1)']
341     : -------------1-1--1--------
341     : ['leader(proposer1)', 'promise(acceptor0,proposer0)', 'promise(acceptor1,proposer0)']
342     : -------------1------1--1---
342     : ['leader(proposer1)', 'promise(acceptor1,proposer2)', 'promise(acceptor2,proposer2)']
343     : --------------1----1--1----
343     : ['leader(proposer2)', 'promise(acceptor1,proposer1)', 'promise(acceptor2,proposer1)']
344     : ------------1-------1--1---
344     : ['leader(proposer0)', 'promise(acceptor1,proposer2)', 'promise(acceptor2,proposer2)']
345     : --------------1---1--1-----
345     : ['leader(proposer2)', 'promise(acceptor1,proposer0)', 'promise(acceptor2,proposer0)']
346     : ------------1------1--1----
346     : ['leader(proposer0)', 'promise(acceptor1,proposer1)', 'promise(acceptor2,proposer1)']
347     : -------------1----1--1-----
347     : ['leader(proposer1)', 'promise(acceptor1,proposer0)', 'promise(acceptor2,proposer0)']
348 (*) : -------------1---1---1-----
348     : ['leader(proposer1)', 'promise(acceptor0,proposer2)', 'promise(acceptor2,proposer0)']
349     : --------------1-1----1-----
349     : ['leader(proposer2)', 'promise(acceptor0,proposer1)', 'promise(acceptor2,proposer0)']
350     : ------------1----1----1----
350     : ['leader(proposer0)', 'promise(acceptor0,proposer2)', 'promise(acceptor2,proposer1)']
351     : --------------11------1----
351     : ['leader(proposer2)', 'promise(acceptor0,proposer0)', 'promise(acceptor2,proposer1)']
352     : ------------1---1------1---
352     : ['leader(proposer0)', 'promise(acceptor0,proposer1)', 'promise(acceptor2,proposer2)']
353     : -------------1-1-------1---
353     : ['leader(proposer1)', 'promise(acceptor0,proposer0)', 'promise(acceptor2,proposer2)']
354     : -------------1---11--------
354     : ['leader(proposer1)', 'promise(acceptor0,proposer2)', 'promise(acceptor1,proposer0)']
355     : --------------1-1-1--------
355     : ['leader(proposer2)', 'promise(acceptor0,proposer1)', 'promise(acceptor1,proposer0)']
356     : ------------1----1-1-------
356     : ['leader(proposer0)', 'promise(acceptor0,proposer2)', 'promise(acceptor1,proposer1)']
357     : --------------11---1-------
357     : ['leader(proposer2)', 'promise(acceptor0,proposer0)', 'promise(acceptor1,proposer1)']
358     : ------------1---1---1------
358     : ['leader(proposer0)', 'promise(acceptor0,proposer1)', 'promise(acceptor1,proposer2)']
359     : -------------1-1----1------
359     : ['leader(proposer1)', 'promise(acceptor0,proposer0)', 'promise(acceptor1,proposer2)']
360     : -------------1------11-----
360     : ['leader(proposer1)', 'promise(acceptor1,proposer2)', 'promise(acceptor2,proposer0)']
361     : --------------1----1-1-----
361     : ['leader(proposer2)', 'promise(acceptor1,proposer1)', 'promise(acceptor2,proposer0)']
362     : ------------1-------1-1----
362     : ['leader(proposer0)', 'promise(acceptor1,proposer2)', 'promise(acceptor2,proposer1)']
363     : --------------1---1---1----
363     : ['leader(proposer2)', 'promise(acceptor1,proposer0)', 'promise(acceptor2,proposer1)']
364     : ------------1------1---1---
364     : ['leader(proposer0)', 'promise(acceptor1,proposer1)', 'promise(acceptor2,proposer2)']
365     : -------------1----1----1---
365     : ['leader(proposer1)', 'promise(acceptor1,proposer0)', 'promise(acceptor2,proposer2)']
num_forall :   0
num_exists :   0
num_literals : 0
quantified form : None
qcost : 0


=== Prime Orbit 22 =====================
size : 9
num_suborbits: 1
366 (*) : --0--------------1--1------
366     : ['promise(acceptor0,proposer2)', 'promise(acceptor1,proposer2)', '~chosenAt(quorum__acceptor0_acceptor1,proposer2)']
367     : -0--------------1--1-------
367     : ['promise(acceptor0,proposer1)', 'promise(acceptor1,proposer1)', '~chosenAt(quorum__acceptor0_acceptor1,proposer1)']
368     : 0--------------1--1--------
368     : ['promise(acceptor0,proposer0)', 'promise(acceptor1,proposer0)', '~chosenAt(quorum__acceptor0_acceptor1,proposer0)']
369     : -----0-----------1-----1---
369     : ['promise(acceptor0,proposer2)', 'promise(acceptor2,proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)']
370     : ----0-----------1-----1----
370     : ['promise(acceptor0,proposer1)', 'promise(acceptor2,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)']
371     : ---0-----------1-----1-----
371     : ['promise(acceptor0,proposer0)', 'promise(acceptor2,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)']
372     : --------0-----------1--1---
372     : ['promise(acceptor1,proposer2)', 'promise(acceptor2,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)']
373     : -------0-----------1--1----
373     : ['promise(acceptor1,proposer1)', 'promise(acceptor2,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)']
374     : ------0-----------1--1-----
374     : ['promise(acceptor1,proposer0)', 'promise(acceptor2,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)']
num_forall :   0
num_exists :   0
num_literals : 0
quantified form : None
qcost : 0


=== Prime Orbit 23 =====================
size : 9
num_suborbits: 1
375 (*) : ----------0-------0-0----0-
375     : ['~didNotPromise(acceptor1)', '~promise(acceptor1,proposer0)', '~promise(acceptor1,proposer2)', '~start(proposer1)']
376     : ----------0-------00------0
376     : ['~didNotPromise(acceptor1)', '~promise(acceptor1,proposer0)', '~promise(acceptor1,proposer1)', '~start(proposer2)']
377     : ----------0--------00---0--
377     : ['~didNotPromise(acceptor1)', '~promise(acceptor1,proposer1)', '~promise(acceptor1,proposer2)', '~start(proposer0)']
378     : -----------0---------0-0-0-
378     : ['~didNotPromise(acceptor2)', '~promise(acceptor2,proposer0)', '~promise(acceptor2,proposer2)', '~start(proposer1)']
379     : -----------0---------00---0
379     : ['~didNotPromise(acceptor2)', '~promise(acceptor2,proposer0)', '~promise(acceptor2,proposer1)', '~start(proposer2)']
380     : -----------0----------000--
380     : ['~didNotPromise(acceptor2)', '~promise(acceptor2,proposer1)', '~promise(acceptor2,proposer2)', '~start(proposer0)']
381     : ---------0-----0-0-------0-
381     : ['~didNotPromise(acceptor0)', '~promise(acceptor0,proposer0)', '~promise(acceptor0,proposer2)', '~start(proposer1)']
382     : ---------0-----00---------0
382     : ['~didNotPromise(acceptor0)', '~promise(acceptor0,proposer0)', '~promise(acceptor0,proposer1)', '~start(proposer2)']
383     : ---------0------00------0--
383     : ['~didNotPromise(acceptor0)', '~promise(acceptor0,proposer1)', '~promise(acceptor0,proposer2)', '~start(proposer0)']
num_forall :   0
num_exists :   0
num_literals : 0
quantified form : None
qcost : 0


=== Prime Orbit 24 =====================
size : 9
num_suborbits: 1
384 (*) : ----------0-------0------00
384     : ['~didNotPromise(acceptor1)', '~promise(acceptor1,proposer0)', '~start(proposer1)', '~start(proposer2)']
385     : ----------0--------0----0-0
385     : ['~didNotPromise(acceptor1)', '~promise(acceptor1,proposer1)', '~start(proposer0)', '~start(proposer2)']
386     : ----------0---------0---00-
386     : ['~didNotPromise(acceptor1)', '~promise(acceptor1,proposer2)', '~start(proposer0)', '~start(proposer1)']
387     : -----------0---------0---00
387     : ['~didNotPromise(acceptor2)', '~promise(acceptor2,proposer0)', '~start(proposer1)', '~start(proposer2)']
388     : -----------0----------0-0-0
388     : ['~didNotPromise(acceptor2)', '~promise(acceptor2,proposer1)', '~start(proposer0)', '~start(proposer2)']
389     : -----------0-----------000-
389     : ['~didNotPromise(acceptor2)', '~promise(acceptor2,proposer2)', '~start(proposer0)', '~start(proposer1)']
390     : ---------0-----0---------00
390     : ['~didNotPromise(acceptor0)', '~promise(acceptor0,proposer0)', '~start(proposer1)', '~start(proposer2)']
391     : ---------0------0-------0-0
391     : ['~didNotPromise(acceptor0)', '~promise(acceptor0,proposer1)', '~start(proposer0)', '~start(proposer2)']
392     : ---------0-------0------00-
392     : ['~didNotPromise(acceptor0)', '~promise(acceptor0,proposer2)', '~start(proposer0)', '~start(proposer1)']
num_forall :   0
num_exists :   0
num_literals : 0
quantified form : None
qcost : 0


=== Prime Orbit 25 =====================
size : 3
num_suborbits: 1
393 (*) : ----------0-------000------
393     : ['~didNotPromise(acceptor1)', '~promise(acceptor1,proposer0)', '~promise(acceptor1,proposer1)', '~promise(acceptor1,proposer2)']
394     : -----------0---------000---
394     : ['~didNotPromise(acceptor2)', '~promise(acceptor2,proposer0)', '~promise(acceptor2,proposer1)', '~promise(acceptor2,proposer2)']
395     : ---------0-----000---------
395     : ['~didNotPromise(acceptor0)', '~promise(acceptor0,proposer0)', '~promise(acceptor0,proposer1)', '~promise(acceptor0,proposer2)']
num_forall :   0
num_exists :   0
num_literals : 0
quantified form : None
qcost : 0


=== Prime Orbit 26 =====================
size : 9
num_suborbits: 1
396 (*) : -----0--0-----1--------1---
396     : ['leader(proposer2)', 'promise(acceptor2,proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)']
397     : ----0--0-----1--------1----
397     : ['leader(proposer1)', 'promise(acceptor2,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)']
398     : ---0--0-----1--------1-----
398     : ['leader(proposer0)', 'promise(acceptor2,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)']
399     : --0-----0-----1-----1------
399     : ['leader(proposer2)', 'promise(acceptor1,proposer2)', '~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)']
400     : -0-----0-----1-----1-------
400     : ['leader(proposer1)', 'promise(acceptor1,proposer1)', '~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)']
401     : 0-----0-----1-----1--------
401     : ['leader(proposer0)', 'promise(acceptor1,proposer0)', '~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)']
402     : --0--0--------1--1---------
402     : ['leader(proposer2)', 'promise(acceptor0,proposer2)', '~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)']
403     : -0--0--------1--1----------
403     : ['leader(proposer1)', 'promise(acceptor0,proposer1)', '~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)']
404     : 0--0--------1--1-----------
404     : ['leader(proposer0)', 'promise(acceptor0,proposer0)', '~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)']
num_forall :   0
num_exists :   0
num_literals : 0
quantified form : None
qcost : 0


=== Prime Orbit 27 =====================
size : 3
num_suborbits: 1
405 (*) : --0--0--0-----1------------
405     : ['leader(proposer2)', '~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)']
406     : -0--0--0-----1-------------
406     : ['leader(proposer1)', '~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)']
407     : 0--0--0-----1--------------
407     : ['leader(proposer0)', '~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)']
num_forall :   0
num_exists :   0
num_literals : 0
quantified form : None
qcost : 0


=== Prime Orbit 28 =====================
size : 3
num_suborbits: 1
408 (*) : -----------0------------000
408     : ['~didNotPromise(acceptor2)', '~start(proposer0)', '~start(proposer1)', '~start(proposer2)']
409     : ----------0-------------000
409     : ['~didNotPromise(acceptor1)', '~start(proposer0)', '~start(proposer1)', '~start(proposer2)']
410     : ---------0--------------000
410     : ['~didNotPromise(acceptor0)', '~start(proposer0)', '~start(proposer1)', '~start(proposer2)']
num_forall :   0
num_exists :   0
num_literals : 0
quantified form : None
qcost : 0


=== Prime Orbit 29 =====================
size : 36
num_suborbits: 1
411 (*) : -------0--0-------0---1---0
411     : ['promise(acceptor2,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor1)', '~promise(acceptor1,proposer0)', '~start(proposer2)']
412     : --------0-0-------0----1-0-
412     : ['promise(acceptor2,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor1)', '~promise(acceptor1,proposer0)', '~start(proposer1)']
413     : ------0---0--------0-1----0
413     : ['promise(acceptor2,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor1)', '~promise(acceptor1,proposer1)', '~start(proposer2)']
414     : --------0-0--------0---10--
414     : ['promise(acceptor2,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor1)', '~promise(acceptor1,proposer1)', '~start(proposer0)']
415     : ------0---0---------01---0-
415     : ['promise(acceptor2,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor1)', '~promise(acceptor1,proposer2)', '~start(proposer1)']
416     : -------0--0---------0-1-0--
416     : ['promise(acceptor2,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor1)', '~promise(acceptor1,proposer2)', '~start(proposer0)']
417     : -------0---0-------1-0----0
417     : ['promise(acceptor1,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor2)', '~promise(acceptor2,proposer0)', '~start(proposer2)']
418     : --------0--0--------10---0-
418     : ['promise(acceptor1,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor2)', '~promise(acceptor2,proposer0)', '~start(proposer1)']
419     : ------0----0------1---0---0
419     : ['promise(acceptor1,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor2)', '~promise(acceptor2,proposer1)', '~start(proposer2)']
420     : --------0--0--------1-0-0--
420     : ['promise(acceptor1,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor2)', '~promise(acceptor2,proposer1)', '~start(proposer0)']
421     : ------0----0------1----0-0-
421     : ['promise(acceptor1,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor2)', '~promise(acceptor2,proposer2)', '~start(proposer1)']
422     : -------0---0-------1---00--
422     : ['promise(acceptor1,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor2)', '~promise(acceptor2,proposer2)', '~start(proposer0)']
423     : ----0----0-----0------1---0
423     : ['promise(acceptor2,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~didNotPromise(acceptor0)', '~promise(acceptor0,proposer0)', '~start(proposer2)']
424     : -----0---0-----0-------1-0-
424     : ['promise(acceptor2,proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~didNotPromise(acceptor0)', '~promise(acceptor0,proposer0)', '~start(proposer1)']
425     : ---0-----0------0----1----0
425     : ['promise(acceptor2,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~didNotPromise(acceptor0)', '~promise(acceptor0,proposer1)', '~start(proposer2)']
426     : -----0---0------0------10--
426     : ['promise(acceptor2,proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~didNotPromise(acceptor0)', '~promise(acceptor0,proposer1)', '~start(proposer0)']
427     : ---0-----0-------0---1---0-
427     : ['promise(acceptor2,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~didNotPromise(acceptor0)', '~promise(acceptor0,proposer2)', '~start(proposer1)']
428     : ----0----0-------0----1-0--
428     : ['promise(acceptor2,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~didNotPromise(acceptor0)', '~promise(acceptor0,proposer2)', '~start(proposer0)']
429     : ----0------0----1----0----0
429     : ['promise(acceptor0,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~didNotPromise(acceptor2)', '~promise(acceptor2,proposer0)', '~start(proposer2)']
430     : -----0-----0-----1---0---0-
430     : ['promise(acceptor0,proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~didNotPromise(acceptor2)', '~promise(acceptor2,proposer0)', '~start(proposer1)']
431     : ---0-------0---1------0---0
431     : ['promise(acceptor0,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~didNotPromise(acceptor2)', '~promise(acceptor2,proposer1)', '~start(proposer2)']
432     : -----0-----0-----1----0-0--
432     : ['promise(acceptor0,proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~didNotPromise(acceptor2)', '~promise(acceptor2,proposer1)', '~start(proposer0)']
433     : ---0-------0---1-------0-0-
433     : ['promise(acceptor0,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~didNotPromise(acceptor2)', '~promise(acceptor2,proposer2)', '~start(proposer1)']
434     : ----0------0----1------00--
434     : ['promise(acceptor0,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~didNotPromise(acceptor2)', '~promise(acceptor2,proposer2)', '~start(proposer0)']
435     : -0-------0-----0---1------0
435     : ['promise(acceptor1,proposer1)', '~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~didNotPromise(acceptor0)', '~promise(acceptor0,proposer0)', '~start(proposer2)']
436     : --0------0-----0----1----0-
436     : ['promise(acceptor1,proposer2)', '~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~didNotPromise(acceptor0)', '~promise(acceptor0,proposer0)', '~start(proposer1)']
437     : 0--------0------0-1-------0
437     : ['promise(acceptor1,proposer0)', '~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~didNotPromise(acceptor0)', '~promise(acceptor0,proposer1)', '~start(proposer2)']
438     : --0------0------0---1---0--
438     : ['promise(acceptor1,proposer2)', '~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~didNotPromise(acceptor0)', '~promise(acceptor0,proposer1)', '~start(proposer0)']
439     : 0--------0-------01------0-
439     : ['promise(acceptor1,proposer0)', '~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~didNotPromise(acceptor0)', '~promise(acceptor0,proposer2)', '~start(proposer1)']
440     : -0-------0-------0-1----0--
440     : ['promise(acceptor1,proposer1)', '~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~didNotPromise(acceptor0)', '~promise(acceptor0,proposer2)', '~start(proposer0)']
441     : -0--------0-----1-0-------0
441     : ['promise(acceptor0,proposer1)', '~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~didNotPromise(acceptor1)', '~promise(acceptor1,proposer0)', '~start(proposer2)']
442     : --0-------0------10------0-
442     : ['promise(acceptor0,proposer2)', '~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~didNotPromise(acceptor1)', '~promise(acceptor1,proposer0)', '~start(proposer1)']
443     : 0---------0----1---0------0
443     : ['promise(acceptor0,proposer0)', '~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~didNotPromise(acceptor1)', '~promise(acceptor1,proposer1)', '~start(proposer2)']
444     : --0-------0------1-0----0--
444     : ['promise(acceptor0,proposer2)', '~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~didNotPromise(acceptor1)', '~promise(acceptor1,proposer1)', '~start(proposer0)']
445     : 0---------0----1----0----0-
445     : ['promise(acceptor0,proposer0)', '~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~didNotPromise(acceptor1)', '~promise(acceptor1,proposer2)', '~start(proposer1)']
446     : -0--------0-----1---0---0--
446     : ['promise(acceptor0,proposer1)', '~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~didNotPromise(acceptor1)', '~promise(acceptor1,proposer2)', '~start(proposer0)']
num_forall :   0
num_exists :   0
num_literals : 0
quantified form : None
qcost : 0


=== Prime Orbit 30 =====================
size : 36
num_suborbits: 1
447 (*) : -0--1-----0-------0-------0
447     : ['chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~didNotPromise(acceptor1)', '~promise(acceptor1,proposer0)', '~start(proposer2)']
448     : --0--1----0-------0------0-
448     : ['chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~didNotPromise(acceptor1)', '~promise(acceptor1,proposer0)', '~start(proposer1)']
449     : 0--1------0--------0------0
449     : ['chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~didNotPromise(acceptor1)', '~promise(acceptor1,proposer1)', '~start(proposer2)']
450     : --0--1----0--------0----0--
450     : ['chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~didNotPromise(acceptor1)', '~promise(acceptor1,proposer1)', '~start(proposer0)']
451     : 0--1------0---------0----0-
451     : ['chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~didNotPromise(acceptor1)', '~promise(acceptor1,proposer2)', '~start(proposer1)']
452     : -0--1-----0---------0---0--
452     : ['chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~didNotPromise(acceptor1)', '~promise(acceptor1,proposer2)', '~start(proposer0)']
453     : -1--0------0---------0----0
453     : ['chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~didNotPromise(acceptor2)', '~promise(acceptor2,proposer0)', '~start(proposer2)']
454     : --1--0-----0---------0---0-
454     : ['chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~didNotPromise(acceptor2)', '~promise(acceptor2,proposer0)', '~start(proposer1)']
455     : 1--0-------0----------0---0
455     : ['chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~didNotPromise(acceptor2)', '~promise(acceptor2,proposer1)', '~start(proposer2)']
456     : --1--0-----0----------0-0--
456     : ['chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~didNotPromise(acceptor2)', '~promise(acceptor2,proposer1)', '~start(proposer0)']
457     : 1--0-------0-----------0-0-
457     : ['chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~didNotPromise(acceptor2)', '~promise(acceptor2,proposer2)', '~start(proposer1)']
458     : -1--0------0-----------00--
458     : ['chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~didNotPromise(acceptor2)', '~promise(acceptor2,proposer2)', '~start(proposer0)']
459     : -0-----1-0-----0----------0
459     : ['chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~didNotPromise(acceptor0)', '~promise(acceptor0,proposer0)', '~start(proposer2)']
460     : --0-----10-----0---------0-
460     : ['chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~didNotPromise(acceptor0)', '~promise(acceptor0,proposer0)', '~start(proposer1)']
461     : 0-----1--0------0---------0
461     : ['chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~didNotPromise(acceptor0)', '~promise(acceptor0,proposer1)', '~start(proposer2)']
462     : --0-----10------0-------0--
462     : ['chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~didNotPromise(acceptor0)', '~promise(acceptor0,proposer1)', '~start(proposer0)']
463     : 0-----1--0-------0-------0-
463     : ['chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~didNotPromise(acceptor0)', '~promise(acceptor0,proposer2)', '~start(proposer1)']
464     : -0-----1-0-------0------0--
464     : ['chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~didNotPromise(acceptor0)', '~promise(acceptor0,proposer2)', '~start(proposer0)']
465     : -1-----0---0---------0----0
465     : ['chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor2)', '~promise(acceptor2,proposer0)', '~start(proposer2)']
466     : --1-----0--0---------0---0-
466     : ['chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor2)', '~promise(acceptor2,proposer0)', '~start(proposer1)']
467     : 1-----0----0----------0---0
467     : ['chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor2)', '~promise(acceptor2,proposer1)', '~start(proposer2)']
468     : --1-----0--0----------0-0--
468     : ['chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor2)', '~promise(acceptor2,proposer1)', '~start(proposer0)']
469     : 1-----0----0-----------0-0-
469     : ['chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor2)', '~promise(acceptor2,proposer2)', '~start(proposer1)']
470     : -1-----0---0-----------00--
470     : ['chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor2)', '~promise(acceptor2,proposer2)', '~start(proposer0)']
471     : ----0--1-0-----0----------0
471     : ['chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~didNotPromise(acceptor0)', '~promise(acceptor0,proposer0)', '~start(proposer2)']
472     : -----0--10-----0---------0-
472     : ['chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~didNotPromise(acceptor0)', '~promise(acceptor0,proposer0)', '~start(proposer1)']
473     : ---0--1--0------0---------0
473     : ['chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~didNotPromise(acceptor0)', '~promise(acceptor0,proposer1)', '~start(proposer2)']
474     : -----0--10------0-------0--
474     : ['chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~didNotPromise(acceptor0)', '~promise(acceptor0,proposer1)', '~start(proposer0)']
475     : ---0--1--0-------0-------0-
475     : ['chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~didNotPromise(acceptor0)', '~promise(acceptor0,proposer2)', '~start(proposer1)']
476     : ----0--1-0-------0------0--
476     : ['chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~didNotPromise(acceptor0)', '~promise(acceptor0,proposer2)', '~start(proposer0)']
477     : ----1--0--0-------0-------0
477     : ['chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor1)', '~promise(acceptor1,proposer0)', '~start(proposer2)']
478     : -----1--0-0-------0------0-
478     : ['chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor1)', '~promise(acceptor1,proposer0)', '~start(proposer1)']
479     : ---1--0---0--------0------0
479     : ['chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor1)', '~promise(acceptor1,proposer1)', '~start(proposer2)']
480     : -----1--0-0--------0----0--
480     : ['chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor1)', '~promise(acceptor1,proposer1)', '~start(proposer0)']
481     : ---1--0---0---------0----0-
481     : ['chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor1)', '~promise(acceptor1,proposer2)', '~start(proposer1)']
482     : ----1--0--0---------0---0--
482     : ['chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor1)', '~promise(acceptor1,proposer2)', '~start(proposer0)']
num_forall :   0
num_exists :   0
num_literals : 0
quantified form : None
qcost : 0


=== Prime Orbit 31 =====================
size : 18
num_suborbits: 1
483 (*) : ---0--1--0---------------00
483     : ['chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~didNotPromise(acceptor0)', '~start(proposer1)', '~start(proposer2)']
484     : ----0--1-0--------------0-0
484     : ['chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~didNotPromise(acceptor0)', '~start(proposer0)', '~start(proposer2)']
485     : -----0--10--------------00-
485     : ['chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~didNotPromise(acceptor0)', '~start(proposer0)', '~start(proposer1)']
486     : 0-----1--0---------------00
486     : ['chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~didNotPromise(acceptor0)', '~start(proposer1)', '~start(proposer2)']
487     : -0-----1-0--------------0-0
487     : ['chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~didNotPromise(acceptor0)', '~start(proposer0)', '~start(proposer2)']
488     : --0-----10--------------00-
488     : ['chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~didNotPromise(acceptor0)', '~start(proposer0)', '~start(proposer1)']
489     : ---1--0---0--------------00
489     : ['chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor1)', '~start(proposer1)', '~start(proposer2)']
490     : ----1--0--0-------------0-0
490     : ['chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor1)', '~start(proposer0)', '~start(proposer2)']
491     : -----1--0-0-------------00-
491     : ['chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor1)', '~start(proposer0)', '~start(proposer1)']
492     : 0--1------0--------------00
492     : ['chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~didNotPromise(acceptor1)', '~start(proposer1)', '~start(proposer2)']
493     : -0--1-----0-------------0-0
493     : ['chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~didNotPromise(acceptor1)', '~start(proposer0)', '~start(proposer2)']
494     : --0--1----0-------------00-
494     : ['chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~didNotPromise(acceptor1)', '~start(proposer0)', '~start(proposer1)']
495     : 1-----0----0-------------00
495     : ['chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor2)', '~start(proposer1)', '~start(proposer2)']
496     : -1-----0---0------------0-0
496     : ['chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor2)', '~start(proposer0)', '~start(proposer2)']
497     : --1-----0--0------------00-
497     : ['chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor2)', '~start(proposer0)', '~start(proposer1)']
498     : 1--0-------0-------------00
498     : ['chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~didNotPromise(acceptor2)', '~start(proposer1)', '~start(proposer2)']
499     : -1--0------0------------0-0
499     : ['chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~didNotPromise(acceptor2)', '~start(proposer0)', '~start(proposer2)']
500     : --1--0-----0------------00-
500     : ['chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~didNotPromise(acceptor2)', '~start(proposer0)', '~start(proposer1)']
num_forall :   0
num_exists :   0
num_literals : 0
quantified form : None
qcost : 0


=== Prime Orbit 32 =====================
size : 9
num_suborbits: 1
501 (*) : ---0-----0-0-------------00
501     : ['~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor2)', '~start(proposer1)', '~start(proposer2)']
502     : ----0----0-0------------0-0
502     : ['~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor2)', '~start(proposer0)', '~start(proposer2)']
503     : -----0---0-0------------00-
503     : ['~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor2)', '~start(proposer0)', '~start(proposer1)']
504     : 0--------00--------------00
504     : ['~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~start(proposer1)', '~start(proposer2)']
505     : -0-------00-------------0-0
505     : ['~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~start(proposer0)', '~start(proposer2)']
506     : --0------00-------------00-
506     : ['~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~start(proposer0)', '~start(proposer1)']
507     : ------0---00-------------00
507     : ['~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~start(proposer1)', '~start(proposer2)']
508     : -------0--00------------0-0
508     : ['~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~start(proposer0)', '~start(proposer2)']
509     : --------0-00------------00-
509     : ['~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~start(proposer0)', '~start(proposer1)']
num_forall :   0
num_exists :   0
num_literals : 0
quantified form : None
qcost : 0


=== Prime Orbit 33 =====================
size : 18
num_suborbits: 1
510 (*) : 0--------0--------1------00
510     : ['promise(acceptor1,proposer0)', '~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~didNotPromise(acceptor0)', '~start(proposer1)', '~start(proposer2)']
511     : -0-------0---------1----0-0
511     : ['promise(acceptor1,proposer1)', '~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~didNotPromise(acceptor0)', '~start(proposer0)', '~start(proposer2)']
512     : --0------0----------1---00-
512     : ['promise(acceptor1,proposer2)', '~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~didNotPromise(acceptor0)', '~start(proposer0)', '~start(proposer1)']
513     : ---0-----0-----------1---00
513     : ['promise(acceptor2,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~didNotPromise(acceptor0)', '~start(proposer1)', '~start(proposer2)']
514     : ----0----0------------1-0-0
514     : ['promise(acceptor2,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~didNotPromise(acceptor0)', '~start(proposer0)', '~start(proposer2)']
515     : -----0---0-------------100-
515     : ['promise(acceptor2,proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~didNotPromise(acceptor0)', '~start(proposer0)', '~start(proposer1)']
516     : 0---------0----1---------00
516     : ['promise(acceptor0,proposer0)', '~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~didNotPromise(acceptor1)', '~start(proposer1)', '~start(proposer2)']
517     : -0--------0-----1-------0-0
517     : ['promise(acceptor0,proposer1)', '~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~didNotPromise(acceptor1)', '~start(proposer0)', '~start(proposer2)']
518     : --0-------0------1------00-
518     : ['promise(acceptor0,proposer2)', '~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~didNotPromise(acceptor1)', '~start(proposer0)', '~start(proposer1)']
519     : ------0---0----------1---00
519     : ['promise(acceptor2,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor1)', '~start(proposer1)', '~start(proposer2)']
520     : -------0--0-----------1-0-0
520     : ['promise(acceptor2,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor1)', '~start(proposer0)', '~start(proposer2)']
521     : --------0-0------------100-
521     : ['promise(acceptor2,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor1)', '~start(proposer0)', '~start(proposer1)']
522     : ---0-------0---1---------00
522     : ['promise(acceptor0,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~didNotPromise(acceptor2)', '~start(proposer1)', '~start(proposer2)']
523     : ----0------0----1-------0-0
523     : ['promise(acceptor0,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~didNotPromise(acceptor2)', '~start(proposer0)', '~start(proposer2)']
524     : -----0-----0-----1------00-
524     : ['promise(acceptor0,proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~didNotPromise(acceptor2)', '~start(proposer0)', '~start(proposer1)']
525     : ------0----0------1------00
525     : ['promise(acceptor1,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor2)', '~start(proposer1)', '~start(proposer2)']
526     : -------0---0-------1----0-0
526     : ['promise(acceptor1,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor2)', '~start(proposer0)', '~start(proposer2)']
527     : --------0--0--------1---00-
527     : ['promise(acceptor1,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor2)', '~start(proposer0)', '~start(proposer1)']
num_forall :   0
num_exists :   0
num_literals : 0
quantified form : None
qcost : 0


=== Prime Orbit 34 =====================
size : 18
num_suborbits: 1
528 (*) : --------0--0--------100----
528     : ['promise(acceptor1,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor2)', '~promise(acceptor2,proposer0)', '~promise(acceptor2,proposer1)']
529     : -------0---0-------1-0-0---
529     : ['promise(acceptor1,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor2)', '~promise(acceptor2,proposer0)', '~promise(acceptor2,proposer2)']
530     : ------0----0------1---00---
530     : ['promise(acceptor1,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor2)', '~promise(acceptor2,proposer1)', '~promise(acceptor2,proposer2)']
531     : --------0-0-------00---1---
531     : ['promise(acceptor2,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor1)', '~promise(acceptor1,proposer0)', '~promise(acceptor1,proposer1)']
532     : -------0--0-------0-0-1----
532     : ['promise(acceptor2,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor1)', '~promise(acceptor1,proposer0)', '~promise(acceptor1,proposer2)']
533     : ------0---0--------001-----
533     : ['promise(acceptor2,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor1)', '~promise(acceptor1,proposer1)', '~promise(acceptor1,proposer2)']
534     : -----0-----0-----1---00----
534     : ['promise(acceptor0,proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~didNotPromise(acceptor2)', '~promise(acceptor2,proposer0)', '~promise(acceptor2,proposer1)']
535     : ----0------0----1----0-0---
535     : ['promise(acceptor0,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~didNotPromise(acceptor2)', '~promise(acceptor2,proposer0)', '~promise(acceptor2,proposer2)']
536     : ---0-------0---1------00---
536     : ['promise(acceptor0,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~didNotPromise(acceptor2)', '~promise(acceptor2,proposer1)', '~promise(acceptor2,proposer2)']
537     : -----0---0-----00------1---
537     : ['promise(acceptor2,proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~didNotPromise(acceptor0)', '~promise(acceptor0,proposer0)', '~promise(acceptor0,proposer1)']
538     : ----0----0-----0-0----1----
538     : ['promise(acceptor2,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~didNotPromise(acceptor0)', '~promise(acceptor0,proposer0)', '~promise(acceptor0,proposer2)']
539     : ---0-----0------00---1-----
539     : ['promise(acceptor2,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~didNotPromise(acceptor0)', '~promise(acceptor0,proposer1)', '~promise(acceptor0,proposer2)']
540     : --0-------0------100-------
540     : ['promise(acceptor0,proposer2)', '~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~didNotPromise(acceptor1)', '~promise(acceptor1,proposer0)', '~promise(acceptor1,proposer1)']
541     : -0--------0-----1-0-0------
541     : ['promise(acceptor0,proposer1)', '~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~didNotPromise(acceptor1)', '~promise(acceptor1,proposer0)', '~promise(acceptor1,proposer2)']
542     : 0---------0----1---00------
542     : ['promise(acceptor0,proposer0)', '~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~didNotPromise(acceptor1)', '~promise(acceptor1,proposer1)', '~promise(acceptor1,proposer2)']
543     : --0------0-----00---1------
543     : ['promise(acceptor1,proposer2)', '~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~didNotPromise(acceptor0)', '~promise(acceptor0,proposer0)', '~promise(acceptor0,proposer1)']
544     : -0-------0-----0-0-1-------
544     : ['promise(acceptor1,proposer1)', '~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~didNotPromise(acceptor0)', '~promise(acceptor0,proposer0)', '~promise(acceptor0,proposer2)']
545     : 0--------0------001--------
545     : ['promise(acceptor1,proposer0)', '~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~didNotPromise(acceptor0)', '~promise(acceptor0,proposer1)', '~promise(acceptor0,proposer2)']
num_forall :   0
num_exists :   0
num_literals : 0
quantified form : None
qcost : 0


=== Prime Orbit 35 =====================
size : 18
num_suborbits: 1
546 (*) : 1-----0----0----------00---
546     : ['chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor2)', '~promise(acceptor2,proposer1)', '~promise(acceptor2,proposer2)']
547     : -1-----0---0---------0-0---
547     : ['chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor2)', '~promise(acceptor2,proposer0)', '~promise(acceptor2,proposer2)']
548     : --1-----0--0---------00----
548     : ['chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor2)', '~promise(acceptor2,proposer0)', '~promise(acceptor2,proposer1)']
549     : ---1--0---0--------00------
549     : ['chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor1)', '~promise(acceptor1,proposer1)', '~promise(acceptor1,proposer2)']
550     : ----1--0--0-------0-0------
550     : ['chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor1)', '~promise(acceptor1,proposer0)', '~promise(acceptor1,proposer2)']
551     : -----1--0-0-------00-------
551     : ['chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor1)', '~promise(acceptor1,proposer0)', '~promise(acceptor1,proposer1)']
552     : 1--0-------0----------00---
552     : ['chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~didNotPromise(acceptor2)', '~promise(acceptor2,proposer1)', '~promise(acceptor2,proposer2)']
553     : -1--0------0---------0-0---
553     : ['chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~didNotPromise(acceptor2)', '~promise(acceptor2,proposer0)', '~promise(acceptor2,proposer2)']
554     : --1--0-----0---------00----
554     : ['chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~didNotPromise(acceptor2)', '~promise(acceptor2,proposer0)', '~promise(acceptor2,proposer1)']
555     : ---0--1--0------00---------
555     : ['chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~didNotPromise(acceptor0)', '~promise(acceptor0,proposer1)', '~promise(acceptor0,proposer2)']
556     : ----0--1-0-----0-0---------
556     : ['chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~didNotPromise(acceptor0)', '~promise(acceptor0,proposer0)', '~promise(acceptor0,proposer2)']
557     : -----0--10-----00----------
557     : ['chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~didNotPromise(acceptor0)', '~promise(acceptor0,proposer0)', '~promise(acceptor0,proposer1)']
558     : 0--1------0--------00------
558     : ['chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~didNotPromise(acceptor1)', '~promise(acceptor1,proposer1)', '~promise(acceptor1,proposer2)']
559     : -0--1-----0-------0-0------
559     : ['chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~didNotPromise(acceptor1)', '~promise(acceptor1,proposer0)', '~promise(acceptor1,proposer2)']
560     : --0--1----0-------00-------
560     : ['chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~didNotPromise(acceptor1)', '~promise(acceptor1,proposer0)', '~promise(acceptor1,proposer1)']
561     : 0-----1--0------00---------
561     : ['chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~didNotPromise(acceptor0)', '~promise(acceptor0,proposer1)', '~promise(acceptor0,proposer2)']
562     : -0-----1-0-----0-0---------
562     : ['chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~didNotPromise(acceptor0)', '~promise(acceptor0,proposer0)', '~promise(acceptor0,proposer2)']
563     : --0-----10-----00----------
563     : ['chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~didNotPromise(acceptor0)', '~promise(acceptor0,proposer0)', '~promise(acceptor0,proposer1)']
num_forall :   0
num_exists :   0
num_literals : 0
quantified form : None
qcost : 0


=== Prime Orbit 36 =====================
size : 18
num_suborbits: 1
564 (*) : 0--0-----0--1---0---------0
564     : ['leader(proposer0)', '~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~didNotPromise(acceptor0)', '~promise(acceptor0,proposer1)', '~start(proposer2)']
565     : 0--0-----0--1----0-------0-
565     : ['leader(proposer0)', '~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~didNotPromise(acceptor0)', '~promise(acceptor0,proposer2)', '~start(proposer1)']
566     : -0--0----0---1-0----------0
566     : ['leader(proposer1)', '~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~didNotPromise(acceptor0)', '~promise(acceptor0,proposer0)', '~start(proposer2)']
567     : -0--0----0---1---0------0--
567     : ['leader(proposer1)', '~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~didNotPromise(acceptor0)', '~promise(acceptor0,proposer2)', '~start(proposer0)']
568     : --0--0---0----10---------0-
568     : ['leader(proposer2)', '~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~didNotPromise(acceptor0)', '~promise(acceptor0,proposer0)', '~start(proposer1)']
569     : --0--0---0----1-0-------0--
569     : ['leader(proposer2)', '~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~didNotPromise(acceptor0)', '~promise(acceptor0,proposer1)', '~start(proposer0)']
570     : 0-----0---0-1------0------0
570     : ['leader(proposer0)', '~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor1)', '~promise(acceptor1,proposer1)', '~start(proposer2)']
571     : 0-----0---0-1-------0----0-
571     : ['leader(proposer0)', '~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor1)', '~promise(acceptor1,proposer2)', '~start(proposer1)']
572     : -0-----0--0--1----0-------0
572     : ['leader(proposer1)', '~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor1)', '~promise(acceptor1,proposer0)', '~start(proposer2)']
573     : -0-----0--0--1------0---0--
573     : ['leader(proposer1)', '~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor1)', '~promise(acceptor1,proposer2)', '~start(proposer0)']
574     : --0-----0-0---1---0------0-
574     : ['leader(proposer2)', '~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor1)', '~promise(acceptor1,proposer0)', '~start(proposer1)']
575     : --0-----0-0---1----0----0--
575     : ['leader(proposer2)', '~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor1)', '~promise(acceptor1,proposer1)', '~start(proposer0)']
576     : ---0--0----01---------0---0
576     : ['leader(proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor2)', '~promise(acceptor2,proposer1)', '~start(proposer2)']
577     : ---0--0----01----------0-0-
577     : ['leader(proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor2)', '~promise(acceptor2,proposer2)', '~start(proposer1)']
578     : ----0--0---0-1-------0----0
578     : ['leader(proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor2)', '~promise(acceptor2,proposer0)', '~start(proposer2)']
579     : ----0--0---0-1---------00--
579     : ['leader(proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor2)', '~promise(acceptor2,proposer2)', '~start(proposer0)']
580     : -----0--0--0--1------0---0-
580     : ['leader(proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor2)', '~promise(acceptor2,proposer0)', '~start(proposer1)']
581     : -----0--0--0--1-------0-0--
581     : ['leader(proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor2)', '~promise(acceptor2,proposer1)', '~start(proposer0)']
num_forall :   0
num_exists :   0
num_literals : 0
quantified form : None
qcost : 0


=== Prime Orbit 37 =====================
size : 9
num_suborbits: 1
582 (*) : ---0--0----01------------00
582     : ['leader(proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor2)', '~start(proposer1)', '~start(proposer2)']
583     : ----0--0---0-1----------0-0
583     : ['leader(proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor2)', '~start(proposer0)', '~start(proposer2)']
584     : -----0--0--0--1---------00-
584     : ['leader(proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor2)', '~start(proposer0)', '~start(proposer1)']
585     : 0-----0---0-1------------00
585     : ['leader(proposer0)', '~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor1)', '~start(proposer1)', '~start(proposer2)']
586     : -0-----0--0--1----------0-0
586     : ['leader(proposer1)', '~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor1)', '~start(proposer0)', '~start(proposer2)']
587     : --0-----0-0---1---------00-
587     : ['leader(proposer2)', '~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor1)', '~start(proposer0)', '~start(proposer1)']
588     : 0--0-----0--1------------00
588     : ['leader(proposer0)', '~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~didNotPromise(acceptor0)', '~start(proposer1)', '~start(proposer2)']
589     : -0--0----0---1----------0-0
589     : ['leader(proposer1)', '~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~didNotPromise(acceptor0)', '~start(proposer0)', '~start(proposer2)']
590     : --0--0---0----1---------00-
590     : ['leader(proposer2)', '~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~didNotPromise(acceptor0)', '~start(proposer0)', '~start(proposer1)']
num_forall :   0
num_exists :   0
num_literals : 0
quantified form : None
qcost : 0


=== Prime Orbit 38 =====================
size : 18
num_suborbits: 1
591 (*) : ------0---00-------0--0---0
591     : ['~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor1,proposer1)', '~promise(acceptor2,proposer1)', '~start(proposer2)']
592     : ------0---00--------0--0-0-
592     : ['~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor1,proposer2)', '~promise(acceptor2,proposer2)', '~start(proposer1)']
593     : -------0--00------0--0----0
593     : ['~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor1,proposer0)', '~promise(acceptor2,proposer0)', '~start(proposer2)']
594     : -------0--00--------0--00--
594     : ['~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor1,proposer2)', '~promise(acceptor2,proposer2)', '~start(proposer0)']
595     : --------0-00------0--0---0-
595     : ['~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor1,proposer0)', '~promise(acceptor2,proposer0)', '~start(proposer1)']
596     : --------0-00-------0--0-0--
596     : ['~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor1,proposer1)', '~promise(acceptor2,proposer1)', '~start(proposer0)']
597     : ---0-----0-0----0-----0---0
597     : ['~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor2)', '~promise(acceptor0,proposer1)', '~promise(acceptor2,proposer1)', '~start(proposer2)']
598     : ---0-----0-0-----0-----0-0-
598     : ['~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor2)', '~promise(acceptor0,proposer2)', '~promise(acceptor2,proposer2)', '~start(proposer1)']
599     : ----0----0-0---0-----0----0
599     : ['~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor2)', '~promise(acceptor0,proposer0)', '~promise(acceptor2,proposer0)', '~start(proposer2)']
600     : ----0----0-0-----0-----00--
600     : ['~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor2)', '~promise(acceptor0,proposer2)', '~promise(acceptor2,proposer2)', '~start(proposer0)']
601     : -----0---0-0---0-----0---0-
601     : ['~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor2)', '~promise(acceptor0,proposer0)', '~promise(acceptor2,proposer0)', '~start(proposer1)']
602     : -----0---0-0----0-----0-0--
602     : ['~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor2)', '~promise(acceptor0,proposer1)', '~promise(acceptor2,proposer1)', '~start(proposer0)']
603     : 0--------00-----0--0------0
603     : ['~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~promise(acceptor0,proposer1)', '~promise(acceptor1,proposer1)', '~start(proposer2)']
604     : 0--------00------0--0----0-
604     : ['~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~promise(acceptor0,proposer2)', '~promise(acceptor1,proposer2)', '~start(proposer1)']
605     : -0-------00----0--0-------0
605     : ['~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~promise(acceptor0,proposer0)', '~promise(acceptor1,proposer0)', '~start(proposer2)']
606     : -0-------00------0--0---0--
606     : ['~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~promise(acceptor0,proposer2)', '~promise(acceptor1,proposer2)', '~start(proposer0)']
607     : --0------00----0--0------0-
607     : ['~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~promise(acceptor0,proposer0)', '~promise(acceptor1,proposer0)', '~start(proposer1)']
608     : --0------00-----0--0----0--
608     : ['~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~promise(acceptor0,proposer1)', '~promise(acceptor1,proposer1)', '~start(proposer0)']
num_forall :   0
num_exists :   0
num_literals : 0
quantified form : None
qcost : 0


=== Prime Orbit 39 =====================
size : 18
num_suborbits: 1
609 (*) : -0----0---0-----1----1----0
609     : ['promise(acceptor0,proposer1)', 'promise(acceptor2,proposer0)', '~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor1)', '~start(proposer2)']
610     : --0---0---0------1---1---0-
610     : ['promise(acceptor0,proposer2)', 'promise(acceptor2,proposer0)', '~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor1)', '~start(proposer1)']
611     : 0------0--0----1------1---0
611     : ['promise(acceptor0,proposer0)', 'promise(acceptor2,proposer1)', '~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor1)', '~start(proposer2)']
612     : --0----0--0------1----1-0--
612     : ['promise(acceptor0,proposer2)', 'promise(acceptor2,proposer1)', '~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor1)', '~start(proposer0)']
613     : 0-------0-0----1-------1-0-
613     : ['promise(acceptor0,proposer0)', 'promise(acceptor2,proposer2)', '~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor1)', '~start(proposer1)']
614     : -0------0-0-----1------10--
614     : ['promise(acceptor0,proposer1)', 'promise(acceptor2,proposer2)', '~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor1)', '~start(proposer0)']
615     : ----0-0----0----1-1-------0
615     : ['promise(acceptor0,proposer1)', 'promise(acceptor1,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor2)', '~start(proposer2)']
616     : -----00----0-----11------0-
616     : ['promise(acceptor0,proposer2)', 'promise(acceptor1,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor2)', '~start(proposer1)']
617     : ---0---0---0---1---1------0
617     : ['promise(acceptor0,proposer0)', 'promise(acceptor1,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor2)', '~start(proposer2)']
618     : -----0-0---0-----1-1----0--
618     : ['promise(acceptor0,proposer2)', 'promise(acceptor1,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor2)', '~start(proposer0)']
619     : ---0----0--0---1----1----0-
619     : ['promise(acceptor0,proposer0)', 'promise(acceptor1,proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor2)', '~start(proposer1)']
620     : ----0---0--0----1---1---0--
620     : ['promise(acceptor0,proposer1)', 'promise(acceptor1,proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor2)', '~start(proposer0)']
621     : -0-0-----0---------1-1----0
621     : ['promise(acceptor1,proposer1)', 'promise(acceptor2,proposer0)', '~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~didNotPromise(acceptor0)', '~start(proposer2)']
622     : --00-----0----------11---0-
622     : ['promise(acceptor1,proposer2)', 'promise(acceptor2,proposer0)', '~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~didNotPromise(acceptor0)', '~start(proposer1)']
623     : 0---0----0--------1---1---0
623     : ['promise(acceptor1,proposer0)', 'promise(acceptor2,proposer1)', '~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~didNotPromise(acceptor0)', '~start(proposer2)']
624     : --0-0----0----------1-1-0--
624     : ['promise(acceptor1,proposer2)', 'promise(acceptor2,proposer1)', '~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~didNotPromise(acceptor0)', '~start(proposer0)']
625     : 0----0---0--------1----1-0-
625     : ['promise(acceptor1,proposer0)', 'promise(acceptor2,proposer2)', '~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~didNotPromise(acceptor0)', '~start(proposer1)']
626     : -0---0---0---------1---10--
626     : ['promise(acceptor1,proposer1)', 'promise(acceptor2,proposer2)', '~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~didNotPromise(acceptor0)', '~start(proposer0)']
num_forall :   0
num_exists :   0
num_literals : 0
quantified form : None
qcost : 0


=== Prime Orbit 40 =====================
size : 18
num_suborbits: 1
627 (*) : --0---0---0------1-0-1-----
627     : ['promise(acceptor0,proposer2)', 'promise(acceptor2,proposer0)', '~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor1)', '~promise(acceptor1,proposer1)']
628     : -0----0---0-----1---01-----
628     : ['promise(acceptor0,proposer1)', 'promise(acceptor2,proposer0)', '~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor1)', '~promise(acceptor1,proposer2)']
629     : --0----0--0------10---1----
629     : ['promise(acceptor0,proposer2)', 'promise(acceptor2,proposer1)', '~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor1)', '~promise(acceptor1,proposer0)']
630     : 0------0--0----1----0-1----
630     : ['promise(acceptor0,proposer0)', 'promise(acceptor2,proposer1)', '~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor1)', '~promise(acceptor1,proposer2)']
631     : -0------0-0-----1-0----1---
631     : ['promise(acceptor0,proposer1)', 'promise(acceptor2,proposer2)', '~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor1)', '~promise(acceptor1,proposer0)']
632     : 0-------0-0----1---0---1---
632     : ['promise(acceptor0,proposer0)', 'promise(acceptor2,proposer2)', '~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor1)', '~promise(acceptor1,proposer1)']
633     : -----00----0-----11---0----
633     : ['promise(acceptor0,proposer2)', 'promise(acceptor1,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor2)', '~promise(acceptor2,proposer1)']
634     : ----0-0----0----1-1----0---
634     : ['promise(acceptor0,proposer1)', 'promise(acceptor1,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor2)', '~promise(acceptor2,proposer2)']
635     : -----0-0---0-----1-1-0-----
635     : ['promise(acceptor0,proposer2)', 'promise(acceptor1,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor2)', '~promise(acceptor2,proposer0)']
636     : ---0---0---0---1---1---0---
636     : ['promise(acceptor0,proposer0)', 'promise(acceptor1,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor2)', '~promise(acceptor2,proposer2)']
637     : ----0---0--0----1---10-----
637     : ['promise(acceptor0,proposer1)', 'promise(acceptor1,proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor2)', '~promise(acceptor2,proposer0)']
638     : ---0----0--0---1----1-0----
638     : ['promise(acceptor0,proposer0)', 'promise(acceptor1,proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor2)', '~promise(acceptor2,proposer1)']
639     : --00-----0------0---11-----
639     : ['promise(acceptor1,proposer2)', 'promise(acceptor2,proposer0)', '~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~didNotPromise(acceptor0)', '~promise(acceptor0,proposer1)']
640     : -0-0-----0-------0-1-1-----
640     : ['promise(acceptor1,proposer1)', 'promise(acceptor2,proposer0)', '~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~didNotPromise(acceptor0)', '~promise(acceptor0,proposer2)']
641     : --0-0----0-----0----1-1----
641     : ['promise(acceptor1,proposer2)', 'promise(acceptor2,proposer1)', '~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~didNotPromise(acceptor0)', '~promise(acceptor0,proposer0)']
642     : 0---0----0-------01---1----
642     : ['promise(acceptor1,proposer0)', 'promise(acceptor2,proposer1)', '~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~didNotPromise(acceptor0)', '~promise(acceptor0,proposer2)']
643     : -0---0---0-----0---1---1---
643     : ['promise(acceptor1,proposer1)', 'promise(acceptor2,proposer2)', '~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~didNotPromise(acceptor0)', '~promise(acceptor0,proposer0)']
644     : 0----0---0------0-1----1---
644     : ['promise(acceptor1,proposer0)', 'promise(acceptor2,proposer2)', '~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~didNotPromise(acceptor0)', '~promise(acceptor0,proposer1)']
num_forall :   0
num_exists :   0
num_literals : 0
quantified form : None
qcost : 0


=== Prime Orbit 41 =====================
size : 9
num_suborbits: 1
645 (*) : --0-----0-0---1---00-------
645     : ['leader(proposer2)', '~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor1)', '~promise(acceptor1,proposer0)', '~promise(acceptor1,proposer1)']
646     : -0-----0--0--1----0-0------
646     : ['leader(proposer1)', '~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor1)', '~promise(acceptor1,proposer0)', '~promise(acceptor1,proposer2)']
647     : 0-----0---0-1------00------
647     : ['leader(proposer0)', '~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor1)', '~promise(acceptor1,proposer1)', '~promise(acceptor1,proposer2)']
648     : -----0--0--0--1------00----
648     : ['leader(proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor2)', '~promise(acceptor2,proposer0)', '~promise(acceptor2,proposer1)']
649     : ----0--0---0-1-------0-0---
649     : ['leader(proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor2)', '~promise(acceptor2,proposer0)', '~promise(acceptor2,proposer2)']
650     : ---0--0----01---------00---
650     : ['leader(proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor2)', '~promise(acceptor2,proposer1)', '~promise(acceptor2,proposer2)']
651     : --0--0---0----100----------
651     : ['leader(proposer2)', '~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~didNotPromise(acceptor0)', '~promise(acceptor0,proposer0)', '~promise(acceptor0,proposer1)']
652     : -0--0----0---1-0-0---------
652     : ['leader(proposer1)', '~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~didNotPromise(acceptor0)', '~promise(acceptor0,proposer0)', '~promise(acceptor0,proposer2)']
653     : 0--0-----0--1---00---------
653     : ['leader(proposer0)', '~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~didNotPromise(acceptor0)', '~promise(acceptor0,proposer1)', '~promise(acceptor0,proposer2)']
num_forall :   0
num_exists :   0
num_literals : 0
quantified form : None
qcost : 0


=== Prime Orbit 42 =====================
size : 9
num_suborbits: 1
654 (*) : -----0---0-0---00----00----
654     : ['~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor2)', '~promise(acceptor0,proposer0)', '~promise(acceptor0,proposer1)', '~promise(acceptor2,proposer0)', '~promise(acceptor2,proposer1)']
655     : ----0----0-0---0-0---0-0---
655     : ['~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor2)', '~promise(acceptor0,proposer0)', '~promise(acceptor0,proposer2)', '~promise(acceptor2,proposer0)', '~promise(acceptor2,proposer2)']
656     : ---0-----0-0----00----00---
656     : ['~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor2)', '~promise(acceptor0,proposer1)', '~promise(acceptor0,proposer2)', '~promise(acceptor2,proposer1)', '~promise(acceptor2,proposer2)']
657     : --0------00----00-00-------
657     : ['~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~promise(acceptor0,proposer0)', '~promise(acceptor0,proposer1)', '~promise(acceptor1,proposer0)', '~promise(acceptor1,proposer1)']
658     : -0-------00----0-00-0------
658     : ['~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~promise(acceptor0,proposer0)', '~promise(acceptor0,proposer2)', '~promise(acceptor1,proposer0)', '~promise(acceptor1,proposer2)']
659     : 0--------00-----00-00------
659     : ['~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~promise(acceptor0,proposer1)', '~promise(acceptor0,proposer2)', '~promise(acceptor1,proposer1)', '~promise(acceptor1,proposer2)']
660     : --------0-00------00-00----
660     : ['~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor1,proposer0)', '~promise(acceptor1,proposer1)', '~promise(acceptor2,proposer0)', '~promise(acceptor2,proposer1)']
661     : -------0--00------0-00-0---
661     : ['~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor1,proposer0)', '~promise(acceptor1,proposer2)', '~promise(acceptor2,proposer0)', '~promise(acceptor2,proposer2)']
662     : ------0---00-------00-00---
662     : ['~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor1,proposer1)', '~promise(acceptor1,proposer2)', '~promise(acceptor2,proposer1)', '~promise(acceptor2,proposer2)']
num_forall :   0
num_exists :   0
num_literals : 0
quantified form : None
qcost : 0


=== Prime Orbit 43 =====================
size : 36
num_suborbits: 1
663 (*) : -----00--0-0---0--1------0-
663     : ['promise(acceptor1,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor2)', '~promise(acceptor0,proposer0)', '~start(proposer1)']
664     : ----0-0--0-0---0--1-------0
664     : ['promise(acceptor1,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor2)', '~promise(acceptor0,proposer0)', '~start(proposer2)']
665     : -----0-0-0-0----0--1----0--
665     : ['promise(acceptor1,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor2)', '~promise(acceptor0,proposer1)', '~start(proposer0)']
666     : ---0---0-0-0----0--1------0
666     : ['promise(acceptor1,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor2)', '~promise(acceptor0,proposer1)', '~start(proposer2)']
667     : ----0---00-0-----0--1---0--
667     : ['promise(acceptor1,proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor2)', '~promise(acceptor0,proposer2)', '~start(proposer0)']
668     : ---0----00-0-----0--1----0-
668     : ['promise(acceptor1,proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor2)', '~promise(acceptor0,proposer2)', '~start(proposer1)']
669     : --0---0--00----0-----1---0-
669     : ['promise(acceptor2,proposer0)', '~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~promise(acceptor0,proposer0)', '~start(proposer1)']
670     : -0----0--00----0-----1----0
670     : ['promise(acceptor2,proposer0)', '~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~promise(acceptor0,proposer0)', '~start(proposer2)']
671     : --0----0-00-----0-----1-0--
671     : ['promise(acceptor2,proposer1)', '~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~promise(acceptor0,proposer1)', '~start(proposer0)']
672     : 0------0-00-----0-----1---0
672     : ['promise(acceptor2,proposer1)', '~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~promise(acceptor0,proposer1)', '~start(proposer2)']
673     : -0------000------0-----10--
673     : ['promise(acceptor2,proposer2)', '~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~promise(acceptor0,proposer2)', '~start(proposer0)']
674     : 0-------000------0-----1-0-
674     : ['promise(acceptor2,proposer2)', '~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~promise(acceptor0,proposer2)', '~start(proposer1)']
675     : ---0----0-00---1--0------0-
675     : ['promise(acceptor0,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor1,proposer0)', '~start(proposer1)']
676     : ---0---0--00---1--0-------0
676     : ['promise(acceptor0,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor1,proposer0)', '~start(proposer2)']
677     : ----0---0-00----1--0----0--
677     : ['promise(acceptor0,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor1,proposer1)', '~start(proposer0)']
678     : ----0-0---00----1--0------0
678     : ['promise(acceptor0,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor1,proposer1)', '~start(proposer2)']
679     : -----0-0--00-----1--0---0--
679     : ['promise(acceptor0,proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor1,proposer2)', '~start(proposer0)']
680     : -----00---00-----1--0----0-
680     : ['promise(acceptor0,proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor1,proposer2)', '~start(proposer1)']
681     : --00-----00-------0--1---0-
681     : ['promise(acceptor2,proposer0)', '~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~promise(acceptor1,proposer0)', '~start(proposer1)']
682     : -0-0-----00-------0--1----0
682     : ['promise(acceptor2,proposer0)', '~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~promise(acceptor1,proposer0)', '~start(proposer2)']
683     : --0-0----00--------0--1-0--
683     : ['promise(acceptor2,proposer1)', '~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~promise(acceptor1,proposer1)', '~start(proposer0)']
684     : 0---0----00--------0--1---0
684     : ['promise(acceptor2,proposer1)', '~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~promise(acceptor1,proposer1)', '~start(proposer2)']
685     : -0---0---00---------0--10--
685     : ['promise(acceptor2,proposer2)', '~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~promise(acceptor1,proposer2)', '~start(proposer0)']
686     : 0----0---00---------0--1-0-
686     : ['promise(acceptor2,proposer2)', '~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~promise(acceptor1,proposer2)', '~start(proposer1)']
687     : 0-------0-00---1-----0---0-
687     : ['promise(acceptor0,proposer0)', '~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor2,proposer0)', '~start(proposer1)']
688     : 0------0--00---1-----0----0
688     : ['promise(acceptor0,proposer0)', '~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor2,proposer0)', '~start(proposer2)']
689     : -0------0-00----1-----0-0--
689     : ['promise(acceptor0,proposer1)', '~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor2,proposer1)', '~start(proposer0)']
690     : -0----0---00----1-----0---0
690     : ['promise(acceptor0,proposer1)', '~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor2,proposer1)', '~start(proposer2)']
691     : --0----0--00-----1-----00--
691     : ['promise(acceptor0,proposer2)', '~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor2,proposer2)', '~start(proposer0)']
692     : --0---0---00-----1-----0-0-
692     : ['promise(acceptor0,proposer2)', '~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor2,proposer2)', '~start(proposer1)']
693     : 0----0---0-0------1--0---0-
693     : ['promise(acceptor1,proposer0)', '~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor2)', '~promise(acceptor2,proposer0)', '~start(proposer1)']
694     : 0---0----0-0------1--0----0
694     : ['promise(acceptor1,proposer0)', '~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor2)', '~promise(acceptor2,proposer0)', '~start(proposer2)']
695     : -0---0---0-0-------1--0-0--
695     : ['promise(acceptor1,proposer1)', '~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor2)', '~promise(acceptor2,proposer1)', '~start(proposer0)']
696     : -0-0-----0-0-------1--0---0
696     : ['promise(acceptor1,proposer1)', '~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor2)', '~promise(acceptor2,proposer1)', '~start(proposer2)']
697     : --0-0----0-0--------1--00--
697     : ['promise(acceptor1,proposer2)', '~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor2)', '~promise(acceptor2,proposer2)', '~start(proposer0)']
698     : --00-----0-0--------1--0-0-
698     : ['promise(acceptor1,proposer2)', '~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor2)', '~promise(acceptor2,proposer2)', '~start(proposer1)']
num_forall :   0
num_exists :   0
num_literals : 0
quantified form : None
qcost : 0


=== Prime Orbit 44 =====================
size : 18
num_suborbits: 1
699 (*) : 0----00--0-0------1------0-
699     : ['promise(acceptor1,proposer0)', '~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor2)', '~start(proposer1)']
700     : 0---0-0--0-0------1-------0
700     : ['promise(acceptor1,proposer0)', '~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor2)', '~start(proposer2)']
701     : -0---0-0-0-0-------1----0--
701     : ['promise(acceptor1,proposer1)', '~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor2)', '~start(proposer0)']
702     : -0-0---0-0-0-------1------0
702     : ['promise(acceptor1,proposer1)', '~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor2)', '~start(proposer2)']
703     : --0-0---00-0--------1---0--
703     : ['promise(acceptor1,proposer2)', '~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor2)', '~start(proposer0)']
704     : --00----00-0--------1----0-
704     : ['promise(acceptor1,proposer2)', '~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor2)', '~start(proposer1)']
705     : --00--0--00----------1---0-
705     : ['promise(acceptor2,proposer0)', '~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~start(proposer1)']
706     : -0-0--0--00----------1----0
706     : ['promise(acceptor2,proposer0)', '~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~start(proposer2)']
707     : --0-0--0-00-----------1-0--
707     : ['promise(acceptor2,proposer1)', '~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~start(proposer0)']
708     : 0---0--0-00-----------1---0
708     : ['promise(acceptor2,proposer1)', '~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~start(proposer2)']
709     : -0---0--000------------10--
709     : ['promise(acceptor2,proposer2)', '~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~start(proposer0)']
710     : 0----0--000------------1-0-
710     : ['promise(acceptor2,proposer2)', '~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~start(proposer1)']
711     : 0--0----0-00---1---------0-
711     : ['promise(acceptor0,proposer0)', '~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~start(proposer1)']
712     : 0--0---0--00---1----------0
712     : ['promise(acceptor0,proposer0)', '~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~start(proposer2)']
713     : -0--0---0-00----1-------0--
713     : ['promise(acceptor0,proposer1)', '~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~start(proposer0)']
714     : -0--0-0---00----1---------0
714     : ['promise(acceptor0,proposer1)', '~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~start(proposer2)']
715     : --0--0-0--00-----1------0--
715     : ['promise(acceptor0,proposer2)', '~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~start(proposer0)']
716     : --0--00---00-----1-------0-
716     : ['promise(acceptor0,proposer2)', '~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~start(proposer1)']
num_forall :   0
num_exists :   0
num_literals : 0
quantified form : None
qcost : 0


=== Prime Orbit 45 =====================
size : 18
num_suborbits: 1
717 (*) : 0---0--0-000---------0----0
717     : ['~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor2,proposer0)', '~start(proposer2)']
718     : 0----0--0000---------0---0-
718     : ['~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor2,proposer0)', '~start(proposer1)']
719     : -0-0--0--000----------0---0
719     : ['~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor2,proposer1)', '~start(proposer2)']
720     : -0---0--0000----------0-0--
720     : ['~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor2,proposer1)', '~start(proposer0)']
721     : --00--0--000-----------0-0-
721     : ['~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor2,proposer2)', '~start(proposer1)']
722     : --0-0--0-000-----------00--
722     : ['~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor2,proposer2)', '~start(proposer0)']
723     : -0-0---0-000------0-------0
723     : ['~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor1,proposer0)', '~start(proposer2)']
724     : --00----0000------0------0-
724     : ['~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor1,proposer0)', '~start(proposer1)']
725     : 0---0-0--000-------0------0
725     : ['~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor1,proposer1)', '~start(proposer2)']
726     : --0-0---0000-------0----0--
726     : ['~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor1,proposer1)', '~start(proposer0)']
727     : 0----00--000--------0----0-
727     : ['~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor1,proposer2)', '~start(proposer1)']
728     : -0---0-0-000--------0---0--
728     : ['~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor1,proposer2)', '~start(proposer0)']
729     : -0--0-0--000---0----------0
729     : ['~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor0,proposer0)', '~start(proposer2)']
730     : --0--00--000---0---------0-
730     : ['~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor0,proposer0)', '~start(proposer1)']
731     : 0--0---0-000----0---------0
731     : ['~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor0,proposer1)', '~start(proposer2)']
732     : --0--0-0-000----0-------0--
732     : ['~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor0,proposer1)', '~start(proposer0)']
733     : 0--0----0000-----0-------0-
733     : ['~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor0,proposer2)', '~start(proposer1)']
734     : -0--0---0000-----0------0--
734     : ['~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor0,proposer2)', '~start(proposer0)']
num_forall :   0
num_exists :   0
num_literals : 0
quantified form : None
qcost : 0


=== Prime Orbit 46 =====================
size : 18
num_suborbits: 1
735 (*) : 0---0----000-------0-0----0
735     : ['~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor1,proposer1)', '~promise(acceptor2,proposer0)', '~start(proposer2)']
736     : 0----0---000--------00---0-
736     : ['~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor1,proposer2)', '~promise(acceptor2,proposer0)', '~start(proposer1)']
737     : -0-0-----000------0---0---0
737     : ['~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor1,proposer0)', '~promise(acceptor2,proposer1)', '~start(proposer2)']
738     : -0---0---000--------0-0-0--
738     : ['~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor1,proposer2)', '~promise(acceptor2,proposer1)', '~start(proposer0)']
739     : --00-----000------0----0-0-
739     : ['~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor1,proposer0)', '~promise(acceptor2,proposer2)', '~start(proposer1)']
740     : --0-0----000-------0---00--
740     : ['~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor1,proposer1)', '~promise(acceptor2,proposer2)', '~start(proposer0)']
741     : 0------0-000----0----0----0
741     : ['~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor0,proposer1)', '~promise(acceptor2,proposer0)', '~start(proposer2)']
742     : 0-------0000-----0---0---0-
742     : ['~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor0,proposer2)', '~promise(acceptor2,proposer0)', '~start(proposer1)']
743     : -0----0--000---0------0---0
743     : ['~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor0,proposer0)', '~promise(acceptor2,proposer1)', '~start(proposer2)']
744     : -0------0000-----0----0-0--
744     : ['~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor0,proposer2)', '~promise(acceptor2,proposer1)', '~start(proposer0)']
745     : --0---0--000---0-------0-0-
745     : ['~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor0,proposer0)', '~promise(acceptor2,proposer2)', '~start(proposer1)']
746     : --0----0-000----0------00--
746     : ['~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor0,proposer1)', '~promise(acceptor2,proposer2)', '~start(proposer0)']
747     : ---0---0-000----0-0-------0
747     : ['~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor0,proposer1)', '~promise(acceptor1,proposer0)', '~start(proposer2)']
748     : ---0----0000-----00------0-
748     : ['~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor0,proposer2)', '~promise(acceptor1,proposer0)', '~start(proposer1)']
749     : ----0-0--000---0---0------0
749     : ['~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor0,proposer0)', '~promise(acceptor1,proposer1)', '~start(proposer2)']
750     : ----0---0000-----0-0----0--
750     : ['~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor0,proposer2)', '~promise(acceptor1,proposer1)', '~start(proposer0)']
751     : -----00--000---0----0----0-
751     : ['~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor0,proposer0)', '~promise(acceptor1,proposer2)', '~start(proposer1)']
752     : -----0-0-000----0---0---0--
752     : ['~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor0,proposer1)', '~promise(acceptor1,proposer2)', '~start(proposer0)']
num_forall :   0
num_exists :   0
num_literals : 0
quantified form : None
qcost : 0


=== Prime Orbit 47 =====================
size : 18
num_suborbits: 1
753 (*) : -0-0--0--00------0--01-----
753     : ['promise(acceptor2,proposer0)', '~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~promise(acceptor0,proposer2)', '~promise(acceptor1,proposer2)']
754     : --00--0--00-----0--0-1-----
754     : ['promise(acceptor2,proposer0)', '~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~promise(acceptor0,proposer1)', '~promise(acceptor1,proposer1)']
755     : 0---0--0-00------0--0-1----
755     : ['promise(acceptor2,proposer1)', '~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~promise(acceptor0,proposer2)', '~promise(acceptor1,proposer2)']
756     : --0-0--0-00----0--0---1----
756     : ['promise(acceptor2,proposer1)', '~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~promise(acceptor0,proposer0)', '~promise(acceptor1,proposer0)']
757     : 0----0--000-----0--0---1---
757     : ['promise(acceptor2,proposer2)', '~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~promise(acceptor0,proposer1)', '~promise(acceptor1,proposer1)']
758     : -0---0--000----0--0----1---
758     : ['promise(acceptor2,proposer2)', '~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~promise(acceptor0,proposer0)', '~promise(acceptor1,proposer0)']
759     : 0---0-0--0-0-----01----0---
759     : ['promise(acceptor1,proposer0)', '~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor2)', '~promise(acceptor0,proposer2)', '~promise(acceptor2,proposer2)']
760     : 0----00--0-0----0-1---0----
760     : ['promise(acceptor1,proposer0)', '~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor2)', '~promise(acceptor0,proposer1)', '~promise(acceptor2,proposer1)']
761     : -0-0---0-0-0-----0-1---0---
761     : ['promise(acceptor1,proposer1)', '~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor2)', '~promise(acceptor0,proposer2)', '~promise(acceptor2,proposer2)']
762     : -0---0-0-0-0---0---1-0-----
762     : ['promise(acceptor1,proposer1)', '~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor2)', '~promise(acceptor0,proposer0)', '~promise(acceptor2,proposer0)']
763     : --00----00-0----0---1-0----
763     : ['promise(acceptor1,proposer2)', '~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor2)', '~promise(acceptor0,proposer1)', '~promise(acceptor2,proposer1)']
764     : --0-0---00-0---0----10-----
764     : ['promise(acceptor1,proposer2)', '~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor2)', '~promise(acceptor0,proposer0)', '~promise(acceptor2,proposer0)']
765     : 0--0---0--00---1----0--0---
765     : ['promise(acceptor0,proposer0)', '~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor1,proposer2)', '~promise(acceptor2,proposer2)']
766     : 0--0----0-00---1---0--0----
766     : ['promise(acceptor0,proposer0)', '~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor1,proposer1)', '~promise(acceptor2,proposer1)']
767     : -0--0-0---00----1---0--0---
767     : ['promise(acceptor0,proposer1)', '~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor1,proposer2)', '~promise(acceptor2,proposer2)']
768     : -0--0---0-00----1-0--0-----
768     : ['promise(acceptor0,proposer1)', '~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor1,proposer0)', '~promise(acceptor2,proposer0)']
769     : --0--00---00-----1-0--0----
769     : ['promise(acceptor0,proposer2)', '~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor1,proposer1)', '~promise(acceptor2,proposer1)']
770     : --0--0-0--00-----10--0-----
770     : ['promise(acceptor0,proposer2)', '~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor1,proposer0)', '~promise(acceptor2,proposer0)']
num_forall :   0
num_exists :   0
num_literals : 0
quantified form : None
qcost : 0


=== Prime Orbit 48 =====================
size : 36
num_suborbits: 1
771 (*) : --0---0--00----00--0-1-----
771     : ['promise(acceptor2,proposer0)', '~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~promise(acceptor0,proposer0)', '~promise(acceptor0,proposer1)', '~promise(acceptor1,proposer1)']
772     : -0----0--00----0-0--01-----
772     : ['promise(acceptor2,proposer0)', '~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~promise(acceptor0,proposer0)', '~promise(acceptor0,proposer2)', '~promise(acceptor1,proposer2)']
773     : --0----0-00----00-0---1----
773     : ['promise(acceptor2,proposer1)', '~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~promise(acceptor0,proposer0)', '~promise(acceptor0,proposer1)', '~promise(acceptor1,proposer0)']
774     : 0------0-00-----00--0-1----
774     : ['promise(acceptor2,proposer1)', '~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~promise(acceptor0,proposer1)', '~promise(acceptor0,proposer2)', '~promise(acceptor1,proposer2)']
775     : -0------000----0-00----1---
775     : ['promise(acceptor2,proposer2)', '~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~promise(acceptor0,proposer0)', '~promise(acceptor0,proposer2)', '~promise(acceptor1,proposer0)']
776     : 0-------000-----00-0---1---
776     : ['promise(acceptor2,proposer2)', '~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~promise(acceptor0,proposer1)', '~promise(acceptor0,proposer2)', '~promise(acceptor1,proposer1)']
777     : -----00--0-0---00-1---0----
777     : ['promise(acceptor1,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor2)', '~promise(acceptor0,proposer0)', '~promise(acceptor0,proposer1)', '~promise(acceptor2,proposer1)']
778     : ----0-0--0-0---0-01----0---
778     : ['promise(acceptor1,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor2)', '~promise(acceptor0,proposer0)', '~promise(acceptor0,proposer2)', '~promise(acceptor2,proposer2)']
779     : -----0-0-0-0---00--1-0-----
779     : ['promise(acceptor1,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor2)', '~promise(acceptor0,proposer0)', '~promise(acceptor0,proposer1)', '~promise(acceptor2,proposer0)']
780     : ---0---0-0-0----00-1---0---
780     : ['promise(acceptor1,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor2)', '~promise(acceptor0,proposer1)', '~promise(acceptor0,proposer2)', '~promise(acceptor2,proposer2)']
781     : ----0---00-0---0-0--10-----
781     : ['promise(acceptor1,proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor2)', '~promise(acceptor0,proposer0)', '~promise(acceptor0,proposer2)', '~promise(acceptor2,proposer0)']
782     : ---0----00-0----00--1-0----
782     : ['promise(acceptor1,proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor2)', '~promise(acceptor0,proposer1)', '~promise(acceptor0,proposer2)', '~promise(acceptor2,proposer1)']
783     : --00-----00-----0-00-1-----
783     : ['promise(acceptor2,proposer0)', '~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~promise(acceptor0,proposer1)', '~promise(acceptor1,proposer0)', '~promise(acceptor1,proposer1)']
784     : -0-0-----00------00-01-----
784     : ['promise(acceptor2,proposer0)', '~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~promise(acceptor0,proposer2)', '~promise(acceptor1,proposer0)', '~promise(acceptor1,proposer2)']
785     : --0-0----00----0--00--1----
785     : ['promise(acceptor2,proposer1)', '~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~promise(acceptor0,proposer0)', '~promise(acceptor1,proposer0)', '~promise(acceptor1,proposer1)']
786     : 0---0----00------0-00-1----
786     : ['promise(acceptor2,proposer1)', '~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~promise(acceptor0,proposer2)', '~promise(acceptor1,proposer1)', '~promise(acceptor1,proposer2)']
787     : -0---0---00----0--0-0--1---
787     : ['promise(acceptor2,proposer2)', '~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~promise(acceptor0,proposer0)', '~promise(acceptor1,proposer0)', '~promise(acceptor1,proposer2)']
788     : 0----0---00-----0--00--1---
788     : ['promise(acceptor2,proposer2)', '~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~promise(acceptor0,proposer1)', '~promise(acceptor1,proposer1)', '~promise(acceptor1,proposer2)']
789     : ---0----0-00---1--00--0----
789     : ['promise(acceptor0,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor1,proposer0)', '~promise(acceptor1,proposer1)', '~promise(acceptor2,proposer1)']
790     : ---0---0--00---1--0-0--0---
790     : ['promise(acceptor0,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor1,proposer0)', '~promise(acceptor1,proposer2)', '~promise(acceptor2,proposer2)']
791     : ----0---0-00----1-00-0-----
791     : ['promise(acceptor0,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor1,proposer0)', '~promise(acceptor1,proposer1)', '~promise(acceptor2,proposer0)']
792     : ----0-0---00----1--00--0---
792     : ['promise(acceptor0,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor1,proposer1)', '~promise(acceptor1,proposer2)', '~promise(acceptor2,proposer2)']
793     : -----0-0--00-----10-00-----
793     : ['promise(acceptor0,proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor1,proposer0)', '~promise(acceptor1,proposer2)', '~promise(acceptor2,proposer0)']
794     : -----00---00-----1-00-0----
794     : ['promise(acceptor0,proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor1,proposer1)', '~promise(acceptor1,proposer2)', '~promise(acceptor2,proposer1)']
795     : 0----0---0-0----0-1--00----
795     : ['promise(acceptor1,proposer0)', '~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor2)', '~promise(acceptor0,proposer1)', '~promise(acceptor2,proposer0)', '~promise(acceptor2,proposer1)']
796     : 0---0----0-0-----01--0-0---
796     : ['promise(acceptor1,proposer0)', '~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor2)', '~promise(acceptor0,proposer2)', '~promise(acceptor2,proposer0)', '~promise(acceptor2,proposer2)']
797     : -0---0---0-0---0---1-00----
797     : ['promise(acceptor1,proposer1)', '~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor2)', '~promise(acceptor0,proposer0)', '~promise(acceptor2,proposer0)', '~promise(acceptor2,proposer1)']
798     : -0-0-----0-0-----0-1--00---
798     : ['promise(acceptor1,proposer1)', '~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor2)', '~promise(acceptor0,proposer2)', '~promise(acceptor2,proposer1)', '~promise(acceptor2,proposer2)']
799     : --0-0----0-0---0----10-0---
799     : ['promise(acceptor1,proposer2)', '~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor2)', '~promise(acceptor0,proposer0)', '~promise(acceptor2,proposer0)', '~promise(acceptor2,proposer2)']
800     : --00-----0-0----0---1-00---
800     : ['promise(acceptor1,proposer2)', '~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor2)', '~promise(acceptor0,proposer1)', '~promise(acceptor2,proposer1)', '~promise(acceptor2,proposer2)']
801     : 0-------0-00---1---0-00----
801     : ['promise(acceptor0,proposer0)', '~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor1,proposer1)', '~promise(acceptor2,proposer0)', '~promise(acceptor2,proposer1)']
802     : 0------0--00---1----00-0---
802     : ['promise(acceptor0,proposer0)', '~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor1,proposer2)', '~promise(acceptor2,proposer0)', '~promise(acceptor2,proposer2)']
803     : -0------0-00----1-0--00----
803     : ['promise(acceptor0,proposer1)', '~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor1,proposer0)', '~promise(acceptor2,proposer0)', '~promise(acceptor2,proposer1)']
804     : -0----0---00----1---0-00---
804     : ['promise(acceptor0,proposer1)', '~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor1,proposer2)', '~promise(acceptor2,proposer1)', '~promise(acceptor2,proposer2)']
805     : --0----0--00-----10--0-0---
805     : ['promise(acceptor0,proposer2)', '~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor1,proposer0)', '~promise(acceptor2,proposer0)', '~promise(acceptor2,proposer2)']
806     : --0---0---00-----1-0--00---
806     : ['promise(acceptor0,proposer2)', '~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor1,proposer1)', '~promise(acceptor2,proposer1)', '~promise(acceptor2,proposer2)']
num_forall :   0
num_exists :   0
num_literals : 0
quantified form : None
qcost : 0


=== Prime Orbit 49 =====================
size : 18
num_suborbits: 1
807 (*) : 0----00--000----0--00-0----
807     : ['~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor0,proposer1)', '~promise(acceptor1,proposer1)', '~promise(acceptor1,proposer2)', '~promise(acceptor2,proposer1)']
808     : 0---0-0--000-----0-00--0---
808     : ['~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor0,proposer2)', '~promise(acceptor1,proposer1)', '~promise(acceptor1,proposer2)', '~promise(acceptor2,proposer2)']
809     : -0---0-0-000---0--0-00-----
809     : ['~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor0,proposer0)', '~promise(acceptor1,proposer0)', '~promise(acceptor1,proposer2)', '~promise(acceptor2,proposer0)']
810     : -0-0---0-000-----00-0--0---
810     : ['~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor0,proposer2)', '~promise(acceptor1,proposer0)', '~promise(acceptor1,proposer2)', '~promise(acceptor2,proposer2)']
811     : --0-0---0000---0--00-0-----
811     : ['~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor0,proposer0)', '~promise(acceptor1,proposer0)', '~promise(acceptor1,proposer1)', '~promise(acceptor2,proposer0)']
812     : --00----0000----0-00--0----
812     : ['~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor0,proposer1)', '~promise(acceptor1,proposer0)', '~promise(acceptor1,proposer1)', '~promise(acceptor2,proposer1)']
813     : --00--0--000----0--0--00---
813     : ['~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor0,proposer1)', '~promise(acceptor1,proposer1)', '~promise(acceptor2,proposer1)', '~promise(acceptor2,proposer2)']
814     : -0-0--0--000-----0--0-00---
814     : ['~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor0,proposer2)', '~promise(acceptor1,proposer2)', '~promise(acceptor2,proposer1)', '~promise(acceptor2,proposer2)']
815     : --0-0--0-000---0--0--0-0---
815     : ['~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor0,proposer0)', '~promise(acceptor1,proposer0)', '~promise(acceptor2,proposer0)', '~promise(acceptor2,proposer2)']
816     : 0---0--0-000-----0--00-0---
816     : ['~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor0,proposer2)', '~promise(acceptor1,proposer2)', '~promise(acceptor2,proposer0)', '~promise(acceptor2,proposer2)']
817     : -0---0--0000---0--0--00----
817     : ['~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor0,proposer0)', '~promise(acceptor1,proposer0)', '~promise(acceptor2,proposer0)', '~promise(acceptor2,proposer1)']
818     : 0----0--0000----0--0-00----
818     : ['~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor0,proposer1)', '~promise(acceptor1,proposer1)', '~promise(acceptor2,proposer0)', '~promise(acceptor2,proposer1)']
819     : 0--0----0000----00-0--0----
819     : ['~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor0,proposer1)', '~promise(acceptor0,proposer2)', '~promise(acceptor1,proposer1)', '~promise(acceptor2,proposer1)']
820     : 0--0---0-000----00--0--0---
820     : ['~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor0,proposer1)', '~promise(acceptor0,proposer2)', '~promise(acceptor1,proposer2)', '~promise(acceptor2,proposer2)']
821     : -0--0---0000---0-00--0-----
821     : ['~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor0,proposer0)', '~promise(acceptor0,proposer2)', '~promise(acceptor1,proposer0)', '~promise(acceptor2,proposer0)']
822     : -0--0-0--000---0-0--0--0---
822     : ['~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor0,proposer0)', '~promise(acceptor0,proposer2)', '~promise(acceptor1,proposer2)', '~promise(acceptor2,proposer2)']
823     : --0--0-0-000---00-0--0-----
823     : ['~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor0,proposer0)', '~promise(acceptor0,proposer1)', '~promise(acceptor1,proposer0)', '~promise(acceptor2,proposer0)']
824     : --0--00--000---00--0--0----
824     : ['~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor0,proposer0)', '~promise(acceptor0,proposer1)', '~promise(acceptor1,proposer1)', '~promise(acceptor2,proposer1)']
num_forall :   0
num_exists :   0
num_literals : 0
quantified form : None
qcost : 0


=== Prime Orbit 50 =====================
size : 18
num_suborbits: 1
825 (*) : 0----0---000----0--0000----
825     : ['~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor0,proposer1)', '~promise(acceptor1,proposer1)', '~promise(acceptor1,proposer2)', '~promise(acceptor2,proposer0)', '~promise(acceptor2,proposer1)']
826     : 0---0----000-----0-000-0---
826     : ['~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor0,proposer2)', '~promise(acceptor1,proposer1)', '~promise(acceptor1,proposer2)', '~promise(acceptor2,proposer0)', '~promise(acceptor2,proposer2)']
827     : -0---0---000---0--0-000----
827     : ['~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor0,proposer0)', '~promise(acceptor1,proposer0)', '~promise(acceptor1,proposer2)', '~promise(acceptor2,proposer0)', '~promise(acceptor2,proposer1)']
828     : -0-0-----000-----00-0-00---
828     : ['~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor0,proposer2)', '~promise(acceptor1,proposer0)', '~promise(acceptor1,proposer2)', '~promise(acceptor2,proposer1)', '~promise(acceptor2,proposer2)']
829     : --0-0----000---0--00-0-0---
829     : ['~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor0,proposer0)', '~promise(acceptor1,proposer0)', '~promise(acceptor1,proposer1)', '~promise(acceptor2,proposer0)', '~promise(acceptor2,proposer2)']
830     : --00-----000----0-00--00---
830     : ['~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor0,proposer1)', '~promise(acceptor1,proposer0)', '~promise(acceptor1,proposer1)', '~promise(acceptor2,proposer1)', '~promise(acceptor2,proposer2)']
831     : 0-------0000----00-0-00----
831     : ['~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor0,proposer1)', '~promise(acceptor0,proposer2)', '~promise(acceptor1,proposer1)', '~promise(acceptor2,proposer0)', '~promise(acceptor2,proposer1)']
832     : 0------0-000----00--00-0---
832     : ['~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor0,proposer1)', '~promise(acceptor0,proposer2)', '~promise(acceptor1,proposer2)', '~promise(acceptor2,proposer0)', '~promise(acceptor2,proposer2)']
833     : -0------0000---0-00--00----
833     : ['~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor0,proposer0)', '~promise(acceptor0,proposer2)', '~promise(acceptor1,proposer0)', '~promise(acceptor2,proposer0)', '~promise(acceptor2,proposer1)']
834     : -0----0--000---0-0--0-00---
834     : ['~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor0,proposer0)', '~promise(acceptor0,proposer2)', '~promise(acceptor1,proposer2)', '~promise(acceptor2,proposer1)', '~promise(acceptor2,proposer2)']
835     : --0----0-000---00-0--0-0---
835     : ['~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor0,proposer0)', '~promise(acceptor0,proposer1)', '~promise(acceptor1,proposer0)', '~promise(acceptor2,proposer0)', '~promise(acceptor2,proposer2)']
836     : --0---0--000---00--0--00---
836     : ['~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor0,proposer0)', '~promise(acceptor0,proposer1)', '~promise(acceptor1,proposer1)', '~promise(acceptor2,proposer1)', '~promise(acceptor2,proposer2)']
837     : ---0----0000----0000--0----
837     : ['~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor0,proposer1)', '~promise(acceptor0,proposer2)', '~promise(acceptor1,proposer0)', '~promise(acceptor1,proposer1)', '~promise(acceptor2,proposer1)']
838     : ---0---0-000----000-0--0---
838     : ['~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor0,proposer1)', '~promise(acceptor0,proposer2)', '~promise(acceptor1,proposer0)', '~promise(acceptor1,proposer2)', '~promise(acceptor2,proposer2)']
839     : ----0---0000---0-000-0-----
839     : ['~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor0,proposer0)', '~promise(acceptor0,proposer2)', '~promise(acceptor1,proposer0)', '~promise(acceptor1,proposer1)', '~promise(acceptor2,proposer0)']
840     : ----0-0--000---0-0-00--0---
840     : ['~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor0,proposer0)', '~promise(acceptor0,proposer2)', '~promise(acceptor1,proposer1)', '~promise(acceptor1,proposer2)', '~promise(acceptor2,proposer2)']
841     : -----0-0-000---00-0-00-----
841     : ['~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor0,proposer0)', '~promise(acceptor0,proposer1)', '~promise(acceptor1,proposer0)', '~promise(acceptor1,proposer2)', '~promise(acceptor2,proposer0)']
842     : -----00--000---00--00-0----
842     : ['~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor0,proposer0)', '~promise(acceptor0,proposer1)', '~promise(acceptor1,proposer1)', '~promise(acceptor1,proposer2)', '~promise(acceptor2,proposer1)']
num_forall :   0
num_exists :   0
num_literals : 0
quantified form : None
qcost : 0


=== Prime Orbit 51 =====================
size : 3
num_suborbits: 1
843 (*) : 0-00-00-0000-------------0-
843     : ['~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~start(proposer1)']
844     : 00-00-00-000--------------0
844     : ['~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~start(proposer2)']
845     : -00-00-00000------------0--
845     : ['~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~start(proposer0)']
num_forall :   0
num_exists :   0
num_literals : 0
quantified form : None
qcost : 0


=== Prime Orbit 52 =====================
size : 3
num_suborbits: 1
846 (*) : -00-00-00000---0--0--0-----
846     : ['~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor0,proposer0)', '~promise(acceptor1,proposer0)', '~promise(acceptor2,proposer0)']
847     : 0-00-00-0000----0--0--0----
847     : ['~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor0,proposer1)', '~promise(acceptor1,proposer1)', '~promise(acceptor2,proposer1)']
848     : 00-00-00-000-----0--0--0---
848     : ['~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor0,proposer2)', '~promise(acceptor1,proposer2)', '~promise(acceptor2,proposer2)']
num_forall :   0
num_exists :   0
num_literals : 0
quantified form : None
qcost : 0



[PRIME NOTE]: number of orbits after merging: 53

[PRIME NOTE]: number of orbits before merging: 55

[PRIME NOTE]: number of primes: 849

[QRM NOTE]: Time elapsed since start: 7.107 seconds

[QRM NOTE]: Time elapsed since last: 0.400 seconds

[QRM NOTE]: Peak memory: 2522593 bytes


=========================================================================================================

	[RED]: PRIME REDUCTION on [ivybench/sym_quorum/ivy/simple-election: acceptor=3,proposer=3]

=========================================================================================================

definition primes: {0, 1, 34, 3, 35, 40, 42, 11, 12, 47, 48, 49, 50, 52, 22, 25}


New level: 0
 pending : [2, 4, 5, 6, 7, 8, 9, 10, 13, 14, 15, 16, 17, 18, 19, 20, 21, 23, 24, 26, 27, 28, 29, 30, 31, 32, 33, 36, 37, 38, 39, 41, 43, 44, 45, 46, 51]
 solution : []


Before reduction : 
 pending  : [2, 4, 5, 6, 7, 8, 9, 10, 13, 14, 15, 16, 17, 18, 19, 20, 21, 23, 24, 26, 27, 28, 29, 30, 31, 32, 33, 36, 37, 38, 39, 41, 43, 44, 45, 46, 51]
 solution : []

Essensial at level 0 : {7}

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 0), (3, -1), (4, 0), (5, 1048576), (6, 1048576), (7, -1), (8, 17179869184), (9, 134217728), (10, 17179869184), (11, -1), (12, -1), (13, 2147483648), (14, 8388608), (15, 1073741824), (16, 16777216), (17, 262144), (18, 67108864), (19, 33554432), (20, 524288), (21, 1114112), (22, -1), (23, 134217728), (24, 1073741824), (25, -1), (26, 4194304), (27, 4294967296), (28, 4294967296), (29, 1048576), (30, 16384), (31, 32768), (32, 2147483648), (33, 4194304), (34, -1), (35, -1), (36, 268435456), (37, 1073741824), (38, 134217728), (39, 16384), (40, -1), (41, 4194304), (42, -1), (43, 524288), (44, 524288), (45, 67108864), (46, 16777216), (47, -1), (48, -1), (49, -1), (50, -1), (51, 67108864), (52, -1)]

Covered at level 0 : {2, 4}

After reduction : 
 pending  : [5, 6, 8, 9, 10, 13, 14, 15, 16, 17, 18, 19, 20, 21, 23, 24, 26, 27, 28, 29, 30, 31, 32, 33, 36, 37, 38, 39, 41, 43, 44, 45, 46, 51]
 solution : [7]


Before reduction : 
 pending  : [5, 6, 8, 9, 10, 13, 14, 15, 16, 17, 18, 19, 20, 21, 23, 24, 26, 27, 28, 29, 30, 31, 32, 33, 36, 37, 38, 39, 41, 43, 44, 45, 46, 51]
 solution : [7]

Essensial at level 0 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 0), (3, -1), (4, 0), (5, 1048576), (6, 1048576), (7, -1), (8, 17179869184), (9, 134217728), (10, 17179869184), (11, -1), (12, -1), (13, 2147483648), (14, 8388608), (15, 1073741824), (16, 16777216), (17, 262144), (18, 67108864), (19, 33554432), (20, 524288), (21, 1114112), (22, -1), (23, 134217728), (24, 1073741824), (25, -1), (26, 4194304), (27, 4294967296), (28, 4294967296), (29, 1048576), (30, 16384), (31, 32768), (32, 2147483648), (33, 4194304), (34, -1), (35, -1), (36, 268435456), (37, 1073741824), (38, 134217728), (39, 16384), (40, -1), (41, 4194304), (42, -1), (43, 524288), (44, 524288), (45, 67108864), (46, 16777216), (47, -1), (48, -1), (49, -1), (50, -1), (51, 67108864), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 1048576), (6, 1048576), (7, -1), (8, 17179869184), (9, 134217728), (10, 17179869184), (11, -1), (12, -1), (13, 2147483648), (14, 8388608), (15, 1073741824), (16, 16777216), (17, 262144), (18, 67108864), (19, 33554432), (20, 524288), (21, 1114112), (22, -1), (23, 134217728), (24, 1073741824), (25, -1), (26, 4194304), (27, 4294967296), (28, 4294967296), (29, 1048576), (30, 16384), (31, 32768), (32, 2147483648), (33, 4194304), (34, -1), (35, -1), (36, 268435456), (37, 1073741824), (38, 134217728), (39, 16384), (40, -1), (41, 4194304), (42, -1), (43, 524288), (44, 524288), (45, 67108864), (46, 16777216), (47, -1), (48, -1), (49, -1), (50, -1), (51, 67108864), (52, -1)]

Covered at level 0 : set()

After reduction : 
 pending  : [5, 6, 8, 9, 10, 13, 14, 15, 16, 17, 18, 19, 20, 21, 23, 24, 26, 27, 28, 29, 30, 31, 32, 33, 36, 37, 38, 39, 41, 43, 44, 45, 46, 51]
 solution : [7]

[QRM NOTE]: Time elapsed since start: 7.224 seconds

[QRM NOTE]: Time elapsed since last: 0.117 seconds

[QRM NOTE]: Peak memory: 1297854 bytes


=============================================================================================================

	[QI]: Quantifier Inference on [ivybench/sym_quorum/ivy/simple-election: acceptor=3,proposer=3]

=============================================================================================================


---------- quantifier_inference ----------


=== Prime Orbit 7 =====================
size : 9
num_suborbits: 1
135 (*) : ----------------------11---
135     : ['promise(acceptor2,proposer1)', 'promise(acceptor2,proposer2)']
136     : ---------------------1-1---
136     : ['promise(acceptor2,proposer0)', 'promise(acceptor2,proposer2)']
137     : ---------------------11----
137     : ['promise(acceptor2,proposer0)', 'promise(acceptor2,proposer1)']
138     : -------------------11------
138     : ['promise(acceptor1,proposer1)', 'promise(acceptor1,proposer2)']
139     : ------------------1-1------
139     : ['promise(acceptor1,proposer0)', 'promise(acceptor1,proposer2)']
140     : ------------------11-------
140     : ['promise(acceptor1,proposer0)', 'promise(acceptor1,proposer1)']
141     : ----------------11---------
141     : ['promise(acceptor0,proposer1)', 'promise(acceptor0,proposer2)']
142     : ---------------1-1---------
142     : ['promise(acceptor0,proposer0)', 'promise(acceptor0,proposer2)']
143     : ---------------11----------
143     : ['promise(acceptor0,proposer0)', 'promise(acceptor0,proposer1)']
num_forall :   0
num_exists :   0
num_literals : 0
quantified form : None
qcost : 0




---------- QPrime ----------


---------- ConstArgBinding ----------

terms: ['promise(acceptor2,proposer1)', 'promise(acceptor2,proposer2)']

sign_func_name2args: {'0$promise': [(Const('acceptor2', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Const('proposer1', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))), (Const('acceptor2', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Const('proposer2', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))))]}

const2sigs: {Const('acceptor2', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))): [acceptor$0$promise$0$0, acceptor$0$promise$0$1], Const('proposer1', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))): [proposer$0$promise$1$0], Const('proposer2', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))): [proposer$0$promise$1$1]}

sig2const: {'acceptor$0$promise$0$0': Const('acceptor2', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), 'proposer$0$promise$1$0': Const('proposer1', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))), 'acceptor$0$promise$0$1': Const('acceptor2', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), 'proposer$0$promise$1$1': Const('proposer2', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))}


---------- ArgPartition ----------

sort2class_sigs: {EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')): [acceptor$0$promise$0$0; acceptor$0$promise$0$1], EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')): [proposer$0$promise$1$0, proposer$0$promise$1$1]}

sort2part_sig: {EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')): acceptor$0$promise$0$0; acceptor$0$promise$0$1, EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')): proposer$0$promise$1$0 | proposer$0$promise$1$1}

part_sig: ('acceptor$0$promise$0$0; acceptor$0$promise$0$1', 'proposer$0$promise$1$0 | proposer$0$promise$1$1')


---------- SigGenerator ----------

terms:  ['promise(acceptor2,proposer1)', 'promise(acceptor2,proposer2)']

func_name2symbol:  {'promise': Const('promise', FunctionSort(EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')), EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')), BooleanSort()))}

func_name2args_sort:  {'promise': (EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')), EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))}

sign_func_name2count:  {'0$promise': 2}


---------- ProductArgPartition ----------

sort2class_sigs: {EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')): [acceptor$0$promise$0$0; acceptor$0$promise$0$1], EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')): [proposer$0$promise$1$0, proposer$0$promise$1$1]}

sort2part_sig: {EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')): acceptor$0$promise$0$0; acceptor$0$promise$0$1, EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')): proposer$0$promise$1$0 | proposer$0$promise$1$1}

	sort: acceptor

	identical_classes: {'acceptor$0$promise$0; acceptor$0$promise$0': [acceptor$0$promise$0$0; acceptor$0$promise$0$1]}

	identical_single_classes: {'acceptor$0$promise$0; acceptor$0$promise$0': acceptor$0$promise$0$0; acceptor$0$promise$0$1}

	identical_multi_classes: {}

	sort: proposer

	identical_classes: {'proposer$0$promise$1': [proposer$0$promise$1$0, proposer$0$promise$1$1]}

	identical_single_classes: {}

	identical_multi_classes: {'proposer$0$promise$1': [proposer$0$promise$1$0, proposer$0$promise$1$1]}


---------- QInference: _set_sort_to_quantifier_mode ----------

quantifier mode: acceptor: QuantifierMode.forall

quantifier mode: proposer: QuantifierMode.forall


---------- QInference: _set_constraint_mode ----------

constraint mode: ConstraintMode.no_merge


---------- QFormula: _set_qvars ----------

forall_qvars: {Var('PROPOSER0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))), Var('PROPOSER1', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))), Var('ACCEPTOR0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')))}

exists_qvars: set()


---------- QFormula: _set_signed_func_name_to_args ----------

signed_func_name2args: {'0$promise': [[Var('ACCEPTOR0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Var('PROPOSER0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))], [Var('ACCEPTOR0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Var('PROPOSER1', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))]]}


---------- QFormula: _set_qterms ----------

qterms: ['promise(ACCEPTOR0,PROPOSER0)', 'promise(ACCEPTOR0,PROPOSER1)']


---------- QFormula: get_qclause ----------

qclause: forall PROPOSER1,ACCEPTOR0,PROPOSER0. ~promise(ACCEPTOR0,PROPOSER0) | ~promise(ACCEPTOR0,PROPOSER1) | PROPOSER0 = PROPOSER1


=== Prime Orbit 5 =====================
size : 9
num_suborbits: 1
90 (*) : --1-----------------------0
90     : ['chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~start(proposer2)']
91     : -1-----------------------0-
91     : ['chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~start(proposer1)']
92     : 1-----------------------0--
92     : ['chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~start(proposer0)']
93     : -----1--------------------0
93     : ['chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~start(proposer2)']
94     : ----1--------------------0-
94     : ['chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~start(proposer1)']
95     : ---1--------------------0--
95     : ['chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~start(proposer0)']
96     : --------1-----------------0
96     : ['chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~start(proposer2)']
97     : -------1-----------------0-
97     : ['chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~start(proposer1)']
98     : ------1-----------------0--
98     : ['chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~start(proposer0)']
num_forall :   0
num_exists :   0
num_literals : 0
quantified form : None
qcost : 0




---------- QPrime ----------


---------- ConstArgBinding ----------

terms: ['chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~start(proposer2)']

sign_func_name2args: {'0$chosenAt': [(Const('quorum__acceptor0_acceptor1', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), Const('proposer2', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))))], '1$start': [(Const('proposer2', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))),)]}

const2sigs: {Const('quorum__acceptor0_acceptor1', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))): [quorum$0$chosenAt$0$0], Const('proposer2', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))): [proposer$0$chosenAt$1$0, proposer$1$start$0$0]}

sig2const: {'quorum$0$chosenAt$0$0': Const('quorum__acceptor0_acceptor1', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), 'proposer$0$chosenAt$1$0': Const('proposer2', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))), 'proposer$1$start$0$0': Const('proposer2', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))}


---------- ArgPartition ----------

sort2class_sigs: {EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')): [quorum$0$chosenAt$0$0], EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')): [proposer$0$chosenAt$1$0; proposer$1$start$0$0]}

sort2part_sig: {EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')): quorum$0$chosenAt$0$0, EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')): proposer$0$chosenAt$1$0; proposer$1$start$0$0}

part_sig: ('proposer$0$chosenAt$1$0; proposer$1$start$0$0', 'quorum$0$chosenAt$0$0')


---------- SigGenerator ----------

terms:  ['chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~start(proposer2)']

func_name2symbol:  {'chosenAt': Const('chosenAt', FunctionSort(EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')), EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')), BooleanSort())), 'start': Const('start', FunctionSort(EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')), BooleanSort()))}

func_name2args_sort:  {'chosenAt': (EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')), EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))), 'start': (EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')),)}

sign_func_name2count:  {'0$chosenAt': 1, '1$start': 1}


---------- ProductArgPartition ----------

sort2class_sigs: {EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')): [quorum$0$chosenAt$0$0], EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')): [proposer$0$chosenAt$1$0; proposer$1$start$0$0]}

sort2part_sig: {EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')): quorum$0$chosenAt$0$0, EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')): proposer$0$chosenAt$1$0; proposer$1$start$0$0}

	sort: quorum

	identical_classes: {'quorum$0$chosenAt$0': [quorum$0$chosenAt$0$0]}

	identical_single_classes: {'quorum$0$chosenAt$0': quorum$0$chosenAt$0$0}

	identical_multi_classes: {}

	sort: proposer

	identical_classes: {'proposer$0$chosenAt$1; proposer$1$start$0': [proposer$0$chosenAt$1$0; proposer$1$start$0$0]}

	identical_single_classes: {'proposer$0$chosenAt$1; proposer$1$start$0': proposer$0$chosenAt$1$0; proposer$1$start$0$0}

	identical_multi_classes: {}


---------- QInference: _set_sort_to_quantifier_mode ----------

quantifier mode: quorum: QuantifierMode.forall

quantifier mode: proposer: QuantifierMode.forall


---------- QInference: _set_constraint_mode ----------

constraint mode: ConstraintMode.no_merge


---------- QFormula: _set_qvars ----------

forall_qvars: {Var('PROPOSER0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))), Var('QUORUM0', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')))}

exists_qvars: set()


---------- QFormula: _set_signed_func_name_to_args ----------

signed_func_name2args: {'0$chosenAt': [[Var('QUORUM0', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), Var('PROPOSER0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))]], '1$start': [[Var('PROPOSER0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))]]}


---------- QFormula: _set_qterms ----------

qterms: ['~start(PROPOSER0)', 'chosenAt(QUORUM0,PROPOSER0)']


---------- QFormula: get_qclause ----------

qclause: forall QUORUM0,PROPOSER0. start(PROPOSER0) | ~chosenAt(QUORUM0,PROPOSER0)


=== Prime Orbit 6 =====================
size : 18
num_suborbits: 1
117 (*) : --1---------1--------------
117     : ['chosenAt(quorum__acceptor0_acceptor1,proposer2)', 'leader(proposer0)']
118     : -1----------1--------------
118     : ['chosenAt(quorum__acceptor0_acceptor1,proposer1)', 'leader(proposer0)']
119     : --1----------1-------------
119     : ['chosenAt(quorum__acceptor0_acceptor1,proposer2)', 'leader(proposer1)']
120     : 1------------1-------------
120     : ['chosenAt(quorum__acceptor0_acceptor1,proposer0)', 'leader(proposer1)']
121     : -1------------1------------
121     : ['chosenAt(quorum__acceptor0_acceptor1,proposer1)', 'leader(proposer2)']
122     : 1-------------1------------
122     : ['chosenAt(quorum__acceptor0_acceptor1,proposer0)', 'leader(proposer2)']
123     : -----1------1--------------
123     : ['chosenAt(quorum__acceptor0_acceptor2,proposer2)', 'leader(proposer0)']
124     : ----1-------1--------------
124     : ['chosenAt(quorum__acceptor0_acceptor2,proposer1)', 'leader(proposer0)']
125     : -----1-------1-------------
125     : ['chosenAt(quorum__acceptor0_acceptor2,proposer2)', 'leader(proposer1)']
126     : ---1---------1-------------
126     : ['chosenAt(quorum__acceptor0_acceptor2,proposer0)', 'leader(proposer1)']
127     : ----1---------1------------
127     : ['chosenAt(quorum__acceptor0_acceptor2,proposer1)', 'leader(proposer2)']
128     : ---1----------1------------
128     : ['chosenAt(quorum__acceptor0_acceptor2,proposer0)', 'leader(proposer2)']
129     : --------1---1--------------
129     : ['chosenAt(quorum__acceptor1_acceptor2,proposer2)', 'leader(proposer0)']
130     : -------1----1--------------
130     : ['chosenAt(quorum__acceptor1_acceptor2,proposer1)', 'leader(proposer0)']
131     : --------1----1-------------
131     : ['chosenAt(quorum__acceptor1_acceptor2,proposer2)', 'leader(proposer1)']
132     : ------1------1-------------
132     : ['chosenAt(quorum__acceptor1_acceptor2,proposer0)', 'leader(proposer1)']
133     : -------1------1------------
133     : ['chosenAt(quorum__acceptor1_acceptor2,proposer1)', 'leader(proposer2)']
134     : ------1-------1------------
134     : ['chosenAt(quorum__acceptor1_acceptor2,proposer0)', 'leader(proposer2)']
num_forall :   0
num_exists :   0
num_literals : 0
quantified form : None
qcost : 0




---------- QPrime ----------


---------- ConstArgBinding ----------

terms: ['chosenAt(quorum__acceptor0_acceptor1,proposer2)', 'leader(proposer0)']

sign_func_name2args: {'0$chosenAt': [(Const('quorum__acceptor0_acceptor1', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), Const('proposer2', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))))], '0$leader': [(Const('proposer0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))),)]}

const2sigs: {Const('quorum__acceptor0_acceptor1', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))): [quorum$0$chosenAt$0$0], Const('proposer2', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))): [proposer$0$chosenAt$1$0], Const('proposer0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))): [proposer$0$leader$0$0]}

sig2const: {'quorum$0$chosenAt$0$0': Const('quorum__acceptor0_acceptor1', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), 'proposer$0$chosenAt$1$0': Const('proposer2', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))), 'proposer$0$leader$0$0': Const('proposer0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))}


---------- ArgPartition ----------

sort2class_sigs: {EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')): [quorum$0$chosenAt$0$0], EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')): [proposer$0$chosenAt$1$0, proposer$0$leader$0$0]}

sort2part_sig: {EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')): quorum$0$chosenAt$0$0, EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')): proposer$0$chosenAt$1$0 | proposer$0$leader$0$0}

part_sig: ('proposer$0$chosenAt$1$0 | proposer$0$leader$0$0', 'quorum$0$chosenAt$0$0')


---------- SigGenerator ----------

terms:  ['chosenAt(quorum__acceptor0_acceptor1,proposer2)', 'leader(proposer0)']

func_name2symbol:  {'chosenAt': Const('chosenAt', FunctionSort(EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')), EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')), BooleanSort())), 'leader': Const('leader', FunctionSort(EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')), BooleanSort()))}

func_name2args_sort:  {'chosenAt': (EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')), EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))), 'leader': (EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')),)}

sign_func_name2count:  {'0$chosenAt': 1, '0$leader': 1}


---------- ProductArgPartition ----------

sort2class_sigs: {EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')): [quorum$0$chosenAt$0$0], EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')): [proposer$0$chosenAt$1$0, proposer$0$leader$0$0]}

sort2part_sig: {EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')): quorum$0$chosenAt$0$0, EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')): proposer$0$chosenAt$1$0 | proposer$0$leader$0$0}

	sort: quorum

	identical_classes: {'quorum$0$chosenAt$0': [quorum$0$chosenAt$0$0]}

	identical_single_classes: {'quorum$0$chosenAt$0': quorum$0$chosenAt$0$0}

	identical_multi_classes: {}

	sort: proposer

	identical_classes: {'proposer$0$chosenAt$1': [proposer$0$chosenAt$1$0], 'proposer$0$leader$0': [proposer$0$leader$0$0]}

	identical_single_classes: {'proposer$0$chosenAt$1': proposer$0$chosenAt$1$0, 'proposer$0$leader$0': proposer$0$leader$0$0}

	identical_multi_classes: {}


---------- QInference: _set_sort_to_quantifier_mode ----------

quantifier mode: quorum: QuantifierMode.forall

quantifier mode: proposer: QuantifierMode.forall


---------- QInference: _set_constraint_mode ----------

constraint mode: ConstraintMode.no_merge


---------- QFormula: _set_qvars ----------

forall_qvars: {Var('PROPOSER0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))), Var('PROPOSER1', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))), Var('QUORUM0', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')))}

exists_qvars: set()


---------- QFormula: _set_signed_func_name_to_args ----------

signed_func_name2args: {'0$chosenAt': [[Var('QUORUM0', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), Var('PROPOSER0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))]], '0$leader': [[Var('PROPOSER1', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))]]}


---------- QFormula: _set_qterms ----------

qterms: ['chosenAt(QUORUM0,PROPOSER0)', 'leader(PROPOSER1)']


---------- QFormula: get_qclause ----------

qclause: forall PROPOSER1,QUORUM0,PROPOSER0. ~chosenAt(QUORUM0,PROPOSER0) | ~leader(PROPOSER1) | PROPOSER0 = PROPOSER1


=== Prime Orbit 8 =====================
size : 3
num_suborbits: 1
144 (*) : -------------11------------
144     : ['leader(proposer1)', 'leader(proposer2)']
145     : ------------1-1------------
145     : ['leader(proposer0)', 'leader(proposer2)']
146     : ------------11-------------
146     : ['leader(proposer0)', 'leader(proposer1)']
num_forall :   0
num_exists :   0
num_literals : 0
quantified form : None
qcost : 0




---------- QPrime ----------


---------- ConstArgBinding ----------

terms: ['leader(proposer1)', 'leader(proposer2)']

sign_func_name2args: {'0$leader': [(Const('proposer1', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))),), (Const('proposer2', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))),)]}

const2sigs: {Const('proposer1', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))): [proposer$0$leader$0$0], Const('proposer2', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))): [proposer$0$leader$0$1]}

sig2const: {'proposer$0$leader$0$0': Const('proposer1', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))), 'proposer$0$leader$0$1': Const('proposer2', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))}


---------- ArgPartition ----------

sort2class_sigs: {EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')): [proposer$0$leader$0$0, proposer$0$leader$0$1]}

sort2part_sig: {EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')): proposer$0$leader$0$0 | proposer$0$leader$0$1}

part_sig: ('proposer$0$leader$0$0 | proposer$0$leader$0$1',)


---------- SigGenerator ----------

terms:  ['leader(proposer1)', 'leader(proposer2)']

func_name2symbol:  {'leader': Const('leader', FunctionSort(EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')), BooleanSort()))}

func_name2args_sort:  {'leader': (EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')),)}

sign_func_name2count:  {'0$leader': 2}


---------- ProductArgPartition ----------

sort2class_sigs: {EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')): [proposer$0$leader$0$0, proposer$0$leader$0$1]}

sort2part_sig: {EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')): proposer$0$leader$0$0 | proposer$0$leader$0$1}

	sort: proposer

	identical_classes: {'proposer$0$leader$0': [proposer$0$leader$0$0, proposer$0$leader$0$1]}

	identical_single_classes: {}

	identical_multi_classes: {'proposer$0$leader$0': [proposer$0$leader$0$0, proposer$0$leader$0$1]}


---------- QInference: _set_sort_to_quantifier_mode ----------

quantifier mode: proposer: QuantifierMode.forall


---------- QInference: _set_constraint_mode ----------

constraint mode: ConstraintMode.no_merge


---------- QFormula: _set_qvars ----------

forall_qvars: {Var('PROPOSER0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))), Var('PROPOSER1', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))}

exists_qvars: set()


---------- QFormula: _set_signed_func_name_to_args ----------

signed_func_name2args: {'0$leader': [[Var('PROPOSER0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))], [Var('PROPOSER1', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))]]}


---------- QFormula: _set_qterms ----------

qterms: ['leader(PROPOSER1)', 'leader(PROPOSER0)']


---------- QFormula: get_qclause ----------

qclause: forall PROPOSER1,PROPOSER0. ~leader(PROPOSER1) | ~leader(PROPOSER0) | PROPOSER0 = PROPOSER1


=== Prime Orbit 9 =====================
size : 9
num_suborbits: 1
147 (*) : -----------------1--------0
147     : ['promise(acceptor0,proposer2)', '~start(proposer2)']
148     : ----------------1--------0-
148     : ['promise(acceptor0,proposer1)', '~start(proposer1)']
149     : ---------------1--------0--
149     : ['promise(acceptor0,proposer0)', '~start(proposer0)']
150     : --------------------1-----0
150     : ['promise(acceptor1,proposer2)', '~start(proposer2)']
151     : -------------------1-----0-
151     : ['promise(acceptor1,proposer1)', '~start(proposer1)']
152     : ------------------1-----0--
152     : ['promise(acceptor1,proposer0)', '~start(proposer0)']
153     : -----------------------1--0
153     : ['promise(acceptor2,proposer2)', '~start(proposer2)']
154     : ----------------------1--0-
154     : ['promise(acceptor2,proposer1)', '~start(proposer1)']
155     : ---------------------1--0--
155     : ['promise(acceptor2,proposer0)', '~start(proposer0)']
num_forall :   0
num_exists :   0
num_literals : 0
quantified form : None
qcost : 0




---------- QPrime ----------


---------- ConstArgBinding ----------

terms: ['promise(acceptor0,proposer2)', '~start(proposer2)']

sign_func_name2args: {'0$promise': [(Const('acceptor0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Const('proposer2', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))))], '1$start': [(Const('proposer2', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))),)]}

const2sigs: {Const('acceptor0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))): [acceptor$0$promise$0$0], Const('proposer2', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))): [proposer$0$promise$1$0, proposer$1$start$0$0]}

sig2const: {'acceptor$0$promise$0$0': Const('acceptor0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), 'proposer$0$promise$1$0': Const('proposer2', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))), 'proposer$1$start$0$0': Const('proposer2', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))}


---------- ArgPartition ----------

sort2class_sigs: {EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')): [acceptor$0$promise$0$0], EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')): [proposer$0$promise$1$0; proposer$1$start$0$0]}

sort2part_sig: {EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')): acceptor$0$promise$0$0, EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')): proposer$0$promise$1$0; proposer$1$start$0$0}

part_sig: ('acceptor$0$promise$0$0', 'proposer$0$promise$1$0; proposer$1$start$0$0')


---------- SigGenerator ----------

terms:  ['promise(acceptor0,proposer2)', '~start(proposer2)']

func_name2symbol:  {'promise': Const('promise', FunctionSort(EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')), EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')), BooleanSort())), 'start': Const('start', FunctionSort(EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')), BooleanSort()))}

func_name2args_sort:  {'promise': (EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')), EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))), 'start': (EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')),)}

sign_func_name2count:  {'0$promise': 1, '1$start': 1}


---------- ProductArgPartition ----------

sort2class_sigs: {EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')): [acceptor$0$promise$0$0], EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')): [proposer$0$promise$1$0; proposer$1$start$0$0]}

sort2part_sig: {EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')): acceptor$0$promise$0$0, EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')): proposer$0$promise$1$0; proposer$1$start$0$0}

	sort: acceptor

	identical_classes: {'acceptor$0$promise$0': [acceptor$0$promise$0$0]}

	identical_single_classes: {'acceptor$0$promise$0': acceptor$0$promise$0$0}

	identical_multi_classes: {}

	sort: proposer

	identical_classes: {'proposer$0$promise$1; proposer$1$start$0': [proposer$0$promise$1$0; proposer$1$start$0$0]}

	identical_single_classes: {'proposer$0$promise$1; proposer$1$start$0': proposer$0$promise$1$0; proposer$1$start$0$0}

	identical_multi_classes: {}


---------- QInference: _set_sort_to_quantifier_mode ----------

quantifier mode: acceptor: QuantifierMode.forall

quantifier mode: proposer: QuantifierMode.forall


---------- QInference: _set_constraint_mode ----------

constraint mode: ConstraintMode.no_merge


---------- QFormula: _set_qvars ----------

forall_qvars: {Var('PROPOSER0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))), Var('ACCEPTOR0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')))}

exists_qvars: set()


---------- QFormula: _set_signed_func_name_to_args ----------

signed_func_name2args: {'0$promise': [[Var('ACCEPTOR0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Var('PROPOSER0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))]], '1$start': [[Var('PROPOSER0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))]]}


---------- QFormula: _set_qterms ----------

qterms: ['promise(ACCEPTOR0,PROPOSER0)', '~start(PROPOSER0)']


---------- QFormula: get_qclause ----------

qclause: forall ACCEPTOR0,PROPOSER0. ~promise(ACCEPTOR0,PROPOSER0) | start(PROPOSER0)


=== Prime Orbit 10 =====================
size : 3
num_suborbits: 1
156 (*) : --------------1-----------0
156     : ['leader(proposer2)', '~start(proposer2)']
157     : -------------1-----------0-
157     : ['leader(proposer1)', '~start(proposer1)']
158     : ------------1-----------0--
158     : ['leader(proposer0)', '~start(proposer0)']
num_forall :   0
num_exists :   0
num_literals : 0
quantified form : None
qcost : 0




---------- QPrime ----------


---------- ConstArgBinding ----------

terms: ['leader(proposer2)', '~start(proposer2)']

sign_func_name2args: {'0$leader': [(Const('proposer2', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))),)], '1$start': [(Const('proposer2', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))),)]}

const2sigs: {Const('proposer2', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))): [proposer$0$leader$0$0, proposer$1$start$0$0]}

sig2const: {'proposer$0$leader$0$0': Const('proposer2', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))), 'proposer$1$start$0$0': Const('proposer2', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))}


---------- ArgPartition ----------

sort2class_sigs: {EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')): [proposer$0$leader$0$0; proposer$1$start$0$0]}

sort2part_sig: {EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')): proposer$0$leader$0$0; proposer$1$start$0$0}

part_sig: ('proposer$0$leader$0$0; proposer$1$start$0$0',)


---------- SigGenerator ----------

terms:  ['leader(proposer2)', '~start(proposer2)']

func_name2symbol:  {'leader': Const('leader', FunctionSort(EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')), BooleanSort())), 'start': Const('start', FunctionSort(EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')), BooleanSort()))}

func_name2args_sort:  {'leader': (EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')),), 'start': (EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')),)}

sign_func_name2count:  {'0$leader': 1, '1$start': 1}


---------- ProductArgPartition ----------

sort2class_sigs: {EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')): [proposer$0$leader$0$0; proposer$1$start$0$0]}

sort2part_sig: {EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')): proposer$0$leader$0$0; proposer$1$start$0$0}

	sort: proposer

	identical_classes: {'proposer$0$leader$0; proposer$1$start$0': [proposer$0$leader$0$0; proposer$1$start$0$0]}

	identical_single_classes: {'proposer$0$leader$0; proposer$1$start$0': proposer$0$leader$0$0; proposer$1$start$0$0}

	identical_multi_classes: {}


---------- QInference: _set_sort_to_quantifier_mode ----------

quantifier mode: proposer: QuantifierMode.forall


---------- QInference: _set_constraint_mode ----------

constraint mode: ConstraintMode.no_merge


---------- QFormula: _set_qvars ----------

forall_qvars: {Var('PROPOSER0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))}

exists_qvars: set()


---------- QFormula: _set_signed_func_name_to_args ----------

signed_func_name2args: {'0$leader': [[Var('PROPOSER0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))]], '1$start': [[Var('PROPOSER0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))]]}


---------- QFormula: _set_qterms ----------

qterms: ['~start(PROPOSER0)', 'leader(PROPOSER0)']


---------- QFormula: get_qclause ----------

qclause: forall PROPOSER0. start(PROPOSER0) | ~leader(PROPOSER0)


=== Prime Orbit 13 =====================
size : 9
num_suborbits: 1
186 (*) : ----0--------1-----0-------
186     : ['leader(proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~promise(acceptor1,proposer1)']
187     : -----0--------1-----0------
187     : ['leader(proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~promise(acceptor1,proposer2)']
188     : ---0--------1-----0--------
188     : ['leader(proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~promise(acceptor1,proposer0)']
189     : -0-----------1--------0----
189     : ['leader(proposer1)', '~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~promise(acceptor2,proposer1)']
190     : --0-----------1--------0---
190     : ['leader(proposer2)', '~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~promise(acceptor2,proposer2)']
191     : 0-----------1--------0-----
191     : ['leader(proposer0)', '~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~promise(acceptor2,proposer0)']
192     : -------0-----1--0----------
192     : ['leader(proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~promise(acceptor0,proposer1)']
193     : --------0-----1--0---------
193     : ['leader(proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~promise(acceptor0,proposer2)']
194     : ------0-----1--0-----------
194     : ['leader(proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~promise(acceptor0,proposer0)']
num_forall :   0
num_exists :   0
num_literals : 0
quantified form : None
qcost : 0




---------- QPrime ----------


---------- ConstArgBinding ----------

terms: ['~chosenAt(quorum__acceptor0_acceptor2,proposer1)', 'leader(proposer1)', '~promise(acceptor1,proposer1)', '~member(acceptor1,quorum__acceptor0_acceptor2)']

sign_func_name2args: {'1$chosenAt': [(Const('quorum__acceptor0_acceptor2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), Const('proposer1', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))))], '0$leader': [(Const('proposer1', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))),)], '1$promise': [(Const('acceptor1', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Const('proposer1', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))))], '1$member': [(Const('acceptor1', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Const('quorum__acceptor0_acceptor2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))))]}

const2sigs: {Const('quorum__acceptor0_acceptor2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))): [quorum$1$chosenAt$0$0, quorum$1$member$1$0], Const('proposer1', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))): [proposer$1$chosenAt$1$0, proposer$0$leader$0$0, proposer$1$promise$1$0], Const('acceptor1', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))): [acceptor$1$promise$0$0, acceptor$1$member$0$0]}

sig2const: {'quorum$1$chosenAt$0$0': Const('quorum__acceptor0_acceptor2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), 'proposer$1$chosenAt$1$0': Const('proposer1', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))), 'proposer$0$leader$0$0': Const('proposer1', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))), 'acceptor$1$promise$0$0': Const('acceptor1', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), 'proposer$1$promise$1$0': Const('proposer1', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))), 'acceptor$1$member$0$0': Const('acceptor1', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), 'quorum$1$member$1$0': Const('quorum__acceptor0_acceptor2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')))}


---------- ArgPartition ----------

sort2class_sigs: {EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')): [quorum$1$chosenAt$0$0; quorum$1$member$1$0], EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')): [proposer$0$leader$0$0; proposer$1$chosenAt$1$0; proposer$1$promise$1$0], EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')): [acceptor$1$member$0$0; acceptor$1$promise$0$0]}

sort2part_sig: {EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')): quorum$1$chosenAt$0$0; quorum$1$member$1$0, EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')): proposer$0$leader$0$0; proposer$1$chosenAt$1$0; proposer$1$promise$1$0, EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')): acceptor$1$member$0$0; acceptor$1$promise$0$0}

part_sig: ('acceptor$1$member$0$0; acceptor$1$promise$0$0', 'proposer$0$leader$0$0; proposer$1$chosenAt$1$0; proposer$1$promise$1$0', 'quorum$1$chosenAt$0$0; quorum$1$member$1$0')


---------- SigGenerator ----------

terms:  ['~chosenAt(quorum__acceptor0_acceptor2,proposer1)', 'leader(proposer1)', '~promise(acceptor1,proposer1)', '~member(acceptor1,quorum__acceptor0_acceptor2)']

func_name2symbol:  {'chosenAt': Const('chosenAt', FunctionSort(EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')), EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')), BooleanSort())), 'leader': Const('leader', FunctionSort(EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')), BooleanSort())), 'promise': Const('promise', FunctionSort(EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')), EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')), BooleanSort())), 'member': Const('member', FunctionSort(EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')), EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')), BooleanSort()))}

func_name2args_sort:  {'chosenAt': (EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')), EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))), 'leader': (EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')),), 'promise': (EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')), EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))), 'member': (EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')), EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')))}

sign_func_name2count:  {'1$chosenAt': 1, '0$leader': 1, '1$promise': 1, '1$member': 1}


---------- ProductArgPartition ----------

sort2class_sigs: {EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')): [quorum$1$chosenAt$0$0; quorum$1$member$1$0], EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')): [proposer$0$leader$0$0; proposer$1$chosenAt$1$0; proposer$1$promise$1$0], EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')): [acceptor$1$member$0$0; acceptor$1$promise$0$0]}

sort2part_sig: {EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')): quorum$1$chosenAt$0$0; quorum$1$member$1$0, EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')): proposer$0$leader$0$0; proposer$1$chosenAt$1$0; proposer$1$promise$1$0, EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')): acceptor$1$member$0$0; acceptor$1$promise$0$0}

	sort: quorum

	identical_classes: {'quorum$1$chosenAt$0; quorum$1$member$1': [quorum$1$chosenAt$0$0; quorum$1$member$1$0]}

	identical_single_classes: {'quorum$1$chosenAt$0; quorum$1$member$1': quorum$1$chosenAt$0$0; quorum$1$member$1$0}

	identical_multi_classes: {}

	sort: proposer

	identical_classes: {'proposer$0$leader$0; proposer$1$chosenAt$1; proposer$1$promise$1': [proposer$0$leader$0$0; proposer$1$chosenAt$1$0; proposer$1$promise$1$0]}

	identical_single_classes: {'proposer$0$leader$0; proposer$1$chosenAt$1; proposer$1$promise$1': proposer$0$leader$0$0; proposer$1$chosenAt$1$0; proposer$1$promise$1$0}

	identical_multi_classes: {}

	sort: acceptor

	identical_classes: {'acceptor$1$member$0; acceptor$1$promise$0': [acceptor$1$member$0$0; acceptor$1$promise$0$0]}

	identical_single_classes: {'acceptor$1$member$0; acceptor$1$promise$0': acceptor$1$member$0$0; acceptor$1$promise$0$0}

	identical_multi_classes: {}


---------- QInference: _set_sort_to_quantifier_mode ----------

quantifier mode: quorum: QuantifierMode.forall

quantifier mode: proposer: QuantifierMode.forall

quantifier mode: acceptor: QuantifierMode.forall


---------- QInference: _set_constraint_mode ----------

constraint mode: ConstraintMode.no_merge


---------- QFormula: _set_qvars ----------

forall_qvars: {Var('PROPOSER0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))), Var('QUORUM0', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), Var('ACCEPTOR0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')))}

exists_qvars: set()


---------- QFormula: _set_signed_func_name_to_args ----------

signed_func_name2args: {'1$chosenAt': [[Var('QUORUM0', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), Var('PROPOSER0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))]], '0$leader': [[Var('PROPOSER0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))]], '1$promise': [[Var('ACCEPTOR0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Var('PROPOSER0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))]], '1$member': [[Var('ACCEPTOR0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Var('QUORUM0', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')))]]}


---------- QFormula: _set_qterms ----------

qterms: ['~chosenAt(QUORUM0,PROPOSER0)', '~member(ACCEPTOR0,QUORUM0)', '~promise(ACCEPTOR0,PROPOSER0)', 'leader(PROPOSER0)']


---------- QFormula: get_qclause ----------

qclause: forall QUORUM0,PROPOSER0,ACCEPTOR0. chosenAt(QUORUM0,PROPOSER0) | member(ACCEPTOR0,QUORUM0) | promise(ACCEPTOR0,PROPOSER0) | ~leader(PROPOSER0)


=== Prime Orbit 14 =====================
size : 18
num_suborbits: 1
195 (*) : -----------1-1-----0-------
195     : ['didNotPromise(acceptor2)', 'leader(proposer1)', '~promise(acceptor1,proposer1)']
196     : -----------1--1-----0------
196     : ['didNotPromise(acceptor2)', 'leader(proposer2)', '~promise(acceptor1,proposer2)']
197     : -----------11-----0--------
197     : ['didNotPromise(acceptor2)', 'leader(proposer0)', '~promise(acceptor1,proposer0)']
198     : ----------1--1--------0----
198     : ['didNotPromise(acceptor1)', 'leader(proposer1)', '~promise(acceptor2,proposer1)']
199     : ----------1---1--------0---
199     : ['didNotPromise(acceptor1)', 'leader(proposer2)', '~promise(acceptor2,proposer2)']
200     : ----------1-1--------0-----
200     : ['didNotPromise(acceptor1)', 'leader(proposer0)', '~promise(acceptor2,proposer0)']
201     : -----------1-1--0----------
201     : ['didNotPromise(acceptor2)', 'leader(proposer1)', '~promise(acceptor0,proposer1)']
202     : -----------1--1--0---------
202     : ['didNotPromise(acceptor2)', 'leader(proposer2)', '~promise(acceptor0,proposer2)']
203     : -----------11--0-----------
203     : ['didNotPromise(acceptor2)', 'leader(proposer0)', '~promise(acceptor0,proposer0)']
204     : ---------1---1--------0----
204     : ['didNotPromise(acceptor0)', 'leader(proposer1)', '~promise(acceptor2,proposer1)']
205     : ---------1----1--------0---
205     : ['didNotPromise(acceptor0)', 'leader(proposer2)', '~promise(acceptor2,proposer2)']
206     : ---------1--1--------0-----
206     : ['didNotPromise(acceptor0)', 'leader(proposer0)', '~promise(acceptor2,proposer0)']
207     : ----------1--1--0----------
207     : ['didNotPromise(acceptor1)', 'leader(proposer1)', '~promise(acceptor0,proposer1)']
208     : ----------1---1--0---------
208     : ['didNotPromise(acceptor1)', 'leader(proposer2)', '~promise(acceptor0,proposer2)']
209     : ----------1-1--0-----------
209     : ['didNotPromise(acceptor1)', 'leader(proposer0)', '~promise(acceptor0,proposer0)']
210     : ---------1---1-----0-------
210     : ['didNotPromise(acceptor0)', 'leader(proposer1)', '~promise(acceptor1,proposer1)']
211     : ---------1----1-----0------
211     : ['didNotPromise(acceptor0)', 'leader(proposer2)', '~promise(acceptor1,proposer2)']
212     : ---------1--1-----0--------
212     : ['didNotPromise(acceptor0)', 'leader(proposer0)', '~promise(acceptor1,proposer0)']
num_forall :   0
num_exists :   0
num_literals : 0
quantified form : None
qcost : 0




---------- QPrime ----------


---------- ConstArgBinding ----------

terms: ['didNotPromise(acceptor2)', 'leader(proposer1)', '~promise(acceptor1,proposer1)']

sign_func_name2args: {'0$didNotPromise': [(Const('acceptor2', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))),)], '0$leader': [(Const('proposer1', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))),)], '1$promise': [(Const('acceptor1', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Const('proposer1', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))))]}

const2sigs: {Const('acceptor2', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))): [acceptor$0$didNotPromise$0$0], Const('proposer1', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))): [proposer$0$leader$0$0, proposer$1$promise$1$0], Const('acceptor1', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))): [acceptor$1$promise$0$0]}

sig2const: {'acceptor$0$didNotPromise$0$0': Const('acceptor2', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), 'proposer$0$leader$0$0': Const('proposer1', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))), 'acceptor$1$promise$0$0': Const('acceptor1', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), 'proposer$1$promise$1$0': Const('proposer1', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))}


---------- ArgPartition ----------

sort2class_sigs: {EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')): [acceptor$0$didNotPromise$0$0, acceptor$1$promise$0$0], EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')): [proposer$0$leader$0$0; proposer$1$promise$1$0]}

sort2part_sig: {EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')): acceptor$0$didNotPromise$0$0 | acceptor$1$promise$0$0, EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')): proposer$0$leader$0$0; proposer$1$promise$1$0}

part_sig: ('acceptor$0$didNotPromise$0$0 | acceptor$1$promise$0$0', 'proposer$0$leader$0$0; proposer$1$promise$1$0')


---------- SigGenerator ----------

terms:  ['didNotPromise(acceptor2)', 'leader(proposer1)', '~promise(acceptor1,proposer1)']

func_name2symbol:  {'didNotPromise': Const('didNotPromise', FunctionSort(EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')), BooleanSort())), 'leader': Const('leader', FunctionSort(EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')), BooleanSort())), 'promise': Const('promise', FunctionSort(EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')), EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')), BooleanSort()))}

func_name2args_sort:  {'didNotPromise': (EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')),), 'leader': (EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')),), 'promise': (EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')), EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))}

sign_func_name2count:  {'0$didNotPromise': 1, '0$leader': 1, '1$promise': 1}


---------- ProductArgPartition ----------

sort2class_sigs: {EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')): [acceptor$0$didNotPromise$0$0, acceptor$1$promise$0$0], EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')): [proposer$0$leader$0$0; proposer$1$promise$1$0]}

sort2part_sig: {EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')): acceptor$0$didNotPromise$0$0 | acceptor$1$promise$0$0, EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')): proposer$0$leader$0$0; proposer$1$promise$1$0}

	sort: acceptor

	identical_classes: {'acceptor$0$didNotPromise$0': [acceptor$0$didNotPromise$0$0], 'acceptor$1$promise$0': [acceptor$1$promise$0$0]}

	identical_single_classes: {'acceptor$0$didNotPromise$0': acceptor$0$didNotPromise$0$0, 'acceptor$1$promise$0': acceptor$1$promise$0$0}

	identical_multi_classes: {}

	sort: proposer

	identical_classes: {'proposer$0$leader$0; proposer$1$promise$1': [proposer$0$leader$0$0; proposer$1$promise$1$0]}

	identical_single_classes: {'proposer$0$leader$0; proposer$1$promise$1': proposer$0$leader$0$0; proposer$1$promise$1$0}

	identical_multi_classes: {}


---------- QInference: _set_sort_to_quantifier_mode ----------

quantifier mode: acceptor: QuantifierMode.forall

quantifier mode: proposer: QuantifierMode.forall


---------- QInference: _set_constraint_mode ----------

constraint mode: ConstraintMode.no_merge


---------- QFormula: _set_qvars ----------

forall_qvars: {Var('PROPOSER0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))), Var('ACCEPTOR1', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Var('ACCEPTOR0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')))}

exists_qvars: set()


---------- QFormula: _set_signed_func_name_to_args ----------

signed_func_name2args: {'0$didNotPromise': [[Var('ACCEPTOR0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')))]], '0$leader': [[Var('PROPOSER0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))]], '1$promise': [[Var('ACCEPTOR1', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Var('PROPOSER0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))]]}


---------- QFormula: _set_qterms ----------

qterms: ['~promise(ACCEPTOR1,PROPOSER0)', 'didNotPromise(ACCEPTOR0)', 'leader(PROPOSER0)']


---------- QFormula: get_qclause ----------

qclause: forall ACCEPTOR1,ACCEPTOR0,PROPOSER0. promise(ACCEPTOR1,PROPOSER0) | ~didNotPromise(ACCEPTOR0) | ~leader(PROPOSER0) | ACCEPTOR0 = ACCEPTOR1


=== Prime Orbit 15 =====================
size : 9
num_suborbits: 1
213 (*) : -------------1-----0--0----
213     : ['leader(proposer1)', '~promise(acceptor1,proposer1)', '~promise(acceptor2,proposer1)']
214     : --------------1-----0--0---
214     : ['leader(proposer2)', '~promise(acceptor1,proposer2)', '~promise(acceptor2,proposer2)']
215     : ------------1-----0--0-----
215     : ['leader(proposer0)', '~promise(acceptor1,proposer0)', '~promise(acceptor2,proposer0)']
216     : -------------1--0-----0----
216     : ['leader(proposer1)', '~promise(acceptor0,proposer1)', '~promise(acceptor2,proposer1)']
217     : --------------1--0-----0---
217     : ['leader(proposer2)', '~promise(acceptor0,proposer2)', '~promise(acceptor2,proposer2)']
218     : ------------1--0-----0-----
218     : ['leader(proposer0)', '~promise(acceptor0,proposer0)', '~promise(acceptor2,proposer0)']
219     : -------------1--0--0-------
219     : ['leader(proposer1)', '~promise(acceptor0,proposer1)', '~promise(acceptor1,proposer1)']
220     : --------------1--0--0------
220     : ['leader(proposer2)', '~promise(acceptor0,proposer2)', '~promise(acceptor1,proposer2)']
221     : ------------1--0--0--------
221     : ['leader(proposer0)', '~promise(acceptor0,proposer0)', '~promise(acceptor1,proposer0)']
num_forall :   0
num_exists :   0
num_literals : 0
quantified form : None
qcost : 0




---------- QPrime ----------


---------- ConstArgBinding ----------

terms: ['leader(proposer1)', '~promise(acceptor1,proposer1)', '~promise(acceptor2,proposer1)']

sign_func_name2args: {'0$leader': [(Const('proposer1', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))),)], '1$promise': [(Const('acceptor1', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Const('proposer1', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))), (Const('acceptor2', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Const('proposer1', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))))]}

const2sigs: {Const('proposer1', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))): [proposer$0$leader$0$0, proposer$1$promise$1$0, proposer$1$promise$1$1], Const('acceptor1', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))): [acceptor$1$promise$0$0], Const('acceptor2', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))): [acceptor$1$promise$0$1]}

sig2const: {'proposer$0$leader$0$0': Const('proposer1', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))), 'acceptor$1$promise$0$0': Const('acceptor1', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), 'proposer$1$promise$1$0': Const('proposer1', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))), 'acceptor$1$promise$0$1': Const('acceptor2', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), 'proposer$1$promise$1$1': Const('proposer1', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))}


---------- ArgPartition ----------

sort2class_sigs: {EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')): [proposer$0$leader$0$0; proposer$1$promise$1$0; proposer$1$promise$1$1], EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')): [acceptor$1$promise$0$0, acceptor$1$promise$0$1]}

sort2part_sig: {EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')): proposer$0$leader$0$0; proposer$1$promise$1$0; proposer$1$promise$1$1, EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')): acceptor$1$promise$0$0 | acceptor$1$promise$0$1}

part_sig: ('acceptor$1$promise$0$0 | acceptor$1$promise$0$1', 'proposer$0$leader$0$0; proposer$1$promise$1$0; proposer$1$promise$1$1')


---------- SigGenerator ----------

terms:  ['leader(proposer1)', '~promise(acceptor1,proposer1)', '~promise(acceptor2,proposer1)']

func_name2symbol:  {'leader': Const('leader', FunctionSort(EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')), BooleanSort())), 'promise': Const('promise', FunctionSort(EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')), EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')), BooleanSort()))}

func_name2args_sort:  {'leader': (EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')),), 'promise': (EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')), EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))}

sign_func_name2count:  {'0$leader': 1, '1$promise': 2}


---------- ProductArgPartition ----------

sort2class_sigs: {EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')): [proposer$0$leader$0$0; proposer$1$promise$1$0; proposer$1$promise$1$1], EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')): [acceptor$1$promise$0$0, acceptor$1$promise$0$1]}

sort2part_sig: {EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')): proposer$0$leader$0$0; proposer$1$promise$1$0; proposer$1$promise$1$1, EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')): acceptor$1$promise$0$0 | acceptor$1$promise$0$1}

	sort: proposer

	identical_classes: {'proposer$0$leader$0; proposer$1$promise$1; proposer$1$promise$1': [proposer$0$leader$0$0; proposer$1$promise$1$0; proposer$1$promise$1$1]}

	identical_single_classes: {'proposer$0$leader$0; proposer$1$promise$1; proposer$1$promise$1': proposer$0$leader$0$0; proposer$1$promise$1$0; proposer$1$promise$1$1}

	identical_multi_classes: {}

	sort: acceptor

	identical_classes: {'acceptor$1$promise$0': [acceptor$1$promise$0$0, acceptor$1$promise$0$1]}

	identical_single_classes: {}

	identical_multi_classes: {'acceptor$1$promise$0': [acceptor$1$promise$0$0, acceptor$1$promise$0$1]}


---------- QInference: _set_sort_to_quantifier_mode ----------

quantifier mode: proposer: QuantifierMode.forall

quantifier mode: acceptor: QuantifierMode.forall


---------- QInference: _set_constraint_mode ----------

constraint mode: ConstraintMode.no_merge


---------- QFormula: _set_qvars ----------

forall_qvars: {Var('PROPOSER0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))), Var('ACCEPTOR1', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Var('ACCEPTOR0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')))}

exists_qvars: set()


---------- QFormula: _set_signed_func_name_to_args ----------

signed_func_name2args: {'0$leader': [[Var('PROPOSER0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))]], '1$promise': [[Var('ACCEPTOR0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Var('PROPOSER0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))], [Var('ACCEPTOR1', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Var('PROPOSER0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))]]}


---------- QFormula: _set_qterms ----------

qterms: ['~promise(ACCEPTOR1,PROPOSER0)', '~promise(ACCEPTOR0,PROPOSER0)', 'leader(PROPOSER0)']


---------- QFormula: get_qclause ----------

qclause: forall ACCEPTOR1,ACCEPTOR0,PROPOSER0. promise(ACCEPTOR1,PROPOSER0) | promise(ACCEPTOR0,PROPOSER0) | ~leader(PROPOSER0) | ACCEPTOR0 = ACCEPTOR1


=== Prime Orbit 16 =====================
size : 9
num_suborbits: 1
222 (*) : ----0-----1--1-------------
222     : ['didNotPromise(acceptor1)', 'leader(proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)']
223     : -----0----1---1------------
223     : ['didNotPromise(acceptor1)', 'leader(proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)']
224     : ---0------1-1--------------
224     : ['didNotPromise(acceptor1)', 'leader(proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)']
225     : -0---------1-1-------------
225     : ['didNotPromise(acceptor2)', 'leader(proposer1)', '~chosenAt(quorum__acceptor0_acceptor1,proposer1)']
226     : --0--------1--1------------
226     : ['didNotPromise(acceptor2)', 'leader(proposer2)', '~chosenAt(quorum__acceptor0_acceptor1,proposer2)']
227     : 0----------11--------------
227     : ['didNotPromise(acceptor2)', 'leader(proposer0)', '~chosenAt(quorum__acceptor0_acceptor1,proposer0)']
228     : -------0-1---1-------------
228     : ['didNotPromise(acceptor0)', 'leader(proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)']
229     : --------01----1------------
229     : ['didNotPromise(acceptor0)', 'leader(proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)']
230     : ------0--1--1--------------
230     : ['didNotPromise(acceptor0)', 'leader(proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)']
num_forall :   0
num_exists :   0
num_literals : 0
quantified form : None
qcost : 0




---------- QPrime ----------


---------- ConstArgBinding ----------

terms: ['~chosenAt(quorum__acceptor0_acceptor2,proposer1)', 'didNotPromise(acceptor1)', 'leader(proposer1)', '~member(acceptor1,quorum__acceptor0_acceptor2)']

sign_func_name2args: {'1$chosenAt': [(Const('quorum__acceptor0_acceptor2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), Const('proposer1', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))))], '0$didNotPromise': [(Const('acceptor1', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))),)], '0$leader': [(Const('proposer1', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))),)], '1$member': [(Const('acceptor1', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Const('quorum__acceptor0_acceptor2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))))]}

const2sigs: {Const('quorum__acceptor0_acceptor2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))): [quorum$1$chosenAt$0$0, quorum$1$member$1$0], Const('proposer1', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))): [proposer$1$chosenAt$1$0, proposer$0$leader$0$0], Const('acceptor1', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))): [acceptor$0$didNotPromise$0$0, acceptor$1$member$0$0]}

sig2const: {'quorum$1$chosenAt$0$0': Const('quorum__acceptor0_acceptor2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), 'proposer$1$chosenAt$1$0': Const('proposer1', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))), 'acceptor$0$didNotPromise$0$0': Const('acceptor1', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), 'proposer$0$leader$0$0': Const('proposer1', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))), 'acceptor$1$member$0$0': Const('acceptor1', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), 'quorum$1$member$1$0': Const('quorum__acceptor0_acceptor2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')))}


---------- ArgPartition ----------

sort2class_sigs: {EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')): [quorum$1$chosenAt$0$0; quorum$1$member$1$0], EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')): [proposer$0$leader$0$0; proposer$1$chosenAt$1$0], EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')): [acceptor$0$didNotPromise$0$0; acceptor$1$member$0$0]}

sort2part_sig: {EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')): quorum$1$chosenAt$0$0; quorum$1$member$1$0, EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')): proposer$0$leader$0$0; proposer$1$chosenAt$1$0, EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')): acceptor$0$didNotPromise$0$0; acceptor$1$member$0$0}

part_sig: ('acceptor$0$didNotPromise$0$0; acceptor$1$member$0$0', 'proposer$0$leader$0$0; proposer$1$chosenAt$1$0', 'quorum$1$chosenAt$0$0; quorum$1$member$1$0')


---------- SigGenerator ----------

terms:  ['~chosenAt(quorum__acceptor0_acceptor2,proposer1)', 'didNotPromise(acceptor1)', 'leader(proposer1)', '~member(acceptor1,quorum__acceptor0_acceptor2)']

func_name2symbol:  {'chosenAt': Const('chosenAt', FunctionSort(EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')), EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')), BooleanSort())), 'didNotPromise': Const('didNotPromise', FunctionSort(EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')), BooleanSort())), 'leader': Const('leader', FunctionSort(EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')), BooleanSort())), 'member': Const('member', FunctionSort(EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')), EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')), BooleanSort()))}

func_name2args_sort:  {'chosenAt': (EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')), EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))), 'didNotPromise': (EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')),), 'leader': (EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')),), 'member': (EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')), EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')))}

sign_func_name2count:  {'1$chosenAt': 1, '0$didNotPromise': 1, '0$leader': 1, '1$member': 1}


---------- ProductArgPartition ----------

sort2class_sigs: {EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')): [quorum$1$chosenAt$0$0; quorum$1$member$1$0], EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')): [proposer$0$leader$0$0; proposer$1$chosenAt$1$0], EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')): [acceptor$0$didNotPromise$0$0; acceptor$1$member$0$0]}

sort2part_sig: {EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')): quorum$1$chosenAt$0$0; quorum$1$member$1$0, EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')): proposer$0$leader$0$0; proposer$1$chosenAt$1$0, EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')): acceptor$0$didNotPromise$0$0; acceptor$1$member$0$0}

	sort: quorum

	identical_classes: {'quorum$1$chosenAt$0; quorum$1$member$1': [quorum$1$chosenAt$0$0; quorum$1$member$1$0]}

	identical_single_classes: {'quorum$1$chosenAt$0; quorum$1$member$1': quorum$1$chosenAt$0$0; quorum$1$member$1$0}

	identical_multi_classes: {}

	sort: proposer

	identical_classes: {'proposer$0$leader$0; proposer$1$chosenAt$1': [proposer$0$leader$0$0; proposer$1$chosenAt$1$0]}

	identical_single_classes: {'proposer$0$leader$0; proposer$1$chosenAt$1': proposer$0$leader$0$0; proposer$1$chosenAt$1$0}

	identical_multi_classes: {}

	sort: acceptor

	identical_classes: {'acceptor$0$didNotPromise$0; acceptor$1$member$0': [acceptor$0$didNotPromise$0$0; acceptor$1$member$0$0]}

	identical_single_classes: {'acceptor$0$didNotPromise$0; acceptor$1$member$0': acceptor$0$didNotPromise$0$0; acceptor$1$member$0$0}

	identical_multi_classes: {}


---------- QInference: _set_sort_to_quantifier_mode ----------

quantifier mode: quorum: QuantifierMode.forall

quantifier mode: proposer: QuantifierMode.forall

quantifier mode: acceptor: QuantifierMode.forall


---------- QInference: _set_constraint_mode ----------

constraint mode: ConstraintMode.no_merge


---------- QFormula: _set_qvars ----------

forall_qvars: {Var('PROPOSER0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))), Var('QUORUM0', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), Var('ACCEPTOR0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')))}

exists_qvars: set()


---------- QFormula: _set_signed_func_name_to_args ----------

signed_func_name2args: {'1$chosenAt': [[Var('QUORUM0', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), Var('PROPOSER0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))]], '0$didNotPromise': [[Var('ACCEPTOR0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')))]], '0$leader': [[Var('PROPOSER0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))]], '1$member': [[Var('ACCEPTOR0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Var('QUORUM0', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')))]]}


---------- QFormula: _set_qterms ----------

qterms: ['~chosenAt(QUORUM0,PROPOSER0)', '~member(ACCEPTOR0,QUORUM0)', 'didNotPromise(ACCEPTOR0)', 'leader(PROPOSER0)']


---------- QFormula: get_qclause ----------

qclause: forall QUORUM0,PROPOSER0,ACCEPTOR0. chosenAt(QUORUM0,PROPOSER0) | member(ACCEPTOR0,QUORUM0) | ~didNotPromise(ACCEPTOR0) | ~leader(PROPOSER0)


=== Prime Orbit 17 =====================
size : 9
num_suborbits: 1
231 (*) : ----------11-1-------------
231     : ['didNotPromise(acceptor1)', 'didNotPromise(acceptor2)', 'leader(proposer1)']
232     : ----------11--1------------
232     : ['didNotPromise(acceptor1)', 'didNotPromise(acceptor2)', 'leader(proposer2)']
233     : ----------111--------------
233     : ['didNotPromise(acceptor1)', 'didNotPromise(acceptor2)', 'leader(proposer0)']
234     : ---------1-1-1-------------
234     : ['didNotPromise(acceptor0)', 'didNotPromise(acceptor2)', 'leader(proposer1)']
235     : ---------1-1--1------------
235     : ['didNotPromise(acceptor0)', 'didNotPromise(acceptor2)', 'leader(proposer2)']
236     : ---------1-11--------------
236     : ['didNotPromise(acceptor0)', 'didNotPromise(acceptor2)', 'leader(proposer0)']
237     : ---------11--1-------------
237     : ['didNotPromise(acceptor0)', 'didNotPromise(acceptor1)', 'leader(proposer1)']
238     : ---------11---1------------
238     : ['didNotPromise(acceptor0)', 'didNotPromise(acceptor1)', 'leader(proposer2)']
239     : ---------11-1--------------
239     : ['didNotPromise(acceptor0)', 'didNotPromise(acceptor1)', 'leader(proposer0)']
num_forall :   0
num_exists :   0
num_literals : 0
quantified form : None
qcost : 0




---------- QPrime ----------


---------- ConstArgBinding ----------

terms: ['didNotPromise(acceptor1)', 'didNotPromise(acceptor2)', 'leader(proposer1)']

sign_func_name2args: {'0$didNotPromise': [(Const('acceptor1', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))),), (Const('acceptor2', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))),)], '0$leader': [(Const('proposer1', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))),)]}

const2sigs: {Const('acceptor1', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))): [acceptor$0$didNotPromise$0$0], Const('acceptor2', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))): [acceptor$0$didNotPromise$0$1], Const('proposer1', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))): [proposer$0$leader$0$0]}

sig2const: {'acceptor$0$didNotPromise$0$0': Const('acceptor1', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), 'acceptor$0$didNotPromise$0$1': Const('acceptor2', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), 'proposer$0$leader$0$0': Const('proposer1', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))}


---------- ArgPartition ----------

sort2class_sigs: {EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')): [acceptor$0$didNotPromise$0$0, acceptor$0$didNotPromise$0$1], EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')): [proposer$0$leader$0$0]}

sort2part_sig: {EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')): acceptor$0$didNotPromise$0$0 | acceptor$0$didNotPromise$0$1, EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')): proposer$0$leader$0$0}

part_sig: ('acceptor$0$didNotPromise$0$0 | acceptor$0$didNotPromise$0$1', 'proposer$0$leader$0$0')


---------- SigGenerator ----------

terms:  ['didNotPromise(acceptor1)', 'didNotPromise(acceptor2)', 'leader(proposer1)']

func_name2symbol:  {'didNotPromise': Const('didNotPromise', FunctionSort(EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')), BooleanSort())), 'leader': Const('leader', FunctionSort(EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')), BooleanSort()))}

func_name2args_sort:  {'didNotPromise': (EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')),), 'leader': (EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')),)}

sign_func_name2count:  {'0$didNotPromise': 2, '0$leader': 1}


---------- ProductArgPartition ----------

sort2class_sigs: {EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')): [acceptor$0$didNotPromise$0$0, acceptor$0$didNotPromise$0$1], EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')): [proposer$0$leader$0$0]}

sort2part_sig: {EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')): acceptor$0$didNotPromise$0$0 | acceptor$0$didNotPromise$0$1, EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')): proposer$0$leader$0$0}

	sort: acceptor

	identical_classes: {'acceptor$0$didNotPromise$0': [acceptor$0$didNotPromise$0$0, acceptor$0$didNotPromise$0$1]}

	identical_single_classes: {}

	identical_multi_classes: {'acceptor$0$didNotPromise$0': [acceptor$0$didNotPromise$0$0, acceptor$0$didNotPromise$0$1]}

	sort: proposer

	identical_classes: {'proposer$0$leader$0': [proposer$0$leader$0$0]}

	identical_single_classes: {'proposer$0$leader$0': proposer$0$leader$0$0}

	identical_multi_classes: {}


---------- QInference: _set_sort_to_quantifier_mode ----------

quantifier mode: acceptor: QuantifierMode.forall

quantifier mode: proposer: QuantifierMode.forall


---------- QInference: _set_constraint_mode ----------

constraint mode: ConstraintMode.no_merge


---------- QFormula: _set_qvars ----------

forall_qvars: {Var('PROPOSER0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))), Var('ACCEPTOR1', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Var('ACCEPTOR0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')))}

exists_qvars: set()


---------- QFormula: _set_signed_func_name_to_args ----------

signed_func_name2args: {'0$didNotPromise': [[Var('ACCEPTOR0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')))], [Var('ACCEPTOR1', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')))]], '0$leader': [[Var('PROPOSER0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))]]}


---------- QFormula: _set_qterms ----------

qterms: ['didNotPromise(ACCEPTOR1)', 'didNotPromise(ACCEPTOR0)', 'leader(PROPOSER0)']


---------- QFormula: get_qclause ----------

qclause: forall ACCEPTOR1,ACCEPTOR0,PROPOSER0. ~didNotPromise(ACCEPTOR1) | ~didNotPromise(ACCEPTOR0) | ~leader(PROPOSER0) | ACCEPTOR0 = ACCEPTOR1


=== Prime Orbit 18 =====================
size : 18
num_suborbits: 1
240 (*) : -------0-----1---1---------
240     : ['leader(proposer1)', 'promise(acceptor0,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)']
241     : --------0-----1-1----------
241     : ['leader(proposer2)', 'promise(acceptor0,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)']
242     : ------0-----1----1---------
242     : ['leader(proposer0)', 'promise(acceptor0,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)']
243     : --------0-----11-----------
243     : ['leader(proposer2)', 'promise(acceptor0,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)']
244     : ------0-----1---1----------
244     : ['leader(proposer0)', 'promise(acceptor0,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)']
245     : -------0-----1-1-----------
245     : ['leader(proposer1)', 'promise(acceptor0,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)']
246     : ----0--------1------1------
246     : ['leader(proposer1)', 'promise(acceptor1,proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)']
247     : -----0--------1----1-------
247     : ['leader(proposer2)', 'promise(acceptor1,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)']
248     : ---0--------1-------1------
248     : ['leader(proposer0)', 'promise(acceptor1,proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)']
249     : -----0--------1---1--------
249     : ['leader(proposer2)', 'promise(acceptor1,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)']
250     : ---0--------1------1-------
250     : ['leader(proposer0)', 'promise(acceptor1,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)']
251     : ----0--------1----1--------
251     : ['leader(proposer1)', 'promise(acceptor1,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)']
252     : -0-----------1---------1---
252     : ['leader(proposer1)', 'promise(acceptor2,proposer2)', '~chosenAt(quorum__acceptor0_acceptor1,proposer1)']
253     : --0-----------1-------1----
253     : ['leader(proposer2)', 'promise(acceptor2,proposer1)', '~chosenAt(quorum__acceptor0_acceptor1,proposer2)']
254     : 0-----------1----------1---
254     : ['leader(proposer0)', 'promise(acceptor2,proposer2)', '~chosenAt(quorum__acceptor0_acceptor1,proposer0)']
255     : --0-----------1------1-----
255     : ['leader(proposer2)', 'promise(acceptor2,proposer0)', '~chosenAt(quorum__acceptor0_acceptor1,proposer2)']
256     : 0-----------1---------1----
256     : ['leader(proposer0)', 'promise(acceptor2,proposer1)', '~chosenAt(quorum__acceptor0_acceptor1,proposer0)']
257     : -0-----------1-------1-----
257     : ['leader(proposer1)', 'promise(acceptor2,proposer0)', '~chosenAt(quorum__acceptor0_acceptor1,proposer1)']
num_forall :   0
num_exists :   0
num_literals : 0
quantified form : None
qcost : 0




---------- QPrime ----------


---------- ConstArgBinding ----------

terms: ['~chosenAt(quorum__acceptor1_acceptor2,proposer1)', 'leader(proposer1)', 'promise(acceptor0,proposer2)', '~member(acceptor0,quorum__acceptor1_acceptor2)']

sign_func_name2args: {'1$chosenAt': [(Const('quorum__acceptor1_acceptor2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), Const('proposer1', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))))], '0$leader': [(Const('proposer1', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))),)], '0$promise': [(Const('acceptor0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Const('proposer2', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))))], '1$member': [(Const('acceptor0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Const('quorum__acceptor1_acceptor2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))))]}

const2sigs: {Const('quorum__acceptor1_acceptor2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))): [quorum$1$chosenAt$0$0, quorum$1$member$1$0], Const('proposer1', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))): [proposer$1$chosenAt$1$0, proposer$0$leader$0$0], Const('acceptor0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))): [acceptor$0$promise$0$0, acceptor$1$member$0$0], Const('proposer2', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))): [proposer$0$promise$1$0]}

sig2const: {'quorum$1$chosenAt$0$0': Const('quorum__acceptor1_acceptor2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), 'proposer$1$chosenAt$1$0': Const('proposer1', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))), 'proposer$0$leader$0$0': Const('proposer1', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))), 'acceptor$0$promise$0$0': Const('acceptor0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), 'proposer$0$promise$1$0': Const('proposer2', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))), 'acceptor$1$member$0$0': Const('acceptor0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), 'quorum$1$member$1$0': Const('quorum__acceptor1_acceptor2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')))}


---------- ArgPartition ----------

sort2class_sigs: {EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')): [quorum$1$chosenAt$0$0; quorum$1$member$1$0], EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')): [proposer$0$leader$0$0; proposer$1$chosenAt$1$0, proposer$0$promise$1$0], EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')): [acceptor$0$promise$0$0; acceptor$1$member$0$0]}

sort2part_sig: {EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')): quorum$1$chosenAt$0$0; quorum$1$member$1$0, EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')): proposer$0$leader$0$0; proposer$1$chosenAt$1$0 | proposer$0$promise$1$0, EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')): acceptor$0$promise$0$0; acceptor$1$member$0$0}

part_sig: ('acceptor$0$promise$0$0; acceptor$1$member$0$0', 'proposer$0$leader$0$0; proposer$1$chosenAt$1$0 | proposer$0$promise$1$0', 'quorum$1$chosenAt$0$0; quorum$1$member$1$0')


---------- SigGenerator ----------

terms:  ['~chosenAt(quorum__acceptor1_acceptor2,proposer1)', 'leader(proposer1)', 'promise(acceptor0,proposer2)', '~member(acceptor0,quorum__acceptor1_acceptor2)']

func_name2symbol:  {'chosenAt': Const('chosenAt', FunctionSort(EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')), EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')), BooleanSort())), 'leader': Const('leader', FunctionSort(EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')), BooleanSort())), 'promise': Const('promise', FunctionSort(EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')), EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')), BooleanSort())), 'member': Const('member', FunctionSort(EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')), EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')), BooleanSort()))}

func_name2args_sort:  {'chosenAt': (EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')), EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))), 'leader': (EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')),), 'promise': (EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')), EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))), 'member': (EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')), EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')))}

sign_func_name2count:  {'1$chosenAt': 1, '0$leader': 1, '0$promise': 1, '1$member': 1}


---------- ProductArgPartition ----------

sort2class_sigs: {EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')): [quorum$1$chosenAt$0$0; quorum$1$member$1$0], EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')): [proposer$0$leader$0$0; proposer$1$chosenAt$1$0, proposer$0$promise$1$0], EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')): [acceptor$0$promise$0$0; acceptor$1$member$0$0]}

sort2part_sig: {EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')): quorum$1$chosenAt$0$0; quorum$1$member$1$0, EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')): proposer$0$leader$0$0; proposer$1$chosenAt$1$0 | proposer$0$promise$1$0, EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')): acceptor$0$promise$0$0; acceptor$1$member$0$0}

	sort: quorum

	identical_classes: {'quorum$1$chosenAt$0; quorum$1$member$1': [quorum$1$chosenAt$0$0; quorum$1$member$1$0]}

	identical_single_classes: {'quorum$1$chosenAt$0; quorum$1$member$1': quorum$1$chosenAt$0$0; quorum$1$member$1$0}

	identical_multi_classes: {}

	sort: proposer

	identical_classes: {'proposer$0$leader$0; proposer$1$chosenAt$1': [proposer$0$leader$0$0; proposer$1$chosenAt$1$0], 'proposer$0$promise$1': [proposer$0$promise$1$0]}

	identical_single_classes: {'proposer$0$leader$0; proposer$1$chosenAt$1': proposer$0$leader$0$0; proposer$1$chosenAt$1$0, 'proposer$0$promise$1': proposer$0$promise$1$0}

	identical_multi_classes: {}

	sort: acceptor

	identical_classes: {'acceptor$0$promise$0; acceptor$1$member$0': [acceptor$0$promise$0$0; acceptor$1$member$0$0]}

	identical_single_classes: {'acceptor$0$promise$0; acceptor$1$member$0': acceptor$0$promise$0$0; acceptor$1$member$0$0}

	identical_multi_classes: {}


---------- QInference: _set_sort_to_quantifier_mode ----------

quantifier mode: quorum: QuantifierMode.forall

quantifier mode: proposer: QuantifierMode.forall

quantifier mode: acceptor: QuantifierMode.forall


---------- QInference: _set_constraint_mode ----------

constraint mode: ConstraintMode.no_merge


---------- QFormula: _set_qvars ----------

forall_qvars: {Var('PROPOSER0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))), Var('PROPOSER1', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))), Var('QUORUM0', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), Var('ACCEPTOR0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')))}

exists_qvars: set()


---------- QFormula: _set_signed_func_name_to_args ----------

signed_func_name2args: {'1$chosenAt': [[Var('QUORUM0', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), Var('PROPOSER0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))]], '0$leader': [[Var('PROPOSER0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))]], '0$promise': [[Var('ACCEPTOR0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Var('PROPOSER1', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))]], '1$member': [[Var('ACCEPTOR0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Var('QUORUM0', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')))]]}


---------- QFormula: _set_qterms ----------

qterms: ['~chosenAt(QUORUM0,PROPOSER0)', '~member(ACCEPTOR0,QUORUM0)', 'promise(ACCEPTOR0,PROPOSER1)', 'leader(PROPOSER0)']


---------- QFormula: get_qclause ----------

qclause: forall PROPOSER1,QUORUM0,PROPOSER0,ACCEPTOR0. chosenAt(QUORUM0,PROPOSER0) | member(ACCEPTOR0,QUORUM0) | ~promise(ACCEPTOR0,PROPOSER1) | ~leader(PROPOSER0) | PROPOSER0 = PROPOSER1


=== Prime Orbit 19 =====================
size : 36
num_suborbits: 1
258 (*) : -------------1---1----0----
258     : ['leader(proposer1)', 'promise(acceptor0,proposer2)', '~promise(acceptor2,proposer1)']
259     : --------------1-1------0---
259     : ['leader(proposer2)', 'promise(acceptor0,proposer1)', '~promise(acceptor2,proposer2)']
260     : ------------1----1---0-----
260     : ['leader(proposer0)', 'promise(acceptor0,proposer2)', '~promise(acceptor2,proposer0)']
261     : --------------11-------0---
261     : ['leader(proposer2)', 'promise(acceptor0,proposer0)', '~promise(acceptor2,proposer2)']
262     : ------------1---1----0-----
262     : ['leader(proposer0)', 'promise(acceptor0,proposer1)', '~promise(acceptor2,proposer0)']
263     : -------------1-1------0----
263     : ['leader(proposer1)', 'promise(acceptor0,proposer0)', '~promise(acceptor2,proposer1)']
264     : -------------1---1-0-------
264     : ['leader(proposer1)', 'promise(acceptor0,proposer2)', '~promise(acceptor1,proposer1)']
265     : --------------1-1---0------
265     : ['leader(proposer2)', 'promise(acceptor0,proposer1)', '~promise(acceptor1,proposer2)']
266     : ------------1----10--------
266     : ['leader(proposer0)', 'promise(acceptor0,proposer2)', '~promise(acceptor1,proposer0)']
267     : --------------11----0------
267     : ['leader(proposer2)', 'promise(acceptor0,proposer0)', '~promise(acceptor1,proposer2)']
268     : ------------1---1-0--------
268     : ['leader(proposer0)', 'promise(acceptor0,proposer1)', '~promise(acceptor1,proposer0)']
269     : -------------1-1---0-------
269     : ['leader(proposer1)', 'promise(acceptor0,proposer0)', '~promise(acceptor1,proposer1)']
270     : -------------1------1-0----
270     : ['leader(proposer1)', 'promise(acceptor1,proposer2)', '~promise(acceptor2,proposer1)']
271     : --------------1----1---0---
271     : ['leader(proposer2)', 'promise(acceptor1,proposer1)', '~promise(acceptor2,proposer2)']
272     : ------------1-------10-----
272     : ['leader(proposer0)', 'promise(acceptor1,proposer2)', '~promise(acceptor2,proposer0)']
273     : --------------1---1----0---
273     : ['leader(proposer2)', 'promise(acceptor1,proposer0)', '~promise(acceptor2,proposer2)']
274     : ------------1------1-0-----
274     : ['leader(proposer0)', 'promise(acceptor1,proposer1)', '~promise(acceptor2,proposer0)']
275     : -------------1----1---0----
275     : ['leader(proposer1)', 'promise(acceptor1,proposer0)', '~promise(acceptor2,proposer1)']
276     : -------------1--0---1------
276     : ['leader(proposer1)', 'promise(acceptor1,proposer2)', '~promise(acceptor0,proposer1)']
277     : --------------1--0-1-------
277     : ['leader(proposer2)', 'promise(acceptor1,proposer1)', '~promise(acceptor0,proposer2)']
278     : ------------1--0----1------
278     : ['leader(proposer0)', 'promise(acceptor1,proposer2)', '~promise(acceptor0,proposer0)']
279     : --------------1--01--------
279     : ['leader(proposer2)', 'promise(acceptor1,proposer0)', '~promise(acceptor0,proposer2)']
280     : ------------1--0---1-------
280     : ['leader(proposer0)', 'promise(acceptor1,proposer1)', '~promise(acceptor0,proposer0)']
281     : -------------1--0-1--------
281     : ['leader(proposer1)', 'promise(acceptor1,proposer0)', '~promise(acceptor0,proposer1)']
282     : -------------1-----0---1---
282     : ['leader(proposer1)', 'promise(acceptor2,proposer2)', '~promise(acceptor1,proposer1)']
283     : --------------1-----0-1----
283     : ['leader(proposer2)', 'promise(acceptor2,proposer1)', '~promise(acceptor1,proposer2)']
284     : ------------1-----0----1---
284     : ['leader(proposer0)', 'promise(acceptor2,proposer2)', '~promise(acceptor1,proposer0)']
285     : --------------1-----01-----
285     : ['leader(proposer2)', 'promise(acceptor2,proposer0)', '~promise(acceptor1,proposer2)']
286     : ------------1-----0---1----
286     : ['leader(proposer0)', 'promise(acceptor2,proposer1)', '~promise(acceptor1,proposer0)']
287     : -------------1-----0-1-----
287     : ['leader(proposer1)', 'promise(acceptor2,proposer0)', '~promise(acceptor1,proposer1)']
288     : -------------1--0------1---
288     : ['leader(proposer1)', 'promise(acceptor2,proposer2)', '~promise(acceptor0,proposer1)']
289     : --------------1--0----1----
289     : ['leader(proposer2)', 'promise(acceptor2,proposer1)', '~promise(acceptor0,proposer2)']
290     : ------------1--0-------1---
290     : ['leader(proposer0)', 'promise(acceptor2,proposer2)', '~promise(acceptor0,proposer0)']
291     : --------------1--0---1-----
291     : ['leader(proposer2)', 'promise(acceptor2,proposer0)', '~promise(acceptor0,proposer2)']
292     : ------------1--0------1----
292     : ['leader(proposer0)', 'promise(acceptor2,proposer1)', '~promise(acceptor0,proposer0)']
293     : -------------1--0----1-----
293     : ['leader(proposer1)', 'promise(acceptor2,proposer0)', '~promise(acceptor0,proposer1)']
num_forall :   0
num_exists :   0
num_literals : 0
quantified form : None
qcost : 0




---------- QPrime ----------


---------- ConstArgBinding ----------

terms: ['leader(proposer1)', 'promise(acceptor0,proposer2)', '~promise(acceptor2,proposer1)']

sign_func_name2args: {'0$leader': [(Const('proposer1', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))),)], '0$promise': [(Const('acceptor0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Const('proposer2', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))))], '1$promise': [(Const('acceptor2', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Const('proposer1', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))))]}

const2sigs: {Const('proposer1', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))): [proposer$0$leader$0$0, proposer$1$promise$1$0], Const('acceptor0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))): [acceptor$0$promise$0$0], Const('proposer2', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))): [proposer$0$promise$1$0], Const('acceptor2', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))): [acceptor$1$promise$0$0]}

sig2const: {'proposer$0$leader$0$0': Const('proposer1', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))), 'acceptor$0$promise$0$0': Const('acceptor0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), 'proposer$0$promise$1$0': Const('proposer2', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))), 'acceptor$1$promise$0$0': Const('acceptor2', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), 'proposer$1$promise$1$0': Const('proposer1', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))}


---------- ArgPartition ----------

sort2class_sigs: {EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')): [proposer$0$leader$0$0; proposer$1$promise$1$0, proposer$0$promise$1$0], EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')): [acceptor$0$promise$0$0, acceptor$1$promise$0$0]}

sort2part_sig: {EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')): proposer$0$leader$0$0; proposer$1$promise$1$0 | proposer$0$promise$1$0, EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')): acceptor$0$promise$0$0 | acceptor$1$promise$0$0}

part_sig: ('acceptor$0$promise$0$0 | acceptor$1$promise$0$0', 'proposer$0$leader$0$0; proposer$1$promise$1$0 | proposer$0$promise$1$0')


---------- SigGenerator ----------

terms:  ['leader(proposer1)', 'promise(acceptor0,proposer2)', '~promise(acceptor2,proposer1)']

func_name2symbol:  {'leader': Const('leader', FunctionSort(EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')), BooleanSort())), 'promise': Const('promise', FunctionSort(EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')), EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')), BooleanSort()))}

func_name2args_sort:  {'leader': (EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')),), 'promise': (EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')), EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))}

sign_func_name2count:  {'0$leader': 1, '0$promise': 1, '1$promise': 1}


---------- ProductArgPartition ----------

sort2class_sigs: {EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')): [proposer$0$leader$0$0; proposer$1$promise$1$0, proposer$0$promise$1$0], EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')): [acceptor$0$promise$0$0, acceptor$1$promise$0$0]}

sort2part_sig: {EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')): proposer$0$leader$0$0; proposer$1$promise$1$0 | proposer$0$promise$1$0, EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')): acceptor$0$promise$0$0 | acceptor$1$promise$0$0}

	sort: proposer

	identical_classes: {'proposer$0$leader$0; proposer$1$promise$1': [proposer$0$leader$0$0; proposer$1$promise$1$0], 'proposer$0$promise$1': [proposer$0$promise$1$0]}

	identical_single_classes: {'proposer$0$leader$0; proposer$1$promise$1': proposer$0$leader$0$0; proposer$1$promise$1$0, 'proposer$0$promise$1': proposer$0$promise$1$0}

	identical_multi_classes: {}

	sort: acceptor

	identical_classes: {'acceptor$0$promise$0': [acceptor$0$promise$0$0], 'acceptor$1$promise$0': [acceptor$1$promise$0$0]}

	identical_single_classes: {'acceptor$0$promise$0': acceptor$0$promise$0$0, 'acceptor$1$promise$0': acceptor$1$promise$0$0}

	identical_multi_classes: {}


---------- QInference: _set_sort_to_quantifier_mode ----------

quantifier mode: proposer: QuantifierMode.forall

quantifier mode: acceptor: QuantifierMode.forall


---------- QInference: _set_constraint_mode ----------

constraint mode: ConstraintMode.no_merge


---------- QFormula: _set_qvars ----------

forall_qvars: {Var('PROPOSER0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))), Var('PROPOSER1', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))), Var('ACCEPTOR1', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Var('ACCEPTOR0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')))}

exists_qvars: set()


---------- QFormula: _set_signed_func_name_to_args ----------

signed_func_name2args: {'0$leader': [[Var('PROPOSER0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))]], '0$promise': [[Var('ACCEPTOR0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Var('PROPOSER1', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))]], '1$promise': [[Var('ACCEPTOR1', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Var('PROPOSER0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))]]}


---------- QFormula: _set_qterms ----------

qterms: ['~promise(ACCEPTOR1,PROPOSER0)', 'promise(ACCEPTOR0,PROPOSER1)', 'leader(PROPOSER0)']


---------- QFormula: get_qclause ----------

qclause: forall PROPOSER1,ACCEPTOR0,ACCEPTOR1,PROPOSER0. promise(ACCEPTOR1,PROPOSER0) | ~promise(ACCEPTOR0,PROPOSER1) | ~leader(PROPOSER0) | (ACCEPTOR0 = ACCEPTOR1 | PROPOSER0 = PROPOSER1)


=== Prime Orbit 20 =====================
size : 36
num_suborbits: 1
294 (*) : ----------1--1---1---------
294     : ['didNotPromise(acceptor1)', 'leader(proposer1)', 'promise(acceptor0,proposer2)']
295     : ----------1---1-1----------
295     : ['didNotPromise(acceptor1)', 'leader(proposer2)', 'promise(acceptor0,proposer1)']
296     : ----------1-1----1---------
296     : ['didNotPromise(acceptor1)', 'leader(proposer0)', 'promise(acceptor0,proposer2)']
297     : ----------1---11-----------
297     : ['didNotPromise(acceptor1)', 'leader(proposer2)', 'promise(acceptor0,proposer0)']
298     : ----------1-1---1----------
298     : ['didNotPromise(acceptor1)', 'leader(proposer0)', 'promise(acceptor0,proposer1)']
299     : ----------1--1-1-----------
299     : ['didNotPromise(acceptor1)', 'leader(proposer1)', 'promise(acceptor0,proposer0)']
300     : -----------1-1---1---------
300     : ['didNotPromise(acceptor2)', 'leader(proposer1)', 'promise(acceptor0,proposer2)']
301     : -----------1--1-1----------
301     : ['didNotPromise(acceptor2)', 'leader(proposer2)', 'promise(acceptor0,proposer1)']
302     : -----------11----1---------
302     : ['didNotPromise(acceptor2)', 'leader(proposer0)', 'promise(acceptor0,proposer2)']
303     : -----------1--11-----------
303     : ['didNotPromise(acceptor2)', 'leader(proposer2)', 'promise(acceptor0,proposer0)']
304     : -----------11---1----------
304     : ['didNotPromise(acceptor2)', 'leader(proposer0)', 'promise(acceptor0,proposer1)']
305     : -----------1-1-1-----------
305     : ['didNotPromise(acceptor2)', 'leader(proposer1)', 'promise(acceptor0,proposer0)']
306     : ---------1---1------1------
306     : ['didNotPromise(acceptor0)', 'leader(proposer1)', 'promise(acceptor1,proposer2)']
307     : ---------1----1----1-------
307     : ['didNotPromise(acceptor0)', 'leader(proposer2)', 'promise(acceptor1,proposer1)']
308     : ---------1--1-------1------
308     : ['didNotPromise(acceptor0)', 'leader(proposer0)', 'promise(acceptor1,proposer2)']
309     : ---------1----1---1--------
309     : ['didNotPromise(acceptor0)', 'leader(proposer2)', 'promise(acceptor1,proposer0)']
310     : ---------1--1------1-------
310     : ['didNotPromise(acceptor0)', 'leader(proposer0)', 'promise(acceptor1,proposer1)']
311     : ---------1---1----1--------
311     : ['didNotPromise(acceptor0)', 'leader(proposer1)', 'promise(acceptor1,proposer0)']
312     : -----------1-1------1------
312     : ['didNotPromise(acceptor2)', 'leader(proposer1)', 'promise(acceptor1,proposer2)']
313     : -----------1--1----1-------
313     : ['didNotPromise(acceptor2)', 'leader(proposer2)', 'promise(acceptor1,proposer1)']
314     : -----------11-------1------
314     : ['didNotPromise(acceptor2)', 'leader(proposer0)', 'promise(acceptor1,proposer2)']
315     : -----------1--1---1--------
315     : ['didNotPromise(acceptor2)', 'leader(proposer2)', 'promise(acceptor1,proposer0)']
316     : -----------11------1-------
316     : ['didNotPromise(acceptor2)', 'leader(proposer0)', 'promise(acceptor1,proposer1)']
317     : -----------1-1----1--------
317     : ['didNotPromise(acceptor2)', 'leader(proposer1)', 'promise(acceptor1,proposer0)']
318     : ---------1---1---------1---
318     : ['didNotPromise(acceptor0)', 'leader(proposer1)', 'promise(acceptor2,proposer2)']
319     : ---------1----1-------1----
319     : ['didNotPromise(acceptor0)', 'leader(proposer2)', 'promise(acceptor2,proposer1)']
320     : ---------1--1----------1---
320     : ['didNotPromise(acceptor0)', 'leader(proposer0)', 'promise(acceptor2,proposer2)']
321     : ---------1----1------1-----
321     : ['didNotPromise(acceptor0)', 'leader(proposer2)', 'promise(acceptor2,proposer0)']
322     : ---------1--1---------1----
322     : ['didNotPromise(acceptor0)', 'leader(proposer0)', 'promise(acceptor2,proposer1)']
323     : ---------1---1-------1-----
323     : ['didNotPromise(acceptor0)', 'leader(proposer1)', 'promise(acceptor2,proposer0)']
324     : ----------1--1---------1---
324     : ['didNotPromise(acceptor1)', 'leader(proposer1)', 'promise(acceptor2,proposer2)']
325     : ----------1---1-------1----
325     : ['didNotPromise(acceptor1)', 'leader(proposer2)', 'promise(acceptor2,proposer1)']
326     : ----------1-1----------1---
326     : ['didNotPromise(acceptor1)', 'leader(proposer0)', 'promise(acceptor2,proposer2)']
327     : ----------1---1------1-----
327     : ['didNotPromise(acceptor1)', 'leader(proposer2)', 'promise(acceptor2,proposer0)']
328     : ----------1-1---------1----
328     : ['didNotPromise(acceptor1)', 'leader(proposer0)', 'promise(acceptor2,proposer1)']
329     : ----------1--1-------1-----
329     : ['didNotPromise(acceptor1)', 'leader(proposer1)', 'promise(acceptor2,proposer0)']
num_forall :   0
num_exists :   0
num_literals : 0
quantified form : None
qcost : 0




---------- QPrime ----------


---------- ConstArgBinding ----------

terms: ['didNotPromise(acceptor1)', 'leader(proposer1)', 'promise(acceptor0,proposer2)']

sign_func_name2args: {'0$didNotPromise': [(Const('acceptor1', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))),)], '0$leader': [(Const('proposer1', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))),)], '0$promise': [(Const('acceptor0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Const('proposer2', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))))]}

const2sigs: {Const('acceptor1', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))): [acceptor$0$didNotPromise$0$0], Const('proposer1', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))): [proposer$0$leader$0$0], Const('acceptor0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))): [acceptor$0$promise$0$0], Const('proposer2', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))): [proposer$0$promise$1$0]}

sig2const: {'acceptor$0$didNotPromise$0$0': Const('acceptor1', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), 'proposer$0$leader$0$0': Const('proposer1', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))), 'acceptor$0$promise$0$0': Const('acceptor0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), 'proposer$0$promise$1$0': Const('proposer2', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))}


---------- ArgPartition ----------

sort2class_sigs: {EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')): [acceptor$0$didNotPromise$0$0, acceptor$0$promise$0$0], EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')): [proposer$0$leader$0$0, proposer$0$promise$1$0]}

sort2part_sig: {EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')): acceptor$0$didNotPromise$0$0 | acceptor$0$promise$0$0, EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')): proposer$0$leader$0$0 | proposer$0$promise$1$0}

part_sig: ('acceptor$0$didNotPromise$0$0 | acceptor$0$promise$0$0', 'proposer$0$leader$0$0 | proposer$0$promise$1$0')


---------- SigGenerator ----------

terms:  ['didNotPromise(acceptor1)', 'leader(proposer1)', 'promise(acceptor0,proposer2)']

func_name2symbol:  {'didNotPromise': Const('didNotPromise', FunctionSort(EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')), BooleanSort())), 'leader': Const('leader', FunctionSort(EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')), BooleanSort())), 'promise': Const('promise', FunctionSort(EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')), EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')), BooleanSort()))}

func_name2args_sort:  {'didNotPromise': (EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')),), 'leader': (EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')),), 'promise': (EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')), EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))}

sign_func_name2count:  {'0$didNotPromise': 1, '0$leader': 1, '0$promise': 1}


---------- ProductArgPartition ----------

sort2class_sigs: {EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')): [acceptor$0$didNotPromise$0$0, acceptor$0$promise$0$0], EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')): [proposer$0$leader$0$0, proposer$0$promise$1$0]}

sort2part_sig: {EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')): acceptor$0$didNotPromise$0$0 | acceptor$0$promise$0$0, EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')): proposer$0$leader$0$0 | proposer$0$promise$1$0}

	sort: acceptor

	identical_classes: {'acceptor$0$didNotPromise$0': [acceptor$0$didNotPromise$0$0], 'acceptor$0$promise$0': [acceptor$0$promise$0$0]}

	identical_single_classes: {'acceptor$0$didNotPromise$0': acceptor$0$didNotPromise$0$0, 'acceptor$0$promise$0': acceptor$0$promise$0$0}

	identical_multi_classes: {}

	sort: proposer

	identical_classes: {'proposer$0$leader$0': [proposer$0$leader$0$0], 'proposer$0$promise$1': [proposer$0$promise$1$0]}

	identical_single_classes: {'proposer$0$leader$0': proposer$0$leader$0$0, 'proposer$0$promise$1': proposer$0$promise$1$0}

	identical_multi_classes: {}


---------- QInference: _set_sort_to_quantifier_mode ----------

quantifier mode: acceptor: QuantifierMode.forall

quantifier mode: proposer: QuantifierMode.forall


---------- QInference: _set_constraint_mode ----------

constraint mode: ConstraintMode.no_merge


---------- QFormula: _set_qvars ----------

forall_qvars: {Var('PROPOSER0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))), Var('PROPOSER1', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))), Var('ACCEPTOR1', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Var('ACCEPTOR0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')))}

exists_qvars: set()


---------- QFormula: _set_signed_func_name_to_args ----------

signed_func_name2args: {'0$didNotPromise': [[Var('ACCEPTOR0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')))]], '0$leader': [[Var('PROPOSER0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))]], '0$promise': [[Var('ACCEPTOR1', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Var('PROPOSER1', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))]]}


---------- QFormula: _set_qterms ----------

qterms: ['promise(ACCEPTOR1,PROPOSER1)', 'didNotPromise(ACCEPTOR0)', 'leader(PROPOSER0)']


---------- QFormula: get_qclause ----------

qclause: forall PROPOSER1,ACCEPTOR0,ACCEPTOR1,PROPOSER0. ~promise(ACCEPTOR1,PROPOSER1) | ~didNotPromise(ACCEPTOR0) | ~leader(PROPOSER0) | (ACCEPTOR0 = ACCEPTOR1 | PROPOSER0 = PROPOSER1)


=== Prime Orbit 21 =====================
size : 36
num_suborbits: 2
330 (*) : -------------1---1-----1---
330     : ['leader(proposer1)', 'promise(acceptor0,proposer2)', 'promise(acceptor2,proposer2)']
331     : --------------1-1-----1----
331     : ['leader(proposer2)', 'promise(acceptor0,proposer1)', 'promise(acceptor2,proposer1)']
332     : ------------1----1-----1---
332     : ['leader(proposer0)', 'promise(acceptor0,proposer2)', 'promise(acceptor2,proposer2)']
333     : --------------11-----1-----
333     : ['leader(proposer2)', 'promise(acceptor0,proposer0)', 'promise(acceptor2,proposer0)']
334     : ------------1---1-----1----
334     : ['leader(proposer0)', 'promise(acceptor0,proposer1)', 'promise(acceptor2,proposer1)']
335     : -------------1-1-----1-----
335     : ['leader(proposer1)', 'promise(acceptor0,proposer0)', 'promise(acceptor2,proposer0)']
336     : -------------1---1--1------
336     : ['leader(proposer1)', 'promise(acceptor0,proposer2)', 'promise(acceptor1,proposer2)']
337     : --------------1-1--1-------
337     : ['leader(proposer2)', 'promise(acceptor0,proposer1)', 'promise(acceptor1,proposer1)']
338     : ------------1----1--1------
338     : ['leader(proposer0)', 'promise(acceptor0,proposer2)', 'promise(acceptor1,proposer2)']
339     : --------------11--1--------
339     : ['leader(proposer2)', 'promise(acceptor0,proposer0)', 'promise(acceptor1,proposer0)']
340     : ------------1---1--1-------
340     : ['leader(proposer0)', 'promise(acceptor0,proposer1)', 'promise(acceptor1,proposer1)']
341     : -------------1-1--1--------
341     : ['leader(proposer1)', 'promise(acceptor0,proposer0)', 'promise(acceptor1,proposer0)']
342     : -------------1------1--1---
342     : ['leader(proposer1)', 'promise(acceptor1,proposer2)', 'promise(acceptor2,proposer2)']
343     : --------------1----1--1----
343     : ['leader(proposer2)', 'promise(acceptor1,proposer1)', 'promise(acceptor2,proposer1)']
344     : ------------1-------1--1---
344     : ['leader(proposer0)', 'promise(acceptor1,proposer2)', 'promise(acceptor2,proposer2)']
345     : --------------1---1--1-----
345     : ['leader(proposer2)', 'promise(acceptor1,proposer0)', 'promise(acceptor2,proposer0)']
346     : ------------1------1--1----
346     : ['leader(proposer0)', 'promise(acceptor1,proposer1)', 'promise(acceptor2,proposer1)']
347     : -------------1----1--1-----
347     : ['leader(proposer1)', 'promise(acceptor1,proposer0)', 'promise(acceptor2,proposer0)']
348 (*) : -------------1---1---1-----
348     : ['leader(proposer1)', 'promise(acceptor0,proposer2)', 'promise(acceptor2,proposer0)']
349     : --------------1-1----1-----
349     : ['leader(proposer2)', 'promise(acceptor0,proposer1)', 'promise(acceptor2,proposer0)']
350     : ------------1----1----1----
350     : ['leader(proposer0)', 'promise(acceptor0,proposer2)', 'promise(acceptor2,proposer1)']
351     : --------------11------1----
351     : ['leader(proposer2)', 'promise(acceptor0,proposer0)', 'promise(acceptor2,proposer1)']
352     : ------------1---1------1---
352     : ['leader(proposer0)', 'promise(acceptor0,proposer1)', 'promise(acceptor2,proposer2)']
353     : -------------1-1-------1---
353     : ['leader(proposer1)', 'promise(acceptor0,proposer0)', 'promise(acceptor2,proposer2)']
354     : -------------1---11--------
354     : ['leader(proposer1)', 'promise(acceptor0,proposer2)', 'promise(acceptor1,proposer0)']
355     : --------------1-1-1--------
355     : ['leader(proposer2)', 'promise(acceptor0,proposer1)', 'promise(acceptor1,proposer0)']
356     : ------------1----1-1-------
356     : ['leader(proposer0)', 'promise(acceptor0,proposer2)', 'promise(acceptor1,proposer1)']
357     : --------------11---1-------
357     : ['leader(proposer2)', 'promise(acceptor0,proposer0)', 'promise(acceptor1,proposer1)']
358     : ------------1---1---1------
358     : ['leader(proposer0)', 'promise(acceptor0,proposer1)', 'promise(acceptor1,proposer2)']
359     : -------------1-1----1------
359     : ['leader(proposer1)', 'promise(acceptor0,proposer0)', 'promise(acceptor1,proposer2)']
360     : -------------1------11-----
360     : ['leader(proposer1)', 'promise(acceptor1,proposer2)', 'promise(acceptor2,proposer0)']
361     : --------------1----1-1-----
361     : ['leader(proposer2)', 'promise(acceptor1,proposer1)', 'promise(acceptor2,proposer0)']
362     : ------------1-------1-1----
362     : ['leader(proposer0)', 'promise(acceptor1,proposer2)', 'promise(acceptor2,proposer1)']
363     : --------------1---1---1----
363     : ['leader(proposer2)', 'promise(acceptor1,proposer0)', 'promise(acceptor2,proposer1)']
364     : ------------1------1---1---
364     : ['leader(proposer0)', 'promise(acceptor1,proposer1)', 'promise(acceptor2,proposer2)']
365     : -------------1----1----1---
365     : ['leader(proposer1)', 'promise(acceptor1,proposer0)', 'promise(acceptor2,proposer2)']
num_forall :   0
num_exists :   0
num_literals : 0
quantified form : None
qcost : 0




---------- QPrime ----------


---------- ConstArgBinding ----------

terms: ['leader(proposer1)', 'promise(acceptor0,proposer2)', 'promise(acceptor2,proposer2)']

sign_func_name2args: {'0$leader': [(Const('proposer1', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))),)], '0$promise': [(Const('acceptor0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Const('proposer2', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))), (Const('acceptor2', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Const('proposer2', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))))]}

const2sigs: {Const('proposer1', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))): [proposer$0$leader$0$0], Const('acceptor0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))): [acceptor$0$promise$0$0], Const('proposer2', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))): [proposer$0$promise$1$0, proposer$0$promise$1$1], Const('acceptor2', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))): [acceptor$0$promise$0$1]}

sig2const: {'proposer$0$leader$0$0': Const('proposer1', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))), 'acceptor$0$promise$0$0': Const('acceptor0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), 'proposer$0$promise$1$0': Const('proposer2', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))), 'acceptor$0$promise$0$1': Const('acceptor2', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), 'proposer$0$promise$1$1': Const('proposer2', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))}


---------- ArgPartition ----------

sort2class_sigs: {EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')): [proposer$0$leader$0$0, proposer$0$promise$1$0; proposer$0$promise$1$1], EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')): [acceptor$0$promise$0$0, acceptor$0$promise$0$1]}

sort2part_sig: {EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')): proposer$0$leader$0$0 | proposer$0$promise$1$0; proposer$0$promise$1$1, EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')): acceptor$0$promise$0$0 | acceptor$0$promise$0$1}

part_sig: ('acceptor$0$promise$0$0 | acceptor$0$promise$0$1', 'proposer$0$leader$0$0 | proposer$0$promise$1$0; proposer$0$promise$1$1')


---------- QPrime ----------


---------- ConstArgBinding ----------

terms: ['leader(proposer1)', 'promise(acceptor0,proposer2)', 'promise(acceptor2,proposer0)']

sign_func_name2args: {'0$leader': [(Const('proposer1', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))),)], '0$promise': [(Const('acceptor0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Const('proposer2', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))), (Const('acceptor2', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Const('proposer0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))))]}

const2sigs: {Const('proposer1', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))): [proposer$0$leader$0$0], Const('acceptor0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))): [acceptor$0$promise$0$0], Const('proposer2', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))): [proposer$0$promise$1$0], Const('acceptor2', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))): [acceptor$0$promise$0$1], Const('proposer0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))): [proposer$0$promise$1$1]}

sig2const: {'proposer$0$leader$0$0': Const('proposer1', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))), 'acceptor$0$promise$0$0': Const('acceptor0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), 'proposer$0$promise$1$0': Const('proposer2', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))), 'acceptor$0$promise$0$1': Const('acceptor2', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), 'proposer$0$promise$1$1': Const('proposer0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))}


---------- ArgPartition ----------

sort2class_sigs: {EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')): [proposer$0$leader$0$0, proposer$0$promise$1$0, proposer$0$promise$1$1], EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')): [acceptor$0$promise$0$0, acceptor$0$promise$0$1]}

sort2part_sig: {EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')): proposer$0$leader$0$0 | proposer$0$promise$1$0 | proposer$0$promise$1$1, EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')): acceptor$0$promise$0$0 | acceptor$0$promise$0$1}

part_sig: ('acceptor$0$promise$0$0 | acceptor$0$promise$0$1', 'proposer$0$leader$0$0 | proposer$0$promise$1$0 | proposer$0$promise$1$1')


---------- SigGenerator ----------

terms:  ['leader(proposer1)', 'promise(acceptor0,proposer2)', 'promise(acceptor2,proposer2)']

func_name2symbol:  {'leader': Const('leader', FunctionSort(EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')), BooleanSort())), 'promise': Const('promise', FunctionSort(EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')), EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')), BooleanSort()))}

func_name2args_sort:  {'leader': (EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')),), 'promise': (EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')), EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))}

sign_func_name2count:  {'0$leader': 1, '0$promise': 2}


---------- ProductArgPartition ----------

sort2class_sigs: {EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')): [proposer$0$leader$0$0, proposer$0$promise$1$0, proposer$0$promise$1$1], EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')): [acceptor$0$promise$0$0, acceptor$0$promise$0$1]}

sort2part_sig: {EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')): proposer$0$leader$0$0 | proposer$0$promise$1$0 | proposer$0$promise$1$1, EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')): acceptor$0$promise$0$0 | acceptor$0$promise$0$1}

	sort: proposer

	identical_classes: {'proposer$0$leader$0': [proposer$0$leader$0$0], 'proposer$0$promise$1': [proposer$0$promise$1$0, proposer$0$promise$1$1]}

	identical_single_classes: {'proposer$0$leader$0': proposer$0$leader$0$0}

	identical_multi_classes: {'proposer$0$promise$1': [proposer$0$promise$1$0, proposer$0$promise$1$1]}

	sort: acceptor

	identical_classes: {'acceptor$0$promise$0': [acceptor$0$promise$0$0, acceptor$0$promise$0$1]}

	identical_single_classes: {}

	identical_multi_classes: {'acceptor$0$promise$0': [acceptor$0$promise$0$0, acceptor$0$promise$0$1]}


---------- QInference: _set_sort_to_quantifier_mode ----------

quantifier mode: proposer: QuantifierMode.forall

quantifier mode: acceptor: QuantifierMode.forall


---------- QInference: _set_constraint_mode ----------

constraint mode: ConstraintMode.merge


---------- QFormula: _set_qvars ----------

forall_qvars: {Var('ACCEPTOR0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Var('PROPOSER0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))), Var('PROPOSER1', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))), Var('ACCEPTOR1', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Var('PROPOSER2', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))}

exists_qvars: set()


---------- QFormula: _set_signed_func_name_to_args ----------

signed_func_name2args: {'0$leader': [[Var('PROPOSER0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))]], '0$promise': [[Var('ACCEPTOR0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Var('PROPOSER1', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))], [Var('ACCEPTOR1', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Var('PROPOSER2', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))]]}


---------- QFormula: _set_qterms ----------

qterms: ['promise(ACCEPTOR1,PROPOSER2)', 'promise(ACCEPTOR0,PROPOSER1)', 'leader(PROPOSER0)']


---------- QFormula: _get_partition_constraint ----------

partition: ('acceptor$0$promise$0$0 | acceptor$0$promise$0$1', 'proposer$0$leader$0$0 | proposer$0$promise$1$0; proposer$0$promise$1$1')[]

sort partition signature: acceptor$0$promise$0$0 | acceptor$0$promise$0$1

class signature: acceptor$0$promise$0$0


---------- QFormula: _get_class_constraint ----------

qvars: ['ACCEPTOR0:acceptor']

eq_terms: []

class signature: acceptor$0$promise$0$1


---------- QFormula: _get_class_constraint ----------

qvars: ['ACCEPTOR1:acceptor']

eq_terms: []


---------- QFormula: _get_diff_class_constraint ----------

qvars: ['ACCEPTOR1:acceptor', 'ACCEPTOR0:acceptor']

eq_terms: ['ACCEPTOR0:acceptor ~= ACCEPTOR1']

sort partition signature: proposer$0$leader$0$0 | proposer$0$promise$1$0; proposer$0$promise$1$1

class signature: proposer$0$leader$0$0


---------- QFormula: _get_class_constraint ----------

qvars: ['PROPOSER0:proposer']

eq_terms: []

class signature: proposer$0$promise$1$0; proposer$0$promise$1$1


---------- QFormula: _get_class_constraint ----------

qvars: ['PROPOSER1:proposer', 'PROPOSER2:proposer']

eq_terms: ['PROPOSER1:proposer = PROPOSER2']


---------- QFormula: _get_diff_class_constraint ----------

qvars: ['PROPOSER0:proposer', 'PROPOSER1:proposer']

eq_terms: ['PROPOSER0:proposer ~= PROPOSER1']

constraint: ['ACCEPTOR0:acceptor ~= ACCEPTOR1', 'PROPOSER1:proposer = PROPOSER2', 'PROPOSER0:proposer ~= PROPOSER1']


---------- QFormula: _get_partition_constraint ----------

partition: ('acceptor$0$promise$0$0 | acceptor$0$promise$0$1', 'proposer$0$leader$0$0 | proposer$0$promise$1$0 | proposer$0$promise$1$1')[]

sort partition signature: acceptor$0$promise$0$0 | acceptor$0$promise$0$1

class signature: acceptor$0$promise$0$0


---------- QFormula: _get_class_constraint ----------

qvars: ['ACCEPTOR0:acceptor']

eq_terms: []

class signature: acceptor$0$promise$0$1


---------- QFormula: _get_class_constraint ----------

qvars: ['ACCEPTOR1:acceptor']

eq_terms: []


---------- QFormula: _get_diff_class_constraint ----------

qvars: ['ACCEPTOR1:acceptor', 'ACCEPTOR0:acceptor']

eq_terms: ['ACCEPTOR0:acceptor ~= ACCEPTOR1']

sort partition signature: proposer$0$leader$0$0 | proposer$0$promise$1$0 | proposer$0$promise$1$1

class signature: proposer$0$leader$0$0


---------- QFormula: _get_class_constraint ----------

qvars: ['PROPOSER0:proposer']

eq_terms: []

class signature: proposer$0$promise$1$0


---------- QFormula: _get_class_constraint ----------

qvars: ['PROPOSER1:proposer']

eq_terms: []

class signature: proposer$0$promise$1$1


---------- QFormula: _get_class_constraint ----------

qvars: ['PROPOSER2:proposer']

eq_terms: []


---------- QFormula: _get_diff_class_constraint ----------

qvars: ['PROPOSER0:proposer', 'PROPOSER1:proposer', 'PROPOSER2:proposer']

eq_terms: ['PROPOSER0:proposer ~= PROPOSER2', 'PROPOSER0:proposer ~= PROPOSER1', 'PROPOSER1:proposer ~= PROPOSER2']

constraint: ['ACCEPTOR0:acceptor ~= ACCEPTOR1', 'PROPOSER0:proposer ~= PROPOSER2', 'PROPOSER0:proposer ~= PROPOSER1', 'PROPOSER1:proposer ~= PROPOSER2']


---------- QFormula: _get_partition_constraint ----------

partition: ('acceptor$0$promise$0$0 | acceptor$0$promise$0$1', 'proposer$0$leader$0$0 | proposer$0$promise$1$0; proposer$0$promise$1$1')[]

sort partition signature: acceptor$0$promise$0$0 | acceptor$0$promise$0$1

class signature: acceptor$0$promise$0$0


---------- QFormula: _get_class_constraint ----------

qvars: ['ACCEPTOR0:acceptor']

eq_terms: []

class signature: acceptor$0$promise$0$1


---------- QFormula: _get_class_constraint ----------

qvars: ['ACCEPTOR1:acceptor']

eq_terms: []


---------- QFormula: _get_diff_class_constraint ----------

qvars: ['ACCEPTOR1:acceptor', 'ACCEPTOR0:acceptor']

eq_terms: ['ACCEPTOR0:acceptor ~= ACCEPTOR1']

sort partition signature: proposer$0$leader$0$0 | proposer$0$promise$1$0; proposer$0$promise$1$1

class signature: proposer$0$leader$0$0


---------- QFormula: _get_class_constraint ----------

qvars: ['PROPOSER0:proposer']

eq_terms: []

class signature: proposer$0$promise$1$0; proposer$0$promise$1$1


---------- QFormula: _get_class_constraint ----------

qvars: ['PROPOSER1:proposer', 'PROPOSER2:proposer']

eq_terms: ['PROPOSER1:proposer = PROPOSER2']


---------- QFormula: _get_diff_class_constraint ----------

qvars: ['PROPOSER0:proposer', 'PROPOSER1:proposer']

eq_terms: ['PROPOSER0:proposer ~= PROPOSER1']

constraint: ['ACCEPTOR0:acceptor ~= ACCEPTOR1', 'PROPOSER1:proposer = PROPOSER2', 'PROPOSER0:proposer ~= PROPOSER1']


---------- QFormula: _get_partition_constraint ----------

partition: ('acceptor$0$promise$0$0 | acceptor$0$promise$0$1', 'proposer$0$leader$0$0 | proposer$0$promise$1$0 | proposer$0$promise$1$1')[]

sort partition signature: acceptor$0$promise$0$0 | acceptor$0$promise$0$1

class signature: acceptor$0$promise$0$0


---------- QFormula: _get_class_constraint ----------

qvars: ['ACCEPTOR0:acceptor']

eq_terms: []

class signature: acceptor$0$promise$0$1


---------- QFormula: _get_class_constraint ----------

qvars: ['ACCEPTOR1:acceptor']

eq_terms: []


---------- QFormula: _get_diff_class_constraint ----------

qvars: ['ACCEPTOR1:acceptor', 'ACCEPTOR0:acceptor']

eq_terms: ['ACCEPTOR0:acceptor ~= ACCEPTOR1']

sort partition signature: proposer$0$leader$0$0 | proposer$0$promise$1$0 | proposer$0$promise$1$1

class signature: proposer$0$leader$0$0


---------- QFormula: _get_class_constraint ----------

qvars: ['PROPOSER0:proposer']

eq_terms: []

class signature: proposer$0$promise$1$0


---------- QFormula: _get_class_constraint ----------

qvars: ['PROPOSER1:proposer']

eq_terms: []

class signature: proposer$0$promise$1$1


---------- QFormula: _get_class_constraint ----------

qvars: ['PROPOSER2:proposer']

eq_terms: []


---------- QFormula: _get_diff_class_constraint ----------

qvars: ['PROPOSER0:proposer', 'PROPOSER1:proposer', 'PROPOSER2:proposer']

eq_terms: ['PROPOSER0:proposer ~= PROPOSER2', 'PROPOSER0:proposer ~= PROPOSER1', 'PROPOSER1:proposer ~= PROPOSER2']

constraint: ['ACCEPTOR0:acceptor ~= ACCEPTOR1', 'PROPOSER0:proposer ~= PROPOSER2', 'PROPOSER0:proposer ~= PROPOSER1', 'PROPOSER1:proposer ~= PROPOSER2']


---------- QFormula: _get_partition_constraint ----------

partition: ('acceptor$0$promise$0$0; acceptor$0$promise$0$1', 'proposer$0$leader$0$0 | proposer$0$promise$1$0 | proposer$0$promise$1$1')[]

sort partition signature: acceptor$0$promise$0$0; acceptor$0$promise$0$1

class signature: acceptor$0$promise$0$0; acceptor$0$promise$0$1


---------- QFormula: _get_class_constraint ----------

qvars: ['ACCEPTOR0:acceptor', 'ACCEPTOR1:acceptor']

eq_terms: ['ACCEPTOR0:acceptor = ACCEPTOR1']


---------- QFormula: _get_diff_class_constraint ----------

qvars: ['ACCEPTOR0:acceptor']

eq_terms: []

sort partition signature: proposer$0$leader$0$0 | proposer$0$promise$1$0 | proposer$0$promise$1$1

class signature: proposer$0$leader$0$0


---------- QFormula: _get_class_constraint ----------

qvars: ['PROPOSER0:proposer']

eq_terms: []

class signature: proposer$0$promise$1$0


---------- QFormula: _get_class_constraint ----------

qvars: ['PROPOSER1:proposer']

eq_terms: []

class signature: proposer$0$promise$1$1


---------- QFormula: _get_class_constraint ----------

qvars: ['PROPOSER2:proposer']

eq_terms: []


---------- QFormula: _get_diff_class_constraint ----------

qvars: ['PROPOSER0:proposer', 'PROPOSER1:proposer', 'PROPOSER2:proposer']

eq_terms: ['PROPOSER0:proposer ~= PROPOSER2', 'PROPOSER0:proposer ~= PROPOSER1', 'PROPOSER1:proposer ~= PROPOSER2']

constraint: ['ACCEPTOR0:acceptor = ACCEPTOR1', 'PROPOSER0:proposer ~= PROPOSER2', 'PROPOSER0:proposer ~= PROPOSER1', 'PROPOSER1:proposer ~= PROPOSER2']


---------- QFormula: _get_partition_constraint ----------

partition: ('acceptor$0$promise$0$0; acceptor$0$promise$0$1', 'proposer$0$leader$0$0 | proposer$0$promise$1$0 | proposer$0$promise$1$1')[]

sort partition signature: acceptor$0$promise$0$0; acceptor$0$promise$0$1

class signature: acceptor$0$promise$0$0; acceptor$0$promise$0$1


---------- QFormula: _get_class_constraint ----------

qvars: ['ACCEPTOR0:acceptor', 'ACCEPTOR1:acceptor']

eq_terms: ['ACCEPTOR0:acceptor = ACCEPTOR1']


---------- QFormula: _get_diff_class_constraint ----------

qvars: ['ACCEPTOR0:acceptor']

eq_terms: []

sort partition signature: proposer$0$leader$0$0 | proposer$0$promise$1$0 | proposer$0$promise$1$1

class signature: proposer$0$leader$0$0


---------- QFormula: _get_class_constraint ----------

qvars: ['PROPOSER0:proposer']

eq_terms: []

class signature: proposer$0$promise$1$0


---------- QFormula: _get_class_constraint ----------

qvars: ['PROPOSER1:proposer']

eq_terms: []

class signature: proposer$0$promise$1$1


---------- QFormula: _get_class_constraint ----------

qvars: ['PROPOSER2:proposer']

eq_terms: []


---------- QFormula: _get_diff_class_constraint ----------

qvars: ['PROPOSER0:proposer', 'PROPOSER1:proposer', 'PROPOSER2:proposer']

eq_terms: ['PROPOSER0:proposer ~= PROPOSER2', 'PROPOSER0:proposer ~= PROPOSER1', 'PROPOSER1:proposer ~= PROPOSER2']

constraint: ['ACCEPTOR0:acceptor = ACCEPTOR1', 'PROPOSER0:proposer ~= PROPOSER2', 'PROPOSER0:proposer ~= PROPOSER1', 'PROPOSER1:proposer ~= PROPOSER2']


---------- QFormula: _get_partition_constraint ----------

partition: ('acceptor$0$promise$0$0; acceptor$0$promise$0$1', 'proposer$0$leader$0$0 | proposer$0$promise$1$0; proposer$0$promise$1$1')[]

sort partition signature: acceptor$0$promise$0$0; acceptor$0$promise$0$1

class signature: acceptor$0$promise$0$0; acceptor$0$promise$0$1


---------- QFormula: _get_class_constraint ----------

qvars: ['ACCEPTOR0:acceptor', 'ACCEPTOR1:acceptor']

eq_terms: ['ACCEPTOR0:acceptor = ACCEPTOR1']


---------- QFormula: _get_diff_class_constraint ----------

qvars: ['ACCEPTOR0:acceptor']

eq_terms: []

sort partition signature: proposer$0$leader$0$0 | proposer$0$promise$1$0; proposer$0$promise$1$1

class signature: proposer$0$leader$0$0


---------- QFormula: _get_class_constraint ----------

qvars: ['PROPOSER0:proposer']

eq_terms: []

class signature: proposer$0$promise$1$0; proposer$0$promise$1$1


---------- QFormula: _get_class_constraint ----------

qvars: ['PROPOSER1:proposer', 'PROPOSER2:proposer']

eq_terms: ['PROPOSER1:proposer = PROPOSER2']


---------- QFormula: _get_diff_class_constraint ----------

qvars: ['PROPOSER0:proposer', 'PROPOSER1:proposer']

eq_terms: ['PROPOSER0:proposer ~= PROPOSER1']

constraint: ['ACCEPTOR0:acceptor = ACCEPTOR1', 'PROPOSER1:proposer = PROPOSER2', 'PROPOSER0:proposer ~= PROPOSER1']


---------- QFormula: get_qclause ----------

qclause: forall ACCEPTOR0,PROPOSER1,PROPOSER0,ACCEPTOR1,PROPOSER2. ~promise(ACCEPTOR1,PROPOSER2) | ~promise(ACCEPTOR0,PROPOSER1) | ~leader(PROPOSER0) | ((ACCEPTOR0 = ACCEPTOR1 | PROPOSER1 ~= PROPOSER2 | PROPOSER0 = PROPOSER1) & (ACCEPTOR0 = ACCEPTOR1 | PROPOSER0 = PROPOSER2 | PROPOSER0 = PROPOSER1 | PROPOSER1 = PROPOSER2))


=== Prime Orbit 23 =====================
size : 9
num_suborbits: 1
375 (*) : ----------0-------0-0----0-
375     : ['~didNotPromise(acceptor1)', '~promise(acceptor1,proposer0)', '~promise(acceptor1,proposer2)', '~start(proposer1)']
376     : ----------0-------00------0
376     : ['~didNotPromise(acceptor1)', '~promise(acceptor1,proposer0)', '~promise(acceptor1,proposer1)', '~start(proposer2)']
377     : ----------0--------00---0--
377     : ['~didNotPromise(acceptor1)', '~promise(acceptor1,proposer1)', '~promise(acceptor1,proposer2)', '~start(proposer0)']
378     : -----------0---------0-0-0-
378     : ['~didNotPromise(acceptor2)', '~promise(acceptor2,proposer0)', '~promise(acceptor2,proposer2)', '~start(proposer1)']
379     : -----------0---------00---0
379     : ['~didNotPromise(acceptor2)', '~promise(acceptor2,proposer0)', '~promise(acceptor2,proposer1)', '~start(proposer2)']
380     : -----------0----------000--
380     : ['~didNotPromise(acceptor2)', '~promise(acceptor2,proposer1)', '~promise(acceptor2,proposer2)', '~start(proposer0)']
381     : ---------0-----0-0-------0-
381     : ['~didNotPromise(acceptor0)', '~promise(acceptor0,proposer0)', '~promise(acceptor0,proposer2)', '~start(proposer1)']
382     : ---------0-----00---------0
382     : ['~didNotPromise(acceptor0)', '~promise(acceptor0,proposer0)', '~promise(acceptor0,proposer1)', '~start(proposer2)']
383     : ---------0------00------0--
383     : ['~didNotPromise(acceptor0)', '~promise(acceptor0,proposer1)', '~promise(acceptor0,proposer2)', '~start(proposer0)']
num_forall :   0
num_exists :   0
num_literals : 0
quantified form : None
qcost : 0




---------- QPrime ----------


---------- ConstArgBinding ----------

terms: ['~didNotPromise(acceptor1)', '~promise(acceptor1,proposer0)', '~promise(acceptor1,proposer2)', '~start(proposer1)']

sign_func_name2args: {'1$didNotPromise': [(Const('acceptor1', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))),)], '1$promise': [(Const('acceptor1', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Const('proposer0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))), (Const('acceptor1', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Const('proposer2', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))))], '1$start': [(Const('proposer1', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))),)]}

const2sigs: {Const('acceptor1', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))): [acceptor$1$didNotPromise$0$0, acceptor$1$promise$0$0, acceptor$1$promise$0$1], Const('proposer0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))): [proposer$1$promise$1$0], Const('proposer2', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))): [proposer$1$promise$1$1], Const('proposer1', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))): [proposer$1$start$0$0]}

sig2const: {'acceptor$1$didNotPromise$0$0': Const('acceptor1', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), 'acceptor$1$promise$0$0': Const('acceptor1', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), 'proposer$1$promise$1$0': Const('proposer0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))), 'acceptor$1$promise$0$1': Const('acceptor1', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), 'proposer$1$promise$1$1': Const('proposer2', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))), 'proposer$1$start$0$0': Const('proposer1', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))}


---------- ArgPartition ----------

sort2class_sigs: {EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')): [acceptor$1$didNotPromise$0$0; acceptor$1$promise$0$0; acceptor$1$promise$0$1], EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')): [proposer$1$promise$1$0, proposer$1$promise$1$1, proposer$1$start$0$0]}

sort2part_sig: {EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')): acceptor$1$didNotPromise$0$0; acceptor$1$promise$0$0; acceptor$1$promise$0$1, EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')): proposer$1$promise$1$0 | proposer$1$promise$1$1 | proposer$1$start$0$0}

part_sig: ('acceptor$1$didNotPromise$0$0; acceptor$1$promise$0$0; acceptor$1$promise$0$1', 'proposer$1$promise$1$0 | proposer$1$promise$1$1 | proposer$1$start$0$0')


---------- SigGenerator ----------

terms:  ['~didNotPromise(acceptor1)', '~promise(acceptor1,proposer0)', '~promise(acceptor1,proposer2)', '~start(proposer1)']

func_name2symbol:  {'didNotPromise': Const('didNotPromise', FunctionSort(EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')), BooleanSort())), 'promise': Const('promise', FunctionSort(EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')), EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')), BooleanSort())), 'start': Const('start', FunctionSort(EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')), BooleanSort()))}

func_name2args_sort:  {'didNotPromise': (EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')),), 'promise': (EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')), EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))), 'start': (EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')),)}

sign_func_name2count:  {'1$didNotPromise': 1, '1$promise': 2, '1$start': 1}


---------- ProductArgPartition ----------

sort2class_sigs: {EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')): [acceptor$1$didNotPromise$0$0; acceptor$1$promise$0$0; acceptor$1$promise$0$1], EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')): [proposer$1$promise$1$0, proposer$1$promise$1$1, proposer$1$start$0$0]}

sort2part_sig: {EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')): acceptor$1$didNotPromise$0$0; acceptor$1$promise$0$0; acceptor$1$promise$0$1, EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')): proposer$1$promise$1$0 | proposer$1$promise$1$1 | proposer$1$start$0$0}

	sort: acceptor

	identical_classes: {'acceptor$1$didNotPromise$0; acceptor$1$promise$0; acceptor$1$promise$0': [acceptor$1$didNotPromise$0$0; acceptor$1$promise$0$0; acceptor$1$promise$0$1]}

	identical_single_classes: {'acceptor$1$didNotPromise$0; acceptor$1$promise$0; acceptor$1$promise$0': acceptor$1$didNotPromise$0$0; acceptor$1$promise$0$0; acceptor$1$promise$0$1}

	identical_multi_classes: {}

	sort: proposer

	identical_classes: {'proposer$1$promise$1': [proposer$1$promise$1$0, proposer$1$promise$1$1], 'proposer$1$start$0': [proposer$1$start$0$0]}

	identical_single_classes: {'proposer$1$start$0': proposer$1$start$0$0}

	identical_multi_classes: {'proposer$1$promise$1': [proposer$1$promise$1$0, proposer$1$promise$1$1]}


---------- QInference: _set_sort_to_quantifier_mode ----------

quantifier mode: acceptor: QuantifierMode.forall

quantifier mode: proposer: QuantifierMode.forall_exists


---------- QInference: _set_constraint_mode ----------

constraint mode: ConstraintMode.no_merge


---------- QFormula: _set_qvars ----------

forall_qvars: {Var('PROPOSER1', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))), Var('ACCEPTOR0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')))}

exists_qvars: {Var('PROPOSER0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))}


---------- QFormula: _set_signed_func_name_to_args ----------

signed_func_name2args: {'1$didNotPromise': [[Var('ACCEPTOR0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')))]], '1$promise': [[Var('ACCEPTOR0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Var('PROPOSER0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))], [Var('ACCEPTOR0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Var('PROPOSER0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))]], '1$start': [[Var('PROPOSER1', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))]]}


---------- QFormula: _set_qterms ----------

qterms: ['~didNotPromise(ACCEPTOR0)', '~start(PROPOSER1)', '~promise(ACCEPTOR0,PROPOSER0)']


---------- QFormula: get_qclause ----------

qclause: forall ACCEPTOR0,PROPOSER1. didNotPromise(ACCEPTOR0) | start(PROPOSER1) | (exists PROPOSER0. (promise(ACCEPTOR0,PROPOSER0) & PROPOSER0 ~= PROPOSER1))


=== Prime Orbit 24 =====================
size : 9
num_suborbits: 1
384 (*) : ----------0-------0------00
384     : ['~didNotPromise(acceptor1)', '~promise(acceptor1,proposer0)', '~start(proposer1)', '~start(proposer2)']
385     : ----------0--------0----0-0
385     : ['~didNotPromise(acceptor1)', '~promise(acceptor1,proposer1)', '~start(proposer0)', '~start(proposer2)']
386     : ----------0---------0---00-
386     : ['~didNotPromise(acceptor1)', '~promise(acceptor1,proposer2)', '~start(proposer0)', '~start(proposer1)']
387     : -----------0---------0---00
387     : ['~didNotPromise(acceptor2)', '~promise(acceptor2,proposer0)', '~start(proposer1)', '~start(proposer2)']
388     : -----------0----------0-0-0
388     : ['~didNotPromise(acceptor2)', '~promise(acceptor2,proposer1)', '~start(proposer0)', '~start(proposer2)']
389     : -----------0-----------000-
389     : ['~didNotPromise(acceptor2)', '~promise(acceptor2,proposer2)', '~start(proposer0)', '~start(proposer1)']
390     : ---------0-----0---------00
390     : ['~didNotPromise(acceptor0)', '~promise(acceptor0,proposer0)', '~start(proposer1)', '~start(proposer2)']
391     : ---------0------0-------0-0
391     : ['~didNotPromise(acceptor0)', '~promise(acceptor0,proposer1)', '~start(proposer0)', '~start(proposer2)']
392     : ---------0-------0------00-
392     : ['~didNotPromise(acceptor0)', '~promise(acceptor0,proposer2)', '~start(proposer0)', '~start(proposer1)']
num_forall :   0
num_exists :   0
num_literals : 0
quantified form : None
qcost : 0




---------- QPrime ----------


---------- ConstArgBinding ----------

terms: ['~didNotPromise(acceptor1)', '~promise(acceptor1,proposer0)', '~start(proposer1)', '~start(proposer2)']

sign_func_name2args: {'1$didNotPromise': [(Const('acceptor1', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))),)], '1$promise': [(Const('acceptor1', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Const('proposer0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))))], '1$start': [(Const('proposer1', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))),), (Const('proposer2', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))),)]}

const2sigs: {Const('acceptor1', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))): [acceptor$1$didNotPromise$0$0, acceptor$1$promise$0$0], Const('proposer0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))): [proposer$1$promise$1$0], Const('proposer1', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))): [proposer$1$start$0$0], Const('proposer2', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))): [proposer$1$start$0$1]}

sig2const: {'acceptor$1$didNotPromise$0$0': Const('acceptor1', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), 'acceptor$1$promise$0$0': Const('acceptor1', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), 'proposer$1$promise$1$0': Const('proposer0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))), 'proposer$1$start$0$0': Const('proposer1', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))), 'proposer$1$start$0$1': Const('proposer2', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))}


---------- ArgPartition ----------

sort2class_sigs: {EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')): [acceptor$1$didNotPromise$0$0; acceptor$1$promise$0$0], EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')): [proposer$1$promise$1$0, proposer$1$start$0$0, proposer$1$start$0$1]}

sort2part_sig: {EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')): acceptor$1$didNotPromise$0$0; acceptor$1$promise$0$0, EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')): proposer$1$promise$1$0 | proposer$1$start$0$0 | proposer$1$start$0$1}

part_sig: ('acceptor$1$didNotPromise$0$0; acceptor$1$promise$0$0', 'proposer$1$promise$1$0 | proposer$1$start$0$0 | proposer$1$start$0$1')


---------- SigGenerator ----------

terms:  ['~didNotPromise(acceptor1)', '~promise(acceptor1,proposer0)', '~start(proposer1)', '~start(proposer2)']

func_name2symbol:  {'didNotPromise': Const('didNotPromise', FunctionSort(EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')), BooleanSort())), 'promise': Const('promise', FunctionSort(EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')), EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')), BooleanSort())), 'start': Const('start', FunctionSort(EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')), BooleanSort()))}

func_name2args_sort:  {'didNotPromise': (EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')),), 'promise': (EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')), EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))), 'start': (EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')),)}

sign_func_name2count:  {'1$didNotPromise': 1, '1$promise': 1, '1$start': 2}


---------- ProductArgPartition ----------

sort2class_sigs: {EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')): [acceptor$1$didNotPromise$0$0; acceptor$1$promise$0$0], EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')): [proposer$1$promise$1$0, proposer$1$start$0$0, proposer$1$start$0$1]}

sort2part_sig: {EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')): acceptor$1$didNotPromise$0$0; acceptor$1$promise$0$0, EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')): proposer$1$promise$1$0 | proposer$1$start$0$0 | proposer$1$start$0$1}

	sort: acceptor

	identical_classes: {'acceptor$1$didNotPromise$0; acceptor$1$promise$0': [acceptor$1$didNotPromise$0$0; acceptor$1$promise$0$0]}

	identical_single_classes: {'acceptor$1$didNotPromise$0; acceptor$1$promise$0': acceptor$1$didNotPromise$0$0; acceptor$1$promise$0$0}

	identical_multi_classes: {}

	sort: proposer

	identical_classes: {'proposer$1$promise$1': [proposer$1$promise$1$0], 'proposer$1$start$0': [proposer$1$start$0$0, proposer$1$start$0$1]}

	identical_single_classes: {'proposer$1$promise$1': proposer$1$promise$1$0}

	identical_multi_classes: {'proposer$1$start$0': [proposer$1$start$0$0, proposer$1$start$0$1]}


---------- QInference: _set_sort_to_quantifier_mode ----------

quantifier mode: acceptor: QuantifierMode.forall

quantifier mode: proposer: QuantifierMode.forall_exists


---------- QInference: _set_constraint_mode ----------

constraint mode: ConstraintMode.no_merge


---------- QFormula: _set_qvars ----------

forall_qvars: {Var('PROPOSER1', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))), Var('ACCEPTOR0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')))}

exists_qvars: {Var('PROPOSER0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))}


---------- QFormula: _set_signed_func_name_to_args ----------

signed_func_name2args: {'1$didNotPromise': [[Var('ACCEPTOR0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')))]], '1$promise': [[Var('ACCEPTOR0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Var('PROPOSER1', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))]], '1$start': [[Var('PROPOSER0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))], [Var('PROPOSER0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))]]}


---------- QFormula: _set_qterms ----------

qterms: ['~didNotPromise(ACCEPTOR0)', '~start(PROPOSER0)', '~promise(ACCEPTOR0,PROPOSER1)']


---------- QFormula: get_qclause ----------

qclause: forall ACCEPTOR0,PROPOSER1. didNotPromise(ACCEPTOR0) | promise(ACCEPTOR0,PROPOSER1) | (exists PROPOSER0. (start(PROPOSER0) & PROPOSER0 ~= PROPOSER1))


=== Prime Orbit 26 =====================
size : 9
num_suborbits: 1
396 (*) : -----0--0-----1--------1---
396     : ['leader(proposer2)', 'promise(acceptor2,proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)']
397     : ----0--0-----1--------1----
397     : ['leader(proposer1)', 'promise(acceptor2,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)']
398     : ---0--0-----1--------1-----
398     : ['leader(proposer0)', 'promise(acceptor2,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)']
399     : --0-----0-----1-----1------
399     : ['leader(proposer2)', 'promise(acceptor1,proposer2)', '~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)']
400     : -0-----0-----1-----1-------
400     : ['leader(proposer1)', 'promise(acceptor1,proposer1)', '~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)']
401     : 0-----0-----1-----1--------
401     : ['leader(proposer0)', 'promise(acceptor1,proposer0)', '~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)']
402     : --0--0--------1--1---------
402     : ['leader(proposer2)', 'promise(acceptor0,proposer2)', '~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)']
403     : -0--0--------1--1----------
403     : ['leader(proposer1)', 'promise(acceptor0,proposer1)', '~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)']
404     : 0--0--------1--1-----------
404     : ['leader(proposer0)', 'promise(acceptor0,proposer0)', '~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)']
num_forall :   0
num_exists :   0
num_literals : 0
quantified form : None
qcost : 0




---------- QPrime ----------


---------- ConstArgBinding ----------

terms: ['~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', 'leader(proposer2)', 'promise(acceptor2,proposer2)', 'member(acceptor2,quorum__acceptor1_acceptor2)', 'member(acceptor2,quorum__acceptor0_acceptor2)']

sign_func_name2args: {'1$chosenAt': [(Const('quorum__acceptor0_acceptor2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), Const('proposer2', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))), (Const('quorum__acceptor1_acceptor2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), Const('proposer2', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))))], '0$leader': [(Const('proposer2', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))),)], '0$promise': [(Const('acceptor2', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Const('proposer2', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))))], '0$member': [(Const('acceptor2', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Const('quorum__acceptor1_acceptor2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')))), (Const('acceptor2', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Const('quorum__acceptor0_acceptor2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))))]}

const2sigs: {Const('quorum__acceptor0_acceptor2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))): [quorum$1$chosenAt$0$0, quorum$0$member$1$1], Const('proposer2', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))): [proposer$1$chosenAt$1$0, proposer$1$chosenAt$1$1, proposer$0$leader$0$0, proposer$0$promise$1$0], Const('quorum__acceptor1_acceptor2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))): [quorum$1$chosenAt$0$1, quorum$0$member$1$0], Const('acceptor2', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))): [acceptor$0$promise$0$0, acceptor$0$member$0$0, acceptor$0$member$0$1]}

sig2const: {'quorum$1$chosenAt$0$0': Const('quorum__acceptor0_acceptor2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), 'proposer$1$chosenAt$1$0': Const('proposer2', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))), 'quorum$1$chosenAt$0$1': Const('quorum__acceptor1_acceptor2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), 'proposer$1$chosenAt$1$1': Const('proposer2', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))), 'proposer$0$leader$0$0': Const('proposer2', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))), 'acceptor$0$promise$0$0': Const('acceptor2', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), 'proposer$0$promise$1$0': Const('proposer2', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))), 'acceptor$0$member$0$0': Const('acceptor2', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), 'quorum$0$member$1$0': Const('quorum__acceptor1_acceptor2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), 'acceptor$0$member$0$1': Const('acceptor2', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), 'quorum$0$member$1$1': Const('quorum__acceptor0_acceptor2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')))}


---------- ArgPartition ----------

sort2class_sigs: {EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')): [quorum$0$member$1$0; quorum$1$chosenAt$0$1, quorum$0$member$1$1; quorum$1$chosenAt$0$0], EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')): [proposer$0$leader$0$0; proposer$0$promise$1$0; proposer$1$chosenAt$1$0; proposer$1$chosenAt$1$1], EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')): [acceptor$0$member$0$0; acceptor$0$member$0$1; acceptor$0$promise$0$0]}

sort2part_sig: {EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')): quorum$0$member$1$0; quorum$1$chosenAt$0$1 | quorum$0$member$1$1; quorum$1$chosenAt$0$0, EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')): proposer$0$leader$0$0; proposer$0$promise$1$0; proposer$1$chosenAt$1$0; proposer$1$chosenAt$1$1, EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')): acceptor$0$member$0$0; acceptor$0$member$0$1; acceptor$0$promise$0$0}

part_sig: ('acceptor$0$member$0$0; acceptor$0$member$0$1; acceptor$0$promise$0$0', 'proposer$0$leader$0$0; proposer$0$promise$1$0; proposer$1$chosenAt$1$0; proposer$1$chosenAt$1$1', 'quorum$0$member$1$0; quorum$1$chosenAt$0$1 | quorum$0$member$1$1; quorum$1$chosenAt$0$0')


---------- SigGenerator ----------

terms:  ['~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', 'leader(proposer2)', 'promise(acceptor2,proposer2)', 'member(acceptor2,quorum__acceptor1_acceptor2)', 'member(acceptor2,quorum__acceptor0_acceptor2)']

func_name2symbol:  {'chosenAt': Const('chosenAt', FunctionSort(EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')), EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')), BooleanSort())), 'leader': Const('leader', FunctionSort(EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')), BooleanSort())), 'promise': Const('promise', FunctionSort(EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')), EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')), BooleanSort())), 'member': Const('member', FunctionSort(EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')), EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')), BooleanSort()))}

func_name2args_sort:  {'chosenAt': (EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')), EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))), 'leader': (EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')),), 'promise': (EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')), EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))), 'member': (EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')), EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')))}

sign_func_name2count:  {'1$chosenAt': 2, '0$leader': 1, '0$promise': 1, '0$member': 2}


---------- ProductArgPartition ----------

sort2class_sigs: {EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')): [quorum$0$member$1$0; quorum$1$chosenAt$0$1, quorum$0$member$1$1; quorum$1$chosenAt$0$0], EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')): [proposer$0$leader$0$0; proposer$0$promise$1$0; proposer$1$chosenAt$1$0; proposer$1$chosenAt$1$1], EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')): [acceptor$0$member$0$0; acceptor$0$member$0$1; acceptor$0$promise$0$0]}

sort2part_sig: {EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')): quorum$0$member$1$0; quorum$1$chosenAt$0$1 | quorum$0$member$1$1; quorum$1$chosenAt$0$0, EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')): proposer$0$leader$0$0; proposer$0$promise$1$0; proposer$1$chosenAt$1$0; proposer$1$chosenAt$1$1, EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')): acceptor$0$member$0$0; acceptor$0$member$0$1; acceptor$0$promise$0$0}

	sort: quorum

	identical_classes: {'quorum$0$member$1; quorum$1$chosenAt$0': [quorum$0$member$1$0; quorum$1$chosenAt$0$1, quorum$0$member$1$1; quorum$1$chosenAt$0$0]}

	identical_single_classes: {}

	identical_multi_classes: {'quorum$0$member$1; quorum$1$chosenAt$0': [quorum$0$member$1$0, quorum$1$chosenAt$0$1, quorum$0$member$1$1, quorum$1$chosenAt$0$0]}

	sort: proposer

	identical_classes: {'proposer$0$leader$0; proposer$0$promise$1; proposer$1$chosenAt$1; proposer$1$chosenAt$1': [proposer$0$leader$0$0; proposer$0$promise$1$0; proposer$1$chosenAt$1$0; proposer$1$chosenAt$1$1]}

	identical_single_classes: {'proposer$0$leader$0; proposer$0$promise$1; proposer$1$chosenAt$1; proposer$1$chosenAt$1': proposer$0$leader$0$0; proposer$0$promise$1$0; proposer$1$chosenAt$1$0; proposer$1$chosenAt$1$1}

	identical_multi_classes: {}

	sort: acceptor

	identical_classes: {'acceptor$0$member$0; acceptor$0$member$0; acceptor$0$promise$0': [acceptor$0$member$0$0; acceptor$0$member$0$1; acceptor$0$promise$0$0]}

	identical_single_classes: {'acceptor$0$member$0; acceptor$0$member$0; acceptor$0$promise$0': acceptor$0$member$0$0; acceptor$0$member$0$1; acceptor$0$promise$0$0}

	identical_multi_classes: {}


---------- QInference: _set_sort_to_quantifier_mode ----------

quantifier mode: quorum: QuantifierMode.forall

quantifier mode: proposer: QuantifierMode.forall

quantifier mode: acceptor: QuantifierMode.forall


---------- QInference: _set_constraint_mode ----------

constraint mode: ConstraintMode.no_merge


---------- QFormula: _set_qvars ----------

forall_qvars: {Var('PROPOSER0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))), Var('QUORUM0', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), Var('ACCEPTOR0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Var('QUORUM1', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')))}

exists_qvars: set()


---------- QFormula: _set_signed_func_name_to_args ----------

signed_func_name2args: {'1$chosenAt': [[Var('QUORUM1', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), Var('PROPOSER0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))], [Var('QUORUM0', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), Var('PROPOSER0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))]], '0$leader': [[Var('PROPOSER0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))]], '0$promise': [[Var('ACCEPTOR0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Var('PROPOSER0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))]], '0$member': [[Var('ACCEPTOR0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Var('QUORUM0', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')))], [Var('ACCEPTOR0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Var('QUORUM1', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')))]]}


---------- QFormula: _set_qterms ----------

qterms: ['promise(ACCEPTOR0,PROPOSER0)', '~chosenAt(QUORUM0,PROPOSER0)', 'leader(PROPOSER0)', 'member(ACCEPTOR0,QUORUM1)', 'member(ACCEPTOR0,QUORUM0)', '~chosenAt(QUORUM1,PROPOSER0)']


---------- QFormula: get_qclause ----------

qclause: forall QUORUM0,QUORUM1,PROPOSER0,ACCEPTOR0. ~promise(ACCEPTOR0,PROPOSER0) | chosenAt(QUORUM0,PROPOSER0) | ~leader(PROPOSER0) | ~member(ACCEPTOR0,QUORUM1) | ~member(ACCEPTOR0,QUORUM0) | chosenAt(QUORUM1,PROPOSER0) | QUORUM0 = QUORUM1


=== Prime Orbit 27 =====================
size : 3
num_suborbits: 1
405 (*) : --0--0--0-----1------------
405     : ['leader(proposer2)', '~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)']
406     : -0--0--0-----1-------------
406     : ['leader(proposer1)', '~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)']
407     : 0--0--0-----1--------------
407     : ['leader(proposer0)', '~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)']
num_forall :   0
num_exists :   0
num_literals : 0
quantified form : None
qcost : 0




---------- QPrime ----------


---------- ConstArgBinding ----------

terms: ['~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', 'leader(proposer2)']

sign_func_name2args: {'1$chosenAt': [(Const('quorum__acceptor0_acceptor1', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), Const('proposer2', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))), (Const('quorum__acceptor0_acceptor2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), Const('proposer2', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))), (Const('quorum__acceptor1_acceptor2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), Const('proposer2', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))))], '0$leader': [(Const('proposer2', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))),)]}

const2sigs: {Const('quorum__acceptor0_acceptor1', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))): [quorum$1$chosenAt$0$0], Const('proposer2', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))): [proposer$1$chosenAt$1$0, proposer$1$chosenAt$1$1, proposer$1$chosenAt$1$2, proposer$0$leader$0$0], Const('quorum__acceptor0_acceptor2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))): [quorum$1$chosenAt$0$1], Const('quorum__acceptor1_acceptor2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))): [quorum$1$chosenAt$0$2]}

sig2const: {'quorum$1$chosenAt$0$0': Const('quorum__acceptor0_acceptor1', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), 'proposer$1$chosenAt$1$0': Const('proposer2', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))), 'quorum$1$chosenAt$0$1': Const('quorum__acceptor0_acceptor2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), 'proposer$1$chosenAt$1$1': Const('proposer2', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))), 'quorum$1$chosenAt$0$2': Const('quorum__acceptor1_acceptor2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), 'proposer$1$chosenAt$1$2': Const('proposer2', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))), 'proposer$0$leader$0$0': Const('proposer2', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))}


---------- ArgPartition ----------

sort2class_sigs: {EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')): [quorum$1$chosenAt$0$0, quorum$1$chosenAt$0$1, quorum$1$chosenAt$0$2], EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')): [proposer$0$leader$0$0; proposer$1$chosenAt$1$0; proposer$1$chosenAt$1$1; proposer$1$chosenAt$1$2]}

sort2part_sig: {EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')): quorum$1$chosenAt$0$0 | quorum$1$chosenAt$0$1 | quorum$1$chosenAt$0$2, EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')): proposer$0$leader$0$0; proposer$1$chosenAt$1$0; proposer$1$chosenAt$1$1; proposer$1$chosenAt$1$2}

part_sig: ('proposer$0$leader$0$0; proposer$1$chosenAt$1$0; proposer$1$chosenAt$1$1; proposer$1$chosenAt$1$2', 'quorum$1$chosenAt$0$0 | quorum$1$chosenAt$0$1 | quorum$1$chosenAt$0$2')


---------- SigGenerator ----------

terms:  ['~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', 'leader(proposer2)']

func_name2symbol:  {'chosenAt': Const('chosenAt', FunctionSort(EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')), EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')), BooleanSort())), 'leader': Const('leader', FunctionSort(EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')), BooleanSort()))}

func_name2args_sort:  {'chosenAt': (EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')), EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))), 'leader': (EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')),)}

sign_func_name2count:  {'1$chosenAt': 3, '0$leader': 1}


---------- ProductArgPartition ----------

sort2class_sigs: {EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')): [quorum$1$chosenAt$0$0, quorum$1$chosenAt$0$1, quorum$1$chosenAt$0$2], EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')): [proposer$0$leader$0$0; proposer$1$chosenAt$1$0; proposer$1$chosenAt$1$1; proposer$1$chosenAt$1$2]}

sort2part_sig: {EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')): quorum$1$chosenAt$0$0 | quorum$1$chosenAt$0$1 | quorum$1$chosenAt$0$2, EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')): proposer$0$leader$0$0; proposer$1$chosenAt$1$0; proposer$1$chosenAt$1$1; proposer$1$chosenAt$1$2}

	sort: quorum

	identical_classes: {'quorum$1$chosenAt$0': [quorum$1$chosenAt$0$0, quorum$1$chosenAt$0$1, quorum$1$chosenAt$0$2]}

	identical_single_classes: {}

	identical_multi_classes: {'quorum$1$chosenAt$0': [quorum$1$chosenAt$0$0, quorum$1$chosenAt$0$1, quorum$1$chosenAt$0$2]}

	sort: proposer

	identical_classes: {'proposer$0$leader$0; proposer$1$chosenAt$1; proposer$1$chosenAt$1; proposer$1$chosenAt$1': [proposer$0$leader$0$0; proposer$1$chosenAt$1$0; proposer$1$chosenAt$1$1; proposer$1$chosenAt$1$2]}

	identical_single_classes: {'proposer$0$leader$0; proposer$1$chosenAt$1; proposer$1$chosenAt$1; proposer$1$chosenAt$1': proposer$0$leader$0$0; proposer$1$chosenAt$1$0; proposer$1$chosenAt$1$1; proposer$1$chosenAt$1$2}

	identical_multi_classes: {}


---------- QInference: _set_sort_to_quantifier_mode ----------

quantifier mode: quorum: QuantifierMode.exists

quantifier mode: proposer: QuantifierMode.forall


---------- QInference: _set_constraint_mode ----------

constraint mode: ConstraintMode.no_merge


---------- QFormula: _set_qvars ----------

forall_qvars: {Var('PROPOSER0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))}

exists_qvars: {Var('QUORUM0', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')))}


---------- QFormula: _set_signed_func_name_to_args ----------

signed_func_name2args: {'1$chosenAt': [[Var('QUORUM0', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), Var('PROPOSER0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))], [Var('QUORUM0', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), Var('PROPOSER0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))], [Var('QUORUM0', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), Var('PROPOSER0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))]], '0$leader': [[Var('PROPOSER0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))]]}


---------- QFormula: _set_qterms ----------

qterms: ['~chosenAt(QUORUM0,PROPOSER0)', 'leader(PROPOSER0)']


---------- QFormula: get_qclause ----------

qclause: forall PROPOSER0. (exists QUORUM0. chosenAt(QUORUM0,PROPOSER0) | ~leader(PROPOSER0))


=== Prime Orbit 28 =====================
size : 3
num_suborbits: 1
408 (*) : -----------0------------000
408     : ['~didNotPromise(acceptor2)', '~start(proposer0)', '~start(proposer1)', '~start(proposer2)']
409     : ----------0-------------000
409     : ['~didNotPromise(acceptor1)', '~start(proposer0)', '~start(proposer1)', '~start(proposer2)']
410     : ---------0--------------000
410     : ['~didNotPromise(acceptor0)', '~start(proposer0)', '~start(proposer1)', '~start(proposer2)']
num_forall :   0
num_exists :   0
num_literals : 0
quantified form : None
qcost : 0




---------- QPrime ----------


---------- ConstArgBinding ----------

terms: ['~didNotPromise(acceptor2)', '~start(proposer0)', '~start(proposer1)', '~start(proposer2)']

sign_func_name2args: {'1$didNotPromise': [(Const('acceptor2', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))),)], '1$start': [(Const('proposer0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))),), (Const('proposer1', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))),), (Const('proposer2', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))),)]}

const2sigs: {Const('acceptor2', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))): [acceptor$1$didNotPromise$0$0], Const('proposer0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))): [proposer$1$start$0$0], Const('proposer1', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))): [proposer$1$start$0$1], Const('proposer2', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))): [proposer$1$start$0$2]}

sig2const: {'acceptor$1$didNotPromise$0$0': Const('acceptor2', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), 'proposer$1$start$0$0': Const('proposer0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))), 'proposer$1$start$0$1': Const('proposer1', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))), 'proposer$1$start$0$2': Const('proposer2', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))}


---------- ArgPartition ----------

sort2class_sigs: {EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')): [acceptor$1$didNotPromise$0$0], EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')): [proposer$1$start$0$0, proposer$1$start$0$1, proposer$1$start$0$2]}

sort2part_sig: {EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')): acceptor$1$didNotPromise$0$0, EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')): proposer$1$start$0$0 | proposer$1$start$0$1 | proposer$1$start$0$2}

part_sig: ('acceptor$1$didNotPromise$0$0', 'proposer$1$start$0$0 | proposer$1$start$0$1 | proposer$1$start$0$2')


---------- SigGenerator ----------

terms:  ['~didNotPromise(acceptor2)', '~start(proposer0)', '~start(proposer1)', '~start(proposer2)']

func_name2symbol:  {'didNotPromise': Const('didNotPromise', FunctionSort(EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')), BooleanSort())), 'start': Const('start', FunctionSort(EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')), BooleanSort()))}

func_name2args_sort:  {'didNotPromise': (EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')),), 'start': (EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')),)}

sign_func_name2count:  {'1$didNotPromise': 1, '1$start': 3}


---------- ProductArgPartition ----------

sort2class_sigs: {EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')): [acceptor$1$didNotPromise$0$0], EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')): [proposer$1$start$0$0, proposer$1$start$0$1, proposer$1$start$0$2]}

sort2part_sig: {EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')): acceptor$1$didNotPromise$0$0, EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')): proposer$1$start$0$0 | proposer$1$start$0$1 | proposer$1$start$0$2}

	sort: acceptor

	identical_classes: {'acceptor$1$didNotPromise$0': [acceptor$1$didNotPromise$0$0]}

	identical_single_classes: {'acceptor$1$didNotPromise$0': acceptor$1$didNotPromise$0$0}

	identical_multi_classes: {}

	sort: proposer

	identical_classes: {'proposer$1$start$0': [proposer$1$start$0$0, proposer$1$start$0$1, proposer$1$start$0$2]}

	identical_single_classes: {}

	identical_multi_classes: {'proposer$1$start$0': [proposer$1$start$0$0, proposer$1$start$0$1, proposer$1$start$0$2]}


---------- QInference: _set_sort_to_quantifier_mode ----------

quantifier mode: acceptor: QuantifierMode.forall

quantifier mode: proposer: QuantifierMode.exists


---------- QInference: _set_constraint_mode ----------

constraint mode: ConstraintMode.no_merge


---------- QFormula: _set_qvars ----------

forall_qvars: {Var('ACCEPTOR0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')))}

exists_qvars: {Var('PROPOSER0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))}


---------- QFormula: _set_signed_func_name_to_args ----------

signed_func_name2args: {'1$didNotPromise': [[Var('ACCEPTOR0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')))]], '1$start': [[Var('PROPOSER0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))], [Var('PROPOSER0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))], [Var('PROPOSER0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))]]}


---------- QFormula: _set_qterms ----------

qterms: ['~didNotPromise(ACCEPTOR0)', '~start(PROPOSER0)']


---------- QFormula: get_qclause ----------

qclause: forall ACCEPTOR0. (exists PROPOSER0. didNotPromise(ACCEPTOR0) | start(PROPOSER0))


=== Prime Orbit 29 =====================
size : 36
num_suborbits: 1
411 (*) : -------0--0-------0---1---0
411     : ['promise(acceptor2,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor1)', '~promise(acceptor1,proposer0)', '~start(proposer2)']
412     : --------0-0-------0----1-0-
412     : ['promise(acceptor2,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor1)', '~promise(acceptor1,proposer0)', '~start(proposer1)']
413     : ------0---0--------0-1----0
413     : ['promise(acceptor2,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor1)', '~promise(acceptor1,proposer1)', '~start(proposer2)']
414     : --------0-0--------0---10--
414     : ['promise(acceptor2,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor1)', '~promise(acceptor1,proposer1)', '~start(proposer0)']
415     : ------0---0---------01---0-
415     : ['promise(acceptor2,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor1)', '~promise(acceptor1,proposer2)', '~start(proposer1)']
416     : -------0--0---------0-1-0--
416     : ['promise(acceptor2,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor1)', '~promise(acceptor1,proposer2)', '~start(proposer0)']
417     : -------0---0-------1-0----0
417     : ['promise(acceptor1,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor2)', '~promise(acceptor2,proposer0)', '~start(proposer2)']
418     : --------0--0--------10---0-
418     : ['promise(acceptor1,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor2)', '~promise(acceptor2,proposer0)', '~start(proposer1)']
419     : ------0----0------1---0---0
419     : ['promise(acceptor1,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor2)', '~promise(acceptor2,proposer1)', '~start(proposer2)']
420     : --------0--0--------1-0-0--
420     : ['promise(acceptor1,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor2)', '~promise(acceptor2,proposer1)', '~start(proposer0)']
421     : ------0----0------1----0-0-
421     : ['promise(acceptor1,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor2)', '~promise(acceptor2,proposer2)', '~start(proposer1)']
422     : -------0---0-------1---00--
422     : ['promise(acceptor1,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor2)', '~promise(acceptor2,proposer2)', '~start(proposer0)']
423     : ----0----0-----0------1---0
423     : ['promise(acceptor2,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~didNotPromise(acceptor0)', '~promise(acceptor0,proposer0)', '~start(proposer2)']
424     : -----0---0-----0-------1-0-
424     : ['promise(acceptor2,proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~didNotPromise(acceptor0)', '~promise(acceptor0,proposer0)', '~start(proposer1)']
425     : ---0-----0------0----1----0
425     : ['promise(acceptor2,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~didNotPromise(acceptor0)', '~promise(acceptor0,proposer1)', '~start(proposer2)']
426     : -----0---0------0------10--
426     : ['promise(acceptor2,proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~didNotPromise(acceptor0)', '~promise(acceptor0,proposer1)', '~start(proposer0)']
427     : ---0-----0-------0---1---0-
427     : ['promise(acceptor2,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~didNotPromise(acceptor0)', '~promise(acceptor0,proposer2)', '~start(proposer1)']
428     : ----0----0-------0----1-0--
428     : ['promise(acceptor2,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~didNotPromise(acceptor0)', '~promise(acceptor0,proposer2)', '~start(proposer0)']
429     : ----0------0----1----0----0
429     : ['promise(acceptor0,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~didNotPromise(acceptor2)', '~promise(acceptor2,proposer0)', '~start(proposer2)']
430     : -----0-----0-----1---0---0-
430     : ['promise(acceptor0,proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~didNotPromise(acceptor2)', '~promise(acceptor2,proposer0)', '~start(proposer1)']
431     : ---0-------0---1------0---0
431     : ['promise(acceptor0,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~didNotPromise(acceptor2)', '~promise(acceptor2,proposer1)', '~start(proposer2)']
432     : -----0-----0-----1----0-0--
432     : ['promise(acceptor0,proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~didNotPromise(acceptor2)', '~promise(acceptor2,proposer1)', '~start(proposer0)']
433     : ---0-------0---1-------0-0-
433     : ['promise(acceptor0,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~didNotPromise(acceptor2)', '~promise(acceptor2,proposer2)', '~start(proposer1)']
434     : ----0------0----1------00--
434     : ['promise(acceptor0,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~didNotPromise(acceptor2)', '~promise(acceptor2,proposer2)', '~start(proposer0)']
435     : -0-------0-----0---1------0
435     : ['promise(acceptor1,proposer1)', '~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~didNotPromise(acceptor0)', '~promise(acceptor0,proposer0)', '~start(proposer2)']
436     : --0------0-----0----1----0-
436     : ['promise(acceptor1,proposer2)', '~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~didNotPromise(acceptor0)', '~promise(acceptor0,proposer0)', '~start(proposer1)']
437     : 0--------0------0-1-------0
437     : ['promise(acceptor1,proposer0)', '~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~didNotPromise(acceptor0)', '~promise(acceptor0,proposer1)', '~start(proposer2)']
438     : --0------0------0---1---0--
438     : ['promise(acceptor1,proposer2)', '~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~didNotPromise(acceptor0)', '~promise(acceptor0,proposer1)', '~start(proposer0)']
439     : 0--------0-------01------0-
439     : ['promise(acceptor1,proposer0)', '~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~didNotPromise(acceptor0)', '~promise(acceptor0,proposer2)', '~start(proposer1)']
440     : -0-------0-------0-1----0--
440     : ['promise(acceptor1,proposer1)', '~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~didNotPromise(acceptor0)', '~promise(acceptor0,proposer2)', '~start(proposer0)']
441     : -0--------0-----1-0-------0
441     : ['promise(acceptor0,proposer1)', '~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~didNotPromise(acceptor1)', '~promise(acceptor1,proposer0)', '~start(proposer2)']
442     : --0-------0------10------0-
442     : ['promise(acceptor0,proposer2)', '~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~didNotPromise(acceptor1)', '~promise(acceptor1,proposer0)', '~start(proposer1)']
443     : 0---------0----1---0------0
443     : ['promise(acceptor0,proposer0)', '~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~didNotPromise(acceptor1)', '~promise(acceptor1,proposer1)', '~start(proposer2)']
444     : --0-------0------1-0----0--
444     : ['promise(acceptor0,proposer2)', '~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~didNotPromise(acceptor1)', '~promise(acceptor1,proposer1)', '~start(proposer0)']
445     : 0---------0----1----0----0-
445     : ['promise(acceptor0,proposer0)', '~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~didNotPromise(acceptor1)', '~promise(acceptor1,proposer2)', '~start(proposer1)']
446     : -0--------0-----1---0---0--
446     : ['promise(acceptor0,proposer1)', '~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~didNotPromise(acceptor1)', '~promise(acceptor1,proposer2)', '~start(proposer0)']
num_forall :   0
num_exists :   0
num_literals : 0
quantified form : None
qcost : 0




---------- QPrime ----------


---------- ConstArgBinding ----------

terms: ['~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor1)', '~promise(acceptor1,proposer0)', 'promise(acceptor2,proposer1)', '~start(proposer2)', 'member(acceptor1,quorum__acceptor1_acceptor2)', 'member(acceptor2,quorum__acceptor1_acceptor2)']

sign_func_name2args: {'1$chosenAt': [(Const('quorum__acceptor1_acceptor2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), Const('proposer1', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))))], '1$didNotPromise': [(Const('acceptor1', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))),)], '1$promise': [(Const('acceptor1', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Const('proposer0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))))], '0$promise': [(Const('acceptor2', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Const('proposer1', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))))], '1$start': [(Const('proposer2', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))),)], '0$member': [(Const('acceptor1', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Const('quorum__acceptor1_acceptor2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')))), (Const('acceptor2', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Const('quorum__acceptor1_acceptor2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))))]}

const2sigs: {Const('quorum__acceptor1_acceptor2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))): [quorum$1$chosenAt$0$0, quorum$0$member$1$0, quorum$0$member$1$1], Const('proposer1', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))): [proposer$1$chosenAt$1$0, proposer$0$promise$1$0], Const('acceptor1', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))): [acceptor$1$didNotPromise$0$0, acceptor$1$promise$0$0, acceptor$0$member$0$0], Const('proposer0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))): [proposer$1$promise$1$0], Const('acceptor2', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))): [acceptor$0$promise$0$0, acceptor$0$member$0$1], Const('proposer2', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))): [proposer$1$start$0$0]}

sig2const: {'quorum$1$chosenAt$0$0': Const('quorum__acceptor1_acceptor2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), 'proposer$1$chosenAt$1$0': Const('proposer1', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))), 'acceptor$1$didNotPromise$0$0': Const('acceptor1', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), 'acceptor$1$promise$0$0': Const('acceptor1', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), 'proposer$1$promise$1$0': Const('proposer0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))), 'acceptor$0$promise$0$0': Const('acceptor2', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), 'proposer$0$promise$1$0': Const('proposer1', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))), 'proposer$1$start$0$0': Const('proposer2', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))), 'acceptor$0$member$0$0': Const('acceptor1', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), 'quorum$0$member$1$0': Const('quorum__acceptor1_acceptor2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), 'acceptor$0$member$0$1': Const('acceptor2', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), 'quorum$0$member$1$1': Const('quorum__acceptor1_acceptor2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')))}


---------- ArgPartition ----------

sort2class_sigs: {EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')): [quorum$0$member$1$0; quorum$0$member$1$1; quorum$1$chosenAt$0$0], EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')): [proposer$0$promise$1$0; proposer$1$chosenAt$1$0, proposer$1$promise$1$0, proposer$1$start$0$0], EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')): [acceptor$0$member$0$0; acceptor$1$didNotPromise$0$0; acceptor$1$promise$0$0, acceptor$0$member$0$1; acceptor$0$promise$0$0]}

sort2part_sig: {EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')): quorum$0$member$1$0; quorum$0$member$1$1; quorum$1$chosenAt$0$0, EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')): proposer$0$promise$1$0; proposer$1$chosenAt$1$0 | proposer$1$promise$1$0 | proposer$1$start$0$0, EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')): acceptor$0$member$0$0; acceptor$1$didNotPromise$0$0; acceptor$1$promise$0$0 | acceptor$0$member$0$1; acceptor$0$promise$0$0}

part_sig: ('acceptor$0$member$0$0; acceptor$1$didNotPromise$0$0; acceptor$1$promise$0$0 | acceptor$0$member$0$1; acceptor$0$promise$0$0', 'proposer$0$promise$1$0; proposer$1$chosenAt$1$0 | proposer$1$promise$1$0 | proposer$1$start$0$0', 'quorum$0$member$1$0; quorum$0$member$1$1; quorum$1$chosenAt$0$0')


---------- SigGenerator ----------

terms:  ['~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor1)', '~promise(acceptor1,proposer0)', 'promise(acceptor2,proposer1)', '~start(proposer2)', 'member(acceptor1,quorum__acceptor1_acceptor2)', 'member(acceptor2,quorum__acceptor1_acceptor2)']

func_name2symbol:  {'chosenAt': Const('chosenAt', FunctionSort(EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')), EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')), BooleanSort())), 'didNotPromise': Const('didNotPromise', FunctionSort(EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')), BooleanSort())), 'promise': Const('promise', FunctionSort(EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')), EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')), BooleanSort())), 'start': Const('start', FunctionSort(EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')), BooleanSort())), 'member': Const('member', FunctionSort(EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')), EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')), BooleanSort()))}

func_name2args_sort:  {'chosenAt': (EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')), EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))), 'didNotPromise': (EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')),), 'promise': (EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')), EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))), 'start': (EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')),), 'member': (EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')), EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')))}

sign_func_name2count:  {'1$chosenAt': 1, '1$didNotPromise': 1, '1$promise': 1, '0$promise': 1, '1$start': 1, '0$member': 2}


---------- ProductArgPartition ----------

sort2class_sigs: {EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')): [quorum$0$member$1$0; quorum$0$member$1$1; quorum$1$chosenAt$0$0], EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')): [proposer$0$promise$1$0; proposer$1$chosenAt$1$0, proposer$1$promise$1$0, proposer$1$start$0$0], EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')): [acceptor$0$member$0$0; acceptor$1$didNotPromise$0$0; acceptor$1$promise$0$0, acceptor$0$member$0$1; acceptor$0$promise$0$0]}

sort2part_sig: {EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')): quorum$0$member$1$0; quorum$0$member$1$1; quorum$1$chosenAt$0$0, EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')): proposer$0$promise$1$0; proposer$1$chosenAt$1$0 | proposer$1$promise$1$0 | proposer$1$start$0$0, EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')): acceptor$0$member$0$0; acceptor$1$didNotPromise$0$0; acceptor$1$promise$0$0 | acceptor$0$member$0$1; acceptor$0$promise$0$0}

	sort: quorum

	identical_classes: {'quorum$0$member$1; quorum$0$member$1; quorum$1$chosenAt$0': [quorum$0$member$1$0; quorum$0$member$1$1; quorum$1$chosenAt$0$0]}

	identical_single_classes: {'quorum$0$member$1; quorum$0$member$1; quorum$1$chosenAt$0': quorum$0$member$1$0; quorum$0$member$1$1; quorum$1$chosenAt$0$0}

	identical_multi_classes: {}

	sort: proposer

	identical_classes: {'proposer$0$promise$1; proposer$1$chosenAt$1': [proposer$0$promise$1$0; proposer$1$chosenAt$1$0], 'proposer$1$promise$1': [proposer$1$promise$1$0], 'proposer$1$start$0': [proposer$1$start$0$0]}

	identical_single_classes: {'proposer$0$promise$1; proposer$1$chosenAt$1': proposer$0$promise$1$0; proposer$1$chosenAt$1$0, 'proposer$1$promise$1': proposer$1$promise$1$0, 'proposer$1$start$0': proposer$1$start$0$0}

	identical_multi_classes: {}

	sort: acceptor

	identical_classes: {'acceptor$0$member$0; acceptor$1$didNotPromise$0; acceptor$1$promise$0': [acceptor$0$member$0$0; acceptor$1$didNotPromise$0$0; acceptor$1$promise$0$0], 'acceptor$0$member$0; acceptor$0$promise$0': [acceptor$0$member$0$1; acceptor$0$promise$0$0]}

	identical_single_classes: {'acceptor$0$member$0; acceptor$1$didNotPromise$0; acceptor$1$promise$0': acceptor$0$member$0$0; acceptor$1$didNotPromise$0$0; acceptor$1$promise$0$0, 'acceptor$0$member$0; acceptor$0$promise$0': acceptor$0$member$0$1; acceptor$0$promise$0$0}

	identical_multi_classes: {}


---------- QInference: _set_sort_to_quantifier_mode ----------

quantifier mode: quorum: QuantifierMode.forall

quantifier mode: proposer: QuantifierMode.forall

quantifier mode: acceptor: QuantifierMode.forall


---------- QInference: _set_constraint_mode ----------

constraint mode: ConstraintMode.no_merge


---------- QFormula: _set_qvars ----------

forall_qvars: {Var('QUORUM0', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), Var('ACCEPTOR0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Var('PROPOSER0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))), Var('PROPOSER1', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))), Var('ACCEPTOR1', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Var('PROPOSER2', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))}

exists_qvars: set()


---------- QFormula: _set_signed_func_name_to_args ----------

signed_func_name2args: {'1$chosenAt': [[Var('QUORUM0', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), Var('PROPOSER0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))]], '1$didNotPromise': [[Var('ACCEPTOR0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')))]], '1$promise': [[Var('ACCEPTOR0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Var('PROPOSER1', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))]], '0$promise': [[Var('ACCEPTOR1', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Var('PROPOSER0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))]], '1$start': [[Var('PROPOSER2', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))]], '0$member': [[Var('ACCEPTOR0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Var('QUORUM0', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')))], [Var('ACCEPTOR1', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Var('QUORUM0', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')))]]}


---------- QFormula: _set_qterms ----------

qterms: ['~chosenAt(QUORUM0,PROPOSER0)', '~promise(ACCEPTOR0,PROPOSER1)', 'promise(ACCEPTOR1,PROPOSER0)', '~start(PROPOSER2)', '~didNotPromise(ACCEPTOR0)', 'member(ACCEPTOR0,QUORUM0)', 'member(ACCEPTOR1,QUORUM0)']


---------- QFormula: get_qclause ----------

qclause: forall ACCEPTOR0,PROPOSER0,PROPOSER1,ACCEPTOR1,QUORUM0,PROPOSER2. chosenAt(QUORUM0,PROPOSER0) | promise(ACCEPTOR0,PROPOSER1) | ~promise(ACCEPTOR1,PROPOSER0) | start(PROPOSER2) | didNotPromise(ACCEPTOR0) | ~member(ACCEPTOR0,QUORUM0) | ~member(ACCEPTOR1,QUORUM0) | (PROPOSER0 = PROPOSER2 | ACCEPTOR0 = ACCEPTOR1 | PROPOSER0 = PROPOSER1 | PROPOSER1 = PROPOSER2)


=== Prime Orbit 30 =====================
size : 36
num_suborbits: 1
447 (*) : -0--1-----0-------0-------0
447     : ['chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~didNotPromise(acceptor1)', '~promise(acceptor1,proposer0)', '~start(proposer2)']
448     : --0--1----0-------0------0-
448     : ['chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~didNotPromise(acceptor1)', '~promise(acceptor1,proposer0)', '~start(proposer1)']
449     : 0--1------0--------0------0
449     : ['chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~didNotPromise(acceptor1)', '~promise(acceptor1,proposer1)', '~start(proposer2)']
450     : --0--1----0--------0----0--
450     : ['chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~didNotPromise(acceptor1)', '~promise(acceptor1,proposer1)', '~start(proposer0)']
451     : 0--1------0---------0----0-
451     : ['chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~didNotPromise(acceptor1)', '~promise(acceptor1,proposer2)', '~start(proposer1)']
452     : -0--1-----0---------0---0--
452     : ['chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~didNotPromise(acceptor1)', '~promise(acceptor1,proposer2)', '~start(proposer0)']
453     : -1--0------0---------0----0
453     : ['chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~didNotPromise(acceptor2)', '~promise(acceptor2,proposer0)', '~start(proposer2)']
454     : --1--0-----0---------0---0-
454     : ['chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~didNotPromise(acceptor2)', '~promise(acceptor2,proposer0)', '~start(proposer1)']
455     : 1--0-------0----------0---0
455     : ['chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~didNotPromise(acceptor2)', '~promise(acceptor2,proposer1)', '~start(proposer2)']
456     : --1--0-----0----------0-0--
456     : ['chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~didNotPromise(acceptor2)', '~promise(acceptor2,proposer1)', '~start(proposer0)']
457     : 1--0-------0-----------0-0-
457     : ['chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~didNotPromise(acceptor2)', '~promise(acceptor2,proposer2)', '~start(proposer1)']
458     : -1--0------0-----------00--
458     : ['chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~didNotPromise(acceptor2)', '~promise(acceptor2,proposer2)', '~start(proposer0)']
459     : -0-----1-0-----0----------0
459     : ['chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~didNotPromise(acceptor0)', '~promise(acceptor0,proposer0)', '~start(proposer2)']
460     : --0-----10-----0---------0-
460     : ['chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~didNotPromise(acceptor0)', '~promise(acceptor0,proposer0)', '~start(proposer1)']
461     : 0-----1--0------0---------0
461     : ['chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~didNotPromise(acceptor0)', '~promise(acceptor0,proposer1)', '~start(proposer2)']
462     : --0-----10------0-------0--
462     : ['chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~didNotPromise(acceptor0)', '~promise(acceptor0,proposer1)', '~start(proposer0)']
463     : 0-----1--0-------0-------0-
463     : ['chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~didNotPromise(acceptor0)', '~promise(acceptor0,proposer2)', '~start(proposer1)']
464     : -0-----1-0-------0------0--
464     : ['chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~didNotPromise(acceptor0)', '~promise(acceptor0,proposer2)', '~start(proposer0)']
465     : -1-----0---0---------0----0
465     : ['chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor2)', '~promise(acceptor2,proposer0)', '~start(proposer2)']
466     : --1-----0--0---------0---0-
466     : ['chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor2)', '~promise(acceptor2,proposer0)', '~start(proposer1)']
467     : 1-----0----0----------0---0
467     : ['chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor2)', '~promise(acceptor2,proposer1)', '~start(proposer2)']
468     : --1-----0--0----------0-0--
468     : ['chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor2)', '~promise(acceptor2,proposer1)', '~start(proposer0)']
469     : 1-----0----0-----------0-0-
469     : ['chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor2)', '~promise(acceptor2,proposer2)', '~start(proposer1)']
470     : -1-----0---0-----------00--
470     : ['chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor2)', '~promise(acceptor2,proposer2)', '~start(proposer0)']
471     : ----0--1-0-----0----------0
471     : ['chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~didNotPromise(acceptor0)', '~promise(acceptor0,proposer0)', '~start(proposer2)']
472     : -----0--10-----0---------0-
472     : ['chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~didNotPromise(acceptor0)', '~promise(acceptor0,proposer0)', '~start(proposer1)']
473     : ---0--1--0------0---------0
473     : ['chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~didNotPromise(acceptor0)', '~promise(acceptor0,proposer1)', '~start(proposer2)']
474     : -----0--10------0-------0--
474     : ['chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~didNotPromise(acceptor0)', '~promise(acceptor0,proposer1)', '~start(proposer0)']
475     : ---0--1--0-------0-------0-
475     : ['chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~didNotPromise(acceptor0)', '~promise(acceptor0,proposer2)', '~start(proposer1)']
476     : ----0--1-0-------0------0--
476     : ['chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~didNotPromise(acceptor0)', '~promise(acceptor0,proposer2)', '~start(proposer0)']
477     : ----1--0--0-------0-------0
477     : ['chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor1)', '~promise(acceptor1,proposer0)', '~start(proposer2)']
478     : -----1--0-0-------0------0-
478     : ['chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor1)', '~promise(acceptor1,proposer0)', '~start(proposer1)']
479     : ---1--0---0--------0------0
479     : ['chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor1)', '~promise(acceptor1,proposer1)', '~start(proposer2)']
480     : -----1--0-0--------0----0--
480     : ['chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor1)', '~promise(acceptor1,proposer1)', '~start(proposer0)']
481     : ---1--0---0---------0----0-
481     : ['chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor1)', '~promise(acceptor1,proposer2)', '~start(proposer1)']
482     : ----1--0--0---------0---0--
482     : ['chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor1)', '~promise(acceptor1,proposer2)', '~start(proposer0)']
num_forall :   0
num_exists :   0
num_literals : 0
quantified form : None
qcost : 0




---------- QPrime ----------


---------- ConstArgBinding ----------

terms: ['~chosenAt(quorum__acceptor0_acceptor1,proposer1)', 'chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~didNotPromise(acceptor1)', '~promise(acceptor1,proposer0)', '~start(proposer2)', 'member(acceptor1,quorum__acceptor0_acceptor1)', '~member(acceptor1,quorum__acceptor0_acceptor2)']

sign_func_name2args: {'1$chosenAt': [(Const('quorum__acceptor0_acceptor1', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), Const('proposer1', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))))], '0$chosenAt': [(Const('quorum__acceptor0_acceptor2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), Const('proposer1', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))))], '1$didNotPromise': [(Const('acceptor1', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))),)], '1$promise': [(Const('acceptor1', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Const('proposer0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))))], '1$start': [(Const('proposer2', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))),)], '0$member': [(Const('acceptor1', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Const('quorum__acceptor0_acceptor1', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))))], '1$member': [(Const('acceptor1', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Const('quorum__acceptor0_acceptor2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))))]}

const2sigs: {Const('quorum__acceptor0_acceptor1', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))): [quorum$1$chosenAt$0$0, quorum$0$member$1$0], Const('proposer1', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))): [proposer$1$chosenAt$1$0, proposer$0$chosenAt$1$0], Const('quorum__acceptor0_acceptor2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))): [quorum$0$chosenAt$0$0, quorum$1$member$1$0], Const('acceptor1', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))): [acceptor$1$didNotPromise$0$0, acceptor$1$promise$0$0, acceptor$0$member$0$0, acceptor$1$member$0$0], Const('proposer0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))): [proposer$1$promise$1$0], Const('proposer2', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))): [proposer$1$start$0$0]}

sig2const: {'quorum$1$chosenAt$0$0': Const('quorum__acceptor0_acceptor1', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), 'proposer$1$chosenAt$1$0': Const('proposer1', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))), 'quorum$0$chosenAt$0$0': Const('quorum__acceptor0_acceptor2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), 'proposer$0$chosenAt$1$0': Const('proposer1', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))), 'acceptor$1$didNotPromise$0$0': Const('acceptor1', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), 'acceptor$1$promise$0$0': Const('acceptor1', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), 'proposer$1$promise$1$0': Const('proposer0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))), 'proposer$1$start$0$0': Const('proposer2', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))), 'acceptor$0$member$0$0': Const('acceptor1', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), 'quorum$0$member$1$0': Const('quorum__acceptor0_acceptor1', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), 'acceptor$1$member$0$0': Const('acceptor1', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), 'quorum$1$member$1$0': Const('quorum__acceptor0_acceptor2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')))}


---------- ArgPartition ----------

sort2class_sigs: {EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')): [quorum$0$chosenAt$0$0; quorum$1$member$1$0, quorum$0$member$1$0; quorum$1$chosenAt$0$0], EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')): [proposer$0$chosenAt$1$0; proposer$1$chosenAt$1$0, proposer$1$promise$1$0, proposer$1$start$0$0], EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')): [acceptor$0$member$0$0; acceptor$1$didNotPromise$0$0; acceptor$1$member$0$0; acceptor$1$promise$0$0]}

sort2part_sig: {EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')): quorum$0$chosenAt$0$0; quorum$1$member$1$0 | quorum$0$member$1$0; quorum$1$chosenAt$0$0, EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')): proposer$0$chosenAt$1$0; proposer$1$chosenAt$1$0 | proposer$1$promise$1$0 | proposer$1$start$0$0, EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')): acceptor$0$member$0$0; acceptor$1$didNotPromise$0$0; acceptor$1$member$0$0; acceptor$1$promise$0$0}

part_sig: ('acceptor$0$member$0$0; acceptor$1$didNotPromise$0$0; acceptor$1$member$0$0; acceptor$1$promise$0$0', 'proposer$0$chosenAt$1$0; proposer$1$chosenAt$1$0 | proposer$1$promise$1$0 | proposer$1$start$0$0', 'quorum$0$chosenAt$0$0; quorum$1$member$1$0 | quorum$0$member$1$0; quorum$1$chosenAt$0$0')


---------- SigGenerator ----------

terms:  ['~chosenAt(quorum__acceptor0_acceptor1,proposer1)', 'chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~didNotPromise(acceptor1)', '~promise(acceptor1,proposer0)', '~start(proposer2)', 'member(acceptor1,quorum__acceptor0_acceptor1)', '~member(acceptor1,quorum__acceptor0_acceptor2)']

func_name2symbol:  {'chosenAt': Const('chosenAt', FunctionSort(EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')), EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')), BooleanSort())), 'didNotPromise': Const('didNotPromise', FunctionSort(EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')), BooleanSort())), 'promise': Const('promise', FunctionSort(EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')), EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')), BooleanSort())), 'start': Const('start', FunctionSort(EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')), BooleanSort())), 'member': Const('member', FunctionSort(EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')), EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')), BooleanSort()))}

func_name2args_sort:  {'chosenAt': (EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')), EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))), 'didNotPromise': (EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')),), 'promise': (EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')), EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))), 'start': (EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')),), 'member': (EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')), EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')))}

sign_func_name2count:  {'1$chosenAt': 1, '0$chosenAt': 1, '1$didNotPromise': 1, '1$promise': 1, '1$start': 1, '0$member': 1, '1$member': 1}


---------- ProductArgPartition ----------

sort2class_sigs: {EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')): [quorum$0$chosenAt$0$0; quorum$1$member$1$0, quorum$0$member$1$0; quorum$1$chosenAt$0$0], EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')): [proposer$0$chosenAt$1$0; proposer$1$chosenAt$1$0, proposer$1$promise$1$0, proposer$1$start$0$0], EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')): [acceptor$0$member$0$0; acceptor$1$didNotPromise$0$0; acceptor$1$member$0$0; acceptor$1$promise$0$0]}

sort2part_sig: {EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')): quorum$0$chosenAt$0$0; quorum$1$member$1$0 | quorum$0$member$1$0; quorum$1$chosenAt$0$0, EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')): proposer$0$chosenAt$1$0; proposer$1$chosenAt$1$0 | proposer$1$promise$1$0 | proposer$1$start$0$0, EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')): acceptor$0$member$0$0; acceptor$1$didNotPromise$0$0; acceptor$1$member$0$0; acceptor$1$promise$0$0}

	sort: quorum

	identical_classes: {'quorum$0$chosenAt$0; quorum$1$member$1': [quorum$0$chosenAt$0$0; quorum$1$member$1$0], 'quorum$0$member$1; quorum$1$chosenAt$0': [quorum$0$member$1$0; quorum$1$chosenAt$0$0]}

	identical_single_classes: {'quorum$0$chosenAt$0; quorum$1$member$1': quorum$0$chosenAt$0$0; quorum$1$member$1$0, 'quorum$0$member$1; quorum$1$chosenAt$0': quorum$0$member$1$0; quorum$1$chosenAt$0$0}

	identical_multi_classes: {}

	sort: proposer

	identical_classes: {'proposer$0$chosenAt$1; proposer$1$chosenAt$1': [proposer$0$chosenAt$1$0; proposer$1$chosenAt$1$0], 'proposer$1$promise$1': [proposer$1$promise$1$0], 'proposer$1$start$0': [proposer$1$start$0$0]}

	identical_single_classes: {'proposer$0$chosenAt$1; proposer$1$chosenAt$1': proposer$0$chosenAt$1$0; proposer$1$chosenAt$1$0, 'proposer$1$promise$1': proposer$1$promise$1$0, 'proposer$1$start$0': proposer$1$start$0$0}

	identical_multi_classes: {}

	sort: acceptor

	identical_classes: {'acceptor$0$member$0; acceptor$1$didNotPromise$0; acceptor$1$member$0; acceptor$1$promise$0': [acceptor$0$member$0$0; acceptor$1$didNotPromise$0$0; acceptor$1$member$0$0; acceptor$1$promise$0$0]}

	identical_single_classes: {'acceptor$0$member$0; acceptor$1$didNotPromise$0; acceptor$1$member$0; acceptor$1$promise$0': acceptor$0$member$0$0; acceptor$1$didNotPromise$0$0; acceptor$1$member$0$0; acceptor$1$promise$0$0}

	identical_multi_classes: {}


---------- QInference: _set_sort_to_quantifier_mode ----------

quantifier mode: quorum: QuantifierMode.forall

quantifier mode: proposer: QuantifierMode.forall

quantifier mode: acceptor: QuantifierMode.forall


---------- QInference: _set_constraint_mode ----------

constraint mode: ConstraintMode.no_merge


---------- QFormula: _set_qvars ----------

forall_qvars: {Var('QUORUM0', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), Var('ACCEPTOR0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Var('PROPOSER0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))), Var('PROPOSER1', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))), Var('QUORUM1', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), Var('PROPOSER2', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))}

exists_qvars: set()


---------- QFormula: _set_signed_func_name_to_args ----------

signed_func_name2args: {'1$chosenAt': [[Var('QUORUM1', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), Var('PROPOSER0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))]], '0$chosenAt': [[Var('QUORUM0', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), Var('PROPOSER0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))]], '1$didNotPromise': [[Var('ACCEPTOR0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')))]], '1$promise': [[Var('ACCEPTOR0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Var('PROPOSER1', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))]], '1$start': [[Var('PROPOSER2', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))]], '0$member': [[Var('ACCEPTOR0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Var('QUORUM1', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')))]], '1$member': [[Var('ACCEPTOR0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Var('QUORUM0', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')))]]}


---------- QFormula: _set_qterms ----------

qterms: ['~promise(ACCEPTOR0,PROPOSER1)', 'chosenAt(QUORUM0,PROPOSER0)', 'member(ACCEPTOR0,QUORUM1)', '~start(PROPOSER2)', '~didNotPromise(ACCEPTOR0)', '~chosenAt(QUORUM1,PROPOSER0)', '~member(ACCEPTOR0,QUORUM0)']


---------- QFormula: get_qclause ----------

qclause: forall ACCEPTOR0,PROPOSER1,PROPOSER0,QUORUM0,QUORUM1,PROPOSER2. promise(ACCEPTOR0,PROPOSER1) | ~chosenAt(QUORUM0,PROPOSER0) | ~member(ACCEPTOR0,QUORUM1) | start(PROPOSER2) | didNotPromise(ACCEPTOR0) | chosenAt(QUORUM1,PROPOSER0) | member(ACCEPTOR0,QUORUM0) | (PROPOSER0 = PROPOSER2 | QUORUM0 = QUORUM1 | PROPOSER0 = PROPOSER1 | PROPOSER1 = PROPOSER2)


=== Prime Orbit 31 =====================
size : 18
num_suborbits: 1
483 (*) : ---0--1--0---------------00
483     : ['chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~didNotPromise(acceptor0)', '~start(proposer1)', '~start(proposer2)']
484     : ----0--1-0--------------0-0
484     : ['chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~didNotPromise(acceptor0)', '~start(proposer0)', '~start(proposer2)']
485     : -----0--10--------------00-
485     : ['chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~didNotPromise(acceptor0)', '~start(proposer0)', '~start(proposer1)']
486     : 0-----1--0---------------00
486     : ['chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~didNotPromise(acceptor0)', '~start(proposer1)', '~start(proposer2)']
487     : -0-----1-0--------------0-0
487     : ['chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~didNotPromise(acceptor0)', '~start(proposer0)', '~start(proposer2)']
488     : --0-----10--------------00-
488     : ['chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~didNotPromise(acceptor0)', '~start(proposer0)', '~start(proposer1)']
489     : ---1--0---0--------------00
489     : ['chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor1)', '~start(proposer1)', '~start(proposer2)']
490     : ----1--0--0-------------0-0
490     : ['chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor1)', '~start(proposer0)', '~start(proposer2)']
491     : -----1--0-0-------------00-
491     : ['chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor1)', '~start(proposer0)', '~start(proposer1)']
492     : 0--1------0--------------00
492     : ['chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~didNotPromise(acceptor1)', '~start(proposer1)', '~start(proposer2)']
493     : -0--1-----0-------------0-0
493     : ['chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~didNotPromise(acceptor1)', '~start(proposer0)', '~start(proposer2)']
494     : --0--1----0-------------00-
494     : ['chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~didNotPromise(acceptor1)', '~start(proposer0)', '~start(proposer1)']
495     : 1-----0----0-------------00
495     : ['chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor2)', '~start(proposer1)', '~start(proposer2)']
496     : -1-----0---0------------0-0
496     : ['chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor2)', '~start(proposer0)', '~start(proposer2)']
497     : --1-----0--0------------00-
497     : ['chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor2)', '~start(proposer0)', '~start(proposer1)']
498     : 1--0-------0-------------00
498     : ['chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~didNotPromise(acceptor2)', '~start(proposer1)', '~start(proposer2)']
499     : -1--0------0------------0-0
499     : ['chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~didNotPromise(acceptor2)', '~start(proposer0)', '~start(proposer2)']
500     : --1--0-----0------------00-
500     : ['chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~didNotPromise(acceptor2)', '~start(proposer0)', '~start(proposer1)']
num_forall :   0
num_exists :   0
num_literals : 0
quantified form : None
qcost : 0




---------- QPrime ----------


---------- ConstArgBinding ----------

terms: ['~chosenAt(quorum__acceptor0_acceptor2,proposer0)', 'chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor0)', '~start(proposer1)', '~start(proposer2)', '~member(acceptor0,quorum__acceptor1_acceptor2)', 'member(acceptor0,quorum__acceptor0_acceptor2)']

sign_func_name2args: {'1$chosenAt': [(Const('quorum__acceptor0_acceptor2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), Const('proposer0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))))], '0$chosenAt': [(Const('quorum__acceptor1_acceptor2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), Const('proposer0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))))], '1$didNotPromise': [(Const('acceptor0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))),)], '1$start': [(Const('proposer1', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))),), (Const('proposer2', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))),)], '1$member': [(Const('acceptor0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Const('quorum__acceptor1_acceptor2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))))], '0$member': [(Const('acceptor0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Const('quorum__acceptor0_acceptor2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))))]}

const2sigs: {Const('quorum__acceptor0_acceptor2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))): [quorum$1$chosenAt$0$0, quorum$0$member$1$0], Const('proposer0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))): [proposer$1$chosenAt$1$0, proposer$0$chosenAt$1$0], Const('quorum__acceptor1_acceptor2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))): [quorum$0$chosenAt$0$0, quorum$1$member$1$0], Const('acceptor0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))): [acceptor$1$didNotPromise$0$0, acceptor$1$member$0$0, acceptor$0$member$0$0], Const('proposer1', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))): [proposer$1$start$0$0], Const('proposer2', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))): [proposer$1$start$0$1]}

sig2const: {'quorum$1$chosenAt$0$0': Const('quorum__acceptor0_acceptor2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), 'proposer$1$chosenAt$1$0': Const('proposer0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))), 'quorum$0$chosenAt$0$0': Const('quorum__acceptor1_acceptor2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), 'proposer$0$chosenAt$1$0': Const('proposer0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))), 'acceptor$1$didNotPromise$0$0': Const('acceptor0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), 'proposer$1$start$0$0': Const('proposer1', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))), 'proposer$1$start$0$1': Const('proposer2', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))), 'acceptor$1$member$0$0': Const('acceptor0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), 'quorum$1$member$1$0': Const('quorum__acceptor1_acceptor2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), 'acceptor$0$member$0$0': Const('acceptor0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), 'quorum$0$member$1$0': Const('quorum__acceptor0_acceptor2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')))}


---------- ArgPartition ----------

sort2class_sigs: {EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')): [quorum$0$chosenAt$0$0; quorum$1$member$1$0, quorum$0$member$1$0; quorum$1$chosenAt$0$0], EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')): [proposer$0$chosenAt$1$0; proposer$1$chosenAt$1$0, proposer$1$start$0$0, proposer$1$start$0$1], EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')): [acceptor$0$member$0$0; acceptor$1$didNotPromise$0$0; acceptor$1$member$0$0]}

sort2part_sig: {EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')): quorum$0$chosenAt$0$0; quorum$1$member$1$0 | quorum$0$member$1$0; quorum$1$chosenAt$0$0, EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')): proposer$0$chosenAt$1$0; proposer$1$chosenAt$1$0 | proposer$1$start$0$0 | proposer$1$start$0$1, EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')): acceptor$0$member$0$0; acceptor$1$didNotPromise$0$0; acceptor$1$member$0$0}

part_sig: ('acceptor$0$member$0$0; acceptor$1$didNotPromise$0$0; acceptor$1$member$0$0', 'proposer$0$chosenAt$1$0; proposer$1$chosenAt$1$0 | proposer$1$start$0$0 | proposer$1$start$0$1', 'quorum$0$chosenAt$0$0; quorum$1$member$1$0 | quorum$0$member$1$0; quorum$1$chosenAt$0$0')


---------- SigGenerator ----------

terms:  ['~chosenAt(quorum__acceptor0_acceptor2,proposer0)', 'chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor0)', '~start(proposer1)', '~start(proposer2)', '~member(acceptor0,quorum__acceptor1_acceptor2)', 'member(acceptor0,quorum__acceptor0_acceptor2)']

func_name2symbol:  {'chosenAt': Const('chosenAt', FunctionSort(EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')), EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')), BooleanSort())), 'didNotPromise': Const('didNotPromise', FunctionSort(EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')), BooleanSort())), 'start': Const('start', FunctionSort(EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')), BooleanSort())), 'member': Const('member', FunctionSort(EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')), EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')), BooleanSort()))}

func_name2args_sort:  {'chosenAt': (EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')), EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))), 'didNotPromise': (EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')),), 'start': (EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')),), 'member': (EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')), EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')))}

sign_func_name2count:  {'1$chosenAt': 1, '0$chosenAt': 1, '1$didNotPromise': 1, '1$start': 2, '1$member': 1, '0$member': 1}


---------- ProductArgPartition ----------

sort2class_sigs: {EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')): [quorum$0$chosenAt$0$0; quorum$1$member$1$0, quorum$0$member$1$0; quorum$1$chosenAt$0$0], EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')): [proposer$0$chosenAt$1$0; proposer$1$chosenAt$1$0, proposer$1$start$0$0, proposer$1$start$0$1], EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')): [acceptor$0$member$0$0; acceptor$1$didNotPromise$0$0; acceptor$1$member$0$0]}

sort2part_sig: {EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')): quorum$0$chosenAt$0$0; quorum$1$member$1$0 | quorum$0$member$1$0; quorum$1$chosenAt$0$0, EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')): proposer$0$chosenAt$1$0; proposer$1$chosenAt$1$0 | proposer$1$start$0$0 | proposer$1$start$0$1, EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')): acceptor$0$member$0$0; acceptor$1$didNotPromise$0$0; acceptor$1$member$0$0}

	sort: quorum

	identical_classes: {'quorum$0$chosenAt$0; quorum$1$member$1': [quorum$0$chosenAt$0$0; quorum$1$member$1$0], 'quorum$0$member$1; quorum$1$chosenAt$0': [quorum$0$member$1$0; quorum$1$chosenAt$0$0]}

	identical_single_classes: {'quorum$0$chosenAt$0; quorum$1$member$1': quorum$0$chosenAt$0$0; quorum$1$member$1$0, 'quorum$0$member$1; quorum$1$chosenAt$0': quorum$0$member$1$0; quorum$1$chosenAt$0$0}

	identical_multi_classes: {}

	sort: proposer

	identical_classes: {'proposer$0$chosenAt$1; proposer$1$chosenAt$1': [proposer$0$chosenAt$1$0; proposer$1$chosenAt$1$0], 'proposer$1$start$0': [proposer$1$start$0$0, proposer$1$start$0$1]}

	identical_single_classes: {'proposer$0$chosenAt$1; proposer$1$chosenAt$1': proposer$0$chosenAt$1$0; proposer$1$chosenAt$1$0}

	identical_multi_classes: {'proposer$1$start$0': [proposer$1$start$0$0, proposer$1$start$0$1]}

	sort: acceptor

	identical_classes: {'acceptor$0$member$0; acceptor$1$didNotPromise$0; acceptor$1$member$0': [acceptor$0$member$0$0; acceptor$1$didNotPromise$0$0; acceptor$1$member$0$0]}

	identical_single_classes: {'acceptor$0$member$0; acceptor$1$didNotPromise$0; acceptor$1$member$0': acceptor$0$member$0$0; acceptor$1$didNotPromise$0$0; acceptor$1$member$0$0}

	identical_multi_classes: {}


---------- QInference: _set_sort_to_quantifier_mode ----------

quantifier mode: quorum: QuantifierMode.forall

quantifier mode: proposer: QuantifierMode.forall_exists

quantifier mode: acceptor: QuantifierMode.forall


---------- QInference: _set_constraint_mode ----------

constraint mode: ConstraintMode.no_merge


---------- QFormula: _set_qvars ----------

forall_qvars: {Var('PROPOSER1', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))), Var('QUORUM0', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), Var('ACCEPTOR0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Var('QUORUM1', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')))}

exists_qvars: {Var('PROPOSER0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))}


---------- QFormula: _set_signed_func_name_to_args ----------

signed_func_name2args: {'1$chosenAt': [[Var('QUORUM1', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), Var('PROPOSER1', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))]], '0$chosenAt': [[Var('QUORUM0', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), Var('PROPOSER1', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))]], '1$didNotPromise': [[Var('ACCEPTOR0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')))]], '1$start': [[Var('PROPOSER0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))], [Var('PROPOSER0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))]], '1$member': [[Var('ACCEPTOR0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Var('QUORUM0', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')))]], '0$member': [[Var('ACCEPTOR0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Var('QUORUM1', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')))]]}


---------- QFormula: _set_qterms ----------

qterms: ['chosenAt(QUORUM0,PROPOSER1)', 'member(ACCEPTOR0,QUORUM1)', '~chosenAt(QUORUM1,PROPOSER1)', '~didNotPromise(ACCEPTOR0)', '~start(PROPOSER0)', '~member(ACCEPTOR0,QUORUM0)']


---------- QFormula: get_qclause ----------

qclause: forall QUORUM0,QUORUM1,PROPOSER1,ACCEPTOR0. ~chosenAt(QUORUM0,PROPOSER1) | ~member(ACCEPTOR0,QUORUM1) | chosenAt(QUORUM1,PROPOSER1) | didNotPromise(ACCEPTOR0) | member(ACCEPTOR0,QUORUM0) | (exists PROPOSER0. (start(PROPOSER0) & PROPOSER0 ~= PROPOSER1)) | QUORUM0 = QUORUM1


=== Prime Orbit 32 =====================
size : 9
num_suborbits: 1
501 (*) : ---0-----0-0-------------00
501     : ['~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor2)', '~start(proposer1)', '~start(proposer2)']
502     : ----0----0-0------------0-0
502     : ['~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor2)', '~start(proposer0)', '~start(proposer2)']
503     : -----0---0-0------------00-
503     : ['~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor2)', '~start(proposer0)', '~start(proposer1)']
504     : 0--------00--------------00
504     : ['~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~start(proposer1)', '~start(proposer2)']
505     : -0-------00-------------0-0
505     : ['~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~start(proposer0)', '~start(proposer2)']
506     : --0------00-------------00-
506     : ['~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~start(proposer0)', '~start(proposer1)']
507     : ------0---00-------------00
507     : ['~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~start(proposer1)', '~start(proposer2)']
508     : -------0--00------------0-0
508     : ['~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~start(proposer0)', '~start(proposer2)']
509     : --------0-00------------00-
509     : ['~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~start(proposer0)', '~start(proposer1)']
num_forall :   0
num_exists :   0
num_literals : 0
quantified form : None
qcost : 0




---------- QPrime ----------


---------- ConstArgBinding ----------

terms: ['~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor2)', '~start(proposer1)', '~start(proposer2)', 'member(acceptor0,quorum__acceptor0_acceptor2)', 'member(acceptor2,quorum__acceptor0_acceptor2)']

sign_func_name2args: {'1$chosenAt': [(Const('quorum__acceptor0_acceptor2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), Const('proposer0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))))], '1$didNotPromise': [(Const('acceptor0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))),), (Const('acceptor2', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))),)], '1$start': [(Const('proposer1', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))),), (Const('proposer2', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))),)], '0$member': [(Const('acceptor0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Const('quorum__acceptor0_acceptor2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')))), (Const('acceptor2', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Const('quorum__acceptor0_acceptor2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))))]}

const2sigs: {Const('quorum__acceptor0_acceptor2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))): [quorum$1$chosenAt$0$0, quorum$0$member$1$0, quorum$0$member$1$1], Const('proposer0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))): [proposer$1$chosenAt$1$0], Const('acceptor0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))): [acceptor$1$didNotPromise$0$0, acceptor$0$member$0$0], Const('acceptor2', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))): [acceptor$1$didNotPromise$0$1, acceptor$0$member$0$1], Const('proposer1', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))): [proposer$1$start$0$0], Const('proposer2', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))): [proposer$1$start$0$1]}

sig2const: {'quorum$1$chosenAt$0$0': Const('quorum__acceptor0_acceptor2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), 'proposer$1$chosenAt$1$0': Const('proposer0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))), 'acceptor$1$didNotPromise$0$0': Const('acceptor0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), 'acceptor$1$didNotPromise$0$1': Const('acceptor2', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), 'proposer$1$start$0$0': Const('proposer1', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))), 'proposer$1$start$0$1': Const('proposer2', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))), 'acceptor$0$member$0$0': Const('acceptor0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), 'quorum$0$member$1$0': Const('quorum__acceptor0_acceptor2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), 'acceptor$0$member$0$1': Const('acceptor2', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), 'quorum$0$member$1$1': Const('quorum__acceptor0_acceptor2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')))}


---------- ArgPartition ----------

sort2class_sigs: {EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')): [quorum$0$member$1$0; quorum$0$member$1$1; quorum$1$chosenAt$0$0], EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')): [proposer$1$chosenAt$1$0, proposer$1$start$0$0, proposer$1$start$0$1], EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')): [acceptor$0$member$0$0; acceptor$1$didNotPromise$0$0, acceptor$0$member$0$1; acceptor$1$didNotPromise$0$1]}

sort2part_sig: {EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')): quorum$0$member$1$0; quorum$0$member$1$1; quorum$1$chosenAt$0$0, EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')): proposer$1$chosenAt$1$0 | proposer$1$start$0$0 | proposer$1$start$0$1, EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')): acceptor$0$member$0$0; acceptor$1$didNotPromise$0$0 | acceptor$0$member$0$1; acceptor$1$didNotPromise$0$1}

part_sig: ('acceptor$0$member$0$0; acceptor$1$didNotPromise$0$0 | acceptor$0$member$0$1; acceptor$1$didNotPromise$0$1', 'proposer$1$chosenAt$1$0 | proposer$1$start$0$0 | proposer$1$start$0$1', 'quorum$0$member$1$0; quorum$0$member$1$1; quorum$1$chosenAt$0$0')


---------- SigGenerator ----------

terms:  ['~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor2)', '~start(proposer1)', '~start(proposer2)', 'member(acceptor0,quorum__acceptor0_acceptor2)', 'member(acceptor2,quorum__acceptor0_acceptor2)']

func_name2symbol:  {'chosenAt': Const('chosenAt', FunctionSort(EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')), EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')), BooleanSort())), 'didNotPromise': Const('didNotPromise', FunctionSort(EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')), BooleanSort())), 'start': Const('start', FunctionSort(EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')), BooleanSort())), 'member': Const('member', FunctionSort(EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')), EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')), BooleanSort()))}

func_name2args_sort:  {'chosenAt': (EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')), EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))), 'didNotPromise': (EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')),), 'start': (EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')),), 'member': (EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')), EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')))}

sign_func_name2count:  {'1$chosenAt': 1, '1$didNotPromise': 2, '1$start': 2, '0$member': 2}


---------- ProductArgPartition ----------

sort2class_sigs: {EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')): [quorum$0$member$1$0; quorum$0$member$1$1; quorum$1$chosenAt$0$0], EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')): [proposer$1$chosenAt$1$0, proposer$1$start$0$0, proposer$1$start$0$1], EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')): [acceptor$0$member$0$0; acceptor$1$didNotPromise$0$0, acceptor$0$member$0$1; acceptor$1$didNotPromise$0$1]}

sort2part_sig: {EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')): quorum$0$member$1$0; quorum$0$member$1$1; quorum$1$chosenAt$0$0, EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')): proposer$1$chosenAt$1$0 | proposer$1$start$0$0 | proposer$1$start$0$1, EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')): acceptor$0$member$0$0; acceptor$1$didNotPromise$0$0 | acceptor$0$member$0$1; acceptor$1$didNotPromise$0$1}

	sort: quorum

	identical_classes: {'quorum$0$member$1; quorum$0$member$1; quorum$1$chosenAt$0': [quorum$0$member$1$0; quorum$0$member$1$1; quorum$1$chosenAt$0$0]}

	identical_single_classes: {'quorum$0$member$1; quorum$0$member$1; quorum$1$chosenAt$0': quorum$0$member$1$0; quorum$0$member$1$1; quorum$1$chosenAt$0$0}

	identical_multi_classes: {}

	sort: proposer

	identical_classes: {'proposer$1$chosenAt$1': [proposer$1$chosenAt$1$0], 'proposer$1$start$0': [proposer$1$start$0$0, proposer$1$start$0$1]}

	identical_single_classes: {'proposer$1$chosenAt$1': proposer$1$chosenAt$1$0}

	identical_multi_classes: {'proposer$1$start$0': [proposer$1$start$0$0, proposer$1$start$0$1]}

	sort: acceptor

	identical_classes: {'acceptor$0$member$0; acceptor$1$didNotPromise$0': [acceptor$0$member$0$0; acceptor$1$didNotPromise$0$0, acceptor$0$member$0$1; acceptor$1$didNotPromise$0$1]}

	identical_single_classes: {}

	identical_multi_classes: {'acceptor$0$member$0; acceptor$1$didNotPromise$0': [acceptor$0$member$0$0, acceptor$1$didNotPromise$0$0, acceptor$0$member$0$1, acceptor$1$didNotPromise$0$1]}


---------- QInference: _set_sort_to_quantifier_mode ----------

quantifier mode: quorum: QuantifierMode.forall

quantifier mode: proposer: QuantifierMode.forall_exists

quantifier mode: acceptor: QuantifierMode.forall


---------- QInference: _set_constraint_mode ----------

constraint mode: ConstraintMode.no_merge


---------- QFormula: _set_qvars ----------

forall_qvars: {Var('PROPOSER1', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))), Var('ACCEPTOR1', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Var('QUORUM0', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), Var('ACCEPTOR0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')))}

exists_qvars: {Var('PROPOSER0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))}


---------- QFormula: _set_signed_func_name_to_args ----------

signed_func_name2args: {'1$chosenAt': [[Var('QUORUM0', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), Var('PROPOSER1', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))]], '1$didNotPromise': [[Var('ACCEPTOR0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')))], [Var('ACCEPTOR1', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')))]], '1$start': [[Var('PROPOSER0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))], [Var('PROPOSER0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))]], '0$member': [[Var('ACCEPTOR0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Var('QUORUM0', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')))], [Var('ACCEPTOR1', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Var('QUORUM0', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')))]]}


---------- QFormula: _set_qterms ----------

qterms: ['member(ACCEPTOR0,QUORUM0)', '~didNotPromise(ACCEPTOR0)', '~start(PROPOSER0)', '~chosenAt(QUORUM0,PROPOSER1)', '~didNotPromise(ACCEPTOR1)', 'member(ACCEPTOR1,QUORUM0)']


---------- QFormula: get_qclause ----------

qclause: forall ACCEPTOR1,QUORUM0,PROPOSER1,ACCEPTOR0. ~member(ACCEPTOR0,QUORUM0) | didNotPromise(ACCEPTOR0) | chosenAt(QUORUM0,PROPOSER1) | didNotPromise(ACCEPTOR1) | ~member(ACCEPTOR1,QUORUM0) | (exists PROPOSER0. (start(PROPOSER0) & PROPOSER0 ~= PROPOSER1)) | ACCEPTOR0 = ACCEPTOR1


=== Prime Orbit 33 =====================
size : 18
num_suborbits: 1
510 (*) : 0--------0--------1------00
510     : ['promise(acceptor1,proposer0)', '~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~didNotPromise(acceptor0)', '~start(proposer1)', '~start(proposer2)']
511     : -0-------0---------1----0-0
511     : ['promise(acceptor1,proposer1)', '~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~didNotPromise(acceptor0)', '~start(proposer0)', '~start(proposer2)']
512     : --0------0----------1---00-
512     : ['promise(acceptor1,proposer2)', '~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~didNotPromise(acceptor0)', '~start(proposer0)', '~start(proposer1)']
513     : ---0-----0-----------1---00
513     : ['promise(acceptor2,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~didNotPromise(acceptor0)', '~start(proposer1)', '~start(proposer2)']
514     : ----0----0------------1-0-0
514     : ['promise(acceptor2,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~didNotPromise(acceptor0)', '~start(proposer0)', '~start(proposer2)']
515     : -----0---0-------------100-
515     : ['promise(acceptor2,proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~didNotPromise(acceptor0)', '~start(proposer0)', '~start(proposer1)']
516     : 0---------0----1---------00
516     : ['promise(acceptor0,proposer0)', '~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~didNotPromise(acceptor1)', '~start(proposer1)', '~start(proposer2)']
517     : -0--------0-----1-------0-0
517     : ['promise(acceptor0,proposer1)', '~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~didNotPromise(acceptor1)', '~start(proposer0)', '~start(proposer2)']
518     : --0-------0------1------00-
518     : ['promise(acceptor0,proposer2)', '~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~didNotPromise(acceptor1)', '~start(proposer0)', '~start(proposer1)']
519     : ------0---0----------1---00
519     : ['promise(acceptor2,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor1)', '~start(proposer1)', '~start(proposer2)']
520     : -------0--0-----------1-0-0
520     : ['promise(acceptor2,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor1)', '~start(proposer0)', '~start(proposer2)']
521     : --------0-0------------100-
521     : ['promise(acceptor2,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor1)', '~start(proposer0)', '~start(proposer1)']
522     : ---0-------0---1---------00
522     : ['promise(acceptor0,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~didNotPromise(acceptor2)', '~start(proposer1)', '~start(proposer2)']
523     : ----0------0----1-------0-0
523     : ['promise(acceptor0,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~didNotPromise(acceptor2)', '~start(proposer0)', '~start(proposer2)']
524     : -----0-----0-----1------00-
524     : ['promise(acceptor0,proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~didNotPromise(acceptor2)', '~start(proposer0)', '~start(proposer1)']
525     : ------0----0------1------00
525     : ['promise(acceptor1,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor2)', '~start(proposer1)', '~start(proposer2)']
526     : -------0---0-------1----0-0
526     : ['promise(acceptor1,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor2)', '~start(proposer0)', '~start(proposer2)']
527     : --------0--0--------1---00-
527     : ['promise(acceptor1,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor2)', '~start(proposer0)', '~start(proposer1)']
num_forall :   0
num_exists :   0
num_literals : 0
quantified form : None
qcost : 0




---------- QPrime ----------


---------- ConstArgBinding ----------

terms: ['~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~didNotPromise(acceptor0)', 'promise(acceptor1,proposer0)', '~start(proposer1)', '~start(proposer2)', 'member(acceptor0,quorum__acceptor0_acceptor1)', 'member(acceptor1,quorum__acceptor0_acceptor1)']

sign_func_name2args: {'1$chosenAt': [(Const('quorum__acceptor0_acceptor1', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), Const('proposer0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))))], '1$didNotPromise': [(Const('acceptor0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))),)], '0$promise': [(Const('acceptor1', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Const('proposer0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))))], '1$start': [(Const('proposer1', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))),), (Const('proposer2', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))),)], '0$member': [(Const('acceptor0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Const('quorum__acceptor0_acceptor1', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')))), (Const('acceptor1', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Const('quorum__acceptor0_acceptor1', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))))]}

const2sigs: {Const('quorum__acceptor0_acceptor1', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))): [quorum$1$chosenAt$0$0, quorum$0$member$1$0, quorum$0$member$1$1], Const('proposer0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))): [proposer$1$chosenAt$1$0, proposer$0$promise$1$0], Const('acceptor0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))): [acceptor$1$didNotPromise$0$0, acceptor$0$member$0$0], Const('acceptor1', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))): [acceptor$0$promise$0$0, acceptor$0$member$0$1], Const('proposer1', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))): [proposer$1$start$0$0], Const('proposer2', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))): [proposer$1$start$0$1]}

sig2const: {'quorum$1$chosenAt$0$0': Const('quorum__acceptor0_acceptor1', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), 'proposer$1$chosenAt$1$0': Const('proposer0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))), 'acceptor$1$didNotPromise$0$0': Const('acceptor0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), 'acceptor$0$promise$0$0': Const('acceptor1', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), 'proposer$0$promise$1$0': Const('proposer0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))), 'proposer$1$start$0$0': Const('proposer1', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))), 'proposer$1$start$0$1': Const('proposer2', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))), 'acceptor$0$member$0$0': Const('acceptor0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), 'quorum$0$member$1$0': Const('quorum__acceptor0_acceptor1', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), 'acceptor$0$member$0$1': Const('acceptor1', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), 'quorum$0$member$1$1': Const('quorum__acceptor0_acceptor1', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')))}


---------- ArgPartition ----------

sort2class_sigs: {EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')): [quorum$0$member$1$0; quorum$0$member$1$1; quorum$1$chosenAt$0$0], EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')): [proposer$0$promise$1$0; proposer$1$chosenAt$1$0, proposer$1$start$0$0, proposer$1$start$0$1], EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')): [acceptor$0$member$0$0; acceptor$1$didNotPromise$0$0, acceptor$0$member$0$1; acceptor$0$promise$0$0]}

sort2part_sig: {EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')): quorum$0$member$1$0; quorum$0$member$1$1; quorum$1$chosenAt$0$0, EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')): proposer$0$promise$1$0; proposer$1$chosenAt$1$0 | proposer$1$start$0$0 | proposer$1$start$0$1, EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')): acceptor$0$member$0$0; acceptor$1$didNotPromise$0$0 | acceptor$0$member$0$1; acceptor$0$promise$0$0}

part_sig: ('acceptor$0$member$0$0; acceptor$1$didNotPromise$0$0 | acceptor$0$member$0$1; acceptor$0$promise$0$0', 'proposer$0$promise$1$0; proposer$1$chosenAt$1$0 | proposer$1$start$0$0 | proposer$1$start$0$1', 'quorum$0$member$1$0; quorum$0$member$1$1; quorum$1$chosenAt$0$0')


---------- SigGenerator ----------

terms:  ['~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~didNotPromise(acceptor0)', 'promise(acceptor1,proposer0)', '~start(proposer1)', '~start(proposer2)', 'member(acceptor0,quorum__acceptor0_acceptor1)', 'member(acceptor1,quorum__acceptor0_acceptor1)']

func_name2symbol:  {'chosenAt': Const('chosenAt', FunctionSort(EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')), EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')), BooleanSort())), 'didNotPromise': Const('didNotPromise', FunctionSort(EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')), BooleanSort())), 'promise': Const('promise', FunctionSort(EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')), EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')), BooleanSort())), 'start': Const('start', FunctionSort(EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')), BooleanSort())), 'member': Const('member', FunctionSort(EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')), EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')), BooleanSort()))}

func_name2args_sort:  {'chosenAt': (EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')), EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))), 'didNotPromise': (EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')),), 'promise': (EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')), EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))), 'start': (EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')),), 'member': (EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')), EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')))}

sign_func_name2count:  {'1$chosenAt': 1, '1$didNotPromise': 1, '0$promise': 1, '1$start': 2, '0$member': 2}


---------- ProductArgPartition ----------

sort2class_sigs: {EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')): [quorum$0$member$1$0; quorum$0$member$1$1; quorum$1$chosenAt$0$0], EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')): [proposer$0$promise$1$0; proposer$1$chosenAt$1$0, proposer$1$start$0$0, proposer$1$start$0$1], EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')): [acceptor$0$member$0$0; acceptor$1$didNotPromise$0$0, acceptor$0$member$0$1; acceptor$0$promise$0$0]}

sort2part_sig: {EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')): quorum$0$member$1$0; quorum$0$member$1$1; quorum$1$chosenAt$0$0, EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')): proposer$0$promise$1$0; proposer$1$chosenAt$1$0 | proposer$1$start$0$0 | proposer$1$start$0$1, EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')): acceptor$0$member$0$0; acceptor$1$didNotPromise$0$0 | acceptor$0$member$0$1; acceptor$0$promise$0$0}

	sort: quorum

	identical_classes: {'quorum$0$member$1; quorum$0$member$1; quorum$1$chosenAt$0': [quorum$0$member$1$0; quorum$0$member$1$1; quorum$1$chosenAt$0$0]}

	identical_single_classes: {'quorum$0$member$1; quorum$0$member$1; quorum$1$chosenAt$0': quorum$0$member$1$0; quorum$0$member$1$1; quorum$1$chosenAt$0$0}

	identical_multi_classes: {}

	sort: proposer

	identical_classes: {'proposer$0$promise$1; proposer$1$chosenAt$1': [proposer$0$promise$1$0; proposer$1$chosenAt$1$0], 'proposer$1$start$0': [proposer$1$start$0$0, proposer$1$start$0$1]}

	identical_single_classes: {'proposer$0$promise$1; proposer$1$chosenAt$1': proposer$0$promise$1$0; proposer$1$chosenAt$1$0}

	identical_multi_classes: {'proposer$1$start$0': [proposer$1$start$0$0, proposer$1$start$0$1]}

	sort: acceptor

	identical_classes: {'acceptor$0$member$0; acceptor$1$didNotPromise$0': [acceptor$0$member$0$0; acceptor$1$didNotPromise$0$0], 'acceptor$0$member$0; acceptor$0$promise$0': [acceptor$0$member$0$1; acceptor$0$promise$0$0]}

	identical_single_classes: {'acceptor$0$member$0; acceptor$1$didNotPromise$0': acceptor$0$member$0$0; acceptor$1$didNotPromise$0$0, 'acceptor$0$member$0; acceptor$0$promise$0': acceptor$0$member$0$1; acceptor$0$promise$0$0}

	identical_multi_classes: {}


---------- QInference: _set_sort_to_quantifier_mode ----------

quantifier mode: quorum: QuantifierMode.forall

quantifier mode: proposer: QuantifierMode.forall_exists

quantifier mode: acceptor: QuantifierMode.forall


---------- QInference: _set_constraint_mode ----------

constraint mode: ConstraintMode.no_merge


---------- QFormula: _set_qvars ----------

forall_qvars: {Var('PROPOSER1', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))), Var('ACCEPTOR1', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Var('QUORUM0', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), Var('ACCEPTOR0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')))}

exists_qvars: {Var('PROPOSER0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))}


---------- QFormula: _set_signed_func_name_to_args ----------

signed_func_name2args: {'1$chosenAt': [[Var('QUORUM0', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), Var('PROPOSER1', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))]], '1$didNotPromise': [[Var('ACCEPTOR0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')))]], '0$promise': [[Var('ACCEPTOR1', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Var('PROPOSER1', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))]], '1$start': [[Var('PROPOSER0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))], [Var('PROPOSER0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))]], '0$member': [[Var('ACCEPTOR0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Var('QUORUM0', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')))], [Var('ACCEPTOR1', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Var('QUORUM0', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')))]]}


---------- QFormula: _set_qterms ----------

qterms: ['promise(ACCEPTOR1,PROPOSER1)', '~didNotPromise(ACCEPTOR0)', 'member(ACCEPTOR0,QUORUM0)', '~start(PROPOSER0)', '~chosenAt(QUORUM0,PROPOSER1)', 'member(ACCEPTOR1,QUORUM0)']


---------- QFormula: get_qclause ----------

qclause: forall ACCEPTOR1,QUORUM0,PROPOSER1,ACCEPTOR0. ~promise(ACCEPTOR1,PROPOSER1) | didNotPromise(ACCEPTOR0) | ~member(ACCEPTOR0,QUORUM0) | chosenAt(QUORUM0,PROPOSER1) | ~member(ACCEPTOR1,QUORUM0) | (exists PROPOSER0. (start(PROPOSER0) & PROPOSER0 ~= PROPOSER1)) | ACCEPTOR0 = ACCEPTOR1


=== Prime Orbit 36 =====================
size : 18
num_suborbits: 1
564 (*) : 0--0-----0--1---0---------0
564     : ['leader(proposer0)', '~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~didNotPromise(acceptor0)', '~promise(acceptor0,proposer1)', '~start(proposer2)']
565     : 0--0-----0--1----0-------0-
565     : ['leader(proposer0)', '~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~didNotPromise(acceptor0)', '~promise(acceptor0,proposer2)', '~start(proposer1)']
566     : -0--0----0---1-0----------0
566     : ['leader(proposer1)', '~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~didNotPromise(acceptor0)', '~promise(acceptor0,proposer0)', '~start(proposer2)']
567     : -0--0----0---1---0------0--
567     : ['leader(proposer1)', '~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~didNotPromise(acceptor0)', '~promise(acceptor0,proposer2)', '~start(proposer0)']
568     : --0--0---0----10---------0-
568     : ['leader(proposer2)', '~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~didNotPromise(acceptor0)', '~promise(acceptor0,proposer0)', '~start(proposer1)']
569     : --0--0---0----1-0-------0--
569     : ['leader(proposer2)', '~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~didNotPromise(acceptor0)', '~promise(acceptor0,proposer1)', '~start(proposer0)']
570     : 0-----0---0-1------0------0
570     : ['leader(proposer0)', '~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor1)', '~promise(acceptor1,proposer1)', '~start(proposer2)']
571     : 0-----0---0-1-------0----0-
571     : ['leader(proposer0)', '~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor1)', '~promise(acceptor1,proposer2)', '~start(proposer1)']
572     : -0-----0--0--1----0-------0
572     : ['leader(proposer1)', '~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor1)', '~promise(acceptor1,proposer0)', '~start(proposer2)']
573     : -0-----0--0--1------0---0--
573     : ['leader(proposer1)', '~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor1)', '~promise(acceptor1,proposer2)', '~start(proposer0)']
574     : --0-----0-0---1---0------0-
574     : ['leader(proposer2)', '~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor1)', '~promise(acceptor1,proposer0)', '~start(proposer1)']
575     : --0-----0-0---1----0----0--
575     : ['leader(proposer2)', '~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor1)', '~promise(acceptor1,proposer1)', '~start(proposer0)']
576     : ---0--0----01---------0---0
576     : ['leader(proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor2)', '~promise(acceptor2,proposer1)', '~start(proposer2)']
577     : ---0--0----01----------0-0-
577     : ['leader(proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor2)', '~promise(acceptor2,proposer2)', '~start(proposer1)']
578     : ----0--0---0-1-------0----0
578     : ['leader(proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor2)', '~promise(acceptor2,proposer0)', '~start(proposer2)']
579     : ----0--0---0-1---------00--
579     : ['leader(proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor2)', '~promise(acceptor2,proposer2)', '~start(proposer0)']
580     : -----0--0--0--1------0---0-
580     : ['leader(proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor2)', '~promise(acceptor2,proposer0)', '~start(proposer1)']
581     : -----0--0--0--1-------0-0--
581     : ['leader(proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor2)', '~promise(acceptor2,proposer1)', '~start(proposer0)']
num_forall :   0
num_exists :   0
num_literals : 0
quantified form : None
qcost : 0




---------- QPrime ----------


---------- ConstArgBinding ----------

terms: ['~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~didNotPromise(acceptor0)', 'leader(proposer0)', '~promise(acceptor0,proposer1)', '~start(proposer2)', 'member(acceptor0,quorum__acceptor0_acceptor1)', 'member(acceptor0,quorum__acceptor0_acceptor2)']

sign_func_name2args: {'1$chosenAt': [(Const('quorum__acceptor0_acceptor1', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), Const('proposer0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))), (Const('quorum__acceptor0_acceptor2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), Const('proposer0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))))], '1$didNotPromise': [(Const('acceptor0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))),)], '0$leader': [(Const('proposer0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))),)], '1$promise': [(Const('acceptor0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Const('proposer1', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))))], '1$start': [(Const('proposer2', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))),)], '0$member': [(Const('acceptor0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Const('quorum__acceptor0_acceptor1', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')))), (Const('acceptor0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Const('quorum__acceptor0_acceptor2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))))]}

const2sigs: {Const('quorum__acceptor0_acceptor1', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))): [quorum$1$chosenAt$0$0, quorum$0$member$1$0], Const('proposer0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))): [proposer$1$chosenAt$1$0, proposer$1$chosenAt$1$1, proposer$0$leader$0$0], Const('quorum__acceptor0_acceptor2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))): [quorum$1$chosenAt$0$1, quorum$0$member$1$1], Const('acceptor0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))): [acceptor$1$didNotPromise$0$0, acceptor$1$promise$0$0, acceptor$0$member$0$0, acceptor$0$member$0$1], Const('proposer1', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))): [proposer$1$promise$1$0], Const('proposer2', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))): [proposer$1$start$0$0]}

sig2const: {'quorum$1$chosenAt$0$0': Const('quorum__acceptor0_acceptor1', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), 'proposer$1$chosenAt$1$0': Const('proposer0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))), 'quorum$1$chosenAt$0$1': Const('quorum__acceptor0_acceptor2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), 'proposer$1$chosenAt$1$1': Const('proposer0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))), 'acceptor$1$didNotPromise$0$0': Const('acceptor0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), 'proposer$0$leader$0$0': Const('proposer0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))), 'acceptor$1$promise$0$0': Const('acceptor0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), 'proposer$1$promise$1$0': Const('proposer1', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))), 'proposer$1$start$0$0': Const('proposer2', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))), 'acceptor$0$member$0$0': Const('acceptor0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), 'quorum$0$member$1$0': Const('quorum__acceptor0_acceptor1', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), 'acceptor$0$member$0$1': Const('acceptor0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), 'quorum$0$member$1$1': Const('quorum__acceptor0_acceptor2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')))}


---------- ArgPartition ----------

sort2class_sigs: {EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')): [quorum$0$member$1$0; quorum$1$chosenAt$0$0, quorum$0$member$1$1; quorum$1$chosenAt$0$1], EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')): [proposer$0$leader$0$0; proposer$1$chosenAt$1$0; proposer$1$chosenAt$1$1, proposer$1$promise$1$0, proposer$1$start$0$0], EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')): [acceptor$0$member$0$0; acceptor$0$member$0$1; acceptor$1$didNotPromise$0$0; acceptor$1$promise$0$0]}

sort2part_sig: {EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')): quorum$0$member$1$0; quorum$1$chosenAt$0$0 | quorum$0$member$1$1; quorum$1$chosenAt$0$1, EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')): proposer$0$leader$0$0; proposer$1$chosenAt$1$0; proposer$1$chosenAt$1$1 | proposer$1$promise$1$0 | proposer$1$start$0$0, EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')): acceptor$0$member$0$0; acceptor$0$member$0$1; acceptor$1$didNotPromise$0$0; acceptor$1$promise$0$0}

part_sig: ('acceptor$0$member$0$0; acceptor$0$member$0$1; acceptor$1$didNotPromise$0$0; acceptor$1$promise$0$0', 'proposer$0$leader$0$0; proposer$1$chosenAt$1$0; proposer$1$chosenAt$1$1 | proposer$1$promise$1$0 | proposer$1$start$0$0', 'quorum$0$member$1$0; quorum$1$chosenAt$0$0 | quorum$0$member$1$1; quorum$1$chosenAt$0$1')


---------- SigGenerator ----------

terms:  ['~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~didNotPromise(acceptor0)', 'leader(proposer0)', '~promise(acceptor0,proposer1)', '~start(proposer2)', 'member(acceptor0,quorum__acceptor0_acceptor1)', 'member(acceptor0,quorum__acceptor0_acceptor2)']

func_name2symbol:  {'chosenAt': Const('chosenAt', FunctionSort(EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')), EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')), BooleanSort())), 'didNotPromise': Const('didNotPromise', FunctionSort(EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')), BooleanSort())), 'leader': Const('leader', FunctionSort(EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')), BooleanSort())), 'promise': Const('promise', FunctionSort(EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')), EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')), BooleanSort())), 'start': Const('start', FunctionSort(EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')), BooleanSort())), 'member': Const('member', FunctionSort(EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')), EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')), BooleanSort()))}

func_name2args_sort:  {'chosenAt': (EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')), EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))), 'didNotPromise': (EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')),), 'leader': (EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')),), 'promise': (EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')), EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))), 'start': (EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')),), 'member': (EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')), EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')))}

sign_func_name2count:  {'1$chosenAt': 2, '1$didNotPromise': 1, '0$leader': 1, '1$promise': 1, '1$start': 1, '0$member': 2}


---------- ProductArgPartition ----------

sort2class_sigs: {EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')): [quorum$0$member$1$0; quorum$1$chosenAt$0$0, quorum$0$member$1$1; quorum$1$chosenAt$0$1], EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')): [proposer$0$leader$0$0; proposer$1$chosenAt$1$0; proposer$1$chosenAt$1$1, proposer$1$promise$1$0, proposer$1$start$0$0], EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')): [acceptor$0$member$0$0; acceptor$0$member$0$1; acceptor$1$didNotPromise$0$0; acceptor$1$promise$0$0]}

sort2part_sig: {EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')): quorum$0$member$1$0; quorum$1$chosenAt$0$0 | quorum$0$member$1$1; quorum$1$chosenAt$0$1, EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')): proposer$0$leader$0$0; proposer$1$chosenAt$1$0; proposer$1$chosenAt$1$1 | proposer$1$promise$1$0 | proposer$1$start$0$0, EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')): acceptor$0$member$0$0; acceptor$0$member$0$1; acceptor$1$didNotPromise$0$0; acceptor$1$promise$0$0}

	sort: quorum

	identical_classes: {'quorum$0$member$1; quorum$1$chosenAt$0': [quorum$0$member$1$0; quorum$1$chosenAt$0$0, quorum$0$member$1$1; quorum$1$chosenAt$0$1]}

	identical_single_classes: {}

	identical_multi_classes: {'quorum$0$member$1; quorum$1$chosenAt$0': [quorum$0$member$1$0, quorum$1$chosenAt$0$0, quorum$0$member$1$1, quorum$1$chosenAt$0$1]}

	sort: proposer

	identical_classes: {'proposer$0$leader$0; proposer$1$chosenAt$1; proposer$1$chosenAt$1': [proposer$0$leader$0$0; proposer$1$chosenAt$1$0; proposer$1$chosenAt$1$1], 'proposer$1$promise$1': [proposer$1$promise$1$0], 'proposer$1$start$0': [proposer$1$start$0$0]}

	identical_single_classes: {'proposer$0$leader$0; proposer$1$chosenAt$1; proposer$1$chosenAt$1': proposer$0$leader$0$0; proposer$1$chosenAt$1$0; proposer$1$chosenAt$1$1, 'proposer$1$promise$1': proposer$1$promise$1$0, 'proposer$1$start$0': proposer$1$start$0$0}

	identical_multi_classes: {}

	sort: acceptor

	identical_classes: {'acceptor$0$member$0; acceptor$0$member$0; acceptor$1$didNotPromise$0; acceptor$1$promise$0': [acceptor$0$member$0$0; acceptor$0$member$0$1; acceptor$1$didNotPromise$0$0; acceptor$1$promise$0$0]}

	identical_single_classes: {'acceptor$0$member$0; acceptor$0$member$0; acceptor$1$didNotPromise$0; acceptor$1$promise$0': acceptor$0$member$0$0; acceptor$0$member$0$1; acceptor$1$didNotPromise$0$0; acceptor$1$promise$0$0}

	identical_multi_classes: {}


---------- QInference: _set_sort_to_quantifier_mode ----------

quantifier mode: quorum: QuantifierMode.forall

quantifier mode: proposer: QuantifierMode.forall

quantifier mode: acceptor: QuantifierMode.forall


---------- QInference: _set_constraint_mode ----------

constraint mode: ConstraintMode.no_merge


---------- QFormula: _set_qvars ----------

forall_qvars: {Var('QUORUM0', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), Var('ACCEPTOR0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Var('PROPOSER0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))), Var('PROPOSER1', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))), Var('QUORUM1', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), Var('PROPOSER2', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))}

exists_qvars: set()


---------- QFormula: _set_signed_func_name_to_args ----------

signed_func_name2args: {'1$chosenAt': [[Var('QUORUM0', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), Var('PROPOSER0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))], [Var('QUORUM1', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), Var('PROPOSER0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))]], '1$didNotPromise': [[Var('ACCEPTOR0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')))]], '0$leader': [[Var('PROPOSER0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))]], '1$promise': [[Var('ACCEPTOR0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Var('PROPOSER1', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))]], '1$start': [[Var('PROPOSER2', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))]], '0$member': [[Var('ACCEPTOR0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Var('QUORUM0', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')))], [Var('ACCEPTOR0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Var('QUORUM1', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')))]]}


---------- QFormula: _set_qterms ----------

qterms: ['~chosenAt(QUORUM0,PROPOSER0)', '~promise(ACCEPTOR0,PROPOSER1)', 'leader(PROPOSER0)', 'member(ACCEPTOR0,QUORUM1)', '~start(PROPOSER2)', '~didNotPromise(ACCEPTOR0)', 'member(ACCEPTOR0,QUORUM0)', '~chosenAt(QUORUM1,PROPOSER0)']


---------- QFormula: get_qclause ----------

qclause: forall ACCEPTOR0,PROPOSER1,PROPOSER0,QUORUM0,QUORUM1,PROPOSER2. chosenAt(QUORUM0,PROPOSER0) | promise(ACCEPTOR0,PROPOSER1) | ~leader(PROPOSER0) | ~member(ACCEPTOR0,QUORUM1) | start(PROPOSER2) | didNotPromise(ACCEPTOR0) | ~member(ACCEPTOR0,QUORUM0) | chosenAt(QUORUM1,PROPOSER0) | (PROPOSER0 = PROPOSER2 | QUORUM0 = QUORUM1 | PROPOSER0 = PROPOSER1 | PROPOSER1 = PROPOSER2)


=== Prime Orbit 37 =====================
size : 9
num_suborbits: 1
582 (*) : ---0--0----01------------00
582     : ['leader(proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor2)', '~start(proposer1)', '~start(proposer2)']
583     : ----0--0---0-1----------0-0
583     : ['leader(proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor2)', '~start(proposer0)', '~start(proposer2)']
584     : -----0--0--0--1---------00-
584     : ['leader(proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor2)', '~start(proposer0)', '~start(proposer1)']
585     : 0-----0---0-1------------00
585     : ['leader(proposer0)', '~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor1)', '~start(proposer1)', '~start(proposer2)']
586     : -0-----0--0--1----------0-0
586     : ['leader(proposer1)', '~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor1)', '~start(proposer0)', '~start(proposer2)']
587     : --0-----0-0---1---------00-
587     : ['leader(proposer2)', '~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor1)', '~start(proposer0)', '~start(proposer1)']
588     : 0--0-----0--1------------00
588     : ['leader(proposer0)', '~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~didNotPromise(acceptor0)', '~start(proposer1)', '~start(proposer2)']
589     : -0--0----0---1----------0-0
589     : ['leader(proposer1)', '~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~didNotPromise(acceptor0)', '~start(proposer0)', '~start(proposer2)']
590     : --0--0---0----1---------00-
590     : ['leader(proposer2)', '~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~didNotPromise(acceptor0)', '~start(proposer0)', '~start(proposer1)']
num_forall :   0
num_exists :   0
num_literals : 0
quantified form : None
qcost : 0




---------- QPrime ----------


---------- ConstArgBinding ----------

terms: ['~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor2)', 'leader(proposer0)', '~start(proposer1)', '~start(proposer2)', 'member(acceptor2,quorum__acceptor1_acceptor2)', 'member(acceptor2,quorum__acceptor0_acceptor2)']

sign_func_name2args: {'1$chosenAt': [(Const('quorum__acceptor0_acceptor2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), Const('proposer0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))), (Const('quorum__acceptor1_acceptor2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), Const('proposer0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))))], '1$didNotPromise': [(Const('acceptor2', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))),)], '0$leader': [(Const('proposer0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))),)], '1$start': [(Const('proposer1', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))),), (Const('proposer2', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))),)], '0$member': [(Const('acceptor2', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Const('quorum__acceptor1_acceptor2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')))), (Const('acceptor2', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Const('quorum__acceptor0_acceptor2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))))]}

const2sigs: {Const('quorum__acceptor0_acceptor2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))): [quorum$1$chosenAt$0$0, quorum$0$member$1$1], Const('proposer0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))): [proposer$1$chosenAt$1$0, proposer$1$chosenAt$1$1, proposer$0$leader$0$0], Const('quorum__acceptor1_acceptor2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))): [quorum$1$chosenAt$0$1, quorum$0$member$1$0], Const('acceptor2', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))): [acceptor$1$didNotPromise$0$0, acceptor$0$member$0$0, acceptor$0$member$0$1], Const('proposer1', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))): [proposer$1$start$0$0], Const('proposer2', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))): [proposer$1$start$0$1]}

sig2const: {'quorum$1$chosenAt$0$0': Const('quorum__acceptor0_acceptor2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), 'proposer$1$chosenAt$1$0': Const('proposer0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))), 'quorum$1$chosenAt$0$1': Const('quorum__acceptor1_acceptor2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), 'proposer$1$chosenAt$1$1': Const('proposer0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))), 'acceptor$1$didNotPromise$0$0': Const('acceptor2', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), 'proposer$0$leader$0$0': Const('proposer0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))), 'proposer$1$start$0$0': Const('proposer1', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))), 'proposer$1$start$0$1': Const('proposer2', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))), 'acceptor$0$member$0$0': Const('acceptor2', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), 'quorum$0$member$1$0': Const('quorum__acceptor1_acceptor2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), 'acceptor$0$member$0$1': Const('acceptor2', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), 'quorum$0$member$1$1': Const('quorum__acceptor0_acceptor2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')))}


---------- ArgPartition ----------

sort2class_sigs: {EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')): [quorum$0$member$1$0; quorum$1$chosenAt$0$1, quorum$0$member$1$1; quorum$1$chosenAt$0$0], EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')): [proposer$0$leader$0$0; proposer$1$chosenAt$1$0; proposer$1$chosenAt$1$1, proposer$1$start$0$0, proposer$1$start$0$1], EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')): [acceptor$0$member$0$0; acceptor$0$member$0$1; acceptor$1$didNotPromise$0$0]}

sort2part_sig: {EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')): quorum$0$member$1$0; quorum$1$chosenAt$0$1 | quorum$0$member$1$1; quorum$1$chosenAt$0$0, EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')): proposer$0$leader$0$0; proposer$1$chosenAt$1$0; proposer$1$chosenAt$1$1 | proposer$1$start$0$0 | proposer$1$start$0$1, EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')): acceptor$0$member$0$0; acceptor$0$member$0$1; acceptor$1$didNotPromise$0$0}

part_sig: ('acceptor$0$member$0$0; acceptor$0$member$0$1; acceptor$1$didNotPromise$0$0', 'proposer$0$leader$0$0; proposer$1$chosenAt$1$0; proposer$1$chosenAt$1$1 | proposer$1$start$0$0 | proposer$1$start$0$1', 'quorum$0$member$1$0; quorum$1$chosenAt$0$1 | quorum$0$member$1$1; quorum$1$chosenAt$0$0')


---------- SigGenerator ----------

terms:  ['~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor2)', 'leader(proposer0)', '~start(proposer1)', '~start(proposer2)', 'member(acceptor2,quorum__acceptor1_acceptor2)', 'member(acceptor2,quorum__acceptor0_acceptor2)']

func_name2symbol:  {'chosenAt': Const('chosenAt', FunctionSort(EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')), EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')), BooleanSort())), 'didNotPromise': Const('didNotPromise', FunctionSort(EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')), BooleanSort())), 'leader': Const('leader', FunctionSort(EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')), BooleanSort())), 'start': Const('start', FunctionSort(EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')), BooleanSort())), 'member': Const('member', FunctionSort(EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')), EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')), BooleanSort()))}

func_name2args_sort:  {'chosenAt': (EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')), EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))), 'didNotPromise': (EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')),), 'leader': (EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')),), 'start': (EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')),), 'member': (EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')), EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')))}

sign_func_name2count:  {'1$chosenAt': 2, '1$didNotPromise': 1, '0$leader': 1, '1$start': 2, '0$member': 2}


---------- ProductArgPartition ----------

sort2class_sigs: {EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')): [quorum$0$member$1$0; quorum$1$chosenAt$0$1, quorum$0$member$1$1; quorum$1$chosenAt$0$0], EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')): [proposer$0$leader$0$0; proposer$1$chosenAt$1$0; proposer$1$chosenAt$1$1, proposer$1$start$0$0, proposer$1$start$0$1], EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')): [acceptor$0$member$0$0; acceptor$0$member$0$1; acceptor$1$didNotPromise$0$0]}

sort2part_sig: {EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')): quorum$0$member$1$0; quorum$1$chosenAt$0$1 | quorum$0$member$1$1; quorum$1$chosenAt$0$0, EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')): proposer$0$leader$0$0; proposer$1$chosenAt$1$0; proposer$1$chosenAt$1$1 | proposer$1$start$0$0 | proposer$1$start$0$1, EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')): acceptor$0$member$0$0; acceptor$0$member$0$1; acceptor$1$didNotPromise$0$0}

	sort: quorum

	identical_classes: {'quorum$0$member$1; quorum$1$chosenAt$0': [quorum$0$member$1$0; quorum$1$chosenAt$0$1, quorum$0$member$1$1; quorum$1$chosenAt$0$0]}

	identical_single_classes: {}

	identical_multi_classes: {'quorum$0$member$1; quorum$1$chosenAt$0': [quorum$0$member$1$0, quorum$1$chosenAt$0$1, quorum$0$member$1$1, quorum$1$chosenAt$0$0]}

	sort: proposer

	identical_classes: {'proposer$0$leader$0; proposer$1$chosenAt$1; proposer$1$chosenAt$1': [proposer$0$leader$0$0; proposer$1$chosenAt$1$0; proposer$1$chosenAt$1$1], 'proposer$1$start$0': [proposer$1$start$0$0, proposer$1$start$0$1]}

	identical_single_classes: {'proposer$0$leader$0; proposer$1$chosenAt$1; proposer$1$chosenAt$1': proposer$0$leader$0$0; proposer$1$chosenAt$1$0; proposer$1$chosenAt$1$1}

	identical_multi_classes: {'proposer$1$start$0': [proposer$1$start$0$0, proposer$1$start$0$1]}

	sort: acceptor

	identical_classes: {'acceptor$0$member$0; acceptor$0$member$0; acceptor$1$didNotPromise$0': [acceptor$0$member$0$0; acceptor$0$member$0$1; acceptor$1$didNotPromise$0$0]}

	identical_single_classes: {'acceptor$0$member$0; acceptor$0$member$0; acceptor$1$didNotPromise$0': acceptor$0$member$0$0; acceptor$0$member$0$1; acceptor$1$didNotPromise$0$0}

	identical_multi_classes: {}


---------- QInference: _set_sort_to_quantifier_mode ----------

quantifier mode: quorum: QuantifierMode.forall

quantifier mode: proposer: QuantifierMode.forall_exists

quantifier mode: acceptor: QuantifierMode.forall


---------- QInference: _set_constraint_mode ----------

constraint mode: ConstraintMode.no_merge


---------- QFormula: _set_qvars ----------

forall_qvars: {Var('PROPOSER1', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))), Var('QUORUM0', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), Var('ACCEPTOR0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Var('QUORUM1', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')))}

exists_qvars: {Var('PROPOSER0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))}


---------- QFormula: _set_signed_func_name_to_args ----------

signed_func_name2args: {'1$chosenAt': [[Var('QUORUM1', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), Var('PROPOSER1', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))], [Var('QUORUM0', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), Var('PROPOSER1', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))]], '1$didNotPromise': [[Var('ACCEPTOR0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')))]], '0$leader': [[Var('PROPOSER1', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))]], '1$start': [[Var('PROPOSER0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))], [Var('PROPOSER0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))]], '0$member': [[Var('ACCEPTOR0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Var('QUORUM0', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')))], [Var('ACCEPTOR0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Var('QUORUM1', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')))]]}


---------- QFormula: _set_qterms ----------

qterms: ['member(ACCEPTOR0,QUORUM1)', '~chosenAt(QUORUM1,PROPOSER1)', '~didNotPromise(ACCEPTOR0)', 'member(ACCEPTOR0,QUORUM0)', '~start(PROPOSER0)', '~chosenAt(QUORUM0,PROPOSER1)', 'leader(PROPOSER1)']


---------- QFormula: get_qclause ----------

qclause: forall QUORUM0,QUORUM1,PROPOSER1,ACCEPTOR0. ~member(ACCEPTOR0,QUORUM1) | chosenAt(QUORUM1,PROPOSER1) | didNotPromise(ACCEPTOR0) | ~member(ACCEPTOR0,QUORUM0) | chosenAt(QUORUM0,PROPOSER1) | ~leader(PROPOSER1) | (exists PROPOSER0. (start(PROPOSER0) & PROPOSER0 ~= PROPOSER1)) | QUORUM0 = QUORUM1


=== Prime Orbit 38 =====================
size : 18
num_suborbits: 1
591 (*) : ------0---00-------0--0---0
591     : ['~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor1,proposer1)', '~promise(acceptor2,proposer1)', '~start(proposer2)']
592     : ------0---00--------0--0-0-
592     : ['~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor1,proposer2)', '~promise(acceptor2,proposer2)', '~start(proposer1)']
593     : -------0--00------0--0----0
593     : ['~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor1,proposer0)', '~promise(acceptor2,proposer0)', '~start(proposer2)']
594     : -------0--00--------0--00--
594     : ['~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor1,proposer2)', '~promise(acceptor2,proposer2)', '~start(proposer0)']
595     : --------0-00------0--0---0-
595     : ['~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor1,proposer0)', '~promise(acceptor2,proposer0)', '~start(proposer1)']
596     : --------0-00-------0--0-0--
596     : ['~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor1,proposer1)', '~promise(acceptor2,proposer1)', '~start(proposer0)']
597     : ---0-----0-0----0-----0---0
597     : ['~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor2)', '~promise(acceptor0,proposer1)', '~promise(acceptor2,proposer1)', '~start(proposer2)']
598     : ---0-----0-0-----0-----0-0-
598     : ['~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor2)', '~promise(acceptor0,proposer2)', '~promise(acceptor2,proposer2)', '~start(proposer1)']
599     : ----0----0-0---0-----0----0
599     : ['~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor2)', '~promise(acceptor0,proposer0)', '~promise(acceptor2,proposer0)', '~start(proposer2)']
600     : ----0----0-0-----0-----00--
600     : ['~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor2)', '~promise(acceptor0,proposer2)', '~promise(acceptor2,proposer2)', '~start(proposer0)']
601     : -----0---0-0---0-----0---0-
601     : ['~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor2)', '~promise(acceptor0,proposer0)', '~promise(acceptor2,proposer0)', '~start(proposer1)']
602     : -----0---0-0----0-----0-0--
602     : ['~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor2)', '~promise(acceptor0,proposer1)', '~promise(acceptor2,proposer1)', '~start(proposer0)']
603     : 0--------00-----0--0------0
603     : ['~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~promise(acceptor0,proposer1)', '~promise(acceptor1,proposer1)', '~start(proposer2)']
604     : 0--------00------0--0----0-
604     : ['~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~promise(acceptor0,proposer2)', '~promise(acceptor1,proposer2)', '~start(proposer1)']
605     : -0-------00----0--0-------0
605     : ['~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~promise(acceptor0,proposer0)', '~promise(acceptor1,proposer0)', '~start(proposer2)']
606     : -0-------00------0--0---0--
606     : ['~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~promise(acceptor0,proposer2)', '~promise(acceptor1,proposer2)', '~start(proposer0)']
607     : --0------00----0--0------0-
607     : ['~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~promise(acceptor0,proposer0)', '~promise(acceptor1,proposer0)', '~start(proposer1)']
608     : --0------00-----0--0----0--
608     : ['~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~promise(acceptor0,proposer1)', '~promise(acceptor1,proposer1)', '~start(proposer0)']
num_forall :   0
num_exists :   0
num_literals : 0
quantified form : None
qcost : 0




---------- QPrime ----------


---------- ConstArgBinding ----------

terms: ['~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor1,proposer1)', '~promise(acceptor2,proposer1)', '~start(proposer2)', 'member(acceptor1,quorum__acceptor1_acceptor2)', 'member(acceptor2,quorum__acceptor1_acceptor2)']

sign_func_name2args: {'1$chosenAt': [(Const('quorum__acceptor1_acceptor2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), Const('proposer0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))))], '1$didNotPromise': [(Const('acceptor1', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))),), (Const('acceptor2', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))),)], '1$promise': [(Const('acceptor1', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Const('proposer1', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))), (Const('acceptor2', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Const('proposer1', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))))], '1$start': [(Const('proposer2', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))),)], '0$member': [(Const('acceptor1', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Const('quorum__acceptor1_acceptor2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')))), (Const('acceptor2', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Const('quorum__acceptor1_acceptor2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))))]}

const2sigs: {Const('quorum__acceptor1_acceptor2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))): [quorum$1$chosenAt$0$0, quorum$0$member$1$0, quorum$0$member$1$1], Const('proposer0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))): [proposer$1$chosenAt$1$0], Const('acceptor1', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))): [acceptor$1$didNotPromise$0$0, acceptor$1$promise$0$0, acceptor$0$member$0$0], Const('acceptor2', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))): [acceptor$1$didNotPromise$0$1, acceptor$1$promise$0$1, acceptor$0$member$0$1], Const('proposer1', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))): [proposer$1$promise$1$0, proposer$1$promise$1$1], Const('proposer2', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))): [proposer$1$start$0$0]}

sig2const: {'quorum$1$chosenAt$0$0': Const('quorum__acceptor1_acceptor2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), 'proposer$1$chosenAt$1$0': Const('proposer0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))), 'acceptor$1$didNotPromise$0$0': Const('acceptor1', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), 'acceptor$1$didNotPromise$0$1': Const('acceptor2', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), 'acceptor$1$promise$0$0': Const('acceptor1', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), 'proposer$1$promise$1$0': Const('proposer1', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))), 'acceptor$1$promise$0$1': Const('acceptor2', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), 'proposer$1$promise$1$1': Const('proposer1', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))), 'proposer$1$start$0$0': Const('proposer2', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))), 'acceptor$0$member$0$0': Const('acceptor1', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), 'quorum$0$member$1$0': Const('quorum__acceptor1_acceptor2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), 'acceptor$0$member$0$1': Const('acceptor2', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), 'quorum$0$member$1$1': Const('quorum__acceptor1_acceptor2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')))}


---------- ArgPartition ----------

sort2class_sigs: {EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')): [quorum$0$member$1$0; quorum$0$member$1$1; quorum$1$chosenAt$0$0], EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')): [proposer$1$chosenAt$1$0, proposer$1$promise$1$0; proposer$1$promise$1$1, proposer$1$start$0$0], EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')): [acceptor$0$member$0$0; acceptor$1$didNotPromise$0$0; acceptor$1$promise$0$0, acceptor$0$member$0$1; acceptor$1$didNotPromise$0$1; acceptor$1$promise$0$1]}

sort2part_sig: {EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')): quorum$0$member$1$0; quorum$0$member$1$1; quorum$1$chosenAt$0$0, EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')): proposer$1$chosenAt$1$0 | proposer$1$promise$1$0; proposer$1$promise$1$1 | proposer$1$start$0$0, EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')): acceptor$0$member$0$0; acceptor$1$didNotPromise$0$0; acceptor$1$promise$0$0 | acceptor$0$member$0$1; acceptor$1$didNotPromise$0$1; acceptor$1$promise$0$1}

part_sig: ('acceptor$0$member$0$0; acceptor$1$didNotPromise$0$0; acceptor$1$promise$0$0 | acceptor$0$member$0$1; acceptor$1$didNotPromise$0$1; acceptor$1$promise$0$1', 'proposer$1$chosenAt$1$0 | proposer$1$promise$1$0; proposer$1$promise$1$1 | proposer$1$start$0$0', 'quorum$0$member$1$0; quorum$0$member$1$1; quorum$1$chosenAt$0$0')


---------- SigGenerator ----------

terms:  ['~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor1,proposer1)', '~promise(acceptor2,proposer1)', '~start(proposer2)', 'member(acceptor1,quorum__acceptor1_acceptor2)', 'member(acceptor2,quorum__acceptor1_acceptor2)']

func_name2symbol:  {'chosenAt': Const('chosenAt', FunctionSort(EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')), EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')), BooleanSort())), 'didNotPromise': Const('didNotPromise', FunctionSort(EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')), BooleanSort())), 'promise': Const('promise', FunctionSort(EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')), EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')), BooleanSort())), 'start': Const('start', FunctionSort(EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')), BooleanSort())), 'member': Const('member', FunctionSort(EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')), EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')), BooleanSort()))}

func_name2args_sort:  {'chosenAt': (EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')), EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))), 'didNotPromise': (EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')),), 'promise': (EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')), EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))), 'start': (EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')),), 'member': (EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')), EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')))}

sign_func_name2count:  {'1$chosenAt': 1, '1$didNotPromise': 2, '1$promise': 2, '1$start': 1, '0$member': 2}


---------- ProductArgPartition ----------

sort2class_sigs: {EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')): [quorum$0$member$1$0; quorum$0$member$1$1; quorum$1$chosenAt$0$0], EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')): [proposer$1$chosenAt$1$0, proposer$1$promise$1$0; proposer$1$promise$1$1, proposer$1$start$0$0], EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')): [acceptor$0$member$0$0; acceptor$1$didNotPromise$0$0; acceptor$1$promise$0$0, acceptor$0$member$0$1; acceptor$1$didNotPromise$0$1; acceptor$1$promise$0$1]}

sort2part_sig: {EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')): quorum$0$member$1$0; quorum$0$member$1$1; quorum$1$chosenAt$0$0, EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')): proposer$1$chosenAt$1$0 | proposer$1$promise$1$0; proposer$1$promise$1$1 | proposer$1$start$0$0, EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')): acceptor$0$member$0$0; acceptor$1$didNotPromise$0$0; acceptor$1$promise$0$0 | acceptor$0$member$0$1; acceptor$1$didNotPromise$0$1; acceptor$1$promise$0$1}

	sort: quorum

	identical_classes: {'quorum$0$member$1; quorum$0$member$1; quorum$1$chosenAt$0': [quorum$0$member$1$0; quorum$0$member$1$1; quorum$1$chosenAt$0$0]}

	identical_single_classes: {'quorum$0$member$1; quorum$0$member$1; quorum$1$chosenAt$0': quorum$0$member$1$0; quorum$0$member$1$1; quorum$1$chosenAt$0$0}

	identical_multi_classes: {}

	sort: proposer

	identical_classes: {'proposer$1$chosenAt$1': [proposer$1$chosenAt$1$0], 'proposer$1$promise$1; proposer$1$promise$1': [proposer$1$promise$1$0; proposer$1$promise$1$1], 'proposer$1$start$0': [proposer$1$start$0$0]}

	identical_single_classes: {'proposer$1$chosenAt$1': proposer$1$chosenAt$1$0, 'proposer$1$promise$1; proposer$1$promise$1': proposer$1$promise$1$0; proposer$1$promise$1$1, 'proposer$1$start$0': proposer$1$start$0$0}

	identical_multi_classes: {}

	sort: acceptor

	identical_classes: {'acceptor$0$member$0; acceptor$1$didNotPromise$0; acceptor$1$promise$0': [acceptor$0$member$0$0; acceptor$1$didNotPromise$0$0; acceptor$1$promise$0$0, acceptor$0$member$0$1; acceptor$1$didNotPromise$0$1; acceptor$1$promise$0$1]}

	identical_single_classes: {}

	identical_multi_classes: {'acceptor$0$member$0; acceptor$1$didNotPromise$0; acceptor$1$promise$0': [acceptor$0$member$0$0, acceptor$1$didNotPromise$0$0, acceptor$1$promise$0$0, acceptor$0$member$0$1, acceptor$1$didNotPromise$0$1, acceptor$1$promise$0$1]}


---------- QInference: _set_sort_to_quantifier_mode ----------

quantifier mode: quorum: QuantifierMode.forall

quantifier mode: proposer: QuantifierMode.forall

quantifier mode: acceptor: QuantifierMode.forall


---------- QInference: _set_constraint_mode ----------

constraint mode: ConstraintMode.no_merge


---------- QFormula: _set_qvars ----------

forall_qvars: {Var('QUORUM0', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), Var('ACCEPTOR0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Var('PROPOSER0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))), Var('PROPOSER1', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))), Var('ACCEPTOR1', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Var('PROPOSER2', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))}

exists_qvars: set()


---------- QFormula: _set_signed_func_name_to_args ----------

signed_func_name2args: {'1$chosenAt': [[Var('QUORUM0', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), Var('PROPOSER0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))]], '1$didNotPromise': [[Var('ACCEPTOR0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')))], [Var('ACCEPTOR1', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')))]], '1$promise': [[Var('ACCEPTOR0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Var('PROPOSER1', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))], [Var('ACCEPTOR1', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Var('PROPOSER1', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))]], '1$start': [[Var('PROPOSER2', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))]], '0$member': [[Var('ACCEPTOR0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Var('QUORUM0', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')))], [Var('ACCEPTOR1', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Var('QUORUM0', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')))]]}


---------- QFormula: _set_qterms ----------

qterms: ['~chosenAt(QUORUM0,PROPOSER0)', '~promise(ACCEPTOR0,PROPOSER1)', '~start(PROPOSER2)', '~didNotPromise(ACCEPTOR0)', 'member(ACCEPTOR0,QUORUM0)', '~didNotPromise(ACCEPTOR1)', '~promise(ACCEPTOR1,PROPOSER1)', 'member(ACCEPTOR1,QUORUM0)']


---------- QFormula: get_qclause ----------

qclause: forall ACCEPTOR0,PROPOSER0,PROPOSER1,ACCEPTOR1,QUORUM0,PROPOSER2. chosenAt(QUORUM0,PROPOSER0) | promise(ACCEPTOR0,PROPOSER1) | start(PROPOSER2) | didNotPromise(ACCEPTOR0) | ~member(ACCEPTOR0,QUORUM0) | didNotPromise(ACCEPTOR1) | promise(ACCEPTOR1,PROPOSER1) | ~member(ACCEPTOR1,QUORUM0) | (PROPOSER0 = PROPOSER2 | ACCEPTOR0 = ACCEPTOR1 | PROPOSER0 = PROPOSER1 | PROPOSER1 = PROPOSER2)


=== Prime Orbit 39 =====================
size : 18
num_suborbits: 1
609 (*) : -0----0---0-----1----1----0
609     : ['promise(acceptor0,proposer1)', 'promise(acceptor2,proposer0)', '~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor1)', '~start(proposer2)']
610     : --0---0---0------1---1---0-
610     : ['promise(acceptor0,proposer2)', 'promise(acceptor2,proposer0)', '~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor1)', '~start(proposer1)']
611     : 0------0--0----1------1---0
611     : ['promise(acceptor0,proposer0)', 'promise(acceptor2,proposer1)', '~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor1)', '~start(proposer2)']
612     : --0----0--0------1----1-0--
612     : ['promise(acceptor0,proposer2)', 'promise(acceptor2,proposer1)', '~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor1)', '~start(proposer0)']
613     : 0-------0-0----1-------1-0-
613     : ['promise(acceptor0,proposer0)', 'promise(acceptor2,proposer2)', '~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor1)', '~start(proposer1)']
614     : -0------0-0-----1------10--
614     : ['promise(acceptor0,proposer1)', 'promise(acceptor2,proposer2)', '~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor1)', '~start(proposer0)']
615     : ----0-0----0----1-1-------0
615     : ['promise(acceptor0,proposer1)', 'promise(acceptor1,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor2)', '~start(proposer2)']
616     : -----00----0-----11------0-
616     : ['promise(acceptor0,proposer2)', 'promise(acceptor1,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor2)', '~start(proposer1)']
617     : ---0---0---0---1---1------0
617     : ['promise(acceptor0,proposer0)', 'promise(acceptor1,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor2)', '~start(proposer2)']
618     : -----0-0---0-----1-1----0--
618     : ['promise(acceptor0,proposer2)', 'promise(acceptor1,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor2)', '~start(proposer0)']
619     : ---0----0--0---1----1----0-
619     : ['promise(acceptor0,proposer0)', 'promise(acceptor1,proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor2)', '~start(proposer1)']
620     : ----0---0--0----1---1---0--
620     : ['promise(acceptor0,proposer1)', 'promise(acceptor1,proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor2)', '~start(proposer0)']
621     : -0-0-----0---------1-1----0
621     : ['promise(acceptor1,proposer1)', 'promise(acceptor2,proposer0)', '~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~didNotPromise(acceptor0)', '~start(proposer2)']
622     : --00-----0----------11---0-
622     : ['promise(acceptor1,proposer2)', 'promise(acceptor2,proposer0)', '~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~didNotPromise(acceptor0)', '~start(proposer1)']
623     : 0---0----0--------1---1---0
623     : ['promise(acceptor1,proposer0)', 'promise(acceptor2,proposer1)', '~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~didNotPromise(acceptor0)', '~start(proposer2)']
624     : --0-0----0----------1-1-0--
624     : ['promise(acceptor1,proposer2)', 'promise(acceptor2,proposer1)', '~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~didNotPromise(acceptor0)', '~start(proposer0)']
625     : 0----0---0--------1----1-0-
625     : ['promise(acceptor1,proposer0)', 'promise(acceptor2,proposer2)', '~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~didNotPromise(acceptor0)', '~start(proposer1)']
626     : -0---0---0---------1---10--
626     : ['promise(acceptor1,proposer1)', 'promise(acceptor2,proposer2)', '~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~didNotPromise(acceptor0)', '~start(proposer0)']
num_forall :   0
num_exists :   0
num_literals : 0
quantified form : None
qcost : 0




---------- QPrime ----------


---------- ConstArgBinding ----------

terms: ['~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor1)', 'promise(acceptor0,proposer1)', 'promise(acceptor2,proposer0)', '~start(proposer2)', '~member(acceptor0,quorum__acceptor1_acceptor2)', 'member(acceptor1,quorum__acceptor1_acceptor2)', 'member(acceptor2,quorum__acceptor1_acceptor2)', 'member(acceptor0,quorum__acceptor0_acceptor1)', 'member(acceptor1,quorum__acceptor0_acceptor1)', '~member(acceptor2,quorum__acceptor0_acceptor1)']

sign_func_name2args: {'1$chosenAt': [(Const('quorum__acceptor0_acceptor1', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), Const('proposer1', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))), (Const('quorum__acceptor1_acceptor2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), Const('proposer0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))))], '1$didNotPromise': [(Const('acceptor1', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))),)], '0$promise': [(Const('acceptor0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Const('proposer1', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))), (Const('acceptor2', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Const('proposer0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))))], '1$start': [(Const('proposer2', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))),)], '1$member': [(Const('acceptor0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Const('quorum__acceptor1_acceptor2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')))), (Const('acceptor2', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Const('quorum__acceptor0_acceptor1', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))))], '0$member': [(Const('acceptor1', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Const('quorum__acceptor1_acceptor2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')))), (Const('acceptor2', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Const('quorum__acceptor1_acceptor2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')))), (Const('acceptor0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Const('quorum__acceptor0_acceptor1', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')))), (Const('acceptor1', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Const('quorum__acceptor0_acceptor1', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))))]}

const2sigs: {Const('quorum__acceptor0_acceptor1', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))): [quorum$1$chosenAt$0$0, quorum$1$member$1$1, quorum$0$member$1$2, quorum$0$member$1$3], Const('proposer1', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))): [proposer$1$chosenAt$1$0, proposer$0$promise$1$0], Const('quorum__acceptor1_acceptor2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))): [quorum$1$chosenAt$0$1, quorum$1$member$1$0, quorum$0$member$1$0, quorum$0$member$1$1], Const('proposer0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))): [proposer$1$chosenAt$1$1, proposer$0$promise$1$1], Const('acceptor1', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))): [acceptor$1$didNotPromise$0$0, acceptor$0$member$0$0, acceptor$0$member$0$3], Const('acceptor0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))): [acceptor$0$promise$0$0, acceptor$1$member$0$0, acceptor$0$member$0$2], Const('acceptor2', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))): [acceptor$0$promise$0$1, acceptor$1$member$0$1, acceptor$0$member$0$1], Const('proposer2', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))): [proposer$1$start$0$0]}

sig2const: {'quorum$1$chosenAt$0$0': Const('quorum__acceptor0_acceptor1', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), 'proposer$1$chosenAt$1$0': Const('proposer1', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))), 'quorum$1$chosenAt$0$1': Const('quorum__acceptor1_acceptor2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), 'proposer$1$chosenAt$1$1': Const('proposer0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))), 'acceptor$1$didNotPromise$0$0': Const('acceptor1', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), 'acceptor$0$promise$0$0': Const('acceptor0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), 'proposer$0$promise$1$0': Const('proposer1', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))), 'acceptor$0$promise$0$1': Const('acceptor2', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), 'proposer$0$promise$1$1': Const('proposer0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))), 'proposer$1$start$0$0': Const('proposer2', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))), 'acceptor$1$member$0$0': Const('acceptor0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), 'quorum$1$member$1$0': Const('quorum__acceptor1_acceptor2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), 'acceptor$1$member$0$1': Const('acceptor2', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), 'quorum$1$member$1$1': Const('quorum__acceptor0_acceptor1', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), 'acceptor$0$member$0$0': Const('acceptor1', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), 'quorum$0$member$1$0': Const('quorum__acceptor1_acceptor2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), 'acceptor$0$member$0$1': Const('acceptor2', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), 'quorum$0$member$1$1': Const('quorum__acceptor1_acceptor2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), 'acceptor$0$member$0$2': Const('acceptor0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), 'quorum$0$member$1$2': Const('quorum__acceptor0_acceptor1', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), 'acceptor$0$member$0$3': Const('acceptor1', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), 'quorum$0$member$1$3': Const('quorum__acceptor0_acceptor1', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')))}


---------- ArgPartition ----------

sort2class_sigs: {EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')): [quorum$0$member$1$0; quorum$0$member$1$1; quorum$1$chosenAt$0$1; quorum$1$member$1$0, quorum$0$member$1$2; quorum$0$member$1$3; quorum$1$chosenAt$0$0; quorum$1$member$1$1], EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')): [proposer$0$promise$1$0; proposer$1$chosenAt$1$0, proposer$0$promise$1$1; proposer$1$chosenAt$1$1, proposer$1$start$0$0], EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')): [acceptor$0$member$0$0; acceptor$0$member$0$3; acceptor$1$didNotPromise$0$0, acceptor$0$member$0$1; acceptor$0$promise$0$1; acceptor$1$member$0$1, acceptor$0$member$0$2; acceptor$0$promise$0$0; acceptor$1$member$0$0]}

sort2part_sig: {EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')): quorum$0$member$1$0; quorum$0$member$1$1; quorum$1$chosenAt$0$1; quorum$1$member$1$0 | quorum$0$member$1$2; quorum$0$member$1$3; quorum$1$chosenAt$0$0; quorum$1$member$1$1, EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')): proposer$0$promise$1$0; proposer$1$chosenAt$1$0 | proposer$0$promise$1$1; proposer$1$chosenAt$1$1 | proposer$1$start$0$0, EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')): acceptor$0$member$0$0; acceptor$0$member$0$3; acceptor$1$didNotPromise$0$0 | acceptor$0$member$0$1; acceptor$0$promise$0$1; acceptor$1$member$0$1 | acceptor$0$member$0$2; acceptor$0$promise$0$0; acceptor$1$member$0$0}

part_sig: ('acceptor$0$member$0$0; acceptor$0$member$0$3; acceptor$1$didNotPromise$0$0 | acceptor$0$member$0$1; acceptor$0$promise$0$1; acceptor$1$member$0$1 | acceptor$0$member$0$2; acceptor$0$promise$0$0; acceptor$1$member$0$0', 'proposer$0$promise$1$0; proposer$1$chosenAt$1$0 | proposer$0$promise$1$1; proposer$1$chosenAt$1$1 | proposer$1$start$0$0', 'quorum$0$member$1$0; quorum$0$member$1$1; quorum$1$chosenAt$0$1; quorum$1$member$1$0 | quorum$0$member$1$2; quorum$0$member$1$3; quorum$1$chosenAt$0$0; quorum$1$member$1$1')


---------- SigGenerator ----------

terms:  ['~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor1)', 'promise(acceptor0,proposer1)', 'promise(acceptor2,proposer0)', '~start(proposer2)', '~member(acceptor0,quorum__acceptor1_acceptor2)', 'member(acceptor1,quorum__acceptor1_acceptor2)', 'member(acceptor2,quorum__acceptor1_acceptor2)', 'member(acceptor0,quorum__acceptor0_acceptor1)', 'member(acceptor1,quorum__acceptor0_acceptor1)', '~member(acceptor2,quorum__acceptor0_acceptor1)']

func_name2symbol:  {'chosenAt': Const('chosenAt', FunctionSort(EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')), EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')), BooleanSort())), 'didNotPromise': Const('didNotPromise', FunctionSort(EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')), BooleanSort())), 'promise': Const('promise', FunctionSort(EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')), EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')), BooleanSort())), 'start': Const('start', FunctionSort(EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')), BooleanSort())), 'member': Const('member', FunctionSort(EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')), EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')), BooleanSort()))}

func_name2args_sort:  {'chosenAt': (EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')), EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))), 'didNotPromise': (EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')),), 'promise': (EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')), EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))), 'start': (EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')),), 'member': (EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')), EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')))}

sign_func_name2count:  {'1$chosenAt': 2, '1$didNotPromise': 1, '0$promise': 2, '1$start': 1, '1$member': 2, '0$member': 4}


---------- ProductArgPartition ----------

sort2class_sigs: {EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')): [quorum$0$member$1$0; quorum$0$member$1$1; quorum$1$chosenAt$0$1; quorum$1$member$1$0, quorum$0$member$1$2; quorum$0$member$1$3; quorum$1$chosenAt$0$0; quorum$1$member$1$1], EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')): [proposer$0$promise$1$0; proposer$1$chosenAt$1$0, proposer$0$promise$1$1; proposer$1$chosenAt$1$1, proposer$1$start$0$0], EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')): [acceptor$0$member$0$0; acceptor$0$member$0$3; acceptor$1$didNotPromise$0$0, acceptor$0$member$0$1; acceptor$0$promise$0$1; acceptor$1$member$0$1, acceptor$0$member$0$2; acceptor$0$promise$0$0; acceptor$1$member$0$0]}

sort2part_sig: {EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')): quorum$0$member$1$0; quorum$0$member$1$1; quorum$1$chosenAt$0$1; quorum$1$member$1$0 | quorum$0$member$1$2; quorum$0$member$1$3; quorum$1$chosenAt$0$0; quorum$1$member$1$1, EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')): proposer$0$promise$1$0; proposer$1$chosenAt$1$0 | proposer$0$promise$1$1; proposer$1$chosenAt$1$1 | proposer$1$start$0$0, EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')): acceptor$0$member$0$0; acceptor$0$member$0$3; acceptor$1$didNotPromise$0$0 | acceptor$0$member$0$1; acceptor$0$promise$0$1; acceptor$1$member$0$1 | acceptor$0$member$0$2; acceptor$0$promise$0$0; acceptor$1$member$0$0}

	sort: quorum

	identical_classes: {'quorum$0$member$1; quorum$0$member$1; quorum$1$chosenAt$0; quorum$1$member$1': [quorum$0$member$1$0; quorum$0$member$1$1; quorum$1$chosenAt$0$1; quorum$1$member$1$0, quorum$0$member$1$2; quorum$0$member$1$3; quorum$1$chosenAt$0$0; quorum$1$member$1$1]}

	identical_single_classes: {}

	identical_multi_classes: {'quorum$0$member$1; quorum$0$member$1; quorum$1$chosenAt$0; quorum$1$member$1': [quorum$0$member$1$0, quorum$0$member$1$1, quorum$1$chosenAt$0$1, quorum$1$member$1$0, quorum$0$member$1$2, quorum$0$member$1$3, quorum$1$chosenAt$0$0, quorum$1$member$1$1]}

	sort: proposer

	identical_classes: {'proposer$0$promise$1; proposer$1$chosenAt$1': [proposer$0$promise$1$0; proposer$1$chosenAt$1$0, proposer$0$promise$1$1; proposer$1$chosenAt$1$1], 'proposer$1$start$0': [proposer$1$start$0$0]}

	identical_single_classes: {'proposer$1$start$0': proposer$1$start$0$0}

	identical_multi_classes: {'proposer$0$promise$1; proposer$1$chosenAt$1': [proposer$0$promise$1$0, proposer$1$chosenAt$1$0, proposer$0$promise$1$1, proposer$1$chosenAt$1$1]}

	sort: acceptor

	identical_classes: {'acceptor$0$member$0; acceptor$0$member$0; acceptor$1$didNotPromise$0': [acceptor$0$member$0$0; acceptor$0$member$0$3; acceptor$1$didNotPromise$0$0], 'acceptor$0$member$0; acceptor$0$promise$0; acceptor$1$member$0': [acceptor$0$member$0$1; acceptor$0$promise$0$1; acceptor$1$member$0$1, acceptor$0$member$0$2; acceptor$0$promise$0$0; acceptor$1$member$0$0]}

	identical_single_classes: {'acceptor$0$member$0; acceptor$0$member$0; acceptor$1$didNotPromise$0': acceptor$0$member$0$0; acceptor$0$member$0$3; acceptor$1$didNotPromise$0$0}

	identical_multi_classes: {'acceptor$0$member$0; acceptor$0$promise$0; acceptor$1$member$0': [acceptor$0$member$0$1, acceptor$0$promise$0$1, acceptor$1$member$0$1, acceptor$0$member$0$2, acceptor$0$promise$0$0, acceptor$1$member$0$0]}


---------- QInference: _set_sort_to_quantifier_mode ----------

quantifier mode: quorum: QuantifierMode.forall

quantifier mode: proposer: QuantifierMode.forall

quantifier mode: acceptor: QuantifierMode.forall


---------- QInference: _set_constraint_mode ----------

constraint mode: ConstraintMode.no_merge


---------- QFormula: _set_qvars ----------

forall_qvars: {Var('QUORUM0', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), Var('ACCEPTOR0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Var('PROPOSER0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))), Var('PROPOSER1', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))), Var('ACCEPTOR2', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Var('QUORUM1', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), Var('ACCEPTOR1', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Var('PROPOSER2', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))}

exists_qvars: set()


---------- QFormula: _set_signed_func_name_to_args ----------

signed_func_name2args: {'1$chosenAt': [[Var('QUORUM1', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), Var('PROPOSER0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))], [Var('QUORUM0', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), Var('PROPOSER1', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))]], '1$didNotPromise': [[Var('ACCEPTOR0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')))]], '0$promise': [[Var('ACCEPTOR2', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Var('PROPOSER0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))], [Var('ACCEPTOR1', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Var('PROPOSER1', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))]], '1$start': [[Var('PROPOSER2', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))]], '1$member': [[Var('ACCEPTOR2', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Var('QUORUM0', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')))], [Var('ACCEPTOR1', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Var('QUORUM1', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')))]], '0$member': [[Var('ACCEPTOR0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Var('QUORUM0', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')))], [Var('ACCEPTOR1', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Var('QUORUM0', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')))], [Var('ACCEPTOR2', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Var('QUORUM1', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')))], [Var('ACCEPTOR0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Var('QUORUM1', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')))]]}


---------- QFormula: _set_qterms ----------

qterms: ['~member(ACCEPTOR1,QUORUM1)', 'member(ACCEPTOR2,QUORUM1)', '~member(ACCEPTOR2,QUORUM0)', 'promise(ACCEPTOR1,PROPOSER1)', 'member(ACCEPTOR0,QUORUM1)', '~start(PROPOSER2)', '~didNotPromise(ACCEPTOR0)', 'member(ACCEPTOR0,QUORUM0)', '~chosenAt(QUORUM0,PROPOSER1)', 'promise(ACCEPTOR2,PROPOSER0)', '~chosenAt(QUORUM1,PROPOSER0)', 'member(ACCEPTOR1,QUORUM0)']


---------- QFormula: get_qclause ----------

qclause: forall ACCEPTOR0,PROPOSER2,ACCEPTOR2,PROPOSER1,PROPOSER0,ACCEPTOR1,QUORUM0,QUORUM1. member(ACCEPTOR1,QUORUM1) | ~member(ACCEPTOR2,QUORUM1) | member(ACCEPTOR2,QUORUM0) | ~promise(ACCEPTOR1,PROPOSER1) | ~member(ACCEPTOR0,QUORUM1) | start(PROPOSER2) | didNotPromise(ACCEPTOR0) | ~member(ACCEPTOR0,QUORUM0) | chosenAt(QUORUM0,PROPOSER1) | ~promise(ACCEPTOR2,PROPOSER0) | chosenAt(QUORUM1,PROPOSER0) | ~member(ACCEPTOR1,QUORUM0) | (PROPOSER0 = PROPOSER2 | ACCEPTOR0 = ACCEPTOR2 | QUORUM0 = QUORUM1 | ACCEPTOR1 = ACCEPTOR2 | PROPOSER1 = PROPOSER2 | ACCEPTOR0 = ACCEPTOR1 | PROPOSER0 = PROPOSER1)


=== Prime Orbit 41 =====================
size : 9
num_suborbits: 1
645 (*) : --0-----0-0---1---00-------
645     : ['leader(proposer2)', '~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor1)', '~promise(acceptor1,proposer0)', '~promise(acceptor1,proposer1)']
646     : -0-----0--0--1----0-0------
646     : ['leader(proposer1)', '~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor1)', '~promise(acceptor1,proposer0)', '~promise(acceptor1,proposer2)']
647     : 0-----0---0-1------00------
647     : ['leader(proposer0)', '~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor1)', '~promise(acceptor1,proposer1)', '~promise(acceptor1,proposer2)']
648     : -----0--0--0--1------00----
648     : ['leader(proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor2)', '~promise(acceptor2,proposer0)', '~promise(acceptor2,proposer1)']
649     : ----0--0---0-1-------0-0---
649     : ['leader(proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor2)', '~promise(acceptor2,proposer0)', '~promise(acceptor2,proposer2)']
650     : ---0--0----01---------00---
650     : ['leader(proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor2)', '~promise(acceptor2,proposer1)', '~promise(acceptor2,proposer2)']
651     : --0--0---0----100----------
651     : ['leader(proposer2)', '~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~didNotPromise(acceptor0)', '~promise(acceptor0,proposer0)', '~promise(acceptor0,proposer1)']
652     : -0--0----0---1-0-0---------
652     : ['leader(proposer1)', '~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~didNotPromise(acceptor0)', '~promise(acceptor0,proposer0)', '~promise(acceptor0,proposer2)']
653     : 0--0-----0--1---00---------
653     : ['leader(proposer0)', '~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~didNotPromise(acceptor0)', '~promise(acceptor0,proposer1)', '~promise(acceptor0,proposer2)']
num_forall :   0
num_exists :   0
num_literals : 0
quantified form : None
qcost : 0




---------- QPrime ----------


---------- ConstArgBinding ----------

terms: ['~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor1)', 'leader(proposer2)', '~promise(acceptor1,proposer0)', '~promise(acceptor1,proposer1)', 'member(acceptor1,quorum__acceptor1_acceptor2)', 'member(acceptor1,quorum__acceptor0_acceptor1)']

sign_func_name2args: {'1$chosenAt': [(Const('quorum__acceptor0_acceptor1', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), Const('proposer2', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))), (Const('quorum__acceptor1_acceptor2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), Const('proposer2', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))))], '1$didNotPromise': [(Const('acceptor1', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))),)], '0$leader': [(Const('proposer2', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))),)], '1$promise': [(Const('acceptor1', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Const('proposer0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))), (Const('acceptor1', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Const('proposer1', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))))], '0$member': [(Const('acceptor1', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Const('quorum__acceptor1_acceptor2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')))), (Const('acceptor1', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Const('quorum__acceptor0_acceptor1', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))))]}

const2sigs: {Const('quorum__acceptor0_acceptor1', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))): [quorum$1$chosenAt$0$0, quorum$0$member$1$1], Const('proposer2', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))): [proposer$1$chosenAt$1$0, proposer$1$chosenAt$1$1, proposer$0$leader$0$0], Const('quorum__acceptor1_acceptor2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))): [quorum$1$chosenAt$0$1, quorum$0$member$1$0], Const('acceptor1', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))): [acceptor$1$didNotPromise$0$0, acceptor$1$promise$0$0, acceptor$1$promise$0$1, acceptor$0$member$0$0, acceptor$0$member$0$1], Const('proposer0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))): [proposer$1$promise$1$0], Const('proposer1', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))): [proposer$1$promise$1$1]}

sig2const: {'quorum$1$chosenAt$0$0': Const('quorum__acceptor0_acceptor1', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), 'proposer$1$chosenAt$1$0': Const('proposer2', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))), 'quorum$1$chosenAt$0$1': Const('quorum__acceptor1_acceptor2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), 'proposer$1$chosenAt$1$1': Const('proposer2', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))), 'acceptor$1$didNotPromise$0$0': Const('acceptor1', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), 'proposer$0$leader$0$0': Const('proposer2', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))), 'acceptor$1$promise$0$0': Const('acceptor1', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), 'proposer$1$promise$1$0': Const('proposer0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))), 'acceptor$1$promise$0$1': Const('acceptor1', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), 'proposer$1$promise$1$1': Const('proposer1', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))), 'acceptor$0$member$0$0': Const('acceptor1', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), 'quorum$0$member$1$0': Const('quorum__acceptor1_acceptor2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), 'acceptor$0$member$0$1': Const('acceptor1', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), 'quorum$0$member$1$1': Const('quorum__acceptor0_acceptor1', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')))}


---------- ArgPartition ----------

sort2class_sigs: {EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')): [quorum$0$member$1$0; quorum$1$chosenAt$0$1, quorum$0$member$1$1; quorum$1$chosenAt$0$0], EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')): [proposer$0$leader$0$0; proposer$1$chosenAt$1$0; proposer$1$chosenAt$1$1, proposer$1$promise$1$0, proposer$1$promise$1$1], EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')): [acceptor$0$member$0$0; acceptor$0$member$0$1; acceptor$1$didNotPromise$0$0; acceptor$1$promise$0$0; acceptor$1$promise$0$1]}

sort2part_sig: {EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')): quorum$0$member$1$0; quorum$1$chosenAt$0$1 | quorum$0$member$1$1; quorum$1$chosenAt$0$0, EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')): proposer$0$leader$0$0; proposer$1$chosenAt$1$0; proposer$1$chosenAt$1$1 | proposer$1$promise$1$0 | proposer$1$promise$1$1, EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')): acceptor$0$member$0$0; acceptor$0$member$0$1; acceptor$1$didNotPromise$0$0; acceptor$1$promise$0$0; acceptor$1$promise$0$1}

part_sig: ('acceptor$0$member$0$0; acceptor$0$member$0$1; acceptor$1$didNotPromise$0$0; acceptor$1$promise$0$0; acceptor$1$promise$0$1', 'proposer$0$leader$0$0; proposer$1$chosenAt$1$0; proposer$1$chosenAt$1$1 | proposer$1$promise$1$0 | proposer$1$promise$1$1', 'quorum$0$member$1$0; quorum$1$chosenAt$0$1 | quorum$0$member$1$1; quorum$1$chosenAt$0$0')


---------- SigGenerator ----------

terms:  ['~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor1)', 'leader(proposer2)', '~promise(acceptor1,proposer0)', '~promise(acceptor1,proposer1)', 'member(acceptor1,quorum__acceptor1_acceptor2)', 'member(acceptor1,quorum__acceptor0_acceptor1)']

func_name2symbol:  {'chosenAt': Const('chosenAt', FunctionSort(EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')), EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')), BooleanSort())), 'didNotPromise': Const('didNotPromise', FunctionSort(EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')), BooleanSort())), 'leader': Const('leader', FunctionSort(EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')), BooleanSort())), 'promise': Const('promise', FunctionSort(EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')), EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')), BooleanSort())), 'member': Const('member', FunctionSort(EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')), EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')), BooleanSort()))}

func_name2args_sort:  {'chosenAt': (EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')), EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))), 'didNotPromise': (EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')),), 'leader': (EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')),), 'promise': (EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')), EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))), 'member': (EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')), EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')))}

sign_func_name2count:  {'1$chosenAt': 2, '1$didNotPromise': 1, '0$leader': 1, '1$promise': 2, '0$member': 2}


---------- ProductArgPartition ----------

sort2class_sigs: {EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')): [quorum$0$member$1$0; quorum$1$chosenAt$0$1, quorum$0$member$1$1; quorum$1$chosenAt$0$0], EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')): [proposer$0$leader$0$0; proposer$1$chosenAt$1$0; proposer$1$chosenAt$1$1, proposer$1$promise$1$0, proposer$1$promise$1$1], EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')): [acceptor$0$member$0$0; acceptor$0$member$0$1; acceptor$1$didNotPromise$0$0; acceptor$1$promise$0$0; acceptor$1$promise$0$1]}

sort2part_sig: {EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')): quorum$0$member$1$0; quorum$1$chosenAt$0$1 | quorum$0$member$1$1; quorum$1$chosenAt$0$0, EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')): proposer$0$leader$0$0; proposer$1$chosenAt$1$0; proposer$1$chosenAt$1$1 | proposer$1$promise$1$0 | proposer$1$promise$1$1, EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')): acceptor$0$member$0$0; acceptor$0$member$0$1; acceptor$1$didNotPromise$0$0; acceptor$1$promise$0$0; acceptor$1$promise$0$1}

	sort: quorum

	identical_classes: {'quorum$0$member$1; quorum$1$chosenAt$0': [quorum$0$member$1$0; quorum$1$chosenAt$0$1, quorum$0$member$1$1; quorum$1$chosenAt$0$0]}

	identical_single_classes: {}

	identical_multi_classes: {'quorum$0$member$1; quorum$1$chosenAt$0': [quorum$0$member$1$0, quorum$1$chosenAt$0$1, quorum$0$member$1$1, quorum$1$chosenAt$0$0]}

	sort: proposer

	identical_classes: {'proposer$0$leader$0; proposer$1$chosenAt$1; proposer$1$chosenAt$1': [proposer$0$leader$0$0; proposer$1$chosenAt$1$0; proposer$1$chosenAt$1$1], 'proposer$1$promise$1': [proposer$1$promise$1$0, proposer$1$promise$1$1]}

	identical_single_classes: {'proposer$0$leader$0; proposer$1$chosenAt$1; proposer$1$chosenAt$1': proposer$0$leader$0$0; proposer$1$chosenAt$1$0; proposer$1$chosenAt$1$1}

	identical_multi_classes: {'proposer$1$promise$1': [proposer$1$promise$1$0, proposer$1$promise$1$1]}

	sort: acceptor

	identical_classes: {'acceptor$0$member$0; acceptor$0$member$0; acceptor$1$didNotPromise$0; acceptor$1$promise$0; acceptor$1$promise$0': [acceptor$0$member$0$0; acceptor$0$member$0$1; acceptor$1$didNotPromise$0$0; acceptor$1$promise$0$0; acceptor$1$promise$0$1]}

	identical_single_classes: {'acceptor$0$member$0; acceptor$0$member$0; acceptor$1$didNotPromise$0; acceptor$1$promise$0; acceptor$1$promise$0': acceptor$0$member$0$0; acceptor$0$member$0$1; acceptor$1$didNotPromise$0$0; acceptor$1$promise$0$0; acceptor$1$promise$0$1}

	identical_multi_classes: {}


---------- QInference: _set_sort_to_quantifier_mode ----------

quantifier mode: quorum: QuantifierMode.forall

quantifier mode: proposer: QuantifierMode.forall_exists

quantifier mode: acceptor: QuantifierMode.forall


---------- QInference: _set_constraint_mode ----------

constraint mode: ConstraintMode.no_merge


---------- QFormula: _set_qvars ----------

forall_qvars: {Var('PROPOSER1', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))), Var('QUORUM0', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), Var('ACCEPTOR0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Var('QUORUM1', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')))}

exists_qvars: {Var('PROPOSER0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))}


---------- QFormula: _set_signed_func_name_to_args ----------

signed_func_name2args: {'1$chosenAt': [[Var('QUORUM1', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), Var('PROPOSER1', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))], [Var('QUORUM0', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), Var('PROPOSER1', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))]], '1$didNotPromise': [[Var('ACCEPTOR0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')))]], '0$leader': [[Var('PROPOSER1', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))]], '1$promise': [[Var('ACCEPTOR0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Var('PROPOSER0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))], [Var('ACCEPTOR0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Var('PROPOSER0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))]], '0$member': [[Var('ACCEPTOR0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Var('QUORUM0', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')))], [Var('ACCEPTOR0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Var('QUORUM1', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')))]]}


---------- QFormula: _set_qterms ----------

qterms: ['~promise(ACCEPTOR0,PROPOSER0)', 'member(ACCEPTOR0,QUORUM1)', '~chosenAt(QUORUM1,PROPOSER1)', '~didNotPromise(ACCEPTOR0)', 'member(ACCEPTOR0,QUORUM0)', '~chosenAt(QUORUM0,PROPOSER1)', 'leader(PROPOSER1)']


---------- QFormula: get_qclause ----------

qclause: forall QUORUM0,QUORUM1,PROPOSER1,ACCEPTOR0. ~member(ACCEPTOR0,QUORUM1) | chosenAt(QUORUM1,PROPOSER1) | didNotPromise(ACCEPTOR0) | ~member(ACCEPTOR0,QUORUM0) | chosenAt(QUORUM0,PROPOSER1) | ~leader(PROPOSER1) | (exists PROPOSER0. (promise(ACCEPTOR0,PROPOSER0) & PROPOSER0 ~= PROPOSER1)) | QUORUM0 = QUORUM1


=== Prime Orbit 43 =====================
size : 36
num_suborbits: 1
663 (*) : -----00--0-0---0--1------0-
663     : ['promise(acceptor1,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor2)', '~promise(acceptor0,proposer0)', '~start(proposer1)']
664     : ----0-0--0-0---0--1-------0
664     : ['promise(acceptor1,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor2)', '~promise(acceptor0,proposer0)', '~start(proposer2)']
665     : -----0-0-0-0----0--1----0--
665     : ['promise(acceptor1,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor2)', '~promise(acceptor0,proposer1)', '~start(proposer0)']
666     : ---0---0-0-0----0--1------0
666     : ['promise(acceptor1,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor2)', '~promise(acceptor0,proposer1)', '~start(proposer2)']
667     : ----0---00-0-----0--1---0--
667     : ['promise(acceptor1,proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor2)', '~promise(acceptor0,proposer2)', '~start(proposer0)']
668     : ---0----00-0-----0--1----0-
668     : ['promise(acceptor1,proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor2)', '~promise(acceptor0,proposer2)', '~start(proposer1)']
669     : --0---0--00----0-----1---0-
669     : ['promise(acceptor2,proposer0)', '~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~promise(acceptor0,proposer0)', '~start(proposer1)']
670     : -0----0--00----0-----1----0
670     : ['promise(acceptor2,proposer0)', '~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~promise(acceptor0,proposer0)', '~start(proposer2)']
671     : --0----0-00-----0-----1-0--
671     : ['promise(acceptor2,proposer1)', '~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~promise(acceptor0,proposer1)', '~start(proposer0)']
672     : 0------0-00-----0-----1---0
672     : ['promise(acceptor2,proposer1)', '~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~promise(acceptor0,proposer1)', '~start(proposer2)']
673     : -0------000------0-----10--
673     : ['promise(acceptor2,proposer2)', '~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~promise(acceptor0,proposer2)', '~start(proposer0)']
674     : 0-------000------0-----1-0-
674     : ['promise(acceptor2,proposer2)', '~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~promise(acceptor0,proposer2)', '~start(proposer1)']
675     : ---0----0-00---1--0------0-
675     : ['promise(acceptor0,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor1,proposer0)', '~start(proposer1)']
676     : ---0---0--00---1--0-------0
676     : ['promise(acceptor0,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor1,proposer0)', '~start(proposer2)']
677     : ----0---0-00----1--0----0--
677     : ['promise(acceptor0,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor1,proposer1)', '~start(proposer0)']
678     : ----0-0---00----1--0------0
678     : ['promise(acceptor0,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor1,proposer1)', '~start(proposer2)']
679     : -----0-0--00-----1--0---0--
679     : ['promise(acceptor0,proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor1,proposer2)', '~start(proposer0)']
680     : -----00---00-----1--0----0-
680     : ['promise(acceptor0,proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor1,proposer2)', '~start(proposer1)']
681     : --00-----00-------0--1---0-
681     : ['promise(acceptor2,proposer0)', '~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~promise(acceptor1,proposer0)', '~start(proposer1)']
682     : -0-0-----00-------0--1----0
682     : ['promise(acceptor2,proposer0)', '~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~promise(acceptor1,proposer0)', '~start(proposer2)']
683     : --0-0----00--------0--1-0--
683     : ['promise(acceptor2,proposer1)', '~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~promise(acceptor1,proposer1)', '~start(proposer0)']
684     : 0---0----00--------0--1---0
684     : ['promise(acceptor2,proposer1)', '~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~promise(acceptor1,proposer1)', '~start(proposer2)']
685     : -0---0---00---------0--10--
685     : ['promise(acceptor2,proposer2)', '~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~promise(acceptor1,proposer2)', '~start(proposer0)']
686     : 0----0---00---------0--1-0-
686     : ['promise(acceptor2,proposer2)', '~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~promise(acceptor1,proposer2)', '~start(proposer1)']
687     : 0-------0-00---1-----0---0-
687     : ['promise(acceptor0,proposer0)', '~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor2,proposer0)', '~start(proposer1)']
688     : 0------0--00---1-----0----0
688     : ['promise(acceptor0,proposer0)', '~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor2,proposer0)', '~start(proposer2)']
689     : -0------0-00----1-----0-0--
689     : ['promise(acceptor0,proposer1)', '~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor2,proposer1)', '~start(proposer0)']
690     : -0----0---00----1-----0---0
690     : ['promise(acceptor0,proposer1)', '~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor2,proposer1)', '~start(proposer2)']
691     : --0----0--00-----1-----00--
691     : ['promise(acceptor0,proposer2)', '~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor2,proposer2)', '~start(proposer0)']
692     : --0---0---00-----1-----0-0-
692     : ['promise(acceptor0,proposer2)', '~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor2,proposer2)', '~start(proposer1)']
693     : 0----0---0-0------1--0---0-
693     : ['promise(acceptor1,proposer0)', '~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor2)', '~promise(acceptor2,proposer0)', '~start(proposer1)']
694     : 0---0----0-0------1--0----0
694     : ['promise(acceptor1,proposer0)', '~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor2)', '~promise(acceptor2,proposer0)', '~start(proposer2)']
695     : -0---0---0-0-------1--0-0--
695     : ['promise(acceptor1,proposer1)', '~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor2)', '~promise(acceptor2,proposer1)', '~start(proposer0)']
696     : -0-0-----0-0-------1--0---0
696     : ['promise(acceptor1,proposer1)', '~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor2)', '~promise(acceptor2,proposer1)', '~start(proposer2)']
697     : --0-0----0-0--------1--00--
697     : ['promise(acceptor1,proposer2)', '~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor2)', '~promise(acceptor2,proposer2)', '~start(proposer0)']
698     : --00-----0-0--------1--0-0-
698     : ['promise(acceptor1,proposer2)', '~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor2)', '~promise(acceptor2,proposer2)', '~start(proposer1)']
num_forall :   0
num_exists :   0
num_literals : 0
quantified form : None
qcost : 0




---------- QPrime ----------


---------- ConstArgBinding ----------

terms: ['~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor2)', '~promise(acceptor0,proposer0)', 'promise(acceptor1,proposer0)', '~start(proposer1)', '~member(acceptor0,quorum__acceptor1_acceptor2)', 'member(acceptor1,quorum__acceptor1_acceptor2)', 'member(acceptor2,quorum__acceptor1_acceptor2)', 'member(acceptor0,quorum__acceptor0_acceptor2)', '~member(acceptor1,quorum__acceptor0_acceptor2)', 'member(acceptor2,quorum__acceptor0_acceptor2)']

sign_func_name2args: {'1$chosenAt': [(Const('quorum__acceptor0_acceptor2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), Const('proposer2', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))), (Const('quorum__acceptor1_acceptor2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), Const('proposer0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))))], '1$didNotPromise': [(Const('acceptor0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))),), (Const('acceptor2', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))),)], '1$promise': [(Const('acceptor0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Const('proposer0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))))], '0$promise': [(Const('acceptor1', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Const('proposer0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))))], '1$start': [(Const('proposer1', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))),)], '1$member': [(Const('acceptor0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Const('quorum__acceptor1_acceptor2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')))), (Const('acceptor1', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Const('quorum__acceptor0_acceptor2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))))], '0$member': [(Const('acceptor1', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Const('quorum__acceptor1_acceptor2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')))), (Const('acceptor2', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Const('quorum__acceptor1_acceptor2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')))), (Const('acceptor0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Const('quorum__acceptor0_acceptor2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')))), (Const('acceptor2', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Const('quorum__acceptor0_acceptor2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))))]}

const2sigs: {Const('quorum__acceptor0_acceptor2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))): [quorum$1$chosenAt$0$0, quorum$1$member$1$1, quorum$0$member$1$2, quorum$0$member$1$3], Const('proposer2', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))): [proposer$1$chosenAt$1$0], Const('quorum__acceptor1_acceptor2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))): [quorum$1$chosenAt$0$1, quorum$1$member$1$0, quorum$0$member$1$0, quorum$0$member$1$1], Const('proposer0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))): [proposer$1$chosenAt$1$1, proposer$1$promise$1$0, proposer$0$promise$1$0], Const('acceptor0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))): [acceptor$1$didNotPromise$0$0, acceptor$1$promise$0$0, acceptor$1$member$0$0, acceptor$0$member$0$2], Const('acceptor2', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))): [acceptor$1$didNotPromise$0$1, acceptor$0$member$0$1, acceptor$0$member$0$3], Const('acceptor1', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))): [acceptor$0$promise$0$0, acceptor$1$member$0$1, acceptor$0$member$0$0], Const('proposer1', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))): [proposer$1$start$0$0]}

sig2const: {'quorum$1$chosenAt$0$0': Const('quorum__acceptor0_acceptor2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), 'proposer$1$chosenAt$1$0': Const('proposer2', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))), 'quorum$1$chosenAt$0$1': Const('quorum__acceptor1_acceptor2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), 'proposer$1$chosenAt$1$1': Const('proposer0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))), 'acceptor$1$didNotPromise$0$0': Const('acceptor0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), 'acceptor$1$didNotPromise$0$1': Const('acceptor2', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), 'acceptor$1$promise$0$0': Const('acceptor0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), 'proposer$1$promise$1$0': Const('proposer0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))), 'acceptor$0$promise$0$0': Const('acceptor1', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), 'proposer$0$promise$1$0': Const('proposer0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))), 'proposer$1$start$0$0': Const('proposer1', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))), 'acceptor$1$member$0$0': Const('acceptor0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), 'quorum$1$member$1$0': Const('quorum__acceptor1_acceptor2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), 'acceptor$1$member$0$1': Const('acceptor1', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), 'quorum$1$member$1$1': Const('quorum__acceptor0_acceptor2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), 'acceptor$0$member$0$0': Const('acceptor1', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), 'quorum$0$member$1$0': Const('quorum__acceptor1_acceptor2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), 'acceptor$0$member$0$1': Const('acceptor2', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), 'quorum$0$member$1$1': Const('quorum__acceptor1_acceptor2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), 'acceptor$0$member$0$2': Const('acceptor0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), 'quorum$0$member$1$2': Const('quorum__acceptor0_acceptor2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), 'acceptor$0$member$0$3': Const('acceptor2', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), 'quorum$0$member$1$3': Const('quorum__acceptor0_acceptor2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')))}


---------- ArgPartition ----------

sort2class_sigs: {EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')): [quorum$0$member$1$0; quorum$0$member$1$1; quorum$1$chosenAt$0$1; quorum$1$member$1$0, quorum$0$member$1$2; quorum$0$member$1$3; quorum$1$chosenAt$0$0; quorum$1$member$1$1], EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')): [proposer$0$promise$1$0; proposer$1$chosenAt$1$1; proposer$1$promise$1$0, proposer$1$chosenAt$1$0, proposer$1$start$0$0], EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')): [acceptor$0$member$0$0; acceptor$0$promise$0$0; acceptor$1$member$0$1, acceptor$0$member$0$1; acceptor$0$member$0$3; acceptor$1$didNotPromise$0$1, acceptor$0$member$0$2; acceptor$1$didNotPromise$0$0; acceptor$1$member$0$0; acceptor$1$promise$0$0]}

sort2part_sig: {EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')): quorum$0$member$1$0; quorum$0$member$1$1; quorum$1$chosenAt$0$1; quorum$1$member$1$0 | quorum$0$member$1$2; quorum$0$member$1$3; quorum$1$chosenAt$0$0; quorum$1$member$1$1, EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')): proposer$0$promise$1$0; proposer$1$chosenAt$1$1; proposer$1$promise$1$0 | proposer$1$chosenAt$1$0 | proposer$1$start$0$0, EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')): acceptor$0$member$0$0; acceptor$0$promise$0$0; acceptor$1$member$0$1 | acceptor$0$member$0$1; acceptor$0$member$0$3; acceptor$1$didNotPromise$0$1 | acceptor$0$member$0$2; acceptor$1$didNotPromise$0$0; acceptor$1$member$0$0; acceptor$1$promise$0$0}

part_sig: ('acceptor$0$member$0$0; acceptor$0$promise$0$0; acceptor$1$member$0$1 | acceptor$0$member$0$1; acceptor$0$member$0$3; acceptor$1$didNotPromise$0$1 | acceptor$0$member$0$2; acceptor$1$didNotPromise$0$0; acceptor$1$member$0$0; acceptor$1$promise$0$0', 'proposer$0$promise$1$0; proposer$1$chosenAt$1$1; proposer$1$promise$1$0 | proposer$1$chosenAt$1$0 | proposer$1$start$0$0', 'quorum$0$member$1$0; quorum$0$member$1$1; quorum$1$chosenAt$0$1; quorum$1$member$1$0 | quorum$0$member$1$2; quorum$0$member$1$3; quorum$1$chosenAt$0$0; quorum$1$member$1$1')


---------- SigGenerator ----------

terms:  ['~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor2)', '~promise(acceptor0,proposer0)', 'promise(acceptor1,proposer0)', '~start(proposer1)', '~member(acceptor0,quorum__acceptor1_acceptor2)', 'member(acceptor1,quorum__acceptor1_acceptor2)', 'member(acceptor2,quorum__acceptor1_acceptor2)', 'member(acceptor0,quorum__acceptor0_acceptor2)', '~member(acceptor1,quorum__acceptor0_acceptor2)', 'member(acceptor2,quorum__acceptor0_acceptor2)']

func_name2symbol:  {'chosenAt': Const('chosenAt', FunctionSort(EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')), EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')), BooleanSort())), 'didNotPromise': Const('didNotPromise', FunctionSort(EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')), BooleanSort())), 'promise': Const('promise', FunctionSort(EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')), EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')), BooleanSort())), 'start': Const('start', FunctionSort(EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')), BooleanSort())), 'member': Const('member', FunctionSort(EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')), EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')), BooleanSort()))}

func_name2args_sort:  {'chosenAt': (EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')), EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))), 'didNotPromise': (EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')),), 'promise': (EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')), EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))), 'start': (EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')),), 'member': (EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')), EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')))}

sign_func_name2count:  {'1$chosenAt': 2, '1$didNotPromise': 2, '1$promise': 1, '0$promise': 1, '1$start': 1, '1$member': 2, '0$member': 4}


---------- ProductArgPartition ----------

sort2class_sigs: {EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')): [quorum$0$member$1$0; quorum$0$member$1$1; quorum$1$chosenAt$0$1; quorum$1$member$1$0, quorum$0$member$1$2; quorum$0$member$1$3; quorum$1$chosenAt$0$0; quorum$1$member$1$1], EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')): [proposer$0$promise$1$0; proposer$1$chosenAt$1$1; proposer$1$promise$1$0, proposer$1$chosenAt$1$0, proposer$1$start$0$0], EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')): [acceptor$0$member$0$0; acceptor$0$promise$0$0; acceptor$1$member$0$1, acceptor$0$member$0$1; acceptor$0$member$0$3; acceptor$1$didNotPromise$0$1, acceptor$0$member$0$2; acceptor$1$didNotPromise$0$0; acceptor$1$member$0$0; acceptor$1$promise$0$0]}

sort2part_sig: {EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')): quorum$0$member$1$0; quorum$0$member$1$1; quorum$1$chosenAt$0$1; quorum$1$member$1$0 | quorum$0$member$1$2; quorum$0$member$1$3; quorum$1$chosenAt$0$0; quorum$1$member$1$1, EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')): proposer$0$promise$1$0; proposer$1$chosenAt$1$1; proposer$1$promise$1$0 | proposer$1$chosenAt$1$0 | proposer$1$start$0$0, EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')): acceptor$0$member$0$0; acceptor$0$promise$0$0; acceptor$1$member$0$1 | acceptor$0$member$0$1; acceptor$0$member$0$3; acceptor$1$didNotPromise$0$1 | acceptor$0$member$0$2; acceptor$1$didNotPromise$0$0; acceptor$1$member$0$0; acceptor$1$promise$0$0}

	sort: quorum

	identical_classes: {'quorum$0$member$1; quorum$0$member$1; quorum$1$chosenAt$0; quorum$1$member$1': [quorum$0$member$1$0; quorum$0$member$1$1; quorum$1$chosenAt$0$1; quorum$1$member$1$0, quorum$0$member$1$2; quorum$0$member$1$3; quorum$1$chosenAt$0$0; quorum$1$member$1$1]}

	identical_single_classes: {}

	identical_multi_classes: {'quorum$0$member$1; quorum$0$member$1; quorum$1$chosenAt$0; quorum$1$member$1': [quorum$0$member$1$0, quorum$0$member$1$1, quorum$1$chosenAt$0$1, quorum$1$member$1$0, quorum$0$member$1$2, quorum$0$member$1$3, quorum$1$chosenAt$0$0, quorum$1$member$1$1]}

	sort: proposer

	identical_classes: {'proposer$0$promise$1; proposer$1$chosenAt$1; proposer$1$promise$1': [proposer$0$promise$1$0; proposer$1$chosenAt$1$1; proposer$1$promise$1$0], 'proposer$1$chosenAt$1': [proposer$1$chosenAt$1$0], 'proposer$1$start$0': [proposer$1$start$0$0]}

	identical_single_classes: {'proposer$0$promise$1; proposer$1$chosenAt$1; proposer$1$promise$1': proposer$0$promise$1$0; proposer$1$chosenAt$1$1; proposer$1$promise$1$0, 'proposer$1$chosenAt$1': proposer$1$chosenAt$1$0, 'proposer$1$start$0': proposer$1$start$0$0}

	identical_multi_classes: {}

	sort: acceptor

	identical_classes: {'acceptor$0$member$0; acceptor$0$promise$0; acceptor$1$member$0': [acceptor$0$member$0$0; acceptor$0$promise$0$0; acceptor$1$member$0$1], 'acceptor$0$member$0; acceptor$0$member$0; acceptor$1$didNotPromise$0': [acceptor$0$member$0$1; acceptor$0$member$0$3; acceptor$1$didNotPromise$0$1], 'acceptor$0$member$0; acceptor$1$didNotPromise$0; acceptor$1$member$0; acceptor$1$promise$0': [acceptor$0$member$0$2; acceptor$1$didNotPromise$0$0; acceptor$1$member$0$0; acceptor$1$promise$0$0]}

	identical_single_classes: {'acceptor$0$member$0; acceptor$0$promise$0; acceptor$1$member$0': acceptor$0$member$0$0; acceptor$0$promise$0$0; acceptor$1$member$0$1, 'acceptor$0$member$0; acceptor$0$member$0; acceptor$1$didNotPromise$0': acceptor$0$member$0$1; acceptor$0$member$0$3; acceptor$1$didNotPromise$0$1, 'acceptor$0$member$0; acceptor$1$didNotPromise$0; acceptor$1$member$0; acceptor$1$promise$0': acceptor$0$member$0$2; acceptor$1$didNotPromise$0$0; acceptor$1$member$0$0; acceptor$1$promise$0$0}

	identical_multi_classes: {}


---------- QInference: _set_sort_to_quantifier_mode ----------

quantifier mode: quorum: QuantifierMode.forall

quantifier mode: proposer: QuantifierMode.forall

quantifier mode: acceptor: QuantifierMode.forall


---------- QInference: _set_constraint_mode ----------

constraint mode: ConstraintMode.no_merge


---------- QFormula: _set_qvars ----------

forall_qvars: {Var('QUORUM0', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), Var('ACCEPTOR0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Var('PROPOSER0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))), Var('PROPOSER1', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))), Var('ACCEPTOR2', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Var('QUORUM1', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), Var('ACCEPTOR1', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Var('PROPOSER2', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))}

exists_qvars: set()


---------- QFormula: _set_signed_func_name_to_args ----------

signed_func_name2args: {'1$chosenAt': [[Var('QUORUM1', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), Var('PROPOSER1', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))], [Var('QUORUM0', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), Var('PROPOSER0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))]], '1$didNotPromise': [[Var('ACCEPTOR2', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')))], [Var('ACCEPTOR1', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')))]], '1$promise': [[Var('ACCEPTOR2', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Var('PROPOSER0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))]], '0$promise': [[Var('ACCEPTOR0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Var('PROPOSER0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))]], '1$start': [[Var('PROPOSER2', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))]], '1$member': [[Var('ACCEPTOR2', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Var('QUORUM0', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')))], [Var('ACCEPTOR0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Var('QUORUM1', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')))]], '0$member': [[Var('ACCEPTOR0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Var('QUORUM0', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')))], [Var('ACCEPTOR1', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Var('QUORUM0', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')))], [Var('ACCEPTOR2', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Var('QUORUM1', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')))], [Var('ACCEPTOR1', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Var('QUORUM1', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')))]]}


---------- QFormula: _set_qterms ----------

qterms: ['promise(ACCEPTOR0,PROPOSER0)', '~chosenAt(QUORUM0,PROPOSER0)', '~member(ACCEPTOR2,QUORUM0)', 'member(ACCEPTOR2,QUORUM1)', '~promise(ACCEPTOR2,PROPOSER0)', '~didNotPromise(ACCEPTOR2)', '~member(ACCEPTOR0,QUORUM1)', '~chosenAt(QUORUM1,PROPOSER1)', '~start(PROPOSER2)', 'member(ACCEPTOR0,QUORUM0)', '~didNotPromise(ACCEPTOR1)', 'member(ACCEPTOR1,QUORUM1)', 'member(ACCEPTOR1,QUORUM0)']


---------- QFormula: get_qclause ----------

qclause: forall ACCEPTOR0,PROPOSER2,ACCEPTOR2,PROPOSER1,PROPOSER0,ACCEPTOR1,QUORUM0,QUORUM1. ~promise(ACCEPTOR0,PROPOSER0) | chosenAt(QUORUM0,PROPOSER0) | member(ACCEPTOR2,QUORUM0) | ~member(ACCEPTOR2,QUORUM1) | promise(ACCEPTOR2,PROPOSER0) | didNotPromise(ACCEPTOR2) | member(ACCEPTOR0,QUORUM1) | chosenAt(QUORUM1,PROPOSER1) | start(PROPOSER2) | ~member(ACCEPTOR0,QUORUM0) | didNotPromise(ACCEPTOR1) | ~member(ACCEPTOR1,QUORUM1) | ~member(ACCEPTOR1,QUORUM0) | (PROPOSER0 = PROPOSER2 | ACCEPTOR0 = ACCEPTOR2 | QUORUM0 = QUORUM1 | ACCEPTOR1 = ACCEPTOR2 | PROPOSER1 = PROPOSER2 | ACCEPTOR0 = ACCEPTOR1 | PROPOSER0 = PROPOSER1)


=== Prime Orbit 44 =====================
size : 18
num_suborbits: 1
699 (*) : 0----00--0-0------1------0-
699     : ['promise(acceptor1,proposer0)', '~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor2)', '~start(proposer1)']
700     : 0---0-0--0-0------1-------0
700     : ['promise(acceptor1,proposer0)', '~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor2)', '~start(proposer2)']
701     : -0---0-0-0-0-------1----0--
701     : ['promise(acceptor1,proposer1)', '~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor2)', '~start(proposer0)']
702     : -0-0---0-0-0-------1------0
702     : ['promise(acceptor1,proposer1)', '~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor2)', '~start(proposer2)']
703     : --0-0---00-0--------1---0--
703     : ['promise(acceptor1,proposer2)', '~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor2)', '~start(proposer0)']
704     : --00----00-0--------1----0-
704     : ['promise(acceptor1,proposer2)', '~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor2)', '~start(proposer1)']
705     : --00--0--00----------1---0-
705     : ['promise(acceptor2,proposer0)', '~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~start(proposer1)']
706     : -0-0--0--00----------1----0
706     : ['promise(acceptor2,proposer0)', '~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~start(proposer2)']
707     : --0-0--0-00-----------1-0--
707     : ['promise(acceptor2,proposer1)', '~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~start(proposer0)']
708     : 0---0--0-00-----------1---0
708     : ['promise(acceptor2,proposer1)', '~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~start(proposer2)']
709     : -0---0--000------------10--
709     : ['promise(acceptor2,proposer2)', '~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~start(proposer0)']
710     : 0----0--000------------1-0-
710     : ['promise(acceptor2,proposer2)', '~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~start(proposer1)']
711     : 0--0----0-00---1---------0-
711     : ['promise(acceptor0,proposer0)', '~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~start(proposer1)']
712     : 0--0---0--00---1----------0
712     : ['promise(acceptor0,proposer0)', '~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~start(proposer2)']
713     : -0--0---0-00----1-------0--
713     : ['promise(acceptor0,proposer1)', '~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~start(proposer0)']
714     : -0--0-0---00----1---------0
714     : ['promise(acceptor0,proposer1)', '~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~start(proposer2)']
715     : --0--0-0--00-----1------0--
715     : ['promise(acceptor0,proposer2)', '~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~start(proposer0)']
716     : --0--00---00-----1-------0-
716     : ['promise(acceptor0,proposer2)', '~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~start(proposer1)']
num_forall :   0
num_exists :   0
num_literals : 0
quantified form : None
qcost : 0




---------- QPrime ----------


---------- ConstArgBinding ----------

terms: ['~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor2)', 'promise(acceptor1,proposer0)', '~start(proposer1)', '~member(acceptor0,quorum__acceptor1_acceptor2)', 'member(acceptor1,quorum__acceptor1_acceptor2)', 'member(acceptor2,quorum__acceptor1_acceptor2)', 'member(acceptor0,quorum__acceptor0_acceptor1)', 'member(acceptor1,quorum__acceptor0_acceptor1)', '~member(acceptor2,quorum__acceptor0_acceptor1)', 'member(acceptor0,quorum__acceptor0_acceptor2)', '~member(acceptor1,quorum__acceptor0_acceptor2)', 'member(acceptor2,quorum__acceptor0_acceptor2)']

sign_func_name2args: {'1$chosenAt': [(Const('quorum__acceptor0_acceptor1', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), Const('proposer0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))), (Const('quorum__acceptor0_acceptor2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), Const('proposer2', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))), (Const('quorum__acceptor1_acceptor2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), Const('proposer0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))))], '1$didNotPromise': [(Const('acceptor0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))),), (Const('acceptor2', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))),)], '0$promise': [(Const('acceptor1', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Const('proposer0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))))], '1$start': [(Const('proposer1', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))),)], '1$member': [(Const('acceptor0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Const('quorum__acceptor1_acceptor2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')))), (Const('acceptor2', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Const('quorum__acceptor0_acceptor1', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')))), (Const('acceptor1', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Const('quorum__acceptor0_acceptor2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))))], '0$member': [(Const('acceptor1', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Const('quorum__acceptor1_acceptor2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')))), (Const('acceptor2', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Const('quorum__acceptor1_acceptor2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')))), (Const('acceptor0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Const('quorum__acceptor0_acceptor1', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')))), (Const('acceptor1', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Const('quorum__acceptor0_acceptor1', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')))), (Const('acceptor0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Const('quorum__acceptor0_acceptor2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')))), (Const('acceptor2', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Const('quorum__acceptor0_acceptor2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))))]}

const2sigs: {Const('quorum__acceptor0_acceptor1', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))): [quorum$1$chosenAt$0$0, quorum$1$member$1$1, quorum$0$member$1$2, quorum$0$member$1$3], Const('proposer0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))): [proposer$1$chosenAt$1$0, proposer$1$chosenAt$1$2, proposer$0$promise$1$0], Const('quorum__acceptor0_acceptor2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))): [quorum$1$chosenAt$0$1, quorum$1$member$1$2, quorum$0$member$1$4, quorum$0$member$1$5], Const('proposer2', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))): [proposer$1$chosenAt$1$1], Const('quorum__acceptor1_acceptor2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))): [quorum$1$chosenAt$0$2, quorum$1$member$1$0, quorum$0$member$1$0, quorum$0$member$1$1], Const('acceptor0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))): [acceptor$1$didNotPromise$0$0, acceptor$1$member$0$0, acceptor$0$member$0$2, acceptor$0$member$0$4], Const('acceptor2', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))): [acceptor$1$didNotPromise$0$1, acceptor$1$member$0$1, acceptor$0$member$0$1, acceptor$0$member$0$5], Const('acceptor1', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))): [acceptor$0$promise$0$0, acceptor$1$member$0$2, acceptor$0$member$0$0, acceptor$0$member$0$3], Const('proposer1', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))): [proposer$1$start$0$0]}

sig2const: {'quorum$1$chosenAt$0$0': Const('quorum__acceptor0_acceptor1', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), 'proposer$1$chosenAt$1$0': Const('proposer0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))), 'quorum$1$chosenAt$0$1': Const('quorum__acceptor0_acceptor2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), 'proposer$1$chosenAt$1$1': Const('proposer2', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))), 'quorum$1$chosenAt$0$2': Const('quorum__acceptor1_acceptor2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), 'proposer$1$chosenAt$1$2': Const('proposer0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))), 'acceptor$1$didNotPromise$0$0': Const('acceptor0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), 'acceptor$1$didNotPromise$0$1': Const('acceptor2', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), 'acceptor$0$promise$0$0': Const('acceptor1', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), 'proposer$0$promise$1$0': Const('proposer0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))), 'proposer$1$start$0$0': Const('proposer1', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))), 'acceptor$1$member$0$0': Const('acceptor0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), 'quorum$1$member$1$0': Const('quorum__acceptor1_acceptor2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), 'acceptor$1$member$0$1': Const('acceptor2', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), 'quorum$1$member$1$1': Const('quorum__acceptor0_acceptor1', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), 'acceptor$1$member$0$2': Const('acceptor1', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), 'quorum$1$member$1$2': Const('quorum__acceptor0_acceptor2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), 'acceptor$0$member$0$0': Const('acceptor1', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), 'quorum$0$member$1$0': Const('quorum__acceptor1_acceptor2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), 'acceptor$0$member$0$1': Const('acceptor2', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), 'quorum$0$member$1$1': Const('quorum__acceptor1_acceptor2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), 'acceptor$0$member$0$2': Const('acceptor0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), 'quorum$0$member$1$2': Const('quorum__acceptor0_acceptor1', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), 'acceptor$0$member$0$3': Const('acceptor1', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), 'quorum$0$member$1$3': Const('quorum__acceptor0_acceptor1', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), 'acceptor$0$member$0$4': Const('acceptor0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), 'quorum$0$member$1$4': Const('quorum__acceptor0_acceptor2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), 'acceptor$0$member$0$5': Const('acceptor2', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), 'quorum$0$member$1$5': Const('quorum__acceptor0_acceptor2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')))}


---------- ArgPartition ----------

sort2class_sigs: {EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')): [quorum$0$member$1$0; quorum$0$member$1$1; quorum$1$chosenAt$0$2; quorum$1$member$1$0, quorum$0$member$1$2; quorum$0$member$1$3; quorum$1$chosenAt$0$0; quorum$1$member$1$1, quorum$0$member$1$4; quorum$0$member$1$5; quorum$1$chosenAt$0$1; quorum$1$member$1$2], EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')): [proposer$0$promise$1$0; proposer$1$chosenAt$1$0; proposer$1$chosenAt$1$2, proposer$1$chosenAt$1$1, proposer$1$start$0$0], EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')): [acceptor$0$member$0$0; acceptor$0$member$0$3; acceptor$0$promise$0$0; acceptor$1$member$0$2, acceptor$0$member$0$1; acceptor$0$member$0$5; acceptor$1$didNotPromise$0$1; acceptor$1$member$0$1, acceptor$0$member$0$2; acceptor$0$member$0$4; acceptor$1$didNotPromise$0$0; acceptor$1$member$0$0]}

sort2part_sig: {EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')): quorum$0$member$1$0; quorum$0$member$1$1; quorum$1$chosenAt$0$2; quorum$1$member$1$0 | quorum$0$member$1$2; quorum$0$member$1$3; quorum$1$chosenAt$0$0; quorum$1$member$1$1 | quorum$0$member$1$4; quorum$0$member$1$5; quorum$1$chosenAt$0$1; quorum$1$member$1$2, EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')): proposer$0$promise$1$0; proposer$1$chosenAt$1$0; proposer$1$chosenAt$1$2 | proposer$1$chosenAt$1$1 | proposer$1$start$0$0, EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')): acceptor$0$member$0$0; acceptor$0$member$0$3; acceptor$0$promise$0$0; acceptor$1$member$0$2 | acceptor$0$member$0$1; acceptor$0$member$0$5; acceptor$1$didNotPromise$0$1; acceptor$1$member$0$1 | acceptor$0$member$0$2; acceptor$0$member$0$4; acceptor$1$didNotPromise$0$0; acceptor$1$member$0$0}

part_sig: ('acceptor$0$member$0$0; acceptor$0$member$0$3; acceptor$0$promise$0$0; acceptor$1$member$0$2 | acceptor$0$member$0$1; acceptor$0$member$0$5; acceptor$1$didNotPromise$0$1; acceptor$1$member$0$1 | acceptor$0$member$0$2; acceptor$0$member$0$4; acceptor$1$didNotPromise$0$0; acceptor$1$member$0$0', 'proposer$0$promise$1$0; proposer$1$chosenAt$1$0; proposer$1$chosenAt$1$2 | proposer$1$chosenAt$1$1 | proposer$1$start$0$0', 'quorum$0$member$1$0; quorum$0$member$1$1; quorum$1$chosenAt$0$2; quorum$1$member$1$0 | quorum$0$member$1$2; quorum$0$member$1$3; quorum$1$chosenAt$0$0; quorum$1$member$1$1 | quorum$0$member$1$4; quorum$0$member$1$5; quorum$1$chosenAt$0$1; quorum$1$member$1$2')


---------- SigGenerator ----------

terms:  ['~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor2)', 'promise(acceptor1,proposer0)', '~start(proposer1)', '~member(acceptor0,quorum__acceptor1_acceptor2)', 'member(acceptor1,quorum__acceptor1_acceptor2)', 'member(acceptor2,quorum__acceptor1_acceptor2)', 'member(acceptor0,quorum__acceptor0_acceptor1)', 'member(acceptor1,quorum__acceptor0_acceptor1)', '~member(acceptor2,quorum__acceptor0_acceptor1)', 'member(acceptor0,quorum__acceptor0_acceptor2)', '~member(acceptor1,quorum__acceptor0_acceptor2)', 'member(acceptor2,quorum__acceptor0_acceptor2)']

func_name2symbol:  {'chosenAt': Const('chosenAt', FunctionSort(EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')), EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')), BooleanSort())), 'didNotPromise': Const('didNotPromise', FunctionSort(EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')), BooleanSort())), 'promise': Const('promise', FunctionSort(EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')), EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')), BooleanSort())), 'start': Const('start', FunctionSort(EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')), BooleanSort())), 'member': Const('member', FunctionSort(EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')), EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')), BooleanSort()))}

func_name2args_sort:  {'chosenAt': (EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')), EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))), 'didNotPromise': (EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')),), 'promise': (EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')), EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))), 'start': (EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')),), 'member': (EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')), EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')))}

sign_func_name2count:  {'1$chosenAt': 3, '1$didNotPromise': 2, '0$promise': 1, '1$start': 1, '1$member': 3, '0$member': 6}


---------- ProductArgPartition ----------

sort2class_sigs: {EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')): [quorum$0$member$1$0; quorum$0$member$1$1; quorum$1$chosenAt$0$2; quorum$1$member$1$0, quorum$0$member$1$2; quorum$0$member$1$3; quorum$1$chosenAt$0$0; quorum$1$member$1$1, quorum$0$member$1$4; quorum$0$member$1$5; quorum$1$chosenAt$0$1; quorum$1$member$1$2], EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')): [proposer$0$promise$1$0; proposer$1$chosenAt$1$0; proposer$1$chosenAt$1$2, proposer$1$chosenAt$1$1, proposer$1$start$0$0], EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')): [acceptor$0$member$0$0; acceptor$0$member$0$3; acceptor$0$promise$0$0; acceptor$1$member$0$2, acceptor$0$member$0$1; acceptor$0$member$0$5; acceptor$1$didNotPromise$0$1; acceptor$1$member$0$1, acceptor$0$member$0$2; acceptor$0$member$0$4; acceptor$1$didNotPromise$0$0; acceptor$1$member$0$0]}

sort2part_sig: {EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')): quorum$0$member$1$0; quorum$0$member$1$1; quorum$1$chosenAt$0$2; quorum$1$member$1$0 | quorum$0$member$1$2; quorum$0$member$1$3; quorum$1$chosenAt$0$0; quorum$1$member$1$1 | quorum$0$member$1$4; quorum$0$member$1$5; quorum$1$chosenAt$0$1; quorum$1$member$1$2, EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')): proposer$0$promise$1$0; proposer$1$chosenAt$1$0; proposer$1$chosenAt$1$2 | proposer$1$chosenAt$1$1 | proposer$1$start$0$0, EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')): acceptor$0$member$0$0; acceptor$0$member$0$3; acceptor$0$promise$0$0; acceptor$1$member$0$2 | acceptor$0$member$0$1; acceptor$0$member$0$5; acceptor$1$didNotPromise$0$1; acceptor$1$member$0$1 | acceptor$0$member$0$2; acceptor$0$member$0$4; acceptor$1$didNotPromise$0$0; acceptor$1$member$0$0}

	sort: quorum

	identical_classes: {'quorum$0$member$1; quorum$0$member$1; quorum$1$chosenAt$0; quorum$1$member$1': [quorum$0$member$1$0; quorum$0$member$1$1; quorum$1$chosenAt$0$2; quorum$1$member$1$0, quorum$0$member$1$2; quorum$0$member$1$3; quorum$1$chosenAt$0$0; quorum$1$member$1$1, quorum$0$member$1$4; quorum$0$member$1$5; quorum$1$chosenAt$0$1; quorum$1$member$1$2]}

	identical_single_classes: {}

	identical_multi_classes: {'quorum$0$member$1; quorum$0$member$1; quorum$1$chosenAt$0; quorum$1$member$1': [quorum$0$member$1$0, quorum$0$member$1$1, quorum$1$chosenAt$0$2, quorum$1$member$1$0, quorum$0$member$1$2, quorum$0$member$1$3, quorum$1$chosenAt$0$0, quorum$1$member$1$1, quorum$0$member$1$4, quorum$0$member$1$5, quorum$1$chosenAt$0$1, quorum$1$member$1$2]}

	sort: proposer

	identical_classes: {'proposer$0$promise$1; proposer$1$chosenAt$1; proposer$1$chosenAt$1': [proposer$0$promise$1$0; proposer$1$chosenAt$1$0; proposer$1$chosenAt$1$2], 'proposer$1$chosenAt$1': [proposer$1$chosenAt$1$1], 'proposer$1$start$0': [proposer$1$start$0$0]}

	identical_single_classes: {'proposer$0$promise$1; proposer$1$chosenAt$1; proposer$1$chosenAt$1': proposer$0$promise$1$0; proposer$1$chosenAt$1$0; proposer$1$chosenAt$1$2, 'proposer$1$chosenAt$1': proposer$1$chosenAt$1$1, 'proposer$1$start$0': proposer$1$start$0$0}

	identical_multi_classes: {}

	sort: acceptor

	identical_classes: {'acceptor$0$member$0; acceptor$0$member$0; acceptor$0$promise$0; acceptor$1$member$0': [acceptor$0$member$0$0; acceptor$0$member$0$3; acceptor$0$promise$0$0; acceptor$1$member$0$2], 'acceptor$0$member$0; acceptor$0$member$0; acceptor$1$didNotPromise$0; acceptor$1$member$0': [acceptor$0$member$0$1; acceptor$0$member$0$5; acceptor$1$didNotPromise$0$1; acceptor$1$member$0$1, acceptor$0$member$0$2; acceptor$0$member$0$4; acceptor$1$didNotPromise$0$0; acceptor$1$member$0$0]}

	identical_single_classes: {'acceptor$0$member$0; acceptor$0$member$0; acceptor$0$promise$0; acceptor$1$member$0': acceptor$0$member$0$0; acceptor$0$member$0$3; acceptor$0$promise$0$0; acceptor$1$member$0$2}

	identical_multi_classes: {'acceptor$0$member$0; acceptor$0$member$0; acceptor$1$didNotPromise$0; acceptor$1$member$0': [acceptor$0$member$0$1, acceptor$0$member$0$5, acceptor$1$didNotPromise$0$1, acceptor$1$member$0$1, acceptor$0$member$0$2, acceptor$0$member$0$4, acceptor$1$didNotPromise$0$0, acceptor$1$member$0$0]}


---------- QInference: _set_sort_to_quantifier_mode ----------

quantifier mode: quorum: QuantifierMode.forall

quantifier mode: proposer: QuantifierMode.forall

quantifier mode: acceptor: QuantifierMode.forall


---------- QInference: _set_constraint_mode ----------

constraint mode: ConstraintMode.no_merge


---------- QFormula: _set_qvars ----------

forall_qvars: {Var('QUORUM2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), Var('QUORUM0', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), Var('ACCEPTOR0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Var('PROPOSER1', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))), Var('PROPOSER0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))), Var('ACCEPTOR2', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Var('QUORUM1', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), Var('ACCEPTOR1', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Var('PROPOSER2', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))}

exists_qvars: set()


---------- QFormula: _set_signed_func_name_to_args ----------

signed_func_name2args: {'1$chosenAt': [[Var('QUORUM1', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), Var('PROPOSER0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))], [Var('QUORUM2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), Var('PROPOSER1', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))], [Var('QUORUM0', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), Var('PROPOSER0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))]], '1$didNotPromise': [[Var('ACCEPTOR2', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')))], [Var('ACCEPTOR1', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')))]], '0$promise': [[Var('ACCEPTOR0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Var('PROPOSER0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))]], '1$start': [[Var('PROPOSER2', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))]], '1$member': [[Var('ACCEPTOR2', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Var('QUORUM0', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')))], [Var('ACCEPTOR1', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Var('QUORUM1', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')))], [Var('ACCEPTOR0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Var('QUORUM2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')))]], '0$member': [[Var('ACCEPTOR0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Var('QUORUM0', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')))], [Var('ACCEPTOR1', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Var('QUORUM0', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')))], [Var('ACCEPTOR2', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Var('QUORUM1', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')))], [Var('ACCEPTOR0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Var('QUORUM1', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')))], [Var('ACCEPTOR2', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Var('QUORUM2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')))], [Var('ACCEPTOR1', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Var('QUORUM2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')))]]}


---------- QFormula: _set_qterms ----------

qterms: ['promise(ACCEPTOR0,PROPOSER0)', '~member(ACCEPTOR1,QUORUM1)', '~chosenAt(QUORUM0,PROPOSER0)', '~member(ACCEPTOR2,QUORUM0)', 'member(ACCEPTOR2,QUORUM1)', '~member(ACCEPTOR0,QUORUM2)', '~didNotPromise(ACCEPTOR2)', 'member(ACCEPTOR0,QUORUM1)', '~start(PROPOSER2)', 'member(ACCEPTOR0,QUORUM0)', 'member(ACCEPTOR1,QUORUM2)', '~chosenAt(QUORUM2,PROPOSER1)', '~chosenAt(QUORUM1,PROPOSER0)', '~didNotPromise(ACCEPTOR1)', 'member(ACCEPTOR2,QUORUM2)', 'member(ACCEPTOR1,QUORUM0)']


---------- QFormula: get_qclause ----------

qclause: forall ACCEPTOR0,PROPOSER2,ACCEPTOR2,PROPOSER1,PROPOSER0,QUORUM2,ACCEPTOR1,QUORUM0,QUORUM1. ~promise(ACCEPTOR0,PROPOSER0) | member(ACCEPTOR1,QUORUM1) | chosenAt(QUORUM0,PROPOSER0) | member(ACCEPTOR2,QUORUM0) | ~member(ACCEPTOR2,QUORUM1) | member(ACCEPTOR0,QUORUM2) | didNotPromise(ACCEPTOR2) | ~member(ACCEPTOR0,QUORUM1) | start(PROPOSER2) | ~member(ACCEPTOR0,QUORUM0) | ~member(ACCEPTOR1,QUORUM2) | chosenAt(QUORUM2,PROPOSER1) | chosenAt(QUORUM1,PROPOSER0) | didNotPromise(ACCEPTOR1) | ~member(ACCEPTOR2,QUORUM2) | ~member(ACCEPTOR1,QUORUM0) | (PROPOSER0 = PROPOSER2 | ACCEPTOR0 = ACCEPTOR2 | QUORUM0 = QUORUM2 | QUORUM0 = QUORUM1 | ACCEPTOR1 = ACCEPTOR2 | QUORUM1 = QUORUM2 | PROPOSER1 = PROPOSER2 | ACCEPTOR0 = ACCEPTOR1 | PROPOSER0 = PROPOSER1)


=== Prime Orbit 45 =====================
size : 18
num_suborbits: 1
717 (*) : 0---0--0-000---------0----0
717     : ['~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor2,proposer0)', '~start(proposer2)']
718     : 0----0--0000---------0---0-
718     : ['~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor2,proposer0)', '~start(proposer1)']
719     : -0-0--0--000----------0---0
719     : ['~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor2,proposer1)', '~start(proposer2)']
720     : -0---0--0000----------0-0--
720     : ['~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor2,proposer1)', '~start(proposer0)']
721     : --00--0--000-----------0-0-
721     : ['~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor2,proposer2)', '~start(proposer1)']
722     : --0-0--0-000-----------00--
722     : ['~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor2,proposer2)', '~start(proposer0)']
723     : -0-0---0-000------0-------0
723     : ['~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor1,proposer0)', '~start(proposer2)']
724     : --00----0000------0------0-
724     : ['~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor1,proposer0)', '~start(proposer1)']
725     : 0---0-0--000-------0------0
725     : ['~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor1,proposer1)', '~start(proposer2)']
726     : --0-0---0000-------0----0--
726     : ['~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor1,proposer1)', '~start(proposer0)']
727     : 0----00--000--------0----0-
727     : ['~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor1,proposer2)', '~start(proposer1)']
728     : -0---0-0-000--------0---0--
728     : ['~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor1,proposer2)', '~start(proposer0)']
729     : -0--0-0--000---0----------0
729     : ['~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor0,proposer0)', '~start(proposer2)']
730     : --0--00--000---0---------0-
730     : ['~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor0,proposer0)', '~start(proposer1)']
731     : 0--0---0-000----0---------0
731     : ['~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor0,proposer1)', '~start(proposer2)']
732     : --0--0-0-000----0-------0--
732     : ['~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor0,proposer1)', '~start(proposer0)']
733     : 0--0----0000-----0-------0-
733     : ['~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor0,proposer2)', '~start(proposer1)']
734     : -0--0---0000-----0------0--
734     : ['~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor0,proposer2)', '~start(proposer0)']
num_forall :   0
num_exists :   0
num_literals : 0
quantified form : None
qcost : 0




---------- QPrime ----------


---------- ConstArgBinding ----------

terms: ['~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor2,proposer0)', '~start(proposer2)', '~member(acceptor0,quorum__acceptor1_acceptor2)', 'member(acceptor1,quorum__acceptor1_acceptor2)', 'member(acceptor2,quorum__acceptor1_acceptor2)', 'member(acceptor0,quorum__acceptor0_acceptor1)', 'member(acceptor1,quorum__acceptor0_acceptor1)', '~member(acceptor2,quorum__acceptor0_acceptor1)', 'member(acceptor0,quorum__acceptor0_acceptor2)', '~member(acceptor1,quorum__acceptor0_acceptor2)', 'member(acceptor2,quorum__acceptor0_acceptor2)']

sign_func_name2args: {'1$chosenAt': [(Const('quorum__acceptor0_acceptor1', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), Const('proposer0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))), (Const('quorum__acceptor0_acceptor2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), Const('proposer1', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))), (Const('quorum__acceptor1_acceptor2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), Const('proposer1', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))))], '1$didNotPromise': [(Const('acceptor0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))),), (Const('acceptor1', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))),), (Const('acceptor2', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))),)], '1$promise': [(Const('acceptor2', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Const('proposer0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))))], '1$start': [(Const('proposer2', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))),)], '1$member': [(Const('acceptor0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Const('quorum__acceptor1_acceptor2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')))), (Const('acceptor2', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Const('quorum__acceptor0_acceptor1', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')))), (Const('acceptor1', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Const('quorum__acceptor0_acceptor2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))))], '0$member': [(Const('acceptor1', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Const('quorum__acceptor1_acceptor2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')))), (Const('acceptor2', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Const('quorum__acceptor1_acceptor2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')))), (Const('acceptor0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Const('quorum__acceptor0_acceptor1', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')))), (Const('acceptor1', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Const('quorum__acceptor0_acceptor1', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')))), (Const('acceptor0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Const('quorum__acceptor0_acceptor2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')))), (Const('acceptor2', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Const('quorum__acceptor0_acceptor2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))))]}

const2sigs: {Const('quorum__acceptor0_acceptor1', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))): [quorum$1$chosenAt$0$0, quorum$1$member$1$1, quorum$0$member$1$2, quorum$0$member$1$3], Const('proposer0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))): [proposer$1$chosenAt$1$0, proposer$1$promise$1$0], Const('quorum__acceptor0_acceptor2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))): [quorum$1$chosenAt$0$1, quorum$1$member$1$2, quorum$0$member$1$4, quorum$0$member$1$5], Const('proposer1', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))): [proposer$1$chosenAt$1$1, proposer$1$chosenAt$1$2], Const('quorum__acceptor1_acceptor2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))): [quorum$1$chosenAt$0$2, quorum$1$member$1$0, quorum$0$member$1$0, quorum$0$member$1$1], Const('acceptor0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))): [acceptor$1$didNotPromise$0$0, acceptor$1$member$0$0, acceptor$0$member$0$2, acceptor$0$member$0$4], Const('acceptor1', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))): [acceptor$1$didNotPromise$0$1, acceptor$1$member$0$2, acceptor$0$member$0$0, acceptor$0$member$0$3], Const('acceptor2', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))): [acceptor$1$didNotPromise$0$2, acceptor$1$promise$0$0, acceptor$1$member$0$1, acceptor$0$member$0$1, acceptor$0$member$0$5], Const('proposer2', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))): [proposer$1$start$0$0]}

sig2const: {'quorum$1$chosenAt$0$0': Const('quorum__acceptor0_acceptor1', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), 'proposer$1$chosenAt$1$0': Const('proposer0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))), 'quorum$1$chosenAt$0$1': Const('quorum__acceptor0_acceptor2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), 'proposer$1$chosenAt$1$1': Const('proposer1', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))), 'quorum$1$chosenAt$0$2': Const('quorum__acceptor1_acceptor2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), 'proposer$1$chosenAt$1$2': Const('proposer1', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))), 'acceptor$1$didNotPromise$0$0': Const('acceptor0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), 'acceptor$1$didNotPromise$0$1': Const('acceptor1', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), 'acceptor$1$didNotPromise$0$2': Const('acceptor2', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), 'acceptor$1$promise$0$0': Const('acceptor2', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), 'proposer$1$promise$1$0': Const('proposer0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))), 'proposer$1$start$0$0': Const('proposer2', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))), 'acceptor$1$member$0$0': Const('acceptor0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), 'quorum$1$member$1$0': Const('quorum__acceptor1_acceptor2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), 'acceptor$1$member$0$1': Const('acceptor2', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), 'quorum$1$member$1$1': Const('quorum__acceptor0_acceptor1', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), 'acceptor$1$member$0$2': Const('acceptor1', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), 'quorum$1$member$1$2': Const('quorum__acceptor0_acceptor2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), 'acceptor$0$member$0$0': Const('acceptor1', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), 'quorum$0$member$1$0': Const('quorum__acceptor1_acceptor2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), 'acceptor$0$member$0$1': Const('acceptor2', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), 'quorum$0$member$1$1': Const('quorum__acceptor1_acceptor2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), 'acceptor$0$member$0$2': Const('acceptor0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), 'quorum$0$member$1$2': Const('quorum__acceptor0_acceptor1', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), 'acceptor$0$member$0$3': Const('acceptor1', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), 'quorum$0$member$1$3': Const('quorum__acceptor0_acceptor1', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), 'acceptor$0$member$0$4': Const('acceptor0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), 'quorum$0$member$1$4': Const('quorum__acceptor0_acceptor2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), 'acceptor$0$member$0$5': Const('acceptor2', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), 'quorum$0$member$1$5': Const('quorum__acceptor0_acceptor2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')))}


---------- ArgPartition ----------

sort2class_sigs: {EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')): [quorum$0$member$1$0; quorum$0$member$1$1; quorum$1$chosenAt$0$2; quorum$1$member$1$0, quorum$0$member$1$2; quorum$0$member$1$3; quorum$1$chosenAt$0$0; quorum$1$member$1$1, quorum$0$member$1$4; quorum$0$member$1$5; quorum$1$chosenAt$0$1; quorum$1$member$1$2], EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')): [proposer$1$chosenAt$1$0; proposer$1$promise$1$0, proposer$1$chosenAt$1$1; proposer$1$chosenAt$1$2, proposer$1$start$0$0], EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')): [acceptor$0$member$0$0; acceptor$0$member$0$3; acceptor$1$didNotPromise$0$1; acceptor$1$member$0$2, acceptor$0$member$0$1; acceptor$0$member$0$5; acceptor$1$didNotPromise$0$2; acceptor$1$member$0$1; acceptor$1$promise$0$0, acceptor$0$member$0$2; acceptor$0$member$0$4; acceptor$1$didNotPromise$0$0; acceptor$1$member$0$0]}

sort2part_sig: {EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')): quorum$0$member$1$0; quorum$0$member$1$1; quorum$1$chosenAt$0$2; quorum$1$member$1$0 | quorum$0$member$1$2; quorum$0$member$1$3; quorum$1$chosenAt$0$0; quorum$1$member$1$1 | quorum$0$member$1$4; quorum$0$member$1$5; quorum$1$chosenAt$0$1; quorum$1$member$1$2, EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')): proposer$1$chosenAt$1$0; proposer$1$promise$1$0 | proposer$1$chosenAt$1$1; proposer$1$chosenAt$1$2 | proposer$1$start$0$0, EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')): acceptor$0$member$0$0; acceptor$0$member$0$3; acceptor$1$didNotPromise$0$1; acceptor$1$member$0$2 | acceptor$0$member$0$1; acceptor$0$member$0$5; acceptor$1$didNotPromise$0$2; acceptor$1$member$0$1; acceptor$1$promise$0$0 | acceptor$0$member$0$2; acceptor$0$member$0$4; acceptor$1$didNotPromise$0$0; acceptor$1$member$0$0}

part_sig: ('acceptor$0$member$0$0; acceptor$0$member$0$3; acceptor$1$didNotPromise$0$1; acceptor$1$member$0$2 | acceptor$0$member$0$1; acceptor$0$member$0$5; acceptor$1$didNotPromise$0$2; acceptor$1$member$0$1; acceptor$1$promise$0$0 | acceptor$0$member$0$2; acceptor$0$member$0$4; acceptor$1$didNotPromise$0$0; acceptor$1$member$0$0', 'proposer$1$chosenAt$1$0; proposer$1$promise$1$0 | proposer$1$chosenAt$1$1; proposer$1$chosenAt$1$2 | proposer$1$start$0$0', 'quorum$0$member$1$0; quorum$0$member$1$1; quorum$1$chosenAt$0$2; quorum$1$member$1$0 | quorum$0$member$1$2; quorum$0$member$1$3; quorum$1$chosenAt$0$0; quorum$1$member$1$1 | quorum$0$member$1$4; quorum$0$member$1$5; quorum$1$chosenAt$0$1; quorum$1$member$1$2')


---------- SigGenerator ----------

terms:  ['~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor2,proposer0)', '~start(proposer2)', '~member(acceptor0,quorum__acceptor1_acceptor2)', 'member(acceptor1,quorum__acceptor1_acceptor2)', 'member(acceptor2,quorum__acceptor1_acceptor2)', 'member(acceptor0,quorum__acceptor0_acceptor1)', 'member(acceptor1,quorum__acceptor0_acceptor1)', '~member(acceptor2,quorum__acceptor0_acceptor1)', 'member(acceptor0,quorum__acceptor0_acceptor2)', '~member(acceptor1,quorum__acceptor0_acceptor2)', 'member(acceptor2,quorum__acceptor0_acceptor2)']

func_name2symbol:  {'chosenAt': Const('chosenAt', FunctionSort(EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')), EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')), BooleanSort())), 'didNotPromise': Const('didNotPromise', FunctionSort(EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')), BooleanSort())), 'promise': Const('promise', FunctionSort(EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')), EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')), BooleanSort())), 'start': Const('start', FunctionSort(EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')), BooleanSort())), 'member': Const('member', FunctionSort(EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')), EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')), BooleanSort()))}

func_name2args_sort:  {'chosenAt': (EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')), EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))), 'didNotPromise': (EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')),), 'promise': (EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')), EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))), 'start': (EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')),), 'member': (EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')), EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')))}

sign_func_name2count:  {'1$chosenAt': 3, '1$didNotPromise': 3, '1$promise': 1, '1$start': 1, '1$member': 3, '0$member': 6}


---------- ProductArgPartition ----------

sort2class_sigs: {EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')): [quorum$0$member$1$0; quorum$0$member$1$1; quorum$1$chosenAt$0$2; quorum$1$member$1$0, quorum$0$member$1$2; quorum$0$member$1$3; quorum$1$chosenAt$0$0; quorum$1$member$1$1, quorum$0$member$1$4; quorum$0$member$1$5; quorum$1$chosenAt$0$1; quorum$1$member$1$2], EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')): [proposer$1$chosenAt$1$0; proposer$1$promise$1$0, proposer$1$chosenAt$1$1; proposer$1$chosenAt$1$2, proposer$1$start$0$0], EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')): [acceptor$0$member$0$0; acceptor$0$member$0$3; acceptor$1$didNotPromise$0$1; acceptor$1$member$0$2, acceptor$0$member$0$1; acceptor$0$member$0$5; acceptor$1$didNotPromise$0$2; acceptor$1$member$0$1; acceptor$1$promise$0$0, acceptor$0$member$0$2; acceptor$0$member$0$4; acceptor$1$didNotPromise$0$0; acceptor$1$member$0$0]}

sort2part_sig: {EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')): quorum$0$member$1$0; quorum$0$member$1$1; quorum$1$chosenAt$0$2; quorum$1$member$1$0 | quorum$0$member$1$2; quorum$0$member$1$3; quorum$1$chosenAt$0$0; quorum$1$member$1$1 | quorum$0$member$1$4; quorum$0$member$1$5; quorum$1$chosenAt$0$1; quorum$1$member$1$2, EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')): proposer$1$chosenAt$1$0; proposer$1$promise$1$0 | proposer$1$chosenAt$1$1; proposer$1$chosenAt$1$2 | proposer$1$start$0$0, EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')): acceptor$0$member$0$0; acceptor$0$member$0$3; acceptor$1$didNotPromise$0$1; acceptor$1$member$0$2 | acceptor$0$member$0$1; acceptor$0$member$0$5; acceptor$1$didNotPromise$0$2; acceptor$1$member$0$1; acceptor$1$promise$0$0 | acceptor$0$member$0$2; acceptor$0$member$0$4; acceptor$1$didNotPromise$0$0; acceptor$1$member$0$0}

	sort: quorum

	identical_classes: {'quorum$0$member$1; quorum$0$member$1; quorum$1$chosenAt$0; quorum$1$member$1': [quorum$0$member$1$0; quorum$0$member$1$1; quorum$1$chosenAt$0$2; quorum$1$member$1$0, quorum$0$member$1$2; quorum$0$member$1$3; quorum$1$chosenAt$0$0; quorum$1$member$1$1, quorum$0$member$1$4; quorum$0$member$1$5; quorum$1$chosenAt$0$1; quorum$1$member$1$2]}

	identical_single_classes: {}

	identical_multi_classes: {'quorum$0$member$1; quorum$0$member$1; quorum$1$chosenAt$0; quorum$1$member$1': [quorum$0$member$1$0, quorum$0$member$1$1, quorum$1$chosenAt$0$2, quorum$1$member$1$0, quorum$0$member$1$2, quorum$0$member$1$3, quorum$1$chosenAt$0$0, quorum$1$member$1$1, quorum$0$member$1$4, quorum$0$member$1$5, quorum$1$chosenAt$0$1, quorum$1$member$1$2]}

	sort: proposer

	identical_classes: {'proposer$1$chosenAt$1; proposer$1$promise$1': [proposer$1$chosenAt$1$0; proposer$1$promise$1$0], 'proposer$1$chosenAt$1; proposer$1$chosenAt$1': [proposer$1$chosenAt$1$1; proposer$1$chosenAt$1$2], 'proposer$1$start$0': [proposer$1$start$0$0]}

	identical_single_classes: {'proposer$1$chosenAt$1; proposer$1$promise$1': proposer$1$chosenAt$1$0; proposer$1$promise$1$0, 'proposer$1$chosenAt$1; proposer$1$chosenAt$1': proposer$1$chosenAt$1$1; proposer$1$chosenAt$1$2, 'proposer$1$start$0': proposer$1$start$0$0}

	identical_multi_classes: {}

	sort: acceptor

	identical_classes: {'acceptor$0$member$0; acceptor$0$member$0; acceptor$1$didNotPromise$0; acceptor$1$member$0': [acceptor$0$member$0$0; acceptor$0$member$0$3; acceptor$1$didNotPromise$0$1; acceptor$1$member$0$2, acceptor$0$member$0$2; acceptor$0$member$0$4; acceptor$1$didNotPromise$0$0; acceptor$1$member$0$0], 'acceptor$0$member$0; acceptor$0$member$0; acceptor$1$didNotPromise$0; acceptor$1$member$0; acceptor$1$promise$0': [acceptor$0$member$0$1; acceptor$0$member$0$5; acceptor$1$didNotPromise$0$2; acceptor$1$member$0$1; acceptor$1$promise$0$0]}

	identical_single_classes: {'acceptor$0$member$0; acceptor$0$member$0; acceptor$1$didNotPromise$0; acceptor$1$member$0; acceptor$1$promise$0': acceptor$0$member$0$1; acceptor$0$member$0$5; acceptor$1$didNotPromise$0$2; acceptor$1$member$0$1; acceptor$1$promise$0$0}

	identical_multi_classes: {'acceptor$0$member$0; acceptor$0$member$0; acceptor$1$didNotPromise$0; acceptor$1$member$0': [acceptor$0$member$0$0, acceptor$0$member$0$3, acceptor$1$didNotPromise$0$1, acceptor$1$member$0$2, acceptor$0$member$0$2, acceptor$0$member$0$4, acceptor$1$didNotPromise$0$0, acceptor$1$member$0$0]}


---------- QInference: _set_sort_to_quantifier_mode ----------

quantifier mode: quorum: QuantifierMode.forall

quantifier mode: proposer: QuantifierMode.forall

quantifier mode: acceptor: QuantifierMode.forall


---------- QInference: _set_constraint_mode ----------

constraint mode: ConstraintMode.no_merge


---------- QFormula: _set_qvars ----------

forall_qvars: {Var('QUORUM2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), Var('QUORUM0', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), Var('ACCEPTOR0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Var('PROPOSER1', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))), Var('PROPOSER0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))), Var('ACCEPTOR2', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Var('QUORUM1', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), Var('ACCEPTOR1', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Var('PROPOSER2', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))}

exists_qvars: set()


---------- QFormula: _set_signed_func_name_to_args ----------

signed_func_name2args: {'1$chosenAt': [[Var('QUORUM1', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), Var('PROPOSER0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))], [Var('QUORUM2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), Var('PROPOSER1', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))], [Var('QUORUM0', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), Var('PROPOSER1', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))]], '1$didNotPromise': [[Var('ACCEPTOR2', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')))], [Var('ACCEPTOR0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')))], [Var('ACCEPTOR1', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')))]], '1$promise': [[Var('ACCEPTOR1', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Var('PROPOSER0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))]], '1$start': [[Var('PROPOSER2', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))]], '1$member': [[Var('ACCEPTOR2', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Var('QUORUM0', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')))], [Var('ACCEPTOR1', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Var('QUORUM1', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')))], [Var('ACCEPTOR0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Var('QUORUM2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')))]], '0$member': [[Var('ACCEPTOR0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Var('QUORUM0', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')))], [Var('ACCEPTOR1', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Var('QUORUM0', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')))], [Var('ACCEPTOR2', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Var('QUORUM1', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')))], [Var('ACCEPTOR0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Var('QUORUM1', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')))], [Var('ACCEPTOR2', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Var('QUORUM2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')))], [Var('ACCEPTOR1', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Var('QUORUM2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')))]]}


---------- QFormula: _set_qterms ----------

qterms: ['~member(ACCEPTOR1,QUORUM1)', 'member(ACCEPTOR2,QUORUM1)', '~member(ACCEPTOR2,QUORUM0)', '~promise(ACCEPTOR1,PROPOSER0)', '~member(ACCEPTOR0,QUORUM2)', '~didNotPromise(ACCEPTOR2)', 'member(ACCEPTOR0,QUORUM1)', '~start(PROPOSER2)', '~didNotPromise(ACCEPTOR0)', 'member(ACCEPTOR0,QUORUM0)', 'member(ACCEPTOR1,QUORUM2)', '~chosenAt(QUORUM2,PROPOSER1)', '~chosenAt(QUORUM0,PROPOSER1)', '~chosenAt(QUORUM1,PROPOSER0)', '~didNotPromise(ACCEPTOR1)', 'member(ACCEPTOR2,QUORUM2)', 'member(ACCEPTOR1,QUORUM0)']


---------- QFormula: get_qclause ----------

qclause: forall ACCEPTOR0,PROPOSER2,ACCEPTOR2,PROPOSER1,PROPOSER0,QUORUM2,ACCEPTOR1,QUORUM0,QUORUM1. member(ACCEPTOR1,QUORUM1) | ~member(ACCEPTOR2,QUORUM1) | member(ACCEPTOR2,QUORUM0) | promise(ACCEPTOR1,PROPOSER0) | member(ACCEPTOR0,QUORUM2) | didNotPromise(ACCEPTOR2) | ~member(ACCEPTOR0,QUORUM1) | start(PROPOSER2) | didNotPromise(ACCEPTOR0) | ~member(ACCEPTOR0,QUORUM0) | ~member(ACCEPTOR1,QUORUM2) | chosenAt(QUORUM2,PROPOSER1) | chosenAt(QUORUM0,PROPOSER1) | chosenAt(QUORUM1,PROPOSER0) | didNotPromise(ACCEPTOR1) | ~member(ACCEPTOR2,QUORUM2) | ~member(ACCEPTOR1,QUORUM0) | (PROPOSER0 = PROPOSER2 | ACCEPTOR0 = ACCEPTOR2 | QUORUM0 = QUORUM2 | QUORUM0 = QUORUM1 | ACCEPTOR1 = ACCEPTOR2 | QUORUM1 = QUORUM2 | PROPOSER1 = PROPOSER2 | ACCEPTOR0 = ACCEPTOR1 | PROPOSER0 = PROPOSER1)


=== Prime Orbit 46 =====================
size : 18
num_suborbits: 1
735 (*) : 0---0----000-------0-0----0
735     : ['~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor1,proposer1)', '~promise(acceptor2,proposer0)', '~start(proposer2)']
736     : 0----0---000--------00---0-
736     : ['~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor1,proposer2)', '~promise(acceptor2,proposer0)', '~start(proposer1)']
737     : -0-0-----000------0---0---0
737     : ['~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor1,proposer0)', '~promise(acceptor2,proposer1)', '~start(proposer2)']
738     : -0---0---000--------0-0-0--
738     : ['~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor1,proposer2)', '~promise(acceptor2,proposer1)', '~start(proposer0)']
739     : --00-----000------0----0-0-
739     : ['~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor1,proposer0)', '~promise(acceptor2,proposer2)', '~start(proposer1)']
740     : --0-0----000-------0---00--
740     : ['~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor1,proposer1)', '~promise(acceptor2,proposer2)', '~start(proposer0)']
741     : 0------0-000----0----0----0
741     : ['~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor0,proposer1)', '~promise(acceptor2,proposer0)', '~start(proposer2)']
742     : 0-------0000-----0---0---0-
742     : ['~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor0,proposer2)', '~promise(acceptor2,proposer0)', '~start(proposer1)']
743     : -0----0--000---0------0---0
743     : ['~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor0,proposer0)', '~promise(acceptor2,proposer1)', '~start(proposer2)']
744     : -0------0000-----0----0-0--
744     : ['~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor0,proposer2)', '~promise(acceptor2,proposer1)', '~start(proposer0)']
745     : --0---0--000---0-------0-0-
745     : ['~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor0,proposer0)', '~promise(acceptor2,proposer2)', '~start(proposer1)']
746     : --0----0-000----0------00--
746     : ['~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor0,proposer1)', '~promise(acceptor2,proposer2)', '~start(proposer0)']
747     : ---0---0-000----0-0-------0
747     : ['~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor0,proposer1)', '~promise(acceptor1,proposer0)', '~start(proposer2)']
748     : ---0----0000-----00------0-
748     : ['~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor0,proposer2)', '~promise(acceptor1,proposer0)', '~start(proposer1)']
749     : ----0-0--000---0---0------0
749     : ['~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor0,proposer0)', '~promise(acceptor1,proposer1)', '~start(proposer2)']
750     : ----0---0000-----0-0----0--
750     : ['~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor0,proposer2)', '~promise(acceptor1,proposer1)', '~start(proposer0)']
751     : -----00--000---0----0----0-
751     : ['~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor0,proposer0)', '~promise(acceptor1,proposer2)', '~start(proposer1)']
752     : -----0-0-000----0---0---0--
752     : ['~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor0,proposer1)', '~promise(acceptor1,proposer2)', '~start(proposer0)']
num_forall :   0
num_exists :   0
num_literals : 0
quantified form : None
qcost : 0




---------- QPrime ----------


---------- ConstArgBinding ----------

terms: ['~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor1,proposer1)', '~promise(acceptor2,proposer0)', '~start(proposer2)', 'member(acceptor0,quorum__acceptor0_acceptor1)', 'member(acceptor1,quorum__acceptor0_acceptor1)', '~member(acceptor2,quorum__acceptor0_acceptor1)', 'member(acceptor0,quorum__acceptor0_acceptor2)', '~member(acceptor1,quorum__acceptor0_acceptor2)', 'member(acceptor2,quorum__acceptor0_acceptor2)']

sign_func_name2args: {'1$chosenAt': [(Const('quorum__acceptor0_acceptor1', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), Const('proposer0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))), (Const('quorum__acceptor0_acceptor2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), Const('proposer1', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))))], '1$didNotPromise': [(Const('acceptor0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))),), (Const('acceptor1', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))),), (Const('acceptor2', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))),)], '1$promise': [(Const('acceptor1', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Const('proposer1', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))), (Const('acceptor2', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Const('proposer0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))))], '1$start': [(Const('proposer2', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))),)], '0$member': [(Const('acceptor0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Const('quorum__acceptor0_acceptor1', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')))), (Const('acceptor1', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Const('quorum__acceptor0_acceptor1', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')))), (Const('acceptor0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Const('quorum__acceptor0_acceptor2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')))), (Const('acceptor2', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Const('quorum__acceptor0_acceptor2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))))], '1$member': [(Const('acceptor2', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Const('quorum__acceptor0_acceptor1', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')))), (Const('acceptor1', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Const('quorum__acceptor0_acceptor2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))))]}

const2sigs: {Const('quorum__acceptor0_acceptor1', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))): [quorum$1$chosenAt$0$0, quorum$0$member$1$0, quorum$0$member$1$1, quorum$1$member$1$0], Const('proposer0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))): [proposer$1$chosenAt$1$0, proposer$1$promise$1$1], Const('quorum__acceptor0_acceptor2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))): [quorum$1$chosenAt$0$1, quorum$0$member$1$2, quorum$0$member$1$3, quorum$1$member$1$1], Const('proposer1', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))): [proposer$1$chosenAt$1$1, proposer$1$promise$1$0], Const('acceptor0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))): [acceptor$1$didNotPromise$0$0, acceptor$0$member$0$0, acceptor$0$member$0$2], Const('acceptor1', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))): [acceptor$1$didNotPromise$0$1, acceptor$1$promise$0$0, acceptor$0$member$0$1, acceptor$1$member$0$1], Const('acceptor2', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))): [acceptor$1$didNotPromise$0$2, acceptor$1$promise$0$1, acceptor$0$member$0$3, acceptor$1$member$0$0], Const('proposer2', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))): [proposer$1$start$0$0]}

sig2const: {'quorum$1$chosenAt$0$0': Const('quorum__acceptor0_acceptor1', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), 'proposer$1$chosenAt$1$0': Const('proposer0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))), 'quorum$1$chosenAt$0$1': Const('quorum__acceptor0_acceptor2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), 'proposer$1$chosenAt$1$1': Const('proposer1', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))), 'acceptor$1$didNotPromise$0$0': Const('acceptor0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), 'acceptor$1$didNotPromise$0$1': Const('acceptor1', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), 'acceptor$1$didNotPromise$0$2': Const('acceptor2', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), 'acceptor$1$promise$0$0': Const('acceptor1', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), 'proposer$1$promise$1$0': Const('proposer1', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))), 'acceptor$1$promise$0$1': Const('acceptor2', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), 'proposer$1$promise$1$1': Const('proposer0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))), 'proposer$1$start$0$0': Const('proposer2', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))), 'acceptor$0$member$0$0': Const('acceptor0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), 'quorum$0$member$1$0': Const('quorum__acceptor0_acceptor1', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), 'acceptor$0$member$0$1': Const('acceptor1', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), 'quorum$0$member$1$1': Const('quorum__acceptor0_acceptor1', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), 'acceptor$0$member$0$2': Const('acceptor0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), 'quorum$0$member$1$2': Const('quorum__acceptor0_acceptor2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), 'acceptor$0$member$0$3': Const('acceptor2', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), 'quorum$0$member$1$3': Const('quorum__acceptor0_acceptor2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), 'acceptor$1$member$0$0': Const('acceptor2', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), 'quorum$1$member$1$0': Const('quorum__acceptor0_acceptor1', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), 'acceptor$1$member$0$1': Const('acceptor1', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), 'quorum$1$member$1$1': Const('quorum__acceptor0_acceptor2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')))}


---------- ArgPartition ----------

sort2class_sigs: {EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')): [quorum$0$member$1$0; quorum$0$member$1$1; quorum$1$chosenAt$0$0; quorum$1$member$1$0, quorum$0$member$1$2; quorum$0$member$1$3; quorum$1$chosenAt$0$1; quorum$1$member$1$1], EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')): [proposer$1$chosenAt$1$0; proposer$1$promise$1$1, proposer$1$chosenAt$1$1; proposer$1$promise$1$0, proposer$1$start$0$0], EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')): [acceptor$0$member$0$0; acceptor$0$member$0$2; acceptor$1$didNotPromise$0$0, acceptor$0$member$0$1; acceptor$1$didNotPromise$0$1; acceptor$1$member$0$1; acceptor$1$promise$0$0, acceptor$0$member$0$3; acceptor$1$didNotPromise$0$2; acceptor$1$member$0$0; acceptor$1$promise$0$1]}

sort2part_sig: {EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')): quorum$0$member$1$0; quorum$0$member$1$1; quorum$1$chosenAt$0$0; quorum$1$member$1$0 | quorum$0$member$1$2; quorum$0$member$1$3; quorum$1$chosenAt$0$1; quorum$1$member$1$1, EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')): proposer$1$chosenAt$1$0; proposer$1$promise$1$1 | proposer$1$chosenAt$1$1; proposer$1$promise$1$0 | proposer$1$start$0$0, EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')): acceptor$0$member$0$0; acceptor$0$member$0$2; acceptor$1$didNotPromise$0$0 | acceptor$0$member$0$1; acceptor$1$didNotPromise$0$1; acceptor$1$member$0$1; acceptor$1$promise$0$0 | acceptor$0$member$0$3; acceptor$1$didNotPromise$0$2; acceptor$1$member$0$0; acceptor$1$promise$0$1}

part_sig: ('acceptor$0$member$0$0; acceptor$0$member$0$2; acceptor$1$didNotPromise$0$0 | acceptor$0$member$0$1; acceptor$1$didNotPromise$0$1; acceptor$1$member$0$1; acceptor$1$promise$0$0 | acceptor$0$member$0$3; acceptor$1$didNotPromise$0$2; acceptor$1$member$0$0; acceptor$1$promise$0$1', 'proposer$1$chosenAt$1$0; proposer$1$promise$1$1 | proposer$1$chosenAt$1$1; proposer$1$promise$1$0 | proposer$1$start$0$0', 'quorum$0$member$1$0; quorum$0$member$1$1; quorum$1$chosenAt$0$0; quorum$1$member$1$0 | quorum$0$member$1$2; quorum$0$member$1$3; quorum$1$chosenAt$0$1; quorum$1$member$1$1')


---------- SigGenerator ----------

terms:  ['~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor1,proposer1)', '~promise(acceptor2,proposer0)', '~start(proposer2)', 'member(acceptor0,quorum__acceptor0_acceptor1)', 'member(acceptor1,quorum__acceptor0_acceptor1)', '~member(acceptor2,quorum__acceptor0_acceptor1)', 'member(acceptor0,quorum__acceptor0_acceptor2)', '~member(acceptor1,quorum__acceptor0_acceptor2)', 'member(acceptor2,quorum__acceptor0_acceptor2)']

func_name2symbol:  {'chosenAt': Const('chosenAt', FunctionSort(EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')), EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')), BooleanSort())), 'didNotPromise': Const('didNotPromise', FunctionSort(EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')), BooleanSort())), 'promise': Const('promise', FunctionSort(EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')), EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')), BooleanSort())), 'start': Const('start', FunctionSort(EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')), BooleanSort())), 'member': Const('member', FunctionSort(EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')), EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')), BooleanSort()))}

func_name2args_sort:  {'chosenAt': (EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')), EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))), 'didNotPromise': (EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')),), 'promise': (EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')), EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))), 'start': (EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')),), 'member': (EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')), EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')))}

sign_func_name2count:  {'1$chosenAt': 2, '1$didNotPromise': 3, '1$promise': 2, '1$start': 1, '0$member': 4, '1$member': 2}


---------- ProductArgPartition ----------

sort2class_sigs: {EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')): [quorum$0$member$1$0; quorum$0$member$1$1; quorum$1$chosenAt$0$0; quorum$1$member$1$0, quorum$0$member$1$2; quorum$0$member$1$3; quorum$1$chosenAt$0$1; quorum$1$member$1$1], EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')): [proposer$1$chosenAt$1$0; proposer$1$promise$1$1, proposer$1$chosenAt$1$1; proposer$1$promise$1$0, proposer$1$start$0$0], EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')): [acceptor$0$member$0$0; acceptor$0$member$0$2; acceptor$1$didNotPromise$0$0, acceptor$0$member$0$1; acceptor$1$didNotPromise$0$1; acceptor$1$member$0$1; acceptor$1$promise$0$0, acceptor$0$member$0$3; acceptor$1$didNotPromise$0$2; acceptor$1$member$0$0; acceptor$1$promise$0$1]}

sort2part_sig: {EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')): quorum$0$member$1$0; quorum$0$member$1$1; quorum$1$chosenAt$0$0; quorum$1$member$1$0 | quorum$0$member$1$2; quorum$0$member$1$3; quorum$1$chosenAt$0$1; quorum$1$member$1$1, EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')): proposer$1$chosenAt$1$0; proposer$1$promise$1$1 | proposer$1$chosenAt$1$1; proposer$1$promise$1$0 | proposer$1$start$0$0, EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')): acceptor$0$member$0$0; acceptor$0$member$0$2; acceptor$1$didNotPromise$0$0 | acceptor$0$member$0$1; acceptor$1$didNotPromise$0$1; acceptor$1$member$0$1; acceptor$1$promise$0$0 | acceptor$0$member$0$3; acceptor$1$didNotPromise$0$2; acceptor$1$member$0$0; acceptor$1$promise$0$1}

	sort: quorum

	identical_classes: {'quorum$0$member$1; quorum$0$member$1; quorum$1$chosenAt$0; quorum$1$member$1': [quorum$0$member$1$0; quorum$0$member$1$1; quorum$1$chosenAt$0$0; quorum$1$member$1$0, quorum$0$member$1$2; quorum$0$member$1$3; quorum$1$chosenAt$0$1; quorum$1$member$1$1]}

	identical_single_classes: {}

	identical_multi_classes: {'quorum$0$member$1; quorum$0$member$1; quorum$1$chosenAt$0; quorum$1$member$1': [quorum$0$member$1$0, quorum$0$member$1$1, quorum$1$chosenAt$0$0, quorum$1$member$1$0, quorum$0$member$1$2, quorum$0$member$1$3, quorum$1$chosenAt$0$1, quorum$1$member$1$1]}

	sort: proposer

	identical_classes: {'proposer$1$chosenAt$1; proposer$1$promise$1': [proposer$1$chosenAt$1$0; proposer$1$promise$1$1, proposer$1$chosenAt$1$1; proposer$1$promise$1$0], 'proposer$1$start$0': [proposer$1$start$0$0]}

	identical_single_classes: {'proposer$1$start$0': proposer$1$start$0$0}

	identical_multi_classes: {'proposer$1$chosenAt$1; proposer$1$promise$1': [proposer$1$chosenAt$1$0, proposer$1$promise$1$1, proposer$1$chosenAt$1$1, proposer$1$promise$1$0]}

	sort: acceptor

	identical_classes: {'acceptor$0$member$0; acceptor$0$member$0; acceptor$1$didNotPromise$0': [acceptor$0$member$0$0; acceptor$0$member$0$2; acceptor$1$didNotPromise$0$0], 'acceptor$0$member$0; acceptor$1$didNotPromise$0; acceptor$1$member$0; acceptor$1$promise$0': [acceptor$0$member$0$1; acceptor$1$didNotPromise$0$1; acceptor$1$member$0$1; acceptor$1$promise$0$0, acceptor$0$member$0$3; acceptor$1$didNotPromise$0$2; acceptor$1$member$0$0; acceptor$1$promise$0$1]}

	identical_single_classes: {'acceptor$0$member$0; acceptor$0$member$0; acceptor$1$didNotPromise$0': acceptor$0$member$0$0; acceptor$0$member$0$2; acceptor$1$didNotPromise$0$0}

	identical_multi_classes: {'acceptor$0$member$0; acceptor$1$didNotPromise$0; acceptor$1$member$0; acceptor$1$promise$0': [acceptor$0$member$0$1, acceptor$1$didNotPromise$0$1, acceptor$1$member$0$1, acceptor$1$promise$0$0, acceptor$0$member$0$3, acceptor$1$didNotPromise$0$2, acceptor$1$member$0$0, acceptor$1$promise$0$1]}


---------- QInference: _set_sort_to_quantifier_mode ----------

quantifier mode: quorum: QuantifierMode.forall

quantifier mode: proposer: QuantifierMode.forall

quantifier mode: acceptor: QuantifierMode.forall


---------- QInference: _set_constraint_mode ----------

constraint mode: ConstraintMode.no_merge


---------- QFormula: _set_qvars ----------

forall_qvars: {Var('QUORUM0', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), Var('ACCEPTOR0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Var('PROPOSER0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))), Var('PROPOSER1', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))), Var('ACCEPTOR2', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Var('QUORUM1', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), Var('ACCEPTOR1', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Var('PROPOSER2', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))}

exists_qvars: set()


---------- QFormula: _set_signed_func_name_to_args ----------

signed_func_name2args: {'1$chosenAt': [[Var('QUORUM0', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), Var('PROPOSER0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))], [Var('QUORUM1', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), Var('PROPOSER1', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))]], '1$didNotPromise': [[Var('ACCEPTOR0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')))], [Var('ACCEPTOR1', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')))], [Var('ACCEPTOR2', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')))]], '1$promise': [[Var('ACCEPTOR1', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Var('PROPOSER1', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))], [Var('ACCEPTOR2', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Var('PROPOSER0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))]], '1$start': [[Var('PROPOSER2', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))]], '0$member': [[Var('ACCEPTOR0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Var('QUORUM0', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')))], [Var('ACCEPTOR1', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Var('QUORUM0', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')))], [Var('ACCEPTOR0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Var('QUORUM1', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')))], [Var('ACCEPTOR2', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Var('QUORUM1', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')))]], '1$member': [[Var('ACCEPTOR2', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Var('QUORUM0', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')))], [Var('ACCEPTOR1', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Var('QUORUM1', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')))]]}


---------- QFormula: _set_qterms ----------

qterms: ['~member(ACCEPTOR1,QUORUM1)', '~chosenAt(QUORUM0,PROPOSER0)', 'member(ACCEPTOR2,QUORUM1)', '~member(ACCEPTOR2,QUORUM0)', '~promise(ACCEPTOR2,PROPOSER0)', '~didNotPromise(ACCEPTOR2)', 'member(ACCEPTOR0,QUORUM1)', '~chosenAt(QUORUM1,PROPOSER1)', '~start(PROPOSER2)', '~didNotPromise(ACCEPTOR0)', 'member(ACCEPTOR0,QUORUM0)', '~didNotPromise(ACCEPTOR1)', '~promise(ACCEPTOR1,PROPOSER1)', 'member(ACCEPTOR1,QUORUM0)']


---------- QFormula: get_qclause ----------

qclause: forall ACCEPTOR0,PROPOSER2,ACCEPTOR2,PROPOSER1,PROPOSER0,ACCEPTOR1,QUORUM0,QUORUM1. member(ACCEPTOR1,QUORUM1) | chosenAt(QUORUM0,PROPOSER0) | ~member(ACCEPTOR2,QUORUM1) | member(ACCEPTOR2,QUORUM0) | promise(ACCEPTOR2,PROPOSER0) | didNotPromise(ACCEPTOR2) | ~member(ACCEPTOR0,QUORUM1) | chosenAt(QUORUM1,PROPOSER1) | start(PROPOSER2) | didNotPromise(ACCEPTOR0) | ~member(ACCEPTOR0,QUORUM0) | didNotPromise(ACCEPTOR1) | promise(ACCEPTOR1,PROPOSER1) | ~member(ACCEPTOR1,QUORUM0) | (PROPOSER0 = PROPOSER2 | ACCEPTOR0 = ACCEPTOR2 | QUORUM0 = QUORUM1 | ACCEPTOR1 = ACCEPTOR2 | PROPOSER1 = PROPOSER2 | ACCEPTOR0 = ACCEPTOR1 | PROPOSER0 = PROPOSER1)


=== Prime Orbit 51 =====================
size : 3
num_suborbits: 1
843 (*) : 0-00-00-0000-------------0-
843     : ['~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~start(proposer1)']
844     : 00-00-00-000--------------0
844     : ['~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~start(proposer2)']
845     : -00-00-00000------------0--
845     : ['~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~start(proposer0)']
num_forall :   0
num_exists :   0
num_literals : 0
quantified form : None
qcost : 0




---------- QPrime ----------


---------- ConstArgBinding ----------

terms: ['~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~start(proposer1)', '~member(acceptor0,quorum__acceptor1_acceptor2)', 'member(acceptor1,quorum__acceptor1_acceptor2)', 'member(acceptor2,quorum__acceptor1_acceptor2)', 'member(acceptor0,quorum__acceptor0_acceptor1)', 'member(acceptor1,quorum__acceptor0_acceptor1)', '~member(acceptor2,quorum__acceptor0_acceptor1)', 'member(acceptor0,quorum__acceptor0_acceptor2)', '~member(acceptor1,quorum__acceptor0_acceptor2)', 'member(acceptor2,quorum__acceptor0_acceptor2)']

sign_func_name2args: {'1$chosenAt': [(Const('quorum__acceptor0_acceptor1', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), Const('proposer0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))), (Const('quorum__acceptor0_acceptor1', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), Const('proposer2', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))), (Const('quorum__acceptor0_acceptor2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), Const('proposer0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))), (Const('quorum__acceptor0_acceptor2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), Const('proposer2', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))), (Const('quorum__acceptor1_acceptor2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), Const('proposer0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))), (Const('quorum__acceptor1_acceptor2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), Const('proposer2', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))))], '1$didNotPromise': [(Const('acceptor0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))),), (Const('acceptor1', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))),), (Const('acceptor2', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))),)], '1$start': [(Const('proposer1', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))),)], '1$member': [(Const('acceptor0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Const('quorum__acceptor1_acceptor2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')))), (Const('acceptor2', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Const('quorum__acceptor0_acceptor1', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')))), (Const('acceptor1', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Const('quorum__acceptor0_acceptor2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))))], '0$member': [(Const('acceptor1', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Const('quorum__acceptor1_acceptor2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')))), (Const('acceptor2', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Const('quorum__acceptor1_acceptor2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')))), (Const('acceptor0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Const('quorum__acceptor0_acceptor1', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')))), (Const('acceptor1', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Const('quorum__acceptor0_acceptor1', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')))), (Const('acceptor0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Const('quorum__acceptor0_acceptor2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')))), (Const('acceptor2', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Const('quorum__acceptor0_acceptor2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))))]}

const2sigs: {Const('quorum__acceptor0_acceptor1', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))): [quorum$1$chosenAt$0$0, quorum$1$chosenAt$0$1, quorum$1$member$1$1, quorum$0$member$1$2, quorum$0$member$1$3], Const('proposer0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))): [proposer$1$chosenAt$1$0, proposer$1$chosenAt$1$2, proposer$1$chosenAt$1$4], Const('proposer2', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))): [proposer$1$chosenAt$1$1, proposer$1$chosenAt$1$3, proposer$1$chosenAt$1$5], Const('quorum__acceptor0_acceptor2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))): [quorum$1$chosenAt$0$2, quorum$1$chosenAt$0$3, quorum$1$member$1$2, quorum$0$member$1$4, quorum$0$member$1$5], Const('quorum__acceptor1_acceptor2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))): [quorum$1$chosenAt$0$4, quorum$1$chosenAt$0$5, quorum$1$member$1$0, quorum$0$member$1$0, quorum$0$member$1$1], Const('acceptor0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))): [acceptor$1$didNotPromise$0$0, acceptor$1$member$0$0, acceptor$0$member$0$2, acceptor$0$member$0$4], Const('acceptor1', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))): [acceptor$1$didNotPromise$0$1, acceptor$1$member$0$2, acceptor$0$member$0$0, acceptor$0$member$0$3], Const('acceptor2', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))): [acceptor$1$didNotPromise$0$2, acceptor$1$member$0$1, acceptor$0$member$0$1, acceptor$0$member$0$5], Const('proposer1', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))): [proposer$1$start$0$0]}

sig2const: {'quorum$1$chosenAt$0$0': Const('quorum__acceptor0_acceptor1', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), 'proposer$1$chosenAt$1$0': Const('proposer0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))), 'quorum$1$chosenAt$0$1': Const('quorum__acceptor0_acceptor1', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), 'proposer$1$chosenAt$1$1': Const('proposer2', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))), 'quorum$1$chosenAt$0$2': Const('quorum__acceptor0_acceptor2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), 'proposer$1$chosenAt$1$2': Const('proposer0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))), 'quorum$1$chosenAt$0$3': Const('quorum__acceptor0_acceptor2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), 'proposer$1$chosenAt$1$3': Const('proposer2', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))), 'quorum$1$chosenAt$0$4': Const('quorum__acceptor1_acceptor2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), 'proposer$1$chosenAt$1$4': Const('proposer0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))), 'quorum$1$chosenAt$0$5': Const('quorum__acceptor1_acceptor2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), 'proposer$1$chosenAt$1$5': Const('proposer2', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))), 'acceptor$1$didNotPromise$0$0': Const('acceptor0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), 'acceptor$1$didNotPromise$0$1': Const('acceptor1', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), 'acceptor$1$didNotPromise$0$2': Const('acceptor2', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), 'proposer$1$start$0$0': Const('proposer1', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))), 'acceptor$1$member$0$0': Const('acceptor0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), 'quorum$1$member$1$0': Const('quorum__acceptor1_acceptor2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), 'acceptor$1$member$0$1': Const('acceptor2', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), 'quorum$1$member$1$1': Const('quorum__acceptor0_acceptor1', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), 'acceptor$1$member$0$2': Const('acceptor1', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), 'quorum$1$member$1$2': Const('quorum__acceptor0_acceptor2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), 'acceptor$0$member$0$0': Const('acceptor1', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), 'quorum$0$member$1$0': Const('quorum__acceptor1_acceptor2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), 'acceptor$0$member$0$1': Const('acceptor2', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), 'quorum$0$member$1$1': Const('quorum__acceptor1_acceptor2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), 'acceptor$0$member$0$2': Const('acceptor0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), 'quorum$0$member$1$2': Const('quorum__acceptor0_acceptor1', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), 'acceptor$0$member$0$3': Const('acceptor1', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), 'quorum$0$member$1$3': Const('quorum__acceptor0_acceptor1', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), 'acceptor$0$member$0$4': Const('acceptor0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), 'quorum$0$member$1$4': Const('quorum__acceptor0_acceptor2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), 'acceptor$0$member$0$5': Const('acceptor2', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), 'quorum$0$member$1$5': Const('quorum__acceptor0_acceptor2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')))}


---------- ArgPartition ----------

sort2class_sigs: {EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')): [quorum$0$member$1$0; quorum$0$member$1$1; quorum$1$chosenAt$0$4; quorum$1$chosenAt$0$5; quorum$1$member$1$0, quorum$0$member$1$2; quorum$0$member$1$3; quorum$1$chosenAt$0$0; quorum$1$chosenAt$0$1; quorum$1$member$1$1, quorum$0$member$1$4; quorum$0$member$1$5; quorum$1$chosenAt$0$2; quorum$1$chosenAt$0$3; quorum$1$member$1$2], EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')): [proposer$1$chosenAt$1$0; proposer$1$chosenAt$1$2; proposer$1$chosenAt$1$4, proposer$1$chosenAt$1$1; proposer$1$chosenAt$1$3; proposer$1$chosenAt$1$5, proposer$1$start$0$0], EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')): [acceptor$0$member$0$0; acceptor$0$member$0$3; acceptor$1$didNotPromise$0$1; acceptor$1$member$0$2, acceptor$0$member$0$1; acceptor$0$member$0$5; acceptor$1$didNotPromise$0$2; acceptor$1$member$0$1, acceptor$0$member$0$2; acceptor$0$member$0$4; acceptor$1$didNotPromise$0$0; acceptor$1$member$0$0]}

sort2part_sig: {EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')): quorum$0$member$1$0; quorum$0$member$1$1; quorum$1$chosenAt$0$4; quorum$1$chosenAt$0$5; quorum$1$member$1$0 | quorum$0$member$1$2; quorum$0$member$1$3; quorum$1$chosenAt$0$0; quorum$1$chosenAt$0$1; quorum$1$member$1$1 | quorum$0$member$1$4; quorum$0$member$1$5; quorum$1$chosenAt$0$2; quorum$1$chosenAt$0$3; quorum$1$member$1$2, EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')): proposer$1$chosenAt$1$0; proposer$1$chosenAt$1$2; proposer$1$chosenAt$1$4 | proposer$1$chosenAt$1$1; proposer$1$chosenAt$1$3; proposer$1$chosenAt$1$5 | proposer$1$start$0$0, EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')): acceptor$0$member$0$0; acceptor$0$member$0$3; acceptor$1$didNotPromise$0$1; acceptor$1$member$0$2 | acceptor$0$member$0$1; acceptor$0$member$0$5; acceptor$1$didNotPromise$0$2; acceptor$1$member$0$1 | acceptor$0$member$0$2; acceptor$0$member$0$4; acceptor$1$didNotPromise$0$0; acceptor$1$member$0$0}

part_sig: ('acceptor$0$member$0$0; acceptor$0$member$0$3; acceptor$1$didNotPromise$0$1; acceptor$1$member$0$2 | acceptor$0$member$0$1; acceptor$0$member$0$5; acceptor$1$didNotPromise$0$2; acceptor$1$member$0$1 | acceptor$0$member$0$2; acceptor$0$member$0$4; acceptor$1$didNotPromise$0$0; acceptor$1$member$0$0', 'proposer$1$chosenAt$1$0; proposer$1$chosenAt$1$2; proposer$1$chosenAt$1$4 | proposer$1$chosenAt$1$1; proposer$1$chosenAt$1$3; proposer$1$chosenAt$1$5 | proposer$1$start$0$0', 'quorum$0$member$1$0; quorum$0$member$1$1; quorum$1$chosenAt$0$4; quorum$1$chosenAt$0$5; quorum$1$member$1$0 | quorum$0$member$1$2; quorum$0$member$1$3; quorum$1$chosenAt$0$0; quorum$1$chosenAt$0$1; quorum$1$member$1$1 | quorum$0$member$1$4; quorum$0$member$1$5; quorum$1$chosenAt$0$2; quorum$1$chosenAt$0$3; quorum$1$member$1$2')


---------- SigGenerator ----------

terms:  ['~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~start(proposer1)', '~member(acceptor0,quorum__acceptor1_acceptor2)', 'member(acceptor1,quorum__acceptor1_acceptor2)', 'member(acceptor2,quorum__acceptor1_acceptor2)', 'member(acceptor0,quorum__acceptor0_acceptor1)', 'member(acceptor1,quorum__acceptor0_acceptor1)', '~member(acceptor2,quorum__acceptor0_acceptor1)', 'member(acceptor0,quorum__acceptor0_acceptor2)', '~member(acceptor1,quorum__acceptor0_acceptor2)', 'member(acceptor2,quorum__acceptor0_acceptor2)']

func_name2symbol:  {'chosenAt': Const('chosenAt', FunctionSort(EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')), EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')), BooleanSort())), 'didNotPromise': Const('didNotPromise', FunctionSort(EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')), BooleanSort())), 'start': Const('start', FunctionSort(EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')), BooleanSort())), 'member': Const('member', FunctionSort(EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')), EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')), BooleanSort()))}

func_name2args_sort:  {'chosenAt': (EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')), EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))), 'didNotPromise': (EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')),), 'start': (EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')),), 'member': (EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')), EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')))}

sign_func_name2count:  {'1$chosenAt': 6, '1$didNotPromise': 3, '1$start': 1, '1$member': 3, '0$member': 6}


---------- ProductArgPartition ----------

sort2class_sigs: {EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')): [quorum$0$member$1$0; quorum$0$member$1$1; quorum$1$chosenAt$0$4; quorum$1$chosenAt$0$5; quorum$1$member$1$0, quorum$0$member$1$2; quorum$0$member$1$3; quorum$1$chosenAt$0$0; quorum$1$chosenAt$0$1; quorum$1$member$1$1, quorum$0$member$1$4; quorum$0$member$1$5; quorum$1$chosenAt$0$2; quorum$1$chosenAt$0$3; quorum$1$member$1$2], EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')): [proposer$1$chosenAt$1$0; proposer$1$chosenAt$1$2; proposer$1$chosenAt$1$4, proposer$1$chosenAt$1$1; proposer$1$chosenAt$1$3; proposer$1$chosenAt$1$5, proposer$1$start$0$0], EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')): [acceptor$0$member$0$0; acceptor$0$member$0$3; acceptor$1$didNotPromise$0$1; acceptor$1$member$0$2, acceptor$0$member$0$1; acceptor$0$member$0$5; acceptor$1$didNotPromise$0$2; acceptor$1$member$0$1, acceptor$0$member$0$2; acceptor$0$member$0$4; acceptor$1$didNotPromise$0$0; acceptor$1$member$0$0]}

sort2part_sig: {EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')): quorum$0$member$1$0; quorum$0$member$1$1; quorum$1$chosenAt$0$4; quorum$1$chosenAt$0$5; quorum$1$member$1$0 | quorum$0$member$1$2; quorum$0$member$1$3; quorum$1$chosenAt$0$0; quorum$1$chosenAt$0$1; quorum$1$member$1$1 | quorum$0$member$1$4; quorum$0$member$1$5; quorum$1$chosenAt$0$2; quorum$1$chosenAt$0$3; quorum$1$member$1$2, EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')): proposer$1$chosenAt$1$0; proposer$1$chosenAt$1$2; proposer$1$chosenAt$1$4 | proposer$1$chosenAt$1$1; proposer$1$chosenAt$1$3; proposer$1$chosenAt$1$5 | proposer$1$start$0$0, EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')): acceptor$0$member$0$0; acceptor$0$member$0$3; acceptor$1$didNotPromise$0$1; acceptor$1$member$0$2 | acceptor$0$member$0$1; acceptor$0$member$0$5; acceptor$1$didNotPromise$0$2; acceptor$1$member$0$1 | acceptor$0$member$0$2; acceptor$0$member$0$4; acceptor$1$didNotPromise$0$0; acceptor$1$member$0$0}

	sort: quorum

	identical_classes: {'quorum$0$member$1; quorum$0$member$1; quorum$1$chosenAt$0; quorum$1$chosenAt$0; quorum$1$member$1': [quorum$0$member$1$0; quorum$0$member$1$1; quorum$1$chosenAt$0$4; quorum$1$chosenAt$0$5; quorum$1$member$1$0, quorum$0$member$1$2; quorum$0$member$1$3; quorum$1$chosenAt$0$0; quorum$1$chosenAt$0$1; quorum$1$member$1$1, quorum$0$member$1$4; quorum$0$member$1$5; quorum$1$chosenAt$0$2; quorum$1$chosenAt$0$3; quorum$1$member$1$2]}

	identical_single_classes: {}

	identical_multi_classes: {'quorum$0$member$1; quorum$0$member$1; quorum$1$chosenAt$0; quorum$1$chosenAt$0; quorum$1$member$1': [quorum$0$member$1$0, quorum$0$member$1$1, quorum$1$chosenAt$0$4, quorum$1$chosenAt$0$5, quorum$1$member$1$0, quorum$0$member$1$2, quorum$0$member$1$3, quorum$1$chosenAt$0$0, quorum$1$chosenAt$0$1, quorum$1$member$1$1, quorum$0$member$1$4, quorum$0$member$1$5, quorum$1$chosenAt$0$2, quorum$1$chosenAt$0$3, quorum$1$member$1$2]}

	sort: proposer

	identical_classes: {'proposer$1$chosenAt$1; proposer$1$chosenAt$1; proposer$1$chosenAt$1': [proposer$1$chosenAt$1$0; proposer$1$chosenAt$1$2; proposer$1$chosenAt$1$4, proposer$1$chosenAt$1$1; proposer$1$chosenAt$1$3; proposer$1$chosenAt$1$5], 'proposer$1$start$0': [proposer$1$start$0$0]}

	identical_single_classes: {'proposer$1$start$0': proposer$1$start$0$0}

	identical_multi_classes: {'proposer$1$chosenAt$1; proposer$1$chosenAt$1; proposer$1$chosenAt$1': [proposer$1$chosenAt$1$0, proposer$1$chosenAt$1$2, proposer$1$chosenAt$1$4, proposer$1$chosenAt$1$1, proposer$1$chosenAt$1$3, proposer$1$chosenAt$1$5]}

	sort: acceptor

	identical_classes: {'acceptor$0$member$0; acceptor$0$member$0; acceptor$1$didNotPromise$0; acceptor$1$member$0': [acceptor$0$member$0$0; acceptor$0$member$0$3; acceptor$1$didNotPromise$0$1; acceptor$1$member$0$2, acceptor$0$member$0$1; acceptor$0$member$0$5; acceptor$1$didNotPromise$0$2; acceptor$1$member$0$1, acceptor$0$member$0$2; acceptor$0$member$0$4; acceptor$1$didNotPromise$0$0; acceptor$1$member$0$0]}

	identical_single_classes: {}

	identical_multi_classes: {'acceptor$0$member$0; acceptor$0$member$0; acceptor$1$didNotPromise$0; acceptor$1$member$0': [acceptor$0$member$0$0, acceptor$0$member$0$3, acceptor$1$didNotPromise$0$1, acceptor$1$member$0$2, acceptor$0$member$0$1, acceptor$0$member$0$5, acceptor$1$didNotPromise$0$2, acceptor$1$member$0$1, acceptor$0$member$0$2, acceptor$0$member$0$4, acceptor$1$didNotPromise$0$0, acceptor$1$member$0$0]}


---------- QInference: _set_sort_to_quantifier_mode ----------

quantifier mode: quorum: QuantifierMode.forall

quantifier mode: proposer: QuantifierMode.forall_exists

quantifier mode: acceptor: QuantifierMode.forall


---------- QInference: _set_constraint_mode ----------

constraint mode: ConstraintMode.no_merge


---------- QFormula: _set_qvars ----------

forall_qvars: {Var('QUORUM2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), Var('QUORUM0', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), Var('ACCEPTOR0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Var('PROPOSER1', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))), Var('ACCEPTOR2', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Var('QUORUM1', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), Var('ACCEPTOR1', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')))}

exists_qvars: {Var('PROPOSER0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))}


---------- QFormula: _set_signed_func_name_to_args ----------

signed_func_name2args: {'1$chosenAt': [[Var('QUORUM1', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), Var('PROPOSER0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))], [Var('QUORUM1', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), Var('PROPOSER0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))], [Var('QUORUM2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), Var('PROPOSER0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))], [Var('QUORUM2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), Var('PROPOSER0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))], [Var('QUORUM0', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), Var('PROPOSER0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))], [Var('QUORUM0', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), Var('PROPOSER0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))]], '1$didNotPromise': [[Var('ACCEPTOR2', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')))], [Var('ACCEPTOR0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')))], [Var('ACCEPTOR1', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')))]], '1$start': [[Var('PROPOSER1', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))]], '1$member': [[Var('ACCEPTOR2', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Var('QUORUM0', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')))], [Var('ACCEPTOR1', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Var('QUORUM1', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')))], [Var('ACCEPTOR0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Var('QUORUM2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')))]], '0$member': [[Var('ACCEPTOR0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Var('QUORUM0', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')))], [Var('ACCEPTOR1', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Var('QUORUM0', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')))], [Var('ACCEPTOR2', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Var('QUORUM1', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')))], [Var('ACCEPTOR0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Var('QUORUM1', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')))], [Var('ACCEPTOR2', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Var('QUORUM2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')))], [Var('ACCEPTOR1', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Var('QUORUM2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')))]]}


---------- QFormula: _set_qterms ----------

qterms: ['~member(ACCEPTOR1,QUORUM1)', '~chosenAt(QUORUM0,PROPOSER0)', '~chosenAt(QUORUM2,PROPOSER0)', '~member(ACCEPTOR2,QUORUM0)', 'member(ACCEPTOR2,QUORUM1)', '~member(ACCEPTOR0,QUORUM2)', '~didNotPromise(ACCEPTOR2)', '~start(PROPOSER1)', 'member(ACCEPTOR0,QUORUM1)', '~didNotPromise(ACCEPTOR0)', 'member(ACCEPTOR0,QUORUM0)', 'member(ACCEPTOR1,QUORUM2)', '~chosenAt(QUORUM1,PROPOSER0)', '~didNotPromise(ACCEPTOR1)', 'member(ACCEPTOR2,QUORUM2)', 'member(ACCEPTOR1,QUORUM0)']


---------- QFormula: get_qclause ----------

qclause: forall ACCEPTOR0,ACCEPTOR2,PROPOSER1,QUORUM2,ACCEPTOR1,QUORUM0,QUORUM1. member(ACCEPTOR1,QUORUM1) | member(ACCEPTOR2,QUORUM0) | ~member(ACCEPTOR2,QUORUM1) | member(ACCEPTOR0,QUORUM2) | didNotPromise(ACCEPTOR2) | start(PROPOSER1) | ~member(ACCEPTOR0,QUORUM1) | didNotPromise(ACCEPTOR0) | ~member(ACCEPTOR0,QUORUM0) | ~member(ACCEPTOR1,QUORUM2) | didNotPromise(ACCEPTOR1) | ~member(ACCEPTOR2,QUORUM2) | ~member(ACCEPTOR1,QUORUM0) | (exists PROPOSER0. ((chosenAt(QUORUM0,PROPOSER0) | chosenAt(QUORUM2,PROPOSER0) | chosenAt(QUORUM1,PROPOSER0)) & PROPOSER0 ~= PROPOSER1)) | (ACCEPTOR0 = ACCEPTOR2 | QUORUM0 = QUORUM2 | QUORUM0 = QUORUM1 | ACCEPTOR1 = ACCEPTOR2 | QUORUM1 = QUORUM2 | ACCEPTOR0 = ACCEPTOR1)


=======================================================================================================================

	[QI RESULT]: Quantified Prime Orbits on [ivybench/sym_quorum/ivy/simple-election: acceptor=3,proposer=3]

=======================================================================================================================


=== Prime Orbit 7 =====================
size : 9
num_suborbits: 1
135 (*) : ----------------------11---
135     : ['promise(acceptor2,proposer1)', 'promise(acceptor2,proposer2)']
136     : ---------------------1-1---
136     : ['promise(acceptor2,proposer0)', 'promise(acceptor2,proposer2)']
137     : ---------------------11----
137     : ['promise(acceptor2,proposer0)', 'promise(acceptor2,proposer1)']
138     : -------------------11------
138     : ['promise(acceptor1,proposer1)', 'promise(acceptor1,proposer2)']
139     : ------------------1-1------
139     : ['promise(acceptor1,proposer0)', 'promise(acceptor1,proposer2)']
140     : ------------------11-------
140     : ['promise(acceptor1,proposer0)', 'promise(acceptor1,proposer1)']
141     : ----------------11---------
141     : ['promise(acceptor0,proposer1)', 'promise(acceptor0,proposer2)']
142     : ---------------1-1---------
142     : ['promise(acceptor0,proposer0)', 'promise(acceptor0,proposer2)']
143     : ---------------11----------
143     : ['promise(acceptor0,proposer0)', 'promise(acceptor0,proposer1)']
num_forall :   3
num_exists :   0
num_literals : 3
quantified form : forall PROPOSER1,ACCEPTOR0,PROPOSER0. ~promise(ACCEPTOR0,PROPOSER0) | ~promise(ACCEPTOR0,PROPOSER1) | PROPOSER0 = PROPOSER1
qcost : 6




=== Prime Orbit 5 =====================
size : 9
num_suborbits: 1
90 (*) : --1-----------------------0
90     : ['chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~start(proposer2)']
91     : -1-----------------------0-
91     : ['chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~start(proposer1)']
92     : 1-----------------------0--
92     : ['chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~start(proposer0)']
93     : -----1--------------------0
93     : ['chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~start(proposer2)']
94     : ----1--------------------0-
94     : ['chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~start(proposer1)']
95     : ---1--------------------0--
95     : ['chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~start(proposer0)']
96     : --------1-----------------0
96     : ['chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~start(proposer2)']
97     : -------1-----------------0-
97     : ['chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~start(proposer1)']
98     : ------1-----------------0--
98     : ['chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~start(proposer0)']
num_forall :   2
num_exists :   0
num_literals : 2
quantified form : forall QUORUM0,PROPOSER0. start(PROPOSER0) | ~chosenAt(QUORUM0,PROPOSER0)
qcost : 4




=== Prime Orbit 6 =====================
size : 18
num_suborbits: 1
117 (*) : --1---------1--------------
117     : ['chosenAt(quorum__acceptor0_acceptor1,proposer2)', 'leader(proposer0)']
118     : -1----------1--------------
118     : ['chosenAt(quorum__acceptor0_acceptor1,proposer1)', 'leader(proposer0)']
119     : --1----------1-------------
119     : ['chosenAt(quorum__acceptor0_acceptor1,proposer2)', 'leader(proposer1)']
120     : 1------------1-------------
120     : ['chosenAt(quorum__acceptor0_acceptor1,proposer0)', 'leader(proposer1)']
121     : -1------------1------------
121     : ['chosenAt(quorum__acceptor0_acceptor1,proposer1)', 'leader(proposer2)']
122     : 1-------------1------------
122     : ['chosenAt(quorum__acceptor0_acceptor1,proposer0)', 'leader(proposer2)']
123     : -----1------1--------------
123     : ['chosenAt(quorum__acceptor0_acceptor2,proposer2)', 'leader(proposer0)']
124     : ----1-------1--------------
124     : ['chosenAt(quorum__acceptor0_acceptor2,proposer1)', 'leader(proposer0)']
125     : -----1-------1-------------
125     : ['chosenAt(quorum__acceptor0_acceptor2,proposer2)', 'leader(proposer1)']
126     : ---1---------1-------------
126     : ['chosenAt(quorum__acceptor0_acceptor2,proposer0)', 'leader(proposer1)']
127     : ----1---------1------------
127     : ['chosenAt(quorum__acceptor0_acceptor2,proposer1)', 'leader(proposer2)']
128     : ---1----------1------------
128     : ['chosenAt(quorum__acceptor0_acceptor2,proposer0)', 'leader(proposer2)']
129     : --------1---1--------------
129     : ['chosenAt(quorum__acceptor1_acceptor2,proposer2)', 'leader(proposer0)']
130     : -------1----1--------------
130     : ['chosenAt(quorum__acceptor1_acceptor2,proposer1)', 'leader(proposer0)']
131     : --------1----1-------------
131     : ['chosenAt(quorum__acceptor1_acceptor2,proposer2)', 'leader(proposer1)']
132     : ------1------1-------------
132     : ['chosenAt(quorum__acceptor1_acceptor2,proposer0)', 'leader(proposer1)']
133     : -------1------1------------
133     : ['chosenAt(quorum__acceptor1_acceptor2,proposer1)', 'leader(proposer2)']
134     : ------1-------1------------
134     : ['chosenAt(quorum__acceptor1_acceptor2,proposer0)', 'leader(proposer2)']
num_forall :   3
num_exists :   0
num_literals : 3
quantified form : forall PROPOSER1,QUORUM0,PROPOSER0. ~chosenAt(QUORUM0,PROPOSER0) | ~leader(PROPOSER1) | PROPOSER0 = PROPOSER1
qcost : 6




=== Prime Orbit 8 =====================
size : 3
num_suborbits: 1
144 (*) : -------------11------------
144     : ['leader(proposer1)', 'leader(proposer2)']
145     : ------------1-1------------
145     : ['leader(proposer0)', 'leader(proposer2)']
146     : ------------11-------------
146     : ['leader(proposer0)', 'leader(proposer1)']
num_forall :   2
num_exists :   0
num_literals : 3
quantified form : forall PROPOSER1,PROPOSER0. ~leader(PROPOSER1) | ~leader(PROPOSER0) | PROPOSER0 = PROPOSER1
qcost : 5




=== Prime Orbit 9 =====================
size : 9
num_suborbits: 1
147 (*) : -----------------1--------0
147     : ['promise(acceptor0,proposer2)', '~start(proposer2)']
148     : ----------------1--------0-
148     : ['promise(acceptor0,proposer1)', '~start(proposer1)']
149     : ---------------1--------0--
149     : ['promise(acceptor0,proposer0)', '~start(proposer0)']
150     : --------------------1-----0
150     : ['promise(acceptor1,proposer2)', '~start(proposer2)']
151     : -------------------1-----0-
151     : ['promise(acceptor1,proposer1)', '~start(proposer1)']
152     : ------------------1-----0--
152     : ['promise(acceptor1,proposer0)', '~start(proposer0)']
153     : -----------------------1--0
153     : ['promise(acceptor2,proposer2)', '~start(proposer2)']
154     : ----------------------1--0-
154     : ['promise(acceptor2,proposer1)', '~start(proposer1)']
155     : ---------------------1--0--
155     : ['promise(acceptor2,proposer0)', '~start(proposer0)']
num_forall :   2
num_exists :   0
num_literals : 2
quantified form : forall ACCEPTOR0,PROPOSER0. ~promise(ACCEPTOR0,PROPOSER0) | start(PROPOSER0)
qcost : 4




=== Prime Orbit 10 =====================
size : 3
num_suborbits: 1
156 (*) : --------------1-----------0
156     : ['leader(proposer2)', '~start(proposer2)']
157     : -------------1-----------0-
157     : ['leader(proposer1)', '~start(proposer1)']
158     : ------------1-----------0--
158     : ['leader(proposer0)', '~start(proposer0)']
num_forall :   1
num_exists :   0
num_literals : 2
quantified form : forall PROPOSER0. start(PROPOSER0) | ~leader(PROPOSER0)
qcost : 3




=== Prime Orbit 13 =====================
size : 9
num_suborbits: 1
186 (*) : ----0--------1-----0-------
186     : ['leader(proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~promise(acceptor1,proposer1)']
187     : -----0--------1-----0------
187     : ['leader(proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~promise(acceptor1,proposer2)']
188     : ---0--------1-----0--------
188     : ['leader(proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~promise(acceptor1,proposer0)']
189     : -0-----------1--------0----
189     : ['leader(proposer1)', '~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~promise(acceptor2,proposer1)']
190     : --0-----------1--------0---
190     : ['leader(proposer2)', '~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~promise(acceptor2,proposer2)']
191     : 0-----------1--------0-----
191     : ['leader(proposer0)', '~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~promise(acceptor2,proposer0)']
192     : -------0-----1--0----------
192     : ['leader(proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~promise(acceptor0,proposer1)']
193     : --------0-----1--0---------
193     : ['leader(proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~promise(acceptor0,proposer2)']
194     : ------0-----1--0-----------
194     : ['leader(proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~promise(acceptor0,proposer0)']
num_forall :   3
num_exists :   0
num_literals : 4
quantified form : forall QUORUM0,PROPOSER0,ACCEPTOR0. chosenAt(QUORUM0,PROPOSER0) | member(ACCEPTOR0,QUORUM0) | promise(ACCEPTOR0,PROPOSER0) | ~leader(PROPOSER0)
qcost : 7




=== Prime Orbit 14 =====================
size : 18
num_suborbits: 1
195 (*) : -----------1-1-----0-------
195     : ['didNotPromise(acceptor2)', 'leader(proposer1)', '~promise(acceptor1,proposer1)']
196     : -----------1--1-----0------
196     : ['didNotPromise(acceptor2)', 'leader(proposer2)', '~promise(acceptor1,proposer2)']
197     : -----------11-----0--------
197     : ['didNotPromise(acceptor2)', 'leader(proposer0)', '~promise(acceptor1,proposer0)']
198     : ----------1--1--------0----
198     : ['didNotPromise(acceptor1)', 'leader(proposer1)', '~promise(acceptor2,proposer1)']
199     : ----------1---1--------0---
199     : ['didNotPromise(acceptor1)', 'leader(proposer2)', '~promise(acceptor2,proposer2)']
200     : ----------1-1--------0-----
200     : ['didNotPromise(acceptor1)', 'leader(proposer0)', '~promise(acceptor2,proposer0)']
201     : -----------1-1--0----------
201     : ['didNotPromise(acceptor2)', 'leader(proposer1)', '~promise(acceptor0,proposer1)']
202     : -----------1--1--0---------
202     : ['didNotPromise(acceptor2)', 'leader(proposer2)', '~promise(acceptor0,proposer2)']
203     : -----------11--0-----------
203     : ['didNotPromise(acceptor2)', 'leader(proposer0)', '~promise(acceptor0,proposer0)']
204     : ---------1---1--------0----
204     : ['didNotPromise(acceptor0)', 'leader(proposer1)', '~promise(acceptor2,proposer1)']
205     : ---------1----1--------0---
205     : ['didNotPromise(acceptor0)', 'leader(proposer2)', '~promise(acceptor2,proposer2)']
206     : ---------1--1--------0-----
206     : ['didNotPromise(acceptor0)', 'leader(proposer0)', '~promise(acceptor2,proposer0)']
207     : ----------1--1--0----------
207     : ['didNotPromise(acceptor1)', 'leader(proposer1)', '~promise(acceptor0,proposer1)']
208     : ----------1---1--0---------
208     : ['didNotPromise(acceptor1)', 'leader(proposer2)', '~promise(acceptor0,proposer2)']
209     : ----------1-1--0-----------
209     : ['didNotPromise(acceptor1)', 'leader(proposer0)', '~promise(acceptor0,proposer0)']
210     : ---------1---1-----0-------
210     : ['didNotPromise(acceptor0)', 'leader(proposer1)', '~promise(acceptor1,proposer1)']
211     : ---------1----1-----0------
211     : ['didNotPromise(acceptor0)', 'leader(proposer2)', '~promise(acceptor1,proposer2)']
212     : ---------1--1-----0--------
212     : ['didNotPromise(acceptor0)', 'leader(proposer0)', '~promise(acceptor1,proposer0)']
num_forall :   3
num_exists :   0
num_literals : 4
quantified form : forall ACCEPTOR1,ACCEPTOR0,PROPOSER0. promise(ACCEPTOR1,PROPOSER0) | ~didNotPromise(ACCEPTOR0) | ~leader(PROPOSER0) | ACCEPTOR0 = ACCEPTOR1
qcost : 7




=== Prime Orbit 15 =====================
size : 9
num_suborbits: 1
213 (*) : -------------1-----0--0----
213     : ['leader(proposer1)', '~promise(acceptor1,proposer1)', '~promise(acceptor2,proposer1)']
214     : --------------1-----0--0---
214     : ['leader(proposer2)', '~promise(acceptor1,proposer2)', '~promise(acceptor2,proposer2)']
215     : ------------1-----0--0-----
215     : ['leader(proposer0)', '~promise(acceptor1,proposer0)', '~promise(acceptor2,proposer0)']
216     : -------------1--0-----0----
216     : ['leader(proposer1)', '~promise(acceptor0,proposer1)', '~promise(acceptor2,proposer1)']
217     : --------------1--0-----0---
217     : ['leader(proposer2)', '~promise(acceptor0,proposer2)', '~promise(acceptor2,proposer2)']
218     : ------------1--0-----0-----
218     : ['leader(proposer0)', '~promise(acceptor0,proposer0)', '~promise(acceptor2,proposer0)']
219     : -------------1--0--0-------
219     : ['leader(proposer1)', '~promise(acceptor0,proposer1)', '~promise(acceptor1,proposer1)']
220     : --------------1--0--0------
220     : ['leader(proposer2)', '~promise(acceptor0,proposer2)', '~promise(acceptor1,proposer2)']
221     : ------------1--0--0--------
221     : ['leader(proposer0)', '~promise(acceptor0,proposer0)', '~promise(acceptor1,proposer0)']
num_forall :   3
num_exists :   0
num_literals : 4
quantified form : forall ACCEPTOR1,ACCEPTOR0,PROPOSER0. promise(ACCEPTOR1,PROPOSER0) | promise(ACCEPTOR0,PROPOSER0) | ~leader(PROPOSER0) | ACCEPTOR0 = ACCEPTOR1
qcost : 7




=== Prime Orbit 16 =====================
size : 9
num_suborbits: 1
222 (*) : ----0-----1--1-------------
222     : ['didNotPromise(acceptor1)', 'leader(proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)']
223     : -----0----1---1------------
223     : ['didNotPromise(acceptor1)', 'leader(proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)']
224     : ---0------1-1--------------
224     : ['didNotPromise(acceptor1)', 'leader(proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)']
225     : -0---------1-1-------------
225     : ['didNotPromise(acceptor2)', 'leader(proposer1)', '~chosenAt(quorum__acceptor0_acceptor1,proposer1)']
226     : --0--------1--1------------
226     : ['didNotPromise(acceptor2)', 'leader(proposer2)', '~chosenAt(quorum__acceptor0_acceptor1,proposer2)']
227     : 0----------11--------------
227     : ['didNotPromise(acceptor2)', 'leader(proposer0)', '~chosenAt(quorum__acceptor0_acceptor1,proposer0)']
228     : -------0-1---1-------------
228     : ['didNotPromise(acceptor0)', 'leader(proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)']
229     : --------01----1------------
229     : ['didNotPromise(acceptor0)', 'leader(proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)']
230     : ------0--1--1--------------
230     : ['didNotPromise(acceptor0)', 'leader(proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)']
num_forall :   3
num_exists :   0
num_literals : 4
quantified form : forall QUORUM0,PROPOSER0,ACCEPTOR0. chosenAt(QUORUM0,PROPOSER0) | member(ACCEPTOR0,QUORUM0) | ~didNotPromise(ACCEPTOR0) | ~leader(PROPOSER0)
qcost : 7




=== Prime Orbit 17 =====================
size : 9
num_suborbits: 1
231 (*) : ----------11-1-------------
231     : ['didNotPromise(acceptor1)', 'didNotPromise(acceptor2)', 'leader(proposer1)']
232     : ----------11--1------------
232     : ['didNotPromise(acceptor1)', 'didNotPromise(acceptor2)', 'leader(proposer2)']
233     : ----------111--------------
233     : ['didNotPromise(acceptor1)', 'didNotPromise(acceptor2)', 'leader(proposer0)']
234     : ---------1-1-1-------------
234     : ['didNotPromise(acceptor0)', 'didNotPromise(acceptor2)', 'leader(proposer1)']
235     : ---------1-1--1------------
235     : ['didNotPromise(acceptor0)', 'didNotPromise(acceptor2)', 'leader(proposer2)']
236     : ---------1-11--------------
236     : ['didNotPromise(acceptor0)', 'didNotPromise(acceptor2)', 'leader(proposer0)']
237     : ---------11--1-------------
237     : ['didNotPromise(acceptor0)', 'didNotPromise(acceptor1)', 'leader(proposer1)']
238     : ---------11---1------------
238     : ['didNotPromise(acceptor0)', 'didNotPromise(acceptor1)', 'leader(proposer2)']
239     : ---------11-1--------------
239     : ['didNotPromise(acceptor0)', 'didNotPromise(acceptor1)', 'leader(proposer0)']
num_forall :   3
num_exists :   0
num_literals : 4
quantified form : forall ACCEPTOR1,ACCEPTOR0,PROPOSER0. ~didNotPromise(ACCEPTOR1) | ~didNotPromise(ACCEPTOR0) | ~leader(PROPOSER0) | ACCEPTOR0 = ACCEPTOR1
qcost : 7




=== Prime Orbit 18 =====================
size : 18
num_suborbits: 1
240 (*) : -------0-----1---1---------
240     : ['leader(proposer1)', 'promise(acceptor0,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)']
241     : --------0-----1-1----------
241     : ['leader(proposer2)', 'promise(acceptor0,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)']
242     : ------0-----1----1---------
242     : ['leader(proposer0)', 'promise(acceptor0,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)']
243     : --------0-----11-----------
243     : ['leader(proposer2)', 'promise(acceptor0,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)']
244     : ------0-----1---1----------
244     : ['leader(proposer0)', 'promise(acceptor0,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)']
245     : -------0-----1-1-----------
245     : ['leader(proposer1)', 'promise(acceptor0,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)']
246     : ----0--------1------1------
246     : ['leader(proposer1)', 'promise(acceptor1,proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)']
247     : -----0--------1----1-------
247     : ['leader(proposer2)', 'promise(acceptor1,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)']
248     : ---0--------1-------1------
248     : ['leader(proposer0)', 'promise(acceptor1,proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)']
249     : -----0--------1---1--------
249     : ['leader(proposer2)', 'promise(acceptor1,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)']
250     : ---0--------1------1-------
250     : ['leader(proposer0)', 'promise(acceptor1,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)']
251     : ----0--------1----1--------
251     : ['leader(proposer1)', 'promise(acceptor1,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)']
252     : -0-----------1---------1---
252     : ['leader(proposer1)', 'promise(acceptor2,proposer2)', '~chosenAt(quorum__acceptor0_acceptor1,proposer1)']
253     : --0-----------1-------1----
253     : ['leader(proposer2)', 'promise(acceptor2,proposer1)', '~chosenAt(quorum__acceptor0_acceptor1,proposer2)']
254     : 0-----------1----------1---
254     : ['leader(proposer0)', 'promise(acceptor2,proposer2)', '~chosenAt(quorum__acceptor0_acceptor1,proposer0)']
255     : --0-----------1------1-----
255     : ['leader(proposer2)', 'promise(acceptor2,proposer0)', '~chosenAt(quorum__acceptor0_acceptor1,proposer2)']
256     : 0-----------1---------1----
256     : ['leader(proposer0)', 'promise(acceptor2,proposer1)', '~chosenAt(quorum__acceptor0_acceptor1,proposer0)']
257     : -0-----------1-------1-----
257     : ['leader(proposer1)', 'promise(acceptor2,proposer0)', '~chosenAt(quorum__acceptor0_acceptor1,proposer1)']
num_forall :   4
num_exists :   0
num_literals : 5
quantified form : forall PROPOSER1,QUORUM0,PROPOSER0,ACCEPTOR0. chosenAt(QUORUM0,PROPOSER0) | member(ACCEPTOR0,QUORUM0) | ~promise(ACCEPTOR0,PROPOSER1) | ~leader(PROPOSER0) | PROPOSER0 = PROPOSER1
qcost : 9




=== Prime Orbit 19 =====================
size : 36
num_suborbits: 1
258 (*) : -------------1---1----0----
258     : ['leader(proposer1)', 'promise(acceptor0,proposer2)', '~promise(acceptor2,proposer1)']
259     : --------------1-1------0---
259     : ['leader(proposer2)', 'promise(acceptor0,proposer1)', '~promise(acceptor2,proposer2)']
260     : ------------1----1---0-----
260     : ['leader(proposer0)', 'promise(acceptor0,proposer2)', '~promise(acceptor2,proposer0)']
261     : --------------11-------0---
261     : ['leader(proposer2)', 'promise(acceptor0,proposer0)', '~promise(acceptor2,proposer2)']
262     : ------------1---1----0-----
262     : ['leader(proposer0)', 'promise(acceptor0,proposer1)', '~promise(acceptor2,proposer0)']
263     : -------------1-1------0----
263     : ['leader(proposer1)', 'promise(acceptor0,proposer0)', '~promise(acceptor2,proposer1)']
264     : -------------1---1-0-------
264     : ['leader(proposer1)', 'promise(acceptor0,proposer2)', '~promise(acceptor1,proposer1)']
265     : --------------1-1---0------
265     : ['leader(proposer2)', 'promise(acceptor0,proposer1)', '~promise(acceptor1,proposer2)']
266     : ------------1----10--------
266     : ['leader(proposer0)', 'promise(acceptor0,proposer2)', '~promise(acceptor1,proposer0)']
267     : --------------11----0------
267     : ['leader(proposer2)', 'promise(acceptor0,proposer0)', '~promise(acceptor1,proposer2)']
268     : ------------1---1-0--------
268     : ['leader(proposer0)', 'promise(acceptor0,proposer1)', '~promise(acceptor1,proposer0)']
269     : -------------1-1---0-------
269     : ['leader(proposer1)', 'promise(acceptor0,proposer0)', '~promise(acceptor1,proposer1)']
270     : -------------1------1-0----
270     : ['leader(proposer1)', 'promise(acceptor1,proposer2)', '~promise(acceptor2,proposer1)']
271     : --------------1----1---0---
271     : ['leader(proposer2)', 'promise(acceptor1,proposer1)', '~promise(acceptor2,proposer2)']
272     : ------------1-------10-----
272     : ['leader(proposer0)', 'promise(acceptor1,proposer2)', '~promise(acceptor2,proposer0)']
273     : --------------1---1----0---
273     : ['leader(proposer2)', 'promise(acceptor1,proposer0)', '~promise(acceptor2,proposer2)']
274     : ------------1------1-0-----
274     : ['leader(proposer0)', 'promise(acceptor1,proposer1)', '~promise(acceptor2,proposer0)']
275     : -------------1----1---0----
275     : ['leader(proposer1)', 'promise(acceptor1,proposer0)', '~promise(acceptor2,proposer1)']
276     : -------------1--0---1------
276     : ['leader(proposer1)', 'promise(acceptor1,proposer2)', '~promise(acceptor0,proposer1)']
277     : --------------1--0-1-------
277     : ['leader(proposer2)', 'promise(acceptor1,proposer1)', '~promise(acceptor0,proposer2)']
278     : ------------1--0----1------
278     : ['leader(proposer0)', 'promise(acceptor1,proposer2)', '~promise(acceptor0,proposer0)']
279     : --------------1--01--------
279     : ['leader(proposer2)', 'promise(acceptor1,proposer0)', '~promise(acceptor0,proposer2)']
280     : ------------1--0---1-------
280     : ['leader(proposer0)', 'promise(acceptor1,proposer1)', '~promise(acceptor0,proposer0)']
281     : -------------1--0-1--------
281     : ['leader(proposer1)', 'promise(acceptor1,proposer0)', '~promise(acceptor0,proposer1)']
282     : -------------1-----0---1---
282     : ['leader(proposer1)', 'promise(acceptor2,proposer2)', '~promise(acceptor1,proposer1)']
283     : --------------1-----0-1----
283     : ['leader(proposer2)', 'promise(acceptor2,proposer1)', '~promise(acceptor1,proposer2)']
284     : ------------1-----0----1---
284     : ['leader(proposer0)', 'promise(acceptor2,proposer2)', '~promise(acceptor1,proposer0)']
285     : --------------1-----01-----
285     : ['leader(proposer2)', 'promise(acceptor2,proposer0)', '~promise(acceptor1,proposer2)']
286     : ------------1-----0---1----
286     : ['leader(proposer0)', 'promise(acceptor2,proposer1)', '~promise(acceptor1,proposer0)']
287     : -------------1-----0-1-----
287     : ['leader(proposer1)', 'promise(acceptor2,proposer0)', '~promise(acceptor1,proposer1)']
288     : -------------1--0------1---
288     : ['leader(proposer1)', 'promise(acceptor2,proposer2)', '~promise(acceptor0,proposer1)']
289     : --------------1--0----1----
289     : ['leader(proposer2)', 'promise(acceptor2,proposer1)', '~promise(acceptor0,proposer2)']
290     : ------------1--0-------1---
290     : ['leader(proposer0)', 'promise(acceptor2,proposer2)', '~promise(acceptor0,proposer0)']
291     : --------------1--0---1-----
291     : ['leader(proposer2)', 'promise(acceptor2,proposer0)', '~promise(acceptor0,proposer2)']
292     : ------------1--0------1----
292     : ['leader(proposer0)', 'promise(acceptor2,proposer1)', '~promise(acceptor0,proposer0)']
293     : -------------1--0----1-----
293     : ['leader(proposer1)', 'promise(acceptor2,proposer0)', '~promise(acceptor0,proposer1)']
num_forall :   4
num_exists :   0
num_literals : 5
quantified form : forall PROPOSER1,ACCEPTOR0,ACCEPTOR1,PROPOSER0. promise(ACCEPTOR1,PROPOSER0) | ~promise(ACCEPTOR0,PROPOSER1) | ~leader(PROPOSER0) | (ACCEPTOR0 = ACCEPTOR1 | PROPOSER0 = PROPOSER1)
qcost : 9




=== Prime Orbit 20 =====================
size : 36
num_suborbits: 1
294 (*) : ----------1--1---1---------
294     : ['didNotPromise(acceptor1)', 'leader(proposer1)', 'promise(acceptor0,proposer2)']
295     : ----------1---1-1----------
295     : ['didNotPromise(acceptor1)', 'leader(proposer2)', 'promise(acceptor0,proposer1)']
296     : ----------1-1----1---------
296     : ['didNotPromise(acceptor1)', 'leader(proposer0)', 'promise(acceptor0,proposer2)']
297     : ----------1---11-----------
297     : ['didNotPromise(acceptor1)', 'leader(proposer2)', 'promise(acceptor0,proposer0)']
298     : ----------1-1---1----------
298     : ['didNotPromise(acceptor1)', 'leader(proposer0)', 'promise(acceptor0,proposer1)']
299     : ----------1--1-1-----------
299     : ['didNotPromise(acceptor1)', 'leader(proposer1)', 'promise(acceptor0,proposer0)']
300     : -----------1-1---1---------
300     : ['didNotPromise(acceptor2)', 'leader(proposer1)', 'promise(acceptor0,proposer2)']
301     : -----------1--1-1----------
301     : ['didNotPromise(acceptor2)', 'leader(proposer2)', 'promise(acceptor0,proposer1)']
302     : -----------11----1---------
302     : ['didNotPromise(acceptor2)', 'leader(proposer0)', 'promise(acceptor0,proposer2)']
303     : -----------1--11-----------
303     : ['didNotPromise(acceptor2)', 'leader(proposer2)', 'promise(acceptor0,proposer0)']
304     : -----------11---1----------
304     : ['didNotPromise(acceptor2)', 'leader(proposer0)', 'promise(acceptor0,proposer1)']
305     : -----------1-1-1-----------
305     : ['didNotPromise(acceptor2)', 'leader(proposer1)', 'promise(acceptor0,proposer0)']
306     : ---------1---1------1------
306     : ['didNotPromise(acceptor0)', 'leader(proposer1)', 'promise(acceptor1,proposer2)']
307     : ---------1----1----1-------
307     : ['didNotPromise(acceptor0)', 'leader(proposer2)', 'promise(acceptor1,proposer1)']
308     : ---------1--1-------1------
308     : ['didNotPromise(acceptor0)', 'leader(proposer0)', 'promise(acceptor1,proposer2)']
309     : ---------1----1---1--------
309     : ['didNotPromise(acceptor0)', 'leader(proposer2)', 'promise(acceptor1,proposer0)']
310     : ---------1--1------1-------
310     : ['didNotPromise(acceptor0)', 'leader(proposer0)', 'promise(acceptor1,proposer1)']
311     : ---------1---1----1--------
311     : ['didNotPromise(acceptor0)', 'leader(proposer1)', 'promise(acceptor1,proposer0)']
312     : -----------1-1------1------
312     : ['didNotPromise(acceptor2)', 'leader(proposer1)', 'promise(acceptor1,proposer2)']
313     : -----------1--1----1-------
313     : ['didNotPromise(acceptor2)', 'leader(proposer2)', 'promise(acceptor1,proposer1)']
314     : -----------11-------1------
314     : ['didNotPromise(acceptor2)', 'leader(proposer0)', 'promise(acceptor1,proposer2)']
315     : -----------1--1---1--------
315     : ['didNotPromise(acceptor2)', 'leader(proposer2)', 'promise(acceptor1,proposer0)']
316     : -----------11------1-------
316     : ['didNotPromise(acceptor2)', 'leader(proposer0)', 'promise(acceptor1,proposer1)']
317     : -----------1-1----1--------
317     : ['didNotPromise(acceptor2)', 'leader(proposer1)', 'promise(acceptor1,proposer0)']
318     : ---------1---1---------1---
318     : ['didNotPromise(acceptor0)', 'leader(proposer1)', 'promise(acceptor2,proposer2)']
319     : ---------1----1-------1----
319     : ['didNotPromise(acceptor0)', 'leader(proposer2)', 'promise(acceptor2,proposer1)']
320     : ---------1--1----------1---
320     : ['didNotPromise(acceptor0)', 'leader(proposer0)', 'promise(acceptor2,proposer2)']
321     : ---------1----1------1-----
321     : ['didNotPromise(acceptor0)', 'leader(proposer2)', 'promise(acceptor2,proposer0)']
322     : ---------1--1---------1----
322     : ['didNotPromise(acceptor0)', 'leader(proposer0)', 'promise(acceptor2,proposer1)']
323     : ---------1---1-------1-----
323     : ['didNotPromise(acceptor0)', 'leader(proposer1)', 'promise(acceptor2,proposer0)']
324     : ----------1--1---------1---
324     : ['didNotPromise(acceptor1)', 'leader(proposer1)', 'promise(acceptor2,proposer2)']
325     : ----------1---1-------1----
325     : ['didNotPromise(acceptor1)', 'leader(proposer2)', 'promise(acceptor2,proposer1)']
326     : ----------1-1----------1---
326     : ['didNotPromise(acceptor1)', 'leader(proposer0)', 'promise(acceptor2,proposer2)']
327     : ----------1---1------1-----
327     : ['didNotPromise(acceptor1)', 'leader(proposer2)', 'promise(acceptor2,proposer0)']
328     : ----------1-1---------1----
328     : ['didNotPromise(acceptor1)', 'leader(proposer0)', 'promise(acceptor2,proposer1)']
329     : ----------1--1-------1-----
329     : ['didNotPromise(acceptor1)', 'leader(proposer1)', 'promise(acceptor2,proposer0)']
num_forall :   4
num_exists :   0
num_literals : 5
quantified form : forall PROPOSER1,ACCEPTOR0,ACCEPTOR1,PROPOSER0. ~promise(ACCEPTOR1,PROPOSER1) | ~didNotPromise(ACCEPTOR0) | ~leader(PROPOSER0) | (ACCEPTOR0 = ACCEPTOR1 | PROPOSER0 = PROPOSER1)
qcost : 9




=== Prime Orbit 21 =====================
size : 36
num_suborbits: 2
330 (*) : -------------1---1-----1---
330     : ['leader(proposer1)', 'promise(acceptor0,proposer2)', 'promise(acceptor2,proposer2)']
331     : --------------1-1-----1----
331     : ['leader(proposer2)', 'promise(acceptor0,proposer1)', 'promise(acceptor2,proposer1)']
332     : ------------1----1-----1---
332     : ['leader(proposer0)', 'promise(acceptor0,proposer2)', 'promise(acceptor2,proposer2)']
333     : --------------11-----1-----
333     : ['leader(proposer2)', 'promise(acceptor0,proposer0)', 'promise(acceptor2,proposer0)']
334     : ------------1---1-----1----
334     : ['leader(proposer0)', 'promise(acceptor0,proposer1)', 'promise(acceptor2,proposer1)']
335     : -------------1-1-----1-----
335     : ['leader(proposer1)', 'promise(acceptor0,proposer0)', 'promise(acceptor2,proposer0)']
336     : -------------1---1--1------
336     : ['leader(proposer1)', 'promise(acceptor0,proposer2)', 'promise(acceptor1,proposer2)']
337     : --------------1-1--1-------
337     : ['leader(proposer2)', 'promise(acceptor0,proposer1)', 'promise(acceptor1,proposer1)']
338     : ------------1----1--1------
338     : ['leader(proposer0)', 'promise(acceptor0,proposer2)', 'promise(acceptor1,proposer2)']
339     : --------------11--1--------
339     : ['leader(proposer2)', 'promise(acceptor0,proposer0)', 'promise(acceptor1,proposer0)']
340     : ------------1---1--1-------
340     : ['leader(proposer0)', 'promise(acceptor0,proposer1)', 'promise(acceptor1,proposer1)']
341     : -------------1-1--1--------
341     : ['leader(proposer1)', 'promise(acceptor0,proposer0)', 'promise(acceptor1,proposer0)']
342     : -------------1------1--1---
342     : ['leader(proposer1)', 'promise(acceptor1,proposer2)', 'promise(acceptor2,proposer2)']
343     : --------------1----1--1----
343     : ['leader(proposer2)', 'promise(acceptor1,proposer1)', 'promise(acceptor2,proposer1)']
344     : ------------1-------1--1---
344     : ['leader(proposer0)', 'promise(acceptor1,proposer2)', 'promise(acceptor2,proposer2)']
345     : --------------1---1--1-----
345     : ['leader(proposer2)', 'promise(acceptor1,proposer0)', 'promise(acceptor2,proposer0)']
346     : ------------1------1--1----
346     : ['leader(proposer0)', 'promise(acceptor1,proposer1)', 'promise(acceptor2,proposer1)']
347     : -------------1----1--1-----
347     : ['leader(proposer1)', 'promise(acceptor1,proposer0)', 'promise(acceptor2,proposer0)']
348 (*) : -------------1---1---1-----
348     : ['leader(proposer1)', 'promise(acceptor0,proposer2)', 'promise(acceptor2,proposer0)']
349     : --------------1-1----1-----
349     : ['leader(proposer2)', 'promise(acceptor0,proposer1)', 'promise(acceptor2,proposer0)']
350     : ------------1----1----1----
350     : ['leader(proposer0)', 'promise(acceptor0,proposer2)', 'promise(acceptor2,proposer1)']
351     : --------------11------1----
351     : ['leader(proposer2)', 'promise(acceptor0,proposer0)', 'promise(acceptor2,proposer1)']
352     : ------------1---1------1---
352     : ['leader(proposer0)', 'promise(acceptor0,proposer1)', 'promise(acceptor2,proposer2)']
353     : -------------1-1-------1---
353     : ['leader(proposer1)', 'promise(acceptor0,proposer0)', 'promise(acceptor2,proposer2)']
354     : -------------1---11--------
354     : ['leader(proposer1)', 'promise(acceptor0,proposer2)', 'promise(acceptor1,proposer0)']
355     : --------------1-1-1--------
355     : ['leader(proposer2)', 'promise(acceptor0,proposer1)', 'promise(acceptor1,proposer0)']
356     : ------------1----1-1-------
356     : ['leader(proposer0)', 'promise(acceptor0,proposer2)', 'promise(acceptor1,proposer1)']
357     : --------------11---1-------
357     : ['leader(proposer2)', 'promise(acceptor0,proposer0)', 'promise(acceptor1,proposer1)']
358     : ------------1---1---1------
358     : ['leader(proposer0)', 'promise(acceptor0,proposer1)', 'promise(acceptor1,proposer2)']
359     : -------------1-1----1------
359     : ['leader(proposer1)', 'promise(acceptor0,proposer0)', 'promise(acceptor1,proposer2)']
360     : -------------1------11-----
360     : ['leader(proposer1)', 'promise(acceptor1,proposer2)', 'promise(acceptor2,proposer0)']
361     : --------------1----1-1-----
361     : ['leader(proposer2)', 'promise(acceptor1,proposer1)', 'promise(acceptor2,proposer0)']
362     : ------------1-------1-1----
362     : ['leader(proposer0)', 'promise(acceptor1,proposer2)', 'promise(acceptor2,proposer1)']
363     : --------------1---1---1----
363     : ['leader(proposer2)', 'promise(acceptor1,proposer0)', 'promise(acceptor2,proposer1)']
364     : ------------1------1---1---
364     : ['leader(proposer0)', 'promise(acceptor1,proposer1)', 'promise(acceptor2,proposer2)']
365     : -------------1----1----1---
365     : ['leader(proposer1)', 'promise(acceptor1,proposer0)', 'promise(acceptor2,proposer2)']
num_forall :   5
num_exists :   0
num_literals : 10
quantified form : forall ACCEPTOR0,PROPOSER1,PROPOSER0,ACCEPTOR1,PROPOSER2. ~promise(ACCEPTOR1,PROPOSER2) | ~promise(ACCEPTOR0,PROPOSER1) | ~leader(PROPOSER0) | ((ACCEPTOR0 = ACCEPTOR1 | PROPOSER1 ~= PROPOSER2 | PROPOSER0 = PROPOSER1) & (ACCEPTOR0 = ACCEPTOR1 | PROPOSER0 = PROPOSER2 | PROPOSER0 = PROPOSER1 | PROPOSER1 = PROPOSER2))
qcost : 15




=== Prime Orbit 23 =====================
size : 9
num_suborbits: 1
375 (*) : ----------0-------0-0----0-
375     : ['~didNotPromise(acceptor1)', '~promise(acceptor1,proposer0)', '~promise(acceptor1,proposer2)', '~start(proposer1)']
376     : ----------0-------00------0
376     : ['~didNotPromise(acceptor1)', '~promise(acceptor1,proposer0)', '~promise(acceptor1,proposer1)', '~start(proposer2)']
377     : ----------0--------00---0--
377     : ['~didNotPromise(acceptor1)', '~promise(acceptor1,proposer1)', '~promise(acceptor1,proposer2)', '~start(proposer0)']
378     : -----------0---------0-0-0-
378     : ['~didNotPromise(acceptor2)', '~promise(acceptor2,proposer0)', '~promise(acceptor2,proposer2)', '~start(proposer1)']
379     : -----------0---------00---0
379     : ['~didNotPromise(acceptor2)', '~promise(acceptor2,proposer0)', '~promise(acceptor2,proposer1)', '~start(proposer2)']
380     : -----------0----------000--
380     : ['~didNotPromise(acceptor2)', '~promise(acceptor2,proposer1)', '~promise(acceptor2,proposer2)', '~start(proposer0)']
381     : ---------0-----0-0-------0-
381     : ['~didNotPromise(acceptor0)', '~promise(acceptor0,proposer0)', '~promise(acceptor0,proposer2)', '~start(proposer1)']
382     : ---------0-----00---------0
382     : ['~didNotPromise(acceptor0)', '~promise(acceptor0,proposer0)', '~promise(acceptor0,proposer1)', '~start(proposer2)']
383     : ---------0------00------0--
383     : ['~didNotPromise(acceptor0)', '~promise(acceptor0,proposer1)', '~promise(acceptor0,proposer2)', '~start(proposer0)']
num_forall :   2
num_exists :   1
num_literals : 4
quantified form : forall ACCEPTOR0,PROPOSER1. didNotPromise(ACCEPTOR0) | start(PROPOSER1) | (exists PROPOSER0. (promise(ACCEPTOR0,PROPOSER0) & PROPOSER0 ~= PROPOSER1))
qcost : 7




=== Prime Orbit 24 =====================
size : 9
num_suborbits: 1
384 (*) : ----------0-------0------00
384     : ['~didNotPromise(acceptor1)', '~promise(acceptor1,proposer0)', '~start(proposer1)', '~start(proposer2)']
385     : ----------0--------0----0-0
385     : ['~didNotPromise(acceptor1)', '~promise(acceptor1,proposer1)', '~start(proposer0)', '~start(proposer2)']
386     : ----------0---------0---00-
386     : ['~didNotPromise(acceptor1)', '~promise(acceptor1,proposer2)', '~start(proposer0)', '~start(proposer1)']
387     : -----------0---------0---00
387     : ['~didNotPromise(acceptor2)', '~promise(acceptor2,proposer0)', '~start(proposer1)', '~start(proposer2)']
388     : -----------0----------0-0-0
388     : ['~didNotPromise(acceptor2)', '~promise(acceptor2,proposer1)', '~start(proposer0)', '~start(proposer2)']
389     : -----------0-----------000-
389     : ['~didNotPromise(acceptor2)', '~promise(acceptor2,proposer2)', '~start(proposer0)', '~start(proposer1)']
390     : ---------0-----0---------00
390     : ['~didNotPromise(acceptor0)', '~promise(acceptor0,proposer0)', '~start(proposer1)', '~start(proposer2)']
391     : ---------0------0-------0-0
391     : ['~didNotPromise(acceptor0)', '~promise(acceptor0,proposer1)', '~start(proposer0)', '~start(proposer2)']
392     : ---------0-------0------00-
392     : ['~didNotPromise(acceptor0)', '~promise(acceptor0,proposer2)', '~start(proposer0)', '~start(proposer1)']
num_forall :   2
num_exists :   1
num_literals : 4
quantified form : forall ACCEPTOR0,PROPOSER1. didNotPromise(ACCEPTOR0) | promise(ACCEPTOR0,PROPOSER1) | (exists PROPOSER0. (start(PROPOSER0) & PROPOSER0 ~= PROPOSER1))
qcost : 7




=== Prime Orbit 26 =====================
size : 9
num_suborbits: 1
396 (*) : -----0--0-----1--------1---
396     : ['leader(proposer2)', 'promise(acceptor2,proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)']
397     : ----0--0-----1--------1----
397     : ['leader(proposer1)', 'promise(acceptor2,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)']
398     : ---0--0-----1--------1-----
398     : ['leader(proposer0)', 'promise(acceptor2,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)']
399     : --0-----0-----1-----1------
399     : ['leader(proposer2)', 'promise(acceptor1,proposer2)', '~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)']
400     : -0-----0-----1-----1-------
400     : ['leader(proposer1)', 'promise(acceptor1,proposer1)', '~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)']
401     : 0-----0-----1-----1--------
401     : ['leader(proposer0)', 'promise(acceptor1,proposer0)', '~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)']
402     : --0--0--------1--1---------
402     : ['leader(proposer2)', 'promise(acceptor0,proposer2)', '~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)']
403     : -0--0--------1--1----------
403     : ['leader(proposer1)', 'promise(acceptor0,proposer1)', '~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)']
404     : 0--0--------1--1-----------
404     : ['leader(proposer0)', 'promise(acceptor0,proposer0)', '~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)']
num_forall :   4
num_exists :   0
num_literals : 7
quantified form : forall QUORUM0,QUORUM1,PROPOSER0,ACCEPTOR0. ~promise(ACCEPTOR0,PROPOSER0) | chosenAt(QUORUM0,PROPOSER0) | ~leader(PROPOSER0) | ~member(ACCEPTOR0,QUORUM1) | ~member(ACCEPTOR0,QUORUM0) | chosenAt(QUORUM1,PROPOSER0) | QUORUM0 = QUORUM1
qcost : 11




=== Prime Orbit 27 =====================
size : 3
num_suborbits: 1
405 (*) : --0--0--0-----1------------
405     : ['leader(proposer2)', '~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)']
406     : -0--0--0-----1-------------
406     : ['leader(proposer1)', '~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)']
407     : 0--0--0-----1--------------
407     : ['leader(proposer0)', '~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)']
num_forall :   1
num_exists :   1
num_literals : 2
quantified form : forall PROPOSER0. (exists QUORUM0. chosenAt(QUORUM0,PROPOSER0) | ~leader(PROPOSER0))
qcost : 4




=== Prime Orbit 28 =====================
size : 3
num_suborbits: 1
408 (*) : -----------0------------000
408     : ['~didNotPromise(acceptor2)', '~start(proposer0)', '~start(proposer1)', '~start(proposer2)']
409     : ----------0-------------000
409     : ['~didNotPromise(acceptor1)', '~start(proposer0)', '~start(proposer1)', '~start(proposer2)']
410     : ---------0--------------000
410     : ['~didNotPromise(acceptor0)', '~start(proposer0)', '~start(proposer1)', '~start(proposer2)']
num_forall :   1
num_exists :   1
num_literals : 2
quantified form : forall ACCEPTOR0. (exists PROPOSER0. didNotPromise(ACCEPTOR0) | start(PROPOSER0))
qcost : 4




=== Prime Orbit 29 =====================
size : 36
num_suborbits: 1
411 (*) : -------0--0-------0---1---0
411     : ['promise(acceptor2,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor1)', '~promise(acceptor1,proposer0)', '~start(proposer2)']
412     : --------0-0-------0----1-0-
412     : ['promise(acceptor2,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor1)', '~promise(acceptor1,proposer0)', '~start(proposer1)']
413     : ------0---0--------0-1----0
413     : ['promise(acceptor2,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor1)', '~promise(acceptor1,proposer1)', '~start(proposer2)']
414     : --------0-0--------0---10--
414     : ['promise(acceptor2,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor1)', '~promise(acceptor1,proposer1)', '~start(proposer0)']
415     : ------0---0---------01---0-
415     : ['promise(acceptor2,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor1)', '~promise(acceptor1,proposer2)', '~start(proposer1)']
416     : -------0--0---------0-1-0--
416     : ['promise(acceptor2,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor1)', '~promise(acceptor1,proposer2)', '~start(proposer0)']
417     : -------0---0-------1-0----0
417     : ['promise(acceptor1,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor2)', '~promise(acceptor2,proposer0)', '~start(proposer2)']
418     : --------0--0--------10---0-
418     : ['promise(acceptor1,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor2)', '~promise(acceptor2,proposer0)', '~start(proposer1)']
419     : ------0----0------1---0---0
419     : ['promise(acceptor1,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor2)', '~promise(acceptor2,proposer1)', '~start(proposer2)']
420     : --------0--0--------1-0-0--
420     : ['promise(acceptor1,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor2)', '~promise(acceptor2,proposer1)', '~start(proposer0)']
421     : ------0----0------1----0-0-
421     : ['promise(acceptor1,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor2)', '~promise(acceptor2,proposer2)', '~start(proposer1)']
422     : -------0---0-------1---00--
422     : ['promise(acceptor1,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor2)', '~promise(acceptor2,proposer2)', '~start(proposer0)']
423     : ----0----0-----0------1---0
423     : ['promise(acceptor2,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~didNotPromise(acceptor0)', '~promise(acceptor0,proposer0)', '~start(proposer2)']
424     : -----0---0-----0-------1-0-
424     : ['promise(acceptor2,proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~didNotPromise(acceptor0)', '~promise(acceptor0,proposer0)', '~start(proposer1)']
425     : ---0-----0------0----1----0
425     : ['promise(acceptor2,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~didNotPromise(acceptor0)', '~promise(acceptor0,proposer1)', '~start(proposer2)']
426     : -----0---0------0------10--
426     : ['promise(acceptor2,proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~didNotPromise(acceptor0)', '~promise(acceptor0,proposer1)', '~start(proposer0)']
427     : ---0-----0-------0---1---0-
427     : ['promise(acceptor2,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~didNotPromise(acceptor0)', '~promise(acceptor0,proposer2)', '~start(proposer1)']
428     : ----0----0-------0----1-0--
428     : ['promise(acceptor2,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~didNotPromise(acceptor0)', '~promise(acceptor0,proposer2)', '~start(proposer0)']
429     : ----0------0----1----0----0
429     : ['promise(acceptor0,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~didNotPromise(acceptor2)', '~promise(acceptor2,proposer0)', '~start(proposer2)']
430     : -----0-----0-----1---0---0-
430     : ['promise(acceptor0,proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~didNotPromise(acceptor2)', '~promise(acceptor2,proposer0)', '~start(proposer1)']
431     : ---0-------0---1------0---0
431     : ['promise(acceptor0,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~didNotPromise(acceptor2)', '~promise(acceptor2,proposer1)', '~start(proposer2)']
432     : -----0-----0-----1----0-0--
432     : ['promise(acceptor0,proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~didNotPromise(acceptor2)', '~promise(acceptor2,proposer1)', '~start(proposer0)']
433     : ---0-------0---1-------0-0-
433     : ['promise(acceptor0,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~didNotPromise(acceptor2)', '~promise(acceptor2,proposer2)', '~start(proposer1)']
434     : ----0------0----1------00--
434     : ['promise(acceptor0,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~didNotPromise(acceptor2)', '~promise(acceptor2,proposer2)', '~start(proposer0)']
435     : -0-------0-----0---1------0
435     : ['promise(acceptor1,proposer1)', '~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~didNotPromise(acceptor0)', '~promise(acceptor0,proposer0)', '~start(proposer2)']
436     : --0------0-----0----1----0-
436     : ['promise(acceptor1,proposer2)', '~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~didNotPromise(acceptor0)', '~promise(acceptor0,proposer0)', '~start(proposer1)']
437     : 0--------0------0-1-------0
437     : ['promise(acceptor1,proposer0)', '~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~didNotPromise(acceptor0)', '~promise(acceptor0,proposer1)', '~start(proposer2)']
438     : --0------0------0---1---0--
438     : ['promise(acceptor1,proposer2)', '~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~didNotPromise(acceptor0)', '~promise(acceptor0,proposer1)', '~start(proposer0)']
439     : 0--------0-------01------0-
439     : ['promise(acceptor1,proposer0)', '~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~didNotPromise(acceptor0)', '~promise(acceptor0,proposer2)', '~start(proposer1)']
440     : -0-------0-------0-1----0--
440     : ['promise(acceptor1,proposer1)', '~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~didNotPromise(acceptor0)', '~promise(acceptor0,proposer2)', '~start(proposer0)']
441     : -0--------0-----1-0-------0
441     : ['promise(acceptor0,proposer1)', '~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~didNotPromise(acceptor1)', '~promise(acceptor1,proposer0)', '~start(proposer2)']
442     : --0-------0------10------0-
442     : ['promise(acceptor0,proposer2)', '~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~didNotPromise(acceptor1)', '~promise(acceptor1,proposer0)', '~start(proposer1)']
443     : 0---------0----1---0------0
443     : ['promise(acceptor0,proposer0)', '~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~didNotPromise(acceptor1)', '~promise(acceptor1,proposer1)', '~start(proposer2)']
444     : --0-------0------1-0----0--
444     : ['promise(acceptor0,proposer2)', '~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~didNotPromise(acceptor1)', '~promise(acceptor1,proposer1)', '~start(proposer0)']
445     : 0---------0----1----0----0-
445     : ['promise(acceptor0,proposer0)', '~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~didNotPromise(acceptor1)', '~promise(acceptor1,proposer2)', '~start(proposer1)']
446     : -0--------0-----1---0---0--
446     : ['promise(acceptor0,proposer1)', '~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~didNotPromise(acceptor1)', '~promise(acceptor1,proposer2)', '~start(proposer0)']
num_forall :   6
num_exists :   0
num_literals : 11
quantified form : forall ACCEPTOR0,PROPOSER0,PROPOSER1,ACCEPTOR1,QUORUM0,PROPOSER2. chosenAt(QUORUM0,PROPOSER0) | promise(ACCEPTOR0,PROPOSER1) | ~promise(ACCEPTOR1,PROPOSER0) | start(PROPOSER2) | didNotPromise(ACCEPTOR0) | ~member(ACCEPTOR0,QUORUM0) | ~member(ACCEPTOR1,QUORUM0) | (PROPOSER0 = PROPOSER2 | ACCEPTOR0 = ACCEPTOR1 | PROPOSER0 = PROPOSER1 | PROPOSER1 = PROPOSER2)
qcost : 17




=== Prime Orbit 30 =====================
size : 36
num_suborbits: 1
447 (*) : -0--1-----0-------0-------0
447     : ['chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~didNotPromise(acceptor1)', '~promise(acceptor1,proposer0)', '~start(proposer2)']
448     : --0--1----0-------0------0-
448     : ['chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~didNotPromise(acceptor1)', '~promise(acceptor1,proposer0)', '~start(proposer1)']
449     : 0--1------0--------0------0
449     : ['chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~didNotPromise(acceptor1)', '~promise(acceptor1,proposer1)', '~start(proposer2)']
450     : --0--1----0--------0----0--
450     : ['chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~didNotPromise(acceptor1)', '~promise(acceptor1,proposer1)', '~start(proposer0)']
451     : 0--1------0---------0----0-
451     : ['chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~didNotPromise(acceptor1)', '~promise(acceptor1,proposer2)', '~start(proposer1)']
452     : -0--1-----0---------0---0--
452     : ['chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~didNotPromise(acceptor1)', '~promise(acceptor1,proposer2)', '~start(proposer0)']
453     : -1--0------0---------0----0
453     : ['chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~didNotPromise(acceptor2)', '~promise(acceptor2,proposer0)', '~start(proposer2)']
454     : --1--0-----0---------0---0-
454     : ['chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~didNotPromise(acceptor2)', '~promise(acceptor2,proposer0)', '~start(proposer1)']
455     : 1--0-------0----------0---0
455     : ['chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~didNotPromise(acceptor2)', '~promise(acceptor2,proposer1)', '~start(proposer2)']
456     : --1--0-----0----------0-0--
456     : ['chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~didNotPromise(acceptor2)', '~promise(acceptor2,proposer1)', '~start(proposer0)']
457     : 1--0-------0-----------0-0-
457     : ['chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~didNotPromise(acceptor2)', '~promise(acceptor2,proposer2)', '~start(proposer1)']
458     : -1--0------0-----------00--
458     : ['chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~didNotPromise(acceptor2)', '~promise(acceptor2,proposer2)', '~start(proposer0)']
459     : -0-----1-0-----0----------0
459     : ['chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~didNotPromise(acceptor0)', '~promise(acceptor0,proposer0)', '~start(proposer2)']
460     : --0-----10-----0---------0-
460     : ['chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~didNotPromise(acceptor0)', '~promise(acceptor0,proposer0)', '~start(proposer1)']
461     : 0-----1--0------0---------0
461     : ['chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~didNotPromise(acceptor0)', '~promise(acceptor0,proposer1)', '~start(proposer2)']
462     : --0-----10------0-------0--
462     : ['chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~didNotPromise(acceptor0)', '~promise(acceptor0,proposer1)', '~start(proposer0)']
463     : 0-----1--0-------0-------0-
463     : ['chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~didNotPromise(acceptor0)', '~promise(acceptor0,proposer2)', '~start(proposer1)']
464     : -0-----1-0-------0------0--
464     : ['chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~didNotPromise(acceptor0)', '~promise(acceptor0,proposer2)', '~start(proposer0)']
465     : -1-----0---0---------0----0
465     : ['chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor2)', '~promise(acceptor2,proposer0)', '~start(proposer2)']
466     : --1-----0--0---------0---0-
466     : ['chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor2)', '~promise(acceptor2,proposer0)', '~start(proposer1)']
467     : 1-----0----0----------0---0
467     : ['chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor2)', '~promise(acceptor2,proposer1)', '~start(proposer2)']
468     : --1-----0--0----------0-0--
468     : ['chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor2)', '~promise(acceptor2,proposer1)', '~start(proposer0)']
469     : 1-----0----0-----------0-0-
469     : ['chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor2)', '~promise(acceptor2,proposer2)', '~start(proposer1)']
470     : -1-----0---0-----------00--
470     : ['chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor2)', '~promise(acceptor2,proposer2)', '~start(proposer0)']
471     : ----0--1-0-----0----------0
471     : ['chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~didNotPromise(acceptor0)', '~promise(acceptor0,proposer0)', '~start(proposer2)']
472     : -----0--10-----0---------0-
472     : ['chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~didNotPromise(acceptor0)', '~promise(acceptor0,proposer0)', '~start(proposer1)']
473     : ---0--1--0------0---------0
473     : ['chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~didNotPromise(acceptor0)', '~promise(acceptor0,proposer1)', '~start(proposer2)']
474     : -----0--10------0-------0--
474     : ['chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~didNotPromise(acceptor0)', '~promise(acceptor0,proposer1)', '~start(proposer0)']
475     : ---0--1--0-------0-------0-
475     : ['chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~didNotPromise(acceptor0)', '~promise(acceptor0,proposer2)', '~start(proposer1)']
476     : ----0--1-0-------0------0--
476     : ['chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~didNotPromise(acceptor0)', '~promise(acceptor0,proposer2)', '~start(proposer0)']
477     : ----1--0--0-------0-------0
477     : ['chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor1)', '~promise(acceptor1,proposer0)', '~start(proposer2)']
478     : -----1--0-0-------0------0-
478     : ['chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor1)', '~promise(acceptor1,proposer0)', '~start(proposer1)']
479     : ---1--0---0--------0------0
479     : ['chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor1)', '~promise(acceptor1,proposer1)', '~start(proposer2)']
480     : -----1--0-0--------0----0--
480     : ['chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor1)', '~promise(acceptor1,proposer1)', '~start(proposer0)']
481     : ---1--0---0---------0----0-
481     : ['chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor1)', '~promise(acceptor1,proposer2)', '~start(proposer1)']
482     : ----1--0--0---------0---0--
482     : ['chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor1)', '~promise(acceptor1,proposer2)', '~start(proposer0)']
num_forall :   6
num_exists :   0
num_literals : 11
quantified form : forall ACCEPTOR0,PROPOSER1,PROPOSER0,QUORUM0,QUORUM1,PROPOSER2. promise(ACCEPTOR0,PROPOSER1) | ~chosenAt(QUORUM0,PROPOSER0) | ~member(ACCEPTOR0,QUORUM1) | start(PROPOSER2) | didNotPromise(ACCEPTOR0) | chosenAt(QUORUM1,PROPOSER0) | member(ACCEPTOR0,QUORUM0) | (PROPOSER0 = PROPOSER2 | QUORUM0 = QUORUM1 | PROPOSER0 = PROPOSER1 | PROPOSER1 = PROPOSER2)
qcost : 17




=== Prime Orbit 31 =====================
size : 18
num_suborbits: 1
483 (*) : ---0--1--0---------------00
483     : ['chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~didNotPromise(acceptor0)', '~start(proposer1)', '~start(proposer2)']
484     : ----0--1-0--------------0-0
484     : ['chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~didNotPromise(acceptor0)', '~start(proposer0)', '~start(proposer2)']
485     : -----0--10--------------00-
485     : ['chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~didNotPromise(acceptor0)', '~start(proposer0)', '~start(proposer1)']
486     : 0-----1--0---------------00
486     : ['chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~didNotPromise(acceptor0)', '~start(proposer1)', '~start(proposer2)']
487     : -0-----1-0--------------0-0
487     : ['chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~didNotPromise(acceptor0)', '~start(proposer0)', '~start(proposer2)']
488     : --0-----10--------------00-
488     : ['chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~didNotPromise(acceptor0)', '~start(proposer0)', '~start(proposer1)']
489     : ---1--0---0--------------00
489     : ['chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor1)', '~start(proposer1)', '~start(proposer2)']
490     : ----1--0--0-------------0-0
490     : ['chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor1)', '~start(proposer0)', '~start(proposer2)']
491     : -----1--0-0-------------00-
491     : ['chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor1)', '~start(proposer0)', '~start(proposer1)']
492     : 0--1------0--------------00
492     : ['chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~didNotPromise(acceptor1)', '~start(proposer1)', '~start(proposer2)']
493     : -0--1-----0-------------0-0
493     : ['chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~didNotPromise(acceptor1)', '~start(proposer0)', '~start(proposer2)']
494     : --0--1----0-------------00-
494     : ['chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~didNotPromise(acceptor1)', '~start(proposer0)', '~start(proposer1)']
495     : 1-----0----0-------------00
495     : ['chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor2)', '~start(proposer1)', '~start(proposer2)']
496     : -1-----0---0------------0-0
496     : ['chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor2)', '~start(proposer0)', '~start(proposer2)']
497     : --1-----0--0------------00-
497     : ['chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor2)', '~start(proposer0)', '~start(proposer1)']
498     : 1--0-------0-------------00
498     : ['chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~didNotPromise(acceptor2)', '~start(proposer1)', '~start(proposer2)']
499     : -1--0------0------------0-0
499     : ['chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~didNotPromise(acceptor2)', '~start(proposer0)', '~start(proposer2)']
500     : --1--0-----0------------00-
500     : ['chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~didNotPromise(acceptor2)', '~start(proposer0)', '~start(proposer1)']
num_forall :   4
num_exists :   1
num_literals : 8
quantified form : forall QUORUM0,QUORUM1,PROPOSER1,ACCEPTOR0. ~chosenAt(QUORUM0,PROPOSER1) | ~member(ACCEPTOR0,QUORUM1) | chosenAt(QUORUM1,PROPOSER1) | didNotPromise(ACCEPTOR0) | member(ACCEPTOR0,QUORUM0) | (exists PROPOSER0. (start(PROPOSER0) & PROPOSER0 ~= PROPOSER1)) | QUORUM0 = QUORUM1
qcost : 13




=== Prime Orbit 32 =====================
size : 9
num_suborbits: 1
501 (*) : ---0-----0-0-------------00
501     : ['~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor2)', '~start(proposer1)', '~start(proposer2)']
502     : ----0----0-0------------0-0
502     : ['~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor2)', '~start(proposer0)', '~start(proposer2)']
503     : -----0---0-0------------00-
503     : ['~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor2)', '~start(proposer0)', '~start(proposer1)']
504     : 0--------00--------------00
504     : ['~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~start(proposer1)', '~start(proposer2)']
505     : -0-------00-------------0-0
505     : ['~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~start(proposer0)', '~start(proposer2)']
506     : --0------00-------------00-
506     : ['~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~start(proposer0)', '~start(proposer1)']
507     : ------0---00-------------00
507     : ['~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~start(proposer1)', '~start(proposer2)']
508     : -------0--00------------0-0
508     : ['~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~start(proposer0)', '~start(proposer2)']
509     : --------0-00------------00-
509     : ['~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~start(proposer0)', '~start(proposer1)']
num_forall :   4
num_exists :   1
num_literals : 8
quantified form : forall ACCEPTOR1,QUORUM0,PROPOSER1,ACCEPTOR0. ~member(ACCEPTOR0,QUORUM0) | didNotPromise(ACCEPTOR0) | chosenAt(QUORUM0,PROPOSER1) | didNotPromise(ACCEPTOR1) | ~member(ACCEPTOR1,QUORUM0) | (exists PROPOSER0. (start(PROPOSER0) & PROPOSER0 ~= PROPOSER1)) | ACCEPTOR0 = ACCEPTOR1
qcost : 13




=== Prime Orbit 33 =====================
size : 18
num_suborbits: 1
510 (*) : 0--------0--------1------00
510     : ['promise(acceptor1,proposer0)', '~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~didNotPromise(acceptor0)', '~start(proposer1)', '~start(proposer2)']
511     : -0-------0---------1----0-0
511     : ['promise(acceptor1,proposer1)', '~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~didNotPromise(acceptor0)', '~start(proposer0)', '~start(proposer2)']
512     : --0------0----------1---00-
512     : ['promise(acceptor1,proposer2)', '~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~didNotPromise(acceptor0)', '~start(proposer0)', '~start(proposer1)']
513     : ---0-----0-----------1---00
513     : ['promise(acceptor2,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~didNotPromise(acceptor0)', '~start(proposer1)', '~start(proposer2)']
514     : ----0----0------------1-0-0
514     : ['promise(acceptor2,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~didNotPromise(acceptor0)', '~start(proposer0)', '~start(proposer2)']
515     : -----0---0-------------100-
515     : ['promise(acceptor2,proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~didNotPromise(acceptor0)', '~start(proposer0)', '~start(proposer1)']
516     : 0---------0----1---------00
516     : ['promise(acceptor0,proposer0)', '~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~didNotPromise(acceptor1)', '~start(proposer1)', '~start(proposer2)']
517     : -0--------0-----1-------0-0
517     : ['promise(acceptor0,proposer1)', '~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~didNotPromise(acceptor1)', '~start(proposer0)', '~start(proposer2)']
518     : --0-------0------1------00-
518     : ['promise(acceptor0,proposer2)', '~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~didNotPromise(acceptor1)', '~start(proposer0)', '~start(proposer1)']
519     : ------0---0----------1---00
519     : ['promise(acceptor2,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor1)', '~start(proposer1)', '~start(proposer2)']
520     : -------0--0-----------1-0-0
520     : ['promise(acceptor2,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor1)', '~start(proposer0)', '~start(proposer2)']
521     : --------0-0------------100-
521     : ['promise(acceptor2,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor1)', '~start(proposer0)', '~start(proposer1)']
522     : ---0-------0---1---------00
522     : ['promise(acceptor0,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~didNotPromise(acceptor2)', '~start(proposer1)', '~start(proposer2)']
523     : ----0------0----1-------0-0
523     : ['promise(acceptor0,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~didNotPromise(acceptor2)', '~start(proposer0)', '~start(proposer2)']
524     : -----0-----0-----1------00-
524     : ['promise(acceptor0,proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~didNotPromise(acceptor2)', '~start(proposer0)', '~start(proposer1)']
525     : ------0----0------1------00
525     : ['promise(acceptor1,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor2)', '~start(proposer1)', '~start(proposer2)']
526     : -------0---0-------1----0-0
526     : ['promise(acceptor1,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor2)', '~start(proposer0)', '~start(proposer2)']
527     : --------0--0--------1---00-
527     : ['promise(acceptor1,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor2)', '~start(proposer0)', '~start(proposer1)']
num_forall :   4
num_exists :   1
num_literals : 8
quantified form : forall ACCEPTOR1,QUORUM0,PROPOSER1,ACCEPTOR0. ~promise(ACCEPTOR1,PROPOSER1) | didNotPromise(ACCEPTOR0) | ~member(ACCEPTOR0,QUORUM0) | chosenAt(QUORUM0,PROPOSER1) | ~member(ACCEPTOR1,QUORUM0) | (exists PROPOSER0. (start(PROPOSER0) & PROPOSER0 ~= PROPOSER1)) | ACCEPTOR0 = ACCEPTOR1
qcost : 13




=== Prime Orbit 36 =====================
size : 18
num_suborbits: 1
564 (*) : 0--0-----0--1---0---------0
564     : ['leader(proposer0)', '~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~didNotPromise(acceptor0)', '~promise(acceptor0,proposer1)', '~start(proposer2)']
565     : 0--0-----0--1----0-------0-
565     : ['leader(proposer0)', '~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~didNotPromise(acceptor0)', '~promise(acceptor0,proposer2)', '~start(proposer1)']
566     : -0--0----0---1-0----------0
566     : ['leader(proposer1)', '~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~didNotPromise(acceptor0)', '~promise(acceptor0,proposer0)', '~start(proposer2)']
567     : -0--0----0---1---0------0--
567     : ['leader(proposer1)', '~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~didNotPromise(acceptor0)', '~promise(acceptor0,proposer2)', '~start(proposer0)']
568     : --0--0---0----10---------0-
568     : ['leader(proposer2)', '~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~didNotPromise(acceptor0)', '~promise(acceptor0,proposer0)', '~start(proposer1)']
569     : --0--0---0----1-0-------0--
569     : ['leader(proposer2)', '~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~didNotPromise(acceptor0)', '~promise(acceptor0,proposer1)', '~start(proposer0)']
570     : 0-----0---0-1------0------0
570     : ['leader(proposer0)', '~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor1)', '~promise(acceptor1,proposer1)', '~start(proposer2)']
571     : 0-----0---0-1-------0----0-
571     : ['leader(proposer0)', '~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor1)', '~promise(acceptor1,proposer2)', '~start(proposer1)']
572     : -0-----0--0--1----0-------0
572     : ['leader(proposer1)', '~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor1)', '~promise(acceptor1,proposer0)', '~start(proposer2)']
573     : -0-----0--0--1------0---0--
573     : ['leader(proposer1)', '~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor1)', '~promise(acceptor1,proposer2)', '~start(proposer0)']
574     : --0-----0-0---1---0------0-
574     : ['leader(proposer2)', '~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor1)', '~promise(acceptor1,proposer0)', '~start(proposer1)']
575     : --0-----0-0---1----0----0--
575     : ['leader(proposer2)', '~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor1)', '~promise(acceptor1,proposer1)', '~start(proposer0)']
576     : ---0--0----01---------0---0
576     : ['leader(proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor2)', '~promise(acceptor2,proposer1)', '~start(proposer2)']
577     : ---0--0----01----------0-0-
577     : ['leader(proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor2)', '~promise(acceptor2,proposer2)', '~start(proposer1)']
578     : ----0--0---0-1-------0----0
578     : ['leader(proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor2)', '~promise(acceptor2,proposer0)', '~start(proposer2)']
579     : ----0--0---0-1---------00--
579     : ['leader(proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor2)', '~promise(acceptor2,proposer2)', '~start(proposer0)']
580     : -----0--0--0--1------0---0-
580     : ['leader(proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor2)', '~promise(acceptor2,proposer0)', '~start(proposer1)']
581     : -----0--0--0--1-------0-0--
581     : ['leader(proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor2)', '~promise(acceptor2,proposer1)', '~start(proposer0)']
num_forall :   6
num_exists :   0
num_literals : 12
quantified form : forall ACCEPTOR0,PROPOSER1,PROPOSER0,QUORUM0,QUORUM1,PROPOSER2. chosenAt(QUORUM0,PROPOSER0) | promise(ACCEPTOR0,PROPOSER1) | ~leader(PROPOSER0) | ~member(ACCEPTOR0,QUORUM1) | start(PROPOSER2) | didNotPromise(ACCEPTOR0) | ~member(ACCEPTOR0,QUORUM0) | chosenAt(QUORUM1,PROPOSER0) | (PROPOSER0 = PROPOSER2 | QUORUM0 = QUORUM1 | PROPOSER0 = PROPOSER1 | PROPOSER1 = PROPOSER2)
qcost : 18




=== Prime Orbit 37 =====================
size : 9
num_suborbits: 1
582 (*) : ---0--0----01------------00
582     : ['leader(proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor2)', '~start(proposer1)', '~start(proposer2)']
583     : ----0--0---0-1----------0-0
583     : ['leader(proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor2)', '~start(proposer0)', '~start(proposer2)']
584     : -----0--0--0--1---------00-
584     : ['leader(proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor2)', '~start(proposer0)', '~start(proposer1)']
585     : 0-----0---0-1------------00
585     : ['leader(proposer0)', '~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor1)', '~start(proposer1)', '~start(proposer2)']
586     : -0-----0--0--1----------0-0
586     : ['leader(proposer1)', '~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor1)', '~start(proposer0)', '~start(proposer2)']
587     : --0-----0-0---1---------00-
587     : ['leader(proposer2)', '~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor1)', '~start(proposer0)', '~start(proposer1)']
588     : 0--0-----0--1------------00
588     : ['leader(proposer0)', '~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~didNotPromise(acceptor0)', '~start(proposer1)', '~start(proposer2)']
589     : -0--0----0---1----------0-0
589     : ['leader(proposer1)', '~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~didNotPromise(acceptor0)', '~start(proposer0)', '~start(proposer2)']
590     : --0--0---0----1---------00-
590     : ['leader(proposer2)', '~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~didNotPromise(acceptor0)', '~start(proposer0)', '~start(proposer1)']
num_forall :   4
num_exists :   1
num_literals : 9
quantified form : forall QUORUM0,QUORUM1,PROPOSER1,ACCEPTOR0. ~member(ACCEPTOR0,QUORUM1) | chosenAt(QUORUM1,PROPOSER1) | didNotPromise(ACCEPTOR0) | ~member(ACCEPTOR0,QUORUM0) | chosenAt(QUORUM0,PROPOSER1) | ~leader(PROPOSER1) | (exists PROPOSER0. (start(PROPOSER0) & PROPOSER0 ~= PROPOSER1)) | QUORUM0 = QUORUM1
qcost : 14




=== Prime Orbit 38 =====================
size : 18
num_suborbits: 1
591 (*) : ------0---00-------0--0---0
591     : ['~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor1,proposer1)', '~promise(acceptor2,proposer1)', '~start(proposer2)']
592     : ------0---00--------0--0-0-
592     : ['~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor1,proposer2)', '~promise(acceptor2,proposer2)', '~start(proposer1)']
593     : -------0--00------0--0----0
593     : ['~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor1,proposer0)', '~promise(acceptor2,proposer0)', '~start(proposer2)']
594     : -------0--00--------0--00--
594     : ['~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor1,proposer2)', '~promise(acceptor2,proposer2)', '~start(proposer0)']
595     : --------0-00------0--0---0-
595     : ['~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor1,proposer0)', '~promise(acceptor2,proposer0)', '~start(proposer1)']
596     : --------0-00-------0--0-0--
596     : ['~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor1,proposer1)', '~promise(acceptor2,proposer1)', '~start(proposer0)']
597     : ---0-----0-0----0-----0---0
597     : ['~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor2)', '~promise(acceptor0,proposer1)', '~promise(acceptor2,proposer1)', '~start(proposer2)']
598     : ---0-----0-0-----0-----0-0-
598     : ['~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor2)', '~promise(acceptor0,proposer2)', '~promise(acceptor2,proposer2)', '~start(proposer1)']
599     : ----0----0-0---0-----0----0
599     : ['~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor2)', '~promise(acceptor0,proposer0)', '~promise(acceptor2,proposer0)', '~start(proposer2)']
600     : ----0----0-0-----0-----00--
600     : ['~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor2)', '~promise(acceptor0,proposer2)', '~promise(acceptor2,proposer2)', '~start(proposer0)']
601     : -----0---0-0---0-----0---0-
601     : ['~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor2)', '~promise(acceptor0,proposer0)', '~promise(acceptor2,proposer0)', '~start(proposer1)']
602     : -----0---0-0----0-----0-0--
602     : ['~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor2)', '~promise(acceptor0,proposer1)', '~promise(acceptor2,proposer1)', '~start(proposer0)']
603     : 0--------00-----0--0------0
603     : ['~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~promise(acceptor0,proposer1)', '~promise(acceptor1,proposer1)', '~start(proposer2)']
604     : 0--------00------0--0----0-
604     : ['~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~promise(acceptor0,proposer2)', '~promise(acceptor1,proposer2)', '~start(proposer1)']
605     : -0-------00----0--0-------0
605     : ['~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~promise(acceptor0,proposer0)', '~promise(acceptor1,proposer0)', '~start(proposer2)']
606     : -0-------00------0--0---0--
606     : ['~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~promise(acceptor0,proposer2)', '~promise(acceptor1,proposer2)', '~start(proposer0)']
607     : --0------00----0--0------0-
607     : ['~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~promise(acceptor0,proposer0)', '~promise(acceptor1,proposer0)', '~start(proposer1)']
608     : --0------00-----0--0----0--
608     : ['~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~promise(acceptor0,proposer1)', '~promise(acceptor1,proposer1)', '~start(proposer0)']
num_forall :   6
num_exists :   0
num_literals : 12
quantified form : forall ACCEPTOR0,PROPOSER0,PROPOSER1,ACCEPTOR1,QUORUM0,PROPOSER2. chosenAt(QUORUM0,PROPOSER0) | promise(ACCEPTOR0,PROPOSER1) | start(PROPOSER2) | didNotPromise(ACCEPTOR0) | ~member(ACCEPTOR0,QUORUM0) | didNotPromise(ACCEPTOR1) | promise(ACCEPTOR1,PROPOSER1) | ~member(ACCEPTOR1,QUORUM0) | (PROPOSER0 = PROPOSER2 | ACCEPTOR0 = ACCEPTOR1 | PROPOSER0 = PROPOSER1 | PROPOSER1 = PROPOSER2)
qcost : 18




=== Prime Orbit 39 =====================
size : 18
num_suborbits: 1
609 (*) : -0----0---0-----1----1----0
609     : ['promise(acceptor0,proposer1)', 'promise(acceptor2,proposer0)', '~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor1)', '~start(proposer2)']
610     : --0---0---0------1---1---0-
610     : ['promise(acceptor0,proposer2)', 'promise(acceptor2,proposer0)', '~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor1)', '~start(proposer1)']
611     : 0------0--0----1------1---0
611     : ['promise(acceptor0,proposer0)', 'promise(acceptor2,proposer1)', '~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor1)', '~start(proposer2)']
612     : --0----0--0------1----1-0--
612     : ['promise(acceptor0,proposer2)', 'promise(acceptor2,proposer1)', '~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor1)', '~start(proposer0)']
613     : 0-------0-0----1-------1-0-
613     : ['promise(acceptor0,proposer0)', 'promise(acceptor2,proposer2)', '~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor1)', '~start(proposer1)']
614     : -0------0-0-----1------10--
614     : ['promise(acceptor0,proposer1)', 'promise(acceptor2,proposer2)', '~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor1)', '~start(proposer0)']
615     : ----0-0----0----1-1-------0
615     : ['promise(acceptor0,proposer1)', 'promise(acceptor1,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor2)', '~start(proposer2)']
616     : -----00----0-----11------0-
616     : ['promise(acceptor0,proposer2)', 'promise(acceptor1,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor2)', '~start(proposer1)']
617     : ---0---0---0---1---1------0
617     : ['promise(acceptor0,proposer0)', 'promise(acceptor1,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor2)', '~start(proposer2)']
618     : -----0-0---0-----1-1----0--
618     : ['promise(acceptor0,proposer2)', 'promise(acceptor1,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor2)', '~start(proposer0)']
619     : ---0----0--0---1----1----0-
619     : ['promise(acceptor0,proposer0)', 'promise(acceptor1,proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor2)', '~start(proposer1)']
620     : ----0---0--0----1---1---0--
620     : ['promise(acceptor0,proposer1)', 'promise(acceptor1,proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor2)', '~start(proposer0)']
621     : -0-0-----0---------1-1----0
621     : ['promise(acceptor1,proposer1)', 'promise(acceptor2,proposer0)', '~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~didNotPromise(acceptor0)', '~start(proposer2)']
622     : --00-----0----------11---0-
622     : ['promise(acceptor1,proposer2)', 'promise(acceptor2,proposer0)', '~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~didNotPromise(acceptor0)', '~start(proposer1)']
623     : 0---0----0--------1---1---0
623     : ['promise(acceptor1,proposer0)', 'promise(acceptor2,proposer1)', '~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~didNotPromise(acceptor0)', '~start(proposer2)']
624     : --0-0----0----------1-1-0--
624     : ['promise(acceptor1,proposer2)', 'promise(acceptor2,proposer1)', '~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~didNotPromise(acceptor0)', '~start(proposer0)']
625     : 0----0---0--------1----1-0-
625     : ['promise(acceptor1,proposer0)', 'promise(acceptor2,proposer2)', '~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~didNotPromise(acceptor0)', '~start(proposer1)']
626     : -0---0---0---------1---10--
626     : ['promise(acceptor1,proposer1)', 'promise(acceptor2,proposer2)', '~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~didNotPromise(acceptor0)', '~start(proposer0)']
num_forall :   8
num_exists :   0
num_literals : 19
quantified form : forall ACCEPTOR0,PROPOSER2,ACCEPTOR2,PROPOSER1,PROPOSER0,ACCEPTOR1,QUORUM0,QUORUM1. member(ACCEPTOR1,QUORUM1) | ~member(ACCEPTOR2,QUORUM1) | member(ACCEPTOR2,QUORUM0) | ~promise(ACCEPTOR1,PROPOSER1) | ~member(ACCEPTOR0,QUORUM1) | start(PROPOSER2) | didNotPromise(ACCEPTOR0) | ~member(ACCEPTOR0,QUORUM0) | chosenAt(QUORUM0,PROPOSER1) | ~promise(ACCEPTOR2,PROPOSER0) | chosenAt(QUORUM1,PROPOSER0) | ~member(ACCEPTOR1,QUORUM0) | (PROPOSER0 = PROPOSER2 | ACCEPTOR0 = ACCEPTOR2 | QUORUM0 = QUORUM1 | ACCEPTOR1 = ACCEPTOR2 | PROPOSER1 = PROPOSER2 | ACCEPTOR0 = ACCEPTOR1 | PROPOSER0 = PROPOSER1)
qcost : 27




=== Prime Orbit 41 =====================
size : 9
num_suborbits: 1
645 (*) : --0-----0-0---1---00-------
645     : ['leader(proposer2)', '~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor1)', '~promise(acceptor1,proposer0)', '~promise(acceptor1,proposer1)']
646     : -0-----0--0--1----0-0------
646     : ['leader(proposer1)', '~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor1)', '~promise(acceptor1,proposer0)', '~promise(acceptor1,proposer2)']
647     : 0-----0---0-1------00------
647     : ['leader(proposer0)', '~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor1)', '~promise(acceptor1,proposer1)', '~promise(acceptor1,proposer2)']
648     : -----0--0--0--1------00----
648     : ['leader(proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor2)', '~promise(acceptor2,proposer0)', '~promise(acceptor2,proposer1)']
649     : ----0--0---0-1-------0-0---
649     : ['leader(proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor2)', '~promise(acceptor2,proposer0)', '~promise(acceptor2,proposer2)']
650     : ---0--0----01---------00---
650     : ['leader(proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor2)', '~promise(acceptor2,proposer1)', '~promise(acceptor2,proposer2)']
651     : --0--0---0----100----------
651     : ['leader(proposer2)', '~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~didNotPromise(acceptor0)', '~promise(acceptor0,proposer0)', '~promise(acceptor0,proposer1)']
652     : -0--0----0---1-0-0---------
652     : ['leader(proposer1)', '~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~didNotPromise(acceptor0)', '~promise(acceptor0,proposer0)', '~promise(acceptor0,proposer2)']
653     : 0--0-----0--1---00---------
653     : ['leader(proposer0)', '~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~didNotPromise(acceptor0)', '~promise(acceptor0,proposer1)', '~promise(acceptor0,proposer2)']
num_forall :   4
num_exists :   1
num_literals : 9
quantified form : forall QUORUM0,QUORUM1,PROPOSER1,ACCEPTOR0. ~member(ACCEPTOR0,QUORUM1) | chosenAt(QUORUM1,PROPOSER1) | didNotPromise(ACCEPTOR0) | ~member(ACCEPTOR0,QUORUM0) | chosenAt(QUORUM0,PROPOSER1) | ~leader(PROPOSER1) | (exists PROPOSER0. (promise(ACCEPTOR0,PROPOSER0) & PROPOSER0 ~= PROPOSER1)) | QUORUM0 = QUORUM1
qcost : 14




=== Prime Orbit 43 =====================
size : 36
num_suborbits: 1
663 (*) : -----00--0-0---0--1------0-
663     : ['promise(acceptor1,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor2)', '~promise(acceptor0,proposer0)', '~start(proposer1)']
664     : ----0-0--0-0---0--1-------0
664     : ['promise(acceptor1,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor2)', '~promise(acceptor0,proposer0)', '~start(proposer2)']
665     : -----0-0-0-0----0--1----0--
665     : ['promise(acceptor1,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor2)', '~promise(acceptor0,proposer1)', '~start(proposer0)']
666     : ---0---0-0-0----0--1------0
666     : ['promise(acceptor1,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor2)', '~promise(acceptor0,proposer1)', '~start(proposer2)']
667     : ----0---00-0-----0--1---0--
667     : ['promise(acceptor1,proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor2)', '~promise(acceptor0,proposer2)', '~start(proposer0)']
668     : ---0----00-0-----0--1----0-
668     : ['promise(acceptor1,proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor2)', '~promise(acceptor0,proposer2)', '~start(proposer1)']
669     : --0---0--00----0-----1---0-
669     : ['promise(acceptor2,proposer0)', '~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~promise(acceptor0,proposer0)', '~start(proposer1)']
670     : -0----0--00----0-----1----0
670     : ['promise(acceptor2,proposer0)', '~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~promise(acceptor0,proposer0)', '~start(proposer2)']
671     : --0----0-00-----0-----1-0--
671     : ['promise(acceptor2,proposer1)', '~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~promise(acceptor0,proposer1)', '~start(proposer0)']
672     : 0------0-00-----0-----1---0
672     : ['promise(acceptor2,proposer1)', '~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~promise(acceptor0,proposer1)', '~start(proposer2)']
673     : -0------000------0-----10--
673     : ['promise(acceptor2,proposer2)', '~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~promise(acceptor0,proposer2)', '~start(proposer0)']
674     : 0-------000------0-----1-0-
674     : ['promise(acceptor2,proposer2)', '~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~promise(acceptor0,proposer2)', '~start(proposer1)']
675     : ---0----0-00---1--0------0-
675     : ['promise(acceptor0,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor1,proposer0)', '~start(proposer1)']
676     : ---0---0--00---1--0-------0
676     : ['promise(acceptor0,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor1,proposer0)', '~start(proposer2)']
677     : ----0---0-00----1--0----0--
677     : ['promise(acceptor0,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor1,proposer1)', '~start(proposer0)']
678     : ----0-0---00----1--0------0
678     : ['promise(acceptor0,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor1,proposer1)', '~start(proposer2)']
679     : -----0-0--00-----1--0---0--
679     : ['promise(acceptor0,proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor1,proposer2)', '~start(proposer0)']
680     : -----00---00-----1--0----0-
680     : ['promise(acceptor0,proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor1,proposer2)', '~start(proposer1)']
681     : --00-----00-------0--1---0-
681     : ['promise(acceptor2,proposer0)', '~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~promise(acceptor1,proposer0)', '~start(proposer1)']
682     : -0-0-----00-------0--1----0
682     : ['promise(acceptor2,proposer0)', '~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~promise(acceptor1,proposer0)', '~start(proposer2)']
683     : --0-0----00--------0--1-0--
683     : ['promise(acceptor2,proposer1)', '~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~promise(acceptor1,proposer1)', '~start(proposer0)']
684     : 0---0----00--------0--1---0
684     : ['promise(acceptor2,proposer1)', '~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~promise(acceptor1,proposer1)', '~start(proposer2)']
685     : -0---0---00---------0--10--
685     : ['promise(acceptor2,proposer2)', '~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~promise(acceptor1,proposer2)', '~start(proposer0)']
686     : 0----0---00---------0--1-0-
686     : ['promise(acceptor2,proposer2)', '~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~promise(acceptor1,proposer2)', '~start(proposer1)']
687     : 0-------0-00---1-----0---0-
687     : ['promise(acceptor0,proposer0)', '~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor2,proposer0)', '~start(proposer1)']
688     : 0------0--00---1-----0----0
688     : ['promise(acceptor0,proposer0)', '~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor2,proposer0)', '~start(proposer2)']
689     : -0------0-00----1-----0-0--
689     : ['promise(acceptor0,proposer1)', '~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor2,proposer1)', '~start(proposer0)']
690     : -0----0---00----1-----0---0
690     : ['promise(acceptor0,proposer1)', '~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor2,proposer1)', '~start(proposer2)']
691     : --0----0--00-----1-----00--
691     : ['promise(acceptor0,proposer2)', '~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor2,proposer2)', '~start(proposer0)']
692     : --0---0---00-----1-----0-0-
692     : ['promise(acceptor0,proposer2)', '~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor2,proposer2)', '~start(proposer1)']
693     : 0----0---0-0------1--0---0-
693     : ['promise(acceptor1,proposer0)', '~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor2)', '~promise(acceptor2,proposer0)', '~start(proposer1)']
694     : 0---0----0-0------1--0----0
694     : ['promise(acceptor1,proposer0)', '~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor2)', '~promise(acceptor2,proposer0)', '~start(proposer2)']
695     : -0---0---0-0-------1--0-0--
695     : ['promise(acceptor1,proposer1)', '~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor2)', '~promise(acceptor2,proposer1)', '~start(proposer0)']
696     : -0-0-----0-0-------1--0---0
696     : ['promise(acceptor1,proposer1)', '~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor2)', '~promise(acceptor2,proposer1)', '~start(proposer2)']
697     : --0-0----0-0--------1--00--
697     : ['promise(acceptor1,proposer2)', '~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor2)', '~promise(acceptor2,proposer2)', '~start(proposer0)']
698     : --00-----0-0--------1--0-0-
698     : ['promise(acceptor1,proposer2)', '~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor2)', '~promise(acceptor2,proposer2)', '~start(proposer1)']
num_forall :   8
num_exists :   0
num_literals : 20
quantified form : forall ACCEPTOR0,PROPOSER2,ACCEPTOR2,PROPOSER1,PROPOSER0,ACCEPTOR1,QUORUM0,QUORUM1. ~promise(ACCEPTOR0,PROPOSER0) | chosenAt(QUORUM0,PROPOSER0) | member(ACCEPTOR2,QUORUM0) | ~member(ACCEPTOR2,QUORUM1) | promise(ACCEPTOR2,PROPOSER0) | didNotPromise(ACCEPTOR2) | member(ACCEPTOR0,QUORUM1) | chosenAt(QUORUM1,PROPOSER1) | start(PROPOSER2) | ~member(ACCEPTOR0,QUORUM0) | didNotPromise(ACCEPTOR1) | ~member(ACCEPTOR1,QUORUM1) | ~member(ACCEPTOR1,QUORUM0) | (PROPOSER0 = PROPOSER2 | ACCEPTOR0 = ACCEPTOR2 | QUORUM0 = QUORUM1 | ACCEPTOR1 = ACCEPTOR2 | PROPOSER1 = PROPOSER2 | ACCEPTOR0 = ACCEPTOR1 | PROPOSER0 = PROPOSER1)
qcost : 28




=== Prime Orbit 44 =====================
size : 18
num_suborbits: 1
699 (*) : 0----00--0-0------1------0-
699     : ['promise(acceptor1,proposer0)', '~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor2)', '~start(proposer1)']
700     : 0---0-0--0-0------1-------0
700     : ['promise(acceptor1,proposer0)', '~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor2)', '~start(proposer2)']
701     : -0---0-0-0-0-------1----0--
701     : ['promise(acceptor1,proposer1)', '~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor2)', '~start(proposer0)']
702     : -0-0---0-0-0-------1------0
702     : ['promise(acceptor1,proposer1)', '~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor2)', '~start(proposer2)']
703     : --0-0---00-0--------1---0--
703     : ['promise(acceptor1,proposer2)', '~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor2)', '~start(proposer0)']
704     : --00----00-0--------1----0-
704     : ['promise(acceptor1,proposer2)', '~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor2)', '~start(proposer1)']
705     : --00--0--00----------1---0-
705     : ['promise(acceptor2,proposer0)', '~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~start(proposer1)']
706     : -0-0--0--00----------1----0
706     : ['promise(acceptor2,proposer0)', '~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~start(proposer2)']
707     : --0-0--0-00-----------1-0--
707     : ['promise(acceptor2,proposer1)', '~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~start(proposer0)']
708     : 0---0--0-00-----------1---0
708     : ['promise(acceptor2,proposer1)', '~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~start(proposer2)']
709     : -0---0--000------------10--
709     : ['promise(acceptor2,proposer2)', '~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~start(proposer0)']
710     : 0----0--000------------1-0-
710     : ['promise(acceptor2,proposer2)', '~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~start(proposer1)']
711     : 0--0----0-00---1---------0-
711     : ['promise(acceptor0,proposer0)', '~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~start(proposer1)']
712     : 0--0---0--00---1----------0
712     : ['promise(acceptor0,proposer0)', '~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~start(proposer2)']
713     : -0--0---0-00----1-------0--
713     : ['promise(acceptor0,proposer1)', '~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~start(proposer0)']
714     : -0--0-0---00----1---------0
714     : ['promise(acceptor0,proposer1)', '~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~start(proposer2)']
715     : --0--0-0--00-----1------0--
715     : ['promise(acceptor0,proposer2)', '~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~start(proposer0)']
716     : --0--00---00-----1-------0-
716     : ['promise(acceptor0,proposer2)', '~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~start(proposer1)']
num_forall :   9
num_exists :   0
num_literals : 25
quantified form : forall ACCEPTOR0,PROPOSER2,ACCEPTOR2,PROPOSER1,PROPOSER0,QUORUM2,ACCEPTOR1,QUORUM0,QUORUM1. ~promise(ACCEPTOR0,PROPOSER0) | member(ACCEPTOR1,QUORUM1) | chosenAt(QUORUM0,PROPOSER0) | member(ACCEPTOR2,QUORUM0) | ~member(ACCEPTOR2,QUORUM1) | member(ACCEPTOR0,QUORUM2) | didNotPromise(ACCEPTOR2) | ~member(ACCEPTOR0,QUORUM1) | start(PROPOSER2) | ~member(ACCEPTOR0,QUORUM0) | ~member(ACCEPTOR1,QUORUM2) | chosenAt(QUORUM2,PROPOSER1) | chosenAt(QUORUM1,PROPOSER0) | didNotPromise(ACCEPTOR1) | ~member(ACCEPTOR2,QUORUM2) | ~member(ACCEPTOR1,QUORUM0) | (PROPOSER0 = PROPOSER2 | ACCEPTOR0 = ACCEPTOR2 | QUORUM0 = QUORUM2 | QUORUM0 = QUORUM1 | ACCEPTOR1 = ACCEPTOR2 | QUORUM1 = QUORUM2 | PROPOSER1 = PROPOSER2 | ACCEPTOR0 = ACCEPTOR1 | PROPOSER0 = PROPOSER1)
qcost : 34




=== Prime Orbit 45 =====================
size : 18
num_suborbits: 1
717 (*) : 0---0--0-000---------0----0
717     : ['~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor2,proposer0)', '~start(proposer2)']
718     : 0----0--0000---------0---0-
718     : ['~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor2,proposer0)', '~start(proposer1)']
719     : -0-0--0--000----------0---0
719     : ['~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor2,proposer1)', '~start(proposer2)']
720     : -0---0--0000----------0-0--
720     : ['~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor2,proposer1)', '~start(proposer0)']
721     : --00--0--000-----------0-0-
721     : ['~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor2,proposer2)', '~start(proposer1)']
722     : --0-0--0-000-----------00--
722     : ['~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor2,proposer2)', '~start(proposer0)']
723     : -0-0---0-000------0-------0
723     : ['~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor1,proposer0)', '~start(proposer2)']
724     : --00----0000------0------0-
724     : ['~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor1,proposer0)', '~start(proposer1)']
725     : 0---0-0--000-------0------0
725     : ['~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor1,proposer1)', '~start(proposer2)']
726     : --0-0---0000-------0----0--
726     : ['~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor1,proposer1)', '~start(proposer0)']
727     : 0----00--000--------0----0-
727     : ['~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor1,proposer2)', '~start(proposer1)']
728     : -0---0-0-000--------0---0--
728     : ['~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor1,proposer2)', '~start(proposer0)']
729     : -0--0-0--000---0----------0
729     : ['~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor0,proposer0)', '~start(proposer2)']
730     : --0--00--000---0---------0-
730     : ['~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor0,proposer0)', '~start(proposer1)']
731     : 0--0---0-000----0---------0
731     : ['~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor0,proposer1)', '~start(proposer2)']
732     : --0--0-0-000----0-------0--
732     : ['~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor0,proposer1)', '~start(proposer0)']
733     : 0--0----0000-----0-------0-
733     : ['~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor0,proposer2)', '~start(proposer1)']
734     : -0--0---0000-----0------0--
734     : ['~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor0,proposer2)', '~start(proposer0)']
num_forall :   9
num_exists :   0
num_literals : 26
quantified form : forall ACCEPTOR0,PROPOSER2,ACCEPTOR2,PROPOSER1,PROPOSER0,QUORUM2,ACCEPTOR1,QUORUM0,QUORUM1. member(ACCEPTOR1,QUORUM1) | ~member(ACCEPTOR2,QUORUM1) | member(ACCEPTOR2,QUORUM0) | promise(ACCEPTOR1,PROPOSER0) | member(ACCEPTOR0,QUORUM2) | didNotPromise(ACCEPTOR2) | ~member(ACCEPTOR0,QUORUM1) | start(PROPOSER2) | didNotPromise(ACCEPTOR0) | ~member(ACCEPTOR0,QUORUM0) | ~member(ACCEPTOR1,QUORUM2) | chosenAt(QUORUM2,PROPOSER1) | chosenAt(QUORUM0,PROPOSER1) | chosenAt(QUORUM1,PROPOSER0) | didNotPromise(ACCEPTOR1) | ~member(ACCEPTOR2,QUORUM2) | ~member(ACCEPTOR1,QUORUM0) | (PROPOSER0 = PROPOSER2 | ACCEPTOR0 = ACCEPTOR2 | QUORUM0 = QUORUM2 | QUORUM0 = QUORUM1 | ACCEPTOR1 = ACCEPTOR2 | QUORUM1 = QUORUM2 | PROPOSER1 = PROPOSER2 | ACCEPTOR0 = ACCEPTOR1 | PROPOSER0 = PROPOSER1)
qcost : 35




=== Prime Orbit 46 =====================
size : 18
num_suborbits: 1
735 (*) : 0---0----000-------0-0----0
735     : ['~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor1,proposer1)', '~promise(acceptor2,proposer0)', '~start(proposer2)']
736     : 0----0---000--------00---0-
736     : ['~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor1,proposer2)', '~promise(acceptor2,proposer0)', '~start(proposer1)']
737     : -0-0-----000------0---0---0
737     : ['~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor1,proposer0)', '~promise(acceptor2,proposer1)', '~start(proposer2)']
738     : -0---0---000--------0-0-0--
738     : ['~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor1,proposer2)', '~promise(acceptor2,proposer1)', '~start(proposer0)']
739     : --00-----000------0----0-0-
739     : ['~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor1,proposer0)', '~promise(acceptor2,proposer2)', '~start(proposer1)']
740     : --0-0----000-------0---00--
740     : ['~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor1,proposer1)', '~promise(acceptor2,proposer2)', '~start(proposer0)']
741     : 0------0-000----0----0----0
741     : ['~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor0,proposer1)', '~promise(acceptor2,proposer0)', '~start(proposer2)']
742     : 0-------0000-----0---0---0-
742     : ['~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor0,proposer2)', '~promise(acceptor2,proposer0)', '~start(proposer1)']
743     : -0----0--000---0------0---0
743     : ['~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor0,proposer0)', '~promise(acceptor2,proposer1)', '~start(proposer2)']
744     : -0------0000-----0----0-0--
744     : ['~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor0,proposer2)', '~promise(acceptor2,proposer1)', '~start(proposer0)']
745     : --0---0--000---0-------0-0-
745     : ['~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor0,proposer0)', '~promise(acceptor2,proposer2)', '~start(proposer1)']
746     : --0----0-000----0------00--
746     : ['~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor0,proposer1)', '~promise(acceptor2,proposer2)', '~start(proposer0)']
747     : ---0---0-000----0-0-------0
747     : ['~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor0,proposer1)', '~promise(acceptor1,proposer0)', '~start(proposer2)']
748     : ---0----0000-----00------0-
748     : ['~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor0,proposer2)', '~promise(acceptor1,proposer0)', '~start(proposer1)']
749     : ----0-0--000---0---0------0
749     : ['~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor0,proposer0)', '~promise(acceptor1,proposer1)', '~start(proposer2)']
750     : ----0---0000-----0-0----0--
750     : ['~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor0,proposer2)', '~promise(acceptor1,proposer1)', '~start(proposer0)']
751     : -----00--000---0----0----0-
751     : ['~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor0,proposer0)', '~promise(acceptor1,proposer2)', '~start(proposer1)']
752     : -----0-0-000----0---0---0--
752     : ['~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor0,proposer1)', '~promise(acceptor1,proposer2)', '~start(proposer0)']
num_forall :   8
num_exists :   0
num_literals : 21
quantified form : forall ACCEPTOR0,PROPOSER2,ACCEPTOR2,PROPOSER1,PROPOSER0,ACCEPTOR1,QUORUM0,QUORUM1. member(ACCEPTOR1,QUORUM1) | chosenAt(QUORUM0,PROPOSER0) | ~member(ACCEPTOR2,QUORUM1) | member(ACCEPTOR2,QUORUM0) | promise(ACCEPTOR2,PROPOSER0) | didNotPromise(ACCEPTOR2) | ~member(ACCEPTOR0,QUORUM1) | chosenAt(QUORUM1,PROPOSER1) | start(PROPOSER2) | didNotPromise(ACCEPTOR0) | ~member(ACCEPTOR0,QUORUM0) | didNotPromise(ACCEPTOR1) | promise(ACCEPTOR1,PROPOSER1) | ~member(ACCEPTOR1,QUORUM0) | (PROPOSER0 = PROPOSER2 | ACCEPTOR0 = ACCEPTOR2 | QUORUM0 = QUORUM1 | ACCEPTOR1 = ACCEPTOR2 | PROPOSER1 = PROPOSER2 | ACCEPTOR0 = ACCEPTOR1 | PROPOSER0 = PROPOSER1)
qcost : 29




=== Prime Orbit 51 =====================
size : 3
num_suborbits: 1
843 (*) : 0-00-00-0000-------------0-
843     : ['~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~start(proposer1)']
844     : 00-00-00-000--------------0
844     : ['~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~start(proposer2)']
845     : -00-00-00000------------0--
845     : ['~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~start(proposer0)']
num_forall :   7
num_exists :   1
num_literals : 23
quantified form : forall ACCEPTOR0,ACCEPTOR2,PROPOSER1,QUORUM2,ACCEPTOR1,QUORUM0,QUORUM1. member(ACCEPTOR1,QUORUM1) | member(ACCEPTOR2,QUORUM0) | ~member(ACCEPTOR2,QUORUM1) | member(ACCEPTOR0,QUORUM2) | didNotPromise(ACCEPTOR2) | start(PROPOSER1) | ~member(ACCEPTOR0,QUORUM1) | didNotPromise(ACCEPTOR0) | ~member(ACCEPTOR0,QUORUM0) | ~member(ACCEPTOR1,QUORUM2) | didNotPromise(ACCEPTOR1) | ~member(ACCEPTOR2,QUORUM2) | ~member(ACCEPTOR1,QUORUM0) | (exists PROPOSER0. ((chosenAt(QUORUM0,PROPOSER0) | chosenAt(QUORUM2,PROPOSER0) | chosenAt(QUORUM1,PROPOSER0)) & PROPOSER0 ~= PROPOSER1)) | (ACCEPTOR0 = ACCEPTOR2 | QUORUM0 = QUORUM2 | QUORUM0 = QUORUM1 | ACCEPTOR1 = ACCEPTOR2 | QUORUM1 = QUORUM2 | ACCEPTOR0 = ACCEPTOR1)
qcost : 31



[QRM NOTE]: Time elapsed since start: 7.711 seconds

[QRM NOTE]: Time elapsed since last: 0.486 seconds

[QRM NOTE]: Peak memory: 3253176 bytes


======================================================================================================

	[MIN]: Minimization on [ivybench/sym_quorum/ivy/simple-election: acceptor=3,proposer=3]

======================================================================================================


New level: 1
 pending : [5, 6, 8, 9, 10, 13, 14, 15, 16, 17, 18, 19, 20, 21, 23, 24, 26, 27, 28, 29, 30, 31, 32, 33, 36, 37, 38, 39, 41, 43, 44, 45, 46, 51]
 solution : [7]


Before reduction : 
 pending  : [5, 6, 8, 9, 10, 13, 14, 15, 16, 17, 18, 19, 20, 21, 23, 24, 26, 27, 28, 29, 30, 31, 32, 33, 36, 37, 38, 39, 41, 43, 44, 45, 46, 51]
 solution : [7]

Essensial at level 1 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 1048576), (6, 1048576), (7, -1), (8, 17179869184), (9, 134217728), (10, 17179869184), (11, -1), (12, -1), (13, 2147483648), (14, 8388608), (15, 1073741824), (16, 16777216), (17, 262144), (18, 67108864), (19, 33554432), (20, 524288), (21, 1114112), (22, -1), (23, 134217728), (24, 1073741824), (25, -1), (26, 4194304), (27, 4294967296), (28, 4294967296), (29, 1048576), (30, 16384), (31, 32768), (32, 2147483648), (33, 4194304), (34, -1), (35, -1), (36, 268435456), (37, 1073741824), (38, 134217728), (39, 16384), (40, -1), (41, 4194304), (42, -1), (43, 524288), (44, 524288), (45, 67108864), (46, 16777216), (47, -1), (48, -1), (49, -1), (50, -1), (51, 67108864), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 1048576), (6, 1048576), (7, -1), (8, 17179869184), (9, 134217728), (10, 17179869184), (11, -1), (12, -1), (13, 2147483648), (14, 8388608), (15, 1073741824), (16, 16777216), (17, 262144), (18, 67108864), (19, 33554432), (20, 524288), (21, 1114112), (22, -1), (23, 134217728), (24, 1073741824), (25, -1), (26, 4194304), (27, 4294967296), (28, 4294967296), (29, 1048576), (30, 16384), (31, 32768), (32, 2147483648), (33, 4194304), (34, -1), (35, -1), (36, 268435456), (37, 1073741824), (38, 134217728), (39, 16384), (40, -1), (41, 4194304), (42, -1), (43, 524288), (44, 524288), (45, 67108864), (46, 16777216), (47, -1), (48, -1), (49, -1), (50, -1), (51, 67108864), (52, -1)]

Covered at level 1 : set()

After reduction : 
 pending  : [5, 6, 8, 9, 10, 13, 14, 15, 16, 17, 18, 19, 20, 21, 23, 24, 26, 27, 28, 29, 30, 31, 32, 33, 36, 37, 38, 39, 41, 43, 44, 45, 46, 51]
 solution : [7]


Solution : [7] has cost 6.


Decide in level 1 among pending : [5, 6, 8, 9, 10, 13, 14, 15, 16, 17, 18, 19, 20, 21, 23, 24, 26, 27, 28, 29, 30, 31, 32, 33, 36, 37, 38, 39, 41, 43, 44, 45, 46, 51]

Coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 1048576), (6, 1048576), (7, -1), (8, 17179869184), (9, 134217728), (10, 17179869184), (11, -1), (12, -1), (13, 2147483648), (14, 8388608), (15, 1073741824), (16, 16777216), (17, 262144), (18, 67108864), (19, 33554432), (20, 524288), (21, 1114112), (22, -1), (23, 134217728), (24, 1073741824), (25, -1), (26, 4194304), (27, 4294967296), (28, 4294967296), (29, 1048576), (30, 16384), (31, 32768), (32, 2147483648), (33, 4194304), (34, -1), (35, -1), (36, 268435456), (37, 1073741824), (38, 134217728), (39, 16384), (40, -1), (41, 4194304), (42, -1), (43, 524288), (44, 524288), (45, 67108864), (46, 16777216), (47, -1), (48, -1), (49, -1), (50, -1), (51, 67108864), (52, -1)]

Decide 8 with phase True at level 1

After decision at level 1
 pending : [5, 6, 9, 10, 13, 14, 15, 16, 17, 18, 19, 20, 21, 23, 24, 26, 27, 28, 29, 30, 31, 32, 33, 36, 37, 38, 39, 41, 43, 44, 45, 46, 51]
 solution : [7, 8]


New level: 2
 pending : [5, 6, 9, 10, 13, 14, 15, 16, 17, 18, 19, 20, 21, 23, 24, 26, 27, 28, 29, 30, 31, 32, 33, 36, 37, 38, 39, 41, 43, 44, 45, 46, 51]
 solution : [7, 8]


Before reduction : 
 pending  : [5, 6, 9, 10, 13, 14, 15, 16, 17, 18, 19, 20, 21, 23, 24, 26, 27, 28, 29, 30, 31, 32, 33, 36, 37, 38, 39, 41, 43, 44, 45, 46, 51]
 solution : [7, 8]

Essensial at level 2 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 1048576), (6, 1048576), (7, -1), (8, 17179869184), (9, 134217728), (10, 17179869184), (11, -1), (12, -1), (13, 2147483648), (14, 8388608), (15, 1073741824), (16, 16777216), (17, 262144), (18, 67108864), (19, 33554432), (20, 524288), (21, 1114112), (22, -1), (23, 134217728), (24, 1073741824), (25, -1), (26, 4194304), (27, 4294967296), (28, 4294967296), (29, 1048576), (30, 16384), (31, 32768), (32, 2147483648), (33, 4194304), (34, -1), (35, -1), (36, 268435456), (37, 1073741824), (38, 134217728), (39, 16384), (40, -1), (41, 4194304), (42, -1), (43, 524288), (44, 524288), (45, 67108864), (46, 16777216), (47, -1), (48, -1), (49, -1), (50, -1), (51, 67108864), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 1048576), (6, 262144), (7, -1), (8, -1), (9, 134217728), (10, 4294967296), (11, -1), (12, -1), (13, 536870912), (14, 2097152), (15, 268435456), (16, 4194304), (17, 65536), (18, 16777216), (19, 8388608), (20, 131072), (21, 278528), (22, -1), (23, 134217728), (24, 1073741824), (25, -1), (26, 1048576), (27, 1073741824), (28, 4294967296), (29, 1048576), (30, 16384), (31, 32768), (32, 2147483648), (33, 4194304), (34, -1), (35, -1), (36, 67108864), (37, 268435456), (38, 134217728), (39, 16384), (40, -1), (41, 1048576), (42, -1), (43, 524288), (44, 524288), (45, 67108864), (46, 16777216), (47, -1), (48, -1), (49, -1), (50, -1), (51, 67108864), (52, -1)]

Covered at level 2 : set()

After reduction : 
 pending  : [5, 6, 9, 10, 13, 14, 15, 16, 17, 18, 19, 20, 21, 23, 24, 26, 27, 28, 29, 30, 31, 32, 33, 36, 37, 38, 39, 41, 43, 44, 45, 46, 51]
 solution : [7, 8]


Solution : [7, 8] has cost 11.


Decide in level 2 among pending : [5, 6, 9, 10, 13, 14, 15, 16, 17, 18, 19, 20, 21, 23, 24, 26, 27, 28, 29, 30, 31, 32, 33, 36, 37, 38, 39, 41, 43, 44, 45, 46, 51]

Coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 1048576), (6, 262144), (7, -1), (8, -1), (9, 134217728), (10, 4294967296), (11, -1), (12, -1), (13, 536870912), (14, 2097152), (15, 268435456), (16, 4194304), (17, 65536), (18, 16777216), (19, 8388608), (20, 131072), (21, 278528), (22, -1), (23, 134217728), (24, 1073741824), (25, -1), (26, 1048576), (27, 1073741824), (28, 4294967296), (29, 1048576), (30, 16384), (31, 32768), (32, 2147483648), (33, 4194304), (34, -1), (35, -1), (36, 67108864), (37, 268435456), (38, 134217728), (39, 16384), (40, -1), (41, 1048576), (42, -1), (43, 524288), (44, 524288), (45, 67108864), (46, 16777216), (47, -1), (48, -1), (49, -1), (50, -1), (51, 67108864), (52, -1)]

Decide 10 with phase True at level 2

After decision at level 2
 pending : [5, 6, 9, 13, 14, 15, 16, 17, 18, 19, 20, 21, 23, 24, 26, 27, 28, 29, 30, 31, 32, 33, 36, 37, 38, 39, 41, 43, 44, 45, 46, 51]
 solution : [7, 8, 10]


New level: 3
 pending : [5, 6, 9, 13, 14, 15, 16, 17, 18, 19, 20, 21, 23, 24, 26, 27, 28, 29, 30, 31, 32, 33, 36, 37, 38, 39, 41, 43, 44, 45, 46, 51]
 solution : [7, 8, 10]


Before reduction : 
 pending  : [5, 6, 9, 13, 14, 15, 16, 17, 18, 19, 20, 21, 23, 24, 26, 27, 28, 29, 30, 31, 32, 33, 36, 37, 38, 39, 41, 43, 44, 45, 46, 51]
 solution : [7, 8, 10]

Essensial at level 3 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 1048576), (6, 262144), (7, -1), (8, -1), (9, 134217728), (10, 4294967296), (11, -1), (12, -1), (13, 536870912), (14, 2097152), (15, 268435456), (16, 4194304), (17, 65536), (18, 16777216), (19, 8388608), (20, 131072), (21, 278528), (22, -1), (23, 134217728), (24, 1073741824), (25, -1), (26, 1048576), (27, 1073741824), (28, 4294967296), (29, 1048576), (30, 16384), (31, 32768), (32, 2147483648), (33, 4194304), (34, -1), (35, -1), (36, 67108864), (37, 268435456), (38, 134217728), (39, 16384), (40, -1), (41, 1048576), (42, -1), (43, 524288), (44, 524288), (45, 67108864), (46, 16777216), (47, -1), (48, -1), (49, -1), (50, -1), (51, 67108864), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 524288), (6, 131072), (7, -1), (8, -1), (9, 67108864), (10, -1), (11, -1), (12, -1), (13, 268435456), (14, 1048576), (15, 134217728), (16, 2097152), (17, 32768), (18, 8388608), (19, 4194304), (20, 65536), (21, 139264), (22, -1), (23, 67108864), (24, 268435456), (25, -1), (26, 524288), (27, 536870912), (28, 536870912), (29, 524288), (30, 8192), (31, 8192), (32, 536870912), (33, 1048576), (34, -1), (35, -1), (36, 33554432), (37, 134217728), (38, 67108864), (39, 8192), (40, -1), (41, 524288), (42, -1), (43, 262144), (44, 262144), (45, 33554432), (46, 8388608), (47, -1), (48, -1), (49, -1), (50, -1), (51, 33554432), (52, -1)]

Covered at level 3 : set()

After reduction : 
 pending  : [5, 6, 9, 13, 14, 15, 16, 17, 18, 19, 20, 21, 23, 24, 26, 27, 28, 29, 30, 31, 32, 33, 36, 37, 38, 39, 41, 43, 44, 45, 46, 51]
 solution : [7, 8, 10]


Solution : [7, 8, 10] has cost 14.


Decide in level 3 among pending : [5, 6, 9, 13, 14, 15, 16, 17, 18, 19, 20, 21, 23, 24, 26, 27, 28, 29, 30, 31, 32, 33, 36, 37, 38, 39, 41, 43, 44, 45, 46, 51]

Coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 524288), (6, 131072), (7, -1), (8, -1), (9, 67108864), (10, -1), (11, -1), (12, -1), (13, 268435456), (14, 1048576), (15, 134217728), (16, 2097152), (17, 32768), (18, 8388608), (19, 4194304), (20, 65536), (21, 139264), (22, -1), (23, 67108864), (24, 268435456), (25, -1), (26, 524288), (27, 536870912), (28, 536870912), (29, 524288), (30, 8192), (31, 8192), (32, 536870912), (33, 1048576), (34, -1), (35, -1), (36, 33554432), (37, 134217728), (38, 67108864), (39, 8192), (40, -1), (41, 524288), (42, -1), (43, 262144), (44, 262144), (45, 33554432), (46, 8388608), (47, -1), (48, -1), (49, -1), (50, -1), (51, 33554432), (52, -1)]

Decide 27 with phase True at level 3

After decision at level 3
 pending : [5, 6, 9, 13, 14, 15, 16, 17, 18, 19, 20, 21, 23, 24, 26, 28, 29, 30, 31, 32, 33, 36, 37, 38, 39, 41, 43, 44, 45, 46, 51]
 solution : [7, 8, 10, 27]


New level: 4
 pending : [5, 6, 9, 13, 14, 15, 16, 17, 18, 19, 20, 21, 23, 24, 26, 28, 29, 30, 31, 32, 33, 36, 37, 38, 39, 41, 43, 44, 45, 46, 51]
 solution : [7, 8, 10, 27]


Before reduction : 
 pending  : [5, 6, 9, 13, 14, 15, 16, 17, 18, 19, 20, 21, 23, 24, 26, 28, 29, 30, 31, 32, 33, 36, 37, 38, 39, 41, 43, 44, 45, 46, 51]
 solution : [7, 8, 10, 27]

Essensial at level 4 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 524288), (6, 131072), (7, -1), (8, -1), (9, 67108864), (10, -1), (11, -1), (12, -1), (13, 268435456), (14, 1048576), (15, 134217728), (16, 2097152), (17, 32768), (18, 8388608), (19, 4194304), (20, 65536), (21, 139264), (22, -1), (23, 67108864), (24, 268435456), (25, -1), (26, 524288), (27, 536870912), (28, 536870912), (29, 524288), (30, 8192), (31, 8192), (32, 536870912), (33, 1048576), (34, -1), (35, -1), (36, 33554432), (37, 134217728), (38, 67108864), (39, 8192), (40, -1), (41, 524288), (42, -1), (43, 262144), (44, 262144), (45, 33554432), (46, 8388608), (47, -1), (48, -1), (49, -1), (50, -1), (51, 33554432), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 131072), (6, 0), (7, -1), (8, -1), (9, 67108864), (10, -1), (11, -1), (12, -1), (13, 0), (14, 0), (15, 0), (16, 0), (17, 0), (18, 0), (19, 0), (20, 0), (21, 0), (22, -1), (23, 67108864), (24, 268435456), (25, -1), (26, 0), (27, -1), (28, 536870912), (29, 262144), (30, 4096), (31, 8192), (32, 536870912), (33, 1048576), (34, -1), (35, -1), (36, 1024), (37, 2048), (38, 33554432), (39, 2048), (40, -1), (41, 0), (42, -1), (43, 65536), (44, 65536), (45, 16777216), (46, 2097152), (47, -1), (48, -1), (49, -1), (50, -1), (51, 8388608), (52, -1)]

Covered at level 4 : {6, 41, 13, 14, 15, 16, 17, 18, 19, 20, 21, 26}

After reduction : 
 pending  : [5, 9, 23, 24, 28, 29, 30, 31, 32, 33, 36, 37, 38, 39, 43, 44, 45, 46, 51]
 solution : [7, 8, 10, 27]


Before reduction : 
 pending  : [5, 9, 23, 24, 28, 29, 30, 31, 32, 33, 36, 37, 38, 39, 43, 44, 45, 46, 51]
 solution : [7, 8, 10, 27]

Essensial at level 4 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 131072), (6, 0), (7, -1), (8, -1), (9, 67108864), (10, -1), (11, -1), (12, -1), (13, 0), (14, 0), (15, 0), (16, 0), (17, 0), (18, 0), (19, 0), (20, 0), (21, 0), (22, -1), (23, 67108864), (24, 268435456), (25, -1), (26, 0), (27, -1), (28, 536870912), (29, 262144), (30, 4096), (31, 8192), (32, 536870912), (33, 1048576), (34, -1), (35, -1), (36, 1024), (37, 2048), (38, 33554432), (39, 2048), (40, -1), (41, 0), (42, -1), (43, 65536), (44, 65536), (45, 16777216), (46, 2097152), (47, -1), (48, -1), (49, -1), (50, -1), (51, 8388608), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 131072), (6, -1), (7, -1), (8, -1), (9, 67108864), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, 67108864), (24, 268435456), (25, -1), (26, -1), (27, -1), (28, 536870912), (29, 262144), (30, 4096), (31, 8192), (32, 536870912), (33, 1048576), (34, -1), (35, -1), (36, 1024), (37, 2048), (38, 33554432), (39, 2048), (40, -1), (41, -1), (42, -1), (43, 65536), (44, 65536), (45, 16777216), (46, 2097152), (47, -1), (48, -1), (49, -1), (50, -1), (51, 8388608), (52, -1)]

Covered at level 4 : set()

After reduction : 
 pending  : [5, 9, 23, 24, 28, 29, 30, 31, 32, 33, 36, 37, 38, 39, 43, 44, 45, 46, 51]
 solution : [7, 8, 10, 27]


Solution : [7, 8, 10, 27] has cost 18.


Decide in level 4 among pending : [5, 9, 23, 24, 28, 29, 30, 31, 32, 33, 36, 37, 38, 39, 43, 44, 45, 46, 51]

Coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 131072), (6, -1), (7, -1), (8, -1), (9, 67108864), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, 67108864), (24, 268435456), (25, -1), (26, -1), (27, -1), (28, 536870912), (29, 262144), (30, 4096), (31, 8192), (32, 536870912), (33, 1048576), (34, -1), (35, -1), (36, 1024), (37, 2048), (38, 33554432), (39, 2048), (40, -1), (41, -1), (42, -1), (43, 65536), (44, 65536), (45, 16777216), (46, 2097152), (47, -1), (48, -1), (49, -1), (50, -1), (51, 8388608), (52, -1)]

Decide 28 with phase True at level 4

After decision at level 4
 pending : [5, 9, 23, 24, 29, 30, 31, 32, 33, 36, 37, 38, 39, 43, 44, 45, 46, 51]
 solution : [7, 8, 10, 27, 28]


New level: 5
 pending : [5, 9, 23, 24, 29, 30, 31, 32, 33, 36, 37, 38, 39, 43, 44, 45, 46, 51]
 solution : [7, 8, 10, 27, 28]


Before reduction : 
 pending  : [5, 9, 23, 24, 29, 30, 31, 32, 33, 36, 37, 38, 39, 43, 44, 45, 46, 51]
 solution : [7, 8, 10, 27, 28]

Essensial at level 5 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 131072), (6, -1), (7, -1), (8, -1), (9, 67108864), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, 67108864), (24, 268435456), (25, -1), (26, -1), (27, -1), (28, 536870912), (29, 262144), (30, 4096), (31, 8192), (32, 536870912), (33, 1048576), (34, -1), (35, -1), (36, 1024), (37, 2048), (38, 33554432), (39, 2048), (40, -1), (41, -1), (42, -1), (43, 65536), (44, 65536), (45, 16777216), (46, 2097152), (47, -1), (48, -1), (49, -1), (50, -1), (51, 8388608), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 131072), (6, -1), (7, -1), (8, -1), (9, 67108864), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, 67108864), (24, 134217728), (25, -1), (26, -1), (27, -1), (28, -1), (29, 262144), (30, 4096), (31, 4096), (32, 268435456), (33, 524288), (34, -1), (35, -1), (36, 1024), (37, 2048), (38, 33554432), (39, 2048), (40, -1), (41, -1), (42, -1), (43, 65536), (44, 65536), (45, 16777216), (46, 2097152), (47, -1), (48, -1), (49, -1), (50, -1), (51, 8388608), (52, -1)]

Covered at level 5 : set()

After reduction : 
 pending  : [5, 9, 23, 24, 29, 30, 31, 32, 33, 36, 37, 38, 39, 43, 44, 45, 46, 51]
 solution : [7, 8, 10, 27, 28]


Solution : [7, 8, 10, 27, 28] has cost 22.


Decide in level 5 among pending : [5, 9, 23, 24, 29, 30, 31, 32, 33, 36, 37, 38, 39, 43, 44, 45, 46, 51]

Coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 131072), (6, -1), (7, -1), (8, -1), (9, 67108864), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, 67108864), (24, 134217728), (25, -1), (26, -1), (27, -1), (28, -1), (29, 262144), (30, 4096), (31, 4096), (32, 268435456), (33, 524288), (34, -1), (35, -1), (36, 1024), (37, 2048), (38, 33554432), (39, 2048), (40, -1), (41, -1), (42, -1), (43, 65536), (44, 65536), (45, 16777216), (46, 2097152), (47, -1), (48, -1), (49, -1), (50, -1), (51, 8388608), (52, -1)]

Decide 32 with phase True at level 5

After decision at level 5
 pending : [5, 9, 23, 24, 29, 30, 31, 33, 36, 37, 38, 39, 43, 44, 45, 46, 51]
 solution : [7, 8, 10, 27, 28, 32]


New level: 6
 pending : [5, 9, 23, 24, 29, 30, 31, 33, 36, 37, 38, 39, 43, 44, 45, 46, 51]
 solution : [7, 8, 10, 27, 28, 32]


Before reduction : 
 pending  : [5, 9, 23, 24, 29, 30, 31, 33, 36, 37, 38, 39, 43, 44, 45, 46, 51]
 solution : [7, 8, 10, 27, 28, 32]

Essensial at level 6 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 131072), (6, -1), (7, -1), (8, -1), (9, 67108864), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, 67108864), (24, 134217728), (25, -1), (26, -1), (27, -1), (28, -1), (29, 262144), (30, 4096), (31, 4096), (32, 268435456), (33, 524288), (34, -1), (35, -1), (36, 1024), (37, 2048), (38, 33554432), (39, 2048), (40, -1), (41, -1), (42, -1), (43, 65536), (44, 65536), (45, 16777216), (46, 2097152), (47, -1), (48, -1), (49, -1), (50, -1), (51, 8388608), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 32768), (6, -1), (7, -1), (8, -1), (9, 67108864), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, 67108864), (24, 2048), (25, -1), (26, -1), (27, -1), (28, -1), (29, 65536), (30, 1024), (31, 0), (32, -1), (33, 0), (34, -1), (35, -1), (36, 512), (37, 0), (38, 8388608), (39, 512), (40, -1), (41, -1), (42, -1), (43, 16384), (44, 16384), (45, 4194304), (46, 524288), (47, -1), (48, -1), (49, -1), (50, -1), (51, 2097152), (52, -1)]

Covered at level 6 : {33, 37, 31}

After reduction : 
 pending  : [5, 9, 23, 24, 29, 30, 36, 38, 39, 43, 44, 45, 46, 51]
 solution : [7, 8, 10, 27, 28, 32]


Before reduction : 
 pending  : [5, 9, 23, 24, 29, 30, 36, 38, 39, 43, 44, 45, 46, 51]
 solution : [7, 8, 10, 27, 28, 32]

Essensial at level 6 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 32768), (6, -1), (7, -1), (8, -1), (9, 67108864), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, 67108864), (24, 2048), (25, -1), (26, -1), (27, -1), (28, -1), (29, 65536), (30, 1024), (31, 0), (32, -1), (33, 0), (34, -1), (35, -1), (36, 512), (37, 0), (38, 8388608), (39, 512), (40, -1), (41, -1), (42, -1), (43, 16384), (44, 16384), (45, 4194304), (46, 524288), (47, -1), (48, -1), (49, -1), (50, -1), (51, 2097152), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 32768), (6, -1), (7, -1), (8, -1), (9, 67108864), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, 67108864), (24, 2048), (25, -1), (26, -1), (27, -1), (28, -1), (29, 65536), (30, 1024), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, 512), (37, -1), (38, 8388608), (39, 512), (40, -1), (41, -1), (42, -1), (43, 16384), (44, 16384), (45, 4194304), (46, 524288), (47, -1), (48, -1), (49, -1), (50, -1), (51, 2097152), (52, -1)]

Covered at level 6 : set()

After reduction : 
 pending  : [5, 9, 23, 24, 29, 30, 36, 38, 39, 43, 44, 45, 46, 51]
 solution : [7, 8, 10, 27, 28, 32]


Solution : [7, 8, 10, 27, 28, 32] has cost 35.


Decide in level 6 among pending : [5, 9, 23, 24, 29, 30, 36, 38, 39, 43, 44, 45, 46, 51]

Coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 32768), (6, -1), (7, -1), (8, -1), (9, 67108864), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, 67108864), (24, 2048), (25, -1), (26, -1), (27, -1), (28, -1), (29, 65536), (30, 1024), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, 512), (37, -1), (38, 8388608), (39, 512), (40, -1), (41, -1), (42, -1), (43, 16384), (44, 16384), (45, 4194304), (46, 524288), (47, -1), (48, -1), (49, -1), (50, -1), (51, 2097152), (52, -1)]

Decide 9 with phase True at level 6

After decision at level 6
 pending : [5, 23, 24, 29, 30, 36, 38, 39, 43, 44, 45, 46, 51]
 solution : [7, 8, 10, 27, 28, 32, 9]


New level: 7
 pending : [5, 23, 24, 29, 30, 36, 38, 39, 43, 44, 45, 46, 51]
 solution : [7, 8, 10, 27, 28, 32, 9]


Before reduction : 
 pending  : [5, 23, 24, 29, 30, 36, 38, 39, 43, 44, 45, 46, 51]
 solution : [7, 8, 10, 27, 28, 32, 9]

Essensial at level 7 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 32768), (6, -1), (7, -1), (8, -1), (9, 67108864), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, 67108864), (24, 2048), (25, -1), (26, -1), (27, -1), (28, -1), (29, 65536), (30, 1024), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, 512), (37, -1), (38, 8388608), (39, 512), (40, -1), (41, -1), (42, -1), (43, 16384), (44, 16384), (45, 4194304), (46, 524288), (47, -1), (48, -1), (49, -1), (50, -1), (51, 2097152), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 0), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, 0), (24, 0), (25, -1), (26, -1), (27, -1), (28, -1), (29, 0), (30, 0), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, 0), (37, -1), (38, 0), (39, 0), (40, -1), (41, -1), (42, -1), (43, 0), (44, 0), (45, 0), (46, 0), (47, -1), (48, -1), (49, -1), (50, -1), (51, 0), (52, -1)]

Covered at level 7 : {36, 5, 38, 39, 43, 44, 45, 46, 51, 23, 24, 29, 30}

After reduction : 
 pending  : []
 solution : [7, 8, 10, 27, 28, 32, 9]


Before reduction : 
 pending  : []
 solution : [7, 8, 10, 27, 28, 32, 9]

Essensial at level 7 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 0), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, 0), (24, 0), (25, -1), (26, -1), (27, -1), (28, -1), (29, 0), (30, 0), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, 0), (37, -1), (38, 0), (39, 0), (40, -1), (41, -1), (42, -1), (43, 0), (44, 0), (45, 0), (46, 0), (47, -1), (48, -1), (49, -1), (50, -1), (51, 0), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 7 : set()

After reduction : 
 pending  : []
 solution : [7, 8, 10, 27, 28, 32, 9]


Solution : [7, 8, 10, 27, 28, 32, 9] has cost 39.


Before backtrack at level 7
 pending : []
 solution : [7, 8, 10, 27, 28, 32, 9]

After backtrack at level 7
 pending : [5, 23, 24, 29, 30, 36, 38, 39, 43, 44, 45, 46, 51]
 solution : [7, 8, 10, 27, 28, 32, 9]


Invert decision for 9 at level 6


New level: 7
 pending : [5, 23, 24, 29, 30, 36, 38, 39, 43, 44, 45, 46, 51]
 solution : [7, 8, 10, 27, 28, 32]


Before reduction : 
 pending  : [5, 23, 24, 29, 30, 36, 38, 39, 43, 44, 45, 46, 51]
 solution : [7, 8, 10, 27, 28, 32]

Essensial at level 7 : {23}

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 0), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, 0), (25, -1), (26, -1), (27, -1), (28, -1), (29, 0), (30, 0), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, 0), (37, -1), (38, 0), (39, 0), (40, -1), (41, -1), (42, -1), (43, 0), (44, 0), (45, 0), (46, 0), (47, -1), (48, -1), (49, -1), (50, -1), (51, 0), (52, -1)]

Covered at level 7 : {36, 5, 38, 39, 43, 44, 45, 46, 51, 24, 29, 30}

After reduction : 
 pending  : []
 solution : [7, 8, 10, 27, 28, 32, 23]


Before reduction : 
 pending  : []
 solution : [7, 8, 10, 27, 28, 32, 23]

Essensial at level 7 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 0), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, 0), (25, -1), (26, -1), (27, -1), (28, -1), (29, 0), (30, 0), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, 0), (37, -1), (38, 0), (39, 0), (40, -1), (41, -1), (42, -1), (43, 0), (44, 0), (45, 0), (46, 0), (47, -1), (48, -1), (49, -1), (50, -1), (51, 0), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 7 : set()

After reduction : 
 pending  : []
 solution : [7, 8, 10, 27, 28, 32, 23]


Solution : [7, 8, 10, 27, 28, 32, 23] has cost 42.


Before backtrack at level 7
 pending : []
 solution : [7, 8, 10, 27, 28, 32, 23]

After backtrack at level 7
 pending : [23, 5, 24, 29, 30, 36, 38, 39, 43, 44, 45, 46, 51]
 solution : [7, 8, 10, 27, 28, 32]


Before backtrack at level 6
 pending : [23, 5, 24, 29, 30, 36, 38, 39, 43, 44, 45, 46, 51]
 solution : [7, 8, 10, 27, 28, 32]

After backtrack at level 6
 pending : [23, 5, 24, 29, 30, 36, 38, 39, 43, 44, 45, 46, 51, 31, 33, 37, 9]
 solution : [7, 8, 10, 27, 28, 32]


Invert decision for 32 at level 5


New level: 6
 pending : [23, 5, 24, 29, 30, 36, 38, 39, 43, 44, 45, 46, 51, 31, 33, 37, 9]
 solution : [7, 8, 10, 27, 28]


Before reduction : 
 pending  : [23, 5, 24, 29, 30, 36, 38, 39, 43, 44, 45, 46, 51, 31, 33, 37, 9]
 solution : [7, 8, 10, 27, 28]

Essensial at level 6 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 131072), (6, -1), (7, -1), (8, -1), (9, 67108864), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, 67108864), (24, 134217728), (25, -1), (26, -1), (27, -1), (28, -1), (29, 262144), (30, 4096), (31, 4096), (32, -1), (33, 524288), (34, -1), (35, -1), (36, 1024), (37, 2048), (38, 33554432), (39, 2048), (40, -1), (41, -1), (42, -1), (43, 65536), (44, 65536), (45, 16777216), (46, 2097152), (47, -1), (48, -1), (49, -1), (50, -1), (51, 8388608), (52, -1)]

Covered at level 6 : set()

After reduction : 
 pending  : [23, 5, 24, 29, 30, 36, 38, 39, 43, 44, 45, 46, 51, 31, 33, 37, 9]
 solution : [7, 8, 10, 27, 28]


Solution : [7, 8, 10, 27, 28] has cost 22.


Decide in level 6 among pending : [23, 5, 24, 29, 30, 36, 38, 39, 43, 44, 45, 46, 51, 31, 33, 37, 9]

Coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 131072), (6, -1), (7, -1), (8, -1), (9, 67108864), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, 67108864), (24, 134217728), (25, -1), (26, -1), (27, -1), (28, -1), (29, 262144), (30, 4096), (31, 4096), (32, -1), (33, 524288), (34, -1), (35, -1), (36, 1024), (37, 2048), (38, 33554432), (39, 2048), (40, -1), (41, -1), (42, -1), (43, 65536), (44, 65536), (45, 16777216), (46, 2097152), (47, -1), (48, -1), (49, -1), (50, -1), (51, 8388608), (52, -1)]

Decide 24 with phase True at level 6

After decision at level 6
 pending : [23, 5, 29, 30, 36, 38, 39, 43, 44, 45, 46, 51, 31, 33, 37, 9]
 solution : [7, 8, 10, 27, 28, 24]


New level: 7
 pending : [23, 5, 29, 30, 36, 38, 39, 43, 44, 45, 46, 51, 31, 33, 37, 9]
 solution : [7, 8, 10, 27, 28, 24]


Before reduction : 
 pending  : [23, 5, 29, 30, 36, 38, 39, 43, 44, 45, 46, 51, 31, 33, 37, 9]
 solution : [7, 8, 10, 27, 28, 24]

Essensial at level 7 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 131072), (6, -1), (7, -1), (8, -1), (9, 67108864), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, 67108864), (24, 134217728), (25, -1), (26, -1), (27, -1), (28, -1), (29, 262144), (30, 4096), (31, 4096), (32, -1), (33, 524288), (34, -1), (35, -1), (36, 1024), (37, 2048), (38, 33554432), (39, 2048), (40, -1), (41, -1), (42, -1), (43, 65536), (44, 65536), (45, 16777216), (46, 2097152), (47, -1), (48, -1), (49, -1), (50, -1), (51, 8388608), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 32768), (6, -1), (7, -1), (8, -1), (9, 16777216), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, 16777216), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, 65536), (30, 1024), (31, 0), (32, -1), (33, 0), (34, -1), (35, -1), (36, 512), (37, 0), (38, 16777216), (39, 512), (40, -1), (41, -1), (42, -1), (43, 16384), (44, 16384), (45, 8388608), (46, 524288), (47, -1), (48, -1), (49, -1), (50, -1), (51, 8388608), (52, -1)]

Covered at level 7 : {33, 37, 31}

After reduction : 
 pending  : [23, 5, 29, 30, 36, 38, 39, 43, 44, 45, 46, 51, 9]
 solution : [7, 8, 10, 27, 28, 24]


Before reduction : 
 pending  : [23, 5, 29, 30, 36, 38, 39, 43, 44, 45, 46, 51, 9]
 solution : [7, 8, 10, 27, 28, 24]

Essensial at level 7 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 32768), (6, -1), (7, -1), (8, -1), (9, 16777216), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, 16777216), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, 65536), (30, 1024), (31, 0), (32, -1), (33, 0), (34, -1), (35, -1), (36, 512), (37, 0), (38, 16777216), (39, 512), (40, -1), (41, -1), (42, -1), (43, 16384), (44, 16384), (45, 8388608), (46, 524288), (47, -1), (48, -1), (49, -1), (50, -1), (51, 8388608), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 32768), (6, -1), (7, -1), (8, -1), (9, 16777216), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, 16777216), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, 65536), (30, 1024), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, 512), (37, -1), (38, 16777216), (39, 512), (40, -1), (41, -1), (42, -1), (43, 16384), (44, 16384), (45, 8388608), (46, 524288), (47, -1), (48, -1), (49, -1), (50, -1), (51, 8388608), (52, -1)]

Covered at level 7 : set()

After reduction : 
 pending  : [23, 5, 29, 30, 36, 38, 39, 43, 44, 45, 46, 51, 9]
 solution : [7, 8, 10, 27, 28, 24]


Solution : [7, 8, 10, 27, 28, 24] has cost 29.


Decide in level 7 among pending : [23, 5, 29, 30, 36, 38, 39, 43, 44, 45, 46, 51, 9]

Coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 32768), (6, -1), (7, -1), (8, -1), (9, 16777216), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, 16777216), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, 65536), (30, 1024), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, 512), (37, -1), (38, 16777216), (39, 512), (40, -1), (41, -1), (42, -1), (43, 16384), (44, 16384), (45, 8388608), (46, 524288), (47, -1), (48, -1), (49, -1), (50, -1), (51, 8388608), (52, -1)]

Decide 23 with phase True at level 7

After decision at level 7
 pending : [5, 29, 30, 36, 38, 39, 43, 44, 45, 46, 51, 9]
 solution : [7, 8, 10, 27, 28, 24, 23]


New level: 8
 pending : [5, 29, 30, 36, 38, 39, 43, 44, 45, 46, 51, 9]
 solution : [7, 8, 10, 27, 28, 24, 23]


Before reduction : 
 pending  : [5, 29, 30, 36, 38, 39, 43, 44, 45, 46, 51, 9]
 solution : [7, 8, 10, 27, 28, 24, 23]

Essensial at level 8 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 32768), (6, -1), (7, -1), (8, -1), (9, 16777216), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, 16777216), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, 65536), (30, 1024), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, 512), (37, -1), (38, 16777216), (39, 512), (40, -1), (41, -1), (42, -1), (43, 16384), (44, 16384), (45, 8388608), (46, 524288), (47, -1), (48, -1), (49, -1), (50, -1), (51, 8388608), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 0), (6, -1), (7, -1), (8, -1), (9, 0), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, 0), (30, 0), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, 0), (37, -1), (38, 0), (39, 0), (40, -1), (41, -1), (42, -1), (43, 0), (44, 0), (45, 0), (46, 0), (47, -1), (48, -1), (49, -1), (50, -1), (51, 0), (52, -1)]

Covered at level 8 : {36, 5, 38, 39, 9, 43, 44, 45, 46, 51, 29, 30}

After reduction : 
 pending  : []
 solution : [7, 8, 10, 27, 28, 24, 23]


Before reduction : 
 pending  : []
 solution : [7, 8, 10, 27, 28, 24, 23]

Essensial at level 8 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 0), (6, -1), (7, -1), (8, -1), (9, 0), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, 0), (30, 0), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, 0), (37, -1), (38, 0), (39, 0), (40, -1), (41, -1), (42, -1), (43, 0), (44, 0), (45, 0), (46, 0), (47, -1), (48, -1), (49, -1), (50, -1), (51, 0), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 8 : set()

After reduction : 
 pending  : []
 solution : [7, 8, 10, 27, 28, 24, 23]


Solution : [7, 8, 10, 27, 28, 24, 23] has cost 36.


Before backtrack at level 8
 pending : []
 solution : [7, 8, 10, 27, 28, 24, 23]

After backtrack at level 8
 pending : [5, 29, 30, 36, 38, 39, 43, 44, 45, 46, 51, 9]
 solution : [7, 8, 10, 27, 28, 24, 23]


Invert decision for 23 at level 7


New level: 8
 pending : [5, 29, 30, 36, 38, 39, 43, 44, 45, 46, 51, 9]
 solution : [7, 8, 10, 27, 28, 24]


Before reduction : 
 pending  : [5, 29, 30, 36, 38, 39, 43, 44, 45, 46, 51, 9]
 solution : [7, 8, 10, 27, 28, 24]

Essensial at level 8 : {9}

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 0), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, 0), (30, 0), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, 0), (37, -1), (38, 0), (39, 0), (40, -1), (41, -1), (42, -1), (43, 0), (44, 0), (45, 0), (46, 0), (47, -1), (48, -1), (49, -1), (50, -1), (51, 0), (52, -1)]

Covered at level 8 : {36, 5, 38, 39, 43, 44, 45, 46, 51, 29, 30}

After reduction : 
 pending  : []
 solution : [7, 8, 10, 27, 28, 24, 9]


Before reduction : 
 pending  : []
 solution : [7, 8, 10, 27, 28, 24, 9]

Essensial at level 8 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 0), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, 0), (30, 0), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, 0), (37, -1), (38, 0), (39, 0), (40, -1), (41, -1), (42, -1), (43, 0), (44, 0), (45, 0), (46, 0), (47, -1), (48, -1), (49, -1), (50, -1), (51, 0), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 8 : set()

After reduction : 
 pending  : []
 solution : [7, 8, 10, 27, 28, 24, 9]


Solution : [7, 8, 10, 27, 28, 24, 9] has cost 33.


Before backtrack at level 8
 pending : []
 solution : [7, 8, 10, 27, 28, 24, 9]

After backtrack at level 8
 pending : [9, 5, 29, 30, 36, 38, 39, 43, 44, 45, 46, 51]
 solution : [7, 8, 10, 27, 28, 24]


Before backtrack at level 7
 pending : [9, 5, 29, 30, 36, 38, 39, 43, 44, 45, 46, 51]
 solution : [7, 8, 10, 27, 28, 24]

After backtrack at level 7
 pending : [9, 5, 29, 30, 36, 38, 39, 43, 44, 45, 46, 51, 31, 33, 37, 23]
 solution : [7, 8, 10, 27, 28, 24]


Invert decision for 24 at level 6


New level: 7
 pending : [9, 5, 29, 30, 36, 38, 39, 43, 44, 45, 46, 51, 31, 33, 37, 23]
 solution : [7, 8, 10, 27, 28]


Before reduction : 
 pending  : [9, 5, 29, 30, 36, 38, 39, 43, 44, 45, 46, 51, 31, 33, 37, 23]
 solution : [7, 8, 10, 27, 28]

Essensial at level 7 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 131072), (6, -1), (7, -1), (8, -1), (9, 67108864), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, 67108864), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, 262144), (30, 4096), (31, 4096), (32, -1), (33, 524288), (34, -1), (35, -1), (36, 1024), (37, 2048), (38, 33554432), (39, 2048), (40, -1), (41, -1), (42, -1), (43, 65536), (44, 65536), (45, 16777216), (46, 2097152), (47, -1), (48, -1), (49, -1), (50, -1), (51, 8388608), (52, -1)]

Covered at level 7 : set()

After reduction : 
 pending  : [9, 5, 29, 30, 36, 38, 39, 43, 44, 45, 46, 51, 31, 33, 37, 23]
 solution : [7, 8, 10, 27, 28]


Solution : [7, 8, 10, 27, 28] has cost 22.


Decide in level 7 among pending : [9, 5, 29, 30, 36, 38, 39, 43, 44, 45, 46, 51, 31, 33, 37, 23]

Coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 131072), (6, -1), (7, -1), (8, -1), (9, 67108864), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, 67108864), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, 262144), (30, 4096), (31, 4096), (32, -1), (33, 524288), (34, -1), (35, -1), (36, 1024), (37, 2048), (38, 33554432), (39, 2048), (40, -1), (41, -1), (42, -1), (43, 65536), (44, 65536), (45, 16777216), (46, 2097152), (47, -1), (48, -1), (49, -1), (50, -1), (51, 8388608), (52, -1)]

Decide 9 with phase True at level 7

After decision at level 7
 pending : [5, 29, 30, 36, 38, 39, 43, 44, 45, 46, 51, 31, 33, 37, 23]
 solution : [7, 8, 10, 27, 28, 9]


New level: 8
 pending : [5, 29, 30, 36, 38, 39, 43, 44, 45, 46, 51, 31, 33, 37, 23]
 solution : [7, 8, 10, 27, 28, 9]


Before reduction : 
 pending  : [5, 29, 30, 36, 38, 39, 43, 44, 45, 46, 51, 31, 33, 37, 23]
 solution : [7, 8, 10, 27, 28, 9]

Essensial at level 8 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 131072), (6, -1), (7, -1), (8, -1), (9, 67108864), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, 67108864), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, 262144), (30, 4096), (31, 4096), (32, -1), (33, 524288), (34, -1), (35, -1), (36, 1024), (37, 2048), (38, 33554432), (39, 2048), (40, -1), (41, -1), (42, -1), (43, 65536), (44, 65536), (45, 16777216), (46, 2097152), (47, -1), (48, -1), (49, -1), (50, -1), (51, 8388608), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 0), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, 0), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, 0), (30, 0), (31, 0), (32, -1), (33, 0), (34, -1), (35, -1), (36, 0), (37, 0), (38, 0), (39, 0), (40, -1), (41, -1), (42, -1), (43, 0), (44, 0), (45, 0), (46, 0), (47, -1), (48, -1), (49, -1), (50, -1), (51, 0), (52, -1)]

Covered at level 8 : {33, 36, 5, 38, 39, 37, 43, 44, 45, 46, 51, 23, 29, 30, 31}

After reduction : 
 pending  : []
 solution : [7, 8, 10, 27, 28, 9]


Before reduction : 
 pending  : []
 solution : [7, 8, 10, 27, 28, 9]

Essensial at level 8 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 0), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, 0), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, 0), (30, 0), (31, 0), (32, -1), (33, 0), (34, -1), (35, -1), (36, 0), (37, 0), (38, 0), (39, 0), (40, -1), (41, -1), (42, -1), (43, 0), (44, 0), (45, 0), (46, 0), (47, -1), (48, -1), (49, -1), (50, -1), (51, 0), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 8 : set()

After reduction : 
 pending  : []
 solution : [7, 8, 10, 27, 28, 9]


Solution : [7, 8, 10, 27, 28, 9] has cost 26.


Before backtrack at level 8
 pending : []
 solution : [7, 8, 10, 27, 28, 9]

After backtrack at level 8
 pending : [5, 29, 30, 36, 38, 39, 43, 44, 45, 46, 51, 31, 33, 37, 23]
 solution : [7, 8, 10, 27, 28, 9]


Invert decision for 9 at level 7


New level: 8
 pending : [5, 29, 30, 36, 38, 39, 43, 44, 45, 46, 51, 31, 33, 37, 23]
 solution : [7, 8, 10, 27, 28]


Before reduction : 
 pending  : [5, 29, 30, 36, 38, 39, 43, 44, 45, 46, 51, 31, 33, 37, 23]
 solution : [7, 8, 10, 27, 28]

Essensial at level 8 : {23}

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 0), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, 0), (30, 0), (31, 0), (32, -1), (33, 0), (34, -1), (35, -1), (36, 0), (37, 0), (38, 0), (39, 0), (40, -1), (41, -1), (42, -1), (43, 0), (44, 0), (45, 0), (46, 0), (47, -1), (48, -1), (49, -1), (50, -1), (51, 0), (52, -1)]

Covered at level 8 : {33, 36, 5, 38, 39, 37, 43, 44, 45, 46, 51, 29, 30, 31}

After reduction : 
 pending  : []
 solution : [7, 8, 10, 27, 28, 23]


Before reduction : 
 pending  : []
 solution : [7, 8, 10, 27, 28, 23]

Essensial at level 8 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 0), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, 0), (30, 0), (31, 0), (32, -1), (33, 0), (34, -1), (35, -1), (36, 0), (37, 0), (38, 0), (39, 0), (40, -1), (41, -1), (42, -1), (43, 0), (44, 0), (45, 0), (46, 0), (47, -1), (48, -1), (49, -1), (50, -1), (51, 0), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 8 : set()

After reduction : 
 pending  : []
 solution : [7, 8, 10, 27, 28, 23]


Solution : [7, 8, 10, 27, 28, 23] has cost 29.


Before backtrack at level 8
 pending : []
 solution : [7, 8, 10, 27, 28, 23]

After backtrack at level 8
 pending : [23, 5, 29, 30, 36, 38, 39, 43, 44, 45, 46, 51, 31, 33, 37]
 solution : [7, 8, 10, 27, 28]


Before backtrack at level 7
 pending : [23, 5, 29, 30, 36, 38, 39, 43, 44, 45, 46, 51, 31, 33, 37]
 solution : [7, 8, 10, 27, 28]

After backtrack at level 7
 pending : [23, 5, 29, 30, 36, 38, 39, 43, 44, 45, 46, 51, 31, 33, 37, 9]
 solution : [7, 8, 10, 27, 28]


Before backtrack at level 6
 pending : [23, 5, 29, 30, 36, 38, 39, 43, 44, 45, 46, 51, 31, 33, 37, 9]
 solution : [7, 8, 10, 27, 28]

After backtrack at level 6
 pending : [23, 5, 29, 30, 36, 38, 39, 43, 44, 45, 46, 51, 31, 33, 37, 9, 24]
 solution : [7, 8, 10, 27, 28]


Before backtrack at level 5
 pending : [23, 5, 29, 30, 36, 38, 39, 43, 44, 45, 46, 51, 31, 33, 37, 9, 24]
 solution : [7, 8, 10, 27, 28]

After backtrack at level 5
 pending : [23, 5, 29, 30, 36, 38, 39, 43, 44, 45, 46, 51, 31, 33, 37, 9, 24, 32]
 solution : [7, 8, 10, 27, 28]


Invert decision for 28 at level 4


New level: 5
 pending : [23, 5, 29, 30, 36, 38, 39, 43, 44, 45, 46, 51, 31, 33, 37, 9, 24, 32]
 solution : [7, 8, 10, 27]


Before reduction : 
 pending  : [23, 5, 29, 30, 36, 38, 39, 43, 44, 45, 46, 51, 31, 33, 37, 9, 24, 32]
 solution : [7, 8, 10, 27]

Essensial at level 5 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 131072), (6, -1), (7, -1), (8, -1), (9, 67108864), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, 67108864), (24, 268435456), (25, -1), (26, -1), (27, -1), (28, -1), (29, 262144), (30, 4096), (31, 8192), (32, 536870912), (33, 1048576), (34, -1), (35, -1), (36, 1024), (37, 2048), (38, 33554432), (39, 2048), (40, -1), (41, -1), (42, -1), (43, 65536), (44, 65536), (45, 16777216), (46, 2097152), (47, -1), (48, -1), (49, -1), (50, -1), (51, 8388608), (52, -1)]

Covered at level 5 : set()

After reduction : 
 pending  : [23, 5, 29, 30, 36, 38, 39, 43, 44, 45, 46, 51, 31, 33, 37, 9, 24, 32]
 solution : [7, 8, 10, 27]


Solution : [7, 8, 10, 27] has cost 18.


Decide in level 5 among pending : [23, 5, 29, 30, 36, 38, 39, 43, 44, 45, 46, 51, 31, 33, 37, 9, 24, 32]

Coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 131072), (6, -1), (7, -1), (8, -1), (9, 67108864), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, 67108864), (24, 268435456), (25, -1), (26, -1), (27, -1), (28, -1), (29, 262144), (30, 4096), (31, 8192), (32, 536870912), (33, 1048576), (34, -1), (35, -1), (36, 1024), (37, 2048), (38, 33554432), (39, 2048), (40, -1), (41, -1), (42, -1), (43, 65536), (44, 65536), (45, 16777216), (46, 2097152), (47, -1), (48, -1), (49, -1), (50, -1), (51, 8388608), (52, -1)]

Decide 32 with phase True at level 5

After decision at level 5
 pending : [23, 5, 29, 30, 36, 38, 39, 43, 44, 45, 46, 51, 31, 33, 37, 9, 24]
 solution : [7, 8, 10, 27, 32]


New level: 6
 pending : [23, 5, 29, 30, 36, 38, 39, 43, 44, 45, 46, 51, 31, 33, 37, 9, 24]
 solution : [7, 8, 10, 27, 32]


Before reduction : 
 pending  : [23, 5, 29, 30, 36, 38, 39, 43, 44, 45, 46, 51, 31, 33, 37, 9, 24]
 solution : [7, 8, 10, 27, 32]

Essensial at level 6 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 131072), (6, -1), (7, -1), (8, -1), (9, 67108864), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, 67108864), (24, 268435456), (25, -1), (26, -1), (27, -1), (28, -1), (29, 262144), (30, 4096), (31, 8192), (32, 536870912), (33, 1048576), (34, -1), (35, -1), (36, 1024), (37, 2048), (38, 33554432), (39, 2048), (40, -1), (41, -1), (42, -1), (43, 65536), (44, 65536), (45, 16777216), (46, 2097152), (47, -1), (48, -1), (49, -1), (50, -1), (51, 8388608), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 32768), (6, -1), (7, -1), (8, -1), (9, 67108864), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, 67108864), (24, 4096), (25, -1), (26, -1), (27, -1), (28, -1), (29, 65536), (30, 1024), (31, 0), (32, -1), (33, 0), (34, -1), (35, -1), (36, 512), (37, 0), (38, 8388608), (39, 512), (40, -1), (41, -1), (42, -1), (43, 16384), (44, 16384), (45, 4194304), (46, 524288), (47, -1), (48, -1), (49, -1), (50, -1), (51, 2097152), (52, -1)]

Covered at level 6 : {33, 37, 31}

After reduction : 
 pending  : [23, 5, 29, 30, 36, 38, 39, 43, 44, 45, 46, 51, 9, 24]
 solution : [7, 8, 10, 27, 32]


Before reduction : 
 pending  : [23, 5, 29, 30, 36, 38, 39, 43, 44, 45, 46, 51, 9, 24]
 solution : [7, 8, 10, 27, 32]

Essensial at level 6 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 32768), (6, -1), (7, -1), (8, -1), (9, 67108864), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, 67108864), (24, 4096), (25, -1), (26, -1), (27, -1), (28, -1), (29, 65536), (30, 1024), (31, 0), (32, -1), (33, 0), (34, -1), (35, -1), (36, 512), (37, 0), (38, 8388608), (39, 512), (40, -1), (41, -1), (42, -1), (43, 16384), (44, 16384), (45, 4194304), (46, 524288), (47, -1), (48, -1), (49, -1), (50, -1), (51, 2097152), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 32768), (6, -1), (7, -1), (8, -1), (9, 67108864), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, 67108864), (24, 4096), (25, -1), (26, -1), (27, -1), (28, -1), (29, 65536), (30, 1024), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, 512), (37, -1), (38, 8388608), (39, 512), (40, -1), (41, -1), (42, -1), (43, 16384), (44, 16384), (45, 4194304), (46, 524288), (47, -1), (48, -1), (49, -1), (50, -1), (51, 2097152), (52, -1)]

Covered at level 6 : set()

After reduction : 
 pending  : [23, 5, 29, 30, 36, 38, 39, 43, 44, 45, 46, 51, 9, 24]
 solution : [7, 8, 10, 27, 32]


Solution : [7, 8, 10, 27, 32] has cost 31.


Before backtrack at level 6
 pending : [23, 5, 29, 30, 36, 38, 39, 43, 44, 45, 46, 51, 9, 24]
 solution : [7, 8, 10, 27, 32]

After backtrack at level 6
 pending : [23, 5, 29, 30, 36, 38, 39, 43, 44, 45, 46, 51, 9, 24, 31, 33, 37]
 solution : [7, 8, 10, 27, 32]


Invert decision for 32 at level 5


New level: 6
 pending : [23, 5, 29, 30, 36, 38, 39, 43, 44, 45, 46, 51, 9, 24, 31, 33, 37]
 solution : [7, 8, 10, 27]


Before reduction : 
 pending  : [23, 5, 29, 30, 36, 38, 39, 43, 44, 45, 46, 51, 9, 24, 31, 33, 37]
 solution : [7, 8, 10, 27]

Essensial at level 6 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 32768), (6, -1), (7, -1), (8, -1), (9, 67108864), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, 67108864), (24, 4096), (25, -1), (26, -1), (27, -1), (28, -1), (29, 65536), (30, 1024), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, 512), (37, -1), (38, 8388608), (39, 512), (40, -1), (41, -1), (42, -1), (43, 16384), (44, 16384), (45, 4194304), (46, 524288), (47, -1), (48, -1), (49, -1), (50, -1), (51, 2097152), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 131072), (6, -1), (7, -1), (8, -1), (9, 67108864), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, 67108864), (24, 268435456), (25, -1), (26, -1), (27, -1), (28, -1), (29, 262144), (30, 4096), (31, 8192), (32, -1), (33, 1048576), (34, -1), (35, -1), (36, 1024), (37, 2048), (38, 33554432), (39, 2048), (40, -1), (41, -1), (42, -1), (43, 65536), (44, 65536), (45, 16777216), (46, 2097152), (47, -1), (48, -1), (49, -1), (50, -1), (51, 8388608), (52, -1)]

Covered at level 6 : set()

After reduction : 
 pending  : [23, 5, 29, 30, 36, 38, 39, 43, 44, 45, 46, 51, 9, 24, 31, 33, 37]
 solution : [7, 8, 10, 27]


Solution : [7, 8, 10, 27] has cost 18.


Decide in level 6 among pending : [23, 5, 29, 30, 36, 38, 39, 43, 44, 45, 46, 51, 9, 24, 31, 33, 37]

Coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 131072), (6, -1), (7, -1), (8, -1), (9, 67108864), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, 67108864), (24, 268435456), (25, -1), (26, -1), (27, -1), (28, -1), (29, 262144), (30, 4096), (31, 8192), (32, -1), (33, 1048576), (34, -1), (35, -1), (36, 1024), (37, 2048), (38, 33554432), (39, 2048), (40, -1), (41, -1), (42, -1), (43, 65536), (44, 65536), (45, 16777216), (46, 2097152), (47, -1), (48, -1), (49, -1), (50, -1), (51, 8388608), (52, -1)]

Decide 24 with phase True at level 6

After decision at level 6
 pending : [23, 5, 29, 30, 36, 38, 39, 43, 44, 45, 46, 51, 9, 31, 33, 37]
 solution : [7, 8, 10, 27, 24]


New level: 7
 pending : [23, 5, 29, 30, 36, 38, 39, 43, 44, 45, 46, 51, 9, 31, 33, 37]
 solution : [7, 8, 10, 27, 24]


Before reduction : 
 pending  : [23, 5, 29, 30, 36, 38, 39, 43, 44, 45, 46, 51, 9, 31, 33, 37]
 solution : [7, 8, 10, 27, 24]

Essensial at level 7 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 131072), (6, -1), (7, -1), (8, -1), (9, 67108864), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, 67108864), (24, 268435456), (25, -1), (26, -1), (27, -1), (28, -1), (29, 262144), (30, 4096), (31, 8192), (32, -1), (33, 1048576), (34, -1), (35, -1), (36, 1024), (37, 2048), (38, 33554432), (39, 2048), (40, -1), (41, -1), (42, -1), (43, 65536), (44, 65536), (45, 16777216), (46, 2097152), (47, -1), (48, -1), (49, -1), (50, -1), (51, 8388608), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 32768), (6, -1), (7, -1), (8, -1), (9, 16777216), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, 16777216), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, 65536), (30, 1024), (31, 0), (32, -1), (33, 0), (34, -1), (35, -1), (36, 512), (37, 0), (38, 16777216), (39, 512), (40, -1), (41, -1), (42, -1), (43, 16384), (44, 16384), (45, 8388608), (46, 524288), (47, -1), (48, -1), (49, -1), (50, -1), (51, 4194304), (52, -1)]

Covered at level 7 : {33, 37, 31}

After reduction : 
 pending  : [23, 5, 29, 30, 36, 38, 39, 43, 44, 45, 46, 51, 9]
 solution : [7, 8, 10, 27, 24]


Before reduction : 
 pending  : [23, 5, 29, 30, 36, 38, 39, 43, 44, 45, 46, 51, 9]
 solution : [7, 8, 10, 27, 24]

Essensial at level 7 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 32768), (6, -1), (7, -1), (8, -1), (9, 16777216), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, 16777216), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, 65536), (30, 1024), (31, 0), (32, -1), (33, 0), (34, -1), (35, -1), (36, 512), (37, 0), (38, 16777216), (39, 512), (40, -1), (41, -1), (42, -1), (43, 16384), (44, 16384), (45, 8388608), (46, 524288), (47, -1), (48, -1), (49, -1), (50, -1), (51, 4194304), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 32768), (6, -1), (7, -1), (8, -1), (9, 16777216), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, 16777216), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, 65536), (30, 1024), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, 512), (37, -1), (38, 16777216), (39, 512), (40, -1), (41, -1), (42, -1), (43, 16384), (44, 16384), (45, 8388608), (46, 524288), (47, -1), (48, -1), (49, -1), (50, -1), (51, 4194304), (52, -1)]

Covered at level 7 : set()

After reduction : 
 pending  : [23, 5, 29, 30, 36, 38, 39, 43, 44, 45, 46, 51, 9]
 solution : [7, 8, 10, 27, 24]


Solution : [7, 8, 10, 27, 24] has cost 25.


Decide in level 7 among pending : [23, 5, 29, 30, 36, 38, 39, 43, 44, 45, 46, 51, 9]

Coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 32768), (6, -1), (7, -1), (8, -1), (9, 16777216), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, 16777216), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, 65536), (30, 1024), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, 512), (37, -1), (38, 16777216), (39, 512), (40, -1), (41, -1), (42, -1), (43, 16384), (44, 16384), (45, 8388608), (46, 524288), (47, -1), (48, -1), (49, -1), (50, -1), (51, 4194304), (52, -1)]

Decide 23 with phase True at level 7

After decision at level 7
 pending : [5, 29, 30, 36, 38, 39, 43, 44, 45, 46, 51, 9]
 solution : [7, 8, 10, 27, 24, 23]


New level: 8
 pending : [5, 29, 30, 36, 38, 39, 43, 44, 45, 46, 51, 9]
 solution : [7, 8, 10, 27, 24, 23]


Before reduction : 
 pending  : [5, 29, 30, 36, 38, 39, 43, 44, 45, 46, 51, 9]
 solution : [7, 8, 10, 27, 24, 23]

Essensial at level 8 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 32768), (6, -1), (7, -1), (8, -1), (9, 16777216), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, 16777216), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, 65536), (30, 1024), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, 512), (37, -1), (38, 16777216), (39, 512), (40, -1), (41, -1), (42, -1), (43, 16384), (44, 16384), (45, 8388608), (46, 524288), (47, -1), (48, -1), (49, -1), (50, -1), (51, 4194304), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 0), (6, -1), (7, -1), (8, -1), (9, 0), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, 0), (30, 0), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, 0), (37, -1), (38, 0), (39, 0), (40, -1), (41, -1), (42, -1), (43, 0), (44, 0), (45, 0), (46, 0), (47, -1), (48, -1), (49, -1), (50, -1), (51, 0), (52, -1)]

Covered at level 8 : {36, 5, 38, 39, 9, 43, 44, 45, 46, 51, 29, 30}

After reduction : 
 pending  : []
 solution : [7, 8, 10, 27, 24, 23]


Before reduction : 
 pending  : []
 solution : [7, 8, 10, 27, 24, 23]

Essensial at level 8 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 0), (6, -1), (7, -1), (8, -1), (9, 0), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, 0), (30, 0), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, 0), (37, -1), (38, 0), (39, 0), (40, -1), (41, -1), (42, -1), (43, 0), (44, 0), (45, 0), (46, 0), (47, -1), (48, -1), (49, -1), (50, -1), (51, 0), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 8 : set()

After reduction : 
 pending  : []
 solution : [7, 8, 10, 27, 24, 23]


Solution : [7, 8, 10, 27, 24, 23] has cost 32.


Before backtrack at level 8
 pending : []
 solution : [7, 8, 10, 27, 24, 23]

After backtrack at level 8
 pending : [5, 29, 30, 36, 38, 39, 43, 44, 45, 46, 51, 9]
 solution : [7, 8, 10, 27, 24, 23]


Invert decision for 23 at level 7


New level: 8
 pending : [5, 29, 30, 36, 38, 39, 43, 44, 45, 46, 51, 9]
 solution : [7, 8, 10, 27, 24]


Before reduction : 
 pending  : [5, 29, 30, 36, 38, 39, 43, 44, 45, 46, 51, 9]
 solution : [7, 8, 10, 27, 24]

Essensial at level 8 : {9}

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 0), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, 0), (30, 0), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, 0), (37, -1), (38, 0), (39, 0), (40, -1), (41, -1), (42, -1), (43, 0), (44, 0), (45, 0), (46, 0), (47, -1), (48, -1), (49, -1), (50, -1), (51, 0), (52, -1)]

Covered at level 8 : {36, 5, 38, 39, 43, 44, 45, 46, 51, 29, 30}

After reduction : 
 pending  : []
 solution : [7, 8, 10, 27, 24, 9]


Before reduction : 
 pending  : []
 solution : [7, 8, 10, 27, 24, 9]

Essensial at level 8 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 0), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, 0), (30, 0), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, 0), (37, -1), (38, 0), (39, 0), (40, -1), (41, -1), (42, -1), (43, 0), (44, 0), (45, 0), (46, 0), (47, -1), (48, -1), (49, -1), (50, -1), (51, 0), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 8 : set()

After reduction : 
 pending  : []
 solution : [7, 8, 10, 27, 24, 9]


Solution : [7, 8, 10, 27, 24, 9] has cost 29.


Before backtrack at level 8
 pending : []
 solution : [7, 8, 10, 27, 24, 9]

After backtrack at level 8
 pending : [9, 5, 29, 30, 36, 38, 39, 43, 44, 45, 46, 51]
 solution : [7, 8, 10, 27, 24]


Before backtrack at level 7
 pending : [9, 5, 29, 30, 36, 38, 39, 43, 44, 45, 46, 51]
 solution : [7, 8, 10, 27, 24]

After backtrack at level 7
 pending : [9, 5, 29, 30, 36, 38, 39, 43, 44, 45, 46, 51, 31, 33, 37, 23]
 solution : [7, 8, 10, 27, 24]


Invert decision for 24 at level 6


New level: 7
 pending : [9, 5, 29, 30, 36, 38, 39, 43, 44, 45, 46, 51, 31, 33, 37, 23]
 solution : [7, 8, 10, 27]


Before reduction : 
 pending  : [9, 5, 29, 30, 36, 38, 39, 43, 44, 45, 46, 51, 31, 33, 37, 23]
 solution : [7, 8, 10, 27]

Essensial at level 7 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 131072), (6, -1), (7, -1), (8, -1), (9, 67108864), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, 67108864), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, 262144), (30, 4096), (31, 8192), (32, -1), (33, 1048576), (34, -1), (35, -1), (36, 1024), (37, 2048), (38, 33554432), (39, 2048), (40, -1), (41, -1), (42, -1), (43, 65536), (44, 65536), (45, 16777216), (46, 2097152), (47, -1), (48, -1), (49, -1), (50, -1), (51, 8388608), (52, -1)]

Covered at level 7 : set()

After reduction : 
 pending  : [9, 5, 29, 30, 36, 38, 39, 43, 44, 45, 46, 51, 31, 33, 37, 23]
 solution : [7, 8, 10, 27]


Solution : [7, 8, 10, 27] has cost 18.


Decide in level 7 among pending : [9, 5, 29, 30, 36, 38, 39, 43, 44, 45, 46, 51, 31, 33, 37, 23]

Coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 131072), (6, -1), (7, -1), (8, -1), (9, 67108864), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, 67108864), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, 262144), (30, 4096), (31, 8192), (32, -1), (33, 1048576), (34, -1), (35, -1), (36, 1024), (37, 2048), (38, 33554432), (39, 2048), (40, -1), (41, -1), (42, -1), (43, 65536), (44, 65536), (45, 16777216), (46, 2097152), (47, -1), (48, -1), (49, -1), (50, -1), (51, 8388608), (52, -1)]

Decide 9 with phase True at level 7

After decision at level 7
 pending : [5, 29, 30, 36, 38, 39, 43, 44, 45, 46, 51, 31, 33, 37, 23]
 solution : [7, 8, 10, 27, 9]


New level: 8
 pending : [5, 29, 30, 36, 38, 39, 43, 44, 45, 46, 51, 31, 33, 37, 23]
 solution : [7, 8, 10, 27, 9]


Before reduction : 
 pending  : [5, 29, 30, 36, 38, 39, 43, 44, 45, 46, 51, 31, 33, 37, 23]
 solution : [7, 8, 10, 27, 9]

Essensial at level 8 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 131072), (6, -1), (7, -1), (8, -1), (9, 67108864), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, 67108864), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, 262144), (30, 4096), (31, 8192), (32, -1), (33, 1048576), (34, -1), (35, -1), (36, 1024), (37, 2048), (38, 33554432), (39, 2048), (40, -1), (41, -1), (42, -1), (43, 65536), (44, 65536), (45, 16777216), (46, 2097152), (47, -1), (48, -1), (49, -1), (50, -1), (51, 8388608), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 0), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, 0), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, 0), (30, 0), (31, 0), (32, -1), (33, 0), (34, -1), (35, -1), (36, 0), (37, 0), (38, 0), (39, 0), (40, -1), (41, -1), (42, -1), (43, 0), (44, 0), (45, 0), (46, 0), (47, -1), (48, -1), (49, -1), (50, -1), (51, 0), (52, -1)]

Covered at level 8 : {33, 36, 5, 38, 39, 37, 43, 44, 45, 46, 51, 23, 29, 30, 31}

After reduction : 
 pending  : []
 solution : [7, 8, 10, 27, 9]


Before reduction : 
 pending  : []
 solution : [7, 8, 10, 27, 9]

Essensial at level 8 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 0), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, 0), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, 0), (30, 0), (31, 0), (32, -1), (33, 0), (34, -1), (35, -1), (36, 0), (37, 0), (38, 0), (39, 0), (40, -1), (41, -1), (42, -1), (43, 0), (44, 0), (45, 0), (46, 0), (47, -1), (48, -1), (49, -1), (50, -1), (51, 0), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 8 : set()

After reduction : 
 pending  : []
 solution : [7, 8, 10, 27, 9]


Solution : [7, 8, 10, 27, 9] has cost 22.


Before backtrack at level 8
 pending : []
 solution : [7, 8, 10, 27, 9]

After backtrack at level 8
 pending : [5, 29, 30, 36, 38, 39, 43, 44, 45, 46, 51, 31, 33, 37, 23]
 solution : [7, 8, 10, 27, 9]


Invert decision for 9 at level 7


New level: 8
 pending : [5, 29, 30, 36, 38, 39, 43, 44, 45, 46, 51, 31, 33, 37, 23]
 solution : [7, 8, 10, 27]


Before reduction : 
 pending  : [5, 29, 30, 36, 38, 39, 43, 44, 45, 46, 51, 31, 33, 37, 23]
 solution : [7, 8, 10, 27]

Essensial at level 8 : {23}

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 0), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, 0), (30, 0), (31, 0), (32, -1), (33, 0), (34, -1), (35, -1), (36, 0), (37, 0), (38, 0), (39, 0), (40, -1), (41, -1), (42, -1), (43, 0), (44, 0), (45, 0), (46, 0), (47, -1), (48, -1), (49, -1), (50, -1), (51, 0), (52, -1)]

Covered at level 8 : {33, 36, 5, 38, 39, 37, 43, 44, 45, 46, 51, 29, 30, 31}

After reduction : 
 pending  : []
 solution : [7, 8, 10, 27, 23]


Before reduction : 
 pending  : []
 solution : [7, 8, 10, 27, 23]

Essensial at level 8 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 0), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, 0), (30, 0), (31, 0), (32, -1), (33, 0), (34, -1), (35, -1), (36, 0), (37, 0), (38, 0), (39, 0), (40, -1), (41, -1), (42, -1), (43, 0), (44, 0), (45, 0), (46, 0), (47, -1), (48, -1), (49, -1), (50, -1), (51, 0), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 8 : set()

After reduction : 
 pending  : []
 solution : [7, 8, 10, 27, 23]


Solution : [7, 8, 10, 27, 23] has cost 25.


Before backtrack at level 8
 pending : []
 solution : [7, 8, 10, 27, 23]

After backtrack at level 8
 pending : [23, 5, 29, 30, 36, 38, 39, 43, 44, 45, 46, 51, 31, 33, 37]
 solution : [7, 8, 10, 27]


Before backtrack at level 7
 pending : [23, 5, 29, 30, 36, 38, 39, 43, 44, 45, 46, 51, 31, 33, 37]
 solution : [7, 8, 10, 27]

After backtrack at level 7
 pending : [23, 5, 29, 30, 36, 38, 39, 43, 44, 45, 46, 51, 31, 33, 37, 9]
 solution : [7, 8, 10, 27]


Before backtrack at level 6
 pending : [23, 5, 29, 30, 36, 38, 39, 43, 44, 45, 46, 51, 31, 33, 37, 9]
 solution : [7, 8, 10, 27]

After backtrack at level 6
 pending : [23, 5, 29, 30, 36, 38, 39, 43, 44, 45, 46, 51, 31, 33, 37, 9, 24]
 solution : [7, 8, 10, 27]


Before backtrack at level 5
 pending : [23, 5, 29, 30, 36, 38, 39, 43, 44, 45, 46, 51, 31, 33, 37, 9, 24]
 solution : [7, 8, 10, 27]

After backtrack at level 5
 pending : [23, 5, 29, 30, 36, 38, 39, 43, 44, 45, 46, 51, 31, 33, 37, 9, 24, 32]
 solution : [7, 8, 10, 27]


Before backtrack at level 4
 pending : [23, 5, 29, 30, 36, 38, 39, 43, 44, 45, 46, 51, 31, 33, 37, 9, 24, 32]
 solution : [7, 8, 10, 27]

After backtrack at level 4
 pending : [23, 5, 29, 30, 36, 38, 39, 43, 44, 45, 46, 51, 31, 33, 37, 9, 24, 32, 6, 13, 14, 15, 16, 17, 18, 19, 20, 21, 26, 41, 28]
 solution : [7, 8, 10, 27]


Invert decision for 27 at level 3


New level: 4
 pending : [23, 5, 29, 30, 36, 38, 39, 43, 44, 45, 46, 51, 31, 33, 37, 9, 24, 32, 6, 13, 14, 15, 16, 17, 18, 19, 20, 21, 26, 41, 28]
 solution : [7, 8, 10]


Before reduction : 
 pending  : [23, 5, 29, 30, 36, 38, 39, 43, 44, 45, 46, 51, 31, 33, 37, 9, 24, 32, 6, 13, 14, 15, 16, 17, 18, 19, 20, 21, 26, 41, 28]
 solution : [7, 8, 10]

Essensial at level 4 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 524288), (6, 131072), (7, -1), (8, -1), (9, 67108864), (10, -1), (11, -1), (12, -1), (13, 268435456), (14, 1048576), (15, 134217728), (16, 2097152), (17, 32768), (18, 8388608), (19, 4194304), (20, 65536), (21, 139264), (22, -1), (23, 67108864), (24, 268435456), (25, -1), (26, 524288), (27, -1), (28, 536870912), (29, 524288), (30, 8192), (31, 8192), (32, 536870912), (33, 1048576), (34, -1), (35, -1), (36, 33554432), (37, 134217728), (38, 67108864), (39, 8192), (40, -1), (41, 524288), (42, -1), (43, 262144), (44, 262144), (45, 33554432), (46, 8388608), (47, -1), (48, -1), (49, -1), (50, -1), (51, 33554432), (52, -1)]

Covered at level 4 : set()

After reduction : 
 pending  : [23, 5, 29, 30, 36, 38, 39, 43, 44, 45, 46, 51, 31, 33, 37, 9, 24, 32, 6, 13, 14, 15, 16, 17, 18, 19, 20, 21, 26, 41, 28]
 solution : [7, 8, 10]


Solution : [7, 8, 10] has cost 14.


Decide in level 4 among pending : [23, 5, 29, 30, 36, 38, 39, 43, 44, 45, 46, 51, 31, 33, 37, 9, 24, 32, 6, 13, 14, 15, 16, 17, 18, 19, 20, 21, 26, 41, 28]

Coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 524288), (6, 131072), (7, -1), (8, -1), (9, 67108864), (10, -1), (11, -1), (12, -1), (13, 268435456), (14, 1048576), (15, 134217728), (16, 2097152), (17, 32768), (18, 8388608), (19, 4194304), (20, 65536), (21, 139264), (22, -1), (23, 67108864), (24, 268435456), (25, -1), (26, 524288), (27, -1), (28, 536870912), (29, 524288), (30, 8192), (31, 8192), (32, 536870912), (33, 1048576), (34, -1), (35, -1), (36, 33554432), (37, 134217728), (38, 67108864), (39, 8192), (40, -1), (41, 524288), (42, -1), (43, 262144), (44, 262144), (45, 33554432), (46, 8388608), (47, -1), (48, -1), (49, -1), (50, -1), (51, 33554432), (52, -1)]

Decide 32 with phase True at level 4

After decision at level 4
 pending : [23, 5, 29, 30, 36, 38, 39, 43, 44, 45, 46, 51, 31, 33, 37, 9, 24, 6, 13, 14, 15, 16, 17, 18, 19, 20, 21, 26, 41, 28]
 solution : [7, 8, 10, 32]


New level: 5
 pending : [23, 5, 29, 30, 36, 38, 39, 43, 44, 45, 46, 51, 31, 33, 37, 9, 24, 6, 13, 14, 15, 16, 17, 18, 19, 20, 21, 26, 41, 28]
 solution : [7, 8, 10, 32]


Before reduction : 
 pending  : [23, 5, 29, 30, 36, 38, 39, 43, 44, 45, 46, 51, 31, 33, 37, 9, 24, 6, 13, 14, 15, 16, 17, 18, 19, 20, 21, 26, 41, 28]
 solution : [7, 8, 10, 32]

Essensial at level 5 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 524288), (6, 131072), (7, -1), (8, -1), (9, 67108864), (10, -1), (11, -1), (12, -1), (13, 268435456), (14, 1048576), (15, 134217728), (16, 2097152), (17, 32768), (18, 8388608), (19, 4194304), (20, 65536), (21, 139264), (22, -1), (23, 67108864), (24, 268435456), (25, -1), (26, 524288), (27, -1), (28, 536870912), (29, 524288), (30, 8192), (31, 8192), (32, 536870912), (33, 1048576), (34, -1), (35, -1), (36, 33554432), (37, 134217728), (38, 67108864), (39, 8192), (40, -1), (41, 524288), (42, -1), (43, 262144), (44, 262144), (45, 33554432), (46, 8388608), (47, -1), (48, -1), (49, -1), (50, -1), (51, 33554432), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 131072), (6, 131072), (7, -1), (8, -1), (9, 67108864), (10, -1), (11, -1), (12, -1), (13, 268435456), (14, 1048576), (15, 134217728), (16, 2097152), (17, 32768), (18, 8388608), (19, 4194304), (20, 65536), (21, 139264), (22, -1), (23, 67108864), (24, 8192), (25, -1), (26, 524288), (27, -1), (28, 524288), (29, 131072), (30, 2048), (31, 0), (32, -1), (33, 0), (34, -1), (35, -1), (36, 33554432), (37, 4096), (38, 16777216), (39, 2048), (40, -1), (41, 524288), (42, -1), (43, 65536), (44, 65536), (45, 8388608), (46, 2097152), (47, -1), (48, -1), (49, -1), (50, -1), (51, 8388608), (52, -1)]

Covered at level 5 : {33, 31}

After reduction : 
 pending  : [23, 5, 29, 30, 36, 38, 39, 43, 44, 45, 46, 51, 37, 9, 24, 6, 13, 14, 15, 16, 17, 18, 19, 20, 21, 26, 41, 28]
 solution : [7, 8, 10, 32]


Before reduction : 
 pending  : [23, 5, 29, 30, 36, 38, 39, 43, 44, 45, 46, 51, 37, 9, 24, 6, 13, 14, 15, 16, 17, 18, 19, 20, 21, 26, 41, 28]
 solution : [7, 8, 10, 32]

Essensial at level 5 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 131072), (6, 131072), (7, -1), (8, -1), (9, 67108864), (10, -1), (11, -1), (12, -1), (13, 268435456), (14, 1048576), (15, 134217728), (16, 2097152), (17, 32768), (18, 8388608), (19, 4194304), (20, 65536), (21, 139264), (22, -1), (23, 67108864), (24, 8192), (25, -1), (26, 524288), (27, -1), (28, 524288), (29, 131072), (30, 2048), (31, 0), (32, -1), (33, 0), (34, -1), (35, -1), (36, 33554432), (37, 4096), (38, 16777216), (39, 2048), (40, -1), (41, 524288), (42, -1), (43, 65536), (44, 65536), (45, 8388608), (46, 2097152), (47, -1), (48, -1), (49, -1), (50, -1), (51, 8388608), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 131072), (6, 131072), (7, -1), (8, -1), (9, 67108864), (10, -1), (11, -1), (12, -1), (13, 268435456), (14, 1048576), (15, 134217728), (16, 2097152), (17, 32768), (18, 8388608), (19, 4194304), (20, 65536), (21, 139264), (22, -1), (23, 67108864), (24, 8192), (25, -1), (26, 524288), (27, -1), (28, 524288), (29, 131072), (30, 2048), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, 33554432), (37, 4096), (38, 16777216), (39, 2048), (40, -1), (41, 524288), (42, -1), (43, 65536), (44, 65536), (45, 8388608), (46, 2097152), (47, -1), (48, -1), (49, -1), (50, -1), (51, 8388608), (52, -1)]

Covered at level 5 : set()

After reduction : 
 pending  : [23, 5, 29, 30, 36, 38, 39, 43, 44, 45, 46, 51, 37, 9, 24, 6, 13, 14, 15, 16, 17, 18, 19, 20, 21, 26, 41, 28]
 solution : [7, 8, 10, 32]


Solution : [7, 8, 10, 32] has cost 27.


Before backtrack at level 5
 pending : [23, 5, 29, 30, 36, 38, 39, 43, 44, 45, 46, 51, 37, 9, 24, 6, 13, 14, 15, 16, 17, 18, 19, 20, 21, 26, 41, 28]
 solution : [7, 8, 10, 32]

After backtrack at level 5
 pending : [23, 5, 29, 30, 36, 38, 39, 43, 44, 45, 46, 51, 37, 9, 24, 6, 13, 14, 15, 16, 17, 18, 19, 20, 21, 26, 41, 28, 31, 33]
 solution : [7, 8, 10, 32]


Invert decision for 32 at level 4


New level: 5
 pending : [23, 5, 29, 30, 36, 38, 39, 43, 44, 45, 46, 51, 37, 9, 24, 6, 13, 14, 15, 16, 17, 18, 19, 20, 21, 26, 41, 28, 31, 33]
 solution : [7, 8, 10]


Before reduction : 
 pending  : [23, 5, 29, 30, 36, 38, 39, 43, 44, 45, 46, 51, 37, 9, 24, 6, 13, 14, 15, 16, 17, 18, 19, 20, 21, 26, 41, 28, 31, 33]
 solution : [7, 8, 10]

Essensial at level 5 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 131072), (6, 131072), (7, -1), (8, -1), (9, 67108864), (10, -1), (11, -1), (12, -1), (13, 268435456), (14, 1048576), (15, 134217728), (16, 2097152), (17, 32768), (18, 8388608), (19, 4194304), (20, 65536), (21, 139264), (22, -1), (23, 67108864), (24, 8192), (25, -1), (26, 524288), (27, -1), (28, 524288), (29, 131072), (30, 2048), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, 33554432), (37, 4096), (38, 16777216), (39, 2048), (40, -1), (41, 524288), (42, -1), (43, 65536), (44, 65536), (45, 8388608), (46, 2097152), (47, -1), (48, -1), (49, -1), (50, -1), (51, 8388608), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 524288), (6, 131072), (7, -1), (8, -1), (9, 67108864), (10, -1), (11, -1), (12, -1), (13, 268435456), (14, 1048576), (15, 134217728), (16, 2097152), (17, 32768), (18, 8388608), (19, 4194304), (20, 65536), (21, 139264), (22, -1), (23, 67108864), (24, 268435456), (25, -1), (26, 524288), (27, -1), (28, 536870912), (29, 524288), (30, 8192), (31, 8192), (32, -1), (33, 1048576), (34, -1), (35, -1), (36, 33554432), (37, 134217728), (38, 67108864), (39, 8192), (40, -1), (41, 524288), (42, -1), (43, 262144), (44, 262144), (45, 33554432), (46, 8388608), (47, -1), (48, -1), (49, -1), (50, -1), (51, 33554432), (52, -1)]

Covered at level 5 : set()

After reduction : 
 pending  : [23, 5, 29, 30, 36, 38, 39, 43, 44, 45, 46, 51, 37, 9, 24, 6, 13, 14, 15, 16, 17, 18, 19, 20, 21, 26, 41, 28, 31, 33]
 solution : [7, 8, 10]


Solution : [7, 8, 10] has cost 14.


Decide in level 5 among pending : [23, 5, 29, 30, 36, 38, 39, 43, 44, 45, 46, 51, 37, 9, 24, 6, 13, 14, 15, 16, 17, 18, 19, 20, 21, 26, 41, 28, 31, 33]

Coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 524288), (6, 131072), (7, -1), (8, -1), (9, 67108864), (10, -1), (11, -1), (12, -1), (13, 268435456), (14, 1048576), (15, 134217728), (16, 2097152), (17, 32768), (18, 8388608), (19, 4194304), (20, 65536), (21, 139264), (22, -1), (23, 67108864), (24, 268435456), (25, -1), (26, 524288), (27, -1), (28, 536870912), (29, 524288), (30, 8192), (31, 8192), (32, -1), (33, 1048576), (34, -1), (35, -1), (36, 33554432), (37, 134217728), (38, 67108864), (39, 8192), (40, -1), (41, 524288), (42, -1), (43, 262144), (44, 262144), (45, 33554432), (46, 8388608), (47, -1), (48, -1), (49, -1), (50, -1), (51, 33554432), (52, -1)]

Decide 28 with phase True at level 5

After decision at level 5
 pending : [23, 5, 29, 30, 36, 38, 39, 43, 44, 45, 46, 51, 37, 9, 24, 6, 13, 14, 15, 16, 17, 18, 19, 20, 21, 26, 41, 31, 33]
 solution : [7, 8, 10, 28]


New level: 6
 pending : [23, 5, 29, 30, 36, 38, 39, 43, 44, 45, 46, 51, 37, 9, 24, 6, 13, 14, 15, 16, 17, 18, 19, 20, 21, 26, 41, 31, 33]
 solution : [7, 8, 10, 28]


Before reduction : 
 pending  : [23, 5, 29, 30, 36, 38, 39, 43, 44, 45, 46, 51, 37, 9, 24, 6, 13, 14, 15, 16, 17, 18, 19, 20, 21, 26, 41, 31, 33]
 solution : [7, 8, 10, 28]

Essensial at level 6 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 524288), (6, 131072), (7, -1), (8, -1), (9, 67108864), (10, -1), (11, -1), (12, -1), (13, 268435456), (14, 1048576), (15, 134217728), (16, 2097152), (17, 32768), (18, 8388608), (19, 4194304), (20, 65536), (21, 139264), (22, -1), (23, 67108864), (24, 268435456), (25, -1), (26, 524288), (27, -1), (28, 536870912), (29, 524288), (30, 8192), (31, 8192), (32, -1), (33, 1048576), (34, -1), (35, -1), (36, 33554432), (37, 134217728), (38, 67108864), (39, 8192), (40, -1), (41, 524288), (42, -1), (43, 262144), (44, 262144), (45, 33554432), (46, 8388608), (47, -1), (48, -1), (49, -1), (50, -1), (51, 33554432), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 524288), (6, 131072), (7, -1), (8, -1), (9, 67108864), (10, -1), (11, -1), (12, -1), (13, 268435456), (14, 1048576), (15, 134217728), (16, 2097152), (17, 32768), (18, 8388608), (19, 4194304), (20, 65536), (21, 139264), (22, -1), (23, 67108864), (24, 134217728), (25, -1), (26, 524288), (27, -1), (28, -1), (29, 524288), (30, 8192), (31, 4096), (32, -1), (33, 524288), (34, -1), (35, -1), (36, 33554432), (37, 134217728), (38, 67108864), (39, 8192), (40, -1), (41, 524288), (42, -1), (43, 262144), (44, 262144), (45, 33554432), (46, 8388608), (47, -1), (48, -1), (49, -1), (50, -1), (51, 33554432), (52, -1)]

Covered at level 6 : set()

After reduction : 
 pending  : [23, 5, 29, 30, 36, 38, 39, 43, 44, 45, 46, 51, 37, 9, 24, 6, 13, 14, 15, 16, 17, 18, 19, 20, 21, 26, 41, 31, 33]
 solution : [7, 8, 10, 28]


Solution : [7, 8, 10, 28] has cost 18.


Decide in level 6 among pending : [23, 5, 29, 30, 36, 38, 39, 43, 44, 45, 46, 51, 37, 9, 24, 6, 13, 14, 15, 16, 17, 18, 19, 20, 21, 26, 41, 31, 33]

Coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 524288), (6, 131072), (7, -1), (8, -1), (9, 67108864), (10, -1), (11, -1), (12, -1), (13, 268435456), (14, 1048576), (15, 134217728), (16, 2097152), (17, 32768), (18, 8388608), (19, 4194304), (20, 65536), (21, 139264), (22, -1), (23, 67108864), (24, 134217728), (25, -1), (26, 524288), (27, -1), (28, -1), (29, 524288), (30, 8192), (31, 4096), (32, -1), (33, 524288), (34, -1), (35, -1), (36, 33554432), (37, 134217728), (38, 67108864), (39, 8192), (40, -1), (41, 524288), (42, -1), (43, 262144), (44, 262144), (45, 33554432), (46, 8388608), (47, -1), (48, -1), (49, -1), (50, -1), (51, 33554432), (52, -1)]

Decide 13 with phase True at level 6

After decision at level 6
 pending : [23, 5, 29, 30, 36, 38, 39, 43, 44, 45, 46, 51, 37, 9, 24, 6, 14, 15, 16, 17, 18, 19, 20, 21, 26, 41, 31, 33]
 solution : [7, 8, 10, 28, 13]


New level: 7
 pending : [23, 5, 29, 30, 36, 38, 39, 43, 44, 45, 46, 51, 37, 9, 24, 6, 14, 15, 16, 17, 18, 19, 20, 21, 26, 41, 31, 33]
 solution : [7, 8, 10, 28, 13]


Before reduction : 
 pending  : [23, 5, 29, 30, 36, 38, 39, 43, 44, 45, 46, 51, 37, 9, 24, 6, 14, 15, 16, 17, 18, 19, 20, 21, 26, 41, 31, 33]
 solution : [7, 8, 10, 28, 13]

Essensial at level 7 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 524288), (6, 131072), (7, -1), (8, -1), (9, 67108864), (10, -1), (11, -1), (12, -1), (13, 268435456), (14, 1048576), (15, 134217728), (16, 2097152), (17, 32768), (18, 8388608), (19, 4194304), (20, 65536), (21, 139264), (22, -1), (23, 67108864), (24, 134217728), (25, -1), (26, 524288), (27, -1), (28, -1), (29, 524288), (30, 8192), (31, 4096), (32, -1), (33, 524288), (34, -1), (35, -1), (36, 33554432), (37, 134217728), (38, 67108864), (39, 8192), (40, -1), (41, 524288), (42, -1), (43, 262144), (44, 262144), (45, 33554432), (46, 8388608), (47, -1), (48, -1), (49, -1), (50, -1), (51, 33554432), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 131072), (6, 0), (7, -1), (8, -1), (9, 67108864), (10, -1), (11, -1), (12, -1), (13, -1), (14, 0), (15, 0), (16, 0), (17, 0), (18, 0), (19, 0), (20, 0), (21, 0), (22, -1), (23, 67108864), (24, 134217728), (25, -1), (26, 0), (27, -1), (28, -1), (29, 262144), (30, 4096), (31, 4096), (32, -1), (33, 524288), (34, -1), (35, -1), (36, 1024), (37, 2048), (38, 33554432), (39, 2048), (40, -1), (41, 0), (42, -1), (43, 65536), (44, 65536), (45, 16777216), (46, 2097152), (47, -1), (48, -1), (49, -1), (50, -1), (51, 33554432), (52, -1)]

Covered at level 7 : {6, 41, 14, 15, 16, 17, 18, 19, 20, 21, 26}

After reduction : 
 pending  : [23, 5, 29, 30, 36, 38, 39, 43, 44, 45, 46, 51, 37, 9, 24, 31, 33]
 solution : [7, 8, 10, 28, 13]


Before reduction : 
 pending  : [23, 5, 29, 30, 36, 38, 39, 43, 44, 45, 46, 51, 37, 9, 24, 31, 33]
 solution : [7, 8, 10, 28, 13]

Essensial at level 7 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 131072), (6, 0), (7, -1), (8, -1), (9, 67108864), (10, -1), (11, -1), (12, -1), (13, -1), (14, 0), (15, 0), (16, 0), (17, 0), (18, 0), (19, 0), (20, 0), (21, 0), (22, -1), (23, 67108864), (24, 134217728), (25, -1), (26, 0), (27, -1), (28, -1), (29, 262144), (30, 4096), (31, 4096), (32, -1), (33, 524288), (34, -1), (35, -1), (36, 1024), (37, 2048), (38, 33554432), (39, 2048), (40, -1), (41, 0), (42, -1), (43, 65536), (44, 65536), (45, 16777216), (46, 2097152), (47, -1), (48, -1), (49, -1), (50, -1), (51, 33554432), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 131072), (6, -1), (7, -1), (8, -1), (9, 67108864), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, 67108864), (24, 134217728), (25, -1), (26, -1), (27, -1), (28, -1), (29, 262144), (30, 4096), (31, 4096), (32, -1), (33, 524288), (34, -1), (35, -1), (36, 1024), (37, 2048), (38, 33554432), (39, 2048), (40, -1), (41, -1), (42, -1), (43, 65536), (44, 65536), (45, 16777216), (46, 2097152), (47, -1), (48, -1), (49, -1), (50, -1), (51, 33554432), (52, -1)]

Covered at level 7 : set()

After reduction : 
 pending  : [23, 5, 29, 30, 36, 38, 39, 43, 44, 45, 46, 51, 37, 9, 24, 31, 33]
 solution : [7, 8, 10, 28, 13]


Solution : [7, 8, 10, 28, 13] has cost 25.


Before backtrack at level 7
 pending : [23, 5, 29, 30, 36, 38, 39, 43, 44, 45, 46, 51, 37, 9, 24, 31, 33]
 solution : [7, 8, 10, 28, 13]

After backtrack at level 7
 pending : [23, 5, 29, 30, 36, 38, 39, 43, 44, 45, 46, 51, 37, 9, 24, 31, 33, 6, 14, 15, 16, 17, 18, 19, 20, 21, 26, 41]
 solution : [7, 8, 10, 28, 13]


Invert decision for 13 at level 6


New level: 7
 pending : [23, 5, 29, 30, 36, 38, 39, 43, 44, 45, 46, 51, 37, 9, 24, 31, 33, 6, 14, 15, 16, 17, 18, 19, 20, 21, 26, 41]
 solution : [7, 8, 10, 28]


Before reduction : 
 pending  : [23, 5, 29, 30, 36, 38, 39, 43, 44, 45, 46, 51, 37, 9, 24, 31, 33, 6, 14, 15, 16, 17, 18, 19, 20, 21, 26, 41]
 solution : [7, 8, 10, 28]

Essensial at level 7 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 131072), (6, -1), (7, -1), (8, -1), (9, 67108864), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, 67108864), (24, 134217728), (25, -1), (26, -1), (27, -1), (28, -1), (29, 262144), (30, 4096), (31, 4096), (32, -1), (33, 524288), (34, -1), (35, -1), (36, 1024), (37, 2048), (38, 33554432), (39, 2048), (40, -1), (41, -1), (42, -1), (43, 65536), (44, 65536), (45, 16777216), (46, 2097152), (47, -1), (48, -1), (49, -1), (50, -1), (51, 33554432), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 524288), (6, 131072), (7, -1), (8, -1), (9, 67108864), (10, -1), (11, -1), (12, -1), (13, -1), (14, 1048576), (15, 134217728), (16, 2097152), (17, 32768), (18, 8388608), (19, 4194304), (20, 65536), (21, 139264), (22, -1), (23, 67108864), (24, 134217728), (25, -1), (26, 524288), (27, -1), (28, -1), (29, 524288), (30, 8192), (31, 4096), (32, -1), (33, 524288), (34, -1), (35, -1), (36, 33554432), (37, 134217728), (38, 67108864), (39, 8192), (40, -1), (41, 524288), (42, -1), (43, 262144), (44, 262144), (45, 33554432), (46, 8388608), (47, -1), (48, -1), (49, -1), (50, -1), (51, 33554432), (52, -1)]

Covered at level 7 : set()

After reduction : 
 pending  : [23, 5, 29, 30, 36, 38, 39, 43, 44, 45, 46, 51, 37, 9, 24, 31, 33, 6, 14, 15, 16, 17, 18, 19, 20, 21, 26, 41]
 solution : [7, 8, 10, 28]


Solution : [7, 8, 10, 28] has cost 18.


Decide in level 7 among pending : [23, 5, 29, 30, 36, 38, 39, 43, 44, 45, 46, 51, 37, 9, 24, 31, 33, 6, 14, 15, 16, 17, 18, 19, 20, 21, 26, 41]

Coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 524288), (6, 131072), (7, -1), (8, -1), (9, 67108864), (10, -1), (11, -1), (12, -1), (13, -1), (14, 1048576), (15, 134217728), (16, 2097152), (17, 32768), (18, 8388608), (19, 4194304), (20, 65536), (21, 139264), (22, -1), (23, 67108864), (24, 134217728), (25, -1), (26, 524288), (27, -1), (28, -1), (29, 524288), (30, 8192), (31, 4096), (32, -1), (33, 524288), (34, -1), (35, -1), (36, 33554432), (37, 134217728), (38, 67108864), (39, 8192), (40, -1), (41, 524288), (42, -1), (43, 262144), (44, 262144), (45, 33554432), (46, 8388608), (47, -1), (48, -1), (49, -1), (50, -1), (51, 33554432), (52, -1)]

Decide 37 with phase True at level 7

After decision at level 7
 pending : [23, 5, 29, 30, 36, 38, 39, 43, 44, 45, 46, 51, 9, 24, 31, 33, 6, 14, 15, 16, 17, 18, 19, 20, 21, 26, 41]
 solution : [7, 8, 10, 28, 37]


New level: 8
 pending : [23, 5, 29, 30, 36, 38, 39, 43, 44, 45, 46, 51, 9, 24, 31, 33, 6, 14, 15, 16, 17, 18, 19, 20, 21, 26, 41]
 solution : [7, 8, 10, 28, 37]


Before reduction : 
 pending  : [23, 5, 29, 30, 36, 38, 39, 43, 44, 45, 46, 51, 9, 24, 31, 33, 6, 14, 15, 16, 17, 18, 19, 20, 21, 26, 41]
 solution : [7, 8, 10, 28, 37]

Essensial at level 8 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 524288), (6, 131072), (7, -1), (8, -1), (9, 67108864), (10, -1), (11, -1), (12, -1), (13, -1), (14, 1048576), (15, 134217728), (16, 2097152), (17, 32768), (18, 8388608), (19, 4194304), (20, 65536), (21, 139264), (22, -1), (23, 67108864), (24, 134217728), (25, -1), (26, 524288), (27, -1), (28, -1), (29, 524288), (30, 8192), (31, 4096), (32, -1), (33, 524288), (34, -1), (35, -1), (36, 33554432), (37, 134217728), (38, 67108864), (39, 8192), (40, -1), (41, 524288), (42, -1), (43, 262144), (44, 262144), (45, 33554432), (46, 8388608), (47, -1), (48, -1), (49, -1), (50, -1), (51, 33554432), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 524288), (6, 131072), (7, -1), (8, -1), (9, 67108864), (10, -1), (11, -1), (12, -1), (13, -1), (14, 1048576), (15, 134217728), (16, 2097152), (17, 32768), (18, 8388608), (19, 4194304), (20, 65536), (21, 139264), (22, -1), (23, 67108864), (24, 67108864), (25, -1), (26, 524288), (27, -1), (28, -1), (29, 524288), (30, 8192), (31, 2048), (32, -1), (33, 262144), (34, -1), (35, -1), (36, 16777216), (37, -1), (38, 67108864), (39, 8192), (40, -1), (41, 524288), (42, -1), (43, 262144), (44, 262144), (45, 33554432), (46, 8388608), (47, -1), (48, -1), (49, -1), (50, -1), (51, 33554432), (52, -1)]

Covered at level 8 : set()

After reduction : 
 pending  : [23, 5, 29, 30, 36, 38, 39, 43, 44, 45, 46, 51, 9, 24, 31, 33, 6, 14, 15, 16, 17, 18, 19, 20, 21, 26, 41]
 solution : [7, 8, 10, 28, 37]


Solution : [7, 8, 10, 28, 37] has cost 32.


Before backtrack at level 8
 pending : [23, 5, 29, 30, 36, 38, 39, 43, 44, 45, 46, 51, 9, 24, 31, 33, 6, 14, 15, 16, 17, 18, 19, 20, 21, 26, 41]
 solution : [7, 8, 10, 28, 37]

After backtrack at level 8
 pending : [23, 5, 29, 30, 36, 38, 39, 43, 44, 45, 46, 51, 9, 24, 31, 33, 6, 14, 15, 16, 17, 18, 19, 20, 21, 26, 41]
 solution : [7, 8, 10, 28, 37]


Invert decision for 37 at level 7


New level: 8
 pending : [23, 5, 29, 30, 36, 38, 39, 43, 44, 45, 46, 51, 9, 24, 31, 33, 6, 14, 15, 16, 17, 18, 19, 20, 21, 26, 41]
 solution : [7, 8, 10, 28]


Before reduction : 
 pending  : [23, 5, 29, 30, 36, 38, 39, 43, 44, 45, 46, 51, 9, 24, 31, 33, 6, 14, 15, 16, 17, 18, 19, 20, 21, 26, 41]
 solution : [7, 8, 10, 28]

Essensial at level 8 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 524288), (6, 131072), (7, -1), (8, -1), (9, 67108864), (10, -1), (11, -1), (12, -1), (13, -1), (14, 1048576), (15, 134217728), (16, 2097152), (17, 32768), (18, 8388608), (19, 4194304), (20, 65536), (21, 139264), (22, -1), (23, 67108864), (24, 67108864), (25, -1), (26, 524288), (27, -1), (28, -1), (29, 524288), (30, 8192), (31, 2048), (32, -1), (33, 262144), (34, -1), (35, -1), (36, 16777216), (37, -1), (38, 67108864), (39, 8192), (40, -1), (41, 524288), (42, -1), (43, 262144), (44, 262144), (45, 33554432), (46, 8388608), (47, -1), (48, -1), (49, -1), (50, -1), (51, 33554432), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 524288), (6, 131072), (7, -1), (8, -1), (9, 67108864), (10, -1), (11, -1), (12, -1), (13, -1), (14, 1048576), (15, 134217728), (16, 2097152), (17, 32768), (18, 8388608), (19, 4194304), (20, 65536), (21, 139264), (22, -1), (23, 67108864), (24, 134217728), (25, -1), (26, 524288), (27, -1), (28, -1), (29, 524288), (30, 8192), (31, 4096), (32, -1), (33, 524288), (34, -1), (35, -1), (36, 33554432), (37, -1), (38, 67108864), (39, 8192), (40, -1), (41, 524288), (42, -1), (43, 262144), (44, 262144), (45, 33554432), (46, 8388608), (47, -1), (48, -1), (49, -1), (50, -1), (51, 33554432), (52, -1)]

Covered at level 8 : set()

After reduction : 
 pending  : [23, 5, 29, 30, 36, 38, 39, 43, 44, 45, 46, 51, 9, 24, 31, 33, 6, 14, 15, 16, 17, 18, 19, 20, 21, 26, 41]
 solution : [7, 8, 10, 28]


Solution : [7, 8, 10, 28] has cost 18.


Decide in level 8 among pending : [23, 5, 29, 30, 36, 38, 39, 43, 44, 45, 46, 51, 9, 24, 31, 33, 6, 14, 15, 16, 17, 18, 19, 20, 21, 26, 41]

Coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 524288), (6, 131072), (7, -1), (8, -1), (9, 67108864), (10, -1), (11, -1), (12, -1), (13, -1), (14, 1048576), (15, 134217728), (16, 2097152), (17, 32768), (18, 8388608), (19, 4194304), (20, 65536), (21, 139264), (22, -1), (23, 67108864), (24, 134217728), (25, -1), (26, 524288), (27, -1), (28, -1), (29, 524288), (30, 8192), (31, 4096), (32, -1), (33, 524288), (34, -1), (35, -1), (36, 33554432), (37, -1), (38, 67108864), (39, 8192), (40, -1), (41, 524288), (42, -1), (43, 262144), (44, 262144), (45, 33554432), (46, 8388608), (47, -1), (48, -1), (49, -1), (50, -1), (51, 33554432), (52, -1)]

Decide 24 with phase True at level 8

After decision at level 8
 pending : [23, 5, 29, 30, 36, 38, 39, 43, 44, 45, 46, 51, 9, 31, 33, 6, 14, 15, 16, 17, 18, 19, 20, 21, 26, 41]
 solution : [7, 8, 10, 28, 24]


New level: 9
 pending : [23, 5, 29, 30, 36, 38, 39, 43, 44, 45, 46, 51, 9, 31, 33, 6, 14, 15, 16, 17, 18, 19, 20, 21, 26, 41]
 solution : [7, 8, 10, 28, 24]


Before reduction : 
 pending  : [23, 5, 29, 30, 36, 38, 39, 43, 44, 45, 46, 51, 9, 31, 33, 6, 14, 15, 16, 17, 18, 19, 20, 21, 26, 41]
 solution : [7, 8, 10, 28, 24]

Essensial at level 9 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 524288), (6, 131072), (7, -1), (8, -1), (9, 67108864), (10, -1), (11, -1), (12, -1), (13, -1), (14, 1048576), (15, 134217728), (16, 2097152), (17, 32768), (18, 8388608), (19, 4194304), (20, 65536), (21, 139264), (22, -1), (23, 67108864), (24, 134217728), (25, -1), (26, 524288), (27, -1), (28, -1), (29, 524288), (30, 8192), (31, 4096), (32, -1), (33, 524288), (34, -1), (35, -1), (36, 33554432), (37, -1), (38, 67108864), (39, 8192), (40, -1), (41, 524288), (42, -1), (43, 262144), (44, 262144), (45, 33554432), (46, 8388608), (47, -1), (48, -1), (49, -1), (50, -1), (51, 33554432), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 131072), (6, 131072), (7, -1), (8, -1), (9, 16777216), (10, -1), (11, -1), (12, -1), (13, -1), (14, 1048576), (15, 134217728), (16, 2097152), (17, 32768), (18, 8388608), (19, 4194304), (20, 65536), (21, 139264), (22, -1), (23, 16777216), (24, -1), (25, -1), (26, 524288), (27, -1), (28, -1), (29, 131072), (30, 2048), (31, 0), (32, -1), (33, 0), (34, -1), (35, -1), (36, 33554432), (37, -1), (38, 33554432), (39, 2048), (40, -1), (41, 524288), (42, -1), (43, 65536), (44, 65536), (45, 16777216), (46, 2097152), (47, -1), (48, -1), (49, -1), (50, -1), (51, 16777216), (52, -1)]

Covered at level 9 : {33, 31}

After reduction : 
 pending  : [23, 5, 29, 30, 36, 38, 39, 43, 44, 45, 46, 51, 9, 6, 14, 15, 16, 17, 18, 19, 20, 21, 26, 41]
 solution : [7, 8, 10, 28, 24]


Before reduction : 
 pending  : [23, 5, 29, 30, 36, 38, 39, 43, 44, 45, 46, 51, 9, 6, 14, 15, 16, 17, 18, 19, 20, 21, 26, 41]
 solution : [7, 8, 10, 28, 24]

Essensial at level 9 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 131072), (6, 131072), (7, -1), (8, -1), (9, 16777216), (10, -1), (11, -1), (12, -1), (13, -1), (14, 1048576), (15, 134217728), (16, 2097152), (17, 32768), (18, 8388608), (19, 4194304), (20, 65536), (21, 139264), (22, -1), (23, 16777216), (24, -1), (25, -1), (26, 524288), (27, -1), (28, -1), (29, 131072), (30, 2048), (31, 0), (32, -1), (33, 0), (34, -1), (35, -1), (36, 33554432), (37, -1), (38, 33554432), (39, 2048), (40, -1), (41, 524288), (42, -1), (43, 65536), (44, 65536), (45, 16777216), (46, 2097152), (47, -1), (48, -1), (49, -1), (50, -1), (51, 16777216), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 131072), (6, 131072), (7, -1), (8, -1), (9, 16777216), (10, -1), (11, -1), (12, -1), (13, -1), (14, 1048576), (15, 134217728), (16, 2097152), (17, 32768), (18, 8388608), (19, 4194304), (20, 65536), (21, 139264), (22, -1), (23, 16777216), (24, -1), (25, -1), (26, 524288), (27, -1), (28, -1), (29, 131072), (30, 2048), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, 33554432), (37, -1), (38, 33554432), (39, 2048), (40, -1), (41, 524288), (42, -1), (43, 65536), (44, 65536), (45, 16777216), (46, 2097152), (47, -1), (48, -1), (49, -1), (50, -1), (51, 16777216), (52, -1)]

Covered at level 9 : set()

After reduction : 
 pending  : [23, 5, 29, 30, 36, 38, 39, 43, 44, 45, 46, 51, 9, 6, 14, 15, 16, 17, 18, 19, 20, 21, 26, 41]
 solution : [7, 8, 10, 28, 24]


Solution : [7, 8, 10, 28, 24] has cost 25.


Before backtrack at level 9
 pending : [23, 5, 29, 30, 36, 38, 39, 43, 44, 45, 46, 51, 9, 6, 14, 15, 16, 17, 18, 19, 20, 21, 26, 41]
 solution : [7, 8, 10, 28, 24]

After backtrack at level 9
 pending : [23, 5, 29, 30, 36, 38, 39, 43, 44, 45, 46, 51, 9, 6, 14, 15, 16, 17, 18, 19, 20, 21, 26, 41, 31, 33]
 solution : [7, 8, 10, 28, 24]


Invert decision for 24 at level 8


New level: 9
 pending : [23, 5, 29, 30, 36, 38, 39, 43, 44, 45, 46, 51, 9, 6, 14, 15, 16, 17, 18, 19, 20, 21, 26, 41, 31, 33]
 solution : [7, 8, 10, 28]


Before reduction : 
 pending  : [23, 5, 29, 30, 36, 38, 39, 43, 44, 45, 46, 51, 9, 6, 14, 15, 16, 17, 18, 19, 20, 21, 26, 41, 31, 33]
 solution : [7, 8, 10, 28]

Essensial at level 9 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 131072), (6, 131072), (7, -1), (8, -1), (9, 16777216), (10, -1), (11, -1), (12, -1), (13, -1), (14, 1048576), (15, 134217728), (16, 2097152), (17, 32768), (18, 8388608), (19, 4194304), (20, 65536), (21, 139264), (22, -1), (23, 16777216), (24, -1), (25, -1), (26, 524288), (27, -1), (28, -1), (29, 131072), (30, 2048), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, 33554432), (37, -1), (38, 33554432), (39, 2048), (40, -1), (41, 524288), (42, -1), (43, 65536), (44, 65536), (45, 16777216), (46, 2097152), (47, -1), (48, -1), (49, -1), (50, -1), (51, 16777216), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 524288), (6, 131072), (7, -1), (8, -1), (9, 67108864), (10, -1), (11, -1), (12, -1), (13, -1), (14, 1048576), (15, 134217728), (16, 2097152), (17, 32768), (18, 8388608), (19, 4194304), (20, 65536), (21, 139264), (22, -1), (23, 67108864), (24, -1), (25, -1), (26, 524288), (27, -1), (28, -1), (29, 524288), (30, 8192), (31, 4096), (32, -1), (33, 524288), (34, -1), (35, -1), (36, 33554432), (37, -1), (38, 67108864), (39, 8192), (40, -1), (41, 524288), (42, -1), (43, 262144), (44, 262144), (45, 33554432), (46, 8388608), (47, -1), (48, -1), (49, -1), (50, -1), (51, 33554432), (52, -1)]

Covered at level 9 : set()

After reduction : 
 pending  : [23, 5, 29, 30, 36, 38, 39, 43, 44, 45, 46, 51, 9, 6, 14, 15, 16, 17, 18, 19, 20, 21, 26, 41, 31, 33]
 solution : [7, 8, 10, 28]


Solution : [7, 8, 10, 28] has cost 18.


Decide in level 9 among pending : [23, 5, 29, 30, 36, 38, 39, 43, 44, 45, 46, 51, 9, 6, 14, 15, 16, 17, 18, 19, 20, 21, 26, 41, 31, 33]

Coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 524288), (6, 131072), (7, -1), (8, -1), (9, 67108864), (10, -1), (11, -1), (12, -1), (13, -1), (14, 1048576), (15, 134217728), (16, 2097152), (17, 32768), (18, 8388608), (19, 4194304), (20, 65536), (21, 139264), (22, -1), (23, 67108864), (24, -1), (25, -1), (26, 524288), (27, -1), (28, -1), (29, 524288), (30, 8192), (31, 4096), (32, -1), (33, 524288), (34, -1), (35, -1), (36, 33554432), (37, -1), (38, 67108864), (39, 8192), (40, -1), (41, 524288), (42, -1), (43, 262144), (44, 262144), (45, 33554432), (46, 8388608), (47, -1), (48, -1), (49, -1), (50, -1), (51, 33554432), (52, -1)]

Decide 15 with phase True at level 9

After decision at level 9
 pending : [23, 5, 29, 30, 36, 38, 39, 43, 44, 45, 46, 51, 9, 6, 14, 16, 17, 18, 19, 20, 21, 26, 41, 31, 33]
 solution : [7, 8, 10, 28, 15]


New level: 10
 pending : [23, 5, 29, 30, 36, 38, 39, 43, 44, 45, 46, 51, 9, 6, 14, 16, 17, 18, 19, 20, 21, 26, 41, 31, 33]
 solution : [7, 8, 10, 28, 15]


Before reduction : 
 pending  : [23, 5, 29, 30, 36, 38, 39, 43, 44, 45, 46, 51, 9, 6, 14, 16, 17, 18, 19, 20, 21, 26, 41, 31, 33]
 solution : [7, 8, 10, 28, 15]

Essensial at level 10 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 524288), (6, 131072), (7, -1), (8, -1), (9, 67108864), (10, -1), (11, -1), (12, -1), (13, -1), (14, 1048576), (15, 134217728), (16, 2097152), (17, 32768), (18, 8388608), (19, 4194304), (20, 65536), (21, 139264), (22, -1), (23, 67108864), (24, -1), (25, -1), (26, 524288), (27, -1), (28, -1), (29, 524288), (30, 8192), (31, 4096), (32, -1), (33, 524288), (34, -1), (35, -1), (36, 33554432), (37, -1), (38, 67108864), (39, 8192), (40, -1), (41, 524288), (42, -1), (43, 262144), (44, 262144), (45, 33554432), (46, 8388608), (47, -1), (48, -1), (49, -1), (50, -1), (51, 33554432), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 131072), (6, 0), (7, -1), (8, -1), (9, 67108864), (10, -1), (11, -1), (12, -1), (13, -1), (14, 0), (15, -1), (16, 0), (17, 0), (18, 0), (19, 0), (20, 0), (21, 0), (22, -1), (23, 67108864), (24, -1), (25, -1), (26, 0), (27, -1), (28, -1), (29, 262144), (30, 4096), (31, 4096), (32, -1), (33, 524288), (34, -1), (35, -1), (36, 33554432), (37, -1), (38, 33554432), (39, 2048), (40, -1), (41, 0), (42, -1), (43, 131072), (44, 131072), (45, 33554432), (46, 8388608), (47, -1), (48, -1), (49, -1), (50, -1), (51, 33554432), (52, -1)]

Covered at level 10 : {6, 41, 14, 16, 17, 18, 19, 20, 21, 26}

After reduction : 
 pending  : [23, 5, 29, 30, 36, 38, 39, 43, 44, 45, 46, 51, 9, 31, 33]
 solution : [7, 8, 10, 28, 15]


Before reduction : 
 pending  : [23, 5, 29, 30, 36, 38, 39, 43, 44, 45, 46, 51, 9, 31, 33]
 solution : [7, 8, 10, 28, 15]

Essensial at level 10 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 131072), (6, 0), (7, -1), (8, -1), (9, 67108864), (10, -1), (11, -1), (12, -1), (13, -1), (14, 0), (15, -1), (16, 0), (17, 0), (18, 0), (19, 0), (20, 0), (21, 0), (22, -1), (23, 67108864), (24, -1), (25, -1), (26, 0), (27, -1), (28, -1), (29, 262144), (30, 4096), (31, 4096), (32, -1), (33, 524288), (34, -1), (35, -1), (36, 33554432), (37, -1), (38, 33554432), (39, 2048), (40, -1), (41, 0), (42, -1), (43, 131072), (44, 131072), (45, 33554432), (46, 8388608), (47, -1), (48, -1), (49, -1), (50, -1), (51, 33554432), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 131072), (6, -1), (7, -1), (8, -1), (9, 67108864), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, 67108864), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, 262144), (30, 4096), (31, 4096), (32, -1), (33, 524288), (34, -1), (35, -1), (36, 1024), (37, -1), (38, 33554432), (39, 2048), (40, -1), (41, -1), (42, -1), (43, 131072), (44, 131072), (45, 16777216), (46, 2097152), (47, -1), (48, -1), (49, -1), (50, -1), (51, 33554432), (52, -1)]

Covered at level 10 : set()

After reduction : 
 pending  : [23, 5, 29, 30, 36, 38, 39, 43, 44, 45, 46, 51, 9, 31, 33]
 solution : [7, 8, 10, 28, 15]


Solution : [7, 8, 10, 28, 15] has cost 25.


Before backtrack at level 10
 pending : [23, 5, 29, 30, 36, 38, 39, 43, 44, 45, 46, 51, 9, 31, 33]
 solution : [7, 8, 10, 28, 15]

After backtrack at level 10
 pending : [23, 5, 29, 30, 36, 38, 39, 43, 44, 45, 46, 51, 9, 31, 33, 6, 14, 16, 17, 18, 19, 20, 21, 26, 41]
 solution : [7, 8, 10, 28, 15]


Invert decision for 15 at level 9


New level: 10
 pending : [23, 5, 29, 30, 36, 38, 39, 43, 44, 45, 46, 51, 9, 31, 33, 6, 14, 16, 17, 18, 19, 20, 21, 26, 41]
 solution : [7, 8, 10, 28]


Before reduction : 
 pending  : [23, 5, 29, 30, 36, 38, 39, 43, 44, 45, 46, 51, 9, 31, 33, 6, 14, 16, 17, 18, 19, 20, 21, 26, 41]
 solution : [7, 8, 10, 28]

Essensial at level 10 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 131072), (6, -1), (7, -1), (8, -1), (9, 67108864), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, 67108864), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, 262144), (30, 4096), (31, 4096), (32, -1), (33, 524288), (34, -1), (35, -1), (36, 1024), (37, -1), (38, 33554432), (39, 2048), (40, -1), (41, -1), (42, -1), (43, 131072), (44, 131072), (45, 16777216), (46, 2097152), (47, -1), (48, -1), (49, -1), (50, -1), (51, 33554432), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 524288), (6, 131072), (7, -1), (8, -1), (9, 67108864), (10, -1), (11, -1), (12, -1), (13, -1), (14, 1048576), (15, -1), (16, 2097152), (17, 32768), (18, 8388608), (19, 4194304), (20, 65536), (21, 139264), (22, -1), (23, 67108864), (24, -1), (25, -1), (26, 524288), (27, -1), (28, -1), (29, 524288), (30, 8192), (31, 4096), (32, -1), (33, 524288), (34, -1), (35, -1), (36, 33554432), (37, -1), (38, 67108864), (39, 8192), (40, -1), (41, 524288), (42, -1), (43, 262144), (44, 262144), (45, 33554432), (46, 8388608), (47, -1), (48, -1), (49, -1), (50, -1), (51, 33554432), (52, -1)]

Covered at level 10 : set()

After reduction : 
 pending  : [23, 5, 29, 30, 36, 38, 39, 43, 44, 45, 46, 51, 9, 31, 33, 6, 14, 16, 17, 18, 19, 20, 21, 26, 41]
 solution : [7, 8, 10, 28]


Solution : [7, 8, 10, 28] has cost 18.


Decide in level 10 among pending : [23, 5, 29, 30, 36, 38, 39, 43, 44, 45, 46, 51, 9, 31, 33, 6, 14, 16, 17, 18, 19, 20, 21, 26, 41]

Coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 524288), (6, 131072), (7, -1), (8, -1), (9, 67108864), (10, -1), (11, -1), (12, -1), (13, -1), (14, 1048576), (15, -1), (16, 2097152), (17, 32768), (18, 8388608), (19, 4194304), (20, 65536), (21, 139264), (22, -1), (23, 67108864), (24, -1), (25, -1), (26, 524288), (27, -1), (28, -1), (29, 524288), (30, 8192), (31, 4096), (32, -1), (33, 524288), (34, -1), (35, -1), (36, 33554432), (37, -1), (38, 67108864), (39, 8192), (40, -1), (41, 524288), (42, -1), (43, 262144), (44, 262144), (45, 33554432), (46, 8388608), (47, -1), (48, -1), (49, -1), (50, -1), (51, 33554432), (52, -1)]

Decide 23 with phase True at level 10

After decision at level 10
 pending : [5, 29, 30, 36, 38, 39, 43, 44, 45, 46, 51, 9, 31, 33, 6, 14, 16, 17, 18, 19, 20, 21, 26, 41]
 solution : [7, 8, 10, 28, 23]


New level: 11
 pending : [5, 29, 30, 36, 38, 39, 43, 44, 45, 46, 51, 9, 31, 33, 6, 14, 16, 17, 18, 19, 20, 21, 26, 41]
 solution : [7, 8, 10, 28, 23]


Before reduction : 
 pending  : [5, 29, 30, 36, 38, 39, 43, 44, 45, 46, 51, 9, 31, 33, 6, 14, 16, 17, 18, 19, 20, 21, 26, 41]
 solution : [7, 8, 10, 28, 23]

Essensial at level 11 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 524288), (6, 131072), (7, -1), (8, -1), (9, 67108864), (10, -1), (11, -1), (12, -1), (13, -1), (14, 1048576), (15, -1), (16, 2097152), (17, 32768), (18, 8388608), (19, 4194304), (20, 65536), (21, 139264), (22, -1), (23, 67108864), (24, -1), (25, -1), (26, 524288), (27, -1), (28, -1), (29, 524288), (30, 8192), (31, 4096), (32, -1), (33, 524288), (34, -1), (35, -1), (36, 33554432), (37, -1), (38, 67108864), (39, 8192), (40, -1), (41, 524288), (42, -1), (43, 262144), (44, 262144), (45, 33554432), (46, 8388608), (47, -1), (48, -1), (49, -1), (50, -1), (51, 33554432), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 0), (6, 65536), (7, -1), (8, -1), (9, 0), (10, -1), (11, -1), (12, -1), (13, -1), (14, 1048576), (15, -1), (16, 2097152), (17, 32768), (18, 4194304), (19, 2097152), (20, 32768), (21, 67584), (22, -1), (23, -1), (24, -1), (25, -1), (26, 524288), (27, -1), (28, -1), (29, 0), (30, 0), (31, 0), (32, -1), (33, 0), (34, -1), (35, -1), (36, 262144), (37, -1), (38, 0), (39, 0), (40, -1), (41, 524288), (42, -1), (43, 0), (44, 0), (45, 0), (46, 0), (47, -1), (48, -1), (49, -1), (50, -1), (51, 0), (52, -1)]

Covered at level 11 : {33, 5, 38, 39, 9, 43, 44, 45, 46, 51, 29, 30, 31}

After reduction : 
 pending  : [36, 6, 14, 16, 17, 18, 19, 20, 21, 26, 41]
 solution : [7, 8, 10, 28, 23]


Before reduction : 
 pending  : [36, 6, 14, 16, 17, 18, 19, 20, 21, 26, 41]
 solution : [7, 8, 10, 28, 23]

Essensial at level 11 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 0), (6, 65536), (7, -1), (8, -1), (9, 0), (10, -1), (11, -1), (12, -1), (13, -1), (14, 1048576), (15, -1), (16, 2097152), (17, 32768), (18, 4194304), (19, 2097152), (20, 32768), (21, 67584), (22, -1), (23, -1), (24, -1), (25, -1), (26, 524288), (27, -1), (28, -1), (29, 0), (30, 0), (31, 0), (32, -1), (33, 0), (34, -1), (35, -1), (36, 262144), (37, -1), (38, 0), (39, 0), (40, -1), (41, 524288), (42, -1), (43, 0), (44, 0), (45, 0), (46, 0), (47, -1), (48, -1), (49, -1), (50, -1), (51, 0), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, 65536), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 1048576), (15, -1), (16, 2097152), (17, 32768), (18, 4194304), (19, 2097152), (20, 32768), (21, 67584), (22, -1), (23, -1), (24, -1), (25, -1), (26, 524288), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, 262144), (37, -1), (38, -1), (39, -1), (40, -1), (41, 524288), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 11 : set()

After reduction : 
 pending  : [36, 6, 14, 16, 17, 18, 19, 20, 21, 26, 41]
 solution : [7, 8, 10, 28, 23]


Solution : [7, 8, 10, 28, 23] has cost 25.


Before backtrack at level 11
 pending : [36, 6, 14, 16, 17, 18, 19, 20, 21, 26, 41]
 solution : [7, 8, 10, 28, 23]

After backtrack at level 11
 pending : [36, 6, 14, 16, 17, 18, 19, 20, 21, 26, 41, 5, 29, 30, 38, 39, 43, 44, 45, 46, 51, 9, 31, 33]
 solution : [7, 8, 10, 28, 23]


Invert decision for 23 at level 10


New level: 11
 pending : [36, 6, 14, 16, 17, 18, 19, 20, 21, 26, 41, 5, 29, 30, 38, 39, 43, 44, 45, 46, 51, 9, 31, 33]
 solution : [7, 8, 10, 28]


Before reduction : 
 pending  : [36, 6, 14, 16, 17, 18, 19, 20, 21, 26, 41, 5, 29, 30, 38, 39, 43, 44, 45, 46, 51, 9, 31, 33]
 solution : [7, 8, 10, 28]

Essensial at level 11 : {9}

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, 65536), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 1048576), (15, -1), (16, 2097152), (17, 32768), (18, 4194304), (19, 2097152), (20, 32768), (21, 67584), (22, -1), (23, -1), (24, -1), (25, -1), (26, 524288), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, 262144), (37, -1), (38, -1), (39, -1), (40, -1), (41, 524288), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 0), (6, 65536), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 1048576), (15, -1), (16, 2097152), (17, 32768), (18, 4194304), (19, 2097152), (20, 32768), (21, 67584), (22, -1), (23, -1), (24, -1), (25, -1), (26, 524288), (27, -1), (28, -1), (29, 0), (30, 0), (31, 0), (32, -1), (33, 0), (34, -1), (35, -1), (36, 32768), (37, -1), (38, 0), (39, 0), (40, -1), (41, 524288), (42, -1), (43, 0), (44, 0), (45, 0), (46, 0), (47, -1), (48, -1), (49, -1), (50, -1), (51, 0), (52, -1)]

Covered at level 11 : {33, 5, 38, 39, 43, 44, 45, 46, 51, 29, 30, 31}

After reduction : 
 pending  : [36, 6, 14, 16, 17, 18, 19, 20, 21, 26, 41]
 solution : [7, 8, 10, 28, 9]


Before reduction : 
 pending  : [36, 6, 14, 16, 17, 18, 19, 20, 21, 26, 41]
 solution : [7, 8, 10, 28, 9]

Essensial at level 11 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 0), (6, 65536), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 1048576), (15, -1), (16, 2097152), (17, 32768), (18, 4194304), (19, 2097152), (20, 32768), (21, 67584), (22, -1), (23, -1), (24, -1), (25, -1), (26, 524288), (27, -1), (28, -1), (29, 0), (30, 0), (31, 0), (32, -1), (33, 0), (34, -1), (35, -1), (36, 32768), (37, -1), (38, 0), (39, 0), (40, -1), (41, 524288), (42, -1), (43, 0), (44, 0), (45, 0), (46, 0), (47, -1), (48, -1), (49, -1), (50, -1), (51, 0), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, 65536), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 1048576), (15, -1), (16, 2097152), (17, 32768), (18, 4194304), (19, 2097152), (20, 32768), (21, 67584), (22, -1), (23, -1), (24, -1), (25, -1), (26, 524288), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, 32768), (37, -1), (38, -1), (39, -1), (40, -1), (41, 524288), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 11 : set()

After reduction : 
 pending  : [36, 6, 14, 16, 17, 18, 19, 20, 21, 26, 41]
 solution : [7, 8, 10, 28, 9]


Solution : [7, 8, 10, 28, 9] has cost 22.


Decide in level 11 among pending : [36, 6, 14, 16, 17, 18, 19, 20, 21, 26, 41]

Coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, 65536), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 1048576), (15, -1), (16, 2097152), (17, 32768), (18, 4194304), (19, 2097152), (20, 32768), (21, 67584), (22, -1), (23, -1), (24, -1), (25, -1), (26, 524288), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, 32768), (37, -1), (38, -1), (39, -1), (40, -1), (41, 524288), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Decide 18 with phase True at level 11

After decision at level 11
 pending : [36, 6, 14, 16, 17, 19, 20, 21, 26, 41]
 solution : [7, 8, 10, 28, 9, 18]


New level: 12
 pending : [36, 6, 14, 16, 17, 19, 20, 21, 26, 41]
 solution : [7, 8, 10, 28, 9, 18]


Before reduction : 
 pending  : [36, 6, 14, 16, 17, 19, 20, 21, 26, 41]
 solution : [7, 8, 10, 28, 9, 18]

Essensial at level 12 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, 65536), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 1048576), (15, -1), (16, 2097152), (17, 32768), (18, 4194304), (19, 2097152), (20, 32768), (21, 67584), (22, -1), (23, -1), (24, -1), (25, -1), (26, 524288), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, 32768), (37, -1), (38, -1), (39, -1), (40, -1), (41, 524288), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, 0), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 8192), (15, -1), (16, 32768), (17, 8192), (18, -1), (19, 0), (20, 0), (21, 0), (22, -1), (23, -1), (24, -1), (25, -1), (26, 2048), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, 1024), (37, -1), (38, -1), (39, -1), (40, -1), (41, 2048), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 12 : {19, 20, 21, 6}

After reduction : 
 pending  : [36, 14, 16, 17, 26, 41]
 solution : [7, 8, 10, 28, 9, 18]


Before reduction : 
 pending  : [36, 14, 16, 17, 26, 41]
 solution : [7, 8, 10, 28, 9, 18]

Essensial at level 12 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, 0), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 8192), (15, -1), (16, 32768), (17, 8192), (18, -1), (19, 0), (20, 0), (21, 0), (22, -1), (23, -1), (24, -1), (25, -1), (26, 2048), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, 1024), (37, -1), (38, -1), (39, -1), (40, -1), (41, 2048), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 8192), (15, -1), (16, 32768), (17, 8192), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, 2048), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, 1024), (37, -1), (38, -1), (39, -1), (40, -1), (41, 2048), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 12 : set()

After reduction : 
 pending  : [36, 14, 16, 17, 26, 41]
 solution : [7, 8, 10, 28, 9, 18]


Solution : [7, 8, 10, 28, 9, 18] has cost 31.


Before backtrack at level 12
 pending : [36, 14, 16, 17, 26, 41]
 solution : [7, 8, 10, 28, 9, 18]

After backtrack at level 12
 pending : [36, 14, 16, 17, 26, 41, 6, 19, 20, 21]
 solution : [7, 8, 10, 28, 9, 18]


Invert decision for 18 at level 11


New level: 12
 pending : [36, 14, 16, 17, 26, 41, 6, 19, 20, 21]
 solution : [7, 8, 10, 28, 9]


Before reduction : 
 pending  : [36, 14, 16, 17, 26, 41, 6, 19, 20, 21]
 solution : [7, 8, 10, 28, 9]

Essensial at level 12 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 8192), (15, -1), (16, 32768), (17, 8192), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, 2048), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, 1024), (37, -1), (38, -1), (39, -1), (40, -1), (41, 2048), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, 65536), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 1048576), (15, -1), (16, 2097152), (17, 32768), (18, -1), (19, 2097152), (20, 32768), (21, 67584), (22, -1), (23, -1), (24, -1), (25, -1), (26, 524288), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, 32768), (37, -1), (38, -1), (39, -1), (40, -1), (41, 524288), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 12 : set()

After reduction : 
 pending  : [36, 14, 16, 17, 26, 41, 6, 19, 20, 21]
 solution : [7, 8, 10, 28, 9]


Solution : [7, 8, 10, 28, 9] has cost 22.


Decide in level 12 among pending : [36, 14, 16, 17, 26, 41, 6, 19, 20, 21]

Coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, 65536), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 1048576), (15, -1), (16, 2097152), (17, 32768), (18, -1), (19, 2097152), (20, 32768), (21, 67584), (22, -1), (23, -1), (24, -1), (25, -1), (26, 524288), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, 32768), (37, -1), (38, -1), (39, -1), (40, -1), (41, 524288), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Decide 16 with phase True at level 12

After decision at level 12
 pending : [36, 14, 17, 26, 41, 6, 19, 20, 21]
 solution : [7, 8, 10, 28, 9, 16]


New level: 13
 pending : [36, 14, 17, 26, 41, 6, 19, 20, 21]
 solution : [7, 8, 10, 28, 9, 16]


Before reduction : 
 pending  : [36, 14, 17, 26, 41, 6, 19, 20, 21]
 solution : [7, 8, 10, 28, 9, 16]

Essensial at level 13 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, 65536), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 1048576), (15, -1), (16, 2097152), (17, 32768), (18, -1), (19, 2097152), (20, 32768), (21, 67584), (22, -1), (23, -1), (24, -1), (25, -1), (26, 524288), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, 32768), (37, -1), (38, -1), (39, -1), (40, -1), (41, 524288), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, 32768), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 0), (15, -1), (16, -1), (17, 0), (18, -1), (19, 524288), (20, 0), (21, 33280), (22, -1), (23, -1), (24, -1), (25, -1), (26, 131072), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, 512), (37, -1), (38, -1), (39, -1), (40, -1), (41, 131072), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 13 : {17, 20, 14}

After reduction : 
 pending  : [36, 26, 41, 6, 19, 21]
 solution : [7, 8, 10, 28, 9, 16]


Before reduction : 
 pending  : [36, 26, 41, 6, 19, 21]
 solution : [7, 8, 10, 28, 9, 16]

Essensial at level 13 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, 32768), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 0), (15, -1), (16, -1), (17, 0), (18, -1), (19, 524288), (20, 0), (21, 33280), (22, -1), (23, -1), (24, -1), (25, -1), (26, 131072), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, 512), (37, -1), (38, -1), (39, -1), (40, -1), (41, 131072), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, 32768), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, 524288), (20, -1), (21, 33280), (22, -1), (23, -1), (24, -1), (25, -1), (26, 131072), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, 512), (37, -1), (38, -1), (39, -1), (40, -1), (41, 131072), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 13 : set()

After reduction : 
 pending  : [36, 26, 41, 6, 19, 21]
 solution : [7, 8, 10, 28, 9, 16]


Solution : [7, 8, 10, 28, 9, 16] has cost 29.


Before backtrack at level 13
 pending : [36, 26, 41, 6, 19, 21]
 solution : [7, 8, 10, 28, 9, 16]

After backtrack at level 13
 pending : [36, 26, 41, 6, 19, 21, 14, 17, 20]
 solution : [7, 8, 10, 28, 9, 16]


Invert decision for 16 at level 12


New level: 13
 pending : [36, 26, 41, 6, 19, 21, 14, 17, 20]
 solution : [7, 8, 10, 28, 9]


Before reduction : 
 pending  : [36, 26, 41, 6, 19, 21, 14, 17, 20]
 solution : [7, 8, 10, 28, 9]

Essensial at level 13 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, 32768), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, 524288), (20, -1), (21, 33280), (22, -1), (23, -1), (24, -1), (25, -1), (26, 131072), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, 512), (37, -1), (38, -1), (39, -1), (40, -1), (41, 131072), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, 65536), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 1048576), (15, -1), (16, -1), (17, 32768), (18, -1), (19, 2097152), (20, 32768), (21, 67584), (22, -1), (23, -1), (24, -1), (25, -1), (26, 524288), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, 32768), (37, -1), (38, -1), (39, -1), (40, -1), (41, 524288), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 13 : set()

After reduction : 
 pending  : [36, 26, 41, 6, 19, 21, 14, 17, 20]
 solution : [7, 8, 10, 28, 9]


Solution : [7, 8, 10, 28, 9] has cost 22.


Decide in level 13 among pending : [36, 26, 41, 6, 19, 21, 14, 17, 20]

Coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, 65536), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 1048576), (15, -1), (16, -1), (17, 32768), (18, -1), (19, 2097152), (20, 32768), (21, 67584), (22, -1), (23, -1), (24, -1), (25, -1), (26, 524288), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, 32768), (37, -1), (38, -1), (39, -1), (40, -1), (41, 524288), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Decide 19 with phase True at level 13

After decision at level 13
 pending : [36, 26, 41, 6, 21, 14, 17, 20]
 solution : [7, 8, 10, 28, 9, 19]


New level: 14
 pending : [36, 26, 41, 6, 21, 14, 17, 20]
 solution : [7, 8, 10, 28, 9, 19]


Before reduction : 
 pending  : [36, 26, 41, 6, 21, 14, 17, 20]
 solution : [7, 8, 10, 28, 9, 19]

Essensial at level 14 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, 65536), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 1048576), (15, -1), (16, -1), (17, 32768), (18, -1), (19, 2097152), (20, 32768), (21, 67584), (22, -1), (23, -1), (24, -1), (25, -1), (26, 524288), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, 32768), (37, -1), (38, -1), (39, -1), (40, -1), (41, 524288), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, 0), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 8192), (15, -1), (16, -1), (17, 8192), (18, -1), (19, -1), (20, 0), (21, 0), (22, -1), (23, -1), (24, -1), (25, -1), (26, 2048), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, 1024), (37, -1), (38, -1), (39, -1), (40, -1), (41, 2048), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 14 : {20, 21, 6}

After reduction : 
 pending  : [36, 26, 41, 14, 17]
 solution : [7, 8, 10, 28, 9, 19]


Before reduction : 
 pending  : [36, 26, 41, 14, 17]
 solution : [7, 8, 10, 28, 9, 19]

Essensial at level 14 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, 0), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 8192), (15, -1), (16, -1), (17, 8192), (18, -1), (19, -1), (20, 0), (21, 0), (22, -1), (23, -1), (24, -1), (25, -1), (26, 2048), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, 1024), (37, -1), (38, -1), (39, -1), (40, -1), (41, 2048), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 8192), (15, -1), (16, -1), (17, 8192), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, 2048), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, 1024), (37, -1), (38, -1), (39, -1), (40, -1), (41, 2048), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 14 : set()

After reduction : 
 pending  : [36, 26, 41, 14, 17]
 solution : [7, 8, 10, 28, 9, 19]


Solution : [7, 8, 10, 28, 9, 19] has cost 31.


Before backtrack at level 14
 pending : [36, 26, 41, 14, 17]
 solution : [7, 8, 10, 28, 9, 19]

After backtrack at level 14
 pending : [36, 26, 41, 14, 17, 6, 21, 20]
 solution : [7, 8, 10, 28, 9, 19]


Invert decision for 19 at level 13


New level: 14
 pending : [36, 26, 41, 14, 17, 6, 21, 20]
 solution : [7, 8, 10, 28, 9]


Before reduction : 
 pending  : [36, 26, 41, 14, 17, 6, 21, 20]
 solution : [7, 8, 10, 28, 9]

Essensial at level 14 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 8192), (15, -1), (16, -1), (17, 8192), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, 2048), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, 1024), (37, -1), (38, -1), (39, -1), (40, -1), (41, 2048), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, 65536), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 1048576), (15, -1), (16, -1), (17, 32768), (18, -1), (19, -1), (20, 32768), (21, 67584), (22, -1), (23, -1), (24, -1), (25, -1), (26, 524288), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, 32768), (37, -1), (38, -1), (39, -1), (40, -1), (41, 524288), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 14 : set()

After reduction : 
 pending  : [36, 26, 41, 14, 17, 6, 21, 20]
 solution : [7, 8, 10, 28, 9]


Solution : [7, 8, 10, 28, 9] has cost 22.


Decide in level 14 among pending : [36, 26, 41, 14, 17, 6, 21, 20]

Coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, 65536), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 1048576), (15, -1), (16, -1), (17, 32768), (18, -1), (19, -1), (20, 32768), (21, 67584), (22, -1), (23, -1), (24, -1), (25, -1), (26, 524288), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, 32768), (37, -1), (38, -1), (39, -1), (40, -1), (41, 524288), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Decide 14 with phase True at level 14

After decision at level 14
 pending : [36, 26, 41, 17, 6, 21, 20]
 solution : [7, 8, 10, 28, 9, 14]


New level: 15
 pending : [36, 26, 41, 17, 6, 21, 20]
 solution : [7, 8, 10, 28, 9, 14]


Before reduction : 
 pending  : [36, 26, 41, 17, 6, 21, 20]
 solution : [7, 8, 10, 28, 9, 14]

Essensial at level 15 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, 65536), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 1048576), (15, -1), (16, -1), (17, 32768), (18, -1), (19, -1), (20, 32768), (21, 67584), (22, -1), (23, -1), (24, -1), (25, -1), (26, 524288), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, 32768), (37, -1), (38, -1), (39, -1), (40, -1), (41, 524288), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, 32768), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, 0), (18, -1), (19, -1), (20, 0), (21, 33280), (22, -1), (23, -1), (24, -1), (25, -1), (26, 131072), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, 512), (37, -1), (38, -1), (39, -1), (40, -1), (41, 131072), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 15 : {17, 20}

After reduction : 
 pending  : [36, 26, 41, 6, 21]
 solution : [7, 8, 10, 28, 9, 14]


Before reduction : 
 pending  : [36, 26, 41, 6, 21]
 solution : [7, 8, 10, 28, 9, 14]

Essensial at level 15 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, 32768), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, 0), (18, -1), (19, -1), (20, 0), (21, 33280), (22, -1), (23, -1), (24, -1), (25, -1), (26, 131072), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, 512), (37, -1), (38, -1), (39, -1), (40, -1), (41, 131072), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, 32768), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, 33280), (22, -1), (23, -1), (24, -1), (25, -1), (26, 131072), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, 512), (37, -1), (38, -1), (39, -1), (40, -1), (41, 131072), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 15 : set()

After reduction : 
 pending  : [36, 26, 41, 6, 21]
 solution : [7, 8, 10, 28, 9, 14]


Solution : [7, 8, 10, 28, 9, 14] has cost 29.


Before backtrack at level 15
 pending : [36, 26, 41, 6, 21]
 solution : [7, 8, 10, 28, 9, 14]

After backtrack at level 15
 pending : [36, 26, 41, 6, 21, 17, 20]
 solution : [7, 8, 10, 28, 9, 14]


Invert decision for 14 at level 14


New level: 15
 pending : [36, 26, 41, 6, 21, 17, 20]
 solution : [7, 8, 10, 28, 9]


Before reduction : 
 pending  : [36, 26, 41, 6, 21, 17, 20]
 solution : [7, 8, 10, 28, 9]

Essensial at level 15 : {17}

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, 32768), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, 33280), (22, -1), (23, -1), (24, -1), (25, -1), (26, 131072), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, 512), (37, -1), (38, -1), (39, -1), (40, -1), (41, 131072), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, 65536), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, 16384), (21, 67584), (22, -1), (23, -1), (24, -1), (25, -1), (26, 524288), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, 32768), (37, -1), (38, -1), (39, -1), (40, -1), (41, 524288), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 15 : set()

After reduction : 
 pending  : [36, 26, 41, 6, 21, 20]
 solution : [7, 8, 10, 28, 9, 17]


Before reduction : 
 pending  : [36, 26, 41, 6, 21, 20]
 solution : [7, 8, 10, 28, 9, 17]

Essensial at level 15 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, 65536), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, 16384), (21, 67584), (22, -1), (23, -1), (24, -1), (25, -1), (26, 524288), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, 32768), (37, -1), (38, -1), (39, -1), (40, -1), (41, 524288), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, 65536), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, 16384), (21, 67584), (22, -1), (23, -1), (24, -1), (25, -1), (26, 524288), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, 32768), (37, -1), (38, -1), (39, -1), (40, -1), (41, 524288), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 15 : set()

After reduction : 
 pending  : [36, 26, 41, 6, 21, 20]
 solution : [7, 8, 10, 28, 9, 17]


Solution : [7, 8, 10, 28, 9, 17] has cost 29.


Before backtrack at level 15
 pending : [36, 26, 41, 6, 21, 20]
 solution : [7, 8, 10, 28, 9, 17]

After backtrack at level 15
 pending : [36, 26, 41, 6, 21, 20, 17]
 solution : [7, 8, 10, 28, 9]


Before backtrack at level 14
 pending : [36, 26, 41, 6, 21, 20, 17]
 solution : [7, 8, 10, 28, 9]

After backtrack at level 14
 pending : [36, 26, 41, 6, 21, 20, 17, 14]
 solution : [7, 8, 10, 28, 9]


Before backtrack at level 13
 pending : [36, 26, 41, 6, 21, 20, 17, 14]
 solution : [7, 8, 10, 28, 9]

After backtrack at level 13
 pending : [36, 26, 41, 6, 21, 20, 17, 14, 19]
 solution : [7, 8, 10, 28, 9]


Before backtrack at level 12
 pending : [36, 26, 41, 6, 21, 20, 17, 14, 19]
 solution : [7, 8, 10, 28, 9]

After backtrack at level 12
 pending : [36, 26, 41, 6, 21, 20, 17, 14, 19, 16]
 solution : [7, 8, 10, 28, 9]


Before backtrack at level 11
 pending : [36, 26, 41, 6, 21, 20, 17, 14, 19, 16]
 solution : [7, 8, 10, 28, 9]

After backtrack at level 11
 pending : [36, 26, 41, 6, 21, 20, 17, 14, 19, 16, 9, 5, 29, 30, 38, 39, 43, 44, 45, 46, 51, 31, 33, 18]
 solution : [7, 8, 10, 28]


Before backtrack at level 10
 pending : [36, 26, 41, 6, 21, 20, 17, 14, 19, 16, 9, 5, 29, 30, 38, 39, 43, 44, 45, 46, 51, 31, 33, 18]
 solution : [7, 8, 10, 28]

After backtrack at level 10
 pending : [36, 26, 41, 6, 21, 20, 17, 14, 19, 16, 9, 5, 29, 30, 38, 39, 43, 44, 45, 46, 51, 31, 33, 18, 23]
 solution : [7, 8, 10, 28]


Before backtrack at level 9
 pending : [36, 26, 41, 6, 21, 20, 17, 14, 19, 16, 9, 5, 29, 30, 38, 39, 43, 44, 45, 46, 51, 31, 33, 18, 23]
 solution : [7, 8, 10, 28]

After backtrack at level 9
 pending : [36, 26, 41, 6, 21, 20, 17, 14, 19, 16, 9, 5, 29, 30, 38, 39, 43, 44, 45, 46, 51, 31, 33, 18, 23, 15]
 solution : [7, 8, 10, 28]


Before backtrack at level 8
 pending : [36, 26, 41, 6, 21, 20, 17, 14, 19, 16, 9, 5, 29, 30, 38, 39, 43, 44, 45, 46, 51, 31, 33, 18, 23, 15]
 solution : [7, 8, 10, 28]

After backtrack at level 8
 pending : [36, 26, 41, 6, 21, 20, 17, 14, 19, 16, 9, 5, 29, 30, 38, 39, 43, 44, 45, 46, 51, 31, 33, 18, 23, 15, 24]
 solution : [7, 8, 10, 28]


Before backtrack at level 7
 pending : [36, 26, 41, 6, 21, 20, 17, 14, 19, 16, 9, 5, 29, 30, 38, 39, 43, 44, 45, 46, 51, 31, 33, 18, 23, 15, 24]
 solution : [7, 8, 10, 28]

After backtrack at level 7
 pending : [36, 26, 41, 6, 21, 20, 17, 14, 19, 16, 9, 5, 29, 30, 38, 39, 43, 44, 45, 46, 51, 31, 33, 18, 23, 15, 24, 37]
 solution : [7, 8, 10, 28]


Before backtrack at level 6
 pending : [36, 26, 41, 6, 21, 20, 17, 14, 19, 16, 9, 5, 29, 30, 38, 39, 43, 44, 45, 46, 51, 31, 33, 18, 23, 15, 24, 37]
 solution : [7, 8, 10, 28]

After backtrack at level 6
 pending : [36, 26, 41, 6, 21, 20, 17, 14, 19, 16, 9, 5, 29, 30, 38, 39, 43, 44, 45, 46, 51, 31, 33, 18, 23, 15, 24, 37, 13]
 solution : [7, 8, 10, 28]


Invert decision for 28 at level 5


New level: 6
 pending : [36, 26, 41, 6, 21, 20, 17, 14, 19, 16, 9, 5, 29, 30, 38, 39, 43, 44, 45, 46, 51, 31, 33, 18, 23, 15, 24, 37, 13]
 solution : [7, 8, 10]


Before reduction : 
 pending  : [36, 26, 41, 6, 21, 20, 17, 14, 19, 16, 9, 5, 29, 30, 38, 39, 43, 44, 45, 46, 51, 31, 33, 18, 23, 15, 24, 37, 13]
 solution : [7, 8, 10]

Essensial at level 6 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, 65536), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, 16384), (21, 67584), (22, -1), (23, -1), (24, -1), (25, -1), (26, 524288), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, 32768), (37, -1), (38, -1), (39, -1), (40, -1), (41, 524288), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 524288), (6, 131072), (7, -1), (8, -1), (9, 67108864), (10, -1), (11, -1), (12, -1), (13, 268435456), (14, 1048576), (15, 134217728), (16, 2097152), (17, 32768), (18, 8388608), (19, 4194304), (20, 65536), (21, 139264), (22, -1), (23, 67108864), (24, 268435456), (25, -1), (26, 524288), (27, -1), (28, -1), (29, 524288), (30, 8192), (31, 8192), (32, -1), (33, 1048576), (34, -1), (35, -1), (36, 33554432), (37, 134217728), (38, 67108864), (39, 8192), (40, -1), (41, 524288), (42, -1), (43, 262144), (44, 262144), (45, 33554432), (46, 8388608), (47, -1), (48, -1), (49, -1), (50, -1), (51, 33554432), (52, -1)]

Covered at level 6 : set()

After reduction : 
 pending  : [36, 26, 41, 6, 21, 20, 17, 14, 19, 16, 9, 5, 29, 30, 38, 39, 43, 44, 45, 46, 51, 31, 33, 18, 23, 15, 24, 37, 13]
 solution : [7, 8, 10]


Solution : [7, 8, 10] has cost 14.


Decide in level 6 among pending : [36, 26, 41, 6, 21, 20, 17, 14, 19, 16, 9, 5, 29, 30, 38, 39, 43, 44, 45, 46, 51, 31, 33, 18, 23, 15, 24, 37, 13]

Coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 524288), (6, 131072), (7, -1), (8, -1), (9, 67108864), (10, -1), (11, -1), (12, -1), (13, 268435456), (14, 1048576), (15, 134217728), (16, 2097152), (17, 32768), (18, 8388608), (19, 4194304), (20, 65536), (21, 139264), (22, -1), (23, 67108864), (24, 268435456), (25, -1), (26, 524288), (27, -1), (28, -1), (29, 524288), (30, 8192), (31, 8192), (32, -1), (33, 1048576), (34, -1), (35, -1), (36, 33554432), (37, 134217728), (38, 67108864), (39, 8192), (40, -1), (41, 524288), (42, -1), (43, 262144), (44, 262144), (45, 33554432), (46, 8388608), (47, -1), (48, -1), (49, -1), (50, -1), (51, 33554432), (52, -1)]

Decide 24 with phase True at level 6

After decision at level 6
 pending : [36, 26, 41, 6, 21, 20, 17, 14, 19, 16, 9, 5, 29, 30, 38, 39, 43, 44, 45, 46, 51, 31, 33, 18, 23, 15, 37, 13]
 solution : [7, 8, 10, 24]


New level: 7
 pending : [36, 26, 41, 6, 21, 20, 17, 14, 19, 16, 9, 5, 29, 30, 38, 39, 43, 44, 45, 46, 51, 31, 33, 18, 23, 15, 37, 13]
 solution : [7, 8, 10, 24]


Before reduction : 
 pending  : [36, 26, 41, 6, 21, 20, 17, 14, 19, 16, 9, 5, 29, 30, 38, 39, 43, 44, 45, 46, 51, 31, 33, 18, 23, 15, 37, 13]
 solution : [7, 8, 10, 24]

Essensial at level 7 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 524288), (6, 131072), (7, -1), (8, -1), (9, 67108864), (10, -1), (11, -1), (12, -1), (13, 268435456), (14, 1048576), (15, 134217728), (16, 2097152), (17, 32768), (18, 8388608), (19, 4194304), (20, 65536), (21, 139264), (22, -1), (23, 67108864), (24, 268435456), (25, -1), (26, 524288), (27, -1), (28, -1), (29, 524288), (30, 8192), (31, 8192), (32, -1), (33, 1048576), (34, -1), (35, -1), (36, 33554432), (37, 134217728), (38, 67108864), (39, 8192), (40, -1), (41, 524288), (42, -1), (43, 262144), (44, 262144), (45, 33554432), (46, 8388608), (47, -1), (48, -1), (49, -1), (50, -1), (51, 33554432), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 131072), (6, 131072), (7, -1), (8, -1), (9, 16777216), (10, -1), (11, -1), (12, -1), (13, 268435456), (14, 1048576), (15, 134217728), (16, 2097152), (17, 32768), (18, 8388608), (19, 4194304), (20, 65536), (21, 139264), (22, -1), (23, 16777216), (24, -1), (25, -1), (26, 524288), (27, -1), (28, -1), (29, 131072), (30, 2048), (31, 0), (32, -1), (33, 0), (34, -1), (35, -1), (36, 33554432), (37, 512), (38, 33554432), (39, 2048), (40, -1), (41, 524288), (42, -1), (43, 65536), (44, 65536), (45, 16777216), (46, 2097152), (47, -1), (48, -1), (49, -1), (50, -1), (51, 16777216), (52, -1)]

Covered at level 7 : {33, 31}

After reduction : 
 pending  : [36, 26, 41, 6, 21, 20, 17, 14, 19, 16, 9, 5, 29, 30, 38, 39, 43, 44, 45, 46, 51, 18, 23, 15, 37, 13]
 solution : [7, 8, 10, 24]


Before reduction : 
 pending  : [36, 26, 41, 6, 21, 20, 17, 14, 19, 16, 9, 5, 29, 30, 38, 39, 43, 44, 45, 46, 51, 18, 23, 15, 37, 13]
 solution : [7, 8, 10, 24]

Essensial at level 7 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 131072), (6, 131072), (7, -1), (8, -1), (9, 16777216), (10, -1), (11, -1), (12, -1), (13, 268435456), (14, 1048576), (15, 134217728), (16, 2097152), (17, 32768), (18, 8388608), (19, 4194304), (20, 65536), (21, 139264), (22, -1), (23, 16777216), (24, -1), (25, -1), (26, 524288), (27, -1), (28, -1), (29, 131072), (30, 2048), (31, 0), (32, -1), (33, 0), (34, -1), (35, -1), (36, 33554432), (37, 512), (38, 33554432), (39, 2048), (40, -1), (41, 524288), (42, -1), (43, 65536), (44, 65536), (45, 16777216), (46, 2097152), (47, -1), (48, -1), (49, -1), (50, -1), (51, 16777216), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 131072), (6, 131072), (7, -1), (8, -1), (9, 16777216), (10, -1), (11, -1), (12, -1), (13, 268435456), (14, 1048576), (15, 134217728), (16, 2097152), (17, 32768), (18, 8388608), (19, 4194304), (20, 65536), (21, 139264), (22, -1), (23, 16777216), (24, -1), (25, -1), (26, 524288), (27, -1), (28, -1), (29, 131072), (30, 2048), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, 33554432), (37, 512), (38, 33554432), (39, 2048), (40, -1), (41, 524288), (42, -1), (43, 65536), (44, 65536), (45, 16777216), (46, 2097152), (47, -1), (48, -1), (49, -1), (50, -1), (51, 16777216), (52, -1)]

Covered at level 7 : set()

After reduction : 
 pending  : [36, 26, 41, 6, 21, 20, 17, 14, 19, 16, 9, 5, 29, 30, 38, 39, 43, 44, 45, 46, 51, 18, 23, 15, 37, 13]
 solution : [7, 8, 10, 24]


Solution : [7, 8, 10, 24] has cost 21.


Decide in level 7 among pending : [36, 26, 41, 6, 21, 20, 17, 14, 19, 16, 9, 5, 29, 30, 38, 39, 43, 44, 45, 46, 51, 18, 23, 15, 37, 13]

Coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 131072), (6, 131072), (7, -1), (8, -1), (9, 16777216), (10, -1), (11, -1), (12, -1), (13, 268435456), (14, 1048576), (15, 134217728), (16, 2097152), (17, 32768), (18, 8388608), (19, 4194304), (20, 65536), (21, 139264), (22, -1), (23, 16777216), (24, -1), (25, -1), (26, 524288), (27, -1), (28, -1), (29, 131072), (30, 2048), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, 33554432), (37, 512), (38, 33554432), (39, 2048), (40, -1), (41, 524288), (42, -1), (43, 65536), (44, 65536), (45, 16777216), (46, 2097152), (47, -1), (48, -1), (49, -1), (50, -1), (51, 16777216), (52, -1)]

Decide 13 with phase True at level 7

After decision at level 7
 pending : [36, 26, 41, 6, 21, 20, 17, 14, 19, 16, 9, 5, 29, 30, 38, 39, 43, 44, 45, 46, 51, 18, 23, 15, 37]
 solution : [7, 8, 10, 24, 13]


New level: 8
 pending : [36, 26, 41, 6, 21, 20, 17, 14, 19, 16, 9, 5, 29, 30, 38, 39, 43, 44, 45, 46, 51, 18, 23, 15, 37]
 solution : [7, 8, 10, 24, 13]


Before reduction : 
 pending  : [36, 26, 41, 6, 21, 20, 17, 14, 19, 16, 9, 5, 29, 30, 38, 39, 43, 44, 45, 46, 51, 18, 23, 15, 37]
 solution : [7, 8, 10, 24, 13]

Essensial at level 8 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 131072), (6, 131072), (7, -1), (8, -1), (9, 16777216), (10, -1), (11, -1), (12, -1), (13, 268435456), (14, 1048576), (15, 134217728), (16, 2097152), (17, 32768), (18, 8388608), (19, 4194304), (20, 65536), (21, 139264), (22, -1), (23, 16777216), (24, -1), (25, -1), (26, 524288), (27, -1), (28, -1), (29, 131072), (30, 2048), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, 33554432), (37, 512), (38, 33554432), (39, 2048), (40, -1), (41, 524288), (42, -1), (43, 65536), (44, 65536), (45, 16777216), (46, 2097152), (47, -1), (48, -1), (49, -1), (50, -1), (51, 16777216), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 32768), (6, 0), (7, -1), (8, -1), (9, 16777216), (10, -1), (11, -1), (12, -1), (13, -1), (14, 0), (15, 0), (16, 0), (17, 0), (18, 0), (19, 0), (20, 0), (21, 0), (22, -1), (23, 16777216), (24, -1), (25, -1), (26, 0), (27, -1), (28, -1), (29, 65536), (30, 1024), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, 512), (37, 0), (38, 16777216), (39, 512), (40, -1), (41, 0), (42, -1), (43, 16384), (44, 16384), (45, 8388608), (46, 524288), (47, -1), (48, -1), (49, -1), (50, -1), (51, 16777216), (52, -1)]

Covered at level 8 : {37, 6, 41, 14, 15, 16, 17, 18, 19, 20, 21, 26}

After reduction : 
 pending  : [36, 9, 5, 29, 30, 38, 39, 43, 44, 45, 46, 51, 23]
 solution : [7, 8, 10, 24, 13]


Before reduction : 
 pending  : [36, 9, 5, 29, 30, 38, 39, 43, 44, 45, 46, 51, 23]
 solution : [7, 8, 10, 24, 13]

Essensial at level 8 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 32768), (6, 0), (7, -1), (8, -1), (9, 16777216), (10, -1), (11, -1), (12, -1), (13, -1), (14, 0), (15, 0), (16, 0), (17, 0), (18, 0), (19, 0), (20, 0), (21, 0), (22, -1), (23, 16777216), (24, -1), (25, -1), (26, 0), (27, -1), (28, -1), (29, 65536), (30, 1024), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, 512), (37, 0), (38, 16777216), (39, 512), (40, -1), (41, 0), (42, -1), (43, 16384), (44, 16384), (45, 8388608), (46, 524288), (47, -1), (48, -1), (49, -1), (50, -1), (51, 16777216), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 32768), (6, -1), (7, -1), (8, -1), (9, 16777216), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, 16777216), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, 65536), (30, 1024), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, 512), (37, -1), (38, 16777216), (39, 512), (40, -1), (41, -1), (42, -1), (43, 16384), (44, 16384), (45, 8388608), (46, 524288), (47, -1), (48, -1), (49, -1), (50, -1), (51, 16777216), (52, -1)]

Covered at level 8 : set()

After reduction : 
 pending  : [36, 9, 5, 29, 30, 38, 39, 43, 44, 45, 46, 51, 23]
 solution : [7, 8, 10, 24, 13]


Solution : [7, 8, 10, 24, 13] has cost 28.


Before backtrack at level 8
 pending : [36, 9, 5, 29, 30, 38, 39, 43, 44, 45, 46, 51, 23]
 solution : [7, 8, 10, 24, 13]

After backtrack at level 8
 pending : [36, 9, 5, 29, 30, 38, 39, 43, 44, 45, 46, 51, 23, 26, 41, 6, 21, 20, 17, 14, 19, 16, 18, 15, 37]
 solution : [7, 8, 10, 24, 13]


Invert decision for 13 at level 7


New level: 8
 pending : [36, 9, 5, 29, 30, 38, 39, 43, 44, 45, 46, 51, 23, 26, 41, 6, 21, 20, 17, 14, 19, 16, 18, 15, 37]
 solution : [7, 8, 10, 24]


Before reduction : 
 pending  : [36, 9, 5, 29, 30, 38, 39, 43, 44, 45, 46, 51, 23, 26, 41, 6, 21, 20, 17, 14, 19, 16, 18, 15, 37]
 solution : [7, 8, 10, 24]

Essensial at level 8 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 32768), (6, -1), (7, -1), (8, -1), (9, 16777216), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, 16777216), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, 65536), (30, 1024), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, 512), (37, -1), (38, 16777216), (39, 512), (40, -1), (41, -1), (42, -1), (43, 16384), (44, 16384), (45, 8388608), (46, 524288), (47, -1), (48, -1), (49, -1), (50, -1), (51, 16777216), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 131072), (6, 131072), (7, -1), (8, -1), (9, 16777216), (10, -1), (11, -1), (12, -1), (13, -1), (14, 1048576), (15, 134217728), (16, 2097152), (17, 32768), (18, 8388608), (19, 4194304), (20, 65536), (21, 139264), (22, -1), (23, 16777216), (24, -1), (25, -1), (26, 524288), (27, -1), (28, -1), (29, 131072), (30, 2048), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, 33554432), (37, 512), (38, 33554432), (39, 2048), (40, -1), (41, 524288), (42, -1), (43, 65536), (44, 65536), (45, 16777216), (46, 2097152), (47, -1), (48, -1), (49, -1), (50, -1), (51, 16777216), (52, -1)]

Covered at level 8 : set()

After reduction : 
 pending  : [36, 9, 5, 29, 30, 38, 39, 43, 44, 45, 46, 51, 23, 26, 41, 6, 21, 20, 17, 14, 19, 16, 18, 15, 37]
 solution : [7, 8, 10, 24]


Solution : [7, 8, 10, 24] has cost 21.


Decide in level 8 among pending : [36, 9, 5, 29, 30, 38, 39, 43, 44, 45, 46, 51, 23, 26, 41, 6, 21, 20, 17, 14, 19, 16, 18, 15, 37]

Coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 131072), (6, 131072), (7, -1), (8, -1), (9, 16777216), (10, -1), (11, -1), (12, -1), (13, -1), (14, 1048576), (15, 134217728), (16, 2097152), (17, 32768), (18, 8388608), (19, 4194304), (20, 65536), (21, 139264), (22, -1), (23, 16777216), (24, -1), (25, -1), (26, 524288), (27, -1), (28, -1), (29, 131072), (30, 2048), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, 33554432), (37, 512), (38, 33554432), (39, 2048), (40, -1), (41, 524288), (42, -1), (43, 65536), (44, 65536), (45, 16777216), (46, 2097152), (47, -1), (48, -1), (49, -1), (50, -1), (51, 16777216), (52, -1)]

Decide 15 with phase True at level 8

After decision at level 8
 pending : [36, 9, 5, 29, 30, 38, 39, 43, 44, 45, 46, 51, 23, 26, 41, 6, 21, 20, 17, 14, 19, 16, 18, 37]
 solution : [7, 8, 10, 24, 15]


New level: 9
 pending : [36, 9, 5, 29, 30, 38, 39, 43, 44, 45, 46, 51, 23, 26, 41, 6, 21, 20, 17, 14, 19, 16, 18, 37]
 solution : [7, 8, 10, 24, 15]


Before reduction : 
 pending  : [36, 9, 5, 29, 30, 38, 39, 43, 44, 45, 46, 51, 23, 26, 41, 6, 21, 20, 17, 14, 19, 16, 18, 37]
 solution : [7, 8, 10, 24, 15]

Essensial at level 9 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 131072), (6, 131072), (7, -1), (8, -1), (9, 16777216), (10, -1), (11, -1), (12, -1), (13, -1), (14, 1048576), (15, 134217728), (16, 2097152), (17, 32768), (18, 8388608), (19, 4194304), (20, 65536), (21, 139264), (22, -1), (23, 16777216), (24, -1), (25, -1), (26, 524288), (27, -1), (28, -1), (29, 131072), (30, 2048), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, 33554432), (37, 512), (38, 33554432), (39, 2048), (40, -1), (41, 524288), (42, -1), (43, 65536), (44, 65536), (45, 16777216), (46, 2097152), (47, -1), (48, -1), (49, -1), (50, -1), (51, 16777216), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 32768), (6, 0), (7, -1), (8, -1), (9, 16777216), (10, -1), (11, -1), (12, -1), (13, -1), (14, 0), (15, -1), (16, 0), (17, 0), (18, 0), (19, 0), (20, 0), (21, 0), (22, -1), (23, 16777216), (24, -1), (25, -1), (26, 0), (27, -1), (28, -1), (29, 65536), (30, 1024), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, 512), (37, 0), (38, 16777216), (39, 512), (40, -1), (41, 0), (42, -1), (43, 32768), (44, 32768), (45, 8388608), (46, 524288), (47, -1), (48, -1), (49, -1), (50, -1), (51, 16777216), (52, -1)]

Covered at level 9 : {37, 6, 41, 14, 16, 17, 18, 19, 20, 21, 26}

After reduction : 
 pending  : [36, 9, 5, 29, 30, 38, 39, 43, 44, 45, 46, 51, 23]
 solution : [7, 8, 10, 24, 15]


Before reduction : 
 pending  : [36, 9, 5, 29, 30, 38, 39, 43, 44, 45, 46, 51, 23]
 solution : [7, 8, 10, 24, 15]

Essensial at level 9 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 32768), (6, 0), (7, -1), (8, -1), (9, 16777216), (10, -1), (11, -1), (12, -1), (13, -1), (14, 0), (15, -1), (16, 0), (17, 0), (18, 0), (19, 0), (20, 0), (21, 0), (22, -1), (23, 16777216), (24, -1), (25, -1), (26, 0), (27, -1), (28, -1), (29, 65536), (30, 1024), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, 512), (37, 0), (38, 16777216), (39, 512), (40, -1), (41, 0), (42, -1), (43, 32768), (44, 32768), (45, 8388608), (46, 524288), (47, -1), (48, -1), (49, -1), (50, -1), (51, 16777216), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 32768), (6, -1), (7, -1), (8, -1), (9, 16777216), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, 16777216), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, 65536), (30, 1024), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, 512), (37, -1), (38, 16777216), (39, 512), (40, -1), (41, -1), (42, -1), (43, 32768), (44, 32768), (45, 8388608), (46, 524288), (47, -1), (48, -1), (49, -1), (50, -1), (51, 16777216), (52, -1)]

Covered at level 9 : set()

After reduction : 
 pending  : [36, 9, 5, 29, 30, 38, 39, 43, 44, 45, 46, 51, 23]
 solution : [7, 8, 10, 24, 15]


Solution : [7, 8, 10, 24, 15] has cost 28.


Before backtrack at level 9
 pending : [36, 9, 5, 29, 30, 38, 39, 43, 44, 45, 46, 51, 23]
 solution : [7, 8, 10, 24, 15]

After backtrack at level 9
 pending : [36, 9, 5, 29, 30, 38, 39, 43, 44, 45, 46, 51, 23, 26, 41, 6, 21, 20, 17, 14, 19, 16, 18, 37]
 solution : [7, 8, 10, 24, 15]


Invert decision for 15 at level 8


New level: 9
 pending : [36, 9, 5, 29, 30, 38, 39, 43, 44, 45, 46, 51, 23, 26, 41, 6, 21, 20, 17, 14, 19, 16, 18, 37]
 solution : [7, 8, 10, 24]


Before reduction : 
 pending  : [36, 9, 5, 29, 30, 38, 39, 43, 44, 45, 46, 51, 23, 26, 41, 6, 21, 20, 17, 14, 19, 16, 18, 37]
 solution : [7, 8, 10, 24]

Essensial at level 9 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 32768), (6, -1), (7, -1), (8, -1), (9, 16777216), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, 16777216), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, 65536), (30, 1024), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, 512), (37, -1), (38, 16777216), (39, 512), (40, -1), (41, -1), (42, -1), (43, 32768), (44, 32768), (45, 8388608), (46, 524288), (47, -1), (48, -1), (49, -1), (50, -1), (51, 16777216), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 131072), (6, 131072), (7, -1), (8, -1), (9, 16777216), (10, -1), (11, -1), (12, -1), (13, -1), (14, 1048576), (15, -1), (16, 2097152), (17, 32768), (18, 8388608), (19, 4194304), (20, 65536), (21, 139264), (22, -1), (23, 16777216), (24, -1), (25, -1), (26, 524288), (27, -1), (28, -1), (29, 131072), (30, 2048), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, 33554432), (37, 512), (38, 33554432), (39, 2048), (40, -1), (41, 524288), (42, -1), (43, 65536), (44, 65536), (45, 16777216), (46, 2097152), (47, -1), (48, -1), (49, -1), (50, -1), (51, 16777216), (52, -1)]

Covered at level 9 : set()

After reduction : 
 pending  : [36, 9, 5, 29, 30, 38, 39, 43, 44, 45, 46, 51, 23, 26, 41, 6, 21, 20, 17, 14, 19, 16, 18, 37]
 solution : [7, 8, 10, 24]


Solution : [7, 8, 10, 24] has cost 21.


Decide in level 9 among pending : [36, 9, 5, 29, 30, 38, 39, 43, 44, 45, 46, 51, 23, 26, 41, 6, 21, 20, 17, 14, 19, 16, 18, 37]

Coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 131072), (6, 131072), (7, -1), (8, -1), (9, 16777216), (10, -1), (11, -1), (12, -1), (13, -1), (14, 1048576), (15, -1), (16, 2097152), (17, 32768), (18, 8388608), (19, 4194304), (20, 65536), (21, 139264), (22, -1), (23, 16777216), (24, -1), (25, -1), (26, 524288), (27, -1), (28, -1), (29, 131072), (30, 2048), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, 33554432), (37, 512), (38, 33554432), (39, 2048), (40, -1), (41, 524288), (42, -1), (43, 65536), (44, 65536), (45, 16777216), (46, 2097152), (47, -1), (48, -1), (49, -1), (50, -1), (51, 16777216), (52, -1)]

Decide 36 with phase True at level 9

After decision at level 9
 pending : [9, 5, 29, 30, 38, 39, 43, 44, 45, 46, 51, 23, 26, 41, 6, 21, 20, 17, 14, 19, 16, 18, 37]
 solution : [7, 8, 10, 24, 36]


New level: 10
 pending : [9, 5, 29, 30, 38, 39, 43, 44, 45, 46, 51, 23, 26, 41, 6, 21, 20, 17, 14, 19, 16, 18, 37]
 solution : [7, 8, 10, 24, 36]


Before reduction : 
 pending  : [9, 5, 29, 30, 38, 39, 43, 44, 45, 46, 51, 23, 26, 41, 6, 21, 20, 17, 14, 19, 16, 18, 37]
 solution : [7, 8, 10, 24, 36]

Essensial at level 10 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 131072), (6, 131072), (7, -1), (8, -1), (9, 16777216), (10, -1), (11, -1), (12, -1), (13, -1), (14, 1048576), (15, -1), (16, 2097152), (17, 32768), (18, 8388608), (19, 4194304), (20, 65536), (21, 139264), (22, -1), (23, 16777216), (24, -1), (25, -1), (26, 524288), (27, -1), (28, -1), (29, 131072), (30, 2048), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, 33554432), (37, 512), (38, 33554432), (39, 2048), (40, -1), (41, 524288), (42, -1), (43, 65536), (44, 65536), (45, 16777216), (46, 2097152), (47, -1), (48, -1), (49, -1), (50, -1), (51, 16777216), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 32768), (6, 65536), (7, -1), (8, -1), (9, 4194304), (10, -1), (11, -1), (12, -1), (13, -1), (14, 1048576), (15, -1), (16, 2097152), (17, 32768), (18, 4194304), (19, 2097152), (20, 32768), (21, 67584), (22, -1), (23, 4194304), (24, -1), (25, -1), (26, 131072), (27, -1), (28, -1), (29, 32768), (30, 512), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, 0), (38, 33554432), (39, 512), (40, -1), (41, 131072), (42, -1), (43, 16384), (44, 16384), (45, 8388608), (46, 524288), (47, -1), (48, -1), (49, -1), (50, -1), (51, 16777216), (52, -1)]

Covered at level 10 : {37}

After reduction : 
 pending  : [9, 5, 29, 30, 38, 39, 43, 44, 45, 46, 51, 23, 26, 41, 6, 21, 20, 17, 14, 19, 16, 18]
 solution : [7, 8, 10, 24, 36]


Before reduction : 
 pending  : [9, 5, 29, 30, 38, 39, 43, 44, 45, 46, 51, 23, 26, 41, 6, 21, 20, 17, 14, 19, 16, 18]
 solution : [7, 8, 10, 24, 36]

Essensial at level 10 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 32768), (6, 65536), (7, -1), (8, -1), (9, 4194304), (10, -1), (11, -1), (12, -1), (13, -1), (14, 1048576), (15, -1), (16, 2097152), (17, 32768), (18, 4194304), (19, 2097152), (20, 32768), (21, 67584), (22, -1), (23, 4194304), (24, -1), (25, -1), (26, 131072), (27, -1), (28, -1), (29, 32768), (30, 512), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, 0), (38, 33554432), (39, 512), (40, -1), (41, 131072), (42, -1), (43, 16384), (44, 16384), (45, 8388608), (46, 524288), (47, -1), (48, -1), (49, -1), (50, -1), (51, 16777216), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 32768), (6, 65536), (7, -1), (8, -1), (9, 4194304), (10, -1), (11, -1), (12, -1), (13, -1), (14, 1048576), (15, -1), (16, 2097152), (17, 32768), (18, 4194304), (19, 2097152), (20, 32768), (21, 67584), (22, -1), (23, 4194304), (24, -1), (25, -1), (26, 131072), (27, -1), (28, -1), (29, 32768), (30, 512), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, 33554432), (39, 512), (40, -1), (41, 131072), (42, -1), (43, 16384), (44, 16384), (45, 8388608), (46, 524288), (47, -1), (48, -1), (49, -1), (50, -1), (51, 16777216), (52, -1)]

Covered at level 10 : set()

After reduction : 
 pending  : [9, 5, 29, 30, 38, 39, 43, 44, 45, 46, 51, 23, 26, 41, 6, 21, 20, 17, 14, 19, 16, 18]
 solution : [7, 8, 10, 24, 36]


Solution : [7, 8, 10, 24, 36] has cost 39.


Before backtrack at level 10
 pending : [9, 5, 29, 30, 38, 39, 43, 44, 45, 46, 51, 23, 26, 41, 6, 21, 20, 17, 14, 19, 16, 18]
 solution : [7, 8, 10, 24, 36]

After backtrack at level 10
 pending : [9, 5, 29, 30, 38, 39, 43, 44, 45, 46, 51, 23, 26, 41, 6, 21, 20, 17, 14, 19, 16, 18, 37]
 solution : [7, 8, 10, 24, 36]


Invert decision for 36 at level 9


New level: 10
 pending : [9, 5, 29, 30, 38, 39, 43, 44, 45, 46, 51, 23, 26, 41, 6, 21, 20, 17, 14, 19, 16, 18, 37]
 solution : [7, 8, 10, 24]


Before reduction : 
 pending  : [9, 5, 29, 30, 38, 39, 43, 44, 45, 46, 51, 23, 26, 41, 6, 21, 20, 17, 14, 19, 16, 18, 37]
 solution : [7, 8, 10, 24]

Essensial at level 10 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 32768), (6, 65536), (7, -1), (8, -1), (9, 4194304), (10, -1), (11, -1), (12, -1), (13, -1), (14, 1048576), (15, -1), (16, 2097152), (17, 32768), (18, 4194304), (19, 2097152), (20, 32768), (21, 67584), (22, -1), (23, 4194304), (24, -1), (25, -1), (26, 131072), (27, -1), (28, -1), (29, 32768), (30, 512), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, 33554432), (39, 512), (40, -1), (41, 131072), (42, -1), (43, 16384), (44, 16384), (45, 8388608), (46, 524288), (47, -1), (48, -1), (49, -1), (50, -1), (51, 16777216), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 131072), (6, 131072), (7, -1), (8, -1), (9, 16777216), (10, -1), (11, -1), (12, -1), (13, -1), (14, 1048576), (15, -1), (16, 2097152), (17, 32768), (18, 8388608), (19, 4194304), (20, 65536), (21, 139264), (22, -1), (23, 16777216), (24, -1), (25, -1), (26, 524288), (27, -1), (28, -1), (29, 131072), (30, 2048), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, 512), (38, 33554432), (39, 2048), (40, -1), (41, 524288), (42, -1), (43, 65536), (44, 65536), (45, 16777216), (46, 2097152), (47, -1), (48, -1), (49, -1), (50, -1), (51, 16777216), (52, -1)]

Covered at level 10 : set()

After reduction : 
 pending  : [9, 5, 29, 30, 38, 39, 43, 44, 45, 46, 51, 23, 26, 41, 6, 21, 20, 17, 14, 19, 16, 18, 37]
 solution : [7, 8, 10, 24]


Solution : [7, 8, 10, 24] has cost 21.


Decide in level 10 among pending : [9, 5, 29, 30, 38, 39, 43, 44, 45, 46, 51, 23, 26, 41, 6, 21, 20, 17, 14, 19, 16, 18, 37]

Coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 131072), (6, 131072), (7, -1), (8, -1), (9, 16777216), (10, -1), (11, -1), (12, -1), (13, -1), (14, 1048576), (15, -1), (16, 2097152), (17, 32768), (18, 8388608), (19, 4194304), (20, 65536), (21, 139264), (22, -1), (23, 16777216), (24, -1), (25, -1), (26, 524288), (27, -1), (28, -1), (29, 131072), (30, 2048), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, 512), (38, 33554432), (39, 2048), (40, -1), (41, 524288), (42, -1), (43, 65536), (44, 65536), (45, 16777216), (46, 2097152), (47, -1), (48, -1), (49, -1), (50, -1), (51, 16777216), (52, -1)]

Decide 38 with phase True at level 10

After decision at level 10
 pending : [9, 5, 29, 30, 39, 43, 44, 45, 46, 51, 23, 26, 41, 6, 21, 20, 17, 14, 19, 16, 18, 37]
 solution : [7, 8, 10, 24, 38]


New level: 11
 pending : [9, 5, 29, 30, 39, 43, 44, 45, 46, 51, 23, 26, 41, 6, 21, 20, 17, 14, 19, 16, 18, 37]
 solution : [7, 8, 10, 24, 38]


Before reduction : 
 pending  : [9, 5, 29, 30, 39, 43, 44, 45, 46, 51, 23, 26, 41, 6, 21, 20, 17, 14, 19, 16, 18, 37]
 solution : [7, 8, 10, 24, 38]

Essensial at level 11 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 131072), (6, 131072), (7, -1), (8, -1), (9, 16777216), (10, -1), (11, -1), (12, -1), (13, -1), (14, 1048576), (15, -1), (16, 2097152), (17, 32768), (18, 8388608), (19, 4194304), (20, 65536), (21, 139264), (22, -1), (23, 16777216), (24, -1), (25, -1), (26, 524288), (27, -1), (28, -1), (29, 131072), (30, 2048), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, 512), (38, 33554432), (39, 2048), (40, -1), (41, 524288), (42, -1), (43, 65536), (44, 65536), (45, 16777216), (46, 2097152), (47, -1), (48, -1), (49, -1), (50, -1), (51, 16777216), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 0), (6, 65536), (7, -1), (8, -1), (9, 16777216), (10, -1), (11, -1), (12, -1), (13, -1), (14, 1048576), (15, -1), (16, 2097152), (17, 32768), (18, 8388608), (19, 4194304), (20, 65536), (21, 67584), (22, -1), (23, 65536), (24, -1), (25, -1), (26, 524288), (27, -1), (28, -1), (29, 0), (30, 0), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, 512), (38, -1), (39, 0), (40, -1), (41, 524288), (42, -1), (43, 0), (44, 0), (45, 0), (46, 0), (47, -1), (48, -1), (49, -1), (50, -1), (51, 0), (52, -1)]

Covered at level 11 : {5, 39, 43, 44, 45, 46, 51, 29, 30}

After reduction : 
 pending  : [9, 23, 26, 41, 6, 21, 20, 17, 14, 19, 16, 18, 37]
 solution : [7, 8, 10, 24, 38]


Before reduction : 
 pending  : [9, 23, 26, 41, 6, 21, 20, 17, 14, 19, 16, 18, 37]
 solution : [7, 8, 10, 24, 38]

Essensial at level 11 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 0), (6, 65536), (7, -1), (8, -1), (9, 16777216), (10, -1), (11, -1), (12, -1), (13, -1), (14, 1048576), (15, -1), (16, 2097152), (17, 32768), (18, 8388608), (19, 4194304), (20, 65536), (21, 67584), (22, -1), (23, 65536), (24, -1), (25, -1), (26, 524288), (27, -1), (28, -1), (29, 0), (30, 0), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, 512), (38, -1), (39, 0), (40, -1), (41, 524288), (42, -1), (43, 0), (44, 0), (45, 0), (46, 0), (47, -1), (48, -1), (49, -1), (50, -1), (51, 0), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, 65536), (7, -1), (8, -1), (9, 65536), (10, -1), (11, -1), (12, -1), (13, -1), (14, 1048576), (15, -1), (16, 2097152), (17, 32768), (18, 8388608), (19, 4194304), (20, 65536), (21, 67584), (22, -1), (23, 65536), (24, -1), (25, -1), (26, 524288), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, 512), (38, -1), (39, -1), (40, -1), (41, 524288), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 11 : set()

After reduction : 
 pending  : [9, 23, 26, 41, 6, 21, 20, 17, 14, 19, 16, 18, 37]
 solution : [7, 8, 10, 24, 38]


Solution : [7, 8, 10, 24, 38] has cost 39.


Before backtrack at level 11
 pending : [9, 23, 26, 41, 6, 21, 20, 17, 14, 19, 16, 18, 37]
 solution : [7, 8, 10, 24, 38]

After backtrack at level 11
 pending : [9, 23, 26, 41, 6, 21, 20, 17, 14, 19, 16, 18, 37, 5, 29, 30, 39, 43, 44, 45, 46, 51]
 solution : [7, 8, 10, 24, 38]


Invert decision for 38 at level 10


New level: 11
 pending : [9, 23, 26, 41, 6, 21, 20, 17, 14, 19, 16, 18, 37, 5, 29, 30, 39, 43, 44, 45, 46, 51]
 solution : [7, 8, 10, 24]


Before reduction : 
 pending  : [9, 23, 26, 41, 6, 21, 20, 17, 14, 19, 16, 18, 37, 5, 29, 30, 39, 43, 44, 45, 46, 51]
 solution : [7, 8, 10, 24]

Essensial at level 11 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, 65536), (7, -1), (8, -1), (9, 65536), (10, -1), (11, -1), (12, -1), (13, -1), (14, 1048576), (15, -1), (16, 2097152), (17, 32768), (18, 8388608), (19, 4194304), (20, 65536), (21, 67584), (22, -1), (23, 65536), (24, -1), (25, -1), (26, 524288), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, 512), (38, -1), (39, -1), (40, -1), (41, 524288), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 131072), (6, 131072), (7, -1), (8, -1), (9, 16777216), (10, -1), (11, -1), (12, -1), (13, -1), (14, 1048576), (15, -1), (16, 2097152), (17, 32768), (18, 8388608), (19, 4194304), (20, 65536), (21, 139264), (22, -1), (23, 16777216), (24, -1), (25, -1), (26, 524288), (27, -1), (28, -1), (29, 131072), (30, 2048), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, 512), (38, -1), (39, 2048), (40, -1), (41, 524288), (42, -1), (43, 65536), (44, 65536), (45, 16777216), (46, 2097152), (47, -1), (48, -1), (49, -1), (50, -1), (51, 16777216), (52, -1)]

Covered at level 11 : set()

After reduction : 
 pending  : [9, 23, 26, 41, 6, 21, 20, 17, 14, 19, 16, 18, 37, 5, 29, 30, 39, 43, 44, 45, 46, 51]
 solution : [7, 8, 10, 24]


Solution : [7, 8, 10, 24] has cost 21.


Decide in level 11 among pending : [9, 23, 26, 41, 6, 21, 20, 17, 14, 19, 16, 18, 37, 5, 29, 30, 39, 43, 44, 45, 46, 51]

Coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 131072), (6, 131072), (7, -1), (8, -1), (9, 16777216), (10, -1), (11, -1), (12, -1), (13, -1), (14, 1048576), (15, -1), (16, 2097152), (17, 32768), (18, 8388608), (19, 4194304), (20, 65536), (21, 139264), (22, -1), (23, 16777216), (24, -1), (25, -1), (26, 524288), (27, -1), (28, -1), (29, 131072), (30, 2048), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, 512), (38, -1), (39, 2048), (40, -1), (41, 524288), (42, -1), (43, 65536), (44, 65536), (45, 16777216), (46, 2097152), (47, -1), (48, -1), (49, -1), (50, -1), (51, 16777216), (52, -1)]

Decide 9 with phase True at level 11

After decision at level 11
 pending : [23, 26, 41, 6, 21, 20, 17, 14, 19, 16, 18, 37, 5, 29, 30, 39, 43, 44, 45, 46, 51]
 solution : [7, 8, 10, 24, 9]


New level: 12
 pending : [23, 26, 41, 6, 21, 20, 17, 14, 19, 16, 18, 37, 5, 29, 30, 39, 43, 44, 45, 46, 51]
 solution : [7, 8, 10, 24, 9]


Before reduction : 
 pending  : [23, 26, 41, 6, 21, 20, 17, 14, 19, 16, 18, 37, 5, 29, 30, 39, 43, 44, 45, 46, 51]
 solution : [7, 8, 10, 24, 9]

Essensial at level 12 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 131072), (6, 131072), (7, -1), (8, -1), (9, 16777216), (10, -1), (11, -1), (12, -1), (13, -1), (14, 1048576), (15, -1), (16, 2097152), (17, 32768), (18, 8388608), (19, 4194304), (20, 65536), (21, 139264), (22, -1), (23, 16777216), (24, -1), (25, -1), (26, 524288), (27, -1), (28, -1), (29, 131072), (30, 2048), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, 512), (38, -1), (39, 2048), (40, -1), (41, 524288), (42, -1), (43, 65536), (44, 65536), (45, 16777216), (46, 2097152), (47, -1), (48, -1), (49, -1), (50, -1), (51, 16777216), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 0), (6, 65536), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 1048576), (15, -1), (16, 2097152), (17, 32768), (18, 4194304), (19, 2097152), (20, 32768), (21, 67584), (22, -1), (23, 0), (24, -1), (25, -1), (26, 524288), (27, -1), (28, -1), (29, 0), (30, 0), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, 512), (38, -1), (39, 0), (40, -1), (41, 524288), (42, -1), (43, 0), (44, 0), (45, 0), (46, 0), (47, -1), (48, -1), (49, -1), (50, -1), (51, 0), (52, -1)]

Covered at level 12 : {5, 39, 43, 44, 45, 46, 51, 23, 29, 30}

After reduction : 
 pending  : [26, 41, 6, 21, 20, 17, 14, 19, 16, 18, 37]
 solution : [7, 8, 10, 24, 9]


Before reduction : 
 pending  : [26, 41, 6, 21, 20, 17, 14, 19, 16, 18, 37]
 solution : [7, 8, 10, 24, 9]

Essensial at level 12 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 0), (6, 65536), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 1048576), (15, -1), (16, 2097152), (17, 32768), (18, 4194304), (19, 2097152), (20, 32768), (21, 67584), (22, -1), (23, 0), (24, -1), (25, -1), (26, 524288), (27, -1), (28, -1), (29, 0), (30, 0), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, 512), (38, -1), (39, 0), (40, -1), (41, 524288), (42, -1), (43, 0), (44, 0), (45, 0), (46, 0), (47, -1), (48, -1), (49, -1), (50, -1), (51, 0), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, 65536), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 1048576), (15, -1), (16, 2097152), (17, 32768), (18, 4194304), (19, 2097152), (20, 32768), (21, 67584), (22, -1), (23, -1), (24, -1), (25, -1), (26, 524288), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, 512), (38, -1), (39, -1), (40, -1), (41, 524288), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 12 : set()

After reduction : 
 pending  : [26, 41, 6, 21, 20, 17, 14, 19, 16, 18, 37]
 solution : [7, 8, 10, 24, 9]


Solution : [7, 8, 10, 24, 9] has cost 25.


Before backtrack at level 12
 pending : [26, 41, 6, 21, 20, 17, 14, 19, 16, 18, 37]
 solution : [7, 8, 10, 24, 9]

After backtrack at level 12
 pending : [26, 41, 6, 21, 20, 17, 14, 19, 16, 18, 37, 23, 5, 29, 30, 39, 43, 44, 45, 46, 51]
 solution : [7, 8, 10, 24, 9]


Invert decision for 9 at level 11


New level: 12
 pending : [26, 41, 6, 21, 20, 17, 14, 19, 16, 18, 37, 23, 5, 29, 30, 39, 43, 44, 45, 46, 51]
 solution : [7, 8, 10, 24]


Before reduction : 
 pending  : [26, 41, 6, 21, 20, 17, 14, 19, 16, 18, 37, 23, 5, 29, 30, 39, 43, 44, 45, 46, 51]
 solution : [7, 8, 10, 24]

Essensial at level 12 : {23}

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, 65536), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 1048576), (15, -1), (16, 2097152), (17, 32768), (18, 4194304), (19, 2097152), (20, 32768), (21, 67584), (22, -1), (23, -1), (24, -1), (25, -1), (26, 524288), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, 512), (38, -1), (39, -1), (40, -1), (41, 524288), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 0), (6, 65536), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 1048576), (15, -1), (16, 2097152), (17, 32768), (18, 4194304), (19, 2097152), (20, 32768), (21, 67584), (22, -1), (23, -1), (24, -1), (25, -1), (26, 524288), (27, -1), (28, -1), (29, 0), (30, 0), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, 512), (38, -1), (39, 0), (40, -1), (41, 524288), (42, -1), (43, 0), (44, 0), (45, 0), (46, 0), (47, -1), (48, -1), (49, -1), (50, -1), (51, 0), (52, -1)]

Covered at level 12 : {5, 39, 43, 44, 45, 46, 51, 29, 30}

After reduction : 
 pending  : [26, 41, 6, 21, 20, 17, 14, 19, 16, 18, 37]
 solution : [7, 8, 10, 24, 23]


Before reduction : 
 pending  : [26, 41, 6, 21, 20, 17, 14, 19, 16, 18, 37]
 solution : [7, 8, 10, 24, 23]

Essensial at level 12 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 0), (6, 65536), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 1048576), (15, -1), (16, 2097152), (17, 32768), (18, 4194304), (19, 2097152), (20, 32768), (21, 67584), (22, -1), (23, -1), (24, -1), (25, -1), (26, 524288), (27, -1), (28, -1), (29, 0), (30, 0), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, 512), (38, -1), (39, 0), (40, -1), (41, 524288), (42, -1), (43, 0), (44, 0), (45, 0), (46, 0), (47, -1), (48, -1), (49, -1), (50, -1), (51, 0), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, 65536), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 1048576), (15, -1), (16, 2097152), (17, 32768), (18, 4194304), (19, 2097152), (20, 32768), (21, 67584), (22, -1), (23, -1), (24, -1), (25, -1), (26, 524288), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, 512), (38, -1), (39, -1), (40, -1), (41, 524288), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 12 : set()

After reduction : 
 pending  : [26, 41, 6, 21, 20, 17, 14, 19, 16, 18, 37]
 solution : [7, 8, 10, 24, 23]


Solution : [7, 8, 10, 24, 23] has cost 28.


Before backtrack at level 12
 pending : [26, 41, 6, 21, 20, 17, 14, 19, 16, 18, 37]
 solution : [7, 8, 10, 24, 23]

After backtrack at level 12
 pending : [26, 41, 6, 21, 20, 17, 14, 19, 16, 18, 37, 23, 5, 29, 30, 39, 43, 44, 45, 46, 51]
 solution : [7, 8, 10, 24]


Before backtrack at level 11
 pending : [26, 41, 6, 21, 20, 17, 14, 19, 16, 18, 37, 23, 5, 29, 30, 39, 43, 44, 45, 46, 51]
 solution : [7, 8, 10, 24]

After backtrack at level 11
 pending : [26, 41, 6, 21, 20, 17, 14, 19, 16, 18, 37, 23, 5, 29, 30, 39, 43, 44, 45, 46, 51, 9]
 solution : [7, 8, 10, 24]


Before backtrack at level 10
 pending : [26, 41, 6, 21, 20, 17, 14, 19, 16, 18, 37, 23, 5, 29, 30, 39, 43, 44, 45, 46, 51, 9]
 solution : [7, 8, 10, 24]

After backtrack at level 10
 pending : [26, 41, 6, 21, 20, 17, 14, 19, 16, 18, 37, 23, 5, 29, 30, 39, 43, 44, 45, 46, 51, 9, 38]
 solution : [7, 8, 10, 24]


Before backtrack at level 9
 pending : [26, 41, 6, 21, 20, 17, 14, 19, 16, 18, 37, 23, 5, 29, 30, 39, 43, 44, 45, 46, 51, 9, 38]
 solution : [7, 8, 10, 24]

After backtrack at level 9
 pending : [26, 41, 6, 21, 20, 17, 14, 19, 16, 18, 37, 23, 5, 29, 30, 39, 43, 44, 45, 46, 51, 9, 38, 36]
 solution : [7, 8, 10, 24]


Before backtrack at level 8
 pending : [26, 41, 6, 21, 20, 17, 14, 19, 16, 18, 37, 23, 5, 29, 30, 39, 43, 44, 45, 46, 51, 9, 38, 36]
 solution : [7, 8, 10, 24]

After backtrack at level 8
 pending : [26, 41, 6, 21, 20, 17, 14, 19, 16, 18, 37, 23, 5, 29, 30, 39, 43, 44, 45, 46, 51, 9, 38, 36, 15]
 solution : [7, 8, 10, 24]


Before backtrack at level 7
 pending : [26, 41, 6, 21, 20, 17, 14, 19, 16, 18, 37, 23, 5, 29, 30, 39, 43, 44, 45, 46, 51, 9, 38, 36, 15]
 solution : [7, 8, 10, 24]

After backtrack at level 7
 pending : [26, 41, 6, 21, 20, 17, 14, 19, 16, 18, 37, 23, 5, 29, 30, 39, 43, 44, 45, 46, 51, 9, 38, 36, 15, 31, 33, 13]
 solution : [7, 8, 10, 24]


Invert decision for 24 at level 6


New level: 7
 pending : [26, 41, 6, 21, 20, 17, 14, 19, 16, 18, 37, 23, 5, 29, 30, 39, 43, 44, 45, 46, 51, 9, 38, 36, 15, 31, 33, 13]
 solution : [7, 8, 10]


Before reduction : 
 pending  : [26, 41, 6, 21, 20, 17, 14, 19, 16, 18, 37, 23, 5, 29, 30, 39, 43, 44, 45, 46, 51, 9, 38, 36, 15, 31, 33, 13]
 solution : [7, 8, 10]

Essensial at level 7 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, 65536), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 1048576), (15, -1), (16, 2097152), (17, 32768), (18, 4194304), (19, 2097152), (20, 32768), (21, 67584), (22, -1), (23, -1), (24, -1), (25, -1), (26, 524288), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, 512), (38, -1), (39, -1), (40, -1), (41, 524288), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 524288), (6, 131072), (7, -1), (8, -1), (9, 67108864), (10, -1), (11, -1), (12, -1), (13, 268435456), (14, 1048576), (15, 134217728), (16, 2097152), (17, 32768), (18, 8388608), (19, 4194304), (20, 65536), (21, 139264), (22, -1), (23, 67108864), (24, -1), (25, -1), (26, 524288), (27, -1), (28, -1), (29, 524288), (30, 8192), (31, 8192), (32, -1), (33, 1048576), (34, -1), (35, -1), (36, 33554432), (37, 134217728), (38, 67108864), (39, 8192), (40, -1), (41, 524288), (42, -1), (43, 262144), (44, 262144), (45, 33554432), (46, 8388608), (47, -1), (48, -1), (49, -1), (50, -1), (51, 33554432), (52, -1)]

Covered at level 7 : set()

After reduction : 
 pending  : [26, 41, 6, 21, 20, 17, 14, 19, 16, 18, 37, 23, 5, 29, 30, 39, 43, 44, 45, 46, 51, 9, 38, 36, 15, 31, 33, 13]
 solution : [7, 8, 10]


Solution : [7, 8, 10] has cost 14.


Decide in level 7 among pending : [26, 41, 6, 21, 20, 17, 14, 19, 16, 18, 37, 23, 5, 29, 30, 39, 43, 44, 45, 46, 51, 9, 38, 36, 15, 31, 33, 13]

Coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 524288), (6, 131072), (7, -1), (8, -1), (9, 67108864), (10, -1), (11, -1), (12, -1), (13, 268435456), (14, 1048576), (15, 134217728), (16, 2097152), (17, 32768), (18, 8388608), (19, 4194304), (20, 65536), (21, 139264), (22, -1), (23, 67108864), (24, -1), (25, -1), (26, 524288), (27, -1), (28, -1), (29, 524288), (30, 8192), (31, 8192), (32, -1), (33, 1048576), (34, -1), (35, -1), (36, 33554432), (37, 134217728), (38, 67108864), (39, 8192), (40, -1), (41, 524288), (42, -1), (43, 262144), (44, 262144), (45, 33554432), (46, 8388608), (47, -1), (48, -1), (49, -1), (50, -1), (51, 33554432), (52, -1)]

Decide 13 with phase True at level 7

After decision at level 7
 pending : [26, 41, 6, 21, 20, 17, 14, 19, 16, 18, 37, 23, 5, 29, 30, 39, 43, 44, 45, 46, 51, 9, 38, 36, 15, 31, 33]
 solution : [7, 8, 10, 13]


New level: 8
 pending : [26, 41, 6, 21, 20, 17, 14, 19, 16, 18, 37, 23, 5, 29, 30, 39, 43, 44, 45, 46, 51, 9, 38, 36, 15, 31, 33]
 solution : [7, 8, 10, 13]


Before reduction : 
 pending  : [26, 41, 6, 21, 20, 17, 14, 19, 16, 18, 37, 23, 5, 29, 30, 39, 43, 44, 45, 46, 51, 9, 38, 36, 15, 31, 33]
 solution : [7, 8, 10, 13]

Essensial at level 8 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 524288), (6, 131072), (7, -1), (8, -1), (9, 67108864), (10, -1), (11, -1), (12, -1), (13, 268435456), (14, 1048576), (15, 134217728), (16, 2097152), (17, 32768), (18, 8388608), (19, 4194304), (20, 65536), (21, 139264), (22, -1), (23, 67108864), (24, -1), (25, -1), (26, 524288), (27, -1), (28, -1), (29, 524288), (30, 8192), (31, 8192), (32, -1), (33, 1048576), (34, -1), (35, -1), (36, 33554432), (37, 134217728), (38, 67108864), (39, 8192), (40, -1), (41, 524288), (42, -1), (43, 262144), (44, 262144), (45, 33554432), (46, 8388608), (47, -1), (48, -1), (49, -1), (50, -1), (51, 33554432), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 131072), (6, 0), (7, -1), (8, -1), (9, 67108864), (10, -1), (11, -1), (12, -1), (13, -1), (14, 0), (15, 0), (16, 0), (17, 0), (18, 0), (19, 0), (20, 0), (21, 0), (22, -1), (23, 67108864), (24, -1), (25, -1), (26, 0), (27, -1), (28, -1), (29, 262144), (30, 4096), (31, 8192), (32, -1), (33, 1048576), (34, -1), (35, -1), (36, 1024), (37, 2048), (38, 33554432), (39, 2048), (40, -1), (41, 0), (42, -1), (43, 65536), (44, 65536), (45, 16777216), (46, 2097152), (47, -1), (48, -1), (49, -1), (50, -1), (51, 33554432), (52, -1)]

Covered at level 8 : {6, 41, 14, 15, 16, 17, 18, 19, 20, 21, 26}

After reduction : 
 pending  : [37, 23, 5, 29, 30, 39, 43, 44, 45, 46, 51, 9, 38, 36, 31, 33]
 solution : [7, 8, 10, 13]


Before reduction : 
 pending  : [37, 23, 5, 29, 30, 39, 43, 44, 45, 46, 51, 9, 38, 36, 31, 33]
 solution : [7, 8, 10, 13]

Essensial at level 8 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 131072), (6, 0), (7, -1), (8, -1), (9, 67108864), (10, -1), (11, -1), (12, -1), (13, -1), (14, 0), (15, 0), (16, 0), (17, 0), (18, 0), (19, 0), (20, 0), (21, 0), (22, -1), (23, 67108864), (24, -1), (25, -1), (26, 0), (27, -1), (28, -1), (29, 262144), (30, 4096), (31, 8192), (32, -1), (33, 1048576), (34, -1), (35, -1), (36, 1024), (37, 2048), (38, 33554432), (39, 2048), (40, -1), (41, 0), (42, -1), (43, 65536), (44, 65536), (45, 16777216), (46, 2097152), (47, -1), (48, -1), (49, -1), (50, -1), (51, 33554432), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 131072), (6, -1), (7, -1), (8, -1), (9, 67108864), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, 67108864), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, 262144), (30, 4096), (31, 8192), (32, -1), (33, 1048576), (34, -1), (35, -1), (36, 1024), (37, 2048), (38, 33554432), (39, 2048), (40, -1), (41, -1), (42, -1), (43, 65536), (44, 65536), (45, 16777216), (46, 2097152), (47, -1), (48, -1), (49, -1), (50, -1), (51, 33554432), (52, -1)]

Covered at level 8 : set()

After reduction : 
 pending  : [37, 23, 5, 29, 30, 39, 43, 44, 45, 46, 51, 9, 38, 36, 31, 33]
 solution : [7, 8, 10, 13]


Solution : [7, 8, 10, 13] has cost 21.


Decide in level 8 among pending : [37, 23, 5, 29, 30, 39, 43, 44, 45, 46, 51, 9, 38, 36, 31, 33]

Coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 131072), (6, -1), (7, -1), (8, -1), (9, 67108864), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, 67108864), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, 262144), (30, 4096), (31, 8192), (32, -1), (33, 1048576), (34, -1), (35, -1), (36, 1024), (37, 2048), (38, 33554432), (39, 2048), (40, -1), (41, -1), (42, -1), (43, 65536), (44, 65536), (45, 16777216), (46, 2097152), (47, -1), (48, -1), (49, -1), (50, -1), (51, 33554432), (52, -1)]

Decide 23 with phase True at level 8

After decision at level 8
 pending : [37, 5, 29, 30, 39, 43, 44, 45, 46, 51, 9, 38, 36, 31, 33]
 solution : [7, 8, 10, 13, 23]


New level: 9
 pending : [37, 5, 29, 30, 39, 43, 44, 45, 46, 51, 9, 38, 36, 31, 33]
 solution : [7, 8, 10, 13, 23]


Before reduction : 
 pending  : [37, 5, 29, 30, 39, 43, 44, 45, 46, 51, 9, 38, 36, 31, 33]
 solution : [7, 8, 10, 13, 23]

Essensial at level 9 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 131072), (6, -1), (7, -1), (8, -1), (9, 67108864), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, 67108864), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, 262144), (30, 4096), (31, 8192), (32, -1), (33, 1048576), (34, -1), (35, -1), (36, 1024), (37, 2048), (38, 33554432), (39, 2048), (40, -1), (41, -1), (42, -1), (43, 65536), (44, 65536), (45, 16777216), (46, 2097152), (47, -1), (48, -1), (49, -1), (50, -1), (51, 33554432), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 0), (6, -1), (7, -1), (8, -1), (9, 0), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, 0), (30, 0), (31, 0), (32, -1), (33, 0), (34, -1), (35, -1), (36, 0), (37, 0), (38, 0), (39, 0), (40, -1), (41, -1), (42, -1), (43, 0), (44, 0), (45, 0), (46, 0), (47, -1), (48, -1), (49, -1), (50, -1), (51, 0), (52, -1)]

Covered at level 9 : {33, 36, 5, 37, 39, 38, 9, 43, 44, 45, 46, 51, 29, 30, 31}

After reduction : 
 pending  : []
 solution : [7, 8, 10, 13, 23]


Before reduction : 
 pending  : []
 solution : [7, 8, 10, 13, 23]

Essensial at level 9 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 0), (6, -1), (7, -1), (8, -1), (9, 0), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, 0), (30, 0), (31, 0), (32, -1), (33, 0), (34, -1), (35, -1), (36, 0), (37, 0), (38, 0), (39, 0), (40, -1), (41, -1), (42, -1), (43, 0), (44, 0), (45, 0), (46, 0), (47, -1), (48, -1), (49, -1), (50, -1), (51, 0), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 9 : set()

After reduction : 
 pending  : []
 solution : [7, 8, 10, 13, 23]


Solution : [7, 8, 10, 13, 23] has cost 28.


Before backtrack at level 9
 pending : []
 solution : [7, 8, 10, 13, 23]

After backtrack at level 9
 pending : [37, 5, 29, 30, 39, 43, 44, 45, 46, 51, 9, 38, 36, 31, 33]
 solution : [7, 8, 10, 13, 23]


Invert decision for 23 at level 8


New level: 9
 pending : [37, 5, 29, 30, 39, 43, 44, 45, 46, 51, 9, 38, 36, 31, 33]
 solution : [7, 8, 10, 13]


Before reduction : 
 pending  : [37, 5, 29, 30, 39, 43, 44, 45, 46, 51, 9, 38, 36, 31, 33]
 solution : [7, 8, 10, 13]

Essensial at level 9 : {9}

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 0), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, 0), (30, 0), (31, 0), (32, -1), (33, 0), (34, -1), (35, -1), (36, 0), (37, 0), (38, 0), (39, 0), (40, -1), (41, -1), (42, -1), (43, 0), (44, 0), (45, 0), (46, 0), (47, -1), (48, -1), (49, -1), (50, -1), (51, 0), (52, -1)]

Covered at level 9 : {33, 36, 5, 37, 39, 38, 43, 44, 45, 46, 51, 29, 30, 31}

After reduction : 
 pending  : []
 solution : [7, 8, 10, 13, 9]


Before reduction : 
 pending  : []
 solution : [7, 8, 10, 13, 9]

Essensial at level 9 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 0), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, 0), (30, 0), (31, 0), (32, -1), (33, 0), (34, -1), (35, -1), (36, 0), (37, 0), (38, 0), (39, 0), (40, -1), (41, -1), (42, -1), (43, 0), (44, 0), (45, 0), (46, 0), (47, -1), (48, -1), (49, -1), (50, -1), (51, 0), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 9 : set()

After reduction : 
 pending  : []
 solution : [7, 8, 10, 13, 9]


Solution : [7, 8, 10, 13, 9] has cost 25.


Before backtrack at level 9
 pending : []
 solution : [7, 8, 10, 13, 9]

After backtrack at level 9
 pending : [9, 37, 5, 29, 30, 39, 43, 44, 45, 46, 51, 38, 36, 31, 33]
 solution : [7, 8, 10, 13]


Before backtrack at level 8
 pending : [9, 37, 5, 29, 30, 39, 43, 44, 45, 46, 51, 38, 36, 31, 33]
 solution : [7, 8, 10, 13]

After backtrack at level 8
 pending : [9, 37, 5, 29, 30, 39, 43, 44, 45, 46, 51, 38, 36, 31, 33, 26, 41, 6, 21, 20, 17, 14, 19, 16, 18, 15, 23]
 solution : [7, 8, 10, 13]


Invert decision for 13 at level 7


New level: 8
 pending : [9, 37, 5, 29, 30, 39, 43, 44, 45, 46, 51, 38, 36, 31, 33, 26, 41, 6, 21, 20, 17, 14, 19, 16, 18, 15, 23]
 solution : [7, 8, 10]


Before reduction : 
 pending  : [9, 37, 5, 29, 30, 39, 43, 44, 45, 46, 51, 38, 36, 31, 33, 26, 41, 6, 21, 20, 17, 14, 19, 16, 18, 15, 23]
 solution : [7, 8, 10]

Essensial at level 8 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 524288), (6, 131072), (7, -1), (8, -1), (9, 67108864), (10, -1), (11, -1), (12, -1), (13, -1), (14, 1048576), (15, 134217728), (16, 2097152), (17, 32768), (18, 8388608), (19, 4194304), (20, 65536), (21, 139264), (22, -1), (23, 67108864), (24, -1), (25, -1), (26, 524288), (27, -1), (28, -1), (29, 524288), (30, 8192), (31, 8192), (32, -1), (33, 1048576), (34, -1), (35, -1), (36, 33554432), (37, 134217728), (38, 67108864), (39, 8192), (40, -1), (41, 524288), (42, -1), (43, 262144), (44, 262144), (45, 33554432), (46, 8388608), (47, -1), (48, -1), (49, -1), (50, -1), (51, 33554432), (52, -1)]

Covered at level 8 : set()

After reduction : 
 pending  : [9, 37, 5, 29, 30, 39, 43, 44, 45, 46, 51, 38, 36, 31, 33, 26, 41, 6, 21, 20, 17, 14, 19, 16, 18, 15, 23]
 solution : [7, 8, 10]


Solution : [7, 8, 10] has cost 14.


Decide in level 8 among pending : [9, 37, 5, 29, 30, 39, 43, 44, 45, 46, 51, 38, 36, 31, 33, 26, 41, 6, 21, 20, 17, 14, 19, 16, 18, 15, 23]

Coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 524288), (6, 131072), (7, -1), (8, -1), (9, 67108864), (10, -1), (11, -1), (12, -1), (13, -1), (14, 1048576), (15, 134217728), (16, 2097152), (17, 32768), (18, 8388608), (19, 4194304), (20, 65536), (21, 139264), (22, -1), (23, 67108864), (24, -1), (25, -1), (26, 524288), (27, -1), (28, -1), (29, 524288), (30, 8192), (31, 8192), (32, -1), (33, 1048576), (34, -1), (35, -1), (36, 33554432), (37, 134217728), (38, 67108864), (39, 8192), (40, -1), (41, 524288), (42, -1), (43, 262144), (44, 262144), (45, 33554432), (46, 8388608), (47, -1), (48, -1), (49, -1), (50, -1), (51, 33554432), (52, -1)]

Decide 37 with phase True at level 8

After decision at level 8
 pending : [9, 5, 29, 30, 39, 43, 44, 45, 46, 51, 38, 36, 31, 33, 26, 41, 6, 21, 20, 17, 14, 19, 16, 18, 15, 23]
 solution : [7, 8, 10, 37]


New level: 9
 pending : [9, 5, 29, 30, 39, 43, 44, 45, 46, 51, 38, 36, 31, 33, 26, 41, 6, 21, 20, 17, 14, 19, 16, 18, 15, 23]
 solution : [7, 8, 10, 37]


Before reduction : 
 pending  : [9, 5, 29, 30, 39, 43, 44, 45, 46, 51, 38, 36, 31, 33, 26, 41, 6, 21, 20, 17, 14, 19, 16, 18, 15, 23]
 solution : [7, 8, 10, 37]

Essensial at level 9 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 524288), (6, 131072), (7, -1), (8, -1), (9, 67108864), (10, -1), (11, -1), (12, -1), (13, -1), (14, 1048576), (15, 134217728), (16, 2097152), (17, 32768), (18, 8388608), (19, 4194304), (20, 65536), (21, 139264), (22, -1), (23, 67108864), (24, -1), (25, -1), (26, 524288), (27, -1), (28, -1), (29, 524288), (30, 8192), (31, 8192), (32, -1), (33, 1048576), (34, -1), (35, -1), (36, 33554432), (37, 134217728), (38, 67108864), (39, 8192), (40, -1), (41, 524288), (42, -1), (43, 262144), (44, 262144), (45, 33554432), (46, 8388608), (47, -1), (48, -1), (49, -1), (50, -1), (51, 33554432), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 524288), (6, 131072), (7, -1), (8, -1), (9, 67108864), (10, -1), (11, -1), (12, -1), (13, -1), (14, 1048576), (15, 134217728), (16, 2097152), (17, 32768), (18, 8388608), (19, 4194304), (20, 65536), (21, 139264), (22, -1), (23, 67108864), (24, -1), (25, -1), (26, 524288), (27, -1), (28, -1), (29, 524288), (30, 8192), (31, 4096), (32, -1), (33, 524288), (34, -1), (35, -1), (36, 16777216), (37, -1), (38, 67108864), (39, 8192), (40, -1), (41, 524288), (42, -1), (43, 262144), (44, 262144), (45, 33554432), (46, 8388608), (47, -1), (48, -1), (49, -1), (50, -1), (51, 33554432), (52, -1)]

Covered at level 9 : set()

After reduction : 
 pending  : [9, 5, 29, 30, 39, 43, 44, 45, 46, 51, 38, 36, 31, 33, 26, 41, 6, 21, 20, 17, 14, 19, 16, 18, 15, 23]
 solution : [7, 8, 10, 37]


Solution : [7, 8, 10, 37] has cost 28.


Before backtrack at level 9
 pending : [9, 5, 29, 30, 39, 43, 44, 45, 46, 51, 38, 36, 31, 33, 26, 41, 6, 21, 20, 17, 14, 19, 16, 18, 15, 23]
 solution : [7, 8, 10, 37]

After backtrack at level 9
 pending : [9, 5, 29, 30, 39, 43, 44, 45, 46, 51, 38, 36, 31, 33, 26, 41, 6, 21, 20, 17, 14, 19, 16, 18, 15, 23]
 solution : [7, 8, 10, 37]


Invert decision for 37 at level 8


New level: 9
 pending : [9, 5, 29, 30, 39, 43, 44, 45, 46, 51, 38, 36, 31, 33, 26, 41, 6, 21, 20, 17, 14, 19, 16, 18, 15, 23]
 solution : [7, 8, 10]


Before reduction : 
 pending  : [9, 5, 29, 30, 39, 43, 44, 45, 46, 51, 38, 36, 31, 33, 26, 41, 6, 21, 20, 17, 14, 19, 16, 18, 15, 23]
 solution : [7, 8, 10]

Essensial at level 9 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 524288), (6, 131072), (7, -1), (8, -1), (9, 67108864), (10, -1), (11, -1), (12, -1), (13, -1), (14, 1048576), (15, 134217728), (16, 2097152), (17, 32768), (18, 8388608), (19, 4194304), (20, 65536), (21, 139264), (22, -1), (23, 67108864), (24, -1), (25, -1), (26, 524288), (27, -1), (28, -1), (29, 524288), (30, 8192), (31, 4096), (32, -1), (33, 524288), (34, -1), (35, -1), (36, 16777216), (37, -1), (38, 67108864), (39, 8192), (40, -1), (41, 524288), (42, -1), (43, 262144), (44, 262144), (45, 33554432), (46, 8388608), (47, -1), (48, -1), (49, -1), (50, -1), (51, 33554432), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 524288), (6, 131072), (7, -1), (8, -1), (9, 67108864), (10, -1), (11, -1), (12, -1), (13, -1), (14, 1048576), (15, 134217728), (16, 2097152), (17, 32768), (18, 8388608), (19, 4194304), (20, 65536), (21, 139264), (22, -1), (23, 67108864), (24, -1), (25, -1), (26, 524288), (27, -1), (28, -1), (29, 524288), (30, 8192), (31, 8192), (32, -1), (33, 1048576), (34, -1), (35, -1), (36, 33554432), (37, -1), (38, 67108864), (39, 8192), (40, -1), (41, 524288), (42, -1), (43, 262144), (44, 262144), (45, 33554432), (46, 8388608), (47, -1), (48, -1), (49, -1), (50, -1), (51, 33554432), (52, -1)]

Covered at level 9 : set()

After reduction : 
 pending  : [9, 5, 29, 30, 39, 43, 44, 45, 46, 51, 38, 36, 31, 33, 26, 41, 6, 21, 20, 17, 14, 19, 16, 18, 15, 23]
 solution : [7, 8, 10]


Solution : [7, 8, 10] has cost 14.


Decide in level 9 among pending : [9, 5, 29, 30, 39, 43, 44, 45, 46, 51, 38, 36, 31, 33, 26, 41, 6, 21, 20, 17, 14, 19, 16, 18, 15, 23]

Coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 524288), (6, 131072), (7, -1), (8, -1), (9, 67108864), (10, -1), (11, -1), (12, -1), (13, -1), (14, 1048576), (15, 134217728), (16, 2097152), (17, 32768), (18, 8388608), (19, 4194304), (20, 65536), (21, 139264), (22, -1), (23, 67108864), (24, -1), (25, -1), (26, 524288), (27, -1), (28, -1), (29, 524288), (30, 8192), (31, 8192), (32, -1), (33, 1048576), (34, -1), (35, -1), (36, 33554432), (37, -1), (38, 67108864), (39, 8192), (40, -1), (41, 524288), (42, -1), (43, 262144), (44, 262144), (45, 33554432), (46, 8388608), (47, -1), (48, -1), (49, -1), (50, -1), (51, 33554432), (52, -1)]

Decide 15 with phase True at level 9

After decision at level 9
 pending : [9, 5, 29, 30, 39, 43, 44, 45, 46, 51, 38, 36, 31, 33, 26, 41, 6, 21, 20, 17, 14, 19, 16, 18, 23]
 solution : [7, 8, 10, 15]


New level: 10
 pending : [9, 5, 29, 30, 39, 43, 44, 45, 46, 51, 38, 36, 31, 33, 26, 41, 6, 21, 20, 17, 14, 19, 16, 18, 23]
 solution : [7, 8, 10, 15]


Before reduction : 
 pending  : [9, 5, 29, 30, 39, 43, 44, 45, 46, 51, 38, 36, 31, 33, 26, 41, 6, 21, 20, 17, 14, 19, 16, 18, 23]
 solution : [7, 8, 10, 15]

Essensial at level 10 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 524288), (6, 131072), (7, -1), (8, -1), (9, 67108864), (10, -1), (11, -1), (12, -1), (13, -1), (14, 1048576), (15, 134217728), (16, 2097152), (17, 32768), (18, 8388608), (19, 4194304), (20, 65536), (21, 139264), (22, -1), (23, 67108864), (24, -1), (25, -1), (26, 524288), (27, -1), (28, -1), (29, 524288), (30, 8192), (31, 8192), (32, -1), (33, 1048576), (34, -1), (35, -1), (36, 33554432), (37, -1), (38, 67108864), (39, 8192), (40, -1), (41, 524288), (42, -1), (43, 262144), (44, 262144), (45, 33554432), (46, 8388608), (47, -1), (48, -1), (49, -1), (50, -1), (51, 33554432), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 131072), (6, 0), (7, -1), (8, -1), (9, 67108864), (10, -1), (11, -1), (12, -1), (13, -1), (14, 0), (15, -1), (16, 0), (17, 0), (18, 0), (19, 0), (20, 0), (21, 0), (22, -1), (23, 67108864), (24, -1), (25, -1), (26, 0), (27, -1), (28, -1), (29, 262144), (30, 4096), (31, 8192), (32, -1), (33, 1048576), (34, -1), (35, -1), (36, 1024), (37, -1), (38, 33554432), (39, 2048), (40, -1), (41, 0), (42, -1), (43, 131072), (44, 131072), (45, 16777216), (46, 2097152), (47, -1), (48, -1), (49, -1), (50, -1), (51, 33554432), (52, -1)]

Covered at level 10 : {6, 41, 14, 16, 17, 18, 19, 20, 21, 26}

After reduction : 
 pending  : [9, 5, 29, 30, 39, 43, 44, 45, 46, 51, 38, 36, 31, 33, 23]
 solution : [7, 8, 10, 15]


Before reduction : 
 pending  : [9, 5, 29, 30, 39, 43, 44, 45, 46, 51, 38, 36, 31, 33, 23]
 solution : [7, 8, 10, 15]

Essensial at level 10 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 131072), (6, 0), (7, -1), (8, -1), (9, 67108864), (10, -1), (11, -1), (12, -1), (13, -1), (14, 0), (15, -1), (16, 0), (17, 0), (18, 0), (19, 0), (20, 0), (21, 0), (22, -1), (23, 67108864), (24, -1), (25, -1), (26, 0), (27, -1), (28, -1), (29, 262144), (30, 4096), (31, 8192), (32, -1), (33, 1048576), (34, -1), (35, -1), (36, 1024), (37, -1), (38, 33554432), (39, 2048), (40, -1), (41, 0), (42, -1), (43, 131072), (44, 131072), (45, 16777216), (46, 2097152), (47, -1), (48, -1), (49, -1), (50, -1), (51, 33554432), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 131072), (6, -1), (7, -1), (8, -1), (9, 67108864), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, 67108864), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, 262144), (30, 4096), (31, 8192), (32, -1), (33, 1048576), (34, -1), (35, -1), (36, 1024), (37, -1), (38, 33554432), (39, 2048), (40, -1), (41, -1), (42, -1), (43, 131072), (44, 131072), (45, 16777216), (46, 2097152), (47, -1), (48, -1), (49, -1), (50, -1), (51, 33554432), (52, -1)]

Covered at level 10 : set()

After reduction : 
 pending  : [9, 5, 29, 30, 39, 43, 44, 45, 46, 51, 38, 36, 31, 33, 23]
 solution : [7, 8, 10, 15]


Solution : [7, 8, 10, 15] has cost 21.


Decide in level 10 among pending : [9, 5, 29, 30, 39, 43, 44, 45, 46, 51, 38, 36, 31, 33, 23]

Coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 131072), (6, -1), (7, -1), (8, -1), (9, 67108864), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, 67108864), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, 262144), (30, 4096), (31, 8192), (32, -1), (33, 1048576), (34, -1), (35, -1), (36, 1024), (37, -1), (38, 33554432), (39, 2048), (40, -1), (41, -1), (42, -1), (43, 131072), (44, 131072), (45, 16777216), (46, 2097152), (47, -1), (48, -1), (49, -1), (50, -1), (51, 33554432), (52, -1)]

Decide 9 with phase True at level 10

After decision at level 10
 pending : [5, 29, 30, 39, 43, 44, 45, 46, 51, 38, 36, 31, 33, 23]
 solution : [7, 8, 10, 15, 9]


New level: 11
 pending : [5, 29, 30, 39, 43, 44, 45, 46, 51, 38, 36, 31, 33, 23]
 solution : [7, 8, 10, 15, 9]


Before reduction : 
 pending  : [5, 29, 30, 39, 43, 44, 45, 46, 51, 38, 36, 31, 33, 23]
 solution : [7, 8, 10, 15, 9]

Essensial at level 11 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 131072), (6, -1), (7, -1), (8, -1), (9, 67108864), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, 67108864), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, 262144), (30, 4096), (31, 8192), (32, -1), (33, 1048576), (34, -1), (35, -1), (36, 1024), (37, -1), (38, 33554432), (39, 2048), (40, -1), (41, -1), (42, -1), (43, 131072), (44, 131072), (45, 16777216), (46, 2097152), (47, -1), (48, -1), (49, -1), (50, -1), (51, 33554432), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 0), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, 0), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, 0), (30, 0), (31, 0), (32, -1), (33, 0), (34, -1), (35, -1), (36, 0), (37, -1), (38, 0), (39, 0), (40, -1), (41, -1), (42, -1), (43, 0), (44, 0), (45, 0), (46, 0), (47, -1), (48, -1), (49, -1), (50, -1), (51, 0), (52, -1)]

Covered at level 11 : {33, 36, 5, 38, 39, 43, 44, 45, 46, 51, 23, 29, 30, 31}

After reduction : 
 pending  : []
 solution : [7, 8, 10, 15, 9]


Before reduction : 
 pending  : []
 solution : [7, 8, 10, 15, 9]

Essensial at level 11 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 0), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, 0), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, 0), (30, 0), (31, 0), (32, -1), (33, 0), (34, -1), (35, -1), (36, 0), (37, -1), (38, 0), (39, 0), (40, -1), (41, -1), (42, -1), (43, 0), (44, 0), (45, 0), (46, 0), (47, -1), (48, -1), (49, -1), (50, -1), (51, 0), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 11 : set()

After reduction : 
 pending  : []
 solution : [7, 8, 10, 15, 9]


Solution : [7, 8, 10, 15, 9] has cost 25.


Before backtrack at level 11
 pending : []
 solution : [7, 8, 10, 15, 9]

After backtrack at level 11
 pending : [5, 29, 30, 39, 43, 44, 45, 46, 51, 38, 36, 31, 33, 23]
 solution : [7, 8, 10, 15, 9]


Invert decision for 9 at level 10


New level: 11
 pending : [5, 29, 30, 39, 43, 44, 45, 46, 51, 38, 36, 31, 33, 23]
 solution : [7, 8, 10, 15]


Before reduction : 
 pending  : [5, 29, 30, 39, 43, 44, 45, 46, 51, 38, 36, 31, 33, 23]
 solution : [7, 8, 10, 15]

Essensial at level 11 : {23}

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 0), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, 0), (30, 0), (31, 0), (32, -1), (33, 0), (34, -1), (35, -1), (36, 0), (37, -1), (38, 0), (39, 0), (40, -1), (41, -1), (42, -1), (43, 0), (44, 0), (45, 0), (46, 0), (47, -1), (48, -1), (49, -1), (50, -1), (51, 0), (52, -1)]

Covered at level 11 : {33, 36, 5, 38, 39, 43, 44, 45, 46, 51, 29, 30, 31}

After reduction : 
 pending  : []
 solution : [7, 8, 10, 15, 23]


Before reduction : 
 pending  : []
 solution : [7, 8, 10, 15, 23]

Essensial at level 11 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 0), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, 0), (30, 0), (31, 0), (32, -1), (33, 0), (34, -1), (35, -1), (36, 0), (37, -1), (38, 0), (39, 0), (40, -1), (41, -1), (42, -1), (43, 0), (44, 0), (45, 0), (46, 0), (47, -1), (48, -1), (49, -1), (50, -1), (51, 0), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 11 : set()

After reduction : 
 pending  : []
 solution : [7, 8, 10, 15, 23]


Solution : [7, 8, 10, 15, 23] has cost 28.


Before backtrack at level 11
 pending : []
 solution : [7, 8, 10, 15, 23]

After backtrack at level 11
 pending : [23, 5, 29, 30, 39, 43, 44, 45, 46, 51, 38, 36, 31, 33]
 solution : [7, 8, 10, 15]


Before backtrack at level 10
 pending : [23, 5, 29, 30, 39, 43, 44, 45, 46, 51, 38, 36, 31, 33]
 solution : [7, 8, 10, 15]

After backtrack at level 10
 pending : [23, 5, 29, 30, 39, 43, 44, 45, 46, 51, 38, 36, 31, 33, 26, 41, 6, 21, 20, 17, 14, 19, 16, 18, 9]
 solution : [7, 8, 10, 15]


Invert decision for 15 at level 9


New level: 10
 pending : [23, 5, 29, 30, 39, 43, 44, 45, 46, 51, 38, 36, 31, 33, 26, 41, 6, 21, 20, 17, 14, 19, 16, 18, 9]
 solution : [7, 8, 10]


Before reduction : 
 pending  : [23, 5, 29, 30, 39, 43, 44, 45, 46, 51, 38, 36, 31, 33, 26, 41, 6, 21, 20, 17, 14, 19, 16, 18, 9]
 solution : [7, 8, 10]

Essensial at level 10 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 524288), (6, 131072), (7, -1), (8, -1), (9, 67108864), (10, -1), (11, -1), (12, -1), (13, -1), (14, 1048576), (15, -1), (16, 2097152), (17, 32768), (18, 8388608), (19, 4194304), (20, 65536), (21, 139264), (22, -1), (23, 67108864), (24, -1), (25, -1), (26, 524288), (27, -1), (28, -1), (29, 524288), (30, 8192), (31, 8192), (32, -1), (33, 1048576), (34, -1), (35, -1), (36, 33554432), (37, -1), (38, 67108864), (39, 8192), (40, -1), (41, 524288), (42, -1), (43, 262144), (44, 262144), (45, 33554432), (46, 8388608), (47, -1), (48, -1), (49, -1), (50, -1), (51, 33554432), (52, -1)]

Covered at level 10 : set()

After reduction : 
 pending  : [23, 5, 29, 30, 39, 43, 44, 45, 46, 51, 38, 36, 31, 33, 26, 41, 6, 21, 20, 17, 14, 19, 16, 18, 9]
 solution : [7, 8, 10]


Solution : [7, 8, 10] has cost 14.


Decide in level 10 among pending : [23, 5, 29, 30, 39, 43, 44, 45, 46, 51, 38, 36, 31, 33, 26, 41, 6, 21, 20, 17, 14, 19, 16, 18, 9]

Coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 524288), (6, 131072), (7, -1), (8, -1), (9, 67108864), (10, -1), (11, -1), (12, -1), (13, -1), (14, 1048576), (15, -1), (16, 2097152), (17, 32768), (18, 8388608), (19, 4194304), (20, 65536), (21, 139264), (22, -1), (23, 67108864), (24, -1), (25, -1), (26, 524288), (27, -1), (28, -1), (29, 524288), (30, 8192), (31, 8192), (32, -1), (33, 1048576), (34, -1), (35, -1), (36, 33554432), (37, -1), (38, 67108864), (39, 8192), (40, -1), (41, 524288), (42, -1), (43, 262144), (44, 262144), (45, 33554432), (46, 8388608), (47, -1), (48, -1), (49, -1), (50, -1), (51, 33554432), (52, -1)]

Decide 23 with phase True at level 10

After decision at level 10
 pending : [5, 29, 30, 39, 43, 44, 45, 46, 51, 38, 36, 31, 33, 26, 41, 6, 21, 20, 17, 14, 19, 16, 18, 9]
 solution : [7, 8, 10, 23]


New level: 11
 pending : [5, 29, 30, 39, 43, 44, 45, 46, 51, 38, 36, 31, 33, 26, 41, 6, 21, 20, 17, 14, 19, 16, 18, 9]
 solution : [7, 8, 10, 23]


Before reduction : 
 pending  : [5, 29, 30, 39, 43, 44, 45, 46, 51, 38, 36, 31, 33, 26, 41, 6, 21, 20, 17, 14, 19, 16, 18, 9]
 solution : [7, 8, 10, 23]

Essensial at level 11 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 524288), (6, 131072), (7, -1), (8, -1), (9, 67108864), (10, -1), (11, -1), (12, -1), (13, -1), (14, 1048576), (15, -1), (16, 2097152), (17, 32768), (18, 8388608), (19, 4194304), (20, 65536), (21, 139264), (22, -1), (23, 67108864), (24, -1), (25, -1), (26, 524288), (27, -1), (28, -1), (29, 524288), (30, 8192), (31, 8192), (32, -1), (33, 1048576), (34, -1), (35, -1), (36, 33554432), (37, -1), (38, 67108864), (39, 8192), (40, -1), (41, 524288), (42, -1), (43, 262144), (44, 262144), (45, 33554432), (46, 8388608), (47, -1), (48, -1), (49, -1), (50, -1), (51, 33554432), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 0), (6, 65536), (7, -1), (8, -1), (9, 0), (10, -1), (11, -1), (12, -1), (13, -1), (14, 1048576), (15, -1), (16, 2097152), (17, 32768), (18, 4194304), (19, 2097152), (20, 32768), (21, 67584), (22, -1), (23, -1), (24, -1), (25, -1), (26, 524288), (27, -1), (28, -1), (29, 0), (30, 0), (31, 0), (32, -1), (33, 0), (34, -1), (35, -1), (36, 262144), (37, -1), (38, 0), (39, 0), (40, -1), (41, 524288), (42, -1), (43, 0), (44, 0), (45, 0), (46, 0), (47, -1), (48, -1), (49, -1), (50, -1), (51, 0), (52, -1)]

Covered at level 11 : {33, 5, 38, 39, 9, 43, 44, 45, 46, 51, 29, 30, 31}

After reduction : 
 pending  : [36, 26, 41, 6, 21, 20, 17, 14, 19, 16, 18]
 solution : [7, 8, 10, 23]


Before reduction : 
 pending  : [36, 26, 41, 6, 21, 20, 17, 14, 19, 16, 18]
 solution : [7, 8, 10, 23]

Essensial at level 11 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 0), (6, 65536), (7, -1), (8, -1), (9, 0), (10, -1), (11, -1), (12, -1), (13, -1), (14, 1048576), (15, -1), (16, 2097152), (17, 32768), (18, 4194304), (19, 2097152), (20, 32768), (21, 67584), (22, -1), (23, -1), (24, -1), (25, -1), (26, 524288), (27, -1), (28, -1), (29, 0), (30, 0), (31, 0), (32, -1), (33, 0), (34, -1), (35, -1), (36, 262144), (37, -1), (38, 0), (39, 0), (40, -1), (41, 524288), (42, -1), (43, 0), (44, 0), (45, 0), (46, 0), (47, -1), (48, -1), (49, -1), (50, -1), (51, 0), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, 65536), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 1048576), (15, -1), (16, 2097152), (17, 32768), (18, 4194304), (19, 2097152), (20, 32768), (21, 67584), (22, -1), (23, -1), (24, -1), (25, -1), (26, 524288), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, 262144), (37, -1), (38, -1), (39, -1), (40, -1), (41, 524288), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 11 : set()

After reduction : 
 pending  : [36, 26, 41, 6, 21, 20, 17, 14, 19, 16, 18]
 solution : [7, 8, 10, 23]


Solution : [7, 8, 10, 23] has cost 21.


Decide in level 11 among pending : [36, 26, 41, 6, 21, 20, 17, 14, 19, 16, 18]

Coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, 65536), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 1048576), (15, -1), (16, 2097152), (17, 32768), (18, 4194304), (19, 2097152), (20, 32768), (21, 67584), (22, -1), (23, -1), (24, -1), (25, -1), (26, 524288), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, 262144), (37, -1), (38, -1), (39, -1), (40, -1), (41, 524288), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Decide 18 with phase True at level 11

After decision at level 11
 pending : [36, 26, 41, 6, 21, 20, 17, 14, 19, 16]
 solution : [7, 8, 10, 23, 18]


New level: 12
 pending : [36, 26, 41, 6, 21, 20, 17, 14, 19, 16]
 solution : [7, 8, 10, 23, 18]


Before reduction : 
 pending  : [36, 26, 41, 6, 21, 20, 17, 14, 19, 16]
 solution : [7, 8, 10, 23, 18]

Essensial at level 12 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, 65536), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 1048576), (15, -1), (16, 2097152), (17, 32768), (18, 4194304), (19, 2097152), (20, 32768), (21, 67584), (22, -1), (23, -1), (24, -1), (25, -1), (26, 524288), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, 262144), (37, -1), (38, -1), (39, -1), (40, -1), (41, 524288), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, 0), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 8192), (15, -1), (16, 32768), (17, 8192), (18, -1), (19, 0), (20, 0), (21, 0), (22, -1), (23, -1), (24, -1), (25, -1), (26, 2048), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, 1024), (37, -1), (38, -1), (39, -1), (40, -1), (41, 2048), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 12 : {19, 20, 21, 6}

After reduction : 
 pending  : [36, 26, 41, 17, 14, 16]
 solution : [7, 8, 10, 23, 18]


Before reduction : 
 pending  : [36, 26, 41, 17, 14, 16]
 solution : [7, 8, 10, 23, 18]

Essensial at level 12 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, 0), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 8192), (15, -1), (16, 32768), (17, 8192), (18, -1), (19, 0), (20, 0), (21, 0), (22, -1), (23, -1), (24, -1), (25, -1), (26, 2048), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, 1024), (37, -1), (38, -1), (39, -1), (40, -1), (41, 2048), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 8192), (15, -1), (16, 32768), (17, 8192), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, 2048), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, 1024), (37, -1), (38, -1), (39, -1), (40, -1), (41, 2048), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 12 : set()

After reduction : 
 pending  : [36, 26, 41, 17, 14, 16]
 solution : [7, 8, 10, 23, 18]


Solution : [7, 8, 10, 23, 18] has cost 30.


Before backtrack at level 12
 pending : [36, 26, 41, 17, 14, 16]
 solution : [7, 8, 10, 23, 18]

After backtrack at level 12
 pending : [36, 26, 41, 17, 14, 16, 6, 21, 20, 19]
 solution : [7, 8, 10, 23, 18]


Invert decision for 18 at level 11


New level: 12
 pending : [36, 26, 41, 17, 14, 16, 6, 21, 20, 19]
 solution : [7, 8, 10, 23]


Before reduction : 
 pending  : [36, 26, 41, 17, 14, 16, 6, 21, 20, 19]
 solution : [7, 8, 10, 23]

Essensial at level 12 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 8192), (15, -1), (16, 32768), (17, 8192), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, 2048), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, 1024), (37, -1), (38, -1), (39, -1), (40, -1), (41, 2048), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, 65536), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 1048576), (15, -1), (16, 2097152), (17, 32768), (18, -1), (19, 2097152), (20, 32768), (21, 67584), (22, -1), (23, -1), (24, -1), (25, -1), (26, 524288), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, 262144), (37, -1), (38, -1), (39, -1), (40, -1), (41, 524288), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 12 : set()

After reduction : 
 pending  : [36, 26, 41, 17, 14, 16, 6, 21, 20, 19]
 solution : [7, 8, 10, 23]


Solution : [7, 8, 10, 23] has cost 21.


Decide in level 12 among pending : [36, 26, 41, 17, 14, 16, 6, 21, 20, 19]

Coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, 65536), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 1048576), (15, -1), (16, 2097152), (17, 32768), (18, -1), (19, 2097152), (20, 32768), (21, 67584), (22, -1), (23, -1), (24, -1), (25, -1), (26, 524288), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, 262144), (37, -1), (38, -1), (39, -1), (40, -1), (41, 524288), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Decide 16 with phase True at level 12

After decision at level 12
 pending : [36, 26, 41, 17, 14, 6, 21, 20, 19]
 solution : [7, 8, 10, 23, 16]


New level: 13
 pending : [36, 26, 41, 17, 14, 6, 21, 20, 19]
 solution : [7, 8, 10, 23, 16]


Before reduction : 
 pending  : [36, 26, 41, 17, 14, 6, 21, 20, 19]
 solution : [7, 8, 10, 23, 16]

Essensial at level 13 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, 65536), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 1048576), (15, -1), (16, 2097152), (17, 32768), (18, -1), (19, 2097152), (20, 32768), (21, 67584), (22, -1), (23, -1), (24, -1), (25, -1), (26, 524288), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, 262144), (37, -1), (38, -1), (39, -1), (40, -1), (41, 524288), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, 32768), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 0), (15, -1), (16, -1), (17, 0), (18, -1), (19, 524288), (20, 0), (21, 33280), (22, -1), (23, -1), (24, -1), (25, -1), (26, 131072), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, 512), (37, -1), (38, -1), (39, -1), (40, -1), (41, 131072), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 13 : {17, 20, 14}

After reduction : 
 pending  : [36, 26, 41, 6, 21, 19]
 solution : [7, 8, 10, 23, 16]


Before reduction : 
 pending  : [36, 26, 41, 6, 21, 19]
 solution : [7, 8, 10, 23, 16]

Essensial at level 13 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, 32768), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 0), (15, -1), (16, -1), (17, 0), (18, -1), (19, 524288), (20, 0), (21, 33280), (22, -1), (23, -1), (24, -1), (25, -1), (26, 131072), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, 512), (37, -1), (38, -1), (39, -1), (40, -1), (41, 131072), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, 32768), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, 524288), (20, -1), (21, 33280), (22, -1), (23, -1), (24, -1), (25, -1), (26, 131072), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, 512), (37, -1), (38, -1), (39, -1), (40, -1), (41, 131072), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 13 : set()

After reduction : 
 pending  : [36, 26, 41, 6, 21, 19]
 solution : [7, 8, 10, 23, 16]


Solution : [7, 8, 10, 23, 16] has cost 28.


Before backtrack at level 13
 pending : [36, 26, 41, 6, 21, 19]
 solution : [7, 8, 10, 23, 16]

After backtrack at level 13
 pending : [36, 26, 41, 6, 21, 19, 17, 14, 20]
 solution : [7, 8, 10, 23, 16]


Invert decision for 16 at level 12


New level: 13
 pending : [36, 26, 41, 6, 21, 19, 17, 14, 20]
 solution : [7, 8, 10, 23]


Before reduction : 
 pending  : [36, 26, 41, 6, 21, 19, 17, 14, 20]
 solution : [7, 8, 10, 23]

Essensial at level 13 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, 32768), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, 524288), (20, -1), (21, 33280), (22, -1), (23, -1), (24, -1), (25, -1), (26, 131072), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, 512), (37, -1), (38, -1), (39, -1), (40, -1), (41, 131072), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, 65536), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 1048576), (15, -1), (16, -1), (17, 32768), (18, -1), (19, 2097152), (20, 32768), (21, 67584), (22, -1), (23, -1), (24, -1), (25, -1), (26, 524288), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, 262144), (37, -1), (38, -1), (39, -1), (40, -1), (41, 524288), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 13 : set()

After reduction : 
 pending  : [36, 26, 41, 6, 21, 19, 17, 14, 20]
 solution : [7, 8, 10, 23]


Solution : [7, 8, 10, 23] has cost 21.


Decide in level 13 among pending : [36, 26, 41, 6, 21, 19, 17, 14, 20]

Coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, 65536), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 1048576), (15, -1), (16, -1), (17, 32768), (18, -1), (19, 2097152), (20, 32768), (21, 67584), (22, -1), (23, -1), (24, -1), (25, -1), (26, 524288), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, 262144), (37, -1), (38, -1), (39, -1), (40, -1), (41, 524288), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Decide 19 with phase True at level 13

After decision at level 13
 pending : [36, 26, 41, 6, 21, 17, 14, 20]
 solution : [7, 8, 10, 23, 19]


New level: 14
 pending : [36, 26, 41, 6, 21, 17, 14, 20]
 solution : [7, 8, 10, 23, 19]


Before reduction : 
 pending  : [36, 26, 41, 6, 21, 17, 14, 20]
 solution : [7, 8, 10, 23, 19]

Essensial at level 14 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, 65536), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 1048576), (15, -1), (16, -1), (17, 32768), (18, -1), (19, 2097152), (20, 32768), (21, 67584), (22, -1), (23, -1), (24, -1), (25, -1), (26, 524288), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, 262144), (37, -1), (38, -1), (39, -1), (40, -1), (41, 524288), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, 0), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 8192), (15, -1), (16, -1), (17, 8192), (18, -1), (19, -1), (20, 0), (21, 0), (22, -1), (23, -1), (24, -1), (25, -1), (26, 2048), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, 1024), (37, -1), (38, -1), (39, -1), (40, -1), (41, 2048), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 14 : {20, 21, 6}

After reduction : 
 pending  : [36, 26, 41, 17, 14]
 solution : [7, 8, 10, 23, 19]


Before reduction : 
 pending  : [36, 26, 41, 17, 14]
 solution : [7, 8, 10, 23, 19]

Essensial at level 14 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, 0), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 8192), (15, -1), (16, -1), (17, 8192), (18, -1), (19, -1), (20, 0), (21, 0), (22, -1), (23, -1), (24, -1), (25, -1), (26, 2048), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, 1024), (37, -1), (38, -1), (39, -1), (40, -1), (41, 2048), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 8192), (15, -1), (16, -1), (17, 8192), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, 2048), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, 1024), (37, -1), (38, -1), (39, -1), (40, -1), (41, 2048), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 14 : set()

After reduction : 
 pending  : [36, 26, 41, 17, 14]
 solution : [7, 8, 10, 23, 19]


Solution : [7, 8, 10, 23, 19] has cost 30.


Before backtrack at level 14
 pending : [36, 26, 41, 17, 14]
 solution : [7, 8, 10, 23, 19]

After backtrack at level 14
 pending : [36, 26, 41, 17, 14, 6, 21, 20]
 solution : [7, 8, 10, 23, 19]


Invert decision for 19 at level 13


New level: 14
 pending : [36, 26, 41, 17, 14, 6, 21, 20]
 solution : [7, 8, 10, 23]


Before reduction : 
 pending  : [36, 26, 41, 17, 14, 6, 21, 20]
 solution : [7, 8, 10, 23]

Essensial at level 14 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 8192), (15, -1), (16, -1), (17, 8192), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, 2048), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, 1024), (37, -1), (38, -1), (39, -1), (40, -1), (41, 2048), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, 65536), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 1048576), (15, -1), (16, -1), (17, 32768), (18, -1), (19, -1), (20, 32768), (21, 67584), (22, -1), (23, -1), (24, -1), (25, -1), (26, 524288), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, 262144), (37, -1), (38, -1), (39, -1), (40, -1), (41, 524288), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 14 : set()

After reduction : 
 pending  : [36, 26, 41, 17, 14, 6, 21, 20]
 solution : [7, 8, 10, 23]


Solution : [7, 8, 10, 23] has cost 21.


Decide in level 14 among pending : [36, 26, 41, 17, 14, 6, 21, 20]

Coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, 65536), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 1048576), (15, -1), (16, -1), (17, 32768), (18, -1), (19, -1), (20, 32768), (21, 67584), (22, -1), (23, -1), (24, -1), (25, -1), (26, 524288), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, 262144), (37, -1), (38, -1), (39, -1), (40, -1), (41, 524288), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Decide 14 with phase True at level 14

After decision at level 14
 pending : [36, 26, 41, 17, 6, 21, 20]
 solution : [7, 8, 10, 23, 14]


New level: 15
 pending : [36, 26, 41, 17, 6, 21, 20]
 solution : [7, 8, 10, 23, 14]


Before reduction : 
 pending  : [36, 26, 41, 17, 6, 21, 20]
 solution : [7, 8, 10, 23, 14]

Essensial at level 15 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, 65536), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 1048576), (15, -1), (16, -1), (17, 32768), (18, -1), (19, -1), (20, 32768), (21, 67584), (22, -1), (23, -1), (24, -1), (25, -1), (26, 524288), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, 262144), (37, -1), (38, -1), (39, -1), (40, -1), (41, 524288), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, 32768), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, 0), (18, -1), (19, -1), (20, 0), (21, 33280), (22, -1), (23, -1), (24, -1), (25, -1), (26, 131072), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, 512), (37, -1), (38, -1), (39, -1), (40, -1), (41, 131072), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 15 : {17, 20}

After reduction : 
 pending  : [36, 26, 41, 6, 21]
 solution : [7, 8, 10, 23, 14]


Before reduction : 
 pending  : [36, 26, 41, 6, 21]
 solution : [7, 8, 10, 23, 14]

Essensial at level 15 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, 32768), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, 0), (18, -1), (19, -1), (20, 0), (21, 33280), (22, -1), (23, -1), (24, -1), (25, -1), (26, 131072), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, 512), (37, -1), (38, -1), (39, -1), (40, -1), (41, 131072), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, 32768), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, 33280), (22, -1), (23, -1), (24, -1), (25, -1), (26, 131072), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, 512), (37, -1), (38, -1), (39, -1), (40, -1), (41, 131072), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 15 : set()

After reduction : 
 pending  : [36, 26, 41, 6, 21]
 solution : [7, 8, 10, 23, 14]


Solution : [7, 8, 10, 23, 14] has cost 28.


Before backtrack at level 15
 pending : [36, 26, 41, 6, 21]
 solution : [7, 8, 10, 23, 14]

After backtrack at level 15
 pending : [36, 26, 41, 6, 21, 17, 20]
 solution : [7, 8, 10, 23, 14]


Invert decision for 14 at level 14


New level: 15
 pending : [36, 26, 41, 6, 21, 17, 20]
 solution : [7, 8, 10, 23]


Before reduction : 
 pending  : [36, 26, 41, 6, 21, 17, 20]
 solution : [7, 8, 10, 23]

Essensial at level 15 : {17}

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, 32768), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, 33280), (22, -1), (23, -1), (24, -1), (25, -1), (26, 131072), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, 512), (37, -1), (38, -1), (39, -1), (40, -1), (41, 131072), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, 65536), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, 16384), (21, 67584), (22, -1), (23, -1), (24, -1), (25, -1), (26, 524288), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, 262144), (37, -1), (38, -1), (39, -1), (40, -1), (41, 524288), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 15 : set()

After reduction : 
 pending  : [36, 26, 41, 6, 21, 20]
 solution : [7, 8, 10, 23, 17]


Before reduction : 
 pending  : [36, 26, 41, 6, 21, 20]
 solution : [7, 8, 10, 23, 17]

Essensial at level 15 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, 65536), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, 16384), (21, 67584), (22, -1), (23, -1), (24, -1), (25, -1), (26, 524288), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, 262144), (37, -1), (38, -1), (39, -1), (40, -1), (41, 524288), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, 65536), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, 16384), (21, 67584), (22, -1), (23, -1), (24, -1), (25, -1), (26, 524288), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, 262144), (37, -1), (38, -1), (39, -1), (40, -1), (41, 524288), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 15 : set()

After reduction : 
 pending  : [36, 26, 41, 6, 21, 20]
 solution : [7, 8, 10, 23, 17]


Solution : [7, 8, 10, 23, 17] has cost 28.


Before backtrack at level 15
 pending : [36, 26, 41, 6, 21, 20]
 solution : [7, 8, 10, 23, 17]

After backtrack at level 15
 pending : [36, 26, 41, 6, 21, 20, 17]
 solution : [7, 8, 10, 23]


Before backtrack at level 14
 pending : [36, 26, 41, 6, 21, 20, 17]
 solution : [7, 8, 10, 23]

After backtrack at level 14
 pending : [36, 26, 41, 6, 21, 20, 17, 14]
 solution : [7, 8, 10, 23]


Before backtrack at level 13
 pending : [36, 26, 41, 6, 21, 20, 17, 14]
 solution : [7, 8, 10, 23]

After backtrack at level 13
 pending : [36, 26, 41, 6, 21, 20, 17, 14, 19]
 solution : [7, 8, 10, 23]


Before backtrack at level 12
 pending : [36, 26, 41, 6, 21, 20, 17, 14, 19]
 solution : [7, 8, 10, 23]

After backtrack at level 12
 pending : [36, 26, 41, 6, 21, 20, 17, 14, 19, 16]
 solution : [7, 8, 10, 23]


Before backtrack at level 11
 pending : [36, 26, 41, 6, 21, 20, 17, 14, 19, 16]
 solution : [7, 8, 10, 23]

After backtrack at level 11
 pending : [36, 26, 41, 6, 21, 20, 17, 14, 19, 16, 5, 29, 30, 39, 43, 44, 45, 46, 51, 38, 31, 33, 9, 18]
 solution : [7, 8, 10, 23]


Invert decision for 23 at level 10


New level: 11
 pending : [36, 26, 41, 6, 21, 20, 17, 14, 19, 16, 5, 29, 30, 39, 43, 44, 45, 46, 51, 38, 31, 33, 9, 18]
 solution : [7, 8, 10]


Before reduction : 
 pending  : [36, 26, 41, 6, 21, 20, 17, 14, 19, 16, 5, 29, 30, 39, 43, 44, 45, 46, 51, 38, 31, 33, 9, 18]
 solution : [7, 8, 10]

Essensial at level 11 : {9}

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, 65536), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, 16384), (21, 67584), (22, -1), (23, -1), (24, -1), (25, -1), (26, 524288), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, 262144), (37, -1), (38, -1), (39, -1), (40, -1), (41, 524288), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 0), (6, 65536), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 1048576), (15, -1), (16, 2097152), (17, 32768), (18, 4194304), (19, 2097152), (20, 32768), (21, 67584), (22, -1), (23, -1), (24, -1), (25, -1), (26, 524288), (27, -1), (28, -1), (29, 0), (30, 0), (31, 0), (32, -1), (33, 0), (34, -1), (35, -1), (36, 32768), (37, -1), (38, 0), (39, 0), (40, -1), (41, 524288), (42, -1), (43, 0), (44, 0), (45, 0), (46, 0), (47, -1), (48, -1), (49, -1), (50, -1), (51, 0), (52, -1)]

Covered at level 11 : {33, 5, 38, 39, 43, 44, 45, 46, 51, 29, 30, 31}

After reduction : 
 pending  : [36, 26, 41, 6, 21, 20, 17, 14, 19, 16, 18]
 solution : [7, 8, 10, 9]


Before reduction : 
 pending  : [36, 26, 41, 6, 21, 20, 17, 14, 19, 16, 18]
 solution : [7, 8, 10, 9]

Essensial at level 11 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 0), (6, 65536), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 1048576), (15, -1), (16, 2097152), (17, 32768), (18, 4194304), (19, 2097152), (20, 32768), (21, 67584), (22, -1), (23, -1), (24, -1), (25, -1), (26, 524288), (27, -1), (28, -1), (29, 0), (30, 0), (31, 0), (32, -1), (33, 0), (34, -1), (35, -1), (36, 32768), (37, -1), (38, 0), (39, 0), (40, -1), (41, 524288), (42, -1), (43, 0), (44, 0), (45, 0), (46, 0), (47, -1), (48, -1), (49, -1), (50, -1), (51, 0), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, 65536), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 1048576), (15, -1), (16, 2097152), (17, 32768), (18, 4194304), (19, 2097152), (20, 32768), (21, 67584), (22, -1), (23, -1), (24, -1), (25, -1), (26, 524288), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, 32768), (37, -1), (38, -1), (39, -1), (40, -1), (41, 524288), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 11 : set()

After reduction : 
 pending  : [36, 26, 41, 6, 21, 20, 17, 14, 19, 16, 18]
 solution : [7, 8, 10, 9]


Solution : [7, 8, 10, 9] has cost 18.


Decide in level 11 among pending : [36, 26, 41, 6, 21, 20, 17, 14, 19, 16, 18]

Coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, 65536), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 1048576), (15, -1), (16, 2097152), (17, 32768), (18, 4194304), (19, 2097152), (20, 32768), (21, 67584), (22, -1), (23, -1), (24, -1), (25, -1), (26, 524288), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, 32768), (37, -1), (38, -1), (39, -1), (40, -1), (41, 524288), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Decide 18 with phase True at level 11

After decision at level 11
 pending : [36, 26, 41, 6, 21, 20, 17, 14, 19, 16]
 solution : [7, 8, 10, 9, 18]


New level: 12
 pending : [36, 26, 41, 6, 21, 20, 17, 14, 19, 16]
 solution : [7, 8, 10, 9, 18]


Before reduction : 
 pending  : [36, 26, 41, 6, 21, 20, 17, 14, 19, 16]
 solution : [7, 8, 10, 9, 18]

Essensial at level 12 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, 65536), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 1048576), (15, -1), (16, 2097152), (17, 32768), (18, 4194304), (19, 2097152), (20, 32768), (21, 67584), (22, -1), (23, -1), (24, -1), (25, -1), (26, 524288), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, 32768), (37, -1), (38, -1), (39, -1), (40, -1), (41, 524288), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, 0), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 8192), (15, -1), (16, 32768), (17, 8192), (18, -1), (19, 0), (20, 0), (21, 0), (22, -1), (23, -1), (24, -1), (25, -1), (26, 2048), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, 1024), (37, -1), (38, -1), (39, -1), (40, -1), (41, 2048), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 12 : {19, 20, 21, 6}

After reduction : 
 pending  : [36, 26, 41, 17, 14, 16]
 solution : [7, 8, 10, 9, 18]


Before reduction : 
 pending  : [36, 26, 41, 17, 14, 16]
 solution : [7, 8, 10, 9, 18]

Essensial at level 12 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, 0), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 8192), (15, -1), (16, 32768), (17, 8192), (18, -1), (19, 0), (20, 0), (21, 0), (22, -1), (23, -1), (24, -1), (25, -1), (26, 2048), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, 1024), (37, -1), (38, -1), (39, -1), (40, -1), (41, 2048), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 8192), (15, -1), (16, 32768), (17, 8192), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, 2048), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, 1024), (37, -1), (38, -1), (39, -1), (40, -1), (41, 2048), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 12 : set()

After reduction : 
 pending  : [36, 26, 41, 17, 14, 16]
 solution : [7, 8, 10, 9, 18]


Solution : [7, 8, 10, 9, 18] has cost 27.


Before backtrack at level 12
 pending : [36, 26, 41, 17, 14, 16]
 solution : [7, 8, 10, 9, 18]

After backtrack at level 12
 pending : [36, 26, 41, 17, 14, 16, 6, 21, 20, 19]
 solution : [7, 8, 10, 9, 18]


Invert decision for 18 at level 11


New level: 12
 pending : [36, 26, 41, 17, 14, 16, 6, 21, 20, 19]
 solution : [7, 8, 10, 9]


Before reduction : 
 pending  : [36, 26, 41, 17, 14, 16, 6, 21, 20, 19]
 solution : [7, 8, 10, 9]

Essensial at level 12 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 8192), (15, -1), (16, 32768), (17, 8192), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, 2048), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, 1024), (37, -1), (38, -1), (39, -1), (40, -1), (41, 2048), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, 65536), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 1048576), (15, -1), (16, 2097152), (17, 32768), (18, -1), (19, 2097152), (20, 32768), (21, 67584), (22, -1), (23, -1), (24, -1), (25, -1), (26, 524288), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, 32768), (37, -1), (38, -1), (39, -1), (40, -1), (41, 524288), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 12 : set()

After reduction : 
 pending  : [36, 26, 41, 17, 14, 16, 6, 21, 20, 19]
 solution : [7, 8, 10, 9]


Solution : [7, 8, 10, 9] has cost 18.


Decide in level 12 among pending : [36, 26, 41, 17, 14, 16, 6, 21, 20, 19]

Coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, 65536), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 1048576), (15, -1), (16, 2097152), (17, 32768), (18, -1), (19, 2097152), (20, 32768), (21, 67584), (22, -1), (23, -1), (24, -1), (25, -1), (26, 524288), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, 32768), (37, -1), (38, -1), (39, -1), (40, -1), (41, 524288), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Decide 16 with phase True at level 12

After decision at level 12
 pending : [36, 26, 41, 17, 14, 6, 21, 20, 19]
 solution : [7, 8, 10, 9, 16]


New level: 13
 pending : [36, 26, 41, 17, 14, 6, 21, 20, 19]
 solution : [7, 8, 10, 9, 16]


Before reduction : 
 pending  : [36, 26, 41, 17, 14, 6, 21, 20, 19]
 solution : [7, 8, 10, 9, 16]

Essensial at level 13 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, 65536), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 1048576), (15, -1), (16, 2097152), (17, 32768), (18, -1), (19, 2097152), (20, 32768), (21, 67584), (22, -1), (23, -1), (24, -1), (25, -1), (26, 524288), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, 32768), (37, -1), (38, -1), (39, -1), (40, -1), (41, 524288), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, 32768), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 0), (15, -1), (16, -1), (17, 0), (18, -1), (19, 524288), (20, 0), (21, 33280), (22, -1), (23, -1), (24, -1), (25, -1), (26, 131072), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, 512), (37, -1), (38, -1), (39, -1), (40, -1), (41, 131072), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 13 : {17, 20, 14}

After reduction : 
 pending  : [36, 26, 41, 6, 21, 19]
 solution : [7, 8, 10, 9, 16]


Before reduction : 
 pending  : [36, 26, 41, 6, 21, 19]
 solution : [7, 8, 10, 9, 16]

Essensial at level 13 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, 32768), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 0), (15, -1), (16, -1), (17, 0), (18, -1), (19, 524288), (20, 0), (21, 33280), (22, -1), (23, -1), (24, -1), (25, -1), (26, 131072), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, 512), (37, -1), (38, -1), (39, -1), (40, -1), (41, 131072), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, 32768), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, 524288), (20, -1), (21, 33280), (22, -1), (23, -1), (24, -1), (25, -1), (26, 131072), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, 512), (37, -1), (38, -1), (39, -1), (40, -1), (41, 131072), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 13 : set()

After reduction : 
 pending  : [36, 26, 41, 6, 21, 19]
 solution : [7, 8, 10, 9, 16]


Solution : [7, 8, 10, 9, 16] has cost 25.


Before backtrack at level 13
 pending : [36, 26, 41, 6, 21, 19]
 solution : [7, 8, 10, 9, 16]

After backtrack at level 13
 pending : [36, 26, 41, 6, 21, 19, 17, 14, 20]
 solution : [7, 8, 10, 9, 16]


Invert decision for 16 at level 12


New level: 13
 pending : [36, 26, 41, 6, 21, 19, 17, 14, 20]
 solution : [7, 8, 10, 9]


Before reduction : 
 pending  : [36, 26, 41, 6, 21, 19, 17, 14, 20]
 solution : [7, 8, 10, 9]

Essensial at level 13 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, 32768), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, 524288), (20, -1), (21, 33280), (22, -1), (23, -1), (24, -1), (25, -1), (26, 131072), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, 512), (37, -1), (38, -1), (39, -1), (40, -1), (41, 131072), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, 65536), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 1048576), (15, -1), (16, -1), (17, 32768), (18, -1), (19, 2097152), (20, 32768), (21, 67584), (22, -1), (23, -1), (24, -1), (25, -1), (26, 524288), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, 32768), (37, -1), (38, -1), (39, -1), (40, -1), (41, 524288), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 13 : set()

After reduction : 
 pending  : [36, 26, 41, 6, 21, 19, 17, 14, 20]
 solution : [7, 8, 10, 9]


Solution : [7, 8, 10, 9] has cost 18.


Decide in level 13 among pending : [36, 26, 41, 6, 21, 19, 17, 14, 20]

Coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, 65536), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 1048576), (15, -1), (16, -1), (17, 32768), (18, -1), (19, 2097152), (20, 32768), (21, 67584), (22, -1), (23, -1), (24, -1), (25, -1), (26, 524288), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, 32768), (37, -1), (38, -1), (39, -1), (40, -1), (41, 524288), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Decide 19 with phase True at level 13

After decision at level 13
 pending : [36, 26, 41, 6, 21, 17, 14, 20]
 solution : [7, 8, 10, 9, 19]


New level: 14
 pending : [36, 26, 41, 6, 21, 17, 14, 20]
 solution : [7, 8, 10, 9, 19]


Before reduction : 
 pending  : [36, 26, 41, 6, 21, 17, 14, 20]
 solution : [7, 8, 10, 9, 19]

Essensial at level 14 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, 65536), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 1048576), (15, -1), (16, -1), (17, 32768), (18, -1), (19, 2097152), (20, 32768), (21, 67584), (22, -1), (23, -1), (24, -1), (25, -1), (26, 524288), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, 32768), (37, -1), (38, -1), (39, -1), (40, -1), (41, 524288), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, 0), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 8192), (15, -1), (16, -1), (17, 8192), (18, -1), (19, -1), (20, 0), (21, 0), (22, -1), (23, -1), (24, -1), (25, -1), (26, 2048), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, 1024), (37, -1), (38, -1), (39, -1), (40, -1), (41, 2048), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 14 : {20, 21, 6}

After reduction : 
 pending  : [36, 26, 41, 17, 14]
 solution : [7, 8, 10, 9, 19]


Before reduction : 
 pending  : [36, 26, 41, 17, 14]
 solution : [7, 8, 10, 9, 19]

Essensial at level 14 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, 0), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 8192), (15, -1), (16, -1), (17, 8192), (18, -1), (19, -1), (20, 0), (21, 0), (22, -1), (23, -1), (24, -1), (25, -1), (26, 2048), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, 1024), (37, -1), (38, -1), (39, -1), (40, -1), (41, 2048), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 8192), (15, -1), (16, -1), (17, 8192), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, 2048), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, 1024), (37, -1), (38, -1), (39, -1), (40, -1), (41, 2048), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 14 : set()

After reduction : 
 pending  : [36, 26, 41, 17, 14]
 solution : [7, 8, 10, 9, 19]


Solution : [7, 8, 10, 9, 19] has cost 27.


Before backtrack at level 14
 pending : [36, 26, 41, 17, 14]
 solution : [7, 8, 10, 9, 19]

After backtrack at level 14
 pending : [36, 26, 41, 17, 14, 6, 21, 20]
 solution : [7, 8, 10, 9, 19]


Invert decision for 19 at level 13


New level: 14
 pending : [36, 26, 41, 17, 14, 6, 21, 20]
 solution : [7, 8, 10, 9]


Before reduction : 
 pending  : [36, 26, 41, 17, 14, 6, 21, 20]
 solution : [7, 8, 10, 9]

Essensial at level 14 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 8192), (15, -1), (16, -1), (17, 8192), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, 2048), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, 1024), (37, -1), (38, -1), (39, -1), (40, -1), (41, 2048), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, 65536), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 1048576), (15, -1), (16, -1), (17, 32768), (18, -1), (19, -1), (20, 32768), (21, 67584), (22, -1), (23, -1), (24, -1), (25, -1), (26, 524288), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, 32768), (37, -1), (38, -1), (39, -1), (40, -1), (41, 524288), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 14 : set()

After reduction : 
 pending  : [36, 26, 41, 17, 14, 6, 21, 20]
 solution : [7, 8, 10, 9]


Solution : [7, 8, 10, 9] has cost 18.


Decide in level 14 among pending : [36, 26, 41, 17, 14, 6, 21, 20]

Coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, 65536), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 1048576), (15, -1), (16, -1), (17, 32768), (18, -1), (19, -1), (20, 32768), (21, 67584), (22, -1), (23, -1), (24, -1), (25, -1), (26, 524288), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, 32768), (37, -1), (38, -1), (39, -1), (40, -1), (41, 524288), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Decide 14 with phase True at level 14

After decision at level 14
 pending : [36, 26, 41, 17, 6, 21, 20]
 solution : [7, 8, 10, 9, 14]


New level: 15
 pending : [36, 26, 41, 17, 6, 21, 20]
 solution : [7, 8, 10, 9, 14]


Before reduction : 
 pending  : [36, 26, 41, 17, 6, 21, 20]
 solution : [7, 8, 10, 9, 14]

Essensial at level 15 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, 65536), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 1048576), (15, -1), (16, -1), (17, 32768), (18, -1), (19, -1), (20, 32768), (21, 67584), (22, -1), (23, -1), (24, -1), (25, -1), (26, 524288), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, 32768), (37, -1), (38, -1), (39, -1), (40, -1), (41, 524288), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, 32768), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, 0), (18, -1), (19, -1), (20, 0), (21, 33280), (22, -1), (23, -1), (24, -1), (25, -1), (26, 131072), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, 512), (37, -1), (38, -1), (39, -1), (40, -1), (41, 131072), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 15 : {17, 20}

After reduction : 
 pending  : [36, 26, 41, 6, 21]
 solution : [7, 8, 10, 9, 14]


Before reduction : 
 pending  : [36, 26, 41, 6, 21]
 solution : [7, 8, 10, 9, 14]

Essensial at level 15 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, 32768), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, 0), (18, -1), (19, -1), (20, 0), (21, 33280), (22, -1), (23, -1), (24, -1), (25, -1), (26, 131072), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, 512), (37, -1), (38, -1), (39, -1), (40, -1), (41, 131072), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, 32768), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, 33280), (22, -1), (23, -1), (24, -1), (25, -1), (26, 131072), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, 512), (37, -1), (38, -1), (39, -1), (40, -1), (41, 131072), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 15 : set()

After reduction : 
 pending  : [36, 26, 41, 6, 21]
 solution : [7, 8, 10, 9, 14]


Solution : [7, 8, 10, 9, 14] has cost 25.


Before backtrack at level 15
 pending : [36, 26, 41, 6, 21]
 solution : [7, 8, 10, 9, 14]

After backtrack at level 15
 pending : [36, 26, 41, 6, 21, 17, 20]
 solution : [7, 8, 10, 9, 14]


Invert decision for 14 at level 14


New level: 15
 pending : [36, 26, 41, 6, 21, 17, 20]
 solution : [7, 8, 10, 9]


Before reduction : 
 pending  : [36, 26, 41, 6, 21, 17, 20]
 solution : [7, 8, 10, 9]

Essensial at level 15 : {17}

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, 32768), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, 33280), (22, -1), (23, -1), (24, -1), (25, -1), (26, 131072), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, 512), (37, -1), (38, -1), (39, -1), (40, -1), (41, 131072), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, 65536), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, 16384), (21, 67584), (22, -1), (23, -1), (24, -1), (25, -1), (26, 524288), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, 32768), (37, -1), (38, -1), (39, -1), (40, -1), (41, 524288), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 15 : set()

After reduction : 
 pending  : [36, 26, 41, 6, 21, 20]
 solution : [7, 8, 10, 9, 17]


Before reduction : 
 pending  : [36, 26, 41, 6, 21, 20]
 solution : [7, 8, 10, 9, 17]

Essensial at level 15 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, 65536), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, 16384), (21, 67584), (22, -1), (23, -1), (24, -1), (25, -1), (26, 524288), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, 32768), (37, -1), (38, -1), (39, -1), (40, -1), (41, 524288), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, 65536), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, 16384), (21, 67584), (22, -1), (23, -1), (24, -1), (25, -1), (26, 524288), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, 32768), (37, -1), (38, -1), (39, -1), (40, -1), (41, 524288), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 15 : set()

After reduction : 
 pending  : [36, 26, 41, 6, 21, 20]
 solution : [7, 8, 10, 9, 17]


Solution : [7, 8, 10, 9, 17] has cost 25.


Before backtrack at level 15
 pending : [36, 26, 41, 6, 21, 20]
 solution : [7, 8, 10, 9, 17]

After backtrack at level 15
 pending : [36, 26, 41, 6, 21, 20, 17]
 solution : [7, 8, 10, 9]


Before backtrack at level 14
 pending : [36, 26, 41, 6, 21, 20, 17]
 solution : [7, 8, 10, 9]

After backtrack at level 14
 pending : [36, 26, 41, 6, 21, 20, 17, 14]
 solution : [7, 8, 10, 9]


Before backtrack at level 13
 pending : [36, 26, 41, 6, 21, 20, 17, 14]
 solution : [7, 8, 10, 9]

After backtrack at level 13
 pending : [36, 26, 41, 6, 21, 20, 17, 14, 19]
 solution : [7, 8, 10, 9]


Before backtrack at level 12
 pending : [36, 26, 41, 6, 21, 20, 17, 14, 19]
 solution : [7, 8, 10, 9]

After backtrack at level 12
 pending : [36, 26, 41, 6, 21, 20, 17, 14, 19, 16]
 solution : [7, 8, 10, 9]


Before backtrack at level 11
 pending : [36, 26, 41, 6, 21, 20, 17, 14, 19, 16]
 solution : [7, 8, 10, 9]

After backtrack at level 11
 pending : [36, 26, 41, 6, 21, 20, 17, 14, 19, 16, 9, 5, 29, 30, 39, 43, 44, 45, 46, 51, 38, 31, 33, 18]
 solution : [7, 8, 10]


Before backtrack at level 10
 pending : [36, 26, 41, 6, 21, 20, 17, 14, 19, 16, 9, 5, 29, 30, 39, 43, 44, 45, 46, 51, 38, 31, 33, 18]
 solution : [7, 8, 10]

After backtrack at level 10
 pending : [36, 26, 41, 6, 21, 20, 17, 14, 19, 16, 9, 5, 29, 30, 39, 43, 44, 45, 46, 51, 38, 31, 33, 18, 23]
 solution : [7, 8, 10]


Before backtrack at level 9
 pending : [36, 26, 41, 6, 21, 20, 17, 14, 19, 16, 9, 5, 29, 30, 39, 43, 44, 45, 46, 51, 38, 31, 33, 18, 23]
 solution : [7, 8, 10]

After backtrack at level 9
 pending : [36, 26, 41, 6, 21, 20, 17, 14, 19, 16, 9, 5, 29, 30, 39, 43, 44, 45, 46, 51, 38, 31, 33, 18, 23, 15]
 solution : [7, 8, 10]


Before backtrack at level 8
 pending : [36, 26, 41, 6, 21, 20, 17, 14, 19, 16, 9, 5, 29, 30, 39, 43, 44, 45, 46, 51, 38, 31, 33, 18, 23, 15]
 solution : [7, 8, 10]

After backtrack at level 8
 pending : [36, 26, 41, 6, 21, 20, 17, 14, 19, 16, 9, 5, 29, 30, 39, 43, 44, 45, 46, 51, 38, 31, 33, 18, 23, 15, 37]
 solution : [7, 8, 10]


Before backtrack at level 7
 pending : [36, 26, 41, 6, 21, 20, 17, 14, 19, 16, 9, 5, 29, 30, 39, 43, 44, 45, 46, 51, 38, 31, 33, 18, 23, 15, 37]
 solution : [7, 8, 10]

After backtrack at level 7
 pending : [36, 26, 41, 6, 21, 20, 17, 14, 19, 16, 9, 5, 29, 30, 39, 43, 44, 45, 46, 51, 38, 31, 33, 18, 23, 15, 37, 13]
 solution : [7, 8, 10]


Before backtrack at level 6
 pending : [36, 26, 41, 6, 21, 20, 17, 14, 19, 16, 9, 5, 29, 30, 39, 43, 44, 45, 46, 51, 38, 31, 33, 18, 23, 15, 37, 13]
 solution : [7, 8, 10]

After backtrack at level 6
 pending : [36, 26, 41, 6, 21, 20, 17, 14, 19, 16, 9, 5, 29, 30, 39, 43, 44, 45, 46, 51, 38, 31, 33, 18, 23, 15, 37, 13, 24]
 solution : [7, 8, 10]


Before backtrack at level 5
 pending : [36, 26, 41, 6, 21, 20, 17, 14, 19, 16, 9, 5, 29, 30, 39, 43, 44, 45, 46, 51, 38, 31, 33, 18, 23, 15, 37, 13, 24]
 solution : [7, 8, 10]

After backtrack at level 5
 pending : [36, 26, 41, 6, 21, 20, 17, 14, 19, 16, 9, 5, 29, 30, 39, 43, 44, 45, 46, 51, 38, 31, 33, 18, 23, 15, 37, 13, 24, 28]
 solution : [7, 8, 10]


Before backtrack at level 4
 pending : [36, 26, 41, 6, 21, 20, 17, 14, 19, 16, 9, 5, 29, 30, 39, 43, 44, 45, 46, 51, 38, 31, 33, 18, 23, 15, 37, 13, 24, 28]
 solution : [7, 8, 10]

After backtrack at level 4
 pending : [36, 26, 41, 6, 21, 20, 17, 14, 19, 16, 9, 5, 29, 30, 39, 43, 44, 45, 46, 51, 38, 31, 33, 18, 23, 15, 37, 13, 24, 28, 32]
 solution : [7, 8, 10]


Before backtrack at level 3
 pending : [36, 26, 41, 6, 21, 20, 17, 14, 19, 16, 9, 5, 29, 30, 39, 43, 44, 45, 46, 51, 38, 31, 33, 18, 23, 15, 37, 13, 24, 28, 32]
 solution : [7, 8, 10]

After backtrack at level 3
 pending : [36, 26, 41, 6, 21, 20, 17, 14, 19, 16, 9, 5, 29, 30, 39, 43, 44, 45, 46, 51, 38, 31, 33, 18, 23, 15, 37, 13, 24, 28, 32, 27]
 solution : [7, 8, 10]


Invert decision for 10 at level 2


New level: 3
 pending : [36, 26, 41, 6, 21, 20, 17, 14, 19, 16, 9, 5, 29, 30, 39, 43, 44, 45, 46, 51, 38, 31, 33, 18, 23, 15, 37, 13, 24, 28, 32, 27]
 solution : [7, 8]


Before reduction : 
 pending  : [36, 26, 41, 6, 21, 20, 17, 14, 19, 16, 9, 5, 29, 30, 39, 43, 44, 45, 46, 51, 38, 31, 33, 18, 23, 15, 37, 13, 24, 28, 32, 27]
 solution : [7, 8]

Essensial at level 3 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, 65536), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, 16384), (21, 67584), (22, -1), (23, -1), (24, -1), (25, -1), (26, 524288), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, 32768), (37, -1), (38, -1), (39, -1), (40, -1), (41, 524288), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 1048576), (6, 262144), (7, -1), (8, -1), (9, 134217728), (10, -1), (11, -1), (12, -1), (13, 536870912), (14, 2097152), (15, 268435456), (16, 4194304), (17, 65536), (18, 16777216), (19, 8388608), (20, 131072), (21, 278528), (22, -1), (23, 134217728), (24, 1073741824), (25, -1), (26, 1048576), (27, 1073741824), (28, 4294967296), (29, 1048576), (30, 16384), (31, 32768), (32, 2147483648), (33, 4194304), (34, -1), (35, -1), (36, 67108864), (37, 268435456), (38, 134217728), (39, 16384), (40, -1), (41, 1048576), (42, -1), (43, 524288), (44, 524288), (45, 67108864), (46, 16777216), (47, -1), (48, -1), (49, -1), (50, -1), (51, 67108864), (52, -1)]

Covered at level 3 : set()

After reduction : 
 pending  : [36, 26, 41, 6, 21, 20, 17, 14, 19, 16, 9, 5, 29, 30, 39, 43, 44, 45, 46, 51, 38, 31, 33, 18, 23, 15, 37, 13, 24, 28, 32, 27]
 solution : [7, 8]


Solution : [7, 8] has cost 11.


Decide in level 3 among pending : [36, 26, 41, 6, 21, 20, 17, 14, 19, 16, 9, 5, 29, 30, 39, 43, 44, 45, 46, 51, 38, 31, 33, 18, 23, 15, 37, 13, 24, 28, 32, 27]

Coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 1048576), (6, 262144), (7, -1), (8, -1), (9, 134217728), (10, -1), (11, -1), (12, -1), (13, 536870912), (14, 2097152), (15, 268435456), (16, 4194304), (17, 65536), (18, 16777216), (19, 8388608), (20, 131072), (21, 278528), (22, -1), (23, 134217728), (24, 1073741824), (25, -1), (26, 1048576), (27, 1073741824), (28, 4294967296), (29, 1048576), (30, 16384), (31, 32768), (32, 2147483648), (33, 4194304), (34, -1), (35, -1), (36, 67108864), (37, 268435456), (38, 134217728), (39, 16384), (40, -1), (41, 1048576), (42, -1), (43, 524288), (44, 524288), (45, 67108864), (46, 16777216), (47, -1), (48, -1), (49, -1), (50, -1), (51, 67108864), (52, -1)]

Decide 28 with phase True at level 3

After decision at level 3
 pending : [36, 26, 41, 6, 21, 20, 17, 14, 19, 16, 9, 5, 29, 30, 39, 43, 44, 45, 46, 51, 38, 31, 33, 18, 23, 15, 37, 13, 24, 32, 27]
 solution : [7, 8, 28]


New level: 4
 pending : [36, 26, 41, 6, 21, 20, 17, 14, 19, 16, 9, 5, 29, 30, 39, 43, 44, 45, 46, 51, 38, 31, 33, 18, 23, 15, 37, 13, 24, 32, 27]
 solution : [7, 8, 28]


Before reduction : 
 pending  : [36, 26, 41, 6, 21, 20, 17, 14, 19, 16, 9, 5, 29, 30, 39, 43, 44, 45, 46, 51, 38, 31, 33, 18, 23, 15, 37, 13, 24, 32, 27]
 solution : [7, 8, 28]

Essensial at level 4 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 1048576), (6, 262144), (7, -1), (8, -1), (9, 134217728), (10, -1), (11, -1), (12, -1), (13, 536870912), (14, 2097152), (15, 268435456), (16, 4194304), (17, 65536), (18, 16777216), (19, 8388608), (20, 131072), (21, 278528), (22, -1), (23, 134217728), (24, 1073741824), (25, -1), (26, 1048576), (27, 1073741824), (28, 4294967296), (29, 1048576), (30, 16384), (31, 32768), (32, 2147483648), (33, 4194304), (34, -1), (35, -1), (36, 67108864), (37, 268435456), (38, 134217728), (39, 16384), (40, -1), (41, 1048576), (42, -1), (43, 524288), (44, 524288), (45, 67108864), (46, 16777216), (47, -1), (48, -1), (49, -1), (50, -1), (51, 67108864), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 1048576), (6, 262144), (7, -1), (8, -1), (9, 134217728), (10, -1), (11, -1), (12, -1), (13, 536870912), (14, 2097152), (15, 268435456), (16, 4194304), (17, 65536), (18, 16777216), (19, 8388608), (20, 131072), (21, 278528), (22, -1), (23, 134217728), (24, 536870912), (25, -1), (26, 1048576), (27, 1073741824), (28, -1), (29, 1048576), (30, 16384), (31, 16384), (32, 1073741824), (33, 2097152), (34, -1), (35, -1), (36, 67108864), (37, 134217728), (38, 134217728), (39, 16384), (40, -1), (41, 1048576), (42, -1), (43, 524288), (44, 524288), (45, 67108864), (46, 16777216), (47, -1), (48, -1), (49, -1), (50, -1), (51, 67108864), (52, -1)]

Covered at level 4 : set()

After reduction : 
 pending  : [36, 26, 41, 6, 21, 20, 17, 14, 19, 16, 9, 5, 29, 30, 39, 43, 44, 45, 46, 51, 38, 31, 33, 18, 23, 15, 37, 13, 24, 32, 27]
 solution : [7, 8, 28]


Solution : [7, 8, 28] has cost 15.


Decide in level 4 among pending : [36, 26, 41, 6, 21, 20, 17, 14, 19, 16, 9, 5, 29, 30, 39, 43, 44, 45, 46, 51, 38, 31, 33, 18, 23, 15, 37, 13, 24, 32, 27]

Coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 1048576), (6, 262144), (7, -1), (8, -1), (9, 134217728), (10, -1), (11, -1), (12, -1), (13, 536870912), (14, 2097152), (15, 268435456), (16, 4194304), (17, 65536), (18, 16777216), (19, 8388608), (20, 131072), (21, 278528), (22, -1), (23, 134217728), (24, 536870912), (25, -1), (26, 1048576), (27, 1073741824), (28, -1), (29, 1048576), (30, 16384), (31, 16384), (32, 1073741824), (33, 2097152), (34, -1), (35, -1), (36, 67108864), (37, 134217728), (38, 134217728), (39, 16384), (40, -1), (41, 1048576), (42, -1), (43, 524288), (44, 524288), (45, 67108864), (46, 16777216), (47, -1), (48, -1), (49, -1), (50, -1), (51, 67108864), (52, -1)]

Decide 32 with phase True at level 4

After decision at level 4
 pending : [36, 26, 41, 6, 21, 20, 17, 14, 19, 16, 9, 5, 29, 30, 39, 43, 44, 45, 46, 51, 38, 31, 33, 18, 23, 15, 37, 13, 24, 27]
 solution : [7, 8, 28, 32]


New level: 5
 pending : [36, 26, 41, 6, 21, 20, 17, 14, 19, 16, 9, 5, 29, 30, 39, 43, 44, 45, 46, 51, 38, 31, 33, 18, 23, 15, 37, 13, 24, 27]
 solution : [7, 8, 28, 32]


Before reduction : 
 pending  : [36, 26, 41, 6, 21, 20, 17, 14, 19, 16, 9, 5, 29, 30, 39, 43, 44, 45, 46, 51, 38, 31, 33, 18, 23, 15, 37, 13, 24, 27]
 solution : [7, 8, 28, 32]

Essensial at level 5 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 1048576), (6, 262144), (7, -1), (8, -1), (9, 134217728), (10, -1), (11, -1), (12, -1), (13, 536870912), (14, 2097152), (15, 268435456), (16, 4194304), (17, 65536), (18, 16777216), (19, 8388608), (20, 131072), (21, 278528), (22, -1), (23, 134217728), (24, 536870912), (25, -1), (26, 1048576), (27, 1073741824), (28, -1), (29, 1048576), (30, 16384), (31, 16384), (32, 1073741824), (33, 2097152), (34, -1), (35, -1), (36, 67108864), (37, 134217728), (38, 134217728), (39, 16384), (40, -1), (41, 1048576), (42, -1), (43, 524288), (44, 524288), (45, 67108864), (46, 16777216), (47, -1), (48, -1), (49, -1), (50, -1), (51, 67108864), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 262144), (6, 262144), (7, -1), (8, -1), (9, 134217728), (10, -1), (11, -1), (12, -1), (13, 536870912), (14, 2097152), (15, 268435456), (16, 4194304), (17, 65536), (18, 16777216), (19, 8388608), (20, 131072), (21, 278528), (22, -1), (23, 134217728), (24, 16384), (25, -1), (26, 1048576), (27, 1073741824), (28, -1), (29, 262144), (30, 4096), (31, 0), (32, -1), (33, 0), (34, -1), (35, -1), (36, 67108864), (37, 4096), (38, 33554432), (39, 4096), (40, -1), (41, 1048576), (42, -1), (43, 131072), (44, 131072), (45, 16777216), (46, 4194304), (47, -1), (48, -1), (49, -1), (50, -1), (51, 16777216), (52, -1)]

Covered at level 5 : {33, 31}

After reduction : 
 pending  : [36, 26, 41, 6, 21, 20, 17, 14, 19, 16, 9, 5, 29, 30, 39, 43, 44, 45, 46, 51, 38, 18, 23, 15, 37, 13, 24, 27]
 solution : [7, 8, 28, 32]


Before reduction : 
 pending  : [36, 26, 41, 6, 21, 20, 17, 14, 19, 16, 9, 5, 29, 30, 39, 43, 44, 45, 46, 51, 38, 18, 23, 15, 37, 13, 24, 27]
 solution : [7, 8, 28, 32]

Essensial at level 5 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 262144), (6, 262144), (7, -1), (8, -1), (9, 134217728), (10, -1), (11, -1), (12, -1), (13, 536870912), (14, 2097152), (15, 268435456), (16, 4194304), (17, 65536), (18, 16777216), (19, 8388608), (20, 131072), (21, 278528), (22, -1), (23, 134217728), (24, 16384), (25, -1), (26, 1048576), (27, 1073741824), (28, -1), (29, 262144), (30, 4096), (31, 0), (32, -1), (33, 0), (34, -1), (35, -1), (36, 67108864), (37, 4096), (38, 33554432), (39, 4096), (40, -1), (41, 1048576), (42, -1), (43, 131072), (44, 131072), (45, 16777216), (46, 4194304), (47, -1), (48, -1), (49, -1), (50, -1), (51, 16777216), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 262144), (6, 262144), (7, -1), (8, -1), (9, 134217728), (10, -1), (11, -1), (12, -1), (13, 536870912), (14, 2097152), (15, 268435456), (16, 4194304), (17, 65536), (18, 16777216), (19, 8388608), (20, 131072), (21, 278528), (22, -1), (23, 134217728), (24, 16384), (25, -1), (26, 1048576), (27, 1073741824), (28, -1), (29, 262144), (30, 4096), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, 67108864), (37, 4096), (38, 33554432), (39, 4096), (40, -1), (41, 1048576), (42, -1), (43, 131072), (44, 131072), (45, 16777216), (46, 4194304), (47, -1), (48, -1), (49, -1), (50, -1), (51, 16777216), (52, -1)]

Covered at level 5 : set()

After reduction : 
 pending  : [36, 26, 41, 6, 21, 20, 17, 14, 19, 16, 9, 5, 29, 30, 39, 43, 44, 45, 46, 51, 38, 18, 23, 15, 37, 13, 24, 27]
 solution : [7, 8, 28, 32]


Solution : [7, 8, 28, 32] has cost 28.


Before backtrack at level 5
 pending : [36, 26, 41, 6, 21, 20, 17, 14, 19, 16, 9, 5, 29, 30, 39, 43, 44, 45, 46, 51, 38, 18, 23, 15, 37, 13, 24, 27]
 solution : [7, 8, 28, 32]

After backtrack at level 5
 pending : [36, 26, 41, 6, 21, 20, 17, 14, 19, 16, 9, 5, 29, 30, 39, 43, 44, 45, 46, 51, 38, 18, 23, 15, 37, 13, 24, 27, 31, 33]
 solution : [7, 8, 28, 32]


Invert decision for 32 at level 4


New level: 5
 pending : [36, 26, 41, 6, 21, 20, 17, 14, 19, 16, 9, 5, 29, 30, 39, 43, 44, 45, 46, 51, 38, 18, 23, 15, 37, 13, 24, 27, 31, 33]
 solution : [7, 8, 28]


Before reduction : 
 pending  : [36, 26, 41, 6, 21, 20, 17, 14, 19, 16, 9, 5, 29, 30, 39, 43, 44, 45, 46, 51, 38, 18, 23, 15, 37, 13, 24, 27, 31, 33]
 solution : [7, 8, 28]

Essensial at level 5 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 262144), (6, 262144), (7, -1), (8, -1), (9, 134217728), (10, -1), (11, -1), (12, -1), (13, 536870912), (14, 2097152), (15, 268435456), (16, 4194304), (17, 65536), (18, 16777216), (19, 8388608), (20, 131072), (21, 278528), (22, -1), (23, 134217728), (24, 16384), (25, -1), (26, 1048576), (27, 1073741824), (28, -1), (29, 262144), (30, 4096), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, 67108864), (37, 4096), (38, 33554432), (39, 4096), (40, -1), (41, 1048576), (42, -1), (43, 131072), (44, 131072), (45, 16777216), (46, 4194304), (47, -1), (48, -1), (49, -1), (50, -1), (51, 16777216), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 1048576), (6, 262144), (7, -1), (8, -1), (9, 134217728), (10, -1), (11, -1), (12, -1), (13, 536870912), (14, 2097152), (15, 268435456), (16, 4194304), (17, 65536), (18, 16777216), (19, 8388608), (20, 131072), (21, 278528), (22, -1), (23, 134217728), (24, 536870912), (25, -1), (26, 1048576), (27, 1073741824), (28, -1), (29, 1048576), (30, 16384), (31, 16384), (32, -1), (33, 2097152), (34, -1), (35, -1), (36, 67108864), (37, 134217728), (38, 134217728), (39, 16384), (40, -1), (41, 1048576), (42, -1), (43, 524288), (44, 524288), (45, 67108864), (46, 16777216), (47, -1), (48, -1), (49, -1), (50, -1), (51, 67108864), (52, -1)]

Covered at level 5 : set()

After reduction : 
 pending  : [36, 26, 41, 6, 21, 20, 17, 14, 19, 16, 9, 5, 29, 30, 39, 43, 44, 45, 46, 51, 38, 18, 23, 15, 37, 13, 24, 27, 31, 33]
 solution : [7, 8, 28]


Solution : [7, 8, 28] has cost 15.


Decide in level 5 among pending : [36, 26, 41, 6, 21, 20, 17, 14, 19, 16, 9, 5, 29, 30, 39, 43, 44, 45, 46, 51, 38, 18, 23, 15, 37, 13, 24, 27, 31, 33]

Coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 1048576), (6, 262144), (7, -1), (8, -1), (9, 134217728), (10, -1), (11, -1), (12, -1), (13, 536870912), (14, 2097152), (15, 268435456), (16, 4194304), (17, 65536), (18, 16777216), (19, 8388608), (20, 131072), (21, 278528), (22, -1), (23, 134217728), (24, 536870912), (25, -1), (26, 1048576), (27, 1073741824), (28, -1), (29, 1048576), (30, 16384), (31, 16384), (32, -1), (33, 2097152), (34, -1), (35, -1), (36, 67108864), (37, 134217728), (38, 134217728), (39, 16384), (40, -1), (41, 1048576), (42, -1), (43, 524288), (44, 524288), (45, 67108864), (46, 16777216), (47, -1), (48, -1), (49, -1), (50, -1), (51, 67108864), (52, -1)]

Decide 27 with phase True at level 5

After decision at level 5
 pending : [36, 26, 41, 6, 21, 20, 17, 14, 19, 16, 9, 5, 29, 30, 39, 43, 44, 45, 46, 51, 38, 18, 23, 15, 37, 13, 24, 31, 33]
 solution : [7, 8, 28, 27]


New level: 6
 pending : [36, 26, 41, 6, 21, 20, 17, 14, 19, 16, 9, 5, 29, 30, 39, 43, 44, 45, 46, 51, 38, 18, 23, 15, 37, 13, 24, 31, 33]
 solution : [7, 8, 28, 27]


Before reduction : 
 pending  : [36, 26, 41, 6, 21, 20, 17, 14, 19, 16, 9, 5, 29, 30, 39, 43, 44, 45, 46, 51, 38, 18, 23, 15, 37, 13, 24, 31, 33]
 solution : [7, 8, 28, 27]

Essensial at level 6 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 1048576), (6, 262144), (7, -1), (8, -1), (9, 134217728), (10, -1), (11, -1), (12, -1), (13, 536870912), (14, 2097152), (15, 268435456), (16, 4194304), (17, 65536), (18, 16777216), (19, 8388608), (20, 131072), (21, 278528), (22, -1), (23, 134217728), (24, 536870912), (25, -1), (26, 1048576), (27, 1073741824), (28, -1), (29, 1048576), (30, 16384), (31, 16384), (32, -1), (33, 2097152), (34, -1), (35, -1), (36, 67108864), (37, 134217728), (38, 134217728), (39, 16384), (40, -1), (41, 1048576), (42, -1), (43, 524288), (44, 524288), (45, 67108864), (46, 16777216), (47, -1), (48, -1), (49, -1), (50, -1), (51, 67108864), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 262144), (6, 0), (7, -1), (8, -1), (9, 134217728), (10, -1), (11, -1), (12, -1), (13, 0), (14, 0), (15, 0), (16, 0), (17, 0), (18, 0), (19, 0), (20, 0), (21, 0), (22, -1), (23, 134217728), (24, 536870912), (25, -1), (26, 0), (27, -1), (28, -1), (29, 524288), (30, 4096), (31, 4096), (32, -1), (33, 2097152), (34, -1), (35, -1), (36, 2048), (37, 2048), (38, 67108864), (39, 2048), (40, -1), (41, 0), (42, -1), (43, 131072), (44, 131072), (45, 33554432), (46, 4194304), (47, -1), (48, -1), (49, -1), (50, -1), (51, 16777216), (52, -1)]

Covered at level 6 : {6, 41, 13, 14, 15, 16, 17, 18, 19, 20, 21, 26}

After reduction : 
 pending  : [36, 9, 5, 29, 30, 39, 43, 44, 45, 46, 51, 38, 23, 37, 24, 31, 33]
 solution : [7, 8, 28, 27]


Before reduction : 
 pending  : [36, 9, 5, 29, 30, 39, 43, 44, 45, 46, 51, 38, 23, 37, 24, 31, 33]
 solution : [7, 8, 28, 27]

Essensial at level 6 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 262144), (6, 0), (7, -1), (8, -1), (9, 134217728), (10, -1), (11, -1), (12, -1), (13, 0), (14, 0), (15, 0), (16, 0), (17, 0), (18, 0), (19, 0), (20, 0), (21, 0), (22, -1), (23, 134217728), (24, 536870912), (25, -1), (26, 0), (27, -1), (28, -1), (29, 524288), (30, 4096), (31, 4096), (32, -1), (33, 2097152), (34, -1), (35, -1), (36, 2048), (37, 2048), (38, 67108864), (39, 2048), (40, -1), (41, 0), (42, -1), (43, 131072), (44, 131072), (45, 33554432), (46, 4194304), (47, -1), (48, -1), (49, -1), (50, -1), (51, 16777216), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 262144), (6, -1), (7, -1), (8, -1), (9, 134217728), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, 134217728), (24, 536870912), (25, -1), (26, -1), (27, -1), (28, -1), (29, 524288), (30, 4096), (31, 4096), (32, -1), (33, 2097152), (34, -1), (35, -1), (36, 2048), (37, 2048), (38, 67108864), (39, 2048), (40, -1), (41, -1), (42, -1), (43, 131072), (44, 131072), (45, 33554432), (46, 4194304), (47, -1), (48, -1), (49, -1), (50, -1), (51, 16777216), (52, -1)]

Covered at level 6 : set()

After reduction : 
 pending  : [36, 9, 5, 29, 30, 39, 43, 44, 45, 46, 51, 38, 23, 37, 24, 31, 33]
 solution : [7, 8, 28, 27]


Solution : [7, 8, 28, 27] has cost 19.


Decide in level 6 among pending : [36, 9, 5, 29, 30, 39, 43, 44, 45, 46, 51, 38, 23, 37, 24, 31, 33]

Coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 262144), (6, -1), (7, -1), (8, -1), (9, 134217728), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, 134217728), (24, 536870912), (25, -1), (26, -1), (27, -1), (28, -1), (29, 524288), (30, 4096), (31, 4096), (32, -1), (33, 2097152), (34, -1), (35, -1), (36, 2048), (37, 2048), (38, 67108864), (39, 2048), (40, -1), (41, -1), (42, -1), (43, 131072), (44, 131072), (45, 33554432), (46, 4194304), (47, -1), (48, -1), (49, -1), (50, -1), (51, 16777216), (52, -1)]

Decide 24 with phase True at level 6

After decision at level 6
 pending : [36, 9, 5, 29, 30, 39, 43, 44, 45, 46, 51, 38, 23, 37, 31, 33]
 solution : [7, 8, 28, 27, 24]


New level: 7
 pending : [36, 9, 5, 29, 30, 39, 43, 44, 45, 46, 51, 38, 23, 37, 31, 33]
 solution : [7, 8, 28, 27, 24]


Before reduction : 
 pending  : [36, 9, 5, 29, 30, 39, 43, 44, 45, 46, 51, 38, 23, 37, 31, 33]
 solution : [7, 8, 28, 27, 24]

Essensial at level 7 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 262144), (6, -1), (7, -1), (8, -1), (9, 134217728), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, 134217728), (24, 536870912), (25, -1), (26, -1), (27, -1), (28, -1), (29, 524288), (30, 4096), (31, 4096), (32, -1), (33, 2097152), (34, -1), (35, -1), (36, 2048), (37, 2048), (38, 67108864), (39, 2048), (40, -1), (41, -1), (42, -1), (43, 131072), (44, 131072), (45, 33554432), (46, 4194304), (47, -1), (48, -1), (49, -1), (50, -1), (51, 16777216), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 65536), (6, -1), (7, -1), (8, -1), (9, 33554432), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, 33554432), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, 131072), (30, 1024), (31, 0), (32, -1), (33, 0), (34, -1), (35, -1), (36, 512), (37, 0), (38, 33554432), (39, 512), (40, -1), (41, -1), (42, -1), (43, 32768), (44, 32768), (45, 16777216), (46, 1048576), (47, -1), (48, -1), (49, -1), (50, -1), (51, 8388608), (52, -1)]

Covered at level 7 : {33, 37, 31}

After reduction : 
 pending  : [36, 9, 5, 29, 30, 39, 43, 44, 45, 46, 51, 38, 23]
 solution : [7, 8, 28, 27, 24]


Before reduction : 
 pending  : [36, 9, 5, 29, 30, 39, 43, 44, 45, 46, 51, 38, 23]
 solution : [7, 8, 28, 27, 24]

Essensial at level 7 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 65536), (6, -1), (7, -1), (8, -1), (9, 33554432), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, 33554432), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, 131072), (30, 1024), (31, 0), (32, -1), (33, 0), (34, -1), (35, -1), (36, 512), (37, 0), (38, 33554432), (39, 512), (40, -1), (41, -1), (42, -1), (43, 32768), (44, 32768), (45, 16777216), (46, 1048576), (47, -1), (48, -1), (49, -1), (50, -1), (51, 8388608), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 65536), (6, -1), (7, -1), (8, -1), (9, 33554432), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, 33554432), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, 131072), (30, 1024), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, 512), (37, -1), (38, 33554432), (39, 512), (40, -1), (41, -1), (42, -1), (43, 32768), (44, 32768), (45, 16777216), (46, 1048576), (47, -1), (48, -1), (49, -1), (50, -1), (51, 8388608), (52, -1)]

Covered at level 7 : set()

After reduction : 
 pending  : [36, 9, 5, 29, 30, 39, 43, 44, 45, 46, 51, 38, 23]
 solution : [7, 8, 28, 27, 24]


Solution : [7, 8, 28, 27, 24] has cost 26.


Before backtrack at level 7
 pending : [36, 9, 5, 29, 30, 39, 43, 44, 45, 46, 51, 38, 23]
 solution : [7, 8, 28, 27, 24]

After backtrack at level 7
 pending : [36, 9, 5, 29, 30, 39, 43, 44, 45, 46, 51, 38, 23, 37, 31, 33]
 solution : [7, 8, 28, 27, 24]


Invert decision for 24 at level 6


New level: 7
 pending : [36, 9, 5, 29, 30, 39, 43, 44, 45, 46, 51, 38, 23, 37, 31, 33]
 solution : [7, 8, 28, 27]


Before reduction : 
 pending  : [36, 9, 5, 29, 30, 39, 43, 44, 45, 46, 51, 38, 23, 37, 31, 33]
 solution : [7, 8, 28, 27]

Essensial at level 7 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 65536), (6, -1), (7, -1), (8, -1), (9, 33554432), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, 33554432), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, 131072), (30, 1024), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, 512), (37, -1), (38, 33554432), (39, 512), (40, -1), (41, -1), (42, -1), (43, 32768), (44, 32768), (45, 16777216), (46, 1048576), (47, -1), (48, -1), (49, -1), (50, -1), (51, 8388608), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 262144), (6, -1), (7, -1), (8, -1), (9, 134217728), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, 134217728), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, 524288), (30, 4096), (31, 4096), (32, -1), (33, 2097152), (34, -1), (35, -1), (36, 2048), (37, 2048), (38, 67108864), (39, 2048), (40, -1), (41, -1), (42, -1), (43, 131072), (44, 131072), (45, 33554432), (46, 4194304), (47, -1), (48, -1), (49, -1), (50, -1), (51, 16777216), (52, -1)]

Covered at level 7 : set()

After reduction : 
 pending  : [36, 9, 5, 29, 30, 39, 43, 44, 45, 46, 51, 38, 23, 37, 31, 33]
 solution : [7, 8, 28, 27]


Solution : [7, 8, 28, 27] has cost 19.


Decide in level 7 among pending : [36, 9, 5, 29, 30, 39, 43, 44, 45, 46, 51, 38, 23, 37, 31, 33]

Coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 262144), (6, -1), (7, -1), (8, -1), (9, 134217728), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, 134217728), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, 524288), (30, 4096), (31, 4096), (32, -1), (33, 2097152), (34, -1), (35, -1), (36, 2048), (37, 2048), (38, 67108864), (39, 2048), (40, -1), (41, -1), (42, -1), (43, 131072), (44, 131072), (45, 33554432), (46, 4194304), (47, -1), (48, -1), (49, -1), (50, -1), (51, 16777216), (52, -1)]

Decide 9 with phase True at level 7

After decision at level 7
 pending : [36, 5, 29, 30, 39, 43, 44, 45, 46, 51, 38, 23, 37, 31, 33]
 solution : [7, 8, 28, 27, 9]


New level: 8
 pending : [36, 5, 29, 30, 39, 43, 44, 45, 46, 51, 38, 23, 37, 31, 33]
 solution : [7, 8, 28, 27, 9]


Before reduction : 
 pending  : [36, 5, 29, 30, 39, 43, 44, 45, 46, 51, 38, 23, 37, 31, 33]
 solution : [7, 8, 28, 27, 9]

Essensial at level 8 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 262144), (6, -1), (7, -1), (8, -1), (9, 134217728), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, 134217728), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, 524288), (30, 4096), (31, 4096), (32, -1), (33, 2097152), (34, -1), (35, -1), (36, 2048), (37, 2048), (38, 67108864), (39, 2048), (40, -1), (41, -1), (42, -1), (43, 131072), (44, 131072), (45, 33554432), (46, 4194304), (47, -1), (48, -1), (49, -1), (50, -1), (51, 16777216), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 0), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, 0), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, 0), (30, 0), (31, 0), (32, -1), (33, 0), (34, -1), (35, -1), (36, 0), (37, 0), (38, 0), (39, 0), (40, -1), (41, -1), (42, -1), (43, 0), (44, 0), (45, 0), (46, 0), (47, -1), (48, -1), (49, -1), (50, -1), (51, 0), (52, -1)]

Covered at level 8 : {33, 36, 5, 38, 39, 37, 43, 44, 45, 46, 51, 23, 29, 30, 31}

After reduction : 
 pending  : []
 solution : [7, 8, 28, 27, 9]


Before reduction : 
 pending  : []
 solution : [7, 8, 28, 27, 9]

Essensial at level 8 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 0), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, 0), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, 0), (30, 0), (31, 0), (32, -1), (33, 0), (34, -1), (35, -1), (36, 0), (37, 0), (38, 0), (39, 0), (40, -1), (41, -1), (42, -1), (43, 0), (44, 0), (45, 0), (46, 0), (47, -1), (48, -1), (49, -1), (50, -1), (51, 0), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 8 : set()

After reduction : 
 pending  : []
 solution : [7, 8, 28, 27, 9]


Solution : [7, 8, 28, 27, 9] has cost 23.


Before backtrack at level 8
 pending : []
 solution : [7, 8, 28, 27, 9]

After backtrack at level 8
 pending : [36, 5, 29, 30, 39, 43, 44, 45, 46, 51, 38, 23, 37, 31, 33]
 solution : [7, 8, 28, 27, 9]


Invert decision for 9 at level 7


New level: 8
 pending : [36, 5, 29, 30, 39, 43, 44, 45, 46, 51, 38, 23, 37, 31, 33]
 solution : [7, 8, 28, 27]


Before reduction : 
 pending  : [36, 5, 29, 30, 39, 43, 44, 45, 46, 51, 38, 23, 37, 31, 33]
 solution : [7, 8, 28, 27]

Essensial at level 8 : {23}

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 0), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, 0), (30, 0), (31, 0), (32, -1), (33, 0), (34, -1), (35, -1), (36, 0), (37, 0), (38, 0), (39, 0), (40, -1), (41, -1), (42, -1), (43, 0), (44, 0), (45, 0), (46, 0), (47, -1), (48, -1), (49, -1), (50, -1), (51, 0), (52, -1)]

Covered at level 8 : {33, 36, 5, 38, 39, 37, 43, 44, 45, 46, 51, 29, 30, 31}

After reduction : 
 pending  : []
 solution : [7, 8, 28, 27, 23]


Before reduction : 
 pending  : []
 solution : [7, 8, 28, 27, 23]

Essensial at level 8 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 0), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, 0), (30, 0), (31, 0), (32, -1), (33, 0), (34, -1), (35, -1), (36, 0), (37, 0), (38, 0), (39, 0), (40, -1), (41, -1), (42, -1), (43, 0), (44, 0), (45, 0), (46, 0), (47, -1), (48, -1), (49, -1), (50, -1), (51, 0), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 8 : set()

After reduction : 
 pending  : []
 solution : [7, 8, 28, 27, 23]


Solution : [7, 8, 28, 27, 23] has cost 26.


Before backtrack at level 8
 pending : []
 solution : [7, 8, 28, 27, 23]

After backtrack at level 8
 pending : [23, 36, 5, 29, 30, 39, 43, 44, 45, 46, 51, 38, 37, 31, 33]
 solution : [7, 8, 28, 27]


Before backtrack at level 7
 pending : [23, 36, 5, 29, 30, 39, 43, 44, 45, 46, 51, 38, 37, 31, 33]
 solution : [7, 8, 28, 27]

After backtrack at level 7
 pending : [23, 36, 5, 29, 30, 39, 43, 44, 45, 46, 51, 38, 37, 31, 33, 9]
 solution : [7, 8, 28, 27]


Before backtrack at level 6
 pending : [23, 36, 5, 29, 30, 39, 43, 44, 45, 46, 51, 38, 37, 31, 33, 9]
 solution : [7, 8, 28, 27]

After backtrack at level 6
 pending : [23, 36, 5, 29, 30, 39, 43, 44, 45, 46, 51, 38, 37, 31, 33, 9, 26, 41, 6, 21, 20, 17, 14, 19, 16, 18, 15, 13, 24]
 solution : [7, 8, 28, 27]


Invert decision for 27 at level 5


New level: 6
 pending : [23, 36, 5, 29, 30, 39, 43, 44, 45, 46, 51, 38, 37, 31, 33, 9, 26, 41, 6, 21, 20, 17, 14, 19, 16, 18, 15, 13, 24]
 solution : [7, 8, 28]


Before reduction : 
 pending  : [23, 36, 5, 29, 30, 39, 43, 44, 45, 46, 51, 38, 37, 31, 33, 9, 26, 41, 6, 21, 20, 17, 14, 19, 16, 18, 15, 13, 24]
 solution : [7, 8, 28]

Essensial at level 6 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 1048576), (6, 262144), (7, -1), (8, -1), (9, 134217728), (10, -1), (11, -1), (12, -1), (13, 536870912), (14, 2097152), (15, 268435456), (16, 4194304), (17, 65536), (18, 16777216), (19, 8388608), (20, 131072), (21, 278528), (22, -1), (23, 134217728), (24, 536870912), (25, -1), (26, 1048576), (27, -1), (28, -1), (29, 1048576), (30, 16384), (31, 16384), (32, -1), (33, 2097152), (34, -1), (35, -1), (36, 67108864), (37, 134217728), (38, 134217728), (39, 16384), (40, -1), (41, 1048576), (42, -1), (43, 524288), (44, 524288), (45, 67108864), (46, 16777216), (47, -1), (48, -1), (49, -1), (50, -1), (51, 67108864), (52, -1)]

Covered at level 6 : set()

After reduction : 
 pending  : [23, 36, 5, 29, 30, 39, 43, 44, 45, 46, 51, 38, 37, 31, 33, 9, 26, 41, 6, 21, 20, 17, 14, 19, 16, 18, 15, 13, 24]
 solution : [7, 8, 28]


Solution : [7, 8, 28] has cost 15.


Decide in level 6 among pending : [23, 36, 5, 29, 30, 39, 43, 44, 45, 46, 51, 38, 37, 31, 33, 9, 26, 41, 6, 21, 20, 17, 14, 19, 16, 18, 15, 13, 24]

Coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 1048576), (6, 262144), (7, -1), (8, -1), (9, 134217728), (10, -1), (11, -1), (12, -1), (13, 536870912), (14, 2097152), (15, 268435456), (16, 4194304), (17, 65536), (18, 16777216), (19, 8388608), (20, 131072), (21, 278528), (22, -1), (23, 134217728), (24, 536870912), (25, -1), (26, 1048576), (27, -1), (28, -1), (29, 1048576), (30, 16384), (31, 16384), (32, -1), (33, 2097152), (34, -1), (35, -1), (36, 67108864), (37, 134217728), (38, 134217728), (39, 16384), (40, -1), (41, 1048576), (42, -1), (43, 524288), (44, 524288), (45, 67108864), (46, 16777216), (47, -1), (48, -1), (49, -1), (50, -1), (51, 67108864), (52, -1)]

Decide 13 with phase True at level 6

After decision at level 6
 pending : [23, 36, 5, 29, 30, 39, 43, 44, 45, 46, 51, 38, 37, 31, 33, 9, 26, 41, 6, 21, 20, 17, 14, 19, 16, 18, 15, 24]
 solution : [7, 8, 28, 13]


New level: 7
 pending : [23, 36, 5, 29, 30, 39, 43, 44, 45, 46, 51, 38, 37, 31, 33, 9, 26, 41, 6, 21, 20, 17, 14, 19, 16, 18, 15, 24]
 solution : [7, 8, 28, 13]


Before reduction : 
 pending  : [23, 36, 5, 29, 30, 39, 43, 44, 45, 46, 51, 38, 37, 31, 33, 9, 26, 41, 6, 21, 20, 17, 14, 19, 16, 18, 15, 24]
 solution : [7, 8, 28, 13]

Essensial at level 7 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 1048576), (6, 262144), (7, -1), (8, -1), (9, 134217728), (10, -1), (11, -1), (12, -1), (13, 536870912), (14, 2097152), (15, 268435456), (16, 4194304), (17, 65536), (18, 16777216), (19, 8388608), (20, 131072), (21, 278528), (22, -1), (23, 134217728), (24, 536870912), (25, -1), (26, 1048576), (27, -1), (28, -1), (29, 1048576), (30, 16384), (31, 16384), (32, -1), (33, 2097152), (34, -1), (35, -1), (36, 67108864), (37, 134217728), (38, 134217728), (39, 16384), (40, -1), (41, 1048576), (42, -1), (43, 524288), (44, 524288), (45, 67108864), (46, 16777216), (47, -1), (48, -1), (49, -1), (50, -1), (51, 67108864), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 262144), (6, 0), (7, -1), (8, -1), (9, 134217728), (10, -1), (11, -1), (12, -1), (13, -1), (14, 0), (15, 0), (16, 0), (17, 0), (18, 0), (19, 0), (20, 0), (21, 0), (22, -1), (23, 134217728), (24, 536870912), (25, -1), (26, 0), (27, -1), (28, -1), (29, 524288), (30, 4096), (31, 4096), (32, -1), (33, 2097152), (34, -1), (35, -1), (36, 2048), (37, 2048), (38, 67108864), (39, 2048), (40, -1), (41, 0), (42, -1), (43, 131072), (44, 131072), (45, 33554432), (46, 4194304), (47, -1), (48, -1), (49, -1), (50, -1), (51, 67108864), (52, -1)]

Covered at level 7 : {6, 41, 14, 15, 16, 17, 18, 19, 20, 21, 26}

After reduction : 
 pending  : [23, 36, 5, 29, 30, 39, 43, 44, 45, 46, 51, 38, 37, 31, 33, 9, 24]
 solution : [7, 8, 28, 13]


Before reduction : 
 pending  : [23, 36, 5, 29, 30, 39, 43, 44, 45, 46, 51, 38, 37, 31, 33, 9, 24]
 solution : [7, 8, 28, 13]

Essensial at level 7 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 262144), (6, 0), (7, -1), (8, -1), (9, 134217728), (10, -1), (11, -1), (12, -1), (13, -1), (14, 0), (15, 0), (16, 0), (17, 0), (18, 0), (19, 0), (20, 0), (21, 0), (22, -1), (23, 134217728), (24, 536870912), (25, -1), (26, 0), (27, -1), (28, -1), (29, 524288), (30, 4096), (31, 4096), (32, -1), (33, 2097152), (34, -1), (35, -1), (36, 2048), (37, 2048), (38, 67108864), (39, 2048), (40, -1), (41, 0), (42, -1), (43, 131072), (44, 131072), (45, 33554432), (46, 4194304), (47, -1), (48, -1), (49, -1), (50, -1), (51, 67108864), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 262144), (6, -1), (7, -1), (8, -1), (9, 134217728), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, 134217728), (24, 536870912), (25, -1), (26, -1), (27, -1), (28, -1), (29, 524288), (30, 4096), (31, 4096), (32, -1), (33, 2097152), (34, -1), (35, -1), (36, 2048), (37, 2048), (38, 67108864), (39, 2048), (40, -1), (41, -1), (42, -1), (43, 131072), (44, 131072), (45, 33554432), (46, 4194304), (47, -1), (48, -1), (49, -1), (50, -1), (51, 67108864), (52, -1)]

Covered at level 7 : set()

After reduction : 
 pending  : [23, 36, 5, 29, 30, 39, 43, 44, 45, 46, 51, 38, 37, 31, 33, 9, 24]
 solution : [7, 8, 28, 13]


Solution : [7, 8, 28, 13] has cost 22.


Decide in level 7 among pending : [23, 36, 5, 29, 30, 39, 43, 44, 45, 46, 51, 38, 37, 31, 33, 9, 24]

Coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 262144), (6, -1), (7, -1), (8, -1), (9, 134217728), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, 134217728), (24, 536870912), (25, -1), (26, -1), (27, -1), (28, -1), (29, 524288), (30, 4096), (31, 4096), (32, -1), (33, 2097152), (34, -1), (35, -1), (36, 2048), (37, 2048), (38, 67108864), (39, 2048), (40, -1), (41, -1), (42, -1), (43, 131072), (44, 131072), (45, 33554432), (46, 4194304), (47, -1), (48, -1), (49, -1), (50, -1), (51, 67108864), (52, -1)]

Decide 24 with phase True at level 7

After decision at level 7
 pending : [23, 36, 5, 29, 30, 39, 43, 44, 45, 46, 51, 38, 37, 31, 33, 9]
 solution : [7, 8, 28, 13, 24]


New level: 8
 pending : [23, 36, 5, 29, 30, 39, 43, 44, 45, 46, 51, 38, 37, 31, 33, 9]
 solution : [7, 8, 28, 13, 24]


Before reduction : 
 pending  : [23, 36, 5, 29, 30, 39, 43, 44, 45, 46, 51, 38, 37, 31, 33, 9]
 solution : [7, 8, 28, 13, 24]

Essensial at level 8 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 262144), (6, -1), (7, -1), (8, -1), (9, 134217728), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, 134217728), (24, 536870912), (25, -1), (26, -1), (27, -1), (28, -1), (29, 524288), (30, 4096), (31, 4096), (32, -1), (33, 2097152), (34, -1), (35, -1), (36, 2048), (37, 2048), (38, 67108864), (39, 2048), (40, -1), (41, -1), (42, -1), (43, 131072), (44, 131072), (45, 33554432), (46, 4194304), (47, -1), (48, -1), (49, -1), (50, -1), (51, 67108864), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 65536), (6, -1), (7, -1), (8, -1), (9, 33554432), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, 33554432), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, 131072), (30, 1024), (31, 0), (32, -1), (33, 0), (34, -1), (35, -1), (36, 512), (37, 0), (38, 33554432), (39, 512), (40, -1), (41, -1), (42, -1), (43, 32768), (44, 32768), (45, 16777216), (46, 1048576), (47, -1), (48, -1), (49, -1), (50, -1), (51, 33554432), (52, -1)]

Covered at level 8 : {33, 37, 31}

After reduction : 
 pending  : [23, 36, 5, 29, 30, 39, 43, 44, 45, 46, 51, 38, 9]
 solution : [7, 8, 28, 13, 24]


Before reduction : 
 pending  : [23, 36, 5, 29, 30, 39, 43, 44, 45, 46, 51, 38, 9]
 solution : [7, 8, 28, 13, 24]

Essensial at level 8 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 65536), (6, -1), (7, -1), (8, -1), (9, 33554432), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, 33554432), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, 131072), (30, 1024), (31, 0), (32, -1), (33, 0), (34, -1), (35, -1), (36, 512), (37, 0), (38, 33554432), (39, 512), (40, -1), (41, -1), (42, -1), (43, 32768), (44, 32768), (45, 16777216), (46, 1048576), (47, -1), (48, -1), (49, -1), (50, -1), (51, 33554432), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 65536), (6, -1), (7, -1), (8, -1), (9, 33554432), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, 33554432), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, 131072), (30, 1024), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, 512), (37, -1), (38, 33554432), (39, 512), (40, -1), (41, -1), (42, -1), (43, 32768), (44, 32768), (45, 16777216), (46, 1048576), (47, -1), (48, -1), (49, -1), (50, -1), (51, 33554432), (52, -1)]

Covered at level 8 : set()

After reduction : 
 pending  : [23, 36, 5, 29, 30, 39, 43, 44, 45, 46, 51, 38, 9]
 solution : [7, 8, 28, 13, 24]


Solution : [7, 8, 28, 13, 24] has cost 29.


Before backtrack at level 8
 pending : [23, 36, 5, 29, 30, 39, 43, 44, 45, 46, 51, 38, 9]
 solution : [7, 8, 28, 13, 24]

After backtrack at level 8
 pending : [23, 36, 5, 29, 30, 39, 43, 44, 45, 46, 51, 38, 9, 37, 31, 33]
 solution : [7, 8, 28, 13, 24]


Invert decision for 24 at level 7


New level: 8
 pending : [23, 36, 5, 29, 30, 39, 43, 44, 45, 46, 51, 38, 9, 37, 31, 33]
 solution : [7, 8, 28, 13]


Before reduction : 
 pending  : [23, 36, 5, 29, 30, 39, 43, 44, 45, 46, 51, 38, 9, 37, 31, 33]
 solution : [7, 8, 28, 13]

Essensial at level 8 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 65536), (6, -1), (7, -1), (8, -1), (9, 33554432), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, 33554432), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, 131072), (30, 1024), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, 512), (37, -1), (38, 33554432), (39, 512), (40, -1), (41, -1), (42, -1), (43, 32768), (44, 32768), (45, 16777216), (46, 1048576), (47, -1), (48, -1), (49, -1), (50, -1), (51, 33554432), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 262144), (6, -1), (7, -1), (8, -1), (9, 134217728), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, 134217728), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, 524288), (30, 4096), (31, 4096), (32, -1), (33, 2097152), (34, -1), (35, -1), (36, 2048), (37, 2048), (38, 67108864), (39, 2048), (40, -1), (41, -1), (42, -1), (43, 131072), (44, 131072), (45, 33554432), (46, 4194304), (47, -1), (48, -1), (49, -1), (50, -1), (51, 67108864), (52, -1)]

Covered at level 8 : set()

After reduction : 
 pending  : [23, 36, 5, 29, 30, 39, 43, 44, 45, 46, 51, 38, 9, 37, 31, 33]
 solution : [7, 8, 28, 13]


Solution : [7, 8, 28, 13] has cost 22.


Decide in level 8 among pending : [23, 36, 5, 29, 30, 39, 43, 44, 45, 46, 51, 38, 9, 37, 31, 33]

Coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 262144), (6, -1), (7, -1), (8, -1), (9, 134217728), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, 134217728), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, 524288), (30, 4096), (31, 4096), (32, -1), (33, 2097152), (34, -1), (35, -1), (36, 2048), (37, 2048), (38, 67108864), (39, 2048), (40, -1), (41, -1), (42, -1), (43, 131072), (44, 131072), (45, 33554432), (46, 4194304), (47, -1), (48, -1), (49, -1), (50, -1), (51, 67108864), (52, -1)]

Decide 23 with phase True at level 8

After decision at level 8
 pending : [36, 5, 29, 30, 39, 43, 44, 45, 46, 51, 38, 9, 37, 31, 33]
 solution : [7, 8, 28, 13, 23]


New level: 9
 pending : [36, 5, 29, 30, 39, 43, 44, 45, 46, 51, 38, 9, 37, 31, 33]
 solution : [7, 8, 28, 13, 23]


Before reduction : 
 pending  : [36, 5, 29, 30, 39, 43, 44, 45, 46, 51, 38, 9, 37, 31, 33]
 solution : [7, 8, 28, 13, 23]

Essensial at level 9 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 262144), (6, -1), (7, -1), (8, -1), (9, 134217728), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, 134217728), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, 524288), (30, 4096), (31, 4096), (32, -1), (33, 2097152), (34, -1), (35, -1), (36, 2048), (37, 2048), (38, 67108864), (39, 2048), (40, -1), (41, -1), (42, -1), (43, 131072), (44, 131072), (45, 33554432), (46, 4194304), (47, -1), (48, -1), (49, -1), (50, -1), (51, 67108864), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 0), (6, -1), (7, -1), (8, -1), (9, 0), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, 0), (30, 0), (31, 0), (32, -1), (33, 0), (34, -1), (35, -1), (36, 0), (37, 0), (38, 0), (39, 0), (40, -1), (41, -1), (42, -1), (43, 0), (44, 0), (45, 0), (46, 0), (47, -1), (48, -1), (49, -1), (50, -1), (51, 0), (52, -1)]

Covered at level 9 : {33, 36, 5, 38, 39, 37, 9, 43, 44, 45, 46, 51, 29, 30, 31}

After reduction : 
 pending  : []
 solution : [7, 8, 28, 13, 23]


Before reduction : 
 pending  : []
 solution : [7, 8, 28, 13, 23]

Essensial at level 9 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 0), (6, -1), (7, -1), (8, -1), (9, 0), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, 0), (30, 0), (31, 0), (32, -1), (33, 0), (34, -1), (35, -1), (36, 0), (37, 0), (38, 0), (39, 0), (40, -1), (41, -1), (42, -1), (43, 0), (44, 0), (45, 0), (46, 0), (47, -1), (48, -1), (49, -1), (50, -1), (51, 0), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 9 : set()

After reduction : 
 pending  : []
 solution : [7, 8, 28, 13, 23]


Solution : [7, 8, 28, 13, 23] has cost 29.


Before backtrack at level 9
 pending : []
 solution : [7, 8, 28, 13, 23]

After backtrack at level 9
 pending : [36, 5, 29, 30, 39, 43, 44, 45, 46, 51, 38, 9, 37, 31, 33]
 solution : [7, 8, 28, 13, 23]


Invert decision for 23 at level 8


New level: 9
 pending : [36, 5, 29, 30, 39, 43, 44, 45, 46, 51, 38, 9, 37, 31, 33]
 solution : [7, 8, 28, 13]


Before reduction : 
 pending  : [36, 5, 29, 30, 39, 43, 44, 45, 46, 51, 38, 9, 37, 31, 33]
 solution : [7, 8, 28, 13]

Essensial at level 9 : {9}

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 0), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, 0), (30, 0), (31, 0), (32, -1), (33, 0), (34, -1), (35, -1), (36, 0), (37, 0), (38, 0), (39, 0), (40, -1), (41, -1), (42, -1), (43, 0), (44, 0), (45, 0), (46, 0), (47, -1), (48, -1), (49, -1), (50, -1), (51, 0), (52, -1)]

Covered at level 9 : {33, 36, 5, 38, 39, 37, 43, 44, 45, 46, 51, 29, 30, 31}

After reduction : 
 pending  : []
 solution : [7, 8, 28, 13, 9]


Before reduction : 
 pending  : []
 solution : [7, 8, 28, 13, 9]

Essensial at level 9 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 0), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, 0), (30, 0), (31, 0), (32, -1), (33, 0), (34, -1), (35, -1), (36, 0), (37, 0), (38, 0), (39, 0), (40, -1), (41, -1), (42, -1), (43, 0), (44, 0), (45, 0), (46, 0), (47, -1), (48, -1), (49, -1), (50, -1), (51, 0), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 9 : set()

After reduction : 
 pending  : []
 solution : [7, 8, 28, 13, 9]


Solution : [7, 8, 28, 13, 9] has cost 26.


Before backtrack at level 9
 pending : []
 solution : [7, 8, 28, 13, 9]

After backtrack at level 9
 pending : [9, 36, 5, 29, 30, 39, 43, 44, 45, 46, 51, 38, 37, 31, 33]
 solution : [7, 8, 28, 13]


Before backtrack at level 8
 pending : [9, 36, 5, 29, 30, 39, 43, 44, 45, 46, 51, 38, 37, 31, 33]
 solution : [7, 8, 28, 13]

After backtrack at level 8
 pending : [9, 36, 5, 29, 30, 39, 43, 44, 45, 46, 51, 38, 37, 31, 33, 23]
 solution : [7, 8, 28, 13]


Before backtrack at level 7
 pending : [9, 36, 5, 29, 30, 39, 43, 44, 45, 46, 51, 38, 37, 31, 33, 23]
 solution : [7, 8, 28, 13]

After backtrack at level 7
 pending : [9, 36, 5, 29, 30, 39, 43, 44, 45, 46, 51, 38, 37, 31, 33, 23, 26, 41, 6, 21, 20, 17, 14, 19, 16, 18, 15, 24]
 solution : [7, 8, 28, 13]


Invert decision for 13 at level 6


New level: 7
 pending : [9, 36, 5, 29, 30, 39, 43, 44, 45, 46, 51, 38, 37, 31, 33, 23, 26, 41, 6, 21, 20, 17, 14, 19, 16, 18, 15, 24]
 solution : [7, 8, 28]


Before reduction : 
 pending  : [9, 36, 5, 29, 30, 39, 43, 44, 45, 46, 51, 38, 37, 31, 33, 23, 26, 41, 6, 21, 20, 17, 14, 19, 16, 18, 15, 24]
 solution : [7, 8, 28]

Essensial at level 7 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 1048576), (6, 262144), (7, -1), (8, -1), (9, 134217728), (10, -1), (11, -1), (12, -1), (13, -1), (14, 2097152), (15, 268435456), (16, 4194304), (17, 65536), (18, 16777216), (19, 8388608), (20, 131072), (21, 278528), (22, -1), (23, 134217728), (24, 536870912), (25, -1), (26, 1048576), (27, -1), (28, -1), (29, 1048576), (30, 16384), (31, 16384), (32, -1), (33, 2097152), (34, -1), (35, -1), (36, 67108864), (37, 134217728), (38, 134217728), (39, 16384), (40, -1), (41, 1048576), (42, -1), (43, 524288), (44, 524288), (45, 67108864), (46, 16777216), (47, -1), (48, -1), (49, -1), (50, -1), (51, 67108864), (52, -1)]

Covered at level 7 : set()

After reduction : 
 pending  : [9, 36, 5, 29, 30, 39, 43, 44, 45, 46, 51, 38, 37, 31, 33, 23, 26, 41, 6, 21, 20, 17, 14, 19, 16, 18, 15, 24]
 solution : [7, 8, 28]


Solution : [7, 8, 28] has cost 15.


Decide in level 7 among pending : [9, 36, 5, 29, 30, 39, 43, 44, 45, 46, 51, 38, 37, 31, 33, 23, 26, 41, 6, 21, 20, 17, 14, 19, 16, 18, 15, 24]

Coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 1048576), (6, 262144), (7, -1), (8, -1), (9, 134217728), (10, -1), (11, -1), (12, -1), (13, -1), (14, 2097152), (15, 268435456), (16, 4194304), (17, 65536), (18, 16777216), (19, 8388608), (20, 131072), (21, 278528), (22, -1), (23, 134217728), (24, 536870912), (25, -1), (26, 1048576), (27, -1), (28, -1), (29, 1048576), (30, 16384), (31, 16384), (32, -1), (33, 2097152), (34, -1), (35, -1), (36, 67108864), (37, 134217728), (38, 134217728), (39, 16384), (40, -1), (41, 1048576), (42, -1), (43, 524288), (44, 524288), (45, 67108864), (46, 16777216), (47, -1), (48, -1), (49, -1), (50, -1), (51, 67108864), (52, -1)]

Decide 24 with phase True at level 7

After decision at level 7
 pending : [9, 36, 5, 29, 30, 39, 43, 44, 45, 46, 51, 38, 37, 31, 33, 23, 26, 41, 6, 21, 20, 17, 14, 19, 16, 18, 15]
 solution : [7, 8, 28, 24]


New level: 8
 pending : [9, 36, 5, 29, 30, 39, 43, 44, 45, 46, 51, 38, 37, 31, 33, 23, 26, 41, 6, 21, 20, 17, 14, 19, 16, 18, 15]
 solution : [7, 8, 28, 24]


Before reduction : 
 pending  : [9, 36, 5, 29, 30, 39, 43, 44, 45, 46, 51, 38, 37, 31, 33, 23, 26, 41, 6, 21, 20, 17, 14, 19, 16, 18, 15]
 solution : [7, 8, 28, 24]

Essensial at level 8 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 1048576), (6, 262144), (7, -1), (8, -1), (9, 134217728), (10, -1), (11, -1), (12, -1), (13, -1), (14, 2097152), (15, 268435456), (16, 4194304), (17, 65536), (18, 16777216), (19, 8388608), (20, 131072), (21, 278528), (22, -1), (23, 134217728), (24, 536870912), (25, -1), (26, 1048576), (27, -1), (28, -1), (29, 1048576), (30, 16384), (31, 16384), (32, -1), (33, 2097152), (34, -1), (35, -1), (36, 67108864), (37, 134217728), (38, 134217728), (39, 16384), (40, -1), (41, 1048576), (42, -1), (43, 524288), (44, 524288), (45, 67108864), (46, 16777216), (47, -1), (48, -1), (49, -1), (50, -1), (51, 67108864), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 262144), (6, 262144), (7, -1), (8, -1), (9, 33554432), (10, -1), (11, -1), (12, -1), (13, -1), (14, 2097152), (15, 268435456), (16, 4194304), (17, 65536), (18, 16777216), (19, 8388608), (20, 131072), (21, 278528), (22, -1), (23, 33554432), (24, -1), (25, -1), (26, 1048576), (27, -1), (28, -1), (29, 262144), (30, 4096), (31, 0), (32, -1), (33, 0), (34, -1), (35, -1), (36, 33554432), (37, 512), (38, 67108864), (39, 4096), (40, -1), (41, 1048576), (42, -1), (43, 131072), (44, 131072), (45, 33554432), (46, 4194304), (47, -1), (48, -1), (49, -1), (50, -1), (51, 33554432), (52, -1)]

Covered at level 8 : {33, 31}

After reduction : 
 pending  : [9, 36, 5, 29, 30, 39, 43, 44, 45, 46, 51, 38, 37, 23, 26, 41, 6, 21, 20, 17, 14, 19, 16, 18, 15]
 solution : [7, 8, 28, 24]


Before reduction : 
 pending  : [9, 36, 5, 29, 30, 39, 43, 44, 45, 46, 51, 38, 37, 23, 26, 41, 6, 21, 20, 17, 14, 19, 16, 18, 15]
 solution : [7, 8, 28, 24]

Essensial at level 8 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 262144), (6, 262144), (7, -1), (8, -1), (9, 33554432), (10, -1), (11, -1), (12, -1), (13, -1), (14, 2097152), (15, 268435456), (16, 4194304), (17, 65536), (18, 16777216), (19, 8388608), (20, 131072), (21, 278528), (22, -1), (23, 33554432), (24, -1), (25, -1), (26, 1048576), (27, -1), (28, -1), (29, 262144), (30, 4096), (31, 0), (32, -1), (33, 0), (34, -1), (35, -1), (36, 33554432), (37, 512), (38, 67108864), (39, 4096), (40, -1), (41, 1048576), (42, -1), (43, 131072), (44, 131072), (45, 33554432), (46, 4194304), (47, -1), (48, -1), (49, -1), (50, -1), (51, 33554432), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 262144), (6, 262144), (7, -1), (8, -1), (9, 33554432), (10, -1), (11, -1), (12, -1), (13, -1), (14, 2097152), (15, 268435456), (16, 4194304), (17, 65536), (18, 16777216), (19, 8388608), (20, 131072), (21, 278528), (22, -1), (23, 33554432), (24, -1), (25, -1), (26, 1048576), (27, -1), (28, -1), (29, 262144), (30, 4096), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, 33554432), (37, 512), (38, 67108864), (39, 4096), (40, -1), (41, 1048576), (42, -1), (43, 131072), (44, 131072), (45, 33554432), (46, 4194304), (47, -1), (48, -1), (49, -1), (50, -1), (51, 33554432), (52, -1)]

Covered at level 8 : set()

After reduction : 
 pending  : [9, 36, 5, 29, 30, 39, 43, 44, 45, 46, 51, 38, 37, 23, 26, 41, 6, 21, 20, 17, 14, 19, 16, 18, 15]
 solution : [7, 8, 28, 24]


Solution : [7, 8, 28, 24] has cost 22.


Decide in level 8 among pending : [9, 36, 5, 29, 30, 39, 43, 44, 45, 46, 51, 38, 37, 23, 26, 41, 6, 21, 20, 17, 14, 19, 16, 18, 15]

Coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 262144), (6, 262144), (7, -1), (8, -1), (9, 33554432), (10, -1), (11, -1), (12, -1), (13, -1), (14, 2097152), (15, 268435456), (16, 4194304), (17, 65536), (18, 16777216), (19, 8388608), (20, 131072), (21, 278528), (22, -1), (23, 33554432), (24, -1), (25, -1), (26, 1048576), (27, -1), (28, -1), (29, 262144), (30, 4096), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, 33554432), (37, 512), (38, 67108864), (39, 4096), (40, -1), (41, 1048576), (42, -1), (43, 131072), (44, 131072), (45, 33554432), (46, 4194304), (47, -1), (48, -1), (49, -1), (50, -1), (51, 33554432), (52, -1)]

Decide 15 with phase True at level 8

After decision at level 8
 pending : [9, 36, 5, 29, 30, 39, 43, 44, 45, 46, 51, 38, 37, 23, 26, 41, 6, 21, 20, 17, 14, 19, 16, 18]
 solution : [7, 8, 28, 24, 15]


New level: 9
 pending : [9, 36, 5, 29, 30, 39, 43, 44, 45, 46, 51, 38, 37, 23, 26, 41, 6, 21, 20, 17, 14, 19, 16, 18]
 solution : [7, 8, 28, 24, 15]


Before reduction : 
 pending  : [9, 36, 5, 29, 30, 39, 43, 44, 45, 46, 51, 38, 37, 23, 26, 41, 6, 21, 20, 17, 14, 19, 16, 18]
 solution : [7, 8, 28, 24, 15]

Essensial at level 9 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 262144), (6, 262144), (7, -1), (8, -1), (9, 33554432), (10, -1), (11, -1), (12, -1), (13, -1), (14, 2097152), (15, 268435456), (16, 4194304), (17, 65536), (18, 16777216), (19, 8388608), (20, 131072), (21, 278528), (22, -1), (23, 33554432), (24, -1), (25, -1), (26, 1048576), (27, -1), (28, -1), (29, 262144), (30, 4096), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, 33554432), (37, 512), (38, 67108864), (39, 4096), (40, -1), (41, 1048576), (42, -1), (43, 131072), (44, 131072), (45, 33554432), (46, 4194304), (47, -1), (48, -1), (49, -1), (50, -1), (51, 33554432), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 65536), (6, 0), (7, -1), (8, -1), (9, 33554432), (10, -1), (11, -1), (12, -1), (13, -1), (14, 0), (15, -1), (16, 0), (17, 0), (18, 0), (19, 0), (20, 0), (21, 0), (22, -1), (23, 33554432), (24, -1), (25, -1), (26, 0), (27, -1), (28, -1), (29, 131072), (30, 1024), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, 512), (37, 0), (38, 33554432), (39, 512), (40, -1), (41, 0), (42, -1), (43, 65536), (44, 65536), (45, 16777216), (46, 1048576), (47, -1), (48, -1), (49, -1), (50, -1), (51, 33554432), (52, -1)]

Covered at level 9 : {37, 6, 41, 14, 16, 17, 18, 19, 20, 21, 26}

After reduction : 
 pending  : [9, 36, 5, 29, 30, 39, 43, 44, 45, 46, 51, 38, 23]
 solution : [7, 8, 28, 24, 15]


Before reduction : 
 pending  : [9, 36, 5, 29, 30, 39, 43, 44, 45, 46, 51, 38, 23]
 solution : [7, 8, 28, 24, 15]

Essensial at level 9 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 65536), (6, 0), (7, -1), (8, -1), (9, 33554432), (10, -1), (11, -1), (12, -1), (13, -1), (14, 0), (15, -1), (16, 0), (17, 0), (18, 0), (19, 0), (20, 0), (21, 0), (22, -1), (23, 33554432), (24, -1), (25, -1), (26, 0), (27, -1), (28, -1), (29, 131072), (30, 1024), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, 512), (37, 0), (38, 33554432), (39, 512), (40, -1), (41, 0), (42, -1), (43, 65536), (44, 65536), (45, 16777216), (46, 1048576), (47, -1), (48, -1), (49, -1), (50, -1), (51, 33554432), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 65536), (6, -1), (7, -1), (8, -1), (9, 33554432), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, 33554432), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, 131072), (30, 1024), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, 512), (37, -1), (38, 33554432), (39, 512), (40, -1), (41, -1), (42, -1), (43, 65536), (44, 65536), (45, 16777216), (46, 1048576), (47, -1), (48, -1), (49, -1), (50, -1), (51, 33554432), (52, -1)]

Covered at level 9 : set()

After reduction : 
 pending  : [9, 36, 5, 29, 30, 39, 43, 44, 45, 46, 51, 38, 23]
 solution : [7, 8, 28, 24, 15]


Solution : [7, 8, 28, 24, 15] has cost 29.


Before backtrack at level 9
 pending : [9, 36, 5, 29, 30, 39, 43, 44, 45, 46, 51, 38, 23]
 solution : [7, 8, 28, 24, 15]

After backtrack at level 9
 pending : [9, 36, 5, 29, 30, 39, 43, 44, 45, 46, 51, 38, 23, 37, 26, 41, 6, 21, 20, 17, 14, 19, 16, 18]
 solution : [7, 8, 28, 24, 15]


Invert decision for 15 at level 8


New level: 9
 pending : [9, 36, 5, 29, 30, 39, 43, 44, 45, 46, 51, 38, 23, 37, 26, 41, 6, 21, 20, 17, 14, 19, 16, 18]
 solution : [7, 8, 28, 24]


Before reduction : 
 pending  : [9, 36, 5, 29, 30, 39, 43, 44, 45, 46, 51, 38, 23, 37, 26, 41, 6, 21, 20, 17, 14, 19, 16, 18]
 solution : [7, 8, 28, 24]

Essensial at level 9 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 65536), (6, -1), (7, -1), (8, -1), (9, 33554432), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, 33554432), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, 131072), (30, 1024), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, 512), (37, -1), (38, 33554432), (39, 512), (40, -1), (41, -1), (42, -1), (43, 65536), (44, 65536), (45, 16777216), (46, 1048576), (47, -1), (48, -1), (49, -1), (50, -1), (51, 33554432), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 262144), (6, 262144), (7, -1), (8, -1), (9, 33554432), (10, -1), (11, -1), (12, -1), (13, -1), (14, 2097152), (15, -1), (16, 4194304), (17, 65536), (18, 16777216), (19, 8388608), (20, 131072), (21, 278528), (22, -1), (23, 33554432), (24, -1), (25, -1), (26, 1048576), (27, -1), (28, -1), (29, 262144), (30, 4096), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, 33554432), (37, 512), (38, 67108864), (39, 4096), (40, -1), (41, 1048576), (42, -1), (43, 131072), (44, 131072), (45, 33554432), (46, 4194304), (47, -1), (48, -1), (49, -1), (50, -1), (51, 33554432), (52, -1)]

Covered at level 9 : set()

After reduction : 
 pending  : [9, 36, 5, 29, 30, 39, 43, 44, 45, 46, 51, 38, 23, 37, 26, 41, 6, 21, 20, 17, 14, 19, 16, 18]
 solution : [7, 8, 28, 24]


Solution : [7, 8, 28, 24] has cost 22.


Decide in level 9 among pending : [9, 36, 5, 29, 30, 39, 43, 44, 45, 46, 51, 38, 23, 37, 26, 41, 6, 21, 20, 17, 14, 19, 16, 18]

Coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 262144), (6, 262144), (7, -1), (8, -1), (9, 33554432), (10, -1), (11, -1), (12, -1), (13, -1), (14, 2097152), (15, -1), (16, 4194304), (17, 65536), (18, 16777216), (19, 8388608), (20, 131072), (21, 278528), (22, -1), (23, 33554432), (24, -1), (25, -1), (26, 1048576), (27, -1), (28, -1), (29, 262144), (30, 4096), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, 33554432), (37, 512), (38, 67108864), (39, 4096), (40, -1), (41, 1048576), (42, -1), (43, 131072), (44, 131072), (45, 33554432), (46, 4194304), (47, -1), (48, -1), (49, -1), (50, -1), (51, 33554432), (52, -1)]

Decide 38 with phase True at level 9

After decision at level 9
 pending : [9, 36, 5, 29, 30, 39, 43, 44, 45, 46, 51, 23, 37, 26, 41, 6, 21, 20, 17, 14, 19, 16, 18]
 solution : [7, 8, 28, 24, 38]


New level: 10
 pending : [9, 36, 5, 29, 30, 39, 43, 44, 45, 46, 51, 23, 37, 26, 41, 6, 21, 20, 17, 14, 19, 16, 18]
 solution : [7, 8, 28, 24, 38]


Before reduction : 
 pending  : [9, 36, 5, 29, 30, 39, 43, 44, 45, 46, 51, 23, 37, 26, 41, 6, 21, 20, 17, 14, 19, 16, 18]
 solution : [7, 8, 28, 24, 38]

Essensial at level 10 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 262144), (6, 262144), (7, -1), (8, -1), (9, 33554432), (10, -1), (11, -1), (12, -1), (13, -1), (14, 2097152), (15, -1), (16, 4194304), (17, 65536), (18, 16777216), (19, 8388608), (20, 131072), (21, 278528), (22, -1), (23, 33554432), (24, -1), (25, -1), (26, 1048576), (27, -1), (28, -1), (29, 262144), (30, 4096), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, 33554432), (37, 512), (38, 67108864), (39, 4096), (40, -1), (41, 1048576), (42, -1), (43, 131072), (44, 131072), (45, 33554432), (46, 4194304), (47, -1), (48, -1), (49, -1), (50, -1), (51, 33554432), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 0), (6, 131072), (7, -1), (8, -1), (9, 131072), (10, -1), (11, -1), (12, -1), (13, -1), (14, 2097152), (15, -1), (16, 4194304), (17, 65536), (18, 16777216), (19, 8388608), (20, 131072), (21, 135168), (22, -1), (23, 131072), (24, -1), (25, -1), (26, 1048576), (27, -1), (28, -1), (29, 0), (30, 0), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, 8388608), (37, 512), (38, -1), (39, 0), (40, -1), (41, 1048576), (42, -1), (43, 0), (44, 0), (45, 0), (46, 0), (47, -1), (48, -1), (49, -1), (50, -1), (51, 0), (52, -1)]

Covered at level 10 : {5, 39, 43, 44, 45, 46, 51, 29, 30}

After reduction : 
 pending  : [9, 36, 23, 37, 26, 41, 6, 21, 20, 17, 14, 19, 16, 18]
 solution : [7, 8, 28, 24, 38]


Before reduction : 
 pending  : [9, 36, 23, 37, 26, 41, 6, 21, 20, 17, 14, 19, 16, 18]
 solution : [7, 8, 28, 24, 38]

Essensial at level 10 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 0), (6, 131072), (7, -1), (8, -1), (9, 131072), (10, -1), (11, -1), (12, -1), (13, -1), (14, 2097152), (15, -1), (16, 4194304), (17, 65536), (18, 16777216), (19, 8388608), (20, 131072), (21, 135168), (22, -1), (23, 131072), (24, -1), (25, -1), (26, 1048576), (27, -1), (28, -1), (29, 0), (30, 0), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, 8388608), (37, 512), (38, -1), (39, 0), (40, -1), (41, 1048576), (42, -1), (43, 0), (44, 0), (45, 0), (46, 0), (47, -1), (48, -1), (49, -1), (50, -1), (51, 0), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, 131072), (7, -1), (8, -1), (9, 131072), (10, -1), (11, -1), (12, -1), (13, -1), (14, 2097152), (15, -1), (16, 4194304), (17, 65536), (18, 16777216), (19, 8388608), (20, 131072), (21, 135168), (22, -1), (23, 131072), (24, -1), (25, -1), (26, 1048576), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, 8388608), (37, 512), (38, -1), (39, -1), (40, -1), (41, 1048576), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 10 : set()

After reduction : 
 pending  : [9, 36, 23, 37, 26, 41, 6, 21, 20, 17, 14, 19, 16, 18]
 solution : [7, 8, 28, 24, 38]


Solution : [7, 8, 28, 24, 38] has cost 40.


Before backtrack at level 10
 pending : [9, 36, 23, 37, 26, 41, 6, 21, 20, 17, 14, 19, 16, 18]
 solution : [7, 8, 28, 24, 38]

After backtrack at level 10
 pending : [9, 36, 23, 37, 26, 41, 6, 21, 20, 17, 14, 19, 16, 18, 5, 29, 30, 39, 43, 44, 45, 46, 51]
 solution : [7, 8, 28, 24, 38]


Invert decision for 38 at level 9


New level: 10
 pending : [9, 36, 23, 37, 26, 41, 6, 21, 20, 17, 14, 19, 16, 18, 5, 29, 30, 39, 43, 44, 45, 46, 51]
 solution : [7, 8, 28, 24]


Before reduction : 
 pending  : [9, 36, 23, 37, 26, 41, 6, 21, 20, 17, 14, 19, 16, 18, 5, 29, 30, 39, 43, 44, 45, 46, 51]
 solution : [7, 8, 28, 24]

Essensial at level 10 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, 131072), (7, -1), (8, -1), (9, 131072), (10, -1), (11, -1), (12, -1), (13, -1), (14, 2097152), (15, -1), (16, 4194304), (17, 65536), (18, 16777216), (19, 8388608), (20, 131072), (21, 135168), (22, -1), (23, 131072), (24, -1), (25, -1), (26, 1048576), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, 8388608), (37, 512), (38, -1), (39, -1), (40, -1), (41, 1048576), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 262144), (6, 262144), (7, -1), (8, -1), (9, 33554432), (10, -1), (11, -1), (12, -1), (13, -1), (14, 2097152), (15, -1), (16, 4194304), (17, 65536), (18, 16777216), (19, 8388608), (20, 131072), (21, 278528), (22, -1), (23, 33554432), (24, -1), (25, -1), (26, 1048576), (27, -1), (28, -1), (29, 262144), (30, 4096), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, 33554432), (37, 512), (38, -1), (39, 4096), (40, -1), (41, 1048576), (42, -1), (43, 131072), (44, 131072), (45, 33554432), (46, 4194304), (47, -1), (48, -1), (49, -1), (50, -1), (51, 33554432), (52, -1)]

Covered at level 10 : set()

After reduction : 
 pending  : [9, 36, 23, 37, 26, 41, 6, 21, 20, 17, 14, 19, 16, 18, 5, 29, 30, 39, 43, 44, 45, 46, 51]
 solution : [7, 8, 28, 24]


Solution : [7, 8, 28, 24] has cost 22.


Decide in level 10 among pending : [9, 36, 23, 37, 26, 41, 6, 21, 20, 17, 14, 19, 16, 18, 5, 29, 30, 39, 43, 44, 45, 46, 51]

Coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 262144), (6, 262144), (7, -1), (8, -1), (9, 33554432), (10, -1), (11, -1), (12, -1), (13, -1), (14, 2097152), (15, -1), (16, 4194304), (17, 65536), (18, 16777216), (19, 8388608), (20, 131072), (21, 278528), (22, -1), (23, 33554432), (24, -1), (25, -1), (26, 1048576), (27, -1), (28, -1), (29, 262144), (30, 4096), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, 33554432), (37, 512), (38, -1), (39, 4096), (40, -1), (41, 1048576), (42, -1), (43, 131072), (44, 131072), (45, 33554432), (46, 4194304), (47, -1), (48, -1), (49, -1), (50, -1), (51, 33554432), (52, -1)]

Decide 9 with phase True at level 10

After decision at level 10
 pending : [36, 23, 37, 26, 41, 6, 21, 20, 17, 14, 19, 16, 18, 5, 29, 30, 39, 43, 44, 45, 46, 51]
 solution : [7, 8, 28, 24, 9]


New level: 11
 pending : [36, 23, 37, 26, 41, 6, 21, 20, 17, 14, 19, 16, 18, 5, 29, 30, 39, 43, 44, 45, 46, 51]
 solution : [7, 8, 28, 24, 9]


Before reduction : 
 pending  : [36, 23, 37, 26, 41, 6, 21, 20, 17, 14, 19, 16, 18, 5, 29, 30, 39, 43, 44, 45, 46, 51]
 solution : [7, 8, 28, 24, 9]

Essensial at level 11 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 262144), (6, 262144), (7, -1), (8, -1), (9, 33554432), (10, -1), (11, -1), (12, -1), (13, -1), (14, 2097152), (15, -1), (16, 4194304), (17, 65536), (18, 16777216), (19, 8388608), (20, 131072), (21, 278528), (22, -1), (23, 33554432), (24, -1), (25, -1), (26, 1048576), (27, -1), (28, -1), (29, 262144), (30, 4096), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, 33554432), (37, 512), (38, -1), (39, 4096), (40, -1), (41, 1048576), (42, -1), (43, 131072), (44, 131072), (45, 33554432), (46, 4194304), (47, -1), (48, -1), (49, -1), (50, -1), (51, 33554432), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 0), (6, 131072), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 2097152), (15, -1), (16, 4194304), (17, 65536), (18, 8388608), (19, 4194304), (20, 65536), (21, 135168), (22, -1), (23, 0), (24, -1), (25, -1), (26, 524288), (27, -1), (28, -1), (29, 0), (30, 0), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, 32768), (37, 512), (38, -1), (39, 0), (40, -1), (41, 524288), (42, -1), (43, 0), (44, 0), (45, 0), (46, 0), (47, -1), (48, -1), (49, -1), (50, -1), (51, 0), (52, -1)]

Covered at level 11 : {5, 39, 43, 44, 45, 46, 51, 23, 29, 30}

After reduction : 
 pending  : [36, 37, 26, 41, 6, 21, 20, 17, 14, 19, 16, 18]
 solution : [7, 8, 28, 24, 9]


Before reduction : 
 pending  : [36, 37, 26, 41, 6, 21, 20, 17, 14, 19, 16, 18]
 solution : [7, 8, 28, 24, 9]

Essensial at level 11 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 0), (6, 131072), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 2097152), (15, -1), (16, 4194304), (17, 65536), (18, 8388608), (19, 4194304), (20, 65536), (21, 135168), (22, -1), (23, 0), (24, -1), (25, -1), (26, 524288), (27, -1), (28, -1), (29, 0), (30, 0), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, 32768), (37, 512), (38, -1), (39, 0), (40, -1), (41, 524288), (42, -1), (43, 0), (44, 0), (45, 0), (46, 0), (47, -1), (48, -1), (49, -1), (50, -1), (51, 0), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, 131072), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 2097152), (15, -1), (16, 4194304), (17, 65536), (18, 8388608), (19, 4194304), (20, 65536), (21, 135168), (22, -1), (23, -1), (24, -1), (25, -1), (26, 524288), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, 32768), (37, 512), (38, -1), (39, -1), (40, -1), (41, 524288), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 11 : set()

After reduction : 
 pending  : [36, 37, 26, 41, 6, 21, 20, 17, 14, 19, 16, 18]
 solution : [7, 8, 28, 24, 9]


Solution : [7, 8, 28, 24, 9] has cost 26.


Before backtrack at level 11
 pending : [36, 37, 26, 41, 6, 21, 20, 17, 14, 19, 16, 18]
 solution : [7, 8, 28, 24, 9]

After backtrack at level 11
 pending : [36, 37, 26, 41, 6, 21, 20, 17, 14, 19, 16, 18, 23, 5, 29, 30, 39, 43, 44, 45, 46, 51]
 solution : [7, 8, 28, 24, 9]


Invert decision for 9 at level 10


New level: 11
 pending : [36, 37, 26, 41, 6, 21, 20, 17, 14, 19, 16, 18, 23, 5, 29, 30, 39, 43, 44, 45, 46, 51]
 solution : [7, 8, 28, 24]


Before reduction : 
 pending  : [36, 37, 26, 41, 6, 21, 20, 17, 14, 19, 16, 18, 23, 5, 29, 30, 39, 43, 44, 45, 46, 51]
 solution : [7, 8, 28, 24]

Essensial at level 11 : {23}

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, 131072), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 2097152), (15, -1), (16, 4194304), (17, 65536), (18, 8388608), (19, 4194304), (20, 65536), (21, 135168), (22, -1), (23, -1), (24, -1), (25, -1), (26, 524288), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, 32768), (37, 512), (38, -1), (39, -1), (40, -1), (41, 524288), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 0), (6, 131072), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 2097152), (15, -1), (16, 4194304), (17, 65536), (18, 8388608), (19, 4194304), (20, 65536), (21, 135168), (22, -1), (23, -1), (24, -1), (25, -1), (26, 524288), (27, -1), (28, -1), (29, 0), (30, 0), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, 262144), (37, 512), (38, -1), (39, 0), (40, -1), (41, 524288), (42, -1), (43, 0), (44, 0), (45, 0), (46, 0), (47, -1), (48, -1), (49, -1), (50, -1), (51, 0), (52, -1)]

Covered at level 11 : {5, 39, 43, 44, 45, 46, 51, 29, 30}

After reduction : 
 pending  : [36, 37, 26, 41, 6, 21, 20, 17, 14, 19, 16, 18]
 solution : [7, 8, 28, 24, 23]


Before reduction : 
 pending  : [36, 37, 26, 41, 6, 21, 20, 17, 14, 19, 16, 18]
 solution : [7, 8, 28, 24, 23]

Essensial at level 11 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 0), (6, 131072), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 2097152), (15, -1), (16, 4194304), (17, 65536), (18, 8388608), (19, 4194304), (20, 65536), (21, 135168), (22, -1), (23, -1), (24, -1), (25, -1), (26, 524288), (27, -1), (28, -1), (29, 0), (30, 0), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, 262144), (37, 512), (38, -1), (39, 0), (40, -1), (41, 524288), (42, -1), (43, 0), (44, 0), (45, 0), (46, 0), (47, -1), (48, -1), (49, -1), (50, -1), (51, 0), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, 131072), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 2097152), (15, -1), (16, 4194304), (17, 65536), (18, 8388608), (19, 4194304), (20, 65536), (21, 135168), (22, -1), (23, -1), (24, -1), (25, -1), (26, 524288), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, 262144), (37, 512), (38, -1), (39, -1), (40, -1), (41, 524288), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 11 : set()

After reduction : 
 pending  : [36, 37, 26, 41, 6, 21, 20, 17, 14, 19, 16, 18]
 solution : [7, 8, 28, 24, 23]


Solution : [7, 8, 28, 24, 23] has cost 29.


Before backtrack at level 11
 pending : [36, 37, 26, 41, 6, 21, 20, 17, 14, 19, 16, 18]
 solution : [7, 8, 28, 24, 23]

After backtrack at level 11
 pending : [36, 37, 26, 41, 6, 21, 20, 17, 14, 19, 16, 18, 23, 5, 29, 30, 39, 43, 44, 45, 46, 51]
 solution : [7, 8, 28, 24]


Before backtrack at level 10
 pending : [36, 37, 26, 41, 6, 21, 20, 17, 14, 19, 16, 18, 23, 5, 29, 30, 39, 43, 44, 45, 46, 51]
 solution : [7, 8, 28, 24]

After backtrack at level 10
 pending : [36, 37, 26, 41, 6, 21, 20, 17, 14, 19, 16, 18, 23, 5, 29, 30, 39, 43, 44, 45, 46, 51, 9]
 solution : [7, 8, 28, 24]


Before backtrack at level 9
 pending : [36, 37, 26, 41, 6, 21, 20, 17, 14, 19, 16, 18, 23, 5, 29, 30, 39, 43, 44, 45, 46, 51, 9]
 solution : [7, 8, 28, 24]

After backtrack at level 9
 pending : [36, 37, 26, 41, 6, 21, 20, 17, 14, 19, 16, 18, 23, 5, 29, 30, 39, 43, 44, 45, 46, 51, 9, 38]
 solution : [7, 8, 28, 24]


Before backtrack at level 8
 pending : [36, 37, 26, 41, 6, 21, 20, 17, 14, 19, 16, 18, 23, 5, 29, 30, 39, 43, 44, 45, 46, 51, 9, 38]
 solution : [7, 8, 28, 24]

After backtrack at level 8
 pending : [36, 37, 26, 41, 6, 21, 20, 17, 14, 19, 16, 18, 23, 5, 29, 30, 39, 43, 44, 45, 46, 51, 9, 38, 31, 33, 15]
 solution : [7, 8, 28, 24]


Invert decision for 24 at level 7


New level: 8
 pending : [36, 37, 26, 41, 6, 21, 20, 17, 14, 19, 16, 18, 23, 5, 29, 30, 39, 43, 44, 45, 46, 51, 9, 38, 31, 33, 15]
 solution : [7, 8, 28]


Before reduction : 
 pending  : [36, 37, 26, 41, 6, 21, 20, 17, 14, 19, 16, 18, 23, 5, 29, 30, 39, 43, 44, 45, 46, 51, 9, 38, 31, 33, 15]
 solution : [7, 8, 28]

Essensial at level 8 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, 131072), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 2097152), (15, -1), (16, 4194304), (17, 65536), (18, 8388608), (19, 4194304), (20, 65536), (21, 135168), (22, -1), (23, -1), (24, -1), (25, -1), (26, 524288), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, 262144), (37, 512), (38, -1), (39, -1), (40, -1), (41, 524288), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 1048576), (6, 262144), (7, -1), (8, -1), (9, 134217728), (10, -1), (11, -1), (12, -1), (13, -1), (14, 2097152), (15, 268435456), (16, 4194304), (17, 65536), (18, 16777216), (19, 8388608), (20, 131072), (21, 278528), (22, -1), (23, 134217728), (24, -1), (25, -1), (26, 1048576), (27, -1), (28, -1), (29, 1048576), (30, 16384), (31, 16384), (32, -1), (33, 2097152), (34, -1), (35, -1), (36, 67108864), (37, 134217728), (38, 134217728), (39, 16384), (40, -1), (41, 1048576), (42, -1), (43, 524288), (44, 524288), (45, 67108864), (46, 16777216), (47, -1), (48, -1), (49, -1), (50, -1), (51, 67108864), (52, -1)]

Covered at level 8 : set()

After reduction : 
 pending  : [36, 37, 26, 41, 6, 21, 20, 17, 14, 19, 16, 18, 23, 5, 29, 30, 39, 43, 44, 45, 46, 51, 9, 38, 31, 33, 15]
 solution : [7, 8, 28]


Solution : [7, 8, 28] has cost 15.


Decide in level 8 among pending : [36, 37, 26, 41, 6, 21, 20, 17, 14, 19, 16, 18, 23, 5, 29, 30, 39, 43, 44, 45, 46, 51, 9, 38, 31, 33, 15]

Coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 1048576), (6, 262144), (7, -1), (8, -1), (9, 134217728), (10, -1), (11, -1), (12, -1), (13, -1), (14, 2097152), (15, 268435456), (16, 4194304), (17, 65536), (18, 16777216), (19, 8388608), (20, 131072), (21, 278528), (22, -1), (23, 134217728), (24, -1), (25, -1), (26, 1048576), (27, -1), (28, -1), (29, 1048576), (30, 16384), (31, 16384), (32, -1), (33, 2097152), (34, -1), (35, -1), (36, 67108864), (37, 134217728), (38, 134217728), (39, 16384), (40, -1), (41, 1048576), (42, -1), (43, 524288), (44, 524288), (45, 67108864), (46, 16777216), (47, -1), (48, -1), (49, -1), (50, -1), (51, 67108864), (52, -1)]

Decide 15 with phase True at level 8

After decision at level 8
 pending : [36, 37, 26, 41, 6, 21, 20, 17, 14, 19, 16, 18, 23, 5, 29, 30, 39, 43, 44, 45, 46, 51, 9, 38, 31, 33]
 solution : [7, 8, 28, 15]


New level: 9
 pending : [36, 37, 26, 41, 6, 21, 20, 17, 14, 19, 16, 18, 23, 5, 29, 30, 39, 43, 44, 45, 46, 51, 9, 38, 31, 33]
 solution : [7, 8, 28, 15]


Before reduction : 
 pending  : [36, 37, 26, 41, 6, 21, 20, 17, 14, 19, 16, 18, 23, 5, 29, 30, 39, 43, 44, 45, 46, 51, 9, 38, 31, 33]
 solution : [7, 8, 28, 15]

Essensial at level 9 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 1048576), (6, 262144), (7, -1), (8, -1), (9, 134217728), (10, -1), (11, -1), (12, -1), (13, -1), (14, 2097152), (15, 268435456), (16, 4194304), (17, 65536), (18, 16777216), (19, 8388608), (20, 131072), (21, 278528), (22, -1), (23, 134217728), (24, -1), (25, -1), (26, 1048576), (27, -1), (28, -1), (29, 1048576), (30, 16384), (31, 16384), (32, -1), (33, 2097152), (34, -1), (35, -1), (36, 67108864), (37, 134217728), (38, 134217728), (39, 16384), (40, -1), (41, 1048576), (42, -1), (43, 524288), (44, 524288), (45, 67108864), (46, 16777216), (47, -1), (48, -1), (49, -1), (50, -1), (51, 67108864), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 262144), (6, 0), (7, -1), (8, -1), (9, 134217728), (10, -1), (11, -1), (12, -1), (13, -1), (14, 0), (15, -1), (16, 0), (17, 0), (18, 0), (19, 0), (20, 0), (21, 0), (22, -1), (23, 134217728), (24, -1), (25, -1), (26, 0), (27, -1), (28, -1), (29, 524288), (30, 4096), (31, 4096), (32, -1), (33, 2097152), (34, -1), (35, -1), (36, 2048), (37, 2048), (38, 67108864), (39, 2048), (40, -1), (41, 0), (42, -1), (43, 262144), (44, 262144), (45, 33554432), (46, 4194304), (47, -1), (48, -1), (49, -1), (50, -1), (51, 67108864), (52, -1)]

Covered at level 9 : {6, 41, 14, 16, 17, 18, 19, 20, 21, 26}

After reduction : 
 pending  : [36, 37, 23, 5, 29, 30, 39, 43, 44, 45, 46, 51, 9, 38, 31, 33]
 solution : [7, 8, 28, 15]


Before reduction : 
 pending  : [36, 37, 23, 5, 29, 30, 39, 43, 44, 45, 46, 51, 9, 38, 31, 33]
 solution : [7, 8, 28, 15]

Essensial at level 9 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 262144), (6, 0), (7, -1), (8, -1), (9, 134217728), (10, -1), (11, -1), (12, -1), (13, -1), (14, 0), (15, -1), (16, 0), (17, 0), (18, 0), (19, 0), (20, 0), (21, 0), (22, -1), (23, 134217728), (24, -1), (25, -1), (26, 0), (27, -1), (28, -1), (29, 524288), (30, 4096), (31, 4096), (32, -1), (33, 2097152), (34, -1), (35, -1), (36, 2048), (37, 2048), (38, 67108864), (39, 2048), (40, -1), (41, 0), (42, -1), (43, 262144), (44, 262144), (45, 33554432), (46, 4194304), (47, -1), (48, -1), (49, -1), (50, -1), (51, 67108864), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 262144), (6, -1), (7, -1), (8, -1), (9, 134217728), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, 134217728), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, 524288), (30, 4096), (31, 4096), (32, -1), (33, 2097152), (34, -1), (35, -1), (36, 2048), (37, 2048), (38, 67108864), (39, 2048), (40, -1), (41, -1), (42, -1), (43, 262144), (44, 262144), (45, 33554432), (46, 4194304), (47, -1), (48, -1), (49, -1), (50, -1), (51, 67108864), (52, -1)]

Covered at level 9 : set()

After reduction : 
 pending  : [36, 37, 23, 5, 29, 30, 39, 43, 44, 45, 46, 51, 9, 38, 31, 33]
 solution : [7, 8, 28, 15]


Solution : [7, 8, 28, 15] has cost 22.


Decide in level 9 among pending : [36, 37, 23, 5, 29, 30, 39, 43, 44, 45, 46, 51, 9, 38, 31, 33]

Coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 262144), (6, -1), (7, -1), (8, -1), (9, 134217728), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, 134217728), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, 524288), (30, 4096), (31, 4096), (32, -1), (33, 2097152), (34, -1), (35, -1), (36, 2048), (37, 2048), (38, 67108864), (39, 2048), (40, -1), (41, -1), (42, -1), (43, 262144), (44, 262144), (45, 33554432), (46, 4194304), (47, -1), (48, -1), (49, -1), (50, -1), (51, 67108864), (52, -1)]

Decide 23 with phase True at level 9

After decision at level 9
 pending : [36, 37, 5, 29, 30, 39, 43, 44, 45, 46, 51, 9, 38, 31, 33]
 solution : [7, 8, 28, 15, 23]


New level: 10
 pending : [36, 37, 5, 29, 30, 39, 43, 44, 45, 46, 51, 9, 38, 31, 33]
 solution : [7, 8, 28, 15, 23]


Before reduction : 
 pending  : [36, 37, 5, 29, 30, 39, 43, 44, 45, 46, 51, 9, 38, 31, 33]
 solution : [7, 8, 28, 15, 23]

Essensial at level 10 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 262144), (6, -1), (7, -1), (8, -1), (9, 134217728), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, 134217728), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, 524288), (30, 4096), (31, 4096), (32, -1), (33, 2097152), (34, -1), (35, -1), (36, 2048), (37, 2048), (38, 67108864), (39, 2048), (40, -1), (41, -1), (42, -1), (43, 262144), (44, 262144), (45, 33554432), (46, 4194304), (47, -1), (48, -1), (49, -1), (50, -1), (51, 67108864), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 0), (6, -1), (7, -1), (8, -1), (9, 0), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, 0), (30, 0), (31, 0), (32, -1), (33, 0), (34, -1), (35, -1), (36, 0), (37, 0), (38, 0), (39, 0), (40, -1), (41, -1), (42, -1), (43, 0), (44, 0), (45, 0), (46, 0), (47, -1), (48, -1), (49, -1), (50, -1), (51, 0), (52, -1)]

Covered at level 10 : {33, 36, 5, 37, 39, 38, 9, 43, 44, 45, 46, 51, 29, 30, 31}

After reduction : 
 pending  : []
 solution : [7, 8, 28, 15, 23]


Before reduction : 
 pending  : []
 solution : [7, 8, 28, 15, 23]

Essensial at level 10 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 0), (6, -1), (7, -1), (8, -1), (9, 0), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, 0), (30, 0), (31, 0), (32, -1), (33, 0), (34, -1), (35, -1), (36, 0), (37, 0), (38, 0), (39, 0), (40, -1), (41, -1), (42, -1), (43, 0), (44, 0), (45, 0), (46, 0), (47, -1), (48, -1), (49, -1), (50, -1), (51, 0), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 10 : set()

After reduction : 
 pending  : []
 solution : [7, 8, 28, 15, 23]


Solution : [7, 8, 28, 15, 23] has cost 29.


Before backtrack at level 10
 pending : []
 solution : [7, 8, 28, 15, 23]

After backtrack at level 10
 pending : [36, 37, 5, 29, 30, 39, 43, 44, 45, 46, 51, 9, 38, 31, 33]
 solution : [7, 8, 28, 15, 23]


Invert decision for 23 at level 9


New level: 10
 pending : [36, 37, 5, 29, 30, 39, 43, 44, 45, 46, 51, 9, 38, 31, 33]
 solution : [7, 8, 28, 15]


Before reduction : 
 pending  : [36, 37, 5, 29, 30, 39, 43, 44, 45, 46, 51, 9, 38, 31, 33]
 solution : [7, 8, 28, 15]

Essensial at level 10 : {9}

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 0), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, 0), (30, 0), (31, 0), (32, -1), (33, 0), (34, -1), (35, -1), (36, 0), (37, 0), (38, 0), (39, 0), (40, -1), (41, -1), (42, -1), (43, 0), (44, 0), (45, 0), (46, 0), (47, -1), (48, -1), (49, -1), (50, -1), (51, 0), (52, -1)]

Covered at level 10 : {33, 36, 5, 37, 39, 38, 43, 44, 45, 46, 51, 29, 30, 31}

After reduction : 
 pending  : []
 solution : [7, 8, 28, 15, 9]


Before reduction : 
 pending  : []
 solution : [7, 8, 28, 15, 9]

Essensial at level 10 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 0), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, 0), (30, 0), (31, 0), (32, -1), (33, 0), (34, -1), (35, -1), (36, 0), (37, 0), (38, 0), (39, 0), (40, -1), (41, -1), (42, -1), (43, 0), (44, 0), (45, 0), (46, 0), (47, -1), (48, -1), (49, -1), (50, -1), (51, 0), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 10 : set()

After reduction : 
 pending  : []
 solution : [7, 8, 28, 15, 9]


Solution : [7, 8, 28, 15, 9] has cost 26.


Before backtrack at level 10
 pending : []
 solution : [7, 8, 28, 15, 9]

After backtrack at level 10
 pending : [9, 36, 37, 5, 29, 30, 39, 43, 44, 45, 46, 51, 38, 31, 33]
 solution : [7, 8, 28, 15]


Before backtrack at level 9
 pending : [9, 36, 37, 5, 29, 30, 39, 43, 44, 45, 46, 51, 38, 31, 33]
 solution : [7, 8, 28, 15]

After backtrack at level 9
 pending : [9, 36, 37, 5, 29, 30, 39, 43, 44, 45, 46, 51, 38, 31, 33, 26, 41, 6, 21, 20, 17, 14, 19, 16, 18, 23]
 solution : [7, 8, 28, 15]


Invert decision for 15 at level 8


New level: 9
 pending : [9, 36, 37, 5, 29, 30, 39, 43, 44, 45, 46, 51, 38, 31, 33, 26, 41, 6, 21, 20, 17, 14, 19, 16, 18, 23]
 solution : [7, 8, 28]


Before reduction : 
 pending  : [9, 36, 37, 5, 29, 30, 39, 43, 44, 45, 46, 51, 38, 31, 33, 26, 41, 6, 21, 20, 17, 14, 19, 16, 18, 23]
 solution : [7, 8, 28]

Essensial at level 9 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 1048576), (6, 262144), (7, -1), (8, -1), (9, 134217728), (10, -1), (11, -1), (12, -1), (13, -1), (14, 2097152), (15, -1), (16, 4194304), (17, 65536), (18, 16777216), (19, 8388608), (20, 131072), (21, 278528), (22, -1), (23, 134217728), (24, -1), (25, -1), (26, 1048576), (27, -1), (28, -1), (29, 1048576), (30, 16384), (31, 16384), (32, -1), (33, 2097152), (34, -1), (35, -1), (36, 67108864), (37, 134217728), (38, 134217728), (39, 16384), (40, -1), (41, 1048576), (42, -1), (43, 524288), (44, 524288), (45, 67108864), (46, 16777216), (47, -1), (48, -1), (49, -1), (50, -1), (51, 67108864), (52, -1)]

Covered at level 9 : set()

After reduction : 
 pending  : [9, 36, 37, 5, 29, 30, 39, 43, 44, 45, 46, 51, 38, 31, 33, 26, 41, 6, 21, 20, 17, 14, 19, 16, 18, 23]
 solution : [7, 8, 28]


Solution : [7, 8, 28] has cost 15.


Decide in level 9 among pending : [9, 36, 37, 5, 29, 30, 39, 43, 44, 45, 46, 51, 38, 31, 33, 26, 41, 6, 21, 20, 17, 14, 19, 16, 18, 23]

Coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 1048576), (6, 262144), (7, -1), (8, -1), (9, 134217728), (10, -1), (11, -1), (12, -1), (13, -1), (14, 2097152), (15, -1), (16, 4194304), (17, 65536), (18, 16777216), (19, 8388608), (20, 131072), (21, 278528), (22, -1), (23, 134217728), (24, -1), (25, -1), (26, 1048576), (27, -1), (28, -1), (29, 1048576), (30, 16384), (31, 16384), (32, -1), (33, 2097152), (34, -1), (35, -1), (36, 67108864), (37, 134217728), (38, 134217728), (39, 16384), (40, -1), (41, 1048576), (42, -1), (43, 524288), (44, 524288), (45, 67108864), (46, 16777216), (47, -1), (48, -1), (49, -1), (50, -1), (51, 67108864), (52, -1)]

Decide 9 with phase True at level 9

After decision at level 9
 pending : [36, 37, 5, 29, 30, 39, 43, 44, 45, 46, 51, 38, 31, 33, 26, 41, 6, 21, 20, 17, 14, 19, 16, 18, 23]
 solution : [7, 8, 28, 9]


New level: 10
 pending : [36, 37, 5, 29, 30, 39, 43, 44, 45, 46, 51, 38, 31, 33, 26, 41, 6, 21, 20, 17, 14, 19, 16, 18, 23]
 solution : [7, 8, 28, 9]


Before reduction : 
 pending  : [36, 37, 5, 29, 30, 39, 43, 44, 45, 46, 51, 38, 31, 33, 26, 41, 6, 21, 20, 17, 14, 19, 16, 18, 23]
 solution : [7, 8, 28, 9]

Essensial at level 10 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 1048576), (6, 262144), (7, -1), (8, -1), (9, 134217728), (10, -1), (11, -1), (12, -1), (13, -1), (14, 2097152), (15, -1), (16, 4194304), (17, 65536), (18, 16777216), (19, 8388608), (20, 131072), (21, 278528), (22, -1), (23, 134217728), (24, -1), (25, -1), (26, 1048576), (27, -1), (28, -1), (29, 1048576), (30, 16384), (31, 16384), (32, -1), (33, 2097152), (34, -1), (35, -1), (36, 67108864), (37, 134217728), (38, 134217728), (39, 16384), (40, -1), (41, 1048576), (42, -1), (43, 524288), (44, 524288), (45, 67108864), (46, 16777216), (47, -1), (48, -1), (49, -1), (50, -1), (51, 67108864), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 0), (6, 131072), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 2097152), (15, -1), (16, 4194304), (17, 65536), (18, 8388608), (19, 4194304), (20, 65536), (21, 135168), (22, -1), (23, 0), (24, -1), (25, -1), (26, 524288), (27, -1), (28, -1), (29, 0), (30, 0), (31, 0), (32, -1), (33, 0), (34, -1), (35, -1), (36, 32768), (37, 512), (38, 0), (39, 0), (40, -1), (41, 524288), (42, -1), (43, 0), (44, 0), (45, 0), (46, 0), (47, -1), (48, -1), (49, -1), (50, -1), (51, 0), (52, -1)]

Covered at level 10 : {33, 5, 38, 39, 43, 44, 45, 46, 51, 23, 29, 30, 31}

After reduction : 
 pending  : [36, 37, 26, 41, 6, 21, 20, 17, 14, 19, 16, 18]
 solution : [7, 8, 28, 9]


Before reduction : 
 pending  : [36, 37, 26, 41, 6, 21, 20, 17, 14, 19, 16, 18]
 solution : [7, 8, 28, 9]

Essensial at level 10 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 0), (6, 131072), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 2097152), (15, -1), (16, 4194304), (17, 65536), (18, 8388608), (19, 4194304), (20, 65536), (21, 135168), (22, -1), (23, 0), (24, -1), (25, -1), (26, 524288), (27, -1), (28, -1), (29, 0), (30, 0), (31, 0), (32, -1), (33, 0), (34, -1), (35, -1), (36, 32768), (37, 512), (38, 0), (39, 0), (40, -1), (41, 524288), (42, -1), (43, 0), (44, 0), (45, 0), (46, 0), (47, -1), (48, -1), (49, -1), (50, -1), (51, 0), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, 131072), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 2097152), (15, -1), (16, 4194304), (17, 65536), (18, 8388608), (19, 4194304), (20, 65536), (21, 135168), (22, -1), (23, -1), (24, -1), (25, -1), (26, 524288), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, 32768), (37, 512), (38, -1), (39, -1), (40, -1), (41, 524288), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 10 : set()

After reduction : 
 pending  : [36, 37, 26, 41, 6, 21, 20, 17, 14, 19, 16, 18]
 solution : [7, 8, 28, 9]


Solution : [7, 8, 28, 9] has cost 19.


Decide in level 10 among pending : [36, 37, 26, 41, 6, 21, 20, 17, 14, 19, 16, 18]

Coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, 131072), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 2097152), (15, -1), (16, 4194304), (17, 65536), (18, 8388608), (19, 4194304), (20, 65536), (21, 135168), (22, -1), (23, -1), (24, -1), (25, -1), (26, 524288), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, 32768), (37, 512), (38, -1), (39, -1), (40, -1), (41, 524288), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Decide 18 with phase True at level 10

After decision at level 10
 pending : [36, 37, 26, 41, 6, 21, 20, 17, 14, 19, 16]
 solution : [7, 8, 28, 9, 18]


New level: 11
 pending : [36, 37, 26, 41, 6, 21, 20, 17, 14, 19, 16]
 solution : [7, 8, 28, 9, 18]


Before reduction : 
 pending  : [36, 37, 26, 41, 6, 21, 20, 17, 14, 19, 16]
 solution : [7, 8, 28, 9, 18]

Essensial at level 11 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, 131072), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 2097152), (15, -1), (16, 4194304), (17, 65536), (18, 8388608), (19, 4194304), (20, 65536), (21, 135168), (22, -1), (23, -1), (24, -1), (25, -1), (26, 524288), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, 32768), (37, 512), (38, -1), (39, -1), (40, -1), (41, 524288), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, 0), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 16384), (15, -1), (16, 65536), (17, 16384), (18, -1), (19, 0), (20, 0), (21, 0), (22, -1), (23, -1), (24, -1), (25, -1), (26, 2048), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, 1024), (37, 512), (38, -1), (39, -1), (40, -1), (41, 2048), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 11 : {19, 20, 21, 6}

After reduction : 
 pending  : [36, 37, 26, 41, 17, 14, 16]
 solution : [7, 8, 28, 9, 18]


Before reduction : 
 pending  : [36, 37, 26, 41, 17, 14, 16]
 solution : [7, 8, 28, 9, 18]

Essensial at level 11 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, 0), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 16384), (15, -1), (16, 65536), (17, 16384), (18, -1), (19, 0), (20, 0), (21, 0), (22, -1), (23, -1), (24, -1), (25, -1), (26, 2048), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, 1024), (37, 512), (38, -1), (39, -1), (40, -1), (41, 2048), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 16384), (15, -1), (16, 65536), (17, 16384), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, 2048), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, 1024), (37, 512), (38, -1), (39, -1), (40, -1), (41, 2048), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 11 : set()

After reduction : 
 pending  : [36, 37, 26, 41, 17, 14, 16]
 solution : [7, 8, 28, 9, 18]


Solution : [7, 8, 28, 9, 18] has cost 28.


Before backtrack at level 11
 pending : [36, 37, 26, 41, 17, 14, 16]
 solution : [7, 8, 28, 9, 18]

After backtrack at level 11
 pending : [36, 37, 26, 41, 17, 14, 16, 6, 21, 20, 19]
 solution : [7, 8, 28, 9, 18]


Invert decision for 18 at level 10


New level: 11
 pending : [36, 37, 26, 41, 17, 14, 16, 6, 21, 20, 19]
 solution : [7, 8, 28, 9]


Before reduction : 
 pending  : [36, 37, 26, 41, 17, 14, 16, 6, 21, 20, 19]
 solution : [7, 8, 28, 9]

Essensial at level 11 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 16384), (15, -1), (16, 65536), (17, 16384), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, 2048), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, 1024), (37, 512), (38, -1), (39, -1), (40, -1), (41, 2048), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, 131072), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 2097152), (15, -1), (16, 4194304), (17, 65536), (18, -1), (19, 4194304), (20, 65536), (21, 135168), (22, -1), (23, -1), (24, -1), (25, -1), (26, 524288), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, 32768), (37, 512), (38, -1), (39, -1), (40, -1), (41, 524288), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 11 : set()

After reduction : 
 pending  : [36, 37, 26, 41, 17, 14, 16, 6, 21, 20, 19]
 solution : [7, 8, 28, 9]


Solution : [7, 8, 28, 9] has cost 19.


Decide in level 11 among pending : [36, 37, 26, 41, 17, 14, 16, 6, 21, 20, 19]

Coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, 131072), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 2097152), (15, -1), (16, 4194304), (17, 65536), (18, -1), (19, 4194304), (20, 65536), (21, 135168), (22, -1), (23, -1), (24, -1), (25, -1), (26, 524288), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, 32768), (37, 512), (38, -1), (39, -1), (40, -1), (41, 524288), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Decide 16 with phase True at level 11

After decision at level 11
 pending : [36, 37, 26, 41, 17, 14, 6, 21, 20, 19]
 solution : [7, 8, 28, 9, 16]


New level: 12
 pending : [36, 37, 26, 41, 17, 14, 6, 21, 20, 19]
 solution : [7, 8, 28, 9, 16]


Before reduction : 
 pending  : [36, 37, 26, 41, 17, 14, 6, 21, 20, 19]
 solution : [7, 8, 28, 9, 16]

Essensial at level 12 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, 131072), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 2097152), (15, -1), (16, 4194304), (17, 65536), (18, -1), (19, 4194304), (20, 65536), (21, 135168), (22, -1), (23, -1), (24, -1), (25, -1), (26, 524288), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, 32768), (37, 512), (38, -1), (39, -1), (40, -1), (41, 524288), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, 65536), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 0), (15, -1), (16, -1), (17, 0), (18, -1), (19, 1048576), (20, 0), (21, 66048), (22, -1), (23, -1), (24, -1), (25, -1), (26, 131072), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, 512), (37, 0), (38, -1), (39, -1), (40, -1), (41, 131072), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 12 : {17, 20, 37, 14}

After reduction : 
 pending  : [36, 26, 41, 6, 21, 19]
 solution : [7, 8, 28, 9, 16]


Before reduction : 
 pending  : [36, 26, 41, 6, 21, 19]
 solution : [7, 8, 28, 9, 16]

Essensial at level 12 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, 65536), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 0), (15, -1), (16, -1), (17, 0), (18, -1), (19, 1048576), (20, 0), (21, 66048), (22, -1), (23, -1), (24, -1), (25, -1), (26, 131072), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, 512), (37, 0), (38, -1), (39, -1), (40, -1), (41, 131072), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, 65536), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, 1048576), (20, -1), (21, 66048), (22, -1), (23, -1), (24, -1), (25, -1), (26, 131072), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, 512), (37, -1), (38, -1), (39, -1), (40, -1), (41, 131072), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 12 : set()

After reduction : 
 pending  : [36, 26, 41, 6, 21, 19]
 solution : [7, 8, 28, 9, 16]


Solution : [7, 8, 28, 9, 16] has cost 26.


Before backtrack at level 12
 pending : [36, 26, 41, 6, 21, 19]
 solution : [7, 8, 28, 9, 16]

After backtrack at level 12
 pending : [36, 26, 41, 6, 21, 19, 37, 17, 14, 20]
 solution : [7, 8, 28, 9, 16]


Invert decision for 16 at level 11


New level: 12
 pending : [36, 26, 41, 6, 21, 19, 37, 17, 14, 20]
 solution : [7, 8, 28, 9]


Before reduction : 
 pending  : [36, 26, 41, 6, 21, 19, 37, 17, 14, 20]
 solution : [7, 8, 28, 9]

Essensial at level 12 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, 65536), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, 1048576), (20, -1), (21, 66048), (22, -1), (23, -1), (24, -1), (25, -1), (26, 131072), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, 512), (37, -1), (38, -1), (39, -1), (40, -1), (41, 131072), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, 131072), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 2097152), (15, -1), (16, -1), (17, 65536), (18, -1), (19, 4194304), (20, 65536), (21, 135168), (22, -1), (23, -1), (24, -1), (25, -1), (26, 524288), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, 32768), (37, 512), (38, -1), (39, -1), (40, -1), (41, 524288), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 12 : set()

After reduction : 
 pending  : [36, 26, 41, 6, 21, 19, 37, 17, 14, 20]
 solution : [7, 8, 28, 9]


Solution : [7, 8, 28, 9] has cost 19.


Decide in level 12 among pending : [36, 26, 41, 6, 21, 19, 37, 17, 14, 20]

Coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, 131072), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 2097152), (15, -1), (16, -1), (17, 65536), (18, -1), (19, 4194304), (20, 65536), (21, 135168), (22, -1), (23, -1), (24, -1), (25, -1), (26, 524288), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, 32768), (37, 512), (38, -1), (39, -1), (40, -1), (41, 524288), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Decide 19 with phase True at level 12

After decision at level 12
 pending : [36, 26, 41, 6, 21, 37, 17, 14, 20]
 solution : [7, 8, 28, 9, 19]


New level: 13
 pending : [36, 26, 41, 6, 21, 37, 17, 14, 20]
 solution : [7, 8, 28, 9, 19]


Before reduction : 
 pending  : [36, 26, 41, 6, 21, 37, 17, 14, 20]
 solution : [7, 8, 28, 9, 19]

Essensial at level 13 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, 131072), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 2097152), (15, -1), (16, -1), (17, 65536), (18, -1), (19, 4194304), (20, 65536), (21, 135168), (22, -1), (23, -1), (24, -1), (25, -1), (26, 524288), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, 32768), (37, 512), (38, -1), (39, -1), (40, -1), (41, 524288), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, 0), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 16384), (15, -1), (16, -1), (17, 16384), (18, -1), (19, -1), (20, 0), (21, 0), (22, -1), (23, -1), (24, -1), (25, -1), (26, 2048), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, 1024), (37, 512), (38, -1), (39, -1), (40, -1), (41, 2048), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 13 : {20, 21, 6}

After reduction : 
 pending  : [36, 26, 41, 37, 17, 14]
 solution : [7, 8, 28, 9, 19]


Before reduction : 
 pending  : [36, 26, 41, 37, 17, 14]
 solution : [7, 8, 28, 9, 19]

Essensial at level 13 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, 0), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 16384), (15, -1), (16, -1), (17, 16384), (18, -1), (19, -1), (20, 0), (21, 0), (22, -1), (23, -1), (24, -1), (25, -1), (26, 2048), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, 1024), (37, 512), (38, -1), (39, -1), (40, -1), (41, 2048), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 16384), (15, -1), (16, -1), (17, 16384), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, 2048), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, 1024), (37, 512), (38, -1), (39, -1), (40, -1), (41, 2048), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 13 : set()

After reduction : 
 pending  : [36, 26, 41, 37, 17, 14]
 solution : [7, 8, 28, 9, 19]


Solution : [7, 8, 28, 9, 19] has cost 28.


Before backtrack at level 13
 pending : [36, 26, 41, 37, 17, 14]
 solution : [7, 8, 28, 9, 19]

After backtrack at level 13
 pending : [36, 26, 41, 37, 17, 14, 6, 21, 20]
 solution : [7, 8, 28, 9, 19]


Invert decision for 19 at level 12


New level: 13
 pending : [36, 26, 41, 37, 17, 14, 6, 21, 20]
 solution : [7, 8, 28, 9]


Before reduction : 
 pending  : [36, 26, 41, 37, 17, 14, 6, 21, 20]
 solution : [7, 8, 28, 9]

Essensial at level 13 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 16384), (15, -1), (16, -1), (17, 16384), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, 2048), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, 1024), (37, 512), (38, -1), (39, -1), (40, -1), (41, 2048), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, 131072), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 2097152), (15, -1), (16, -1), (17, 65536), (18, -1), (19, -1), (20, 65536), (21, 135168), (22, -1), (23, -1), (24, -1), (25, -1), (26, 524288), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, 32768), (37, 512), (38, -1), (39, -1), (40, -1), (41, 524288), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 13 : set()

After reduction : 
 pending  : [36, 26, 41, 37, 17, 14, 6, 21, 20]
 solution : [7, 8, 28, 9]


Solution : [7, 8, 28, 9] has cost 19.


Decide in level 13 among pending : [36, 26, 41, 37, 17, 14, 6, 21, 20]

Coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, 131072), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 2097152), (15, -1), (16, -1), (17, 65536), (18, -1), (19, -1), (20, 65536), (21, 135168), (22, -1), (23, -1), (24, -1), (25, -1), (26, 524288), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, 32768), (37, 512), (38, -1), (39, -1), (40, -1), (41, 524288), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Decide 14 with phase True at level 13

After decision at level 13
 pending : [36, 26, 41, 37, 17, 6, 21, 20]
 solution : [7, 8, 28, 9, 14]


New level: 14
 pending : [36, 26, 41, 37, 17, 6, 21, 20]
 solution : [7, 8, 28, 9, 14]


Before reduction : 
 pending  : [36, 26, 41, 37, 17, 6, 21, 20]
 solution : [7, 8, 28, 9, 14]

Essensial at level 14 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, 131072), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 2097152), (15, -1), (16, -1), (17, 65536), (18, -1), (19, -1), (20, 65536), (21, 135168), (22, -1), (23, -1), (24, -1), (25, -1), (26, 524288), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, 32768), (37, 512), (38, -1), (39, -1), (40, -1), (41, 524288), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, 65536), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, 0), (18, -1), (19, -1), (20, 0), (21, 66048), (22, -1), (23, -1), (24, -1), (25, -1), (26, 131072), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, 512), (37, 0), (38, -1), (39, -1), (40, -1), (41, 131072), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 14 : {17, 20, 37}

After reduction : 
 pending  : [36, 26, 41, 6, 21]
 solution : [7, 8, 28, 9, 14]


Before reduction : 
 pending  : [36, 26, 41, 6, 21]
 solution : [7, 8, 28, 9, 14]

Essensial at level 14 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, 65536), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, 0), (18, -1), (19, -1), (20, 0), (21, 66048), (22, -1), (23, -1), (24, -1), (25, -1), (26, 131072), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, 512), (37, 0), (38, -1), (39, -1), (40, -1), (41, 131072), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, 65536), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, 66048), (22, -1), (23, -1), (24, -1), (25, -1), (26, 131072), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, 512), (37, -1), (38, -1), (39, -1), (40, -1), (41, 131072), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 14 : set()

After reduction : 
 pending  : [36, 26, 41, 6, 21]
 solution : [7, 8, 28, 9, 14]


Solution : [7, 8, 28, 9, 14] has cost 26.


Before backtrack at level 14
 pending : [36, 26, 41, 6, 21]
 solution : [7, 8, 28, 9, 14]

After backtrack at level 14
 pending : [36, 26, 41, 6, 21, 37, 17, 20]
 solution : [7, 8, 28, 9, 14]


Invert decision for 14 at level 13


New level: 14
 pending : [36, 26, 41, 6, 21, 37, 17, 20]
 solution : [7, 8, 28, 9]


Before reduction : 
 pending  : [36, 26, 41, 6, 21, 37, 17, 20]
 solution : [7, 8, 28, 9]

Essensial at level 14 : {17}

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, 65536), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, 66048), (22, -1), (23, -1), (24, -1), (25, -1), (26, 131072), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, 512), (37, -1), (38, -1), (39, -1), (40, -1), (41, 131072), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, 131072), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, 32768), (21, 135168), (22, -1), (23, -1), (24, -1), (25, -1), (26, 524288), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, 32768), (37, 0), (38, -1), (39, -1), (40, -1), (41, 524288), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 14 : {37}

After reduction : 
 pending  : [36, 26, 41, 6, 21, 20]
 solution : [7, 8, 28, 9, 17]


Before reduction : 
 pending  : [36, 26, 41, 6, 21, 20]
 solution : [7, 8, 28, 9, 17]

Essensial at level 14 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, 131072), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, 32768), (21, 135168), (22, -1), (23, -1), (24, -1), (25, -1), (26, 524288), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, 32768), (37, 0), (38, -1), (39, -1), (40, -1), (41, 524288), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, 131072), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, 32768), (21, 135168), (22, -1), (23, -1), (24, -1), (25, -1), (26, 524288), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, 32768), (37, -1), (38, -1), (39, -1), (40, -1), (41, 524288), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 14 : set()

After reduction : 
 pending  : [36, 26, 41, 6, 21, 20]
 solution : [7, 8, 28, 9, 17]


Solution : [7, 8, 28, 9, 17] has cost 26.


Before backtrack at level 14
 pending : [36, 26, 41, 6, 21, 20]
 solution : [7, 8, 28, 9, 17]

After backtrack at level 14
 pending : [36, 26, 41, 6, 21, 20, 17, 37]
 solution : [7, 8, 28, 9]


Before backtrack at level 13
 pending : [36, 26, 41, 6, 21, 20, 17, 37]
 solution : [7, 8, 28, 9]

After backtrack at level 13
 pending : [36, 26, 41, 6, 21, 20, 17, 37, 14]
 solution : [7, 8, 28, 9]


Before backtrack at level 12
 pending : [36, 26, 41, 6, 21, 20, 17, 37, 14]
 solution : [7, 8, 28, 9]

After backtrack at level 12
 pending : [36, 26, 41, 6, 21, 20, 17, 37, 14, 19]
 solution : [7, 8, 28, 9]


Before backtrack at level 11
 pending : [36, 26, 41, 6, 21, 20, 17, 37, 14, 19]
 solution : [7, 8, 28, 9]

After backtrack at level 11
 pending : [36, 26, 41, 6, 21, 20, 17, 37, 14, 19, 16]
 solution : [7, 8, 28, 9]


Before backtrack at level 10
 pending : [36, 26, 41, 6, 21, 20, 17, 37, 14, 19, 16]
 solution : [7, 8, 28, 9]

After backtrack at level 10
 pending : [36, 26, 41, 6, 21, 20, 17, 37, 14, 19, 16, 5, 29, 30, 39, 43, 44, 45, 46, 51, 38, 31, 33, 23, 18]
 solution : [7, 8, 28, 9]


Invert decision for 9 at level 9


New level: 10
 pending : [36, 26, 41, 6, 21, 20, 17, 37, 14, 19, 16, 5, 29, 30, 39, 43, 44, 45, 46, 51, 38, 31, 33, 23, 18]
 solution : [7, 8, 28]


Before reduction : 
 pending  : [36, 26, 41, 6, 21, 20, 17, 37, 14, 19, 16, 5, 29, 30, 39, 43, 44, 45, 46, 51, 38, 31, 33, 23, 18]
 solution : [7, 8, 28]

Essensial at level 10 : {23}

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, 131072), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, 32768), (21, 135168), (22, -1), (23, -1), (24, -1), (25, -1), (26, 524288), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, 32768), (37, -1), (38, -1), (39, -1), (40, -1), (41, 524288), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 0), (6, 131072), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 2097152), (15, -1), (16, 4194304), (17, 65536), (18, 8388608), (19, 4194304), (20, 65536), (21, 135168), (22, -1), (23, -1), (24, -1), (25, -1), (26, 524288), (27, -1), (28, -1), (29, 0), (30, 0), (31, 0), (32, -1), (33, 0), (34, -1), (35, -1), (36, 262144), (37, 512), (38, 0), (39, 0), (40, -1), (41, 524288), (42, -1), (43, 0), (44, 0), (45, 0), (46, 0), (47, -1), (48, -1), (49, -1), (50, -1), (51, 0), (52, -1)]

Covered at level 10 : {33, 5, 38, 39, 43, 44, 45, 46, 51, 29, 30, 31}

After reduction : 
 pending  : [36, 26, 41, 6, 21, 20, 17, 37, 14, 19, 16, 18]
 solution : [7, 8, 28, 23]


Before reduction : 
 pending  : [36, 26, 41, 6, 21, 20, 17, 37, 14, 19, 16, 18]
 solution : [7, 8, 28, 23]

Essensial at level 10 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 0), (6, 131072), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 2097152), (15, -1), (16, 4194304), (17, 65536), (18, 8388608), (19, 4194304), (20, 65536), (21, 135168), (22, -1), (23, -1), (24, -1), (25, -1), (26, 524288), (27, -1), (28, -1), (29, 0), (30, 0), (31, 0), (32, -1), (33, 0), (34, -1), (35, -1), (36, 262144), (37, 512), (38, 0), (39, 0), (40, -1), (41, 524288), (42, -1), (43, 0), (44, 0), (45, 0), (46, 0), (47, -1), (48, -1), (49, -1), (50, -1), (51, 0), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, 131072), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 2097152), (15, -1), (16, 4194304), (17, 65536), (18, 8388608), (19, 4194304), (20, 65536), (21, 135168), (22, -1), (23, -1), (24, -1), (25, -1), (26, 524288), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, 262144), (37, 512), (38, -1), (39, -1), (40, -1), (41, 524288), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 10 : set()

After reduction : 
 pending  : [36, 26, 41, 6, 21, 20, 17, 37, 14, 19, 16, 18]
 solution : [7, 8, 28, 23]


Solution : [7, 8, 28, 23] has cost 22.


Decide in level 10 among pending : [36, 26, 41, 6, 21, 20, 17, 37, 14, 19, 16, 18]

Coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, 131072), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 2097152), (15, -1), (16, 4194304), (17, 65536), (18, 8388608), (19, 4194304), (20, 65536), (21, 135168), (22, -1), (23, -1), (24, -1), (25, -1), (26, 524288), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, 262144), (37, 512), (38, -1), (39, -1), (40, -1), (41, 524288), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Decide 18 with phase True at level 10

After decision at level 10
 pending : [36, 26, 41, 6, 21, 20, 17, 37, 14, 19, 16]
 solution : [7, 8, 28, 23, 18]


New level: 11
 pending : [36, 26, 41, 6, 21, 20, 17, 37, 14, 19, 16]
 solution : [7, 8, 28, 23, 18]


Before reduction : 
 pending  : [36, 26, 41, 6, 21, 20, 17, 37, 14, 19, 16]
 solution : [7, 8, 28, 23, 18]

Essensial at level 11 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, 131072), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 2097152), (15, -1), (16, 4194304), (17, 65536), (18, 8388608), (19, 4194304), (20, 65536), (21, 135168), (22, -1), (23, -1), (24, -1), (25, -1), (26, 524288), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, 262144), (37, 512), (38, -1), (39, -1), (40, -1), (41, 524288), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, 0), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 16384), (15, -1), (16, 65536), (17, 16384), (18, -1), (19, 0), (20, 0), (21, 0), (22, -1), (23, -1), (24, -1), (25, -1), (26, 2048), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, 1024), (37, 512), (38, -1), (39, -1), (40, -1), (41, 2048), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 11 : {19, 20, 21, 6}

After reduction : 
 pending  : [36, 26, 41, 17, 37, 14, 16]
 solution : [7, 8, 28, 23, 18]


Before reduction : 
 pending  : [36, 26, 41, 17, 37, 14, 16]
 solution : [7, 8, 28, 23, 18]

Essensial at level 11 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, 0), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 16384), (15, -1), (16, 65536), (17, 16384), (18, -1), (19, 0), (20, 0), (21, 0), (22, -1), (23, -1), (24, -1), (25, -1), (26, 2048), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, 1024), (37, 512), (38, -1), (39, -1), (40, -1), (41, 2048), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 16384), (15, -1), (16, 65536), (17, 16384), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, 2048), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, 1024), (37, 512), (38, -1), (39, -1), (40, -1), (41, 2048), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 11 : set()

After reduction : 
 pending  : [36, 26, 41, 17, 37, 14, 16]
 solution : [7, 8, 28, 23, 18]


Solution : [7, 8, 28, 23, 18] has cost 31.


Before backtrack at level 11
 pending : [36, 26, 41, 17, 37, 14, 16]
 solution : [7, 8, 28, 23, 18]

After backtrack at level 11
 pending : [36, 26, 41, 17, 37, 14, 16, 6, 21, 20, 19]
 solution : [7, 8, 28, 23, 18]


Invert decision for 18 at level 10


New level: 11
 pending : [36, 26, 41, 17, 37, 14, 16, 6, 21, 20, 19]
 solution : [7, 8, 28, 23]


Before reduction : 
 pending  : [36, 26, 41, 17, 37, 14, 16, 6, 21, 20, 19]
 solution : [7, 8, 28, 23]

Essensial at level 11 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 16384), (15, -1), (16, 65536), (17, 16384), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, 2048), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, 1024), (37, 512), (38, -1), (39, -1), (40, -1), (41, 2048), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, 131072), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 2097152), (15, -1), (16, 4194304), (17, 65536), (18, -1), (19, 4194304), (20, 65536), (21, 135168), (22, -1), (23, -1), (24, -1), (25, -1), (26, 524288), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, 262144), (37, 512), (38, -1), (39, -1), (40, -1), (41, 524288), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 11 : set()

After reduction : 
 pending  : [36, 26, 41, 17, 37, 14, 16, 6, 21, 20, 19]
 solution : [7, 8, 28, 23]


Solution : [7, 8, 28, 23] has cost 22.


Decide in level 11 among pending : [36, 26, 41, 17, 37, 14, 16, 6, 21, 20, 19]

Coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, 131072), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 2097152), (15, -1), (16, 4194304), (17, 65536), (18, -1), (19, 4194304), (20, 65536), (21, 135168), (22, -1), (23, -1), (24, -1), (25, -1), (26, 524288), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, 262144), (37, 512), (38, -1), (39, -1), (40, -1), (41, 524288), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Decide 16 with phase True at level 11

After decision at level 11
 pending : [36, 26, 41, 17, 37, 14, 6, 21, 20, 19]
 solution : [7, 8, 28, 23, 16]


New level: 12
 pending : [36, 26, 41, 17, 37, 14, 6, 21, 20, 19]
 solution : [7, 8, 28, 23, 16]


Before reduction : 
 pending  : [36, 26, 41, 17, 37, 14, 6, 21, 20, 19]
 solution : [7, 8, 28, 23, 16]

Essensial at level 12 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, 131072), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 2097152), (15, -1), (16, 4194304), (17, 65536), (18, -1), (19, 4194304), (20, 65536), (21, 135168), (22, -1), (23, -1), (24, -1), (25, -1), (26, 524288), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, 262144), (37, 512), (38, -1), (39, -1), (40, -1), (41, 524288), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, 65536), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 0), (15, -1), (16, -1), (17, 0), (18, -1), (19, 1048576), (20, 0), (21, 66048), (22, -1), (23, -1), (24, -1), (25, -1), (26, 131072), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, 512), (37, 0), (38, -1), (39, -1), (40, -1), (41, 131072), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 12 : {17, 20, 37, 14}

After reduction : 
 pending  : [36, 26, 41, 6, 21, 19]
 solution : [7, 8, 28, 23, 16]


Before reduction : 
 pending  : [36, 26, 41, 6, 21, 19]
 solution : [7, 8, 28, 23, 16]

Essensial at level 12 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, 65536), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 0), (15, -1), (16, -1), (17, 0), (18, -1), (19, 1048576), (20, 0), (21, 66048), (22, -1), (23, -1), (24, -1), (25, -1), (26, 131072), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, 512), (37, 0), (38, -1), (39, -1), (40, -1), (41, 131072), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, 65536), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, 1048576), (20, -1), (21, 66048), (22, -1), (23, -1), (24, -1), (25, -1), (26, 131072), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, 512), (37, -1), (38, -1), (39, -1), (40, -1), (41, 131072), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 12 : set()

After reduction : 
 pending  : [36, 26, 41, 6, 21, 19]
 solution : [7, 8, 28, 23, 16]


Solution : [7, 8, 28, 23, 16] has cost 29.


Before backtrack at level 12
 pending : [36, 26, 41, 6, 21, 19]
 solution : [7, 8, 28, 23, 16]

After backtrack at level 12
 pending : [36, 26, 41, 6, 21, 19, 17, 37, 14, 20]
 solution : [7, 8, 28, 23, 16]


Invert decision for 16 at level 11


New level: 12
 pending : [36, 26, 41, 6, 21, 19, 17, 37, 14, 20]
 solution : [7, 8, 28, 23]


Before reduction : 
 pending  : [36, 26, 41, 6, 21, 19, 17, 37, 14, 20]
 solution : [7, 8, 28, 23]

Essensial at level 12 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, 65536), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, 1048576), (20, -1), (21, 66048), (22, -1), (23, -1), (24, -1), (25, -1), (26, 131072), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, 512), (37, -1), (38, -1), (39, -1), (40, -1), (41, 131072), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, 131072), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 2097152), (15, -1), (16, -1), (17, 65536), (18, -1), (19, 4194304), (20, 65536), (21, 135168), (22, -1), (23, -1), (24, -1), (25, -1), (26, 524288), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, 262144), (37, 512), (38, -1), (39, -1), (40, -1), (41, 524288), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 12 : set()

After reduction : 
 pending  : [36, 26, 41, 6, 21, 19, 17, 37, 14, 20]
 solution : [7, 8, 28, 23]


Solution : [7, 8, 28, 23] has cost 22.


Decide in level 12 among pending : [36, 26, 41, 6, 21, 19, 17, 37, 14, 20]

Coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, 131072), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 2097152), (15, -1), (16, -1), (17, 65536), (18, -1), (19, 4194304), (20, 65536), (21, 135168), (22, -1), (23, -1), (24, -1), (25, -1), (26, 524288), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, 262144), (37, 512), (38, -1), (39, -1), (40, -1), (41, 524288), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Decide 19 with phase True at level 12

After decision at level 12
 pending : [36, 26, 41, 6, 21, 17, 37, 14, 20]
 solution : [7, 8, 28, 23, 19]


New level: 13
 pending : [36, 26, 41, 6, 21, 17, 37, 14, 20]
 solution : [7, 8, 28, 23, 19]


Before reduction : 
 pending  : [36, 26, 41, 6, 21, 17, 37, 14, 20]
 solution : [7, 8, 28, 23, 19]

Essensial at level 13 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, 131072), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 2097152), (15, -1), (16, -1), (17, 65536), (18, -1), (19, 4194304), (20, 65536), (21, 135168), (22, -1), (23, -1), (24, -1), (25, -1), (26, 524288), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, 262144), (37, 512), (38, -1), (39, -1), (40, -1), (41, 524288), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, 0), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 16384), (15, -1), (16, -1), (17, 16384), (18, -1), (19, -1), (20, 0), (21, 0), (22, -1), (23, -1), (24, -1), (25, -1), (26, 2048), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, 1024), (37, 512), (38, -1), (39, -1), (40, -1), (41, 2048), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 13 : {20, 21, 6}

After reduction : 
 pending  : [36, 26, 41, 17, 37, 14]
 solution : [7, 8, 28, 23, 19]


Before reduction : 
 pending  : [36, 26, 41, 17, 37, 14]
 solution : [7, 8, 28, 23, 19]

Essensial at level 13 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, 0), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 16384), (15, -1), (16, -1), (17, 16384), (18, -1), (19, -1), (20, 0), (21, 0), (22, -1), (23, -1), (24, -1), (25, -1), (26, 2048), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, 1024), (37, 512), (38, -1), (39, -1), (40, -1), (41, 2048), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 16384), (15, -1), (16, -1), (17, 16384), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, 2048), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, 1024), (37, 512), (38, -1), (39, -1), (40, -1), (41, 2048), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 13 : set()

After reduction : 
 pending  : [36, 26, 41, 17, 37, 14]
 solution : [7, 8, 28, 23, 19]


Solution : [7, 8, 28, 23, 19] has cost 31.


Before backtrack at level 13
 pending : [36, 26, 41, 17, 37, 14]
 solution : [7, 8, 28, 23, 19]

After backtrack at level 13
 pending : [36, 26, 41, 17, 37, 14, 6, 21, 20]
 solution : [7, 8, 28, 23, 19]


Invert decision for 19 at level 12


New level: 13
 pending : [36, 26, 41, 17, 37, 14, 6, 21, 20]
 solution : [7, 8, 28, 23]


Before reduction : 
 pending  : [36, 26, 41, 17, 37, 14, 6, 21, 20]
 solution : [7, 8, 28, 23]

Essensial at level 13 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 16384), (15, -1), (16, -1), (17, 16384), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, 2048), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, 1024), (37, 512), (38, -1), (39, -1), (40, -1), (41, 2048), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, 131072), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 2097152), (15, -1), (16, -1), (17, 65536), (18, -1), (19, -1), (20, 65536), (21, 135168), (22, -1), (23, -1), (24, -1), (25, -1), (26, 524288), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, 262144), (37, 512), (38, -1), (39, -1), (40, -1), (41, 524288), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 13 : set()

After reduction : 
 pending  : [36, 26, 41, 17, 37, 14, 6, 21, 20]
 solution : [7, 8, 28, 23]


Solution : [7, 8, 28, 23] has cost 22.


Decide in level 13 among pending : [36, 26, 41, 17, 37, 14, 6, 21, 20]

Coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, 131072), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 2097152), (15, -1), (16, -1), (17, 65536), (18, -1), (19, -1), (20, 65536), (21, 135168), (22, -1), (23, -1), (24, -1), (25, -1), (26, 524288), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, 262144), (37, 512), (38, -1), (39, -1), (40, -1), (41, 524288), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Decide 14 with phase True at level 13

After decision at level 13
 pending : [36, 26, 41, 17, 37, 6, 21, 20]
 solution : [7, 8, 28, 23, 14]


New level: 14
 pending : [36, 26, 41, 17, 37, 6, 21, 20]
 solution : [7, 8, 28, 23, 14]


Before reduction : 
 pending  : [36, 26, 41, 17, 37, 6, 21, 20]
 solution : [7, 8, 28, 23, 14]

Essensial at level 14 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, 131072), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 2097152), (15, -1), (16, -1), (17, 65536), (18, -1), (19, -1), (20, 65536), (21, 135168), (22, -1), (23, -1), (24, -1), (25, -1), (26, 524288), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, 262144), (37, 512), (38, -1), (39, -1), (40, -1), (41, 524288), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, 65536), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, 0), (18, -1), (19, -1), (20, 0), (21, 66048), (22, -1), (23, -1), (24, -1), (25, -1), (26, 131072), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, 512), (37, 0), (38, -1), (39, -1), (40, -1), (41, 131072), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 14 : {17, 20, 37}

After reduction : 
 pending  : [36, 26, 41, 6, 21]
 solution : [7, 8, 28, 23, 14]


Before reduction : 
 pending  : [36, 26, 41, 6, 21]
 solution : [7, 8, 28, 23, 14]

Essensial at level 14 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, 65536), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, 0), (18, -1), (19, -1), (20, 0), (21, 66048), (22, -1), (23, -1), (24, -1), (25, -1), (26, 131072), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, 512), (37, 0), (38, -1), (39, -1), (40, -1), (41, 131072), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, 65536), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, 66048), (22, -1), (23, -1), (24, -1), (25, -1), (26, 131072), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, 512), (37, -1), (38, -1), (39, -1), (40, -1), (41, 131072), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 14 : set()

After reduction : 
 pending  : [36, 26, 41, 6, 21]
 solution : [7, 8, 28, 23, 14]


Solution : [7, 8, 28, 23, 14] has cost 29.


Before backtrack at level 14
 pending : [36, 26, 41, 6, 21]
 solution : [7, 8, 28, 23, 14]

After backtrack at level 14
 pending : [36, 26, 41, 6, 21, 17, 37, 20]
 solution : [7, 8, 28, 23, 14]


Invert decision for 14 at level 13


New level: 14
 pending : [36, 26, 41, 6, 21, 17, 37, 20]
 solution : [7, 8, 28, 23]


Before reduction : 
 pending  : [36, 26, 41, 6, 21, 17, 37, 20]
 solution : [7, 8, 28, 23]

Essensial at level 14 : {17}

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, 65536), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, 66048), (22, -1), (23, -1), (24, -1), (25, -1), (26, 131072), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, 512), (37, -1), (38, -1), (39, -1), (40, -1), (41, 131072), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, 131072), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, 32768), (21, 135168), (22, -1), (23, -1), (24, -1), (25, -1), (26, 524288), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, 262144), (37, 0), (38, -1), (39, -1), (40, -1), (41, 524288), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 14 : {37}

After reduction : 
 pending  : [36, 26, 41, 6, 21, 20]
 solution : [7, 8, 28, 23, 17]


Before reduction : 
 pending  : [36, 26, 41, 6, 21, 20]
 solution : [7, 8, 28, 23, 17]

Essensial at level 14 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, 131072), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, 32768), (21, 135168), (22, -1), (23, -1), (24, -1), (25, -1), (26, 524288), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, 262144), (37, 0), (38, -1), (39, -1), (40, -1), (41, 524288), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, 131072), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, 32768), (21, 135168), (22, -1), (23, -1), (24, -1), (25, -1), (26, 524288), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, 262144), (37, -1), (38, -1), (39, -1), (40, -1), (41, 524288), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 14 : set()

After reduction : 
 pending  : [36, 26, 41, 6, 21, 20]
 solution : [7, 8, 28, 23, 17]


Solution : [7, 8, 28, 23, 17] has cost 29.


Before backtrack at level 14
 pending : [36, 26, 41, 6, 21, 20]
 solution : [7, 8, 28, 23, 17]

After backtrack at level 14
 pending : [36, 26, 41, 6, 21, 20, 17, 37]
 solution : [7, 8, 28, 23]


Before backtrack at level 13
 pending : [36, 26, 41, 6, 21, 20, 17, 37]
 solution : [7, 8, 28, 23]

After backtrack at level 13
 pending : [36, 26, 41, 6, 21, 20, 17, 37, 14]
 solution : [7, 8, 28, 23]


Before backtrack at level 12
 pending : [36, 26, 41, 6, 21, 20, 17, 37, 14]
 solution : [7, 8, 28, 23]

After backtrack at level 12
 pending : [36, 26, 41, 6, 21, 20, 17, 37, 14, 19]
 solution : [7, 8, 28, 23]


Before backtrack at level 11
 pending : [36, 26, 41, 6, 21, 20, 17, 37, 14, 19]
 solution : [7, 8, 28, 23]

After backtrack at level 11
 pending : [36, 26, 41, 6, 21, 20, 17, 37, 14, 19, 16]
 solution : [7, 8, 28, 23]


Before backtrack at level 10
 pending : [36, 26, 41, 6, 21, 20, 17, 37, 14, 19, 16]
 solution : [7, 8, 28, 23]

After backtrack at level 10
 pending : [36, 26, 41, 6, 21, 20, 17, 37, 14, 19, 16, 23, 5, 29, 30, 39, 43, 44, 45, 46, 51, 38, 31, 33, 18]
 solution : [7, 8, 28]


Before backtrack at level 9
 pending : [36, 26, 41, 6, 21, 20, 17, 37, 14, 19, 16, 23, 5, 29, 30, 39, 43, 44, 45, 46, 51, 38, 31, 33, 18]
 solution : [7, 8, 28]

After backtrack at level 9
 pending : [36, 26, 41, 6, 21, 20, 17, 37, 14, 19, 16, 23, 5, 29, 30, 39, 43, 44, 45, 46, 51, 38, 31, 33, 18, 9]
 solution : [7, 8, 28]


Before backtrack at level 8
 pending : [36, 26, 41, 6, 21, 20, 17, 37, 14, 19, 16, 23, 5, 29, 30, 39, 43, 44, 45, 46, 51, 38, 31, 33, 18, 9]
 solution : [7, 8, 28]

After backtrack at level 8
 pending : [36, 26, 41, 6, 21, 20, 17, 37, 14, 19, 16, 23, 5, 29, 30, 39, 43, 44, 45, 46, 51, 38, 31, 33, 18, 9, 15]
 solution : [7, 8, 28]


Before backtrack at level 7
 pending : [36, 26, 41, 6, 21, 20, 17, 37, 14, 19, 16, 23, 5, 29, 30, 39, 43, 44, 45, 46, 51, 38, 31, 33, 18, 9, 15]
 solution : [7, 8, 28]

After backtrack at level 7
 pending : [36, 26, 41, 6, 21, 20, 17, 37, 14, 19, 16, 23, 5, 29, 30, 39, 43, 44, 45, 46, 51, 38, 31, 33, 18, 9, 15, 24]
 solution : [7, 8, 28]


Before backtrack at level 6
 pending : [36, 26, 41, 6, 21, 20, 17, 37, 14, 19, 16, 23, 5, 29, 30, 39, 43, 44, 45, 46, 51, 38, 31, 33, 18, 9, 15, 24]
 solution : [7, 8, 28]

After backtrack at level 6
 pending : [36, 26, 41, 6, 21, 20, 17, 37, 14, 19, 16, 23, 5, 29, 30, 39, 43, 44, 45, 46, 51, 38, 31, 33, 18, 9, 15, 24, 13]
 solution : [7, 8, 28]


Before backtrack at level 5
 pending : [36, 26, 41, 6, 21, 20, 17, 37, 14, 19, 16, 23, 5, 29, 30, 39, 43, 44, 45, 46, 51, 38, 31, 33, 18, 9, 15, 24, 13]
 solution : [7, 8, 28]

After backtrack at level 5
 pending : [36, 26, 41, 6, 21, 20, 17, 37, 14, 19, 16, 23, 5, 29, 30, 39, 43, 44, 45, 46, 51, 38, 31, 33, 18, 9, 15, 24, 13, 27]
 solution : [7, 8, 28]


Before backtrack at level 4
 pending : [36, 26, 41, 6, 21, 20, 17, 37, 14, 19, 16, 23, 5, 29, 30, 39, 43, 44, 45, 46, 51, 38, 31, 33, 18, 9, 15, 24, 13, 27]
 solution : [7, 8, 28]

After backtrack at level 4
 pending : [36, 26, 41, 6, 21, 20, 17, 37, 14, 19, 16, 23, 5, 29, 30, 39, 43, 44, 45, 46, 51, 38, 31, 33, 18, 9, 15, 24, 13, 27, 32]
 solution : [7, 8, 28]


Invert decision for 28 at level 3


New level: 4
 pending : [36, 26, 41, 6, 21, 20, 17, 37, 14, 19, 16, 23, 5, 29, 30, 39, 43, 44, 45, 46, 51, 38, 31, 33, 18, 9, 15, 24, 13, 27, 32]
 solution : [7, 8]


Before reduction : 
 pending  : [36, 26, 41, 6, 21, 20, 17, 37, 14, 19, 16, 23, 5, 29, 30, 39, 43, 44, 45, 46, 51, 38, 31, 33, 18, 9, 15, 24, 13, 27, 32]
 solution : [7, 8]

Essensial at level 4 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, 131072), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, 32768), (21, 135168), (22, -1), (23, -1), (24, -1), (25, -1), (26, 524288), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, 262144), (37, -1), (38, -1), (39, -1), (40, -1), (41, 524288), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 1048576), (6, 262144), (7, -1), (8, -1), (9, 134217728), (10, -1), (11, -1), (12, -1), (13, 536870912), (14, 2097152), (15, 268435456), (16, 4194304), (17, 65536), (18, 16777216), (19, 8388608), (20, 131072), (21, 278528), (22, -1), (23, 134217728), (24, 1073741824), (25, -1), (26, 1048576), (27, 1073741824), (28, -1), (29, 1048576), (30, 16384), (31, 32768), (32, 2147483648), (33, 4194304), (34, -1), (35, -1), (36, 67108864), (37, 268435456), (38, 134217728), (39, 16384), (40, -1), (41, 1048576), (42, -1), (43, 524288), (44, 524288), (45, 67108864), (46, 16777216), (47, -1), (48, -1), (49, -1), (50, -1), (51, 67108864), (52, -1)]

Covered at level 4 : set()

After reduction : 
 pending  : [36, 26, 41, 6, 21, 20, 17, 37, 14, 19, 16, 23, 5, 29, 30, 39, 43, 44, 45, 46, 51, 38, 31, 33, 18, 9, 15, 24, 13, 27, 32]
 solution : [7, 8]


Solution : [7, 8] has cost 11.


Decide in level 4 among pending : [36, 26, 41, 6, 21, 20, 17, 37, 14, 19, 16, 23, 5, 29, 30, 39, 43, 44, 45, 46, 51, 38, 31, 33, 18, 9, 15, 24, 13, 27, 32]

Coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 1048576), (6, 262144), (7, -1), (8, -1), (9, 134217728), (10, -1), (11, -1), (12, -1), (13, 536870912), (14, 2097152), (15, 268435456), (16, 4194304), (17, 65536), (18, 16777216), (19, 8388608), (20, 131072), (21, 278528), (22, -1), (23, 134217728), (24, 1073741824), (25, -1), (26, 1048576), (27, 1073741824), (28, -1), (29, 1048576), (30, 16384), (31, 32768), (32, 2147483648), (33, 4194304), (34, -1), (35, -1), (36, 67108864), (37, 268435456), (38, 134217728), (39, 16384), (40, -1), (41, 1048576), (42, -1), (43, 524288), (44, 524288), (45, 67108864), (46, 16777216), (47, -1), (48, -1), (49, -1), (50, -1), (51, 67108864), (52, -1)]

Decide 32 with phase True at level 4

After decision at level 4
 pending : [36, 26, 41, 6, 21, 20, 17, 37, 14, 19, 16, 23, 5, 29, 30, 39, 43, 44, 45, 46, 51, 38, 31, 33, 18, 9, 15, 24, 13, 27]
 solution : [7, 8, 32]


New level: 5
 pending : [36, 26, 41, 6, 21, 20, 17, 37, 14, 19, 16, 23, 5, 29, 30, 39, 43, 44, 45, 46, 51, 38, 31, 33, 18, 9, 15, 24, 13, 27]
 solution : [7, 8, 32]


Before reduction : 
 pending  : [36, 26, 41, 6, 21, 20, 17, 37, 14, 19, 16, 23, 5, 29, 30, 39, 43, 44, 45, 46, 51, 38, 31, 33, 18, 9, 15, 24, 13, 27]
 solution : [7, 8, 32]

Essensial at level 5 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 1048576), (6, 262144), (7, -1), (8, -1), (9, 134217728), (10, -1), (11, -1), (12, -1), (13, 536870912), (14, 2097152), (15, 268435456), (16, 4194304), (17, 65536), (18, 16777216), (19, 8388608), (20, 131072), (21, 278528), (22, -1), (23, 134217728), (24, 1073741824), (25, -1), (26, 1048576), (27, 1073741824), (28, -1), (29, 1048576), (30, 16384), (31, 32768), (32, 2147483648), (33, 4194304), (34, -1), (35, -1), (36, 67108864), (37, 268435456), (38, 134217728), (39, 16384), (40, -1), (41, 1048576), (42, -1), (43, 524288), (44, 524288), (45, 67108864), (46, 16777216), (47, -1), (48, -1), (49, -1), (50, -1), (51, 67108864), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 262144), (6, 262144), (7, -1), (8, -1), (9, 134217728), (10, -1), (11, -1), (12, -1), (13, 536870912), (14, 2097152), (15, 268435456), (16, 4194304), (17, 65536), (18, 16777216), (19, 8388608), (20, 131072), (21, 278528), (22, -1), (23, 134217728), (24, 32768), (25, -1), (26, 1048576), (27, 1073741824), (28, -1), (29, 262144), (30, 4096), (31, 0), (32, -1), (33, 0), (34, -1), (35, -1), (36, 67108864), (37, 8192), (38, 33554432), (39, 4096), (40, -1), (41, 1048576), (42, -1), (43, 131072), (44, 131072), (45, 16777216), (46, 4194304), (47, -1), (48, -1), (49, -1), (50, -1), (51, 16777216), (52, -1)]

Covered at level 5 : {33, 31}

After reduction : 
 pending  : [36, 26, 41, 6, 21, 20, 17, 37, 14, 19, 16, 23, 5, 29, 30, 39, 43, 44, 45, 46, 51, 38, 18, 9, 15, 24, 13, 27]
 solution : [7, 8, 32]


Before reduction : 
 pending  : [36, 26, 41, 6, 21, 20, 17, 37, 14, 19, 16, 23, 5, 29, 30, 39, 43, 44, 45, 46, 51, 38, 18, 9, 15, 24, 13, 27]
 solution : [7, 8, 32]

Essensial at level 5 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 262144), (6, 262144), (7, -1), (8, -1), (9, 134217728), (10, -1), (11, -1), (12, -1), (13, 536870912), (14, 2097152), (15, 268435456), (16, 4194304), (17, 65536), (18, 16777216), (19, 8388608), (20, 131072), (21, 278528), (22, -1), (23, 134217728), (24, 32768), (25, -1), (26, 1048576), (27, 1073741824), (28, -1), (29, 262144), (30, 4096), (31, 0), (32, -1), (33, 0), (34, -1), (35, -1), (36, 67108864), (37, 8192), (38, 33554432), (39, 4096), (40, -1), (41, 1048576), (42, -1), (43, 131072), (44, 131072), (45, 16777216), (46, 4194304), (47, -1), (48, -1), (49, -1), (50, -1), (51, 16777216), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 262144), (6, 262144), (7, -1), (8, -1), (9, 134217728), (10, -1), (11, -1), (12, -1), (13, 536870912), (14, 2097152), (15, 268435456), (16, 4194304), (17, 65536), (18, 16777216), (19, 8388608), (20, 131072), (21, 278528), (22, -1), (23, 134217728), (24, 32768), (25, -1), (26, 1048576), (27, 1073741824), (28, -1), (29, 262144), (30, 4096), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, 67108864), (37, 8192), (38, 33554432), (39, 4096), (40, -1), (41, 1048576), (42, -1), (43, 131072), (44, 131072), (45, 16777216), (46, 4194304), (47, -1), (48, -1), (49, -1), (50, -1), (51, 16777216), (52, -1)]

Covered at level 5 : set()

After reduction : 
 pending  : [36, 26, 41, 6, 21, 20, 17, 37, 14, 19, 16, 23, 5, 29, 30, 39, 43, 44, 45, 46, 51, 38, 18, 9, 15, 24, 13, 27]
 solution : [7, 8, 32]


Solution : [7, 8, 32] has cost 24.


Before backtrack at level 5
 pending : [36, 26, 41, 6, 21, 20, 17, 37, 14, 19, 16, 23, 5, 29, 30, 39, 43, 44, 45, 46, 51, 38, 18, 9, 15, 24, 13, 27]
 solution : [7, 8, 32]

After backtrack at level 5
 pending : [36, 26, 41, 6, 21, 20, 17, 37, 14, 19, 16, 23, 5, 29, 30, 39, 43, 44, 45, 46, 51, 38, 18, 9, 15, 24, 13, 27, 31, 33]
 solution : [7, 8, 32]


Invert decision for 32 at level 4


New level: 5
 pending : [36, 26, 41, 6, 21, 20, 17, 37, 14, 19, 16, 23, 5, 29, 30, 39, 43, 44, 45, 46, 51, 38, 18, 9, 15, 24, 13, 27, 31, 33]
 solution : [7, 8]


Before reduction : 
 pending  : [36, 26, 41, 6, 21, 20, 17, 37, 14, 19, 16, 23, 5, 29, 30, 39, 43, 44, 45, 46, 51, 38, 18, 9, 15, 24, 13, 27, 31, 33]
 solution : [7, 8]

Essensial at level 5 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 262144), (6, 262144), (7, -1), (8, -1), (9, 134217728), (10, -1), (11, -1), (12, -1), (13, 536870912), (14, 2097152), (15, 268435456), (16, 4194304), (17, 65536), (18, 16777216), (19, 8388608), (20, 131072), (21, 278528), (22, -1), (23, 134217728), (24, 32768), (25, -1), (26, 1048576), (27, 1073741824), (28, -1), (29, 262144), (30, 4096), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, 67108864), (37, 8192), (38, 33554432), (39, 4096), (40, -1), (41, 1048576), (42, -1), (43, 131072), (44, 131072), (45, 16777216), (46, 4194304), (47, -1), (48, -1), (49, -1), (50, -1), (51, 16777216), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 1048576), (6, 262144), (7, -1), (8, -1), (9, 134217728), (10, -1), (11, -1), (12, -1), (13, 536870912), (14, 2097152), (15, 268435456), (16, 4194304), (17, 65536), (18, 16777216), (19, 8388608), (20, 131072), (21, 278528), (22, -1), (23, 134217728), (24, 1073741824), (25, -1), (26, 1048576), (27, 1073741824), (28, -1), (29, 1048576), (30, 16384), (31, 32768), (32, -1), (33, 4194304), (34, -1), (35, -1), (36, 67108864), (37, 268435456), (38, 134217728), (39, 16384), (40, -1), (41, 1048576), (42, -1), (43, 524288), (44, 524288), (45, 67108864), (46, 16777216), (47, -1), (48, -1), (49, -1), (50, -1), (51, 67108864), (52, -1)]

Covered at level 5 : set()

After reduction : 
 pending  : [36, 26, 41, 6, 21, 20, 17, 37, 14, 19, 16, 23, 5, 29, 30, 39, 43, 44, 45, 46, 51, 38, 18, 9, 15, 24, 13, 27, 31, 33]
 solution : [7, 8]


Solution : [7, 8] has cost 11.


Decide in level 5 among pending : [36, 26, 41, 6, 21, 20, 17, 37, 14, 19, 16, 23, 5, 29, 30, 39, 43, 44, 45, 46, 51, 38, 18, 9, 15, 24, 13, 27, 31, 33]

Coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 1048576), (6, 262144), (7, -1), (8, -1), (9, 134217728), (10, -1), (11, -1), (12, -1), (13, 536870912), (14, 2097152), (15, 268435456), (16, 4194304), (17, 65536), (18, 16777216), (19, 8388608), (20, 131072), (21, 278528), (22, -1), (23, 134217728), (24, 1073741824), (25, -1), (26, 1048576), (27, 1073741824), (28, -1), (29, 1048576), (30, 16384), (31, 32768), (32, -1), (33, 4194304), (34, -1), (35, -1), (36, 67108864), (37, 268435456), (38, 134217728), (39, 16384), (40, -1), (41, 1048576), (42, -1), (43, 524288), (44, 524288), (45, 67108864), (46, 16777216), (47, -1), (48, -1), (49, -1), (50, -1), (51, 67108864), (52, -1)]

Decide 24 with phase True at level 5

After decision at level 5
 pending : [36, 26, 41, 6, 21, 20, 17, 37, 14, 19, 16, 23, 5, 29, 30, 39, 43, 44, 45, 46, 51, 38, 18, 9, 15, 13, 27, 31, 33]
 solution : [7, 8, 24]


New level: 6
 pending : [36, 26, 41, 6, 21, 20, 17, 37, 14, 19, 16, 23, 5, 29, 30, 39, 43, 44, 45, 46, 51, 38, 18, 9, 15, 13, 27, 31, 33]
 solution : [7, 8, 24]


Before reduction : 
 pending  : [36, 26, 41, 6, 21, 20, 17, 37, 14, 19, 16, 23, 5, 29, 30, 39, 43, 44, 45, 46, 51, 38, 18, 9, 15, 13, 27, 31, 33]
 solution : [7, 8, 24]

Essensial at level 6 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 1048576), (6, 262144), (7, -1), (8, -1), (9, 134217728), (10, -1), (11, -1), (12, -1), (13, 536870912), (14, 2097152), (15, 268435456), (16, 4194304), (17, 65536), (18, 16777216), (19, 8388608), (20, 131072), (21, 278528), (22, -1), (23, 134217728), (24, 1073741824), (25, -1), (26, 1048576), (27, 1073741824), (28, -1), (29, 1048576), (30, 16384), (31, 32768), (32, -1), (33, 4194304), (34, -1), (35, -1), (36, 67108864), (37, 268435456), (38, 134217728), (39, 16384), (40, -1), (41, 1048576), (42, -1), (43, 524288), (44, 524288), (45, 67108864), (46, 16777216), (47, -1), (48, -1), (49, -1), (50, -1), (51, 67108864), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 262144), (6, 262144), (7, -1), (8, -1), (9, 33554432), (10, -1), (11, -1), (12, -1), (13, 536870912), (14, 2097152), (15, 268435456), (16, 4194304), (17, 65536), (18, 16777216), (19, 8388608), (20, 131072), (21, 278528), (22, -1), (23, 33554432), (24, -1), (25, -1), (26, 1048576), (27, 1073741824), (28, -1), (29, 262144), (30, 4096), (31, 0), (32, -1), (33, 0), (34, -1), (35, -1), (36, 33554432), (37, 512), (38, 67108864), (39, 4096), (40, -1), (41, 1048576), (42, -1), (43, 131072), (44, 131072), (45, 33554432), (46, 4194304), (47, -1), (48, -1), (49, -1), (50, -1), (51, 33554432), (52, -1)]

Covered at level 6 : {33, 31}

After reduction : 
 pending  : [36, 26, 41, 6, 21, 20, 17, 37, 14, 19, 16, 23, 5, 29, 30, 39, 43, 44, 45, 46, 51, 38, 18, 9, 15, 13, 27]
 solution : [7, 8, 24]


Before reduction : 
 pending  : [36, 26, 41, 6, 21, 20, 17, 37, 14, 19, 16, 23, 5, 29, 30, 39, 43, 44, 45, 46, 51, 38, 18, 9, 15, 13, 27]
 solution : [7, 8, 24]

Essensial at level 6 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 262144), (6, 262144), (7, -1), (8, -1), (9, 33554432), (10, -1), (11, -1), (12, -1), (13, 536870912), (14, 2097152), (15, 268435456), (16, 4194304), (17, 65536), (18, 16777216), (19, 8388608), (20, 131072), (21, 278528), (22, -1), (23, 33554432), (24, -1), (25, -1), (26, 1048576), (27, 1073741824), (28, -1), (29, 262144), (30, 4096), (31, 0), (32, -1), (33, 0), (34, -1), (35, -1), (36, 33554432), (37, 512), (38, 67108864), (39, 4096), (40, -1), (41, 1048576), (42, -1), (43, 131072), (44, 131072), (45, 33554432), (46, 4194304), (47, -1), (48, -1), (49, -1), (50, -1), (51, 33554432), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 262144), (6, 262144), (7, -1), (8, -1), (9, 33554432), (10, -1), (11, -1), (12, -1), (13, 536870912), (14, 2097152), (15, 268435456), (16, 4194304), (17, 65536), (18, 16777216), (19, 8388608), (20, 131072), (21, 278528), (22, -1), (23, 33554432), (24, -1), (25, -1), (26, 1048576), (27, 1073741824), (28, -1), (29, 262144), (30, 4096), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, 33554432), (37, 512), (38, 67108864), (39, 4096), (40, -1), (41, 1048576), (42, -1), (43, 131072), (44, 131072), (45, 33554432), (46, 4194304), (47, -1), (48, -1), (49, -1), (50, -1), (51, 33554432), (52, -1)]

Covered at level 6 : set()

After reduction : 
 pending  : [36, 26, 41, 6, 21, 20, 17, 37, 14, 19, 16, 23, 5, 29, 30, 39, 43, 44, 45, 46, 51, 38, 18, 9, 15, 13, 27]
 solution : [7, 8, 24]


Solution : [7, 8, 24] has cost 18.


Decide in level 6 among pending : [36, 26, 41, 6, 21, 20, 17, 37, 14, 19, 16, 23, 5, 29, 30, 39, 43, 44, 45, 46, 51, 38, 18, 9, 15, 13, 27]

Coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 262144), (6, 262144), (7, -1), (8, -1), (9, 33554432), (10, -1), (11, -1), (12, -1), (13, 536870912), (14, 2097152), (15, 268435456), (16, 4194304), (17, 65536), (18, 16777216), (19, 8388608), (20, 131072), (21, 278528), (22, -1), (23, 33554432), (24, -1), (25, -1), (26, 1048576), (27, 1073741824), (28, -1), (29, 262144), (30, 4096), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, 33554432), (37, 512), (38, 67108864), (39, 4096), (40, -1), (41, 1048576), (42, -1), (43, 131072), (44, 131072), (45, 33554432), (46, 4194304), (47, -1), (48, -1), (49, -1), (50, -1), (51, 33554432), (52, -1)]

Decide 27 with phase True at level 6

After decision at level 6
 pending : [36, 26, 41, 6, 21, 20, 17, 37, 14, 19, 16, 23, 5, 29, 30, 39, 43, 44, 45, 46, 51, 38, 18, 9, 15, 13]
 solution : [7, 8, 24, 27]


New level: 7
 pending : [36, 26, 41, 6, 21, 20, 17, 37, 14, 19, 16, 23, 5, 29, 30, 39, 43, 44, 45, 46, 51, 38, 18, 9, 15, 13]
 solution : [7, 8, 24, 27]


Before reduction : 
 pending  : [36, 26, 41, 6, 21, 20, 17, 37, 14, 19, 16, 23, 5, 29, 30, 39, 43, 44, 45, 46, 51, 38, 18, 9, 15, 13]
 solution : [7, 8, 24, 27]

Essensial at level 7 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 262144), (6, 262144), (7, -1), (8, -1), (9, 33554432), (10, -1), (11, -1), (12, -1), (13, 536870912), (14, 2097152), (15, 268435456), (16, 4194304), (17, 65536), (18, 16777216), (19, 8388608), (20, 131072), (21, 278528), (22, -1), (23, 33554432), (24, -1), (25, -1), (26, 1048576), (27, 1073741824), (28, -1), (29, 262144), (30, 4096), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, 33554432), (37, 512), (38, 67108864), (39, 4096), (40, -1), (41, 1048576), (42, -1), (43, 131072), (44, 131072), (45, 33554432), (46, 4194304), (47, -1), (48, -1), (49, -1), (50, -1), (51, 33554432), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 65536), (6, 0), (7, -1), (8, -1), (9, 33554432), (10, -1), (11, -1), (12, -1), (13, 0), (14, 0), (15, 0), (16, 0), (17, 0), (18, 0), (19, 0), (20, 0), (21, 0), (22, -1), (23, 33554432), (24, -1), (25, -1), (26, 0), (27, -1), (28, -1), (29, 131072), (30, 1024), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, 512), (37, 0), (38, 33554432), (39, 512), (40, -1), (41, 0), (42, -1), (43, 32768), (44, 32768), (45, 16777216), (46, 1048576), (47, -1), (48, -1), (49, -1), (50, -1), (51, 8388608), (52, -1)]

Covered at level 7 : {37, 6, 41, 13, 14, 15, 16, 17, 18, 19, 20, 21, 26}

After reduction : 
 pending  : [36, 23, 5, 29, 30, 39, 43, 44, 45, 46, 51, 38, 9]
 solution : [7, 8, 24, 27]


Before reduction : 
 pending  : [36, 23, 5, 29, 30, 39, 43, 44, 45, 46, 51, 38, 9]
 solution : [7, 8, 24, 27]

Essensial at level 7 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 65536), (6, 0), (7, -1), (8, -1), (9, 33554432), (10, -1), (11, -1), (12, -1), (13, 0), (14, 0), (15, 0), (16, 0), (17, 0), (18, 0), (19, 0), (20, 0), (21, 0), (22, -1), (23, 33554432), (24, -1), (25, -1), (26, 0), (27, -1), (28, -1), (29, 131072), (30, 1024), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, 512), (37, 0), (38, 33554432), (39, 512), (40, -1), (41, 0), (42, -1), (43, 32768), (44, 32768), (45, 16777216), (46, 1048576), (47, -1), (48, -1), (49, -1), (50, -1), (51, 8388608), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 65536), (6, -1), (7, -1), (8, -1), (9, 33554432), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, 33554432), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, 131072), (30, 1024), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, 512), (37, -1), (38, 33554432), (39, 512), (40, -1), (41, -1), (42, -1), (43, 32768), (44, 32768), (45, 16777216), (46, 1048576), (47, -1), (48, -1), (49, -1), (50, -1), (51, 8388608), (52, -1)]

Covered at level 7 : set()

After reduction : 
 pending  : [36, 23, 5, 29, 30, 39, 43, 44, 45, 46, 51, 38, 9]
 solution : [7, 8, 24, 27]


Solution : [7, 8, 24, 27] has cost 22.


Decide in level 7 among pending : [36, 23, 5, 29, 30, 39, 43, 44, 45, 46, 51, 38, 9]

Coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 65536), (6, -1), (7, -1), (8, -1), (9, 33554432), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, 33554432), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, 131072), (30, 1024), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, 512), (37, -1), (38, 33554432), (39, 512), (40, -1), (41, -1), (42, -1), (43, 32768), (44, 32768), (45, 16777216), (46, 1048576), (47, -1), (48, -1), (49, -1), (50, -1), (51, 8388608), (52, -1)]

Decide 23 with phase True at level 7

After decision at level 7
 pending : [36, 5, 29, 30, 39, 43, 44, 45, 46, 51, 38, 9]
 solution : [7, 8, 24, 27, 23]


New level: 8
 pending : [36, 5, 29, 30, 39, 43, 44, 45, 46, 51, 38, 9]
 solution : [7, 8, 24, 27, 23]


Before reduction : 
 pending  : [36, 5, 29, 30, 39, 43, 44, 45, 46, 51, 38, 9]
 solution : [7, 8, 24, 27, 23]

Essensial at level 8 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 65536), (6, -1), (7, -1), (8, -1), (9, 33554432), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, 33554432), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, 131072), (30, 1024), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, 512), (37, -1), (38, 33554432), (39, 512), (40, -1), (41, -1), (42, -1), (43, 32768), (44, 32768), (45, 16777216), (46, 1048576), (47, -1), (48, -1), (49, -1), (50, -1), (51, 8388608), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 0), (6, -1), (7, -1), (8, -1), (9, 0), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, 0), (30, 0), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, 0), (37, -1), (38, 0), (39, 0), (40, -1), (41, -1), (42, -1), (43, 0), (44, 0), (45, 0), (46, 0), (47, -1), (48, -1), (49, -1), (50, -1), (51, 0), (52, -1)]

Covered at level 8 : {36, 5, 38, 39, 9, 43, 44, 45, 46, 51, 29, 30}

After reduction : 
 pending  : []
 solution : [7, 8, 24, 27, 23]


Before reduction : 
 pending  : []
 solution : [7, 8, 24, 27, 23]

Essensial at level 8 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 0), (6, -1), (7, -1), (8, -1), (9, 0), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, 0), (30, 0), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, 0), (37, -1), (38, 0), (39, 0), (40, -1), (41, -1), (42, -1), (43, 0), (44, 0), (45, 0), (46, 0), (47, -1), (48, -1), (49, -1), (50, -1), (51, 0), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 8 : set()

After reduction : 
 pending  : []
 solution : [7, 8, 24, 27, 23]


Solution : [7, 8, 24, 27, 23] has cost 29.


Before backtrack at level 8
 pending : []
 solution : [7, 8, 24, 27, 23]

After backtrack at level 8
 pending : [36, 5, 29, 30, 39, 43, 44, 45, 46, 51, 38, 9]
 solution : [7, 8, 24, 27, 23]


Invert decision for 23 at level 7


New level: 8
 pending : [36, 5, 29, 30, 39, 43, 44, 45, 46, 51, 38, 9]
 solution : [7, 8, 24, 27]


Before reduction : 
 pending  : [36, 5, 29, 30, 39, 43, 44, 45, 46, 51, 38, 9]
 solution : [7, 8, 24, 27]

Essensial at level 8 : {9}

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 0), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, 0), (30, 0), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, 0), (37, -1), (38, 0), (39, 0), (40, -1), (41, -1), (42, -1), (43, 0), (44, 0), (45, 0), (46, 0), (47, -1), (48, -1), (49, -1), (50, -1), (51, 0), (52, -1)]

Covered at level 8 : {36, 5, 38, 39, 43, 44, 45, 46, 51, 29, 30}

After reduction : 
 pending  : []
 solution : [7, 8, 24, 27, 9]


Before reduction : 
 pending  : []
 solution : [7, 8, 24, 27, 9]

Essensial at level 8 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 0), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, 0), (30, 0), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, 0), (37, -1), (38, 0), (39, 0), (40, -1), (41, -1), (42, -1), (43, 0), (44, 0), (45, 0), (46, 0), (47, -1), (48, -1), (49, -1), (50, -1), (51, 0), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 8 : set()

After reduction : 
 pending  : []
 solution : [7, 8, 24, 27, 9]


Solution : [7, 8, 24, 27, 9] has cost 26.


Before backtrack at level 8
 pending : []
 solution : [7, 8, 24, 27, 9]

After backtrack at level 8
 pending : [9, 36, 5, 29, 30, 39, 43, 44, 45, 46, 51, 38]
 solution : [7, 8, 24, 27]


Before backtrack at level 7
 pending : [9, 36, 5, 29, 30, 39, 43, 44, 45, 46, 51, 38]
 solution : [7, 8, 24, 27]

After backtrack at level 7
 pending : [9, 36, 5, 29, 30, 39, 43, 44, 45, 46, 51, 38, 26, 41, 6, 21, 20, 17, 37, 14, 19, 16, 18, 15, 13, 23]
 solution : [7, 8, 24, 27]


Invert decision for 27 at level 6


New level: 7
 pending : [9, 36, 5, 29, 30, 39, 43, 44, 45, 46, 51, 38, 26, 41, 6, 21, 20, 17, 37, 14, 19, 16, 18, 15, 13, 23]
 solution : [7, 8, 24]


Before reduction : 
 pending  : [9, 36, 5, 29, 30, 39, 43, 44, 45, 46, 51, 38, 26, 41, 6, 21, 20, 17, 37, 14, 19, 16, 18, 15, 13, 23]
 solution : [7, 8, 24]

Essensial at level 7 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 262144), (6, 262144), (7, -1), (8, -1), (9, 33554432), (10, -1), (11, -1), (12, -1), (13, 536870912), (14, 2097152), (15, 268435456), (16, 4194304), (17, 65536), (18, 16777216), (19, 8388608), (20, 131072), (21, 278528), (22, -1), (23, 33554432), (24, -1), (25, -1), (26, 1048576), (27, -1), (28, -1), (29, 262144), (30, 4096), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, 33554432), (37, 512), (38, 67108864), (39, 4096), (40, -1), (41, 1048576), (42, -1), (43, 131072), (44, 131072), (45, 33554432), (46, 4194304), (47, -1), (48, -1), (49, -1), (50, -1), (51, 33554432), (52, -1)]

Covered at level 7 : set()

After reduction : 
 pending  : [9, 36, 5, 29, 30, 39, 43, 44, 45, 46, 51, 38, 26, 41, 6, 21, 20, 17, 37, 14, 19, 16, 18, 15, 13, 23]
 solution : [7, 8, 24]


Solution : [7, 8, 24] has cost 18.


Decide in level 7 among pending : [9, 36, 5, 29, 30, 39, 43, 44, 45, 46, 51, 38, 26, 41, 6, 21, 20, 17, 37, 14, 19, 16, 18, 15, 13, 23]

Coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 262144), (6, 262144), (7, -1), (8, -1), (9, 33554432), (10, -1), (11, -1), (12, -1), (13, 536870912), (14, 2097152), (15, 268435456), (16, 4194304), (17, 65536), (18, 16777216), (19, 8388608), (20, 131072), (21, 278528), (22, -1), (23, 33554432), (24, -1), (25, -1), (26, 1048576), (27, -1), (28, -1), (29, 262144), (30, 4096), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, 33554432), (37, 512), (38, 67108864), (39, 4096), (40, -1), (41, 1048576), (42, -1), (43, 131072), (44, 131072), (45, 33554432), (46, 4194304), (47, -1), (48, -1), (49, -1), (50, -1), (51, 33554432), (52, -1)]

Decide 13 with phase True at level 7

After decision at level 7
 pending : [9, 36, 5, 29, 30, 39, 43, 44, 45, 46, 51, 38, 26, 41, 6, 21, 20, 17, 37, 14, 19, 16, 18, 15, 23]
 solution : [7, 8, 24, 13]


New level: 8
 pending : [9, 36, 5, 29, 30, 39, 43, 44, 45, 46, 51, 38, 26, 41, 6, 21, 20, 17, 37, 14, 19, 16, 18, 15, 23]
 solution : [7, 8, 24, 13]


Before reduction : 
 pending  : [9, 36, 5, 29, 30, 39, 43, 44, 45, 46, 51, 38, 26, 41, 6, 21, 20, 17, 37, 14, 19, 16, 18, 15, 23]
 solution : [7, 8, 24, 13]

Essensial at level 8 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 262144), (6, 262144), (7, -1), (8, -1), (9, 33554432), (10, -1), (11, -1), (12, -1), (13, 536870912), (14, 2097152), (15, 268435456), (16, 4194304), (17, 65536), (18, 16777216), (19, 8388608), (20, 131072), (21, 278528), (22, -1), (23, 33554432), (24, -1), (25, -1), (26, 1048576), (27, -1), (28, -1), (29, 262144), (30, 4096), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, 33554432), (37, 512), (38, 67108864), (39, 4096), (40, -1), (41, 1048576), (42, -1), (43, 131072), (44, 131072), (45, 33554432), (46, 4194304), (47, -1), (48, -1), (49, -1), (50, -1), (51, 33554432), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 65536), (6, 0), (7, -1), (8, -1), (9, 33554432), (10, -1), (11, -1), (12, -1), (13, -1), (14, 0), (15, 0), (16, 0), (17, 0), (18, 0), (19, 0), (20, 0), (21, 0), (22, -1), (23, 33554432), (24, -1), (25, -1), (26, 0), (27, -1), (28, -1), (29, 131072), (30, 1024), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, 512), (37, 0), (38, 33554432), (39, 512), (40, -1), (41, 0), (42, -1), (43, 32768), (44, 32768), (45, 16777216), (46, 1048576), (47, -1), (48, -1), (49, -1), (50, -1), (51, 33554432), (52, -1)]

Covered at level 8 : {37, 6, 41, 14, 15, 16, 17, 18, 19, 20, 21, 26}

After reduction : 
 pending  : [9, 36, 5, 29, 30, 39, 43, 44, 45, 46, 51, 38, 23]
 solution : [7, 8, 24, 13]


Before reduction : 
 pending  : [9, 36, 5, 29, 30, 39, 43, 44, 45, 46, 51, 38, 23]
 solution : [7, 8, 24, 13]

Essensial at level 8 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 65536), (6, 0), (7, -1), (8, -1), (9, 33554432), (10, -1), (11, -1), (12, -1), (13, -1), (14, 0), (15, 0), (16, 0), (17, 0), (18, 0), (19, 0), (20, 0), (21, 0), (22, -1), (23, 33554432), (24, -1), (25, -1), (26, 0), (27, -1), (28, -1), (29, 131072), (30, 1024), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, 512), (37, 0), (38, 33554432), (39, 512), (40, -1), (41, 0), (42, -1), (43, 32768), (44, 32768), (45, 16777216), (46, 1048576), (47, -1), (48, -1), (49, -1), (50, -1), (51, 33554432), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 65536), (6, -1), (7, -1), (8, -1), (9, 33554432), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, 33554432), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, 131072), (30, 1024), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, 512), (37, -1), (38, 33554432), (39, 512), (40, -1), (41, -1), (42, -1), (43, 32768), (44, 32768), (45, 16777216), (46, 1048576), (47, -1), (48, -1), (49, -1), (50, -1), (51, 33554432), (52, -1)]

Covered at level 8 : set()

After reduction : 
 pending  : [9, 36, 5, 29, 30, 39, 43, 44, 45, 46, 51, 38, 23]
 solution : [7, 8, 24, 13]


Solution : [7, 8, 24, 13] has cost 25.


Before backtrack at level 8
 pending : [9, 36, 5, 29, 30, 39, 43, 44, 45, 46, 51, 38, 23]
 solution : [7, 8, 24, 13]

After backtrack at level 8
 pending : [9, 36, 5, 29, 30, 39, 43, 44, 45, 46, 51, 38, 23, 26, 41, 6, 21, 20, 17, 37, 14, 19, 16, 18, 15]
 solution : [7, 8, 24, 13]


Invert decision for 13 at level 7


New level: 8
 pending : [9, 36, 5, 29, 30, 39, 43, 44, 45, 46, 51, 38, 23, 26, 41, 6, 21, 20, 17, 37, 14, 19, 16, 18, 15]
 solution : [7, 8, 24]


Before reduction : 
 pending  : [9, 36, 5, 29, 30, 39, 43, 44, 45, 46, 51, 38, 23, 26, 41, 6, 21, 20, 17, 37, 14, 19, 16, 18, 15]
 solution : [7, 8, 24]

Essensial at level 8 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 65536), (6, -1), (7, -1), (8, -1), (9, 33554432), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, 33554432), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, 131072), (30, 1024), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, 512), (37, -1), (38, 33554432), (39, 512), (40, -1), (41, -1), (42, -1), (43, 32768), (44, 32768), (45, 16777216), (46, 1048576), (47, -1), (48, -1), (49, -1), (50, -1), (51, 33554432), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 262144), (6, 262144), (7, -1), (8, -1), (9, 33554432), (10, -1), (11, -1), (12, -1), (13, -1), (14, 2097152), (15, 268435456), (16, 4194304), (17, 65536), (18, 16777216), (19, 8388608), (20, 131072), (21, 278528), (22, -1), (23, 33554432), (24, -1), (25, -1), (26, 1048576), (27, -1), (28, -1), (29, 262144), (30, 4096), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, 33554432), (37, 512), (38, 67108864), (39, 4096), (40, -1), (41, 1048576), (42, -1), (43, 131072), (44, 131072), (45, 33554432), (46, 4194304), (47, -1), (48, -1), (49, -1), (50, -1), (51, 33554432), (52, -1)]

Covered at level 8 : set()

After reduction : 
 pending  : [9, 36, 5, 29, 30, 39, 43, 44, 45, 46, 51, 38, 23, 26, 41, 6, 21, 20, 17, 37, 14, 19, 16, 18, 15]
 solution : [7, 8, 24]


Solution : [7, 8, 24] has cost 18.


Decide in level 8 among pending : [9, 36, 5, 29, 30, 39, 43, 44, 45, 46, 51, 38, 23, 26, 41, 6, 21, 20, 17, 37, 14, 19, 16, 18, 15]

Coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 262144), (6, 262144), (7, -1), (8, -1), (9, 33554432), (10, -1), (11, -1), (12, -1), (13, -1), (14, 2097152), (15, 268435456), (16, 4194304), (17, 65536), (18, 16777216), (19, 8388608), (20, 131072), (21, 278528), (22, -1), (23, 33554432), (24, -1), (25, -1), (26, 1048576), (27, -1), (28, -1), (29, 262144), (30, 4096), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, 33554432), (37, 512), (38, 67108864), (39, 4096), (40, -1), (41, 1048576), (42, -1), (43, 131072), (44, 131072), (45, 33554432), (46, 4194304), (47, -1), (48, -1), (49, -1), (50, -1), (51, 33554432), (52, -1)]

Decide 15 with phase True at level 8

After decision at level 8
 pending : [9, 36, 5, 29, 30, 39, 43, 44, 45, 46, 51, 38, 23, 26, 41, 6, 21, 20, 17, 37, 14, 19, 16, 18]
 solution : [7, 8, 24, 15]


New level: 9
 pending : [9, 36, 5, 29, 30, 39, 43, 44, 45, 46, 51, 38, 23, 26, 41, 6, 21, 20, 17, 37, 14, 19, 16, 18]
 solution : [7, 8, 24, 15]


Before reduction : 
 pending  : [9, 36, 5, 29, 30, 39, 43, 44, 45, 46, 51, 38, 23, 26, 41, 6, 21, 20, 17, 37, 14, 19, 16, 18]
 solution : [7, 8, 24, 15]

Essensial at level 9 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 262144), (6, 262144), (7, -1), (8, -1), (9, 33554432), (10, -1), (11, -1), (12, -1), (13, -1), (14, 2097152), (15, 268435456), (16, 4194304), (17, 65536), (18, 16777216), (19, 8388608), (20, 131072), (21, 278528), (22, -1), (23, 33554432), (24, -1), (25, -1), (26, 1048576), (27, -1), (28, -1), (29, 262144), (30, 4096), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, 33554432), (37, 512), (38, 67108864), (39, 4096), (40, -1), (41, 1048576), (42, -1), (43, 131072), (44, 131072), (45, 33554432), (46, 4194304), (47, -1), (48, -1), (49, -1), (50, -1), (51, 33554432), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 65536), (6, 0), (7, -1), (8, -1), (9, 33554432), (10, -1), (11, -1), (12, -1), (13, -1), (14, 0), (15, -1), (16, 0), (17, 0), (18, 0), (19, 0), (20, 0), (21, 0), (22, -1), (23, 33554432), (24, -1), (25, -1), (26, 0), (27, -1), (28, -1), (29, 131072), (30, 1024), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, 512), (37, 0), (38, 33554432), (39, 512), (40, -1), (41, 0), (42, -1), (43, 65536), (44, 65536), (45, 16777216), (46, 1048576), (47, -1), (48, -1), (49, -1), (50, -1), (51, 33554432), (52, -1)]

Covered at level 9 : {37, 6, 41, 14, 16, 17, 18, 19, 20, 21, 26}

After reduction : 
 pending  : [9, 36, 5, 29, 30, 39, 43, 44, 45, 46, 51, 38, 23]
 solution : [7, 8, 24, 15]


Before reduction : 
 pending  : [9, 36, 5, 29, 30, 39, 43, 44, 45, 46, 51, 38, 23]
 solution : [7, 8, 24, 15]

Essensial at level 9 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 65536), (6, 0), (7, -1), (8, -1), (9, 33554432), (10, -1), (11, -1), (12, -1), (13, -1), (14, 0), (15, -1), (16, 0), (17, 0), (18, 0), (19, 0), (20, 0), (21, 0), (22, -1), (23, 33554432), (24, -1), (25, -1), (26, 0), (27, -1), (28, -1), (29, 131072), (30, 1024), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, 512), (37, 0), (38, 33554432), (39, 512), (40, -1), (41, 0), (42, -1), (43, 65536), (44, 65536), (45, 16777216), (46, 1048576), (47, -1), (48, -1), (49, -1), (50, -1), (51, 33554432), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 65536), (6, -1), (7, -1), (8, -1), (9, 33554432), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, 33554432), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, 131072), (30, 1024), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, 512), (37, -1), (38, 33554432), (39, 512), (40, -1), (41, -1), (42, -1), (43, 65536), (44, 65536), (45, 16777216), (46, 1048576), (47, -1), (48, -1), (49, -1), (50, -1), (51, 33554432), (52, -1)]

Covered at level 9 : set()

After reduction : 
 pending  : [9, 36, 5, 29, 30, 39, 43, 44, 45, 46, 51, 38, 23]
 solution : [7, 8, 24, 15]


Solution : [7, 8, 24, 15] has cost 25.


Before backtrack at level 9
 pending : [9, 36, 5, 29, 30, 39, 43, 44, 45, 46, 51, 38, 23]
 solution : [7, 8, 24, 15]

After backtrack at level 9
 pending : [9, 36, 5, 29, 30, 39, 43, 44, 45, 46, 51, 38, 23, 26, 41, 6, 21, 20, 17, 37, 14, 19, 16, 18]
 solution : [7, 8, 24, 15]


Invert decision for 15 at level 8


New level: 9
 pending : [9, 36, 5, 29, 30, 39, 43, 44, 45, 46, 51, 38, 23, 26, 41, 6, 21, 20, 17, 37, 14, 19, 16, 18]
 solution : [7, 8, 24]


Before reduction : 
 pending  : [9, 36, 5, 29, 30, 39, 43, 44, 45, 46, 51, 38, 23, 26, 41, 6, 21, 20, 17, 37, 14, 19, 16, 18]
 solution : [7, 8, 24]

Essensial at level 9 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 65536), (6, -1), (7, -1), (8, -1), (9, 33554432), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, 33554432), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, 131072), (30, 1024), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, 512), (37, -1), (38, 33554432), (39, 512), (40, -1), (41, -1), (42, -1), (43, 65536), (44, 65536), (45, 16777216), (46, 1048576), (47, -1), (48, -1), (49, -1), (50, -1), (51, 33554432), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 262144), (6, 262144), (7, -1), (8, -1), (9, 33554432), (10, -1), (11, -1), (12, -1), (13, -1), (14, 2097152), (15, -1), (16, 4194304), (17, 65536), (18, 16777216), (19, 8388608), (20, 131072), (21, 278528), (22, -1), (23, 33554432), (24, -1), (25, -1), (26, 1048576), (27, -1), (28, -1), (29, 262144), (30, 4096), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, 33554432), (37, 512), (38, 67108864), (39, 4096), (40, -1), (41, 1048576), (42, -1), (43, 131072), (44, 131072), (45, 33554432), (46, 4194304), (47, -1), (48, -1), (49, -1), (50, -1), (51, 33554432), (52, -1)]

Covered at level 9 : set()

After reduction : 
 pending  : [9, 36, 5, 29, 30, 39, 43, 44, 45, 46, 51, 38, 23, 26, 41, 6, 21, 20, 17, 37, 14, 19, 16, 18]
 solution : [7, 8, 24]


Solution : [7, 8, 24] has cost 18.


Decide in level 9 among pending : [9, 36, 5, 29, 30, 39, 43, 44, 45, 46, 51, 38, 23, 26, 41, 6, 21, 20, 17, 37, 14, 19, 16, 18]

Coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 262144), (6, 262144), (7, -1), (8, -1), (9, 33554432), (10, -1), (11, -1), (12, -1), (13, -1), (14, 2097152), (15, -1), (16, 4194304), (17, 65536), (18, 16777216), (19, 8388608), (20, 131072), (21, 278528), (22, -1), (23, 33554432), (24, -1), (25, -1), (26, 1048576), (27, -1), (28, -1), (29, 262144), (30, 4096), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, 33554432), (37, 512), (38, 67108864), (39, 4096), (40, -1), (41, 1048576), (42, -1), (43, 131072), (44, 131072), (45, 33554432), (46, 4194304), (47, -1), (48, -1), (49, -1), (50, -1), (51, 33554432), (52, -1)]

Decide 38 with phase True at level 9

After decision at level 9
 pending : [9, 36, 5, 29, 30, 39, 43, 44, 45, 46, 51, 23, 26, 41, 6, 21, 20, 17, 37, 14, 19, 16, 18]
 solution : [7, 8, 24, 38]


New level: 10
 pending : [9, 36, 5, 29, 30, 39, 43, 44, 45, 46, 51, 23, 26, 41, 6, 21, 20, 17, 37, 14, 19, 16, 18]
 solution : [7, 8, 24, 38]


Before reduction : 
 pending  : [9, 36, 5, 29, 30, 39, 43, 44, 45, 46, 51, 23, 26, 41, 6, 21, 20, 17, 37, 14, 19, 16, 18]
 solution : [7, 8, 24, 38]

Essensial at level 10 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 262144), (6, 262144), (7, -1), (8, -1), (9, 33554432), (10, -1), (11, -1), (12, -1), (13, -1), (14, 2097152), (15, -1), (16, 4194304), (17, 65536), (18, 16777216), (19, 8388608), (20, 131072), (21, 278528), (22, -1), (23, 33554432), (24, -1), (25, -1), (26, 1048576), (27, -1), (28, -1), (29, 262144), (30, 4096), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, 33554432), (37, 512), (38, 67108864), (39, 4096), (40, -1), (41, 1048576), (42, -1), (43, 131072), (44, 131072), (45, 33554432), (46, 4194304), (47, -1), (48, -1), (49, -1), (50, -1), (51, 33554432), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 0), (6, 131072), (7, -1), (8, -1), (9, 131072), (10, -1), (11, -1), (12, -1), (13, -1), (14, 2097152), (15, -1), (16, 4194304), (17, 65536), (18, 16777216), (19, 8388608), (20, 131072), (21, 135168), (22, -1), (23, 131072), (24, -1), (25, -1), (26, 1048576), (27, -1), (28, -1), (29, 0), (30, 0), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, 8388608), (37, 512), (38, -1), (39, 0), (40, -1), (41, 1048576), (42, -1), (43, 0), (44, 0), (45, 0), (46, 0), (47, -1), (48, -1), (49, -1), (50, -1), (51, 0), (52, -1)]

Covered at level 10 : {5, 39, 43, 44, 45, 46, 51, 29, 30}

After reduction : 
 pending  : [9, 36, 23, 26, 41, 6, 21, 20, 17, 37, 14, 19, 16, 18]
 solution : [7, 8, 24, 38]


Before reduction : 
 pending  : [9, 36, 23, 26, 41, 6, 21, 20, 17, 37, 14, 19, 16, 18]
 solution : [7, 8, 24, 38]

Essensial at level 10 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 0), (6, 131072), (7, -1), (8, -1), (9, 131072), (10, -1), (11, -1), (12, -1), (13, -1), (14, 2097152), (15, -1), (16, 4194304), (17, 65536), (18, 16777216), (19, 8388608), (20, 131072), (21, 135168), (22, -1), (23, 131072), (24, -1), (25, -1), (26, 1048576), (27, -1), (28, -1), (29, 0), (30, 0), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, 8388608), (37, 512), (38, -1), (39, 0), (40, -1), (41, 1048576), (42, -1), (43, 0), (44, 0), (45, 0), (46, 0), (47, -1), (48, -1), (49, -1), (50, -1), (51, 0), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, 131072), (7, -1), (8, -1), (9, 131072), (10, -1), (11, -1), (12, -1), (13, -1), (14, 2097152), (15, -1), (16, 4194304), (17, 65536), (18, 16777216), (19, 8388608), (20, 131072), (21, 135168), (22, -1), (23, 131072), (24, -1), (25, -1), (26, 1048576), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, 8388608), (37, 512), (38, -1), (39, -1), (40, -1), (41, 1048576), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 10 : set()

After reduction : 
 pending  : [9, 36, 23, 26, 41, 6, 21, 20, 17, 37, 14, 19, 16, 18]
 solution : [7, 8, 24, 38]


Solution : [7, 8, 24, 38] has cost 36.


Before backtrack at level 10
 pending : [9, 36, 23, 26, 41, 6, 21, 20, 17, 37, 14, 19, 16, 18]
 solution : [7, 8, 24, 38]

After backtrack at level 10
 pending : [9, 36, 23, 26, 41, 6, 21, 20, 17, 37, 14, 19, 16, 18, 5, 29, 30, 39, 43, 44, 45, 46, 51]
 solution : [7, 8, 24, 38]


Invert decision for 38 at level 9


New level: 10
 pending : [9, 36, 23, 26, 41, 6, 21, 20, 17, 37, 14, 19, 16, 18, 5, 29, 30, 39, 43, 44, 45, 46, 51]
 solution : [7, 8, 24]


Before reduction : 
 pending  : [9, 36, 23, 26, 41, 6, 21, 20, 17, 37, 14, 19, 16, 18, 5, 29, 30, 39, 43, 44, 45, 46, 51]
 solution : [7, 8, 24]

Essensial at level 10 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, 131072), (7, -1), (8, -1), (9, 131072), (10, -1), (11, -1), (12, -1), (13, -1), (14, 2097152), (15, -1), (16, 4194304), (17, 65536), (18, 16777216), (19, 8388608), (20, 131072), (21, 135168), (22, -1), (23, 131072), (24, -1), (25, -1), (26, 1048576), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, 8388608), (37, 512), (38, -1), (39, -1), (40, -1), (41, 1048576), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 262144), (6, 262144), (7, -1), (8, -1), (9, 33554432), (10, -1), (11, -1), (12, -1), (13, -1), (14, 2097152), (15, -1), (16, 4194304), (17, 65536), (18, 16777216), (19, 8388608), (20, 131072), (21, 278528), (22, -1), (23, 33554432), (24, -1), (25, -1), (26, 1048576), (27, -1), (28, -1), (29, 262144), (30, 4096), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, 33554432), (37, 512), (38, -1), (39, 4096), (40, -1), (41, 1048576), (42, -1), (43, 131072), (44, 131072), (45, 33554432), (46, 4194304), (47, -1), (48, -1), (49, -1), (50, -1), (51, 33554432), (52, -1)]

Covered at level 10 : set()

After reduction : 
 pending  : [9, 36, 23, 26, 41, 6, 21, 20, 17, 37, 14, 19, 16, 18, 5, 29, 30, 39, 43, 44, 45, 46, 51]
 solution : [7, 8, 24]


Solution : [7, 8, 24] has cost 18.


Decide in level 10 among pending : [9, 36, 23, 26, 41, 6, 21, 20, 17, 37, 14, 19, 16, 18, 5, 29, 30, 39, 43, 44, 45, 46, 51]

Coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 262144), (6, 262144), (7, -1), (8, -1), (9, 33554432), (10, -1), (11, -1), (12, -1), (13, -1), (14, 2097152), (15, -1), (16, 4194304), (17, 65536), (18, 16777216), (19, 8388608), (20, 131072), (21, 278528), (22, -1), (23, 33554432), (24, -1), (25, -1), (26, 1048576), (27, -1), (28, -1), (29, 262144), (30, 4096), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, 33554432), (37, 512), (38, -1), (39, 4096), (40, -1), (41, 1048576), (42, -1), (43, 131072), (44, 131072), (45, 33554432), (46, 4194304), (47, -1), (48, -1), (49, -1), (50, -1), (51, 33554432), (52, -1)]

Decide 9 with phase True at level 10

After decision at level 10
 pending : [36, 23, 26, 41, 6, 21, 20, 17, 37, 14, 19, 16, 18, 5, 29, 30, 39, 43, 44, 45, 46, 51]
 solution : [7, 8, 24, 9]


New level: 11
 pending : [36, 23, 26, 41, 6, 21, 20, 17, 37, 14, 19, 16, 18, 5, 29, 30, 39, 43, 44, 45, 46, 51]
 solution : [7, 8, 24, 9]


Before reduction : 
 pending  : [36, 23, 26, 41, 6, 21, 20, 17, 37, 14, 19, 16, 18, 5, 29, 30, 39, 43, 44, 45, 46, 51]
 solution : [7, 8, 24, 9]

Essensial at level 11 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 262144), (6, 262144), (7, -1), (8, -1), (9, 33554432), (10, -1), (11, -1), (12, -1), (13, -1), (14, 2097152), (15, -1), (16, 4194304), (17, 65536), (18, 16777216), (19, 8388608), (20, 131072), (21, 278528), (22, -1), (23, 33554432), (24, -1), (25, -1), (26, 1048576), (27, -1), (28, -1), (29, 262144), (30, 4096), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, 33554432), (37, 512), (38, -1), (39, 4096), (40, -1), (41, 1048576), (42, -1), (43, 131072), (44, 131072), (45, 33554432), (46, 4194304), (47, -1), (48, -1), (49, -1), (50, -1), (51, 33554432), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 0), (6, 131072), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 2097152), (15, -1), (16, 4194304), (17, 65536), (18, 8388608), (19, 4194304), (20, 65536), (21, 135168), (22, -1), (23, 0), (24, -1), (25, -1), (26, 524288), (27, -1), (28, -1), (29, 0), (30, 0), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, 32768), (37, 512), (38, -1), (39, 0), (40, -1), (41, 524288), (42, -1), (43, 0), (44, 0), (45, 0), (46, 0), (47, -1), (48, -1), (49, -1), (50, -1), (51, 0), (52, -1)]

Covered at level 11 : {5, 39, 43, 44, 45, 46, 51, 23, 29, 30}

After reduction : 
 pending  : [36, 26, 41, 6, 21, 20, 17, 37, 14, 19, 16, 18]
 solution : [7, 8, 24, 9]


Before reduction : 
 pending  : [36, 26, 41, 6, 21, 20, 17, 37, 14, 19, 16, 18]
 solution : [7, 8, 24, 9]

Essensial at level 11 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 0), (6, 131072), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 2097152), (15, -1), (16, 4194304), (17, 65536), (18, 8388608), (19, 4194304), (20, 65536), (21, 135168), (22, -1), (23, 0), (24, -1), (25, -1), (26, 524288), (27, -1), (28, -1), (29, 0), (30, 0), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, 32768), (37, 512), (38, -1), (39, 0), (40, -1), (41, 524288), (42, -1), (43, 0), (44, 0), (45, 0), (46, 0), (47, -1), (48, -1), (49, -1), (50, -1), (51, 0), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, 131072), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 2097152), (15, -1), (16, 4194304), (17, 65536), (18, 8388608), (19, 4194304), (20, 65536), (21, 135168), (22, -1), (23, -1), (24, -1), (25, -1), (26, 524288), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, 32768), (37, 512), (38, -1), (39, -1), (40, -1), (41, 524288), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 11 : set()

After reduction : 
 pending  : [36, 26, 41, 6, 21, 20, 17, 37, 14, 19, 16, 18]
 solution : [7, 8, 24, 9]


Solution : [7, 8, 24, 9] has cost 22.


Decide in level 11 among pending : [36, 26, 41, 6, 21, 20, 17, 37, 14, 19, 16, 18]

Coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, 131072), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 2097152), (15, -1), (16, 4194304), (17, 65536), (18, 8388608), (19, 4194304), (20, 65536), (21, 135168), (22, -1), (23, -1), (24, -1), (25, -1), (26, 524288), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, 32768), (37, 512), (38, -1), (39, -1), (40, -1), (41, 524288), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Decide 18 with phase True at level 11

After decision at level 11
 pending : [36, 26, 41, 6, 21, 20, 17, 37, 14, 19, 16]
 solution : [7, 8, 24, 9, 18]


New level: 12
 pending : [36, 26, 41, 6, 21, 20, 17, 37, 14, 19, 16]
 solution : [7, 8, 24, 9, 18]


Before reduction : 
 pending  : [36, 26, 41, 6, 21, 20, 17, 37, 14, 19, 16]
 solution : [7, 8, 24, 9, 18]

Essensial at level 12 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, 131072), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 2097152), (15, -1), (16, 4194304), (17, 65536), (18, 8388608), (19, 4194304), (20, 65536), (21, 135168), (22, -1), (23, -1), (24, -1), (25, -1), (26, 524288), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, 32768), (37, 512), (38, -1), (39, -1), (40, -1), (41, 524288), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, 0), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 16384), (15, -1), (16, 65536), (17, 16384), (18, -1), (19, 0), (20, 0), (21, 0), (22, -1), (23, -1), (24, -1), (25, -1), (26, 2048), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, 1024), (37, 512), (38, -1), (39, -1), (40, -1), (41, 2048), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 12 : {19, 20, 21, 6}

After reduction : 
 pending  : [36, 26, 41, 17, 37, 14, 16]
 solution : [7, 8, 24, 9, 18]


Before reduction : 
 pending  : [36, 26, 41, 17, 37, 14, 16]
 solution : [7, 8, 24, 9, 18]

Essensial at level 12 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, 0), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 16384), (15, -1), (16, 65536), (17, 16384), (18, -1), (19, 0), (20, 0), (21, 0), (22, -1), (23, -1), (24, -1), (25, -1), (26, 2048), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, 1024), (37, 512), (38, -1), (39, -1), (40, -1), (41, 2048), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 16384), (15, -1), (16, 65536), (17, 16384), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, 2048), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, 1024), (37, 512), (38, -1), (39, -1), (40, -1), (41, 2048), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 12 : set()

After reduction : 
 pending  : [36, 26, 41, 17, 37, 14, 16]
 solution : [7, 8, 24, 9, 18]


Solution : [7, 8, 24, 9, 18] has cost 31.


Before backtrack at level 12
 pending : [36, 26, 41, 17, 37, 14, 16]
 solution : [7, 8, 24, 9, 18]

After backtrack at level 12
 pending : [36, 26, 41, 17, 37, 14, 16, 6, 21, 20, 19]
 solution : [7, 8, 24, 9, 18]


Invert decision for 18 at level 11


New level: 12
 pending : [36, 26, 41, 17, 37, 14, 16, 6, 21, 20, 19]
 solution : [7, 8, 24, 9]


Before reduction : 
 pending  : [36, 26, 41, 17, 37, 14, 16, 6, 21, 20, 19]
 solution : [7, 8, 24, 9]

Essensial at level 12 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 16384), (15, -1), (16, 65536), (17, 16384), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, 2048), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, 1024), (37, 512), (38, -1), (39, -1), (40, -1), (41, 2048), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, 131072), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 2097152), (15, -1), (16, 4194304), (17, 65536), (18, -1), (19, 4194304), (20, 65536), (21, 135168), (22, -1), (23, -1), (24, -1), (25, -1), (26, 524288), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, 32768), (37, 512), (38, -1), (39, -1), (40, -1), (41, 524288), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 12 : set()

After reduction : 
 pending  : [36, 26, 41, 17, 37, 14, 16, 6, 21, 20, 19]
 solution : [7, 8, 24, 9]


Solution : [7, 8, 24, 9] has cost 22.


Decide in level 12 among pending : [36, 26, 41, 17, 37, 14, 16, 6, 21, 20, 19]

Coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, 131072), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 2097152), (15, -1), (16, 4194304), (17, 65536), (18, -1), (19, 4194304), (20, 65536), (21, 135168), (22, -1), (23, -1), (24, -1), (25, -1), (26, 524288), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, 32768), (37, 512), (38, -1), (39, -1), (40, -1), (41, 524288), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Decide 16 with phase True at level 12

After decision at level 12
 pending : [36, 26, 41, 17, 37, 14, 6, 21, 20, 19]
 solution : [7, 8, 24, 9, 16]


New level: 13
 pending : [36, 26, 41, 17, 37, 14, 6, 21, 20, 19]
 solution : [7, 8, 24, 9, 16]


Before reduction : 
 pending  : [36, 26, 41, 17, 37, 14, 6, 21, 20, 19]
 solution : [7, 8, 24, 9, 16]

Essensial at level 13 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, 131072), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 2097152), (15, -1), (16, 4194304), (17, 65536), (18, -1), (19, 4194304), (20, 65536), (21, 135168), (22, -1), (23, -1), (24, -1), (25, -1), (26, 524288), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, 32768), (37, 512), (38, -1), (39, -1), (40, -1), (41, 524288), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, 65536), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 0), (15, -1), (16, -1), (17, 0), (18, -1), (19, 1048576), (20, 0), (21, 66048), (22, -1), (23, -1), (24, -1), (25, -1), (26, 131072), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, 512), (37, 0), (38, -1), (39, -1), (40, -1), (41, 131072), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 13 : {17, 20, 37, 14}

After reduction : 
 pending  : [36, 26, 41, 6, 21, 19]
 solution : [7, 8, 24, 9, 16]


Before reduction : 
 pending  : [36, 26, 41, 6, 21, 19]
 solution : [7, 8, 24, 9, 16]

Essensial at level 13 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, 65536), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 0), (15, -1), (16, -1), (17, 0), (18, -1), (19, 1048576), (20, 0), (21, 66048), (22, -1), (23, -1), (24, -1), (25, -1), (26, 131072), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, 512), (37, 0), (38, -1), (39, -1), (40, -1), (41, 131072), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, 65536), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, 1048576), (20, -1), (21, 66048), (22, -1), (23, -1), (24, -1), (25, -1), (26, 131072), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, 512), (37, -1), (38, -1), (39, -1), (40, -1), (41, 131072), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 13 : set()

After reduction : 
 pending  : [36, 26, 41, 6, 21, 19]
 solution : [7, 8, 24, 9, 16]


Solution : [7, 8, 24, 9, 16] has cost 29.


Before backtrack at level 13
 pending : [36, 26, 41, 6, 21, 19]
 solution : [7, 8, 24, 9, 16]

After backtrack at level 13
 pending : [36, 26, 41, 6, 21, 19, 17, 37, 14, 20]
 solution : [7, 8, 24, 9, 16]


Invert decision for 16 at level 12


New level: 13
 pending : [36, 26, 41, 6, 21, 19, 17, 37, 14, 20]
 solution : [7, 8, 24, 9]


Before reduction : 
 pending  : [36, 26, 41, 6, 21, 19, 17, 37, 14, 20]
 solution : [7, 8, 24, 9]

Essensial at level 13 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, 65536), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, 1048576), (20, -1), (21, 66048), (22, -1), (23, -1), (24, -1), (25, -1), (26, 131072), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, 512), (37, -1), (38, -1), (39, -1), (40, -1), (41, 131072), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, 131072), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 2097152), (15, -1), (16, -1), (17, 65536), (18, -1), (19, 4194304), (20, 65536), (21, 135168), (22, -1), (23, -1), (24, -1), (25, -1), (26, 524288), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, 32768), (37, 512), (38, -1), (39, -1), (40, -1), (41, 524288), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 13 : set()

After reduction : 
 pending  : [36, 26, 41, 6, 21, 19, 17, 37, 14, 20]
 solution : [7, 8, 24, 9]


Solution : [7, 8, 24, 9] has cost 22.


Decide in level 13 among pending : [36, 26, 41, 6, 21, 19, 17, 37, 14, 20]

Coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, 131072), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 2097152), (15, -1), (16, -1), (17, 65536), (18, -1), (19, 4194304), (20, 65536), (21, 135168), (22, -1), (23, -1), (24, -1), (25, -1), (26, 524288), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, 32768), (37, 512), (38, -1), (39, -1), (40, -1), (41, 524288), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Decide 19 with phase True at level 13

After decision at level 13
 pending : [36, 26, 41, 6, 21, 17, 37, 14, 20]
 solution : [7, 8, 24, 9, 19]


New level: 14
 pending : [36, 26, 41, 6, 21, 17, 37, 14, 20]
 solution : [7, 8, 24, 9, 19]


Before reduction : 
 pending  : [36, 26, 41, 6, 21, 17, 37, 14, 20]
 solution : [7, 8, 24, 9, 19]

Essensial at level 14 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, 131072), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 2097152), (15, -1), (16, -1), (17, 65536), (18, -1), (19, 4194304), (20, 65536), (21, 135168), (22, -1), (23, -1), (24, -1), (25, -1), (26, 524288), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, 32768), (37, 512), (38, -1), (39, -1), (40, -1), (41, 524288), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, 0), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 16384), (15, -1), (16, -1), (17, 16384), (18, -1), (19, -1), (20, 0), (21, 0), (22, -1), (23, -1), (24, -1), (25, -1), (26, 2048), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, 1024), (37, 512), (38, -1), (39, -1), (40, -1), (41, 2048), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 14 : {20, 21, 6}

After reduction : 
 pending  : [36, 26, 41, 17, 37, 14]
 solution : [7, 8, 24, 9, 19]


Before reduction : 
 pending  : [36, 26, 41, 17, 37, 14]
 solution : [7, 8, 24, 9, 19]

Essensial at level 14 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, 0), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 16384), (15, -1), (16, -1), (17, 16384), (18, -1), (19, -1), (20, 0), (21, 0), (22, -1), (23, -1), (24, -1), (25, -1), (26, 2048), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, 1024), (37, 512), (38, -1), (39, -1), (40, -1), (41, 2048), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 16384), (15, -1), (16, -1), (17, 16384), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, 2048), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, 1024), (37, 512), (38, -1), (39, -1), (40, -1), (41, 2048), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 14 : set()

After reduction : 
 pending  : [36, 26, 41, 17, 37, 14]
 solution : [7, 8, 24, 9, 19]


Solution : [7, 8, 24, 9, 19] has cost 31.


Before backtrack at level 14
 pending : [36, 26, 41, 17, 37, 14]
 solution : [7, 8, 24, 9, 19]

After backtrack at level 14
 pending : [36, 26, 41, 17, 37, 14, 6, 21, 20]
 solution : [7, 8, 24, 9, 19]


Invert decision for 19 at level 13


New level: 14
 pending : [36, 26, 41, 17, 37, 14, 6, 21, 20]
 solution : [7, 8, 24, 9]


Before reduction : 
 pending  : [36, 26, 41, 17, 37, 14, 6, 21, 20]
 solution : [7, 8, 24, 9]

Essensial at level 14 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 16384), (15, -1), (16, -1), (17, 16384), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, 2048), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, 1024), (37, 512), (38, -1), (39, -1), (40, -1), (41, 2048), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, 131072), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 2097152), (15, -1), (16, -1), (17, 65536), (18, -1), (19, -1), (20, 65536), (21, 135168), (22, -1), (23, -1), (24, -1), (25, -1), (26, 524288), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, 32768), (37, 512), (38, -1), (39, -1), (40, -1), (41, 524288), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 14 : set()

After reduction : 
 pending  : [36, 26, 41, 17, 37, 14, 6, 21, 20]
 solution : [7, 8, 24, 9]


Solution : [7, 8, 24, 9] has cost 22.


Decide in level 14 among pending : [36, 26, 41, 17, 37, 14, 6, 21, 20]

Coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, 131072), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 2097152), (15, -1), (16, -1), (17, 65536), (18, -1), (19, -1), (20, 65536), (21, 135168), (22, -1), (23, -1), (24, -1), (25, -1), (26, 524288), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, 32768), (37, 512), (38, -1), (39, -1), (40, -1), (41, 524288), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Decide 14 with phase True at level 14

After decision at level 14
 pending : [36, 26, 41, 17, 37, 6, 21, 20]
 solution : [7, 8, 24, 9, 14]


New level: 15
 pending : [36, 26, 41, 17, 37, 6, 21, 20]
 solution : [7, 8, 24, 9, 14]


Before reduction : 
 pending  : [36, 26, 41, 17, 37, 6, 21, 20]
 solution : [7, 8, 24, 9, 14]

Essensial at level 15 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, 131072), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 2097152), (15, -1), (16, -1), (17, 65536), (18, -1), (19, -1), (20, 65536), (21, 135168), (22, -1), (23, -1), (24, -1), (25, -1), (26, 524288), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, 32768), (37, 512), (38, -1), (39, -1), (40, -1), (41, 524288), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, 65536), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, 0), (18, -1), (19, -1), (20, 0), (21, 66048), (22, -1), (23, -1), (24, -1), (25, -1), (26, 131072), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, 512), (37, 0), (38, -1), (39, -1), (40, -1), (41, 131072), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 15 : {17, 20, 37}

After reduction : 
 pending  : [36, 26, 41, 6, 21]
 solution : [7, 8, 24, 9, 14]


Before reduction : 
 pending  : [36, 26, 41, 6, 21]
 solution : [7, 8, 24, 9, 14]

Essensial at level 15 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, 65536), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, 0), (18, -1), (19, -1), (20, 0), (21, 66048), (22, -1), (23, -1), (24, -1), (25, -1), (26, 131072), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, 512), (37, 0), (38, -1), (39, -1), (40, -1), (41, 131072), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, 65536), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, 66048), (22, -1), (23, -1), (24, -1), (25, -1), (26, 131072), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, 512), (37, -1), (38, -1), (39, -1), (40, -1), (41, 131072), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 15 : set()

After reduction : 
 pending  : [36, 26, 41, 6, 21]
 solution : [7, 8, 24, 9, 14]


Solution : [7, 8, 24, 9, 14] has cost 29.


Before backtrack at level 15
 pending : [36, 26, 41, 6, 21]
 solution : [7, 8, 24, 9, 14]

After backtrack at level 15
 pending : [36, 26, 41, 6, 21, 17, 37, 20]
 solution : [7, 8, 24, 9, 14]


Invert decision for 14 at level 14


New level: 15
 pending : [36, 26, 41, 6, 21, 17, 37, 20]
 solution : [7, 8, 24, 9]


Before reduction : 
 pending  : [36, 26, 41, 6, 21, 17, 37, 20]
 solution : [7, 8, 24, 9]

Essensial at level 15 : {17}

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, 65536), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, 66048), (22, -1), (23, -1), (24, -1), (25, -1), (26, 131072), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, 512), (37, -1), (38, -1), (39, -1), (40, -1), (41, 131072), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, 131072), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, 32768), (21, 135168), (22, -1), (23, -1), (24, -1), (25, -1), (26, 524288), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, 32768), (37, 0), (38, -1), (39, -1), (40, -1), (41, 524288), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 15 : {37}

After reduction : 
 pending  : [36, 26, 41, 6, 21, 20]
 solution : [7, 8, 24, 9, 17]


Before reduction : 
 pending  : [36, 26, 41, 6, 21, 20]
 solution : [7, 8, 24, 9, 17]

Essensial at level 15 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, 131072), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, 32768), (21, 135168), (22, -1), (23, -1), (24, -1), (25, -1), (26, 524288), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, 32768), (37, 0), (38, -1), (39, -1), (40, -1), (41, 524288), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, 131072), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, 32768), (21, 135168), (22, -1), (23, -1), (24, -1), (25, -1), (26, 524288), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, 32768), (37, -1), (38, -1), (39, -1), (40, -1), (41, 524288), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 15 : set()

After reduction : 
 pending  : [36, 26, 41, 6, 21, 20]
 solution : [7, 8, 24, 9, 17]


Solution : [7, 8, 24, 9, 17] has cost 29.


Before backtrack at level 15
 pending : [36, 26, 41, 6, 21, 20]
 solution : [7, 8, 24, 9, 17]

After backtrack at level 15
 pending : [36, 26, 41, 6, 21, 20, 17, 37]
 solution : [7, 8, 24, 9]


Before backtrack at level 14
 pending : [36, 26, 41, 6, 21, 20, 17, 37]
 solution : [7, 8, 24, 9]

After backtrack at level 14
 pending : [36, 26, 41, 6, 21, 20, 17, 37, 14]
 solution : [7, 8, 24, 9]


Before backtrack at level 13
 pending : [36, 26, 41, 6, 21, 20, 17, 37, 14]
 solution : [7, 8, 24, 9]

After backtrack at level 13
 pending : [36, 26, 41, 6, 21, 20, 17, 37, 14, 19]
 solution : [7, 8, 24, 9]


Before backtrack at level 12
 pending : [36, 26, 41, 6, 21, 20, 17, 37, 14, 19]
 solution : [7, 8, 24, 9]

After backtrack at level 12
 pending : [36, 26, 41, 6, 21, 20, 17, 37, 14, 19, 16]
 solution : [7, 8, 24, 9]


Before backtrack at level 11
 pending : [36, 26, 41, 6, 21, 20, 17, 37, 14, 19, 16]
 solution : [7, 8, 24, 9]

After backtrack at level 11
 pending : [36, 26, 41, 6, 21, 20, 17, 37, 14, 19, 16, 23, 5, 29, 30, 39, 43, 44, 45, 46, 51, 18]
 solution : [7, 8, 24, 9]


Invert decision for 9 at level 10


New level: 11
 pending : [36, 26, 41, 6, 21, 20, 17, 37, 14, 19, 16, 23, 5, 29, 30, 39, 43, 44, 45, 46, 51, 18]
 solution : [7, 8, 24]


Before reduction : 
 pending  : [36, 26, 41, 6, 21, 20, 17, 37, 14, 19, 16, 23, 5, 29, 30, 39, 43, 44, 45, 46, 51, 18]
 solution : [7, 8, 24]

Essensial at level 11 : {23}

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, 131072), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, 32768), (21, 135168), (22, -1), (23, -1), (24, -1), (25, -1), (26, 524288), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, 32768), (37, -1), (38, -1), (39, -1), (40, -1), (41, 524288), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 0), (6, 131072), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 2097152), (15, -1), (16, 4194304), (17, 65536), (18, 8388608), (19, 4194304), (20, 65536), (21, 135168), (22, -1), (23, -1), (24, -1), (25, -1), (26, 524288), (27, -1), (28, -1), (29, 0), (30, 0), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, 262144), (37, 512), (38, -1), (39, 0), (40, -1), (41, 524288), (42, -1), (43, 0), (44, 0), (45, 0), (46, 0), (47, -1), (48, -1), (49, -1), (50, -1), (51, 0), (52, -1)]

Covered at level 11 : {5, 39, 43, 44, 45, 46, 51, 29, 30}

After reduction : 
 pending  : [36, 26, 41, 6, 21, 20, 17, 37, 14, 19, 16, 18]
 solution : [7, 8, 24, 23]


Before reduction : 
 pending  : [36, 26, 41, 6, 21, 20, 17, 37, 14, 19, 16, 18]
 solution : [7, 8, 24, 23]

Essensial at level 11 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 0), (6, 131072), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 2097152), (15, -1), (16, 4194304), (17, 65536), (18, 8388608), (19, 4194304), (20, 65536), (21, 135168), (22, -1), (23, -1), (24, -1), (25, -1), (26, 524288), (27, -1), (28, -1), (29, 0), (30, 0), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, 262144), (37, 512), (38, -1), (39, 0), (40, -1), (41, 524288), (42, -1), (43, 0), (44, 0), (45, 0), (46, 0), (47, -1), (48, -1), (49, -1), (50, -1), (51, 0), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, 131072), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 2097152), (15, -1), (16, 4194304), (17, 65536), (18, 8388608), (19, 4194304), (20, 65536), (21, 135168), (22, -1), (23, -1), (24, -1), (25, -1), (26, 524288), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, 262144), (37, 512), (38, -1), (39, -1), (40, -1), (41, 524288), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 11 : set()

After reduction : 
 pending  : [36, 26, 41, 6, 21, 20, 17, 37, 14, 19, 16, 18]
 solution : [7, 8, 24, 23]


Solution : [7, 8, 24, 23] has cost 25.


Before backtrack at level 11
 pending : [36, 26, 41, 6, 21, 20, 17, 37, 14, 19, 16, 18]
 solution : [7, 8, 24, 23]

After backtrack at level 11
 pending : [36, 26, 41, 6, 21, 20, 17, 37, 14, 19, 16, 18, 23, 5, 29, 30, 39, 43, 44, 45, 46, 51]
 solution : [7, 8, 24]


Before backtrack at level 10
 pending : [36, 26, 41, 6, 21, 20, 17, 37, 14, 19, 16, 18, 23, 5, 29, 30, 39, 43, 44, 45, 46, 51]
 solution : [7, 8, 24]

After backtrack at level 10
 pending : [36, 26, 41, 6, 21, 20, 17, 37, 14, 19, 16, 18, 23, 5, 29, 30, 39, 43, 44, 45, 46, 51, 9]
 solution : [7, 8, 24]


Before backtrack at level 9
 pending : [36, 26, 41, 6, 21, 20, 17, 37, 14, 19, 16, 18, 23, 5, 29, 30, 39, 43, 44, 45, 46, 51, 9]
 solution : [7, 8, 24]

After backtrack at level 9
 pending : [36, 26, 41, 6, 21, 20, 17, 37, 14, 19, 16, 18, 23, 5, 29, 30, 39, 43, 44, 45, 46, 51, 9, 38]
 solution : [7, 8, 24]


Before backtrack at level 8
 pending : [36, 26, 41, 6, 21, 20, 17, 37, 14, 19, 16, 18, 23, 5, 29, 30, 39, 43, 44, 45, 46, 51, 9, 38]
 solution : [7, 8, 24]

After backtrack at level 8
 pending : [36, 26, 41, 6, 21, 20, 17, 37, 14, 19, 16, 18, 23, 5, 29, 30, 39, 43, 44, 45, 46, 51, 9, 38, 15]
 solution : [7, 8, 24]


Before backtrack at level 7
 pending : [36, 26, 41, 6, 21, 20, 17, 37, 14, 19, 16, 18, 23, 5, 29, 30, 39, 43, 44, 45, 46, 51, 9, 38, 15]
 solution : [7, 8, 24]

After backtrack at level 7
 pending : [36, 26, 41, 6, 21, 20, 17, 37, 14, 19, 16, 18, 23, 5, 29, 30, 39, 43, 44, 45, 46, 51, 9, 38, 15, 13]
 solution : [7, 8, 24]


Before backtrack at level 6
 pending : [36, 26, 41, 6, 21, 20, 17, 37, 14, 19, 16, 18, 23, 5, 29, 30, 39, 43, 44, 45, 46, 51, 9, 38, 15, 13]
 solution : [7, 8, 24]

After backtrack at level 6
 pending : [36, 26, 41, 6, 21, 20, 17, 37, 14, 19, 16, 18, 23, 5, 29, 30, 39, 43, 44, 45, 46, 51, 9, 38, 15, 13, 31, 33, 27]
 solution : [7, 8, 24]


Invert decision for 24 at level 5


New level: 6
 pending : [36, 26, 41, 6, 21, 20, 17, 37, 14, 19, 16, 18, 23, 5, 29, 30, 39, 43, 44, 45, 46, 51, 9, 38, 15, 13, 31, 33, 27]
 solution : [7, 8]


Before reduction : 
 pending  : [36, 26, 41, 6, 21, 20, 17, 37, 14, 19, 16, 18, 23, 5, 29, 30, 39, 43, 44, 45, 46, 51, 9, 38, 15, 13, 31, 33, 27]
 solution : [7, 8]

Essensial at level 6 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, 131072), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 2097152), (15, -1), (16, 4194304), (17, 65536), (18, 8388608), (19, 4194304), (20, 65536), (21, 135168), (22, -1), (23, -1), (24, -1), (25, -1), (26, 524288), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, 262144), (37, 512), (38, -1), (39, -1), (40, -1), (41, 524288), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 1048576), (6, 262144), (7, -1), (8, -1), (9, 134217728), (10, -1), (11, -1), (12, -1), (13, 536870912), (14, 2097152), (15, 268435456), (16, 4194304), (17, 65536), (18, 16777216), (19, 8388608), (20, 131072), (21, 278528), (22, -1), (23, 134217728), (24, -1), (25, -1), (26, 1048576), (27, 1073741824), (28, -1), (29, 1048576), (30, 16384), (31, 32768), (32, -1), (33, 4194304), (34, -1), (35, -1), (36, 67108864), (37, 268435456), (38, 134217728), (39, 16384), (40, -1), (41, 1048576), (42, -1), (43, 524288), (44, 524288), (45, 67108864), (46, 16777216), (47, -1), (48, -1), (49, -1), (50, -1), (51, 67108864), (52, -1)]

Covered at level 6 : set()

After reduction : 
 pending  : [36, 26, 41, 6, 21, 20, 17, 37, 14, 19, 16, 18, 23, 5, 29, 30, 39, 43, 44, 45, 46, 51, 9, 38, 15, 13, 31, 33, 27]
 solution : [7, 8]


Solution : [7, 8] has cost 11.


Decide in level 6 among pending : [36, 26, 41, 6, 21, 20, 17, 37, 14, 19, 16, 18, 23, 5, 29, 30, 39, 43, 44, 45, 46, 51, 9, 38, 15, 13, 31, 33, 27]

Coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 1048576), (6, 262144), (7, -1), (8, -1), (9, 134217728), (10, -1), (11, -1), (12, -1), (13, 536870912), (14, 2097152), (15, 268435456), (16, 4194304), (17, 65536), (18, 16777216), (19, 8388608), (20, 131072), (21, 278528), (22, -1), (23, 134217728), (24, -1), (25, -1), (26, 1048576), (27, 1073741824), (28, -1), (29, 1048576), (30, 16384), (31, 32768), (32, -1), (33, 4194304), (34, -1), (35, -1), (36, 67108864), (37, 268435456), (38, 134217728), (39, 16384), (40, -1), (41, 1048576), (42, -1), (43, 524288), (44, 524288), (45, 67108864), (46, 16777216), (47, -1), (48, -1), (49, -1), (50, -1), (51, 67108864), (52, -1)]

Decide 27 with phase True at level 6

After decision at level 6
 pending : [36, 26, 41, 6, 21, 20, 17, 37, 14, 19, 16, 18, 23, 5, 29, 30, 39, 43, 44, 45, 46, 51, 9, 38, 15, 13, 31, 33]
 solution : [7, 8, 27]


New level: 7
 pending : [36, 26, 41, 6, 21, 20, 17, 37, 14, 19, 16, 18, 23, 5, 29, 30, 39, 43, 44, 45, 46, 51, 9, 38, 15, 13, 31, 33]
 solution : [7, 8, 27]


Before reduction : 
 pending  : [36, 26, 41, 6, 21, 20, 17, 37, 14, 19, 16, 18, 23, 5, 29, 30, 39, 43, 44, 45, 46, 51, 9, 38, 15, 13, 31, 33]
 solution : [7, 8, 27]

Essensial at level 7 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 1048576), (6, 262144), (7, -1), (8, -1), (9, 134217728), (10, -1), (11, -1), (12, -1), (13, 536870912), (14, 2097152), (15, 268435456), (16, 4194304), (17, 65536), (18, 16777216), (19, 8388608), (20, 131072), (21, 278528), (22, -1), (23, 134217728), (24, -1), (25, -1), (26, 1048576), (27, 1073741824), (28, -1), (29, 1048576), (30, 16384), (31, 32768), (32, -1), (33, 4194304), (34, -1), (35, -1), (36, 67108864), (37, 268435456), (38, 134217728), (39, 16384), (40, -1), (41, 1048576), (42, -1), (43, 524288), (44, 524288), (45, 67108864), (46, 16777216), (47, -1), (48, -1), (49, -1), (50, -1), (51, 67108864), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 262144), (6, 0), (7, -1), (8, -1), (9, 134217728), (10, -1), (11, -1), (12, -1), (13, 0), (14, 0), (15, 0), (16, 0), (17, 0), (18, 0), (19, 0), (20, 0), (21, 0), (22, -1), (23, 134217728), (24, -1), (25, -1), (26, 0), (27, -1), (28, -1), (29, 524288), (30, 4096), (31, 8192), (32, -1), (33, 4194304), (34, -1), (35, -1), (36, 2048), (37, 4096), (38, 67108864), (39, 2048), (40, -1), (41, 0), (42, -1), (43, 131072), (44, 131072), (45, 33554432), (46, 4194304), (47, -1), (48, -1), (49, -1), (50, -1), (51, 16777216), (52, -1)]

Covered at level 7 : {6, 41, 13, 14, 15, 16, 17, 18, 19, 20, 21, 26}

After reduction : 
 pending  : [36, 37, 23, 5, 29, 30, 39, 43, 44, 45, 46, 51, 9, 38, 31, 33]
 solution : [7, 8, 27]


Before reduction : 
 pending  : [36, 37, 23, 5, 29, 30, 39, 43, 44, 45, 46, 51, 9, 38, 31, 33]
 solution : [7, 8, 27]

Essensial at level 7 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 262144), (6, 0), (7, -1), (8, -1), (9, 134217728), (10, -1), (11, -1), (12, -1), (13, 0), (14, 0), (15, 0), (16, 0), (17, 0), (18, 0), (19, 0), (20, 0), (21, 0), (22, -1), (23, 134217728), (24, -1), (25, -1), (26, 0), (27, -1), (28, -1), (29, 524288), (30, 4096), (31, 8192), (32, -1), (33, 4194304), (34, -1), (35, -1), (36, 2048), (37, 4096), (38, 67108864), (39, 2048), (40, -1), (41, 0), (42, -1), (43, 131072), (44, 131072), (45, 33554432), (46, 4194304), (47, -1), (48, -1), (49, -1), (50, -1), (51, 16777216), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 262144), (6, -1), (7, -1), (8, -1), (9, 134217728), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, 134217728), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, 524288), (30, 4096), (31, 8192), (32, -1), (33, 4194304), (34, -1), (35, -1), (36, 2048), (37, 4096), (38, 67108864), (39, 2048), (40, -1), (41, -1), (42, -1), (43, 131072), (44, 131072), (45, 33554432), (46, 4194304), (47, -1), (48, -1), (49, -1), (50, -1), (51, 16777216), (52, -1)]

Covered at level 7 : set()

After reduction : 
 pending  : [36, 37, 23, 5, 29, 30, 39, 43, 44, 45, 46, 51, 9, 38, 31, 33]
 solution : [7, 8, 27]


Solution : [7, 8, 27] has cost 15.


Decide in level 7 among pending : [36, 37, 23, 5, 29, 30, 39, 43, 44, 45, 46, 51, 9, 38, 31, 33]

Coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 262144), (6, -1), (7, -1), (8, -1), (9, 134217728), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, 134217728), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, 524288), (30, 4096), (31, 8192), (32, -1), (33, 4194304), (34, -1), (35, -1), (36, 2048), (37, 4096), (38, 67108864), (39, 2048), (40, -1), (41, -1), (42, -1), (43, 131072), (44, 131072), (45, 33554432), (46, 4194304), (47, -1), (48, -1), (49, -1), (50, -1), (51, 16777216), (52, -1)]

Decide 23 with phase True at level 7

After decision at level 7
 pending : [36, 37, 5, 29, 30, 39, 43, 44, 45, 46, 51, 9, 38, 31, 33]
 solution : [7, 8, 27, 23]


New level: 8
 pending : [36, 37, 5, 29, 30, 39, 43, 44, 45, 46, 51, 9, 38, 31, 33]
 solution : [7, 8, 27, 23]


Before reduction : 
 pending  : [36, 37, 5, 29, 30, 39, 43, 44, 45, 46, 51, 9, 38, 31, 33]
 solution : [7, 8, 27, 23]

Essensial at level 8 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 262144), (6, -1), (7, -1), (8, -1), (9, 134217728), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, 134217728), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, 524288), (30, 4096), (31, 8192), (32, -1), (33, 4194304), (34, -1), (35, -1), (36, 2048), (37, 4096), (38, 67108864), (39, 2048), (40, -1), (41, -1), (42, -1), (43, 131072), (44, 131072), (45, 33554432), (46, 4194304), (47, -1), (48, -1), (49, -1), (50, -1), (51, 16777216), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 0), (6, -1), (7, -1), (8, -1), (9, 0), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, 0), (30, 0), (31, 0), (32, -1), (33, 0), (34, -1), (35, -1), (36, 0), (37, 0), (38, 0), (39, 0), (40, -1), (41, -1), (42, -1), (43, 0), (44, 0), (45, 0), (46, 0), (47, -1), (48, -1), (49, -1), (50, -1), (51, 0), (52, -1)]

Covered at level 8 : {33, 36, 5, 37, 39, 38, 9, 43, 44, 45, 46, 51, 29, 30, 31}

After reduction : 
 pending  : []
 solution : [7, 8, 27, 23]


Before reduction : 
 pending  : []
 solution : [7, 8, 27, 23]

Essensial at level 8 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 0), (6, -1), (7, -1), (8, -1), (9, 0), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, 0), (30, 0), (31, 0), (32, -1), (33, 0), (34, -1), (35, -1), (36, 0), (37, 0), (38, 0), (39, 0), (40, -1), (41, -1), (42, -1), (43, 0), (44, 0), (45, 0), (46, 0), (47, -1), (48, -1), (49, -1), (50, -1), (51, 0), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 8 : set()

After reduction : 
 pending  : []
 solution : [7, 8, 27, 23]


Solution : [7, 8, 27, 23] has cost 22.


Before backtrack at level 8
 pending : []
 solution : [7, 8, 27, 23]

After backtrack at level 8
 pending : [36, 37, 5, 29, 30, 39, 43, 44, 45, 46, 51, 9, 38, 31, 33]
 solution : [7, 8, 27, 23]


Invert decision for 23 at level 7


New level: 8
 pending : [36, 37, 5, 29, 30, 39, 43, 44, 45, 46, 51, 9, 38, 31, 33]
 solution : [7, 8, 27]


Before reduction : 
 pending  : [36, 37, 5, 29, 30, 39, 43, 44, 45, 46, 51, 9, 38, 31, 33]
 solution : [7, 8, 27]

Essensial at level 8 : {9}

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 0), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, 0), (30, 0), (31, 0), (32, -1), (33, 0), (34, -1), (35, -1), (36, 0), (37, 0), (38, 0), (39, 0), (40, -1), (41, -1), (42, -1), (43, 0), (44, 0), (45, 0), (46, 0), (47, -1), (48, -1), (49, -1), (50, -1), (51, 0), (52, -1)]

Covered at level 8 : {33, 36, 5, 37, 39, 38, 43, 44, 45, 46, 51, 29, 30, 31}

After reduction : 
 pending  : []
 solution : [7, 8, 27, 9]


Before reduction : 
 pending  : []
 solution : [7, 8, 27, 9]

Essensial at level 8 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 0), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, 0), (30, 0), (31, 0), (32, -1), (33, 0), (34, -1), (35, -1), (36, 0), (37, 0), (38, 0), (39, 0), (40, -1), (41, -1), (42, -1), (43, 0), (44, 0), (45, 0), (46, 0), (47, -1), (48, -1), (49, -1), (50, -1), (51, 0), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 8 : set()

After reduction : 
 pending  : []
 solution : [7, 8, 27, 9]


Solution : [7, 8, 27, 9] has cost 19.


Before backtrack at level 8
 pending : []
 solution : [7, 8, 27, 9]

After backtrack at level 8
 pending : [9, 36, 37, 5, 29, 30, 39, 43, 44, 45, 46, 51, 38, 31, 33]
 solution : [7, 8, 27]


Before backtrack at level 7
 pending : [9, 36, 37, 5, 29, 30, 39, 43, 44, 45, 46, 51, 38, 31, 33]
 solution : [7, 8, 27]

After backtrack at level 7
 pending : [9, 36, 37, 5, 29, 30, 39, 43, 44, 45, 46, 51, 38, 31, 33, 26, 41, 6, 21, 20, 17, 14, 19, 16, 18, 15, 13, 23]
 solution : [7, 8, 27]


Invert decision for 27 at level 6


New level: 7
 pending : [9, 36, 37, 5, 29, 30, 39, 43, 44, 45, 46, 51, 38, 31, 33, 26, 41, 6, 21, 20, 17, 14, 19, 16, 18, 15, 13, 23]
 solution : [7, 8]


Before reduction : 
 pending  : [9, 36, 37, 5, 29, 30, 39, 43, 44, 45, 46, 51, 38, 31, 33, 26, 41, 6, 21, 20, 17, 14, 19, 16, 18, 15, 13, 23]
 solution : [7, 8]

Essensial at level 7 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 1048576), (6, 262144), (7, -1), (8, -1), (9, 134217728), (10, -1), (11, -1), (12, -1), (13, 536870912), (14, 2097152), (15, 268435456), (16, 4194304), (17, 65536), (18, 16777216), (19, 8388608), (20, 131072), (21, 278528), (22, -1), (23, 134217728), (24, -1), (25, -1), (26, 1048576), (27, -1), (28, -1), (29, 1048576), (30, 16384), (31, 32768), (32, -1), (33, 4194304), (34, -1), (35, -1), (36, 67108864), (37, 268435456), (38, 134217728), (39, 16384), (40, -1), (41, 1048576), (42, -1), (43, 524288), (44, 524288), (45, 67108864), (46, 16777216), (47, -1), (48, -1), (49, -1), (50, -1), (51, 67108864), (52, -1)]

Covered at level 7 : set()

After reduction : 
 pending  : [9, 36, 37, 5, 29, 30, 39, 43, 44, 45, 46, 51, 38, 31, 33, 26, 41, 6, 21, 20, 17, 14, 19, 16, 18, 15, 13, 23]
 solution : [7, 8]


Solution : [7, 8] has cost 11.


Decide in level 7 among pending : [9, 36, 37, 5, 29, 30, 39, 43, 44, 45, 46, 51, 38, 31, 33, 26, 41, 6, 21, 20, 17, 14, 19, 16, 18, 15, 13, 23]

Coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 1048576), (6, 262144), (7, -1), (8, -1), (9, 134217728), (10, -1), (11, -1), (12, -1), (13, 536870912), (14, 2097152), (15, 268435456), (16, 4194304), (17, 65536), (18, 16777216), (19, 8388608), (20, 131072), (21, 278528), (22, -1), (23, 134217728), (24, -1), (25, -1), (26, 1048576), (27, -1), (28, -1), (29, 1048576), (30, 16384), (31, 32768), (32, -1), (33, 4194304), (34, -1), (35, -1), (36, 67108864), (37, 268435456), (38, 134217728), (39, 16384), (40, -1), (41, 1048576), (42, -1), (43, 524288), (44, 524288), (45, 67108864), (46, 16777216), (47, -1), (48, -1), (49, -1), (50, -1), (51, 67108864), (52, -1)]

Decide 13 with phase True at level 7

After decision at level 7
 pending : [9, 36, 37, 5, 29, 30, 39, 43, 44, 45, 46, 51, 38, 31, 33, 26, 41, 6, 21, 20, 17, 14, 19, 16, 18, 15, 23]
 solution : [7, 8, 13]


New level: 8
 pending : [9, 36, 37, 5, 29, 30, 39, 43, 44, 45, 46, 51, 38, 31, 33, 26, 41, 6, 21, 20, 17, 14, 19, 16, 18, 15, 23]
 solution : [7, 8, 13]


Before reduction : 
 pending  : [9, 36, 37, 5, 29, 30, 39, 43, 44, 45, 46, 51, 38, 31, 33, 26, 41, 6, 21, 20, 17, 14, 19, 16, 18, 15, 23]
 solution : [7, 8, 13]

Essensial at level 8 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 1048576), (6, 262144), (7, -1), (8, -1), (9, 134217728), (10, -1), (11, -1), (12, -1), (13, 536870912), (14, 2097152), (15, 268435456), (16, 4194304), (17, 65536), (18, 16777216), (19, 8388608), (20, 131072), (21, 278528), (22, -1), (23, 134217728), (24, -1), (25, -1), (26, 1048576), (27, -1), (28, -1), (29, 1048576), (30, 16384), (31, 32768), (32, -1), (33, 4194304), (34, -1), (35, -1), (36, 67108864), (37, 268435456), (38, 134217728), (39, 16384), (40, -1), (41, 1048576), (42, -1), (43, 524288), (44, 524288), (45, 67108864), (46, 16777216), (47, -1), (48, -1), (49, -1), (50, -1), (51, 67108864), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 262144), (6, 0), (7, -1), (8, -1), (9, 134217728), (10, -1), (11, -1), (12, -1), (13, -1), (14, 0), (15, 0), (16, 0), (17, 0), (18, 0), (19, 0), (20, 0), (21, 0), (22, -1), (23, 134217728), (24, -1), (25, -1), (26, 0), (27, -1), (28, -1), (29, 524288), (30, 4096), (31, 8192), (32, -1), (33, 4194304), (34, -1), (35, -1), (36, 2048), (37, 4096), (38, 67108864), (39, 2048), (40, -1), (41, 0), (42, -1), (43, 131072), (44, 131072), (45, 33554432), (46, 4194304), (47, -1), (48, -1), (49, -1), (50, -1), (51, 67108864), (52, -1)]

Covered at level 8 : {6, 41, 14, 15, 16, 17, 18, 19, 20, 21, 26}

After reduction : 
 pending  : [9, 36, 37, 5, 29, 30, 39, 43, 44, 45, 46, 51, 38, 31, 33, 23]
 solution : [7, 8, 13]


Before reduction : 
 pending  : [9, 36, 37, 5, 29, 30, 39, 43, 44, 45, 46, 51, 38, 31, 33, 23]
 solution : [7, 8, 13]

Essensial at level 8 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 262144), (6, 0), (7, -1), (8, -1), (9, 134217728), (10, -1), (11, -1), (12, -1), (13, -1), (14, 0), (15, 0), (16, 0), (17, 0), (18, 0), (19, 0), (20, 0), (21, 0), (22, -1), (23, 134217728), (24, -1), (25, -1), (26, 0), (27, -1), (28, -1), (29, 524288), (30, 4096), (31, 8192), (32, -1), (33, 4194304), (34, -1), (35, -1), (36, 2048), (37, 4096), (38, 67108864), (39, 2048), (40, -1), (41, 0), (42, -1), (43, 131072), (44, 131072), (45, 33554432), (46, 4194304), (47, -1), (48, -1), (49, -1), (50, -1), (51, 67108864), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 262144), (6, -1), (7, -1), (8, -1), (9, 134217728), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, 134217728), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, 524288), (30, 4096), (31, 8192), (32, -1), (33, 4194304), (34, -1), (35, -1), (36, 2048), (37, 4096), (38, 67108864), (39, 2048), (40, -1), (41, -1), (42, -1), (43, 131072), (44, 131072), (45, 33554432), (46, 4194304), (47, -1), (48, -1), (49, -1), (50, -1), (51, 67108864), (52, -1)]

Covered at level 8 : set()

After reduction : 
 pending  : [9, 36, 37, 5, 29, 30, 39, 43, 44, 45, 46, 51, 38, 31, 33, 23]
 solution : [7, 8, 13]


Solution : [7, 8, 13] has cost 18.


Decide in level 8 among pending : [9, 36, 37, 5, 29, 30, 39, 43, 44, 45, 46, 51, 38, 31, 33, 23]

Coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 262144), (6, -1), (7, -1), (8, -1), (9, 134217728), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, 134217728), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, 524288), (30, 4096), (31, 8192), (32, -1), (33, 4194304), (34, -1), (35, -1), (36, 2048), (37, 4096), (38, 67108864), (39, 2048), (40, -1), (41, -1), (42, -1), (43, 131072), (44, 131072), (45, 33554432), (46, 4194304), (47, -1), (48, -1), (49, -1), (50, -1), (51, 67108864), (52, -1)]

Decide 9 with phase True at level 8

After decision at level 8
 pending : [36, 37, 5, 29, 30, 39, 43, 44, 45, 46, 51, 38, 31, 33, 23]
 solution : [7, 8, 13, 9]


New level: 9
 pending : [36, 37, 5, 29, 30, 39, 43, 44, 45, 46, 51, 38, 31, 33, 23]
 solution : [7, 8, 13, 9]


Before reduction : 
 pending  : [36, 37, 5, 29, 30, 39, 43, 44, 45, 46, 51, 38, 31, 33, 23]
 solution : [7, 8, 13, 9]

Essensial at level 9 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 262144), (6, -1), (7, -1), (8, -1), (9, 134217728), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, 134217728), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, 524288), (30, 4096), (31, 8192), (32, -1), (33, 4194304), (34, -1), (35, -1), (36, 2048), (37, 4096), (38, 67108864), (39, 2048), (40, -1), (41, -1), (42, -1), (43, 131072), (44, 131072), (45, 33554432), (46, 4194304), (47, -1), (48, -1), (49, -1), (50, -1), (51, 67108864), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 0), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, 0), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, 0), (30, 0), (31, 0), (32, -1), (33, 0), (34, -1), (35, -1), (36, 0), (37, 0), (38, 0), (39, 0), (40, -1), (41, -1), (42, -1), (43, 0), (44, 0), (45, 0), (46, 0), (47, -1), (48, -1), (49, -1), (50, -1), (51, 0), (52, -1)]

Covered at level 9 : {33, 36, 5, 37, 39, 38, 43, 44, 45, 46, 51, 23, 29, 30, 31}

After reduction : 
 pending  : []
 solution : [7, 8, 13, 9]


Before reduction : 
 pending  : []
 solution : [7, 8, 13, 9]

Essensial at level 9 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 0), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, 0), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, 0), (30, 0), (31, 0), (32, -1), (33, 0), (34, -1), (35, -1), (36, 0), (37, 0), (38, 0), (39, 0), (40, -1), (41, -1), (42, -1), (43, 0), (44, 0), (45, 0), (46, 0), (47, -1), (48, -1), (49, -1), (50, -1), (51, 0), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 9 : set()

After reduction : 
 pending  : []
 solution : [7, 8, 13, 9]


Solution : [7, 8, 13, 9] has cost 22.


Before backtrack at level 9
 pending : []
 solution : [7, 8, 13, 9]

After backtrack at level 9
 pending : [36, 37, 5, 29, 30, 39, 43, 44, 45, 46, 51, 38, 31, 33, 23]
 solution : [7, 8, 13, 9]


Invert decision for 9 at level 8


New level: 9
 pending : [36, 37, 5, 29, 30, 39, 43, 44, 45, 46, 51, 38, 31, 33, 23]
 solution : [7, 8, 13]


Before reduction : 
 pending  : [36, 37, 5, 29, 30, 39, 43, 44, 45, 46, 51, 38, 31, 33, 23]
 solution : [7, 8, 13]

Essensial at level 9 : {23}

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 0), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, 0), (30, 0), (31, 0), (32, -1), (33, 0), (34, -1), (35, -1), (36, 0), (37, 0), (38, 0), (39, 0), (40, -1), (41, -1), (42, -1), (43, 0), (44, 0), (45, 0), (46, 0), (47, -1), (48, -1), (49, -1), (50, -1), (51, 0), (52, -1)]

Covered at level 9 : {33, 36, 5, 37, 39, 38, 43, 44, 45, 46, 51, 29, 30, 31}

After reduction : 
 pending  : []
 solution : [7, 8, 13, 23]


Before reduction : 
 pending  : []
 solution : [7, 8, 13, 23]

Essensial at level 9 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 0), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, 0), (30, 0), (31, 0), (32, -1), (33, 0), (34, -1), (35, -1), (36, 0), (37, 0), (38, 0), (39, 0), (40, -1), (41, -1), (42, -1), (43, 0), (44, 0), (45, 0), (46, 0), (47, -1), (48, -1), (49, -1), (50, -1), (51, 0), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 9 : set()

After reduction : 
 pending  : []
 solution : [7, 8, 13, 23]


Solution : [7, 8, 13, 23] has cost 25.


Before backtrack at level 9
 pending : []
 solution : [7, 8, 13, 23]

After backtrack at level 9
 pending : [23, 36, 37, 5, 29, 30, 39, 43, 44, 45, 46, 51, 38, 31, 33]
 solution : [7, 8, 13]


Before backtrack at level 8
 pending : [23, 36, 37, 5, 29, 30, 39, 43, 44, 45, 46, 51, 38, 31, 33]
 solution : [7, 8, 13]

After backtrack at level 8
 pending : [23, 36, 37, 5, 29, 30, 39, 43, 44, 45, 46, 51, 38, 31, 33, 26, 41, 6, 21, 20, 17, 14, 19, 16, 18, 15, 9]
 solution : [7, 8, 13]


Invert decision for 13 at level 7


New level: 8
 pending : [23, 36, 37, 5, 29, 30, 39, 43, 44, 45, 46, 51, 38, 31, 33, 26, 41, 6, 21, 20, 17, 14, 19, 16, 18, 15, 9]
 solution : [7, 8]


Before reduction : 
 pending  : [23, 36, 37, 5, 29, 30, 39, 43, 44, 45, 46, 51, 38, 31, 33, 26, 41, 6, 21, 20, 17, 14, 19, 16, 18, 15, 9]
 solution : [7, 8]

Essensial at level 8 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 1048576), (6, 262144), (7, -1), (8, -1), (9, 134217728), (10, -1), (11, -1), (12, -1), (13, -1), (14, 2097152), (15, 268435456), (16, 4194304), (17, 65536), (18, 16777216), (19, 8388608), (20, 131072), (21, 278528), (22, -1), (23, 134217728), (24, -1), (25, -1), (26, 1048576), (27, -1), (28, -1), (29, 1048576), (30, 16384), (31, 32768), (32, -1), (33, 4194304), (34, -1), (35, -1), (36, 67108864), (37, 268435456), (38, 134217728), (39, 16384), (40, -1), (41, 1048576), (42, -1), (43, 524288), (44, 524288), (45, 67108864), (46, 16777216), (47, -1), (48, -1), (49, -1), (50, -1), (51, 67108864), (52, -1)]

Covered at level 8 : set()

After reduction : 
 pending  : [23, 36, 37, 5, 29, 30, 39, 43, 44, 45, 46, 51, 38, 31, 33, 26, 41, 6, 21, 20, 17, 14, 19, 16, 18, 15, 9]
 solution : [7, 8]


Solution : [7, 8] has cost 11.


Decide in level 8 among pending : [23, 36, 37, 5, 29, 30, 39, 43, 44, 45, 46, 51, 38, 31, 33, 26, 41, 6, 21, 20, 17, 14, 19, 16, 18, 15, 9]

Coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 1048576), (6, 262144), (7, -1), (8, -1), (9, 134217728), (10, -1), (11, -1), (12, -1), (13, -1), (14, 2097152), (15, 268435456), (16, 4194304), (17, 65536), (18, 16777216), (19, 8388608), (20, 131072), (21, 278528), (22, -1), (23, 134217728), (24, -1), (25, -1), (26, 1048576), (27, -1), (28, -1), (29, 1048576), (30, 16384), (31, 32768), (32, -1), (33, 4194304), (34, -1), (35, -1), (36, 67108864), (37, 268435456), (38, 134217728), (39, 16384), (40, -1), (41, 1048576), (42, -1), (43, 524288), (44, 524288), (45, 67108864), (46, 16777216), (47, -1), (48, -1), (49, -1), (50, -1), (51, 67108864), (52, -1)]

Decide 37 with phase True at level 8

After decision at level 8
 pending : [23, 36, 5, 29, 30, 39, 43, 44, 45, 46, 51, 38, 31, 33, 26, 41, 6, 21, 20, 17, 14, 19, 16, 18, 15, 9]
 solution : [7, 8, 37]


New level: 9
 pending : [23, 36, 5, 29, 30, 39, 43, 44, 45, 46, 51, 38, 31, 33, 26, 41, 6, 21, 20, 17, 14, 19, 16, 18, 15, 9]
 solution : [7, 8, 37]


Before reduction : 
 pending  : [23, 36, 5, 29, 30, 39, 43, 44, 45, 46, 51, 38, 31, 33, 26, 41, 6, 21, 20, 17, 14, 19, 16, 18, 15, 9]
 solution : [7, 8, 37]

Essensial at level 9 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 1048576), (6, 262144), (7, -1), (8, -1), (9, 134217728), (10, -1), (11, -1), (12, -1), (13, -1), (14, 2097152), (15, 268435456), (16, 4194304), (17, 65536), (18, 16777216), (19, 8388608), (20, 131072), (21, 278528), (22, -1), (23, 134217728), (24, -1), (25, -1), (26, 1048576), (27, -1), (28, -1), (29, 1048576), (30, 16384), (31, 32768), (32, -1), (33, 4194304), (34, -1), (35, -1), (36, 67108864), (37, 268435456), (38, 134217728), (39, 16384), (40, -1), (41, 1048576), (42, -1), (43, 524288), (44, 524288), (45, 67108864), (46, 16777216), (47, -1), (48, -1), (49, -1), (50, -1), (51, 67108864), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 1048576), (6, 262144), (7, -1), (8, -1), (9, 134217728), (10, -1), (11, -1), (12, -1), (13, -1), (14, 2097152), (15, 268435456), (16, 4194304), (17, 65536), (18, 16777216), (19, 8388608), (20, 131072), (21, 278528), (22, -1), (23, 134217728), (24, -1), (25, -1), (26, 1048576), (27, -1), (28, -1), (29, 1048576), (30, 16384), (31, 16384), (32, -1), (33, 2097152), (34, -1), (35, -1), (36, 33554432), (37, -1), (38, 134217728), (39, 16384), (40, -1), (41, 1048576), (42, -1), (43, 524288), (44, 524288), (45, 67108864), (46, 16777216), (47, -1), (48, -1), (49, -1), (50, -1), (51, 67108864), (52, -1)]

Covered at level 9 : set()

After reduction : 
 pending  : [23, 36, 5, 29, 30, 39, 43, 44, 45, 46, 51, 38, 31, 33, 26, 41, 6, 21, 20, 17, 14, 19, 16, 18, 15, 9]
 solution : [7, 8, 37]


Solution : [7, 8, 37] has cost 25.


Before backtrack at level 9
 pending : [23, 36, 5, 29, 30, 39, 43, 44, 45, 46, 51, 38, 31, 33, 26, 41, 6, 21, 20, 17, 14, 19, 16, 18, 15, 9]
 solution : [7, 8, 37]

After backtrack at level 9
 pending : [23, 36, 5, 29, 30, 39, 43, 44, 45, 46, 51, 38, 31, 33, 26, 41, 6, 21, 20, 17, 14, 19, 16, 18, 15, 9]
 solution : [7, 8, 37]


Invert decision for 37 at level 8


New level: 9
 pending : [23, 36, 5, 29, 30, 39, 43, 44, 45, 46, 51, 38, 31, 33, 26, 41, 6, 21, 20, 17, 14, 19, 16, 18, 15, 9]
 solution : [7, 8]


Before reduction : 
 pending  : [23, 36, 5, 29, 30, 39, 43, 44, 45, 46, 51, 38, 31, 33, 26, 41, 6, 21, 20, 17, 14, 19, 16, 18, 15, 9]
 solution : [7, 8]

Essensial at level 9 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 1048576), (6, 262144), (7, -1), (8, -1), (9, 134217728), (10, -1), (11, -1), (12, -1), (13, -1), (14, 2097152), (15, 268435456), (16, 4194304), (17, 65536), (18, 16777216), (19, 8388608), (20, 131072), (21, 278528), (22, -1), (23, 134217728), (24, -1), (25, -1), (26, 1048576), (27, -1), (28, -1), (29, 1048576), (30, 16384), (31, 16384), (32, -1), (33, 2097152), (34, -1), (35, -1), (36, 33554432), (37, -1), (38, 134217728), (39, 16384), (40, -1), (41, 1048576), (42, -1), (43, 524288), (44, 524288), (45, 67108864), (46, 16777216), (47, -1), (48, -1), (49, -1), (50, -1), (51, 67108864), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 1048576), (6, 262144), (7, -1), (8, -1), (9, 134217728), (10, -1), (11, -1), (12, -1), (13, -1), (14, 2097152), (15, 268435456), (16, 4194304), (17, 65536), (18, 16777216), (19, 8388608), (20, 131072), (21, 278528), (22, -1), (23, 134217728), (24, -1), (25, -1), (26, 1048576), (27, -1), (28, -1), (29, 1048576), (30, 16384), (31, 32768), (32, -1), (33, 4194304), (34, -1), (35, -1), (36, 67108864), (37, -1), (38, 134217728), (39, 16384), (40, -1), (41, 1048576), (42, -1), (43, 524288), (44, 524288), (45, 67108864), (46, 16777216), (47, -1), (48, -1), (49, -1), (50, -1), (51, 67108864), (52, -1)]

Covered at level 9 : set()

After reduction : 
 pending  : [23, 36, 5, 29, 30, 39, 43, 44, 45, 46, 51, 38, 31, 33, 26, 41, 6, 21, 20, 17, 14, 19, 16, 18, 15, 9]
 solution : [7, 8]


Solution : [7, 8] has cost 11.


Decide in level 9 among pending : [23, 36, 5, 29, 30, 39, 43, 44, 45, 46, 51, 38, 31, 33, 26, 41, 6, 21, 20, 17, 14, 19, 16, 18, 15, 9]

Coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 1048576), (6, 262144), (7, -1), (8, -1), (9, 134217728), (10, -1), (11, -1), (12, -1), (13, -1), (14, 2097152), (15, 268435456), (16, 4194304), (17, 65536), (18, 16777216), (19, 8388608), (20, 131072), (21, 278528), (22, -1), (23, 134217728), (24, -1), (25, -1), (26, 1048576), (27, -1), (28, -1), (29, 1048576), (30, 16384), (31, 32768), (32, -1), (33, 4194304), (34, -1), (35, -1), (36, 67108864), (37, -1), (38, 134217728), (39, 16384), (40, -1), (41, 1048576), (42, -1), (43, 524288), (44, 524288), (45, 67108864), (46, 16777216), (47, -1), (48, -1), (49, -1), (50, -1), (51, 67108864), (52, -1)]

Decide 15 with phase True at level 9

After decision at level 9
 pending : [23, 36, 5, 29, 30, 39, 43, 44, 45, 46, 51, 38, 31, 33, 26, 41, 6, 21, 20, 17, 14, 19, 16, 18, 9]
 solution : [7, 8, 15]


New level: 10
 pending : [23, 36, 5, 29, 30, 39, 43, 44, 45, 46, 51, 38, 31, 33, 26, 41, 6, 21, 20, 17, 14, 19, 16, 18, 9]
 solution : [7, 8, 15]


Before reduction : 
 pending  : [23, 36, 5, 29, 30, 39, 43, 44, 45, 46, 51, 38, 31, 33, 26, 41, 6, 21, 20, 17, 14, 19, 16, 18, 9]
 solution : [7, 8, 15]

Essensial at level 10 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 1048576), (6, 262144), (7, -1), (8, -1), (9, 134217728), (10, -1), (11, -1), (12, -1), (13, -1), (14, 2097152), (15, 268435456), (16, 4194304), (17, 65536), (18, 16777216), (19, 8388608), (20, 131072), (21, 278528), (22, -1), (23, 134217728), (24, -1), (25, -1), (26, 1048576), (27, -1), (28, -1), (29, 1048576), (30, 16384), (31, 32768), (32, -1), (33, 4194304), (34, -1), (35, -1), (36, 67108864), (37, -1), (38, 134217728), (39, 16384), (40, -1), (41, 1048576), (42, -1), (43, 524288), (44, 524288), (45, 67108864), (46, 16777216), (47, -1), (48, -1), (49, -1), (50, -1), (51, 67108864), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 262144), (6, 0), (7, -1), (8, -1), (9, 134217728), (10, -1), (11, -1), (12, -1), (13, -1), (14, 0), (15, -1), (16, 0), (17, 0), (18, 0), (19, 0), (20, 0), (21, 0), (22, -1), (23, 134217728), (24, -1), (25, -1), (26, 0), (27, -1), (28, -1), (29, 524288), (30, 4096), (31, 8192), (32, -1), (33, 4194304), (34, -1), (35, -1), (36, 2048), (37, -1), (38, 67108864), (39, 2048), (40, -1), (41, 0), (42, -1), (43, 262144), (44, 262144), (45, 33554432), (46, 4194304), (47, -1), (48, -1), (49, -1), (50, -1), (51, 67108864), (52, -1)]

Covered at level 10 : {6, 41, 14, 16, 17, 18, 19, 20, 21, 26}

After reduction : 
 pending  : [23, 36, 5, 29, 30, 39, 43, 44, 45, 46, 51, 38, 31, 33, 9]
 solution : [7, 8, 15]


Before reduction : 
 pending  : [23, 36, 5, 29, 30, 39, 43, 44, 45, 46, 51, 38, 31, 33, 9]
 solution : [7, 8, 15]

Essensial at level 10 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 262144), (6, 0), (7, -1), (8, -1), (9, 134217728), (10, -1), (11, -1), (12, -1), (13, -1), (14, 0), (15, -1), (16, 0), (17, 0), (18, 0), (19, 0), (20, 0), (21, 0), (22, -1), (23, 134217728), (24, -1), (25, -1), (26, 0), (27, -1), (28, -1), (29, 524288), (30, 4096), (31, 8192), (32, -1), (33, 4194304), (34, -1), (35, -1), (36, 2048), (37, -1), (38, 67108864), (39, 2048), (40, -1), (41, 0), (42, -1), (43, 262144), (44, 262144), (45, 33554432), (46, 4194304), (47, -1), (48, -1), (49, -1), (50, -1), (51, 67108864), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 262144), (6, -1), (7, -1), (8, -1), (9, 134217728), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, 134217728), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, 524288), (30, 4096), (31, 8192), (32, -1), (33, 4194304), (34, -1), (35, -1), (36, 2048), (37, -1), (38, 67108864), (39, 2048), (40, -1), (41, -1), (42, -1), (43, 262144), (44, 262144), (45, 33554432), (46, 4194304), (47, -1), (48, -1), (49, -1), (50, -1), (51, 67108864), (52, -1)]

Covered at level 10 : set()

After reduction : 
 pending  : [23, 36, 5, 29, 30, 39, 43, 44, 45, 46, 51, 38, 31, 33, 9]
 solution : [7, 8, 15]


Solution : [7, 8, 15] has cost 18.


Decide in level 10 among pending : [23, 36, 5, 29, 30, 39, 43, 44, 45, 46, 51, 38, 31, 33, 9]

Coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 262144), (6, -1), (7, -1), (8, -1), (9, 134217728), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, 134217728), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, 524288), (30, 4096), (31, 8192), (32, -1), (33, 4194304), (34, -1), (35, -1), (36, 2048), (37, -1), (38, 67108864), (39, 2048), (40, -1), (41, -1), (42, -1), (43, 262144), (44, 262144), (45, 33554432), (46, 4194304), (47, -1), (48, -1), (49, -1), (50, -1), (51, 67108864), (52, -1)]

Decide 23 with phase True at level 10

After decision at level 10
 pending : [36, 5, 29, 30, 39, 43, 44, 45, 46, 51, 38, 31, 33, 9]
 solution : [7, 8, 15, 23]


New level: 11
 pending : [36, 5, 29, 30, 39, 43, 44, 45, 46, 51, 38, 31, 33, 9]
 solution : [7, 8, 15, 23]


Before reduction : 
 pending  : [36, 5, 29, 30, 39, 43, 44, 45, 46, 51, 38, 31, 33, 9]
 solution : [7, 8, 15, 23]

Essensial at level 11 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 262144), (6, -1), (7, -1), (8, -1), (9, 134217728), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, 134217728), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, 524288), (30, 4096), (31, 8192), (32, -1), (33, 4194304), (34, -1), (35, -1), (36, 2048), (37, -1), (38, 67108864), (39, 2048), (40, -1), (41, -1), (42, -1), (43, 262144), (44, 262144), (45, 33554432), (46, 4194304), (47, -1), (48, -1), (49, -1), (50, -1), (51, 67108864), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 0), (6, -1), (7, -1), (8, -1), (9, 0), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, 0), (30, 0), (31, 0), (32, -1), (33, 0), (34, -1), (35, -1), (36, 0), (37, -1), (38, 0), (39, 0), (40, -1), (41, -1), (42, -1), (43, 0), (44, 0), (45, 0), (46, 0), (47, -1), (48, -1), (49, -1), (50, -1), (51, 0), (52, -1)]

Covered at level 11 : {33, 36, 5, 38, 39, 9, 43, 44, 45, 46, 51, 29, 30, 31}

After reduction : 
 pending  : []
 solution : [7, 8, 15, 23]


Before reduction : 
 pending  : []
 solution : [7, 8, 15, 23]

Essensial at level 11 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 0), (6, -1), (7, -1), (8, -1), (9, 0), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, 0), (30, 0), (31, 0), (32, -1), (33, 0), (34, -1), (35, -1), (36, 0), (37, -1), (38, 0), (39, 0), (40, -1), (41, -1), (42, -1), (43, 0), (44, 0), (45, 0), (46, 0), (47, -1), (48, -1), (49, -1), (50, -1), (51, 0), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 11 : set()

After reduction : 
 pending  : []
 solution : [7, 8, 15, 23]


Solution : [7, 8, 15, 23] has cost 25.


Before backtrack at level 11
 pending : []
 solution : [7, 8, 15, 23]

After backtrack at level 11
 pending : [36, 5, 29, 30, 39, 43, 44, 45, 46, 51, 38, 31, 33, 9]
 solution : [7, 8, 15, 23]


Invert decision for 23 at level 10


New level: 11
 pending : [36, 5, 29, 30, 39, 43, 44, 45, 46, 51, 38, 31, 33, 9]
 solution : [7, 8, 15]


Before reduction : 
 pending  : [36, 5, 29, 30, 39, 43, 44, 45, 46, 51, 38, 31, 33, 9]
 solution : [7, 8, 15]

Essensial at level 11 : {9}

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 0), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, 0), (30, 0), (31, 0), (32, -1), (33, 0), (34, -1), (35, -1), (36, 0), (37, -1), (38, 0), (39, 0), (40, -1), (41, -1), (42, -1), (43, 0), (44, 0), (45, 0), (46, 0), (47, -1), (48, -1), (49, -1), (50, -1), (51, 0), (52, -1)]

Covered at level 11 : {33, 36, 5, 38, 39, 43, 44, 45, 46, 51, 29, 30, 31}

After reduction : 
 pending  : []
 solution : [7, 8, 15, 9]


Before reduction : 
 pending  : []
 solution : [7, 8, 15, 9]

Essensial at level 11 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 0), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, 0), (30, 0), (31, 0), (32, -1), (33, 0), (34, -1), (35, -1), (36, 0), (37, -1), (38, 0), (39, 0), (40, -1), (41, -1), (42, -1), (43, 0), (44, 0), (45, 0), (46, 0), (47, -1), (48, -1), (49, -1), (50, -1), (51, 0), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 11 : set()

After reduction : 
 pending  : []
 solution : [7, 8, 15, 9]


Solution : [7, 8, 15, 9] has cost 22.


Before backtrack at level 11
 pending : []
 solution : [7, 8, 15, 9]

After backtrack at level 11
 pending : [9, 36, 5, 29, 30, 39, 43, 44, 45, 46, 51, 38, 31, 33]
 solution : [7, 8, 15]


Before backtrack at level 10
 pending : [9, 36, 5, 29, 30, 39, 43, 44, 45, 46, 51, 38, 31, 33]
 solution : [7, 8, 15]

After backtrack at level 10
 pending : [9, 36, 5, 29, 30, 39, 43, 44, 45, 46, 51, 38, 31, 33, 26, 41, 6, 21, 20, 17, 14, 19, 16, 18, 23]
 solution : [7, 8, 15]


Invert decision for 15 at level 9


New level: 10
 pending : [9, 36, 5, 29, 30, 39, 43, 44, 45, 46, 51, 38, 31, 33, 26, 41, 6, 21, 20, 17, 14, 19, 16, 18, 23]
 solution : [7, 8]


Before reduction : 
 pending  : [9, 36, 5, 29, 30, 39, 43, 44, 45, 46, 51, 38, 31, 33, 26, 41, 6, 21, 20, 17, 14, 19, 16, 18, 23]
 solution : [7, 8]

Essensial at level 10 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 1048576), (6, 262144), (7, -1), (8, -1), (9, 134217728), (10, -1), (11, -1), (12, -1), (13, -1), (14, 2097152), (15, -1), (16, 4194304), (17, 65536), (18, 16777216), (19, 8388608), (20, 131072), (21, 278528), (22, -1), (23, 134217728), (24, -1), (25, -1), (26, 1048576), (27, -1), (28, -1), (29, 1048576), (30, 16384), (31, 32768), (32, -1), (33, 4194304), (34, -1), (35, -1), (36, 67108864), (37, -1), (38, 134217728), (39, 16384), (40, -1), (41, 1048576), (42, -1), (43, 524288), (44, 524288), (45, 67108864), (46, 16777216), (47, -1), (48, -1), (49, -1), (50, -1), (51, 67108864), (52, -1)]

Covered at level 10 : set()

After reduction : 
 pending  : [9, 36, 5, 29, 30, 39, 43, 44, 45, 46, 51, 38, 31, 33, 26, 41, 6, 21, 20, 17, 14, 19, 16, 18, 23]
 solution : [7, 8]


Solution : [7, 8] has cost 11.


Decide in level 10 among pending : [9, 36, 5, 29, 30, 39, 43, 44, 45, 46, 51, 38, 31, 33, 26, 41, 6, 21, 20, 17, 14, 19, 16, 18, 23]

Coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 1048576), (6, 262144), (7, -1), (8, -1), (9, 134217728), (10, -1), (11, -1), (12, -1), (13, -1), (14, 2097152), (15, -1), (16, 4194304), (17, 65536), (18, 16777216), (19, 8388608), (20, 131072), (21, 278528), (22, -1), (23, 134217728), (24, -1), (25, -1), (26, 1048576), (27, -1), (28, -1), (29, 1048576), (30, 16384), (31, 32768), (32, -1), (33, 4194304), (34, -1), (35, -1), (36, 67108864), (37, -1), (38, 134217728), (39, 16384), (40, -1), (41, 1048576), (42, -1), (43, 524288), (44, 524288), (45, 67108864), (46, 16777216), (47, -1), (48, -1), (49, -1), (50, -1), (51, 67108864), (52, -1)]

Decide 9 with phase True at level 10

After decision at level 10
 pending : [36, 5, 29, 30, 39, 43, 44, 45, 46, 51, 38, 31, 33, 26, 41, 6, 21, 20, 17, 14, 19, 16, 18, 23]
 solution : [7, 8, 9]


New level: 11
 pending : [36, 5, 29, 30, 39, 43, 44, 45, 46, 51, 38, 31, 33, 26, 41, 6, 21, 20, 17, 14, 19, 16, 18, 23]
 solution : [7, 8, 9]


Before reduction : 
 pending  : [36, 5, 29, 30, 39, 43, 44, 45, 46, 51, 38, 31, 33, 26, 41, 6, 21, 20, 17, 14, 19, 16, 18, 23]
 solution : [7, 8, 9]

Essensial at level 11 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 1048576), (6, 262144), (7, -1), (8, -1), (9, 134217728), (10, -1), (11, -1), (12, -1), (13, -1), (14, 2097152), (15, -1), (16, 4194304), (17, 65536), (18, 16777216), (19, 8388608), (20, 131072), (21, 278528), (22, -1), (23, 134217728), (24, -1), (25, -1), (26, 1048576), (27, -1), (28, -1), (29, 1048576), (30, 16384), (31, 32768), (32, -1), (33, 4194304), (34, -1), (35, -1), (36, 67108864), (37, -1), (38, 134217728), (39, 16384), (40, -1), (41, 1048576), (42, -1), (43, 524288), (44, 524288), (45, 67108864), (46, 16777216), (47, -1), (48, -1), (49, -1), (50, -1), (51, 67108864), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 0), (6, 131072), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 2097152), (15, -1), (16, 4194304), (17, 65536), (18, 8388608), (19, 4194304), (20, 65536), (21, 135168), (22, -1), (23, 0), (24, -1), (25, -1), (26, 524288), (27, -1), (28, -1), (29, 0), (30, 0), (31, 0), (32, -1), (33, 0), (34, -1), (35, -1), (36, 32768), (37, -1), (38, 0), (39, 0), (40, -1), (41, 524288), (42, -1), (43, 0), (44, 0), (45, 0), (46, 0), (47, -1), (48, -1), (49, -1), (50, -1), (51, 0), (52, -1)]

Covered at level 11 : {33, 5, 38, 39, 43, 44, 45, 46, 51, 23, 29, 30, 31}

After reduction : 
 pending  : [36, 26, 41, 6, 21, 20, 17, 14, 19, 16, 18]
 solution : [7, 8, 9]


Before reduction : 
 pending  : [36, 26, 41, 6, 21, 20, 17, 14, 19, 16, 18]
 solution : [7, 8, 9]

Essensial at level 11 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 0), (6, 131072), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 2097152), (15, -1), (16, 4194304), (17, 65536), (18, 8388608), (19, 4194304), (20, 65536), (21, 135168), (22, -1), (23, 0), (24, -1), (25, -1), (26, 524288), (27, -1), (28, -1), (29, 0), (30, 0), (31, 0), (32, -1), (33, 0), (34, -1), (35, -1), (36, 32768), (37, -1), (38, 0), (39, 0), (40, -1), (41, 524288), (42, -1), (43, 0), (44, 0), (45, 0), (46, 0), (47, -1), (48, -1), (49, -1), (50, -1), (51, 0), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, 131072), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 2097152), (15, -1), (16, 4194304), (17, 65536), (18, 8388608), (19, 4194304), (20, 65536), (21, 135168), (22, -1), (23, -1), (24, -1), (25, -1), (26, 524288), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, 32768), (37, -1), (38, -1), (39, -1), (40, -1), (41, 524288), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 11 : set()

After reduction : 
 pending  : [36, 26, 41, 6, 21, 20, 17, 14, 19, 16, 18]
 solution : [7, 8, 9]


Solution : [7, 8, 9] has cost 15.


Decide in level 11 among pending : [36, 26, 41, 6, 21, 20, 17, 14, 19, 16, 18]

Coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, 131072), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 2097152), (15, -1), (16, 4194304), (17, 65536), (18, 8388608), (19, 4194304), (20, 65536), (21, 135168), (22, -1), (23, -1), (24, -1), (25, -1), (26, 524288), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, 32768), (37, -1), (38, -1), (39, -1), (40, -1), (41, 524288), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Decide 18 with phase True at level 11

After decision at level 11
 pending : [36, 26, 41, 6, 21, 20, 17, 14, 19, 16]
 solution : [7, 8, 9, 18]


New level: 12
 pending : [36, 26, 41, 6, 21, 20, 17, 14, 19, 16]
 solution : [7, 8, 9, 18]


Before reduction : 
 pending  : [36, 26, 41, 6, 21, 20, 17, 14, 19, 16]
 solution : [7, 8, 9, 18]

Essensial at level 12 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, 131072), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 2097152), (15, -1), (16, 4194304), (17, 65536), (18, 8388608), (19, 4194304), (20, 65536), (21, 135168), (22, -1), (23, -1), (24, -1), (25, -1), (26, 524288), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, 32768), (37, -1), (38, -1), (39, -1), (40, -1), (41, 524288), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, 0), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 16384), (15, -1), (16, 65536), (17, 16384), (18, -1), (19, 0), (20, 0), (21, 0), (22, -1), (23, -1), (24, -1), (25, -1), (26, 2048), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, 1024), (37, -1), (38, -1), (39, -1), (40, -1), (41, 2048), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 12 : {19, 20, 21, 6}

After reduction : 
 pending  : [36, 26, 41, 17, 14, 16]
 solution : [7, 8, 9, 18]


Before reduction : 
 pending  : [36, 26, 41, 17, 14, 16]
 solution : [7, 8, 9, 18]

Essensial at level 12 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, 0), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 16384), (15, -1), (16, 65536), (17, 16384), (18, -1), (19, 0), (20, 0), (21, 0), (22, -1), (23, -1), (24, -1), (25, -1), (26, 2048), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, 1024), (37, -1), (38, -1), (39, -1), (40, -1), (41, 2048), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 16384), (15, -1), (16, 65536), (17, 16384), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, 2048), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, 1024), (37, -1), (38, -1), (39, -1), (40, -1), (41, 2048), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 12 : set()

After reduction : 
 pending  : [36, 26, 41, 17, 14, 16]
 solution : [7, 8, 9, 18]


Solution : [7, 8, 9, 18] has cost 24.


Before backtrack at level 12
 pending : [36, 26, 41, 17, 14, 16]
 solution : [7, 8, 9, 18]

After backtrack at level 12
 pending : [36, 26, 41, 17, 14, 16, 6, 21, 20, 19]
 solution : [7, 8, 9, 18]


Invert decision for 18 at level 11


New level: 12
 pending : [36, 26, 41, 17, 14, 16, 6, 21, 20, 19]
 solution : [7, 8, 9]


Before reduction : 
 pending  : [36, 26, 41, 17, 14, 16, 6, 21, 20, 19]
 solution : [7, 8, 9]

Essensial at level 12 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 16384), (15, -1), (16, 65536), (17, 16384), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, 2048), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, 1024), (37, -1), (38, -1), (39, -1), (40, -1), (41, 2048), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, 131072), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 2097152), (15, -1), (16, 4194304), (17, 65536), (18, -1), (19, 4194304), (20, 65536), (21, 135168), (22, -1), (23, -1), (24, -1), (25, -1), (26, 524288), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, 32768), (37, -1), (38, -1), (39, -1), (40, -1), (41, 524288), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 12 : set()

After reduction : 
 pending  : [36, 26, 41, 17, 14, 16, 6, 21, 20, 19]
 solution : [7, 8, 9]


Solution : [7, 8, 9] has cost 15.


Decide in level 12 among pending : [36, 26, 41, 17, 14, 16, 6, 21, 20, 19]

Coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, 131072), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 2097152), (15, -1), (16, 4194304), (17, 65536), (18, -1), (19, 4194304), (20, 65536), (21, 135168), (22, -1), (23, -1), (24, -1), (25, -1), (26, 524288), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, 32768), (37, -1), (38, -1), (39, -1), (40, -1), (41, 524288), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Decide 16 with phase True at level 12

After decision at level 12
 pending : [36, 26, 41, 17, 14, 6, 21, 20, 19]
 solution : [7, 8, 9, 16]


New level: 13
 pending : [36, 26, 41, 17, 14, 6, 21, 20, 19]
 solution : [7, 8, 9, 16]


Before reduction : 
 pending  : [36, 26, 41, 17, 14, 6, 21, 20, 19]
 solution : [7, 8, 9, 16]

Essensial at level 13 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, 131072), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 2097152), (15, -1), (16, 4194304), (17, 65536), (18, -1), (19, 4194304), (20, 65536), (21, 135168), (22, -1), (23, -1), (24, -1), (25, -1), (26, 524288), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, 32768), (37, -1), (38, -1), (39, -1), (40, -1), (41, 524288), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, 65536), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 0), (15, -1), (16, -1), (17, 0), (18, -1), (19, 1048576), (20, 0), (21, 66048), (22, -1), (23, -1), (24, -1), (25, -1), (26, 131072), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, 512), (37, -1), (38, -1), (39, -1), (40, -1), (41, 131072), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 13 : {17, 20, 14}

After reduction : 
 pending  : [36, 26, 41, 6, 21, 19]
 solution : [7, 8, 9, 16]


Before reduction : 
 pending  : [36, 26, 41, 6, 21, 19]
 solution : [7, 8, 9, 16]

Essensial at level 13 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, 65536), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 0), (15, -1), (16, -1), (17, 0), (18, -1), (19, 1048576), (20, 0), (21, 66048), (22, -1), (23, -1), (24, -1), (25, -1), (26, 131072), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, 512), (37, -1), (38, -1), (39, -1), (40, -1), (41, 131072), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, 65536), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, 1048576), (20, -1), (21, 66048), (22, -1), (23, -1), (24, -1), (25, -1), (26, 131072), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, 512), (37, -1), (38, -1), (39, -1), (40, -1), (41, 131072), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 13 : set()

After reduction : 
 pending  : [36, 26, 41, 6, 21, 19]
 solution : [7, 8, 9, 16]


Solution : [7, 8, 9, 16] has cost 22.


Before backtrack at level 13
 pending : [36, 26, 41, 6, 21, 19]
 solution : [7, 8, 9, 16]

After backtrack at level 13
 pending : [36, 26, 41, 6, 21, 19, 17, 14, 20]
 solution : [7, 8, 9, 16]


Invert decision for 16 at level 12


New level: 13
 pending : [36, 26, 41, 6, 21, 19, 17, 14, 20]
 solution : [7, 8, 9]


Before reduction : 
 pending  : [36, 26, 41, 6, 21, 19, 17, 14, 20]
 solution : [7, 8, 9]

Essensial at level 13 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, 65536), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, 1048576), (20, -1), (21, 66048), (22, -1), (23, -1), (24, -1), (25, -1), (26, 131072), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, 512), (37, -1), (38, -1), (39, -1), (40, -1), (41, 131072), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, 131072), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 2097152), (15, -1), (16, -1), (17, 65536), (18, -1), (19, 4194304), (20, 65536), (21, 135168), (22, -1), (23, -1), (24, -1), (25, -1), (26, 524288), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, 32768), (37, -1), (38, -1), (39, -1), (40, -1), (41, 524288), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 13 : set()

After reduction : 
 pending  : [36, 26, 41, 6, 21, 19, 17, 14, 20]
 solution : [7, 8, 9]


Solution : [7, 8, 9] has cost 15.


Decide in level 13 among pending : [36, 26, 41, 6, 21, 19, 17, 14, 20]

Coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, 131072), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 2097152), (15, -1), (16, -1), (17, 65536), (18, -1), (19, 4194304), (20, 65536), (21, 135168), (22, -1), (23, -1), (24, -1), (25, -1), (26, 524288), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, 32768), (37, -1), (38, -1), (39, -1), (40, -1), (41, 524288), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Decide 19 with phase True at level 13

After decision at level 13
 pending : [36, 26, 41, 6, 21, 17, 14, 20]
 solution : [7, 8, 9, 19]


New level: 14
 pending : [36, 26, 41, 6, 21, 17, 14, 20]
 solution : [7, 8, 9, 19]


Before reduction : 
 pending  : [36, 26, 41, 6, 21, 17, 14, 20]
 solution : [7, 8, 9, 19]

Essensial at level 14 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, 131072), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 2097152), (15, -1), (16, -1), (17, 65536), (18, -1), (19, 4194304), (20, 65536), (21, 135168), (22, -1), (23, -1), (24, -1), (25, -1), (26, 524288), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, 32768), (37, -1), (38, -1), (39, -1), (40, -1), (41, 524288), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, 0), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 16384), (15, -1), (16, -1), (17, 16384), (18, -1), (19, -1), (20, 0), (21, 0), (22, -1), (23, -1), (24, -1), (25, -1), (26, 2048), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, 1024), (37, -1), (38, -1), (39, -1), (40, -1), (41, 2048), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 14 : {20, 21, 6}

After reduction : 
 pending  : [36, 26, 41, 17, 14]
 solution : [7, 8, 9, 19]


Before reduction : 
 pending  : [36, 26, 41, 17, 14]
 solution : [7, 8, 9, 19]

Essensial at level 14 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, 0), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 16384), (15, -1), (16, -1), (17, 16384), (18, -1), (19, -1), (20, 0), (21, 0), (22, -1), (23, -1), (24, -1), (25, -1), (26, 2048), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, 1024), (37, -1), (38, -1), (39, -1), (40, -1), (41, 2048), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 16384), (15, -1), (16, -1), (17, 16384), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, 2048), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, 1024), (37, -1), (38, -1), (39, -1), (40, -1), (41, 2048), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 14 : set()

After reduction : 
 pending  : [36, 26, 41, 17, 14]
 solution : [7, 8, 9, 19]


Solution : [7, 8, 9, 19] has cost 24.


Before backtrack at level 14
 pending : [36, 26, 41, 17, 14]
 solution : [7, 8, 9, 19]

After backtrack at level 14
 pending : [36, 26, 41, 17, 14, 6, 21, 20]
 solution : [7, 8, 9, 19]


Invert decision for 19 at level 13


New level: 14
 pending : [36, 26, 41, 17, 14, 6, 21, 20]
 solution : [7, 8, 9]


Before reduction : 
 pending  : [36, 26, 41, 17, 14, 6, 21, 20]
 solution : [7, 8, 9]

Essensial at level 14 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 16384), (15, -1), (16, -1), (17, 16384), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, 2048), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, 1024), (37, -1), (38, -1), (39, -1), (40, -1), (41, 2048), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, 131072), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 2097152), (15, -1), (16, -1), (17, 65536), (18, -1), (19, -1), (20, 65536), (21, 135168), (22, -1), (23, -1), (24, -1), (25, -1), (26, 524288), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, 32768), (37, -1), (38, -1), (39, -1), (40, -1), (41, 524288), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 14 : set()

After reduction : 
 pending  : [36, 26, 41, 17, 14, 6, 21, 20]
 solution : [7, 8, 9]


Solution : [7, 8, 9] has cost 15.


Decide in level 14 among pending : [36, 26, 41, 17, 14, 6, 21, 20]

Coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, 131072), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 2097152), (15, -1), (16, -1), (17, 65536), (18, -1), (19, -1), (20, 65536), (21, 135168), (22, -1), (23, -1), (24, -1), (25, -1), (26, 524288), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, 32768), (37, -1), (38, -1), (39, -1), (40, -1), (41, 524288), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Decide 14 with phase True at level 14

After decision at level 14
 pending : [36, 26, 41, 17, 6, 21, 20]
 solution : [7, 8, 9, 14]


New level: 15
 pending : [36, 26, 41, 17, 6, 21, 20]
 solution : [7, 8, 9, 14]


Before reduction : 
 pending  : [36, 26, 41, 17, 6, 21, 20]
 solution : [7, 8, 9, 14]

Essensial at level 15 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, 131072), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 2097152), (15, -1), (16, -1), (17, 65536), (18, -1), (19, -1), (20, 65536), (21, 135168), (22, -1), (23, -1), (24, -1), (25, -1), (26, 524288), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, 32768), (37, -1), (38, -1), (39, -1), (40, -1), (41, 524288), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, 65536), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, 0), (18, -1), (19, -1), (20, 0), (21, 66048), (22, -1), (23, -1), (24, -1), (25, -1), (26, 131072), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, 512), (37, -1), (38, -1), (39, -1), (40, -1), (41, 131072), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 15 : {17, 20}

After reduction : 
 pending  : [36, 26, 41, 6, 21]
 solution : [7, 8, 9, 14]


Before reduction : 
 pending  : [36, 26, 41, 6, 21]
 solution : [7, 8, 9, 14]

Essensial at level 15 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, 65536), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, 0), (18, -1), (19, -1), (20, 0), (21, 66048), (22, -1), (23, -1), (24, -1), (25, -1), (26, 131072), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, 512), (37, -1), (38, -1), (39, -1), (40, -1), (41, 131072), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, 65536), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, 66048), (22, -1), (23, -1), (24, -1), (25, -1), (26, 131072), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, 512), (37, -1), (38, -1), (39, -1), (40, -1), (41, 131072), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 15 : set()

After reduction : 
 pending  : [36, 26, 41, 6, 21]
 solution : [7, 8, 9, 14]


Solution : [7, 8, 9, 14] has cost 22.


Before backtrack at level 15
 pending : [36, 26, 41, 6, 21]
 solution : [7, 8, 9, 14]

After backtrack at level 15
 pending : [36, 26, 41, 6, 21, 17, 20]
 solution : [7, 8, 9, 14]


Invert decision for 14 at level 14


New level: 15
 pending : [36, 26, 41, 6, 21, 17, 20]
 solution : [7, 8, 9]


Before reduction : 
 pending  : [36, 26, 41, 6, 21, 17, 20]
 solution : [7, 8, 9]

Essensial at level 15 : {17}

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, 65536), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, 66048), (22, -1), (23, -1), (24, -1), (25, -1), (26, 131072), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, 512), (37, -1), (38, -1), (39, -1), (40, -1), (41, 131072), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, 131072), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, 32768), (21, 135168), (22, -1), (23, -1), (24, -1), (25, -1), (26, 524288), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, 32768), (37, -1), (38, -1), (39, -1), (40, -1), (41, 524288), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 15 : set()

After reduction : 
 pending  : [36, 26, 41, 6, 21, 20]
 solution : [7, 8, 9, 17]


Before reduction : 
 pending  : [36, 26, 41, 6, 21, 20]
 solution : [7, 8, 9, 17]

Essensial at level 15 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, 131072), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, 32768), (21, 135168), (22, -1), (23, -1), (24, -1), (25, -1), (26, 524288), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, 32768), (37, -1), (38, -1), (39, -1), (40, -1), (41, 524288), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, 131072), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, 32768), (21, 135168), (22, -1), (23, -1), (24, -1), (25, -1), (26, 524288), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, 32768), (37, -1), (38, -1), (39, -1), (40, -1), (41, 524288), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 15 : set()

After reduction : 
 pending  : [36, 26, 41, 6, 21, 20]
 solution : [7, 8, 9, 17]


Solution : [7, 8, 9, 17] has cost 22.


Before backtrack at level 15
 pending : [36, 26, 41, 6, 21, 20]
 solution : [7, 8, 9, 17]

After backtrack at level 15
 pending : [36, 26, 41, 6, 21, 20, 17]
 solution : [7, 8, 9]


Before backtrack at level 14
 pending : [36, 26, 41, 6, 21, 20, 17]
 solution : [7, 8, 9]

After backtrack at level 14
 pending : [36, 26, 41, 6, 21, 20, 17, 14]
 solution : [7, 8, 9]


Before backtrack at level 13
 pending : [36, 26, 41, 6, 21, 20, 17, 14]
 solution : [7, 8, 9]

After backtrack at level 13
 pending : [36, 26, 41, 6, 21, 20, 17, 14, 19]
 solution : [7, 8, 9]


Before backtrack at level 12
 pending : [36, 26, 41, 6, 21, 20, 17, 14, 19]
 solution : [7, 8, 9]

After backtrack at level 12
 pending : [36, 26, 41, 6, 21, 20, 17, 14, 19, 16]
 solution : [7, 8, 9]


Before backtrack at level 11
 pending : [36, 26, 41, 6, 21, 20, 17, 14, 19, 16]
 solution : [7, 8, 9]

After backtrack at level 11
 pending : [36, 26, 41, 6, 21, 20, 17, 14, 19, 16, 5, 29, 30, 39, 43, 44, 45, 46, 51, 38, 31, 33, 23, 18]
 solution : [7, 8, 9]


Invert decision for 9 at level 10


New level: 11
 pending : [36, 26, 41, 6, 21, 20, 17, 14, 19, 16, 5, 29, 30, 39, 43, 44, 45, 46, 51, 38, 31, 33, 23, 18]
 solution : [7, 8]


Before reduction : 
 pending  : [36, 26, 41, 6, 21, 20, 17, 14, 19, 16, 5, 29, 30, 39, 43, 44, 45, 46, 51, 38, 31, 33, 23, 18]
 solution : [7, 8]

Essensial at level 11 : {23}

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, 131072), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, 32768), (21, 135168), (22, -1), (23, -1), (24, -1), (25, -1), (26, 524288), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, 32768), (37, -1), (38, -1), (39, -1), (40, -1), (41, 524288), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 0), (6, 131072), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 2097152), (15, -1), (16, 4194304), (17, 65536), (18, 8388608), (19, 4194304), (20, 65536), (21, 135168), (22, -1), (23, -1), (24, -1), (25, -1), (26, 524288), (27, -1), (28, -1), (29, 0), (30, 0), (31, 0), (32, -1), (33, 0), (34, -1), (35, -1), (36, 262144), (37, -1), (38, 0), (39, 0), (40, -1), (41, 524288), (42, -1), (43, 0), (44, 0), (45, 0), (46, 0), (47, -1), (48, -1), (49, -1), (50, -1), (51, 0), (52, -1)]

Covered at level 11 : {33, 5, 38, 39, 43, 44, 45, 46, 51, 29, 30, 31}

After reduction : 
 pending  : [36, 26, 41, 6, 21, 20, 17, 14, 19, 16, 18]
 solution : [7, 8, 23]


Before reduction : 
 pending  : [36, 26, 41, 6, 21, 20, 17, 14, 19, 16, 18]
 solution : [7, 8, 23]

Essensial at level 11 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 0), (6, 131072), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 2097152), (15, -1), (16, 4194304), (17, 65536), (18, 8388608), (19, 4194304), (20, 65536), (21, 135168), (22, -1), (23, -1), (24, -1), (25, -1), (26, 524288), (27, -1), (28, -1), (29, 0), (30, 0), (31, 0), (32, -1), (33, 0), (34, -1), (35, -1), (36, 262144), (37, -1), (38, 0), (39, 0), (40, -1), (41, 524288), (42, -1), (43, 0), (44, 0), (45, 0), (46, 0), (47, -1), (48, -1), (49, -1), (50, -1), (51, 0), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, 131072), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 2097152), (15, -1), (16, 4194304), (17, 65536), (18, 8388608), (19, 4194304), (20, 65536), (21, 135168), (22, -1), (23, -1), (24, -1), (25, -1), (26, 524288), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, 262144), (37, -1), (38, -1), (39, -1), (40, -1), (41, 524288), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 11 : set()

After reduction : 
 pending  : [36, 26, 41, 6, 21, 20, 17, 14, 19, 16, 18]
 solution : [7, 8, 23]


Solution : [7, 8, 23] has cost 18.


Decide in level 11 among pending : [36, 26, 41, 6, 21, 20, 17, 14, 19, 16, 18]

Coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, 131072), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 2097152), (15, -1), (16, 4194304), (17, 65536), (18, 8388608), (19, 4194304), (20, 65536), (21, 135168), (22, -1), (23, -1), (24, -1), (25, -1), (26, 524288), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, 262144), (37, -1), (38, -1), (39, -1), (40, -1), (41, 524288), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Decide 18 with phase True at level 11

After decision at level 11
 pending : [36, 26, 41, 6, 21, 20, 17, 14, 19, 16]
 solution : [7, 8, 23, 18]


New level: 12
 pending : [36, 26, 41, 6, 21, 20, 17, 14, 19, 16]
 solution : [7, 8, 23, 18]


Before reduction : 
 pending  : [36, 26, 41, 6, 21, 20, 17, 14, 19, 16]
 solution : [7, 8, 23, 18]

Essensial at level 12 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, 131072), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 2097152), (15, -1), (16, 4194304), (17, 65536), (18, 8388608), (19, 4194304), (20, 65536), (21, 135168), (22, -1), (23, -1), (24, -1), (25, -1), (26, 524288), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, 262144), (37, -1), (38, -1), (39, -1), (40, -1), (41, 524288), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, 0), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 16384), (15, -1), (16, 65536), (17, 16384), (18, -1), (19, 0), (20, 0), (21, 0), (22, -1), (23, -1), (24, -1), (25, -1), (26, 2048), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, 1024), (37, -1), (38, -1), (39, -1), (40, -1), (41, 2048), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 12 : {19, 20, 21, 6}

After reduction : 
 pending  : [36, 26, 41, 17, 14, 16]
 solution : [7, 8, 23, 18]


Before reduction : 
 pending  : [36, 26, 41, 17, 14, 16]
 solution : [7, 8, 23, 18]

Essensial at level 12 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, 0), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 16384), (15, -1), (16, 65536), (17, 16384), (18, -1), (19, 0), (20, 0), (21, 0), (22, -1), (23, -1), (24, -1), (25, -1), (26, 2048), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, 1024), (37, -1), (38, -1), (39, -1), (40, -1), (41, 2048), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 16384), (15, -1), (16, 65536), (17, 16384), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, 2048), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, 1024), (37, -1), (38, -1), (39, -1), (40, -1), (41, 2048), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 12 : set()

After reduction : 
 pending  : [36, 26, 41, 17, 14, 16]
 solution : [7, 8, 23, 18]


Solution : [7, 8, 23, 18] has cost 27.


Before backtrack at level 12
 pending : [36, 26, 41, 17, 14, 16]
 solution : [7, 8, 23, 18]

After backtrack at level 12
 pending : [36, 26, 41, 17, 14, 16, 6, 21, 20, 19]
 solution : [7, 8, 23, 18]


Invert decision for 18 at level 11


New level: 12
 pending : [36, 26, 41, 17, 14, 16, 6, 21, 20, 19]
 solution : [7, 8, 23]


Before reduction : 
 pending  : [36, 26, 41, 17, 14, 16, 6, 21, 20, 19]
 solution : [7, 8, 23]

Essensial at level 12 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 16384), (15, -1), (16, 65536), (17, 16384), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, 2048), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, 1024), (37, -1), (38, -1), (39, -1), (40, -1), (41, 2048), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, 131072), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 2097152), (15, -1), (16, 4194304), (17, 65536), (18, -1), (19, 4194304), (20, 65536), (21, 135168), (22, -1), (23, -1), (24, -1), (25, -1), (26, 524288), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, 262144), (37, -1), (38, -1), (39, -1), (40, -1), (41, 524288), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 12 : set()

After reduction : 
 pending  : [36, 26, 41, 17, 14, 16, 6, 21, 20, 19]
 solution : [7, 8, 23]


Solution : [7, 8, 23] has cost 18.


Decide in level 12 among pending : [36, 26, 41, 17, 14, 16, 6, 21, 20, 19]

Coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, 131072), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 2097152), (15, -1), (16, 4194304), (17, 65536), (18, -1), (19, 4194304), (20, 65536), (21, 135168), (22, -1), (23, -1), (24, -1), (25, -1), (26, 524288), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, 262144), (37, -1), (38, -1), (39, -1), (40, -1), (41, 524288), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Decide 16 with phase True at level 12

After decision at level 12
 pending : [36, 26, 41, 17, 14, 6, 21, 20, 19]
 solution : [7, 8, 23, 16]


New level: 13
 pending : [36, 26, 41, 17, 14, 6, 21, 20, 19]
 solution : [7, 8, 23, 16]


Before reduction : 
 pending  : [36, 26, 41, 17, 14, 6, 21, 20, 19]
 solution : [7, 8, 23, 16]

Essensial at level 13 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, 131072), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 2097152), (15, -1), (16, 4194304), (17, 65536), (18, -1), (19, 4194304), (20, 65536), (21, 135168), (22, -1), (23, -1), (24, -1), (25, -1), (26, 524288), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, 262144), (37, -1), (38, -1), (39, -1), (40, -1), (41, 524288), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, 65536), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 0), (15, -1), (16, -1), (17, 0), (18, -1), (19, 1048576), (20, 0), (21, 66048), (22, -1), (23, -1), (24, -1), (25, -1), (26, 131072), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, 512), (37, -1), (38, -1), (39, -1), (40, -1), (41, 131072), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 13 : {17, 20, 14}

After reduction : 
 pending  : [36, 26, 41, 6, 21, 19]
 solution : [7, 8, 23, 16]


Before reduction : 
 pending  : [36, 26, 41, 6, 21, 19]
 solution : [7, 8, 23, 16]

Essensial at level 13 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, 65536), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 0), (15, -1), (16, -1), (17, 0), (18, -1), (19, 1048576), (20, 0), (21, 66048), (22, -1), (23, -1), (24, -1), (25, -1), (26, 131072), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, 512), (37, -1), (38, -1), (39, -1), (40, -1), (41, 131072), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, 65536), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, 1048576), (20, -1), (21, 66048), (22, -1), (23, -1), (24, -1), (25, -1), (26, 131072), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, 512), (37, -1), (38, -1), (39, -1), (40, -1), (41, 131072), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 13 : set()

After reduction : 
 pending  : [36, 26, 41, 6, 21, 19]
 solution : [7, 8, 23, 16]


Solution : [7, 8, 23, 16] has cost 25.


Before backtrack at level 13
 pending : [36, 26, 41, 6, 21, 19]
 solution : [7, 8, 23, 16]

After backtrack at level 13
 pending : [36, 26, 41, 6, 21, 19, 17, 14, 20]
 solution : [7, 8, 23, 16]


Invert decision for 16 at level 12


New level: 13
 pending : [36, 26, 41, 6, 21, 19, 17, 14, 20]
 solution : [7, 8, 23]


Before reduction : 
 pending  : [36, 26, 41, 6, 21, 19, 17, 14, 20]
 solution : [7, 8, 23]

Essensial at level 13 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, 65536), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, 1048576), (20, -1), (21, 66048), (22, -1), (23, -1), (24, -1), (25, -1), (26, 131072), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, 512), (37, -1), (38, -1), (39, -1), (40, -1), (41, 131072), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, 131072), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 2097152), (15, -1), (16, -1), (17, 65536), (18, -1), (19, 4194304), (20, 65536), (21, 135168), (22, -1), (23, -1), (24, -1), (25, -1), (26, 524288), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, 262144), (37, -1), (38, -1), (39, -1), (40, -1), (41, 524288), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 13 : set()

After reduction : 
 pending  : [36, 26, 41, 6, 21, 19, 17, 14, 20]
 solution : [7, 8, 23]


Solution : [7, 8, 23] has cost 18.


Decide in level 13 among pending : [36, 26, 41, 6, 21, 19, 17, 14, 20]

Coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, 131072), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 2097152), (15, -1), (16, -1), (17, 65536), (18, -1), (19, 4194304), (20, 65536), (21, 135168), (22, -1), (23, -1), (24, -1), (25, -1), (26, 524288), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, 262144), (37, -1), (38, -1), (39, -1), (40, -1), (41, 524288), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Decide 19 with phase True at level 13

After decision at level 13
 pending : [36, 26, 41, 6, 21, 17, 14, 20]
 solution : [7, 8, 23, 19]


New level: 14
 pending : [36, 26, 41, 6, 21, 17, 14, 20]
 solution : [7, 8, 23, 19]


Before reduction : 
 pending  : [36, 26, 41, 6, 21, 17, 14, 20]
 solution : [7, 8, 23, 19]

Essensial at level 14 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, 131072), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 2097152), (15, -1), (16, -1), (17, 65536), (18, -1), (19, 4194304), (20, 65536), (21, 135168), (22, -1), (23, -1), (24, -1), (25, -1), (26, 524288), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, 262144), (37, -1), (38, -1), (39, -1), (40, -1), (41, 524288), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, 0), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 16384), (15, -1), (16, -1), (17, 16384), (18, -1), (19, -1), (20, 0), (21, 0), (22, -1), (23, -1), (24, -1), (25, -1), (26, 2048), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, 1024), (37, -1), (38, -1), (39, -1), (40, -1), (41, 2048), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 14 : {20, 21, 6}

After reduction : 
 pending  : [36, 26, 41, 17, 14]
 solution : [7, 8, 23, 19]


Before reduction : 
 pending  : [36, 26, 41, 17, 14]
 solution : [7, 8, 23, 19]

Essensial at level 14 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, 0), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 16384), (15, -1), (16, -1), (17, 16384), (18, -1), (19, -1), (20, 0), (21, 0), (22, -1), (23, -1), (24, -1), (25, -1), (26, 2048), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, 1024), (37, -1), (38, -1), (39, -1), (40, -1), (41, 2048), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 16384), (15, -1), (16, -1), (17, 16384), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, 2048), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, 1024), (37, -1), (38, -1), (39, -1), (40, -1), (41, 2048), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 14 : set()

After reduction : 
 pending  : [36, 26, 41, 17, 14]
 solution : [7, 8, 23, 19]


Solution : [7, 8, 23, 19] has cost 27.


Before backtrack at level 14
 pending : [36, 26, 41, 17, 14]
 solution : [7, 8, 23, 19]

After backtrack at level 14
 pending : [36, 26, 41, 17, 14, 6, 21, 20]
 solution : [7, 8, 23, 19]


Invert decision for 19 at level 13


New level: 14
 pending : [36, 26, 41, 17, 14, 6, 21, 20]
 solution : [7, 8, 23]


Before reduction : 
 pending  : [36, 26, 41, 17, 14, 6, 21, 20]
 solution : [7, 8, 23]

Essensial at level 14 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 16384), (15, -1), (16, -1), (17, 16384), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, 2048), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, 1024), (37, -1), (38, -1), (39, -1), (40, -1), (41, 2048), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, 131072), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 2097152), (15, -1), (16, -1), (17, 65536), (18, -1), (19, -1), (20, 65536), (21, 135168), (22, -1), (23, -1), (24, -1), (25, -1), (26, 524288), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, 262144), (37, -1), (38, -1), (39, -1), (40, -1), (41, 524288), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 14 : set()

After reduction : 
 pending  : [36, 26, 41, 17, 14, 6, 21, 20]
 solution : [7, 8, 23]


Solution : [7, 8, 23] has cost 18.


Decide in level 14 among pending : [36, 26, 41, 17, 14, 6, 21, 20]

Coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, 131072), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 2097152), (15, -1), (16, -1), (17, 65536), (18, -1), (19, -1), (20, 65536), (21, 135168), (22, -1), (23, -1), (24, -1), (25, -1), (26, 524288), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, 262144), (37, -1), (38, -1), (39, -1), (40, -1), (41, 524288), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Decide 14 with phase True at level 14

After decision at level 14
 pending : [36, 26, 41, 17, 6, 21, 20]
 solution : [7, 8, 23, 14]


New level: 15
 pending : [36, 26, 41, 17, 6, 21, 20]
 solution : [7, 8, 23, 14]


Before reduction : 
 pending  : [36, 26, 41, 17, 6, 21, 20]
 solution : [7, 8, 23, 14]

Essensial at level 15 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, 131072), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 2097152), (15, -1), (16, -1), (17, 65536), (18, -1), (19, -1), (20, 65536), (21, 135168), (22, -1), (23, -1), (24, -1), (25, -1), (26, 524288), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, 262144), (37, -1), (38, -1), (39, -1), (40, -1), (41, 524288), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, 65536), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, 0), (18, -1), (19, -1), (20, 0), (21, 66048), (22, -1), (23, -1), (24, -1), (25, -1), (26, 131072), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, 512), (37, -1), (38, -1), (39, -1), (40, -1), (41, 131072), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 15 : {17, 20}

After reduction : 
 pending  : [36, 26, 41, 6, 21]
 solution : [7, 8, 23, 14]


Before reduction : 
 pending  : [36, 26, 41, 6, 21]
 solution : [7, 8, 23, 14]

Essensial at level 15 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, 65536), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, 0), (18, -1), (19, -1), (20, 0), (21, 66048), (22, -1), (23, -1), (24, -1), (25, -1), (26, 131072), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, 512), (37, -1), (38, -1), (39, -1), (40, -1), (41, 131072), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, 65536), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, 66048), (22, -1), (23, -1), (24, -1), (25, -1), (26, 131072), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, 512), (37, -1), (38, -1), (39, -1), (40, -1), (41, 131072), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 15 : set()

After reduction : 
 pending  : [36, 26, 41, 6, 21]
 solution : [7, 8, 23, 14]


Solution : [7, 8, 23, 14] has cost 25.


Before backtrack at level 15
 pending : [36, 26, 41, 6, 21]
 solution : [7, 8, 23, 14]

After backtrack at level 15
 pending : [36, 26, 41, 6, 21, 17, 20]
 solution : [7, 8, 23, 14]


Invert decision for 14 at level 14


New level: 15
 pending : [36, 26, 41, 6, 21, 17, 20]
 solution : [7, 8, 23]


Before reduction : 
 pending  : [36, 26, 41, 6, 21, 17, 20]
 solution : [7, 8, 23]

Essensial at level 15 : {17}

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, 65536), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, 66048), (22, -1), (23, -1), (24, -1), (25, -1), (26, 131072), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, 512), (37, -1), (38, -1), (39, -1), (40, -1), (41, 131072), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, 131072), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, 32768), (21, 135168), (22, -1), (23, -1), (24, -1), (25, -1), (26, 524288), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, 262144), (37, -1), (38, -1), (39, -1), (40, -1), (41, 524288), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 15 : set()

After reduction : 
 pending  : [36, 26, 41, 6, 21, 20]
 solution : [7, 8, 23, 17]


Before reduction : 
 pending  : [36, 26, 41, 6, 21, 20]
 solution : [7, 8, 23, 17]

Essensial at level 15 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, 131072), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, 32768), (21, 135168), (22, -1), (23, -1), (24, -1), (25, -1), (26, 524288), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, 262144), (37, -1), (38, -1), (39, -1), (40, -1), (41, 524288), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, 131072), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, 32768), (21, 135168), (22, -1), (23, -1), (24, -1), (25, -1), (26, 524288), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, 262144), (37, -1), (38, -1), (39, -1), (40, -1), (41, 524288), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 15 : set()

After reduction : 
 pending  : [36, 26, 41, 6, 21, 20]
 solution : [7, 8, 23, 17]


Solution : [7, 8, 23, 17] has cost 25.


Before backtrack at level 15
 pending : [36, 26, 41, 6, 21, 20]
 solution : [7, 8, 23, 17]

After backtrack at level 15
 pending : [36, 26, 41, 6, 21, 20, 17]
 solution : [7, 8, 23]


Before backtrack at level 14
 pending : [36, 26, 41, 6, 21, 20, 17]
 solution : [7, 8, 23]

After backtrack at level 14
 pending : [36, 26, 41, 6, 21, 20, 17, 14]
 solution : [7, 8, 23]


Before backtrack at level 13
 pending : [36, 26, 41, 6, 21, 20, 17, 14]
 solution : [7, 8, 23]

After backtrack at level 13
 pending : [36, 26, 41, 6, 21, 20, 17, 14, 19]
 solution : [7, 8, 23]


Before backtrack at level 12
 pending : [36, 26, 41, 6, 21, 20, 17, 14, 19]
 solution : [7, 8, 23]

After backtrack at level 12
 pending : [36, 26, 41, 6, 21, 20, 17, 14, 19, 16]
 solution : [7, 8, 23]


Before backtrack at level 11
 pending : [36, 26, 41, 6, 21, 20, 17, 14, 19, 16]
 solution : [7, 8, 23]

After backtrack at level 11
 pending : [36, 26, 41, 6, 21, 20, 17, 14, 19, 16, 23, 5, 29, 30, 39, 43, 44, 45, 46, 51, 38, 31, 33, 18]
 solution : [7, 8]


Before backtrack at level 10
 pending : [36, 26, 41, 6, 21, 20, 17, 14, 19, 16, 23, 5, 29, 30, 39, 43, 44, 45, 46, 51, 38, 31, 33, 18]
 solution : [7, 8]

After backtrack at level 10
 pending : [36, 26, 41, 6, 21, 20, 17, 14, 19, 16, 23, 5, 29, 30, 39, 43, 44, 45, 46, 51, 38, 31, 33, 18, 9]
 solution : [7, 8]


Before backtrack at level 9
 pending : [36, 26, 41, 6, 21, 20, 17, 14, 19, 16, 23, 5, 29, 30, 39, 43, 44, 45, 46, 51, 38, 31, 33, 18, 9]
 solution : [7, 8]

After backtrack at level 9
 pending : [36, 26, 41, 6, 21, 20, 17, 14, 19, 16, 23, 5, 29, 30, 39, 43, 44, 45, 46, 51, 38, 31, 33, 18, 9, 15]
 solution : [7, 8]


Before backtrack at level 8
 pending : [36, 26, 41, 6, 21, 20, 17, 14, 19, 16, 23, 5, 29, 30, 39, 43, 44, 45, 46, 51, 38, 31, 33, 18, 9, 15]
 solution : [7, 8]

After backtrack at level 8
 pending : [36, 26, 41, 6, 21, 20, 17, 14, 19, 16, 23, 5, 29, 30, 39, 43, 44, 45, 46, 51, 38, 31, 33, 18, 9, 15, 37]
 solution : [7, 8]


Before backtrack at level 7
 pending : [36, 26, 41, 6, 21, 20, 17, 14, 19, 16, 23, 5, 29, 30, 39, 43, 44, 45, 46, 51, 38, 31, 33, 18, 9, 15, 37]
 solution : [7, 8]

After backtrack at level 7
 pending : [36, 26, 41, 6, 21, 20, 17, 14, 19, 16, 23, 5, 29, 30, 39, 43, 44, 45, 46, 51, 38, 31, 33, 18, 9, 15, 37, 13]
 solution : [7, 8]


Before backtrack at level 6
 pending : [36, 26, 41, 6, 21, 20, 17, 14, 19, 16, 23, 5, 29, 30, 39, 43, 44, 45, 46, 51, 38, 31, 33, 18, 9, 15, 37, 13]
 solution : [7, 8]

After backtrack at level 6
 pending : [36, 26, 41, 6, 21, 20, 17, 14, 19, 16, 23, 5, 29, 30, 39, 43, 44, 45, 46, 51, 38, 31, 33, 18, 9, 15, 37, 13, 27]
 solution : [7, 8]


Before backtrack at level 5
 pending : [36, 26, 41, 6, 21, 20, 17, 14, 19, 16, 23, 5, 29, 30, 39, 43, 44, 45, 46, 51, 38, 31, 33, 18, 9, 15, 37, 13, 27]
 solution : [7, 8]

After backtrack at level 5
 pending : [36, 26, 41, 6, 21, 20, 17, 14, 19, 16, 23, 5, 29, 30, 39, 43, 44, 45, 46, 51, 38, 31, 33, 18, 9, 15, 37, 13, 27, 24]
 solution : [7, 8]


Before backtrack at level 4
 pending : [36, 26, 41, 6, 21, 20, 17, 14, 19, 16, 23, 5, 29, 30, 39, 43, 44, 45, 46, 51, 38, 31, 33, 18, 9, 15, 37, 13, 27, 24]
 solution : [7, 8]

After backtrack at level 4
 pending : [36, 26, 41, 6, 21, 20, 17, 14, 19, 16, 23, 5, 29, 30, 39, 43, 44, 45, 46, 51, 38, 31, 33, 18, 9, 15, 37, 13, 27, 24, 32]
 solution : [7, 8]


Before backtrack at level 3
 pending : [36, 26, 41, 6, 21, 20, 17, 14, 19, 16, 23, 5, 29, 30, 39, 43, 44, 45, 46, 51, 38, 31, 33, 18, 9, 15, 37, 13, 27, 24, 32]
 solution : [7, 8]

After backtrack at level 3
 pending : [36, 26, 41, 6, 21, 20, 17, 14, 19, 16, 23, 5, 29, 30, 39, 43, 44, 45, 46, 51, 38, 31, 33, 18, 9, 15, 37, 13, 27, 24, 32, 28]
 solution : [7, 8]


Before backtrack at level 2
 pending : [36, 26, 41, 6, 21, 20, 17, 14, 19, 16, 23, 5, 29, 30, 39, 43, 44, 45, 46, 51, 38, 31, 33, 18, 9, 15, 37, 13, 27, 24, 32, 28]
 solution : [7, 8]

After backtrack at level 2
 pending : [36, 26, 41, 6, 21, 20, 17, 14, 19, 16, 23, 5, 29, 30, 39, 43, 44, 45, 46, 51, 38, 31, 33, 18, 9, 15, 37, 13, 27, 24, 32, 28, 10]
 solution : [7, 8]


Invert decision for 8 at level 1


New level: 2
 pending : [36, 26, 41, 6, 21, 20, 17, 14, 19, 16, 23, 5, 29, 30, 39, 43, 44, 45, 46, 51, 38, 31, 33, 18, 9, 15, 37, 13, 27, 24, 32, 28, 10]
 solution : [7]


Before reduction : 
 pending  : [36, 26, 41, 6, 21, 20, 17, 14, 19, 16, 23, 5, 29, 30, 39, 43, 44, 45, 46, 51, 38, 31, 33, 18, 9, 15, 37, 13, 27, 24, 32, 28, 10]
 solution : [7]

Essensial at level 2 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, 131072), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, 32768), (21, 135168), (22, -1), (23, -1), (24, -1), (25, -1), (26, 524288), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, 262144), (37, -1), (38, -1), (39, -1), (40, -1), (41, 524288), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 1048576), (6, 1048576), (7, -1), (8, -1), (9, 134217728), (10, 17179869184), (11, -1), (12, -1), (13, 2147483648), (14, 8388608), (15, 1073741824), (16, 16777216), (17, 262144), (18, 67108864), (19, 33554432), (20, 524288), (21, 1114112), (22, -1), (23, 134217728), (24, 1073741824), (25, -1), (26, 4194304), (27, 4294967296), (28, 4294967296), (29, 1048576), (30, 16384), (31, 32768), (32, 2147483648), (33, 4194304), (34, -1), (35, -1), (36, 268435456), (37, 1073741824), (38, 134217728), (39, 16384), (40, -1), (41, 4194304), (42, -1), (43, 524288), (44, 524288), (45, 67108864), (46, 16777216), (47, -1), (48, -1), (49, -1), (50, -1), (51, 67108864), (52, -1)]

Covered at level 2 : set()

After reduction : 
 pending  : [36, 26, 41, 6, 21, 20, 17, 14, 19, 16, 23, 5, 29, 30, 39, 43, 44, 45, 46, 51, 38, 31, 33, 18, 9, 15, 37, 13, 27, 24, 32, 28, 10]
 solution : [7]


Solution : [7] has cost 6.


Decide in level 2 among pending : [36, 26, 41, 6, 21, 20, 17, 14, 19, 16, 23, 5, 29, 30, 39, 43, 44, 45, 46, 51, 38, 31, 33, 18, 9, 15, 37, 13, 27, 24, 32, 28, 10]

Coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 1048576), (6, 1048576), (7, -1), (8, -1), (9, 134217728), (10, 17179869184), (11, -1), (12, -1), (13, 2147483648), (14, 8388608), (15, 1073741824), (16, 16777216), (17, 262144), (18, 67108864), (19, 33554432), (20, 524288), (21, 1114112), (22, -1), (23, 134217728), (24, 1073741824), (25, -1), (26, 4194304), (27, 4294967296), (28, 4294967296), (29, 1048576), (30, 16384), (31, 32768), (32, 2147483648), (33, 4194304), (34, -1), (35, -1), (36, 268435456), (37, 1073741824), (38, 134217728), (39, 16384), (40, -1), (41, 4194304), (42, -1), (43, 524288), (44, 524288), (45, 67108864), (46, 16777216), (47, -1), (48, -1), (49, -1), (50, -1), (51, 67108864), (52, -1)]

Decide 10 with phase True at level 2

After decision at level 2
 pending : [36, 26, 41, 6, 21, 20, 17, 14, 19, 16, 23, 5, 29, 30, 39, 43, 44, 45, 46, 51, 38, 31, 33, 18, 9, 15, 37, 13, 27, 24, 32, 28]
 solution : [7, 10]


New level: 3
 pending : [36, 26, 41, 6, 21, 20, 17, 14, 19, 16, 23, 5, 29, 30, 39, 43, 44, 45, 46, 51, 38, 31, 33, 18, 9, 15, 37, 13, 27, 24, 32, 28]
 solution : [7, 10]


Before reduction : 
 pending  : [36, 26, 41, 6, 21, 20, 17, 14, 19, 16, 23, 5, 29, 30, 39, 43, 44, 45, 46, 51, 38, 31, 33, 18, 9, 15, 37, 13, 27, 24, 32, 28]
 solution : [7, 10]

Essensial at level 3 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 1048576), (6, 1048576), (7, -1), (8, -1), (9, 134217728), (10, 17179869184), (11, -1), (12, -1), (13, 2147483648), (14, 8388608), (15, 1073741824), (16, 16777216), (17, 262144), (18, 67108864), (19, 33554432), (20, 524288), (21, 1114112), (22, -1), (23, 134217728), (24, 1073741824), (25, -1), (26, 4194304), (27, 4294967296), (28, 4294967296), (29, 1048576), (30, 16384), (31, 32768), (32, 2147483648), (33, 4194304), (34, -1), (35, -1), (36, 268435456), (37, 1073741824), (38, 134217728), (39, 16384), (40, -1), (41, 4194304), (42, -1), (43, 524288), (44, 524288), (45, 67108864), (46, 16777216), (47, -1), (48, -1), (49, -1), (50, -1), (51, 67108864), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 524288), (6, 524288), (7, -1), (8, -1), (9, 67108864), (10, -1), (11, -1), (12, -1), (13, 1073741824), (14, 4194304), (15, 536870912), (16, 8388608), (17, 131072), (18, 33554432), (19, 16777216), (20, 262144), (21, 557056), (22, -1), (23, 67108864), (24, 268435456), (25, -1), (26, 2097152), (27, 2147483648), (28, 536870912), (29, 524288), (30, 8192), (31, 8192), (32, 536870912), (33, 1048576), (34, -1), (35, -1), (36, 67108864), (37, 134217728), (38, 67108864), (39, 8192), (40, -1), (41, 2097152), (42, -1), (43, 262144), (44, 262144), (45, 33554432), (46, 8388608), (47, -1), (48, -1), (49, -1), (50, -1), (51, 33554432), (52, -1)]

Covered at level 3 : set()

After reduction : 
 pending  : [36, 26, 41, 6, 21, 20, 17, 14, 19, 16, 23, 5, 29, 30, 39, 43, 44, 45, 46, 51, 38, 31, 33, 18, 9, 15, 37, 13, 27, 24, 32, 28]
 solution : [7, 10]


Solution : [7, 10] has cost 9.


Decide in level 3 among pending : [36, 26, 41, 6, 21, 20, 17, 14, 19, 16, 23, 5, 29, 30, 39, 43, 44, 45, 46, 51, 38, 31, 33, 18, 9, 15, 37, 13, 27, 24, 32, 28]

Coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 524288), (6, 524288), (7, -1), (8, -1), (9, 67108864), (10, -1), (11, -1), (12, -1), (13, 1073741824), (14, 4194304), (15, 536870912), (16, 8388608), (17, 131072), (18, 33554432), (19, 16777216), (20, 262144), (21, 557056), (22, -1), (23, 67108864), (24, 268435456), (25, -1), (26, 2097152), (27, 2147483648), (28, 536870912), (29, 524288), (30, 8192), (31, 8192), (32, 536870912), (33, 1048576), (34, -1), (35, -1), (36, 67108864), (37, 134217728), (38, 67108864), (39, 8192), (40, -1), (41, 2097152), (42, -1), (43, 262144), (44, 262144), (45, 33554432), (46, 8388608), (47, -1), (48, -1), (49, -1), (50, -1), (51, 33554432), (52, -1)]

Decide 27 with phase True at level 3

After decision at level 3
 pending : [36, 26, 41, 6, 21, 20, 17, 14, 19, 16, 23, 5, 29, 30, 39, 43, 44, 45, 46, 51, 38, 31, 33, 18, 9, 15, 37, 13, 24, 32, 28]
 solution : [7, 10, 27]


New level: 4
 pending : [36, 26, 41, 6, 21, 20, 17, 14, 19, 16, 23, 5, 29, 30, 39, 43, 44, 45, 46, 51, 38, 31, 33, 18, 9, 15, 37, 13, 24, 32, 28]
 solution : [7, 10, 27]


Before reduction : 
 pending  : [36, 26, 41, 6, 21, 20, 17, 14, 19, 16, 23, 5, 29, 30, 39, 43, 44, 45, 46, 51, 38, 31, 33, 18, 9, 15, 37, 13, 24, 32, 28]
 solution : [7, 10, 27]

Essensial at level 4 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 524288), (6, 524288), (7, -1), (8, -1), (9, 67108864), (10, -1), (11, -1), (12, -1), (13, 1073741824), (14, 4194304), (15, 536870912), (16, 8388608), (17, 131072), (18, 33554432), (19, 16777216), (20, 262144), (21, 557056), (22, -1), (23, 67108864), (24, 268435456), (25, -1), (26, 2097152), (27, 2147483648), (28, 536870912), (29, 524288), (30, 8192), (31, 8192), (32, 536870912), (33, 1048576), (34, -1), (35, -1), (36, 67108864), (37, 134217728), (38, 67108864), (39, 8192), (40, -1), (41, 2097152), (42, -1), (43, 262144), (44, 262144), (45, 33554432), (46, 8388608), (47, -1), (48, -1), (49, -1), (50, -1), (51, 33554432), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 131072), (6, 0), (7, -1), (8, -1), (9, 67108864), (10, -1), (11, -1), (12, -1), (13, 0), (14, 0), (15, 0), (16, 0), (17, 0), (18, 0), (19, 0), (20, 0), (21, 0), (22, -1), (23, 67108864), (24, 268435456), (25, -1), (26, 0), (27, -1), (28, 536870912), (29, 262144), (30, 4096), (31, 8192), (32, 536870912), (33, 1048576), (34, -1), (35, -1), (36, 1024), (37, 2048), (38, 33554432), (39, 2048), (40, -1), (41, 0), (42, -1), (43, 65536), (44, 65536), (45, 16777216), (46, 2097152), (47, -1), (48, -1), (49, -1), (50, -1), (51, 8388608), (52, -1)]

Covered at level 4 : {6, 41, 13, 14, 15, 16, 17, 18, 19, 20, 21, 26}

After reduction : 
 pending  : [36, 23, 5, 29, 30, 39, 43, 44, 45, 46, 51, 38, 31, 33, 9, 37, 24, 32, 28]
 solution : [7, 10, 27]


Before reduction : 
 pending  : [36, 23, 5, 29, 30, 39, 43, 44, 45, 46, 51, 38, 31, 33, 9, 37, 24, 32, 28]
 solution : [7, 10, 27]

Essensial at level 4 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 131072), (6, 0), (7, -1), (8, -1), (9, 67108864), (10, -1), (11, -1), (12, -1), (13, 0), (14, 0), (15, 0), (16, 0), (17, 0), (18, 0), (19, 0), (20, 0), (21, 0), (22, -1), (23, 67108864), (24, 268435456), (25, -1), (26, 0), (27, -1), (28, 536870912), (29, 262144), (30, 4096), (31, 8192), (32, 536870912), (33, 1048576), (34, -1), (35, -1), (36, 1024), (37, 2048), (38, 33554432), (39, 2048), (40, -1), (41, 0), (42, -1), (43, 65536), (44, 65536), (45, 16777216), (46, 2097152), (47, -1), (48, -1), (49, -1), (50, -1), (51, 8388608), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 131072), (6, -1), (7, -1), (8, -1), (9, 67108864), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, 67108864), (24, 268435456), (25, -1), (26, -1), (27, -1), (28, 536870912), (29, 262144), (30, 4096), (31, 8192), (32, 536870912), (33, 1048576), (34, -1), (35, -1), (36, 1024), (37, 2048), (38, 33554432), (39, 2048), (40, -1), (41, -1), (42, -1), (43, 65536), (44, 65536), (45, 16777216), (46, 2097152), (47, -1), (48, -1), (49, -1), (50, -1), (51, 8388608), (52, -1)]

Covered at level 4 : set()

After reduction : 
 pending  : [36, 23, 5, 29, 30, 39, 43, 44, 45, 46, 51, 38, 31, 33, 9, 37, 24, 32, 28]
 solution : [7, 10, 27]


Solution : [7, 10, 27] has cost 13.


Decide in level 4 among pending : [36, 23, 5, 29, 30, 39, 43, 44, 45, 46, 51, 38, 31, 33, 9, 37, 24, 32, 28]

Coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 131072), (6, -1), (7, -1), (8, -1), (9, 67108864), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, 67108864), (24, 268435456), (25, -1), (26, -1), (27, -1), (28, 536870912), (29, 262144), (30, 4096), (31, 8192), (32, 536870912), (33, 1048576), (34, -1), (35, -1), (36, 1024), (37, 2048), (38, 33554432), (39, 2048), (40, -1), (41, -1), (42, -1), (43, 65536), (44, 65536), (45, 16777216), (46, 2097152), (47, -1), (48, -1), (49, -1), (50, -1), (51, 8388608), (52, -1)]

Decide 32 with phase True at level 4

After decision at level 4
 pending : [36, 23, 5, 29, 30, 39, 43, 44, 45, 46, 51, 38, 31, 33, 9, 37, 24, 28]
 solution : [7, 10, 27, 32]


New level: 5
 pending : [36, 23, 5, 29, 30, 39, 43, 44, 45, 46, 51, 38, 31, 33, 9, 37, 24, 28]
 solution : [7, 10, 27, 32]


Before reduction : 
 pending  : [36, 23, 5, 29, 30, 39, 43, 44, 45, 46, 51, 38, 31, 33, 9, 37, 24, 28]
 solution : [7, 10, 27, 32]

Essensial at level 5 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 131072), (6, -1), (7, -1), (8, -1), (9, 67108864), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, 67108864), (24, 268435456), (25, -1), (26, -1), (27, -1), (28, 536870912), (29, 262144), (30, 4096), (31, 8192), (32, 536870912), (33, 1048576), (34, -1), (35, -1), (36, 1024), (37, 2048), (38, 33554432), (39, 2048), (40, -1), (41, -1), (42, -1), (43, 65536), (44, 65536), (45, 16777216), (46, 2097152), (47, -1), (48, -1), (49, -1), (50, -1), (51, 8388608), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 32768), (6, -1), (7, -1), (8, -1), (9, 67108864), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, 67108864), (24, 4096), (25, -1), (26, -1), (27, -1), (28, 524288), (29, 65536), (30, 1024), (31, 0), (32, -1), (33, 0), (34, -1), (35, -1), (36, 512), (37, 0), (38, 8388608), (39, 512), (40, -1), (41, -1), (42, -1), (43, 16384), (44, 16384), (45, 4194304), (46, 524288), (47, -1), (48, -1), (49, -1), (50, -1), (51, 2097152), (52, -1)]

Covered at level 5 : {33, 37, 31}

After reduction : 
 pending  : [36, 23, 5, 29, 30, 39, 43, 44, 45, 46, 51, 38, 9, 24, 28]
 solution : [7, 10, 27, 32]


Before reduction : 
 pending  : [36, 23, 5, 29, 30, 39, 43, 44, 45, 46, 51, 38, 9, 24, 28]
 solution : [7, 10, 27, 32]

Essensial at level 5 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 32768), (6, -1), (7, -1), (8, -1), (9, 67108864), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, 67108864), (24, 4096), (25, -1), (26, -1), (27, -1), (28, 524288), (29, 65536), (30, 1024), (31, 0), (32, -1), (33, 0), (34, -1), (35, -1), (36, 512), (37, 0), (38, 8388608), (39, 512), (40, -1), (41, -1), (42, -1), (43, 16384), (44, 16384), (45, 4194304), (46, 524288), (47, -1), (48, -1), (49, -1), (50, -1), (51, 2097152), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 32768), (6, -1), (7, -1), (8, -1), (9, 67108864), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, 67108864), (24, 4096), (25, -1), (26, -1), (27, -1), (28, 524288), (29, 65536), (30, 1024), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, 512), (37, -1), (38, 8388608), (39, 512), (40, -1), (41, -1), (42, -1), (43, 16384), (44, 16384), (45, 4194304), (46, 524288), (47, -1), (48, -1), (49, -1), (50, -1), (51, 2097152), (52, -1)]

Covered at level 5 : set()

After reduction : 
 pending  : [36, 23, 5, 29, 30, 39, 43, 44, 45, 46, 51, 38, 9, 24, 28]
 solution : [7, 10, 27, 32]


Solution : [7, 10, 27, 32] has cost 26.


Before backtrack at level 5
 pending : [36, 23, 5, 29, 30, 39, 43, 44, 45, 46, 51, 38, 9, 24, 28]
 solution : [7, 10, 27, 32]

After backtrack at level 5
 pending : [36, 23, 5, 29, 30, 39, 43, 44, 45, 46, 51, 38, 9, 24, 28, 31, 33, 37]
 solution : [7, 10, 27, 32]


Invert decision for 32 at level 4


New level: 5
 pending : [36, 23, 5, 29, 30, 39, 43, 44, 45, 46, 51, 38, 9, 24, 28, 31, 33, 37]
 solution : [7, 10, 27]


Before reduction : 
 pending  : [36, 23, 5, 29, 30, 39, 43, 44, 45, 46, 51, 38, 9, 24, 28, 31, 33, 37]
 solution : [7, 10, 27]

Essensial at level 5 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 32768), (6, -1), (7, -1), (8, -1), (9, 67108864), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, 67108864), (24, 4096), (25, -1), (26, -1), (27, -1), (28, 524288), (29, 65536), (30, 1024), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, 512), (37, -1), (38, 8388608), (39, 512), (40, -1), (41, -1), (42, -1), (43, 16384), (44, 16384), (45, 4194304), (46, 524288), (47, -1), (48, -1), (49, -1), (50, -1), (51, 2097152), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 131072), (6, -1), (7, -1), (8, -1), (9, 67108864), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, 67108864), (24, 268435456), (25, -1), (26, -1), (27, -1), (28, 536870912), (29, 262144), (30, 4096), (31, 8192), (32, -1), (33, 1048576), (34, -1), (35, -1), (36, 1024), (37, 2048), (38, 33554432), (39, 2048), (40, -1), (41, -1), (42, -1), (43, 65536), (44, 65536), (45, 16777216), (46, 2097152), (47, -1), (48, -1), (49, -1), (50, -1), (51, 8388608), (52, -1)]

Covered at level 5 : set()

After reduction : 
 pending  : [36, 23, 5, 29, 30, 39, 43, 44, 45, 46, 51, 38, 9, 24, 28, 31, 33, 37]
 solution : [7, 10, 27]


Solution : [7, 10, 27] has cost 13.


Decide in level 5 among pending : [36, 23, 5, 29, 30, 39, 43, 44, 45, 46, 51, 38, 9, 24, 28, 31, 33, 37]

Coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 131072), (6, -1), (7, -1), (8, -1), (9, 67108864), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, 67108864), (24, 268435456), (25, -1), (26, -1), (27, -1), (28, 536870912), (29, 262144), (30, 4096), (31, 8192), (32, -1), (33, 1048576), (34, -1), (35, -1), (36, 1024), (37, 2048), (38, 33554432), (39, 2048), (40, -1), (41, -1), (42, -1), (43, 65536), (44, 65536), (45, 16777216), (46, 2097152), (47, -1), (48, -1), (49, -1), (50, -1), (51, 8388608), (52, -1)]

Decide 28 with phase True at level 5

After decision at level 5
 pending : [36, 23, 5, 29, 30, 39, 43, 44, 45, 46, 51, 38, 9, 24, 31, 33, 37]
 solution : [7, 10, 27, 28]


New level: 6
 pending : [36, 23, 5, 29, 30, 39, 43, 44, 45, 46, 51, 38, 9, 24, 31, 33, 37]
 solution : [7, 10, 27, 28]


Before reduction : 
 pending  : [36, 23, 5, 29, 30, 39, 43, 44, 45, 46, 51, 38, 9, 24, 31, 33, 37]
 solution : [7, 10, 27, 28]

Essensial at level 6 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 131072), (6, -1), (7, -1), (8, -1), (9, 67108864), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, 67108864), (24, 268435456), (25, -1), (26, -1), (27, -1), (28, 536870912), (29, 262144), (30, 4096), (31, 8192), (32, -1), (33, 1048576), (34, -1), (35, -1), (36, 1024), (37, 2048), (38, 33554432), (39, 2048), (40, -1), (41, -1), (42, -1), (43, 65536), (44, 65536), (45, 16777216), (46, 2097152), (47, -1), (48, -1), (49, -1), (50, -1), (51, 8388608), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 131072), (6, -1), (7, -1), (8, -1), (9, 67108864), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, 67108864), (24, 134217728), (25, -1), (26, -1), (27, -1), (28, -1), (29, 262144), (30, 4096), (31, 4096), (32, -1), (33, 524288), (34, -1), (35, -1), (36, 1024), (37, 2048), (38, 33554432), (39, 2048), (40, -1), (41, -1), (42, -1), (43, 65536), (44, 65536), (45, 16777216), (46, 2097152), (47, -1), (48, -1), (49, -1), (50, -1), (51, 8388608), (52, -1)]

Covered at level 6 : set()

After reduction : 
 pending  : [36, 23, 5, 29, 30, 39, 43, 44, 45, 46, 51, 38, 9, 24, 31, 33, 37]
 solution : [7, 10, 27, 28]


Solution : [7, 10, 27, 28] has cost 17.


Decide in level 6 among pending : [36, 23, 5, 29, 30, 39, 43, 44, 45, 46, 51, 38, 9, 24, 31, 33, 37]

Coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 131072), (6, -1), (7, -1), (8, -1), (9, 67108864), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, 67108864), (24, 134217728), (25, -1), (26, -1), (27, -1), (28, -1), (29, 262144), (30, 4096), (31, 4096), (32, -1), (33, 524288), (34, -1), (35, -1), (36, 1024), (37, 2048), (38, 33554432), (39, 2048), (40, -1), (41, -1), (42, -1), (43, 65536), (44, 65536), (45, 16777216), (46, 2097152), (47, -1), (48, -1), (49, -1), (50, -1), (51, 8388608), (52, -1)]

Decide 24 with phase True at level 6

After decision at level 6
 pending : [36, 23, 5, 29, 30, 39, 43, 44, 45, 46, 51, 38, 9, 31, 33, 37]
 solution : [7, 10, 27, 28, 24]


New level: 7
 pending : [36, 23, 5, 29, 30, 39, 43, 44, 45, 46, 51, 38, 9, 31, 33, 37]
 solution : [7, 10, 27, 28, 24]


Before reduction : 
 pending  : [36, 23, 5, 29, 30, 39, 43, 44, 45, 46, 51, 38, 9, 31, 33, 37]
 solution : [7, 10, 27, 28, 24]

Essensial at level 7 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 131072), (6, -1), (7, -1), (8, -1), (9, 67108864), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, 67108864), (24, 134217728), (25, -1), (26, -1), (27, -1), (28, -1), (29, 262144), (30, 4096), (31, 4096), (32, -1), (33, 524288), (34, -1), (35, -1), (36, 1024), (37, 2048), (38, 33554432), (39, 2048), (40, -1), (41, -1), (42, -1), (43, 65536), (44, 65536), (45, 16777216), (46, 2097152), (47, -1), (48, -1), (49, -1), (50, -1), (51, 8388608), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 32768), (6, -1), (7, -1), (8, -1), (9, 16777216), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, 16777216), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, 65536), (30, 1024), (31, 0), (32, -1), (33, 0), (34, -1), (35, -1), (36, 512), (37, 0), (38, 16777216), (39, 512), (40, -1), (41, -1), (42, -1), (43, 16384), (44, 16384), (45, 8388608), (46, 524288), (47, -1), (48, -1), (49, -1), (50, -1), (51, 4194304), (52, -1)]

Covered at level 7 : {33, 37, 31}

After reduction : 
 pending  : [36, 23, 5, 29, 30, 39, 43, 44, 45, 46, 51, 38, 9]
 solution : [7, 10, 27, 28, 24]


Before reduction : 
 pending  : [36, 23, 5, 29, 30, 39, 43, 44, 45, 46, 51, 38, 9]
 solution : [7, 10, 27, 28, 24]

Essensial at level 7 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 32768), (6, -1), (7, -1), (8, -1), (9, 16777216), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, 16777216), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, 65536), (30, 1024), (31, 0), (32, -1), (33, 0), (34, -1), (35, -1), (36, 512), (37, 0), (38, 16777216), (39, 512), (40, -1), (41, -1), (42, -1), (43, 16384), (44, 16384), (45, 8388608), (46, 524288), (47, -1), (48, -1), (49, -1), (50, -1), (51, 4194304), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 32768), (6, -1), (7, -1), (8, -1), (9, 16777216), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, 16777216), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, 65536), (30, 1024), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, 512), (37, -1), (38, 16777216), (39, 512), (40, -1), (41, -1), (42, -1), (43, 16384), (44, 16384), (45, 8388608), (46, 524288), (47, -1), (48, -1), (49, -1), (50, -1), (51, 4194304), (52, -1)]

Covered at level 7 : set()

After reduction : 
 pending  : [36, 23, 5, 29, 30, 39, 43, 44, 45, 46, 51, 38, 9]
 solution : [7, 10, 27, 28, 24]


Solution : [7, 10, 27, 28, 24] has cost 24.


Before backtrack at level 7
 pending : [36, 23, 5, 29, 30, 39, 43, 44, 45, 46, 51, 38, 9]
 solution : [7, 10, 27, 28, 24]

After backtrack at level 7
 pending : [36, 23, 5, 29, 30, 39, 43, 44, 45, 46, 51, 38, 9, 31, 33, 37]
 solution : [7, 10, 27, 28, 24]


Invert decision for 24 at level 6


New level: 7
 pending : [36, 23, 5, 29, 30, 39, 43, 44, 45, 46, 51, 38, 9, 31, 33, 37]
 solution : [7, 10, 27, 28]


Before reduction : 
 pending  : [36, 23, 5, 29, 30, 39, 43, 44, 45, 46, 51, 38, 9, 31, 33, 37]
 solution : [7, 10, 27, 28]

Essensial at level 7 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 32768), (6, -1), (7, -1), (8, -1), (9, 16777216), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, 16777216), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, 65536), (30, 1024), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, 512), (37, -1), (38, 16777216), (39, 512), (40, -1), (41, -1), (42, -1), (43, 16384), (44, 16384), (45, 8388608), (46, 524288), (47, -1), (48, -1), (49, -1), (50, -1), (51, 4194304), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 131072), (6, -1), (7, -1), (8, -1), (9, 67108864), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, 67108864), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, 262144), (30, 4096), (31, 4096), (32, -1), (33, 524288), (34, -1), (35, -1), (36, 1024), (37, 2048), (38, 33554432), (39, 2048), (40, -1), (41, -1), (42, -1), (43, 65536), (44, 65536), (45, 16777216), (46, 2097152), (47, -1), (48, -1), (49, -1), (50, -1), (51, 8388608), (52, -1)]

Covered at level 7 : set()

After reduction : 
 pending  : [36, 23, 5, 29, 30, 39, 43, 44, 45, 46, 51, 38, 9, 31, 33, 37]
 solution : [7, 10, 27, 28]


Solution : [7, 10, 27, 28] has cost 17.


Decide in level 7 among pending : [36, 23, 5, 29, 30, 39, 43, 44, 45, 46, 51, 38, 9, 31, 33, 37]

Coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 131072), (6, -1), (7, -1), (8, -1), (9, 67108864), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, 67108864), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, 262144), (30, 4096), (31, 4096), (32, -1), (33, 524288), (34, -1), (35, -1), (36, 1024), (37, 2048), (38, 33554432), (39, 2048), (40, -1), (41, -1), (42, -1), (43, 65536), (44, 65536), (45, 16777216), (46, 2097152), (47, -1), (48, -1), (49, -1), (50, -1), (51, 8388608), (52, -1)]

Decide 23 with phase True at level 7

After decision at level 7
 pending : [36, 5, 29, 30, 39, 43, 44, 45, 46, 51, 38, 9, 31, 33, 37]
 solution : [7, 10, 27, 28, 23]


New level: 8
 pending : [36, 5, 29, 30, 39, 43, 44, 45, 46, 51, 38, 9, 31, 33, 37]
 solution : [7, 10, 27, 28, 23]


Before reduction : 
 pending  : [36, 5, 29, 30, 39, 43, 44, 45, 46, 51, 38, 9, 31, 33, 37]
 solution : [7, 10, 27, 28, 23]

Essensial at level 8 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 131072), (6, -1), (7, -1), (8, -1), (9, 67108864), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, 67108864), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, 262144), (30, 4096), (31, 4096), (32, -1), (33, 524288), (34, -1), (35, -1), (36, 1024), (37, 2048), (38, 33554432), (39, 2048), (40, -1), (41, -1), (42, -1), (43, 65536), (44, 65536), (45, 16777216), (46, 2097152), (47, -1), (48, -1), (49, -1), (50, -1), (51, 8388608), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 0), (6, -1), (7, -1), (8, -1), (9, 0), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, 0), (30, 0), (31, 0), (32, -1), (33, 0), (34, -1), (35, -1), (36, 0), (37, 0), (38, 0), (39, 0), (40, -1), (41, -1), (42, -1), (43, 0), (44, 0), (45, 0), (46, 0), (47, -1), (48, -1), (49, -1), (50, -1), (51, 0), (52, -1)]

Covered at level 8 : {33, 36, 5, 38, 39, 37, 9, 43, 44, 45, 46, 51, 29, 30, 31}

After reduction : 
 pending  : []
 solution : [7, 10, 27, 28, 23]


Before reduction : 
 pending  : []
 solution : [7, 10, 27, 28, 23]

Essensial at level 8 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 0), (6, -1), (7, -1), (8, -1), (9, 0), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, 0), (30, 0), (31, 0), (32, -1), (33, 0), (34, -1), (35, -1), (36, 0), (37, 0), (38, 0), (39, 0), (40, -1), (41, -1), (42, -1), (43, 0), (44, 0), (45, 0), (46, 0), (47, -1), (48, -1), (49, -1), (50, -1), (51, 0), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 8 : set()

After reduction : 
 pending  : []
 solution : [7, 10, 27, 28, 23]


Solution : [7, 10, 27, 28, 23] has cost 24.


Before backtrack at level 8
 pending : []
 solution : [7, 10, 27, 28, 23]

After backtrack at level 8
 pending : [36, 5, 29, 30, 39, 43, 44, 45, 46, 51, 38, 9, 31, 33, 37]
 solution : [7, 10, 27, 28, 23]


Invert decision for 23 at level 7


New level: 8
 pending : [36, 5, 29, 30, 39, 43, 44, 45, 46, 51, 38, 9, 31, 33, 37]
 solution : [7, 10, 27, 28]


Before reduction : 
 pending  : [36, 5, 29, 30, 39, 43, 44, 45, 46, 51, 38, 9, 31, 33, 37]
 solution : [7, 10, 27, 28]

Essensial at level 8 : {9}

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 0), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, 0), (30, 0), (31, 0), (32, -1), (33, 0), (34, -1), (35, -1), (36, 0), (37, 0), (38, 0), (39, 0), (40, -1), (41, -1), (42, -1), (43, 0), (44, 0), (45, 0), (46, 0), (47, -1), (48, -1), (49, -1), (50, -1), (51, 0), (52, -1)]

Covered at level 8 : {33, 36, 5, 38, 39, 37, 43, 44, 45, 46, 51, 29, 30, 31}

After reduction : 
 pending  : []
 solution : [7, 10, 27, 28, 9]


Before reduction : 
 pending  : []
 solution : [7, 10, 27, 28, 9]

Essensial at level 8 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 0), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, 0), (30, 0), (31, 0), (32, -1), (33, 0), (34, -1), (35, -1), (36, 0), (37, 0), (38, 0), (39, 0), (40, -1), (41, -1), (42, -1), (43, 0), (44, 0), (45, 0), (46, 0), (47, -1), (48, -1), (49, -1), (50, -1), (51, 0), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 8 : set()

After reduction : 
 pending  : []
 solution : [7, 10, 27, 28, 9]


Solution : [7, 10, 27, 28, 9] has cost 21.


Before backtrack at level 8
 pending : []
 solution : [7, 10, 27, 28, 9]

After backtrack at level 8
 pending : [9, 36, 5, 29, 30, 39, 43, 44, 45, 46, 51, 38, 31, 33, 37]
 solution : [7, 10, 27, 28]


Before backtrack at level 7
 pending : [9, 36, 5, 29, 30, 39, 43, 44, 45, 46, 51, 38, 31, 33, 37]
 solution : [7, 10, 27, 28]

After backtrack at level 7
 pending : [9, 36, 5, 29, 30, 39, 43, 44, 45, 46, 51, 38, 31, 33, 37, 23]
 solution : [7, 10, 27, 28]


Before backtrack at level 6
 pending : [9, 36, 5, 29, 30, 39, 43, 44, 45, 46, 51, 38, 31, 33, 37, 23]
 solution : [7, 10, 27, 28]

After backtrack at level 6
 pending : [9, 36, 5, 29, 30, 39, 43, 44, 45, 46, 51, 38, 31, 33, 37, 23, 24]
 solution : [7, 10, 27, 28]


Invert decision for 28 at level 5


New level: 6
 pending : [9, 36, 5, 29, 30, 39, 43, 44, 45, 46, 51, 38, 31, 33, 37, 23, 24]
 solution : [7, 10, 27]


Before reduction : 
 pending  : [9, 36, 5, 29, 30, 39, 43, 44, 45, 46, 51, 38, 31, 33, 37, 23, 24]
 solution : [7, 10, 27]

Essensial at level 6 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 131072), (6, -1), (7, -1), (8, -1), (9, 67108864), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, 67108864), (24, 268435456), (25, -1), (26, -1), (27, -1), (28, -1), (29, 262144), (30, 4096), (31, 8192), (32, -1), (33, 1048576), (34, -1), (35, -1), (36, 1024), (37, 2048), (38, 33554432), (39, 2048), (40, -1), (41, -1), (42, -1), (43, 65536), (44, 65536), (45, 16777216), (46, 2097152), (47, -1), (48, -1), (49, -1), (50, -1), (51, 8388608), (52, -1)]

Covered at level 6 : set()

After reduction : 
 pending  : [9, 36, 5, 29, 30, 39, 43, 44, 45, 46, 51, 38, 31, 33, 37, 23, 24]
 solution : [7, 10, 27]


Solution : [7, 10, 27] has cost 13.


Decide in level 6 among pending : [9, 36, 5, 29, 30, 39, 43, 44, 45, 46, 51, 38, 31, 33, 37, 23, 24]

Coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 131072), (6, -1), (7, -1), (8, -1), (9, 67108864), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, 67108864), (24, 268435456), (25, -1), (26, -1), (27, -1), (28, -1), (29, 262144), (30, 4096), (31, 8192), (32, -1), (33, 1048576), (34, -1), (35, -1), (36, 1024), (37, 2048), (38, 33554432), (39, 2048), (40, -1), (41, -1), (42, -1), (43, 65536), (44, 65536), (45, 16777216), (46, 2097152), (47, -1), (48, -1), (49, -1), (50, -1), (51, 8388608), (52, -1)]

Decide 24 with phase True at level 6

After decision at level 6
 pending : [9, 36, 5, 29, 30, 39, 43, 44, 45, 46, 51, 38, 31, 33, 37, 23]
 solution : [7, 10, 27, 24]


New level: 7
 pending : [9, 36, 5, 29, 30, 39, 43, 44, 45, 46, 51, 38, 31, 33, 37, 23]
 solution : [7, 10, 27, 24]


Before reduction : 
 pending  : [9, 36, 5, 29, 30, 39, 43, 44, 45, 46, 51, 38, 31, 33, 37, 23]
 solution : [7, 10, 27, 24]

Essensial at level 7 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 131072), (6, -1), (7, -1), (8, -1), (9, 67108864), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, 67108864), (24, 268435456), (25, -1), (26, -1), (27, -1), (28, -1), (29, 262144), (30, 4096), (31, 8192), (32, -1), (33, 1048576), (34, -1), (35, -1), (36, 1024), (37, 2048), (38, 33554432), (39, 2048), (40, -1), (41, -1), (42, -1), (43, 65536), (44, 65536), (45, 16777216), (46, 2097152), (47, -1), (48, -1), (49, -1), (50, -1), (51, 8388608), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 32768), (6, -1), (7, -1), (8, -1), (9, 16777216), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, 16777216), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, 65536), (30, 1024), (31, 0), (32, -1), (33, 0), (34, -1), (35, -1), (36, 512), (37, 0), (38, 16777216), (39, 512), (40, -1), (41, -1), (42, -1), (43, 16384), (44, 16384), (45, 8388608), (46, 524288), (47, -1), (48, -1), (49, -1), (50, -1), (51, 4194304), (52, -1)]

Covered at level 7 : {33, 37, 31}

After reduction : 
 pending  : [9, 36, 5, 29, 30, 39, 43, 44, 45, 46, 51, 38, 23]
 solution : [7, 10, 27, 24]


Before reduction : 
 pending  : [9, 36, 5, 29, 30, 39, 43, 44, 45, 46, 51, 38, 23]
 solution : [7, 10, 27, 24]

Essensial at level 7 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 32768), (6, -1), (7, -1), (8, -1), (9, 16777216), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, 16777216), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, 65536), (30, 1024), (31, 0), (32, -1), (33, 0), (34, -1), (35, -1), (36, 512), (37, 0), (38, 16777216), (39, 512), (40, -1), (41, -1), (42, -1), (43, 16384), (44, 16384), (45, 8388608), (46, 524288), (47, -1), (48, -1), (49, -1), (50, -1), (51, 4194304), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 32768), (6, -1), (7, -1), (8, -1), (9, 16777216), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, 16777216), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, 65536), (30, 1024), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, 512), (37, -1), (38, 16777216), (39, 512), (40, -1), (41, -1), (42, -1), (43, 16384), (44, 16384), (45, 8388608), (46, 524288), (47, -1), (48, -1), (49, -1), (50, -1), (51, 4194304), (52, -1)]

Covered at level 7 : set()

After reduction : 
 pending  : [9, 36, 5, 29, 30, 39, 43, 44, 45, 46, 51, 38, 23]
 solution : [7, 10, 27, 24]


Solution : [7, 10, 27, 24] has cost 20.


Before backtrack at level 7
 pending : [9, 36, 5, 29, 30, 39, 43, 44, 45, 46, 51, 38, 23]
 solution : [7, 10, 27, 24]

After backtrack at level 7
 pending : [9, 36, 5, 29, 30, 39, 43, 44, 45, 46, 51, 38, 23, 31, 33, 37]
 solution : [7, 10, 27, 24]


Invert decision for 24 at level 6


New level: 7
 pending : [9, 36, 5, 29, 30, 39, 43, 44, 45, 46, 51, 38, 23, 31, 33, 37]
 solution : [7, 10, 27]


Before reduction : 
 pending  : [9, 36, 5, 29, 30, 39, 43, 44, 45, 46, 51, 38, 23, 31, 33, 37]
 solution : [7, 10, 27]

Essensial at level 7 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 32768), (6, -1), (7, -1), (8, -1), (9, 16777216), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, 16777216), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, 65536), (30, 1024), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, 512), (37, -1), (38, 16777216), (39, 512), (40, -1), (41, -1), (42, -1), (43, 16384), (44, 16384), (45, 8388608), (46, 524288), (47, -1), (48, -1), (49, -1), (50, -1), (51, 4194304), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 131072), (6, -1), (7, -1), (8, -1), (9, 67108864), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, 67108864), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, 262144), (30, 4096), (31, 8192), (32, -1), (33, 1048576), (34, -1), (35, -1), (36, 1024), (37, 2048), (38, 33554432), (39, 2048), (40, -1), (41, -1), (42, -1), (43, 65536), (44, 65536), (45, 16777216), (46, 2097152), (47, -1), (48, -1), (49, -1), (50, -1), (51, 8388608), (52, -1)]

Covered at level 7 : set()

After reduction : 
 pending  : [9, 36, 5, 29, 30, 39, 43, 44, 45, 46, 51, 38, 23, 31, 33, 37]
 solution : [7, 10, 27]


Solution : [7, 10, 27] has cost 13.


Decide in level 7 among pending : [9, 36, 5, 29, 30, 39, 43, 44, 45, 46, 51, 38, 23, 31, 33, 37]

Coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 131072), (6, -1), (7, -1), (8, -1), (9, 67108864), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, 67108864), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, 262144), (30, 4096), (31, 8192), (32, -1), (33, 1048576), (34, -1), (35, -1), (36, 1024), (37, 2048), (38, 33554432), (39, 2048), (40, -1), (41, -1), (42, -1), (43, 65536), (44, 65536), (45, 16777216), (46, 2097152), (47, -1), (48, -1), (49, -1), (50, -1), (51, 8388608), (52, -1)]

Decide 9 with phase True at level 7

After decision at level 7
 pending : [36, 5, 29, 30, 39, 43, 44, 45, 46, 51, 38, 23, 31, 33, 37]
 solution : [7, 10, 27, 9]


New level: 8
 pending : [36, 5, 29, 30, 39, 43, 44, 45, 46, 51, 38, 23, 31, 33, 37]
 solution : [7, 10, 27, 9]


Before reduction : 
 pending  : [36, 5, 29, 30, 39, 43, 44, 45, 46, 51, 38, 23, 31, 33, 37]
 solution : [7, 10, 27, 9]

Essensial at level 8 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 131072), (6, -1), (7, -1), (8, -1), (9, 67108864), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, 67108864), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, 262144), (30, 4096), (31, 8192), (32, -1), (33, 1048576), (34, -1), (35, -1), (36, 1024), (37, 2048), (38, 33554432), (39, 2048), (40, -1), (41, -1), (42, -1), (43, 65536), (44, 65536), (45, 16777216), (46, 2097152), (47, -1), (48, -1), (49, -1), (50, -1), (51, 8388608), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 0), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, 0), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, 0), (30, 0), (31, 0), (32, -1), (33, 0), (34, -1), (35, -1), (36, 0), (37, 0), (38, 0), (39, 0), (40, -1), (41, -1), (42, -1), (43, 0), (44, 0), (45, 0), (46, 0), (47, -1), (48, -1), (49, -1), (50, -1), (51, 0), (52, -1)]

Covered at level 8 : {33, 36, 5, 38, 39, 37, 43, 44, 45, 46, 51, 23, 29, 30, 31}

After reduction : 
 pending  : []
 solution : [7, 10, 27, 9]


Before reduction : 
 pending  : []
 solution : [7, 10, 27, 9]

Essensial at level 8 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 0), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, 0), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, 0), (30, 0), (31, 0), (32, -1), (33, 0), (34, -1), (35, -1), (36, 0), (37, 0), (38, 0), (39, 0), (40, -1), (41, -1), (42, -1), (43, 0), (44, 0), (45, 0), (46, 0), (47, -1), (48, -1), (49, -1), (50, -1), (51, 0), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 8 : set()

After reduction : 
 pending  : []
 solution : [7, 10, 27, 9]


Solution : [7, 10, 27, 9] has cost 17.


Before backtrack at level 8
 pending : []
 solution : [7, 10, 27, 9]

After backtrack at level 8
 pending : [36, 5, 29, 30, 39, 43, 44, 45, 46, 51, 38, 23, 31, 33, 37]
 solution : [7, 10, 27, 9]


Invert decision for 9 at level 7


New level: 8
 pending : [36, 5, 29, 30, 39, 43, 44, 45, 46, 51, 38, 23, 31, 33, 37]
 solution : [7, 10, 27]


Before reduction : 
 pending  : [36, 5, 29, 30, 39, 43, 44, 45, 46, 51, 38, 23, 31, 33, 37]
 solution : [7, 10, 27]

Essensial at level 8 : {23}

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 0), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, 0), (30, 0), (31, 0), (32, -1), (33, 0), (34, -1), (35, -1), (36, 0), (37, 0), (38, 0), (39, 0), (40, -1), (41, -1), (42, -1), (43, 0), (44, 0), (45, 0), (46, 0), (47, -1), (48, -1), (49, -1), (50, -1), (51, 0), (52, -1)]

Covered at level 8 : {33, 36, 5, 38, 39, 37, 43, 44, 45, 46, 51, 29, 30, 31}

After reduction : 
 pending  : []
 solution : [7, 10, 27, 23]


Before reduction : 
 pending  : []
 solution : [7, 10, 27, 23]

Essensial at level 8 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 0), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, 0), (30, 0), (31, 0), (32, -1), (33, 0), (34, -1), (35, -1), (36, 0), (37, 0), (38, 0), (39, 0), (40, -1), (41, -1), (42, -1), (43, 0), (44, 0), (45, 0), (46, 0), (47, -1), (48, -1), (49, -1), (50, -1), (51, 0), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 8 : set()

After reduction : 
 pending  : []
 solution : [7, 10, 27, 23]


Solution : [7, 10, 27, 23] has cost 20.


Before backtrack at level 8
 pending : []
 solution : [7, 10, 27, 23]

After backtrack at level 8
 pending : [23, 36, 5, 29, 30, 39, 43, 44, 45, 46, 51, 38, 31, 33, 37]
 solution : [7, 10, 27]


Before backtrack at level 7
 pending : [23, 36, 5, 29, 30, 39, 43, 44, 45, 46, 51, 38, 31, 33, 37]
 solution : [7, 10, 27]

After backtrack at level 7
 pending : [23, 36, 5, 29, 30, 39, 43, 44, 45, 46, 51, 38, 31, 33, 37, 9]
 solution : [7, 10, 27]


Before backtrack at level 6
 pending : [23, 36, 5, 29, 30, 39, 43, 44, 45, 46, 51, 38, 31, 33, 37, 9]
 solution : [7, 10, 27]

After backtrack at level 6
 pending : [23, 36, 5, 29, 30, 39, 43, 44, 45, 46, 51, 38, 31, 33, 37, 9, 24]
 solution : [7, 10, 27]


Before backtrack at level 5
 pending : [23, 36, 5, 29, 30, 39, 43, 44, 45, 46, 51, 38, 31, 33, 37, 9, 24]
 solution : [7, 10, 27]

After backtrack at level 5
 pending : [23, 36, 5, 29, 30, 39, 43, 44, 45, 46, 51, 38, 31, 33, 37, 9, 24, 28]
 solution : [7, 10, 27]


Before backtrack at level 4
 pending : [23, 36, 5, 29, 30, 39, 43, 44, 45, 46, 51, 38, 31, 33, 37, 9, 24, 28]
 solution : [7, 10, 27]

After backtrack at level 4
 pending : [23, 36, 5, 29, 30, 39, 43, 44, 45, 46, 51, 38, 31, 33, 37, 9, 24, 28, 26, 41, 6, 21, 20, 17, 14, 19, 16, 18, 15, 13, 32]
 solution : [7, 10, 27]


Invert decision for 27 at level 3


New level: 4
 pending : [23, 36, 5, 29, 30, 39, 43, 44, 45, 46, 51, 38, 31, 33, 37, 9, 24, 28, 26, 41, 6, 21, 20, 17, 14, 19, 16, 18, 15, 13, 32]
 solution : [7, 10]


Before reduction : 
 pending  : [23, 36, 5, 29, 30, 39, 43, 44, 45, 46, 51, 38, 31, 33, 37, 9, 24, 28, 26, 41, 6, 21, 20, 17, 14, 19, 16, 18, 15, 13, 32]
 solution : [7, 10]

Essensial at level 4 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 524288), (6, 524288), (7, -1), (8, -1), (9, 67108864), (10, -1), (11, -1), (12, -1), (13, 1073741824), (14, 4194304), (15, 536870912), (16, 8388608), (17, 131072), (18, 33554432), (19, 16777216), (20, 262144), (21, 557056), (22, -1), (23, 67108864), (24, 268435456), (25, -1), (26, 2097152), (27, -1), (28, 536870912), (29, 524288), (30, 8192), (31, 8192), (32, 536870912), (33, 1048576), (34, -1), (35, -1), (36, 67108864), (37, 134217728), (38, 67108864), (39, 8192), (40, -1), (41, 2097152), (42, -1), (43, 262144), (44, 262144), (45, 33554432), (46, 8388608), (47, -1), (48, -1), (49, -1), (50, -1), (51, 33554432), (52, -1)]

Covered at level 4 : set()

After reduction : 
 pending  : [23, 36, 5, 29, 30, 39, 43, 44, 45, 46, 51, 38, 31, 33, 37, 9, 24, 28, 26, 41, 6, 21, 20, 17, 14, 19, 16, 18, 15, 13, 32]
 solution : [7, 10]


Solution : [7, 10] has cost 9.


Decide in level 4 among pending : [23, 36, 5, 29, 30, 39, 43, 44, 45, 46, 51, 38, 31, 33, 37, 9, 24, 28, 26, 41, 6, 21, 20, 17, 14, 19, 16, 18, 15, 13, 32]

Coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 524288), (6, 524288), (7, -1), (8, -1), (9, 67108864), (10, -1), (11, -1), (12, -1), (13, 1073741824), (14, 4194304), (15, 536870912), (16, 8388608), (17, 131072), (18, 33554432), (19, 16777216), (20, 262144), (21, 557056), (22, -1), (23, 67108864), (24, 268435456), (25, -1), (26, 2097152), (27, -1), (28, 536870912), (29, 524288), (30, 8192), (31, 8192), (32, 536870912), (33, 1048576), (34, -1), (35, -1), (36, 67108864), (37, 134217728), (38, 67108864), (39, 8192), (40, -1), (41, 2097152), (42, -1), (43, 262144), (44, 262144), (45, 33554432), (46, 8388608), (47, -1), (48, -1), (49, -1), (50, -1), (51, 33554432), (52, -1)]

Decide 13 with phase True at level 4

After decision at level 4
 pending : [23, 36, 5, 29, 30, 39, 43, 44, 45, 46, 51, 38, 31, 33, 37, 9, 24, 28, 26, 41, 6, 21, 20, 17, 14, 19, 16, 18, 15, 32]
 solution : [7, 10, 13]


New level: 5
 pending : [23, 36, 5, 29, 30, 39, 43, 44, 45, 46, 51, 38, 31, 33, 37, 9, 24, 28, 26, 41, 6, 21, 20, 17, 14, 19, 16, 18, 15, 32]
 solution : [7, 10, 13]


Before reduction : 
 pending  : [23, 36, 5, 29, 30, 39, 43, 44, 45, 46, 51, 38, 31, 33, 37, 9, 24, 28, 26, 41, 6, 21, 20, 17, 14, 19, 16, 18, 15, 32]
 solution : [7, 10, 13]

Essensial at level 5 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 524288), (6, 524288), (7, -1), (8, -1), (9, 67108864), (10, -1), (11, -1), (12, -1), (13, 1073741824), (14, 4194304), (15, 536870912), (16, 8388608), (17, 131072), (18, 33554432), (19, 16777216), (20, 262144), (21, 557056), (22, -1), (23, 67108864), (24, 268435456), (25, -1), (26, 2097152), (27, -1), (28, 536870912), (29, 524288), (30, 8192), (31, 8192), (32, 536870912), (33, 1048576), (34, -1), (35, -1), (36, 67108864), (37, 134217728), (38, 67108864), (39, 8192), (40, -1), (41, 2097152), (42, -1), (43, 262144), (44, 262144), (45, 33554432), (46, 8388608), (47, -1), (48, -1), (49, -1), (50, -1), (51, 33554432), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 131072), (6, 0), (7, -1), (8, -1), (9, 67108864), (10, -1), (11, -1), (12, -1), (13, -1), (14, 0), (15, 0), (16, 0), (17, 0), (18, 0), (19, 0), (20, 0), (21, 0), (22, -1), (23, 67108864), (24, 268435456), (25, -1), (26, 0), (27, -1), (28, 536870912), (29, 262144), (30, 4096), (31, 8192), (32, 536870912), (33, 1048576), (34, -1), (35, -1), (36, 1024), (37, 2048), (38, 33554432), (39, 2048), (40, -1), (41, 0), (42, -1), (43, 65536), (44, 65536), (45, 16777216), (46, 2097152), (47, -1), (48, -1), (49, -1), (50, -1), (51, 33554432), (52, -1)]

Covered at level 5 : {6, 41, 14, 15, 16, 17, 18, 19, 20, 21, 26}

After reduction : 
 pending  : [23, 36, 5, 29, 30, 39, 43, 44, 45, 46, 51, 38, 31, 33, 37, 9, 24, 28, 32]
 solution : [7, 10, 13]


Before reduction : 
 pending  : [23, 36, 5, 29, 30, 39, 43, 44, 45, 46, 51, 38, 31, 33, 37, 9, 24, 28, 32]
 solution : [7, 10, 13]

Essensial at level 5 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 131072), (6, 0), (7, -1), (8, -1), (9, 67108864), (10, -1), (11, -1), (12, -1), (13, -1), (14, 0), (15, 0), (16, 0), (17, 0), (18, 0), (19, 0), (20, 0), (21, 0), (22, -1), (23, 67108864), (24, 268435456), (25, -1), (26, 0), (27, -1), (28, 536870912), (29, 262144), (30, 4096), (31, 8192), (32, 536870912), (33, 1048576), (34, -1), (35, -1), (36, 1024), (37, 2048), (38, 33554432), (39, 2048), (40, -1), (41, 0), (42, -1), (43, 65536), (44, 65536), (45, 16777216), (46, 2097152), (47, -1), (48, -1), (49, -1), (50, -1), (51, 33554432), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 131072), (6, -1), (7, -1), (8, -1), (9, 67108864), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, 67108864), (24, 268435456), (25, -1), (26, -1), (27, -1), (28, 536870912), (29, 262144), (30, 4096), (31, 8192), (32, 536870912), (33, 1048576), (34, -1), (35, -1), (36, 1024), (37, 2048), (38, 33554432), (39, 2048), (40, -1), (41, -1), (42, -1), (43, 65536), (44, 65536), (45, 16777216), (46, 2097152), (47, -1), (48, -1), (49, -1), (50, -1), (51, 33554432), (52, -1)]

Covered at level 5 : set()

After reduction : 
 pending  : [23, 36, 5, 29, 30, 39, 43, 44, 45, 46, 51, 38, 31, 33, 37, 9, 24, 28, 32]
 solution : [7, 10, 13]


Solution : [7, 10, 13] has cost 16.


Decide in level 5 among pending : [23, 36, 5, 29, 30, 39, 43, 44, 45, 46, 51, 38, 31, 33, 37, 9, 24, 28, 32]

Coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 131072), (6, -1), (7, -1), (8, -1), (9, 67108864), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, 67108864), (24, 268435456), (25, -1), (26, -1), (27, -1), (28, 536870912), (29, 262144), (30, 4096), (31, 8192), (32, 536870912), (33, 1048576), (34, -1), (35, -1), (36, 1024), (37, 2048), (38, 33554432), (39, 2048), (40, -1), (41, -1), (42, -1), (43, 65536), (44, 65536), (45, 16777216), (46, 2097152), (47, -1), (48, -1), (49, -1), (50, -1), (51, 33554432), (52, -1)]

Decide 28 with phase True at level 5

After decision at level 5
 pending : [23, 36, 5, 29, 30, 39, 43, 44, 45, 46, 51, 38, 31, 33, 37, 9, 24, 32]
 solution : [7, 10, 13, 28]


New level: 6
 pending : [23, 36, 5, 29, 30, 39, 43, 44, 45, 46, 51, 38, 31, 33, 37, 9, 24, 32]
 solution : [7, 10, 13, 28]


Before reduction : 
 pending  : [23, 36, 5, 29, 30, 39, 43, 44, 45, 46, 51, 38, 31, 33, 37, 9, 24, 32]
 solution : [7, 10, 13, 28]

Essensial at level 6 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 131072), (6, -1), (7, -1), (8, -1), (9, 67108864), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, 67108864), (24, 268435456), (25, -1), (26, -1), (27, -1), (28, 536870912), (29, 262144), (30, 4096), (31, 8192), (32, 536870912), (33, 1048576), (34, -1), (35, -1), (36, 1024), (37, 2048), (38, 33554432), (39, 2048), (40, -1), (41, -1), (42, -1), (43, 65536), (44, 65536), (45, 16777216), (46, 2097152), (47, -1), (48, -1), (49, -1), (50, -1), (51, 33554432), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 131072), (6, -1), (7, -1), (8, -1), (9, 67108864), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, 67108864), (24, 134217728), (25, -1), (26, -1), (27, -1), (28, -1), (29, 262144), (30, 4096), (31, 4096), (32, 268435456), (33, 524288), (34, -1), (35, -1), (36, 1024), (37, 2048), (38, 33554432), (39, 2048), (40, -1), (41, -1), (42, -1), (43, 65536), (44, 65536), (45, 16777216), (46, 2097152), (47, -1), (48, -1), (49, -1), (50, -1), (51, 33554432), (52, -1)]

Covered at level 6 : set()

After reduction : 
 pending  : [23, 36, 5, 29, 30, 39, 43, 44, 45, 46, 51, 38, 31, 33, 37, 9, 24, 32]
 solution : [7, 10, 13, 28]


Solution : [7, 10, 13, 28] has cost 20.


Before backtrack at level 6
 pending : [23, 36, 5, 29, 30, 39, 43, 44, 45, 46, 51, 38, 31, 33, 37, 9, 24, 32]
 solution : [7, 10, 13, 28]

After backtrack at level 6
 pending : [23, 36, 5, 29, 30, 39, 43, 44, 45, 46, 51, 38, 31, 33, 37, 9, 24, 32]
 solution : [7, 10, 13, 28]


Invert decision for 28 at level 5


New level: 6
 pending : [23, 36, 5, 29, 30, 39, 43, 44, 45, 46, 51, 38, 31, 33, 37, 9, 24, 32]
 solution : [7, 10, 13]


Before reduction : 
 pending  : [23, 36, 5, 29, 30, 39, 43, 44, 45, 46, 51, 38, 31, 33, 37, 9, 24, 32]
 solution : [7, 10, 13]

Essensial at level 6 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 131072), (6, -1), (7, -1), (8, -1), (9, 67108864), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, 67108864), (24, 134217728), (25, -1), (26, -1), (27, -1), (28, -1), (29, 262144), (30, 4096), (31, 4096), (32, 268435456), (33, 524288), (34, -1), (35, -1), (36, 1024), (37, 2048), (38, 33554432), (39, 2048), (40, -1), (41, -1), (42, -1), (43, 65536), (44, 65536), (45, 16777216), (46, 2097152), (47, -1), (48, -1), (49, -1), (50, -1), (51, 33554432), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 131072), (6, -1), (7, -1), (8, -1), (9, 67108864), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, 67108864), (24, 268435456), (25, -1), (26, -1), (27, -1), (28, -1), (29, 262144), (30, 4096), (31, 8192), (32, 536870912), (33, 1048576), (34, -1), (35, -1), (36, 1024), (37, 2048), (38, 33554432), (39, 2048), (40, -1), (41, -1), (42, -1), (43, 65536), (44, 65536), (45, 16777216), (46, 2097152), (47, -1), (48, -1), (49, -1), (50, -1), (51, 33554432), (52, -1)]

Covered at level 6 : set()

After reduction : 
 pending  : [23, 36, 5, 29, 30, 39, 43, 44, 45, 46, 51, 38, 31, 33, 37, 9, 24, 32]
 solution : [7, 10, 13]


Solution : [7, 10, 13] has cost 16.


Decide in level 6 among pending : [23, 36, 5, 29, 30, 39, 43, 44, 45, 46, 51, 38, 31, 33, 37, 9, 24, 32]

Coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 131072), (6, -1), (7, -1), (8, -1), (9, 67108864), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, 67108864), (24, 268435456), (25, -1), (26, -1), (27, -1), (28, -1), (29, 262144), (30, 4096), (31, 8192), (32, 536870912), (33, 1048576), (34, -1), (35, -1), (36, 1024), (37, 2048), (38, 33554432), (39, 2048), (40, -1), (41, -1), (42, -1), (43, 65536), (44, 65536), (45, 16777216), (46, 2097152), (47, -1), (48, -1), (49, -1), (50, -1), (51, 33554432), (52, -1)]

Decide 32 with phase True at level 6

After decision at level 6
 pending : [23, 36, 5, 29, 30, 39, 43, 44, 45, 46, 51, 38, 31, 33, 37, 9, 24]
 solution : [7, 10, 13, 32]


New level: 7
 pending : [23, 36, 5, 29, 30, 39, 43, 44, 45, 46, 51, 38, 31, 33, 37, 9, 24]
 solution : [7, 10, 13, 32]


Before reduction : 
 pending  : [23, 36, 5, 29, 30, 39, 43, 44, 45, 46, 51, 38, 31, 33, 37, 9, 24]
 solution : [7, 10, 13, 32]

Essensial at level 7 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 131072), (6, -1), (7, -1), (8, -1), (9, 67108864), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, 67108864), (24, 268435456), (25, -1), (26, -1), (27, -1), (28, -1), (29, 262144), (30, 4096), (31, 8192), (32, 536870912), (33, 1048576), (34, -1), (35, -1), (36, 1024), (37, 2048), (38, 33554432), (39, 2048), (40, -1), (41, -1), (42, -1), (43, 65536), (44, 65536), (45, 16777216), (46, 2097152), (47, -1), (48, -1), (49, -1), (50, -1), (51, 33554432), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 32768), (6, -1), (7, -1), (8, -1), (9, 67108864), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, 67108864), (24, 4096), (25, -1), (26, -1), (27, -1), (28, -1), (29, 65536), (30, 1024), (31, 0), (32, -1), (33, 0), (34, -1), (35, -1), (36, 512), (37, 0), (38, 8388608), (39, 512), (40, -1), (41, -1), (42, -1), (43, 16384), (44, 16384), (45, 4194304), (46, 524288), (47, -1), (48, -1), (49, -1), (50, -1), (51, 8388608), (52, -1)]

Covered at level 7 : {33, 37, 31}

After reduction : 
 pending  : [23, 36, 5, 29, 30, 39, 43, 44, 45, 46, 51, 38, 9, 24]
 solution : [7, 10, 13, 32]


Before reduction : 
 pending  : [23, 36, 5, 29, 30, 39, 43, 44, 45, 46, 51, 38, 9, 24]
 solution : [7, 10, 13, 32]

Essensial at level 7 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 32768), (6, -1), (7, -1), (8, -1), (9, 67108864), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, 67108864), (24, 4096), (25, -1), (26, -1), (27, -1), (28, -1), (29, 65536), (30, 1024), (31, 0), (32, -1), (33, 0), (34, -1), (35, -1), (36, 512), (37, 0), (38, 8388608), (39, 512), (40, -1), (41, -1), (42, -1), (43, 16384), (44, 16384), (45, 4194304), (46, 524288), (47, -1), (48, -1), (49, -1), (50, -1), (51, 8388608), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 32768), (6, -1), (7, -1), (8, -1), (9, 67108864), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, 67108864), (24, 4096), (25, -1), (26, -1), (27, -1), (28, -1), (29, 65536), (30, 1024), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, 512), (37, -1), (38, 8388608), (39, 512), (40, -1), (41, -1), (42, -1), (43, 16384), (44, 16384), (45, 4194304), (46, 524288), (47, -1), (48, -1), (49, -1), (50, -1), (51, 8388608), (52, -1)]

Covered at level 7 : set()

After reduction : 
 pending  : [23, 36, 5, 29, 30, 39, 43, 44, 45, 46, 51, 38, 9, 24]
 solution : [7, 10, 13, 32]


Solution : [7, 10, 13, 32] has cost 29.


Before backtrack at level 7
 pending : [23, 36, 5, 29, 30, 39, 43, 44, 45, 46, 51, 38, 9, 24]
 solution : [7, 10, 13, 32]

After backtrack at level 7
 pending : [23, 36, 5, 29, 30, 39, 43, 44, 45, 46, 51, 38, 9, 24, 31, 33, 37]
 solution : [7, 10, 13, 32]


Invert decision for 32 at level 6


New level: 7
 pending : [23, 36, 5, 29, 30, 39, 43, 44, 45, 46, 51, 38, 9, 24, 31, 33, 37]
 solution : [7, 10, 13]


Before reduction : 
 pending  : [23, 36, 5, 29, 30, 39, 43, 44, 45, 46, 51, 38, 9, 24, 31, 33, 37]
 solution : [7, 10, 13]

Essensial at level 7 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 32768), (6, -1), (7, -1), (8, -1), (9, 67108864), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, 67108864), (24, 4096), (25, -1), (26, -1), (27, -1), (28, -1), (29, 65536), (30, 1024), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, 512), (37, -1), (38, 8388608), (39, 512), (40, -1), (41, -1), (42, -1), (43, 16384), (44, 16384), (45, 4194304), (46, 524288), (47, -1), (48, -1), (49, -1), (50, -1), (51, 8388608), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 131072), (6, -1), (7, -1), (8, -1), (9, 67108864), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, 67108864), (24, 268435456), (25, -1), (26, -1), (27, -1), (28, -1), (29, 262144), (30, 4096), (31, 8192), (32, -1), (33, 1048576), (34, -1), (35, -1), (36, 1024), (37, 2048), (38, 33554432), (39, 2048), (40, -1), (41, -1), (42, -1), (43, 65536), (44, 65536), (45, 16777216), (46, 2097152), (47, -1), (48, -1), (49, -1), (50, -1), (51, 33554432), (52, -1)]

Covered at level 7 : set()

After reduction : 
 pending  : [23, 36, 5, 29, 30, 39, 43, 44, 45, 46, 51, 38, 9, 24, 31, 33, 37]
 solution : [7, 10, 13]


Solution : [7, 10, 13] has cost 16.


Decide in level 7 among pending : [23, 36, 5, 29, 30, 39, 43, 44, 45, 46, 51, 38, 9, 24, 31, 33, 37]

Coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 131072), (6, -1), (7, -1), (8, -1), (9, 67108864), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, 67108864), (24, 268435456), (25, -1), (26, -1), (27, -1), (28, -1), (29, 262144), (30, 4096), (31, 8192), (32, -1), (33, 1048576), (34, -1), (35, -1), (36, 1024), (37, 2048), (38, 33554432), (39, 2048), (40, -1), (41, -1), (42, -1), (43, 65536), (44, 65536), (45, 16777216), (46, 2097152), (47, -1), (48, -1), (49, -1), (50, -1), (51, 33554432), (52, -1)]

Decide 24 with phase True at level 7

After decision at level 7
 pending : [23, 36, 5, 29, 30, 39, 43, 44, 45, 46, 51, 38, 9, 31, 33, 37]
 solution : [7, 10, 13, 24]


New level: 8
 pending : [23, 36, 5, 29, 30, 39, 43, 44, 45, 46, 51, 38, 9, 31, 33, 37]
 solution : [7, 10, 13, 24]


Before reduction : 
 pending  : [23, 36, 5, 29, 30, 39, 43, 44, 45, 46, 51, 38, 9, 31, 33, 37]
 solution : [7, 10, 13, 24]

Essensial at level 8 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 131072), (6, -1), (7, -1), (8, -1), (9, 67108864), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, 67108864), (24, 268435456), (25, -1), (26, -1), (27, -1), (28, -1), (29, 262144), (30, 4096), (31, 8192), (32, -1), (33, 1048576), (34, -1), (35, -1), (36, 1024), (37, 2048), (38, 33554432), (39, 2048), (40, -1), (41, -1), (42, -1), (43, 65536), (44, 65536), (45, 16777216), (46, 2097152), (47, -1), (48, -1), (49, -1), (50, -1), (51, 33554432), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 32768), (6, -1), (7, -1), (8, -1), (9, 16777216), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, 16777216), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, 65536), (30, 1024), (31, 0), (32, -1), (33, 0), (34, -1), (35, -1), (36, 512), (37, 0), (38, 16777216), (39, 512), (40, -1), (41, -1), (42, -1), (43, 16384), (44, 16384), (45, 8388608), (46, 524288), (47, -1), (48, -1), (49, -1), (50, -1), (51, 16777216), (52, -1)]

Covered at level 8 : {33, 37, 31}

After reduction : 
 pending  : [23, 36, 5, 29, 30, 39, 43, 44, 45, 46, 51, 38, 9]
 solution : [7, 10, 13, 24]


Before reduction : 
 pending  : [23, 36, 5, 29, 30, 39, 43, 44, 45, 46, 51, 38, 9]
 solution : [7, 10, 13, 24]

Essensial at level 8 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 32768), (6, -1), (7, -1), (8, -1), (9, 16777216), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, 16777216), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, 65536), (30, 1024), (31, 0), (32, -1), (33, 0), (34, -1), (35, -1), (36, 512), (37, 0), (38, 16777216), (39, 512), (40, -1), (41, -1), (42, -1), (43, 16384), (44, 16384), (45, 8388608), (46, 524288), (47, -1), (48, -1), (49, -1), (50, -1), (51, 16777216), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 32768), (6, -1), (7, -1), (8, -1), (9, 16777216), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, 16777216), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, 65536), (30, 1024), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, 512), (37, -1), (38, 16777216), (39, 512), (40, -1), (41, -1), (42, -1), (43, 16384), (44, 16384), (45, 8388608), (46, 524288), (47, -1), (48, -1), (49, -1), (50, -1), (51, 16777216), (52, -1)]

Covered at level 8 : set()

After reduction : 
 pending  : [23, 36, 5, 29, 30, 39, 43, 44, 45, 46, 51, 38, 9]
 solution : [7, 10, 13, 24]


Solution : [7, 10, 13, 24] has cost 23.


Before backtrack at level 8
 pending : [23, 36, 5, 29, 30, 39, 43, 44, 45, 46, 51, 38, 9]
 solution : [7, 10, 13, 24]

After backtrack at level 8
 pending : [23, 36, 5, 29, 30, 39, 43, 44, 45, 46, 51, 38, 9, 31, 33, 37]
 solution : [7, 10, 13, 24]


Invert decision for 24 at level 7


New level: 8
 pending : [23, 36, 5, 29, 30, 39, 43, 44, 45, 46, 51, 38, 9, 31, 33, 37]
 solution : [7, 10, 13]


Before reduction : 
 pending  : [23, 36, 5, 29, 30, 39, 43, 44, 45, 46, 51, 38, 9, 31, 33, 37]
 solution : [7, 10, 13]

Essensial at level 8 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 32768), (6, -1), (7, -1), (8, -1), (9, 16777216), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, 16777216), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, 65536), (30, 1024), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, 512), (37, -1), (38, 16777216), (39, 512), (40, -1), (41, -1), (42, -1), (43, 16384), (44, 16384), (45, 8388608), (46, 524288), (47, -1), (48, -1), (49, -1), (50, -1), (51, 16777216), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 131072), (6, -1), (7, -1), (8, -1), (9, 67108864), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, 67108864), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, 262144), (30, 4096), (31, 8192), (32, -1), (33, 1048576), (34, -1), (35, -1), (36, 1024), (37, 2048), (38, 33554432), (39, 2048), (40, -1), (41, -1), (42, -1), (43, 65536), (44, 65536), (45, 16777216), (46, 2097152), (47, -1), (48, -1), (49, -1), (50, -1), (51, 33554432), (52, -1)]

Covered at level 8 : set()

After reduction : 
 pending  : [23, 36, 5, 29, 30, 39, 43, 44, 45, 46, 51, 38, 9, 31, 33, 37]
 solution : [7, 10, 13]


Solution : [7, 10, 13] has cost 16.


Decide in level 8 among pending : [23, 36, 5, 29, 30, 39, 43, 44, 45, 46, 51, 38, 9, 31, 33, 37]

Coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 131072), (6, -1), (7, -1), (8, -1), (9, 67108864), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, 67108864), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, 262144), (30, 4096), (31, 8192), (32, -1), (33, 1048576), (34, -1), (35, -1), (36, 1024), (37, 2048), (38, 33554432), (39, 2048), (40, -1), (41, -1), (42, -1), (43, 65536), (44, 65536), (45, 16777216), (46, 2097152), (47, -1), (48, -1), (49, -1), (50, -1), (51, 33554432), (52, -1)]

Decide 23 with phase True at level 8

After decision at level 8
 pending : [36, 5, 29, 30, 39, 43, 44, 45, 46, 51, 38, 9, 31, 33, 37]
 solution : [7, 10, 13, 23]


New level: 9
 pending : [36, 5, 29, 30, 39, 43, 44, 45, 46, 51, 38, 9, 31, 33, 37]
 solution : [7, 10, 13, 23]


Before reduction : 
 pending  : [36, 5, 29, 30, 39, 43, 44, 45, 46, 51, 38, 9, 31, 33, 37]
 solution : [7, 10, 13, 23]

Essensial at level 9 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 131072), (6, -1), (7, -1), (8, -1), (9, 67108864), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, 67108864), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, 262144), (30, 4096), (31, 8192), (32, -1), (33, 1048576), (34, -1), (35, -1), (36, 1024), (37, 2048), (38, 33554432), (39, 2048), (40, -1), (41, -1), (42, -1), (43, 65536), (44, 65536), (45, 16777216), (46, 2097152), (47, -1), (48, -1), (49, -1), (50, -1), (51, 33554432), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 0), (6, -1), (7, -1), (8, -1), (9, 0), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, 0), (30, 0), (31, 0), (32, -1), (33, 0), (34, -1), (35, -1), (36, 0), (37, 0), (38, 0), (39, 0), (40, -1), (41, -1), (42, -1), (43, 0), (44, 0), (45, 0), (46, 0), (47, -1), (48, -1), (49, -1), (50, -1), (51, 0), (52, -1)]

Covered at level 9 : {33, 36, 5, 38, 39, 37, 9, 43, 44, 45, 46, 51, 29, 30, 31}

After reduction : 
 pending  : []
 solution : [7, 10, 13, 23]


Before reduction : 
 pending  : []
 solution : [7, 10, 13, 23]

Essensial at level 9 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 0), (6, -1), (7, -1), (8, -1), (9, 0), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, 0), (30, 0), (31, 0), (32, -1), (33, 0), (34, -1), (35, -1), (36, 0), (37, 0), (38, 0), (39, 0), (40, -1), (41, -1), (42, -1), (43, 0), (44, 0), (45, 0), (46, 0), (47, -1), (48, -1), (49, -1), (50, -1), (51, 0), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 9 : set()

After reduction : 
 pending  : []
 solution : [7, 10, 13, 23]


Solution : [7, 10, 13, 23] has cost 23.


Before backtrack at level 9
 pending : []
 solution : [7, 10, 13, 23]

After backtrack at level 9
 pending : [36, 5, 29, 30, 39, 43, 44, 45, 46, 51, 38, 9, 31, 33, 37]
 solution : [7, 10, 13, 23]


Invert decision for 23 at level 8


New level: 9
 pending : [36, 5, 29, 30, 39, 43, 44, 45, 46, 51, 38, 9, 31, 33, 37]
 solution : [7, 10, 13]


Before reduction : 
 pending  : [36, 5, 29, 30, 39, 43, 44, 45, 46, 51, 38, 9, 31, 33, 37]
 solution : [7, 10, 13]

Essensial at level 9 : {9}

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 0), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, 0), (30, 0), (31, 0), (32, -1), (33, 0), (34, -1), (35, -1), (36, 0), (37, 0), (38, 0), (39, 0), (40, -1), (41, -1), (42, -1), (43, 0), (44, 0), (45, 0), (46, 0), (47, -1), (48, -1), (49, -1), (50, -1), (51, 0), (52, -1)]

Covered at level 9 : {33, 36, 5, 38, 39, 37, 43, 44, 45, 46, 51, 29, 30, 31}

After reduction : 
 pending  : []
 solution : [7, 10, 13, 9]


Before reduction : 
 pending  : []
 solution : [7, 10, 13, 9]

Essensial at level 9 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 0), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, 0), (30, 0), (31, 0), (32, -1), (33, 0), (34, -1), (35, -1), (36, 0), (37, 0), (38, 0), (39, 0), (40, -1), (41, -1), (42, -1), (43, 0), (44, 0), (45, 0), (46, 0), (47, -1), (48, -1), (49, -1), (50, -1), (51, 0), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 9 : set()

After reduction : 
 pending  : []
 solution : [7, 10, 13, 9]


Solution : [7, 10, 13, 9] has cost 20.


Before backtrack at level 9
 pending : []
 solution : [7, 10, 13, 9]

After backtrack at level 9
 pending : [9, 36, 5, 29, 30, 39, 43, 44, 45, 46, 51, 38, 31, 33, 37]
 solution : [7, 10, 13]


Before backtrack at level 8
 pending : [9, 36, 5, 29, 30, 39, 43, 44, 45, 46, 51, 38, 31, 33, 37]
 solution : [7, 10, 13]

After backtrack at level 8
 pending : [9, 36, 5, 29, 30, 39, 43, 44, 45, 46, 51, 38, 31, 33, 37, 23]
 solution : [7, 10, 13]


Before backtrack at level 7
 pending : [9, 36, 5, 29, 30, 39, 43, 44, 45, 46, 51, 38, 31, 33, 37, 23]
 solution : [7, 10, 13]

After backtrack at level 7
 pending : [9, 36, 5, 29, 30, 39, 43, 44, 45, 46, 51, 38, 31, 33, 37, 23, 24]
 solution : [7, 10, 13]


Before backtrack at level 6
 pending : [9, 36, 5, 29, 30, 39, 43, 44, 45, 46, 51, 38, 31, 33, 37, 23, 24]
 solution : [7, 10, 13]

After backtrack at level 6
 pending : [9, 36, 5, 29, 30, 39, 43, 44, 45, 46, 51, 38, 31, 33, 37, 23, 24, 32]
 solution : [7, 10, 13]


Before backtrack at level 5
 pending : [9, 36, 5, 29, 30, 39, 43, 44, 45, 46, 51, 38, 31, 33, 37, 23, 24, 32]
 solution : [7, 10, 13]

After backtrack at level 5
 pending : [9, 36, 5, 29, 30, 39, 43, 44, 45, 46, 51, 38, 31, 33, 37, 23, 24, 32, 26, 41, 6, 21, 20, 17, 14, 19, 16, 18, 15, 28]
 solution : [7, 10, 13]


Invert decision for 13 at level 4


New level: 5
 pending : [9, 36, 5, 29, 30, 39, 43, 44, 45, 46, 51, 38, 31, 33, 37, 23, 24, 32, 26, 41, 6, 21, 20, 17, 14, 19, 16, 18, 15, 28]
 solution : [7, 10]


Before reduction : 
 pending  : [9, 36, 5, 29, 30, 39, 43, 44, 45, 46, 51, 38, 31, 33, 37, 23, 24, 32, 26, 41, 6, 21, 20, 17, 14, 19, 16, 18, 15, 28]
 solution : [7, 10]

Essensial at level 5 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 524288), (6, 524288), (7, -1), (8, -1), (9, 67108864), (10, -1), (11, -1), (12, -1), (13, -1), (14, 4194304), (15, 536870912), (16, 8388608), (17, 131072), (18, 33554432), (19, 16777216), (20, 262144), (21, 557056), (22, -1), (23, 67108864), (24, 268435456), (25, -1), (26, 2097152), (27, -1), (28, 536870912), (29, 524288), (30, 8192), (31, 8192), (32, 536870912), (33, 1048576), (34, -1), (35, -1), (36, 67108864), (37, 134217728), (38, 67108864), (39, 8192), (40, -1), (41, 2097152), (42, -1), (43, 262144), (44, 262144), (45, 33554432), (46, 8388608), (47, -1), (48, -1), (49, -1), (50, -1), (51, 33554432), (52, -1)]

Covered at level 5 : set()

After reduction : 
 pending  : [9, 36, 5, 29, 30, 39, 43, 44, 45, 46, 51, 38, 31, 33, 37, 23, 24, 32, 26, 41, 6, 21, 20, 17, 14, 19, 16, 18, 15, 28]
 solution : [7, 10]


Solution : [7, 10] has cost 9.


Decide in level 5 among pending : [9, 36, 5, 29, 30, 39, 43, 44, 45, 46, 51, 38, 31, 33, 37, 23, 24, 32, 26, 41, 6, 21, 20, 17, 14, 19, 16, 18, 15, 28]

Coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 524288), (6, 524288), (7, -1), (8, -1), (9, 67108864), (10, -1), (11, -1), (12, -1), (13, -1), (14, 4194304), (15, 536870912), (16, 8388608), (17, 131072), (18, 33554432), (19, 16777216), (20, 262144), (21, 557056), (22, -1), (23, 67108864), (24, 268435456), (25, -1), (26, 2097152), (27, -1), (28, 536870912), (29, 524288), (30, 8192), (31, 8192), (32, 536870912), (33, 1048576), (34, -1), (35, -1), (36, 67108864), (37, 134217728), (38, 67108864), (39, 8192), (40, -1), (41, 2097152), (42, -1), (43, 262144), (44, 262144), (45, 33554432), (46, 8388608), (47, -1), (48, -1), (49, -1), (50, -1), (51, 33554432), (52, -1)]

Decide 32 with phase True at level 5

After decision at level 5
 pending : [9, 36, 5, 29, 30, 39, 43, 44, 45, 46, 51, 38, 31, 33, 37, 23, 24, 26, 41, 6, 21, 20, 17, 14, 19, 16, 18, 15, 28]
 solution : [7, 10, 32]


New level: 6
 pending : [9, 36, 5, 29, 30, 39, 43, 44, 45, 46, 51, 38, 31, 33, 37, 23, 24, 26, 41, 6, 21, 20, 17, 14, 19, 16, 18, 15, 28]
 solution : [7, 10, 32]


Before reduction : 
 pending  : [9, 36, 5, 29, 30, 39, 43, 44, 45, 46, 51, 38, 31, 33, 37, 23, 24, 26, 41, 6, 21, 20, 17, 14, 19, 16, 18, 15, 28]
 solution : [7, 10, 32]

Essensial at level 6 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 524288), (6, 524288), (7, -1), (8, -1), (9, 67108864), (10, -1), (11, -1), (12, -1), (13, -1), (14, 4194304), (15, 536870912), (16, 8388608), (17, 131072), (18, 33554432), (19, 16777216), (20, 262144), (21, 557056), (22, -1), (23, 67108864), (24, 268435456), (25, -1), (26, 2097152), (27, -1), (28, 536870912), (29, 524288), (30, 8192), (31, 8192), (32, 536870912), (33, 1048576), (34, -1), (35, -1), (36, 67108864), (37, 134217728), (38, 67108864), (39, 8192), (40, -1), (41, 2097152), (42, -1), (43, 262144), (44, 262144), (45, 33554432), (46, 8388608), (47, -1), (48, -1), (49, -1), (50, -1), (51, 33554432), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 131072), (6, 524288), (7, -1), (8, -1), (9, 67108864), (10, -1), (11, -1), (12, -1), (13, -1), (14, 4194304), (15, 536870912), (16, 8388608), (17, 131072), (18, 33554432), (19, 16777216), (20, 262144), (21, 557056), (22, -1), (23, 67108864), (24, 8192), (25, -1), (26, 2097152), (27, -1), (28, 524288), (29, 131072), (30, 2048), (31, 0), (32, -1), (33, 0), (34, -1), (35, -1), (36, 67108864), (37, 4096), (38, 16777216), (39, 2048), (40, -1), (41, 2097152), (42, -1), (43, 65536), (44, 65536), (45, 8388608), (46, 2097152), (47, -1), (48, -1), (49, -1), (50, -1), (51, 8388608), (52, -1)]

Covered at level 6 : {33, 31}

After reduction : 
 pending  : [9, 36, 5, 29, 30, 39, 43, 44, 45, 46, 51, 38, 37, 23, 24, 26, 41, 6, 21, 20, 17, 14, 19, 16, 18, 15, 28]
 solution : [7, 10, 32]


Before reduction : 
 pending  : [9, 36, 5, 29, 30, 39, 43, 44, 45, 46, 51, 38, 37, 23, 24, 26, 41, 6, 21, 20, 17, 14, 19, 16, 18, 15, 28]
 solution : [7, 10, 32]

Essensial at level 6 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 131072), (6, 524288), (7, -1), (8, -1), (9, 67108864), (10, -1), (11, -1), (12, -1), (13, -1), (14, 4194304), (15, 536870912), (16, 8388608), (17, 131072), (18, 33554432), (19, 16777216), (20, 262144), (21, 557056), (22, -1), (23, 67108864), (24, 8192), (25, -1), (26, 2097152), (27, -1), (28, 524288), (29, 131072), (30, 2048), (31, 0), (32, -1), (33, 0), (34, -1), (35, -1), (36, 67108864), (37, 4096), (38, 16777216), (39, 2048), (40, -1), (41, 2097152), (42, -1), (43, 65536), (44, 65536), (45, 8388608), (46, 2097152), (47, -1), (48, -1), (49, -1), (50, -1), (51, 8388608), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 131072), (6, 524288), (7, -1), (8, -1), (9, 67108864), (10, -1), (11, -1), (12, -1), (13, -1), (14, 4194304), (15, 536870912), (16, 8388608), (17, 131072), (18, 33554432), (19, 16777216), (20, 262144), (21, 557056), (22, -1), (23, 67108864), (24, 8192), (25, -1), (26, 2097152), (27, -1), (28, 524288), (29, 131072), (30, 2048), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, 67108864), (37, 4096), (38, 16777216), (39, 2048), (40, -1), (41, 2097152), (42, -1), (43, 65536), (44, 65536), (45, 8388608), (46, 2097152), (47, -1), (48, -1), (49, -1), (50, -1), (51, 8388608), (52, -1)]

Covered at level 6 : set()

After reduction : 
 pending  : [9, 36, 5, 29, 30, 39, 43, 44, 45, 46, 51, 38, 37, 23, 24, 26, 41, 6, 21, 20, 17, 14, 19, 16, 18, 15, 28]
 solution : [7, 10, 32]


Solution : [7, 10, 32] has cost 22.


Before backtrack at level 6
 pending : [9, 36, 5, 29, 30, 39, 43, 44, 45, 46, 51, 38, 37, 23, 24, 26, 41, 6, 21, 20, 17, 14, 19, 16, 18, 15, 28]
 solution : [7, 10, 32]

After backtrack at level 6
 pending : [9, 36, 5, 29, 30, 39, 43, 44, 45, 46, 51, 38, 37, 23, 24, 26, 41, 6, 21, 20, 17, 14, 19, 16, 18, 15, 28, 31, 33]
 solution : [7, 10, 32]


Invert decision for 32 at level 5


New level: 6
 pending : [9, 36, 5, 29, 30, 39, 43, 44, 45, 46, 51, 38, 37, 23, 24, 26, 41, 6, 21, 20, 17, 14, 19, 16, 18, 15, 28, 31, 33]
 solution : [7, 10]


Before reduction : 
 pending  : [9, 36, 5, 29, 30, 39, 43, 44, 45, 46, 51, 38, 37, 23, 24, 26, 41, 6, 21, 20, 17, 14, 19, 16, 18, 15, 28, 31, 33]
 solution : [7, 10]

Essensial at level 6 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 131072), (6, 524288), (7, -1), (8, -1), (9, 67108864), (10, -1), (11, -1), (12, -1), (13, -1), (14, 4194304), (15, 536870912), (16, 8388608), (17, 131072), (18, 33554432), (19, 16777216), (20, 262144), (21, 557056), (22, -1), (23, 67108864), (24, 8192), (25, -1), (26, 2097152), (27, -1), (28, 524288), (29, 131072), (30, 2048), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, 67108864), (37, 4096), (38, 16777216), (39, 2048), (40, -1), (41, 2097152), (42, -1), (43, 65536), (44, 65536), (45, 8388608), (46, 2097152), (47, -1), (48, -1), (49, -1), (50, -1), (51, 8388608), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 524288), (6, 524288), (7, -1), (8, -1), (9, 67108864), (10, -1), (11, -1), (12, -1), (13, -1), (14, 4194304), (15, 536870912), (16, 8388608), (17, 131072), (18, 33554432), (19, 16777216), (20, 262144), (21, 557056), (22, -1), (23, 67108864), (24, 268435456), (25, -1), (26, 2097152), (27, -1), (28, 536870912), (29, 524288), (30, 8192), (31, 8192), (32, -1), (33, 1048576), (34, -1), (35, -1), (36, 67108864), (37, 134217728), (38, 67108864), (39, 8192), (40, -1), (41, 2097152), (42, -1), (43, 262144), (44, 262144), (45, 33554432), (46, 8388608), (47, -1), (48, -1), (49, -1), (50, -1), (51, 33554432), (52, -1)]

Covered at level 6 : set()

After reduction : 
 pending  : [9, 36, 5, 29, 30, 39, 43, 44, 45, 46, 51, 38, 37, 23, 24, 26, 41, 6, 21, 20, 17, 14, 19, 16, 18, 15, 28, 31, 33]
 solution : [7, 10]


Solution : [7, 10] has cost 9.


Decide in level 6 among pending : [9, 36, 5, 29, 30, 39, 43, 44, 45, 46, 51, 38, 37, 23, 24, 26, 41, 6, 21, 20, 17, 14, 19, 16, 18, 15, 28, 31, 33]

Coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 524288), (6, 524288), (7, -1), (8, -1), (9, 67108864), (10, -1), (11, -1), (12, -1), (13, -1), (14, 4194304), (15, 536870912), (16, 8388608), (17, 131072), (18, 33554432), (19, 16777216), (20, 262144), (21, 557056), (22, -1), (23, 67108864), (24, 268435456), (25, -1), (26, 2097152), (27, -1), (28, 536870912), (29, 524288), (30, 8192), (31, 8192), (32, -1), (33, 1048576), (34, -1), (35, -1), (36, 67108864), (37, 134217728), (38, 67108864), (39, 8192), (40, -1), (41, 2097152), (42, -1), (43, 262144), (44, 262144), (45, 33554432), (46, 8388608), (47, -1), (48, -1), (49, -1), (50, -1), (51, 33554432), (52, -1)]

Decide 15 with phase True at level 6

After decision at level 6
 pending : [9, 36, 5, 29, 30, 39, 43, 44, 45, 46, 51, 38, 37, 23, 24, 26, 41, 6, 21, 20, 17, 14, 19, 16, 18, 28, 31, 33]
 solution : [7, 10, 15]


New level: 7
 pending : [9, 36, 5, 29, 30, 39, 43, 44, 45, 46, 51, 38, 37, 23, 24, 26, 41, 6, 21, 20, 17, 14, 19, 16, 18, 28, 31, 33]
 solution : [7, 10, 15]


Before reduction : 
 pending  : [9, 36, 5, 29, 30, 39, 43, 44, 45, 46, 51, 38, 37, 23, 24, 26, 41, 6, 21, 20, 17, 14, 19, 16, 18, 28, 31, 33]
 solution : [7, 10, 15]

Essensial at level 7 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 524288), (6, 524288), (7, -1), (8, -1), (9, 67108864), (10, -1), (11, -1), (12, -1), (13, -1), (14, 4194304), (15, 536870912), (16, 8388608), (17, 131072), (18, 33554432), (19, 16777216), (20, 262144), (21, 557056), (22, -1), (23, 67108864), (24, 268435456), (25, -1), (26, 2097152), (27, -1), (28, 536870912), (29, 524288), (30, 8192), (31, 8192), (32, -1), (33, 1048576), (34, -1), (35, -1), (36, 67108864), (37, 134217728), (38, 67108864), (39, 8192), (40, -1), (41, 2097152), (42, -1), (43, 262144), (44, 262144), (45, 33554432), (46, 8388608), (47, -1), (48, -1), (49, -1), (50, -1), (51, 33554432), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 131072), (6, 0), (7, -1), (8, -1), (9, 67108864), (10, -1), (11, -1), (12, -1), (13, -1), (14, 0), (15, -1), (16, 0), (17, 0), (18, 0), (19, 0), (20, 0), (21, 0), (22, -1), (23, 67108864), (24, 268435456), (25, -1), (26, 0), (27, -1), (28, 536870912), (29, 262144), (30, 4096), (31, 8192), (32, -1), (33, 1048576), (34, -1), (35, -1), (36, 1024), (37, 2048), (38, 33554432), (39, 2048), (40, -1), (41, 0), (42, -1), (43, 131072), (44, 131072), (45, 16777216), (46, 2097152), (47, -1), (48, -1), (49, -1), (50, -1), (51, 33554432), (52, -1)]

Covered at level 7 : {6, 41, 14, 16, 17, 18, 19, 20, 21, 26}

After reduction : 
 pending  : [9, 36, 5, 29, 30, 39, 43, 44, 45, 46, 51, 38, 37, 23, 24, 28, 31, 33]
 solution : [7, 10, 15]


Before reduction : 
 pending  : [9, 36, 5, 29, 30, 39, 43, 44, 45, 46, 51, 38, 37, 23, 24, 28, 31, 33]
 solution : [7, 10, 15]

Essensial at level 7 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 131072), (6, 0), (7, -1), (8, -1), (9, 67108864), (10, -1), (11, -1), (12, -1), (13, -1), (14, 0), (15, -1), (16, 0), (17, 0), (18, 0), (19, 0), (20, 0), (21, 0), (22, -1), (23, 67108864), (24, 268435456), (25, -1), (26, 0), (27, -1), (28, 536870912), (29, 262144), (30, 4096), (31, 8192), (32, -1), (33, 1048576), (34, -1), (35, -1), (36, 1024), (37, 2048), (38, 33554432), (39, 2048), (40, -1), (41, 0), (42, -1), (43, 131072), (44, 131072), (45, 16777216), (46, 2097152), (47, -1), (48, -1), (49, -1), (50, -1), (51, 33554432), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 131072), (6, -1), (7, -1), (8, -1), (9, 67108864), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, 67108864), (24, 268435456), (25, -1), (26, -1), (27, -1), (28, 536870912), (29, 262144), (30, 4096), (31, 8192), (32, -1), (33, 1048576), (34, -1), (35, -1), (36, 1024), (37, 2048), (38, 33554432), (39, 2048), (40, -1), (41, -1), (42, -1), (43, 131072), (44, 131072), (45, 16777216), (46, 2097152), (47, -1), (48, -1), (49, -1), (50, -1), (51, 33554432), (52, -1)]

Covered at level 7 : set()

After reduction : 
 pending  : [9, 36, 5, 29, 30, 39, 43, 44, 45, 46, 51, 38, 37, 23, 24, 28, 31, 33]
 solution : [7, 10, 15]


Solution : [7, 10, 15] has cost 16.


Decide in level 7 among pending : [9, 36, 5, 29, 30, 39, 43, 44, 45, 46, 51, 38, 37, 23, 24, 28, 31, 33]

Coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 131072), (6, -1), (7, -1), (8, -1), (9, 67108864), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, 67108864), (24, 268435456), (25, -1), (26, -1), (27, -1), (28, 536870912), (29, 262144), (30, 4096), (31, 8192), (32, -1), (33, 1048576), (34, -1), (35, -1), (36, 1024), (37, 2048), (38, 33554432), (39, 2048), (40, -1), (41, -1), (42, -1), (43, 131072), (44, 131072), (45, 16777216), (46, 2097152), (47, -1), (48, -1), (49, -1), (50, -1), (51, 33554432), (52, -1)]

Decide 28 with phase True at level 7

After decision at level 7
 pending : [9, 36, 5, 29, 30, 39, 43, 44, 45, 46, 51, 38, 37, 23, 24, 31, 33]
 solution : [7, 10, 15, 28]


New level: 8
 pending : [9, 36, 5, 29, 30, 39, 43, 44, 45, 46, 51, 38, 37, 23, 24, 31, 33]
 solution : [7, 10, 15, 28]


Before reduction : 
 pending  : [9, 36, 5, 29, 30, 39, 43, 44, 45, 46, 51, 38, 37, 23, 24, 31, 33]
 solution : [7, 10, 15, 28]

Essensial at level 8 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 131072), (6, -1), (7, -1), (8, -1), (9, 67108864), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, 67108864), (24, 268435456), (25, -1), (26, -1), (27, -1), (28, 536870912), (29, 262144), (30, 4096), (31, 8192), (32, -1), (33, 1048576), (34, -1), (35, -1), (36, 1024), (37, 2048), (38, 33554432), (39, 2048), (40, -1), (41, -1), (42, -1), (43, 131072), (44, 131072), (45, 16777216), (46, 2097152), (47, -1), (48, -1), (49, -1), (50, -1), (51, 33554432), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 131072), (6, -1), (7, -1), (8, -1), (9, 67108864), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, 67108864), (24, 134217728), (25, -1), (26, -1), (27, -1), (28, -1), (29, 262144), (30, 4096), (31, 4096), (32, -1), (33, 524288), (34, -1), (35, -1), (36, 1024), (37, 2048), (38, 33554432), (39, 2048), (40, -1), (41, -1), (42, -1), (43, 131072), (44, 131072), (45, 16777216), (46, 2097152), (47, -1), (48, -1), (49, -1), (50, -1), (51, 33554432), (52, -1)]

Covered at level 8 : set()

After reduction : 
 pending  : [9, 36, 5, 29, 30, 39, 43, 44, 45, 46, 51, 38, 37, 23, 24, 31, 33]
 solution : [7, 10, 15, 28]


Solution : [7, 10, 15, 28] has cost 20.


Before backtrack at level 8
 pending : [9, 36, 5, 29, 30, 39, 43, 44, 45, 46, 51, 38, 37, 23, 24, 31, 33]
 solution : [7, 10, 15, 28]

After backtrack at level 8
 pending : [9, 36, 5, 29, 30, 39, 43, 44, 45, 46, 51, 38, 37, 23, 24, 31, 33]
 solution : [7, 10, 15, 28]


Invert decision for 28 at level 7


New level: 8
 pending : [9, 36, 5, 29, 30, 39, 43, 44, 45, 46, 51, 38, 37, 23, 24, 31, 33]
 solution : [7, 10, 15]


Before reduction : 
 pending  : [9, 36, 5, 29, 30, 39, 43, 44, 45, 46, 51, 38, 37, 23, 24, 31, 33]
 solution : [7, 10, 15]

Essensial at level 8 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 131072), (6, -1), (7, -1), (8, -1), (9, 67108864), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, 67108864), (24, 134217728), (25, -1), (26, -1), (27, -1), (28, -1), (29, 262144), (30, 4096), (31, 4096), (32, -1), (33, 524288), (34, -1), (35, -1), (36, 1024), (37, 2048), (38, 33554432), (39, 2048), (40, -1), (41, -1), (42, -1), (43, 131072), (44, 131072), (45, 16777216), (46, 2097152), (47, -1), (48, -1), (49, -1), (50, -1), (51, 33554432), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 131072), (6, -1), (7, -1), (8, -1), (9, 67108864), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, 67108864), (24, 268435456), (25, -1), (26, -1), (27, -1), (28, -1), (29, 262144), (30, 4096), (31, 8192), (32, -1), (33, 1048576), (34, -1), (35, -1), (36, 1024), (37, 2048), (38, 33554432), (39, 2048), (40, -1), (41, -1), (42, -1), (43, 131072), (44, 131072), (45, 16777216), (46, 2097152), (47, -1), (48, -1), (49, -1), (50, -1), (51, 33554432), (52, -1)]

Covered at level 8 : set()

After reduction : 
 pending  : [9, 36, 5, 29, 30, 39, 43, 44, 45, 46, 51, 38, 37, 23, 24, 31, 33]
 solution : [7, 10, 15]


Solution : [7, 10, 15] has cost 16.


Decide in level 8 among pending : [9, 36, 5, 29, 30, 39, 43, 44, 45, 46, 51, 38, 37, 23, 24, 31, 33]

Coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 131072), (6, -1), (7, -1), (8, -1), (9, 67108864), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, 67108864), (24, 268435456), (25, -1), (26, -1), (27, -1), (28, -1), (29, 262144), (30, 4096), (31, 8192), (32, -1), (33, 1048576), (34, -1), (35, -1), (36, 1024), (37, 2048), (38, 33554432), (39, 2048), (40, -1), (41, -1), (42, -1), (43, 131072), (44, 131072), (45, 16777216), (46, 2097152), (47, -1), (48, -1), (49, -1), (50, -1), (51, 33554432), (52, -1)]

Decide 24 with phase True at level 8

After decision at level 8
 pending : [9, 36, 5, 29, 30, 39, 43, 44, 45, 46, 51, 38, 37, 23, 31, 33]
 solution : [7, 10, 15, 24]


New level: 9
 pending : [9, 36, 5, 29, 30, 39, 43, 44, 45, 46, 51, 38, 37, 23, 31, 33]
 solution : [7, 10, 15, 24]


Before reduction : 
 pending  : [9, 36, 5, 29, 30, 39, 43, 44, 45, 46, 51, 38, 37, 23, 31, 33]
 solution : [7, 10, 15, 24]

Essensial at level 9 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 131072), (6, -1), (7, -1), (8, -1), (9, 67108864), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, 67108864), (24, 268435456), (25, -1), (26, -1), (27, -1), (28, -1), (29, 262144), (30, 4096), (31, 8192), (32, -1), (33, 1048576), (34, -1), (35, -1), (36, 1024), (37, 2048), (38, 33554432), (39, 2048), (40, -1), (41, -1), (42, -1), (43, 131072), (44, 131072), (45, 16777216), (46, 2097152), (47, -1), (48, -1), (49, -1), (50, -1), (51, 33554432), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 32768), (6, -1), (7, -1), (8, -1), (9, 16777216), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, 16777216), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, 65536), (30, 1024), (31, 0), (32, -1), (33, 0), (34, -1), (35, -1), (36, 512), (37, 0), (38, 16777216), (39, 512), (40, -1), (41, -1), (42, -1), (43, 32768), (44, 32768), (45, 8388608), (46, 524288), (47, -1), (48, -1), (49, -1), (50, -1), (51, 16777216), (52, -1)]

Covered at level 9 : {33, 37, 31}

After reduction : 
 pending  : [9, 36, 5, 29, 30, 39, 43, 44, 45, 46, 51, 38, 23]
 solution : [7, 10, 15, 24]


Before reduction : 
 pending  : [9, 36, 5, 29, 30, 39, 43, 44, 45, 46, 51, 38, 23]
 solution : [7, 10, 15, 24]

Essensial at level 9 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 32768), (6, -1), (7, -1), (8, -1), (9, 16777216), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, 16777216), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, 65536), (30, 1024), (31, 0), (32, -1), (33, 0), (34, -1), (35, -1), (36, 512), (37, 0), (38, 16777216), (39, 512), (40, -1), (41, -1), (42, -1), (43, 32768), (44, 32768), (45, 8388608), (46, 524288), (47, -1), (48, -1), (49, -1), (50, -1), (51, 16777216), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 32768), (6, -1), (7, -1), (8, -1), (9, 16777216), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, 16777216), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, 65536), (30, 1024), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, 512), (37, -1), (38, 16777216), (39, 512), (40, -1), (41, -1), (42, -1), (43, 32768), (44, 32768), (45, 8388608), (46, 524288), (47, -1), (48, -1), (49, -1), (50, -1), (51, 16777216), (52, -1)]

Covered at level 9 : set()

After reduction : 
 pending  : [9, 36, 5, 29, 30, 39, 43, 44, 45, 46, 51, 38, 23]
 solution : [7, 10, 15, 24]


Solution : [7, 10, 15, 24] has cost 23.


Before backtrack at level 9
 pending : [9, 36, 5, 29, 30, 39, 43, 44, 45, 46, 51, 38, 23]
 solution : [7, 10, 15, 24]

After backtrack at level 9
 pending : [9, 36, 5, 29, 30, 39, 43, 44, 45, 46, 51, 38, 23, 37, 31, 33]
 solution : [7, 10, 15, 24]


Invert decision for 24 at level 8


New level: 9
 pending : [9, 36, 5, 29, 30, 39, 43, 44, 45, 46, 51, 38, 23, 37, 31, 33]
 solution : [7, 10, 15]


Before reduction : 
 pending  : [9, 36, 5, 29, 30, 39, 43, 44, 45, 46, 51, 38, 23, 37, 31, 33]
 solution : [7, 10, 15]

Essensial at level 9 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 32768), (6, -1), (7, -1), (8, -1), (9, 16777216), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, 16777216), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, 65536), (30, 1024), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, 512), (37, -1), (38, 16777216), (39, 512), (40, -1), (41, -1), (42, -1), (43, 32768), (44, 32768), (45, 8388608), (46, 524288), (47, -1), (48, -1), (49, -1), (50, -1), (51, 16777216), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 131072), (6, -1), (7, -1), (8, -1), (9, 67108864), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, 67108864), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, 262144), (30, 4096), (31, 8192), (32, -1), (33, 1048576), (34, -1), (35, -1), (36, 1024), (37, 2048), (38, 33554432), (39, 2048), (40, -1), (41, -1), (42, -1), (43, 131072), (44, 131072), (45, 16777216), (46, 2097152), (47, -1), (48, -1), (49, -1), (50, -1), (51, 33554432), (52, -1)]

Covered at level 9 : set()

After reduction : 
 pending  : [9, 36, 5, 29, 30, 39, 43, 44, 45, 46, 51, 38, 23, 37, 31, 33]
 solution : [7, 10, 15]


Solution : [7, 10, 15] has cost 16.


Decide in level 9 among pending : [9, 36, 5, 29, 30, 39, 43, 44, 45, 46, 51, 38, 23, 37, 31, 33]

Coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 131072), (6, -1), (7, -1), (8, -1), (9, 67108864), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, 67108864), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, 262144), (30, 4096), (31, 8192), (32, -1), (33, 1048576), (34, -1), (35, -1), (36, 1024), (37, 2048), (38, 33554432), (39, 2048), (40, -1), (41, -1), (42, -1), (43, 131072), (44, 131072), (45, 16777216), (46, 2097152), (47, -1), (48, -1), (49, -1), (50, -1), (51, 33554432), (52, -1)]

Decide 9 with phase True at level 9

After decision at level 9
 pending : [36, 5, 29, 30, 39, 43, 44, 45, 46, 51, 38, 23, 37, 31, 33]
 solution : [7, 10, 15, 9]


New level: 10
 pending : [36, 5, 29, 30, 39, 43, 44, 45, 46, 51, 38, 23, 37, 31, 33]
 solution : [7, 10, 15, 9]


Before reduction : 
 pending  : [36, 5, 29, 30, 39, 43, 44, 45, 46, 51, 38, 23, 37, 31, 33]
 solution : [7, 10, 15, 9]

Essensial at level 10 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 131072), (6, -1), (7, -1), (8, -1), (9, 67108864), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, 67108864), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, 262144), (30, 4096), (31, 8192), (32, -1), (33, 1048576), (34, -1), (35, -1), (36, 1024), (37, 2048), (38, 33554432), (39, 2048), (40, -1), (41, -1), (42, -1), (43, 131072), (44, 131072), (45, 16777216), (46, 2097152), (47, -1), (48, -1), (49, -1), (50, -1), (51, 33554432), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 0), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, 0), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, 0), (30, 0), (31, 0), (32, -1), (33, 0), (34, -1), (35, -1), (36, 0), (37, 0), (38, 0), (39, 0), (40, -1), (41, -1), (42, -1), (43, 0), (44, 0), (45, 0), (46, 0), (47, -1), (48, -1), (49, -1), (50, -1), (51, 0), (52, -1)]

Covered at level 10 : {33, 36, 5, 38, 39, 37, 43, 44, 45, 46, 51, 23, 29, 30, 31}

After reduction : 
 pending  : []
 solution : [7, 10, 15, 9]


Before reduction : 
 pending  : []
 solution : [7, 10, 15, 9]

Essensial at level 10 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 0), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, 0), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, 0), (30, 0), (31, 0), (32, -1), (33, 0), (34, -1), (35, -1), (36, 0), (37, 0), (38, 0), (39, 0), (40, -1), (41, -1), (42, -1), (43, 0), (44, 0), (45, 0), (46, 0), (47, -1), (48, -1), (49, -1), (50, -1), (51, 0), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 10 : set()

After reduction : 
 pending  : []
 solution : [7, 10, 15, 9]


Solution : [7, 10, 15, 9] has cost 20.


Before backtrack at level 10
 pending : []
 solution : [7, 10, 15, 9]

After backtrack at level 10
 pending : [36, 5, 29, 30, 39, 43, 44, 45, 46, 51, 38, 23, 37, 31, 33]
 solution : [7, 10, 15, 9]


Invert decision for 9 at level 9


New level: 10
 pending : [36, 5, 29, 30, 39, 43, 44, 45, 46, 51, 38, 23, 37, 31, 33]
 solution : [7, 10, 15]


Before reduction : 
 pending  : [36, 5, 29, 30, 39, 43, 44, 45, 46, 51, 38, 23, 37, 31, 33]
 solution : [7, 10, 15]

Essensial at level 10 : {23}

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 0), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, 0), (30, 0), (31, 0), (32, -1), (33, 0), (34, -1), (35, -1), (36, 0), (37, 0), (38, 0), (39, 0), (40, -1), (41, -1), (42, -1), (43, 0), (44, 0), (45, 0), (46, 0), (47, -1), (48, -1), (49, -1), (50, -1), (51, 0), (52, -1)]

Covered at level 10 : {33, 36, 5, 38, 39, 37, 43, 44, 45, 46, 51, 29, 30, 31}

After reduction : 
 pending  : []
 solution : [7, 10, 15, 23]


Before reduction : 
 pending  : []
 solution : [7, 10, 15, 23]

Essensial at level 10 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 0), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, 0), (30, 0), (31, 0), (32, -1), (33, 0), (34, -1), (35, -1), (36, 0), (37, 0), (38, 0), (39, 0), (40, -1), (41, -1), (42, -1), (43, 0), (44, 0), (45, 0), (46, 0), (47, -1), (48, -1), (49, -1), (50, -1), (51, 0), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 10 : set()

After reduction : 
 pending  : []
 solution : [7, 10, 15, 23]


Solution : [7, 10, 15, 23] has cost 23.


Before backtrack at level 10
 pending : []
 solution : [7, 10, 15, 23]

After backtrack at level 10
 pending : [23, 36, 5, 29, 30, 39, 43, 44, 45, 46, 51, 38, 37, 31, 33]
 solution : [7, 10, 15]


Before backtrack at level 9
 pending : [23, 36, 5, 29, 30, 39, 43, 44, 45, 46, 51, 38, 37, 31, 33]
 solution : [7, 10, 15]

After backtrack at level 9
 pending : [23, 36, 5, 29, 30, 39, 43, 44, 45, 46, 51, 38, 37, 31, 33, 9]
 solution : [7, 10, 15]


Before backtrack at level 8
 pending : [23, 36, 5, 29, 30, 39, 43, 44, 45, 46, 51, 38, 37, 31, 33, 9]
 solution : [7, 10, 15]

After backtrack at level 8
 pending : [23, 36, 5, 29, 30, 39, 43, 44, 45, 46, 51, 38, 37, 31, 33, 9, 24]
 solution : [7, 10, 15]


Before backtrack at level 7
 pending : [23, 36, 5, 29, 30, 39, 43, 44, 45, 46, 51, 38, 37, 31, 33, 9, 24]
 solution : [7, 10, 15]

After backtrack at level 7
 pending : [23, 36, 5, 29, 30, 39, 43, 44, 45, 46, 51, 38, 37, 31, 33, 9, 24, 26, 41, 6, 21, 20, 17, 14, 19, 16, 18, 28]
 solution : [7, 10, 15]


Invert decision for 15 at level 6


New level: 7
 pending : [23, 36, 5, 29, 30, 39, 43, 44, 45, 46, 51, 38, 37, 31, 33, 9, 24, 26, 41, 6, 21, 20, 17, 14, 19, 16, 18, 28]
 solution : [7, 10]


Before reduction : 
 pending  : [23, 36, 5, 29, 30, 39, 43, 44, 45, 46, 51, 38, 37, 31, 33, 9, 24, 26, 41, 6, 21, 20, 17, 14, 19, 16, 18, 28]
 solution : [7, 10]

Essensial at level 7 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 524288), (6, 524288), (7, -1), (8, -1), (9, 67108864), (10, -1), (11, -1), (12, -1), (13, -1), (14, 4194304), (15, -1), (16, 8388608), (17, 131072), (18, 33554432), (19, 16777216), (20, 262144), (21, 557056), (22, -1), (23, 67108864), (24, 268435456), (25, -1), (26, 2097152), (27, -1), (28, 536870912), (29, 524288), (30, 8192), (31, 8192), (32, -1), (33, 1048576), (34, -1), (35, -1), (36, 67108864), (37, 134217728), (38, 67108864), (39, 8192), (40, -1), (41, 2097152), (42, -1), (43, 262144), (44, 262144), (45, 33554432), (46, 8388608), (47, -1), (48, -1), (49, -1), (50, -1), (51, 33554432), (52, -1)]

Covered at level 7 : set()

After reduction : 
 pending  : [23, 36, 5, 29, 30, 39, 43, 44, 45, 46, 51, 38, 37, 31, 33, 9, 24, 26, 41, 6, 21, 20, 17, 14, 19, 16, 18, 28]
 solution : [7, 10]


Solution : [7, 10] has cost 9.


Decide in level 7 among pending : [23, 36, 5, 29, 30, 39, 43, 44, 45, 46, 51, 38, 37, 31, 33, 9, 24, 26, 41, 6, 21, 20, 17, 14, 19, 16, 18, 28]

Coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 524288), (6, 524288), (7, -1), (8, -1), (9, 67108864), (10, -1), (11, -1), (12, -1), (13, -1), (14, 4194304), (15, -1), (16, 8388608), (17, 131072), (18, 33554432), (19, 16777216), (20, 262144), (21, 557056), (22, -1), (23, 67108864), (24, 268435456), (25, -1), (26, 2097152), (27, -1), (28, 536870912), (29, 524288), (30, 8192), (31, 8192), (32, -1), (33, 1048576), (34, -1), (35, -1), (36, 67108864), (37, 134217728), (38, 67108864), (39, 8192), (40, -1), (41, 2097152), (42, -1), (43, 262144), (44, 262144), (45, 33554432), (46, 8388608), (47, -1), (48, -1), (49, -1), (50, -1), (51, 33554432), (52, -1)]

Decide 28 with phase True at level 7

After decision at level 7
 pending : [23, 36, 5, 29, 30, 39, 43, 44, 45, 46, 51, 38, 37, 31, 33, 9, 24, 26, 41, 6, 21, 20, 17, 14, 19, 16, 18]
 solution : [7, 10, 28]


New level: 8
 pending : [23, 36, 5, 29, 30, 39, 43, 44, 45, 46, 51, 38, 37, 31, 33, 9, 24, 26, 41, 6, 21, 20, 17, 14, 19, 16, 18]
 solution : [7, 10, 28]


Before reduction : 
 pending  : [23, 36, 5, 29, 30, 39, 43, 44, 45, 46, 51, 38, 37, 31, 33, 9, 24, 26, 41, 6, 21, 20, 17, 14, 19, 16, 18]
 solution : [7, 10, 28]

Essensial at level 8 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 524288), (6, 524288), (7, -1), (8, -1), (9, 67108864), (10, -1), (11, -1), (12, -1), (13, -1), (14, 4194304), (15, -1), (16, 8388608), (17, 131072), (18, 33554432), (19, 16777216), (20, 262144), (21, 557056), (22, -1), (23, 67108864), (24, 268435456), (25, -1), (26, 2097152), (27, -1), (28, 536870912), (29, 524288), (30, 8192), (31, 8192), (32, -1), (33, 1048576), (34, -1), (35, -1), (36, 67108864), (37, 134217728), (38, 67108864), (39, 8192), (40, -1), (41, 2097152), (42, -1), (43, 262144), (44, 262144), (45, 33554432), (46, 8388608), (47, -1), (48, -1), (49, -1), (50, -1), (51, 33554432), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 524288), (6, 524288), (7, -1), (8, -1), (9, 67108864), (10, -1), (11, -1), (12, -1), (13, -1), (14, 4194304), (15, -1), (16, 8388608), (17, 131072), (18, 33554432), (19, 16777216), (20, 262144), (21, 557056), (22, -1), (23, 67108864), (24, 134217728), (25, -1), (26, 2097152), (27, -1), (28, -1), (29, 524288), (30, 8192), (31, 4096), (32, -1), (33, 524288), (34, -1), (35, -1), (36, 67108864), (37, 134217728), (38, 67108864), (39, 8192), (40, -1), (41, 2097152), (42, -1), (43, 262144), (44, 262144), (45, 33554432), (46, 8388608), (47, -1), (48, -1), (49, -1), (50, -1), (51, 33554432), (52, -1)]

Covered at level 8 : set()

After reduction : 
 pending  : [23, 36, 5, 29, 30, 39, 43, 44, 45, 46, 51, 38, 37, 31, 33, 9, 24, 26, 41, 6, 21, 20, 17, 14, 19, 16, 18]
 solution : [7, 10, 28]


Solution : [7, 10, 28] has cost 13.


Decide in level 8 among pending : [23, 36, 5, 29, 30, 39, 43, 44, 45, 46, 51, 38, 37, 31, 33, 9, 24, 26, 41, 6, 21, 20, 17, 14, 19, 16, 18]

Coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 524288), (6, 524288), (7, -1), (8, -1), (9, 67108864), (10, -1), (11, -1), (12, -1), (13, -1), (14, 4194304), (15, -1), (16, 8388608), (17, 131072), (18, 33554432), (19, 16777216), (20, 262144), (21, 557056), (22, -1), (23, 67108864), (24, 134217728), (25, -1), (26, 2097152), (27, -1), (28, -1), (29, 524288), (30, 8192), (31, 4096), (32, -1), (33, 524288), (34, -1), (35, -1), (36, 67108864), (37, 134217728), (38, 67108864), (39, 8192), (40, -1), (41, 2097152), (42, -1), (43, 262144), (44, 262144), (45, 33554432), (46, 8388608), (47, -1), (48, -1), (49, -1), (50, -1), (51, 33554432), (52, -1)]

Decide 37 with phase True at level 8

After decision at level 8
 pending : [23, 36, 5, 29, 30, 39, 43, 44, 45, 46, 51, 38, 31, 33, 9, 24, 26, 41, 6, 21, 20, 17, 14, 19, 16, 18]
 solution : [7, 10, 28, 37]


New level: 9
 pending : [23, 36, 5, 29, 30, 39, 43, 44, 45, 46, 51, 38, 31, 33, 9, 24, 26, 41, 6, 21, 20, 17, 14, 19, 16, 18]
 solution : [7, 10, 28, 37]


Before reduction : 
 pending  : [23, 36, 5, 29, 30, 39, 43, 44, 45, 46, 51, 38, 31, 33, 9, 24, 26, 41, 6, 21, 20, 17, 14, 19, 16, 18]
 solution : [7, 10, 28, 37]

Essensial at level 9 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 524288), (6, 524288), (7, -1), (8, -1), (9, 67108864), (10, -1), (11, -1), (12, -1), (13, -1), (14, 4194304), (15, -1), (16, 8388608), (17, 131072), (18, 33554432), (19, 16777216), (20, 262144), (21, 557056), (22, -1), (23, 67108864), (24, 134217728), (25, -1), (26, 2097152), (27, -1), (28, -1), (29, 524288), (30, 8192), (31, 4096), (32, -1), (33, 524288), (34, -1), (35, -1), (36, 67108864), (37, 134217728), (38, 67108864), (39, 8192), (40, -1), (41, 2097152), (42, -1), (43, 262144), (44, 262144), (45, 33554432), (46, 8388608), (47, -1), (48, -1), (49, -1), (50, -1), (51, 33554432), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 524288), (6, 524288), (7, -1), (8, -1), (9, 67108864), (10, -1), (11, -1), (12, -1), (13, -1), (14, 4194304), (15, -1), (16, 8388608), (17, 131072), (18, 33554432), (19, 16777216), (20, 262144), (21, 557056), (22, -1), (23, 67108864), (24, 67108864), (25, -1), (26, 2097152), (27, -1), (28, -1), (29, 524288), (30, 8192), (31, 2048), (32, -1), (33, 262144), (34, -1), (35, -1), (36, 33554432), (37, -1), (38, 67108864), (39, 8192), (40, -1), (41, 2097152), (42, -1), (43, 262144), (44, 262144), (45, 33554432), (46, 8388608), (47, -1), (48, -1), (49, -1), (50, -1), (51, 33554432), (52, -1)]

Covered at level 9 : set()

After reduction : 
 pending  : [23, 36, 5, 29, 30, 39, 43, 44, 45, 46, 51, 38, 31, 33, 9, 24, 26, 41, 6, 21, 20, 17, 14, 19, 16, 18]
 solution : [7, 10, 28, 37]


Solution : [7, 10, 28, 37] has cost 27.


Before backtrack at level 9
 pending : [23, 36, 5, 29, 30, 39, 43, 44, 45, 46, 51, 38, 31, 33, 9, 24, 26, 41, 6, 21, 20, 17, 14, 19, 16, 18]
 solution : [7, 10, 28, 37]

After backtrack at level 9
 pending : [23, 36, 5, 29, 30, 39, 43, 44, 45, 46, 51, 38, 31, 33, 9, 24, 26, 41, 6, 21, 20, 17, 14, 19, 16, 18]
 solution : [7, 10, 28, 37]


Invert decision for 37 at level 8


New level: 9
 pending : [23, 36, 5, 29, 30, 39, 43, 44, 45, 46, 51, 38, 31, 33, 9, 24, 26, 41, 6, 21, 20, 17, 14, 19, 16, 18]
 solution : [7, 10, 28]


Before reduction : 
 pending  : [23, 36, 5, 29, 30, 39, 43, 44, 45, 46, 51, 38, 31, 33, 9, 24, 26, 41, 6, 21, 20, 17, 14, 19, 16, 18]
 solution : [7, 10, 28]

Essensial at level 9 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 524288), (6, 524288), (7, -1), (8, -1), (9, 67108864), (10, -1), (11, -1), (12, -1), (13, -1), (14, 4194304), (15, -1), (16, 8388608), (17, 131072), (18, 33554432), (19, 16777216), (20, 262144), (21, 557056), (22, -1), (23, 67108864), (24, 67108864), (25, -1), (26, 2097152), (27, -1), (28, -1), (29, 524288), (30, 8192), (31, 2048), (32, -1), (33, 262144), (34, -1), (35, -1), (36, 33554432), (37, -1), (38, 67108864), (39, 8192), (40, -1), (41, 2097152), (42, -1), (43, 262144), (44, 262144), (45, 33554432), (46, 8388608), (47, -1), (48, -1), (49, -1), (50, -1), (51, 33554432), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 524288), (6, 524288), (7, -1), (8, -1), (9, 67108864), (10, -1), (11, -1), (12, -1), (13, -1), (14, 4194304), (15, -1), (16, 8388608), (17, 131072), (18, 33554432), (19, 16777216), (20, 262144), (21, 557056), (22, -1), (23, 67108864), (24, 134217728), (25, -1), (26, 2097152), (27, -1), (28, -1), (29, 524288), (30, 8192), (31, 4096), (32, -1), (33, 524288), (34, -1), (35, -1), (36, 67108864), (37, -1), (38, 67108864), (39, 8192), (40, -1), (41, 2097152), (42, -1), (43, 262144), (44, 262144), (45, 33554432), (46, 8388608), (47, -1), (48, -1), (49, -1), (50, -1), (51, 33554432), (52, -1)]

Covered at level 9 : set()

After reduction : 
 pending  : [23, 36, 5, 29, 30, 39, 43, 44, 45, 46, 51, 38, 31, 33, 9, 24, 26, 41, 6, 21, 20, 17, 14, 19, 16, 18]
 solution : [7, 10, 28]


Solution : [7, 10, 28] has cost 13.


Decide in level 9 among pending : [23, 36, 5, 29, 30, 39, 43, 44, 45, 46, 51, 38, 31, 33, 9, 24, 26, 41, 6, 21, 20, 17, 14, 19, 16, 18]

Coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 524288), (6, 524288), (7, -1), (8, -1), (9, 67108864), (10, -1), (11, -1), (12, -1), (13, -1), (14, 4194304), (15, -1), (16, 8388608), (17, 131072), (18, 33554432), (19, 16777216), (20, 262144), (21, 557056), (22, -1), (23, 67108864), (24, 134217728), (25, -1), (26, 2097152), (27, -1), (28, -1), (29, 524288), (30, 8192), (31, 4096), (32, -1), (33, 524288), (34, -1), (35, -1), (36, 67108864), (37, -1), (38, 67108864), (39, 8192), (40, -1), (41, 2097152), (42, -1), (43, 262144), (44, 262144), (45, 33554432), (46, 8388608), (47, -1), (48, -1), (49, -1), (50, -1), (51, 33554432), (52, -1)]

Decide 24 with phase True at level 9

After decision at level 9
 pending : [23, 36, 5, 29, 30, 39, 43, 44, 45, 46, 51, 38, 31, 33, 9, 26, 41, 6, 21, 20, 17, 14, 19, 16, 18]
 solution : [7, 10, 28, 24]


New level: 10
 pending : [23, 36, 5, 29, 30, 39, 43, 44, 45, 46, 51, 38, 31, 33, 9, 26, 41, 6, 21, 20, 17, 14, 19, 16, 18]
 solution : [7, 10, 28, 24]


Before reduction : 
 pending  : [23, 36, 5, 29, 30, 39, 43, 44, 45, 46, 51, 38, 31, 33, 9, 26, 41, 6, 21, 20, 17, 14, 19, 16, 18]
 solution : [7, 10, 28, 24]

Essensial at level 10 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 524288), (6, 524288), (7, -1), (8, -1), (9, 67108864), (10, -1), (11, -1), (12, -1), (13, -1), (14, 4194304), (15, -1), (16, 8388608), (17, 131072), (18, 33554432), (19, 16777216), (20, 262144), (21, 557056), (22, -1), (23, 67108864), (24, 134217728), (25, -1), (26, 2097152), (27, -1), (28, -1), (29, 524288), (30, 8192), (31, 4096), (32, -1), (33, 524288), (34, -1), (35, -1), (36, 67108864), (37, -1), (38, 67108864), (39, 8192), (40, -1), (41, 2097152), (42, -1), (43, 262144), (44, 262144), (45, 33554432), (46, 8388608), (47, -1), (48, -1), (49, -1), (50, -1), (51, 33554432), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 131072), (6, 524288), (7, -1), (8, -1), (9, 16777216), (10, -1), (11, -1), (12, -1), (13, -1), (14, 4194304), (15, -1), (16, 8388608), (17, 131072), (18, 33554432), (19, 16777216), (20, 262144), (21, 557056), (22, -1), (23, 16777216), (24, -1), (25, -1), (26, 2097152), (27, -1), (28, -1), (29, 131072), (30, 2048), (31, 0), (32, -1), (33, 0), (34, -1), (35, -1), (36, 67108864), (37, -1), (38, 33554432), (39, 2048), (40, -1), (41, 2097152), (42, -1), (43, 65536), (44, 65536), (45, 16777216), (46, 2097152), (47, -1), (48, -1), (49, -1), (50, -1), (51, 16777216), (52, -1)]

Covered at level 10 : {33, 31}

After reduction : 
 pending  : [23, 36, 5, 29, 30, 39, 43, 44, 45, 46, 51, 38, 9, 26, 41, 6, 21, 20, 17, 14, 19, 16, 18]
 solution : [7, 10, 28, 24]


Before reduction : 
 pending  : [23, 36, 5, 29, 30, 39, 43, 44, 45, 46, 51, 38, 9, 26, 41, 6, 21, 20, 17, 14, 19, 16, 18]
 solution : [7, 10, 28, 24]

Essensial at level 10 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 131072), (6, 524288), (7, -1), (8, -1), (9, 16777216), (10, -1), (11, -1), (12, -1), (13, -1), (14, 4194304), (15, -1), (16, 8388608), (17, 131072), (18, 33554432), (19, 16777216), (20, 262144), (21, 557056), (22, -1), (23, 16777216), (24, -1), (25, -1), (26, 2097152), (27, -1), (28, -1), (29, 131072), (30, 2048), (31, 0), (32, -1), (33, 0), (34, -1), (35, -1), (36, 67108864), (37, -1), (38, 33554432), (39, 2048), (40, -1), (41, 2097152), (42, -1), (43, 65536), (44, 65536), (45, 16777216), (46, 2097152), (47, -1), (48, -1), (49, -1), (50, -1), (51, 16777216), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 131072), (6, 524288), (7, -1), (8, -1), (9, 16777216), (10, -1), (11, -1), (12, -1), (13, -1), (14, 4194304), (15, -1), (16, 8388608), (17, 131072), (18, 33554432), (19, 16777216), (20, 262144), (21, 557056), (22, -1), (23, 16777216), (24, -1), (25, -1), (26, 2097152), (27, -1), (28, -1), (29, 131072), (30, 2048), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, 67108864), (37, -1), (38, 33554432), (39, 2048), (40, -1), (41, 2097152), (42, -1), (43, 65536), (44, 65536), (45, 16777216), (46, 2097152), (47, -1), (48, -1), (49, -1), (50, -1), (51, 16777216), (52, -1)]

Covered at level 10 : set()

After reduction : 
 pending  : [23, 36, 5, 29, 30, 39, 43, 44, 45, 46, 51, 38, 9, 26, 41, 6, 21, 20, 17, 14, 19, 16, 18]
 solution : [7, 10, 28, 24]


Solution : [7, 10, 28, 24] has cost 20.


Before backtrack at level 10
 pending : [23, 36, 5, 29, 30, 39, 43, 44, 45, 46, 51, 38, 9, 26, 41, 6, 21, 20, 17, 14, 19, 16, 18]
 solution : [7, 10, 28, 24]

After backtrack at level 10
 pending : [23, 36, 5, 29, 30, 39, 43, 44, 45, 46, 51, 38, 9, 26, 41, 6, 21, 20, 17, 14, 19, 16, 18, 31, 33]
 solution : [7, 10, 28, 24]


Invert decision for 24 at level 9


New level: 10
 pending : [23, 36, 5, 29, 30, 39, 43, 44, 45, 46, 51, 38, 9, 26, 41, 6, 21, 20, 17, 14, 19, 16, 18, 31, 33]
 solution : [7, 10, 28]


Before reduction : 
 pending  : [23, 36, 5, 29, 30, 39, 43, 44, 45, 46, 51, 38, 9, 26, 41, 6, 21, 20, 17, 14, 19, 16, 18, 31, 33]
 solution : [7, 10, 28]

Essensial at level 10 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 131072), (6, 524288), (7, -1), (8, -1), (9, 16777216), (10, -1), (11, -1), (12, -1), (13, -1), (14, 4194304), (15, -1), (16, 8388608), (17, 131072), (18, 33554432), (19, 16777216), (20, 262144), (21, 557056), (22, -1), (23, 16777216), (24, -1), (25, -1), (26, 2097152), (27, -1), (28, -1), (29, 131072), (30, 2048), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, 67108864), (37, -1), (38, 33554432), (39, 2048), (40, -1), (41, 2097152), (42, -1), (43, 65536), (44, 65536), (45, 16777216), (46, 2097152), (47, -1), (48, -1), (49, -1), (50, -1), (51, 16777216), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 524288), (6, 524288), (7, -1), (8, -1), (9, 67108864), (10, -1), (11, -1), (12, -1), (13, -1), (14, 4194304), (15, -1), (16, 8388608), (17, 131072), (18, 33554432), (19, 16777216), (20, 262144), (21, 557056), (22, -1), (23, 67108864), (24, -1), (25, -1), (26, 2097152), (27, -1), (28, -1), (29, 524288), (30, 8192), (31, 4096), (32, -1), (33, 524288), (34, -1), (35, -1), (36, 67108864), (37, -1), (38, 67108864), (39, 8192), (40, -1), (41, 2097152), (42, -1), (43, 262144), (44, 262144), (45, 33554432), (46, 8388608), (47, -1), (48, -1), (49, -1), (50, -1), (51, 33554432), (52, -1)]

Covered at level 10 : set()

After reduction : 
 pending  : [23, 36, 5, 29, 30, 39, 43, 44, 45, 46, 51, 38, 9, 26, 41, 6, 21, 20, 17, 14, 19, 16, 18, 31, 33]
 solution : [7, 10, 28]


Solution : [7, 10, 28] has cost 13.


Decide in level 10 among pending : [23, 36, 5, 29, 30, 39, 43, 44, 45, 46, 51, 38, 9, 26, 41, 6, 21, 20, 17, 14, 19, 16, 18, 31, 33]

Coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 524288), (6, 524288), (7, -1), (8, -1), (9, 67108864), (10, -1), (11, -1), (12, -1), (13, -1), (14, 4194304), (15, -1), (16, 8388608), (17, 131072), (18, 33554432), (19, 16777216), (20, 262144), (21, 557056), (22, -1), (23, 67108864), (24, -1), (25, -1), (26, 2097152), (27, -1), (28, -1), (29, 524288), (30, 8192), (31, 4096), (32, -1), (33, 524288), (34, -1), (35, -1), (36, 67108864), (37, -1), (38, 67108864), (39, 8192), (40, -1), (41, 2097152), (42, -1), (43, 262144), (44, 262144), (45, 33554432), (46, 8388608), (47, -1), (48, -1), (49, -1), (50, -1), (51, 33554432), (52, -1)]

Decide 23 with phase True at level 10

After decision at level 10
 pending : [36, 5, 29, 30, 39, 43, 44, 45, 46, 51, 38, 9, 26, 41, 6, 21, 20, 17, 14, 19, 16, 18, 31, 33]
 solution : [7, 10, 28, 23]


New level: 11
 pending : [36, 5, 29, 30, 39, 43, 44, 45, 46, 51, 38, 9, 26, 41, 6, 21, 20, 17, 14, 19, 16, 18, 31, 33]
 solution : [7, 10, 28, 23]


Before reduction : 
 pending  : [36, 5, 29, 30, 39, 43, 44, 45, 46, 51, 38, 9, 26, 41, 6, 21, 20, 17, 14, 19, 16, 18, 31, 33]
 solution : [7, 10, 28, 23]

Essensial at level 11 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 524288), (6, 524288), (7, -1), (8, -1), (9, 67108864), (10, -1), (11, -1), (12, -1), (13, -1), (14, 4194304), (15, -1), (16, 8388608), (17, 131072), (18, 33554432), (19, 16777216), (20, 262144), (21, 557056), (22, -1), (23, 67108864), (24, -1), (25, -1), (26, 2097152), (27, -1), (28, -1), (29, 524288), (30, 8192), (31, 4096), (32, -1), (33, 524288), (34, -1), (35, -1), (36, 67108864), (37, -1), (38, 67108864), (39, 8192), (40, -1), (41, 2097152), (42, -1), (43, 262144), (44, 262144), (45, 33554432), (46, 8388608), (47, -1), (48, -1), (49, -1), (50, -1), (51, 33554432), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 0), (6, 262144), (7, -1), (8, -1), (9, 0), (10, -1), (11, -1), (12, -1), (13, -1), (14, 4194304), (15, -1), (16, 8388608), (17, 131072), (18, 16777216), (19, 8388608), (20, 131072), (21, 270336), (22, -1), (23, -1), (24, -1), (25, -1), (26, 2097152), (27, -1), (28, -1), (29, 0), (30, 0), (31, 0), (32, -1), (33, 0), (34, -1), (35, -1), (36, 524288), (37, -1), (38, 0), (39, 0), (40, -1), (41, 2097152), (42, -1), (43, 0), (44, 0), (45, 0), (46, 0), (47, -1), (48, -1), (49, -1), (50, -1), (51, 0), (52, -1)]

Covered at level 11 : {33, 5, 38, 39, 9, 43, 44, 45, 46, 51, 29, 30, 31}

After reduction : 
 pending  : [36, 26, 41, 6, 21, 20, 17, 14, 19, 16, 18]
 solution : [7, 10, 28, 23]


Before reduction : 
 pending  : [36, 26, 41, 6, 21, 20, 17, 14, 19, 16, 18]
 solution : [7, 10, 28, 23]

Essensial at level 11 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 0), (6, 262144), (7, -1), (8, -1), (9, 0), (10, -1), (11, -1), (12, -1), (13, -1), (14, 4194304), (15, -1), (16, 8388608), (17, 131072), (18, 16777216), (19, 8388608), (20, 131072), (21, 270336), (22, -1), (23, -1), (24, -1), (25, -1), (26, 2097152), (27, -1), (28, -1), (29, 0), (30, 0), (31, 0), (32, -1), (33, 0), (34, -1), (35, -1), (36, 524288), (37, -1), (38, 0), (39, 0), (40, -1), (41, 2097152), (42, -1), (43, 0), (44, 0), (45, 0), (46, 0), (47, -1), (48, -1), (49, -1), (50, -1), (51, 0), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, 262144), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 4194304), (15, -1), (16, 8388608), (17, 131072), (18, 16777216), (19, 8388608), (20, 131072), (21, 270336), (22, -1), (23, -1), (24, -1), (25, -1), (26, 2097152), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, 524288), (37, -1), (38, -1), (39, -1), (40, -1), (41, 2097152), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 11 : set()

After reduction : 
 pending  : [36, 26, 41, 6, 21, 20, 17, 14, 19, 16, 18]
 solution : [7, 10, 28, 23]


Solution : [7, 10, 28, 23] has cost 20.


Before backtrack at level 11
 pending : [36, 26, 41, 6, 21, 20, 17, 14, 19, 16, 18]
 solution : [7, 10, 28, 23]

After backtrack at level 11
 pending : [36, 26, 41, 6, 21, 20, 17, 14, 19, 16, 18, 5, 29, 30, 39, 43, 44, 45, 46, 51, 38, 9, 31, 33]
 solution : [7, 10, 28, 23]


Invert decision for 23 at level 10


New level: 11
 pending : [36, 26, 41, 6, 21, 20, 17, 14, 19, 16, 18, 5, 29, 30, 39, 43, 44, 45, 46, 51, 38, 9, 31, 33]
 solution : [7, 10, 28]


Before reduction : 
 pending  : [36, 26, 41, 6, 21, 20, 17, 14, 19, 16, 18, 5, 29, 30, 39, 43, 44, 45, 46, 51, 38, 9, 31, 33]
 solution : [7, 10, 28]

Essensial at level 11 : {9}

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, 262144), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 4194304), (15, -1), (16, 8388608), (17, 131072), (18, 16777216), (19, 8388608), (20, 131072), (21, 270336), (22, -1), (23, -1), (24, -1), (25, -1), (26, 2097152), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, 524288), (37, -1), (38, -1), (39, -1), (40, -1), (41, 2097152), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 0), (6, 262144), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 4194304), (15, -1), (16, 8388608), (17, 131072), (18, 16777216), (19, 8388608), (20, 131072), (21, 270336), (22, -1), (23, -1), (24, -1), (25, -1), (26, 2097152), (27, -1), (28, -1), (29, 0), (30, 0), (31, 0), (32, -1), (33, 0), (34, -1), (35, -1), (36, 65536), (37, -1), (38, 0), (39, 0), (40, -1), (41, 2097152), (42, -1), (43, 0), (44, 0), (45, 0), (46, 0), (47, -1), (48, -1), (49, -1), (50, -1), (51, 0), (52, -1)]

Covered at level 11 : {33, 5, 38, 39, 43, 44, 45, 46, 51, 29, 30, 31}

After reduction : 
 pending  : [36, 26, 41, 6, 21, 20, 17, 14, 19, 16, 18]
 solution : [7, 10, 28, 9]


Before reduction : 
 pending  : [36, 26, 41, 6, 21, 20, 17, 14, 19, 16, 18]
 solution : [7, 10, 28, 9]

Essensial at level 11 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 0), (6, 262144), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 4194304), (15, -1), (16, 8388608), (17, 131072), (18, 16777216), (19, 8388608), (20, 131072), (21, 270336), (22, -1), (23, -1), (24, -1), (25, -1), (26, 2097152), (27, -1), (28, -1), (29, 0), (30, 0), (31, 0), (32, -1), (33, 0), (34, -1), (35, -1), (36, 65536), (37, -1), (38, 0), (39, 0), (40, -1), (41, 2097152), (42, -1), (43, 0), (44, 0), (45, 0), (46, 0), (47, -1), (48, -1), (49, -1), (50, -1), (51, 0), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, 262144), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 4194304), (15, -1), (16, 8388608), (17, 131072), (18, 16777216), (19, 8388608), (20, 131072), (21, 270336), (22, -1), (23, -1), (24, -1), (25, -1), (26, 2097152), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, 65536), (37, -1), (38, -1), (39, -1), (40, -1), (41, 2097152), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 11 : set()

After reduction : 
 pending  : [36, 26, 41, 6, 21, 20, 17, 14, 19, 16, 18]
 solution : [7, 10, 28, 9]


Solution : [7, 10, 28, 9] has cost 17.


Decide in level 11 among pending : [36, 26, 41, 6, 21, 20, 17, 14, 19, 16, 18]

Coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, 262144), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 4194304), (15, -1), (16, 8388608), (17, 131072), (18, 16777216), (19, 8388608), (20, 131072), (21, 270336), (22, -1), (23, -1), (24, -1), (25, -1), (26, 2097152), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, 65536), (37, -1), (38, -1), (39, -1), (40, -1), (41, 2097152), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Decide 18 with phase True at level 11

After decision at level 11
 pending : [36, 26, 41, 6, 21, 20, 17, 14, 19, 16]
 solution : [7, 10, 28, 9, 18]


New level: 12
 pending : [36, 26, 41, 6, 21, 20, 17, 14, 19, 16]
 solution : [7, 10, 28, 9, 18]


Before reduction : 
 pending  : [36, 26, 41, 6, 21, 20, 17, 14, 19, 16]
 solution : [7, 10, 28, 9, 18]

Essensial at level 12 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, 262144), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 4194304), (15, -1), (16, 8388608), (17, 131072), (18, 16777216), (19, 8388608), (20, 131072), (21, 270336), (22, -1), (23, -1), (24, -1), (25, -1), (26, 2097152), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, 65536), (37, -1), (38, -1), (39, -1), (40, -1), (41, 2097152), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, 0), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 32768), (15, -1), (16, 131072), (17, 32768), (18, -1), (19, 0), (20, 0), (21, 0), (22, -1), (23, -1), (24, -1), (25, -1), (26, 2048), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, 1024), (37, -1), (38, -1), (39, -1), (40, -1), (41, 2048), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 12 : {19, 20, 21, 6}

After reduction : 
 pending  : [36, 26, 41, 17, 14, 16]
 solution : [7, 10, 28, 9, 18]


Before reduction : 
 pending  : [36, 26, 41, 17, 14, 16]
 solution : [7, 10, 28, 9, 18]

Essensial at level 12 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, 0), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 32768), (15, -1), (16, 131072), (17, 32768), (18, -1), (19, 0), (20, 0), (21, 0), (22, -1), (23, -1), (24, -1), (25, -1), (26, 2048), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, 1024), (37, -1), (38, -1), (39, -1), (40, -1), (41, 2048), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 32768), (15, -1), (16, 131072), (17, 32768), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, 2048), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, 1024), (37, -1), (38, -1), (39, -1), (40, -1), (41, 2048), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 12 : set()

After reduction : 
 pending  : [36, 26, 41, 17, 14, 16]
 solution : [7, 10, 28, 9, 18]


Solution : [7, 10, 28, 9, 18] has cost 26.


Before backtrack at level 12
 pending : [36, 26, 41, 17, 14, 16]
 solution : [7, 10, 28, 9, 18]

After backtrack at level 12
 pending : [36, 26, 41, 17, 14, 16, 6, 21, 20, 19]
 solution : [7, 10, 28, 9, 18]


Invert decision for 18 at level 11


New level: 12
 pending : [36, 26, 41, 17, 14, 16, 6, 21, 20, 19]
 solution : [7, 10, 28, 9]


Before reduction : 
 pending  : [36, 26, 41, 17, 14, 16, 6, 21, 20, 19]
 solution : [7, 10, 28, 9]

Essensial at level 12 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 32768), (15, -1), (16, 131072), (17, 32768), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, 2048), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, 1024), (37, -1), (38, -1), (39, -1), (40, -1), (41, 2048), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, 262144), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 4194304), (15, -1), (16, 8388608), (17, 131072), (18, -1), (19, 8388608), (20, 131072), (21, 270336), (22, -1), (23, -1), (24, -1), (25, -1), (26, 2097152), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, 65536), (37, -1), (38, -1), (39, -1), (40, -1), (41, 2097152), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 12 : set()

After reduction : 
 pending  : [36, 26, 41, 17, 14, 16, 6, 21, 20, 19]
 solution : [7, 10, 28, 9]


Solution : [7, 10, 28, 9] has cost 17.


Decide in level 12 among pending : [36, 26, 41, 17, 14, 16, 6, 21, 20, 19]

Coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, 262144), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 4194304), (15, -1), (16, 8388608), (17, 131072), (18, -1), (19, 8388608), (20, 131072), (21, 270336), (22, -1), (23, -1), (24, -1), (25, -1), (26, 2097152), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, 65536), (37, -1), (38, -1), (39, -1), (40, -1), (41, 2097152), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Decide 16 with phase True at level 12

After decision at level 12
 pending : [36, 26, 41, 17, 14, 6, 21, 20, 19]
 solution : [7, 10, 28, 9, 16]


New level: 13
 pending : [36, 26, 41, 17, 14, 6, 21, 20, 19]
 solution : [7, 10, 28, 9, 16]


Before reduction : 
 pending  : [36, 26, 41, 17, 14, 6, 21, 20, 19]
 solution : [7, 10, 28, 9, 16]

Essensial at level 13 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, 262144), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 4194304), (15, -1), (16, 8388608), (17, 131072), (18, -1), (19, 8388608), (20, 131072), (21, 270336), (22, -1), (23, -1), (24, -1), (25, -1), (26, 2097152), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, 65536), (37, -1), (38, -1), (39, -1), (40, -1), (41, 2097152), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, 131072), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 0), (15, -1), (16, -1), (17, 0), (18, -1), (19, 2097152), (20, 0), (21, 133120), (22, -1), (23, -1), (24, -1), (25, -1), (26, 524288), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, 1024), (37, -1), (38, -1), (39, -1), (40, -1), (41, 524288), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 13 : {17, 20, 14}

After reduction : 
 pending  : [36, 26, 41, 6, 21, 19]
 solution : [7, 10, 28, 9, 16]


Before reduction : 
 pending  : [36, 26, 41, 6, 21, 19]
 solution : [7, 10, 28, 9, 16]

Essensial at level 13 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, 131072), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 0), (15, -1), (16, -1), (17, 0), (18, -1), (19, 2097152), (20, 0), (21, 133120), (22, -1), (23, -1), (24, -1), (25, -1), (26, 524288), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, 1024), (37, -1), (38, -1), (39, -1), (40, -1), (41, 524288), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, 131072), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, 2097152), (20, -1), (21, 133120), (22, -1), (23, -1), (24, -1), (25, -1), (26, 524288), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, 1024), (37, -1), (38, -1), (39, -1), (40, -1), (41, 524288), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 13 : set()

After reduction : 
 pending  : [36, 26, 41, 6, 21, 19]
 solution : [7, 10, 28, 9, 16]


Solution : [7, 10, 28, 9, 16] has cost 24.


Before backtrack at level 13
 pending : [36, 26, 41, 6, 21, 19]
 solution : [7, 10, 28, 9, 16]

After backtrack at level 13
 pending : [36, 26, 41, 6, 21, 19, 17, 14, 20]
 solution : [7, 10, 28, 9, 16]


Invert decision for 16 at level 12


New level: 13
 pending : [36, 26, 41, 6, 21, 19, 17, 14, 20]
 solution : [7, 10, 28, 9]


Before reduction : 
 pending  : [36, 26, 41, 6, 21, 19, 17, 14, 20]
 solution : [7, 10, 28, 9]

Essensial at level 13 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, 131072), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, 2097152), (20, -1), (21, 133120), (22, -1), (23, -1), (24, -1), (25, -1), (26, 524288), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, 1024), (37, -1), (38, -1), (39, -1), (40, -1), (41, 524288), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, 262144), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 4194304), (15, -1), (16, -1), (17, 131072), (18, -1), (19, 8388608), (20, 131072), (21, 270336), (22, -1), (23, -1), (24, -1), (25, -1), (26, 2097152), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, 65536), (37, -1), (38, -1), (39, -1), (40, -1), (41, 2097152), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 13 : set()

After reduction : 
 pending  : [36, 26, 41, 6, 21, 19, 17, 14, 20]
 solution : [7, 10, 28, 9]


Solution : [7, 10, 28, 9] has cost 17.


Decide in level 13 among pending : [36, 26, 41, 6, 21, 19, 17, 14, 20]

Coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, 262144), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 4194304), (15, -1), (16, -1), (17, 131072), (18, -1), (19, 8388608), (20, 131072), (21, 270336), (22, -1), (23, -1), (24, -1), (25, -1), (26, 2097152), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, 65536), (37, -1), (38, -1), (39, -1), (40, -1), (41, 2097152), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Decide 19 with phase True at level 13

After decision at level 13
 pending : [36, 26, 41, 6, 21, 17, 14, 20]
 solution : [7, 10, 28, 9, 19]


New level: 14
 pending : [36, 26, 41, 6, 21, 17, 14, 20]
 solution : [7, 10, 28, 9, 19]


Before reduction : 
 pending  : [36, 26, 41, 6, 21, 17, 14, 20]
 solution : [7, 10, 28, 9, 19]

Essensial at level 14 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, 262144), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 4194304), (15, -1), (16, -1), (17, 131072), (18, -1), (19, 8388608), (20, 131072), (21, 270336), (22, -1), (23, -1), (24, -1), (25, -1), (26, 2097152), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, 65536), (37, -1), (38, -1), (39, -1), (40, -1), (41, 2097152), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, 0), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 32768), (15, -1), (16, -1), (17, 32768), (18, -1), (19, -1), (20, 0), (21, 0), (22, -1), (23, -1), (24, -1), (25, -1), (26, 2048), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, 1024), (37, -1), (38, -1), (39, -1), (40, -1), (41, 2048), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 14 : {20, 21, 6}

After reduction : 
 pending  : [36, 26, 41, 17, 14]
 solution : [7, 10, 28, 9, 19]


Before reduction : 
 pending  : [36, 26, 41, 17, 14]
 solution : [7, 10, 28, 9, 19]

Essensial at level 14 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, 0), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 32768), (15, -1), (16, -1), (17, 32768), (18, -1), (19, -1), (20, 0), (21, 0), (22, -1), (23, -1), (24, -1), (25, -1), (26, 2048), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, 1024), (37, -1), (38, -1), (39, -1), (40, -1), (41, 2048), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 32768), (15, -1), (16, -1), (17, 32768), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, 2048), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, 1024), (37, -1), (38, -1), (39, -1), (40, -1), (41, 2048), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 14 : set()

After reduction : 
 pending  : [36, 26, 41, 17, 14]
 solution : [7, 10, 28, 9, 19]


Solution : [7, 10, 28, 9, 19] has cost 26.


Before backtrack at level 14
 pending : [36, 26, 41, 17, 14]
 solution : [7, 10, 28, 9, 19]

After backtrack at level 14
 pending : [36, 26, 41, 17, 14, 6, 21, 20]
 solution : [7, 10, 28, 9, 19]


Invert decision for 19 at level 13


New level: 14
 pending : [36, 26, 41, 17, 14, 6, 21, 20]
 solution : [7, 10, 28, 9]


Before reduction : 
 pending  : [36, 26, 41, 17, 14, 6, 21, 20]
 solution : [7, 10, 28, 9]

Essensial at level 14 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 32768), (15, -1), (16, -1), (17, 32768), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, 2048), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, 1024), (37, -1), (38, -1), (39, -1), (40, -1), (41, 2048), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, 262144), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 4194304), (15, -1), (16, -1), (17, 131072), (18, -1), (19, -1), (20, 131072), (21, 270336), (22, -1), (23, -1), (24, -1), (25, -1), (26, 2097152), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, 65536), (37, -1), (38, -1), (39, -1), (40, -1), (41, 2097152), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 14 : set()

After reduction : 
 pending  : [36, 26, 41, 17, 14, 6, 21, 20]
 solution : [7, 10, 28, 9]


Solution : [7, 10, 28, 9] has cost 17.


Decide in level 14 among pending : [36, 26, 41, 17, 14, 6, 21, 20]

Coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, 262144), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 4194304), (15, -1), (16, -1), (17, 131072), (18, -1), (19, -1), (20, 131072), (21, 270336), (22, -1), (23, -1), (24, -1), (25, -1), (26, 2097152), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, 65536), (37, -1), (38, -1), (39, -1), (40, -1), (41, 2097152), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Decide 14 with phase True at level 14

After decision at level 14
 pending : [36, 26, 41, 17, 6, 21, 20]
 solution : [7, 10, 28, 9, 14]


New level: 15
 pending : [36, 26, 41, 17, 6, 21, 20]
 solution : [7, 10, 28, 9, 14]


Before reduction : 
 pending  : [36, 26, 41, 17, 6, 21, 20]
 solution : [7, 10, 28, 9, 14]

Essensial at level 15 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, 262144), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 4194304), (15, -1), (16, -1), (17, 131072), (18, -1), (19, -1), (20, 131072), (21, 270336), (22, -1), (23, -1), (24, -1), (25, -1), (26, 2097152), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, 65536), (37, -1), (38, -1), (39, -1), (40, -1), (41, 2097152), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, 131072), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, 0), (18, -1), (19, -1), (20, 0), (21, 133120), (22, -1), (23, -1), (24, -1), (25, -1), (26, 524288), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, 1024), (37, -1), (38, -1), (39, -1), (40, -1), (41, 524288), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 15 : {17, 20}

After reduction : 
 pending  : [36, 26, 41, 6, 21]
 solution : [7, 10, 28, 9, 14]


Before reduction : 
 pending  : [36, 26, 41, 6, 21]
 solution : [7, 10, 28, 9, 14]

Essensial at level 15 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, 131072), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, 0), (18, -1), (19, -1), (20, 0), (21, 133120), (22, -1), (23, -1), (24, -1), (25, -1), (26, 524288), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, 1024), (37, -1), (38, -1), (39, -1), (40, -1), (41, 524288), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, 131072), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, 133120), (22, -1), (23, -1), (24, -1), (25, -1), (26, 524288), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, 1024), (37, -1), (38, -1), (39, -1), (40, -1), (41, 524288), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 15 : set()

After reduction : 
 pending  : [36, 26, 41, 6, 21]
 solution : [7, 10, 28, 9, 14]


Solution : [7, 10, 28, 9, 14] has cost 24.


Before backtrack at level 15
 pending : [36, 26, 41, 6, 21]
 solution : [7, 10, 28, 9, 14]

After backtrack at level 15
 pending : [36, 26, 41, 6, 21, 17, 20]
 solution : [7, 10, 28, 9, 14]


Invert decision for 14 at level 14


New level: 15
 pending : [36, 26, 41, 6, 21, 17, 20]
 solution : [7, 10, 28, 9]


Before reduction : 
 pending  : [36, 26, 41, 6, 21, 17, 20]
 solution : [7, 10, 28, 9]

Essensial at level 15 : {17}

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, 131072), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, 133120), (22, -1), (23, -1), (24, -1), (25, -1), (26, 524288), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, 1024), (37, -1), (38, -1), (39, -1), (40, -1), (41, 524288), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, 262144), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, 65536), (21, 270336), (22, -1), (23, -1), (24, -1), (25, -1), (26, 2097152), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, 65536), (37, -1), (38, -1), (39, -1), (40, -1), (41, 2097152), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 15 : set()

After reduction : 
 pending  : [36, 26, 41, 6, 21, 20]
 solution : [7, 10, 28, 9, 17]


Before reduction : 
 pending  : [36, 26, 41, 6, 21, 20]
 solution : [7, 10, 28, 9, 17]

Essensial at level 15 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, 262144), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, 65536), (21, 270336), (22, -1), (23, -1), (24, -1), (25, -1), (26, 2097152), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, 65536), (37, -1), (38, -1), (39, -1), (40, -1), (41, 2097152), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, 262144), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, 65536), (21, 270336), (22, -1), (23, -1), (24, -1), (25, -1), (26, 2097152), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, 65536), (37, -1), (38, -1), (39, -1), (40, -1), (41, 2097152), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 15 : set()

After reduction : 
 pending  : [36, 26, 41, 6, 21, 20]
 solution : [7, 10, 28, 9, 17]


Solution : [7, 10, 28, 9, 17] has cost 24.


Before backtrack at level 15
 pending : [36, 26, 41, 6, 21, 20]
 solution : [7, 10, 28, 9, 17]

After backtrack at level 15
 pending : [36, 26, 41, 6, 21, 20, 17]
 solution : [7, 10, 28, 9]


Before backtrack at level 14
 pending : [36, 26, 41, 6, 21, 20, 17]
 solution : [7, 10, 28, 9]

After backtrack at level 14
 pending : [36, 26, 41, 6, 21, 20, 17, 14]
 solution : [7, 10, 28, 9]


Before backtrack at level 13
 pending : [36, 26, 41, 6, 21, 20, 17, 14]
 solution : [7, 10, 28, 9]

After backtrack at level 13
 pending : [36, 26, 41, 6, 21, 20, 17, 14, 19]
 solution : [7, 10, 28, 9]


Before backtrack at level 12
 pending : [36, 26, 41, 6, 21, 20, 17, 14, 19]
 solution : [7, 10, 28, 9]

After backtrack at level 12
 pending : [36, 26, 41, 6, 21, 20, 17, 14, 19, 16]
 solution : [7, 10, 28, 9]


Before backtrack at level 11
 pending : [36, 26, 41, 6, 21, 20, 17, 14, 19, 16]
 solution : [7, 10, 28, 9]

After backtrack at level 11
 pending : [36, 26, 41, 6, 21, 20, 17, 14, 19, 16, 9, 5, 29, 30, 39, 43, 44, 45, 46, 51, 38, 31, 33, 18]
 solution : [7, 10, 28]


Before backtrack at level 10
 pending : [36, 26, 41, 6, 21, 20, 17, 14, 19, 16, 9, 5, 29, 30, 39, 43, 44, 45, 46, 51, 38, 31, 33, 18]
 solution : [7, 10, 28]

After backtrack at level 10
 pending : [36, 26, 41, 6, 21, 20, 17, 14, 19, 16, 9, 5, 29, 30, 39, 43, 44, 45, 46, 51, 38, 31, 33, 18, 23]
 solution : [7, 10, 28]


Before backtrack at level 9
 pending : [36, 26, 41, 6, 21, 20, 17, 14, 19, 16, 9, 5, 29, 30, 39, 43, 44, 45, 46, 51, 38, 31, 33, 18, 23]
 solution : [7, 10, 28]

After backtrack at level 9
 pending : [36, 26, 41, 6, 21, 20, 17, 14, 19, 16, 9, 5, 29, 30, 39, 43, 44, 45, 46, 51, 38, 31, 33, 18, 23, 24]
 solution : [7, 10, 28]


Before backtrack at level 8
 pending : [36, 26, 41, 6, 21, 20, 17, 14, 19, 16, 9, 5, 29, 30, 39, 43, 44, 45, 46, 51, 38, 31, 33, 18, 23, 24]
 solution : [7, 10, 28]

After backtrack at level 8
 pending : [36, 26, 41, 6, 21, 20, 17, 14, 19, 16, 9, 5, 29, 30, 39, 43, 44, 45, 46, 51, 38, 31, 33, 18, 23, 24, 37]
 solution : [7, 10, 28]


Invert decision for 28 at level 7


New level: 8
 pending : [36, 26, 41, 6, 21, 20, 17, 14, 19, 16, 9, 5, 29, 30, 39, 43, 44, 45, 46, 51, 38, 31, 33, 18, 23, 24, 37]
 solution : [7, 10]


Before reduction : 
 pending  : [36, 26, 41, 6, 21, 20, 17, 14, 19, 16, 9, 5, 29, 30, 39, 43, 44, 45, 46, 51, 38, 31, 33, 18, 23, 24, 37]
 solution : [7, 10]

Essensial at level 8 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, 262144), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, 65536), (21, 270336), (22, -1), (23, -1), (24, -1), (25, -1), (26, 2097152), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, 65536), (37, -1), (38, -1), (39, -1), (40, -1), (41, 2097152), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 524288), (6, 524288), (7, -1), (8, -1), (9, 67108864), (10, -1), (11, -1), (12, -1), (13, -1), (14, 4194304), (15, -1), (16, 8388608), (17, 131072), (18, 33554432), (19, 16777216), (20, 262144), (21, 557056), (22, -1), (23, 67108864), (24, 268435456), (25, -1), (26, 2097152), (27, -1), (28, -1), (29, 524288), (30, 8192), (31, 8192), (32, -1), (33, 1048576), (34, -1), (35, -1), (36, 67108864), (37, 134217728), (38, 67108864), (39, 8192), (40, -1), (41, 2097152), (42, -1), (43, 262144), (44, 262144), (45, 33554432), (46, 8388608), (47, -1), (48, -1), (49, -1), (50, -1), (51, 33554432), (52, -1)]

Covered at level 8 : set()

After reduction : 
 pending  : [36, 26, 41, 6, 21, 20, 17, 14, 19, 16, 9, 5, 29, 30, 39, 43, 44, 45, 46, 51, 38, 31, 33, 18, 23, 24, 37]
 solution : [7, 10]


Solution : [7, 10] has cost 9.


Decide in level 8 among pending : [36, 26, 41, 6, 21, 20, 17, 14, 19, 16, 9, 5, 29, 30, 39, 43, 44, 45, 46, 51, 38, 31, 33, 18, 23, 24, 37]

Coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 524288), (6, 524288), (7, -1), (8, -1), (9, 67108864), (10, -1), (11, -1), (12, -1), (13, -1), (14, 4194304), (15, -1), (16, 8388608), (17, 131072), (18, 33554432), (19, 16777216), (20, 262144), (21, 557056), (22, -1), (23, 67108864), (24, 268435456), (25, -1), (26, 2097152), (27, -1), (28, -1), (29, 524288), (30, 8192), (31, 8192), (32, -1), (33, 1048576), (34, -1), (35, -1), (36, 67108864), (37, 134217728), (38, 67108864), (39, 8192), (40, -1), (41, 2097152), (42, -1), (43, 262144), (44, 262144), (45, 33554432), (46, 8388608), (47, -1), (48, -1), (49, -1), (50, -1), (51, 33554432), (52, -1)]

Decide 24 with phase True at level 8

After decision at level 8
 pending : [36, 26, 41, 6, 21, 20, 17, 14, 19, 16, 9, 5, 29, 30, 39, 43, 44, 45, 46, 51, 38, 31, 33, 18, 23, 37]
 solution : [7, 10, 24]


New level: 9
 pending : [36, 26, 41, 6, 21, 20, 17, 14, 19, 16, 9, 5, 29, 30, 39, 43, 44, 45, 46, 51, 38, 31, 33, 18, 23, 37]
 solution : [7, 10, 24]


Before reduction : 
 pending  : [36, 26, 41, 6, 21, 20, 17, 14, 19, 16, 9, 5, 29, 30, 39, 43, 44, 45, 46, 51, 38, 31, 33, 18, 23, 37]
 solution : [7, 10, 24]

Essensial at level 9 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 524288), (6, 524288), (7, -1), (8, -1), (9, 67108864), (10, -1), (11, -1), (12, -1), (13, -1), (14, 4194304), (15, -1), (16, 8388608), (17, 131072), (18, 33554432), (19, 16777216), (20, 262144), (21, 557056), (22, -1), (23, 67108864), (24, 268435456), (25, -1), (26, 2097152), (27, -1), (28, -1), (29, 524288), (30, 8192), (31, 8192), (32, -1), (33, 1048576), (34, -1), (35, -1), (36, 67108864), (37, 134217728), (38, 67108864), (39, 8192), (40, -1), (41, 2097152), (42, -1), (43, 262144), (44, 262144), (45, 33554432), (46, 8388608), (47, -1), (48, -1), (49, -1), (50, -1), (51, 33554432), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 131072), (6, 524288), (7, -1), (8, -1), (9, 16777216), (10, -1), (11, -1), (12, -1), (13, -1), (14, 4194304), (15, -1), (16, 8388608), (17, 131072), (18, 33554432), (19, 16777216), (20, 262144), (21, 557056), (22, -1), (23, 16777216), (24, -1), (25, -1), (26, 2097152), (27, -1), (28, -1), (29, 131072), (30, 2048), (31, 0), (32, -1), (33, 0), (34, -1), (35, -1), (36, 67108864), (37, 512), (38, 33554432), (39, 2048), (40, -1), (41, 2097152), (42, -1), (43, 65536), (44, 65536), (45, 16777216), (46, 2097152), (47, -1), (48, -1), (49, -1), (50, -1), (51, 16777216), (52, -1)]

Covered at level 9 : {33, 31}

After reduction : 
 pending  : [36, 26, 41, 6, 21, 20, 17, 14, 19, 16, 9, 5, 29, 30, 39, 43, 44, 45, 46, 51, 38, 18, 23, 37]
 solution : [7, 10, 24]


Before reduction : 
 pending  : [36, 26, 41, 6, 21, 20, 17, 14, 19, 16, 9, 5, 29, 30, 39, 43, 44, 45, 46, 51, 38, 18, 23, 37]
 solution : [7, 10, 24]

Essensial at level 9 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 131072), (6, 524288), (7, -1), (8, -1), (9, 16777216), (10, -1), (11, -1), (12, -1), (13, -1), (14, 4194304), (15, -1), (16, 8388608), (17, 131072), (18, 33554432), (19, 16777216), (20, 262144), (21, 557056), (22, -1), (23, 16777216), (24, -1), (25, -1), (26, 2097152), (27, -1), (28, -1), (29, 131072), (30, 2048), (31, 0), (32, -1), (33, 0), (34, -1), (35, -1), (36, 67108864), (37, 512), (38, 33554432), (39, 2048), (40, -1), (41, 2097152), (42, -1), (43, 65536), (44, 65536), (45, 16777216), (46, 2097152), (47, -1), (48, -1), (49, -1), (50, -1), (51, 16777216), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 131072), (6, 524288), (7, -1), (8, -1), (9, 16777216), (10, -1), (11, -1), (12, -1), (13, -1), (14, 4194304), (15, -1), (16, 8388608), (17, 131072), (18, 33554432), (19, 16777216), (20, 262144), (21, 557056), (22, -1), (23, 16777216), (24, -1), (25, -1), (26, 2097152), (27, -1), (28, -1), (29, 131072), (30, 2048), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, 67108864), (37, 512), (38, 33554432), (39, 2048), (40, -1), (41, 2097152), (42, -1), (43, 65536), (44, 65536), (45, 16777216), (46, 2097152), (47, -1), (48, -1), (49, -1), (50, -1), (51, 16777216), (52, -1)]

Covered at level 9 : set()

After reduction : 
 pending  : [36, 26, 41, 6, 21, 20, 17, 14, 19, 16, 9, 5, 29, 30, 39, 43, 44, 45, 46, 51, 38, 18, 23, 37]
 solution : [7, 10, 24]


Solution : [7, 10, 24] has cost 16.


Decide in level 9 among pending : [36, 26, 41, 6, 21, 20, 17, 14, 19, 16, 9, 5, 29, 30, 39, 43, 44, 45, 46, 51, 38, 18, 23, 37]

Coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 131072), (6, 524288), (7, -1), (8, -1), (9, 16777216), (10, -1), (11, -1), (12, -1), (13, -1), (14, 4194304), (15, -1), (16, 8388608), (17, 131072), (18, 33554432), (19, 16777216), (20, 262144), (21, 557056), (22, -1), (23, 16777216), (24, -1), (25, -1), (26, 2097152), (27, -1), (28, -1), (29, 131072), (30, 2048), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, 67108864), (37, 512), (38, 33554432), (39, 2048), (40, -1), (41, 2097152), (42, -1), (43, 65536), (44, 65536), (45, 16777216), (46, 2097152), (47, -1), (48, -1), (49, -1), (50, -1), (51, 16777216), (52, -1)]

Decide 36 with phase True at level 9

After decision at level 9
 pending : [26, 41, 6, 21, 20, 17, 14, 19, 16, 9, 5, 29, 30, 39, 43, 44, 45, 46, 51, 38, 18, 23, 37]
 solution : [7, 10, 24, 36]


New level: 10
 pending : [26, 41, 6, 21, 20, 17, 14, 19, 16, 9, 5, 29, 30, 39, 43, 44, 45, 46, 51, 38, 18, 23, 37]
 solution : [7, 10, 24, 36]


Before reduction : 
 pending  : [26, 41, 6, 21, 20, 17, 14, 19, 16, 9, 5, 29, 30, 39, 43, 44, 45, 46, 51, 38, 18, 23, 37]
 solution : [7, 10, 24, 36]

Essensial at level 10 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 131072), (6, 524288), (7, -1), (8, -1), (9, 16777216), (10, -1), (11, -1), (12, -1), (13, -1), (14, 4194304), (15, -1), (16, 8388608), (17, 131072), (18, 33554432), (19, 16777216), (20, 262144), (21, 557056), (22, -1), (23, 16777216), (24, -1), (25, -1), (26, 2097152), (27, -1), (28, -1), (29, 131072), (30, 2048), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, 67108864), (37, 512), (38, 33554432), (39, 2048), (40, -1), (41, 2097152), (42, -1), (43, 65536), (44, 65536), (45, 16777216), (46, 2097152), (47, -1), (48, -1), (49, -1), (50, -1), (51, 16777216), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 32768), (6, 262144), (7, -1), (8, -1), (9, 4194304), (10, -1), (11, -1), (12, -1), (13, -1), (14, 4194304), (15, -1), (16, 8388608), (17, 131072), (18, 16777216), (19, 8388608), (20, 131072), (21, 270336), (22, -1), (23, 4194304), (24, -1), (25, -1), (26, 524288), (27, -1), (28, -1), (29, 32768), (30, 512), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, 0), (38, 33554432), (39, 512), (40, -1), (41, 524288), (42, -1), (43, 16384), (44, 16384), (45, 8388608), (46, 524288), (47, -1), (48, -1), (49, -1), (50, -1), (51, 16777216), (52, -1)]

Covered at level 10 : {37}

After reduction : 
 pending  : [26, 41, 6, 21, 20, 17, 14, 19, 16, 9, 5, 29, 30, 39, 43, 44, 45, 46, 51, 38, 18, 23]
 solution : [7, 10, 24, 36]


Before reduction : 
 pending  : [26, 41, 6, 21, 20, 17, 14, 19, 16, 9, 5, 29, 30, 39, 43, 44, 45, 46, 51, 38, 18, 23]
 solution : [7, 10, 24, 36]

Essensial at level 10 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 32768), (6, 262144), (7, -1), (8, -1), (9, 4194304), (10, -1), (11, -1), (12, -1), (13, -1), (14, 4194304), (15, -1), (16, 8388608), (17, 131072), (18, 16777216), (19, 8388608), (20, 131072), (21, 270336), (22, -1), (23, 4194304), (24, -1), (25, -1), (26, 524288), (27, -1), (28, -1), (29, 32768), (30, 512), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, 0), (38, 33554432), (39, 512), (40, -1), (41, 524288), (42, -1), (43, 16384), (44, 16384), (45, 8388608), (46, 524288), (47, -1), (48, -1), (49, -1), (50, -1), (51, 16777216), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 32768), (6, 262144), (7, -1), (8, -1), (9, 4194304), (10, -1), (11, -1), (12, -1), (13, -1), (14, 4194304), (15, -1), (16, 8388608), (17, 131072), (18, 16777216), (19, 8388608), (20, 131072), (21, 270336), (22, -1), (23, 4194304), (24, -1), (25, -1), (26, 524288), (27, -1), (28, -1), (29, 32768), (30, 512), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, 33554432), (39, 512), (40, -1), (41, 524288), (42, -1), (43, 16384), (44, 16384), (45, 8388608), (46, 524288), (47, -1), (48, -1), (49, -1), (50, -1), (51, 16777216), (52, -1)]

Covered at level 10 : set()

After reduction : 
 pending  : [26, 41, 6, 21, 20, 17, 14, 19, 16, 9, 5, 29, 30, 39, 43, 44, 45, 46, 51, 38, 18, 23]
 solution : [7, 10, 24, 36]


Solution : [7, 10, 24, 36] has cost 34.


Before backtrack at level 10
 pending : [26, 41, 6, 21, 20, 17, 14, 19, 16, 9, 5, 29, 30, 39, 43, 44, 45, 46, 51, 38, 18, 23]
 solution : [7, 10, 24, 36]

After backtrack at level 10
 pending : [26, 41, 6, 21, 20, 17, 14, 19, 16, 9, 5, 29, 30, 39, 43, 44, 45, 46, 51, 38, 18, 23, 37]
 solution : [7, 10, 24, 36]


Invert decision for 36 at level 9


New level: 10
 pending : [26, 41, 6, 21, 20, 17, 14, 19, 16, 9, 5, 29, 30, 39, 43, 44, 45, 46, 51, 38, 18, 23, 37]
 solution : [7, 10, 24]


Before reduction : 
 pending  : [26, 41, 6, 21, 20, 17, 14, 19, 16, 9, 5, 29, 30, 39, 43, 44, 45, 46, 51, 38, 18, 23, 37]
 solution : [7, 10, 24]

Essensial at level 10 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 32768), (6, 262144), (7, -1), (8, -1), (9, 4194304), (10, -1), (11, -1), (12, -1), (13, -1), (14, 4194304), (15, -1), (16, 8388608), (17, 131072), (18, 16777216), (19, 8388608), (20, 131072), (21, 270336), (22, -1), (23, 4194304), (24, -1), (25, -1), (26, 524288), (27, -1), (28, -1), (29, 32768), (30, 512), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, 33554432), (39, 512), (40, -1), (41, 524288), (42, -1), (43, 16384), (44, 16384), (45, 8388608), (46, 524288), (47, -1), (48, -1), (49, -1), (50, -1), (51, 16777216), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 131072), (6, 524288), (7, -1), (8, -1), (9, 16777216), (10, -1), (11, -1), (12, -1), (13, -1), (14, 4194304), (15, -1), (16, 8388608), (17, 131072), (18, 33554432), (19, 16777216), (20, 262144), (21, 557056), (22, -1), (23, 16777216), (24, -1), (25, -1), (26, 2097152), (27, -1), (28, -1), (29, 131072), (30, 2048), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, 512), (38, 33554432), (39, 2048), (40, -1), (41, 2097152), (42, -1), (43, 65536), (44, 65536), (45, 16777216), (46, 2097152), (47, -1), (48, -1), (49, -1), (50, -1), (51, 16777216), (52, -1)]

Covered at level 10 : set()

After reduction : 
 pending  : [26, 41, 6, 21, 20, 17, 14, 19, 16, 9, 5, 29, 30, 39, 43, 44, 45, 46, 51, 38, 18, 23, 37]
 solution : [7, 10, 24]


Solution : [7, 10, 24] has cost 16.


Decide in level 10 among pending : [26, 41, 6, 21, 20, 17, 14, 19, 16, 9, 5, 29, 30, 39, 43, 44, 45, 46, 51, 38, 18, 23, 37]

Coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 131072), (6, 524288), (7, -1), (8, -1), (9, 16777216), (10, -1), (11, -1), (12, -1), (13, -1), (14, 4194304), (15, -1), (16, 8388608), (17, 131072), (18, 33554432), (19, 16777216), (20, 262144), (21, 557056), (22, -1), (23, 16777216), (24, -1), (25, -1), (26, 2097152), (27, -1), (28, -1), (29, 131072), (30, 2048), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, 512), (38, 33554432), (39, 2048), (40, -1), (41, 2097152), (42, -1), (43, 65536), (44, 65536), (45, 16777216), (46, 2097152), (47, -1), (48, -1), (49, -1), (50, -1), (51, 16777216), (52, -1)]

Decide 38 with phase True at level 10

After decision at level 10
 pending : [26, 41, 6, 21, 20, 17, 14, 19, 16, 9, 5, 29, 30, 39, 43, 44, 45, 46, 51, 18, 23, 37]
 solution : [7, 10, 24, 38]


New level: 11
 pending : [26, 41, 6, 21, 20, 17, 14, 19, 16, 9, 5, 29, 30, 39, 43, 44, 45, 46, 51, 18, 23, 37]
 solution : [7, 10, 24, 38]


Before reduction : 
 pending  : [26, 41, 6, 21, 20, 17, 14, 19, 16, 9, 5, 29, 30, 39, 43, 44, 45, 46, 51, 18, 23, 37]
 solution : [7, 10, 24, 38]

Essensial at level 11 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 131072), (6, 524288), (7, -1), (8, -1), (9, 16777216), (10, -1), (11, -1), (12, -1), (13, -1), (14, 4194304), (15, -1), (16, 8388608), (17, 131072), (18, 33554432), (19, 16777216), (20, 262144), (21, 557056), (22, -1), (23, 16777216), (24, -1), (25, -1), (26, 2097152), (27, -1), (28, -1), (29, 131072), (30, 2048), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, 512), (38, 33554432), (39, 2048), (40, -1), (41, 2097152), (42, -1), (43, 65536), (44, 65536), (45, 16777216), (46, 2097152), (47, -1), (48, -1), (49, -1), (50, -1), (51, 16777216), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 0), (6, 262144), (7, -1), (8, -1), (9, 65536), (10, -1), (11, -1), (12, -1), (13, -1), (14, 4194304), (15, -1), (16, 8388608), (17, 131072), (18, 33554432), (19, 16777216), (20, 262144), (21, 270336), (22, -1), (23, 65536), (24, -1), (25, -1), (26, 2097152), (27, -1), (28, -1), (29, 0), (30, 0), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, 512), (38, -1), (39, 0), (40, -1), (41, 2097152), (42, -1), (43, 0), (44, 0), (45, 0), (46, 0), (47, -1), (48, -1), (49, -1), (50, -1), (51, 0), (52, -1)]

Covered at level 11 : {5, 39, 43, 44, 45, 46, 51, 29, 30}

After reduction : 
 pending  : [26, 41, 6, 21, 20, 17, 14, 19, 16, 9, 18, 23, 37]
 solution : [7, 10, 24, 38]


Before reduction : 
 pending  : [26, 41, 6, 21, 20, 17, 14, 19, 16, 9, 18, 23, 37]
 solution : [7, 10, 24, 38]

Essensial at level 11 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 0), (6, 262144), (7, -1), (8, -1), (9, 65536), (10, -1), (11, -1), (12, -1), (13, -1), (14, 4194304), (15, -1), (16, 8388608), (17, 131072), (18, 33554432), (19, 16777216), (20, 262144), (21, 270336), (22, -1), (23, 65536), (24, -1), (25, -1), (26, 2097152), (27, -1), (28, -1), (29, 0), (30, 0), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, 512), (38, -1), (39, 0), (40, -1), (41, 2097152), (42, -1), (43, 0), (44, 0), (45, 0), (46, 0), (47, -1), (48, -1), (49, -1), (50, -1), (51, 0), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, 262144), (7, -1), (8, -1), (9, 65536), (10, -1), (11, -1), (12, -1), (13, -1), (14, 4194304), (15, -1), (16, 8388608), (17, 131072), (18, 33554432), (19, 16777216), (20, 262144), (21, 270336), (22, -1), (23, 65536), (24, -1), (25, -1), (26, 2097152), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, 512), (38, -1), (39, -1), (40, -1), (41, 2097152), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 11 : set()

After reduction : 
 pending  : [26, 41, 6, 21, 20, 17, 14, 19, 16, 9, 18, 23, 37]
 solution : [7, 10, 24, 38]


Solution : [7, 10, 24, 38] has cost 34.


Before backtrack at level 11
 pending : [26, 41, 6, 21, 20, 17, 14, 19, 16, 9, 18, 23, 37]
 solution : [7, 10, 24, 38]

After backtrack at level 11
 pending : [26, 41, 6, 21, 20, 17, 14, 19, 16, 9, 18, 23, 37, 5, 29, 30, 39, 43, 44, 45, 46, 51]
 solution : [7, 10, 24, 38]


Invert decision for 38 at level 10


New level: 11
 pending : [26, 41, 6, 21, 20, 17, 14, 19, 16, 9, 18, 23, 37, 5, 29, 30, 39, 43, 44, 45, 46, 51]
 solution : [7, 10, 24]


Before reduction : 
 pending  : [26, 41, 6, 21, 20, 17, 14, 19, 16, 9, 18, 23, 37, 5, 29, 30, 39, 43, 44, 45, 46, 51]
 solution : [7, 10, 24]

Essensial at level 11 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, 262144), (7, -1), (8, -1), (9, 65536), (10, -1), (11, -1), (12, -1), (13, -1), (14, 4194304), (15, -1), (16, 8388608), (17, 131072), (18, 33554432), (19, 16777216), (20, 262144), (21, 270336), (22, -1), (23, 65536), (24, -1), (25, -1), (26, 2097152), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, 512), (38, -1), (39, -1), (40, -1), (41, 2097152), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 131072), (6, 524288), (7, -1), (8, -1), (9, 16777216), (10, -1), (11, -1), (12, -1), (13, -1), (14, 4194304), (15, -1), (16, 8388608), (17, 131072), (18, 33554432), (19, 16777216), (20, 262144), (21, 557056), (22, -1), (23, 16777216), (24, -1), (25, -1), (26, 2097152), (27, -1), (28, -1), (29, 131072), (30, 2048), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, 512), (38, -1), (39, 2048), (40, -1), (41, 2097152), (42, -1), (43, 65536), (44, 65536), (45, 16777216), (46, 2097152), (47, -1), (48, -1), (49, -1), (50, -1), (51, 16777216), (52, -1)]

Covered at level 11 : set()

After reduction : 
 pending  : [26, 41, 6, 21, 20, 17, 14, 19, 16, 9, 18, 23, 37, 5, 29, 30, 39, 43, 44, 45, 46, 51]
 solution : [7, 10, 24]


Solution : [7, 10, 24] has cost 16.


Decide in level 11 among pending : [26, 41, 6, 21, 20, 17, 14, 19, 16, 9, 18, 23, 37, 5, 29, 30, 39, 43, 44, 45, 46, 51]

Coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 131072), (6, 524288), (7, -1), (8, -1), (9, 16777216), (10, -1), (11, -1), (12, -1), (13, -1), (14, 4194304), (15, -1), (16, 8388608), (17, 131072), (18, 33554432), (19, 16777216), (20, 262144), (21, 557056), (22, -1), (23, 16777216), (24, -1), (25, -1), (26, 2097152), (27, -1), (28, -1), (29, 131072), (30, 2048), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, 512), (38, -1), (39, 2048), (40, -1), (41, 2097152), (42, -1), (43, 65536), (44, 65536), (45, 16777216), (46, 2097152), (47, -1), (48, -1), (49, -1), (50, -1), (51, 16777216), (52, -1)]

Decide 18 with phase True at level 11

After decision at level 11
 pending : [26, 41, 6, 21, 20, 17, 14, 19, 16, 9, 23, 37, 5, 29, 30, 39, 43, 44, 45, 46, 51]
 solution : [7, 10, 24, 18]


New level: 12
 pending : [26, 41, 6, 21, 20, 17, 14, 19, 16, 9, 23, 37, 5, 29, 30, 39, 43, 44, 45, 46, 51]
 solution : [7, 10, 24, 18]


Before reduction : 
 pending  : [26, 41, 6, 21, 20, 17, 14, 19, 16, 9, 23, 37, 5, 29, 30, 39, 43, 44, 45, 46, 51]
 solution : [7, 10, 24, 18]

Essensial at level 12 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 131072), (6, 524288), (7, -1), (8, -1), (9, 16777216), (10, -1), (11, -1), (12, -1), (13, -1), (14, 4194304), (15, -1), (16, 8388608), (17, 131072), (18, 33554432), (19, 16777216), (20, 262144), (21, 557056), (22, -1), (23, 16777216), (24, -1), (25, -1), (26, 2097152), (27, -1), (28, -1), (29, 131072), (30, 2048), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, 512), (38, -1), (39, 2048), (40, -1), (41, 2097152), (42, -1), (43, 65536), (44, 65536), (45, 16777216), (46, 2097152), (47, -1), (48, -1), (49, -1), (50, -1), (51, 16777216), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 32768), (6, 0), (7, -1), (8, -1), (9, 16777216), (10, -1), (11, -1), (12, -1), (13, -1), (14, 32768), (15, -1), (16, 131072), (17, 32768), (18, -1), (19, 0), (20, 0), (21, 0), (22, -1), (23, 16777216), (24, -1), (25, -1), (26, 2048), (27, -1), (28, -1), (29, 65536), (30, 1024), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, 512), (38, -1), (39, 512), (40, -1), (41, 2048), (42, -1), (43, 32768), (44, 32768), (45, 16777216), (46, 2097152), (47, -1), (48, -1), (49, -1), (50, -1), (51, 16777216), (52, -1)]

Covered at level 12 : {19, 20, 21, 6}

After reduction : 
 pending  : [26, 41, 17, 14, 16, 9, 23, 37, 5, 29, 30, 39, 43, 44, 45, 46, 51]
 solution : [7, 10, 24, 18]


Before reduction : 
 pending  : [26, 41, 17, 14, 16, 9, 23, 37, 5, 29, 30, 39, 43, 44, 45, 46, 51]
 solution : [7, 10, 24, 18]

Essensial at level 12 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 32768), (6, 0), (7, -1), (8, -1), (9, 16777216), (10, -1), (11, -1), (12, -1), (13, -1), (14, 32768), (15, -1), (16, 131072), (17, 32768), (18, -1), (19, 0), (20, 0), (21, 0), (22, -1), (23, 16777216), (24, -1), (25, -1), (26, 2048), (27, -1), (28, -1), (29, 65536), (30, 1024), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, 512), (38, -1), (39, 512), (40, -1), (41, 2048), (42, -1), (43, 32768), (44, 32768), (45, 16777216), (46, 2097152), (47, -1), (48, -1), (49, -1), (50, -1), (51, 16777216), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 32768), (6, -1), (7, -1), (8, -1), (9, 16777216), (10, -1), (11, -1), (12, -1), (13, -1), (14, 32768), (15, -1), (16, 131072), (17, 32768), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, 16777216), (24, -1), (25, -1), (26, 2048), (27, -1), (28, -1), (29, 65536), (30, 1024), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, 512), (38, -1), (39, 512), (40, -1), (41, 2048), (42, -1), (43, 32768), (44, 32768), (45, 16777216), (46, 2097152), (47, -1), (48, -1), (49, -1), (50, -1), (51, 16777216), (52, -1)]

Covered at level 12 : set()

After reduction : 
 pending  : [26, 41, 17, 14, 16, 9, 23, 37, 5, 29, 30, 39, 43, 44, 45, 46, 51]
 solution : [7, 10, 24, 18]


Solution : [7, 10, 24, 18] has cost 25.


Before backtrack at level 12
 pending : [26, 41, 17, 14, 16, 9, 23, 37, 5, 29, 30, 39, 43, 44, 45, 46, 51]
 solution : [7, 10, 24, 18]

After backtrack at level 12
 pending : [26, 41, 17, 14, 16, 9, 23, 37, 5, 29, 30, 39, 43, 44, 45, 46, 51, 6, 21, 20, 19]
 solution : [7, 10, 24, 18]


Invert decision for 18 at level 11


New level: 12
 pending : [26, 41, 17, 14, 16, 9, 23, 37, 5, 29, 30, 39, 43, 44, 45, 46, 51, 6, 21, 20, 19]
 solution : [7, 10, 24]


Before reduction : 
 pending  : [26, 41, 17, 14, 16, 9, 23, 37, 5, 29, 30, 39, 43, 44, 45, 46, 51, 6, 21, 20, 19]
 solution : [7, 10, 24]

Essensial at level 12 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 32768), (6, -1), (7, -1), (8, -1), (9, 16777216), (10, -1), (11, -1), (12, -1), (13, -1), (14, 32768), (15, -1), (16, 131072), (17, 32768), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, 16777216), (24, -1), (25, -1), (26, 2048), (27, -1), (28, -1), (29, 65536), (30, 1024), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, 512), (38, -1), (39, 512), (40, -1), (41, 2048), (42, -1), (43, 32768), (44, 32768), (45, 16777216), (46, 2097152), (47, -1), (48, -1), (49, -1), (50, -1), (51, 16777216), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 131072), (6, 524288), (7, -1), (8, -1), (9, 16777216), (10, -1), (11, -1), (12, -1), (13, -1), (14, 4194304), (15, -1), (16, 8388608), (17, 131072), (18, -1), (19, 16777216), (20, 262144), (21, 557056), (22, -1), (23, 16777216), (24, -1), (25, -1), (26, 2097152), (27, -1), (28, -1), (29, 131072), (30, 2048), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, 512), (38, -1), (39, 2048), (40, -1), (41, 2097152), (42, -1), (43, 65536), (44, 65536), (45, 16777216), (46, 2097152), (47, -1), (48, -1), (49, -1), (50, -1), (51, 16777216), (52, -1)]

Covered at level 12 : set()

After reduction : 
 pending  : [26, 41, 17, 14, 16, 9, 23, 37, 5, 29, 30, 39, 43, 44, 45, 46, 51, 6, 21, 20, 19]
 solution : [7, 10, 24]


Solution : [7, 10, 24] has cost 16.


Decide in level 12 among pending : [26, 41, 17, 14, 16, 9, 23, 37, 5, 29, 30, 39, 43, 44, 45, 46, 51, 6, 21, 20, 19]

Coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 131072), (6, 524288), (7, -1), (8, -1), (9, 16777216), (10, -1), (11, -1), (12, -1), (13, -1), (14, 4194304), (15, -1), (16, 8388608), (17, 131072), (18, -1), (19, 16777216), (20, 262144), (21, 557056), (22, -1), (23, 16777216), (24, -1), (25, -1), (26, 2097152), (27, -1), (28, -1), (29, 131072), (30, 2048), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, 512), (38, -1), (39, 2048), (40, -1), (41, 2097152), (42, -1), (43, 65536), (44, 65536), (45, 16777216), (46, 2097152), (47, -1), (48, -1), (49, -1), (50, -1), (51, 16777216), (52, -1)]

Decide 9 with phase True at level 12

After decision at level 12
 pending : [26, 41, 17, 14, 16, 23, 37, 5, 29, 30, 39, 43, 44, 45, 46, 51, 6, 21, 20, 19]
 solution : [7, 10, 24, 9]


New level: 13
 pending : [26, 41, 17, 14, 16, 23, 37, 5, 29, 30, 39, 43, 44, 45, 46, 51, 6, 21, 20, 19]
 solution : [7, 10, 24, 9]


Before reduction : 
 pending  : [26, 41, 17, 14, 16, 23, 37, 5, 29, 30, 39, 43, 44, 45, 46, 51, 6, 21, 20, 19]
 solution : [7, 10, 24, 9]

Essensial at level 13 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 131072), (6, 524288), (7, -1), (8, -1), (9, 16777216), (10, -1), (11, -1), (12, -1), (13, -1), (14, 4194304), (15, -1), (16, 8388608), (17, 131072), (18, -1), (19, 16777216), (20, 262144), (21, 557056), (22, -1), (23, 16777216), (24, -1), (25, -1), (26, 2097152), (27, -1), (28, -1), (29, 131072), (30, 2048), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, 512), (38, -1), (39, 2048), (40, -1), (41, 2097152), (42, -1), (43, 65536), (44, 65536), (45, 16777216), (46, 2097152), (47, -1), (48, -1), (49, -1), (50, -1), (51, 16777216), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 0), (6, 262144), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 4194304), (15, -1), (16, 8388608), (17, 131072), (18, -1), (19, 8388608), (20, 131072), (21, 270336), (22, -1), (23, 0), (24, -1), (25, -1), (26, 2097152), (27, -1), (28, -1), (29, 0), (30, 0), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, 512), (38, -1), (39, 0), (40, -1), (41, 2097152), (42, -1), (43, 0), (44, 0), (45, 0), (46, 0), (47, -1), (48, -1), (49, -1), (50, -1), (51, 0), (52, -1)]

Covered at level 13 : {5, 39, 43, 44, 45, 46, 51, 23, 29, 30}

After reduction : 
 pending  : [26, 41, 17, 14, 16, 37, 6, 21, 20, 19]
 solution : [7, 10, 24, 9]


Before reduction : 
 pending  : [26, 41, 17, 14, 16, 37, 6, 21, 20, 19]
 solution : [7, 10, 24, 9]

Essensial at level 13 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 0), (6, 262144), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 4194304), (15, -1), (16, 8388608), (17, 131072), (18, -1), (19, 8388608), (20, 131072), (21, 270336), (22, -1), (23, 0), (24, -1), (25, -1), (26, 2097152), (27, -1), (28, -1), (29, 0), (30, 0), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, 512), (38, -1), (39, 0), (40, -1), (41, 2097152), (42, -1), (43, 0), (44, 0), (45, 0), (46, 0), (47, -1), (48, -1), (49, -1), (50, -1), (51, 0), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, 262144), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 4194304), (15, -1), (16, 8388608), (17, 131072), (18, -1), (19, 8388608), (20, 131072), (21, 270336), (22, -1), (23, -1), (24, -1), (25, -1), (26, 2097152), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, 512), (38, -1), (39, -1), (40, -1), (41, 2097152), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 13 : set()

After reduction : 
 pending  : [26, 41, 17, 14, 16, 37, 6, 21, 20, 19]
 solution : [7, 10, 24, 9]


Solution : [7, 10, 24, 9] has cost 20.


Before backtrack at level 13
 pending : [26, 41, 17, 14, 16, 37, 6, 21, 20, 19]
 solution : [7, 10, 24, 9]

After backtrack at level 13
 pending : [26, 41, 17, 14, 16, 37, 6, 21, 20, 19, 23, 5, 29, 30, 39, 43, 44, 45, 46, 51]
 solution : [7, 10, 24, 9]


Invert decision for 9 at level 12


New level: 13
 pending : [26, 41, 17, 14, 16, 37, 6, 21, 20, 19, 23, 5, 29, 30, 39, 43, 44, 45, 46, 51]
 solution : [7, 10, 24]


Before reduction : 
 pending  : [26, 41, 17, 14, 16, 37, 6, 21, 20, 19, 23, 5, 29, 30, 39, 43, 44, 45, 46, 51]
 solution : [7, 10, 24]

Essensial at level 13 : {23}

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, 262144), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 4194304), (15, -1), (16, 8388608), (17, 131072), (18, -1), (19, 8388608), (20, 131072), (21, 270336), (22, -1), (23, -1), (24, -1), (25, -1), (26, 2097152), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, 512), (38, -1), (39, -1), (40, -1), (41, 2097152), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 0), (6, 262144), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 4194304), (15, -1), (16, 8388608), (17, 131072), (18, -1), (19, 8388608), (20, 131072), (21, 270336), (22, -1), (23, -1), (24, -1), (25, -1), (26, 2097152), (27, -1), (28, -1), (29, 0), (30, 0), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, 512), (38, -1), (39, 0), (40, -1), (41, 2097152), (42, -1), (43, 0), (44, 0), (45, 0), (46, 0), (47, -1), (48, -1), (49, -1), (50, -1), (51, 0), (52, -1)]

Covered at level 13 : {5, 39, 43, 44, 45, 46, 51, 29, 30}

After reduction : 
 pending  : [26, 41, 17, 14, 16, 37, 6, 21, 20, 19]
 solution : [7, 10, 24, 23]


Before reduction : 
 pending  : [26, 41, 17, 14, 16, 37, 6, 21, 20, 19]
 solution : [7, 10, 24, 23]

Essensial at level 13 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 0), (6, 262144), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 4194304), (15, -1), (16, 8388608), (17, 131072), (18, -1), (19, 8388608), (20, 131072), (21, 270336), (22, -1), (23, -1), (24, -1), (25, -1), (26, 2097152), (27, -1), (28, -1), (29, 0), (30, 0), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, 512), (38, -1), (39, 0), (40, -1), (41, 2097152), (42, -1), (43, 0), (44, 0), (45, 0), (46, 0), (47, -1), (48, -1), (49, -1), (50, -1), (51, 0), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, 262144), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 4194304), (15, -1), (16, 8388608), (17, 131072), (18, -1), (19, 8388608), (20, 131072), (21, 270336), (22, -1), (23, -1), (24, -1), (25, -1), (26, 2097152), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, 512), (38, -1), (39, -1), (40, -1), (41, 2097152), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 13 : set()

After reduction : 
 pending  : [26, 41, 17, 14, 16, 37, 6, 21, 20, 19]
 solution : [7, 10, 24, 23]


Solution : [7, 10, 24, 23] has cost 23.


Before backtrack at level 13
 pending : [26, 41, 17, 14, 16, 37, 6, 21, 20, 19]
 solution : [7, 10, 24, 23]

After backtrack at level 13
 pending : [26, 41, 17, 14, 16, 37, 6, 21, 20, 19, 23, 5, 29, 30, 39, 43, 44, 45, 46, 51]
 solution : [7, 10, 24]


Before backtrack at level 12
 pending : [26, 41, 17, 14, 16, 37, 6, 21, 20, 19, 23, 5, 29, 30, 39, 43, 44, 45, 46, 51]
 solution : [7, 10, 24]

After backtrack at level 12
 pending : [26, 41, 17, 14, 16, 37, 6, 21, 20, 19, 23, 5, 29, 30, 39, 43, 44, 45, 46, 51, 9]
 solution : [7, 10, 24]


Before backtrack at level 11
 pending : [26, 41, 17, 14, 16, 37, 6, 21, 20, 19, 23, 5, 29, 30, 39, 43, 44, 45, 46, 51, 9]
 solution : [7, 10, 24]

After backtrack at level 11
 pending : [26, 41, 17, 14, 16, 37, 6, 21, 20, 19, 23, 5, 29, 30, 39, 43, 44, 45, 46, 51, 9, 18]
 solution : [7, 10, 24]


Before backtrack at level 10
 pending : [26, 41, 17, 14, 16, 37, 6, 21, 20, 19, 23, 5, 29, 30, 39, 43, 44, 45, 46, 51, 9, 18]
 solution : [7, 10, 24]

After backtrack at level 10
 pending : [26, 41, 17, 14, 16, 37, 6, 21, 20, 19, 23, 5, 29, 30, 39, 43, 44, 45, 46, 51, 9, 18, 38]
 solution : [7, 10, 24]


Before backtrack at level 9
 pending : [26, 41, 17, 14, 16, 37, 6, 21, 20, 19, 23, 5, 29, 30, 39, 43, 44, 45, 46, 51, 9, 18, 38]
 solution : [7, 10, 24]

After backtrack at level 9
 pending : [26, 41, 17, 14, 16, 37, 6, 21, 20, 19, 23, 5, 29, 30, 39, 43, 44, 45, 46, 51, 9, 18, 38, 31, 33, 36]
 solution : [7, 10, 24]


Invert decision for 24 at level 8


New level: 9
 pending : [26, 41, 17, 14, 16, 37, 6, 21, 20, 19, 23, 5, 29, 30, 39, 43, 44, 45, 46, 51, 9, 18, 38, 31, 33, 36]
 solution : [7, 10]


Before reduction : 
 pending  : [26, 41, 17, 14, 16, 37, 6, 21, 20, 19, 23, 5, 29, 30, 39, 43, 44, 45, 46, 51, 9, 18, 38, 31, 33, 36]
 solution : [7, 10]

Essensial at level 9 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, 262144), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 4194304), (15, -1), (16, 8388608), (17, 131072), (18, -1), (19, 8388608), (20, 131072), (21, 270336), (22, -1), (23, -1), (24, -1), (25, -1), (26, 2097152), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, 512), (38, -1), (39, -1), (40, -1), (41, 2097152), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 524288), (6, 524288), (7, -1), (8, -1), (9, 67108864), (10, -1), (11, -1), (12, -1), (13, -1), (14, 4194304), (15, -1), (16, 8388608), (17, 131072), (18, 33554432), (19, 16777216), (20, 262144), (21, 557056), (22, -1), (23, 67108864), (24, -1), (25, -1), (26, 2097152), (27, -1), (28, -1), (29, 524288), (30, 8192), (31, 8192), (32, -1), (33, 1048576), (34, -1), (35, -1), (36, 67108864), (37, 134217728), (38, 67108864), (39, 8192), (40, -1), (41, 2097152), (42, -1), (43, 262144), (44, 262144), (45, 33554432), (46, 8388608), (47, -1), (48, -1), (49, -1), (50, -1), (51, 33554432), (52, -1)]

Covered at level 9 : set()

After reduction : 
 pending  : [26, 41, 17, 14, 16, 37, 6, 21, 20, 19, 23, 5, 29, 30, 39, 43, 44, 45, 46, 51, 9, 18, 38, 31, 33, 36]
 solution : [7, 10]


Solution : [7, 10] has cost 9.


Decide in level 9 among pending : [26, 41, 17, 14, 16, 37, 6, 21, 20, 19, 23, 5, 29, 30, 39, 43, 44, 45, 46, 51, 9, 18, 38, 31, 33, 36]

Coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 524288), (6, 524288), (7, -1), (8, -1), (9, 67108864), (10, -1), (11, -1), (12, -1), (13, -1), (14, 4194304), (15, -1), (16, 8388608), (17, 131072), (18, 33554432), (19, 16777216), (20, 262144), (21, 557056), (22, -1), (23, 67108864), (24, -1), (25, -1), (26, 2097152), (27, -1), (28, -1), (29, 524288), (30, 8192), (31, 8192), (32, -1), (33, 1048576), (34, -1), (35, -1), (36, 67108864), (37, 134217728), (38, 67108864), (39, 8192), (40, -1), (41, 2097152), (42, -1), (43, 262144), (44, 262144), (45, 33554432), (46, 8388608), (47, -1), (48, -1), (49, -1), (50, -1), (51, 33554432), (52, -1)]

Decide 37 with phase True at level 9

After decision at level 9
 pending : [26, 41, 17, 14, 16, 6, 21, 20, 19, 23, 5, 29, 30, 39, 43, 44, 45, 46, 51, 9, 18, 38, 31, 33, 36]
 solution : [7, 10, 37]


New level: 10
 pending : [26, 41, 17, 14, 16, 6, 21, 20, 19, 23, 5, 29, 30, 39, 43, 44, 45, 46, 51, 9, 18, 38, 31, 33, 36]
 solution : [7, 10, 37]


Before reduction : 
 pending  : [26, 41, 17, 14, 16, 6, 21, 20, 19, 23, 5, 29, 30, 39, 43, 44, 45, 46, 51, 9, 18, 38, 31, 33, 36]
 solution : [7, 10, 37]

Essensial at level 10 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 524288), (6, 524288), (7, -1), (8, -1), (9, 67108864), (10, -1), (11, -1), (12, -1), (13, -1), (14, 4194304), (15, -1), (16, 8388608), (17, 131072), (18, 33554432), (19, 16777216), (20, 262144), (21, 557056), (22, -1), (23, 67108864), (24, -1), (25, -1), (26, 2097152), (27, -1), (28, -1), (29, 524288), (30, 8192), (31, 8192), (32, -1), (33, 1048576), (34, -1), (35, -1), (36, 67108864), (37, 134217728), (38, 67108864), (39, 8192), (40, -1), (41, 2097152), (42, -1), (43, 262144), (44, 262144), (45, 33554432), (46, 8388608), (47, -1), (48, -1), (49, -1), (50, -1), (51, 33554432), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 524288), (6, 524288), (7, -1), (8, -1), (9, 67108864), (10, -1), (11, -1), (12, -1), (13, -1), (14, 4194304), (15, -1), (16, 8388608), (17, 131072), (18, 33554432), (19, 16777216), (20, 262144), (21, 557056), (22, -1), (23, 67108864), (24, -1), (25, -1), (26, 2097152), (27, -1), (28, -1), (29, 524288), (30, 8192), (31, 4096), (32, -1), (33, 524288), (34, -1), (35, -1), (36, 33554432), (37, -1), (38, 67108864), (39, 8192), (40, -1), (41, 2097152), (42, -1), (43, 262144), (44, 262144), (45, 33554432), (46, 8388608), (47, -1), (48, -1), (49, -1), (50, -1), (51, 33554432), (52, -1)]

Covered at level 10 : set()

After reduction : 
 pending  : [26, 41, 17, 14, 16, 6, 21, 20, 19, 23, 5, 29, 30, 39, 43, 44, 45, 46, 51, 9, 18, 38, 31, 33, 36]
 solution : [7, 10, 37]


Solution : [7, 10, 37] has cost 23.


Before backtrack at level 10
 pending : [26, 41, 17, 14, 16, 6, 21, 20, 19, 23, 5, 29, 30, 39, 43, 44, 45, 46, 51, 9, 18, 38, 31, 33, 36]
 solution : [7, 10, 37]

After backtrack at level 10
 pending : [26, 41, 17, 14, 16, 6, 21, 20, 19, 23, 5, 29, 30, 39, 43, 44, 45, 46, 51, 9, 18, 38, 31, 33, 36]
 solution : [7, 10, 37]


Invert decision for 37 at level 9


New level: 10
 pending : [26, 41, 17, 14, 16, 6, 21, 20, 19, 23, 5, 29, 30, 39, 43, 44, 45, 46, 51, 9, 18, 38, 31, 33, 36]
 solution : [7, 10]


Before reduction : 
 pending  : [26, 41, 17, 14, 16, 6, 21, 20, 19, 23, 5, 29, 30, 39, 43, 44, 45, 46, 51, 9, 18, 38, 31, 33, 36]
 solution : [7, 10]

Essensial at level 10 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 524288), (6, 524288), (7, -1), (8, -1), (9, 67108864), (10, -1), (11, -1), (12, -1), (13, -1), (14, 4194304), (15, -1), (16, 8388608), (17, 131072), (18, 33554432), (19, 16777216), (20, 262144), (21, 557056), (22, -1), (23, 67108864), (24, -1), (25, -1), (26, 2097152), (27, -1), (28, -1), (29, 524288), (30, 8192), (31, 4096), (32, -1), (33, 524288), (34, -1), (35, -1), (36, 33554432), (37, -1), (38, 67108864), (39, 8192), (40, -1), (41, 2097152), (42, -1), (43, 262144), (44, 262144), (45, 33554432), (46, 8388608), (47, -1), (48, -1), (49, -1), (50, -1), (51, 33554432), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 524288), (6, 524288), (7, -1), (8, -1), (9, 67108864), (10, -1), (11, -1), (12, -1), (13, -1), (14, 4194304), (15, -1), (16, 8388608), (17, 131072), (18, 33554432), (19, 16777216), (20, 262144), (21, 557056), (22, -1), (23, 67108864), (24, -1), (25, -1), (26, 2097152), (27, -1), (28, -1), (29, 524288), (30, 8192), (31, 8192), (32, -1), (33, 1048576), (34, -1), (35, -1), (36, 67108864), (37, -1), (38, 67108864), (39, 8192), (40, -1), (41, 2097152), (42, -1), (43, 262144), (44, 262144), (45, 33554432), (46, 8388608), (47, -1), (48, -1), (49, -1), (50, -1), (51, 33554432), (52, -1)]

Covered at level 10 : set()

After reduction : 
 pending  : [26, 41, 17, 14, 16, 6, 21, 20, 19, 23, 5, 29, 30, 39, 43, 44, 45, 46, 51, 9, 18, 38, 31, 33, 36]
 solution : [7, 10]


Solution : [7, 10] has cost 9.


Decide in level 10 among pending : [26, 41, 17, 14, 16, 6, 21, 20, 19, 23, 5, 29, 30, 39, 43, 44, 45, 46, 51, 9, 18, 38, 31, 33, 36]

Coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 524288), (6, 524288), (7, -1), (8, -1), (9, 67108864), (10, -1), (11, -1), (12, -1), (13, -1), (14, 4194304), (15, -1), (16, 8388608), (17, 131072), (18, 33554432), (19, 16777216), (20, 262144), (21, 557056), (22, -1), (23, 67108864), (24, -1), (25, -1), (26, 2097152), (27, -1), (28, -1), (29, 524288), (30, 8192), (31, 8192), (32, -1), (33, 1048576), (34, -1), (35, -1), (36, 67108864), (37, -1), (38, 67108864), (39, 8192), (40, -1), (41, 2097152), (42, -1), (43, 262144), (44, 262144), (45, 33554432), (46, 8388608), (47, -1), (48, -1), (49, -1), (50, -1), (51, 33554432), (52, -1)]

Decide 23 with phase True at level 10

After decision at level 10
 pending : [26, 41, 17, 14, 16, 6, 21, 20, 19, 5, 29, 30, 39, 43, 44, 45, 46, 51, 9, 18, 38, 31, 33, 36]
 solution : [7, 10, 23]


New level: 11
 pending : [26, 41, 17, 14, 16, 6, 21, 20, 19, 5, 29, 30, 39, 43, 44, 45, 46, 51, 9, 18, 38, 31, 33, 36]
 solution : [7, 10, 23]


Before reduction : 
 pending  : [26, 41, 17, 14, 16, 6, 21, 20, 19, 5, 29, 30, 39, 43, 44, 45, 46, 51, 9, 18, 38, 31, 33, 36]
 solution : [7, 10, 23]

Essensial at level 11 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 524288), (6, 524288), (7, -1), (8, -1), (9, 67108864), (10, -1), (11, -1), (12, -1), (13, -1), (14, 4194304), (15, -1), (16, 8388608), (17, 131072), (18, 33554432), (19, 16777216), (20, 262144), (21, 557056), (22, -1), (23, 67108864), (24, -1), (25, -1), (26, 2097152), (27, -1), (28, -1), (29, 524288), (30, 8192), (31, 8192), (32, -1), (33, 1048576), (34, -1), (35, -1), (36, 67108864), (37, -1), (38, 67108864), (39, 8192), (40, -1), (41, 2097152), (42, -1), (43, 262144), (44, 262144), (45, 33554432), (46, 8388608), (47, -1), (48, -1), (49, -1), (50, -1), (51, 33554432), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 0), (6, 262144), (7, -1), (8, -1), (9, 0), (10, -1), (11, -1), (12, -1), (13, -1), (14, 4194304), (15, -1), (16, 8388608), (17, 131072), (18, 16777216), (19, 8388608), (20, 131072), (21, 270336), (22, -1), (23, -1), (24, -1), (25, -1), (26, 2097152), (27, -1), (28, -1), (29, 0), (30, 0), (31, 0), (32, -1), (33, 0), (34, -1), (35, -1), (36, 524288), (37, -1), (38, 0), (39, 0), (40, -1), (41, 2097152), (42, -1), (43, 0), (44, 0), (45, 0), (46, 0), (47, -1), (48, -1), (49, -1), (50, -1), (51, 0), (52, -1)]

Covered at level 11 : {33, 5, 38, 39, 9, 43, 44, 45, 46, 51, 29, 30, 31}

After reduction : 
 pending  : [26, 41, 17, 14, 16, 6, 21, 20, 19, 18, 36]
 solution : [7, 10, 23]


Before reduction : 
 pending  : [26, 41, 17, 14, 16, 6, 21, 20, 19, 18, 36]
 solution : [7, 10, 23]

Essensial at level 11 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 0), (6, 262144), (7, -1), (8, -1), (9, 0), (10, -1), (11, -1), (12, -1), (13, -1), (14, 4194304), (15, -1), (16, 8388608), (17, 131072), (18, 16777216), (19, 8388608), (20, 131072), (21, 270336), (22, -1), (23, -1), (24, -1), (25, -1), (26, 2097152), (27, -1), (28, -1), (29, 0), (30, 0), (31, 0), (32, -1), (33, 0), (34, -1), (35, -1), (36, 524288), (37, -1), (38, 0), (39, 0), (40, -1), (41, 2097152), (42, -1), (43, 0), (44, 0), (45, 0), (46, 0), (47, -1), (48, -1), (49, -1), (50, -1), (51, 0), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, 262144), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 4194304), (15, -1), (16, 8388608), (17, 131072), (18, 16777216), (19, 8388608), (20, 131072), (21, 270336), (22, -1), (23, -1), (24, -1), (25, -1), (26, 2097152), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, 524288), (37, -1), (38, -1), (39, -1), (40, -1), (41, 2097152), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 11 : set()

After reduction : 
 pending  : [26, 41, 17, 14, 16, 6, 21, 20, 19, 18, 36]
 solution : [7, 10, 23]


Solution : [7, 10, 23] has cost 16.


Decide in level 11 among pending : [26, 41, 17, 14, 16, 6, 21, 20, 19, 18, 36]

Coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, 262144), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 4194304), (15, -1), (16, 8388608), (17, 131072), (18, 16777216), (19, 8388608), (20, 131072), (21, 270336), (22, -1), (23, -1), (24, -1), (25, -1), (26, 2097152), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, 524288), (37, -1), (38, -1), (39, -1), (40, -1), (41, 2097152), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Decide 18 with phase True at level 11

After decision at level 11
 pending : [26, 41, 17, 14, 16, 6, 21, 20, 19, 36]
 solution : [7, 10, 23, 18]


New level: 12
 pending : [26, 41, 17, 14, 16, 6, 21, 20, 19, 36]
 solution : [7, 10, 23, 18]


Before reduction : 
 pending  : [26, 41, 17, 14, 16, 6, 21, 20, 19, 36]
 solution : [7, 10, 23, 18]

Essensial at level 12 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, 262144), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 4194304), (15, -1), (16, 8388608), (17, 131072), (18, 16777216), (19, 8388608), (20, 131072), (21, 270336), (22, -1), (23, -1), (24, -1), (25, -1), (26, 2097152), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, 524288), (37, -1), (38, -1), (39, -1), (40, -1), (41, 2097152), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, 0), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 32768), (15, -1), (16, 131072), (17, 32768), (18, -1), (19, 0), (20, 0), (21, 0), (22, -1), (23, -1), (24, -1), (25, -1), (26, 2048), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, 1024), (37, -1), (38, -1), (39, -1), (40, -1), (41, 2048), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 12 : {19, 20, 21, 6}

After reduction : 
 pending  : [26, 41, 17, 14, 16, 36]
 solution : [7, 10, 23, 18]


Before reduction : 
 pending  : [26, 41, 17, 14, 16, 36]
 solution : [7, 10, 23, 18]

Essensial at level 12 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, 0), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 32768), (15, -1), (16, 131072), (17, 32768), (18, -1), (19, 0), (20, 0), (21, 0), (22, -1), (23, -1), (24, -1), (25, -1), (26, 2048), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, 1024), (37, -1), (38, -1), (39, -1), (40, -1), (41, 2048), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 32768), (15, -1), (16, 131072), (17, 32768), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, 2048), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, 1024), (37, -1), (38, -1), (39, -1), (40, -1), (41, 2048), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 12 : set()

After reduction : 
 pending  : [26, 41, 17, 14, 16, 36]
 solution : [7, 10, 23, 18]


Solution : [7, 10, 23, 18] has cost 25.


Before backtrack at level 12
 pending : [26, 41, 17, 14, 16, 36]
 solution : [7, 10, 23, 18]

After backtrack at level 12
 pending : [26, 41, 17, 14, 16, 36, 6, 21, 20, 19]
 solution : [7, 10, 23, 18]


Invert decision for 18 at level 11


New level: 12
 pending : [26, 41, 17, 14, 16, 36, 6, 21, 20, 19]
 solution : [7, 10, 23]


Before reduction : 
 pending  : [26, 41, 17, 14, 16, 36, 6, 21, 20, 19]
 solution : [7, 10, 23]

Essensial at level 12 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 32768), (15, -1), (16, 131072), (17, 32768), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, 2048), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, 1024), (37, -1), (38, -1), (39, -1), (40, -1), (41, 2048), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, 262144), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 4194304), (15, -1), (16, 8388608), (17, 131072), (18, -1), (19, 8388608), (20, 131072), (21, 270336), (22, -1), (23, -1), (24, -1), (25, -1), (26, 2097152), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, 524288), (37, -1), (38, -1), (39, -1), (40, -1), (41, 2097152), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 12 : set()

After reduction : 
 pending  : [26, 41, 17, 14, 16, 36, 6, 21, 20, 19]
 solution : [7, 10, 23]


Solution : [7, 10, 23] has cost 16.


Decide in level 12 among pending : [26, 41, 17, 14, 16, 36, 6, 21, 20, 19]

Coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, 262144), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 4194304), (15, -1), (16, 8388608), (17, 131072), (18, -1), (19, 8388608), (20, 131072), (21, 270336), (22, -1), (23, -1), (24, -1), (25, -1), (26, 2097152), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, 524288), (37, -1), (38, -1), (39, -1), (40, -1), (41, 2097152), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Decide 16 with phase True at level 12

After decision at level 12
 pending : [26, 41, 17, 14, 36, 6, 21, 20, 19]
 solution : [7, 10, 23, 16]


New level: 13
 pending : [26, 41, 17, 14, 36, 6, 21, 20, 19]
 solution : [7, 10, 23, 16]


Before reduction : 
 pending  : [26, 41, 17, 14, 36, 6, 21, 20, 19]
 solution : [7, 10, 23, 16]

Essensial at level 13 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, 262144), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 4194304), (15, -1), (16, 8388608), (17, 131072), (18, -1), (19, 8388608), (20, 131072), (21, 270336), (22, -1), (23, -1), (24, -1), (25, -1), (26, 2097152), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, 524288), (37, -1), (38, -1), (39, -1), (40, -1), (41, 2097152), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, 131072), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 0), (15, -1), (16, -1), (17, 0), (18, -1), (19, 2097152), (20, 0), (21, 133120), (22, -1), (23, -1), (24, -1), (25, -1), (26, 524288), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, 1024), (37, -1), (38, -1), (39, -1), (40, -1), (41, 524288), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 13 : {17, 20, 14}

After reduction : 
 pending  : [26, 41, 36, 6, 21, 19]
 solution : [7, 10, 23, 16]


Before reduction : 
 pending  : [26, 41, 36, 6, 21, 19]
 solution : [7, 10, 23, 16]

Essensial at level 13 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, 131072), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 0), (15, -1), (16, -1), (17, 0), (18, -1), (19, 2097152), (20, 0), (21, 133120), (22, -1), (23, -1), (24, -1), (25, -1), (26, 524288), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, 1024), (37, -1), (38, -1), (39, -1), (40, -1), (41, 524288), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, 131072), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, 2097152), (20, -1), (21, 133120), (22, -1), (23, -1), (24, -1), (25, -1), (26, 524288), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, 1024), (37, -1), (38, -1), (39, -1), (40, -1), (41, 524288), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 13 : set()

After reduction : 
 pending  : [26, 41, 36, 6, 21, 19]
 solution : [7, 10, 23, 16]


Solution : [7, 10, 23, 16] has cost 23.


Before backtrack at level 13
 pending : [26, 41, 36, 6, 21, 19]
 solution : [7, 10, 23, 16]

After backtrack at level 13
 pending : [26, 41, 36, 6, 21, 19, 17, 14, 20]
 solution : [7, 10, 23, 16]


Invert decision for 16 at level 12


New level: 13
 pending : [26, 41, 36, 6, 21, 19, 17, 14, 20]
 solution : [7, 10, 23]


Before reduction : 
 pending  : [26, 41, 36, 6, 21, 19, 17, 14, 20]
 solution : [7, 10, 23]

Essensial at level 13 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, 131072), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, 2097152), (20, -1), (21, 133120), (22, -1), (23, -1), (24, -1), (25, -1), (26, 524288), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, 1024), (37, -1), (38, -1), (39, -1), (40, -1), (41, 524288), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, 262144), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 4194304), (15, -1), (16, -1), (17, 131072), (18, -1), (19, 8388608), (20, 131072), (21, 270336), (22, -1), (23, -1), (24, -1), (25, -1), (26, 2097152), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, 524288), (37, -1), (38, -1), (39, -1), (40, -1), (41, 2097152), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 13 : set()

After reduction : 
 pending  : [26, 41, 36, 6, 21, 19, 17, 14, 20]
 solution : [7, 10, 23]


Solution : [7, 10, 23] has cost 16.


Decide in level 13 among pending : [26, 41, 36, 6, 21, 19, 17, 14, 20]

Coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, 262144), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 4194304), (15, -1), (16, -1), (17, 131072), (18, -1), (19, 8388608), (20, 131072), (21, 270336), (22, -1), (23, -1), (24, -1), (25, -1), (26, 2097152), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, 524288), (37, -1), (38, -1), (39, -1), (40, -1), (41, 2097152), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Decide 19 with phase True at level 13

After decision at level 13
 pending : [26, 41, 36, 6, 21, 17, 14, 20]
 solution : [7, 10, 23, 19]


New level: 14
 pending : [26, 41, 36, 6, 21, 17, 14, 20]
 solution : [7, 10, 23, 19]


Before reduction : 
 pending  : [26, 41, 36, 6, 21, 17, 14, 20]
 solution : [7, 10, 23, 19]

Essensial at level 14 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, 262144), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 4194304), (15, -1), (16, -1), (17, 131072), (18, -1), (19, 8388608), (20, 131072), (21, 270336), (22, -1), (23, -1), (24, -1), (25, -1), (26, 2097152), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, 524288), (37, -1), (38, -1), (39, -1), (40, -1), (41, 2097152), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, 0), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 32768), (15, -1), (16, -1), (17, 32768), (18, -1), (19, -1), (20, 0), (21, 0), (22, -1), (23, -1), (24, -1), (25, -1), (26, 2048), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, 1024), (37, -1), (38, -1), (39, -1), (40, -1), (41, 2048), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 14 : {20, 21, 6}

After reduction : 
 pending  : [26, 41, 36, 17, 14]
 solution : [7, 10, 23, 19]


Before reduction : 
 pending  : [26, 41, 36, 17, 14]
 solution : [7, 10, 23, 19]

Essensial at level 14 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, 0), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 32768), (15, -1), (16, -1), (17, 32768), (18, -1), (19, -1), (20, 0), (21, 0), (22, -1), (23, -1), (24, -1), (25, -1), (26, 2048), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, 1024), (37, -1), (38, -1), (39, -1), (40, -1), (41, 2048), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 32768), (15, -1), (16, -1), (17, 32768), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, 2048), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, 1024), (37, -1), (38, -1), (39, -1), (40, -1), (41, 2048), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 14 : set()

After reduction : 
 pending  : [26, 41, 36, 17, 14]
 solution : [7, 10, 23, 19]


Solution : [7, 10, 23, 19] has cost 25.


Before backtrack at level 14
 pending : [26, 41, 36, 17, 14]
 solution : [7, 10, 23, 19]

After backtrack at level 14
 pending : [26, 41, 36, 17, 14, 6, 21, 20]
 solution : [7, 10, 23, 19]


Invert decision for 19 at level 13


New level: 14
 pending : [26, 41, 36, 17, 14, 6, 21, 20]
 solution : [7, 10, 23]


Before reduction : 
 pending  : [26, 41, 36, 17, 14, 6, 21, 20]
 solution : [7, 10, 23]

Essensial at level 14 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 32768), (15, -1), (16, -1), (17, 32768), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, 2048), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, 1024), (37, -1), (38, -1), (39, -1), (40, -1), (41, 2048), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, 262144), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 4194304), (15, -1), (16, -1), (17, 131072), (18, -1), (19, -1), (20, 131072), (21, 270336), (22, -1), (23, -1), (24, -1), (25, -1), (26, 2097152), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, 524288), (37, -1), (38, -1), (39, -1), (40, -1), (41, 2097152), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 14 : set()

After reduction : 
 pending  : [26, 41, 36, 17, 14, 6, 21, 20]
 solution : [7, 10, 23]


Solution : [7, 10, 23] has cost 16.


Decide in level 14 among pending : [26, 41, 36, 17, 14, 6, 21, 20]

Coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, 262144), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 4194304), (15, -1), (16, -1), (17, 131072), (18, -1), (19, -1), (20, 131072), (21, 270336), (22, -1), (23, -1), (24, -1), (25, -1), (26, 2097152), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, 524288), (37, -1), (38, -1), (39, -1), (40, -1), (41, 2097152), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Decide 14 with phase True at level 14

After decision at level 14
 pending : [26, 41, 36, 17, 6, 21, 20]
 solution : [7, 10, 23, 14]


New level: 15
 pending : [26, 41, 36, 17, 6, 21, 20]
 solution : [7, 10, 23, 14]


Before reduction : 
 pending  : [26, 41, 36, 17, 6, 21, 20]
 solution : [7, 10, 23, 14]

Essensial at level 15 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, 262144), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 4194304), (15, -1), (16, -1), (17, 131072), (18, -1), (19, -1), (20, 131072), (21, 270336), (22, -1), (23, -1), (24, -1), (25, -1), (26, 2097152), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, 524288), (37, -1), (38, -1), (39, -1), (40, -1), (41, 2097152), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, 131072), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, 0), (18, -1), (19, -1), (20, 0), (21, 133120), (22, -1), (23, -1), (24, -1), (25, -1), (26, 524288), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, 1024), (37, -1), (38, -1), (39, -1), (40, -1), (41, 524288), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 15 : {17, 20}

After reduction : 
 pending  : [26, 41, 36, 6, 21]
 solution : [7, 10, 23, 14]


Before reduction : 
 pending  : [26, 41, 36, 6, 21]
 solution : [7, 10, 23, 14]

Essensial at level 15 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, 131072), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, 0), (18, -1), (19, -1), (20, 0), (21, 133120), (22, -1), (23, -1), (24, -1), (25, -1), (26, 524288), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, 1024), (37, -1), (38, -1), (39, -1), (40, -1), (41, 524288), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, 131072), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, 133120), (22, -1), (23, -1), (24, -1), (25, -1), (26, 524288), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, 1024), (37, -1), (38, -1), (39, -1), (40, -1), (41, 524288), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 15 : set()

After reduction : 
 pending  : [26, 41, 36, 6, 21]
 solution : [7, 10, 23, 14]


Solution : [7, 10, 23, 14] has cost 23.


Before backtrack at level 15
 pending : [26, 41, 36, 6, 21]
 solution : [7, 10, 23, 14]

After backtrack at level 15
 pending : [26, 41, 36, 6, 21, 17, 20]
 solution : [7, 10, 23, 14]


Invert decision for 14 at level 14


New level: 15
 pending : [26, 41, 36, 6, 21, 17, 20]
 solution : [7, 10, 23]


Before reduction : 
 pending  : [26, 41, 36, 6, 21, 17, 20]
 solution : [7, 10, 23]

Essensial at level 15 : {17}

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, 131072), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, 133120), (22, -1), (23, -1), (24, -1), (25, -1), (26, 524288), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, 1024), (37, -1), (38, -1), (39, -1), (40, -1), (41, 524288), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, 262144), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, 65536), (21, 270336), (22, -1), (23, -1), (24, -1), (25, -1), (26, 2097152), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, 524288), (37, -1), (38, -1), (39, -1), (40, -1), (41, 2097152), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 15 : set()

After reduction : 
 pending  : [26, 41, 36, 6, 21, 20]
 solution : [7, 10, 23, 17]


Before reduction : 
 pending  : [26, 41, 36, 6, 21, 20]
 solution : [7, 10, 23, 17]

Essensial at level 15 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, 262144), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, 65536), (21, 270336), (22, -1), (23, -1), (24, -1), (25, -1), (26, 2097152), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, 524288), (37, -1), (38, -1), (39, -1), (40, -1), (41, 2097152), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, 262144), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, 65536), (21, 270336), (22, -1), (23, -1), (24, -1), (25, -1), (26, 2097152), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, 524288), (37, -1), (38, -1), (39, -1), (40, -1), (41, 2097152), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 15 : set()

After reduction : 
 pending  : [26, 41, 36, 6, 21, 20]
 solution : [7, 10, 23, 17]


Solution : [7, 10, 23, 17] has cost 23.


Before backtrack at level 15
 pending : [26, 41, 36, 6, 21, 20]
 solution : [7, 10, 23, 17]

After backtrack at level 15
 pending : [26, 41, 36, 6, 21, 20, 17]
 solution : [7, 10, 23]


Before backtrack at level 14
 pending : [26, 41, 36, 6, 21, 20, 17]
 solution : [7, 10, 23]

After backtrack at level 14
 pending : [26, 41, 36, 6, 21, 20, 17, 14]
 solution : [7, 10, 23]


Before backtrack at level 13
 pending : [26, 41, 36, 6, 21, 20, 17, 14]
 solution : [7, 10, 23]

After backtrack at level 13
 pending : [26, 41, 36, 6, 21, 20, 17, 14, 19]
 solution : [7, 10, 23]


Before backtrack at level 12
 pending : [26, 41, 36, 6, 21, 20, 17, 14, 19]
 solution : [7, 10, 23]

After backtrack at level 12
 pending : [26, 41, 36, 6, 21, 20, 17, 14, 19, 16]
 solution : [7, 10, 23]


Before backtrack at level 11
 pending : [26, 41, 36, 6, 21, 20, 17, 14, 19, 16]
 solution : [7, 10, 23]

After backtrack at level 11
 pending : [26, 41, 36, 6, 21, 20, 17, 14, 19, 16, 5, 29, 30, 39, 43, 44, 45, 46, 51, 9, 38, 31, 33, 18]
 solution : [7, 10, 23]


Invert decision for 23 at level 10


New level: 11
 pending : [26, 41, 36, 6, 21, 20, 17, 14, 19, 16, 5, 29, 30, 39, 43, 44, 45, 46, 51, 9, 38, 31, 33, 18]
 solution : [7, 10]


Before reduction : 
 pending  : [26, 41, 36, 6, 21, 20, 17, 14, 19, 16, 5, 29, 30, 39, 43, 44, 45, 46, 51, 9, 38, 31, 33, 18]
 solution : [7, 10]

Essensial at level 11 : {9}

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, 262144), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, 65536), (21, 270336), (22, -1), (23, -1), (24, -1), (25, -1), (26, 2097152), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, 524288), (37, -1), (38, -1), (39, -1), (40, -1), (41, 2097152), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 0), (6, 262144), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 4194304), (15, -1), (16, 8388608), (17, 131072), (18, 16777216), (19, 8388608), (20, 131072), (21, 270336), (22, -1), (23, -1), (24, -1), (25, -1), (26, 2097152), (27, -1), (28, -1), (29, 0), (30, 0), (31, 0), (32, -1), (33, 0), (34, -1), (35, -1), (36, 65536), (37, -1), (38, 0), (39, 0), (40, -1), (41, 2097152), (42, -1), (43, 0), (44, 0), (45, 0), (46, 0), (47, -1), (48, -1), (49, -1), (50, -1), (51, 0), (52, -1)]

Covered at level 11 : {33, 5, 38, 39, 43, 44, 45, 46, 51, 29, 30, 31}

After reduction : 
 pending  : [26, 41, 36, 6, 21, 20, 17, 14, 19, 16, 18]
 solution : [7, 10, 9]


Before reduction : 
 pending  : [26, 41, 36, 6, 21, 20, 17, 14, 19, 16, 18]
 solution : [7, 10, 9]

Essensial at level 11 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 0), (6, 262144), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 4194304), (15, -1), (16, 8388608), (17, 131072), (18, 16777216), (19, 8388608), (20, 131072), (21, 270336), (22, -1), (23, -1), (24, -1), (25, -1), (26, 2097152), (27, -1), (28, -1), (29, 0), (30, 0), (31, 0), (32, -1), (33, 0), (34, -1), (35, -1), (36, 65536), (37, -1), (38, 0), (39, 0), (40, -1), (41, 2097152), (42, -1), (43, 0), (44, 0), (45, 0), (46, 0), (47, -1), (48, -1), (49, -1), (50, -1), (51, 0), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, 262144), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 4194304), (15, -1), (16, 8388608), (17, 131072), (18, 16777216), (19, 8388608), (20, 131072), (21, 270336), (22, -1), (23, -1), (24, -1), (25, -1), (26, 2097152), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, 65536), (37, -1), (38, -1), (39, -1), (40, -1), (41, 2097152), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 11 : set()

After reduction : 
 pending  : [26, 41, 36, 6, 21, 20, 17, 14, 19, 16, 18]
 solution : [7, 10, 9]


Solution : [7, 10, 9] has cost 13.


Decide in level 11 among pending : [26, 41, 36, 6, 21, 20, 17, 14, 19, 16, 18]

Coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, 262144), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 4194304), (15, -1), (16, 8388608), (17, 131072), (18, 16777216), (19, 8388608), (20, 131072), (21, 270336), (22, -1), (23, -1), (24, -1), (25, -1), (26, 2097152), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, 65536), (37, -1), (38, -1), (39, -1), (40, -1), (41, 2097152), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Decide 18 with phase True at level 11

After decision at level 11
 pending : [26, 41, 36, 6, 21, 20, 17, 14, 19, 16]
 solution : [7, 10, 9, 18]


New level: 12
 pending : [26, 41, 36, 6, 21, 20, 17, 14, 19, 16]
 solution : [7, 10, 9, 18]


Before reduction : 
 pending  : [26, 41, 36, 6, 21, 20, 17, 14, 19, 16]
 solution : [7, 10, 9, 18]

Essensial at level 12 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, 262144), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 4194304), (15, -1), (16, 8388608), (17, 131072), (18, 16777216), (19, 8388608), (20, 131072), (21, 270336), (22, -1), (23, -1), (24, -1), (25, -1), (26, 2097152), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, 65536), (37, -1), (38, -1), (39, -1), (40, -1), (41, 2097152), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, 0), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 32768), (15, -1), (16, 131072), (17, 32768), (18, -1), (19, 0), (20, 0), (21, 0), (22, -1), (23, -1), (24, -1), (25, -1), (26, 2048), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, 1024), (37, -1), (38, -1), (39, -1), (40, -1), (41, 2048), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 12 : {19, 20, 21, 6}

After reduction : 
 pending  : [26, 41, 36, 17, 14, 16]
 solution : [7, 10, 9, 18]


Before reduction : 
 pending  : [26, 41, 36, 17, 14, 16]
 solution : [7, 10, 9, 18]

Essensial at level 12 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, 0), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 32768), (15, -1), (16, 131072), (17, 32768), (18, -1), (19, 0), (20, 0), (21, 0), (22, -1), (23, -1), (24, -1), (25, -1), (26, 2048), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, 1024), (37, -1), (38, -1), (39, -1), (40, -1), (41, 2048), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 32768), (15, -1), (16, 131072), (17, 32768), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, 2048), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, 1024), (37, -1), (38, -1), (39, -1), (40, -1), (41, 2048), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 12 : set()

After reduction : 
 pending  : [26, 41, 36, 17, 14, 16]
 solution : [7, 10, 9, 18]


Solution : [7, 10, 9, 18] has cost 22.


Before backtrack at level 12
 pending : [26, 41, 36, 17, 14, 16]
 solution : [7, 10, 9, 18]

After backtrack at level 12
 pending : [26, 41, 36, 17, 14, 16, 6, 21, 20, 19]
 solution : [7, 10, 9, 18]


Invert decision for 18 at level 11


New level: 12
 pending : [26, 41, 36, 17, 14, 16, 6, 21, 20, 19]
 solution : [7, 10, 9]


Before reduction : 
 pending  : [26, 41, 36, 17, 14, 16, 6, 21, 20, 19]
 solution : [7, 10, 9]

Essensial at level 12 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 32768), (15, -1), (16, 131072), (17, 32768), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, 2048), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, 1024), (37, -1), (38, -1), (39, -1), (40, -1), (41, 2048), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, 262144), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 4194304), (15, -1), (16, 8388608), (17, 131072), (18, -1), (19, 8388608), (20, 131072), (21, 270336), (22, -1), (23, -1), (24, -1), (25, -1), (26, 2097152), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, 65536), (37, -1), (38, -1), (39, -1), (40, -1), (41, 2097152), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 12 : set()

After reduction : 
 pending  : [26, 41, 36, 17, 14, 16, 6, 21, 20, 19]
 solution : [7, 10, 9]


Solution : [7, 10, 9] has cost 13.


Decide in level 12 among pending : [26, 41, 36, 17, 14, 16, 6, 21, 20, 19]

Coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, 262144), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 4194304), (15, -1), (16, 8388608), (17, 131072), (18, -1), (19, 8388608), (20, 131072), (21, 270336), (22, -1), (23, -1), (24, -1), (25, -1), (26, 2097152), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, 65536), (37, -1), (38, -1), (39, -1), (40, -1), (41, 2097152), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Decide 16 with phase True at level 12

After decision at level 12
 pending : [26, 41, 36, 17, 14, 6, 21, 20, 19]
 solution : [7, 10, 9, 16]


New level: 13
 pending : [26, 41, 36, 17, 14, 6, 21, 20, 19]
 solution : [7, 10, 9, 16]


Before reduction : 
 pending  : [26, 41, 36, 17, 14, 6, 21, 20, 19]
 solution : [7, 10, 9, 16]

Essensial at level 13 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, 262144), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 4194304), (15, -1), (16, 8388608), (17, 131072), (18, -1), (19, 8388608), (20, 131072), (21, 270336), (22, -1), (23, -1), (24, -1), (25, -1), (26, 2097152), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, 65536), (37, -1), (38, -1), (39, -1), (40, -1), (41, 2097152), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, 131072), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 0), (15, -1), (16, -1), (17, 0), (18, -1), (19, 2097152), (20, 0), (21, 133120), (22, -1), (23, -1), (24, -1), (25, -1), (26, 524288), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, 1024), (37, -1), (38, -1), (39, -1), (40, -1), (41, 524288), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 13 : {17, 20, 14}

After reduction : 
 pending  : [26, 41, 36, 6, 21, 19]
 solution : [7, 10, 9, 16]


Before reduction : 
 pending  : [26, 41, 36, 6, 21, 19]
 solution : [7, 10, 9, 16]

Essensial at level 13 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, 131072), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 0), (15, -1), (16, -1), (17, 0), (18, -1), (19, 2097152), (20, 0), (21, 133120), (22, -1), (23, -1), (24, -1), (25, -1), (26, 524288), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, 1024), (37, -1), (38, -1), (39, -1), (40, -1), (41, 524288), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, 131072), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, 2097152), (20, -1), (21, 133120), (22, -1), (23, -1), (24, -1), (25, -1), (26, 524288), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, 1024), (37, -1), (38, -1), (39, -1), (40, -1), (41, 524288), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 13 : set()

After reduction : 
 pending  : [26, 41, 36, 6, 21, 19]
 solution : [7, 10, 9, 16]


Solution : [7, 10, 9, 16] has cost 20.


Before backtrack at level 13
 pending : [26, 41, 36, 6, 21, 19]
 solution : [7, 10, 9, 16]

After backtrack at level 13
 pending : [26, 41, 36, 6, 21, 19, 17, 14, 20]
 solution : [7, 10, 9, 16]


Invert decision for 16 at level 12


New level: 13
 pending : [26, 41, 36, 6, 21, 19, 17, 14, 20]
 solution : [7, 10, 9]


Before reduction : 
 pending  : [26, 41, 36, 6, 21, 19, 17, 14, 20]
 solution : [7, 10, 9]

Essensial at level 13 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, 131072), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, 2097152), (20, -1), (21, 133120), (22, -1), (23, -1), (24, -1), (25, -1), (26, 524288), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, 1024), (37, -1), (38, -1), (39, -1), (40, -1), (41, 524288), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, 262144), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 4194304), (15, -1), (16, -1), (17, 131072), (18, -1), (19, 8388608), (20, 131072), (21, 270336), (22, -1), (23, -1), (24, -1), (25, -1), (26, 2097152), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, 65536), (37, -1), (38, -1), (39, -1), (40, -1), (41, 2097152), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 13 : set()

After reduction : 
 pending  : [26, 41, 36, 6, 21, 19, 17, 14, 20]
 solution : [7, 10, 9]


Solution : [7, 10, 9] has cost 13.


Decide in level 13 among pending : [26, 41, 36, 6, 21, 19, 17, 14, 20]

Coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, 262144), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 4194304), (15, -1), (16, -1), (17, 131072), (18, -1), (19, 8388608), (20, 131072), (21, 270336), (22, -1), (23, -1), (24, -1), (25, -1), (26, 2097152), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, 65536), (37, -1), (38, -1), (39, -1), (40, -1), (41, 2097152), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Decide 19 with phase True at level 13

After decision at level 13
 pending : [26, 41, 36, 6, 21, 17, 14, 20]
 solution : [7, 10, 9, 19]


New level: 14
 pending : [26, 41, 36, 6, 21, 17, 14, 20]
 solution : [7, 10, 9, 19]


Before reduction : 
 pending  : [26, 41, 36, 6, 21, 17, 14, 20]
 solution : [7, 10, 9, 19]

Essensial at level 14 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, 262144), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 4194304), (15, -1), (16, -1), (17, 131072), (18, -1), (19, 8388608), (20, 131072), (21, 270336), (22, -1), (23, -1), (24, -1), (25, -1), (26, 2097152), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, 65536), (37, -1), (38, -1), (39, -1), (40, -1), (41, 2097152), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, 0), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 32768), (15, -1), (16, -1), (17, 32768), (18, -1), (19, -1), (20, 0), (21, 0), (22, -1), (23, -1), (24, -1), (25, -1), (26, 2048), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, 1024), (37, -1), (38, -1), (39, -1), (40, -1), (41, 2048), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 14 : {20, 21, 6}

After reduction : 
 pending  : [26, 41, 36, 17, 14]
 solution : [7, 10, 9, 19]


Before reduction : 
 pending  : [26, 41, 36, 17, 14]
 solution : [7, 10, 9, 19]

Essensial at level 14 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, 0), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 32768), (15, -1), (16, -1), (17, 32768), (18, -1), (19, -1), (20, 0), (21, 0), (22, -1), (23, -1), (24, -1), (25, -1), (26, 2048), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, 1024), (37, -1), (38, -1), (39, -1), (40, -1), (41, 2048), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 32768), (15, -1), (16, -1), (17, 32768), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, 2048), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, 1024), (37, -1), (38, -1), (39, -1), (40, -1), (41, 2048), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 14 : set()

After reduction : 
 pending  : [26, 41, 36, 17, 14]
 solution : [7, 10, 9, 19]


Solution : [7, 10, 9, 19] has cost 22.


Before backtrack at level 14
 pending : [26, 41, 36, 17, 14]
 solution : [7, 10, 9, 19]

After backtrack at level 14
 pending : [26, 41, 36, 17, 14, 6, 21, 20]
 solution : [7, 10, 9, 19]


Invert decision for 19 at level 13


New level: 14
 pending : [26, 41, 36, 17, 14, 6, 21, 20]
 solution : [7, 10, 9]


Before reduction : 
 pending  : [26, 41, 36, 17, 14, 6, 21, 20]
 solution : [7, 10, 9]

Essensial at level 14 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 32768), (15, -1), (16, -1), (17, 32768), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, 2048), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, 1024), (37, -1), (38, -1), (39, -1), (40, -1), (41, 2048), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, 262144), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 4194304), (15, -1), (16, -1), (17, 131072), (18, -1), (19, -1), (20, 131072), (21, 270336), (22, -1), (23, -1), (24, -1), (25, -1), (26, 2097152), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, 65536), (37, -1), (38, -1), (39, -1), (40, -1), (41, 2097152), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 14 : set()

After reduction : 
 pending  : [26, 41, 36, 17, 14, 6, 21, 20]
 solution : [7, 10, 9]


Solution : [7, 10, 9] has cost 13.


Decide in level 14 among pending : [26, 41, 36, 17, 14, 6, 21, 20]

Coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, 262144), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 4194304), (15, -1), (16, -1), (17, 131072), (18, -1), (19, -1), (20, 131072), (21, 270336), (22, -1), (23, -1), (24, -1), (25, -1), (26, 2097152), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, 65536), (37, -1), (38, -1), (39, -1), (40, -1), (41, 2097152), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Decide 14 with phase True at level 14

After decision at level 14
 pending : [26, 41, 36, 17, 6, 21, 20]
 solution : [7, 10, 9, 14]


New level: 15
 pending : [26, 41, 36, 17, 6, 21, 20]
 solution : [7, 10, 9, 14]


Before reduction : 
 pending  : [26, 41, 36, 17, 6, 21, 20]
 solution : [7, 10, 9, 14]

Essensial at level 15 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, 262144), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 4194304), (15, -1), (16, -1), (17, 131072), (18, -1), (19, -1), (20, 131072), (21, 270336), (22, -1), (23, -1), (24, -1), (25, -1), (26, 2097152), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, 65536), (37, -1), (38, -1), (39, -1), (40, -1), (41, 2097152), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, 131072), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, 0), (18, -1), (19, -1), (20, 0), (21, 133120), (22, -1), (23, -1), (24, -1), (25, -1), (26, 524288), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, 1024), (37, -1), (38, -1), (39, -1), (40, -1), (41, 524288), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 15 : {17, 20}

After reduction : 
 pending  : [26, 41, 36, 6, 21]
 solution : [7, 10, 9, 14]


Before reduction : 
 pending  : [26, 41, 36, 6, 21]
 solution : [7, 10, 9, 14]

Essensial at level 15 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, 131072), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, 0), (18, -1), (19, -1), (20, 0), (21, 133120), (22, -1), (23, -1), (24, -1), (25, -1), (26, 524288), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, 1024), (37, -1), (38, -1), (39, -1), (40, -1), (41, 524288), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, 131072), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, 133120), (22, -1), (23, -1), (24, -1), (25, -1), (26, 524288), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, 1024), (37, -1), (38, -1), (39, -1), (40, -1), (41, 524288), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 15 : set()

After reduction : 
 pending  : [26, 41, 36, 6, 21]
 solution : [7, 10, 9, 14]


Solution : [7, 10, 9, 14] has cost 20.


Before backtrack at level 15
 pending : [26, 41, 36, 6, 21]
 solution : [7, 10, 9, 14]

After backtrack at level 15
 pending : [26, 41, 36, 6, 21, 17, 20]
 solution : [7, 10, 9, 14]


Invert decision for 14 at level 14


New level: 15
 pending : [26, 41, 36, 6, 21, 17, 20]
 solution : [7, 10, 9]


Before reduction : 
 pending  : [26, 41, 36, 6, 21, 17, 20]
 solution : [7, 10, 9]

Essensial at level 15 : {17}

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, 131072), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, 133120), (22, -1), (23, -1), (24, -1), (25, -1), (26, 524288), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, 1024), (37, -1), (38, -1), (39, -1), (40, -1), (41, 524288), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, 262144), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, 65536), (21, 270336), (22, -1), (23, -1), (24, -1), (25, -1), (26, 2097152), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, 65536), (37, -1), (38, -1), (39, -1), (40, -1), (41, 2097152), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 15 : set()

After reduction : 
 pending  : [26, 41, 36, 6, 21, 20]
 solution : [7, 10, 9, 17]


Before reduction : 
 pending  : [26, 41, 36, 6, 21, 20]
 solution : [7, 10, 9, 17]

Essensial at level 15 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, 262144), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, 65536), (21, 270336), (22, -1), (23, -1), (24, -1), (25, -1), (26, 2097152), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, 65536), (37, -1), (38, -1), (39, -1), (40, -1), (41, 2097152), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, 262144), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, 65536), (21, 270336), (22, -1), (23, -1), (24, -1), (25, -1), (26, 2097152), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, 65536), (37, -1), (38, -1), (39, -1), (40, -1), (41, 2097152), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 15 : set()

After reduction : 
 pending  : [26, 41, 36, 6, 21, 20]
 solution : [7, 10, 9, 17]


Solution : [7, 10, 9, 17] has cost 20.


Before backtrack at level 15
 pending : [26, 41, 36, 6, 21, 20]
 solution : [7, 10, 9, 17]

After backtrack at level 15
 pending : [26, 41, 36, 6, 21, 20, 17]
 solution : [7, 10, 9]


Before backtrack at level 14
 pending : [26, 41, 36, 6, 21, 20, 17]
 solution : [7, 10, 9]

After backtrack at level 14
 pending : [26, 41, 36, 6, 21, 20, 17, 14]
 solution : [7, 10, 9]


Before backtrack at level 13
 pending : [26, 41, 36, 6, 21, 20, 17, 14]
 solution : [7, 10, 9]

After backtrack at level 13
 pending : [26, 41, 36, 6, 21, 20, 17, 14, 19]
 solution : [7, 10, 9]


Before backtrack at level 12
 pending : [26, 41, 36, 6, 21, 20, 17, 14, 19]
 solution : [7, 10, 9]

After backtrack at level 12
 pending : [26, 41, 36, 6, 21, 20, 17, 14, 19, 16]
 solution : [7, 10, 9]


Before backtrack at level 11
 pending : [26, 41, 36, 6, 21, 20, 17, 14, 19, 16]
 solution : [7, 10, 9]

After backtrack at level 11
 pending : [26, 41, 36, 6, 21, 20, 17, 14, 19, 16, 9, 5, 29, 30, 39, 43, 44, 45, 46, 51, 38, 31, 33, 18]
 solution : [7, 10]


Before backtrack at level 10
 pending : [26, 41, 36, 6, 21, 20, 17, 14, 19, 16, 9, 5, 29, 30, 39, 43, 44, 45, 46, 51, 38, 31, 33, 18]
 solution : [7, 10]

After backtrack at level 10
 pending : [26, 41, 36, 6, 21, 20, 17, 14, 19, 16, 9, 5, 29, 30, 39, 43, 44, 45, 46, 51, 38, 31, 33, 18, 23]
 solution : [7, 10]


Before backtrack at level 9
 pending : [26, 41, 36, 6, 21, 20, 17, 14, 19, 16, 9, 5, 29, 30, 39, 43, 44, 45, 46, 51, 38, 31, 33, 18, 23]
 solution : [7, 10]

After backtrack at level 9
 pending : [26, 41, 36, 6, 21, 20, 17, 14, 19, 16, 9, 5, 29, 30, 39, 43, 44, 45, 46, 51, 38, 31, 33, 18, 23, 37]
 solution : [7, 10]


Before backtrack at level 8
 pending : [26, 41, 36, 6, 21, 20, 17, 14, 19, 16, 9, 5, 29, 30, 39, 43, 44, 45, 46, 51, 38, 31, 33, 18, 23, 37]
 solution : [7, 10]

After backtrack at level 8
 pending : [26, 41, 36, 6, 21, 20, 17, 14, 19, 16, 9, 5, 29, 30, 39, 43, 44, 45, 46, 51, 38, 31, 33, 18, 23, 37, 24]
 solution : [7, 10]


Before backtrack at level 7
 pending : [26, 41, 36, 6, 21, 20, 17, 14, 19, 16, 9, 5, 29, 30, 39, 43, 44, 45, 46, 51, 38, 31, 33, 18, 23, 37, 24]
 solution : [7, 10]

After backtrack at level 7
 pending : [26, 41, 36, 6, 21, 20, 17, 14, 19, 16, 9, 5, 29, 30, 39, 43, 44, 45, 46, 51, 38, 31, 33, 18, 23, 37, 24, 28]
 solution : [7, 10]


Before backtrack at level 6
 pending : [26, 41, 36, 6, 21, 20, 17, 14, 19, 16, 9, 5, 29, 30, 39, 43, 44, 45, 46, 51, 38, 31, 33, 18, 23, 37, 24, 28]
 solution : [7, 10]

After backtrack at level 6
 pending : [26, 41, 36, 6, 21, 20, 17, 14, 19, 16, 9, 5, 29, 30, 39, 43, 44, 45, 46, 51, 38, 31, 33, 18, 23, 37, 24, 28, 15]
 solution : [7, 10]


Before backtrack at level 5
 pending : [26, 41, 36, 6, 21, 20, 17, 14, 19, 16, 9, 5, 29, 30, 39, 43, 44, 45, 46, 51, 38, 31, 33, 18, 23, 37, 24, 28, 15]
 solution : [7, 10]

After backtrack at level 5
 pending : [26, 41, 36, 6, 21, 20, 17, 14, 19, 16, 9, 5, 29, 30, 39, 43, 44, 45, 46, 51, 38, 31, 33, 18, 23, 37, 24, 28, 15, 32]
 solution : [7, 10]


Before backtrack at level 4
 pending : [26, 41, 36, 6, 21, 20, 17, 14, 19, 16, 9, 5, 29, 30, 39, 43, 44, 45, 46, 51, 38, 31, 33, 18, 23, 37, 24, 28, 15, 32]
 solution : [7, 10]

After backtrack at level 4
 pending : [26, 41, 36, 6, 21, 20, 17, 14, 19, 16, 9, 5, 29, 30, 39, 43, 44, 45, 46, 51, 38, 31, 33, 18, 23, 37, 24, 28, 15, 32, 13]
 solution : [7, 10]


Before backtrack at level 3
 pending : [26, 41, 36, 6, 21, 20, 17, 14, 19, 16, 9, 5, 29, 30, 39, 43, 44, 45, 46, 51, 38, 31, 33, 18, 23, 37, 24, 28, 15, 32, 13]
 solution : [7, 10]

After backtrack at level 3
 pending : [26, 41, 36, 6, 21, 20, 17, 14, 19, 16, 9, 5, 29, 30, 39, 43, 44, 45, 46, 51, 38, 31, 33, 18, 23, 37, 24, 28, 15, 32, 13, 27]
 solution : [7, 10]


Invert decision for 10 at level 2


New level: 3
 pending : [26, 41, 36, 6, 21, 20, 17, 14, 19, 16, 9, 5, 29, 30, 39, 43, 44, 45, 46, 51, 38, 31, 33, 18, 23, 37, 24, 28, 15, 32, 13, 27]
 solution : [7]


Before reduction : 
 pending  : [26, 41, 36, 6, 21, 20, 17, 14, 19, 16, 9, 5, 29, 30, 39, 43, 44, 45, 46, 51, 38, 31, 33, 18, 23, 37, 24, 28, 15, 32, 13, 27]
 solution : [7]

Essensial at level 3 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, 262144), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, 65536), (21, 270336), (22, -1), (23, -1), (24, -1), (25, -1), (26, 2097152), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, 65536), (37, -1), (38, -1), (39, -1), (40, -1), (41, 2097152), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 1048576), (6, 1048576), (7, -1), (8, -1), (9, 134217728), (10, -1), (11, -1), (12, -1), (13, 2147483648), (14, 8388608), (15, 1073741824), (16, 16777216), (17, 262144), (18, 67108864), (19, 33554432), (20, 524288), (21, 1114112), (22, -1), (23, 134217728), (24, 1073741824), (25, -1), (26, 4194304), (27, 4294967296), (28, 4294967296), (29, 1048576), (30, 16384), (31, 32768), (32, 2147483648), (33, 4194304), (34, -1), (35, -1), (36, 268435456), (37, 1073741824), (38, 134217728), (39, 16384), (40, -1), (41, 4194304), (42, -1), (43, 524288), (44, 524288), (45, 67108864), (46, 16777216), (47, -1), (48, -1), (49, -1), (50, -1), (51, 67108864), (52, -1)]

Covered at level 3 : set()

After reduction : 
 pending  : [26, 41, 36, 6, 21, 20, 17, 14, 19, 16, 9, 5, 29, 30, 39, 43, 44, 45, 46, 51, 38, 31, 33, 18, 23, 37, 24, 28, 15, 32, 13, 27]
 solution : [7]


Solution : [7] has cost 6.


Decide in level 3 among pending : [26, 41, 36, 6, 21, 20, 17, 14, 19, 16, 9, 5, 29, 30, 39, 43, 44, 45, 46, 51, 38, 31, 33, 18, 23, 37, 24, 28, 15, 32, 13, 27]

Coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 1048576), (6, 1048576), (7, -1), (8, -1), (9, 134217728), (10, -1), (11, -1), (12, -1), (13, 2147483648), (14, 8388608), (15, 1073741824), (16, 16777216), (17, 262144), (18, 67108864), (19, 33554432), (20, 524288), (21, 1114112), (22, -1), (23, 134217728), (24, 1073741824), (25, -1), (26, 4194304), (27, 4294967296), (28, 4294967296), (29, 1048576), (30, 16384), (31, 32768), (32, 2147483648), (33, 4194304), (34, -1), (35, -1), (36, 268435456), (37, 1073741824), (38, 134217728), (39, 16384), (40, -1), (41, 4194304), (42, -1), (43, 524288), (44, 524288), (45, 67108864), (46, 16777216), (47, -1), (48, -1), (49, -1), (50, -1), (51, 67108864), (52, -1)]

Decide 28 with phase True at level 3

After decision at level 3
 pending : [26, 41, 36, 6, 21, 20, 17, 14, 19, 16, 9, 5, 29, 30, 39, 43, 44, 45, 46, 51, 38, 31, 33, 18, 23, 37, 24, 15, 32, 13, 27]
 solution : [7, 28]


New level: 4
 pending : [26, 41, 36, 6, 21, 20, 17, 14, 19, 16, 9, 5, 29, 30, 39, 43, 44, 45, 46, 51, 38, 31, 33, 18, 23, 37, 24, 15, 32, 13, 27]
 solution : [7, 28]


Before reduction : 
 pending  : [26, 41, 36, 6, 21, 20, 17, 14, 19, 16, 9, 5, 29, 30, 39, 43, 44, 45, 46, 51, 38, 31, 33, 18, 23, 37, 24, 15, 32, 13, 27]
 solution : [7, 28]

Essensial at level 4 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 1048576), (6, 1048576), (7, -1), (8, -1), (9, 134217728), (10, -1), (11, -1), (12, -1), (13, 2147483648), (14, 8388608), (15, 1073741824), (16, 16777216), (17, 262144), (18, 67108864), (19, 33554432), (20, 524288), (21, 1114112), (22, -1), (23, 134217728), (24, 1073741824), (25, -1), (26, 4194304), (27, 4294967296), (28, 4294967296), (29, 1048576), (30, 16384), (31, 32768), (32, 2147483648), (33, 4194304), (34, -1), (35, -1), (36, 268435456), (37, 1073741824), (38, 134217728), (39, 16384), (40, -1), (41, 4194304), (42, -1), (43, 524288), (44, 524288), (45, 67108864), (46, 16777216), (47, -1), (48, -1), (49, -1), (50, -1), (51, 67108864), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 1048576), (6, 1048576), (7, -1), (8, -1), (9, 134217728), (10, -1), (11, -1), (12, -1), (13, 2147483648), (14, 8388608), (15, 1073741824), (16, 16777216), (17, 262144), (18, 67108864), (19, 33554432), (20, 524288), (21, 1114112), (22, -1), (23, 134217728), (24, 536870912), (25, -1), (26, 4194304), (27, 4294967296), (28, -1), (29, 1048576), (30, 16384), (31, 16384), (32, 1073741824), (33, 2097152), (34, -1), (35, -1), (36, 268435456), (37, 536870912), (38, 134217728), (39, 16384), (40, -1), (41, 4194304), (42, -1), (43, 524288), (44, 524288), (45, 67108864), (46, 16777216), (47, -1), (48, -1), (49, -1), (50, -1), (51, 67108864), (52, -1)]

Covered at level 4 : set()

After reduction : 
 pending  : [26, 41, 36, 6, 21, 20, 17, 14, 19, 16, 9, 5, 29, 30, 39, 43, 44, 45, 46, 51, 38, 31, 33, 18, 23, 37, 24, 15, 32, 13, 27]
 solution : [7, 28]


Solution : [7, 28] has cost 10.


Decide in level 4 among pending : [26, 41, 36, 6, 21, 20, 17, 14, 19, 16, 9, 5, 29, 30, 39, 43, 44, 45, 46, 51, 38, 31, 33, 18, 23, 37, 24, 15, 32, 13, 27]

Coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 1048576), (6, 1048576), (7, -1), (8, -1), (9, 134217728), (10, -1), (11, -1), (12, -1), (13, 2147483648), (14, 8388608), (15, 1073741824), (16, 16777216), (17, 262144), (18, 67108864), (19, 33554432), (20, 524288), (21, 1114112), (22, -1), (23, 134217728), (24, 536870912), (25, -1), (26, 4194304), (27, 4294967296), (28, -1), (29, 1048576), (30, 16384), (31, 16384), (32, 1073741824), (33, 2097152), (34, -1), (35, -1), (36, 268435456), (37, 536870912), (38, 134217728), (39, 16384), (40, -1), (41, 4194304), (42, -1), (43, 524288), (44, 524288), (45, 67108864), (46, 16777216), (47, -1), (48, -1), (49, -1), (50, -1), (51, 67108864), (52, -1)]

Decide 27 with phase True at level 4

After decision at level 4
 pending : [26, 41, 36, 6, 21, 20, 17, 14, 19, 16, 9, 5, 29, 30, 39, 43, 44, 45, 46, 51, 38, 31, 33, 18, 23, 37, 24, 15, 32, 13]
 solution : [7, 28, 27]


New level: 5
 pending : [26, 41, 36, 6, 21, 20, 17, 14, 19, 16, 9, 5, 29, 30, 39, 43, 44, 45, 46, 51, 38, 31, 33, 18, 23, 37, 24, 15, 32, 13]
 solution : [7, 28, 27]


Before reduction : 
 pending  : [26, 41, 36, 6, 21, 20, 17, 14, 19, 16, 9, 5, 29, 30, 39, 43, 44, 45, 46, 51, 38, 31, 33, 18, 23, 37, 24, 15, 32, 13]
 solution : [7, 28, 27]

Essensial at level 5 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 1048576), (6, 1048576), (7, -1), (8, -1), (9, 134217728), (10, -1), (11, -1), (12, -1), (13, 2147483648), (14, 8388608), (15, 1073741824), (16, 16777216), (17, 262144), (18, 67108864), (19, 33554432), (20, 524288), (21, 1114112), (22, -1), (23, 134217728), (24, 536870912), (25, -1), (26, 4194304), (27, 4294967296), (28, -1), (29, 1048576), (30, 16384), (31, 16384), (32, 1073741824), (33, 2097152), (34, -1), (35, -1), (36, 268435456), (37, 536870912), (38, 134217728), (39, 16384), (40, -1), (41, 4194304), (42, -1), (43, 524288), (44, 524288), (45, 67108864), (46, 16777216), (47, -1), (48, -1), (49, -1), (50, -1), (51, 67108864), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 262144), (6, 0), (7, -1), (8, -1), (9, 134217728), (10, -1), (11, -1), (12, -1), (13, 0), (14, 0), (15, 0), (16, 0), (17, 0), (18, 0), (19, 0), (20, 0), (21, 0), (22, -1), (23, 134217728), (24, 536870912), (25, -1), (26, 0), (27, -1), (28, -1), (29, 524288), (30, 4096), (31, 4096), (32, 1073741824), (33, 2097152), (34, -1), (35, -1), (36, 2048), (37, 2048), (38, 67108864), (39, 2048), (40, -1), (41, 0), (42, -1), (43, 131072), (44, 131072), (45, 33554432), (46, 4194304), (47, -1), (48, -1), (49, -1), (50, -1), (51, 16777216), (52, -1)]

Covered at level 5 : {6, 41, 13, 14, 15, 16, 17, 18, 19, 20, 21, 26}

After reduction : 
 pending  : [36, 9, 5, 29, 30, 39, 43, 44, 45, 46, 51, 38, 31, 33, 23, 37, 24, 32]
 solution : [7, 28, 27]


Before reduction : 
 pending  : [36, 9, 5, 29, 30, 39, 43, 44, 45, 46, 51, 38, 31, 33, 23, 37, 24, 32]
 solution : [7, 28, 27]

Essensial at level 5 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 262144), (6, 0), (7, -1), (8, -1), (9, 134217728), (10, -1), (11, -1), (12, -1), (13, 0), (14, 0), (15, 0), (16, 0), (17, 0), (18, 0), (19, 0), (20, 0), (21, 0), (22, -1), (23, 134217728), (24, 536870912), (25, -1), (26, 0), (27, -1), (28, -1), (29, 524288), (30, 4096), (31, 4096), (32, 1073741824), (33, 2097152), (34, -1), (35, -1), (36, 2048), (37, 2048), (38, 67108864), (39, 2048), (40, -1), (41, 0), (42, -1), (43, 131072), (44, 131072), (45, 33554432), (46, 4194304), (47, -1), (48, -1), (49, -1), (50, -1), (51, 16777216), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 262144), (6, -1), (7, -1), (8, -1), (9, 134217728), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, 134217728), (24, 536870912), (25, -1), (26, -1), (27, -1), (28, -1), (29, 524288), (30, 4096), (31, 4096), (32, 1073741824), (33, 2097152), (34, -1), (35, -1), (36, 2048), (37, 2048), (38, 67108864), (39, 2048), (40, -1), (41, -1), (42, -1), (43, 131072), (44, 131072), (45, 33554432), (46, 4194304), (47, -1), (48, -1), (49, -1), (50, -1), (51, 16777216), (52, -1)]

Covered at level 5 : set()

After reduction : 
 pending  : [36, 9, 5, 29, 30, 39, 43, 44, 45, 46, 51, 38, 31, 33, 23, 37, 24, 32]
 solution : [7, 28, 27]


Solution : [7, 28, 27] has cost 14.


Decide in level 5 among pending : [36, 9, 5, 29, 30, 39, 43, 44, 45, 46, 51, 38, 31, 33, 23, 37, 24, 32]

Coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 262144), (6, -1), (7, -1), (8, -1), (9, 134217728), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, 134217728), (24, 536870912), (25, -1), (26, -1), (27, -1), (28, -1), (29, 524288), (30, 4096), (31, 4096), (32, 1073741824), (33, 2097152), (34, -1), (35, -1), (36, 2048), (37, 2048), (38, 67108864), (39, 2048), (40, -1), (41, -1), (42, -1), (43, 131072), (44, 131072), (45, 33554432), (46, 4194304), (47, -1), (48, -1), (49, -1), (50, -1), (51, 16777216), (52, -1)]

Decide 32 with phase True at level 5

After decision at level 5
 pending : [36, 9, 5, 29, 30, 39, 43, 44, 45, 46, 51, 38, 31, 33, 23, 37, 24]
 solution : [7, 28, 27, 32]


New level: 6
 pending : [36, 9, 5, 29, 30, 39, 43, 44, 45, 46, 51, 38, 31, 33, 23, 37, 24]
 solution : [7, 28, 27, 32]


Before reduction : 
 pending  : [36, 9, 5, 29, 30, 39, 43, 44, 45, 46, 51, 38, 31, 33, 23, 37, 24]
 solution : [7, 28, 27, 32]

Essensial at level 6 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 262144), (6, -1), (7, -1), (8, -1), (9, 134217728), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, 134217728), (24, 536870912), (25, -1), (26, -1), (27, -1), (28, -1), (29, 524288), (30, 4096), (31, 4096), (32, 1073741824), (33, 2097152), (34, -1), (35, -1), (36, 2048), (37, 2048), (38, 67108864), (39, 2048), (40, -1), (41, -1), (42, -1), (43, 131072), (44, 131072), (45, 33554432), (46, 4194304), (47, -1), (48, -1), (49, -1), (50, -1), (51, 16777216), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 65536), (6, -1), (7, -1), (8, -1), (9, 134217728), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, 134217728), (24, 2048), (25, -1), (26, -1), (27, -1), (28, -1), (29, 131072), (30, 1024), (31, 0), (32, -1), (33, 0), (34, -1), (35, -1), (36, 512), (37, 0), (38, 16777216), (39, 512), (40, -1), (41, -1), (42, -1), (43, 32768), (44, 32768), (45, 8388608), (46, 1048576), (47, -1), (48, -1), (49, -1), (50, -1), (51, 4194304), (52, -1)]

Covered at level 6 : {33, 37, 31}

After reduction : 
 pending  : [36, 9, 5, 29, 30, 39, 43, 44, 45, 46, 51, 38, 23, 24]
 solution : [7, 28, 27, 32]


Before reduction : 
 pending  : [36, 9, 5, 29, 30, 39, 43, 44, 45, 46, 51, 38, 23, 24]
 solution : [7, 28, 27, 32]

Essensial at level 6 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 65536), (6, -1), (7, -1), (8, -1), (9, 134217728), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, 134217728), (24, 2048), (25, -1), (26, -1), (27, -1), (28, -1), (29, 131072), (30, 1024), (31, 0), (32, -1), (33, 0), (34, -1), (35, -1), (36, 512), (37, 0), (38, 16777216), (39, 512), (40, -1), (41, -1), (42, -1), (43, 32768), (44, 32768), (45, 8388608), (46, 1048576), (47, -1), (48, -1), (49, -1), (50, -1), (51, 4194304), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 65536), (6, -1), (7, -1), (8, -1), (9, 134217728), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, 134217728), (24, 2048), (25, -1), (26, -1), (27, -1), (28, -1), (29, 131072), (30, 1024), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, 512), (37, -1), (38, 16777216), (39, 512), (40, -1), (41, -1), (42, -1), (43, 32768), (44, 32768), (45, 8388608), (46, 1048576), (47, -1), (48, -1), (49, -1), (50, -1), (51, 4194304), (52, -1)]

Covered at level 6 : set()

After reduction : 
 pending  : [36, 9, 5, 29, 30, 39, 43, 44, 45, 46, 51, 38, 23, 24]
 solution : [7, 28, 27, 32]


Solution : [7, 28, 27, 32] has cost 27.


Before backtrack at level 6
 pending : [36, 9, 5, 29, 30, 39, 43, 44, 45, 46, 51, 38, 23, 24]
 solution : [7, 28, 27, 32]

After backtrack at level 6
 pending : [36, 9, 5, 29, 30, 39, 43, 44, 45, 46, 51, 38, 23, 24, 31, 33, 37]
 solution : [7, 28, 27, 32]


Invert decision for 32 at level 5


New level: 6
 pending : [36, 9, 5, 29, 30, 39, 43, 44, 45, 46, 51, 38, 23, 24, 31, 33, 37]
 solution : [7, 28, 27]


Before reduction : 
 pending  : [36, 9, 5, 29, 30, 39, 43, 44, 45, 46, 51, 38, 23, 24, 31, 33, 37]
 solution : [7, 28, 27]

Essensial at level 6 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 65536), (6, -1), (7, -1), (8, -1), (9, 134217728), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, 134217728), (24, 2048), (25, -1), (26, -1), (27, -1), (28, -1), (29, 131072), (30, 1024), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, 512), (37, -1), (38, 16777216), (39, 512), (40, -1), (41, -1), (42, -1), (43, 32768), (44, 32768), (45, 8388608), (46, 1048576), (47, -1), (48, -1), (49, -1), (50, -1), (51, 4194304), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 262144), (6, -1), (7, -1), (8, -1), (9, 134217728), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, 134217728), (24, 536870912), (25, -1), (26, -1), (27, -1), (28, -1), (29, 524288), (30, 4096), (31, 4096), (32, -1), (33, 2097152), (34, -1), (35, -1), (36, 2048), (37, 2048), (38, 67108864), (39, 2048), (40, -1), (41, -1), (42, -1), (43, 131072), (44, 131072), (45, 33554432), (46, 4194304), (47, -1), (48, -1), (49, -1), (50, -1), (51, 16777216), (52, -1)]

Covered at level 6 : set()

After reduction : 
 pending  : [36, 9, 5, 29, 30, 39, 43, 44, 45, 46, 51, 38, 23, 24, 31, 33, 37]
 solution : [7, 28, 27]


Solution : [7, 28, 27] has cost 14.


Decide in level 6 among pending : [36, 9, 5, 29, 30, 39, 43, 44, 45, 46, 51, 38, 23, 24, 31, 33, 37]

Coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 262144), (6, -1), (7, -1), (8, -1), (9, 134217728), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, 134217728), (24, 536870912), (25, -1), (26, -1), (27, -1), (28, -1), (29, 524288), (30, 4096), (31, 4096), (32, -1), (33, 2097152), (34, -1), (35, -1), (36, 2048), (37, 2048), (38, 67108864), (39, 2048), (40, -1), (41, -1), (42, -1), (43, 131072), (44, 131072), (45, 33554432), (46, 4194304), (47, -1), (48, -1), (49, -1), (50, -1), (51, 16777216), (52, -1)]

Decide 24 with phase True at level 6

After decision at level 6
 pending : [36, 9, 5, 29, 30, 39, 43, 44, 45, 46, 51, 38, 23, 31, 33, 37]
 solution : [7, 28, 27, 24]


New level: 7
 pending : [36, 9, 5, 29, 30, 39, 43, 44, 45, 46, 51, 38, 23, 31, 33, 37]
 solution : [7, 28, 27, 24]


Before reduction : 
 pending  : [36, 9, 5, 29, 30, 39, 43, 44, 45, 46, 51, 38, 23, 31, 33, 37]
 solution : [7, 28, 27, 24]

Essensial at level 7 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 262144), (6, -1), (7, -1), (8, -1), (9, 134217728), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, 134217728), (24, 536870912), (25, -1), (26, -1), (27, -1), (28, -1), (29, 524288), (30, 4096), (31, 4096), (32, -1), (33, 2097152), (34, -1), (35, -1), (36, 2048), (37, 2048), (38, 67108864), (39, 2048), (40, -1), (41, -1), (42, -1), (43, 131072), (44, 131072), (45, 33554432), (46, 4194304), (47, -1), (48, -1), (49, -1), (50, -1), (51, 16777216), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 65536), (6, -1), (7, -1), (8, -1), (9, 33554432), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, 33554432), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, 131072), (30, 1024), (31, 0), (32, -1), (33, 0), (34, -1), (35, -1), (36, 512), (37, 0), (38, 33554432), (39, 512), (40, -1), (41, -1), (42, -1), (43, 32768), (44, 32768), (45, 16777216), (46, 1048576), (47, -1), (48, -1), (49, -1), (50, -1), (51, 8388608), (52, -1)]

Covered at level 7 : {33, 37, 31}

After reduction : 
 pending  : [36, 9, 5, 29, 30, 39, 43, 44, 45, 46, 51, 38, 23]
 solution : [7, 28, 27, 24]


Before reduction : 
 pending  : [36, 9, 5, 29, 30, 39, 43, 44, 45, 46, 51, 38, 23]
 solution : [7, 28, 27, 24]

Essensial at level 7 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 65536), (6, -1), (7, -1), (8, -1), (9, 33554432), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, 33554432), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, 131072), (30, 1024), (31, 0), (32, -1), (33, 0), (34, -1), (35, -1), (36, 512), (37, 0), (38, 33554432), (39, 512), (40, -1), (41, -1), (42, -1), (43, 32768), (44, 32768), (45, 16777216), (46, 1048576), (47, -1), (48, -1), (49, -1), (50, -1), (51, 8388608), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 65536), (6, -1), (7, -1), (8, -1), (9, 33554432), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, 33554432), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, 131072), (30, 1024), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, 512), (37, -1), (38, 33554432), (39, 512), (40, -1), (41, -1), (42, -1), (43, 32768), (44, 32768), (45, 16777216), (46, 1048576), (47, -1), (48, -1), (49, -1), (50, -1), (51, 8388608), (52, -1)]

Covered at level 7 : set()

After reduction : 
 pending  : [36, 9, 5, 29, 30, 39, 43, 44, 45, 46, 51, 38, 23]
 solution : [7, 28, 27, 24]


Solution : [7, 28, 27, 24] has cost 21.


Before backtrack at level 7
 pending : [36, 9, 5, 29, 30, 39, 43, 44, 45, 46, 51, 38, 23]
 solution : [7, 28, 27, 24]

After backtrack at level 7
 pending : [36, 9, 5, 29, 30, 39, 43, 44, 45, 46, 51, 38, 23, 31, 33, 37]
 solution : [7, 28, 27, 24]


Invert decision for 24 at level 6


New level: 7
 pending : [36, 9, 5, 29, 30, 39, 43, 44, 45, 46, 51, 38, 23, 31, 33, 37]
 solution : [7, 28, 27]


Before reduction : 
 pending  : [36, 9, 5, 29, 30, 39, 43, 44, 45, 46, 51, 38, 23, 31, 33, 37]
 solution : [7, 28, 27]

Essensial at level 7 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 65536), (6, -1), (7, -1), (8, -1), (9, 33554432), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, 33554432), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, 131072), (30, 1024), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, 512), (37, -1), (38, 33554432), (39, 512), (40, -1), (41, -1), (42, -1), (43, 32768), (44, 32768), (45, 16777216), (46, 1048576), (47, -1), (48, -1), (49, -1), (50, -1), (51, 8388608), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 262144), (6, -1), (7, -1), (8, -1), (9, 134217728), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, 134217728), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, 524288), (30, 4096), (31, 4096), (32, -1), (33, 2097152), (34, -1), (35, -1), (36, 2048), (37, 2048), (38, 67108864), (39, 2048), (40, -1), (41, -1), (42, -1), (43, 131072), (44, 131072), (45, 33554432), (46, 4194304), (47, -1), (48, -1), (49, -1), (50, -1), (51, 16777216), (52, -1)]

Covered at level 7 : set()

After reduction : 
 pending  : [36, 9, 5, 29, 30, 39, 43, 44, 45, 46, 51, 38, 23, 31, 33, 37]
 solution : [7, 28, 27]


Solution : [7, 28, 27] has cost 14.


Decide in level 7 among pending : [36, 9, 5, 29, 30, 39, 43, 44, 45, 46, 51, 38, 23, 31, 33, 37]

Coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 262144), (6, -1), (7, -1), (8, -1), (9, 134217728), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, 134217728), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, 524288), (30, 4096), (31, 4096), (32, -1), (33, 2097152), (34, -1), (35, -1), (36, 2048), (37, 2048), (38, 67108864), (39, 2048), (40, -1), (41, -1), (42, -1), (43, 131072), (44, 131072), (45, 33554432), (46, 4194304), (47, -1), (48, -1), (49, -1), (50, -1), (51, 16777216), (52, -1)]

Decide 9 with phase True at level 7

After decision at level 7
 pending : [36, 5, 29, 30, 39, 43, 44, 45, 46, 51, 38, 23, 31, 33, 37]
 solution : [7, 28, 27, 9]


New level: 8
 pending : [36, 5, 29, 30, 39, 43, 44, 45, 46, 51, 38, 23, 31, 33, 37]
 solution : [7, 28, 27, 9]


Before reduction : 
 pending  : [36, 5, 29, 30, 39, 43, 44, 45, 46, 51, 38, 23, 31, 33, 37]
 solution : [7, 28, 27, 9]

Essensial at level 8 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 262144), (6, -1), (7, -1), (8, -1), (9, 134217728), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, 134217728), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, 524288), (30, 4096), (31, 4096), (32, -1), (33, 2097152), (34, -1), (35, -1), (36, 2048), (37, 2048), (38, 67108864), (39, 2048), (40, -1), (41, -1), (42, -1), (43, 131072), (44, 131072), (45, 33554432), (46, 4194304), (47, -1), (48, -1), (49, -1), (50, -1), (51, 16777216), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 0), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, 0), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, 0), (30, 0), (31, 0), (32, -1), (33, 0), (34, -1), (35, -1), (36, 0), (37, 0), (38, 0), (39, 0), (40, -1), (41, -1), (42, -1), (43, 0), (44, 0), (45, 0), (46, 0), (47, -1), (48, -1), (49, -1), (50, -1), (51, 0), (52, -1)]

Covered at level 8 : {33, 36, 5, 38, 39, 37, 43, 44, 45, 46, 51, 23, 29, 30, 31}

After reduction : 
 pending  : []
 solution : [7, 28, 27, 9]


Before reduction : 
 pending  : []
 solution : [7, 28, 27, 9]

Essensial at level 8 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 0), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, 0), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, 0), (30, 0), (31, 0), (32, -1), (33, 0), (34, -1), (35, -1), (36, 0), (37, 0), (38, 0), (39, 0), (40, -1), (41, -1), (42, -1), (43, 0), (44, 0), (45, 0), (46, 0), (47, -1), (48, -1), (49, -1), (50, -1), (51, 0), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 8 : set()

After reduction : 
 pending  : []
 solution : [7, 28, 27, 9]


Solution : [7, 28, 27, 9] has cost 18.


Before backtrack at level 8
 pending : []
 solution : [7, 28, 27, 9]

After backtrack at level 8
 pending : [36, 5, 29, 30, 39, 43, 44, 45, 46, 51, 38, 23, 31, 33, 37]
 solution : [7, 28, 27, 9]


Invert decision for 9 at level 7


New level: 8
 pending : [36, 5, 29, 30, 39, 43, 44, 45, 46, 51, 38, 23, 31, 33, 37]
 solution : [7, 28, 27]


Before reduction : 
 pending  : [36, 5, 29, 30, 39, 43, 44, 45, 46, 51, 38, 23, 31, 33, 37]
 solution : [7, 28, 27]

Essensial at level 8 : {23}

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 0), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, 0), (30, 0), (31, 0), (32, -1), (33, 0), (34, -1), (35, -1), (36, 0), (37, 0), (38, 0), (39, 0), (40, -1), (41, -1), (42, -1), (43, 0), (44, 0), (45, 0), (46, 0), (47, -1), (48, -1), (49, -1), (50, -1), (51, 0), (52, -1)]

Covered at level 8 : {33, 36, 5, 38, 39, 37, 43, 44, 45, 46, 51, 29, 30, 31}

After reduction : 
 pending  : []
 solution : [7, 28, 27, 23]


Before reduction : 
 pending  : []
 solution : [7, 28, 27, 23]

Essensial at level 8 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 0), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, 0), (30, 0), (31, 0), (32, -1), (33, 0), (34, -1), (35, -1), (36, 0), (37, 0), (38, 0), (39, 0), (40, -1), (41, -1), (42, -1), (43, 0), (44, 0), (45, 0), (46, 0), (47, -1), (48, -1), (49, -1), (50, -1), (51, 0), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 8 : set()

After reduction : 
 pending  : []
 solution : [7, 28, 27, 23]


Solution : [7, 28, 27, 23] has cost 21.


Before backtrack at level 8
 pending : []
 solution : [7, 28, 27, 23]

After backtrack at level 8
 pending : [23, 36, 5, 29, 30, 39, 43, 44, 45, 46, 51, 38, 31, 33, 37]
 solution : [7, 28, 27]


Before backtrack at level 7
 pending : [23, 36, 5, 29, 30, 39, 43, 44, 45, 46, 51, 38, 31, 33, 37]
 solution : [7, 28, 27]

After backtrack at level 7
 pending : [23, 36, 5, 29, 30, 39, 43, 44, 45, 46, 51, 38, 31, 33, 37, 9]
 solution : [7, 28, 27]


Before backtrack at level 6
 pending : [23, 36, 5, 29, 30, 39, 43, 44, 45, 46, 51, 38, 31, 33, 37, 9]
 solution : [7, 28, 27]

After backtrack at level 6
 pending : [23, 36, 5, 29, 30, 39, 43, 44, 45, 46, 51, 38, 31, 33, 37, 9, 24]
 solution : [7, 28, 27]


Before backtrack at level 5
 pending : [23, 36, 5, 29, 30, 39, 43, 44, 45, 46, 51, 38, 31, 33, 37, 9, 24]
 solution : [7, 28, 27]

After backtrack at level 5
 pending : [23, 36, 5, 29, 30, 39, 43, 44, 45, 46, 51, 38, 31, 33, 37, 9, 24, 26, 41, 6, 21, 20, 17, 14, 19, 16, 18, 15, 13, 32]
 solution : [7, 28, 27]


Invert decision for 27 at level 4


New level: 5
 pending : [23, 36, 5, 29, 30, 39, 43, 44, 45, 46, 51, 38, 31, 33, 37, 9, 24, 26, 41, 6, 21, 20, 17, 14, 19, 16, 18, 15, 13, 32]
 solution : [7, 28]


Before reduction : 
 pending  : [23, 36, 5, 29, 30, 39, 43, 44, 45, 46, 51, 38, 31, 33, 37, 9, 24, 26, 41, 6, 21, 20, 17, 14, 19, 16, 18, 15, 13, 32]
 solution : [7, 28]

Essensial at level 5 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 1048576), (6, 1048576), (7, -1), (8, -1), (9, 134217728), (10, -1), (11, -1), (12, -1), (13, 2147483648), (14, 8388608), (15, 1073741824), (16, 16777216), (17, 262144), (18, 67108864), (19, 33554432), (20, 524288), (21, 1114112), (22, -1), (23, 134217728), (24, 536870912), (25, -1), (26, 4194304), (27, -1), (28, -1), (29, 1048576), (30, 16384), (31, 16384), (32, 1073741824), (33, 2097152), (34, -1), (35, -1), (36, 268435456), (37, 536870912), (38, 134217728), (39, 16384), (40, -1), (41, 4194304), (42, -1), (43, 524288), (44, 524288), (45, 67108864), (46, 16777216), (47, -1), (48, -1), (49, -1), (50, -1), (51, 67108864), (52, -1)]

Covered at level 5 : set()

After reduction : 
 pending  : [23, 36, 5, 29, 30, 39, 43, 44, 45, 46, 51, 38, 31, 33, 37, 9, 24, 26, 41, 6, 21, 20, 17, 14, 19, 16, 18, 15, 13, 32]
 solution : [7, 28]


Solution : [7, 28] has cost 10.


Decide in level 5 among pending : [23, 36, 5, 29, 30, 39, 43, 44, 45, 46, 51, 38, 31, 33, 37, 9, 24, 26, 41, 6, 21, 20, 17, 14, 19, 16, 18, 15, 13, 32]

Coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 1048576), (6, 1048576), (7, -1), (8, -1), (9, 134217728), (10, -1), (11, -1), (12, -1), (13, 2147483648), (14, 8388608), (15, 1073741824), (16, 16777216), (17, 262144), (18, 67108864), (19, 33554432), (20, 524288), (21, 1114112), (22, -1), (23, 134217728), (24, 536870912), (25, -1), (26, 4194304), (27, -1), (28, -1), (29, 1048576), (30, 16384), (31, 16384), (32, 1073741824), (33, 2097152), (34, -1), (35, -1), (36, 268435456), (37, 536870912), (38, 134217728), (39, 16384), (40, -1), (41, 4194304), (42, -1), (43, 524288), (44, 524288), (45, 67108864), (46, 16777216), (47, -1), (48, -1), (49, -1), (50, -1), (51, 67108864), (52, -1)]

Decide 13 with phase True at level 5

After decision at level 5
 pending : [23, 36, 5, 29, 30, 39, 43, 44, 45, 46, 51, 38, 31, 33, 37, 9, 24, 26, 41, 6, 21, 20, 17, 14, 19, 16, 18, 15, 32]
 solution : [7, 28, 13]


New level: 6
 pending : [23, 36, 5, 29, 30, 39, 43, 44, 45, 46, 51, 38, 31, 33, 37, 9, 24, 26, 41, 6, 21, 20, 17, 14, 19, 16, 18, 15, 32]
 solution : [7, 28, 13]


Before reduction : 
 pending  : [23, 36, 5, 29, 30, 39, 43, 44, 45, 46, 51, 38, 31, 33, 37, 9, 24, 26, 41, 6, 21, 20, 17, 14, 19, 16, 18, 15, 32]
 solution : [7, 28, 13]

Essensial at level 6 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 1048576), (6, 1048576), (7, -1), (8, -1), (9, 134217728), (10, -1), (11, -1), (12, -1), (13, 2147483648), (14, 8388608), (15, 1073741824), (16, 16777216), (17, 262144), (18, 67108864), (19, 33554432), (20, 524288), (21, 1114112), (22, -1), (23, 134217728), (24, 536870912), (25, -1), (26, 4194304), (27, -1), (28, -1), (29, 1048576), (30, 16384), (31, 16384), (32, 1073741824), (33, 2097152), (34, -1), (35, -1), (36, 268435456), (37, 536870912), (38, 134217728), (39, 16384), (40, -1), (41, 4194304), (42, -1), (43, 524288), (44, 524288), (45, 67108864), (46, 16777216), (47, -1), (48, -1), (49, -1), (50, -1), (51, 67108864), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 262144), (6, 0), (7, -1), (8, -1), (9, 134217728), (10, -1), (11, -1), (12, -1), (13, -1), (14, 0), (15, 0), (16, 0), (17, 0), (18, 0), (19, 0), (20, 0), (21, 0), (22, -1), (23, 134217728), (24, 536870912), (25, -1), (26, 0), (27, -1), (28, -1), (29, 524288), (30, 4096), (31, 4096), (32, 1073741824), (33, 2097152), (34, -1), (35, -1), (36, 2048), (37, 2048), (38, 67108864), (39, 2048), (40, -1), (41, 0), (42, -1), (43, 131072), (44, 131072), (45, 33554432), (46, 4194304), (47, -1), (48, -1), (49, -1), (50, -1), (51, 67108864), (52, -1)]

Covered at level 6 : {6, 41, 14, 15, 16, 17, 18, 19, 20, 21, 26}

After reduction : 
 pending  : [23, 36, 5, 29, 30, 39, 43, 44, 45, 46, 51, 38, 31, 33, 37, 9, 24, 32]
 solution : [7, 28, 13]


Before reduction : 
 pending  : [23, 36, 5, 29, 30, 39, 43, 44, 45, 46, 51, 38, 31, 33, 37, 9, 24, 32]
 solution : [7, 28, 13]

Essensial at level 6 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 262144), (6, 0), (7, -1), (8, -1), (9, 134217728), (10, -1), (11, -1), (12, -1), (13, -1), (14, 0), (15, 0), (16, 0), (17, 0), (18, 0), (19, 0), (20, 0), (21, 0), (22, -1), (23, 134217728), (24, 536870912), (25, -1), (26, 0), (27, -1), (28, -1), (29, 524288), (30, 4096), (31, 4096), (32, 1073741824), (33, 2097152), (34, -1), (35, -1), (36, 2048), (37, 2048), (38, 67108864), (39, 2048), (40, -1), (41, 0), (42, -1), (43, 131072), (44, 131072), (45, 33554432), (46, 4194304), (47, -1), (48, -1), (49, -1), (50, -1), (51, 67108864), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 262144), (6, -1), (7, -1), (8, -1), (9, 134217728), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, 134217728), (24, 536870912), (25, -1), (26, -1), (27, -1), (28, -1), (29, 524288), (30, 4096), (31, 4096), (32, 1073741824), (33, 2097152), (34, -1), (35, -1), (36, 2048), (37, 2048), (38, 67108864), (39, 2048), (40, -1), (41, -1), (42, -1), (43, 131072), (44, 131072), (45, 33554432), (46, 4194304), (47, -1), (48, -1), (49, -1), (50, -1), (51, 67108864), (52, -1)]

Covered at level 6 : set()

After reduction : 
 pending  : [23, 36, 5, 29, 30, 39, 43, 44, 45, 46, 51, 38, 31, 33, 37, 9, 24, 32]
 solution : [7, 28, 13]


Solution : [7, 28, 13] has cost 17.


Decide in level 6 among pending : [23, 36, 5, 29, 30, 39, 43, 44, 45, 46, 51, 38, 31, 33, 37, 9, 24, 32]

Coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 262144), (6, -1), (7, -1), (8, -1), (9, 134217728), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, 134217728), (24, 536870912), (25, -1), (26, -1), (27, -1), (28, -1), (29, 524288), (30, 4096), (31, 4096), (32, 1073741824), (33, 2097152), (34, -1), (35, -1), (36, 2048), (37, 2048), (38, 67108864), (39, 2048), (40, -1), (41, -1), (42, -1), (43, 131072), (44, 131072), (45, 33554432), (46, 4194304), (47, -1), (48, -1), (49, -1), (50, -1), (51, 67108864), (52, -1)]

Decide 32 with phase True at level 6

After decision at level 6
 pending : [23, 36, 5, 29, 30, 39, 43, 44, 45, 46, 51, 38, 31, 33, 37, 9, 24]
 solution : [7, 28, 13, 32]


New level: 7
 pending : [23, 36, 5, 29, 30, 39, 43, 44, 45, 46, 51, 38, 31, 33, 37, 9, 24]
 solution : [7, 28, 13, 32]


Before reduction : 
 pending  : [23, 36, 5, 29, 30, 39, 43, 44, 45, 46, 51, 38, 31, 33, 37, 9, 24]
 solution : [7, 28, 13, 32]

Essensial at level 7 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 262144), (6, -1), (7, -1), (8, -1), (9, 134217728), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, 134217728), (24, 536870912), (25, -1), (26, -1), (27, -1), (28, -1), (29, 524288), (30, 4096), (31, 4096), (32, 1073741824), (33, 2097152), (34, -1), (35, -1), (36, 2048), (37, 2048), (38, 67108864), (39, 2048), (40, -1), (41, -1), (42, -1), (43, 131072), (44, 131072), (45, 33554432), (46, 4194304), (47, -1), (48, -1), (49, -1), (50, -1), (51, 67108864), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 65536), (6, -1), (7, -1), (8, -1), (9, 134217728), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, 134217728), (24, 2048), (25, -1), (26, -1), (27, -1), (28, -1), (29, 131072), (30, 1024), (31, 0), (32, -1), (33, 0), (34, -1), (35, -1), (36, 512), (37, 0), (38, 16777216), (39, 512), (40, -1), (41, -1), (42, -1), (43, 32768), (44, 32768), (45, 8388608), (46, 1048576), (47, -1), (48, -1), (49, -1), (50, -1), (51, 16777216), (52, -1)]

Covered at level 7 : {33, 37, 31}

After reduction : 
 pending  : [23, 36, 5, 29, 30, 39, 43, 44, 45, 46, 51, 38, 9, 24]
 solution : [7, 28, 13, 32]


Before reduction : 
 pending  : [23, 36, 5, 29, 30, 39, 43, 44, 45, 46, 51, 38, 9, 24]
 solution : [7, 28, 13, 32]

Essensial at level 7 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 65536), (6, -1), (7, -1), (8, -1), (9, 134217728), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, 134217728), (24, 2048), (25, -1), (26, -1), (27, -1), (28, -1), (29, 131072), (30, 1024), (31, 0), (32, -1), (33, 0), (34, -1), (35, -1), (36, 512), (37, 0), (38, 16777216), (39, 512), (40, -1), (41, -1), (42, -1), (43, 32768), (44, 32768), (45, 8388608), (46, 1048576), (47, -1), (48, -1), (49, -1), (50, -1), (51, 16777216), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 65536), (6, -1), (7, -1), (8, -1), (9, 134217728), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, 134217728), (24, 2048), (25, -1), (26, -1), (27, -1), (28, -1), (29, 131072), (30, 1024), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, 512), (37, -1), (38, 16777216), (39, 512), (40, -1), (41, -1), (42, -1), (43, 32768), (44, 32768), (45, 8388608), (46, 1048576), (47, -1), (48, -1), (49, -1), (50, -1), (51, 16777216), (52, -1)]

Covered at level 7 : set()

After reduction : 
 pending  : [23, 36, 5, 29, 30, 39, 43, 44, 45, 46, 51, 38, 9, 24]
 solution : [7, 28, 13, 32]


Solution : [7, 28, 13, 32] has cost 30.


Before backtrack at level 7
 pending : [23, 36, 5, 29, 30, 39, 43, 44, 45, 46, 51, 38, 9, 24]
 solution : [7, 28, 13, 32]

After backtrack at level 7
 pending : [23, 36, 5, 29, 30, 39, 43, 44, 45, 46, 51, 38, 9, 24, 31, 33, 37]
 solution : [7, 28, 13, 32]


Invert decision for 32 at level 6


New level: 7
 pending : [23, 36, 5, 29, 30, 39, 43, 44, 45, 46, 51, 38, 9, 24, 31, 33, 37]
 solution : [7, 28, 13]


Before reduction : 
 pending  : [23, 36, 5, 29, 30, 39, 43, 44, 45, 46, 51, 38, 9, 24, 31, 33, 37]
 solution : [7, 28, 13]

Essensial at level 7 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 65536), (6, -1), (7, -1), (8, -1), (9, 134217728), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, 134217728), (24, 2048), (25, -1), (26, -1), (27, -1), (28, -1), (29, 131072), (30, 1024), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, 512), (37, -1), (38, 16777216), (39, 512), (40, -1), (41, -1), (42, -1), (43, 32768), (44, 32768), (45, 8388608), (46, 1048576), (47, -1), (48, -1), (49, -1), (50, -1), (51, 16777216), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 262144), (6, -1), (7, -1), (8, -1), (9, 134217728), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, 134217728), (24, 536870912), (25, -1), (26, -1), (27, -1), (28, -1), (29, 524288), (30, 4096), (31, 4096), (32, -1), (33, 2097152), (34, -1), (35, -1), (36, 2048), (37, 2048), (38, 67108864), (39, 2048), (40, -1), (41, -1), (42, -1), (43, 131072), (44, 131072), (45, 33554432), (46, 4194304), (47, -1), (48, -1), (49, -1), (50, -1), (51, 67108864), (52, -1)]

Covered at level 7 : set()

After reduction : 
 pending  : [23, 36, 5, 29, 30, 39, 43, 44, 45, 46, 51, 38, 9, 24, 31, 33, 37]
 solution : [7, 28, 13]


Solution : [7, 28, 13] has cost 17.


Decide in level 7 among pending : [23, 36, 5, 29, 30, 39, 43, 44, 45, 46, 51, 38, 9, 24, 31, 33, 37]

Coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 262144), (6, -1), (7, -1), (8, -1), (9, 134217728), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, 134217728), (24, 536870912), (25, -1), (26, -1), (27, -1), (28, -1), (29, 524288), (30, 4096), (31, 4096), (32, -1), (33, 2097152), (34, -1), (35, -1), (36, 2048), (37, 2048), (38, 67108864), (39, 2048), (40, -1), (41, -1), (42, -1), (43, 131072), (44, 131072), (45, 33554432), (46, 4194304), (47, -1), (48, -1), (49, -1), (50, -1), (51, 67108864), (52, -1)]

Decide 24 with phase True at level 7

After decision at level 7
 pending : [23, 36, 5, 29, 30, 39, 43, 44, 45, 46, 51, 38, 9, 31, 33, 37]
 solution : [7, 28, 13, 24]


New level: 8
 pending : [23, 36, 5, 29, 30, 39, 43, 44, 45, 46, 51, 38, 9, 31, 33, 37]
 solution : [7, 28, 13, 24]


Before reduction : 
 pending  : [23, 36, 5, 29, 30, 39, 43, 44, 45, 46, 51, 38, 9, 31, 33, 37]
 solution : [7, 28, 13, 24]

Essensial at level 8 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 262144), (6, -1), (7, -1), (8, -1), (9, 134217728), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, 134217728), (24, 536870912), (25, -1), (26, -1), (27, -1), (28, -1), (29, 524288), (30, 4096), (31, 4096), (32, -1), (33, 2097152), (34, -1), (35, -1), (36, 2048), (37, 2048), (38, 67108864), (39, 2048), (40, -1), (41, -1), (42, -1), (43, 131072), (44, 131072), (45, 33554432), (46, 4194304), (47, -1), (48, -1), (49, -1), (50, -1), (51, 67108864), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 65536), (6, -1), (7, -1), (8, -1), (9, 33554432), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, 33554432), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, 131072), (30, 1024), (31, 0), (32, -1), (33, 0), (34, -1), (35, -1), (36, 512), (37, 0), (38, 33554432), (39, 512), (40, -1), (41, -1), (42, -1), (43, 32768), (44, 32768), (45, 16777216), (46, 1048576), (47, -1), (48, -1), (49, -1), (50, -1), (51, 33554432), (52, -1)]

Covered at level 8 : {33, 37, 31}

After reduction : 
 pending  : [23, 36, 5, 29, 30, 39, 43, 44, 45, 46, 51, 38, 9]
 solution : [7, 28, 13, 24]


Before reduction : 
 pending  : [23, 36, 5, 29, 30, 39, 43, 44, 45, 46, 51, 38, 9]
 solution : [7, 28, 13, 24]

Essensial at level 8 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 65536), (6, -1), (7, -1), (8, -1), (9, 33554432), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, 33554432), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, 131072), (30, 1024), (31, 0), (32, -1), (33, 0), (34, -1), (35, -1), (36, 512), (37, 0), (38, 33554432), (39, 512), (40, -1), (41, -1), (42, -1), (43, 32768), (44, 32768), (45, 16777216), (46, 1048576), (47, -1), (48, -1), (49, -1), (50, -1), (51, 33554432), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 65536), (6, -1), (7, -1), (8, -1), (9, 33554432), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, 33554432), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, 131072), (30, 1024), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, 512), (37, -1), (38, 33554432), (39, 512), (40, -1), (41, -1), (42, -1), (43, 32768), (44, 32768), (45, 16777216), (46, 1048576), (47, -1), (48, -1), (49, -1), (50, -1), (51, 33554432), (52, -1)]

Covered at level 8 : set()

After reduction : 
 pending  : [23, 36, 5, 29, 30, 39, 43, 44, 45, 46, 51, 38, 9]
 solution : [7, 28, 13, 24]


Solution : [7, 28, 13, 24] has cost 24.


Before backtrack at level 8
 pending : [23, 36, 5, 29, 30, 39, 43, 44, 45, 46, 51, 38, 9]
 solution : [7, 28, 13, 24]

After backtrack at level 8
 pending : [23, 36, 5, 29, 30, 39, 43, 44, 45, 46, 51, 38, 9, 31, 33, 37]
 solution : [7, 28, 13, 24]


Invert decision for 24 at level 7


New level: 8
 pending : [23, 36, 5, 29, 30, 39, 43, 44, 45, 46, 51, 38, 9, 31, 33, 37]
 solution : [7, 28, 13]


Before reduction : 
 pending  : [23, 36, 5, 29, 30, 39, 43, 44, 45, 46, 51, 38, 9, 31, 33, 37]
 solution : [7, 28, 13]

Essensial at level 8 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 65536), (6, -1), (7, -1), (8, -1), (9, 33554432), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, 33554432), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, 131072), (30, 1024), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, 512), (37, -1), (38, 33554432), (39, 512), (40, -1), (41, -1), (42, -1), (43, 32768), (44, 32768), (45, 16777216), (46, 1048576), (47, -1), (48, -1), (49, -1), (50, -1), (51, 33554432), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 262144), (6, -1), (7, -1), (8, -1), (9, 134217728), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, 134217728), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, 524288), (30, 4096), (31, 4096), (32, -1), (33, 2097152), (34, -1), (35, -1), (36, 2048), (37, 2048), (38, 67108864), (39, 2048), (40, -1), (41, -1), (42, -1), (43, 131072), (44, 131072), (45, 33554432), (46, 4194304), (47, -1), (48, -1), (49, -1), (50, -1), (51, 67108864), (52, -1)]

Covered at level 8 : set()

After reduction : 
 pending  : [23, 36, 5, 29, 30, 39, 43, 44, 45, 46, 51, 38, 9, 31, 33, 37]
 solution : [7, 28, 13]


Solution : [7, 28, 13] has cost 17.


Decide in level 8 among pending : [23, 36, 5, 29, 30, 39, 43, 44, 45, 46, 51, 38, 9, 31, 33, 37]

Coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 262144), (6, -1), (7, -1), (8, -1), (9, 134217728), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, 134217728), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, 524288), (30, 4096), (31, 4096), (32, -1), (33, 2097152), (34, -1), (35, -1), (36, 2048), (37, 2048), (38, 67108864), (39, 2048), (40, -1), (41, -1), (42, -1), (43, 131072), (44, 131072), (45, 33554432), (46, 4194304), (47, -1), (48, -1), (49, -1), (50, -1), (51, 67108864), (52, -1)]

Decide 23 with phase True at level 8

After decision at level 8
 pending : [36, 5, 29, 30, 39, 43, 44, 45, 46, 51, 38, 9, 31, 33, 37]
 solution : [7, 28, 13, 23]


New level: 9
 pending : [36, 5, 29, 30, 39, 43, 44, 45, 46, 51, 38, 9, 31, 33, 37]
 solution : [7, 28, 13, 23]


Before reduction : 
 pending  : [36, 5, 29, 30, 39, 43, 44, 45, 46, 51, 38, 9, 31, 33, 37]
 solution : [7, 28, 13, 23]

Essensial at level 9 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 262144), (6, -1), (7, -1), (8, -1), (9, 134217728), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, 134217728), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, 524288), (30, 4096), (31, 4096), (32, -1), (33, 2097152), (34, -1), (35, -1), (36, 2048), (37, 2048), (38, 67108864), (39, 2048), (40, -1), (41, -1), (42, -1), (43, 131072), (44, 131072), (45, 33554432), (46, 4194304), (47, -1), (48, -1), (49, -1), (50, -1), (51, 67108864), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 0), (6, -1), (7, -1), (8, -1), (9, 0), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, 0), (30, 0), (31, 0), (32, -1), (33, 0), (34, -1), (35, -1), (36, 0), (37, 0), (38, 0), (39, 0), (40, -1), (41, -1), (42, -1), (43, 0), (44, 0), (45, 0), (46, 0), (47, -1), (48, -1), (49, -1), (50, -1), (51, 0), (52, -1)]

Covered at level 9 : {33, 36, 5, 38, 39, 37, 9, 43, 44, 45, 46, 51, 29, 30, 31}

After reduction : 
 pending  : []
 solution : [7, 28, 13, 23]


Before reduction : 
 pending  : []
 solution : [7, 28, 13, 23]

Essensial at level 9 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 0), (6, -1), (7, -1), (8, -1), (9, 0), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, 0), (30, 0), (31, 0), (32, -1), (33, 0), (34, -1), (35, -1), (36, 0), (37, 0), (38, 0), (39, 0), (40, -1), (41, -1), (42, -1), (43, 0), (44, 0), (45, 0), (46, 0), (47, -1), (48, -1), (49, -1), (50, -1), (51, 0), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 9 : set()

After reduction : 
 pending  : []
 solution : [7, 28, 13, 23]


Solution : [7, 28, 13, 23] has cost 24.


Before backtrack at level 9
 pending : []
 solution : [7, 28, 13, 23]

After backtrack at level 9
 pending : [36, 5, 29, 30, 39, 43, 44, 45, 46, 51, 38, 9, 31, 33, 37]
 solution : [7, 28, 13, 23]


Invert decision for 23 at level 8


New level: 9
 pending : [36, 5, 29, 30, 39, 43, 44, 45, 46, 51, 38, 9, 31, 33, 37]
 solution : [7, 28, 13]


Before reduction : 
 pending  : [36, 5, 29, 30, 39, 43, 44, 45, 46, 51, 38, 9, 31, 33, 37]
 solution : [7, 28, 13]

Essensial at level 9 : {9}

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 0), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, 0), (30, 0), (31, 0), (32, -1), (33, 0), (34, -1), (35, -1), (36, 0), (37, 0), (38, 0), (39, 0), (40, -1), (41, -1), (42, -1), (43, 0), (44, 0), (45, 0), (46, 0), (47, -1), (48, -1), (49, -1), (50, -1), (51, 0), (52, -1)]

Covered at level 9 : {33, 36, 5, 38, 39, 37, 43, 44, 45, 46, 51, 29, 30, 31}

After reduction : 
 pending  : []
 solution : [7, 28, 13, 9]


Before reduction : 
 pending  : []
 solution : [7, 28, 13, 9]

Essensial at level 9 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 0), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, 0), (30, 0), (31, 0), (32, -1), (33, 0), (34, -1), (35, -1), (36, 0), (37, 0), (38, 0), (39, 0), (40, -1), (41, -1), (42, -1), (43, 0), (44, 0), (45, 0), (46, 0), (47, -1), (48, -1), (49, -1), (50, -1), (51, 0), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 9 : set()

After reduction : 
 pending  : []
 solution : [7, 28, 13, 9]


Solution : [7, 28, 13, 9] has cost 21.


Before backtrack at level 9
 pending : []
 solution : [7, 28, 13, 9]

After backtrack at level 9
 pending : [9, 36, 5, 29, 30, 39, 43, 44, 45, 46, 51, 38, 31, 33, 37]
 solution : [7, 28, 13]


Before backtrack at level 8
 pending : [9, 36, 5, 29, 30, 39, 43, 44, 45, 46, 51, 38, 31, 33, 37]
 solution : [7, 28, 13]

After backtrack at level 8
 pending : [9, 36, 5, 29, 30, 39, 43, 44, 45, 46, 51, 38, 31, 33, 37, 23]
 solution : [7, 28, 13]


Before backtrack at level 7
 pending : [9, 36, 5, 29, 30, 39, 43, 44, 45, 46, 51, 38, 31, 33, 37, 23]
 solution : [7, 28, 13]

After backtrack at level 7
 pending : [9, 36, 5, 29, 30, 39, 43, 44, 45, 46, 51, 38, 31, 33, 37, 23, 24]
 solution : [7, 28, 13]


Before backtrack at level 6
 pending : [9, 36, 5, 29, 30, 39, 43, 44, 45, 46, 51, 38, 31, 33, 37, 23, 24]
 solution : [7, 28, 13]

After backtrack at level 6
 pending : [9, 36, 5, 29, 30, 39, 43, 44, 45, 46, 51, 38, 31, 33, 37, 23, 24, 26, 41, 6, 21, 20, 17, 14, 19, 16, 18, 15, 32]
 solution : [7, 28, 13]


Invert decision for 13 at level 5


New level: 6
 pending : [9, 36, 5, 29, 30, 39, 43, 44, 45, 46, 51, 38, 31, 33, 37, 23, 24, 26, 41, 6, 21, 20, 17, 14, 19, 16, 18, 15, 32]
 solution : [7, 28]


Before reduction : 
 pending  : [9, 36, 5, 29, 30, 39, 43, 44, 45, 46, 51, 38, 31, 33, 37, 23, 24, 26, 41, 6, 21, 20, 17, 14, 19, 16, 18, 15, 32]
 solution : [7, 28]

Essensial at level 6 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 1048576), (6, 1048576), (7, -1), (8, -1), (9, 134217728), (10, -1), (11, -1), (12, -1), (13, -1), (14, 8388608), (15, 1073741824), (16, 16777216), (17, 262144), (18, 67108864), (19, 33554432), (20, 524288), (21, 1114112), (22, -1), (23, 134217728), (24, 536870912), (25, -1), (26, 4194304), (27, -1), (28, -1), (29, 1048576), (30, 16384), (31, 16384), (32, 1073741824), (33, 2097152), (34, -1), (35, -1), (36, 268435456), (37, 536870912), (38, 134217728), (39, 16384), (40, -1), (41, 4194304), (42, -1), (43, 524288), (44, 524288), (45, 67108864), (46, 16777216), (47, -1), (48, -1), (49, -1), (50, -1), (51, 67108864), (52, -1)]

Covered at level 6 : set()

After reduction : 
 pending  : [9, 36, 5, 29, 30, 39, 43, 44, 45, 46, 51, 38, 31, 33, 37, 23, 24, 26, 41, 6, 21, 20, 17, 14, 19, 16, 18, 15, 32]
 solution : [7, 28]


Solution : [7, 28] has cost 10.


Decide in level 6 among pending : [9, 36, 5, 29, 30, 39, 43, 44, 45, 46, 51, 38, 31, 33, 37, 23, 24, 26, 41, 6, 21, 20, 17, 14, 19, 16, 18, 15, 32]

Coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 1048576), (6, 1048576), (7, -1), (8, -1), (9, 134217728), (10, -1), (11, -1), (12, -1), (13, -1), (14, 8388608), (15, 1073741824), (16, 16777216), (17, 262144), (18, 67108864), (19, 33554432), (20, 524288), (21, 1114112), (22, -1), (23, 134217728), (24, 536870912), (25, -1), (26, 4194304), (27, -1), (28, -1), (29, 1048576), (30, 16384), (31, 16384), (32, 1073741824), (33, 2097152), (34, -1), (35, -1), (36, 268435456), (37, 536870912), (38, 134217728), (39, 16384), (40, -1), (41, 4194304), (42, -1), (43, 524288), (44, 524288), (45, 67108864), (46, 16777216), (47, -1), (48, -1), (49, -1), (50, -1), (51, 67108864), (52, -1)]

Decide 15 with phase True at level 6

After decision at level 6
 pending : [9, 36, 5, 29, 30, 39, 43, 44, 45, 46, 51, 38, 31, 33, 37, 23, 24, 26, 41, 6, 21, 20, 17, 14, 19, 16, 18, 32]
 solution : [7, 28, 15]


New level: 7
 pending : [9, 36, 5, 29, 30, 39, 43, 44, 45, 46, 51, 38, 31, 33, 37, 23, 24, 26, 41, 6, 21, 20, 17, 14, 19, 16, 18, 32]
 solution : [7, 28, 15]


Before reduction : 
 pending  : [9, 36, 5, 29, 30, 39, 43, 44, 45, 46, 51, 38, 31, 33, 37, 23, 24, 26, 41, 6, 21, 20, 17, 14, 19, 16, 18, 32]
 solution : [7, 28, 15]

Essensial at level 7 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 1048576), (6, 1048576), (7, -1), (8, -1), (9, 134217728), (10, -1), (11, -1), (12, -1), (13, -1), (14, 8388608), (15, 1073741824), (16, 16777216), (17, 262144), (18, 67108864), (19, 33554432), (20, 524288), (21, 1114112), (22, -1), (23, 134217728), (24, 536870912), (25, -1), (26, 4194304), (27, -1), (28, -1), (29, 1048576), (30, 16384), (31, 16384), (32, 1073741824), (33, 2097152), (34, -1), (35, -1), (36, 268435456), (37, 536870912), (38, 134217728), (39, 16384), (40, -1), (41, 4194304), (42, -1), (43, 524288), (44, 524288), (45, 67108864), (46, 16777216), (47, -1), (48, -1), (49, -1), (50, -1), (51, 67108864), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 262144), (6, 0), (7, -1), (8, -1), (9, 134217728), (10, -1), (11, -1), (12, -1), (13, -1), (14, 0), (15, -1), (16, 0), (17, 0), (18, 0), (19, 0), (20, 0), (21, 0), (22, -1), (23, 134217728), (24, 536870912), (25, -1), (26, 0), (27, -1), (28, -1), (29, 524288), (30, 4096), (31, 4096), (32, 1073741824), (33, 2097152), (34, -1), (35, -1), (36, 2048), (37, 2048), (38, 67108864), (39, 2048), (40, -1), (41, 0), (42, -1), (43, 262144), (44, 262144), (45, 33554432), (46, 4194304), (47, -1), (48, -1), (49, -1), (50, -1), (51, 67108864), (52, -1)]

Covered at level 7 : {6, 41, 14, 16, 17, 18, 19, 20, 21, 26}

After reduction : 
 pending  : [9, 36, 5, 29, 30, 39, 43, 44, 45, 46, 51, 38, 31, 33, 37, 23, 24, 32]
 solution : [7, 28, 15]


Before reduction : 
 pending  : [9, 36, 5, 29, 30, 39, 43, 44, 45, 46, 51, 38, 31, 33, 37, 23, 24, 32]
 solution : [7, 28, 15]

Essensial at level 7 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 262144), (6, 0), (7, -1), (8, -1), (9, 134217728), (10, -1), (11, -1), (12, -1), (13, -1), (14, 0), (15, -1), (16, 0), (17, 0), (18, 0), (19, 0), (20, 0), (21, 0), (22, -1), (23, 134217728), (24, 536870912), (25, -1), (26, 0), (27, -1), (28, -1), (29, 524288), (30, 4096), (31, 4096), (32, 1073741824), (33, 2097152), (34, -1), (35, -1), (36, 2048), (37, 2048), (38, 67108864), (39, 2048), (40, -1), (41, 0), (42, -1), (43, 262144), (44, 262144), (45, 33554432), (46, 4194304), (47, -1), (48, -1), (49, -1), (50, -1), (51, 67108864), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 262144), (6, -1), (7, -1), (8, -1), (9, 134217728), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, 134217728), (24, 536870912), (25, -1), (26, -1), (27, -1), (28, -1), (29, 524288), (30, 4096), (31, 4096), (32, 1073741824), (33, 2097152), (34, -1), (35, -1), (36, 2048), (37, 2048), (38, 67108864), (39, 2048), (40, -1), (41, -1), (42, -1), (43, 262144), (44, 262144), (45, 33554432), (46, 4194304), (47, -1), (48, -1), (49, -1), (50, -1), (51, 67108864), (52, -1)]

Covered at level 7 : set()

After reduction : 
 pending  : [9, 36, 5, 29, 30, 39, 43, 44, 45, 46, 51, 38, 31, 33, 37, 23, 24, 32]
 solution : [7, 28, 15]


Solution : [7, 28, 15] has cost 17.


Decide in level 7 among pending : [9, 36, 5, 29, 30, 39, 43, 44, 45, 46, 51, 38, 31, 33, 37, 23, 24, 32]

Coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 262144), (6, -1), (7, -1), (8, -1), (9, 134217728), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, 134217728), (24, 536870912), (25, -1), (26, -1), (27, -1), (28, -1), (29, 524288), (30, 4096), (31, 4096), (32, 1073741824), (33, 2097152), (34, -1), (35, -1), (36, 2048), (37, 2048), (38, 67108864), (39, 2048), (40, -1), (41, -1), (42, -1), (43, 262144), (44, 262144), (45, 33554432), (46, 4194304), (47, -1), (48, -1), (49, -1), (50, -1), (51, 67108864), (52, -1)]

Decide 32 with phase True at level 7

After decision at level 7
 pending : [9, 36, 5, 29, 30, 39, 43, 44, 45, 46, 51, 38, 31, 33, 37, 23, 24]
 solution : [7, 28, 15, 32]


New level: 8
 pending : [9, 36, 5, 29, 30, 39, 43, 44, 45, 46, 51, 38, 31, 33, 37, 23, 24]
 solution : [7, 28, 15, 32]


Before reduction : 
 pending  : [9, 36, 5, 29, 30, 39, 43, 44, 45, 46, 51, 38, 31, 33, 37, 23, 24]
 solution : [7, 28, 15, 32]

Essensial at level 8 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 262144), (6, -1), (7, -1), (8, -1), (9, 134217728), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, 134217728), (24, 536870912), (25, -1), (26, -1), (27, -1), (28, -1), (29, 524288), (30, 4096), (31, 4096), (32, 1073741824), (33, 2097152), (34, -1), (35, -1), (36, 2048), (37, 2048), (38, 67108864), (39, 2048), (40, -1), (41, -1), (42, -1), (43, 262144), (44, 262144), (45, 33554432), (46, 4194304), (47, -1), (48, -1), (49, -1), (50, -1), (51, 67108864), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 65536), (6, -1), (7, -1), (8, -1), (9, 134217728), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, 134217728), (24, 2048), (25, -1), (26, -1), (27, -1), (28, -1), (29, 131072), (30, 1024), (31, 0), (32, -1), (33, 0), (34, -1), (35, -1), (36, 512), (37, 0), (38, 16777216), (39, 512), (40, -1), (41, -1), (42, -1), (43, 65536), (44, 65536), (45, 8388608), (46, 1048576), (47, -1), (48, -1), (49, -1), (50, -1), (51, 16777216), (52, -1)]

Covered at level 8 : {33, 37, 31}

After reduction : 
 pending  : [9, 36, 5, 29, 30, 39, 43, 44, 45, 46, 51, 38, 23, 24]
 solution : [7, 28, 15, 32]


Before reduction : 
 pending  : [9, 36, 5, 29, 30, 39, 43, 44, 45, 46, 51, 38, 23, 24]
 solution : [7, 28, 15, 32]

Essensial at level 8 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 65536), (6, -1), (7, -1), (8, -1), (9, 134217728), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, 134217728), (24, 2048), (25, -1), (26, -1), (27, -1), (28, -1), (29, 131072), (30, 1024), (31, 0), (32, -1), (33, 0), (34, -1), (35, -1), (36, 512), (37, 0), (38, 16777216), (39, 512), (40, -1), (41, -1), (42, -1), (43, 65536), (44, 65536), (45, 8388608), (46, 1048576), (47, -1), (48, -1), (49, -1), (50, -1), (51, 16777216), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 65536), (6, -1), (7, -1), (8, -1), (9, 134217728), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, 134217728), (24, 2048), (25, -1), (26, -1), (27, -1), (28, -1), (29, 131072), (30, 1024), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, 512), (37, -1), (38, 16777216), (39, 512), (40, -1), (41, -1), (42, -1), (43, 65536), (44, 65536), (45, 8388608), (46, 1048576), (47, -1), (48, -1), (49, -1), (50, -1), (51, 16777216), (52, -1)]

Covered at level 8 : set()

After reduction : 
 pending  : [9, 36, 5, 29, 30, 39, 43, 44, 45, 46, 51, 38, 23, 24]
 solution : [7, 28, 15, 32]


Solution : [7, 28, 15, 32] has cost 30.


Before backtrack at level 8
 pending : [9, 36, 5, 29, 30, 39, 43, 44, 45, 46, 51, 38, 23, 24]
 solution : [7, 28, 15, 32]

After backtrack at level 8
 pending : [9, 36, 5, 29, 30, 39, 43, 44, 45, 46, 51, 38, 23, 24, 31, 33, 37]
 solution : [7, 28, 15, 32]


Invert decision for 32 at level 7


New level: 8
 pending : [9, 36, 5, 29, 30, 39, 43, 44, 45, 46, 51, 38, 23, 24, 31, 33, 37]
 solution : [7, 28, 15]


Before reduction : 
 pending  : [9, 36, 5, 29, 30, 39, 43, 44, 45, 46, 51, 38, 23, 24, 31, 33, 37]
 solution : [7, 28, 15]

Essensial at level 8 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 65536), (6, -1), (7, -1), (8, -1), (9, 134217728), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, 134217728), (24, 2048), (25, -1), (26, -1), (27, -1), (28, -1), (29, 131072), (30, 1024), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, 512), (37, -1), (38, 16777216), (39, 512), (40, -1), (41, -1), (42, -1), (43, 65536), (44, 65536), (45, 8388608), (46, 1048576), (47, -1), (48, -1), (49, -1), (50, -1), (51, 16777216), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 262144), (6, -1), (7, -1), (8, -1), (9, 134217728), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, 134217728), (24, 536870912), (25, -1), (26, -1), (27, -1), (28, -1), (29, 524288), (30, 4096), (31, 4096), (32, -1), (33, 2097152), (34, -1), (35, -1), (36, 2048), (37, 2048), (38, 67108864), (39, 2048), (40, -1), (41, -1), (42, -1), (43, 262144), (44, 262144), (45, 33554432), (46, 4194304), (47, -1), (48, -1), (49, -1), (50, -1), (51, 67108864), (52, -1)]

Covered at level 8 : set()

After reduction : 
 pending  : [9, 36, 5, 29, 30, 39, 43, 44, 45, 46, 51, 38, 23, 24, 31, 33, 37]
 solution : [7, 28, 15]


Solution : [7, 28, 15] has cost 17.


Decide in level 8 among pending : [9, 36, 5, 29, 30, 39, 43, 44, 45, 46, 51, 38, 23, 24, 31, 33, 37]

Coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 262144), (6, -1), (7, -1), (8, -1), (9, 134217728), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, 134217728), (24, 536870912), (25, -1), (26, -1), (27, -1), (28, -1), (29, 524288), (30, 4096), (31, 4096), (32, -1), (33, 2097152), (34, -1), (35, -1), (36, 2048), (37, 2048), (38, 67108864), (39, 2048), (40, -1), (41, -1), (42, -1), (43, 262144), (44, 262144), (45, 33554432), (46, 4194304), (47, -1), (48, -1), (49, -1), (50, -1), (51, 67108864), (52, -1)]

Decide 24 with phase True at level 8

After decision at level 8
 pending : [9, 36, 5, 29, 30, 39, 43, 44, 45, 46, 51, 38, 23, 31, 33, 37]
 solution : [7, 28, 15, 24]


New level: 9
 pending : [9, 36, 5, 29, 30, 39, 43, 44, 45, 46, 51, 38, 23, 31, 33, 37]
 solution : [7, 28, 15, 24]


Before reduction : 
 pending  : [9, 36, 5, 29, 30, 39, 43, 44, 45, 46, 51, 38, 23, 31, 33, 37]
 solution : [7, 28, 15, 24]

Essensial at level 9 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 262144), (6, -1), (7, -1), (8, -1), (9, 134217728), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, 134217728), (24, 536870912), (25, -1), (26, -1), (27, -1), (28, -1), (29, 524288), (30, 4096), (31, 4096), (32, -1), (33, 2097152), (34, -1), (35, -1), (36, 2048), (37, 2048), (38, 67108864), (39, 2048), (40, -1), (41, -1), (42, -1), (43, 262144), (44, 262144), (45, 33554432), (46, 4194304), (47, -1), (48, -1), (49, -1), (50, -1), (51, 67108864), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 65536), (6, -1), (7, -1), (8, -1), (9, 33554432), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, 33554432), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, 131072), (30, 1024), (31, 0), (32, -1), (33, 0), (34, -1), (35, -1), (36, 512), (37, 0), (38, 33554432), (39, 512), (40, -1), (41, -1), (42, -1), (43, 65536), (44, 65536), (45, 16777216), (46, 1048576), (47, -1), (48, -1), (49, -1), (50, -1), (51, 33554432), (52, -1)]

Covered at level 9 : {33, 37, 31}

After reduction : 
 pending  : [9, 36, 5, 29, 30, 39, 43, 44, 45, 46, 51, 38, 23]
 solution : [7, 28, 15, 24]


Before reduction : 
 pending  : [9, 36, 5, 29, 30, 39, 43, 44, 45, 46, 51, 38, 23]
 solution : [7, 28, 15, 24]

Essensial at level 9 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 65536), (6, -1), (7, -1), (8, -1), (9, 33554432), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, 33554432), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, 131072), (30, 1024), (31, 0), (32, -1), (33, 0), (34, -1), (35, -1), (36, 512), (37, 0), (38, 33554432), (39, 512), (40, -1), (41, -1), (42, -1), (43, 65536), (44, 65536), (45, 16777216), (46, 1048576), (47, -1), (48, -1), (49, -1), (50, -1), (51, 33554432), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 65536), (6, -1), (7, -1), (8, -1), (9, 33554432), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, 33554432), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, 131072), (30, 1024), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, 512), (37, -1), (38, 33554432), (39, 512), (40, -1), (41, -1), (42, -1), (43, 65536), (44, 65536), (45, 16777216), (46, 1048576), (47, -1), (48, -1), (49, -1), (50, -1), (51, 33554432), (52, -1)]

Covered at level 9 : set()

After reduction : 
 pending  : [9, 36, 5, 29, 30, 39, 43, 44, 45, 46, 51, 38, 23]
 solution : [7, 28, 15, 24]


Solution : [7, 28, 15, 24] has cost 24.


Before backtrack at level 9
 pending : [9, 36, 5, 29, 30, 39, 43, 44, 45, 46, 51, 38, 23]
 solution : [7, 28, 15, 24]

After backtrack at level 9
 pending : [9, 36, 5, 29, 30, 39, 43, 44, 45, 46, 51, 38, 23, 31, 33, 37]
 solution : [7, 28, 15, 24]


Invert decision for 24 at level 8


New level: 9
 pending : [9, 36, 5, 29, 30, 39, 43, 44, 45, 46, 51, 38, 23, 31, 33, 37]
 solution : [7, 28, 15]


Before reduction : 
 pending  : [9, 36, 5, 29, 30, 39, 43, 44, 45, 46, 51, 38, 23, 31, 33, 37]
 solution : [7, 28, 15]

Essensial at level 9 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 65536), (6, -1), (7, -1), (8, -1), (9, 33554432), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, 33554432), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, 131072), (30, 1024), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, 512), (37, -1), (38, 33554432), (39, 512), (40, -1), (41, -1), (42, -1), (43, 65536), (44, 65536), (45, 16777216), (46, 1048576), (47, -1), (48, -1), (49, -1), (50, -1), (51, 33554432), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 262144), (6, -1), (7, -1), (8, -1), (9, 134217728), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, 134217728), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, 524288), (30, 4096), (31, 4096), (32, -1), (33, 2097152), (34, -1), (35, -1), (36, 2048), (37, 2048), (38, 67108864), (39, 2048), (40, -1), (41, -1), (42, -1), (43, 262144), (44, 262144), (45, 33554432), (46, 4194304), (47, -1), (48, -1), (49, -1), (50, -1), (51, 67108864), (52, -1)]

Covered at level 9 : set()

After reduction : 
 pending  : [9, 36, 5, 29, 30, 39, 43, 44, 45, 46, 51, 38, 23, 31, 33, 37]
 solution : [7, 28, 15]


Solution : [7, 28, 15] has cost 17.


Decide in level 9 among pending : [9, 36, 5, 29, 30, 39, 43, 44, 45, 46, 51, 38, 23, 31, 33, 37]

Coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 262144), (6, -1), (7, -1), (8, -1), (9, 134217728), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, 134217728), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, 524288), (30, 4096), (31, 4096), (32, -1), (33, 2097152), (34, -1), (35, -1), (36, 2048), (37, 2048), (38, 67108864), (39, 2048), (40, -1), (41, -1), (42, -1), (43, 262144), (44, 262144), (45, 33554432), (46, 4194304), (47, -1), (48, -1), (49, -1), (50, -1), (51, 67108864), (52, -1)]

Decide 9 with phase True at level 9

After decision at level 9
 pending : [36, 5, 29, 30, 39, 43, 44, 45, 46, 51, 38, 23, 31, 33, 37]
 solution : [7, 28, 15, 9]


New level: 10
 pending : [36, 5, 29, 30, 39, 43, 44, 45, 46, 51, 38, 23, 31, 33, 37]
 solution : [7, 28, 15, 9]


Before reduction : 
 pending  : [36, 5, 29, 30, 39, 43, 44, 45, 46, 51, 38, 23, 31, 33, 37]
 solution : [7, 28, 15, 9]

Essensial at level 10 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 262144), (6, -1), (7, -1), (8, -1), (9, 134217728), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, 134217728), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, 524288), (30, 4096), (31, 4096), (32, -1), (33, 2097152), (34, -1), (35, -1), (36, 2048), (37, 2048), (38, 67108864), (39, 2048), (40, -1), (41, -1), (42, -1), (43, 262144), (44, 262144), (45, 33554432), (46, 4194304), (47, -1), (48, -1), (49, -1), (50, -1), (51, 67108864), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 0), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, 0), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, 0), (30, 0), (31, 0), (32, -1), (33, 0), (34, -1), (35, -1), (36, 0), (37, 0), (38, 0), (39, 0), (40, -1), (41, -1), (42, -1), (43, 0), (44, 0), (45, 0), (46, 0), (47, -1), (48, -1), (49, -1), (50, -1), (51, 0), (52, -1)]

Covered at level 10 : {33, 36, 5, 38, 39, 37, 43, 44, 45, 46, 51, 23, 29, 30, 31}

After reduction : 
 pending  : []
 solution : [7, 28, 15, 9]


Before reduction : 
 pending  : []
 solution : [7, 28, 15, 9]

Essensial at level 10 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 0), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, 0), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, 0), (30, 0), (31, 0), (32, -1), (33, 0), (34, -1), (35, -1), (36, 0), (37, 0), (38, 0), (39, 0), (40, -1), (41, -1), (42, -1), (43, 0), (44, 0), (45, 0), (46, 0), (47, -1), (48, -1), (49, -1), (50, -1), (51, 0), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 10 : set()

After reduction : 
 pending  : []
 solution : [7, 28, 15, 9]


Solution : [7, 28, 15, 9] has cost 21.


Before backtrack at level 10
 pending : []
 solution : [7, 28, 15, 9]

After backtrack at level 10
 pending : [36, 5, 29, 30, 39, 43, 44, 45, 46, 51, 38, 23, 31, 33, 37]
 solution : [7, 28, 15, 9]


Invert decision for 9 at level 9


New level: 10
 pending : [36, 5, 29, 30, 39, 43, 44, 45, 46, 51, 38, 23, 31, 33, 37]
 solution : [7, 28, 15]


Before reduction : 
 pending  : [36, 5, 29, 30, 39, 43, 44, 45, 46, 51, 38, 23, 31, 33, 37]
 solution : [7, 28, 15]

Essensial at level 10 : {23}

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 0), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, 0), (30, 0), (31, 0), (32, -1), (33, 0), (34, -1), (35, -1), (36, 0), (37, 0), (38, 0), (39, 0), (40, -1), (41, -1), (42, -1), (43, 0), (44, 0), (45, 0), (46, 0), (47, -1), (48, -1), (49, -1), (50, -1), (51, 0), (52, -1)]

Covered at level 10 : {33, 36, 5, 38, 39, 37, 43, 44, 45, 46, 51, 29, 30, 31}

After reduction : 
 pending  : []
 solution : [7, 28, 15, 23]


Before reduction : 
 pending  : []
 solution : [7, 28, 15, 23]

Essensial at level 10 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 0), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, 0), (30, 0), (31, 0), (32, -1), (33, 0), (34, -1), (35, -1), (36, 0), (37, 0), (38, 0), (39, 0), (40, -1), (41, -1), (42, -1), (43, 0), (44, 0), (45, 0), (46, 0), (47, -1), (48, -1), (49, -1), (50, -1), (51, 0), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 10 : set()

After reduction : 
 pending  : []
 solution : [7, 28, 15, 23]


Solution : [7, 28, 15, 23] has cost 24.


Before backtrack at level 10
 pending : []
 solution : [7, 28, 15, 23]

After backtrack at level 10
 pending : [23, 36, 5, 29, 30, 39, 43, 44, 45, 46, 51, 38, 31, 33, 37]
 solution : [7, 28, 15]


Before backtrack at level 9
 pending : [23, 36, 5, 29, 30, 39, 43, 44, 45, 46, 51, 38, 31, 33, 37]
 solution : [7, 28, 15]

After backtrack at level 9
 pending : [23, 36, 5, 29, 30, 39, 43, 44, 45, 46, 51, 38, 31, 33, 37, 9]
 solution : [7, 28, 15]


Before backtrack at level 8
 pending : [23, 36, 5, 29, 30, 39, 43, 44, 45, 46, 51, 38, 31, 33, 37, 9]
 solution : [7, 28, 15]

After backtrack at level 8
 pending : [23, 36, 5, 29, 30, 39, 43, 44, 45, 46, 51, 38, 31, 33, 37, 9, 24]
 solution : [7, 28, 15]


Before backtrack at level 7
 pending : [23, 36, 5, 29, 30, 39, 43, 44, 45, 46, 51, 38, 31, 33, 37, 9, 24]
 solution : [7, 28, 15]

After backtrack at level 7
 pending : [23, 36, 5, 29, 30, 39, 43, 44, 45, 46, 51, 38, 31, 33, 37, 9, 24, 26, 41, 6, 21, 20, 17, 14, 19, 16, 18, 32]
 solution : [7, 28, 15]


Invert decision for 15 at level 6


New level: 7
 pending : [23, 36, 5, 29, 30, 39, 43, 44, 45, 46, 51, 38, 31, 33, 37, 9, 24, 26, 41, 6, 21, 20, 17, 14, 19, 16, 18, 32]
 solution : [7, 28]


Before reduction : 
 pending  : [23, 36, 5, 29, 30, 39, 43, 44, 45, 46, 51, 38, 31, 33, 37, 9, 24, 26, 41, 6, 21, 20, 17, 14, 19, 16, 18, 32]
 solution : [7, 28]

Essensial at level 7 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 1048576), (6, 1048576), (7, -1), (8, -1), (9, 134217728), (10, -1), (11, -1), (12, -1), (13, -1), (14, 8388608), (15, -1), (16, 16777216), (17, 262144), (18, 67108864), (19, 33554432), (20, 524288), (21, 1114112), (22, -1), (23, 134217728), (24, 536870912), (25, -1), (26, 4194304), (27, -1), (28, -1), (29, 1048576), (30, 16384), (31, 16384), (32, 1073741824), (33, 2097152), (34, -1), (35, -1), (36, 268435456), (37, 536870912), (38, 134217728), (39, 16384), (40, -1), (41, 4194304), (42, -1), (43, 524288), (44, 524288), (45, 67108864), (46, 16777216), (47, -1), (48, -1), (49, -1), (50, -1), (51, 67108864), (52, -1)]

Covered at level 7 : set()

After reduction : 
 pending  : [23, 36, 5, 29, 30, 39, 43, 44, 45, 46, 51, 38, 31, 33, 37, 9, 24, 26, 41, 6, 21, 20, 17, 14, 19, 16, 18, 32]
 solution : [7, 28]


Solution : [7, 28] has cost 10.


Decide in level 7 among pending : [23, 36, 5, 29, 30, 39, 43, 44, 45, 46, 51, 38, 31, 33, 37, 9, 24, 26, 41, 6, 21, 20, 17, 14, 19, 16, 18, 32]

Coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 1048576), (6, 1048576), (7, -1), (8, -1), (9, 134217728), (10, -1), (11, -1), (12, -1), (13, -1), (14, 8388608), (15, -1), (16, 16777216), (17, 262144), (18, 67108864), (19, 33554432), (20, 524288), (21, 1114112), (22, -1), (23, 134217728), (24, 536870912), (25, -1), (26, 4194304), (27, -1), (28, -1), (29, 1048576), (30, 16384), (31, 16384), (32, 1073741824), (33, 2097152), (34, -1), (35, -1), (36, 268435456), (37, 536870912), (38, 134217728), (39, 16384), (40, -1), (41, 4194304), (42, -1), (43, 524288), (44, 524288), (45, 67108864), (46, 16777216), (47, -1), (48, -1), (49, -1), (50, -1), (51, 67108864), (52, -1)]

Decide 32 with phase True at level 7

After decision at level 7
 pending : [23, 36, 5, 29, 30, 39, 43, 44, 45, 46, 51, 38, 31, 33, 37, 9, 24, 26, 41, 6, 21, 20, 17, 14, 19, 16, 18]
 solution : [7, 28, 32]


New level: 8
 pending : [23, 36, 5, 29, 30, 39, 43, 44, 45, 46, 51, 38, 31, 33, 37, 9, 24, 26, 41, 6, 21, 20, 17, 14, 19, 16, 18]
 solution : [7, 28, 32]


Before reduction : 
 pending  : [23, 36, 5, 29, 30, 39, 43, 44, 45, 46, 51, 38, 31, 33, 37, 9, 24, 26, 41, 6, 21, 20, 17, 14, 19, 16, 18]
 solution : [7, 28, 32]

Essensial at level 8 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 1048576), (6, 1048576), (7, -1), (8, -1), (9, 134217728), (10, -1), (11, -1), (12, -1), (13, -1), (14, 8388608), (15, -1), (16, 16777216), (17, 262144), (18, 67108864), (19, 33554432), (20, 524288), (21, 1114112), (22, -1), (23, 134217728), (24, 536870912), (25, -1), (26, 4194304), (27, -1), (28, -1), (29, 1048576), (30, 16384), (31, 16384), (32, 1073741824), (33, 2097152), (34, -1), (35, -1), (36, 268435456), (37, 536870912), (38, 134217728), (39, 16384), (40, -1), (41, 4194304), (42, -1), (43, 524288), (44, 524288), (45, 67108864), (46, 16777216), (47, -1), (48, -1), (49, -1), (50, -1), (51, 67108864), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 262144), (6, 1048576), (7, -1), (8, -1), (9, 134217728), (10, -1), (11, -1), (12, -1), (13, -1), (14, 8388608), (15, -1), (16, 16777216), (17, 262144), (18, 67108864), (19, 33554432), (20, 524288), (21, 1114112), (22, -1), (23, 134217728), (24, 16384), (25, -1), (26, 4194304), (27, -1), (28, -1), (29, 262144), (30, 4096), (31, 0), (32, -1), (33, 0), (34, -1), (35, -1), (36, 268435456), (37, 16384), (38, 33554432), (39, 4096), (40, -1), (41, 4194304), (42, -1), (43, 131072), (44, 131072), (45, 16777216), (46, 4194304), (47, -1), (48, -1), (49, -1), (50, -1), (51, 16777216), (52, -1)]

Covered at level 8 : {33, 31}

After reduction : 
 pending  : [23, 36, 5, 29, 30, 39, 43, 44, 45, 46, 51, 38, 37, 9, 24, 26, 41, 6, 21, 20, 17, 14, 19, 16, 18]
 solution : [7, 28, 32]


Before reduction : 
 pending  : [23, 36, 5, 29, 30, 39, 43, 44, 45, 46, 51, 38, 37, 9, 24, 26, 41, 6, 21, 20, 17, 14, 19, 16, 18]
 solution : [7, 28, 32]

Essensial at level 8 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 262144), (6, 1048576), (7, -1), (8, -1), (9, 134217728), (10, -1), (11, -1), (12, -1), (13, -1), (14, 8388608), (15, -1), (16, 16777216), (17, 262144), (18, 67108864), (19, 33554432), (20, 524288), (21, 1114112), (22, -1), (23, 134217728), (24, 16384), (25, -1), (26, 4194304), (27, -1), (28, -1), (29, 262144), (30, 4096), (31, 0), (32, -1), (33, 0), (34, -1), (35, -1), (36, 268435456), (37, 16384), (38, 33554432), (39, 4096), (40, -1), (41, 4194304), (42, -1), (43, 131072), (44, 131072), (45, 16777216), (46, 4194304), (47, -1), (48, -1), (49, -1), (50, -1), (51, 16777216), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 262144), (6, 1048576), (7, -1), (8, -1), (9, 134217728), (10, -1), (11, -1), (12, -1), (13, -1), (14, 8388608), (15, -1), (16, 16777216), (17, 262144), (18, 67108864), (19, 33554432), (20, 524288), (21, 1114112), (22, -1), (23, 134217728), (24, 16384), (25, -1), (26, 4194304), (27, -1), (28, -1), (29, 262144), (30, 4096), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, 268435456), (37, 16384), (38, 33554432), (39, 4096), (40, -1), (41, 4194304), (42, -1), (43, 131072), (44, 131072), (45, 16777216), (46, 4194304), (47, -1), (48, -1), (49, -1), (50, -1), (51, 16777216), (52, -1)]

Covered at level 8 : set()

After reduction : 
 pending  : [23, 36, 5, 29, 30, 39, 43, 44, 45, 46, 51, 38, 37, 9, 24, 26, 41, 6, 21, 20, 17, 14, 19, 16, 18]
 solution : [7, 28, 32]


Solution : [7, 28, 32] has cost 23.


Before backtrack at level 8
 pending : [23, 36, 5, 29, 30, 39, 43, 44, 45, 46, 51, 38, 37, 9, 24, 26, 41, 6, 21, 20, 17, 14, 19, 16, 18]
 solution : [7, 28, 32]

After backtrack at level 8
 pending : [23, 36, 5, 29, 30, 39, 43, 44, 45, 46, 51, 38, 37, 9, 24, 26, 41, 6, 21, 20, 17, 14, 19, 16, 18, 31, 33]
 solution : [7, 28, 32]


Invert decision for 32 at level 7


New level: 8
 pending : [23, 36, 5, 29, 30, 39, 43, 44, 45, 46, 51, 38, 37, 9, 24, 26, 41, 6, 21, 20, 17, 14, 19, 16, 18, 31, 33]
 solution : [7, 28]


Before reduction : 
 pending  : [23, 36, 5, 29, 30, 39, 43, 44, 45, 46, 51, 38, 37, 9, 24, 26, 41, 6, 21, 20, 17, 14, 19, 16, 18, 31, 33]
 solution : [7, 28]

Essensial at level 8 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 262144), (6, 1048576), (7, -1), (8, -1), (9, 134217728), (10, -1), (11, -1), (12, -1), (13, -1), (14, 8388608), (15, -1), (16, 16777216), (17, 262144), (18, 67108864), (19, 33554432), (20, 524288), (21, 1114112), (22, -1), (23, 134217728), (24, 16384), (25, -1), (26, 4194304), (27, -1), (28, -1), (29, 262144), (30, 4096), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, 268435456), (37, 16384), (38, 33554432), (39, 4096), (40, -1), (41, 4194304), (42, -1), (43, 131072), (44, 131072), (45, 16777216), (46, 4194304), (47, -1), (48, -1), (49, -1), (50, -1), (51, 16777216), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 1048576), (6, 1048576), (7, -1), (8, -1), (9, 134217728), (10, -1), (11, -1), (12, -1), (13, -1), (14, 8388608), (15, -1), (16, 16777216), (17, 262144), (18, 67108864), (19, 33554432), (20, 524288), (21, 1114112), (22, -1), (23, 134217728), (24, 536870912), (25, -1), (26, 4194304), (27, -1), (28, -1), (29, 1048576), (30, 16384), (31, 16384), (32, -1), (33, 2097152), (34, -1), (35, -1), (36, 268435456), (37, 536870912), (38, 134217728), (39, 16384), (40, -1), (41, 4194304), (42, -1), (43, 524288), (44, 524288), (45, 67108864), (46, 16777216), (47, -1), (48, -1), (49, -1), (50, -1), (51, 67108864), (52, -1)]

Covered at level 8 : set()

After reduction : 
 pending  : [23, 36, 5, 29, 30, 39, 43, 44, 45, 46, 51, 38, 37, 9, 24, 26, 41, 6, 21, 20, 17, 14, 19, 16, 18, 31, 33]
 solution : [7, 28]


Solution : [7, 28] has cost 10.


Decide in level 8 among pending : [23, 36, 5, 29, 30, 39, 43, 44, 45, 46, 51, 38, 37, 9, 24, 26, 41, 6, 21, 20, 17, 14, 19, 16, 18, 31, 33]

Coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 1048576), (6, 1048576), (7, -1), (8, -1), (9, 134217728), (10, -1), (11, -1), (12, -1), (13, -1), (14, 8388608), (15, -1), (16, 16777216), (17, 262144), (18, 67108864), (19, 33554432), (20, 524288), (21, 1114112), (22, -1), (23, 134217728), (24, 536870912), (25, -1), (26, 4194304), (27, -1), (28, -1), (29, 1048576), (30, 16384), (31, 16384), (32, -1), (33, 2097152), (34, -1), (35, -1), (36, 268435456), (37, 536870912), (38, 134217728), (39, 16384), (40, -1), (41, 4194304), (42, -1), (43, 524288), (44, 524288), (45, 67108864), (46, 16777216), (47, -1), (48, -1), (49, -1), (50, -1), (51, 67108864), (52, -1)]

Decide 37 with phase True at level 8

After decision at level 8
 pending : [23, 36, 5, 29, 30, 39, 43, 44, 45, 46, 51, 38, 9, 24, 26, 41, 6, 21, 20, 17, 14, 19, 16, 18, 31, 33]
 solution : [7, 28, 37]


New level: 9
 pending : [23, 36, 5, 29, 30, 39, 43, 44, 45, 46, 51, 38, 9, 24, 26, 41, 6, 21, 20, 17, 14, 19, 16, 18, 31, 33]
 solution : [7, 28, 37]


Before reduction : 
 pending  : [23, 36, 5, 29, 30, 39, 43, 44, 45, 46, 51, 38, 9, 24, 26, 41, 6, 21, 20, 17, 14, 19, 16, 18, 31, 33]
 solution : [7, 28, 37]

Essensial at level 9 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 1048576), (6, 1048576), (7, -1), (8, -1), (9, 134217728), (10, -1), (11, -1), (12, -1), (13, -1), (14, 8388608), (15, -1), (16, 16777216), (17, 262144), (18, 67108864), (19, 33554432), (20, 524288), (21, 1114112), (22, -1), (23, 134217728), (24, 536870912), (25, -1), (26, 4194304), (27, -1), (28, -1), (29, 1048576), (30, 16384), (31, 16384), (32, -1), (33, 2097152), (34, -1), (35, -1), (36, 268435456), (37, 536870912), (38, 134217728), (39, 16384), (40, -1), (41, 4194304), (42, -1), (43, 524288), (44, 524288), (45, 67108864), (46, 16777216), (47, -1), (48, -1), (49, -1), (50, -1), (51, 67108864), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 1048576), (6, 1048576), (7, -1), (8, -1), (9, 134217728), (10, -1), (11, -1), (12, -1), (13, -1), (14, 8388608), (15, -1), (16, 16777216), (17, 262144), (18, 67108864), (19, 33554432), (20, 524288), (21, 1114112), (22, -1), (23, 134217728), (24, 268435456), (25, -1), (26, 4194304), (27, -1), (28, -1), (29, 1048576), (30, 16384), (31, 8192), (32, -1), (33, 1048576), (34, -1), (35, -1), (36, 134217728), (37, -1), (38, 134217728), (39, 16384), (40, -1), (41, 4194304), (42, -1), (43, 524288), (44, 524288), (45, 67108864), (46, 16777216), (47, -1), (48, -1), (49, -1), (50, -1), (51, 67108864), (52, -1)]

Covered at level 9 : set()

After reduction : 
 pending  : [23, 36, 5, 29, 30, 39, 43, 44, 45, 46, 51, 38, 9, 24, 26, 41, 6, 21, 20, 17, 14, 19, 16, 18, 31, 33]
 solution : [7, 28, 37]


Solution : [7, 28, 37] has cost 24.


Before backtrack at level 9
 pending : [23, 36, 5, 29, 30, 39, 43, 44, 45, 46, 51, 38, 9, 24, 26, 41, 6, 21, 20, 17, 14, 19, 16, 18, 31, 33]
 solution : [7, 28, 37]

After backtrack at level 9
 pending : [23, 36, 5, 29, 30, 39, 43, 44, 45, 46, 51, 38, 9, 24, 26, 41, 6, 21, 20, 17, 14, 19, 16, 18, 31, 33]
 solution : [7, 28, 37]


Invert decision for 37 at level 8


New level: 9
 pending : [23, 36, 5, 29, 30, 39, 43, 44, 45, 46, 51, 38, 9, 24, 26, 41, 6, 21, 20, 17, 14, 19, 16, 18, 31, 33]
 solution : [7, 28]


Before reduction : 
 pending  : [23, 36, 5, 29, 30, 39, 43, 44, 45, 46, 51, 38, 9, 24, 26, 41, 6, 21, 20, 17, 14, 19, 16, 18, 31, 33]
 solution : [7, 28]

Essensial at level 9 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 1048576), (6, 1048576), (7, -1), (8, -1), (9, 134217728), (10, -1), (11, -1), (12, -1), (13, -1), (14, 8388608), (15, -1), (16, 16777216), (17, 262144), (18, 67108864), (19, 33554432), (20, 524288), (21, 1114112), (22, -1), (23, 134217728), (24, 268435456), (25, -1), (26, 4194304), (27, -1), (28, -1), (29, 1048576), (30, 16384), (31, 8192), (32, -1), (33, 1048576), (34, -1), (35, -1), (36, 134217728), (37, -1), (38, 134217728), (39, 16384), (40, -1), (41, 4194304), (42, -1), (43, 524288), (44, 524288), (45, 67108864), (46, 16777216), (47, -1), (48, -1), (49, -1), (50, -1), (51, 67108864), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 1048576), (6, 1048576), (7, -1), (8, -1), (9, 134217728), (10, -1), (11, -1), (12, -1), (13, -1), (14, 8388608), (15, -1), (16, 16777216), (17, 262144), (18, 67108864), (19, 33554432), (20, 524288), (21, 1114112), (22, -1), (23, 134217728), (24, 536870912), (25, -1), (26, 4194304), (27, -1), (28, -1), (29, 1048576), (30, 16384), (31, 16384), (32, -1), (33, 2097152), (34, -1), (35, -1), (36, 268435456), (37, -1), (38, 134217728), (39, 16384), (40, -1), (41, 4194304), (42, -1), (43, 524288), (44, 524288), (45, 67108864), (46, 16777216), (47, -1), (48, -1), (49, -1), (50, -1), (51, 67108864), (52, -1)]

Covered at level 9 : set()

After reduction : 
 pending  : [23, 36, 5, 29, 30, 39, 43, 44, 45, 46, 51, 38, 9, 24, 26, 41, 6, 21, 20, 17, 14, 19, 16, 18, 31, 33]
 solution : [7, 28]


Solution : [7, 28] has cost 10.


Decide in level 9 among pending : [23, 36, 5, 29, 30, 39, 43, 44, 45, 46, 51, 38, 9, 24, 26, 41, 6, 21, 20, 17, 14, 19, 16, 18, 31, 33]

Coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 1048576), (6, 1048576), (7, -1), (8, -1), (9, 134217728), (10, -1), (11, -1), (12, -1), (13, -1), (14, 8388608), (15, -1), (16, 16777216), (17, 262144), (18, 67108864), (19, 33554432), (20, 524288), (21, 1114112), (22, -1), (23, 134217728), (24, 536870912), (25, -1), (26, 4194304), (27, -1), (28, -1), (29, 1048576), (30, 16384), (31, 16384), (32, -1), (33, 2097152), (34, -1), (35, -1), (36, 268435456), (37, -1), (38, 134217728), (39, 16384), (40, -1), (41, 4194304), (42, -1), (43, 524288), (44, 524288), (45, 67108864), (46, 16777216), (47, -1), (48, -1), (49, -1), (50, -1), (51, 67108864), (52, -1)]

Decide 24 with phase True at level 9

After decision at level 9
 pending : [23, 36, 5, 29, 30, 39, 43, 44, 45, 46, 51, 38, 9, 26, 41, 6, 21, 20, 17, 14, 19, 16, 18, 31, 33]
 solution : [7, 28, 24]


New level: 10
 pending : [23, 36, 5, 29, 30, 39, 43, 44, 45, 46, 51, 38, 9, 26, 41, 6, 21, 20, 17, 14, 19, 16, 18, 31, 33]
 solution : [7, 28, 24]


Before reduction : 
 pending  : [23, 36, 5, 29, 30, 39, 43, 44, 45, 46, 51, 38, 9, 26, 41, 6, 21, 20, 17, 14, 19, 16, 18, 31, 33]
 solution : [7, 28, 24]

Essensial at level 10 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 1048576), (6, 1048576), (7, -1), (8, -1), (9, 134217728), (10, -1), (11, -1), (12, -1), (13, -1), (14, 8388608), (15, -1), (16, 16777216), (17, 262144), (18, 67108864), (19, 33554432), (20, 524288), (21, 1114112), (22, -1), (23, 134217728), (24, 536870912), (25, -1), (26, 4194304), (27, -1), (28, -1), (29, 1048576), (30, 16384), (31, 16384), (32, -1), (33, 2097152), (34, -1), (35, -1), (36, 268435456), (37, -1), (38, 134217728), (39, 16384), (40, -1), (41, 4194304), (42, -1), (43, 524288), (44, 524288), (45, 67108864), (46, 16777216), (47, -1), (48, -1), (49, -1), (50, -1), (51, 67108864), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 262144), (6, 1048576), (7, -1), (8, -1), (9, 33554432), (10, -1), (11, -1), (12, -1), (13, -1), (14, 8388608), (15, -1), (16, 16777216), (17, 262144), (18, 67108864), (19, 33554432), (20, 524288), (21, 1114112), (22, -1), (23, 33554432), (24, -1), (25, -1), (26, 4194304), (27, -1), (28, -1), (29, 262144), (30, 4096), (31, 0), (32, -1), (33, 0), (34, -1), (35, -1), (36, 134217728), (37, -1), (38, 67108864), (39, 4096), (40, -1), (41, 4194304), (42, -1), (43, 131072), (44, 131072), (45, 33554432), (46, 4194304), (47, -1), (48, -1), (49, -1), (50, -1), (51, 33554432), (52, -1)]

Covered at level 10 : {33, 31}

After reduction : 
 pending  : [23, 36, 5, 29, 30, 39, 43, 44, 45, 46, 51, 38, 9, 26, 41, 6, 21, 20, 17, 14, 19, 16, 18]
 solution : [7, 28, 24]


Before reduction : 
 pending  : [23, 36, 5, 29, 30, 39, 43, 44, 45, 46, 51, 38, 9, 26, 41, 6, 21, 20, 17, 14, 19, 16, 18]
 solution : [7, 28, 24]

Essensial at level 10 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 262144), (6, 1048576), (7, -1), (8, -1), (9, 33554432), (10, -1), (11, -1), (12, -1), (13, -1), (14, 8388608), (15, -1), (16, 16777216), (17, 262144), (18, 67108864), (19, 33554432), (20, 524288), (21, 1114112), (22, -1), (23, 33554432), (24, -1), (25, -1), (26, 4194304), (27, -1), (28, -1), (29, 262144), (30, 4096), (31, 0), (32, -1), (33, 0), (34, -1), (35, -1), (36, 134217728), (37, -1), (38, 67108864), (39, 4096), (40, -1), (41, 4194304), (42, -1), (43, 131072), (44, 131072), (45, 33554432), (46, 4194304), (47, -1), (48, -1), (49, -1), (50, -1), (51, 33554432), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 262144), (6, 1048576), (7, -1), (8, -1), (9, 33554432), (10, -1), (11, -1), (12, -1), (13, -1), (14, 8388608), (15, -1), (16, 16777216), (17, 262144), (18, 67108864), (19, 33554432), (20, 524288), (21, 1114112), (22, -1), (23, 33554432), (24, -1), (25, -1), (26, 4194304), (27, -1), (28, -1), (29, 262144), (30, 4096), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, 134217728), (37, -1), (38, 67108864), (39, 4096), (40, -1), (41, 4194304), (42, -1), (43, 131072), (44, 131072), (45, 33554432), (46, 4194304), (47, -1), (48, -1), (49, -1), (50, -1), (51, 33554432), (52, -1)]

Covered at level 10 : set()

After reduction : 
 pending  : [23, 36, 5, 29, 30, 39, 43, 44, 45, 46, 51, 38, 9, 26, 41, 6, 21, 20, 17, 14, 19, 16, 18]
 solution : [7, 28, 24]


Solution : [7, 28, 24] has cost 17.


Decide in level 10 among pending : [23, 36, 5, 29, 30, 39, 43, 44, 45, 46, 51, 38, 9, 26, 41, 6, 21, 20, 17, 14, 19, 16, 18]

Coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 262144), (6, 1048576), (7, -1), (8, -1), (9, 33554432), (10, -1), (11, -1), (12, -1), (13, -1), (14, 8388608), (15, -1), (16, 16777216), (17, 262144), (18, 67108864), (19, 33554432), (20, 524288), (21, 1114112), (22, -1), (23, 33554432), (24, -1), (25, -1), (26, 4194304), (27, -1), (28, -1), (29, 262144), (30, 4096), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, 134217728), (37, -1), (38, 67108864), (39, 4096), (40, -1), (41, 4194304), (42, -1), (43, 131072), (44, 131072), (45, 33554432), (46, 4194304), (47, -1), (48, -1), (49, -1), (50, -1), (51, 33554432), (52, -1)]

Decide 36 with phase True at level 10

After decision at level 10
 pending : [23, 5, 29, 30, 39, 43, 44, 45, 46, 51, 38, 9, 26, 41, 6, 21, 20, 17, 14, 19, 16, 18]
 solution : [7, 28, 24, 36]


New level: 11
 pending : [23, 5, 29, 30, 39, 43, 44, 45, 46, 51, 38, 9, 26, 41, 6, 21, 20, 17, 14, 19, 16, 18]
 solution : [7, 28, 24, 36]


Before reduction : 
 pending  : [23, 5, 29, 30, 39, 43, 44, 45, 46, 51, 38, 9, 26, 41, 6, 21, 20, 17, 14, 19, 16, 18]
 solution : [7, 28, 24, 36]

Essensial at level 11 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 262144), (6, 1048576), (7, -1), (8, -1), (9, 33554432), (10, -1), (11, -1), (12, -1), (13, -1), (14, 8388608), (15, -1), (16, 16777216), (17, 262144), (18, 67108864), (19, 33554432), (20, 524288), (21, 1114112), (22, -1), (23, 33554432), (24, -1), (25, -1), (26, 4194304), (27, -1), (28, -1), (29, 262144), (30, 4096), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, 134217728), (37, -1), (38, 67108864), (39, 4096), (40, -1), (41, 4194304), (42, -1), (43, 131072), (44, 131072), (45, 33554432), (46, 4194304), (47, -1), (48, -1), (49, -1), (50, -1), (51, 33554432), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 65536), (6, 524288), (7, -1), (8, -1), (9, 8388608), (10, -1), (11, -1), (12, -1), (13, -1), (14, 8388608), (15, -1), (16, 16777216), (17, 262144), (18, 33554432), (19, 16777216), (20, 262144), (21, 540672), (22, -1), (23, 8388608), (24, -1), (25, -1), (26, 1048576), (27, -1), (28, -1), (29, 65536), (30, 1024), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, 67108864), (39, 1024), (40, -1), (41, 1048576), (42, -1), (43, 32768), (44, 32768), (45, 16777216), (46, 1048576), (47, -1), (48, -1), (49, -1), (50, -1), (51, 33554432), (52, -1)]

Covered at level 11 : set()

After reduction : 
 pending  : [23, 5, 29, 30, 39, 43, 44, 45, 46, 51, 38, 9, 26, 41, 6, 21, 20, 17, 14, 19, 16, 18]
 solution : [7, 28, 24, 36]


Solution : [7, 28, 24, 36] has cost 35.


Before backtrack at level 11
 pending : [23, 5, 29, 30, 39, 43, 44, 45, 46, 51, 38, 9, 26, 41, 6, 21, 20, 17, 14, 19, 16, 18]
 solution : [7, 28, 24, 36]

After backtrack at level 11
 pending : [23, 5, 29, 30, 39, 43, 44, 45, 46, 51, 38, 9, 26, 41, 6, 21, 20, 17, 14, 19, 16, 18]
 solution : [7, 28, 24, 36]


Invert decision for 36 at level 10


New level: 11
 pending : [23, 5, 29, 30, 39, 43, 44, 45, 46, 51, 38, 9, 26, 41, 6, 21, 20, 17, 14, 19, 16, 18]
 solution : [7, 28, 24]


Before reduction : 
 pending  : [23, 5, 29, 30, 39, 43, 44, 45, 46, 51, 38, 9, 26, 41, 6, 21, 20, 17, 14, 19, 16, 18]
 solution : [7, 28, 24]

Essensial at level 11 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 65536), (6, 524288), (7, -1), (8, -1), (9, 8388608), (10, -1), (11, -1), (12, -1), (13, -1), (14, 8388608), (15, -1), (16, 16777216), (17, 262144), (18, 33554432), (19, 16777216), (20, 262144), (21, 540672), (22, -1), (23, 8388608), (24, -1), (25, -1), (26, 1048576), (27, -1), (28, -1), (29, 65536), (30, 1024), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, 67108864), (39, 1024), (40, -1), (41, 1048576), (42, -1), (43, 32768), (44, 32768), (45, 16777216), (46, 1048576), (47, -1), (48, -1), (49, -1), (50, -1), (51, 33554432), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 262144), (6, 1048576), (7, -1), (8, -1), (9, 33554432), (10, -1), (11, -1), (12, -1), (13, -1), (14, 8388608), (15, -1), (16, 16777216), (17, 262144), (18, 67108864), (19, 33554432), (20, 524288), (21, 1114112), (22, -1), (23, 33554432), (24, -1), (25, -1), (26, 4194304), (27, -1), (28, -1), (29, 262144), (30, 4096), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, 67108864), (39, 4096), (40, -1), (41, 4194304), (42, -1), (43, 131072), (44, 131072), (45, 33554432), (46, 4194304), (47, -1), (48, -1), (49, -1), (50, -1), (51, 33554432), (52, -1)]

Covered at level 11 : set()

After reduction : 
 pending  : [23, 5, 29, 30, 39, 43, 44, 45, 46, 51, 38, 9, 26, 41, 6, 21, 20, 17, 14, 19, 16, 18]
 solution : [7, 28, 24]


Solution : [7, 28, 24] has cost 17.


Decide in level 11 among pending : [23, 5, 29, 30, 39, 43, 44, 45, 46, 51, 38, 9, 26, 41, 6, 21, 20, 17, 14, 19, 16, 18]

Coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 262144), (6, 1048576), (7, -1), (8, -1), (9, 33554432), (10, -1), (11, -1), (12, -1), (13, -1), (14, 8388608), (15, -1), (16, 16777216), (17, 262144), (18, 67108864), (19, 33554432), (20, 524288), (21, 1114112), (22, -1), (23, 33554432), (24, -1), (25, -1), (26, 4194304), (27, -1), (28, -1), (29, 262144), (30, 4096), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, 67108864), (39, 4096), (40, -1), (41, 4194304), (42, -1), (43, 131072), (44, 131072), (45, 33554432), (46, 4194304), (47, -1), (48, -1), (49, -1), (50, -1), (51, 33554432), (52, -1)]

Decide 38 with phase True at level 11

After decision at level 11
 pending : [23, 5, 29, 30, 39, 43, 44, 45, 46, 51, 9, 26, 41, 6, 21, 20, 17, 14, 19, 16, 18]
 solution : [7, 28, 24, 38]


New level: 12
 pending : [23, 5, 29, 30, 39, 43, 44, 45, 46, 51, 9, 26, 41, 6, 21, 20, 17, 14, 19, 16, 18]
 solution : [7, 28, 24, 38]


Before reduction : 
 pending  : [23, 5, 29, 30, 39, 43, 44, 45, 46, 51, 9, 26, 41, 6, 21, 20, 17, 14, 19, 16, 18]
 solution : [7, 28, 24, 38]

Essensial at level 12 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 262144), (6, 1048576), (7, -1), (8, -1), (9, 33554432), (10, -1), (11, -1), (12, -1), (13, -1), (14, 8388608), (15, -1), (16, 16777216), (17, 262144), (18, 67108864), (19, 33554432), (20, 524288), (21, 1114112), (22, -1), (23, 33554432), (24, -1), (25, -1), (26, 4194304), (27, -1), (28, -1), (29, 262144), (30, 4096), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, 67108864), (39, 4096), (40, -1), (41, 4194304), (42, -1), (43, 131072), (44, 131072), (45, 33554432), (46, 4194304), (47, -1), (48, -1), (49, -1), (50, -1), (51, 33554432), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 0), (6, 524288), (7, -1), (8, -1), (9, 4096), (10, -1), (11, -1), (12, -1), (13, -1), (14, 8388608), (15, -1), (16, 16777216), (17, 262144), (18, 67108864), (19, 33554432), (20, 524288), (21, 540672), (22, -1), (23, 131072), (24, -1), (25, -1), (26, 4194304), (27, -1), (28, -1), (29, 0), (30, 0), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, 0), (40, -1), (41, 4194304), (42, -1), (43, 0), (44, 0), (45, 0), (46, 0), (47, -1), (48, -1), (49, -1), (50, -1), (51, 0), (52, -1)]

Covered at level 12 : {5, 39, 43, 44, 45, 46, 51, 29, 30}

After reduction : 
 pending  : [23, 9, 26, 41, 6, 21, 20, 17, 14, 19, 16, 18]
 solution : [7, 28, 24, 38]


Before reduction : 
 pending  : [23, 9, 26, 41, 6, 21, 20, 17, 14, 19, 16, 18]
 solution : [7, 28, 24, 38]

Essensial at level 12 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 0), (6, 524288), (7, -1), (8, -1), (9, 4096), (10, -1), (11, -1), (12, -1), (13, -1), (14, 8388608), (15, -1), (16, 16777216), (17, 262144), (18, 67108864), (19, 33554432), (20, 524288), (21, 540672), (22, -1), (23, 131072), (24, -1), (25, -1), (26, 4194304), (27, -1), (28, -1), (29, 0), (30, 0), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, 0), (40, -1), (41, 4194304), (42, -1), (43, 0), (44, 0), (45, 0), (46, 0), (47, -1), (48, -1), (49, -1), (50, -1), (51, 0), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, 524288), (7, -1), (8, -1), (9, 4096), (10, -1), (11, -1), (12, -1), (13, -1), (14, 8388608), (15, -1), (16, 16777216), (17, 262144), (18, 67108864), (19, 33554432), (20, 524288), (21, 540672), (22, -1), (23, 4096), (24, -1), (25, -1), (26, 4194304), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, 4194304), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 12 : set()

After reduction : 
 pending  : [23, 9, 26, 41, 6, 21, 20, 17, 14, 19, 16, 18]
 solution : [7, 28, 24, 38]


Solution : [7, 28, 24, 38] has cost 35.


Before backtrack at level 12
 pending : [23, 9, 26, 41, 6, 21, 20, 17, 14, 19, 16, 18]
 solution : [7, 28, 24, 38]

After backtrack at level 12
 pending : [23, 9, 26, 41, 6, 21, 20, 17, 14, 19, 16, 18, 5, 29, 30, 39, 43, 44, 45, 46, 51]
 solution : [7, 28, 24, 38]


Invert decision for 38 at level 11


New level: 12
 pending : [23, 9, 26, 41, 6, 21, 20, 17, 14, 19, 16, 18, 5, 29, 30, 39, 43, 44, 45, 46, 51]
 solution : [7, 28, 24]


Before reduction : 
 pending  : [23, 9, 26, 41, 6, 21, 20, 17, 14, 19, 16, 18, 5, 29, 30, 39, 43, 44, 45, 46, 51]
 solution : [7, 28, 24]

Essensial at level 12 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, 524288), (7, -1), (8, -1), (9, 4096), (10, -1), (11, -1), (12, -1), (13, -1), (14, 8388608), (15, -1), (16, 16777216), (17, 262144), (18, 67108864), (19, 33554432), (20, 524288), (21, 540672), (22, -1), (23, 4096), (24, -1), (25, -1), (26, 4194304), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, 4194304), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 262144), (6, 1048576), (7, -1), (8, -1), (9, 33554432), (10, -1), (11, -1), (12, -1), (13, -1), (14, 8388608), (15, -1), (16, 16777216), (17, 262144), (18, 67108864), (19, 33554432), (20, 524288), (21, 1114112), (22, -1), (23, 33554432), (24, -1), (25, -1), (26, 4194304), (27, -1), (28, -1), (29, 262144), (30, 4096), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, 4096), (40, -1), (41, 4194304), (42, -1), (43, 131072), (44, 131072), (45, 33554432), (46, 4194304), (47, -1), (48, -1), (49, -1), (50, -1), (51, 33554432), (52, -1)]

Covered at level 12 : set()

After reduction : 
 pending  : [23, 9, 26, 41, 6, 21, 20, 17, 14, 19, 16, 18, 5, 29, 30, 39, 43, 44, 45, 46, 51]
 solution : [7, 28, 24]


Solution : [7, 28, 24] has cost 17.


Decide in level 12 among pending : [23, 9, 26, 41, 6, 21, 20, 17, 14, 19, 16, 18, 5, 29, 30, 39, 43, 44, 45, 46, 51]

Coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 262144), (6, 1048576), (7, -1), (8, -1), (9, 33554432), (10, -1), (11, -1), (12, -1), (13, -1), (14, 8388608), (15, -1), (16, 16777216), (17, 262144), (18, 67108864), (19, 33554432), (20, 524288), (21, 1114112), (22, -1), (23, 33554432), (24, -1), (25, -1), (26, 4194304), (27, -1), (28, -1), (29, 262144), (30, 4096), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, 4096), (40, -1), (41, 4194304), (42, -1), (43, 131072), (44, 131072), (45, 33554432), (46, 4194304), (47, -1), (48, -1), (49, -1), (50, -1), (51, 33554432), (52, -1)]

Decide 18 with phase True at level 12

After decision at level 12
 pending : [23, 9, 26, 41, 6, 21, 20, 17, 14, 19, 16, 5, 29, 30, 39, 43, 44, 45, 46, 51]
 solution : [7, 28, 24, 18]


New level: 13
 pending : [23, 9, 26, 41, 6, 21, 20, 17, 14, 19, 16, 5, 29, 30, 39, 43, 44, 45, 46, 51]
 solution : [7, 28, 24, 18]


Before reduction : 
 pending  : [23, 9, 26, 41, 6, 21, 20, 17, 14, 19, 16, 5, 29, 30, 39, 43, 44, 45, 46, 51]
 solution : [7, 28, 24, 18]

Essensial at level 13 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 262144), (6, 1048576), (7, -1), (8, -1), (9, 33554432), (10, -1), (11, -1), (12, -1), (13, -1), (14, 8388608), (15, -1), (16, 16777216), (17, 262144), (18, 67108864), (19, 33554432), (20, 524288), (21, 1114112), (22, -1), (23, 33554432), (24, -1), (25, -1), (26, 4194304), (27, -1), (28, -1), (29, 262144), (30, 4096), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, 4096), (40, -1), (41, 4194304), (42, -1), (43, 131072), (44, 131072), (45, 33554432), (46, 4194304), (47, -1), (48, -1), (49, -1), (50, -1), (51, 33554432), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 65536), (6, 0), (7, -1), (8, -1), (9, 33554432), (10, -1), (11, -1), (12, -1), (13, -1), (14, 65536), (15, -1), (16, 262144), (17, 65536), (18, -1), (19, 0), (20, 0), (21, 0), (22, -1), (23, 33554432), (24, -1), (25, -1), (26, 4096), (27, -1), (28, -1), (29, 131072), (30, 1024), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, 512), (40, -1), (41, 4096), (42, -1), (43, 65536), (44, 65536), (45, 33554432), (46, 4194304), (47, -1), (48, -1), (49, -1), (50, -1), (51, 33554432), (52, -1)]

Covered at level 13 : {19, 20, 21, 6}

After reduction : 
 pending  : [23, 9, 26, 41, 17, 14, 16, 5, 29, 30, 39, 43, 44, 45, 46, 51]
 solution : [7, 28, 24, 18]


Before reduction : 
 pending  : [23, 9, 26, 41, 17, 14, 16, 5, 29, 30, 39, 43, 44, 45, 46, 51]
 solution : [7, 28, 24, 18]

Essensial at level 13 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 65536), (6, 0), (7, -1), (8, -1), (9, 33554432), (10, -1), (11, -1), (12, -1), (13, -1), (14, 65536), (15, -1), (16, 262144), (17, 65536), (18, -1), (19, 0), (20, 0), (21, 0), (22, -1), (23, 33554432), (24, -1), (25, -1), (26, 4096), (27, -1), (28, -1), (29, 131072), (30, 1024), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, 512), (40, -1), (41, 4096), (42, -1), (43, 65536), (44, 65536), (45, 33554432), (46, 4194304), (47, -1), (48, -1), (49, -1), (50, -1), (51, 33554432), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 65536), (6, -1), (7, -1), (8, -1), (9, 33554432), (10, -1), (11, -1), (12, -1), (13, -1), (14, 65536), (15, -1), (16, 262144), (17, 65536), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, 33554432), (24, -1), (25, -1), (26, 4096), (27, -1), (28, -1), (29, 131072), (30, 1024), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, 512), (40, -1), (41, 4096), (42, -1), (43, 65536), (44, 65536), (45, 33554432), (46, 4194304), (47, -1), (48, -1), (49, -1), (50, -1), (51, 33554432), (52, -1)]

Covered at level 13 : set()

After reduction : 
 pending  : [23, 9, 26, 41, 17, 14, 16, 5, 29, 30, 39, 43, 44, 45, 46, 51]
 solution : [7, 28, 24, 18]


Solution : [7, 28, 24, 18] has cost 26.


Before backtrack at level 13
 pending : [23, 9, 26, 41, 17, 14, 16, 5, 29, 30, 39, 43, 44, 45, 46, 51]
 solution : [7, 28, 24, 18]

After backtrack at level 13
 pending : [23, 9, 26, 41, 17, 14, 16, 5, 29, 30, 39, 43, 44, 45, 46, 51, 6, 21, 20, 19]
 solution : [7, 28, 24, 18]


Invert decision for 18 at level 12


New level: 13
 pending : [23, 9, 26, 41, 17, 14, 16, 5, 29, 30, 39, 43, 44, 45, 46, 51, 6, 21, 20, 19]
 solution : [7, 28, 24]


Before reduction : 
 pending  : [23, 9, 26, 41, 17, 14, 16, 5, 29, 30, 39, 43, 44, 45, 46, 51, 6, 21, 20, 19]
 solution : [7, 28, 24]

Essensial at level 13 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 65536), (6, -1), (7, -1), (8, -1), (9, 33554432), (10, -1), (11, -1), (12, -1), (13, -1), (14, 65536), (15, -1), (16, 262144), (17, 65536), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, 33554432), (24, -1), (25, -1), (26, 4096), (27, -1), (28, -1), (29, 131072), (30, 1024), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, 512), (40, -1), (41, 4096), (42, -1), (43, 65536), (44, 65536), (45, 33554432), (46, 4194304), (47, -1), (48, -1), (49, -1), (50, -1), (51, 33554432), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 262144), (6, 1048576), (7, -1), (8, -1), (9, 33554432), (10, -1), (11, -1), (12, -1), (13, -1), (14, 8388608), (15, -1), (16, 16777216), (17, 262144), (18, -1), (19, 33554432), (20, 524288), (21, 1114112), (22, -1), (23, 33554432), (24, -1), (25, -1), (26, 4194304), (27, -1), (28, -1), (29, 262144), (30, 4096), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, 4096), (40, -1), (41, 4194304), (42, -1), (43, 131072), (44, 131072), (45, 33554432), (46, 4194304), (47, -1), (48, -1), (49, -1), (50, -1), (51, 33554432), (52, -1)]

Covered at level 13 : set()

After reduction : 
 pending  : [23, 9, 26, 41, 17, 14, 16, 5, 29, 30, 39, 43, 44, 45, 46, 51, 6, 21, 20, 19]
 solution : [7, 28, 24]


Solution : [7, 28, 24] has cost 17.


Decide in level 13 among pending : [23, 9, 26, 41, 17, 14, 16, 5, 29, 30, 39, 43, 44, 45, 46, 51, 6, 21, 20, 19]

Coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 262144), (6, 1048576), (7, -1), (8, -1), (9, 33554432), (10, -1), (11, -1), (12, -1), (13, -1), (14, 8388608), (15, -1), (16, 16777216), (17, 262144), (18, -1), (19, 33554432), (20, 524288), (21, 1114112), (22, -1), (23, 33554432), (24, -1), (25, -1), (26, 4194304), (27, -1), (28, -1), (29, 262144), (30, 4096), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, 4096), (40, -1), (41, 4194304), (42, -1), (43, 131072), (44, 131072), (45, 33554432), (46, 4194304), (47, -1), (48, -1), (49, -1), (50, -1), (51, 33554432), (52, -1)]

Decide 23 with phase True at level 13

After decision at level 13
 pending : [9, 26, 41, 17, 14, 16, 5, 29, 30, 39, 43, 44, 45, 46, 51, 6, 21, 20, 19]
 solution : [7, 28, 24, 23]


New level: 14
 pending : [9, 26, 41, 17, 14, 16, 5, 29, 30, 39, 43, 44, 45, 46, 51, 6, 21, 20, 19]
 solution : [7, 28, 24, 23]


Before reduction : 
 pending  : [9, 26, 41, 17, 14, 16, 5, 29, 30, 39, 43, 44, 45, 46, 51, 6, 21, 20, 19]
 solution : [7, 28, 24, 23]

Essensial at level 14 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 262144), (6, 1048576), (7, -1), (8, -1), (9, 33554432), (10, -1), (11, -1), (12, -1), (13, -1), (14, 8388608), (15, -1), (16, 16777216), (17, 262144), (18, -1), (19, 33554432), (20, 524288), (21, 1114112), (22, -1), (23, 33554432), (24, -1), (25, -1), (26, 4194304), (27, -1), (28, -1), (29, 262144), (30, 4096), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, 4096), (40, -1), (41, 4194304), (42, -1), (43, 131072), (44, 131072), (45, 33554432), (46, 4194304), (47, -1), (48, -1), (49, -1), (50, -1), (51, 33554432), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 0), (6, 524288), (7, -1), (8, -1), (9, 0), (10, -1), (11, -1), (12, -1), (13, -1), (14, 8388608), (15, -1), (16, 16777216), (17, 262144), (18, -1), (19, 16777216), (20, 262144), (21, 540672), (22, -1), (23, -1), (24, -1), (25, -1), (26, 2097152), (27, -1), (28, -1), (29, 0), (30, 0), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, 0), (40, -1), (41, 2097152), (42, -1), (43, 0), (44, 0), (45, 0), (46, 0), (47, -1), (48, -1), (49, -1), (50, -1), (51, 0), (52, -1)]

Covered at level 14 : {5, 39, 9, 43, 44, 45, 46, 51, 29, 30}

After reduction : 
 pending  : [26, 41, 17, 14, 16, 6, 21, 20, 19]
 solution : [7, 28, 24, 23]


Before reduction : 
 pending  : [26, 41, 17, 14, 16, 6, 21, 20, 19]
 solution : [7, 28, 24, 23]

Essensial at level 14 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 0), (6, 524288), (7, -1), (8, -1), (9, 0), (10, -1), (11, -1), (12, -1), (13, -1), (14, 8388608), (15, -1), (16, 16777216), (17, 262144), (18, -1), (19, 16777216), (20, 262144), (21, 540672), (22, -1), (23, -1), (24, -1), (25, -1), (26, 2097152), (27, -1), (28, -1), (29, 0), (30, 0), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, 0), (40, -1), (41, 2097152), (42, -1), (43, 0), (44, 0), (45, 0), (46, 0), (47, -1), (48, -1), (49, -1), (50, -1), (51, 0), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, 524288), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 8388608), (15, -1), (16, 16777216), (17, 262144), (18, -1), (19, 16777216), (20, 262144), (21, 540672), (22, -1), (23, -1), (24, -1), (25, -1), (26, 2097152), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, 2097152), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 14 : set()

After reduction : 
 pending  : [26, 41, 17, 14, 16, 6, 21, 20, 19]
 solution : [7, 28, 24, 23]


Solution : [7, 28, 24, 23] has cost 24.


Before backtrack at level 14
 pending : [26, 41, 17, 14, 16, 6, 21, 20, 19]
 solution : [7, 28, 24, 23]

After backtrack at level 14
 pending : [26, 41, 17, 14, 16, 6, 21, 20, 19, 9, 5, 29, 30, 39, 43, 44, 45, 46, 51]
 solution : [7, 28, 24, 23]


Invert decision for 23 at level 13


New level: 14
 pending : [26, 41, 17, 14, 16, 6, 21, 20, 19, 9, 5, 29, 30, 39, 43, 44, 45, 46, 51]
 solution : [7, 28, 24]


Before reduction : 
 pending  : [26, 41, 17, 14, 16, 6, 21, 20, 19, 9, 5, 29, 30, 39, 43, 44, 45, 46, 51]
 solution : [7, 28, 24]

Essensial at level 14 : {9}

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, 524288), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 8388608), (15, -1), (16, 16777216), (17, 262144), (18, -1), (19, 16777216), (20, 262144), (21, 540672), (22, -1), (23, -1), (24, -1), (25, -1), (26, 2097152), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, 2097152), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 0), (6, 524288), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 8388608), (15, -1), (16, 16777216), (17, 262144), (18, -1), (19, 16777216), (20, 262144), (21, 540672), (22, -1), (23, -1), (24, -1), (25, -1), (26, 2097152), (27, -1), (28, -1), (29, 0), (30, 0), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, 0), (40, -1), (41, 2097152), (42, -1), (43, 0), (44, 0), (45, 0), (46, 0), (47, -1), (48, -1), (49, -1), (50, -1), (51, 0), (52, -1)]

Covered at level 14 : {5, 39, 43, 44, 45, 46, 51, 29, 30}

After reduction : 
 pending  : [26, 41, 17, 14, 16, 6, 21, 20, 19]
 solution : [7, 28, 24, 9]


Before reduction : 
 pending  : [26, 41, 17, 14, 16, 6, 21, 20, 19]
 solution : [7, 28, 24, 9]

Essensial at level 14 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 0), (6, 524288), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 8388608), (15, -1), (16, 16777216), (17, 262144), (18, -1), (19, 16777216), (20, 262144), (21, 540672), (22, -1), (23, -1), (24, -1), (25, -1), (26, 2097152), (27, -1), (28, -1), (29, 0), (30, 0), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, 0), (40, -1), (41, 2097152), (42, -1), (43, 0), (44, 0), (45, 0), (46, 0), (47, -1), (48, -1), (49, -1), (50, -1), (51, 0), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, 524288), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 8388608), (15, -1), (16, 16777216), (17, 262144), (18, -1), (19, 16777216), (20, 262144), (21, 540672), (22, -1), (23, -1), (24, -1), (25, -1), (26, 2097152), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, 2097152), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 14 : set()

After reduction : 
 pending  : [26, 41, 17, 14, 16, 6, 21, 20, 19]
 solution : [7, 28, 24, 9]


Solution : [7, 28, 24, 9] has cost 21.


Before backtrack at level 14
 pending : [26, 41, 17, 14, 16, 6, 21, 20, 19]
 solution : [7, 28, 24, 9]

After backtrack at level 14
 pending : [26, 41, 17, 14, 16, 6, 21, 20, 19, 9, 5, 29, 30, 39, 43, 44, 45, 46, 51]
 solution : [7, 28, 24]


Before backtrack at level 13
 pending : [26, 41, 17, 14, 16, 6, 21, 20, 19, 9, 5, 29, 30, 39, 43, 44, 45, 46, 51]
 solution : [7, 28, 24]

After backtrack at level 13
 pending : [26, 41, 17, 14, 16, 6, 21, 20, 19, 9, 5, 29, 30, 39, 43, 44, 45, 46, 51, 23]
 solution : [7, 28, 24]


Before backtrack at level 12
 pending : [26, 41, 17, 14, 16, 6, 21, 20, 19, 9, 5, 29, 30, 39, 43, 44, 45, 46, 51, 23]
 solution : [7, 28, 24]

After backtrack at level 12
 pending : [26, 41, 17, 14, 16, 6, 21, 20, 19, 9, 5, 29, 30, 39, 43, 44, 45, 46, 51, 23, 18]
 solution : [7, 28, 24]


Before backtrack at level 11
 pending : [26, 41, 17, 14, 16, 6, 21, 20, 19, 9, 5, 29, 30, 39, 43, 44, 45, 46, 51, 23, 18]
 solution : [7, 28, 24]

After backtrack at level 11
 pending : [26, 41, 17, 14, 16, 6, 21, 20, 19, 9, 5, 29, 30, 39, 43, 44, 45, 46, 51, 23, 18, 38]
 solution : [7, 28, 24]


Before backtrack at level 10
 pending : [26, 41, 17, 14, 16, 6, 21, 20, 19, 9, 5, 29, 30, 39, 43, 44, 45, 46, 51, 23, 18, 38]
 solution : [7, 28, 24]

After backtrack at level 10
 pending : [26, 41, 17, 14, 16, 6, 21, 20, 19, 9, 5, 29, 30, 39, 43, 44, 45, 46, 51, 23, 18, 38, 31, 33, 36]
 solution : [7, 28, 24]


Invert decision for 24 at level 9


New level: 10
 pending : [26, 41, 17, 14, 16, 6, 21, 20, 19, 9, 5, 29, 30, 39, 43, 44, 45, 46, 51, 23, 18, 38, 31, 33, 36]
 solution : [7, 28]


Before reduction : 
 pending  : [26, 41, 17, 14, 16, 6, 21, 20, 19, 9, 5, 29, 30, 39, 43, 44, 45, 46, 51, 23, 18, 38, 31, 33, 36]
 solution : [7, 28]

Essensial at level 10 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, 524288), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 8388608), (15, -1), (16, 16777216), (17, 262144), (18, -1), (19, 16777216), (20, 262144), (21, 540672), (22, -1), (23, -1), (24, -1), (25, -1), (26, 2097152), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, 2097152), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 1048576), (6, 1048576), (7, -1), (8, -1), (9, 134217728), (10, -1), (11, -1), (12, -1), (13, -1), (14, 8388608), (15, -1), (16, 16777216), (17, 262144), (18, 67108864), (19, 33554432), (20, 524288), (21, 1114112), (22, -1), (23, 134217728), (24, -1), (25, -1), (26, 4194304), (27, -1), (28, -1), (29, 1048576), (30, 16384), (31, 16384), (32, -1), (33, 2097152), (34, -1), (35, -1), (36, 268435456), (37, -1), (38, 134217728), (39, 16384), (40, -1), (41, 4194304), (42, -1), (43, 524288), (44, 524288), (45, 67108864), (46, 16777216), (47, -1), (48, -1), (49, -1), (50, -1), (51, 67108864), (52, -1)]

Covered at level 10 : set()

After reduction : 
 pending  : [26, 41, 17, 14, 16, 6, 21, 20, 19, 9, 5, 29, 30, 39, 43, 44, 45, 46, 51, 23, 18, 38, 31, 33, 36]
 solution : [7, 28]


Solution : [7, 28] has cost 10.


Decide in level 10 among pending : [26, 41, 17, 14, 16, 6, 21, 20, 19, 9, 5, 29, 30, 39, 43, 44, 45, 46, 51, 23, 18, 38, 31, 33, 36]

Coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 1048576), (6, 1048576), (7, -1), (8, -1), (9, 134217728), (10, -1), (11, -1), (12, -1), (13, -1), (14, 8388608), (15, -1), (16, 16777216), (17, 262144), (18, 67108864), (19, 33554432), (20, 524288), (21, 1114112), (22, -1), (23, 134217728), (24, -1), (25, -1), (26, 4194304), (27, -1), (28, -1), (29, 1048576), (30, 16384), (31, 16384), (32, -1), (33, 2097152), (34, -1), (35, -1), (36, 268435456), (37, -1), (38, 134217728), (39, 16384), (40, -1), (41, 4194304), (42, -1), (43, 524288), (44, 524288), (45, 67108864), (46, 16777216), (47, -1), (48, -1), (49, -1), (50, -1), (51, 67108864), (52, -1)]

Decide 36 with phase True at level 10

After decision at level 10
 pending : [26, 41, 17, 14, 16, 6, 21, 20, 19, 9, 5, 29, 30, 39, 43, 44, 45, 46, 51, 23, 18, 38, 31, 33]
 solution : [7, 28, 36]


New level: 11
 pending : [26, 41, 17, 14, 16, 6, 21, 20, 19, 9, 5, 29, 30, 39, 43, 44, 45, 46, 51, 23, 18, 38, 31, 33]
 solution : [7, 28, 36]


Before reduction : 
 pending  : [26, 41, 17, 14, 16, 6, 21, 20, 19, 9, 5, 29, 30, 39, 43, 44, 45, 46, 51, 23, 18, 38, 31, 33]
 solution : [7, 28, 36]

Essensial at level 11 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 1048576), (6, 1048576), (7, -1), (8, -1), (9, 134217728), (10, -1), (11, -1), (12, -1), (13, -1), (14, 8388608), (15, -1), (16, 16777216), (17, 262144), (18, 67108864), (19, 33554432), (20, 524288), (21, 1114112), (22, -1), (23, 134217728), (24, -1), (25, -1), (26, 4194304), (27, -1), (28, -1), (29, 1048576), (30, 16384), (31, 16384), (32, -1), (33, 2097152), (34, -1), (35, -1), (36, 268435456), (37, -1), (38, 134217728), (39, 16384), (40, -1), (41, 4194304), (42, -1), (43, 524288), (44, 524288), (45, 67108864), (46, 16777216), (47, -1), (48, -1), (49, -1), (50, -1), (51, 67108864), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 262144), (6, 524288), (7, -1), (8, -1), (9, 33554432), (10, -1), (11, -1), (12, -1), (13, -1), (14, 8388608), (15, -1), (16, 16777216), (17, 262144), (18, 33554432), (19, 16777216), (20, 262144), (21, 540672), (22, -1), (23, 33554432), (24, -1), (25, -1), (26, 1048576), (27, -1), (28, -1), (29, 262144), (30, 4096), (31, 4096), (32, -1), (33, 2097152), (34, -1), (35, -1), (36, -1), (37, -1), (38, 134217728), (39, 4096), (40, -1), (41, 1048576), (42, -1), (43, 131072), (44, 131072), (45, 33554432), (46, 4194304), (47, -1), (48, -1), (49, -1), (50, -1), (51, 67108864), (52, -1)]

Covered at level 11 : set()

After reduction : 
 pending  : [26, 41, 17, 14, 16, 6, 21, 20, 19, 9, 5, 29, 30, 39, 43, 44, 45, 46, 51, 23, 18, 38, 31, 33]
 solution : [7, 28, 36]


Solution : [7, 28, 36] has cost 28.


Before backtrack at level 11
 pending : [26, 41, 17, 14, 16, 6, 21, 20, 19, 9, 5, 29, 30, 39, 43, 44, 45, 46, 51, 23, 18, 38, 31, 33]
 solution : [7, 28, 36]

After backtrack at level 11
 pending : [26, 41, 17, 14, 16, 6, 21, 20, 19, 9, 5, 29, 30, 39, 43, 44, 45, 46, 51, 23, 18, 38, 31, 33]
 solution : [7, 28, 36]


Invert decision for 36 at level 10


New level: 11
 pending : [26, 41, 17, 14, 16, 6, 21, 20, 19, 9, 5, 29, 30, 39, 43, 44, 45, 46, 51, 23, 18, 38, 31, 33]
 solution : [7, 28]


Before reduction : 
 pending  : [26, 41, 17, 14, 16, 6, 21, 20, 19, 9, 5, 29, 30, 39, 43, 44, 45, 46, 51, 23, 18, 38, 31, 33]
 solution : [7, 28]

Essensial at level 11 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 262144), (6, 524288), (7, -1), (8, -1), (9, 33554432), (10, -1), (11, -1), (12, -1), (13, -1), (14, 8388608), (15, -1), (16, 16777216), (17, 262144), (18, 33554432), (19, 16777216), (20, 262144), (21, 540672), (22, -1), (23, 33554432), (24, -1), (25, -1), (26, 1048576), (27, -1), (28, -1), (29, 262144), (30, 4096), (31, 4096), (32, -1), (33, 2097152), (34, -1), (35, -1), (36, -1), (37, -1), (38, 134217728), (39, 4096), (40, -1), (41, 1048576), (42, -1), (43, 131072), (44, 131072), (45, 33554432), (46, 4194304), (47, -1), (48, -1), (49, -1), (50, -1), (51, 67108864), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 1048576), (6, 1048576), (7, -1), (8, -1), (9, 134217728), (10, -1), (11, -1), (12, -1), (13, -1), (14, 8388608), (15, -1), (16, 16777216), (17, 262144), (18, 67108864), (19, 33554432), (20, 524288), (21, 1114112), (22, -1), (23, 134217728), (24, -1), (25, -1), (26, 4194304), (27, -1), (28, -1), (29, 1048576), (30, 16384), (31, 16384), (32, -1), (33, 2097152), (34, -1), (35, -1), (36, -1), (37, -1), (38, 134217728), (39, 16384), (40, -1), (41, 4194304), (42, -1), (43, 524288), (44, 524288), (45, 67108864), (46, 16777216), (47, -1), (48, -1), (49, -1), (50, -1), (51, 67108864), (52, -1)]

Covered at level 11 : set()

After reduction : 
 pending  : [26, 41, 17, 14, 16, 6, 21, 20, 19, 9, 5, 29, 30, 39, 43, 44, 45, 46, 51, 23, 18, 38, 31, 33]
 solution : [7, 28]


Solution : [7, 28] has cost 10.


Decide in level 11 among pending : [26, 41, 17, 14, 16, 6, 21, 20, 19, 9, 5, 29, 30, 39, 43, 44, 45, 46, 51, 23, 18, 38, 31, 33]

Coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 1048576), (6, 1048576), (7, -1), (8, -1), (9, 134217728), (10, -1), (11, -1), (12, -1), (13, -1), (14, 8388608), (15, -1), (16, 16777216), (17, 262144), (18, 67108864), (19, 33554432), (20, 524288), (21, 1114112), (22, -1), (23, 134217728), (24, -1), (25, -1), (26, 4194304), (27, -1), (28, -1), (29, 1048576), (30, 16384), (31, 16384), (32, -1), (33, 2097152), (34, -1), (35, -1), (36, -1), (37, -1), (38, 134217728), (39, 16384), (40, -1), (41, 4194304), (42, -1), (43, 524288), (44, 524288), (45, 67108864), (46, 16777216), (47, -1), (48, -1), (49, -1), (50, -1), (51, 67108864), (52, -1)]

Decide 9 with phase True at level 11

After decision at level 11
 pending : [26, 41, 17, 14, 16, 6, 21, 20, 19, 5, 29, 30, 39, 43, 44, 45, 46, 51, 23, 18, 38, 31, 33]
 solution : [7, 28, 9]


New level: 12
 pending : [26, 41, 17, 14, 16, 6, 21, 20, 19, 5, 29, 30, 39, 43, 44, 45, 46, 51, 23, 18, 38, 31, 33]
 solution : [7, 28, 9]


Before reduction : 
 pending  : [26, 41, 17, 14, 16, 6, 21, 20, 19, 5, 29, 30, 39, 43, 44, 45, 46, 51, 23, 18, 38, 31, 33]
 solution : [7, 28, 9]

Essensial at level 12 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 1048576), (6, 1048576), (7, -1), (8, -1), (9, 134217728), (10, -1), (11, -1), (12, -1), (13, -1), (14, 8388608), (15, -1), (16, 16777216), (17, 262144), (18, 67108864), (19, 33554432), (20, 524288), (21, 1114112), (22, -1), (23, 134217728), (24, -1), (25, -1), (26, 4194304), (27, -1), (28, -1), (29, 1048576), (30, 16384), (31, 16384), (32, -1), (33, 2097152), (34, -1), (35, -1), (36, -1), (37, -1), (38, 134217728), (39, 16384), (40, -1), (41, 4194304), (42, -1), (43, 524288), (44, 524288), (45, 67108864), (46, 16777216), (47, -1), (48, -1), (49, -1), (50, -1), (51, 67108864), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 0), (6, 524288), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 8388608), (15, -1), (16, 16777216), (17, 262144), (18, 33554432), (19, 16777216), (20, 262144), (21, 540672), (22, -1), (23, 0), (24, -1), (25, -1), (26, 2097152), (27, -1), (28, -1), (29, 0), (30, 0), (31, 0), (32, -1), (33, 0), (34, -1), (35, -1), (36, -1), (37, -1), (38, 0), (39, 0), (40, -1), (41, 2097152), (42, -1), (43, 0), (44, 0), (45, 0), (46, 0), (47, -1), (48, -1), (49, -1), (50, -1), (51, 0), (52, -1)]

Covered at level 12 : {33, 5, 38, 39, 43, 44, 45, 46, 51, 23, 29, 30, 31}

After reduction : 
 pending  : [26, 41, 17, 14, 16, 6, 21, 20, 19, 18]
 solution : [7, 28, 9]


Before reduction : 
 pending  : [26, 41, 17, 14, 16, 6, 21, 20, 19, 18]
 solution : [7, 28, 9]

Essensial at level 12 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 0), (6, 524288), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 8388608), (15, -1), (16, 16777216), (17, 262144), (18, 33554432), (19, 16777216), (20, 262144), (21, 540672), (22, -1), (23, 0), (24, -1), (25, -1), (26, 2097152), (27, -1), (28, -1), (29, 0), (30, 0), (31, 0), (32, -1), (33, 0), (34, -1), (35, -1), (36, -1), (37, -1), (38, 0), (39, 0), (40, -1), (41, 2097152), (42, -1), (43, 0), (44, 0), (45, 0), (46, 0), (47, -1), (48, -1), (49, -1), (50, -1), (51, 0), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, 524288), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 8388608), (15, -1), (16, 16777216), (17, 262144), (18, 33554432), (19, 16777216), (20, 262144), (21, 540672), (22, -1), (23, -1), (24, -1), (25, -1), (26, 2097152), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, 2097152), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 12 : set()

After reduction : 
 pending  : [26, 41, 17, 14, 16, 6, 21, 20, 19, 18]
 solution : [7, 28, 9]


Solution : [7, 28, 9] has cost 14.


Decide in level 12 among pending : [26, 41, 17, 14, 16, 6, 21, 20, 19, 18]

Coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, 524288), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 8388608), (15, -1), (16, 16777216), (17, 262144), (18, 33554432), (19, 16777216), (20, 262144), (21, 540672), (22, -1), (23, -1), (24, -1), (25, -1), (26, 2097152), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, 2097152), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Decide 18 with phase True at level 12

After decision at level 12
 pending : [26, 41, 17, 14, 16, 6, 21, 20, 19]
 solution : [7, 28, 9, 18]


New level: 13
 pending : [26, 41, 17, 14, 16, 6, 21, 20, 19]
 solution : [7, 28, 9, 18]


Before reduction : 
 pending  : [26, 41, 17, 14, 16, 6, 21, 20, 19]
 solution : [7, 28, 9, 18]

Essensial at level 13 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, 524288), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 8388608), (15, -1), (16, 16777216), (17, 262144), (18, 33554432), (19, 16777216), (20, 262144), (21, 540672), (22, -1), (23, -1), (24, -1), (25, -1), (26, 2097152), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, 2097152), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, 0), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 65536), (15, -1), (16, 262144), (17, 65536), (18, -1), (19, 0), (20, 0), (21, 0), (22, -1), (23, -1), (24, -1), (25, -1), (26, 2048), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, 2048), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 13 : {19, 20, 21, 6}

After reduction : 
 pending  : [26, 41, 17, 14, 16]
 solution : [7, 28, 9, 18]


Before reduction : 
 pending  : [26, 41, 17, 14, 16]
 solution : [7, 28, 9, 18]

Essensial at level 13 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, 0), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 65536), (15, -1), (16, 262144), (17, 65536), (18, -1), (19, 0), (20, 0), (21, 0), (22, -1), (23, -1), (24, -1), (25, -1), (26, 2048), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, 2048), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 65536), (15, -1), (16, 262144), (17, 65536), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, 2048), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, 2048), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 13 : set()

After reduction : 
 pending  : [26, 41, 17, 14, 16]
 solution : [7, 28, 9, 18]


Solution : [7, 28, 9, 18] has cost 23.


Before backtrack at level 13
 pending : [26, 41, 17, 14, 16]
 solution : [7, 28, 9, 18]

After backtrack at level 13
 pending : [26, 41, 17, 14, 16, 6, 21, 20, 19]
 solution : [7, 28, 9, 18]


Invert decision for 18 at level 12


New level: 13
 pending : [26, 41, 17, 14, 16, 6, 21, 20, 19]
 solution : [7, 28, 9]


Before reduction : 
 pending  : [26, 41, 17, 14, 16, 6, 21, 20, 19]
 solution : [7, 28, 9]

Essensial at level 13 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 65536), (15, -1), (16, 262144), (17, 65536), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, 2048), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, 2048), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, 524288), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 8388608), (15, -1), (16, 16777216), (17, 262144), (18, -1), (19, 16777216), (20, 262144), (21, 540672), (22, -1), (23, -1), (24, -1), (25, -1), (26, 2097152), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, 2097152), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 13 : set()

After reduction : 
 pending  : [26, 41, 17, 14, 16, 6, 21, 20, 19]
 solution : [7, 28, 9]


Solution : [7, 28, 9] has cost 14.


Decide in level 13 among pending : [26, 41, 17, 14, 16, 6, 21, 20, 19]

Coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, 524288), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 8388608), (15, -1), (16, 16777216), (17, 262144), (18, -1), (19, 16777216), (20, 262144), (21, 540672), (22, -1), (23, -1), (24, -1), (25, -1), (26, 2097152), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, 2097152), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Decide 16 with phase True at level 13

After decision at level 13
 pending : [26, 41, 17, 14, 6, 21, 20, 19]
 solution : [7, 28, 9, 16]


New level: 14
 pending : [26, 41, 17, 14, 6, 21, 20, 19]
 solution : [7, 28, 9, 16]


Before reduction : 
 pending  : [26, 41, 17, 14, 6, 21, 20, 19]
 solution : [7, 28, 9, 16]

Essensial at level 14 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, 524288), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 8388608), (15, -1), (16, 16777216), (17, 262144), (18, -1), (19, 16777216), (20, 262144), (21, 540672), (22, -1), (23, -1), (24, -1), (25, -1), (26, 2097152), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, 2097152), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, 262144), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 0), (15, -1), (16, -1), (17, 0), (18, -1), (19, 4194304), (20, 0), (21, 264192), (22, -1), (23, -1), (24, -1), (25, -1), (26, 524288), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, 524288), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 14 : {17, 20, 14}

After reduction : 
 pending  : [26, 41, 6, 21, 19]
 solution : [7, 28, 9, 16]


Before reduction : 
 pending  : [26, 41, 6, 21, 19]
 solution : [7, 28, 9, 16]

Essensial at level 14 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, 262144), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 0), (15, -1), (16, -1), (17, 0), (18, -1), (19, 4194304), (20, 0), (21, 264192), (22, -1), (23, -1), (24, -1), (25, -1), (26, 524288), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, 524288), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, 262144), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, 4194304), (20, -1), (21, 264192), (22, -1), (23, -1), (24, -1), (25, -1), (26, 524288), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, 524288), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 14 : set()

After reduction : 
 pending  : [26, 41, 6, 21, 19]
 solution : [7, 28, 9, 16]


Solution : [7, 28, 9, 16] has cost 21.


Before backtrack at level 14
 pending : [26, 41, 6, 21, 19]
 solution : [7, 28, 9, 16]

After backtrack at level 14
 pending : [26, 41, 6, 21, 19, 17, 14, 20]
 solution : [7, 28, 9, 16]


Invert decision for 16 at level 13


New level: 14
 pending : [26, 41, 6, 21, 19, 17, 14, 20]
 solution : [7, 28, 9]


Before reduction : 
 pending  : [26, 41, 6, 21, 19, 17, 14, 20]
 solution : [7, 28, 9]

Essensial at level 14 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, 262144), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, 4194304), (20, -1), (21, 264192), (22, -1), (23, -1), (24, -1), (25, -1), (26, 524288), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, 524288), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, 524288), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 8388608), (15, -1), (16, -1), (17, 262144), (18, -1), (19, 16777216), (20, 262144), (21, 540672), (22, -1), (23, -1), (24, -1), (25, -1), (26, 2097152), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, 2097152), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 14 : set()

After reduction : 
 pending  : [26, 41, 6, 21, 19, 17, 14, 20]
 solution : [7, 28, 9]


Solution : [7, 28, 9] has cost 14.


Decide in level 14 among pending : [26, 41, 6, 21, 19, 17, 14, 20]

Coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, 524288), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 8388608), (15, -1), (16, -1), (17, 262144), (18, -1), (19, 16777216), (20, 262144), (21, 540672), (22, -1), (23, -1), (24, -1), (25, -1), (26, 2097152), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, 2097152), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Decide 19 with phase True at level 14

After decision at level 14
 pending : [26, 41, 6, 21, 17, 14, 20]
 solution : [7, 28, 9, 19]


New level: 15
 pending : [26, 41, 6, 21, 17, 14, 20]
 solution : [7, 28, 9, 19]


Before reduction : 
 pending  : [26, 41, 6, 21, 17, 14, 20]
 solution : [7, 28, 9, 19]

Essensial at level 15 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, 524288), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 8388608), (15, -1), (16, -1), (17, 262144), (18, -1), (19, 16777216), (20, 262144), (21, 540672), (22, -1), (23, -1), (24, -1), (25, -1), (26, 2097152), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, 2097152), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, 0), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 65536), (15, -1), (16, -1), (17, 65536), (18, -1), (19, -1), (20, 0), (21, 0), (22, -1), (23, -1), (24, -1), (25, -1), (26, 2048), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, 2048), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 15 : {20, 21, 6}

After reduction : 
 pending  : [26, 41, 17, 14]
 solution : [7, 28, 9, 19]


Before reduction : 
 pending  : [26, 41, 17, 14]
 solution : [7, 28, 9, 19]

Essensial at level 15 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, 0), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 65536), (15, -1), (16, -1), (17, 65536), (18, -1), (19, -1), (20, 0), (21, 0), (22, -1), (23, -1), (24, -1), (25, -1), (26, 2048), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, 2048), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 65536), (15, -1), (16, -1), (17, 65536), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, 2048), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, 2048), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 15 : set()

After reduction : 
 pending  : [26, 41, 17, 14]
 solution : [7, 28, 9, 19]


Solution : [7, 28, 9, 19] has cost 23.


Before backtrack at level 15
 pending : [26, 41, 17, 14]
 solution : [7, 28, 9, 19]

After backtrack at level 15
 pending : [26, 41, 17, 14, 6, 21, 20]
 solution : [7, 28, 9, 19]


Invert decision for 19 at level 14


New level: 15
 pending : [26, 41, 17, 14, 6, 21, 20]
 solution : [7, 28, 9]


Before reduction : 
 pending  : [26, 41, 17, 14, 6, 21, 20]
 solution : [7, 28, 9]

Essensial at level 15 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 65536), (15, -1), (16, -1), (17, 65536), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, 2048), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, 2048), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, 524288), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 8388608), (15, -1), (16, -1), (17, 262144), (18, -1), (19, -1), (20, 262144), (21, 540672), (22, -1), (23, -1), (24, -1), (25, -1), (26, 2097152), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, 2097152), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 15 : set()

After reduction : 
 pending  : [26, 41, 17, 14, 6, 21, 20]
 solution : [7, 28, 9]


Solution : [7, 28, 9] has cost 14.


Decide in level 15 among pending : [26, 41, 17, 14, 6, 21, 20]

Coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, 524288), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 8388608), (15, -1), (16, -1), (17, 262144), (18, -1), (19, -1), (20, 262144), (21, 540672), (22, -1), (23, -1), (24, -1), (25, -1), (26, 2097152), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, 2097152), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Decide 14 with phase True at level 15

After decision at level 15
 pending : [26, 41, 17, 6, 21, 20]
 solution : [7, 28, 9, 14]


New level: 16
 pending : [26, 41, 17, 6, 21, 20]
 solution : [7, 28, 9, 14]


Before reduction : 
 pending  : [26, 41, 17, 6, 21, 20]
 solution : [7, 28, 9, 14]

Essensial at level 16 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, 524288), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 8388608), (15, -1), (16, -1), (17, 262144), (18, -1), (19, -1), (20, 262144), (21, 540672), (22, -1), (23, -1), (24, -1), (25, -1), (26, 2097152), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, 2097152), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, 262144), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, 0), (18, -1), (19, -1), (20, 0), (21, 264192), (22, -1), (23, -1), (24, -1), (25, -1), (26, 524288), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, 524288), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 16 : {17, 20}

After reduction : 
 pending  : [26, 41, 6, 21]
 solution : [7, 28, 9, 14]


Before reduction : 
 pending  : [26, 41, 6, 21]
 solution : [7, 28, 9, 14]

Essensial at level 16 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, 262144), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, 0), (18, -1), (19, -1), (20, 0), (21, 264192), (22, -1), (23, -1), (24, -1), (25, -1), (26, 524288), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, 524288), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, 262144), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, 264192), (22, -1), (23, -1), (24, -1), (25, -1), (26, 524288), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, 524288), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 16 : set()

After reduction : 
 pending  : [26, 41, 6, 21]
 solution : [7, 28, 9, 14]


Solution : [7, 28, 9, 14] has cost 21.


Before backtrack at level 16
 pending : [26, 41, 6, 21]
 solution : [7, 28, 9, 14]

After backtrack at level 16
 pending : [26, 41, 6, 21, 17, 20]
 solution : [7, 28, 9, 14]


Invert decision for 14 at level 15


New level: 16
 pending : [26, 41, 6, 21, 17, 20]
 solution : [7, 28, 9]


Before reduction : 
 pending  : [26, 41, 6, 21, 17, 20]
 solution : [7, 28, 9]

Essensial at level 16 : {17}

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, 262144), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, 264192), (22, -1), (23, -1), (24, -1), (25, -1), (26, 524288), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, 524288), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, 524288), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, 131072), (21, 540672), (22, -1), (23, -1), (24, -1), (25, -1), (26, 2097152), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, 2097152), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 16 : set()

After reduction : 
 pending  : [26, 41, 6, 21, 20]
 solution : [7, 28, 9, 17]


Before reduction : 
 pending  : [26, 41, 6, 21, 20]
 solution : [7, 28, 9, 17]

Essensial at level 16 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, 524288), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, 131072), (21, 540672), (22, -1), (23, -1), (24, -1), (25, -1), (26, 2097152), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, 2097152), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, 524288), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, 131072), (21, 540672), (22, -1), (23, -1), (24, -1), (25, -1), (26, 2097152), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, 2097152), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 16 : set()

After reduction : 
 pending  : [26, 41, 6, 21, 20]
 solution : [7, 28, 9, 17]


Solution : [7, 28, 9, 17] has cost 21.


Before backtrack at level 16
 pending : [26, 41, 6, 21, 20]
 solution : [7, 28, 9, 17]

After backtrack at level 16
 pending : [26, 41, 6, 21, 20, 17]
 solution : [7, 28, 9]


Before backtrack at level 15
 pending : [26, 41, 6, 21, 20, 17]
 solution : [7, 28, 9]

After backtrack at level 15
 pending : [26, 41, 6, 21, 20, 17, 14]
 solution : [7, 28, 9]


Before backtrack at level 14
 pending : [26, 41, 6, 21, 20, 17, 14]
 solution : [7, 28, 9]

After backtrack at level 14
 pending : [26, 41, 6, 21, 20, 17, 14, 19]
 solution : [7, 28, 9]


Before backtrack at level 13
 pending : [26, 41, 6, 21, 20, 17, 14, 19]
 solution : [7, 28, 9]

After backtrack at level 13
 pending : [26, 41, 6, 21, 20, 17, 14, 19, 16]
 solution : [7, 28, 9]


Before backtrack at level 12
 pending : [26, 41, 6, 21, 20, 17, 14, 19, 16]
 solution : [7, 28, 9]

After backtrack at level 12
 pending : [26, 41, 6, 21, 20, 17, 14, 19, 16, 5, 29, 30, 39, 43, 44, 45, 46, 51, 23, 38, 31, 33, 18]
 solution : [7, 28, 9]


Invert decision for 9 at level 11


New level: 12
 pending : [26, 41, 6, 21, 20, 17, 14, 19, 16, 5, 29, 30, 39, 43, 44, 45, 46, 51, 23, 38, 31, 33, 18]
 solution : [7, 28]


Before reduction : 
 pending  : [26, 41, 6, 21, 20, 17, 14, 19, 16, 5, 29, 30, 39, 43, 44, 45, 46, 51, 23, 38, 31, 33, 18]
 solution : [7, 28]

Essensial at level 12 : {23}

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, 524288), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, 131072), (21, 540672), (22, -1), (23, -1), (24, -1), (25, -1), (26, 2097152), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, 2097152), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 0), (6, 524288), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 8388608), (15, -1), (16, 16777216), (17, 262144), (18, 33554432), (19, 16777216), (20, 262144), (21, 540672), (22, -1), (23, -1), (24, -1), (25, -1), (26, 2097152), (27, -1), (28, -1), (29, 0), (30, 0), (31, 0), (32, -1), (33, 0), (34, -1), (35, -1), (36, -1), (37, -1), (38, 0), (39, 0), (40, -1), (41, 2097152), (42, -1), (43, 0), (44, 0), (45, 0), (46, 0), (47, -1), (48, -1), (49, -1), (50, -1), (51, 0), (52, -1)]

Covered at level 12 : {33, 5, 38, 39, 43, 44, 45, 46, 51, 29, 30, 31}

After reduction : 
 pending  : [26, 41, 6, 21, 20, 17, 14, 19, 16, 18]
 solution : [7, 28, 23]


Before reduction : 
 pending  : [26, 41, 6, 21, 20, 17, 14, 19, 16, 18]
 solution : [7, 28, 23]

Essensial at level 12 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 0), (6, 524288), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 8388608), (15, -1), (16, 16777216), (17, 262144), (18, 33554432), (19, 16777216), (20, 262144), (21, 540672), (22, -1), (23, -1), (24, -1), (25, -1), (26, 2097152), (27, -1), (28, -1), (29, 0), (30, 0), (31, 0), (32, -1), (33, 0), (34, -1), (35, -1), (36, -1), (37, -1), (38, 0), (39, 0), (40, -1), (41, 2097152), (42, -1), (43, 0), (44, 0), (45, 0), (46, 0), (47, -1), (48, -1), (49, -1), (50, -1), (51, 0), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, 524288), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 8388608), (15, -1), (16, 16777216), (17, 262144), (18, 33554432), (19, 16777216), (20, 262144), (21, 540672), (22, -1), (23, -1), (24, -1), (25, -1), (26, 2097152), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, 2097152), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 12 : set()

After reduction : 
 pending  : [26, 41, 6, 21, 20, 17, 14, 19, 16, 18]
 solution : [7, 28, 23]


Solution : [7, 28, 23] has cost 17.


Decide in level 12 among pending : [26, 41, 6, 21, 20, 17, 14, 19, 16, 18]

Coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, 524288), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 8388608), (15, -1), (16, 16777216), (17, 262144), (18, 33554432), (19, 16777216), (20, 262144), (21, 540672), (22, -1), (23, -1), (24, -1), (25, -1), (26, 2097152), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, 2097152), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Decide 18 with phase True at level 12

After decision at level 12
 pending : [26, 41, 6, 21, 20, 17, 14, 19, 16]
 solution : [7, 28, 23, 18]


New level: 13
 pending : [26, 41, 6, 21, 20, 17, 14, 19, 16]
 solution : [7, 28, 23, 18]


Before reduction : 
 pending  : [26, 41, 6, 21, 20, 17, 14, 19, 16]
 solution : [7, 28, 23, 18]

Essensial at level 13 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, 524288), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 8388608), (15, -1), (16, 16777216), (17, 262144), (18, 33554432), (19, 16777216), (20, 262144), (21, 540672), (22, -1), (23, -1), (24, -1), (25, -1), (26, 2097152), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, 2097152), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, 0), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 65536), (15, -1), (16, 262144), (17, 65536), (18, -1), (19, 0), (20, 0), (21, 0), (22, -1), (23, -1), (24, -1), (25, -1), (26, 2048), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, 2048), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 13 : {19, 20, 21, 6}

After reduction : 
 pending  : [26, 41, 17, 14, 16]
 solution : [7, 28, 23, 18]


Before reduction : 
 pending  : [26, 41, 17, 14, 16]
 solution : [7, 28, 23, 18]

Essensial at level 13 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, 0), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 65536), (15, -1), (16, 262144), (17, 65536), (18, -1), (19, 0), (20, 0), (21, 0), (22, -1), (23, -1), (24, -1), (25, -1), (26, 2048), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, 2048), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 65536), (15, -1), (16, 262144), (17, 65536), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, 2048), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, 2048), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 13 : set()

After reduction : 
 pending  : [26, 41, 17, 14, 16]
 solution : [7, 28, 23, 18]


Solution : [7, 28, 23, 18] has cost 26.


Before backtrack at level 13
 pending : [26, 41, 17, 14, 16]
 solution : [7, 28, 23, 18]

After backtrack at level 13
 pending : [26, 41, 17, 14, 16, 6, 21, 20, 19]
 solution : [7, 28, 23, 18]


Invert decision for 18 at level 12


New level: 13
 pending : [26, 41, 17, 14, 16, 6, 21, 20, 19]
 solution : [7, 28, 23]


Before reduction : 
 pending  : [26, 41, 17, 14, 16, 6, 21, 20, 19]
 solution : [7, 28, 23]

Essensial at level 13 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 65536), (15, -1), (16, 262144), (17, 65536), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, 2048), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, 2048), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, 524288), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 8388608), (15, -1), (16, 16777216), (17, 262144), (18, -1), (19, 16777216), (20, 262144), (21, 540672), (22, -1), (23, -1), (24, -1), (25, -1), (26, 2097152), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, 2097152), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 13 : set()

After reduction : 
 pending  : [26, 41, 17, 14, 16, 6, 21, 20, 19]
 solution : [7, 28, 23]


Solution : [7, 28, 23] has cost 17.


Decide in level 13 among pending : [26, 41, 17, 14, 16, 6, 21, 20, 19]

Coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, 524288), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 8388608), (15, -1), (16, 16777216), (17, 262144), (18, -1), (19, 16777216), (20, 262144), (21, 540672), (22, -1), (23, -1), (24, -1), (25, -1), (26, 2097152), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, 2097152), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Decide 16 with phase True at level 13

After decision at level 13
 pending : [26, 41, 17, 14, 6, 21, 20, 19]
 solution : [7, 28, 23, 16]


New level: 14
 pending : [26, 41, 17, 14, 6, 21, 20, 19]
 solution : [7, 28, 23, 16]


Before reduction : 
 pending  : [26, 41, 17, 14, 6, 21, 20, 19]
 solution : [7, 28, 23, 16]

Essensial at level 14 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, 524288), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 8388608), (15, -1), (16, 16777216), (17, 262144), (18, -1), (19, 16777216), (20, 262144), (21, 540672), (22, -1), (23, -1), (24, -1), (25, -1), (26, 2097152), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, 2097152), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, 262144), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 0), (15, -1), (16, -1), (17, 0), (18, -1), (19, 4194304), (20, 0), (21, 264192), (22, -1), (23, -1), (24, -1), (25, -1), (26, 524288), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, 524288), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 14 : {17, 20, 14}

After reduction : 
 pending  : [26, 41, 6, 21, 19]
 solution : [7, 28, 23, 16]


Before reduction : 
 pending  : [26, 41, 6, 21, 19]
 solution : [7, 28, 23, 16]

Essensial at level 14 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, 262144), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 0), (15, -1), (16, -1), (17, 0), (18, -1), (19, 4194304), (20, 0), (21, 264192), (22, -1), (23, -1), (24, -1), (25, -1), (26, 524288), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, 524288), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, 262144), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, 4194304), (20, -1), (21, 264192), (22, -1), (23, -1), (24, -1), (25, -1), (26, 524288), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, 524288), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 14 : set()

After reduction : 
 pending  : [26, 41, 6, 21, 19]
 solution : [7, 28, 23, 16]


Solution : [7, 28, 23, 16] has cost 24.


Before backtrack at level 14
 pending : [26, 41, 6, 21, 19]
 solution : [7, 28, 23, 16]

After backtrack at level 14
 pending : [26, 41, 6, 21, 19, 17, 14, 20]
 solution : [7, 28, 23, 16]


Invert decision for 16 at level 13


New level: 14
 pending : [26, 41, 6, 21, 19, 17, 14, 20]
 solution : [7, 28, 23]


Before reduction : 
 pending  : [26, 41, 6, 21, 19, 17, 14, 20]
 solution : [7, 28, 23]

Essensial at level 14 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, 262144), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, 4194304), (20, -1), (21, 264192), (22, -1), (23, -1), (24, -1), (25, -1), (26, 524288), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, 524288), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, 524288), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 8388608), (15, -1), (16, -1), (17, 262144), (18, -1), (19, 16777216), (20, 262144), (21, 540672), (22, -1), (23, -1), (24, -1), (25, -1), (26, 2097152), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, 2097152), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 14 : set()

After reduction : 
 pending  : [26, 41, 6, 21, 19, 17, 14, 20]
 solution : [7, 28, 23]


Solution : [7, 28, 23] has cost 17.


Decide in level 14 among pending : [26, 41, 6, 21, 19, 17, 14, 20]

Coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, 524288), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 8388608), (15, -1), (16, -1), (17, 262144), (18, -1), (19, 16777216), (20, 262144), (21, 540672), (22, -1), (23, -1), (24, -1), (25, -1), (26, 2097152), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, 2097152), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Decide 19 with phase True at level 14

After decision at level 14
 pending : [26, 41, 6, 21, 17, 14, 20]
 solution : [7, 28, 23, 19]


New level: 15
 pending : [26, 41, 6, 21, 17, 14, 20]
 solution : [7, 28, 23, 19]


Before reduction : 
 pending  : [26, 41, 6, 21, 17, 14, 20]
 solution : [7, 28, 23, 19]

Essensial at level 15 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, 524288), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 8388608), (15, -1), (16, -1), (17, 262144), (18, -1), (19, 16777216), (20, 262144), (21, 540672), (22, -1), (23, -1), (24, -1), (25, -1), (26, 2097152), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, 2097152), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, 0), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 65536), (15, -1), (16, -1), (17, 65536), (18, -1), (19, -1), (20, 0), (21, 0), (22, -1), (23, -1), (24, -1), (25, -1), (26, 2048), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, 2048), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 15 : {20, 21, 6}

After reduction : 
 pending  : [26, 41, 17, 14]
 solution : [7, 28, 23, 19]


Before reduction : 
 pending  : [26, 41, 17, 14]
 solution : [7, 28, 23, 19]

Essensial at level 15 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, 0), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 65536), (15, -1), (16, -1), (17, 65536), (18, -1), (19, -1), (20, 0), (21, 0), (22, -1), (23, -1), (24, -1), (25, -1), (26, 2048), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, 2048), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 65536), (15, -1), (16, -1), (17, 65536), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, 2048), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, 2048), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 15 : set()

After reduction : 
 pending  : [26, 41, 17, 14]
 solution : [7, 28, 23, 19]


Solution : [7, 28, 23, 19] has cost 26.


Before backtrack at level 15
 pending : [26, 41, 17, 14]
 solution : [7, 28, 23, 19]

After backtrack at level 15
 pending : [26, 41, 17, 14, 6, 21, 20]
 solution : [7, 28, 23, 19]


Invert decision for 19 at level 14


New level: 15
 pending : [26, 41, 17, 14, 6, 21, 20]
 solution : [7, 28, 23]


Before reduction : 
 pending  : [26, 41, 17, 14, 6, 21, 20]
 solution : [7, 28, 23]

Essensial at level 15 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 65536), (15, -1), (16, -1), (17, 65536), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, 2048), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, 2048), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, 524288), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 8388608), (15, -1), (16, -1), (17, 262144), (18, -1), (19, -1), (20, 262144), (21, 540672), (22, -1), (23, -1), (24, -1), (25, -1), (26, 2097152), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, 2097152), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 15 : set()

After reduction : 
 pending  : [26, 41, 17, 14, 6, 21, 20]
 solution : [7, 28, 23]


Solution : [7, 28, 23] has cost 17.


Decide in level 15 among pending : [26, 41, 17, 14, 6, 21, 20]

Coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, 524288), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 8388608), (15, -1), (16, -1), (17, 262144), (18, -1), (19, -1), (20, 262144), (21, 540672), (22, -1), (23, -1), (24, -1), (25, -1), (26, 2097152), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, 2097152), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Decide 14 with phase True at level 15

After decision at level 15
 pending : [26, 41, 17, 6, 21, 20]
 solution : [7, 28, 23, 14]


New level: 16
 pending : [26, 41, 17, 6, 21, 20]
 solution : [7, 28, 23, 14]


Before reduction : 
 pending  : [26, 41, 17, 6, 21, 20]
 solution : [7, 28, 23, 14]

Essensial at level 16 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, 524288), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 8388608), (15, -1), (16, -1), (17, 262144), (18, -1), (19, -1), (20, 262144), (21, 540672), (22, -1), (23, -1), (24, -1), (25, -1), (26, 2097152), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, 2097152), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, 262144), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, 0), (18, -1), (19, -1), (20, 0), (21, 264192), (22, -1), (23, -1), (24, -1), (25, -1), (26, 524288), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, 524288), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 16 : {17, 20}

After reduction : 
 pending  : [26, 41, 6, 21]
 solution : [7, 28, 23, 14]


Before reduction : 
 pending  : [26, 41, 6, 21]
 solution : [7, 28, 23, 14]

Essensial at level 16 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, 262144), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, 0), (18, -1), (19, -1), (20, 0), (21, 264192), (22, -1), (23, -1), (24, -1), (25, -1), (26, 524288), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, 524288), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, 262144), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, 264192), (22, -1), (23, -1), (24, -1), (25, -1), (26, 524288), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, 524288), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 16 : set()

After reduction : 
 pending  : [26, 41, 6, 21]
 solution : [7, 28, 23, 14]


Solution : [7, 28, 23, 14] has cost 24.


Before backtrack at level 16
 pending : [26, 41, 6, 21]
 solution : [7, 28, 23, 14]

After backtrack at level 16
 pending : [26, 41, 6, 21, 17, 20]
 solution : [7, 28, 23, 14]


Invert decision for 14 at level 15


New level: 16
 pending : [26, 41, 6, 21, 17, 20]
 solution : [7, 28, 23]


Before reduction : 
 pending  : [26, 41, 6, 21, 17, 20]
 solution : [7, 28, 23]

Essensial at level 16 : {17}

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, 262144), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, 264192), (22, -1), (23, -1), (24, -1), (25, -1), (26, 524288), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, 524288), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, 524288), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, 131072), (21, 540672), (22, -1), (23, -1), (24, -1), (25, -1), (26, 2097152), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, 2097152), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 16 : set()

After reduction : 
 pending  : [26, 41, 6, 21, 20]
 solution : [7, 28, 23, 17]


Before reduction : 
 pending  : [26, 41, 6, 21, 20]
 solution : [7, 28, 23, 17]

Essensial at level 16 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, 524288), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, 131072), (21, 540672), (22, -1), (23, -1), (24, -1), (25, -1), (26, 2097152), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, 2097152), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, 524288), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, 131072), (21, 540672), (22, -1), (23, -1), (24, -1), (25, -1), (26, 2097152), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, 2097152), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 16 : set()

After reduction : 
 pending  : [26, 41, 6, 21, 20]
 solution : [7, 28, 23, 17]


Solution : [7, 28, 23, 17] has cost 24.


Before backtrack at level 16
 pending : [26, 41, 6, 21, 20]
 solution : [7, 28, 23, 17]

After backtrack at level 16
 pending : [26, 41, 6, 21, 20, 17]
 solution : [7, 28, 23]


Before backtrack at level 15
 pending : [26, 41, 6, 21, 20, 17]
 solution : [7, 28, 23]

After backtrack at level 15
 pending : [26, 41, 6, 21, 20, 17, 14]
 solution : [7, 28, 23]


Before backtrack at level 14
 pending : [26, 41, 6, 21, 20, 17, 14]
 solution : [7, 28, 23]

After backtrack at level 14
 pending : [26, 41, 6, 21, 20, 17, 14, 19]
 solution : [7, 28, 23]


Before backtrack at level 13
 pending : [26, 41, 6, 21, 20, 17, 14, 19]
 solution : [7, 28, 23]

After backtrack at level 13
 pending : [26, 41, 6, 21, 20, 17, 14, 19, 16]
 solution : [7, 28, 23]


Before backtrack at level 12
 pending : [26, 41, 6, 21, 20, 17, 14, 19, 16]
 solution : [7, 28, 23]

After backtrack at level 12
 pending : [26, 41, 6, 21, 20, 17, 14, 19, 16, 23, 5, 29, 30, 39, 43, 44, 45, 46, 51, 38, 31, 33, 18]
 solution : [7, 28]


Before backtrack at level 11
 pending : [26, 41, 6, 21, 20, 17, 14, 19, 16, 23, 5, 29, 30, 39, 43, 44, 45, 46, 51, 38, 31, 33, 18]
 solution : [7, 28]

After backtrack at level 11
 pending : [26, 41, 6, 21, 20, 17, 14, 19, 16, 23, 5, 29, 30, 39, 43, 44, 45, 46, 51, 38, 31, 33, 18, 9]
 solution : [7, 28]


Before backtrack at level 10
 pending : [26, 41, 6, 21, 20, 17, 14, 19, 16, 23, 5, 29, 30, 39, 43, 44, 45, 46, 51, 38, 31, 33, 18, 9]
 solution : [7, 28]

After backtrack at level 10
 pending : [26, 41, 6, 21, 20, 17, 14, 19, 16, 23, 5, 29, 30, 39, 43, 44, 45, 46, 51, 38, 31, 33, 18, 9, 36]
 solution : [7, 28]


Before backtrack at level 9
 pending : [26, 41, 6, 21, 20, 17, 14, 19, 16, 23, 5, 29, 30, 39, 43, 44, 45, 46, 51, 38, 31, 33, 18, 9, 36]
 solution : [7, 28]

After backtrack at level 9
 pending : [26, 41, 6, 21, 20, 17, 14, 19, 16, 23, 5, 29, 30, 39, 43, 44, 45, 46, 51, 38, 31, 33, 18, 9, 36, 24]
 solution : [7, 28]


Before backtrack at level 8
 pending : [26, 41, 6, 21, 20, 17, 14, 19, 16, 23, 5, 29, 30, 39, 43, 44, 45, 46, 51, 38, 31, 33, 18, 9, 36, 24]
 solution : [7, 28]

After backtrack at level 8
 pending : [26, 41, 6, 21, 20, 17, 14, 19, 16, 23, 5, 29, 30, 39, 43, 44, 45, 46, 51, 38, 31, 33, 18, 9, 36, 24, 37]
 solution : [7, 28]


Before backtrack at level 7
 pending : [26, 41, 6, 21, 20, 17, 14, 19, 16, 23, 5, 29, 30, 39, 43, 44, 45, 46, 51, 38, 31, 33, 18, 9, 36, 24, 37]
 solution : [7, 28]

After backtrack at level 7
 pending : [26, 41, 6, 21, 20, 17, 14, 19, 16, 23, 5, 29, 30, 39, 43, 44, 45, 46, 51, 38, 31, 33, 18, 9, 36, 24, 37, 32]
 solution : [7, 28]


Before backtrack at level 6
 pending : [26, 41, 6, 21, 20, 17, 14, 19, 16, 23, 5, 29, 30, 39, 43, 44, 45, 46, 51, 38, 31, 33, 18, 9, 36, 24, 37, 32]
 solution : [7, 28]

After backtrack at level 6
 pending : [26, 41, 6, 21, 20, 17, 14, 19, 16, 23, 5, 29, 30, 39, 43, 44, 45, 46, 51, 38, 31, 33, 18, 9, 36, 24, 37, 32, 15]
 solution : [7, 28]


Before backtrack at level 5
 pending : [26, 41, 6, 21, 20, 17, 14, 19, 16, 23, 5, 29, 30, 39, 43, 44, 45, 46, 51, 38, 31, 33, 18, 9, 36, 24, 37, 32, 15]
 solution : [7, 28]

After backtrack at level 5
 pending : [26, 41, 6, 21, 20, 17, 14, 19, 16, 23, 5, 29, 30, 39, 43, 44, 45, 46, 51, 38, 31, 33, 18, 9, 36, 24, 37, 32, 15, 13]
 solution : [7, 28]


Before backtrack at level 4
 pending : [26, 41, 6, 21, 20, 17, 14, 19, 16, 23, 5, 29, 30, 39, 43, 44, 45, 46, 51, 38, 31, 33, 18, 9, 36, 24, 37, 32, 15, 13]
 solution : [7, 28]

After backtrack at level 4
 pending : [26, 41, 6, 21, 20, 17, 14, 19, 16, 23, 5, 29, 30, 39, 43, 44, 45, 46, 51, 38, 31, 33, 18, 9, 36, 24, 37, 32, 15, 13, 27]
 solution : [7, 28]


Invert decision for 28 at level 3


New level: 4
 pending : [26, 41, 6, 21, 20, 17, 14, 19, 16, 23, 5, 29, 30, 39, 43, 44, 45, 46, 51, 38, 31, 33, 18, 9, 36, 24, 37, 32, 15, 13, 27]
 solution : [7]


Before reduction : 
 pending  : [26, 41, 6, 21, 20, 17, 14, 19, 16, 23, 5, 29, 30, 39, 43, 44, 45, 46, 51, 38, 31, 33, 18, 9, 36, 24, 37, 32, 15, 13, 27]
 solution : [7]

Essensial at level 4 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, 524288), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, 131072), (21, 540672), (22, -1), (23, -1), (24, -1), (25, -1), (26, 2097152), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, 2097152), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 1048576), (6, 1048576), (7, -1), (8, -1), (9, 134217728), (10, -1), (11, -1), (12, -1), (13, 2147483648), (14, 8388608), (15, 1073741824), (16, 16777216), (17, 262144), (18, 67108864), (19, 33554432), (20, 524288), (21, 1114112), (22, -1), (23, 134217728), (24, 1073741824), (25, -1), (26, 4194304), (27, 4294967296), (28, -1), (29, 1048576), (30, 16384), (31, 32768), (32, 2147483648), (33, 4194304), (34, -1), (35, -1), (36, 268435456), (37, 1073741824), (38, 134217728), (39, 16384), (40, -1), (41, 4194304), (42, -1), (43, 524288), (44, 524288), (45, 67108864), (46, 16777216), (47, -1), (48, -1), (49, -1), (50, -1), (51, 67108864), (52, -1)]

Covered at level 4 : set()

After reduction : 
 pending  : [26, 41, 6, 21, 20, 17, 14, 19, 16, 23, 5, 29, 30, 39, 43, 44, 45, 46, 51, 38, 31, 33, 18, 9, 36, 24, 37, 32, 15, 13, 27]
 solution : [7]


Solution : [7] has cost 6.


Decide in level 4 among pending : [26, 41, 6, 21, 20, 17, 14, 19, 16, 23, 5, 29, 30, 39, 43, 44, 45, 46, 51, 38, 31, 33, 18, 9, 36, 24, 37, 32, 15, 13, 27]

Coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 1048576), (6, 1048576), (7, -1), (8, -1), (9, 134217728), (10, -1), (11, -1), (12, -1), (13, 2147483648), (14, 8388608), (15, 1073741824), (16, 16777216), (17, 262144), (18, 67108864), (19, 33554432), (20, 524288), (21, 1114112), (22, -1), (23, 134217728), (24, 1073741824), (25, -1), (26, 4194304), (27, 4294967296), (28, -1), (29, 1048576), (30, 16384), (31, 32768), (32, 2147483648), (33, 4194304), (34, -1), (35, -1), (36, 268435456), (37, 1073741824), (38, 134217728), (39, 16384), (40, -1), (41, 4194304), (42, -1), (43, 524288), (44, 524288), (45, 67108864), (46, 16777216), (47, -1), (48, -1), (49, -1), (50, -1), (51, 67108864), (52, -1)]

Decide 27 with phase True at level 4

After decision at level 4
 pending : [26, 41, 6, 21, 20, 17, 14, 19, 16, 23, 5, 29, 30, 39, 43, 44, 45, 46, 51, 38, 31, 33, 18, 9, 36, 24, 37, 32, 15, 13]
 solution : [7, 27]


New level: 5
 pending : [26, 41, 6, 21, 20, 17, 14, 19, 16, 23, 5, 29, 30, 39, 43, 44, 45, 46, 51, 38, 31, 33, 18, 9, 36, 24, 37, 32, 15, 13]
 solution : [7, 27]


Before reduction : 
 pending  : [26, 41, 6, 21, 20, 17, 14, 19, 16, 23, 5, 29, 30, 39, 43, 44, 45, 46, 51, 38, 31, 33, 18, 9, 36, 24, 37, 32, 15, 13]
 solution : [7, 27]

Essensial at level 5 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 1048576), (6, 1048576), (7, -1), (8, -1), (9, 134217728), (10, -1), (11, -1), (12, -1), (13, 2147483648), (14, 8388608), (15, 1073741824), (16, 16777216), (17, 262144), (18, 67108864), (19, 33554432), (20, 524288), (21, 1114112), (22, -1), (23, 134217728), (24, 1073741824), (25, -1), (26, 4194304), (27, 4294967296), (28, -1), (29, 1048576), (30, 16384), (31, 32768), (32, 2147483648), (33, 4194304), (34, -1), (35, -1), (36, 268435456), (37, 1073741824), (38, 134217728), (39, 16384), (40, -1), (41, 4194304), (42, -1), (43, 524288), (44, 524288), (45, 67108864), (46, 16777216), (47, -1), (48, -1), (49, -1), (50, -1), (51, 67108864), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 262144), (6, 0), (7, -1), (8, -1), (9, 134217728), (10, -1), (11, -1), (12, -1), (13, 0), (14, 0), (15, 0), (16, 0), (17, 0), (18, 0), (19, 0), (20, 0), (21, 0), (22, -1), (23, 134217728), (24, 1073741824), (25, -1), (26, 0), (27, -1), (28, -1), (29, 524288), (30, 4096), (31, 8192), (32, 2147483648), (33, 4194304), (34, -1), (35, -1), (36, 2048), (37, 4096), (38, 67108864), (39, 2048), (40, -1), (41, 0), (42, -1), (43, 131072), (44, 131072), (45, 33554432), (46, 4194304), (47, -1), (48, -1), (49, -1), (50, -1), (51, 16777216), (52, -1)]

Covered at level 5 : {6, 41, 13, 14, 15, 16, 17, 18, 19, 20, 21, 26}

After reduction : 
 pending  : [23, 5, 29, 30, 39, 43, 44, 45, 46, 51, 38, 31, 33, 9, 36, 24, 37, 32]
 solution : [7, 27]


Before reduction : 
 pending  : [23, 5, 29, 30, 39, 43, 44, 45, 46, 51, 38, 31, 33, 9, 36, 24, 37, 32]
 solution : [7, 27]

Essensial at level 5 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 262144), (6, 0), (7, -1), (8, -1), (9, 134217728), (10, -1), (11, -1), (12, -1), (13, 0), (14, 0), (15, 0), (16, 0), (17, 0), (18, 0), (19, 0), (20, 0), (21, 0), (22, -1), (23, 134217728), (24, 1073741824), (25, -1), (26, 0), (27, -1), (28, -1), (29, 524288), (30, 4096), (31, 8192), (32, 2147483648), (33, 4194304), (34, -1), (35, -1), (36, 2048), (37, 4096), (38, 67108864), (39, 2048), (40, -1), (41, 0), (42, -1), (43, 131072), (44, 131072), (45, 33554432), (46, 4194304), (47, -1), (48, -1), (49, -1), (50, -1), (51, 16777216), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 262144), (6, -1), (7, -1), (8, -1), (9, 134217728), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, 134217728), (24, 1073741824), (25, -1), (26, -1), (27, -1), (28, -1), (29, 524288), (30, 4096), (31, 8192), (32, 2147483648), (33, 4194304), (34, -1), (35, -1), (36, 2048), (37, 4096), (38, 67108864), (39, 2048), (40, -1), (41, -1), (42, -1), (43, 131072), (44, 131072), (45, 33554432), (46, 4194304), (47, -1), (48, -1), (49, -1), (50, -1), (51, 16777216), (52, -1)]

Covered at level 5 : set()

After reduction : 
 pending  : [23, 5, 29, 30, 39, 43, 44, 45, 46, 51, 38, 31, 33, 9, 36, 24, 37, 32]
 solution : [7, 27]


Solution : [7, 27] has cost 10.


Decide in level 5 among pending : [23, 5, 29, 30, 39, 43, 44, 45, 46, 51, 38, 31, 33, 9, 36, 24, 37, 32]

Coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 262144), (6, -1), (7, -1), (8, -1), (9, 134217728), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, 134217728), (24, 1073741824), (25, -1), (26, -1), (27, -1), (28, -1), (29, 524288), (30, 4096), (31, 8192), (32, 2147483648), (33, 4194304), (34, -1), (35, -1), (36, 2048), (37, 4096), (38, 67108864), (39, 2048), (40, -1), (41, -1), (42, -1), (43, 131072), (44, 131072), (45, 33554432), (46, 4194304), (47, -1), (48, -1), (49, -1), (50, -1), (51, 16777216), (52, -1)]

Decide 32 with phase True at level 5

After decision at level 5
 pending : [23, 5, 29, 30, 39, 43, 44, 45, 46, 51, 38, 31, 33, 9, 36, 24, 37]
 solution : [7, 27, 32]


New level: 6
 pending : [23, 5, 29, 30, 39, 43, 44, 45, 46, 51, 38, 31, 33, 9, 36, 24, 37]
 solution : [7, 27, 32]


Before reduction : 
 pending  : [23, 5, 29, 30, 39, 43, 44, 45, 46, 51, 38, 31, 33, 9, 36, 24, 37]
 solution : [7, 27, 32]

Essensial at level 6 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 262144), (6, -1), (7, -1), (8, -1), (9, 134217728), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, 134217728), (24, 1073741824), (25, -1), (26, -1), (27, -1), (28, -1), (29, 524288), (30, 4096), (31, 8192), (32, 2147483648), (33, 4194304), (34, -1), (35, -1), (36, 2048), (37, 4096), (38, 67108864), (39, 2048), (40, -1), (41, -1), (42, -1), (43, 131072), (44, 131072), (45, 33554432), (46, 4194304), (47, -1), (48, -1), (49, -1), (50, -1), (51, 16777216), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 65536), (6, -1), (7, -1), (8, -1), (9, 134217728), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, 134217728), (24, 4096), (25, -1), (26, -1), (27, -1), (28, -1), (29, 131072), (30, 1024), (31, 0), (32, -1), (33, 0), (34, -1), (35, -1), (36, 512), (37, 0), (38, 16777216), (39, 512), (40, -1), (41, -1), (42, -1), (43, 32768), (44, 32768), (45, 8388608), (46, 1048576), (47, -1), (48, -1), (49, -1), (50, -1), (51, 4194304), (52, -1)]

Covered at level 6 : {33, 37, 31}

After reduction : 
 pending  : [23, 5, 29, 30, 39, 43, 44, 45, 46, 51, 38, 9, 36, 24]
 solution : [7, 27, 32]


Before reduction : 
 pending  : [23, 5, 29, 30, 39, 43, 44, 45, 46, 51, 38, 9, 36, 24]
 solution : [7, 27, 32]

Essensial at level 6 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 65536), (6, -1), (7, -1), (8, -1), (9, 134217728), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, 134217728), (24, 4096), (25, -1), (26, -1), (27, -1), (28, -1), (29, 131072), (30, 1024), (31, 0), (32, -1), (33, 0), (34, -1), (35, -1), (36, 512), (37, 0), (38, 16777216), (39, 512), (40, -1), (41, -1), (42, -1), (43, 32768), (44, 32768), (45, 8388608), (46, 1048576), (47, -1), (48, -1), (49, -1), (50, -1), (51, 4194304), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 65536), (6, -1), (7, -1), (8, -1), (9, 134217728), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, 134217728), (24, 4096), (25, -1), (26, -1), (27, -1), (28, -1), (29, 131072), (30, 1024), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, 512), (37, -1), (38, 16777216), (39, 512), (40, -1), (41, -1), (42, -1), (43, 32768), (44, 32768), (45, 8388608), (46, 1048576), (47, -1), (48, -1), (49, -1), (50, -1), (51, 4194304), (52, -1)]

Covered at level 6 : set()

After reduction : 
 pending  : [23, 5, 29, 30, 39, 43, 44, 45, 46, 51, 38, 9, 36, 24]
 solution : [7, 27, 32]


Solution : [7, 27, 32] has cost 23.


Before backtrack at level 6
 pending : [23, 5, 29, 30, 39, 43, 44, 45, 46, 51, 38, 9, 36, 24]
 solution : [7, 27, 32]

After backtrack at level 6
 pending : [23, 5, 29, 30, 39, 43, 44, 45, 46, 51, 38, 9, 36, 24, 31, 33, 37]
 solution : [7, 27, 32]


Invert decision for 32 at level 5


New level: 6
 pending : [23, 5, 29, 30, 39, 43, 44, 45, 46, 51, 38, 9, 36, 24, 31, 33, 37]
 solution : [7, 27]


Before reduction : 
 pending  : [23, 5, 29, 30, 39, 43, 44, 45, 46, 51, 38, 9, 36, 24, 31, 33, 37]
 solution : [7, 27]

Essensial at level 6 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 65536), (6, -1), (7, -1), (8, -1), (9, 134217728), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, 134217728), (24, 4096), (25, -1), (26, -1), (27, -1), (28, -1), (29, 131072), (30, 1024), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, 512), (37, -1), (38, 16777216), (39, 512), (40, -1), (41, -1), (42, -1), (43, 32768), (44, 32768), (45, 8388608), (46, 1048576), (47, -1), (48, -1), (49, -1), (50, -1), (51, 4194304), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 262144), (6, -1), (7, -1), (8, -1), (9, 134217728), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, 134217728), (24, 1073741824), (25, -1), (26, -1), (27, -1), (28, -1), (29, 524288), (30, 4096), (31, 8192), (32, -1), (33, 4194304), (34, -1), (35, -1), (36, 2048), (37, 4096), (38, 67108864), (39, 2048), (40, -1), (41, -1), (42, -1), (43, 131072), (44, 131072), (45, 33554432), (46, 4194304), (47, -1), (48, -1), (49, -1), (50, -1), (51, 16777216), (52, -1)]

Covered at level 6 : set()

After reduction : 
 pending  : [23, 5, 29, 30, 39, 43, 44, 45, 46, 51, 38, 9, 36, 24, 31, 33, 37]
 solution : [7, 27]


Solution : [7, 27] has cost 10.


Decide in level 6 among pending : [23, 5, 29, 30, 39, 43, 44, 45, 46, 51, 38, 9, 36, 24, 31, 33, 37]

Coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 262144), (6, -1), (7, -1), (8, -1), (9, 134217728), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, 134217728), (24, 1073741824), (25, -1), (26, -1), (27, -1), (28, -1), (29, 524288), (30, 4096), (31, 8192), (32, -1), (33, 4194304), (34, -1), (35, -1), (36, 2048), (37, 4096), (38, 67108864), (39, 2048), (40, -1), (41, -1), (42, -1), (43, 131072), (44, 131072), (45, 33554432), (46, 4194304), (47, -1), (48, -1), (49, -1), (50, -1), (51, 16777216), (52, -1)]

Decide 24 with phase True at level 6

After decision at level 6
 pending : [23, 5, 29, 30, 39, 43, 44, 45, 46, 51, 38, 9, 36, 31, 33, 37]
 solution : [7, 27, 24]


New level: 7
 pending : [23, 5, 29, 30, 39, 43, 44, 45, 46, 51, 38, 9, 36, 31, 33, 37]
 solution : [7, 27, 24]


Before reduction : 
 pending  : [23, 5, 29, 30, 39, 43, 44, 45, 46, 51, 38, 9, 36, 31, 33, 37]
 solution : [7, 27, 24]

Essensial at level 7 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 262144), (6, -1), (7, -1), (8, -1), (9, 134217728), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, 134217728), (24, 1073741824), (25, -1), (26, -1), (27, -1), (28, -1), (29, 524288), (30, 4096), (31, 8192), (32, -1), (33, 4194304), (34, -1), (35, -1), (36, 2048), (37, 4096), (38, 67108864), (39, 2048), (40, -1), (41, -1), (42, -1), (43, 131072), (44, 131072), (45, 33554432), (46, 4194304), (47, -1), (48, -1), (49, -1), (50, -1), (51, 16777216), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 65536), (6, -1), (7, -1), (8, -1), (9, 33554432), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, 33554432), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, 131072), (30, 1024), (31, 0), (32, -1), (33, 0), (34, -1), (35, -1), (36, 512), (37, 0), (38, 33554432), (39, 512), (40, -1), (41, -1), (42, -1), (43, 32768), (44, 32768), (45, 16777216), (46, 1048576), (47, -1), (48, -1), (49, -1), (50, -1), (51, 8388608), (52, -1)]

Covered at level 7 : {33, 37, 31}

After reduction : 
 pending  : [23, 5, 29, 30, 39, 43, 44, 45, 46, 51, 38, 9, 36]
 solution : [7, 27, 24]


Before reduction : 
 pending  : [23, 5, 29, 30, 39, 43, 44, 45, 46, 51, 38, 9, 36]
 solution : [7, 27, 24]

Essensial at level 7 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 65536), (6, -1), (7, -1), (8, -1), (9, 33554432), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, 33554432), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, 131072), (30, 1024), (31, 0), (32, -1), (33, 0), (34, -1), (35, -1), (36, 512), (37, 0), (38, 33554432), (39, 512), (40, -1), (41, -1), (42, -1), (43, 32768), (44, 32768), (45, 16777216), (46, 1048576), (47, -1), (48, -1), (49, -1), (50, -1), (51, 8388608), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 65536), (6, -1), (7, -1), (8, -1), (9, 33554432), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, 33554432), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, 131072), (30, 1024), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, 512), (37, -1), (38, 33554432), (39, 512), (40, -1), (41, -1), (42, -1), (43, 32768), (44, 32768), (45, 16777216), (46, 1048576), (47, -1), (48, -1), (49, -1), (50, -1), (51, 8388608), (52, -1)]

Covered at level 7 : set()

After reduction : 
 pending  : [23, 5, 29, 30, 39, 43, 44, 45, 46, 51, 38, 9, 36]
 solution : [7, 27, 24]


Solution : [7, 27, 24] has cost 17.


Decide in level 7 among pending : [23, 5, 29, 30, 39, 43, 44, 45, 46, 51, 38, 9, 36]

Coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 65536), (6, -1), (7, -1), (8, -1), (9, 33554432), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, 33554432), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, 131072), (30, 1024), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, 512), (37, -1), (38, 33554432), (39, 512), (40, -1), (41, -1), (42, -1), (43, 32768), (44, 32768), (45, 16777216), (46, 1048576), (47, -1), (48, -1), (49, -1), (50, -1), (51, 8388608), (52, -1)]

Decide 23 with phase True at level 7

After decision at level 7
 pending : [5, 29, 30, 39, 43, 44, 45, 46, 51, 38, 9, 36]
 solution : [7, 27, 24, 23]


New level: 8
 pending : [5, 29, 30, 39, 43, 44, 45, 46, 51, 38, 9, 36]
 solution : [7, 27, 24, 23]


Before reduction : 
 pending  : [5, 29, 30, 39, 43, 44, 45, 46, 51, 38, 9, 36]
 solution : [7, 27, 24, 23]

Essensial at level 8 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 65536), (6, -1), (7, -1), (8, -1), (9, 33554432), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, 33554432), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, 131072), (30, 1024), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, 512), (37, -1), (38, 33554432), (39, 512), (40, -1), (41, -1), (42, -1), (43, 32768), (44, 32768), (45, 16777216), (46, 1048576), (47, -1), (48, -1), (49, -1), (50, -1), (51, 8388608), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 0), (6, -1), (7, -1), (8, -1), (9, 0), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, 0), (30, 0), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, 0), (37, -1), (38, 0), (39, 0), (40, -1), (41, -1), (42, -1), (43, 0), (44, 0), (45, 0), (46, 0), (47, -1), (48, -1), (49, -1), (50, -1), (51, 0), (52, -1)]

Covered at level 8 : {36, 5, 38, 39, 9, 43, 44, 45, 46, 51, 29, 30}

After reduction : 
 pending  : []
 solution : [7, 27, 24, 23]


Before reduction : 
 pending  : []
 solution : [7, 27, 24, 23]

Essensial at level 8 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 0), (6, -1), (7, -1), (8, -1), (9, 0), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, 0), (30, 0), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, 0), (37, -1), (38, 0), (39, 0), (40, -1), (41, -1), (42, -1), (43, 0), (44, 0), (45, 0), (46, 0), (47, -1), (48, -1), (49, -1), (50, -1), (51, 0), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 8 : set()

After reduction : 
 pending  : []
 solution : [7, 27, 24, 23]


Solution : [7, 27, 24, 23] has cost 24.


Before backtrack at level 8
 pending : []
 solution : [7, 27, 24, 23]

After backtrack at level 8
 pending : [5, 29, 30, 39, 43, 44, 45, 46, 51, 38, 9, 36]
 solution : [7, 27, 24, 23]


Invert decision for 23 at level 7


New level: 8
 pending : [5, 29, 30, 39, 43, 44, 45, 46, 51, 38, 9, 36]
 solution : [7, 27, 24]


Before reduction : 
 pending  : [5, 29, 30, 39, 43, 44, 45, 46, 51, 38, 9, 36]
 solution : [7, 27, 24]

Essensial at level 8 : {9}

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 0), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, 0), (30, 0), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, 0), (37, -1), (38, 0), (39, 0), (40, -1), (41, -1), (42, -1), (43, 0), (44, 0), (45, 0), (46, 0), (47, -1), (48, -1), (49, -1), (50, -1), (51, 0), (52, -1)]

Covered at level 8 : {36, 5, 38, 39, 43, 44, 45, 46, 51, 29, 30}

After reduction : 
 pending  : []
 solution : [7, 27, 24, 9]


Before reduction : 
 pending  : []
 solution : [7, 27, 24, 9]

Essensial at level 8 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 0), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, 0), (30, 0), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, 0), (37, -1), (38, 0), (39, 0), (40, -1), (41, -1), (42, -1), (43, 0), (44, 0), (45, 0), (46, 0), (47, -1), (48, -1), (49, -1), (50, -1), (51, 0), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 8 : set()

After reduction : 
 pending  : []
 solution : [7, 27, 24, 9]


Solution : [7, 27, 24, 9] has cost 21.


Before backtrack at level 8
 pending : []
 solution : [7, 27, 24, 9]

After backtrack at level 8
 pending : [9, 5, 29, 30, 39, 43, 44, 45, 46, 51, 38, 36]
 solution : [7, 27, 24]


Before backtrack at level 7
 pending : [9, 5, 29, 30, 39, 43, 44, 45, 46, 51, 38, 36]
 solution : [7, 27, 24]

After backtrack at level 7
 pending : [9, 5, 29, 30, 39, 43, 44, 45, 46, 51, 38, 36, 31, 33, 37, 23]
 solution : [7, 27, 24]


Invert decision for 24 at level 6


New level: 7
 pending : [9, 5, 29, 30, 39, 43, 44, 45, 46, 51, 38, 36, 31, 33, 37, 23]
 solution : [7, 27]


Before reduction : 
 pending  : [9, 5, 29, 30, 39, 43, 44, 45, 46, 51, 38, 36, 31, 33, 37, 23]
 solution : [7, 27]

Essensial at level 7 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 262144), (6, -1), (7, -1), (8, -1), (9, 134217728), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, 134217728), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, 524288), (30, 4096), (31, 8192), (32, -1), (33, 4194304), (34, -1), (35, -1), (36, 2048), (37, 4096), (38, 67108864), (39, 2048), (40, -1), (41, -1), (42, -1), (43, 131072), (44, 131072), (45, 33554432), (46, 4194304), (47, -1), (48, -1), (49, -1), (50, -1), (51, 16777216), (52, -1)]

Covered at level 7 : set()

After reduction : 
 pending  : [9, 5, 29, 30, 39, 43, 44, 45, 46, 51, 38, 36, 31, 33, 37, 23]
 solution : [7, 27]


Solution : [7, 27] has cost 10.


Decide in level 7 among pending : [9, 5, 29, 30, 39, 43, 44, 45, 46, 51, 38, 36, 31, 33, 37, 23]

Coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 262144), (6, -1), (7, -1), (8, -1), (9, 134217728), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, 134217728), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, 524288), (30, 4096), (31, 8192), (32, -1), (33, 4194304), (34, -1), (35, -1), (36, 2048), (37, 4096), (38, 67108864), (39, 2048), (40, -1), (41, -1), (42, -1), (43, 131072), (44, 131072), (45, 33554432), (46, 4194304), (47, -1), (48, -1), (49, -1), (50, -1), (51, 16777216), (52, -1)]

Decide 9 with phase True at level 7

After decision at level 7
 pending : [5, 29, 30, 39, 43, 44, 45, 46, 51, 38, 36, 31, 33, 37, 23]
 solution : [7, 27, 9]


New level: 8
 pending : [5, 29, 30, 39, 43, 44, 45, 46, 51, 38, 36, 31, 33, 37, 23]
 solution : [7, 27, 9]


Before reduction : 
 pending  : [5, 29, 30, 39, 43, 44, 45, 46, 51, 38, 36, 31, 33, 37, 23]
 solution : [7, 27, 9]

Essensial at level 8 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 262144), (6, -1), (7, -1), (8, -1), (9, 134217728), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, 134217728), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, 524288), (30, 4096), (31, 8192), (32, -1), (33, 4194304), (34, -1), (35, -1), (36, 2048), (37, 4096), (38, 67108864), (39, 2048), (40, -1), (41, -1), (42, -1), (43, 131072), (44, 131072), (45, 33554432), (46, 4194304), (47, -1), (48, -1), (49, -1), (50, -1), (51, 16777216), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 0), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, 0), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, 0), (30, 0), (31, 0), (32, -1), (33, 0), (34, -1), (35, -1), (36, 0), (37, 0), (38, 0), (39, 0), (40, -1), (41, -1), (42, -1), (43, 0), (44, 0), (45, 0), (46, 0), (47, -1), (48, -1), (49, -1), (50, -1), (51, 0), (52, -1)]

Covered at level 8 : {33, 36, 5, 38, 39, 37, 43, 44, 45, 46, 51, 23, 29, 30, 31}

After reduction : 
 pending  : []
 solution : [7, 27, 9]


Before reduction : 
 pending  : []
 solution : [7, 27, 9]

Essensial at level 8 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 0), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, 0), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, 0), (30, 0), (31, 0), (32, -1), (33, 0), (34, -1), (35, -1), (36, 0), (37, 0), (38, 0), (39, 0), (40, -1), (41, -1), (42, -1), (43, 0), (44, 0), (45, 0), (46, 0), (47, -1), (48, -1), (49, -1), (50, -1), (51, 0), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 8 : set()

After reduction : 
 pending  : []
 solution : [7, 27, 9]


Solution : [7, 27, 9] has cost 14.


Before backtrack at level 8
 pending : []
 solution : [7, 27, 9]

After backtrack at level 8
 pending : [5, 29, 30, 39, 43, 44, 45, 46, 51, 38, 36, 31, 33, 37, 23]
 solution : [7, 27, 9]


Invert decision for 9 at level 7


New level: 8
 pending : [5, 29, 30, 39, 43, 44, 45, 46, 51, 38, 36, 31, 33, 37, 23]
 solution : [7, 27]


Before reduction : 
 pending  : [5, 29, 30, 39, 43, 44, 45, 46, 51, 38, 36, 31, 33, 37, 23]
 solution : [7, 27]

Essensial at level 8 : {23}

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 0), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, 0), (30, 0), (31, 0), (32, -1), (33, 0), (34, -1), (35, -1), (36, 0), (37, 0), (38, 0), (39, 0), (40, -1), (41, -1), (42, -1), (43, 0), (44, 0), (45, 0), (46, 0), (47, -1), (48, -1), (49, -1), (50, -1), (51, 0), (52, -1)]

Covered at level 8 : {33, 36, 5, 38, 39, 37, 43, 44, 45, 46, 51, 29, 30, 31}

After reduction : 
 pending  : []
 solution : [7, 27, 23]


Before reduction : 
 pending  : []
 solution : [7, 27, 23]

Essensial at level 8 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 0), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, 0), (30, 0), (31, 0), (32, -1), (33, 0), (34, -1), (35, -1), (36, 0), (37, 0), (38, 0), (39, 0), (40, -1), (41, -1), (42, -1), (43, 0), (44, 0), (45, 0), (46, 0), (47, -1), (48, -1), (49, -1), (50, -1), (51, 0), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 8 : set()

After reduction : 
 pending  : []
 solution : [7, 27, 23]


Solution : [7, 27, 23] has cost 17.


Before backtrack at level 8
 pending : []
 solution : [7, 27, 23]

After backtrack at level 8
 pending : [23, 5, 29, 30, 39, 43, 44, 45, 46, 51, 38, 36, 31, 33, 37]
 solution : [7, 27]


Before backtrack at level 7
 pending : [23, 5, 29, 30, 39, 43, 44, 45, 46, 51, 38, 36, 31, 33, 37]
 solution : [7, 27]

After backtrack at level 7
 pending : [23, 5, 29, 30, 39, 43, 44, 45, 46, 51, 38, 36, 31, 33, 37, 9]
 solution : [7, 27]


Before backtrack at level 6
 pending : [23, 5, 29, 30, 39, 43, 44, 45, 46, 51, 38, 36, 31, 33, 37, 9]
 solution : [7, 27]

After backtrack at level 6
 pending : [23, 5, 29, 30, 39, 43, 44, 45, 46, 51, 38, 36, 31, 33, 37, 9, 24]
 solution : [7, 27]


Before backtrack at level 5
 pending : [23, 5, 29, 30, 39, 43, 44, 45, 46, 51, 38, 36, 31, 33, 37, 9, 24]
 solution : [7, 27]

After backtrack at level 5
 pending : [23, 5, 29, 30, 39, 43, 44, 45, 46, 51, 38, 36, 31, 33, 37, 9, 24, 26, 41, 6, 21, 20, 17, 14, 19, 16, 18, 15, 13, 32]
 solution : [7, 27]


Invert decision for 27 at level 4


New level: 5
 pending : [23, 5, 29, 30, 39, 43, 44, 45, 46, 51, 38, 36, 31, 33, 37, 9, 24, 26, 41, 6, 21, 20, 17, 14, 19, 16, 18, 15, 13, 32]
 solution : [7]


Before reduction : 
 pending  : [23, 5, 29, 30, 39, 43, 44, 45, 46, 51, 38, 36, 31, 33, 37, 9, 24, 26, 41, 6, 21, 20, 17, 14, 19, 16, 18, 15, 13, 32]
 solution : [7]

Essensial at level 5 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 1048576), (6, 1048576), (7, -1), (8, -1), (9, 134217728), (10, -1), (11, -1), (12, -1), (13, 2147483648), (14, 8388608), (15, 1073741824), (16, 16777216), (17, 262144), (18, 67108864), (19, 33554432), (20, 524288), (21, 1114112), (22, -1), (23, 134217728), (24, 1073741824), (25, -1), (26, 4194304), (27, -1), (28, -1), (29, 1048576), (30, 16384), (31, 32768), (32, 2147483648), (33, 4194304), (34, -1), (35, -1), (36, 268435456), (37, 1073741824), (38, 134217728), (39, 16384), (40, -1), (41, 4194304), (42, -1), (43, 524288), (44, 524288), (45, 67108864), (46, 16777216), (47, -1), (48, -1), (49, -1), (50, -1), (51, 67108864), (52, -1)]

Covered at level 5 : set()

After reduction : 
 pending  : [23, 5, 29, 30, 39, 43, 44, 45, 46, 51, 38, 36, 31, 33, 37, 9, 24, 26, 41, 6, 21, 20, 17, 14, 19, 16, 18, 15, 13, 32]
 solution : [7]


Solution : [7] has cost 6.


Decide in level 5 among pending : [23, 5, 29, 30, 39, 43, 44, 45, 46, 51, 38, 36, 31, 33, 37, 9, 24, 26, 41, 6, 21, 20, 17, 14, 19, 16, 18, 15, 13, 32]

Coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 1048576), (6, 1048576), (7, -1), (8, -1), (9, 134217728), (10, -1), (11, -1), (12, -1), (13, 2147483648), (14, 8388608), (15, 1073741824), (16, 16777216), (17, 262144), (18, 67108864), (19, 33554432), (20, 524288), (21, 1114112), (22, -1), (23, 134217728), (24, 1073741824), (25, -1), (26, 4194304), (27, -1), (28, -1), (29, 1048576), (30, 16384), (31, 32768), (32, 2147483648), (33, 4194304), (34, -1), (35, -1), (36, 268435456), (37, 1073741824), (38, 134217728), (39, 16384), (40, -1), (41, 4194304), (42, -1), (43, 524288), (44, 524288), (45, 67108864), (46, 16777216), (47, -1), (48, -1), (49, -1), (50, -1), (51, 67108864), (52, -1)]

Decide 13 with phase True at level 5

After decision at level 5
 pending : [23, 5, 29, 30, 39, 43, 44, 45, 46, 51, 38, 36, 31, 33, 37, 9, 24, 26, 41, 6, 21, 20, 17, 14, 19, 16, 18, 15, 32]
 solution : [7, 13]


New level: 6
 pending : [23, 5, 29, 30, 39, 43, 44, 45, 46, 51, 38, 36, 31, 33, 37, 9, 24, 26, 41, 6, 21, 20, 17, 14, 19, 16, 18, 15, 32]
 solution : [7, 13]


Before reduction : 
 pending  : [23, 5, 29, 30, 39, 43, 44, 45, 46, 51, 38, 36, 31, 33, 37, 9, 24, 26, 41, 6, 21, 20, 17, 14, 19, 16, 18, 15, 32]
 solution : [7, 13]

Essensial at level 6 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 1048576), (6, 1048576), (7, -1), (8, -1), (9, 134217728), (10, -1), (11, -1), (12, -1), (13, 2147483648), (14, 8388608), (15, 1073741824), (16, 16777216), (17, 262144), (18, 67108864), (19, 33554432), (20, 524288), (21, 1114112), (22, -1), (23, 134217728), (24, 1073741824), (25, -1), (26, 4194304), (27, -1), (28, -1), (29, 1048576), (30, 16384), (31, 32768), (32, 2147483648), (33, 4194304), (34, -1), (35, -1), (36, 268435456), (37, 1073741824), (38, 134217728), (39, 16384), (40, -1), (41, 4194304), (42, -1), (43, 524288), (44, 524288), (45, 67108864), (46, 16777216), (47, -1), (48, -1), (49, -1), (50, -1), (51, 67108864), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 262144), (6, 0), (7, -1), (8, -1), (9, 134217728), (10, -1), (11, -1), (12, -1), (13, -1), (14, 0), (15, 0), (16, 0), (17, 0), (18, 0), (19, 0), (20, 0), (21, 0), (22, -1), (23, 134217728), (24, 1073741824), (25, -1), (26, 0), (27, -1), (28, -1), (29, 524288), (30, 4096), (31, 8192), (32, 2147483648), (33, 4194304), (34, -1), (35, -1), (36, 2048), (37, 4096), (38, 67108864), (39, 2048), (40, -1), (41, 0), (42, -1), (43, 131072), (44, 131072), (45, 33554432), (46, 4194304), (47, -1), (48, -1), (49, -1), (50, -1), (51, 67108864), (52, -1)]

Covered at level 6 : {6, 41, 14, 15, 16, 17, 18, 19, 20, 21, 26}

After reduction : 
 pending  : [23, 5, 29, 30, 39, 43, 44, 45, 46, 51, 38, 36, 31, 33, 37, 9, 24, 32]
 solution : [7, 13]


Before reduction : 
 pending  : [23, 5, 29, 30, 39, 43, 44, 45, 46, 51, 38, 36, 31, 33, 37, 9, 24, 32]
 solution : [7, 13]

Essensial at level 6 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 262144), (6, 0), (7, -1), (8, -1), (9, 134217728), (10, -1), (11, -1), (12, -1), (13, -1), (14, 0), (15, 0), (16, 0), (17, 0), (18, 0), (19, 0), (20, 0), (21, 0), (22, -1), (23, 134217728), (24, 1073741824), (25, -1), (26, 0), (27, -1), (28, -1), (29, 524288), (30, 4096), (31, 8192), (32, 2147483648), (33, 4194304), (34, -1), (35, -1), (36, 2048), (37, 4096), (38, 67108864), (39, 2048), (40, -1), (41, 0), (42, -1), (43, 131072), (44, 131072), (45, 33554432), (46, 4194304), (47, -1), (48, -1), (49, -1), (50, -1), (51, 67108864), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 262144), (6, -1), (7, -1), (8, -1), (9, 134217728), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, 134217728), (24, 1073741824), (25, -1), (26, -1), (27, -1), (28, -1), (29, 524288), (30, 4096), (31, 8192), (32, 2147483648), (33, 4194304), (34, -1), (35, -1), (36, 2048), (37, 4096), (38, 67108864), (39, 2048), (40, -1), (41, -1), (42, -1), (43, 131072), (44, 131072), (45, 33554432), (46, 4194304), (47, -1), (48, -1), (49, -1), (50, -1), (51, 67108864), (52, -1)]

Covered at level 6 : set()

After reduction : 
 pending  : [23, 5, 29, 30, 39, 43, 44, 45, 46, 51, 38, 36, 31, 33, 37, 9, 24, 32]
 solution : [7, 13]


Solution : [7, 13] has cost 13.


Decide in level 6 among pending : [23, 5, 29, 30, 39, 43, 44, 45, 46, 51, 38, 36, 31, 33, 37, 9, 24, 32]

Coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 262144), (6, -1), (7, -1), (8, -1), (9, 134217728), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, 134217728), (24, 1073741824), (25, -1), (26, -1), (27, -1), (28, -1), (29, 524288), (30, 4096), (31, 8192), (32, 2147483648), (33, 4194304), (34, -1), (35, -1), (36, 2048), (37, 4096), (38, 67108864), (39, 2048), (40, -1), (41, -1), (42, -1), (43, 131072), (44, 131072), (45, 33554432), (46, 4194304), (47, -1), (48, -1), (49, -1), (50, -1), (51, 67108864), (52, -1)]

Decide 32 with phase True at level 6

After decision at level 6
 pending : [23, 5, 29, 30, 39, 43, 44, 45, 46, 51, 38, 36, 31, 33, 37, 9, 24]
 solution : [7, 13, 32]


New level: 7
 pending : [23, 5, 29, 30, 39, 43, 44, 45, 46, 51, 38, 36, 31, 33, 37, 9, 24]
 solution : [7, 13, 32]


Before reduction : 
 pending  : [23, 5, 29, 30, 39, 43, 44, 45, 46, 51, 38, 36, 31, 33, 37, 9, 24]
 solution : [7, 13, 32]

Essensial at level 7 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 262144), (6, -1), (7, -1), (8, -1), (9, 134217728), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, 134217728), (24, 1073741824), (25, -1), (26, -1), (27, -1), (28, -1), (29, 524288), (30, 4096), (31, 8192), (32, 2147483648), (33, 4194304), (34, -1), (35, -1), (36, 2048), (37, 4096), (38, 67108864), (39, 2048), (40, -1), (41, -1), (42, -1), (43, 131072), (44, 131072), (45, 33554432), (46, 4194304), (47, -1), (48, -1), (49, -1), (50, -1), (51, 67108864), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 65536), (6, -1), (7, -1), (8, -1), (9, 134217728), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, 134217728), (24, 4096), (25, -1), (26, -1), (27, -1), (28, -1), (29, 131072), (30, 1024), (31, 0), (32, -1), (33, 0), (34, -1), (35, -1), (36, 512), (37, 0), (38, 16777216), (39, 512), (40, -1), (41, -1), (42, -1), (43, 32768), (44, 32768), (45, 8388608), (46, 1048576), (47, -1), (48, -1), (49, -1), (50, -1), (51, 16777216), (52, -1)]

Covered at level 7 : {33, 37, 31}

After reduction : 
 pending  : [23, 5, 29, 30, 39, 43, 44, 45, 46, 51, 38, 36, 9, 24]
 solution : [7, 13, 32]


Before reduction : 
 pending  : [23, 5, 29, 30, 39, 43, 44, 45, 46, 51, 38, 36, 9, 24]
 solution : [7, 13, 32]

Essensial at level 7 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 65536), (6, -1), (7, -1), (8, -1), (9, 134217728), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, 134217728), (24, 4096), (25, -1), (26, -1), (27, -1), (28, -1), (29, 131072), (30, 1024), (31, 0), (32, -1), (33, 0), (34, -1), (35, -1), (36, 512), (37, 0), (38, 16777216), (39, 512), (40, -1), (41, -1), (42, -1), (43, 32768), (44, 32768), (45, 8388608), (46, 1048576), (47, -1), (48, -1), (49, -1), (50, -1), (51, 16777216), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 65536), (6, -1), (7, -1), (8, -1), (9, 134217728), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, 134217728), (24, 4096), (25, -1), (26, -1), (27, -1), (28, -1), (29, 131072), (30, 1024), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, 512), (37, -1), (38, 16777216), (39, 512), (40, -1), (41, -1), (42, -1), (43, 32768), (44, 32768), (45, 8388608), (46, 1048576), (47, -1), (48, -1), (49, -1), (50, -1), (51, 16777216), (52, -1)]

Covered at level 7 : set()

After reduction : 
 pending  : [23, 5, 29, 30, 39, 43, 44, 45, 46, 51, 38, 36, 9, 24]
 solution : [7, 13, 32]


Solution : [7, 13, 32] has cost 26.


Before backtrack at level 7
 pending : [23, 5, 29, 30, 39, 43, 44, 45, 46, 51, 38, 36, 9, 24]
 solution : [7, 13, 32]

After backtrack at level 7
 pending : [23, 5, 29, 30, 39, 43, 44, 45, 46, 51, 38, 36, 9, 24, 31, 33, 37]
 solution : [7, 13, 32]


Invert decision for 32 at level 6


New level: 7
 pending : [23, 5, 29, 30, 39, 43, 44, 45, 46, 51, 38, 36, 9, 24, 31, 33, 37]
 solution : [7, 13]


Before reduction : 
 pending  : [23, 5, 29, 30, 39, 43, 44, 45, 46, 51, 38, 36, 9, 24, 31, 33, 37]
 solution : [7, 13]

Essensial at level 7 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 65536), (6, -1), (7, -1), (8, -1), (9, 134217728), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, 134217728), (24, 4096), (25, -1), (26, -1), (27, -1), (28, -1), (29, 131072), (30, 1024), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, 512), (37, -1), (38, 16777216), (39, 512), (40, -1), (41, -1), (42, -1), (43, 32768), (44, 32768), (45, 8388608), (46, 1048576), (47, -1), (48, -1), (49, -1), (50, -1), (51, 16777216), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 262144), (6, -1), (7, -1), (8, -1), (9, 134217728), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, 134217728), (24, 1073741824), (25, -1), (26, -1), (27, -1), (28, -1), (29, 524288), (30, 4096), (31, 8192), (32, -1), (33, 4194304), (34, -1), (35, -1), (36, 2048), (37, 4096), (38, 67108864), (39, 2048), (40, -1), (41, -1), (42, -1), (43, 131072), (44, 131072), (45, 33554432), (46, 4194304), (47, -1), (48, -1), (49, -1), (50, -1), (51, 67108864), (52, -1)]

Covered at level 7 : set()

After reduction : 
 pending  : [23, 5, 29, 30, 39, 43, 44, 45, 46, 51, 38, 36, 9, 24, 31, 33, 37]
 solution : [7, 13]


Solution : [7, 13] has cost 13.


Decide in level 7 among pending : [23, 5, 29, 30, 39, 43, 44, 45, 46, 51, 38, 36, 9, 24, 31, 33, 37]

Coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 262144), (6, -1), (7, -1), (8, -1), (9, 134217728), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, 134217728), (24, 1073741824), (25, -1), (26, -1), (27, -1), (28, -1), (29, 524288), (30, 4096), (31, 8192), (32, -1), (33, 4194304), (34, -1), (35, -1), (36, 2048), (37, 4096), (38, 67108864), (39, 2048), (40, -1), (41, -1), (42, -1), (43, 131072), (44, 131072), (45, 33554432), (46, 4194304), (47, -1), (48, -1), (49, -1), (50, -1), (51, 67108864), (52, -1)]

Decide 24 with phase True at level 7

After decision at level 7
 pending : [23, 5, 29, 30, 39, 43, 44, 45, 46, 51, 38, 36, 9, 31, 33, 37]
 solution : [7, 13, 24]


New level: 8
 pending : [23, 5, 29, 30, 39, 43, 44, 45, 46, 51, 38, 36, 9, 31, 33, 37]
 solution : [7, 13, 24]


Before reduction : 
 pending  : [23, 5, 29, 30, 39, 43, 44, 45, 46, 51, 38, 36, 9, 31, 33, 37]
 solution : [7, 13, 24]

Essensial at level 8 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 262144), (6, -1), (7, -1), (8, -1), (9, 134217728), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, 134217728), (24, 1073741824), (25, -1), (26, -1), (27, -1), (28, -1), (29, 524288), (30, 4096), (31, 8192), (32, -1), (33, 4194304), (34, -1), (35, -1), (36, 2048), (37, 4096), (38, 67108864), (39, 2048), (40, -1), (41, -1), (42, -1), (43, 131072), (44, 131072), (45, 33554432), (46, 4194304), (47, -1), (48, -1), (49, -1), (50, -1), (51, 67108864), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 65536), (6, -1), (7, -1), (8, -1), (9, 33554432), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, 33554432), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, 131072), (30, 1024), (31, 0), (32, -1), (33, 0), (34, -1), (35, -1), (36, 512), (37, 0), (38, 33554432), (39, 512), (40, -1), (41, -1), (42, -1), (43, 32768), (44, 32768), (45, 16777216), (46, 1048576), (47, -1), (48, -1), (49, -1), (50, -1), (51, 33554432), (52, -1)]

Covered at level 8 : {33, 37, 31}

After reduction : 
 pending  : [23, 5, 29, 30, 39, 43, 44, 45, 46, 51, 38, 36, 9]
 solution : [7, 13, 24]


Before reduction : 
 pending  : [23, 5, 29, 30, 39, 43, 44, 45, 46, 51, 38, 36, 9]
 solution : [7, 13, 24]

Essensial at level 8 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 65536), (6, -1), (7, -1), (8, -1), (9, 33554432), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, 33554432), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, 131072), (30, 1024), (31, 0), (32, -1), (33, 0), (34, -1), (35, -1), (36, 512), (37, 0), (38, 33554432), (39, 512), (40, -1), (41, -1), (42, -1), (43, 32768), (44, 32768), (45, 16777216), (46, 1048576), (47, -1), (48, -1), (49, -1), (50, -1), (51, 33554432), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 65536), (6, -1), (7, -1), (8, -1), (9, 33554432), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, 33554432), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, 131072), (30, 1024), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, 512), (37, -1), (38, 33554432), (39, 512), (40, -1), (41, -1), (42, -1), (43, 32768), (44, 32768), (45, 16777216), (46, 1048576), (47, -1), (48, -1), (49, -1), (50, -1), (51, 33554432), (52, -1)]

Covered at level 8 : set()

After reduction : 
 pending  : [23, 5, 29, 30, 39, 43, 44, 45, 46, 51, 38, 36, 9]
 solution : [7, 13, 24]


Solution : [7, 13, 24] has cost 20.


Before backtrack at level 8
 pending : [23, 5, 29, 30, 39, 43, 44, 45, 46, 51, 38, 36, 9]
 solution : [7, 13, 24]

After backtrack at level 8
 pending : [23, 5, 29, 30, 39, 43, 44, 45, 46, 51, 38, 36, 9, 31, 33, 37]
 solution : [7, 13, 24]


Invert decision for 24 at level 7


New level: 8
 pending : [23, 5, 29, 30, 39, 43, 44, 45, 46, 51, 38, 36, 9, 31, 33, 37]
 solution : [7, 13]


Before reduction : 
 pending  : [23, 5, 29, 30, 39, 43, 44, 45, 46, 51, 38, 36, 9, 31, 33, 37]
 solution : [7, 13]

Essensial at level 8 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 65536), (6, -1), (7, -1), (8, -1), (9, 33554432), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, 33554432), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, 131072), (30, 1024), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, 512), (37, -1), (38, 33554432), (39, 512), (40, -1), (41, -1), (42, -1), (43, 32768), (44, 32768), (45, 16777216), (46, 1048576), (47, -1), (48, -1), (49, -1), (50, -1), (51, 33554432), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 262144), (6, -1), (7, -1), (8, -1), (9, 134217728), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, 134217728), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, 524288), (30, 4096), (31, 8192), (32, -1), (33, 4194304), (34, -1), (35, -1), (36, 2048), (37, 4096), (38, 67108864), (39, 2048), (40, -1), (41, -1), (42, -1), (43, 131072), (44, 131072), (45, 33554432), (46, 4194304), (47, -1), (48, -1), (49, -1), (50, -1), (51, 67108864), (52, -1)]

Covered at level 8 : set()

After reduction : 
 pending  : [23, 5, 29, 30, 39, 43, 44, 45, 46, 51, 38, 36, 9, 31, 33, 37]
 solution : [7, 13]


Solution : [7, 13] has cost 13.


Decide in level 8 among pending : [23, 5, 29, 30, 39, 43, 44, 45, 46, 51, 38, 36, 9, 31, 33, 37]

Coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 262144), (6, -1), (7, -1), (8, -1), (9, 134217728), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, 134217728), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, 524288), (30, 4096), (31, 8192), (32, -1), (33, 4194304), (34, -1), (35, -1), (36, 2048), (37, 4096), (38, 67108864), (39, 2048), (40, -1), (41, -1), (42, -1), (43, 131072), (44, 131072), (45, 33554432), (46, 4194304), (47, -1), (48, -1), (49, -1), (50, -1), (51, 67108864), (52, -1)]

Decide 23 with phase True at level 8

After decision at level 8
 pending : [5, 29, 30, 39, 43, 44, 45, 46, 51, 38, 36, 9, 31, 33, 37]
 solution : [7, 13, 23]


New level: 9
 pending : [5, 29, 30, 39, 43, 44, 45, 46, 51, 38, 36, 9, 31, 33, 37]
 solution : [7, 13, 23]


Before reduction : 
 pending  : [5, 29, 30, 39, 43, 44, 45, 46, 51, 38, 36, 9, 31, 33, 37]
 solution : [7, 13, 23]

Essensial at level 9 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 262144), (6, -1), (7, -1), (8, -1), (9, 134217728), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, 134217728), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, 524288), (30, 4096), (31, 8192), (32, -1), (33, 4194304), (34, -1), (35, -1), (36, 2048), (37, 4096), (38, 67108864), (39, 2048), (40, -1), (41, -1), (42, -1), (43, 131072), (44, 131072), (45, 33554432), (46, 4194304), (47, -1), (48, -1), (49, -1), (50, -1), (51, 67108864), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 0), (6, -1), (7, -1), (8, -1), (9, 0), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, 0), (30, 0), (31, 0), (32, -1), (33, 0), (34, -1), (35, -1), (36, 0), (37, 0), (38, 0), (39, 0), (40, -1), (41, -1), (42, -1), (43, 0), (44, 0), (45, 0), (46, 0), (47, -1), (48, -1), (49, -1), (50, -1), (51, 0), (52, -1)]

Covered at level 9 : {33, 36, 5, 38, 39, 37, 9, 43, 44, 45, 46, 51, 29, 30, 31}

After reduction : 
 pending  : []
 solution : [7, 13, 23]


Before reduction : 
 pending  : []
 solution : [7, 13, 23]

Essensial at level 9 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 0), (6, -1), (7, -1), (8, -1), (9, 0), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, 0), (30, 0), (31, 0), (32, -1), (33, 0), (34, -1), (35, -1), (36, 0), (37, 0), (38, 0), (39, 0), (40, -1), (41, -1), (42, -1), (43, 0), (44, 0), (45, 0), (46, 0), (47, -1), (48, -1), (49, -1), (50, -1), (51, 0), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 9 : set()

After reduction : 
 pending  : []
 solution : [7, 13, 23]


Solution : [7, 13, 23] has cost 20.


Before backtrack at level 9
 pending : []
 solution : [7, 13, 23]

After backtrack at level 9
 pending : [5, 29, 30, 39, 43, 44, 45, 46, 51, 38, 36, 9, 31, 33, 37]
 solution : [7, 13, 23]


Invert decision for 23 at level 8


New level: 9
 pending : [5, 29, 30, 39, 43, 44, 45, 46, 51, 38, 36, 9, 31, 33, 37]
 solution : [7, 13]


Before reduction : 
 pending  : [5, 29, 30, 39, 43, 44, 45, 46, 51, 38, 36, 9, 31, 33, 37]
 solution : [7, 13]

Essensial at level 9 : {9}

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 0), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, 0), (30, 0), (31, 0), (32, -1), (33, 0), (34, -1), (35, -1), (36, 0), (37, 0), (38, 0), (39, 0), (40, -1), (41, -1), (42, -1), (43, 0), (44, 0), (45, 0), (46, 0), (47, -1), (48, -1), (49, -1), (50, -1), (51, 0), (52, -1)]

Covered at level 9 : {33, 36, 5, 38, 39, 37, 43, 44, 45, 46, 51, 29, 30, 31}

After reduction : 
 pending  : []
 solution : [7, 13, 9]


Before reduction : 
 pending  : []
 solution : [7, 13, 9]

Essensial at level 9 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 0), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, 0), (30, 0), (31, 0), (32, -1), (33, 0), (34, -1), (35, -1), (36, 0), (37, 0), (38, 0), (39, 0), (40, -1), (41, -1), (42, -1), (43, 0), (44, 0), (45, 0), (46, 0), (47, -1), (48, -1), (49, -1), (50, -1), (51, 0), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 9 : set()

After reduction : 
 pending  : []
 solution : [7, 13, 9]


Solution : [7, 13, 9] has cost 17.


Before backtrack at level 9
 pending : []
 solution : [7, 13, 9]

After backtrack at level 9
 pending : [9, 5, 29, 30, 39, 43, 44, 45, 46, 51, 38, 36, 31, 33, 37]
 solution : [7, 13]


Before backtrack at level 8
 pending : [9, 5, 29, 30, 39, 43, 44, 45, 46, 51, 38, 36, 31, 33, 37]
 solution : [7, 13]

After backtrack at level 8
 pending : [9, 5, 29, 30, 39, 43, 44, 45, 46, 51, 38, 36, 31, 33, 37, 23]
 solution : [7, 13]


Before backtrack at level 7
 pending : [9, 5, 29, 30, 39, 43, 44, 45, 46, 51, 38, 36, 31, 33, 37, 23]
 solution : [7, 13]

After backtrack at level 7
 pending : [9, 5, 29, 30, 39, 43, 44, 45, 46, 51, 38, 36, 31, 33, 37, 23, 24]
 solution : [7, 13]


Before backtrack at level 6
 pending : [9, 5, 29, 30, 39, 43, 44, 45, 46, 51, 38, 36, 31, 33, 37, 23, 24]
 solution : [7, 13]

After backtrack at level 6
 pending : [9, 5, 29, 30, 39, 43, 44, 45, 46, 51, 38, 36, 31, 33, 37, 23, 24, 26, 41, 6, 21, 20, 17, 14, 19, 16, 18, 15, 32]
 solution : [7, 13]


Invert decision for 13 at level 5


New level: 6
 pending : [9, 5, 29, 30, 39, 43, 44, 45, 46, 51, 38, 36, 31, 33, 37, 23, 24, 26, 41, 6, 21, 20, 17, 14, 19, 16, 18, 15, 32]
 solution : [7]


Before reduction : 
 pending  : [9, 5, 29, 30, 39, 43, 44, 45, 46, 51, 38, 36, 31, 33, 37, 23, 24, 26, 41, 6, 21, 20, 17, 14, 19, 16, 18, 15, 32]
 solution : [7]

Essensial at level 6 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 1048576), (6, 1048576), (7, -1), (8, -1), (9, 134217728), (10, -1), (11, -1), (12, -1), (13, -1), (14, 8388608), (15, 1073741824), (16, 16777216), (17, 262144), (18, 67108864), (19, 33554432), (20, 524288), (21, 1114112), (22, -1), (23, 134217728), (24, 1073741824), (25, -1), (26, 4194304), (27, -1), (28, -1), (29, 1048576), (30, 16384), (31, 32768), (32, 2147483648), (33, 4194304), (34, -1), (35, -1), (36, 268435456), (37, 1073741824), (38, 134217728), (39, 16384), (40, -1), (41, 4194304), (42, -1), (43, 524288), (44, 524288), (45, 67108864), (46, 16777216), (47, -1), (48, -1), (49, -1), (50, -1), (51, 67108864), (52, -1)]

Covered at level 6 : set()

After reduction : 
 pending  : [9, 5, 29, 30, 39, 43, 44, 45, 46, 51, 38, 36, 31, 33, 37, 23, 24, 26, 41, 6, 21, 20, 17, 14, 19, 16, 18, 15, 32]
 solution : [7]


Solution : [7] has cost 6.


Decide in level 6 among pending : [9, 5, 29, 30, 39, 43, 44, 45, 46, 51, 38, 36, 31, 33, 37, 23, 24, 26, 41, 6, 21, 20, 17, 14, 19, 16, 18, 15, 32]

Coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 1048576), (6, 1048576), (7, -1), (8, -1), (9, 134217728), (10, -1), (11, -1), (12, -1), (13, -1), (14, 8388608), (15, 1073741824), (16, 16777216), (17, 262144), (18, 67108864), (19, 33554432), (20, 524288), (21, 1114112), (22, -1), (23, 134217728), (24, 1073741824), (25, -1), (26, 4194304), (27, -1), (28, -1), (29, 1048576), (30, 16384), (31, 32768), (32, 2147483648), (33, 4194304), (34, -1), (35, -1), (36, 268435456), (37, 1073741824), (38, 134217728), (39, 16384), (40, -1), (41, 4194304), (42, -1), (43, 524288), (44, 524288), (45, 67108864), (46, 16777216), (47, -1), (48, -1), (49, -1), (50, -1), (51, 67108864), (52, -1)]

Decide 32 with phase True at level 6

After decision at level 6
 pending : [9, 5, 29, 30, 39, 43, 44, 45, 46, 51, 38, 36, 31, 33, 37, 23, 24, 26, 41, 6, 21, 20, 17, 14, 19, 16, 18, 15]
 solution : [7, 32]


New level: 7
 pending : [9, 5, 29, 30, 39, 43, 44, 45, 46, 51, 38, 36, 31, 33, 37, 23, 24, 26, 41, 6, 21, 20, 17, 14, 19, 16, 18, 15]
 solution : [7, 32]


Before reduction : 
 pending  : [9, 5, 29, 30, 39, 43, 44, 45, 46, 51, 38, 36, 31, 33, 37, 23, 24, 26, 41, 6, 21, 20, 17, 14, 19, 16, 18, 15]
 solution : [7, 32]

Essensial at level 7 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 1048576), (6, 1048576), (7, -1), (8, -1), (9, 134217728), (10, -1), (11, -1), (12, -1), (13, -1), (14, 8388608), (15, 1073741824), (16, 16777216), (17, 262144), (18, 67108864), (19, 33554432), (20, 524288), (21, 1114112), (22, -1), (23, 134217728), (24, 1073741824), (25, -1), (26, 4194304), (27, -1), (28, -1), (29, 1048576), (30, 16384), (31, 32768), (32, 2147483648), (33, 4194304), (34, -1), (35, -1), (36, 268435456), (37, 1073741824), (38, 134217728), (39, 16384), (40, -1), (41, 4194304), (42, -1), (43, 524288), (44, 524288), (45, 67108864), (46, 16777216), (47, -1), (48, -1), (49, -1), (50, -1), (51, 67108864), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 262144), (6, 1048576), (7, -1), (8, -1), (9, 134217728), (10, -1), (11, -1), (12, -1), (13, -1), (14, 8388608), (15, 1073741824), (16, 16777216), (17, 262144), (18, 67108864), (19, 33554432), (20, 524288), (21, 1114112), (22, -1), (23, 134217728), (24, 32768), (25, -1), (26, 4194304), (27, -1), (28, -1), (29, 262144), (30, 4096), (31, 0), (32, -1), (33, 0), (34, -1), (35, -1), (36, 268435456), (37, 32768), (38, 33554432), (39, 4096), (40, -1), (41, 4194304), (42, -1), (43, 131072), (44, 131072), (45, 16777216), (46, 4194304), (47, -1), (48, -1), (49, -1), (50, -1), (51, 16777216), (52, -1)]

Covered at level 7 : {33, 31}

After reduction : 
 pending  : [9, 5, 29, 30, 39, 43, 44, 45, 46, 51, 38, 36, 37, 23, 24, 26, 41, 6, 21, 20, 17, 14, 19, 16, 18, 15]
 solution : [7, 32]


Before reduction : 
 pending  : [9, 5, 29, 30, 39, 43, 44, 45, 46, 51, 38, 36, 37, 23, 24, 26, 41, 6, 21, 20, 17, 14, 19, 16, 18, 15]
 solution : [7, 32]

Essensial at level 7 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 262144), (6, 1048576), (7, -1), (8, -1), (9, 134217728), (10, -1), (11, -1), (12, -1), (13, -1), (14, 8388608), (15, 1073741824), (16, 16777216), (17, 262144), (18, 67108864), (19, 33554432), (20, 524288), (21, 1114112), (22, -1), (23, 134217728), (24, 32768), (25, -1), (26, 4194304), (27, -1), (28, -1), (29, 262144), (30, 4096), (31, 0), (32, -1), (33, 0), (34, -1), (35, -1), (36, 268435456), (37, 32768), (38, 33554432), (39, 4096), (40, -1), (41, 4194304), (42, -1), (43, 131072), (44, 131072), (45, 16777216), (46, 4194304), (47, -1), (48, -1), (49, -1), (50, -1), (51, 16777216), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 262144), (6, 1048576), (7, -1), (8, -1), (9, 134217728), (10, -1), (11, -1), (12, -1), (13, -1), (14, 8388608), (15, 1073741824), (16, 16777216), (17, 262144), (18, 67108864), (19, 33554432), (20, 524288), (21, 1114112), (22, -1), (23, 134217728), (24, 32768), (25, -1), (26, 4194304), (27, -1), (28, -1), (29, 262144), (30, 4096), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, 268435456), (37, 32768), (38, 33554432), (39, 4096), (40, -1), (41, 4194304), (42, -1), (43, 131072), (44, 131072), (45, 16777216), (46, 4194304), (47, -1), (48, -1), (49, -1), (50, -1), (51, 16777216), (52, -1)]

Covered at level 7 : set()

After reduction : 
 pending  : [9, 5, 29, 30, 39, 43, 44, 45, 46, 51, 38, 36, 37, 23, 24, 26, 41, 6, 21, 20, 17, 14, 19, 16, 18, 15]
 solution : [7, 32]


Solution : [7, 32] has cost 19.


Before backtrack at level 7
 pending : [9, 5, 29, 30, 39, 43, 44, 45, 46, 51, 38, 36, 37, 23, 24, 26, 41, 6, 21, 20, 17, 14, 19, 16, 18, 15]
 solution : [7, 32]

After backtrack at level 7
 pending : [9, 5, 29, 30, 39, 43, 44, 45, 46, 51, 38, 36, 37, 23, 24, 26, 41, 6, 21, 20, 17, 14, 19, 16, 18, 15, 31, 33]
 solution : [7, 32]


Invert decision for 32 at level 6


New level: 7
 pending : [9, 5, 29, 30, 39, 43, 44, 45, 46, 51, 38, 36, 37, 23, 24, 26, 41, 6, 21, 20, 17, 14, 19, 16, 18, 15, 31, 33]
 solution : [7]


Before reduction : 
 pending  : [9, 5, 29, 30, 39, 43, 44, 45, 46, 51, 38, 36, 37, 23, 24, 26, 41, 6, 21, 20, 17, 14, 19, 16, 18, 15, 31, 33]
 solution : [7]

Essensial at level 7 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 262144), (6, 1048576), (7, -1), (8, -1), (9, 134217728), (10, -1), (11, -1), (12, -1), (13, -1), (14, 8388608), (15, 1073741824), (16, 16777216), (17, 262144), (18, 67108864), (19, 33554432), (20, 524288), (21, 1114112), (22, -1), (23, 134217728), (24, 32768), (25, -1), (26, 4194304), (27, -1), (28, -1), (29, 262144), (30, 4096), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, 268435456), (37, 32768), (38, 33554432), (39, 4096), (40, -1), (41, 4194304), (42, -1), (43, 131072), (44, 131072), (45, 16777216), (46, 4194304), (47, -1), (48, -1), (49, -1), (50, -1), (51, 16777216), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 1048576), (6, 1048576), (7, -1), (8, -1), (9, 134217728), (10, -1), (11, -1), (12, -1), (13, -1), (14, 8388608), (15, 1073741824), (16, 16777216), (17, 262144), (18, 67108864), (19, 33554432), (20, 524288), (21, 1114112), (22, -1), (23, 134217728), (24, 1073741824), (25, -1), (26, 4194304), (27, -1), (28, -1), (29, 1048576), (30, 16384), (31, 32768), (32, -1), (33, 4194304), (34, -1), (35, -1), (36, 268435456), (37, 1073741824), (38, 134217728), (39, 16384), (40, -1), (41, 4194304), (42, -1), (43, 524288), (44, 524288), (45, 67108864), (46, 16777216), (47, -1), (48, -1), (49, -1), (50, -1), (51, 67108864), (52, -1)]

Covered at level 7 : set()

After reduction : 
 pending  : [9, 5, 29, 30, 39, 43, 44, 45, 46, 51, 38, 36, 37, 23, 24, 26, 41, 6, 21, 20, 17, 14, 19, 16, 18, 15, 31, 33]
 solution : [7]


Solution : [7] has cost 6.


Decide in level 7 among pending : [9, 5, 29, 30, 39, 43, 44, 45, 46, 51, 38, 36, 37, 23, 24, 26, 41, 6, 21, 20, 17, 14, 19, 16, 18, 15, 31, 33]

Coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 1048576), (6, 1048576), (7, -1), (8, -1), (9, 134217728), (10, -1), (11, -1), (12, -1), (13, -1), (14, 8388608), (15, 1073741824), (16, 16777216), (17, 262144), (18, 67108864), (19, 33554432), (20, 524288), (21, 1114112), (22, -1), (23, 134217728), (24, 1073741824), (25, -1), (26, 4194304), (27, -1), (28, -1), (29, 1048576), (30, 16384), (31, 32768), (32, -1), (33, 4194304), (34, -1), (35, -1), (36, 268435456), (37, 1073741824), (38, 134217728), (39, 16384), (40, -1), (41, 4194304), (42, -1), (43, 524288), (44, 524288), (45, 67108864), (46, 16777216), (47, -1), (48, -1), (49, -1), (50, -1), (51, 67108864), (52, -1)]

Decide 37 with phase True at level 7

After decision at level 7
 pending : [9, 5, 29, 30, 39, 43, 44, 45, 46, 51, 38, 36, 23, 24, 26, 41, 6, 21, 20, 17, 14, 19, 16, 18, 15, 31, 33]
 solution : [7, 37]


New level: 8
 pending : [9, 5, 29, 30, 39, 43, 44, 45, 46, 51, 38, 36, 23, 24, 26, 41, 6, 21, 20, 17, 14, 19, 16, 18, 15, 31, 33]
 solution : [7, 37]


Before reduction : 
 pending  : [9, 5, 29, 30, 39, 43, 44, 45, 46, 51, 38, 36, 23, 24, 26, 41, 6, 21, 20, 17, 14, 19, 16, 18, 15, 31, 33]
 solution : [7, 37]

Essensial at level 8 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 1048576), (6, 1048576), (7, -1), (8, -1), (9, 134217728), (10, -1), (11, -1), (12, -1), (13, -1), (14, 8388608), (15, 1073741824), (16, 16777216), (17, 262144), (18, 67108864), (19, 33554432), (20, 524288), (21, 1114112), (22, -1), (23, 134217728), (24, 1073741824), (25, -1), (26, 4194304), (27, -1), (28, -1), (29, 1048576), (30, 16384), (31, 32768), (32, -1), (33, 4194304), (34, -1), (35, -1), (36, 268435456), (37, 1073741824), (38, 134217728), (39, 16384), (40, -1), (41, 4194304), (42, -1), (43, 524288), (44, 524288), (45, 67108864), (46, 16777216), (47, -1), (48, -1), (49, -1), (50, -1), (51, 67108864), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 1048576), (6, 1048576), (7, -1), (8, -1), (9, 134217728), (10, -1), (11, -1), (12, -1), (13, -1), (14, 8388608), (15, 1073741824), (16, 16777216), (17, 262144), (18, 67108864), (19, 33554432), (20, 524288), (21, 1114112), (22, -1), (23, 134217728), (24, 536870912), (25, -1), (26, 4194304), (27, -1), (28, -1), (29, 1048576), (30, 16384), (31, 16384), (32, -1), (33, 2097152), (34, -1), (35, -1), (36, 134217728), (37, -1), (38, 134217728), (39, 16384), (40, -1), (41, 4194304), (42, -1), (43, 524288), (44, 524288), (45, 67108864), (46, 16777216), (47, -1), (48, -1), (49, -1), (50, -1), (51, 67108864), (52, -1)]

Covered at level 8 : set()

After reduction : 
 pending  : [9, 5, 29, 30, 39, 43, 44, 45, 46, 51, 38, 36, 23, 24, 26, 41, 6, 21, 20, 17, 14, 19, 16, 18, 15, 31, 33]
 solution : [7, 37]


Solution : [7, 37] has cost 20.


Before backtrack at level 8
 pending : [9, 5, 29, 30, 39, 43, 44, 45, 46, 51, 38, 36, 23, 24, 26, 41, 6, 21, 20, 17, 14, 19, 16, 18, 15, 31, 33]
 solution : [7, 37]

After backtrack at level 8
 pending : [9, 5, 29, 30, 39, 43, 44, 45, 46, 51, 38, 36, 23, 24, 26, 41, 6, 21, 20, 17, 14, 19, 16, 18, 15, 31, 33]
 solution : [7, 37]


Invert decision for 37 at level 7


New level: 8
 pending : [9, 5, 29, 30, 39, 43, 44, 45, 46, 51, 38, 36, 23, 24, 26, 41, 6, 21, 20, 17, 14, 19, 16, 18, 15, 31, 33]
 solution : [7]


Before reduction : 
 pending  : [9, 5, 29, 30, 39, 43, 44, 45, 46, 51, 38, 36, 23, 24, 26, 41, 6, 21, 20, 17, 14, 19, 16, 18, 15, 31, 33]
 solution : [7]

Essensial at level 8 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 1048576), (6, 1048576), (7, -1), (8, -1), (9, 134217728), (10, -1), (11, -1), (12, -1), (13, -1), (14, 8388608), (15, 1073741824), (16, 16777216), (17, 262144), (18, 67108864), (19, 33554432), (20, 524288), (21, 1114112), (22, -1), (23, 134217728), (24, 536870912), (25, -1), (26, 4194304), (27, -1), (28, -1), (29, 1048576), (30, 16384), (31, 16384), (32, -1), (33, 2097152), (34, -1), (35, -1), (36, 134217728), (37, -1), (38, 134217728), (39, 16384), (40, -1), (41, 4194304), (42, -1), (43, 524288), (44, 524288), (45, 67108864), (46, 16777216), (47, -1), (48, -1), (49, -1), (50, -1), (51, 67108864), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 1048576), (6, 1048576), (7, -1), (8, -1), (9, 134217728), (10, -1), (11, -1), (12, -1), (13, -1), (14, 8388608), (15, 1073741824), (16, 16777216), (17, 262144), (18, 67108864), (19, 33554432), (20, 524288), (21, 1114112), (22, -1), (23, 134217728), (24, 1073741824), (25, -1), (26, 4194304), (27, -1), (28, -1), (29, 1048576), (30, 16384), (31, 32768), (32, -1), (33, 4194304), (34, -1), (35, -1), (36, 268435456), (37, -1), (38, 134217728), (39, 16384), (40, -1), (41, 4194304), (42, -1), (43, 524288), (44, 524288), (45, 67108864), (46, 16777216), (47, -1), (48, -1), (49, -1), (50, -1), (51, 67108864), (52, -1)]

Covered at level 8 : set()

After reduction : 
 pending  : [9, 5, 29, 30, 39, 43, 44, 45, 46, 51, 38, 36, 23, 24, 26, 41, 6, 21, 20, 17, 14, 19, 16, 18, 15, 31, 33]
 solution : [7]


Solution : [7] has cost 6.


Decide in level 8 among pending : [9, 5, 29, 30, 39, 43, 44, 45, 46, 51, 38, 36, 23, 24, 26, 41, 6, 21, 20, 17, 14, 19, 16, 18, 15, 31, 33]

Coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 1048576), (6, 1048576), (7, -1), (8, -1), (9, 134217728), (10, -1), (11, -1), (12, -1), (13, -1), (14, 8388608), (15, 1073741824), (16, 16777216), (17, 262144), (18, 67108864), (19, 33554432), (20, 524288), (21, 1114112), (22, -1), (23, 134217728), (24, 1073741824), (25, -1), (26, 4194304), (27, -1), (28, -1), (29, 1048576), (30, 16384), (31, 32768), (32, -1), (33, 4194304), (34, -1), (35, -1), (36, 268435456), (37, -1), (38, 134217728), (39, 16384), (40, -1), (41, 4194304), (42, -1), (43, 524288), (44, 524288), (45, 67108864), (46, 16777216), (47, -1), (48, -1), (49, -1), (50, -1), (51, 67108864), (52, -1)]

Decide 24 with phase True at level 8

After decision at level 8
 pending : [9, 5, 29, 30, 39, 43, 44, 45, 46, 51, 38, 36, 23, 26, 41, 6, 21, 20, 17, 14, 19, 16, 18, 15, 31, 33]
 solution : [7, 24]


New level: 9
 pending : [9, 5, 29, 30, 39, 43, 44, 45, 46, 51, 38, 36, 23, 26, 41, 6, 21, 20, 17, 14, 19, 16, 18, 15, 31, 33]
 solution : [7, 24]


Before reduction : 
 pending  : [9, 5, 29, 30, 39, 43, 44, 45, 46, 51, 38, 36, 23, 26, 41, 6, 21, 20, 17, 14, 19, 16, 18, 15, 31, 33]
 solution : [7, 24]

Essensial at level 9 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 1048576), (6, 1048576), (7, -1), (8, -1), (9, 134217728), (10, -1), (11, -1), (12, -1), (13, -1), (14, 8388608), (15, 1073741824), (16, 16777216), (17, 262144), (18, 67108864), (19, 33554432), (20, 524288), (21, 1114112), (22, -1), (23, 134217728), (24, 1073741824), (25, -1), (26, 4194304), (27, -1), (28, -1), (29, 1048576), (30, 16384), (31, 32768), (32, -1), (33, 4194304), (34, -1), (35, -1), (36, 268435456), (37, -1), (38, 134217728), (39, 16384), (40, -1), (41, 4194304), (42, -1), (43, 524288), (44, 524288), (45, 67108864), (46, 16777216), (47, -1), (48, -1), (49, -1), (50, -1), (51, 67108864), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 262144), (6, 1048576), (7, -1), (8, -1), (9, 33554432), (10, -1), (11, -1), (12, -1), (13, -1), (14, 8388608), (15, 1073741824), (16, 16777216), (17, 262144), (18, 67108864), (19, 33554432), (20, 524288), (21, 1114112), (22, -1), (23, 33554432), (24, -1), (25, -1), (26, 4194304), (27, -1), (28, -1), (29, 262144), (30, 4096), (31, 0), (32, -1), (33, 0), (34, -1), (35, -1), (36, 134217728), (37, -1), (38, 67108864), (39, 4096), (40, -1), (41, 4194304), (42, -1), (43, 131072), (44, 131072), (45, 33554432), (46, 4194304), (47, -1), (48, -1), (49, -1), (50, -1), (51, 33554432), (52, -1)]

Covered at level 9 : {33, 31}

After reduction : 
 pending  : [9, 5, 29, 30, 39, 43, 44, 45, 46, 51, 38, 36, 23, 26, 41, 6, 21, 20, 17, 14, 19, 16, 18, 15]
 solution : [7, 24]


Before reduction : 
 pending  : [9, 5, 29, 30, 39, 43, 44, 45, 46, 51, 38, 36, 23, 26, 41, 6, 21, 20, 17, 14, 19, 16, 18, 15]
 solution : [7, 24]

Essensial at level 9 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 262144), (6, 1048576), (7, -1), (8, -1), (9, 33554432), (10, -1), (11, -1), (12, -1), (13, -1), (14, 8388608), (15, 1073741824), (16, 16777216), (17, 262144), (18, 67108864), (19, 33554432), (20, 524288), (21, 1114112), (22, -1), (23, 33554432), (24, -1), (25, -1), (26, 4194304), (27, -1), (28, -1), (29, 262144), (30, 4096), (31, 0), (32, -1), (33, 0), (34, -1), (35, -1), (36, 134217728), (37, -1), (38, 67108864), (39, 4096), (40, -1), (41, 4194304), (42, -1), (43, 131072), (44, 131072), (45, 33554432), (46, 4194304), (47, -1), (48, -1), (49, -1), (50, -1), (51, 33554432), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 262144), (6, 1048576), (7, -1), (8, -1), (9, 33554432), (10, -1), (11, -1), (12, -1), (13, -1), (14, 8388608), (15, 1073741824), (16, 16777216), (17, 262144), (18, 67108864), (19, 33554432), (20, 524288), (21, 1114112), (22, -1), (23, 33554432), (24, -1), (25, -1), (26, 4194304), (27, -1), (28, -1), (29, 262144), (30, 4096), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, 134217728), (37, -1), (38, 67108864), (39, 4096), (40, -1), (41, 4194304), (42, -1), (43, 131072), (44, 131072), (45, 33554432), (46, 4194304), (47, -1), (48, -1), (49, -1), (50, -1), (51, 33554432), (52, -1)]

Covered at level 9 : set()

After reduction : 
 pending  : [9, 5, 29, 30, 39, 43, 44, 45, 46, 51, 38, 36, 23, 26, 41, 6, 21, 20, 17, 14, 19, 16, 18, 15]
 solution : [7, 24]


Solution : [7, 24] has cost 13.


Decide in level 9 among pending : [9, 5, 29, 30, 39, 43, 44, 45, 46, 51, 38, 36, 23, 26, 41, 6, 21, 20, 17, 14, 19, 16, 18, 15]

Coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 262144), (6, 1048576), (7, -1), (8, -1), (9, 33554432), (10, -1), (11, -1), (12, -1), (13, -1), (14, 8388608), (15, 1073741824), (16, 16777216), (17, 262144), (18, 67108864), (19, 33554432), (20, 524288), (21, 1114112), (22, -1), (23, 33554432), (24, -1), (25, -1), (26, 4194304), (27, -1), (28, -1), (29, 262144), (30, 4096), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, 134217728), (37, -1), (38, 67108864), (39, 4096), (40, -1), (41, 4194304), (42, -1), (43, 131072), (44, 131072), (45, 33554432), (46, 4194304), (47, -1), (48, -1), (49, -1), (50, -1), (51, 33554432), (52, -1)]

Decide 15 with phase True at level 9

After decision at level 9
 pending : [9, 5, 29, 30, 39, 43, 44, 45, 46, 51, 38, 36, 23, 26, 41, 6, 21, 20, 17, 14, 19, 16, 18]
 solution : [7, 24, 15]


New level: 10
 pending : [9, 5, 29, 30, 39, 43, 44, 45, 46, 51, 38, 36, 23, 26, 41, 6, 21, 20, 17, 14, 19, 16, 18]
 solution : [7, 24, 15]


Before reduction : 
 pending  : [9, 5, 29, 30, 39, 43, 44, 45, 46, 51, 38, 36, 23, 26, 41, 6, 21, 20, 17, 14, 19, 16, 18]
 solution : [7, 24, 15]

Essensial at level 10 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 262144), (6, 1048576), (7, -1), (8, -1), (9, 33554432), (10, -1), (11, -1), (12, -1), (13, -1), (14, 8388608), (15, 1073741824), (16, 16777216), (17, 262144), (18, 67108864), (19, 33554432), (20, 524288), (21, 1114112), (22, -1), (23, 33554432), (24, -1), (25, -1), (26, 4194304), (27, -1), (28, -1), (29, 262144), (30, 4096), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, 134217728), (37, -1), (38, 67108864), (39, 4096), (40, -1), (41, 4194304), (42, -1), (43, 131072), (44, 131072), (45, 33554432), (46, 4194304), (47, -1), (48, -1), (49, -1), (50, -1), (51, 33554432), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 65536), (6, 0), (7, -1), (8, -1), (9, 33554432), (10, -1), (11, -1), (12, -1), (13, -1), (14, 0), (15, -1), (16, 0), (17, 0), (18, 0), (19, 0), (20, 0), (21, 0), (22, -1), (23, 33554432), (24, -1), (25, -1), (26, 0), (27, -1), (28, -1), (29, 131072), (30, 1024), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, 512), (37, -1), (38, 33554432), (39, 512), (40, -1), (41, 0), (42, -1), (43, 65536), (44, 65536), (45, 16777216), (46, 1048576), (47, -1), (48, -1), (49, -1), (50, -1), (51, 33554432), (52, -1)]

Covered at level 10 : {6, 41, 14, 16, 17, 18, 19, 20, 21, 26}

After reduction : 
 pending  : [9, 5, 29, 30, 39, 43, 44, 45, 46, 51, 38, 36, 23]
 solution : [7, 24, 15]


Before reduction : 
 pending  : [9, 5, 29, 30, 39, 43, 44, 45, 46, 51, 38, 36, 23]
 solution : [7, 24, 15]

Essensial at level 10 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 65536), (6, 0), (7, -1), (8, -1), (9, 33554432), (10, -1), (11, -1), (12, -1), (13, -1), (14, 0), (15, -1), (16, 0), (17, 0), (18, 0), (19, 0), (20, 0), (21, 0), (22, -1), (23, 33554432), (24, -1), (25, -1), (26, 0), (27, -1), (28, -1), (29, 131072), (30, 1024), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, 512), (37, -1), (38, 33554432), (39, 512), (40, -1), (41, 0), (42, -1), (43, 65536), (44, 65536), (45, 16777216), (46, 1048576), (47, -1), (48, -1), (49, -1), (50, -1), (51, 33554432), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 65536), (6, -1), (7, -1), (8, -1), (9, 33554432), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, 33554432), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, 131072), (30, 1024), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, 512), (37, -1), (38, 33554432), (39, 512), (40, -1), (41, -1), (42, -1), (43, 65536), (44, 65536), (45, 16777216), (46, 1048576), (47, -1), (48, -1), (49, -1), (50, -1), (51, 33554432), (52, -1)]

Covered at level 10 : set()

After reduction : 
 pending  : [9, 5, 29, 30, 39, 43, 44, 45, 46, 51, 38, 36, 23]
 solution : [7, 24, 15]


Solution : [7, 24, 15] has cost 20.


Before backtrack at level 10
 pending : [9, 5, 29, 30, 39, 43, 44, 45, 46, 51, 38, 36, 23]
 solution : [7, 24, 15]

After backtrack at level 10
 pending : [9, 5, 29, 30, 39, 43, 44, 45, 46, 51, 38, 36, 23, 26, 41, 6, 21, 20, 17, 14, 19, 16, 18]
 solution : [7, 24, 15]


Invert decision for 15 at level 9


New level: 10
 pending : [9, 5, 29, 30, 39, 43, 44, 45, 46, 51, 38, 36, 23, 26, 41, 6, 21, 20, 17, 14, 19, 16, 18]
 solution : [7, 24]


Before reduction : 
 pending  : [9, 5, 29, 30, 39, 43, 44, 45, 46, 51, 38, 36, 23, 26, 41, 6, 21, 20, 17, 14, 19, 16, 18]
 solution : [7, 24]

Essensial at level 10 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 65536), (6, -1), (7, -1), (8, -1), (9, 33554432), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, 33554432), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, 131072), (30, 1024), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, 512), (37, -1), (38, 33554432), (39, 512), (40, -1), (41, -1), (42, -1), (43, 65536), (44, 65536), (45, 16777216), (46, 1048576), (47, -1), (48, -1), (49, -1), (50, -1), (51, 33554432), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 262144), (6, 1048576), (7, -1), (8, -1), (9, 33554432), (10, -1), (11, -1), (12, -1), (13, -1), (14, 8388608), (15, -1), (16, 16777216), (17, 262144), (18, 67108864), (19, 33554432), (20, 524288), (21, 1114112), (22, -1), (23, 33554432), (24, -1), (25, -1), (26, 4194304), (27, -1), (28, -1), (29, 262144), (30, 4096), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, 134217728), (37, -1), (38, 67108864), (39, 4096), (40, -1), (41, 4194304), (42, -1), (43, 131072), (44, 131072), (45, 33554432), (46, 4194304), (47, -1), (48, -1), (49, -1), (50, -1), (51, 33554432), (52, -1)]

Covered at level 10 : set()

After reduction : 
 pending  : [9, 5, 29, 30, 39, 43, 44, 45, 46, 51, 38, 36, 23, 26, 41, 6, 21, 20, 17, 14, 19, 16, 18]
 solution : [7, 24]


Solution : [7, 24] has cost 13.


Decide in level 10 among pending : [9, 5, 29, 30, 39, 43, 44, 45, 46, 51, 38, 36, 23, 26, 41, 6, 21, 20, 17, 14, 19, 16, 18]

Coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 262144), (6, 1048576), (7, -1), (8, -1), (9, 33554432), (10, -1), (11, -1), (12, -1), (13, -1), (14, 8388608), (15, -1), (16, 16777216), (17, 262144), (18, 67108864), (19, 33554432), (20, 524288), (21, 1114112), (22, -1), (23, 33554432), (24, -1), (25, -1), (26, 4194304), (27, -1), (28, -1), (29, 262144), (30, 4096), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, 134217728), (37, -1), (38, 67108864), (39, 4096), (40, -1), (41, 4194304), (42, -1), (43, 131072), (44, 131072), (45, 33554432), (46, 4194304), (47, -1), (48, -1), (49, -1), (50, -1), (51, 33554432), (52, -1)]

Decide 36 with phase True at level 10

After decision at level 10
 pending : [9, 5, 29, 30, 39, 43, 44, 45, 46, 51, 38, 23, 26, 41, 6, 21, 20, 17, 14, 19, 16, 18]
 solution : [7, 24, 36]


New level: 11
 pending : [9, 5, 29, 30, 39, 43, 44, 45, 46, 51, 38, 23, 26, 41, 6, 21, 20, 17, 14, 19, 16, 18]
 solution : [7, 24, 36]


Before reduction : 
 pending  : [9, 5, 29, 30, 39, 43, 44, 45, 46, 51, 38, 23, 26, 41, 6, 21, 20, 17, 14, 19, 16, 18]
 solution : [7, 24, 36]

Essensial at level 11 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 262144), (6, 1048576), (7, -1), (8, -1), (9, 33554432), (10, -1), (11, -1), (12, -1), (13, -1), (14, 8388608), (15, -1), (16, 16777216), (17, 262144), (18, 67108864), (19, 33554432), (20, 524288), (21, 1114112), (22, -1), (23, 33554432), (24, -1), (25, -1), (26, 4194304), (27, -1), (28, -1), (29, 262144), (30, 4096), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, 134217728), (37, -1), (38, 67108864), (39, 4096), (40, -1), (41, 4194304), (42, -1), (43, 131072), (44, 131072), (45, 33554432), (46, 4194304), (47, -1), (48, -1), (49, -1), (50, -1), (51, 33554432), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 65536), (6, 524288), (7, -1), (8, -1), (9, 8388608), (10, -1), (11, -1), (12, -1), (13, -1), (14, 8388608), (15, -1), (16, 16777216), (17, 262144), (18, 33554432), (19, 16777216), (20, 262144), (21, 540672), (22, -1), (23, 8388608), (24, -1), (25, -1), (26, 1048576), (27, -1), (28, -1), (29, 65536), (30, 1024), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, 67108864), (39, 1024), (40, -1), (41, 1048576), (42, -1), (43, 32768), (44, 32768), (45, 16777216), (46, 1048576), (47, -1), (48, -1), (49, -1), (50, -1), (51, 33554432), (52, -1)]

Covered at level 11 : set()

After reduction : 
 pending  : [9, 5, 29, 30, 39, 43, 44, 45, 46, 51, 38, 23, 26, 41, 6, 21, 20, 17, 14, 19, 16, 18]
 solution : [7, 24, 36]


Solution : [7, 24, 36] has cost 31.


Before backtrack at level 11
 pending : [9, 5, 29, 30, 39, 43, 44, 45, 46, 51, 38, 23, 26, 41, 6, 21, 20, 17, 14, 19, 16, 18]
 solution : [7, 24, 36]

After backtrack at level 11
 pending : [9, 5, 29, 30, 39, 43, 44, 45, 46, 51, 38, 23, 26, 41, 6, 21, 20, 17, 14, 19, 16, 18]
 solution : [7, 24, 36]


Invert decision for 36 at level 10


New level: 11
 pending : [9, 5, 29, 30, 39, 43, 44, 45, 46, 51, 38, 23, 26, 41, 6, 21, 20, 17, 14, 19, 16, 18]
 solution : [7, 24]


Before reduction : 
 pending  : [9, 5, 29, 30, 39, 43, 44, 45, 46, 51, 38, 23, 26, 41, 6, 21, 20, 17, 14, 19, 16, 18]
 solution : [7, 24]

Essensial at level 11 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 65536), (6, 524288), (7, -1), (8, -1), (9, 8388608), (10, -1), (11, -1), (12, -1), (13, -1), (14, 8388608), (15, -1), (16, 16777216), (17, 262144), (18, 33554432), (19, 16777216), (20, 262144), (21, 540672), (22, -1), (23, 8388608), (24, -1), (25, -1), (26, 1048576), (27, -1), (28, -1), (29, 65536), (30, 1024), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, 67108864), (39, 1024), (40, -1), (41, 1048576), (42, -1), (43, 32768), (44, 32768), (45, 16777216), (46, 1048576), (47, -1), (48, -1), (49, -1), (50, -1), (51, 33554432), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 262144), (6, 1048576), (7, -1), (8, -1), (9, 33554432), (10, -1), (11, -1), (12, -1), (13, -1), (14, 8388608), (15, -1), (16, 16777216), (17, 262144), (18, 67108864), (19, 33554432), (20, 524288), (21, 1114112), (22, -1), (23, 33554432), (24, -1), (25, -1), (26, 4194304), (27, -1), (28, -1), (29, 262144), (30, 4096), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, 67108864), (39, 4096), (40, -1), (41, 4194304), (42, -1), (43, 131072), (44, 131072), (45, 33554432), (46, 4194304), (47, -1), (48, -1), (49, -1), (50, -1), (51, 33554432), (52, -1)]

Covered at level 11 : set()

After reduction : 
 pending  : [9, 5, 29, 30, 39, 43, 44, 45, 46, 51, 38, 23, 26, 41, 6, 21, 20, 17, 14, 19, 16, 18]
 solution : [7, 24]


Solution : [7, 24] has cost 13.


Decide in level 11 among pending : [9, 5, 29, 30, 39, 43, 44, 45, 46, 51, 38, 23, 26, 41, 6, 21, 20, 17, 14, 19, 16, 18]

Coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 262144), (6, 1048576), (7, -1), (8, -1), (9, 33554432), (10, -1), (11, -1), (12, -1), (13, -1), (14, 8388608), (15, -1), (16, 16777216), (17, 262144), (18, 67108864), (19, 33554432), (20, 524288), (21, 1114112), (22, -1), (23, 33554432), (24, -1), (25, -1), (26, 4194304), (27, -1), (28, -1), (29, 262144), (30, 4096), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, 67108864), (39, 4096), (40, -1), (41, 4194304), (42, -1), (43, 131072), (44, 131072), (45, 33554432), (46, 4194304), (47, -1), (48, -1), (49, -1), (50, -1), (51, 33554432), (52, -1)]

Decide 38 with phase True at level 11

After decision at level 11
 pending : [9, 5, 29, 30, 39, 43, 44, 45, 46, 51, 23, 26, 41, 6, 21, 20, 17, 14, 19, 16, 18]
 solution : [7, 24, 38]


New level: 12
 pending : [9, 5, 29, 30, 39, 43, 44, 45, 46, 51, 23, 26, 41, 6, 21, 20, 17, 14, 19, 16, 18]
 solution : [7, 24, 38]


Before reduction : 
 pending  : [9, 5, 29, 30, 39, 43, 44, 45, 46, 51, 23, 26, 41, 6, 21, 20, 17, 14, 19, 16, 18]
 solution : [7, 24, 38]

Essensial at level 12 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 262144), (6, 1048576), (7, -1), (8, -1), (9, 33554432), (10, -1), (11, -1), (12, -1), (13, -1), (14, 8388608), (15, -1), (16, 16777216), (17, 262144), (18, 67108864), (19, 33554432), (20, 524288), (21, 1114112), (22, -1), (23, 33554432), (24, -1), (25, -1), (26, 4194304), (27, -1), (28, -1), (29, 262144), (30, 4096), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, 67108864), (39, 4096), (40, -1), (41, 4194304), (42, -1), (43, 131072), (44, 131072), (45, 33554432), (46, 4194304), (47, -1), (48, -1), (49, -1), (50, -1), (51, 33554432), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 0), (6, 524288), (7, -1), (8, -1), (9, 4096), (10, -1), (11, -1), (12, -1), (13, -1), (14, 8388608), (15, -1), (16, 16777216), (17, 262144), (18, 67108864), (19, 33554432), (20, 524288), (21, 540672), (22, -1), (23, 4096), (24, -1), (25, -1), (26, 4194304), (27, -1), (28, -1), (29, 0), (30, 0), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, 0), (40, -1), (41, 4194304), (42, -1), (43, 0), (44, 0), (45, 0), (46, 0), (47, -1), (48, -1), (49, -1), (50, -1), (51, 0), (52, -1)]

Covered at level 12 : {5, 39, 43, 44, 45, 46, 51, 29, 30}

After reduction : 
 pending  : [9, 23, 26, 41, 6, 21, 20, 17, 14, 19, 16, 18]
 solution : [7, 24, 38]


Before reduction : 
 pending  : [9, 23, 26, 41, 6, 21, 20, 17, 14, 19, 16, 18]
 solution : [7, 24, 38]

Essensial at level 12 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 0), (6, 524288), (7, -1), (8, -1), (9, 4096), (10, -1), (11, -1), (12, -1), (13, -1), (14, 8388608), (15, -1), (16, 16777216), (17, 262144), (18, 67108864), (19, 33554432), (20, 524288), (21, 540672), (22, -1), (23, 4096), (24, -1), (25, -1), (26, 4194304), (27, -1), (28, -1), (29, 0), (30, 0), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, 0), (40, -1), (41, 4194304), (42, -1), (43, 0), (44, 0), (45, 0), (46, 0), (47, -1), (48, -1), (49, -1), (50, -1), (51, 0), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, 524288), (7, -1), (8, -1), (9, 4096), (10, -1), (11, -1), (12, -1), (13, -1), (14, 8388608), (15, -1), (16, 16777216), (17, 262144), (18, 67108864), (19, 33554432), (20, 524288), (21, 540672), (22, -1), (23, 4096), (24, -1), (25, -1), (26, 4194304), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, 4194304), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 12 : set()

After reduction : 
 pending  : [9, 23, 26, 41, 6, 21, 20, 17, 14, 19, 16, 18]
 solution : [7, 24, 38]


Solution : [7, 24, 38] has cost 31.


Before backtrack at level 12
 pending : [9, 23, 26, 41, 6, 21, 20, 17, 14, 19, 16, 18]
 solution : [7, 24, 38]

After backtrack at level 12
 pending : [9, 23, 26, 41, 6, 21, 20, 17, 14, 19, 16, 18, 5, 29, 30, 39, 43, 44, 45, 46, 51]
 solution : [7, 24, 38]


Invert decision for 38 at level 11


New level: 12
 pending : [9, 23, 26, 41, 6, 21, 20, 17, 14, 19, 16, 18, 5, 29, 30, 39, 43, 44, 45, 46, 51]
 solution : [7, 24]


Before reduction : 
 pending  : [9, 23, 26, 41, 6, 21, 20, 17, 14, 19, 16, 18, 5, 29, 30, 39, 43, 44, 45, 46, 51]
 solution : [7, 24]

Essensial at level 12 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, 524288), (7, -1), (8, -1), (9, 4096), (10, -1), (11, -1), (12, -1), (13, -1), (14, 8388608), (15, -1), (16, 16777216), (17, 262144), (18, 67108864), (19, 33554432), (20, 524288), (21, 540672), (22, -1), (23, 4096), (24, -1), (25, -1), (26, 4194304), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, 4194304), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 262144), (6, 1048576), (7, -1), (8, -1), (9, 33554432), (10, -1), (11, -1), (12, -1), (13, -1), (14, 8388608), (15, -1), (16, 16777216), (17, 262144), (18, 67108864), (19, 33554432), (20, 524288), (21, 1114112), (22, -1), (23, 33554432), (24, -1), (25, -1), (26, 4194304), (27, -1), (28, -1), (29, 262144), (30, 4096), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, 4096), (40, -1), (41, 4194304), (42, -1), (43, 131072), (44, 131072), (45, 33554432), (46, 4194304), (47, -1), (48, -1), (49, -1), (50, -1), (51, 33554432), (52, -1)]

Covered at level 12 : set()

After reduction : 
 pending  : [9, 23, 26, 41, 6, 21, 20, 17, 14, 19, 16, 18, 5, 29, 30, 39, 43, 44, 45, 46, 51]
 solution : [7, 24]


Solution : [7, 24] has cost 13.


Decide in level 12 among pending : [9, 23, 26, 41, 6, 21, 20, 17, 14, 19, 16, 18, 5, 29, 30, 39, 43, 44, 45, 46, 51]

Coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 262144), (6, 1048576), (7, -1), (8, -1), (9, 33554432), (10, -1), (11, -1), (12, -1), (13, -1), (14, 8388608), (15, -1), (16, 16777216), (17, 262144), (18, 67108864), (19, 33554432), (20, 524288), (21, 1114112), (22, -1), (23, 33554432), (24, -1), (25, -1), (26, 4194304), (27, -1), (28, -1), (29, 262144), (30, 4096), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, 4096), (40, -1), (41, 4194304), (42, -1), (43, 131072), (44, 131072), (45, 33554432), (46, 4194304), (47, -1), (48, -1), (49, -1), (50, -1), (51, 33554432), (52, -1)]

Decide 18 with phase True at level 12

After decision at level 12
 pending : [9, 23, 26, 41, 6, 21, 20, 17, 14, 19, 16, 5, 29, 30, 39, 43, 44, 45, 46, 51]
 solution : [7, 24, 18]


New level: 13
 pending : [9, 23, 26, 41, 6, 21, 20, 17, 14, 19, 16, 5, 29, 30, 39, 43, 44, 45, 46, 51]
 solution : [7, 24, 18]


Before reduction : 
 pending  : [9, 23, 26, 41, 6, 21, 20, 17, 14, 19, 16, 5, 29, 30, 39, 43, 44, 45, 46, 51]
 solution : [7, 24, 18]

Essensial at level 13 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 262144), (6, 1048576), (7, -1), (8, -1), (9, 33554432), (10, -1), (11, -1), (12, -1), (13, -1), (14, 8388608), (15, -1), (16, 16777216), (17, 262144), (18, 67108864), (19, 33554432), (20, 524288), (21, 1114112), (22, -1), (23, 33554432), (24, -1), (25, -1), (26, 4194304), (27, -1), (28, -1), (29, 262144), (30, 4096), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, 4096), (40, -1), (41, 4194304), (42, -1), (43, 131072), (44, 131072), (45, 33554432), (46, 4194304), (47, -1), (48, -1), (49, -1), (50, -1), (51, 33554432), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 65536), (6, 0), (7, -1), (8, -1), (9, 33554432), (10, -1), (11, -1), (12, -1), (13, -1), (14, 65536), (15, -1), (16, 262144), (17, 65536), (18, -1), (19, 0), (20, 0), (21, 0), (22, -1), (23, 33554432), (24, -1), (25, -1), (26, 4096), (27, -1), (28, -1), (29, 131072), (30, 1024), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, 512), (40, -1), (41, 4096), (42, -1), (43, 65536), (44, 65536), (45, 33554432), (46, 4194304), (47, -1), (48, -1), (49, -1), (50, -1), (51, 33554432), (52, -1)]

Covered at level 13 : {19, 20, 21, 6}

After reduction : 
 pending  : [9, 23, 26, 41, 17, 14, 16, 5, 29, 30, 39, 43, 44, 45, 46, 51]
 solution : [7, 24, 18]


Before reduction : 
 pending  : [9, 23, 26, 41, 17, 14, 16, 5, 29, 30, 39, 43, 44, 45, 46, 51]
 solution : [7, 24, 18]

Essensial at level 13 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 65536), (6, 0), (7, -1), (8, -1), (9, 33554432), (10, -1), (11, -1), (12, -1), (13, -1), (14, 65536), (15, -1), (16, 262144), (17, 65536), (18, -1), (19, 0), (20, 0), (21, 0), (22, -1), (23, 33554432), (24, -1), (25, -1), (26, 4096), (27, -1), (28, -1), (29, 131072), (30, 1024), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, 512), (40, -1), (41, 4096), (42, -1), (43, 65536), (44, 65536), (45, 33554432), (46, 4194304), (47, -1), (48, -1), (49, -1), (50, -1), (51, 33554432), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 65536), (6, -1), (7, -1), (8, -1), (9, 33554432), (10, -1), (11, -1), (12, -1), (13, -1), (14, 65536), (15, -1), (16, 262144), (17, 65536), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, 33554432), (24, -1), (25, -1), (26, 4096), (27, -1), (28, -1), (29, 131072), (30, 1024), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, 512), (40, -1), (41, 4096), (42, -1), (43, 65536), (44, 65536), (45, 33554432), (46, 4194304), (47, -1), (48, -1), (49, -1), (50, -1), (51, 33554432), (52, -1)]

Covered at level 13 : set()

After reduction : 
 pending  : [9, 23, 26, 41, 17, 14, 16, 5, 29, 30, 39, 43, 44, 45, 46, 51]
 solution : [7, 24, 18]


Solution : [7, 24, 18] has cost 22.


Before backtrack at level 13
 pending : [9, 23, 26, 41, 17, 14, 16, 5, 29, 30, 39, 43, 44, 45, 46, 51]
 solution : [7, 24, 18]

After backtrack at level 13
 pending : [9, 23, 26, 41, 17, 14, 16, 5, 29, 30, 39, 43, 44, 45, 46, 51, 6, 21, 20, 19]
 solution : [7, 24, 18]


Invert decision for 18 at level 12


New level: 13
 pending : [9, 23, 26, 41, 17, 14, 16, 5, 29, 30, 39, 43, 44, 45, 46, 51, 6, 21, 20, 19]
 solution : [7, 24]


Before reduction : 
 pending  : [9, 23, 26, 41, 17, 14, 16, 5, 29, 30, 39, 43, 44, 45, 46, 51, 6, 21, 20, 19]
 solution : [7, 24]

Essensial at level 13 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 65536), (6, -1), (7, -1), (8, -1), (9, 33554432), (10, -1), (11, -1), (12, -1), (13, -1), (14, 65536), (15, -1), (16, 262144), (17, 65536), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, 33554432), (24, -1), (25, -1), (26, 4096), (27, -1), (28, -1), (29, 131072), (30, 1024), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, 512), (40, -1), (41, 4096), (42, -1), (43, 65536), (44, 65536), (45, 33554432), (46, 4194304), (47, -1), (48, -1), (49, -1), (50, -1), (51, 33554432), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 262144), (6, 1048576), (7, -1), (8, -1), (9, 33554432), (10, -1), (11, -1), (12, -1), (13, -1), (14, 8388608), (15, -1), (16, 16777216), (17, 262144), (18, -1), (19, 33554432), (20, 524288), (21, 1114112), (22, -1), (23, 33554432), (24, -1), (25, -1), (26, 4194304), (27, -1), (28, -1), (29, 262144), (30, 4096), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, 4096), (40, -1), (41, 4194304), (42, -1), (43, 131072), (44, 131072), (45, 33554432), (46, 4194304), (47, -1), (48, -1), (49, -1), (50, -1), (51, 33554432), (52, -1)]

Covered at level 13 : set()

After reduction : 
 pending  : [9, 23, 26, 41, 17, 14, 16, 5, 29, 30, 39, 43, 44, 45, 46, 51, 6, 21, 20, 19]
 solution : [7, 24]


Solution : [7, 24] has cost 13.


Decide in level 13 among pending : [9, 23, 26, 41, 17, 14, 16, 5, 29, 30, 39, 43, 44, 45, 46, 51, 6, 21, 20, 19]

Coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 262144), (6, 1048576), (7, -1), (8, -1), (9, 33554432), (10, -1), (11, -1), (12, -1), (13, -1), (14, 8388608), (15, -1), (16, 16777216), (17, 262144), (18, -1), (19, 33554432), (20, 524288), (21, 1114112), (22, -1), (23, 33554432), (24, -1), (25, -1), (26, 4194304), (27, -1), (28, -1), (29, 262144), (30, 4096), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, 4096), (40, -1), (41, 4194304), (42, -1), (43, 131072), (44, 131072), (45, 33554432), (46, 4194304), (47, -1), (48, -1), (49, -1), (50, -1), (51, 33554432), (52, -1)]

Decide 9 with phase True at level 13

After decision at level 13
 pending : [23, 26, 41, 17, 14, 16, 5, 29, 30, 39, 43, 44, 45, 46, 51, 6, 21, 20, 19]
 solution : [7, 24, 9]


New level: 14
 pending : [23, 26, 41, 17, 14, 16, 5, 29, 30, 39, 43, 44, 45, 46, 51, 6, 21, 20, 19]
 solution : [7, 24, 9]


Before reduction : 
 pending  : [23, 26, 41, 17, 14, 16, 5, 29, 30, 39, 43, 44, 45, 46, 51, 6, 21, 20, 19]
 solution : [7, 24, 9]

Essensial at level 14 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 262144), (6, 1048576), (7, -1), (8, -1), (9, 33554432), (10, -1), (11, -1), (12, -1), (13, -1), (14, 8388608), (15, -1), (16, 16777216), (17, 262144), (18, -1), (19, 33554432), (20, 524288), (21, 1114112), (22, -1), (23, 33554432), (24, -1), (25, -1), (26, 4194304), (27, -1), (28, -1), (29, 262144), (30, 4096), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, 4096), (40, -1), (41, 4194304), (42, -1), (43, 131072), (44, 131072), (45, 33554432), (46, 4194304), (47, -1), (48, -1), (49, -1), (50, -1), (51, 33554432), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 0), (6, 524288), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 8388608), (15, -1), (16, 16777216), (17, 262144), (18, -1), (19, 16777216), (20, 262144), (21, 540672), (22, -1), (23, 0), (24, -1), (25, -1), (26, 2097152), (27, -1), (28, -1), (29, 0), (30, 0), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, 0), (40, -1), (41, 2097152), (42, -1), (43, 0), (44, 0), (45, 0), (46, 0), (47, -1), (48, -1), (49, -1), (50, -1), (51, 0), (52, -1)]

Covered at level 14 : {5, 39, 43, 44, 45, 46, 51, 23, 29, 30}

After reduction : 
 pending  : [26, 41, 17, 14, 16, 6, 21, 20, 19]
 solution : [7, 24, 9]


Before reduction : 
 pending  : [26, 41, 17, 14, 16, 6, 21, 20, 19]
 solution : [7, 24, 9]

Essensial at level 14 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 0), (6, 524288), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 8388608), (15, -1), (16, 16777216), (17, 262144), (18, -1), (19, 16777216), (20, 262144), (21, 540672), (22, -1), (23, 0), (24, -1), (25, -1), (26, 2097152), (27, -1), (28, -1), (29, 0), (30, 0), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, 0), (40, -1), (41, 2097152), (42, -1), (43, 0), (44, 0), (45, 0), (46, 0), (47, -1), (48, -1), (49, -1), (50, -1), (51, 0), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, 524288), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 8388608), (15, -1), (16, 16777216), (17, 262144), (18, -1), (19, 16777216), (20, 262144), (21, 540672), (22, -1), (23, -1), (24, -1), (25, -1), (26, 2097152), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, 2097152), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 14 : set()

After reduction : 
 pending  : [26, 41, 17, 14, 16, 6, 21, 20, 19]
 solution : [7, 24, 9]


Solution : [7, 24, 9] has cost 17.


Before backtrack at level 14
 pending : [26, 41, 17, 14, 16, 6, 21, 20, 19]
 solution : [7, 24, 9]

After backtrack at level 14
 pending : [26, 41, 17, 14, 16, 6, 21, 20, 19, 23, 5, 29, 30, 39, 43, 44, 45, 46, 51]
 solution : [7, 24, 9]


Invert decision for 9 at level 13


New level: 14
 pending : [26, 41, 17, 14, 16, 6, 21, 20, 19, 23, 5, 29, 30, 39, 43, 44, 45, 46, 51]
 solution : [7, 24]


Before reduction : 
 pending  : [26, 41, 17, 14, 16, 6, 21, 20, 19, 23, 5, 29, 30, 39, 43, 44, 45, 46, 51]
 solution : [7, 24]

Essensial at level 14 : {23}

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, 524288), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 8388608), (15, -1), (16, 16777216), (17, 262144), (18, -1), (19, 16777216), (20, 262144), (21, 540672), (22, -1), (23, -1), (24, -1), (25, -1), (26, 2097152), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, 2097152), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 0), (6, 524288), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 8388608), (15, -1), (16, 16777216), (17, 262144), (18, -1), (19, 16777216), (20, 262144), (21, 540672), (22, -1), (23, -1), (24, -1), (25, -1), (26, 2097152), (27, -1), (28, -1), (29, 0), (30, 0), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, 0), (40, -1), (41, 2097152), (42, -1), (43, 0), (44, 0), (45, 0), (46, 0), (47, -1), (48, -1), (49, -1), (50, -1), (51, 0), (52, -1)]

Covered at level 14 : {5, 39, 43, 44, 45, 46, 51, 29, 30}

After reduction : 
 pending  : [26, 41, 17, 14, 16, 6, 21, 20, 19]
 solution : [7, 24, 23]


Before reduction : 
 pending  : [26, 41, 17, 14, 16, 6, 21, 20, 19]
 solution : [7, 24, 23]

Essensial at level 14 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 0), (6, 524288), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 8388608), (15, -1), (16, 16777216), (17, 262144), (18, -1), (19, 16777216), (20, 262144), (21, 540672), (22, -1), (23, -1), (24, -1), (25, -1), (26, 2097152), (27, -1), (28, -1), (29, 0), (30, 0), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, 0), (40, -1), (41, 2097152), (42, -1), (43, 0), (44, 0), (45, 0), (46, 0), (47, -1), (48, -1), (49, -1), (50, -1), (51, 0), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, 524288), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 8388608), (15, -1), (16, 16777216), (17, 262144), (18, -1), (19, 16777216), (20, 262144), (21, 540672), (22, -1), (23, -1), (24, -1), (25, -1), (26, 2097152), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, 2097152), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 14 : set()

After reduction : 
 pending  : [26, 41, 17, 14, 16, 6, 21, 20, 19]
 solution : [7, 24, 23]


Solution : [7, 24, 23] has cost 20.


Before backtrack at level 14
 pending : [26, 41, 17, 14, 16, 6, 21, 20, 19]
 solution : [7, 24, 23]

After backtrack at level 14
 pending : [26, 41, 17, 14, 16, 6, 21, 20, 19, 23, 5, 29, 30, 39, 43, 44, 45, 46, 51]
 solution : [7, 24]


Before backtrack at level 13
 pending : [26, 41, 17, 14, 16, 6, 21, 20, 19, 23, 5, 29, 30, 39, 43, 44, 45, 46, 51]
 solution : [7, 24]

After backtrack at level 13
 pending : [26, 41, 17, 14, 16, 6, 21, 20, 19, 23, 5, 29, 30, 39, 43, 44, 45, 46, 51, 9]
 solution : [7, 24]


Before backtrack at level 12
 pending : [26, 41, 17, 14, 16, 6, 21, 20, 19, 23, 5, 29, 30, 39, 43, 44, 45, 46, 51, 9]
 solution : [7, 24]

After backtrack at level 12
 pending : [26, 41, 17, 14, 16, 6, 21, 20, 19, 23, 5, 29, 30, 39, 43, 44, 45, 46, 51, 9, 18]
 solution : [7, 24]


Before backtrack at level 11
 pending : [26, 41, 17, 14, 16, 6, 21, 20, 19, 23, 5, 29, 30, 39, 43, 44, 45, 46, 51, 9, 18]
 solution : [7, 24]

After backtrack at level 11
 pending : [26, 41, 17, 14, 16, 6, 21, 20, 19, 23, 5, 29, 30, 39, 43, 44, 45, 46, 51, 9, 18, 38]
 solution : [7, 24]


Before backtrack at level 10
 pending : [26, 41, 17, 14, 16, 6, 21, 20, 19, 23, 5, 29, 30, 39, 43, 44, 45, 46, 51, 9, 18, 38]
 solution : [7, 24]

After backtrack at level 10
 pending : [26, 41, 17, 14, 16, 6, 21, 20, 19, 23, 5, 29, 30, 39, 43, 44, 45, 46, 51, 9, 18, 38, 36]
 solution : [7, 24]


Before backtrack at level 9
 pending : [26, 41, 17, 14, 16, 6, 21, 20, 19, 23, 5, 29, 30, 39, 43, 44, 45, 46, 51, 9, 18, 38, 36]
 solution : [7, 24]

After backtrack at level 9
 pending : [26, 41, 17, 14, 16, 6, 21, 20, 19, 23, 5, 29, 30, 39, 43, 44, 45, 46, 51, 9, 18, 38, 36, 31, 33, 15]
 solution : [7, 24]


Invert decision for 24 at level 8


New level: 9
 pending : [26, 41, 17, 14, 16, 6, 21, 20, 19, 23, 5, 29, 30, 39, 43, 44, 45, 46, 51, 9, 18, 38, 36, 31, 33, 15]
 solution : [7]


Before reduction : 
 pending  : [26, 41, 17, 14, 16, 6, 21, 20, 19, 23, 5, 29, 30, 39, 43, 44, 45, 46, 51, 9, 18, 38, 36, 31, 33, 15]
 solution : [7]

Essensial at level 9 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, 524288), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 8388608), (15, -1), (16, 16777216), (17, 262144), (18, -1), (19, 16777216), (20, 262144), (21, 540672), (22, -1), (23, -1), (24, -1), (25, -1), (26, 2097152), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, 2097152), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 1048576), (6, 1048576), (7, -1), (8, -1), (9, 134217728), (10, -1), (11, -1), (12, -1), (13, -1), (14, 8388608), (15, 1073741824), (16, 16777216), (17, 262144), (18, 67108864), (19, 33554432), (20, 524288), (21, 1114112), (22, -1), (23, 134217728), (24, -1), (25, -1), (26, 4194304), (27, -1), (28, -1), (29, 1048576), (30, 16384), (31, 32768), (32, -1), (33, 4194304), (34, -1), (35, -1), (36, 268435456), (37, -1), (38, 134217728), (39, 16384), (40, -1), (41, 4194304), (42, -1), (43, 524288), (44, 524288), (45, 67108864), (46, 16777216), (47, -1), (48, -1), (49, -1), (50, -1), (51, 67108864), (52, -1)]

Covered at level 9 : set()

After reduction : 
 pending  : [26, 41, 17, 14, 16, 6, 21, 20, 19, 23, 5, 29, 30, 39, 43, 44, 45, 46, 51, 9, 18, 38, 36, 31, 33, 15]
 solution : [7]


Solution : [7] has cost 6.


Decide in level 9 among pending : [26, 41, 17, 14, 16, 6, 21, 20, 19, 23, 5, 29, 30, 39, 43, 44, 45, 46, 51, 9, 18, 38, 36, 31, 33, 15]

Coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 1048576), (6, 1048576), (7, -1), (8, -1), (9, 134217728), (10, -1), (11, -1), (12, -1), (13, -1), (14, 8388608), (15, 1073741824), (16, 16777216), (17, 262144), (18, 67108864), (19, 33554432), (20, 524288), (21, 1114112), (22, -1), (23, 134217728), (24, -1), (25, -1), (26, 4194304), (27, -1), (28, -1), (29, 1048576), (30, 16384), (31, 32768), (32, -1), (33, 4194304), (34, -1), (35, -1), (36, 268435456), (37, -1), (38, 134217728), (39, 16384), (40, -1), (41, 4194304), (42, -1), (43, 524288), (44, 524288), (45, 67108864), (46, 16777216), (47, -1), (48, -1), (49, -1), (50, -1), (51, 67108864), (52, -1)]

Decide 15 with phase True at level 9

After decision at level 9
 pending : [26, 41, 17, 14, 16, 6, 21, 20, 19, 23, 5, 29, 30, 39, 43, 44, 45, 46, 51, 9, 18, 38, 36, 31, 33]
 solution : [7, 15]


New level: 10
 pending : [26, 41, 17, 14, 16, 6, 21, 20, 19, 23, 5, 29, 30, 39, 43, 44, 45, 46, 51, 9, 18, 38, 36, 31, 33]
 solution : [7, 15]


Before reduction : 
 pending  : [26, 41, 17, 14, 16, 6, 21, 20, 19, 23, 5, 29, 30, 39, 43, 44, 45, 46, 51, 9, 18, 38, 36, 31, 33]
 solution : [7, 15]

Essensial at level 10 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 1048576), (6, 1048576), (7, -1), (8, -1), (9, 134217728), (10, -1), (11, -1), (12, -1), (13, -1), (14, 8388608), (15, 1073741824), (16, 16777216), (17, 262144), (18, 67108864), (19, 33554432), (20, 524288), (21, 1114112), (22, -1), (23, 134217728), (24, -1), (25, -1), (26, 4194304), (27, -1), (28, -1), (29, 1048576), (30, 16384), (31, 32768), (32, -1), (33, 4194304), (34, -1), (35, -1), (36, 268435456), (37, -1), (38, 134217728), (39, 16384), (40, -1), (41, 4194304), (42, -1), (43, 524288), (44, 524288), (45, 67108864), (46, 16777216), (47, -1), (48, -1), (49, -1), (50, -1), (51, 67108864), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 262144), (6, 0), (7, -1), (8, -1), (9, 134217728), (10, -1), (11, -1), (12, -1), (13, -1), (14, 0), (15, -1), (16, 0), (17, 0), (18, 0), (19, 0), (20, 0), (21, 0), (22, -1), (23, 134217728), (24, -1), (25, -1), (26, 0), (27, -1), (28, -1), (29, 524288), (30, 4096), (31, 8192), (32, -1), (33, 4194304), (34, -1), (35, -1), (36, 2048), (37, -1), (38, 67108864), (39, 2048), (40, -1), (41, 0), (42, -1), (43, 262144), (44, 262144), (45, 33554432), (46, 4194304), (47, -1), (48, -1), (49, -1), (50, -1), (51, 67108864), (52, -1)]

Covered at level 10 : {6, 41, 14, 16, 17, 18, 19, 20, 21, 26}

After reduction : 
 pending  : [23, 5, 29, 30, 39, 43, 44, 45, 46, 51, 9, 38, 36, 31, 33]
 solution : [7, 15]


Before reduction : 
 pending  : [23, 5, 29, 30, 39, 43, 44, 45, 46, 51, 9, 38, 36, 31, 33]
 solution : [7, 15]

Essensial at level 10 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 262144), (6, 0), (7, -1), (8, -1), (9, 134217728), (10, -1), (11, -1), (12, -1), (13, -1), (14, 0), (15, -1), (16, 0), (17, 0), (18, 0), (19, 0), (20, 0), (21, 0), (22, -1), (23, 134217728), (24, -1), (25, -1), (26, 0), (27, -1), (28, -1), (29, 524288), (30, 4096), (31, 8192), (32, -1), (33, 4194304), (34, -1), (35, -1), (36, 2048), (37, -1), (38, 67108864), (39, 2048), (40, -1), (41, 0), (42, -1), (43, 262144), (44, 262144), (45, 33554432), (46, 4194304), (47, -1), (48, -1), (49, -1), (50, -1), (51, 67108864), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 262144), (6, -1), (7, -1), (8, -1), (9, 134217728), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, 134217728), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, 524288), (30, 4096), (31, 8192), (32, -1), (33, 4194304), (34, -1), (35, -1), (36, 2048), (37, -1), (38, 67108864), (39, 2048), (40, -1), (41, -1), (42, -1), (43, 262144), (44, 262144), (45, 33554432), (46, 4194304), (47, -1), (48, -1), (49, -1), (50, -1), (51, 67108864), (52, -1)]

Covered at level 10 : set()

After reduction : 
 pending  : [23, 5, 29, 30, 39, 43, 44, 45, 46, 51, 9, 38, 36, 31, 33]
 solution : [7, 15]


Solution : [7, 15] has cost 13.


Decide in level 10 among pending : [23, 5, 29, 30, 39, 43, 44, 45, 46, 51, 9, 38, 36, 31, 33]

Coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 262144), (6, -1), (7, -1), (8, -1), (9, 134217728), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, 134217728), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, 524288), (30, 4096), (31, 8192), (32, -1), (33, 4194304), (34, -1), (35, -1), (36, 2048), (37, -1), (38, 67108864), (39, 2048), (40, -1), (41, -1), (42, -1), (43, 262144), (44, 262144), (45, 33554432), (46, 4194304), (47, -1), (48, -1), (49, -1), (50, -1), (51, 67108864), (52, -1)]

Decide 23 with phase True at level 10

After decision at level 10
 pending : [5, 29, 30, 39, 43, 44, 45, 46, 51, 9, 38, 36, 31, 33]
 solution : [7, 15, 23]


New level: 11
 pending : [5, 29, 30, 39, 43, 44, 45, 46, 51, 9, 38, 36, 31, 33]
 solution : [7, 15, 23]


Before reduction : 
 pending  : [5, 29, 30, 39, 43, 44, 45, 46, 51, 9, 38, 36, 31, 33]
 solution : [7, 15, 23]

Essensial at level 11 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 262144), (6, -1), (7, -1), (8, -1), (9, 134217728), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, 134217728), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, 524288), (30, 4096), (31, 8192), (32, -1), (33, 4194304), (34, -1), (35, -1), (36, 2048), (37, -1), (38, 67108864), (39, 2048), (40, -1), (41, -1), (42, -1), (43, 262144), (44, 262144), (45, 33554432), (46, 4194304), (47, -1), (48, -1), (49, -1), (50, -1), (51, 67108864), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 0), (6, -1), (7, -1), (8, -1), (9, 0), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, 0), (30, 0), (31, 0), (32, -1), (33, 0), (34, -1), (35, -1), (36, 0), (37, -1), (38, 0), (39, 0), (40, -1), (41, -1), (42, -1), (43, 0), (44, 0), (45, 0), (46, 0), (47, -1), (48, -1), (49, -1), (50, -1), (51, 0), (52, -1)]

Covered at level 11 : {33, 36, 5, 38, 39, 9, 43, 44, 45, 46, 51, 29, 30, 31}

After reduction : 
 pending  : []
 solution : [7, 15, 23]


Before reduction : 
 pending  : []
 solution : [7, 15, 23]

Essensial at level 11 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 0), (6, -1), (7, -1), (8, -1), (9, 0), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, 0), (30, 0), (31, 0), (32, -1), (33, 0), (34, -1), (35, -1), (36, 0), (37, -1), (38, 0), (39, 0), (40, -1), (41, -1), (42, -1), (43, 0), (44, 0), (45, 0), (46, 0), (47, -1), (48, -1), (49, -1), (50, -1), (51, 0), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 11 : set()

After reduction : 
 pending  : []
 solution : [7, 15, 23]


Solution : [7, 15, 23] has cost 20.


Before backtrack at level 11
 pending : []
 solution : [7, 15, 23]

After backtrack at level 11
 pending : [5, 29, 30, 39, 43, 44, 45, 46, 51, 9, 38, 36, 31, 33]
 solution : [7, 15, 23]


Invert decision for 23 at level 10


New level: 11
 pending : [5, 29, 30, 39, 43, 44, 45, 46, 51, 9, 38, 36, 31, 33]
 solution : [7, 15]


Before reduction : 
 pending  : [5, 29, 30, 39, 43, 44, 45, 46, 51, 9, 38, 36, 31, 33]
 solution : [7, 15]

Essensial at level 11 : {9}

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 0), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, 0), (30, 0), (31, 0), (32, -1), (33, 0), (34, -1), (35, -1), (36, 0), (37, -1), (38, 0), (39, 0), (40, -1), (41, -1), (42, -1), (43, 0), (44, 0), (45, 0), (46, 0), (47, -1), (48, -1), (49, -1), (50, -1), (51, 0), (52, -1)]

Covered at level 11 : {33, 36, 5, 38, 39, 43, 44, 45, 46, 51, 29, 30, 31}

After reduction : 
 pending  : []
 solution : [7, 15, 9]


Before reduction : 
 pending  : []
 solution : [7, 15, 9]

Essensial at level 11 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 0), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, 0), (30, 0), (31, 0), (32, -1), (33, 0), (34, -1), (35, -1), (36, 0), (37, -1), (38, 0), (39, 0), (40, -1), (41, -1), (42, -1), (43, 0), (44, 0), (45, 0), (46, 0), (47, -1), (48, -1), (49, -1), (50, -1), (51, 0), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 11 : set()

After reduction : 
 pending  : []
 solution : [7, 15, 9]


Solution : [7, 15, 9] has cost 17.


Before backtrack at level 11
 pending : []
 solution : [7, 15, 9]

After backtrack at level 11
 pending : [9, 5, 29, 30, 39, 43, 44, 45, 46, 51, 38, 36, 31, 33]
 solution : [7, 15]


Before backtrack at level 10
 pending : [9, 5, 29, 30, 39, 43, 44, 45, 46, 51, 38, 36, 31, 33]
 solution : [7, 15]

After backtrack at level 10
 pending : [9, 5, 29, 30, 39, 43, 44, 45, 46, 51, 38, 36, 31, 33, 26, 41, 17, 14, 16, 6, 21, 20, 19, 18, 23]
 solution : [7, 15]


Invert decision for 15 at level 9


New level: 10
 pending : [9, 5, 29, 30, 39, 43, 44, 45, 46, 51, 38, 36, 31, 33, 26, 41, 17, 14, 16, 6, 21, 20, 19, 18, 23]
 solution : [7]


Before reduction : 
 pending  : [9, 5, 29, 30, 39, 43, 44, 45, 46, 51, 38, 36, 31, 33, 26, 41, 17, 14, 16, 6, 21, 20, 19, 18, 23]
 solution : [7]

Essensial at level 10 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 1048576), (6, 1048576), (7, -1), (8, -1), (9, 134217728), (10, -1), (11, -1), (12, -1), (13, -1), (14, 8388608), (15, -1), (16, 16777216), (17, 262144), (18, 67108864), (19, 33554432), (20, 524288), (21, 1114112), (22, -1), (23, 134217728), (24, -1), (25, -1), (26, 4194304), (27, -1), (28, -1), (29, 1048576), (30, 16384), (31, 32768), (32, -1), (33, 4194304), (34, -1), (35, -1), (36, 268435456), (37, -1), (38, 134217728), (39, 16384), (40, -1), (41, 4194304), (42, -1), (43, 524288), (44, 524288), (45, 67108864), (46, 16777216), (47, -1), (48, -1), (49, -1), (50, -1), (51, 67108864), (52, -1)]

Covered at level 10 : set()

After reduction : 
 pending  : [9, 5, 29, 30, 39, 43, 44, 45, 46, 51, 38, 36, 31, 33, 26, 41, 17, 14, 16, 6, 21, 20, 19, 18, 23]
 solution : [7]


Solution : [7] has cost 6.


Decide in level 10 among pending : [9, 5, 29, 30, 39, 43, 44, 45, 46, 51, 38, 36, 31, 33, 26, 41, 17, 14, 16, 6, 21, 20, 19, 18, 23]

Coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 1048576), (6, 1048576), (7, -1), (8, -1), (9, 134217728), (10, -1), (11, -1), (12, -1), (13, -1), (14, 8388608), (15, -1), (16, 16777216), (17, 262144), (18, 67108864), (19, 33554432), (20, 524288), (21, 1114112), (22, -1), (23, 134217728), (24, -1), (25, -1), (26, 4194304), (27, -1), (28, -1), (29, 1048576), (30, 16384), (31, 32768), (32, -1), (33, 4194304), (34, -1), (35, -1), (36, 268435456), (37, -1), (38, 134217728), (39, 16384), (40, -1), (41, 4194304), (42, -1), (43, 524288), (44, 524288), (45, 67108864), (46, 16777216), (47, -1), (48, -1), (49, -1), (50, -1), (51, 67108864), (52, -1)]

Decide 36 with phase True at level 10

After decision at level 10
 pending : [9, 5, 29, 30, 39, 43, 44, 45, 46, 51, 38, 31, 33, 26, 41, 17, 14, 16, 6, 21, 20, 19, 18, 23]
 solution : [7, 36]


New level: 11
 pending : [9, 5, 29, 30, 39, 43, 44, 45, 46, 51, 38, 31, 33, 26, 41, 17, 14, 16, 6, 21, 20, 19, 18, 23]
 solution : [7, 36]


Before reduction : 
 pending  : [9, 5, 29, 30, 39, 43, 44, 45, 46, 51, 38, 31, 33, 26, 41, 17, 14, 16, 6, 21, 20, 19, 18, 23]
 solution : [7, 36]

Essensial at level 11 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 1048576), (6, 1048576), (7, -1), (8, -1), (9, 134217728), (10, -1), (11, -1), (12, -1), (13, -1), (14, 8388608), (15, -1), (16, 16777216), (17, 262144), (18, 67108864), (19, 33554432), (20, 524288), (21, 1114112), (22, -1), (23, 134217728), (24, -1), (25, -1), (26, 4194304), (27, -1), (28, -1), (29, 1048576), (30, 16384), (31, 32768), (32, -1), (33, 4194304), (34, -1), (35, -1), (36, 268435456), (37, -1), (38, 134217728), (39, 16384), (40, -1), (41, 4194304), (42, -1), (43, 524288), (44, 524288), (45, 67108864), (46, 16777216), (47, -1), (48, -1), (49, -1), (50, -1), (51, 67108864), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 262144), (6, 524288), (7, -1), (8, -1), (9, 33554432), (10, -1), (11, -1), (12, -1), (13, -1), (14, 8388608), (15, -1), (16, 16777216), (17, 262144), (18, 33554432), (19, 16777216), (20, 262144), (21, 540672), (22, -1), (23, 33554432), (24, -1), (25, -1), (26, 1048576), (27, -1), (28, -1), (29, 262144), (30, 4096), (31, 8192), (32, -1), (33, 4194304), (34, -1), (35, -1), (36, -1), (37, -1), (38, 134217728), (39, 4096), (40, -1), (41, 1048576), (42, -1), (43, 131072), (44, 131072), (45, 33554432), (46, 4194304), (47, -1), (48, -1), (49, -1), (50, -1), (51, 67108864), (52, -1)]

Covered at level 11 : set()

After reduction : 
 pending  : [9, 5, 29, 30, 39, 43, 44, 45, 46, 51, 38, 31, 33, 26, 41, 17, 14, 16, 6, 21, 20, 19, 18, 23]
 solution : [7, 36]


Solution : [7, 36] has cost 24.


Before backtrack at level 11
 pending : [9, 5, 29, 30, 39, 43, 44, 45, 46, 51, 38, 31, 33, 26, 41, 17, 14, 16, 6, 21, 20, 19, 18, 23]
 solution : [7, 36]

After backtrack at level 11
 pending : [9, 5, 29, 30, 39, 43, 44, 45, 46, 51, 38, 31, 33, 26, 41, 17, 14, 16, 6, 21, 20, 19, 18, 23]
 solution : [7, 36]


Invert decision for 36 at level 10


New level: 11
 pending : [9, 5, 29, 30, 39, 43, 44, 45, 46, 51, 38, 31, 33, 26, 41, 17, 14, 16, 6, 21, 20, 19, 18, 23]
 solution : [7]


Before reduction : 
 pending  : [9, 5, 29, 30, 39, 43, 44, 45, 46, 51, 38, 31, 33, 26, 41, 17, 14, 16, 6, 21, 20, 19, 18, 23]
 solution : [7]

Essensial at level 11 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 262144), (6, 524288), (7, -1), (8, -1), (9, 33554432), (10, -1), (11, -1), (12, -1), (13, -1), (14, 8388608), (15, -1), (16, 16777216), (17, 262144), (18, 33554432), (19, 16777216), (20, 262144), (21, 540672), (22, -1), (23, 33554432), (24, -1), (25, -1), (26, 1048576), (27, -1), (28, -1), (29, 262144), (30, 4096), (31, 8192), (32, -1), (33, 4194304), (34, -1), (35, -1), (36, -1), (37, -1), (38, 134217728), (39, 4096), (40, -1), (41, 1048576), (42, -1), (43, 131072), (44, 131072), (45, 33554432), (46, 4194304), (47, -1), (48, -1), (49, -1), (50, -1), (51, 67108864), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 1048576), (6, 1048576), (7, -1), (8, -1), (9, 134217728), (10, -1), (11, -1), (12, -1), (13, -1), (14, 8388608), (15, -1), (16, 16777216), (17, 262144), (18, 67108864), (19, 33554432), (20, 524288), (21, 1114112), (22, -1), (23, 134217728), (24, -1), (25, -1), (26, 4194304), (27, -1), (28, -1), (29, 1048576), (30, 16384), (31, 32768), (32, -1), (33, 4194304), (34, -1), (35, -1), (36, -1), (37, -1), (38, 134217728), (39, 16384), (40, -1), (41, 4194304), (42, -1), (43, 524288), (44, 524288), (45, 67108864), (46, 16777216), (47, -1), (48, -1), (49, -1), (50, -1), (51, 67108864), (52, -1)]

Covered at level 11 : set()

After reduction : 
 pending  : [9, 5, 29, 30, 39, 43, 44, 45, 46, 51, 38, 31, 33, 26, 41, 17, 14, 16, 6, 21, 20, 19, 18, 23]
 solution : [7]


Solution : [7] has cost 6.


Decide in level 11 among pending : [9, 5, 29, 30, 39, 43, 44, 45, 46, 51, 38, 31, 33, 26, 41, 17, 14, 16, 6, 21, 20, 19, 18, 23]

Coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 1048576), (6, 1048576), (7, -1), (8, -1), (9, 134217728), (10, -1), (11, -1), (12, -1), (13, -1), (14, 8388608), (15, -1), (16, 16777216), (17, 262144), (18, 67108864), (19, 33554432), (20, 524288), (21, 1114112), (22, -1), (23, 134217728), (24, -1), (25, -1), (26, 4194304), (27, -1), (28, -1), (29, 1048576), (30, 16384), (31, 32768), (32, -1), (33, 4194304), (34, -1), (35, -1), (36, -1), (37, -1), (38, 134217728), (39, 16384), (40, -1), (41, 4194304), (42, -1), (43, 524288), (44, 524288), (45, 67108864), (46, 16777216), (47, -1), (48, -1), (49, -1), (50, -1), (51, 67108864), (52, -1)]

Decide 9 with phase True at level 11

After decision at level 11
 pending : [5, 29, 30, 39, 43, 44, 45, 46, 51, 38, 31, 33, 26, 41, 17, 14, 16, 6, 21, 20, 19, 18, 23]
 solution : [7, 9]


New level: 12
 pending : [5, 29, 30, 39, 43, 44, 45, 46, 51, 38, 31, 33, 26, 41, 17, 14, 16, 6, 21, 20, 19, 18, 23]
 solution : [7, 9]


Before reduction : 
 pending  : [5, 29, 30, 39, 43, 44, 45, 46, 51, 38, 31, 33, 26, 41, 17, 14, 16, 6, 21, 20, 19, 18, 23]
 solution : [7, 9]

Essensial at level 12 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 1048576), (6, 1048576), (7, -1), (8, -1), (9, 134217728), (10, -1), (11, -1), (12, -1), (13, -1), (14, 8388608), (15, -1), (16, 16777216), (17, 262144), (18, 67108864), (19, 33554432), (20, 524288), (21, 1114112), (22, -1), (23, 134217728), (24, -1), (25, -1), (26, 4194304), (27, -1), (28, -1), (29, 1048576), (30, 16384), (31, 32768), (32, -1), (33, 4194304), (34, -1), (35, -1), (36, -1), (37, -1), (38, 134217728), (39, 16384), (40, -1), (41, 4194304), (42, -1), (43, 524288), (44, 524288), (45, 67108864), (46, 16777216), (47, -1), (48, -1), (49, -1), (50, -1), (51, 67108864), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 0), (6, 524288), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 8388608), (15, -1), (16, 16777216), (17, 262144), (18, 33554432), (19, 16777216), (20, 262144), (21, 540672), (22, -1), (23, 0), (24, -1), (25, -1), (26, 2097152), (27, -1), (28, -1), (29, 0), (30, 0), (31, 0), (32, -1), (33, 0), (34, -1), (35, -1), (36, -1), (37, -1), (38, 0), (39, 0), (40, -1), (41, 2097152), (42, -1), (43, 0), (44, 0), (45, 0), (46, 0), (47, -1), (48, -1), (49, -1), (50, -1), (51, 0), (52, -1)]

Covered at level 12 : {33, 5, 38, 39, 43, 44, 45, 46, 51, 23, 29, 30, 31}

After reduction : 
 pending  : [26, 41, 17, 14, 16, 6, 21, 20, 19, 18]
 solution : [7, 9]


Before reduction : 
 pending  : [26, 41, 17, 14, 16, 6, 21, 20, 19, 18]
 solution : [7, 9]

Essensial at level 12 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 0), (6, 524288), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 8388608), (15, -1), (16, 16777216), (17, 262144), (18, 33554432), (19, 16777216), (20, 262144), (21, 540672), (22, -1), (23, 0), (24, -1), (25, -1), (26, 2097152), (27, -1), (28, -1), (29, 0), (30, 0), (31, 0), (32, -1), (33, 0), (34, -1), (35, -1), (36, -1), (37, -1), (38, 0), (39, 0), (40, -1), (41, 2097152), (42, -1), (43, 0), (44, 0), (45, 0), (46, 0), (47, -1), (48, -1), (49, -1), (50, -1), (51, 0), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, 524288), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 8388608), (15, -1), (16, 16777216), (17, 262144), (18, 33554432), (19, 16777216), (20, 262144), (21, 540672), (22, -1), (23, -1), (24, -1), (25, -1), (26, 2097152), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, 2097152), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 12 : set()

After reduction : 
 pending  : [26, 41, 17, 14, 16, 6, 21, 20, 19, 18]
 solution : [7, 9]


Solution : [7, 9] has cost 10.


Decide in level 12 among pending : [26, 41, 17, 14, 16, 6, 21, 20, 19, 18]

Coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, 524288), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 8388608), (15, -1), (16, 16777216), (17, 262144), (18, 33554432), (19, 16777216), (20, 262144), (21, 540672), (22, -1), (23, -1), (24, -1), (25, -1), (26, 2097152), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, 2097152), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Decide 18 with phase True at level 12

After decision at level 12
 pending : [26, 41, 17, 14, 16, 6, 21, 20, 19]
 solution : [7, 9, 18]


New level: 13
 pending : [26, 41, 17, 14, 16, 6, 21, 20, 19]
 solution : [7, 9, 18]


Before reduction : 
 pending  : [26, 41, 17, 14, 16, 6, 21, 20, 19]
 solution : [7, 9, 18]

Essensial at level 13 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, 524288), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 8388608), (15, -1), (16, 16777216), (17, 262144), (18, 33554432), (19, 16777216), (20, 262144), (21, 540672), (22, -1), (23, -1), (24, -1), (25, -1), (26, 2097152), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, 2097152), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, 0), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 65536), (15, -1), (16, 262144), (17, 65536), (18, -1), (19, 0), (20, 0), (21, 0), (22, -1), (23, -1), (24, -1), (25, -1), (26, 2048), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, 2048), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 13 : {19, 20, 21, 6}

After reduction : 
 pending  : [26, 41, 17, 14, 16]
 solution : [7, 9, 18]


Before reduction : 
 pending  : [26, 41, 17, 14, 16]
 solution : [7, 9, 18]

Essensial at level 13 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, 0), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 65536), (15, -1), (16, 262144), (17, 65536), (18, -1), (19, 0), (20, 0), (21, 0), (22, -1), (23, -1), (24, -1), (25, -1), (26, 2048), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, 2048), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 65536), (15, -1), (16, 262144), (17, 65536), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, 2048), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, 2048), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 13 : set()

After reduction : 
 pending  : [26, 41, 17, 14, 16]
 solution : [7, 9, 18]


Solution : [7, 9, 18] has cost 19.


Before backtrack at level 13
 pending : [26, 41, 17, 14, 16]
 solution : [7, 9, 18]

After backtrack at level 13
 pending : [26, 41, 17, 14, 16, 6, 21, 20, 19]
 solution : [7, 9, 18]


Invert decision for 18 at level 12


New level: 13
 pending : [26, 41, 17, 14, 16, 6, 21, 20, 19]
 solution : [7, 9]


Before reduction : 
 pending  : [26, 41, 17, 14, 16, 6, 21, 20, 19]
 solution : [7, 9]

Essensial at level 13 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 65536), (15, -1), (16, 262144), (17, 65536), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, 2048), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, 2048), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, 524288), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 8388608), (15, -1), (16, 16777216), (17, 262144), (18, -1), (19, 16777216), (20, 262144), (21, 540672), (22, -1), (23, -1), (24, -1), (25, -1), (26, 2097152), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, 2097152), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 13 : set()

After reduction : 
 pending  : [26, 41, 17, 14, 16, 6, 21, 20, 19]
 solution : [7, 9]


Solution : [7, 9] has cost 10.


Decide in level 13 among pending : [26, 41, 17, 14, 16, 6, 21, 20, 19]

Coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, 524288), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 8388608), (15, -1), (16, 16777216), (17, 262144), (18, -1), (19, 16777216), (20, 262144), (21, 540672), (22, -1), (23, -1), (24, -1), (25, -1), (26, 2097152), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, 2097152), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Decide 16 with phase True at level 13

After decision at level 13
 pending : [26, 41, 17, 14, 6, 21, 20, 19]
 solution : [7, 9, 16]


New level: 14
 pending : [26, 41, 17, 14, 6, 21, 20, 19]
 solution : [7, 9, 16]


Before reduction : 
 pending  : [26, 41, 17, 14, 6, 21, 20, 19]
 solution : [7, 9, 16]

Essensial at level 14 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, 524288), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 8388608), (15, -1), (16, 16777216), (17, 262144), (18, -1), (19, 16777216), (20, 262144), (21, 540672), (22, -1), (23, -1), (24, -1), (25, -1), (26, 2097152), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, 2097152), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, 262144), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 0), (15, -1), (16, -1), (17, 0), (18, -1), (19, 4194304), (20, 0), (21, 264192), (22, -1), (23, -1), (24, -1), (25, -1), (26, 524288), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, 524288), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 14 : {17, 20, 14}

After reduction : 
 pending  : [26, 41, 6, 21, 19]
 solution : [7, 9, 16]


Before reduction : 
 pending  : [26, 41, 6, 21, 19]
 solution : [7, 9, 16]

Essensial at level 14 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, 262144), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 0), (15, -1), (16, -1), (17, 0), (18, -1), (19, 4194304), (20, 0), (21, 264192), (22, -1), (23, -1), (24, -1), (25, -1), (26, 524288), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, 524288), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, 262144), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, 4194304), (20, -1), (21, 264192), (22, -1), (23, -1), (24, -1), (25, -1), (26, 524288), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, 524288), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 14 : set()

After reduction : 
 pending  : [26, 41, 6, 21, 19]
 solution : [7, 9, 16]


Solution : [7, 9, 16] has cost 17.


Before backtrack at level 14
 pending : [26, 41, 6, 21, 19]
 solution : [7, 9, 16]

After backtrack at level 14
 pending : [26, 41, 6, 21, 19, 17, 14, 20]
 solution : [7, 9, 16]


Invert decision for 16 at level 13


New level: 14
 pending : [26, 41, 6, 21, 19, 17, 14, 20]
 solution : [7, 9]


Before reduction : 
 pending  : [26, 41, 6, 21, 19, 17, 14, 20]
 solution : [7, 9]

Essensial at level 14 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, 262144), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, 4194304), (20, -1), (21, 264192), (22, -1), (23, -1), (24, -1), (25, -1), (26, 524288), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, 524288), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, 524288), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 8388608), (15, -1), (16, -1), (17, 262144), (18, -1), (19, 16777216), (20, 262144), (21, 540672), (22, -1), (23, -1), (24, -1), (25, -1), (26, 2097152), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, 2097152), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 14 : set()

After reduction : 
 pending  : [26, 41, 6, 21, 19, 17, 14, 20]
 solution : [7, 9]


Solution : [7, 9] has cost 10.


Decide in level 14 among pending : [26, 41, 6, 21, 19, 17, 14, 20]

Coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, 524288), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 8388608), (15, -1), (16, -1), (17, 262144), (18, -1), (19, 16777216), (20, 262144), (21, 540672), (22, -1), (23, -1), (24, -1), (25, -1), (26, 2097152), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, 2097152), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Decide 19 with phase True at level 14

After decision at level 14
 pending : [26, 41, 6, 21, 17, 14, 20]
 solution : [7, 9, 19]


New level: 15
 pending : [26, 41, 6, 21, 17, 14, 20]
 solution : [7, 9, 19]


Before reduction : 
 pending  : [26, 41, 6, 21, 17, 14, 20]
 solution : [7, 9, 19]

Essensial at level 15 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, 524288), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 8388608), (15, -1), (16, -1), (17, 262144), (18, -1), (19, 16777216), (20, 262144), (21, 540672), (22, -1), (23, -1), (24, -1), (25, -1), (26, 2097152), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, 2097152), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, 0), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 65536), (15, -1), (16, -1), (17, 65536), (18, -1), (19, -1), (20, 0), (21, 0), (22, -1), (23, -1), (24, -1), (25, -1), (26, 2048), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, 2048), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 15 : {20, 21, 6}

After reduction : 
 pending  : [26, 41, 17, 14]
 solution : [7, 9, 19]


Before reduction : 
 pending  : [26, 41, 17, 14]
 solution : [7, 9, 19]

Essensial at level 15 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, 0), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 65536), (15, -1), (16, -1), (17, 65536), (18, -1), (19, -1), (20, 0), (21, 0), (22, -1), (23, -1), (24, -1), (25, -1), (26, 2048), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, 2048), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 65536), (15, -1), (16, -1), (17, 65536), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, 2048), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, 2048), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 15 : set()

After reduction : 
 pending  : [26, 41, 17, 14]
 solution : [7, 9, 19]


Solution : [7, 9, 19] has cost 19.


Before backtrack at level 15
 pending : [26, 41, 17, 14]
 solution : [7, 9, 19]

After backtrack at level 15
 pending : [26, 41, 17, 14, 6, 21, 20]
 solution : [7, 9, 19]


Invert decision for 19 at level 14


New level: 15
 pending : [26, 41, 17, 14, 6, 21, 20]
 solution : [7, 9]


Before reduction : 
 pending  : [26, 41, 17, 14, 6, 21, 20]
 solution : [7, 9]

Essensial at level 15 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 65536), (15, -1), (16, -1), (17, 65536), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, 2048), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, 2048), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, 524288), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 8388608), (15, -1), (16, -1), (17, 262144), (18, -1), (19, -1), (20, 262144), (21, 540672), (22, -1), (23, -1), (24, -1), (25, -1), (26, 2097152), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, 2097152), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 15 : set()

After reduction : 
 pending  : [26, 41, 17, 14, 6, 21, 20]
 solution : [7, 9]


Solution : [7, 9] has cost 10.


Decide in level 15 among pending : [26, 41, 17, 14, 6, 21, 20]

Coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, 524288), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 8388608), (15, -1), (16, -1), (17, 262144), (18, -1), (19, -1), (20, 262144), (21, 540672), (22, -1), (23, -1), (24, -1), (25, -1), (26, 2097152), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, 2097152), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Decide 14 with phase True at level 15

After decision at level 15
 pending : [26, 41, 17, 6, 21, 20]
 solution : [7, 9, 14]


New level: 16
 pending : [26, 41, 17, 6, 21, 20]
 solution : [7, 9, 14]


Before reduction : 
 pending  : [26, 41, 17, 6, 21, 20]
 solution : [7, 9, 14]

Essensial at level 16 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, 524288), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 8388608), (15, -1), (16, -1), (17, 262144), (18, -1), (19, -1), (20, 262144), (21, 540672), (22, -1), (23, -1), (24, -1), (25, -1), (26, 2097152), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, 2097152), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, 262144), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, 0), (18, -1), (19, -1), (20, 0), (21, 264192), (22, -1), (23, -1), (24, -1), (25, -1), (26, 524288), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, 524288), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 16 : {17, 20}

After reduction : 
 pending  : [26, 41, 6, 21]
 solution : [7, 9, 14]


Before reduction : 
 pending  : [26, 41, 6, 21]
 solution : [7, 9, 14]

Essensial at level 16 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, 262144), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, 0), (18, -1), (19, -1), (20, 0), (21, 264192), (22, -1), (23, -1), (24, -1), (25, -1), (26, 524288), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, 524288), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, 262144), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, 264192), (22, -1), (23, -1), (24, -1), (25, -1), (26, 524288), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, 524288), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 16 : set()

After reduction : 
 pending  : [26, 41, 6, 21]
 solution : [7, 9, 14]


Solution : [7, 9, 14] has cost 17.


Before backtrack at level 16
 pending : [26, 41, 6, 21]
 solution : [7, 9, 14]

After backtrack at level 16
 pending : [26, 41, 6, 21, 17, 20]
 solution : [7, 9, 14]


Invert decision for 14 at level 15


New level: 16
 pending : [26, 41, 6, 21, 17, 20]
 solution : [7, 9]


Before reduction : 
 pending  : [26, 41, 6, 21, 17, 20]
 solution : [7, 9]

Essensial at level 16 : {17}

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, 262144), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, 264192), (22, -1), (23, -1), (24, -1), (25, -1), (26, 524288), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, 524288), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, 524288), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, 131072), (21, 540672), (22, -1), (23, -1), (24, -1), (25, -1), (26, 2097152), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, 2097152), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 16 : set()

After reduction : 
 pending  : [26, 41, 6, 21, 20]
 solution : [7, 9, 17]


Before reduction : 
 pending  : [26, 41, 6, 21, 20]
 solution : [7, 9, 17]

Essensial at level 16 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, 524288), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, 131072), (21, 540672), (22, -1), (23, -1), (24, -1), (25, -1), (26, 2097152), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, 2097152), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, 524288), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, 131072), (21, 540672), (22, -1), (23, -1), (24, -1), (25, -1), (26, 2097152), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, 2097152), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 16 : set()

After reduction : 
 pending  : [26, 41, 6, 21, 20]
 solution : [7, 9, 17]


Solution : [7, 9, 17] has cost 17.


Before backtrack at level 16
 pending : [26, 41, 6, 21, 20]
 solution : [7, 9, 17]

After backtrack at level 16
 pending : [26, 41, 6, 21, 20, 17]
 solution : [7, 9]


Before backtrack at level 15
 pending : [26, 41, 6, 21, 20, 17]
 solution : [7, 9]

After backtrack at level 15
 pending : [26, 41, 6, 21, 20, 17, 14]
 solution : [7, 9]


Before backtrack at level 14
 pending : [26, 41, 6, 21, 20, 17, 14]
 solution : [7, 9]

After backtrack at level 14
 pending : [26, 41, 6, 21, 20, 17, 14, 19]
 solution : [7, 9]


Before backtrack at level 13
 pending : [26, 41, 6, 21, 20, 17, 14, 19]
 solution : [7, 9]

After backtrack at level 13
 pending : [26, 41, 6, 21, 20, 17, 14, 19, 16]
 solution : [7, 9]


Before backtrack at level 12
 pending : [26, 41, 6, 21, 20, 17, 14, 19, 16]
 solution : [7, 9]

After backtrack at level 12
 pending : [26, 41, 6, 21, 20, 17, 14, 19, 16, 5, 29, 30, 39, 43, 44, 45, 46, 51, 38, 31, 33, 23, 18]
 solution : [7, 9]


Invert decision for 9 at level 11


New level: 12
 pending : [26, 41, 6, 21, 20, 17, 14, 19, 16, 5, 29, 30, 39, 43, 44, 45, 46, 51, 38, 31, 33, 23, 18]
 solution : [7]


Before reduction : 
 pending  : [26, 41, 6, 21, 20, 17, 14, 19, 16, 5, 29, 30, 39, 43, 44, 45, 46, 51, 38, 31, 33, 23, 18]
 solution : [7]

Essensial at level 12 : {23}

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, 524288), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, 131072), (21, 540672), (22, -1), (23, -1), (24, -1), (25, -1), (26, 2097152), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, 2097152), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 0), (6, 524288), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 8388608), (15, -1), (16, 16777216), (17, 262144), (18, 33554432), (19, 16777216), (20, 262144), (21, 540672), (22, -1), (23, -1), (24, -1), (25, -1), (26, 2097152), (27, -1), (28, -1), (29, 0), (30, 0), (31, 0), (32, -1), (33, 0), (34, -1), (35, -1), (36, -1), (37, -1), (38, 0), (39, 0), (40, -1), (41, 2097152), (42, -1), (43, 0), (44, 0), (45, 0), (46, 0), (47, -1), (48, -1), (49, -1), (50, -1), (51, 0), (52, -1)]

Covered at level 12 : {33, 5, 38, 39, 43, 44, 45, 46, 51, 29, 30, 31}

After reduction : 
 pending  : [26, 41, 6, 21, 20, 17, 14, 19, 16, 18]
 solution : [7, 23]


Before reduction : 
 pending  : [26, 41, 6, 21, 20, 17, 14, 19, 16, 18]
 solution : [7, 23]

Essensial at level 12 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 0), (6, 524288), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 8388608), (15, -1), (16, 16777216), (17, 262144), (18, 33554432), (19, 16777216), (20, 262144), (21, 540672), (22, -1), (23, -1), (24, -1), (25, -1), (26, 2097152), (27, -1), (28, -1), (29, 0), (30, 0), (31, 0), (32, -1), (33, 0), (34, -1), (35, -1), (36, -1), (37, -1), (38, 0), (39, 0), (40, -1), (41, 2097152), (42, -1), (43, 0), (44, 0), (45, 0), (46, 0), (47, -1), (48, -1), (49, -1), (50, -1), (51, 0), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, 524288), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 8388608), (15, -1), (16, 16777216), (17, 262144), (18, 33554432), (19, 16777216), (20, 262144), (21, 540672), (22, -1), (23, -1), (24, -1), (25, -1), (26, 2097152), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, 2097152), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 12 : set()

After reduction : 
 pending  : [26, 41, 6, 21, 20, 17, 14, 19, 16, 18]
 solution : [7, 23]


Solution : [7, 23] has cost 13.


Decide in level 12 among pending : [26, 41, 6, 21, 20, 17, 14, 19, 16, 18]

Coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, 524288), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 8388608), (15, -1), (16, 16777216), (17, 262144), (18, 33554432), (19, 16777216), (20, 262144), (21, 540672), (22, -1), (23, -1), (24, -1), (25, -1), (26, 2097152), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, 2097152), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Decide 18 with phase True at level 12

After decision at level 12
 pending : [26, 41, 6, 21, 20, 17, 14, 19, 16]
 solution : [7, 23, 18]


New level: 13
 pending : [26, 41, 6, 21, 20, 17, 14, 19, 16]
 solution : [7, 23, 18]


Before reduction : 
 pending  : [26, 41, 6, 21, 20, 17, 14, 19, 16]
 solution : [7, 23, 18]

Essensial at level 13 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, 524288), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 8388608), (15, -1), (16, 16777216), (17, 262144), (18, 33554432), (19, 16777216), (20, 262144), (21, 540672), (22, -1), (23, -1), (24, -1), (25, -1), (26, 2097152), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, 2097152), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, 0), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 65536), (15, -1), (16, 262144), (17, 65536), (18, -1), (19, 0), (20, 0), (21, 0), (22, -1), (23, -1), (24, -1), (25, -1), (26, 2048), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, 2048), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 13 : {19, 20, 21, 6}

After reduction : 
 pending  : [26, 41, 17, 14, 16]
 solution : [7, 23, 18]


Before reduction : 
 pending  : [26, 41, 17, 14, 16]
 solution : [7, 23, 18]

Essensial at level 13 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, 0), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 65536), (15, -1), (16, 262144), (17, 65536), (18, -1), (19, 0), (20, 0), (21, 0), (22, -1), (23, -1), (24, -1), (25, -1), (26, 2048), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, 2048), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 65536), (15, -1), (16, 262144), (17, 65536), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, 2048), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, 2048), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 13 : set()

After reduction : 
 pending  : [26, 41, 17, 14, 16]
 solution : [7, 23, 18]


Solution : [7, 23, 18] has cost 22.


Before backtrack at level 13
 pending : [26, 41, 17, 14, 16]
 solution : [7, 23, 18]

After backtrack at level 13
 pending : [26, 41, 17, 14, 16, 6, 21, 20, 19]
 solution : [7, 23, 18]


Invert decision for 18 at level 12


New level: 13
 pending : [26, 41, 17, 14, 16, 6, 21, 20, 19]
 solution : [7, 23]


Before reduction : 
 pending  : [26, 41, 17, 14, 16, 6, 21, 20, 19]
 solution : [7, 23]

Essensial at level 13 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 65536), (15, -1), (16, 262144), (17, 65536), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, 2048), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, 2048), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, 524288), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 8388608), (15, -1), (16, 16777216), (17, 262144), (18, -1), (19, 16777216), (20, 262144), (21, 540672), (22, -1), (23, -1), (24, -1), (25, -1), (26, 2097152), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, 2097152), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 13 : set()

After reduction : 
 pending  : [26, 41, 17, 14, 16, 6, 21, 20, 19]
 solution : [7, 23]


Solution : [7, 23] has cost 13.


Decide in level 13 among pending : [26, 41, 17, 14, 16, 6, 21, 20, 19]

Coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, 524288), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 8388608), (15, -1), (16, 16777216), (17, 262144), (18, -1), (19, 16777216), (20, 262144), (21, 540672), (22, -1), (23, -1), (24, -1), (25, -1), (26, 2097152), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, 2097152), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Decide 16 with phase True at level 13

After decision at level 13
 pending : [26, 41, 17, 14, 6, 21, 20, 19]
 solution : [7, 23, 16]


New level: 14
 pending : [26, 41, 17, 14, 6, 21, 20, 19]
 solution : [7, 23, 16]


Before reduction : 
 pending  : [26, 41, 17, 14, 6, 21, 20, 19]
 solution : [7, 23, 16]

Essensial at level 14 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, 524288), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 8388608), (15, -1), (16, 16777216), (17, 262144), (18, -1), (19, 16777216), (20, 262144), (21, 540672), (22, -1), (23, -1), (24, -1), (25, -1), (26, 2097152), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, 2097152), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, 262144), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 0), (15, -1), (16, -1), (17, 0), (18, -1), (19, 4194304), (20, 0), (21, 264192), (22, -1), (23, -1), (24, -1), (25, -1), (26, 524288), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, 524288), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 14 : {17, 20, 14}

After reduction : 
 pending  : [26, 41, 6, 21, 19]
 solution : [7, 23, 16]


Before reduction : 
 pending  : [26, 41, 6, 21, 19]
 solution : [7, 23, 16]

Essensial at level 14 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, 262144), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 0), (15, -1), (16, -1), (17, 0), (18, -1), (19, 4194304), (20, 0), (21, 264192), (22, -1), (23, -1), (24, -1), (25, -1), (26, 524288), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, 524288), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, 262144), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, 4194304), (20, -1), (21, 264192), (22, -1), (23, -1), (24, -1), (25, -1), (26, 524288), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, 524288), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 14 : set()

After reduction : 
 pending  : [26, 41, 6, 21, 19]
 solution : [7, 23, 16]


Solution : [7, 23, 16] has cost 20.


Before backtrack at level 14
 pending : [26, 41, 6, 21, 19]
 solution : [7, 23, 16]

After backtrack at level 14
 pending : [26, 41, 6, 21, 19, 17, 14, 20]
 solution : [7, 23, 16]


Invert decision for 16 at level 13


New level: 14
 pending : [26, 41, 6, 21, 19, 17, 14, 20]
 solution : [7, 23]


Before reduction : 
 pending  : [26, 41, 6, 21, 19, 17, 14, 20]
 solution : [7, 23]

Essensial at level 14 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, 262144), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, 4194304), (20, -1), (21, 264192), (22, -1), (23, -1), (24, -1), (25, -1), (26, 524288), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, 524288), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, 524288), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 8388608), (15, -1), (16, -1), (17, 262144), (18, -1), (19, 16777216), (20, 262144), (21, 540672), (22, -1), (23, -1), (24, -1), (25, -1), (26, 2097152), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, 2097152), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 14 : set()

After reduction : 
 pending  : [26, 41, 6, 21, 19, 17, 14, 20]
 solution : [7, 23]


Solution : [7, 23] has cost 13.


Decide in level 14 among pending : [26, 41, 6, 21, 19, 17, 14, 20]

Coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, 524288), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 8388608), (15, -1), (16, -1), (17, 262144), (18, -1), (19, 16777216), (20, 262144), (21, 540672), (22, -1), (23, -1), (24, -1), (25, -1), (26, 2097152), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, 2097152), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Decide 19 with phase True at level 14

After decision at level 14
 pending : [26, 41, 6, 21, 17, 14, 20]
 solution : [7, 23, 19]


New level: 15
 pending : [26, 41, 6, 21, 17, 14, 20]
 solution : [7, 23, 19]


Before reduction : 
 pending  : [26, 41, 6, 21, 17, 14, 20]
 solution : [7, 23, 19]

Essensial at level 15 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, 524288), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 8388608), (15, -1), (16, -1), (17, 262144), (18, -1), (19, 16777216), (20, 262144), (21, 540672), (22, -1), (23, -1), (24, -1), (25, -1), (26, 2097152), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, 2097152), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, 0), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 65536), (15, -1), (16, -1), (17, 65536), (18, -1), (19, -1), (20, 0), (21, 0), (22, -1), (23, -1), (24, -1), (25, -1), (26, 2048), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, 2048), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 15 : {20, 21, 6}

After reduction : 
 pending  : [26, 41, 17, 14]
 solution : [7, 23, 19]


Before reduction : 
 pending  : [26, 41, 17, 14]
 solution : [7, 23, 19]

Essensial at level 15 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, 0), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 65536), (15, -1), (16, -1), (17, 65536), (18, -1), (19, -1), (20, 0), (21, 0), (22, -1), (23, -1), (24, -1), (25, -1), (26, 2048), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, 2048), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 65536), (15, -1), (16, -1), (17, 65536), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, 2048), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, 2048), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 15 : set()

After reduction : 
 pending  : [26, 41, 17, 14]
 solution : [7, 23, 19]


Solution : [7, 23, 19] has cost 22.


Before backtrack at level 15
 pending : [26, 41, 17, 14]
 solution : [7, 23, 19]

After backtrack at level 15
 pending : [26, 41, 17, 14, 6, 21, 20]
 solution : [7, 23, 19]


Invert decision for 19 at level 14


New level: 15
 pending : [26, 41, 17, 14, 6, 21, 20]
 solution : [7, 23]


Before reduction : 
 pending  : [26, 41, 17, 14, 6, 21, 20]
 solution : [7, 23]

Essensial at level 15 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 65536), (15, -1), (16, -1), (17, 65536), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, 2048), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, 2048), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, 524288), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 8388608), (15, -1), (16, -1), (17, 262144), (18, -1), (19, -1), (20, 262144), (21, 540672), (22, -1), (23, -1), (24, -1), (25, -1), (26, 2097152), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, 2097152), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 15 : set()

After reduction : 
 pending  : [26, 41, 17, 14, 6, 21, 20]
 solution : [7, 23]


Solution : [7, 23] has cost 13.


Decide in level 15 among pending : [26, 41, 17, 14, 6, 21, 20]

Coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, 524288), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 8388608), (15, -1), (16, -1), (17, 262144), (18, -1), (19, -1), (20, 262144), (21, 540672), (22, -1), (23, -1), (24, -1), (25, -1), (26, 2097152), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, 2097152), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Decide 14 with phase True at level 15

After decision at level 15
 pending : [26, 41, 17, 6, 21, 20]
 solution : [7, 23, 14]


New level: 16
 pending : [26, 41, 17, 6, 21, 20]
 solution : [7, 23, 14]


Before reduction : 
 pending  : [26, 41, 17, 6, 21, 20]
 solution : [7, 23, 14]

Essensial at level 16 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, 524288), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 8388608), (15, -1), (16, -1), (17, 262144), (18, -1), (19, -1), (20, 262144), (21, 540672), (22, -1), (23, -1), (24, -1), (25, -1), (26, 2097152), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, 2097152), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, 262144), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, 0), (18, -1), (19, -1), (20, 0), (21, 264192), (22, -1), (23, -1), (24, -1), (25, -1), (26, 524288), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, 524288), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 16 : {17, 20}

After reduction : 
 pending  : [26, 41, 6, 21]
 solution : [7, 23, 14]


Before reduction : 
 pending  : [26, 41, 6, 21]
 solution : [7, 23, 14]

Essensial at level 16 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, 262144), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, 0), (18, -1), (19, -1), (20, 0), (21, 264192), (22, -1), (23, -1), (24, -1), (25, -1), (26, 524288), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, 524288), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, 262144), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, 264192), (22, -1), (23, -1), (24, -1), (25, -1), (26, 524288), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, 524288), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 16 : set()

After reduction : 
 pending  : [26, 41, 6, 21]
 solution : [7, 23, 14]


Solution : [7, 23, 14] has cost 20.


Before backtrack at level 16
 pending : [26, 41, 6, 21]
 solution : [7, 23, 14]

After backtrack at level 16
 pending : [26, 41, 6, 21, 17, 20]
 solution : [7, 23, 14]


Invert decision for 14 at level 15


New level: 16
 pending : [26, 41, 6, 21, 17, 20]
 solution : [7, 23]


Before reduction : 
 pending  : [26, 41, 6, 21, 17, 20]
 solution : [7, 23]

Essensial at level 16 : {17}

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, 262144), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, 264192), (22, -1), (23, -1), (24, -1), (25, -1), (26, 524288), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, 524288), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, 524288), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, 131072), (21, 540672), (22, -1), (23, -1), (24, -1), (25, -1), (26, 2097152), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, 2097152), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 16 : set()

After reduction : 
 pending  : [26, 41, 6, 21, 20]
 solution : [7, 23, 17]


Before reduction : 
 pending  : [26, 41, 6, 21, 20]
 solution : [7, 23, 17]

Essensial at level 16 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, 524288), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, 131072), (21, 540672), (22, -1), (23, -1), (24, -1), (25, -1), (26, 2097152), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, 2097152), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, 524288), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, 131072), (21, 540672), (22, -1), (23, -1), (24, -1), (25, -1), (26, 2097152), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, 2097152), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 16 : set()

After reduction : 
 pending  : [26, 41, 6, 21, 20]
 solution : [7, 23, 17]


Solution : [7, 23, 17] has cost 20.


Before backtrack at level 16
 pending : [26, 41, 6, 21, 20]
 solution : [7, 23, 17]

After backtrack at level 16
 pending : [26, 41, 6, 21, 20, 17]
 solution : [7, 23]


Before backtrack at level 15
 pending : [26, 41, 6, 21, 20, 17]
 solution : [7, 23]

After backtrack at level 15
 pending : [26, 41, 6, 21, 20, 17, 14]
 solution : [7, 23]


Before backtrack at level 14
 pending : [26, 41, 6, 21, 20, 17, 14]
 solution : [7, 23]

After backtrack at level 14
 pending : [26, 41, 6, 21, 20, 17, 14, 19]
 solution : [7, 23]


Before backtrack at level 13
 pending : [26, 41, 6, 21, 20, 17, 14, 19]
 solution : [7, 23]

After backtrack at level 13
 pending : [26, 41, 6, 21, 20, 17, 14, 19, 16]
 solution : [7, 23]


Before backtrack at level 12
 pending : [26, 41, 6, 21, 20, 17, 14, 19, 16]
 solution : [7, 23]

After backtrack at level 12
 pending : [26, 41, 6, 21, 20, 17, 14, 19, 16, 23, 5, 29, 30, 39, 43, 44, 45, 46, 51, 38, 31, 33, 18]
 solution : [7]


Before backtrack at level 11
 pending : [26, 41, 6, 21, 20, 17, 14, 19, 16, 23, 5, 29, 30, 39, 43, 44, 45, 46, 51, 38, 31, 33, 18]
 solution : [7]

After backtrack at level 11
 pending : [26, 41, 6, 21, 20, 17, 14, 19, 16, 23, 5, 29, 30, 39, 43, 44, 45, 46, 51, 38, 31, 33, 18, 9]
 solution : [7]


Before backtrack at level 10
 pending : [26, 41, 6, 21, 20, 17, 14, 19, 16, 23, 5, 29, 30, 39, 43, 44, 45, 46, 51, 38, 31, 33, 18, 9]
 solution : [7]

After backtrack at level 10
 pending : [26, 41, 6, 21, 20, 17, 14, 19, 16, 23, 5, 29, 30, 39, 43, 44, 45, 46, 51, 38, 31, 33, 18, 9, 36]
 solution : [7]


Before backtrack at level 9
 pending : [26, 41, 6, 21, 20, 17, 14, 19, 16, 23, 5, 29, 30, 39, 43, 44, 45, 46, 51, 38, 31, 33, 18, 9, 36]
 solution : [7]

After backtrack at level 9
 pending : [26, 41, 6, 21, 20, 17, 14, 19, 16, 23, 5, 29, 30, 39, 43, 44, 45, 46, 51, 38, 31, 33, 18, 9, 36, 15]
 solution : [7]


Before backtrack at level 8
 pending : [26, 41, 6, 21, 20, 17, 14, 19, 16, 23, 5, 29, 30, 39, 43, 44, 45, 46, 51, 38, 31, 33, 18, 9, 36, 15]
 solution : [7]

After backtrack at level 8
 pending : [26, 41, 6, 21, 20, 17, 14, 19, 16, 23, 5, 29, 30, 39, 43, 44, 45, 46, 51, 38, 31, 33, 18, 9, 36, 15, 24]
 solution : [7]


Before backtrack at level 7
 pending : [26, 41, 6, 21, 20, 17, 14, 19, 16, 23, 5, 29, 30, 39, 43, 44, 45, 46, 51, 38, 31, 33, 18, 9, 36, 15, 24]
 solution : [7]

After backtrack at level 7
 pending : [26, 41, 6, 21, 20, 17, 14, 19, 16, 23, 5, 29, 30, 39, 43, 44, 45, 46, 51, 38, 31, 33, 18, 9, 36, 15, 24, 37]
 solution : [7]


Before backtrack at level 6
 pending : [26, 41, 6, 21, 20, 17, 14, 19, 16, 23, 5, 29, 30, 39, 43, 44, 45, 46, 51, 38, 31, 33, 18, 9, 36, 15, 24, 37]
 solution : [7]

After backtrack at level 6
 pending : [26, 41, 6, 21, 20, 17, 14, 19, 16, 23, 5, 29, 30, 39, 43, 44, 45, 46, 51, 38, 31, 33, 18, 9, 36, 15, 24, 37, 32]
 solution : [7]


Before backtrack at level 5
 pending : [26, 41, 6, 21, 20, 17, 14, 19, 16, 23, 5, 29, 30, 39, 43, 44, 45, 46, 51, 38, 31, 33, 18, 9, 36, 15, 24, 37, 32]
 solution : [7]

After backtrack at level 5
 pending : [26, 41, 6, 21, 20, 17, 14, 19, 16, 23, 5, 29, 30, 39, 43, 44, 45, 46, 51, 38, 31, 33, 18, 9, 36, 15, 24, 37, 32, 13]
 solution : [7]


Before backtrack at level 4
 pending : [26, 41, 6, 21, 20, 17, 14, 19, 16, 23, 5, 29, 30, 39, 43, 44, 45, 46, 51, 38, 31, 33, 18, 9, 36, 15, 24, 37, 32, 13]
 solution : [7]

After backtrack at level 4
 pending : [26, 41, 6, 21, 20, 17, 14, 19, 16, 23, 5, 29, 30, 39, 43, 44, 45, 46, 51, 38, 31, 33, 18, 9, 36, 15, 24, 37, 32, 13, 27]
 solution : [7]


Before backtrack at level 3
 pending : [26, 41, 6, 21, 20, 17, 14, 19, 16, 23, 5, 29, 30, 39, 43, 44, 45, 46, 51, 38, 31, 33, 18, 9, 36, 15, 24, 37, 32, 13, 27]
 solution : [7]

After backtrack at level 3
 pending : [26, 41, 6, 21, 20, 17, 14, 19, 16, 23, 5, 29, 30, 39, 43, 44, 45, 46, 51, 38, 31, 33, 18, 9, 36, 15, 24, 37, 32, 13, 27, 28]
 solution : [7]


Before backtrack at level 2
 pending : [26, 41, 6, 21, 20, 17, 14, 19, 16, 23, 5, 29, 30, 39, 43, 44, 45, 46, 51, 38, 31, 33, 18, 9, 36, 15, 24, 37, 32, 13, 27, 28]
 solution : [7]

After backtrack at level 2
 pending : [26, 41, 6, 21, 20, 17, 14, 19, 16, 23, 5, 29, 30, 39, 43, 44, 45, 46, 51, 38, 31, 33, 18, 9, 36, 15, 24, 37, 32, 13, 27, 28, 10]
 solution : [7]


Before backtrack at level 1
 pending : [26, 41, 6, 21, 20, 17, 14, 19, 16, 23, 5, 29, 30, 39, 43, 44, 45, 46, 51, 38, 31, 33, 18, 9, 36, 15, 24, 37, 32, 13, 27, 28, 10]
 solution : [7]

After backtrack at level 1
 pending : [26, 41, 6, 21, 20, 17, 14, 19, 16, 23, 5, 29, 30, 39, 43, 44, 45, 46, 51, 38, 31, 33, 18, 9, 36, 15, 24, 37, 32, 13, 27, 28, 10, 8]
 solution : [7]


=====================================================================================================================

	[MIN RESULT]: Minimized Invariants on [ivybench/sym_quorum/ivy/simple-election: acceptor=3,proposer=3]

=====================================================================================================================

[MIN NOTE]: number of minimal solution found: 1

[MIN NOTE]: total qcost: 14

[MIN NOTE]: maximum branch and bound depth: 16

Definitions (length=2)

invariant [def_didNotPromise] didNotPromise(A) = forall P. ~promise(A,P) # definition

invariant [def_chosenAt] chosenAt(Q,P) = forall A. member(A,Q) -> promise(A,P) # definition

Equality Relations (length=0)

Solution 0 : [7, 27, 9] (length = 3)

invariant [invar_7] forall PROPOSER1,ACCEPTOR0,PROPOSER0. ~promise(ACCEPTOR0,PROPOSER0) | ~promise(ACCEPTOR0,PROPOSER1) | PROPOSER0 = PROPOSER1 # qcost: 6

invariant [invar_27] forall PROPOSER0. (exists QUORUM0. chosenAt(QUORUM0,PROPOSER0) | ~leader(PROPOSER0)) # qcost: 4

invariant [invar_9] forall ACCEPTOR0,PROPOSER0. ~promise(ACCEPTOR0,PROPOSER0) | start(PROPOSER0) # qcost: 4




[QRM NOTE]: Time elapsed since start: 9.405 seconds

[QRM NOTE]: Time elapsed since last: 1.694 seconds

[QRM NOTE]: Peak memory: 3180103 bytes


========================================================================================================================

	[MIN_CHECK] Minimization Sanity Check on [ivybench/sym_quorum/ivy/simple-election: acceptor=3,proposer=3]

========================================================================================================================

Minimization check for Solution 0

[MIN_CHECK RESULT]: PASS

[QRM NOTE]: Time elapsed since start: 9.773 seconds

[QRM NOTE]: Time elapsed since last: 0.368 seconds

[QRM NOTE]: Peak memory: 2172431 bytes


=========================================================================================================

	[IVY_CHECK]: Ivy Check on [ivybench/sym_quorum/ivy/simple-election: acceptor=3,proposer=3]

=========================================================================================================

ivy_check complete=fo ivybench/sym_quorum/ivy/simple-election.acceptor_3_proposer_3.0.ivy


Isolate this:

    The following properties are assumed as axioms:
        ivybench/sym_quorum/ivy/simple-election.acceptor_3_proposer_3.0.ivy: line 17: axiom1

    The following definitions are used:
        ivybench/sym_quorum/ivy/simple-election.acceptor_3_proposer_3.0.ivy: line 29: def2
        ivybench/sym_quorum/ivy/simple-election.acceptor_3_proposer_3.0.ivy: line 30: def3

    The inductive invariant consists of the following conjectures:
        ivybench/sym_quorum/ivy/simple-election.acceptor_3_proposer_3.0.ivy: line 63: def_didNotPromise
        ivybench/sym_quorum/ivy/simple-election.acceptor_3_proposer_3.0.ivy: line 64: def_chosenAt
        ivybench/sym_quorum/ivy/simple-election.acceptor_3_proposer_3.0.ivy: line 65: invar_7
        ivybench/sym_quorum/ivy/simple-election.acceptor_3_proposer_3.0.ivy: line 66: invar_27
        ivybench/sym_quorum/ivy/simple-election.acceptor_3_proposer_3.0.ivy: line 67: invar_9

    The following action implementations are present:
        ivybench/sym_quorum/ivy/simple-election.acceptor_3_proposer_3.0.ivy: line 48: implementation of decide
        ivybench/sym_quorum/ivy/simple-election.acceptor_3_proposer_3.0.ivy: line 39: implementation of send_1a
        ivybench/sym_quorum/ivy/simple-election.acceptor_3_proposer_3.0.ivy: line 42: implementation of send_1b

    The following initializers are present:
        ivybench/sym_quorum/ivy/simple-election.acceptor_3_proposer_3.0.ivy: line 32: init[after4]

    Initialization must establish the invariant
        ivybench/sym_quorum/ivy/simple-election.acceptor_3_proposer_3.0.ivy: line 63: def_didNotPromise ... PASS
        ivybench/sym_quorum/ivy/simple-election.acceptor_3_proposer_3.0.ivy: line 64: def_chosenAt ... PASS
        ivybench/sym_quorum/ivy/simple-election.acceptor_3_proposer_3.0.ivy: line 65: invar_7 ... PASS
        ivybench/sym_quorum/ivy/simple-election.acceptor_3_proposer_3.0.ivy: line 66: invar_27 ... PASS
        ivybench/sym_quorum/ivy/simple-election.acceptor_3_proposer_3.0.ivy: line 67: invar_9 ... PASS

    The following set of external actions must preserve the invariant:
        (internal) ext:decide
            ivybench/sym_quorum/ivy/simple-election.acceptor_3_proposer_3.0.ivy: line 63: def_didNotPromise ... PASS
            ivybench/sym_quorum/ivy/simple-election.acceptor_3_proposer_3.0.ivy: line 64: def_chosenAt ... PASS
            ivybench/sym_quorum/ivy/simple-election.acceptor_3_proposer_3.0.ivy: line 65: invar_7 ... PASS
            ivybench/sym_quorum/ivy/simple-election.acceptor_3_proposer_3.0.ivy: line 66: invar_27 ... PASS
            ivybench/sym_quorum/ivy/simple-election.acceptor_3_proposer_3.0.ivy: line 67: invar_9 ... PASS
        (internal) ext:send_1a
            ivybench/sym_quorum/ivy/simple-election.acceptor_3_proposer_3.0.ivy: line 63: def_didNotPromise ... PASS
            ivybench/sym_quorum/ivy/simple-election.acceptor_3_proposer_3.0.ivy: line 64: def_chosenAt ... PASS
            ivybench/sym_quorum/ivy/simple-election.acceptor_3_proposer_3.0.ivy: line 65: invar_7 ... PASS
            ivybench/sym_quorum/ivy/simple-election.acceptor_3_proposer_3.0.ivy: line 66: invar_27 ... PASS
            ivybench/sym_quorum/ivy/simple-election.acceptor_3_proposer_3.0.ivy: line 67: invar_9 ... PASS
        (internal) ext:send_1b
            ivybench/sym_quorum/ivy/simple-election.acceptor_3_proposer_3.0.ivy: line 63: def_didNotPromise ... PASS
            ivybench/sym_quorum/ivy/simple-election.acceptor_3_proposer_3.0.ivy: line 64: def_chosenAt ... PASS
            ivybench/sym_quorum/ivy/simple-election.acceptor_3_proposer_3.0.ivy: line 65: invar_7 ... PASS
            ivybench/sym_quorum/ivy/simple-election.acceptor_3_proposer_3.0.ivy: line 66: invar_27 ... PASS
            ivybench/sym_quorum/ivy/simple-election.acceptor_3_proposer_3.0.ivy: line 67: invar_9 ... PASS

    The following program assertions are treated as assumptions:
        in action send_1b when called from the environment:
            ivybench/sym_quorum/ivy/simple-election.acceptor_3_proposer_3.0.ivy: line 43: assumption
            ivybench/sym_quorum/ivy/simple-election.acceptor_3_proposer_3.0.ivy: line 44: assumption
        in action decide when called from the environment:
            ivybench/sym_quorum/ivy/simple-election.acceptor_3_proposer_3.0.ivy: line 49: assumption

OK
[IVY_CHECK RESULT]: PASS

[R Implies P]: True

[UNSAT CORE]: ((forall A. didNotPromise(A) <-> (forall P. ~promise(A,P))) & (forall P,Q. chosenAt(Q,P) <-> (forall A. member(A,Q) -> promise(A,P))) & (forall Q2,Q1. (exists A. (member(A,Q1) & member(A,Q2)))) & (forall PROPOSER0,PROPOSER1,ACCEPTOR0. ~promise(ACCEPTOR0,PROPOSER0) | ~promise(ACCEPTOR0,PROPOSER1) | PROPOSER0 = PROPOSER1) & (forall PROPOSER0. (exists QUORUM0. chosenAt(QUORUM0,PROPOSER0) | ~leader(PROPOSER0))))

[QRM NOTE]: Time elapsed since start: 11.598 seconds

[QRM NOTE]: Time elapsed since last: 1.825 seconds

[QRM NOTE]: Peak memory: 2211514 bytes


**********************************************************************

	[QRM]: ivybench/sym_quorum/ivy/simple-election.ivy

**********************************************************************

[QRM RESULT]: PASS

