
**********************************************************************

	[QRM]: ivybench/sym_quorum/ivy/simple-election.ivy

**********************************************************************


---------- Parsing Ivy ----------


Printing isolate this:

OK


=============================================================================================================

	[FW]: Forward Reachability on [ivybench/sym_quorum/ivy/simple-election: acceptor=3,proposer=3]

=============================================================================================================


==============================================

	Set up for forward reachability

==============================================

ivy_to_cpp target=qrm simple-election.acceptor_3_proposer_3.finite.ivy

[IVY_TO_CPP RESULT]: OK

swig -c++ -python -o simple-election.acceptor_3_proposer_3.finite_wrap.cpp ivy_exec.i

[SWIG RESULT]: OK

g++ -std=c++11 -fpic -pthread -O3 simple-election.acceptor_3_proposer_3.finite.cpp simple-election.acceptor_3_proposer_3.finite_wrap.cpp -I/usr/include/python3.12 -c

[G++ RESULT]: OK

g++ -shared simple-election.acceptor_3_proposer_3.finite.o simple-election.acceptor_3_proposer_3.finite_wrap.o -o _ivy_exec.so -lm -lstdc++

[LINK RESULT]: OK

[FW NOTE]: number of state atoms: 27

[FW NOTE]: number of interpreted atoms (e.g. member,le): 9

[FW NOTE]: number of branching actions: 21

[FW NOTE]: symmetric group order: 36

[QRM NOTE]: Time elapsed since start: 5.965 seconds

[QRM NOTE]: Time elapsed since last: 5.965 seconds

[QRM NOTE]: Peak memory: 667604 bytes


=====================================

	Symmetric Quotient DFS

=====================================

[FW NOTE]: dfs max depth: 7

[FW NOTE]: number of total reachable states:        254

[FW NOTE]: number of dfs representative states:     26

[FW NOTE]: number of dfs non-representative states: 228


====================================================================================================================

	[FW RESULT]: Forward Reachability on [ivybench/sym_quorum/ivy/simple-election: acceptor=3,proposer=3]

====================================================================================================================

sort: acceptor=['acceptor0', 'acceptor1', 'acceptor2']
sort: proposer=['proposer0', 'proposer1', 'proposer2']
sort: quorum=['quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2']
predicate: start('proposer',)
predicate: member('acceptor', 'quorum')
predicate: leader('proposer',)
predicate: chosenAt('quorum', 'proposer')
predicate: didNotPromise('acceptor',)
predicate: promise('acceptor', 'proposer')
interpreted atoms: {'member(acceptor0,quorum__acceptor0_acceptor1)': '1', 'member(acceptor0,quorum__acceptor0_acceptor2)': '1', 'member(acceptor0,quorum__acceptor1_acceptor2)': '0', 'member(acceptor1,quorum__acceptor0_acceptor1)': '1', 'member(acceptor1,quorum__acceptor0_acceptor2)': '0', 'member(acceptor1,quorum__acceptor1_acceptor2)': '1', 'member(acceptor2,quorum__acceptor0_acceptor1)': '0', 'member(acceptor2,quorum__acceptor0_acceptor2)': '1', 'member(acceptor2,quorum__acceptor1_acceptor2)': '1'}
state atoms: ['chosenAt(quorum__acceptor0_acceptor1,proposer0)', 'chosenAt(quorum__acceptor0_acceptor1,proposer1)', 'chosenAt(quorum__acceptor0_acceptor1,proposer2)', 'chosenAt(quorum__acceptor0_acceptor2,proposer0)', 'chosenAt(quorum__acceptor0_acceptor2,proposer1)', 'chosenAt(quorum__acceptor0_acceptor2,proposer2)', 'chosenAt(quorum__acceptor1_acceptor2,proposer0)', 'chosenAt(quorum__acceptor1_acceptor2,proposer1)', 'chosenAt(quorum__acceptor1_acceptor2,proposer2)', 'didNotPromise(acceptor0)', 'didNotPromise(acceptor1)', 'didNotPromise(acceptor2)', 'leader(proposer0)', 'leader(proposer1)', 'leader(proposer2)', 'promise(acceptor0,proposer0)', 'promise(acceptor0,proposer1)', 'promise(acceptor0,proposer2)', 'promise(acceptor1,proposer0)', 'promise(acceptor1,proposer1)', 'promise(acceptor1,proposer2)', 'promise(acceptor2,proposer0)', 'promise(acceptor2,proposer1)', 'promise(acceptor2,proposer2)', 'start(proposer0)', 'start(proposer1)', 'start(proposer2)']
representative states : 117440939, 117441451, 117442475, 117444523, 50597803, 201367467, 9798197163, 9800294315, 134782891, 136880043, 203464619, 17108907, 348075, 50595755, 201365419, 9798195115, 9800292267, 134780843, 136877995, 203462571, 17106859, 50594731, 201364395, 9798194091, 9800291243, 203461547


=== State Orbit 0 =====================
size : 1
repr state: 000000000111000000000000000
lex min decimal: 117440939
states:
000000000111000000000000000




=== State Orbit 1 =====================
size : 3
repr state: 000000000111000000000000100
lex min decimal: 117441451
states:
000000000111000000000000100
000000000111000000000000001
000000000111000000000000010




=== State Orbit 2 =====================
size : 3
repr state: 000000000111000000000000110
lex min decimal: 117442475
states:
000000000111000000000000110
000000000111000000000000101
000000000111000000000000011




=== State Orbit 3 =====================
size : 1
repr state: 000000000111000000000000111
lex min decimal: 117444523
states:
000000000111000000000000111




=== State Orbit 4 =====================
size : 9
repr state: 000000000011000100000000111
lex min decimal: 50597803
states:
000000000011000010000000111
000000000110000000000010111
000000000011000100000000111
000000000101000000010000111
000000000101000000001000111
000000000110000000000001111
000000000011000001000000111
000000000101000000100000111
000000000110000000000100111




=== State Orbit 5 =====================
size : 9
repr state: 100000000001000100100000111
lex min decimal: 201367467
states:
000010000010000010000010111
000000100100000000100100111
100000000001000100100000111
000000010100000000010010111
001000000001000001001000111
010000000001000010010000111
000000001100000000001001111
000001000010000001000001111
000100000010000100000100111




=== State Orbit 6 =====================
size : 3
repr state: 100100100000000100100100111
lex min decimal: 9798197163
states:
001001001000000001001001111
010010010000000010010010111
100100100000000100100100111




=== State Orbit 7 =====================
size : 3
repr state: 100100100000100100100100111
lex min decimal: 9800294315
states:
010010010000010010010010111
100100100000100100100100111
001001001000001001001001111




=== State Orbit 8 =====================
size : 18
repr state: 100000000000000100100010111
lex min decimal: 134782891
states:
100000000000000100100001111
001000000000000001001010111
000001000000000001010001111
000000100000000001100100111
100000000000000100100010111
000100000000000100010100111
010000000000000010010001111
000000100000000010100100111
000000010000000100010010111
001000000000000001001100111
000010000000000010100010111
000000001000000100001001111
000001000000000001100001111
000000010000000001010010111
000000001000000010001001111
000010000000000010001010111
010000000000000010010100111
000100000000000100001100111




=== State Orbit 9 =====================
size : 18
repr state: 100000000000100100100010111
lex min decimal: 136880043
states:
000100000000100100010100111
000001000000001001010001111
010000000000010010010001111
000000010000010100010010111
000001000000001001100001111
001000000000001001001010111
000100000000100100001100111
001000000000001001001100111
000000100000100010100100111
010000000000010010010100111
000010000000010010001010111
000000010000010001010010111
000000001000001010001001111
100000000000100100100010111
000000001000001100001001111
000000100000100001100100111
100000000000100100100001111
000010000000010010100010111




=== State Orbit 10 =====================
size : 9
repr state: 100000000001100100100000111
lex min decimal: 203464619
states:
000010000010010010000010111
000000001100001000001001111
100000000001100100100000111
000100000010100100000100111
010000000001010010010000111
001000000001001001001000111
000001000010001001000001111
000000100100100000100100111
000000010100010000010010111




=== State Orbit 11 =====================
size : 18
repr state: 000000000001000100010000111
lex min decimal: 17108907
states:
000000000001000100010000111
000000000100000000010001111
000000000010000100000010111
000000000001000001100000111
000000000001000001010000111
000000000010000001000100111
000000000010000010000100111
000000000001000010001000111
000000000100000000100010111
000000000100000000001010111
000000000100000000001100111
000000000001000100001000111
000000000010000100000001111
000000000010000010000001111
000000000010000001000010111
000000000100000000100001111
000000000100000000010100111
000000000001000010100000111




=== State Orbit 12 =====================
size : 6
repr state: 000000000000000100010001111
lex min decimal: 348075
states:
000000000000000010001100111
000000000000000010100001111
000000000000000100010001111
000000000000000001010100111
000000000000000100001010111
000000000000000001100010111




=== State Orbit 13 =====================
size : 18
repr state: 000000000011000100000000110
lex min decimal: 50595755
states:
000000000011000010000000110
000000000011000010000000011
000000000011000001000000011
000000000101000000100000110
000000000101000000010000110
000000000110000000000010110
000000000110000000000001101
000000000101000000001000011
000000000110000000000001011
000000000110000000000010011
000000000101000000100000101
000000000011000001000000101
000000000011000100000000110
000000000110000000000100101
000000000101000000001000101
000000000101000000010000011
000000000110000000000100110
000000000011000100000000101




=== State Orbit 14 =====================
size : 18
repr state: 100000000001000100100000110
lex min decimal: 201365419
states:
000010000010000010000010110
010000000001000010010000011
000001000010000001000001101
000000010100000000010010011
000000001100000000001001011
001000000001000001001000101
000100000010000100000100101
000000001100000000001001101
000000100100000000100100110
100000000001000100100000101
000010000010000010000010011
000000100100000000100100101
001000000001000001001000011
000100000010000100000100110
000000010100000000010010110
010000000001000010010000110
000001000010000001000001011
100000000001000100100000110




=== State Orbit 15 =====================
size : 6
repr state: 100100100000000100100100110
lex min decimal: 9798195115
states:
010010010000000010010010011
100100100000000100100100101
001001001000000001001001101
010010010000000010010010110
100100100000000100100100110
001001001000000001001001011




=== State Orbit 16 =====================
size : 6
repr state: 100100100000100100100100110
lex min decimal: 9800292267
states:
100100100000100100100100110
001001001000001001001001101
010010010000010010010010110
001001001000001001001001011
100100100000100100100100101
010010010000010010010010011




=== State Orbit 17 =====================
size : 18
repr state: 100000000000000100100010110
lex min decimal: 134780843
states:
001000000000000001001100101
000001000000000001100001101
000100000000000100010100110
010000000000000010010001011
010000000000000010010100110
001000000000000001001010011
000010000000000010001010011
000001000000000001010001011
000000100000000001100100101
000000010000000001010010011
000000001000000100001001101
000000010000000100010010110
100000000000000100100010110
100000000000000100100001101
000000001000000010001001011
000100000000000100001100101
000000100000000010100100110
000010000000000010100010110




=== State Orbit 18 =====================
size : 18
repr state: 100000000000100100100010110
lex min decimal: 136877995
states:
001000000000001001001010011
010000000000010010010001011
010000000000010010010100110
000000001000001010001001011
100000000000100100100001101
000010000000010010100010110
000000010000010100010010110
000001000000001001010001011
000010000000010010001010011
000100000000100100001100101
000100000000100100010100110
001000000000001001001100101
000000100000100010100100110
000000100000100001100100101
000000001000001100001001101
100000000000100100100010110
000000010000010001010010011
000001000000001001100001101




=== State Orbit 19 =====================
size : 18
repr state: 100000000001100100100000110
lex min decimal: 203462571
states:
000000100100100000100100110
000001000010001001000001101
001000000001001001001000101
010000000001010010010000110
000000010100010000010010011
000010000010010010000010011
000000010100010000010010110
000100000010100100000100101
000000001100001000001001101
000010000010010010000010110
000000001100001000001001011
100000000001100100100000101
000000100100100000100100101
100000000001100100100000110
000001000010001001000001011
010000000001010010010000011
000100000010100100000100110
001000000001001001001000011




=== State Orbit 20 =====================
size : 18
repr state: 000000000001000100010000110
lex min decimal: 17106859
states:
000000000001000100001000101
000000000010000100000010110
000000000100000000100001101
000000000001000010100000110
000000000100000000001010011
000000000010000010000001011
000000000001000100010000110
000000000100000000001100101
000000000010000001000100101
000000000010000010000100110
000000000100000000010100110
000000000001000010001000011
000000000010000100000001101
000000000010000001000010011
000000000001000001010000011
000000000100000000100010110
000000000100000000010001011
000000000001000001100000101




=== State Orbit 21 =====================
size : 9
repr state: 000000000011000100000000100
lex min decimal: 50594731
states:
000000000011000001000000001
000000000011000100000000100
000000000110000000000010010
000000000101000000100000100
000000000110000000000001001
000000000011000010000000010
000000000101000000001000001
000000000110000000000100100
000000000101000000010000010




=== State Orbit 22 =====================
size : 9
repr state: 100000000001000100100000100
lex min decimal: 201364395
states:
000100000010000100000100100
000000001100000000001001001
000000010100000000010010010
100000000001000100100000100
010000000001000010010000010
000000100100000000100100100
000010000010000010000010010
001000000001000001001000001
000001000010000001000001001




=== State Orbit 23 =====================
size : 3
repr state: 100100100000000100100100100
lex min decimal: 9798194091
states:
010010010000000010010010010
100100100000000100100100100
001001001000000001001001001




=== State Orbit 24 =====================
size : 3
repr state: 100100100000100100100100100
lex min decimal: 9800291243
states:
001001001000001001001001001
010010010000010010010010010
100100100000100100100100100




=== State Orbit 25 =====================
size : 9
repr state: 100000000001100100100000100
lex min decimal: 203461547
states:
000001000010001001000001001
001000000001001001001000001
000100000010100100000100100
000000001100001000001001001
000000100100100000100100100
010000000001010010010000010
100000000001100100100000100
000000010100010000010010010
000010000010010010000010010



[QRM NOTE]: Time elapsed since start: 6.447 seconds

[QRM NOTE]: Time elapsed since last: 0.482 seconds

[QRM NOTE]: Peak memory: 256872 bytes


======================================

	Reduce Equivalent Atoms

======================================

[FW NOTE]: equivalent atoms

[FW NOTE]: complement atoms

[FW NOTE]: remove_atom_ids: set()

[QRM NOTE]: Time elapsed since start: 6.467 seconds

[QRM NOTE]: Time elapsed since last: 0.020 seconds

[QRM NOTE]: Peak memory: 333374 bytes


====================================================================================================================

	[PRIME]: Prime Orbit Generatation on [ivybench/sym_quorum/ivy/simple-election: acceptor=3,proposer=3]

====================================================================================================================


===============================================================================================================

	[PRIME RESULT]: Prime Orbits on [ivybench/sym_quorum/ivy/simple-election: acceptor=3,proposer=3]

===============================================================================================================


=== Prime Orbit 0 =====================
size : 18
num_suborbits: 1
0 (*) : 1------------1-------------
0     : ['chosenAt(quorum__acceptor0_acceptor1,proposer0)', 'leader(proposer1)']
1     : 1-------------1------------
1     : ['chosenAt(quorum__acceptor0_acceptor1,proposer0)', 'leader(proposer2)']
2     : -1----------1--------------
2     : ['chosenAt(quorum__acceptor0_acceptor1,proposer1)', 'leader(proposer0)']
3     : -1------------1------------
3     : ['chosenAt(quorum__acceptor0_acceptor1,proposer1)', 'leader(proposer2)']
4     : --1---------1--------------
4     : ['chosenAt(quorum__acceptor0_acceptor1,proposer2)', 'leader(proposer0)']
5     : --1----------1-------------
5     : ['chosenAt(quorum__acceptor0_acceptor1,proposer2)', 'leader(proposer1)']
6     : ---1---------1-------------
6     : ['chosenAt(quorum__acceptor0_acceptor2,proposer0)', 'leader(proposer1)']
7     : ---1----------1------------
7     : ['chosenAt(quorum__acceptor0_acceptor2,proposer0)', 'leader(proposer2)']
8     : ----1-------1--------------
8     : ['chosenAt(quorum__acceptor0_acceptor2,proposer1)', 'leader(proposer0)']
9     : ----1---------1------------
9     : ['chosenAt(quorum__acceptor0_acceptor2,proposer1)', 'leader(proposer2)']
10     : -----1------1--------------
10     : ['chosenAt(quorum__acceptor0_acceptor2,proposer2)', 'leader(proposer0)']
11     : -----1-------1-------------
11     : ['chosenAt(quorum__acceptor0_acceptor2,proposer2)', 'leader(proposer1)']
12     : ------1------1-------------
12     : ['chosenAt(quorum__acceptor1_acceptor2,proposer0)', 'leader(proposer1)']
13     : ------1-------1------------
13     : ['chosenAt(quorum__acceptor1_acceptor2,proposer0)', 'leader(proposer2)']
14     : -------1----1--------------
14     : ['chosenAt(quorum__acceptor1_acceptor2,proposer1)', 'leader(proposer0)']
15     : -------1------1------------
15     : ['chosenAt(quorum__acceptor1_acceptor2,proposer1)', 'leader(proposer2)']
16     : --------1---1--------------
16     : ['chosenAt(quorum__acceptor1_acceptor2,proposer2)', 'leader(proposer0)']
17     : --------1----1-------------
17     : ['chosenAt(quorum__acceptor1_acceptor2,proposer2)', 'leader(proposer1)']
num_forall :   0
num_exists :   0
num_literals : 0
quantified form : None
qcost : 0


=== Prime Orbit 1 =====================
size : 3
num_suborbits: 1
18 (*) : ------------11-------------
18     : ['leader(proposer0)', 'leader(proposer1)']
19     : ------------1-1------------
19     : ['leader(proposer0)', 'leader(proposer2)']
20     : -------------11------------
20     : ['leader(proposer1)', 'leader(proposer2)']
num_forall :   0
num_exists :   0
num_literals : 0
quantified form : None
qcost : 0


=== Prime Orbit 2 =====================
size : 3
num_suborbits: 1
21 (*) : -------------1-----------0-
21     : ['leader(proposer1)', '~start(proposer1)']
22     : --------------1-----------0
22     : ['leader(proposer2)', '~start(proposer2)']
23     : ------------1-----------0--
23     : ['leader(proposer0)', '~start(proposer0)']
num_forall :   0
num_exists :   0
num_literals : 0
quantified form : None
qcost : 0


=== Prime Orbit 3 =====================
size : 18
num_suborbits: 1
24 (*) : -------1---1---------------
24     : ['chosenAt(quorum__acceptor1_acceptor2,proposer1)', 'didNotPromise(acceptor2)']
25     : --------1--1---------------
25     : ['chosenAt(quorum__acceptor1_acceptor2,proposer2)', 'didNotPromise(acceptor2)']
26     : ------1----1---------------
26     : ['chosenAt(quorum__acceptor1_acceptor2,proposer0)', 'didNotPromise(acceptor2)']
27     : -------1--1----------------
27     : ['chosenAt(quorum__acceptor1_acceptor2,proposer1)', 'didNotPromise(acceptor1)']
28     : --------1-1----------------
28     : ['chosenAt(quorum__acceptor1_acceptor2,proposer2)', 'didNotPromise(acceptor1)']
29     : ------1---1----------------
29     : ['chosenAt(quorum__acceptor1_acceptor2,proposer0)', 'didNotPromise(acceptor1)']
30     : ----1------1---------------
30     : ['chosenAt(quorum__acceptor0_acceptor2,proposer1)', 'didNotPromise(acceptor2)']
31     : -----1-----1---------------
31     : ['chosenAt(quorum__acceptor0_acceptor2,proposer2)', 'didNotPromise(acceptor2)']
32     : ---1-------1---------------
32     : ['chosenAt(quorum__acceptor0_acceptor2,proposer0)', 'didNotPromise(acceptor2)']
33     : ----1----1-----------------
33     : ['chosenAt(quorum__acceptor0_acceptor2,proposer1)', 'didNotPromise(acceptor0)']
34     : -----1---1-----------------
34     : ['chosenAt(quorum__acceptor0_acceptor2,proposer2)', 'didNotPromise(acceptor0)']
35     : ---1-----1-----------------
35     : ['chosenAt(quorum__acceptor0_acceptor2,proposer0)', 'didNotPromise(acceptor0)']
36     : -1--------1----------------
36     : ['chosenAt(quorum__acceptor0_acceptor1,proposer1)', 'didNotPromise(acceptor1)']
37     : --1-------1----------------
37     : ['chosenAt(quorum__acceptor0_acceptor1,proposer2)', 'didNotPromise(acceptor1)']
38     : 1---------1----------------
38     : ['chosenAt(quorum__acceptor0_acceptor1,proposer0)', 'didNotPromise(acceptor1)']
39     : -1-------1-----------------
39     : ['chosenAt(quorum__acceptor0_acceptor1,proposer1)', 'didNotPromise(acceptor0)']
40     : --1------1-----------------
40     : ['chosenAt(quorum__acceptor0_acceptor1,proposer2)', 'didNotPromise(acceptor0)']
41     : 1--------1-----------------
41     : ['chosenAt(quorum__acceptor0_acceptor1,proposer0)', 'didNotPromise(acceptor0)']
num_forall :   0
num_exists :   0
num_literals : 0
quantified form : None
qcost : 0


=== Prime Orbit 4 =====================
size : 9
num_suborbits: 1
42 (*) : -----------1---------1-----
42     : ['didNotPromise(acceptor2)', 'promise(acceptor2,proposer0)']
43     : -----------1----------1----
43     : ['didNotPromise(acceptor2)', 'promise(acceptor2,proposer1)']
44     : -----------1-----------1---
44     : ['didNotPromise(acceptor2)', 'promise(acceptor2,proposer2)']
45     : ----------1-------1--------
45     : ['didNotPromise(acceptor1)', 'promise(acceptor1,proposer0)']
46     : ----------1--------1-------
46     : ['didNotPromise(acceptor1)', 'promise(acceptor1,proposer1)']
47     : ----------1---------1------
47     : ['didNotPromise(acceptor1)', 'promise(acceptor1,proposer2)']
48     : ---------1-----1-----------
48     : ['didNotPromise(acceptor0)', 'promise(acceptor0,proposer0)']
49     : ---------1------1----------
49     : ['didNotPromise(acceptor0)', 'promise(acceptor0,proposer1)']
50     : ---------1-------1---------
50     : ['didNotPromise(acceptor0)', 'promise(acceptor0,proposer2)']
num_forall :   0
num_exists :   0
num_literals : 0
quantified form : None
qcost : 0


=== Prime Orbit 5 =====================
size : 36
num_suborbits: 1
51 (*) : ---1-------------------1---
51     : ['chosenAt(quorum__acceptor0_acceptor2,proposer0)', 'promise(acceptor2,proposer2)']
52     : ---1------------------1----
52     : ['chosenAt(quorum__acceptor0_acceptor2,proposer0)', 'promise(acceptor2,proposer1)']
53     : ----1------------------1---
53     : ['chosenAt(quorum__acceptor0_acceptor2,proposer1)', 'promise(acceptor2,proposer2)']
54     : ----1----------------1-----
54     : ['chosenAt(quorum__acceptor0_acceptor2,proposer1)', 'promise(acceptor2,proposer0)']
55     : -----1----------------1----
55     : ['chosenAt(quorum__acceptor0_acceptor2,proposer2)', 'promise(acceptor2,proposer1)']
56     : -----1---------------1-----
56     : ['chosenAt(quorum__acceptor0_acceptor2,proposer2)', 'promise(acceptor2,proposer0)']
57     : 1-------------------1------
57     : ['chosenAt(quorum__acceptor0_acceptor1,proposer0)', 'promise(acceptor1,proposer2)']
58     : 1------------------1-------
58     : ['chosenAt(quorum__acceptor0_acceptor1,proposer0)', 'promise(acceptor1,proposer1)']
59     : -1------------------1------
59     : ['chosenAt(quorum__acceptor0_acceptor1,proposer1)', 'promise(acceptor1,proposer2)']
60     : -1----------------1--------
60     : ['chosenAt(quorum__acceptor0_acceptor1,proposer1)', 'promise(acceptor1,proposer0)']
61     : --1----------------1-------
61     : ['chosenAt(quorum__acceptor0_acceptor1,proposer2)', 'promise(acceptor1,proposer1)']
62     : --1---------------1--------
62     : ['chosenAt(quorum__acceptor0_acceptor1,proposer2)', 'promise(acceptor1,proposer0)']
63     : ------1----------------1---
63     : ['chosenAt(quorum__acceptor1_acceptor2,proposer0)', 'promise(acceptor2,proposer2)']
64     : ------1---------------1----
64     : ['chosenAt(quorum__acceptor1_acceptor2,proposer0)', 'promise(acceptor2,proposer1)']
65     : -------1---------------1---
65     : ['chosenAt(quorum__acceptor1_acceptor2,proposer1)', 'promise(acceptor2,proposer2)']
66     : -------1-------------1-----
66     : ['chosenAt(quorum__acceptor1_acceptor2,proposer1)', 'promise(acceptor2,proposer0)']
67     : --------1-------------1----
67     : ['chosenAt(quorum__acceptor1_acceptor2,proposer2)', 'promise(acceptor2,proposer1)']
68     : --------1------------1-----
68     : ['chosenAt(quorum__acceptor1_acceptor2,proposer2)', 'promise(acceptor2,proposer0)']
69     : 1----------------1---------
69     : ['chosenAt(quorum__acceptor0_acceptor1,proposer0)', 'promise(acceptor0,proposer2)']
70     : 1---------------1----------
70     : ['chosenAt(quorum__acceptor0_acceptor1,proposer0)', 'promise(acceptor0,proposer1)']
71     : -1---------------1---------
71     : ['chosenAt(quorum__acceptor0_acceptor1,proposer1)', 'promise(acceptor0,proposer2)']
72     : -1-------------1-----------
72     : ['chosenAt(quorum__acceptor0_acceptor1,proposer1)', 'promise(acceptor0,proposer0)']
73     : --1-------------1----------
73     : ['chosenAt(quorum__acceptor0_acceptor1,proposer2)', 'promise(acceptor0,proposer1)']
74     : --1------------1-----------
74     : ['chosenAt(quorum__acceptor0_acceptor1,proposer2)', 'promise(acceptor0,proposer0)']
75     : ------1-------------1------
75     : ['chosenAt(quorum__acceptor1_acceptor2,proposer0)', 'promise(acceptor1,proposer2)']
76     : ------1------------1-------
76     : ['chosenAt(quorum__acceptor1_acceptor2,proposer0)', 'promise(acceptor1,proposer1)']
77     : -------1------------1------
77     : ['chosenAt(quorum__acceptor1_acceptor2,proposer1)', 'promise(acceptor1,proposer2)']
78     : -------1----------1--------
78     : ['chosenAt(quorum__acceptor1_acceptor2,proposer1)', 'promise(acceptor1,proposer0)']
79     : --------1----------1-------
79     : ['chosenAt(quorum__acceptor1_acceptor2,proposer2)', 'promise(acceptor1,proposer1)']
80     : --------1---------1--------
80     : ['chosenAt(quorum__acceptor1_acceptor2,proposer2)', 'promise(acceptor1,proposer0)']
81     : ---1-------------1---------
81     : ['chosenAt(quorum__acceptor0_acceptor2,proposer0)', 'promise(acceptor0,proposer2)']
82     : ---1------------1----------
82     : ['chosenAt(quorum__acceptor0_acceptor2,proposer0)', 'promise(acceptor0,proposer1)']
83     : ----1------------1---------
83     : ['chosenAt(quorum__acceptor0_acceptor2,proposer1)', 'promise(acceptor0,proposer2)']
84     : ----1----------1-----------
84     : ['chosenAt(quorum__acceptor0_acceptor2,proposer1)', 'promise(acceptor0,proposer0)']
85     : -----1----------1----------
85     : ['chosenAt(quorum__acceptor0_acceptor2,proposer2)', 'promise(acceptor0,proposer1)']
86     : -----1---------1-----------
86     : ['chosenAt(quorum__acceptor0_acceptor2,proposer2)', 'promise(acceptor0,proposer0)']
num_forall :   0
num_exists :   0
num_literals : 0
quantified form : None
qcost : 0


=== Prime Orbit 6 =====================
size : 9
num_suborbits: 1
87 (*) : ---------------------1-1---
87     : ['promise(acceptor2,proposer0)', 'promise(acceptor2,proposer2)']
88     : ---------------------11----
88     : ['promise(acceptor2,proposer0)', 'promise(acceptor2,proposer1)']
89     : ----------------------11---
89     : ['promise(acceptor2,proposer1)', 'promise(acceptor2,proposer2)']
90     : ------------------1-1------
90     : ['promise(acceptor1,proposer0)', 'promise(acceptor1,proposer2)']
91     : ------------------11-------
91     : ['promise(acceptor1,proposer0)', 'promise(acceptor1,proposer1)']
92     : -------------------11------
92     : ['promise(acceptor1,proposer1)', 'promise(acceptor1,proposer2)']
93     : ---------------1-1---------
93     : ['promise(acceptor0,proposer0)', 'promise(acceptor0,proposer2)']
94     : ---------------11----------
94     : ['promise(acceptor0,proposer0)', 'promise(acceptor0,proposer1)']
95     : ----------------11---------
95     : ['promise(acceptor0,proposer1)', 'promise(acceptor0,proposer2)']
num_forall :   0
num_exists :   0
num_literals : 0
quantified form : None
qcost : 0


=== Prime Orbit 7 =====================
size : 18
num_suborbits: 1
96 (*) : ---1-----------------0-----
96     : ['chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~promise(acceptor2,proposer0)']
97     : ----1-----------------0----
97     : ['chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~promise(acceptor2,proposer1)']
98     : -----1-----------------0---
98     : ['chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~promise(acceptor2,proposer2)']
99     : 1-----------------0--------
99     : ['chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~promise(acceptor1,proposer0)']
100     : -1-----------------0-------
100     : ['chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~promise(acceptor1,proposer1)']
101     : --1-----------------0------
101     : ['chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~promise(acceptor1,proposer2)']
102     : ------1--------------0-----
102     : ['chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~promise(acceptor2,proposer0)']
103     : -------1--------------0----
103     : ['chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~promise(acceptor2,proposer1)']
104     : --------1--------------0---
104     : ['chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~promise(acceptor2,proposer2)']
105     : 1--------------0-----------
105     : ['chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~promise(acceptor0,proposer0)']
106     : -1--------------0----------
106     : ['chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~promise(acceptor0,proposer1)']
107     : --1--------------0---------
107     : ['chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~promise(acceptor0,proposer2)']
108     : ------1-----------0--------
108     : ['chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~promise(acceptor1,proposer0)']
109     : -------1-----------0-------
109     : ['chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~promise(acceptor1,proposer1)']
110     : --------1-----------0------
110     : ['chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~promise(acceptor1,proposer2)']
111     : ---1-----------0-----------
111     : ['chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~promise(acceptor0,proposer0)']
112     : ----1-----------0----------
112     : ['chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~promise(acceptor0,proposer1)']
113     : -----1-----------0---------
113     : ['chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~promise(acceptor0,proposer2)']
num_forall :   0
num_exists :   0
num_literals : 0
quantified form : None
qcost : 0


=== Prime Orbit 8 =====================
size : 9
num_suborbits: 1
114 (*) : -----------------------1--0
114     : ['promise(acceptor2,proposer2)', '~start(proposer2)']
115     : ----------------------1--0-
115     : ['promise(acceptor2,proposer1)', '~start(proposer1)']
116     : ---------------------1--0--
116     : ['promise(acceptor2,proposer0)', '~start(proposer0)']
117     : --------------------1-----0
117     : ['promise(acceptor1,proposer2)', '~start(proposer2)']
118     : -------------------1-----0-
118     : ['promise(acceptor1,proposer1)', '~start(proposer1)']
119     : ------------------1-----0--
119     : ['promise(acceptor1,proposer0)', '~start(proposer0)']
120     : -----------------1--------0
120     : ['promise(acceptor0,proposer2)', '~start(proposer2)']
121     : ----------------1--------0-
121     : ['promise(acceptor0,proposer1)', '~start(proposer1)']
122     : ---------------1--------0--
122     : ['promise(acceptor0,proposer0)', '~start(proposer0)']
num_forall :   0
num_exists :   0
num_literals : 0
quantified form : None
qcost : 0


=== Prime Orbit 9 =====================
size : 9
num_suborbits: 1
123 (*) : ------1-----------------0--
123     : ['chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~start(proposer0)']
124     : -------1-----------------0-
124     : ['chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~start(proposer1)']
125     : --------1-----------------0
125     : ['chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~start(proposer2)']
126     : ---1--------------------0--
126     : ['chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~start(proposer0)']
127     : ----1--------------------0-
127     : ['chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~start(proposer1)']
128     : -----1--------------------0
128     : ['chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~start(proposer2)']
129     : 1-----------------------0--
129     : ['chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~start(proposer0)']
130     : -1-----------------------0-
130     : ['chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~start(proposer1)']
131     : --1-----------------------0
131     : ['chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~start(proposer2)']
num_forall :   0
num_exists :   0
num_literals : 0
quantified form : None
qcost : 0


=== Prime Orbit 10 =====================
size : 27
num_suborbits: 2
132 (*) : -1-1-----------------------
132     : ['chosenAt(quorum__acceptor0_acceptor1,proposer1)', 'chosenAt(quorum__acceptor0_acceptor2,proposer0)']
133     : --11-----------------------
133     : ['chosenAt(quorum__acceptor0_acceptor1,proposer2)', 'chosenAt(quorum__acceptor0_acceptor2,proposer0)']
134     : 1---1----------------------
134     : ['chosenAt(quorum__acceptor0_acceptor1,proposer0)', 'chosenAt(quorum__acceptor0_acceptor2,proposer1)']
135     : --1-1----------------------
135     : ['chosenAt(quorum__acceptor0_acceptor1,proposer2)', 'chosenAt(quorum__acceptor0_acceptor2,proposer1)']
136     : 1----1---------------------
136     : ['chosenAt(quorum__acceptor0_acceptor1,proposer0)', 'chosenAt(quorum__acceptor0_acceptor2,proposer2)']
137     : -1---1---------------------
137     : ['chosenAt(quorum__acceptor0_acceptor1,proposer1)', 'chosenAt(quorum__acceptor0_acceptor2,proposer2)']
138     : -1----1--------------------
138     : ['chosenAt(quorum__acceptor0_acceptor1,proposer1)', 'chosenAt(quorum__acceptor1_acceptor2,proposer0)']
139     : --1---1--------------------
139     : ['chosenAt(quorum__acceptor0_acceptor1,proposer2)', 'chosenAt(quorum__acceptor1_acceptor2,proposer0)']
140     : 1------1-------------------
140     : ['chosenAt(quorum__acceptor0_acceptor1,proposer0)', 'chosenAt(quorum__acceptor1_acceptor2,proposer1)']
141     : --1----1-------------------
141     : ['chosenAt(quorum__acceptor0_acceptor1,proposer2)', 'chosenAt(quorum__acceptor1_acceptor2,proposer1)']
142     : 1-------1------------------
142     : ['chosenAt(quorum__acceptor0_acceptor1,proposer0)', 'chosenAt(quorum__acceptor1_acceptor2,proposer2)']
143     : -1------1------------------
143     : ['chosenAt(quorum__acceptor0_acceptor1,proposer1)', 'chosenAt(quorum__acceptor1_acceptor2,proposer2)']
144     : ----1-1--------------------
144     : ['chosenAt(quorum__acceptor0_acceptor2,proposer1)', 'chosenAt(quorum__acceptor1_acceptor2,proposer0)']
145     : -----11--------------------
145     : ['chosenAt(quorum__acceptor0_acceptor2,proposer2)', 'chosenAt(quorum__acceptor1_acceptor2,proposer0)']
146     : ---1---1-------------------
146     : ['chosenAt(quorum__acceptor0_acceptor2,proposer0)', 'chosenAt(quorum__acceptor1_acceptor2,proposer1)']
147     : -----1-1-------------------
147     : ['chosenAt(quorum__acceptor0_acceptor2,proposer2)', 'chosenAt(quorum__acceptor1_acceptor2,proposer1)']
148     : ---1----1------------------
148     : ['chosenAt(quorum__acceptor0_acceptor2,proposer0)', 'chosenAt(quorum__acceptor1_acceptor2,proposer2)']
149     : ----1---1------------------
149     : ['chosenAt(quorum__acceptor0_acceptor2,proposer1)', 'chosenAt(quorum__acceptor1_acceptor2,proposer2)']
150 (*) : ---11----------------------
150     : ['chosenAt(quorum__acceptor0_acceptor2,proposer0)', 'chosenAt(quorum__acceptor0_acceptor2,proposer1)']
151     : ---1-1---------------------
151     : ['chosenAt(quorum__acceptor0_acceptor2,proposer0)', 'chosenAt(quorum__acceptor0_acceptor2,proposer2)']
152     : ----11---------------------
152     : ['chosenAt(quorum__acceptor0_acceptor2,proposer1)', 'chosenAt(quorum__acceptor0_acceptor2,proposer2)']
153     : 11-------------------------
153     : ['chosenAt(quorum__acceptor0_acceptor1,proposer0)', 'chosenAt(quorum__acceptor0_acceptor1,proposer1)']
154     : 1-1------------------------
154     : ['chosenAt(quorum__acceptor0_acceptor1,proposer0)', 'chosenAt(quorum__acceptor0_acceptor1,proposer2)']
155     : -11------------------------
155     : ['chosenAt(quorum__acceptor0_acceptor1,proposer1)', 'chosenAt(quorum__acceptor0_acceptor1,proposer2)']
156     : ------11-------------------
156     : ['chosenAt(quorum__acceptor1_acceptor2,proposer0)', 'chosenAt(quorum__acceptor1_acceptor2,proposer1)']
157     : ------1-1------------------
157     : ['chosenAt(quorum__acceptor1_acceptor2,proposer0)', 'chosenAt(quorum__acceptor1_acceptor2,proposer2)']
158     : -------11------------------
158     : ['chosenAt(quorum__acceptor1_acceptor2,proposer1)', 'chosenAt(quorum__acceptor1_acceptor2,proposer2)']
num_forall :   0
num_exists :   0
num_literals : 0
quantified form : None
qcost : 0


=== Prime Orbit 11 =====================
size : 9
num_suborbits: 1
159 (*) : --1--0--1------------------
159     : ['chosenAt(quorum__acceptor0_acceptor1,proposer2)', 'chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)']
160     : -1--0--1-------------------
160     : ['chosenAt(quorum__acceptor0_acceptor1,proposer1)', 'chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)']
161     : 1--0--1--------------------
161     : ['chosenAt(quorum__acceptor0_acceptor1,proposer0)', 'chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)']
162     : --0--1--1------------------
162     : ['chosenAt(quorum__acceptor0_acceptor2,proposer2)', 'chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~chosenAt(quorum__acceptor0_acceptor1,proposer2)']
163     : -0--1--1-------------------
163     : ['chosenAt(quorum__acceptor0_acceptor2,proposer1)', 'chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~chosenAt(quorum__acceptor0_acceptor1,proposer1)']
164     : 0--1--1--------------------
164     : ['chosenAt(quorum__acceptor0_acceptor2,proposer0)', 'chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~chosenAt(quorum__acceptor0_acceptor1,proposer0)']
165     : --1--1--0------------------
165     : ['chosenAt(quorum__acceptor0_acceptor1,proposer2)', 'chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)']
166     : -1--1--0-------------------
166     : ['chosenAt(quorum__acceptor0_acceptor1,proposer1)', 'chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)']
167     : 1--1--0--------------------
167     : ['chosenAt(quorum__acceptor0_acceptor1,proposer0)', 'chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)']
num_forall :   0
num_exists :   0
num_literals : 0
quantified form : None
qcost : 0


=== Prime Orbit 12 =====================
size : 18
num_suborbits: 1
168 (*) : --1--0-----------------1---
168     : ['chosenAt(quorum__acceptor0_acceptor1,proposer2)', 'promise(acceptor2,proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)']
169     : -1--0-----------------1----
169     : ['chosenAt(quorum__acceptor0_acceptor1,proposer1)', 'promise(acceptor2,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)']
170     : 1--0-----------------1-----
170     : ['chosenAt(quorum__acceptor0_acceptor1,proposer0)', 'promise(acceptor2,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)']
171     : --0--1--------------1------
171     : ['chosenAt(quorum__acceptor0_acceptor2,proposer2)', 'promise(acceptor1,proposer2)', '~chosenAt(quorum__acceptor0_acceptor1,proposer2)']
172     : -0--1--------------1-------
172     : ['chosenAt(quorum__acceptor0_acceptor2,proposer1)', 'promise(acceptor1,proposer1)', '~chosenAt(quorum__acceptor0_acceptor1,proposer1)']
173     : 0--1--------------1--------
173     : ['chosenAt(quorum__acceptor0_acceptor2,proposer0)', 'promise(acceptor1,proposer0)', '~chosenAt(quorum__acceptor0_acceptor1,proposer0)']
174     : --1-----0--------------1---
174     : ['chosenAt(quorum__acceptor0_acceptor1,proposer2)', 'promise(acceptor2,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)']
175     : -1-----0--------------1----
175     : ['chosenAt(quorum__acceptor0_acceptor1,proposer1)', 'promise(acceptor2,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)']
176     : 1-----0--------------1-----
176     : ['chosenAt(quorum__acceptor0_acceptor1,proposer0)', 'promise(acceptor2,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)']
177     : --0-----1--------1---------
177     : ['chosenAt(quorum__acceptor1_acceptor2,proposer2)', 'promise(acceptor0,proposer2)', '~chosenAt(quorum__acceptor0_acceptor1,proposer2)']
178     : -0-----1--------1----------
178     : ['chosenAt(quorum__acceptor1_acceptor2,proposer1)', 'promise(acceptor0,proposer1)', '~chosenAt(quorum__acceptor0_acceptor1,proposer1)']
179     : 0-----1--------1-----------
179     : ['chosenAt(quorum__acceptor1_acceptor2,proposer0)', 'promise(acceptor0,proposer0)', '~chosenAt(quorum__acceptor0_acceptor1,proposer0)']
180     : -----1--0-----------1------
180     : ['chosenAt(quorum__acceptor0_acceptor2,proposer2)', 'promise(acceptor1,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)']
181     : ----1--0-----------1-------
181     : ['chosenAt(quorum__acceptor0_acceptor2,proposer1)', 'promise(acceptor1,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)']
182     : ---1--0-----------1--------
182     : ['chosenAt(quorum__acceptor0_acceptor2,proposer0)', 'promise(acceptor1,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)']
183     : -----0--1--------1---------
183     : ['chosenAt(quorum__acceptor1_acceptor2,proposer2)', 'promise(acceptor0,proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)']
184     : ----0--1--------1----------
184     : ['chosenAt(quorum__acceptor1_acceptor2,proposer1)', 'promise(acceptor0,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)']
185     : ---0--1--------1-----------
185     : ['chosenAt(quorum__acceptor1_acceptor2,proposer0)', 'promise(acceptor0,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)']
num_forall :   0
num_exists :   0
num_literals : 0
quantified form : None
qcost : 0


=== Prime Orbit 13 =====================
size : 9
num_suborbits: 1
186 (*) : -----0-----------1-----1---
186     : ['promise(acceptor0,proposer2)', 'promise(acceptor2,proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)']
187     : ----0-----------1-----1----
187     : ['promise(acceptor0,proposer1)', 'promise(acceptor2,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)']
188     : ---0-----------1-----1-----
188     : ['promise(acceptor0,proposer0)', 'promise(acceptor2,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)']
189     : --0--------------1--1------
189     : ['promise(acceptor0,proposer2)', 'promise(acceptor1,proposer2)', '~chosenAt(quorum__acceptor0_acceptor1,proposer2)']
190     : -0--------------1--1-------
190     : ['promise(acceptor0,proposer1)', 'promise(acceptor1,proposer1)', '~chosenAt(quorum__acceptor0_acceptor1,proposer1)']
191     : 0--------------1--1--------
191     : ['promise(acceptor0,proposer0)', 'promise(acceptor1,proposer0)', '~chosenAt(quorum__acceptor0_acceptor1,proposer0)']
192     : --------0-----------1--1---
192     : ['promise(acceptor1,proposer2)', 'promise(acceptor2,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)']
193     : -------0-----------1--1----
193     : ['promise(acceptor1,proposer1)', 'promise(acceptor2,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)']
194     : ------0-----------1--1-----
194     : ['promise(acceptor1,proposer0)', 'promise(acceptor2,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)']
num_forall :   0
num_exists :   0
num_literals : 0
quantified form : None
qcost : 0


=== Prime Orbit 14 =====================
size : 18
num_suborbits: 1
195 (*) : --------0-----11-----------
195     : ['leader(proposer2)', 'promise(acceptor0,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)']
196     : -------0-----1-1-----------
196     : ['leader(proposer1)', 'promise(acceptor0,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)']
197     : --------0-----1-1----------
197     : ['leader(proposer2)', 'promise(acceptor0,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)']
198     : ------0-----1---1----------
198     : ['leader(proposer0)', 'promise(acceptor0,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)']
199     : -------0-----1---1---------
199     : ['leader(proposer1)', 'promise(acceptor0,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)']
200     : ------0-----1----1---------
200     : ['leader(proposer0)', 'promise(acceptor0,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)']
201     : -----0--------1---1--------
201     : ['leader(proposer2)', 'promise(acceptor1,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)']
202     : ----0--------1----1--------
202     : ['leader(proposer1)', 'promise(acceptor1,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)']
203     : -----0--------1----1-------
203     : ['leader(proposer2)', 'promise(acceptor1,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)']
204     : ---0--------1------1-------
204     : ['leader(proposer0)', 'promise(acceptor1,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)']
205     : ----0--------1------1------
205     : ['leader(proposer1)', 'promise(acceptor1,proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)']
206     : ---0--------1-------1------
206     : ['leader(proposer0)', 'promise(acceptor1,proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)']
207     : --0-----------1------1-----
207     : ['leader(proposer2)', 'promise(acceptor2,proposer0)', '~chosenAt(quorum__acceptor0_acceptor1,proposer2)']
208     : -0-----------1-------1-----
208     : ['leader(proposer1)', 'promise(acceptor2,proposer0)', '~chosenAt(quorum__acceptor0_acceptor1,proposer1)']
209     : --0-----------1-------1----
209     : ['leader(proposer2)', 'promise(acceptor2,proposer1)', '~chosenAt(quorum__acceptor0_acceptor1,proposer2)']
210     : 0-----------1---------1----
210     : ['leader(proposer0)', 'promise(acceptor2,proposer1)', '~chosenAt(quorum__acceptor0_acceptor1,proposer0)']
211     : -0-----------1---------1---
211     : ['leader(proposer1)', 'promise(acceptor2,proposer2)', '~chosenAt(quorum__acceptor0_acceptor1,proposer1)']
212     : 0-----------1----------1---
212     : ['leader(proposer0)', 'promise(acceptor2,proposer2)', '~chosenAt(quorum__acceptor0_acceptor1,proposer0)']
num_forall :   0
num_exists :   0
num_literals : 0
quantified form : None
qcost : 0


=== Prime Orbit 15 =====================
size : 36
num_suborbits: 1
213 (*) : --------------11----0------
213     : ['leader(proposer2)', 'promise(acceptor0,proposer0)', '~promise(acceptor1,proposer2)']
214     : -------------1-1---0-------
214     : ['leader(proposer1)', 'promise(acceptor0,proposer0)', '~promise(acceptor1,proposer1)']
215     : --------------1-1---0------
215     : ['leader(proposer2)', 'promise(acceptor0,proposer1)', '~promise(acceptor1,proposer2)']
216     : ------------1---1-0--------
216     : ['leader(proposer0)', 'promise(acceptor0,proposer1)', '~promise(acceptor1,proposer0)']
217     : -------------1---1-0-------
217     : ['leader(proposer1)', 'promise(acceptor0,proposer2)', '~promise(acceptor1,proposer1)']
218     : ------------1----10--------
218     : ['leader(proposer0)', 'promise(acceptor0,proposer2)', '~promise(acceptor1,proposer0)']
219     : --------------11-------0---
219     : ['leader(proposer2)', 'promise(acceptor0,proposer0)', '~promise(acceptor2,proposer2)']
220     : -------------1-1------0----
220     : ['leader(proposer1)', 'promise(acceptor0,proposer0)', '~promise(acceptor2,proposer1)']
221     : --------------1-1------0---
221     : ['leader(proposer2)', 'promise(acceptor0,proposer1)', '~promise(acceptor2,proposer2)']
222     : ------------1---1----0-----
222     : ['leader(proposer0)', 'promise(acceptor0,proposer1)', '~promise(acceptor2,proposer0)']
223     : -------------1---1----0----
223     : ['leader(proposer1)', 'promise(acceptor0,proposer2)', '~promise(acceptor2,proposer1)']
224     : ------------1----1---0-----
224     : ['leader(proposer0)', 'promise(acceptor0,proposer2)', '~promise(acceptor2,proposer0)']
225     : --------------1--01--------
225     : ['leader(proposer2)', 'promise(acceptor1,proposer0)', '~promise(acceptor0,proposer2)']
226     : -------------1--0-1--------
226     : ['leader(proposer1)', 'promise(acceptor1,proposer0)', '~promise(acceptor0,proposer1)']
227     : --------------1--0-1-------
227     : ['leader(proposer2)', 'promise(acceptor1,proposer1)', '~promise(acceptor0,proposer2)']
228     : ------------1--0---1-------
228     : ['leader(proposer0)', 'promise(acceptor1,proposer1)', '~promise(acceptor0,proposer0)']
229     : -------------1--0---1------
229     : ['leader(proposer1)', 'promise(acceptor1,proposer2)', '~promise(acceptor0,proposer1)']
230     : ------------1--0----1------
230     : ['leader(proposer0)', 'promise(acceptor1,proposer2)', '~promise(acceptor0,proposer0)']
231     : --------------1---1----0---
231     : ['leader(proposer2)', 'promise(acceptor1,proposer0)', '~promise(acceptor2,proposer2)']
232     : -------------1----1---0----
232     : ['leader(proposer1)', 'promise(acceptor1,proposer0)', '~promise(acceptor2,proposer1)']
233     : --------------1----1---0---
233     : ['leader(proposer2)', 'promise(acceptor1,proposer1)', '~promise(acceptor2,proposer2)']
234     : ------------1------1-0-----
234     : ['leader(proposer0)', 'promise(acceptor1,proposer1)', '~promise(acceptor2,proposer0)']
235     : -------------1------1-0----
235     : ['leader(proposer1)', 'promise(acceptor1,proposer2)', '~promise(acceptor2,proposer1)']
236     : ------------1-------10-----
236     : ['leader(proposer0)', 'promise(acceptor1,proposer2)', '~promise(acceptor2,proposer0)']
237     : --------------1--0---1-----
237     : ['leader(proposer2)', 'promise(acceptor2,proposer0)', '~promise(acceptor0,proposer2)']
238     : -------------1--0----1-----
238     : ['leader(proposer1)', 'promise(acceptor2,proposer0)', '~promise(acceptor0,proposer1)']
239     : --------------1--0----1----
239     : ['leader(proposer2)', 'promise(acceptor2,proposer1)', '~promise(acceptor0,proposer2)']
240     : ------------1--0------1----
240     : ['leader(proposer0)', 'promise(acceptor2,proposer1)', '~promise(acceptor0,proposer0)']
241     : -------------1--0------1---
241     : ['leader(proposer1)', 'promise(acceptor2,proposer2)', '~promise(acceptor0,proposer1)']
242     : ------------1--0-------1---
242     : ['leader(proposer0)', 'promise(acceptor2,proposer2)', '~promise(acceptor0,proposer0)']
243     : --------------1-----01-----
243     : ['leader(proposer2)', 'promise(acceptor2,proposer0)', '~promise(acceptor1,proposer2)']
244     : -------------1-----0-1-----
244     : ['leader(proposer1)', 'promise(acceptor2,proposer0)', '~promise(acceptor1,proposer1)']
245     : --------------1-----0-1----
245     : ['leader(proposer2)', 'promise(acceptor2,proposer1)', '~promise(acceptor1,proposer2)']
246     : ------------1-----0---1----
246     : ['leader(proposer0)', 'promise(acceptor2,proposer1)', '~promise(acceptor1,proposer0)']
247     : -------------1-----0---1---
247     : ['leader(proposer1)', 'promise(acceptor2,proposer2)', '~promise(acceptor1,proposer1)']
248     : ------------1-----0----1---
248     : ['leader(proposer0)', 'promise(acceptor2,proposer2)', '~promise(acceptor1,proposer0)']
num_forall :   0
num_exists :   0
num_literals : 0
quantified form : None
qcost : 0


=== Prime Orbit 16 =====================
size : 36
num_suborbits: 2
249 (*) : --------------11---1-------
249     : ['leader(proposer2)', 'promise(acceptor0,proposer0)', 'promise(acceptor1,proposer1)']
250     : -------------1-1----1------
250     : ['leader(proposer1)', 'promise(acceptor0,proposer0)', 'promise(acceptor1,proposer2)']
251     : --------------1-1-1--------
251     : ['leader(proposer2)', 'promise(acceptor0,proposer1)', 'promise(acceptor1,proposer0)']
252     : ------------1---1---1------
252     : ['leader(proposer0)', 'promise(acceptor0,proposer1)', 'promise(acceptor1,proposer2)']
253     : -------------1---11--------
253     : ['leader(proposer1)', 'promise(acceptor0,proposer2)', 'promise(acceptor1,proposer0)']
254     : ------------1----1-1-------
254     : ['leader(proposer0)', 'promise(acceptor0,proposer2)', 'promise(acceptor1,proposer1)']
255     : --------------11------1----
255     : ['leader(proposer2)', 'promise(acceptor0,proposer0)', 'promise(acceptor2,proposer1)']
256     : -------------1-1-------1---
256     : ['leader(proposer1)', 'promise(acceptor0,proposer0)', 'promise(acceptor2,proposer2)']
257     : --------------1-1----1-----
257     : ['leader(proposer2)', 'promise(acceptor0,proposer1)', 'promise(acceptor2,proposer0)']
258     : ------------1---1------1---
258     : ['leader(proposer0)', 'promise(acceptor0,proposer1)', 'promise(acceptor2,proposer2)']
259     : -------------1---1---1-----
259     : ['leader(proposer1)', 'promise(acceptor0,proposer2)', 'promise(acceptor2,proposer0)']
260     : ------------1----1----1----
260     : ['leader(proposer0)', 'promise(acceptor0,proposer2)', 'promise(acceptor2,proposer1)']
261     : --------------1---1---1----
261     : ['leader(proposer2)', 'promise(acceptor1,proposer0)', 'promise(acceptor2,proposer1)']
262     : -------------1----1----1---
262     : ['leader(proposer1)', 'promise(acceptor1,proposer0)', 'promise(acceptor2,proposer2)']
263     : --------------1----1-1-----
263     : ['leader(proposer2)', 'promise(acceptor1,proposer1)', 'promise(acceptor2,proposer0)']
264     : ------------1------1---1---
264     : ['leader(proposer0)', 'promise(acceptor1,proposer1)', 'promise(acceptor2,proposer2)']
265     : -------------1------11-----
265     : ['leader(proposer1)', 'promise(acceptor1,proposer2)', 'promise(acceptor2,proposer0)']
266     : ------------1-------1-1----
266     : ['leader(proposer0)', 'promise(acceptor1,proposer2)', 'promise(acceptor2,proposer1)']
267 (*) : --------------11--1--------
267     : ['leader(proposer2)', 'promise(acceptor0,proposer0)', 'promise(acceptor1,proposer0)']
268     : -------------1-1--1--------
268     : ['leader(proposer1)', 'promise(acceptor0,proposer0)', 'promise(acceptor1,proposer0)']
269     : --------------1-1--1-------
269     : ['leader(proposer2)', 'promise(acceptor0,proposer1)', 'promise(acceptor1,proposer1)']
270     : ------------1---1--1-------
270     : ['leader(proposer0)', 'promise(acceptor0,proposer1)', 'promise(acceptor1,proposer1)']
271     : -------------1---1--1------
271     : ['leader(proposer1)', 'promise(acceptor0,proposer2)', 'promise(acceptor1,proposer2)']
272     : ------------1----1--1------
272     : ['leader(proposer0)', 'promise(acceptor0,proposer2)', 'promise(acceptor1,proposer2)']
273     : --------------11-----1-----
273     : ['leader(proposer2)', 'promise(acceptor0,proposer0)', 'promise(acceptor2,proposer0)']
274     : -------------1-1-----1-----
274     : ['leader(proposer1)', 'promise(acceptor0,proposer0)', 'promise(acceptor2,proposer0)']
275     : --------------1-1-----1----
275     : ['leader(proposer2)', 'promise(acceptor0,proposer1)', 'promise(acceptor2,proposer1)']
276     : ------------1---1-----1----
276     : ['leader(proposer0)', 'promise(acceptor0,proposer1)', 'promise(acceptor2,proposer1)']
277     : -------------1---1-----1---
277     : ['leader(proposer1)', 'promise(acceptor0,proposer2)', 'promise(acceptor2,proposer2)']
278     : ------------1----1-----1---
278     : ['leader(proposer0)', 'promise(acceptor0,proposer2)', 'promise(acceptor2,proposer2)']
279     : --------------1---1--1-----
279     : ['leader(proposer2)', 'promise(acceptor1,proposer0)', 'promise(acceptor2,proposer0)']
280     : -------------1----1--1-----
280     : ['leader(proposer1)', 'promise(acceptor1,proposer0)', 'promise(acceptor2,proposer0)']
281     : --------------1----1--1----
281     : ['leader(proposer2)', 'promise(acceptor1,proposer1)', 'promise(acceptor2,proposer1)']
282     : ------------1------1--1----
282     : ['leader(proposer0)', 'promise(acceptor1,proposer1)', 'promise(acceptor2,proposer1)']
283     : -------------1------1--1---
283     : ['leader(proposer1)', 'promise(acceptor1,proposer2)', 'promise(acceptor2,proposer2)']
284     : ------------1-------1--1---
284     : ['leader(proposer0)', 'promise(acceptor1,proposer2)', 'promise(acceptor2,proposer2)']
num_forall :   0
num_exists :   0
num_literals : 0
quantified form : None
qcost : 0


=== Prime Orbit 17 =====================
size : 9
num_suborbits: 1
285 (*) : -----0--------1-----0------
285     : ['leader(proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~promise(acceptor1,proposer2)']
286     : ----0--------1-----0-------
286     : ['leader(proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~promise(acceptor1,proposer1)']
287     : ---0--------1-----0--------
287     : ['leader(proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~promise(acceptor1,proposer0)']
288     : --0-----------1--------0---
288     : ['leader(proposer2)', '~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~promise(acceptor2,proposer2)']
289     : -0-----------1--------0----
289     : ['leader(proposer1)', '~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~promise(acceptor2,proposer1)']
290     : 0-----------1--------0-----
290     : ['leader(proposer0)', '~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~promise(acceptor2,proposer0)']
291     : --------0-----1--0---------
291     : ['leader(proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~promise(acceptor0,proposer2)']
292     : -------0-----1--0----------
292     : ['leader(proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~promise(acceptor0,proposer1)']
293     : ------0-----1--0-----------
293     : ['leader(proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~promise(acceptor0,proposer0)']
num_forall :   0
num_exists :   0
num_literals : 0
quantified form : None
qcost : 0


=== Prime Orbit 18 =====================
size : 9
num_suborbits: 1
294 (*) : --------------1--0--0------
294     : ['leader(proposer2)', '~promise(acceptor0,proposer2)', '~promise(acceptor1,proposer2)']
295     : -------------1--0--0-------
295     : ['leader(proposer1)', '~promise(acceptor0,proposer1)', '~promise(acceptor1,proposer1)']
296     : ------------1--0--0--------
296     : ['leader(proposer0)', '~promise(acceptor0,proposer0)', '~promise(acceptor1,proposer0)']
297     : --------------1--0-----0---
297     : ['leader(proposer2)', '~promise(acceptor0,proposer2)', '~promise(acceptor2,proposer2)']
298     : -------------1--0-----0----
298     : ['leader(proposer1)', '~promise(acceptor0,proposer1)', '~promise(acceptor2,proposer1)']
299     : ------------1--0-----0-----
299     : ['leader(proposer0)', '~promise(acceptor0,proposer0)', '~promise(acceptor2,proposer0)']
300     : --------------1-----0--0---
300     : ['leader(proposer2)', '~promise(acceptor1,proposer2)', '~promise(acceptor2,proposer2)']
301     : -------------1-----0--0----
301     : ['leader(proposer1)', '~promise(acceptor1,proposer1)', '~promise(acceptor2,proposer1)']
302     : ------------1-----0--0-----
302     : ['leader(proposer0)', '~promise(acceptor1,proposer0)', '~promise(acceptor2,proposer0)']
num_forall :   0
num_exists :   0
num_literals : 0
quantified form : None
qcost : 0


=== Prime Orbit 19 =====================
size : 36
num_suborbits: 1
303 (*) : ---------1----1-------1----
303     : ['didNotPromise(acceptor0)', 'leader(proposer2)', 'promise(acceptor2,proposer1)']
304     : ---------1---1---------1---
304     : ['didNotPromise(acceptor0)', 'leader(proposer1)', 'promise(acceptor2,proposer2)']
305     : ---------1----1------1-----
305     : ['didNotPromise(acceptor0)', 'leader(proposer2)', 'promise(acceptor2,proposer0)']
306     : ---------1--1----------1---
306     : ['didNotPromise(acceptor0)', 'leader(proposer0)', 'promise(acceptor2,proposer2)']
307     : ---------1---1-------1-----
307     : ['didNotPromise(acceptor0)', 'leader(proposer1)', 'promise(acceptor2,proposer0)']
308     : ---------1--1---------1----
308     : ['didNotPromise(acceptor0)', 'leader(proposer0)', 'promise(acceptor2,proposer1)']
309     : ---------1----1----1-------
309     : ['didNotPromise(acceptor0)', 'leader(proposer2)', 'promise(acceptor1,proposer1)']
310     : ---------1---1------1------
310     : ['didNotPromise(acceptor0)', 'leader(proposer1)', 'promise(acceptor1,proposer2)']
311     : ---------1----1---1--------
311     : ['didNotPromise(acceptor0)', 'leader(proposer2)', 'promise(acceptor1,proposer0)']
312     : ---------1--1-------1------
312     : ['didNotPromise(acceptor0)', 'leader(proposer0)', 'promise(acceptor1,proposer2)']
313     : ---------1---1----1--------
313     : ['didNotPromise(acceptor0)', 'leader(proposer1)', 'promise(acceptor1,proposer0)']
314     : ---------1--1------1-------
314     : ['didNotPromise(acceptor0)', 'leader(proposer0)', 'promise(acceptor1,proposer1)']
315     : ----------1---1-------1----
315     : ['didNotPromise(acceptor1)', 'leader(proposer2)', 'promise(acceptor2,proposer1)']
316     : ----------1--1---------1---
316     : ['didNotPromise(acceptor1)', 'leader(proposer1)', 'promise(acceptor2,proposer2)']
317     : ----------1---1------1-----
317     : ['didNotPromise(acceptor1)', 'leader(proposer2)', 'promise(acceptor2,proposer0)']
318     : ----------1-1----------1---
318     : ['didNotPromise(acceptor1)', 'leader(proposer0)', 'promise(acceptor2,proposer2)']
319     : ----------1--1-------1-----
319     : ['didNotPromise(acceptor1)', 'leader(proposer1)', 'promise(acceptor2,proposer0)']
320     : ----------1-1---------1----
320     : ['didNotPromise(acceptor1)', 'leader(proposer0)', 'promise(acceptor2,proposer1)']
321     : ----------1---1-1----------
321     : ['didNotPromise(acceptor1)', 'leader(proposer2)', 'promise(acceptor0,proposer1)']
322     : ----------1--1---1---------
322     : ['didNotPromise(acceptor1)', 'leader(proposer1)', 'promise(acceptor0,proposer2)']
323     : ----------1---11-----------
323     : ['didNotPromise(acceptor1)', 'leader(proposer2)', 'promise(acceptor0,proposer0)']
324     : ----------1-1----1---------
324     : ['didNotPromise(acceptor1)', 'leader(proposer0)', 'promise(acceptor0,proposer2)']
325     : ----------1--1-1-----------
325     : ['didNotPromise(acceptor1)', 'leader(proposer1)', 'promise(acceptor0,proposer0)']
326     : ----------1-1---1----------
326     : ['didNotPromise(acceptor1)', 'leader(proposer0)', 'promise(acceptor0,proposer1)']
327     : -----------1--1----1-------
327     : ['didNotPromise(acceptor2)', 'leader(proposer2)', 'promise(acceptor1,proposer1)']
328     : -----------1-1------1------
328     : ['didNotPromise(acceptor2)', 'leader(proposer1)', 'promise(acceptor1,proposer2)']
329     : -----------1--1---1--------
329     : ['didNotPromise(acceptor2)', 'leader(proposer2)', 'promise(acceptor1,proposer0)']
330     : -----------11-------1------
330     : ['didNotPromise(acceptor2)', 'leader(proposer0)', 'promise(acceptor1,proposer2)']
331     : -----------1-1----1--------
331     : ['didNotPromise(acceptor2)', 'leader(proposer1)', 'promise(acceptor1,proposer0)']
332     : -----------11------1-------
332     : ['didNotPromise(acceptor2)', 'leader(proposer0)', 'promise(acceptor1,proposer1)']
333     : -----------1--1-1----------
333     : ['didNotPromise(acceptor2)', 'leader(proposer2)', 'promise(acceptor0,proposer1)']
334     : -----------1-1---1---------
334     : ['didNotPromise(acceptor2)', 'leader(proposer1)', 'promise(acceptor0,proposer2)']
335     : -----------1--11-----------
335     : ['didNotPromise(acceptor2)', 'leader(proposer2)', 'promise(acceptor0,proposer0)']
336     : -----------11----1---------
336     : ['didNotPromise(acceptor2)', 'leader(proposer0)', 'promise(acceptor0,proposer2)']
337     : -----------1-1-1-----------
337     : ['didNotPromise(acceptor2)', 'leader(proposer1)', 'promise(acceptor0,proposer0)']
338     : -----------11---1----------
338     : ['didNotPromise(acceptor2)', 'leader(proposer0)', 'promise(acceptor0,proposer1)']
num_forall :   0
num_exists :   0
num_literals : 0
quantified form : None
qcost : 0


=== Prime Orbit 20 =====================
size : 18
num_suborbits: 1
339 (*) : ---------1----1-----0------
339     : ['didNotPromise(acceptor0)', 'leader(proposer2)', '~promise(acceptor1,proposer2)']
340     : ---------1---1-----0-------
340     : ['didNotPromise(acceptor0)', 'leader(proposer1)', '~promise(acceptor1,proposer1)']
341     : ---------1--1-----0--------
341     : ['didNotPromise(acceptor0)', 'leader(proposer0)', '~promise(acceptor1,proposer0)']
342     : ---------1----1--------0---
342     : ['didNotPromise(acceptor0)', 'leader(proposer2)', '~promise(acceptor2,proposer2)']
343     : ---------1---1--------0----
343     : ['didNotPromise(acceptor0)', 'leader(proposer1)', '~promise(acceptor2,proposer1)']
344     : ---------1--1--------0-----
344     : ['didNotPromise(acceptor0)', 'leader(proposer0)', '~promise(acceptor2,proposer0)']
345     : ----------1---1--0---------
345     : ['didNotPromise(acceptor1)', 'leader(proposer2)', '~promise(acceptor0,proposer2)']
346     : ----------1--1--0----------
346     : ['didNotPromise(acceptor1)', 'leader(proposer1)', '~promise(acceptor0,proposer1)']
347     : ----------1-1--0-----------
347     : ['didNotPromise(acceptor1)', 'leader(proposer0)', '~promise(acceptor0,proposer0)']
348     : ----------1---1--------0---
348     : ['didNotPromise(acceptor1)', 'leader(proposer2)', '~promise(acceptor2,proposer2)']
349     : ----------1--1--------0----
349     : ['didNotPromise(acceptor1)', 'leader(proposer1)', '~promise(acceptor2,proposer1)']
350     : ----------1-1--------0-----
350     : ['didNotPromise(acceptor1)', 'leader(proposer0)', '~promise(acceptor2,proposer0)']
351     : -----------1--1--0---------
351     : ['didNotPromise(acceptor2)', 'leader(proposer2)', '~promise(acceptor0,proposer2)']
352     : -----------1-1--0----------
352     : ['didNotPromise(acceptor2)', 'leader(proposer1)', '~promise(acceptor0,proposer1)']
353     : -----------11--0-----------
353     : ['didNotPromise(acceptor2)', 'leader(proposer0)', '~promise(acceptor0,proposer0)']
354     : -----------1--1-----0------
354     : ['didNotPromise(acceptor2)', 'leader(proposer2)', '~promise(acceptor1,proposer2)']
355     : -----------1-1-----0-------
355     : ['didNotPromise(acceptor2)', 'leader(proposer1)', '~promise(acceptor1,proposer1)']
356     : -----------11-----0--------
356     : ['didNotPromise(acceptor2)', 'leader(proposer0)', '~promise(acceptor1,proposer0)']
num_forall :   0
num_exists :   0
num_literals : 0
quantified form : None
qcost : 0


=== Prime Orbit 21 =====================
size : 9
num_suborbits: 1
357 (*) : --------01----1------------
357     : ['didNotPromise(acceptor0)', 'leader(proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)']
358     : -------0-1---1-------------
358     : ['didNotPromise(acceptor0)', 'leader(proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)']
359     : ------0--1--1--------------
359     : ['didNotPromise(acceptor0)', 'leader(proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)']
360     : -----0----1---1------------
360     : ['didNotPromise(acceptor1)', 'leader(proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)']
361     : ----0-----1--1-------------
361     : ['didNotPromise(acceptor1)', 'leader(proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)']
362     : ---0------1-1--------------
362     : ['didNotPromise(acceptor1)', 'leader(proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)']
363     : --0--------1--1------------
363     : ['didNotPromise(acceptor2)', 'leader(proposer2)', '~chosenAt(quorum__acceptor0_acceptor1,proposer2)']
364     : -0---------1-1-------------
364     : ['didNotPromise(acceptor2)', 'leader(proposer1)', '~chosenAt(quorum__acceptor0_acceptor1,proposer1)']
365     : 0----------11--------------
365     : ['didNotPromise(acceptor2)', 'leader(proposer0)', '~chosenAt(quorum__acceptor0_acceptor1,proposer0)']
num_forall :   0
num_exists :   0
num_literals : 0
quantified form : None
qcost : 0


=== Prime Orbit 22 =====================
size : 9
num_suborbits: 1
366 (*) : ---------11---1------------
366     : ['didNotPromise(acceptor0)', 'didNotPromise(acceptor1)', 'leader(proposer2)']
367     : ---------11--1-------------
367     : ['didNotPromise(acceptor0)', 'didNotPromise(acceptor1)', 'leader(proposer1)']
368     : ---------11-1--------------
368     : ['didNotPromise(acceptor0)', 'didNotPromise(acceptor1)', 'leader(proposer0)']
369     : ---------1-1--1------------
369     : ['didNotPromise(acceptor0)', 'didNotPromise(acceptor2)', 'leader(proposer2)']
370     : ---------1-1-1-------------
370     : ['didNotPromise(acceptor0)', 'didNotPromise(acceptor2)', 'leader(proposer1)']
371     : ---------1-11--------------
371     : ['didNotPromise(acceptor0)', 'didNotPromise(acceptor2)', 'leader(proposer0)']
372     : ----------11--1------------
372     : ['didNotPromise(acceptor1)', 'didNotPromise(acceptor2)', 'leader(proposer2)']
373     : ----------11-1-------------
373     : ['didNotPromise(acceptor1)', 'didNotPromise(acceptor2)', 'leader(proposer1)']
374     : ----------111--------------
374     : ['didNotPromise(acceptor1)', 'didNotPromise(acceptor2)', 'leader(proposer0)']
num_forall :   0
num_exists :   0
num_literals : 0
quantified form : None
qcost : 0


=== Prime Orbit 23 =====================
size : 9
num_suborbits: 1
375 (*) : ----------0-------00------0
375     : ['~didNotPromise(acceptor1)', '~promise(acceptor1,proposer0)', '~promise(acceptor1,proposer1)', '~start(proposer2)']
376     : ----------0-------0-0----0-
376     : ['~didNotPromise(acceptor1)', '~promise(acceptor1,proposer0)', '~promise(acceptor1,proposer2)', '~start(proposer1)']
377     : ----------0--------00---0--
377     : ['~didNotPromise(acceptor1)', '~promise(acceptor1,proposer1)', '~promise(acceptor1,proposer2)', '~start(proposer0)']
378     : -----------0---------00---0
378     : ['~didNotPromise(acceptor2)', '~promise(acceptor2,proposer0)', '~promise(acceptor2,proposer1)', '~start(proposer2)']
379     : -----------0---------0-0-0-
379     : ['~didNotPromise(acceptor2)', '~promise(acceptor2,proposer0)', '~promise(acceptor2,proposer2)', '~start(proposer1)']
380     : -----------0----------000--
380     : ['~didNotPromise(acceptor2)', '~promise(acceptor2,proposer1)', '~promise(acceptor2,proposer2)', '~start(proposer0)']
381     : ---------0-----00---------0
381     : ['~didNotPromise(acceptor0)', '~promise(acceptor0,proposer0)', '~promise(acceptor0,proposer1)', '~start(proposer2)']
382     : ---------0-----0-0-------0-
382     : ['~didNotPromise(acceptor0)', '~promise(acceptor0,proposer0)', '~promise(acceptor0,proposer2)', '~start(proposer1)']
383     : ---------0------00------0--
383     : ['~didNotPromise(acceptor0)', '~promise(acceptor0,proposer1)', '~promise(acceptor0,proposer2)', '~start(proposer0)']
num_forall :   0
num_exists :   0
num_literals : 0
quantified form : None
qcost : 0


=== Prime Orbit 24 =====================
size : 9
num_suborbits: 1
384 (*) : ----------0-------0------00
384     : ['~didNotPromise(acceptor1)', '~promise(acceptor1,proposer0)', '~start(proposer1)', '~start(proposer2)']
385     : ----------0--------0----0-0
385     : ['~didNotPromise(acceptor1)', '~promise(acceptor1,proposer1)', '~start(proposer0)', '~start(proposer2)']
386     : ----------0---------0---00-
386     : ['~didNotPromise(acceptor1)', '~promise(acceptor1,proposer2)', '~start(proposer0)', '~start(proposer1)']
387     : -----------0---------0---00
387     : ['~didNotPromise(acceptor2)', '~promise(acceptor2,proposer0)', '~start(proposer1)', '~start(proposer2)']
388     : -----------0----------0-0-0
388     : ['~didNotPromise(acceptor2)', '~promise(acceptor2,proposer1)', '~start(proposer0)', '~start(proposer2)']
389     : -----------0-----------000-
389     : ['~didNotPromise(acceptor2)', '~promise(acceptor2,proposer2)', '~start(proposer0)', '~start(proposer1)']
390     : ---------0-----0---------00
390     : ['~didNotPromise(acceptor0)', '~promise(acceptor0,proposer0)', '~start(proposer1)', '~start(proposer2)']
391     : ---------0------0-------0-0
391     : ['~didNotPromise(acceptor0)', '~promise(acceptor0,proposer1)', '~start(proposer0)', '~start(proposer2)']
392     : ---------0-------0------00-
392     : ['~didNotPromise(acceptor0)', '~promise(acceptor0,proposer2)', '~start(proposer0)', '~start(proposer1)']
num_forall :   0
num_exists :   0
num_literals : 0
quantified form : None
qcost : 0


=== Prime Orbit 25 =====================
size : 9
num_suborbits: 1
393 (*) : -0--0--------1--1----------
393     : ['leader(proposer1)', 'promise(acceptor0,proposer1)', '~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)']
394     : --0--0--------1--1---------
394     : ['leader(proposer2)', 'promise(acceptor0,proposer2)', '~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)']
395     : 0--0--------1--1-----------
395     : ['leader(proposer0)', 'promise(acceptor0,proposer0)', '~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)']
396     : -0-----0-----1-----1-------
396     : ['leader(proposer1)', 'promise(acceptor1,proposer1)', '~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)']
397     : --0-----0-----1-----1------
397     : ['leader(proposer2)', 'promise(acceptor1,proposer2)', '~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)']
398     : 0-----0-----1-----1--------
398     : ['leader(proposer0)', 'promise(acceptor1,proposer0)', '~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)']
399     : ----0--0-----1--------1----
399     : ['leader(proposer1)', 'promise(acceptor2,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)']
400     : -----0--0-----1--------1---
400     : ['leader(proposer2)', 'promise(acceptor2,proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)']
401     : ---0--0-----1--------1-----
401     : ['leader(proposer0)', 'promise(acceptor2,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)']
num_forall :   0
num_exists :   0
num_literals : 0
quantified form : None
qcost : 0


=== Prime Orbit 26 =====================
size : 3
num_suborbits: 1
402 (*) : -0--0--0-----1-------------
402     : ['leader(proposer1)', '~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)']
403     : --0--0--0-----1------------
403     : ['leader(proposer2)', '~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)']
404     : 0--0--0-----1--------------
404     : ['leader(proposer0)', '~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)']
num_forall :   0
num_exists :   0
num_literals : 0
quantified form : None
qcost : 0


=== Prime Orbit 27 =====================
size : 3
num_suborbits: 1
405 (*) : -----------0---------000---
405     : ['~didNotPromise(acceptor2)', '~promise(acceptor2,proposer0)', '~promise(acceptor2,proposer1)', '~promise(acceptor2,proposer2)']
406     : ----------0-------000------
406     : ['~didNotPromise(acceptor1)', '~promise(acceptor1,proposer0)', '~promise(acceptor1,proposer1)', '~promise(acceptor1,proposer2)']
407     : ---------0-----000---------
407     : ['~didNotPromise(acceptor0)', '~promise(acceptor0,proposer0)', '~promise(acceptor0,proposer1)', '~promise(acceptor0,proposer2)']
num_forall :   0
num_exists :   0
num_literals : 0
quantified form : None
qcost : 0


=== Prime Orbit 28 =====================
size : 3
num_suborbits: 1
408 (*) : ---------0--------------000
408     : ['~didNotPromise(acceptor0)', '~start(proposer0)', '~start(proposer1)', '~start(proposer2)']
409     : ----------0-------------000
409     : ['~didNotPromise(acceptor1)', '~start(proposer0)', '~start(proposer1)', '~start(proposer2)']
410     : -----------0------------000
410     : ['~didNotPromise(acceptor2)', '~start(proposer0)', '~start(proposer1)', '~start(proposer2)']
num_forall :   0
num_exists :   0
num_literals : 0
quantified form : None
qcost : 0


=== Prime Orbit 29 =====================
size : 36
num_suborbits: 1
411 (*) : --1-----0--0---------0---0-
411     : ['chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor2)', '~promise(acceptor2,proposer0)', '~start(proposer1)']
412     : -1-----0---0---------0----0
412     : ['chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor2)', '~promise(acceptor2,proposer0)', '~start(proposer2)']
413     : --1-----0--0----------0-0--
413     : ['chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor2)', '~promise(acceptor2,proposer1)', '~start(proposer0)']
414     : 1-----0----0----------0---0
414     : ['chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor2)', '~promise(acceptor2,proposer1)', '~start(proposer2)']
415     : -1-----0---0-----------00--
415     : ['chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor2)', '~promise(acceptor2,proposer2)', '~start(proposer0)']
416     : 1-----0----0-----------0-0-
416     : ['chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor2)', '~promise(acceptor2,proposer2)', '~start(proposer1)']
417     : -----1--0-0-------0------0-
417     : ['chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor1)', '~promise(acceptor1,proposer0)', '~start(proposer1)']
418     : ----1--0--0-------0-------0
418     : ['chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor1)', '~promise(acceptor1,proposer0)', '~start(proposer2)']
419     : -----1--0-0--------0----0--
419     : ['chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor1)', '~promise(acceptor1,proposer1)', '~start(proposer0)']
420     : ---1--0---0--------0------0
420     : ['chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor1)', '~promise(acceptor1,proposer1)', '~start(proposer2)']
421     : ----1--0--0---------0---0--
421     : ['chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor1)', '~promise(acceptor1,proposer2)', '~start(proposer0)']
422     : ---1--0---0---------0----0-
422     : ['chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor1)', '~promise(acceptor1,proposer2)', '~start(proposer1)']
423     : --1--0-----0---------0---0-
423     : ['chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~didNotPromise(acceptor2)', '~promise(acceptor2,proposer0)', '~start(proposer1)']
424     : -1--0------0---------0----0
424     : ['chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~didNotPromise(acceptor2)', '~promise(acceptor2,proposer0)', '~start(proposer2)']
425     : --1--0-----0----------0-0--
425     : ['chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~didNotPromise(acceptor2)', '~promise(acceptor2,proposer1)', '~start(proposer0)']
426     : 1--0-------0----------0---0
426     : ['chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~didNotPromise(acceptor2)', '~promise(acceptor2,proposer1)', '~start(proposer2)']
427     : -1--0------0-----------00--
427     : ['chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~didNotPromise(acceptor2)', '~promise(acceptor2,proposer2)', '~start(proposer0)']
428     : 1--0-------0-----------0-0-
428     : ['chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~didNotPromise(acceptor2)', '~promise(acceptor2,proposer2)', '~start(proposer1)']
429     : -----0--10-----0---------0-
429     : ['chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~didNotPromise(acceptor0)', '~promise(acceptor0,proposer0)', '~start(proposer1)']
430     : ----0--1-0-----0----------0
430     : ['chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~didNotPromise(acceptor0)', '~promise(acceptor0,proposer0)', '~start(proposer2)']
431     : -----0--10------0-------0--
431     : ['chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~didNotPromise(acceptor0)', '~promise(acceptor0,proposer1)', '~start(proposer0)']
432     : ---0--1--0------0---------0
432     : ['chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~didNotPromise(acceptor0)', '~promise(acceptor0,proposer1)', '~start(proposer2)']
433     : ----0--1-0-------0------0--
433     : ['chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~didNotPromise(acceptor0)', '~promise(acceptor0,proposer2)', '~start(proposer0)']
434     : ---0--1--0-------0-------0-
434     : ['chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~didNotPromise(acceptor0)', '~promise(acceptor0,proposer2)', '~start(proposer1)']
435     : --0--1----0-------0------0-
435     : ['chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~didNotPromise(acceptor1)', '~promise(acceptor1,proposer0)', '~start(proposer1)']
436     : -0--1-----0-------0-------0
436     : ['chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~didNotPromise(acceptor1)', '~promise(acceptor1,proposer0)', '~start(proposer2)']
437     : --0--1----0--------0----0--
437     : ['chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~didNotPromise(acceptor1)', '~promise(acceptor1,proposer1)', '~start(proposer0)']
438     : 0--1------0--------0------0
438     : ['chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~didNotPromise(acceptor1)', '~promise(acceptor1,proposer1)', '~start(proposer2)']
439     : -0--1-----0---------0---0--
439     : ['chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~didNotPromise(acceptor1)', '~promise(acceptor1,proposer2)', '~start(proposer0)']
440     : 0--1------0---------0----0-
440     : ['chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~didNotPromise(acceptor1)', '~promise(acceptor1,proposer2)', '~start(proposer1)']
441     : --0-----10-----0---------0-
441     : ['chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~didNotPromise(acceptor0)', '~promise(acceptor0,proposer0)', '~start(proposer1)']
442     : -0-----1-0-----0----------0
442     : ['chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~didNotPromise(acceptor0)', '~promise(acceptor0,proposer0)', '~start(proposer2)']
443     : --0-----10------0-------0--
443     : ['chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~didNotPromise(acceptor0)', '~promise(acceptor0,proposer1)', '~start(proposer0)']
444     : 0-----1--0------0---------0
444     : ['chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~didNotPromise(acceptor0)', '~promise(acceptor0,proposer1)', '~start(proposer2)']
445     : -0-----1-0-------0------0--
445     : ['chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~didNotPromise(acceptor0)', '~promise(acceptor0,proposer2)', '~start(proposer0)']
446     : 0-----1--0-------0-------0-
446     : ['chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~didNotPromise(acceptor0)', '~promise(acceptor0,proposer2)', '~start(proposer1)']
num_forall :   0
num_exists :   0
num_literals : 0
quantified form : None
qcost : 0


=== Prime Orbit 30 =====================
size : 18
num_suborbits: 1
447 (*) : --1-----0--0------------00-
447     : ['chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor2)', '~start(proposer0)', '~start(proposer1)']
448     : -1-----0---0------------0-0
448     : ['chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor2)', '~start(proposer0)', '~start(proposer2)']
449     : 1-----0----0-------------00
449     : ['chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor2)', '~start(proposer1)', '~start(proposer2)']
450     : -----1--0-0-------------00-
450     : ['chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor1)', '~start(proposer0)', '~start(proposer1)']
451     : ----1--0--0-------------0-0
451     : ['chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor1)', '~start(proposer0)', '~start(proposer2)']
452     : ---1--0---0--------------00
452     : ['chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor1)', '~start(proposer1)', '~start(proposer2)']
453     : --1--0-----0------------00-
453     : ['chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~didNotPromise(acceptor2)', '~start(proposer0)', '~start(proposer1)']
454     : -1--0------0------------0-0
454     : ['chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~didNotPromise(acceptor2)', '~start(proposer0)', '~start(proposer2)']
455     : 1--0-------0-------------00
455     : ['chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~didNotPromise(acceptor2)', '~start(proposer1)', '~start(proposer2)']
456     : -----0--10--------------00-
456     : ['chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~didNotPromise(acceptor0)', '~start(proposer0)', '~start(proposer1)']
457     : ----0--1-0--------------0-0
457     : ['chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~didNotPromise(acceptor0)', '~start(proposer0)', '~start(proposer2)']
458     : ---0--1--0---------------00
458     : ['chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~didNotPromise(acceptor0)', '~start(proposer1)', '~start(proposer2)']
459     : --0--1----0-------------00-
459     : ['chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~didNotPromise(acceptor1)', '~start(proposer0)', '~start(proposer1)']
460     : -0--1-----0-------------0-0
460     : ['chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~didNotPromise(acceptor1)', '~start(proposer0)', '~start(proposer2)']
461     : 0--1------0--------------00
461     : ['chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~didNotPromise(acceptor1)', '~start(proposer1)', '~start(proposer2)']
462     : --0-----10--------------00-
462     : ['chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~didNotPromise(acceptor0)', '~start(proposer0)', '~start(proposer1)']
463     : -0-----1-0--------------0-0
463     : ['chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~didNotPromise(acceptor0)', '~start(proposer0)', '~start(proposer2)']
464     : 0-----1--0---------------00
464     : ['chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~didNotPromise(acceptor0)', '~start(proposer1)', '~start(proposer2)']
num_forall :   0
num_exists :   0
num_literals : 0
quantified form : None
qcost : 0


=== Prime Orbit 31 =====================
size : 18
num_suborbits: 1
465 (*) : --1-----0--0---------00----
465     : ['chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor2)', '~promise(acceptor2,proposer0)', '~promise(acceptor2,proposer1)']
466     : -1-----0---0---------0-0---
466     : ['chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor2)', '~promise(acceptor2,proposer0)', '~promise(acceptor2,proposer2)']
467     : 1-----0----0----------00---
467     : ['chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor2)', '~promise(acceptor2,proposer1)', '~promise(acceptor2,proposer2)']
468     : -----1--0-0-------00-------
468     : ['chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor1)', '~promise(acceptor1,proposer0)', '~promise(acceptor1,proposer1)']
469     : ----1--0--0-------0-0------
469     : ['chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor1)', '~promise(acceptor1,proposer0)', '~promise(acceptor1,proposer2)']
470     : ---1--0---0--------00------
470     : ['chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor1)', '~promise(acceptor1,proposer1)', '~promise(acceptor1,proposer2)']
471     : --1--0-----0---------00----
471     : ['chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~didNotPromise(acceptor2)', '~promise(acceptor2,proposer0)', '~promise(acceptor2,proposer1)']
472     : -1--0------0---------0-0---
472     : ['chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~didNotPromise(acceptor2)', '~promise(acceptor2,proposer0)', '~promise(acceptor2,proposer2)']
473     : 1--0-------0----------00---
473     : ['chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~didNotPromise(acceptor2)', '~promise(acceptor2,proposer1)', '~promise(acceptor2,proposer2)']
474     : -----0--10-----00----------
474     : ['chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~didNotPromise(acceptor0)', '~promise(acceptor0,proposer0)', '~promise(acceptor0,proposer1)']
475     : ----0--1-0-----0-0---------
475     : ['chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~didNotPromise(acceptor0)', '~promise(acceptor0,proposer0)', '~promise(acceptor0,proposer2)']
476     : ---0--1--0------00---------
476     : ['chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~didNotPromise(acceptor0)', '~promise(acceptor0,proposer1)', '~promise(acceptor0,proposer2)']
477     : --0--1----0-------00-------
477     : ['chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~didNotPromise(acceptor1)', '~promise(acceptor1,proposer0)', '~promise(acceptor1,proposer1)']
478     : -0--1-----0-------0-0------
478     : ['chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~didNotPromise(acceptor1)', '~promise(acceptor1,proposer0)', '~promise(acceptor1,proposer2)']
479     : 0--1------0--------00------
479     : ['chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~didNotPromise(acceptor1)', '~promise(acceptor1,proposer1)', '~promise(acceptor1,proposer2)']
480     : --0-----10-----00----------
480     : ['chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~didNotPromise(acceptor0)', '~promise(acceptor0,proposer0)', '~promise(acceptor0,proposer1)']
481     : -0-----1-0-----0-0---------
481     : ['chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~didNotPromise(acceptor0)', '~promise(acceptor0,proposer0)', '~promise(acceptor0,proposer2)']
482     : 0-----1--0------00---------
482     : ['chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~didNotPromise(acceptor0)', '~promise(acceptor0,proposer1)', '~promise(acceptor0,proposer2)']
num_forall :   0
num_exists :   0
num_literals : 0
quantified form : None
qcost : 0


=== Prime Orbit 32 =====================
size : 36
num_suborbits: 1
483 (*) : ----0----0-------0----1-0--
483     : ['promise(acceptor2,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~didNotPromise(acceptor0)', '~promise(acceptor0,proposer2)', '~start(proposer0)']
484     : -----0---0------0------10--
484     : ['promise(acceptor2,proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~didNotPromise(acceptor0)', '~promise(acceptor0,proposer1)', '~start(proposer0)']
485     : ---0-----0-------0---1---0-
485     : ['promise(acceptor2,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~didNotPromise(acceptor0)', '~promise(acceptor0,proposer2)', '~start(proposer1)']
486     : -----0---0-----0-------1-0-
486     : ['promise(acceptor2,proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~didNotPromise(acceptor0)', '~promise(acceptor0,proposer0)', '~start(proposer1)']
487     : ---0-----0------0----1----0
487     : ['promise(acceptor2,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~didNotPromise(acceptor0)', '~promise(acceptor0,proposer1)', '~start(proposer2)']
488     : ----0----0-----0------1---0
488     : ['promise(acceptor2,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~didNotPromise(acceptor0)', '~promise(acceptor0,proposer0)', '~start(proposer2)']
489     : -0-------0-------0-1----0--
489     : ['promise(acceptor1,proposer1)', '~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~didNotPromise(acceptor0)', '~promise(acceptor0,proposer2)', '~start(proposer0)']
490     : --0------0------0---1---0--
490     : ['promise(acceptor1,proposer2)', '~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~didNotPromise(acceptor0)', '~promise(acceptor0,proposer1)', '~start(proposer0)']
491     : 0--------0-------01------0-
491     : ['promise(acceptor1,proposer0)', '~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~didNotPromise(acceptor0)', '~promise(acceptor0,proposer2)', '~start(proposer1)']
492     : --0------0-----0----1----0-
492     : ['promise(acceptor1,proposer2)', '~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~didNotPromise(acceptor0)', '~promise(acceptor0,proposer0)', '~start(proposer1)']
493     : 0--------0------0-1-------0
493     : ['promise(acceptor1,proposer0)', '~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~didNotPromise(acceptor0)', '~promise(acceptor0,proposer1)', '~start(proposer2)']
494     : -0-------0-----0---1------0
494     : ['promise(acceptor1,proposer1)', '~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~didNotPromise(acceptor0)', '~promise(acceptor0,proposer0)', '~start(proposer2)']
495     : -------0--0---------0-1-0--
495     : ['promise(acceptor2,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor1)', '~promise(acceptor1,proposer2)', '~start(proposer0)']
496     : --------0-0--------0---10--
496     : ['promise(acceptor2,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor1)', '~promise(acceptor1,proposer1)', '~start(proposer0)']
497     : ------0---0---------01---0-
497     : ['promise(acceptor2,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor1)', '~promise(acceptor1,proposer2)', '~start(proposer1)']
498     : --------0-0-------0----1-0-
498     : ['promise(acceptor2,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor1)', '~promise(acceptor1,proposer0)', '~start(proposer1)']
499     : ------0---0--------0-1----0
499     : ['promise(acceptor2,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor1)', '~promise(acceptor1,proposer1)', '~start(proposer2)']
500     : -------0--0-------0---1---0
500     : ['promise(acceptor2,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor1)', '~promise(acceptor1,proposer0)', '~start(proposer2)']
501     : -0--------0-----1---0---0--
501     : ['promise(acceptor0,proposer1)', '~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~didNotPromise(acceptor1)', '~promise(acceptor1,proposer2)', '~start(proposer0)']
502     : --0-------0------1-0----0--
502     : ['promise(acceptor0,proposer2)', '~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~didNotPromise(acceptor1)', '~promise(acceptor1,proposer1)', '~start(proposer0)']
503     : 0---------0----1----0----0-
503     : ['promise(acceptor0,proposer0)', '~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~didNotPromise(acceptor1)', '~promise(acceptor1,proposer2)', '~start(proposer1)']
504     : --0-------0------10------0-
504     : ['promise(acceptor0,proposer2)', '~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~didNotPromise(acceptor1)', '~promise(acceptor1,proposer0)', '~start(proposer1)']
505     : 0---------0----1---0------0
505     : ['promise(acceptor0,proposer0)', '~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~didNotPromise(acceptor1)', '~promise(acceptor1,proposer1)', '~start(proposer2)']
506     : -0--------0-----1-0-------0
506     : ['promise(acceptor0,proposer1)', '~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~didNotPromise(acceptor1)', '~promise(acceptor1,proposer0)', '~start(proposer2)']
507     : -------0---0-------1---00--
507     : ['promise(acceptor1,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor2)', '~promise(acceptor2,proposer2)', '~start(proposer0)']
508     : --------0--0--------1-0-0--
508     : ['promise(acceptor1,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor2)', '~promise(acceptor2,proposer1)', '~start(proposer0)']
509     : ------0----0------1----0-0-
509     : ['promise(acceptor1,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor2)', '~promise(acceptor2,proposer2)', '~start(proposer1)']
510     : --------0--0--------10---0-
510     : ['promise(acceptor1,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor2)', '~promise(acceptor2,proposer0)', '~start(proposer1)']
511     : ------0----0------1---0---0
511     : ['promise(acceptor1,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor2)', '~promise(acceptor2,proposer1)', '~start(proposer2)']
512     : -------0---0-------1-0----0
512     : ['promise(acceptor1,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor2)', '~promise(acceptor2,proposer0)', '~start(proposer2)']
513     : ----0------0----1------00--
513     : ['promise(acceptor0,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~didNotPromise(acceptor2)', '~promise(acceptor2,proposer2)', '~start(proposer0)']
514     : -----0-----0-----1----0-0--
514     : ['promise(acceptor0,proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~didNotPromise(acceptor2)', '~promise(acceptor2,proposer1)', '~start(proposer0)']
515     : ---0-------0---1-------0-0-
515     : ['promise(acceptor0,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~didNotPromise(acceptor2)', '~promise(acceptor2,proposer2)', '~start(proposer1)']
516     : -----0-----0-----1---0---0-
516     : ['promise(acceptor0,proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~didNotPromise(acceptor2)', '~promise(acceptor2,proposer0)', '~start(proposer1)']
517     : ---0-------0---1------0---0
517     : ['promise(acceptor0,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~didNotPromise(acceptor2)', '~promise(acceptor2,proposer1)', '~start(proposer2)']
518     : ----0------0----1----0----0
518     : ['promise(acceptor0,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~didNotPromise(acceptor2)', '~promise(acceptor2,proposer0)', '~start(proposer2)']
num_forall :   0
num_exists :   0
num_literals : 0
quantified form : None
qcost : 0


=== Prime Orbit 33 =====================
size : 18
num_suborbits: 1
519 (*) : -------0--0-----------1-0-0
519     : ['promise(acceptor2,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor1)', '~start(proposer0)', '~start(proposer2)']
520     : --------0-0------------100-
520     : ['promise(acceptor2,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor1)', '~start(proposer0)', '~start(proposer1)']
521     : ------0---0----------1---00
521     : ['promise(acceptor2,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor1)', '~start(proposer1)', '~start(proposer2)']
522     : -------0---0-------1----0-0
522     : ['promise(acceptor1,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor2)', '~start(proposer0)', '~start(proposer2)']
523     : --------0--0--------1---00-
523     : ['promise(acceptor1,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor2)', '~start(proposer0)', '~start(proposer1)']
524     : ------0----0------1------00
524     : ['promise(acceptor1,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor2)', '~start(proposer1)', '~start(proposer2)']
525     : ----0----0------------1-0-0
525     : ['promise(acceptor2,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~didNotPromise(acceptor0)', '~start(proposer0)', '~start(proposer2)']
526     : -----0---0-------------100-
526     : ['promise(acceptor2,proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~didNotPromise(acceptor0)', '~start(proposer0)', '~start(proposer1)']
527     : ---0-----0-----------1---00
527     : ['promise(acceptor2,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~didNotPromise(acceptor0)', '~start(proposer1)', '~start(proposer2)']
528     : ----0------0----1-------0-0
528     : ['promise(acceptor0,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~didNotPromise(acceptor2)', '~start(proposer0)', '~start(proposer2)']
529     : -----0-----0-----1------00-
529     : ['promise(acceptor0,proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~didNotPromise(acceptor2)', '~start(proposer0)', '~start(proposer1)']
530     : ---0-------0---1---------00
530     : ['promise(acceptor0,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~didNotPromise(acceptor2)', '~start(proposer1)', '~start(proposer2)']
531     : -0-------0---------1----0-0
531     : ['promise(acceptor1,proposer1)', '~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~didNotPromise(acceptor0)', '~start(proposer0)', '~start(proposer2)']
532     : --0------0----------1---00-
532     : ['promise(acceptor1,proposer2)', '~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~didNotPromise(acceptor0)', '~start(proposer0)', '~start(proposer1)']
533     : 0--------0--------1------00
533     : ['promise(acceptor1,proposer0)', '~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~didNotPromise(acceptor0)', '~start(proposer1)', '~start(proposer2)']
534     : -0--------0-----1-------0-0
534     : ['promise(acceptor0,proposer1)', '~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~didNotPromise(acceptor1)', '~start(proposer0)', '~start(proposer2)']
535     : --0-------0------1------00-
535     : ['promise(acceptor0,proposer2)', '~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~didNotPromise(acceptor1)', '~start(proposer0)', '~start(proposer1)']
536     : 0---------0----1---------00
536     : ['promise(acceptor0,proposer0)', '~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~didNotPromise(acceptor1)', '~start(proposer1)', '~start(proposer2)']
num_forall :   0
num_exists :   0
num_literals : 0
quantified form : None
qcost : 0


=== Prime Orbit 34 =====================
size : 18
num_suborbits: 1
537 (*) : ----0----0-----0-0----1----
537     : ['promise(acceptor2,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~didNotPromise(acceptor0)', '~promise(acceptor0,proposer0)', '~promise(acceptor0,proposer2)']
538     : -----0---0-----00------1---
538     : ['promise(acceptor2,proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~didNotPromise(acceptor0)', '~promise(acceptor0,proposer0)', '~promise(acceptor0,proposer1)']
539     : ---0-----0------00---1-----
539     : ['promise(acceptor2,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~didNotPromise(acceptor0)', '~promise(acceptor0,proposer1)', '~promise(acceptor0,proposer2)']
540     : -0-------0-----0-0-1-------
540     : ['promise(acceptor1,proposer1)', '~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~didNotPromise(acceptor0)', '~promise(acceptor0,proposer0)', '~promise(acceptor0,proposer2)']
541     : --0------0-----00---1------
541     : ['promise(acceptor1,proposer2)', '~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~didNotPromise(acceptor0)', '~promise(acceptor0,proposer0)', '~promise(acceptor0,proposer1)']
542     : 0--------0------001--------
542     : ['promise(acceptor1,proposer0)', '~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~didNotPromise(acceptor0)', '~promise(acceptor0,proposer1)', '~promise(acceptor0,proposer2)']
543     : -------0--0-------0-0-1----
543     : ['promise(acceptor2,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor1)', '~promise(acceptor1,proposer0)', '~promise(acceptor1,proposer2)']
544     : --------0-0-------00---1---
544     : ['promise(acceptor2,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor1)', '~promise(acceptor1,proposer0)', '~promise(acceptor1,proposer1)']
545     : ------0---0--------001-----
545     : ['promise(acceptor2,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor1)', '~promise(acceptor1,proposer1)', '~promise(acceptor1,proposer2)']
546     : -0--------0-----1-0-0------
546     : ['promise(acceptor0,proposer1)', '~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~didNotPromise(acceptor1)', '~promise(acceptor1,proposer0)', '~promise(acceptor1,proposer2)']
547     : --0-------0------100-------
547     : ['promise(acceptor0,proposer2)', '~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~didNotPromise(acceptor1)', '~promise(acceptor1,proposer0)', '~promise(acceptor1,proposer1)']
548     : 0---------0----1---00------
548     : ['promise(acceptor0,proposer0)', '~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~didNotPromise(acceptor1)', '~promise(acceptor1,proposer1)', '~promise(acceptor1,proposer2)']
549     : -------0---0-------1-0-0---
549     : ['promise(acceptor1,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor2)', '~promise(acceptor2,proposer0)', '~promise(acceptor2,proposer2)']
550     : --------0--0--------100----
550     : ['promise(acceptor1,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor2)', '~promise(acceptor2,proposer0)', '~promise(acceptor2,proposer1)']
551     : ------0----0------1---00---
551     : ['promise(acceptor1,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor2)', '~promise(acceptor2,proposer1)', '~promise(acceptor2,proposer2)']
552     : ----0------0----1----0-0---
552     : ['promise(acceptor0,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~didNotPromise(acceptor2)', '~promise(acceptor2,proposer0)', '~promise(acceptor2,proposer2)']
553     : -----0-----0-----1---00----
553     : ['promise(acceptor0,proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~didNotPromise(acceptor2)', '~promise(acceptor2,proposer0)', '~promise(acceptor2,proposer1)']
554     : ---0-------0---1------00---
554     : ['promise(acceptor0,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~didNotPromise(acceptor2)', '~promise(acceptor2,proposer1)', '~promise(acceptor2,proposer2)']
num_forall :   0
num_exists :   0
num_literals : 0
quantified form : None
qcost : 0


=== Prime Orbit 35 =====================
size : 9
num_suborbits: 1
555 (*) : --0------00-------------00-
555     : ['~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~start(proposer0)', '~start(proposer1)']
556     : -0-------00-------------0-0
556     : ['~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~start(proposer0)', '~start(proposer2)']
557     : 0--------00--------------00
557     : ['~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~start(proposer1)', '~start(proposer2)']
558     : -----0---0-0------------00-
558     : ['~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor2)', '~start(proposer0)', '~start(proposer1)']
559     : ----0----0-0------------0-0
559     : ['~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor2)', '~start(proposer0)', '~start(proposer2)']
560     : ---0-----0-0-------------00
560     : ['~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor2)', '~start(proposer1)', '~start(proposer2)']
561     : --------0-00------------00-
561     : ['~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~start(proposer0)', '~start(proposer1)']
562     : -------0--00------------0-0
562     : ['~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~start(proposer0)', '~start(proposer2)']
563     : ------0---00-------------00
563     : ['~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~start(proposer1)', '~start(proposer2)']
num_forall :   0
num_exists :   0
num_literals : 0
quantified form : None
qcost : 0


=== Prime Orbit 36 =====================
size : 18
num_suborbits: 1
564 (*) : -0----0---0-----1---01-----
564     : ['promise(acceptor0,proposer1)', 'promise(acceptor2,proposer0)', '~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor1)', '~promise(acceptor1,proposer2)']
565     : --0---0---0------1-0-1-----
565     : ['promise(acceptor0,proposer2)', 'promise(acceptor2,proposer0)', '~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor1)', '~promise(acceptor1,proposer1)']
566     : 0------0--0----1----0-1----
566     : ['promise(acceptor0,proposer0)', 'promise(acceptor2,proposer1)', '~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor1)', '~promise(acceptor1,proposer2)']
567     : --0----0--0------10---1----
567     : ['promise(acceptor0,proposer2)', 'promise(acceptor2,proposer1)', '~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor1)', '~promise(acceptor1,proposer0)']
568     : 0-------0-0----1---0---1---
568     : ['promise(acceptor0,proposer0)', 'promise(acceptor2,proposer2)', '~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor1)', '~promise(acceptor1,proposer1)']
569     : -0------0-0-----1-0----1---
569     : ['promise(acceptor0,proposer1)', 'promise(acceptor2,proposer2)', '~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor1)', '~promise(acceptor1,proposer0)']
570     : ----0-0----0----1-1----0---
570     : ['promise(acceptor0,proposer1)', 'promise(acceptor1,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor2)', '~promise(acceptor2,proposer2)']
571     : -----00----0-----11---0----
571     : ['promise(acceptor0,proposer2)', 'promise(acceptor1,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor2)', '~promise(acceptor2,proposer1)']
572     : ---0---0---0---1---1---0---
572     : ['promise(acceptor0,proposer0)', 'promise(acceptor1,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor2)', '~promise(acceptor2,proposer2)']
573     : -----0-0---0-----1-1-0-----
573     : ['promise(acceptor0,proposer2)', 'promise(acceptor1,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor2)', '~promise(acceptor2,proposer0)']
574     : ---0----0--0---1----1-0----
574     : ['promise(acceptor0,proposer0)', 'promise(acceptor1,proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor2)', '~promise(acceptor2,proposer1)']
575     : ----0---0--0----1---10-----
575     : ['promise(acceptor0,proposer1)', 'promise(acceptor1,proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor2)', '~promise(acceptor2,proposer0)']
576     : -0-0-----0-------0-1-1-----
576     : ['promise(acceptor1,proposer1)', 'promise(acceptor2,proposer0)', '~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~didNotPromise(acceptor0)', '~promise(acceptor0,proposer2)']
577     : --00-----0------0---11-----
577     : ['promise(acceptor1,proposer2)', 'promise(acceptor2,proposer0)', '~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~didNotPromise(acceptor0)', '~promise(acceptor0,proposer1)']
578     : 0---0----0-------01---1----
578     : ['promise(acceptor1,proposer0)', 'promise(acceptor2,proposer1)', '~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~didNotPromise(acceptor0)', '~promise(acceptor0,proposer2)']
579     : --0-0----0-----0----1-1----
579     : ['promise(acceptor1,proposer2)', 'promise(acceptor2,proposer1)', '~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~didNotPromise(acceptor0)', '~promise(acceptor0,proposer0)']
580     : 0----0---0------0-1----1---
580     : ['promise(acceptor1,proposer0)', 'promise(acceptor2,proposer2)', '~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~didNotPromise(acceptor0)', '~promise(acceptor0,proposer1)']
581     : -0---0---0-----0---1---1---
581     : ['promise(acceptor1,proposer1)', 'promise(acceptor2,proposer2)', '~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~didNotPromise(acceptor0)', '~promise(acceptor0,proposer0)']
num_forall :   0
num_exists :   0
num_literals : 0
quantified form : None
qcost : 0


=== Prime Orbit 37 =====================
size : 9
num_suborbits: 1
582 (*) : ---0--0----01---------00---
582     : ['leader(proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor2)', '~promise(acceptor2,proposer1)', '~promise(acceptor2,proposer2)']
583     : ----0--0---0-1-------0-0---
583     : ['leader(proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor2)', '~promise(acceptor2,proposer0)', '~promise(acceptor2,proposer2)']
584     : -----0--0--0--1------00----
584     : ['leader(proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor2)', '~promise(acceptor2,proposer0)', '~promise(acceptor2,proposer1)']
585     : 0-----0---0-1------00------
585     : ['leader(proposer0)', '~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor1)', '~promise(acceptor1,proposer1)', '~promise(acceptor1,proposer2)']
586     : -0-----0--0--1----0-0------
586     : ['leader(proposer1)', '~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor1)', '~promise(acceptor1,proposer0)', '~promise(acceptor1,proposer2)']
587     : --0-----0-0---1---00-------
587     : ['leader(proposer2)', '~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor1)', '~promise(acceptor1,proposer0)', '~promise(acceptor1,proposer1)']
588     : 0--0-----0--1---00---------
588     : ['leader(proposer0)', '~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~didNotPromise(acceptor0)', '~promise(acceptor0,proposer1)', '~promise(acceptor0,proposer2)']
589     : -0--0----0---1-0-0---------
589     : ['leader(proposer1)', '~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~didNotPromise(acceptor0)', '~promise(acceptor0,proposer0)', '~promise(acceptor0,proposer2)']
590     : --0--0---0----100----------
590     : ['leader(proposer2)', '~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~didNotPromise(acceptor0)', '~promise(acceptor0,proposer0)', '~promise(acceptor0,proposer1)']
num_forall :   0
num_exists :   0
num_literals : 0
quantified form : None
qcost : 0


=== Prime Orbit 38 =====================
size : 18
num_suborbits: 1
591 (*) : -0-------00----0--0-------0
591     : ['~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~promise(acceptor0,proposer0)', '~promise(acceptor1,proposer0)', '~start(proposer2)']
592     : --0------00----0--0------0-
592     : ['~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~promise(acceptor0,proposer0)', '~promise(acceptor1,proposer0)', '~start(proposer1)']
593     : 0--------00-----0--0------0
593     : ['~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~promise(acceptor0,proposer1)', '~promise(acceptor1,proposer1)', '~start(proposer2)']
594     : --0------00-----0--0----0--
594     : ['~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~promise(acceptor0,proposer1)', '~promise(acceptor1,proposer1)', '~start(proposer0)']
595     : 0--------00------0--0----0-
595     : ['~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~promise(acceptor0,proposer2)', '~promise(acceptor1,proposer2)', '~start(proposer1)']
596     : -0-------00------0--0---0--
596     : ['~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~promise(acceptor0,proposer2)', '~promise(acceptor1,proposer2)', '~start(proposer0)']
597     : ----0----0-0---0-----0----0
597     : ['~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor2)', '~promise(acceptor0,proposer0)', '~promise(acceptor2,proposer0)', '~start(proposer2)']
598     : -----0---0-0---0-----0---0-
598     : ['~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor2)', '~promise(acceptor0,proposer0)', '~promise(acceptor2,proposer0)', '~start(proposer1)']
599     : ---0-----0-0----0-----0---0
599     : ['~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor2)', '~promise(acceptor0,proposer1)', '~promise(acceptor2,proposer1)', '~start(proposer2)']
600     : -----0---0-0----0-----0-0--
600     : ['~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor2)', '~promise(acceptor0,proposer1)', '~promise(acceptor2,proposer1)', '~start(proposer0)']
601     : ---0-----0-0-----0-----0-0-
601     : ['~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor2)', '~promise(acceptor0,proposer2)', '~promise(acceptor2,proposer2)', '~start(proposer1)']
602     : ----0----0-0-----0-----00--
602     : ['~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor2)', '~promise(acceptor0,proposer2)', '~promise(acceptor2,proposer2)', '~start(proposer0)']
603     : -------0--00------0--0----0
603     : ['~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor1,proposer0)', '~promise(acceptor2,proposer0)', '~start(proposer2)']
604     : --------0-00------0--0---0-
604     : ['~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor1,proposer0)', '~promise(acceptor2,proposer0)', '~start(proposer1)']
605     : ------0---00-------0--0---0
605     : ['~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor1,proposer1)', '~promise(acceptor2,proposer1)', '~start(proposer2)']
606     : --------0-00-------0--0-0--
606     : ['~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor1,proposer1)', '~promise(acceptor2,proposer1)', '~start(proposer0)']
607     : ------0---00--------0--0-0-
607     : ['~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor1,proposer2)', '~promise(acceptor2,proposer2)', '~start(proposer1)']
608     : -------0--00--------0--00--
608     : ['~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor1,proposer2)', '~promise(acceptor2,proposer2)', '~start(proposer0)']
num_forall :   0
num_exists :   0
num_literals : 0
quantified form : None
qcost : 0


=== Prime Orbit 39 =====================
size : 18
num_suborbits: 1
609 (*) : -0-0-----0---------1-1----0
609     : ['promise(acceptor1,proposer1)', 'promise(acceptor2,proposer0)', '~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~didNotPromise(acceptor0)', '~start(proposer2)']
610     : --00-----0----------11---0-
610     : ['promise(acceptor1,proposer2)', 'promise(acceptor2,proposer0)', '~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~didNotPromise(acceptor0)', '~start(proposer1)']
611     : 0---0----0--------1---1---0
611     : ['promise(acceptor1,proposer0)', 'promise(acceptor2,proposer1)', '~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~didNotPromise(acceptor0)', '~start(proposer2)']
612     : --0-0----0----------1-1-0--
612     : ['promise(acceptor1,proposer2)', 'promise(acceptor2,proposer1)', '~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~didNotPromise(acceptor0)', '~start(proposer0)']
613     : 0----0---0--------1----1-0-
613     : ['promise(acceptor1,proposer0)', 'promise(acceptor2,proposer2)', '~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~didNotPromise(acceptor0)', '~start(proposer1)']
614     : -0---0---0---------1---10--
614     : ['promise(acceptor1,proposer1)', 'promise(acceptor2,proposer2)', '~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~didNotPromise(acceptor0)', '~start(proposer0)']
615     : -0----0---0-----1----1----0
615     : ['promise(acceptor0,proposer1)', 'promise(acceptor2,proposer0)', '~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor1)', '~start(proposer2)']
616     : --0---0---0------1---1---0-
616     : ['promise(acceptor0,proposer2)', 'promise(acceptor2,proposer0)', '~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor1)', '~start(proposer1)']
617     : 0------0--0----1------1---0
617     : ['promise(acceptor0,proposer0)', 'promise(acceptor2,proposer1)', '~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor1)', '~start(proposer2)']
618     : --0----0--0------1----1-0--
618     : ['promise(acceptor0,proposer2)', 'promise(acceptor2,proposer1)', '~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor1)', '~start(proposer0)']
619     : 0-------0-0----1-------1-0-
619     : ['promise(acceptor0,proposer0)', 'promise(acceptor2,proposer2)', '~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor1)', '~start(proposer1)']
620     : -0------0-0-----1------10--
620     : ['promise(acceptor0,proposer1)', 'promise(acceptor2,proposer2)', '~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor1)', '~start(proposer0)']
621     : ----0-0----0----1-1-------0
621     : ['promise(acceptor0,proposer1)', 'promise(acceptor1,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor2)', '~start(proposer2)']
622     : -----00----0-----11------0-
622     : ['promise(acceptor0,proposer2)', 'promise(acceptor1,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor2)', '~start(proposer1)']
623     : ---0---0---0---1---1------0
623     : ['promise(acceptor0,proposer0)', 'promise(acceptor1,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor2)', '~start(proposer2)']
624     : -----0-0---0-----1-1----0--
624     : ['promise(acceptor0,proposer2)', 'promise(acceptor1,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor2)', '~start(proposer0)']
625     : ---0----0--0---1----1----0-
625     : ['promise(acceptor0,proposer0)', 'promise(acceptor1,proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor2)', '~start(proposer1)']
626     : ----0---0--0----1---1---0--
626     : ['promise(acceptor0,proposer1)', 'promise(acceptor1,proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor2)', '~start(proposer0)']
num_forall :   0
num_exists :   0
num_literals : 0
quantified form : None
qcost : 0


=== Prime Orbit 40 =====================
size : 18
num_suborbits: 1
627 (*) : 0--0-----0--1---0---------0
627     : ['leader(proposer0)', '~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~didNotPromise(acceptor0)', '~promise(acceptor0,proposer1)', '~start(proposer2)']
628     : 0--0-----0--1----0-------0-
628     : ['leader(proposer0)', '~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~didNotPromise(acceptor0)', '~promise(acceptor0,proposer2)', '~start(proposer1)']
629     : -0--0----0---1-0----------0
629     : ['leader(proposer1)', '~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~didNotPromise(acceptor0)', '~promise(acceptor0,proposer0)', '~start(proposer2)']
630     : -0--0----0---1---0------0--
630     : ['leader(proposer1)', '~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~didNotPromise(acceptor0)', '~promise(acceptor0,proposer2)', '~start(proposer0)']
631     : --0--0---0----10---------0-
631     : ['leader(proposer2)', '~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~didNotPromise(acceptor0)', '~promise(acceptor0,proposer0)', '~start(proposer1)']
632     : --0--0---0----1-0-------0--
632     : ['leader(proposer2)', '~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~didNotPromise(acceptor0)', '~promise(acceptor0,proposer1)', '~start(proposer0)']
633     : 0-----0---0-1------0------0
633     : ['leader(proposer0)', '~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor1)', '~promise(acceptor1,proposer1)', '~start(proposer2)']
634     : 0-----0---0-1-------0----0-
634     : ['leader(proposer0)', '~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor1)', '~promise(acceptor1,proposer2)', '~start(proposer1)']
635     : -0-----0--0--1----0-------0
635     : ['leader(proposer1)', '~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor1)', '~promise(acceptor1,proposer0)', '~start(proposer2)']
636     : -0-----0--0--1------0---0--
636     : ['leader(proposer1)', '~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor1)', '~promise(acceptor1,proposer2)', '~start(proposer0)']
637     : --0-----0-0---1---0------0-
637     : ['leader(proposer2)', '~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor1)', '~promise(acceptor1,proposer0)', '~start(proposer1)']
638     : --0-----0-0---1----0----0--
638     : ['leader(proposer2)', '~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor1)', '~promise(acceptor1,proposer1)', '~start(proposer0)']
639     : ---0--0----01---------0---0
639     : ['leader(proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor2)', '~promise(acceptor2,proposer1)', '~start(proposer2)']
640     : ---0--0----01----------0-0-
640     : ['leader(proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor2)', '~promise(acceptor2,proposer2)', '~start(proposer1)']
641     : ----0--0---0-1-------0----0
641     : ['leader(proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor2)', '~promise(acceptor2,proposer0)', '~start(proposer2)']
642     : ----0--0---0-1---------00--
642     : ['leader(proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor2)', '~promise(acceptor2,proposer2)', '~start(proposer0)']
643     : -----0--0--0--1------0---0-
643     : ['leader(proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor2)', '~promise(acceptor2,proposer0)', '~start(proposer1)']
644     : -----0--0--0--1-------0-0--
644     : ['leader(proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor2)', '~promise(acceptor2,proposer1)', '~start(proposer0)']
num_forall :   0
num_exists :   0
num_literals : 0
quantified form : None
qcost : 0


=== Prime Orbit 41 =====================
size : 9
num_suborbits: 1
645 (*) : 0--0-----0--1------------00
645     : ['leader(proposer0)', '~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~didNotPromise(acceptor0)', '~start(proposer1)', '~start(proposer2)']
646     : -0--0----0---1----------0-0
646     : ['leader(proposer1)', '~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~didNotPromise(acceptor0)', '~start(proposer0)', '~start(proposer2)']
647     : --0--0---0----1---------00-
647     : ['leader(proposer2)', '~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~didNotPromise(acceptor0)', '~start(proposer0)', '~start(proposer1)']
648     : 0-----0---0-1------------00
648     : ['leader(proposer0)', '~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor1)', '~start(proposer1)', '~start(proposer2)']
649     : -0-----0--0--1----------0-0
649     : ['leader(proposer1)', '~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor1)', '~start(proposer0)', '~start(proposer2)']
650     : --0-----0-0---1---------00-
650     : ['leader(proposer2)', '~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor1)', '~start(proposer0)', '~start(proposer1)']
651     : ---0--0----01------------00
651     : ['leader(proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor2)', '~start(proposer1)', '~start(proposer2)']
652     : ----0--0---0-1----------0-0
652     : ['leader(proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor2)', '~start(proposer0)', '~start(proposer2)']
653     : -----0--0--0--1---------00-
653     : ['leader(proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor2)', '~start(proposer0)', '~start(proposer1)']
num_forall :   0
num_exists :   0
num_literals : 0
quantified form : None
qcost : 0


=== Prime Orbit 42 =====================
size : 18
num_suborbits: 1
654 (*) : -0---0--000------------10--
654     : ['promise(acceptor2,proposer2)', '~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~start(proposer0)']
655     : --0-0--0-00-----------1-0--
655     : ['promise(acceptor2,proposer1)', '~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~start(proposer0)']
656     : 0----0--000------------1-0-
656     : ['promise(acceptor2,proposer2)', '~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~start(proposer1)']
657     : --00--0--00----------1---0-
657     : ['promise(acceptor2,proposer0)', '~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~start(proposer1)']
658     : 0---0--0-00-----------1---0
658     : ['promise(acceptor2,proposer1)', '~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~start(proposer2)']
659     : -0-0--0--00----------1----0
659     : ['promise(acceptor2,proposer0)', '~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~start(proposer2)']
660     : --0-0---00-0--------1---0--
660     : ['promise(acceptor1,proposer2)', '~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor2)', '~start(proposer0)']
661     : -0---0-0-0-0-------1----0--
661     : ['promise(acceptor1,proposer1)', '~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor2)', '~start(proposer0)']
662     : --00----00-0--------1----0-
662     : ['promise(acceptor1,proposer2)', '~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor2)', '~start(proposer1)']
663     : 0----00--0-0------1------0-
663     : ['promise(acceptor1,proposer0)', '~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor2)', '~start(proposer1)']
664     : -0-0---0-0-0-------1------0
664     : ['promise(acceptor1,proposer1)', '~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor2)', '~start(proposer2)']
665     : 0---0-0--0-0------1-------0
665     : ['promise(acceptor1,proposer0)', '~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor2)', '~start(proposer2)']
666     : --0--0-0--00-----1------0--
666     : ['promise(acceptor0,proposer2)', '~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~start(proposer0)']
667     : -0--0---0-00----1-------0--
667     : ['promise(acceptor0,proposer1)', '~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~start(proposer0)']
668     : --0--00---00-----1-------0-
668     : ['promise(acceptor0,proposer2)', '~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~start(proposer1)']
669     : 0--0----0-00---1---------0-
669     : ['promise(acceptor0,proposer0)', '~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~start(proposer1)']
670     : -0--0-0---00----1---------0
670     : ['promise(acceptor0,proposer1)', '~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~start(proposer2)']
671     : 0--0---0--00---1----------0
671     : ['promise(acceptor0,proposer0)', '~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~start(proposer2)']
num_forall :   0
num_exists :   0
num_literals : 0
quantified form : None
qcost : 0


=== Prime Orbit 43 =====================
size : 36
num_suborbits: 1
672 (*) : -0---0---00---------0--10--
672     : ['promise(acceptor2,proposer2)', '~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~promise(acceptor1,proposer2)', '~start(proposer0)']
673     : --0-0----00--------0--1-0--
673     : ['promise(acceptor2,proposer1)', '~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~promise(acceptor1,proposer1)', '~start(proposer0)']
674     : 0----0---00---------0--1-0-
674     : ['promise(acceptor2,proposer2)', '~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~promise(acceptor1,proposer2)', '~start(proposer1)']
675     : --00-----00-------0--1---0-
675     : ['promise(acceptor2,proposer0)', '~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~promise(acceptor1,proposer0)', '~start(proposer1)']
676     : 0---0----00--------0--1---0
676     : ['promise(acceptor2,proposer1)', '~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~promise(acceptor1,proposer1)', '~start(proposer2)']
677     : -0-0-----00-------0--1----0
677     : ['promise(acceptor2,proposer0)', '~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~promise(acceptor1,proposer0)', '~start(proposer2)']
678     : --0-0----0-0--------1--00--
678     : ['promise(acceptor1,proposer2)', '~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor2)', '~promise(acceptor2,proposer2)', '~start(proposer0)']
679     : -0---0---0-0-------1--0-0--
679     : ['promise(acceptor1,proposer1)', '~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor2)', '~promise(acceptor2,proposer1)', '~start(proposer0)']
680     : --00-----0-0--------1--0-0-
680     : ['promise(acceptor1,proposer2)', '~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor2)', '~promise(acceptor2,proposer2)', '~start(proposer1)']
681     : 0----0---0-0------1--0---0-
681     : ['promise(acceptor1,proposer0)', '~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor2)', '~promise(acceptor2,proposer0)', '~start(proposer1)']
682     : -0-0-----0-0-------1--0---0
682     : ['promise(acceptor1,proposer1)', '~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor2)', '~promise(acceptor2,proposer1)', '~start(proposer2)']
683     : 0---0----0-0------1--0----0
683     : ['promise(acceptor1,proposer0)', '~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor2)', '~promise(acceptor2,proposer0)', '~start(proposer2)']
684     : -0------000------0-----10--
684     : ['promise(acceptor2,proposer2)', '~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~promise(acceptor0,proposer2)', '~start(proposer0)']
685     : --0----0-00-----0-----1-0--
685     : ['promise(acceptor2,proposer1)', '~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~promise(acceptor0,proposer1)', '~start(proposer0)']
686     : 0-------000------0-----1-0-
686     : ['promise(acceptor2,proposer2)', '~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~promise(acceptor0,proposer2)', '~start(proposer1)']
687     : --0---0--00----0-----1---0-
687     : ['promise(acceptor2,proposer0)', '~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~promise(acceptor0,proposer0)', '~start(proposer1)']
688     : 0------0-00-----0-----1---0
688     : ['promise(acceptor2,proposer1)', '~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~promise(acceptor0,proposer1)', '~start(proposer2)']
689     : -0----0--00----0-----1----0
689     : ['promise(acceptor2,proposer0)', '~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~promise(acceptor0,proposer0)', '~start(proposer2)']
690     : --0----0--00-----1-----00--
690     : ['promise(acceptor0,proposer2)', '~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor2,proposer2)', '~start(proposer0)']
691     : -0------0-00----1-----0-0--
691     : ['promise(acceptor0,proposer1)', '~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor2,proposer1)', '~start(proposer0)']
692     : --0---0---00-----1-----0-0-
692     : ['promise(acceptor0,proposer2)', '~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor2,proposer2)', '~start(proposer1)']
693     : 0-------0-00---1-----0---0-
693     : ['promise(acceptor0,proposer0)', '~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor2,proposer0)', '~start(proposer1)']
694     : -0----0---00----1-----0---0
694     : ['promise(acceptor0,proposer1)', '~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor2,proposer1)', '~start(proposer2)']
695     : 0------0--00---1-----0----0
695     : ['promise(acceptor0,proposer0)', '~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor2,proposer0)', '~start(proposer2)']
696     : ----0---00-0-----0--1---0--
696     : ['promise(acceptor1,proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor2)', '~promise(acceptor0,proposer2)', '~start(proposer0)']
697     : -----0-0-0-0----0--1----0--
697     : ['promise(acceptor1,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor2)', '~promise(acceptor0,proposer1)', '~start(proposer0)']
698     : ---0----00-0-----0--1----0-
698     : ['promise(acceptor1,proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor2)', '~promise(acceptor0,proposer2)', '~start(proposer1)']
699     : -----00--0-0---0--1------0-
699     : ['promise(acceptor1,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor2)', '~promise(acceptor0,proposer0)', '~start(proposer1)']
700     : ---0---0-0-0----0--1------0
700     : ['promise(acceptor1,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor2)', '~promise(acceptor0,proposer1)', '~start(proposer2)']
701     : ----0-0--0-0---0--1-------0
701     : ['promise(acceptor1,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor2)', '~promise(acceptor0,proposer0)', '~start(proposer2)']
702     : -----0-0--00-----1--0---0--
702     : ['promise(acceptor0,proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor1,proposer2)', '~start(proposer0)']
703     : ----0---0-00----1--0----0--
703     : ['promise(acceptor0,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor1,proposer1)', '~start(proposer0)']
704     : -----00---00-----1--0----0-
704     : ['promise(acceptor0,proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor1,proposer2)', '~start(proposer1)']
705     : ---0----0-00---1--0------0-
705     : ['promise(acceptor0,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor1,proposer0)', '~start(proposer1)']
706     : ----0-0---00----1--0------0
706     : ['promise(acceptor0,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor1,proposer1)', '~start(proposer2)']
707     : ---0---0--00---1--0-------0
707     : ['promise(acceptor0,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor1,proposer0)', '~start(proposer2)']
num_forall :   0
num_exists :   0
num_literals : 0
quantified form : None
qcost : 0


=== Prime Orbit 44 =====================
size : 9
num_suborbits: 1
708 (*) : -------0--00------0-00-0---
708     : ['~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor1,proposer0)', '~promise(acceptor1,proposer2)', '~promise(acceptor2,proposer0)', '~promise(acceptor2,proposer2)']
709     : --------0-00------00-00----
709     : ['~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor1,proposer0)', '~promise(acceptor1,proposer1)', '~promise(acceptor2,proposer0)', '~promise(acceptor2,proposer1)']
710     : ------0---00-------00-00---
710     : ['~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor1,proposer1)', '~promise(acceptor1,proposer2)', '~promise(acceptor2,proposer1)', '~promise(acceptor2,proposer2)']
711     : ----0----0-0---0-0---0-0---
711     : ['~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor2)', '~promise(acceptor0,proposer0)', '~promise(acceptor0,proposer2)', '~promise(acceptor2,proposer0)', '~promise(acceptor2,proposer2)']
712     : -----0---0-0---00----00----
712     : ['~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor2)', '~promise(acceptor0,proposer0)', '~promise(acceptor0,proposer1)', '~promise(acceptor2,proposer0)', '~promise(acceptor2,proposer1)']
713     : ---0-----0-0----00----00---
713     : ['~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor2)', '~promise(acceptor0,proposer1)', '~promise(acceptor0,proposer2)', '~promise(acceptor2,proposer1)', '~promise(acceptor2,proposer2)']
714     : -0-------00----0-00-0------
714     : ['~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~promise(acceptor0,proposer0)', '~promise(acceptor0,proposer2)', '~promise(acceptor1,proposer0)', '~promise(acceptor1,proposer2)']
715     : --0------00----00-00-------
715     : ['~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~promise(acceptor0,proposer0)', '~promise(acceptor0,proposer1)', '~promise(acceptor1,proposer0)', '~promise(acceptor1,proposer1)']
716     : 0--------00-----00-00------
716     : ['~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~promise(acceptor0,proposer1)', '~promise(acceptor0,proposer2)', '~promise(acceptor1,proposer1)', '~promise(acceptor1,proposer2)']
num_forall :   0
num_exists :   0
num_literals : 0
quantified form : None
qcost : 0


=== Prime Orbit 45 =====================
size : 36
num_suborbits: 1
717 (*) : --0---0--00----00--0-1-----
717     : ['promise(acceptor2,proposer0)', '~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~promise(acceptor0,proposer0)', '~promise(acceptor0,proposer1)', '~promise(acceptor1,proposer1)']
718     : -0----0--00----0-0--01-----
718     : ['promise(acceptor2,proposer0)', '~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~promise(acceptor0,proposer0)', '~promise(acceptor0,proposer2)', '~promise(acceptor1,proposer2)']
719     : --0----0-00----00-0---1----
719     : ['promise(acceptor2,proposer1)', '~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~promise(acceptor0,proposer0)', '~promise(acceptor0,proposer1)', '~promise(acceptor1,proposer0)']
720     : 0------0-00-----00--0-1----
720     : ['promise(acceptor2,proposer1)', '~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~promise(acceptor0,proposer1)', '~promise(acceptor0,proposer2)', '~promise(acceptor1,proposer2)']
721     : -0------000----0-00----1---
721     : ['promise(acceptor2,proposer2)', '~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~promise(acceptor0,proposer0)', '~promise(acceptor0,proposer2)', '~promise(acceptor1,proposer0)']
722     : 0-------000-----00-0---1---
722     : ['promise(acceptor2,proposer2)', '~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~promise(acceptor0,proposer1)', '~promise(acceptor0,proposer2)', '~promise(acceptor1,proposer1)']
723     : -----00--0-0---00-1---0----
723     : ['promise(acceptor1,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor2)', '~promise(acceptor0,proposer0)', '~promise(acceptor0,proposer1)', '~promise(acceptor2,proposer1)']
724     : ----0-0--0-0---0-01----0---
724     : ['promise(acceptor1,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor2)', '~promise(acceptor0,proposer0)', '~promise(acceptor0,proposer2)', '~promise(acceptor2,proposer2)']
725     : -----0-0-0-0---00--1-0-----
725     : ['promise(acceptor1,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor2)', '~promise(acceptor0,proposer0)', '~promise(acceptor0,proposer1)', '~promise(acceptor2,proposer0)']
726     : ---0---0-0-0----00-1---0---
726     : ['promise(acceptor1,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor2)', '~promise(acceptor0,proposer1)', '~promise(acceptor0,proposer2)', '~promise(acceptor2,proposer2)']
727     : ----0---00-0---0-0--10-----
727     : ['promise(acceptor1,proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor2)', '~promise(acceptor0,proposer0)', '~promise(acceptor0,proposer2)', '~promise(acceptor2,proposer0)']
728     : ---0----00-0----00--1-0----
728     : ['promise(acceptor1,proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor2)', '~promise(acceptor0,proposer1)', '~promise(acceptor0,proposer2)', '~promise(acceptor2,proposer1)']
729     : --00-----00-----0-00-1-----
729     : ['promise(acceptor2,proposer0)', '~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~promise(acceptor0,proposer1)', '~promise(acceptor1,proposer0)', '~promise(acceptor1,proposer1)']
730     : -0-0-----00------00-01-----
730     : ['promise(acceptor2,proposer0)', '~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~promise(acceptor0,proposer2)', '~promise(acceptor1,proposer0)', '~promise(acceptor1,proposer2)']
731     : --0-0----00----0--00--1----
731     : ['promise(acceptor2,proposer1)', '~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~promise(acceptor0,proposer0)', '~promise(acceptor1,proposer0)', '~promise(acceptor1,proposer1)']
732     : 0---0----00------0-00-1----
732     : ['promise(acceptor2,proposer1)', '~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~promise(acceptor0,proposer2)', '~promise(acceptor1,proposer1)', '~promise(acceptor1,proposer2)']
733     : -0---0---00----0--0-0--1---
733     : ['promise(acceptor2,proposer2)', '~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~promise(acceptor0,proposer0)', '~promise(acceptor1,proposer0)', '~promise(acceptor1,proposer2)']
734     : 0----0---00-----0--00--1---
734     : ['promise(acceptor2,proposer2)', '~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~promise(acceptor0,proposer1)', '~promise(acceptor1,proposer1)', '~promise(acceptor1,proposer2)']
735     : ---0----0-00---1--00--0----
735     : ['promise(acceptor0,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor1,proposer0)', '~promise(acceptor1,proposer1)', '~promise(acceptor2,proposer1)']
736     : ---0---0--00---1--0-0--0---
736     : ['promise(acceptor0,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor1,proposer0)', '~promise(acceptor1,proposer2)', '~promise(acceptor2,proposer2)']
737     : ----0---0-00----1-00-0-----
737     : ['promise(acceptor0,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor1,proposer0)', '~promise(acceptor1,proposer1)', '~promise(acceptor2,proposer0)']
738     : ----0-0---00----1--00--0---
738     : ['promise(acceptor0,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor1,proposer1)', '~promise(acceptor1,proposer2)', '~promise(acceptor2,proposer2)']
739     : -----0-0--00-----10-00-----
739     : ['promise(acceptor0,proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor1,proposer0)', '~promise(acceptor1,proposer2)', '~promise(acceptor2,proposer0)']
740     : -----00---00-----1-00-0----
740     : ['promise(acceptor0,proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor1,proposer1)', '~promise(acceptor1,proposer2)', '~promise(acceptor2,proposer1)']
741     : 0----0---0-0----0-1--00----
741     : ['promise(acceptor1,proposer0)', '~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor2)', '~promise(acceptor0,proposer1)', '~promise(acceptor2,proposer0)', '~promise(acceptor2,proposer1)']
742     : 0---0----0-0-----01--0-0---
742     : ['promise(acceptor1,proposer0)', '~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor2)', '~promise(acceptor0,proposer2)', '~promise(acceptor2,proposer0)', '~promise(acceptor2,proposer2)']
743     : -0---0---0-0---0---1-00----
743     : ['promise(acceptor1,proposer1)', '~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor2)', '~promise(acceptor0,proposer0)', '~promise(acceptor2,proposer0)', '~promise(acceptor2,proposer1)']
744     : -0-0-----0-0-----0-1--00---
744     : ['promise(acceptor1,proposer1)', '~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor2)', '~promise(acceptor0,proposer2)', '~promise(acceptor2,proposer1)', '~promise(acceptor2,proposer2)']
745     : --0-0----0-0---0----10-0---
745     : ['promise(acceptor1,proposer2)', '~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor2)', '~promise(acceptor0,proposer0)', '~promise(acceptor2,proposer0)', '~promise(acceptor2,proposer2)']
746     : --00-----0-0----0---1-00---
746     : ['promise(acceptor1,proposer2)', '~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor2)', '~promise(acceptor0,proposer1)', '~promise(acceptor2,proposer1)', '~promise(acceptor2,proposer2)']
747     : 0-------0-00---1---0-00----
747     : ['promise(acceptor0,proposer0)', '~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor1,proposer1)', '~promise(acceptor2,proposer0)', '~promise(acceptor2,proposer1)']
748     : 0------0--00---1----00-0---
748     : ['promise(acceptor0,proposer0)', '~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor1,proposer2)', '~promise(acceptor2,proposer0)', '~promise(acceptor2,proposer2)']
749     : -0------0-00----1-0--00----
749     : ['promise(acceptor0,proposer1)', '~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor1,proposer0)', '~promise(acceptor2,proposer0)', '~promise(acceptor2,proposer1)']
750     : -0----0---00----1---0-00---
750     : ['promise(acceptor0,proposer1)', '~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor1,proposer2)', '~promise(acceptor2,proposer1)', '~promise(acceptor2,proposer2)']
751     : --0----0--00-----10--0-0---
751     : ['promise(acceptor0,proposer2)', '~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor1,proposer0)', '~promise(acceptor2,proposer0)', '~promise(acceptor2,proposer2)']
752     : --0---0---00-----1-0--00---
752     : ['promise(acceptor0,proposer2)', '~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor1,proposer1)', '~promise(acceptor2,proposer1)', '~promise(acceptor2,proposer2)']
num_forall :   0
num_exists :   0
num_literals : 0
quantified form : None
qcost : 0


=== Prime Orbit 46 =====================
size : 18
num_suborbits: 1
753 (*) : --00--0--00-----0--0-1-----
753     : ['promise(acceptor2,proposer0)', '~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~promise(acceptor0,proposer1)', '~promise(acceptor1,proposer1)']
754     : -0-0--0--00------0--01-----
754     : ['promise(acceptor2,proposer0)', '~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~promise(acceptor0,proposer2)', '~promise(acceptor1,proposer2)']
755     : --0-0--0-00----0--0---1----
755     : ['promise(acceptor2,proposer1)', '~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~promise(acceptor0,proposer0)', '~promise(acceptor1,proposer0)']
756     : 0---0--0-00------0--0-1----
756     : ['promise(acceptor2,proposer1)', '~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~promise(acceptor0,proposer2)', '~promise(acceptor1,proposer2)']
757     : -0---0--000----0--0----1---
757     : ['promise(acceptor2,proposer2)', '~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~promise(acceptor0,proposer0)', '~promise(acceptor1,proposer0)']
758     : 0----0--000-----0--0---1---
758     : ['promise(acceptor2,proposer2)', '~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~promise(acceptor0,proposer1)', '~promise(acceptor1,proposer1)']
759     : 0----00--0-0----0-1---0----
759     : ['promise(acceptor1,proposer0)', '~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor2)', '~promise(acceptor0,proposer1)', '~promise(acceptor2,proposer1)']
760     : 0---0-0--0-0-----01----0---
760     : ['promise(acceptor1,proposer0)', '~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor2)', '~promise(acceptor0,proposer2)', '~promise(acceptor2,proposer2)']
761     : -0---0-0-0-0---0---1-0-----
761     : ['promise(acceptor1,proposer1)', '~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor2)', '~promise(acceptor0,proposer0)', '~promise(acceptor2,proposer0)']
762     : -0-0---0-0-0-----0-1---0---
762     : ['promise(acceptor1,proposer1)', '~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor2)', '~promise(acceptor0,proposer2)', '~promise(acceptor2,proposer2)']
763     : --0-0---00-0---0----10-----
763     : ['promise(acceptor1,proposer2)', '~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor2)', '~promise(acceptor0,proposer0)', '~promise(acceptor2,proposer0)']
764     : --00----00-0----0---1-0----
764     : ['promise(acceptor1,proposer2)', '~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor2)', '~promise(acceptor0,proposer1)', '~promise(acceptor2,proposer1)']
765     : 0--0----0-00---1---0--0----
765     : ['promise(acceptor0,proposer0)', '~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor1,proposer1)', '~promise(acceptor2,proposer1)']
766     : 0--0---0--00---1----0--0---
766     : ['promise(acceptor0,proposer0)', '~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor1,proposer2)', '~promise(acceptor2,proposer2)']
767     : -0--0---0-00----1-0--0-----
767     : ['promise(acceptor0,proposer1)', '~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor1,proposer0)', '~promise(acceptor2,proposer0)']
768     : -0--0-0---00----1---0--0---
768     : ['promise(acceptor0,proposer1)', '~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor1,proposer2)', '~promise(acceptor2,proposer2)']
769     : --0--0-0--00-----10--0-----
769     : ['promise(acceptor0,proposer2)', '~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor1,proposer0)', '~promise(acceptor2,proposer0)']
770     : --0--00---00-----1-0--0----
770     : ['promise(acceptor0,proposer2)', '~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor1,proposer1)', '~promise(acceptor2,proposer1)']
num_forall :   0
num_exists :   0
num_literals : 0
quantified form : None
qcost : 0


=== Prime Orbit 47 =====================
size : 18
num_suborbits: 1
771 (*) : -0--0-0--000---0----------0
771     : ['~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor0,proposer0)', '~start(proposer2)']
772     : --0--00--000---0---------0-
772     : ['~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor0,proposer0)', '~start(proposer1)']
773     : 0--0---0-000----0---------0
773     : ['~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor0,proposer1)', '~start(proposer2)']
774     : --0--0-0-000----0-------0--
774     : ['~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor0,proposer1)', '~start(proposer0)']
775     : 0--0----0000-----0-------0-
775     : ['~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor0,proposer2)', '~start(proposer1)']
776     : -0--0---0000-----0------0--
776     : ['~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor0,proposer2)', '~start(proposer0)']
777     : -0-0---0-000------0-------0
777     : ['~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor1,proposer0)', '~start(proposer2)']
778     : --00----0000------0------0-
778     : ['~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor1,proposer0)', '~start(proposer1)']
779     : 0---0-0--000-------0------0
779     : ['~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor1,proposer1)', '~start(proposer2)']
780     : --0-0---0000-------0----0--
780     : ['~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor1,proposer1)', '~start(proposer0)']
781     : 0----00--000--------0----0-
781     : ['~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor1,proposer2)', '~start(proposer1)']
782     : -0---0-0-000--------0---0--
782     : ['~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor1,proposer2)', '~start(proposer0)']
783     : 0---0--0-000---------0----0
783     : ['~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor2,proposer0)', '~start(proposer2)']
784     : 0----0--0000---------0---0-
784     : ['~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor2,proposer0)', '~start(proposer1)']
785     : -0-0--0--000----------0---0
785     : ['~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor2,proposer1)', '~start(proposer2)']
786     : -0---0--0000----------0-0--
786     : ['~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor2,proposer1)', '~start(proposer0)']
787     : --00--0--000-----------0-0-
787     : ['~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor2,proposer2)', '~start(proposer1)']
788     : --0-0--0-000-----------00--
788     : ['~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor2,proposer2)', '~start(proposer0)']
num_forall :   0
num_exists :   0
num_literals : 0
quantified form : None
qcost : 0


=== Prime Orbit 48 =====================
size : 18
num_suborbits: 1
789 (*) : ----0-0--000---0---0------0
789     : ['~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor0,proposer0)', '~promise(acceptor1,proposer1)', '~start(proposer2)']
790     : -----00--000---0----0----0-
790     : ['~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor0,proposer0)', '~promise(acceptor1,proposer2)', '~start(proposer1)']
791     : ---0---0-000----0-0-------0
791     : ['~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor0,proposer1)', '~promise(acceptor1,proposer0)', '~start(proposer2)']
792     : -----0-0-000----0---0---0--
792     : ['~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor0,proposer1)', '~promise(acceptor1,proposer2)', '~start(proposer0)']
793     : ---0----0000-----00------0-
793     : ['~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor0,proposer2)', '~promise(acceptor1,proposer0)', '~start(proposer1)']
794     : ----0---0000-----0-0----0--
794     : ['~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor0,proposer2)', '~promise(acceptor1,proposer1)', '~start(proposer0)']
795     : -0----0--000---0------0---0
795     : ['~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor0,proposer0)', '~promise(acceptor2,proposer1)', '~start(proposer2)']
796     : --0---0--000---0-------0-0-
796     : ['~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor0,proposer0)', '~promise(acceptor2,proposer2)', '~start(proposer1)']
797     : 0------0-000----0----0----0
797     : ['~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor0,proposer1)', '~promise(acceptor2,proposer0)', '~start(proposer2)']
798     : --0----0-000----0------00--
798     : ['~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor0,proposer1)', '~promise(acceptor2,proposer2)', '~start(proposer0)']
799     : 0-------0000-----0---0---0-
799     : ['~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor0,proposer2)', '~promise(acceptor2,proposer0)', '~start(proposer1)']
800     : -0------0000-----0----0-0--
800     : ['~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor0,proposer2)', '~promise(acceptor2,proposer1)', '~start(proposer0)']
801     : -0-0-----000------0---0---0
801     : ['~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor1,proposer0)', '~promise(acceptor2,proposer1)', '~start(proposer2)']
802     : --00-----000------0----0-0-
802     : ['~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor1,proposer0)', '~promise(acceptor2,proposer2)', '~start(proposer1)']
803     : 0---0----000-------0-0----0
803     : ['~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor1,proposer1)', '~promise(acceptor2,proposer0)', '~start(proposer2)']
804     : --0-0----000-------0---00--
804     : ['~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor1,proposer1)', '~promise(acceptor2,proposer2)', '~start(proposer0)']
805     : 0----0---000--------00---0-
805     : ['~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor1,proposer2)', '~promise(acceptor2,proposer0)', '~start(proposer1)']
806     : -0---0---000--------0-0-0--
806     : ['~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor1,proposer2)', '~promise(acceptor2,proposer1)', '~start(proposer0)']
num_forall :   0
num_exists :   0
num_literals : 0
quantified form : None
qcost : 0


=== Prime Orbit 49 =====================
size : 3
num_suborbits: 1
807 (*) : -00-00-00000------------0--
807     : ['~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~start(proposer0)']
808     : 0-00-00-0000-------------0-
808     : ['~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~start(proposer1)']
809     : 00-00-00-000--------------0
809     : ['~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~start(proposer2)']
num_forall :   0
num_exists :   0
num_literals : 0
quantified form : None
qcost : 0


=== Prime Orbit 50 =====================
size : 18
num_suborbits: 1
810 (*) : --0---0--000---00--0--00---
810     : ['~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor0,proposer0)', '~promise(acceptor0,proposer1)', '~promise(acceptor1,proposer1)', '~promise(acceptor2,proposer1)', '~promise(acceptor2,proposer2)']
811     : -0----0--000---0-0--0-00---
811     : ['~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor0,proposer0)', '~promise(acceptor0,proposer2)', '~promise(acceptor1,proposer2)', '~promise(acceptor2,proposer1)', '~promise(acceptor2,proposer2)']
812     : --0----0-000---00-0--0-0---
812     : ['~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor0,proposer0)', '~promise(acceptor0,proposer1)', '~promise(acceptor1,proposer0)', '~promise(acceptor2,proposer0)', '~promise(acceptor2,proposer2)']
813     : 0------0-000----00--00-0---
813     : ['~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor0,proposer1)', '~promise(acceptor0,proposer2)', '~promise(acceptor1,proposer2)', '~promise(acceptor2,proposer0)', '~promise(acceptor2,proposer2)']
814     : -0------0000---0-00--00----
814     : ['~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor0,proposer0)', '~promise(acceptor0,proposer2)', '~promise(acceptor1,proposer0)', '~promise(acceptor2,proposer0)', '~promise(acceptor2,proposer1)']
815     : 0-------0000----00-0-00----
815     : ['~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor0,proposer1)', '~promise(acceptor0,proposer2)', '~promise(acceptor1,proposer1)', '~promise(acceptor2,proposer0)', '~promise(acceptor2,proposer1)']
816     : -----00--000---00--00-0----
816     : ['~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor0,proposer0)', '~promise(acceptor0,proposer1)', '~promise(acceptor1,proposer1)', '~promise(acceptor1,proposer2)', '~promise(acceptor2,proposer1)']
817     : ----0-0--000---0-0-00--0---
817     : ['~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor0,proposer0)', '~promise(acceptor0,proposer2)', '~promise(acceptor1,proposer1)', '~promise(acceptor1,proposer2)', '~promise(acceptor2,proposer2)']
818     : -----0-0-000---00-0-00-----
818     : ['~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor0,proposer0)', '~promise(acceptor0,proposer1)', '~promise(acceptor1,proposer0)', '~promise(acceptor1,proposer2)', '~promise(acceptor2,proposer0)']
819     : ---0---0-000----000-0--0---
819     : ['~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor0,proposer1)', '~promise(acceptor0,proposer2)', '~promise(acceptor1,proposer0)', '~promise(acceptor1,proposer2)', '~promise(acceptor2,proposer2)']
820     : ----0---0000---0-000-0-----
820     : ['~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor0,proposer0)', '~promise(acceptor0,proposer2)', '~promise(acceptor1,proposer0)', '~promise(acceptor1,proposer1)', '~promise(acceptor2,proposer0)']
821     : ---0----0000----0000--0----
821     : ['~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor0,proposer1)', '~promise(acceptor0,proposer2)', '~promise(acceptor1,proposer0)', '~promise(acceptor1,proposer1)', '~promise(acceptor2,proposer1)']
822     : --00-----000----0-00--00---
822     : ['~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor0,proposer1)', '~promise(acceptor1,proposer0)', '~promise(acceptor1,proposer1)', '~promise(acceptor2,proposer1)', '~promise(acceptor2,proposer2)']
823     : -0-0-----000-----00-0-00---
823     : ['~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor0,proposer2)', '~promise(acceptor1,proposer0)', '~promise(acceptor1,proposer2)', '~promise(acceptor2,proposer1)', '~promise(acceptor2,proposer2)']
824     : --0-0----000---0--00-0-0---
824     : ['~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor0,proposer0)', '~promise(acceptor1,proposer0)', '~promise(acceptor1,proposer1)', '~promise(acceptor2,proposer0)', '~promise(acceptor2,proposer2)']
825     : 0---0----000-----0-000-0---
825     : ['~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor0,proposer2)', '~promise(acceptor1,proposer1)', '~promise(acceptor1,proposer2)', '~promise(acceptor2,proposer0)', '~promise(acceptor2,proposer2)']
826     : -0---0---000---0--0-000----
826     : ['~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor0,proposer0)', '~promise(acceptor1,proposer0)', '~promise(acceptor1,proposer2)', '~promise(acceptor2,proposer0)', '~promise(acceptor2,proposer1)']
827     : 0----0---000----0--0000----
827     : ['~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor0,proposer1)', '~promise(acceptor1,proposer1)', '~promise(acceptor1,proposer2)', '~promise(acceptor2,proposer0)', '~promise(acceptor2,proposer1)']
num_forall :   0
num_exists :   0
num_literals : 0
quantified form : None
qcost : 0


=== Prime Orbit 51 =====================
size : 18
num_suborbits: 1
828 (*) : --0--00--000---00--0--0----
828     : ['~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor0,proposer0)', '~promise(acceptor0,proposer1)', '~promise(acceptor1,proposer1)', '~promise(acceptor2,proposer1)']
829     : -0--0-0--000---0-0--0--0---
829     : ['~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor0,proposer0)', '~promise(acceptor0,proposer2)', '~promise(acceptor1,proposer2)', '~promise(acceptor2,proposer2)']
830     : --0--0-0-000---00-0--0-----
830     : ['~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor0,proposer0)', '~promise(acceptor0,proposer1)', '~promise(acceptor1,proposer0)', '~promise(acceptor2,proposer0)']
831     : 0--0---0-000----00--0--0---
831     : ['~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor0,proposer1)', '~promise(acceptor0,proposer2)', '~promise(acceptor1,proposer2)', '~promise(acceptor2,proposer2)']
832     : -0--0---0000---0-00--0-----
832     : ['~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor0,proposer0)', '~promise(acceptor0,proposer2)', '~promise(acceptor1,proposer0)', '~promise(acceptor2,proposer0)']
833     : 0--0----0000----00-0--0----
833     : ['~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor0,proposer1)', '~promise(acceptor0,proposer2)', '~promise(acceptor1,proposer1)', '~promise(acceptor2,proposer1)']
834     : --00----0000----0-00--0----
834     : ['~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor0,proposer1)', '~promise(acceptor1,proposer0)', '~promise(acceptor1,proposer1)', '~promise(acceptor2,proposer1)']
835     : -0-0---0-000-----00-0--0---
835     : ['~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor0,proposer2)', '~promise(acceptor1,proposer0)', '~promise(acceptor1,proposer2)', '~promise(acceptor2,proposer2)']
836     : --0-0---0000---0--00-0-----
836     : ['~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor0,proposer0)', '~promise(acceptor1,proposer0)', '~promise(acceptor1,proposer1)', '~promise(acceptor2,proposer0)']
837     : 0---0-0--000-----0-00--0---
837     : ['~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor0,proposer2)', '~promise(acceptor1,proposer1)', '~promise(acceptor1,proposer2)', '~promise(acceptor2,proposer2)']
838     : -0---0-0-000---0--0-00-----
838     : ['~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor0,proposer0)', '~promise(acceptor1,proposer0)', '~promise(acceptor1,proposer2)', '~promise(acceptor2,proposer0)']
839     : 0----00--000----0--00-0----
839     : ['~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor0,proposer1)', '~promise(acceptor1,proposer1)', '~promise(acceptor1,proposer2)', '~promise(acceptor2,proposer1)']
840     : 0----0--0000----0--0-00----
840     : ['~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor0,proposer1)', '~promise(acceptor1,proposer1)', '~promise(acceptor2,proposer0)', '~promise(acceptor2,proposer1)']
841     : 0---0--0-000-----0--00-0---
841     : ['~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor0,proposer2)', '~promise(acceptor1,proposer2)', '~promise(acceptor2,proposer0)', '~promise(acceptor2,proposer2)']
842     : -0---0--0000---0--0--00----
842     : ['~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor0,proposer0)', '~promise(acceptor1,proposer0)', '~promise(acceptor2,proposer0)', '~promise(acceptor2,proposer1)']
843     : -0-0--0--000-----0--0-00---
843     : ['~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor0,proposer2)', '~promise(acceptor1,proposer2)', '~promise(acceptor2,proposer1)', '~promise(acceptor2,proposer2)']
844     : --0-0--0-000---0--0--0-0---
844     : ['~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor0,proposer0)', '~promise(acceptor1,proposer0)', '~promise(acceptor2,proposer0)', '~promise(acceptor2,proposer2)']
845     : --00--0--000----0--0--00---
845     : ['~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor0,proposer1)', '~promise(acceptor1,proposer1)', '~promise(acceptor2,proposer1)', '~promise(acceptor2,proposer2)']
num_forall :   0
num_exists :   0
num_literals : 0
quantified form : None
qcost : 0


=== Prime Orbit 52 =====================
size : 3
num_suborbits: 1
846 (*) : 00-00-00-000-----0--0--0---
846     : ['~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor0,proposer2)', '~promise(acceptor1,proposer2)', '~promise(acceptor2,proposer2)']
847     : 0-00-00-0000----0--0--0----
847     : ['~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor0,proposer1)', '~promise(acceptor1,proposer1)', '~promise(acceptor2,proposer1)']
848     : -00-00-00000---0--0--0-----
848     : ['~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor0,proposer0)', '~promise(acceptor1,proposer0)', '~promise(acceptor2,proposer0)']
num_forall :   0
num_exists :   0
num_literals : 0
quantified form : None
qcost : 0



[PRIME NOTE]: number of orbits after merging: 53

[PRIME NOTE]: number of orbits before merging: 55

[PRIME NOTE]: number of primes: 849

[QRM NOTE]: Time elapsed since start: 7.012 seconds

[QRM NOTE]: Time elapsed since last: 0.545 seconds

[QRM NOTE]: Peak memory: 1480815 bytes


=========================================================================================================

	[RED]: PRIME REDUCTION on [ivybench/sym_quorum/ivy/simple-election: acceptor=3,proposer=3]

=========================================================================================================

definition primes: {34, 3, 4, 36, 7, 11, 12, 13, 44, 45, 46, 50, 51, 52, 27, 31}


New level: 0
 pending : [0, 1, 2, 5, 6, 8, 9, 10, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 28, 29, 30, 32, 33, 35, 37, 38, 39, 40, 41, 42, 43, 47, 48, 49]
 solution : []


Before reduction : 
 pending  : [0, 1, 2, 5, 6, 8, 9, 10, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 28, 29, 30, 32, 33, 35, 37, 38, 39, 40, 41, 42, 43, 47, 48, 49]
 solution : []

Essensial at level 0 : {6}

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, 1048576), (1, 17179869184), (2, 17179869184), (3, -1), (4, -1), (5, 0), (6, -1), (7, -1), (8, 134217728), (9, 1048576), (10, 0), (11, -1), (12, -1), (13, -1), (14, 67108864), (15, 33554432), (16, 1572864), (17, 2147483648), (18, 1073741824), (19, 524288), (20, 8388608), (21, 16777216), (22, 262144), (23, 134217728), (24, 1073741824), (25, 4194304), (26, 4294967296), (27, -1), (28, 4294967296), (29, 16384), (30, 32768), (31, -1), (32, 1048576), (33, 4194304), (34, -1), (35, 2147483648), (36, -1), (37, 4194304), (38, 134217728), (39, 16384), (40, 268435456), (41, 1073741824), (42, 524288), (43, 524288), (44, -1), (45, -1), (46, -1), (47, 67108864), (48, 16777216), (49, 67108864), (50, -1), (51, -1), (52, -1)]

Covered at level 0 : {10, 5}

After reduction : 
 pending  : [0, 1, 2, 8, 9, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 28, 29, 30, 32, 33, 35, 37, 38, 39, 40, 41, 42, 43, 47, 48, 49]
 solution : [6]


Before reduction : 
 pending  : [0, 1, 2, 8, 9, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 28, 29, 30, 32, 33, 35, 37, 38, 39, 40, 41, 42, 43, 47, 48, 49]
 solution : [6]

Essensial at level 0 : set()

Before removed
 coverage : [(0, 1048576), (1, 17179869184), (2, 17179869184), (3, -1), (4, -1), (5, 0), (6, -1), (7, -1), (8, 134217728), (9, 1048576), (10, 0), (11, -1), (12, -1), (13, -1), (14, 67108864), (15, 33554432), (16, 1572864), (17, 2147483648), (18, 1073741824), (19, 524288), (20, 8388608), (21, 16777216), (22, 262144), (23, 134217728), (24, 1073741824), (25, 4194304), (26, 4294967296), (27, -1), (28, 4294967296), (29, 16384), (30, 32768), (31, -1), (32, 1048576), (33, 4194304), (34, -1), (35, 2147483648), (36, -1), (37, 4194304), (38, 134217728), (39, 16384), (40, 268435456), (41, 1073741824), (42, 524288), (43, 524288), (44, -1), (45, -1), (46, -1), (47, 67108864), (48, 16777216), (49, 67108864), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, 1048576), (1, 17179869184), (2, 17179869184), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, 134217728), (9, 1048576), (10, -1), (11, -1), (12, -1), (13, -1), (14, 67108864), (15, 33554432), (16, 1572864), (17, 2147483648), (18, 1073741824), (19, 524288), (20, 8388608), (21, 16777216), (22, 262144), (23, 134217728), (24, 1073741824), (25, 4194304), (26, 4294967296), (27, -1), (28, 4294967296), (29, 16384), (30, 32768), (31, -1), (32, 1048576), (33, 4194304), (34, -1), (35, 2147483648), (36, -1), (37, 4194304), (38, 134217728), (39, 16384), (40, 268435456), (41, 1073741824), (42, 524288), (43, 524288), (44, -1), (45, -1), (46, -1), (47, 67108864), (48, 16777216), (49, 67108864), (50, -1), (51, -1), (52, -1)]

Covered at level 0 : set()

After reduction : 
 pending  : [0, 1, 2, 8, 9, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 28, 29, 30, 32, 33, 35, 37, 38, 39, 40, 41, 42, 43, 47, 48, 49]
 solution : [6]

[QRM NOTE]: Time elapsed since start: 7.138 seconds

[QRM NOTE]: Time elapsed since last: 0.125 seconds

[QRM NOTE]: Peak memory: 1311856 bytes


=============================================================================================================

	[QI]: Quantifier Inference on [ivybench/sym_quorum/ivy/simple-election: acceptor=3,proposer=3]

=============================================================================================================


---------- quantifier_inference ----------


=== Prime Orbit 6 =====================
size : 9
num_suborbits: 1
87 (*) : ---------------------1-1---
87     : ['promise(acceptor2,proposer0)', 'promise(acceptor2,proposer2)']
88     : ---------------------11----
88     : ['promise(acceptor2,proposer0)', 'promise(acceptor2,proposer1)']
89     : ----------------------11---
89     : ['promise(acceptor2,proposer1)', 'promise(acceptor2,proposer2)']
90     : ------------------1-1------
90     : ['promise(acceptor1,proposer0)', 'promise(acceptor1,proposer2)']
91     : ------------------11-------
91     : ['promise(acceptor1,proposer0)', 'promise(acceptor1,proposer1)']
92     : -------------------11------
92     : ['promise(acceptor1,proposer1)', 'promise(acceptor1,proposer2)']
93     : ---------------1-1---------
93     : ['promise(acceptor0,proposer0)', 'promise(acceptor0,proposer2)']
94     : ---------------11----------
94     : ['promise(acceptor0,proposer0)', 'promise(acceptor0,proposer1)']
95     : ----------------11---------
95     : ['promise(acceptor0,proposer1)', 'promise(acceptor0,proposer2)']
num_forall :   0
num_exists :   0
num_literals : 0
quantified form : None
qcost : 0




---------- QPrime ----------


---------- ConstArgBinding ----------

terms: ['promise(acceptor2,proposer0)', 'promise(acceptor2,proposer2)']

sign_func_name2args: {'0$promise': [(Const('acceptor2', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Const('proposer0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))), (Const('acceptor2', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Const('proposer2', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))))]}

const2sigs: {Const('acceptor2', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))): [acceptor$0$promise$0$0, acceptor$0$promise$0$1], Const('proposer0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))): [proposer$0$promise$1$0], Const('proposer2', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))): [proposer$0$promise$1$1]}

sig2const: {'acceptor$0$promise$0$0': Const('acceptor2', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), 'proposer$0$promise$1$0': Const('proposer0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))), 'acceptor$0$promise$0$1': Const('acceptor2', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), 'proposer$0$promise$1$1': Const('proposer2', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))}


---------- ArgPartition ----------

sort2class_sigs: {EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')): [acceptor$0$promise$0$0; acceptor$0$promise$0$1], EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')): [proposer$0$promise$1$0, proposer$0$promise$1$1]}

sort2part_sig: {EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')): acceptor$0$promise$0$0; acceptor$0$promise$0$1, EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')): proposer$0$promise$1$0 | proposer$0$promise$1$1}

part_sig: ('acceptor$0$promise$0$0; acceptor$0$promise$0$1', 'proposer$0$promise$1$0 | proposer$0$promise$1$1')


---------- SigGenerator ----------

terms:  ['promise(acceptor2,proposer0)', 'promise(acceptor2,proposer2)']

func_name2symbol:  {'promise': Const('promise', FunctionSort(EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')), EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')), BooleanSort()))}

func_name2args_sort:  {'promise': (EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')), EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))}

sign_func_name2count:  {'0$promise': 2}


---------- ProductArgPartition ----------

sort2class_sigs: {EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')): [acceptor$0$promise$0$0; acceptor$0$promise$0$1], EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')): [proposer$0$promise$1$0, proposer$0$promise$1$1]}

sort2part_sig: {EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')): acceptor$0$promise$0$0; acceptor$0$promise$0$1, EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')): proposer$0$promise$1$0 | proposer$0$promise$1$1}

	sort: acceptor

	identical_classes: {'acceptor$0$promise$0; acceptor$0$promise$0': [acceptor$0$promise$0$0; acceptor$0$promise$0$1]}

	identical_single_classes: {'acceptor$0$promise$0; acceptor$0$promise$0': acceptor$0$promise$0$0; acceptor$0$promise$0$1}

	identical_multi_classes: {}

	sort: proposer

	identical_classes: {'proposer$0$promise$1': [proposer$0$promise$1$0, proposer$0$promise$1$1]}

	identical_single_classes: {}

	identical_multi_classes: {'proposer$0$promise$1': [proposer$0$promise$1$0, proposer$0$promise$1$1]}


---------- QInference: _set_sort_to_quantifier_mode ----------

quantifier mode: acceptor: QuantifierMode.forall

quantifier mode: proposer: QuantifierMode.forall


---------- QInference: _set_constraint_mode ----------

constraint mode: ConstraintMode.no_merge


---------- QFormula: _set_qvars ----------

forall_qvars: {Var('PROPOSER1', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))), Var('PROPOSER0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))), Var('ACCEPTOR0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')))}

exists_qvars: set()


---------- QFormula: _set_signed_func_name_to_args ----------

signed_func_name2args: {'0$promise': [[Var('ACCEPTOR0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Var('PROPOSER0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))], [Var('ACCEPTOR0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Var('PROPOSER1', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))]]}


---------- QFormula: _set_qterms ----------

qterms: ['promise(ACCEPTOR0,PROPOSER0)', 'promise(ACCEPTOR0,PROPOSER1)']


---------- QFormula: get_qclause ----------

qclause: forall PROPOSER1,ACCEPTOR0,PROPOSER0. ~promise(ACCEPTOR0,PROPOSER0) | ~promise(ACCEPTOR0,PROPOSER1) | PROPOSER0 = PROPOSER1


=== Prime Orbit 0 =====================
size : 18
num_suborbits: 1
0 (*) : 1------------1-------------
0     : ['chosenAt(quorum__acceptor0_acceptor1,proposer0)', 'leader(proposer1)']
1     : 1-------------1------------
1     : ['chosenAt(quorum__acceptor0_acceptor1,proposer0)', 'leader(proposer2)']
2     : -1----------1--------------
2     : ['chosenAt(quorum__acceptor0_acceptor1,proposer1)', 'leader(proposer0)']
3     : -1------------1------------
3     : ['chosenAt(quorum__acceptor0_acceptor1,proposer1)', 'leader(proposer2)']
4     : --1---------1--------------
4     : ['chosenAt(quorum__acceptor0_acceptor1,proposer2)', 'leader(proposer0)']
5     : --1----------1-------------
5     : ['chosenAt(quorum__acceptor0_acceptor1,proposer2)', 'leader(proposer1)']
6     : ---1---------1-------------
6     : ['chosenAt(quorum__acceptor0_acceptor2,proposer0)', 'leader(proposer1)']
7     : ---1----------1------------
7     : ['chosenAt(quorum__acceptor0_acceptor2,proposer0)', 'leader(proposer2)']
8     : ----1-------1--------------
8     : ['chosenAt(quorum__acceptor0_acceptor2,proposer1)', 'leader(proposer0)']
9     : ----1---------1------------
9     : ['chosenAt(quorum__acceptor0_acceptor2,proposer1)', 'leader(proposer2)']
10     : -----1------1--------------
10     : ['chosenAt(quorum__acceptor0_acceptor2,proposer2)', 'leader(proposer0)']
11     : -----1-------1-------------
11     : ['chosenAt(quorum__acceptor0_acceptor2,proposer2)', 'leader(proposer1)']
12     : ------1------1-------------
12     : ['chosenAt(quorum__acceptor1_acceptor2,proposer0)', 'leader(proposer1)']
13     : ------1-------1------------
13     : ['chosenAt(quorum__acceptor1_acceptor2,proposer0)', 'leader(proposer2)']
14     : -------1----1--------------
14     : ['chosenAt(quorum__acceptor1_acceptor2,proposer1)', 'leader(proposer0)']
15     : -------1------1------------
15     : ['chosenAt(quorum__acceptor1_acceptor2,proposer1)', 'leader(proposer2)']
16     : --------1---1--------------
16     : ['chosenAt(quorum__acceptor1_acceptor2,proposer2)', 'leader(proposer0)']
17     : --------1----1-------------
17     : ['chosenAt(quorum__acceptor1_acceptor2,proposer2)', 'leader(proposer1)']
num_forall :   0
num_exists :   0
num_literals : 0
quantified form : None
qcost : 0




---------- QPrime ----------


---------- ConstArgBinding ----------

terms: ['chosenAt(quorum__acceptor0_acceptor1,proposer0)', 'leader(proposer1)']

sign_func_name2args: {'0$chosenAt': [(Const('quorum__acceptor0_acceptor1', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), Const('proposer0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))))], '0$leader': [(Const('proposer1', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))),)]}

const2sigs: {Const('quorum__acceptor0_acceptor1', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))): [quorum$0$chosenAt$0$0], Const('proposer0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))): [proposer$0$chosenAt$1$0], Const('proposer1', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))): [proposer$0$leader$0$0]}

sig2const: {'quorum$0$chosenAt$0$0': Const('quorum__acceptor0_acceptor1', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), 'proposer$0$chosenAt$1$0': Const('proposer0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))), 'proposer$0$leader$0$0': Const('proposer1', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))}


---------- ArgPartition ----------

sort2class_sigs: {EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')): [quorum$0$chosenAt$0$0], EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')): [proposer$0$chosenAt$1$0, proposer$0$leader$0$0]}

sort2part_sig: {EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')): quorum$0$chosenAt$0$0, EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')): proposer$0$chosenAt$1$0 | proposer$0$leader$0$0}

part_sig: ('proposer$0$chosenAt$1$0 | proposer$0$leader$0$0', 'quorum$0$chosenAt$0$0')


---------- SigGenerator ----------

terms:  ['chosenAt(quorum__acceptor0_acceptor1,proposer0)', 'leader(proposer1)']

func_name2symbol:  {'chosenAt': Const('chosenAt', FunctionSort(EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')), EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')), BooleanSort())), 'leader': Const('leader', FunctionSort(EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')), BooleanSort()))}

func_name2args_sort:  {'chosenAt': (EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')), EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))), 'leader': (EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')),)}

sign_func_name2count:  {'0$chosenAt': 1, '0$leader': 1}


---------- ProductArgPartition ----------

sort2class_sigs: {EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')): [quorum$0$chosenAt$0$0], EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')): [proposer$0$chosenAt$1$0, proposer$0$leader$0$0]}

sort2part_sig: {EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')): quorum$0$chosenAt$0$0, EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')): proposer$0$chosenAt$1$0 | proposer$0$leader$0$0}

	sort: quorum

	identical_classes: {'quorum$0$chosenAt$0': [quorum$0$chosenAt$0$0]}

	identical_single_classes: {'quorum$0$chosenAt$0': quorum$0$chosenAt$0$0}

	identical_multi_classes: {}

	sort: proposer

	identical_classes: {'proposer$0$chosenAt$1': [proposer$0$chosenAt$1$0], 'proposer$0$leader$0': [proposer$0$leader$0$0]}

	identical_single_classes: {'proposer$0$chosenAt$1': proposer$0$chosenAt$1$0, 'proposer$0$leader$0': proposer$0$leader$0$0}

	identical_multi_classes: {}


---------- QInference: _set_sort_to_quantifier_mode ----------

quantifier mode: quorum: QuantifierMode.forall

quantifier mode: proposer: QuantifierMode.forall


---------- QInference: _set_constraint_mode ----------

constraint mode: ConstraintMode.no_merge


---------- QFormula: _set_qvars ----------

forall_qvars: {Var('PROPOSER1', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))), Var('PROPOSER0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))), Var('QUORUM0', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')))}

exists_qvars: set()


---------- QFormula: _set_signed_func_name_to_args ----------

signed_func_name2args: {'0$chosenAt': [[Var('QUORUM0', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), Var('PROPOSER0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))]], '0$leader': [[Var('PROPOSER1', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))]]}


---------- QFormula: _set_qterms ----------

qterms: ['leader(PROPOSER1)', 'chosenAt(QUORUM0,PROPOSER0)']


---------- QFormula: get_qclause ----------

qclause: forall PROPOSER1,PROPOSER0,QUORUM0. ~leader(PROPOSER1) | ~chosenAt(QUORUM0,PROPOSER0) | PROPOSER0 = PROPOSER1


=== Prime Orbit 1 =====================
size : 3
num_suborbits: 1
18 (*) : ------------11-------------
18     : ['leader(proposer0)', 'leader(proposer1)']
19     : ------------1-1------------
19     : ['leader(proposer0)', 'leader(proposer2)']
20     : -------------11------------
20     : ['leader(proposer1)', 'leader(proposer2)']
num_forall :   0
num_exists :   0
num_literals : 0
quantified form : None
qcost : 0




---------- QPrime ----------


---------- ConstArgBinding ----------

terms: ['leader(proposer0)', 'leader(proposer1)']

sign_func_name2args: {'0$leader': [(Const('proposer0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))),), (Const('proposer1', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))),)]}

const2sigs: {Const('proposer0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))): [proposer$0$leader$0$0], Const('proposer1', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))): [proposer$0$leader$0$1]}

sig2const: {'proposer$0$leader$0$0': Const('proposer0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))), 'proposer$0$leader$0$1': Const('proposer1', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))}


---------- ArgPartition ----------

sort2class_sigs: {EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')): [proposer$0$leader$0$0, proposer$0$leader$0$1]}

sort2part_sig: {EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')): proposer$0$leader$0$0 | proposer$0$leader$0$1}

part_sig: ('proposer$0$leader$0$0 | proposer$0$leader$0$1',)


---------- SigGenerator ----------

terms:  ['leader(proposer0)', 'leader(proposer1)']

func_name2symbol:  {'leader': Const('leader', FunctionSort(EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')), BooleanSort()))}

func_name2args_sort:  {'leader': (EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')),)}

sign_func_name2count:  {'0$leader': 2}


---------- ProductArgPartition ----------

sort2class_sigs: {EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')): [proposer$0$leader$0$0, proposer$0$leader$0$1]}

sort2part_sig: {EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')): proposer$0$leader$0$0 | proposer$0$leader$0$1}

	sort: proposer

	identical_classes: {'proposer$0$leader$0': [proposer$0$leader$0$0, proposer$0$leader$0$1]}

	identical_single_classes: {}

	identical_multi_classes: {'proposer$0$leader$0': [proposer$0$leader$0$0, proposer$0$leader$0$1]}


---------- QInference: _set_sort_to_quantifier_mode ----------

quantifier mode: proposer: QuantifierMode.forall


---------- QInference: _set_constraint_mode ----------

constraint mode: ConstraintMode.no_merge


---------- QFormula: _set_qvars ----------

forall_qvars: {Var('PROPOSER1', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))), Var('PROPOSER0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))}

exists_qvars: set()


---------- QFormula: _set_signed_func_name_to_args ----------

signed_func_name2args: {'0$leader': [[Var('PROPOSER0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))], [Var('PROPOSER1', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))]]}


---------- QFormula: _set_qterms ----------

qterms: ['leader(PROPOSER1)', 'leader(PROPOSER0)']


---------- QFormula: get_qclause ----------

qclause: forall PROPOSER1,PROPOSER0. ~leader(PROPOSER1) | ~leader(PROPOSER0) | PROPOSER0 = PROPOSER1


=== Prime Orbit 2 =====================
size : 3
num_suborbits: 1
21 (*) : -------------1-----------0-
21     : ['leader(proposer1)', '~start(proposer1)']
22     : --------------1-----------0
22     : ['leader(proposer2)', '~start(proposer2)']
23     : ------------1-----------0--
23     : ['leader(proposer0)', '~start(proposer0)']
num_forall :   0
num_exists :   0
num_literals : 0
quantified form : None
qcost : 0




---------- QPrime ----------


---------- ConstArgBinding ----------

terms: ['leader(proposer1)', '~start(proposer1)']

sign_func_name2args: {'0$leader': [(Const('proposer1', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))),)], '1$start': [(Const('proposer1', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))),)]}

const2sigs: {Const('proposer1', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))): [proposer$0$leader$0$0, proposer$1$start$0$0]}

sig2const: {'proposer$0$leader$0$0': Const('proposer1', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))), 'proposer$1$start$0$0': Const('proposer1', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))}


---------- ArgPartition ----------

sort2class_sigs: {EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')): [proposer$0$leader$0$0; proposer$1$start$0$0]}

sort2part_sig: {EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')): proposer$0$leader$0$0; proposer$1$start$0$0}

part_sig: ('proposer$0$leader$0$0; proposer$1$start$0$0',)


---------- SigGenerator ----------

terms:  ['leader(proposer1)', '~start(proposer1)']

func_name2symbol:  {'leader': Const('leader', FunctionSort(EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')), BooleanSort())), 'start': Const('start', FunctionSort(EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')), BooleanSort()))}

func_name2args_sort:  {'leader': (EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')),), 'start': (EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')),)}

sign_func_name2count:  {'0$leader': 1, '1$start': 1}


---------- ProductArgPartition ----------

sort2class_sigs: {EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')): [proposer$0$leader$0$0; proposer$1$start$0$0]}

sort2part_sig: {EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')): proposer$0$leader$0$0; proposer$1$start$0$0}

	sort: proposer

	identical_classes: {'proposer$0$leader$0; proposer$1$start$0': [proposer$0$leader$0$0; proposer$1$start$0$0]}

	identical_single_classes: {'proposer$0$leader$0; proposer$1$start$0': proposer$0$leader$0$0; proposer$1$start$0$0}

	identical_multi_classes: {}


---------- QInference: _set_sort_to_quantifier_mode ----------

quantifier mode: proposer: QuantifierMode.forall


---------- QInference: _set_constraint_mode ----------

constraint mode: ConstraintMode.no_merge


---------- QFormula: _set_qvars ----------

forall_qvars: {Var('PROPOSER0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))}

exists_qvars: set()


---------- QFormula: _set_signed_func_name_to_args ----------

signed_func_name2args: {'0$leader': [[Var('PROPOSER0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))]], '1$start': [[Var('PROPOSER0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))]]}


---------- QFormula: _set_qterms ----------

qterms: ['~start(PROPOSER0)', 'leader(PROPOSER0)']


---------- QFormula: get_qclause ----------

qclause: forall PROPOSER0. start(PROPOSER0) | ~leader(PROPOSER0)


=== Prime Orbit 8 =====================
size : 9
num_suborbits: 1
114 (*) : -----------------------1--0
114     : ['promise(acceptor2,proposer2)', '~start(proposer2)']
115     : ----------------------1--0-
115     : ['promise(acceptor2,proposer1)', '~start(proposer1)']
116     : ---------------------1--0--
116     : ['promise(acceptor2,proposer0)', '~start(proposer0)']
117     : --------------------1-----0
117     : ['promise(acceptor1,proposer2)', '~start(proposer2)']
118     : -------------------1-----0-
118     : ['promise(acceptor1,proposer1)', '~start(proposer1)']
119     : ------------------1-----0--
119     : ['promise(acceptor1,proposer0)', '~start(proposer0)']
120     : -----------------1--------0
120     : ['promise(acceptor0,proposer2)', '~start(proposer2)']
121     : ----------------1--------0-
121     : ['promise(acceptor0,proposer1)', '~start(proposer1)']
122     : ---------------1--------0--
122     : ['promise(acceptor0,proposer0)', '~start(proposer0)']
num_forall :   0
num_exists :   0
num_literals : 0
quantified form : None
qcost : 0




---------- QPrime ----------


---------- ConstArgBinding ----------

terms: ['promise(acceptor2,proposer2)', '~start(proposer2)']

sign_func_name2args: {'0$promise': [(Const('acceptor2', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Const('proposer2', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))))], '1$start': [(Const('proposer2', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))),)]}

const2sigs: {Const('acceptor2', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))): [acceptor$0$promise$0$0], Const('proposer2', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))): [proposer$0$promise$1$0, proposer$1$start$0$0]}

sig2const: {'acceptor$0$promise$0$0': Const('acceptor2', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), 'proposer$0$promise$1$0': Const('proposer2', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))), 'proposer$1$start$0$0': Const('proposer2', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))}


---------- ArgPartition ----------

sort2class_sigs: {EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')): [acceptor$0$promise$0$0], EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')): [proposer$0$promise$1$0; proposer$1$start$0$0]}

sort2part_sig: {EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')): acceptor$0$promise$0$0, EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')): proposer$0$promise$1$0; proposer$1$start$0$0}

part_sig: ('acceptor$0$promise$0$0', 'proposer$0$promise$1$0; proposer$1$start$0$0')


---------- SigGenerator ----------

terms:  ['promise(acceptor2,proposer2)', '~start(proposer2)']

func_name2symbol:  {'promise': Const('promise', FunctionSort(EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')), EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')), BooleanSort())), 'start': Const('start', FunctionSort(EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')), BooleanSort()))}

func_name2args_sort:  {'promise': (EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')), EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))), 'start': (EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')),)}

sign_func_name2count:  {'0$promise': 1, '1$start': 1}


---------- ProductArgPartition ----------

sort2class_sigs: {EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')): [acceptor$0$promise$0$0], EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')): [proposer$0$promise$1$0; proposer$1$start$0$0]}

sort2part_sig: {EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')): acceptor$0$promise$0$0, EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')): proposer$0$promise$1$0; proposer$1$start$0$0}

	sort: acceptor

	identical_classes: {'acceptor$0$promise$0': [acceptor$0$promise$0$0]}

	identical_single_classes: {'acceptor$0$promise$0': acceptor$0$promise$0$0}

	identical_multi_classes: {}

	sort: proposer

	identical_classes: {'proposer$0$promise$1; proposer$1$start$0': [proposer$0$promise$1$0; proposer$1$start$0$0]}

	identical_single_classes: {'proposer$0$promise$1; proposer$1$start$0': proposer$0$promise$1$0; proposer$1$start$0$0}

	identical_multi_classes: {}


---------- QInference: _set_sort_to_quantifier_mode ----------

quantifier mode: acceptor: QuantifierMode.forall

quantifier mode: proposer: QuantifierMode.forall


---------- QInference: _set_constraint_mode ----------

constraint mode: ConstraintMode.no_merge


---------- QFormula: _set_qvars ----------

forall_qvars: {Var('PROPOSER0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))), Var('ACCEPTOR0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')))}

exists_qvars: set()


---------- QFormula: _set_signed_func_name_to_args ----------

signed_func_name2args: {'0$promise': [[Var('ACCEPTOR0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Var('PROPOSER0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))]], '1$start': [[Var('PROPOSER0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))]]}


---------- QFormula: _set_qterms ----------

qterms: ['promise(ACCEPTOR0,PROPOSER0)', '~start(PROPOSER0)']


---------- QFormula: get_qclause ----------

qclause: forall ACCEPTOR0,PROPOSER0. ~promise(ACCEPTOR0,PROPOSER0) | start(PROPOSER0)


=== Prime Orbit 9 =====================
size : 9
num_suborbits: 1
123 (*) : ------1-----------------0--
123     : ['chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~start(proposer0)']
124     : -------1-----------------0-
124     : ['chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~start(proposer1)']
125     : --------1-----------------0
125     : ['chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~start(proposer2)']
126     : ---1--------------------0--
126     : ['chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~start(proposer0)']
127     : ----1--------------------0-
127     : ['chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~start(proposer1)']
128     : -----1--------------------0
128     : ['chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~start(proposer2)']
129     : 1-----------------------0--
129     : ['chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~start(proposer0)']
130     : -1-----------------------0-
130     : ['chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~start(proposer1)']
131     : --1-----------------------0
131     : ['chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~start(proposer2)']
num_forall :   0
num_exists :   0
num_literals : 0
quantified form : None
qcost : 0




---------- QPrime ----------


---------- ConstArgBinding ----------

terms: ['chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~start(proposer0)']

sign_func_name2args: {'0$chosenAt': [(Const('quorum__acceptor1_acceptor2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), Const('proposer0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))))], '1$start': [(Const('proposer0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))),)]}

const2sigs: {Const('quorum__acceptor1_acceptor2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))): [quorum$0$chosenAt$0$0], Const('proposer0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))): [proposer$0$chosenAt$1$0, proposer$1$start$0$0]}

sig2const: {'quorum$0$chosenAt$0$0': Const('quorum__acceptor1_acceptor2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), 'proposer$0$chosenAt$1$0': Const('proposer0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))), 'proposer$1$start$0$0': Const('proposer0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))}


---------- ArgPartition ----------

sort2class_sigs: {EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')): [quorum$0$chosenAt$0$0], EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')): [proposer$0$chosenAt$1$0; proposer$1$start$0$0]}

sort2part_sig: {EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')): quorum$0$chosenAt$0$0, EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')): proposer$0$chosenAt$1$0; proposer$1$start$0$0}

part_sig: ('proposer$0$chosenAt$1$0; proposer$1$start$0$0', 'quorum$0$chosenAt$0$0')


---------- SigGenerator ----------

terms:  ['chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~start(proposer0)']

func_name2symbol:  {'chosenAt': Const('chosenAt', FunctionSort(EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')), EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')), BooleanSort())), 'start': Const('start', FunctionSort(EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')), BooleanSort()))}

func_name2args_sort:  {'chosenAt': (EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')), EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))), 'start': (EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')),)}

sign_func_name2count:  {'0$chosenAt': 1, '1$start': 1}


---------- ProductArgPartition ----------

sort2class_sigs: {EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')): [quorum$0$chosenAt$0$0], EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')): [proposer$0$chosenAt$1$0; proposer$1$start$0$0]}

sort2part_sig: {EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')): quorum$0$chosenAt$0$0, EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')): proposer$0$chosenAt$1$0; proposer$1$start$0$0}

	sort: quorum

	identical_classes: {'quorum$0$chosenAt$0': [quorum$0$chosenAt$0$0]}

	identical_single_classes: {'quorum$0$chosenAt$0': quorum$0$chosenAt$0$0}

	identical_multi_classes: {}

	sort: proposer

	identical_classes: {'proposer$0$chosenAt$1; proposer$1$start$0': [proposer$0$chosenAt$1$0; proposer$1$start$0$0]}

	identical_single_classes: {'proposer$0$chosenAt$1; proposer$1$start$0': proposer$0$chosenAt$1$0; proposer$1$start$0$0}

	identical_multi_classes: {}


---------- QInference: _set_sort_to_quantifier_mode ----------

quantifier mode: quorum: QuantifierMode.forall

quantifier mode: proposer: QuantifierMode.forall


---------- QInference: _set_constraint_mode ----------

constraint mode: ConstraintMode.no_merge


---------- QFormula: _set_qvars ----------

forall_qvars: {Var('PROPOSER0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))), Var('QUORUM0', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')))}

exists_qvars: set()


---------- QFormula: _set_signed_func_name_to_args ----------

signed_func_name2args: {'0$chosenAt': [[Var('QUORUM0', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), Var('PROPOSER0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))]], '1$start': [[Var('PROPOSER0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))]]}


---------- QFormula: _set_qterms ----------

qterms: ['chosenAt(QUORUM0,PROPOSER0)', '~start(PROPOSER0)']


---------- QFormula: get_qclause ----------

qclause: forall PROPOSER0,QUORUM0. ~chosenAt(QUORUM0,PROPOSER0) | start(PROPOSER0)


=== Prime Orbit 14 =====================
size : 18
num_suborbits: 1
195 (*) : --------0-----11-----------
195     : ['leader(proposer2)', 'promise(acceptor0,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)']
196     : -------0-----1-1-----------
196     : ['leader(proposer1)', 'promise(acceptor0,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)']
197     : --------0-----1-1----------
197     : ['leader(proposer2)', 'promise(acceptor0,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)']
198     : ------0-----1---1----------
198     : ['leader(proposer0)', 'promise(acceptor0,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)']
199     : -------0-----1---1---------
199     : ['leader(proposer1)', 'promise(acceptor0,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)']
200     : ------0-----1----1---------
200     : ['leader(proposer0)', 'promise(acceptor0,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)']
201     : -----0--------1---1--------
201     : ['leader(proposer2)', 'promise(acceptor1,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)']
202     : ----0--------1----1--------
202     : ['leader(proposer1)', 'promise(acceptor1,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)']
203     : -----0--------1----1-------
203     : ['leader(proposer2)', 'promise(acceptor1,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)']
204     : ---0--------1------1-------
204     : ['leader(proposer0)', 'promise(acceptor1,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)']
205     : ----0--------1------1------
205     : ['leader(proposer1)', 'promise(acceptor1,proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)']
206     : ---0--------1-------1------
206     : ['leader(proposer0)', 'promise(acceptor1,proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)']
207     : --0-----------1------1-----
207     : ['leader(proposer2)', 'promise(acceptor2,proposer0)', '~chosenAt(quorum__acceptor0_acceptor1,proposer2)']
208     : -0-----------1-------1-----
208     : ['leader(proposer1)', 'promise(acceptor2,proposer0)', '~chosenAt(quorum__acceptor0_acceptor1,proposer1)']
209     : --0-----------1-------1----
209     : ['leader(proposer2)', 'promise(acceptor2,proposer1)', '~chosenAt(quorum__acceptor0_acceptor1,proposer2)']
210     : 0-----------1---------1----
210     : ['leader(proposer0)', 'promise(acceptor2,proposer1)', '~chosenAt(quorum__acceptor0_acceptor1,proposer0)']
211     : -0-----------1---------1---
211     : ['leader(proposer1)', 'promise(acceptor2,proposer2)', '~chosenAt(quorum__acceptor0_acceptor1,proposer1)']
212     : 0-----------1----------1---
212     : ['leader(proposer0)', 'promise(acceptor2,proposer2)', '~chosenAt(quorum__acceptor0_acceptor1,proposer0)']
num_forall :   0
num_exists :   0
num_literals : 0
quantified form : None
qcost : 0




---------- QPrime ----------


---------- ConstArgBinding ----------

terms: ['~chosenAt(quorum__acceptor1_acceptor2,proposer2)', 'leader(proposer2)', 'promise(acceptor0,proposer0)', '~member(acceptor0,quorum__acceptor1_acceptor2)']

sign_func_name2args: {'1$chosenAt': [(Const('quorum__acceptor1_acceptor2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), Const('proposer2', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))))], '0$leader': [(Const('proposer2', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))),)], '0$promise': [(Const('acceptor0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Const('proposer0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))))], '1$member': [(Const('acceptor0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Const('quorum__acceptor1_acceptor2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))))]}

const2sigs: {Const('quorum__acceptor1_acceptor2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))): [quorum$1$chosenAt$0$0, quorum$1$member$1$0], Const('proposer2', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))): [proposer$1$chosenAt$1$0, proposer$0$leader$0$0], Const('acceptor0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))): [acceptor$0$promise$0$0, acceptor$1$member$0$0], Const('proposer0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))): [proposer$0$promise$1$0]}

sig2const: {'quorum$1$chosenAt$0$0': Const('quorum__acceptor1_acceptor2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), 'proposer$1$chosenAt$1$0': Const('proposer2', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))), 'proposer$0$leader$0$0': Const('proposer2', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))), 'acceptor$0$promise$0$0': Const('acceptor0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), 'proposer$0$promise$1$0': Const('proposer0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))), 'acceptor$1$member$0$0': Const('acceptor0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), 'quorum$1$member$1$0': Const('quorum__acceptor1_acceptor2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')))}


---------- ArgPartition ----------

sort2class_sigs: {EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')): [quorum$1$chosenAt$0$0; quorum$1$member$1$0], EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')): [proposer$0$leader$0$0; proposer$1$chosenAt$1$0, proposer$0$promise$1$0], EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')): [acceptor$0$promise$0$0; acceptor$1$member$0$0]}

sort2part_sig: {EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')): quorum$1$chosenAt$0$0; quorum$1$member$1$0, EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')): proposer$0$leader$0$0; proposer$1$chosenAt$1$0 | proposer$0$promise$1$0, EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')): acceptor$0$promise$0$0; acceptor$1$member$0$0}

part_sig: ('acceptor$0$promise$0$0; acceptor$1$member$0$0', 'proposer$0$leader$0$0; proposer$1$chosenAt$1$0 | proposer$0$promise$1$0', 'quorum$1$chosenAt$0$0; quorum$1$member$1$0')


---------- SigGenerator ----------

terms:  ['~chosenAt(quorum__acceptor1_acceptor2,proposer2)', 'leader(proposer2)', 'promise(acceptor0,proposer0)', '~member(acceptor0,quorum__acceptor1_acceptor2)']

func_name2symbol:  {'chosenAt': Const('chosenAt', FunctionSort(EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')), EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')), BooleanSort())), 'leader': Const('leader', FunctionSort(EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')), BooleanSort())), 'promise': Const('promise', FunctionSort(EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')), EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')), BooleanSort())), 'member': Const('member', FunctionSort(EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')), EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')), BooleanSort()))}

func_name2args_sort:  {'chosenAt': (EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')), EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))), 'leader': (EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')),), 'promise': (EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')), EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))), 'member': (EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')), EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')))}

sign_func_name2count:  {'1$chosenAt': 1, '0$leader': 1, '0$promise': 1, '1$member': 1}


---------- ProductArgPartition ----------

sort2class_sigs: {EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')): [quorum$1$chosenAt$0$0; quorum$1$member$1$0], EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')): [proposer$0$leader$0$0; proposer$1$chosenAt$1$0, proposer$0$promise$1$0], EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')): [acceptor$0$promise$0$0; acceptor$1$member$0$0]}

sort2part_sig: {EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')): quorum$1$chosenAt$0$0; quorum$1$member$1$0, EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')): proposer$0$leader$0$0; proposer$1$chosenAt$1$0 | proposer$0$promise$1$0, EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')): acceptor$0$promise$0$0; acceptor$1$member$0$0}

	sort: quorum

	identical_classes: {'quorum$1$chosenAt$0; quorum$1$member$1': [quorum$1$chosenAt$0$0; quorum$1$member$1$0]}

	identical_single_classes: {'quorum$1$chosenAt$0; quorum$1$member$1': quorum$1$chosenAt$0$0; quorum$1$member$1$0}

	identical_multi_classes: {}

	sort: proposer

	identical_classes: {'proposer$0$leader$0; proposer$1$chosenAt$1': [proposer$0$leader$0$0; proposer$1$chosenAt$1$0], 'proposer$0$promise$1': [proposer$0$promise$1$0]}

	identical_single_classes: {'proposer$0$leader$0; proposer$1$chosenAt$1': proposer$0$leader$0$0; proposer$1$chosenAt$1$0, 'proposer$0$promise$1': proposer$0$promise$1$0}

	identical_multi_classes: {}

	sort: acceptor

	identical_classes: {'acceptor$0$promise$0; acceptor$1$member$0': [acceptor$0$promise$0$0; acceptor$1$member$0$0]}

	identical_single_classes: {'acceptor$0$promise$0; acceptor$1$member$0': acceptor$0$promise$0$0; acceptor$1$member$0$0}

	identical_multi_classes: {}


---------- QInference: _set_sort_to_quantifier_mode ----------

quantifier mode: quorum: QuantifierMode.forall

quantifier mode: proposer: QuantifierMode.forall

quantifier mode: acceptor: QuantifierMode.forall


---------- QInference: _set_constraint_mode ----------

constraint mode: ConstraintMode.no_merge


---------- QFormula: _set_qvars ----------

forall_qvars: {Var('PROPOSER1', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))), Var('PROPOSER0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))), Var('QUORUM0', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), Var('ACCEPTOR0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')))}

exists_qvars: set()


---------- QFormula: _set_signed_func_name_to_args ----------

signed_func_name2args: {'1$chosenAt': [[Var('QUORUM0', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), Var('PROPOSER0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))]], '0$leader': [[Var('PROPOSER0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))]], '0$promise': [[Var('ACCEPTOR0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Var('PROPOSER1', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))]], '1$member': [[Var('ACCEPTOR0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Var('QUORUM0', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')))]]}


---------- QFormula: _set_qterms ----------

qterms: ['~member(ACCEPTOR0,QUORUM0)', 'promise(ACCEPTOR0,PROPOSER1)', 'leader(PROPOSER0)', '~chosenAt(QUORUM0,PROPOSER0)']


---------- QFormula: get_qclause ----------

qclause: forall PROPOSER1,ACCEPTOR0,PROPOSER0,QUORUM0. member(ACCEPTOR0,QUORUM0) | ~promise(ACCEPTOR0,PROPOSER1) | ~leader(PROPOSER0) | chosenAt(QUORUM0,PROPOSER0) | PROPOSER0 = PROPOSER1


=== Prime Orbit 15 =====================
size : 36
num_suborbits: 1
213 (*) : --------------11----0------
213     : ['leader(proposer2)', 'promise(acceptor0,proposer0)', '~promise(acceptor1,proposer2)']
214     : -------------1-1---0-------
214     : ['leader(proposer1)', 'promise(acceptor0,proposer0)', '~promise(acceptor1,proposer1)']
215     : --------------1-1---0------
215     : ['leader(proposer2)', 'promise(acceptor0,proposer1)', '~promise(acceptor1,proposer2)']
216     : ------------1---1-0--------
216     : ['leader(proposer0)', 'promise(acceptor0,proposer1)', '~promise(acceptor1,proposer0)']
217     : -------------1---1-0-------
217     : ['leader(proposer1)', 'promise(acceptor0,proposer2)', '~promise(acceptor1,proposer1)']
218     : ------------1----10--------
218     : ['leader(proposer0)', 'promise(acceptor0,proposer2)', '~promise(acceptor1,proposer0)']
219     : --------------11-------0---
219     : ['leader(proposer2)', 'promise(acceptor0,proposer0)', '~promise(acceptor2,proposer2)']
220     : -------------1-1------0----
220     : ['leader(proposer1)', 'promise(acceptor0,proposer0)', '~promise(acceptor2,proposer1)']
221     : --------------1-1------0---
221     : ['leader(proposer2)', 'promise(acceptor0,proposer1)', '~promise(acceptor2,proposer2)']
222     : ------------1---1----0-----
222     : ['leader(proposer0)', 'promise(acceptor0,proposer1)', '~promise(acceptor2,proposer0)']
223     : -------------1---1----0----
223     : ['leader(proposer1)', 'promise(acceptor0,proposer2)', '~promise(acceptor2,proposer1)']
224     : ------------1----1---0-----
224     : ['leader(proposer0)', 'promise(acceptor0,proposer2)', '~promise(acceptor2,proposer0)']
225     : --------------1--01--------
225     : ['leader(proposer2)', 'promise(acceptor1,proposer0)', '~promise(acceptor0,proposer2)']
226     : -------------1--0-1--------
226     : ['leader(proposer1)', 'promise(acceptor1,proposer0)', '~promise(acceptor0,proposer1)']
227     : --------------1--0-1-------
227     : ['leader(proposer2)', 'promise(acceptor1,proposer1)', '~promise(acceptor0,proposer2)']
228     : ------------1--0---1-------
228     : ['leader(proposer0)', 'promise(acceptor1,proposer1)', '~promise(acceptor0,proposer0)']
229     : -------------1--0---1------
229     : ['leader(proposer1)', 'promise(acceptor1,proposer2)', '~promise(acceptor0,proposer1)']
230     : ------------1--0----1------
230     : ['leader(proposer0)', 'promise(acceptor1,proposer2)', '~promise(acceptor0,proposer0)']
231     : --------------1---1----0---
231     : ['leader(proposer2)', 'promise(acceptor1,proposer0)', '~promise(acceptor2,proposer2)']
232     : -------------1----1---0----
232     : ['leader(proposer1)', 'promise(acceptor1,proposer0)', '~promise(acceptor2,proposer1)']
233     : --------------1----1---0---
233     : ['leader(proposer2)', 'promise(acceptor1,proposer1)', '~promise(acceptor2,proposer2)']
234     : ------------1------1-0-----
234     : ['leader(proposer0)', 'promise(acceptor1,proposer1)', '~promise(acceptor2,proposer0)']
235     : -------------1------1-0----
235     : ['leader(proposer1)', 'promise(acceptor1,proposer2)', '~promise(acceptor2,proposer1)']
236     : ------------1-------10-----
236     : ['leader(proposer0)', 'promise(acceptor1,proposer2)', '~promise(acceptor2,proposer0)']
237     : --------------1--0---1-----
237     : ['leader(proposer2)', 'promise(acceptor2,proposer0)', '~promise(acceptor0,proposer2)']
238     : -------------1--0----1-----
238     : ['leader(proposer1)', 'promise(acceptor2,proposer0)', '~promise(acceptor0,proposer1)']
239     : --------------1--0----1----
239     : ['leader(proposer2)', 'promise(acceptor2,proposer1)', '~promise(acceptor0,proposer2)']
240     : ------------1--0------1----
240     : ['leader(proposer0)', 'promise(acceptor2,proposer1)', '~promise(acceptor0,proposer0)']
241     : -------------1--0------1---
241     : ['leader(proposer1)', 'promise(acceptor2,proposer2)', '~promise(acceptor0,proposer1)']
242     : ------------1--0-------1---
242     : ['leader(proposer0)', 'promise(acceptor2,proposer2)', '~promise(acceptor0,proposer0)']
243     : --------------1-----01-----
243     : ['leader(proposer2)', 'promise(acceptor2,proposer0)', '~promise(acceptor1,proposer2)']
244     : -------------1-----0-1-----
244     : ['leader(proposer1)', 'promise(acceptor2,proposer0)', '~promise(acceptor1,proposer1)']
245     : --------------1-----0-1----
245     : ['leader(proposer2)', 'promise(acceptor2,proposer1)', '~promise(acceptor1,proposer2)']
246     : ------------1-----0---1----
246     : ['leader(proposer0)', 'promise(acceptor2,proposer1)', '~promise(acceptor1,proposer0)']
247     : -------------1-----0---1---
247     : ['leader(proposer1)', 'promise(acceptor2,proposer2)', '~promise(acceptor1,proposer1)']
248     : ------------1-----0----1---
248     : ['leader(proposer0)', 'promise(acceptor2,proposer2)', '~promise(acceptor1,proposer0)']
num_forall :   0
num_exists :   0
num_literals : 0
quantified form : None
qcost : 0




---------- QPrime ----------


---------- ConstArgBinding ----------

terms: ['leader(proposer2)', 'promise(acceptor0,proposer0)', '~promise(acceptor1,proposer2)']

sign_func_name2args: {'0$leader': [(Const('proposer2', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))),)], '0$promise': [(Const('acceptor0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Const('proposer0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))))], '1$promise': [(Const('acceptor1', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Const('proposer2', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))))]}

const2sigs: {Const('proposer2', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))): [proposer$0$leader$0$0, proposer$1$promise$1$0], Const('acceptor0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))): [acceptor$0$promise$0$0], Const('proposer0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))): [proposer$0$promise$1$0], Const('acceptor1', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))): [acceptor$1$promise$0$0]}

sig2const: {'proposer$0$leader$0$0': Const('proposer2', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))), 'acceptor$0$promise$0$0': Const('acceptor0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), 'proposer$0$promise$1$0': Const('proposer0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))), 'acceptor$1$promise$0$0': Const('acceptor1', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), 'proposer$1$promise$1$0': Const('proposer2', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))}


---------- ArgPartition ----------

sort2class_sigs: {EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')): [proposer$0$leader$0$0; proposer$1$promise$1$0, proposer$0$promise$1$0], EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')): [acceptor$0$promise$0$0, acceptor$1$promise$0$0]}

sort2part_sig: {EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')): proposer$0$leader$0$0; proposer$1$promise$1$0 | proposer$0$promise$1$0, EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')): acceptor$0$promise$0$0 | acceptor$1$promise$0$0}

part_sig: ('acceptor$0$promise$0$0 | acceptor$1$promise$0$0', 'proposer$0$leader$0$0; proposer$1$promise$1$0 | proposer$0$promise$1$0')


---------- SigGenerator ----------

terms:  ['leader(proposer2)', 'promise(acceptor0,proposer0)', '~promise(acceptor1,proposer2)']

func_name2symbol:  {'leader': Const('leader', FunctionSort(EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')), BooleanSort())), 'promise': Const('promise', FunctionSort(EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')), EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')), BooleanSort()))}

func_name2args_sort:  {'leader': (EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')),), 'promise': (EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')), EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))}

sign_func_name2count:  {'0$leader': 1, '0$promise': 1, '1$promise': 1}


---------- ProductArgPartition ----------

sort2class_sigs: {EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')): [proposer$0$leader$0$0; proposer$1$promise$1$0, proposer$0$promise$1$0], EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')): [acceptor$0$promise$0$0, acceptor$1$promise$0$0]}

sort2part_sig: {EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')): proposer$0$leader$0$0; proposer$1$promise$1$0 | proposer$0$promise$1$0, EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')): acceptor$0$promise$0$0 | acceptor$1$promise$0$0}

	sort: proposer

	identical_classes: {'proposer$0$leader$0; proposer$1$promise$1': [proposer$0$leader$0$0; proposer$1$promise$1$0], 'proposer$0$promise$1': [proposer$0$promise$1$0]}

	identical_single_classes: {'proposer$0$leader$0; proposer$1$promise$1': proposer$0$leader$0$0; proposer$1$promise$1$0, 'proposer$0$promise$1': proposer$0$promise$1$0}

	identical_multi_classes: {}

	sort: acceptor

	identical_classes: {'acceptor$0$promise$0': [acceptor$0$promise$0$0], 'acceptor$1$promise$0': [acceptor$1$promise$0$0]}

	identical_single_classes: {'acceptor$0$promise$0': acceptor$0$promise$0$0, 'acceptor$1$promise$0': acceptor$1$promise$0$0}

	identical_multi_classes: {}


---------- QInference: _set_sort_to_quantifier_mode ----------

quantifier mode: proposer: QuantifierMode.forall

quantifier mode: acceptor: QuantifierMode.forall


---------- QInference: _set_constraint_mode ----------

constraint mode: ConstraintMode.no_merge


---------- QFormula: _set_qvars ----------

forall_qvars: {Var('PROPOSER1', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))), Var('ACCEPTOR1', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Var('PROPOSER0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))), Var('ACCEPTOR0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')))}

exists_qvars: set()


---------- QFormula: _set_signed_func_name_to_args ----------

signed_func_name2args: {'0$leader': [[Var('PROPOSER0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))]], '0$promise': [[Var('ACCEPTOR0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Var('PROPOSER1', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))]], '1$promise': [[Var('ACCEPTOR1', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Var('PROPOSER0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))]]}


---------- QFormula: _set_qterms ----------

qterms: ['promise(ACCEPTOR0,PROPOSER1)', 'leader(PROPOSER0)', '~promise(ACCEPTOR1,PROPOSER0)']


---------- QFormula: get_qclause ----------

qclause: forall PROPOSER1,ACCEPTOR0,ACCEPTOR1,PROPOSER0. ~promise(ACCEPTOR0,PROPOSER1) | ~leader(PROPOSER0) | promise(ACCEPTOR1,PROPOSER0) | (PROPOSER0 = PROPOSER1 | ACCEPTOR0 = ACCEPTOR1)


=== Prime Orbit 16 =====================
size : 36
num_suborbits: 2
249 (*) : --------------11---1-------
249     : ['leader(proposer2)', 'promise(acceptor0,proposer0)', 'promise(acceptor1,proposer1)']
250     : -------------1-1----1------
250     : ['leader(proposer1)', 'promise(acceptor0,proposer0)', 'promise(acceptor1,proposer2)']
251     : --------------1-1-1--------
251     : ['leader(proposer2)', 'promise(acceptor0,proposer1)', 'promise(acceptor1,proposer0)']
252     : ------------1---1---1------
252     : ['leader(proposer0)', 'promise(acceptor0,proposer1)', 'promise(acceptor1,proposer2)']
253     : -------------1---11--------
253     : ['leader(proposer1)', 'promise(acceptor0,proposer2)', 'promise(acceptor1,proposer0)']
254     : ------------1----1-1-------
254     : ['leader(proposer0)', 'promise(acceptor0,proposer2)', 'promise(acceptor1,proposer1)']
255     : --------------11------1----
255     : ['leader(proposer2)', 'promise(acceptor0,proposer0)', 'promise(acceptor2,proposer1)']
256     : -------------1-1-------1---
256     : ['leader(proposer1)', 'promise(acceptor0,proposer0)', 'promise(acceptor2,proposer2)']
257     : --------------1-1----1-----
257     : ['leader(proposer2)', 'promise(acceptor0,proposer1)', 'promise(acceptor2,proposer0)']
258     : ------------1---1------1---
258     : ['leader(proposer0)', 'promise(acceptor0,proposer1)', 'promise(acceptor2,proposer2)']
259     : -------------1---1---1-----
259     : ['leader(proposer1)', 'promise(acceptor0,proposer2)', 'promise(acceptor2,proposer0)']
260     : ------------1----1----1----
260     : ['leader(proposer0)', 'promise(acceptor0,proposer2)', 'promise(acceptor2,proposer1)']
261     : --------------1---1---1----
261     : ['leader(proposer2)', 'promise(acceptor1,proposer0)', 'promise(acceptor2,proposer1)']
262     : -------------1----1----1---
262     : ['leader(proposer1)', 'promise(acceptor1,proposer0)', 'promise(acceptor2,proposer2)']
263     : --------------1----1-1-----
263     : ['leader(proposer2)', 'promise(acceptor1,proposer1)', 'promise(acceptor2,proposer0)']
264     : ------------1------1---1---
264     : ['leader(proposer0)', 'promise(acceptor1,proposer1)', 'promise(acceptor2,proposer2)']
265     : -------------1------11-----
265     : ['leader(proposer1)', 'promise(acceptor1,proposer2)', 'promise(acceptor2,proposer0)']
266     : ------------1-------1-1----
266     : ['leader(proposer0)', 'promise(acceptor1,proposer2)', 'promise(acceptor2,proposer1)']
267 (*) : --------------11--1--------
267     : ['leader(proposer2)', 'promise(acceptor0,proposer0)', 'promise(acceptor1,proposer0)']
268     : -------------1-1--1--------
268     : ['leader(proposer1)', 'promise(acceptor0,proposer0)', 'promise(acceptor1,proposer0)']
269     : --------------1-1--1-------
269     : ['leader(proposer2)', 'promise(acceptor0,proposer1)', 'promise(acceptor1,proposer1)']
270     : ------------1---1--1-------
270     : ['leader(proposer0)', 'promise(acceptor0,proposer1)', 'promise(acceptor1,proposer1)']
271     : -------------1---1--1------
271     : ['leader(proposer1)', 'promise(acceptor0,proposer2)', 'promise(acceptor1,proposer2)']
272     : ------------1----1--1------
272     : ['leader(proposer0)', 'promise(acceptor0,proposer2)', 'promise(acceptor1,proposer2)']
273     : --------------11-----1-----
273     : ['leader(proposer2)', 'promise(acceptor0,proposer0)', 'promise(acceptor2,proposer0)']
274     : -------------1-1-----1-----
274     : ['leader(proposer1)', 'promise(acceptor0,proposer0)', 'promise(acceptor2,proposer0)']
275     : --------------1-1-----1----
275     : ['leader(proposer2)', 'promise(acceptor0,proposer1)', 'promise(acceptor2,proposer1)']
276     : ------------1---1-----1----
276     : ['leader(proposer0)', 'promise(acceptor0,proposer1)', 'promise(acceptor2,proposer1)']
277     : -------------1---1-----1---
277     : ['leader(proposer1)', 'promise(acceptor0,proposer2)', 'promise(acceptor2,proposer2)']
278     : ------------1----1-----1---
278     : ['leader(proposer0)', 'promise(acceptor0,proposer2)', 'promise(acceptor2,proposer2)']
279     : --------------1---1--1-----
279     : ['leader(proposer2)', 'promise(acceptor1,proposer0)', 'promise(acceptor2,proposer0)']
280     : -------------1----1--1-----
280     : ['leader(proposer1)', 'promise(acceptor1,proposer0)', 'promise(acceptor2,proposer0)']
281     : --------------1----1--1----
281     : ['leader(proposer2)', 'promise(acceptor1,proposer1)', 'promise(acceptor2,proposer1)']
282     : ------------1------1--1----
282     : ['leader(proposer0)', 'promise(acceptor1,proposer1)', 'promise(acceptor2,proposer1)']
283     : -------------1------1--1---
283     : ['leader(proposer1)', 'promise(acceptor1,proposer2)', 'promise(acceptor2,proposer2)']
284     : ------------1-------1--1---
284     : ['leader(proposer0)', 'promise(acceptor1,proposer2)', 'promise(acceptor2,proposer2)']
num_forall :   0
num_exists :   0
num_literals : 0
quantified form : None
qcost : 0




---------- QPrime ----------


---------- ConstArgBinding ----------

terms: ['leader(proposer2)', 'promise(acceptor0,proposer0)', 'promise(acceptor1,proposer1)']

sign_func_name2args: {'0$leader': [(Const('proposer2', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))),)], '0$promise': [(Const('acceptor0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Const('proposer0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))), (Const('acceptor1', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Const('proposer1', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))))]}

const2sigs: {Const('proposer2', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))): [proposer$0$leader$0$0], Const('acceptor0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))): [acceptor$0$promise$0$0], Const('proposer0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))): [proposer$0$promise$1$0], Const('acceptor1', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))): [acceptor$0$promise$0$1], Const('proposer1', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))): [proposer$0$promise$1$1]}

sig2const: {'proposer$0$leader$0$0': Const('proposer2', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))), 'acceptor$0$promise$0$0': Const('acceptor0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), 'proposer$0$promise$1$0': Const('proposer0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))), 'acceptor$0$promise$0$1': Const('acceptor1', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), 'proposer$0$promise$1$1': Const('proposer1', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))}


---------- ArgPartition ----------

sort2class_sigs: {EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')): [proposer$0$leader$0$0, proposer$0$promise$1$0, proposer$0$promise$1$1], EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')): [acceptor$0$promise$0$0, acceptor$0$promise$0$1]}

sort2part_sig: {EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')): proposer$0$leader$0$0 | proposer$0$promise$1$0 | proposer$0$promise$1$1, EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')): acceptor$0$promise$0$0 | acceptor$0$promise$0$1}

part_sig: ('acceptor$0$promise$0$0 | acceptor$0$promise$0$1', 'proposer$0$leader$0$0 | proposer$0$promise$1$0 | proposer$0$promise$1$1')


---------- QPrime ----------


---------- ConstArgBinding ----------

terms: ['leader(proposer2)', 'promise(acceptor0,proposer0)', 'promise(acceptor1,proposer0)']

sign_func_name2args: {'0$leader': [(Const('proposer2', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))),)], '0$promise': [(Const('acceptor0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Const('proposer0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))), (Const('acceptor1', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Const('proposer0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))))]}

const2sigs: {Const('proposer2', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))): [proposer$0$leader$0$0], Const('acceptor0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))): [acceptor$0$promise$0$0], Const('proposer0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))): [proposer$0$promise$1$0, proposer$0$promise$1$1], Const('acceptor1', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))): [acceptor$0$promise$0$1]}

sig2const: {'proposer$0$leader$0$0': Const('proposer2', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))), 'acceptor$0$promise$0$0': Const('acceptor0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), 'proposer$0$promise$1$0': Const('proposer0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))), 'acceptor$0$promise$0$1': Const('acceptor1', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), 'proposer$0$promise$1$1': Const('proposer0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))}


---------- ArgPartition ----------

sort2class_sigs: {EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')): [proposer$0$leader$0$0, proposer$0$promise$1$0; proposer$0$promise$1$1], EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')): [acceptor$0$promise$0$0, acceptor$0$promise$0$1]}

sort2part_sig: {EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')): proposer$0$leader$0$0 | proposer$0$promise$1$0; proposer$0$promise$1$1, EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')): acceptor$0$promise$0$0 | acceptor$0$promise$0$1}

part_sig: ('acceptor$0$promise$0$0 | acceptor$0$promise$0$1', 'proposer$0$leader$0$0 | proposer$0$promise$1$0; proposer$0$promise$1$1')


---------- SigGenerator ----------

terms:  ['leader(proposer2)', 'promise(acceptor0,proposer0)', 'promise(acceptor1,proposer1)']

func_name2symbol:  {'leader': Const('leader', FunctionSort(EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')), BooleanSort())), 'promise': Const('promise', FunctionSort(EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')), EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')), BooleanSort()))}

func_name2args_sort:  {'leader': (EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')),), 'promise': (EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')), EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))}

sign_func_name2count:  {'0$leader': 1, '0$promise': 2}


---------- ProductArgPartition ----------

sort2class_sigs: {EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')): [proposer$0$leader$0$0, proposer$0$promise$1$0, proposer$0$promise$1$1], EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')): [acceptor$0$promise$0$0, acceptor$0$promise$0$1]}

sort2part_sig: {EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')): proposer$0$leader$0$0 | proposer$0$promise$1$0 | proposer$0$promise$1$1, EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')): acceptor$0$promise$0$0 | acceptor$0$promise$0$1}

	sort: proposer

	identical_classes: {'proposer$0$leader$0': [proposer$0$leader$0$0], 'proposer$0$promise$1': [proposer$0$promise$1$0, proposer$0$promise$1$1]}

	identical_single_classes: {'proposer$0$leader$0': proposer$0$leader$0$0}

	identical_multi_classes: {'proposer$0$promise$1': [proposer$0$promise$1$0, proposer$0$promise$1$1]}

	sort: acceptor

	identical_classes: {'acceptor$0$promise$0': [acceptor$0$promise$0$0, acceptor$0$promise$0$1]}

	identical_single_classes: {}

	identical_multi_classes: {'acceptor$0$promise$0': [acceptor$0$promise$0$0, acceptor$0$promise$0$1]}


---------- QInference: _set_sort_to_quantifier_mode ----------

quantifier mode: proposer: QuantifierMode.forall

quantifier mode: acceptor: QuantifierMode.forall


---------- QInference: _set_constraint_mode ----------

constraint mode: ConstraintMode.merge


---------- QFormula: _set_qvars ----------

forall_qvars: {Var('PROPOSER1', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))), Var('PROPOSER2', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))), Var('ACCEPTOR1', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Var('ACCEPTOR0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Var('PROPOSER0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))}

exists_qvars: set()


---------- QFormula: _set_signed_func_name_to_args ----------

signed_func_name2args: {'0$leader': [[Var('PROPOSER0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))]], '0$promise': [[Var('ACCEPTOR0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Var('PROPOSER1', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))], [Var('ACCEPTOR1', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Var('PROPOSER2', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))]]}


---------- QFormula: _set_qterms ----------

qterms: ['promise(ACCEPTOR1,PROPOSER2)', 'promise(ACCEPTOR0,PROPOSER1)', 'leader(PROPOSER0)']


---------- QFormula: _get_partition_constraint ----------

partition: ('acceptor$0$promise$0$0 | acceptor$0$promise$0$1', 'proposer$0$leader$0$0 | proposer$0$promise$1$0 | proposer$0$promise$1$1')[]

sort partition signature: acceptor$0$promise$0$0 | acceptor$0$promise$0$1

class signature: acceptor$0$promise$0$0


---------- QFormula: _get_class_constraint ----------

qvars: ['ACCEPTOR0:acceptor']

eq_terms: []

class signature: acceptor$0$promise$0$1


---------- QFormula: _get_class_constraint ----------

qvars: ['ACCEPTOR1:acceptor']

eq_terms: []


---------- QFormula: _get_diff_class_constraint ----------

qvars: ['ACCEPTOR1:acceptor', 'ACCEPTOR0:acceptor']

eq_terms: ['ACCEPTOR0:acceptor ~= ACCEPTOR1']

sort partition signature: proposer$0$leader$0$0 | proposer$0$promise$1$0 | proposer$0$promise$1$1

class signature: proposer$0$leader$0$0


---------- QFormula: _get_class_constraint ----------

qvars: ['PROPOSER0:proposer']

eq_terms: []

class signature: proposer$0$promise$1$0


---------- QFormula: _get_class_constraint ----------

qvars: ['PROPOSER1:proposer']

eq_terms: []

class signature: proposer$0$promise$1$1


---------- QFormula: _get_class_constraint ----------

qvars: ['PROPOSER2:proposer']

eq_terms: []


---------- QFormula: _get_diff_class_constraint ----------

qvars: ['PROPOSER1:proposer', 'PROPOSER2:proposer', 'PROPOSER0:proposer']

eq_terms: ['PROPOSER0:proposer ~= PROPOSER1', 'PROPOSER0:proposer ~= PROPOSER2', 'PROPOSER1:proposer ~= PROPOSER2']

constraint: ['ACCEPTOR0:acceptor ~= ACCEPTOR1', 'PROPOSER0:proposer ~= PROPOSER1', 'PROPOSER0:proposer ~= PROPOSER2', 'PROPOSER1:proposer ~= PROPOSER2']


---------- QFormula: _get_partition_constraint ----------

partition: ('acceptor$0$promise$0$0 | acceptor$0$promise$0$1', 'proposer$0$leader$0$0 | proposer$0$promise$1$0; proposer$0$promise$1$1')[]

sort partition signature: acceptor$0$promise$0$0 | acceptor$0$promise$0$1

class signature: acceptor$0$promise$0$0


---------- QFormula: _get_class_constraint ----------

qvars: ['ACCEPTOR0:acceptor']

eq_terms: []

class signature: acceptor$0$promise$0$1


---------- QFormula: _get_class_constraint ----------

qvars: ['ACCEPTOR1:acceptor']

eq_terms: []


---------- QFormula: _get_diff_class_constraint ----------

qvars: ['ACCEPTOR1:acceptor', 'ACCEPTOR0:acceptor']

eq_terms: ['ACCEPTOR0:acceptor ~= ACCEPTOR1']

sort partition signature: proposer$0$leader$0$0 | proposer$0$promise$1$0; proposer$0$promise$1$1

class signature: proposer$0$leader$0$0


---------- QFormula: _get_class_constraint ----------

qvars: ['PROPOSER0:proposer']

eq_terms: []

class signature: proposer$0$promise$1$0; proposer$0$promise$1$1


---------- QFormula: _get_class_constraint ----------

qvars: ['PROPOSER1:proposer', 'PROPOSER2:proposer']

eq_terms: ['PROPOSER1:proposer = PROPOSER2']


---------- QFormula: _get_diff_class_constraint ----------

qvars: ['PROPOSER1:proposer', 'PROPOSER0:proposer']

eq_terms: ['PROPOSER0:proposer ~= PROPOSER1']

constraint: ['ACCEPTOR0:acceptor ~= ACCEPTOR1', 'PROPOSER1:proposer = PROPOSER2', 'PROPOSER0:proposer ~= PROPOSER1']


---------- QFormula: _get_partition_constraint ----------

partition: ('acceptor$0$promise$0$0; acceptor$0$promise$0$1', 'proposer$0$leader$0$0 | proposer$0$promise$1$0 | proposer$0$promise$1$1')[]

sort partition signature: acceptor$0$promise$0$0; acceptor$0$promise$0$1

class signature: acceptor$0$promise$0$0; acceptor$0$promise$0$1


---------- QFormula: _get_class_constraint ----------

qvars: ['ACCEPTOR0:acceptor', 'ACCEPTOR1:acceptor']

eq_terms: ['ACCEPTOR0:acceptor = ACCEPTOR1']


---------- QFormula: _get_diff_class_constraint ----------

qvars: ['ACCEPTOR0:acceptor']

eq_terms: []

sort partition signature: proposer$0$leader$0$0 | proposer$0$promise$1$0 | proposer$0$promise$1$1

class signature: proposer$0$leader$0$0


---------- QFormula: _get_class_constraint ----------

qvars: ['PROPOSER0:proposer']

eq_terms: []

class signature: proposer$0$promise$1$0


---------- QFormula: _get_class_constraint ----------

qvars: ['PROPOSER1:proposer']

eq_terms: []

class signature: proposer$0$promise$1$1


---------- QFormula: _get_class_constraint ----------

qvars: ['PROPOSER2:proposer']

eq_terms: []


---------- QFormula: _get_diff_class_constraint ----------

qvars: ['PROPOSER1:proposer', 'PROPOSER2:proposer', 'PROPOSER0:proposer']

eq_terms: ['PROPOSER0:proposer ~= PROPOSER1', 'PROPOSER0:proposer ~= PROPOSER2', 'PROPOSER1:proposer ~= PROPOSER2']

constraint: ['ACCEPTOR0:acceptor = ACCEPTOR1', 'PROPOSER0:proposer ~= PROPOSER1', 'PROPOSER0:proposer ~= PROPOSER2', 'PROPOSER1:proposer ~= PROPOSER2']


---------- QFormula: _get_partition_constraint ----------

partition: ('acceptor$0$promise$0$0; acceptor$0$promise$0$1', 'proposer$0$leader$0$0 | proposer$0$promise$1$0; proposer$0$promise$1$1')[]

sort partition signature: acceptor$0$promise$0$0; acceptor$0$promise$0$1

class signature: acceptor$0$promise$0$0; acceptor$0$promise$0$1


---------- QFormula: _get_class_constraint ----------

qvars: ['ACCEPTOR0:acceptor', 'ACCEPTOR1:acceptor']

eq_terms: ['ACCEPTOR0:acceptor = ACCEPTOR1']


---------- QFormula: _get_diff_class_constraint ----------

qvars: ['ACCEPTOR0:acceptor']

eq_terms: []

sort partition signature: proposer$0$leader$0$0 | proposer$0$promise$1$0; proposer$0$promise$1$1

class signature: proposer$0$leader$0$0


---------- QFormula: _get_class_constraint ----------

qvars: ['PROPOSER0:proposer']

eq_terms: []

class signature: proposer$0$promise$1$0; proposer$0$promise$1$1


---------- QFormula: _get_class_constraint ----------

qvars: ['PROPOSER1:proposer', 'PROPOSER2:proposer']

eq_terms: ['PROPOSER1:proposer = PROPOSER2']


---------- QFormula: _get_diff_class_constraint ----------

qvars: ['PROPOSER1:proposer', 'PROPOSER0:proposer']

eq_terms: ['PROPOSER0:proposer ~= PROPOSER1']

constraint: ['ACCEPTOR0:acceptor = ACCEPTOR1', 'PROPOSER1:proposer = PROPOSER2', 'PROPOSER0:proposer ~= PROPOSER1']


---------- QFormula: _get_partition_constraint ----------

partition: ('acceptor$0$promise$0$0 | acceptor$0$promise$0$1', 'proposer$0$leader$0$0; proposer$0$promise$1$0 | proposer$0$promise$1$1')[]

sort partition signature: acceptor$0$promise$0$0 | acceptor$0$promise$0$1

class signature: acceptor$0$promise$0$0


---------- QFormula: _get_class_constraint ----------

qvars: ['ACCEPTOR0:acceptor']

eq_terms: []

class signature: acceptor$0$promise$0$1


---------- QFormula: _get_class_constraint ----------

qvars: ['ACCEPTOR1:acceptor']

eq_terms: []


---------- QFormula: _get_diff_class_constraint ----------

qvars: ['ACCEPTOR1:acceptor', 'ACCEPTOR0:acceptor']

eq_terms: ['ACCEPTOR0:acceptor ~= ACCEPTOR1']

sort partition signature: proposer$0$leader$0$0; proposer$0$promise$1$0 | proposer$0$promise$1$1

class signature: proposer$0$leader$0$0; proposer$0$promise$1$0


---------- QFormula: _get_class_constraint ----------

qvars: ['PROPOSER0:proposer', 'PROPOSER1:proposer']

eq_terms: ['PROPOSER0:proposer = PROPOSER1']

class signature: proposer$0$promise$1$1


---------- QFormula: _get_class_constraint ----------

qvars: ['PROPOSER2:proposer']

eq_terms: []


---------- QFormula: _get_diff_class_constraint ----------

qvars: ['PROPOSER2:proposer', 'PROPOSER0:proposer']

eq_terms: ['PROPOSER0:proposer ~= PROPOSER2']

constraint: ['ACCEPTOR0:acceptor ~= ACCEPTOR1', 'PROPOSER0:proposer = PROPOSER1', 'PROPOSER0:proposer ~= PROPOSER2']


---------- QFormula: _get_partition_constraint ----------

partition: ('acceptor$0$promise$0$0 | acceptor$0$promise$0$1', 'proposer$0$leader$0$0; proposer$0$promise$1$1 | proposer$0$promise$1$0')[]

sort partition signature: acceptor$0$promise$0$0 | acceptor$0$promise$0$1

class signature: acceptor$0$promise$0$0


---------- QFormula: _get_class_constraint ----------

qvars: ['ACCEPTOR0:acceptor']

eq_terms: []

class signature: acceptor$0$promise$0$1


---------- QFormula: _get_class_constraint ----------

qvars: ['ACCEPTOR1:acceptor']

eq_terms: []


---------- QFormula: _get_diff_class_constraint ----------

qvars: ['ACCEPTOR1:acceptor', 'ACCEPTOR0:acceptor']

eq_terms: ['ACCEPTOR0:acceptor ~= ACCEPTOR1']

sort partition signature: proposer$0$leader$0$0; proposer$0$promise$1$1 | proposer$0$promise$1$0

class signature: proposer$0$leader$0$0; proposer$0$promise$1$1


---------- QFormula: _get_class_constraint ----------

qvars: ['PROPOSER0:proposer', 'PROPOSER2:proposer']

eq_terms: ['PROPOSER0:proposer = PROPOSER2']

class signature: proposer$0$promise$1$0


---------- QFormula: _get_class_constraint ----------

qvars: ['PROPOSER1:proposer']

eq_terms: []


---------- QFormula: _get_diff_class_constraint ----------

qvars: ['PROPOSER1:proposer', 'PROPOSER0:proposer']

eq_terms: ['PROPOSER0:proposer ~= PROPOSER1']

constraint: ['ACCEPTOR0:acceptor ~= ACCEPTOR1', 'PROPOSER0:proposer = PROPOSER2', 'PROPOSER0:proposer ~= PROPOSER1']


---------- QFormula: _get_partition_constraint ----------

partition: ('acceptor$0$promise$0$0; acceptor$0$promise$0$1', 'proposer$0$leader$0$0; proposer$0$promise$1$0 | proposer$0$promise$1$1')[]

sort partition signature: acceptor$0$promise$0$0; acceptor$0$promise$0$1

class signature: acceptor$0$promise$0$0; acceptor$0$promise$0$1


---------- QFormula: _get_class_constraint ----------

qvars: ['ACCEPTOR0:acceptor', 'ACCEPTOR1:acceptor']

eq_terms: ['ACCEPTOR0:acceptor = ACCEPTOR1']


---------- QFormula: _get_diff_class_constraint ----------

qvars: ['ACCEPTOR0:acceptor']

eq_terms: []

sort partition signature: proposer$0$leader$0$0; proposer$0$promise$1$0 | proposer$0$promise$1$1

class signature: proposer$0$leader$0$0; proposer$0$promise$1$0


---------- QFormula: _get_class_constraint ----------

qvars: ['PROPOSER0:proposer', 'PROPOSER1:proposer']

eq_terms: ['PROPOSER0:proposer = PROPOSER1']

class signature: proposer$0$promise$1$1


---------- QFormula: _get_class_constraint ----------

qvars: ['PROPOSER2:proposer']

eq_terms: []


---------- QFormula: _get_diff_class_constraint ----------

qvars: ['PROPOSER2:proposer', 'PROPOSER0:proposer']

eq_terms: ['PROPOSER0:proposer ~= PROPOSER2']

constraint: ['ACCEPTOR0:acceptor = ACCEPTOR1', 'PROPOSER0:proposer = PROPOSER1', 'PROPOSER0:proposer ~= PROPOSER2']


---------- QFormula: _get_partition_constraint ----------

partition: ('acceptor$0$promise$0$0; acceptor$0$promise$0$1', 'proposer$0$leader$0$0; proposer$0$promise$1$1 | proposer$0$promise$1$0')[]

sort partition signature: acceptor$0$promise$0$0; acceptor$0$promise$0$1

class signature: acceptor$0$promise$0$0; acceptor$0$promise$0$1


---------- QFormula: _get_class_constraint ----------

qvars: ['ACCEPTOR0:acceptor', 'ACCEPTOR1:acceptor']

eq_terms: ['ACCEPTOR0:acceptor = ACCEPTOR1']


---------- QFormula: _get_diff_class_constraint ----------

qvars: ['ACCEPTOR0:acceptor']

eq_terms: []

sort partition signature: proposer$0$leader$0$0; proposer$0$promise$1$1 | proposer$0$promise$1$0

class signature: proposer$0$leader$0$0; proposer$0$promise$1$1


---------- QFormula: _get_class_constraint ----------

qvars: ['PROPOSER0:proposer', 'PROPOSER2:proposer']

eq_terms: ['PROPOSER0:proposer = PROPOSER2']

class signature: proposer$0$promise$1$0


---------- QFormula: _get_class_constraint ----------

qvars: ['PROPOSER1:proposer']

eq_terms: []


---------- QFormula: _get_diff_class_constraint ----------

qvars: ['PROPOSER1:proposer', 'PROPOSER0:proposer']

eq_terms: ['PROPOSER0:proposer ~= PROPOSER1']

constraint: ['ACCEPTOR0:acceptor = ACCEPTOR1', 'PROPOSER0:proposer = PROPOSER2', 'PROPOSER0:proposer ~= PROPOSER1']


---------- QFormula: _get_partition_constraint ----------

partition: ('acceptor$0$promise$0$0 | acceptor$0$promise$0$1', 'proposer$0$leader$0$0; proposer$0$promise$1$0; proposer$0$promise$1$1')[]

sort partition signature: acceptor$0$promise$0$0 | acceptor$0$promise$0$1

class signature: acceptor$0$promise$0$0


---------- QFormula: _get_class_constraint ----------

qvars: ['ACCEPTOR0:acceptor']

eq_terms: []

class signature: acceptor$0$promise$0$1


---------- QFormula: _get_class_constraint ----------

qvars: ['ACCEPTOR1:acceptor']

eq_terms: []


---------- QFormula: _get_diff_class_constraint ----------

qvars: ['ACCEPTOR1:acceptor', 'ACCEPTOR0:acceptor']

eq_terms: ['ACCEPTOR0:acceptor ~= ACCEPTOR1']

sort partition signature: proposer$0$leader$0$0; proposer$0$promise$1$0; proposer$0$promise$1$1

class signature: proposer$0$leader$0$0; proposer$0$promise$1$0; proposer$0$promise$1$1


---------- QFormula: _get_class_constraint ----------

qvars: ['PROPOSER0:proposer', 'PROPOSER1:proposer', 'PROPOSER2:proposer']

eq_terms: ['PROPOSER0:proposer = PROPOSER1', 'PROPOSER0:proposer = PROPOSER2']


---------- QFormula: _get_diff_class_constraint ----------

qvars: ['PROPOSER0:proposer']

eq_terms: []

constraint: ['ACCEPTOR0:acceptor ~= ACCEPTOR1', 'PROPOSER0:proposer = PROPOSER1', 'PROPOSER0:proposer = PROPOSER2']


---------- QFormula: _get_partition_constraint ----------

partition: ('acceptor$0$promise$0$0; acceptor$0$promise$0$1', 'proposer$0$leader$0$0; proposer$0$promise$1$0; proposer$0$promise$1$1')[]

sort partition signature: acceptor$0$promise$0$0; acceptor$0$promise$0$1

class signature: acceptor$0$promise$0$0; acceptor$0$promise$0$1


---------- QFormula: _get_class_constraint ----------

qvars: ['ACCEPTOR0:acceptor', 'ACCEPTOR1:acceptor']

eq_terms: ['ACCEPTOR0:acceptor = ACCEPTOR1']


---------- QFormula: _get_diff_class_constraint ----------

qvars: ['ACCEPTOR0:acceptor']

eq_terms: []

sort partition signature: proposer$0$leader$0$0; proposer$0$promise$1$0; proposer$0$promise$1$1

class signature: proposer$0$leader$0$0; proposer$0$promise$1$0; proposer$0$promise$1$1


---------- QFormula: _get_class_constraint ----------

qvars: ['PROPOSER0:proposer', 'PROPOSER1:proposer', 'PROPOSER2:proposer']

eq_terms: ['PROPOSER0:proposer = PROPOSER1', 'PROPOSER0:proposer = PROPOSER2']


---------- QFormula: _get_diff_class_constraint ----------

qvars: ['PROPOSER0:proposer']

eq_terms: []

constraint: ['ACCEPTOR0:acceptor = ACCEPTOR1', 'PROPOSER0:proposer = PROPOSER1', 'PROPOSER0:proposer = PROPOSER2']


---------- QFormula: _get_partition_constraint ----------

partition: ('acceptor$0$promise$0$0 | acceptor$0$promise$0$1', 'proposer$0$leader$0$0 | proposer$0$promise$1$0 | proposer$0$promise$1$1')[]

sort partition signature: acceptor$0$promise$0$0 | acceptor$0$promise$0$1

class signature: acceptor$0$promise$0$0


---------- QFormula: _get_class_constraint ----------

qvars: ['ACCEPTOR0:acceptor']

eq_terms: []

class signature: acceptor$0$promise$0$1


---------- QFormula: _get_class_constraint ----------

qvars: ['ACCEPTOR1:acceptor']

eq_terms: []


---------- QFormula: _get_diff_class_constraint ----------

qvars: ['ACCEPTOR1:acceptor', 'ACCEPTOR0:acceptor']

eq_terms: ['ACCEPTOR0:acceptor ~= ACCEPTOR1']

sort partition signature: proposer$0$leader$0$0 | proposer$0$promise$1$0 | proposer$0$promise$1$1

class signature: proposer$0$leader$0$0


---------- QFormula: _get_class_constraint ----------

qvars: ['PROPOSER0:proposer']

eq_terms: []

class signature: proposer$0$promise$1$0


---------- QFormula: _get_class_constraint ----------

qvars: ['PROPOSER1:proposer']

eq_terms: []

class signature: proposer$0$promise$1$1


---------- QFormula: _get_class_constraint ----------

qvars: ['PROPOSER2:proposer']

eq_terms: []


---------- QFormula: _get_diff_class_constraint ----------

qvars: ['PROPOSER1:proposer', 'PROPOSER2:proposer', 'PROPOSER0:proposer']

eq_terms: ['PROPOSER0:proposer ~= PROPOSER1', 'PROPOSER0:proposer ~= PROPOSER2', 'PROPOSER1:proposer ~= PROPOSER2']

constraint: ['ACCEPTOR0:acceptor ~= ACCEPTOR1', 'PROPOSER0:proposer ~= PROPOSER1', 'PROPOSER0:proposer ~= PROPOSER2', 'PROPOSER1:proposer ~= PROPOSER2']


---------- QFormula: _get_partition_constraint ----------

partition: ('acceptor$0$promise$0$0 | acceptor$0$promise$0$1', 'proposer$0$leader$0$0 | proposer$0$promise$1$0; proposer$0$promise$1$1')[]

sort partition signature: acceptor$0$promise$0$0 | acceptor$0$promise$0$1

class signature: acceptor$0$promise$0$0


---------- QFormula: _get_class_constraint ----------

qvars: ['ACCEPTOR0:acceptor']

eq_terms: []

class signature: acceptor$0$promise$0$1


---------- QFormula: _get_class_constraint ----------

qvars: ['ACCEPTOR1:acceptor']

eq_terms: []


---------- QFormula: _get_diff_class_constraint ----------

qvars: ['ACCEPTOR1:acceptor', 'ACCEPTOR0:acceptor']

eq_terms: ['ACCEPTOR0:acceptor ~= ACCEPTOR1']

sort partition signature: proposer$0$leader$0$0 | proposer$0$promise$1$0; proposer$0$promise$1$1

class signature: proposer$0$leader$0$0


---------- QFormula: _get_class_constraint ----------

qvars: ['PROPOSER0:proposer']

eq_terms: []

class signature: proposer$0$promise$1$0; proposer$0$promise$1$1


---------- QFormula: _get_class_constraint ----------

qvars: ['PROPOSER1:proposer', 'PROPOSER2:proposer']

eq_terms: ['PROPOSER1:proposer = PROPOSER2']


---------- QFormula: _get_diff_class_constraint ----------

qvars: ['PROPOSER1:proposer', 'PROPOSER0:proposer']

eq_terms: ['PROPOSER0:proposer ~= PROPOSER1']

constraint: ['ACCEPTOR0:acceptor ~= ACCEPTOR1', 'PROPOSER1:proposer = PROPOSER2', 'PROPOSER0:proposer ~= PROPOSER1']


---------- QFormula: _get_partition_constraint ----------

partition: ('acceptor$0$promise$0$0; acceptor$0$promise$0$1', 'proposer$0$leader$0$0 | proposer$0$promise$1$0 | proposer$0$promise$1$1')[]

sort partition signature: acceptor$0$promise$0$0; acceptor$0$promise$0$1

class signature: acceptor$0$promise$0$0; acceptor$0$promise$0$1


---------- QFormula: _get_class_constraint ----------

qvars: ['ACCEPTOR0:acceptor', 'ACCEPTOR1:acceptor']

eq_terms: ['ACCEPTOR0:acceptor = ACCEPTOR1']


---------- QFormula: _get_diff_class_constraint ----------

qvars: ['ACCEPTOR0:acceptor']

eq_terms: []

sort partition signature: proposer$0$leader$0$0 | proposer$0$promise$1$0 | proposer$0$promise$1$1

class signature: proposer$0$leader$0$0


---------- QFormula: _get_class_constraint ----------

qvars: ['PROPOSER0:proposer']

eq_terms: []

class signature: proposer$0$promise$1$0


---------- QFormula: _get_class_constraint ----------

qvars: ['PROPOSER1:proposer']

eq_terms: []

class signature: proposer$0$promise$1$1


---------- QFormula: _get_class_constraint ----------

qvars: ['PROPOSER2:proposer']

eq_terms: []


---------- QFormula: _get_diff_class_constraint ----------

qvars: ['PROPOSER1:proposer', 'PROPOSER2:proposer', 'PROPOSER0:proposer']

eq_terms: ['PROPOSER0:proposer ~= PROPOSER1', 'PROPOSER0:proposer ~= PROPOSER2', 'PROPOSER1:proposer ~= PROPOSER2']

constraint: ['ACCEPTOR0:acceptor = ACCEPTOR1', 'PROPOSER0:proposer ~= PROPOSER1', 'PROPOSER0:proposer ~= PROPOSER2', 'PROPOSER1:proposer ~= PROPOSER2']


---------- QFormula: _get_partition_constraint ----------

partition: ('acceptor$0$promise$0$0; acceptor$0$promise$0$1', 'proposer$0$leader$0$0 | proposer$0$promise$1$0; proposer$0$promise$1$1')[]

sort partition signature: acceptor$0$promise$0$0; acceptor$0$promise$0$1

class signature: acceptor$0$promise$0$0; acceptor$0$promise$0$1


---------- QFormula: _get_class_constraint ----------

qvars: ['ACCEPTOR0:acceptor', 'ACCEPTOR1:acceptor']

eq_terms: ['ACCEPTOR0:acceptor = ACCEPTOR1']


---------- QFormula: _get_diff_class_constraint ----------

qvars: ['ACCEPTOR0:acceptor']

eq_terms: []

sort partition signature: proposer$0$leader$0$0 | proposer$0$promise$1$0; proposer$0$promise$1$1

class signature: proposer$0$leader$0$0


---------- QFormula: _get_class_constraint ----------

qvars: ['PROPOSER0:proposer']

eq_terms: []

class signature: proposer$0$promise$1$0; proposer$0$promise$1$1


---------- QFormula: _get_class_constraint ----------

qvars: ['PROPOSER1:proposer', 'PROPOSER2:proposer']

eq_terms: ['PROPOSER1:proposer = PROPOSER2']


---------- QFormula: _get_diff_class_constraint ----------

qvars: ['PROPOSER1:proposer', 'PROPOSER0:proposer']

eq_terms: ['PROPOSER0:proposer ~= PROPOSER1']

constraint: ['ACCEPTOR0:acceptor = ACCEPTOR1', 'PROPOSER1:proposer = PROPOSER2', 'PROPOSER0:proposer ~= PROPOSER1']


---------- QFormula: _get_partition_constraint ----------

partition: ('acceptor$0$promise$0$0 | acceptor$0$promise$0$1', 'proposer$0$leader$0$0; proposer$0$promise$1$0 | proposer$0$promise$1$1')[]

sort partition signature: acceptor$0$promise$0$0 | acceptor$0$promise$0$1

class signature: acceptor$0$promise$0$0


---------- QFormula: _get_class_constraint ----------

qvars: ['ACCEPTOR0:acceptor']

eq_terms: []

class signature: acceptor$0$promise$0$1


---------- QFormula: _get_class_constraint ----------

qvars: ['ACCEPTOR1:acceptor']

eq_terms: []


---------- QFormula: _get_diff_class_constraint ----------

qvars: ['ACCEPTOR1:acceptor', 'ACCEPTOR0:acceptor']

eq_terms: ['ACCEPTOR0:acceptor ~= ACCEPTOR1']

sort partition signature: proposer$0$leader$0$0; proposer$0$promise$1$0 | proposer$0$promise$1$1

class signature: proposer$0$leader$0$0; proposer$0$promise$1$0


---------- QFormula: _get_class_constraint ----------

qvars: ['PROPOSER0:proposer', 'PROPOSER1:proposer']

eq_terms: ['PROPOSER0:proposer = PROPOSER1']

class signature: proposer$0$promise$1$1


---------- QFormula: _get_class_constraint ----------

qvars: ['PROPOSER2:proposer']

eq_terms: []


---------- QFormula: _get_diff_class_constraint ----------

qvars: ['PROPOSER2:proposer', 'PROPOSER0:proposer']

eq_terms: ['PROPOSER0:proposer ~= PROPOSER2']

constraint: ['ACCEPTOR0:acceptor ~= ACCEPTOR1', 'PROPOSER0:proposer = PROPOSER1', 'PROPOSER0:proposer ~= PROPOSER2']


---------- QFormula: _get_partition_constraint ----------

partition: ('acceptor$0$promise$0$0; acceptor$0$promise$0$1', 'proposer$0$leader$0$0; proposer$0$promise$1$0 | proposer$0$promise$1$1')[]

sort partition signature: acceptor$0$promise$0$0; acceptor$0$promise$0$1

class signature: acceptor$0$promise$0$0; acceptor$0$promise$0$1


---------- QFormula: _get_class_constraint ----------

qvars: ['ACCEPTOR0:acceptor', 'ACCEPTOR1:acceptor']

eq_terms: ['ACCEPTOR0:acceptor = ACCEPTOR1']


---------- QFormula: _get_diff_class_constraint ----------

qvars: ['ACCEPTOR0:acceptor']

eq_terms: []

sort partition signature: proposer$0$leader$0$0; proposer$0$promise$1$0 | proposer$0$promise$1$1

class signature: proposer$0$leader$0$0; proposer$0$promise$1$0


---------- QFormula: _get_class_constraint ----------

qvars: ['PROPOSER0:proposer', 'PROPOSER1:proposer']

eq_terms: ['PROPOSER0:proposer = PROPOSER1']

class signature: proposer$0$promise$1$1


---------- QFormula: _get_class_constraint ----------

qvars: ['PROPOSER2:proposer']

eq_terms: []


---------- QFormula: _get_diff_class_constraint ----------

qvars: ['PROPOSER2:proposer', 'PROPOSER0:proposer']

eq_terms: ['PROPOSER0:proposer ~= PROPOSER2']

constraint: ['ACCEPTOR0:acceptor = ACCEPTOR1', 'PROPOSER0:proposer = PROPOSER1', 'PROPOSER0:proposer ~= PROPOSER2']


---------- QFormula: _get_partition_constraint ----------

partition: ('acceptor$0$promise$0$0 | acceptor$0$promise$0$1', 'proposer$0$leader$0$0; proposer$0$promise$1$0; proposer$0$promise$1$1')[]

sort partition signature: acceptor$0$promise$0$0 | acceptor$0$promise$0$1

class signature: acceptor$0$promise$0$0


---------- QFormula: _get_class_constraint ----------

qvars: ['ACCEPTOR0:acceptor']

eq_terms: []

class signature: acceptor$0$promise$0$1


---------- QFormula: _get_class_constraint ----------

qvars: ['ACCEPTOR1:acceptor']

eq_terms: []


---------- QFormula: _get_diff_class_constraint ----------

qvars: ['ACCEPTOR1:acceptor', 'ACCEPTOR0:acceptor']

eq_terms: ['ACCEPTOR0:acceptor ~= ACCEPTOR1']

sort partition signature: proposer$0$leader$0$0; proposer$0$promise$1$0; proposer$0$promise$1$1

class signature: proposer$0$leader$0$0; proposer$0$promise$1$0; proposer$0$promise$1$1


---------- QFormula: _get_class_constraint ----------

qvars: ['PROPOSER0:proposer', 'PROPOSER1:proposer', 'PROPOSER2:proposer']

eq_terms: ['PROPOSER0:proposer = PROPOSER1', 'PROPOSER0:proposer = PROPOSER2']


---------- QFormula: _get_diff_class_constraint ----------

qvars: ['PROPOSER0:proposer']

eq_terms: []

constraint: ['ACCEPTOR0:acceptor ~= ACCEPTOR1', 'PROPOSER0:proposer = PROPOSER1', 'PROPOSER0:proposer = PROPOSER2']


---------- QFormula: _get_partition_constraint ----------

partition: ('acceptor$0$promise$0$0; acceptor$0$promise$0$1', 'proposer$0$leader$0$0; proposer$0$promise$1$0; proposer$0$promise$1$1')[]

sort partition signature: acceptor$0$promise$0$0; acceptor$0$promise$0$1

class signature: acceptor$0$promise$0$0; acceptor$0$promise$0$1


---------- QFormula: _get_class_constraint ----------

qvars: ['ACCEPTOR0:acceptor', 'ACCEPTOR1:acceptor']

eq_terms: ['ACCEPTOR0:acceptor = ACCEPTOR1']


---------- QFormula: _get_diff_class_constraint ----------

qvars: ['ACCEPTOR0:acceptor']

eq_terms: []

sort partition signature: proposer$0$leader$0$0; proposer$0$promise$1$0; proposer$0$promise$1$1

class signature: proposer$0$leader$0$0; proposer$0$promise$1$0; proposer$0$promise$1$1


---------- QFormula: _get_class_constraint ----------

qvars: ['PROPOSER0:proposer', 'PROPOSER1:proposer', 'PROPOSER2:proposer']

eq_terms: ['PROPOSER0:proposer = PROPOSER1', 'PROPOSER0:proposer = PROPOSER2']


---------- QFormula: _get_diff_class_constraint ----------

qvars: ['PROPOSER0:proposer']

eq_terms: []

constraint: ['ACCEPTOR0:acceptor = ACCEPTOR1', 'PROPOSER0:proposer = PROPOSER1', 'PROPOSER0:proposer = PROPOSER2']


---------- QFormula: get_qclause ----------

qclause: forall PROPOSER0,PROPOSER1,PROPOSER2,ACCEPTOR1,ACCEPTOR0. ~promise(ACCEPTOR1,PROPOSER2) | ~promise(ACCEPTOR0,PROPOSER1) | ~leader(PROPOSER0) | ((ACCEPTOR0 = ACCEPTOR1 | PROPOSER1 ~= PROPOSER2 | PROPOSER0 = PROPOSER1) & (ACCEPTOR0 = ACCEPTOR1 | PROPOSER0 = PROPOSER1 | PROPOSER0 = PROPOSER2 | PROPOSER1 = PROPOSER2))


=== Prime Orbit 17 =====================
size : 9
num_suborbits: 1
285 (*) : -----0--------1-----0------
285     : ['leader(proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~promise(acceptor1,proposer2)']
286     : ----0--------1-----0-------
286     : ['leader(proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~promise(acceptor1,proposer1)']
287     : ---0--------1-----0--------
287     : ['leader(proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~promise(acceptor1,proposer0)']
288     : --0-----------1--------0---
288     : ['leader(proposer2)', '~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~promise(acceptor2,proposer2)']
289     : -0-----------1--------0----
289     : ['leader(proposer1)', '~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~promise(acceptor2,proposer1)']
290     : 0-----------1--------0-----
290     : ['leader(proposer0)', '~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~promise(acceptor2,proposer0)']
291     : --------0-----1--0---------
291     : ['leader(proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~promise(acceptor0,proposer2)']
292     : -------0-----1--0----------
292     : ['leader(proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~promise(acceptor0,proposer1)']
293     : ------0-----1--0-----------
293     : ['leader(proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~promise(acceptor0,proposer0)']
num_forall :   0
num_exists :   0
num_literals : 0
quantified form : None
qcost : 0




---------- QPrime ----------


---------- ConstArgBinding ----------

terms: ['~chosenAt(quorum__acceptor0_acceptor2,proposer2)', 'leader(proposer2)', '~promise(acceptor1,proposer2)', '~member(acceptor1,quorum__acceptor0_acceptor2)']

sign_func_name2args: {'1$chosenAt': [(Const('quorum__acceptor0_acceptor2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), Const('proposer2', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))))], '0$leader': [(Const('proposer2', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))),)], '1$promise': [(Const('acceptor1', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Const('proposer2', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))))], '1$member': [(Const('acceptor1', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Const('quorum__acceptor0_acceptor2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))))]}

const2sigs: {Const('quorum__acceptor0_acceptor2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))): [quorum$1$chosenAt$0$0, quorum$1$member$1$0], Const('proposer2', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))): [proposer$1$chosenAt$1$0, proposer$0$leader$0$0, proposer$1$promise$1$0], Const('acceptor1', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))): [acceptor$1$promise$0$0, acceptor$1$member$0$0]}

sig2const: {'quorum$1$chosenAt$0$0': Const('quorum__acceptor0_acceptor2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), 'proposer$1$chosenAt$1$0': Const('proposer2', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))), 'proposer$0$leader$0$0': Const('proposer2', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))), 'acceptor$1$promise$0$0': Const('acceptor1', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), 'proposer$1$promise$1$0': Const('proposer2', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))), 'acceptor$1$member$0$0': Const('acceptor1', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), 'quorum$1$member$1$0': Const('quorum__acceptor0_acceptor2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')))}


---------- ArgPartition ----------

sort2class_sigs: {EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')): [quorum$1$chosenAt$0$0; quorum$1$member$1$0], EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')): [proposer$0$leader$0$0; proposer$1$chosenAt$1$0; proposer$1$promise$1$0], EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')): [acceptor$1$member$0$0; acceptor$1$promise$0$0]}

sort2part_sig: {EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')): quorum$1$chosenAt$0$0; quorum$1$member$1$0, EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')): proposer$0$leader$0$0; proposer$1$chosenAt$1$0; proposer$1$promise$1$0, EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')): acceptor$1$member$0$0; acceptor$1$promise$0$0}

part_sig: ('acceptor$1$member$0$0; acceptor$1$promise$0$0', 'proposer$0$leader$0$0; proposer$1$chosenAt$1$0; proposer$1$promise$1$0', 'quorum$1$chosenAt$0$0; quorum$1$member$1$0')


---------- SigGenerator ----------

terms:  ['~chosenAt(quorum__acceptor0_acceptor2,proposer2)', 'leader(proposer2)', '~promise(acceptor1,proposer2)', '~member(acceptor1,quorum__acceptor0_acceptor2)']

func_name2symbol:  {'chosenAt': Const('chosenAt', FunctionSort(EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')), EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')), BooleanSort())), 'leader': Const('leader', FunctionSort(EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')), BooleanSort())), 'promise': Const('promise', FunctionSort(EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')), EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')), BooleanSort())), 'member': Const('member', FunctionSort(EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')), EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')), BooleanSort()))}

func_name2args_sort:  {'chosenAt': (EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')), EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))), 'leader': (EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')),), 'promise': (EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')), EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))), 'member': (EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')), EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')))}

sign_func_name2count:  {'1$chosenAt': 1, '0$leader': 1, '1$promise': 1, '1$member': 1}


---------- ProductArgPartition ----------

sort2class_sigs: {EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')): [quorum$1$chosenAt$0$0; quorum$1$member$1$0], EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')): [proposer$0$leader$0$0; proposer$1$chosenAt$1$0; proposer$1$promise$1$0], EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')): [acceptor$1$member$0$0; acceptor$1$promise$0$0]}

sort2part_sig: {EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')): quorum$1$chosenAt$0$0; quorum$1$member$1$0, EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')): proposer$0$leader$0$0; proposer$1$chosenAt$1$0; proposer$1$promise$1$0, EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')): acceptor$1$member$0$0; acceptor$1$promise$0$0}

	sort: quorum

	identical_classes: {'quorum$1$chosenAt$0; quorum$1$member$1': [quorum$1$chosenAt$0$0; quorum$1$member$1$0]}

	identical_single_classes: {'quorum$1$chosenAt$0; quorum$1$member$1': quorum$1$chosenAt$0$0; quorum$1$member$1$0}

	identical_multi_classes: {}

	sort: proposer

	identical_classes: {'proposer$0$leader$0; proposer$1$chosenAt$1; proposer$1$promise$1': [proposer$0$leader$0$0; proposer$1$chosenAt$1$0; proposer$1$promise$1$0]}

	identical_single_classes: {'proposer$0$leader$0; proposer$1$chosenAt$1; proposer$1$promise$1': proposer$0$leader$0$0; proposer$1$chosenAt$1$0; proposer$1$promise$1$0}

	identical_multi_classes: {}

	sort: acceptor

	identical_classes: {'acceptor$1$member$0; acceptor$1$promise$0': [acceptor$1$member$0$0; acceptor$1$promise$0$0]}

	identical_single_classes: {'acceptor$1$member$0; acceptor$1$promise$0': acceptor$1$member$0$0; acceptor$1$promise$0$0}

	identical_multi_classes: {}


---------- QInference: _set_sort_to_quantifier_mode ----------

quantifier mode: quorum: QuantifierMode.forall

quantifier mode: proposer: QuantifierMode.forall

quantifier mode: acceptor: QuantifierMode.forall


---------- QInference: _set_constraint_mode ----------

constraint mode: ConstraintMode.no_merge


---------- QFormula: _set_qvars ----------

forall_qvars: {Var('PROPOSER0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))), Var('QUORUM0', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), Var('ACCEPTOR0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')))}

exists_qvars: set()


---------- QFormula: _set_signed_func_name_to_args ----------

signed_func_name2args: {'1$chosenAt': [[Var('QUORUM0', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), Var('PROPOSER0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))]], '0$leader': [[Var('PROPOSER0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))]], '1$promise': [[Var('ACCEPTOR0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Var('PROPOSER0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))]], '1$member': [[Var('ACCEPTOR0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Var('QUORUM0', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')))]]}


---------- QFormula: _set_qterms ----------

qterms: ['~promise(ACCEPTOR0,PROPOSER0)', 'leader(PROPOSER0)', '~member(ACCEPTOR0,QUORUM0)', '~chosenAt(QUORUM0,PROPOSER0)']


---------- QFormula: get_qclause ----------

qclause: forall ACCEPTOR0,PROPOSER0,QUORUM0. promise(ACCEPTOR0,PROPOSER0) | ~leader(PROPOSER0) | member(ACCEPTOR0,QUORUM0) | chosenAt(QUORUM0,PROPOSER0)


=== Prime Orbit 18 =====================
size : 9
num_suborbits: 1
294 (*) : --------------1--0--0------
294     : ['leader(proposer2)', '~promise(acceptor0,proposer2)', '~promise(acceptor1,proposer2)']
295     : -------------1--0--0-------
295     : ['leader(proposer1)', '~promise(acceptor0,proposer1)', '~promise(acceptor1,proposer1)']
296     : ------------1--0--0--------
296     : ['leader(proposer0)', '~promise(acceptor0,proposer0)', '~promise(acceptor1,proposer0)']
297     : --------------1--0-----0---
297     : ['leader(proposer2)', '~promise(acceptor0,proposer2)', '~promise(acceptor2,proposer2)']
298     : -------------1--0-----0----
298     : ['leader(proposer1)', '~promise(acceptor0,proposer1)', '~promise(acceptor2,proposer1)']
299     : ------------1--0-----0-----
299     : ['leader(proposer0)', '~promise(acceptor0,proposer0)', '~promise(acceptor2,proposer0)']
300     : --------------1-----0--0---
300     : ['leader(proposer2)', '~promise(acceptor1,proposer2)', '~promise(acceptor2,proposer2)']
301     : -------------1-----0--0----
301     : ['leader(proposer1)', '~promise(acceptor1,proposer1)', '~promise(acceptor2,proposer1)']
302     : ------------1-----0--0-----
302     : ['leader(proposer0)', '~promise(acceptor1,proposer0)', '~promise(acceptor2,proposer0)']
num_forall :   0
num_exists :   0
num_literals : 0
quantified form : None
qcost : 0




---------- QPrime ----------


---------- ConstArgBinding ----------

terms: ['leader(proposer2)', '~promise(acceptor0,proposer2)', '~promise(acceptor1,proposer2)']

sign_func_name2args: {'0$leader': [(Const('proposer2', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))),)], '1$promise': [(Const('acceptor0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Const('proposer2', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))), (Const('acceptor1', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Const('proposer2', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))))]}

const2sigs: {Const('proposer2', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))): [proposer$0$leader$0$0, proposer$1$promise$1$0, proposer$1$promise$1$1], Const('acceptor0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))): [acceptor$1$promise$0$0], Const('acceptor1', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))): [acceptor$1$promise$0$1]}

sig2const: {'proposer$0$leader$0$0': Const('proposer2', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))), 'acceptor$1$promise$0$0': Const('acceptor0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), 'proposer$1$promise$1$0': Const('proposer2', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))), 'acceptor$1$promise$0$1': Const('acceptor1', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), 'proposer$1$promise$1$1': Const('proposer2', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))}


---------- ArgPartition ----------

sort2class_sigs: {EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')): [proposer$0$leader$0$0; proposer$1$promise$1$0; proposer$1$promise$1$1], EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')): [acceptor$1$promise$0$0, acceptor$1$promise$0$1]}

sort2part_sig: {EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')): proposer$0$leader$0$0; proposer$1$promise$1$0; proposer$1$promise$1$1, EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')): acceptor$1$promise$0$0 | acceptor$1$promise$0$1}

part_sig: ('acceptor$1$promise$0$0 | acceptor$1$promise$0$1', 'proposer$0$leader$0$0; proposer$1$promise$1$0; proposer$1$promise$1$1')


---------- SigGenerator ----------

terms:  ['leader(proposer2)', '~promise(acceptor0,proposer2)', '~promise(acceptor1,proposer2)']

func_name2symbol:  {'leader': Const('leader', FunctionSort(EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')), BooleanSort())), 'promise': Const('promise', FunctionSort(EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')), EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')), BooleanSort()))}

func_name2args_sort:  {'leader': (EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')),), 'promise': (EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')), EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))}

sign_func_name2count:  {'0$leader': 1, '1$promise': 2}


---------- ProductArgPartition ----------

sort2class_sigs: {EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')): [proposer$0$leader$0$0; proposer$1$promise$1$0; proposer$1$promise$1$1], EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')): [acceptor$1$promise$0$0, acceptor$1$promise$0$1]}

sort2part_sig: {EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')): proposer$0$leader$0$0; proposer$1$promise$1$0; proposer$1$promise$1$1, EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')): acceptor$1$promise$0$0 | acceptor$1$promise$0$1}

	sort: proposer

	identical_classes: {'proposer$0$leader$0; proposer$1$promise$1; proposer$1$promise$1': [proposer$0$leader$0$0; proposer$1$promise$1$0; proposer$1$promise$1$1]}

	identical_single_classes: {'proposer$0$leader$0; proposer$1$promise$1; proposer$1$promise$1': proposer$0$leader$0$0; proposer$1$promise$1$0; proposer$1$promise$1$1}

	identical_multi_classes: {}

	sort: acceptor

	identical_classes: {'acceptor$1$promise$0': [acceptor$1$promise$0$0, acceptor$1$promise$0$1]}

	identical_single_classes: {}

	identical_multi_classes: {'acceptor$1$promise$0': [acceptor$1$promise$0$0, acceptor$1$promise$0$1]}


---------- QInference: _set_sort_to_quantifier_mode ----------

quantifier mode: proposer: QuantifierMode.forall

quantifier mode: acceptor: QuantifierMode.forall


---------- QInference: _set_constraint_mode ----------

constraint mode: ConstraintMode.no_merge


---------- QFormula: _set_qvars ----------

forall_qvars: {Var('ACCEPTOR1', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Var('PROPOSER0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))), Var('ACCEPTOR0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')))}

exists_qvars: set()


---------- QFormula: _set_signed_func_name_to_args ----------

signed_func_name2args: {'0$leader': [[Var('PROPOSER0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))]], '1$promise': [[Var('ACCEPTOR0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Var('PROPOSER0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))], [Var('ACCEPTOR1', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Var('PROPOSER0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))]]}


---------- QFormula: _set_qterms ----------

qterms: ['~promise(ACCEPTOR0,PROPOSER0)', 'leader(PROPOSER0)', '~promise(ACCEPTOR1,PROPOSER0)']


---------- QFormula: get_qclause ----------

qclause: forall ACCEPTOR1,ACCEPTOR0,PROPOSER0. promise(ACCEPTOR0,PROPOSER0) | ~leader(PROPOSER0) | promise(ACCEPTOR1,PROPOSER0) | ACCEPTOR0 = ACCEPTOR1


=== Prime Orbit 19 =====================
size : 36
num_suborbits: 1
303 (*) : ---------1----1-------1----
303     : ['didNotPromise(acceptor0)', 'leader(proposer2)', 'promise(acceptor2,proposer1)']
304     : ---------1---1---------1---
304     : ['didNotPromise(acceptor0)', 'leader(proposer1)', 'promise(acceptor2,proposer2)']
305     : ---------1----1------1-----
305     : ['didNotPromise(acceptor0)', 'leader(proposer2)', 'promise(acceptor2,proposer0)']
306     : ---------1--1----------1---
306     : ['didNotPromise(acceptor0)', 'leader(proposer0)', 'promise(acceptor2,proposer2)']
307     : ---------1---1-------1-----
307     : ['didNotPromise(acceptor0)', 'leader(proposer1)', 'promise(acceptor2,proposer0)']
308     : ---------1--1---------1----
308     : ['didNotPromise(acceptor0)', 'leader(proposer0)', 'promise(acceptor2,proposer1)']
309     : ---------1----1----1-------
309     : ['didNotPromise(acceptor0)', 'leader(proposer2)', 'promise(acceptor1,proposer1)']
310     : ---------1---1------1------
310     : ['didNotPromise(acceptor0)', 'leader(proposer1)', 'promise(acceptor1,proposer2)']
311     : ---------1----1---1--------
311     : ['didNotPromise(acceptor0)', 'leader(proposer2)', 'promise(acceptor1,proposer0)']
312     : ---------1--1-------1------
312     : ['didNotPromise(acceptor0)', 'leader(proposer0)', 'promise(acceptor1,proposer2)']
313     : ---------1---1----1--------
313     : ['didNotPromise(acceptor0)', 'leader(proposer1)', 'promise(acceptor1,proposer0)']
314     : ---------1--1------1-------
314     : ['didNotPromise(acceptor0)', 'leader(proposer0)', 'promise(acceptor1,proposer1)']
315     : ----------1---1-------1----
315     : ['didNotPromise(acceptor1)', 'leader(proposer2)', 'promise(acceptor2,proposer1)']
316     : ----------1--1---------1---
316     : ['didNotPromise(acceptor1)', 'leader(proposer1)', 'promise(acceptor2,proposer2)']
317     : ----------1---1------1-----
317     : ['didNotPromise(acceptor1)', 'leader(proposer2)', 'promise(acceptor2,proposer0)']
318     : ----------1-1----------1---
318     : ['didNotPromise(acceptor1)', 'leader(proposer0)', 'promise(acceptor2,proposer2)']
319     : ----------1--1-------1-----
319     : ['didNotPromise(acceptor1)', 'leader(proposer1)', 'promise(acceptor2,proposer0)']
320     : ----------1-1---------1----
320     : ['didNotPromise(acceptor1)', 'leader(proposer0)', 'promise(acceptor2,proposer1)']
321     : ----------1---1-1----------
321     : ['didNotPromise(acceptor1)', 'leader(proposer2)', 'promise(acceptor0,proposer1)']
322     : ----------1--1---1---------
322     : ['didNotPromise(acceptor1)', 'leader(proposer1)', 'promise(acceptor0,proposer2)']
323     : ----------1---11-----------
323     : ['didNotPromise(acceptor1)', 'leader(proposer2)', 'promise(acceptor0,proposer0)']
324     : ----------1-1----1---------
324     : ['didNotPromise(acceptor1)', 'leader(proposer0)', 'promise(acceptor0,proposer2)']
325     : ----------1--1-1-----------
325     : ['didNotPromise(acceptor1)', 'leader(proposer1)', 'promise(acceptor0,proposer0)']
326     : ----------1-1---1----------
326     : ['didNotPromise(acceptor1)', 'leader(proposer0)', 'promise(acceptor0,proposer1)']
327     : -----------1--1----1-------
327     : ['didNotPromise(acceptor2)', 'leader(proposer2)', 'promise(acceptor1,proposer1)']
328     : -----------1-1------1------
328     : ['didNotPromise(acceptor2)', 'leader(proposer1)', 'promise(acceptor1,proposer2)']
329     : -----------1--1---1--------
329     : ['didNotPromise(acceptor2)', 'leader(proposer2)', 'promise(acceptor1,proposer0)']
330     : -----------11-------1------
330     : ['didNotPromise(acceptor2)', 'leader(proposer0)', 'promise(acceptor1,proposer2)']
331     : -----------1-1----1--------
331     : ['didNotPromise(acceptor2)', 'leader(proposer1)', 'promise(acceptor1,proposer0)']
332     : -----------11------1-------
332     : ['didNotPromise(acceptor2)', 'leader(proposer0)', 'promise(acceptor1,proposer1)']
333     : -----------1--1-1----------
333     : ['didNotPromise(acceptor2)', 'leader(proposer2)', 'promise(acceptor0,proposer1)']
334     : -----------1-1---1---------
334     : ['didNotPromise(acceptor2)', 'leader(proposer1)', 'promise(acceptor0,proposer2)']
335     : -----------1--11-----------
335     : ['didNotPromise(acceptor2)', 'leader(proposer2)', 'promise(acceptor0,proposer0)']
336     : -----------11----1---------
336     : ['didNotPromise(acceptor2)', 'leader(proposer0)', 'promise(acceptor0,proposer2)']
337     : -----------1-1-1-----------
337     : ['didNotPromise(acceptor2)', 'leader(proposer1)', 'promise(acceptor0,proposer0)']
338     : -----------11---1----------
338     : ['didNotPromise(acceptor2)', 'leader(proposer0)', 'promise(acceptor0,proposer1)']
num_forall :   0
num_exists :   0
num_literals : 0
quantified form : None
qcost : 0




---------- QPrime ----------


---------- ConstArgBinding ----------

terms: ['didNotPromise(acceptor0)', 'leader(proposer2)', 'promise(acceptor2,proposer1)']

sign_func_name2args: {'0$didNotPromise': [(Const('acceptor0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))),)], '0$leader': [(Const('proposer2', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))),)], '0$promise': [(Const('acceptor2', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Const('proposer1', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))))]}

const2sigs: {Const('acceptor0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))): [acceptor$0$didNotPromise$0$0], Const('proposer2', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))): [proposer$0$leader$0$0], Const('acceptor2', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))): [acceptor$0$promise$0$0], Const('proposer1', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))): [proposer$0$promise$1$0]}

sig2const: {'acceptor$0$didNotPromise$0$0': Const('acceptor0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), 'proposer$0$leader$0$0': Const('proposer2', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))), 'acceptor$0$promise$0$0': Const('acceptor2', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), 'proposer$0$promise$1$0': Const('proposer1', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))}


---------- ArgPartition ----------

sort2class_sigs: {EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')): [acceptor$0$didNotPromise$0$0, acceptor$0$promise$0$0], EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')): [proposer$0$leader$0$0, proposer$0$promise$1$0]}

sort2part_sig: {EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')): acceptor$0$didNotPromise$0$0 | acceptor$0$promise$0$0, EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')): proposer$0$leader$0$0 | proposer$0$promise$1$0}

part_sig: ('acceptor$0$didNotPromise$0$0 | acceptor$0$promise$0$0', 'proposer$0$leader$0$0 | proposer$0$promise$1$0')


---------- SigGenerator ----------

terms:  ['didNotPromise(acceptor0)', 'leader(proposer2)', 'promise(acceptor2,proposer1)']

func_name2symbol:  {'didNotPromise': Const('didNotPromise', FunctionSort(EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')), BooleanSort())), 'leader': Const('leader', FunctionSort(EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')), BooleanSort())), 'promise': Const('promise', FunctionSort(EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')), EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')), BooleanSort()))}

func_name2args_sort:  {'didNotPromise': (EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')),), 'leader': (EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')),), 'promise': (EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')), EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))}

sign_func_name2count:  {'0$didNotPromise': 1, '0$leader': 1, '0$promise': 1}


---------- ProductArgPartition ----------

sort2class_sigs: {EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')): [acceptor$0$didNotPromise$0$0, acceptor$0$promise$0$0], EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')): [proposer$0$leader$0$0, proposer$0$promise$1$0]}

sort2part_sig: {EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')): acceptor$0$didNotPromise$0$0 | acceptor$0$promise$0$0, EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')): proposer$0$leader$0$0 | proposer$0$promise$1$0}

	sort: acceptor

	identical_classes: {'acceptor$0$didNotPromise$0': [acceptor$0$didNotPromise$0$0], 'acceptor$0$promise$0': [acceptor$0$promise$0$0]}

	identical_single_classes: {'acceptor$0$didNotPromise$0': acceptor$0$didNotPromise$0$0, 'acceptor$0$promise$0': acceptor$0$promise$0$0}

	identical_multi_classes: {}

	sort: proposer

	identical_classes: {'proposer$0$leader$0': [proposer$0$leader$0$0], 'proposer$0$promise$1': [proposer$0$promise$1$0]}

	identical_single_classes: {'proposer$0$leader$0': proposer$0$leader$0$0, 'proposer$0$promise$1': proposer$0$promise$1$0}

	identical_multi_classes: {}


---------- QInference: _set_sort_to_quantifier_mode ----------

quantifier mode: acceptor: QuantifierMode.forall

quantifier mode: proposer: QuantifierMode.forall


---------- QInference: _set_constraint_mode ----------

constraint mode: ConstraintMode.no_merge


---------- QFormula: _set_qvars ----------

forall_qvars: {Var('PROPOSER1', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))), Var('ACCEPTOR1', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Var('PROPOSER0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))), Var('ACCEPTOR0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')))}

exists_qvars: set()


---------- QFormula: _set_signed_func_name_to_args ----------

signed_func_name2args: {'0$didNotPromise': [[Var('ACCEPTOR0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')))]], '0$leader': [[Var('PROPOSER0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))]], '0$promise': [[Var('ACCEPTOR1', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Var('PROPOSER1', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))]]}


---------- QFormula: _set_qterms ----------

qterms: ['leader(PROPOSER0)', 'didNotPromise(ACCEPTOR0)', 'promise(ACCEPTOR1,PROPOSER1)']


---------- QFormula: get_qclause ----------

qclause: forall PROPOSER1,ACCEPTOR0,ACCEPTOR1,PROPOSER0. ~leader(PROPOSER0) | ~didNotPromise(ACCEPTOR0) | ~promise(ACCEPTOR1,PROPOSER1) | (PROPOSER0 = PROPOSER1 | ACCEPTOR0 = ACCEPTOR1)


=== Prime Orbit 20 =====================
size : 18
num_suborbits: 1
339 (*) : ---------1----1-----0------
339     : ['didNotPromise(acceptor0)', 'leader(proposer2)', '~promise(acceptor1,proposer2)']
340     : ---------1---1-----0-------
340     : ['didNotPromise(acceptor0)', 'leader(proposer1)', '~promise(acceptor1,proposer1)']
341     : ---------1--1-----0--------
341     : ['didNotPromise(acceptor0)', 'leader(proposer0)', '~promise(acceptor1,proposer0)']
342     : ---------1----1--------0---
342     : ['didNotPromise(acceptor0)', 'leader(proposer2)', '~promise(acceptor2,proposer2)']
343     : ---------1---1--------0----
343     : ['didNotPromise(acceptor0)', 'leader(proposer1)', '~promise(acceptor2,proposer1)']
344     : ---------1--1--------0-----
344     : ['didNotPromise(acceptor0)', 'leader(proposer0)', '~promise(acceptor2,proposer0)']
345     : ----------1---1--0---------
345     : ['didNotPromise(acceptor1)', 'leader(proposer2)', '~promise(acceptor0,proposer2)']
346     : ----------1--1--0----------
346     : ['didNotPromise(acceptor1)', 'leader(proposer1)', '~promise(acceptor0,proposer1)']
347     : ----------1-1--0-----------
347     : ['didNotPromise(acceptor1)', 'leader(proposer0)', '~promise(acceptor0,proposer0)']
348     : ----------1---1--------0---
348     : ['didNotPromise(acceptor1)', 'leader(proposer2)', '~promise(acceptor2,proposer2)']
349     : ----------1--1--------0----
349     : ['didNotPromise(acceptor1)', 'leader(proposer1)', '~promise(acceptor2,proposer1)']
350     : ----------1-1--------0-----
350     : ['didNotPromise(acceptor1)', 'leader(proposer0)', '~promise(acceptor2,proposer0)']
351     : -----------1--1--0---------
351     : ['didNotPromise(acceptor2)', 'leader(proposer2)', '~promise(acceptor0,proposer2)']
352     : -----------1-1--0----------
352     : ['didNotPromise(acceptor2)', 'leader(proposer1)', '~promise(acceptor0,proposer1)']
353     : -----------11--0-----------
353     : ['didNotPromise(acceptor2)', 'leader(proposer0)', '~promise(acceptor0,proposer0)']
354     : -----------1--1-----0------
354     : ['didNotPromise(acceptor2)', 'leader(proposer2)', '~promise(acceptor1,proposer2)']
355     : -----------1-1-----0-------
355     : ['didNotPromise(acceptor2)', 'leader(proposer1)', '~promise(acceptor1,proposer1)']
356     : -----------11-----0--------
356     : ['didNotPromise(acceptor2)', 'leader(proposer0)', '~promise(acceptor1,proposer0)']
num_forall :   0
num_exists :   0
num_literals : 0
quantified form : None
qcost : 0




---------- QPrime ----------


---------- ConstArgBinding ----------

terms: ['didNotPromise(acceptor0)', 'leader(proposer2)', '~promise(acceptor1,proposer2)']

sign_func_name2args: {'0$didNotPromise': [(Const('acceptor0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))),)], '0$leader': [(Const('proposer2', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))),)], '1$promise': [(Const('acceptor1', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Const('proposer2', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))))]}

const2sigs: {Const('acceptor0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))): [acceptor$0$didNotPromise$0$0], Const('proposer2', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))): [proposer$0$leader$0$0, proposer$1$promise$1$0], Const('acceptor1', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))): [acceptor$1$promise$0$0]}

sig2const: {'acceptor$0$didNotPromise$0$0': Const('acceptor0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), 'proposer$0$leader$0$0': Const('proposer2', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))), 'acceptor$1$promise$0$0': Const('acceptor1', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), 'proposer$1$promise$1$0': Const('proposer2', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))}


---------- ArgPartition ----------

sort2class_sigs: {EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')): [acceptor$0$didNotPromise$0$0, acceptor$1$promise$0$0], EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')): [proposer$0$leader$0$0; proposer$1$promise$1$0]}

sort2part_sig: {EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')): acceptor$0$didNotPromise$0$0 | acceptor$1$promise$0$0, EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')): proposer$0$leader$0$0; proposer$1$promise$1$0}

part_sig: ('acceptor$0$didNotPromise$0$0 | acceptor$1$promise$0$0', 'proposer$0$leader$0$0; proposer$1$promise$1$0')


---------- SigGenerator ----------

terms:  ['didNotPromise(acceptor0)', 'leader(proposer2)', '~promise(acceptor1,proposer2)']

func_name2symbol:  {'didNotPromise': Const('didNotPromise', FunctionSort(EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')), BooleanSort())), 'leader': Const('leader', FunctionSort(EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')), BooleanSort())), 'promise': Const('promise', FunctionSort(EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')), EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')), BooleanSort()))}

func_name2args_sort:  {'didNotPromise': (EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')),), 'leader': (EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')),), 'promise': (EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')), EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))}

sign_func_name2count:  {'0$didNotPromise': 1, '0$leader': 1, '1$promise': 1}


---------- ProductArgPartition ----------

sort2class_sigs: {EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')): [acceptor$0$didNotPromise$0$0, acceptor$1$promise$0$0], EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')): [proposer$0$leader$0$0; proposer$1$promise$1$0]}

sort2part_sig: {EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')): acceptor$0$didNotPromise$0$0 | acceptor$1$promise$0$0, EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')): proposer$0$leader$0$0; proposer$1$promise$1$0}

	sort: acceptor

	identical_classes: {'acceptor$0$didNotPromise$0': [acceptor$0$didNotPromise$0$0], 'acceptor$1$promise$0': [acceptor$1$promise$0$0]}

	identical_single_classes: {'acceptor$0$didNotPromise$0': acceptor$0$didNotPromise$0$0, 'acceptor$1$promise$0': acceptor$1$promise$0$0}

	identical_multi_classes: {}

	sort: proposer

	identical_classes: {'proposer$0$leader$0; proposer$1$promise$1': [proposer$0$leader$0$0; proposer$1$promise$1$0]}

	identical_single_classes: {'proposer$0$leader$0; proposer$1$promise$1': proposer$0$leader$0$0; proposer$1$promise$1$0}

	identical_multi_classes: {}


---------- QInference: _set_sort_to_quantifier_mode ----------

quantifier mode: acceptor: QuantifierMode.forall

quantifier mode: proposer: QuantifierMode.forall


---------- QInference: _set_constraint_mode ----------

constraint mode: ConstraintMode.no_merge


---------- QFormula: _set_qvars ----------

forall_qvars: {Var('ACCEPTOR1', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Var('PROPOSER0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))), Var('ACCEPTOR0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')))}

exists_qvars: set()


---------- QFormula: _set_signed_func_name_to_args ----------

signed_func_name2args: {'0$didNotPromise': [[Var('ACCEPTOR0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')))]], '0$leader': [[Var('PROPOSER0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))]], '1$promise': [[Var('ACCEPTOR1', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Var('PROPOSER0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))]]}


---------- QFormula: _set_qterms ----------

qterms: ['leader(PROPOSER0)', 'didNotPromise(ACCEPTOR0)', '~promise(ACCEPTOR1,PROPOSER0)']


---------- QFormula: get_qclause ----------

qclause: forall ACCEPTOR1,ACCEPTOR0,PROPOSER0. ~leader(PROPOSER0) | ~didNotPromise(ACCEPTOR0) | promise(ACCEPTOR1,PROPOSER0) | ACCEPTOR0 = ACCEPTOR1


=== Prime Orbit 21 =====================
size : 9
num_suborbits: 1
357 (*) : --------01----1------------
357     : ['didNotPromise(acceptor0)', 'leader(proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)']
358     : -------0-1---1-------------
358     : ['didNotPromise(acceptor0)', 'leader(proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)']
359     : ------0--1--1--------------
359     : ['didNotPromise(acceptor0)', 'leader(proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)']
360     : -----0----1---1------------
360     : ['didNotPromise(acceptor1)', 'leader(proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)']
361     : ----0-----1--1-------------
361     : ['didNotPromise(acceptor1)', 'leader(proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)']
362     : ---0------1-1--------------
362     : ['didNotPromise(acceptor1)', 'leader(proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)']
363     : --0--------1--1------------
363     : ['didNotPromise(acceptor2)', 'leader(proposer2)', '~chosenAt(quorum__acceptor0_acceptor1,proposer2)']
364     : -0---------1-1-------------
364     : ['didNotPromise(acceptor2)', 'leader(proposer1)', '~chosenAt(quorum__acceptor0_acceptor1,proposer1)']
365     : 0----------11--------------
365     : ['didNotPromise(acceptor2)', 'leader(proposer0)', '~chosenAt(quorum__acceptor0_acceptor1,proposer0)']
num_forall :   0
num_exists :   0
num_literals : 0
quantified form : None
qcost : 0




---------- QPrime ----------


---------- ConstArgBinding ----------

terms: ['~chosenAt(quorum__acceptor1_acceptor2,proposer2)', 'didNotPromise(acceptor0)', 'leader(proposer2)', '~member(acceptor0,quorum__acceptor1_acceptor2)']

sign_func_name2args: {'1$chosenAt': [(Const('quorum__acceptor1_acceptor2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), Const('proposer2', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))))], '0$didNotPromise': [(Const('acceptor0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))),)], '0$leader': [(Const('proposer2', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))),)], '1$member': [(Const('acceptor0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Const('quorum__acceptor1_acceptor2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))))]}

const2sigs: {Const('quorum__acceptor1_acceptor2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))): [quorum$1$chosenAt$0$0, quorum$1$member$1$0], Const('proposer2', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))): [proposer$1$chosenAt$1$0, proposer$0$leader$0$0], Const('acceptor0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))): [acceptor$0$didNotPromise$0$0, acceptor$1$member$0$0]}

sig2const: {'quorum$1$chosenAt$0$0': Const('quorum__acceptor1_acceptor2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), 'proposer$1$chosenAt$1$0': Const('proposer2', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))), 'acceptor$0$didNotPromise$0$0': Const('acceptor0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), 'proposer$0$leader$0$0': Const('proposer2', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))), 'acceptor$1$member$0$0': Const('acceptor0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), 'quorum$1$member$1$0': Const('quorum__acceptor1_acceptor2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')))}


---------- ArgPartition ----------

sort2class_sigs: {EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')): [quorum$1$chosenAt$0$0; quorum$1$member$1$0], EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')): [proposer$0$leader$0$0; proposer$1$chosenAt$1$0], EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')): [acceptor$0$didNotPromise$0$0; acceptor$1$member$0$0]}

sort2part_sig: {EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')): quorum$1$chosenAt$0$0; quorum$1$member$1$0, EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')): proposer$0$leader$0$0; proposer$1$chosenAt$1$0, EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')): acceptor$0$didNotPromise$0$0; acceptor$1$member$0$0}

part_sig: ('acceptor$0$didNotPromise$0$0; acceptor$1$member$0$0', 'proposer$0$leader$0$0; proposer$1$chosenAt$1$0', 'quorum$1$chosenAt$0$0; quorum$1$member$1$0')


---------- SigGenerator ----------

terms:  ['~chosenAt(quorum__acceptor1_acceptor2,proposer2)', 'didNotPromise(acceptor0)', 'leader(proposer2)', '~member(acceptor0,quorum__acceptor1_acceptor2)']

func_name2symbol:  {'chosenAt': Const('chosenAt', FunctionSort(EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')), EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')), BooleanSort())), 'didNotPromise': Const('didNotPromise', FunctionSort(EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')), BooleanSort())), 'leader': Const('leader', FunctionSort(EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')), BooleanSort())), 'member': Const('member', FunctionSort(EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')), EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')), BooleanSort()))}

func_name2args_sort:  {'chosenAt': (EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')), EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))), 'didNotPromise': (EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')),), 'leader': (EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')),), 'member': (EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')), EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')))}

sign_func_name2count:  {'1$chosenAt': 1, '0$didNotPromise': 1, '0$leader': 1, '1$member': 1}


---------- ProductArgPartition ----------

sort2class_sigs: {EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')): [quorum$1$chosenAt$0$0; quorum$1$member$1$0], EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')): [proposer$0$leader$0$0; proposer$1$chosenAt$1$0], EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')): [acceptor$0$didNotPromise$0$0; acceptor$1$member$0$0]}

sort2part_sig: {EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')): quorum$1$chosenAt$0$0; quorum$1$member$1$0, EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')): proposer$0$leader$0$0; proposer$1$chosenAt$1$0, EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')): acceptor$0$didNotPromise$0$0; acceptor$1$member$0$0}

	sort: quorum

	identical_classes: {'quorum$1$chosenAt$0; quorum$1$member$1': [quorum$1$chosenAt$0$0; quorum$1$member$1$0]}

	identical_single_classes: {'quorum$1$chosenAt$0; quorum$1$member$1': quorum$1$chosenAt$0$0; quorum$1$member$1$0}

	identical_multi_classes: {}

	sort: proposer

	identical_classes: {'proposer$0$leader$0; proposer$1$chosenAt$1': [proposer$0$leader$0$0; proposer$1$chosenAt$1$0]}

	identical_single_classes: {'proposer$0$leader$0; proposer$1$chosenAt$1': proposer$0$leader$0$0; proposer$1$chosenAt$1$0}

	identical_multi_classes: {}

	sort: acceptor

	identical_classes: {'acceptor$0$didNotPromise$0; acceptor$1$member$0': [acceptor$0$didNotPromise$0$0; acceptor$1$member$0$0]}

	identical_single_classes: {'acceptor$0$didNotPromise$0; acceptor$1$member$0': acceptor$0$didNotPromise$0$0; acceptor$1$member$0$0}

	identical_multi_classes: {}


---------- QInference: _set_sort_to_quantifier_mode ----------

quantifier mode: quorum: QuantifierMode.forall

quantifier mode: proposer: QuantifierMode.forall

quantifier mode: acceptor: QuantifierMode.forall


---------- QInference: _set_constraint_mode ----------

constraint mode: ConstraintMode.no_merge


---------- QFormula: _set_qvars ----------

forall_qvars: {Var('PROPOSER0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))), Var('QUORUM0', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), Var('ACCEPTOR0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')))}

exists_qvars: set()


---------- QFormula: _set_signed_func_name_to_args ----------

signed_func_name2args: {'1$chosenAt': [[Var('QUORUM0', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), Var('PROPOSER0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))]], '0$didNotPromise': [[Var('ACCEPTOR0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')))]], '0$leader': [[Var('PROPOSER0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))]], '1$member': [[Var('ACCEPTOR0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Var('QUORUM0', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')))]]}


---------- QFormula: _set_qterms ----------

qterms: ['~member(ACCEPTOR0,QUORUM0)', 'didNotPromise(ACCEPTOR0)', 'leader(PROPOSER0)', '~chosenAt(QUORUM0,PROPOSER0)']


---------- QFormula: get_qclause ----------

qclause: forall ACCEPTOR0,PROPOSER0,QUORUM0. member(ACCEPTOR0,QUORUM0) | ~didNotPromise(ACCEPTOR0) | ~leader(PROPOSER0) | chosenAt(QUORUM0,PROPOSER0)


=== Prime Orbit 22 =====================
size : 9
num_suborbits: 1
366 (*) : ---------11---1------------
366     : ['didNotPromise(acceptor0)', 'didNotPromise(acceptor1)', 'leader(proposer2)']
367     : ---------11--1-------------
367     : ['didNotPromise(acceptor0)', 'didNotPromise(acceptor1)', 'leader(proposer1)']
368     : ---------11-1--------------
368     : ['didNotPromise(acceptor0)', 'didNotPromise(acceptor1)', 'leader(proposer0)']
369     : ---------1-1--1------------
369     : ['didNotPromise(acceptor0)', 'didNotPromise(acceptor2)', 'leader(proposer2)']
370     : ---------1-1-1-------------
370     : ['didNotPromise(acceptor0)', 'didNotPromise(acceptor2)', 'leader(proposer1)']
371     : ---------1-11--------------
371     : ['didNotPromise(acceptor0)', 'didNotPromise(acceptor2)', 'leader(proposer0)']
372     : ----------11--1------------
372     : ['didNotPromise(acceptor1)', 'didNotPromise(acceptor2)', 'leader(proposer2)']
373     : ----------11-1-------------
373     : ['didNotPromise(acceptor1)', 'didNotPromise(acceptor2)', 'leader(proposer1)']
374     : ----------111--------------
374     : ['didNotPromise(acceptor1)', 'didNotPromise(acceptor2)', 'leader(proposer0)']
num_forall :   0
num_exists :   0
num_literals : 0
quantified form : None
qcost : 0




---------- QPrime ----------


---------- ConstArgBinding ----------

terms: ['didNotPromise(acceptor0)', 'didNotPromise(acceptor1)', 'leader(proposer2)']

sign_func_name2args: {'0$didNotPromise': [(Const('acceptor0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))),), (Const('acceptor1', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))),)], '0$leader': [(Const('proposer2', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))),)]}

const2sigs: {Const('acceptor0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))): [acceptor$0$didNotPromise$0$0], Const('acceptor1', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))): [acceptor$0$didNotPromise$0$1], Const('proposer2', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))): [proposer$0$leader$0$0]}

sig2const: {'acceptor$0$didNotPromise$0$0': Const('acceptor0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), 'acceptor$0$didNotPromise$0$1': Const('acceptor1', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), 'proposer$0$leader$0$0': Const('proposer2', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))}


---------- ArgPartition ----------

sort2class_sigs: {EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')): [acceptor$0$didNotPromise$0$0, acceptor$0$didNotPromise$0$1], EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')): [proposer$0$leader$0$0]}

sort2part_sig: {EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')): acceptor$0$didNotPromise$0$0 | acceptor$0$didNotPromise$0$1, EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')): proposer$0$leader$0$0}

part_sig: ('acceptor$0$didNotPromise$0$0 | acceptor$0$didNotPromise$0$1', 'proposer$0$leader$0$0')


---------- SigGenerator ----------

terms:  ['didNotPromise(acceptor0)', 'didNotPromise(acceptor1)', 'leader(proposer2)']

func_name2symbol:  {'didNotPromise': Const('didNotPromise', FunctionSort(EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')), BooleanSort())), 'leader': Const('leader', FunctionSort(EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')), BooleanSort()))}

func_name2args_sort:  {'didNotPromise': (EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')),), 'leader': (EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')),)}

sign_func_name2count:  {'0$didNotPromise': 2, '0$leader': 1}


---------- ProductArgPartition ----------

sort2class_sigs: {EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')): [acceptor$0$didNotPromise$0$0, acceptor$0$didNotPromise$0$1], EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')): [proposer$0$leader$0$0]}

sort2part_sig: {EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')): acceptor$0$didNotPromise$0$0 | acceptor$0$didNotPromise$0$1, EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')): proposer$0$leader$0$0}

	sort: acceptor

	identical_classes: {'acceptor$0$didNotPromise$0': [acceptor$0$didNotPromise$0$0, acceptor$0$didNotPromise$0$1]}

	identical_single_classes: {}

	identical_multi_classes: {'acceptor$0$didNotPromise$0': [acceptor$0$didNotPromise$0$0, acceptor$0$didNotPromise$0$1]}

	sort: proposer

	identical_classes: {'proposer$0$leader$0': [proposer$0$leader$0$0]}

	identical_single_classes: {'proposer$0$leader$0': proposer$0$leader$0$0}

	identical_multi_classes: {}


---------- QInference: _set_sort_to_quantifier_mode ----------

quantifier mode: acceptor: QuantifierMode.forall

quantifier mode: proposer: QuantifierMode.forall


---------- QInference: _set_constraint_mode ----------

constraint mode: ConstraintMode.no_merge


---------- QFormula: _set_qvars ----------

forall_qvars: {Var('ACCEPTOR1', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Var('PROPOSER0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))), Var('ACCEPTOR0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')))}

exists_qvars: set()


---------- QFormula: _set_signed_func_name_to_args ----------

signed_func_name2args: {'0$didNotPromise': [[Var('ACCEPTOR0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')))], [Var('ACCEPTOR1', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')))]], '0$leader': [[Var('PROPOSER0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))]]}


---------- QFormula: _set_qterms ----------

qterms: ['didNotPromise(ACCEPTOR1)', 'leader(PROPOSER0)', 'didNotPromise(ACCEPTOR0)']


---------- QFormula: get_qclause ----------

qclause: forall ACCEPTOR1,ACCEPTOR0,PROPOSER0. ~didNotPromise(ACCEPTOR1) | ~leader(PROPOSER0) | ~didNotPromise(ACCEPTOR0) | ACCEPTOR0 = ACCEPTOR1


=== Prime Orbit 23 =====================
size : 9
num_suborbits: 1
375 (*) : ----------0-------00------0
375     : ['~didNotPromise(acceptor1)', '~promise(acceptor1,proposer0)', '~promise(acceptor1,proposer1)', '~start(proposer2)']
376     : ----------0-------0-0----0-
376     : ['~didNotPromise(acceptor1)', '~promise(acceptor1,proposer0)', '~promise(acceptor1,proposer2)', '~start(proposer1)']
377     : ----------0--------00---0--
377     : ['~didNotPromise(acceptor1)', '~promise(acceptor1,proposer1)', '~promise(acceptor1,proposer2)', '~start(proposer0)']
378     : -----------0---------00---0
378     : ['~didNotPromise(acceptor2)', '~promise(acceptor2,proposer0)', '~promise(acceptor2,proposer1)', '~start(proposer2)']
379     : -----------0---------0-0-0-
379     : ['~didNotPromise(acceptor2)', '~promise(acceptor2,proposer0)', '~promise(acceptor2,proposer2)', '~start(proposer1)']
380     : -----------0----------000--
380     : ['~didNotPromise(acceptor2)', '~promise(acceptor2,proposer1)', '~promise(acceptor2,proposer2)', '~start(proposer0)']
381     : ---------0-----00---------0
381     : ['~didNotPromise(acceptor0)', '~promise(acceptor0,proposer0)', '~promise(acceptor0,proposer1)', '~start(proposer2)']
382     : ---------0-----0-0-------0-
382     : ['~didNotPromise(acceptor0)', '~promise(acceptor0,proposer0)', '~promise(acceptor0,proposer2)', '~start(proposer1)']
383     : ---------0------00------0--
383     : ['~didNotPromise(acceptor0)', '~promise(acceptor0,proposer1)', '~promise(acceptor0,proposer2)', '~start(proposer0)']
num_forall :   0
num_exists :   0
num_literals : 0
quantified form : None
qcost : 0




---------- QPrime ----------


---------- ConstArgBinding ----------

terms: ['~didNotPromise(acceptor1)', '~promise(acceptor1,proposer0)', '~promise(acceptor1,proposer1)', '~start(proposer2)']

sign_func_name2args: {'1$didNotPromise': [(Const('acceptor1', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))),)], '1$promise': [(Const('acceptor1', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Const('proposer0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))), (Const('acceptor1', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Const('proposer1', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))))], '1$start': [(Const('proposer2', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))),)]}

const2sigs: {Const('acceptor1', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))): [acceptor$1$didNotPromise$0$0, acceptor$1$promise$0$0, acceptor$1$promise$0$1], Const('proposer0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))): [proposer$1$promise$1$0], Const('proposer1', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))): [proposer$1$promise$1$1], Const('proposer2', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))): [proposer$1$start$0$0]}

sig2const: {'acceptor$1$didNotPromise$0$0': Const('acceptor1', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), 'acceptor$1$promise$0$0': Const('acceptor1', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), 'proposer$1$promise$1$0': Const('proposer0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))), 'acceptor$1$promise$0$1': Const('acceptor1', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), 'proposer$1$promise$1$1': Const('proposer1', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))), 'proposer$1$start$0$0': Const('proposer2', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))}


---------- ArgPartition ----------

sort2class_sigs: {EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')): [acceptor$1$didNotPromise$0$0; acceptor$1$promise$0$0; acceptor$1$promise$0$1], EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')): [proposer$1$promise$1$0, proposer$1$promise$1$1, proposer$1$start$0$0]}

sort2part_sig: {EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')): acceptor$1$didNotPromise$0$0; acceptor$1$promise$0$0; acceptor$1$promise$0$1, EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')): proposer$1$promise$1$0 | proposer$1$promise$1$1 | proposer$1$start$0$0}

part_sig: ('acceptor$1$didNotPromise$0$0; acceptor$1$promise$0$0; acceptor$1$promise$0$1', 'proposer$1$promise$1$0 | proposer$1$promise$1$1 | proposer$1$start$0$0')


---------- SigGenerator ----------

terms:  ['~didNotPromise(acceptor1)', '~promise(acceptor1,proposer0)', '~promise(acceptor1,proposer1)', '~start(proposer2)']

func_name2symbol:  {'didNotPromise': Const('didNotPromise', FunctionSort(EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')), BooleanSort())), 'promise': Const('promise', FunctionSort(EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')), EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')), BooleanSort())), 'start': Const('start', FunctionSort(EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')), BooleanSort()))}

func_name2args_sort:  {'didNotPromise': (EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')),), 'promise': (EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')), EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))), 'start': (EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')),)}

sign_func_name2count:  {'1$didNotPromise': 1, '1$promise': 2, '1$start': 1}


---------- ProductArgPartition ----------

sort2class_sigs: {EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')): [acceptor$1$didNotPromise$0$0; acceptor$1$promise$0$0; acceptor$1$promise$0$1], EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')): [proposer$1$promise$1$0, proposer$1$promise$1$1, proposer$1$start$0$0]}

sort2part_sig: {EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')): acceptor$1$didNotPromise$0$0; acceptor$1$promise$0$0; acceptor$1$promise$0$1, EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')): proposer$1$promise$1$0 | proposer$1$promise$1$1 | proposer$1$start$0$0}

	sort: acceptor

	identical_classes: {'acceptor$1$didNotPromise$0; acceptor$1$promise$0; acceptor$1$promise$0': [acceptor$1$didNotPromise$0$0; acceptor$1$promise$0$0; acceptor$1$promise$0$1]}

	identical_single_classes: {'acceptor$1$didNotPromise$0; acceptor$1$promise$0; acceptor$1$promise$0': acceptor$1$didNotPromise$0$0; acceptor$1$promise$0$0; acceptor$1$promise$0$1}

	identical_multi_classes: {}

	sort: proposer

	identical_classes: {'proposer$1$promise$1': [proposer$1$promise$1$0, proposer$1$promise$1$1], 'proposer$1$start$0': [proposer$1$start$0$0]}

	identical_single_classes: {'proposer$1$start$0': proposer$1$start$0$0}

	identical_multi_classes: {'proposer$1$promise$1': [proposer$1$promise$1$0, proposer$1$promise$1$1]}


---------- QInference: _set_sort_to_quantifier_mode ----------

quantifier mode: acceptor: QuantifierMode.forall

quantifier mode: proposer: QuantifierMode.forall_exists


---------- QInference: _set_constraint_mode ----------

constraint mode: ConstraintMode.no_merge


---------- QFormula: _set_qvars ----------

forall_qvars: {Var('PROPOSER1', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))), Var('ACCEPTOR0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')))}

exists_qvars: {Var('PROPOSER0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))}


---------- QFormula: _set_signed_func_name_to_args ----------

signed_func_name2args: {'1$didNotPromise': [[Var('ACCEPTOR0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')))]], '1$promise': [[Var('ACCEPTOR0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Var('PROPOSER0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))], [Var('ACCEPTOR0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Var('PROPOSER0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))]], '1$start': [[Var('PROPOSER1', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))]]}


---------- QFormula: _set_qterms ----------

qterms: ['~didNotPromise(ACCEPTOR0)', '~promise(ACCEPTOR0,PROPOSER0)', '~start(PROPOSER1)']


---------- QFormula: get_qclause ----------

qclause: forall PROPOSER1,ACCEPTOR0. didNotPromise(ACCEPTOR0) | start(PROPOSER1) | (exists PROPOSER0. (promise(ACCEPTOR0,PROPOSER0) & PROPOSER0 ~= PROPOSER1))


=== Prime Orbit 24 =====================
size : 9
num_suborbits: 1
384 (*) : ----------0-------0------00
384     : ['~didNotPromise(acceptor1)', '~promise(acceptor1,proposer0)', '~start(proposer1)', '~start(proposer2)']
385     : ----------0--------0----0-0
385     : ['~didNotPromise(acceptor1)', '~promise(acceptor1,proposer1)', '~start(proposer0)', '~start(proposer2)']
386     : ----------0---------0---00-
386     : ['~didNotPromise(acceptor1)', '~promise(acceptor1,proposer2)', '~start(proposer0)', '~start(proposer1)']
387     : -----------0---------0---00
387     : ['~didNotPromise(acceptor2)', '~promise(acceptor2,proposer0)', '~start(proposer1)', '~start(proposer2)']
388     : -----------0----------0-0-0
388     : ['~didNotPromise(acceptor2)', '~promise(acceptor2,proposer1)', '~start(proposer0)', '~start(proposer2)']
389     : -----------0-----------000-
389     : ['~didNotPromise(acceptor2)', '~promise(acceptor2,proposer2)', '~start(proposer0)', '~start(proposer1)']
390     : ---------0-----0---------00
390     : ['~didNotPromise(acceptor0)', '~promise(acceptor0,proposer0)', '~start(proposer1)', '~start(proposer2)']
391     : ---------0------0-------0-0
391     : ['~didNotPromise(acceptor0)', '~promise(acceptor0,proposer1)', '~start(proposer0)', '~start(proposer2)']
392     : ---------0-------0------00-
392     : ['~didNotPromise(acceptor0)', '~promise(acceptor0,proposer2)', '~start(proposer0)', '~start(proposer1)']
num_forall :   0
num_exists :   0
num_literals : 0
quantified form : None
qcost : 0




---------- QPrime ----------


---------- ConstArgBinding ----------

terms: ['~didNotPromise(acceptor1)', '~promise(acceptor1,proposer0)', '~start(proposer1)', '~start(proposer2)']

sign_func_name2args: {'1$didNotPromise': [(Const('acceptor1', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))),)], '1$promise': [(Const('acceptor1', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Const('proposer0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))))], '1$start': [(Const('proposer1', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))),), (Const('proposer2', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))),)]}

const2sigs: {Const('acceptor1', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))): [acceptor$1$didNotPromise$0$0, acceptor$1$promise$0$0], Const('proposer0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))): [proposer$1$promise$1$0], Const('proposer1', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))): [proposer$1$start$0$0], Const('proposer2', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))): [proposer$1$start$0$1]}

sig2const: {'acceptor$1$didNotPromise$0$0': Const('acceptor1', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), 'acceptor$1$promise$0$0': Const('acceptor1', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), 'proposer$1$promise$1$0': Const('proposer0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))), 'proposer$1$start$0$0': Const('proposer1', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))), 'proposer$1$start$0$1': Const('proposer2', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))}


---------- ArgPartition ----------

sort2class_sigs: {EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')): [acceptor$1$didNotPromise$0$0; acceptor$1$promise$0$0], EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')): [proposer$1$promise$1$0, proposer$1$start$0$0, proposer$1$start$0$1]}

sort2part_sig: {EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')): acceptor$1$didNotPromise$0$0; acceptor$1$promise$0$0, EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')): proposer$1$promise$1$0 | proposer$1$start$0$0 | proposer$1$start$0$1}

part_sig: ('acceptor$1$didNotPromise$0$0; acceptor$1$promise$0$0', 'proposer$1$promise$1$0 | proposer$1$start$0$0 | proposer$1$start$0$1')


---------- SigGenerator ----------

terms:  ['~didNotPromise(acceptor1)', '~promise(acceptor1,proposer0)', '~start(proposer1)', '~start(proposer2)']

func_name2symbol:  {'didNotPromise': Const('didNotPromise', FunctionSort(EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')), BooleanSort())), 'promise': Const('promise', FunctionSort(EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')), EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')), BooleanSort())), 'start': Const('start', FunctionSort(EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')), BooleanSort()))}

func_name2args_sort:  {'didNotPromise': (EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')),), 'promise': (EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')), EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))), 'start': (EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')),)}

sign_func_name2count:  {'1$didNotPromise': 1, '1$promise': 1, '1$start': 2}


---------- ProductArgPartition ----------

sort2class_sigs: {EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')): [acceptor$1$didNotPromise$0$0; acceptor$1$promise$0$0], EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')): [proposer$1$promise$1$0, proposer$1$start$0$0, proposer$1$start$0$1]}

sort2part_sig: {EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')): acceptor$1$didNotPromise$0$0; acceptor$1$promise$0$0, EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')): proposer$1$promise$1$0 | proposer$1$start$0$0 | proposer$1$start$0$1}

	sort: acceptor

	identical_classes: {'acceptor$1$didNotPromise$0; acceptor$1$promise$0': [acceptor$1$didNotPromise$0$0; acceptor$1$promise$0$0]}

	identical_single_classes: {'acceptor$1$didNotPromise$0; acceptor$1$promise$0': acceptor$1$didNotPromise$0$0; acceptor$1$promise$0$0}

	identical_multi_classes: {}

	sort: proposer

	identical_classes: {'proposer$1$promise$1': [proposer$1$promise$1$0], 'proposer$1$start$0': [proposer$1$start$0$0, proposer$1$start$0$1]}

	identical_single_classes: {'proposer$1$promise$1': proposer$1$promise$1$0}

	identical_multi_classes: {'proposer$1$start$0': [proposer$1$start$0$0, proposer$1$start$0$1]}


---------- QInference: _set_sort_to_quantifier_mode ----------

quantifier mode: acceptor: QuantifierMode.forall

quantifier mode: proposer: QuantifierMode.forall_exists


---------- QInference: _set_constraint_mode ----------

constraint mode: ConstraintMode.no_merge


---------- QFormula: _set_qvars ----------

forall_qvars: {Var('PROPOSER1', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))), Var('ACCEPTOR0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')))}

exists_qvars: {Var('PROPOSER0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))}


---------- QFormula: _set_signed_func_name_to_args ----------

signed_func_name2args: {'1$didNotPromise': [[Var('ACCEPTOR0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')))]], '1$promise': [[Var('ACCEPTOR0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Var('PROPOSER1', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))]], '1$start': [[Var('PROPOSER0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))], [Var('PROPOSER0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))]]}


---------- QFormula: _set_qterms ----------

qterms: ['~promise(ACCEPTOR0,PROPOSER1)', '~didNotPromise(ACCEPTOR0)', '~start(PROPOSER0)']


---------- QFormula: get_qclause ----------

qclause: forall PROPOSER1,ACCEPTOR0. promise(ACCEPTOR0,PROPOSER1) | didNotPromise(ACCEPTOR0) | (exists PROPOSER0. (start(PROPOSER0) & PROPOSER0 ~= PROPOSER1))


=== Prime Orbit 25 =====================
size : 9
num_suborbits: 1
393 (*) : -0--0--------1--1----------
393     : ['leader(proposer1)', 'promise(acceptor0,proposer1)', '~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)']
394     : --0--0--------1--1---------
394     : ['leader(proposer2)', 'promise(acceptor0,proposer2)', '~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)']
395     : 0--0--------1--1-----------
395     : ['leader(proposer0)', 'promise(acceptor0,proposer0)', '~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)']
396     : -0-----0-----1-----1-------
396     : ['leader(proposer1)', 'promise(acceptor1,proposer1)', '~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)']
397     : --0-----0-----1-----1------
397     : ['leader(proposer2)', 'promise(acceptor1,proposer2)', '~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)']
398     : 0-----0-----1-----1--------
398     : ['leader(proposer0)', 'promise(acceptor1,proposer0)', '~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)']
399     : ----0--0-----1--------1----
399     : ['leader(proposer1)', 'promise(acceptor2,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)']
400     : -----0--0-----1--------1---
400     : ['leader(proposer2)', 'promise(acceptor2,proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)']
401     : ---0--0-----1--------1-----
401     : ['leader(proposer0)', 'promise(acceptor2,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)']
num_forall :   0
num_exists :   0
num_literals : 0
quantified form : None
qcost : 0




---------- QPrime ----------


---------- ConstArgBinding ----------

terms: ['~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', 'leader(proposer1)', 'promise(acceptor0,proposer1)', 'member(acceptor0,quorum__acceptor0_acceptor1)', 'member(acceptor0,quorum__acceptor0_acceptor2)']

sign_func_name2args: {'1$chosenAt': [(Const('quorum__acceptor0_acceptor1', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), Const('proposer1', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))), (Const('quorum__acceptor0_acceptor2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), Const('proposer1', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))))], '0$leader': [(Const('proposer1', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))),)], '0$promise': [(Const('acceptor0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Const('proposer1', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))))], '0$member': [(Const('acceptor0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Const('quorum__acceptor0_acceptor1', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')))), (Const('acceptor0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Const('quorum__acceptor0_acceptor2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))))]}

const2sigs: {Const('quorum__acceptor0_acceptor1', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))): [quorum$1$chosenAt$0$0, quorum$0$member$1$0], Const('proposer1', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))): [proposer$1$chosenAt$1$0, proposer$1$chosenAt$1$1, proposer$0$leader$0$0, proposer$0$promise$1$0], Const('quorum__acceptor0_acceptor2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))): [quorum$1$chosenAt$0$1, quorum$0$member$1$1], Const('acceptor0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))): [acceptor$0$promise$0$0, acceptor$0$member$0$0, acceptor$0$member$0$1]}

sig2const: {'quorum$1$chosenAt$0$0': Const('quorum__acceptor0_acceptor1', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), 'proposer$1$chosenAt$1$0': Const('proposer1', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))), 'quorum$1$chosenAt$0$1': Const('quorum__acceptor0_acceptor2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), 'proposer$1$chosenAt$1$1': Const('proposer1', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))), 'proposer$0$leader$0$0': Const('proposer1', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))), 'acceptor$0$promise$0$0': Const('acceptor0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), 'proposer$0$promise$1$0': Const('proposer1', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))), 'acceptor$0$member$0$0': Const('acceptor0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), 'quorum$0$member$1$0': Const('quorum__acceptor0_acceptor1', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), 'acceptor$0$member$0$1': Const('acceptor0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), 'quorum$0$member$1$1': Const('quorum__acceptor0_acceptor2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')))}


---------- ArgPartition ----------

sort2class_sigs: {EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')): [quorum$0$member$1$0; quorum$1$chosenAt$0$0, quorum$0$member$1$1; quorum$1$chosenAt$0$1], EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')): [proposer$0$leader$0$0; proposer$0$promise$1$0; proposer$1$chosenAt$1$0; proposer$1$chosenAt$1$1], EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')): [acceptor$0$member$0$0; acceptor$0$member$0$1; acceptor$0$promise$0$0]}

sort2part_sig: {EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')): quorum$0$member$1$0; quorum$1$chosenAt$0$0 | quorum$0$member$1$1; quorum$1$chosenAt$0$1, EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')): proposer$0$leader$0$0; proposer$0$promise$1$0; proposer$1$chosenAt$1$0; proposer$1$chosenAt$1$1, EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')): acceptor$0$member$0$0; acceptor$0$member$0$1; acceptor$0$promise$0$0}

part_sig: ('acceptor$0$member$0$0; acceptor$0$member$0$1; acceptor$0$promise$0$0', 'proposer$0$leader$0$0; proposer$0$promise$1$0; proposer$1$chosenAt$1$0; proposer$1$chosenAt$1$1', 'quorum$0$member$1$0; quorum$1$chosenAt$0$0 | quorum$0$member$1$1; quorum$1$chosenAt$0$1')


---------- SigGenerator ----------

terms:  ['~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', 'leader(proposer1)', 'promise(acceptor0,proposer1)', 'member(acceptor0,quorum__acceptor0_acceptor1)', 'member(acceptor0,quorum__acceptor0_acceptor2)']

func_name2symbol:  {'chosenAt': Const('chosenAt', FunctionSort(EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')), EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')), BooleanSort())), 'leader': Const('leader', FunctionSort(EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')), BooleanSort())), 'promise': Const('promise', FunctionSort(EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')), EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')), BooleanSort())), 'member': Const('member', FunctionSort(EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')), EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')), BooleanSort()))}

func_name2args_sort:  {'chosenAt': (EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')), EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))), 'leader': (EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')),), 'promise': (EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')), EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))), 'member': (EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')), EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')))}

sign_func_name2count:  {'1$chosenAt': 2, '0$leader': 1, '0$promise': 1, '0$member': 2}


---------- ProductArgPartition ----------

sort2class_sigs: {EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')): [quorum$0$member$1$0; quorum$1$chosenAt$0$0, quorum$0$member$1$1; quorum$1$chosenAt$0$1], EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')): [proposer$0$leader$0$0; proposer$0$promise$1$0; proposer$1$chosenAt$1$0; proposer$1$chosenAt$1$1], EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')): [acceptor$0$member$0$0; acceptor$0$member$0$1; acceptor$0$promise$0$0]}

sort2part_sig: {EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')): quorum$0$member$1$0; quorum$1$chosenAt$0$0 | quorum$0$member$1$1; quorum$1$chosenAt$0$1, EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')): proposer$0$leader$0$0; proposer$0$promise$1$0; proposer$1$chosenAt$1$0; proposer$1$chosenAt$1$1, EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')): acceptor$0$member$0$0; acceptor$0$member$0$1; acceptor$0$promise$0$0}

	sort: quorum

	identical_classes: {'quorum$0$member$1; quorum$1$chosenAt$0': [quorum$0$member$1$0; quorum$1$chosenAt$0$0, quorum$0$member$1$1; quorum$1$chosenAt$0$1]}

	identical_single_classes: {}

	identical_multi_classes: {'quorum$0$member$1; quorum$1$chosenAt$0': [quorum$0$member$1$0, quorum$1$chosenAt$0$0, quorum$0$member$1$1, quorum$1$chosenAt$0$1]}

	sort: proposer

	identical_classes: {'proposer$0$leader$0; proposer$0$promise$1; proposer$1$chosenAt$1; proposer$1$chosenAt$1': [proposer$0$leader$0$0; proposer$0$promise$1$0; proposer$1$chosenAt$1$0; proposer$1$chosenAt$1$1]}

	identical_single_classes: {'proposer$0$leader$0; proposer$0$promise$1; proposer$1$chosenAt$1; proposer$1$chosenAt$1': proposer$0$leader$0$0; proposer$0$promise$1$0; proposer$1$chosenAt$1$0; proposer$1$chosenAt$1$1}

	identical_multi_classes: {}

	sort: acceptor

	identical_classes: {'acceptor$0$member$0; acceptor$0$member$0; acceptor$0$promise$0': [acceptor$0$member$0$0; acceptor$0$member$0$1; acceptor$0$promise$0$0]}

	identical_single_classes: {'acceptor$0$member$0; acceptor$0$member$0; acceptor$0$promise$0': acceptor$0$member$0$0; acceptor$0$member$0$1; acceptor$0$promise$0$0}

	identical_multi_classes: {}


---------- QInference: _set_sort_to_quantifier_mode ----------

quantifier mode: quorum: QuantifierMode.forall

quantifier mode: proposer: QuantifierMode.forall

quantifier mode: acceptor: QuantifierMode.forall


---------- QInference: _set_constraint_mode ----------

constraint mode: ConstraintMode.no_merge


---------- QFormula: _set_qvars ----------

forall_qvars: {Var('QUORUM1', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), Var('PROPOSER0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))), Var('QUORUM0', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), Var('ACCEPTOR0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')))}

exists_qvars: set()


---------- QFormula: _set_signed_func_name_to_args ----------

signed_func_name2args: {'1$chosenAt': [[Var('QUORUM0', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), Var('PROPOSER0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))], [Var('QUORUM1', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), Var('PROPOSER0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))]], '0$leader': [[Var('PROPOSER0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))]], '0$promise': [[Var('ACCEPTOR0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Var('PROPOSER0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))]], '0$member': [[Var('ACCEPTOR0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Var('QUORUM0', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')))], [Var('ACCEPTOR0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Var('QUORUM1', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')))]]}


---------- QFormula: _set_qterms ----------

qterms: ['promise(ACCEPTOR0,PROPOSER0)', 'member(ACCEPTOR0,QUORUM1)', 'leader(PROPOSER0)', 'member(ACCEPTOR0,QUORUM0)', '~chosenAt(QUORUM1,PROPOSER0)', '~chosenAt(QUORUM0,PROPOSER0)']


---------- QFormula: get_qclause ----------

qclause: forall QUORUM1,ACCEPTOR0,PROPOSER0,QUORUM0. ~promise(ACCEPTOR0,PROPOSER0) | ~member(ACCEPTOR0,QUORUM1) | ~leader(PROPOSER0) | ~member(ACCEPTOR0,QUORUM0) | chosenAt(QUORUM1,PROPOSER0) | chosenAt(QUORUM0,PROPOSER0) | QUORUM0 = QUORUM1


=== Prime Orbit 26 =====================
size : 3
num_suborbits: 1
402 (*) : -0--0--0-----1-------------
402     : ['leader(proposer1)', '~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)']
403     : --0--0--0-----1------------
403     : ['leader(proposer2)', '~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)']
404     : 0--0--0-----1--------------
404     : ['leader(proposer0)', '~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)']
num_forall :   0
num_exists :   0
num_literals : 0
quantified form : None
qcost : 0




---------- QPrime ----------


---------- ConstArgBinding ----------

terms: ['~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', 'leader(proposer1)']

sign_func_name2args: {'1$chosenAt': [(Const('quorum__acceptor0_acceptor1', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), Const('proposer1', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))), (Const('quorum__acceptor0_acceptor2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), Const('proposer1', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))), (Const('quorum__acceptor1_acceptor2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), Const('proposer1', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))))], '0$leader': [(Const('proposer1', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))),)]}

const2sigs: {Const('quorum__acceptor0_acceptor1', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))): [quorum$1$chosenAt$0$0], Const('proposer1', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))): [proposer$1$chosenAt$1$0, proposer$1$chosenAt$1$1, proposer$1$chosenAt$1$2, proposer$0$leader$0$0], Const('quorum__acceptor0_acceptor2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))): [quorum$1$chosenAt$0$1], Const('quorum__acceptor1_acceptor2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))): [quorum$1$chosenAt$0$2]}

sig2const: {'quorum$1$chosenAt$0$0': Const('quorum__acceptor0_acceptor1', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), 'proposer$1$chosenAt$1$0': Const('proposer1', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))), 'quorum$1$chosenAt$0$1': Const('quorum__acceptor0_acceptor2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), 'proposer$1$chosenAt$1$1': Const('proposer1', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))), 'quorum$1$chosenAt$0$2': Const('quorum__acceptor1_acceptor2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), 'proposer$1$chosenAt$1$2': Const('proposer1', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))), 'proposer$0$leader$0$0': Const('proposer1', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))}


---------- ArgPartition ----------

sort2class_sigs: {EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')): [quorum$1$chosenAt$0$0, quorum$1$chosenAt$0$1, quorum$1$chosenAt$0$2], EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')): [proposer$0$leader$0$0; proposer$1$chosenAt$1$0; proposer$1$chosenAt$1$1; proposer$1$chosenAt$1$2]}

sort2part_sig: {EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')): quorum$1$chosenAt$0$0 | quorum$1$chosenAt$0$1 | quorum$1$chosenAt$0$2, EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')): proposer$0$leader$0$0; proposer$1$chosenAt$1$0; proposer$1$chosenAt$1$1; proposer$1$chosenAt$1$2}

part_sig: ('proposer$0$leader$0$0; proposer$1$chosenAt$1$0; proposer$1$chosenAt$1$1; proposer$1$chosenAt$1$2', 'quorum$1$chosenAt$0$0 | quorum$1$chosenAt$0$1 | quorum$1$chosenAt$0$2')


---------- SigGenerator ----------

terms:  ['~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', 'leader(proposer1)']

func_name2symbol:  {'chosenAt': Const('chosenAt', FunctionSort(EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')), EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')), BooleanSort())), 'leader': Const('leader', FunctionSort(EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')), BooleanSort()))}

func_name2args_sort:  {'chosenAt': (EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')), EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))), 'leader': (EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')),)}

sign_func_name2count:  {'1$chosenAt': 3, '0$leader': 1}


---------- ProductArgPartition ----------

sort2class_sigs: {EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')): [quorum$1$chosenAt$0$0, quorum$1$chosenAt$0$1, quorum$1$chosenAt$0$2], EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')): [proposer$0$leader$0$0; proposer$1$chosenAt$1$0; proposer$1$chosenAt$1$1; proposer$1$chosenAt$1$2]}

sort2part_sig: {EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')): quorum$1$chosenAt$0$0 | quorum$1$chosenAt$0$1 | quorum$1$chosenAt$0$2, EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')): proposer$0$leader$0$0; proposer$1$chosenAt$1$0; proposer$1$chosenAt$1$1; proposer$1$chosenAt$1$2}

	sort: quorum

	identical_classes: {'quorum$1$chosenAt$0': [quorum$1$chosenAt$0$0, quorum$1$chosenAt$0$1, quorum$1$chosenAt$0$2]}

	identical_single_classes: {}

	identical_multi_classes: {'quorum$1$chosenAt$0': [quorum$1$chosenAt$0$0, quorum$1$chosenAt$0$1, quorum$1$chosenAt$0$2]}

	sort: proposer

	identical_classes: {'proposer$0$leader$0; proposer$1$chosenAt$1; proposer$1$chosenAt$1; proposer$1$chosenAt$1': [proposer$0$leader$0$0; proposer$1$chosenAt$1$0; proposer$1$chosenAt$1$1; proposer$1$chosenAt$1$2]}

	identical_single_classes: {'proposer$0$leader$0; proposer$1$chosenAt$1; proposer$1$chosenAt$1; proposer$1$chosenAt$1': proposer$0$leader$0$0; proposer$1$chosenAt$1$0; proposer$1$chosenAt$1$1; proposer$1$chosenAt$1$2}

	identical_multi_classes: {}


---------- QInference: _set_sort_to_quantifier_mode ----------

quantifier mode: quorum: QuantifierMode.exists

quantifier mode: proposer: QuantifierMode.forall


---------- QInference: _set_constraint_mode ----------

constraint mode: ConstraintMode.no_merge


---------- QFormula: _set_qvars ----------

forall_qvars: {Var('PROPOSER0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))}

exists_qvars: {Var('QUORUM0', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')))}


---------- QFormula: _set_signed_func_name_to_args ----------

signed_func_name2args: {'1$chosenAt': [[Var('QUORUM0', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), Var('PROPOSER0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))], [Var('QUORUM0', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), Var('PROPOSER0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))], [Var('QUORUM0', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), Var('PROPOSER0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))]], '0$leader': [[Var('PROPOSER0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))]]}


---------- QFormula: _set_qterms ----------

qterms: ['leader(PROPOSER0)', '~chosenAt(QUORUM0,PROPOSER0)']


---------- QFormula: get_qclause ----------

qclause: forall PROPOSER0. (exists QUORUM0. ~leader(PROPOSER0) | chosenAt(QUORUM0,PROPOSER0))


=== Prime Orbit 28 =====================
size : 3
num_suborbits: 1
408 (*) : ---------0--------------000
408     : ['~didNotPromise(acceptor0)', '~start(proposer0)', '~start(proposer1)', '~start(proposer2)']
409     : ----------0-------------000
409     : ['~didNotPromise(acceptor1)', '~start(proposer0)', '~start(proposer1)', '~start(proposer2)']
410     : -----------0------------000
410     : ['~didNotPromise(acceptor2)', '~start(proposer0)', '~start(proposer1)', '~start(proposer2)']
num_forall :   0
num_exists :   0
num_literals : 0
quantified form : None
qcost : 0




---------- QPrime ----------


---------- ConstArgBinding ----------

terms: ['~didNotPromise(acceptor0)', '~start(proposer0)', '~start(proposer1)', '~start(proposer2)']

sign_func_name2args: {'1$didNotPromise': [(Const('acceptor0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))),)], '1$start': [(Const('proposer0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))),), (Const('proposer1', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))),), (Const('proposer2', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))),)]}

const2sigs: {Const('acceptor0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))): [acceptor$1$didNotPromise$0$0], Const('proposer0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))): [proposer$1$start$0$0], Const('proposer1', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))): [proposer$1$start$0$1], Const('proposer2', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))): [proposer$1$start$0$2]}

sig2const: {'acceptor$1$didNotPromise$0$0': Const('acceptor0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), 'proposer$1$start$0$0': Const('proposer0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))), 'proposer$1$start$0$1': Const('proposer1', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))), 'proposer$1$start$0$2': Const('proposer2', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))}


---------- ArgPartition ----------

sort2class_sigs: {EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')): [acceptor$1$didNotPromise$0$0], EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')): [proposer$1$start$0$0, proposer$1$start$0$1, proposer$1$start$0$2]}

sort2part_sig: {EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')): acceptor$1$didNotPromise$0$0, EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')): proposer$1$start$0$0 | proposer$1$start$0$1 | proposer$1$start$0$2}

part_sig: ('acceptor$1$didNotPromise$0$0', 'proposer$1$start$0$0 | proposer$1$start$0$1 | proposer$1$start$0$2')


---------- SigGenerator ----------

terms:  ['~didNotPromise(acceptor0)', '~start(proposer0)', '~start(proposer1)', '~start(proposer2)']

func_name2symbol:  {'didNotPromise': Const('didNotPromise', FunctionSort(EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')), BooleanSort())), 'start': Const('start', FunctionSort(EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')), BooleanSort()))}

func_name2args_sort:  {'didNotPromise': (EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')),), 'start': (EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')),)}

sign_func_name2count:  {'1$didNotPromise': 1, '1$start': 3}


---------- ProductArgPartition ----------

sort2class_sigs: {EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')): [acceptor$1$didNotPromise$0$0], EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')): [proposer$1$start$0$0, proposer$1$start$0$1, proposer$1$start$0$2]}

sort2part_sig: {EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')): acceptor$1$didNotPromise$0$0, EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')): proposer$1$start$0$0 | proposer$1$start$0$1 | proposer$1$start$0$2}

	sort: acceptor

	identical_classes: {'acceptor$1$didNotPromise$0': [acceptor$1$didNotPromise$0$0]}

	identical_single_classes: {'acceptor$1$didNotPromise$0': acceptor$1$didNotPromise$0$0}

	identical_multi_classes: {}

	sort: proposer

	identical_classes: {'proposer$1$start$0': [proposer$1$start$0$0, proposer$1$start$0$1, proposer$1$start$0$2]}

	identical_single_classes: {}

	identical_multi_classes: {'proposer$1$start$0': [proposer$1$start$0$0, proposer$1$start$0$1, proposer$1$start$0$2]}


---------- QInference: _set_sort_to_quantifier_mode ----------

quantifier mode: acceptor: QuantifierMode.forall

quantifier mode: proposer: QuantifierMode.exists


---------- QInference: _set_constraint_mode ----------

constraint mode: ConstraintMode.no_merge


---------- QFormula: _set_qvars ----------

forall_qvars: {Var('ACCEPTOR0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')))}

exists_qvars: {Var('PROPOSER0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))}


---------- QFormula: _set_signed_func_name_to_args ----------

signed_func_name2args: {'1$didNotPromise': [[Var('ACCEPTOR0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')))]], '1$start': [[Var('PROPOSER0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))], [Var('PROPOSER0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))], [Var('PROPOSER0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))]]}


---------- QFormula: _set_qterms ----------

qterms: ['~didNotPromise(ACCEPTOR0)', '~start(PROPOSER0)']


---------- QFormula: get_qclause ----------

qclause: forall ACCEPTOR0. (exists PROPOSER0. didNotPromise(ACCEPTOR0) | start(PROPOSER0))


=== Prime Orbit 29 =====================
size : 36
num_suborbits: 1
411 (*) : --1-----0--0---------0---0-
411     : ['chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor2)', '~promise(acceptor2,proposer0)', '~start(proposer1)']
412     : -1-----0---0---------0----0
412     : ['chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor2)', '~promise(acceptor2,proposer0)', '~start(proposer2)']
413     : --1-----0--0----------0-0--
413     : ['chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor2)', '~promise(acceptor2,proposer1)', '~start(proposer0)']
414     : 1-----0----0----------0---0
414     : ['chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor2)', '~promise(acceptor2,proposer1)', '~start(proposer2)']
415     : -1-----0---0-----------00--
415     : ['chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor2)', '~promise(acceptor2,proposer2)', '~start(proposer0)']
416     : 1-----0----0-----------0-0-
416     : ['chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor2)', '~promise(acceptor2,proposer2)', '~start(proposer1)']
417     : -----1--0-0-------0------0-
417     : ['chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor1)', '~promise(acceptor1,proposer0)', '~start(proposer1)']
418     : ----1--0--0-------0-------0
418     : ['chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor1)', '~promise(acceptor1,proposer0)', '~start(proposer2)']
419     : -----1--0-0--------0----0--
419     : ['chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor1)', '~promise(acceptor1,proposer1)', '~start(proposer0)']
420     : ---1--0---0--------0------0
420     : ['chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor1)', '~promise(acceptor1,proposer1)', '~start(proposer2)']
421     : ----1--0--0---------0---0--
421     : ['chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor1)', '~promise(acceptor1,proposer2)', '~start(proposer0)']
422     : ---1--0---0---------0----0-
422     : ['chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor1)', '~promise(acceptor1,proposer2)', '~start(proposer1)']
423     : --1--0-----0---------0---0-
423     : ['chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~didNotPromise(acceptor2)', '~promise(acceptor2,proposer0)', '~start(proposer1)']
424     : -1--0------0---------0----0
424     : ['chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~didNotPromise(acceptor2)', '~promise(acceptor2,proposer0)', '~start(proposer2)']
425     : --1--0-----0----------0-0--
425     : ['chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~didNotPromise(acceptor2)', '~promise(acceptor2,proposer1)', '~start(proposer0)']
426     : 1--0-------0----------0---0
426     : ['chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~didNotPromise(acceptor2)', '~promise(acceptor2,proposer1)', '~start(proposer2)']
427     : -1--0------0-----------00--
427     : ['chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~didNotPromise(acceptor2)', '~promise(acceptor2,proposer2)', '~start(proposer0)']
428     : 1--0-------0-----------0-0-
428     : ['chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~didNotPromise(acceptor2)', '~promise(acceptor2,proposer2)', '~start(proposer1)']
429     : -----0--10-----0---------0-
429     : ['chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~didNotPromise(acceptor0)', '~promise(acceptor0,proposer0)', '~start(proposer1)']
430     : ----0--1-0-----0----------0
430     : ['chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~didNotPromise(acceptor0)', '~promise(acceptor0,proposer0)', '~start(proposer2)']
431     : -----0--10------0-------0--
431     : ['chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~didNotPromise(acceptor0)', '~promise(acceptor0,proposer1)', '~start(proposer0)']
432     : ---0--1--0------0---------0
432     : ['chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~didNotPromise(acceptor0)', '~promise(acceptor0,proposer1)', '~start(proposer2)']
433     : ----0--1-0-------0------0--
433     : ['chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~didNotPromise(acceptor0)', '~promise(acceptor0,proposer2)', '~start(proposer0)']
434     : ---0--1--0-------0-------0-
434     : ['chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~didNotPromise(acceptor0)', '~promise(acceptor0,proposer2)', '~start(proposer1)']
435     : --0--1----0-------0------0-
435     : ['chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~didNotPromise(acceptor1)', '~promise(acceptor1,proposer0)', '~start(proposer1)']
436     : -0--1-----0-------0-------0
436     : ['chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~didNotPromise(acceptor1)', '~promise(acceptor1,proposer0)', '~start(proposer2)']
437     : --0--1----0--------0----0--
437     : ['chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~didNotPromise(acceptor1)', '~promise(acceptor1,proposer1)', '~start(proposer0)']
438     : 0--1------0--------0------0
438     : ['chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~didNotPromise(acceptor1)', '~promise(acceptor1,proposer1)', '~start(proposer2)']
439     : -0--1-----0---------0---0--
439     : ['chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~didNotPromise(acceptor1)', '~promise(acceptor1,proposer2)', '~start(proposer0)']
440     : 0--1------0---------0----0-
440     : ['chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~didNotPromise(acceptor1)', '~promise(acceptor1,proposer2)', '~start(proposer1)']
441     : --0-----10-----0---------0-
441     : ['chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~didNotPromise(acceptor0)', '~promise(acceptor0,proposer0)', '~start(proposer1)']
442     : -0-----1-0-----0----------0
442     : ['chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~didNotPromise(acceptor0)', '~promise(acceptor0,proposer0)', '~start(proposer2)']
443     : --0-----10------0-------0--
443     : ['chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~didNotPromise(acceptor0)', '~promise(acceptor0,proposer1)', '~start(proposer0)']
444     : 0-----1--0------0---------0
444     : ['chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~didNotPromise(acceptor0)', '~promise(acceptor0,proposer1)', '~start(proposer2)']
445     : -0-----1-0-------0------0--
445     : ['chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~didNotPromise(acceptor0)', '~promise(acceptor0,proposer2)', '~start(proposer0)']
446     : 0-----1--0-------0-------0-
446     : ['chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~didNotPromise(acceptor0)', '~promise(acceptor0,proposer2)', '~start(proposer1)']
num_forall :   0
num_exists :   0
num_literals : 0
quantified form : None
qcost : 0




---------- QPrime ----------


---------- ConstArgBinding ----------

terms: ['chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor2)', '~promise(acceptor2,proposer0)', '~start(proposer1)', 'member(acceptor2,quorum__acceptor1_acceptor2)', '~member(acceptor2,quorum__acceptor0_acceptor1)']

sign_func_name2args: {'0$chosenAt': [(Const('quorum__acceptor0_acceptor1', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), Const('proposer2', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))))], '1$chosenAt': [(Const('quorum__acceptor1_acceptor2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), Const('proposer2', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))))], '1$didNotPromise': [(Const('acceptor2', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))),)], '1$promise': [(Const('acceptor2', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Const('proposer0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))))], '1$start': [(Const('proposer1', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))),)], '0$member': [(Const('acceptor2', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Const('quorum__acceptor1_acceptor2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))))], '1$member': [(Const('acceptor2', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Const('quorum__acceptor0_acceptor1', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))))]}

const2sigs: {Const('quorum__acceptor0_acceptor1', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))): [quorum$0$chosenAt$0$0, quorum$1$member$1$0], Const('proposer2', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))): [proposer$0$chosenAt$1$0, proposer$1$chosenAt$1$0], Const('quorum__acceptor1_acceptor2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))): [quorum$1$chosenAt$0$0, quorum$0$member$1$0], Const('acceptor2', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))): [acceptor$1$didNotPromise$0$0, acceptor$1$promise$0$0, acceptor$0$member$0$0, acceptor$1$member$0$0], Const('proposer0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))): [proposer$1$promise$1$0], Const('proposer1', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))): [proposer$1$start$0$0]}

sig2const: {'quorum$0$chosenAt$0$0': Const('quorum__acceptor0_acceptor1', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), 'proposer$0$chosenAt$1$0': Const('proposer2', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))), 'quorum$1$chosenAt$0$0': Const('quorum__acceptor1_acceptor2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), 'proposer$1$chosenAt$1$0': Const('proposer2', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))), 'acceptor$1$didNotPromise$0$0': Const('acceptor2', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), 'acceptor$1$promise$0$0': Const('acceptor2', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), 'proposer$1$promise$1$0': Const('proposer0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))), 'proposer$1$start$0$0': Const('proposer1', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))), 'acceptor$0$member$0$0': Const('acceptor2', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), 'quorum$0$member$1$0': Const('quorum__acceptor1_acceptor2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), 'acceptor$1$member$0$0': Const('acceptor2', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), 'quorum$1$member$1$0': Const('quorum__acceptor0_acceptor1', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')))}


---------- ArgPartition ----------

sort2class_sigs: {EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')): [quorum$0$chosenAt$0$0; quorum$1$member$1$0, quorum$0$member$1$0; quorum$1$chosenAt$0$0], EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')): [proposer$0$chosenAt$1$0; proposer$1$chosenAt$1$0, proposer$1$promise$1$0, proposer$1$start$0$0], EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')): [acceptor$0$member$0$0; acceptor$1$didNotPromise$0$0; acceptor$1$member$0$0; acceptor$1$promise$0$0]}

sort2part_sig: {EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')): quorum$0$chosenAt$0$0; quorum$1$member$1$0 | quorum$0$member$1$0; quorum$1$chosenAt$0$0, EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')): proposer$0$chosenAt$1$0; proposer$1$chosenAt$1$0 | proposer$1$promise$1$0 | proposer$1$start$0$0, EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')): acceptor$0$member$0$0; acceptor$1$didNotPromise$0$0; acceptor$1$member$0$0; acceptor$1$promise$0$0}

part_sig: ('acceptor$0$member$0$0; acceptor$1$didNotPromise$0$0; acceptor$1$member$0$0; acceptor$1$promise$0$0', 'proposer$0$chosenAt$1$0; proposer$1$chosenAt$1$0 | proposer$1$promise$1$0 | proposer$1$start$0$0', 'quorum$0$chosenAt$0$0; quorum$1$member$1$0 | quorum$0$member$1$0; quorum$1$chosenAt$0$0')


---------- SigGenerator ----------

terms:  ['chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor2)', '~promise(acceptor2,proposer0)', '~start(proposer1)', 'member(acceptor2,quorum__acceptor1_acceptor2)', '~member(acceptor2,quorum__acceptor0_acceptor1)']

func_name2symbol:  {'chosenAt': Const('chosenAt', FunctionSort(EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')), EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')), BooleanSort())), 'didNotPromise': Const('didNotPromise', FunctionSort(EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')), BooleanSort())), 'promise': Const('promise', FunctionSort(EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')), EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')), BooleanSort())), 'start': Const('start', FunctionSort(EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')), BooleanSort())), 'member': Const('member', FunctionSort(EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')), EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')), BooleanSort()))}

func_name2args_sort:  {'chosenAt': (EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')), EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))), 'didNotPromise': (EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')),), 'promise': (EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')), EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))), 'start': (EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')),), 'member': (EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')), EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')))}

sign_func_name2count:  {'0$chosenAt': 1, '1$chosenAt': 1, '1$didNotPromise': 1, '1$promise': 1, '1$start': 1, '0$member': 1, '1$member': 1}


---------- ProductArgPartition ----------

sort2class_sigs: {EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')): [quorum$0$chosenAt$0$0; quorum$1$member$1$0, quorum$0$member$1$0; quorum$1$chosenAt$0$0], EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')): [proposer$0$chosenAt$1$0; proposer$1$chosenAt$1$0, proposer$1$promise$1$0, proposer$1$start$0$0], EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')): [acceptor$0$member$0$0; acceptor$1$didNotPromise$0$0; acceptor$1$member$0$0; acceptor$1$promise$0$0]}

sort2part_sig: {EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')): quorum$0$chosenAt$0$0; quorum$1$member$1$0 | quorum$0$member$1$0; quorum$1$chosenAt$0$0, EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')): proposer$0$chosenAt$1$0; proposer$1$chosenAt$1$0 | proposer$1$promise$1$0 | proposer$1$start$0$0, EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')): acceptor$0$member$0$0; acceptor$1$didNotPromise$0$0; acceptor$1$member$0$0; acceptor$1$promise$0$0}

	sort: quorum

	identical_classes: {'quorum$0$chosenAt$0; quorum$1$member$1': [quorum$0$chosenAt$0$0; quorum$1$member$1$0], 'quorum$0$member$1; quorum$1$chosenAt$0': [quorum$0$member$1$0; quorum$1$chosenAt$0$0]}

	identical_single_classes: {'quorum$0$chosenAt$0; quorum$1$member$1': quorum$0$chosenAt$0$0; quorum$1$member$1$0, 'quorum$0$member$1; quorum$1$chosenAt$0': quorum$0$member$1$0; quorum$1$chosenAt$0$0}

	identical_multi_classes: {}

	sort: proposer

	identical_classes: {'proposer$0$chosenAt$1; proposer$1$chosenAt$1': [proposer$0$chosenAt$1$0; proposer$1$chosenAt$1$0], 'proposer$1$promise$1': [proposer$1$promise$1$0], 'proposer$1$start$0': [proposer$1$start$0$0]}

	identical_single_classes: {'proposer$0$chosenAt$1; proposer$1$chosenAt$1': proposer$0$chosenAt$1$0; proposer$1$chosenAt$1$0, 'proposer$1$promise$1': proposer$1$promise$1$0, 'proposer$1$start$0': proposer$1$start$0$0}

	identical_multi_classes: {}

	sort: acceptor

	identical_classes: {'acceptor$0$member$0; acceptor$1$didNotPromise$0; acceptor$1$member$0; acceptor$1$promise$0': [acceptor$0$member$0$0; acceptor$1$didNotPromise$0$0; acceptor$1$member$0$0; acceptor$1$promise$0$0]}

	identical_single_classes: {'acceptor$0$member$0; acceptor$1$didNotPromise$0; acceptor$1$member$0; acceptor$1$promise$0': acceptor$0$member$0$0; acceptor$1$didNotPromise$0$0; acceptor$1$member$0$0; acceptor$1$promise$0$0}

	identical_multi_classes: {}


---------- QInference: _set_sort_to_quantifier_mode ----------

quantifier mode: quorum: QuantifierMode.forall

quantifier mode: proposer: QuantifierMode.forall

quantifier mode: acceptor: QuantifierMode.forall


---------- QInference: _set_constraint_mode ----------

constraint mode: ConstraintMode.no_merge


---------- QFormula: _set_qvars ----------

forall_qvars: {Var('PROPOSER1', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))), Var('PROPOSER2', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))), Var('QUORUM0', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), Var('ACCEPTOR0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Var('QUORUM1', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), Var('PROPOSER0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))}

exists_qvars: set()


---------- QFormula: _set_signed_func_name_to_args ----------

signed_func_name2args: {'0$chosenAt': [[Var('QUORUM0', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), Var('PROPOSER0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))]], '1$chosenAt': [[Var('QUORUM1', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), Var('PROPOSER0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))]], '1$didNotPromise': [[Var('ACCEPTOR0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')))]], '1$promise': [[Var('ACCEPTOR0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Var('PROPOSER1', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))]], '1$start': [[Var('PROPOSER2', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))]], '0$member': [[Var('ACCEPTOR0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Var('QUORUM1', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')))]], '1$member': [[Var('ACCEPTOR0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Var('QUORUM0', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')))]]}


---------- QFormula: _set_qterms ----------

qterms: ['chosenAt(QUORUM0,PROPOSER0)', '~start(PROPOSER2)', '~member(ACCEPTOR0,QUORUM0)', '~didNotPromise(ACCEPTOR0)', 'member(ACCEPTOR0,QUORUM1)', '~promise(ACCEPTOR0,PROPOSER1)', '~chosenAt(QUORUM1,PROPOSER0)']


---------- QFormula: get_qclause ----------

qclause: forall QUORUM1,PROPOSER0,PROPOSER1,PROPOSER2,QUORUM0,ACCEPTOR0. ~chosenAt(QUORUM0,PROPOSER0) | start(PROPOSER2) | member(ACCEPTOR0,QUORUM0) | didNotPromise(ACCEPTOR0) | ~member(ACCEPTOR0,QUORUM1) | promise(ACCEPTOR0,PROPOSER1) | chosenAt(QUORUM1,PROPOSER0) | (PROPOSER0 = PROPOSER1 | PROPOSER0 = PROPOSER2 | QUORUM0 = QUORUM1 | PROPOSER1 = PROPOSER2)


=== Prime Orbit 30 =====================
size : 18
num_suborbits: 1
447 (*) : --1-----0--0------------00-
447     : ['chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor2)', '~start(proposer0)', '~start(proposer1)']
448     : -1-----0---0------------0-0
448     : ['chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor2)', '~start(proposer0)', '~start(proposer2)']
449     : 1-----0----0-------------00
449     : ['chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor2)', '~start(proposer1)', '~start(proposer2)']
450     : -----1--0-0-------------00-
450     : ['chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor1)', '~start(proposer0)', '~start(proposer1)']
451     : ----1--0--0-------------0-0
451     : ['chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor1)', '~start(proposer0)', '~start(proposer2)']
452     : ---1--0---0--------------00
452     : ['chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor1)', '~start(proposer1)', '~start(proposer2)']
453     : --1--0-----0------------00-
453     : ['chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~didNotPromise(acceptor2)', '~start(proposer0)', '~start(proposer1)']
454     : -1--0------0------------0-0
454     : ['chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~didNotPromise(acceptor2)', '~start(proposer0)', '~start(proposer2)']
455     : 1--0-------0-------------00
455     : ['chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~didNotPromise(acceptor2)', '~start(proposer1)', '~start(proposer2)']
456     : -----0--10--------------00-
456     : ['chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~didNotPromise(acceptor0)', '~start(proposer0)', '~start(proposer1)']
457     : ----0--1-0--------------0-0
457     : ['chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~didNotPromise(acceptor0)', '~start(proposer0)', '~start(proposer2)']
458     : ---0--1--0---------------00
458     : ['chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~didNotPromise(acceptor0)', '~start(proposer1)', '~start(proposer2)']
459     : --0--1----0-------------00-
459     : ['chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~didNotPromise(acceptor1)', '~start(proposer0)', '~start(proposer1)']
460     : -0--1-----0-------------0-0
460     : ['chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~didNotPromise(acceptor1)', '~start(proposer0)', '~start(proposer2)']
461     : 0--1------0--------------00
461     : ['chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~didNotPromise(acceptor1)', '~start(proposer1)', '~start(proposer2)']
462     : --0-----10--------------00-
462     : ['chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~didNotPromise(acceptor0)', '~start(proposer0)', '~start(proposer1)']
463     : -0-----1-0--------------0-0
463     : ['chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~didNotPromise(acceptor0)', '~start(proposer0)', '~start(proposer2)']
464     : 0-----1--0---------------00
464     : ['chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~didNotPromise(acceptor0)', '~start(proposer1)', '~start(proposer2)']
num_forall :   0
num_exists :   0
num_literals : 0
quantified form : None
qcost : 0




---------- QPrime ----------


---------- ConstArgBinding ----------

terms: ['chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor2)', '~start(proposer0)', '~start(proposer1)', 'member(acceptor2,quorum__acceptor1_acceptor2)', '~member(acceptor2,quorum__acceptor0_acceptor1)']

sign_func_name2args: {'0$chosenAt': [(Const('quorum__acceptor0_acceptor1', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), Const('proposer2', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))))], '1$chosenAt': [(Const('quorum__acceptor1_acceptor2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), Const('proposer2', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))))], '1$didNotPromise': [(Const('acceptor2', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))),)], '1$start': [(Const('proposer0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))),), (Const('proposer1', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))),)], '0$member': [(Const('acceptor2', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Const('quorum__acceptor1_acceptor2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))))], '1$member': [(Const('acceptor2', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Const('quorum__acceptor0_acceptor1', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))))]}

const2sigs: {Const('quorum__acceptor0_acceptor1', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))): [quorum$0$chosenAt$0$0, quorum$1$member$1$0], Const('proposer2', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))): [proposer$0$chosenAt$1$0, proposer$1$chosenAt$1$0], Const('quorum__acceptor1_acceptor2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))): [quorum$1$chosenAt$0$0, quorum$0$member$1$0], Const('acceptor2', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))): [acceptor$1$didNotPromise$0$0, acceptor$0$member$0$0, acceptor$1$member$0$0], Const('proposer0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))): [proposer$1$start$0$0], Const('proposer1', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))): [proposer$1$start$0$1]}

sig2const: {'quorum$0$chosenAt$0$0': Const('quorum__acceptor0_acceptor1', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), 'proposer$0$chosenAt$1$0': Const('proposer2', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))), 'quorum$1$chosenAt$0$0': Const('quorum__acceptor1_acceptor2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), 'proposer$1$chosenAt$1$0': Const('proposer2', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))), 'acceptor$1$didNotPromise$0$0': Const('acceptor2', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), 'proposer$1$start$0$0': Const('proposer0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))), 'proposer$1$start$0$1': Const('proposer1', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))), 'acceptor$0$member$0$0': Const('acceptor2', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), 'quorum$0$member$1$0': Const('quorum__acceptor1_acceptor2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), 'acceptor$1$member$0$0': Const('acceptor2', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), 'quorum$1$member$1$0': Const('quorum__acceptor0_acceptor1', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')))}


---------- ArgPartition ----------

sort2class_sigs: {EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')): [quorum$0$chosenAt$0$0; quorum$1$member$1$0, quorum$0$member$1$0; quorum$1$chosenAt$0$0], EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')): [proposer$0$chosenAt$1$0; proposer$1$chosenAt$1$0, proposer$1$start$0$0, proposer$1$start$0$1], EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')): [acceptor$0$member$0$0; acceptor$1$didNotPromise$0$0; acceptor$1$member$0$0]}

sort2part_sig: {EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')): quorum$0$chosenAt$0$0; quorum$1$member$1$0 | quorum$0$member$1$0; quorum$1$chosenAt$0$0, EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')): proposer$0$chosenAt$1$0; proposer$1$chosenAt$1$0 | proposer$1$start$0$0 | proposer$1$start$0$1, EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')): acceptor$0$member$0$0; acceptor$1$didNotPromise$0$0; acceptor$1$member$0$0}

part_sig: ('acceptor$0$member$0$0; acceptor$1$didNotPromise$0$0; acceptor$1$member$0$0', 'proposer$0$chosenAt$1$0; proposer$1$chosenAt$1$0 | proposer$1$start$0$0 | proposer$1$start$0$1', 'quorum$0$chosenAt$0$0; quorum$1$member$1$0 | quorum$0$member$1$0; quorum$1$chosenAt$0$0')


---------- SigGenerator ----------

terms:  ['chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor2)', '~start(proposer0)', '~start(proposer1)', 'member(acceptor2,quorum__acceptor1_acceptor2)', '~member(acceptor2,quorum__acceptor0_acceptor1)']

func_name2symbol:  {'chosenAt': Const('chosenAt', FunctionSort(EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')), EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')), BooleanSort())), 'didNotPromise': Const('didNotPromise', FunctionSort(EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')), BooleanSort())), 'start': Const('start', FunctionSort(EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')), BooleanSort())), 'member': Const('member', FunctionSort(EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')), EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')), BooleanSort()))}

func_name2args_sort:  {'chosenAt': (EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')), EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))), 'didNotPromise': (EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')),), 'start': (EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')),), 'member': (EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')), EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')))}

sign_func_name2count:  {'0$chosenAt': 1, '1$chosenAt': 1, '1$didNotPromise': 1, '1$start': 2, '0$member': 1, '1$member': 1}


---------- ProductArgPartition ----------

sort2class_sigs: {EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')): [quorum$0$chosenAt$0$0; quorum$1$member$1$0, quorum$0$member$1$0; quorum$1$chosenAt$0$0], EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')): [proposer$0$chosenAt$1$0; proposer$1$chosenAt$1$0, proposer$1$start$0$0, proposer$1$start$0$1], EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')): [acceptor$0$member$0$0; acceptor$1$didNotPromise$0$0; acceptor$1$member$0$0]}

sort2part_sig: {EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')): quorum$0$chosenAt$0$0; quorum$1$member$1$0 | quorum$0$member$1$0; quorum$1$chosenAt$0$0, EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')): proposer$0$chosenAt$1$0; proposer$1$chosenAt$1$0 | proposer$1$start$0$0 | proposer$1$start$0$1, EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')): acceptor$0$member$0$0; acceptor$1$didNotPromise$0$0; acceptor$1$member$0$0}

	sort: quorum

	identical_classes: {'quorum$0$chosenAt$0; quorum$1$member$1': [quorum$0$chosenAt$0$0; quorum$1$member$1$0], 'quorum$0$member$1; quorum$1$chosenAt$0': [quorum$0$member$1$0; quorum$1$chosenAt$0$0]}

	identical_single_classes: {'quorum$0$chosenAt$0; quorum$1$member$1': quorum$0$chosenAt$0$0; quorum$1$member$1$0, 'quorum$0$member$1; quorum$1$chosenAt$0': quorum$0$member$1$0; quorum$1$chosenAt$0$0}

	identical_multi_classes: {}

	sort: proposer

	identical_classes: {'proposer$0$chosenAt$1; proposer$1$chosenAt$1': [proposer$0$chosenAt$1$0; proposer$1$chosenAt$1$0], 'proposer$1$start$0': [proposer$1$start$0$0, proposer$1$start$0$1]}

	identical_single_classes: {'proposer$0$chosenAt$1; proposer$1$chosenAt$1': proposer$0$chosenAt$1$0; proposer$1$chosenAt$1$0}

	identical_multi_classes: {'proposer$1$start$0': [proposer$1$start$0$0, proposer$1$start$0$1]}

	sort: acceptor

	identical_classes: {'acceptor$0$member$0; acceptor$1$didNotPromise$0; acceptor$1$member$0': [acceptor$0$member$0$0; acceptor$1$didNotPromise$0$0; acceptor$1$member$0$0]}

	identical_single_classes: {'acceptor$0$member$0; acceptor$1$didNotPromise$0; acceptor$1$member$0': acceptor$0$member$0$0; acceptor$1$didNotPromise$0$0; acceptor$1$member$0$0}

	identical_multi_classes: {}


---------- QInference: _set_sort_to_quantifier_mode ----------

quantifier mode: quorum: QuantifierMode.forall

quantifier mode: proposer: QuantifierMode.forall_exists

quantifier mode: acceptor: QuantifierMode.forall


---------- QInference: _set_constraint_mode ----------

constraint mode: ConstraintMode.no_merge


---------- QFormula: _set_qvars ----------

forall_qvars: {Var('PROPOSER1', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))), Var('QUORUM1', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), Var('QUORUM0', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), Var('ACCEPTOR0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')))}

exists_qvars: {Var('PROPOSER0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))}


---------- QFormula: _set_signed_func_name_to_args ----------

signed_func_name2args: {'0$chosenAt': [[Var('QUORUM0', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), Var('PROPOSER1', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))]], '1$chosenAt': [[Var('QUORUM1', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), Var('PROPOSER1', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))]], '1$didNotPromise': [[Var('ACCEPTOR0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')))]], '1$start': [[Var('PROPOSER0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))], [Var('PROPOSER0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))]], '0$member': [[Var('ACCEPTOR0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Var('QUORUM1', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')))]], '1$member': [[Var('ACCEPTOR0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Var('QUORUM0', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')))]]}


---------- QFormula: _set_qterms ----------

qterms: ['~member(ACCEPTOR0,QUORUM0)', 'chosenAt(QUORUM0,PROPOSER1)', 'member(ACCEPTOR0,QUORUM1)', '~didNotPromise(ACCEPTOR0)', '~start(PROPOSER0)', '~chosenAt(QUORUM1,PROPOSER1)']


---------- QFormula: get_qclause ----------

qclause: forall PROPOSER1,QUORUM1,ACCEPTOR0,QUORUM0. member(ACCEPTOR0,QUORUM0) | ~chosenAt(QUORUM0,PROPOSER1) | ~member(ACCEPTOR0,QUORUM1) | didNotPromise(ACCEPTOR0) | chosenAt(QUORUM1,PROPOSER1) | (exists PROPOSER0. (start(PROPOSER0) & PROPOSER0 ~= PROPOSER1)) | QUORUM0 = QUORUM1


=== Prime Orbit 32 =====================
size : 36
num_suborbits: 1
483 (*) : ----0----0-------0----1-0--
483     : ['promise(acceptor2,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~didNotPromise(acceptor0)', '~promise(acceptor0,proposer2)', '~start(proposer0)']
484     : -----0---0------0------10--
484     : ['promise(acceptor2,proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~didNotPromise(acceptor0)', '~promise(acceptor0,proposer1)', '~start(proposer0)']
485     : ---0-----0-------0---1---0-
485     : ['promise(acceptor2,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~didNotPromise(acceptor0)', '~promise(acceptor0,proposer2)', '~start(proposer1)']
486     : -----0---0-----0-------1-0-
486     : ['promise(acceptor2,proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~didNotPromise(acceptor0)', '~promise(acceptor0,proposer0)', '~start(proposer1)']
487     : ---0-----0------0----1----0
487     : ['promise(acceptor2,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~didNotPromise(acceptor0)', '~promise(acceptor0,proposer1)', '~start(proposer2)']
488     : ----0----0-----0------1---0
488     : ['promise(acceptor2,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~didNotPromise(acceptor0)', '~promise(acceptor0,proposer0)', '~start(proposer2)']
489     : -0-------0-------0-1----0--
489     : ['promise(acceptor1,proposer1)', '~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~didNotPromise(acceptor0)', '~promise(acceptor0,proposer2)', '~start(proposer0)']
490     : --0------0------0---1---0--
490     : ['promise(acceptor1,proposer2)', '~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~didNotPromise(acceptor0)', '~promise(acceptor0,proposer1)', '~start(proposer0)']
491     : 0--------0-------01------0-
491     : ['promise(acceptor1,proposer0)', '~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~didNotPromise(acceptor0)', '~promise(acceptor0,proposer2)', '~start(proposer1)']
492     : --0------0-----0----1----0-
492     : ['promise(acceptor1,proposer2)', '~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~didNotPromise(acceptor0)', '~promise(acceptor0,proposer0)', '~start(proposer1)']
493     : 0--------0------0-1-------0
493     : ['promise(acceptor1,proposer0)', '~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~didNotPromise(acceptor0)', '~promise(acceptor0,proposer1)', '~start(proposer2)']
494     : -0-------0-----0---1------0
494     : ['promise(acceptor1,proposer1)', '~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~didNotPromise(acceptor0)', '~promise(acceptor0,proposer0)', '~start(proposer2)']
495     : -------0--0---------0-1-0--
495     : ['promise(acceptor2,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor1)', '~promise(acceptor1,proposer2)', '~start(proposer0)']
496     : --------0-0--------0---10--
496     : ['promise(acceptor2,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor1)', '~promise(acceptor1,proposer1)', '~start(proposer0)']
497     : ------0---0---------01---0-
497     : ['promise(acceptor2,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor1)', '~promise(acceptor1,proposer2)', '~start(proposer1)']
498     : --------0-0-------0----1-0-
498     : ['promise(acceptor2,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor1)', '~promise(acceptor1,proposer0)', '~start(proposer1)']
499     : ------0---0--------0-1----0
499     : ['promise(acceptor2,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor1)', '~promise(acceptor1,proposer1)', '~start(proposer2)']
500     : -------0--0-------0---1---0
500     : ['promise(acceptor2,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor1)', '~promise(acceptor1,proposer0)', '~start(proposer2)']
501     : -0--------0-----1---0---0--
501     : ['promise(acceptor0,proposer1)', '~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~didNotPromise(acceptor1)', '~promise(acceptor1,proposer2)', '~start(proposer0)']
502     : --0-------0------1-0----0--
502     : ['promise(acceptor0,proposer2)', '~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~didNotPromise(acceptor1)', '~promise(acceptor1,proposer1)', '~start(proposer0)']
503     : 0---------0----1----0----0-
503     : ['promise(acceptor0,proposer0)', '~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~didNotPromise(acceptor1)', '~promise(acceptor1,proposer2)', '~start(proposer1)']
504     : --0-------0------10------0-
504     : ['promise(acceptor0,proposer2)', '~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~didNotPromise(acceptor1)', '~promise(acceptor1,proposer0)', '~start(proposer1)']
505     : 0---------0----1---0------0
505     : ['promise(acceptor0,proposer0)', '~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~didNotPromise(acceptor1)', '~promise(acceptor1,proposer1)', '~start(proposer2)']
506     : -0--------0-----1-0-------0
506     : ['promise(acceptor0,proposer1)', '~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~didNotPromise(acceptor1)', '~promise(acceptor1,proposer0)', '~start(proposer2)']
507     : -------0---0-------1---00--
507     : ['promise(acceptor1,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor2)', '~promise(acceptor2,proposer2)', '~start(proposer0)']
508     : --------0--0--------1-0-0--
508     : ['promise(acceptor1,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor2)', '~promise(acceptor2,proposer1)', '~start(proposer0)']
509     : ------0----0------1----0-0-
509     : ['promise(acceptor1,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor2)', '~promise(acceptor2,proposer2)', '~start(proposer1)']
510     : --------0--0--------10---0-
510     : ['promise(acceptor1,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor2)', '~promise(acceptor2,proposer0)', '~start(proposer1)']
511     : ------0----0------1---0---0
511     : ['promise(acceptor1,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor2)', '~promise(acceptor2,proposer1)', '~start(proposer2)']
512     : -------0---0-------1-0----0
512     : ['promise(acceptor1,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor2)', '~promise(acceptor2,proposer0)', '~start(proposer2)']
513     : ----0------0----1------00--
513     : ['promise(acceptor0,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~didNotPromise(acceptor2)', '~promise(acceptor2,proposer2)', '~start(proposer0)']
514     : -----0-----0-----1----0-0--
514     : ['promise(acceptor0,proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~didNotPromise(acceptor2)', '~promise(acceptor2,proposer1)', '~start(proposer0)']
515     : ---0-------0---1-------0-0-
515     : ['promise(acceptor0,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~didNotPromise(acceptor2)', '~promise(acceptor2,proposer2)', '~start(proposer1)']
516     : -----0-----0-----1---0---0-
516     : ['promise(acceptor0,proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~didNotPromise(acceptor2)', '~promise(acceptor2,proposer0)', '~start(proposer1)']
517     : ---0-------0---1------0---0
517     : ['promise(acceptor0,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~didNotPromise(acceptor2)', '~promise(acceptor2,proposer1)', '~start(proposer2)']
518     : ----0------0----1----0----0
518     : ['promise(acceptor0,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~didNotPromise(acceptor2)', '~promise(acceptor2,proposer0)', '~start(proposer2)']
num_forall :   0
num_exists :   0
num_literals : 0
quantified form : None
qcost : 0




---------- QPrime ----------


---------- ConstArgBinding ----------

terms: ['~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~didNotPromise(acceptor0)', '~promise(acceptor0,proposer2)', 'promise(acceptor2,proposer1)', '~start(proposer0)', 'member(acceptor0,quorum__acceptor0_acceptor2)', 'member(acceptor2,quorum__acceptor0_acceptor2)']

sign_func_name2args: {'1$chosenAt': [(Const('quorum__acceptor0_acceptor2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), Const('proposer1', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))))], '1$didNotPromise': [(Const('acceptor0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))),)], '1$promise': [(Const('acceptor0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Const('proposer2', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))))], '0$promise': [(Const('acceptor2', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Const('proposer1', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))))], '1$start': [(Const('proposer0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))),)], '0$member': [(Const('acceptor0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Const('quorum__acceptor0_acceptor2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')))), (Const('acceptor2', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Const('quorum__acceptor0_acceptor2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))))]}

const2sigs: {Const('quorum__acceptor0_acceptor2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))): [quorum$1$chosenAt$0$0, quorum$0$member$1$0, quorum$0$member$1$1], Const('proposer1', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))): [proposer$1$chosenAt$1$0, proposer$0$promise$1$0], Const('acceptor0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))): [acceptor$1$didNotPromise$0$0, acceptor$1$promise$0$0, acceptor$0$member$0$0], Const('proposer2', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))): [proposer$1$promise$1$0], Const('acceptor2', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))): [acceptor$0$promise$0$0, acceptor$0$member$0$1], Const('proposer0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))): [proposer$1$start$0$0]}

sig2const: {'quorum$1$chosenAt$0$0': Const('quorum__acceptor0_acceptor2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), 'proposer$1$chosenAt$1$0': Const('proposer1', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))), 'acceptor$1$didNotPromise$0$0': Const('acceptor0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), 'acceptor$1$promise$0$0': Const('acceptor0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), 'proposer$1$promise$1$0': Const('proposer2', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))), 'acceptor$0$promise$0$0': Const('acceptor2', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), 'proposer$0$promise$1$0': Const('proposer1', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))), 'proposer$1$start$0$0': Const('proposer0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))), 'acceptor$0$member$0$0': Const('acceptor0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), 'quorum$0$member$1$0': Const('quorum__acceptor0_acceptor2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), 'acceptor$0$member$0$1': Const('acceptor2', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), 'quorum$0$member$1$1': Const('quorum__acceptor0_acceptor2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')))}


---------- ArgPartition ----------

sort2class_sigs: {EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')): [quorum$0$member$1$0; quorum$0$member$1$1; quorum$1$chosenAt$0$0], EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')): [proposer$0$promise$1$0; proposer$1$chosenAt$1$0, proposer$1$promise$1$0, proposer$1$start$0$0], EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')): [acceptor$0$member$0$0; acceptor$1$didNotPromise$0$0; acceptor$1$promise$0$0, acceptor$0$member$0$1; acceptor$0$promise$0$0]}

sort2part_sig: {EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')): quorum$0$member$1$0; quorum$0$member$1$1; quorum$1$chosenAt$0$0, EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')): proposer$0$promise$1$0; proposer$1$chosenAt$1$0 | proposer$1$promise$1$0 | proposer$1$start$0$0, EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')): acceptor$0$member$0$0; acceptor$1$didNotPromise$0$0; acceptor$1$promise$0$0 | acceptor$0$member$0$1; acceptor$0$promise$0$0}

part_sig: ('acceptor$0$member$0$0; acceptor$1$didNotPromise$0$0; acceptor$1$promise$0$0 | acceptor$0$member$0$1; acceptor$0$promise$0$0', 'proposer$0$promise$1$0; proposer$1$chosenAt$1$0 | proposer$1$promise$1$0 | proposer$1$start$0$0', 'quorum$0$member$1$0; quorum$0$member$1$1; quorum$1$chosenAt$0$0')


---------- SigGenerator ----------

terms:  ['~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~didNotPromise(acceptor0)', '~promise(acceptor0,proposer2)', 'promise(acceptor2,proposer1)', '~start(proposer0)', 'member(acceptor0,quorum__acceptor0_acceptor2)', 'member(acceptor2,quorum__acceptor0_acceptor2)']

func_name2symbol:  {'chosenAt': Const('chosenAt', FunctionSort(EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')), EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')), BooleanSort())), 'didNotPromise': Const('didNotPromise', FunctionSort(EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')), BooleanSort())), 'promise': Const('promise', FunctionSort(EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')), EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')), BooleanSort())), 'start': Const('start', FunctionSort(EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')), BooleanSort())), 'member': Const('member', FunctionSort(EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')), EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')), BooleanSort()))}

func_name2args_sort:  {'chosenAt': (EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')), EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))), 'didNotPromise': (EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')),), 'promise': (EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')), EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))), 'start': (EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')),), 'member': (EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')), EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')))}

sign_func_name2count:  {'1$chosenAt': 1, '1$didNotPromise': 1, '1$promise': 1, '0$promise': 1, '1$start': 1, '0$member': 2}


---------- ProductArgPartition ----------

sort2class_sigs: {EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')): [quorum$0$member$1$0; quorum$0$member$1$1; quorum$1$chosenAt$0$0], EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')): [proposer$0$promise$1$0; proposer$1$chosenAt$1$0, proposer$1$promise$1$0, proposer$1$start$0$0], EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')): [acceptor$0$member$0$0; acceptor$1$didNotPromise$0$0; acceptor$1$promise$0$0, acceptor$0$member$0$1; acceptor$0$promise$0$0]}

sort2part_sig: {EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')): quorum$0$member$1$0; quorum$0$member$1$1; quorum$1$chosenAt$0$0, EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')): proposer$0$promise$1$0; proposer$1$chosenAt$1$0 | proposer$1$promise$1$0 | proposer$1$start$0$0, EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')): acceptor$0$member$0$0; acceptor$1$didNotPromise$0$0; acceptor$1$promise$0$0 | acceptor$0$member$0$1; acceptor$0$promise$0$0}

	sort: quorum

	identical_classes: {'quorum$0$member$1; quorum$0$member$1; quorum$1$chosenAt$0': [quorum$0$member$1$0; quorum$0$member$1$1; quorum$1$chosenAt$0$0]}

	identical_single_classes: {'quorum$0$member$1; quorum$0$member$1; quorum$1$chosenAt$0': quorum$0$member$1$0; quorum$0$member$1$1; quorum$1$chosenAt$0$0}

	identical_multi_classes: {}

	sort: proposer

	identical_classes: {'proposer$0$promise$1; proposer$1$chosenAt$1': [proposer$0$promise$1$0; proposer$1$chosenAt$1$0], 'proposer$1$promise$1': [proposer$1$promise$1$0], 'proposer$1$start$0': [proposer$1$start$0$0]}

	identical_single_classes: {'proposer$0$promise$1; proposer$1$chosenAt$1': proposer$0$promise$1$0; proposer$1$chosenAt$1$0, 'proposer$1$promise$1': proposer$1$promise$1$0, 'proposer$1$start$0': proposer$1$start$0$0}

	identical_multi_classes: {}

	sort: acceptor

	identical_classes: {'acceptor$0$member$0; acceptor$1$didNotPromise$0; acceptor$1$promise$0': [acceptor$0$member$0$0; acceptor$1$didNotPromise$0$0; acceptor$1$promise$0$0], 'acceptor$0$member$0; acceptor$0$promise$0': [acceptor$0$member$0$1; acceptor$0$promise$0$0]}

	identical_single_classes: {'acceptor$0$member$0; acceptor$1$didNotPromise$0; acceptor$1$promise$0': acceptor$0$member$0$0; acceptor$1$didNotPromise$0$0; acceptor$1$promise$0$0, 'acceptor$0$member$0; acceptor$0$promise$0': acceptor$0$member$0$1; acceptor$0$promise$0$0}

	identical_multi_classes: {}


---------- QInference: _set_sort_to_quantifier_mode ----------

quantifier mode: quorum: QuantifierMode.forall

quantifier mode: proposer: QuantifierMode.forall

quantifier mode: acceptor: QuantifierMode.forall


---------- QInference: _set_constraint_mode ----------

constraint mode: ConstraintMode.no_merge


---------- QFormula: _set_qvars ----------

forall_qvars: {Var('PROPOSER1', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))), Var('PROPOSER2', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))), Var('ACCEPTOR1', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Var('QUORUM0', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), Var('ACCEPTOR0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Var('PROPOSER0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))}

exists_qvars: set()


---------- QFormula: _set_signed_func_name_to_args ----------

signed_func_name2args: {'1$chosenAt': [[Var('QUORUM0', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), Var('PROPOSER0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))]], '1$didNotPromise': [[Var('ACCEPTOR0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')))]], '1$promise': [[Var('ACCEPTOR0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Var('PROPOSER1', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))]], '0$promise': [[Var('ACCEPTOR1', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Var('PROPOSER0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))]], '1$start': [[Var('PROPOSER2', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))]], '0$member': [[Var('ACCEPTOR0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Var('QUORUM0', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')))], [Var('ACCEPTOR1', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Var('QUORUM0', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')))]]}


---------- QFormula: _set_qterms ----------

qterms: ['~start(PROPOSER2)', '~didNotPromise(ACCEPTOR0)', '~promise(ACCEPTOR0,PROPOSER1)', 'member(ACCEPTOR0,QUORUM0)', 'member(ACCEPTOR1,QUORUM0)', 'promise(ACCEPTOR1,PROPOSER0)', '~chosenAt(QUORUM0,PROPOSER0)']


---------- QFormula: get_qclause ----------

qclause: forall PROPOSER0,PROPOSER1,PROPOSER2,ACCEPTOR1,QUORUM0,ACCEPTOR0. start(PROPOSER2) | didNotPromise(ACCEPTOR0) | promise(ACCEPTOR0,PROPOSER1) | ~member(ACCEPTOR0,QUORUM0) | ~member(ACCEPTOR1,QUORUM0) | ~promise(ACCEPTOR1,PROPOSER0) | chosenAt(QUORUM0,PROPOSER0) | (PROPOSER0 = PROPOSER1 | PROPOSER0 = PROPOSER2 | ACCEPTOR0 = ACCEPTOR1 | PROPOSER1 = PROPOSER2)


=== Prime Orbit 33 =====================
size : 18
num_suborbits: 1
519 (*) : -------0--0-----------1-0-0
519     : ['promise(acceptor2,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor1)', '~start(proposer0)', '~start(proposer2)']
520     : --------0-0------------100-
520     : ['promise(acceptor2,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor1)', '~start(proposer0)', '~start(proposer1)']
521     : ------0---0----------1---00
521     : ['promise(acceptor2,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor1)', '~start(proposer1)', '~start(proposer2)']
522     : -------0---0-------1----0-0
522     : ['promise(acceptor1,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor2)', '~start(proposer0)', '~start(proposer2)']
523     : --------0--0--------1---00-
523     : ['promise(acceptor1,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor2)', '~start(proposer0)', '~start(proposer1)']
524     : ------0----0------1------00
524     : ['promise(acceptor1,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor2)', '~start(proposer1)', '~start(proposer2)']
525     : ----0----0------------1-0-0
525     : ['promise(acceptor2,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~didNotPromise(acceptor0)', '~start(proposer0)', '~start(proposer2)']
526     : -----0---0-------------100-
526     : ['promise(acceptor2,proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~didNotPromise(acceptor0)', '~start(proposer0)', '~start(proposer1)']
527     : ---0-----0-----------1---00
527     : ['promise(acceptor2,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~didNotPromise(acceptor0)', '~start(proposer1)', '~start(proposer2)']
528     : ----0------0----1-------0-0
528     : ['promise(acceptor0,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~didNotPromise(acceptor2)', '~start(proposer0)', '~start(proposer2)']
529     : -----0-----0-----1------00-
529     : ['promise(acceptor0,proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~didNotPromise(acceptor2)', '~start(proposer0)', '~start(proposer1)']
530     : ---0-------0---1---------00
530     : ['promise(acceptor0,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~didNotPromise(acceptor2)', '~start(proposer1)', '~start(proposer2)']
531     : -0-------0---------1----0-0
531     : ['promise(acceptor1,proposer1)', '~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~didNotPromise(acceptor0)', '~start(proposer0)', '~start(proposer2)']
532     : --0------0----------1---00-
532     : ['promise(acceptor1,proposer2)', '~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~didNotPromise(acceptor0)', '~start(proposer0)', '~start(proposer1)']
533     : 0--------0--------1------00
533     : ['promise(acceptor1,proposer0)', '~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~didNotPromise(acceptor0)', '~start(proposer1)', '~start(proposer2)']
534     : -0--------0-----1-------0-0
534     : ['promise(acceptor0,proposer1)', '~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~didNotPromise(acceptor1)', '~start(proposer0)', '~start(proposer2)']
535     : --0-------0------1------00-
535     : ['promise(acceptor0,proposer2)', '~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~didNotPromise(acceptor1)', '~start(proposer0)', '~start(proposer1)']
536     : 0---------0----1---------00
536     : ['promise(acceptor0,proposer0)', '~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~didNotPromise(acceptor1)', '~start(proposer1)', '~start(proposer2)']
num_forall :   0
num_exists :   0
num_literals : 0
quantified form : None
qcost : 0




---------- QPrime ----------


---------- ConstArgBinding ----------

terms: ['~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor1)', 'promise(acceptor2,proposer1)', '~start(proposer0)', '~start(proposer2)', 'member(acceptor1,quorum__acceptor1_acceptor2)', 'member(acceptor2,quorum__acceptor1_acceptor2)']

sign_func_name2args: {'1$chosenAt': [(Const('quorum__acceptor1_acceptor2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), Const('proposer1', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))))], '1$didNotPromise': [(Const('acceptor1', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))),)], '0$promise': [(Const('acceptor2', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Const('proposer1', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))))], '1$start': [(Const('proposer0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))),), (Const('proposer2', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))),)], '0$member': [(Const('acceptor1', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Const('quorum__acceptor1_acceptor2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')))), (Const('acceptor2', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Const('quorum__acceptor1_acceptor2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))))]}

const2sigs: {Const('quorum__acceptor1_acceptor2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))): [quorum$1$chosenAt$0$0, quorum$0$member$1$0, quorum$0$member$1$1], Const('proposer1', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))): [proposer$1$chosenAt$1$0, proposer$0$promise$1$0], Const('acceptor1', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))): [acceptor$1$didNotPromise$0$0, acceptor$0$member$0$0], Const('acceptor2', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))): [acceptor$0$promise$0$0, acceptor$0$member$0$1], Const('proposer0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))): [proposer$1$start$0$0], Const('proposer2', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))): [proposer$1$start$0$1]}

sig2const: {'quorum$1$chosenAt$0$0': Const('quorum__acceptor1_acceptor2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), 'proposer$1$chosenAt$1$0': Const('proposer1', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))), 'acceptor$1$didNotPromise$0$0': Const('acceptor1', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), 'acceptor$0$promise$0$0': Const('acceptor2', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), 'proposer$0$promise$1$0': Const('proposer1', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))), 'proposer$1$start$0$0': Const('proposer0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))), 'proposer$1$start$0$1': Const('proposer2', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))), 'acceptor$0$member$0$0': Const('acceptor1', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), 'quorum$0$member$1$0': Const('quorum__acceptor1_acceptor2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), 'acceptor$0$member$0$1': Const('acceptor2', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), 'quorum$0$member$1$1': Const('quorum__acceptor1_acceptor2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')))}


---------- ArgPartition ----------

sort2class_sigs: {EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')): [quorum$0$member$1$0; quorum$0$member$1$1; quorum$1$chosenAt$0$0], EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')): [proposer$0$promise$1$0; proposer$1$chosenAt$1$0, proposer$1$start$0$0, proposer$1$start$0$1], EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')): [acceptor$0$member$0$0; acceptor$1$didNotPromise$0$0, acceptor$0$member$0$1; acceptor$0$promise$0$0]}

sort2part_sig: {EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')): quorum$0$member$1$0; quorum$0$member$1$1; quorum$1$chosenAt$0$0, EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')): proposer$0$promise$1$0; proposer$1$chosenAt$1$0 | proposer$1$start$0$0 | proposer$1$start$0$1, EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')): acceptor$0$member$0$0; acceptor$1$didNotPromise$0$0 | acceptor$0$member$0$1; acceptor$0$promise$0$0}

part_sig: ('acceptor$0$member$0$0; acceptor$1$didNotPromise$0$0 | acceptor$0$member$0$1; acceptor$0$promise$0$0', 'proposer$0$promise$1$0; proposer$1$chosenAt$1$0 | proposer$1$start$0$0 | proposer$1$start$0$1', 'quorum$0$member$1$0; quorum$0$member$1$1; quorum$1$chosenAt$0$0')


---------- SigGenerator ----------

terms:  ['~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor1)', 'promise(acceptor2,proposer1)', '~start(proposer0)', '~start(proposer2)', 'member(acceptor1,quorum__acceptor1_acceptor2)', 'member(acceptor2,quorum__acceptor1_acceptor2)']

func_name2symbol:  {'chosenAt': Const('chosenAt', FunctionSort(EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')), EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')), BooleanSort())), 'didNotPromise': Const('didNotPromise', FunctionSort(EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')), BooleanSort())), 'promise': Const('promise', FunctionSort(EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')), EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')), BooleanSort())), 'start': Const('start', FunctionSort(EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')), BooleanSort())), 'member': Const('member', FunctionSort(EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')), EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')), BooleanSort()))}

func_name2args_sort:  {'chosenAt': (EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')), EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))), 'didNotPromise': (EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')),), 'promise': (EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')), EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))), 'start': (EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')),), 'member': (EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')), EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')))}

sign_func_name2count:  {'1$chosenAt': 1, '1$didNotPromise': 1, '0$promise': 1, '1$start': 2, '0$member': 2}


---------- ProductArgPartition ----------

sort2class_sigs: {EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')): [quorum$0$member$1$0; quorum$0$member$1$1; quorum$1$chosenAt$0$0], EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')): [proposer$0$promise$1$0; proposer$1$chosenAt$1$0, proposer$1$start$0$0, proposer$1$start$0$1], EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')): [acceptor$0$member$0$0; acceptor$1$didNotPromise$0$0, acceptor$0$member$0$1; acceptor$0$promise$0$0]}

sort2part_sig: {EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')): quorum$0$member$1$0; quorum$0$member$1$1; quorum$1$chosenAt$0$0, EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')): proposer$0$promise$1$0; proposer$1$chosenAt$1$0 | proposer$1$start$0$0 | proposer$1$start$0$1, EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')): acceptor$0$member$0$0; acceptor$1$didNotPromise$0$0 | acceptor$0$member$0$1; acceptor$0$promise$0$0}

	sort: quorum

	identical_classes: {'quorum$0$member$1; quorum$0$member$1; quorum$1$chosenAt$0': [quorum$0$member$1$0; quorum$0$member$1$1; quorum$1$chosenAt$0$0]}

	identical_single_classes: {'quorum$0$member$1; quorum$0$member$1; quorum$1$chosenAt$0': quorum$0$member$1$0; quorum$0$member$1$1; quorum$1$chosenAt$0$0}

	identical_multi_classes: {}

	sort: proposer

	identical_classes: {'proposer$0$promise$1; proposer$1$chosenAt$1': [proposer$0$promise$1$0; proposer$1$chosenAt$1$0], 'proposer$1$start$0': [proposer$1$start$0$0, proposer$1$start$0$1]}

	identical_single_classes: {'proposer$0$promise$1; proposer$1$chosenAt$1': proposer$0$promise$1$0; proposer$1$chosenAt$1$0}

	identical_multi_classes: {'proposer$1$start$0': [proposer$1$start$0$0, proposer$1$start$0$1]}

	sort: acceptor

	identical_classes: {'acceptor$0$member$0; acceptor$1$didNotPromise$0': [acceptor$0$member$0$0; acceptor$1$didNotPromise$0$0], 'acceptor$0$member$0; acceptor$0$promise$0': [acceptor$0$member$0$1; acceptor$0$promise$0$0]}

	identical_single_classes: {'acceptor$0$member$0; acceptor$1$didNotPromise$0': acceptor$0$member$0$0; acceptor$1$didNotPromise$0$0, 'acceptor$0$member$0; acceptor$0$promise$0': acceptor$0$member$0$1; acceptor$0$promise$0$0}

	identical_multi_classes: {}


---------- QInference: _set_sort_to_quantifier_mode ----------

quantifier mode: quorum: QuantifierMode.forall

quantifier mode: proposer: QuantifierMode.forall_exists

quantifier mode: acceptor: QuantifierMode.forall


---------- QInference: _set_constraint_mode ----------

constraint mode: ConstraintMode.no_merge


---------- QFormula: _set_qvars ----------

forall_qvars: {Var('PROPOSER1', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))), Var('ACCEPTOR1', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Var('QUORUM0', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), Var('ACCEPTOR0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')))}

exists_qvars: {Var('PROPOSER0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))}


---------- QFormula: _set_signed_func_name_to_args ----------

signed_func_name2args: {'1$chosenAt': [[Var('QUORUM0', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), Var('PROPOSER1', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))]], '1$didNotPromise': [[Var('ACCEPTOR0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')))]], '0$promise': [[Var('ACCEPTOR1', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Var('PROPOSER1', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))]], '1$start': [[Var('PROPOSER0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))], [Var('PROPOSER0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))]], '0$member': [[Var('ACCEPTOR0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Var('QUORUM0', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')))], [Var('ACCEPTOR1', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Var('QUORUM0', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')))]]}


---------- QFormula: _set_qterms ----------

qterms: ['promise(ACCEPTOR1,PROPOSER1)', '~chosenAt(QUORUM0,PROPOSER1)', '~didNotPromise(ACCEPTOR0)', 'member(ACCEPTOR0,QUORUM0)', 'member(ACCEPTOR1,QUORUM0)', '~start(PROPOSER0)']


---------- QFormula: get_qclause ----------

qclause: forall PROPOSER1,ACCEPTOR0,ACCEPTOR1,QUORUM0. ~promise(ACCEPTOR1,PROPOSER1) | chosenAt(QUORUM0,PROPOSER1) | didNotPromise(ACCEPTOR0) | ~member(ACCEPTOR0,QUORUM0) | ~member(ACCEPTOR1,QUORUM0) | (exists PROPOSER0. (start(PROPOSER0) & PROPOSER0 ~= PROPOSER1)) | ACCEPTOR0 = ACCEPTOR1


=== Prime Orbit 35 =====================
size : 9
num_suborbits: 1
555 (*) : --0------00-------------00-
555     : ['~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~start(proposer0)', '~start(proposer1)']
556     : -0-------00-------------0-0
556     : ['~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~start(proposer0)', '~start(proposer2)']
557     : 0--------00--------------00
557     : ['~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~start(proposer1)', '~start(proposer2)']
558     : -----0---0-0------------00-
558     : ['~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor2)', '~start(proposer0)', '~start(proposer1)']
559     : ----0----0-0------------0-0
559     : ['~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor2)', '~start(proposer0)', '~start(proposer2)']
560     : ---0-----0-0-------------00
560     : ['~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor2)', '~start(proposer1)', '~start(proposer2)']
561     : --------0-00------------00-
561     : ['~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~start(proposer0)', '~start(proposer1)']
562     : -------0--00------------0-0
562     : ['~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~start(proposer0)', '~start(proposer2)']
563     : ------0---00-------------00
563     : ['~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~start(proposer1)', '~start(proposer2)']
num_forall :   0
num_exists :   0
num_literals : 0
quantified form : None
qcost : 0




---------- QPrime ----------


---------- ConstArgBinding ----------

terms: ['~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~start(proposer0)', '~start(proposer1)', 'member(acceptor0,quorum__acceptor0_acceptor1)', 'member(acceptor1,quorum__acceptor0_acceptor1)']

sign_func_name2args: {'1$chosenAt': [(Const('quorum__acceptor0_acceptor1', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), Const('proposer2', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))))], '1$didNotPromise': [(Const('acceptor0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))),), (Const('acceptor1', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))),)], '1$start': [(Const('proposer0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))),), (Const('proposer1', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))),)], '0$member': [(Const('acceptor0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Const('quorum__acceptor0_acceptor1', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')))), (Const('acceptor1', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Const('quorum__acceptor0_acceptor1', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))))]}

const2sigs: {Const('quorum__acceptor0_acceptor1', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))): [quorum$1$chosenAt$0$0, quorum$0$member$1$0, quorum$0$member$1$1], Const('proposer2', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))): [proposer$1$chosenAt$1$0], Const('acceptor0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))): [acceptor$1$didNotPromise$0$0, acceptor$0$member$0$0], Const('acceptor1', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))): [acceptor$1$didNotPromise$0$1, acceptor$0$member$0$1], Const('proposer0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))): [proposer$1$start$0$0], Const('proposer1', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))): [proposer$1$start$0$1]}

sig2const: {'quorum$1$chosenAt$0$0': Const('quorum__acceptor0_acceptor1', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), 'proposer$1$chosenAt$1$0': Const('proposer2', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))), 'acceptor$1$didNotPromise$0$0': Const('acceptor0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), 'acceptor$1$didNotPromise$0$1': Const('acceptor1', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), 'proposer$1$start$0$0': Const('proposer0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))), 'proposer$1$start$0$1': Const('proposer1', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))), 'acceptor$0$member$0$0': Const('acceptor0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), 'quorum$0$member$1$0': Const('quorum__acceptor0_acceptor1', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), 'acceptor$0$member$0$1': Const('acceptor1', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), 'quorum$0$member$1$1': Const('quorum__acceptor0_acceptor1', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')))}


---------- ArgPartition ----------

sort2class_sigs: {EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')): [quorum$0$member$1$0; quorum$0$member$1$1; quorum$1$chosenAt$0$0], EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')): [proposer$1$chosenAt$1$0, proposer$1$start$0$0, proposer$1$start$0$1], EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')): [acceptor$0$member$0$0; acceptor$1$didNotPromise$0$0, acceptor$0$member$0$1; acceptor$1$didNotPromise$0$1]}

sort2part_sig: {EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')): quorum$0$member$1$0; quorum$0$member$1$1; quorum$1$chosenAt$0$0, EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')): proposer$1$chosenAt$1$0 | proposer$1$start$0$0 | proposer$1$start$0$1, EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')): acceptor$0$member$0$0; acceptor$1$didNotPromise$0$0 | acceptor$0$member$0$1; acceptor$1$didNotPromise$0$1}

part_sig: ('acceptor$0$member$0$0; acceptor$1$didNotPromise$0$0 | acceptor$0$member$0$1; acceptor$1$didNotPromise$0$1', 'proposer$1$chosenAt$1$0 | proposer$1$start$0$0 | proposer$1$start$0$1', 'quorum$0$member$1$0; quorum$0$member$1$1; quorum$1$chosenAt$0$0')


---------- SigGenerator ----------

terms:  ['~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~start(proposer0)', '~start(proposer1)', 'member(acceptor0,quorum__acceptor0_acceptor1)', 'member(acceptor1,quorum__acceptor0_acceptor1)']

func_name2symbol:  {'chosenAt': Const('chosenAt', FunctionSort(EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')), EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')), BooleanSort())), 'didNotPromise': Const('didNotPromise', FunctionSort(EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')), BooleanSort())), 'start': Const('start', FunctionSort(EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')), BooleanSort())), 'member': Const('member', FunctionSort(EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')), EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')), BooleanSort()))}

func_name2args_sort:  {'chosenAt': (EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')), EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))), 'didNotPromise': (EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')),), 'start': (EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')),), 'member': (EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')), EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')))}

sign_func_name2count:  {'1$chosenAt': 1, '1$didNotPromise': 2, '1$start': 2, '0$member': 2}


---------- ProductArgPartition ----------

sort2class_sigs: {EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')): [quorum$0$member$1$0; quorum$0$member$1$1; quorum$1$chosenAt$0$0], EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')): [proposer$1$chosenAt$1$0, proposer$1$start$0$0, proposer$1$start$0$1], EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')): [acceptor$0$member$0$0; acceptor$1$didNotPromise$0$0, acceptor$0$member$0$1; acceptor$1$didNotPromise$0$1]}

sort2part_sig: {EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')): quorum$0$member$1$0; quorum$0$member$1$1; quorum$1$chosenAt$0$0, EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')): proposer$1$chosenAt$1$0 | proposer$1$start$0$0 | proposer$1$start$0$1, EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')): acceptor$0$member$0$0; acceptor$1$didNotPromise$0$0 | acceptor$0$member$0$1; acceptor$1$didNotPromise$0$1}

	sort: quorum

	identical_classes: {'quorum$0$member$1; quorum$0$member$1; quorum$1$chosenAt$0': [quorum$0$member$1$0; quorum$0$member$1$1; quorum$1$chosenAt$0$0]}

	identical_single_classes: {'quorum$0$member$1; quorum$0$member$1; quorum$1$chosenAt$0': quorum$0$member$1$0; quorum$0$member$1$1; quorum$1$chosenAt$0$0}

	identical_multi_classes: {}

	sort: proposer

	identical_classes: {'proposer$1$chosenAt$1': [proposer$1$chosenAt$1$0], 'proposer$1$start$0': [proposer$1$start$0$0, proposer$1$start$0$1]}

	identical_single_classes: {'proposer$1$chosenAt$1': proposer$1$chosenAt$1$0}

	identical_multi_classes: {'proposer$1$start$0': [proposer$1$start$0$0, proposer$1$start$0$1]}

	sort: acceptor

	identical_classes: {'acceptor$0$member$0; acceptor$1$didNotPromise$0': [acceptor$0$member$0$0; acceptor$1$didNotPromise$0$0, acceptor$0$member$0$1; acceptor$1$didNotPromise$0$1]}

	identical_single_classes: {}

	identical_multi_classes: {'acceptor$0$member$0; acceptor$1$didNotPromise$0': [acceptor$0$member$0$0, acceptor$1$didNotPromise$0$0, acceptor$0$member$0$1, acceptor$1$didNotPromise$0$1]}


---------- QInference: _set_sort_to_quantifier_mode ----------

quantifier mode: quorum: QuantifierMode.forall

quantifier mode: proposer: QuantifierMode.forall_exists

quantifier mode: acceptor: QuantifierMode.forall


---------- QInference: _set_constraint_mode ----------

constraint mode: ConstraintMode.no_merge


---------- QFormula: _set_qvars ----------

forall_qvars: {Var('PROPOSER1', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))), Var('ACCEPTOR1', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Var('QUORUM0', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), Var('ACCEPTOR0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')))}

exists_qvars: {Var('PROPOSER0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))}


---------- QFormula: _set_signed_func_name_to_args ----------

signed_func_name2args: {'1$chosenAt': [[Var('QUORUM0', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), Var('PROPOSER1', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))]], '1$didNotPromise': [[Var('ACCEPTOR0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')))], [Var('ACCEPTOR1', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')))]], '1$start': [[Var('PROPOSER0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))], [Var('PROPOSER0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))]], '0$member': [[Var('ACCEPTOR0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Var('QUORUM0', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')))], [Var('ACCEPTOR1', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Var('QUORUM0', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')))]]}


---------- QFormula: _set_qterms ----------

qterms: ['~chosenAt(QUORUM0,PROPOSER1)', '~didNotPromise(ACCEPTOR0)', '~didNotPromise(ACCEPTOR1)', 'member(ACCEPTOR0,QUORUM0)', 'member(ACCEPTOR1,QUORUM0)', '~start(PROPOSER0)']


---------- QFormula: get_qclause ----------

qclause: forall PROPOSER1,ACCEPTOR0,ACCEPTOR1,QUORUM0. chosenAt(QUORUM0,PROPOSER1) | didNotPromise(ACCEPTOR0) | didNotPromise(ACCEPTOR1) | ~member(ACCEPTOR0,QUORUM0) | ~member(ACCEPTOR1,QUORUM0) | (exists PROPOSER0. (start(PROPOSER0) & PROPOSER0 ~= PROPOSER1)) | ACCEPTOR0 = ACCEPTOR1


=== Prime Orbit 37 =====================
size : 9
num_suborbits: 1
582 (*) : ---0--0----01---------00---
582     : ['leader(proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor2)', '~promise(acceptor2,proposer1)', '~promise(acceptor2,proposer2)']
583     : ----0--0---0-1-------0-0---
583     : ['leader(proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor2)', '~promise(acceptor2,proposer0)', '~promise(acceptor2,proposer2)']
584     : -----0--0--0--1------00----
584     : ['leader(proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor2)', '~promise(acceptor2,proposer0)', '~promise(acceptor2,proposer1)']
585     : 0-----0---0-1------00------
585     : ['leader(proposer0)', '~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor1)', '~promise(acceptor1,proposer1)', '~promise(acceptor1,proposer2)']
586     : -0-----0--0--1----0-0------
586     : ['leader(proposer1)', '~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor1)', '~promise(acceptor1,proposer0)', '~promise(acceptor1,proposer2)']
587     : --0-----0-0---1---00-------
587     : ['leader(proposer2)', '~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor1)', '~promise(acceptor1,proposer0)', '~promise(acceptor1,proposer1)']
588     : 0--0-----0--1---00---------
588     : ['leader(proposer0)', '~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~didNotPromise(acceptor0)', '~promise(acceptor0,proposer1)', '~promise(acceptor0,proposer2)']
589     : -0--0----0---1-0-0---------
589     : ['leader(proposer1)', '~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~didNotPromise(acceptor0)', '~promise(acceptor0,proposer0)', '~promise(acceptor0,proposer2)']
590     : --0--0---0----100----------
590     : ['leader(proposer2)', '~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~didNotPromise(acceptor0)', '~promise(acceptor0,proposer0)', '~promise(acceptor0,proposer1)']
num_forall :   0
num_exists :   0
num_literals : 0
quantified form : None
qcost : 0




---------- QPrime ----------


---------- ConstArgBinding ----------

terms: ['~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor2)', 'leader(proposer0)', '~promise(acceptor2,proposer1)', '~promise(acceptor2,proposer2)', 'member(acceptor2,quorum__acceptor1_acceptor2)', 'member(acceptor2,quorum__acceptor0_acceptor2)']

sign_func_name2args: {'1$chosenAt': [(Const('quorum__acceptor0_acceptor2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), Const('proposer0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))), (Const('quorum__acceptor1_acceptor2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), Const('proposer0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))))], '1$didNotPromise': [(Const('acceptor2', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))),)], '0$leader': [(Const('proposer0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))),)], '1$promise': [(Const('acceptor2', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Const('proposer1', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))), (Const('acceptor2', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Const('proposer2', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))))], '0$member': [(Const('acceptor2', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Const('quorum__acceptor1_acceptor2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')))), (Const('acceptor2', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Const('quorum__acceptor0_acceptor2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))))]}

const2sigs: {Const('quorum__acceptor0_acceptor2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))): [quorum$1$chosenAt$0$0, quorum$0$member$1$1], Const('proposer0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))): [proposer$1$chosenAt$1$0, proposer$1$chosenAt$1$1, proposer$0$leader$0$0], Const('quorum__acceptor1_acceptor2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))): [quorum$1$chosenAt$0$1, quorum$0$member$1$0], Const('acceptor2', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))): [acceptor$1$didNotPromise$0$0, acceptor$1$promise$0$0, acceptor$1$promise$0$1, acceptor$0$member$0$0, acceptor$0$member$0$1], Const('proposer1', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))): [proposer$1$promise$1$0], Const('proposer2', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))): [proposer$1$promise$1$1]}

sig2const: {'quorum$1$chosenAt$0$0': Const('quorum__acceptor0_acceptor2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), 'proposer$1$chosenAt$1$0': Const('proposer0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))), 'quorum$1$chosenAt$0$1': Const('quorum__acceptor1_acceptor2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), 'proposer$1$chosenAt$1$1': Const('proposer0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))), 'acceptor$1$didNotPromise$0$0': Const('acceptor2', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), 'proposer$0$leader$0$0': Const('proposer0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))), 'acceptor$1$promise$0$0': Const('acceptor2', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), 'proposer$1$promise$1$0': Const('proposer1', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))), 'acceptor$1$promise$0$1': Const('acceptor2', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), 'proposer$1$promise$1$1': Const('proposer2', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))), 'acceptor$0$member$0$0': Const('acceptor2', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), 'quorum$0$member$1$0': Const('quorum__acceptor1_acceptor2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), 'acceptor$0$member$0$1': Const('acceptor2', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), 'quorum$0$member$1$1': Const('quorum__acceptor0_acceptor2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')))}


---------- ArgPartition ----------

sort2class_sigs: {EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')): [quorum$0$member$1$0; quorum$1$chosenAt$0$1, quorum$0$member$1$1; quorum$1$chosenAt$0$0], EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')): [proposer$0$leader$0$0; proposer$1$chosenAt$1$0; proposer$1$chosenAt$1$1, proposer$1$promise$1$0, proposer$1$promise$1$1], EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')): [acceptor$0$member$0$0; acceptor$0$member$0$1; acceptor$1$didNotPromise$0$0; acceptor$1$promise$0$0; acceptor$1$promise$0$1]}

sort2part_sig: {EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')): quorum$0$member$1$0; quorum$1$chosenAt$0$1 | quorum$0$member$1$1; quorum$1$chosenAt$0$0, EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')): proposer$0$leader$0$0; proposer$1$chosenAt$1$0; proposer$1$chosenAt$1$1 | proposer$1$promise$1$0 | proposer$1$promise$1$1, EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')): acceptor$0$member$0$0; acceptor$0$member$0$1; acceptor$1$didNotPromise$0$0; acceptor$1$promise$0$0; acceptor$1$promise$0$1}

part_sig: ('acceptor$0$member$0$0; acceptor$0$member$0$1; acceptor$1$didNotPromise$0$0; acceptor$1$promise$0$0; acceptor$1$promise$0$1', 'proposer$0$leader$0$0; proposer$1$chosenAt$1$0; proposer$1$chosenAt$1$1 | proposer$1$promise$1$0 | proposer$1$promise$1$1', 'quorum$0$member$1$0; quorum$1$chosenAt$0$1 | quorum$0$member$1$1; quorum$1$chosenAt$0$0')


---------- SigGenerator ----------

terms:  ['~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor2)', 'leader(proposer0)', '~promise(acceptor2,proposer1)', '~promise(acceptor2,proposer2)', 'member(acceptor2,quorum__acceptor1_acceptor2)', 'member(acceptor2,quorum__acceptor0_acceptor2)']

func_name2symbol:  {'chosenAt': Const('chosenAt', FunctionSort(EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')), EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')), BooleanSort())), 'didNotPromise': Const('didNotPromise', FunctionSort(EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')), BooleanSort())), 'leader': Const('leader', FunctionSort(EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')), BooleanSort())), 'promise': Const('promise', FunctionSort(EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')), EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')), BooleanSort())), 'member': Const('member', FunctionSort(EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')), EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')), BooleanSort()))}

func_name2args_sort:  {'chosenAt': (EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')), EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))), 'didNotPromise': (EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')),), 'leader': (EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')),), 'promise': (EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')), EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))), 'member': (EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')), EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')))}

sign_func_name2count:  {'1$chosenAt': 2, '1$didNotPromise': 1, '0$leader': 1, '1$promise': 2, '0$member': 2}


---------- ProductArgPartition ----------

sort2class_sigs: {EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')): [quorum$0$member$1$0; quorum$1$chosenAt$0$1, quorum$0$member$1$1; quorum$1$chosenAt$0$0], EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')): [proposer$0$leader$0$0; proposer$1$chosenAt$1$0; proposer$1$chosenAt$1$1, proposer$1$promise$1$0, proposer$1$promise$1$1], EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')): [acceptor$0$member$0$0; acceptor$0$member$0$1; acceptor$1$didNotPromise$0$0; acceptor$1$promise$0$0; acceptor$1$promise$0$1]}

sort2part_sig: {EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')): quorum$0$member$1$0; quorum$1$chosenAt$0$1 | quorum$0$member$1$1; quorum$1$chosenAt$0$0, EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')): proposer$0$leader$0$0; proposer$1$chosenAt$1$0; proposer$1$chosenAt$1$1 | proposer$1$promise$1$0 | proposer$1$promise$1$1, EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')): acceptor$0$member$0$0; acceptor$0$member$0$1; acceptor$1$didNotPromise$0$0; acceptor$1$promise$0$0; acceptor$1$promise$0$1}

	sort: quorum

	identical_classes: {'quorum$0$member$1; quorum$1$chosenAt$0': [quorum$0$member$1$0; quorum$1$chosenAt$0$1, quorum$0$member$1$1; quorum$1$chosenAt$0$0]}

	identical_single_classes: {}

	identical_multi_classes: {'quorum$0$member$1; quorum$1$chosenAt$0': [quorum$0$member$1$0, quorum$1$chosenAt$0$1, quorum$0$member$1$1, quorum$1$chosenAt$0$0]}

	sort: proposer

	identical_classes: {'proposer$0$leader$0; proposer$1$chosenAt$1; proposer$1$chosenAt$1': [proposer$0$leader$0$0; proposer$1$chosenAt$1$0; proposer$1$chosenAt$1$1], 'proposer$1$promise$1': [proposer$1$promise$1$0, proposer$1$promise$1$1]}

	identical_single_classes: {'proposer$0$leader$0; proposer$1$chosenAt$1; proposer$1$chosenAt$1': proposer$0$leader$0$0; proposer$1$chosenAt$1$0; proposer$1$chosenAt$1$1}

	identical_multi_classes: {'proposer$1$promise$1': [proposer$1$promise$1$0, proposer$1$promise$1$1]}

	sort: acceptor

	identical_classes: {'acceptor$0$member$0; acceptor$0$member$0; acceptor$1$didNotPromise$0; acceptor$1$promise$0; acceptor$1$promise$0': [acceptor$0$member$0$0; acceptor$0$member$0$1; acceptor$1$didNotPromise$0$0; acceptor$1$promise$0$0; acceptor$1$promise$0$1]}

	identical_single_classes: {'acceptor$0$member$0; acceptor$0$member$0; acceptor$1$didNotPromise$0; acceptor$1$promise$0; acceptor$1$promise$0': acceptor$0$member$0$0; acceptor$0$member$0$1; acceptor$1$didNotPromise$0$0; acceptor$1$promise$0$0; acceptor$1$promise$0$1}

	identical_multi_classes: {}


---------- QInference: _set_sort_to_quantifier_mode ----------

quantifier mode: quorum: QuantifierMode.forall

quantifier mode: proposer: QuantifierMode.forall_exists

quantifier mode: acceptor: QuantifierMode.forall


---------- QInference: _set_constraint_mode ----------

constraint mode: ConstraintMode.no_merge


---------- QFormula: _set_qvars ----------

forall_qvars: {Var('PROPOSER1', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))), Var('QUORUM1', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), Var('QUORUM0', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), Var('ACCEPTOR0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')))}

exists_qvars: {Var('PROPOSER0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))}


---------- QFormula: _set_signed_func_name_to_args ----------

signed_func_name2args: {'1$chosenAt': [[Var('QUORUM1', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), Var('PROPOSER1', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))], [Var('QUORUM0', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), Var('PROPOSER1', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))]], '1$didNotPromise': [[Var('ACCEPTOR0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')))]], '0$leader': [[Var('PROPOSER1', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))]], '1$promise': [[Var('ACCEPTOR0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Var('PROPOSER0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))], [Var('ACCEPTOR0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Var('PROPOSER0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))]], '0$member': [[Var('ACCEPTOR0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Var('QUORUM0', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')))], [Var('ACCEPTOR0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Var('QUORUM1', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')))]]}


---------- QFormula: _set_qterms ----------

qterms: ['~promise(ACCEPTOR0,PROPOSER0)', '~chosenAt(QUORUM0,PROPOSER1)', '~didNotPromise(ACCEPTOR0)', 'member(ACCEPTOR0,QUORUM1)', 'leader(PROPOSER1)', 'member(ACCEPTOR0,QUORUM0)', '~chosenAt(QUORUM1,PROPOSER1)']


---------- QFormula: get_qclause ----------

qclause: forall PROPOSER1,QUORUM1,ACCEPTOR0,QUORUM0. chosenAt(QUORUM0,PROPOSER1) | didNotPromise(ACCEPTOR0) | ~member(ACCEPTOR0,QUORUM1) | ~leader(PROPOSER1) | ~member(ACCEPTOR0,QUORUM0) | chosenAt(QUORUM1,PROPOSER1) | (exists PROPOSER0. (promise(ACCEPTOR0,PROPOSER0) & PROPOSER0 ~= PROPOSER1)) | QUORUM0 = QUORUM1


=== Prime Orbit 38 =====================
size : 18
num_suborbits: 1
591 (*) : -0-------00----0--0-------0
591     : ['~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~promise(acceptor0,proposer0)', '~promise(acceptor1,proposer0)', '~start(proposer2)']
592     : --0------00----0--0------0-
592     : ['~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~promise(acceptor0,proposer0)', '~promise(acceptor1,proposer0)', '~start(proposer1)']
593     : 0--------00-----0--0------0
593     : ['~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~promise(acceptor0,proposer1)', '~promise(acceptor1,proposer1)', '~start(proposer2)']
594     : --0------00-----0--0----0--
594     : ['~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~promise(acceptor0,proposer1)', '~promise(acceptor1,proposer1)', '~start(proposer0)']
595     : 0--------00------0--0----0-
595     : ['~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~promise(acceptor0,proposer2)', '~promise(acceptor1,proposer2)', '~start(proposer1)']
596     : -0-------00------0--0---0--
596     : ['~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~promise(acceptor0,proposer2)', '~promise(acceptor1,proposer2)', '~start(proposer0)']
597     : ----0----0-0---0-----0----0
597     : ['~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor2)', '~promise(acceptor0,proposer0)', '~promise(acceptor2,proposer0)', '~start(proposer2)']
598     : -----0---0-0---0-----0---0-
598     : ['~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor2)', '~promise(acceptor0,proposer0)', '~promise(acceptor2,proposer0)', '~start(proposer1)']
599     : ---0-----0-0----0-----0---0
599     : ['~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor2)', '~promise(acceptor0,proposer1)', '~promise(acceptor2,proposer1)', '~start(proposer2)']
600     : -----0---0-0----0-----0-0--
600     : ['~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor2)', '~promise(acceptor0,proposer1)', '~promise(acceptor2,proposer1)', '~start(proposer0)']
601     : ---0-----0-0-----0-----0-0-
601     : ['~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor2)', '~promise(acceptor0,proposer2)', '~promise(acceptor2,proposer2)', '~start(proposer1)']
602     : ----0----0-0-----0-----00--
602     : ['~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor2)', '~promise(acceptor0,proposer2)', '~promise(acceptor2,proposer2)', '~start(proposer0)']
603     : -------0--00------0--0----0
603     : ['~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor1,proposer0)', '~promise(acceptor2,proposer0)', '~start(proposer2)']
604     : --------0-00------0--0---0-
604     : ['~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor1,proposer0)', '~promise(acceptor2,proposer0)', '~start(proposer1)']
605     : ------0---00-------0--0---0
605     : ['~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor1,proposer1)', '~promise(acceptor2,proposer1)', '~start(proposer2)']
606     : --------0-00-------0--0-0--
606     : ['~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor1,proposer1)', '~promise(acceptor2,proposer1)', '~start(proposer0)']
607     : ------0---00--------0--0-0-
607     : ['~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor1,proposer2)', '~promise(acceptor2,proposer2)', '~start(proposer1)']
608     : -------0--00--------0--00--
608     : ['~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor1,proposer2)', '~promise(acceptor2,proposer2)', '~start(proposer0)']
num_forall :   0
num_exists :   0
num_literals : 0
quantified form : None
qcost : 0




---------- QPrime ----------


---------- ConstArgBinding ----------

terms: ['~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~promise(acceptor0,proposer0)', '~promise(acceptor1,proposer0)', '~start(proposer2)', 'member(acceptor0,quorum__acceptor0_acceptor1)', 'member(acceptor1,quorum__acceptor0_acceptor1)']

sign_func_name2args: {'1$chosenAt': [(Const('quorum__acceptor0_acceptor1', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), Const('proposer1', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))))], '1$didNotPromise': [(Const('acceptor0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))),), (Const('acceptor1', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))),)], '1$promise': [(Const('acceptor0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Const('proposer0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))), (Const('acceptor1', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Const('proposer0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))))], '1$start': [(Const('proposer2', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))),)], '0$member': [(Const('acceptor0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Const('quorum__acceptor0_acceptor1', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')))), (Const('acceptor1', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Const('quorum__acceptor0_acceptor1', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))))]}

const2sigs: {Const('quorum__acceptor0_acceptor1', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))): [quorum$1$chosenAt$0$0, quorum$0$member$1$0, quorum$0$member$1$1], Const('proposer1', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))): [proposer$1$chosenAt$1$0], Const('acceptor0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))): [acceptor$1$didNotPromise$0$0, acceptor$1$promise$0$0, acceptor$0$member$0$0], Const('acceptor1', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))): [acceptor$1$didNotPromise$0$1, acceptor$1$promise$0$1, acceptor$0$member$0$1], Const('proposer0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))): [proposer$1$promise$1$0, proposer$1$promise$1$1], Const('proposer2', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))): [proposer$1$start$0$0]}

sig2const: {'quorum$1$chosenAt$0$0': Const('quorum__acceptor0_acceptor1', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), 'proposer$1$chosenAt$1$0': Const('proposer1', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))), 'acceptor$1$didNotPromise$0$0': Const('acceptor0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), 'acceptor$1$didNotPromise$0$1': Const('acceptor1', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), 'acceptor$1$promise$0$0': Const('acceptor0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), 'proposer$1$promise$1$0': Const('proposer0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))), 'acceptor$1$promise$0$1': Const('acceptor1', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), 'proposer$1$promise$1$1': Const('proposer0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))), 'proposer$1$start$0$0': Const('proposer2', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))), 'acceptor$0$member$0$0': Const('acceptor0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), 'quorum$0$member$1$0': Const('quorum__acceptor0_acceptor1', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), 'acceptor$0$member$0$1': Const('acceptor1', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), 'quorum$0$member$1$1': Const('quorum__acceptor0_acceptor1', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')))}


---------- ArgPartition ----------

sort2class_sigs: {EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')): [quorum$0$member$1$0; quorum$0$member$1$1; quorum$1$chosenAt$0$0], EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')): [proposer$1$chosenAt$1$0, proposer$1$promise$1$0; proposer$1$promise$1$1, proposer$1$start$0$0], EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')): [acceptor$0$member$0$0; acceptor$1$didNotPromise$0$0; acceptor$1$promise$0$0, acceptor$0$member$0$1; acceptor$1$didNotPromise$0$1; acceptor$1$promise$0$1]}

sort2part_sig: {EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')): quorum$0$member$1$0; quorum$0$member$1$1; quorum$1$chosenAt$0$0, EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')): proposer$1$chosenAt$1$0 | proposer$1$promise$1$0; proposer$1$promise$1$1 | proposer$1$start$0$0, EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')): acceptor$0$member$0$0; acceptor$1$didNotPromise$0$0; acceptor$1$promise$0$0 | acceptor$0$member$0$1; acceptor$1$didNotPromise$0$1; acceptor$1$promise$0$1}

part_sig: ('acceptor$0$member$0$0; acceptor$1$didNotPromise$0$0; acceptor$1$promise$0$0 | acceptor$0$member$0$1; acceptor$1$didNotPromise$0$1; acceptor$1$promise$0$1', 'proposer$1$chosenAt$1$0 | proposer$1$promise$1$0; proposer$1$promise$1$1 | proposer$1$start$0$0', 'quorum$0$member$1$0; quorum$0$member$1$1; quorum$1$chosenAt$0$0')


---------- SigGenerator ----------

terms:  ['~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~promise(acceptor0,proposer0)', '~promise(acceptor1,proposer0)', '~start(proposer2)', 'member(acceptor0,quorum__acceptor0_acceptor1)', 'member(acceptor1,quorum__acceptor0_acceptor1)']

func_name2symbol:  {'chosenAt': Const('chosenAt', FunctionSort(EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')), EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')), BooleanSort())), 'didNotPromise': Const('didNotPromise', FunctionSort(EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')), BooleanSort())), 'promise': Const('promise', FunctionSort(EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')), EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')), BooleanSort())), 'start': Const('start', FunctionSort(EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')), BooleanSort())), 'member': Const('member', FunctionSort(EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')), EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')), BooleanSort()))}

func_name2args_sort:  {'chosenAt': (EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')), EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))), 'didNotPromise': (EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')),), 'promise': (EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')), EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))), 'start': (EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')),), 'member': (EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')), EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')))}

sign_func_name2count:  {'1$chosenAt': 1, '1$didNotPromise': 2, '1$promise': 2, '1$start': 1, '0$member': 2}


---------- ProductArgPartition ----------

sort2class_sigs: {EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')): [quorum$0$member$1$0; quorum$0$member$1$1; quorum$1$chosenAt$0$0], EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')): [proposer$1$chosenAt$1$0, proposer$1$promise$1$0; proposer$1$promise$1$1, proposer$1$start$0$0], EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')): [acceptor$0$member$0$0; acceptor$1$didNotPromise$0$0; acceptor$1$promise$0$0, acceptor$0$member$0$1; acceptor$1$didNotPromise$0$1; acceptor$1$promise$0$1]}

sort2part_sig: {EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')): quorum$0$member$1$0; quorum$0$member$1$1; quorum$1$chosenAt$0$0, EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')): proposer$1$chosenAt$1$0 | proposer$1$promise$1$0; proposer$1$promise$1$1 | proposer$1$start$0$0, EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')): acceptor$0$member$0$0; acceptor$1$didNotPromise$0$0; acceptor$1$promise$0$0 | acceptor$0$member$0$1; acceptor$1$didNotPromise$0$1; acceptor$1$promise$0$1}

	sort: quorum

	identical_classes: {'quorum$0$member$1; quorum$0$member$1; quorum$1$chosenAt$0': [quorum$0$member$1$0; quorum$0$member$1$1; quorum$1$chosenAt$0$0]}

	identical_single_classes: {'quorum$0$member$1; quorum$0$member$1; quorum$1$chosenAt$0': quorum$0$member$1$0; quorum$0$member$1$1; quorum$1$chosenAt$0$0}

	identical_multi_classes: {}

	sort: proposer

	identical_classes: {'proposer$1$chosenAt$1': [proposer$1$chosenAt$1$0], 'proposer$1$promise$1; proposer$1$promise$1': [proposer$1$promise$1$0; proposer$1$promise$1$1], 'proposer$1$start$0': [proposer$1$start$0$0]}

	identical_single_classes: {'proposer$1$chosenAt$1': proposer$1$chosenAt$1$0, 'proposer$1$promise$1; proposer$1$promise$1': proposer$1$promise$1$0; proposer$1$promise$1$1, 'proposer$1$start$0': proposer$1$start$0$0}

	identical_multi_classes: {}

	sort: acceptor

	identical_classes: {'acceptor$0$member$0; acceptor$1$didNotPromise$0; acceptor$1$promise$0': [acceptor$0$member$0$0; acceptor$1$didNotPromise$0$0; acceptor$1$promise$0$0, acceptor$0$member$0$1; acceptor$1$didNotPromise$0$1; acceptor$1$promise$0$1]}

	identical_single_classes: {}

	identical_multi_classes: {'acceptor$0$member$0; acceptor$1$didNotPromise$0; acceptor$1$promise$0': [acceptor$0$member$0$0, acceptor$1$didNotPromise$0$0, acceptor$1$promise$0$0, acceptor$0$member$0$1, acceptor$1$didNotPromise$0$1, acceptor$1$promise$0$1]}


---------- QInference: _set_sort_to_quantifier_mode ----------

quantifier mode: quorum: QuantifierMode.forall

quantifier mode: proposer: QuantifierMode.forall

quantifier mode: acceptor: QuantifierMode.forall


---------- QInference: _set_constraint_mode ----------

constraint mode: ConstraintMode.no_merge


---------- QFormula: _set_qvars ----------

forall_qvars: {Var('PROPOSER1', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))), Var('PROPOSER2', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))), Var('ACCEPTOR1', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Var('QUORUM0', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), Var('ACCEPTOR0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Var('PROPOSER0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))}

exists_qvars: set()


---------- QFormula: _set_signed_func_name_to_args ----------

signed_func_name2args: {'1$chosenAt': [[Var('QUORUM0', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), Var('PROPOSER0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))]], '1$didNotPromise': [[Var('ACCEPTOR0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')))], [Var('ACCEPTOR1', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')))]], '1$promise': [[Var('ACCEPTOR0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Var('PROPOSER1', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))], [Var('ACCEPTOR1', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Var('PROPOSER1', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))]], '1$start': [[Var('PROPOSER2', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))]], '0$member': [[Var('ACCEPTOR0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Var('QUORUM0', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')))], [Var('ACCEPTOR1', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Var('QUORUM0', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')))]]}


---------- QFormula: _set_qterms ----------

qterms: ['~promise(ACCEPTOR1,PROPOSER1)', '~start(PROPOSER2)', '~didNotPromise(ACCEPTOR0)', '~didNotPromise(ACCEPTOR1)', '~promise(ACCEPTOR0,PROPOSER1)', 'member(ACCEPTOR0,QUORUM0)', 'member(ACCEPTOR1,QUORUM0)', '~chosenAt(QUORUM0,PROPOSER0)']


---------- QFormula: get_qclause ----------

qclause: forall PROPOSER0,PROPOSER1,PROPOSER2,ACCEPTOR1,QUORUM0,ACCEPTOR0. promise(ACCEPTOR1,PROPOSER1) | start(PROPOSER2) | didNotPromise(ACCEPTOR0) | didNotPromise(ACCEPTOR1) | promise(ACCEPTOR0,PROPOSER1) | ~member(ACCEPTOR0,QUORUM0) | ~member(ACCEPTOR1,QUORUM0) | chosenAt(QUORUM0,PROPOSER0) | (PROPOSER0 = PROPOSER1 | PROPOSER0 = PROPOSER2 | ACCEPTOR0 = ACCEPTOR1 | PROPOSER1 = PROPOSER2)


=== Prime Orbit 39 =====================
size : 18
num_suborbits: 1
609 (*) : -0-0-----0---------1-1----0
609     : ['promise(acceptor1,proposer1)', 'promise(acceptor2,proposer0)', '~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~didNotPromise(acceptor0)', '~start(proposer2)']
610     : --00-----0----------11---0-
610     : ['promise(acceptor1,proposer2)', 'promise(acceptor2,proposer0)', '~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~didNotPromise(acceptor0)', '~start(proposer1)']
611     : 0---0----0--------1---1---0
611     : ['promise(acceptor1,proposer0)', 'promise(acceptor2,proposer1)', '~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~didNotPromise(acceptor0)', '~start(proposer2)']
612     : --0-0----0----------1-1-0--
612     : ['promise(acceptor1,proposer2)', 'promise(acceptor2,proposer1)', '~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~didNotPromise(acceptor0)', '~start(proposer0)']
613     : 0----0---0--------1----1-0-
613     : ['promise(acceptor1,proposer0)', 'promise(acceptor2,proposer2)', '~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~didNotPromise(acceptor0)', '~start(proposer1)']
614     : -0---0---0---------1---10--
614     : ['promise(acceptor1,proposer1)', 'promise(acceptor2,proposer2)', '~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~didNotPromise(acceptor0)', '~start(proposer0)']
615     : -0----0---0-----1----1----0
615     : ['promise(acceptor0,proposer1)', 'promise(acceptor2,proposer0)', '~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor1)', '~start(proposer2)']
616     : --0---0---0------1---1---0-
616     : ['promise(acceptor0,proposer2)', 'promise(acceptor2,proposer0)', '~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor1)', '~start(proposer1)']
617     : 0------0--0----1------1---0
617     : ['promise(acceptor0,proposer0)', 'promise(acceptor2,proposer1)', '~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor1)', '~start(proposer2)']
618     : --0----0--0------1----1-0--
618     : ['promise(acceptor0,proposer2)', 'promise(acceptor2,proposer1)', '~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor1)', '~start(proposer0)']
619     : 0-------0-0----1-------1-0-
619     : ['promise(acceptor0,proposer0)', 'promise(acceptor2,proposer2)', '~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor1)', '~start(proposer1)']
620     : -0------0-0-----1------10--
620     : ['promise(acceptor0,proposer1)', 'promise(acceptor2,proposer2)', '~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor1)', '~start(proposer0)']
621     : ----0-0----0----1-1-------0
621     : ['promise(acceptor0,proposer1)', 'promise(acceptor1,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor2)', '~start(proposer2)']
622     : -----00----0-----11------0-
622     : ['promise(acceptor0,proposer2)', 'promise(acceptor1,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor2)', '~start(proposer1)']
623     : ---0---0---0---1---1------0
623     : ['promise(acceptor0,proposer0)', 'promise(acceptor1,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor2)', '~start(proposer2)']
624     : -----0-0---0-----1-1----0--
624     : ['promise(acceptor0,proposer2)', 'promise(acceptor1,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor2)', '~start(proposer0)']
625     : ---0----0--0---1----1----0-
625     : ['promise(acceptor0,proposer0)', 'promise(acceptor1,proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor2)', '~start(proposer1)']
626     : ----0---0--0----1---1---0--
626     : ['promise(acceptor0,proposer1)', 'promise(acceptor1,proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor2)', '~start(proposer0)']
num_forall :   0
num_exists :   0
num_literals : 0
quantified form : None
qcost : 0




---------- QPrime ----------


---------- ConstArgBinding ----------

terms: ['~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~didNotPromise(acceptor0)', 'promise(acceptor1,proposer1)', 'promise(acceptor2,proposer0)', '~start(proposer2)', 'member(acceptor0,quorum__acceptor0_acceptor1)', 'member(acceptor1,quorum__acceptor0_acceptor1)', '~member(acceptor2,quorum__acceptor0_acceptor1)', 'member(acceptor0,quorum__acceptor0_acceptor2)', '~member(acceptor1,quorum__acceptor0_acceptor2)', 'member(acceptor2,quorum__acceptor0_acceptor2)']

sign_func_name2args: {'1$chosenAt': [(Const('quorum__acceptor0_acceptor1', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), Const('proposer1', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))), (Const('quorum__acceptor0_acceptor2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), Const('proposer0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))))], '1$didNotPromise': [(Const('acceptor0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))),)], '0$promise': [(Const('acceptor1', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Const('proposer1', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))), (Const('acceptor2', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Const('proposer0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))))], '1$start': [(Const('proposer2', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))),)], '0$member': [(Const('acceptor0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Const('quorum__acceptor0_acceptor1', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')))), (Const('acceptor1', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Const('quorum__acceptor0_acceptor1', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')))), (Const('acceptor0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Const('quorum__acceptor0_acceptor2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')))), (Const('acceptor2', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Const('quorum__acceptor0_acceptor2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))))], '1$member': [(Const('acceptor2', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Const('quorum__acceptor0_acceptor1', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')))), (Const('acceptor1', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Const('quorum__acceptor0_acceptor2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))))]}

const2sigs: {Const('quorum__acceptor0_acceptor1', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))): [quorum$1$chosenAt$0$0, quorum$0$member$1$0, quorum$0$member$1$1, quorum$1$member$1$0], Const('proposer1', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))): [proposer$1$chosenAt$1$0, proposer$0$promise$1$0], Const('quorum__acceptor0_acceptor2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))): [quorum$1$chosenAt$0$1, quorum$0$member$1$2, quorum$0$member$1$3, quorum$1$member$1$1], Const('proposer0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))): [proposer$1$chosenAt$1$1, proposer$0$promise$1$1], Const('acceptor0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))): [acceptor$1$didNotPromise$0$0, acceptor$0$member$0$0, acceptor$0$member$0$2], Const('acceptor1', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))): [acceptor$0$promise$0$0, acceptor$0$member$0$1, acceptor$1$member$0$1], Const('acceptor2', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))): [acceptor$0$promise$0$1, acceptor$0$member$0$3, acceptor$1$member$0$0], Const('proposer2', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))): [proposer$1$start$0$0]}

sig2const: {'quorum$1$chosenAt$0$0': Const('quorum__acceptor0_acceptor1', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), 'proposer$1$chosenAt$1$0': Const('proposer1', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))), 'quorum$1$chosenAt$0$1': Const('quorum__acceptor0_acceptor2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), 'proposer$1$chosenAt$1$1': Const('proposer0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))), 'acceptor$1$didNotPromise$0$0': Const('acceptor0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), 'acceptor$0$promise$0$0': Const('acceptor1', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), 'proposer$0$promise$1$0': Const('proposer1', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))), 'acceptor$0$promise$0$1': Const('acceptor2', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), 'proposer$0$promise$1$1': Const('proposer0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))), 'proposer$1$start$0$0': Const('proposer2', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))), 'acceptor$0$member$0$0': Const('acceptor0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), 'quorum$0$member$1$0': Const('quorum__acceptor0_acceptor1', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), 'acceptor$0$member$0$1': Const('acceptor1', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), 'quorum$0$member$1$1': Const('quorum__acceptor0_acceptor1', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), 'acceptor$0$member$0$2': Const('acceptor0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), 'quorum$0$member$1$2': Const('quorum__acceptor0_acceptor2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), 'acceptor$0$member$0$3': Const('acceptor2', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), 'quorum$0$member$1$3': Const('quorum__acceptor0_acceptor2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), 'acceptor$1$member$0$0': Const('acceptor2', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), 'quorum$1$member$1$0': Const('quorum__acceptor0_acceptor1', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), 'acceptor$1$member$0$1': Const('acceptor1', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), 'quorum$1$member$1$1': Const('quorum__acceptor0_acceptor2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')))}


---------- ArgPartition ----------

sort2class_sigs: {EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')): [quorum$0$member$1$0; quorum$0$member$1$1; quorum$1$chosenAt$0$0; quorum$1$member$1$0, quorum$0$member$1$2; quorum$0$member$1$3; quorum$1$chosenAt$0$1; quorum$1$member$1$1], EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')): [proposer$0$promise$1$0; proposer$1$chosenAt$1$0, proposer$0$promise$1$1; proposer$1$chosenAt$1$1, proposer$1$start$0$0], EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')): [acceptor$0$member$0$0; acceptor$0$member$0$2; acceptor$1$didNotPromise$0$0, acceptor$0$member$0$1; acceptor$0$promise$0$0; acceptor$1$member$0$1, acceptor$0$member$0$3; acceptor$0$promise$0$1; acceptor$1$member$0$0]}

sort2part_sig: {EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')): quorum$0$member$1$0; quorum$0$member$1$1; quorum$1$chosenAt$0$0; quorum$1$member$1$0 | quorum$0$member$1$2; quorum$0$member$1$3; quorum$1$chosenAt$0$1; quorum$1$member$1$1, EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')): proposer$0$promise$1$0; proposer$1$chosenAt$1$0 | proposer$0$promise$1$1; proposer$1$chosenAt$1$1 | proposer$1$start$0$0, EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')): acceptor$0$member$0$0; acceptor$0$member$0$2; acceptor$1$didNotPromise$0$0 | acceptor$0$member$0$1; acceptor$0$promise$0$0; acceptor$1$member$0$1 | acceptor$0$member$0$3; acceptor$0$promise$0$1; acceptor$1$member$0$0}

part_sig: ('acceptor$0$member$0$0; acceptor$0$member$0$2; acceptor$1$didNotPromise$0$0 | acceptor$0$member$0$1; acceptor$0$promise$0$0; acceptor$1$member$0$1 | acceptor$0$member$0$3; acceptor$0$promise$0$1; acceptor$1$member$0$0', 'proposer$0$promise$1$0; proposer$1$chosenAt$1$0 | proposer$0$promise$1$1; proposer$1$chosenAt$1$1 | proposer$1$start$0$0', 'quorum$0$member$1$0; quorum$0$member$1$1; quorum$1$chosenAt$0$0; quorum$1$member$1$0 | quorum$0$member$1$2; quorum$0$member$1$3; quorum$1$chosenAt$0$1; quorum$1$member$1$1')


---------- SigGenerator ----------

terms:  ['~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~didNotPromise(acceptor0)', 'promise(acceptor1,proposer1)', 'promise(acceptor2,proposer0)', '~start(proposer2)', 'member(acceptor0,quorum__acceptor0_acceptor1)', 'member(acceptor1,quorum__acceptor0_acceptor1)', '~member(acceptor2,quorum__acceptor0_acceptor1)', 'member(acceptor0,quorum__acceptor0_acceptor2)', '~member(acceptor1,quorum__acceptor0_acceptor2)', 'member(acceptor2,quorum__acceptor0_acceptor2)']

func_name2symbol:  {'chosenAt': Const('chosenAt', FunctionSort(EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')), EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')), BooleanSort())), 'didNotPromise': Const('didNotPromise', FunctionSort(EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')), BooleanSort())), 'promise': Const('promise', FunctionSort(EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')), EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')), BooleanSort())), 'start': Const('start', FunctionSort(EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')), BooleanSort())), 'member': Const('member', FunctionSort(EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')), EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')), BooleanSort()))}

func_name2args_sort:  {'chosenAt': (EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')), EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))), 'didNotPromise': (EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')),), 'promise': (EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')), EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))), 'start': (EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')),), 'member': (EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')), EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')))}

sign_func_name2count:  {'1$chosenAt': 2, '1$didNotPromise': 1, '0$promise': 2, '1$start': 1, '0$member': 4, '1$member': 2}


---------- ProductArgPartition ----------

sort2class_sigs: {EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')): [quorum$0$member$1$0; quorum$0$member$1$1; quorum$1$chosenAt$0$0; quorum$1$member$1$0, quorum$0$member$1$2; quorum$0$member$1$3; quorum$1$chosenAt$0$1; quorum$1$member$1$1], EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')): [proposer$0$promise$1$0; proposer$1$chosenAt$1$0, proposer$0$promise$1$1; proposer$1$chosenAt$1$1, proposer$1$start$0$0], EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')): [acceptor$0$member$0$0; acceptor$0$member$0$2; acceptor$1$didNotPromise$0$0, acceptor$0$member$0$1; acceptor$0$promise$0$0; acceptor$1$member$0$1, acceptor$0$member$0$3; acceptor$0$promise$0$1; acceptor$1$member$0$0]}

sort2part_sig: {EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')): quorum$0$member$1$0; quorum$0$member$1$1; quorum$1$chosenAt$0$0; quorum$1$member$1$0 | quorum$0$member$1$2; quorum$0$member$1$3; quorum$1$chosenAt$0$1; quorum$1$member$1$1, EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')): proposer$0$promise$1$0; proposer$1$chosenAt$1$0 | proposer$0$promise$1$1; proposer$1$chosenAt$1$1 | proposer$1$start$0$0, EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')): acceptor$0$member$0$0; acceptor$0$member$0$2; acceptor$1$didNotPromise$0$0 | acceptor$0$member$0$1; acceptor$0$promise$0$0; acceptor$1$member$0$1 | acceptor$0$member$0$3; acceptor$0$promise$0$1; acceptor$1$member$0$0}

	sort: quorum

	identical_classes: {'quorum$0$member$1; quorum$0$member$1; quorum$1$chosenAt$0; quorum$1$member$1': [quorum$0$member$1$0; quorum$0$member$1$1; quorum$1$chosenAt$0$0; quorum$1$member$1$0, quorum$0$member$1$2; quorum$0$member$1$3; quorum$1$chosenAt$0$1; quorum$1$member$1$1]}

	identical_single_classes: {}

	identical_multi_classes: {'quorum$0$member$1; quorum$0$member$1; quorum$1$chosenAt$0; quorum$1$member$1': [quorum$0$member$1$0, quorum$0$member$1$1, quorum$1$chosenAt$0$0, quorum$1$member$1$0, quorum$0$member$1$2, quorum$0$member$1$3, quorum$1$chosenAt$0$1, quorum$1$member$1$1]}

	sort: proposer

	identical_classes: {'proposer$0$promise$1; proposer$1$chosenAt$1': [proposer$0$promise$1$0; proposer$1$chosenAt$1$0, proposer$0$promise$1$1; proposer$1$chosenAt$1$1], 'proposer$1$start$0': [proposer$1$start$0$0]}

	identical_single_classes: {'proposer$1$start$0': proposer$1$start$0$0}

	identical_multi_classes: {'proposer$0$promise$1; proposer$1$chosenAt$1': [proposer$0$promise$1$0, proposer$1$chosenAt$1$0, proposer$0$promise$1$1, proposer$1$chosenAt$1$1]}

	sort: acceptor

	identical_classes: {'acceptor$0$member$0; acceptor$0$member$0; acceptor$1$didNotPromise$0': [acceptor$0$member$0$0; acceptor$0$member$0$2; acceptor$1$didNotPromise$0$0], 'acceptor$0$member$0; acceptor$0$promise$0; acceptor$1$member$0': [acceptor$0$member$0$1; acceptor$0$promise$0$0; acceptor$1$member$0$1, acceptor$0$member$0$3; acceptor$0$promise$0$1; acceptor$1$member$0$0]}

	identical_single_classes: {'acceptor$0$member$0; acceptor$0$member$0; acceptor$1$didNotPromise$0': acceptor$0$member$0$0; acceptor$0$member$0$2; acceptor$1$didNotPromise$0$0}

	identical_multi_classes: {'acceptor$0$member$0; acceptor$0$promise$0; acceptor$1$member$0': [acceptor$0$member$0$1, acceptor$0$promise$0$0, acceptor$1$member$0$1, acceptor$0$member$0$3, acceptor$0$promise$0$1, acceptor$1$member$0$0]}


---------- QInference: _set_sort_to_quantifier_mode ----------

quantifier mode: quorum: QuantifierMode.forall

quantifier mode: proposer: QuantifierMode.forall

quantifier mode: acceptor: QuantifierMode.forall


---------- QInference: _set_constraint_mode ----------

constraint mode: ConstraintMode.no_merge


---------- QFormula: _set_qvars ----------

forall_qvars: {Var('PROPOSER1', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))), Var('PROPOSER2', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))), Var('ACCEPTOR1', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Var('QUORUM0', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), Var('ACCEPTOR2', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Var('ACCEPTOR0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Var('QUORUM1', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), Var('PROPOSER0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))}

exists_qvars: set()


---------- QFormula: _set_signed_func_name_to_args ----------

signed_func_name2args: {'1$chosenAt': [[Var('QUORUM0', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), Var('PROPOSER0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))], [Var('QUORUM1', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), Var('PROPOSER1', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))]], '1$didNotPromise': [[Var('ACCEPTOR0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')))]], '0$promise': [[Var('ACCEPTOR1', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Var('PROPOSER0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))], [Var('ACCEPTOR2', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Var('PROPOSER1', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))]], '1$start': [[Var('PROPOSER2', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))]], '0$member': [[Var('ACCEPTOR0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Var('QUORUM0', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')))], [Var('ACCEPTOR1', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Var('QUORUM0', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')))], [Var('ACCEPTOR0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Var('QUORUM1', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')))], [Var('ACCEPTOR2', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Var('QUORUM1', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')))]], '1$member': [[Var('ACCEPTOR2', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Var('QUORUM0', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')))], [Var('ACCEPTOR1', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Var('QUORUM1', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')))]]}


---------- QFormula: _set_qterms ----------

qterms: ['member(ACCEPTOR2,QUORUM1)', '~start(PROPOSER2)', '~chosenAt(QUORUM0,PROPOSER0)', '~didNotPromise(ACCEPTOR0)', 'member(ACCEPTOR0,QUORUM1)', 'member(ACCEPTOR0,QUORUM0)', 'member(ACCEPTOR1,QUORUM0)', '~member(ACCEPTOR1,QUORUM1)', 'promise(ACCEPTOR1,PROPOSER0)', 'promise(ACCEPTOR2,PROPOSER1)', '~chosenAt(QUORUM1,PROPOSER1)', '~member(ACCEPTOR2,QUORUM0)']


---------- QFormula: get_qclause ----------

qclause: forall QUORUM1,PROPOSER0,PROPOSER1,PROPOSER2,ACCEPTOR1,QUORUM0,ACCEPTOR2,ACCEPTOR0. ~member(ACCEPTOR2,QUORUM1) | start(PROPOSER2) | chosenAt(QUORUM0,PROPOSER0) | didNotPromise(ACCEPTOR0) | ~member(ACCEPTOR0,QUORUM1) | ~member(ACCEPTOR0,QUORUM0) | ~member(ACCEPTOR1,QUORUM0) | member(ACCEPTOR1,QUORUM1) | ~promise(ACCEPTOR1,PROPOSER0) | ~promise(ACCEPTOR2,PROPOSER1) | chosenAt(QUORUM1,PROPOSER1) | member(ACCEPTOR2,QUORUM0) | (PROPOSER0 = PROPOSER2 | ACCEPTOR1 = ACCEPTOR2 | ACCEPTOR0 = ACCEPTOR2 | ACCEPTOR0 = ACCEPTOR1 | QUORUM0 = QUORUM1 | PROPOSER0 = PROPOSER1 | PROPOSER1 = PROPOSER2)


=== Prime Orbit 40 =====================
size : 18
num_suborbits: 1
627 (*) : 0--0-----0--1---0---------0
627     : ['leader(proposer0)', '~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~didNotPromise(acceptor0)', '~promise(acceptor0,proposer1)', '~start(proposer2)']
628     : 0--0-----0--1----0-------0-
628     : ['leader(proposer0)', '~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~didNotPromise(acceptor0)', '~promise(acceptor0,proposer2)', '~start(proposer1)']
629     : -0--0----0---1-0----------0
629     : ['leader(proposer1)', '~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~didNotPromise(acceptor0)', '~promise(acceptor0,proposer0)', '~start(proposer2)']
630     : -0--0----0---1---0------0--
630     : ['leader(proposer1)', '~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~didNotPromise(acceptor0)', '~promise(acceptor0,proposer2)', '~start(proposer0)']
631     : --0--0---0----10---------0-
631     : ['leader(proposer2)', '~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~didNotPromise(acceptor0)', '~promise(acceptor0,proposer0)', '~start(proposer1)']
632     : --0--0---0----1-0-------0--
632     : ['leader(proposer2)', '~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~didNotPromise(acceptor0)', '~promise(acceptor0,proposer1)', '~start(proposer0)']
633     : 0-----0---0-1------0------0
633     : ['leader(proposer0)', '~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor1)', '~promise(acceptor1,proposer1)', '~start(proposer2)']
634     : 0-----0---0-1-------0----0-
634     : ['leader(proposer0)', '~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor1)', '~promise(acceptor1,proposer2)', '~start(proposer1)']
635     : -0-----0--0--1----0-------0
635     : ['leader(proposer1)', '~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor1)', '~promise(acceptor1,proposer0)', '~start(proposer2)']
636     : -0-----0--0--1------0---0--
636     : ['leader(proposer1)', '~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor1)', '~promise(acceptor1,proposer2)', '~start(proposer0)']
637     : --0-----0-0---1---0------0-
637     : ['leader(proposer2)', '~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor1)', '~promise(acceptor1,proposer0)', '~start(proposer1)']
638     : --0-----0-0---1----0----0--
638     : ['leader(proposer2)', '~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor1)', '~promise(acceptor1,proposer1)', '~start(proposer0)']
639     : ---0--0----01---------0---0
639     : ['leader(proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor2)', '~promise(acceptor2,proposer1)', '~start(proposer2)']
640     : ---0--0----01----------0-0-
640     : ['leader(proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor2)', '~promise(acceptor2,proposer2)', '~start(proposer1)']
641     : ----0--0---0-1-------0----0
641     : ['leader(proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor2)', '~promise(acceptor2,proposer0)', '~start(proposer2)']
642     : ----0--0---0-1---------00--
642     : ['leader(proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor2)', '~promise(acceptor2,proposer2)', '~start(proposer0)']
643     : -----0--0--0--1------0---0-
643     : ['leader(proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor2)', '~promise(acceptor2,proposer0)', '~start(proposer1)']
644     : -----0--0--0--1-------0-0--
644     : ['leader(proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor2)', '~promise(acceptor2,proposer1)', '~start(proposer0)']
num_forall :   0
num_exists :   0
num_literals : 0
quantified form : None
qcost : 0




---------- QPrime ----------


---------- ConstArgBinding ----------

terms: ['~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~didNotPromise(acceptor0)', 'leader(proposer0)', '~promise(acceptor0,proposer1)', '~start(proposer2)', 'member(acceptor0,quorum__acceptor0_acceptor1)', 'member(acceptor0,quorum__acceptor0_acceptor2)']

sign_func_name2args: {'1$chosenAt': [(Const('quorum__acceptor0_acceptor1', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), Const('proposer0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))), (Const('quorum__acceptor0_acceptor2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), Const('proposer0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))))], '1$didNotPromise': [(Const('acceptor0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))),)], '0$leader': [(Const('proposer0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))),)], '1$promise': [(Const('acceptor0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Const('proposer1', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))))], '1$start': [(Const('proposer2', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))),)], '0$member': [(Const('acceptor0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Const('quorum__acceptor0_acceptor1', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')))), (Const('acceptor0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Const('quorum__acceptor0_acceptor2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))))]}

const2sigs: {Const('quorum__acceptor0_acceptor1', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))): [quorum$1$chosenAt$0$0, quorum$0$member$1$0], Const('proposer0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))): [proposer$1$chosenAt$1$0, proposer$1$chosenAt$1$1, proposer$0$leader$0$0], Const('quorum__acceptor0_acceptor2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))): [quorum$1$chosenAt$0$1, quorum$0$member$1$1], Const('acceptor0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))): [acceptor$1$didNotPromise$0$0, acceptor$1$promise$0$0, acceptor$0$member$0$0, acceptor$0$member$0$1], Const('proposer1', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))): [proposer$1$promise$1$0], Const('proposer2', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))): [proposer$1$start$0$0]}

sig2const: {'quorum$1$chosenAt$0$0': Const('quorum__acceptor0_acceptor1', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), 'proposer$1$chosenAt$1$0': Const('proposer0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))), 'quorum$1$chosenAt$0$1': Const('quorum__acceptor0_acceptor2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), 'proposer$1$chosenAt$1$1': Const('proposer0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))), 'acceptor$1$didNotPromise$0$0': Const('acceptor0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), 'proposer$0$leader$0$0': Const('proposer0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))), 'acceptor$1$promise$0$0': Const('acceptor0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), 'proposer$1$promise$1$0': Const('proposer1', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))), 'proposer$1$start$0$0': Const('proposer2', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))), 'acceptor$0$member$0$0': Const('acceptor0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), 'quorum$0$member$1$0': Const('quorum__acceptor0_acceptor1', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), 'acceptor$0$member$0$1': Const('acceptor0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), 'quorum$0$member$1$1': Const('quorum__acceptor0_acceptor2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')))}


---------- ArgPartition ----------

sort2class_sigs: {EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')): [quorum$0$member$1$0; quorum$1$chosenAt$0$0, quorum$0$member$1$1; quorum$1$chosenAt$0$1], EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')): [proposer$0$leader$0$0; proposer$1$chosenAt$1$0; proposer$1$chosenAt$1$1, proposer$1$promise$1$0, proposer$1$start$0$0], EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')): [acceptor$0$member$0$0; acceptor$0$member$0$1; acceptor$1$didNotPromise$0$0; acceptor$1$promise$0$0]}

sort2part_sig: {EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')): quorum$0$member$1$0; quorum$1$chosenAt$0$0 | quorum$0$member$1$1; quorum$1$chosenAt$0$1, EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')): proposer$0$leader$0$0; proposer$1$chosenAt$1$0; proposer$1$chosenAt$1$1 | proposer$1$promise$1$0 | proposer$1$start$0$0, EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')): acceptor$0$member$0$0; acceptor$0$member$0$1; acceptor$1$didNotPromise$0$0; acceptor$1$promise$0$0}

part_sig: ('acceptor$0$member$0$0; acceptor$0$member$0$1; acceptor$1$didNotPromise$0$0; acceptor$1$promise$0$0', 'proposer$0$leader$0$0; proposer$1$chosenAt$1$0; proposer$1$chosenAt$1$1 | proposer$1$promise$1$0 | proposer$1$start$0$0', 'quorum$0$member$1$0; quorum$1$chosenAt$0$0 | quorum$0$member$1$1; quorum$1$chosenAt$0$1')


---------- SigGenerator ----------

terms:  ['~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~didNotPromise(acceptor0)', 'leader(proposer0)', '~promise(acceptor0,proposer1)', '~start(proposer2)', 'member(acceptor0,quorum__acceptor0_acceptor1)', 'member(acceptor0,quorum__acceptor0_acceptor2)']

func_name2symbol:  {'chosenAt': Const('chosenAt', FunctionSort(EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')), EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')), BooleanSort())), 'didNotPromise': Const('didNotPromise', FunctionSort(EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')), BooleanSort())), 'leader': Const('leader', FunctionSort(EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')), BooleanSort())), 'promise': Const('promise', FunctionSort(EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')), EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')), BooleanSort())), 'start': Const('start', FunctionSort(EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')), BooleanSort())), 'member': Const('member', FunctionSort(EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')), EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')), BooleanSort()))}

func_name2args_sort:  {'chosenAt': (EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')), EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))), 'didNotPromise': (EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')),), 'leader': (EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')),), 'promise': (EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')), EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))), 'start': (EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')),), 'member': (EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')), EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')))}

sign_func_name2count:  {'1$chosenAt': 2, '1$didNotPromise': 1, '0$leader': 1, '1$promise': 1, '1$start': 1, '0$member': 2}


---------- ProductArgPartition ----------

sort2class_sigs: {EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')): [quorum$0$member$1$0; quorum$1$chosenAt$0$0, quorum$0$member$1$1; quorum$1$chosenAt$0$1], EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')): [proposer$0$leader$0$0; proposer$1$chosenAt$1$0; proposer$1$chosenAt$1$1, proposer$1$promise$1$0, proposer$1$start$0$0], EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')): [acceptor$0$member$0$0; acceptor$0$member$0$1; acceptor$1$didNotPromise$0$0; acceptor$1$promise$0$0]}

sort2part_sig: {EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')): quorum$0$member$1$0; quorum$1$chosenAt$0$0 | quorum$0$member$1$1; quorum$1$chosenAt$0$1, EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')): proposer$0$leader$0$0; proposer$1$chosenAt$1$0; proposer$1$chosenAt$1$1 | proposer$1$promise$1$0 | proposer$1$start$0$0, EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')): acceptor$0$member$0$0; acceptor$0$member$0$1; acceptor$1$didNotPromise$0$0; acceptor$1$promise$0$0}

	sort: quorum

	identical_classes: {'quorum$0$member$1; quorum$1$chosenAt$0': [quorum$0$member$1$0; quorum$1$chosenAt$0$0, quorum$0$member$1$1; quorum$1$chosenAt$0$1]}

	identical_single_classes: {}

	identical_multi_classes: {'quorum$0$member$1; quorum$1$chosenAt$0': [quorum$0$member$1$0, quorum$1$chosenAt$0$0, quorum$0$member$1$1, quorum$1$chosenAt$0$1]}

	sort: proposer

	identical_classes: {'proposer$0$leader$0; proposer$1$chosenAt$1; proposer$1$chosenAt$1': [proposer$0$leader$0$0; proposer$1$chosenAt$1$0; proposer$1$chosenAt$1$1], 'proposer$1$promise$1': [proposer$1$promise$1$0], 'proposer$1$start$0': [proposer$1$start$0$0]}

	identical_single_classes: {'proposer$0$leader$0; proposer$1$chosenAt$1; proposer$1$chosenAt$1': proposer$0$leader$0$0; proposer$1$chosenAt$1$0; proposer$1$chosenAt$1$1, 'proposer$1$promise$1': proposer$1$promise$1$0, 'proposer$1$start$0': proposer$1$start$0$0}

	identical_multi_classes: {}

	sort: acceptor

	identical_classes: {'acceptor$0$member$0; acceptor$0$member$0; acceptor$1$didNotPromise$0; acceptor$1$promise$0': [acceptor$0$member$0$0; acceptor$0$member$0$1; acceptor$1$didNotPromise$0$0; acceptor$1$promise$0$0]}

	identical_single_classes: {'acceptor$0$member$0; acceptor$0$member$0; acceptor$1$didNotPromise$0; acceptor$1$promise$0': acceptor$0$member$0$0; acceptor$0$member$0$1; acceptor$1$didNotPromise$0$0; acceptor$1$promise$0$0}

	identical_multi_classes: {}


---------- QInference: _set_sort_to_quantifier_mode ----------

quantifier mode: quorum: QuantifierMode.forall

quantifier mode: proposer: QuantifierMode.forall

quantifier mode: acceptor: QuantifierMode.forall


---------- QInference: _set_constraint_mode ----------

constraint mode: ConstraintMode.no_merge


---------- QFormula: _set_qvars ----------

forall_qvars: {Var('PROPOSER1', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))), Var('PROPOSER2', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))), Var('QUORUM0', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), Var('ACCEPTOR0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Var('QUORUM1', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), Var('PROPOSER0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))}

exists_qvars: set()


---------- QFormula: _set_signed_func_name_to_args ----------

signed_func_name2args: {'1$chosenAt': [[Var('QUORUM0', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), Var('PROPOSER0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))], [Var('QUORUM1', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), Var('PROPOSER0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))]], '1$didNotPromise': [[Var('ACCEPTOR0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')))]], '0$leader': [[Var('PROPOSER0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))]], '1$promise': [[Var('ACCEPTOR0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Var('PROPOSER1', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))]], '1$start': [[Var('PROPOSER2', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))]], '0$member': [[Var('ACCEPTOR0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Var('QUORUM0', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')))], [Var('ACCEPTOR0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Var('QUORUM1', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')))]]}


---------- QFormula: _set_qterms ----------

qterms: ['~start(PROPOSER2)', '~didNotPromise(ACCEPTOR0)', 'member(ACCEPTOR0,QUORUM1)', 'leader(PROPOSER0)', '~promise(ACCEPTOR0,PROPOSER1)', 'member(ACCEPTOR0,QUORUM0)', '~chosenAt(QUORUM1,PROPOSER0)', '~chosenAt(QUORUM0,PROPOSER0)']


---------- QFormula: get_qclause ----------

qclause: forall QUORUM1,PROPOSER0,PROPOSER1,PROPOSER2,QUORUM0,ACCEPTOR0. start(PROPOSER2) | didNotPromise(ACCEPTOR0) | ~member(ACCEPTOR0,QUORUM1) | ~leader(PROPOSER0) | promise(ACCEPTOR0,PROPOSER1) | ~member(ACCEPTOR0,QUORUM0) | chosenAt(QUORUM1,PROPOSER0) | chosenAt(QUORUM0,PROPOSER0) | (PROPOSER0 = PROPOSER1 | PROPOSER0 = PROPOSER2 | QUORUM0 = QUORUM1 | PROPOSER1 = PROPOSER2)


=== Prime Orbit 41 =====================
size : 9
num_suborbits: 1
645 (*) : 0--0-----0--1------------00
645     : ['leader(proposer0)', '~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~didNotPromise(acceptor0)', '~start(proposer1)', '~start(proposer2)']
646     : -0--0----0---1----------0-0
646     : ['leader(proposer1)', '~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~didNotPromise(acceptor0)', '~start(proposer0)', '~start(proposer2)']
647     : --0--0---0----1---------00-
647     : ['leader(proposer2)', '~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~didNotPromise(acceptor0)', '~start(proposer0)', '~start(proposer1)']
648     : 0-----0---0-1------------00
648     : ['leader(proposer0)', '~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor1)', '~start(proposer1)', '~start(proposer2)']
649     : -0-----0--0--1----------0-0
649     : ['leader(proposer1)', '~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor1)', '~start(proposer0)', '~start(proposer2)']
650     : --0-----0-0---1---------00-
650     : ['leader(proposer2)', '~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor1)', '~start(proposer0)', '~start(proposer1)']
651     : ---0--0----01------------00
651     : ['leader(proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor2)', '~start(proposer1)', '~start(proposer2)']
652     : ----0--0---0-1----------0-0
652     : ['leader(proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor2)', '~start(proposer0)', '~start(proposer2)']
653     : -----0--0--0--1---------00-
653     : ['leader(proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor2)', '~start(proposer0)', '~start(proposer1)']
num_forall :   0
num_exists :   0
num_literals : 0
quantified form : None
qcost : 0




---------- QPrime ----------


---------- ConstArgBinding ----------

terms: ['~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~didNotPromise(acceptor0)', 'leader(proposer0)', '~start(proposer1)', '~start(proposer2)', 'member(acceptor0,quorum__acceptor0_acceptor1)', 'member(acceptor0,quorum__acceptor0_acceptor2)']

sign_func_name2args: {'1$chosenAt': [(Const('quorum__acceptor0_acceptor1', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), Const('proposer0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))), (Const('quorum__acceptor0_acceptor2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), Const('proposer0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))))], '1$didNotPromise': [(Const('acceptor0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))),)], '0$leader': [(Const('proposer0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))),)], '1$start': [(Const('proposer1', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))),), (Const('proposer2', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))),)], '0$member': [(Const('acceptor0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Const('quorum__acceptor0_acceptor1', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')))), (Const('acceptor0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Const('quorum__acceptor0_acceptor2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))))]}

const2sigs: {Const('quorum__acceptor0_acceptor1', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))): [quorum$1$chosenAt$0$0, quorum$0$member$1$0], Const('proposer0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))): [proposer$1$chosenAt$1$0, proposer$1$chosenAt$1$1, proposer$0$leader$0$0], Const('quorum__acceptor0_acceptor2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))): [quorum$1$chosenAt$0$1, quorum$0$member$1$1], Const('acceptor0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))): [acceptor$1$didNotPromise$0$0, acceptor$0$member$0$0, acceptor$0$member$0$1], Const('proposer1', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))): [proposer$1$start$0$0], Const('proposer2', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))): [proposer$1$start$0$1]}

sig2const: {'quorum$1$chosenAt$0$0': Const('quorum__acceptor0_acceptor1', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), 'proposer$1$chosenAt$1$0': Const('proposer0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))), 'quorum$1$chosenAt$0$1': Const('quorum__acceptor0_acceptor2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), 'proposer$1$chosenAt$1$1': Const('proposer0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))), 'acceptor$1$didNotPromise$0$0': Const('acceptor0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), 'proposer$0$leader$0$0': Const('proposer0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))), 'proposer$1$start$0$0': Const('proposer1', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))), 'proposer$1$start$0$1': Const('proposer2', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))), 'acceptor$0$member$0$0': Const('acceptor0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), 'quorum$0$member$1$0': Const('quorum__acceptor0_acceptor1', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), 'acceptor$0$member$0$1': Const('acceptor0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), 'quorum$0$member$1$1': Const('quorum__acceptor0_acceptor2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')))}


---------- ArgPartition ----------

sort2class_sigs: {EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')): [quorum$0$member$1$0; quorum$1$chosenAt$0$0, quorum$0$member$1$1; quorum$1$chosenAt$0$1], EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')): [proposer$0$leader$0$0; proposer$1$chosenAt$1$0; proposer$1$chosenAt$1$1, proposer$1$start$0$0, proposer$1$start$0$1], EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')): [acceptor$0$member$0$0; acceptor$0$member$0$1; acceptor$1$didNotPromise$0$0]}

sort2part_sig: {EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')): quorum$0$member$1$0; quorum$1$chosenAt$0$0 | quorum$0$member$1$1; quorum$1$chosenAt$0$1, EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')): proposer$0$leader$0$0; proposer$1$chosenAt$1$0; proposer$1$chosenAt$1$1 | proposer$1$start$0$0 | proposer$1$start$0$1, EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')): acceptor$0$member$0$0; acceptor$0$member$0$1; acceptor$1$didNotPromise$0$0}

part_sig: ('acceptor$0$member$0$0; acceptor$0$member$0$1; acceptor$1$didNotPromise$0$0', 'proposer$0$leader$0$0; proposer$1$chosenAt$1$0; proposer$1$chosenAt$1$1 | proposer$1$start$0$0 | proposer$1$start$0$1', 'quorum$0$member$1$0; quorum$1$chosenAt$0$0 | quorum$0$member$1$1; quorum$1$chosenAt$0$1')


---------- SigGenerator ----------

terms:  ['~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~didNotPromise(acceptor0)', 'leader(proposer0)', '~start(proposer1)', '~start(proposer2)', 'member(acceptor0,quorum__acceptor0_acceptor1)', 'member(acceptor0,quorum__acceptor0_acceptor2)']

func_name2symbol:  {'chosenAt': Const('chosenAt', FunctionSort(EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')), EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')), BooleanSort())), 'didNotPromise': Const('didNotPromise', FunctionSort(EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')), BooleanSort())), 'leader': Const('leader', FunctionSort(EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')), BooleanSort())), 'start': Const('start', FunctionSort(EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')), BooleanSort())), 'member': Const('member', FunctionSort(EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')), EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')), BooleanSort()))}

func_name2args_sort:  {'chosenAt': (EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')), EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))), 'didNotPromise': (EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')),), 'leader': (EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')),), 'start': (EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')),), 'member': (EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')), EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')))}

sign_func_name2count:  {'1$chosenAt': 2, '1$didNotPromise': 1, '0$leader': 1, '1$start': 2, '0$member': 2}


---------- ProductArgPartition ----------

sort2class_sigs: {EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')): [quorum$0$member$1$0; quorum$1$chosenAt$0$0, quorum$0$member$1$1; quorum$1$chosenAt$0$1], EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')): [proposer$0$leader$0$0; proposer$1$chosenAt$1$0; proposer$1$chosenAt$1$1, proposer$1$start$0$0, proposer$1$start$0$1], EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')): [acceptor$0$member$0$0; acceptor$0$member$0$1; acceptor$1$didNotPromise$0$0]}

sort2part_sig: {EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')): quorum$0$member$1$0; quorum$1$chosenAt$0$0 | quorum$0$member$1$1; quorum$1$chosenAt$0$1, EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')): proposer$0$leader$0$0; proposer$1$chosenAt$1$0; proposer$1$chosenAt$1$1 | proposer$1$start$0$0 | proposer$1$start$0$1, EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')): acceptor$0$member$0$0; acceptor$0$member$0$1; acceptor$1$didNotPromise$0$0}

	sort: quorum

	identical_classes: {'quorum$0$member$1; quorum$1$chosenAt$0': [quorum$0$member$1$0; quorum$1$chosenAt$0$0, quorum$0$member$1$1; quorum$1$chosenAt$0$1]}

	identical_single_classes: {}

	identical_multi_classes: {'quorum$0$member$1; quorum$1$chosenAt$0': [quorum$0$member$1$0, quorum$1$chosenAt$0$0, quorum$0$member$1$1, quorum$1$chosenAt$0$1]}

	sort: proposer

	identical_classes: {'proposer$0$leader$0; proposer$1$chosenAt$1; proposer$1$chosenAt$1': [proposer$0$leader$0$0; proposer$1$chosenAt$1$0; proposer$1$chosenAt$1$1], 'proposer$1$start$0': [proposer$1$start$0$0, proposer$1$start$0$1]}

	identical_single_classes: {'proposer$0$leader$0; proposer$1$chosenAt$1; proposer$1$chosenAt$1': proposer$0$leader$0$0; proposer$1$chosenAt$1$0; proposer$1$chosenAt$1$1}

	identical_multi_classes: {'proposer$1$start$0': [proposer$1$start$0$0, proposer$1$start$0$1]}

	sort: acceptor

	identical_classes: {'acceptor$0$member$0; acceptor$0$member$0; acceptor$1$didNotPromise$0': [acceptor$0$member$0$0; acceptor$0$member$0$1; acceptor$1$didNotPromise$0$0]}

	identical_single_classes: {'acceptor$0$member$0; acceptor$0$member$0; acceptor$1$didNotPromise$0': acceptor$0$member$0$0; acceptor$0$member$0$1; acceptor$1$didNotPromise$0$0}

	identical_multi_classes: {}


---------- QInference: _set_sort_to_quantifier_mode ----------

quantifier mode: quorum: QuantifierMode.forall

quantifier mode: proposer: QuantifierMode.forall_exists

quantifier mode: acceptor: QuantifierMode.forall


---------- QInference: _set_constraint_mode ----------

constraint mode: ConstraintMode.no_merge


---------- QFormula: _set_qvars ----------

forall_qvars: {Var('PROPOSER1', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))), Var('QUORUM1', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), Var('QUORUM0', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), Var('ACCEPTOR0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')))}

exists_qvars: {Var('PROPOSER0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))}


---------- QFormula: _set_signed_func_name_to_args ----------

signed_func_name2args: {'1$chosenAt': [[Var('QUORUM0', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), Var('PROPOSER1', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))], [Var('QUORUM1', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), Var('PROPOSER1', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))]], '1$didNotPromise': [[Var('ACCEPTOR0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')))]], '0$leader': [[Var('PROPOSER1', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))]], '1$start': [[Var('PROPOSER0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))], [Var('PROPOSER0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))]], '0$member': [[Var('ACCEPTOR0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Var('QUORUM0', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')))], [Var('ACCEPTOR0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Var('QUORUM1', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')))]]}


---------- QFormula: _set_qterms ----------

qterms: ['~chosenAt(QUORUM0,PROPOSER1)', '~didNotPromise(ACCEPTOR0)', 'member(ACCEPTOR0,QUORUM1)', 'leader(PROPOSER1)', 'member(ACCEPTOR0,QUORUM0)', '~start(PROPOSER0)', '~chosenAt(QUORUM1,PROPOSER1)']


---------- QFormula: get_qclause ----------

qclause: forall PROPOSER1,QUORUM1,ACCEPTOR0,QUORUM0. chosenAt(QUORUM0,PROPOSER1) | didNotPromise(ACCEPTOR0) | ~member(ACCEPTOR0,QUORUM1) | ~leader(PROPOSER1) | ~member(ACCEPTOR0,QUORUM0) | chosenAt(QUORUM1,PROPOSER1) | (exists PROPOSER0. (start(PROPOSER0) & PROPOSER0 ~= PROPOSER1)) | QUORUM0 = QUORUM1


=== Prime Orbit 42 =====================
size : 18
num_suborbits: 1
654 (*) : -0---0--000------------10--
654     : ['promise(acceptor2,proposer2)', '~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~start(proposer0)']
655     : --0-0--0-00-----------1-0--
655     : ['promise(acceptor2,proposer1)', '~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~start(proposer0)']
656     : 0----0--000------------1-0-
656     : ['promise(acceptor2,proposer2)', '~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~start(proposer1)']
657     : --00--0--00----------1---0-
657     : ['promise(acceptor2,proposer0)', '~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~start(proposer1)']
658     : 0---0--0-00-----------1---0
658     : ['promise(acceptor2,proposer1)', '~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~start(proposer2)']
659     : -0-0--0--00----------1----0
659     : ['promise(acceptor2,proposer0)', '~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~start(proposer2)']
660     : --0-0---00-0--------1---0--
660     : ['promise(acceptor1,proposer2)', '~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor2)', '~start(proposer0)']
661     : -0---0-0-0-0-------1----0--
661     : ['promise(acceptor1,proposer1)', '~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor2)', '~start(proposer0)']
662     : --00----00-0--------1----0-
662     : ['promise(acceptor1,proposer2)', '~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor2)', '~start(proposer1)']
663     : 0----00--0-0------1------0-
663     : ['promise(acceptor1,proposer0)', '~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor2)', '~start(proposer1)']
664     : -0-0---0-0-0-------1------0
664     : ['promise(acceptor1,proposer1)', '~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor2)', '~start(proposer2)']
665     : 0---0-0--0-0------1-------0
665     : ['promise(acceptor1,proposer0)', '~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor2)', '~start(proposer2)']
666     : --0--0-0--00-----1------0--
666     : ['promise(acceptor0,proposer2)', '~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~start(proposer0)']
667     : -0--0---0-00----1-------0--
667     : ['promise(acceptor0,proposer1)', '~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~start(proposer0)']
668     : --0--00---00-----1-------0-
668     : ['promise(acceptor0,proposer2)', '~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~start(proposer1)']
669     : 0--0----0-00---1---------0-
669     : ['promise(acceptor0,proposer0)', '~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~start(proposer1)']
670     : -0--0-0---00----1---------0
670     : ['promise(acceptor0,proposer1)', '~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~start(proposer2)']
671     : 0--0---0--00---1----------0
671     : ['promise(acceptor0,proposer0)', '~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~start(proposer2)']
num_forall :   0
num_exists :   0
num_literals : 0
quantified form : None
qcost : 0




---------- QPrime ----------


---------- ConstArgBinding ----------

terms: ['~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', 'promise(acceptor2,proposer2)', '~start(proposer0)', '~member(acceptor0,quorum__acceptor1_acceptor2)', 'member(acceptor1,quorum__acceptor1_acceptor2)', 'member(acceptor2,quorum__acceptor1_acceptor2)', 'member(acceptor0,quorum__acceptor0_acceptor1)', 'member(acceptor1,quorum__acceptor0_acceptor1)', '~member(acceptor2,quorum__acceptor0_acceptor1)', 'member(acceptor0,quorum__acceptor0_acceptor2)', '~member(acceptor1,quorum__acceptor0_acceptor2)', 'member(acceptor2,quorum__acceptor0_acceptor2)']

sign_func_name2args: {'1$chosenAt': [(Const('quorum__acceptor0_acceptor1', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), Const('proposer1', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))), (Const('quorum__acceptor0_acceptor2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), Const('proposer2', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))), (Const('quorum__acceptor1_acceptor2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), Const('proposer2', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))))], '1$didNotPromise': [(Const('acceptor0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))),), (Const('acceptor1', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))),)], '0$promise': [(Const('acceptor2', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Const('proposer2', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))))], '1$start': [(Const('proposer0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))),)], '1$member': [(Const('acceptor0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Const('quorum__acceptor1_acceptor2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')))), (Const('acceptor2', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Const('quorum__acceptor0_acceptor1', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')))), (Const('acceptor1', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Const('quorum__acceptor0_acceptor2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))))], '0$member': [(Const('acceptor1', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Const('quorum__acceptor1_acceptor2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')))), (Const('acceptor2', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Const('quorum__acceptor1_acceptor2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')))), (Const('acceptor0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Const('quorum__acceptor0_acceptor1', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')))), (Const('acceptor1', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Const('quorum__acceptor0_acceptor1', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')))), (Const('acceptor0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Const('quorum__acceptor0_acceptor2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')))), (Const('acceptor2', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Const('quorum__acceptor0_acceptor2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))))]}

const2sigs: {Const('quorum__acceptor0_acceptor1', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))): [quorum$1$chosenAt$0$0, quorum$1$member$1$1, quorum$0$member$1$2, quorum$0$member$1$3], Const('proposer1', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))): [proposer$1$chosenAt$1$0], Const('quorum__acceptor0_acceptor2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))): [quorum$1$chosenAt$0$1, quorum$1$member$1$2, quorum$0$member$1$4, quorum$0$member$1$5], Const('proposer2', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))): [proposer$1$chosenAt$1$1, proposer$1$chosenAt$1$2, proposer$0$promise$1$0], Const('quorum__acceptor1_acceptor2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))): [quorum$1$chosenAt$0$2, quorum$1$member$1$0, quorum$0$member$1$0, quorum$0$member$1$1], Const('acceptor0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))): [acceptor$1$didNotPromise$0$0, acceptor$1$member$0$0, acceptor$0$member$0$2, acceptor$0$member$0$4], Const('acceptor1', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))): [acceptor$1$didNotPromise$0$1, acceptor$1$member$0$2, acceptor$0$member$0$0, acceptor$0$member$0$3], Const('acceptor2', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))): [acceptor$0$promise$0$0, acceptor$1$member$0$1, acceptor$0$member$0$1, acceptor$0$member$0$5], Const('proposer0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))): [proposer$1$start$0$0]}

sig2const: {'quorum$1$chosenAt$0$0': Const('quorum__acceptor0_acceptor1', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), 'proposer$1$chosenAt$1$0': Const('proposer1', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))), 'quorum$1$chosenAt$0$1': Const('quorum__acceptor0_acceptor2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), 'proposer$1$chosenAt$1$1': Const('proposer2', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))), 'quorum$1$chosenAt$0$2': Const('quorum__acceptor1_acceptor2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), 'proposer$1$chosenAt$1$2': Const('proposer2', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))), 'acceptor$1$didNotPromise$0$0': Const('acceptor0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), 'acceptor$1$didNotPromise$0$1': Const('acceptor1', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), 'acceptor$0$promise$0$0': Const('acceptor2', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), 'proposer$0$promise$1$0': Const('proposer2', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))), 'proposer$1$start$0$0': Const('proposer0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))), 'acceptor$1$member$0$0': Const('acceptor0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), 'quorum$1$member$1$0': Const('quorum__acceptor1_acceptor2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), 'acceptor$1$member$0$1': Const('acceptor2', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), 'quorum$1$member$1$1': Const('quorum__acceptor0_acceptor1', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), 'acceptor$1$member$0$2': Const('acceptor1', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), 'quorum$1$member$1$2': Const('quorum__acceptor0_acceptor2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), 'acceptor$0$member$0$0': Const('acceptor1', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), 'quorum$0$member$1$0': Const('quorum__acceptor1_acceptor2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), 'acceptor$0$member$0$1': Const('acceptor2', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), 'quorum$0$member$1$1': Const('quorum__acceptor1_acceptor2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), 'acceptor$0$member$0$2': Const('acceptor0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), 'quorum$0$member$1$2': Const('quorum__acceptor0_acceptor1', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), 'acceptor$0$member$0$3': Const('acceptor1', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), 'quorum$0$member$1$3': Const('quorum__acceptor0_acceptor1', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), 'acceptor$0$member$0$4': Const('acceptor0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), 'quorum$0$member$1$4': Const('quorum__acceptor0_acceptor2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), 'acceptor$0$member$0$5': Const('acceptor2', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), 'quorum$0$member$1$5': Const('quorum__acceptor0_acceptor2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')))}


---------- ArgPartition ----------

sort2class_sigs: {EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')): [quorum$0$member$1$0; quorum$0$member$1$1; quorum$1$chosenAt$0$2; quorum$1$member$1$0, quorum$0$member$1$2; quorum$0$member$1$3; quorum$1$chosenAt$0$0; quorum$1$member$1$1, quorum$0$member$1$4; quorum$0$member$1$5; quorum$1$chosenAt$0$1; quorum$1$member$1$2], EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')): [proposer$0$promise$1$0; proposer$1$chosenAt$1$1; proposer$1$chosenAt$1$2, proposer$1$chosenAt$1$0, proposer$1$start$0$0], EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')): [acceptor$0$member$0$0; acceptor$0$member$0$3; acceptor$1$didNotPromise$0$1; acceptor$1$member$0$2, acceptor$0$member$0$1; acceptor$0$member$0$5; acceptor$0$promise$0$0; acceptor$1$member$0$1, acceptor$0$member$0$2; acceptor$0$member$0$4; acceptor$1$didNotPromise$0$0; acceptor$1$member$0$0]}

sort2part_sig: {EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')): quorum$0$member$1$0; quorum$0$member$1$1; quorum$1$chosenAt$0$2; quorum$1$member$1$0 | quorum$0$member$1$2; quorum$0$member$1$3; quorum$1$chosenAt$0$0; quorum$1$member$1$1 | quorum$0$member$1$4; quorum$0$member$1$5; quorum$1$chosenAt$0$1; quorum$1$member$1$2, EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')): proposer$0$promise$1$0; proposer$1$chosenAt$1$1; proposer$1$chosenAt$1$2 | proposer$1$chosenAt$1$0 | proposer$1$start$0$0, EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')): acceptor$0$member$0$0; acceptor$0$member$0$3; acceptor$1$didNotPromise$0$1; acceptor$1$member$0$2 | acceptor$0$member$0$1; acceptor$0$member$0$5; acceptor$0$promise$0$0; acceptor$1$member$0$1 | acceptor$0$member$0$2; acceptor$0$member$0$4; acceptor$1$didNotPromise$0$0; acceptor$1$member$0$0}

part_sig: ('acceptor$0$member$0$0; acceptor$0$member$0$3; acceptor$1$didNotPromise$0$1; acceptor$1$member$0$2 | acceptor$0$member$0$1; acceptor$0$member$0$5; acceptor$0$promise$0$0; acceptor$1$member$0$1 | acceptor$0$member$0$2; acceptor$0$member$0$4; acceptor$1$didNotPromise$0$0; acceptor$1$member$0$0', 'proposer$0$promise$1$0; proposer$1$chosenAt$1$1; proposer$1$chosenAt$1$2 | proposer$1$chosenAt$1$0 | proposer$1$start$0$0', 'quorum$0$member$1$0; quorum$0$member$1$1; quorum$1$chosenAt$0$2; quorum$1$member$1$0 | quorum$0$member$1$2; quorum$0$member$1$3; quorum$1$chosenAt$0$0; quorum$1$member$1$1 | quorum$0$member$1$4; quorum$0$member$1$5; quorum$1$chosenAt$0$1; quorum$1$member$1$2')


---------- SigGenerator ----------

terms:  ['~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', 'promise(acceptor2,proposer2)', '~start(proposer0)', '~member(acceptor0,quorum__acceptor1_acceptor2)', 'member(acceptor1,quorum__acceptor1_acceptor2)', 'member(acceptor2,quorum__acceptor1_acceptor2)', 'member(acceptor0,quorum__acceptor0_acceptor1)', 'member(acceptor1,quorum__acceptor0_acceptor1)', '~member(acceptor2,quorum__acceptor0_acceptor1)', 'member(acceptor0,quorum__acceptor0_acceptor2)', '~member(acceptor1,quorum__acceptor0_acceptor2)', 'member(acceptor2,quorum__acceptor0_acceptor2)']

func_name2symbol:  {'chosenAt': Const('chosenAt', FunctionSort(EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')), EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')), BooleanSort())), 'didNotPromise': Const('didNotPromise', FunctionSort(EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')), BooleanSort())), 'promise': Const('promise', FunctionSort(EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')), EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')), BooleanSort())), 'start': Const('start', FunctionSort(EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')), BooleanSort())), 'member': Const('member', FunctionSort(EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')), EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')), BooleanSort()))}

func_name2args_sort:  {'chosenAt': (EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')), EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))), 'didNotPromise': (EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')),), 'promise': (EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')), EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))), 'start': (EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')),), 'member': (EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')), EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')))}

sign_func_name2count:  {'1$chosenAt': 3, '1$didNotPromise': 2, '0$promise': 1, '1$start': 1, '1$member': 3, '0$member': 6}


---------- ProductArgPartition ----------

sort2class_sigs: {EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')): [quorum$0$member$1$0; quorum$0$member$1$1; quorum$1$chosenAt$0$2; quorum$1$member$1$0, quorum$0$member$1$2; quorum$0$member$1$3; quorum$1$chosenAt$0$0; quorum$1$member$1$1, quorum$0$member$1$4; quorum$0$member$1$5; quorum$1$chosenAt$0$1; quorum$1$member$1$2], EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')): [proposer$0$promise$1$0; proposer$1$chosenAt$1$1; proposer$1$chosenAt$1$2, proposer$1$chosenAt$1$0, proposer$1$start$0$0], EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')): [acceptor$0$member$0$0; acceptor$0$member$0$3; acceptor$1$didNotPromise$0$1; acceptor$1$member$0$2, acceptor$0$member$0$1; acceptor$0$member$0$5; acceptor$0$promise$0$0; acceptor$1$member$0$1, acceptor$0$member$0$2; acceptor$0$member$0$4; acceptor$1$didNotPromise$0$0; acceptor$1$member$0$0]}

sort2part_sig: {EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')): quorum$0$member$1$0; quorum$0$member$1$1; quorum$1$chosenAt$0$2; quorum$1$member$1$0 | quorum$0$member$1$2; quorum$0$member$1$3; quorum$1$chosenAt$0$0; quorum$1$member$1$1 | quorum$0$member$1$4; quorum$0$member$1$5; quorum$1$chosenAt$0$1; quorum$1$member$1$2, EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')): proposer$0$promise$1$0; proposer$1$chosenAt$1$1; proposer$1$chosenAt$1$2 | proposer$1$chosenAt$1$0 | proposer$1$start$0$0, EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')): acceptor$0$member$0$0; acceptor$0$member$0$3; acceptor$1$didNotPromise$0$1; acceptor$1$member$0$2 | acceptor$0$member$0$1; acceptor$0$member$0$5; acceptor$0$promise$0$0; acceptor$1$member$0$1 | acceptor$0$member$0$2; acceptor$0$member$0$4; acceptor$1$didNotPromise$0$0; acceptor$1$member$0$0}

	sort: quorum

	identical_classes: {'quorum$0$member$1; quorum$0$member$1; quorum$1$chosenAt$0; quorum$1$member$1': [quorum$0$member$1$0; quorum$0$member$1$1; quorum$1$chosenAt$0$2; quorum$1$member$1$0, quorum$0$member$1$2; quorum$0$member$1$3; quorum$1$chosenAt$0$0; quorum$1$member$1$1, quorum$0$member$1$4; quorum$0$member$1$5; quorum$1$chosenAt$0$1; quorum$1$member$1$2]}

	identical_single_classes: {}

	identical_multi_classes: {'quorum$0$member$1; quorum$0$member$1; quorum$1$chosenAt$0; quorum$1$member$1': [quorum$0$member$1$0, quorum$0$member$1$1, quorum$1$chosenAt$0$2, quorum$1$member$1$0, quorum$0$member$1$2, quorum$0$member$1$3, quorum$1$chosenAt$0$0, quorum$1$member$1$1, quorum$0$member$1$4, quorum$0$member$1$5, quorum$1$chosenAt$0$1, quorum$1$member$1$2]}

	sort: proposer

	identical_classes: {'proposer$0$promise$1; proposer$1$chosenAt$1; proposer$1$chosenAt$1': [proposer$0$promise$1$0; proposer$1$chosenAt$1$1; proposer$1$chosenAt$1$2], 'proposer$1$chosenAt$1': [proposer$1$chosenAt$1$0], 'proposer$1$start$0': [proposer$1$start$0$0]}

	identical_single_classes: {'proposer$0$promise$1; proposer$1$chosenAt$1; proposer$1$chosenAt$1': proposer$0$promise$1$0; proposer$1$chosenAt$1$1; proposer$1$chosenAt$1$2, 'proposer$1$chosenAt$1': proposer$1$chosenAt$1$0, 'proposer$1$start$0': proposer$1$start$0$0}

	identical_multi_classes: {}

	sort: acceptor

	identical_classes: {'acceptor$0$member$0; acceptor$0$member$0; acceptor$1$didNotPromise$0; acceptor$1$member$0': [acceptor$0$member$0$0; acceptor$0$member$0$3; acceptor$1$didNotPromise$0$1; acceptor$1$member$0$2, acceptor$0$member$0$2; acceptor$0$member$0$4; acceptor$1$didNotPromise$0$0; acceptor$1$member$0$0], 'acceptor$0$member$0; acceptor$0$member$0; acceptor$0$promise$0; acceptor$1$member$0': [acceptor$0$member$0$1; acceptor$0$member$0$5; acceptor$0$promise$0$0; acceptor$1$member$0$1]}

	identical_single_classes: {'acceptor$0$member$0; acceptor$0$member$0; acceptor$0$promise$0; acceptor$1$member$0': acceptor$0$member$0$1; acceptor$0$member$0$5; acceptor$0$promise$0$0; acceptor$1$member$0$1}

	identical_multi_classes: {'acceptor$0$member$0; acceptor$0$member$0; acceptor$1$didNotPromise$0; acceptor$1$member$0': [acceptor$0$member$0$0, acceptor$0$member$0$3, acceptor$1$didNotPromise$0$1, acceptor$1$member$0$2, acceptor$0$member$0$2, acceptor$0$member$0$4, acceptor$1$didNotPromise$0$0, acceptor$1$member$0$0]}


---------- QInference: _set_sort_to_quantifier_mode ----------

quantifier mode: quorum: QuantifierMode.forall

quantifier mode: proposer: QuantifierMode.forall

quantifier mode: acceptor: QuantifierMode.forall


---------- QInference: _set_constraint_mode ----------

constraint mode: ConstraintMode.no_merge


---------- QFormula: _set_qvars ----------

forall_qvars: {Var('PROPOSER1', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))), Var('PROPOSER2', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))), Var('QUORUM2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), Var('ACCEPTOR1', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Var('QUORUM0', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), Var('ACCEPTOR2', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Var('ACCEPTOR0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Var('QUORUM1', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), Var('PROPOSER0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))}

exists_qvars: set()


---------- QFormula: _set_signed_func_name_to_args ----------

signed_func_name2args: {'1$chosenAt': [[Var('QUORUM1', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), Var('PROPOSER1', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))], [Var('QUORUM2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), Var('PROPOSER0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))], [Var('QUORUM0', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), Var('PROPOSER0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))]], '1$didNotPromise': [[Var('ACCEPTOR2', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')))], [Var('ACCEPTOR0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')))]], '0$promise': [[Var('ACCEPTOR1', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Var('PROPOSER0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))]], '1$start': [[Var('PROPOSER2', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))]], '1$member': [[Var('ACCEPTOR2', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Var('QUORUM0', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')))], [Var('ACCEPTOR1', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Var('QUORUM1', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')))], [Var('ACCEPTOR0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Var('QUORUM2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')))]], '0$member': [[Var('ACCEPTOR0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Var('QUORUM0', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')))], [Var('ACCEPTOR1', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Var('QUORUM0', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')))], [Var('ACCEPTOR2', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Var('QUORUM1', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')))], [Var('ACCEPTOR0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Var('QUORUM1', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')))], [Var('ACCEPTOR2', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Var('QUORUM2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')))], [Var('ACCEPTOR1', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Var('QUORUM2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')))]]}


---------- QFormula: _set_qterms ----------

qterms: ['~didNotPromise(ACCEPTOR2)', 'member(ACCEPTOR2,QUORUM1)', '~chosenAt(QUORUM2,PROPOSER0)', '~start(PROPOSER2)', '~member(ACCEPTOR0,QUORUM2)', '~didNotPromise(ACCEPTOR0)', 'member(ACCEPTOR0,QUORUM1)', 'member(ACCEPTOR1,QUORUM2)', 'member(ACCEPTOR0,QUORUM0)', 'member(ACCEPTOR1,QUORUM0)', '~member(ACCEPTOR1,QUORUM1)', 'promise(ACCEPTOR1,PROPOSER0)', '~chosenAt(QUORUM1,PROPOSER1)', 'member(ACCEPTOR2,QUORUM2)', '~chosenAt(QUORUM0,PROPOSER0)', '~member(ACCEPTOR2,QUORUM0)']


---------- QFormula: get_qclause ----------

qclause: forall QUORUM1,PROPOSER0,PROPOSER1,PROPOSER2,ACCEPTOR1,QUORUM2,QUORUM0,ACCEPTOR2,ACCEPTOR0. didNotPromise(ACCEPTOR2) | ~member(ACCEPTOR2,QUORUM1) | chosenAt(QUORUM2,PROPOSER0) | start(PROPOSER2) | member(ACCEPTOR0,QUORUM2) | didNotPromise(ACCEPTOR0) | ~member(ACCEPTOR0,QUORUM1) | ~member(ACCEPTOR1,QUORUM2) | ~member(ACCEPTOR0,QUORUM0) | ~member(ACCEPTOR1,QUORUM0) | member(ACCEPTOR1,QUORUM1) | ~promise(ACCEPTOR1,PROPOSER0) | chosenAt(QUORUM1,PROPOSER1) | ~member(ACCEPTOR2,QUORUM2) | chosenAt(QUORUM0,PROPOSER0) | member(ACCEPTOR2,QUORUM0) | (QUORUM1 = QUORUM2 | PROPOSER0 = PROPOSER2 | ACCEPTOR1 = ACCEPTOR2 | ACCEPTOR0 = ACCEPTOR2 | ACCEPTOR0 = ACCEPTOR1 | QUORUM0 = QUORUM1 | PROPOSER0 = PROPOSER1 | QUORUM0 = QUORUM2 | PROPOSER1 = PROPOSER2)


=== Prime Orbit 43 =====================
size : 36
num_suborbits: 1
672 (*) : -0---0---00---------0--10--
672     : ['promise(acceptor2,proposer2)', '~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~promise(acceptor1,proposer2)', '~start(proposer0)']
673     : --0-0----00--------0--1-0--
673     : ['promise(acceptor2,proposer1)', '~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~promise(acceptor1,proposer1)', '~start(proposer0)']
674     : 0----0---00---------0--1-0-
674     : ['promise(acceptor2,proposer2)', '~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~promise(acceptor1,proposer2)', '~start(proposer1)']
675     : --00-----00-------0--1---0-
675     : ['promise(acceptor2,proposer0)', '~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~promise(acceptor1,proposer0)', '~start(proposer1)']
676     : 0---0----00--------0--1---0
676     : ['promise(acceptor2,proposer1)', '~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~promise(acceptor1,proposer1)', '~start(proposer2)']
677     : -0-0-----00-------0--1----0
677     : ['promise(acceptor2,proposer0)', '~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~promise(acceptor1,proposer0)', '~start(proposer2)']
678     : --0-0----0-0--------1--00--
678     : ['promise(acceptor1,proposer2)', '~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor2)', '~promise(acceptor2,proposer2)', '~start(proposer0)']
679     : -0---0---0-0-------1--0-0--
679     : ['promise(acceptor1,proposer1)', '~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor2)', '~promise(acceptor2,proposer1)', '~start(proposer0)']
680     : --00-----0-0--------1--0-0-
680     : ['promise(acceptor1,proposer2)', '~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor2)', '~promise(acceptor2,proposer2)', '~start(proposer1)']
681     : 0----0---0-0------1--0---0-
681     : ['promise(acceptor1,proposer0)', '~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor2)', '~promise(acceptor2,proposer0)', '~start(proposer1)']
682     : -0-0-----0-0-------1--0---0
682     : ['promise(acceptor1,proposer1)', '~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor2)', '~promise(acceptor2,proposer1)', '~start(proposer2)']
683     : 0---0----0-0------1--0----0
683     : ['promise(acceptor1,proposer0)', '~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor2)', '~promise(acceptor2,proposer0)', '~start(proposer2)']
684     : -0------000------0-----10--
684     : ['promise(acceptor2,proposer2)', '~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~promise(acceptor0,proposer2)', '~start(proposer0)']
685     : --0----0-00-----0-----1-0--
685     : ['promise(acceptor2,proposer1)', '~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~promise(acceptor0,proposer1)', '~start(proposer0)']
686     : 0-------000------0-----1-0-
686     : ['promise(acceptor2,proposer2)', '~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~promise(acceptor0,proposer2)', '~start(proposer1)']
687     : --0---0--00----0-----1---0-
687     : ['promise(acceptor2,proposer0)', '~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~promise(acceptor0,proposer0)', '~start(proposer1)']
688     : 0------0-00-----0-----1---0
688     : ['promise(acceptor2,proposer1)', '~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~promise(acceptor0,proposer1)', '~start(proposer2)']
689     : -0----0--00----0-----1----0
689     : ['promise(acceptor2,proposer0)', '~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~promise(acceptor0,proposer0)', '~start(proposer2)']
690     : --0----0--00-----1-----00--
690     : ['promise(acceptor0,proposer2)', '~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor2,proposer2)', '~start(proposer0)']
691     : -0------0-00----1-----0-0--
691     : ['promise(acceptor0,proposer1)', '~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor2,proposer1)', '~start(proposer0)']
692     : --0---0---00-----1-----0-0-
692     : ['promise(acceptor0,proposer2)', '~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor2,proposer2)', '~start(proposer1)']
693     : 0-------0-00---1-----0---0-
693     : ['promise(acceptor0,proposer0)', '~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor2,proposer0)', '~start(proposer1)']
694     : -0----0---00----1-----0---0
694     : ['promise(acceptor0,proposer1)', '~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor2,proposer1)', '~start(proposer2)']
695     : 0------0--00---1-----0----0
695     : ['promise(acceptor0,proposer0)', '~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor2,proposer0)', '~start(proposer2)']
696     : ----0---00-0-----0--1---0--
696     : ['promise(acceptor1,proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor2)', '~promise(acceptor0,proposer2)', '~start(proposer0)']
697     : -----0-0-0-0----0--1----0--
697     : ['promise(acceptor1,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor2)', '~promise(acceptor0,proposer1)', '~start(proposer0)']
698     : ---0----00-0-----0--1----0-
698     : ['promise(acceptor1,proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor2)', '~promise(acceptor0,proposer2)', '~start(proposer1)']
699     : -----00--0-0---0--1------0-
699     : ['promise(acceptor1,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor2)', '~promise(acceptor0,proposer0)', '~start(proposer1)']
700     : ---0---0-0-0----0--1------0
700     : ['promise(acceptor1,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor2)', '~promise(acceptor0,proposer1)', '~start(proposer2)']
701     : ----0-0--0-0---0--1-------0
701     : ['promise(acceptor1,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor2)', '~promise(acceptor0,proposer0)', '~start(proposer2)']
702     : -----0-0--00-----1--0---0--
702     : ['promise(acceptor0,proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor1,proposer2)', '~start(proposer0)']
703     : ----0---0-00----1--0----0--
703     : ['promise(acceptor0,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor1,proposer1)', '~start(proposer0)']
704     : -----00---00-----1--0----0-
704     : ['promise(acceptor0,proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor1,proposer2)', '~start(proposer1)']
705     : ---0----0-00---1--0------0-
705     : ['promise(acceptor0,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor1,proposer0)', '~start(proposer1)']
706     : ----0-0---00----1--0------0
706     : ['promise(acceptor0,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor1,proposer1)', '~start(proposer2)']
707     : ---0---0--00---1--0-------0
707     : ['promise(acceptor0,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor1,proposer0)', '~start(proposer2)']
num_forall :   0
num_exists :   0
num_literals : 0
quantified form : None
qcost : 0




---------- QPrime ----------


---------- ConstArgBinding ----------

terms: ['~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~promise(acceptor1,proposer2)', 'promise(acceptor2,proposer2)', '~start(proposer0)', 'member(acceptor0,quorum__acceptor0_acceptor1)', 'member(acceptor1,quorum__acceptor0_acceptor1)', '~member(acceptor2,quorum__acceptor0_acceptor1)', 'member(acceptor0,quorum__acceptor0_acceptor2)', '~member(acceptor1,quorum__acceptor0_acceptor2)', 'member(acceptor2,quorum__acceptor0_acceptor2)']

sign_func_name2args: {'1$chosenAt': [(Const('quorum__acceptor0_acceptor1', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), Const('proposer1', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))), (Const('quorum__acceptor0_acceptor2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), Const('proposer2', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))))], '1$didNotPromise': [(Const('acceptor0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))),), (Const('acceptor1', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))),)], '1$promise': [(Const('acceptor1', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Const('proposer2', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))))], '0$promise': [(Const('acceptor2', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Const('proposer2', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))))], '1$start': [(Const('proposer0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))),)], '0$member': [(Const('acceptor0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Const('quorum__acceptor0_acceptor1', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')))), (Const('acceptor1', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Const('quorum__acceptor0_acceptor1', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')))), (Const('acceptor0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Const('quorum__acceptor0_acceptor2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')))), (Const('acceptor2', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Const('quorum__acceptor0_acceptor2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))))], '1$member': [(Const('acceptor2', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Const('quorum__acceptor0_acceptor1', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')))), (Const('acceptor1', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Const('quorum__acceptor0_acceptor2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))))]}

const2sigs: {Const('quorum__acceptor0_acceptor1', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))): [quorum$1$chosenAt$0$0, quorum$0$member$1$0, quorum$0$member$1$1, quorum$1$member$1$0], Const('proposer1', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))): [proposer$1$chosenAt$1$0], Const('quorum__acceptor0_acceptor2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))): [quorum$1$chosenAt$0$1, quorum$0$member$1$2, quorum$0$member$1$3, quorum$1$member$1$1], Const('proposer2', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))): [proposer$1$chosenAt$1$1, proposer$1$promise$1$0, proposer$0$promise$1$0], Const('acceptor0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))): [acceptor$1$didNotPromise$0$0, acceptor$0$member$0$0, acceptor$0$member$0$2], Const('acceptor1', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))): [acceptor$1$didNotPromise$0$1, acceptor$1$promise$0$0, acceptor$0$member$0$1, acceptor$1$member$0$1], Const('acceptor2', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))): [acceptor$0$promise$0$0, acceptor$0$member$0$3, acceptor$1$member$0$0], Const('proposer0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))): [proposer$1$start$0$0]}

sig2const: {'quorum$1$chosenAt$0$0': Const('quorum__acceptor0_acceptor1', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), 'proposer$1$chosenAt$1$0': Const('proposer1', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))), 'quorum$1$chosenAt$0$1': Const('quorum__acceptor0_acceptor2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), 'proposer$1$chosenAt$1$1': Const('proposer2', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))), 'acceptor$1$didNotPromise$0$0': Const('acceptor0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), 'acceptor$1$didNotPromise$0$1': Const('acceptor1', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), 'acceptor$1$promise$0$0': Const('acceptor1', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), 'proposer$1$promise$1$0': Const('proposer2', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))), 'acceptor$0$promise$0$0': Const('acceptor2', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), 'proposer$0$promise$1$0': Const('proposer2', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))), 'proposer$1$start$0$0': Const('proposer0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))), 'acceptor$0$member$0$0': Const('acceptor0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), 'quorum$0$member$1$0': Const('quorum__acceptor0_acceptor1', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), 'acceptor$0$member$0$1': Const('acceptor1', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), 'quorum$0$member$1$1': Const('quorum__acceptor0_acceptor1', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), 'acceptor$0$member$0$2': Const('acceptor0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), 'quorum$0$member$1$2': Const('quorum__acceptor0_acceptor2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), 'acceptor$0$member$0$3': Const('acceptor2', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), 'quorum$0$member$1$3': Const('quorum__acceptor0_acceptor2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), 'acceptor$1$member$0$0': Const('acceptor2', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), 'quorum$1$member$1$0': Const('quorum__acceptor0_acceptor1', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), 'acceptor$1$member$0$1': Const('acceptor1', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), 'quorum$1$member$1$1': Const('quorum__acceptor0_acceptor2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')))}


---------- ArgPartition ----------

sort2class_sigs: {EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')): [quorum$0$member$1$0; quorum$0$member$1$1; quorum$1$chosenAt$0$0; quorum$1$member$1$0, quorum$0$member$1$2; quorum$0$member$1$3; quorum$1$chosenAt$0$1; quorum$1$member$1$1], EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')): [proposer$0$promise$1$0; proposer$1$chosenAt$1$1; proposer$1$promise$1$0, proposer$1$chosenAt$1$0, proposer$1$start$0$0], EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')): [acceptor$0$member$0$0; acceptor$0$member$0$2; acceptor$1$didNotPromise$0$0, acceptor$0$member$0$1; acceptor$1$didNotPromise$0$1; acceptor$1$member$0$1; acceptor$1$promise$0$0, acceptor$0$member$0$3; acceptor$0$promise$0$0; acceptor$1$member$0$0]}

sort2part_sig: {EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')): quorum$0$member$1$0; quorum$0$member$1$1; quorum$1$chosenAt$0$0; quorum$1$member$1$0 | quorum$0$member$1$2; quorum$0$member$1$3; quorum$1$chosenAt$0$1; quorum$1$member$1$1, EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')): proposer$0$promise$1$0; proposer$1$chosenAt$1$1; proposer$1$promise$1$0 | proposer$1$chosenAt$1$0 | proposer$1$start$0$0, EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')): acceptor$0$member$0$0; acceptor$0$member$0$2; acceptor$1$didNotPromise$0$0 | acceptor$0$member$0$1; acceptor$1$didNotPromise$0$1; acceptor$1$member$0$1; acceptor$1$promise$0$0 | acceptor$0$member$0$3; acceptor$0$promise$0$0; acceptor$1$member$0$0}

part_sig: ('acceptor$0$member$0$0; acceptor$0$member$0$2; acceptor$1$didNotPromise$0$0 | acceptor$0$member$0$1; acceptor$1$didNotPromise$0$1; acceptor$1$member$0$1; acceptor$1$promise$0$0 | acceptor$0$member$0$3; acceptor$0$promise$0$0; acceptor$1$member$0$0', 'proposer$0$promise$1$0; proposer$1$chosenAt$1$1; proposer$1$promise$1$0 | proposer$1$chosenAt$1$0 | proposer$1$start$0$0', 'quorum$0$member$1$0; quorum$0$member$1$1; quorum$1$chosenAt$0$0; quorum$1$member$1$0 | quorum$0$member$1$2; quorum$0$member$1$3; quorum$1$chosenAt$0$1; quorum$1$member$1$1')


---------- SigGenerator ----------

terms:  ['~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~promise(acceptor1,proposer2)', 'promise(acceptor2,proposer2)', '~start(proposer0)', 'member(acceptor0,quorum__acceptor0_acceptor1)', 'member(acceptor1,quorum__acceptor0_acceptor1)', '~member(acceptor2,quorum__acceptor0_acceptor1)', 'member(acceptor0,quorum__acceptor0_acceptor2)', '~member(acceptor1,quorum__acceptor0_acceptor2)', 'member(acceptor2,quorum__acceptor0_acceptor2)']

func_name2symbol:  {'chosenAt': Const('chosenAt', FunctionSort(EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')), EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')), BooleanSort())), 'didNotPromise': Const('didNotPromise', FunctionSort(EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')), BooleanSort())), 'promise': Const('promise', FunctionSort(EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')), EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')), BooleanSort())), 'start': Const('start', FunctionSort(EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')), BooleanSort())), 'member': Const('member', FunctionSort(EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')), EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')), BooleanSort()))}

func_name2args_sort:  {'chosenAt': (EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')), EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))), 'didNotPromise': (EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')),), 'promise': (EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')), EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))), 'start': (EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')),), 'member': (EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')), EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')))}

sign_func_name2count:  {'1$chosenAt': 2, '1$didNotPromise': 2, '1$promise': 1, '0$promise': 1, '1$start': 1, '0$member': 4, '1$member': 2}


---------- ProductArgPartition ----------

sort2class_sigs: {EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')): [quorum$0$member$1$0; quorum$0$member$1$1; quorum$1$chosenAt$0$0; quorum$1$member$1$0, quorum$0$member$1$2; quorum$0$member$1$3; quorum$1$chosenAt$0$1; quorum$1$member$1$1], EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')): [proposer$0$promise$1$0; proposer$1$chosenAt$1$1; proposer$1$promise$1$0, proposer$1$chosenAt$1$0, proposer$1$start$0$0], EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')): [acceptor$0$member$0$0; acceptor$0$member$0$2; acceptor$1$didNotPromise$0$0, acceptor$0$member$0$1; acceptor$1$didNotPromise$0$1; acceptor$1$member$0$1; acceptor$1$promise$0$0, acceptor$0$member$0$3; acceptor$0$promise$0$0; acceptor$1$member$0$0]}

sort2part_sig: {EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')): quorum$0$member$1$0; quorum$0$member$1$1; quorum$1$chosenAt$0$0; quorum$1$member$1$0 | quorum$0$member$1$2; quorum$0$member$1$3; quorum$1$chosenAt$0$1; quorum$1$member$1$1, EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')): proposer$0$promise$1$0; proposer$1$chosenAt$1$1; proposer$1$promise$1$0 | proposer$1$chosenAt$1$0 | proposer$1$start$0$0, EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')): acceptor$0$member$0$0; acceptor$0$member$0$2; acceptor$1$didNotPromise$0$0 | acceptor$0$member$0$1; acceptor$1$didNotPromise$0$1; acceptor$1$member$0$1; acceptor$1$promise$0$0 | acceptor$0$member$0$3; acceptor$0$promise$0$0; acceptor$1$member$0$0}

	sort: quorum

	identical_classes: {'quorum$0$member$1; quorum$0$member$1; quorum$1$chosenAt$0; quorum$1$member$1': [quorum$0$member$1$0; quorum$0$member$1$1; quorum$1$chosenAt$0$0; quorum$1$member$1$0, quorum$0$member$1$2; quorum$0$member$1$3; quorum$1$chosenAt$0$1; quorum$1$member$1$1]}

	identical_single_classes: {}

	identical_multi_classes: {'quorum$0$member$1; quorum$0$member$1; quorum$1$chosenAt$0; quorum$1$member$1': [quorum$0$member$1$0, quorum$0$member$1$1, quorum$1$chosenAt$0$0, quorum$1$member$1$0, quorum$0$member$1$2, quorum$0$member$1$3, quorum$1$chosenAt$0$1, quorum$1$member$1$1]}

	sort: proposer

	identical_classes: {'proposer$0$promise$1; proposer$1$chosenAt$1; proposer$1$promise$1': [proposer$0$promise$1$0; proposer$1$chosenAt$1$1; proposer$1$promise$1$0], 'proposer$1$chosenAt$1': [proposer$1$chosenAt$1$0], 'proposer$1$start$0': [proposer$1$start$0$0]}

	identical_single_classes: {'proposer$0$promise$1; proposer$1$chosenAt$1; proposer$1$promise$1': proposer$0$promise$1$0; proposer$1$chosenAt$1$1; proposer$1$promise$1$0, 'proposer$1$chosenAt$1': proposer$1$chosenAt$1$0, 'proposer$1$start$0': proposer$1$start$0$0}

	identical_multi_classes: {}

	sort: acceptor

	identical_classes: {'acceptor$0$member$0; acceptor$0$member$0; acceptor$1$didNotPromise$0': [acceptor$0$member$0$0; acceptor$0$member$0$2; acceptor$1$didNotPromise$0$0], 'acceptor$0$member$0; acceptor$1$didNotPromise$0; acceptor$1$member$0; acceptor$1$promise$0': [acceptor$0$member$0$1; acceptor$1$didNotPromise$0$1; acceptor$1$member$0$1; acceptor$1$promise$0$0], 'acceptor$0$member$0; acceptor$0$promise$0; acceptor$1$member$0': [acceptor$0$member$0$3; acceptor$0$promise$0$0; acceptor$1$member$0$0]}

	identical_single_classes: {'acceptor$0$member$0; acceptor$0$member$0; acceptor$1$didNotPromise$0': acceptor$0$member$0$0; acceptor$0$member$0$2; acceptor$1$didNotPromise$0$0, 'acceptor$0$member$0; acceptor$1$didNotPromise$0; acceptor$1$member$0; acceptor$1$promise$0': acceptor$0$member$0$1; acceptor$1$didNotPromise$0$1; acceptor$1$member$0$1; acceptor$1$promise$0$0, 'acceptor$0$member$0; acceptor$0$promise$0; acceptor$1$member$0': acceptor$0$member$0$3; acceptor$0$promise$0$0; acceptor$1$member$0$0}

	identical_multi_classes: {}


---------- QInference: _set_sort_to_quantifier_mode ----------

quantifier mode: quorum: QuantifierMode.forall

quantifier mode: proposer: QuantifierMode.forall

quantifier mode: acceptor: QuantifierMode.forall


---------- QInference: _set_constraint_mode ----------

constraint mode: ConstraintMode.no_merge


---------- QFormula: _set_qvars ----------

forall_qvars: {Var('PROPOSER1', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))), Var('PROPOSER2', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))), Var('ACCEPTOR1', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Var('QUORUM0', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), Var('ACCEPTOR2', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Var('ACCEPTOR0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Var('QUORUM1', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), Var('PROPOSER0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))}

exists_qvars: set()


---------- QFormula: _set_signed_func_name_to_args ----------

signed_func_name2args: {'1$chosenAt': [[Var('QUORUM0', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), Var('PROPOSER1', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))], [Var('QUORUM1', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), Var('PROPOSER0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))]], '1$didNotPromise': [[Var('ACCEPTOR0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')))], [Var('ACCEPTOR1', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')))]], '1$promise': [[Var('ACCEPTOR1', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Var('PROPOSER0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))]], '0$promise': [[Var('ACCEPTOR2', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Var('PROPOSER0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))]], '1$start': [[Var('PROPOSER2', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))]], '0$member': [[Var('ACCEPTOR0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Var('QUORUM0', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')))], [Var('ACCEPTOR1', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Var('QUORUM0', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')))], [Var('ACCEPTOR0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Var('QUORUM1', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')))], [Var('ACCEPTOR2', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Var('QUORUM1', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')))]], '1$member': [[Var('ACCEPTOR2', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Var('QUORUM0', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')))], [Var('ACCEPTOR1', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Var('QUORUM1', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')))]]}


---------- QFormula: _set_qterms ----------

qterms: ['~start(PROPOSER2)', '~chosenAt(QUORUM0,PROPOSER1)', '~didNotPromise(ACCEPTOR0)', 'member(ACCEPTOR0,QUORUM1)', '~didNotPromise(ACCEPTOR1)', 'promise(ACCEPTOR2,PROPOSER0)', 'member(ACCEPTOR0,QUORUM0)', 'member(ACCEPTOR1,QUORUM0)', '~promise(ACCEPTOR1,PROPOSER0)', '~member(ACCEPTOR1,QUORUM1)', '~chosenAt(QUORUM1,PROPOSER0)', 'member(ACCEPTOR2,QUORUM1)', '~member(ACCEPTOR2,QUORUM0)']


---------- QFormula: get_qclause ----------

qclause: forall QUORUM1,PROPOSER0,PROPOSER1,PROPOSER2,ACCEPTOR1,QUORUM0,ACCEPTOR2,ACCEPTOR0. start(PROPOSER2) | chosenAt(QUORUM0,PROPOSER1) | didNotPromise(ACCEPTOR0) | ~member(ACCEPTOR0,QUORUM1) | didNotPromise(ACCEPTOR1) | ~promise(ACCEPTOR2,PROPOSER0) | ~member(ACCEPTOR0,QUORUM0) | ~member(ACCEPTOR1,QUORUM0) | promise(ACCEPTOR1,PROPOSER0) | member(ACCEPTOR1,QUORUM1) | chosenAt(QUORUM1,PROPOSER0) | ~member(ACCEPTOR2,QUORUM1) | member(ACCEPTOR2,QUORUM0) | (PROPOSER0 = PROPOSER2 | ACCEPTOR1 = ACCEPTOR2 | ACCEPTOR0 = ACCEPTOR2 | ACCEPTOR0 = ACCEPTOR1 | QUORUM0 = QUORUM1 | PROPOSER0 = PROPOSER1 | PROPOSER1 = PROPOSER2)


=== Prime Orbit 47 =====================
size : 18
num_suborbits: 1
771 (*) : -0--0-0--000---0----------0
771     : ['~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor0,proposer0)', '~start(proposer2)']
772     : --0--00--000---0---------0-
772     : ['~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor0,proposer0)', '~start(proposer1)']
773     : 0--0---0-000----0---------0
773     : ['~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor0,proposer1)', '~start(proposer2)']
774     : --0--0-0-000----0-------0--
774     : ['~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor0,proposer1)', '~start(proposer0)']
775     : 0--0----0000-----0-------0-
775     : ['~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor0,proposer2)', '~start(proposer1)']
776     : -0--0---0000-----0------0--
776     : ['~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor0,proposer2)', '~start(proposer0)']
777     : -0-0---0-000------0-------0
777     : ['~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor1,proposer0)', '~start(proposer2)']
778     : --00----0000------0------0-
778     : ['~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor1,proposer0)', '~start(proposer1)']
779     : 0---0-0--000-------0------0
779     : ['~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor1,proposer1)', '~start(proposer2)']
780     : --0-0---0000-------0----0--
780     : ['~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor1,proposer1)', '~start(proposer0)']
781     : 0----00--000--------0----0-
781     : ['~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor1,proposer2)', '~start(proposer1)']
782     : -0---0-0-000--------0---0--
782     : ['~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor1,proposer2)', '~start(proposer0)']
783     : 0---0--0-000---------0----0
783     : ['~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor2,proposer0)', '~start(proposer2)']
784     : 0----0--0000---------0---0-
784     : ['~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor2,proposer0)', '~start(proposer1)']
785     : -0-0--0--000----------0---0
785     : ['~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor2,proposer1)', '~start(proposer2)']
786     : -0---0--0000----------0-0--
786     : ['~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor2,proposer1)', '~start(proposer0)']
787     : --00--0--000-----------0-0-
787     : ['~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor2,proposer2)', '~start(proposer1)']
788     : --0-0--0-000-----------00--
788     : ['~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor2,proposer2)', '~start(proposer0)']
num_forall :   0
num_exists :   0
num_literals : 0
quantified form : None
qcost : 0




---------- QPrime ----------


---------- ConstArgBinding ----------

terms: ['~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor0,proposer0)', '~start(proposer2)', '~member(acceptor0,quorum__acceptor1_acceptor2)', 'member(acceptor1,quorum__acceptor1_acceptor2)', 'member(acceptor2,quorum__acceptor1_acceptor2)', 'member(acceptor0,quorum__acceptor0_acceptor1)', 'member(acceptor1,quorum__acceptor0_acceptor1)', '~member(acceptor2,quorum__acceptor0_acceptor1)', 'member(acceptor0,quorum__acceptor0_acceptor2)', '~member(acceptor1,quorum__acceptor0_acceptor2)', 'member(acceptor2,quorum__acceptor0_acceptor2)']

sign_func_name2args: {'1$chosenAt': [(Const('quorum__acceptor0_acceptor1', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), Const('proposer1', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))), (Const('quorum__acceptor0_acceptor2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), Const('proposer1', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))), (Const('quorum__acceptor1_acceptor2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), Const('proposer0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))))], '1$didNotPromise': [(Const('acceptor0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))),), (Const('acceptor1', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))),), (Const('acceptor2', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))),)], '1$promise': [(Const('acceptor0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Const('proposer0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))))], '1$start': [(Const('proposer2', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))),)], '1$member': [(Const('acceptor0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Const('quorum__acceptor1_acceptor2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')))), (Const('acceptor2', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Const('quorum__acceptor0_acceptor1', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')))), (Const('acceptor1', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Const('quorum__acceptor0_acceptor2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))))], '0$member': [(Const('acceptor1', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Const('quorum__acceptor1_acceptor2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')))), (Const('acceptor2', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Const('quorum__acceptor1_acceptor2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')))), (Const('acceptor0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Const('quorum__acceptor0_acceptor1', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')))), (Const('acceptor1', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Const('quorum__acceptor0_acceptor1', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')))), (Const('acceptor0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Const('quorum__acceptor0_acceptor2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')))), (Const('acceptor2', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Const('quorum__acceptor0_acceptor2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))))]}

const2sigs: {Const('quorum__acceptor0_acceptor1', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))): [quorum$1$chosenAt$0$0, quorum$1$member$1$1, quorum$0$member$1$2, quorum$0$member$1$3], Const('proposer1', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))): [proposer$1$chosenAt$1$0, proposer$1$chosenAt$1$1], Const('quorum__acceptor0_acceptor2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))): [quorum$1$chosenAt$0$1, quorum$1$member$1$2, quorum$0$member$1$4, quorum$0$member$1$5], Const('quorum__acceptor1_acceptor2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))): [quorum$1$chosenAt$0$2, quorum$1$member$1$0, quorum$0$member$1$0, quorum$0$member$1$1], Const('proposer0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))): [proposer$1$chosenAt$1$2, proposer$1$promise$1$0], Const('acceptor0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))): [acceptor$1$didNotPromise$0$0, acceptor$1$promise$0$0, acceptor$1$member$0$0, acceptor$0$member$0$2, acceptor$0$member$0$4], Const('acceptor1', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))): [acceptor$1$didNotPromise$0$1, acceptor$1$member$0$2, acceptor$0$member$0$0, acceptor$0$member$0$3], Const('acceptor2', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))): [acceptor$1$didNotPromise$0$2, acceptor$1$member$0$1, acceptor$0$member$0$1, acceptor$0$member$0$5], Const('proposer2', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))): [proposer$1$start$0$0]}

sig2const: {'quorum$1$chosenAt$0$0': Const('quorum__acceptor0_acceptor1', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), 'proposer$1$chosenAt$1$0': Const('proposer1', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))), 'quorum$1$chosenAt$0$1': Const('quorum__acceptor0_acceptor2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), 'proposer$1$chosenAt$1$1': Const('proposer1', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))), 'quorum$1$chosenAt$0$2': Const('quorum__acceptor1_acceptor2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), 'proposer$1$chosenAt$1$2': Const('proposer0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))), 'acceptor$1$didNotPromise$0$0': Const('acceptor0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), 'acceptor$1$didNotPromise$0$1': Const('acceptor1', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), 'acceptor$1$didNotPromise$0$2': Const('acceptor2', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), 'acceptor$1$promise$0$0': Const('acceptor0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), 'proposer$1$promise$1$0': Const('proposer0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))), 'proposer$1$start$0$0': Const('proposer2', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))), 'acceptor$1$member$0$0': Const('acceptor0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), 'quorum$1$member$1$0': Const('quorum__acceptor1_acceptor2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), 'acceptor$1$member$0$1': Const('acceptor2', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), 'quorum$1$member$1$1': Const('quorum__acceptor0_acceptor1', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), 'acceptor$1$member$0$2': Const('acceptor1', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), 'quorum$1$member$1$2': Const('quorum__acceptor0_acceptor2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), 'acceptor$0$member$0$0': Const('acceptor1', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), 'quorum$0$member$1$0': Const('quorum__acceptor1_acceptor2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), 'acceptor$0$member$0$1': Const('acceptor2', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), 'quorum$0$member$1$1': Const('quorum__acceptor1_acceptor2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), 'acceptor$0$member$0$2': Const('acceptor0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), 'quorum$0$member$1$2': Const('quorum__acceptor0_acceptor1', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), 'acceptor$0$member$0$3': Const('acceptor1', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), 'quorum$0$member$1$3': Const('quorum__acceptor0_acceptor1', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), 'acceptor$0$member$0$4': Const('acceptor0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), 'quorum$0$member$1$4': Const('quorum__acceptor0_acceptor2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), 'acceptor$0$member$0$5': Const('acceptor2', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), 'quorum$0$member$1$5': Const('quorum__acceptor0_acceptor2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')))}


---------- ArgPartition ----------

sort2class_sigs: {EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')): [quorum$0$member$1$0; quorum$0$member$1$1; quorum$1$chosenAt$0$2; quorum$1$member$1$0, quorum$0$member$1$2; quorum$0$member$1$3; quorum$1$chosenAt$0$0; quorum$1$member$1$1, quorum$0$member$1$4; quorum$0$member$1$5; quorum$1$chosenAt$0$1; quorum$1$member$1$2], EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')): [proposer$1$chosenAt$1$0; proposer$1$chosenAt$1$1, proposer$1$chosenAt$1$2; proposer$1$promise$1$0, proposer$1$start$0$0], EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')): [acceptor$0$member$0$0; acceptor$0$member$0$3; acceptor$1$didNotPromise$0$1; acceptor$1$member$0$2, acceptor$0$member$0$1; acceptor$0$member$0$5; acceptor$1$didNotPromise$0$2; acceptor$1$member$0$1, acceptor$0$member$0$2; acceptor$0$member$0$4; acceptor$1$didNotPromise$0$0; acceptor$1$member$0$0; acceptor$1$promise$0$0]}

sort2part_sig: {EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')): quorum$0$member$1$0; quorum$0$member$1$1; quorum$1$chosenAt$0$2; quorum$1$member$1$0 | quorum$0$member$1$2; quorum$0$member$1$3; quorum$1$chosenAt$0$0; quorum$1$member$1$1 | quorum$0$member$1$4; quorum$0$member$1$5; quorum$1$chosenAt$0$1; quorum$1$member$1$2, EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')): proposer$1$chosenAt$1$0; proposer$1$chosenAt$1$1 | proposer$1$chosenAt$1$2; proposer$1$promise$1$0 | proposer$1$start$0$0, EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')): acceptor$0$member$0$0; acceptor$0$member$0$3; acceptor$1$didNotPromise$0$1; acceptor$1$member$0$2 | acceptor$0$member$0$1; acceptor$0$member$0$5; acceptor$1$didNotPromise$0$2; acceptor$1$member$0$1 | acceptor$0$member$0$2; acceptor$0$member$0$4; acceptor$1$didNotPromise$0$0; acceptor$1$member$0$0; acceptor$1$promise$0$0}

part_sig: ('acceptor$0$member$0$0; acceptor$0$member$0$3; acceptor$1$didNotPromise$0$1; acceptor$1$member$0$2 | acceptor$0$member$0$1; acceptor$0$member$0$5; acceptor$1$didNotPromise$0$2; acceptor$1$member$0$1 | acceptor$0$member$0$2; acceptor$0$member$0$4; acceptor$1$didNotPromise$0$0; acceptor$1$member$0$0; acceptor$1$promise$0$0', 'proposer$1$chosenAt$1$0; proposer$1$chosenAt$1$1 | proposer$1$chosenAt$1$2; proposer$1$promise$1$0 | proposer$1$start$0$0', 'quorum$0$member$1$0; quorum$0$member$1$1; quorum$1$chosenAt$0$2; quorum$1$member$1$0 | quorum$0$member$1$2; quorum$0$member$1$3; quorum$1$chosenAt$0$0; quorum$1$member$1$1 | quorum$0$member$1$4; quorum$0$member$1$5; quorum$1$chosenAt$0$1; quorum$1$member$1$2')


---------- SigGenerator ----------

terms:  ['~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor0,proposer0)', '~start(proposer2)', '~member(acceptor0,quorum__acceptor1_acceptor2)', 'member(acceptor1,quorum__acceptor1_acceptor2)', 'member(acceptor2,quorum__acceptor1_acceptor2)', 'member(acceptor0,quorum__acceptor0_acceptor1)', 'member(acceptor1,quorum__acceptor0_acceptor1)', '~member(acceptor2,quorum__acceptor0_acceptor1)', 'member(acceptor0,quorum__acceptor0_acceptor2)', '~member(acceptor1,quorum__acceptor0_acceptor2)', 'member(acceptor2,quorum__acceptor0_acceptor2)']

func_name2symbol:  {'chosenAt': Const('chosenAt', FunctionSort(EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')), EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')), BooleanSort())), 'didNotPromise': Const('didNotPromise', FunctionSort(EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')), BooleanSort())), 'promise': Const('promise', FunctionSort(EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')), EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')), BooleanSort())), 'start': Const('start', FunctionSort(EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')), BooleanSort())), 'member': Const('member', FunctionSort(EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')), EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')), BooleanSort()))}

func_name2args_sort:  {'chosenAt': (EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')), EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))), 'didNotPromise': (EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')),), 'promise': (EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')), EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))), 'start': (EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')),), 'member': (EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')), EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')))}

sign_func_name2count:  {'1$chosenAt': 3, '1$didNotPromise': 3, '1$promise': 1, '1$start': 1, '1$member': 3, '0$member': 6}


---------- ProductArgPartition ----------

sort2class_sigs: {EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')): [quorum$0$member$1$0; quorum$0$member$1$1; quorum$1$chosenAt$0$2; quorum$1$member$1$0, quorum$0$member$1$2; quorum$0$member$1$3; quorum$1$chosenAt$0$0; quorum$1$member$1$1, quorum$0$member$1$4; quorum$0$member$1$5; quorum$1$chosenAt$0$1; quorum$1$member$1$2], EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')): [proposer$1$chosenAt$1$0; proposer$1$chosenAt$1$1, proposer$1$chosenAt$1$2; proposer$1$promise$1$0, proposer$1$start$0$0], EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')): [acceptor$0$member$0$0; acceptor$0$member$0$3; acceptor$1$didNotPromise$0$1; acceptor$1$member$0$2, acceptor$0$member$0$1; acceptor$0$member$0$5; acceptor$1$didNotPromise$0$2; acceptor$1$member$0$1, acceptor$0$member$0$2; acceptor$0$member$0$4; acceptor$1$didNotPromise$0$0; acceptor$1$member$0$0; acceptor$1$promise$0$0]}

sort2part_sig: {EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')): quorum$0$member$1$0; quorum$0$member$1$1; quorum$1$chosenAt$0$2; quorum$1$member$1$0 | quorum$0$member$1$2; quorum$0$member$1$3; quorum$1$chosenAt$0$0; quorum$1$member$1$1 | quorum$0$member$1$4; quorum$0$member$1$5; quorum$1$chosenAt$0$1; quorum$1$member$1$2, EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')): proposer$1$chosenAt$1$0; proposer$1$chosenAt$1$1 | proposer$1$chosenAt$1$2; proposer$1$promise$1$0 | proposer$1$start$0$0, EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')): acceptor$0$member$0$0; acceptor$0$member$0$3; acceptor$1$didNotPromise$0$1; acceptor$1$member$0$2 | acceptor$0$member$0$1; acceptor$0$member$0$5; acceptor$1$didNotPromise$0$2; acceptor$1$member$0$1 | acceptor$0$member$0$2; acceptor$0$member$0$4; acceptor$1$didNotPromise$0$0; acceptor$1$member$0$0; acceptor$1$promise$0$0}

	sort: quorum

	identical_classes: {'quorum$0$member$1; quorum$0$member$1; quorum$1$chosenAt$0; quorum$1$member$1': [quorum$0$member$1$0; quorum$0$member$1$1; quorum$1$chosenAt$0$2; quorum$1$member$1$0, quorum$0$member$1$2; quorum$0$member$1$3; quorum$1$chosenAt$0$0; quorum$1$member$1$1, quorum$0$member$1$4; quorum$0$member$1$5; quorum$1$chosenAt$0$1; quorum$1$member$1$2]}

	identical_single_classes: {}

	identical_multi_classes: {'quorum$0$member$1; quorum$0$member$1; quorum$1$chosenAt$0; quorum$1$member$1': [quorum$0$member$1$0, quorum$0$member$1$1, quorum$1$chosenAt$0$2, quorum$1$member$1$0, quorum$0$member$1$2, quorum$0$member$1$3, quorum$1$chosenAt$0$0, quorum$1$member$1$1, quorum$0$member$1$4, quorum$0$member$1$5, quorum$1$chosenAt$0$1, quorum$1$member$1$2]}

	sort: proposer

	identical_classes: {'proposer$1$chosenAt$1; proposer$1$chosenAt$1': [proposer$1$chosenAt$1$0; proposer$1$chosenAt$1$1], 'proposer$1$chosenAt$1; proposer$1$promise$1': [proposer$1$chosenAt$1$2; proposer$1$promise$1$0], 'proposer$1$start$0': [proposer$1$start$0$0]}

	identical_single_classes: {'proposer$1$chosenAt$1; proposer$1$chosenAt$1': proposer$1$chosenAt$1$0; proposer$1$chosenAt$1$1, 'proposer$1$chosenAt$1; proposer$1$promise$1': proposer$1$chosenAt$1$2; proposer$1$promise$1$0, 'proposer$1$start$0': proposer$1$start$0$0}

	identical_multi_classes: {}

	sort: acceptor

	identical_classes: {'acceptor$0$member$0; acceptor$0$member$0; acceptor$1$didNotPromise$0; acceptor$1$member$0': [acceptor$0$member$0$0; acceptor$0$member$0$3; acceptor$1$didNotPromise$0$1; acceptor$1$member$0$2, acceptor$0$member$0$1; acceptor$0$member$0$5; acceptor$1$didNotPromise$0$2; acceptor$1$member$0$1], 'acceptor$0$member$0; acceptor$0$member$0; acceptor$1$didNotPromise$0; acceptor$1$member$0; acceptor$1$promise$0': [acceptor$0$member$0$2; acceptor$0$member$0$4; acceptor$1$didNotPromise$0$0; acceptor$1$member$0$0; acceptor$1$promise$0$0]}

	identical_single_classes: {'acceptor$0$member$0; acceptor$0$member$0; acceptor$1$didNotPromise$0; acceptor$1$member$0; acceptor$1$promise$0': acceptor$0$member$0$2; acceptor$0$member$0$4; acceptor$1$didNotPromise$0$0; acceptor$1$member$0$0; acceptor$1$promise$0$0}

	identical_multi_classes: {'acceptor$0$member$0; acceptor$0$member$0; acceptor$1$didNotPromise$0; acceptor$1$member$0': [acceptor$0$member$0$0, acceptor$0$member$0$3, acceptor$1$didNotPromise$0$1, acceptor$1$member$0$2, acceptor$0$member$0$1, acceptor$0$member$0$5, acceptor$1$didNotPromise$0$2, acceptor$1$member$0$1]}


---------- QInference: _set_sort_to_quantifier_mode ----------

quantifier mode: quorum: QuantifierMode.forall

quantifier mode: proposer: QuantifierMode.forall

quantifier mode: acceptor: QuantifierMode.forall


---------- QInference: _set_constraint_mode ----------

constraint mode: ConstraintMode.no_merge


---------- QFormula: _set_qvars ----------

forall_qvars: {Var('PROPOSER1', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))), Var('PROPOSER2', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))), Var('QUORUM2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), Var('ACCEPTOR1', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Var('QUORUM0', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), Var('ACCEPTOR2', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Var('ACCEPTOR0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Var('QUORUM1', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), Var('PROPOSER0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))}

exists_qvars: set()


---------- QFormula: _set_signed_func_name_to_args ----------

signed_func_name2args: {'1$chosenAt': [[Var('QUORUM1', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), Var('PROPOSER0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))], [Var('QUORUM2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), Var('PROPOSER0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))], [Var('QUORUM0', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), Var('PROPOSER1', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))]], '1$didNotPromise': [[Var('ACCEPTOR2', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')))], [Var('ACCEPTOR0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')))], [Var('ACCEPTOR1', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')))]], '1$promise': [[Var('ACCEPTOR2', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Var('PROPOSER1', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))]], '1$start': [[Var('PROPOSER2', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))]], '1$member': [[Var('ACCEPTOR2', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Var('QUORUM0', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')))], [Var('ACCEPTOR1', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Var('QUORUM1', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')))], [Var('ACCEPTOR0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Var('QUORUM2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')))]], '0$member': [[Var('ACCEPTOR0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Var('QUORUM0', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')))], [Var('ACCEPTOR1', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Var('QUORUM0', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')))], [Var('ACCEPTOR2', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Var('QUORUM1', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')))], [Var('ACCEPTOR0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Var('QUORUM1', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')))], [Var('ACCEPTOR2', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Var('QUORUM2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')))], [Var('ACCEPTOR1', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Var('QUORUM2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')))]]}


---------- QFormula: _set_qterms ----------

qterms: ['~didNotPromise(ACCEPTOR2)', 'member(ACCEPTOR2,QUORUM1)', '~chosenAt(QUORUM2,PROPOSER0)', '~start(PROPOSER2)', '~member(ACCEPTOR0,QUORUM2)', '~chosenAt(QUORUM0,PROPOSER1)', '~didNotPromise(ACCEPTOR0)', 'member(ACCEPTOR0,QUORUM1)', '~didNotPromise(ACCEPTOR1)', 'member(ACCEPTOR1,QUORUM2)', 'member(ACCEPTOR0,QUORUM0)', 'member(ACCEPTOR1,QUORUM0)', '~promise(ACCEPTOR2,PROPOSER1)', '~chosenAt(QUORUM1,PROPOSER0)', 'member(ACCEPTOR2,QUORUM2)', '~member(ACCEPTOR1,QUORUM1)', '~member(ACCEPTOR2,QUORUM0)']


---------- QFormula: get_qclause ----------

qclause: forall QUORUM1,PROPOSER0,PROPOSER1,PROPOSER2,ACCEPTOR1,QUORUM2,QUORUM0,ACCEPTOR2,ACCEPTOR0. didNotPromise(ACCEPTOR2) | ~member(ACCEPTOR2,QUORUM1) | chosenAt(QUORUM2,PROPOSER0) | start(PROPOSER2) | member(ACCEPTOR0,QUORUM2) | chosenAt(QUORUM0,PROPOSER1) | didNotPromise(ACCEPTOR0) | ~member(ACCEPTOR0,QUORUM1) | didNotPromise(ACCEPTOR1) | ~member(ACCEPTOR1,QUORUM2) | ~member(ACCEPTOR0,QUORUM0) | ~member(ACCEPTOR1,QUORUM0) | promise(ACCEPTOR2,PROPOSER1) | chosenAt(QUORUM1,PROPOSER0) | ~member(ACCEPTOR2,QUORUM2) | member(ACCEPTOR1,QUORUM1) | member(ACCEPTOR2,QUORUM0) | (QUORUM1 = QUORUM2 | PROPOSER0 = PROPOSER2 | ACCEPTOR1 = ACCEPTOR2 | ACCEPTOR0 = ACCEPTOR2 | ACCEPTOR0 = ACCEPTOR1 | QUORUM0 = QUORUM1 | PROPOSER0 = PROPOSER1 | QUORUM0 = QUORUM2 | PROPOSER1 = PROPOSER2)


=== Prime Orbit 48 =====================
size : 18
num_suborbits: 1
789 (*) : ----0-0--000---0---0------0
789     : ['~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor0,proposer0)', '~promise(acceptor1,proposer1)', '~start(proposer2)']
790     : -----00--000---0----0----0-
790     : ['~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor0,proposer0)', '~promise(acceptor1,proposer2)', '~start(proposer1)']
791     : ---0---0-000----0-0-------0
791     : ['~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor0,proposer1)', '~promise(acceptor1,proposer0)', '~start(proposer2)']
792     : -----0-0-000----0---0---0--
792     : ['~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor0,proposer1)', '~promise(acceptor1,proposer2)', '~start(proposer0)']
793     : ---0----0000-----00------0-
793     : ['~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor0,proposer2)', '~promise(acceptor1,proposer0)', '~start(proposer1)']
794     : ----0---0000-----0-0----0--
794     : ['~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor0,proposer2)', '~promise(acceptor1,proposer1)', '~start(proposer0)']
795     : -0----0--000---0------0---0
795     : ['~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor0,proposer0)', '~promise(acceptor2,proposer1)', '~start(proposer2)']
796     : --0---0--000---0-------0-0-
796     : ['~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor0,proposer0)', '~promise(acceptor2,proposer2)', '~start(proposer1)']
797     : 0------0-000----0----0----0
797     : ['~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor0,proposer1)', '~promise(acceptor2,proposer0)', '~start(proposer2)']
798     : --0----0-000----0------00--
798     : ['~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor0,proposer1)', '~promise(acceptor2,proposer2)', '~start(proposer0)']
799     : 0-------0000-----0---0---0-
799     : ['~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor0,proposer2)', '~promise(acceptor2,proposer0)', '~start(proposer1)']
800     : -0------0000-----0----0-0--
800     : ['~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor0,proposer2)', '~promise(acceptor2,proposer1)', '~start(proposer0)']
801     : -0-0-----000------0---0---0
801     : ['~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor1,proposer0)', '~promise(acceptor2,proposer1)', '~start(proposer2)']
802     : --00-----000------0----0-0-
802     : ['~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor1,proposer0)', '~promise(acceptor2,proposer2)', '~start(proposer1)']
803     : 0---0----000-------0-0----0
803     : ['~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor1,proposer1)', '~promise(acceptor2,proposer0)', '~start(proposer2)']
804     : --0-0----000-------0---00--
804     : ['~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor1,proposer1)', '~promise(acceptor2,proposer2)', '~start(proposer0)']
805     : 0----0---000--------00---0-
805     : ['~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor1,proposer2)', '~promise(acceptor2,proposer0)', '~start(proposer1)']
806     : -0---0---000--------0-0-0--
806     : ['~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor1,proposer2)', '~promise(acceptor2,proposer1)', '~start(proposer0)']
num_forall :   0
num_exists :   0
num_literals : 0
quantified form : None
qcost : 0




---------- QPrime ----------


---------- ConstArgBinding ----------

terms: ['~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor0,proposer0)', '~promise(acceptor1,proposer1)', '~start(proposer2)', '~member(acceptor0,quorum__acceptor1_acceptor2)', 'member(acceptor1,quorum__acceptor1_acceptor2)', 'member(acceptor2,quorum__acceptor1_acceptor2)', 'member(acceptor0,quorum__acceptor0_acceptor2)', '~member(acceptor1,quorum__acceptor0_acceptor2)', 'member(acceptor2,quorum__acceptor0_acceptor2)']

sign_func_name2args: {'1$chosenAt': [(Const('quorum__acceptor0_acceptor2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), Const('proposer1', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))), (Const('quorum__acceptor1_acceptor2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), Const('proposer0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))))], '1$didNotPromise': [(Const('acceptor0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))),), (Const('acceptor1', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))),), (Const('acceptor2', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))),)], '1$promise': [(Const('acceptor0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Const('proposer0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))), (Const('acceptor1', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Const('proposer1', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))))], '1$start': [(Const('proposer2', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))),)], '1$member': [(Const('acceptor0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Const('quorum__acceptor1_acceptor2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')))), (Const('acceptor1', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Const('quorum__acceptor0_acceptor2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))))], '0$member': [(Const('acceptor1', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Const('quorum__acceptor1_acceptor2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')))), (Const('acceptor2', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Const('quorum__acceptor1_acceptor2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')))), (Const('acceptor0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Const('quorum__acceptor0_acceptor2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')))), (Const('acceptor2', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Const('quorum__acceptor0_acceptor2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))))]}

const2sigs: {Const('quorum__acceptor0_acceptor2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))): [quorum$1$chosenAt$0$0, quorum$1$member$1$1, quorum$0$member$1$2, quorum$0$member$1$3], Const('proposer1', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))): [proposer$1$chosenAt$1$0, proposer$1$promise$1$1], Const('quorum__acceptor1_acceptor2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))): [quorum$1$chosenAt$0$1, quorum$1$member$1$0, quorum$0$member$1$0, quorum$0$member$1$1], Const('proposer0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))): [proposer$1$chosenAt$1$1, proposer$1$promise$1$0], Const('acceptor0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))): [acceptor$1$didNotPromise$0$0, acceptor$1$promise$0$0, acceptor$1$member$0$0, acceptor$0$member$0$2], Const('acceptor1', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))): [acceptor$1$didNotPromise$0$1, acceptor$1$promise$0$1, acceptor$1$member$0$1, acceptor$0$member$0$0], Const('acceptor2', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))): [acceptor$1$didNotPromise$0$2, acceptor$0$member$0$1, acceptor$0$member$0$3], Const('proposer2', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))): [proposer$1$start$0$0]}

sig2const: {'quorum$1$chosenAt$0$0': Const('quorum__acceptor0_acceptor2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), 'proposer$1$chosenAt$1$0': Const('proposer1', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))), 'quorum$1$chosenAt$0$1': Const('quorum__acceptor1_acceptor2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), 'proposer$1$chosenAt$1$1': Const('proposer0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))), 'acceptor$1$didNotPromise$0$0': Const('acceptor0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), 'acceptor$1$didNotPromise$0$1': Const('acceptor1', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), 'acceptor$1$didNotPromise$0$2': Const('acceptor2', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), 'acceptor$1$promise$0$0': Const('acceptor0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), 'proposer$1$promise$1$0': Const('proposer0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))), 'acceptor$1$promise$0$1': Const('acceptor1', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), 'proposer$1$promise$1$1': Const('proposer1', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))), 'proposer$1$start$0$0': Const('proposer2', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))), 'acceptor$1$member$0$0': Const('acceptor0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), 'quorum$1$member$1$0': Const('quorum__acceptor1_acceptor2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), 'acceptor$1$member$0$1': Const('acceptor1', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), 'quorum$1$member$1$1': Const('quorum__acceptor0_acceptor2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), 'acceptor$0$member$0$0': Const('acceptor1', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), 'quorum$0$member$1$0': Const('quorum__acceptor1_acceptor2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), 'acceptor$0$member$0$1': Const('acceptor2', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), 'quorum$0$member$1$1': Const('quorum__acceptor1_acceptor2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), 'acceptor$0$member$0$2': Const('acceptor0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), 'quorum$0$member$1$2': Const('quorum__acceptor0_acceptor2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), 'acceptor$0$member$0$3': Const('acceptor2', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), 'quorum$0$member$1$3': Const('quorum__acceptor0_acceptor2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')))}


---------- ArgPartition ----------

sort2class_sigs: {EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')): [quorum$0$member$1$0; quorum$0$member$1$1; quorum$1$chosenAt$0$1; quorum$1$member$1$0, quorum$0$member$1$2; quorum$0$member$1$3; quorum$1$chosenAt$0$0; quorum$1$member$1$1], EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')): [proposer$1$chosenAt$1$0; proposer$1$promise$1$1, proposer$1$chosenAt$1$1; proposer$1$promise$1$0, proposer$1$start$0$0], EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')): [acceptor$0$member$0$0; acceptor$1$didNotPromise$0$1; acceptor$1$member$0$1; acceptor$1$promise$0$1, acceptor$0$member$0$1; acceptor$0$member$0$3; acceptor$1$didNotPromise$0$2, acceptor$0$member$0$2; acceptor$1$didNotPromise$0$0; acceptor$1$member$0$0; acceptor$1$promise$0$0]}

sort2part_sig: {EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')): quorum$0$member$1$0; quorum$0$member$1$1; quorum$1$chosenAt$0$1; quorum$1$member$1$0 | quorum$0$member$1$2; quorum$0$member$1$3; quorum$1$chosenAt$0$0; quorum$1$member$1$1, EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')): proposer$1$chosenAt$1$0; proposer$1$promise$1$1 | proposer$1$chosenAt$1$1; proposer$1$promise$1$0 | proposer$1$start$0$0, EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')): acceptor$0$member$0$0; acceptor$1$didNotPromise$0$1; acceptor$1$member$0$1; acceptor$1$promise$0$1 | acceptor$0$member$0$1; acceptor$0$member$0$3; acceptor$1$didNotPromise$0$2 | acceptor$0$member$0$2; acceptor$1$didNotPromise$0$0; acceptor$1$member$0$0; acceptor$1$promise$0$0}

part_sig: ('acceptor$0$member$0$0; acceptor$1$didNotPromise$0$1; acceptor$1$member$0$1; acceptor$1$promise$0$1 | acceptor$0$member$0$1; acceptor$0$member$0$3; acceptor$1$didNotPromise$0$2 | acceptor$0$member$0$2; acceptor$1$didNotPromise$0$0; acceptor$1$member$0$0; acceptor$1$promise$0$0', 'proposer$1$chosenAt$1$0; proposer$1$promise$1$1 | proposer$1$chosenAt$1$1; proposer$1$promise$1$0 | proposer$1$start$0$0', 'quorum$0$member$1$0; quorum$0$member$1$1; quorum$1$chosenAt$0$1; quorum$1$member$1$0 | quorum$0$member$1$2; quorum$0$member$1$3; quorum$1$chosenAt$0$0; quorum$1$member$1$1')


---------- SigGenerator ----------

terms:  ['~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor0,proposer0)', '~promise(acceptor1,proposer1)', '~start(proposer2)', '~member(acceptor0,quorum__acceptor1_acceptor2)', 'member(acceptor1,quorum__acceptor1_acceptor2)', 'member(acceptor2,quorum__acceptor1_acceptor2)', 'member(acceptor0,quorum__acceptor0_acceptor2)', '~member(acceptor1,quorum__acceptor0_acceptor2)', 'member(acceptor2,quorum__acceptor0_acceptor2)']

func_name2symbol:  {'chosenAt': Const('chosenAt', FunctionSort(EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')), EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')), BooleanSort())), 'didNotPromise': Const('didNotPromise', FunctionSort(EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')), BooleanSort())), 'promise': Const('promise', FunctionSort(EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')), EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')), BooleanSort())), 'start': Const('start', FunctionSort(EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')), BooleanSort())), 'member': Const('member', FunctionSort(EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')), EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')), BooleanSort()))}

func_name2args_sort:  {'chosenAt': (EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')), EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))), 'didNotPromise': (EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')),), 'promise': (EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')), EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))), 'start': (EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')),), 'member': (EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')), EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')))}

sign_func_name2count:  {'1$chosenAt': 2, '1$didNotPromise': 3, '1$promise': 2, '1$start': 1, '1$member': 2, '0$member': 4}


---------- ProductArgPartition ----------

sort2class_sigs: {EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')): [quorum$0$member$1$0; quorum$0$member$1$1; quorum$1$chosenAt$0$1; quorum$1$member$1$0, quorum$0$member$1$2; quorum$0$member$1$3; quorum$1$chosenAt$0$0; quorum$1$member$1$1], EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')): [proposer$1$chosenAt$1$0; proposer$1$promise$1$1, proposer$1$chosenAt$1$1; proposer$1$promise$1$0, proposer$1$start$0$0], EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')): [acceptor$0$member$0$0; acceptor$1$didNotPromise$0$1; acceptor$1$member$0$1; acceptor$1$promise$0$1, acceptor$0$member$0$1; acceptor$0$member$0$3; acceptor$1$didNotPromise$0$2, acceptor$0$member$0$2; acceptor$1$didNotPromise$0$0; acceptor$1$member$0$0; acceptor$1$promise$0$0]}

sort2part_sig: {EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')): quorum$0$member$1$0; quorum$0$member$1$1; quorum$1$chosenAt$0$1; quorum$1$member$1$0 | quorum$0$member$1$2; quorum$0$member$1$3; quorum$1$chosenAt$0$0; quorum$1$member$1$1, EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')): proposer$1$chosenAt$1$0; proposer$1$promise$1$1 | proposer$1$chosenAt$1$1; proposer$1$promise$1$0 | proposer$1$start$0$0, EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')): acceptor$0$member$0$0; acceptor$1$didNotPromise$0$1; acceptor$1$member$0$1; acceptor$1$promise$0$1 | acceptor$0$member$0$1; acceptor$0$member$0$3; acceptor$1$didNotPromise$0$2 | acceptor$0$member$0$2; acceptor$1$didNotPromise$0$0; acceptor$1$member$0$0; acceptor$1$promise$0$0}

	sort: quorum

	identical_classes: {'quorum$0$member$1; quorum$0$member$1; quorum$1$chosenAt$0; quorum$1$member$1': [quorum$0$member$1$0; quorum$0$member$1$1; quorum$1$chosenAt$0$1; quorum$1$member$1$0, quorum$0$member$1$2; quorum$0$member$1$3; quorum$1$chosenAt$0$0; quorum$1$member$1$1]}

	identical_single_classes: {}

	identical_multi_classes: {'quorum$0$member$1; quorum$0$member$1; quorum$1$chosenAt$0; quorum$1$member$1': [quorum$0$member$1$0, quorum$0$member$1$1, quorum$1$chosenAt$0$1, quorum$1$member$1$0, quorum$0$member$1$2, quorum$0$member$1$3, quorum$1$chosenAt$0$0, quorum$1$member$1$1]}

	sort: proposer

	identical_classes: {'proposer$1$chosenAt$1; proposer$1$promise$1': [proposer$1$chosenAt$1$0; proposer$1$promise$1$1, proposer$1$chosenAt$1$1; proposer$1$promise$1$0], 'proposer$1$start$0': [proposer$1$start$0$0]}

	identical_single_classes: {'proposer$1$start$0': proposer$1$start$0$0}

	identical_multi_classes: {'proposer$1$chosenAt$1; proposer$1$promise$1': [proposer$1$chosenAt$1$0, proposer$1$promise$1$1, proposer$1$chosenAt$1$1, proposer$1$promise$1$0]}

	sort: acceptor

	identical_classes: {'acceptor$0$member$0; acceptor$1$didNotPromise$0; acceptor$1$member$0; acceptor$1$promise$0': [acceptor$0$member$0$0; acceptor$1$didNotPromise$0$1; acceptor$1$member$0$1; acceptor$1$promise$0$1, acceptor$0$member$0$2; acceptor$1$didNotPromise$0$0; acceptor$1$member$0$0; acceptor$1$promise$0$0], 'acceptor$0$member$0; acceptor$0$member$0; acceptor$1$didNotPromise$0': [acceptor$0$member$0$1; acceptor$0$member$0$3; acceptor$1$didNotPromise$0$2]}

	identical_single_classes: {'acceptor$0$member$0; acceptor$0$member$0; acceptor$1$didNotPromise$0': acceptor$0$member$0$1; acceptor$0$member$0$3; acceptor$1$didNotPromise$0$2}

	identical_multi_classes: {'acceptor$0$member$0; acceptor$1$didNotPromise$0; acceptor$1$member$0; acceptor$1$promise$0': [acceptor$0$member$0$0, acceptor$1$didNotPromise$0$1, acceptor$1$member$0$1, acceptor$1$promise$0$1, acceptor$0$member$0$2, acceptor$1$didNotPromise$0$0, acceptor$1$member$0$0, acceptor$1$promise$0$0]}


---------- QInference: _set_sort_to_quantifier_mode ----------

quantifier mode: quorum: QuantifierMode.forall

quantifier mode: proposer: QuantifierMode.forall

quantifier mode: acceptor: QuantifierMode.forall


---------- QInference: _set_constraint_mode ----------

constraint mode: ConstraintMode.no_merge


---------- QFormula: _set_qvars ----------

forall_qvars: {Var('PROPOSER1', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))), Var('PROPOSER2', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))), Var('ACCEPTOR1', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Var('QUORUM0', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), Var('ACCEPTOR2', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Var('ACCEPTOR0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Var('QUORUM1', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), Var('PROPOSER0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))}

exists_qvars: set()


---------- QFormula: _set_signed_func_name_to_args ----------

signed_func_name2args: {'1$chosenAt': [[Var('QUORUM1', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), Var('PROPOSER0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))], [Var('QUORUM0', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), Var('PROPOSER1', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))]], '1$didNotPromise': [[Var('ACCEPTOR2', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')))], [Var('ACCEPTOR0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')))], [Var('ACCEPTOR1', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')))]], '1$promise': [[Var('ACCEPTOR2', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Var('PROPOSER1', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))], [Var('ACCEPTOR0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Var('PROPOSER0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))]], '1$start': [[Var('PROPOSER2', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))]], '1$member': [[Var('ACCEPTOR2', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Var('QUORUM0', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')))], [Var('ACCEPTOR0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Var('QUORUM1', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')))]], '0$member': [[Var('ACCEPTOR0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Var('QUORUM0', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')))], [Var('ACCEPTOR1', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Var('QUORUM0', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')))], [Var('ACCEPTOR2', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Var('QUORUM1', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')))], [Var('ACCEPTOR1', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Var('QUORUM1', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')))]]}


---------- QFormula: _set_qterms ----------

qterms: ['~didNotPromise(ACCEPTOR2)', '~promise(ACCEPTOR0,PROPOSER0)', '~start(PROPOSER2)', '~chosenAt(QUORUM0,PROPOSER1)', '~didNotPromise(ACCEPTOR0)', '~didNotPromise(ACCEPTOR1)', 'member(ACCEPTOR0,QUORUM0)', 'member(ACCEPTOR1,QUORUM0)', 'member(ACCEPTOR1,QUORUM1)', '~promise(ACCEPTOR2,PROPOSER1)', '~chosenAt(QUORUM1,PROPOSER0)', '~member(ACCEPTOR0,QUORUM1)', 'member(ACCEPTOR2,QUORUM1)', '~member(ACCEPTOR2,QUORUM0)']


---------- QFormula: get_qclause ----------

qclause: forall QUORUM1,PROPOSER0,PROPOSER1,PROPOSER2,ACCEPTOR1,QUORUM0,ACCEPTOR2,ACCEPTOR0. didNotPromise(ACCEPTOR2) | promise(ACCEPTOR0,PROPOSER0) | start(PROPOSER2) | chosenAt(QUORUM0,PROPOSER1) | didNotPromise(ACCEPTOR0) | didNotPromise(ACCEPTOR1) | ~member(ACCEPTOR0,QUORUM0) | ~member(ACCEPTOR1,QUORUM0) | ~member(ACCEPTOR1,QUORUM1) | promise(ACCEPTOR2,PROPOSER1) | chosenAt(QUORUM1,PROPOSER0) | member(ACCEPTOR0,QUORUM1) | ~member(ACCEPTOR2,QUORUM1) | member(ACCEPTOR2,QUORUM0) | (PROPOSER0 = PROPOSER2 | ACCEPTOR1 = ACCEPTOR2 | ACCEPTOR0 = ACCEPTOR2 | ACCEPTOR0 = ACCEPTOR1 | QUORUM0 = QUORUM1 | PROPOSER0 = PROPOSER1 | PROPOSER1 = PROPOSER2)


=== Prime Orbit 49 =====================
size : 3
num_suborbits: 1
807 (*) : -00-00-00000------------0--
807     : ['~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~start(proposer0)']
808     : 0-00-00-0000-------------0-
808     : ['~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~start(proposer1)']
809     : 00-00-00-000--------------0
809     : ['~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~start(proposer2)']
num_forall :   0
num_exists :   0
num_literals : 0
quantified form : None
qcost : 0




---------- QPrime ----------


---------- ConstArgBinding ----------

terms: ['~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~start(proposer0)', '~member(acceptor0,quorum__acceptor1_acceptor2)', 'member(acceptor1,quorum__acceptor1_acceptor2)', 'member(acceptor2,quorum__acceptor1_acceptor2)', 'member(acceptor0,quorum__acceptor0_acceptor1)', 'member(acceptor1,quorum__acceptor0_acceptor1)', '~member(acceptor2,quorum__acceptor0_acceptor1)', 'member(acceptor0,quorum__acceptor0_acceptor2)', '~member(acceptor1,quorum__acceptor0_acceptor2)', 'member(acceptor2,quorum__acceptor0_acceptor2)']

sign_func_name2args: {'1$chosenAt': [(Const('quorum__acceptor0_acceptor1', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), Const('proposer1', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))), (Const('quorum__acceptor0_acceptor1', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), Const('proposer2', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))), (Const('quorum__acceptor0_acceptor2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), Const('proposer1', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))), (Const('quorum__acceptor0_acceptor2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), Const('proposer2', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))), (Const('quorum__acceptor1_acceptor2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), Const('proposer1', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))), (Const('quorum__acceptor1_acceptor2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), Const('proposer2', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))))], '1$didNotPromise': [(Const('acceptor0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))),), (Const('acceptor1', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))),), (Const('acceptor2', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))),)], '1$start': [(Const('proposer0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))),)], '1$member': [(Const('acceptor0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Const('quorum__acceptor1_acceptor2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')))), (Const('acceptor2', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Const('quorum__acceptor0_acceptor1', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')))), (Const('acceptor1', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Const('quorum__acceptor0_acceptor2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))))], '0$member': [(Const('acceptor1', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Const('quorum__acceptor1_acceptor2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')))), (Const('acceptor2', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Const('quorum__acceptor1_acceptor2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')))), (Const('acceptor0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Const('quorum__acceptor0_acceptor1', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')))), (Const('acceptor1', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Const('quorum__acceptor0_acceptor1', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')))), (Const('acceptor0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Const('quorum__acceptor0_acceptor2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')))), (Const('acceptor2', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Const('quorum__acceptor0_acceptor2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))))]}

const2sigs: {Const('quorum__acceptor0_acceptor1', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))): [quorum$1$chosenAt$0$0, quorum$1$chosenAt$0$1, quorum$1$member$1$1, quorum$0$member$1$2, quorum$0$member$1$3], Const('proposer1', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))): [proposer$1$chosenAt$1$0, proposer$1$chosenAt$1$2, proposer$1$chosenAt$1$4], Const('proposer2', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))): [proposer$1$chosenAt$1$1, proposer$1$chosenAt$1$3, proposer$1$chosenAt$1$5], Const('quorum__acceptor0_acceptor2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))): [quorum$1$chosenAt$0$2, quorum$1$chosenAt$0$3, quorum$1$member$1$2, quorum$0$member$1$4, quorum$0$member$1$5], Const('quorum__acceptor1_acceptor2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))): [quorum$1$chosenAt$0$4, quorum$1$chosenAt$0$5, quorum$1$member$1$0, quorum$0$member$1$0, quorum$0$member$1$1], Const('acceptor0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))): [acceptor$1$didNotPromise$0$0, acceptor$1$member$0$0, acceptor$0$member$0$2, acceptor$0$member$0$4], Const('acceptor1', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))): [acceptor$1$didNotPromise$0$1, acceptor$1$member$0$2, acceptor$0$member$0$0, acceptor$0$member$0$3], Const('acceptor2', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))): [acceptor$1$didNotPromise$0$2, acceptor$1$member$0$1, acceptor$0$member$0$1, acceptor$0$member$0$5], Const('proposer0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))): [proposer$1$start$0$0]}

sig2const: {'quorum$1$chosenAt$0$0': Const('quorum__acceptor0_acceptor1', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), 'proposer$1$chosenAt$1$0': Const('proposer1', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))), 'quorum$1$chosenAt$0$1': Const('quorum__acceptor0_acceptor1', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), 'proposer$1$chosenAt$1$1': Const('proposer2', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))), 'quorum$1$chosenAt$0$2': Const('quorum__acceptor0_acceptor2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), 'proposer$1$chosenAt$1$2': Const('proposer1', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))), 'quorum$1$chosenAt$0$3': Const('quorum__acceptor0_acceptor2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), 'proposer$1$chosenAt$1$3': Const('proposer2', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))), 'quorum$1$chosenAt$0$4': Const('quorum__acceptor1_acceptor2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), 'proposer$1$chosenAt$1$4': Const('proposer1', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))), 'quorum$1$chosenAt$0$5': Const('quorum__acceptor1_acceptor2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), 'proposer$1$chosenAt$1$5': Const('proposer2', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))), 'acceptor$1$didNotPromise$0$0': Const('acceptor0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), 'acceptor$1$didNotPromise$0$1': Const('acceptor1', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), 'acceptor$1$didNotPromise$0$2': Const('acceptor2', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), 'proposer$1$start$0$0': Const('proposer0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))), 'acceptor$1$member$0$0': Const('acceptor0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), 'quorum$1$member$1$0': Const('quorum__acceptor1_acceptor2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), 'acceptor$1$member$0$1': Const('acceptor2', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), 'quorum$1$member$1$1': Const('quorum__acceptor0_acceptor1', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), 'acceptor$1$member$0$2': Const('acceptor1', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), 'quorum$1$member$1$2': Const('quorum__acceptor0_acceptor2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), 'acceptor$0$member$0$0': Const('acceptor1', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), 'quorum$0$member$1$0': Const('quorum__acceptor1_acceptor2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), 'acceptor$0$member$0$1': Const('acceptor2', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), 'quorum$0$member$1$1': Const('quorum__acceptor1_acceptor2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), 'acceptor$0$member$0$2': Const('acceptor0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), 'quorum$0$member$1$2': Const('quorum__acceptor0_acceptor1', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), 'acceptor$0$member$0$3': Const('acceptor1', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), 'quorum$0$member$1$3': Const('quorum__acceptor0_acceptor1', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), 'acceptor$0$member$0$4': Const('acceptor0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), 'quorum$0$member$1$4': Const('quorum__acceptor0_acceptor2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), 'acceptor$0$member$0$5': Const('acceptor2', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), 'quorum$0$member$1$5': Const('quorum__acceptor0_acceptor2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')))}


---------- ArgPartition ----------

sort2class_sigs: {EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')): [quorum$0$member$1$0; quorum$0$member$1$1; quorum$1$chosenAt$0$4; quorum$1$chosenAt$0$5; quorum$1$member$1$0, quorum$0$member$1$2; quorum$0$member$1$3; quorum$1$chosenAt$0$0; quorum$1$chosenAt$0$1; quorum$1$member$1$1, quorum$0$member$1$4; quorum$0$member$1$5; quorum$1$chosenAt$0$2; quorum$1$chosenAt$0$3; quorum$1$member$1$2], EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')): [proposer$1$chosenAt$1$0; proposer$1$chosenAt$1$2; proposer$1$chosenAt$1$4, proposer$1$chosenAt$1$1; proposer$1$chosenAt$1$3; proposer$1$chosenAt$1$5, proposer$1$start$0$0], EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')): [acceptor$0$member$0$0; acceptor$0$member$0$3; acceptor$1$didNotPromise$0$1; acceptor$1$member$0$2, acceptor$0$member$0$1; acceptor$0$member$0$5; acceptor$1$didNotPromise$0$2; acceptor$1$member$0$1, acceptor$0$member$0$2; acceptor$0$member$0$4; acceptor$1$didNotPromise$0$0; acceptor$1$member$0$0]}

sort2part_sig: {EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')): quorum$0$member$1$0; quorum$0$member$1$1; quorum$1$chosenAt$0$4; quorum$1$chosenAt$0$5; quorum$1$member$1$0 | quorum$0$member$1$2; quorum$0$member$1$3; quorum$1$chosenAt$0$0; quorum$1$chosenAt$0$1; quorum$1$member$1$1 | quorum$0$member$1$4; quorum$0$member$1$5; quorum$1$chosenAt$0$2; quorum$1$chosenAt$0$3; quorum$1$member$1$2, EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')): proposer$1$chosenAt$1$0; proposer$1$chosenAt$1$2; proposer$1$chosenAt$1$4 | proposer$1$chosenAt$1$1; proposer$1$chosenAt$1$3; proposer$1$chosenAt$1$5 | proposer$1$start$0$0, EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')): acceptor$0$member$0$0; acceptor$0$member$0$3; acceptor$1$didNotPromise$0$1; acceptor$1$member$0$2 | acceptor$0$member$0$1; acceptor$0$member$0$5; acceptor$1$didNotPromise$0$2; acceptor$1$member$0$1 | acceptor$0$member$0$2; acceptor$0$member$0$4; acceptor$1$didNotPromise$0$0; acceptor$1$member$0$0}

part_sig: ('acceptor$0$member$0$0; acceptor$0$member$0$3; acceptor$1$didNotPromise$0$1; acceptor$1$member$0$2 | acceptor$0$member$0$1; acceptor$0$member$0$5; acceptor$1$didNotPromise$0$2; acceptor$1$member$0$1 | acceptor$0$member$0$2; acceptor$0$member$0$4; acceptor$1$didNotPromise$0$0; acceptor$1$member$0$0', 'proposer$1$chosenAt$1$0; proposer$1$chosenAt$1$2; proposer$1$chosenAt$1$4 | proposer$1$chosenAt$1$1; proposer$1$chosenAt$1$3; proposer$1$chosenAt$1$5 | proposer$1$start$0$0', 'quorum$0$member$1$0; quorum$0$member$1$1; quorum$1$chosenAt$0$4; quorum$1$chosenAt$0$5; quorum$1$member$1$0 | quorum$0$member$1$2; quorum$0$member$1$3; quorum$1$chosenAt$0$0; quorum$1$chosenAt$0$1; quorum$1$member$1$1 | quorum$0$member$1$4; quorum$0$member$1$5; quorum$1$chosenAt$0$2; quorum$1$chosenAt$0$3; quorum$1$member$1$2')


---------- SigGenerator ----------

terms:  ['~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~start(proposer0)', '~member(acceptor0,quorum__acceptor1_acceptor2)', 'member(acceptor1,quorum__acceptor1_acceptor2)', 'member(acceptor2,quorum__acceptor1_acceptor2)', 'member(acceptor0,quorum__acceptor0_acceptor1)', 'member(acceptor1,quorum__acceptor0_acceptor1)', '~member(acceptor2,quorum__acceptor0_acceptor1)', 'member(acceptor0,quorum__acceptor0_acceptor2)', '~member(acceptor1,quorum__acceptor0_acceptor2)', 'member(acceptor2,quorum__acceptor0_acceptor2)']

func_name2symbol:  {'chosenAt': Const('chosenAt', FunctionSort(EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')), EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')), BooleanSort())), 'didNotPromise': Const('didNotPromise', FunctionSort(EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')), BooleanSort())), 'start': Const('start', FunctionSort(EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')), BooleanSort())), 'member': Const('member', FunctionSort(EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')), EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')), BooleanSort()))}

func_name2args_sort:  {'chosenAt': (EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')), EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))), 'didNotPromise': (EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')),), 'start': (EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')),), 'member': (EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')), EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')))}

sign_func_name2count:  {'1$chosenAt': 6, '1$didNotPromise': 3, '1$start': 1, '1$member': 3, '0$member': 6}


---------- ProductArgPartition ----------

sort2class_sigs: {EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')): [quorum$0$member$1$0; quorum$0$member$1$1; quorum$1$chosenAt$0$4; quorum$1$chosenAt$0$5; quorum$1$member$1$0, quorum$0$member$1$2; quorum$0$member$1$3; quorum$1$chosenAt$0$0; quorum$1$chosenAt$0$1; quorum$1$member$1$1, quorum$0$member$1$4; quorum$0$member$1$5; quorum$1$chosenAt$0$2; quorum$1$chosenAt$0$3; quorum$1$member$1$2], EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')): [proposer$1$chosenAt$1$0; proposer$1$chosenAt$1$2; proposer$1$chosenAt$1$4, proposer$1$chosenAt$1$1; proposer$1$chosenAt$1$3; proposer$1$chosenAt$1$5, proposer$1$start$0$0], EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')): [acceptor$0$member$0$0; acceptor$0$member$0$3; acceptor$1$didNotPromise$0$1; acceptor$1$member$0$2, acceptor$0$member$0$1; acceptor$0$member$0$5; acceptor$1$didNotPromise$0$2; acceptor$1$member$0$1, acceptor$0$member$0$2; acceptor$0$member$0$4; acceptor$1$didNotPromise$0$0; acceptor$1$member$0$0]}

sort2part_sig: {EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')): quorum$0$member$1$0; quorum$0$member$1$1; quorum$1$chosenAt$0$4; quorum$1$chosenAt$0$5; quorum$1$member$1$0 | quorum$0$member$1$2; quorum$0$member$1$3; quorum$1$chosenAt$0$0; quorum$1$chosenAt$0$1; quorum$1$member$1$1 | quorum$0$member$1$4; quorum$0$member$1$5; quorum$1$chosenAt$0$2; quorum$1$chosenAt$0$3; quorum$1$member$1$2, EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')): proposer$1$chosenAt$1$0; proposer$1$chosenAt$1$2; proposer$1$chosenAt$1$4 | proposer$1$chosenAt$1$1; proposer$1$chosenAt$1$3; proposer$1$chosenAt$1$5 | proposer$1$start$0$0, EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')): acceptor$0$member$0$0; acceptor$0$member$0$3; acceptor$1$didNotPromise$0$1; acceptor$1$member$0$2 | acceptor$0$member$0$1; acceptor$0$member$0$5; acceptor$1$didNotPromise$0$2; acceptor$1$member$0$1 | acceptor$0$member$0$2; acceptor$0$member$0$4; acceptor$1$didNotPromise$0$0; acceptor$1$member$0$0}

	sort: quorum

	identical_classes: {'quorum$0$member$1; quorum$0$member$1; quorum$1$chosenAt$0; quorum$1$chosenAt$0; quorum$1$member$1': [quorum$0$member$1$0; quorum$0$member$1$1; quorum$1$chosenAt$0$4; quorum$1$chosenAt$0$5; quorum$1$member$1$0, quorum$0$member$1$2; quorum$0$member$1$3; quorum$1$chosenAt$0$0; quorum$1$chosenAt$0$1; quorum$1$member$1$1, quorum$0$member$1$4; quorum$0$member$1$5; quorum$1$chosenAt$0$2; quorum$1$chosenAt$0$3; quorum$1$member$1$2]}

	identical_single_classes: {}

	identical_multi_classes: {'quorum$0$member$1; quorum$0$member$1; quorum$1$chosenAt$0; quorum$1$chosenAt$0; quorum$1$member$1': [quorum$0$member$1$0, quorum$0$member$1$1, quorum$1$chosenAt$0$4, quorum$1$chosenAt$0$5, quorum$1$member$1$0, quorum$0$member$1$2, quorum$0$member$1$3, quorum$1$chosenAt$0$0, quorum$1$chosenAt$0$1, quorum$1$member$1$1, quorum$0$member$1$4, quorum$0$member$1$5, quorum$1$chosenAt$0$2, quorum$1$chosenAt$0$3, quorum$1$member$1$2]}

	sort: proposer

	identical_classes: {'proposer$1$chosenAt$1; proposer$1$chosenAt$1; proposer$1$chosenAt$1': [proposer$1$chosenAt$1$0; proposer$1$chosenAt$1$2; proposer$1$chosenAt$1$4, proposer$1$chosenAt$1$1; proposer$1$chosenAt$1$3; proposer$1$chosenAt$1$5], 'proposer$1$start$0': [proposer$1$start$0$0]}

	identical_single_classes: {'proposer$1$start$0': proposer$1$start$0$0}

	identical_multi_classes: {'proposer$1$chosenAt$1; proposer$1$chosenAt$1; proposer$1$chosenAt$1': [proposer$1$chosenAt$1$0, proposer$1$chosenAt$1$2, proposer$1$chosenAt$1$4, proposer$1$chosenAt$1$1, proposer$1$chosenAt$1$3, proposer$1$chosenAt$1$5]}

	sort: acceptor

	identical_classes: {'acceptor$0$member$0; acceptor$0$member$0; acceptor$1$didNotPromise$0; acceptor$1$member$0': [acceptor$0$member$0$0; acceptor$0$member$0$3; acceptor$1$didNotPromise$0$1; acceptor$1$member$0$2, acceptor$0$member$0$1; acceptor$0$member$0$5; acceptor$1$didNotPromise$0$2; acceptor$1$member$0$1, acceptor$0$member$0$2; acceptor$0$member$0$4; acceptor$1$didNotPromise$0$0; acceptor$1$member$0$0]}

	identical_single_classes: {}

	identical_multi_classes: {'acceptor$0$member$0; acceptor$0$member$0; acceptor$1$didNotPromise$0; acceptor$1$member$0': [acceptor$0$member$0$0, acceptor$0$member$0$3, acceptor$1$didNotPromise$0$1, acceptor$1$member$0$2, acceptor$0$member$0$1, acceptor$0$member$0$5, acceptor$1$didNotPromise$0$2, acceptor$1$member$0$1, acceptor$0$member$0$2, acceptor$0$member$0$4, acceptor$1$didNotPromise$0$0, acceptor$1$member$0$0]}


---------- QInference: _set_sort_to_quantifier_mode ----------

quantifier mode: quorum: QuantifierMode.forall

quantifier mode: proposer: QuantifierMode.forall_exists

quantifier mode: acceptor: QuantifierMode.forall


---------- QInference: _set_constraint_mode ----------

constraint mode: ConstraintMode.no_merge


---------- QFormula: _set_qvars ----------

forall_qvars: {Var('PROPOSER1', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))), Var('QUORUM2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), Var('ACCEPTOR1', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Var('QUORUM0', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), Var('ACCEPTOR2', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Var('ACCEPTOR0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Var('QUORUM1', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')))}

exists_qvars: {Var('PROPOSER0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))}


---------- QFormula: _set_signed_func_name_to_args ----------

signed_func_name2args: {'1$chosenAt': [[Var('QUORUM1', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), Var('PROPOSER0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))], [Var('QUORUM1', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), Var('PROPOSER0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))], [Var('QUORUM2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), Var('PROPOSER0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))], [Var('QUORUM2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), Var('PROPOSER0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))], [Var('QUORUM0', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), Var('PROPOSER0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))], [Var('QUORUM0', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), Var('PROPOSER0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))]], '1$didNotPromise': [[Var('ACCEPTOR2', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')))], [Var('ACCEPTOR0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')))], [Var('ACCEPTOR1', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')))]], '1$start': [[Var('PROPOSER1', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))]], '1$member': [[Var('ACCEPTOR2', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Var('QUORUM0', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')))], [Var('ACCEPTOR1', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Var('QUORUM1', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')))], [Var('ACCEPTOR0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Var('QUORUM2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')))]], '0$member': [[Var('ACCEPTOR0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Var('QUORUM0', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')))], [Var('ACCEPTOR1', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Var('QUORUM0', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')))], [Var('ACCEPTOR2', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Var('QUORUM1', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')))], [Var('ACCEPTOR0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Var('QUORUM1', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')))], [Var('ACCEPTOR2', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Var('QUORUM2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')))], [Var('ACCEPTOR1', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Var('QUORUM2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')))]]}


---------- QFormula: _set_qterms ----------

qterms: ['~didNotPromise(ACCEPTOR2)', 'member(ACCEPTOR2,QUORUM1)', '~chosenAt(QUORUM2,PROPOSER0)', '~member(ACCEPTOR0,QUORUM2)', '~didNotPromise(ACCEPTOR0)', 'member(ACCEPTOR0,QUORUM1)', '~didNotPromise(ACCEPTOR1)', 'member(ACCEPTOR1,QUORUM2)', 'member(ACCEPTOR0,QUORUM0)', '~start(PROPOSER1)', '~member(ACCEPTOR1,QUORUM1)', 'member(ACCEPTOR1,QUORUM0)', '~chosenAt(QUORUM1,PROPOSER0)', 'member(ACCEPTOR2,QUORUM2)', '~chosenAt(QUORUM0,PROPOSER0)', '~member(ACCEPTOR2,QUORUM0)']


---------- QFormula: get_qclause ----------

qclause: forall QUORUM1,PROPOSER1,ACCEPTOR1,QUORUM2,QUORUM0,ACCEPTOR2,ACCEPTOR0. didNotPromise(ACCEPTOR2) | ~member(ACCEPTOR2,QUORUM1) | member(ACCEPTOR0,QUORUM2) | didNotPromise(ACCEPTOR0) | ~member(ACCEPTOR0,QUORUM1) | didNotPromise(ACCEPTOR1) | ~member(ACCEPTOR1,QUORUM2) | ~member(ACCEPTOR0,QUORUM0) | start(PROPOSER1) | member(ACCEPTOR1,QUORUM1) | ~member(ACCEPTOR1,QUORUM0) | ~member(ACCEPTOR2,QUORUM2) | member(ACCEPTOR2,QUORUM0) | (exists PROPOSER0. ((chosenAt(QUORUM2,PROPOSER0) | chosenAt(QUORUM1,PROPOSER0) | chosenAt(QUORUM0,PROPOSER0)) & PROPOSER0 ~= PROPOSER1)) | (QUORUM1 = QUORUM2 | ACCEPTOR1 = ACCEPTOR2 | ACCEPTOR0 = ACCEPTOR1 | QUORUM0 = QUORUM1 | QUORUM0 = QUORUM2 | ACCEPTOR0 = ACCEPTOR2)


=======================================================================================================================

	[QI RESULT]: Quantified Prime Orbits on [ivybench/sym_quorum/ivy/simple-election: acceptor=3,proposer=3]

=======================================================================================================================


=== Prime Orbit 6 =====================
size : 9
num_suborbits: 1
87 (*) : ---------------------1-1---
87     : ['promise(acceptor2,proposer0)', 'promise(acceptor2,proposer2)']
88     : ---------------------11----
88     : ['promise(acceptor2,proposer0)', 'promise(acceptor2,proposer1)']
89     : ----------------------11---
89     : ['promise(acceptor2,proposer1)', 'promise(acceptor2,proposer2)']
90     : ------------------1-1------
90     : ['promise(acceptor1,proposer0)', 'promise(acceptor1,proposer2)']
91     : ------------------11-------
91     : ['promise(acceptor1,proposer0)', 'promise(acceptor1,proposer1)']
92     : -------------------11------
92     : ['promise(acceptor1,proposer1)', 'promise(acceptor1,proposer2)']
93     : ---------------1-1---------
93     : ['promise(acceptor0,proposer0)', 'promise(acceptor0,proposer2)']
94     : ---------------11----------
94     : ['promise(acceptor0,proposer0)', 'promise(acceptor0,proposer1)']
95     : ----------------11---------
95     : ['promise(acceptor0,proposer1)', 'promise(acceptor0,proposer2)']
num_forall :   3
num_exists :   0
num_literals : 3
quantified form : forall PROPOSER1,ACCEPTOR0,PROPOSER0. ~promise(ACCEPTOR0,PROPOSER0) | ~promise(ACCEPTOR0,PROPOSER1) | PROPOSER0 = PROPOSER1
qcost : 6




=== Prime Orbit 0 =====================
size : 18
num_suborbits: 1
0 (*) : 1------------1-------------
0     : ['chosenAt(quorum__acceptor0_acceptor1,proposer0)', 'leader(proposer1)']
1     : 1-------------1------------
1     : ['chosenAt(quorum__acceptor0_acceptor1,proposer0)', 'leader(proposer2)']
2     : -1----------1--------------
2     : ['chosenAt(quorum__acceptor0_acceptor1,proposer1)', 'leader(proposer0)']
3     : -1------------1------------
3     : ['chosenAt(quorum__acceptor0_acceptor1,proposer1)', 'leader(proposer2)']
4     : --1---------1--------------
4     : ['chosenAt(quorum__acceptor0_acceptor1,proposer2)', 'leader(proposer0)']
5     : --1----------1-------------
5     : ['chosenAt(quorum__acceptor0_acceptor1,proposer2)', 'leader(proposer1)']
6     : ---1---------1-------------
6     : ['chosenAt(quorum__acceptor0_acceptor2,proposer0)', 'leader(proposer1)']
7     : ---1----------1------------
7     : ['chosenAt(quorum__acceptor0_acceptor2,proposer0)', 'leader(proposer2)']
8     : ----1-------1--------------
8     : ['chosenAt(quorum__acceptor0_acceptor2,proposer1)', 'leader(proposer0)']
9     : ----1---------1------------
9     : ['chosenAt(quorum__acceptor0_acceptor2,proposer1)', 'leader(proposer2)']
10     : -----1------1--------------
10     : ['chosenAt(quorum__acceptor0_acceptor2,proposer2)', 'leader(proposer0)']
11     : -----1-------1-------------
11     : ['chosenAt(quorum__acceptor0_acceptor2,proposer2)', 'leader(proposer1)']
12     : ------1------1-------------
12     : ['chosenAt(quorum__acceptor1_acceptor2,proposer0)', 'leader(proposer1)']
13     : ------1-------1------------
13     : ['chosenAt(quorum__acceptor1_acceptor2,proposer0)', 'leader(proposer2)']
14     : -------1----1--------------
14     : ['chosenAt(quorum__acceptor1_acceptor2,proposer1)', 'leader(proposer0)']
15     : -------1------1------------
15     : ['chosenAt(quorum__acceptor1_acceptor2,proposer1)', 'leader(proposer2)']
16     : --------1---1--------------
16     : ['chosenAt(quorum__acceptor1_acceptor2,proposer2)', 'leader(proposer0)']
17     : --------1----1-------------
17     : ['chosenAt(quorum__acceptor1_acceptor2,proposer2)', 'leader(proposer1)']
num_forall :   3
num_exists :   0
num_literals : 3
quantified form : forall PROPOSER1,PROPOSER0,QUORUM0. ~leader(PROPOSER1) | ~chosenAt(QUORUM0,PROPOSER0) | PROPOSER0 = PROPOSER1
qcost : 6




=== Prime Orbit 1 =====================
size : 3
num_suborbits: 1
18 (*) : ------------11-------------
18     : ['leader(proposer0)', 'leader(proposer1)']
19     : ------------1-1------------
19     : ['leader(proposer0)', 'leader(proposer2)']
20     : -------------11------------
20     : ['leader(proposer1)', 'leader(proposer2)']
num_forall :   2
num_exists :   0
num_literals : 3
quantified form : forall PROPOSER1,PROPOSER0. ~leader(PROPOSER1) | ~leader(PROPOSER0) | PROPOSER0 = PROPOSER1
qcost : 5




=== Prime Orbit 2 =====================
size : 3
num_suborbits: 1
21 (*) : -------------1-----------0-
21     : ['leader(proposer1)', '~start(proposer1)']
22     : --------------1-----------0
22     : ['leader(proposer2)', '~start(proposer2)']
23     : ------------1-----------0--
23     : ['leader(proposer0)', '~start(proposer0)']
num_forall :   1
num_exists :   0
num_literals : 2
quantified form : forall PROPOSER0. start(PROPOSER0) | ~leader(PROPOSER0)
qcost : 3




=== Prime Orbit 8 =====================
size : 9
num_suborbits: 1
114 (*) : -----------------------1--0
114     : ['promise(acceptor2,proposer2)', '~start(proposer2)']
115     : ----------------------1--0-
115     : ['promise(acceptor2,proposer1)', '~start(proposer1)']
116     : ---------------------1--0--
116     : ['promise(acceptor2,proposer0)', '~start(proposer0)']
117     : --------------------1-----0
117     : ['promise(acceptor1,proposer2)', '~start(proposer2)']
118     : -------------------1-----0-
118     : ['promise(acceptor1,proposer1)', '~start(proposer1)']
119     : ------------------1-----0--
119     : ['promise(acceptor1,proposer0)', '~start(proposer0)']
120     : -----------------1--------0
120     : ['promise(acceptor0,proposer2)', '~start(proposer2)']
121     : ----------------1--------0-
121     : ['promise(acceptor0,proposer1)', '~start(proposer1)']
122     : ---------------1--------0--
122     : ['promise(acceptor0,proposer0)', '~start(proposer0)']
num_forall :   2
num_exists :   0
num_literals : 2
quantified form : forall ACCEPTOR0,PROPOSER0. ~promise(ACCEPTOR0,PROPOSER0) | start(PROPOSER0)
qcost : 4




=== Prime Orbit 9 =====================
size : 9
num_suborbits: 1
123 (*) : ------1-----------------0--
123     : ['chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~start(proposer0)']
124     : -------1-----------------0-
124     : ['chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~start(proposer1)']
125     : --------1-----------------0
125     : ['chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~start(proposer2)']
126     : ---1--------------------0--
126     : ['chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~start(proposer0)']
127     : ----1--------------------0-
127     : ['chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~start(proposer1)']
128     : -----1--------------------0
128     : ['chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~start(proposer2)']
129     : 1-----------------------0--
129     : ['chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~start(proposer0)']
130     : -1-----------------------0-
130     : ['chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~start(proposer1)']
131     : --1-----------------------0
131     : ['chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~start(proposer2)']
num_forall :   2
num_exists :   0
num_literals : 2
quantified form : forall PROPOSER0,QUORUM0. ~chosenAt(QUORUM0,PROPOSER0) | start(PROPOSER0)
qcost : 4




=== Prime Orbit 14 =====================
size : 18
num_suborbits: 1
195 (*) : --------0-----11-----------
195     : ['leader(proposer2)', 'promise(acceptor0,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)']
196     : -------0-----1-1-----------
196     : ['leader(proposer1)', 'promise(acceptor0,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)']
197     : --------0-----1-1----------
197     : ['leader(proposer2)', 'promise(acceptor0,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)']
198     : ------0-----1---1----------
198     : ['leader(proposer0)', 'promise(acceptor0,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)']
199     : -------0-----1---1---------
199     : ['leader(proposer1)', 'promise(acceptor0,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)']
200     : ------0-----1----1---------
200     : ['leader(proposer0)', 'promise(acceptor0,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)']
201     : -----0--------1---1--------
201     : ['leader(proposer2)', 'promise(acceptor1,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)']
202     : ----0--------1----1--------
202     : ['leader(proposer1)', 'promise(acceptor1,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)']
203     : -----0--------1----1-------
203     : ['leader(proposer2)', 'promise(acceptor1,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)']
204     : ---0--------1------1-------
204     : ['leader(proposer0)', 'promise(acceptor1,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)']
205     : ----0--------1------1------
205     : ['leader(proposer1)', 'promise(acceptor1,proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)']
206     : ---0--------1-------1------
206     : ['leader(proposer0)', 'promise(acceptor1,proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)']
207     : --0-----------1------1-----
207     : ['leader(proposer2)', 'promise(acceptor2,proposer0)', '~chosenAt(quorum__acceptor0_acceptor1,proposer2)']
208     : -0-----------1-------1-----
208     : ['leader(proposer1)', 'promise(acceptor2,proposer0)', '~chosenAt(quorum__acceptor0_acceptor1,proposer1)']
209     : --0-----------1-------1----
209     : ['leader(proposer2)', 'promise(acceptor2,proposer1)', '~chosenAt(quorum__acceptor0_acceptor1,proposer2)']
210     : 0-----------1---------1----
210     : ['leader(proposer0)', 'promise(acceptor2,proposer1)', '~chosenAt(quorum__acceptor0_acceptor1,proposer0)']
211     : -0-----------1---------1---
211     : ['leader(proposer1)', 'promise(acceptor2,proposer2)', '~chosenAt(quorum__acceptor0_acceptor1,proposer1)']
212     : 0-----------1----------1---
212     : ['leader(proposer0)', 'promise(acceptor2,proposer2)', '~chosenAt(quorum__acceptor0_acceptor1,proposer0)']
num_forall :   4
num_exists :   0
num_literals : 5
quantified form : forall PROPOSER1,ACCEPTOR0,PROPOSER0,QUORUM0. member(ACCEPTOR0,QUORUM0) | ~promise(ACCEPTOR0,PROPOSER1) | ~leader(PROPOSER0) | chosenAt(QUORUM0,PROPOSER0) | PROPOSER0 = PROPOSER1
qcost : 9




=== Prime Orbit 15 =====================
size : 36
num_suborbits: 1
213 (*) : --------------11----0------
213     : ['leader(proposer2)', 'promise(acceptor0,proposer0)', '~promise(acceptor1,proposer2)']
214     : -------------1-1---0-------
214     : ['leader(proposer1)', 'promise(acceptor0,proposer0)', '~promise(acceptor1,proposer1)']
215     : --------------1-1---0------
215     : ['leader(proposer2)', 'promise(acceptor0,proposer1)', '~promise(acceptor1,proposer2)']
216     : ------------1---1-0--------
216     : ['leader(proposer0)', 'promise(acceptor0,proposer1)', '~promise(acceptor1,proposer0)']
217     : -------------1---1-0-------
217     : ['leader(proposer1)', 'promise(acceptor0,proposer2)', '~promise(acceptor1,proposer1)']
218     : ------------1----10--------
218     : ['leader(proposer0)', 'promise(acceptor0,proposer2)', '~promise(acceptor1,proposer0)']
219     : --------------11-------0---
219     : ['leader(proposer2)', 'promise(acceptor0,proposer0)', '~promise(acceptor2,proposer2)']
220     : -------------1-1------0----
220     : ['leader(proposer1)', 'promise(acceptor0,proposer0)', '~promise(acceptor2,proposer1)']
221     : --------------1-1------0---
221     : ['leader(proposer2)', 'promise(acceptor0,proposer1)', '~promise(acceptor2,proposer2)']
222     : ------------1---1----0-----
222     : ['leader(proposer0)', 'promise(acceptor0,proposer1)', '~promise(acceptor2,proposer0)']
223     : -------------1---1----0----
223     : ['leader(proposer1)', 'promise(acceptor0,proposer2)', '~promise(acceptor2,proposer1)']
224     : ------------1----1---0-----
224     : ['leader(proposer0)', 'promise(acceptor0,proposer2)', '~promise(acceptor2,proposer0)']
225     : --------------1--01--------
225     : ['leader(proposer2)', 'promise(acceptor1,proposer0)', '~promise(acceptor0,proposer2)']
226     : -------------1--0-1--------
226     : ['leader(proposer1)', 'promise(acceptor1,proposer0)', '~promise(acceptor0,proposer1)']
227     : --------------1--0-1-------
227     : ['leader(proposer2)', 'promise(acceptor1,proposer1)', '~promise(acceptor0,proposer2)']
228     : ------------1--0---1-------
228     : ['leader(proposer0)', 'promise(acceptor1,proposer1)', '~promise(acceptor0,proposer0)']
229     : -------------1--0---1------
229     : ['leader(proposer1)', 'promise(acceptor1,proposer2)', '~promise(acceptor0,proposer1)']
230     : ------------1--0----1------
230     : ['leader(proposer0)', 'promise(acceptor1,proposer2)', '~promise(acceptor0,proposer0)']
231     : --------------1---1----0---
231     : ['leader(proposer2)', 'promise(acceptor1,proposer0)', '~promise(acceptor2,proposer2)']
232     : -------------1----1---0----
232     : ['leader(proposer1)', 'promise(acceptor1,proposer0)', '~promise(acceptor2,proposer1)']
233     : --------------1----1---0---
233     : ['leader(proposer2)', 'promise(acceptor1,proposer1)', '~promise(acceptor2,proposer2)']
234     : ------------1------1-0-----
234     : ['leader(proposer0)', 'promise(acceptor1,proposer1)', '~promise(acceptor2,proposer0)']
235     : -------------1------1-0----
235     : ['leader(proposer1)', 'promise(acceptor1,proposer2)', '~promise(acceptor2,proposer1)']
236     : ------------1-------10-----
236     : ['leader(proposer0)', 'promise(acceptor1,proposer2)', '~promise(acceptor2,proposer0)']
237     : --------------1--0---1-----
237     : ['leader(proposer2)', 'promise(acceptor2,proposer0)', '~promise(acceptor0,proposer2)']
238     : -------------1--0----1-----
238     : ['leader(proposer1)', 'promise(acceptor2,proposer0)', '~promise(acceptor0,proposer1)']
239     : --------------1--0----1----
239     : ['leader(proposer2)', 'promise(acceptor2,proposer1)', '~promise(acceptor0,proposer2)']
240     : ------------1--0------1----
240     : ['leader(proposer0)', 'promise(acceptor2,proposer1)', '~promise(acceptor0,proposer0)']
241     : -------------1--0------1---
241     : ['leader(proposer1)', 'promise(acceptor2,proposer2)', '~promise(acceptor0,proposer1)']
242     : ------------1--0-------1---
242     : ['leader(proposer0)', 'promise(acceptor2,proposer2)', '~promise(acceptor0,proposer0)']
243     : --------------1-----01-----
243     : ['leader(proposer2)', 'promise(acceptor2,proposer0)', '~promise(acceptor1,proposer2)']
244     : -------------1-----0-1-----
244     : ['leader(proposer1)', 'promise(acceptor2,proposer0)', '~promise(acceptor1,proposer1)']
245     : --------------1-----0-1----
245     : ['leader(proposer2)', 'promise(acceptor2,proposer1)', '~promise(acceptor1,proposer2)']
246     : ------------1-----0---1----
246     : ['leader(proposer0)', 'promise(acceptor2,proposer1)', '~promise(acceptor1,proposer0)']
247     : -------------1-----0---1---
247     : ['leader(proposer1)', 'promise(acceptor2,proposer2)', '~promise(acceptor1,proposer1)']
248     : ------------1-----0----1---
248     : ['leader(proposer0)', 'promise(acceptor2,proposer2)', '~promise(acceptor1,proposer0)']
num_forall :   4
num_exists :   0
num_literals : 5
quantified form : forall PROPOSER1,ACCEPTOR0,ACCEPTOR1,PROPOSER0. ~promise(ACCEPTOR0,PROPOSER1) | ~leader(PROPOSER0) | promise(ACCEPTOR1,PROPOSER0) | (PROPOSER0 = PROPOSER1 | ACCEPTOR0 = ACCEPTOR1)
qcost : 9




=== Prime Orbit 16 =====================
size : 36
num_suborbits: 2
249 (*) : --------------11---1-------
249     : ['leader(proposer2)', 'promise(acceptor0,proposer0)', 'promise(acceptor1,proposer1)']
250     : -------------1-1----1------
250     : ['leader(proposer1)', 'promise(acceptor0,proposer0)', 'promise(acceptor1,proposer2)']
251     : --------------1-1-1--------
251     : ['leader(proposer2)', 'promise(acceptor0,proposer1)', 'promise(acceptor1,proposer0)']
252     : ------------1---1---1------
252     : ['leader(proposer0)', 'promise(acceptor0,proposer1)', 'promise(acceptor1,proposer2)']
253     : -------------1---11--------
253     : ['leader(proposer1)', 'promise(acceptor0,proposer2)', 'promise(acceptor1,proposer0)']
254     : ------------1----1-1-------
254     : ['leader(proposer0)', 'promise(acceptor0,proposer2)', 'promise(acceptor1,proposer1)']
255     : --------------11------1----
255     : ['leader(proposer2)', 'promise(acceptor0,proposer0)', 'promise(acceptor2,proposer1)']
256     : -------------1-1-------1---
256     : ['leader(proposer1)', 'promise(acceptor0,proposer0)', 'promise(acceptor2,proposer2)']
257     : --------------1-1----1-----
257     : ['leader(proposer2)', 'promise(acceptor0,proposer1)', 'promise(acceptor2,proposer0)']
258     : ------------1---1------1---
258     : ['leader(proposer0)', 'promise(acceptor0,proposer1)', 'promise(acceptor2,proposer2)']
259     : -------------1---1---1-----
259     : ['leader(proposer1)', 'promise(acceptor0,proposer2)', 'promise(acceptor2,proposer0)']
260     : ------------1----1----1----
260     : ['leader(proposer0)', 'promise(acceptor0,proposer2)', 'promise(acceptor2,proposer1)']
261     : --------------1---1---1----
261     : ['leader(proposer2)', 'promise(acceptor1,proposer0)', 'promise(acceptor2,proposer1)']
262     : -------------1----1----1---
262     : ['leader(proposer1)', 'promise(acceptor1,proposer0)', 'promise(acceptor2,proposer2)']
263     : --------------1----1-1-----
263     : ['leader(proposer2)', 'promise(acceptor1,proposer1)', 'promise(acceptor2,proposer0)']
264     : ------------1------1---1---
264     : ['leader(proposer0)', 'promise(acceptor1,proposer1)', 'promise(acceptor2,proposer2)']
265     : -------------1------11-----
265     : ['leader(proposer1)', 'promise(acceptor1,proposer2)', 'promise(acceptor2,proposer0)']
266     : ------------1-------1-1----
266     : ['leader(proposer0)', 'promise(acceptor1,proposer2)', 'promise(acceptor2,proposer1)']
267 (*) : --------------11--1--------
267     : ['leader(proposer2)', 'promise(acceptor0,proposer0)', 'promise(acceptor1,proposer0)']
268     : -------------1-1--1--------
268     : ['leader(proposer1)', 'promise(acceptor0,proposer0)', 'promise(acceptor1,proposer0)']
269     : --------------1-1--1-------
269     : ['leader(proposer2)', 'promise(acceptor0,proposer1)', 'promise(acceptor1,proposer1)']
270     : ------------1---1--1-------
270     : ['leader(proposer0)', 'promise(acceptor0,proposer1)', 'promise(acceptor1,proposer1)']
271     : -------------1---1--1------
271     : ['leader(proposer1)', 'promise(acceptor0,proposer2)', 'promise(acceptor1,proposer2)']
272     : ------------1----1--1------
272     : ['leader(proposer0)', 'promise(acceptor0,proposer2)', 'promise(acceptor1,proposer2)']
273     : --------------11-----1-----
273     : ['leader(proposer2)', 'promise(acceptor0,proposer0)', 'promise(acceptor2,proposer0)']
274     : -------------1-1-----1-----
274     : ['leader(proposer1)', 'promise(acceptor0,proposer0)', 'promise(acceptor2,proposer0)']
275     : --------------1-1-----1----
275     : ['leader(proposer2)', 'promise(acceptor0,proposer1)', 'promise(acceptor2,proposer1)']
276     : ------------1---1-----1----
276     : ['leader(proposer0)', 'promise(acceptor0,proposer1)', 'promise(acceptor2,proposer1)']
277     : -------------1---1-----1---
277     : ['leader(proposer1)', 'promise(acceptor0,proposer2)', 'promise(acceptor2,proposer2)']
278     : ------------1----1-----1---
278     : ['leader(proposer0)', 'promise(acceptor0,proposer2)', 'promise(acceptor2,proposer2)']
279     : --------------1---1--1-----
279     : ['leader(proposer2)', 'promise(acceptor1,proposer0)', 'promise(acceptor2,proposer0)']
280     : -------------1----1--1-----
280     : ['leader(proposer1)', 'promise(acceptor1,proposer0)', 'promise(acceptor2,proposer0)']
281     : --------------1----1--1----
281     : ['leader(proposer2)', 'promise(acceptor1,proposer1)', 'promise(acceptor2,proposer1)']
282     : ------------1------1--1----
282     : ['leader(proposer0)', 'promise(acceptor1,proposer1)', 'promise(acceptor2,proposer1)']
283     : -------------1------1--1---
283     : ['leader(proposer1)', 'promise(acceptor1,proposer2)', 'promise(acceptor2,proposer2)']
284     : ------------1-------1--1---
284     : ['leader(proposer0)', 'promise(acceptor1,proposer2)', 'promise(acceptor2,proposer2)']
num_forall :   5
num_exists :   0
num_literals : 10
quantified form : forall PROPOSER0,PROPOSER1,PROPOSER2,ACCEPTOR1,ACCEPTOR0. ~promise(ACCEPTOR1,PROPOSER2) | ~promise(ACCEPTOR0,PROPOSER1) | ~leader(PROPOSER0) | ((ACCEPTOR0 = ACCEPTOR1 | PROPOSER1 ~= PROPOSER2 | PROPOSER0 = PROPOSER1) & (ACCEPTOR0 = ACCEPTOR1 | PROPOSER0 = PROPOSER1 | PROPOSER0 = PROPOSER2 | PROPOSER1 = PROPOSER2))
qcost : 15




=== Prime Orbit 17 =====================
size : 9
num_suborbits: 1
285 (*) : -----0--------1-----0------
285     : ['leader(proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~promise(acceptor1,proposer2)']
286     : ----0--------1-----0-------
286     : ['leader(proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~promise(acceptor1,proposer1)']
287     : ---0--------1-----0--------
287     : ['leader(proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~promise(acceptor1,proposer0)']
288     : --0-----------1--------0---
288     : ['leader(proposer2)', '~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~promise(acceptor2,proposer2)']
289     : -0-----------1--------0----
289     : ['leader(proposer1)', '~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~promise(acceptor2,proposer1)']
290     : 0-----------1--------0-----
290     : ['leader(proposer0)', '~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~promise(acceptor2,proposer0)']
291     : --------0-----1--0---------
291     : ['leader(proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~promise(acceptor0,proposer2)']
292     : -------0-----1--0----------
292     : ['leader(proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~promise(acceptor0,proposer1)']
293     : ------0-----1--0-----------
293     : ['leader(proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~promise(acceptor0,proposer0)']
num_forall :   3
num_exists :   0
num_literals : 4
quantified form : forall ACCEPTOR0,PROPOSER0,QUORUM0. promise(ACCEPTOR0,PROPOSER0) | ~leader(PROPOSER0) | member(ACCEPTOR0,QUORUM0) | chosenAt(QUORUM0,PROPOSER0)
qcost : 7




=== Prime Orbit 18 =====================
size : 9
num_suborbits: 1
294 (*) : --------------1--0--0------
294     : ['leader(proposer2)', '~promise(acceptor0,proposer2)', '~promise(acceptor1,proposer2)']
295     : -------------1--0--0-------
295     : ['leader(proposer1)', '~promise(acceptor0,proposer1)', '~promise(acceptor1,proposer1)']
296     : ------------1--0--0--------
296     : ['leader(proposer0)', '~promise(acceptor0,proposer0)', '~promise(acceptor1,proposer0)']
297     : --------------1--0-----0---
297     : ['leader(proposer2)', '~promise(acceptor0,proposer2)', '~promise(acceptor2,proposer2)']
298     : -------------1--0-----0----
298     : ['leader(proposer1)', '~promise(acceptor0,proposer1)', '~promise(acceptor2,proposer1)']
299     : ------------1--0-----0-----
299     : ['leader(proposer0)', '~promise(acceptor0,proposer0)', '~promise(acceptor2,proposer0)']
300     : --------------1-----0--0---
300     : ['leader(proposer2)', '~promise(acceptor1,proposer2)', '~promise(acceptor2,proposer2)']
301     : -------------1-----0--0----
301     : ['leader(proposer1)', '~promise(acceptor1,proposer1)', '~promise(acceptor2,proposer1)']
302     : ------------1-----0--0-----
302     : ['leader(proposer0)', '~promise(acceptor1,proposer0)', '~promise(acceptor2,proposer0)']
num_forall :   3
num_exists :   0
num_literals : 4
quantified form : forall ACCEPTOR1,ACCEPTOR0,PROPOSER0. promise(ACCEPTOR0,PROPOSER0) | ~leader(PROPOSER0) | promise(ACCEPTOR1,PROPOSER0) | ACCEPTOR0 = ACCEPTOR1
qcost : 7




=== Prime Orbit 19 =====================
size : 36
num_suborbits: 1
303 (*) : ---------1----1-------1----
303     : ['didNotPromise(acceptor0)', 'leader(proposer2)', 'promise(acceptor2,proposer1)']
304     : ---------1---1---------1---
304     : ['didNotPromise(acceptor0)', 'leader(proposer1)', 'promise(acceptor2,proposer2)']
305     : ---------1----1------1-----
305     : ['didNotPromise(acceptor0)', 'leader(proposer2)', 'promise(acceptor2,proposer0)']
306     : ---------1--1----------1---
306     : ['didNotPromise(acceptor0)', 'leader(proposer0)', 'promise(acceptor2,proposer2)']
307     : ---------1---1-------1-----
307     : ['didNotPromise(acceptor0)', 'leader(proposer1)', 'promise(acceptor2,proposer0)']
308     : ---------1--1---------1----
308     : ['didNotPromise(acceptor0)', 'leader(proposer0)', 'promise(acceptor2,proposer1)']
309     : ---------1----1----1-------
309     : ['didNotPromise(acceptor0)', 'leader(proposer2)', 'promise(acceptor1,proposer1)']
310     : ---------1---1------1------
310     : ['didNotPromise(acceptor0)', 'leader(proposer1)', 'promise(acceptor1,proposer2)']
311     : ---------1----1---1--------
311     : ['didNotPromise(acceptor0)', 'leader(proposer2)', 'promise(acceptor1,proposer0)']
312     : ---------1--1-------1------
312     : ['didNotPromise(acceptor0)', 'leader(proposer0)', 'promise(acceptor1,proposer2)']
313     : ---------1---1----1--------
313     : ['didNotPromise(acceptor0)', 'leader(proposer1)', 'promise(acceptor1,proposer0)']
314     : ---------1--1------1-------
314     : ['didNotPromise(acceptor0)', 'leader(proposer0)', 'promise(acceptor1,proposer1)']
315     : ----------1---1-------1----
315     : ['didNotPromise(acceptor1)', 'leader(proposer2)', 'promise(acceptor2,proposer1)']
316     : ----------1--1---------1---
316     : ['didNotPromise(acceptor1)', 'leader(proposer1)', 'promise(acceptor2,proposer2)']
317     : ----------1---1------1-----
317     : ['didNotPromise(acceptor1)', 'leader(proposer2)', 'promise(acceptor2,proposer0)']
318     : ----------1-1----------1---
318     : ['didNotPromise(acceptor1)', 'leader(proposer0)', 'promise(acceptor2,proposer2)']
319     : ----------1--1-------1-----
319     : ['didNotPromise(acceptor1)', 'leader(proposer1)', 'promise(acceptor2,proposer0)']
320     : ----------1-1---------1----
320     : ['didNotPromise(acceptor1)', 'leader(proposer0)', 'promise(acceptor2,proposer1)']
321     : ----------1---1-1----------
321     : ['didNotPromise(acceptor1)', 'leader(proposer2)', 'promise(acceptor0,proposer1)']
322     : ----------1--1---1---------
322     : ['didNotPromise(acceptor1)', 'leader(proposer1)', 'promise(acceptor0,proposer2)']
323     : ----------1---11-----------
323     : ['didNotPromise(acceptor1)', 'leader(proposer2)', 'promise(acceptor0,proposer0)']
324     : ----------1-1----1---------
324     : ['didNotPromise(acceptor1)', 'leader(proposer0)', 'promise(acceptor0,proposer2)']
325     : ----------1--1-1-----------
325     : ['didNotPromise(acceptor1)', 'leader(proposer1)', 'promise(acceptor0,proposer0)']
326     : ----------1-1---1----------
326     : ['didNotPromise(acceptor1)', 'leader(proposer0)', 'promise(acceptor0,proposer1)']
327     : -----------1--1----1-------
327     : ['didNotPromise(acceptor2)', 'leader(proposer2)', 'promise(acceptor1,proposer1)']
328     : -----------1-1------1------
328     : ['didNotPromise(acceptor2)', 'leader(proposer1)', 'promise(acceptor1,proposer2)']
329     : -----------1--1---1--------
329     : ['didNotPromise(acceptor2)', 'leader(proposer2)', 'promise(acceptor1,proposer0)']
330     : -----------11-------1------
330     : ['didNotPromise(acceptor2)', 'leader(proposer0)', 'promise(acceptor1,proposer2)']
331     : -----------1-1----1--------
331     : ['didNotPromise(acceptor2)', 'leader(proposer1)', 'promise(acceptor1,proposer0)']
332     : -----------11------1-------
332     : ['didNotPromise(acceptor2)', 'leader(proposer0)', 'promise(acceptor1,proposer1)']
333     : -----------1--1-1----------
333     : ['didNotPromise(acceptor2)', 'leader(proposer2)', 'promise(acceptor0,proposer1)']
334     : -----------1-1---1---------
334     : ['didNotPromise(acceptor2)', 'leader(proposer1)', 'promise(acceptor0,proposer2)']
335     : -----------1--11-----------
335     : ['didNotPromise(acceptor2)', 'leader(proposer2)', 'promise(acceptor0,proposer0)']
336     : -----------11----1---------
336     : ['didNotPromise(acceptor2)', 'leader(proposer0)', 'promise(acceptor0,proposer2)']
337     : -----------1-1-1-----------
337     : ['didNotPromise(acceptor2)', 'leader(proposer1)', 'promise(acceptor0,proposer0)']
338     : -----------11---1----------
338     : ['didNotPromise(acceptor2)', 'leader(proposer0)', 'promise(acceptor0,proposer1)']
num_forall :   4
num_exists :   0
num_literals : 5
quantified form : forall PROPOSER1,ACCEPTOR0,ACCEPTOR1,PROPOSER0. ~leader(PROPOSER0) | ~didNotPromise(ACCEPTOR0) | ~promise(ACCEPTOR1,PROPOSER1) | (PROPOSER0 = PROPOSER1 | ACCEPTOR0 = ACCEPTOR1)
qcost : 9




=== Prime Orbit 20 =====================
size : 18
num_suborbits: 1
339 (*) : ---------1----1-----0------
339     : ['didNotPromise(acceptor0)', 'leader(proposer2)', '~promise(acceptor1,proposer2)']
340     : ---------1---1-----0-------
340     : ['didNotPromise(acceptor0)', 'leader(proposer1)', '~promise(acceptor1,proposer1)']
341     : ---------1--1-----0--------
341     : ['didNotPromise(acceptor0)', 'leader(proposer0)', '~promise(acceptor1,proposer0)']
342     : ---------1----1--------0---
342     : ['didNotPromise(acceptor0)', 'leader(proposer2)', '~promise(acceptor2,proposer2)']
343     : ---------1---1--------0----
343     : ['didNotPromise(acceptor0)', 'leader(proposer1)', '~promise(acceptor2,proposer1)']
344     : ---------1--1--------0-----
344     : ['didNotPromise(acceptor0)', 'leader(proposer0)', '~promise(acceptor2,proposer0)']
345     : ----------1---1--0---------
345     : ['didNotPromise(acceptor1)', 'leader(proposer2)', '~promise(acceptor0,proposer2)']
346     : ----------1--1--0----------
346     : ['didNotPromise(acceptor1)', 'leader(proposer1)', '~promise(acceptor0,proposer1)']
347     : ----------1-1--0-----------
347     : ['didNotPromise(acceptor1)', 'leader(proposer0)', '~promise(acceptor0,proposer0)']
348     : ----------1---1--------0---
348     : ['didNotPromise(acceptor1)', 'leader(proposer2)', '~promise(acceptor2,proposer2)']
349     : ----------1--1--------0----
349     : ['didNotPromise(acceptor1)', 'leader(proposer1)', '~promise(acceptor2,proposer1)']
350     : ----------1-1--------0-----
350     : ['didNotPromise(acceptor1)', 'leader(proposer0)', '~promise(acceptor2,proposer0)']
351     : -----------1--1--0---------
351     : ['didNotPromise(acceptor2)', 'leader(proposer2)', '~promise(acceptor0,proposer2)']
352     : -----------1-1--0----------
352     : ['didNotPromise(acceptor2)', 'leader(proposer1)', '~promise(acceptor0,proposer1)']
353     : -----------11--0-----------
353     : ['didNotPromise(acceptor2)', 'leader(proposer0)', '~promise(acceptor0,proposer0)']
354     : -----------1--1-----0------
354     : ['didNotPromise(acceptor2)', 'leader(proposer2)', '~promise(acceptor1,proposer2)']
355     : -----------1-1-----0-------
355     : ['didNotPromise(acceptor2)', 'leader(proposer1)', '~promise(acceptor1,proposer1)']
356     : -----------11-----0--------
356     : ['didNotPromise(acceptor2)', 'leader(proposer0)', '~promise(acceptor1,proposer0)']
num_forall :   3
num_exists :   0
num_literals : 4
quantified form : forall ACCEPTOR1,ACCEPTOR0,PROPOSER0. ~leader(PROPOSER0) | ~didNotPromise(ACCEPTOR0) | promise(ACCEPTOR1,PROPOSER0) | ACCEPTOR0 = ACCEPTOR1
qcost : 7




=== Prime Orbit 21 =====================
size : 9
num_suborbits: 1
357 (*) : --------01----1------------
357     : ['didNotPromise(acceptor0)', 'leader(proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)']
358     : -------0-1---1-------------
358     : ['didNotPromise(acceptor0)', 'leader(proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)']
359     : ------0--1--1--------------
359     : ['didNotPromise(acceptor0)', 'leader(proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)']
360     : -----0----1---1------------
360     : ['didNotPromise(acceptor1)', 'leader(proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)']
361     : ----0-----1--1-------------
361     : ['didNotPromise(acceptor1)', 'leader(proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)']
362     : ---0------1-1--------------
362     : ['didNotPromise(acceptor1)', 'leader(proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)']
363     : --0--------1--1------------
363     : ['didNotPromise(acceptor2)', 'leader(proposer2)', '~chosenAt(quorum__acceptor0_acceptor1,proposer2)']
364     : -0---------1-1-------------
364     : ['didNotPromise(acceptor2)', 'leader(proposer1)', '~chosenAt(quorum__acceptor0_acceptor1,proposer1)']
365     : 0----------11--------------
365     : ['didNotPromise(acceptor2)', 'leader(proposer0)', '~chosenAt(quorum__acceptor0_acceptor1,proposer0)']
num_forall :   3
num_exists :   0
num_literals : 4
quantified form : forall ACCEPTOR0,PROPOSER0,QUORUM0. member(ACCEPTOR0,QUORUM0) | ~didNotPromise(ACCEPTOR0) | ~leader(PROPOSER0) | chosenAt(QUORUM0,PROPOSER0)
qcost : 7




=== Prime Orbit 22 =====================
size : 9
num_suborbits: 1
366 (*) : ---------11---1------------
366     : ['didNotPromise(acceptor0)', 'didNotPromise(acceptor1)', 'leader(proposer2)']
367     : ---------11--1-------------
367     : ['didNotPromise(acceptor0)', 'didNotPromise(acceptor1)', 'leader(proposer1)']
368     : ---------11-1--------------
368     : ['didNotPromise(acceptor0)', 'didNotPromise(acceptor1)', 'leader(proposer0)']
369     : ---------1-1--1------------
369     : ['didNotPromise(acceptor0)', 'didNotPromise(acceptor2)', 'leader(proposer2)']
370     : ---------1-1-1-------------
370     : ['didNotPromise(acceptor0)', 'didNotPromise(acceptor2)', 'leader(proposer1)']
371     : ---------1-11--------------
371     : ['didNotPromise(acceptor0)', 'didNotPromise(acceptor2)', 'leader(proposer0)']
372     : ----------11--1------------
372     : ['didNotPromise(acceptor1)', 'didNotPromise(acceptor2)', 'leader(proposer2)']
373     : ----------11-1-------------
373     : ['didNotPromise(acceptor1)', 'didNotPromise(acceptor2)', 'leader(proposer1)']
374     : ----------111--------------
374     : ['didNotPromise(acceptor1)', 'didNotPromise(acceptor2)', 'leader(proposer0)']
num_forall :   3
num_exists :   0
num_literals : 4
quantified form : forall ACCEPTOR1,ACCEPTOR0,PROPOSER0. ~didNotPromise(ACCEPTOR1) | ~leader(PROPOSER0) | ~didNotPromise(ACCEPTOR0) | ACCEPTOR0 = ACCEPTOR1
qcost : 7




=== Prime Orbit 23 =====================
size : 9
num_suborbits: 1
375 (*) : ----------0-------00------0
375     : ['~didNotPromise(acceptor1)', '~promise(acceptor1,proposer0)', '~promise(acceptor1,proposer1)', '~start(proposer2)']
376     : ----------0-------0-0----0-
376     : ['~didNotPromise(acceptor1)', '~promise(acceptor1,proposer0)', '~promise(acceptor1,proposer2)', '~start(proposer1)']
377     : ----------0--------00---0--
377     : ['~didNotPromise(acceptor1)', '~promise(acceptor1,proposer1)', '~promise(acceptor1,proposer2)', '~start(proposer0)']
378     : -----------0---------00---0
378     : ['~didNotPromise(acceptor2)', '~promise(acceptor2,proposer0)', '~promise(acceptor2,proposer1)', '~start(proposer2)']
379     : -----------0---------0-0-0-
379     : ['~didNotPromise(acceptor2)', '~promise(acceptor2,proposer0)', '~promise(acceptor2,proposer2)', '~start(proposer1)']
380     : -----------0----------000--
380     : ['~didNotPromise(acceptor2)', '~promise(acceptor2,proposer1)', '~promise(acceptor2,proposer2)', '~start(proposer0)']
381     : ---------0-----00---------0
381     : ['~didNotPromise(acceptor0)', '~promise(acceptor0,proposer0)', '~promise(acceptor0,proposer1)', '~start(proposer2)']
382     : ---------0-----0-0-------0-
382     : ['~didNotPromise(acceptor0)', '~promise(acceptor0,proposer0)', '~promise(acceptor0,proposer2)', '~start(proposer1)']
383     : ---------0------00------0--
383     : ['~didNotPromise(acceptor0)', '~promise(acceptor0,proposer1)', '~promise(acceptor0,proposer2)', '~start(proposer0)']
num_forall :   2
num_exists :   1
num_literals : 4
quantified form : forall PROPOSER1,ACCEPTOR0. didNotPromise(ACCEPTOR0) | start(PROPOSER1) | (exists PROPOSER0. (promise(ACCEPTOR0,PROPOSER0) & PROPOSER0 ~= PROPOSER1))
qcost : 7




=== Prime Orbit 24 =====================
size : 9
num_suborbits: 1
384 (*) : ----------0-------0------00
384     : ['~didNotPromise(acceptor1)', '~promise(acceptor1,proposer0)', '~start(proposer1)', '~start(proposer2)']
385     : ----------0--------0----0-0
385     : ['~didNotPromise(acceptor1)', '~promise(acceptor1,proposer1)', '~start(proposer0)', '~start(proposer2)']
386     : ----------0---------0---00-
386     : ['~didNotPromise(acceptor1)', '~promise(acceptor1,proposer2)', '~start(proposer0)', '~start(proposer1)']
387     : -----------0---------0---00
387     : ['~didNotPromise(acceptor2)', '~promise(acceptor2,proposer0)', '~start(proposer1)', '~start(proposer2)']
388     : -----------0----------0-0-0
388     : ['~didNotPromise(acceptor2)', '~promise(acceptor2,proposer1)', '~start(proposer0)', '~start(proposer2)']
389     : -----------0-----------000-
389     : ['~didNotPromise(acceptor2)', '~promise(acceptor2,proposer2)', '~start(proposer0)', '~start(proposer1)']
390     : ---------0-----0---------00
390     : ['~didNotPromise(acceptor0)', '~promise(acceptor0,proposer0)', '~start(proposer1)', '~start(proposer2)']
391     : ---------0------0-------0-0
391     : ['~didNotPromise(acceptor0)', '~promise(acceptor0,proposer1)', '~start(proposer0)', '~start(proposer2)']
392     : ---------0-------0------00-
392     : ['~didNotPromise(acceptor0)', '~promise(acceptor0,proposer2)', '~start(proposer0)', '~start(proposer1)']
num_forall :   2
num_exists :   1
num_literals : 4
quantified form : forall PROPOSER1,ACCEPTOR0. promise(ACCEPTOR0,PROPOSER1) | didNotPromise(ACCEPTOR0) | (exists PROPOSER0. (start(PROPOSER0) & PROPOSER0 ~= PROPOSER1))
qcost : 7




=== Prime Orbit 25 =====================
size : 9
num_suborbits: 1
393 (*) : -0--0--------1--1----------
393     : ['leader(proposer1)', 'promise(acceptor0,proposer1)', '~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)']
394     : --0--0--------1--1---------
394     : ['leader(proposer2)', 'promise(acceptor0,proposer2)', '~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)']
395     : 0--0--------1--1-----------
395     : ['leader(proposer0)', 'promise(acceptor0,proposer0)', '~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)']
396     : -0-----0-----1-----1-------
396     : ['leader(proposer1)', 'promise(acceptor1,proposer1)', '~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)']
397     : --0-----0-----1-----1------
397     : ['leader(proposer2)', 'promise(acceptor1,proposer2)', '~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)']
398     : 0-----0-----1-----1--------
398     : ['leader(proposer0)', 'promise(acceptor1,proposer0)', '~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)']
399     : ----0--0-----1--------1----
399     : ['leader(proposer1)', 'promise(acceptor2,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)']
400     : -----0--0-----1--------1---
400     : ['leader(proposer2)', 'promise(acceptor2,proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)']
401     : ---0--0-----1--------1-----
401     : ['leader(proposer0)', 'promise(acceptor2,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)']
num_forall :   4
num_exists :   0
num_literals : 7
quantified form : forall QUORUM1,ACCEPTOR0,PROPOSER0,QUORUM0. ~promise(ACCEPTOR0,PROPOSER0) | ~member(ACCEPTOR0,QUORUM1) | ~leader(PROPOSER0) | ~member(ACCEPTOR0,QUORUM0) | chosenAt(QUORUM1,PROPOSER0) | chosenAt(QUORUM0,PROPOSER0) | QUORUM0 = QUORUM1
qcost : 11




=== Prime Orbit 26 =====================
size : 3
num_suborbits: 1
402 (*) : -0--0--0-----1-------------
402     : ['leader(proposer1)', '~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)']
403     : --0--0--0-----1------------
403     : ['leader(proposer2)', '~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)']
404     : 0--0--0-----1--------------
404     : ['leader(proposer0)', '~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)']
num_forall :   1
num_exists :   1
num_literals : 2
quantified form : forall PROPOSER0. (exists QUORUM0. ~leader(PROPOSER0) | chosenAt(QUORUM0,PROPOSER0))
qcost : 4




=== Prime Orbit 28 =====================
size : 3
num_suborbits: 1
408 (*) : ---------0--------------000
408     : ['~didNotPromise(acceptor0)', '~start(proposer0)', '~start(proposer1)', '~start(proposer2)']
409     : ----------0-------------000
409     : ['~didNotPromise(acceptor1)', '~start(proposer0)', '~start(proposer1)', '~start(proposer2)']
410     : -----------0------------000
410     : ['~didNotPromise(acceptor2)', '~start(proposer0)', '~start(proposer1)', '~start(proposer2)']
num_forall :   1
num_exists :   1
num_literals : 2
quantified form : forall ACCEPTOR0. (exists PROPOSER0. didNotPromise(ACCEPTOR0) | start(PROPOSER0))
qcost : 4




=== Prime Orbit 29 =====================
size : 36
num_suborbits: 1
411 (*) : --1-----0--0---------0---0-
411     : ['chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor2)', '~promise(acceptor2,proposer0)', '~start(proposer1)']
412     : -1-----0---0---------0----0
412     : ['chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor2)', '~promise(acceptor2,proposer0)', '~start(proposer2)']
413     : --1-----0--0----------0-0--
413     : ['chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor2)', '~promise(acceptor2,proposer1)', '~start(proposer0)']
414     : 1-----0----0----------0---0
414     : ['chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor2)', '~promise(acceptor2,proposer1)', '~start(proposer2)']
415     : -1-----0---0-----------00--
415     : ['chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor2)', '~promise(acceptor2,proposer2)', '~start(proposer0)']
416     : 1-----0----0-----------0-0-
416     : ['chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor2)', '~promise(acceptor2,proposer2)', '~start(proposer1)']
417     : -----1--0-0-------0------0-
417     : ['chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor1)', '~promise(acceptor1,proposer0)', '~start(proposer1)']
418     : ----1--0--0-------0-------0
418     : ['chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor1)', '~promise(acceptor1,proposer0)', '~start(proposer2)']
419     : -----1--0-0--------0----0--
419     : ['chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor1)', '~promise(acceptor1,proposer1)', '~start(proposer0)']
420     : ---1--0---0--------0------0
420     : ['chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor1)', '~promise(acceptor1,proposer1)', '~start(proposer2)']
421     : ----1--0--0---------0---0--
421     : ['chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor1)', '~promise(acceptor1,proposer2)', '~start(proposer0)']
422     : ---1--0---0---------0----0-
422     : ['chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor1)', '~promise(acceptor1,proposer2)', '~start(proposer1)']
423     : --1--0-----0---------0---0-
423     : ['chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~didNotPromise(acceptor2)', '~promise(acceptor2,proposer0)', '~start(proposer1)']
424     : -1--0------0---------0----0
424     : ['chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~didNotPromise(acceptor2)', '~promise(acceptor2,proposer0)', '~start(proposer2)']
425     : --1--0-----0----------0-0--
425     : ['chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~didNotPromise(acceptor2)', '~promise(acceptor2,proposer1)', '~start(proposer0)']
426     : 1--0-------0----------0---0
426     : ['chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~didNotPromise(acceptor2)', '~promise(acceptor2,proposer1)', '~start(proposer2)']
427     : -1--0------0-----------00--
427     : ['chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~didNotPromise(acceptor2)', '~promise(acceptor2,proposer2)', '~start(proposer0)']
428     : 1--0-------0-----------0-0-
428     : ['chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~didNotPromise(acceptor2)', '~promise(acceptor2,proposer2)', '~start(proposer1)']
429     : -----0--10-----0---------0-
429     : ['chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~didNotPromise(acceptor0)', '~promise(acceptor0,proposer0)', '~start(proposer1)']
430     : ----0--1-0-----0----------0
430     : ['chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~didNotPromise(acceptor0)', '~promise(acceptor0,proposer0)', '~start(proposer2)']
431     : -----0--10------0-------0--
431     : ['chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~didNotPromise(acceptor0)', '~promise(acceptor0,proposer1)', '~start(proposer0)']
432     : ---0--1--0------0---------0
432     : ['chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~didNotPromise(acceptor0)', '~promise(acceptor0,proposer1)', '~start(proposer2)']
433     : ----0--1-0-------0------0--
433     : ['chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~didNotPromise(acceptor0)', '~promise(acceptor0,proposer2)', '~start(proposer0)']
434     : ---0--1--0-------0-------0-
434     : ['chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~didNotPromise(acceptor0)', '~promise(acceptor0,proposer2)', '~start(proposer1)']
435     : --0--1----0-------0------0-
435     : ['chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~didNotPromise(acceptor1)', '~promise(acceptor1,proposer0)', '~start(proposer1)']
436     : -0--1-----0-------0-------0
436     : ['chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~didNotPromise(acceptor1)', '~promise(acceptor1,proposer0)', '~start(proposer2)']
437     : --0--1----0--------0----0--
437     : ['chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~didNotPromise(acceptor1)', '~promise(acceptor1,proposer1)', '~start(proposer0)']
438     : 0--1------0--------0------0
438     : ['chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~didNotPromise(acceptor1)', '~promise(acceptor1,proposer1)', '~start(proposer2)']
439     : -0--1-----0---------0---0--
439     : ['chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~didNotPromise(acceptor1)', '~promise(acceptor1,proposer2)', '~start(proposer0)']
440     : 0--1------0---------0----0-
440     : ['chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~didNotPromise(acceptor1)', '~promise(acceptor1,proposer2)', '~start(proposer1)']
441     : --0-----10-----0---------0-
441     : ['chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~didNotPromise(acceptor0)', '~promise(acceptor0,proposer0)', '~start(proposer1)']
442     : -0-----1-0-----0----------0
442     : ['chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~didNotPromise(acceptor0)', '~promise(acceptor0,proposer0)', '~start(proposer2)']
443     : --0-----10------0-------0--
443     : ['chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~didNotPromise(acceptor0)', '~promise(acceptor0,proposer1)', '~start(proposer0)']
444     : 0-----1--0------0---------0
444     : ['chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~didNotPromise(acceptor0)', '~promise(acceptor0,proposer1)', '~start(proposer2)']
445     : -0-----1-0-------0------0--
445     : ['chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~didNotPromise(acceptor0)', '~promise(acceptor0,proposer2)', '~start(proposer0)']
446     : 0-----1--0-------0-------0-
446     : ['chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~didNotPromise(acceptor0)', '~promise(acceptor0,proposer2)', '~start(proposer1)']
num_forall :   6
num_exists :   0
num_literals : 11
quantified form : forall QUORUM1,PROPOSER0,PROPOSER1,PROPOSER2,QUORUM0,ACCEPTOR0. ~chosenAt(QUORUM0,PROPOSER0) | start(PROPOSER2) | member(ACCEPTOR0,QUORUM0) | didNotPromise(ACCEPTOR0) | ~member(ACCEPTOR0,QUORUM1) | promise(ACCEPTOR0,PROPOSER1) | chosenAt(QUORUM1,PROPOSER0) | (PROPOSER0 = PROPOSER1 | PROPOSER0 = PROPOSER2 | QUORUM0 = QUORUM1 | PROPOSER1 = PROPOSER2)
qcost : 17




=== Prime Orbit 30 =====================
size : 18
num_suborbits: 1
447 (*) : --1-----0--0------------00-
447     : ['chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor2)', '~start(proposer0)', '~start(proposer1)']
448     : -1-----0---0------------0-0
448     : ['chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor2)', '~start(proposer0)', '~start(proposer2)']
449     : 1-----0----0-------------00
449     : ['chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor2)', '~start(proposer1)', '~start(proposer2)']
450     : -----1--0-0-------------00-
450     : ['chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor1)', '~start(proposer0)', '~start(proposer1)']
451     : ----1--0--0-------------0-0
451     : ['chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor1)', '~start(proposer0)', '~start(proposer2)']
452     : ---1--0---0--------------00
452     : ['chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor1)', '~start(proposer1)', '~start(proposer2)']
453     : --1--0-----0------------00-
453     : ['chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~didNotPromise(acceptor2)', '~start(proposer0)', '~start(proposer1)']
454     : -1--0------0------------0-0
454     : ['chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~didNotPromise(acceptor2)', '~start(proposer0)', '~start(proposer2)']
455     : 1--0-------0-------------00
455     : ['chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~didNotPromise(acceptor2)', '~start(proposer1)', '~start(proposer2)']
456     : -----0--10--------------00-
456     : ['chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~didNotPromise(acceptor0)', '~start(proposer0)', '~start(proposer1)']
457     : ----0--1-0--------------0-0
457     : ['chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~didNotPromise(acceptor0)', '~start(proposer0)', '~start(proposer2)']
458     : ---0--1--0---------------00
458     : ['chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~didNotPromise(acceptor0)', '~start(proposer1)', '~start(proposer2)']
459     : --0--1----0-------------00-
459     : ['chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~didNotPromise(acceptor1)', '~start(proposer0)', '~start(proposer1)']
460     : -0--1-----0-------------0-0
460     : ['chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~didNotPromise(acceptor1)', '~start(proposer0)', '~start(proposer2)']
461     : 0--1------0--------------00
461     : ['chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~didNotPromise(acceptor1)', '~start(proposer1)', '~start(proposer2)']
462     : --0-----10--------------00-
462     : ['chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~didNotPromise(acceptor0)', '~start(proposer0)', '~start(proposer1)']
463     : -0-----1-0--------------0-0
463     : ['chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~didNotPromise(acceptor0)', '~start(proposer0)', '~start(proposer2)']
464     : 0-----1--0---------------00
464     : ['chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~didNotPromise(acceptor0)', '~start(proposer1)', '~start(proposer2)']
num_forall :   4
num_exists :   1
num_literals : 8
quantified form : forall PROPOSER1,QUORUM1,ACCEPTOR0,QUORUM0. member(ACCEPTOR0,QUORUM0) | ~chosenAt(QUORUM0,PROPOSER1) | ~member(ACCEPTOR0,QUORUM1) | didNotPromise(ACCEPTOR0) | chosenAt(QUORUM1,PROPOSER1) | (exists PROPOSER0. (start(PROPOSER0) & PROPOSER0 ~= PROPOSER1)) | QUORUM0 = QUORUM1
qcost : 13




=== Prime Orbit 32 =====================
size : 36
num_suborbits: 1
483 (*) : ----0----0-------0----1-0--
483     : ['promise(acceptor2,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~didNotPromise(acceptor0)', '~promise(acceptor0,proposer2)', '~start(proposer0)']
484     : -----0---0------0------10--
484     : ['promise(acceptor2,proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~didNotPromise(acceptor0)', '~promise(acceptor0,proposer1)', '~start(proposer0)']
485     : ---0-----0-------0---1---0-
485     : ['promise(acceptor2,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~didNotPromise(acceptor0)', '~promise(acceptor0,proposer2)', '~start(proposer1)']
486     : -----0---0-----0-------1-0-
486     : ['promise(acceptor2,proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~didNotPromise(acceptor0)', '~promise(acceptor0,proposer0)', '~start(proposer1)']
487     : ---0-----0------0----1----0
487     : ['promise(acceptor2,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~didNotPromise(acceptor0)', '~promise(acceptor0,proposer1)', '~start(proposer2)']
488     : ----0----0-----0------1---0
488     : ['promise(acceptor2,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~didNotPromise(acceptor0)', '~promise(acceptor0,proposer0)', '~start(proposer2)']
489     : -0-------0-------0-1----0--
489     : ['promise(acceptor1,proposer1)', '~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~didNotPromise(acceptor0)', '~promise(acceptor0,proposer2)', '~start(proposer0)']
490     : --0------0------0---1---0--
490     : ['promise(acceptor1,proposer2)', '~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~didNotPromise(acceptor0)', '~promise(acceptor0,proposer1)', '~start(proposer0)']
491     : 0--------0-------01------0-
491     : ['promise(acceptor1,proposer0)', '~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~didNotPromise(acceptor0)', '~promise(acceptor0,proposer2)', '~start(proposer1)']
492     : --0------0-----0----1----0-
492     : ['promise(acceptor1,proposer2)', '~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~didNotPromise(acceptor0)', '~promise(acceptor0,proposer0)', '~start(proposer1)']
493     : 0--------0------0-1-------0
493     : ['promise(acceptor1,proposer0)', '~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~didNotPromise(acceptor0)', '~promise(acceptor0,proposer1)', '~start(proposer2)']
494     : -0-------0-----0---1------0
494     : ['promise(acceptor1,proposer1)', '~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~didNotPromise(acceptor0)', '~promise(acceptor0,proposer0)', '~start(proposer2)']
495     : -------0--0---------0-1-0--
495     : ['promise(acceptor2,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor1)', '~promise(acceptor1,proposer2)', '~start(proposer0)']
496     : --------0-0--------0---10--
496     : ['promise(acceptor2,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor1)', '~promise(acceptor1,proposer1)', '~start(proposer0)']
497     : ------0---0---------01---0-
497     : ['promise(acceptor2,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor1)', '~promise(acceptor1,proposer2)', '~start(proposer1)']
498     : --------0-0-------0----1-0-
498     : ['promise(acceptor2,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor1)', '~promise(acceptor1,proposer0)', '~start(proposer1)']
499     : ------0---0--------0-1----0
499     : ['promise(acceptor2,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor1)', '~promise(acceptor1,proposer1)', '~start(proposer2)']
500     : -------0--0-------0---1---0
500     : ['promise(acceptor2,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor1)', '~promise(acceptor1,proposer0)', '~start(proposer2)']
501     : -0--------0-----1---0---0--
501     : ['promise(acceptor0,proposer1)', '~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~didNotPromise(acceptor1)', '~promise(acceptor1,proposer2)', '~start(proposer0)']
502     : --0-------0------1-0----0--
502     : ['promise(acceptor0,proposer2)', '~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~didNotPromise(acceptor1)', '~promise(acceptor1,proposer1)', '~start(proposer0)']
503     : 0---------0----1----0----0-
503     : ['promise(acceptor0,proposer0)', '~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~didNotPromise(acceptor1)', '~promise(acceptor1,proposer2)', '~start(proposer1)']
504     : --0-------0------10------0-
504     : ['promise(acceptor0,proposer2)', '~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~didNotPromise(acceptor1)', '~promise(acceptor1,proposer0)', '~start(proposer1)']
505     : 0---------0----1---0------0
505     : ['promise(acceptor0,proposer0)', '~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~didNotPromise(acceptor1)', '~promise(acceptor1,proposer1)', '~start(proposer2)']
506     : -0--------0-----1-0-------0
506     : ['promise(acceptor0,proposer1)', '~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~didNotPromise(acceptor1)', '~promise(acceptor1,proposer0)', '~start(proposer2)']
507     : -------0---0-------1---00--
507     : ['promise(acceptor1,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor2)', '~promise(acceptor2,proposer2)', '~start(proposer0)']
508     : --------0--0--------1-0-0--
508     : ['promise(acceptor1,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor2)', '~promise(acceptor2,proposer1)', '~start(proposer0)']
509     : ------0----0------1----0-0-
509     : ['promise(acceptor1,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor2)', '~promise(acceptor2,proposer2)', '~start(proposer1)']
510     : --------0--0--------10---0-
510     : ['promise(acceptor1,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor2)', '~promise(acceptor2,proposer0)', '~start(proposer1)']
511     : ------0----0------1---0---0
511     : ['promise(acceptor1,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor2)', '~promise(acceptor2,proposer1)', '~start(proposer2)']
512     : -------0---0-------1-0----0
512     : ['promise(acceptor1,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor2)', '~promise(acceptor2,proposer0)', '~start(proposer2)']
513     : ----0------0----1------00--
513     : ['promise(acceptor0,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~didNotPromise(acceptor2)', '~promise(acceptor2,proposer2)', '~start(proposer0)']
514     : -----0-----0-----1----0-0--
514     : ['promise(acceptor0,proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~didNotPromise(acceptor2)', '~promise(acceptor2,proposer1)', '~start(proposer0)']
515     : ---0-------0---1-------0-0-
515     : ['promise(acceptor0,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~didNotPromise(acceptor2)', '~promise(acceptor2,proposer2)', '~start(proposer1)']
516     : -----0-----0-----1---0---0-
516     : ['promise(acceptor0,proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~didNotPromise(acceptor2)', '~promise(acceptor2,proposer0)', '~start(proposer1)']
517     : ---0-------0---1------0---0
517     : ['promise(acceptor0,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~didNotPromise(acceptor2)', '~promise(acceptor2,proposer1)', '~start(proposer2)']
518     : ----0------0----1----0----0
518     : ['promise(acceptor0,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~didNotPromise(acceptor2)', '~promise(acceptor2,proposer0)', '~start(proposer2)']
num_forall :   6
num_exists :   0
num_literals : 11
quantified form : forall PROPOSER0,PROPOSER1,PROPOSER2,ACCEPTOR1,QUORUM0,ACCEPTOR0. start(PROPOSER2) | didNotPromise(ACCEPTOR0) | promise(ACCEPTOR0,PROPOSER1) | ~member(ACCEPTOR0,QUORUM0) | ~member(ACCEPTOR1,QUORUM0) | ~promise(ACCEPTOR1,PROPOSER0) | chosenAt(QUORUM0,PROPOSER0) | (PROPOSER0 = PROPOSER1 | PROPOSER0 = PROPOSER2 | ACCEPTOR0 = ACCEPTOR1 | PROPOSER1 = PROPOSER2)
qcost : 17




=== Prime Orbit 33 =====================
size : 18
num_suborbits: 1
519 (*) : -------0--0-----------1-0-0
519     : ['promise(acceptor2,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor1)', '~start(proposer0)', '~start(proposer2)']
520     : --------0-0------------100-
520     : ['promise(acceptor2,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor1)', '~start(proposer0)', '~start(proposer1)']
521     : ------0---0----------1---00
521     : ['promise(acceptor2,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor1)', '~start(proposer1)', '~start(proposer2)']
522     : -------0---0-------1----0-0
522     : ['promise(acceptor1,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor2)', '~start(proposer0)', '~start(proposer2)']
523     : --------0--0--------1---00-
523     : ['promise(acceptor1,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor2)', '~start(proposer0)', '~start(proposer1)']
524     : ------0----0------1------00
524     : ['promise(acceptor1,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor2)', '~start(proposer1)', '~start(proposer2)']
525     : ----0----0------------1-0-0
525     : ['promise(acceptor2,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~didNotPromise(acceptor0)', '~start(proposer0)', '~start(proposer2)']
526     : -----0---0-------------100-
526     : ['promise(acceptor2,proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~didNotPromise(acceptor0)', '~start(proposer0)', '~start(proposer1)']
527     : ---0-----0-----------1---00
527     : ['promise(acceptor2,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~didNotPromise(acceptor0)', '~start(proposer1)', '~start(proposer2)']
528     : ----0------0----1-------0-0
528     : ['promise(acceptor0,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~didNotPromise(acceptor2)', '~start(proposer0)', '~start(proposer2)']
529     : -----0-----0-----1------00-
529     : ['promise(acceptor0,proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~didNotPromise(acceptor2)', '~start(proposer0)', '~start(proposer1)']
530     : ---0-------0---1---------00
530     : ['promise(acceptor0,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~didNotPromise(acceptor2)', '~start(proposer1)', '~start(proposer2)']
531     : -0-------0---------1----0-0
531     : ['promise(acceptor1,proposer1)', '~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~didNotPromise(acceptor0)', '~start(proposer0)', '~start(proposer2)']
532     : --0------0----------1---00-
532     : ['promise(acceptor1,proposer2)', '~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~didNotPromise(acceptor0)', '~start(proposer0)', '~start(proposer1)']
533     : 0--------0--------1------00
533     : ['promise(acceptor1,proposer0)', '~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~didNotPromise(acceptor0)', '~start(proposer1)', '~start(proposer2)']
534     : -0--------0-----1-------0-0
534     : ['promise(acceptor0,proposer1)', '~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~didNotPromise(acceptor1)', '~start(proposer0)', '~start(proposer2)']
535     : --0-------0------1------00-
535     : ['promise(acceptor0,proposer2)', '~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~didNotPromise(acceptor1)', '~start(proposer0)', '~start(proposer1)']
536     : 0---------0----1---------00
536     : ['promise(acceptor0,proposer0)', '~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~didNotPromise(acceptor1)', '~start(proposer1)', '~start(proposer2)']
num_forall :   4
num_exists :   1
num_literals : 8
quantified form : forall PROPOSER1,ACCEPTOR0,ACCEPTOR1,QUORUM0. ~promise(ACCEPTOR1,PROPOSER1) | chosenAt(QUORUM0,PROPOSER1) | didNotPromise(ACCEPTOR0) | ~member(ACCEPTOR0,QUORUM0) | ~member(ACCEPTOR1,QUORUM0) | (exists PROPOSER0. (start(PROPOSER0) & PROPOSER0 ~= PROPOSER1)) | ACCEPTOR0 = ACCEPTOR1
qcost : 13




=== Prime Orbit 35 =====================
size : 9
num_suborbits: 1
555 (*) : --0------00-------------00-
555     : ['~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~start(proposer0)', '~start(proposer1)']
556     : -0-------00-------------0-0
556     : ['~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~start(proposer0)', '~start(proposer2)']
557     : 0--------00--------------00
557     : ['~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~start(proposer1)', '~start(proposer2)']
558     : -----0---0-0------------00-
558     : ['~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor2)', '~start(proposer0)', '~start(proposer1)']
559     : ----0----0-0------------0-0
559     : ['~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor2)', '~start(proposer0)', '~start(proposer2)']
560     : ---0-----0-0-------------00
560     : ['~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor2)', '~start(proposer1)', '~start(proposer2)']
561     : --------0-00------------00-
561     : ['~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~start(proposer0)', '~start(proposer1)']
562     : -------0--00------------0-0
562     : ['~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~start(proposer0)', '~start(proposer2)']
563     : ------0---00-------------00
563     : ['~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~start(proposer1)', '~start(proposer2)']
num_forall :   4
num_exists :   1
num_literals : 8
quantified form : forall PROPOSER1,ACCEPTOR0,ACCEPTOR1,QUORUM0. chosenAt(QUORUM0,PROPOSER1) | didNotPromise(ACCEPTOR0) | didNotPromise(ACCEPTOR1) | ~member(ACCEPTOR0,QUORUM0) | ~member(ACCEPTOR1,QUORUM0) | (exists PROPOSER0. (start(PROPOSER0) & PROPOSER0 ~= PROPOSER1)) | ACCEPTOR0 = ACCEPTOR1
qcost : 13




=== Prime Orbit 37 =====================
size : 9
num_suborbits: 1
582 (*) : ---0--0----01---------00---
582     : ['leader(proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor2)', '~promise(acceptor2,proposer1)', '~promise(acceptor2,proposer2)']
583     : ----0--0---0-1-------0-0---
583     : ['leader(proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor2)', '~promise(acceptor2,proposer0)', '~promise(acceptor2,proposer2)']
584     : -----0--0--0--1------00----
584     : ['leader(proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor2)', '~promise(acceptor2,proposer0)', '~promise(acceptor2,proposer1)']
585     : 0-----0---0-1------00------
585     : ['leader(proposer0)', '~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor1)', '~promise(acceptor1,proposer1)', '~promise(acceptor1,proposer2)']
586     : -0-----0--0--1----0-0------
586     : ['leader(proposer1)', '~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor1)', '~promise(acceptor1,proposer0)', '~promise(acceptor1,proposer2)']
587     : --0-----0-0---1---00-------
587     : ['leader(proposer2)', '~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor1)', '~promise(acceptor1,proposer0)', '~promise(acceptor1,proposer1)']
588     : 0--0-----0--1---00---------
588     : ['leader(proposer0)', '~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~didNotPromise(acceptor0)', '~promise(acceptor0,proposer1)', '~promise(acceptor0,proposer2)']
589     : -0--0----0---1-0-0---------
589     : ['leader(proposer1)', '~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~didNotPromise(acceptor0)', '~promise(acceptor0,proposer0)', '~promise(acceptor0,proposer2)']
590     : --0--0---0----100----------
590     : ['leader(proposer2)', '~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~didNotPromise(acceptor0)', '~promise(acceptor0,proposer0)', '~promise(acceptor0,proposer1)']
num_forall :   4
num_exists :   1
num_literals : 9
quantified form : forall PROPOSER1,QUORUM1,ACCEPTOR0,QUORUM0. chosenAt(QUORUM0,PROPOSER1) | didNotPromise(ACCEPTOR0) | ~member(ACCEPTOR0,QUORUM1) | ~leader(PROPOSER1) | ~member(ACCEPTOR0,QUORUM0) | chosenAt(QUORUM1,PROPOSER1) | (exists PROPOSER0. (promise(ACCEPTOR0,PROPOSER0) & PROPOSER0 ~= PROPOSER1)) | QUORUM0 = QUORUM1
qcost : 14




=== Prime Orbit 38 =====================
size : 18
num_suborbits: 1
591 (*) : -0-------00----0--0-------0
591     : ['~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~promise(acceptor0,proposer0)', '~promise(acceptor1,proposer0)', '~start(proposer2)']
592     : --0------00----0--0------0-
592     : ['~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~promise(acceptor0,proposer0)', '~promise(acceptor1,proposer0)', '~start(proposer1)']
593     : 0--------00-----0--0------0
593     : ['~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~promise(acceptor0,proposer1)', '~promise(acceptor1,proposer1)', '~start(proposer2)']
594     : --0------00-----0--0----0--
594     : ['~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~promise(acceptor0,proposer1)', '~promise(acceptor1,proposer1)', '~start(proposer0)']
595     : 0--------00------0--0----0-
595     : ['~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~promise(acceptor0,proposer2)', '~promise(acceptor1,proposer2)', '~start(proposer1)']
596     : -0-------00------0--0---0--
596     : ['~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~promise(acceptor0,proposer2)', '~promise(acceptor1,proposer2)', '~start(proposer0)']
597     : ----0----0-0---0-----0----0
597     : ['~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor2)', '~promise(acceptor0,proposer0)', '~promise(acceptor2,proposer0)', '~start(proposer2)']
598     : -----0---0-0---0-----0---0-
598     : ['~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor2)', '~promise(acceptor0,proposer0)', '~promise(acceptor2,proposer0)', '~start(proposer1)']
599     : ---0-----0-0----0-----0---0
599     : ['~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor2)', '~promise(acceptor0,proposer1)', '~promise(acceptor2,proposer1)', '~start(proposer2)']
600     : -----0---0-0----0-----0-0--
600     : ['~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor2)', '~promise(acceptor0,proposer1)', '~promise(acceptor2,proposer1)', '~start(proposer0)']
601     : ---0-----0-0-----0-----0-0-
601     : ['~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor2)', '~promise(acceptor0,proposer2)', '~promise(acceptor2,proposer2)', '~start(proposer1)']
602     : ----0----0-0-----0-----00--
602     : ['~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor2)', '~promise(acceptor0,proposer2)', '~promise(acceptor2,proposer2)', '~start(proposer0)']
603     : -------0--00------0--0----0
603     : ['~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor1,proposer0)', '~promise(acceptor2,proposer0)', '~start(proposer2)']
604     : --------0-00------0--0---0-
604     : ['~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor1,proposer0)', '~promise(acceptor2,proposer0)', '~start(proposer1)']
605     : ------0---00-------0--0---0
605     : ['~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor1,proposer1)', '~promise(acceptor2,proposer1)', '~start(proposer2)']
606     : --------0-00-------0--0-0--
606     : ['~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor1,proposer1)', '~promise(acceptor2,proposer1)', '~start(proposer0)']
607     : ------0---00--------0--0-0-
607     : ['~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor1,proposer2)', '~promise(acceptor2,proposer2)', '~start(proposer1)']
608     : -------0--00--------0--00--
608     : ['~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor1,proposer2)', '~promise(acceptor2,proposer2)', '~start(proposer0)']
num_forall :   6
num_exists :   0
num_literals : 12
quantified form : forall PROPOSER0,PROPOSER1,PROPOSER2,ACCEPTOR1,QUORUM0,ACCEPTOR0. promise(ACCEPTOR1,PROPOSER1) | start(PROPOSER2) | didNotPromise(ACCEPTOR0) | didNotPromise(ACCEPTOR1) | promise(ACCEPTOR0,PROPOSER1) | ~member(ACCEPTOR0,QUORUM0) | ~member(ACCEPTOR1,QUORUM0) | chosenAt(QUORUM0,PROPOSER0) | (PROPOSER0 = PROPOSER1 | PROPOSER0 = PROPOSER2 | ACCEPTOR0 = ACCEPTOR1 | PROPOSER1 = PROPOSER2)
qcost : 18




=== Prime Orbit 39 =====================
size : 18
num_suborbits: 1
609 (*) : -0-0-----0---------1-1----0
609     : ['promise(acceptor1,proposer1)', 'promise(acceptor2,proposer0)', '~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~didNotPromise(acceptor0)', '~start(proposer2)']
610     : --00-----0----------11---0-
610     : ['promise(acceptor1,proposer2)', 'promise(acceptor2,proposer0)', '~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~didNotPromise(acceptor0)', '~start(proposer1)']
611     : 0---0----0--------1---1---0
611     : ['promise(acceptor1,proposer0)', 'promise(acceptor2,proposer1)', '~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~didNotPromise(acceptor0)', '~start(proposer2)']
612     : --0-0----0----------1-1-0--
612     : ['promise(acceptor1,proposer2)', 'promise(acceptor2,proposer1)', '~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~didNotPromise(acceptor0)', '~start(proposer0)']
613     : 0----0---0--------1----1-0-
613     : ['promise(acceptor1,proposer0)', 'promise(acceptor2,proposer2)', '~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~didNotPromise(acceptor0)', '~start(proposer1)']
614     : -0---0---0---------1---10--
614     : ['promise(acceptor1,proposer1)', 'promise(acceptor2,proposer2)', '~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~didNotPromise(acceptor0)', '~start(proposer0)']
615     : -0----0---0-----1----1----0
615     : ['promise(acceptor0,proposer1)', 'promise(acceptor2,proposer0)', '~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor1)', '~start(proposer2)']
616     : --0---0---0------1---1---0-
616     : ['promise(acceptor0,proposer2)', 'promise(acceptor2,proposer0)', '~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor1)', '~start(proposer1)']
617     : 0------0--0----1------1---0
617     : ['promise(acceptor0,proposer0)', 'promise(acceptor2,proposer1)', '~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor1)', '~start(proposer2)']
618     : --0----0--0------1----1-0--
618     : ['promise(acceptor0,proposer2)', 'promise(acceptor2,proposer1)', '~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor1)', '~start(proposer0)']
619     : 0-------0-0----1-------1-0-
619     : ['promise(acceptor0,proposer0)', 'promise(acceptor2,proposer2)', '~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor1)', '~start(proposer1)']
620     : -0------0-0-----1------10--
620     : ['promise(acceptor0,proposer1)', 'promise(acceptor2,proposer2)', '~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor1)', '~start(proposer0)']
621     : ----0-0----0----1-1-------0
621     : ['promise(acceptor0,proposer1)', 'promise(acceptor1,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor2)', '~start(proposer2)']
622     : -----00----0-----11------0-
622     : ['promise(acceptor0,proposer2)', 'promise(acceptor1,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor2)', '~start(proposer1)']
623     : ---0---0---0---1---1------0
623     : ['promise(acceptor0,proposer0)', 'promise(acceptor1,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor2)', '~start(proposer2)']
624     : -----0-0---0-----1-1----0--
624     : ['promise(acceptor0,proposer2)', 'promise(acceptor1,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor2)', '~start(proposer0)']
625     : ---0----0--0---1----1----0-
625     : ['promise(acceptor0,proposer0)', 'promise(acceptor1,proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor2)', '~start(proposer1)']
626     : ----0---0--0----1---1---0--
626     : ['promise(acceptor0,proposer1)', 'promise(acceptor1,proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor2)', '~start(proposer0)']
num_forall :   8
num_exists :   0
num_literals : 19
quantified form : forall QUORUM1,PROPOSER0,PROPOSER1,PROPOSER2,ACCEPTOR1,QUORUM0,ACCEPTOR2,ACCEPTOR0. ~member(ACCEPTOR2,QUORUM1) | start(PROPOSER2) | chosenAt(QUORUM0,PROPOSER0) | didNotPromise(ACCEPTOR0) | ~member(ACCEPTOR0,QUORUM1) | ~member(ACCEPTOR0,QUORUM0) | ~member(ACCEPTOR1,QUORUM0) | member(ACCEPTOR1,QUORUM1) | ~promise(ACCEPTOR1,PROPOSER0) | ~promise(ACCEPTOR2,PROPOSER1) | chosenAt(QUORUM1,PROPOSER1) | member(ACCEPTOR2,QUORUM0) | (PROPOSER0 = PROPOSER2 | ACCEPTOR1 = ACCEPTOR2 | ACCEPTOR0 = ACCEPTOR2 | ACCEPTOR0 = ACCEPTOR1 | QUORUM0 = QUORUM1 | PROPOSER0 = PROPOSER1 | PROPOSER1 = PROPOSER2)
qcost : 27




=== Prime Orbit 40 =====================
size : 18
num_suborbits: 1
627 (*) : 0--0-----0--1---0---------0
627     : ['leader(proposer0)', '~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~didNotPromise(acceptor0)', '~promise(acceptor0,proposer1)', '~start(proposer2)']
628     : 0--0-----0--1----0-------0-
628     : ['leader(proposer0)', '~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~didNotPromise(acceptor0)', '~promise(acceptor0,proposer2)', '~start(proposer1)']
629     : -0--0----0---1-0----------0
629     : ['leader(proposer1)', '~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~didNotPromise(acceptor0)', '~promise(acceptor0,proposer0)', '~start(proposer2)']
630     : -0--0----0---1---0------0--
630     : ['leader(proposer1)', '~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~didNotPromise(acceptor0)', '~promise(acceptor0,proposer2)', '~start(proposer0)']
631     : --0--0---0----10---------0-
631     : ['leader(proposer2)', '~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~didNotPromise(acceptor0)', '~promise(acceptor0,proposer0)', '~start(proposer1)']
632     : --0--0---0----1-0-------0--
632     : ['leader(proposer2)', '~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~didNotPromise(acceptor0)', '~promise(acceptor0,proposer1)', '~start(proposer0)']
633     : 0-----0---0-1------0------0
633     : ['leader(proposer0)', '~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor1)', '~promise(acceptor1,proposer1)', '~start(proposer2)']
634     : 0-----0---0-1-------0----0-
634     : ['leader(proposer0)', '~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor1)', '~promise(acceptor1,proposer2)', '~start(proposer1)']
635     : -0-----0--0--1----0-------0
635     : ['leader(proposer1)', '~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor1)', '~promise(acceptor1,proposer0)', '~start(proposer2)']
636     : -0-----0--0--1------0---0--
636     : ['leader(proposer1)', '~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor1)', '~promise(acceptor1,proposer2)', '~start(proposer0)']
637     : --0-----0-0---1---0------0-
637     : ['leader(proposer2)', '~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor1)', '~promise(acceptor1,proposer0)', '~start(proposer1)']
638     : --0-----0-0---1----0----0--
638     : ['leader(proposer2)', '~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor1)', '~promise(acceptor1,proposer1)', '~start(proposer0)']
639     : ---0--0----01---------0---0
639     : ['leader(proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor2)', '~promise(acceptor2,proposer1)', '~start(proposer2)']
640     : ---0--0----01----------0-0-
640     : ['leader(proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor2)', '~promise(acceptor2,proposer2)', '~start(proposer1)']
641     : ----0--0---0-1-------0----0
641     : ['leader(proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor2)', '~promise(acceptor2,proposer0)', '~start(proposer2)']
642     : ----0--0---0-1---------00--
642     : ['leader(proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor2)', '~promise(acceptor2,proposer2)', '~start(proposer0)']
643     : -----0--0--0--1------0---0-
643     : ['leader(proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor2)', '~promise(acceptor2,proposer0)', '~start(proposer1)']
644     : -----0--0--0--1-------0-0--
644     : ['leader(proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor2)', '~promise(acceptor2,proposer1)', '~start(proposer0)']
num_forall :   6
num_exists :   0
num_literals : 12
quantified form : forall QUORUM1,PROPOSER0,PROPOSER1,PROPOSER2,QUORUM0,ACCEPTOR0. start(PROPOSER2) | didNotPromise(ACCEPTOR0) | ~member(ACCEPTOR0,QUORUM1) | ~leader(PROPOSER0) | promise(ACCEPTOR0,PROPOSER1) | ~member(ACCEPTOR0,QUORUM0) | chosenAt(QUORUM1,PROPOSER0) | chosenAt(QUORUM0,PROPOSER0) | (PROPOSER0 = PROPOSER1 | PROPOSER0 = PROPOSER2 | QUORUM0 = QUORUM1 | PROPOSER1 = PROPOSER2)
qcost : 18




=== Prime Orbit 41 =====================
size : 9
num_suborbits: 1
645 (*) : 0--0-----0--1------------00
645     : ['leader(proposer0)', '~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~didNotPromise(acceptor0)', '~start(proposer1)', '~start(proposer2)']
646     : -0--0----0---1----------0-0
646     : ['leader(proposer1)', '~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~didNotPromise(acceptor0)', '~start(proposer0)', '~start(proposer2)']
647     : --0--0---0----1---------00-
647     : ['leader(proposer2)', '~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~didNotPromise(acceptor0)', '~start(proposer0)', '~start(proposer1)']
648     : 0-----0---0-1------------00
648     : ['leader(proposer0)', '~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor1)', '~start(proposer1)', '~start(proposer2)']
649     : -0-----0--0--1----------0-0
649     : ['leader(proposer1)', '~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor1)', '~start(proposer0)', '~start(proposer2)']
650     : --0-----0-0---1---------00-
650     : ['leader(proposer2)', '~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor1)', '~start(proposer0)', '~start(proposer1)']
651     : ---0--0----01------------00
651     : ['leader(proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor2)', '~start(proposer1)', '~start(proposer2)']
652     : ----0--0---0-1----------0-0
652     : ['leader(proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor2)', '~start(proposer0)', '~start(proposer2)']
653     : -----0--0--0--1---------00-
653     : ['leader(proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor2)', '~start(proposer0)', '~start(proposer1)']
num_forall :   4
num_exists :   1
num_literals : 9
quantified form : forall PROPOSER1,QUORUM1,ACCEPTOR0,QUORUM0. chosenAt(QUORUM0,PROPOSER1) | didNotPromise(ACCEPTOR0) | ~member(ACCEPTOR0,QUORUM1) | ~leader(PROPOSER1) | ~member(ACCEPTOR0,QUORUM0) | chosenAt(QUORUM1,PROPOSER1) | (exists PROPOSER0. (start(PROPOSER0) & PROPOSER0 ~= PROPOSER1)) | QUORUM0 = QUORUM1
qcost : 14




=== Prime Orbit 42 =====================
size : 18
num_suborbits: 1
654 (*) : -0---0--000------------10--
654     : ['promise(acceptor2,proposer2)', '~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~start(proposer0)']
655     : --0-0--0-00-----------1-0--
655     : ['promise(acceptor2,proposer1)', '~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~start(proposer0)']
656     : 0----0--000------------1-0-
656     : ['promise(acceptor2,proposer2)', '~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~start(proposer1)']
657     : --00--0--00----------1---0-
657     : ['promise(acceptor2,proposer0)', '~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~start(proposer1)']
658     : 0---0--0-00-----------1---0
658     : ['promise(acceptor2,proposer1)', '~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~start(proposer2)']
659     : -0-0--0--00----------1----0
659     : ['promise(acceptor2,proposer0)', '~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~start(proposer2)']
660     : --0-0---00-0--------1---0--
660     : ['promise(acceptor1,proposer2)', '~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor2)', '~start(proposer0)']
661     : -0---0-0-0-0-------1----0--
661     : ['promise(acceptor1,proposer1)', '~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor2)', '~start(proposer0)']
662     : --00----00-0--------1----0-
662     : ['promise(acceptor1,proposer2)', '~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor2)', '~start(proposer1)']
663     : 0----00--0-0------1------0-
663     : ['promise(acceptor1,proposer0)', '~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor2)', '~start(proposer1)']
664     : -0-0---0-0-0-------1------0
664     : ['promise(acceptor1,proposer1)', '~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor2)', '~start(proposer2)']
665     : 0---0-0--0-0------1-------0
665     : ['promise(acceptor1,proposer0)', '~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor2)', '~start(proposer2)']
666     : --0--0-0--00-----1------0--
666     : ['promise(acceptor0,proposer2)', '~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~start(proposer0)']
667     : -0--0---0-00----1-------0--
667     : ['promise(acceptor0,proposer1)', '~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~start(proposer0)']
668     : --0--00---00-----1-------0-
668     : ['promise(acceptor0,proposer2)', '~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~start(proposer1)']
669     : 0--0----0-00---1---------0-
669     : ['promise(acceptor0,proposer0)', '~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~start(proposer1)']
670     : -0--0-0---00----1---------0
670     : ['promise(acceptor0,proposer1)', '~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~start(proposer2)']
671     : 0--0---0--00---1----------0
671     : ['promise(acceptor0,proposer0)', '~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~start(proposer2)']
num_forall :   9
num_exists :   0
num_literals : 25
quantified form : forall QUORUM1,PROPOSER0,PROPOSER1,PROPOSER2,ACCEPTOR1,QUORUM2,QUORUM0,ACCEPTOR2,ACCEPTOR0. didNotPromise(ACCEPTOR2) | ~member(ACCEPTOR2,QUORUM1) | chosenAt(QUORUM2,PROPOSER0) | start(PROPOSER2) | member(ACCEPTOR0,QUORUM2) | didNotPromise(ACCEPTOR0) | ~member(ACCEPTOR0,QUORUM1) | ~member(ACCEPTOR1,QUORUM2) | ~member(ACCEPTOR0,QUORUM0) | ~member(ACCEPTOR1,QUORUM0) | member(ACCEPTOR1,QUORUM1) | ~promise(ACCEPTOR1,PROPOSER0) | chosenAt(QUORUM1,PROPOSER1) | ~member(ACCEPTOR2,QUORUM2) | chosenAt(QUORUM0,PROPOSER0) | member(ACCEPTOR2,QUORUM0) | (QUORUM1 = QUORUM2 | PROPOSER0 = PROPOSER2 | ACCEPTOR1 = ACCEPTOR2 | ACCEPTOR0 = ACCEPTOR2 | ACCEPTOR0 = ACCEPTOR1 | QUORUM0 = QUORUM1 | PROPOSER0 = PROPOSER1 | QUORUM0 = QUORUM2 | PROPOSER1 = PROPOSER2)
qcost : 34




=== Prime Orbit 43 =====================
size : 36
num_suborbits: 1
672 (*) : -0---0---00---------0--10--
672     : ['promise(acceptor2,proposer2)', '~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~promise(acceptor1,proposer2)', '~start(proposer0)']
673     : --0-0----00--------0--1-0--
673     : ['promise(acceptor2,proposer1)', '~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~promise(acceptor1,proposer1)', '~start(proposer0)']
674     : 0----0---00---------0--1-0-
674     : ['promise(acceptor2,proposer2)', '~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~promise(acceptor1,proposer2)', '~start(proposer1)']
675     : --00-----00-------0--1---0-
675     : ['promise(acceptor2,proposer0)', '~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~promise(acceptor1,proposer0)', '~start(proposer1)']
676     : 0---0----00--------0--1---0
676     : ['promise(acceptor2,proposer1)', '~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~promise(acceptor1,proposer1)', '~start(proposer2)']
677     : -0-0-----00-------0--1----0
677     : ['promise(acceptor2,proposer0)', '~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~promise(acceptor1,proposer0)', '~start(proposer2)']
678     : --0-0----0-0--------1--00--
678     : ['promise(acceptor1,proposer2)', '~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor2)', '~promise(acceptor2,proposer2)', '~start(proposer0)']
679     : -0---0---0-0-------1--0-0--
679     : ['promise(acceptor1,proposer1)', '~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor2)', '~promise(acceptor2,proposer1)', '~start(proposer0)']
680     : --00-----0-0--------1--0-0-
680     : ['promise(acceptor1,proposer2)', '~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor2)', '~promise(acceptor2,proposer2)', '~start(proposer1)']
681     : 0----0---0-0------1--0---0-
681     : ['promise(acceptor1,proposer0)', '~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor2)', '~promise(acceptor2,proposer0)', '~start(proposer1)']
682     : -0-0-----0-0-------1--0---0
682     : ['promise(acceptor1,proposer1)', '~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor2)', '~promise(acceptor2,proposer1)', '~start(proposer2)']
683     : 0---0----0-0------1--0----0
683     : ['promise(acceptor1,proposer0)', '~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor2)', '~promise(acceptor2,proposer0)', '~start(proposer2)']
684     : -0------000------0-----10--
684     : ['promise(acceptor2,proposer2)', '~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~promise(acceptor0,proposer2)', '~start(proposer0)']
685     : --0----0-00-----0-----1-0--
685     : ['promise(acceptor2,proposer1)', '~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~promise(acceptor0,proposer1)', '~start(proposer0)']
686     : 0-------000------0-----1-0-
686     : ['promise(acceptor2,proposer2)', '~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~promise(acceptor0,proposer2)', '~start(proposer1)']
687     : --0---0--00----0-----1---0-
687     : ['promise(acceptor2,proposer0)', '~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~promise(acceptor0,proposer0)', '~start(proposer1)']
688     : 0------0-00-----0-----1---0
688     : ['promise(acceptor2,proposer1)', '~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~promise(acceptor0,proposer1)', '~start(proposer2)']
689     : -0----0--00----0-----1----0
689     : ['promise(acceptor2,proposer0)', '~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~promise(acceptor0,proposer0)', '~start(proposer2)']
690     : --0----0--00-----1-----00--
690     : ['promise(acceptor0,proposer2)', '~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor2,proposer2)', '~start(proposer0)']
691     : -0------0-00----1-----0-0--
691     : ['promise(acceptor0,proposer1)', '~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor2,proposer1)', '~start(proposer0)']
692     : --0---0---00-----1-----0-0-
692     : ['promise(acceptor0,proposer2)', '~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor2,proposer2)', '~start(proposer1)']
693     : 0-------0-00---1-----0---0-
693     : ['promise(acceptor0,proposer0)', '~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor2,proposer0)', '~start(proposer1)']
694     : -0----0---00----1-----0---0
694     : ['promise(acceptor0,proposer1)', '~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor2,proposer1)', '~start(proposer2)']
695     : 0------0--00---1-----0----0
695     : ['promise(acceptor0,proposer0)', '~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor2,proposer0)', '~start(proposer2)']
696     : ----0---00-0-----0--1---0--
696     : ['promise(acceptor1,proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor2)', '~promise(acceptor0,proposer2)', '~start(proposer0)']
697     : -----0-0-0-0----0--1----0--
697     : ['promise(acceptor1,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor2)', '~promise(acceptor0,proposer1)', '~start(proposer0)']
698     : ---0----00-0-----0--1----0-
698     : ['promise(acceptor1,proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor2)', '~promise(acceptor0,proposer2)', '~start(proposer1)']
699     : -----00--0-0---0--1------0-
699     : ['promise(acceptor1,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor2)', '~promise(acceptor0,proposer0)', '~start(proposer1)']
700     : ---0---0-0-0----0--1------0
700     : ['promise(acceptor1,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor2)', '~promise(acceptor0,proposer1)', '~start(proposer2)']
701     : ----0-0--0-0---0--1-------0
701     : ['promise(acceptor1,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor2)', '~promise(acceptor0,proposer0)', '~start(proposer2)']
702     : -----0-0--00-----1--0---0--
702     : ['promise(acceptor0,proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor1,proposer2)', '~start(proposer0)']
703     : ----0---0-00----1--0----0--
703     : ['promise(acceptor0,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor1,proposer1)', '~start(proposer0)']
704     : -----00---00-----1--0----0-
704     : ['promise(acceptor0,proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor1,proposer2)', '~start(proposer1)']
705     : ---0----0-00---1--0------0-
705     : ['promise(acceptor0,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor1,proposer0)', '~start(proposer1)']
706     : ----0-0---00----1--0------0
706     : ['promise(acceptor0,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor1,proposer1)', '~start(proposer2)']
707     : ---0---0--00---1--0-------0
707     : ['promise(acceptor0,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor1,proposer0)', '~start(proposer2)']
num_forall :   8
num_exists :   0
num_literals : 20
quantified form : forall QUORUM1,PROPOSER0,PROPOSER1,PROPOSER2,ACCEPTOR1,QUORUM0,ACCEPTOR2,ACCEPTOR0. start(PROPOSER2) | chosenAt(QUORUM0,PROPOSER1) | didNotPromise(ACCEPTOR0) | ~member(ACCEPTOR0,QUORUM1) | didNotPromise(ACCEPTOR1) | ~promise(ACCEPTOR2,PROPOSER0) | ~member(ACCEPTOR0,QUORUM0) | ~member(ACCEPTOR1,QUORUM0) | promise(ACCEPTOR1,PROPOSER0) | member(ACCEPTOR1,QUORUM1) | chosenAt(QUORUM1,PROPOSER0) | ~member(ACCEPTOR2,QUORUM1) | member(ACCEPTOR2,QUORUM0) | (PROPOSER0 = PROPOSER2 | ACCEPTOR1 = ACCEPTOR2 | ACCEPTOR0 = ACCEPTOR2 | ACCEPTOR0 = ACCEPTOR1 | QUORUM0 = QUORUM1 | PROPOSER0 = PROPOSER1 | PROPOSER1 = PROPOSER2)
qcost : 28




=== Prime Orbit 47 =====================
size : 18
num_suborbits: 1
771 (*) : -0--0-0--000---0----------0
771     : ['~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor0,proposer0)', '~start(proposer2)']
772     : --0--00--000---0---------0-
772     : ['~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor0,proposer0)', '~start(proposer1)']
773     : 0--0---0-000----0---------0
773     : ['~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor0,proposer1)', '~start(proposer2)']
774     : --0--0-0-000----0-------0--
774     : ['~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor0,proposer1)', '~start(proposer0)']
775     : 0--0----0000-----0-------0-
775     : ['~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor0,proposer2)', '~start(proposer1)']
776     : -0--0---0000-----0------0--
776     : ['~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor0,proposer2)', '~start(proposer0)']
777     : -0-0---0-000------0-------0
777     : ['~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor1,proposer0)', '~start(proposer2)']
778     : --00----0000------0------0-
778     : ['~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor1,proposer0)', '~start(proposer1)']
779     : 0---0-0--000-------0------0
779     : ['~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor1,proposer1)', '~start(proposer2)']
780     : --0-0---0000-------0----0--
780     : ['~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor1,proposer1)', '~start(proposer0)']
781     : 0----00--000--------0----0-
781     : ['~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor1,proposer2)', '~start(proposer1)']
782     : -0---0-0-000--------0---0--
782     : ['~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor1,proposer2)', '~start(proposer0)']
783     : 0---0--0-000---------0----0
783     : ['~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor2,proposer0)', '~start(proposer2)']
784     : 0----0--0000---------0---0-
784     : ['~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor2,proposer0)', '~start(proposer1)']
785     : -0-0--0--000----------0---0
785     : ['~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor2,proposer1)', '~start(proposer2)']
786     : -0---0--0000----------0-0--
786     : ['~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor2,proposer1)', '~start(proposer0)']
787     : --00--0--000-----------0-0-
787     : ['~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor2,proposer2)', '~start(proposer1)']
788     : --0-0--0-000-----------00--
788     : ['~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor2,proposer2)', '~start(proposer0)']
num_forall :   9
num_exists :   0
num_literals : 26
quantified form : forall QUORUM1,PROPOSER0,PROPOSER1,PROPOSER2,ACCEPTOR1,QUORUM2,QUORUM0,ACCEPTOR2,ACCEPTOR0. didNotPromise(ACCEPTOR2) | ~member(ACCEPTOR2,QUORUM1) | chosenAt(QUORUM2,PROPOSER0) | start(PROPOSER2) | member(ACCEPTOR0,QUORUM2) | chosenAt(QUORUM0,PROPOSER1) | didNotPromise(ACCEPTOR0) | ~member(ACCEPTOR0,QUORUM1) | didNotPromise(ACCEPTOR1) | ~member(ACCEPTOR1,QUORUM2) | ~member(ACCEPTOR0,QUORUM0) | ~member(ACCEPTOR1,QUORUM0) | promise(ACCEPTOR2,PROPOSER1) | chosenAt(QUORUM1,PROPOSER0) | ~member(ACCEPTOR2,QUORUM2) | member(ACCEPTOR1,QUORUM1) | member(ACCEPTOR2,QUORUM0) | (QUORUM1 = QUORUM2 | PROPOSER0 = PROPOSER2 | ACCEPTOR1 = ACCEPTOR2 | ACCEPTOR0 = ACCEPTOR2 | ACCEPTOR0 = ACCEPTOR1 | QUORUM0 = QUORUM1 | PROPOSER0 = PROPOSER1 | QUORUM0 = QUORUM2 | PROPOSER1 = PROPOSER2)
qcost : 35




=== Prime Orbit 48 =====================
size : 18
num_suborbits: 1
789 (*) : ----0-0--000---0---0------0
789     : ['~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor0,proposer0)', '~promise(acceptor1,proposer1)', '~start(proposer2)']
790     : -----00--000---0----0----0-
790     : ['~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor0,proposer0)', '~promise(acceptor1,proposer2)', '~start(proposer1)']
791     : ---0---0-000----0-0-------0
791     : ['~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor0,proposer1)', '~promise(acceptor1,proposer0)', '~start(proposer2)']
792     : -----0-0-000----0---0---0--
792     : ['~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor0,proposer1)', '~promise(acceptor1,proposer2)', '~start(proposer0)']
793     : ---0----0000-----00------0-
793     : ['~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor0,proposer2)', '~promise(acceptor1,proposer0)', '~start(proposer1)']
794     : ----0---0000-----0-0----0--
794     : ['~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor0,proposer2)', '~promise(acceptor1,proposer1)', '~start(proposer0)']
795     : -0----0--000---0------0---0
795     : ['~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor0,proposer0)', '~promise(acceptor2,proposer1)', '~start(proposer2)']
796     : --0---0--000---0-------0-0-
796     : ['~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor0,proposer0)', '~promise(acceptor2,proposer2)', '~start(proposer1)']
797     : 0------0-000----0----0----0
797     : ['~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor0,proposer1)', '~promise(acceptor2,proposer0)', '~start(proposer2)']
798     : --0----0-000----0------00--
798     : ['~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor0,proposer1)', '~promise(acceptor2,proposer2)', '~start(proposer0)']
799     : 0-------0000-----0---0---0-
799     : ['~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor0,proposer2)', '~promise(acceptor2,proposer0)', '~start(proposer1)']
800     : -0------0000-----0----0-0--
800     : ['~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor0,proposer2)', '~promise(acceptor2,proposer1)', '~start(proposer0)']
801     : -0-0-----000------0---0---0
801     : ['~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor1,proposer0)', '~promise(acceptor2,proposer1)', '~start(proposer2)']
802     : --00-----000------0----0-0-
802     : ['~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor1,proposer0)', '~promise(acceptor2,proposer2)', '~start(proposer1)']
803     : 0---0----000-------0-0----0
803     : ['~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor1,proposer1)', '~promise(acceptor2,proposer0)', '~start(proposer2)']
804     : --0-0----000-------0---00--
804     : ['~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor1,proposer1)', '~promise(acceptor2,proposer2)', '~start(proposer0)']
805     : 0----0---000--------00---0-
805     : ['~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor1,proposer2)', '~promise(acceptor2,proposer0)', '~start(proposer1)']
806     : -0---0---000--------0-0-0--
806     : ['~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor1,proposer2)', '~promise(acceptor2,proposer1)', '~start(proposer0)']
num_forall :   8
num_exists :   0
num_literals : 21
quantified form : forall QUORUM1,PROPOSER0,PROPOSER1,PROPOSER2,ACCEPTOR1,QUORUM0,ACCEPTOR2,ACCEPTOR0. didNotPromise(ACCEPTOR2) | promise(ACCEPTOR0,PROPOSER0) | start(PROPOSER2) | chosenAt(QUORUM0,PROPOSER1) | didNotPromise(ACCEPTOR0) | didNotPromise(ACCEPTOR1) | ~member(ACCEPTOR0,QUORUM0) | ~member(ACCEPTOR1,QUORUM0) | ~member(ACCEPTOR1,QUORUM1) | promise(ACCEPTOR2,PROPOSER1) | chosenAt(QUORUM1,PROPOSER0) | member(ACCEPTOR0,QUORUM1) | ~member(ACCEPTOR2,QUORUM1) | member(ACCEPTOR2,QUORUM0) | (PROPOSER0 = PROPOSER2 | ACCEPTOR1 = ACCEPTOR2 | ACCEPTOR0 = ACCEPTOR2 | ACCEPTOR0 = ACCEPTOR1 | QUORUM0 = QUORUM1 | PROPOSER0 = PROPOSER1 | PROPOSER1 = PROPOSER2)
qcost : 29




=== Prime Orbit 49 =====================
size : 3
num_suborbits: 1
807 (*) : -00-00-00000------------0--
807     : ['~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~start(proposer0)']
808     : 0-00-00-0000-------------0-
808     : ['~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~start(proposer1)']
809     : 00-00-00-000--------------0
809     : ['~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~start(proposer2)']
num_forall :   7
num_exists :   1
num_literals : 23
quantified form : forall QUORUM1,PROPOSER1,ACCEPTOR1,QUORUM2,QUORUM0,ACCEPTOR2,ACCEPTOR0. didNotPromise(ACCEPTOR2) | ~member(ACCEPTOR2,QUORUM1) | member(ACCEPTOR0,QUORUM2) | didNotPromise(ACCEPTOR0) | ~member(ACCEPTOR0,QUORUM1) | didNotPromise(ACCEPTOR1) | ~member(ACCEPTOR1,QUORUM2) | ~member(ACCEPTOR0,QUORUM0) | start(PROPOSER1) | member(ACCEPTOR1,QUORUM1) | ~member(ACCEPTOR1,QUORUM0) | ~member(ACCEPTOR2,QUORUM2) | member(ACCEPTOR2,QUORUM0) | (exists PROPOSER0. ((chosenAt(QUORUM2,PROPOSER0) | chosenAt(QUORUM1,PROPOSER0) | chosenAt(QUORUM0,PROPOSER0)) & PROPOSER0 ~= PROPOSER1)) | (QUORUM1 = QUORUM2 | ACCEPTOR1 = ACCEPTOR2 | ACCEPTOR0 = ACCEPTOR1 | QUORUM0 = QUORUM1 | QUORUM0 = QUORUM2 | ACCEPTOR0 = ACCEPTOR2)
qcost : 31



[QRM NOTE]: Time elapsed since start: 8.651 seconds

[QRM NOTE]: Time elapsed since last: 1.513 seconds

[QRM NOTE]: Peak memory: 1826854 bytes


======================================================================================================

	[MIN]: Minimization on [ivybench/sym_quorum/ivy/simple-election: acceptor=3,proposer=3]

======================================================================================================


New level: 1
 pending : [0, 1, 2, 8, 9, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 28, 29, 30, 32, 33, 35, 37, 38, 39, 40, 41, 42, 43, 47, 48, 49]
 solution : [6]


Before reduction : 
 pending  : [0, 1, 2, 8, 9, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 28, 29, 30, 32, 33, 35, 37, 38, 39, 40, 41, 42, 43, 47, 48, 49]
 solution : [6]

Essensial at level 1 : set()

Before removed
 coverage : [(0, 1048576), (1, 17179869184), (2, 17179869184), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, 134217728), (9, 1048576), (10, -1), (11, -1), (12, -1), (13, -1), (14, 67108864), (15, 33554432), (16, 1572864), (17, 2147483648), (18, 1073741824), (19, 524288), (20, 8388608), (21, 16777216), (22, 262144), (23, 134217728), (24, 1073741824), (25, 4194304), (26, 4294967296), (27, -1), (28, 4294967296), (29, 16384), (30, 32768), (31, -1), (32, 1048576), (33, 4194304), (34, -1), (35, 2147483648), (36, -1), (37, 4194304), (38, 134217728), (39, 16384), (40, 268435456), (41, 1073741824), (42, 524288), (43, 524288), (44, -1), (45, -1), (46, -1), (47, 67108864), (48, 16777216), (49, 67108864), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, 1048576), (1, 17179869184), (2, 17179869184), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, 134217728), (9, 1048576), (10, -1), (11, -1), (12, -1), (13, -1), (14, 67108864), (15, 33554432), (16, 1572864), (17, 2147483648), (18, 1073741824), (19, 524288), (20, 8388608), (21, 16777216), (22, 262144), (23, 134217728), (24, 1073741824), (25, 4194304), (26, 4294967296), (27, -1), (28, 4294967296), (29, 16384), (30, 32768), (31, -1), (32, 1048576), (33, 4194304), (34, -1), (35, 2147483648), (36, -1), (37, 4194304), (38, 134217728), (39, 16384), (40, 268435456), (41, 1073741824), (42, 524288), (43, 524288), (44, -1), (45, -1), (46, -1), (47, 67108864), (48, 16777216), (49, 67108864), (50, -1), (51, -1), (52, -1)]

Covered at level 1 : set()

After reduction : 
 pending  : [0, 1, 2, 8, 9, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 28, 29, 30, 32, 33, 35, 37, 38, 39, 40, 41, 42, 43, 47, 48, 49]
 solution : [6]


Solution : [6] has cost 6.


Decide in level 1 among pending : [0, 1, 2, 8, 9, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 28, 29, 30, 32, 33, 35, 37, 38, 39, 40, 41, 42, 43, 47, 48, 49]

Coverage : [(0, 1048576), (1, 17179869184), (2, 17179869184), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, 134217728), (9, 1048576), (10, -1), (11, -1), (12, -1), (13, -1), (14, 67108864), (15, 33554432), (16, 1572864), (17, 2147483648), (18, 1073741824), (19, 524288), (20, 8388608), (21, 16777216), (22, 262144), (23, 134217728), (24, 1073741824), (25, 4194304), (26, 4294967296), (27, -1), (28, 4294967296), (29, 16384), (30, 32768), (31, -1), (32, 1048576), (33, 4194304), (34, -1), (35, 2147483648), (36, -1), (37, 4194304), (38, 134217728), (39, 16384), (40, 268435456), (41, 1073741824), (42, 524288), (43, 524288), (44, -1), (45, -1), (46, -1), (47, 67108864), (48, 16777216), (49, 67108864), (50, -1), (51, -1), (52, -1)]

Decide 1 with phase True at level 1

After decision at level 1
 pending : [0, 2, 8, 9, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 28, 29, 30, 32, 33, 35, 37, 38, 39, 40, 41, 42, 43, 47, 48, 49]
 solution : [6, 1]


New level: 2
 pending : [0, 2, 8, 9, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 28, 29, 30, 32, 33, 35, 37, 38, 39, 40, 41, 42, 43, 47, 48, 49]
 solution : [6, 1]


Before reduction : 
 pending  : [0, 2, 8, 9, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 28, 29, 30, 32, 33, 35, 37, 38, 39, 40, 41, 42, 43, 47, 48, 49]
 solution : [6, 1]

Essensial at level 2 : set()

Before removed
 coverage : [(0, 1048576), (1, 17179869184), (2, 17179869184), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, 134217728), (9, 1048576), (10, -1), (11, -1), (12, -1), (13, -1), (14, 67108864), (15, 33554432), (16, 1572864), (17, 2147483648), (18, 1073741824), (19, 524288), (20, 8388608), (21, 16777216), (22, 262144), (23, 134217728), (24, 1073741824), (25, 4194304), (26, 4294967296), (27, -1), (28, 4294967296), (29, 16384), (30, 32768), (31, -1), (32, 1048576), (33, 4194304), (34, -1), (35, 2147483648), (36, -1), (37, 4194304), (38, 134217728), (39, 16384), (40, 268435456), (41, 1073741824), (42, 524288), (43, 524288), (44, -1), (45, -1), (46, -1), (47, 67108864), (48, 16777216), (49, 67108864), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, 262144), (1, -1), (2, 4294967296), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, 134217728), (9, 1048576), (10, -1), (11, -1), (12, -1), (13, -1), (14, 16777216), (15, 8388608), (16, 393216), (17, 536870912), (18, 268435456), (19, 131072), (20, 2097152), (21, 4194304), (22, 65536), (23, 134217728), (24, 1073741824), (25, 1048576), (26, 1073741824), (27, -1), (28, 4294967296), (29, 16384), (30, 32768), (31, -1), (32, 1048576), (33, 4194304), (34, -1), (35, 2147483648), (36, -1), (37, 1048576), (38, 134217728), (39, 16384), (40, 67108864), (41, 268435456), (42, 524288), (43, 524288), (44, -1), (45, -1), (46, -1), (47, 67108864), (48, 16777216), (49, 67108864), (50, -1), (51, -1), (52, -1)]

Covered at level 2 : set()

After reduction : 
 pending  : [0, 2, 8, 9, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 28, 29, 30, 32, 33, 35, 37, 38, 39, 40, 41, 42, 43, 47, 48, 49]
 solution : [6, 1]


Solution : [6, 1] has cost 11.


Decide in level 2 among pending : [0, 2, 8, 9, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 28, 29, 30, 32, 33, 35, 37, 38, 39, 40, 41, 42, 43, 47, 48, 49]

Coverage : [(0, 262144), (1, -1), (2, 4294967296), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, 134217728), (9, 1048576), (10, -1), (11, -1), (12, -1), (13, -1), (14, 16777216), (15, 8388608), (16, 393216), (17, 536870912), (18, 268435456), (19, 131072), (20, 2097152), (21, 4194304), (22, 65536), (23, 134217728), (24, 1073741824), (25, 1048576), (26, 1073741824), (27, -1), (28, 4294967296), (29, 16384), (30, 32768), (31, -1), (32, 1048576), (33, 4194304), (34, -1), (35, 2147483648), (36, -1), (37, 1048576), (38, 134217728), (39, 16384), (40, 67108864), (41, 268435456), (42, 524288), (43, 524288), (44, -1), (45, -1), (46, -1), (47, 67108864), (48, 16777216), (49, 67108864), (50, -1), (51, -1), (52, -1)]

Decide 2 with phase True at level 2

After decision at level 2
 pending : [0, 8, 9, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 28, 29, 30, 32, 33, 35, 37, 38, 39, 40, 41, 42, 43, 47, 48, 49]
 solution : [6, 1, 2]


New level: 3
 pending : [0, 8, 9, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 28, 29, 30, 32, 33, 35, 37, 38, 39, 40, 41, 42, 43, 47, 48, 49]
 solution : [6, 1, 2]


Before reduction : 
 pending  : [0, 8, 9, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 28, 29, 30, 32, 33, 35, 37, 38, 39, 40, 41, 42, 43, 47, 48, 49]
 solution : [6, 1, 2]

Essensial at level 3 : set()

Before removed
 coverage : [(0, 262144), (1, -1), (2, 4294967296), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, 134217728), (9, 1048576), (10, -1), (11, -1), (12, -1), (13, -1), (14, 16777216), (15, 8388608), (16, 393216), (17, 536870912), (18, 268435456), (19, 131072), (20, 2097152), (21, 4194304), (22, 65536), (23, 134217728), (24, 1073741824), (25, 1048576), (26, 1073741824), (27, -1), (28, 4294967296), (29, 16384), (30, 32768), (31, -1), (32, 1048576), (33, 4194304), (34, -1), (35, 2147483648), (36, -1), (37, 1048576), (38, 134217728), (39, 16384), (40, 67108864), (41, 268435456), (42, 524288), (43, 524288), (44, -1), (45, -1), (46, -1), (47, 67108864), (48, 16777216), (49, 67108864), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, 131072), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, 67108864), (9, 524288), (10, -1), (11, -1), (12, -1), (13, -1), (14, 8388608), (15, 4194304), (16, 196608), (17, 268435456), (18, 134217728), (19, 65536), (20, 1048576), (21, 2097152), (22, 32768), (23, 67108864), (24, 268435456), (25, 524288), (26, 536870912), (27, -1), (28, 536870912), (29, 8192), (30, 8192), (31, -1), (32, 524288), (33, 1048576), (34, -1), (35, 536870912), (36, -1), (37, 524288), (38, 67108864), (39, 8192), (40, 33554432), (41, 134217728), (42, 262144), (43, 262144), (44, -1), (45, -1), (46, -1), (47, 33554432), (48, 8388608), (49, 33554432), (50, -1), (51, -1), (52, -1)]

Covered at level 3 : set()

After reduction : 
 pending  : [0, 8, 9, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 28, 29, 30, 32, 33, 35, 37, 38, 39, 40, 41, 42, 43, 47, 48, 49]
 solution : [6, 1, 2]


Solution : [6, 1, 2] has cost 14.


Decide in level 3 among pending : [0, 8, 9, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 28, 29, 30, 32, 33, 35, 37, 38, 39, 40, 41, 42, 43, 47, 48, 49]

Coverage : [(0, 131072), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, 67108864), (9, 524288), (10, -1), (11, -1), (12, -1), (13, -1), (14, 8388608), (15, 4194304), (16, 196608), (17, 268435456), (18, 134217728), (19, 65536), (20, 1048576), (21, 2097152), (22, 32768), (23, 67108864), (24, 268435456), (25, 524288), (26, 536870912), (27, -1), (28, 536870912), (29, 8192), (30, 8192), (31, -1), (32, 524288), (33, 1048576), (34, -1), (35, 536870912), (36, -1), (37, 524288), (38, 67108864), (39, 8192), (40, 33554432), (41, 134217728), (42, 262144), (43, 262144), (44, -1), (45, -1), (46, -1), (47, 33554432), (48, 8388608), (49, 33554432), (50, -1), (51, -1), (52, -1)]

Decide 26 with phase True at level 3

After decision at level 3
 pending : [0, 8, 9, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 28, 29, 30, 32, 33, 35, 37, 38, 39, 40, 41, 42, 43, 47, 48, 49]
 solution : [6, 1, 2, 26]


New level: 4
 pending : [0, 8, 9, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 28, 29, 30, 32, 33, 35, 37, 38, 39, 40, 41, 42, 43, 47, 48, 49]
 solution : [6, 1, 2, 26]


Before reduction : 
 pending  : [0, 8, 9, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 28, 29, 30, 32, 33, 35, 37, 38, 39, 40, 41, 42, 43, 47, 48, 49]
 solution : [6, 1, 2, 26]

Essensial at level 4 : set()

Before removed
 coverage : [(0, 131072), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, 67108864), (9, 524288), (10, -1), (11, -1), (12, -1), (13, -1), (14, 8388608), (15, 4194304), (16, 196608), (17, 268435456), (18, 134217728), (19, 65536), (20, 1048576), (21, 2097152), (22, 32768), (23, 67108864), (24, 268435456), (25, 524288), (26, 536870912), (27, -1), (28, 536870912), (29, 8192), (30, 8192), (31, -1), (32, 524288), (33, 1048576), (34, -1), (35, 536870912), (36, -1), (37, 524288), (38, 67108864), (39, 8192), (40, 33554432), (41, 134217728), (42, 262144), (43, 262144), (44, -1), (45, -1), (46, -1), (47, 33554432), (48, 8388608), (49, 33554432), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, 0), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, 67108864), (9, 131072), (10, -1), (11, -1), (12, -1), (13, -1), (14, 0), (15, 0), (16, 0), (17, 0), (18, 0), (19, 0), (20, 0), (21, 0), (22, 0), (23, 67108864), (24, 268435456), (25, 0), (26, -1), (27, -1), (28, 536870912), (29, 4096), (30, 8192), (31, -1), (32, 262144), (33, 1048576), (34, -1), (35, 536870912), (36, -1), (37, 0), (38, 33554432), (39, 2048), (40, 1024), (41, 2048), (42, 65536), (43, 65536), (44, -1), (45, -1), (46, -1), (47, 16777216), (48, 2097152), (49, 8388608), (50, -1), (51, -1), (52, -1)]

Covered at level 4 : {0, 37, 14, 15, 16, 17, 18, 19, 20, 21, 22, 25}

After reduction : 
 pending  : [8, 9, 23, 24, 28, 29, 30, 32, 33, 35, 38, 39, 40, 41, 42, 43, 47, 48, 49]
 solution : [6, 1, 2, 26]


Before reduction : 
 pending  : [8, 9, 23, 24, 28, 29, 30, 32, 33, 35, 38, 39, 40, 41, 42, 43, 47, 48, 49]
 solution : [6, 1, 2, 26]

Essensial at level 4 : set()

Before removed
 coverage : [(0, 0), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, 67108864), (9, 131072), (10, -1), (11, -1), (12, -1), (13, -1), (14, 0), (15, 0), (16, 0), (17, 0), (18, 0), (19, 0), (20, 0), (21, 0), (22, 0), (23, 67108864), (24, 268435456), (25, 0), (26, -1), (27, -1), (28, 536870912), (29, 4096), (30, 8192), (31, -1), (32, 262144), (33, 1048576), (34, -1), (35, 536870912), (36, -1), (37, 0), (38, 33554432), (39, 2048), (40, 1024), (41, 2048), (42, 65536), (43, 65536), (44, -1), (45, -1), (46, -1), (47, 16777216), (48, 2097152), (49, 8388608), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, 67108864), (9, 131072), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, 67108864), (24, 268435456), (25, -1), (26, -1), (27, -1), (28, 536870912), (29, 4096), (30, 8192), (31, -1), (32, 262144), (33, 1048576), (34, -1), (35, 536870912), (36, -1), (37, -1), (38, 33554432), (39, 2048), (40, 1024), (41, 2048), (42, 65536), (43, 65536), (44, -1), (45, -1), (46, -1), (47, 16777216), (48, 2097152), (49, 8388608), (50, -1), (51, -1), (52, -1)]

Covered at level 4 : set()

After reduction : 
 pending  : [8, 9, 23, 24, 28, 29, 30, 32, 33, 35, 38, 39, 40, 41, 42, 43, 47, 48, 49]
 solution : [6, 1, 2, 26]


Solution : [6, 1, 2, 26] has cost 18.


Decide in level 4 among pending : [8, 9, 23, 24, 28, 29, 30, 32, 33, 35, 38, 39, 40, 41, 42, 43, 47, 48, 49]

Coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, 67108864), (9, 131072), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, 67108864), (24, 268435456), (25, -1), (26, -1), (27, -1), (28, 536870912), (29, 4096), (30, 8192), (31, -1), (32, 262144), (33, 1048576), (34, -1), (35, 536870912), (36, -1), (37, -1), (38, 33554432), (39, 2048), (40, 1024), (41, 2048), (42, 65536), (43, 65536), (44, -1), (45, -1), (46, -1), (47, 16777216), (48, 2097152), (49, 8388608), (50, -1), (51, -1), (52, -1)]

Decide 28 with phase True at level 4

After decision at level 4
 pending : [8, 9, 23, 24, 29, 30, 32, 33, 35, 38, 39, 40, 41, 42, 43, 47, 48, 49]
 solution : [6, 1, 2, 26, 28]


New level: 5
 pending : [8, 9, 23, 24, 29, 30, 32, 33, 35, 38, 39, 40, 41, 42, 43, 47, 48, 49]
 solution : [6, 1, 2, 26, 28]


Before reduction : 
 pending  : [8, 9, 23, 24, 29, 30, 32, 33, 35, 38, 39, 40, 41, 42, 43, 47, 48, 49]
 solution : [6, 1, 2, 26, 28]

Essensial at level 5 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, 67108864), (9, 131072), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, 67108864), (24, 268435456), (25, -1), (26, -1), (27, -1), (28, 536870912), (29, 4096), (30, 8192), (31, -1), (32, 262144), (33, 1048576), (34, -1), (35, 536870912), (36, -1), (37, -1), (38, 33554432), (39, 2048), (40, 1024), (41, 2048), (42, 65536), (43, 65536), (44, -1), (45, -1), (46, -1), (47, 16777216), (48, 2097152), (49, 8388608), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, 67108864), (9, 131072), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, 67108864), (24, 134217728), (25, -1), (26, -1), (27, -1), (28, -1), (29, 4096), (30, 4096), (31, -1), (32, 262144), (33, 524288), (34, -1), (35, 268435456), (36, -1), (37, -1), (38, 33554432), (39, 2048), (40, 1024), (41, 2048), (42, 65536), (43, 65536), (44, -1), (45, -1), (46, -1), (47, 16777216), (48, 2097152), (49, 8388608), (50, -1), (51, -1), (52, -1)]

Covered at level 5 : set()

After reduction : 
 pending  : [8, 9, 23, 24, 29, 30, 32, 33, 35, 38, 39, 40, 41, 42, 43, 47, 48, 49]
 solution : [6, 1, 2, 26, 28]


Solution : [6, 1, 2, 26, 28] has cost 22.


Decide in level 5 among pending : [8, 9, 23, 24, 29, 30, 32, 33, 35, 38, 39, 40, 41, 42, 43, 47, 48, 49]

Coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, 67108864), (9, 131072), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, 67108864), (24, 134217728), (25, -1), (26, -1), (27, -1), (28, -1), (29, 4096), (30, 4096), (31, -1), (32, 262144), (33, 524288), (34, -1), (35, 268435456), (36, -1), (37, -1), (38, 33554432), (39, 2048), (40, 1024), (41, 2048), (42, 65536), (43, 65536), (44, -1), (45, -1), (46, -1), (47, 16777216), (48, 2097152), (49, 8388608), (50, -1), (51, -1), (52, -1)]

Decide 35 with phase True at level 5

After decision at level 5
 pending : [8, 9, 23, 24, 29, 30, 32, 33, 38, 39, 40, 41, 42, 43, 47, 48, 49]
 solution : [6, 1, 2, 26, 28, 35]


New level: 6
 pending : [8, 9, 23, 24, 29, 30, 32, 33, 38, 39, 40, 41, 42, 43, 47, 48, 49]
 solution : [6, 1, 2, 26, 28, 35]


Before reduction : 
 pending  : [8, 9, 23, 24, 29, 30, 32, 33, 38, 39, 40, 41, 42, 43, 47, 48, 49]
 solution : [6, 1, 2, 26, 28, 35]

Essensial at level 6 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, 67108864), (9, 131072), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, 67108864), (24, 134217728), (25, -1), (26, -1), (27, -1), (28, -1), (29, 4096), (30, 4096), (31, -1), (32, 262144), (33, 524288), (34, -1), (35, 268435456), (36, -1), (37, -1), (38, 33554432), (39, 2048), (40, 1024), (41, 2048), (42, 65536), (43, 65536), (44, -1), (45, -1), (46, -1), (47, 16777216), (48, 2097152), (49, 8388608), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, 67108864), (9, 32768), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, 67108864), (24, 2048), (25, -1), (26, -1), (27, -1), (28, -1), (29, 1024), (30, 0), (31, -1), (32, 65536), (33, 0), (34, -1), (35, -1), (36, -1), (37, -1), (38, 8388608), (39, 512), (40, 512), (41, 0), (42, 16384), (43, 16384), (44, -1), (45, -1), (46, -1), (47, 4194304), (48, 524288), (49, 2097152), (50, -1), (51, -1), (52, -1)]

Covered at level 6 : {33, 30, 41}

After reduction : 
 pending  : [8, 9, 23, 24, 29, 32, 38, 39, 40, 42, 43, 47, 48, 49]
 solution : [6, 1, 2, 26, 28, 35]


Before reduction : 
 pending  : [8, 9, 23, 24, 29, 32, 38, 39, 40, 42, 43, 47, 48, 49]
 solution : [6, 1, 2, 26, 28, 35]

Essensial at level 6 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, 67108864), (9, 32768), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, 67108864), (24, 2048), (25, -1), (26, -1), (27, -1), (28, -1), (29, 1024), (30, 0), (31, -1), (32, 65536), (33, 0), (34, -1), (35, -1), (36, -1), (37, -1), (38, 8388608), (39, 512), (40, 512), (41, 0), (42, 16384), (43, 16384), (44, -1), (45, -1), (46, -1), (47, 4194304), (48, 524288), (49, 2097152), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, 67108864), (9, 32768), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, 67108864), (24, 2048), (25, -1), (26, -1), (27, -1), (28, -1), (29, 1024), (30, -1), (31, -1), (32, 65536), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, 8388608), (39, 512), (40, 512), (41, -1), (42, 16384), (43, 16384), (44, -1), (45, -1), (46, -1), (47, 4194304), (48, 524288), (49, 2097152), (50, -1), (51, -1), (52, -1)]

Covered at level 6 : set()

After reduction : 
 pending  : [8, 9, 23, 24, 29, 32, 38, 39, 40, 42, 43, 47, 48, 49]
 solution : [6, 1, 2, 26, 28, 35]


Solution : [6, 1, 2, 26, 28, 35] has cost 35.


Decide in level 6 among pending : [8, 9, 23, 24, 29, 32, 38, 39, 40, 42, 43, 47, 48, 49]

Coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, 67108864), (9, 32768), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, 67108864), (24, 2048), (25, -1), (26, -1), (27, -1), (28, -1), (29, 1024), (30, -1), (31, -1), (32, 65536), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, 8388608), (39, 512), (40, 512), (41, -1), (42, 16384), (43, 16384), (44, -1), (45, -1), (46, -1), (47, 4194304), (48, 524288), (49, 2097152), (50, -1), (51, -1), (52, -1)]

Decide 8 with phase True at level 6

After decision at level 6
 pending : [9, 23, 24, 29, 32, 38, 39, 40, 42, 43, 47, 48, 49]
 solution : [6, 1, 2, 26, 28, 35, 8]


New level: 7
 pending : [9, 23, 24, 29, 32, 38, 39, 40, 42, 43, 47, 48, 49]
 solution : [6, 1, 2, 26, 28, 35, 8]


Before reduction : 
 pending  : [9, 23, 24, 29, 32, 38, 39, 40, 42, 43, 47, 48, 49]
 solution : [6, 1, 2, 26, 28, 35, 8]

Essensial at level 7 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, 67108864), (9, 32768), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, 67108864), (24, 2048), (25, -1), (26, -1), (27, -1), (28, -1), (29, 1024), (30, -1), (31, -1), (32, 65536), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, 8388608), (39, 512), (40, 512), (41, -1), (42, 16384), (43, 16384), (44, -1), (45, -1), (46, -1), (47, 4194304), (48, 524288), (49, 2097152), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, 0), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, 0), (24, 0), (25, -1), (26, -1), (27, -1), (28, -1), (29, 0), (30, -1), (31, -1), (32, 0), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, 0), (39, 0), (40, 0), (41, -1), (42, 0), (43, 0), (44, -1), (45, -1), (46, -1), (47, 0), (48, 0), (49, 0), (50, -1), (51, -1), (52, -1)]

Covered at level 7 : {32, 38, 39, 40, 9, 42, 43, 47, 48, 49, 23, 24, 29}

After reduction : 
 pending  : []
 solution : [6, 1, 2, 26, 28, 35, 8]


Before reduction : 
 pending  : []
 solution : [6, 1, 2, 26, 28, 35, 8]

Essensial at level 7 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, 0), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, 0), (24, 0), (25, -1), (26, -1), (27, -1), (28, -1), (29, 0), (30, -1), (31, -1), (32, 0), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, 0), (39, 0), (40, 0), (41, -1), (42, 0), (43, 0), (44, -1), (45, -1), (46, -1), (47, 0), (48, 0), (49, 0), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 7 : set()

After reduction : 
 pending  : []
 solution : [6, 1, 2, 26, 28, 35, 8]


Solution : [6, 1, 2, 26, 28, 35, 8] has cost 39.


Before backtrack at level 7
 pending : []
 solution : [6, 1, 2, 26, 28, 35, 8]

After backtrack at level 7
 pending : [9, 23, 24, 29, 32, 38, 39, 40, 42, 43, 47, 48, 49]
 solution : [6, 1, 2, 26, 28, 35, 8]


Invert decision for 8 at level 6


New level: 7
 pending : [9, 23, 24, 29, 32, 38, 39, 40, 42, 43, 47, 48, 49]
 solution : [6, 1, 2, 26, 28, 35]


Before reduction : 
 pending  : [9, 23, 24, 29, 32, 38, 39, 40, 42, 43, 47, 48, 49]
 solution : [6, 1, 2, 26, 28, 35]

Essensial at level 7 : {23}

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, 0), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, 0), (25, -1), (26, -1), (27, -1), (28, -1), (29, 0), (30, -1), (31, -1), (32, 0), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, 0), (39, 0), (40, 0), (41, -1), (42, 0), (43, 0), (44, -1), (45, -1), (46, -1), (47, 0), (48, 0), (49, 0), (50, -1), (51, -1), (52, -1)]

Covered at level 7 : {32, 38, 39, 40, 9, 42, 43, 47, 48, 49, 24, 29}

After reduction : 
 pending  : []
 solution : [6, 1, 2, 26, 28, 35, 23]


Before reduction : 
 pending  : []
 solution : [6, 1, 2, 26, 28, 35, 23]

Essensial at level 7 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, 0), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, 0), (25, -1), (26, -1), (27, -1), (28, -1), (29, 0), (30, -1), (31, -1), (32, 0), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, 0), (39, 0), (40, 0), (41, -1), (42, 0), (43, 0), (44, -1), (45, -1), (46, -1), (47, 0), (48, 0), (49, 0), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 7 : set()

After reduction : 
 pending  : []
 solution : [6, 1, 2, 26, 28, 35, 23]


Solution : [6, 1, 2, 26, 28, 35, 23] has cost 42.


Before backtrack at level 7
 pending : []
 solution : [6, 1, 2, 26, 28, 35, 23]

After backtrack at level 7
 pending : [23, 9, 24, 29, 32, 38, 39, 40, 42, 43, 47, 48, 49]
 solution : [6, 1, 2, 26, 28, 35]


Before backtrack at level 6
 pending : [23, 9, 24, 29, 32, 38, 39, 40, 42, 43, 47, 48, 49]
 solution : [6, 1, 2, 26, 28, 35]

After backtrack at level 6
 pending : [23, 9, 24, 29, 32, 38, 39, 40, 42, 43, 47, 48, 49, 30, 33, 41, 8]
 solution : [6, 1, 2, 26, 28, 35]


Invert decision for 35 at level 5


New level: 6
 pending : [23, 9, 24, 29, 32, 38, 39, 40, 42, 43, 47, 48, 49, 30, 33, 41, 8]
 solution : [6, 1, 2, 26, 28]


Before reduction : 
 pending  : [23, 9, 24, 29, 32, 38, 39, 40, 42, 43, 47, 48, 49, 30, 33, 41, 8]
 solution : [6, 1, 2, 26, 28]

Essensial at level 6 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, 67108864), (9, 131072), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, 67108864), (24, 134217728), (25, -1), (26, -1), (27, -1), (28, -1), (29, 4096), (30, 4096), (31, -1), (32, 262144), (33, 524288), (34, -1), (35, -1), (36, -1), (37, -1), (38, 33554432), (39, 2048), (40, 1024), (41, 2048), (42, 65536), (43, 65536), (44, -1), (45, -1), (46, -1), (47, 16777216), (48, 2097152), (49, 8388608), (50, -1), (51, -1), (52, -1)]

Covered at level 6 : set()

After reduction : 
 pending  : [23, 9, 24, 29, 32, 38, 39, 40, 42, 43, 47, 48, 49, 30, 33, 41, 8]
 solution : [6, 1, 2, 26, 28]


Solution : [6, 1, 2, 26, 28] has cost 22.


Decide in level 6 among pending : [23, 9, 24, 29, 32, 38, 39, 40, 42, 43, 47, 48, 49, 30, 33, 41, 8]

Coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, 67108864), (9, 131072), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, 67108864), (24, 134217728), (25, -1), (26, -1), (27, -1), (28, -1), (29, 4096), (30, 4096), (31, -1), (32, 262144), (33, 524288), (34, -1), (35, -1), (36, -1), (37, -1), (38, 33554432), (39, 2048), (40, 1024), (41, 2048), (42, 65536), (43, 65536), (44, -1), (45, -1), (46, -1), (47, 16777216), (48, 2097152), (49, 8388608), (50, -1), (51, -1), (52, -1)]

Decide 24 with phase True at level 6

After decision at level 6
 pending : [23, 9, 29, 32, 38, 39, 40, 42, 43, 47, 48, 49, 30, 33, 41, 8]
 solution : [6, 1, 2, 26, 28, 24]


New level: 7
 pending : [23, 9, 29, 32, 38, 39, 40, 42, 43, 47, 48, 49, 30, 33, 41, 8]
 solution : [6, 1, 2, 26, 28, 24]


Before reduction : 
 pending  : [23, 9, 29, 32, 38, 39, 40, 42, 43, 47, 48, 49, 30, 33, 41, 8]
 solution : [6, 1, 2, 26, 28, 24]

Essensial at level 7 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, 67108864), (9, 131072), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, 67108864), (24, 134217728), (25, -1), (26, -1), (27, -1), (28, -1), (29, 4096), (30, 4096), (31, -1), (32, 262144), (33, 524288), (34, -1), (35, -1), (36, -1), (37, -1), (38, 33554432), (39, 2048), (40, 1024), (41, 2048), (42, 65536), (43, 65536), (44, -1), (45, -1), (46, -1), (47, 16777216), (48, 2097152), (49, 8388608), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, 16777216), (9, 32768), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, 16777216), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, 1024), (30, 0), (31, -1), (32, 65536), (33, 0), (34, -1), (35, -1), (36, -1), (37, -1), (38, 16777216), (39, 512), (40, 512), (41, 0), (42, 16384), (43, 16384), (44, -1), (45, -1), (46, -1), (47, 8388608), (48, 524288), (49, 8388608), (50, -1), (51, -1), (52, -1)]

Covered at level 7 : {33, 30, 41}

After reduction : 
 pending  : [23, 9, 29, 32, 38, 39, 40, 42, 43, 47, 48, 49, 8]
 solution : [6, 1, 2, 26, 28, 24]


Before reduction : 
 pending  : [23, 9, 29, 32, 38, 39, 40, 42, 43, 47, 48, 49, 8]
 solution : [6, 1, 2, 26, 28, 24]

Essensial at level 7 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, 16777216), (9, 32768), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, 16777216), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, 1024), (30, 0), (31, -1), (32, 65536), (33, 0), (34, -1), (35, -1), (36, -1), (37, -1), (38, 16777216), (39, 512), (40, 512), (41, 0), (42, 16384), (43, 16384), (44, -1), (45, -1), (46, -1), (47, 8388608), (48, 524288), (49, 8388608), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, 16777216), (9, 32768), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, 16777216), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, 1024), (30, -1), (31, -1), (32, 65536), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, 16777216), (39, 512), (40, 512), (41, -1), (42, 16384), (43, 16384), (44, -1), (45, -1), (46, -1), (47, 8388608), (48, 524288), (49, 8388608), (50, -1), (51, -1), (52, -1)]

Covered at level 7 : set()

After reduction : 
 pending  : [23, 9, 29, 32, 38, 39, 40, 42, 43, 47, 48, 49, 8]
 solution : [6, 1, 2, 26, 28, 24]


Solution : [6, 1, 2, 26, 28, 24] has cost 29.


Decide in level 7 among pending : [23, 9, 29, 32, 38, 39, 40, 42, 43, 47, 48, 49, 8]

Coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, 16777216), (9, 32768), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, 16777216), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, 1024), (30, -1), (31, -1), (32, 65536), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, 16777216), (39, 512), (40, 512), (41, -1), (42, 16384), (43, 16384), (44, -1), (45, -1), (46, -1), (47, 8388608), (48, 524288), (49, 8388608), (50, -1), (51, -1), (52, -1)]

Decide 23 with phase True at level 7

After decision at level 7
 pending : [9, 29, 32, 38, 39, 40, 42, 43, 47, 48, 49, 8]
 solution : [6, 1, 2, 26, 28, 24, 23]


New level: 8
 pending : [9, 29, 32, 38, 39, 40, 42, 43, 47, 48, 49, 8]
 solution : [6, 1, 2, 26, 28, 24, 23]


Before reduction : 
 pending  : [9, 29, 32, 38, 39, 40, 42, 43, 47, 48, 49, 8]
 solution : [6, 1, 2, 26, 28, 24, 23]

Essensial at level 8 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, 16777216), (9, 32768), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, 16777216), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, 1024), (30, -1), (31, -1), (32, 65536), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, 16777216), (39, 512), (40, 512), (41, -1), (42, 16384), (43, 16384), (44, -1), (45, -1), (46, -1), (47, 8388608), (48, 524288), (49, 8388608), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, 0), (9, 0), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, 0), (30, -1), (31, -1), (32, 0), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, 0), (39, 0), (40, 0), (41, -1), (42, 0), (43, 0), (44, -1), (45, -1), (46, -1), (47, 0), (48, 0), (49, 0), (50, -1), (51, -1), (52, -1)]

Covered at level 8 : {32, 38, 39, 40, 9, 42, 43, 8, 47, 48, 49, 29}

After reduction : 
 pending  : []
 solution : [6, 1, 2, 26, 28, 24, 23]


Before reduction : 
 pending  : []
 solution : [6, 1, 2, 26, 28, 24, 23]

Essensial at level 8 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, 0), (9, 0), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, 0), (30, -1), (31, -1), (32, 0), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, 0), (39, 0), (40, 0), (41, -1), (42, 0), (43, 0), (44, -1), (45, -1), (46, -1), (47, 0), (48, 0), (49, 0), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 8 : set()

After reduction : 
 pending  : []
 solution : [6, 1, 2, 26, 28, 24, 23]


Solution : [6, 1, 2, 26, 28, 24, 23] has cost 36.


Before backtrack at level 8
 pending : []
 solution : [6, 1, 2, 26, 28, 24, 23]

After backtrack at level 8
 pending : [9, 29, 32, 38, 39, 40, 42, 43, 47, 48, 49, 8]
 solution : [6, 1, 2, 26, 28, 24, 23]


Invert decision for 23 at level 7


New level: 8
 pending : [9, 29, 32, 38, 39, 40, 42, 43, 47, 48, 49, 8]
 solution : [6, 1, 2, 26, 28, 24]


Before reduction : 
 pending  : [9, 29, 32, 38, 39, 40, 42, 43, 47, 48, 49, 8]
 solution : [6, 1, 2, 26, 28, 24]

Essensial at level 8 : {8}

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, 0), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, 0), (30, -1), (31, -1), (32, 0), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, 0), (39, 0), (40, 0), (41, -1), (42, 0), (43, 0), (44, -1), (45, -1), (46, -1), (47, 0), (48, 0), (49, 0), (50, -1), (51, -1), (52, -1)]

Covered at level 8 : {32, 38, 39, 40, 9, 42, 43, 47, 48, 49, 29}

After reduction : 
 pending  : []
 solution : [6, 1, 2, 26, 28, 24, 8]


Before reduction : 
 pending  : []
 solution : [6, 1, 2, 26, 28, 24, 8]

Essensial at level 8 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, 0), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, 0), (30, -1), (31, -1), (32, 0), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, 0), (39, 0), (40, 0), (41, -1), (42, 0), (43, 0), (44, -1), (45, -1), (46, -1), (47, 0), (48, 0), (49, 0), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 8 : set()

After reduction : 
 pending  : []
 solution : [6, 1, 2, 26, 28, 24, 8]


Solution : [6, 1, 2, 26, 28, 24, 8] has cost 33.


Before backtrack at level 8
 pending : []
 solution : [6, 1, 2, 26, 28, 24, 8]

After backtrack at level 8
 pending : [8, 9, 29, 32, 38, 39, 40, 42, 43, 47, 48, 49]
 solution : [6, 1, 2, 26, 28, 24]


Before backtrack at level 7
 pending : [8, 9, 29, 32, 38, 39, 40, 42, 43, 47, 48, 49]
 solution : [6, 1, 2, 26, 28, 24]

After backtrack at level 7
 pending : [8, 9, 29, 32, 38, 39, 40, 42, 43, 47, 48, 49, 30, 33, 41, 23]
 solution : [6, 1, 2, 26, 28, 24]


Invert decision for 24 at level 6


New level: 7
 pending : [8, 9, 29, 32, 38, 39, 40, 42, 43, 47, 48, 49, 30, 33, 41, 23]
 solution : [6, 1, 2, 26, 28]


Before reduction : 
 pending  : [8, 9, 29, 32, 38, 39, 40, 42, 43, 47, 48, 49, 30, 33, 41, 23]
 solution : [6, 1, 2, 26, 28]

Essensial at level 7 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, 67108864), (9, 131072), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, 67108864), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, 4096), (30, 4096), (31, -1), (32, 262144), (33, 524288), (34, -1), (35, -1), (36, -1), (37, -1), (38, 33554432), (39, 2048), (40, 1024), (41, 2048), (42, 65536), (43, 65536), (44, -1), (45, -1), (46, -1), (47, 16777216), (48, 2097152), (49, 8388608), (50, -1), (51, -1), (52, -1)]

Covered at level 7 : set()

After reduction : 
 pending  : [8, 9, 29, 32, 38, 39, 40, 42, 43, 47, 48, 49, 30, 33, 41, 23]
 solution : [6, 1, 2, 26, 28]


Solution : [6, 1, 2, 26, 28] has cost 22.


Decide in level 7 among pending : [8, 9, 29, 32, 38, 39, 40, 42, 43, 47, 48, 49, 30, 33, 41, 23]

Coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, 67108864), (9, 131072), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, 67108864), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, 4096), (30, 4096), (31, -1), (32, 262144), (33, 524288), (34, -1), (35, -1), (36, -1), (37, -1), (38, 33554432), (39, 2048), (40, 1024), (41, 2048), (42, 65536), (43, 65536), (44, -1), (45, -1), (46, -1), (47, 16777216), (48, 2097152), (49, 8388608), (50, -1), (51, -1), (52, -1)]

Decide 8 with phase True at level 7

After decision at level 7
 pending : [9, 29, 32, 38, 39, 40, 42, 43, 47, 48, 49, 30, 33, 41, 23]
 solution : [6, 1, 2, 26, 28, 8]


New level: 8
 pending : [9, 29, 32, 38, 39, 40, 42, 43, 47, 48, 49, 30, 33, 41, 23]
 solution : [6, 1, 2, 26, 28, 8]


Before reduction : 
 pending  : [9, 29, 32, 38, 39, 40, 42, 43, 47, 48, 49, 30, 33, 41, 23]
 solution : [6, 1, 2, 26, 28, 8]

Essensial at level 8 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, 67108864), (9, 131072), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, 67108864), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, 4096), (30, 4096), (31, -1), (32, 262144), (33, 524288), (34, -1), (35, -1), (36, -1), (37, -1), (38, 33554432), (39, 2048), (40, 1024), (41, 2048), (42, 65536), (43, 65536), (44, -1), (45, -1), (46, -1), (47, 16777216), (48, 2097152), (49, 8388608), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, 0), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, 0), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, 0), (30, 0), (31, -1), (32, 0), (33, 0), (34, -1), (35, -1), (36, -1), (37, -1), (38, 0), (39, 0), (40, 0), (41, 0), (42, 0), (43, 0), (44, -1), (45, -1), (46, -1), (47, 0), (48, 0), (49, 0), (50, -1), (51, -1), (52, -1)]

Covered at level 8 : {32, 33, 38, 39, 40, 9, 42, 43, 41, 47, 48, 49, 23, 29, 30}

After reduction : 
 pending  : []
 solution : [6, 1, 2, 26, 28, 8]


Before reduction : 
 pending  : []
 solution : [6, 1, 2, 26, 28, 8]

Essensial at level 8 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, 0), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, 0), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, 0), (30, 0), (31, -1), (32, 0), (33, 0), (34, -1), (35, -1), (36, -1), (37, -1), (38, 0), (39, 0), (40, 0), (41, 0), (42, 0), (43, 0), (44, -1), (45, -1), (46, -1), (47, 0), (48, 0), (49, 0), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 8 : set()

After reduction : 
 pending  : []
 solution : [6, 1, 2, 26, 28, 8]


Solution : [6, 1, 2, 26, 28, 8] has cost 26.


Before backtrack at level 8
 pending : []
 solution : [6, 1, 2, 26, 28, 8]

After backtrack at level 8
 pending : [9, 29, 32, 38, 39, 40, 42, 43, 47, 48, 49, 30, 33, 41, 23]
 solution : [6, 1, 2, 26, 28, 8]


Invert decision for 8 at level 7


New level: 8
 pending : [9, 29, 32, 38, 39, 40, 42, 43, 47, 48, 49, 30, 33, 41, 23]
 solution : [6, 1, 2, 26, 28]


Before reduction : 
 pending  : [9, 29, 32, 38, 39, 40, 42, 43, 47, 48, 49, 30, 33, 41, 23]
 solution : [6, 1, 2, 26, 28]

Essensial at level 8 : {23}

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, 0), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, 0), (30, 0), (31, -1), (32, 0), (33, 0), (34, -1), (35, -1), (36, -1), (37, -1), (38, 0), (39, 0), (40, 0), (41, 0), (42, 0), (43, 0), (44, -1), (45, -1), (46, -1), (47, 0), (48, 0), (49, 0), (50, -1), (51, -1), (52, -1)]

Covered at level 8 : {32, 33, 38, 39, 40, 9, 42, 43, 41, 47, 48, 49, 29, 30}

After reduction : 
 pending  : []
 solution : [6, 1, 2, 26, 28, 23]


Before reduction : 
 pending  : []
 solution : [6, 1, 2, 26, 28, 23]

Essensial at level 8 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, 0), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, 0), (30, 0), (31, -1), (32, 0), (33, 0), (34, -1), (35, -1), (36, -1), (37, -1), (38, 0), (39, 0), (40, 0), (41, 0), (42, 0), (43, 0), (44, -1), (45, -1), (46, -1), (47, 0), (48, 0), (49, 0), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 8 : set()

After reduction : 
 pending  : []
 solution : [6, 1, 2, 26, 28, 23]


Solution : [6, 1, 2, 26, 28, 23] has cost 29.


Before backtrack at level 8
 pending : []
 solution : [6, 1, 2, 26, 28, 23]

After backtrack at level 8
 pending : [23, 9, 29, 32, 38, 39, 40, 42, 43, 47, 48, 49, 30, 33, 41]
 solution : [6, 1, 2, 26, 28]


Before backtrack at level 7
 pending : [23, 9, 29, 32, 38, 39, 40, 42, 43, 47, 48, 49, 30, 33, 41]
 solution : [6, 1, 2, 26, 28]

After backtrack at level 7
 pending : [23, 9, 29, 32, 38, 39, 40, 42, 43, 47, 48, 49, 30, 33, 41, 8]
 solution : [6, 1, 2, 26, 28]


Before backtrack at level 6
 pending : [23, 9, 29, 32, 38, 39, 40, 42, 43, 47, 48, 49, 30, 33, 41, 8]
 solution : [6, 1, 2, 26, 28]

After backtrack at level 6
 pending : [23, 9, 29, 32, 38, 39, 40, 42, 43, 47, 48, 49, 30, 33, 41, 8, 24]
 solution : [6, 1, 2, 26, 28]


Before backtrack at level 5
 pending : [23, 9, 29, 32, 38, 39, 40, 42, 43, 47, 48, 49, 30, 33, 41, 8, 24]
 solution : [6, 1, 2, 26, 28]

After backtrack at level 5
 pending : [23, 9, 29, 32, 38, 39, 40, 42, 43, 47, 48, 49, 30, 33, 41, 8, 24, 35]
 solution : [6, 1, 2, 26, 28]


Invert decision for 28 at level 4


New level: 5
 pending : [23, 9, 29, 32, 38, 39, 40, 42, 43, 47, 48, 49, 30, 33, 41, 8, 24, 35]
 solution : [6, 1, 2, 26]


Before reduction : 
 pending  : [23, 9, 29, 32, 38, 39, 40, 42, 43, 47, 48, 49, 30, 33, 41, 8, 24, 35]
 solution : [6, 1, 2, 26]

Essensial at level 5 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, 67108864), (9, 131072), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, 67108864), (24, 268435456), (25, -1), (26, -1), (27, -1), (28, -1), (29, 4096), (30, 8192), (31, -1), (32, 262144), (33, 1048576), (34, -1), (35, 536870912), (36, -1), (37, -1), (38, 33554432), (39, 2048), (40, 1024), (41, 2048), (42, 65536), (43, 65536), (44, -1), (45, -1), (46, -1), (47, 16777216), (48, 2097152), (49, 8388608), (50, -1), (51, -1), (52, -1)]

Covered at level 5 : set()

After reduction : 
 pending  : [23, 9, 29, 32, 38, 39, 40, 42, 43, 47, 48, 49, 30, 33, 41, 8, 24, 35]
 solution : [6, 1, 2, 26]


Solution : [6, 1, 2, 26] has cost 18.


Decide in level 5 among pending : [23, 9, 29, 32, 38, 39, 40, 42, 43, 47, 48, 49, 30, 33, 41, 8, 24, 35]

Coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, 67108864), (9, 131072), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, 67108864), (24, 268435456), (25, -1), (26, -1), (27, -1), (28, -1), (29, 4096), (30, 8192), (31, -1), (32, 262144), (33, 1048576), (34, -1), (35, 536870912), (36, -1), (37, -1), (38, 33554432), (39, 2048), (40, 1024), (41, 2048), (42, 65536), (43, 65536), (44, -1), (45, -1), (46, -1), (47, 16777216), (48, 2097152), (49, 8388608), (50, -1), (51, -1), (52, -1)]

Decide 35 with phase True at level 5

After decision at level 5
 pending : [23, 9, 29, 32, 38, 39, 40, 42, 43, 47, 48, 49, 30, 33, 41, 8, 24]
 solution : [6, 1, 2, 26, 35]


New level: 6
 pending : [23, 9, 29, 32, 38, 39, 40, 42, 43, 47, 48, 49, 30, 33, 41, 8, 24]
 solution : [6, 1, 2, 26, 35]


Before reduction : 
 pending  : [23, 9, 29, 32, 38, 39, 40, 42, 43, 47, 48, 49, 30, 33, 41, 8, 24]
 solution : [6, 1, 2, 26, 35]

Essensial at level 6 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, 67108864), (9, 131072), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, 67108864), (24, 268435456), (25, -1), (26, -1), (27, -1), (28, -1), (29, 4096), (30, 8192), (31, -1), (32, 262144), (33, 1048576), (34, -1), (35, 536870912), (36, -1), (37, -1), (38, 33554432), (39, 2048), (40, 1024), (41, 2048), (42, 65536), (43, 65536), (44, -1), (45, -1), (46, -1), (47, 16777216), (48, 2097152), (49, 8388608), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, 67108864), (9, 32768), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, 67108864), (24, 4096), (25, -1), (26, -1), (27, -1), (28, -1), (29, 1024), (30, 0), (31, -1), (32, 65536), (33, 0), (34, -1), (35, -1), (36, -1), (37, -1), (38, 8388608), (39, 512), (40, 512), (41, 0), (42, 16384), (43, 16384), (44, -1), (45, -1), (46, -1), (47, 4194304), (48, 524288), (49, 2097152), (50, -1), (51, -1), (52, -1)]

Covered at level 6 : {33, 30, 41}

After reduction : 
 pending  : [23, 9, 29, 32, 38, 39, 40, 42, 43, 47, 48, 49, 8, 24]
 solution : [6, 1, 2, 26, 35]


Before reduction : 
 pending  : [23, 9, 29, 32, 38, 39, 40, 42, 43, 47, 48, 49, 8, 24]
 solution : [6, 1, 2, 26, 35]

Essensial at level 6 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, 67108864), (9, 32768), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, 67108864), (24, 4096), (25, -1), (26, -1), (27, -1), (28, -1), (29, 1024), (30, 0), (31, -1), (32, 65536), (33, 0), (34, -1), (35, -1), (36, -1), (37, -1), (38, 8388608), (39, 512), (40, 512), (41, 0), (42, 16384), (43, 16384), (44, -1), (45, -1), (46, -1), (47, 4194304), (48, 524288), (49, 2097152), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, 67108864), (9, 32768), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, 67108864), (24, 4096), (25, -1), (26, -1), (27, -1), (28, -1), (29, 1024), (30, -1), (31, -1), (32, 65536), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, 8388608), (39, 512), (40, 512), (41, -1), (42, 16384), (43, 16384), (44, -1), (45, -1), (46, -1), (47, 4194304), (48, 524288), (49, 2097152), (50, -1), (51, -1), (52, -1)]

Covered at level 6 : set()

After reduction : 
 pending  : [23, 9, 29, 32, 38, 39, 40, 42, 43, 47, 48, 49, 8, 24]
 solution : [6, 1, 2, 26, 35]


Solution : [6, 1, 2, 26, 35] has cost 31.


Before backtrack at level 6
 pending : [23, 9, 29, 32, 38, 39, 40, 42, 43, 47, 48, 49, 8, 24]
 solution : [6, 1, 2, 26, 35]

After backtrack at level 6
 pending : [23, 9, 29, 32, 38, 39, 40, 42, 43, 47, 48, 49, 8, 24, 30, 33, 41]
 solution : [6, 1, 2, 26, 35]


Invert decision for 35 at level 5


New level: 6
 pending : [23, 9, 29, 32, 38, 39, 40, 42, 43, 47, 48, 49, 8, 24, 30, 33, 41]
 solution : [6, 1, 2, 26]


Before reduction : 
 pending  : [23, 9, 29, 32, 38, 39, 40, 42, 43, 47, 48, 49, 8, 24, 30, 33, 41]
 solution : [6, 1, 2, 26]

Essensial at level 6 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, 67108864), (9, 32768), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, 67108864), (24, 4096), (25, -1), (26, -1), (27, -1), (28, -1), (29, 1024), (30, -1), (31, -1), (32, 65536), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, 8388608), (39, 512), (40, 512), (41, -1), (42, 16384), (43, 16384), (44, -1), (45, -1), (46, -1), (47, 4194304), (48, 524288), (49, 2097152), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, 67108864), (9, 131072), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, 67108864), (24, 268435456), (25, -1), (26, -1), (27, -1), (28, -1), (29, 4096), (30, 8192), (31, -1), (32, 262144), (33, 1048576), (34, -1), (35, -1), (36, -1), (37, -1), (38, 33554432), (39, 2048), (40, 1024), (41, 2048), (42, 65536), (43, 65536), (44, -1), (45, -1), (46, -1), (47, 16777216), (48, 2097152), (49, 8388608), (50, -1), (51, -1), (52, -1)]

Covered at level 6 : set()

After reduction : 
 pending  : [23, 9, 29, 32, 38, 39, 40, 42, 43, 47, 48, 49, 8, 24, 30, 33, 41]
 solution : [6, 1, 2, 26]


Solution : [6, 1, 2, 26] has cost 18.


Decide in level 6 among pending : [23, 9, 29, 32, 38, 39, 40, 42, 43, 47, 48, 49, 8, 24, 30, 33, 41]

Coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, 67108864), (9, 131072), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, 67108864), (24, 268435456), (25, -1), (26, -1), (27, -1), (28, -1), (29, 4096), (30, 8192), (31, -1), (32, 262144), (33, 1048576), (34, -1), (35, -1), (36, -1), (37, -1), (38, 33554432), (39, 2048), (40, 1024), (41, 2048), (42, 65536), (43, 65536), (44, -1), (45, -1), (46, -1), (47, 16777216), (48, 2097152), (49, 8388608), (50, -1), (51, -1), (52, -1)]

Decide 24 with phase True at level 6

After decision at level 6
 pending : [23, 9, 29, 32, 38, 39, 40, 42, 43, 47, 48, 49, 8, 30, 33, 41]
 solution : [6, 1, 2, 26, 24]


New level: 7
 pending : [23, 9, 29, 32, 38, 39, 40, 42, 43, 47, 48, 49, 8, 30, 33, 41]
 solution : [6, 1, 2, 26, 24]


Before reduction : 
 pending  : [23, 9, 29, 32, 38, 39, 40, 42, 43, 47, 48, 49, 8, 30, 33, 41]
 solution : [6, 1, 2, 26, 24]

Essensial at level 7 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, 67108864), (9, 131072), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, 67108864), (24, 268435456), (25, -1), (26, -1), (27, -1), (28, -1), (29, 4096), (30, 8192), (31, -1), (32, 262144), (33, 1048576), (34, -1), (35, -1), (36, -1), (37, -1), (38, 33554432), (39, 2048), (40, 1024), (41, 2048), (42, 65536), (43, 65536), (44, -1), (45, -1), (46, -1), (47, 16777216), (48, 2097152), (49, 8388608), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, 16777216), (9, 32768), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, 16777216), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, 1024), (30, 0), (31, -1), (32, 65536), (33, 0), (34, -1), (35, -1), (36, -1), (37, -1), (38, 8388608), (39, 512), (40, 512), (41, 0), (42, 16384), (43, 16384), (44, -1), (45, -1), (46, -1), (47, 4194304), (48, 524288), (49, 4194304), (50, -1), (51, -1), (52, -1)]

Covered at level 7 : {33, 30, 41}

After reduction : 
 pending  : [23, 9, 29, 32, 38, 39, 40, 42, 43, 47, 48, 49, 8]
 solution : [6, 1, 2, 26, 24]


Before reduction : 
 pending  : [23, 9, 29, 32, 38, 39, 40, 42, 43, 47, 48, 49, 8]
 solution : [6, 1, 2, 26, 24]

Essensial at level 7 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, 16777216), (9, 32768), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, 16777216), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, 1024), (30, 0), (31, -1), (32, 65536), (33, 0), (34, -1), (35, -1), (36, -1), (37, -1), (38, 8388608), (39, 512), (40, 512), (41, 0), (42, 16384), (43, 16384), (44, -1), (45, -1), (46, -1), (47, 4194304), (48, 524288), (49, 4194304), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, 16777216), (9, 32768), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, 16777216), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, 1024), (30, -1), (31, -1), (32, 65536), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, 8388608), (39, 512), (40, 512), (41, -1), (42, 16384), (43, 16384), (44, -1), (45, -1), (46, -1), (47, 4194304), (48, 524288), (49, 4194304), (50, -1), (51, -1), (52, -1)]

Covered at level 7 : set()

After reduction : 
 pending  : [23, 9, 29, 32, 38, 39, 40, 42, 43, 47, 48, 49, 8]
 solution : [6, 1, 2, 26, 24]


Solution : [6, 1, 2, 26, 24] has cost 25.


Decide in level 7 among pending : [23, 9, 29, 32, 38, 39, 40, 42, 43, 47, 48, 49, 8]

Coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, 16777216), (9, 32768), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, 16777216), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, 1024), (30, -1), (31, -1), (32, 65536), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, 8388608), (39, 512), (40, 512), (41, -1), (42, 16384), (43, 16384), (44, -1), (45, -1), (46, -1), (47, 4194304), (48, 524288), (49, 4194304), (50, -1), (51, -1), (52, -1)]

Decide 23 with phase True at level 7

After decision at level 7
 pending : [9, 29, 32, 38, 39, 40, 42, 43, 47, 48, 49, 8]
 solution : [6, 1, 2, 26, 24, 23]


New level: 8
 pending : [9, 29, 32, 38, 39, 40, 42, 43, 47, 48, 49, 8]
 solution : [6, 1, 2, 26, 24, 23]


Before reduction : 
 pending  : [9, 29, 32, 38, 39, 40, 42, 43, 47, 48, 49, 8]
 solution : [6, 1, 2, 26, 24, 23]

Essensial at level 8 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, 16777216), (9, 32768), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, 16777216), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, 1024), (30, -1), (31, -1), (32, 65536), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, 8388608), (39, 512), (40, 512), (41, -1), (42, 16384), (43, 16384), (44, -1), (45, -1), (46, -1), (47, 4194304), (48, 524288), (49, 4194304), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, 0), (9, 0), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, 0), (30, -1), (31, -1), (32, 0), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, 0), (39, 0), (40, 0), (41, -1), (42, 0), (43, 0), (44, -1), (45, -1), (46, -1), (47, 0), (48, 0), (49, 0), (50, -1), (51, -1), (52, -1)]

Covered at level 8 : {32, 38, 39, 40, 9, 42, 43, 8, 47, 48, 49, 29}

After reduction : 
 pending  : []
 solution : [6, 1, 2, 26, 24, 23]


Before reduction : 
 pending  : []
 solution : [6, 1, 2, 26, 24, 23]

Essensial at level 8 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, 0), (9, 0), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, 0), (30, -1), (31, -1), (32, 0), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, 0), (39, 0), (40, 0), (41, -1), (42, 0), (43, 0), (44, -1), (45, -1), (46, -1), (47, 0), (48, 0), (49, 0), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 8 : set()

After reduction : 
 pending  : []
 solution : [6, 1, 2, 26, 24, 23]


Solution : [6, 1, 2, 26, 24, 23] has cost 32.


Before backtrack at level 8
 pending : []
 solution : [6, 1, 2, 26, 24, 23]

After backtrack at level 8
 pending : [9, 29, 32, 38, 39, 40, 42, 43, 47, 48, 49, 8]
 solution : [6, 1, 2, 26, 24, 23]


Invert decision for 23 at level 7


New level: 8
 pending : [9, 29, 32, 38, 39, 40, 42, 43, 47, 48, 49, 8]
 solution : [6, 1, 2, 26, 24]


Before reduction : 
 pending  : [9, 29, 32, 38, 39, 40, 42, 43, 47, 48, 49, 8]
 solution : [6, 1, 2, 26, 24]

Essensial at level 8 : {8}

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, 0), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, 0), (30, -1), (31, -1), (32, 0), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, 0), (39, 0), (40, 0), (41, -1), (42, 0), (43, 0), (44, -1), (45, -1), (46, -1), (47, 0), (48, 0), (49, 0), (50, -1), (51, -1), (52, -1)]

Covered at level 8 : {32, 38, 39, 40, 9, 42, 43, 47, 48, 49, 29}

After reduction : 
 pending  : []
 solution : [6, 1, 2, 26, 24, 8]


Before reduction : 
 pending  : []
 solution : [6, 1, 2, 26, 24, 8]

Essensial at level 8 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, 0), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, 0), (30, -1), (31, -1), (32, 0), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, 0), (39, 0), (40, 0), (41, -1), (42, 0), (43, 0), (44, -1), (45, -1), (46, -1), (47, 0), (48, 0), (49, 0), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 8 : set()

After reduction : 
 pending  : []
 solution : [6, 1, 2, 26, 24, 8]


Solution : [6, 1, 2, 26, 24, 8] has cost 29.


Before backtrack at level 8
 pending : []
 solution : [6, 1, 2, 26, 24, 8]

After backtrack at level 8
 pending : [8, 9, 29, 32, 38, 39, 40, 42, 43, 47, 48, 49]
 solution : [6, 1, 2, 26, 24]


Before backtrack at level 7
 pending : [8, 9, 29, 32, 38, 39, 40, 42, 43, 47, 48, 49]
 solution : [6, 1, 2, 26, 24]

After backtrack at level 7
 pending : [8, 9, 29, 32, 38, 39, 40, 42, 43, 47, 48, 49, 30, 33, 41, 23]
 solution : [6, 1, 2, 26, 24]


Invert decision for 24 at level 6


New level: 7
 pending : [8, 9, 29, 32, 38, 39, 40, 42, 43, 47, 48, 49, 30, 33, 41, 23]
 solution : [6, 1, 2, 26]


Before reduction : 
 pending  : [8, 9, 29, 32, 38, 39, 40, 42, 43, 47, 48, 49, 30, 33, 41, 23]
 solution : [6, 1, 2, 26]

Essensial at level 7 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, 67108864), (9, 131072), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, 67108864), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, 4096), (30, 8192), (31, -1), (32, 262144), (33, 1048576), (34, -1), (35, -1), (36, -1), (37, -1), (38, 33554432), (39, 2048), (40, 1024), (41, 2048), (42, 65536), (43, 65536), (44, -1), (45, -1), (46, -1), (47, 16777216), (48, 2097152), (49, 8388608), (50, -1), (51, -1), (52, -1)]

Covered at level 7 : set()

After reduction : 
 pending  : [8, 9, 29, 32, 38, 39, 40, 42, 43, 47, 48, 49, 30, 33, 41, 23]
 solution : [6, 1, 2, 26]


Solution : [6, 1, 2, 26] has cost 18.


Decide in level 7 among pending : [8, 9, 29, 32, 38, 39, 40, 42, 43, 47, 48, 49, 30, 33, 41, 23]

Coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, 67108864), (9, 131072), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, 67108864), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, 4096), (30, 8192), (31, -1), (32, 262144), (33, 1048576), (34, -1), (35, -1), (36, -1), (37, -1), (38, 33554432), (39, 2048), (40, 1024), (41, 2048), (42, 65536), (43, 65536), (44, -1), (45, -1), (46, -1), (47, 16777216), (48, 2097152), (49, 8388608), (50, -1), (51, -1), (52, -1)]

Decide 8 with phase True at level 7

After decision at level 7
 pending : [9, 29, 32, 38, 39, 40, 42, 43, 47, 48, 49, 30, 33, 41, 23]
 solution : [6, 1, 2, 26, 8]


New level: 8
 pending : [9, 29, 32, 38, 39, 40, 42, 43, 47, 48, 49, 30, 33, 41, 23]
 solution : [6, 1, 2, 26, 8]


Before reduction : 
 pending  : [9, 29, 32, 38, 39, 40, 42, 43, 47, 48, 49, 30, 33, 41, 23]
 solution : [6, 1, 2, 26, 8]

Essensial at level 8 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, 67108864), (9, 131072), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, 67108864), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, 4096), (30, 8192), (31, -1), (32, 262144), (33, 1048576), (34, -1), (35, -1), (36, -1), (37, -1), (38, 33554432), (39, 2048), (40, 1024), (41, 2048), (42, 65536), (43, 65536), (44, -1), (45, -1), (46, -1), (47, 16777216), (48, 2097152), (49, 8388608), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, 0), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, 0), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, 0), (30, 0), (31, -1), (32, 0), (33, 0), (34, -1), (35, -1), (36, -1), (37, -1), (38, 0), (39, 0), (40, 0), (41, 0), (42, 0), (43, 0), (44, -1), (45, -1), (46, -1), (47, 0), (48, 0), (49, 0), (50, -1), (51, -1), (52, -1)]

Covered at level 8 : {32, 33, 38, 39, 40, 9, 42, 43, 41, 47, 48, 49, 23, 29, 30}

After reduction : 
 pending  : []
 solution : [6, 1, 2, 26, 8]


Before reduction : 
 pending  : []
 solution : [6, 1, 2, 26, 8]

Essensial at level 8 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, 0), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, 0), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, 0), (30, 0), (31, -1), (32, 0), (33, 0), (34, -1), (35, -1), (36, -1), (37, -1), (38, 0), (39, 0), (40, 0), (41, 0), (42, 0), (43, 0), (44, -1), (45, -1), (46, -1), (47, 0), (48, 0), (49, 0), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 8 : set()

After reduction : 
 pending  : []
 solution : [6, 1, 2, 26, 8]


Solution : [6, 1, 2, 26, 8] has cost 22.


Before backtrack at level 8
 pending : []
 solution : [6, 1, 2, 26, 8]

After backtrack at level 8
 pending : [9, 29, 32, 38, 39, 40, 42, 43, 47, 48, 49, 30, 33, 41, 23]
 solution : [6, 1, 2, 26, 8]


Invert decision for 8 at level 7


New level: 8
 pending : [9, 29, 32, 38, 39, 40, 42, 43, 47, 48, 49, 30, 33, 41, 23]
 solution : [6, 1, 2, 26]


Before reduction : 
 pending  : [9, 29, 32, 38, 39, 40, 42, 43, 47, 48, 49, 30, 33, 41, 23]
 solution : [6, 1, 2, 26]

Essensial at level 8 : {23}

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, 0), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, 0), (30, 0), (31, -1), (32, 0), (33, 0), (34, -1), (35, -1), (36, -1), (37, -1), (38, 0), (39, 0), (40, 0), (41, 0), (42, 0), (43, 0), (44, -1), (45, -1), (46, -1), (47, 0), (48, 0), (49, 0), (50, -1), (51, -1), (52, -1)]

Covered at level 8 : {32, 33, 38, 39, 40, 9, 42, 43, 41, 47, 48, 49, 29, 30}

After reduction : 
 pending  : []
 solution : [6, 1, 2, 26, 23]


Before reduction : 
 pending  : []
 solution : [6, 1, 2, 26, 23]

Essensial at level 8 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, 0), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, 0), (30, 0), (31, -1), (32, 0), (33, 0), (34, -1), (35, -1), (36, -1), (37, -1), (38, 0), (39, 0), (40, 0), (41, 0), (42, 0), (43, 0), (44, -1), (45, -1), (46, -1), (47, 0), (48, 0), (49, 0), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 8 : set()

After reduction : 
 pending  : []
 solution : [6, 1, 2, 26, 23]


Solution : [6, 1, 2, 26, 23] has cost 25.


Before backtrack at level 8
 pending : []
 solution : [6, 1, 2, 26, 23]

After backtrack at level 8
 pending : [23, 9, 29, 32, 38, 39, 40, 42, 43, 47, 48, 49, 30, 33, 41]
 solution : [6, 1, 2, 26]


Before backtrack at level 7
 pending : [23, 9, 29, 32, 38, 39, 40, 42, 43, 47, 48, 49, 30, 33, 41]
 solution : [6, 1, 2, 26]

After backtrack at level 7
 pending : [23, 9, 29, 32, 38, 39, 40, 42, 43, 47, 48, 49, 30, 33, 41, 8]
 solution : [6, 1, 2, 26]


Before backtrack at level 6
 pending : [23, 9, 29, 32, 38, 39, 40, 42, 43, 47, 48, 49, 30, 33, 41, 8]
 solution : [6, 1, 2, 26]

After backtrack at level 6
 pending : [23, 9, 29, 32, 38, 39, 40, 42, 43, 47, 48, 49, 30, 33, 41, 8, 24]
 solution : [6, 1, 2, 26]


Before backtrack at level 5
 pending : [23, 9, 29, 32, 38, 39, 40, 42, 43, 47, 48, 49, 30, 33, 41, 8, 24]
 solution : [6, 1, 2, 26]

After backtrack at level 5
 pending : [23, 9, 29, 32, 38, 39, 40, 42, 43, 47, 48, 49, 30, 33, 41, 8, 24, 35]
 solution : [6, 1, 2, 26]


Before backtrack at level 4
 pending : [23, 9, 29, 32, 38, 39, 40, 42, 43, 47, 48, 49, 30, 33, 41, 8, 24, 35]
 solution : [6, 1, 2, 26]

After backtrack at level 4
 pending : [23, 9, 29, 32, 38, 39, 40, 42, 43, 47, 48, 49, 30, 33, 41, 8, 24, 35, 0, 14, 15, 16, 17, 18, 19, 20, 21, 22, 25, 37, 28]
 solution : [6, 1, 2, 26]


Invert decision for 26 at level 3


New level: 4
 pending : [23, 9, 29, 32, 38, 39, 40, 42, 43, 47, 48, 49, 30, 33, 41, 8, 24, 35, 0, 14, 15, 16, 17, 18, 19, 20, 21, 22, 25, 37, 28]
 solution : [6, 1, 2]


Before reduction : 
 pending  : [23, 9, 29, 32, 38, 39, 40, 42, 43, 47, 48, 49, 30, 33, 41, 8, 24, 35, 0, 14, 15, 16, 17, 18, 19, 20, 21, 22, 25, 37, 28]
 solution : [6, 1, 2]

Essensial at level 4 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, 131072), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, 67108864), (9, 524288), (10, -1), (11, -1), (12, -1), (13, -1), (14, 8388608), (15, 4194304), (16, 196608), (17, 268435456), (18, 134217728), (19, 65536), (20, 1048576), (21, 2097152), (22, 32768), (23, 67108864), (24, 268435456), (25, 524288), (26, -1), (27, -1), (28, 536870912), (29, 8192), (30, 8192), (31, -1), (32, 524288), (33, 1048576), (34, -1), (35, 536870912), (36, -1), (37, 524288), (38, 67108864), (39, 8192), (40, 33554432), (41, 134217728), (42, 262144), (43, 262144), (44, -1), (45, -1), (46, -1), (47, 33554432), (48, 8388608), (49, 33554432), (50, -1), (51, -1), (52, -1)]

Covered at level 4 : set()

After reduction : 
 pending  : [23, 9, 29, 32, 38, 39, 40, 42, 43, 47, 48, 49, 30, 33, 41, 8, 24, 35, 0, 14, 15, 16, 17, 18, 19, 20, 21, 22, 25, 37, 28]
 solution : [6, 1, 2]


Solution : [6, 1, 2] has cost 14.


Decide in level 4 among pending : [23, 9, 29, 32, 38, 39, 40, 42, 43, 47, 48, 49, 30, 33, 41, 8, 24, 35, 0, 14, 15, 16, 17, 18, 19, 20, 21, 22, 25, 37, 28]

Coverage : [(0, 131072), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, 67108864), (9, 524288), (10, -1), (11, -1), (12, -1), (13, -1), (14, 8388608), (15, 4194304), (16, 196608), (17, 268435456), (18, 134217728), (19, 65536), (20, 1048576), (21, 2097152), (22, 32768), (23, 67108864), (24, 268435456), (25, 524288), (26, -1), (27, -1), (28, 536870912), (29, 8192), (30, 8192), (31, -1), (32, 524288), (33, 1048576), (34, -1), (35, 536870912), (36, -1), (37, 524288), (38, 67108864), (39, 8192), (40, 33554432), (41, 134217728), (42, 262144), (43, 262144), (44, -1), (45, -1), (46, -1), (47, 33554432), (48, 8388608), (49, 33554432), (50, -1), (51, -1), (52, -1)]

Decide 35 with phase True at level 4

After decision at level 4
 pending : [23, 9, 29, 32, 38, 39, 40, 42, 43, 47, 48, 49, 30, 33, 41, 8, 24, 0, 14, 15, 16, 17, 18, 19, 20, 21, 22, 25, 37, 28]
 solution : [6, 1, 2, 35]


New level: 5
 pending : [23, 9, 29, 32, 38, 39, 40, 42, 43, 47, 48, 49, 30, 33, 41, 8, 24, 0, 14, 15, 16, 17, 18, 19, 20, 21, 22, 25, 37, 28]
 solution : [6, 1, 2, 35]


Before reduction : 
 pending  : [23, 9, 29, 32, 38, 39, 40, 42, 43, 47, 48, 49, 30, 33, 41, 8, 24, 0, 14, 15, 16, 17, 18, 19, 20, 21, 22, 25, 37, 28]
 solution : [6, 1, 2, 35]

Essensial at level 5 : set()

Before removed
 coverage : [(0, 131072), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, 67108864), (9, 524288), (10, -1), (11, -1), (12, -1), (13, -1), (14, 8388608), (15, 4194304), (16, 196608), (17, 268435456), (18, 134217728), (19, 65536), (20, 1048576), (21, 2097152), (22, 32768), (23, 67108864), (24, 268435456), (25, 524288), (26, -1), (27, -1), (28, 536870912), (29, 8192), (30, 8192), (31, -1), (32, 524288), (33, 1048576), (34, -1), (35, 536870912), (36, -1), (37, 524288), (38, 67108864), (39, 8192), (40, 33554432), (41, 134217728), (42, 262144), (43, 262144), (44, -1), (45, -1), (46, -1), (47, 33554432), (48, 8388608), (49, 33554432), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, 131072), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, 67108864), (9, 131072), (10, -1), (11, -1), (12, -1), (13, -1), (14, 8388608), (15, 4194304), (16, 196608), (17, 268435456), (18, 134217728), (19, 65536), (20, 1048576), (21, 2097152), (22, 32768), (23, 67108864), (24, 8192), (25, 524288), (26, -1), (27, -1), (28, 536870912), (29, 2048), (30, 0), (31, -1), (32, 131072), (33, 0), (34, -1), (35, -1), (36, -1), (37, 524288), (38, 16777216), (39, 2048), (40, 33554432), (41, 4096), (42, 65536), (43, 65536), (44, -1), (45, -1), (46, -1), (47, 8388608), (48, 2097152), (49, 8388608), (50, -1), (51, -1), (52, -1)]

Covered at level 5 : {33, 30}

After reduction : 
 pending  : [23, 9, 29, 32, 38, 39, 40, 42, 43, 47, 48, 49, 41, 8, 24, 0, 14, 15, 16, 17, 18, 19, 20, 21, 22, 25, 37, 28]
 solution : [6, 1, 2, 35]


Before reduction : 
 pending  : [23, 9, 29, 32, 38, 39, 40, 42, 43, 47, 48, 49, 41, 8, 24, 0, 14, 15, 16, 17, 18, 19, 20, 21, 22, 25, 37, 28]
 solution : [6, 1, 2, 35]

Essensial at level 5 : set()

Before removed
 coverage : [(0, 131072), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, 67108864), (9, 131072), (10, -1), (11, -1), (12, -1), (13, -1), (14, 8388608), (15, 4194304), (16, 196608), (17, 268435456), (18, 134217728), (19, 65536), (20, 1048576), (21, 2097152), (22, 32768), (23, 67108864), (24, 8192), (25, 524288), (26, -1), (27, -1), (28, 536870912), (29, 2048), (30, 0), (31, -1), (32, 131072), (33, 0), (34, -1), (35, -1), (36, -1), (37, 524288), (38, 16777216), (39, 2048), (40, 33554432), (41, 4096), (42, 65536), (43, 65536), (44, -1), (45, -1), (46, -1), (47, 8388608), (48, 2097152), (49, 8388608), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, 131072), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, 67108864), (9, 131072), (10, -1), (11, -1), (12, -1), (13, -1), (14, 8388608), (15, 4194304), (16, 196608), (17, 268435456), (18, 134217728), (19, 65536), (20, 1048576), (21, 2097152), (22, 32768), (23, 67108864), (24, 8192), (25, 524288), (26, -1), (27, -1), (28, 536870912), (29, 2048), (30, -1), (31, -1), (32, 131072), (33, -1), (34, -1), (35, -1), (36, -1), (37, 524288), (38, 16777216), (39, 2048), (40, 33554432), (41, 4096), (42, 65536), (43, 65536), (44, -1), (45, -1), (46, -1), (47, 8388608), (48, 2097152), (49, 8388608), (50, -1), (51, -1), (52, -1)]

Covered at level 5 : set()

After reduction : 
 pending  : [23, 9, 29, 32, 38, 39, 40, 42, 43, 47, 48, 49, 41, 8, 24, 0, 14, 15, 16, 17, 18, 19, 20, 21, 22, 25, 37, 28]
 solution : [6, 1, 2, 35]


Solution : [6, 1, 2, 35] has cost 27.


Before backtrack at level 5
 pending : [23, 9, 29, 32, 38, 39, 40, 42, 43, 47, 48, 49, 41, 8, 24, 0, 14, 15, 16, 17, 18, 19, 20, 21, 22, 25, 37, 28]
 solution : [6, 1, 2, 35]

After backtrack at level 5
 pending : [23, 9, 29, 32, 38, 39, 40, 42, 43, 47, 48, 49, 41, 8, 24, 0, 14, 15, 16, 17, 18, 19, 20, 21, 22, 25, 37, 28, 30, 33]
 solution : [6, 1, 2, 35]


Invert decision for 35 at level 4


New level: 5
 pending : [23, 9, 29, 32, 38, 39, 40, 42, 43, 47, 48, 49, 41, 8, 24, 0, 14, 15, 16, 17, 18, 19, 20, 21, 22, 25, 37, 28, 30, 33]
 solution : [6, 1, 2]


Before reduction : 
 pending  : [23, 9, 29, 32, 38, 39, 40, 42, 43, 47, 48, 49, 41, 8, 24, 0, 14, 15, 16, 17, 18, 19, 20, 21, 22, 25, 37, 28, 30, 33]
 solution : [6, 1, 2]

Essensial at level 5 : set()

Before removed
 coverage : [(0, 131072), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, 67108864), (9, 131072), (10, -1), (11, -1), (12, -1), (13, -1), (14, 8388608), (15, 4194304), (16, 196608), (17, 268435456), (18, 134217728), (19, 65536), (20, 1048576), (21, 2097152), (22, 32768), (23, 67108864), (24, 8192), (25, 524288), (26, -1), (27, -1), (28, 536870912), (29, 2048), (30, -1), (31, -1), (32, 131072), (33, -1), (34, -1), (35, -1), (36, -1), (37, 524288), (38, 16777216), (39, 2048), (40, 33554432), (41, 4096), (42, 65536), (43, 65536), (44, -1), (45, -1), (46, -1), (47, 8388608), (48, 2097152), (49, 8388608), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, 131072), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, 67108864), (9, 524288), (10, -1), (11, -1), (12, -1), (13, -1), (14, 8388608), (15, 4194304), (16, 196608), (17, 268435456), (18, 134217728), (19, 65536), (20, 1048576), (21, 2097152), (22, 32768), (23, 67108864), (24, 268435456), (25, 524288), (26, -1), (27, -1), (28, 536870912), (29, 8192), (30, 8192), (31, -1), (32, 524288), (33, 1048576), (34, -1), (35, -1), (36, -1), (37, 524288), (38, 67108864), (39, 8192), (40, 33554432), (41, 134217728), (42, 262144), (43, 262144), (44, -1), (45, -1), (46, -1), (47, 33554432), (48, 8388608), (49, 33554432), (50, -1), (51, -1), (52, -1)]

Covered at level 5 : set()

After reduction : 
 pending  : [23, 9, 29, 32, 38, 39, 40, 42, 43, 47, 48, 49, 41, 8, 24, 0, 14, 15, 16, 17, 18, 19, 20, 21, 22, 25, 37, 28, 30, 33]
 solution : [6, 1, 2]


Solution : [6, 1, 2] has cost 14.


Decide in level 5 among pending : [23, 9, 29, 32, 38, 39, 40, 42, 43, 47, 48, 49, 41, 8, 24, 0, 14, 15, 16, 17, 18, 19, 20, 21, 22, 25, 37, 28, 30, 33]

Coverage : [(0, 131072), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, 67108864), (9, 524288), (10, -1), (11, -1), (12, -1), (13, -1), (14, 8388608), (15, 4194304), (16, 196608), (17, 268435456), (18, 134217728), (19, 65536), (20, 1048576), (21, 2097152), (22, 32768), (23, 67108864), (24, 268435456), (25, 524288), (26, -1), (27, -1), (28, 536870912), (29, 8192), (30, 8192), (31, -1), (32, 524288), (33, 1048576), (34, -1), (35, -1), (36, -1), (37, 524288), (38, 67108864), (39, 8192), (40, 33554432), (41, 134217728), (42, 262144), (43, 262144), (44, -1), (45, -1), (46, -1), (47, 33554432), (48, 8388608), (49, 33554432), (50, -1), (51, -1), (52, -1)]

Decide 28 with phase True at level 5

After decision at level 5
 pending : [23, 9, 29, 32, 38, 39, 40, 42, 43, 47, 48, 49, 41, 8, 24, 0, 14, 15, 16, 17, 18, 19, 20, 21, 22, 25, 37, 30, 33]
 solution : [6, 1, 2, 28]


New level: 6
 pending : [23, 9, 29, 32, 38, 39, 40, 42, 43, 47, 48, 49, 41, 8, 24, 0, 14, 15, 16, 17, 18, 19, 20, 21, 22, 25, 37, 30, 33]
 solution : [6, 1, 2, 28]


Before reduction : 
 pending  : [23, 9, 29, 32, 38, 39, 40, 42, 43, 47, 48, 49, 41, 8, 24, 0, 14, 15, 16, 17, 18, 19, 20, 21, 22, 25, 37, 30, 33]
 solution : [6, 1, 2, 28]

Essensial at level 6 : set()

Before removed
 coverage : [(0, 131072), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, 67108864), (9, 524288), (10, -1), (11, -1), (12, -1), (13, -1), (14, 8388608), (15, 4194304), (16, 196608), (17, 268435456), (18, 134217728), (19, 65536), (20, 1048576), (21, 2097152), (22, 32768), (23, 67108864), (24, 268435456), (25, 524288), (26, -1), (27, -1), (28, 536870912), (29, 8192), (30, 8192), (31, -1), (32, 524288), (33, 1048576), (34, -1), (35, -1), (36, -1), (37, 524288), (38, 67108864), (39, 8192), (40, 33554432), (41, 134217728), (42, 262144), (43, 262144), (44, -1), (45, -1), (46, -1), (47, 33554432), (48, 8388608), (49, 33554432), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, 131072), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, 67108864), (9, 524288), (10, -1), (11, -1), (12, -1), (13, -1), (14, 8388608), (15, 4194304), (16, 196608), (17, 268435456), (18, 134217728), (19, 65536), (20, 1048576), (21, 2097152), (22, 32768), (23, 67108864), (24, 134217728), (25, 524288), (26, -1), (27, -1), (28, -1), (29, 8192), (30, 4096), (31, -1), (32, 524288), (33, 524288), (34, -1), (35, -1), (36, -1), (37, 524288), (38, 67108864), (39, 8192), (40, 33554432), (41, 134217728), (42, 262144), (43, 262144), (44, -1), (45, -1), (46, -1), (47, 33554432), (48, 8388608), (49, 33554432), (50, -1), (51, -1), (52, -1)]

Covered at level 6 : set()

After reduction : 
 pending  : [23, 9, 29, 32, 38, 39, 40, 42, 43, 47, 48, 49, 41, 8, 24, 0, 14, 15, 16, 17, 18, 19, 20, 21, 22, 25, 37, 30, 33]
 solution : [6, 1, 2, 28]


Solution : [6, 1, 2, 28] has cost 18.


Decide in level 6 among pending : [23, 9, 29, 32, 38, 39, 40, 42, 43, 47, 48, 49, 41, 8, 24, 0, 14, 15, 16, 17, 18, 19, 20, 21, 22, 25, 37, 30, 33]

Coverage : [(0, 131072), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, 67108864), (9, 524288), (10, -1), (11, -1), (12, -1), (13, -1), (14, 8388608), (15, 4194304), (16, 196608), (17, 268435456), (18, 134217728), (19, 65536), (20, 1048576), (21, 2097152), (22, 32768), (23, 67108864), (24, 134217728), (25, 524288), (26, -1), (27, -1), (28, -1), (29, 8192), (30, 4096), (31, -1), (32, 524288), (33, 524288), (34, -1), (35, -1), (36, -1), (37, 524288), (38, 67108864), (39, 8192), (40, 33554432), (41, 134217728), (42, 262144), (43, 262144), (44, -1), (45, -1), (46, -1), (47, 33554432), (48, 8388608), (49, 33554432), (50, -1), (51, -1), (52, -1)]

Decide 17 with phase True at level 6

After decision at level 6
 pending : [23, 9, 29, 32, 38, 39, 40, 42, 43, 47, 48, 49, 41, 8, 24, 0, 14, 15, 16, 18, 19, 20, 21, 22, 25, 37, 30, 33]
 solution : [6, 1, 2, 28, 17]


New level: 7
 pending : [23, 9, 29, 32, 38, 39, 40, 42, 43, 47, 48, 49, 41, 8, 24, 0, 14, 15, 16, 18, 19, 20, 21, 22, 25, 37, 30, 33]
 solution : [6, 1, 2, 28, 17]


Before reduction : 
 pending  : [23, 9, 29, 32, 38, 39, 40, 42, 43, 47, 48, 49, 41, 8, 24, 0, 14, 15, 16, 18, 19, 20, 21, 22, 25, 37, 30, 33]
 solution : [6, 1, 2, 28, 17]

Essensial at level 7 : set()

Before removed
 coverage : [(0, 131072), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, 67108864), (9, 524288), (10, -1), (11, -1), (12, -1), (13, -1), (14, 8388608), (15, 4194304), (16, 196608), (17, 268435456), (18, 134217728), (19, 65536), (20, 1048576), (21, 2097152), (22, 32768), (23, 67108864), (24, 134217728), (25, 524288), (26, -1), (27, -1), (28, -1), (29, 8192), (30, 4096), (31, -1), (32, 524288), (33, 524288), (34, -1), (35, -1), (36, -1), (37, 524288), (38, 67108864), (39, 8192), (40, 33554432), (41, 134217728), (42, 262144), (43, 262144), (44, -1), (45, -1), (46, -1), (47, 33554432), (48, 8388608), (49, 33554432), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, 0), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, 67108864), (9, 131072), (10, -1), (11, -1), (12, -1), (13, -1), (14, 0), (15, 0), (16, 0), (17, -1), (18, 0), (19, 0), (20, 0), (21, 0), (22, 0), (23, 67108864), (24, 134217728), (25, 0), (26, -1), (27, -1), (28, -1), (29, 4096), (30, 4096), (31, -1), (32, 262144), (33, 524288), (34, -1), (35, -1), (36, -1), (37, 0), (38, 33554432), (39, 2048), (40, 1024), (41, 2048), (42, 65536), (43, 65536), (44, -1), (45, -1), (46, -1), (47, 16777216), (48, 2097152), (49, 33554432), (50, -1), (51, -1), (52, -1)]

Covered at level 7 : {0, 37, 14, 15, 16, 18, 19, 20, 21, 22, 25}

After reduction : 
 pending  : [23, 9, 29, 32, 38, 39, 40, 42, 43, 47, 48, 49, 41, 8, 24, 30, 33]
 solution : [6, 1, 2, 28, 17]


Before reduction : 
 pending  : [23, 9, 29, 32, 38, 39, 40, 42, 43, 47, 48, 49, 41, 8, 24, 30, 33]
 solution : [6, 1, 2, 28, 17]

Essensial at level 7 : set()

Before removed
 coverage : [(0, 0), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, 67108864), (9, 131072), (10, -1), (11, -1), (12, -1), (13, -1), (14, 0), (15, 0), (16, 0), (17, -1), (18, 0), (19, 0), (20, 0), (21, 0), (22, 0), (23, 67108864), (24, 134217728), (25, 0), (26, -1), (27, -1), (28, -1), (29, 4096), (30, 4096), (31, -1), (32, 262144), (33, 524288), (34, -1), (35, -1), (36, -1), (37, 0), (38, 33554432), (39, 2048), (40, 1024), (41, 2048), (42, 65536), (43, 65536), (44, -1), (45, -1), (46, -1), (47, 16777216), (48, 2097152), (49, 33554432), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, 67108864), (9, 131072), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, 67108864), (24, 134217728), (25, -1), (26, -1), (27, -1), (28, -1), (29, 4096), (30, 4096), (31, -1), (32, 262144), (33, 524288), (34, -1), (35, -1), (36, -1), (37, -1), (38, 33554432), (39, 2048), (40, 1024), (41, 2048), (42, 65536), (43, 65536), (44, -1), (45, -1), (46, -1), (47, 16777216), (48, 2097152), (49, 33554432), (50, -1), (51, -1), (52, -1)]

Covered at level 7 : set()

After reduction : 
 pending  : [23, 9, 29, 32, 38, 39, 40, 42, 43, 47, 48, 49, 41, 8, 24, 30, 33]
 solution : [6, 1, 2, 28, 17]


Solution : [6, 1, 2, 28, 17] has cost 25.


Before backtrack at level 7
 pending : [23, 9, 29, 32, 38, 39, 40, 42, 43, 47, 48, 49, 41, 8, 24, 30, 33]
 solution : [6, 1, 2, 28, 17]

After backtrack at level 7
 pending : [23, 9, 29, 32, 38, 39, 40, 42, 43, 47, 48, 49, 41, 8, 24, 30, 33, 0, 14, 15, 16, 18, 19, 20, 21, 22, 25, 37]
 solution : [6, 1, 2, 28, 17]


Invert decision for 17 at level 6


New level: 7
 pending : [23, 9, 29, 32, 38, 39, 40, 42, 43, 47, 48, 49, 41, 8, 24, 30, 33, 0, 14, 15, 16, 18, 19, 20, 21, 22, 25, 37]
 solution : [6, 1, 2, 28]


Before reduction : 
 pending  : [23, 9, 29, 32, 38, 39, 40, 42, 43, 47, 48, 49, 41, 8, 24, 30, 33, 0, 14, 15, 16, 18, 19, 20, 21, 22, 25, 37]
 solution : [6, 1, 2, 28]

Essensial at level 7 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, 67108864), (9, 131072), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, 67108864), (24, 134217728), (25, -1), (26, -1), (27, -1), (28, -1), (29, 4096), (30, 4096), (31, -1), (32, 262144), (33, 524288), (34, -1), (35, -1), (36, -1), (37, -1), (38, 33554432), (39, 2048), (40, 1024), (41, 2048), (42, 65536), (43, 65536), (44, -1), (45, -1), (46, -1), (47, 16777216), (48, 2097152), (49, 33554432), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, 131072), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, 67108864), (9, 524288), (10, -1), (11, -1), (12, -1), (13, -1), (14, 8388608), (15, 4194304), (16, 196608), (17, -1), (18, 134217728), (19, 65536), (20, 1048576), (21, 2097152), (22, 32768), (23, 67108864), (24, 134217728), (25, 524288), (26, -1), (27, -1), (28, -1), (29, 8192), (30, 4096), (31, -1), (32, 524288), (33, 524288), (34, -1), (35, -1), (36, -1), (37, 524288), (38, 67108864), (39, 8192), (40, 33554432), (41, 134217728), (42, 262144), (43, 262144), (44, -1), (45, -1), (46, -1), (47, 33554432), (48, 8388608), (49, 33554432), (50, -1), (51, -1), (52, -1)]

Covered at level 7 : set()

After reduction : 
 pending  : [23, 9, 29, 32, 38, 39, 40, 42, 43, 47, 48, 49, 41, 8, 24, 30, 33, 0, 14, 15, 16, 18, 19, 20, 21, 22, 25, 37]
 solution : [6, 1, 2, 28]


Solution : [6, 1, 2, 28] has cost 18.


Decide in level 7 among pending : [23, 9, 29, 32, 38, 39, 40, 42, 43, 47, 48, 49, 41, 8, 24, 30, 33, 0, 14, 15, 16, 18, 19, 20, 21, 22, 25, 37]

Coverage : [(0, 131072), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, 67108864), (9, 524288), (10, -1), (11, -1), (12, -1), (13, -1), (14, 8388608), (15, 4194304), (16, 196608), (17, -1), (18, 134217728), (19, 65536), (20, 1048576), (21, 2097152), (22, 32768), (23, 67108864), (24, 134217728), (25, 524288), (26, -1), (27, -1), (28, -1), (29, 8192), (30, 4096), (31, -1), (32, 524288), (33, 524288), (34, -1), (35, -1), (36, -1), (37, 524288), (38, 67108864), (39, 8192), (40, 33554432), (41, 134217728), (42, 262144), (43, 262144), (44, -1), (45, -1), (46, -1), (47, 33554432), (48, 8388608), (49, 33554432), (50, -1), (51, -1), (52, -1)]

Decide 41 with phase True at level 7

After decision at level 7
 pending : [23, 9, 29, 32, 38, 39, 40, 42, 43, 47, 48, 49, 8, 24, 30, 33, 0, 14, 15, 16, 18, 19, 20, 21, 22, 25, 37]
 solution : [6, 1, 2, 28, 41]


New level: 8
 pending : [23, 9, 29, 32, 38, 39, 40, 42, 43, 47, 48, 49, 8, 24, 30, 33, 0, 14, 15, 16, 18, 19, 20, 21, 22, 25, 37]
 solution : [6, 1, 2, 28, 41]


Before reduction : 
 pending  : [23, 9, 29, 32, 38, 39, 40, 42, 43, 47, 48, 49, 8, 24, 30, 33, 0, 14, 15, 16, 18, 19, 20, 21, 22, 25, 37]
 solution : [6, 1, 2, 28, 41]

Essensial at level 8 : set()

Before removed
 coverage : [(0, 131072), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, 67108864), (9, 524288), (10, -1), (11, -1), (12, -1), (13, -1), (14, 8388608), (15, 4194304), (16, 196608), (17, -1), (18, 134217728), (19, 65536), (20, 1048576), (21, 2097152), (22, 32768), (23, 67108864), (24, 134217728), (25, 524288), (26, -1), (27, -1), (28, -1), (29, 8192), (30, 4096), (31, -1), (32, 524288), (33, 524288), (34, -1), (35, -1), (36, -1), (37, 524288), (38, 67108864), (39, 8192), (40, 33554432), (41, 134217728), (42, 262144), (43, 262144), (44, -1), (45, -1), (46, -1), (47, 33554432), (48, 8388608), (49, 33554432), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, 131072), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, 67108864), (9, 524288), (10, -1), (11, -1), (12, -1), (13, -1), (14, 8388608), (15, 4194304), (16, 196608), (17, -1), (18, 134217728), (19, 65536), (20, 1048576), (21, 2097152), (22, 32768), (23, 67108864), (24, 67108864), (25, 524288), (26, -1), (27, -1), (28, -1), (29, 8192), (30, 2048), (31, -1), (32, 524288), (33, 262144), (34, -1), (35, -1), (36, -1), (37, 524288), (38, 67108864), (39, 8192), (40, 16777216), (41, -1), (42, 262144), (43, 262144), (44, -1), (45, -1), (46, -1), (47, 33554432), (48, 8388608), (49, 33554432), (50, -1), (51, -1), (52, -1)]

Covered at level 8 : set()

After reduction : 
 pending  : [23, 9, 29, 32, 38, 39, 40, 42, 43, 47, 48, 49, 8, 24, 30, 33, 0, 14, 15, 16, 18, 19, 20, 21, 22, 25, 37]
 solution : [6, 1, 2, 28, 41]


Solution : [6, 1, 2, 28, 41] has cost 32.


Before backtrack at level 8
 pending : [23, 9, 29, 32, 38, 39, 40, 42, 43, 47, 48, 49, 8, 24, 30, 33, 0, 14, 15, 16, 18, 19, 20, 21, 22, 25, 37]
 solution : [6, 1, 2, 28, 41]

After backtrack at level 8
 pending : [23, 9, 29, 32, 38, 39, 40, 42, 43, 47, 48, 49, 8, 24, 30, 33, 0, 14, 15, 16, 18, 19, 20, 21, 22, 25, 37]
 solution : [6, 1, 2, 28, 41]


Invert decision for 41 at level 7


New level: 8
 pending : [23, 9, 29, 32, 38, 39, 40, 42, 43, 47, 48, 49, 8, 24, 30, 33, 0, 14, 15, 16, 18, 19, 20, 21, 22, 25, 37]
 solution : [6, 1, 2, 28]


Before reduction : 
 pending  : [23, 9, 29, 32, 38, 39, 40, 42, 43, 47, 48, 49, 8, 24, 30, 33, 0, 14, 15, 16, 18, 19, 20, 21, 22, 25, 37]
 solution : [6, 1, 2, 28]

Essensial at level 8 : set()

Before removed
 coverage : [(0, 131072), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, 67108864), (9, 524288), (10, -1), (11, -1), (12, -1), (13, -1), (14, 8388608), (15, 4194304), (16, 196608), (17, -1), (18, 134217728), (19, 65536), (20, 1048576), (21, 2097152), (22, 32768), (23, 67108864), (24, 67108864), (25, 524288), (26, -1), (27, -1), (28, -1), (29, 8192), (30, 2048), (31, -1), (32, 524288), (33, 262144), (34, -1), (35, -1), (36, -1), (37, 524288), (38, 67108864), (39, 8192), (40, 16777216), (41, -1), (42, 262144), (43, 262144), (44, -1), (45, -1), (46, -1), (47, 33554432), (48, 8388608), (49, 33554432), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, 131072), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, 67108864), (9, 524288), (10, -1), (11, -1), (12, -1), (13, -1), (14, 8388608), (15, 4194304), (16, 196608), (17, -1), (18, 134217728), (19, 65536), (20, 1048576), (21, 2097152), (22, 32768), (23, 67108864), (24, 134217728), (25, 524288), (26, -1), (27, -1), (28, -1), (29, 8192), (30, 4096), (31, -1), (32, 524288), (33, 524288), (34, -1), (35, -1), (36, -1), (37, 524288), (38, 67108864), (39, 8192), (40, 33554432), (41, -1), (42, 262144), (43, 262144), (44, -1), (45, -1), (46, -1), (47, 33554432), (48, 8388608), (49, 33554432), (50, -1), (51, -1), (52, -1)]

Covered at level 8 : set()

After reduction : 
 pending  : [23, 9, 29, 32, 38, 39, 40, 42, 43, 47, 48, 49, 8, 24, 30, 33, 0, 14, 15, 16, 18, 19, 20, 21, 22, 25, 37]
 solution : [6, 1, 2, 28]


Solution : [6, 1, 2, 28] has cost 18.


Decide in level 8 among pending : [23, 9, 29, 32, 38, 39, 40, 42, 43, 47, 48, 49, 8, 24, 30, 33, 0, 14, 15, 16, 18, 19, 20, 21, 22, 25, 37]

Coverage : [(0, 131072), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, 67108864), (9, 524288), (10, -1), (11, -1), (12, -1), (13, -1), (14, 8388608), (15, 4194304), (16, 196608), (17, -1), (18, 134217728), (19, 65536), (20, 1048576), (21, 2097152), (22, 32768), (23, 67108864), (24, 134217728), (25, 524288), (26, -1), (27, -1), (28, -1), (29, 8192), (30, 4096), (31, -1), (32, 524288), (33, 524288), (34, -1), (35, -1), (36, -1), (37, 524288), (38, 67108864), (39, 8192), (40, 33554432), (41, -1), (42, 262144), (43, 262144), (44, -1), (45, -1), (46, -1), (47, 33554432), (48, 8388608), (49, 33554432), (50, -1), (51, -1), (52, -1)]

Decide 24 with phase True at level 8

After decision at level 8
 pending : [23, 9, 29, 32, 38, 39, 40, 42, 43, 47, 48, 49, 8, 30, 33, 0, 14, 15, 16, 18, 19, 20, 21, 22, 25, 37]
 solution : [6, 1, 2, 28, 24]


New level: 9
 pending : [23, 9, 29, 32, 38, 39, 40, 42, 43, 47, 48, 49, 8, 30, 33, 0, 14, 15, 16, 18, 19, 20, 21, 22, 25, 37]
 solution : [6, 1, 2, 28, 24]


Before reduction : 
 pending  : [23, 9, 29, 32, 38, 39, 40, 42, 43, 47, 48, 49, 8, 30, 33, 0, 14, 15, 16, 18, 19, 20, 21, 22, 25, 37]
 solution : [6, 1, 2, 28, 24]

Essensial at level 9 : set()

Before removed
 coverage : [(0, 131072), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, 67108864), (9, 524288), (10, -1), (11, -1), (12, -1), (13, -1), (14, 8388608), (15, 4194304), (16, 196608), (17, -1), (18, 134217728), (19, 65536), (20, 1048576), (21, 2097152), (22, 32768), (23, 67108864), (24, 134217728), (25, 524288), (26, -1), (27, -1), (28, -1), (29, 8192), (30, 4096), (31, -1), (32, 524288), (33, 524288), (34, -1), (35, -1), (36, -1), (37, 524288), (38, 67108864), (39, 8192), (40, 33554432), (41, -1), (42, 262144), (43, 262144), (44, -1), (45, -1), (46, -1), (47, 33554432), (48, 8388608), (49, 33554432), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, 131072), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, 16777216), (9, 131072), (10, -1), (11, -1), (12, -1), (13, -1), (14, 8388608), (15, 4194304), (16, 196608), (17, -1), (18, 134217728), (19, 65536), (20, 1048576), (21, 2097152), (22, 32768), (23, 16777216), (24, -1), (25, 524288), (26, -1), (27, -1), (28, -1), (29, 2048), (30, 0), (31, -1), (32, 131072), (33, 0), (34, -1), (35, -1), (36, -1), (37, 524288), (38, 16777216), (39, 2048), (40, 33554432), (41, -1), (42, 65536), (43, 65536), (44, -1), (45, -1), (46, -1), (47, 8388608), (48, 2097152), (49, 16777216), (50, -1), (51, -1), (52, -1)]

Covered at level 9 : {33, 30}

After reduction : 
 pending  : [23, 9, 29, 32, 38, 39, 40, 42, 43, 47, 48, 49, 8, 0, 14, 15, 16, 18, 19, 20, 21, 22, 25, 37]
 solution : [6, 1, 2, 28, 24]


Before reduction : 
 pending  : [23, 9, 29, 32, 38, 39, 40, 42, 43, 47, 48, 49, 8, 0, 14, 15, 16, 18, 19, 20, 21, 22, 25, 37]
 solution : [6, 1, 2, 28, 24]

Essensial at level 9 : set()

Before removed
 coverage : [(0, 131072), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, 16777216), (9, 131072), (10, -1), (11, -1), (12, -1), (13, -1), (14, 8388608), (15, 4194304), (16, 196608), (17, -1), (18, 134217728), (19, 65536), (20, 1048576), (21, 2097152), (22, 32768), (23, 16777216), (24, -1), (25, 524288), (26, -1), (27, -1), (28, -1), (29, 2048), (30, 0), (31, -1), (32, 131072), (33, 0), (34, -1), (35, -1), (36, -1), (37, 524288), (38, 16777216), (39, 2048), (40, 33554432), (41, -1), (42, 65536), (43, 65536), (44, -1), (45, -1), (46, -1), (47, 8388608), (48, 2097152), (49, 16777216), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, 131072), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, 16777216), (9, 131072), (10, -1), (11, -1), (12, -1), (13, -1), (14, 8388608), (15, 4194304), (16, 196608), (17, -1), (18, 134217728), (19, 65536), (20, 1048576), (21, 2097152), (22, 32768), (23, 16777216), (24, -1), (25, 524288), (26, -1), (27, -1), (28, -1), (29, 2048), (30, -1), (31, -1), (32, 131072), (33, -1), (34, -1), (35, -1), (36, -1), (37, 524288), (38, 16777216), (39, 2048), (40, 33554432), (41, -1), (42, 65536), (43, 65536), (44, -1), (45, -1), (46, -1), (47, 8388608), (48, 2097152), (49, 16777216), (50, -1), (51, -1), (52, -1)]

Covered at level 9 : set()

After reduction : 
 pending  : [23, 9, 29, 32, 38, 39, 40, 42, 43, 47, 48, 49, 8, 0, 14, 15, 16, 18, 19, 20, 21, 22, 25, 37]
 solution : [6, 1, 2, 28, 24]


Solution : [6, 1, 2, 28, 24] has cost 25.


Before backtrack at level 9
 pending : [23, 9, 29, 32, 38, 39, 40, 42, 43, 47, 48, 49, 8, 0, 14, 15, 16, 18, 19, 20, 21, 22, 25, 37]
 solution : [6, 1, 2, 28, 24]

After backtrack at level 9
 pending : [23, 9, 29, 32, 38, 39, 40, 42, 43, 47, 48, 49, 8, 0, 14, 15, 16, 18, 19, 20, 21, 22, 25, 37, 30, 33]
 solution : [6, 1, 2, 28, 24]


Invert decision for 24 at level 8


New level: 9
 pending : [23, 9, 29, 32, 38, 39, 40, 42, 43, 47, 48, 49, 8, 0, 14, 15, 16, 18, 19, 20, 21, 22, 25, 37, 30, 33]
 solution : [6, 1, 2, 28]


Before reduction : 
 pending  : [23, 9, 29, 32, 38, 39, 40, 42, 43, 47, 48, 49, 8, 0, 14, 15, 16, 18, 19, 20, 21, 22, 25, 37, 30, 33]
 solution : [6, 1, 2, 28]

Essensial at level 9 : set()

Before removed
 coverage : [(0, 131072), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, 16777216), (9, 131072), (10, -1), (11, -1), (12, -1), (13, -1), (14, 8388608), (15, 4194304), (16, 196608), (17, -1), (18, 134217728), (19, 65536), (20, 1048576), (21, 2097152), (22, 32768), (23, 16777216), (24, -1), (25, 524288), (26, -1), (27, -1), (28, -1), (29, 2048), (30, -1), (31, -1), (32, 131072), (33, -1), (34, -1), (35, -1), (36, -1), (37, 524288), (38, 16777216), (39, 2048), (40, 33554432), (41, -1), (42, 65536), (43, 65536), (44, -1), (45, -1), (46, -1), (47, 8388608), (48, 2097152), (49, 16777216), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, 131072), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, 67108864), (9, 524288), (10, -1), (11, -1), (12, -1), (13, -1), (14, 8388608), (15, 4194304), (16, 196608), (17, -1), (18, 134217728), (19, 65536), (20, 1048576), (21, 2097152), (22, 32768), (23, 67108864), (24, -1), (25, 524288), (26, -1), (27, -1), (28, -1), (29, 8192), (30, 4096), (31, -1), (32, 524288), (33, 524288), (34, -1), (35, -1), (36, -1), (37, 524288), (38, 67108864), (39, 8192), (40, 33554432), (41, -1), (42, 262144), (43, 262144), (44, -1), (45, -1), (46, -1), (47, 33554432), (48, 8388608), (49, 33554432), (50, -1), (51, -1), (52, -1)]

Covered at level 9 : set()

After reduction : 
 pending  : [23, 9, 29, 32, 38, 39, 40, 42, 43, 47, 48, 49, 8, 0, 14, 15, 16, 18, 19, 20, 21, 22, 25, 37, 30, 33]
 solution : [6, 1, 2, 28]


Solution : [6, 1, 2, 28] has cost 18.


Decide in level 9 among pending : [23, 9, 29, 32, 38, 39, 40, 42, 43, 47, 48, 49, 8, 0, 14, 15, 16, 18, 19, 20, 21, 22, 25, 37, 30, 33]

Coverage : [(0, 131072), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, 67108864), (9, 524288), (10, -1), (11, -1), (12, -1), (13, -1), (14, 8388608), (15, 4194304), (16, 196608), (17, -1), (18, 134217728), (19, 65536), (20, 1048576), (21, 2097152), (22, 32768), (23, 67108864), (24, -1), (25, 524288), (26, -1), (27, -1), (28, -1), (29, 8192), (30, 4096), (31, -1), (32, 524288), (33, 524288), (34, -1), (35, -1), (36, -1), (37, 524288), (38, 67108864), (39, 8192), (40, 33554432), (41, -1), (42, 262144), (43, 262144), (44, -1), (45, -1), (46, -1), (47, 33554432), (48, 8388608), (49, 33554432), (50, -1), (51, -1), (52, -1)]

Decide 18 with phase True at level 9

After decision at level 9
 pending : [23, 9, 29, 32, 38, 39, 40, 42, 43, 47, 48, 49, 8, 0, 14, 15, 16, 19, 20, 21, 22, 25, 37, 30, 33]
 solution : [6, 1, 2, 28, 18]


New level: 10
 pending : [23, 9, 29, 32, 38, 39, 40, 42, 43, 47, 48, 49, 8, 0, 14, 15, 16, 19, 20, 21, 22, 25, 37, 30, 33]
 solution : [6, 1, 2, 28, 18]


Before reduction : 
 pending  : [23, 9, 29, 32, 38, 39, 40, 42, 43, 47, 48, 49, 8, 0, 14, 15, 16, 19, 20, 21, 22, 25, 37, 30, 33]
 solution : [6, 1, 2, 28, 18]

Essensial at level 10 : set()

Before removed
 coverage : [(0, 131072), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, 67108864), (9, 524288), (10, -1), (11, -1), (12, -1), (13, -1), (14, 8388608), (15, 4194304), (16, 196608), (17, -1), (18, 134217728), (19, 65536), (20, 1048576), (21, 2097152), (22, 32768), (23, 67108864), (24, -1), (25, 524288), (26, -1), (27, -1), (28, -1), (29, 8192), (30, 4096), (31, -1), (32, 524288), (33, 524288), (34, -1), (35, -1), (36, -1), (37, 524288), (38, 67108864), (39, 8192), (40, 33554432), (41, -1), (42, 262144), (43, 262144), (44, -1), (45, -1), (46, -1), (47, 33554432), (48, 8388608), (49, 33554432), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, 0), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, 67108864), (9, 131072), (10, -1), (11, -1), (12, -1), (13, -1), (14, 0), (15, 0), (16, 0), (17, -1), (18, -1), (19, 0), (20, 0), (21, 0), (22, 0), (23, 67108864), (24, -1), (25, 0), (26, -1), (27, -1), (28, -1), (29, 4096), (30, 4096), (31, -1), (32, 262144), (33, 524288), (34, -1), (35, -1), (36, -1), (37, 0), (38, 33554432), (39, 2048), (40, 1024), (41, -1), (42, 131072), (43, 131072), (44, -1), (45, -1), (46, -1), (47, 33554432), (48, 8388608), (49, 33554432), (50, -1), (51, -1), (52, -1)]

Covered at level 10 : {0, 37, 14, 15, 16, 19, 20, 21, 22, 25}

After reduction : 
 pending  : [23, 9, 29, 32, 38, 39, 40, 42, 43, 47, 48, 49, 8, 30, 33]
 solution : [6, 1, 2, 28, 18]


Before reduction : 
 pending  : [23, 9, 29, 32, 38, 39, 40, 42, 43, 47, 48, 49, 8, 30, 33]
 solution : [6, 1, 2, 28, 18]

Essensial at level 10 : set()

Before removed
 coverage : [(0, 0), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, 67108864), (9, 131072), (10, -1), (11, -1), (12, -1), (13, -1), (14, 0), (15, 0), (16, 0), (17, -1), (18, -1), (19, 0), (20, 0), (21, 0), (22, 0), (23, 67108864), (24, -1), (25, 0), (26, -1), (27, -1), (28, -1), (29, 4096), (30, 4096), (31, -1), (32, 262144), (33, 524288), (34, -1), (35, -1), (36, -1), (37, 0), (38, 33554432), (39, 2048), (40, 1024), (41, -1), (42, 131072), (43, 131072), (44, -1), (45, -1), (46, -1), (47, 33554432), (48, 8388608), (49, 33554432), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, 67108864), (9, 131072), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, 67108864), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, 4096), (30, 4096), (31, -1), (32, 262144), (33, 524288), (34, -1), (35, -1), (36, -1), (37, -1), (38, 33554432), (39, 2048), (40, 1024), (41, -1), (42, 131072), (43, 131072), (44, -1), (45, -1), (46, -1), (47, 33554432), (48, 8388608), (49, 33554432), (50, -1), (51, -1), (52, -1)]

Covered at level 10 : set()

After reduction : 
 pending  : [23, 9, 29, 32, 38, 39, 40, 42, 43, 47, 48, 49, 8, 30, 33]
 solution : [6, 1, 2, 28, 18]


Solution : [6, 1, 2, 28, 18] has cost 25.


Before backtrack at level 10
 pending : [23, 9, 29, 32, 38, 39, 40, 42, 43, 47, 48, 49, 8, 30, 33]
 solution : [6, 1, 2, 28, 18]

After backtrack at level 10
 pending : [23, 9, 29, 32, 38, 39, 40, 42, 43, 47, 48, 49, 8, 30, 33, 0, 14, 15, 16, 19, 20, 21, 22, 25, 37]
 solution : [6, 1, 2, 28, 18]


Invert decision for 18 at level 9


New level: 10
 pending : [23, 9, 29, 32, 38, 39, 40, 42, 43, 47, 48, 49, 8, 30, 33, 0, 14, 15, 16, 19, 20, 21, 22, 25, 37]
 solution : [6, 1, 2, 28]


Before reduction : 
 pending  : [23, 9, 29, 32, 38, 39, 40, 42, 43, 47, 48, 49, 8, 30, 33, 0, 14, 15, 16, 19, 20, 21, 22, 25, 37]
 solution : [6, 1, 2, 28]

Essensial at level 10 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, 67108864), (9, 131072), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, 67108864), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, 4096), (30, 4096), (31, -1), (32, 262144), (33, 524288), (34, -1), (35, -1), (36, -1), (37, -1), (38, 33554432), (39, 2048), (40, 1024), (41, -1), (42, 131072), (43, 131072), (44, -1), (45, -1), (46, -1), (47, 33554432), (48, 8388608), (49, 33554432), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, 131072), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, 67108864), (9, 524288), (10, -1), (11, -1), (12, -1), (13, -1), (14, 8388608), (15, 4194304), (16, 196608), (17, -1), (18, -1), (19, 65536), (20, 1048576), (21, 2097152), (22, 32768), (23, 67108864), (24, -1), (25, 524288), (26, -1), (27, -1), (28, -1), (29, 8192), (30, 4096), (31, -1), (32, 524288), (33, 524288), (34, -1), (35, -1), (36, -1), (37, 524288), (38, 67108864), (39, 8192), (40, 33554432), (41, -1), (42, 262144), (43, 262144), (44, -1), (45, -1), (46, -1), (47, 33554432), (48, 8388608), (49, 33554432), (50, -1), (51, -1), (52, -1)]

Covered at level 10 : set()

After reduction : 
 pending  : [23, 9, 29, 32, 38, 39, 40, 42, 43, 47, 48, 49, 8, 30, 33, 0, 14, 15, 16, 19, 20, 21, 22, 25, 37]
 solution : [6, 1, 2, 28]


Solution : [6, 1, 2, 28] has cost 18.


Decide in level 10 among pending : [23, 9, 29, 32, 38, 39, 40, 42, 43, 47, 48, 49, 8, 30, 33, 0, 14, 15, 16, 19, 20, 21, 22, 25, 37]

Coverage : [(0, 131072), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, 67108864), (9, 524288), (10, -1), (11, -1), (12, -1), (13, -1), (14, 8388608), (15, 4194304), (16, 196608), (17, -1), (18, -1), (19, 65536), (20, 1048576), (21, 2097152), (22, 32768), (23, 67108864), (24, -1), (25, 524288), (26, -1), (27, -1), (28, -1), (29, 8192), (30, 4096), (31, -1), (32, 524288), (33, 524288), (34, -1), (35, -1), (36, -1), (37, 524288), (38, 67108864), (39, 8192), (40, 33554432), (41, -1), (42, 262144), (43, 262144), (44, -1), (45, -1), (46, -1), (47, 33554432), (48, 8388608), (49, 33554432), (50, -1), (51, -1), (52, -1)]

Decide 23 with phase True at level 10

After decision at level 10
 pending : [9, 29, 32, 38, 39, 40, 42, 43, 47, 48, 49, 8, 30, 33, 0, 14, 15, 16, 19, 20, 21, 22, 25, 37]
 solution : [6, 1, 2, 28, 23]


New level: 11
 pending : [9, 29, 32, 38, 39, 40, 42, 43, 47, 48, 49, 8, 30, 33, 0, 14, 15, 16, 19, 20, 21, 22, 25, 37]
 solution : [6, 1, 2, 28, 23]


Before reduction : 
 pending  : [9, 29, 32, 38, 39, 40, 42, 43, 47, 48, 49, 8, 30, 33, 0, 14, 15, 16, 19, 20, 21, 22, 25, 37]
 solution : [6, 1, 2, 28, 23]

Essensial at level 11 : set()

Before removed
 coverage : [(0, 131072), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, 67108864), (9, 524288), (10, -1), (11, -1), (12, -1), (13, -1), (14, 8388608), (15, 4194304), (16, 196608), (17, -1), (18, -1), (19, 65536), (20, 1048576), (21, 2097152), (22, 32768), (23, 67108864), (24, -1), (25, 524288), (26, -1), (27, -1), (28, -1), (29, 8192), (30, 4096), (31, -1), (32, 524288), (33, 524288), (34, -1), (35, -1), (36, -1), (37, 524288), (38, 67108864), (39, 8192), (40, 33554432), (41, -1), (42, 262144), (43, 262144), (44, -1), (45, -1), (46, -1), (47, 33554432), (48, 8388608), (49, 33554432), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, 65536), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, 0), (9, 0), (10, -1), (11, -1), (12, -1), (13, -1), (14, 4194304), (15, 2097152), (16, 65536), (17, -1), (18, -1), (19, 32768), (20, 1048576), (21, 2097152), (22, 32768), (23, -1), (24, -1), (25, 524288), (26, -1), (27, -1), (28, -1), (29, 0), (30, 0), (31, -1), (32, 0), (33, 0), (34, -1), (35, -1), (36, -1), (37, 524288), (38, 0), (39, 0), (40, 262144), (41, -1), (42, 0), (43, 0), (44, -1), (45, -1), (46, -1), (47, 0), (48, 0), (49, 0), (50, -1), (51, -1), (52, -1)]

Covered at level 11 : {32, 33, 38, 39, 8, 9, 42, 43, 47, 48, 49, 29, 30}

After reduction : 
 pending  : [40, 0, 14, 15, 16, 19, 20, 21, 22, 25, 37]
 solution : [6, 1, 2, 28, 23]


Before reduction : 
 pending  : [40, 0, 14, 15, 16, 19, 20, 21, 22, 25, 37]
 solution : [6, 1, 2, 28, 23]

Essensial at level 11 : set()

Before removed
 coverage : [(0, 65536), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, 0), (9, 0), (10, -1), (11, -1), (12, -1), (13, -1), (14, 4194304), (15, 2097152), (16, 65536), (17, -1), (18, -1), (19, 32768), (20, 1048576), (21, 2097152), (22, 32768), (23, -1), (24, -1), (25, 524288), (26, -1), (27, -1), (28, -1), (29, 0), (30, 0), (31, -1), (32, 0), (33, 0), (34, -1), (35, -1), (36, -1), (37, 524288), (38, 0), (39, 0), (40, 262144), (41, -1), (42, 0), (43, 0), (44, -1), (45, -1), (46, -1), (47, 0), (48, 0), (49, 0), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, 65536), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 4194304), (15, 2097152), (16, 65536), (17, -1), (18, -1), (19, 32768), (20, 1048576), (21, 2097152), (22, 32768), (23, -1), (24, -1), (25, 524288), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, 524288), (38, -1), (39, -1), (40, 262144), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 11 : set()

After reduction : 
 pending  : [40, 0, 14, 15, 16, 19, 20, 21, 22, 25, 37]
 solution : [6, 1, 2, 28, 23]


Solution : [6, 1, 2, 28, 23] has cost 25.


Before backtrack at level 11
 pending : [40, 0, 14, 15, 16, 19, 20, 21, 22, 25, 37]
 solution : [6, 1, 2, 28, 23]

After backtrack at level 11
 pending : [40, 0, 14, 15, 16, 19, 20, 21, 22, 25, 37, 9, 29, 32, 38, 39, 42, 43, 47, 48, 49, 8, 30, 33]
 solution : [6, 1, 2, 28, 23]


Invert decision for 23 at level 10


New level: 11
 pending : [40, 0, 14, 15, 16, 19, 20, 21, 22, 25, 37, 9, 29, 32, 38, 39, 42, 43, 47, 48, 49, 8, 30, 33]
 solution : [6, 1, 2, 28]


Before reduction : 
 pending  : [40, 0, 14, 15, 16, 19, 20, 21, 22, 25, 37, 9, 29, 32, 38, 39, 42, 43, 47, 48, 49, 8, 30, 33]
 solution : [6, 1, 2, 28]

Essensial at level 11 : {8}

Before removed
 coverage : [(0, 65536), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 4194304), (15, 2097152), (16, 65536), (17, -1), (18, -1), (19, 32768), (20, 1048576), (21, 2097152), (22, 32768), (23, -1), (24, -1), (25, 524288), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, 524288), (38, -1), (39, -1), (40, 262144), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, 65536), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, 0), (10, -1), (11, -1), (12, -1), (13, -1), (14, 4194304), (15, 2097152), (16, 65536), (17, -1), (18, -1), (19, 32768), (20, 1048576), (21, 2097152), (22, 32768), (23, -1), (24, -1), (25, 524288), (26, -1), (27, -1), (28, -1), (29, 0), (30, 0), (31, -1), (32, 0), (33, 0), (34, -1), (35, -1), (36, -1), (37, 524288), (38, 0), (39, 0), (40, 32768), (41, -1), (42, 0), (43, 0), (44, -1), (45, -1), (46, -1), (47, 0), (48, 0), (49, 0), (50, -1), (51, -1), (52, -1)]

Covered at level 11 : {32, 33, 38, 39, 9, 42, 43, 47, 48, 49, 29, 30}

After reduction : 
 pending  : [40, 0, 14, 15, 16, 19, 20, 21, 22, 25, 37]
 solution : [6, 1, 2, 28, 8]


Before reduction : 
 pending  : [40, 0, 14, 15, 16, 19, 20, 21, 22, 25, 37]
 solution : [6, 1, 2, 28, 8]

Essensial at level 11 : set()

Before removed
 coverage : [(0, 65536), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, 0), (10, -1), (11, -1), (12, -1), (13, -1), (14, 4194304), (15, 2097152), (16, 65536), (17, -1), (18, -1), (19, 32768), (20, 1048576), (21, 2097152), (22, 32768), (23, -1), (24, -1), (25, 524288), (26, -1), (27, -1), (28, -1), (29, 0), (30, 0), (31, -1), (32, 0), (33, 0), (34, -1), (35, -1), (36, -1), (37, 524288), (38, 0), (39, 0), (40, 32768), (41, -1), (42, 0), (43, 0), (44, -1), (45, -1), (46, -1), (47, 0), (48, 0), (49, 0), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, 65536), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 4194304), (15, 2097152), (16, 65536), (17, -1), (18, -1), (19, 32768), (20, 1048576), (21, 2097152), (22, 32768), (23, -1), (24, -1), (25, 524288), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, 524288), (38, -1), (39, -1), (40, 32768), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 11 : set()

After reduction : 
 pending  : [40, 0, 14, 15, 16, 19, 20, 21, 22, 25, 37]
 solution : [6, 1, 2, 28, 8]


Solution : [6, 1, 2, 28, 8] has cost 22.


Decide in level 11 among pending : [40, 0, 14, 15, 16, 19, 20, 21, 22, 25, 37]

Coverage : [(0, 65536), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 4194304), (15, 2097152), (16, 65536), (17, -1), (18, -1), (19, 32768), (20, 1048576), (21, 2097152), (22, 32768), (23, -1), (24, -1), (25, 524288), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, 524288), (38, -1), (39, -1), (40, 32768), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Decide 14 with phase True at level 11

After decision at level 11
 pending : [40, 0, 15, 16, 19, 20, 21, 22, 25, 37]
 solution : [6, 1, 2, 28, 8, 14]


New level: 12
 pending : [40, 0, 15, 16, 19, 20, 21, 22, 25, 37]
 solution : [6, 1, 2, 28, 8, 14]


Before reduction : 
 pending  : [40, 0, 15, 16, 19, 20, 21, 22, 25, 37]
 solution : [6, 1, 2, 28, 8, 14]

Essensial at level 12 : set()

Before removed
 coverage : [(0, 65536), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 4194304), (15, 2097152), (16, 65536), (17, -1), (18, -1), (19, 32768), (20, 1048576), (21, 2097152), (22, 32768), (23, -1), (24, -1), (25, 524288), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, 524288), (38, -1), (39, -1), (40, 32768), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, 0), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, 0), (16, 0), (17, -1), (18, -1), (19, 0), (20, 8192), (21, 32768), (22, 8192), (23, -1), (24, -1), (25, 2048), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, 2048), (38, -1), (39, -1), (40, 1024), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 12 : {0, 16, 19, 15}

After reduction : 
 pending  : [40, 20, 21, 22, 25, 37]
 solution : [6, 1, 2, 28, 8, 14]


Before reduction : 
 pending  : [40, 20, 21, 22, 25, 37]
 solution : [6, 1, 2, 28, 8, 14]

Essensial at level 12 : set()

Before removed
 coverage : [(0, 0), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, 0), (16, 0), (17, -1), (18, -1), (19, 0), (20, 8192), (21, 32768), (22, 8192), (23, -1), (24, -1), (25, 2048), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, 2048), (38, -1), (39, -1), (40, 1024), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, 8192), (21, 32768), (22, 8192), (23, -1), (24, -1), (25, 2048), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, 2048), (38, -1), (39, -1), (40, 1024), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 12 : set()

After reduction : 
 pending  : [40, 20, 21, 22, 25, 37]
 solution : [6, 1, 2, 28, 8, 14]


Solution : [6, 1, 2, 28, 8, 14] has cost 31.


Before backtrack at level 12
 pending : [40, 20, 21, 22, 25, 37]
 solution : [6, 1, 2, 28, 8, 14]

After backtrack at level 12
 pending : [40, 20, 21, 22, 25, 37, 0, 15, 16, 19]
 solution : [6, 1, 2, 28, 8, 14]


Invert decision for 14 at level 11


New level: 12
 pending : [40, 20, 21, 22, 25, 37, 0, 15, 16, 19]
 solution : [6, 1, 2, 28, 8]


Before reduction : 
 pending  : [40, 20, 21, 22, 25, 37, 0, 15, 16, 19]
 solution : [6, 1, 2, 28, 8]

Essensial at level 12 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, 8192), (21, 32768), (22, 8192), (23, -1), (24, -1), (25, 2048), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, 2048), (38, -1), (39, -1), (40, 1024), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, 65536), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, 2097152), (16, 65536), (17, -1), (18, -1), (19, 32768), (20, 1048576), (21, 2097152), (22, 32768), (23, -1), (24, -1), (25, 524288), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, 524288), (38, -1), (39, -1), (40, 32768), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 12 : set()

After reduction : 
 pending  : [40, 20, 21, 22, 25, 37, 0, 15, 16, 19]
 solution : [6, 1, 2, 28, 8]


Solution : [6, 1, 2, 28, 8] has cost 22.


Decide in level 12 among pending : [40, 20, 21, 22, 25, 37, 0, 15, 16, 19]

Coverage : [(0, 65536), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, 2097152), (16, 65536), (17, -1), (18, -1), (19, 32768), (20, 1048576), (21, 2097152), (22, 32768), (23, -1), (24, -1), (25, 524288), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, 524288), (38, -1), (39, -1), (40, 32768), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Decide 21 with phase True at level 12

After decision at level 12
 pending : [40, 20, 22, 25, 37, 0, 15, 16, 19]
 solution : [6, 1, 2, 28, 8, 21]


New level: 13
 pending : [40, 20, 22, 25, 37, 0, 15, 16, 19]
 solution : [6, 1, 2, 28, 8, 21]


Before reduction : 
 pending  : [40, 20, 22, 25, 37, 0, 15, 16, 19]
 solution : [6, 1, 2, 28, 8, 21]

Essensial at level 13 : set()

Before removed
 coverage : [(0, 65536), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, 2097152), (16, 65536), (17, -1), (18, -1), (19, 32768), (20, 1048576), (21, 2097152), (22, 32768), (23, -1), (24, -1), (25, 524288), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, 524288), (38, -1), (39, -1), (40, 32768), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, 32768), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, 524288), (16, 32768), (17, -1), (18, -1), (19, 0), (20, 0), (21, -1), (22, 0), (23, -1), (24, -1), (25, 131072), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, 131072), (38, -1), (39, -1), (40, 512), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 13 : {19, 20, 22}

After reduction : 
 pending  : [40, 25, 37, 0, 15, 16]
 solution : [6, 1, 2, 28, 8, 21]


Before reduction : 
 pending  : [40, 25, 37, 0, 15, 16]
 solution : [6, 1, 2, 28, 8, 21]

Essensial at level 13 : set()

Before removed
 coverage : [(0, 32768), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, 524288), (16, 32768), (17, -1), (18, -1), (19, 0), (20, 0), (21, -1), (22, 0), (23, -1), (24, -1), (25, 131072), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, 131072), (38, -1), (39, -1), (40, 512), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, 32768), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, 524288), (16, 32768), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, 131072), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, 131072), (38, -1), (39, -1), (40, 512), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 13 : set()

After reduction : 
 pending  : [40, 25, 37, 0, 15, 16]
 solution : [6, 1, 2, 28, 8, 21]


Solution : [6, 1, 2, 28, 8, 21] has cost 29.


Before backtrack at level 13
 pending : [40, 25, 37, 0, 15, 16]
 solution : [6, 1, 2, 28, 8, 21]

After backtrack at level 13
 pending : [40, 25, 37, 0, 15, 16, 20, 22, 19]
 solution : [6, 1, 2, 28, 8, 21]


Invert decision for 21 at level 12


New level: 13
 pending : [40, 25, 37, 0, 15, 16, 20, 22, 19]
 solution : [6, 1, 2, 28, 8]


Before reduction : 
 pending  : [40, 25, 37, 0, 15, 16, 20, 22, 19]
 solution : [6, 1, 2, 28, 8]

Essensial at level 13 : set()

Before removed
 coverage : [(0, 32768), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, 524288), (16, 32768), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, 131072), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, 131072), (38, -1), (39, -1), (40, 512), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, 65536), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, 2097152), (16, 65536), (17, -1), (18, -1), (19, 32768), (20, 1048576), (21, -1), (22, 32768), (23, -1), (24, -1), (25, 524288), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, 524288), (38, -1), (39, -1), (40, 32768), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 13 : set()

After reduction : 
 pending  : [40, 25, 37, 0, 15, 16, 20, 22, 19]
 solution : [6, 1, 2, 28, 8]


Solution : [6, 1, 2, 28, 8] has cost 22.


Decide in level 13 among pending : [40, 25, 37, 0, 15, 16, 20, 22, 19]

Coverage : [(0, 65536), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, 2097152), (16, 65536), (17, -1), (18, -1), (19, 32768), (20, 1048576), (21, -1), (22, 32768), (23, -1), (24, -1), (25, 524288), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, 524288), (38, -1), (39, -1), (40, 32768), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Decide 15 with phase True at level 13

After decision at level 13
 pending : [40, 25, 37, 0, 16, 20, 22, 19]
 solution : [6, 1, 2, 28, 8, 15]


New level: 14
 pending : [40, 25, 37, 0, 16, 20, 22, 19]
 solution : [6, 1, 2, 28, 8, 15]


Before reduction : 
 pending  : [40, 25, 37, 0, 16, 20, 22, 19]
 solution : [6, 1, 2, 28, 8, 15]

Essensial at level 14 : set()

Before removed
 coverage : [(0, 65536), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, 2097152), (16, 65536), (17, -1), (18, -1), (19, 32768), (20, 1048576), (21, -1), (22, 32768), (23, -1), (24, -1), (25, 524288), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, 524288), (38, -1), (39, -1), (40, 32768), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, 0), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, 0), (17, -1), (18, -1), (19, 0), (20, 8192), (21, -1), (22, 8192), (23, -1), (24, -1), (25, 2048), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, 2048), (38, -1), (39, -1), (40, 1024), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 14 : {0, 16, 19}

After reduction : 
 pending  : [40, 25, 37, 20, 22]
 solution : [6, 1, 2, 28, 8, 15]


Before reduction : 
 pending  : [40, 25, 37, 20, 22]
 solution : [6, 1, 2, 28, 8, 15]

Essensial at level 14 : set()

Before removed
 coverage : [(0, 0), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, 0), (17, -1), (18, -1), (19, 0), (20, 8192), (21, -1), (22, 8192), (23, -1), (24, -1), (25, 2048), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, 2048), (38, -1), (39, -1), (40, 1024), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, 8192), (21, -1), (22, 8192), (23, -1), (24, -1), (25, 2048), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, 2048), (38, -1), (39, -1), (40, 1024), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 14 : set()

After reduction : 
 pending  : [40, 25, 37, 20, 22]
 solution : [6, 1, 2, 28, 8, 15]


Solution : [6, 1, 2, 28, 8, 15] has cost 31.


Before backtrack at level 14
 pending : [40, 25, 37, 20, 22]
 solution : [6, 1, 2, 28, 8, 15]

After backtrack at level 14
 pending : [40, 25, 37, 20, 22, 0, 16, 19]
 solution : [6, 1, 2, 28, 8, 15]


Invert decision for 15 at level 13


New level: 14
 pending : [40, 25, 37, 20, 22, 0, 16, 19]
 solution : [6, 1, 2, 28, 8]


Before reduction : 
 pending  : [40, 25, 37, 20, 22, 0, 16, 19]
 solution : [6, 1, 2, 28, 8]

Essensial at level 14 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, 8192), (21, -1), (22, 8192), (23, -1), (24, -1), (25, 2048), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, 2048), (38, -1), (39, -1), (40, 1024), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, 65536), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, 65536), (17, -1), (18, -1), (19, 32768), (20, 1048576), (21, -1), (22, 32768), (23, -1), (24, -1), (25, 524288), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, 524288), (38, -1), (39, -1), (40, 32768), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 14 : set()

After reduction : 
 pending  : [40, 25, 37, 20, 22, 0, 16, 19]
 solution : [6, 1, 2, 28, 8]


Solution : [6, 1, 2, 28, 8] has cost 22.


Decide in level 14 among pending : [40, 25, 37, 20, 22, 0, 16, 19]

Coverage : [(0, 65536), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, 65536), (17, -1), (18, -1), (19, 32768), (20, 1048576), (21, -1), (22, 32768), (23, -1), (24, -1), (25, 524288), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, 524288), (38, -1), (39, -1), (40, 32768), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Decide 20 with phase True at level 14

After decision at level 14
 pending : [40, 25, 37, 22, 0, 16, 19]
 solution : [6, 1, 2, 28, 8, 20]


New level: 15
 pending : [40, 25, 37, 22, 0, 16, 19]
 solution : [6, 1, 2, 28, 8, 20]


Before reduction : 
 pending  : [40, 25, 37, 22, 0, 16, 19]
 solution : [6, 1, 2, 28, 8, 20]

Essensial at level 15 : set()

Before removed
 coverage : [(0, 65536), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, 65536), (17, -1), (18, -1), (19, 32768), (20, 1048576), (21, -1), (22, 32768), (23, -1), (24, -1), (25, 524288), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, 524288), (38, -1), (39, -1), (40, 32768), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, 32768), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, 32768), (17, -1), (18, -1), (19, 0), (20, -1), (21, -1), (22, 0), (23, -1), (24, -1), (25, 131072), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, 131072), (38, -1), (39, -1), (40, 512), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 15 : {19, 22}

After reduction : 
 pending  : [40, 25, 37, 0, 16]
 solution : [6, 1, 2, 28, 8, 20]


Before reduction : 
 pending  : [40, 25, 37, 0, 16]
 solution : [6, 1, 2, 28, 8, 20]

Essensial at level 15 : set()

Before removed
 coverage : [(0, 32768), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, 32768), (17, -1), (18, -1), (19, 0), (20, -1), (21, -1), (22, 0), (23, -1), (24, -1), (25, 131072), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, 131072), (38, -1), (39, -1), (40, 512), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, 32768), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, 32768), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, 131072), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, 131072), (38, -1), (39, -1), (40, 512), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 15 : set()

After reduction : 
 pending  : [40, 25, 37, 0, 16]
 solution : [6, 1, 2, 28, 8, 20]


Solution : [6, 1, 2, 28, 8, 20] has cost 29.


Before backtrack at level 15
 pending : [40, 25, 37, 0, 16]
 solution : [6, 1, 2, 28, 8, 20]

After backtrack at level 15
 pending : [40, 25, 37, 0, 16, 22, 19]
 solution : [6, 1, 2, 28, 8, 20]


Invert decision for 20 at level 14


New level: 15
 pending : [40, 25, 37, 0, 16, 22, 19]
 solution : [6, 1, 2, 28, 8]


Before reduction : 
 pending  : [40, 25, 37, 0, 16, 22, 19]
 solution : [6, 1, 2, 28, 8]

Essensial at level 15 : {22}

Before removed
 coverage : [(0, 32768), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, 32768), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, 131072), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, 131072), (38, -1), (39, -1), (40, 512), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, 65536), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, 65536), (17, -1), (18, -1), (19, 16384), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, 524288), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, 524288), (38, -1), (39, -1), (40, 32768), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 15 : set()

After reduction : 
 pending  : [40, 25, 37, 0, 16, 19]
 solution : [6, 1, 2, 28, 8, 22]


Before reduction : 
 pending  : [40, 25, 37, 0, 16, 19]
 solution : [6, 1, 2, 28, 8, 22]

Essensial at level 15 : set()

Before removed
 coverage : [(0, 65536), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, 65536), (17, -1), (18, -1), (19, 16384), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, 524288), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, 524288), (38, -1), (39, -1), (40, 32768), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, 65536), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, 65536), (17, -1), (18, -1), (19, 16384), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, 524288), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, 524288), (38, -1), (39, -1), (40, 32768), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 15 : set()

After reduction : 
 pending  : [40, 25, 37, 0, 16, 19]
 solution : [6, 1, 2, 28, 8, 22]


Solution : [6, 1, 2, 28, 8, 22] has cost 29.


Before backtrack at level 15
 pending : [40, 25, 37, 0, 16, 19]
 solution : [6, 1, 2, 28, 8, 22]

After backtrack at level 15
 pending : [40, 25, 37, 0, 16, 19, 22]
 solution : [6, 1, 2, 28, 8]


Before backtrack at level 14
 pending : [40, 25, 37, 0, 16, 19, 22]
 solution : [6, 1, 2, 28, 8]

After backtrack at level 14
 pending : [40, 25, 37, 0, 16, 19, 22, 20]
 solution : [6, 1, 2, 28, 8]


Before backtrack at level 13
 pending : [40, 25, 37, 0, 16, 19, 22, 20]
 solution : [6, 1, 2, 28, 8]

After backtrack at level 13
 pending : [40, 25, 37, 0, 16, 19, 22, 20, 15]
 solution : [6, 1, 2, 28, 8]


Before backtrack at level 12
 pending : [40, 25, 37, 0, 16, 19, 22, 20, 15]
 solution : [6, 1, 2, 28, 8]

After backtrack at level 12
 pending : [40, 25, 37, 0, 16, 19, 22, 20, 15, 21]
 solution : [6, 1, 2, 28, 8]


Before backtrack at level 11
 pending : [40, 25, 37, 0, 16, 19, 22, 20, 15, 21]
 solution : [6, 1, 2, 28, 8]

After backtrack at level 11
 pending : [40, 25, 37, 0, 16, 19, 22, 20, 15, 21, 8, 9, 29, 32, 38, 39, 42, 43, 47, 48, 49, 30, 33, 14]
 solution : [6, 1, 2, 28]


Before backtrack at level 10
 pending : [40, 25, 37, 0, 16, 19, 22, 20, 15, 21, 8, 9, 29, 32, 38, 39, 42, 43, 47, 48, 49, 30, 33, 14]
 solution : [6, 1, 2, 28]

After backtrack at level 10
 pending : [40, 25, 37, 0, 16, 19, 22, 20, 15, 21, 8, 9, 29, 32, 38, 39, 42, 43, 47, 48, 49, 30, 33, 14, 23]
 solution : [6, 1, 2, 28]


Before backtrack at level 9
 pending : [40, 25, 37, 0, 16, 19, 22, 20, 15, 21, 8, 9, 29, 32, 38, 39, 42, 43, 47, 48, 49, 30, 33, 14, 23]
 solution : [6, 1, 2, 28]

After backtrack at level 9
 pending : [40, 25, 37, 0, 16, 19, 22, 20, 15, 21, 8, 9, 29, 32, 38, 39, 42, 43, 47, 48, 49, 30, 33, 14, 23, 18]
 solution : [6, 1, 2, 28]


Before backtrack at level 8
 pending : [40, 25, 37, 0, 16, 19, 22, 20, 15, 21, 8, 9, 29, 32, 38, 39, 42, 43, 47, 48, 49, 30, 33, 14, 23, 18]
 solution : [6, 1, 2, 28]

After backtrack at level 8
 pending : [40, 25, 37, 0, 16, 19, 22, 20, 15, 21, 8, 9, 29, 32, 38, 39, 42, 43, 47, 48, 49, 30, 33, 14, 23, 18, 24]
 solution : [6, 1, 2, 28]


Before backtrack at level 7
 pending : [40, 25, 37, 0, 16, 19, 22, 20, 15, 21, 8, 9, 29, 32, 38, 39, 42, 43, 47, 48, 49, 30, 33, 14, 23, 18, 24]
 solution : [6, 1, 2, 28]

After backtrack at level 7
 pending : [40, 25, 37, 0, 16, 19, 22, 20, 15, 21, 8, 9, 29, 32, 38, 39, 42, 43, 47, 48, 49, 30, 33, 14, 23, 18, 24, 41]
 solution : [6, 1, 2, 28]


Before backtrack at level 6
 pending : [40, 25, 37, 0, 16, 19, 22, 20, 15, 21, 8, 9, 29, 32, 38, 39, 42, 43, 47, 48, 49, 30, 33, 14, 23, 18, 24, 41]
 solution : [6, 1, 2, 28]

After backtrack at level 6
 pending : [40, 25, 37, 0, 16, 19, 22, 20, 15, 21, 8, 9, 29, 32, 38, 39, 42, 43, 47, 48, 49, 30, 33, 14, 23, 18, 24, 41, 17]
 solution : [6, 1, 2, 28]


Invert decision for 28 at level 5


New level: 6
 pending : [40, 25, 37, 0, 16, 19, 22, 20, 15, 21, 8, 9, 29, 32, 38, 39, 42, 43, 47, 48, 49, 30, 33, 14, 23, 18, 24, 41, 17]
 solution : [6, 1, 2]


Before reduction : 
 pending  : [40, 25, 37, 0, 16, 19, 22, 20, 15, 21, 8, 9, 29, 32, 38, 39, 42, 43, 47, 48, 49, 30, 33, 14, 23, 18, 24, 41, 17]
 solution : [6, 1, 2]

Essensial at level 6 : set()

Before removed
 coverage : [(0, 65536), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, 65536), (17, -1), (18, -1), (19, 16384), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, 524288), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, 524288), (38, -1), (39, -1), (40, 32768), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, 131072), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, 67108864), (9, 524288), (10, -1), (11, -1), (12, -1), (13, -1), (14, 8388608), (15, 4194304), (16, 196608), (17, 268435456), (18, 134217728), (19, 65536), (20, 1048576), (21, 2097152), (22, 32768), (23, 67108864), (24, 268435456), (25, 524288), (26, -1), (27, -1), (28, -1), (29, 8192), (30, 8192), (31, -1), (32, 524288), (33, 1048576), (34, -1), (35, -1), (36, -1), (37, 524288), (38, 67108864), (39, 8192), (40, 33554432), (41, 134217728), (42, 262144), (43, 262144), (44, -1), (45, -1), (46, -1), (47, 33554432), (48, 8388608), (49, 33554432), (50, -1), (51, -1), (52, -1)]

Covered at level 6 : set()

After reduction : 
 pending  : [40, 25, 37, 0, 16, 19, 22, 20, 15, 21, 8, 9, 29, 32, 38, 39, 42, 43, 47, 48, 49, 30, 33, 14, 23, 18, 24, 41, 17]
 solution : [6, 1, 2]


Solution : [6, 1, 2] has cost 14.


Decide in level 6 among pending : [40, 25, 37, 0, 16, 19, 22, 20, 15, 21, 8, 9, 29, 32, 38, 39, 42, 43, 47, 48, 49, 30, 33, 14, 23, 18, 24, 41, 17]

Coverage : [(0, 131072), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, 67108864), (9, 524288), (10, -1), (11, -1), (12, -1), (13, -1), (14, 8388608), (15, 4194304), (16, 196608), (17, 268435456), (18, 134217728), (19, 65536), (20, 1048576), (21, 2097152), (22, 32768), (23, 67108864), (24, 268435456), (25, 524288), (26, -1), (27, -1), (28, -1), (29, 8192), (30, 8192), (31, -1), (32, 524288), (33, 1048576), (34, -1), (35, -1), (36, -1), (37, 524288), (38, 67108864), (39, 8192), (40, 33554432), (41, 134217728), (42, 262144), (43, 262144), (44, -1), (45, -1), (46, -1), (47, 33554432), (48, 8388608), (49, 33554432), (50, -1), (51, -1), (52, -1)]

Decide 24 with phase True at level 6

After decision at level 6
 pending : [40, 25, 37, 0, 16, 19, 22, 20, 15, 21, 8, 9, 29, 32, 38, 39, 42, 43, 47, 48, 49, 30, 33, 14, 23, 18, 41, 17]
 solution : [6, 1, 2, 24]


New level: 7
 pending : [40, 25, 37, 0, 16, 19, 22, 20, 15, 21, 8, 9, 29, 32, 38, 39, 42, 43, 47, 48, 49, 30, 33, 14, 23, 18, 41, 17]
 solution : [6, 1, 2, 24]


Before reduction : 
 pending  : [40, 25, 37, 0, 16, 19, 22, 20, 15, 21, 8, 9, 29, 32, 38, 39, 42, 43, 47, 48, 49, 30, 33, 14, 23, 18, 41, 17]
 solution : [6, 1, 2, 24]

Essensial at level 7 : set()

Before removed
 coverage : [(0, 131072), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, 67108864), (9, 524288), (10, -1), (11, -1), (12, -1), (13, -1), (14, 8388608), (15, 4194304), (16, 196608), (17, 268435456), (18, 134217728), (19, 65536), (20, 1048576), (21, 2097152), (22, 32768), (23, 67108864), (24, 268435456), (25, 524288), (26, -1), (27, -1), (28, -1), (29, 8192), (30, 8192), (31, -1), (32, 524288), (33, 1048576), (34, -1), (35, -1), (36, -1), (37, 524288), (38, 67108864), (39, 8192), (40, 33554432), (41, 134217728), (42, 262144), (43, 262144), (44, -1), (45, -1), (46, -1), (47, 33554432), (48, 8388608), (49, 33554432), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, 131072), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, 16777216), (9, 131072), (10, -1), (11, -1), (12, -1), (13, -1), (14, 8388608), (15, 4194304), (16, 196608), (17, 268435456), (18, 134217728), (19, 65536), (20, 1048576), (21, 2097152), (22, 32768), (23, 16777216), (24, -1), (25, 524288), (26, -1), (27, -1), (28, -1), (29, 2048), (30, 0), (31, -1), (32, 131072), (33, 0), (34, -1), (35, -1), (36, -1), (37, 524288), (38, 16777216), (39, 2048), (40, 33554432), (41, 512), (42, 65536), (43, 65536), (44, -1), (45, -1), (46, -1), (47, 8388608), (48, 2097152), (49, 16777216), (50, -1), (51, -1), (52, -1)]

Covered at level 7 : {33, 30}

After reduction : 
 pending  : [40, 25, 37, 0, 16, 19, 22, 20, 15, 21, 8, 9, 29, 32, 38, 39, 42, 43, 47, 48, 49, 14, 23, 18, 41, 17]
 solution : [6, 1, 2, 24]


Before reduction : 
 pending  : [40, 25, 37, 0, 16, 19, 22, 20, 15, 21, 8, 9, 29, 32, 38, 39, 42, 43, 47, 48, 49, 14, 23, 18, 41, 17]
 solution : [6, 1, 2, 24]

Essensial at level 7 : set()

Before removed
 coverage : [(0, 131072), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, 16777216), (9, 131072), (10, -1), (11, -1), (12, -1), (13, -1), (14, 8388608), (15, 4194304), (16, 196608), (17, 268435456), (18, 134217728), (19, 65536), (20, 1048576), (21, 2097152), (22, 32768), (23, 16777216), (24, -1), (25, 524288), (26, -1), (27, -1), (28, -1), (29, 2048), (30, 0), (31, -1), (32, 131072), (33, 0), (34, -1), (35, -1), (36, -1), (37, 524288), (38, 16777216), (39, 2048), (40, 33554432), (41, 512), (42, 65536), (43, 65536), (44, -1), (45, -1), (46, -1), (47, 8388608), (48, 2097152), (49, 16777216), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, 131072), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, 16777216), (9, 131072), (10, -1), (11, -1), (12, -1), (13, -1), (14, 8388608), (15, 4194304), (16, 196608), (17, 268435456), (18, 134217728), (19, 65536), (20, 1048576), (21, 2097152), (22, 32768), (23, 16777216), (24, -1), (25, 524288), (26, -1), (27, -1), (28, -1), (29, 2048), (30, -1), (31, -1), (32, 131072), (33, -1), (34, -1), (35, -1), (36, -1), (37, 524288), (38, 16777216), (39, 2048), (40, 33554432), (41, 512), (42, 65536), (43, 65536), (44, -1), (45, -1), (46, -1), (47, 8388608), (48, 2097152), (49, 16777216), (50, -1), (51, -1), (52, -1)]

Covered at level 7 : set()

After reduction : 
 pending  : [40, 25, 37, 0, 16, 19, 22, 20, 15, 21, 8, 9, 29, 32, 38, 39, 42, 43, 47, 48, 49, 14, 23, 18, 41, 17]
 solution : [6, 1, 2, 24]


Solution : [6, 1, 2, 24] has cost 21.


Decide in level 7 among pending : [40, 25, 37, 0, 16, 19, 22, 20, 15, 21, 8, 9, 29, 32, 38, 39, 42, 43, 47, 48, 49, 14, 23, 18, 41, 17]

Coverage : [(0, 131072), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, 16777216), (9, 131072), (10, -1), (11, -1), (12, -1), (13, -1), (14, 8388608), (15, 4194304), (16, 196608), (17, 268435456), (18, 134217728), (19, 65536), (20, 1048576), (21, 2097152), (22, 32768), (23, 16777216), (24, -1), (25, 524288), (26, -1), (27, -1), (28, -1), (29, 2048), (30, -1), (31, -1), (32, 131072), (33, -1), (34, -1), (35, -1), (36, -1), (37, 524288), (38, 16777216), (39, 2048), (40, 33554432), (41, 512), (42, 65536), (43, 65536), (44, -1), (45, -1), (46, -1), (47, 8388608), (48, 2097152), (49, 16777216), (50, -1), (51, -1), (52, -1)]

Decide 17 with phase True at level 7

After decision at level 7
 pending : [40, 25, 37, 0, 16, 19, 22, 20, 15, 21, 8, 9, 29, 32, 38, 39, 42, 43, 47, 48, 49, 14, 23, 18, 41]
 solution : [6, 1, 2, 24, 17]


New level: 8
 pending : [40, 25, 37, 0, 16, 19, 22, 20, 15, 21, 8, 9, 29, 32, 38, 39, 42, 43, 47, 48, 49, 14, 23, 18, 41]
 solution : [6, 1, 2, 24, 17]


Before reduction : 
 pending  : [40, 25, 37, 0, 16, 19, 22, 20, 15, 21, 8, 9, 29, 32, 38, 39, 42, 43, 47, 48, 49, 14, 23, 18, 41]
 solution : [6, 1, 2, 24, 17]

Essensial at level 8 : set()

Before removed
 coverage : [(0, 131072), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, 16777216), (9, 131072), (10, -1), (11, -1), (12, -1), (13, -1), (14, 8388608), (15, 4194304), (16, 196608), (17, 268435456), (18, 134217728), (19, 65536), (20, 1048576), (21, 2097152), (22, 32768), (23, 16777216), (24, -1), (25, 524288), (26, -1), (27, -1), (28, -1), (29, 2048), (30, -1), (31, -1), (32, 131072), (33, -1), (34, -1), (35, -1), (36, -1), (37, 524288), (38, 16777216), (39, 2048), (40, 33554432), (41, 512), (42, 65536), (43, 65536), (44, -1), (45, -1), (46, -1), (47, 8388608), (48, 2097152), (49, 16777216), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, 0), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, 16777216), (9, 32768), (10, -1), (11, -1), (12, -1), (13, -1), (14, 0), (15, 0), (16, 0), (17, -1), (18, 0), (19, 0), (20, 0), (21, 0), (22, 0), (23, 16777216), (24, -1), (25, 0), (26, -1), (27, -1), (28, -1), (29, 1024), (30, -1), (31, -1), (32, 65536), (33, -1), (34, -1), (35, -1), (36, -1), (37, 0), (38, 8388608), (39, 512), (40, 512), (41, 0), (42, 16384), (43, 16384), (44, -1), (45, -1), (46, -1), (47, 4194304), (48, 524288), (49, 16777216), (50, -1), (51, -1), (52, -1)]

Covered at level 8 : {0, 37, 41, 14, 15, 16, 18, 19, 20, 21, 22, 25}

After reduction : 
 pending  : [40, 8, 9, 29, 32, 38, 39, 42, 43, 47, 48, 49, 23]
 solution : [6, 1, 2, 24, 17]


Before reduction : 
 pending  : [40, 8, 9, 29, 32, 38, 39, 42, 43, 47, 48, 49, 23]
 solution : [6, 1, 2, 24, 17]

Essensial at level 8 : set()

Before removed
 coverage : [(0, 0), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, 16777216), (9, 32768), (10, -1), (11, -1), (12, -1), (13, -1), (14, 0), (15, 0), (16, 0), (17, -1), (18, 0), (19, 0), (20, 0), (21, 0), (22, 0), (23, 16777216), (24, -1), (25, 0), (26, -1), (27, -1), (28, -1), (29, 1024), (30, -1), (31, -1), (32, 65536), (33, -1), (34, -1), (35, -1), (36, -1), (37, 0), (38, 8388608), (39, 512), (40, 512), (41, 0), (42, 16384), (43, 16384), (44, -1), (45, -1), (46, -1), (47, 4194304), (48, 524288), (49, 16777216), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, 16777216), (9, 32768), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, 16777216), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, 1024), (30, -1), (31, -1), (32, 65536), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, 8388608), (39, 512), (40, 512), (41, -1), (42, 16384), (43, 16384), (44, -1), (45, -1), (46, -1), (47, 4194304), (48, 524288), (49, 16777216), (50, -1), (51, -1), (52, -1)]

Covered at level 8 : set()

After reduction : 
 pending  : [40, 8, 9, 29, 32, 38, 39, 42, 43, 47, 48, 49, 23]
 solution : [6, 1, 2, 24, 17]


Solution : [6, 1, 2, 24, 17] has cost 28.


Before backtrack at level 8
 pending : [40, 8, 9, 29, 32, 38, 39, 42, 43, 47, 48, 49, 23]
 solution : [6, 1, 2, 24, 17]

After backtrack at level 8
 pending : [40, 8, 9, 29, 32, 38, 39, 42, 43, 47, 48, 49, 23, 25, 37, 0, 16, 19, 22, 20, 15, 21, 14, 18, 41]
 solution : [6, 1, 2, 24, 17]


Invert decision for 17 at level 7


New level: 8
 pending : [40, 8, 9, 29, 32, 38, 39, 42, 43, 47, 48, 49, 23, 25, 37, 0, 16, 19, 22, 20, 15, 21, 14, 18, 41]
 solution : [6, 1, 2, 24]


Before reduction : 
 pending  : [40, 8, 9, 29, 32, 38, 39, 42, 43, 47, 48, 49, 23, 25, 37, 0, 16, 19, 22, 20, 15, 21, 14, 18, 41]
 solution : [6, 1, 2, 24]

Essensial at level 8 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, 16777216), (9, 32768), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, 16777216), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, 1024), (30, -1), (31, -1), (32, 65536), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, 8388608), (39, 512), (40, 512), (41, -1), (42, 16384), (43, 16384), (44, -1), (45, -1), (46, -1), (47, 4194304), (48, 524288), (49, 16777216), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, 131072), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, 16777216), (9, 131072), (10, -1), (11, -1), (12, -1), (13, -1), (14, 8388608), (15, 4194304), (16, 196608), (17, -1), (18, 134217728), (19, 65536), (20, 1048576), (21, 2097152), (22, 32768), (23, 16777216), (24, -1), (25, 524288), (26, -1), (27, -1), (28, -1), (29, 2048), (30, -1), (31, -1), (32, 131072), (33, -1), (34, -1), (35, -1), (36, -1), (37, 524288), (38, 16777216), (39, 2048), (40, 33554432), (41, 512), (42, 65536), (43, 65536), (44, -1), (45, -1), (46, -1), (47, 8388608), (48, 2097152), (49, 16777216), (50, -1), (51, -1), (52, -1)]

Covered at level 8 : set()

After reduction : 
 pending  : [40, 8, 9, 29, 32, 38, 39, 42, 43, 47, 48, 49, 23, 25, 37, 0, 16, 19, 22, 20, 15, 21, 14, 18, 41]
 solution : [6, 1, 2, 24]


Solution : [6, 1, 2, 24] has cost 21.


Decide in level 8 among pending : [40, 8, 9, 29, 32, 38, 39, 42, 43, 47, 48, 49, 23, 25, 37, 0, 16, 19, 22, 20, 15, 21, 14, 18, 41]

Coverage : [(0, 131072), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, 16777216), (9, 131072), (10, -1), (11, -1), (12, -1), (13, -1), (14, 8388608), (15, 4194304), (16, 196608), (17, -1), (18, 134217728), (19, 65536), (20, 1048576), (21, 2097152), (22, 32768), (23, 16777216), (24, -1), (25, 524288), (26, -1), (27, -1), (28, -1), (29, 2048), (30, -1), (31, -1), (32, 131072), (33, -1), (34, -1), (35, -1), (36, -1), (37, 524288), (38, 16777216), (39, 2048), (40, 33554432), (41, 512), (42, 65536), (43, 65536), (44, -1), (45, -1), (46, -1), (47, 8388608), (48, 2097152), (49, 16777216), (50, -1), (51, -1), (52, -1)]

Decide 18 with phase True at level 8

After decision at level 8
 pending : [40, 8, 9, 29, 32, 38, 39, 42, 43, 47, 48, 49, 23, 25, 37, 0, 16, 19, 22, 20, 15, 21, 14, 41]
 solution : [6, 1, 2, 24, 18]


New level: 9
 pending : [40, 8, 9, 29, 32, 38, 39, 42, 43, 47, 48, 49, 23, 25, 37, 0, 16, 19, 22, 20, 15, 21, 14, 41]
 solution : [6, 1, 2, 24, 18]


Before reduction : 
 pending  : [40, 8, 9, 29, 32, 38, 39, 42, 43, 47, 48, 49, 23, 25, 37, 0, 16, 19, 22, 20, 15, 21, 14, 41]
 solution : [6, 1, 2, 24, 18]

Essensial at level 9 : set()

Before removed
 coverage : [(0, 131072), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, 16777216), (9, 131072), (10, -1), (11, -1), (12, -1), (13, -1), (14, 8388608), (15, 4194304), (16, 196608), (17, -1), (18, 134217728), (19, 65536), (20, 1048576), (21, 2097152), (22, 32768), (23, 16777216), (24, -1), (25, 524288), (26, -1), (27, -1), (28, -1), (29, 2048), (30, -1), (31, -1), (32, 131072), (33, -1), (34, -1), (35, -1), (36, -1), (37, 524288), (38, 16777216), (39, 2048), (40, 33554432), (41, 512), (42, 65536), (43, 65536), (44, -1), (45, -1), (46, -1), (47, 8388608), (48, 2097152), (49, 16777216), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, 0), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, 16777216), (9, 32768), (10, -1), (11, -1), (12, -1), (13, -1), (14, 0), (15, 0), (16, 0), (17, -1), (18, -1), (19, 0), (20, 0), (21, 0), (22, 0), (23, 16777216), (24, -1), (25, 0), (26, -1), (27, -1), (28, -1), (29, 1024), (30, -1), (31, -1), (32, 65536), (33, -1), (34, -1), (35, -1), (36, -1), (37, 0), (38, 8388608), (39, 512), (40, 512), (41, 0), (42, 32768), (43, 32768), (44, -1), (45, -1), (46, -1), (47, 8388608), (48, 2097152), (49, 16777216), (50, -1), (51, -1), (52, -1)]

Covered at level 9 : {0, 37, 41, 14, 15, 16, 19, 20, 21, 22, 25}

After reduction : 
 pending  : [40, 8, 9, 29, 32, 38, 39, 42, 43, 47, 48, 49, 23]
 solution : [6, 1, 2, 24, 18]


Before reduction : 
 pending  : [40, 8, 9, 29, 32, 38, 39, 42, 43, 47, 48, 49, 23]
 solution : [6, 1, 2, 24, 18]

Essensial at level 9 : set()

Before removed
 coverage : [(0, 0), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, 16777216), (9, 32768), (10, -1), (11, -1), (12, -1), (13, -1), (14, 0), (15, 0), (16, 0), (17, -1), (18, -1), (19, 0), (20, 0), (21, 0), (22, 0), (23, 16777216), (24, -1), (25, 0), (26, -1), (27, -1), (28, -1), (29, 1024), (30, -1), (31, -1), (32, 65536), (33, -1), (34, -1), (35, -1), (36, -1), (37, 0), (38, 8388608), (39, 512), (40, 512), (41, 0), (42, 32768), (43, 32768), (44, -1), (45, -1), (46, -1), (47, 8388608), (48, 2097152), (49, 16777216), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, 16777216), (9, 32768), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, 16777216), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, 1024), (30, -1), (31, -1), (32, 65536), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, 8388608), (39, 512), (40, 512), (41, -1), (42, 32768), (43, 32768), (44, -1), (45, -1), (46, -1), (47, 8388608), (48, 2097152), (49, 16777216), (50, -1), (51, -1), (52, -1)]

Covered at level 9 : set()

After reduction : 
 pending  : [40, 8, 9, 29, 32, 38, 39, 42, 43, 47, 48, 49, 23]
 solution : [6, 1, 2, 24, 18]


Solution : [6, 1, 2, 24, 18] has cost 28.


Before backtrack at level 9
 pending : [40, 8, 9, 29, 32, 38, 39, 42, 43, 47, 48, 49, 23]
 solution : [6, 1, 2, 24, 18]

After backtrack at level 9
 pending : [40, 8, 9, 29, 32, 38, 39, 42, 43, 47, 48, 49, 23, 25, 37, 0, 16, 19, 22, 20, 15, 21, 14, 41]
 solution : [6, 1, 2, 24, 18]


Invert decision for 18 at level 8


New level: 9
 pending : [40, 8, 9, 29, 32, 38, 39, 42, 43, 47, 48, 49, 23, 25, 37, 0, 16, 19, 22, 20, 15, 21, 14, 41]
 solution : [6, 1, 2, 24]


Before reduction : 
 pending  : [40, 8, 9, 29, 32, 38, 39, 42, 43, 47, 48, 49, 23, 25, 37, 0, 16, 19, 22, 20, 15, 21, 14, 41]
 solution : [6, 1, 2, 24]

Essensial at level 9 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, 16777216), (9, 32768), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, 16777216), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, 1024), (30, -1), (31, -1), (32, 65536), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, 8388608), (39, 512), (40, 512), (41, -1), (42, 32768), (43, 32768), (44, -1), (45, -1), (46, -1), (47, 8388608), (48, 2097152), (49, 16777216), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, 131072), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, 16777216), (9, 131072), (10, -1), (11, -1), (12, -1), (13, -1), (14, 8388608), (15, 4194304), (16, 196608), (17, -1), (18, -1), (19, 65536), (20, 1048576), (21, 2097152), (22, 32768), (23, 16777216), (24, -1), (25, 524288), (26, -1), (27, -1), (28, -1), (29, 2048), (30, -1), (31, -1), (32, 131072), (33, -1), (34, -1), (35, -1), (36, -1), (37, 524288), (38, 16777216), (39, 2048), (40, 33554432), (41, 512), (42, 65536), (43, 65536), (44, -1), (45, -1), (46, -1), (47, 8388608), (48, 2097152), (49, 16777216), (50, -1), (51, -1), (52, -1)]

Covered at level 9 : set()

After reduction : 
 pending  : [40, 8, 9, 29, 32, 38, 39, 42, 43, 47, 48, 49, 23, 25, 37, 0, 16, 19, 22, 20, 15, 21, 14, 41]
 solution : [6, 1, 2, 24]


Solution : [6, 1, 2, 24] has cost 21.


Decide in level 9 among pending : [40, 8, 9, 29, 32, 38, 39, 42, 43, 47, 48, 49, 23, 25, 37, 0, 16, 19, 22, 20, 15, 21, 14, 41]

Coverage : [(0, 131072), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, 16777216), (9, 131072), (10, -1), (11, -1), (12, -1), (13, -1), (14, 8388608), (15, 4194304), (16, 196608), (17, -1), (18, -1), (19, 65536), (20, 1048576), (21, 2097152), (22, 32768), (23, 16777216), (24, -1), (25, 524288), (26, -1), (27, -1), (28, -1), (29, 2048), (30, -1), (31, -1), (32, 131072), (33, -1), (34, -1), (35, -1), (36, -1), (37, 524288), (38, 16777216), (39, 2048), (40, 33554432), (41, 512), (42, 65536), (43, 65536), (44, -1), (45, -1), (46, -1), (47, 8388608), (48, 2097152), (49, 16777216), (50, -1), (51, -1), (52, -1)]

Decide 40 with phase True at level 9

After decision at level 9
 pending : [8, 9, 29, 32, 38, 39, 42, 43, 47, 48, 49, 23, 25, 37, 0, 16, 19, 22, 20, 15, 21, 14, 41]
 solution : [6, 1, 2, 24, 40]


New level: 10
 pending : [8, 9, 29, 32, 38, 39, 42, 43, 47, 48, 49, 23, 25, 37, 0, 16, 19, 22, 20, 15, 21, 14, 41]
 solution : [6, 1, 2, 24, 40]


Before reduction : 
 pending  : [8, 9, 29, 32, 38, 39, 42, 43, 47, 48, 49, 23, 25, 37, 0, 16, 19, 22, 20, 15, 21, 14, 41]
 solution : [6, 1, 2, 24, 40]

Essensial at level 10 : set()

Before removed
 coverage : [(0, 131072), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, 16777216), (9, 131072), (10, -1), (11, -1), (12, -1), (13, -1), (14, 8388608), (15, 4194304), (16, 196608), (17, -1), (18, -1), (19, 65536), (20, 1048576), (21, 2097152), (22, 32768), (23, 16777216), (24, -1), (25, 524288), (26, -1), (27, -1), (28, -1), (29, 2048), (30, -1), (31, -1), (32, 131072), (33, -1), (34, -1), (35, -1), (36, -1), (37, 524288), (38, 16777216), (39, 2048), (40, 33554432), (41, 512), (42, 65536), (43, 65536), (44, -1), (45, -1), (46, -1), (47, 8388608), (48, 2097152), (49, 16777216), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, 65536), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, 4194304), (9, 32768), (10, -1), (11, -1), (12, -1), (13, -1), (14, 4194304), (15, 2097152), (16, 65536), (17, -1), (18, -1), (19, 32768), (20, 1048576), (21, 2097152), (22, 32768), (23, 4194304), (24, -1), (25, 131072), (26, -1), (27, -1), (28, -1), (29, 512), (30, -1), (31, -1), (32, 32768), (33, -1), (34, -1), (35, -1), (36, -1), (37, 131072), (38, 16777216), (39, 512), (40, -1), (41, 0), (42, 16384), (43, 16384), (44, -1), (45, -1), (46, -1), (47, 4194304), (48, 524288), (49, 16777216), (50, -1), (51, -1), (52, -1)]

Covered at level 10 : {41}

After reduction : 
 pending  : [8, 9, 29, 32, 38, 39, 42, 43, 47, 48, 49, 23, 25, 37, 0, 16, 19, 22, 20, 15, 21, 14]
 solution : [6, 1, 2, 24, 40]


Before reduction : 
 pending  : [8, 9, 29, 32, 38, 39, 42, 43, 47, 48, 49, 23, 25, 37, 0, 16, 19, 22, 20, 15, 21, 14]
 solution : [6, 1, 2, 24, 40]

Essensial at level 10 : set()

Before removed
 coverage : [(0, 65536), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, 4194304), (9, 32768), (10, -1), (11, -1), (12, -1), (13, -1), (14, 4194304), (15, 2097152), (16, 65536), (17, -1), (18, -1), (19, 32768), (20, 1048576), (21, 2097152), (22, 32768), (23, 4194304), (24, -1), (25, 131072), (26, -1), (27, -1), (28, -1), (29, 512), (30, -1), (31, -1), (32, 32768), (33, -1), (34, -1), (35, -1), (36, -1), (37, 131072), (38, 16777216), (39, 512), (40, -1), (41, 0), (42, 16384), (43, 16384), (44, -1), (45, -1), (46, -1), (47, 4194304), (48, 524288), (49, 16777216), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, 65536), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, 4194304), (9, 32768), (10, -1), (11, -1), (12, -1), (13, -1), (14, 4194304), (15, 2097152), (16, 65536), (17, -1), (18, -1), (19, 32768), (20, 1048576), (21, 2097152), (22, 32768), (23, 4194304), (24, -1), (25, 131072), (26, -1), (27, -1), (28, -1), (29, 512), (30, -1), (31, -1), (32, 32768), (33, -1), (34, -1), (35, -1), (36, -1), (37, 131072), (38, 16777216), (39, 512), (40, -1), (41, -1), (42, 16384), (43, 16384), (44, -1), (45, -1), (46, -1), (47, 4194304), (48, 524288), (49, 16777216), (50, -1), (51, -1), (52, -1)]

Covered at level 10 : set()

After reduction : 
 pending  : [8, 9, 29, 32, 38, 39, 42, 43, 47, 48, 49, 23, 25, 37, 0, 16, 19, 22, 20, 15, 21, 14]
 solution : [6, 1, 2, 24, 40]


Solution : [6, 1, 2, 24, 40] has cost 39.


Before backtrack at level 10
 pending : [8, 9, 29, 32, 38, 39, 42, 43, 47, 48, 49, 23, 25, 37, 0, 16, 19, 22, 20, 15, 21, 14]
 solution : [6, 1, 2, 24, 40]

After backtrack at level 10
 pending : [8, 9, 29, 32, 38, 39, 42, 43, 47, 48, 49, 23, 25, 37, 0, 16, 19, 22, 20, 15, 21, 14, 41]
 solution : [6, 1, 2, 24, 40]


Invert decision for 40 at level 9


New level: 10
 pending : [8, 9, 29, 32, 38, 39, 42, 43, 47, 48, 49, 23, 25, 37, 0, 16, 19, 22, 20, 15, 21, 14, 41]
 solution : [6, 1, 2, 24]


Before reduction : 
 pending  : [8, 9, 29, 32, 38, 39, 42, 43, 47, 48, 49, 23, 25, 37, 0, 16, 19, 22, 20, 15, 21, 14, 41]
 solution : [6, 1, 2, 24]

Essensial at level 10 : set()

Before removed
 coverage : [(0, 65536), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, 4194304), (9, 32768), (10, -1), (11, -1), (12, -1), (13, -1), (14, 4194304), (15, 2097152), (16, 65536), (17, -1), (18, -1), (19, 32768), (20, 1048576), (21, 2097152), (22, 32768), (23, 4194304), (24, -1), (25, 131072), (26, -1), (27, -1), (28, -1), (29, 512), (30, -1), (31, -1), (32, 32768), (33, -1), (34, -1), (35, -1), (36, -1), (37, 131072), (38, 16777216), (39, 512), (40, -1), (41, -1), (42, 16384), (43, 16384), (44, -1), (45, -1), (46, -1), (47, 4194304), (48, 524288), (49, 16777216), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, 131072), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, 16777216), (9, 131072), (10, -1), (11, -1), (12, -1), (13, -1), (14, 8388608), (15, 4194304), (16, 196608), (17, -1), (18, -1), (19, 65536), (20, 1048576), (21, 2097152), (22, 32768), (23, 16777216), (24, -1), (25, 524288), (26, -1), (27, -1), (28, -1), (29, 2048), (30, -1), (31, -1), (32, 131072), (33, -1), (34, -1), (35, -1), (36, -1), (37, 524288), (38, 16777216), (39, 2048), (40, -1), (41, 512), (42, 65536), (43, 65536), (44, -1), (45, -1), (46, -1), (47, 8388608), (48, 2097152), (49, 16777216), (50, -1), (51, -1), (52, -1)]

Covered at level 10 : set()

After reduction : 
 pending  : [8, 9, 29, 32, 38, 39, 42, 43, 47, 48, 49, 23, 25, 37, 0, 16, 19, 22, 20, 15, 21, 14, 41]
 solution : [6, 1, 2, 24]


Solution : [6, 1, 2, 24] has cost 21.


Decide in level 10 among pending : [8, 9, 29, 32, 38, 39, 42, 43, 47, 48, 49, 23, 25, 37, 0, 16, 19, 22, 20, 15, 21, 14, 41]

Coverage : [(0, 131072), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, 16777216), (9, 131072), (10, -1), (11, -1), (12, -1), (13, -1), (14, 8388608), (15, 4194304), (16, 196608), (17, -1), (18, -1), (19, 65536), (20, 1048576), (21, 2097152), (22, 32768), (23, 16777216), (24, -1), (25, 524288), (26, -1), (27, -1), (28, -1), (29, 2048), (30, -1), (31, -1), (32, 131072), (33, -1), (34, -1), (35, -1), (36, -1), (37, 524288), (38, 16777216), (39, 2048), (40, -1), (41, 512), (42, 65536), (43, 65536), (44, -1), (45, -1), (46, -1), (47, 8388608), (48, 2097152), (49, 16777216), (50, -1), (51, -1), (52, -1)]

Decide 8 with phase True at level 10

After decision at level 10
 pending : [9, 29, 32, 38, 39, 42, 43, 47, 48, 49, 23, 25, 37, 0, 16, 19, 22, 20, 15, 21, 14, 41]
 solution : [6, 1, 2, 24, 8]


New level: 11
 pending : [9, 29, 32, 38, 39, 42, 43, 47, 48, 49, 23, 25, 37, 0, 16, 19, 22, 20, 15, 21, 14, 41]
 solution : [6, 1, 2, 24, 8]


Before reduction : 
 pending  : [9, 29, 32, 38, 39, 42, 43, 47, 48, 49, 23, 25, 37, 0, 16, 19, 22, 20, 15, 21, 14, 41]
 solution : [6, 1, 2, 24, 8]

Essensial at level 11 : set()

Before removed
 coverage : [(0, 131072), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, 16777216), (9, 131072), (10, -1), (11, -1), (12, -1), (13, -1), (14, 8388608), (15, 4194304), (16, 196608), (17, -1), (18, -1), (19, 65536), (20, 1048576), (21, 2097152), (22, 32768), (23, 16777216), (24, -1), (25, 524288), (26, -1), (27, -1), (28, -1), (29, 2048), (30, -1), (31, -1), (32, 131072), (33, -1), (34, -1), (35, -1), (36, -1), (37, 524288), (38, 16777216), (39, 2048), (40, -1), (41, 512), (42, 65536), (43, 65536), (44, -1), (45, -1), (46, -1), (47, 8388608), (48, 2097152), (49, 16777216), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, 65536), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, 0), (10, -1), (11, -1), (12, -1), (13, -1), (14, 4194304), (15, 2097152), (16, 65536), (17, -1), (18, -1), (19, 32768), (20, 1048576), (21, 2097152), (22, 32768), (23, 0), (24, -1), (25, 524288), (26, -1), (27, -1), (28, -1), (29, 0), (30, -1), (31, -1), (32, 0), (33, -1), (34, -1), (35, -1), (36, -1), (37, 524288), (38, 0), (39, 0), (40, -1), (41, 512), (42, 0), (43, 0), (44, -1), (45, -1), (46, -1), (47, 0), (48, 0), (49, 0), (50, -1), (51, -1), (52, -1)]

Covered at level 11 : {32, 38, 39, 9, 42, 43, 47, 48, 49, 23, 29}

After reduction : 
 pending  : [25, 37, 0, 16, 19, 22, 20, 15, 21, 14, 41]
 solution : [6, 1, 2, 24, 8]


Before reduction : 
 pending  : [25, 37, 0, 16, 19, 22, 20, 15, 21, 14, 41]
 solution : [6, 1, 2, 24, 8]

Essensial at level 11 : set()

Before removed
 coverage : [(0, 65536), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, 0), (10, -1), (11, -1), (12, -1), (13, -1), (14, 4194304), (15, 2097152), (16, 65536), (17, -1), (18, -1), (19, 32768), (20, 1048576), (21, 2097152), (22, 32768), (23, 0), (24, -1), (25, 524288), (26, -1), (27, -1), (28, -1), (29, 0), (30, -1), (31, -1), (32, 0), (33, -1), (34, -1), (35, -1), (36, -1), (37, 524288), (38, 0), (39, 0), (40, -1), (41, 512), (42, 0), (43, 0), (44, -1), (45, -1), (46, -1), (47, 0), (48, 0), (49, 0), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, 65536), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 4194304), (15, 2097152), (16, 65536), (17, -1), (18, -1), (19, 32768), (20, 1048576), (21, 2097152), (22, 32768), (23, -1), (24, -1), (25, 524288), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, 524288), (38, -1), (39, -1), (40, -1), (41, 512), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 11 : set()

After reduction : 
 pending  : [25, 37, 0, 16, 19, 22, 20, 15, 21, 14, 41]
 solution : [6, 1, 2, 24, 8]


Solution : [6, 1, 2, 24, 8] has cost 25.


Before backtrack at level 11
 pending : [25, 37, 0, 16, 19, 22, 20, 15, 21, 14, 41]
 solution : [6, 1, 2, 24, 8]

After backtrack at level 11
 pending : [25, 37, 0, 16, 19, 22, 20, 15, 21, 14, 41, 9, 29, 32, 38, 39, 42, 43, 47, 48, 49, 23]
 solution : [6, 1, 2, 24, 8]


Invert decision for 8 at level 10


New level: 11
 pending : [25, 37, 0, 16, 19, 22, 20, 15, 21, 14, 41, 9, 29, 32, 38, 39, 42, 43, 47, 48, 49, 23]
 solution : [6, 1, 2, 24]


Before reduction : 
 pending  : [25, 37, 0, 16, 19, 22, 20, 15, 21, 14, 41, 9, 29, 32, 38, 39, 42, 43, 47, 48, 49, 23]
 solution : [6, 1, 2, 24]

Essensial at level 11 : {23}

Before removed
 coverage : [(0, 65536), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 4194304), (15, 2097152), (16, 65536), (17, -1), (18, -1), (19, 32768), (20, 1048576), (21, 2097152), (22, 32768), (23, -1), (24, -1), (25, 524288), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, 524288), (38, -1), (39, -1), (40, -1), (41, 512), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, 65536), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, 0), (10, -1), (11, -1), (12, -1), (13, -1), (14, 4194304), (15, 2097152), (16, 65536), (17, -1), (18, -1), (19, 32768), (20, 1048576), (21, 2097152), (22, 32768), (23, -1), (24, -1), (25, 524288), (26, -1), (27, -1), (28, -1), (29, 0), (30, -1), (31, -1), (32, 0), (33, -1), (34, -1), (35, -1), (36, -1), (37, 524288), (38, 0), (39, 0), (40, -1), (41, 512), (42, 0), (43, 0), (44, -1), (45, -1), (46, -1), (47, 0), (48, 0), (49, 0), (50, -1), (51, -1), (52, -1)]

Covered at level 11 : {32, 38, 39, 9, 42, 43, 47, 48, 49, 29}

After reduction : 
 pending  : [25, 37, 0, 16, 19, 22, 20, 15, 21, 14, 41]
 solution : [6, 1, 2, 24, 23]


Before reduction : 
 pending  : [25, 37, 0, 16, 19, 22, 20, 15, 21, 14, 41]
 solution : [6, 1, 2, 24, 23]

Essensial at level 11 : set()

Before removed
 coverage : [(0, 65536), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, 0), (10, -1), (11, -1), (12, -1), (13, -1), (14, 4194304), (15, 2097152), (16, 65536), (17, -1), (18, -1), (19, 32768), (20, 1048576), (21, 2097152), (22, 32768), (23, -1), (24, -1), (25, 524288), (26, -1), (27, -1), (28, -1), (29, 0), (30, -1), (31, -1), (32, 0), (33, -1), (34, -1), (35, -1), (36, -1), (37, 524288), (38, 0), (39, 0), (40, -1), (41, 512), (42, 0), (43, 0), (44, -1), (45, -1), (46, -1), (47, 0), (48, 0), (49, 0), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, 65536), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 4194304), (15, 2097152), (16, 65536), (17, -1), (18, -1), (19, 32768), (20, 1048576), (21, 2097152), (22, 32768), (23, -1), (24, -1), (25, 524288), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, 524288), (38, -1), (39, -1), (40, -1), (41, 512), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 11 : set()

After reduction : 
 pending  : [25, 37, 0, 16, 19, 22, 20, 15, 21, 14, 41]
 solution : [6, 1, 2, 24, 23]


Solution : [6, 1, 2, 24, 23] has cost 28.


Before backtrack at level 11
 pending : [25, 37, 0, 16, 19, 22, 20, 15, 21, 14, 41]
 solution : [6, 1, 2, 24, 23]

After backtrack at level 11
 pending : [25, 37, 0, 16, 19, 22, 20, 15, 21, 14, 41, 23, 9, 29, 32, 38, 39, 42, 43, 47, 48, 49]
 solution : [6, 1, 2, 24]


Before backtrack at level 10
 pending : [25, 37, 0, 16, 19, 22, 20, 15, 21, 14, 41, 23, 9, 29, 32, 38, 39, 42, 43, 47, 48, 49]
 solution : [6, 1, 2, 24]

After backtrack at level 10
 pending : [25, 37, 0, 16, 19, 22, 20, 15, 21, 14, 41, 23, 9, 29, 32, 38, 39, 42, 43, 47, 48, 49, 8]
 solution : [6, 1, 2, 24]


Before backtrack at level 9
 pending : [25, 37, 0, 16, 19, 22, 20, 15, 21, 14, 41, 23, 9, 29, 32, 38, 39, 42, 43, 47, 48, 49, 8]
 solution : [6, 1, 2, 24]

After backtrack at level 9
 pending : [25, 37, 0, 16, 19, 22, 20, 15, 21, 14, 41, 23, 9, 29, 32, 38, 39, 42, 43, 47, 48, 49, 8, 40]
 solution : [6, 1, 2, 24]


Before backtrack at level 8
 pending : [25, 37, 0, 16, 19, 22, 20, 15, 21, 14, 41, 23, 9, 29, 32, 38, 39, 42, 43, 47, 48, 49, 8, 40]
 solution : [6, 1, 2, 24]

After backtrack at level 8
 pending : [25, 37, 0, 16, 19, 22, 20, 15, 21, 14, 41, 23, 9, 29, 32, 38, 39, 42, 43, 47, 48, 49, 8, 40, 18]
 solution : [6, 1, 2, 24]


Before backtrack at level 7
 pending : [25, 37, 0, 16, 19, 22, 20, 15, 21, 14, 41, 23, 9, 29, 32, 38, 39, 42, 43, 47, 48, 49, 8, 40, 18]
 solution : [6, 1, 2, 24]

After backtrack at level 7
 pending : [25, 37, 0, 16, 19, 22, 20, 15, 21, 14, 41, 23, 9, 29, 32, 38, 39, 42, 43, 47, 48, 49, 8, 40, 18, 30, 33, 17]
 solution : [6, 1, 2, 24]


Invert decision for 24 at level 6


New level: 7
 pending : [25, 37, 0, 16, 19, 22, 20, 15, 21, 14, 41, 23, 9, 29, 32, 38, 39, 42, 43, 47, 48, 49, 8, 40, 18, 30, 33, 17]
 solution : [6, 1, 2]


Before reduction : 
 pending  : [25, 37, 0, 16, 19, 22, 20, 15, 21, 14, 41, 23, 9, 29, 32, 38, 39, 42, 43, 47, 48, 49, 8, 40, 18, 30, 33, 17]
 solution : [6, 1, 2]

Essensial at level 7 : set()

Before removed
 coverage : [(0, 65536), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 4194304), (15, 2097152), (16, 65536), (17, -1), (18, -1), (19, 32768), (20, 1048576), (21, 2097152), (22, 32768), (23, -1), (24, -1), (25, 524288), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, 524288), (38, -1), (39, -1), (40, -1), (41, 512), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, 131072), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, 67108864), (9, 524288), (10, -1), (11, -1), (12, -1), (13, -1), (14, 8388608), (15, 4194304), (16, 196608), (17, 268435456), (18, 134217728), (19, 65536), (20, 1048576), (21, 2097152), (22, 32768), (23, 67108864), (24, -1), (25, 524288), (26, -1), (27, -1), (28, -1), (29, 8192), (30, 8192), (31, -1), (32, 524288), (33, 1048576), (34, -1), (35, -1), (36, -1), (37, 524288), (38, 67108864), (39, 8192), (40, 33554432), (41, 134217728), (42, 262144), (43, 262144), (44, -1), (45, -1), (46, -1), (47, 33554432), (48, 8388608), (49, 33554432), (50, -1), (51, -1), (52, -1)]

Covered at level 7 : set()

After reduction : 
 pending  : [25, 37, 0, 16, 19, 22, 20, 15, 21, 14, 41, 23, 9, 29, 32, 38, 39, 42, 43, 47, 48, 49, 8, 40, 18, 30, 33, 17]
 solution : [6, 1, 2]


Solution : [6, 1, 2] has cost 14.


Decide in level 7 among pending : [25, 37, 0, 16, 19, 22, 20, 15, 21, 14, 41, 23, 9, 29, 32, 38, 39, 42, 43, 47, 48, 49, 8, 40, 18, 30, 33, 17]

Coverage : [(0, 131072), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, 67108864), (9, 524288), (10, -1), (11, -1), (12, -1), (13, -1), (14, 8388608), (15, 4194304), (16, 196608), (17, 268435456), (18, 134217728), (19, 65536), (20, 1048576), (21, 2097152), (22, 32768), (23, 67108864), (24, -1), (25, 524288), (26, -1), (27, -1), (28, -1), (29, 8192), (30, 8192), (31, -1), (32, 524288), (33, 1048576), (34, -1), (35, -1), (36, -1), (37, 524288), (38, 67108864), (39, 8192), (40, 33554432), (41, 134217728), (42, 262144), (43, 262144), (44, -1), (45, -1), (46, -1), (47, 33554432), (48, 8388608), (49, 33554432), (50, -1), (51, -1), (52, -1)]

Decide 17 with phase True at level 7

After decision at level 7
 pending : [25, 37, 0, 16, 19, 22, 20, 15, 21, 14, 41, 23, 9, 29, 32, 38, 39, 42, 43, 47, 48, 49, 8, 40, 18, 30, 33]
 solution : [6, 1, 2, 17]


New level: 8
 pending : [25, 37, 0, 16, 19, 22, 20, 15, 21, 14, 41, 23, 9, 29, 32, 38, 39, 42, 43, 47, 48, 49, 8, 40, 18, 30, 33]
 solution : [6, 1, 2, 17]


Before reduction : 
 pending  : [25, 37, 0, 16, 19, 22, 20, 15, 21, 14, 41, 23, 9, 29, 32, 38, 39, 42, 43, 47, 48, 49, 8, 40, 18, 30, 33]
 solution : [6, 1, 2, 17]

Essensial at level 8 : set()

Before removed
 coverage : [(0, 131072), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, 67108864), (9, 524288), (10, -1), (11, -1), (12, -1), (13, -1), (14, 8388608), (15, 4194304), (16, 196608), (17, 268435456), (18, 134217728), (19, 65536), (20, 1048576), (21, 2097152), (22, 32768), (23, 67108864), (24, -1), (25, 524288), (26, -1), (27, -1), (28, -1), (29, 8192), (30, 8192), (31, -1), (32, 524288), (33, 1048576), (34, -1), (35, -1), (36, -1), (37, 524288), (38, 67108864), (39, 8192), (40, 33554432), (41, 134217728), (42, 262144), (43, 262144), (44, -1), (45, -1), (46, -1), (47, 33554432), (48, 8388608), (49, 33554432), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, 0), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, 67108864), (9, 131072), (10, -1), (11, -1), (12, -1), (13, -1), (14, 0), (15, 0), (16, 0), (17, -1), (18, 0), (19, 0), (20, 0), (21, 0), (22, 0), (23, 67108864), (24, -1), (25, 0), (26, -1), (27, -1), (28, -1), (29, 4096), (30, 8192), (31, -1), (32, 262144), (33, 1048576), (34, -1), (35, -1), (36, -1), (37, 0), (38, 33554432), (39, 2048), (40, 1024), (41, 2048), (42, 65536), (43, 65536), (44, -1), (45, -1), (46, -1), (47, 16777216), (48, 2097152), (49, 33554432), (50, -1), (51, -1), (52, -1)]

Covered at level 8 : {0, 37, 14, 15, 16, 18, 19, 20, 21, 22, 25}

After reduction : 
 pending  : [41, 23, 9, 29, 32, 38, 39, 42, 43, 47, 48, 49, 8, 40, 30, 33]
 solution : [6, 1, 2, 17]


Before reduction : 
 pending  : [41, 23, 9, 29, 32, 38, 39, 42, 43, 47, 48, 49, 8, 40, 30, 33]
 solution : [6, 1, 2, 17]

Essensial at level 8 : set()

Before removed
 coverage : [(0, 0), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, 67108864), (9, 131072), (10, -1), (11, -1), (12, -1), (13, -1), (14, 0), (15, 0), (16, 0), (17, -1), (18, 0), (19, 0), (20, 0), (21, 0), (22, 0), (23, 67108864), (24, -1), (25, 0), (26, -1), (27, -1), (28, -1), (29, 4096), (30, 8192), (31, -1), (32, 262144), (33, 1048576), (34, -1), (35, -1), (36, -1), (37, 0), (38, 33554432), (39, 2048), (40, 1024), (41, 2048), (42, 65536), (43, 65536), (44, -1), (45, -1), (46, -1), (47, 16777216), (48, 2097152), (49, 33554432), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, 67108864), (9, 131072), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, 67108864), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, 4096), (30, 8192), (31, -1), (32, 262144), (33, 1048576), (34, -1), (35, -1), (36, -1), (37, -1), (38, 33554432), (39, 2048), (40, 1024), (41, 2048), (42, 65536), (43, 65536), (44, -1), (45, -1), (46, -1), (47, 16777216), (48, 2097152), (49, 33554432), (50, -1), (51, -1), (52, -1)]

Covered at level 8 : set()

After reduction : 
 pending  : [41, 23, 9, 29, 32, 38, 39, 42, 43, 47, 48, 49, 8, 40, 30, 33]
 solution : [6, 1, 2, 17]


Solution : [6, 1, 2, 17] has cost 21.


Decide in level 8 among pending : [41, 23, 9, 29, 32, 38, 39, 42, 43, 47, 48, 49, 8, 40, 30, 33]

Coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, 67108864), (9, 131072), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, 67108864), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, 4096), (30, 8192), (31, -1), (32, 262144), (33, 1048576), (34, -1), (35, -1), (36, -1), (37, -1), (38, 33554432), (39, 2048), (40, 1024), (41, 2048), (42, 65536), (43, 65536), (44, -1), (45, -1), (46, -1), (47, 16777216), (48, 2097152), (49, 33554432), (50, -1), (51, -1), (52, -1)]

Decide 23 with phase True at level 8

After decision at level 8
 pending : [41, 9, 29, 32, 38, 39, 42, 43, 47, 48, 49, 8, 40, 30, 33]
 solution : [6, 1, 2, 17, 23]


New level: 9
 pending : [41, 9, 29, 32, 38, 39, 42, 43, 47, 48, 49, 8, 40, 30, 33]
 solution : [6, 1, 2, 17, 23]


Before reduction : 
 pending  : [41, 9, 29, 32, 38, 39, 42, 43, 47, 48, 49, 8, 40, 30, 33]
 solution : [6, 1, 2, 17, 23]

Essensial at level 9 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, 67108864), (9, 131072), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, 67108864), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, 4096), (30, 8192), (31, -1), (32, 262144), (33, 1048576), (34, -1), (35, -1), (36, -1), (37, -1), (38, 33554432), (39, 2048), (40, 1024), (41, 2048), (42, 65536), (43, 65536), (44, -1), (45, -1), (46, -1), (47, 16777216), (48, 2097152), (49, 33554432), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, 0), (9, 0), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, 0), (30, 0), (31, -1), (32, 0), (33, 0), (34, -1), (35, -1), (36, -1), (37, -1), (38, 0), (39, 0), (40, 0), (41, 0), (42, 0), (43, 0), (44, -1), (45, -1), (46, -1), (47, 0), (48, 0), (49, 0), (50, -1), (51, -1), (52, -1)]

Covered at level 9 : {32, 33, 38, 39, 8, 41, 9, 42, 43, 40, 47, 48, 49, 29, 30}

After reduction : 
 pending  : []
 solution : [6, 1, 2, 17, 23]


Before reduction : 
 pending  : []
 solution : [6, 1, 2, 17, 23]

Essensial at level 9 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, 0), (9, 0), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, 0), (30, 0), (31, -1), (32, 0), (33, 0), (34, -1), (35, -1), (36, -1), (37, -1), (38, 0), (39, 0), (40, 0), (41, 0), (42, 0), (43, 0), (44, -1), (45, -1), (46, -1), (47, 0), (48, 0), (49, 0), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 9 : set()

After reduction : 
 pending  : []
 solution : [6, 1, 2, 17, 23]


Solution : [6, 1, 2, 17, 23] has cost 28.


Before backtrack at level 9
 pending : []
 solution : [6, 1, 2, 17, 23]

After backtrack at level 9
 pending : [41, 9, 29, 32, 38, 39, 42, 43, 47, 48, 49, 8, 40, 30, 33]
 solution : [6, 1, 2, 17, 23]


Invert decision for 23 at level 8


New level: 9
 pending : [41, 9, 29, 32, 38, 39, 42, 43, 47, 48, 49, 8, 40, 30, 33]
 solution : [6, 1, 2, 17]


Before reduction : 
 pending  : [41, 9, 29, 32, 38, 39, 42, 43, 47, 48, 49, 8, 40, 30, 33]
 solution : [6, 1, 2, 17]

Essensial at level 9 : {8}

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, 0), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, 0), (30, 0), (31, -1), (32, 0), (33, 0), (34, -1), (35, -1), (36, -1), (37, -1), (38, 0), (39, 0), (40, 0), (41, 0), (42, 0), (43, 0), (44, -1), (45, -1), (46, -1), (47, 0), (48, 0), (49, 0), (50, -1), (51, -1), (52, -1)]

Covered at level 9 : {32, 33, 38, 39, 40, 41, 9, 42, 43, 47, 48, 49, 29, 30}

After reduction : 
 pending  : []
 solution : [6, 1, 2, 17, 8]


Before reduction : 
 pending  : []
 solution : [6, 1, 2, 17, 8]

Essensial at level 9 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, 0), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, 0), (30, 0), (31, -1), (32, 0), (33, 0), (34, -1), (35, -1), (36, -1), (37, -1), (38, 0), (39, 0), (40, 0), (41, 0), (42, 0), (43, 0), (44, -1), (45, -1), (46, -1), (47, 0), (48, 0), (49, 0), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 9 : set()

After reduction : 
 pending  : []
 solution : [6, 1, 2, 17, 8]


Solution : [6, 1, 2, 17, 8] has cost 25.


Before backtrack at level 9
 pending : []
 solution : [6, 1, 2, 17, 8]

After backtrack at level 9
 pending : [8, 41, 9, 29, 32, 38, 39, 42, 43, 47, 48, 49, 40, 30, 33]
 solution : [6, 1, 2, 17]


Before backtrack at level 8
 pending : [8, 41, 9, 29, 32, 38, 39, 42, 43, 47, 48, 49, 40, 30, 33]
 solution : [6, 1, 2, 17]

After backtrack at level 8
 pending : [8, 41, 9, 29, 32, 38, 39, 42, 43, 47, 48, 49, 40, 30, 33, 25, 37, 0, 16, 19, 22, 20, 15, 21, 14, 18, 23]
 solution : [6, 1, 2, 17]


Invert decision for 17 at level 7


New level: 8
 pending : [8, 41, 9, 29, 32, 38, 39, 42, 43, 47, 48, 49, 40, 30, 33, 25, 37, 0, 16, 19, 22, 20, 15, 21, 14, 18, 23]
 solution : [6, 1, 2]


Before reduction : 
 pending  : [8, 41, 9, 29, 32, 38, 39, 42, 43, 47, 48, 49, 40, 30, 33, 25, 37, 0, 16, 19, 22, 20, 15, 21, 14, 18, 23]
 solution : [6, 1, 2]

Essensial at level 8 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, 131072), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, 67108864), (9, 524288), (10, -1), (11, -1), (12, -1), (13, -1), (14, 8388608), (15, 4194304), (16, 196608), (17, -1), (18, 134217728), (19, 65536), (20, 1048576), (21, 2097152), (22, 32768), (23, 67108864), (24, -1), (25, 524288), (26, -1), (27, -1), (28, -1), (29, 8192), (30, 8192), (31, -1), (32, 524288), (33, 1048576), (34, -1), (35, -1), (36, -1), (37, 524288), (38, 67108864), (39, 8192), (40, 33554432), (41, 134217728), (42, 262144), (43, 262144), (44, -1), (45, -1), (46, -1), (47, 33554432), (48, 8388608), (49, 33554432), (50, -1), (51, -1), (52, -1)]

Covered at level 8 : set()

After reduction : 
 pending  : [8, 41, 9, 29, 32, 38, 39, 42, 43, 47, 48, 49, 40, 30, 33, 25, 37, 0, 16, 19, 22, 20, 15, 21, 14, 18, 23]
 solution : [6, 1, 2]


Solution : [6, 1, 2] has cost 14.


Decide in level 8 among pending : [8, 41, 9, 29, 32, 38, 39, 42, 43, 47, 48, 49, 40, 30, 33, 25, 37, 0, 16, 19, 22, 20, 15, 21, 14, 18, 23]

Coverage : [(0, 131072), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, 67108864), (9, 524288), (10, -1), (11, -1), (12, -1), (13, -1), (14, 8388608), (15, 4194304), (16, 196608), (17, -1), (18, 134217728), (19, 65536), (20, 1048576), (21, 2097152), (22, 32768), (23, 67108864), (24, -1), (25, 524288), (26, -1), (27, -1), (28, -1), (29, 8192), (30, 8192), (31, -1), (32, 524288), (33, 1048576), (34, -1), (35, -1), (36, -1), (37, 524288), (38, 67108864), (39, 8192), (40, 33554432), (41, 134217728), (42, 262144), (43, 262144), (44, -1), (45, -1), (46, -1), (47, 33554432), (48, 8388608), (49, 33554432), (50, -1), (51, -1), (52, -1)]

Decide 41 with phase True at level 8

After decision at level 8
 pending : [8, 9, 29, 32, 38, 39, 42, 43, 47, 48, 49, 40, 30, 33, 25, 37, 0, 16, 19, 22, 20, 15, 21, 14, 18, 23]
 solution : [6, 1, 2, 41]


New level: 9
 pending : [8, 9, 29, 32, 38, 39, 42, 43, 47, 48, 49, 40, 30, 33, 25, 37, 0, 16, 19, 22, 20, 15, 21, 14, 18, 23]
 solution : [6, 1, 2, 41]


Before reduction : 
 pending  : [8, 9, 29, 32, 38, 39, 42, 43, 47, 48, 49, 40, 30, 33, 25, 37, 0, 16, 19, 22, 20, 15, 21, 14, 18, 23]
 solution : [6, 1, 2, 41]

Essensial at level 9 : set()

Before removed
 coverage : [(0, 131072), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, 67108864), (9, 524288), (10, -1), (11, -1), (12, -1), (13, -1), (14, 8388608), (15, 4194304), (16, 196608), (17, -1), (18, 134217728), (19, 65536), (20, 1048576), (21, 2097152), (22, 32768), (23, 67108864), (24, -1), (25, 524288), (26, -1), (27, -1), (28, -1), (29, 8192), (30, 8192), (31, -1), (32, 524288), (33, 1048576), (34, -1), (35, -1), (36, -1), (37, 524288), (38, 67108864), (39, 8192), (40, 33554432), (41, 134217728), (42, 262144), (43, 262144), (44, -1), (45, -1), (46, -1), (47, 33554432), (48, 8388608), (49, 33554432), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, 131072), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, 67108864), (9, 524288), (10, -1), (11, -1), (12, -1), (13, -1), (14, 8388608), (15, 4194304), (16, 196608), (17, -1), (18, 134217728), (19, 65536), (20, 1048576), (21, 2097152), (22, 32768), (23, 67108864), (24, -1), (25, 524288), (26, -1), (27, -1), (28, -1), (29, 8192), (30, 4096), (31, -1), (32, 524288), (33, 524288), (34, -1), (35, -1), (36, -1), (37, 524288), (38, 67108864), (39, 8192), (40, 16777216), (41, -1), (42, 262144), (43, 262144), (44, -1), (45, -1), (46, -1), (47, 33554432), (48, 8388608), (49, 33554432), (50, -1), (51, -1), (52, -1)]

Covered at level 9 : set()

After reduction : 
 pending  : [8, 9, 29, 32, 38, 39, 42, 43, 47, 48, 49, 40, 30, 33, 25, 37, 0, 16, 19, 22, 20, 15, 21, 14, 18, 23]
 solution : [6, 1, 2, 41]


Solution : [6, 1, 2, 41] has cost 28.


Before backtrack at level 9
 pending : [8, 9, 29, 32, 38, 39, 42, 43, 47, 48, 49, 40, 30, 33, 25, 37, 0, 16, 19, 22, 20, 15, 21, 14, 18, 23]
 solution : [6, 1, 2, 41]

After backtrack at level 9
 pending : [8, 9, 29, 32, 38, 39, 42, 43, 47, 48, 49, 40, 30, 33, 25, 37, 0, 16, 19, 22, 20, 15, 21, 14, 18, 23]
 solution : [6, 1, 2, 41]


Invert decision for 41 at level 8


New level: 9
 pending : [8, 9, 29, 32, 38, 39, 42, 43, 47, 48, 49, 40, 30, 33, 25, 37, 0, 16, 19, 22, 20, 15, 21, 14, 18, 23]
 solution : [6, 1, 2]


Before reduction : 
 pending  : [8, 9, 29, 32, 38, 39, 42, 43, 47, 48, 49, 40, 30, 33, 25, 37, 0, 16, 19, 22, 20, 15, 21, 14, 18, 23]
 solution : [6, 1, 2]

Essensial at level 9 : set()

Before removed
 coverage : [(0, 131072), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, 67108864), (9, 524288), (10, -1), (11, -1), (12, -1), (13, -1), (14, 8388608), (15, 4194304), (16, 196608), (17, -1), (18, 134217728), (19, 65536), (20, 1048576), (21, 2097152), (22, 32768), (23, 67108864), (24, -1), (25, 524288), (26, -1), (27, -1), (28, -1), (29, 8192), (30, 4096), (31, -1), (32, 524288), (33, 524288), (34, -1), (35, -1), (36, -1), (37, 524288), (38, 67108864), (39, 8192), (40, 16777216), (41, -1), (42, 262144), (43, 262144), (44, -1), (45, -1), (46, -1), (47, 33554432), (48, 8388608), (49, 33554432), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, 131072), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, 67108864), (9, 524288), (10, -1), (11, -1), (12, -1), (13, -1), (14, 8388608), (15, 4194304), (16, 196608), (17, -1), (18, 134217728), (19, 65536), (20, 1048576), (21, 2097152), (22, 32768), (23, 67108864), (24, -1), (25, 524288), (26, -1), (27, -1), (28, -1), (29, 8192), (30, 8192), (31, -1), (32, 524288), (33, 1048576), (34, -1), (35, -1), (36, -1), (37, 524288), (38, 67108864), (39, 8192), (40, 33554432), (41, -1), (42, 262144), (43, 262144), (44, -1), (45, -1), (46, -1), (47, 33554432), (48, 8388608), (49, 33554432), (50, -1), (51, -1), (52, -1)]

Covered at level 9 : set()

After reduction : 
 pending  : [8, 9, 29, 32, 38, 39, 42, 43, 47, 48, 49, 40, 30, 33, 25, 37, 0, 16, 19, 22, 20, 15, 21, 14, 18, 23]
 solution : [6, 1, 2]


Solution : [6, 1, 2] has cost 14.


Decide in level 9 among pending : [8, 9, 29, 32, 38, 39, 42, 43, 47, 48, 49, 40, 30, 33, 25, 37, 0, 16, 19, 22, 20, 15, 21, 14, 18, 23]

Coverage : [(0, 131072), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, 67108864), (9, 524288), (10, -1), (11, -1), (12, -1), (13, -1), (14, 8388608), (15, 4194304), (16, 196608), (17, -1), (18, 134217728), (19, 65536), (20, 1048576), (21, 2097152), (22, 32768), (23, 67108864), (24, -1), (25, 524288), (26, -1), (27, -1), (28, -1), (29, 8192), (30, 8192), (31, -1), (32, 524288), (33, 1048576), (34, -1), (35, -1), (36, -1), (37, 524288), (38, 67108864), (39, 8192), (40, 33554432), (41, -1), (42, 262144), (43, 262144), (44, -1), (45, -1), (46, -1), (47, 33554432), (48, 8388608), (49, 33554432), (50, -1), (51, -1), (52, -1)]

Decide 18 with phase True at level 9

After decision at level 9
 pending : [8, 9, 29, 32, 38, 39, 42, 43, 47, 48, 49, 40, 30, 33, 25, 37, 0, 16, 19, 22, 20, 15, 21, 14, 23]
 solution : [6, 1, 2, 18]


New level: 10
 pending : [8, 9, 29, 32, 38, 39, 42, 43, 47, 48, 49, 40, 30, 33, 25, 37, 0, 16, 19, 22, 20, 15, 21, 14, 23]
 solution : [6, 1, 2, 18]


Before reduction : 
 pending  : [8, 9, 29, 32, 38, 39, 42, 43, 47, 48, 49, 40, 30, 33, 25, 37, 0, 16, 19, 22, 20, 15, 21, 14, 23]
 solution : [6, 1, 2, 18]

Essensial at level 10 : set()

Before removed
 coverage : [(0, 131072), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, 67108864), (9, 524288), (10, -1), (11, -1), (12, -1), (13, -1), (14, 8388608), (15, 4194304), (16, 196608), (17, -1), (18, 134217728), (19, 65536), (20, 1048576), (21, 2097152), (22, 32768), (23, 67108864), (24, -1), (25, 524288), (26, -1), (27, -1), (28, -1), (29, 8192), (30, 8192), (31, -1), (32, 524288), (33, 1048576), (34, -1), (35, -1), (36, -1), (37, 524288), (38, 67108864), (39, 8192), (40, 33554432), (41, -1), (42, 262144), (43, 262144), (44, -1), (45, -1), (46, -1), (47, 33554432), (48, 8388608), (49, 33554432), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, 0), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, 67108864), (9, 131072), (10, -1), (11, -1), (12, -1), (13, -1), (14, 0), (15, 0), (16, 0), (17, -1), (18, -1), (19, 0), (20, 0), (21, 0), (22, 0), (23, 67108864), (24, -1), (25, 0), (26, -1), (27, -1), (28, -1), (29, 4096), (30, 8192), (31, -1), (32, 262144), (33, 1048576), (34, -1), (35, -1), (36, -1), (37, 0), (38, 33554432), (39, 2048), (40, 1024), (41, -1), (42, 131072), (43, 131072), (44, -1), (45, -1), (46, -1), (47, 33554432), (48, 8388608), (49, 33554432), (50, -1), (51, -1), (52, -1)]

Covered at level 10 : {0, 37, 14, 15, 16, 19, 20, 21, 22, 25}

After reduction : 
 pending  : [8, 9, 29, 32, 38, 39, 42, 43, 47, 48, 49, 40, 30, 33, 23]
 solution : [6, 1, 2, 18]


Before reduction : 
 pending  : [8, 9, 29, 32, 38, 39, 42, 43, 47, 48, 49, 40, 30, 33, 23]
 solution : [6, 1, 2, 18]

Essensial at level 10 : set()

Before removed
 coverage : [(0, 0), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, 67108864), (9, 131072), (10, -1), (11, -1), (12, -1), (13, -1), (14, 0), (15, 0), (16, 0), (17, -1), (18, -1), (19, 0), (20, 0), (21, 0), (22, 0), (23, 67108864), (24, -1), (25, 0), (26, -1), (27, -1), (28, -1), (29, 4096), (30, 8192), (31, -1), (32, 262144), (33, 1048576), (34, -1), (35, -1), (36, -1), (37, 0), (38, 33554432), (39, 2048), (40, 1024), (41, -1), (42, 131072), (43, 131072), (44, -1), (45, -1), (46, -1), (47, 33554432), (48, 8388608), (49, 33554432), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, 67108864), (9, 131072), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, 67108864), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, 4096), (30, 8192), (31, -1), (32, 262144), (33, 1048576), (34, -1), (35, -1), (36, -1), (37, -1), (38, 33554432), (39, 2048), (40, 1024), (41, -1), (42, 131072), (43, 131072), (44, -1), (45, -1), (46, -1), (47, 33554432), (48, 8388608), (49, 33554432), (50, -1), (51, -1), (52, -1)]

Covered at level 10 : set()

After reduction : 
 pending  : [8, 9, 29, 32, 38, 39, 42, 43, 47, 48, 49, 40, 30, 33, 23]
 solution : [6, 1, 2, 18]


Solution : [6, 1, 2, 18] has cost 21.


Decide in level 10 among pending : [8, 9, 29, 32, 38, 39, 42, 43, 47, 48, 49, 40, 30, 33, 23]

Coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, 67108864), (9, 131072), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, 67108864), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, 4096), (30, 8192), (31, -1), (32, 262144), (33, 1048576), (34, -1), (35, -1), (36, -1), (37, -1), (38, 33554432), (39, 2048), (40, 1024), (41, -1), (42, 131072), (43, 131072), (44, -1), (45, -1), (46, -1), (47, 33554432), (48, 8388608), (49, 33554432), (50, -1), (51, -1), (52, -1)]

Decide 8 with phase True at level 10

After decision at level 10
 pending : [9, 29, 32, 38, 39, 42, 43, 47, 48, 49, 40, 30, 33, 23]
 solution : [6, 1, 2, 18, 8]


New level: 11
 pending : [9, 29, 32, 38, 39, 42, 43, 47, 48, 49, 40, 30, 33, 23]
 solution : [6, 1, 2, 18, 8]


Before reduction : 
 pending  : [9, 29, 32, 38, 39, 42, 43, 47, 48, 49, 40, 30, 33, 23]
 solution : [6, 1, 2, 18, 8]

Essensial at level 11 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, 67108864), (9, 131072), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, 67108864), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, 4096), (30, 8192), (31, -1), (32, 262144), (33, 1048576), (34, -1), (35, -1), (36, -1), (37, -1), (38, 33554432), (39, 2048), (40, 1024), (41, -1), (42, 131072), (43, 131072), (44, -1), (45, -1), (46, -1), (47, 33554432), (48, 8388608), (49, 33554432), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, 0), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, 0), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, 0), (30, 0), (31, -1), (32, 0), (33, 0), (34, -1), (35, -1), (36, -1), (37, -1), (38, 0), (39, 0), (40, 0), (41, -1), (42, 0), (43, 0), (44, -1), (45, -1), (46, -1), (47, 0), (48, 0), (49, 0), (50, -1), (51, -1), (52, -1)]

Covered at level 11 : {32, 33, 38, 39, 40, 9, 42, 43, 47, 48, 49, 23, 29, 30}

After reduction : 
 pending  : []
 solution : [6, 1, 2, 18, 8]


Before reduction : 
 pending  : []
 solution : [6, 1, 2, 18, 8]

Essensial at level 11 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, 0), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, 0), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, 0), (30, 0), (31, -1), (32, 0), (33, 0), (34, -1), (35, -1), (36, -1), (37, -1), (38, 0), (39, 0), (40, 0), (41, -1), (42, 0), (43, 0), (44, -1), (45, -1), (46, -1), (47, 0), (48, 0), (49, 0), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 11 : set()

After reduction : 
 pending  : []
 solution : [6, 1, 2, 18, 8]


Solution : [6, 1, 2, 18, 8] has cost 25.


Before backtrack at level 11
 pending : []
 solution : [6, 1, 2, 18, 8]

After backtrack at level 11
 pending : [9, 29, 32, 38, 39, 42, 43, 47, 48, 49, 40, 30, 33, 23]
 solution : [6, 1, 2, 18, 8]


Invert decision for 8 at level 10


New level: 11
 pending : [9, 29, 32, 38, 39, 42, 43, 47, 48, 49, 40, 30, 33, 23]
 solution : [6, 1, 2, 18]


Before reduction : 
 pending  : [9, 29, 32, 38, 39, 42, 43, 47, 48, 49, 40, 30, 33, 23]
 solution : [6, 1, 2, 18]

Essensial at level 11 : {23}

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, 0), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, 0), (30, 0), (31, -1), (32, 0), (33, 0), (34, -1), (35, -1), (36, -1), (37, -1), (38, 0), (39, 0), (40, 0), (41, -1), (42, 0), (43, 0), (44, -1), (45, -1), (46, -1), (47, 0), (48, 0), (49, 0), (50, -1), (51, -1), (52, -1)]

Covered at level 11 : {32, 33, 38, 39, 40, 9, 42, 43, 47, 48, 49, 29, 30}

After reduction : 
 pending  : []
 solution : [6, 1, 2, 18, 23]


Before reduction : 
 pending  : []
 solution : [6, 1, 2, 18, 23]

Essensial at level 11 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, 0), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, 0), (30, 0), (31, -1), (32, 0), (33, 0), (34, -1), (35, -1), (36, -1), (37, -1), (38, 0), (39, 0), (40, 0), (41, -1), (42, 0), (43, 0), (44, -1), (45, -1), (46, -1), (47, 0), (48, 0), (49, 0), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 11 : set()

After reduction : 
 pending  : []
 solution : [6, 1, 2, 18, 23]


Solution : [6, 1, 2, 18, 23] has cost 28.


Before backtrack at level 11
 pending : []
 solution : [6, 1, 2, 18, 23]

After backtrack at level 11
 pending : [23, 9, 29, 32, 38, 39, 42, 43, 47, 48, 49, 40, 30, 33]
 solution : [6, 1, 2, 18]


Before backtrack at level 10
 pending : [23, 9, 29, 32, 38, 39, 42, 43, 47, 48, 49, 40, 30, 33]
 solution : [6, 1, 2, 18]

After backtrack at level 10
 pending : [23, 9, 29, 32, 38, 39, 42, 43, 47, 48, 49, 40, 30, 33, 25, 37, 0, 16, 19, 22, 20, 15, 21, 14, 8]
 solution : [6, 1, 2, 18]


Invert decision for 18 at level 9


New level: 10
 pending : [23, 9, 29, 32, 38, 39, 42, 43, 47, 48, 49, 40, 30, 33, 25, 37, 0, 16, 19, 22, 20, 15, 21, 14, 8]
 solution : [6, 1, 2]


Before reduction : 
 pending  : [23, 9, 29, 32, 38, 39, 42, 43, 47, 48, 49, 40, 30, 33, 25, 37, 0, 16, 19, 22, 20, 15, 21, 14, 8]
 solution : [6, 1, 2]

Essensial at level 10 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, 131072), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, 67108864), (9, 524288), (10, -1), (11, -1), (12, -1), (13, -1), (14, 8388608), (15, 4194304), (16, 196608), (17, -1), (18, -1), (19, 65536), (20, 1048576), (21, 2097152), (22, 32768), (23, 67108864), (24, -1), (25, 524288), (26, -1), (27, -1), (28, -1), (29, 8192), (30, 8192), (31, -1), (32, 524288), (33, 1048576), (34, -1), (35, -1), (36, -1), (37, 524288), (38, 67108864), (39, 8192), (40, 33554432), (41, -1), (42, 262144), (43, 262144), (44, -1), (45, -1), (46, -1), (47, 33554432), (48, 8388608), (49, 33554432), (50, -1), (51, -1), (52, -1)]

Covered at level 10 : set()

After reduction : 
 pending  : [23, 9, 29, 32, 38, 39, 42, 43, 47, 48, 49, 40, 30, 33, 25, 37, 0, 16, 19, 22, 20, 15, 21, 14, 8]
 solution : [6, 1, 2]


Solution : [6, 1, 2] has cost 14.


Decide in level 10 among pending : [23, 9, 29, 32, 38, 39, 42, 43, 47, 48, 49, 40, 30, 33, 25, 37, 0, 16, 19, 22, 20, 15, 21, 14, 8]

Coverage : [(0, 131072), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, 67108864), (9, 524288), (10, -1), (11, -1), (12, -1), (13, -1), (14, 8388608), (15, 4194304), (16, 196608), (17, -1), (18, -1), (19, 65536), (20, 1048576), (21, 2097152), (22, 32768), (23, 67108864), (24, -1), (25, 524288), (26, -1), (27, -1), (28, -1), (29, 8192), (30, 8192), (31, -1), (32, 524288), (33, 1048576), (34, -1), (35, -1), (36, -1), (37, 524288), (38, 67108864), (39, 8192), (40, 33554432), (41, -1), (42, 262144), (43, 262144), (44, -1), (45, -1), (46, -1), (47, 33554432), (48, 8388608), (49, 33554432), (50, -1), (51, -1), (52, -1)]

Decide 23 with phase True at level 10

After decision at level 10
 pending : [9, 29, 32, 38, 39, 42, 43, 47, 48, 49, 40, 30, 33, 25, 37, 0, 16, 19, 22, 20, 15, 21, 14, 8]
 solution : [6, 1, 2, 23]


New level: 11
 pending : [9, 29, 32, 38, 39, 42, 43, 47, 48, 49, 40, 30, 33, 25, 37, 0, 16, 19, 22, 20, 15, 21, 14, 8]
 solution : [6, 1, 2, 23]


Before reduction : 
 pending  : [9, 29, 32, 38, 39, 42, 43, 47, 48, 49, 40, 30, 33, 25, 37, 0, 16, 19, 22, 20, 15, 21, 14, 8]
 solution : [6, 1, 2, 23]

Essensial at level 11 : set()

Before removed
 coverage : [(0, 131072), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, 67108864), (9, 524288), (10, -1), (11, -1), (12, -1), (13, -1), (14, 8388608), (15, 4194304), (16, 196608), (17, -1), (18, -1), (19, 65536), (20, 1048576), (21, 2097152), (22, 32768), (23, 67108864), (24, -1), (25, 524288), (26, -1), (27, -1), (28, -1), (29, 8192), (30, 8192), (31, -1), (32, 524288), (33, 1048576), (34, -1), (35, -1), (36, -1), (37, 524288), (38, 67108864), (39, 8192), (40, 33554432), (41, -1), (42, 262144), (43, 262144), (44, -1), (45, -1), (46, -1), (47, 33554432), (48, 8388608), (49, 33554432), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, 65536), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, 0), (9, 0), (10, -1), (11, -1), (12, -1), (13, -1), (14, 4194304), (15, 2097152), (16, 65536), (17, -1), (18, -1), (19, 32768), (20, 1048576), (21, 2097152), (22, 32768), (23, -1), (24, -1), (25, 524288), (26, -1), (27, -1), (28, -1), (29, 0), (30, 0), (31, -1), (32, 0), (33, 0), (34, -1), (35, -1), (36, -1), (37, 524288), (38, 0), (39, 0), (40, 65536), (41, -1), (42, 0), (43, 0), (44, -1), (45, -1), (46, -1), (47, 0), (48, 0), (49, 0), (50, -1), (51, -1), (52, -1)]

Covered at level 11 : {32, 33, 38, 39, 8, 9, 42, 43, 47, 48, 49, 29, 30}

After reduction : 
 pending  : [40, 25, 37, 0, 16, 19, 22, 20, 15, 21, 14]
 solution : [6, 1, 2, 23]


Before reduction : 
 pending  : [40, 25, 37, 0, 16, 19, 22, 20, 15, 21, 14]
 solution : [6, 1, 2, 23]

Essensial at level 11 : set()

Before removed
 coverage : [(0, 65536), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, 0), (9, 0), (10, -1), (11, -1), (12, -1), (13, -1), (14, 4194304), (15, 2097152), (16, 65536), (17, -1), (18, -1), (19, 32768), (20, 1048576), (21, 2097152), (22, 32768), (23, -1), (24, -1), (25, 524288), (26, -1), (27, -1), (28, -1), (29, 0), (30, 0), (31, -1), (32, 0), (33, 0), (34, -1), (35, -1), (36, -1), (37, 524288), (38, 0), (39, 0), (40, 65536), (41, -1), (42, 0), (43, 0), (44, -1), (45, -1), (46, -1), (47, 0), (48, 0), (49, 0), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, 65536), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 4194304), (15, 2097152), (16, 65536), (17, -1), (18, -1), (19, 32768), (20, 1048576), (21, 2097152), (22, 32768), (23, -1), (24, -1), (25, 524288), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, 524288), (38, -1), (39, -1), (40, 65536), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 11 : set()

After reduction : 
 pending  : [40, 25, 37, 0, 16, 19, 22, 20, 15, 21, 14]
 solution : [6, 1, 2, 23]


Solution : [6, 1, 2, 23] has cost 21.


Decide in level 11 among pending : [40, 25, 37, 0, 16, 19, 22, 20, 15, 21, 14]

Coverage : [(0, 65536), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 4194304), (15, 2097152), (16, 65536), (17, -1), (18, -1), (19, 32768), (20, 1048576), (21, 2097152), (22, 32768), (23, -1), (24, -1), (25, 524288), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, 524288), (38, -1), (39, -1), (40, 65536), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Decide 14 with phase True at level 11

After decision at level 11
 pending : [40, 25, 37, 0, 16, 19, 22, 20, 15, 21]
 solution : [6, 1, 2, 23, 14]


New level: 12
 pending : [40, 25, 37, 0, 16, 19, 22, 20, 15, 21]
 solution : [6, 1, 2, 23, 14]


Before reduction : 
 pending  : [40, 25, 37, 0, 16, 19, 22, 20, 15, 21]
 solution : [6, 1, 2, 23, 14]

Essensial at level 12 : set()

Before removed
 coverage : [(0, 65536), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 4194304), (15, 2097152), (16, 65536), (17, -1), (18, -1), (19, 32768), (20, 1048576), (21, 2097152), (22, 32768), (23, -1), (24, -1), (25, 524288), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, 524288), (38, -1), (39, -1), (40, 65536), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, 0), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, 0), (16, 0), (17, -1), (18, -1), (19, 0), (20, 8192), (21, 32768), (22, 8192), (23, -1), (24, -1), (25, 2048), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, 2048), (38, -1), (39, -1), (40, 1024), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 12 : {0, 16, 19, 15}

After reduction : 
 pending  : [40, 25, 37, 22, 20, 21]
 solution : [6, 1, 2, 23, 14]


Before reduction : 
 pending  : [40, 25, 37, 22, 20, 21]
 solution : [6, 1, 2, 23, 14]

Essensial at level 12 : set()

Before removed
 coverage : [(0, 0), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, 0), (16, 0), (17, -1), (18, -1), (19, 0), (20, 8192), (21, 32768), (22, 8192), (23, -1), (24, -1), (25, 2048), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, 2048), (38, -1), (39, -1), (40, 1024), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, 8192), (21, 32768), (22, 8192), (23, -1), (24, -1), (25, 2048), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, 2048), (38, -1), (39, -1), (40, 1024), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 12 : set()

After reduction : 
 pending  : [40, 25, 37, 22, 20, 21]
 solution : [6, 1, 2, 23, 14]


Solution : [6, 1, 2, 23, 14] has cost 30.


Before backtrack at level 12
 pending : [40, 25, 37, 22, 20, 21]
 solution : [6, 1, 2, 23, 14]

After backtrack at level 12
 pending : [40, 25, 37, 22, 20, 21, 0, 16, 19, 15]
 solution : [6, 1, 2, 23, 14]


Invert decision for 14 at level 11


New level: 12
 pending : [40, 25, 37, 22, 20, 21, 0, 16, 19, 15]
 solution : [6, 1, 2, 23]


Before reduction : 
 pending  : [40, 25, 37, 22, 20, 21, 0, 16, 19, 15]
 solution : [6, 1, 2, 23]

Essensial at level 12 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, 8192), (21, 32768), (22, 8192), (23, -1), (24, -1), (25, 2048), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, 2048), (38, -1), (39, -1), (40, 1024), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, 65536), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, 2097152), (16, 65536), (17, -1), (18, -1), (19, 32768), (20, 1048576), (21, 2097152), (22, 32768), (23, -1), (24, -1), (25, 524288), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, 524288), (38, -1), (39, -1), (40, 65536), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 12 : set()

After reduction : 
 pending  : [40, 25, 37, 22, 20, 21, 0, 16, 19, 15]
 solution : [6, 1, 2, 23]


Solution : [6, 1, 2, 23] has cost 21.


Decide in level 12 among pending : [40, 25, 37, 22, 20, 21, 0, 16, 19, 15]

Coverage : [(0, 65536), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, 2097152), (16, 65536), (17, -1), (18, -1), (19, 32768), (20, 1048576), (21, 2097152), (22, 32768), (23, -1), (24, -1), (25, 524288), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, 524288), (38, -1), (39, -1), (40, 65536), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Decide 21 with phase True at level 12

After decision at level 12
 pending : [40, 25, 37, 22, 20, 0, 16, 19, 15]
 solution : [6, 1, 2, 23, 21]


New level: 13
 pending : [40, 25, 37, 22, 20, 0, 16, 19, 15]
 solution : [6, 1, 2, 23, 21]


Before reduction : 
 pending  : [40, 25, 37, 22, 20, 0, 16, 19, 15]
 solution : [6, 1, 2, 23, 21]

Essensial at level 13 : set()

Before removed
 coverage : [(0, 65536), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, 2097152), (16, 65536), (17, -1), (18, -1), (19, 32768), (20, 1048576), (21, 2097152), (22, 32768), (23, -1), (24, -1), (25, 524288), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, 524288), (38, -1), (39, -1), (40, 65536), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, 32768), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, 524288), (16, 32768), (17, -1), (18, -1), (19, 0), (20, 0), (21, -1), (22, 0), (23, -1), (24, -1), (25, 131072), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, 131072), (38, -1), (39, -1), (40, 512), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 13 : {19, 20, 22}

After reduction : 
 pending  : [40, 25, 37, 0, 16, 15]
 solution : [6, 1, 2, 23, 21]


Before reduction : 
 pending  : [40, 25, 37, 0, 16, 15]
 solution : [6, 1, 2, 23, 21]

Essensial at level 13 : set()

Before removed
 coverage : [(0, 32768), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, 524288), (16, 32768), (17, -1), (18, -1), (19, 0), (20, 0), (21, -1), (22, 0), (23, -1), (24, -1), (25, 131072), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, 131072), (38, -1), (39, -1), (40, 512), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, 32768), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, 524288), (16, 32768), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, 131072), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, 131072), (38, -1), (39, -1), (40, 512), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 13 : set()

After reduction : 
 pending  : [40, 25, 37, 0, 16, 15]
 solution : [6, 1, 2, 23, 21]


Solution : [6, 1, 2, 23, 21] has cost 28.


Before backtrack at level 13
 pending : [40, 25, 37, 0, 16, 15]
 solution : [6, 1, 2, 23, 21]

After backtrack at level 13
 pending : [40, 25, 37, 0, 16, 15, 22, 20, 19]
 solution : [6, 1, 2, 23, 21]


Invert decision for 21 at level 12


New level: 13
 pending : [40, 25, 37, 0, 16, 15, 22, 20, 19]
 solution : [6, 1, 2, 23]


Before reduction : 
 pending  : [40, 25, 37, 0, 16, 15, 22, 20, 19]
 solution : [6, 1, 2, 23]

Essensial at level 13 : set()

Before removed
 coverage : [(0, 32768), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, 524288), (16, 32768), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, 131072), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, 131072), (38, -1), (39, -1), (40, 512), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, 65536), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, 2097152), (16, 65536), (17, -1), (18, -1), (19, 32768), (20, 1048576), (21, -1), (22, 32768), (23, -1), (24, -1), (25, 524288), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, 524288), (38, -1), (39, -1), (40, 65536), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 13 : set()

After reduction : 
 pending  : [40, 25, 37, 0, 16, 15, 22, 20, 19]
 solution : [6, 1, 2, 23]


Solution : [6, 1, 2, 23] has cost 21.


Decide in level 13 among pending : [40, 25, 37, 0, 16, 15, 22, 20, 19]

Coverage : [(0, 65536), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, 2097152), (16, 65536), (17, -1), (18, -1), (19, 32768), (20, 1048576), (21, -1), (22, 32768), (23, -1), (24, -1), (25, 524288), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, 524288), (38, -1), (39, -1), (40, 65536), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Decide 15 with phase True at level 13

After decision at level 13
 pending : [40, 25, 37, 0, 16, 22, 20, 19]
 solution : [6, 1, 2, 23, 15]


New level: 14
 pending : [40, 25, 37, 0, 16, 22, 20, 19]
 solution : [6, 1, 2, 23, 15]


Before reduction : 
 pending  : [40, 25, 37, 0, 16, 22, 20, 19]
 solution : [6, 1, 2, 23, 15]

Essensial at level 14 : set()

Before removed
 coverage : [(0, 65536), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, 2097152), (16, 65536), (17, -1), (18, -1), (19, 32768), (20, 1048576), (21, -1), (22, 32768), (23, -1), (24, -1), (25, 524288), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, 524288), (38, -1), (39, -1), (40, 65536), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, 0), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, 0), (17, -1), (18, -1), (19, 0), (20, 8192), (21, -1), (22, 8192), (23, -1), (24, -1), (25, 2048), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, 2048), (38, -1), (39, -1), (40, 1024), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 14 : {0, 16, 19}

After reduction : 
 pending  : [40, 25, 37, 22, 20]
 solution : [6, 1, 2, 23, 15]


Before reduction : 
 pending  : [40, 25, 37, 22, 20]
 solution : [6, 1, 2, 23, 15]

Essensial at level 14 : set()

Before removed
 coverage : [(0, 0), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, 0), (17, -1), (18, -1), (19, 0), (20, 8192), (21, -1), (22, 8192), (23, -1), (24, -1), (25, 2048), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, 2048), (38, -1), (39, -1), (40, 1024), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, 8192), (21, -1), (22, 8192), (23, -1), (24, -1), (25, 2048), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, 2048), (38, -1), (39, -1), (40, 1024), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 14 : set()

After reduction : 
 pending  : [40, 25, 37, 22, 20]
 solution : [6, 1, 2, 23, 15]


Solution : [6, 1, 2, 23, 15] has cost 30.


Before backtrack at level 14
 pending : [40, 25, 37, 22, 20]
 solution : [6, 1, 2, 23, 15]

After backtrack at level 14
 pending : [40, 25, 37, 22, 20, 0, 16, 19]
 solution : [6, 1, 2, 23, 15]


Invert decision for 15 at level 13


New level: 14
 pending : [40, 25, 37, 22, 20, 0, 16, 19]
 solution : [6, 1, 2, 23]


Before reduction : 
 pending  : [40, 25, 37, 22, 20, 0, 16, 19]
 solution : [6, 1, 2, 23]

Essensial at level 14 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, 8192), (21, -1), (22, 8192), (23, -1), (24, -1), (25, 2048), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, 2048), (38, -1), (39, -1), (40, 1024), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, 65536), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, 65536), (17, -1), (18, -1), (19, 32768), (20, 1048576), (21, -1), (22, 32768), (23, -1), (24, -1), (25, 524288), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, 524288), (38, -1), (39, -1), (40, 65536), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 14 : set()

After reduction : 
 pending  : [40, 25, 37, 22, 20, 0, 16, 19]
 solution : [6, 1, 2, 23]


Solution : [6, 1, 2, 23] has cost 21.


Decide in level 14 among pending : [40, 25, 37, 22, 20, 0, 16, 19]

Coverage : [(0, 65536), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, 65536), (17, -1), (18, -1), (19, 32768), (20, 1048576), (21, -1), (22, 32768), (23, -1), (24, -1), (25, 524288), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, 524288), (38, -1), (39, -1), (40, 65536), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Decide 20 with phase True at level 14

After decision at level 14
 pending : [40, 25, 37, 22, 0, 16, 19]
 solution : [6, 1, 2, 23, 20]


New level: 15
 pending : [40, 25, 37, 22, 0, 16, 19]
 solution : [6, 1, 2, 23, 20]


Before reduction : 
 pending  : [40, 25, 37, 22, 0, 16, 19]
 solution : [6, 1, 2, 23, 20]

Essensial at level 15 : set()

Before removed
 coverage : [(0, 65536), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, 65536), (17, -1), (18, -1), (19, 32768), (20, 1048576), (21, -1), (22, 32768), (23, -1), (24, -1), (25, 524288), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, 524288), (38, -1), (39, -1), (40, 65536), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, 32768), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, 32768), (17, -1), (18, -1), (19, 0), (20, -1), (21, -1), (22, 0), (23, -1), (24, -1), (25, 131072), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, 131072), (38, -1), (39, -1), (40, 512), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 15 : {19, 22}

After reduction : 
 pending  : [40, 25, 37, 0, 16]
 solution : [6, 1, 2, 23, 20]


Before reduction : 
 pending  : [40, 25, 37, 0, 16]
 solution : [6, 1, 2, 23, 20]

Essensial at level 15 : set()

Before removed
 coverage : [(0, 32768), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, 32768), (17, -1), (18, -1), (19, 0), (20, -1), (21, -1), (22, 0), (23, -1), (24, -1), (25, 131072), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, 131072), (38, -1), (39, -1), (40, 512), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, 32768), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, 32768), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, 131072), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, 131072), (38, -1), (39, -1), (40, 512), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 15 : set()

After reduction : 
 pending  : [40, 25, 37, 0, 16]
 solution : [6, 1, 2, 23, 20]


Solution : [6, 1, 2, 23, 20] has cost 28.


Before backtrack at level 15
 pending : [40, 25, 37, 0, 16]
 solution : [6, 1, 2, 23, 20]

After backtrack at level 15
 pending : [40, 25, 37, 0, 16, 22, 19]
 solution : [6, 1, 2, 23, 20]


Invert decision for 20 at level 14


New level: 15
 pending : [40, 25, 37, 0, 16, 22, 19]
 solution : [6, 1, 2, 23]


Before reduction : 
 pending  : [40, 25, 37, 0, 16, 22, 19]
 solution : [6, 1, 2, 23]

Essensial at level 15 : {22}

Before removed
 coverage : [(0, 32768), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, 32768), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, 131072), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, 131072), (38, -1), (39, -1), (40, 512), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, 65536), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, 65536), (17, -1), (18, -1), (19, 16384), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, 524288), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, 524288), (38, -1), (39, -1), (40, 65536), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 15 : set()

After reduction : 
 pending  : [40, 25, 37, 0, 16, 19]
 solution : [6, 1, 2, 23, 22]


Before reduction : 
 pending  : [40, 25, 37, 0, 16, 19]
 solution : [6, 1, 2, 23, 22]

Essensial at level 15 : set()

Before removed
 coverage : [(0, 65536), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, 65536), (17, -1), (18, -1), (19, 16384), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, 524288), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, 524288), (38, -1), (39, -1), (40, 65536), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, 65536), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, 65536), (17, -1), (18, -1), (19, 16384), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, 524288), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, 524288), (38, -1), (39, -1), (40, 65536), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 15 : set()

After reduction : 
 pending  : [40, 25, 37, 0, 16, 19]
 solution : [6, 1, 2, 23, 22]


Solution : [6, 1, 2, 23, 22] has cost 28.


Before backtrack at level 15
 pending : [40, 25, 37, 0, 16, 19]
 solution : [6, 1, 2, 23, 22]

After backtrack at level 15
 pending : [40, 25, 37, 0, 16, 19, 22]
 solution : [6, 1, 2, 23]


Before backtrack at level 14
 pending : [40, 25, 37, 0, 16, 19, 22]
 solution : [6, 1, 2, 23]

After backtrack at level 14
 pending : [40, 25, 37, 0, 16, 19, 22, 20]
 solution : [6, 1, 2, 23]


Before backtrack at level 13
 pending : [40, 25, 37, 0, 16, 19, 22, 20]
 solution : [6, 1, 2, 23]

After backtrack at level 13
 pending : [40, 25, 37, 0, 16, 19, 22, 20, 15]
 solution : [6, 1, 2, 23]


Before backtrack at level 12
 pending : [40, 25, 37, 0, 16, 19, 22, 20, 15]
 solution : [6, 1, 2, 23]

After backtrack at level 12
 pending : [40, 25, 37, 0, 16, 19, 22, 20, 15, 21]
 solution : [6, 1, 2, 23]


Before backtrack at level 11
 pending : [40, 25, 37, 0, 16, 19, 22, 20, 15, 21]
 solution : [6, 1, 2, 23]

After backtrack at level 11
 pending : [40, 25, 37, 0, 16, 19, 22, 20, 15, 21, 9, 29, 32, 38, 39, 42, 43, 47, 48, 49, 30, 33, 8, 14]
 solution : [6, 1, 2, 23]


Invert decision for 23 at level 10


New level: 11
 pending : [40, 25, 37, 0, 16, 19, 22, 20, 15, 21, 9, 29, 32, 38, 39, 42, 43, 47, 48, 49, 30, 33, 8, 14]
 solution : [6, 1, 2]


Before reduction : 
 pending  : [40, 25, 37, 0, 16, 19, 22, 20, 15, 21, 9, 29, 32, 38, 39, 42, 43, 47, 48, 49, 30, 33, 8, 14]
 solution : [6, 1, 2]

Essensial at level 11 : {8}

Before removed
 coverage : [(0, 65536), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, 65536), (17, -1), (18, -1), (19, 16384), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, 524288), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, 524288), (38, -1), (39, -1), (40, 65536), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, 65536), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, 0), (10, -1), (11, -1), (12, -1), (13, -1), (14, 4194304), (15, 2097152), (16, 65536), (17, -1), (18, -1), (19, 32768), (20, 1048576), (21, 2097152), (22, 32768), (23, -1), (24, -1), (25, 524288), (26, -1), (27, -1), (28, -1), (29, 0), (30, 0), (31, -1), (32, 0), (33, 0), (34, -1), (35, -1), (36, -1), (37, 524288), (38, 0), (39, 0), (40, 32768), (41, -1), (42, 0), (43, 0), (44, -1), (45, -1), (46, -1), (47, 0), (48, 0), (49, 0), (50, -1), (51, -1), (52, -1)]

Covered at level 11 : {32, 33, 38, 39, 9, 42, 43, 47, 48, 49, 29, 30}

After reduction : 
 pending  : [40, 25, 37, 0, 16, 19, 22, 20, 15, 21, 14]
 solution : [6, 1, 2, 8]


Before reduction : 
 pending  : [40, 25, 37, 0, 16, 19, 22, 20, 15, 21, 14]
 solution : [6, 1, 2, 8]

Essensial at level 11 : set()

Before removed
 coverage : [(0, 65536), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, 0), (10, -1), (11, -1), (12, -1), (13, -1), (14, 4194304), (15, 2097152), (16, 65536), (17, -1), (18, -1), (19, 32768), (20, 1048576), (21, 2097152), (22, 32768), (23, -1), (24, -1), (25, 524288), (26, -1), (27, -1), (28, -1), (29, 0), (30, 0), (31, -1), (32, 0), (33, 0), (34, -1), (35, -1), (36, -1), (37, 524288), (38, 0), (39, 0), (40, 32768), (41, -1), (42, 0), (43, 0), (44, -1), (45, -1), (46, -1), (47, 0), (48, 0), (49, 0), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, 65536), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 4194304), (15, 2097152), (16, 65536), (17, -1), (18, -1), (19, 32768), (20, 1048576), (21, 2097152), (22, 32768), (23, -1), (24, -1), (25, 524288), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, 524288), (38, -1), (39, -1), (40, 32768), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 11 : set()

After reduction : 
 pending  : [40, 25, 37, 0, 16, 19, 22, 20, 15, 21, 14]
 solution : [6, 1, 2, 8]


Solution : [6, 1, 2, 8] has cost 18.


Decide in level 11 among pending : [40, 25, 37, 0, 16, 19, 22, 20, 15, 21, 14]

Coverage : [(0, 65536), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 4194304), (15, 2097152), (16, 65536), (17, -1), (18, -1), (19, 32768), (20, 1048576), (21, 2097152), (22, 32768), (23, -1), (24, -1), (25, 524288), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, 524288), (38, -1), (39, -1), (40, 32768), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Decide 14 with phase True at level 11

After decision at level 11
 pending : [40, 25, 37, 0, 16, 19, 22, 20, 15, 21]
 solution : [6, 1, 2, 8, 14]


New level: 12
 pending : [40, 25, 37, 0, 16, 19, 22, 20, 15, 21]
 solution : [6, 1, 2, 8, 14]


Before reduction : 
 pending  : [40, 25, 37, 0, 16, 19, 22, 20, 15, 21]
 solution : [6, 1, 2, 8, 14]

Essensial at level 12 : set()

Before removed
 coverage : [(0, 65536), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 4194304), (15, 2097152), (16, 65536), (17, -1), (18, -1), (19, 32768), (20, 1048576), (21, 2097152), (22, 32768), (23, -1), (24, -1), (25, 524288), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, 524288), (38, -1), (39, -1), (40, 32768), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, 0), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, 0), (16, 0), (17, -1), (18, -1), (19, 0), (20, 8192), (21, 32768), (22, 8192), (23, -1), (24, -1), (25, 2048), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, 2048), (38, -1), (39, -1), (40, 1024), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 12 : {0, 16, 19, 15}

After reduction : 
 pending  : [40, 25, 37, 22, 20, 21]
 solution : [6, 1, 2, 8, 14]


Before reduction : 
 pending  : [40, 25, 37, 22, 20, 21]
 solution : [6, 1, 2, 8, 14]

Essensial at level 12 : set()

Before removed
 coverage : [(0, 0), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, 0), (16, 0), (17, -1), (18, -1), (19, 0), (20, 8192), (21, 32768), (22, 8192), (23, -1), (24, -1), (25, 2048), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, 2048), (38, -1), (39, -1), (40, 1024), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, 8192), (21, 32768), (22, 8192), (23, -1), (24, -1), (25, 2048), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, 2048), (38, -1), (39, -1), (40, 1024), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 12 : set()

After reduction : 
 pending  : [40, 25, 37, 22, 20, 21]
 solution : [6, 1, 2, 8, 14]


Solution : [6, 1, 2, 8, 14] has cost 27.


Before backtrack at level 12
 pending : [40, 25, 37, 22, 20, 21]
 solution : [6, 1, 2, 8, 14]

After backtrack at level 12
 pending : [40, 25, 37, 22, 20, 21, 0, 16, 19, 15]
 solution : [6, 1, 2, 8, 14]


Invert decision for 14 at level 11


New level: 12
 pending : [40, 25, 37, 22, 20, 21, 0, 16, 19, 15]
 solution : [6, 1, 2, 8]


Before reduction : 
 pending  : [40, 25, 37, 22, 20, 21, 0, 16, 19, 15]
 solution : [6, 1, 2, 8]

Essensial at level 12 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, 8192), (21, 32768), (22, 8192), (23, -1), (24, -1), (25, 2048), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, 2048), (38, -1), (39, -1), (40, 1024), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, 65536), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, 2097152), (16, 65536), (17, -1), (18, -1), (19, 32768), (20, 1048576), (21, 2097152), (22, 32768), (23, -1), (24, -1), (25, 524288), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, 524288), (38, -1), (39, -1), (40, 32768), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 12 : set()

After reduction : 
 pending  : [40, 25, 37, 22, 20, 21, 0, 16, 19, 15]
 solution : [6, 1, 2, 8]


Solution : [6, 1, 2, 8] has cost 18.


Decide in level 12 among pending : [40, 25, 37, 22, 20, 21, 0, 16, 19, 15]

Coverage : [(0, 65536), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, 2097152), (16, 65536), (17, -1), (18, -1), (19, 32768), (20, 1048576), (21, 2097152), (22, 32768), (23, -1), (24, -1), (25, 524288), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, 524288), (38, -1), (39, -1), (40, 32768), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Decide 21 with phase True at level 12

After decision at level 12
 pending : [40, 25, 37, 22, 20, 0, 16, 19, 15]
 solution : [6, 1, 2, 8, 21]


New level: 13
 pending : [40, 25, 37, 22, 20, 0, 16, 19, 15]
 solution : [6, 1, 2, 8, 21]


Before reduction : 
 pending  : [40, 25, 37, 22, 20, 0, 16, 19, 15]
 solution : [6, 1, 2, 8, 21]

Essensial at level 13 : set()

Before removed
 coverage : [(0, 65536), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, 2097152), (16, 65536), (17, -1), (18, -1), (19, 32768), (20, 1048576), (21, 2097152), (22, 32768), (23, -1), (24, -1), (25, 524288), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, 524288), (38, -1), (39, -1), (40, 32768), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, 32768), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, 524288), (16, 32768), (17, -1), (18, -1), (19, 0), (20, 0), (21, -1), (22, 0), (23, -1), (24, -1), (25, 131072), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, 131072), (38, -1), (39, -1), (40, 512), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 13 : {19, 20, 22}

After reduction : 
 pending  : [40, 25, 37, 0, 16, 15]
 solution : [6, 1, 2, 8, 21]


Before reduction : 
 pending  : [40, 25, 37, 0, 16, 15]
 solution : [6, 1, 2, 8, 21]

Essensial at level 13 : set()

Before removed
 coverage : [(0, 32768), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, 524288), (16, 32768), (17, -1), (18, -1), (19, 0), (20, 0), (21, -1), (22, 0), (23, -1), (24, -1), (25, 131072), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, 131072), (38, -1), (39, -1), (40, 512), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, 32768), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, 524288), (16, 32768), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, 131072), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, 131072), (38, -1), (39, -1), (40, 512), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 13 : set()

After reduction : 
 pending  : [40, 25, 37, 0, 16, 15]
 solution : [6, 1, 2, 8, 21]


Solution : [6, 1, 2, 8, 21] has cost 25.


Before backtrack at level 13
 pending : [40, 25, 37, 0, 16, 15]
 solution : [6, 1, 2, 8, 21]

After backtrack at level 13
 pending : [40, 25, 37, 0, 16, 15, 22, 20, 19]
 solution : [6, 1, 2, 8, 21]


Invert decision for 21 at level 12


New level: 13
 pending : [40, 25, 37, 0, 16, 15, 22, 20, 19]
 solution : [6, 1, 2, 8]


Before reduction : 
 pending  : [40, 25, 37, 0, 16, 15, 22, 20, 19]
 solution : [6, 1, 2, 8]

Essensial at level 13 : set()

Before removed
 coverage : [(0, 32768), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, 524288), (16, 32768), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, 131072), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, 131072), (38, -1), (39, -1), (40, 512), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, 65536), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, 2097152), (16, 65536), (17, -1), (18, -1), (19, 32768), (20, 1048576), (21, -1), (22, 32768), (23, -1), (24, -1), (25, 524288), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, 524288), (38, -1), (39, -1), (40, 32768), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 13 : set()

After reduction : 
 pending  : [40, 25, 37, 0, 16, 15, 22, 20, 19]
 solution : [6, 1, 2, 8]


Solution : [6, 1, 2, 8] has cost 18.


Decide in level 13 among pending : [40, 25, 37, 0, 16, 15, 22, 20, 19]

Coverage : [(0, 65536), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, 2097152), (16, 65536), (17, -1), (18, -1), (19, 32768), (20, 1048576), (21, -1), (22, 32768), (23, -1), (24, -1), (25, 524288), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, 524288), (38, -1), (39, -1), (40, 32768), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Decide 15 with phase True at level 13

After decision at level 13
 pending : [40, 25, 37, 0, 16, 22, 20, 19]
 solution : [6, 1, 2, 8, 15]


New level: 14
 pending : [40, 25, 37, 0, 16, 22, 20, 19]
 solution : [6, 1, 2, 8, 15]


Before reduction : 
 pending  : [40, 25, 37, 0, 16, 22, 20, 19]
 solution : [6, 1, 2, 8, 15]

Essensial at level 14 : set()

Before removed
 coverage : [(0, 65536), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, 2097152), (16, 65536), (17, -1), (18, -1), (19, 32768), (20, 1048576), (21, -1), (22, 32768), (23, -1), (24, -1), (25, 524288), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, 524288), (38, -1), (39, -1), (40, 32768), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, 0), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, 0), (17, -1), (18, -1), (19, 0), (20, 8192), (21, -1), (22, 8192), (23, -1), (24, -1), (25, 2048), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, 2048), (38, -1), (39, -1), (40, 1024), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 14 : {0, 16, 19}

After reduction : 
 pending  : [40, 25, 37, 22, 20]
 solution : [6, 1, 2, 8, 15]


Before reduction : 
 pending  : [40, 25, 37, 22, 20]
 solution : [6, 1, 2, 8, 15]

Essensial at level 14 : set()

Before removed
 coverage : [(0, 0), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, 0), (17, -1), (18, -1), (19, 0), (20, 8192), (21, -1), (22, 8192), (23, -1), (24, -1), (25, 2048), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, 2048), (38, -1), (39, -1), (40, 1024), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, 8192), (21, -1), (22, 8192), (23, -1), (24, -1), (25, 2048), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, 2048), (38, -1), (39, -1), (40, 1024), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 14 : set()

After reduction : 
 pending  : [40, 25, 37, 22, 20]
 solution : [6, 1, 2, 8, 15]


Solution : [6, 1, 2, 8, 15] has cost 27.


Before backtrack at level 14
 pending : [40, 25, 37, 22, 20]
 solution : [6, 1, 2, 8, 15]

After backtrack at level 14
 pending : [40, 25, 37, 22, 20, 0, 16, 19]
 solution : [6, 1, 2, 8, 15]


Invert decision for 15 at level 13


New level: 14
 pending : [40, 25, 37, 22, 20, 0, 16, 19]
 solution : [6, 1, 2, 8]


Before reduction : 
 pending  : [40, 25, 37, 22, 20, 0, 16, 19]
 solution : [6, 1, 2, 8]

Essensial at level 14 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, 8192), (21, -1), (22, 8192), (23, -1), (24, -1), (25, 2048), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, 2048), (38, -1), (39, -1), (40, 1024), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, 65536), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, 65536), (17, -1), (18, -1), (19, 32768), (20, 1048576), (21, -1), (22, 32768), (23, -1), (24, -1), (25, 524288), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, 524288), (38, -1), (39, -1), (40, 32768), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 14 : set()

After reduction : 
 pending  : [40, 25, 37, 22, 20, 0, 16, 19]
 solution : [6, 1, 2, 8]


Solution : [6, 1, 2, 8] has cost 18.


Decide in level 14 among pending : [40, 25, 37, 22, 20, 0, 16, 19]

Coverage : [(0, 65536), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, 65536), (17, -1), (18, -1), (19, 32768), (20, 1048576), (21, -1), (22, 32768), (23, -1), (24, -1), (25, 524288), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, 524288), (38, -1), (39, -1), (40, 32768), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Decide 20 with phase True at level 14

After decision at level 14
 pending : [40, 25, 37, 22, 0, 16, 19]
 solution : [6, 1, 2, 8, 20]


New level: 15
 pending : [40, 25, 37, 22, 0, 16, 19]
 solution : [6, 1, 2, 8, 20]


Before reduction : 
 pending  : [40, 25, 37, 22, 0, 16, 19]
 solution : [6, 1, 2, 8, 20]

Essensial at level 15 : set()

Before removed
 coverage : [(0, 65536), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, 65536), (17, -1), (18, -1), (19, 32768), (20, 1048576), (21, -1), (22, 32768), (23, -1), (24, -1), (25, 524288), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, 524288), (38, -1), (39, -1), (40, 32768), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, 32768), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, 32768), (17, -1), (18, -1), (19, 0), (20, -1), (21, -1), (22, 0), (23, -1), (24, -1), (25, 131072), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, 131072), (38, -1), (39, -1), (40, 512), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 15 : {19, 22}

After reduction : 
 pending  : [40, 25, 37, 0, 16]
 solution : [6, 1, 2, 8, 20]


Before reduction : 
 pending  : [40, 25, 37, 0, 16]
 solution : [6, 1, 2, 8, 20]

Essensial at level 15 : set()

Before removed
 coverage : [(0, 32768), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, 32768), (17, -1), (18, -1), (19, 0), (20, -1), (21, -1), (22, 0), (23, -1), (24, -1), (25, 131072), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, 131072), (38, -1), (39, -1), (40, 512), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, 32768), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, 32768), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, 131072), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, 131072), (38, -1), (39, -1), (40, 512), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 15 : set()

After reduction : 
 pending  : [40, 25, 37, 0, 16]
 solution : [6, 1, 2, 8, 20]


Solution : [6, 1, 2, 8, 20] has cost 25.


Before backtrack at level 15
 pending : [40, 25, 37, 0, 16]
 solution : [6, 1, 2, 8, 20]

After backtrack at level 15
 pending : [40, 25, 37, 0, 16, 22, 19]
 solution : [6, 1, 2, 8, 20]


Invert decision for 20 at level 14


New level: 15
 pending : [40, 25, 37, 0, 16, 22, 19]
 solution : [6, 1, 2, 8]


Before reduction : 
 pending  : [40, 25, 37, 0, 16, 22, 19]
 solution : [6, 1, 2, 8]

Essensial at level 15 : {22}

Before removed
 coverage : [(0, 32768), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, 32768), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, 131072), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, 131072), (38, -1), (39, -1), (40, 512), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, 65536), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, 65536), (17, -1), (18, -1), (19, 16384), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, 524288), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, 524288), (38, -1), (39, -1), (40, 32768), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 15 : set()

After reduction : 
 pending  : [40, 25, 37, 0, 16, 19]
 solution : [6, 1, 2, 8, 22]


Before reduction : 
 pending  : [40, 25, 37, 0, 16, 19]
 solution : [6, 1, 2, 8, 22]

Essensial at level 15 : set()

Before removed
 coverage : [(0, 65536), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, 65536), (17, -1), (18, -1), (19, 16384), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, 524288), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, 524288), (38, -1), (39, -1), (40, 32768), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, 65536), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, 65536), (17, -1), (18, -1), (19, 16384), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, 524288), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, 524288), (38, -1), (39, -1), (40, 32768), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 15 : set()

After reduction : 
 pending  : [40, 25, 37, 0, 16, 19]
 solution : [6, 1, 2, 8, 22]


Solution : [6, 1, 2, 8, 22] has cost 25.


Before backtrack at level 15
 pending : [40, 25, 37, 0, 16, 19]
 solution : [6, 1, 2, 8, 22]

After backtrack at level 15
 pending : [40, 25, 37, 0, 16, 19, 22]
 solution : [6, 1, 2, 8]


Before backtrack at level 14
 pending : [40, 25, 37, 0, 16, 19, 22]
 solution : [6, 1, 2, 8]

After backtrack at level 14
 pending : [40, 25, 37, 0, 16, 19, 22, 20]
 solution : [6, 1, 2, 8]


Before backtrack at level 13
 pending : [40, 25, 37, 0, 16, 19, 22, 20]
 solution : [6, 1, 2, 8]

After backtrack at level 13
 pending : [40, 25, 37, 0, 16, 19, 22, 20, 15]
 solution : [6, 1, 2, 8]


Before backtrack at level 12
 pending : [40, 25, 37, 0, 16, 19, 22, 20, 15]
 solution : [6, 1, 2, 8]

After backtrack at level 12
 pending : [40, 25, 37, 0, 16, 19, 22, 20, 15, 21]
 solution : [6, 1, 2, 8]


Before backtrack at level 11
 pending : [40, 25, 37, 0, 16, 19, 22, 20, 15, 21]
 solution : [6, 1, 2, 8]

After backtrack at level 11
 pending : [40, 25, 37, 0, 16, 19, 22, 20, 15, 21, 8, 9, 29, 32, 38, 39, 42, 43, 47, 48, 49, 30, 33, 14]
 solution : [6, 1, 2]


Before backtrack at level 10
 pending : [40, 25, 37, 0, 16, 19, 22, 20, 15, 21, 8, 9, 29, 32, 38, 39, 42, 43, 47, 48, 49, 30, 33, 14]
 solution : [6, 1, 2]

After backtrack at level 10
 pending : [40, 25, 37, 0, 16, 19, 22, 20, 15, 21, 8, 9, 29, 32, 38, 39, 42, 43, 47, 48, 49, 30, 33, 14, 23]
 solution : [6, 1, 2]


Before backtrack at level 9
 pending : [40, 25, 37, 0, 16, 19, 22, 20, 15, 21, 8, 9, 29, 32, 38, 39, 42, 43, 47, 48, 49, 30, 33, 14, 23]
 solution : [6, 1, 2]

After backtrack at level 9
 pending : [40, 25, 37, 0, 16, 19, 22, 20, 15, 21, 8, 9, 29, 32, 38, 39, 42, 43, 47, 48, 49, 30, 33, 14, 23, 18]
 solution : [6, 1, 2]


Before backtrack at level 8
 pending : [40, 25, 37, 0, 16, 19, 22, 20, 15, 21, 8, 9, 29, 32, 38, 39, 42, 43, 47, 48, 49, 30, 33, 14, 23, 18]
 solution : [6, 1, 2]

After backtrack at level 8
 pending : [40, 25, 37, 0, 16, 19, 22, 20, 15, 21, 8, 9, 29, 32, 38, 39, 42, 43, 47, 48, 49, 30, 33, 14, 23, 18, 41]
 solution : [6, 1, 2]


Before backtrack at level 7
 pending : [40, 25, 37, 0, 16, 19, 22, 20, 15, 21, 8, 9, 29, 32, 38, 39, 42, 43, 47, 48, 49, 30, 33, 14, 23, 18, 41]
 solution : [6, 1, 2]

After backtrack at level 7
 pending : [40, 25, 37, 0, 16, 19, 22, 20, 15, 21, 8, 9, 29, 32, 38, 39, 42, 43, 47, 48, 49, 30, 33, 14, 23, 18, 41, 17]
 solution : [6, 1, 2]


Before backtrack at level 6
 pending : [40, 25, 37, 0, 16, 19, 22, 20, 15, 21, 8, 9, 29, 32, 38, 39, 42, 43, 47, 48, 49, 30, 33, 14, 23, 18, 41, 17]
 solution : [6, 1, 2]

After backtrack at level 6
 pending : [40, 25, 37, 0, 16, 19, 22, 20, 15, 21, 8, 9, 29, 32, 38, 39, 42, 43, 47, 48, 49, 30, 33, 14, 23, 18, 41, 17, 24]
 solution : [6, 1, 2]


Before backtrack at level 5
 pending : [40, 25, 37, 0, 16, 19, 22, 20, 15, 21, 8, 9, 29, 32, 38, 39, 42, 43, 47, 48, 49, 30, 33, 14, 23, 18, 41, 17, 24]
 solution : [6, 1, 2]

After backtrack at level 5
 pending : [40, 25, 37, 0, 16, 19, 22, 20, 15, 21, 8, 9, 29, 32, 38, 39, 42, 43, 47, 48, 49, 30, 33, 14, 23, 18, 41, 17, 24, 28]
 solution : [6, 1, 2]


Before backtrack at level 4
 pending : [40, 25, 37, 0, 16, 19, 22, 20, 15, 21, 8, 9, 29, 32, 38, 39, 42, 43, 47, 48, 49, 30, 33, 14, 23, 18, 41, 17, 24, 28]
 solution : [6, 1, 2]

After backtrack at level 4
 pending : [40, 25, 37, 0, 16, 19, 22, 20, 15, 21, 8, 9, 29, 32, 38, 39, 42, 43, 47, 48, 49, 30, 33, 14, 23, 18, 41, 17, 24, 28, 35]
 solution : [6, 1, 2]


Before backtrack at level 3
 pending : [40, 25, 37, 0, 16, 19, 22, 20, 15, 21, 8, 9, 29, 32, 38, 39, 42, 43, 47, 48, 49, 30, 33, 14, 23, 18, 41, 17, 24, 28, 35]
 solution : [6, 1, 2]

After backtrack at level 3
 pending : [40, 25, 37, 0, 16, 19, 22, 20, 15, 21, 8, 9, 29, 32, 38, 39, 42, 43, 47, 48, 49, 30, 33, 14, 23, 18, 41, 17, 24, 28, 35, 26]
 solution : [6, 1, 2]


Invert decision for 2 at level 2


New level: 3
 pending : [40, 25, 37, 0, 16, 19, 22, 20, 15, 21, 8, 9, 29, 32, 38, 39, 42, 43, 47, 48, 49, 30, 33, 14, 23, 18, 41, 17, 24, 28, 35, 26]
 solution : [6, 1]


Before reduction : 
 pending  : [40, 25, 37, 0, 16, 19, 22, 20, 15, 21, 8, 9, 29, 32, 38, 39, 42, 43, 47, 48, 49, 30, 33, 14, 23, 18, 41, 17, 24, 28, 35, 26]
 solution : [6, 1]

Essensial at level 3 : set()

Before removed
 coverage : [(0, 65536), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, 65536), (17, -1), (18, -1), (19, 16384), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, 524288), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, 524288), (38, -1), (39, -1), (40, 32768), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, 262144), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, 134217728), (9, 1048576), (10, -1), (11, -1), (12, -1), (13, -1), (14, 16777216), (15, 8388608), (16, 393216), (17, 536870912), (18, 268435456), (19, 131072), (20, 2097152), (21, 4194304), (22, 65536), (23, 134217728), (24, 1073741824), (25, 1048576), (26, 1073741824), (27, -1), (28, 4294967296), (29, 16384), (30, 32768), (31, -1), (32, 1048576), (33, 4194304), (34, -1), (35, 2147483648), (36, -1), (37, 1048576), (38, 134217728), (39, 16384), (40, 67108864), (41, 268435456), (42, 524288), (43, 524288), (44, -1), (45, -1), (46, -1), (47, 67108864), (48, 16777216), (49, 67108864), (50, -1), (51, -1), (52, -1)]

Covered at level 3 : set()

After reduction : 
 pending  : [40, 25, 37, 0, 16, 19, 22, 20, 15, 21, 8, 9, 29, 32, 38, 39, 42, 43, 47, 48, 49, 30, 33, 14, 23, 18, 41, 17, 24, 28, 35, 26]
 solution : [6, 1]


Solution : [6, 1] has cost 11.


Decide in level 3 among pending : [40, 25, 37, 0, 16, 19, 22, 20, 15, 21, 8, 9, 29, 32, 38, 39, 42, 43, 47, 48, 49, 30, 33, 14, 23, 18, 41, 17, 24, 28, 35, 26]

Coverage : [(0, 262144), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, 134217728), (9, 1048576), (10, -1), (11, -1), (12, -1), (13, -1), (14, 16777216), (15, 8388608), (16, 393216), (17, 536870912), (18, 268435456), (19, 131072), (20, 2097152), (21, 4194304), (22, 65536), (23, 134217728), (24, 1073741824), (25, 1048576), (26, 1073741824), (27, -1), (28, 4294967296), (29, 16384), (30, 32768), (31, -1), (32, 1048576), (33, 4194304), (34, -1), (35, 2147483648), (36, -1), (37, 1048576), (38, 134217728), (39, 16384), (40, 67108864), (41, 268435456), (42, 524288), (43, 524288), (44, -1), (45, -1), (46, -1), (47, 67108864), (48, 16777216), (49, 67108864), (50, -1), (51, -1), (52, -1)]

Decide 28 with phase True at level 3

After decision at level 3
 pending : [40, 25, 37, 0, 16, 19, 22, 20, 15, 21, 8, 9, 29, 32, 38, 39, 42, 43, 47, 48, 49, 30, 33, 14, 23, 18, 41, 17, 24, 35, 26]
 solution : [6, 1, 28]


New level: 4
 pending : [40, 25, 37, 0, 16, 19, 22, 20, 15, 21, 8, 9, 29, 32, 38, 39, 42, 43, 47, 48, 49, 30, 33, 14, 23, 18, 41, 17, 24, 35, 26]
 solution : [6, 1, 28]


Before reduction : 
 pending  : [40, 25, 37, 0, 16, 19, 22, 20, 15, 21, 8, 9, 29, 32, 38, 39, 42, 43, 47, 48, 49, 30, 33, 14, 23, 18, 41, 17, 24, 35, 26]
 solution : [6, 1, 28]

Essensial at level 4 : set()

Before removed
 coverage : [(0, 262144), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, 134217728), (9, 1048576), (10, -1), (11, -1), (12, -1), (13, -1), (14, 16777216), (15, 8388608), (16, 393216), (17, 536870912), (18, 268435456), (19, 131072), (20, 2097152), (21, 4194304), (22, 65536), (23, 134217728), (24, 1073741824), (25, 1048576), (26, 1073741824), (27, -1), (28, 4294967296), (29, 16384), (30, 32768), (31, -1), (32, 1048576), (33, 4194304), (34, -1), (35, 2147483648), (36, -1), (37, 1048576), (38, 134217728), (39, 16384), (40, 67108864), (41, 268435456), (42, 524288), (43, 524288), (44, -1), (45, -1), (46, -1), (47, 67108864), (48, 16777216), (49, 67108864), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, 262144), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, 134217728), (9, 1048576), (10, -1), (11, -1), (12, -1), (13, -1), (14, 16777216), (15, 8388608), (16, 393216), (17, 536870912), (18, 268435456), (19, 131072), (20, 2097152), (21, 4194304), (22, 65536), (23, 134217728), (24, 536870912), (25, 1048576), (26, 1073741824), (27, -1), (28, -1), (29, 16384), (30, 16384), (31, -1), (32, 1048576), (33, 2097152), (34, -1), (35, 1073741824), (36, -1), (37, 1048576), (38, 134217728), (39, 16384), (40, 67108864), (41, 134217728), (42, 524288), (43, 524288), (44, -1), (45, -1), (46, -1), (47, 67108864), (48, 16777216), (49, 67108864), (50, -1), (51, -1), (52, -1)]

Covered at level 4 : set()

After reduction : 
 pending  : [40, 25, 37, 0, 16, 19, 22, 20, 15, 21, 8, 9, 29, 32, 38, 39, 42, 43, 47, 48, 49, 30, 33, 14, 23, 18, 41, 17, 24, 35, 26]
 solution : [6, 1, 28]


Solution : [6, 1, 28] has cost 15.


Decide in level 4 among pending : [40, 25, 37, 0, 16, 19, 22, 20, 15, 21, 8, 9, 29, 32, 38, 39, 42, 43, 47, 48, 49, 30, 33, 14, 23, 18, 41, 17, 24, 35, 26]

Coverage : [(0, 262144), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, 134217728), (9, 1048576), (10, -1), (11, -1), (12, -1), (13, -1), (14, 16777216), (15, 8388608), (16, 393216), (17, 536870912), (18, 268435456), (19, 131072), (20, 2097152), (21, 4194304), (22, 65536), (23, 134217728), (24, 536870912), (25, 1048576), (26, 1073741824), (27, -1), (28, -1), (29, 16384), (30, 16384), (31, -1), (32, 1048576), (33, 2097152), (34, -1), (35, 1073741824), (36, -1), (37, 1048576), (38, 134217728), (39, 16384), (40, 67108864), (41, 134217728), (42, 524288), (43, 524288), (44, -1), (45, -1), (46, -1), (47, 67108864), (48, 16777216), (49, 67108864), (50, -1), (51, -1), (52, -1)]

Decide 35 with phase True at level 4

After decision at level 4
 pending : [40, 25, 37, 0, 16, 19, 22, 20, 15, 21, 8, 9, 29, 32, 38, 39, 42, 43, 47, 48, 49, 30, 33, 14, 23, 18, 41, 17, 24, 26]
 solution : [6, 1, 28, 35]


New level: 5
 pending : [40, 25, 37, 0, 16, 19, 22, 20, 15, 21, 8, 9, 29, 32, 38, 39, 42, 43, 47, 48, 49, 30, 33, 14, 23, 18, 41, 17, 24, 26]
 solution : [6, 1, 28, 35]


Before reduction : 
 pending  : [40, 25, 37, 0, 16, 19, 22, 20, 15, 21, 8, 9, 29, 32, 38, 39, 42, 43, 47, 48, 49, 30, 33, 14, 23, 18, 41, 17, 24, 26]
 solution : [6, 1, 28, 35]

Essensial at level 5 : set()

Before removed
 coverage : [(0, 262144), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, 134217728), (9, 1048576), (10, -1), (11, -1), (12, -1), (13, -1), (14, 16777216), (15, 8388608), (16, 393216), (17, 536870912), (18, 268435456), (19, 131072), (20, 2097152), (21, 4194304), (22, 65536), (23, 134217728), (24, 536870912), (25, 1048576), (26, 1073741824), (27, -1), (28, -1), (29, 16384), (30, 16384), (31, -1), (32, 1048576), (33, 2097152), (34, -1), (35, 1073741824), (36, -1), (37, 1048576), (38, 134217728), (39, 16384), (40, 67108864), (41, 134217728), (42, 524288), (43, 524288), (44, -1), (45, -1), (46, -1), (47, 67108864), (48, 16777216), (49, 67108864), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, 262144), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, 134217728), (9, 262144), (10, -1), (11, -1), (12, -1), (13, -1), (14, 16777216), (15, 8388608), (16, 393216), (17, 536870912), (18, 268435456), (19, 131072), (20, 2097152), (21, 4194304), (22, 65536), (23, 134217728), (24, 16384), (25, 1048576), (26, 1073741824), (27, -1), (28, -1), (29, 4096), (30, 0), (31, -1), (32, 262144), (33, 0), (34, -1), (35, -1), (36, -1), (37, 1048576), (38, 33554432), (39, 4096), (40, 67108864), (41, 4096), (42, 131072), (43, 131072), (44, -1), (45, -1), (46, -1), (47, 16777216), (48, 4194304), (49, 16777216), (50, -1), (51, -1), (52, -1)]

Covered at level 5 : {33, 30}

After reduction : 
 pending  : [40, 25, 37, 0, 16, 19, 22, 20, 15, 21, 8, 9, 29, 32, 38, 39, 42, 43, 47, 48, 49, 14, 23, 18, 41, 17, 24, 26]
 solution : [6, 1, 28, 35]


Before reduction : 
 pending  : [40, 25, 37, 0, 16, 19, 22, 20, 15, 21, 8, 9, 29, 32, 38, 39, 42, 43, 47, 48, 49, 14, 23, 18, 41, 17, 24, 26]
 solution : [6, 1, 28, 35]

Essensial at level 5 : set()

Before removed
 coverage : [(0, 262144), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, 134217728), (9, 262144), (10, -1), (11, -1), (12, -1), (13, -1), (14, 16777216), (15, 8388608), (16, 393216), (17, 536870912), (18, 268435456), (19, 131072), (20, 2097152), (21, 4194304), (22, 65536), (23, 134217728), (24, 16384), (25, 1048576), (26, 1073741824), (27, -1), (28, -1), (29, 4096), (30, 0), (31, -1), (32, 262144), (33, 0), (34, -1), (35, -1), (36, -1), (37, 1048576), (38, 33554432), (39, 4096), (40, 67108864), (41, 4096), (42, 131072), (43, 131072), (44, -1), (45, -1), (46, -1), (47, 16777216), (48, 4194304), (49, 16777216), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, 262144), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, 134217728), (9, 262144), (10, -1), (11, -1), (12, -1), (13, -1), (14, 16777216), (15, 8388608), (16, 393216), (17, 536870912), (18, 268435456), (19, 131072), (20, 2097152), (21, 4194304), (22, 65536), (23, 134217728), (24, 16384), (25, 1048576), (26, 1073741824), (27, -1), (28, -1), (29, 4096), (30, -1), (31, -1), (32, 262144), (33, -1), (34, -1), (35, -1), (36, -1), (37, 1048576), (38, 33554432), (39, 4096), (40, 67108864), (41, 4096), (42, 131072), (43, 131072), (44, -1), (45, -1), (46, -1), (47, 16777216), (48, 4194304), (49, 16777216), (50, -1), (51, -1), (52, -1)]

Covered at level 5 : set()

After reduction : 
 pending  : [40, 25, 37, 0, 16, 19, 22, 20, 15, 21, 8, 9, 29, 32, 38, 39, 42, 43, 47, 48, 49, 14, 23, 18, 41, 17, 24, 26]
 solution : [6, 1, 28, 35]


Solution : [6, 1, 28, 35] has cost 28.


Before backtrack at level 5
 pending : [40, 25, 37, 0, 16, 19, 22, 20, 15, 21, 8, 9, 29, 32, 38, 39, 42, 43, 47, 48, 49, 14, 23, 18, 41, 17, 24, 26]
 solution : [6, 1, 28, 35]

After backtrack at level 5
 pending : [40, 25, 37, 0, 16, 19, 22, 20, 15, 21, 8, 9, 29, 32, 38, 39, 42, 43, 47, 48, 49, 14, 23, 18, 41, 17, 24, 26, 30, 33]
 solution : [6, 1, 28, 35]


Invert decision for 35 at level 4


New level: 5
 pending : [40, 25, 37, 0, 16, 19, 22, 20, 15, 21, 8, 9, 29, 32, 38, 39, 42, 43, 47, 48, 49, 14, 23, 18, 41, 17, 24, 26, 30, 33]
 solution : [6, 1, 28]


Before reduction : 
 pending  : [40, 25, 37, 0, 16, 19, 22, 20, 15, 21, 8, 9, 29, 32, 38, 39, 42, 43, 47, 48, 49, 14, 23, 18, 41, 17, 24, 26, 30, 33]
 solution : [6, 1, 28]

Essensial at level 5 : set()

Before removed
 coverage : [(0, 262144), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, 134217728), (9, 262144), (10, -1), (11, -1), (12, -1), (13, -1), (14, 16777216), (15, 8388608), (16, 393216), (17, 536870912), (18, 268435456), (19, 131072), (20, 2097152), (21, 4194304), (22, 65536), (23, 134217728), (24, 16384), (25, 1048576), (26, 1073741824), (27, -1), (28, -1), (29, 4096), (30, -1), (31, -1), (32, 262144), (33, -1), (34, -1), (35, -1), (36, -1), (37, 1048576), (38, 33554432), (39, 4096), (40, 67108864), (41, 4096), (42, 131072), (43, 131072), (44, -1), (45, -1), (46, -1), (47, 16777216), (48, 4194304), (49, 16777216), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, 262144), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, 134217728), (9, 1048576), (10, -1), (11, -1), (12, -1), (13, -1), (14, 16777216), (15, 8388608), (16, 393216), (17, 536870912), (18, 268435456), (19, 131072), (20, 2097152), (21, 4194304), (22, 65536), (23, 134217728), (24, 536870912), (25, 1048576), (26, 1073741824), (27, -1), (28, -1), (29, 16384), (30, 16384), (31, -1), (32, 1048576), (33, 2097152), (34, -1), (35, -1), (36, -1), (37, 1048576), (38, 134217728), (39, 16384), (40, 67108864), (41, 134217728), (42, 524288), (43, 524288), (44, -1), (45, -1), (46, -1), (47, 67108864), (48, 16777216), (49, 67108864), (50, -1), (51, -1), (52, -1)]

Covered at level 5 : set()

After reduction : 
 pending  : [40, 25, 37, 0, 16, 19, 22, 20, 15, 21, 8, 9, 29, 32, 38, 39, 42, 43, 47, 48, 49, 14, 23, 18, 41, 17, 24, 26, 30, 33]
 solution : [6, 1, 28]


Solution : [6, 1, 28] has cost 15.


Decide in level 5 among pending : [40, 25, 37, 0, 16, 19, 22, 20, 15, 21, 8, 9, 29, 32, 38, 39, 42, 43, 47, 48, 49, 14, 23, 18, 41, 17, 24, 26, 30, 33]

Coverage : [(0, 262144), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, 134217728), (9, 1048576), (10, -1), (11, -1), (12, -1), (13, -1), (14, 16777216), (15, 8388608), (16, 393216), (17, 536870912), (18, 268435456), (19, 131072), (20, 2097152), (21, 4194304), (22, 65536), (23, 134217728), (24, 536870912), (25, 1048576), (26, 1073741824), (27, -1), (28, -1), (29, 16384), (30, 16384), (31, -1), (32, 1048576), (33, 2097152), (34, -1), (35, -1), (36, -1), (37, 1048576), (38, 134217728), (39, 16384), (40, 67108864), (41, 134217728), (42, 524288), (43, 524288), (44, -1), (45, -1), (46, -1), (47, 67108864), (48, 16777216), (49, 67108864), (50, -1), (51, -1), (52, -1)]

Decide 26 with phase True at level 5

After decision at level 5
 pending : [40, 25, 37, 0, 16, 19, 22, 20, 15, 21, 8, 9, 29, 32, 38, 39, 42, 43, 47, 48, 49, 14, 23, 18, 41, 17, 24, 30, 33]
 solution : [6, 1, 28, 26]


New level: 6
 pending : [40, 25, 37, 0, 16, 19, 22, 20, 15, 21, 8, 9, 29, 32, 38, 39, 42, 43, 47, 48, 49, 14, 23, 18, 41, 17, 24, 30, 33]
 solution : [6, 1, 28, 26]


Before reduction : 
 pending  : [40, 25, 37, 0, 16, 19, 22, 20, 15, 21, 8, 9, 29, 32, 38, 39, 42, 43, 47, 48, 49, 14, 23, 18, 41, 17, 24, 30, 33]
 solution : [6, 1, 28, 26]

Essensial at level 6 : set()

Before removed
 coverage : [(0, 262144), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, 134217728), (9, 1048576), (10, -1), (11, -1), (12, -1), (13, -1), (14, 16777216), (15, 8388608), (16, 393216), (17, 536870912), (18, 268435456), (19, 131072), (20, 2097152), (21, 4194304), (22, 65536), (23, 134217728), (24, 536870912), (25, 1048576), (26, 1073741824), (27, -1), (28, -1), (29, 16384), (30, 16384), (31, -1), (32, 1048576), (33, 2097152), (34, -1), (35, -1), (36, -1), (37, 1048576), (38, 134217728), (39, 16384), (40, 67108864), (41, 134217728), (42, 524288), (43, 524288), (44, -1), (45, -1), (46, -1), (47, 67108864), (48, 16777216), (49, 67108864), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, 0), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, 134217728), (9, 262144), (10, -1), (11, -1), (12, -1), (13, -1), (14, 0), (15, 0), (16, 0), (17, 0), (18, 0), (19, 0), (20, 0), (21, 0), (22, 0), (23, 134217728), (24, 536870912), (25, 0), (26, -1), (27, -1), (28, -1), (29, 4096), (30, 4096), (31, -1), (32, 524288), (33, 2097152), (34, -1), (35, -1), (36, -1), (37, 0), (38, 67108864), (39, 2048), (40, 2048), (41, 2048), (42, 131072), (43, 131072), (44, -1), (45, -1), (46, -1), (47, 33554432), (48, 4194304), (49, 16777216), (50, -1), (51, -1), (52, -1)]

Covered at level 6 : {0, 37, 14, 15, 16, 17, 18, 19, 20, 21, 22, 25}

After reduction : 
 pending  : [40, 8, 9, 29, 32, 38, 39, 42, 43, 47, 48, 49, 23, 41, 24, 30, 33]
 solution : [6, 1, 28, 26]


Before reduction : 
 pending  : [40, 8, 9, 29, 32, 38, 39, 42, 43, 47, 48, 49, 23, 41, 24, 30, 33]
 solution : [6, 1, 28, 26]

Essensial at level 6 : set()

Before removed
 coverage : [(0, 0), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, 134217728), (9, 262144), (10, -1), (11, -1), (12, -1), (13, -1), (14, 0), (15, 0), (16, 0), (17, 0), (18, 0), (19, 0), (20, 0), (21, 0), (22, 0), (23, 134217728), (24, 536870912), (25, 0), (26, -1), (27, -1), (28, -1), (29, 4096), (30, 4096), (31, -1), (32, 524288), (33, 2097152), (34, -1), (35, -1), (36, -1), (37, 0), (38, 67108864), (39, 2048), (40, 2048), (41, 2048), (42, 131072), (43, 131072), (44, -1), (45, -1), (46, -1), (47, 33554432), (48, 4194304), (49, 16777216), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, 134217728), (9, 262144), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, 134217728), (24, 536870912), (25, -1), (26, -1), (27, -1), (28, -1), (29, 4096), (30, 4096), (31, -1), (32, 524288), (33, 2097152), (34, -1), (35, -1), (36, -1), (37, -1), (38, 67108864), (39, 2048), (40, 2048), (41, 2048), (42, 131072), (43, 131072), (44, -1), (45, -1), (46, -1), (47, 33554432), (48, 4194304), (49, 16777216), (50, -1), (51, -1), (52, -1)]

Covered at level 6 : set()

After reduction : 
 pending  : [40, 8, 9, 29, 32, 38, 39, 42, 43, 47, 48, 49, 23, 41, 24, 30, 33]
 solution : [6, 1, 28, 26]


Solution : [6, 1, 28, 26] has cost 19.


Decide in level 6 among pending : [40, 8, 9, 29, 32, 38, 39, 42, 43, 47, 48, 49, 23, 41, 24, 30, 33]

Coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, 134217728), (9, 262144), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, 134217728), (24, 536870912), (25, -1), (26, -1), (27, -1), (28, -1), (29, 4096), (30, 4096), (31, -1), (32, 524288), (33, 2097152), (34, -1), (35, -1), (36, -1), (37, -1), (38, 67108864), (39, 2048), (40, 2048), (41, 2048), (42, 131072), (43, 131072), (44, -1), (45, -1), (46, -1), (47, 33554432), (48, 4194304), (49, 16777216), (50, -1), (51, -1), (52, -1)]

Decide 24 with phase True at level 6

After decision at level 6
 pending : [40, 8, 9, 29, 32, 38, 39, 42, 43, 47, 48, 49, 23, 41, 30, 33]
 solution : [6, 1, 28, 26, 24]


New level: 7
 pending : [40, 8, 9, 29, 32, 38, 39, 42, 43, 47, 48, 49, 23, 41, 30, 33]
 solution : [6, 1, 28, 26, 24]


Before reduction : 
 pending  : [40, 8, 9, 29, 32, 38, 39, 42, 43, 47, 48, 49, 23, 41, 30, 33]
 solution : [6, 1, 28, 26, 24]

Essensial at level 7 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, 134217728), (9, 262144), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, 134217728), (24, 536870912), (25, -1), (26, -1), (27, -1), (28, -1), (29, 4096), (30, 4096), (31, -1), (32, 524288), (33, 2097152), (34, -1), (35, -1), (36, -1), (37, -1), (38, 67108864), (39, 2048), (40, 2048), (41, 2048), (42, 131072), (43, 131072), (44, -1), (45, -1), (46, -1), (47, 33554432), (48, 4194304), (49, 16777216), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, 33554432), (9, 65536), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, 33554432), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, 1024), (30, 0), (31, -1), (32, 131072), (33, 0), (34, -1), (35, -1), (36, -1), (37, -1), (38, 16777216), (39, 512), (40, 512), (41, 0), (42, 32768), (43, 32768), (44, -1), (45, -1), (46, -1), (47, 8388608), (48, 1048576), (49, 8388608), (50, -1), (51, -1), (52, -1)]

Covered at level 7 : {41, 30, 33}

After reduction : 
 pending  : [40, 8, 9, 29, 32, 38, 39, 42, 43, 47, 48, 49, 23]
 solution : [6, 1, 28, 26, 24]


Before reduction : 
 pending  : [40, 8, 9, 29, 32, 38, 39, 42, 43, 47, 48, 49, 23]
 solution : [6, 1, 28, 26, 24]

Essensial at level 7 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, 33554432), (9, 65536), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, 33554432), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, 1024), (30, 0), (31, -1), (32, 131072), (33, 0), (34, -1), (35, -1), (36, -1), (37, -1), (38, 16777216), (39, 512), (40, 512), (41, 0), (42, 32768), (43, 32768), (44, -1), (45, -1), (46, -1), (47, 8388608), (48, 1048576), (49, 8388608), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, 33554432), (9, 65536), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, 33554432), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, 1024), (30, -1), (31, -1), (32, 131072), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, 16777216), (39, 512), (40, 512), (41, -1), (42, 32768), (43, 32768), (44, -1), (45, -1), (46, -1), (47, 8388608), (48, 1048576), (49, 8388608), (50, -1), (51, -1), (52, -1)]

Covered at level 7 : set()

After reduction : 
 pending  : [40, 8, 9, 29, 32, 38, 39, 42, 43, 47, 48, 49, 23]
 solution : [6, 1, 28, 26, 24]


Solution : [6, 1, 28, 26, 24] has cost 26.


Before backtrack at level 7
 pending : [40, 8, 9, 29, 32, 38, 39, 42, 43, 47, 48, 49, 23]
 solution : [6, 1, 28, 26, 24]

After backtrack at level 7
 pending : [40, 8, 9, 29, 32, 38, 39, 42, 43, 47, 48, 49, 23, 41, 30, 33]
 solution : [6, 1, 28, 26, 24]


Invert decision for 24 at level 6


New level: 7
 pending : [40, 8, 9, 29, 32, 38, 39, 42, 43, 47, 48, 49, 23, 41, 30, 33]
 solution : [6, 1, 28, 26]


Before reduction : 
 pending  : [40, 8, 9, 29, 32, 38, 39, 42, 43, 47, 48, 49, 23, 41, 30, 33]
 solution : [6, 1, 28, 26]

Essensial at level 7 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, 33554432), (9, 65536), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, 33554432), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, 1024), (30, -1), (31, -1), (32, 131072), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, 16777216), (39, 512), (40, 512), (41, -1), (42, 32768), (43, 32768), (44, -1), (45, -1), (46, -1), (47, 8388608), (48, 1048576), (49, 8388608), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, 134217728), (9, 262144), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, 134217728), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, 4096), (30, 4096), (31, -1), (32, 524288), (33, 2097152), (34, -1), (35, -1), (36, -1), (37, -1), (38, 67108864), (39, 2048), (40, 2048), (41, 2048), (42, 131072), (43, 131072), (44, -1), (45, -1), (46, -1), (47, 33554432), (48, 4194304), (49, 16777216), (50, -1), (51, -1), (52, -1)]

Covered at level 7 : set()

After reduction : 
 pending  : [40, 8, 9, 29, 32, 38, 39, 42, 43, 47, 48, 49, 23, 41, 30, 33]
 solution : [6, 1, 28, 26]


Solution : [6, 1, 28, 26] has cost 19.


Decide in level 7 among pending : [40, 8, 9, 29, 32, 38, 39, 42, 43, 47, 48, 49, 23, 41, 30, 33]

Coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, 134217728), (9, 262144), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, 134217728), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, 4096), (30, 4096), (31, -1), (32, 524288), (33, 2097152), (34, -1), (35, -1), (36, -1), (37, -1), (38, 67108864), (39, 2048), (40, 2048), (41, 2048), (42, 131072), (43, 131072), (44, -1), (45, -1), (46, -1), (47, 33554432), (48, 4194304), (49, 16777216), (50, -1), (51, -1), (52, -1)]

Decide 8 with phase True at level 7

After decision at level 7
 pending : [40, 9, 29, 32, 38, 39, 42, 43, 47, 48, 49, 23, 41, 30, 33]
 solution : [6, 1, 28, 26, 8]


New level: 8
 pending : [40, 9, 29, 32, 38, 39, 42, 43, 47, 48, 49, 23, 41, 30, 33]
 solution : [6, 1, 28, 26, 8]


Before reduction : 
 pending  : [40, 9, 29, 32, 38, 39, 42, 43, 47, 48, 49, 23, 41, 30, 33]
 solution : [6, 1, 28, 26, 8]

Essensial at level 8 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, 134217728), (9, 262144), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, 134217728), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, 4096), (30, 4096), (31, -1), (32, 524288), (33, 2097152), (34, -1), (35, -1), (36, -1), (37, -1), (38, 67108864), (39, 2048), (40, 2048), (41, 2048), (42, 131072), (43, 131072), (44, -1), (45, -1), (46, -1), (47, 33554432), (48, 4194304), (49, 16777216), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, 0), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, 0), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, 0), (30, 0), (31, -1), (32, 0), (33, 0), (34, -1), (35, -1), (36, -1), (37, -1), (38, 0), (39, 0), (40, 0), (41, 0), (42, 0), (43, 0), (44, -1), (45, -1), (46, -1), (47, 0), (48, 0), (49, 0), (50, -1), (51, -1), (52, -1)]

Covered at level 8 : {32, 33, 38, 39, 40, 9, 42, 43, 41, 47, 48, 49, 23, 29, 30}

After reduction : 
 pending  : []
 solution : [6, 1, 28, 26, 8]


Before reduction : 
 pending  : []
 solution : [6, 1, 28, 26, 8]

Essensial at level 8 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, 0), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, 0), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, 0), (30, 0), (31, -1), (32, 0), (33, 0), (34, -1), (35, -1), (36, -1), (37, -1), (38, 0), (39, 0), (40, 0), (41, 0), (42, 0), (43, 0), (44, -1), (45, -1), (46, -1), (47, 0), (48, 0), (49, 0), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 8 : set()

After reduction : 
 pending  : []
 solution : [6, 1, 28, 26, 8]


Solution : [6, 1, 28, 26, 8] has cost 23.


Before backtrack at level 8
 pending : []
 solution : [6, 1, 28, 26, 8]

After backtrack at level 8
 pending : [40, 9, 29, 32, 38, 39, 42, 43, 47, 48, 49, 23, 41, 30, 33]
 solution : [6, 1, 28, 26, 8]


Invert decision for 8 at level 7


New level: 8
 pending : [40, 9, 29, 32, 38, 39, 42, 43, 47, 48, 49, 23, 41, 30, 33]
 solution : [6, 1, 28, 26]


Before reduction : 
 pending  : [40, 9, 29, 32, 38, 39, 42, 43, 47, 48, 49, 23, 41, 30, 33]
 solution : [6, 1, 28, 26]

Essensial at level 8 : {23}

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, 0), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, 0), (30, 0), (31, -1), (32, 0), (33, 0), (34, -1), (35, -1), (36, -1), (37, -1), (38, 0), (39, 0), (40, 0), (41, 0), (42, 0), (43, 0), (44, -1), (45, -1), (46, -1), (47, 0), (48, 0), (49, 0), (50, -1), (51, -1), (52, -1)]

Covered at level 8 : {32, 33, 38, 39, 40, 9, 42, 43, 41, 47, 48, 49, 29, 30}

After reduction : 
 pending  : []
 solution : [6, 1, 28, 26, 23]


Before reduction : 
 pending  : []
 solution : [6, 1, 28, 26, 23]

Essensial at level 8 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, 0), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, 0), (30, 0), (31, -1), (32, 0), (33, 0), (34, -1), (35, -1), (36, -1), (37, -1), (38, 0), (39, 0), (40, 0), (41, 0), (42, 0), (43, 0), (44, -1), (45, -1), (46, -1), (47, 0), (48, 0), (49, 0), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 8 : set()

After reduction : 
 pending  : []
 solution : [6, 1, 28, 26, 23]


Solution : [6, 1, 28, 26, 23] has cost 26.


Before backtrack at level 8
 pending : []
 solution : [6, 1, 28, 26, 23]

After backtrack at level 8
 pending : [23, 40, 9, 29, 32, 38, 39, 42, 43, 47, 48, 49, 41, 30, 33]
 solution : [6, 1, 28, 26]


Before backtrack at level 7
 pending : [23, 40, 9, 29, 32, 38, 39, 42, 43, 47, 48, 49, 41, 30, 33]
 solution : [6, 1, 28, 26]

After backtrack at level 7
 pending : [23, 40, 9, 29, 32, 38, 39, 42, 43, 47, 48, 49, 41, 30, 33, 8]
 solution : [6, 1, 28, 26]


Before backtrack at level 6
 pending : [23, 40, 9, 29, 32, 38, 39, 42, 43, 47, 48, 49, 41, 30, 33, 8]
 solution : [6, 1, 28, 26]

After backtrack at level 6
 pending : [23, 40, 9, 29, 32, 38, 39, 42, 43, 47, 48, 49, 41, 30, 33, 8, 25, 37, 0, 16, 19, 22, 20, 15, 21, 14, 18, 17, 24]
 solution : [6, 1, 28, 26]


Invert decision for 26 at level 5


New level: 6
 pending : [23, 40, 9, 29, 32, 38, 39, 42, 43, 47, 48, 49, 41, 30, 33, 8, 25, 37, 0, 16, 19, 22, 20, 15, 21, 14, 18, 17, 24]
 solution : [6, 1, 28]


Before reduction : 
 pending  : [23, 40, 9, 29, 32, 38, 39, 42, 43, 47, 48, 49, 41, 30, 33, 8, 25, 37, 0, 16, 19, 22, 20, 15, 21, 14, 18, 17, 24]
 solution : [6, 1, 28]

Essensial at level 6 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, 262144), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, 134217728), (9, 1048576), (10, -1), (11, -1), (12, -1), (13, -1), (14, 16777216), (15, 8388608), (16, 393216), (17, 536870912), (18, 268435456), (19, 131072), (20, 2097152), (21, 4194304), (22, 65536), (23, 134217728), (24, 536870912), (25, 1048576), (26, -1), (27, -1), (28, -1), (29, 16384), (30, 16384), (31, -1), (32, 1048576), (33, 2097152), (34, -1), (35, -1), (36, -1), (37, 1048576), (38, 134217728), (39, 16384), (40, 67108864), (41, 134217728), (42, 524288), (43, 524288), (44, -1), (45, -1), (46, -1), (47, 67108864), (48, 16777216), (49, 67108864), (50, -1), (51, -1), (52, -1)]

Covered at level 6 : set()

After reduction : 
 pending  : [23, 40, 9, 29, 32, 38, 39, 42, 43, 47, 48, 49, 41, 30, 33, 8, 25, 37, 0, 16, 19, 22, 20, 15, 21, 14, 18, 17, 24]
 solution : [6, 1, 28]


Solution : [6, 1, 28] has cost 15.


Decide in level 6 among pending : [23, 40, 9, 29, 32, 38, 39, 42, 43, 47, 48, 49, 41, 30, 33, 8, 25, 37, 0, 16, 19, 22, 20, 15, 21, 14, 18, 17, 24]

Coverage : [(0, 262144), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, 134217728), (9, 1048576), (10, -1), (11, -1), (12, -1), (13, -1), (14, 16777216), (15, 8388608), (16, 393216), (17, 536870912), (18, 268435456), (19, 131072), (20, 2097152), (21, 4194304), (22, 65536), (23, 134217728), (24, 536870912), (25, 1048576), (26, -1), (27, -1), (28, -1), (29, 16384), (30, 16384), (31, -1), (32, 1048576), (33, 2097152), (34, -1), (35, -1), (36, -1), (37, 1048576), (38, 134217728), (39, 16384), (40, 67108864), (41, 134217728), (42, 524288), (43, 524288), (44, -1), (45, -1), (46, -1), (47, 67108864), (48, 16777216), (49, 67108864), (50, -1), (51, -1), (52, -1)]

Decide 17 with phase True at level 6

After decision at level 6
 pending : [23, 40, 9, 29, 32, 38, 39, 42, 43, 47, 48, 49, 41, 30, 33, 8, 25, 37, 0, 16, 19, 22, 20, 15, 21, 14, 18, 24]
 solution : [6, 1, 28, 17]


New level: 7
 pending : [23, 40, 9, 29, 32, 38, 39, 42, 43, 47, 48, 49, 41, 30, 33, 8, 25, 37, 0, 16, 19, 22, 20, 15, 21, 14, 18, 24]
 solution : [6, 1, 28, 17]


Before reduction : 
 pending  : [23, 40, 9, 29, 32, 38, 39, 42, 43, 47, 48, 49, 41, 30, 33, 8, 25, 37, 0, 16, 19, 22, 20, 15, 21, 14, 18, 24]
 solution : [6, 1, 28, 17]

Essensial at level 7 : set()

Before removed
 coverage : [(0, 262144), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, 134217728), (9, 1048576), (10, -1), (11, -1), (12, -1), (13, -1), (14, 16777216), (15, 8388608), (16, 393216), (17, 536870912), (18, 268435456), (19, 131072), (20, 2097152), (21, 4194304), (22, 65536), (23, 134217728), (24, 536870912), (25, 1048576), (26, -1), (27, -1), (28, -1), (29, 16384), (30, 16384), (31, -1), (32, 1048576), (33, 2097152), (34, -1), (35, -1), (36, -1), (37, 1048576), (38, 134217728), (39, 16384), (40, 67108864), (41, 134217728), (42, 524288), (43, 524288), (44, -1), (45, -1), (46, -1), (47, 67108864), (48, 16777216), (49, 67108864), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, 0), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, 134217728), (9, 262144), (10, -1), (11, -1), (12, -1), (13, -1), (14, 0), (15, 0), (16, 0), (17, -1), (18, 0), (19, 0), (20, 0), (21, 0), (22, 0), (23, 134217728), (24, 536870912), (25, 0), (26, -1), (27, -1), (28, -1), (29, 4096), (30, 4096), (31, -1), (32, 524288), (33, 2097152), (34, -1), (35, -1), (36, -1), (37, 0), (38, 67108864), (39, 2048), (40, 2048), (41, 2048), (42, 131072), (43, 131072), (44, -1), (45, -1), (46, -1), (47, 33554432), (48, 4194304), (49, 67108864), (50, -1), (51, -1), (52, -1)]

Covered at level 7 : {0, 37, 14, 15, 16, 18, 19, 20, 21, 22, 25}

After reduction : 
 pending  : [23, 40, 9, 29, 32, 38, 39, 42, 43, 47, 48, 49, 41, 30, 33, 8, 24]
 solution : [6, 1, 28, 17]


Before reduction : 
 pending  : [23, 40, 9, 29, 32, 38, 39, 42, 43, 47, 48, 49, 41, 30, 33, 8, 24]
 solution : [6, 1, 28, 17]

Essensial at level 7 : set()

Before removed
 coverage : [(0, 0), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, 134217728), (9, 262144), (10, -1), (11, -1), (12, -1), (13, -1), (14, 0), (15, 0), (16, 0), (17, -1), (18, 0), (19, 0), (20, 0), (21, 0), (22, 0), (23, 134217728), (24, 536870912), (25, 0), (26, -1), (27, -1), (28, -1), (29, 4096), (30, 4096), (31, -1), (32, 524288), (33, 2097152), (34, -1), (35, -1), (36, -1), (37, 0), (38, 67108864), (39, 2048), (40, 2048), (41, 2048), (42, 131072), (43, 131072), (44, -1), (45, -1), (46, -1), (47, 33554432), (48, 4194304), (49, 67108864), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, 134217728), (9, 262144), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, 134217728), (24, 536870912), (25, -1), (26, -1), (27, -1), (28, -1), (29, 4096), (30, 4096), (31, -1), (32, 524288), (33, 2097152), (34, -1), (35, -1), (36, -1), (37, -1), (38, 67108864), (39, 2048), (40, 2048), (41, 2048), (42, 131072), (43, 131072), (44, -1), (45, -1), (46, -1), (47, 33554432), (48, 4194304), (49, 67108864), (50, -1), (51, -1), (52, -1)]

Covered at level 7 : set()

After reduction : 
 pending  : [23, 40, 9, 29, 32, 38, 39, 42, 43, 47, 48, 49, 41, 30, 33, 8, 24]
 solution : [6, 1, 28, 17]


Solution : [6, 1, 28, 17] has cost 22.


Decide in level 7 among pending : [23, 40, 9, 29, 32, 38, 39, 42, 43, 47, 48, 49, 41, 30, 33, 8, 24]

Coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, 134217728), (9, 262144), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, 134217728), (24, 536870912), (25, -1), (26, -1), (27, -1), (28, -1), (29, 4096), (30, 4096), (31, -1), (32, 524288), (33, 2097152), (34, -1), (35, -1), (36, -1), (37, -1), (38, 67108864), (39, 2048), (40, 2048), (41, 2048), (42, 131072), (43, 131072), (44, -1), (45, -1), (46, -1), (47, 33554432), (48, 4194304), (49, 67108864), (50, -1), (51, -1), (52, -1)]

Decide 24 with phase True at level 7

After decision at level 7
 pending : [23, 40, 9, 29, 32, 38, 39, 42, 43, 47, 48, 49, 41, 30, 33, 8]
 solution : [6, 1, 28, 17, 24]


New level: 8
 pending : [23, 40, 9, 29, 32, 38, 39, 42, 43, 47, 48, 49, 41, 30, 33, 8]
 solution : [6, 1, 28, 17, 24]


Before reduction : 
 pending  : [23, 40, 9, 29, 32, 38, 39, 42, 43, 47, 48, 49, 41, 30, 33, 8]
 solution : [6, 1, 28, 17, 24]

Essensial at level 8 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, 134217728), (9, 262144), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, 134217728), (24, 536870912), (25, -1), (26, -1), (27, -1), (28, -1), (29, 4096), (30, 4096), (31, -1), (32, 524288), (33, 2097152), (34, -1), (35, -1), (36, -1), (37, -1), (38, 67108864), (39, 2048), (40, 2048), (41, 2048), (42, 131072), (43, 131072), (44, -1), (45, -1), (46, -1), (47, 33554432), (48, 4194304), (49, 67108864), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, 33554432), (9, 65536), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, 33554432), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, 1024), (30, 0), (31, -1), (32, 131072), (33, 0), (34, -1), (35, -1), (36, -1), (37, -1), (38, 16777216), (39, 512), (40, 512), (41, 0), (42, 32768), (43, 32768), (44, -1), (45, -1), (46, -1), (47, 8388608), (48, 1048576), (49, 33554432), (50, -1), (51, -1), (52, -1)]

Covered at level 8 : {41, 30, 33}

After reduction : 
 pending  : [23, 40, 9, 29, 32, 38, 39, 42, 43, 47, 48, 49, 8]
 solution : [6, 1, 28, 17, 24]


Before reduction : 
 pending  : [23, 40, 9, 29, 32, 38, 39, 42, 43, 47, 48, 49, 8]
 solution : [6, 1, 28, 17, 24]

Essensial at level 8 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, 33554432), (9, 65536), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, 33554432), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, 1024), (30, 0), (31, -1), (32, 131072), (33, 0), (34, -1), (35, -1), (36, -1), (37, -1), (38, 16777216), (39, 512), (40, 512), (41, 0), (42, 32768), (43, 32768), (44, -1), (45, -1), (46, -1), (47, 8388608), (48, 1048576), (49, 33554432), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, 33554432), (9, 65536), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, 33554432), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, 1024), (30, -1), (31, -1), (32, 131072), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, 16777216), (39, 512), (40, 512), (41, -1), (42, 32768), (43, 32768), (44, -1), (45, -1), (46, -1), (47, 8388608), (48, 1048576), (49, 33554432), (50, -1), (51, -1), (52, -1)]

Covered at level 8 : set()

After reduction : 
 pending  : [23, 40, 9, 29, 32, 38, 39, 42, 43, 47, 48, 49, 8]
 solution : [6, 1, 28, 17, 24]


Solution : [6, 1, 28, 17, 24] has cost 29.


Before backtrack at level 8
 pending : [23, 40, 9, 29, 32, 38, 39, 42, 43, 47, 48, 49, 8]
 solution : [6, 1, 28, 17, 24]

After backtrack at level 8
 pending : [23, 40, 9, 29, 32, 38, 39, 42, 43, 47, 48, 49, 8, 41, 30, 33]
 solution : [6, 1, 28, 17, 24]


Invert decision for 24 at level 7


New level: 8
 pending : [23, 40, 9, 29, 32, 38, 39, 42, 43, 47, 48, 49, 8, 41, 30, 33]
 solution : [6, 1, 28, 17]


Before reduction : 
 pending  : [23, 40, 9, 29, 32, 38, 39, 42, 43, 47, 48, 49, 8, 41, 30, 33]
 solution : [6, 1, 28, 17]

Essensial at level 8 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, 33554432), (9, 65536), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, 33554432), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, 1024), (30, -1), (31, -1), (32, 131072), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, 16777216), (39, 512), (40, 512), (41, -1), (42, 32768), (43, 32768), (44, -1), (45, -1), (46, -1), (47, 8388608), (48, 1048576), (49, 33554432), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, 134217728), (9, 262144), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, 134217728), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, 4096), (30, 4096), (31, -1), (32, 524288), (33, 2097152), (34, -1), (35, -1), (36, -1), (37, -1), (38, 67108864), (39, 2048), (40, 2048), (41, 2048), (42, 131072), (43, 131072), (44, -1), (45, -1), (46, -1), (47, 33554432), (48, 4194304), (49, 67108864), (50, -1), (51, -1), (52, -1)]

Covered at level 8 : set()

After reduction : 
 pending  : [23, 40, 9, 29, 32, 38, 39, 42, 43, 47, 48, 49, 8, 41, 30, 33]
 solution : [6, 1, 28, 17]


Solution : [6, 1, 28, 17] has cost 22.


Decide in level 8 among pending : [23, 40, 9, 29, 32, 38, 39, 42, 43, 47, 48, 49, 8, 41, 30, 33]

Coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, 134217728), (9, 262144), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, 134217728), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, 4096), (30, 4096), (31, -1), (32, 524288), (33, 2097152), (34, -1), (35, -1), (36, -1), (37, -1), (38, 67108864), (39, 2048), (40, 2048), (41, 2048), (42, 131072), (43, 131072), (44, -1), (45, -1), (46, -1), (47, 33554432), (48, 4194304), (49, 67108864), (50, -1), (51, -1), (52, -1)]

Decide 23 with phase True at level 8

After decision at level 8
 pending : [40, 9, 29, 32, 38, 39, 42, 43, 47, 48, 49, 8, 41, 30, 33]
 solution : [6, 1, 28, 17, 23]


New level: 9
 pending : [40, 9, 29, 32, 38, 39, 42, 43, 47, 48, 49, 8, 41, 30, 33]
 solution : [6, 1, 28, 17, 23]


Before reduction : 
 pending  : [40, 9, 29, 32, 38, 39, 42, 43, 47, 48, 49, 8, 41, 30, 33]
 solution : [6, 1, 28, 17, 23]

Essensial at level 9 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, 134217728), (9, 262144), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, 134217728), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, 4096), (30, 4096), (31, -1), (32, 524288), (33, 2097152), (34, -1), (35, -1), (36, -1), (37, -1), (38, 67108864), (39, 2048), (40, 2048), (41, 2048), (42, 131072), (43, 131072), (44, -1), (45, -1), (46, -1), (47, 33554432), (48, 4194304), (49, 67108864), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, 0), (9, 0), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, 0), (30, 0), (31, -1), (32, 0), (33, 0), (34, -1), (35, -1), (36, -1), (37, -1), (38, 0), (39, 0), (40, 0), (41, 0), (42, 0), (43, 0), (44, -1), (45, -1), (46, -1), (47, 0), (48, 0), (49, 0), (50, -1), (51, -1), (52, -1)]

Covered at level 9 : {32, 33, 38, 39, 40, 9, 42, 43, 8, 41, 47, 48, 49, 29, 30}

After reduction : 
 pending  : []
 solution : [6, 1, 28, 17, 23]


Before reduction : 
 pending  : []
 solution : [6, 1, 28, 17, 23]

Essensial at level 9 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, 0), (9, 0), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, 0), (30, 0), (31, -1), (32, 0), (33, 0), (34, -1), (35, -1), (36, -1), (37, -1), (38, 0), (39, 0), (40, 0), (41, 0), (42, 0), (43, 0), (44, -1), (45, -1), (46, -1), (47, 0), (48, 0), (49, 0), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 9 : set()

After reduction : 
 pending  : []
 solution : [6, 1, 28, 17, 23]


Solution : [6, 1, 28, 17, 23] has cost 29.


Before backtrack at level 9
 pending : []
 solution : [6, 1, 28, 17, 23]

After backtrack at level 9
 pending : [40, 9, 29, 32, 38, 39, 42, 43, 47, 48, 49, 8, 41, 30, 33]
 solution : [6, 1, 28, 17, 23]


Invert decision for 23 at level 8


New level: 9
 pending : [40, 9, 29, 32, 38, 39, 42, 43, 47, 48, 49, 8, 41, 30, 33]
 solution : [6, 1, 28, 17]


Before reduction : 
 pending  : [40, 9, 29, 32, 38, 39, 42, 43, 47, 48, 49, 8, 41, 30, 33]
 solution : [6, 1, 28, 17]

Essensial at level 9 : {8}

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, 0), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, 0), (30, 0), (31, -1), (32, 0), (33, 0), (34, -1), (35, -1), (36, -1), (37, -1), (38, 0), (39, 0), (40, 0), (41, 0), (42, 0), (43, 0), (44, -1), (45, -1), (46, -1), (47, 0), (48, 0), (49, 0), (50, -1), (51, -1), (52, -1)]

Covered at level 9 : {32, 33, 38, 39, 40, 9, 42, 43, 41, 47, 48, 49, 29, 30}

After reduction : 
 pending  : []
 solution : [6, 1, 28, 17, 8]


Before reduction : 
 pending  : []
 solution : [6, 1, 28, 17, 8]

Essensial at level 9 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, 0), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, 0), (30, 0), (31, -1), (32, 0), (33, 0), (34, -1), (35, -1), (36, -1), (37, -1), (38, 0), (39, 0), (40, 0), (41, 0), (42, 0), (43, 0), (44, -1), (45, -1), (46, -1), (47, 0), (48, 0), (49, 0), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 9 : set()

After reduction : 
 pending  : []
 solution : [6, 1, 28, 17, 8]


Solution : [6, 1, 28, 17, 8] has cost 26.


Before backtrack at level 9
 pending : []
 solution : [6, 1, 28, 17, 8]

After backtrack at level 9
 pending : [8, 40, 9, 29, 32, 38, 39, 42, 43, 47, 48, 49, 41, 30, 33]
 solution : [6, 1, 28, 17]


Before backtrack at level 8
 pending : [8, 40, 9, 29, 32, 38, 39, 42, 43, 47, 48, 49, 41, 30, 33]
 solution : [6, 1, 28, 17]

After backtrack at level 8
 pending : [8, 40, 9, 29, 32, 38, 39, 42, 43, 47, 48, 49, 41, 30, 33, 23]
 solution : [6, 1, 28, 17]


Before backtrack at level 7
 pending : [8, 40, 9, 29, 32, 38, 39, 42, 43, 47, 48, 49, 41, 30, 33, 23]
 solution : [6, 1, 28, 17]

After backtrack at level 7
 pending : [8, 40, 9, 29, 32, 38, 39, 42, 43, 47, 48, 49, 41, 30, 33, 23, 25, 37, 0, 16, 19, 22, 20, 15, 21, 14, 18, 24]
 solution : [6, 1, 28, 17]


Invert decision for 17 at level 6


New level: 7
 pending : [8, 40, 9, 29, 32, 38, 39, 42, 43, 47, 48, 49, 41, 30, 33, 23, 25, 37, 0, 16, 19, 22, 20, 15, 21, 14, 18, 24]
 solution : [6, 1, 28]


Before reduction : 
 pending  : [8, 40, 9, 29, 32, 38, 39, 42, 43, 47, 48, 49, 41, 30, 33, 23, 25, 37, 0, 16, 19, 22, 20, 15, 21, 14, 18, 24]
 solution : [6, 1, 28]

Essensial at level 7 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, 262144), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, 134217728), (9, 1048576), (10, -1), (11, -1), (12, -1), (13, -1), (14, 16777216), (15, 8388608), (16, 393216), (17, -1), (18, 268435456), (19, 131072), (20, 2097152), (21, 4194304), (22, 65536), (23, 134217728), (24, 536870912), (25, 1048576), (26, -1), (27, -1), (28, -1), (29, 16384), (30, 16384), (31, -1), (32, 1048576), (33, 2097152), (34, -1), (35, -1), (36, -1), (37, 1048576), (38, 134217728), (39, 16384), (40, 67108864), (41, 134217728), (42, 524288), (43, 524288), (44, -1), (45, -1), (46, -1), (47, 67108864), (48, 16777216), (49, 67108864), (50, -1), (51, -1), (52, -1)]

Covered at level 7 : set()

After reduction : 
 pending  : [8, 40, 9, 29, 32, 38, 39, 42, 43, 47, 48, 49, 41, 30, 33, 23, 25, 37, 0, 16, 19, 22, 20, 15, 21, 14, 18, 24]
 solution : [6, 1, 28]


Solution : [6, 1, 28] has cost 15.


Decide in level 7 among pending : [8, 40, 9, 29, 32, 38, 39, 42, 43, 47, 48, 49, 41, 30, 33, 23, 25, 37, 0, 16, 19, 22, 20, 15, 21, 14, 18, 24]

Coverage : [(0, 262144), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, 134217728), (9, 1048576), (10, -1), (11, -1), (12, -1), (13, -1), (14, 16777216), (15, 8388608), (16, 393216), (17, -1), (18, 268435456), (19, 131072), (20, 2097152), (21, 4194304), (22, 65536), (23, 134217728), (24, 536870912), (25, 1048576), (26, -1), (27, -1), (28, -1), (29, 16384), (30, 16384), (31, -1), (32, 1048576), (33, 2097152), (34, -1), (35, -1), (36, -1), (37, 1048576), (38, 134217728), (39, 16384), (40, 67108864), (41, 134217728), (42, 524288), (43, 524288), (44, -1), (45, -1), (46, -1), (47, 67108864), (48, 16777216), (49, 67108864), (50, -1), (51, -1), (52, -1)]

Decide 24 with phase True at level 7

After decision at level 7
 pending : [8, 40, 9, 29, 32, 38, 39, 42, 43, 47, 48, 49, 41, 30, 33, 23, 25, 37, 0, 16, 19, 22, 20, 15, 21, 14, 18]
 solution : [6, 1, 28, 24]


New level: 8
 pending : [8, 40, 9, 29, 32, 38, 39, 42, 43, 47, 48, 49, 41, 30, 33, 23, 25, 37, 0, 16, 19, 22, 20, 15, 21, 14, 18]
 solution : [6, 1, 28, 24]


Before reduction : 
 pending  : [8, 40, 9, 29, 32, 38, 39, 42, 43, 47, 48, 49, 41, 30, 33, 23, 25, 37, 0, 16, 19, 22, 20, 15, 21, 14, 18]
 solution : [6, 1, 28, 24]

Essensial at level 8 : set()

Before removed
 coverage : [(0, 262144), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, 134217728), (9, 1048576), (10, -1), (11, -1), (12, -1), (13, -1), (14, 16777216), (15, 8388608), (16, 393216), (17, -1), (18, 268435456), (19, 131072), (20, 2097152), (21, 4194304), (22, 65536), (23, 134217728), (24, 536870912), (25, 1048576), (26, -1), (27, -1), (28, -1), (29, 16384), (30, 16384), (31, -1), (32, 1048576), (33, 2097152), (34, -1), (35, -1), (36, -1), (37, 1048576), (38, 134217728), (39, 16384), (40, 67108864), (41, 134217728), (42, 524288), (43, 524288), (44, -1), (45, -1), (46, -1), (47, 67108864), (48, 16777216), (49, 67108864), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, 262144), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, 33554432), (9, 262144), (10, -1), (11, -1), (12, -1), (13, -1), (14, 16777216), (15, 8388608), (16, 393216), (17, -1), (18, 268435456), (19, 131072), (20, 2097152), (21, 4194304), (22, 65536), (23, 33554432), (24, -1), (25, 1048576), (26, -1), (27, -1), (28, -1), (29, 4096), (30, 0), (31, -1), (32, 262144), (33, 0), (34, -1), (35, -1), (36, -1), (37, 1048576), (38, 33554432), (39, 4096), (40, 33554432), (41, 512), (42, 131072), (43, 131072), (44, -1), (45, -1), (46, -1), (47, 16777216), (48, 4194304), (49, 33554432), (50, -1), (51, -1), (52, -1)]

Covered at level 8 : {33, 30}

After reduction : 
 pending  : [8, 40, 9, 29, 32, 38, 39, 42, 43, 47, 48, 49, 41, 23, 25, 37, 0, 16, 19, 22, 20, 15, 21, 14, 18]
 solution : [6, 1, 28, 24]


Before reduction : 
 pending  : [8, 40, 9, 29, 32, 38, 39, 42, 43, 47, 48, 49, 41, 23, 25, 37, 0, 16, 19, 22, 20, 15, 21, 14, 18]
 solution : [6, 1, 28, 24]

Essensial at level 8 : set()

Before removed
 coverage : [(0, 262144), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, 33554432), (9, 262144), (10, -1), (11, -1), (12, -1), (13, -1), (14, 16777216), (15, 8388608), (16, 393216), (17, -1), (18, 268435456), (19, 131072), (20, 2097152), (21, 4194304), (22, 65536), (23, 33554432), (24, -1), (25, 1048576), (26, -1), (27, -1), (28, -1), (29, 4096), (30, 0), (31, -1), (32, 262144), (33, 0), (34, -1), (35, -1), (36, -1), (37, 1048576), (38, 33554432), (39, 4096), (40, 33554432), (41, 512), (42, 131072), (43, 131072), (44, -1), (45, -1), (46, -1), (47, 16777216), (48, 4194304), (49, 33554432), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, 262144), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, 33554432), (9, 262144), (10, -1), (11, -1), (12, -1), (13, -1), (14, 16777216), (15, 8388608), (16, 393216), (17, -1), (18, 268435456), (19, 131072), (20, 2097152), (21, 4194304), (22, 65536), (23, 33554432), (24, -1), (25, 1048576), (26, -1), (27, -1), (28, -1), (29, 4096), (30, -1), (31, -1), (32, 262144), (33, -1), (34, -1), (35, -1), (36, -1), (37, 1048576), (38, 33554432), (39, 4096), (40, 33554432), (41, 512), (42, 131072), (43, 131072), (44, -1), (45, -1), (46, -1), (47, 16777216), (48, 4194304), (49, 33554432), (50, -1), (51, -1), (52, -1)]

Covered at level 8 : set()

After reduction : 
 pending  : [8, 40, 9, 29, 32, 38, 39, 42, 43, 47, 48, 49, 41, 23, 25, 37, 0, 16, 19, 22, 20, 15, 21, 14, 18]
 solution : [6, 1, 28, 24]


Solution : [6, 1, 28, 24] has cost 22.


Decide in level 8 among pending : [8, 40, 9, 29, 32, 38, 39, 42, 43, 47, 48, 49, 41, 23, 25, 37, 0, 16, 19, 22, 20, 15, 21, 14, 18]

Coverage : [(0, 262144), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, 33554432), (9, 262144), (10, -1), (11, -1), (12, -1), (13, -1), (14, 16777216), (15, 8388608), (16, 393216), (17, -1), (18, 268435456), (19, 131072), (20, 2097152), (21, 4194304), (22, 65536), (23, 33554432), (24, -1), (25, 1048576), (26, -1), (27, -1), (28, -1), (29, 4096), (30, -1), (31, -1), (32, 262144), (33, -1), (34, -1), (35, -1), (36, -1), (37, 1048576), (38, 33554432), (39, 4096), (40, 33554432), (41, 512), (42, 131072), (43, 131072), (44, -1), (45, -1), (46, -1), (47, 16777216), (48, 4194304), (49, 33554432), (50, -1), (51, -1), (52, -1)]

Decide 18 with phase True at level 8

After decision at level 8
 pending : [8, 40, 9, 29, 32, 38, 39, 42, 43, 47, 48, 49, 41, 23, 25, 37, 0, 16, 19, 22, 20, 15, 21, 14]
 solution : [6, 1, 28, 24, 18]


New level: 9
 pending : [8, 40, 9, 29, 32, 38, 39, 42, 43, 47, 48, 49, 41, 23, 25, 37, 0, 16, 19, 22, 20, 15, 21, 14]
 solution : [6, 1, 28, 24, 18]


Before reduction : 
 pending  : [8, 40, 9, 29, 32, 38, 39, 42, 43, 47, 48, 49, 41, 23, 25, 37, 0, 16, 19, 22, 20, 15, 21, 14]
 solution : [6, 1, 28, 24, 18]

Essensial at level 9 : set()

Before removed
 coverage : [(0, 262144), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, 33554432), (9, 262144), (10, -1), (11, -1), (12, -1), (13, -1), (14, 16777216), (15, 8388608), (16, 393216), (17, -1), (18, 268435456), (19, 131072), (20, 2097152), (21, 4194304), (22, 65536), (23, 33554432), (24, -1), (25, 1048576), (26, -1), (27, -1), (28, -1), (29, 4096), (30, -1), (31, -1), (32, 262144), (33, -1), (34, -1), (35, -1), (36, -1), (37, 1048576), (38, 33554432), (39, 4096), (40, 33554432), (41, 512), (42, 131072), (43, 131072), (44, -1), (45, -1), (46, -1), (47, 16777216), (48, 4194304), (49, 33554432), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, 0), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, 33554432), (9, 65536), (10, -1), (11, -1), (12, -1), (13, -1), (14, 0), (15, 0), (16, 0), (17, -1), (18, -1), (19, 0), (20, 0), (21, 0), (22, 0), (23, 33554432), (24, -1), (25, 0), (26, -1), (27, -1), (28, -1), (29, 1024), (30, -1), (31, -1), (32, 131072), (33, -1), (34, -1), (35, -1), (36, -1), (37, 0), (38, 16777216), (39, 512), (40, 512), (41, 0), (42, 65536), (43, 65536), (44, -1), (45, -1), (46, -1), (47, 16777216), (48, 4194304), (49, 33554432), (50, -1), (51, -1), (52, -1)]

Covered at level 9 : {0, 37, 41, 14, 15, 16, 19, 20, 21, 22, 25}

After reduction : 
 pending  : [8, 40, 9, 29, 32, 38, 39, 42, 43, 47, 48, 49, 23]
 solution : [6, 1, 28, 24, 18]


Before reduction : 
 pending  : [8, 40, 9, 29, 32, 38, 39, 42, 43, 47, 48, 49, 23]
 solution : [6, 1, 28, 24, 18]

Essensial at level 9 : set()

Before removed
 coverage : [(0, 0), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, 33554432), (9, 65536), (10, -1), (11, -1), (12, -1), (13, -1), (14, 0), (15, 0), (16, 0), (17, -1), (18, -1), (19, 0), (20, 0), (21, 0), (22, 0), (23, 33554432), (24, -1), (25, 0), (26, -1), (27, -1), (28, -1), (29, 1024), (30, -1), (31, -1), (32, 131072), (33, -1), (34, -1), (35, -1), (36, -1), (37, 0), (38, 16777216), (39, 512), (40, 512), (41, 0), (42, 65536), (43, 65536), (44, -1), (45, -1), (46, -1), (47, 16777216), (48, 4194304), (49, 33554432), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, 33554432), (9, 65536), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, 33554432), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, 1024), (30, -1), (31, -1), (32, 131072), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, 16777216), (39, 512), (40, 512), (41, -1), (42, 65536), (43, 65536), (44, -1), (45, -1), (46, -1), (47, 16777216), (48, 4194304), (49, 33554432), (50, -1), (51, -1), (52, -1)]

Covered at level 9 : set()

After reduction : 
 pending  : [8, 40, 9, 29, 32, 38, 39, 42, 43, 47, 48, 49, 23]
 solution : [6, 1, 28, 24, 18]


Solution : [6, 1, 28, 24, 18] has cost 29.


Before backtrack at level 9
 pending : [8, 40, 9, 29, 32, 38, 39, 42, 43, 47, 48, 49, 23]
 solution : [6, 1, 28, 24, 18]

After backtrack at level 9
 pending : [8, 40, 9, 29, 32, 38, 39, 42, 43, 47, 48, 49, 23, 41, 25, 37, 0, 16, 19, 22, 20, 15, 21, 14]
 solution : [6, 1, 28, 24, 18]


Invert decision for 18 at level 8


New level: 9
 pending : [8, 40, 9, 29, 32, 38, 39, 42, 43, 47, 48, 49, 23, 41, 25, 37, 0, 16, 19, 22, 20, 15, 21, 14]
 solution : [6, 1, 28, 24]


Before reduction : 
 pending  : [8, 40, 9, 29, 32, 38, 39, 42, 43, 47, 48, 49, 23, 41, 25, 37, 0, 16, 19, 22, 20, 15, 21, 14]
 solution : [6, 1, 28, 24]

Essensial at level 9 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, 33554432), (9, 65536), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, 33554432), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, 1024), (30, -1), (31, -1), (32, 131072), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, 16777216), (39, 512), (40, 512), (41, -1), (42, 65536), (43, 65536), (44, -1), (45, -1), (46, -1), (47, 16777216), (48, 4194304), (49, 33554432), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, 262144), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, 33554432), (9, 262144), (10, -1), (11, -1), (12, -1), (13, -1), (14, 16777216), (15, 8388608), (16, 393216), (17, -1), (18, -1), (19, 131072), (20, 2097152), (21, 4194304), (22, 65536), (23, 33554432), (24, -1), (25, 1048576), (26, -1), (27, -1), (28, -1), (29, 4096), (30, -1), (31, -1), (32, 262144), (33, -1), (34, -1), (35, -1), (36, -1), (37, 1048576), (38, 33554432), (39, 4096), (40, 33554432), (41, 512), (42, 131072), (43, 131072), (44, -1), (45, -1), (46, -1), (47, 16777216), (48, 4194304), (49, 33554432), (50, -1), (51, -1), (52, -1)]

Covered at level 9 : set()

After reduction : 
 pending  : [8, 40, 9, 29, 32, 38, 39, 42, 43, 47, 48, 49, 23, 41, 25, 37, 0, 16, 19, 22, 20, 15, 21, 14]
 solution : [6, 1, 28, 24]


Solution : [6, 1, 28, 24] has cost 22.


Decide in level 9 among pending : [8, 40, 9, 29, 32, 38, 39, 42, 43, 47, 48, 49, 23, 41, 25, 37, 0, 16, 19, 22, 20, 15, 21, 14]

Coverage : [(0, 262144), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, 33554432), (9, 262144), (10, -1), (11, -1), (12, -1), (13, -1), (14, 16777216), (15, 8388608), (16, 393216), (17, -1), (18, -1), (19, 131072), (20, 2097152), (21, 4194304), (22, 65536), (23, 33554432), (24, -1), (25, 1048576), (26, -1), (27, -1), (28, -1), (29, 4096), (30, -1), (31, -1), (32, 262144), (33, -1), (34, -1), (35, -1), (36, -1), (37, 1048576), (38, 33554432), (39, 4096), (40, 33554432), (41, 512), (42, 131072), (43, 131072), (44, -1), (45, -1), (46, -1), (47, 16777216), (48, 4194304), (49, 33554432), (50, -1), (51, -1), (52, -1)]

Decide 8 with phase True at level 9

After decision at level 9
 pending : [40, 9, 29, 32, 38, 39, 42, 43, 47, 48, 49, 23, 41, 25, 37, 0, 16, 19, 22, 20, 15, 21, 14]
 solution : [6, 1, 28, 24, 8]


New level: 10
 pending : [40, 9, 29, 32, 38, 39, 42, 43, 47, 48, 49, 23, 41, 25, 37, 0, 16, 19, 22, 20, 15, 21, 14]
 solution : [6, 1, 28, 24, 8]


Before reduction : 
 pending  : [40, 9, 29, 32, 38, 39, 42, 43, 47, 48, 49, 23, 41, 25, 37, 0, 16, 19, 22, 20, 15, 21, 14]
 solution : [6, 1, 28, 24, 8]

Essensial at level 10 : set()

Before removed
 coverage : [(0, 262144), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, 33554432), (9, 262144), (10, -1), (11, -1), (12, -1), (13, -1), (14, 16777216), (15, 8388608), (16, 393216), (17, -1), (18, -1), (19, 131072), (20, 2097152), (21, 4194304), (22, 65536), (23, 33554432), (24, -1), (25, 1048576), (26, -1), (27, -1), (28, -1), (29, 4096), (30, -1), (31, -1), (32, 262144), (33, -1), (34, -1), (35, -1), (36, -1), (37, 1048576), (38, 33554432), (39, 4096), (40, 33554432), (41, 512), (42, 131072), (43, 131072), (44, -1), (45, -1), (46, -1), (47, 16777216), (48, 4194304), (49, 33554432), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, 131072), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, 0), (10, -1), (11, -1), (12, -1), (13, -1), (14, 8388608), (15, 4194304), (16, 131072), (17, -1), (18, -1), (19, 65536), (20, 2097152), (21, 4194304), (22, 65536), (23, 0), (24, -1), (25, 524288), (26, -1), (27, -1), (28, -1), (29, 0), (30, -1), (31, -1), (32, 0), (33, -1), (34, -1), (35, -1), (36, -1), (37, 524288), (38, 0), (39, 0), (40, 32768), (41, 512), (42, 0), (43, 0), (44, -1), (45, -1), (46, -1), (47, 0), (48, 0), (49, 0), (50, -1), (51, -1), (52, -1)]

Covered at level 10 : {32, 38, 39, 9, 42, 43, 47, 48, 49, 23, 29}

After reduction : 
 pending  : [40, 41, 25, 37, 0, 16, 19, 22, 20, 15, 21, 14]
 solution : [6, 1, 28, 24, 8]


Before reduction : 
 pending  : [40, 41, 25, 37, 0, 16, 19, 22, 20, 15, 21, 14]
 solution : [6, 1, 28, 24, 8]

Essensial at level 10 : set()

Before removed
 coverage : [(0, 131072), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, 0), (10, -1), (11, -1), (12, -1), (13, -1), (14, 8388608), (15, 4194304), (16, 131072), (17, -1), (18, -1), (19, 65536), (20, 2097152), (21, 4194304), (22, 65536), (23, 0), (24, -1), (25, 524288), (26, -1), (27, -1), (28, -1), (29, 0), (30, -1), (31, -1), (32, 0), (33, -1), (34, -1), (35, -1), (36, -1), (37, 524288), (38, 0), (39, 0), (40, 32768), (41, 512), (42, 0), (43, 0), (44, -1), (45, -1), (46, -1), (47, 0), (48, 0), (49, 0), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, 131072), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 8388608), (15, 4194304), (16, 131072), (17, -1), (18, -1), (19, 65536), (20, 2097152), (21, 4194304), (22, 65536), (23, -1), (24, -1), (25, 524288), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, 524288), (38, -1), (39, -1), (40, 32768), (41, 512), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 10 : set()

After reduction : 
 pending  : [40, 41, 25, 37, 0, 16, 19, 22, 20, 15, 21, 14]
 solution : [6, 1, 28, 24, 8]


Solution : [6, 1, 28, 24, 8] has cost 26.


Before backtrack at level 10
 pending : [40, 41, 25, 37, 0, 16, 19, 22, 20, 15, 21, 14]
 solution : [6, 1, 28, 24, 8]

After backtrack at level 10
 pending : [40, 41, 25, 37, 0, 16, 19, 22, 20, 15, 21, 14, 9, 29, 32, 38, 39, 42, 43, 47, 48, 49, 23]
 solution : [6, 1, 28, 24, 8]


Invert decision for 8 at level 9


New level: 10
 pending : [40, 41, 25, 37, 0, 16, 19, 22, 20, 15, 21, 14, 9, 29, 32, 38, 39, 42, 43, 47, 48, 49, 23]
 solution : [6, 1, 28, 24]


Before reduction : 
 pending  : [40, 41, 25, 37, 0, 16, 19, 22, 20, 15, 21, 14, 9, 29, 32, 38, 39, 42, 43, 47, 48, 49, 23]
 solution : [6, 1, 28, 24]

Essensial at level 10 : {23}

Before removed
 coverage : [(0, 131072), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 8388608), (15, 4194304), (16, 131072), (17, -1), (18, -1), (19, 65536), (20, 2097152), (21, 4194304), (22, 65536), (23, -1), (24, -1), (25, 524288), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, 524288), (38, -1), (39, -1), (40, 32768), (41, 512), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, 131072), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, 0), (10, -1), (11, -1), (12, -1), (13, -1), (14, 8388608), (15, 4194304), (16, 131072), (17, -1), (18, -1), (19, 65536), (20, 2097152), (21, 4194304), (22, 65536), (23, -1), (24, -1), (25, 524288), (26, -1), (27, -1), (28, -1), (29, 0), (30, -1), (31, -1), (32, 0), (33, -1), (34, -1), (35, -1), (36, -1), (37, 524288), (38, 0), (39, 0), (40, 65536), (41, 512), (42, 0), (43, 0), (44, -1), (45, -1), (46, -1), (47, 0), (48, 0), (49, 0), (50, -1), (51, -1), (52, -1)]

Covered at level 10 : {32, 38, 39, 9, 42, 43, 47, 48, 49, 29}

After reduction : 
 pending  : [40, 41, 25, 37, 0, 16, 19, 22, 20, 15, 21, 14]
 solution : [6, 1, 28, 24, 23]


Before reduction : 
 pending  : [40, 41, 25, 37, 0, 16, 19, 22, 20, 15, 21, 14]
 solution : [6, 1, 28, 24, 23]

Essensial at level 10 : set()

Before removed
 coverage : [(0, 131072), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, 0), (10, -1), (11, -1), (12, -1), (13, -1), (14, 8388608), (15, 4194304), (16, 131072), (17, -1), (18, -1), (19, 65536), (20, 2097152), (21, 4194304), (22, 65536), (23, -1), (24, -1), (25, 524288), (26, -1), (27, -1), (28, -1), (29, 0), (30, -1), (31, -1), (32, 0), (33, -1), (34, -1), (35, -1), (36, -1), (37, 524288), (38, 0), (39, 0), (40, 65536), (41, 512), (42, 0), (43, 0), (44, -1), (45, -1), (46, -1), (47, 0), (48, 0), (49, 0), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, 131072), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 8388608), (15, 4194304), (16, 131072), (17, -1), (18, -1), (19, 65536), (20, 2097152), (21, 4194304), (22, 65536), (23, -1), (24, -1), (25, 524288), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, 524288), (38, -1), (39, -1), (40, 65536), (41, 512), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 10 : set()

After reduction : 
 pending  : [40, 41, 25, 37, 0, 16, 19, 22, 20, 15, 21, 14]
 solution : [6, 1, 28, 24, 23]


Solution : [6, 1, 28, 24, 23] has cost 29.


Before backtrack at level 10
 pending : [40, 41, 25, 37, 0, 16, 19, 22, 20, 15, 21, 14]
 solution : [6, 1, 28, 24, 23]

After backtrack at level 10
 pending : [40, 41, 25, 37, 0, 16, 19, 22, 20, 15, 21, 14, 23, 9, 29, 32, 38, 39, 42, 43, 47, 48, 49]
 solution : [6, 1, 28, 24]


Before backtrack at level 9
 pending : [40, 41, 25, 37, 0, 16, 19, 22, 20, 15, 21, 14, 23, 9, 29, 32, 38, 39, 42, 43, 47, 48, 49]
 solution : [6, 1, 28, 24]

After backtrack at level 9
 pending : [40, 41, 25, 37, 0, 16, 19, 22, 20, 15, 21, 14, 23, 9, 29, 32, 38, 39, 42, 43, 47, 48, 49, 8]
 solution : [6, 1, 28, 24]


Before backtrack at level 8
 pending : [40, 41, 25, 37, 0, 16, 19, 22, 20, 15, 21, 14, 23, 9, 29, 32, 38, 39, 42, 43, 47, 48, 49, 8]
 solution : [6, 1, 28, 24]

After backtrack at level 8
 pending : [40, 41, 25, 37, 0, 16, 19, 22, 20, 15, 21, 14, 23, 9, 29, 32, 38, 39, 42, 43, 47, 48, 49, 8, 30, 33, 18]
 solution : [6, 1, 28, 24]


Invert decision for 24 at level 7


New level: 8
 pending : [40, 41, 25, 37, 0, 16, 19, 22, 20, 15, 21, 14, 23, 9, 29, 32, 38, 39, 42, 43, 47, 48, 49, 8, 30, 33, 18]
 solution : [6, 1, 28]


Before reduction : 
 pending  : [40, 41, 25, 37, 0, 16, 19, 22, 20, 15, 21, 14, 23, 9, 29, 32, 38, 39, 42, 43, 47, 48, 49, 8, 30, 33, 18]
 solution : [6, 1, 28]

Essensial at level 8 : set()

Before removed
 coverage : [(0, 131072), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 8388608), (15, 4194304), (16, 131072), (17, -1), (18, -1), (19, 65536), (20, 2097152), (21, 4194304), (22, 65536), (23, -1), (24, -1), (25, 524288), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, 524288), (38, -1), (39, -1), (40, 65536), (41, 512), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, 262144), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, 134217728), (9, 1048576), (10, -1), (11, -1), (12, -1), (13, -1), (14, 16777216), (15, 8388608), (16, 393216), (17, -1), (18, 268435456), (19, 131072), (20, 2097152), (21, 4194304), (22, 65536), (23, 134217728), (24, -1), (25, 1048576), (26, -1), (27, -1), (28, -1), (29, 16384), (30, 16384), (31, -1), (32, 1048576), (33, 2097152), (34, -1), (35, -1), (36, -1), (37, 1048576), (38, 134217728), (39, 16384), (40, 67108864), (41, 134217728), (42, 524288), (43, 524288), (44, -1), (45, -1), (46, -1), (47, 67108864), (48, 16777216), (49, 67108864), (50, -1), (51, -1), (52, -1)]

Covered at level 8 : set()

After reduction : 
 pending  : [40, 41, 25, 37, 0, 16, 19, 22, 20, 15, 21, 14, 23, 9, 29, 32, 38, 39, 42, 43, 47, 48, 49, 8, 30, 33, 18]
 solution : [6, 1, 28]


Solution : [6, 1, 28] has cost 15.


Decide in level 8 among pending : [40, 41, 25, 37, 0, 16, 19, 22, 20, 15, 21, 14, 23, 9, 29, 32, 38, 39, 42, 43, 47, 48, 49, 8, 30, 33, 18]

Coverage : [(0, 262144), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, 134217728), (9, 1048576), (10, -1), (11, -1), (12, -1), (13, -1), (14, 16777216), (15, 8388608), (16, 393216), (17, -1), (18, 268435456), (19, 131072), (20, 2097152), (21, 4194304), (22, 65536), (23, 134217728), (24, -1), (25, 1048576), (26, -1), (27, -1), (28, -1), (29, 16384), (30, 16384), (31, -1), (32, 1048576), (33, 2097152), (34, -1), (35, -1), (36, -1), (37, 1048576), (38, 134217728), (39, 16384), (40, 67108864), (41, 134217728), (42, 524288), (43, 524288), (44, -1), (45, -1), (46, -1), (47, 67108864), (48, 16777216), (49, 67108864), (50, -1), (51, -1), (52, -1)]

Decide 18 with phase True at level 8

After decision at level 8
 pending : [40, 41, 25, 37, 0, 16, 19, 22, 20, 15, 21, 14, 23, 9, 29, 32, 38, 39, 42, 43, 47, 48, 49, 8, 30, 33]
 solution : [6, 1, 28, 18]


New level: 9
 pending : [40, 41, 25, 37, 0, 16, 19, 22, 20, 15, 21, 14, 23, 9, 29, 32, 38, 39, 42, 43, 47, 48, 49, 8, 30, 33]
 solution : [6, 1, 28, 18]


Before reduction : 
 pending  : [40, 41, 25, 37, 0, 16, 19, 22, 20, 15, 21, 14, 23, 9, 29, 32, 38, 39, 42, 43, 47, 48, 49, 8, 30, 33]
 solution : [6, 1, 28, 18]

Essensial at level 9 : set()

Before removed
 coverage : [(0, 262144), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, 134217728), (9, 1048576), (10, -1), (11, -1), (12, -1), (13, -1), (14, 16777216), (15, 8388608), (16, 393216), (17, -1), (18, 268435456), (19, 131072), (20, 2097152), (21, 4194304), (22, 65536), (23, 134217728), (24, -1), (25, 1048576), (26, -1), (27, -1), (28, -1), (29, 16384), (30, 16384), (31, -1), (32, 1048576), (33, 2097152), (34, -1), (35, -1), (36, -1), (37, 1048576), (38, 134217728), (39, 16384), (40, 67108864), (41, 134217728), (42, 524288), (43, 524288), (44, -1), (45, -1), (46, -1), (47, 67108864), (48, 16777216), (49, 67108864), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, 0), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, 134217728), (9, 262144), (10, -1), (11, -1), (12, -1), (13, -1), (14, 0), (15, 0), (16, 0), (17, -1), (18, -1), (19, 0), (20, 0), (21, 0), (22, 0), (23, 134217728), (24, -1), (25, 0), (26, -1), (27, -1), (28, -1), (29, 4096), (30, 4096), (31, -1), (32, 524288), (33, 2097152), (34, -1), (35, -1), (36, -1), (37, 0), (38, 67108864), (39, 2048), (40, 2048), (41, 2048), (42, 262144), (43, 262144), (44, -1), (45, -1), (46, -1), (47, 67108864), (48, 16777216), (49, 67108864), (50, -1), (51, -1), (52, -1)]

Covered at level 9 : {0, 37, 14, 15, 16, 19, 20, 21, 22, 25}

After reduction : 
 pending  : [40, 41, 23, 9, 29, 32, 38, 39, 42, 43, 47, 48, 49, 8, 30, 33]
 solution : [6, 1, 28, 18]


Before reduction : 
 pending  : [40, 41, 23, 9, 29, 32, 38, 39, 42, 43, 47, 48, 49, 8, 30, 33]
 solution : [6, 1, 28, 18]

Essensial at level 9 : set()

Before removed
 coverage : [(0, 0), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, 134217728), (9, 262144), (10, -1), (11, -1), (12, -1), (13, -1), (14, 0), (15, 0), (16, 0), (17, -1), (18, -1), (19, 0), (20, 0), (21, 0), (22, 0), (23, 134217728), (24, -1), (25, 0), (26, -1), (27, -1), (28, -1), (29, 4096), (30, 4096), (31, -1), (32, 524288), (33, 2097152), (34, -1), (35, -1), (36, -1), (37, 0), (38, 67108864), (39, 2048), (40, 2048), (41, 2048), (42, 262144), (43, 262144), (44, -1), (45, -1), (46, -1), (47, 67108864), (48, 16777216), (49, 67108864), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, 134217728), (9, 262144), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, 134217728), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, 4096), (30, 4096), (31, -1), (32, 524288), (33, 2097152), (34, -1), (35, -1), (36, -1), (37, -1), (38, 67108864), (39, 2048), (40, 2048), (41, 2048), (42, 262144), (43, 262144), (44, -1), (45, -1), (46, -1), (47, 67108864), (48, 16777216), (49, 67108864), (50, -1), (51, -1), (52, -1)]

Covered at level 9 : set()

After reduction : 
 pending  : [40, 41, 23, 9, 29, 32, 38, 39, 42, 43, 47, 48, 49, 8, 30, 33]
 solution : [6, 1, 28, 18]


Solution : [6, 1, 28, 18] has cost 22.


Decide in level 9 among pending : [40, 41, 23, 9, 29, 32, 38, 39, 42, 43, 47, 48, 49, 8, 30, 33]

Coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, 134217728), (9, 262144), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, 134217728), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, 4096), (30, 4096), (31, -1), (32, 524288), (33, 2097152), (34, -1), (35, -1), (36, -1), (37, -1), (38, 67108864), (39, 2048), (40, 2048), (41, 2048), (42, 262144), (43, 262144), (44, -1), (45, -1), (46, -1), (47, 67108864), (48, 16777216), (49, 67108864), (50, -1), (51, -1), (52, -1)]

Decide 23 with phase True at level 9

After decision at level 9
 pending : [40, 41, 9, 29, 32, 38, 39, 42, 43, 47, 48, 49, 8, 30, 33]
 solution : [6, 1, 28, 18, 23]


New level: 10
 pending : [40, 41, 9, 29, 32, 38, 39, 42, 43, 47, 48, 49, 8, 30, 33]
 solution : [6, 1, 28, 18, 23]


Before reduction : 
 pending  : [40, 41, 9, 29, 32, 38, 39, 42, 43, 47, 48, 49, 8, 30, 33]
 solution : [6, 1, 28, 18, 23]

Essensial at level 10 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, 134217728), (9, 262144), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, 134217728), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, 4096), (30, 4096), (31, -1), (32, 524288), (33, 2097152), (34, -1), (35, -1), (36, -1), (37, -1), (38, 67108864), (39, 2048), (40, 2048), (41, 2048), (42, 262144), (43, 262144), (44, -1), (45, -1), (46, -1), (47, 67108864), (48, 16777216), (49, 67108864), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, 0), (9, 0), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, 0), (30, 0), (31, -1), (32, 0), (33, 0), (34, -1), (35, -1), (36, -1), (37, -1), (38, 0), (39, 0), (40, 0), (41, 0), (42, 0), (43, 0), (44, -1), (45, -1), (46, -1), (47, 0), (48, 0), (49, 0), (50, -1), (51, -1), (52, -1)]

Covered at level 10 : {32, 33, 38, 39, 40, 41, 9, 42, 43, 8, 47, 48, 49, 29, 30}

After reduction : 
 pending  : []
 solution : [6, 1, 28, 18, 23]


Before reduction : 
 pending  : []
 solution : [6, 1, 28, 18, 23]

Essensial at level 10 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, 0), (9, 0), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, 0), (30, 0), (31, -1), (32, 0), (33, 0), (34, -1), (35, -1), (36, -1), (37, -1), (38, 0), (39, 0), (40, 0), (41, 0), (42, 0), (43, 0), (44, -1), (45, -1), (46, -1), (47, 0), (48, 0), (49, 0), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 10 : set()

After reduction : 
 pending  : []
 solution : [6, 1, 28, 18, 23]


Solution : [6, 1, 28, 18, 23] has cost 29.


Before backtrack at level 10
 pending : []
 solution : [6, 1, 28, 18, 23]

After backtrack at level 10
 pending : [40, 41, 9, 29, 32, 38, 39, 42, 43, 47, 48, 49, 8, 30, 33]
 solution : [6, 1, 28, 18, 23]


Invert decision for 23 at level 9


New level: 10
 pending : [40, 41, 9, 29, 32, 38, 39, 42, 43, 47, 48, 49, 8, 30, 33]
 solution : [6, 1, 28, 18]


Before reduction : 
 pending  : [40, 41, 9, 29, 32, 38, 39, 42, 43, 47, 48, 49, 8, 30, 33]
 solution : [6, 1, 28, 18]

Essensial at level 10 : {8}

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, 0), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, 0), (30, 0), (31, -1), (32, 0), (33, 0), (34, -1), (35, -1), (36, -1), (37, -1), (38, 0), (39, 0), (40, 0), (41, 0), (42, 0), (43, 0), (44, -1), (45, -1), (46, -1), (47, 0), (48, 0), (49, 0), (50, -1), (51, -1), (52, -1)]

Covered at level 10 : {32, 33, 38, 39, 40, 41, 9, 42, 43, 47, 48, 49, 29, 30}

After reduction : 
 pending  : []
 solution : [6, 1, 28, 18, 8]


Before reduction : 
 pending  : []
 solution : [6, 1, 28, 18, 8]

Essensial at level 10 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, 0), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, 0), (30, 0), (31, -1), (32, 0), (33, 0), (34, -1), (35, -1), (36, -1), (37, -1), (38, 0), (39, 0), (40, 0), (41, 0), (42, 0), (43, 0), (44, -1), (45, -1), (46, -1), (47, 0), (48, 0), (49, 0), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 10 : set()

After reduction : 
 pending  : []
 solution : [6, 1, 28, 18, 8]


Solution : [6, 1, 28, 18, 8] has cost 26.


Before backtrack at level 10
 pending : []
 solution : [6, 1, 28, 18, 8]

After backtrack at level 10
 pending : [8, 40, 41, 9, 29, 32, 38, 39, 42, 43, 47, 48, 49, 30, 33]
 solution : [6, 1, 28, 18]


Before backtrack at level 9
 pending : [8, 40, 41, 9, 29, 32, 38, 39, 42, 43, 47, 48, 49, 30, 33]
 solution : [6, 1, 28, 18]

After backtrack at level 9
 pending : [8, 40, 41, 9, 29, 32, 38, 39, 42, 43, 47, 48, 49, 30, 33, 25, 37, 0, 16, 19, 22, 20, 15, 21, 14, 23]
 solution : [6, 1, 28, 18]


Invert decision for 18 at level 8


New level: 9
 pending : [8, 40, 41, 9, 29, 32, 38, 39, 42, 43, 47, 48, 49, 30, 33, 25, 37, 0, 16, 19, 22, 20, 15, 21, 14, 23]
 solution : [6, 1, 28]


Before reduction : 
 pending  : [8, 40, 41, 9, 29, 32, 38, 39, 42, 43, 47, 48, 49, 30, 33, 25, 37, 0, 16, 19, 22, 20, 15, 21, 14, 23]
 solution : [6, 1, 28]

Essensial at level 9 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, 262144), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, 134217728), (9, 1048576), (10, -1), (11, -1), (12, -1), (13, -1), (14, 16777216), (15, 8388608), (16, 393216), (17, -1), (18, -1), (19, 131072), (20, 2097152), (21, 4194304), (22, 65536), (23, 134217728), (24, -1), (25, 1048576), (26, -1), (27, -1), (28, -1), (29, 16384), (30, 16384), (31, -1), (32, 1048576), (33, 2097152), (34, -1), (35, -1), (36, -1), (37, 1048576), (38, 134217728), (39, 16384), (40, 67108864), (41, 134217728), (42, 524288), (43, 524288), (44, -1), (45, -1), (46, -1), (47, 67108864), (48, 16777216), (49, 67108864), (50, -1), (51, -1), (52, -1)]

Covered at level 9 : set()

After reduction : 
 pending  : [8, 40, 41, 9, 29, 32, 38, 39, 42, 43, 47, 48, 49, 30, 33, 25, 37, 0, 16, 19, 22, 20, 15, 21, 14, 23]
 solution : [6, 1, 28]


Solution : [6, 1, 28] has cost 15.


Decide in level 9 among pending : [8, 40, 41, 9, 29, 32, 38, 39, 42, 43, 47, 48, 49, 30, 33, 25, 37, 0, 16, 19, 22, 20, 15, 21, 14, 23]

Coverage : [(0, 262144), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, 134217728), (9, 1048576), (10, -1), (11, -1), (12, -1), (13, -1), (14, 16777216), (15, 8388608), (16, 393216), (17, -1), (18, -1), (19, 131072), (20, 2097152), (21, 4194304), (22, 65536), (23, 134217728), (24, -1), (25, 1048576), (26, -1), (27, -1), (28, -1), (29, 16384), (30, 16384), (31, -1), (32, 1048576), (33, 2097152), (34, -1), (35, -1), (36, -1), (37, 1048576), (38, 134217728), (39, 16384), (40, 67108864), (41, 134217728), (42, 524288), (43, 524288), (44, -1), (45, -1), (46, -1), (47, 67108864), (48, 16777216), (49, 67108864), (50, -1), (51, -1), (52, -1)]

Decide 8 with phase True at level 9

After decision at level 9
 pending : [40, 41, 9, 29, 32, 38, 39, 42, 43, 47, 48, 49, 30, 33, 25, 37, 0, 16, 19, 22, 20, 15, 21, 14, 23]
 solution : [6, 1, 28, 8]


New level: 10
 pending : [40, 41, 9, 29, 32, 38, 39, 42, 43, 47, 48, 49, 30, 33, 25, 37, 0, 16, 19, 22, 20, 15, 21, 14, 23]
 solution : [6, 1, 28, 8]


Before reduction : 
 pending  : [40, 41, 9, 29, 32, 38, 39, 42, 43, 47, 48, 49, 30, 33, 25, 37, 0, 16, 19, 22, 20, 15, 21, 14, 23]
 solution : [6, 1, 28, 8]

Essensial at level 10 : set()

Before removed
 coverage : [(0, 262144), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, 134217728), (9, 1048576), (10, -1), (11, -1), (12, -1), (13, -1), (14, 16777216), (15, 8388608), (16, 393216), (17, -1), (18, -1), (19, 131072), (20, 2097152), (21, 4194304), (22, 65536), (23, 134217728), (24, -1), (25, 1048576), (26, -1), (27, -1), (28, -1), (29, 16384), (30, 16384), (31, -1), (32, 1048576), (33, 2097152), (34, -1), (35, -1), (36, -1), (37, 1048576), (38, 134217728), (39, 16384), (40, 67108864), (41, 134217728), (42, 524288), (43, 524288), (44, -1), (45, -1), (46, -1), (47, 67108864), (48, 16777216), (49, 67108864), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, 131072), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, 0), (10, -1), (11, -1), (12, -1), (13, -1), (14, 8388608), (15, 4194304), (16, 131072), (17, -1), (18, -1), (19, 65536), (20, 2097152), (21, 4194304), (22, 65536), (23, 0), (24, -1), (25, 524288), (26, -1), (27, -1), (28, -1), (29, 0), (30, 0), (31, -1), (32, 0), (33, 0), (34, -1), (35, -1), (36, -1), (37, 524288), (38, 0), (39, 0), (40, 32768), (41, 512), (42, 0), (43, 0), (44, -1), (45, -1), (46, -1), (47, 0), (48, 0), (49, 0), (50, -1), (51, -1), (52, -1)]

Covered at level 10 : {32, 33, 38, 39, 9, 42, 43, 47, 48, 49, 23, 29, 30}

After reduction : 
 pending  : [40, 41, 25, 37, 0, 16, 19, 22, 20, 15, 21, 14]
 solution : [6, 1, 28, 8]


Before reduction : 
 pending  : [40, 41, 25, 37, 0, 16, 19, 22, 20, 15, 21, 14]
 solution : [6, 1, 28, 8]

Essensial at level 10 : set()

Before removed
 coverage : [(0, 131072), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, 0), (10, -1), (11, -1), (12, -1), (13, -1), (14, 8388608), (15, 4194304), (16, 131072), (17, -1), (18, -1), (19, 65536), (20, 2097152), (21, 4194304), (22, 65536), (23, 0), (24, -1), (25, 524288), (26, -1), (27, -1), (28, -1), (29, 0), (30, 0), (31, -1), (32, 0), (33, 0), (34, -1), (35, -1), (36, -1), (37, 524288), (38, 0), (39, 0), (40, 32768), (41, 512), (42, 0), (43, 0), (44, -1), (45, -1), (46, -1), (47, 0), (48, 0), (49, 0), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, 131072), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 8388608), (15, 4194304), (16, 131072), (17, -1), (18, -1), (19, 65536), (20, 2097152), (21, 4194304), (22, 65536), (23, -1), (24, -1), (25, 524288), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, 524288), (38, -1), (39, -1), (40, 32768), (41, 512), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 10 : set()

After reduction : 
 pending  : [40, 41, 25, 37, 0, 16, 19, 22, 20, 15, 21, 14]
 solution : [6, 1, 28, 8]


Solution : [6, 1, 28, 8] has cost 19.


Decide in level 10 among pending : [40, 41, 25, 37, 0, 16, 19, 22, 20, 15, 21, 14]

Coverage : [(0, 131072), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 8388608), (15, 4194304), (16, 131072), (17, -1), (18, -1), (19, 65536), (20, 2097152), (21, 4194304), (22, 65536), (23, -1), (24, -1), (25, 524288), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, 524288), (38, -1), (39, -1), (40, 32768), (41, 512), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Decide 14 with phase True at level 10

After decision at level 10
 pending : [40, 41, 25, 37, 0, 16, 19, 22, 20, 15, 21]
 solution : [6, 1, 28, 8, 14]


New level: 11
 pending : [40, 41, 25, 37, 0, 16, 19, 22, 20, 15, 21]
 solution : [6, 1, 28, 8, 14]


Before reduction : 
 pending  : [40, 41, 25, 37, 0, 16, 19, 22, 20, 15, 21]
 solution : [6, 1, 28, 8, 14]

Essensial at level 11 : set()

Before removed
 coverage : [(0, 131072), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 8388608), (15, 4194304), (16, 131072), (17, -1), (18, -1), (19, 65536), (20, 2097152), (21, 4194304), (22, 65536), (23, -1), (24, -1), (25, 524288), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, 524288), (38, -1), (39, -1), (40, 32768), (41, 512), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, 0), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, 0), (16, 0), (17, -1), (18, -1), (19, 0), (20, 16384), (21, 65536), (22, 16384), (23, -1), (24, -1), (25, 2048), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, 2048), (38, -1), (39, -1), (40, 1024), (41, 512), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 11 : {0, 16, 19, 15}

After reduction : 
 pending  : [40, 41, 25, 37, 22, 20, 21]
 solution : [6, 1, 28, 8, 14]


Before reduction : 
 pending  : [40, 41, 25, 37, 22, 20, 21]
 solution : [6, 1, 28, 8, 14]

Essensial at level 11 : set()

Before removed
 coverage : [(0, 0), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, 0), (16, 0), (17, -1), (18, -1), (19, 0), (20, 16384), (21, 65536), (22, 16384), (23, -1), (24, -1), (25, 2048), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, 2048), (38, -1), (39, -1), (40, 1024), (41, 512), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, 16384), (21, 65536), (22, 16384), (23, -1), (24, -1), (25, 2048), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, 2048), (38, -1), (39, -1), (40, 1024), (41, 512), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 11 : set()

After reduction : 
 pending  : [40, 41, 25, 37, 22, 20, 21]
 solution : [6, 1, 28, 8, 14]


Solution : [6, 1, 28, 8, 14] has cost 28.


Before backtrack at level 11
 pending : [40, 41, 25, 37, 22, 20, 21]
 solution : [6, 1, 28, 8, 14]

After backtrack at level 11
 pending : [40, 41, 25, 37, 22, 20, 21, 0, 16, 19, 15]
 solution : [6, 1, 28, 8, 14]


Invert decision for 14 at level 10


New level: 11
 pending : [40, 41, 25, 37, 22, 20, 21, 0, 16, 19, 15]
 solution : [6, 1, 28, 8]


Before reduction : 
 pending  : [40, 41, 25, 37, 22, 20, 21, 0, 16, 19, 15]
 solution : [6, 1, 28, 8]

Essensial at level 11 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, 16384), (21, 65536), (22, 16384), (23, -1), (24, -1), (25, 2048), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, 2048), (38, -1), (39, -1), (40, 1024), (41, 512), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, 131072), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, 4194304), (16, 131072), (17, -1), (18, -1), (19, 65536), (20, 2097152), (21, 4194304), (22, 65536), (23, -1), (24, -1), (25, 524288), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, 524288), (38, -1), (39, -1), (40, 32768), (41, 512), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 11 : set()

After reduction : 
 pending  : [40, 41, 25, 37, 22, 20, 21, 0, 16, 19, 15]
 solution : [6, 1, 28, 8]


Solution : [6, 1, 28, 8] has cost 19.


Decide in level 11 among pending : [40, 41, 25, 37, 22, 20, 21, 0, 16, 19, 15]

Coverage : [(0, 131072), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, 4194304), (16, 131072), (17, -1), (18, -1), (19, 65536), (20, 2097152), (21, 4194304), (22, 65536), (23, -1), (24, -1), (25, 524288), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, 524288), (38, -1), (39, -1), (40, 32768), (41, 512), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Decide 21 with phase True at level 11

After decision at level 11
 pending : [40, 41, 25, 37, 22, 20, 0, 16, 19, 15]
 solution : [6, 1, 28, 8, 21]


New level: 12
 pending : [40, 41, 25, 37, 22, 20, 0, 16, 19, 15]
 solution : [6, 1, 28, 8, 21]


Before reduction : 
 pending  : [40, 41, 25, 37, 22, 20, 0, 16, 19, 15]
 solution : [6, 1, 28, 8, 21]

Essensial at level 12 : set()

Before removed
 coverage : [(0, 131072), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, 4194304), (16, 131072), (17, -1), (18, -1), (19, 65536), (20, 2097152), (21, 4194304), (22, 65536), (23, -1), (24, -1), (25, 524288), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, 524288), (38, -1), (39, -1), (40, 32768), (41, 512), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, 65536), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, 1048576), (16, 65536), (17, -1), (18, -1), (19, 0), (20, 0), (21, -1), (22, 0), (23, -1), (24, -1), (25, 131072), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, 131072), (38, -1), (39, -1), (40, 512), (41, 0), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 12 : {41, 19, 20, 22}

After reduction : 
 pending  : [40, 25, 37, 0, 16, 15]
 solution : [6, 1, 28, 8, 21]


Before reduction : 
 pending  : [40, 25, 37, 0, 16, 15]
 solution : [6, 1, 28, 8, 21]

Essensial at level 12 : set()

Before removed
 coverage : [(0, 65536), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, 1048576), (16, 65536), (17, -1), (18, -1), (19, 0), (20, 0), (21, -1), (22, 0), (23, -1), (24, -1), (25, 131072), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, 131072), (38, -1), (39, -1), (40, 512), (41, 0), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, 65536), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, 1048576), (16, 65536), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, 131072), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, 131072), (38, -1), (39, -1), (40, 512), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 12 : set()

After reduction : 
 pending  : [40, 25, 37, 0, 16, 15]
 solution : [6, 1, 28, 8, 21]


Solution : [6, 1, 28, 8, 21] has cost 26.


Before backtrack at level 12
 pending : [40, 25, 37, 0, 16, 15]
 solution : [6, 1, 28, 8, 21]

After backtrack at level 12
 pending : [40, 25, 37, 0, 16, 15, 41, 22, 20, 19]
 solution : [6, 1, 28, 8, 21]


Invert decision for 21 at level 11


New level: 12
 pending : [40, 25, 37, 0, 16, 15, 41, 22, 20, 19]
 solution : [6, 1, 28, 8]


Before reduction : 
 pending  : [40, 25, 37, 0, 16, 15, 41, 22, 20, 19]
 solution : [6, 1, 28, 8]

Essensial at level 12 : set()

Before removed
 coverage : [(0, 65536), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, 1048576), (16, 65536), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, 131072), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, 131072), (38, -1), (39, -1), (40, 512), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, 131072), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, 4194304), (16, 131072), (17, -1), (18, -1), (19, 65536), (20, 2097152), (21, -1), (22, 65536), (23, -1), (24, -1), (25, 524288), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, 524288), (38, -1), (39, -1), (40, 32768), (41, 512), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 12 : set()

After reduction : 
 pending  : [40, 25, 37, 0, 16, 15, 41, 22, 20, 19]
 solution : [6, 1, 28, 8]


Solution : [6, 1, 28, 8] has cost 19.


Decide in level 12 among pending : [40, 25, 37, 0, 16, 15, 41, 22, 20, 19]

Coverage : [(0, 131072), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, 4194304), (16, 131072), (17, -1), (18, -1), (19, 65536), (20, 2097152), (21, -1), (22, 65536), (23, -1), (24, -1), (25, 524288), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, 524288), (38, -1), (39, -1), (40, 32768), (41, 512), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Decide 15 with phase True at level 12

After decision at level 12
 pending : [40, 25, 37, 0, 16, 41, 22, 20, 19]
 solution : [6, 1, 28, 8, 15]


New level: 13
 pending : [40, 25, 37, 0, 16, 41, 22, 20, 19]
 solution : [6, 1, 28, 8, 15]


Before reduction : 
 pending  : [40, 25, 37, 0, 16, 41, 22, 20, 19]
 solution : [6, 1, 28, 8, 15]

Essensial at level 13 : set()

Before removed
 coverage : [(0, 131072), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, 4194304), (16, 131072), (17, -1), (18, -1), (19, 65536), (20, 2097152), (21, -1), (22, 65536), (23, -1), (24, -1), (25, 524288), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, 524288), (38, -1), (39, -1), (40, 32768), (41, 512), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, 0), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, 0), (17, -1), (18, -1), (19, 0), (20, 16384), (21, -1), (22, 16384), (23, -1), (24, -1), (25, 2048), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, 2048), (38, -1), (39, -1), (40, 1024), (41, 512), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 13 : {0, 16, 19}

After reduction : 
 pending  : [40, 25, 37, 41, 22, 20]
 solution : [6, 1, 28, 8, 15]


Before reduction : 
 pending  : [40, 25, 37, 41, 22, 20]
 solution : [6, 1, 28, 8, 15]

Essensial at level 13 : set()

Before removed
 coverage : [(0, 0), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, 0), (17, -1), (18, -1), (19, 0), (20, 16384), (21, -1), (22, 16384), (23, -1), (24, -1), (25, 2048), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, 2048), (38, -1), (39, -1), (40, 1024), (41, 512), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, 16384), (21, -1), (22, 16384), (23, -1), (24, -1), (25, 2048), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, 2048), (38, -1), (39, -1), (40, 1024), (41, 512), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 13 : set()

After reduction : 
 pending  : [40, 25, 37, 41, 22, 20]
 solution : [6, 1, 28, 8, 15]


Solution : [6, 1, 28, 8, 15] has cost 28.


Before backtrack at level 13
 pending : [40, 25, 37, 41, 22, 20]
 solution : [6, 1, 28, 8, 15]

After backtrack at level 13
 pending : [40, 25, 37, 41, 22, 20, 0, 16, 19]
 solution : [6, 1, 28, 8, 15]


Invert decision for 15 at level 12


New level: 13
 pending : [40, 25, 37, 41, 22, 20, 0, 16, 19]
 solution : [6, 1, 28, 8]


Before reduction : 
 pending  : [40, 25, 37, 41, 22, 20, 0, 16, 19]
 solution : [6, 1, 28, 8]

Essensial at level 13 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, 16384), (21, -1), (22, 16384), (23, -1), (24, -1), (25, 2048), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, 2048), (38, -1), (39, -1), (40, 1024), (41, 512), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, 131072), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, 131072), (17, -1), (18, -1), (19, 65536), (20, 2097152), (21, -1), (22, 65536), (23, -1), (24, -1), (25, 524288), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, 524288), (38, -1), (39, -1), (40, 32768), (41, 512), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 13 : set()

After reduction : 
 pending  : [40, 25, 37, 41, 22, 20, 0, 16, 19]
 solution : [6, 1, 28, 8]


Solution : [6, 1, 28, 8] has cost 19.


Decide in level 13 among pending : [40, 25, 37, 41, 22, 20, 0, 16, 19]

Coverage : [(0, 131072), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, 131072), (17, -1), (18, -1), (19, 65536), (20, 2097152), (21, -1), (22, 65536), (23, -1), (24, -1), (25, 524288), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, 524288), (38, -1), (39, -1), (40, 32768), (41, 512), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Decide 20 with phase True at level 13

After decision at level 13
 pending : [40, 25, 37, 41, 22, 0, 16, 19]
 solution : [6, 1, 28, 8, 20]


New level: 14
 pending : [40, 25, 37, 41, 22, 0, 16, 19]
 solution : [6, 1, 28, 8, 20]


Before reduction : 
 pending  : [40, 25, 37, 41, 22, 0, 16, 19]
 solution : [6, 1, 28, 8, 20]

Essensial at level 14 : set()

Before removed
 coverage : [(0, 131072), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, 131072), (17, -1), (18, -1), (19, 65536), (20, 2097152), (21, -1), (22, 65536), (23, -1), (24, -1), (25, 524288), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, 524288), (38, -1), (39, -1), (40, 32768), (41, 512), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, 65536), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, 65536), (17, -1), (18, -1), (19, 0), (20, -1), (21, -1), (22, 0), (23, -1), (24, -1), (25, 131072), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, 131072), (38, -1), (39, -1), (40, 512), (41, 0), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 14 : {41, 19, 22}

After reduction : 
 pending  : [40, 25, 37, 0, 16]
 solution : [6, 1, 28, 8, 20]


Before reduction : 
 pending  : [40, 25, 37, 0, 16]
 solution : [6, 1, 28, 8, 20]

Essensial at level 14 : set()

Before removed
 coverage : [(0, 65536), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, 65536), (17, -1), (18, -1), (19, 0), (20, -1), (21, -1), (22, 0), (23, -1), (24, -1), (25, 131072), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, 131072), (38, -1), (39, -1), (40, 512), (41, 0), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, 65536), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, 65536), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, 131072), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, 131072), (38, -1), (39, -1), (40, 512), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 14 : set()

After reduction : 
 pending  : [40, 25, 37, 0, 16]
 solution : [6, 1, 28, 8, 20]


Solution : [6, 1, 28, 8, 20] has cost 26.


Before backtrack at level 14
 pending : [40, 25, 37, 0, 16]
 solution : [6, 1, 28, 8, 20]

After backtrack at level 14
 pending : [40, 25, 37, 0, 16, 41, 22, 19]
 solution : [6, 1, 28, 8, 20]


Invert decision for 20 at level 13


New level: 14
 pending : [40, 25, 37, 0, 16, 41, 22, 19]
 solution : [6, 1, 28, 8]


Before reduction : 
 pending  : [40, 25, 37, 0, 16, 41, 22, 19]
 solution : [6, 1, 28, 8]

Essensial at level 14 : {22}

Before removed
 coverage : [(0, 65536), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, 65536), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, 131072), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, 131072), (38, -1), (39, -1), (40, 512), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, 131072), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, 131072), (17, -1), (18, -1), (19, 32768), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, 524288), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, 524288), (38, -1), (39, -1), (40, 32768), (41, 0), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 14 : {41}

After reduction : 
 pending  : [40, 25, 37, 0, 16, 19]
 solution : [6, 1, 28, 8, 22]


Before reduction : 
 pending  : [40, 25, 37, 0, 16, 19]
 solution : [6, 1, 28, 8, 22]

Essensial at level 14 : set()

Before removed
 coverage : [(0, 131072), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, 131072), (17, -1), (18, -1), (19, 32768), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, 524288), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, 524288), (38, -1), (39, -1), (40, 32768), (41, 0), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, 131072), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, 131072), (17, -1), (18, -1), (19, 32768), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, 524288), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, 524288), (38, -1), (39, -1), (40, 32768), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 14 : set()

After reduction : 
 pending  : [40, 25, 37, 0, 16, 19]
 solution : [6, 1, 28, 8, 22]


Solution : [6, 1, 28, 8, 22] has cost 26.


Before backtrack at level 14
 pending : [40, 25, 37, 0, 16, 19]
 solution : [6, 1, 28, 8, 22]

After backtrack at level 14
 pending : [40, 25, 37, 0, 16, 19, 22, 41]
 solution : [6, 1, 28, 8]


Before backtrack at level 13
 pending : [40, 25, 37, 0, 16, 19, 22, 41]
 solution : [6, 1, 28, 8]

After backtrack at level 13
 pending : [40, 25, 37, 0, 16, 19, 22, 41, 20]
 solution : [6, 1, 28, 8]


Before backtrack at level 12
 pending : [40, 25, 37, 0, 16, 19, 22, 41, 20]
 solution : [6, 1, 28, 8]

After backtrack at level 12
 pending : [40, 25, 37, 0, 16, 19, 22, 41, 20, 15]
 solution : [6, 1, 28, 8]


Before backtrack at level 11
 pending : [40, 25, 37, 0, 16, 19, 22, 41, 20, 15]
 solution : [6, 1, 28, 8]

After backtrack at level 11
 pending : [40, 25, 37, 0, 16, 19, 22, 41, 20, 15, 21]
 solution : [6, 1, 28, 8]


Before backtrack at level 10
 pending : [40, 25, 37, 0, 16, 19, 22, 41, 20, 15, 21]
 solution : [6, 1, 28, 8]

After backtrack at level 10
 pending : [40, 25, 37, 0, 16, 19, 22, 41, 20, 15, 21, 9, 29, 32, 38, 39, 42, 43, 47, 48, 49, 30, 33, 23, 14]
 solution : [6, 1, 28, 8]


Invert decision for 8 at level 9


New level: 10
 pending : [40, 25, 37, 0, 16, 19, 22, 41, 20, 15, 21, 9, 29, 32, 38, 39, 42, 43, 47, 48, 49, 30, 33, 23, 14]
 solution : [6, 1, 28]


Before reduction : 
 pending  : [40, 25, 37, 0, 16, 19, 22, 41, 20, 15, 21, 9, 29, 32, 38, 39, 42, 43, 47, 48, 49, 30, 33, 23, 14]
 solution : [6, 1, 28]

Essensial at level 10 : {23}

Before removed
 coverage : [(0, 131072), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, 131072), (17, -1), (18, -1), (19, 32768), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, 524288), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, 524288), (38, -1), (39, -1), (40, 32768), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, 131072), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, 0), (10, -1), (11, -1), (12, -1), (13, -1), (14, 8388608), (15, 4194304), (16, 131072), (17, -1), (18, -1), (19, 65536), (20, 2097152), (21, 4194304), (22, 65536), (23, -1), (24, -1), (25, 524288), (26, -1), (27, -1), (28, -1), (29, 0), (30, 0), (31, -1), (32, 0), (33, 0), (34, -1), (35, -1), (36, -1), (37, 524288), (38, 0), (39, 0), (40, 65536), (41, 512), (42, 0), (43, 0), (44, -1), (45, -1), (46, -1), (47, 0), (48, 0), (49, 0), (50, -1), (51, -1), (52, -1)]

Covered at level 10 : {32, 33, 38, 39, 9, 42, 43, 47, 48, 49, 29, 30}

After reduction : 
 pending  : [40, 25, 37, 0, 16, 19, 22, 41, 20, 15, 21, 14]
 solution : [6, 1, 28, 23]


Before reduction : 
 pending  : [40, 25, 37, 0, 16, 19, 22, 41, 20, 15, 21, 14]
 solution : [6, 1, 28, 23]

Essensial at level 10 : set()

Before removed
 coverage : [(0, 131072), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, 0), (10, -1), (11, -1), (12, -1), (13, -1), (14, 8388608), (15, 4194304), (16, 131072), (17, -1), (18, -1), (19, 65536), (20, 2097152), (21, 4194304), (22, 65536), (23, -1), (24, -1), (25, 524288), (26, -1), (27, -1), (28, -1), (29, 0), (30, 0), (31, -1), (32, 0), (33, 0), (34, -1), (35, -1), (36, -1), (37, 524288), (38, 0), (39, 0), (40, 65536), (41, 512), (42, 0), (43, 0), (44, -1), (45, -1), (46, -1), (47, 0), (48, 0), (49, 0), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, 131072), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 8388608), (15, 4194304), (16, 131072), (17, -1), (18, -1), (19, 65536), (20, 2097152), (21, 4194304), (22, 65536), (23, -1), (24, -1), (25, 524288), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, 524288), (38, -1), (39, -1), (40, 32768), (41, 512), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 10 : set()

After reduction : 
 pending  : [40, 25, 37, 0, 16, 19, 22, 41, 20, 15, 21, 14]
 solution : [6, 1, 28, 23]


Solution : [6, 1, 28, 23] has cost 22.


Decide in level 10 among pending : [40, 25, 37, 0, 16, 19, 22, 41, 20, 15, 21, 14]

Coverage : [(0, 131072), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 8388608), (15, 4194304), (16, 131072), (17, -1), (18, -1), (19, 65536), (20, 2097152), (21, 4194304), (22, 65536), (23, -1), (24, -1), (25, 524288), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, 524288), (38, -1), (39, -1), (40, 32768), (41, 512), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Decide 14 with phase True at level 10

After decision at level 10
 pending : [40, 25, 37, 0, 16, 19, 22, 41, 20, 15, 21]
 solution : [6, 1, 28, 23, 14]


New level: 11
 pending : [40, 25, 37, 0, 16, 19, 22, 41, 20, 15, 21]
 solution : [6, 1, 28, 23, 14]


Before reduction : 
 pending  : [40, 25, 37, 0, 16, 19, 22, 41, 20, 15, 21]
 solution : [6, 1, 28, 23, 14]

Essensial at level 11 : set()

Before removed
 coverage : [(0, 131072), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 8388608), (15, 4194304), (16, 131072), (17, -1), (18, -1), (19, 65536), (20, 2097152), (21, 4194304), (22, 65536), (23, -1), (24, -1), (25, 524288), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, 524288), (38, -1), (39, -1), (40, 32768), (41, 512), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, 0), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, 0), (16, 0), (17, -1), (18, -1), (19, 0), (20, 16384), (21, 65536), (22, 16384), (23, -1), (24, -1), (25, 2048), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, 2048), (38, -1), (39, -1), (40, 1024), (41, 512), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 11 : {0, 16, 19, 15}

After reduction : 
 pending  : [40, 25, 37, 22, 41, 20, 21]
 solution : [6, 1, 28, 23, 14]


Before reduction : 
 pending  : [40, 25, 37, 22, 41, 20, 21]
 solution : [6, 1, 28, 23, 14]

Essensial at level 11 : set()

Before removed
 coverage : [(0, 0), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, 0), (16, 0), (17, -1), (18, -1), (19, 0), (20, 16384), (21, 65536), (22, 16384), (23, -1), (24, -1), (25, 2048), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, 2048), (38, -1), (39, -1), (40, 1024), (41, 512), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, 16384), (21, 65536), (22, 16384), (23, -1), (24, -1), (25, 2048), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, 2048), (38, -1), (39, -1), (40, 1024), (41, 512), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 11 : set()

After reduction : 
 pending  : [40, 25, 37, 22, 41, 20, 21]
 solution : [6, 1, 28, 23, 14]


Solution : [6, 1, 28, 23, 14] has cost 31.


Before backtrack at level 11
 pending : [40, 25, 37, 22, 41, 20, 21]
 solution : [6, 1, 28, 23, 14]

After backtrack at level 11
 pending : [40, 25, 37, 22, 41, 20, 21, 0, 16, 19, 15]
 solution : [6, 1, 28, 23, 14]


Invert decision for 14 at level 10


New level: 11
 pending : [40, 25, 37, 22, 41, 20, 21, 0, 16, 19, 15]
 solution : [6, 1, 28, 23]


Before reduction : 
 pending  : [40, 25, 37, 22, 41, 20, 21, 0, 16, 19, 15]
 solution : [6, 1, 28, 23]

Essensial at level 11 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, 16384), (21, 65536), (22, 16384), (23, -1), (24, -1), (25, 2048), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, 2048), (38, -1), (39, -1), (40, 1024), (41, 512), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, 131072), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, 4194304), (16, 131072), (17, -1), (18, -1), (19, 65536), (20, 2097152), (21, 4194304), (22, 65536), (23, -1), (24, -1), (25, 524288), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, 524288), (38, -1), (39, -1), (40, 32768), (41, 512), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 11 : set()

After reduction : 
 pending  : [40, 25, 37, 22, 41, 20, 21, 0, 16, 19, 15]
 solution : [6, 1, 28, 23]


Solution : [6, 1, 28, 23] has cost 22.


Decide in level 11 among pending : [40, 25, 37, 22, 41, 20, 21, 0, 16, 19, 15]

Coverage : [(0, 131072), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, 4194304), (16, 131072), (17, -1), (18, -1), (19, 65536), (20, 2097152), (21, 4194304), (22, 65536), (23, -1), (24, -1), (25, 524288), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, 524288), (38, -1), (39, -1), (40, 32768), (41, 512), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Decide 21 with phase True at level 11

After decision at level 11
 pending : [40, 25, 37, 22, 41, 20, 0, 16, 19, 15]
 solution : [6, 1, 28, 23, 21]


New level: 12
 pending : [40, 25, 37, 22, 41, 20, 0, 16, 19, 15]
 solution : [6, 1, 28, 23, 21]


Before reduction : 
 pending  : [40, 25, 37, 22, 41, 20, 0, 16, 19, 15]
 solution : [6, 1, 28, 23, 21]

Essensial at level 12 : set()

Before removed
 coverage : [(0, 131072), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, 4194304), (16, 131072), (17, -1), (18, -1), (19, 65536), (20, 2097152), (21, 4194304), (22, 65536), (23, -1), (24, -1), (25, 524288), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, 524288), (38, -1), (39, -1), (40, 32768), (41, 512), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, 65536), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, 1048576), (16, 65536), (17, -1), (18, -1), (19, 0), (20, 0), (21, -1), (22, 0), (23, -1), (24, -1), (25, 131072), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, 131072), (38, -1), (39, -1), (40, 512), (41, 0), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 12 : {41, 19, 20, 22}

After reduction : 
 pending  : [40, 25, 37, 0, 16, 15]
 solution : [6, 1, 28, 23, 21]


Before reduction : 
 pending  : [40, 25, 37, 0, 16, 15]
 solution : [6, 1, 28, 23, 21]

Essensial at level 12 : set()

Before removed
 coverage : [(0, 65536), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, 1048576), (16, 65536), (17, -1), (18, -1), (19, 0), (20, 0), (21, -1), (22, 0), (23, -1), (24, -1), (25, 131072), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, 131072), (38, -1), (39, -1), (40, 512), (41, 0), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, 65536), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, 1048576), (16, 65536), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, 131072), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, 131072), (38, -1), (39, -1), (40, 512), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 12 : set()

After reduction : 
 pending  : [40, 25, 37, 0, 16, 15]
 solution : [6, 1, 28, 23, 21]


Solution : [6, 1, 28, 23, 21] has cost 29.


Before backtrack at level 12
 pending : [40, 25, 37, 0, 16, 15]
 solution : [6, 1, 28, 23, 21]

After backtrack at level 12
 pending : [40, 25, 37, 0, 16, 15, 22, 41, 20, 19]
 solution : [6, 1, 28, 23, 21]


Invert decision for 21 at level 11


New level: 12
 pending : [40, 25, 37, 0, 16, 15, 22, 41, 20, 19]
 solution : [6, 1, 28, 23]


Before reduction : 
 pending  : [40, 25, 37, 0, 16, 15, 22, 41, 20, 19]
 solution : [6, 1, 28, 23]

Essensial at level 12 : set()

Before removed
 coverage : [(0, 65536), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, 1048576), (16, 65536), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, 131072), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, 131072), (38, -1), (39, -1), (40, 512), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, 131072), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, 4194304), (16, 131072), (17, -1), (18, -1), (19, 65536), (20, 2097152), (21, -1), (22, 65536), (23, -1), (24, -1), (25, 524288), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, 524288), (38, -1), (39, -1), (40, 32768), (41, 512), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 12 : set()

After reduction : 
 pending  : [40, 25, 37, 0, 16, 15, 22, 41, 20, 19]
 solution : [6, 1, 28, 23]


Solution : [6, 1, 28, 23] has cost 22.


Decide in level 12 among pending : [40, 25, 37, 0, 16, 15, 22, 41, 20, 19]

Coverage : [(0, 131072), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, 4194304), (16, 131072), (17, -1), (18, -1), (19, 65536), (20, 2097152), (21, -1), (22, 65536), (23, -1), (24, -1), (25, 524288), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, 524288), (38, -1), (39, -1), (40, 32768), (41, 512), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Decide 15 with phase True at level 12

After decision at level 12
 pending : [40, 25, 37, 0, 16, 22, 41, 20, 19]
 solution : [6, 1, 28, 23, 15]


New level: 13
 pending : [40, 25, 37, 0, 16, 22, 41, 20, 19]
 solution : [6, 1, 28, 23, 15]


Before reduction : 
 pending  : [40, 25, 37, 0, 16, 22, 41, 20, 19]
 solution : [6, 1, 28, 23, 15]

Essensial at level 13 : set()

Before removed
 coverage : [(0, 131072), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, 4194304), (16, 131072), (17, -1), (18, -1), (19, 65536), (20, 2097152), (21, -1), (22, 65536), (23, -1), (24, -1), (25, 524288), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, 524288), (38, -1), (39, -1), (40, 32768), (41, 512), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, 0), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, 0), (17, -1), (18, -1), (19, 0), (20, 16384), (21, -1), (22, 16384), (23, -1), (24, -1), (25, 2048), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, 2048), (38, -1), (39, -1), (40, 1024), (41, 512), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 13 : {0, 16, 19}

After reduction : 
 pending  : [40, 25, 37, 22, 41, 20]
 solution : [6, 1, 28, 23, 15]


Before reduction : 
 pending  : [40, 25, 37, 22, 41, 20]
 solution : [6, 1, 28, 23, 15]

Essensial at level 13 : set()

Before removed
 coverage : [(0, 0), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, 0), (17, -1), (18, -1), (19, 0), (20, 16384), (21, -1), (22, 16384), (23, -1), (24, -1), (25, 2048), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, 2048), (38, -1), (39, -1), (40, 1024), (41, 512), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, 16384), (21, -1), (22, 16384), (23, -1), (24, -1), (25, 2048), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, 2048), (38, -1), (39, -1), (40, 1024), (41, 512), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 13 : set()

After reduction : 
 pending  : [40, 25, 37, 22, 41, 20]
 solution : [6, 1, 28, 23, 15]


Solution : [6, 1, 28, 23, 15] has cost 31.


Before backtrack at level 13
 pending : [40, 25, 37, 22, 41, 20]
 solution : [6, 1, 28, 23, 15]

After backtrack at level 13
 pending : [40, 25, 37, 22, 41, 20, 0, 16, 19]
 solution : [6, 1, 28, 23, 15]


Invert decision for 15 at level 12


New level: 13
 pending : [40, 25, 37, 22, 41, 20, 0, 16, 19]
 solution : [6, 1, 28, 23]


Before reduction : 
 pending  : [40, 25, 37, 22, 41, 20, 0, 16, 19]
 solution : [6, 1, 28, 23]

Essensial at level 13 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, 16384), (21, -1), (22, 16384), (23, -1), (24, -1), (25, 2048), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, 2048), (38, -1), (39, -1), (40, 1024), (41, 512), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, 131072), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, 131072), (17, -1), (18, -1), (19, 65536), (20, 2097152), (21, -1), (22, 65536), (23, -1), (24, -1), (25, 524288), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, 524288), (38, -1), (39, -1), (40, 32768), (41, 512), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 13 : set()

After reduction : 
 pending  : [40, 25, 37, 22, 41, 20, 0, 16, 19]
 solution : [6, 1, 28, 23]


Solution : [6, 1, 28, 23] has cost 22.


Decide in level 13 among pending : [40, 25, 37, 22, 41, 20, 0, 16, 19]

Coverage : [(0, 131072), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, 131072), (17, -1), (18, -1), (19, 65536), (20, 2097152), (21, -1), (22, 65536), (23, -1), (24, -1), (25, 524288), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, 524288), (38, -1), (39, -1), (40, 32768), (41, 512), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Decide 20 with phase True at level 13

After decision at level 13
 pending : [40, 25, 37, 22, 41, 0, 16, 19]
 solution : [6, 1, 28, 23, 20]


New level: 14
 pending : [40, 25, 37, 22, 41, 0, 16, 19]
 solution : [6, 1, 28, 23, 20]


Before reduction : 
 pending  : [40, 25, 37, 22, 41, 0, 16, 19]
 solution : [6, 1, 28, 23, 20]

Essensial at level 14 : set()

Before removed
 coverage : [(0, 131072), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, 131072), (17, -1), (18, -1), (19, 65536), (20, 2097152), (21, -1), (22, 65536), (23, -1), (24, -1), (25, 524288), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, 524288), (38, -1), (39, -1), (40, 32768), (41, 512), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, 65536), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, 65536), (17, -1), (18, -1), (19, 0), (20, -1), (21, -1), (22, 0), (23, -1), (24, -1), (25, 131072), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, 131072), (38, -1), (39, -1), (40, 512), (41, 0), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 14 : {41, 19, 22}

After reduction : 
 pending  : [40, 25, 37, 0, 16]
 solution : [6, 1, 28, 23, 20]


Before reduction : 
 pending  : [40, 25, 37, 0, 16]
 solution : [6, 1, 28, 23, 20]

Essensial at level 14 : set()

Before removed
 coverage : [(0, 65536), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, 65536), (17, -1), (18, -1), (19, 0), (20, -1), (21, -1), (22, 0), (23, -1), (24, -1), (25, 131072), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, 131072), (38, -1), (39, -1), (40, 512), (41, 0), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, 65536), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, 65536), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, 131072), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, 131072), (38, -1), (39, -1), (40, 512), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 14 : set()

After reduction : 
 pending  : [40, 25, 37, 0, 16]
 solution : [6, 1, 28, 23, 20]


Solution : [6, 1, 28, 23, 20] has cost 29.


Before backtrack at level 14
 pending : [40, 25, 37, 0, 16]
 solution : [6, 1, 28, 23, 20]

After backtrack at level 14
 pending : [40, 25, 37, 0, 16, 22, 41, 19]
 solution : [6, 1, 28, 23, 20]


Invert decision for 20 at level 13


New level: 14
 pending : [40, 25, 37, 0, 16, 22, 41, 19]
 solution : [6, 1, 28, 23]


Before reduction : 
 pending  : [40, 25, 37, 0, 16, 22, 41, 19]
 solution : [6, 1, 28, 23]

Essensial at level 14 : {22}

Before removed
 coverage : [(0, 65536), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, 65536), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, 131072), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, 131072), (38, -1), (39, -1), (40, 512), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, 131072), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, 131072), (17, -1), (18, -1), (19, 32768), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, 524288), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, 524288), (38, -1), (39, -1), (40, 32768), (41, 0), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 14 : {41}

After reduction : 
 pending  : [40, 25, 37, 0, 16, 19]
 solution : [6, 1, 28, 23, 22]


Before reduction : 
 pending  : [40, 25, 37, 0, 16, 19]
 solution : [6, 1, 28, 23, 22]

Essensial at level 14 : set()

Before removed
 coverage : [(0, 131072), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, 131072), (17, -1), (18, -1), (19, 32768), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, 524288), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, 524288), (38, -1), (39, -1), (40, 32768), (41, 0), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, 131072), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, 131072), (17, -1), (18, -1), (19, 32768), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, 524288), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, 524288), (38, -1), (39, -1), (40, 32768), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 14 : set()

After reduction : 
 pending  : [40, 25, 37, 0, 16, 19]
 solution : [6, 1, 28, 23, 22]


Solution : [6, 1, 28, 23, 22] has cost 29.


Before backtrack at level 14
 pending : [40, 25, 37, 0, 16, 19]
 solution : [6, 1, 28, 23, 22]

After backtrack at level 14
 pending : [40, 25, 37, 0, 16, 19, 22, 41]
 solution : [6, 1, 28, 23]


Before backtrack at level 13
 pending : [40, 25, 37, 0, 16, 19, 22, 41]
 solution : [6, 1, 28, 23]

After backtrack at level 13
 pending : [40, 25, 37, 0, 16, 19, 22, 41, 20]
 solution : [6, 1, 28, 23]


Before backtrack at level 12
 pending : [40, 25, 37, 0, 16, 19, 22, 41, 20]
 solution : [6, 1, 28, 23]

After backtrack at level 12
 pending : [40, 25, 37, 0, 16, 19, 22, 41, 20, 15]
 solution : [6, 1, 28, 23]


Before backtrack at level 11
 pending : [40, 25, 37, 0, 16, 19, 22, 41, 20, 15]
 solution : [6, 1, 28, 23]

After backtrack at level 11
 pending : [40, 25, 37, 0, 16, 19, 22, 41, 20, 15, 21]
 solution : [6, 1, 28, 23]


Before backtrack at level 10
 pending : [40, 25, 37, 0, 16, 19, 22, 41, 20, 15, 21]
 solution : [6, 1, 28, 23]

After backtrack at level 10
 pending : [40, 25, 37, 0, 16, 19, 22, 41, 20, 15, 21, 23, 9, 29, 32, 38, 39, 42, 43, 47, 48, 49, 30, 33, 14]
 solution : [6, 1, 28]


Before backtrack at level 9
 pending : [40, 25, 37, 0, 16, 19, 22, 41, 20, 15, 21, 23, 9, 29, 32, 38, 39, 42, 43, 47, 48, 49, 30, 33, 14]
 solution : [6, 1, 28]

After backtrack at level 9
 pending : [40, 25, 37, 0, 16, 19, 22, 41, 20, 15, 21, 23, 9, 29, 32, 38, 39, 42, 43, 47, 48, 49, 30, 33, 14, 8]
 solution : [6, 1, 28]


Before backtrack at level 8
 pending : [40, 25, 37, 0, 16, 19, 22, 41, 20, 15, 21, 23, 9, 29, 32, 38, 39, 42, 43, 47, 48, 49, 30, 33, 14, 8]
 solution : [6, 1, 28]

After backtrack at level 8
 pending : [40, 25, 37, 0, 16, 19, 22, 41, 20, 15, 21, 23, 9, 29, 32, 38, 39, 42, 43, 47, 48, 49, 30, 33, 14, 8, 18]
 solution : [6, 1, 28]


Before backtrack at level 7
 pending : [40, 25, 37, 0, 16, 19, 22, 41, 20, 15, 21, 23, 9, 29, 32, 38, 39, 42, 43, 47, 48, 49, 30, 33, 14, 8, 18]
 solution : [6, 1, 28]

After backtrack at level 7
 pending : [40, 25, 37, 0, 16, 19, 22, 41, 20, 15, 21, 23, 9, 29, 32, 38, 39, 42, 43, 47, 48, 49, 30, 33, 14, 8, 18, 24]
 solution : [6, 1, 28]


Before backtrack at level 6
 pending : [40, 25, 37, 0, 16, 19, 22, 41, 20, 15, 21, 23, 9, 29, 32, 38, 39, 42, 43, 47, 48, 49, 30, 33, 14, 8, 18, 24]
 solution : [6, 1, 28]

After backtrack at level 6
 pending : [40, 25, 37, 0, 16, 19, 22, 41, 20, 15, 21, 23, 9, 29, 32, 38, 39, 42, 43, 47, 48, 49, 30, 33, 14, 8, 18, 24, 17]
 solution : [6, 1, 28]


Before backtrack at level 5
 pending : [40, 25, 37, 0, 16, 19, 22, 41, 20, 15, 21, 23, 9, 29, 32, 38, 39, 42, 43, 47, 48, 49, 30, 33, 14, 8, 18, 24, 17]
 solution : [6, 1, 28]

After backtrack at level 5
 pending : [40, 25, 37, 0, 16, 19, 22, 41, 20, 15, 21, 23, 9, 29, 32, 38, 39, 42, 43, 47, 48, 49, 30, 33, 14, 8, 18, 24, 17, 26]
 solution : [6, 1, 28]


Before backtrack at level 4
 pending : [40, 25, 37, 0, 16, 19, 22, 41, 20, 15, 21, 23, 9, 29, 32, 38, 39, 42, 43, 47, 48, 49, 30, 33, 14, 8, 18, 24, 17, 26]
 solution : [6, 1, 28]

After backtrack at level 4
 pending : [40, 25, 37, 0, 16, 19, 22, 41, 20, 15, 21, 23, 9, 29, 32, 38, 39, 42, 43, 47, 48, 49, 30, 33, 14, 8, 18, 24, 17, 26, 35]
 solution : [6, 1, 28]


Invert decision for 28 at level 3


New level: 4
 pending : [40, 25, 37, 0, 16, 19, 22, 41, 20, 15, 21, 23, 9, 29, 32, 38, 39, 42, 43, 47, 48, 49, 30, 33, 14, 8, 18, 24, 17, 26, 35]
 solution : [6, 1]


Before reduction : 
 pending  : [40, 25, 37, 0, 16, 19, 22, 41, 20, 15, 21, 23, 9, 29, 32, 38, 39, 42, 43, 47, 48, 49, 30, 33, 14, 8, 18, 24, 17, 26, 35]
 solution : [6, 1]

Essensial at level 4 : set()

Before removed
 coverage : [(0, 131072), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, 131072), (17, -1), (18, -1), (19, 32768), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, 524288), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, 524288), (38, -1), (39, -1), (40, 32768), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, 262144), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, 134217728), (9, 1048576), (10, -1), (11, -1), (12, -1), (13, -1), (14, 16777216), (15, 8388608), (16, 393216), (17, 536870912), (18, 268435456), (19, 131072), (20, 2097152), (21, 4194304), (22, 65536), (23, 134217728), (24, 1073741824), (25, 1048576), (26, 1073741824), (27, -1), (28, -1), (29, 16384), (30, 32768), (31, -1), (32, 1048576), (33, 4194304), (34, -1), (35, 2147483648), (36, -1), (37, 1048576), (38, 134217728), (39, 16384), (40, 67108864), (41, 268435456), (42, 524288), (43, 524288), (44, -1), (45, -1), (46, -1), (47, 67108864), (48, 16777216), (49, 67108864), (50, -1), (51, -1), (52, -1)]

Covered at level 4 : set()

After reduction : 
 pending  : [40, 25, 37, 0, 16, 19, 22, 41, 20, 15, 21, 23, 9, 29, 32, 38, 39, 42, 43, 47, 48, 49, 30, 33, 14, 8, 18, 24, 17, 26, 35]
 solution : [6, 1]


Solution : [6, 1] has cost 11.


Decide in level 4 among pending : [40, 25, 37, 0, 16, 19, 22, 41, 20, 15, 21, 23, 9, 29, 32, 38, 39, 42, 43, 47, 48, 49, 30, 33, 14, 8, 18, 24, 17, 26, 35]

Coverage : [(0, 262144), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, 134217728), (9, 1048576), (10, -1), (11, -1), (12, -1), (13, -1), (14, 16777216), (15, 8388608), (16, 393216), (17, 536870912), (18, 268435456), (19, 131072), (20, 2097152), (21, 4194304), (22, 65536), (23, 134217728), (24, 1073741824), (25, 1048576), (26, 1073741824), (27, -1), (28, -1), (29, 16384), (30, 32768), (31, -1), (32, 1048576), (33, 4194304), (34, -1), (35, 2147483648), (36, -1), (37, 1048576), (38, 134217728), (39, 16384), (40, 67108864), (41, 268435456), (42, 524288), (43, 524288), (44, -1), (45, -1), (46, -1), (47, 67108864), (48, 16777216), (49, 67108864), (50, -1), (51, -1), (52, -1)]

Decide 35 with phase True at level 4

After decision at level 4
 pending : [40, 25, 37, 0, 16, 19, 22, 41, 20, 15, 21, 23, 9, 29, 32, 38, 39, 42, 43, 47, 48, 49, 30, 33, 14, 8, 18, 24, 17, 26]
 solution : [6, 1, 35]


New level: 5
 pending : [40, 25, 37, 0, 16, 19, 22, 41, 20, 15, 21, 23, 9, 29, 32, 38, 39, 42, 43, 47, 48, 49, 30, 33, 14, 8, 18, 24, 17, 26]
 solution : [6, 1, 35]


Before reduction : 
 pending  : [40, 25, 37, 0, 16, 19, 22, 41, 20, 15, 21, 23, 9, 29, 32, 38, 39, 42, 43, 47, 48, 49, 30, 33, 14, 8, 18, 24, 17, 26]
 solution : [6, 1, 35]

Essensial at level 5 : set()

Before removed
 coverage : [(0, 262144), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, 134217728), (9, 1048576), (10, -1), (11, -1), (12, -1), (13, -1), (14, 16777216), (15, 8388608), (16, 393216), (17, 536870912), (18, 268435456), (19, 131072), (20, 2097152), (21, 4194304), (22, 65536), (23, 134217728), (24, 1073741824), (25, 1048576), (26, 1073741824), (27, -1), (28, -1), (29, 16384), (30, 32768), (31, -1), (32, 1048576), (33, 4194304), (34, -1), (35, 2147483648), (36, -1), (37, 1048576), (38, 134217728), (39, 16384), (40, 67108864), (41, 268435456), (42, 524288), (43, 524288), (44, -1), (45, -1), (46, -1), (47, 67108864), (48, 16777216), (49, 67108864), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, 262144), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, 134217728), (9, 262144), (10, -1), (11, -1), (12, -1), (13, -1), (14, 16777216), (15, 8388608), (16, 393216), (17, 536870912), (18, 268435456), (19, 131072), (20, 2097152), (21, 4194304), (22, 65536), (23, 134217728), (24, 32768), (25, 1048576), (26, 1073741824), (27, -1), (28, -1), (29, 4096), (30, 0), (31, -1), (32, 262144), (33, 0), (34, -1), (35, -1), (36, -1), (37, 1048576), (38, 33554432), (39, 4096), (40, 67108864), (41, 8192), (42, 131072), (43, 131072), (44, -1), (45, -1), (46, -1), (47, 16777216), (48, 4194304), (49, 16777216), (50, -1), (51, -1), (52, -1)]

Covered at level 5 : {33, 30}

After reduction : 
 pending  : [40, 25, 37, 0, 16, 19, 22, 41, 20, 15, 21, 23, 9, 29, 32, 38, 39, 42, 43, 47, 48, 49, 14, 8, 18, 24, 17, 26]
 solution : [6, 1, 35]


Before reduction : 
 pending  : [40, 25, 37, 0, 16, 19, 22, 41, 20, 15, 21, 23, 9, 29, 32, 38, 39, 42, 43, 47, 48, 49, 14, 8, 18, 24, 17, 26]
 solution : [6, 1, 35]

Essensial at level 5 : set()

Before removed
 coverage : [(0, 262144), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, 134217728), (9, 262144), (10, -1), (11, -1), (12, -1), (13, -1), (14, 16777216), (15, 8388608), (16, 393216), (17, 536870912), (18, 268435456), (19, 131072), (20, 2097152), (21, 4194304), (22, 65536), (23, 134217728), (24, 32768), (25, 1048576), (26, 1073741824), (27, -1), (28, -1), (29, 4096), (30, 0), (31, -1), (32, 262144), (33, 0), (34, -1), (35, -1), (36, -1), (37, 1048576), (38, 33554432), (39, 4096), (40, 67108864), (41, 8192), (42, 131072), (43, 131072), (44, -1), (45, -1), (46, -1), (47, 16777216), (48, 4194304), (49, 16777216), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, 262144), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, 134217728), (9, 262144), (10, -1), (11, -1), (12, -1), (13, -1), (14, 16777216), (15, 8388608), (16, 393216), (17, 536870912), (18, 268435456), (19, 131072), (20, 2097152), (21, 4194304), (22, 65536), (23, 134217728), (24, 32768), (25, 1048576), (26, 1073741824), (27, -1), (28, -1), (29, 4096), (30, -1), (31, -1), (32, 262144), (33, -1), (34, -1), (35, -1), (36, -1), (37, 1048576), (38, 33554432), (39, 4096), (40, 67108864), (41, 8192), (42, 131072), (43, 131072), (44, -1), (45, -1), (46, -1), (47, 16777216), (48, 4194304), (49, 16777216), (50, -1), (51, -1), (52, -1)]

Covered at level 5 : set()

After reduction : 
 pending  : [40, 25, 37, 0, 16, 19, 22, 41, 20, 15, 21, 23, 9, 29, 32, 38, 39, 42, 43, 47, 48, 49, 14, 8, 18, 24, 17, 26]
 solution : [6, 1, 35]


Solution : [6, 1, 35] has cost 24.


Before backtrack at level 5
 pending : [40, 25, 37, 0, 16, 19, 22, 41, 20, 15, 21, 23, 9, 29, 32, 38, 39, 42, 43, 47, 48, 49, 14, 8, 18, 24, 17, 26]
 solution : [6, 1, 35]

After backtrack at level 5
 pending : [40, 25, 37, 0, 16, 19, 22, 41, 20, 15, 21, 23, 9, 29, 32, 38, 39, 42, 43, 47, 48, 49, 14, 8, 18, 24, 17, 26, 30, 33]
 solution : [6, 1, 35]


Invert decision for 35 at level 4


New level: 5
 pending : [40, 25, 37, 0, 16, 19, 22, 41, 20, 15, 21, 23, 9, 29, 32, 38, 39, 42, 43, 47, 48, 49, 14, 8, 18, 24, 17, 26, 30, 33]
 solution : [6, 1]


Before reduction : 
 pending  : [40, 25, 37, 0, 16, 19, 22, 41, 20, 15, 21, 23, 9, 29, 32, 38, 39, 42, 43, 47, 48, 49, 14, 8, 18, 24, 17, 26, 30, 33]
 solution : [6, 1]

Essensial at level 5 : set()

Before removed
 coverage : [(0, 262144), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, 134217728), (9, 262144), (10, -1), (11, -1), (12, -1), (13, -1), (14, 16777216), (15, 8388608), (16, 393216), (17, 536870912), (18, 268435456), (19, 131072), (20, 2097152), (21, 4194304), (22, 65536), (23, 134217728), (24, 32768), (25, 1048576), (26, 1073741824), (27, -1), (28, -1), (29, 4096), (30, -1), (31, -1), (32, 262144), (33, -1), (34, -1), (35, -1), (36, -1), (37, 1048576), (38, 33554432), (39, 4096), (40, 67108864), (41, 8192), (42, 131072), (43, 131072), (44, -1), (45, -1), (46, -1), (47, 16777216), (48, 4194304), (49, 16777216), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, 262144), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, 134217728), (9, 1048576), (10, -1), (11, -1), (12, -1), (13, -1), (14, 16777216), (15, 8388608), (16, 393216), (17, 536870912), (18, 268435456), (19, 131072), (20, 2097152), (21, 4194304), (22, 65536), (23, 134217728), (24, 1073741824), (25, 1048576), (26, 1073741824), (27, -1), (28, -1), (29, 16384), (30, 32768), (31, -1), (32, 1048576), (33, 4194304), (34, -1), (35, -1), (36, -1), (37, 1048576), (38, 134217728), (39, 16384), (40, 67108864), (41, 268435456), (42, 524288), (43, 524288), (44, -1), (45, -1), (46, -1), (47, 67108864), (48, 16777216), (49, 67108864), (50, -1), (51, -1), (52, -1)]

Covered at level 5 : set()

After reduction : 
 pending  : [40, 25, 37, 0, 16, 19, 22, 41, 20, 15, 21, 23, 9, 29, 32, 38, 39, 42, 43, 47, 48, 49, 14, 8, 18, 24, 17, 26, 30, 33]
 solution : [6, 1]


Solution : [6, 1] has cost 11.


Decide in level 5 among pending : [40, 25, 37, 0, 16, 19, 22, 41, 20, 15, 21, 23, 9, 29, 32, 38, 39, 42, 43, 47, 48, 49, 14, 8, 18, 24, 17, 26, 30, 33]

Coverage : [(0, 262144), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, 134217728), (9, 1048576), (10, -1), (11, -1), (12, -1), (13, -1), (14, 16777216), (15, 8388608), (16, 393216), (17, 536870912), (18, 268435456), (19, 131072), (20, 2097152), (21, 4194304), (22, 65536), (23, 134217728), (24, 1073741824), (25, 1048576), (26, 1073741824), (27, -1), (28, -1), (29, 16384), (30, 32768), (31, -1), (32, 1048576), (33, 4194304), (34, -1), (35, -1), (36, -1), (37, 1048576), (38, 134217728), (39, 16384), (40, 67108864), (41, 268435456), (42, 524288), (43, 524288), (44, -1), (45, -1), (46, -1), (47, 67108864), (48, 16777216), (49, 67108864), (50, -1), (51, -1), (52, -1)]

Decide 24 with phase True at level 5

After decision at level 5
 pending : [40, 25, 37, 0, 16, 19, 22, 41, 20, 15, 21, 23, 9, 29, 32, 38, 39, 42, 43, 47, 48, 49, 14, 8, 18, 17, 26, 30, 33]
 solution : [6, 1, 24]


New level: 6
 pending : [40, 25, 37, 0, 16, 19, 22, 41, 20, 15, 21, 23, 9, 29, 32, 38, 39, 42, 43, 47, 48, 49, 14, 8, 18, 17, 26, 30, 33]
 solution : [6, 1, 24]


Before reduction : 
 pending  : [40, 25, 37, 0, 16, 19, 22, 41, 20, 15, 21, 23, 9, 29, 32, 38, 39, 42, 43, 47, 48, 49, 14, 8, 18, 17, 26, 30, 33]
 solution : [6, 1, 24]

Essensial at level 6 : set()

Before removed
 coverage : [(0, 262144), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, 134217728), (9, 1048576), (10, -1), (11, -1), (12, -1), (13, -1), (14, 16777216), (15, 8388608), (16, 393216), (17, 536870912), (18, 268435456), (19, 131072), (20, 2097152), (21, 4194304), (22, 65536), (23, 134217728), (24, 1073741824), (25, 1048576), (26, 1073741824), (27, -1), (28, -1), (29, 16384), (30, 32768), (31, -1), (32, 1048576), (33, 4194304), (34, -1), (35, -1), (36, -1), (37, 1048576), (38, 134217728), (39, 16384), (40, 67108864), (41, 268435456), (42, 524288), (43, 524288), (44, -1), (45, -1), (46, -1), (47, 67108864), (48, 16777216), (49, 67108864), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, 262144), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, 33554432), (9, 262144), (10, -1), (11, -1), (12, -1), (13, -1), (14, 16777216), (15, 8388608), (16, 393216), (17, 536870912), (18, 268435456), (19, 131072), (20, 2097152), (21, 4194304), (22, 65536), (23, 33554432), (24, -1), (25, 1048576), (26, 1073741824), (27, -1), (28, -1), (29, 4096), (30, 0), (31, -1), (32, 262144), (33, 0), (34, -1), (35, -1), (36, -1), (37, 1048576), (38, 33554432), (39, 4096), (40, 33554432), (41, 512), (42, 131072), (43, 131072), (44, -1), (45, -1), (46, -1), (47, 16777216), (48, 4194304), (49, 33554432), (50, -1), (51, -1), (52, -1)]

Covered at level 6 : {33, 30}

After reduction : 
 pending  : [40, 25, 37, 0, 16, 19, 22, 41, 20, 15, 21, 23, 9, 29, 32, 38, 39, 42, 43, 47, 48, 49, 14, 8, 18, 17, 26]
 solution : [6, 1, 24]


Before reduction : 
 pending  : [40, 25, 37, 0, 16, 19, 22, 41, 20, 15, 21, 23, 9, 29, 32, 38, 39, 42, 43, 47, 48, 49, 14, 8, 18, 17, 26]
 solution : [6, 1, 24]

Essensial at level 6 : set()

Before removed
 coverage : [(0, 262144), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, 33554432), (9, 262144), (10, -1), (11, -1), (12, -1), (13, -1), (14, 16777216), (15, 8388608), (16, 393216), (17, 536870912), (18, 268435456), (19, 131072), (20, 2097152), (21, 4194304), (22, 65536), (23, 33554432), (24, -1), (25, 1048576), (26, 1073741824), (27, -1), (28, -1), (29, 4096), (30, 0), (31, -1), (32, 262144), (33, 0), (34, -1), (35, -1), (36, -1), (37, 1048576), (38, 33554432), (39, 4096), (40, 33554432), (41, 512), (42, 131072), (43, 131072), (44, -1), (45, -1), (46, -1), (47, 16777216), (48, 4194304), (49, 33554432), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, 262144), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, 33554432), (9, 262144), (10, -1), (11, -1), (12, -1), (13, -1), (14, 16777216), (15, 8388608), (16, 393216), (17, 536870912), (18, 268435456), (19, 131072), (20, 2097152), (21, 4194304), (22, 65536), (23, 33554432), (24, -1), (25, 1048576), (26, 1073741824), (27, -1), (28, -1), (29, 4096), (30, -1), (31, -1), (32, 262144), (33, -1), (34, -1), (35, -1), (36, -1), (37, 1048576), (38, 33554432), (39, 4096), (40, 33554432), (41, 512), (42, 131072), (43, 131072), (44, -1), (45, -1), (46, -1), (47, 16777216), (48, 4194304), (49, 33554432), (50, -1), (51, -1), (52, -1)]

Covered at level 6 : set()

After reduction : 
 pending  : [40, 25, 37, 0, 16, 19, 22, 41, 20, 15, 21, 23, 9, 29, 32, 38, 39, 42, 43, 47, 48, 49, 14, 8, 18, 17, 26]
 solution : [6, 1, 24]


Solution : [6, 1, 24] has cost 18.


Decide in level 6 among pending : [40, 25, 37, 0, 16, 19, 22, 41, 20, 15, 21, 23, 9, 29, 32, 38, 39, 42, 43, 47, 48, 49, 14, 8, 18, 17, 26]

Coverage : [(0, 262144), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, 33554432), (9, 262144), (10, -1), (11, -1), (12, -1), (13, -1), (14, 16777216), (15, 8388608), (16, 393216), (17, 536870912), (18, 268435456), (19, 131072), (20, 2097152), (21, 4194304), (22, 65536), (23, 33554432), (24, -1), (25, 1048576), (26, 1073741824), (27, -1), (28, -1), (29, 4096), (30, -1), (31, -1), (32, 262144), (33, -1), (34, -1), (35, -1), (36, -1), (37, 1048576), (38, 33554432), (39, 4096), (40, 33554432), (41, 512), (42, 131072), (43, 131072), (44, -1), (45, -1), (46, -1), (47, 16777216), (48, 4194304), (49, 33554432), (50, -1), (51, -1), (52, -1)]

Decide 26 with phase True at level 6

After decision at level 6
 pending : [40, 25, 37, 0, 16, 19, 22, 41, 20, 15, 21, 23, 9, 29, 32, 38, 39, 42, 43, 47, 48, 49, 14, 8, 18, 17]
 solution : [6, 1, 24, 26]


New level: 7
 pending : [40, 25, 37, 0, 16, 19, 22, 41, 20, 15, 21, 23, 9, 29, 32, 38, 39, 42, 43, 47, 48, 49, 14, 8, 18, 17]
 solution : [6, 1, 24, 26]


Before reduction : 
 pending  : [40, 25, 37, 0, 16, 19, 22, 41, 20, 15, 21, 23, 9, 29, 32, 38, 39, 42, 43, 47, 48, 49, 14, 8, 18, 17]
 solution : [6, 1, 24, 26]

Essensial at level 7 : set()

Before removed
 coverage : [(0, 262144), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, 33554432), (9, 262144), (10, -1), (11, -1), (12, -1), (13, -1), (14, 16777216), (15, 8388608), (16, 393216), (17, 536870912), (18, 268435456), (19, 131072), (20, 2097152), (21, 4194304), (22, 65536), (23, 33554432), (24, -1), (25, 1048576), (26, 1073741824), (27, -1), (28, -1), (29, 4096), (30, -1), (31, -1), (32, 262144), (33, -1), (34, -1), (35, -1), (36, -1), (37, 1048576), (38, 33554432), (39, 4096), (40, 33554432), (41, 512), (42, 131072), (43, 131072), (44, -1), (45, -1), (46, -1), (47, 16777216), (48, 4194304), (49, 33554432), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, 0), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, 33554432), (9, 65536), (10, -1), (11, -1), (12, -1), (13, -1), (14, 0), (15, 0), (16, 0), (17, 0), (18, 0), (19, 0), (20, 0), (21, 0), (22, 0), (23, 33554432), (24, -1), (25, 0), (26, -1), (27, -1), (28, -1), (29, 1024), (30, -1), (31, -1), (32, 131072), (33, -1), (34, -1), (35, -1), (36, -1), (37, 0), (38, 16777216), (39, 512), (40, 512), (41, 0), (42, 32768), (43, 32768), (44, -1), (45, -1), (46, -1), (47, 8388608), (48, 1048576), (49, 8388608), (50, -1), (51, -1), (52, -1)]

Covered at level 7 : {0, 37, 41, 14, 15, 16, 17, 18, 19, 20, 21, 22, 25}

After reduction : 
 pending  : [40, 23, 9, 29, 32, 38, 39, 42, 43, 47, 48, 49, 8]
 solution : [6, 1, 24, 26]


Before reduction : 
 pending  : [40, 23, 9, 29, 32, 38, 39, 42, 43, 47, 48, 49, 8]
 solution : [6, 1, 24, 26]

Essensial at level 7 : set()

Before removed
 coverage : [(0, 0), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, 33554432), (9, 65536), (10, -1), (11, -1), (12, -1), (13, -1), (14, 0), (15, 0), (16, 0), (17, 0), (18, 0), (19, 0), (20, 0), (21, 0), (22, 0), (23, 33554432), (24, -1), (25, 0), (26, -1), (27, -1), (28, -1), (29, 1024), (30, -1), (31, -1), (32, 131072), (33, -1), (34, -1), (35, -1), (36, -1), (37, 0), (38, 16777216), (39, 512), (40, 512), (41, 0), (42, 32768), (43, 32768), (44, -1), (45, -1), (46, -1), (47, 8388608), (48, 1048576), (49, 8388608), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, 33554432), (9, 65536), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, 33554432), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, 1024), (30, -1), (31, -1), (32, 131072), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, 16777216), (39, 512), (40, 512), (41, -1), (42, 32768), (43, 32768), (44, -1), (45, -1), (46, -1), (47, 8388608), (48, 1048576), (49, 8388608), (50, -1), (51, -1), (52, -1)]

Covered at level 7 : set()

After reduction : 
 pending  : [40, 23, 9, 29, 32, 38, 39, 42, 43, 47, 48, 49, 8]
 solution : [6, 1, 24, 26]


Solution : [6, 1, 24, 26] has cost 22.


Decide in level 7 among pending : [40, 23, 9, 29, 32, 38, 39, 42, 43, 47, 48, 49, 8]

Coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, 33554432), (9, 65536), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, 33554432), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, 1024), (30, -1), (31, -1), (32, 131072), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, 16777216), (39, 512), (40, 512), (41, -1), (42, 32768), (43, 32768), (44, -1), (45, -1), (46, -1), (47, 8388608), (48, 1048576), (49, 8388608), (50, -1), (51, -1), (52, -1)]

Decide 23 with phase True at level 7

After decision at level 7
 pending : [40, 9, 29, 32, 38, 39, 42, 43, 47, 48, 49, 8]
 solution : [6, 1, 24, 26, 23]


New level: 8
 pending : [40, 9, 29, 32, 38, 39, 42, 43, 47, 48, 49, 8]
 solution : [6, 1, 24, 26, 23]


Before reduction : 
 pending  : [40, 9, 29, 32, 38, 39, 42, 43, 47, 48, 49, 8]
 solution : [6, 1, 24, 26, 23]

Essensial at level 8 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, 33554432), (9, 65536), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, 33554432), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, 1024), (30, -1), (31, -1), (32, 131072), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, 16777216), (39, 512), (40, 512), (41, -1), (42, 32768), (43, 32768), (44, -1), (45, -1), (46, -1), (47, 8388608), (48, 1048576), (49, 8388608), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, 0), (9, 0), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, 0), (30, -1), (31, -1), (32, 0), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, 0), (39, 0), (40, 0), (41, -1), (42, 0), (43, 0), (44, -1), (45, -1), (46, -1), (47, 0), (48, 0), (49, 0), (50, -1), (51, -1), (52, -1)]

Covered at level 8 : {32, 38, 39, 40, 9, 42, 43, 8, 47, 48, 49, 29}

After reduction : 
 pending  : []
 solution : [6, 1, 24, 26, 23]


Before reduction : 
 pending  : []
 solution : [6, 1, 24, 26, 23]

Essensial at level 8 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, 0), (9, 0), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, 0), (30, -1), (31, -1), (32, 0), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, 0), (39, 0), (40, 0), (41, -1), (42, 0), (43, 0), (44, -1), (45, -1), (46, -1), (47, 0), (48, 0), (49, 0), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 8 : set()

After reduction : 
 pending  : []
 solution : [6, 1, 24, 26, 23]


Solution : [6, 1, 24, 26, 23] has cost 29.


Before backtrack at level 8
 pending : []
 solution : [6, 1, 24, 26, 23]

After backtrack at level 8
 pending : [40, 9, 29, 32, 38, 39, 42, 43, 47, 48, 49, 8]
 solution : [6, 1, 24, 26, 23]


Invert decision for 23 at level 7


New level: 8
 pending : [40, 9, 29, 32, 38, 39, 42, 43, 47, 48, 49, 8]
 solution : [6, 1, 24, 26]


Before reduction : 
 pending  : [40, 9, 29, 32, 38, 39, 42, 43, 47, 48, 49, 8]
 solution : [6, 1, 24, 26]

Essensial at level 8 : {8}

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, 0), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, 0), (30, -1), (31, -1), (32, 0), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, 0), (39, 0), (40, 0), (41, -1), (42, 0), (43, 0), (44, -1), (45, -1), (46, -1), (47, 0), (48, 0), (49, 0), (50, -1), (51, -1), (52, -1)]

Covered at level 8 : {32, 38, 39, 40, 9, 42, 43, 47, 48, 49, 29}

After reduction : 
 pending  : []
 solution : [6, 1, 24, 26, 8]


Before reduction : 
 pending  : []
 solution : [6, 1, 24, 26, 8]

Essensial at level 8 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, 0), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, 0), (30, -1), (31, -1), (32, 0), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, 0), (39, 0), (40, 0), (41, -1), (42, 0), (43, 0), (44, -1), (45, -1), (46, -1), (47, 0), (48, 0), (49, 0), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 8 : set()

After reduction : 
 pending  : []
 solution : [6, 1, 24, 26, 8]


Solution : [6, 1, 24, 26, 8] has cost 26.


Before backtrack at level 8
 pending : []
 solution : [6, 1, 24, 26, 8]

After backtrack at level 8
 pending : [8, 40, 9, 29, 32, 38, 39, 42, 43, 47, 48, 49]
 solution : [6, 1, 24, 26]


Before backtrack at level 7
 pending : [8, 40, 9, 29, 32, 38, 39, 42, 43, 47, 48, 49]
 solution : [6, 1, 24, 26]

After backtrack at level 7
 pending : [8, 40, 9, 29, 32, 38, 39, 42, 43, 47, 48, 49, 25, 37, 0, 16, 19, 22, 41, 20, 15, 21, 14, 18, 17, 23]
 solution : [6, 1, 24, 26]


Invert decision for 26 at level 6


New level: 7
 pending : [8, 40, 9, 29, 32, 38, 39, 42, 43, 47, 48, 49, 25, 37, 0, 16, 19, 22, 41, 20, 15, 21, 14, 18, 17, 23]
 solution : [6, 1, 24]


Before reduction : 
 pending  : [8, 40, 9, 29, 32, 38, 39, 42, 43, 47, 48, 49, 25, 37, 0, 16, 19, 22, 41, 20, 15, 21, 14, 18, 17, 23]
 solution : [6, 1, 24]

Essensial at level 7 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, 262144), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, 33554432), (9, 262144), (10, -1), (11, -1), (12, -1), (13, -1), (14, 16777216), (15, 8388608), (16, 393216), (17, 536870912), (18, 268435456), (19, 131072), (20, 2097152), (21, 4194304), (22, 65536), (23, 33554432), (24, -1), (25, 1048576), (26, -1), (27, -1), (28, -1), (29, 4096), (30, -1), (31, -1), (32, 262144), (33, -1), (34, -1), (35, -1), (36, -1), (37, 1048576), (38, 33554432), (39, 4096), (40, 33554432), (41, 512), (42, 131072), (43, 131072), (44, -1), (45, -1), (46, -1), (47, 16777216), (48, 4194304), (49, 33554432), (50, -1), (51, -1), (52, -1)]

Covered at level 7 : set()

After reduction : 
 pending  : [8, 40, 9, 29, 32, 38, 39, 42, 43, 47, 48, 49, 25, 37, 0, 16, 19, 22, 41, 20, 15, 21, 14, 18, 17, 23]
 solution : [6, 1, 24]


Solution : [6, 1, 24] has cost 18.


Decide in level 7 among pending : [8, 40, 9, 29, 32, 38, 39, 42, 43, 47, 48, 49, 25, 37, 0, 16, 19, 22, 41, 20, 15, 21, 14, 18, 17, 23]

Coverage : [(0, 262144), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, 33554432), (9, 262144), (10, -1), (11, -1), (12, -1), (13, -1), (14, 16777216), (15, 8388608), (16, 393216), (17, 536870912), (18, 268435456), (19, 131072), (20, 2097152), (21, 4194304), (22, 65536), (23, 33554432), (24, -1), (25, 1048576), (26, -1), (27, -1), (28, -1), (29, 4096), (30, -1), (31, -1), (32, 262144), (33, -1), (34, -1), (35, -1), (36, -1), (37, 1048576), (38, 33554432), (39, 4096), (40, 33554432), (41, 512), (42, 131072), (43, 131072), (44, -1), (45, -1), (46, -1), (47, 16777216), (48, 4194304), (49, 33554432), (50, -1), (51, -1), (52, -1)]

Decide 17 with phase True at level 7

After decision at level 7
 pending : [8, 40, 9, 29, 32, 38, 39, 42, 43, 47, 48, 49, 25, 37, 0, 16, 19, 22, 41, 20, 15, 21, 14, 18, 23]
 solution : [6, 1, 24, 17]


New level: 8
 pending : [8, 40, 9, 29, 32, 38, 39, 42, 43, 47, 48, 49, 25, 37, 0, 16, 19, 22, 41, 20, 15, 21, 14, 18, 23]
 solution : [6, 1, 24, 17]


Before reduction : 
 pending  : [8, 40, 9, 29, 32, 38, 39, 42, 43, 47, 48, 49, 25, 37, 0, 16, 19, 22, 41, 20, 15, 21, 14, 18, 23]
 solution : [6, 1, 24, 17]

Essensial at level 8 : set()

Before removed
 coverage : [(0, 262144), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, 33554432), (9, 262144), (10, -1), (11, -1), (12, -1), (13, -1), (14, 16777216), (15, 8388608), (16, 393216), (17, 536870912), (18, 268435456), (19, 131072), (20, 2097152), (21, 4194304), (22, 65536), (23, 33554432), (24, -1), (25, 1048576), (26, -1), (27, -1), (28, -1), (29, 4096), (30, -1), (31, -1), (32, 262144), (33, -1), (34, -1), (35, -1), (36, -1), (37, 1048576), (38, 33554432), (39, 4096), (40, 33554432), (41, 512), (42, 131072), (43, 131072), (44, -1), (45, -1), (46, -1), (47, 16777216), (48, 4194304), (49, 33554432), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, 0), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, 33554432), (9, 65536), (10, -1), (11, -1), (12, -1), (13, -1), (14, 0), (15, 0), (16, 0), (17, -1), (18, 0), (19, 0), (20, 0), (21, 0), (22, 0), (23, 33554432), (24, -1), (25, 0), (26, -1), (27, -1), (28, -1), (29, 1024), (30, -1), (31, -1), (32, 131072), (33, -1), (34, -1), (35, -1), (36, -1), (37, 0), (38, 16777216), (39, 512), (40, 512), (41, 0), (42, 32768), (43, 32768), (44, -1), (45, -1), (46, -1), (47, 8388608), (48, 1048576), (49, 33554432), (50, -1), (51, -1), (52, -1)]

Covered at level 8 : {0, 37, 41, 14, 15, 16, 18, 19, 20, 21, 22, 25}

After reduction : 
 pending  : [8, 40, 9, 29, 32, 38, 39, 42, 43, 47, 48, 49, 23]
 solution : [6, 1, 24, 17]


Before reduction : 
 pending  : [8, 40, 9, 29, 32, 38, 39, 42, 43, 47, 48, 49, 23]
 solution : [6, 1, 24, 17]

Essensial at level 8 : set()

Before removed
 coverage : [(0, 0), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, 33554432), (9, 65536), (10, -1), (11, -1), (12, -1), (13, -1), (14, 0), (15, 0), (16, 0), (17, -1), (18, 0), (19, 0), (20, 0), (21, 0), (22, 0), (23, 33554432), (24, -1), (25, 0), (26, -1), (27, -1), (28, -1), (29, 1024), (30, -1), (31, -1), (32, 131072), (33, -1), (34, -1), (35, -1), (36, -1), (37, 0), (38, 16777216), (39, 512), (40, 512), (41, 0), (42, 32768), (43, 32768), (44, -1), (45, -1), (46, -1), (47, 8388608), (48, 1048576), (49, 33554432), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, 33554432), (9, 65536), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, 33554432), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, 1024), (30, -1), (31, -1), (32, 131072), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, 16777216), (39, 512), (40, 512), (41, -1), (42, 32768), (43, 32768), (44, -1), (45, -1), (46, -1), (47, 8388608), (48, 1048576), (49, 33554432), (50, -1), (51, -1), (52, -1)]

Covered at level 8 : set()

After reduction : 
 pending  : [8, 40, 9, 29, 32, 38, 39, 42, 43, 47, 48, 49, 23]
 solution : [6, 1, 24, 17]


Solution : [6, 1, 24, 17] has cost 25.


Before backtrack at level 8
 pending : [8, 40, 9, 29, 32, 38, 39, 42, 43, 47, 48, 49, 23]
 solution : [6, 1, 24, 17]

After backtrack at level 8
 pending : [8, 40, 9, 29, 32, 38, 39, 42, 43, 47, 48, 49, 23, 25, 37, 0, 16, 19, 22, 41, 20, 15, 21, 14, 18]
 solution : [6, 1, 24, 17]


Invert decision for 17 at level 7


New level: 8
 pending : [8, 40, 9, 29, 32, 38, 39, 42, 43, 47, 48, 49, 23, 25, 37, 0, 16, 19, 22, 41, 20, 15, 21, 14, 18]
 solution : [6, 1, 24]


Before reduction : 
 pending  : [8, 40, 9, 29, 32, 38, 39, 42, 43, 47, 48, 49, 23, 25, 37, 0, 16, 19, 22, 41, 20, 15, 21, 14, 18]
 solution : [6, 1, 24]

Essensial at level 8 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, 33554432), (9, 65536), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, 33554432), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, 1024), (30, -1), (31, -1), (32, 131072), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, 16777216), (39, 512), (40, 512), (41, -1), (42, 32768), (43, 32768), (44, -1), (45, -1), (46, -1), (47, 8388608), (48, 1048576), (49, 33554432), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, 262144), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, 33554432), (9, 262144), (10, -1), (11, -1), (12, -1), (13, -1), (14, 16777216), (15, 8388608), (16, 393216), (17, -1), (18, 268435456), (19, 131072), (20, 2097152), (21, 4194304), (22, 65536), (23, 33554432), (24, -1), (25, 1048576), (26, -1), (27, -1), (28, -1), (29, 4096), (30, -1), (31, -1), (32, 262144), (33, -1), (34, -1), (35, -1), (36, -1), (37, 1048576), (38, 33554432), (39, 4096), (40, 33554432), (41, 512), (42, 131072), (43, 131072), (44, -1), (45, -1), (46, -1), (47, 16777216), (48, 4194304), (49, 33554432), (50, -1), (51, -1), (52, -1)]

Covered at level 8 : set()

After reduction : 
 pending  : [8, 40, 9, 29, 32, 38, 39, 42, 43, 47, 48, 49, 23, 25, 37, 0, 16, 19, 22, 41, 20, 15, 21, 14, 18]
 solution : [6, 1, 24]


Solution : [6, 1, 24] has cost 18.


Decide in level 8 among pending : [8, 40, 9, 29, 32, 38, 39, 42, 43, 47, 48, 49, 23, 25, 37, 0, 16, 19, 22, 41, 20, 15, 21, 14, 18]

Coverage : [(0, 262144), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, 33554432), (9, 262144), (10, -1), (11, -1), (12, -1), (13, -1), (14, 16777216), (15, 8388608), (16, 393216), (17, -1), (18, 268435456), (19, 131072), (20, 2097152), (21, 4194304), (22, 65536), (23, 33554432), (24, -1), (25, 1048576), (26, -1), (27, -1), (28, -1), (29, 4096), (30, -1), (31, -1), (32, 262144), (33, -1), (34, -1), (35, -1), (36, -1), (37, 1048576), (38, 33554432), (39, 4096), (40, 33554432), (41, 512), (42, 131072), (43, 131072), (44, -1), (45, -1), (46, -1), (47, 16777216), (48, 4194304), (49, 33554432), (50, -1), (51, -1), (52, -1)]

Decide 18 with phase True at level 8

After decision at level 8
 pending : [8, 40, 9, 29, 32, 38, 39, 42, 43, 47, 48, 49, 23, 25, 37, 0, 16, 19, 22, 41, 20, 15, 21, 14]
 solution : [6, 1, 24, 18]


New level: 9
 pending : [8, 40, 9, 29, 32, 38, 39, 42, 43, 47, 48, 49, 23, 25, 37, 0, 16, 19, 22, 41, 20, 15, 21, 14]
 solution : [6, 1, 24, 18]


Before reduction : 
 pending  : [8, 40, 9, 29, 32, 38, 39, 42, 43, 47, 48, 49, 23, 25, 37, 0, 16, 19, 22, 41, 20, 15, 21, 14]
 solution : [6, 1, 24, 18]

Essensial at level 9 : set()

Before removed
 coverage : [(0, 262144), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, 33554432), (9, 262144), (10, -1), (11, -1), (12, -1), (13, -1), (14, 16777216), (15, 8388608), (16, 393216), (17, -1), (18, 268435456), (19, 131072), (20, 2097152), (21, 4194304), (22, 65536), (23, 33554432), (24, -1), (25, 1048576), (26, -1), (27, -1), (28, -1), (29, 4096), (30, -1), (31, -1), (32, 262144), (33, -1), (34, -1), (35, -1), (36, -1), (37, 1048576), (38, 33554432), (39, 4096), (40, 33554432), (41, 512), (42, 131072), (43, 131072), (44, -1), (45, -1), (46, -1), (47, 16777216), (48, 4194304), (49, 33554432), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, 0), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, 33554432), (9, 65536), (10, -1), (11, -1), (12, -1), (13, -1), (14, 0), (15, 0), (16, 0), (17, -1), (18, -1), (19, 0), (20, 0), (21, 0), (22, 0), (23, 33554432), (24, -1), (25, 0), (26, -1), (27, -1), (28, -1), (29, 1024), (30, -1), (31, -1), (32, 131072), (33, -1), (34, -1), (35, -1), (36, -1), (37, 0), (38, 16777216), (39, 512), (40, 512), (41, 0), (42, 65536), (43, 65536), (44, -1), (45, -1), (46, -1), (47, 16777216), (48, 4194304), (49, 33554432), (50, -1), (51, -1), (52, -1)]

Covered at level 9 : {0, 37, 41, 14, 15, 16, 19, 20, 21, 22, 25}

After reduction : 
 pending  : [8, 40, 9, 29, 32, 38, 39, 42, 43, 47, 48, 49, 23]
 solution : [6, 1, 24, 18]


Before reduction : 
 pending  : [8, 40, 9, 29, 32, 38, 39, 42, 43, 47, 48, 49, 23]
 solution : [6, 1, 24, 18]

Essensial at level 9 : set()

Before removed
 coverage : [(0, 0), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, 33554432), (9, 65536), (10, -1), (11, -1), (12, -1), (13, -1), (14, 0), (15, 0), (16, 0), (17, -1), (18, -1), (19, 0), (20, 0), (21, 0), (22, 0), (23, 33554432), (24, -1), (25, 0), (26, -1), (27, -1), (28, -1), (29, 1024), (30, -1), (31, -1), (32, 131072), (33, -1), (34, -1), (35, -1), (36, -1), (37, 0), (38, 16777216), (39, 512), (40, 512), (41, 0), (42, 65536), (43, 65536), (44, -1), (45, -1), (46, -1), (47, 16777216), (48, 4194304), (49, 33554432), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, 33554432), (9, 65536), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, 33554432), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, 1024), (30, -1), (31, -1), (32, 131072), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, 16777216), (39, 512), (40, 512), (41, -1), (42, 65536), (43, 65536), (44, -1), (45, -1), (46, -1), (47, 16777216), (48, 4194304), (49, 33554432), (50, -1), (51, -1), (52, -1)]

Covered at level 9 : set()

After reduction : 
 pending  : [8, 40, 9, 29, 32, 38, 39, 42, 43, 47, 48, 49, 23]
 solution : [6, 1, 24, 18]


Solution : [6, 1, 24, 18] has cost 25.


Before backtrack at level 9
 pending : [8, 40, 9, 29, 32, 38, 39, 42, 43, 47, 48, 49, 23]
 solution : [6, 1, 24, 18]

After backtrack at level 9
 pending : [8, 40, 9, 29, 32, 38, 39, 42, 43, 47, 48, 49, 23, 25, 37, 0, 16, 19, 22, 41, 20, 15, 21, 14]
 solution : [6, 1, 24, 18]


Invert decision for 18 at level 8


New level: 9
 pending : [8, 40, 9, 29, 32, 38, 39, 42, 43, 47, 48, 49, 23, 25, 37, 0, 16, 19, 22, 41, 20, 15, 21, 14]
 solution : [6, 1, 24]


Before reduction : 
 pending  : [8, 40, 9, 29, 32, 38, 39, 42, 43, 47, 48, 49, 23, 25, 37, 0, 16, 19, 22, 41, 20, 15, 21, 14]
 solution : [6, 1, 24]

Essensial at level 9 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, 33554432), (9, 65536), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, 33554432), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, 1024), (30, -1), (31, -1), (32, 131072), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, 16777216), (39, 512), (40, 512), (41, -1), (42, 65536), (43, 65536), (44, -1), (45, -1), (46, -1), (47, 16777216), (48, 4194304), (49, 33554432), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, 262144), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, 33554432), (9, 262144), (10, -1), (11, -1), (12, -1), (13, -1), (14, 16777216), (15, 8388608), (16, 393216), (17, -1), (18, -1), (19, 131072), (20, 2097152), (21, 4194304), (22, 65536), (23, 33554432), (24, -1), (25, 1048576), (26, -1), (27, -1), (28, -1), (29, 4096), (30, -1), (31, -1), (32, 262144), (33, -1), (34, -1), (35, -1), (36, -1), (37, 1048576), (38, 33554432), (39, 4096), (40, 33554432), (41, 512), (42, 131072), (43, 131072), (44, -1), (45, -1), (46, -1), (47, 16777216), (48, 4194304), (49, 33554432), (50, -1), (51, -1), (52, -1)]

Covered at level 9 : set()

After reduction : 
 pending  : [8, 40, 9, 29, 32, 38, 39, 42, 43, 47, 48, 49, 23, 25, 37, 0, 16, 19, 22, 41, 20, 15, 21, 14]
 solution : [6, 1, 24]


Solution : [6, 1, 24] has cost 18.


Decide in level 9 among pending : [8, 40, 9, 29, 32, 38, 39, 42, 43, 47, 48, 49, 23, 25, 37, 0, 16, 19, 22, 41, 20, 15, 21, 14]

Coverage : [(0, 262144), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, 33554432), (9, 262144), (10, -1), (11, -1), (12, -1), (13, -1), (14, 16777216), (15, 8388608), (16, 393216), (17, -1), (18, -1), (19, 131072), (20, 2097152), (21, 4194304), (22, 65536), (23, 33554432), (24, -1), (25, 1048576), (26, -1), (27, -1), (28, -1), (29, 4096), (30, -1), (31, -1), (32, 262144), (33, -1), (34, -1), (35, -1), (36, -1), (37, 1048576), (38, 33554432), (39, 4096), (40, 33554432), (41, 512), (42, 131072), (43, 131072), (44, -1), (45, -1), (46, -1), (47, 16777216), (48, 4194304), (49, 33554432), (50, -1), (51, -1), (52, -1)]

Decide 8 with phase True at level 9

After decision at level 9
 pending : [40, 9, 29, 32, 38, 39, 42, 43, 47, 48, 49, 23, 25, 37, 0, 16, 19, 22, 41, 20, 15, 21, 14]
 solution : [6, 1, 24, 8]


New level: 10
 pending : [40, 9, 29, 32, 38, 39, 42, 43, 47, 48, 49, 23, 25, 37, 0, 16, 19, 22, 41, 20, 15, 21, 14]
 solution : [6, 1, 24, 8]


Before reduction : 
 pending  : [40, 9, 29, 32, 38, 39, 42, 43, 47, 48, 49, 23, 25, 37, 0, 16, 19, 22, 41, 20, 15, 21, 14]
 solution : [6, 1, 24, 8]

Essensial at level 10 : set()

Before removed
 coverage : [(0, 262144), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, 33554432), (9, 262144), (10, -1), (11, -1), (12, -1), (13, -1), (14, 16777216), (15, 8388608), (16, 393216), (17, -1), (18, -1), (19, 131072), (20, 2097152), (21, 4194304), (22, 65536), (23, 33554432), (24, -1), (25, 1048576), (26, -1), (27, -1), (28, -1), (29, 4096), (30, -1), (31, -1), (32, 262144), (33, -1), (34, -1), (35, -1), (36, -1), (37, 1048576), (38, 33554432), (39, 4096), (40, 33554432), (41, 512), (42, 131072), (43, 131072), (44, -1), (45, -1), (46, -1), (47, 16777216), (48, 4194304), (49, 33554432), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, 131072), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, 0), (10, -1), (11, -1), (12, -1), (13, -1), (14, 8388608), (15, 4194304), (16, 131072), (17, -1), (18, -1), (19, 65536), (20, 2097152), (21, 4194304), (22, 65536), (23, 0), (24, -1), (25, 524288), (26, -1), (27, -1), (28, -1), (29, 0), (30, -1), (31, -1), (32, 0), (33, -1), (34, -1), (35, -1), (36, -1), (37, 524288), (38, 0), (39, 0), (40, 32768), (41, 512), (42, 0), (43, 0), (44, -1), (45, -1), (46, -1), (47, 0), (48, 0), (49, 0), (50, -1), (51, -1), (52, -1)]

Covered at level 10 : {32, 38, 39, 9, 42, 43, 47, 48, 49, 23, 29}

After reduction : 
 pending  : [40, 25, 37, 0, 16, 19, 22, 41, 20, 15, 21, 14]
 solution : [6, 1, 24, 8]


Before reduction : 
 pending  : [40, 25, 37, 0, 16, 19, 22, 41, 20, 15, 21, 14]
 solution : [6, 1, 24, 8]

Essensial at level 10 : set()

Before removed
 coverage : [(0, 131072), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, 0), (10, -1), (11, -1), (12, -1), (13, -1), (14, 8388608), (15, 4194304), (16, 131072), (17, -1), (18, -1), (19, 65536), (20, 2097152), (21, 4194304), (22, 65536), (23, 0), (24, -1), (25, 524288), (26, -1), (27, -1), (28, -1), (29, 0), (30, -1), (31, -1), (32, 0), (33, -1), (34, -1), (35, -1), (36, -1), (37, 524288), (38, 0), (39, 0), (40, 32768), (41, 512), (42, 0), (43, 0), (44, -1), (45, -1), (46, -1), (47, 0), (48, 0), (49, 0), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, 131072), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 8388608), (15, 4194304), (16, 131072), (17, -1), (18, -1), (19, 65536), (20, 2097152), (21, 4194304), (22, 65536), (23, -1), (24, -1), (25, 524288), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, 524288), (38, -1), (39, -1), (40, 32768), (41, 512), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 10 : set()

After reduction : 
 pending  : [40, 25, 37, 0, 16, 19, 22, 41, 20, 15, 21, 14]
 solution : [6, 1, 24, 8]


Solution : [6, 1, 24, 8] has cost 22.


Decide in level 10 among pending : [40, 25, 37, 0, 16, 19, 22, 41, 20, 15, 21, 14]

Coverage : [(0, 131072), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 8388608), (15, 4194304), (16, 131072), (17, -1), (18, -1), (19, 65536), (20, 2097152), (21, 4194304), (22, 65536), (23, -1), (24, -1), (25, 524288), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, 524288), (38, -1), (39, -1), (40, 32768), (41, 512), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Decide 14 with phase True at level 10

After decision at level 10
 pending : [40, 25, 37, 0, 16, 19, 22, 41, 20, 15, 21]
 solution : [6, 1, 24, 8, 14]


New level: 11
 pending : [40, 25, 37, 0, 16, 19, 22, 41, 20, 15, 21]
 solution : [6, 1, 24, 8, 14]


Before reduction : 
 pending  : [40, 25, 37, 0, 16, 19, 22, 41, 20, 15, 21]
 solution : [6, 1, 24, 8, 14]

Essensial at level 11 : set()

Before removed
 coverage : [(0, 131072), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 8388608), (15, 4194304), (16, 131072), (17, -1), (18, -1), (19, 65536), (20, 2097152), (21, 4194304), (22, 65536), (23, -1), (24, -1), (25, 524288), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, 524288), (38, -1), (39, -1), (40, 32768), (41, 512), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, 0), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, 0), (16, 0), (17, -1), (18, -1), (19, 0), (20, 16384), (21, 65536), (22, 16384), (23, -1), (24, -1), (25, 2048), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, 2048), (38, -1), (39, -1), (40, 1024), (41, 512), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 11 : {0, 16, 19, 15}

After reduction : 
 pending  : [40, 25, 37, 22, 41, 20, 21]
 solution : [6, 1, 24, 8, 14]


Before reduction : 
 pending  : [40, 25, 37, 22, 41, 20, 21]
 solution : [6, 1, 24, 8, 14]

Essensial at level 11 : set()

Before removed
 coverage : [(0, 0), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, 0), (16, 0), (17, -1), (18, -1), (19, 0), (20, 16384), (21, 65536), (22, 16384), (23, -1), (24, -1), (25, 2048), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, 2048), (38, -1), (39, -1), (40, 1024), (41, 512), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, 16384), (21, 65536), (22, 16384), (23, -1), (24, -1), (25, 2048), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, 2048), (38, -1), (39, -1), (40, 1024), (41, 512), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 11 : set()

After reduction : 
 pending  : [40, 25, 37, 22, 41, 20, 21]
 solution : [6, 1, 24, 8, 14]


Solution : [6, 1, 24, 8, 14] has cost 31.


Before backtrack at level 11
 pending : [40, 25, 37, 22, 41, 20, 21]
 solution : [6, 1, 24, 8, 14]

After backtrack at level 11
 pending : [40, 25, 37, 22, 41, 20, 21, 0, 16, 19, 15]
 solution : [6, 1, 24, 8, 14]


Invert decision for 14 at level 10


New level: 11
 pending : [40, 25, 37, 22, 41, 20, 21, 0, 16, 19, 15]
 solution : [6, 1, 24, 8]


Before reduction : 
 pending  : [40, 25, 37, 22, 41, 20, 21, 0, 16, 19, 15]
 solution : [6, 1, 24, 8]

Essensial at level 11 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, 16384), (21, 65536), (22, 16384), (23, -1), (24, -1), (25, 2048), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, 2048), (38, -1), (39, -1), (40, 1024), (41, 512), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, 131072), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, 4194304), (16, 131072), (17, -1), (18, -1), (19, 65536), (20, 2097152), (21, 4194304), (22, 65536), (23, -1), (24, -1), (25, 524288), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, 524288), (38, -1), (39, -1), (40, 32768), (41, 512), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 11 : set()

After reduction : 
 pending  : [40, 25, 37, 22, 41, 20, 21, 0, 16, 19, 15]
 solution : [6, 1, 24, 8]


Solution : [6, 1, 24, 8] has cost 22.


Decide in level 11 among pending : [40, 25, 37, 22, 41, 20, 21, 0, 16, 19, 15]

Coverage : [(0, 131072), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, 4194304), (16, 131072), (17, -1), (18, -1), (19, 65536), (20, 2097152), (21, 4194304), (22, 65536), (23, -1), (24, -1), (25, 524288), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, 524288), (38, -1), (39, -1), (40, 32768), (41, 512), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Decide 21 with phase True at level 11

After decision at level 11
 pending : [40, 25, 37, 22, 41, 20, 0, 16, 19, 15]
 solution : [6, 1, 24, 8, 21]


New level: 12
 pending : [40, 25, 37, 22, 41, 20, 0, 16, 19, 15]
 solution : [6, 1, 24, 8, 21]


Before reduction : 
 pending  : [40, 25, 37, 22, 41, 20, 0, 16, 19, 15]
 solution : [6, 1, 24, 8, 21]

Essensial at level 12 : set()

Before removed
 coverage : [(0, 131072), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, 4194304), (16, 131072), (17, -1), (18, -1), (19, 65536), (20, 2097152), (21, 4194304), (22, 65536), (23, -1), (24, -1), (25, 524288), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, 524288), (38, -1), (39, -1), (40, 32768), (41, 512), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, 65536), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, 1048576), (16, 65536), (17, -1), (18, -1), (19, 0), (20, 0), (21, -1), (22, 0), (23, -1), (24, -1), (25, 131072), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, 131072), (38, -1), (39, -1), (40, 512), (41, 0), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 12 : {41, 19, 20, 22}

After reduction : 
 pending  : [40, 25, 37, 0, 16, 15]
 solution : [6, 1, 24, 8, 21]


Before reduction : 
 pending  : [40, 25, 37, 0, 16, 15]
 solution : [6, 1, 24, 8, 21]

Essensial at level 12 : set()

Before removed
 coverage : [(0, 65536), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, 1048576), (16, 65536), (17, -1), (18, -1), (19, 0), (20, 0), (21, -1), (22, 0), (23, -1), (24, -1), (25, 131072), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, 131072), (38, -1), (39, -1), (40, 512), (41, 0), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, 65536), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, 1048576), (16, 65536), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, 131072), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, 131072), (38, -1), (39, -1), (40, 512), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 12 : set()

After reduction : 
 pending  : [40, 25, 37, 0, 16, 15]
 solution : [6, 1, 24, 8, 21]


Solution : [6, 1, 24, 8, 21] has cost 29.


Before backtrack at level 12
 pending : [40, 25, 37, 0, 16, 15]
 solution : [6, 1, 24, 8, 21]

After backtrack at level 12
 pending : [40, 25, 37, 0, 16, 15, 22, 41, 20, 19]
 solution : [6, 1, 24, 8, 21]


Invert decision for 21 at level 11


New level: 12
 pending : [40, 25, 37, 0, 16, 15, 22, 41, 20, 19]
 solution : [6, 1, 24, 8]


Before reduction : 
 pending  : [40, 25, 37, 0, 16, 15, 22, 41, 20, 19]
 solution : [6, 1, 24, 8]

Essensial at level 12 : set()

Before removed
 coverage : [(0, 65536), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, 1048576), (16, 65536), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, 131072), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, 131072), (38, -1), (39, -1), (40, 512), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, 131072), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, 4194304), (16, 131072), (17, -1), (18, -1), (19, 65536), (20, 2097152), (21, -1), (22, 65536), (23, -1), (24, -1), (25, 524288), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, 524288), (38, -1), (39, -1), (40, 32768), (41, 512), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 12 : set()

After reduction : 
 pending  : [40, 25, 37, 0, 16, 15, 22, 41, 20, 19]
 solution : [6, 1, 24, 8]


Solution : [6, 1, 24, 8] has cost 22.


Decide in level 12 among pending : [40, 25, 37, 0, 16, 15, 22, 41, 20, 19]

Coverage : [(0, 131072), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, 4194304), (16, 131072), (17, -1), (18, -1), (19, 65536), (20, 2097152), (21, -1), (22, 65536), (23, -1), (24, -1), (25, 524288), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, 524288), (38, -1), (39, -1), (40, 32768), (41, 512), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Decide 15 with phase True at level 12

After decision at level 12
 pending : [40, 25, 37, 0, 16, 22, 41, 20, 19]
 solution : [6, 1, 24, 8, 15]


New level: 13
 pending : [40, 25, 37, 0, 16, 22, 41, 20, 19]
 solution : [6, 1, 24, 8, 15]


Before reduction : 
 pending  : [40, 25, 37, 0, 16, 22, 41, 20, 19]
 solution : [6, 1, 24, 8, 15]

Essensial at level 13 : set()

Before removed
 coverage : [(0, 131072), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, 4194304), (16, 131072), (17, -1), (18, -1), (19, 65536), (20, 2097152), (21, -1), (22, 65536), (23, -1), (24, -1), (25, 524288), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, 524288), (38, -1), (39, -1), (40, 32768), (41, 512), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, 0), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, 0), (17, -1), (18, -1), (19, 0), (20, 16384), (21, -1), (22, 16384), (23, -1), (24, -1), (25, 2048), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, 2048), (38, -1), (39, -1), (40, 1024), (41, 512), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 13 : {0, 16, 19}

After reduction : 
 pending  : [40, 25, 37, 22, 41, 20]
 solution : [6, 1, 24, 8, 15]


Before reduction : 
 pending  : [40, 25, 37, 22, 41, 20]
 solution : [6, 1, 24, 8, 15]

Essensial at level 13 : set()

Before removed
 coverage : [(0, 0), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, 0), (17, -1), (18, -1), (19, 0), (20, 16384), (21, -1), (22, 16384), (23, -1), (24, -1), (25, 2048), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, 2048), (38, -1), (39, -1), (40, 1024), (41, 512), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, 16384), (21, -1), (22, 16384), (23, -1), (24, -1), (25, 2048), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, 2048), (38, -1), (39, -1), (40, 1024), (41, 512), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 13 : set()

After reduction : 
 pending  : [40, 25, 37, 22, 41, 20]
 solution : [6, 1, 24, 8, 15]


Solution : [6, 1, 24, 8, 15] has cost 31.


Before backtrack at level 13
 pending : [40, 25, 37, 22, 41, 20]
 solution : [6, 1, 24, 8, 15]

After backtrack at level 13
 pending : [40, 25, 37, 22, 41, 20, 0, 16, 19]
 solution : [6, 1, 24, 8, 15]


Invert decision for 15 at level 12


New level: 13
 pending : [40, 25, 37, 22, 41, 20, 0, 16, 19]
 solution : [6, 1, 24, 8]


Before reduction : 
 pending  : [40, 25, 37, 22, 41, 20, 0, 16, 19]
 solution : [6, 1, 24, 8]

Essensial at level 13 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, 16384), (21, -1), (22, 16384), (23, -1), (24, -1), (25, 2048), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, 2048), (38, -1), (39, -1), (40, 1024), (41, 512), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, 131072), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, 131072), (17, -1), (18, -1), (19, 65536), (20, 2097152), (21, -1), (22, 65536), (23, -1), (24, -1), (25, 524288), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, 524288), (38, -1), (39, -1), (40, 32768), (41, 512), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 13 : set()

After reduction : 
 pending  : [40, 25, 37, 22, 41, 20, 0, 16, 19]
 solution : [6, 1, 24, 8]


Solution : [6, 1, 24, 8] has cost 22.


Decide in level 13 among pending : [40, 25, 37, 22, 41, 20, 0, 16, 19]

Coverage : [(0, 131072), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, 131072), (17, -1), (18, -1), (19, 65536), (20, 2097152), (21, -1), (22, 65536), (23, -1), (24, -1), (25, 524288), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, 524288), (38, -1), (39, -1), (40, 32768), (41, 512), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Decide 20 with phase True at level 13

After decision at level 13
 pending : [40, 25, 37, 22, 41, 0, 16, 19]
 solution : [6, 1, 24, 8, 20]


New level: 14
 pending : [40, 25, 37, 22, 41, 0, 16, 19]
 solution : [6, 1, 24, 8, 20]


Before reduction : 
 pending  : [40, 25, 37, 22, 41, 0, 16, 19]
 solution : [6, 1, 24, 8, 20]

Essensial at level 14 : set()

Before removed
 coverage : [(0, 131072), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, 131072), (17, -1), (18, -1), (19, 65536), (20, 2097152), (21, -1), (22, 65536), (23, -1), (24, -1), (25, 524288), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, 524288), (38, -1), (39, -1), (40, 32768), (41, 512), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, 65536), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, 65536), (17, -1), (18, -1), (19, 0), (20, -1), (21, -1), (22, 0), (23, -1), (24, -1), (25, 131072), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, 131072), (38, -1), (39, -1), (40, 512), (41, 0), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 14 : {41, 19, 22}

After reduction : 
 pending  : [40, 25, 37, 0, 16]
 solution : [6, 1, 24, 8, 20]


Before reduction : 
 pending  : [40, 25, 37, 0, 16]
 solution : [6, 1, 24, 8, 20]

Essensial at level 14 : set()

Before removed
 coverage : [(0, 65536), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, 65536), (17, -1), (18, -1), (19, 0), (20, -1), (21, -1), (22, 0), (23, -1), (24, -1), (25, 131072), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, 131072), (38, -1), (39, -1), (40, 512), (41, 0), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, 65536), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, 65536), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, 131072), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, 131072), (38, -1), (39, -1), (40, 512), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 14 : set()

After reduction : 
 pending  : [40, 25, 37, 0, 16]
 solution : [6, 1, 24, 8, 20]


Solution : [6, 1, 24, 8, 20] has cost 29.


Before backtrack at level 14
 pending : [40, 25, 37, 0, 16]
 solution : [6, 1, 24, 8, 20]

After backtrack at level 14
 pending : [40, 25, 37, 0, 16, 22, 41, 19]
 solution : [6, 1, 24, 8, 20]


Invert decision for 20 at level 13


New level: 14
 pending : [40, 25, 37, 0, 16, 22, 41, 19]
 solution : [6, 1, 24, 8]


Before reduction : 
 pending  : [40, 25, 37, 0, 16, 22, 41, 19]
 solution : [6, 1, 24, 8]

Essensial at level 14 : {22}

Before removed
 coverage : [(0, 65536), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, 65536), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, 131072), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, 131072), (38, -1), (39, -1), (40, 512), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, 131072), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, 131072), (17, -1), (18, -1), (19, 32768), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, 524288), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, 524288), (38, -1), (39, -1), (40, 32768), (41, 0), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 14 : {41}

After reduction : 
 pending  : [40, 25, 37, 0, 16, 19]
 solution : [6, 1, 24, 8, 22]


Before reduction : 
 pending  : [40, 25, 37, 0, 16, 19]
 solution : [6, 1, 24, 8, 22]

Essensial at level 14 : set()

Before removed
 coverage : [(0, 131072), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, 131072), (17, -1), (18, -1), (19, 32768), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, 524288), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, 524288), (38, -1), (39, -1), (40, 32768), (41, 0), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, 131072), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, 131072), (17, -1), (18, -1), (19, 32768), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, 524288), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, 524288), (38, -1), (39, -1), (40, 32768), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 14 : set()

After reduction : 
 pending  : [40, 25, 37, 0, 16, 19]
 solution : [6, 1, 24, 8, 22]


Solution : [6, 1, 24, 8, 22] has cost 29.


Before backtrack at level 14
 pending : [40, 25, 37, 0, 16, 19]
 solution : [6, 1, 24, 8, 22]

After backtrack at level 14
 pending : [40, 25, 37, 0, 16, 19, 22, 41]
 solution : [6, 1, 24, 8]


Before backtrack at level 13
 pending : [40, 25, 37, 0, 16, 19, 22, 41]
 solution : [6, 1, 24, 8]

After backtrack at level 13
 pending : [40, 25, 37, 0, 16, 19, 22, 41, 20]
 solution : [6, 1, 24, 8]


Before backtrack at level 12
 pending : [40, 25, 37, 0, 16, 19, 22, 41, 20]
 solution : [6, 1, 24, 8]

After backtrack at level 12
 pending : [40, 25, 37, 0, 16, 19, 22, 41, 20, 15]
 solution : [6, 1, 24, 8]


Before backtrack at level 11
 pending : [40, 25, 37, 0, 16, 19, 22, 41, 20, 15]
 solution : [6, 1, 24, 8]

After backtrack at level 11
 pending : [40, 25, 37, 0, 16, 19, 22, 41, 20, 15, 21]
 solution : [6, 1, 24, 8]


Before backtrack at level 10
 pending : [40, 25, 37, 0, 16, 19, 22, 41, 20, 15, 21]
 solution : [6, 1, 24, 8]

After backtrack at level 10
 pending : [40, 25, 37, 0, 16, 19, 22, 41, 20, 15, 21, 9, 29, 32, 38, 39, 42, 43, 47, 48, 49, 23, 14]
 solution : [6, 1, 24, 8]


Invert decision for 8 at level 9


New level: 10
 pending : [40, 25, 37, 0, 16, 19, 22, 41, 20, 15, 21, 9, 29, 32, 38, 39, 42, 43, 47, 48, 49, 23, 14]
 solution : [6, 1, 24]


Before reduction : 
 pending  : [40, 25, 37, 0, 16, 19, 22, 41, 20, 15, 21, 9, 29, 32, 38, 39, 42, 43, 47, 48, 49, 23, 14]
 solution : [6, 1, 24]

Essensial at level 10 : {23}

Before removed
 coverage : [(0, 131072), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, 131072), (17, -1), (18, -1), (19, 32768), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, 524288), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, 524288), (38, -1), (39, -1), (40, 32768), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, 131072), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, 0), (10, -1), (11, -1), (12, -1), (13, -1), (14, 8388608), (15, 4194304), (16, 131072), (17, -1), (18, -1), (19, 65536), (20, 2097152), (21, 4194304), (22, 65536), (23, -1), (24, -1), (25, 524288), (26, -1), (27, -1), (28, -1), (29, 0), (30, -1), (31, -1), (32, 0), (33, -1), (34, -1), (35, -1), (36, -1), (37, 524288), (38, 0), (39, 0), (40, 32768), (41, 512), (42, 0), (43, 0), (44, -1), (45, -1), (46, -1), (47, 0), (48, 0), (49, 0), (50, -1), (51, -1), (52, -1)]

Covered at level 10 : {32, 38, 39, 9, 42, 43, 47, 48, 49, 29}

After reduction : 
 pending  : [40, 25, 37, 0, 16, 19, 22, 41, 20, 15, 21, 14]
 solution : [6, 1, 24, 23]


Before reduction : 
 pending  : [40, 25, 37, 0, 16, 19, 22, 41, 20, 15, 21, 14]
 solution : [6, 1, 24, 23]

Essensial at level 10 : set()

Before removed
 coverage : [(0, 131072), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, 0), (10, -1), (11, -1), (12, -1), (13, -1), (14, 8388608), (15, 4194304), (16, 131072), (17, -1), (18, -1), (19, 65536), (20, 2097152), (21, 4194304), (22, 65536), (23, -1), (24, -1), (25, 524288), (26, -1), (27, -1), (28, -1), (29, 0), (30, -1), (31, -1), (32, 0), (33, -1), (34, -1), (35, -1), (36, -1), (37, 524288), (38, 0), (39, 0), (40, 32768), (41, 512), (42, 0), (43, 0), (44, -1), (45, -1), (46, -1), (47, 0), (48, 0), (49, 0), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, 131072), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 8388608), (15, 4194304), (16, 131072), (17, -1), (18, -1), (19, 65536), (20, 2097152), (21, 4194304), (22, 65536), (23, -1), (24, -1), (25, 524288), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, 524288), (38, -1), (39, -1), (40, 32768), (41, 512), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 10 : set()

After reduction : 
 pending  : [40, 25, 37, 0, 16, 19, 22, 41, 20, 15, 21, 14]
 solution : [6, 1, 24, 23]


Solution : [6, 1, 24, 23] has cost 25.


Before backtrack at level 10
 pending : [40, 25, 37, 0, 16, 19, 22, 41, 20, 15, 21, 14]
 solution : [6, 1, 24, 23]

After backtrack at level 10
 pending : [40, 25, 37, 0, 16, 19, 22, 41, 20, 15, 21, 14, 23, 9, 29, 32, 38, 39, 42, 43, 47, 48, 49]
 solution : [6, 1, 24]


Before backtrack at level 9
 pending : [40, 25, 37, 0, 16, 19, 22, 41, 20, 15, 21, 14, 23, 9, 29, 32, 38, 39, 42, 43, 47, 48, 49]
 solution : [6, 1, 24]

After backtrack at level 9
 pending : [40, 25, 37, 0, 16, 19, 22, 41, 20, 15, 21, 14, 23, 9, 29, 32, 38, 39, 42, 43, 47, 48, 49, 8]
 solution : [6, 1, 24]


Before backtrack at level 8
 pending : [40, 25, 37, 0, 16, 19, 22, 41, 20, 15, 21, 14, 23, 9, 29, 32, 38, 39, 42, 43, 47, 48, 49, 8]
 solution : [6, 1, 24]

After backtrack at level 8
 pending : [40, 25, 37, 0, 16, 19, 22, 41, 20, 15, 21, 14, 23, 9, 29, 32, 38, 39, 42, 43, 47, 48, 49, 8, 18]
 solution : [6, 1, 24]


Before backtrack at level 7
 pending : [40, 25, 37, 0, 16, 19, 22, 41, 20, 15, 21, 14, 23, 9, 29, 32, 38, 39, 42, 43, 47, 48, 49, 8, 18]
 solution : [6, 1, 24]

After backtrack at level 7
 pending : [40, 25, 37, 0, 16, 19, 22, 41, 20, 15, 21, 14, 23, 9, 29, 32, 38, 39, 42, 43, 47, 48, 49, 8, 18, 17]
 solution : [6, 1, 24]


Before backtrack at level 6
 pending : [40, 25, 37, 0, 16, 19, 22, 41, 20, 15, 21, 14, 23, 9, 29, 32, 38, 39, 42, 43, 47, 48, 49, 8, 18, 17]
 solution : [6, 1, 24]

After backtrack at level 6
 pending : [40, 25, 37, 0, 16, 19, 22, 41, 20, 15, 21, 14, 23, 9, 29, 32, 38, 39, 42, 43, 47, 48, 49, 8, 18, 17, 30, 33, 26]
 solution : [6, 1, 24]


Invert decision for 24 at level 5


New level: 6
 pending : [40, 25, 37, 0, 16, 19, 22, 41, 20, 15, 21, 14, 23, 9, 29, 32, 38, 39, 42, 43, 47, 48, 49, 8, 18, 17, 30, 33, 26]
 solution : [6, 1]


Before reduction : 
 pending  : [40, 25, 37, 0, 16, 19, 22, 41, 20, 15, 21, 14, 23, 9, 29, 32, 38, 39, 42, 43, 47, 48, 49, 8, 18, 17, 30, 33, 26]
 solution : [6, 1]

Essensial at level 6 : set()

Before removed
 coverage : [(0, 131072), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 8388608), (15, 4194304), (16, 131072), (17, -1), (18, -1), (19, 65536), (20, 2097152), (21, 4194304), (22, 65536), (23, -1), (24, -1), (25, 524288), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, 524288), (38, -1), (39, -1), (40, 32768), (41, 512), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, 262144), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, 134217728), (9, 1048576), (10, -1), (11, -1), (12, -1), (13, -1), (14, 16777216), (15, 8388608), (16, 393216), (17, 536870912), (18, 268435456), (19, 131072), (20, 2097152), (21, 4194304), (22, 65536), (23, 134217728), (24, -1), (25, 1048576), (26, 1073741824), (27, -1), (28, -1), (29, 16384), (30, 32768), (31, -1), (32, 1048576), (33, 4194304), (34, -1), (35, -1), (36, -1), (37, 1048576), (38, 134217728), (39, 16384), (40, 67108864), (41, 268435456), (42, 524288), (43, 524288), (44, -1), (45, -1), (46, -1), (47, 67108864), (48, 16777216), (49, 67108864), (50, -1), (51, -1), (52, -1)]

Covered at level 6 : set()

After reduction : 
 pending  : [40, 25, 37, 0, 16, 19, 22, 41, 20, 15, 21, 14, 23, 9, 29, 32, 38, 39, 42, 43, 47, 48, 49, 8, 18, 17, 30, 33, 26]
 solution : [6, 1]


Solution : [6, 1] has cost 11.


Decide in level 6 among pending : [40, 25, 37, 0, 16, 19, 22, 41, 20, 15, 21, 14, 23, 9, 29, 32, 38, 39, 42, 43, 47, 48, 49, 8, 18, 17, 30, 33, 26]

Coverage : [(0, 262144), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, 134217728), (9, 1048576), (10, -1), (11, -1), (12, -1), (13, -1), (14, 16777216), (15, 8388608), (16, 393216), (17, 536870912), (18, 268435456), (19, 131072), (20, 2097152), (21, 4194304), (22, 65536), (23, 134217728), (24, -1), (25, 1048576), (26, 1073741824), (27, -1), (28, -1), (29, 16384), (30, 32768), (31, -1), (32, 1048576), (33, 4194304), (34, -1), (35, -1), (36, -1), (37, 1048576), (38, 134217728), (39, 16384), (40, 67108864), (41, 268435456), (42, 524288), (43, 524288), (44, -1), (45, -1), (46, -1), (47, 67108864), (48, 16777216), (49, 67108864), (50, -1), (51, -1), (52, -1)]

Decide 26 with phase True at level 6

After decision at level 6
 pending : [40, 25, 37, 0, 16, 19, 22, 41, 20, 15, 21, 14, 23, 9, 29, 32, 38, 39, 42, 43, 47, 48, 49, 8, 18, 17, 30, 33]
 solution : [6, 1, 26]


New level: 7
 pending : [40, 25, 37, 0, 16, 19, 22, 41, 20, 15, 21, 14, 23, 9, 29, 32, 38, 39, 42, 43, 47, 48, 49, 8, 18, 17, 30, 33]
 solution : [6, 1, 26]


Before reduction : 
 pending  : [40, 25, 37, 0, 16, 19, 22, 41, 20, 15, 21, 14, 23, 9, 29, 32, 38, 39, 42, 43, 47, 48, 49, 8, 18, 17, 30, 33]
 solution : [6, 1, 26]

Essensial at level 7 : set()

Before removed
 coverage : [(0, 262144), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, 134217728), (9, 1048576), (10, -1), (11, -1), (12, -1), (13, -1), (14, 16777216), (15, 8388608), (16, 393216), (17, 536870912), (18, 268435456), (19, 131072), (20, 2097152), (21, 4194304), (22, 65536), (23, 134217728), (24, -1), (25, 1048576), (26, 1073741824), (27, -1), (28, -1), (29, 16384), (30, 32768), (31, -1), (32, 1048576), (33, 4194304), (34, -1), (35, -1), (36, -1), (37, 1048576), (38, 134217728), (39, 16384), (40, 67108864), (41, 268435456), (42, 524288), (43, 524288), (44, -1), (45, -1), (46, -1), (47, 67108864), (48, 16777216), (49, 67108864), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, 0), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, 134217728), (9, 262144), (10, -1), (11, -1), (12, -1), (13, -1), (14, 0), (15, 0), (16, 0), (17, 0), (18, 0), (19, 0), (20, 0), (21, 0), (22, 0), (23, 134217728), (24, -1), (25, 0), (26, -1), (27, -1), (28, -1), (29, 4096), (30, 8192), (31, -1), (32, 524288), (33, 4194304), (34, -1), (35, -1), (36, -1), (37, 0), (38, 67108864), (39, 2048), (40, 2048), (41, 4096), (42, 131072), (43, 131072), (44, -1), (45, -1), (46, -1), (47, 33554432), (48, 4194304), (49, 16777216), (50, -1), (51, -1), (52, -1)]

Covered at level 7 : {0, 37, 14, 15, 16, 17, 18, 19, 20, 21, 22, 25}

After reduction : 
 pending  : [40, 41, 23, 9, 29, 32, 38, 39, 42, 43, 47, 48, 49, 8, 30, 33]
 solution : [6, 1, 26]


Before reduction : 
 pending  : [40, 41, 23, 9, 29, 32, 38, 39, 42, 43, 47, 48, 49, 8, 30, 33]
 solution : [6, 1, 26]

Essensial at level 7 : set()

Before removed
 coverage : [(0, 0), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, 134217728), (9, 262144), (10, -1), (11, -1), (12, -1), (13, -1), (14, 0), (15, 0), (16, 0), (17, 0), (18, 0), (19, 0), (20, 0), (21, 0), (22, 0), (23, 134217728), (24, -1), (25, 0), (26, -1), (27, -1), (28, -1), (29, 4096), (30, 8192), (31, -1), (32, 524288), (33, 4194304), (34, -1), (35, -1), (36, -1), (37, 0), (38, 67108864), (39, 2048), (40, 2048), (41, 4096), (42, 131072), (43, 131072), (44, -1), (45, -1), (46, -1), (47, 33554432), (48, 4194304), (49, 16777216), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, 134217728), (9, 262144), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, 134217728), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, 4096), (30, 8192), (31, -1), (32, 524288), (33, 4194304), (34, -1), (35, -1), (36, -1), (37, -1), (38, 67108864), (39, 2048), (40, 2048), (41, 4096), (42, 131072), (43, 131072), (44, -1), (45, -1), (46, -1), (47, 33554432), (48, 4194304), (49, 16777216), (50, -1), (51, -1), (52, -1)]

Covered at level 7 : set()

After reduction : 
 pending  : [40, 41, 23, 9, 29, 32, 38, 39, 42, 43, 47, 48, 49, 8, 30, 33]
 solution : [6, 1, 26]


Solution : [6, 1, 26] has cost 15.


Decide in level 7 among pending : [40, 41, 23, 9, 29, 32, 38, 39, 42, 43, 47, 48, 49, 8, 30, 33]

Coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, 134217728), (9, 262144), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, 134217728), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, 4096), (30, 8192), (31, -1), (32, 524288), (33, 4194304), (34, -1), (35, -1), (36, -1), (37, -1), (38, 67108864), (39, 2048), (40, 2048), (41, 4096), (42, 131072), (43, 131072), (44, -1), (45, -1), (46, -1), (47, 33554432), (48, 4194304), (49, 16777216), (50, -1), (51, -1), (52, -1)]

Decide 23 with phase True at level 7

After decision at level 7
 pending : [40, 41, 9, 29, 32, 38, 39, 42, 43, 47, 48, 49, 8, 30, 33]
 solution : [6, 1, 26, 23]


New level: 8
 pending : [40, 41, 9, 29, 32, 38, 39, 42, 43, 47, 48, 49, 8, 30, 33]
 solution : [6, 1, 26, 23]


Before reduction : 
 pending  : [40, 41, 9, 29, 32, 38, 39, 42, 43, 47, 48, 49, 8, 30, 33]
 solution : [6, 1, 26, 23]

Essensial at level 8 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, 134217728), (9, 262144), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, 134217728), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, 4096), (30, 8192), (31, -1), (32, 524288), (33, 4194304), (34, -1), (35, -1), (36, -1), (37, -1), (38, 67108864), (39, 2048), (40, 2048), (41, 4096), (42, 131072), (43, 131072), (44, -1), (45, -1), (46, -1), (47, 33554432), (48, 4194304), (49, 16777216), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, 0), (9, 0), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, 0), (30, 0), (31, -1), (32, 0), (33, 0), (34, -1), (35, -1), (36, -1), (37, -1), (38, 0), (39, 0), (40, 0), (41, 0), (42, 0), (43, 0), (44, -1), (45, -1), (46, -1), (47, 0), (48, 0), (49, 0), (50, -1), (51, -1), (52, -1)]

Covered at level 8 : {32, 33, 38, 39, 40, 41, 9, 42, 43, 8, 47, 48, 49, 29, 30}

After reduction : 
 pending  : []
 solution : [6, 1, 26, 23]


Before reduction : 
 pending  : []
 solution : [6, 1, 26, 23]

Essensial at level 8 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, 0), (9, 0), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, 0), (30, 0), (31, -1), (32, 0), (33, 0), (34, -1), (35, -1), (36, -1), (37, -1), (38, 0), (39, 0), (40, 0), (41, 0), (42, 0), (43, 0), (44, -1), (45, -1), (46, -1), (47, 0), (48, 0), (49, 0), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 8 : set()

After reduction : 
 pending  : []
 solution : [6, 1, 26, 23]


Solution : [6, 1, 26, 23] has cost 22.


Before backtrack at level 8
 pending : []
 solution : [6, 1, 26, 23]

After backtrack at level 8
 pending : [40, 41, 9, 29, 32, 38, 39, 42, 43, 47, 48, 49, 8, 30, 33]
 solution : [6, 1, 26, 23]


Invert decision for 23 at level 7


New level: 8
 pending : [40, 41, 9, 29, 32, 38, 39, 42, 43, 47, 48, 49, 8, 30, 33]
 solution : [6, 1, 26]


Before reduction : 
 pending  : [40, 41, 9, 29, 32, 38, 39, 42, 43, 47, 48, 49, 8, 30, 33]
 solution : [6, 1, 26]

Essensial at level 8 : {8}

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, 0), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, 0), (30, 0), (31, -1), (32, 0), (33, 0), (34, -1), (35, -1), (36, -1), (37, -1), (38, 0), (39, 0), (40, 0), (41, 0), (42, 0), (43, 0), (44, -1), (45, -1), (46, -1), (47, 0), (48, 0), (49, 0), (50, -1), (51, -1), (52, -1)]

Covered at level 8 : {32, 33, 38, 39, 40, 41, 9, 42, 43, 47, 48, 49, 29, 30}

After reduction : 
 pending  : []
 solution : [6, 1, 26, 8]


Before reduction : 
 pending  : []
 solution : [6, 1, 26, 8]

Essensial at level 8 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, 0), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, 0), (30, 0), (31, -1), (32, 0), (33, 0), (34, -1), (35, -1), (36, -1), (37, -1), (38, 0), (39, 0), (40, 0), (41, 0), (42, 0), (43, 0), (44, -1), (45, -1), (46, -1), (47, 0), (48, 0), (49, 0), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 8 : set()

After reduction : 
 pending  : []
 solution : [6, 1, 26, 8]


Solution : [6, 1, 26, 8] has cost 19.


Before backtrack at level 8
 pending : []
 solution : [6, 1, 26, 8]

After backtrack at level 8
 pending : [8, 40, 41, 9, 29, 32, 38, 39, 42, 43, 47, 48, 49, 30, 33]
 solution : [6, 1, 26]


Before backtrack at level 7
 pending : [8, 40, 41, 9, 29, 32, 38, 39, 42, 43, 47, 48, 49, 30, 33]
 solution : [6, 1, 26]

After backtrack at level 7
 pending : [8, 40, 41, 9, 29, 32, 38, 39, 42, 43, 47, 48, 49, 30, 33, 25, 37, 0, 16, 19, 22, 20, 15, 21, 14, 18, 17, 23]
 solution : [6, 1, 26]


Invert decision for 26 at level 6


New level: 7
 pending : [8, 40, 41, 9, 29, 32, 38, 39, 42, 43, 47, 48, 49, 30, 33, 25, 37, 0, 16, 19, 22, 20, 15, 21, 14, 18, 17, 23]
 solution : [6, 1]


Before reduction : 
 pending  : [8, 40, 41, 9, 29, 32, 38, 39, 42, 43, 47, 48, 49, 30, 33, 25, 37, 0, 16, 19, 22, 20, 15, 21, 14, 18, 17, 23]
 solution : [6, 1]

Essensial at level 7 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, 262144), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, 134217728), (9, 1048576), (10, -1), (11, -1), (12, -1), (13, -1), (14, 16777216), (15, 8388608), (16, 393216), (17, 536870912), (18, 268435456), (19, 131072), (20, 2097152), (21, 4194304), (22, 65536), (23, 134217728), (24, -1), (25, 1048576), (26, -1), (27, -1), (28, -1), (29, 16384), (30, 32768), (31, -1), (32, 1048576), (33, 4194304), (34, -1), (35, -1), (36, -1), (37, 1048576), (38, 134217728), (39, 16384), (40, 67108864), (41, 268435456), (42, 524288), (43, 524288), (44, -1), (45, -1), (46, -1), (47, 67108864), (48, 16777216), (49, 67108864), (50, -1), (51, -1), (52, -1)]

Covered at level 7 : set()

After reduction : 
 pending  : [8, 40, 41, 9, 29, 32, 38, 39, 42, 43, 47, 48, 49, 30, 33, 25, 37, 0, 16, 19, 22, 20, 15, 21, 14, 18, 17, 23]
 solution : [6, 1]


Solution : [6, 1] has cost 11.


Decide in level 7 among pending : [8, 40, 41, 9, 29, 32, 38, 39, 42, 43, 47, 48, 49, 30, 33, 25, 37, 0, 16, 19, 22, 20, 15, 21, 14, 18, 17, 23]

Coverage : [(0, 262144), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, 134217728), (9, 1048576), (10, -1), (11, -1), (12, -1), (13, -1), (14, 16777216), (15, 8388608), (16, 393216), (17, 536870912), (18, 268435456), (19, 131072), (20, 2097152), (21, 4194304), (22, 65536), (23, 134217728), (24, -1), (25, 1048576), (26, -1), (27, -1), (28, -1), (29, 16384), (30, 32768), (31, -1), (32, 1048576), (33, 4194304), (34, -1), (35, -1), (36, -1), (37, 1048576), (38, 134217728), (39, 16384), (40, 67108864), (41, 268435456), (42, 524288), (43, 524288), (44, -1), (45, -1), (46, -1), (47, 67108864), (48, 16777216), (49, 67108864), (50, -1), (51, -1), (52, -1)]

Decide 17 with phase True at level 7

After decision at level 7
 pending : [8, 40, 41, 9, 29, 32, 38, 39, 42, 43, 47, 48, 49, 30, 33, 25, 37, 0, 16, 19, 22, 20, 15, 21, 14, 18, 23]
 solution : [6, 1, 17]


New level: 8
 pending : [8, 40, 41, 9, 29, 32, 38, 39, 42, 43, 47, 48, 49, 30, 33, 25, 37, 0, 16, 19, 22, 20, 15, 21, 14, 18, 23]
 solution : [6, 1, 17]


Before reduction : 
 pending  : [8, 40, 41, 9, 29, 32, 38, 39, 42, 43, 47, 48, 49, 30, 33, 25, 37, 0, 16, 19, 22, 20, 15, 21, 14, 18, 23]
 solution : [6, 1, 17]

Essensial at level 8 : set()

Before removed
 coverage : [(0, 262144), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, 134217728), (9, 1048576), (10, -1), (11, -1), (12, -1), (13, -1), (14, 16777216), (15, 8388608), (16, 393216), (17, 536870912), (18, 268435456), (19, 131072), (20, 2097152), (21, 4194304), (22, 65536), (23, 134217728), (24, -1), (25, 1048576), (26, -1), (27, -1), (28, -1), (29, 16384), (30, 32768), (31, -1), (32, 1048576), (33, 4194304), (34, -1), (35, -1), (36, -1), (37, 1048576), (38, 134217728), (39, 16384), (40, 67108864), (41, 268435456), (42, 524288), (43, 524288), (44, -1), (45, -1), (46, -1), (47, 67108864), (48, 16777216), (49, 67108864), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, 0), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, 134217728), (9, 262144), (10, -1), (11, -1), (12, -1), (13, -1), (14, 0), (15, 0), (16, 0), (17, -1), (18, 0), (19, 0), (20, 0), (21, 0), (22, 0), (23, 134217728), (24, -1), (25, 0), (26, -1), (27, -1), (28, -1), (29, 4096), (30, 8192), (31, -1), (32, 524288), (33, 4194304), (34, -1), (35, -1), (36, -1), (37, 0), (38, 67108864), (39, 2048), (40, 2048), (41, 4096), (42, 131072), (43, 131072), (44, -1), (45, -1), (46, -1), (47, 33554432), (48, 4194304), (49, 67108864), (50, -1), (51, -1), (52, -1)]

Covered at level 8 : {0, 37, 14, 15, 16, 18, 19, 20, 21, 22, 25}

After reduction : 
 pending  : [8, 40, 41, 9, 29, 32, 38, 39, 42, 43, 47, 48, 49, 30, 33, 23]
 solution : [6, 1, 17]


Before reduction : 
 pending  : [8, 40, 41, 9, 29, 32, 38, 39, 42, 43, 47, 48, 49, 30, 33, 23]
 solution : [6, 1, 17]

Essensial at level 8 : set()

Before removed
 coverage : [(0, 0), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, 134217728), (9, 262144), (10, -1), (11, -1), (12, -1), (13, -1), (14, 0), (15, 0), (16, 0), (17, -1), (18, 0), (19, 0), (20, 0), (21, 0), (22, 0), (23, 134217728), (24, -1), (25, 0), (26, -1), (27, -1), (28, -1), (29, 4096), (30, 8192), (31, -1), (32, 524288), (33, 4194304), (34, -1), (35, -1), (36, -1), (37, 0), (38, 67108864), (39, 2048), (40, 2048), (41, 4096), (42, 131072), (43, 131072), (44, -1), (45, -1), (46, -1), (47, 33554432), (48, 4194304), (49, 67108864), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, 134217728), (9, 262144), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, 134217728), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, 4096), (30, 8192), (31, -1), (32, 524288), (33, 4194304), (34, -1), (35, -1), (36, -1), (37, -1), (38, 67108864), (39, 2048), (40, 2048), (41, 4096), (42, 131072), (43, 131072), (44, -1), (45, -1), (46, -1), (47, 33554432), (48, 4194304), (49, 67108864), (50, -1), (51, -1), (52, -1)]

Covered at level 8 : set()

After reduction : 
 pending  : [8, 40, 41, 9, 29, 32, 38, 39, 42, 43, 47, 48, 49, 30, 33, 23]
 solution : [6, 1, 17]


Solution : [6, 1, 17] has cost 18.


Decide in level 8 among pending : [8, 40, 41, 9, 29, 32, 38, 39, 42, 43, 47, 48, 49, 30, 33, 23]

Coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, 134217728), (9, 262144), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, 134217728), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, 4096), (30, 8192), (31, -1), (32, 524288), (33, 4194304), (34, -1), (35, -1), (36, -1), (37, -1), (38, 67108864), (39, 2048), (40, 2048), (41, 4096), (42, 131072), (43, 131072), (44, -1), (45, -1), (46, -1), (47, 33554432), (48, 4194304), (49, 67108864), (50, -1), (51, -1), (52, -1)]

Decide 8 with phase True at level 8

After decision at level 8
 pending : [40, 41, 9, 29, 32, 38, 39, 42, 43, 47, 48, 49, 30, 33, 23]
 solution : [6, 1, 17, 8]


New level: 9
 pending : [40, 41, 9, 29, 32, 38, 39, 42, 43, 47, 48, 49, 30, 33, 23]
 solution : [6, 1, 17, 8]


Before reduction : 
 pending  : [40, 41, 9, 29, 32, 38, 39, 42, 43, 47, 48, 49, 30, 33, 23]
 solution : [6, 1, 17, 8]

Essensial at level 9 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, 134217728), (9, 262144), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, 134217728), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, 4096), (30, 8192), (31, -1), (32, 524288), (33, 4194304), (34, -1), (35, -1), (36, -1), (37, -1), (38, 67108864), (39, 2048), (40, 2048), (41, 4096), (42, 131072), (43, 131072), (44, -1), (45, -1), (46, -1), (47, 33554432), (48, 4194304), (49, 67108864), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, 0), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, 0), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, 0), (30, 0), (31, -1), (32, 0), (33, 0), (34, -1), (35, -1), (36, -1), (37, -1), (38, 0), (39, 0), (40, 0), (41, 0), (42, 0), (43, 0), (44, -1), (45, -1), (46, -1), (47, 0), (48, 0), (49, 0), (50, -1), (51, -1), (52, -1)]

Covered at level 9 : {32, 33, 38, 39, 40, 41, 9, 42, 43, 47, 48, 49, 23, 29, 30}

After reduction : 
 pending  : []
 solution : [6, 1, 17, 8]


Before reduction : 
 pending  : []
 solution : [6, 1, 17, 8]

Essensial at level 9 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, 0), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, 0), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, 0), (30, 0), (31, -1), (32, 0), (33, 0), (34, -1), (35, -1), (36, -1), (37, -1), (38, 0), (39, 0), (40, 0), (41, 0), (42, 0), (43, 0), (44, -1), (45, -1), (46, -1), (47, 0), (48, 0), (49, 0), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 9 : set()

After reduction : 
 pending  : []
 solution : [6, 1, 17, 8]


Solution : [6, 1, 17, 8] has cost 22.


Before backtrack at level 9
 pending : []
 solution : [6, 1, 17, 8]

After backtrack at level 9
 pending : [40, 41, 9, 29, 32, 38, 39, 42, 43, 47, 48, 49, 30, 33, 23]
 solution : [6, 1, 17, 8]


Invert decision for 8 at level 8


New level: 9
 pending : [40, 41, 9, 29, 32, 38, 39, 42, 43, 47, 48, 49, 30, 33, 23]
 solution : [6, 1, 17]


Before reduction : 
 pending  : [40, 41, 9, 29, 32, 38, 39, 42, 43, 47, 48, 49, 30, 33, 23]
 solution : [6, 1, 17]

Essensial at level 9 : {23}

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, 0), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, 0), (30, 0), (31, -1), (32, 0), (33, 0), (34, -1), (35, -1), (36, -1), (37, -1), (38, 0), (39, 0), (40, 0), (41, 0), (42, 0), (43, 0), (44, -1), (45, -1), (46, -1), (47, 0), (48, 0), (49, 0), (50, -1), (51, -1), (52, -1)]

Covered at level 9 : {32, 33, 38, 39, 40, 41, 9, 42, 43, 47, 48, 49, 29, 30}

After reduction : 
 pending  : []
 solution : [6, 1, 17, 23]


Before reduction : 
 pending  : []
 solution : [6, 1, 17, 23]

Essensial at level 9 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, 0), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, 0), (30, 0), (31, -1), (32, 0), (33, 0), (34, -1), (35, -1), (36, -1), (37, -1), (38, 0), (39, 0), (40, 0), (41, 0), (42, 0), (43, 0), (44, -1), (45, -1), (46, -1), (47, 0), (48, 0), (49, 0), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 9 : set()

After reduction : 
 pending  : []
 solution : [6, 1, 17, 23]


Solution : [6, 1, 17, 23] has cost 25.


Before backtrack at level 9
 pending : []
 solution : [6, 1, 17, 23]

After backtrack at level 9
 pending : [23, 40, 41, 9, 29, 32, 38, 39, 42, 43, 47, 48, 49, 30, 33]
 solution : [6, 1, 17]


Before backtrack at level 8
 pending : [23, 40, 41, 9, 29, 32, 38, 39, 42, 43, 47, 48, 49, 30, 33]
 solution : [6, 1, 17]

After backtrack at level 8
 pending : [23, 40, 41, 9, 29, 32, 38, 39, 42, 43, 47, 48, 49, 30, 33, 25, 37, 0, 16, 19, 22, 20, 15, 21, 14, 18, 8]
 solution : [6, 1, 17]


Invert decision for 17 at level 7


New level: 8
 pending : [23, 40, 41, 9, 29, 32, 38, 39, 42, 43, 47, 48, 49, 30, 33, 25, 37, 0, 16, 19, 22, 20, 15, 21, 14, 18, 8]
 solution : [6, 1]


Before reduction : 
 pending  : [23, 40, 41, 9, 29, 32, 38, 39, 42, 43, 47, 48, 49, 30, 33, 25, 37, 0, 16, 19, 22, 20, 15, 21, 14, 18, 8]
 solution : [6, 1]

Essensial at level 8 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, 262144), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, 134217728), (9, 1048576), (10, -1), (11, -1), (12, -1), (13, -1), (14, 16777216), (15, 8388608), (16, 393216), (17, -1), (18, 268435456), (19, 131072), (20, 2097152), (21, 4194304), (22, 65536), (23, 134217728), (24, -1), (25, 1048576), (26, -1), (27, -1), (28, -1), (29, 16384), (30, 32768), (31, -1), (32, 1048576), (33, 4194304), (34, -1), (35, -1), (36, -1), (37, 1048576), (38, 134217728), (39, 16384), (40, 67108864), (41, 268435456), (42, 524288), (43, 524288), (44, -1), (45, -1), (46, -1), (47, 67108864), (48, 16777216), (49, 67108864), (50, -1), (51, -1), (52, -1)]

Covered at level 8 : set()

After reduction : 
 pending  : [23, 40, 41, 9, 29, 32, 38, 39, 42, 43, 47, 48, 49, 30, 33, 25, 37, 0, 16, 19, 22, 20, 15, 21, 14, 18, 8]
 solution : [6, 1]


Solution : [6, 1] has cost 11.


Decide in level 8 among pending : [23, 40, 41, 9, 29, 32, 38, 39, 42, 43, 47, 48, 49, 30, 33, 25, 37, 0, 16, 19, 22, 20, 15, 21, 14, 18, 8]

Coverage : [(0, 262144), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, 134217728), (9, 1048576), (10, -1), (11, -1), (12, -1), (13, -1), (14, 16777216), (15, 8388608), (16, 393216), (17, -1), (18, 268435456), (19, 131072), (20, 2097152), (21, 4194304), (22, 65536), (23, 134217728), (24, -1), (25, 1048576), (26, -1), (27, -1), (28, -1), (29, 16384), (30, 32768), (31, -1), (32, 1048576), (33, 4194304), (34, -1), (35, -1), (36, -1), (37, 1048576), (38, 134217728), (39, 16384), (40, 67108864), (41, 268435456), (42, 524288), (43, 524288), (44, -1), (45, -1), (46, -1), (47, 67108864), (48, 16777216), (49, 67108864), (50, -1), (51, -1), (52, -1)]

Decide 41 with phase True at level 8

After decision at level 8
 pending : [23, 40, 9, 29, 32, 38, 39, 42, 43, 47, 48, 49, 30, 33, 25, 37, 0, 16, 19, 22, 20, 15, 21, 14, 18, 8]
 solution : [6, 1, 41]


New level: 9
 pending : [23, 40, 9, 29, 32, 38, 39, 42, 43, 47, 48, 49, 30, 33, 25, 37, 0, 16, 19, 22, 20, 15, 21, 14, 18, 8]
 solution : [6, 1, 41]


Before reduction : 
 pending  : [23, 40, 9, 29, 32, 38, 39, 42, 43, 47, 48, 49, 30, 33, 25, 37, 0, 16, 19, 22, 20, 15, 21, 14, 18, 8]
 solution : [6, 1, 41]

Essensial at level 9 : set()

Before removed
 coverage : [(0, 262144), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, 134217728), (9, 1048576), (10, -1), (11, -1), (12, -1), (13, -1), (14, 16777216), (15, 8388608), (16, 393216), (17, -1), (18, 268435456), (19, 131072), (20, 2097152), (21, 4194304), (22, 65536), (23, 134217728), (24, -1), (25, 1048576), (26, -1), (27, -1), (28, -1), (29, 16384), (30, 32768), (31, -1), (32, 1048576), (33, 4194304), (34, -1), (35, -1), (36, -1), (37, 1048576), (38, 134217728), (39, 16384), (40, 67108864), (41, 268435456), (42, 524288), (43, 524288), (44, -1), (45, -1), (46, -1), (47, 67108864), (48, 16777216), (49, 67108864), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, 262144), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, 134217728), (9, 1048576), (10, -1), (11, -1), (12, -1), (13, -1), (14, 16777216), (15, 8388608), (16, 393216), (17, -1), (18, 268435456), (19, 131072), (20, 2097152), (21, 4194304), (22, 65536), (23, 134217728), (24, -1), (25, 1048576), (26, -1), (27, -1), (28, -1), (29, 16384), (30, 16384), (31, -1), (32, 1048576), (33, 2097152), (34, -1), (35, -1), (36, -1), (37, 1048576), (38, 134217728), (39, 16384), (40, 33554432), (41, -1), (42, 524288), (43, 524288), (44, -1), (45, -1), (46, -1), (47, 67108864), (48, 16777216), (49, 67108864), (50, -1), (51, -1), (52, -1)]

Covered at level 9 : set()

After reduction : 
 pending  : [23, 40, 9, 29, 32, 38, 39, 42, 43, 47, 48, 49, 30, 33, 25, 37, 0, 16, 19, 22, 20, 15, 21, 14, 18, 8]
 solution : [6, 1, 41]


Solution : [6, 1, 41] has cost 25.


Before backtrack at level 9
 pending : [23, 40, 9, 29, 32, 38, 39, 42, 43, 47, 48, 49, 30, 33, 25, 37, 0, 16, 19, 22, 20, 15, 21, 14, 18, 8]
 solution : [6, 1, 41]

After backtrack at level 9
 pending : [23, 40, 9, 29, 32, 38, 39, 42, 43, 47, 48, 49, 30, 33, 25, 37, 0, 16, 19, 22, 20, 15, 21, 14, 18, 8]
 solution : [6, 1, 41]


Invert decision for 41 at level 8


New level: 9
 pending : [23, 40, 9, 29, 32, 38, 39, 42, 43, 47, 48, 49, 30, 33, 25, 37, 0, 16, 19, 22, 20, 15, 21, 14, 18, 8]
 solution : [6, 1]


Before reduction : 
 pending  : [23, 40, 9, 29, 32, 38, 39, 42, 43, 47, 48, 49, 30, 33, 25, 37, 0, 16, 19, 22, 20, 15, 21, 14, 18, 8]
 solution : [6, 1]

Essensial at level 9 : set()

Before removed
 coverage : [(0, 262144), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, 134217728), (9, 1048576), (10, -1), (11, -1), (12, -1), (13, -1), (14, 16777216), (15, 8388608), (16, 393216), (17, -1), (18, 268435456), (19, 131072), (20, 2097152), (21, 4194304), (22, 65536), (23, 134217728), (24, -1), (25, 1048576), (26, -1), (27, -1), (28, -1), (29, 16384), (30, 16384), (31, -1), (32, 1048576), (33, 2097152), (34, -1), (35, -1), (36, -1), (37, 1048576), (38, 134217728), (39, 16384), (40, 33554432), (41, -1), (42, 524288), (43, 524288), (44, -1), (45, -1), (46, -1), (47, 67108864), (48, 16777216), (49, 67108864), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, 262144), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, 134217728), (9, 1048576), (10, -1), (11, -1), (12, -1), (13, -1), (14, 16777216), (15, 8388608), (16, 393216), (17, -1), (18, 268435456), (19, 131072), (20, 2097152), (21, 4194304), (22, 65536), (23, 134217728), (24, -1), (25, 1048576), (26, -1), (27, -1), (28, -1), (29, 16384), (30, 32768), (31, -1), (32, 1048576), (33, 4194304), (34, -1), (35, -1), (36, -1), (37, 1048576), (38, 134217728), (39, 16384), (40, 67108864), (41, -1), (42, 524288), (43, 524288), (44, -1), (45, -1), (46, -1), (47, 67108864), (48, 16777216), (49, 67108864), (50, -1), (51, -1), (52, -1)]

Covered at level 9 : set()

After reduction : 
 pending  : [23, 40, 9, 29, 32, 38, 39, 42, 43, 47, 48, 49, 30, 33, 25, 37, 0, 16, 19, 22, 20, 15, 21, 14, 18, 8]
 solution : [6, 1]


Solution : [6, 1] has cost 11.


Decide in level 9 among pending : [23, 40, 9, 29, 32, 38, 39, 42, 43, 47, 48, 49, 30, 33, 25, 37, 0, 16, 19, 22, 20, 15, 21, 14, 18, 8]

Coverage : [(0, 262144), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, 134217728), (9, 1048576), (10, -1), (11, -1), (12, -1), (13, -1), (14, 16777216), (15, 8388608), (16, 393216), (17, -1), (18, 268435456), (19, 131072), (20, 2097152), (21, 4194304), (22, 65536), (23, 134217728), (24, -1), (25, 1048576), (26, -1), (27, -1), (28, -1), (29, 16384), (30, 32768), (31, -1), (32, 1048576), (33, 4194304), (34, -1), (35, -1), (36, -1), (37, 1048576), (38, 134217728), (39, 16384), (40, 67108864), (41, -1), (42, 524288), (43, 524288), (44, -1), (45, -1), (46, -1), (47, 67108864), (48, 16777216), (49, 67108864), (50, -1), (51, -1), (52, -1)]

Decide 18 with phase True at level 9

After decision at level 9
 pending : [23, 40, 9, 29, 32, 38, 39, 42, 43, 47, 48, 49, 30, 33, 25, 37, 0, 16, 19, 22, 20, 15, 21, 14, 8]
 solution : [6, 1, 18]


New level: 10
 pending : [23, 40, 9, 29, 32, 38, 39, 42, 43, 47, 48, 49, 30, 33, 25, 37, 0, 16, 19, 22, 20, 15, 21, 14, 8]
 solution : [6, 1, 18]


Before reduction : 
 pending  : [23, 40, 9, 29, 32, 38, 39, 42, 43, 47, 48, 49, 30, 33, 25, 37, 0, 16, 19, 22, 20, 15, 21, 14, 8]
 solution : [6, 1, 18]

Essensial at level 10 : set()

Before removed
 coverage : [(0, 262144), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, 134217728), (9, 1048576), (10, -1), (11, -1), (12, -1), (13, -1), (14, 16777216), (15, 8388608), (16, 393216), (17, -1), (18, 268435456), (19, 131072), (20, 2097152), (21, 4194304), (22, 65536), (23, 134217728), (24, -1), (25, 1048576), (26, -1), (27, -1), (28, -1), (29, 16384), (30, 32768), (31, -1), (32, 1048576), (33, 4194304), (34, -1), (35, -1), (36, -1), (37, 1048576), (38, 134217728), (39, 16384), (40, 67108864), (41, -1), (42, 524288), (43, 524288), (44, -1), (45, -1), (46, -1), (47, 67108864), (48, 16777216), (49, 67108864), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, 0), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, 134217728), (9, 262144), (10, -1), (11, -1), (12, -1), (13, -1), (14, 0), (15, 0), (16, 0), (17, -1), (18, -1), (19, 0), (20, 0), (21, 0), (22, 0), (23, 134217728), (24, -1), (25, 0), (26, -1), (27, -1), (28, -1), (29, 4096), (30, 8192), (31, -1), (32, 524288), (33, 4194304), (34, -1), (35, -1), (36, -1), (37, 0), (38, 67108864), (39, 2048), (40, 2048), (41, -1), (42, 262144), (43, 262144), (44, -1), (45, -1), (46, -1), (47, 67108864), (48, 16777216), (49, 67108864), (50, -1), (51, -1), (52, -1)]

Covered at level 10 : {0, 37, 14, 15, 16, 19, 20, 21, 22, 25}

After reduction : 
 pending  : [23, 40, 9, 29, 32, 38, 39, 42, 43, 47, 48, 49, 30, 33, 8]
 solution : [6, 1, 18]


Before reduction : 
 pending  : [23, 40, 9, 29, 32, 38, 39, 42, 43, 47, 48, 49, 30, 33, 8]
 solution : [6, 1, 18]

Essensial at level 10 : set()

Before removed
 coverage : [(0, 0), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, 134217728), (9, 262144), (10, -1), (11, -1), (12, -1), (13, -1), (14, 0), (15, 0), (16, 0), (17, -1), (18, -1), (19, 0), (20, 0), (21, 0), (22, 0), (23, 134217728), (24, -1), (25, 0), (26, -1), (27, -1), (28, -1), (29, 4096), (30, 8192), (31, -1), (32, 524288), (33, 4194304), (34, -1), (35, -1), (36, -1), (37, 0), (38, 67108864), (39, 2048), (40, 2048), (41, -1), (42, 262144), (43, 262144), (44, -1), (45, -1), (46, -1), (47, 67108864), (48, 16777216), (49, 67108864), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, 134217728), (9, 262144), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, 134217728), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, 4096), (30, 8192), (31, -1), (32, 524288), (33, 4194304), (34, -1), (35, -1), (36, -1), (37, -1), (38, 67108864), (39, 2048), (40, 2048), (41, -1), (42, 262144), (43, 262144), (44, -1), (45, -1), (46, -1), (47, 67108864), (48, 16777216), (49, 67108864), (50, -1), (51, -1), (52, -1)]

Covered at level 10 : set()

After reduction : 
 pending  : [23, 40, 9, 29, 32, 38, 39, 42, 43, 47, 48, 49, 30, 33, 8]
 solution : [6, 1, 18]


Solution : [6, 1, 18] has cost 18.


Decide in level 10 among pending : [23, 40, 9, 29, 32, 38, 39, 42, 43, 47, 48, 49, 30, 33, 8]

Coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, 134217728), (9, 262144), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, 134217728), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, 4096), (30, 8192), (31, -1), (32, 524288), (33, 4194304), (34, -1), (35, -1), (36, -1), (37, -1), (38, 67108864), (39, 2048), (40, 2048), (41, -1), (42, 262144), (43, 262144), (44, -1), (45, -1), (46, -1), (47, 67108864), (48, 16777216), (49, 67108864), (50, -1), (51, -1), (52, -1)]

Decide 23 with phase True at level 10

After decision at level 10
 pending : [40, 9, 29, 32, 38, 39, 42, 43, 47, 48, 49, 30, 33, 8]
 solution : [6, 1, 18, 23]


New level: 11
 pending : [40, 9, 29, 32, 38, 39, 42, 43, 47, 48, 49, 30, 33, 8]
 solution : [6, 1, 18, 23]


Before reduction : 
 pending  : [40, 9, 29, 32, 38, 39, 42, 43, 47, 48, 49, 30, 33, 8]
 solution : [6, 1, 18, 23]

Essensial at level 11 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, 134217728), (9, 262144), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, 134217728), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, 4096), (30, 8192), (31, -1), (32, 524288), (33, 4194304), (34, -1), (35, -1), (36, -1), (37, -1), (38, 67108864), (39, 2048), (40, 2048), (41, -1), (42, 262144), (43, 262144), (44, -1), (45, -1), (46, -1), (47, 67108864), (48, 16777216), (49, 67108864), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, 0), (9, 0), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, 0), (30, 0), (31, -1), (32, 0), (33, 0), (34, -1), (35, -1), (36, -1), (37, -1), (38, 0), (39, 0), (40, 0), (41, -1), (42, 0), (43, 0), (44, -1), (45, -1), (46, -1), (47, 0), (48, 0), (49, 0), (50, -1), (51, -1), (52, -1)]

Covered at level 11 : {32, 33, 38, 39, 40, 9, 42, 43, 8, 47, 48, 49, 29, 30}

After reduction : 
 pending  : []
 solution : [6, 1, 18, 23]


Before reduction : 
 pending  : []
 solution : [6, 1, 18, 23]

Essensial at level 11 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, 0), (9, 0), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, 0), (30, 0), (31, -1), (32, 0), (33, 0), (34, -1), (35, -1), (36, -1), (37, -1), (38, 0), (39, 0), (40, 0), (41, -1), (42, 0), (43, 0), (44, -1), (45, -1), (46, -1), (47, 0), (48, 0), (49, 0), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 11 : set()

After reduction : 
 pending  : []
 solution : [6, 1, 18, 23]


Solution : [6, 1, 18, 23] has cost 25.


Before backtrack at level 11
 pending : []
 solution : [6, 1, 18, 23]

After backtrack at level 11
 pending : [40, 9, 29, 32, 38, 39, 42, 43, 47, 48, 49, 30, 33, 8]
 solution : [6, 1, 18, 23]


Invert decision for 23 at level 10


New level: 11
 pending : [40, 9, 29, 32, 38, 39, 42, 43, 47, 48, 49, 30, 33, 8]
 solution : [6, 1, 18]


Before reduction : 
 pending  : [40, 9, 29, 32, 38, 39, 42, 43, 47, 48, 49, 30, 33, 8]
 solution : [6, 1, 18]

Essensial at level 11 : {8}

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, 0), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, 0), (30, 0), (31, -1), (32, 0), (33, 0), (34, -1), (35, -1), (36, -1), (37, -1), (38, 0), (39, 0), (40, 0), (41, -1), (42, 0), (43, 0), (44, -1), (45, -1), (46, -1), (47, 0), (48, 0), (49, 0), (50, -1), (51, -1), (52, -1)]

Covered at level 11 : {32, 33, 38, 39, 40, 9, 42, 43, 47, 48, 49, 29, 30}

After reduction : 
 pending  : []
 solution : [6, 1, 18, 8]


Before reduction : 
 pending  : []
 solution : [6, 1, 18, 8]

Essensial at level 11 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, 0), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, 0), (30, 0), (31, -1), (32, 0), (33, 0), (34, -1), (35, -1), (36, -1), (37, -1), (38, 0), (39, 0), (40, 0), (41, -1), (42, 0), (43, 0), (44, -1), (45, -1), (46, -1), (47, 0), (48, 0), (49, 0), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 11 : set()

After reduction : 
 pending  : []
 solution : [6, 1, 18, 8]


Solution : [6, 1, 18, 8] has cost 22.


Before backtrack at level 11
 pending : []
 solution : [6, 1, 18, 8]

After backtrack at level 11
 pending : [8, 40, 9, 29, 32, 38, 39, 42, 43, 47, 48, 49, 30, 33]
 solution : [6, 1, 18]


Before backtrack at level 10
 pending : [8, 40, 9, 29, 32, 38, 39, 42, 43, 47, 48, 49, 30, 33]
 solution : [6, 1, 18]

After backtrack at level 10
 pending : [8, 40, 9, 29, 32, 38, 39, 42, 43, 47, 48, 49, 30, 33, 25, 37, 0, 16, 19, 22, 20, 15, 21, 14, 23]
 solution : [6, 1, 18]


Invert decision for 18 at level 9


New level: 10
 pending : [8, 40, 9, 29, 32, 38, 39, 42, 43, 47, 48, 49, 30, 33, 25, 37, 0, 16, 19, 22, 20, 15, 21, 14, 23]
 solution : [6, 1]


Before reduction : 
 pending  : [8, 40, 9, 29, 32, 38, 39, 42, 43, 47, 48, 49, 30, 33, 25, 37, 0, 16, 19, 22, 20, 15, 21, 14, 23]
 solution : [6, 1]

Essensial at level 10 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, 262144), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, 134217728), (9, 1048576), (10, -1), (11, -1), (12, -1), (13, -1), (14, 16777216), (15, 8388608), (16, 393216), (17, -1), (18, -1), (19, 131072), (20, 2097152), (21, 4194304), (22, 65536), (23, 134217728), (24, -1), (25, 1048576), (26, -1), (27, -1), (28, -1), (29, 16384), (30, 32768), (31, -1), (32, 1048576), (33, 4194304), (34, -1), (35, -1), (36, -1), (37, 1048576), (38, 134217728), (39, 16384), (40, 67108864), (41, -1), (42, 524288), (43, 524288), (44, -1), (45, -1), (46, -1), (47, 67108864), (48, 16777216), (49, 67108864), (50, -1), (51, -1), (52, -1)]

Covered at level 10 : set()

After reduction : 
 pending  : [8, 40, 9, 29, 32, 38, 39, 42, 43, 47, 48, 49, 30, 33, 25, 37, 0, 16, 19, 22, 20, 15, 21, 14, 23]
 solution : [6, 1]


Solution : [6, 1] has cost 11.


Decide in level 10 among pending : [8, 40, 9, 29, 32, 38, 39, 42, 43, 47, 48, 49, 30, 33, 25, 37, 0, 16, 19, 22, 20, 15, 21, 14, 23]

Coverage : [(0, 262144), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, 134217728), (9, 1048576), (10, -1), (11, -1), (12, -1), (13, -1), (14, 16777216), (15, 8388608), (16, 393216), (17, -1), (18, -1), (19, 131072), (20, 2097152), (21, 4194304), (22, 65536), (23, 134217728), (24, -1), (25, 1048576), (26, -1), (27, -1), (28, -1), (29, 16384), (30, 32768), (31, -1), (32, 1048576), (33, 4194304), (34, -1), (35, -1), (36, -1), (37, 1048576), (38, 134217728), (39, 16384), (40, 67108864), (41, -1), (42, 524288), (43, 524288), (44, -1), (45, -1), (46, -1), (47, 67108864), (48, 16777216), (49, 67108864), (50, -1), (51, -1), (52, -1)]

Decide 8 with phase True at level 10

After decision at level 10
 pending : [40, 9, 29, 32, 38, 39, 42, 43, 47, 48, 49, 30, 33, 25, 37, 0, 16, 19, 22, 20, 15, 21, 14, 23]
 solution : [6, 1, 8]


New level: 11
 pending : [40, 9, 29, 32, 38, 39, 42, 43, 47, 48, 49, 30, 33, 25, 37, 0, 16, 19, 22, 20, 15, 21, 14, 23]
 solution : [6, 1, 8]


Before reduction : 
 pending  : [40, 9, 29, 32, 38, 39, 42, 43, 47, 48, 49, 30, 33, 25, 37, 0, 16, 19, 22, 20, 15, 21, 14, 23]
 solution : [6, 1, 8]

Essensial at level 11 : set()

Before removed
 coverage : [(0, 262144), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, 134217728), (9, 1048576), (10, -1), (11, -1), (12, -1), (13, -1), (14, 16777216), (15, 8388608), (16, 393216), (17, -1), (18, -1), (19, 131072), (20, 2097152), (21, 4194304), (22, 65536), (23, 134217728), (24, -1), (25, 1048576), (26, -1), (27, -1), (28, -1), (29, 16384), (30, 32768), (31, -1), (32, 1048576), (33, 4194304), (34, -1), (35, -1), (36, -1), (37, 1048576), (38, 134217728), (39, 16384), (40, 67108864), (41, -1), (42, 524288), (43, 524288), (44, -1), (45, -1), (46, -1), (47, 67108864), (48, 16777216), (49, 67108864), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, 131072), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, 0), (10, -1), (11, -1), (12, -1), (13, -1), (14, 8388608), (15, 4194304), (16, 131072), (17, -1), (18, -1), (19, 65536), (20, 2097152), (21, 4194304), (22, 65536), (23, 0), (24, -1), (25, 524288), (26, -1), (27, -1), (28, -1), (29, 0), (30, 0), (31, -1), (32, 0), (33, 0), (34, -1), (35, -1), (36, -1), (37, 524288), (38, 0), (39, 0), (40, 32768), (41, -1), (42, 0), (43, 0), (44, -1), (45, -1), (46, -1), (47, 0), (48, 0), (49, 0), (50, -1), (51, -1), (52, -1)]

Covered at level 11 : {32, 33, 38, 39, 9, 42, 43, 47, 48, 49, 23, 29, 30}

After reduction : 
 pending  : [40, 25, 37, 0, 16, 19, 22, 20, 15, 21, 14]
 solution : [6, 1, 8]


Before reduction : 
 pending  : [40, 25, 37, 0, 16, 19, 22, 20, 15, 21, 14]
 solution : [6, 1, 8]

Essensial at level 11 : set()

Before removed
 coverage : [(0, 131072), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, 0), (10, -1), (11, -1), (12, -1), (13, -1), (14, 8388608), (15, 4194304), (16, 131072), (17, -1), (18, -1), (19, 65536), (20, 2097152), (21, 4194304), (22, 65536), (23, 0), (24, -1), (25, 524288), (26, -1), (27, -1), (28, -1), (29, 0), (30, 0), (31, -1), (32, 0), (33, 0), (34, -1), (35, -1), (36, -1), (37, 524288), (38, 0), (39, 0), (40, 32768), (41, -1), (42, 0), (43, 0), (44, -1), (45, -1), (46, -1), (47, 0), (48, 0), (49, 0), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, 131072), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 8388608), (15, 4194304), (16, 131072), (17, -1), (18, -1), (19, 65536), (20, 2097152), (21, 4194304), (22, 65536), (23, -1), (24, -1), (25, 524288), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, 524288), (38, -1), (39, -1), (40, 32768), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 11 : set()

After reduction : 
 pending  : [40, 25, 37, 0, 16, 19, 22, 20, 15, 21, 14]
 solution : [6, 1, 8]


Solution : [6, 1, 8] has cost 15.


Decide in level 11 among pending : [40, 25, 37, 0, 16, 19, 22, 20, 15, 21, 14]

Coverage : [(0, 131072), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 8388608), (15, 4194304), (16, 131072), (17, -1), (18, -1), (19, 65536), (20, 2097152), (21, 4194304), (22, 65536), (23, -1), (24, -1), (25, 524288), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, 524288), (38, -1), (39, -1), (40, 32768), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Decide 14 with phase True at level 11

After decision at level 11
 pending : [40, 25, 37, 0, 16, 19, 22, 20, 15, 21]
 solution : [6, 1, 8, 14]


New level: 12
 pending : [40, 25, 37, 0, 16, 19, 22, 20, 15, 21]
 solution : [6, 1, 8, 14]


Before reduction : 
 pending  : [40, 25, 37, 0, 16, 19, 22, 20, 15, 21]
 solution : [6, 1, 8, 14]

Essensial at level 12 : set()

Before removed
 coverage : [(0, 131072), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 8388608), (15, 4194304), (16, 131072), (17, -1), (18, -1), (19, 65536), (20, 2097152), (21, 4194304), (22, 65536), (23, -1), (24, -1), (25, 524288), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, 524288), (38, -1), (39, -1), (40, 32768), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, 0), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, 0), (16, 0), (17, -1), (18, -1), (19, 0), (20, 16384), (21, 65536), (22, 16384), (23, -1), (24, -1), (25, 2048), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, 2048), (38, -1), (39, -1), (40, 1024), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 12 : {0, 16, 19, 15}

After reduction : 
 pending  : [40, 25, 37, 22, 20, 21]
 solution : [6, 1, 8, 14]


Before reduction : 
 pending  : [40, 25, 37, 22, 20, 21]
 solution : [6, 1, 8, 14]

Essensial at level 12 : set()

Before removed
 coverage : [(0, 0), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, 0), (16, 0), (17, -1), (18, -1), (19, 0), (20, 16384), (21, 65536), (22, 16384), (23, -1), (24, -1), (25, 2048), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, 2048), (38, -1), (39, -1), (40, 1024), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, 16384), (21, 65536), (22, 16384), (23, -1), (24, -1), (25, 2048), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, 2048), (38, -1), (39, -1), (40, 1024), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 12 : set()

After reduction : 
 pending  : [40, 25, 37, 22, 20, 21]
 solution : [6, 1, 8, 14]


Solution : [6, 1, 8, 14] has cost 24.


Before backtrack at level 12
 pending : [40, 25, 37, 22, 20, 21]
 solution : [6, 1, 8, 14]

After backtrack at level 12
 pending : [40, 25, 37, 22, 20, 21, 0, 16, 19, 15]
 solution : [6, 1, 8, 14]


Invert decision for 14 at level 11


New level: 12
 pending : [40, 25, 37, 22, 20, 21, 0, 16, 19, 15]
 solution : [6, 1, 8]


Before reduction : 
 pending  : [40, 25, 37, 22, 20, 21, 0, 16, 19, 15]
 solution : [6, 1, 8]

Essensial at level 12 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, 16384), (21, 65536), (22, 16384), (23, -1), (24, -1), (25, 2048), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, 2048), (38, -1), (39, -1), (40, 1024), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, 131072), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, 4194304), (16, 131072), (17, -1), (18, -1), (19, 65536), (20, 2097152), (21, 4194304), (22, 65536), (23, -1), (24, -1), (25, 524288), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, 524288), (38, -1), (39, -1), (40, 32768), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 12 : set()

After reduction : 
 pending  : [40, 25, 37, 22, 20, 21, 0, 16, 19, 15]
 solution : [6, 1, 8]


Solution : [6, 1, 8] has cost 15.


Decide in level 12 among pending : [40, 25, 37, 22, 20, 21, 0, 16, 19, 15]

Coverage : [(0, 131072), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, 4194304), (16, 131072), (17, -1), (18, -1), (19, 65536), (20, 2097152), (21, 4194304), (22, 65536), (23, -1), (24, -1), (25, 524288), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, 524288), (38, -1), (39, -1), (40, 32768), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Decide 21 with phase True at level 12

After decision at level 12
 pending : [40, 25, 37, 22, 20, 0, 16, 19, 15]
 solution : [6, 1, 8, 21]


New level: 13
 pending : [40, 25, 37, 22, 20, 0, 16, 19, 15]
 solution : [6, 1, 8, 21]


Before reduction : 
 pending  : [40, 25, 37, 22, 20, 0, 16, 19, 15]
 solution : [6, 1, 8, 21]

Essensial at level 13 : set()

Before removed
 coverage : [(0, 131072), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, 4194304), (16, 131072), (17, -1), (18, -1), (19, 65536), (20, 2097152), (21, 4194304), (22, 65536), (23, -1), (24, -1), (25, 524288), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, 524288), (38, -1), (39, -1), (40, 32768), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, 65536), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, 1048576), (16, 65536), (17, -1), (18, -1), (19, 0), (20, 0), (21, -1), (22, 0), (23, -1), (24, -1), (25, 131072), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, 131072), (38, -1), (39, -1), (40, 512), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 13 : {19, 20, 22}

After reduction : 
 pending  : [40, 25, 37, 0, 16, 15]
 solution : [6, 1, 8, 21]


Before reduction : 
 pending  : [40, 25, 37, 0, 16, 15]
 solution : [6, 1, 8, 21]

Essensial at level 13 : set()

Before removed
 coverage : [(0, 65536), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, 1048576), (16, 65536), (17, -1), (18, -1), (19, 0), (20, 0), (21, -1), (22, 0), (23, -1), (24, -1), (25, 131072), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, 131072), (38, -1), (39, -1), (40, 512), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, 65536), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, 1048576), (16, 65536), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, 131072), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, 131072), (38, -1), (39, -1), (40, 512), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 13 : set()

After reduction : 
 pending  : [40, 25, 37, 0, 16, 15]
 solution : [6, 1, 8, 21]


Solution : [6, 1, 8, 21] has cost 22.


Before backtrack at level 13
 pending : [40, 25, 37, 0, 16, 15]
 solution : [6, 1, 8, 21]

After backtrack at level 13
 pending : [40, 25, 37, 0, 16, 15, 22, 20, 19]
 solution : [6, 1, 8, 21]


Invert decision for 21 at level 12


New level: 13
 pending : [40, 25, 37, 0, 16, 15, 22, 20, 19]
 solution : [6, 1, 8]


Before reduction : 
 pending  : [40, 25, 37, 0, 16, 15, 22, 20, 19]
 solution : [6, 1, 8]

Essensial at level 13 : set()

Before removed
 coverage : [(0, 65536), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, 1048576), (16, 65536), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, 131072), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, 131072), (38, -1), (39, -1), (40, 512), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, 131072), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, 4194304), (16, 131072), (17, -1), (18, -1), (19, 65536), (20, 2097152), (21, -1), (22, 65536), (23, -1), (24, -1), (25, 524288), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, 524288), (38, -1), (39, -1), (40, 32768), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 13 : set()

After reduction : 
 pending  : [40, 25, 37, 0, 16, 15, 22, 20, 19]
 solution : [6, 1, 8]


Solution : [6, 1, 8] has cost 15.


Decide in level 13 among pending : [40, 25, 37, 0, 16, 15, 22, 20, 19]

Coverage : [(0, 131072), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, 4194304), (16, 131072), (17, -1), (18, -1), (19, 65536), (20, 2097152), (21, -1), (22, 65536), (23, -1), (24, -1), (25, 524288), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, 524288), (38, -1), (39, -1), (40, 32768), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Decide 15 with phase True at level 13

After decision at level 13
 pending : [40, 25, 37, 0, 16, 22, 20, 19]
 solution : [6, 1, 8, 15]


New level: 14
 pending : [40, 25, 37, 0, 16, 22, 20, 19]
 solution : [6, 1, 8, 15]


Before reduction : 
 pending  : [40, 25, 37, 0, 16, 22, 20, 19]
 solution : [6, 1, 8, 15]

Essensial at level 14 : set()

Before removed
 coverage : [(0, 131072), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, 4194304), (16, 131072), (17, -1), (18, -1), (19, 65536), (20, 2097152), (21, -1), (22, 65536), (23, -1), (24, -1), (25, 524288), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, 524288), (38, -1), (39, -1), (40, 32768), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, 0), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, 0), (17, -1), (18, -1), (19, 0), (20, 16384), (21, -1), (22, 16384), (23, -1), (24, -1), (25, 2048), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, 2048), (38, -1), (39, -1), (40, 1024), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 14 : {0, 16, 19}

After reduction : 
 pending  : [40, 25, 37, 22, 20]
 solution : [6, 1, 8, 15]


Before reduction : 
 pending  : [40, 25, 37, 22, 20]
 solution : [6, 1, 8, 15]

Essensial at level 14 : set()

Before removed
 coverage : [(0, 0), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, 0), (17, -1), (18, -1), (19, 0), (20, 16384), (21, -1), (22, 16384), (23, -1), (24, -1), (25, 2048), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, 2048), (38, -1), (39, -1), (40, 1024), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, 16384), (21, -1), (22, 16384), (23, -1), (24, -1), (25, 2048), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, 2048), (38, -1), (39, -1), (40, 1024), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 14 : set()

After reduction : 
 pending  : [40, 25, 37, 22, 20]
 solution : [6, 1, 8, 15]


Solution : [6, 1, 8, 15] has cost 24.


Before backtrack at level 14
 pending : [40, 25, 37, 22, 20]
 solution : [6, 1, 8, 15]

After backtrack at level 14
 pending : [40, 25, 37, 22, 20, 0, 16, 19]
 solution : [6, 1, 8, 15]


Invert decision for 15 at level 13


New level: 14
 pending : [40, 25, 37, 22, 20, 0, 16, 19]
 solution : [6, 1, 8]


Before reduction : 
 pending  : [40, 25, 37, 22, 20, 0, 16, 19]
 solution : [6, 1, 8]

Essensial at level 14 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, 16384), (21, -1), (22, 16384), (23, -1), (24, -1), (25, 2048), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, 2048), (38, -1), (39, -1), (40, 1024), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, 131072), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, 131072), (17, -1), (18, -1), (19, 65536), (20, 2097152), (21, -1), (22, 65536), (23, -1), (24, -1), (25, 524288), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, 524288), (38, -1), (39, -1), (40, 32768), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 14 : set()

After reduction : 
 pending  : [40, 25, 37, 22, 20, 0, 16, 19]
 solution : [6, 1, 8]


Solution : [6, 1, 8] has cost 15.


Decide in level 14 among pending : [40, 25, 37, 22, 20, 0, 16, 19]

Coverage : [(0, 131072), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, 131072), (17, -1), (18, -1), (19, 65536), (20, 2097152), (21, -1), (22, 65536), (23, -1), (24, -1), (25, 524288), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, 524288), (38, -1), (39, -1), (40, 32768), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Decide 20 with phase True at level 14

After decision at level 14
 pending : [40, 25, 37, 22, 0, 16, 19]
 solution : [6, 1, 8, 20]


New level: 15
 pending : [40, 25, 37, 22, 0, 16, 19]
 solution : [6, 1, 8, 20]


Before reduction : 
 pending  : [40, 25, 37, 22, 0, 16, 19]
 solution : [6, 1, 8, 20]

Essensial at level 15 : set()

Before removed
 coverage : [(0, 131072), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, 131072), (17, -1), (18, -1), (19, 65536), (20, 2097152), (21, -1), (22, 65536), (23, -1), (24, -1), (25, 524288), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, 524288), (38, -1), (39, -1), (40, 32768), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, 65536), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, 65536), (17, -1), (18, -1), (19, 0), (20, -1), (21, -1), (22, 0), (23, -1), (24, -1), (25, 131072), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, 131072), (38, -1), (39, -1), (40, 512), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 15 : {19, 22}

After reduction : 
 pending  : [40, 25, 37, 0, 16]
 solution : [6, 1, 8, 20]


Before reduction : 
 pending  : [40, 25, 37, 0, 16]
 solution : [6, 1, 8, 20]

Essensial at level 15 : set()

Before removed
 coverage : [(0, 65536), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, 65536), (17, -1), (18, -1), (19, 0), (20, -1), (21, -1), (22, 0), (23, -1), (24, -1), (25, 131072), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, 131072), (38, -1), (39, -1), (40, 512), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, 65536), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, 65536), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, 131072), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, 131072), (38, -1), (39, -1), (40, 512), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 15 : set()

After reduction : 
 pending  : [40, 25, 37, 0, 16]
 solution : [6, 1, 8, 20]


Solution : [6, 1, 8, 20] has cost 22.


Before backtrack at level 15
 pending : [40, 25, 37, 0, 16]
 solution : [6, 1, 8, 20]

After backtrack at level 15
 pending : [40, 25, 37, 0, 16, 22, 19]
 solution : [6, 1, 8, 20]


Invert decision for 20 at level 14


New level: 15
 pending : [40, 25, 37, 0, 16, 22, 19]
 solution : [6, 1, 8]


Before reduction : 
 pending  : [40, 25, 37, 0, 16, 22, 19]
 solution : [6, 1, 8]

Essensial at level 15 : {22}

Before removed
 coverage : [(0, 65536), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, 65536), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, 131072), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, 131072), (38, -1), (39, -1), (40, 512), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, 131072), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, 131072), (17, -1), (18, -1), (19, 32768), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, 524288), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, 524288), (38, -1), (39, -1), (40, 32768), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 15 : set()

After reduction : 
 pending  : [40, 25, 37, 0, 16, 19]
 solution : [6, 1, 8, 22]


Before reduction : 
 pending  : [40, 25, 37, 0, 16, 19]
 solution : [6, 1, 8, 22]

Essensial at level 15 : set()

Before removed
 coverage : [(0, 131072), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, 131072), (17, -1), (18, -1), (19, 32768), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, 524288), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, 524288), (38, -1), (39, -1), (40, 32768), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, 131072), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, 131072), (17, -1), (18, -1), (19, 32768), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, 524288), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, 524288), (38, -1), (39, -1), (40, 32768), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 15 : set()

After reduction : 
 pending  : [40, 25, 37, 0, 16, 19]
 solution : [6, 1, 8, 22]


Solution : [6, 1, 8, 22] has cost 22.


Before backtrack at level 15
 pending : [40, 25, 37, 0, 16, 19]
 solution : [6, 1, 8, 22]

After backtrack at level 15
 pending : [40, 25, 37, 0, 16, 19, 22]
 solution : [6, 1, 8]


Before backtrack at level 14
 pending : [40, 25, 37, 0, 16, 19, 22]
 solution : [6, 1, 8]

After backtrack at level 14
 pending : [40, 25, 37, 0, 16, 19, 22, 20]
 solution : [6, 1, 8]


Before backtrack at level 13
 pending : [40, 25, 37, 0, 16, 19, 22, 20]
 solution : [6, 1, 8]

After backtrack at level 13
 pending : [40, 25, 37, 0, 16, 19, 22, 20, 15]
 solution : [6, 1, 8]


Before backtrack at level 12
 pending : [40, 25, 37, 0, 16, 19, 22, 20, 15]
 solution : [6, 1, 8]

After backtrack at level 12
 pending : [40, 25, 37, 0, 16, 19, 22, 20, 15, 21]
 solution : [6, 1, 8]


Before backtrack at level 11
 pending : [40, 25, 37, 0, 16, 19, 22, 20, 15, 21]
 solution : [6, 1, 8]

After backtrack at level 11
 pending : [40, 25, 37, 0, 16, 19, 22, 20, 15, 21, 9, 29, 32, 38, 39, 42, 43, 47, 48, 49, 30, 33, 23, 14]
 solution : [6, 1, 8]


Invert decision for 8 at level 10


New level: 11
 pending : [40, 25, 37, 0, 16, 19, 22, 20, 15, 21, 9, 29, 32, 38, 39, 42, 43, 47, 48, 49, 30, 33, 23, 14]
 solution : [6, 1]


Before reduction : 
 pending  : [40, 25, 37, 0, 16, 19, 22, 20, 15, 21, 9, 29, 32, 38, 39, 42, 43, 47, 48, 49, 30, 33, 23, 14]
 solution : [6, 1]

Essensial at level 11 : {23}

Before removed
 coverage : [(0, 131072), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, 131072), (17, -1), (18, -1), (19, 32768), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, 524288), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, 524288), (38, -1), (39, -1), (40, 32768), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, 131072), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, 0), (10, -1), (11, -1), (12, -1), (13, -1), (14, 8388608), (15, 4194304), (16, 131072), (17, -1), (18, -1), (19, 65536), (20, 2097152), (21, 4194304), (22, 65536), (23, -1), (24, -1), (25, 524288), (26, -1), (27, -1), (28, -1), (29, 0), (30, 0), (31, -1), (32, 0), (33, 0), (34, -1), (35, -1), (36, -1), (37, 524288), (38, 0), (39, 0), (40, 32768), (41, -1), (42, 0), (43, 0), (44, -1), (45, -1), (46, -1), (47, 0), (48, 0), (49, 0), (50, -1), (51, -1), (52, -1)]

Covered at level 11 : {32, 33, 38, 39, 9, 42, 43, 47, 48, 49, 29, 30}

After reduction : 
 pending  : [40, 25, 37, 0, 16, 19, 22, 20, 15, 21, 14]
 solution : [6, 1, 23]


Before reduction : 
 pending  : [40, 25, 37, 0, 16, 19, 22, 20, 15, 21, 14]
 solution : [6, 1, 23]

Essensial at level 11 : set()

Before removed
 coverage : [(0, 131072), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, 0), (10, -1), (11, -1), (12, -1), (13, -1), (14, 8388608), (15, 4194304), (16, 131072), (17, -1), (18, -1), (19, 65536), (20, 2097152), (21, 4194304), (22, 65536), (23, -1), (24, -1), (25, 524288), (26, -1), (27, -1), (28, -1), (29, 0), (30, 0), (31, -1), (32, 0), (33, 0), (34, -1), (35, -1), (36, -1), (37, 524288), (38, 0), (39, 0), (40, 32768), (41, -1), (42, 0), (43, 0), (44, -1), (45, -1), (46, -1), (47, 0), (48, 0), (49, 0), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, 131072), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 8388608), (15, 4194304), (16, 131072), (17, -1), (18, -1), (19, 65536), (20, 2097152), (21, 4194304), (22, 65536), (23, -1), (24, -1), (25, 524288), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, 524288), (38, -1), (39, -1), (40, 32768), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 11 : set()

After reduction : 
 pending  : [40, 25, 37, 0, 16, 19, 22, 20, 15, 21, 14]
 solution : [6, 1, 23]


Solution : [6, 1, 23] has cost 18.


Decide in level 11 among pending : [40, 25, 37, 0, 16, 19, 22, 20, 15, 21, 14]

Coverage : [(0, 131072), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 8388608), (15, 4194304), (16, 131072), (17, -1), (18, -1), (19, 65536), (20, 2097152), (21, 4194304), (22, 65536), (23, -1), (24, -1), (25, 524288), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, 524288), (38, -1), (39, -1), (40, 32768), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Decide 14 with phase True at level 11

After decision at level 11
 pending : [40, 25, 37, 0, 16, 19, 22, 20, 15, 21]
 solution : [6, 1, 23, 14]


New level: 12
 pending : [40, 25, 37, 0, 16, 19, 22, 20, 15, 21]
 solution : [6, 1, 23, 14]


Before reduction : 
 pending  : [40, 25, 37, 0, 16, 19, 22, 20, 15, 21]
 solution : [6, 1, 23, 14]

Essensial at level 12 : set()

Before removed
 coverage : [(0, 131072), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 8388608), (15, 4194304), (16, 131072), (17, -1), (18, -1), (19, 65536), (20, 2097152), (21, 4194304), (22, 65536), (23, -1), (24, -1), (25, 524288), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, 524288), (38, -1), (39, -1), (40, 32768), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, 0), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, 0), (16, 0), (17, -1), (18, -1), (19, 0), (20, 16384), (21, 65536), (22, 16384), (23, -1), (24, -1), (25, 2048), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, 2048), (38, -1), (39, -1), (40, 1024), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 12 : {0, 16, 19, 15}

After reduction : 
 pending  : [40, 25, 37, 22, 20, 21]
 solution : [6, 1, 23, 14]


Before reduction : 
 pending  : [40, 25, 37, 22, 20, 21]
 solution : [6, 1, 23, 14]

Essensial at level 12 : set()

Before removed
 coverage : [(0, 0), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, 0), (16, 0), (17, -1), (18, -1), (19, 0), (20, 16384), (21, 65536), (22, 16384), (23, -1), (24, -1), (25, 2048), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, 2048), (38, -1), (39, -1), (40, 1024), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, 16384), (21, 65536), (22, 16384), (23, -1), (24, -1), (25, 2048), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, 2048), (38, -1), (39, -1), (40, 1024), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 12 : set()

After reduction : 
 pending  : [40, 25, 37, 22, 20, 21]
 solution : [6, 1, 23, 14]


Solution : [6, 1, 23, 14] has cost 27.


Before backtrack at level 12
 pending : [40, 25, 37, 22, 20, 21]
 solution : [6, 1, 23, 14]

After backtrack at level 12
 pending : [40, 25, 37, 22, 20, 21, 0, 16, 19, 15]
 solution : [6, 1, 23, 14]


Invert decision for 14 at level 11


New level: 12
 pending : [40, 25, 37, 22, 20, 21, 0, 16, 19, 15]
 solution : [6, 1, 23]


Before reduction : 
 pending  : [40, 25, 37, 22, 20, 21, 0, 16, 19, 15]
 solution : [6, 1, 23]

Essensial at level 12 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, 16384), (21, 65536), (22, 16384), (23, -1), (24, -1), (25, 2048), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, 2048), (38, -1), (39, -1), (40, 1024), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, 131072), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, 4194304), (16, 131072), (17, -1), (18, -1), (19, 65536), (20, 2097152), (21, 4194304), (22, 65536), (23, -1), (24, -1), (25, 524288), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, 524288), (38, -1), (39, -1), (40, 32768), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 12 : set()

After reduction : 
 pending  : [40, 25, 37, 22, 20, 21, 0, 16, 19, 15]
 solution : [6, 1, 23]


Solution : [6, 1, 23] has cost 18.


Decide in level 12 among pending : [40, 25, 37, 22, 20, 21, 0, 16, 19, 15]

Coverage : [(0, 131072), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, 4194304), (16, 131072), (17, -1), (18, -1), (19, 65536), (20, 2097152), (21, 4194304), (22, 65536), (23, -1), (24, -1), (25, 524288), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, 524288), (38, -1), (39, -1), (40, 32768), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Decide 21 with phase True at level 12

After decision at level 12
 pending : [40, 25, 37, 22, 20, 0, 16, 19, 15]
 solution : [6, 1, 23, 21]


New level: 13
 pending : [40, 25, 37, 22, 20, 0, 16, 19, 15]
 solution : [6, 1, 23, 21]


Before reduction : 
 pending  : [40, 25, 37, 22, 20, 0, 16, 19, 15]
 solution : [6, 1, 23, 21]

Essensial at level 13 : set()

Before removed
 coverage : [(0, 131072), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, 4194304), (16, 131072), (17, -1), (18, -1), (19, 65536), (20, 2097152), (21, 4194304), (22, 65536), (23, -1), (24, -1), (25, 524288), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, 524288), (38, -1), (39, -1), (40, 32768), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, 65536), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, 1048576), (16, 65536), (17, -1), (18, -1), (19, 0), (20, 0), (21, -1), (22, 0), (23, -1), (24, -1), (25, 131072), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, 131072), (38, -1), (39, -1), (40, 512), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 13 : {19, 20, 22}

After reduction : 
 pending  : [40, 25, 37, 0, 16, 15]
 solution : [6, 1, 23, 21]


Before reduction : 
 pending  : [40, 25, 37, 0, 16, 15]
 solution : [6, 1, 23, 21]

Essensial at level 13 : set()

Before removed
 coverage : [(0, 65536), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, 1048576), (16, 65536), (17, -1), (18, -1), (19, 0), (20, 0), (21, -1), (22, 0), (23, -1), (24, -1), (25, 131072), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, 131072), (38, -1), (39, -1), (40, 512), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, 65536), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, 1048576), (16, 65536), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, 131072), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, 131072), (38, -1), (39, -1), (40, 512), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 13 : set()

After reduction : 
 pending  : [40, 25, 37, 0, 16, 15]
 solution : [6, 1, 23, 21]


Solution : [6, 1, 23, 21] has cost 25.


Before backtrack at level 13
 pending : [40, 25, 37, 0, 16, 15]
 solution : [6, 1, 23, 21]

After backtrack at level 13
 pending : [40, 25, 37, 0, 16, 15, 22, 20, 19]
 solution : [6, 1, 23, 21]


Invert decision for 21 at level 12


New level: 13
 pending : [40, 25, 37, 0, 16, 15, 22, 20, 19]
 solution : [6, 1, 23]


Before reduction : 
 pending  : [40, 25, 37, 0, 16, 15, 22, 20, 19]
 solution : [6, 1, 23]

Essensial at level 13 : set()

Before removed
 coverage : [(0, 65536), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, 1048576), (16, 65536), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, 131072), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, 131072), (38, -1), (39, -1), (40, 512), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, 131072), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, 4194304), (16, 131072), (17, -1), (18, -1), (19, 65536), (20, 2097152), (21, -1), (22, 65536), (23, -1), (24, -1), (25, 524288), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, 524288), (38, -1), (39, -1), (40, 32768), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 13 : set()

After reduction : 
 pending  : [40, 25, 37, 0, 16, 15, 22, 20, 19]
 solution : [6, 1, 23]


Solution : [6, 1, 23] has cost 18.


Decide in level 13 among pending : [40, 25, 37, 0, 16, 15, 22, 20, 19]

Coverage : [(0, 131072), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, 4194304), (16, 131072), (17, -1), (18, -1), (19, 65536), (20, 2097152), (21, -1), (22, 65536), (23, -1), (24, -1), (25, 524288), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, 524288), (38, -1), (39, -1), (40, 32768), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Decide 15 with phase True at level 13

After decision at level 13
 pending : [40, 25, 37, 0, 16, 22, 20, 19]
 solution : [6, 1, 23, 15]


New level: 14
 pending : [40, 25, 37, 0, 16, 22, 20, 19]
 solution : [6, 1, 23, 15]


Before reduction : 
 pending  : [40, 25, 37, 0, 16, 22, 20, 19]
 solution : [6, 1, 23, 15]

Essensial at level 14 : set()

Before removed
 coverage : [(0, 131072), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, 4194304), (16, 131072), (17, -1), (18, -1), (19, 65536), (20, 2097152), (21, -1), (22, 65536), (23, -1), (24, -1), (25, 524288), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, 524288), (38, -1), (39, -1), (40, 32768), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, 0), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, 0), (17, -1), (18, -1), (19, 0), (20, 16384), (21, -1), (22, 16384), (23, -1), (24, -1), (25, 2048), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, 2048), (38, -1), (39, -1), (40, 1024), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 14 : {0, 16, 19}

After reduction : 
 pending  : [40, 25, 37, 22, 20]
 solution : [6, 1, 23, 15]


Before reduction : 
 pending  : [40, 25, 37, 22, 20]
 solution : [6, 1, 23, 15]

Essensial at level 14 : set()

Before removed
 coverage : [(0, 0), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, 0), (17, -1), (18, -1), (19, 0), (20, 16384), (21, -1), (22, 16384), (23, -1), (24, -1), (25, 2048), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, 2048), (38, -1), (39, -1), (40, 1024), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, 16384), (21, -1), (22, 16384), (23, -1), (24, -1), (25, 2048), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, 2048), (38, -1), (39, -1), (40, 1024), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 14 : set()

After reduction : 
 pending  : [40, 25, 37, 22, 20]
 solution : [6, 1, 23, 15]


Solution : [6, 1, 23, 15] has cost 27.


Before backtrack at level 14
 pending : [40, 25, 37, 22, 20]
 solution : [6, 1, 23, 15]

After backtrack at level 14
 pending : [40, 25, 37, 22, 20, 0, 16, 19]
 solution : [6, 1, 23, 15]


Invert decision for 15 at level 13


New level: 14
 pending : [40, 25, 37, 22, 20, 0, 16, 19]
 solution : [6, 1, 23]


Before reduction : 
 pending  : [40, 25, 37, 22, 20, 0, 16, 19]
 solution : [6, 1, 23]

Essensial at level 14 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, 16384), (21, -1), (22, 16384), (23, -1), (24, -1), (25, 2048), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, 2048), (38, -1), (39, -1), (40, 1024), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, 131072), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, 131072), (17, -1), (18, -1), (19, 65536), (20, 2097152), (21, -1), (22, 65536), (23, -1), (24, -1), (25, 524288), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, 524288), (38, -1), (39, -1), (40, 32768), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 14 : set()

After reduction : 
 pending  : [40, 25, 37, 22, 20, 0, 16, 19]
 solution : [6, 1, 23]


Solution : [6, 1, 23] has cost 18.


Decide in level 14 among pending : [40, 25, 37, 22, 20, 0, 16, 19]

Coverage : [(0, 131072), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, 131072), (17, -1), (18, -1), (19, 65536), (20, 2097152), (21, -1), (22, 65536), (23, -1), (24, -1), (25, 524288), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, 524288), (38, -1), (39, -1), (40, 32768), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Decide 20 with phase True at level 14

After decision at level 14
 pending : [40, 25, 37, 22, 0, 16, 19]
 solution : [6, 1, 23, 20]


New level: 15
 pending : [40, 25, 37, 22, 0, 16, 19]
 solution : [6, 1, 23, 20]


Before reduction : 
 pending  : [40, 25, 37, 22, 0, 16, 19]
 solution : [6, 1, 23, 20]

Essensial at level 15 : set()

Before removed
 coverage : [(0, 131072), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, 131072), (17, -1), (18, -1), (19, 65536), (20, 2097152), (21, -1), (22, 65536), (23, -1), (24, -1), (25, 524288), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, 524288), (38, -1), (39, -1), (40, 32768), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, 65536), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, 65536), (17, -1), (18, -1), (19, 0), (20, -1), (21, -1), (22, 0), (23, -1), (24, -1), (25, 131072), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, 131072), (38, -1), (39, -1), (40, 512), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 15 : {19, 22}

After reduction : 
 pending  : [40, 25, 37, 0, 16]
 solution : [6, 1, 23, 20]


Before reduction : 
 pending  : [40, 25, 37, 0, 16]
 solution : [6, 1, 23, 20]

Essensial at level 15 : set()

Before removed
 coverage : [(0, 65536), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, 65536), (17, -1), (18, -1), (19, 0), (20, -1), (21, -1), (22, 0), (23, -1), (24, -1), (25, 131072), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, 131072), (38, -1), (39, -1), (40, 512), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, 65536), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, 65536), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, 131072), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, 131072), (38, -1), (39, -1), (40, 512), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 15 : set()

After reduction : 
 pending  : [40, 25, 37, 0, 16]
 solution : [6, 1, 23, 20]


Solution : [6, 1, 23, 20] has cost 25.


Before backtrack at level 15
 pending : [40, 25, 37, 0, 16]
 solution : [6, 1, 23, 20]

After backtrack at level 15
 pending : [40, 25, 37, 0, 16, 22, 19]
 solution : [6, 1, 23, 20]


Invert decision for 20 at level 14


New level: 15
 pending : [40, 25, 37, 0, 16, 22, 19]
 solution : [6, 1, 23]


Before reduction : 
 pending  : [40, 25, 37, 0, 16, 22, 19]
 solution : [6, 1, 23]

Essensial at level 15 : {22}

Before removed
 coverage : [(0, 65536), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, 65536), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, 131072), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, 131072), (38, -1), (39, -1), (40, 512), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, 131072), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, 131072), (17, -1), (18, -1), (19, 32768), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, 524288), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, 524288), (38, -1), (39, -1), (40, 32768), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 15 : set()

After reduction : 
 pending  : [40, 25, 37, 0, 16, 19]
 solution : [6, 1, 23, 22]


Before reduction : 
 pending  : [40, 25, 37, 0, 16, 19]
 solution : [6, 1, 23, 22]

Essensial at level 15 : set()

Before removed
 coverage : [(0, 131072), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, 131072), (17, -1), (18, -1), (19, 32768), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, 524288), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, 524288), (38, -1), (39, -1), (40, 32768), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, 131072), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, 131072), (17, -1), (18, -1), (19, 32768), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, 524288), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, 524288), (38, -1), (39, -1), (40, 32768), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 15 : set()

After reduction : 
 pending  : [40, 25, 37, 0, 16, 19]
 solution : [6, 1, 23, 22]


Solution : [6, 1, 23, 22] has cost 25.


Before backtrack at level 15
 pending : [40, 25, 37, 0, 16, 19]
 solution : [6, 1, 23, 22]

After backtrack at level 15
 pending : [40, 25, 37, 0, 16, 19, 22]
 solution : [6, 1, 23]


Before backtrack at level 14
 pending : [40, 25, 37, 0, 16, 19, 22]
 solution : [6, 1, 23]

After backtrack at level 14
 pending : [40, 25, 37, 0, 16, 19, 22, 20]
 solution : [6, 1, 23]


Before backtrack at level 13
 pending : [40, 25, 37, 0, 16, 19, 22, 20]
 solution : [6, 1, 23]

After backtrack at level 13
 pending : [40, 25, 37, 0, 16, 19, 22, 20, 15]
 solution : [6, 1, 23]


Before backtrack at level 12
 pending : [40, 25, 37, 0, 16, 19, 22, 20, 15]
 solution : [6, 1, 23]

After backtrack at level 12
 pending : [40, 25, 37, 0, 16, 19, 22, 20, 15, 21]
 solution : [6, 1, 23]


Before backtrack at level 11
 pending : [40, 25, 37, 0, 16, 19, 22, 20, 15, 21]
 solution : [6, 1, 23]

After backtrack at level 11
 pending : [40, 25, 37, 0, 16, 19, 22, 20, 15, 21, 23, 9, 29, 32, 38, 39, 42, 43, 47, 48, 49, 30, 33, 14]
 solution : [6, 1]


Before backtrack at level 10
 pending : [40, 25, 37, 0, 16, 19, 22, 20, 15, 21, 23, 9, 29, 32, 38, 39, 42, 43, 47, 48, 49, 30, 33, 14]
 solution : [6, 1]

After backtrack at level 10
 pending : [40, 25, 37, 0, 16, 19, 22, 20, 15, 21, 23, 9, 29, 32, 38, 39, 42, 43, 47, 48, 49, 30, 33, 14, 8]
 solution : [6, 1]


Before backtrack at level 9
 pending : [40, 25, 37, 0, 16, 19, 22, 20, 15, 21, 23, 9, 29, 32, 38, 39, 42, 43, 47, 48, 49, 30, 33, 14, 8]
 solution : [6, 1]

After backtrack at level 9
 pending : [40, 25, 37, 0, 16, 19, 22, 20, 15, 21, 23, 9, 29, 32, 38, 39, 42, 43, 47, 48, 49, 30, 33, 14, 8, 18]
 solution : [6, 1]


Before backtrack at level 8
 pending : [40, 25, 37, 0, 16, 19, 22, 20, 15, 21, 23, 9, 29, 32, 38, 39, 42, 43, 47, 48, 49, 30, 33, 14, 8, 18]
 solution : [6, 1]

After backtrack at level 8
 pending : [40, 25, 37, 0, 16, 19, 22, 20, 15, 21, 23, 9, 29, 32, 38, 39, 42, 43, 47, 48, 49, 30, 33, 14, 8, 18, 41]
 solution : [6, 1]


Before backtrack at level 7
 pending : [40, 25, 37, 0, 16, 19, 22, 20, 15, 21, 23, 9, 29, 32, 38, 39, 42, 43, 47, 48, 49, 30, 33, 14, 8, 18, 41]
 solution : [6, 1]

After backtrack at level 7
 pending : [40, 25, 37, 0, 16, 19, 22, 20, 15, 21, 23, 9, 29, 32, 38, 39, 42, 43, 47, 48, 49, 30, 33, 14, 8, 18, 41, 17]
 solution : [6, 1]


Before backtrack at level 6
 pending : [40, 25, 37, 0, 16, 19, 22, 20, 15, 21, 23, 9, 29, 32, 38, 39, 42, 43, 47, 48, 49, 30, 33, 14, 8, 18, 41, 17]
 solution : [6, 1]

After backtrack at level 6
 pending : [40, 25, 37, 0, 16, 19, 22, 20, 15, 21, 23, 9, 29, 32, 38, 39, 42, 43, 47, 48, 49, 30, 33, 14, 8, 18, 41, 17, 26]
 solution : [6, 1]


Before backtrack at level 5
 pending : [40, 25, 37, 0, 16, 19, 22, 20, 15, 21, 23, 9, 29, 32, 38, 39, 42, 43, 47, 48, 49, 30, 33, 14, 8, 18, 41, 17, 26]
 solution : [6, 1]

After backtrack at level 5
 pending : [40, 25, 37, 0, 16, 19, 22, 20, 15, 21, 23, 9, 29, 32, 38, 39, 42, 43, 47, 48, 49, 30, 33, 14, 8, 18, 41, 17, 26, 24]
 solution : [6, 1]


Before backtrack at level 4
 pending : [40, 25, 37, 0, 16, 19, 22, 20, 15, 21, 23, 9, 29, 32, 38, 39, 42, 43, 47, 48, 49, 30, 33, 14, 8, 18, 41, 17, 26, 24]
 solution : [6, 1]

After backtrack at level 4
 pending : [40, 25, 37, 0, 16, 19, 22, 20, 15, 21, 23, 9, 29, 32, 38, 39, 42, 43, 47, 48, 49, 30, 33, 14, 8, 18, 41, 17, 26, 24, 35]
 solution : [6, 1]


Before backtrack at level 3
 pending : [40, 25, 37, 0, 16, 19, 22, 20, 15, 21, 23, 9, 29, 32, 38, 39, 42, 43, 47, 48, 49, 30, 33, 14, 8, 18, 41, 17, 26, 24, 35]
 solution : [6, 1]

After backtrack at level 3
 pending : [40, 25, 37, 0, 16, 19, 22, 20, 15, 21, 23, 9, 29, 32, 38, 39, 42, 43, 47, 48, 49, 30, 33, 14, 8, 18, 41, 17, 26, 24, 35, 28]
 solution : [6, 1]


Before backtrack at level 2
 pending : [40, 25, 37, 0, 16, 19, 22, 20, 15, 21, 23, 9, 29, 32, 38, 39, 42, 43, 47, 48, 49, 30, 33, 14, 8, 18, 41, 17, 26, 24, 35, 28]
 solution : [6, 1]

After backtrack at level 2
 pending : [40, 25, 37, 0, 16, 19, 22, 20, 15, 21, 23, 9, 29, 32, 38, 39, 42, 43, 47, 48, 49, 30, 33, 14, 8, 18, 41, 17, 26, 24, 35, 28, 2]
 solution : [6, 1]


Invert decision for 1 at level 1


New level: 2
 pending : [40, 25, 37, 0, 16, 19, 22, 20, 15, 21, 23, 9, 29, 32, 38, 39, 42, 43, 47, 48, 49, 30, 33, 14, 8, 18, 41, 17, 26, 24, 35, 28, 2]
 solution : [6]


Before reduction : 
 pending  : [40, 25, 37, 0, 16, 19, 22, 20, 15, 21, 23, 9, 29, 32, 38, 39, 42, 43, 47, 48, 49, 30, 33, 14, 8, 18, 41, 17, 26, 24, 35, 28, 2]
 solution : [6]

Essensial at level 2 : set()

Before removed
 coverage : [(0, 131072), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, 131072), (17, -1), (18, -1), (19, 32768), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, 524288), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, 524288), (38, -1), (39, -1), (40, 32768), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, 1048576), (1, -1), (2, 17179869184), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, 134217728), (9, 1048576), (10, -1), (11, -1), (12, -1), (13, -1), (14, 67108864), (15, 33554432), (16, 1572864), (17, 2147483648), (18, 1073741824), (19, 524288), (20, 8388608), (21, 16777216), (22, 262144), (23, 134217728), (24, 1073741824), (25, 4194304), (26, 4294967296), (27, -1), (28, 4294967296), (29, 16384), (30, 32768), (31, -1), (32, 1048576), (33, 4194304), (34, -1), (35, 2147483648), (36, -1), (37, 4194304), (38, 134217728), (39, 16384), (40, 268435456), (41, 1073741824), (42, 524288), (43, 524288), (44, -1), (45, -1), (46, -1), (47, 67108864), (48, 16777216), (49, 67108864), (50, -1), (51, -1), (52, -1)]

Covered at level 2 : set()

After reduction : 
 pending  : [40, 25, 37, 0, 16, 19, 22, 20, 15, 21, 23, 9, 29, 32, 38, 39, 42, 43, 47, 48, 49, 30, 33, 14, 8, 18, 41, 17, 26, 24, 35, 28, 2]
 solution : [6]


Solution : [6] has cost 6.


Decide in level 2 among pending : [40, 25, 37, 0, 16, 19, 22, 20, 15, 21, 23, 9, 29, 32, 38, 39, 42, 43, 47, 48, 49, 30, 33, 14, 8, 18, 41, 17, 26, 24, 35, 28, 2]

Coverage : [(0, 1048576), (1, -1), (2, 17179869184), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, 134217728), (9, 1048576), (10, -1), (11, -1), (12, -1), (13, -1), (14, 67108864), (15, 33554432), (16, 1572864), (17, 2147483648), (18, 1073741824), (19, 524288), (20, 8388608), (21, 16777216), (22, 262144), (23, 134217728), (24, 1073741824), (25, 4194304), (26, 4294967296), (27, -1), (28, 4294967296), (29, 16384), (30, 32768), (31, -1), (32, 1048576), (33, 4194304), (34, -1), (35, 2147483648), (36, -1), (37, 4194304), (38, 134217728), (39, 16384), (40, 268435456), (41, 1073741824), (42, 524288), (43, 524288), (44, -1), (45, -1), (46, -1), (47, 67108864), (48, 16777216), (49, 67108864), (50, -1), (51, -1), (52, -1)]

Decide 2 with phase True at level 2

After decision at level 2
 pending : [40, 25, 37, 0, 16, 19, 22, 20, 15, 21, 23, 9, 29, 32, 38, 39, 42, 43, 47, 48, 49, 30, 33, 14, 8, 18, 41, 17, 26, 24, 35, 28]
 solution : [6, 2]


New level: 3
 pending : [40, 25, 37, 0, 16, 19, 22, 20, 15, 21, 23, 9, 29, 32, 38, 39, 42, 43, 47, 48, 49, 30, 33, 14, 8, 18, 41, 17, 26, 24, 35, 28]
 solution : [6, 2]


Before reduction : 
 pending  : [40, 25, 37, 0, 16, 19, 22, 20, 15, 21, 23, 9, 29, 32, 38, 39, 42, 43, 47, 48, 49, 30, 33, 14, 8, 18, 41, 17, 26, 24, 35, 28]
 solution : [6, 2]

Essensial at level 3 : set()

Before removed
 coverage : [(0, 1048576), (1, -1), (2, 17179869184), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, 134217728), (9, 1048576), (10, -1), (11, -1), (12, -1), (13, -1), (14, 67108864), (15, 33554432), (16, 1572864), (17, 2147483648), (18, 1073741824), (19, 524288), (20, 8388608), (21, 16777216), (22, 262144), (23, 134217728), (24, 1073741824), (25, 4194304), (26, 4294967296), (27, -1), (28, 4294967296), (29, 16384), (30, 32768), (31, -1), (32, 1048576), (33, 4194304), (34, -1), (35, 2147483648), (36, -1), (37, 4194304), (38, 134217728), (39, 16384), (40, 268435456), (41, 1073741824), (42, 524288), (43, 524288), (44, -1), (45, -1), (46, -1), (47, 67108864), (48, 16777216), (49, 67108864), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, 524288), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, 67108864), (9, 524288), (10, -1), (11, -1), (12, -1), (13, -1), (14, 33554432), (15, 16777216), (16, 786432), (17, 1073741824), (18, 536870912), (19, 262144), (20, 4194304), (21, 8388608), (22, 131072), (23, 67108864), (24, 268435456), (25, 2097152), (26, 2147483648), (27, -1), (28, 536870912), (29, 8192), (30, 8192), (31, -1), (32, 524288), (33, 1048576), (34, -1), (35, 536870912), (36, -1), (37, 2097152), (38, 67108864), (39, 8192), (40, 67108864), (41, 134217728), (42, 262144), (43, 262144), (44, -1), (45, -1), (46, -1), (47, 33554432), (48, 8388608), (49, 33554432), (50, -1), (51, -1), (52, -1)]

Covered at level 3 : set()

After reduction : 
 pending  : [40, 25, 37, 0, 16, 19, 22, 20, 15, 21, 23, 9, 29, 32, 38, 39, 42, 43, 47, 48, 49, 30, 33, 14, 8, 18, 41, 17, 26, 24, 35, 28]
 solution : [6, 2]


Solution : [6, 2] has cost 9.


Decide in level 3 among pending : [40, 25, 37, 0, 16, 19, 22, 20, 15, 21, 23, 9, 29, 32, 38, 39, 42, 43, 47, 48, 49, 30, 33, 14, 8, 18, 41, 17, 26, 24, 35, 28]

Coverage : [(0, 524288), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, 67108864), (9, 524288), (10, -1), (11, -1), (12, -1), (13, -1), (14, 33554432), (15, 16777216), (16, 786432), (17, 1073741824), (18, 536870912), (19, 262144), (20, 4194304), (21, 8388608), (22, 131072), (23, 67108864), (24, 268435456), (25, 2097152), (26, 2147483648), (27, -1), (28, 536870912), (29, 8192), (30, 8192), (31, -1), (32, 524288), (33, 1048576), (34, -1), (35, 536870912), (36, -1), (37, 2097152), (38, 67108864), (39, 8192), (40, 67108864), (41, 134217728), (42, 262144), (43, 262144), (44, -1), (45, -1), (46, -1), (47, 33554432), (48, 8388608), (49, 33554432), (50, -1), (51, -1), (52, -1)]

Decide 26 with phase True at level 3

After decision at level 3
 pending : [40, 25, 37, 0, 16, 19, 22, 20, 15, 21, 23, 9, 29, 32, 38, 39, 42, 43, 47, 48, 49, 30, 33, 14, 8, 18, 41, 17, 24, 35, 28]
 solution : [6, 2, 26]


New level: 4
 pending : [40, 25, 37, 0, 16, 19, 22, 20, 15, 21, 23, 9, 29, 32, 38, 39, 42, 43, 47, 48, 49, 30, 33, 14, 8, 18, 41, 17, 24, 35, 28]
 solution : [6, 2, 26]


Before reduction : 
 pending  : [40, 25, 37, 0, 16, 19, 22, 20, 15, 21, 23, 9, 29, 32, 38, 39, 42, 43, 47, 48, 49, 30, 33, 14, 8, 18, 41, 17, 24, 35, 28]
 solution : [6, 2, 26]

Essensial at level 4 : set()

Before removed
 coverage : [(0, 524288), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, 67108864), (9, 524288), (10, -1), (11, -1), (12, -1), (13, -1), (14, 33554432), (15, 16777216), (16, 786432), (17, 1073741824), (18, 536870912), (19, 262144), (20, 4194304), (21, 8388608), (22, 131072), (23, 67108864), (24, 268435456), (25, 2097152), (26, 2147483648), (27, -1), (28, 536870912), (29, 8192), (30, 8192), (31, -1), (32, 524288), (33, 1048576), (34, -1), (35, 536870912), (36, -1), (37, 2097152), (38, 67108864), (39, 8192), (40, 67108864), (41, 134217728), (42, 262144), (43, 262144), (44, -1), (45, -1), (46, -1), (47, 33554432), (48, 8388608), (49, 33554432), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, 0), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, 67108864), (9, 131072), (10, -1), (11, -1), (12, -1), (13, -1), (14, 0), (15, 0), (16, 0), (17, 0), (18, 0), (19, 0), (20, 0), (21, 0), (22, 0), (23, 67108864), (24, 268435456), (25, 0), (26, -1), (27, -1), (28, 536870912), (29, 4096), (30, 8192), (31, -1), (32, 262144), (33, 1048576), (34, -1), (35, 536870912), (36, -1), (37, 0), (38, 33554432), (39, 2048), (40, 1024), (41, 2048), (42, 65536), (43, 65536), (44, -1), (45, -1), (46, -1), (47, 16777216), (48, 2097152), (49, 8388608), (50, -1), (51, -1), (52, -1)]

Covered at level 4 : {0, 37, 14, 15, 16, 17, 18, 19, 20, 21, 22, 25}

After reduction : 
 pending  : [40, 23, 9, 29, 32, 38, 39, 42, 43, 47, 48, 49, 30, 33, 8, 41, 24, 35, 28]
 solution : [6, 2, 26]


Before reduction : 
 pending  : [40, 23, 9, 29, 32, 38, 39, 42, 43, 47, 48, 49, 30, 33, 8, 41, 24, 35, 28]
 solution : [6, 2, 26]

Essensial at level 4 : set()

Before removed
 coverage : [(0, 0), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, 67108864), (9, 131072), (10, -1), (11, -1), (12, -1), (13, -1), (14, 0), (15, 0), (16, 0), (17, 0), (18, 0), (19, 0), (20, 0), (21, 0), (22, 0), (23, 67108864), (24, 268435456), (25, 0), (26, -1), (27, -1), (28, 536870912), (29, 4096), (30, 8192), (31, -1), (32, 262144), (33, 1048576), (34, -1), (35, 536870912), (36, -1), (37, 0), (38, 33554432), (39, 2048), (40, 1024), (41, 2048), (42, 65536), (43, 65536), (44, -1), (45, -1), (46, -1), (47, 16777216), (48, 2097152), (49, 8388608), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, 67108864), (9, 131072), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, 67108864), (24, 268435456), (25, -1), (26, -1), (27, -1), (28, 536870912), (29, 4096), (30, 8192), (31, -1), (32, 262144), (33, 1048576), (34, -1), (35, 536870912), (36, -1), (37, -1), (38, 33554432), (39, 2048), (40, 1024), (41, 2048), (42, 65536), (43, 65536), (44, -1), (45, -1), (46, -1), (47, 16777216), (48, 2097152), (49, 8388608), (50, -1), (51, -1), (52, -1)]

Covered at level 4 : set()

After reduction : 
 pending  : [40, 23, 9, 29, 32, 38, 39, 42, 43, 47, 48, 49, 30, 33, 8, 41, 24, 35, 28]
 solution : [6, 2, 26]


Solution : [6, 2, 26] has cost 13.


Decide in level 4 among pending : [40, 23, 9, 29, 32, 38, 39, 42, 43, 47, 48, 49, 30, 33, 8, 41, 24, 35, 28]

Coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, 67108864), (9, 131072), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, 67108864), (24, 268435456), (25, -1), (26, -1), (27, -1), (28, 536870912), (29, 4096), (30, 8192), (31, -1), (32, 262144), (33, 1048576), (34, -1), (35, 536870912), (36, -1), (37, -1), (38, 33554432), (39, 2048), (40, 1024), (41, 2048), (42, 65536), (43, 65536), (44, -1), (45, -1), (46, -1), (47, 16777216), (48, 2097152), (49, 8388608), (50, -1), (51, -1), (52, -1)]

Decide 35 with phase True at level 4

After decision at level 4
 pending : [40, 23, 9, 29, 32, 38, 39, 42, 43, 47, 48, 49, 30, 33, 8, 41, 24, 28]
 solution : [6, 2, 26, 35]


New level: 5
 pending : [40, 23, 9, 29, 32, 38, 39, 42, 43, 47, 48, 49, 30, 33, 8, 41, 24, 28]
 solution : [6, 2, 26, 35]


Before reduction : 
 pending  : [40, 23, 9, 29, 32, 38, 39, 42, 43, 47, 48, 49, 30, 33, 8, 41, 24, 28]
 solution : [6, 2, 26, 35]

Essensial at level 5 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, 67108864), (9, 131072), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, 67108864), (24, 268435456), (25, -1), (26, -1), (27, -1), (28, 536870912), (29, 4096), (30, 8192), (31, -1), (32, 262144), (33, 1048576), (34, -1), (35, 536870912), (36, -1), (37, -1), (38, 33554432), (39, 2048), (40, 1024), (41, 2048), (42, 65536), (43, 65536), (44, -1), (45, -1), (46, -1), (47, 16777216), (48, 2097152), (49, 8388608), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, 67108864), (9, 32768), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, 67108864), (24, 4096), (25, -1), (26, -1), (27, -1), (28, 536870912), (29, 1024), (30, 0), (31, -1), (32, 65536), (33, 0), (34, -1), (35, -1), (36, -1), (37, -1), (38, 8388608), (39, 512), (40, 512), (41, 0), (42, 16384), (43, 16384), (44, -1), (45, -1), (46, -1), (47, 4194304), (48, 524288), (49, 2097152), (50, -1), (51, -1), (52, -1)]

Covered at level 5 : {33, 30, 41}

After reduction : 
 pending  : [40, 23, 9, 29, 32, 38, 39, 42, 43, 47, 48, 49, 8, 24, 28]
 solution : [6, 2, 26, 35]


Before reduction : 
 pending  : [40, 23, 9, 29, 32, 38, 39, 42, 43, 47, 48, 49, 8, 24, 28]
 solution : [6, 2, 26, 35]

Essensial at level 5 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, 67108864), (9, 32768), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, 67108864), (24, 4096), (25, -1), (26, -1), (27, -1), (28, 536870912), (29, 1024), (30, 0), (31, -1), (32, 65536), (33, 0), (34, -1), (35, -1), (36, -1), (37, -1), (38, 8388608), (39, 512), (40, 512), (41, 0), (42, 16384), (43, 16384), (44, -1), (45, -1), (46, -1), (47, 4194304), (48, 524288), (49, 2097152), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, 67108864), (9, 32768), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, 67108864), (24, 4096), (25, -1), (26, -1), (27, -1), (28, 536870912), (29, 1024), (30, -1), (31, -1), (32, 65536), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, 8388608), (39, 512), (40, 512), (41, -1), (42, 16384), (43, 16384), (44, -1), (45, -1), (46, -1), (47, 4194304), (48, 524288), (49, 2097152), (50, -1), (51, -1), (52, -1)]

Covered at level 5 : set()

After reduction : 
 pending  : [40, 23, 9, 29, 32, 38, 39, 42, 43, 47, 48, 49, 8, 24, 28]
 solution : [6, 2, 26, 35]


Solution : [6, 2, 26, 35] has cost 26.


Before backtrack at level 5
 pending : [40, 23, 9, 29, 32, 38, 39, 42, 43, 47, 48, 49, 8, 24, 28]
 solution : [6, 2, 26, 35]

After backtrack at level 5
 pending : [40, 23, 9, 29, 32, 38, 39, 42, 43, 47, 48, 49, 8, 24, 28, 30, 33, 41]
 solution : [6, 2, 26, 35]


Invert decision for 35 at level 4


New level: 5
 pending : [40, 23, 9, 29, 32, 38, 39, 42, 43, 47, 48, 49, 8, 24, 28, 30, 33, 41]
 solution : [6, 2, 26]


Before reduction : 
 pending  : [40, 23, 9, 29, 32, 38, 39, 42, 43, 47, 48, 49, 8, 24, 28, 30, 33, 41]
 solution : [6, 2, 26]

Essensial at level 5 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, 67108864), (9, 32768), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, 67108864), (24, 4096), (25, -1), (26, -1), (27, -1), (28, 536870912), (29, 1024), (30, -1), (31, -1), (32, 65536), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, 8388608), (39, 512), (40, 512), (41, -1), (42, 16384), (43, 16384), (44, -1), (45, -1), (46, -1), (47, 4194304), (48, 524288), (49, 2097152), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, 67108864), (9, 131072), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, 67108864), (24, 268435456), (25, -1), (26, -1), (27, -1), (28, 536870912), (29, 4096), (30, 8192), (31, -1), (32, 262144), (33, 1048576), (34, -1), (35, -1), (36, -1), (37, -1), (38, 33554432), (39, 2048), (40, 1024), (41, 2048), (42, 65536), (43, 65536), (44, -1), (45, -1), (46, -1), (47, 16777216), (48, 2097152), (49, 8388608), (50, -1), (51, -1), (52, -1)]

Covered at level 5 : set()

After reduction : 
 pending  : [40, 23, 9, 29, 32, 38, 39, 42, 43, 47, 48, 49, 8, 24, 28, 30, 33, 41]
 solution : [6, 2, 26]


Solution : [6, 2, 26] has cost 13.


Decide in level 5 among pending : [40, 23, 9, 29, 32, 38, 39, 42, 43, 47, 48, 49, 8, 24, 28, 30, 33, 41]

Coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, 67108864), (9, 131072), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, 67108864), (24, 268435456), (25, -1), (26, -1), (27, -1), (28, 536870912), (29, 4096), (30, 8192), (31, -1), (32, 262144), (33, 1048576), (34, -1), (35, -1), (36, -1), (37, -1), (38, 33554432), (39, 2048), (40, 1024), (41, 2048), (42, 65536), (43, 65536), (44, -1), (45, -1), (46, -1), (47, 16777216), (48, 2097152), (49, 8388608), (50, -1), (51, -1), (52, -1)]

Decide 28 with phase True at level 5

After decision at level 5
 pending : [40, 23, 9, 29, 32, 38, 39, 42, 43, 47, 48, 49, 8, 24, 30, 33, 41]
 solution : [6, 2, 26, 28]


New level: 6
 pending : [40, 23, 9, 29, 32, 38, 39, 42, 43, 47, 48, 49, 8, 24, 30, 33, 41]
 solution : [6, 2, 26, 28]


Before reduction : 
 pending  : [40, 23, 9, 29, 32, 38, 39, 42, 43, 47, 48, 49, 8, 24, 30, 33, 41]
 solution : [6, 2, 26, 28]

Essensial at level 6 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, 67108864), (9, 131072), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, 67108864), (24, 268435456), (25, -1), (26, -1), (27, -1), (28, 536870912), (29, 4096), (30, 8192), (31, -1), (32, 262144), (33, 1048576), (34, -1), (35, -1), (36, -1), (37, -1), (38, 33554432), (39, 2048), (40, 1024), (41, 2048), (42, 65536), (43, 65536), (44, -1), (45, -1), (46, -1), (47, 16777216), (48, 2097152), (49, 8388608), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, 67108864), (9, 131072), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, 67108864), (24, 134217728), (25, -1), (26, -1), (27, -1), (28, -1), (29, 4096), (30, 4096), (31, -1), (32, 262144), (33, 524288), (34, -1), (35, -1), (36, -1), (37, -1), (38, 33554432), (39, 2048), (40, 1024), (41, 2048), (42, 65536), (43, 65536), (44, -1), (45, -1), (46, -1), (47, 16777216), (48, 2097152), (49, 8388608), (50, -1), (51, -1), (52, -1)]

Covered at level 6 : set()

After reduction : 
 pending  : [40, 23, 9, 29, 32, 38, 39, 42, 43, 47, 48, 49, 8, 24, 30, 33, 41]
 solution : [6, 2, 26, 28]


Solution : [6, 2, 26, 28] has cost 17.


Decide in level 6 among pending : [40, 23, 9, 29, 32, 38, 39, 42, 43, 47, 48, 49, 8, 24, 30, 33, 41]

Coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, 67108864), (9, 131072), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, 67108864), (24, 134217728), (25, -1), (26, -1), (27, -1), (28, -1), (29, 4096), (30, 4096), (31, -1), (32, 262144), (33, 524288), (34, -1), (35, -1), (36, -1), (37, -1), (38, 33554432), (39, 2048), (40, 1024), (41, 2048), (42, 65536), (43, 65536), (44, -1), (45, -1), (46, -1), (47, 16777216), (48, 2097152), (49, 8388608), (50, -1), (51, -1), (52, -1)]

Decide 24 with phase True at level 6

After decision at level 6
 pending : [40, 23, 9, 29, 32, 38, 39, 42, 43, 47, 48, 49, 8, 30, 33, 41]
 solution : [6, 2, 26, 28, 24]


New level: 7
 pending : [40, 23, 9, 29, 32, 38, 39, 42, 43, 47, 48, 49, 8, 30, 33, 41]
 solution : [6, 2, 26, 28, 24]


Before reduction : 
 pending  : [40, 23, 9, 29, 32, 38, 39, 42, 43, 47, 48, 49, 8, 30, 33, 41]
 solution : [6, 2, 26, 28, 24]

Essensial at level 7 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, 67108864), (9, 131072), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, 67108864), (24, 134217728), (25, -1), (26, -1), (27, -1), (28, -1), (29, 4096), (30, 4096), (31, -1), (32, 262144), (33, 524288), (34, -1), (35, -1), (36, -1), (37, -1), (38, 33554432), (39, 2048), (40, 1024), (41, 2048), (42, 65536), (43, 65536), (44, -1), (45, -1), (46, -1), (47, 16777216), (48, 2097152), (49, 8388608), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, 16777216), (9, 32768), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, 16777216), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, 1024), (30, 0), (31, -1), (32, 65536), (33, 0), (34, -1), (35, -1), (36, -1), (37, -1), (38, 8388608), (39, 512), (40, 512), (41, 0), (42, 16384), (43, 16384), (44, -1), (45, -1), (46, -1), (47, 4194304), (48, 524288), (49, 4194304), (50, -1), (51, -1), (52, -1)]

Covered at level 7 : {33, 30, 41}

After reduction : 
 pending  : [40, 23, 9, 29, 32, 38, 39, 42, 43, 47, 48, 49, 8]
 solution : [6, 2, 26, 28, 24]


Before reduction : 
 pending  : [40, 23, 9, 29, 32, 38, 39, 42, 43, 47, 48, 49, 8]
 solution : [6, 2, 26, 28, 24]

Essensial at level 7 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, 16777216), (9, 32768), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, 16777216), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, 1024), (30, 0), (31, -1), (32, 65536), (33, 0), (34, -1), (35, -1), (36, -1), (37, -1), (38, 8388608), (39, 512), (40, 512), (41, 0), (42, 16384), (43, 16384), (44, -1), (45, -1), (46, -1), (47, 4194304), (48, 524288), (49, 4194304), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, 16777216), (9, 32768), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, 16777216), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, 1024), (30, -1), (31, -1), (32, 65536), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, 8388608), (39, 512), (40, 512), (41, -1), (42, 16384), (43, 16384), (44, -1), (45, -1), (46, -1), (47, 4194304), (48, 524288), (49, 4194304), (50, -1), (51, -1), (52, -1)]

Covered at level 7 : set()

After reduction : 
 pending  : [40, 23, 9, 29, 32, 38, 39, 42, 43, 47, 48, 49, 8]
 solution : [6, 2, 26, 28, 24]


Solution : [6, 2, 26, 28, 24] has cost 24.


Before backtrack at level 7
 pending : [40, 23, 9, 29, 32, 38, 39, 42, 43, 47, 48, 49, 8]
 solution : [6, 2, 26, 28, 24]

After backtrack at level 7
 pending : [40, 23, 9, 29, 32, 38, 39, 42, 43, 47, 48, 49, 8, 30, 33, 41]
 solution : [6, 2, 26, 28, 24]


Invert decision for 24 at level 6


New level: 7
 pending : [40, 23, 9, 29, 32, 38, 39, 42, 43, 47, 48, 49, 8, 30, 33, 41]
 solution : [6, 2, 26, 28]


Before reduction : 
 pending  : [40, 23, 9, 29, 32, 38, 39, 42, 43, 47, 48, 49, 8, 30, 33, 41]
 solution : [6, 2, 26, 28]

Essensial at level 7 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, 16777216), (9, 32768), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, 16777216), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, 1024), (30, -1), (31, -1), (32, 65536), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, 8388608), (39, 512), (40, 512), (41, -1), (42, 16384), (43, 16384), (44, -1), (45, -1), (46, -1), (47, 4194304), (48, 524288), (49, 4194304), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, 67108864), (9, 131072), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, 67108864), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, 4096), (30, 4096), (31, -1), (32, 262144), (33, 524288), (34, -1), (35, -1), (36, -1), (37, -1), (38, 33554432), (39, 2048), (40, 1024), (41, 2048), (42, 65536), (43, 65536), (44, -1), (45, -1), (46, -1), (47, 16777216), (48, 2097152), (49, 8388608), (50, -1), (51, -1), (52, -1)]

Covered at level 7 : set()

After reduction : 
 pending  : [40, 23, 9, 29, 32, 38, 39, 42, 43, 47, 48, 49, 8, 30, 33, 41]
 solution : [6, 2, 26, 28]


Solution : [6, 2, 26, 28] has cost 17.


Decide in level 7 among pending : [40, 23, 9, 29, 32, 38, 39, 42, 43, 47, 48, 49, 8, 30, 33, 41]

Coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, 67108864), (9, 131072), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, 67108864), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, 4096), (30, 4096), (31, -1), (32, 262144), (33, 524288), (34, -1), (35, -1), (36, -1), (37, -1), (38, 33554432), (39, 2048), (40, 1024), (41, 2048), (42, 65536), (43, 65536), (44, -1), (45, -1), (46, -1), (47, 16777216), (48, 2097152), (49, 8388608), (50, -1), (51, -1), (52, -1)]

Decide 23 with phase True at level 7

After decision at level 7
 pending : [40, 9, 29, 32, 38, 39, 42, 43, 47, 48, 49, 8, 30, 33, 41]
 solution : [6, 2, 26, 28, 23]


New level: 8
 pending : [40, 9, 29, 32, 38, 39, 42, 43, 47, 48, 49, 8, 30, 33, 41]
 solution : [6, 2, 26, 28, 23]


Before reduction : 
 pending  : [40, 9, 29, 32, 38, 39, 42, 43, 47, 48, 49, 8, 30, 33, 41]
 solution : [6, 2, 26, 28, 23]

Essensial at level 8 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, 67108864), (9, 131072), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, 67108864), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, 4096), (30, 4096), (31, -1), (32, 262144), (33, 524288), (34, -1), (35, -1), (36, -1), (37, -1), (38, 33554432), (39, 2048), (40, 1024), (41, 2048), (42, 65536), (43, 65536), (44, -1), (45, -1), (46, -1), (47, 16777216), (48, 2097152), (49, 8388608), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, 0), (9, 0), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, 0), (30, 0), (31, -1), (32, 0), (33, 0), (34, -1), (35, -1), (36, -1), (37, -1), (38, 0), (39, 0), (40, 0), (41, 0), (42, 0), (43, 0), (44, -1), (45, -1), (46, -1), (47, 0), (48, 0), (49, 0), (50, -1), (51, -1), (52, -1)]

Covered at level 8 : {32, 33, 38, 39, 40, 9, 42, 43, 8, 41, 47, 48, 49, 29, 30}

After reduction : 
 pending  : []
 solution : [6, 2, 26, 28, 23]


Before reduction : 
 pending  : []
 solution : [6, 2, 26, 28, 23]

Essensial at level 8 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, 0), (9, 0), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, 0), (30, 0), (31, -1), (32, 0), (33, 0), (34, -1), (35, -1), (36, -1), (37, -1), (38, 0), (39, 0), (40, 0), (41, 0), (42, 0), (43, 0), (44, -1), (45, -1), (46, -1), (47, 0), (48, 0), (49, 0), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 8 : set()

After reduction : 
 pending  : []
 solution : [6, 2, 26, 28, 23]


Solution : [6, 2, 26, 28, 23] has cost 24.


Before backtrack at level 8
 pending : []
 solution : [6, 2, 26, 28, 23]

After backtrack at level 8
 pending : [40, 9, 29, 32, 38, 39, 42, 43, 47, 48, 49, 8, 30, 33, 41]
 solution : [6, 2, 26, 28, 23]


Invert decision for 23 at level 7


New level: 8
 pending : [40, 9, 29, 32, 38, 39, 42, 43, 47, 48, 49, 8, 30, 33, 41]
 solution : [6, 2, 26, 28]


Before reduction : 
 pending  : [40, 9, 29, 32, 38, 39, 42, 43, 47, 48, 49, 8, 30, 33, 41]
 solution : [6, 2, 26, 28]

Essensial at level 8 : {8}

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, 0), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, 0), (30, 0), (31, -1), (32, 0), (33, 0), (34, -1), (35, -1), (36, -1), (37, -1), (38, 0), (39, 0), (40, 0), (41, 0), (42, 0), (43, 0), (44, -1), (45, -1), (46, -1), (47, 0), (48, 0), (49, 0), (50, -1), (51, -1), (52, -1)]

Covered at level 8 : {32, 33, 38, 39, 40, 9, 42, 43, 41, 47, 48, 49, 29, 30}

After reduction : 
 pending  : []
 solution : [6, 2, 26, 28, 8]


Before reduction : 
 pending  : []
 solution : [6, 2, 26, 28, 8]

Essensial at level 8 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, 0), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, 0), (30, 0), (31, -1), (32, 0), (33, 0), (34, -1), (35, -1), (36, -1), (37, -1), (38, 0), (39, 0), (40, 0), (41, 0), (42, 0), (43, 0), (44, -1), (45, -1), (46, -1), (47, 0), (48, 0), (49, 0), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 8 : set()

After reduction : 
 pending  : []
 solution : [6, 2, 26, 28, 8]


Solution : [6, 2, 26, 28, 8] has cost 21.


Before backtrack at level 8
 pending : []
 solution : [6, 2, 26, 28, 8]

After backtrack at level 8
 pending : [8, 40, 9, 29, 32, 38, 39, 42, 43, 47, 48, 49, 30, 33, 41]
 solution : [6, 2, 26, 28]


Before backtrack at level 7
 pending : [8, 40, 9, 29, 32, 38, 39, 42, 43, 47, 48, 49, 30, 33, 41]
 solution : [6, 2, 26, 28]

After backtrack at level 7
 pending : [8, 40, 9, 29, 32, 38, 39, 42, 43, 47, 48, 49, 30, 33, 41, 23]
 solution : [6, 2, 26, 28]


Before backtrack at level 6
 pending : [8, 40, 9, 29, 32, 38, 39, 42, 43, 47, 48, 49, 30, 33, 41, 23]
 solution : [6, 2, 26, 28]

After backtrack at level 6
 pending : [8, 40, 9, 29, 32, 38, 39, 42, 43, 47, 48, 49, 30, 33, 41, 23, 24]
 solution : [6, 2, 26, 28]


Invert decision for 28 at level 5


New level: 6
 pending : [8, 40, 9, 29, 32, 38, 39, 42, 43, 47, 48, 49, 30, 33, 41, 23, 24]
 solution : [6, 2, 26]


Before reduction : 
 pending  : [8, 40, 9, 29, 32, 38, 39, 42, 43, 47, 48, 49, 30, 33, 41, 23, 24]
 solution : [6, 2, 26]

Essensial at level 6 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, 67108864), (9, 131072), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, 67108864), (24, 268435456), (25, -1), (26, -1), (27, -1), (28, -1), (29, 4096), (30, 8192), (31, -1), (32, 262144), (33, 1048576), (34, -1), (35, -1), (36, -1), (37, -1), (38, 33554432), (39, 2048), (40, 1024), (41, 2048), (42, 65536), (43, 65536), (44, -1), (45, -1), (46, -1), (47, 16777216), (48, 2097152), (49, 8388608), (50, -1), (51, -1), (52, -1)]

Covered at level 6 : set()

After reduction : 
 pending  : [8, 40, 9, 29, 32, 38, 39, 42, 43, 47, 48, 49, 30, 33, 41, 23, 24]
 solution : [6, 2, 26]


Solution : [6, 2, 26] has cost 13.


Decide in level 6 among pending : [8, 40, 9, 29, 32, 38, 39, 42, 43, 47, 48, 49, 30, 33, 41, 23, 24]

Coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, 67108864), (9, 131072), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, 67108864), (24, 268435456), (25, -1), (26, -1), (27, -1), (28, -1), (29, 4096), (30, 8192), (31, -1), (32, 262144), (33, 1048576), (34, -1), (35, -1), (36, -1), (37, -1), (38, 33554432), (39, 2048), (40, 1024), (41, 2048), (42, 65536), (43, 65536), (44, -1), (45, -1), (46, -1), (47, 16777216), (48, 2097152), (49, 8388608), (50, -1), (51, -1), (52, -1)]

Decide 24 with phase True at level 6

After decision at level 6
 pending : [8, 40, 9, 29, 32, 38, 39, 42, 43, 47, 48, 49, 30, 33, 41, 23]
 solution : [6, 2, 26, 24]


New level: 7
 pending : [8, 40, 9, 29, 32, 38, 39, 42, 43, 47, 48, 49, 30, 33, 41, 23]
 solution : [6, 2, 26, 24]


Before reduction : 
 pending  : [8, 40, 9, 29, 32, 38, 39, 42, 43, 47, 48, 49, 30, 33, 41, 23]
 solution : [6, 2, 26, 24]

Essensial at level 7 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, 67108864), (9, 131072), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, 67108864), (24, 268435456), (25, -1), (26, -1), (27, -1), (28, -1), (29, 4096), (30, 8192), (31, -1), (32, 262144), (33, 1048576), (34, -1), (35, -1), (36, -1), (37, -1), (38, 33554432), (39, 2048), (40, 1024), (41, 2048), (42, 65536), (43, 65536), (44, -1), (45, -1), (46, -1), (47, 16777216), (48, 2097152), (49, 8388608), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, 16777216), (9, 32768), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, 16777216), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, 1024), (30, 0), (31, -1), (32, 65536), (33, 0), (34, -1), (35, -1), (36, -1), (37, -1), (38, 8388608), (39, 512), (40, 512), (41, 0), (42, 16384), (43, 16384), (44, -1), (45, -1), (46, -1), (47, 4194304), (48, 524288), (49, 4194304), (50, -1), (51, -1), (52, -1)]

Covered at level 7 : {33, 30, 41}

After reduction : 
 pending  : [8, 40, 9, 29, 32, 38, 39, 42, 43, 47, 48, 49, 23]
 solution : [6, 2, 26, 24]


Before reduction : 
 pending  : [8, 40, 9, 29, 32, 38, 39, 42, 43, 47, 48, 49, 23]
 solution : [6, 2, 26, 24]

Essensial at level 7 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, 16777216), (9, 32768), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, 16777216), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, 1024), (30, 0), (31, -1), (32, 65536), (33, 0), (34, -1), (35, -1), (36, -1), (37, -1), (38, 8388608), (39, 512), (40, 512), (41, 0), (42, 16384), (43, 16384), (44, -1), (45, -1), (46, -1), (47, 4194304), (48, 524288), (49, 4194304), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, 16777216), (9, 32768), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, 16777216), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, 1024), (30, -1), (31, -1), (32, 65536), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, 8388608), (39, 512), (40, 512), (41, -1), (42, 16384), (43, 16384), (44, -1), (45, -1), (46, -1), (47, 4194304), (48, 524288), (49, 4194304), (50, -1), (51, -1), (52, -1)]

Covered at level 7 : set()

After reduction : 
 pending  : [8, 40, 9, 29, 32, 38, 39, 42, 43, 47, 48, 49, 23]
 solution : [6, 2, 26, 24]


Solution : [6, 2, 26, 24] has cost 20.


Before backtrack at level 7
 pending : [8, 40, 9, 29, 32, 38, 39, 42, 43, 47, 48, 49, 23]
 solution : [6, 2, 26, 24]

After backtrack at level 7
 pending : [8, 40, 9, 29, 32, 38, 39, 42, 43, 47, 48, 49, 23, 30, 33, 41]
 solution : [6, 2, 26, 24]


Invert decision for 24 at level 6


New level: 7
 pending : [8, 40, 9, 29, 32, 38, 39, 42, 43, 47, 48, 49, 23, 30, 33, 41]
 solution : [6, 2, 26]


Before reduction : 
 pending  : [8, 40, 9, 29, 32, 38, 39, 42, 43, 47, 48, 49, 23, 30, 33, 41]
 solution : [6, 2, 26]

Essensial at level 7 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, 16777216), (9, 32768), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, 16777216), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, 1024), (30, -1), (31, -1), (32, 65536), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, 8388608), (39, 512), (40, 512), (41, -1), (42, 16384), (43, 16384), (44, -1), (45, -1), (46, -1), (47, 4194304), (48, 524288), (49, 4194304), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, 67108864), (9, 131072), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, 67108864), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, 4096), (30, 8192), (31, -1), (32, 262144), (33, 1048576), (34, -1), (35, -1), (36, -1), (37, -1), (38, 33554432), (39, 2048), (40, 1024), (41, 2048), (42, 65536), (43, 65536), (44, -1), (45, -1), (46, -1), (47, 16777216), (48, 2097152), (49, 8388608), (50, -1), (51, -1), (52, -1)]

Covered at level 7 : set()

After reduction : 
 pending  : [8, 40, 9, 29, 32, 38, 39, 42, 43, 47, 48, 49, 23, 30, 33, 41]
 solution : [6, 2, 26]


Solution : [6, 2, 26] has cost 13.


Decide in level 7 among pending : [8, 40, 9, 29, 32, 38, 39, 42, 43, 47, 48, 49, 23, 30, 33, 41]

Coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, 67108864), (9, 131072), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, 67108864), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, 4096), (30, 8192), (31, -1), (32, 262144), (33, 1048576), (34, -1), (35, -1), (36, -1), (37, -1), (38, 33554432), (39, 2048), (40, 1024), (41, 2048), (42, 65536), (43, 65536), (44, -1), (45, -1), (46, -1), (47, 16777216), (48, 2097152), (49, 8388608), (50, -1), (51, -1), (52, -1)]

Decide 8 with phase True at level 7

After decision at level 7
 pending : [40, 9, 29, 32, 38, 39, 42, 43, 47, 48, 49, 23, 30, 33, 41]
 solution : [6, 2, 26, 8]


New level: 8
 pending : [40, 9, 29, 32, 38, 39, 42, 43, 47, 48, 49, 23, 30, 33, 41]
 solution : [6, 2, 26, 8]


Before reduction : 
 pending  : [40, 9, 29, 32, 38, 39, 42, 43, 47, 48, 49, 23, 30, 33, 41]
 solution : [6, 2, 26, 8]

Essensial at level 8 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, 67108864), (9, 131072), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, 67108864), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, 4096), (30, 8192), (31, -1), (32, 262144), (33, 1048576), (34, -1), (35, -1), (36, -1), (37, -1), (38, 33554432), (39, 2048), (40, 1024), (41, 2048), (42, 65536), (43, 65536), (44, -1), (45, -1), (46, -1), (47, 16777216), (48, 2097152), (49, 8388608), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, 0), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, 0), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, 0), (30, 0), (31, -1), (32, 0), (33, 0), (34, -1), (35, -1), (36, -1), (37, -1), (38, 0), (39, 0), (40, 0), (41, 0), (42, 0), (43, 0), (44, -1), (45, -1), (46, -1), (47, 0), (48, 0), (49, 0), (50, -1), (51, -1), (52, -1)]

Covered at level 8 : {32, 33, 38, 39, 40, 9, 42, 43, 41, 47, 48, 49, 23, 29, 30}

After reduction : 
 pending  : []
 solution : [6, 2, 26, 8]


Before reduction : 
 pending  : []
 solution : [6, 2, 26, 8]

Essensial at level 8 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, 0), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, 0), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, 0), (30, 0), (31, -1), (32, 0), (33, 0), (34, -1), (35, -1), (36, -1), (37, -1), (38, 0), (39, 0), (40, 0), (41, 0), (42, 0), (43, 0), (44, -1), (45, -1), (46, -1), (47, 0), (48, 0), (49, 0), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 8 : set()

After reduction : 
 pending  : []
 solution : [6, 2, 26, 8]


Solution : [6, 2, 26, 8] has cost 17.


Before backtrack at level 8
 pending : []
 solution : [6, 2, 26, 8]

After backtrack at level 8
 pending : [40, 9, 29, 32, 38, 39, 42, 43, 47, 48, 49, 23, 30, 33, 41]
 solution : [6, 2, 26, 8]


Invert decision for 8 at level 7


New level: 8
 pending : [40, 9, 29, 32, 38, 39, 42, 43, 47, 48, 49, 23, 30, 33, 41]
 solution : [6, 2, 26]


Before reduction : 
 pending  : [40, 9, 29, 32, 38, 39, 42, 43, 47, 48, 49, 23, 30, 33, 41]
 solution : [6, 2, 26]

Essensial at level 8 : {23}

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, 0), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, 0), (30, 0), (31, -1), (32, 0), (33, 0), (34, -1), (35, -1), (36, -1), (37, -1), (38, 0), (39, 0), (40, 0), (41, 0), (42, 0), (43, 0), (44, -1), (45, -1), (46, -1), (47, 0), (48, 0), (49, 0), (50, -1), (51, -1), (52, -1)]

Covered at level 8 : {32, 33, 38, 39, 40, 9, 42, 43, 41, 47, 48, 49, 29, 30}

After reduction : 
 pending  : []
 solution : [6, 2, 26, 23]


Before reduction : 
 pending  : []
 solution : [6, 2, 26, 23]

Essensial at level 8 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, 0), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, 0), (30, 0), (31, -1), (32, 0), (33, 0), (34, -1), (35, -1), (36, -1), (37, -1), (38, 0), (39, 0), (40, 0), (41, 0), (42, 0), (43, 0), (44, -1), (45, -1), (46, -1), (47, 0), (48, 0), (49, 0), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 8 : set()

After reduction : 
 pending  : []
 solution : [6, 2, 26, 23]


Solution : [6, 2, 26, 23] has cost 20.


Before backtrack at level 8
 pending : []
 solution : [6, 2, 26, 23]

After backtrack at level 8
 pending : [23, 40, 9, 29, 32, 38, 39, 42, 43, 47, 48, 49, 30, 33, 41]
 solution : [6, 2, 26]


Before backtrack at level 7
 pending : [23, 40, 9, 29, 32, 38, 39, 42, 43, 47, 48, 49, 30, 33, 41]
 solution : [6, 2, 26]

After backtrack at level 7
 pending : [23, 40, 9, 29, 32, 38, 39, 42, 43, 47, 48, 49, 30, 33, 41, 8]
 solution : [6, 2, 26]


Before backtrack at level 6
 pending : [23, 40, 9, 29, 32, 38, 39, 42, 43, 47, 48, 49, 30, 33, 41, 8]
 solution : [6, 2, 26]

After backtrack at level 6
 pending : [23, 40, 9, 29, 32, 38, 39, 42, 43, 47, 48, 49, 30, 33, 41, 8, 24]
 solution : [6, 2, 26]


Before backtrack at level 5
 pending : [23, 40, 9, 29, 32, 38, 39, 42, 43, 47, 48, 49, 30, 33, 41, 8, 24]
 solution : [6, 2, 26]

After backtrack at level 5
 pending : [23, 40, 9, 29, 32, 38, 39, 42, 43, 47, 48, 49, 30, 33, 41, 8, 24, 28]
 solution : [6, 2, 26]


Before backtrack at level 4
 pending : [23, 40, 9, 29, 32, 38, 39, 42, 43, 47, 48, 49, 30, 33, 41, 8, 24, 28]
 solution : [6, 2, 26]

After backtrack at level 4
 pending : [23, 40, 9, 29, 32, 38, 39, 42, 43, 47, 48, 49, 30, 33, 41, 8, 24, 28, 25, 37, 0, 16, 19, 22, 20, 15, 21, 14, 18, 17, 35]
 solution : [6, 2, 26]


Invert decision for 26 at level 3


New level: 4
 pending : [23, 40, 9, 29, 32, 38, 39, 42, 43, 47, 48, 49, 30, 33, 41, 8, 24, 28, 25, 37, 0, 16, 19, 22, 20, 15, 21, 14, 18, 17, 35]
 solution : [6, 2]


Before reduction : 
 pending  : [23, 40, 9, 29, 32, 38, 39, 42, 43, 47, 48, 49, 30, 33, 41, 8, 24, 28, 25, 37, 0, 16, 19, 22, 20, 15, 21, 14, 18, 17, 35]
 solution : [6, 2]

Essensial at level 4 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, 524288), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, 67108864), (9, 524288), (10, -1), (11, -1), (12, -1), (13, -1), (14, 33554432), (15, 16777216), (16, 786432), (17, 1073741824), (18, 536870912), (19, 262144), (20, 4194304), (21, 8388608), (22, 131072), (23, 67108864), (24, 268435456), (25, 2097152), (26, -1), (27, -1), (28, 536870912), (29, 8192), (30, 8192), (31, -1), (32, 524288), (33, 1048576), (34, -1), (35, 536870912), (36, -1), (37, 2097152), (38, 67108864), (39, 8192), (40, 67108864), (41, 134217728), (42, 262144), (43, 262144), (44, -1), (45, -1), (46, -1), (47, 33554432), (48, 8388608), (49, 33554432), (50, -1), (51, -1), (52, -1)]

Covered at level 4 : set()

After reduction : 
 pending  : [23, 40, 9, 29, 32, 38, 39, 42, 43, 47, 48, 49, 30, 33, 41, 8, 24, 28, 25, 37, 0, 16, 19, 22, 20, 15, 21, 14, 18, 17, 35]
 solution : [6, 2]


Solution : [6, 2] has cost 9.


Decide in level 4 among pending : [23, 40, 9, 29, 32, 38, 39, 42, 43, 47, 48, 49, 30, 33, 41, 8, 24, 28, 25, 37, 0, 16, 19, 22, 20, 15, 21, 14, 18, 17, 35]

Coverage : [(0, 524288), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, 67108864), (9, 524288), (10, -1), (11, -1), (12, -1), (13, -1), (14, 33554432), (15, 16777216), (16, 786432), (17, 1073741824), (18, 536870912), (19, 262144), (20, 4194304), (21, 8388608), (22, 131072), (23, 67108864), (24, 268435456), (25, 2097152), (26, -1), (27, -1), (28, 536870912), (29, 8192), (30, 8192), (31, -1), (32, 524288), (33, 1048576), (34, -1), (35, 536870912), (36, -1), (37, 2097152), (38, 67108864), (39, 8192), (40, 67108864), (41, 134217728), (42, 262144), (43, 262144), (44, -1), (45, -1), (46, -1), (47, 33554432), (48, 8388608), (49, 33554432), (50, -1), (51, -1), (52, -1)]

Decide 17 with phase True at level 4

After decision at level 4
 pending : [23, 40, 9, 29, 32, 38, 39, 42, 43, 47, 48, 49, 30, 33, 41, 8, 24, 28, 25, 37, 0, 16, 19, 22, 20, 15, 21, 14, 18, 35]
 solution : [6, 2, 17]


New level: 5
 pending : [23, 40, 9, 29, 32, 38, 39, 42, 43, 47, 48, 49, 30, 33, 41, 8, 24, 28, 25, 37, 0, 16, 19, 22, 20, 15, 21, 14, 18, 35]
 solution : [6, 2, 17]


Before reduction : 
 pending  : [23, 40, 9, 29, 32, 38, 39, 42, 43, 47, 48, 49, 30, 33, 41, 8, 24, 28, 25, 37, 0, 16, 19, 22, 20, 15, 21, 14, 18, 35]
 solution : [6, 2, 17]

Essensial at level 5 : set()

Before removed
 coverage : [(0, 524288), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, 67108864), (9, 524288), (10, -1), (11, -1), (12, -1), (13, -1), (14, 33554432), (15, 16777216), (16, 786432), (17, 1073741824), (18, 536870912), (19, 262144), (20, 4194304), (21, 8388608), (22, 131072), (23, 67108864), (24, 268435456), (25, 2097152), (26, -1), (27, -1), (28, 536870912), (29, 8192), (30, 8192), (31, -1), (32, 524288), (33, 1048576), (34, -1), (35, 536870912), (36, -1), (37, 2097152), (38, 67108864), (39, 8192), (40, 67108864), (41, 134217728), (42, 262144), (43, 262144), (44, -1), (45, -1), (46, -1), (47, 33554432), (48, 8388608), (49, 33554432), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, 0), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, 67108864), (9, 131072), (10, -1), (11, -1), (12, -1), (13, -1), (14, 0), (15, 0), (16, 0), (17, -1), (18, 0), (19, 0), (20, 0), (21, 0), (22, 0), (23, 67108864), (24, 268435456), (25, 0), (26, -1), (27, -1), (28, 536870912), (29, 4096), (30, 8192), (31, -1), (32, 262144), (33, 1048576), (34, -1), (35, 536870912), (36, -1), (37, 0), (38, 33554432), (39, 2048), (40, 1024), (41, 2048), (42, 65536), (43, 65536), (44, -1), (45, -1), (46, -1), (47, 16777216), (48, 2097152), (49, 33554432), (50, -1), (51, -1), (52, -1)]

Covered at level 5 : {0, 37, 14, 15, 16, 18, 19, 20, 21, 22, 25}

After reduction : 
 pending  : [23, 40, 9, 29, 32, 38, 39, 42, 43, 47, 48, 49, 30, 33, 41, 8, 24, 28, 35]
 solution : [6, 2, 17]


Before reduction : 
 pending  : [23, 40, 9, 29, 32, 38, 39, 42, 43, 47, 48, 49, 30, 33, 41, 8, 24, 28, 35]
 solution : [6, 2, 17]

Essensial at level 5 : set()

Before removed
 coverage : [(0, 0), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, 67108864), (9, 131072), (10, -1), (11, -1), (12, -1), (13, -1), (14, 0), (15, 0), (16, 0), (17, -1), (18, 0), (19, 0), (20, 0), (21, 0), (22, 0), (23, 67108864), (24, 268435456), (25, 0), (26, -1), (27, -1), (28, 536870912), (29, 4096), (30, 8192), (31, -1), (32, 262144), (33, 1048576), (34, -1), (35, 536870912), (36, -1), (37, 0), (38, 33554432), (39, 2048), (40, 1024), (41, 2048), (42, 65536), (43, 65536), (44, -1), (45, -1), (46, -1), (47, 16777216), (48, 2097152), (49, 33554432), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, 67108864), (9, 131072), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, 67108864), (24, 268435456), (25, -1), (26, -1), (27, -1), (28, 536870912), (29, 4096), (30, 8192), (31, -1), (32, 262144), (33, 1048576), (34, -1), (35, 536870912), (36, -1), (37, -1), (38, 33554432), (39, 2048), (40, 1024), (41, 2048), (42, 65536), (43, 65536), (44, -1), (45, -1), (46, -1), (47, 16777216), (48, 2097152), (49, 33554432), (50, -1), (51, -1), (52, -1)]

Covered at level 5 : set()

After reduction : 
 pending  : [23, 40, 9, 29, 32, 38, 39, 42, 43, 47, 48, 49, 30, 33, 41, 8, 24, 28, 35]
 solution : [6, 2, 17]


Solution : [6, 2, 17] has cost 16.


Decide in level 5 among pending : [23, 40, 9, 29, 32, 38, 39, 42, 43, 47, 48, 49, 30, 33, 41, 8, 24, 28, 35]

Coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, 67108864), (9, 131072), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, 67108864), (24, 268435456), (25, -1), (26, -1), (27, -1), (28, 536870912), (29, 4096), (30, 8192), (31, -1), (32, 262144), (33, 1048576), (34, -1), (35, 536870912), (36, -1), (37, -1), (38, 33554432), (39, 2048), (40, 1024), (41, 2048), (42, 65536), (43, 65536), (44, -1), (45, -1), (46, -1), (47, 16777216), (48, 2097152), (49, 33554432), (50, -1), (51, -1), (52, -1)]

Decide 28 with phase True at level 5

After decision at level 5
 pending : [23, 40, 9, 29, 32, 38, 39, 42, 43, 47, 48, 49, 30, 33, 41, 8, 24, 35]
 solution : [6, 2, 17, 28]


New level: 6
 pending : [23, 40, 9, 29, 32, 38, 39, 42, 43, 47, 48, 49, 30, 33, 41, 8, 24, 35]
 solution : [6, 2, 17, 28]


Before reduction : 
 pending  : [23, 40, 9, 29, 32, 38, 39, 42, 43, 47, 48, 49, 30, 33, 41, 8, 24, 35]
 solution : [6, 2, 17, 28]

Essensial at level 6 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, 67108864), (9, 131072), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, 67108864), (24, 268435456), (25, -1), (26, -1), (27, -1), (28, 536870912), (29, 4096), (30, 8192), (31, -1), (32, 262144), (33, 1048576), (34, -1), (35, 536870912), (36, -1), (37, -1), (38, 33554432), (39, 2048), (40, 1024), (41, 2048), (42, 65536), (43, 65536), (44, -1), (45, -1), (46, -1), (47, 16777216), (48, 2097152), (49, 33554432), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, 67108864), (9, 131072), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, 67108864), (24, 134217728), (25, -1), (26, -1), (27, -1), (28, -1), (29, 4096), (30, 4096), (31, -1), (32, 262144), (33, 524288), (34, -1), (35, 268435456), (36, -1), (37, -1), (38, 33554432), (39, 2048), (40, 1024), (41, 2048), (42, 65536), (43, 65536), (44, -1), (45, -1), (46, -1), (47, 16777216), (48, 2097152), (49, 33554432), (50, -1), (51, -1), (52, -1)]

Covered at level 6 : set()

After reduction : 
 pending  : [23, 40, 9, 29, 32, 38, 39, 42, 43, 47, 48, 49, 30, 33, 41, 8, 24, 35]
 solution : [6, 2, 17, 28]


Solution : [6, 2, 17, 28] has cost 20.


Before backtrack at level 6
 pending : [23, 40, 9, 29, 32, 38, 39, 42, 43, 47, 48, 49, 30, 33, 41, 8, 24, 35]
 solution : [6, 2, 17, 28]

After backtrack at level 6
 pending : [23, 40, 9, 29, 32, 38, 39, 42, 43, 47, 48, 49, 30, 33, 41, 8, 24, 35]
 solution : [6, 2, 17, 28]


Invert decision for 28 at level 5


New level: 6
 pending : [23, 40, 9, 29, 32, 38, 39, 42, 43, 47, 48, 49, 30, 33, 41, 8, 24, 35]
 solution : [6, 2, 17]


Before reduction : 
 pending  : [23, 40, 9, 29, 32, 38, 39, 42, 43, 47, 48, 49, 30, 33, 41, 8, 24, 35]
 solution : [6, 2, 17]

Essensial at level 6 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, 67108864), (9, 131072), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, 67108864), (24, 134217728), (25, -1), (26, -1), (27, -1), (28, -1), (29, 4096), (30, 4096), (31, -1), (32, 262144), (33, 524288), (34, -1), (35, 268435456), (36, -1), (37, -1), (38, 33554432), (39, 2048), (40, 1024), (41, 2048), (42, 65536), (43, 65536), (44, -1), (45, -1), (46, -1), (47, 16777216), (48, 2097152), (49, 33554432), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, 67108864), (9, 131072), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, 67108864), (24, 268435456), (25, -1), (26, -1), (27, -1), (28, -1), (29, 4096), (30, 8192), (31, -1), (32, 262144), (33, 1048576), (34, -1), (35, 536870912), (36, -1), (37, -1), (38, 33554432), (39, 2048), (40, 1024), (41, 2048), (42, 65536), (43, 65536), (44, -1), (45, -1), (46, -1), (47, 16777216), (48, 2097152), (49, 33554432), (50, -1), (51, -1), (52, -1)]

Covered at level 6 : set()

After reduction : 
 pending  : [23, 40, 9, 29, 32, 38, 39, 42, 43, 47, 48, 49, 30, 33, 41, 8, 24, 35]
 solution : [6, 2, 17]


Solution : [6, 2, 17] has cost 16.


Decide in level 6 among pending : [23, 40, 9, 29, 32, 38, 39, 42, 43, 47, 48, 49, 30, 33, 41, 8, 24, 35]

Coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, 67108864), (9, 131072), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, 67108864), (24, 268435456), (25, -1), (26, -1), (27, -1), (28, -1), (29, 4096), (30, 8192), (31, -1), (32, 262144), (33, 1048576), (34, -1), (35, 536870912), (36, -1), (37, -1), (38, 33554432), (39, 2048), (40, 1024), (41, 2048), (42, 65536), (43, 65536), (44, -1), (45, -1), (46, -1), (47, 16777216), (48, 2097152), (49, 33554432), (50, -1), (51, -1), (52, -1)]

Decide 35 with phase True at level 6

After decision at level 6
 pending : [23, 40, 9, 29, 32, 38, 39, 42, 43, 47, 48, 49, 30, 33, 41, 8, 24]
 solution : [6, 2, 17, 35]


New level: 7
 pending : [23, 40, 9, 29, 32, 38, 39, 42, 43, 47, 48, 49, 30, 33, 41, 8, 24]
 solution : [6, 2, 17, 35]


Before reduction : 
 pending  : [23, 40, 9, 29, 32, 38, 39, 42, 43, 47, 48, 49, 30, 33, 41, 8, 24]
 solution : [6, 2, 17, 35]

Essensial at level 7 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, 67108864), (9, 131072), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, 67108864), (24, 268435456), (25, -1), (26, -1), (27, -1), (28, -1), (29, 4096), (30, 8192), (31, -1), (32, 262144), (33, 1048576), (34, -1), (35, 536870912), (36, -1), (37, -1), (38, 33554432), (39, 2048), (40, 1024), (41, 2048), (42, 65536), (43, 65536), (44, -1), (45, -1), (46, -1), (47, 16777216), (48, 2097152), (49, 33554432), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, 67108864), (9, 32768), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, 67108864), (24, 4096), (25, -1), (26, -1), (27, -1), (28, -1), (29, 1024), (30, 0), (31, -1), (32, 65536), (33, 0), (34, -1), (35, -1), (36, -1), (37, -1), (38, 8388608), (39, 512), (40, 512), (41, 0), (42, 16384), (43, 16384), (44, -1), (45, -1), (46, -1), (47, 4194304), (48, 524288), (49, 8388608), (50, -1), (51, -1), (52, -1)]

Covered at level 7 : {33, 30, 41}

After reduction : 
 pending  : [23, 40, 9, 29, 32, 38, 39, 42, 43, 47, 48, 49, 8, 24]
 solution : [6, 2, 17, 35]


Before reduction : 
 pending  : [23, 40, 9, 29, 32, 38, 39, 42, 43, 47, 48, 49, 8, 24]
 solution : [6, 2, 17, 35]

Essensial at level 7 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, 67108864), (9, 32768), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, 67108864), (24, 4096), (25, -1), (26, -1), (27, -1), (28, -1), (29, 1024), (30, 0), (31, -1), (32, 65536), (33, 0), (34, -1), (35, -1), (36, -1), (37, -1), (38, 8388608), (39, 512), (40, 512), (41, 0), (42, 16384), (43, 16384), (44, -1), (45, -1), (46, -1), (47, 4194304), (48, 524288), (49, 8388608), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, 67108864), (9, 32768), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, 67108864), (24, 4096), (25, -1), (26, -1), (27, -1), (28, -1), (29, 1024), (30, -1), (31, -1), (32, 65536), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, 8388608), (39, 512), (40, 512), (41, -1), (42, 16384), (43, 16384), (44, -1), (45, -1), (46, -1), (47, 4194304), (48, 524288), (49, 8388608), (50, -1), (51, -1), (52, -1)]

Covered at level 7 : set()

After reduction : 
 pending  : [23, 40, 9, 29, 32, 38, 39, 42, 43, 47, 48, 49, 8, 24]
 solution : [6, 2, 17, 35]


Solution : [6, 2, 17, 35] has cost 29.


Before backtrack at level 7
 pending : [23, 40, 9, 29, 32, 38, 39, 42, 43, 47, 48, 49, 8, 24]
 solution : [6, 2, 17, 35]

After backtrack at level 7
 pending : [23, 40, 9, 29, 32, 38, 39, 42, 43, 47, 48, 49, 8, 24, 30, 33, 41]
 solution : [6, 2, 17, 35]


Invert decision for 35 at level 6


New level: 7
 pending : [23, 40, 9, 29, 32, 38, 39, 42, 43, 47, 48, 49, 8, 24, 30, 33, 41]
 solution : [6, 2, 17]


Before reduction : 
 pending  : [23, 40, 9, 29, 32, 38, 39, 42, 43, 47, 48, 49, 8, 24, 30, 33, 41]
 solution : [6, 2, 17]

Essensial at level 7 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, 67108864), (9, 32768), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, 67108864), (24, 4096), (25, -1), (26, -1), (27, -1), (28, -1), (29, 1024), (30, -1), (31, -1), (32, 65536), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, 8388608), (39, 512), (40, 512), (41, -1), (42, 16384), (43, 16384), (44, -1), (45, -1), (46, -1), (47, 4194304), (48, 524288), (49, 8388608), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, 67108864), (9, 131072), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, 67108864), (24, 268435456), (25, -1), (26, -1), (27, -1), (28, -1), (29, 4096), (30, 8192), (31, -1), (32, 262144), (33, 1048576), (34, -1), (35, -1), (36, -1), (37, -1), (38, 33554432), (39, 2048), (40, 1024), (41, 2048), (42, 65536), (43, 65536), (44, -1), (45, -1), (46, -1), (47, 16777216), (48, 2097152), (49, 33554432), (50, -1), (51, -1), (52, -1)]

Covered at level 7 : set()

After reduction : 
 pending  : [23, 40, 9, 29, 32, 38, 39, 42, 43, 47, 48, 49, 8, 24, 30, 33, 41]
 solution : [6, 2, 17]


Solution : [6, 2, 17] has cost 16.


Decide in level 7 among pending : [23, 40, 9, 29, 32, 38, 39, 42, 43, 47, 48, 49, 8, 24, 30, 33, 41]

Coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, 67108864), (9, 131072), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, 67108864), (24, 268435456), (25, -1), (26, -1), (27, -1), (28, -1), (29, 4096), (30, 8192), (31, -1), (32, 262144), (33, 1048576), (34, -1), (35, -1), (36, -1), (37, -1), (38, 33554432), (39, 2048), (40, 1024), (41, 2048), (42, 65536), (43, 65536), (44, -1), (45, -1), (46, -1), (47, 16777216), (48, 2097152), (49, 33554432), (50, -1), (51, -1), (52, -1)]

Decide 24 with phase True at level 7

After decision at level 7
 pending : [23, 40, 9, 29, 32, 38, 39, 42, 43, 47, 48, 49, 8, 30, 33, 41]
 solution : [6, 2, 17, 24]


New level: 8
 pending : [23, 40, 9, 29, 32, 38, 39, 42, 43, 47, 48, 49, 8, 30, 33, 41]
 solution : [6, 2, 17, 24]


Before reduction : 
 pending  : [23, 40, 9, 29, 32, 38, 39, 42, 43, 47, 48, 49, 8, 30, 33, 41]
 solution : [6, 2, 17, 24]

Essensial at level 8 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, 67108864), (9, 131072), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, 67108864), (24, 268435456), (25, -1), (26, -1), (27, -1), (28, -1), (29, 4096), (30, 8192), (31, -1), (32, 262144), (33, 1048576), (34, -1), (35, -1), (36, -1), (37, -1), (38, 33554432), (39, 2048), (40, 1024), (41, 2048), (42, 65536), (43, 65536), (44, -1), (45, -1), (46, -1), (47, 16777216), (48, 2097152), (49, 33554432), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, 16777216), (9, 32768), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, 16777216), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, 1024), (30, 0), (31, -1), (32, 65536), (33, 0), (34, -1), (35, -1), (36, -1), (37, -1), (38, 8388608), (39, 512), (40, 512), (41, 0), (42, 16384), (43, 16384), (44, -1), (45, -1), (46, -1), (47, 4194304), (48, 524288), (49, 16777216), (50, -1), (51, -1), (52, -1)]

Covered at level 8 : {33, 30, 41}

After reduction : 
 pending  : [23, 40, 9, 29, 32, 38, 39, 42, 43, 47, 48, 49, 8]
 solution : [6, 2, 17, 24]


Before reduction : 
 pending  : [23, 40, 9, 29, 32, 38, 39, 42, 43, 47, 48, 49, 8]
 solution : [6, 2, 17, 24]

Essensial at level 8 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, 16777216), (9, 32768), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, 16777216), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, 1024), (30, 0), (31, -1), (32, 65536), (33, 0), (34, -1), (35, -1), (36, -1), (37, -1), (38, 8388608), (39, 512), (40, 512), (41, 0), (42, 16384), (43, 16384), (44, -1), (45, -1), (46, -1), (47, 4194304), (48, 524288), (49, 16777216), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, 16777216), (9, 32768), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, 16777216), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, 1024), (30, -1), (31, -1), (32, 65536), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, 8388608), (39, 512), (40, 512), (41, -1), (42, 16384), (43, 16384), (44, -1), (45, -1), (46, -1), (47, 4194304), (48, 524288), (49, 16777216), (50, -1), (51, -1), (52, -1)]

Covered at level 8 : set()

After reduction : 
 pending  : [23, 40, 9, 29, 32, 38, 39, 42, 43, 47, 48, 49, 8]
 solution : [6, 2, 17, 24]


Solution : [6, 2, 17, 24] has cost 23.


Before backtrack at level 8
 pending : [23, 40, 9, 29, 32, 38, 39, 42, 43, 47, 48, 49, 8]
 solution : [6, 2, 17, 24]

After backtrack at level 8
 pending : [23, 40, 9, 29, 32, 38, 39, 42, 43, 47, 48, 49, 8, 30, 33, 41]
 solution : [6, 2, 17, 24]


Invert decision for 24 at level 7


New level: 8
 pending : [23, 40, 9, 29, 32, 38, 39, 42, 43, 47, 48, 49, 8, 30, 33, 41]
 solution : [6, 2, 17]


Before reduction : 
 pending  : [23, 40, 9, 29, 32, 38, 39, 42, 43, 47, 48, 49, 8, 30, 33, 41]
 solution : [6, 2, 17]

Essensial at level 8 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, 16777216), (9, 32768), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, 16777216), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, 1024), (30, -1), (31, -1), (32, 65536), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, 8388608), (39, 512), (40, 512), (41, -1), (42, 16384), (43, 16384), (44, -1), (45, -1), (46, -1), (47, 4194304), (48, 524288), (49, 16777216), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, 67108864), (9, 131072), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, 67108864), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, 4096), (30, 8192), (31, -1), (32, 262144), (33, 1048576), (34, -1), (35, -1), (36, -1), (37, -1), (38, 33554432), (39, 2048), (40, 1024), (41, 2048), (42, 65536), (43, 65536), (44, -1), (45, -1), (46, -1), (47, 16777216), (48, 2097152), (49, 33554432), (50, -1), (51, -1), (52, -1)]

Covered at level 8 : set()

After reduction : 
 pending  : [23, 40, 9, 29, 32, 38, 39, 42, 43, 47, 48, 49, 8, 30, 33, 41]
 solution : [6, 2, 17]


Solution : [6, 2, 17] has cost 16.


Decide in level 8 among pending : [23, 40, 9, 29, 32, 38, 39, 42, 43, 47, 48, 49, 8, 30, 33, 41]

Coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, 67108864), (9, 131072), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, 67108864), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, 4096), (30, 8192), (31, -1), (32, 262144), (33, 1048576), (34, -1), (35, -1), (36, -1), (37, -1), (38, 33554432), (39, 2048), (40, 1024), (41, 2048), (42, 65536), (43, 65536), (44, -1), (45, -1), (46, -1), (47, 16777216), (48, 2097152), (49, 33554432), (50, -1), (51, -1), (52, -1)]

Decide 23 with phase True at level 8

After decision at level 8
 pending : [40, 9, 29, 32, 38, 39, 42, 43, 47, 48, 49, 8, 30, 33, 41]
 solution : [6, 2, 17, 23]


New level: 9
 pending : [40, 9, 29, 32, 38, 39, 42, 43, 47, 48, 49, 8, 30, 33, 41]
 solution : [6, 2, 17, 23]


Before reduction : 
 pending  : [40, 9, 29, 32, 38, 39, 42, 43, 47, 48, 49, 8, 30, 33, 41]
 solution : [6, 2, 17, 23]

Essensial at level 9 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, 67108864), (9, 131072), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, 67108864), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, 4096), (30, 8192), (31, -1), (32, 262144), (33, 1048576), (34, -1), (35, -1), (36, -1), (37, -1), (38, 33554432), (39, 2048), (40, 1024), (41, 2048), (42, 65536), (43, 65536), (44, -1), (45, -1), (46, -1), (47, 16777216), (48, 2097152), (49, 33554432), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, 0), (9, 0), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, 0), (30, 0), (31, -1), (32, 0), (33, 0), (34, -1), (35, -1), (36, -1), (37, -1), (38, 0), (39, 0), (40, 0), (41, 0), (42, 0), (43, 0), (44, -1), (45, -1), (46, -1), (47, 0), (48, 0), (49, 0), (50, -1), (51, -1), (52, -1)]

Covered at level 9 : {32, 33, 38, 39, 40, 9, 42, 43, 8, 41, 47, 48, 49, 29, 30}

After reduction : 
 pending  : []
 solution : [6, 2, 17, 23]


Before reduction : 
 pending  : []
 solution : [6, 2, 17, 23]

Essensial at level 9 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, 0), (9, 0), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, 0), (30, 0), (31, -1), (32, 0), (33, 0), (34, -1), (35, -1), (36, -1), (37, -1), (38, 0), (39, 0), (40, 0), (41, 0), (42, 0), (43, 0), (44, -1), (45, -1), (46, -1), (47, 0), (48, 0), (49, 0), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 9 : set()

After reduction : 
 pending  : []
 solution : [6, 2, 17, 23]


Solution : [6, 2, 17, 23] has cost 23.


Before backtrack at level 9
 pending : []
 solution : [6, 2, 17, 23]

After backtrack at level 9
 pending : [40, 9, 29, 32, 38, 39, 42, 43, 47, 48, 49, 8, 30, 33, 41]
 solution : [6, 2, 17, 23]


Invert decision for 23 at level 8


New level: 9
 pending : [40, 9, 29, 32, 38, 39, 42, 43, 47, 48, 49, 8, 30, 33, 41]
 solution : [6, 2, 17]


Before reduction : 
 pending  : [40, 9, 29, 32, 38, 39, 42, 43, 47, 48, 49, 8, 30, 33, 41]
 solution : [6, 2, 17]

Essensial at level 9 : {8}

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, 0), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, 0), (30, 0), (31, -1), (32, 0), (33, 0), (34, -1), (35, -1), (36, -1), (37, -1), (38, 0), (39, 0), (40, 0), (41, 0), (42, 0), (43, 0), (44, -1), (45, -1), (46, -1), (47, 0), (48, 0), (49, 0), (50, -1), (51, -1), (52, -1)]

Covered at level 9 : {32, 33, 38, 39, 40, 9, 42, 43, 41, 47, 48, 49, 29, 30}

After reduction : 
 pending  : []
 solution : [6, 2, 17, 8]


Before reduction : 
 pending  : []
 solution : [6, 2, 17, 8]

Essensial at level 9 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, 0), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, 0), (30, 0), (31, -1), (32, 0), (33, 0), (34, -1), (35, -1), (36, -1), (37, -1), (38, 0), (39, 0), (40, 0), (41, 0), (42, 0), (43, 0), (44, -1), (45, -1), (46, -1), (47, 0), (48, 0), (49, 0), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 9 : set()

After reduction : 
 pending  : []
 solution : [6, 2, 17, 8]


Solution : [6, 2, 17, 8] has cost 20.


Before backtrack at level 9
 pending : []
 solution : [6, 2, 17, 8]

After backtrack at level 9
 pending : [8, 40, 9, 29, 32, 38, 39, 42, 43, 47, 48, 49, 30, 33, 41]
 solution : [6, 2, 17]


Before backtrack at level 8
 pending : [8, 40, 9, 29, 32, 38, 39, 42, 43, 47, 48, 49, 30, 33, 41]
 solution : [6, 2, 17]

After backtrack at level 8
 pending : [8, 40, 9, 29, 32, 38, 39, 42, 43, 47, 48, 49, 30, 33, 41, 23]
 solution : [6, 2, 17]


Before backtrack at level 7
 pending : [8, 40, 9, 29, 32, 38, 39, 42, 43, 47, 48, 49, 30, 33, 41, 23]
 solution : [6, 2, 17]

After backtrack at level 7
 pending : [8, 40, 9, 29, 32, 38, 39, 42, 43, 47, 48, 49, 30, 33, 41, 23, 24]
 solution : [6, 2, 17]


Before backtrack at level 6
 pending : [8, 40, 9, 29, 32, 38, 39, 42, 43, 47, 48, 49, 30, 33, 41, 23, 24]
 solution : [6, 2, 17]

After backtrack at level 6
 pending : [8, 40, 9, 29, 32, 38, 39, 42, 43, 47, 48, 49, 30, 33, 41, 23, 24, 35]
 solution : [6, 2, 17]


Before backtrack at level 5
 pending : [8, 40, 9, 29, 32, 38, 39, 42, 43, 47, 48, 49, 30, 33, 41, 23, 24, 35]
 solution : [6, 2, 17]

After backtrack at level 5
 pending : [8, 40, 9, 29, 32, 38, 39, 42, 43, 47, 48, 49, 30, 33, 41, 23, 24, 35, 25, 37, 0, 16, 19, 22, 20, 15, 21, 14, 18, 28]
 solution : [6, 2, 17]


Invert decision for 17 at level 4


New level: 5
 pending : [8, 40, 9, 29, 32, 38, 39, 42, 43, 47, 48, 49, 30, 33, 41, 23, 24, 35, 25, 37, 0, 16, 19, 22, 20, 15, 21, 14, 18, 28]
 solution : [6, 2]


Before reduction : 
 pending  : [8, 40, 9, 29, 32, 38, 39, 42, 43, 47, 48, 49, 30, 33, 41, 23, 24, 35, 25, 37, 0, 16, 19, 22, 20, 15, 21, 14, 18, 28]
 solution : [6, 2]

Essensial at level 5 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, 524288), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, 67108864), (9, 524288), (10, -1), (11, -1), (12, -1), (13, -1), (14, 33554432), (15, 16777216), (16, 786432), (17, -1), (18, 536870912), (19, 262144), (20, 4194304), (21, 8388608), (22, 131072), (23, 67108864), (24, 268435456), (25, 2097152), (26, -1), (27, -1), (28, 536870912), (29, 8192), (30, 8192), (31, -1), (32, 524288), (33, 1048576), (34, -1), (35, 536870912), (36, -1), (37, 2097152), (38, 67108864), (39, 8192), (40, 67108864), (41, 134217728), (42, 262144), (43, 262144), (44, -1), (45, -1), (46, -1), (47, 33554432), (48, 8388608), (49, 33554432), (50, -1), (51, -1), (52, -1)]

Covered at level 5 : set()

After reduction : 
 pending  : [8, 40, 9, 29, 32, 38, 39, 42, 43, 47, 48, 49, 30, 33, 41, 23, 24, 35, 25, 37, 0, 16, 19, 22, 20, 15, 21, 14, 18, 28]
 solution : [6, 2]


Solution : [6, 2] has cost 9.


Decide in level 5 among pending : [8, 40, 9, 29, 32, 38, 39, 42, 43, 47, 48, 49, 30, 33, 41, 23, 24, 35, 25, 37, 0, 16, 19, 22, 20, 15, 21, 14, 18, 28]

Coverage : [(0, 524288), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, 67108864), (9, 524288), (10, -1), (11, -1), (12, -1), (13, -1), (14, 33554432), (15, 16777216), (16, 786432), (17, -1), (18, 536870912), (19, 262144), (20, 4194304), (21, 8388608), (22, 131072), (23, 67108864), (24, 268435456), (25, 2097152), (26, -1), (27, -1), (28, 536870912), (29, 8192), (30, 8192), (31, -1), (32, 524288), (33, 1048576), (34, -1), (35, 536870912), (36, -1), (37, 2097152), (38, 67108864), (39, 8192), (40, 67108864), (41, 134217728), (42, 262144), (43, 262144), (44, -1), (45, -1), (46, -1), (47, 33554432), (48, 8388608), (49, 33554432), (50, -1), (51, -1), (52, -1)]

Decide 35 with phase True at level 5

After decision at level 5
 pending : [8, 40, 9, 29, 32, 38, 39, 42, 43, 47, 48, 49, 30, 33, 41, 23, 24, 25, 37, 0, 16, 19, 22, 20, 15, 21, 14, 18, 28]
 solution : [6, 2, 35]


New level: 6
 pending : [8, 40, 9, 29, 32, 38, 39, 42, 43, 47, 48, 49, 30, 33, 41, 23, 24, 25, 37, 0, 16, 19, 22, 20, 15, 21, 14, 18, 28]
 solution : [6, 2, 35]


Before reduction : 
 pending  : [8, 40, 9, 29, 32, 38, 39, 42, 43, 47, 48, 49, 30, 33, 41, 23, 24, 25, 37, 0, 16, 19, 22, 20, 15, 21, 14, 18, 28]
 solution : [6, 2, 35]

Essensial at level 6 : set()

Before removed
 coverage : [(0, 524288), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, 67108864), (9, 524288), (10, -1), (11, -1), (12, -1), (13, -1), (14, 33554432), (15, 16777216), (16, 786432), (17, -1), (18, 536870912), (19, 262144), (20, 4194304), (21, 8388608), (22, 131072), (23, 67108864), (24, 268435456), (25, 2097152), (26, -1), (27, -1), (28, 536870912), (29, 8192), (30, 8192), (31, -1), (32, 524288), (33, 1048576), (34, -1), (35, 536870912), (36, -1), (37, 2097152), (38, 67108864), (39, 8192), (40, 67108864), (41, 134217728), (42, 262144), (43, 262144), (44, -1), (45, -1), (46, -1), (47, 33554432), (48, 8388608), (49, 33554432), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, 524288), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, 67108864), (9, 131072), (10, -1), (11, -1), (12, -1), (13, -1), (14, 33554432), (15, 16777216), (16, 786432), (17, -1), (18, 536870912), (19, 262144), (20, 4194304), (21, 8388608), (22, 131072), (23, 67108864), (24, 8192), (25, 2097152), (26, -1), (27, -1), (28, 536870912), (29, 2048), (30, 0), (31, -1), (32, 131072), (33, 0), (34, -1), (35, -1), (36, -1), (37, 2097152), (38, 16777216), (39, 2048), (40, 67108864), (41, 4096), (42, 65536), (43, 65536), (44, -1), (45, -1), (46, -1), (47, 8388608), (48, 2097152), (49, 8388608), (50, -1), (51, -1), (52, -1)]

Covered at level 6 : {33, 30}

After reduction : 
 pending  : [8, 40, 9, 29, 32, 38, 39, 42, 43, 47, 48, 49, 41, 23, 24, 25, 37, 0, 16, 19, 22, 20, 15, 21, 14, 18, 28]
 solution : [6, 2, 35]


Before reduction : 
 pending  : [8, 40, 9, 29, 32, 38, 39, 42, 43, 47, 48, 49, 41, 23, 24, 25, 37, 0, 16, 19, 22, 20, 15, 21, 14, 18, 28]
 solution : [6, 2, 35]

Essensial at level 6 : set()

Before removed
 coverage : [(0, 524288), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, 67108864), (9, 131072), (10, -1), (11, -1), (12, -1), (13, -1), (14, 33554432), (15, 16777216), (16, 786432), (17, -1), (18, 536870912), (19, 262144), (20, 4194304), (21, 8388608), (22, 131072), (23, 67108864), (24, 8192), (25, 2097152), (26, -1), (27, -1), (28, 536870912), (29, 2048), (30, 0), (31, -1), (32, 131072), (33, 0), (34, -1), (35, -1), (36, -1), (37, 2097152), (38, 16777216), (39, 2048), (40, 67108864), (41, 4096), (42, 65536), (43, 65536), (44, -1), (45, -1), (46, -1), (47, 8388608), (48, 2097152), (49, 8388608), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, 524288), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, 67108864), (9, 131072), (10, -1), (11, -1), (12, -1), (13, -1), (14, 33554432), (15, 16777216), (16, 786432), (17, -1), (18, 536870912), (19, 262144), (20, 4194304), (21, 8388608), (22, 131072), (23, 67108864), (24, 8192), (25, 2097152), (26, -1), (27, -1), (28, 536870912), (29, 2048), (30, -1), (31, -1), (32, 131072), (33, -1), (34, -1), (35, -1), (36, -1), (37, 2097152), (38, 16777216), (39, 2048), (40, 67108864), (41, 4096), (42, 65536), (43, 65536), (44, -1), (45, -1), (46, -1), (47, 8388608), (48, 2097152), (49, 8388608), (50, -1), (51, -1), (52, -1)]

Covered at level 6 : set()

After reduction : 
 pending  : [8, 40, 9, 29, 32, 38, 39, 42, 43, 47, 48, 49, 41, 23, 24, 25, 37, 0, 16, 19, 22, 20, 15, 21, 14, 18, 28]
 solution : [6, 2, 35]


Solution : [6, 2, 35] has cost 22.


Before backtrack at level 6
 pending : [8, 40, 9, 29, 32, 38, 39, 42, 43, 47, 48, 49, 41, 23, 24, 25, 37, 0, 16, 19, 22, 20, 15, 21, 14, 18, 28]
 solution : [6, 2, 35]

After backtrack at level 6
 pending : [8, 40, 9, 29, 32, 38, 39, 42, 43, 47, 48, 49, 41, 23, 24, 25, 37, 0, 16, 19, 22, 20, 15, 21, 14, 18, 28, 30, 33]
 solution : [6, 2, 35]


Invert decision for 35 at level 5


New level: 6
 pending : [8, 40, 9, 29, 32, 38, 39, 42, 43, 47, 48, 49, 41, 23, 24, 25, 37, 0, 16, 19, 22, 20, 15, 21, 14, 18, 28, 30, 33]
 solution : [6, 2]


Before reduction : 
 pending  : [8, 40, 9, 29, 32, 38, 39, 42, 43, 47, 48, 49, 41, 23, 24, 25, 37, 0, 16, 19, 22, 20, 15, 21, 14, 18, 28, 30, 33]
 solution : [6, 2]

Essensial at level 6 : set()

Before removed
 coverage : [(0, 524288), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, 67108864), (9, 131072), (10, -1), (11, -1), (12, -1), (13, -1), (14, 33554432), (15, 16777216), (16, 786432), (17, -1), (18, 536870912), (19, 262144), (20, 4194304), (21, 8388608), (22, 131072), (23, 67108864), (24, 8192), (25, 2097152), (26, -1), (27, -1), (28, 536870912), (29, 2048), (30, -1), (31, -1), (32, 131072), (33, -1), (34, -1), (35, -1), (36, -1), (37, 2097152), (38, 16777216), (39, 2048), (40, 67108864), (41, 4096), (42, 65536), (43, 65536), (44, -1), (45, -1), (46, -1), (47, 8388608), (48, 2097152), (49, 8388608), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, 524288), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, 67108864), (9, 524288), (10, -1), (11, -1), (12, -1), (13, -1), (14, 33554432), (15, 16777216), (16, 786432), (17, -1), (18, 536870912), (19, 262144), (20, 4194304), (21, 8388608), (22, 131072), (23, 67108864), (24, 268435456), (25, 2097152), (26, -1), (27, -1), (28, 536870912), (29, 8192), (30, 8192), (31, -1), (32, 524288), (33, 1048576), (34, -1), (35, -1), (36, -1), (37, 2097152), (38, 67108864), (39, 8192), (40, 67108864), (41, 134217728), (42, 262144), (43, 262144), (44, -1), (45, -1), (46, -1), (47, 33554432), (48, 8388608), (49, 33554432), (50, -1), (51, -1), (52, -1)]

Covered at level 6 : set()

After reduction : 
 pending  : [8, 40, 9, 29, 32, 38, 39, 42, 43, 47, 48, 49, 41, 23, 24, 25, 37, 0, 16, 19, 22, 20, 15, 21, 14, 18, 28, 30, 33]
 solution : [6, 2]


Solution : [6, 2] has cost 9.


Decide in level 6 among pending : [8, 40, 9, 29, 32, 38, 39, 42, 43, 47, 48, 49, 41, 23, 24, 25, 37, 0, 16, 19, 22, 20, 15, 21, 14, 18, 28, 30, 33]

Coverage : [(0, 524288), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, 67108864), (9, 524288), (10, -1), (11, -1), (12, -1), (13, -1), (14, 33554432), (15, 16777216), (16, 786432), (17, -1), (18, 536870912), (19, 262144), (20, 4194304), (21, 8388608), (22, 131072), (23, 67108864), (24, 268435456), (25, 2097152), (26, -1), (27, -1), (28, 536870912), (29, 8192), (30, 8192), (31, -1), (32, 524288), (33, 1048576), (34, -1), (35, -1), (36, -1), (37, 2097152), (38, 67108864), (39, 8192), (40, 67108864), (41, 134217728), (42, 262144), (43, 262144), (44, -1), (45, -1), (46, -1), (47, 33554432), (48, 8388608), (49, 33554432), (50, -1), (51, -1), (52, -1)]

Decide 18 with phase True at level 6

After decision at level 6
 pending : [8, 40, 9, 29, 32, 38, 39, 42, 43, 47, 48, 49, 41, 23, 24, 25, 37, 0, 16, 19, 22, 20, 15, 21, 14, 28, 30, 33]
 solution : [6, 2, 18]


New level: 7
 pending : [8, 40, 9, 29, 32, 38, 39, 42, 43, 47, 48, 49, 41, 23, 24, 25, 37, 0, 16, 19, 22, 20, 15, 21, 14, 28, 30, 33]
 solution : [6, 2, 18]


Before reduction : 
 pending  : [8, 40, 9, 29, 32, 38, 39, 42, 43, 47, 48, 49, 41, 23, 24, 25, 37, 0, 16, 19, 22, 20, 15, 21, 14, 28, 30, 33]
 solution : [6, 2, 18]

Essensial at level 7 : set()

Before removed
 coverage : [(0, 524288), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, 67108864), (9, 524288), (10, -1), (11, -1), (12, -1), (13, -1), (14, 33554432), (15, 16777216), (16, 786432), (17, -1), (18, 536870912), (19, 262144), (20, 4194304), (21, 8388608), (22, 131072), (23, 67108864), (24, 268435456), (25, 2097152), (26, -1), (27, -1), (28, 536870912), (29, 8192), (30, 8192), (31, -1), (32, 524288), (33, 1048576), (34, -1), (35, -1), (36, -1), (37, 2097152), (38, 67108864), (39, 8192), (40, 67108864), (41, 134217728), (42, 262144), (43, 262144), (44, -1), (45, -1), (46, -1), (47, 33554432), (48, 8388608), (49, 33554432), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, 0), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, 67108864), (9, 131072), (10, -1), (11, -1), (12, -1), (13, -1), (14, 0), (15, 0), (16, 0), (17, -1), (18, -1), (19, 0), (20, 0), (21, 0), (22, 0), (23, 67108864), (24, 268435456), (25, 0), (26, -1), (27, -1), (28, 536870912), (29, 4096), (30, 8192), (31, -1), (32, 262144), (33, 1048576), (34, -1), (35, -1), (36, -1), (37, 0), (38, 33554432), (39, 2048), (40, 1024), (41, 2048), (42, 131072), (43, 131072), (44, -1), (45, -1), (46, -1), (47, 33554432), (48, 8388608), (49, 33554432), (50, -1), (51, -1), (52, -1)]

Covered at level 7 : {0, 37, 14, 15, 16, 19, 20, 21, 22, 25}

After reduction : 
 pending  : [8, 40, 9, 29, 32, 38, 39, 42, 43, 47, 48, 49, 41, 23, 24, 28, 30, 33]
 solution : [6, 2, 18]


Before reduction : 
 pending  : [8, 40, 9, 29, 32, 38, 39, 42, 43, 47, 48, 49, 41, 23, 24, 28, 30, 33]
 solution : [6, 2, 18]

Essensial at level 7 : set()

Before removed
 coverage : [(0, 0), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, 67108864), (9, 131072), (10, -1), (11, -1), (12, -1), (13, -1), (14, 0), (15, 0), (16, 0), (17, -1), (18, -1), (19, 0), (20, 0), (21, 0), (22, 0), (23, 67108864), (24, 268435456), (25, 0), (26, -1), (27, -1), (28, 536870912), (29, 4096), (30, 8192), (31, -1), (32, 262144), (33, 1048576), (34, -1), (35, -1), (36, -1), (37, 0), (38, 33554432), (39, 2048), (40, 1024), (41, 2048), (42, 131072), (43, 131072), (44, -1), (45, -1), (46, -1), (47, 33554432), (48, 8388608), (49, 33554432), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, 67108864), (9, 131072), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, 67108864), (24, 268435456), (25, -1), (26, -1), (27, -1), (28, 536870912), (29, 4096), (30, 8192), (31, -1), (32, 262144), (33, 1048576), (34, -1), (35, -1), (36, -1), (37, -1), (38, 33554432), (39, 2048), (40, 1024), (41, 2048), (42, 131072), (43, 131072), (44, -1), (45, -1), (46, -1), (47, 33554432), (48, 8388608), (49, 33554432), (50, -1), (51, -1), (52, -1)]

Covered at level 7 : set()

After reduction : 
 pending  : [8, 40, 9, 29, 32, 38, 39, 42, 43, 47, 48, 49, 41, 23, 24, 28, 30, 33]
 solution : [6, 2, 18]


Solution : [6, 2, 18] has cost 16.


Decide in level 7 among pending : [8, 40, 9, 29, 32, 38, 39, 42, 43, 47, 48, 49, 41, 23, 24, 28, 30, 33]

Coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, 67108864), (9, 131072), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, 67108864), (24, 268435456), (25, -1), (26, -1), (27, -1), (28, 536870912), (29, 4096), (30, 8192), (31, -1), (32, 262144), (33, 1048576), (34, -1), (35, -1), (36, -1), (37, -1), (38, 33554432), (39, 2048), (40, 1024), (41, 2048), (42, 131072), (43, 131072), (44, -1), (45, -1), (46, -1), (47, 33554432), (48, 8388608), (49, 33554432), (50, -1), (51, -1), (52, -1)]

Decide 28 with phase True at level 7

After decision at level 7
 pending : [8, 40, 9, 29, 32, 38, 39, 42, 43, 47, 48, 49, 41, 23, 24, 30, 33]
 solution : [6, 2, 18, 28]


New level: 8
 pending : [8, 40, 9, 29, 32, 38, 39, 42, 43, 47, 48, 49, 41, 23, 24, 30, 33]
 solution : [6, 2, 18, 28]


Before reduction : 
 pending  : [8, 40, 9, 29, 32, 38, 39, 42, 43, 47, 48, 49, 41, 23, 24, 30, 33]
 solution : [6, 2, 18, 28]

Essensial at level 8 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, 67108864), (9, 131072), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, 67108864), (24, 268435456), (25, -1), (26, -1), (27, -1), (28, 536870912), (29, 4096), (30, 8192), (31, -1), (32, 262144), (33, 1048576), (34, -1), (35, -1), (36, -1), (37, -1), (38, 33554432), (39, 2048), (40, 1024), (41, 2048), (42, 131072), (43, 131072), (44, -1), (45, -1), (46, -1), (47, 33554432), (48, 8388608), (49, 33554432), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, 67108864), (9, 131072), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, 67108864), (24, 134217728), (25, -1), (26, -1), (27, -1), (28, -1), (29, 4096), (30, 4096), (31, -1), (32, 262144), (33, 524288), (34, -1), (35, -1), (36, -1), (37, -1), (38, 33554432), (39, 2048), (40, 1024), (41, 2048), (42, 131072), (43, 131072), (44, -1), (45, -1), (46, -1), (47, 33554432), (48, 8388608), (49, 33554432), (50, -1), (51, -1), (52, -1)]

Covered at level 8 : set()

After reduction : 
 pending  : [8, 40, 9, 29, 32, 38, 39, 42, 43, 47, 48, 49, 41, 23, 24, 30, 33]
 solution : [6, 2, 18, 28]


Solution : [6, 2, 18, 28] has cost 20.


Before backtrack at level 8
 pending : [8, 40, 9, 29, 32, 38, 39, 42, 43, 47, 48, 49, 41, 23, 24, 30, 33]
 solution : [6, 2, 18, 28]

After backtrack at level 8
 pending : [8, 40, 9, 29, 32, 38, 39, 42, 43, 47, 48, 49, 41, 23, 24, 30, 33]
 solution : [6, 2, 18, 28]


Invert decision for 28 at level 7


New level: 8
 pending : [8, 40, 9, 29, 32, 38, 39, 42, 43, 47, 48, 49, 41, 23, 24, 30, 33]
 solution : [6, 2, 18]


Before reduction : 
 pending  : [8, 40, 9, 29, 32, 38, 39, 42, 43, 47, 48, 49, 41, 23, 24, 30, 33]
 solution : [6, 2, 18]

Essensial at level 8 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, 67108864), (9, 131072), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, 67108864), (24, 134217728), (25, -1), (26, -1), (27, -1), (28, -1), (29, 4096), (30, 4096), (31, -1), (32, 262144), (33, 524288), (34, -1), (35, -1), (36, -1), (37, -1), (38, 33554432), (39, 2048), (40, 1024), (41, 2048), (42, 131072), (43, 131072), (44, -1), (45, -1), (46, -1), (47, 33554432), (48, 8388608), (49, 33554432), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, 67108864), (9, 131072), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, 67108864), (24, 268435456), (25, -1), (26, -1), (27, -1), (28, -1), (29, 4096), (30, 8192), (31, -1), (32, 262144), (33, 1048576), (34, -1), (35, -1), (36, -1), (37, -1), (38, 33554432), (39, 2048), (40, 1024), (41, 2048), (42, 131072), (43, 131072), (44, -1), (45, -1), (46, -1), (47, 33554432), (48, 8388608), (49, 33554432), (50, -1), (51, -1), (52, -1)]

Covered at level 8 : set()

After reduction : 
 pending  : [8, 40, 9, 29, 32, 38, 39, 42, 43, 47, 48, 49, 41, 23, 24, 30, 33]
 solution : [6, 2, 18]


Solution : [6, 2, 18] has cost 16.


Decide in level 8 among pending : [8, 40, 9, 29, 32, 38, 39, 42, 43, 47, 48, 49, 41, 23, 24, 30, 33]

Coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, 67108864), (9, 131072), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, 67108864), (24, 268435456), (25, -1), (26, -1), (27, -1), (28, -1), (29, 4096), (30, 8192), (31, -1), (32, 262144), (33, 1048576), (34, -1), (35, -1), (36, -1), (37, -1), (38, 33554432), (39, 2048), (40, 1024), (41, 2048), (42, 131072), (43, 131072), (44, -1), (45, -1), (46, -1), (47, 33554432), (48, 8388608), (49, 33554432), (50, -1), (51, -1), (52, -1)]

Decide 24 with phase True at level 8

After decision at level 8
 pending : [8, 40, 9, 29, 32, 38, 39, 42, 43, 47, 48, 49, 41, 23, 30, 33]
 solution : [6, 2, 18, 24]


New level: 9
 pending : [8, 40, 9, 29, 32, 38, 39, 42, 43, 47, 48, 49, 41, 23, 30, 33]
 solution : [6, 2, 18, 24]


Before reduction : 
 pending  : [8, 40, 9, 29, 32, 38, 39, 42, 43, 47, 48, 49, 41, 23, 30, 33]
 solution : [6, 2, 18, 24]

Essensial at level 9 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, 67108864), (9, 131072), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, 67108864), (24, 268435456), (25, -1), (26, -1), (27, -1), (28, -1), (29, 4096), (30, 8192), (31, -1), (32, 262144), (33, 1048576), (34, -1), (35, -1), (36, -1), (37, -1), (38, 33554432), (39, 2048), (40, 1024), (41, 2048), (42, 131072), (43, 131072), (44, -1), (45, -1), (46, -1), (47, 33554432), (48, 8388608), (49, 33554432), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, 16777216), (9, 32768), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, 16777216), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, 1024), (30, 0), (31, -1), (32, 65536), (33, 0), (34, -1), (35, -1), (36, -1), (37, -1), (38, 8388608), (39, 512), (40, 512), (41, 0), (42, 32768), (43, 32768), (44, -1), (45, -1), (46, -1), (47, 8388608), (48, 2097152), (49, 16777216), (50, -1), (51, -1), (52, -1)]

Covered at level 9 : {41, 30, 33}

After reduction : 
 pending  : [8, 40, 9, 29, 32, 38, 39, 42, 43, 47, 48, 49, 23]
 solution : [6, 2, 18, 24]


Before reduction : 
 pending  : [8, 40, 9, 29, 32, 38, 39, 42, 43, 47, 48, 49, 23]
 solution : [6, 2, 18, 24]

Essensial at level 9 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, 16777216), (9, 32768), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, 16777216), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, 1024), (30, 0), (31, -1), (32, 65536), (33, 0), (34, -1), (35, -1), (36, -1), (37, -1), (38, 8388608), (39, 512), (40, 512), (41, 0), (42, 32768), (43, 32768), (44, -1), (45, -1), (46, -1), (47, 8388608), (48, 2097152), (49, 16777216), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, 16777216), (9, 32768), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, 16777216), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, 1024), (30, -1), (31, -1), (32, 65536), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, 8388608), (39, 512), (40, 512), (41, -1), (42, 32768), (43, 32768), (44, -1), (45, -1), (46, -1), (47, 8388608), (48, 2097152), (49, 16777216), (50, -1), (51, -1), (52, -1)]

Covered at level 9 : set()

After reduction : 
 pending  : [8, 40, 9, 29, 32, 38, 39, 42, 43, 47, 48, 49, 23]
 solution : [6, 2, 18, 24]


Solution : [6, 2, 18, 24] has cost 23.


Before backtrack at level 9
 pending : [8, 40, 9, 29, 32, 38, 39, 42, 43, 47, 48, 49, 23]
 solution : [6, 2, 18, 24]

After backtrack at level 9
 pending : [8, 40, 9, 29, 32, 38, 39, 42, 43, 47, 48, 49, 23, 41, 30, 33]
 solution : [6, 2, 18, 24]


Invert decision for 24 at level 8


New level: 9
 pending : [8, 40, 9, 29, 32, 38, 39, 42, 43, 47, 48, 49, 23, 41, 30, 33]
 solution : [6, 2, 18]


Before reduction : 
 pending  : [8, 40, 9, 29, 32, 38, 39, 42, 43, 47, 48, 49, 23, 41, 30, 33]
 solution : [6, 2, 18]

Essensial at level 9 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, 16777216), (9, 32768), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, 16777216), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, 1024), (30, -1), (31, -1), (32, 65536), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, 8388608), (39, 512), (40, 512), (41, -1), (42, 32768), (43, 32768), (44, -1), (45, -1), (46, -1), (47, 8388608), (48, 2097152), (49, 16777216), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, 67108864), (9, 131072), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, 67108864), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, 4096), (30, 8192), (31, -1), (32, 262144), (33, 1048576), (34, -1), (35, -1), (36, -1), (37, -1), (38, 33554432), (39, 2048), (40, 1024), (41, 2048), (42, 131072), (43, 131072), (44, -1), (45, -1), (46, -1), (47, 33554432), (48, 8388608), (49, 33554432), (50, -1), (51, -1), (52, -1)]

Covered at level 9 : set()

After reduction : 
 pending  : [8, 40, 9, 29, 32, 38, 39, 42, 43, 47, 48, 49, 23, 41, 30, 33]
 solution : [6, 2, 18]


Solution : [6, 2, 18] has cost 16.


Decide in level 9 among pending : [8, 40, 9, 29, 32, 38, 39, 42, 43, 47, 48, 49, 23, 41, 30, 33]

Coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, 67108864), (9, 131072), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, 67108864), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, 4096), (30, 8192), (31, -1), (32, 262144), (33, 1048576), (34, -1), (35, -1), (36, -1), (37, -1), (38, 33554432), (39, 2048), (40, 1024), (41, 2048), (42, 131072), (43, 131072), (44, -1), (45, -1), (46, -1), (47, 33554432), (48, 8388608), (49, 33554432), (50, -1), (51, -1), (52, -1)]

Decide 8 with phase True at level 9

After decision at level 9
 pending : [40, 9, 29, 32, 38, 39, 42, 43, 47, 48, 49, 23, 41, 30, 33]
 solution : [6, 2, 18, 8]


New level: 10
 pending : [40, 9, 29, 32, 38, 39, 42, 43, 47, 48, 49, 23, 41, 30, 33]
 solution : [6, 2, 18, 8]


Before reduction : 
 pending  : [40, 9, 29, 32, 38, 39, 42, 43, 47, 48, 49, 23, 41, 30, 33]
 solution : [6, 2, 18, 8]

Essensial at level 10 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, 67108864), (9, 131072), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, 67108864), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, 4096), (30, 8192), (31, -1), (32, 262144), (33, 1048576), (34, -1), (35, -1), (36, -1), (37, -1), (38, 33554432), (39, 2048), (40, 1024), (41, 2048), (42, 131072), (43, 131072), (44, -1), (45, -1), (46, -1), (47, 33554432), (48, 8388608), (49, 33554432), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, 0), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, 0), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, 0), (30, 0), (31, -1), (32, 0), (33, 0), (34, -1), (35, -1), (36, -1), (37, -1), (38, 0), (39, 0), (40, 0), (41, 0), (42, 0), (43, 0), (44, -1), (45, -1), (46, -1), (47, 0), (48, 0), (49, 0), (50, -1), (51, -1), (52, -1)]

Covered at level 10 : {32, 33, 38, 39, 40, 9, 42, 43, 41, 47, 48, 49, 23, 29, 30}

After reduction : 
 pending  : []
 solution : [6, 2, 18, 8]


Before reduction : 
 pending  : []
 solution : [6, 2, 18, 8]

Essensial at level 10 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, 0), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, 0), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, 0), (30, 0), (31, -1), (32, 0), (33, 0), (34, -1), (35, -1), (36, -1), (37, -1), (38, 0), (39, 0), (40, 0), (41, 0), (42, 0), (43, 0), (44, -1), (45, -1), (46, -1), (47, 0), (48, 0), (49, 0), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 10 : set()

After reduction : 
 pending  : []
 solution : [6, 2, 18, 8]


Solution : [6, 2, 18, 8] has cost 20.


Before backtrack at level 10
 pending : []
 solution : [6, 2, 18, 8]

After backtrack at level 10
 pending : [40, 9, 29, 32, 38, 39, 42, 43, 47, 48, 49, 23, 41, 30, 33]
 solution : [6, 2, 18, 8]


Invert decision for 8 at level 9


New level: 10
 pending : [40, 9, 29, 32, 38, 39, 42, 43, 47, 48, 49, 23, 41, 30, 33]
 solution : [6, 2, 18]


Before reduction : 
 pending  : [40, 9, 29, 32, 38, 39, 42, 43, 47, 48, 49, 23, 41, 30, 33]
 solution : [6, 2, 18]

Essensial at level 10 : {23}

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, 0), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, 0), (30, 0), (31, -1), (32, 0), (33, 0), (34, -1), (35, -1), (36, -1), (37, -1), (38, 0), (39, 0), (40, 0), (41, 0), (42, 0), (43, 0), (44, -1), (45, -1), (46, -1), (47, 0), (48, 0), (49, 0), (50, -1), (51, -1), (52, -1)]

Covered at level 10 : {32, 33, 38, 39, 40, 9, 42, 43, 41, 47, 48, 49, 29, 30}

After reduction : 
 pending  : []
 solution : [6, 2, 18, 23]


Before reduction : 
 pending  : []
 solution : [6, 2, 18, 23]

Essensial at level 10 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, 0), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, 0), (30, 0), (31, -1), (32, 0), (33, 0), (34, -1), (35, -1), (36, -1), (37, -1), (38, 0), (39, 0), (40, 0), (41, 0), (42, 0), (43, 0), (44, -1), (45, -1), (46, -1), (47, 0), (48, 0), (49, 0), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 10 : set()

After reduction : 
 pending  : []
 solution : [6, 2, 18, 23]


Solution : [6, 2, 18, 23] has cost 23.


Before backtrack at level 10
 pending : []
 solution : [6, 2, 18, 23]

After backtrack at level 10
 pending : [23, 40, 9, 29, 32, 38, 39, 42, 43, 47, 48, 49, 41, 30, 33]
 solution : [6, 2, 18]


Before backtrack at level 9
 pending : [23, 40, 9, 29, 32, 38, 39, 42, 43, 47, 48, 49, 41, 30, 33]
 solution : [6, 2, 18]

After backtrack at level 9
 pending : [23, 40, 9, 29, 32, 38, 39, 42, 43, 47, 48, 49, 41, 30, 33, 8]
 solution : [6, 2, 18]


Before backtrack at level 8
 pending : [23, 40, 9, 29, 32, 38, 39, 42, 43, 47, 48, 49, 41, 30, 33, 8]
 solution : [6, 2, 18]

After backtrack at level 8
 pending : [23, 40, 9, 29, 32, 38, 39, 42, 43, 47, 48, 49, 41, 30, 33, 8, 24]
 solution : [6, 2, 18]


Before backtrack at level 7
 pending : [23, 40, 9, 29, 32, 38, 39, 42, 43, 47, 48, 49, 41, 30, 33, 8, 24]
 solution : [6, 2, 18]

After backtrack at level 7
 pending : [23, 40, 9, 29, 32, 38, 39, 42, 43, 47, 48, 49, 41, 30, 33, 8, 24, 25, 37, 0, 16, 19, 22, 20, 15, 21, 14, 28]
 solution : [6, 2, 18]


Invert decision for 18 at level 6


New level: 7
 pending : [23, 40, 9, 29, 32, 38, 39, 42, 43, 47, 48, 49, 41, 30, 33, 8, 24, 25, 37, 0, 16, 19, 22, 20, 15, 21, 14, 28]
 solution : [6, 2]


Before reduction : 
 pending  : [23, 40, 9, 29, 32, 38, 39, 42, 43, 47, 48, 49, 41, 30, 33, 8, 24, 25, 37, 0, 16, 19, 22, 20, 15, 21, 14, 28]
 solution : [6, 2]

Essensial at level 7 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, 524288), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, 67108864), (9, 524288), (10, -1), (11, -1), (12, -1), (13, -1), (14, 33554432), (15, 16777216), (16, 786432), (17, -1), (18, -1), (19, 262144), (20, 4194304), (21, 8388608), (22, 131072), (23, 67108864), (24, 268435456), (25, 2097152), (26, -1), (27, -1), (28, 536870912), (29, 8192), (30, 8192), (31, -1), (32, 524288), (33, 1048576), (34, -1), (35, -1), (36, -1), (37, 2097152), (38, 67108864), (39, 8192), (40, 67108864), (41, 134217728), (42, 262144), (43, 262144), (44, -1), (45, -1), (46, -1), (47, 33554432), (48, 8388608), (49, 33554432), (50, -1), (51, -1), (52, -1)]

Covered at level 7 : set()

After reduction : 
 pending  : [23, 40, 9, 29, 32, 38, 39, 42, 43, 47, 48, 49, 41, 30, 33, 8, 24, 25, 37, 0, 16, 19, 22, 20, 15, 21, 14, 28]
 solution : [6, 2]


Solution : [6, 2] has cost 9.


Decide in level 7 among pending : [23, 40, 9, 29, 32, 38, 39, 42, 43, 47, 48, 49, 41, 30, 33, 8, 24, 25, 37, 0, 16, 19, 22, 20, 15, 21, 14, 28]

Coverage : [(0, 524288), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, 67108864), (9, 524288), (10, -1), (11, -1), (12, -1), (13, -1), (14, 33554432), (15, 16777216), (16, 786432), (17, -1), (18, -1), (19, 262144), (20, 4194304), (21, 8388608), (22, 131072), (23, 67108864), (24, 268435456), (25, 2097152), (26, -1), (27, -1), (28, 536870912), (29, 8192), (30, 8192), (31, -1), (32, 524288), (33, 1048576), (34, -1), (35, -1), (36, -1), (37, 2097152), (38, 67108864), (39, 8192), (40, 67108864), (41, 134217728), (42, 262144), (43, 262144), (44, -1), (45, -1), (46, -1), (47, 33554432), (48, 8388608), (49, 33554432), (50, -1), (51, -1), (52, -1)]

Decide 28 with phase True at level 7

After decision at level 7
 pending : [23, 40, 9, 29, 32, 38, 39, 42, 43, 47, 48, 49, 41, 30, 33, 8, 24, 25, 37, 0, 16, 19, 22, 20, 15, 21, 14]
 solution : [6, 2, 28]


New level: 8
 pending : [23, 40, 9, 29, 32, 38, 39, 42, 43, 47, 48, 49, 41, 30, 33, 8, 24, 25, 37, 0, 16, 19, 22, 20, 15, 21, 14]
 solution : [6, 2, 28]


Before reduction : 
 pending  : [23, 40, 9, 29, 32, 38, 39, 42, 43, 47, 48, 49, 41, 30, 33, 8, 24, 25, 37, 0, 16, 19, 22, 20, 15, 21, 14]
 solution : [6, 2, 28]

Essensial at level 8 : set()

Before removed
 coverage : [(0, 524288), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, 67108864), (9, 524288), (10, -1), (11, -1), (12, -1), (13, -1), (14, 33554432), (15, 16777216), (16, 786432), (17, -1), (18, -1), (19, 262144), (20, 4194304), (21, 8388608), (22, 131072), (23, 67108864), (24, 268435456), (25, 2097152), (26, -1), (27, -1), (28, 536870912), (29, 8192), (30, 8192), (31, -1), (32, 524288), (33, 1048576), (34, -1), (35, -1), (36, -1), (37, 2097152), (38, 67108864), (39, 8192), (40, 67108864), (41, 134217728), (42, 262144), (43, 262144), (44, -1), (45, -1), (46, -1), (47, 33554432), (48, 8388608), (49, 33554432), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, 524288), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, 67108864), (9, 524288), (10, -1), (11, -1), (12, -1), (13, -1), (14, 33554432), (15, 16777216), (16, 786432), (17, -1), (18, -1), (19, 262144), (20, 4194304), (21, 8388608), (22, 131072), (23, 67108864), (24, 134217728), (25, 2097152), (26, -1), (27, -1), (28, -1), (29, 8192), (30, 4096), (31, -1), (32, 524288), (33, 524288), (34, -1), (35, -1), (36, -1), (37, 2097152), (38, 67108864), (39, 8192), (40, 67108864), (41, 134217728), (42, 262144), (43, 262144), (44, -1), (45, -1), (46, -1), (47, 33554432), (48, 8388608), (49, 33554432), (50, -1), (51, -1), (52, -1)]

Covered at level 8 : set()

After reduction : 
 pending  : [23, 40, 9, 29, 32, 38, 39, 42, 43, 47, 48, 49, 41, 30, 33, 8, 24, 25, 37, 0, 16, 19, 22, 20, 15, 21, 14]
 solution : [6, 2, 28]


Solution : [6, 2, 28] has cost 13.


Decide in level 8 among pending : [23, 40, 9, 29, 32, 38, 39, 42, 43, 47, 48, 49, 41, 30, 33, 8, 24, 25, 37, 0, 16, 19, 22, 20, 15, 21, 14]

Coverage : [(0, 524288), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, 67108864), (9, 524288), (10, -1), (11, -1), (12, -1), (13, -1), (14, 33554432), (15, 16777216), (16, 786432), (17, -1), (18, -1), (19, 262144), (20, 4194304), (21, 8388608), (22, 131072), (23, 67108864), (24, 134217728), (25, 2097152), (26, -1), (27, -1), (28, -1), (29, 8192), (30, 4096), (31, -1), (32, 524288), (33, 524288), (34, -1), (35, -1), (36, -1), (37, 2097152), (38, 67108864), (39, 8192), (40, 67108864), (41, 134217728), (42, 262144), (43, 262144), (44, -1), (45, -1), (46, -1), (47, 33554432), (48, 8388608), (49, 33554432), (50, -1), (51, -1), (52, -1)]

Decide 41 with phase True at level 8

After decision at level 8
 pending : [23, 40, 9, 29, 32, 38, 39, 42, 43, 47, 48, 49, 30, 33, 8, 24, 25, 37, 0, 16, 19, 22, 20, 15, 21, 14]
 solution : [6, 2, 28, 41]


New level: 9
 pending : [23, 40, 9, 29, 32, 38, 39, 42, 43, 47, 48, 49, 30, 33, 8, 24, 25, 37, 0, 16, 19, 22, 20, 15, 21, 14]
 solution : [6, 2, 28, 41]


Before reduction : 
 pending  : [23, 40, 9, 29, 32, 38, 39, 42, 43, 47, 48, 49, 30, 33, 8, 24, 25, 37, 0, 16, 19, 22, 20, 15, 21, 14]
 solution : [6, 2, 28, 41]

Essensial at level 9 : set()

Before removed
 coverage : [(0, 524288), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, 67108864), (9, 524288), (10, -1), (11, -1), (12, -1), (13, -1), (14, 33554432), (15, 16777216), (16, 786432), (17, -1), (18, -1), (19, 262144), (20, 4194304), (21, 8388608), (22, 131072), (23, 67108864), (24, 134217728), (25, 2097152), (26, -1), (27, -1), (28, -1), (29, 8192), (30, 4096), (31, -1), (32, 524288), (33, 524288), (34, -1), (35, -1), (36, -1), (37, 2097152), (38, 67108864), (39, 8192), (40, 67108864), (41, 134217728), (42, 262144), (43, 262144), (44, -1), (45, -1), (46, -1), (47, 33554432), (48, 8388608), (49, 33554432), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, 524288), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, 67108864), (9, 524288), (10, -1), (11, -1), (12, -1), (13, -1), (14, 33554432), (15, 16777216), (16, 786432), (17, -1), (18, -1), (19, 262144), (20, 4194304), (21, 8388608), (22, 131072), (23, 67108864), (24, 67108864), (25, 2097152), (26, -1), (27, -1), (28, -1), (29, 8192), (30, 2048), (31, -1), (32, 524288), (33, 262144), (34, -1), (35, -1), (36, -1), (37, 2097152), (38, 67108864), (39, 8192), (40, 33554432), (41, -1), (42, 262144), (43, 262144), (44, -1), (45, -1), (46, -1), (47, 33554432), (48, 8388608), (49, 33554432), (50, -1), (51, -1), (52, -1)]

Covered at level 9 : set()

After reduction : 
 pending  : [23, 40, 9, 29, 32, 38, 39, 42, 43, 47, 48, 49, 30, 33, 8, 24, 25, 37, 0, 16, 19, 22, 20, 15, 21, 14]
 solution : [6, 2, 28, 41]


Solution : [6, 2, 28, 41] has cost 27.


Before backtrack at level 9
 pending : [23, 40, 9, 29, 32, 38, 39, 42, 43, 47, 48, 49, 30, 33, 8, 24, 25, 37, 0, 16, 19, 22, 20, 15, 21, 14]
 solution : [6, 2, 28, 41]

After backtrack at level 9
 pending : [23, 40, 9, 29, 32, 38, 39, 42, 43, 47, 48, 49, 30, 33, 8, 24, 25, 37, 0, 16, 19, 22, 20, 15, 21, 14]
 solution : [6, 2, 28, 41]


Invert decision for 41 at level 8


New level: 9
 pending : [23, 40, 9, 29, 32, 38, 39, 42, 43, 47, 48, 49, 30, 33, 8, 24, 25, 37, 0, 16, 19, 22, 20, 15, 21, 14]
 solution : [6, 2, 28]


Before reduction : 
 pending  : [23, 40, 9, 29, 32, 38, 39, 42, 43, 47, 48, 49, 30, 33, 8, 24, 25, 37, 0, 16, 19, 22, 20, 15, 21, 14]
 solution : [6, 2, 28]

Essensial at level 9 : set()

Before removed
 coverage : [(0, 524288), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, 67108864), (9, 524288), (10, -1), (11, -1), (12, -1), (13, -1), (14, 33554432), (15, 16777216), (16, 786432), (17, -1), (18, -1), (19, 262144), (20, 4194304), (21, 8388608), (22, 131072), (23, 67108864), (24, 67108864), (25, 2097152), (26, -1), (27, -1), (28, -1), (29, 8192), (30, 2048), (31, -1), (32, 524288), (33, 262144), (34, -1), (35, -1), (36, -1), (37, 2097152), (38, 67108864), (39, 8192), (40, 33554432), (41, -1), (42, 262144), (43, 262144), (44, -1), (45, -1), (46, -1), (47, 33554432), (48, 8388608), (49, 33554432), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, 524288), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, 67108864), (9, 524288), (10, -1), (11, -1), (12, -1), (13, -1), (14, 33554432), (15, 16777216), (16, 786432), (17, -1), (18, -1), (19, 262144), (20, 4194304), (21, 8388608), (22, 131072), (23, 67108864), (24, 134217728), (25, 2097152), (26, -1), (27, -1), (28, -1), (29, 8192), (30, 4096), (31, -1), (32, 524288), (33, 524288), (34, -1), (35, -1), (36, -1), (37, 2097152), (38, 67108864), (39, 8192), (40, 67108864), (41, -1), (42, 262144), (43, 262144), (44, -1), (45, -1), (46, -1), (47, 33554432), (48, 8388608), (49, 33554432), (50, -1), (51, -1), (52, -1)]

Covered at level 9 : set()

After reduction : 
 pending  : [23, 40, 9, 29, 32, 38, 39, 42, 43, 47, 48, 49, 30, 33, 8, 24, 25, 37, 0, 16, 19, 22, 20, 15, 21, 14]
 solution : [6, 2, 28]


Solution : [6, 2, 28] has cost 13.


Decide in level 9 among pending : [23, 40, 9, 29, 32, 38, 39, 42, 43, 47, 48, 49, 30, 33, 8, 24, 25, 37, 0, 16, 19, 22, 20, 15, 21, 14]

Coverage : [(0, 524288), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, 67108864), (9, 524288), (10, -1), (11, -1), (12, -1), (13, -1), (14, 33554432), (15, 16777216), (16, 786432), (17, -1), (18, -1), (19, 262144), (20, 4194304), (21, 8388608), (22, 131072), (23, 67108864), (24, 134217728), (25, 2097152), (26, -1), (27, -1), (28, -1), (29, 8192), (30, 4096), (31, -1), (32, 524288), (33, 524288), (34, -1), (35, -1), (36, -1), (37, 2097152), (38, 67108864), (39, 8192), (40, 67108864), (41, -1), (42, 262144), (43, 262144), (44, -1), (45, -1), (46, -1), (47, 33554432), (48, 8388608), (49, 33554432), (50, -1), (51, -1), (52, -1)]

Decide 24 with phase True at level 9

After decision at level 9
 pending : [23, 40, 9, 29, 32, 38, 39, 42, 43, 47, 48, 49, 30, 33, 8, 25, 37, 0, 16, 19, 22, 20, 15, 21, 14]
 solution : [6, 2, 28, 24]


New level: 10
 pending : [23, 40, 9, 29, 32, 38, 39, 42, 43, 47, 48, 49, 30, 33, 8, 25, 37, 0, 16, 19, 22, 20, 15, 21, 14]
 solution : [6, 2, 28, 24]


Before reduction : 
 pending  : [23, 40, 9, 29, 32, 38, 39, 42, 43, 47, 48, 49, 30, 33, 8, 25, 37, 0, 16, 19, 22, 20, 15, 21, 14]
 solution : [6, 2, 28, 24]

Essensial at level 10 : set()

Before removed
 coverage : [(0, 524288), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, 67108864), (9, 524288), (10, -1), (11, -1), (12, -1), (13, -1), (14, 33554432), (15, 16777216), (16, 786432), (17, -1), (18, -1), (19, 262144), (20, 4194304), (21, 8388608), (22, 131072), (23, 67108864), (24, 134217728), (25, 2097152), (26, -1), (27, -1), (28, -1), (29, 8192), (30, 4096), (31, -1), (32, 524288), (33, 524288), (34, -1), (35, -1), (36, -1), (37, 2097152), (38, 67108864), (39, 8192), (40, 67108864), (41, -1), (42, 262144), (43, 262144), (44, -1), (45, -1), (46, -1), (47, 33554432), (48, 8388608), (49, 33554432), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, 524288), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, 16777216), (9, 131072), (10, -1), (11, -1), (12, -1), (13, -1), (14, 33554432), (15, 16777216), (16, 786432), (17, -1), (18, -1), (19, 262144), (20, 4194304), (21, 8388608), (22, 131072), (23, 16777216), (24, -1), (25, 2097152), (26, -1), (27, -1), (28, -1), (29, 2048), (30, 0), (31, -1), (32, 131072), (33, 0), (34, -1), (35, -1), (36, -1), (37, 2097152), (38, 16777216), (39, 2048), (40, 67108864), (41, -1), (42, 65536), (43, 65536), (44, -1), (45, -1), (46, -1), (47, 8388608), (48, 2097152), (49, 16777216), (50, -1), (51, -1), (52, -1)]

Covered at level 10 : {33, 30}

After reduction : 
 pending  : [23, 40, 9, 29, 32, 38, 39, 42, 43, 47, 48, 49, 8, 25, 37, 0, 16, 19, 22, 20, 15, 21, 14]
 solution : [6, 2, 28, 24]


Before reduction : 
 pending  : [23, 40, 9, 29, 32, 38, 39, 42, 43, 47, 48, 49, 8, 25, 37, 0, 16, 19, 22, 20, 15, 21, 14]
 solution : [6, 2, 28, 24]

Essensial at level 10 : set()

Before removed
 coverage : [(0, 524288), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, 16777216), (9, 131072), (10, -1), (11, -1), (12, -1), (13, -1), (14, 33554432), (15, 16777216), (16, 786432), (17, -1), (18, -1), (19, 262144), (20, 4194304), (21, 8388608), (22, 131072), (23, 16777216), (24, -1), (25, 2097152), (26, -1), (27, -1), (28, -1), (29, 2048), (30, 0), (31, -1), (32, 131072), (33, 0), (34, -1), (35, -1), (36, -1), (37, 2097152), (38, 16777216), (39, 2048), (40, 67108864), (41, -1), (42, 65536), (43, 65536), (44, -1), (45, -1), (46, -1), (47, 8388608), (48, 2097152), (49, 16777216), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, 524288), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, 16777216), (9, 131072), (10, -1), (11, -1), (12, -1), (13, -1), (14, 33554432), (15, 16777216), (16, 786432), (17, -1), (18, -1), (19, 262144), (20, 4194304), (21, 8388608), (22, 131072), (23, 16777216), (24, -1), (25, 2097152), (26, -1), (27, -1), (28, -1), (29, 2048), (30, -1), (31, -1), (32, 131072), (33, -1), (34, -1), (35, -1), (36, -1), (37, 2097152), (38, 16777216), (39, 2048), (40, 67108864), (41, -1), (42, 65536), (43, 65536), (44, -1), (45, -1), (46, -1), (47, 8388608), (48, 2097152), (49, 16777216), (50, -1), (51, -1), (52, -1)]

Covered at level 10 : set()

After reduction : 
 pending  : [23, 40, 9, 29, 32, 38, 39, 42, 43, 47, 48, 49, 8, 25, 37, 0, 16, 19, 22, 20, 15, 21, 14]
 solution : [6, 2, 28, 24]


Solution : [6, 2, 28, 24] has cost 20.


Before backtrack at level 10
 pending : [23, 40, 9, 29, 32, 38, 39, 42, 43, 47, 48, 49, 8, 25, 37, 0, 16, 19, 22, 20, 15, 21, 14]
 solution : [6, 2, 28, 24]

After backtrack at level 10
 pending : [23, 40, 9, 29, 32, 38, 39, 42, 43, 47, 48, 49, 8, 25, 37, 0, 16, 19, 22, 20, 15, 21, 14, 30, 33]
 solution : [6, 2, 28, 24]


Invert decision for 24 at level 9


New level: 10
 pending : [23, 40, 9, 29, 32, 38, 39, 42, 43, 47, 48, 49, 8, 25, 37, 0, 16, 19, 22, 20, 15, 21, 14, 30, 33]
 solution : [6, 2, 28]


Before reduction : 
 pending  : [23, 40, 9, 29, 32, 38, 39, 42, 43, 47, 48, 49, 8, 25, 37, 0, 16, 19, 22, 20, 15, 21, 14, 30, 33]
 solution : [6, 2, 28]

Essensial at level 10 : set()

Before removed
 coverage : [(0, 524288), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, 16777216), (9, 131072), (10, -1), (11, -1), (12, -1), (13, -1), (14, 33554432), (15, 16777216), (16, 786432), (17, -1), (18, -1), (19, 262144), (20, 4194304), (21, 8388608), (22, 131072), (23, 16777216), (24, -1), (25, 2097152), (26, -1), (27, -1), (28, -1), (29, 2048), (30, -1), (31, -1), (32, 131072), (33, -1), (34, -1), (35, -1), (36, -1), (37, 2097152), (38, 16777216), (39, 2048), (40, 67108864), (41, -1), (42, 65536), (43, 65536), (44, -1), (45, -1), (46, -1), (47, 8388608), (48, 2097152), (49, 16777216), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, 524288), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, 67108864), (9, 524288), (10, -1), (11, -1), (12, -1), (13, -1), (14, 33554432), (15, 16777216), (16, 786432), (17, -1), (18, -1), (19, 262144), (20, 4194304), (21, 8388608), (22, 131072), (23, 67108864), (24, -1), (25, 2097152), (26, -1), (27, -1), (28, -1), (29, 8192), (30, 4096), (31, -1), (32, 524288), (33, 524288), (34, -1), (35, -1), (36, -1), (37, 2097152), (38, 67108864), (39, 8192), (40, 67108864), (41, -1), (42, 262144), (43, 262144), (44, -1), (45, -1), (46, -1), (47, 33554432), (48, 8388608), (49, 33554432), (50, -1), (51, -1), (52, -1)]

Covered at level 10 : set()

After reduction : 
 pending  : [23, 40, 9, 29, 32, 38, 39, 42, 43, 47, 48, 49, 8, 25, 37, 0, 16, 19, 22, 20, 15, 21, 14, 30, 33]
 solution : [6, 2, 28]


Solution : [6, 2, 28] has cost 13.


Decide in level 10 among pending : [23, 40, 9, 29, 32, 38, 39, 42, 43, 47, 48, 49, 8, 25, 37, 0, 16, 19, 22, 20, 15, 21, 14, 30, 33]

Coverage : [(0, 524288), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, 67108864), (9, 524288), (10, -1), (11, -1), (12, -1), (13, -1), (14, 33554432), (15, 16777216), (16, 786432), (17, -1), (18, -1), (19, 262144), (20, 4194304), (21, 8388608), (22, 131072), (23, 67108864), (24, -1), (25, 2097152), (26, -1), (27, -1), (28, -1), (29, 8192), (30, 4096), (31, -1), (32, 524288), (33, 524288), (34, -1), (35, -1), (36, -1), (37, 2097152), (38, 67108864), (39, 8192), (40, 67108864), (41, -1), (42, 262144), (43, 262144), (44, -1), (45, -1), (46, -1), (47, 33554432), (48, 8388608), (49, 33554432), (50, -1), (51, -1), (52, -1)]

Decide 23 with phase True at level 10

After decision at level 10
 pending : [40, 9, 29, 32, 38, 39, 42, 43, 47, 48, 49, 8, 25, 37, 0, 16, 19, 22, 20, 15, 21, 14, 30, 33]
 solution : [6, 2, 28, 23]


New level: 11
 pending : [40, 9, 29, 32, 38, 39, 42, 43, 47, 48, 49, 8, 25, 37, 0, 16, 19, 22, 20, 15, 21, 14, 30, 33]
 solution : [6, 2, 28, 23]


Before reduction : 
 pending  : [40, 9, 29, 32, 38, 39, 42, 43, 47, 48, 49, 8, 25, 37, 0, 16, 19, 22, 20, 15, 21, 14, 30, 33]
 solution : [6, 2, 28, 23]

Essensial at level 11 : set()

Before removed
 coverage : [(0, 524288), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, 67108864), (9, 524288), (10, -1), (11, -1), (12, -1), (13, -1), (14, 33554432), (15, 16777216), (16, 786432), (17, -1), (18, -1), (19, 262144), (20, 4194304), (21, 8388608), (22, 131072), (23, 67108864), (24, -1), (25, 2097152), (26, -1), (27, -1), (28, -1), (29, 8192), (30, 4096), (31, -1), (32, 524288), (33, 524288), (34, -1), (35, -1), (36, -1), (37, 2097152), (38, 67108864), (39, 8192), (40, 67108864), (41, -1), (42, 262144), (43, 262144), (44, -1), (45, -1), (46, -1), (47, 33554432), (48, 8388608), (49, 33554432), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, 262144), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, 0), (9, 0), (10, -1), (11, -1), (12, -1), (13, -1), (14, 16777216), (15, 8388608), (16, 262144), (17, -1), (18, -1), (19, 131072), (20, 4194304), (21, 8388608), (22, 131072), (23, -1), (24, -1), (25, 2097152), (26, -1), (27, -1), (28, -1), (29, 0), (30, 0), (31, -1), (32, 0), (33, 0), (34, -1), (35, -1), (36, -1), (37, 2097152), (38, 0), (39, 0), (40, 65536), (41, -1), (42, 0), (43, 0), (44, -1), (45, -1), (46, -1), (47, 0), (48, 0), (49, 0), (50, -1), (51, -1), (52, -1)]

Covered at level 11 : {32, 33, 38, 39, 8, 9, 42, 43, 47, 48, 49, 29, 30}

After reduction : 
 pending  : [40, 25, 37, 0, 16, 19, 22, 20, 15, 21, 14]
 solution : [6, 2, 28, 23]


Before reduction : 
 pending  : [40, 25, 37, 0, 16, 19, 22, 20, 15, 21, 14]
 solution : [6, 2, 28, 23]

Essensial at level 11 : set()

Before removed
 coverage : [(0, 262144), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, 0), (9, 0), (10, -1), (11, -1), (12, -1), (13, -1), (14, 16777216), (15, 8388608), (16, 262144), (17, -1), (18, -1), (19, 131072), (20, 4194304), (21, 8388608), (22, 131072), (23, -1), (24, -1), (25, 2097152), (26, -1), (27, -1), (28, -1), (29, 0), (30, 0), (31, -1), (32, 0), (33, 0), (34, -1), (35, -1), (36, -1), (37, 2097152), (38, 0), (39, 0), (40, 65536), (41, -1), (42, 0), (43, 0), (44, -1), (45, -1), (46, -1), (47, 0), (48, 0), (49, 0), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, 262144), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 16777216), (15, 8388608), (16, 262144), (17, -1), (18, -1), (19, 131072), (20, 4194304), (21, 8388608), (22, 131072), (23, -1), (24, -1), (25, 2097152), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, 2097152), (38, -1), (39, -1), (40, 65536), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 11 : set()

After reduction : 
 pending  : [40, 25, 37, 0, 16, 19, 22, 20, 15, 21, 14]
 solution : [6, 2, 28, 23]


Solution : [6, 2, 28, 23] has cost 20.


Before backtrack at level 11
 pending : [40, 25, 37, 0, 16, 19, 22, 20, 15, 21, 14]
 solution : [6, 2, 28, 23]

After backtrack at level 11
 pending : [40, 25, 37, 0, 16, 19, 22, 20, 15, 21, 14, 9, 29, 32, 38, 39, 42, 43, 47, 48, 49, 8, 30, 33]
 solution : [6, 2, 28, 23]


Invert decision for 23 at level 10


New level: 11
 pending : [40, 25, 37, 0, 16, 19, 22, 20, 15, 21, 14, 9, 29, 32, 38, 39, 42, 43, 47, 48, 49, 8, 30, 33]
 solution : [6, 2, 28]


Before reduction : 
 pending  : [40, 25, 37, 0, 16, 19, 22, 20, 15, 21, 14, 9, 29, 32, 38, 39, 42, 43, 47, 48, 49, 8, 30, 33]
 solution : [6, 2, 28]

Essensial at level 11 : {8}

Before removed
 coverage : [(0, 262144), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 16777216), (15, 8388608), (16, 262144), (17, -1), (18, -1), (19, 131072), (20, 4194304), (21, 8388608), (22, 131072), (23, -1), (24, -1), (25, 2097152), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, 2097152), (38, -1), (39, -1), (40, 65536), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, 262144), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, 0), (10, -1), (11, -1), (12, -1), (13, -1), (14, 16777216), (15, 8388608), (16, 262144), (17, -1), (18, -1), (19, 131072), (20, 4194304), (21, 8388608), (22, 131072), (23, -1), (24, -1), (25, 2097152), (26, -1), (27, -1), (28, -1), (29, 0), (30, 0), (31, -1), (32, 0), (33, 0), (34, -1), (35, -1), (36, -1), (37, 2097152), (38, 0), (39, 0), (40, 65536), (41, -1), (42, 0), (43, 0), (44, -1), (45, -1), (46, -1), (47, 0), (48, 0), (49, 0), (50, -1), (51, -1), (52, -1)]

Covered at level 11 : {32, 33, 38, 39, 9, 42, 43, 47, 48, 49, 29, 30}

After reduction : 
 pending  : [40, 25, 37, 0, 16, 19, 22, 20, 15, 21, 14]
 solution : [6, 2, 28, 8]


Before reduction : 
 pending  : [40, 25, 37, 0, 16, 19, 22, 20, 15, 21, 14]
 solution : [6, 2, 28, 8]

Essensial at level 11 : set()

Before removed
 coverage : [(0, 262144), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, 0), (10, -1), (11, -1), (12, -1), (13, -1), (14, 16777216), (15, 8388608), (16, 262144), (17, -1), (18, -1), (19, 131072), (20, 4194304), (21, 8388608), (22, 131072), (23, -1), (24, -1), (25, 2097152), (26, -1), (27, -1), (28, -1), (29, 0), (30, 0), (31, -1), (32, 0), (33, 0), (34, -1), (35, -1), (36, -1), (37, 2097152), (38, 0), (39, 0), (40, 65536), (41, -1), (42, 0), (43, 0), (44, -1), (45, -1), (46, -1), (47, 0), (48, 0), (49, 0), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, 262144), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 16777216), (15, 8388608), (16, 262144), (17, -1), (18, -1), (19, 131072), (20, 4194304), (21, 8388608), (22, 131072), (23, -1), (24, -1), (25, 2097152), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, 2097152), (38, -1), (39, -1), (40, 65536), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 11 : set()

After reduction : 
 pending  : [40, 25, 37, 0, 16, 19, 22, 20, 15, 21, 14]
 solution : [6, 2, 28, 8]


Solution : [6, 2, 28, 8] has cost 17.


Decide in level 11 among pending : [40, 25, 37, 0, 16, 19, 22, 20, 15, 21, 14]

Coverage : [(0, 262144), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 16777216), (15, 8388608), (16, 262144), (17, -1), (18, -1), (19, 131072), (20, 4194304), (21, 8388608), (22, 131072), (23, -1), (24, -1), (25, 2097152), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, 2097152), (38, -1), (39, -1), (40, 65536), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Decide 14 with phase True at level 11

After decision at level 11
 pending : [40, 25, 37, 0, 16, 19, 22, 20, 15, 21]
 solution : [6, 2, 28, 8, 14]


New level: 12
 pending : [40, 25, 37, 0, 16, 19, 22, 20, 15, 21]
 solution : [6, 2, 28, 8, 14]


Before reduction : 
 pending  : [40, 25, 37, 0, 16, 19, 22, 20, 15, 21]
 solution : [6, 2, 28, 8, 14]

Essensial at level 12 : set()

Before removed
 coverage : [(0, 262144), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 16777216), (15, 8388608), (16, 262144), (17, -1), (18, -1), (19, 131072), (20, 4194304), (21, 8388608), (22, 131072), (23, -1), (24, -1), (25, 2097152), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, 2097152), (38, -1), (39, -1), (40, 65536), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, 0), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, 0), (16, 0), (17, -1), (18, -1), (19, 0), (20, 32768), (21, 131072), (22, 32768), (23, -1), (24, -1), (25, 2048), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, 2048), (38, -1), (39, -1), (40, 1024), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 12 : {0, 16, 19, 15}

After reduction : 
 pending  : [40, 25, 37, 22, 20, 21]
 solution : [6, 2, 28, 8, 14]


Before reduction : 
 pending  : [40, 25, 37, 22, 20, 21]
 solution : [6, 2, 28, 8, 14]

Essensial at level 12 : set()

Before removed
 coverage : [(0, 0), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, 0), (16, 0), (17, -1), (18, -1), (19, 0), (20, 32768), (21, 131072), (22, 32768), (23, -1), (24, -1), (25, 2048), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, 2048), (38, -1), (39, -1), (40, 1024), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, 32768), (21, 131072), (22, 32768), (23, -1), (24, -1), (25, 2048), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, 2048), (38, -1), (39, -1), (40, 1024), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 12 : set()

After reduction : 
 pending  : [40, 25, 37, 22, 20, 21]
 solution : [6, 2, 28, 8, 14]


Solution : [6, 2, 28, 8, 14] has cost 26.


Before backtrack at level 12
 pending : [40, 25, 37, 22, 20, 21]
 solution : [6, 2, 28, 8, 14]

After backtrack at level 12
 pending : [40, 25, 37, 22, 20, 21, 0, 16, 19, 15]
 solution : [6, 2, 28, 8, 14]


Invert decision for 14 at level 11


New level: 12
 pending : [40, 25, 37, 22, 20, 21, 0, 16, 19, 15]
 solution : [6, 2, 28, 8]


Before reduction : 
 pending  : [40, 25, 37, 22, 20, 21, 0, 16, 19, 15]
 solution : [6, 2, 28, 8]

Essensial at level 12 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, 32768), (21, 131072), (22, 32768), (23, -1), (24, -1), (25, 2048), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, 2048), (38, -1), (39, -1), (40, 1024), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, 262144), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, 8388608), (16, 262144), (17, -1), (18, -1), (19, 131072), (20, 4194304), (21, 8388608), (22, 131072), (23, -1), (24, -1), (25, 2097152), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, 2097152), (38, -1), (39, -1), (40, 65536), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 12 : set()

After reduction : 
 pending  : [40, 25, 37, 22, 20, 21, 0, 16, 19, 15]
 solution : [6, 2, 28, 8]


Solution : [6, 2, 28, 8] has cost 17.


Decide in level 12 among pending : [40, 25, 37, 22, 20, 21, 0, 16, 19, 15]

Coverage : [(0, 262144), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, 8388608), (16, 262144), (17, -1), (18, -1), (19, 131072), (20, 4194304), (21, 8388608), (22, 131072), (23, -1), (24, -1), (25, 2097152), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, 2097152), (38, -1), (39, -1), (40, 65536), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Decide 21 with phase True at level 12

After decision at level 12
 pending : [40, 25, 37, 22, 20, 0, 16, 19, 15]
 solution : [6, 2, 28, 8, 21]


New level: 13
 pending : [40, 25, 37, 22, 20, 0, 16, 19, 15]
 solution : [6, 2, 28, 8, 21]


Before reduction : 
 pending  : [40, 25, 37, 22, 20, 0, 16, 19, 15]
 solution : [6, 2, 28, 8, 21]

Essensial at level 13 : set()

Before removed
 coverage : [(0, 262144), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, 8388608), (16, 262144), (17, -1), (18, -1), (19, 131072), (20, 4194304), (21, 8388608), (22, 131072), (23, -1), (24, -1), (25, 2097152), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, 2097152), (38, -1), (39, -1), (40, 65536), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, 131072), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, 2097152), (16, 131072), (17, -1), (18, -1), (19, 0), (20, 0), (21, -1), (22, 0), (23, -1), (24, -1), (25, 524288), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, 524288), (38, -1), (39, -1), (40, 1024), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 13 : {19, 20, 22}

After reduction : 
 pending  : [40, 25, 37, 0, 16, 15]
 solution : [6, 2, 28, 8, 21]


Before reduction : 
 pending  : [40, 25, 37, 0, 16, 15]
 solution : [6, 2, 28, 8, 21]

Essensial at level 13 : set()

Before removed
 coverage : [(0, 131072), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, 2097152), (16, 131072), (17, -1), (18, -1), (19, 0), (20, 0), (21, -1), (22, 0), (23, -1), (24, -1), (25, 524288), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, 524288), (38, -1), (39, -1), (40, 1024), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, 131072), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, 2097152), (16, 131072), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, 524288), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, 524288), (38, -1), (39, -1), (40, 1024), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 13 : set()

After reduction : 
 pending  : [40, 25, 37, 0, 16, 15]
 solution : [6, 2, 28, 8, 21]


Solution : [6, 2, 28, 8, 21] has cost 24.


Before backtrack at level 13
 pending : [40, 25, 37, 0, 16, 15]
 solution : [6, 2, 28, 8, 21]

After backtrack at level 13
 pending : [40, 25, 37, 0, 16, 15, 22, 20, 19]
 solution : [6, 2, 28, 8, 21]


Invert decision for 21 at level 12


New level: 13
 pending : [40, 25, 37, 0, 16, 15, 22, 20, 19]
 solution : [6, 2, 28, 8]


Before reduction : 
 pending  : [40, 25, 37, 0, 16, 15, 22, 20, 19]
 solution : [6, 2, 28, 8]

Essensial at level 13 : set()

Before removed
 coverage : [(0, 131072), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, 2097152), (16, 131072), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, 524288), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, 524288), (38, -1), (39, -1), (40, 1024), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, 262144), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, 8388608), (16, 262144), (17, -1), (18, -1), (19, 131072), (20, 4194304), (21, -1), (22, 131072), (23, -1), (24, -1), (25, 2097152), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, 2097152), (38, -1), (39, -1), (40, 65536), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 13 : set()

After reduction : 
 pending  : [40, 25, 37, 0, 16, 15, 22, 20, 19]
 solution : [6, 2, 28, 8]


Solution : [6, 2, 28, 8] has cost 17.


Decide in level 13 among pending : [40, 25, 37, 0, 16, 15, 22, 20, 19]

Coverage : [(0, 262144), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, 8388608), (16, 262144), (17, -1), (18, -1), (19, 131072), (20, 4194304), (21, -1), (22, 131072), (23, -1), (24, -1), (25, 2097152), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, 2097152), (38, -1), (39, -1), (40, 65536), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Decide 15 with phase True at level 13

After decision at level 13
 pending : [40, 25, 37, 0, 16, 22, 20, 19]
 solution : [6, 2, 28, 8, 15]


New level: 14
 pending : [40, 25, 37, 0, 16, 22, 20, 19]
 solution : [6, 2, 28, 8, 15]


Before reduction : 
 pending  : [40, 25, 37, 0, 16, 22, 20, 19]
 solution : [6, 2, 28, 8, 15]

Essensial at level 14 : set()

Before removed
 coverage : [(0, 262144), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, 8388608), (16, 262144), (17, -1), (18, -1), (19, 131072), (20, 4194304), (21, -1), (22, 131072), (23, -1), (24, -1), (25, 2097152), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, 2097152), (38, -1), (39, -1), (40, 65536), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, 0), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, 0), (17, -1), (18, -1), (19, 0), (20, 32768), (21, -1), (22, 32768), (23, -1), (24, -1), (25, 2048), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, 2048), (38, -1), (39, -1), (40, 1024), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 14 : {0, 16, 19}

After reduction : 
 pending  : [40, 25, 37, 22, 20]
 solution : [6, 2, 28, 8, 15]


Before reduction : 
 pending  : [40, 25, 37, 22, 20]
 solution : [6, 2, 28, 8, 15]

Essensial at level 14 : set()

Before removed
 coverage : [(0, 0), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, 0), (17, -1), (18, -1), (19, 0), (20, 32768), (21, -1), (22, 32768), (23, -1), (24, -1), (25, 2048), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, 2048), (38, -1), (39, -1), (40, 1024), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, 32768), (21, -1), (22, 32768), (23, -1), (24, -1), (25, 2048), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, 2048), (38, -1), (39, -1), (40, 1024), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 14 : set()

After reduction : 
 pending  : [40, 25, 37, 22, 20]
 solution : [6, 2, 28, 8, 15]


Solution : [6, 2, 28, 8, 15] has cost 26.


Before backtrack at level 14
 pending : [40, 25, 37, 22, 20]
 solution : [6, 2, 28, 8, 15]

After backtrack at level 14
 pending : [40, 25, 37, 22, 20, 0, 16, 19]
 solution : [6, 2, 28, 8, 15]


Invert decision for 15 at level 13


New level: 14
 pending : [40, 25, 37, 22, 20, 0, 16, 19]
 solution : [6, 2, 28, 8]


Before reduction : 
 pending  : [40, 25, 37, 22, 20, 0, 16, 19]
 solution : [6, 2, 28, 8]

Essensial at level 14 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, 32768), (21, -1), (22, 32768), (23, -1), (24, -1), (25, 2048), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, 2048), (38, -1), (39, -1), (40, 1024), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, 262144), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, 262144), (17, -1), (18, -1), (19, 131072), (20, 4194304), (21, -1), (22, 131072), (23, -1), (24, -1), (25, 2097152), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, 2097152), (38, -1), (39, -1), (40, 65536), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 14 : set()

After reduction : 
 pending  : [40, 25, 37, 22, 20, 0, 16, 19]
 solution : [6, 2, 28, 8]


Solution : [6, 2, 28, 8] has cost 17.


Decide in level 14 among pending : [40, 25, 37, 22, 20, 0, 16, 19]

Coverage : [(0, 262144), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, 262144), (17, -1), (18, -1), (19, 131072), (20, 4194304), (21, -1), (22, 131072), (23, -1), (24, -1), (25, 2097152), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, 2097152), (38, -1), (39, -1), (40, 65536), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Decide 20 with phase True at level 14

After decision at level 14
 pending : [40, 25, 37, 22, 0, 16, 19]
 solution : [6, 2, 28, 8, 20]


New level: 15
 pending : [40, 25, 37, 22, 0, 16, 19]
 solution : [6, 2, 28, 8, 20]


Before reduction : 
 pending  : [40, 25, 37, 22, 0, 16, 19]
 solution : [6, 2, 28, 8, 20]

Essensial at level 15 : set()

Before removed
 coverage : [(0, 262144), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, 262144), (17, -1), (18, -1), (19, 131072), (20, 4194304), (21, -1), (22, 131072), (23, -1), (24, -1), (25, 2097152), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, 2097152), (38, -1), (39, -1), (40, 65536), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, 131072), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, 131072), (17, -1), (18, -1), (19, 0), (20, -1), (21, -1), (22, 0), (23, -1), (24, -1), (25, 524288), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, 524288), (38, -1), (39, -1), (40, 1024), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 15 : {19, 22}

After reduction : 
 pending  : [40, 25, 37, 0, 16]
 solution : [6, 2, 28, 8, 20]


Before reduction : 
 pending  : [40, 25, 37, 0, 16]
 solution : [6, 2, 28, 8, 20]

Essensial at level 15 : set()

Before removed
 coverage : [(0, 131072), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, 131072), (17, -1), (18, -1), (19, 0), (20, -1), (21, -1), (22, 0), (23, -1), (24, -1), (25, 524288), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, 524288), (38, -1), (39, -1), (40, 1024), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, 131072), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, 131072), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, 524288), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, 524288), (38, -1), (39, -1), (40, 1024), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 15 : set()

After reduction : 
 pending  : [40, 25, 37, 0, 16]
 solution : [6, 2, 28, 8, 20]


Solution : [6, 2, 28, 8, 20] has cost 24.


Before backtrack at level 15
 pending : [40, 25, 37, 0, 16]
 solution : [6, 2, 28, 8, 20]

After backtrack at level 15
 pending : [40, 25, 37, 0, 16, 22, 19]
 solution : [6, 2, 28, 8, 20]


Invert decision for 20 at level 14


New level: 15
 pending : [40, 25, 37, 0, 16, 22, 19]
 solution : [6, 2, 28, 8]


Before reduction : 
 pending  : [40, 25, 37, 0, 16, 22, 19]
 solution : [6, 2, 28, 8]

Essensial at level 15 : {22}

Before removed
 coverage : [(0, 131072), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, 131072), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, 524288), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, 524288), (38, -1), (39, -1), (40, 1024), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, 262144), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, 262144), (17, -1), (18, -1), (19, 65536), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, 2097152), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, 2097152), (38, -1), (39, -1), (40, 65536), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 15 : set()

After reduction : 
 pending  : [40, 25, 37, 0, 16, 19]
 solution : [6, 2, 28, 8, 22]


Before reduction : 
 pending  : [40, 25, 37, 0, 16, 19]
 solution : [6, 2, 28, 8, 22]

Essensial at level 15 : set()

Before removed
 coverage : [(0, 262144), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, 262144), (17, -1), (18, -1), (19, 65536), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, 2097152), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, 2097152), (38, -1), (39, -1), (40, 65536), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, 262144), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, 262144), (17, -1), (18, -1), (19, 65536), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, 2097152), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, 2097152), (38, -1), (39, -1), (40, 65536), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 15 : set()

After reduction : 
 pending  : [40, 25, 37, 0, 16, 19]
 solution : [6, 2, 28, 8, 22]


Solution : [6, 2, 28, 8, 22] has cost 24.


Before backtrack at level 15
 pending : [40, 25, 37, 0, 16, 19]
 solution : [6, 2, 28, 8, 22]

After backtrack at level 15
 pending : [40, 25, 37, 0, 16, 19, 22]
 solution : [6, 2, 28, 8]


Before backtrack at level 14
 pending : [40, 25, 37, 0, 16, 19, 22]
 solution : [6, 2, 28, 8]

After backtrack at level 14
 pending : [40, 25, 37, 0, 16, 19, 22, 20]
 solution : [6, 2, 28, 8]


Before backtrack at level 13
 pending : [40, 25, 37, 0, 16, 19, 22, 20]
 solution : [6, 2, 28, 8]

After backtrack at level 13
 pending : [40, 25, 37, 0, 16, 19, 22, 20, 15]
 solution : [6, 2, 28, 8]


Before backtrack at level 12
 pending : [40, 25, 37, 0, 16, 19, 22, 20, 15]
 solution : [6, 2, 28, 8]

After backtrack at level 12
 pending : [40, 25, 37, 0, 16, 19, 22, 20, 15, 21]
 solution : [6, 2, 28, 8]


Before backtrack at level 11
 pending : [40, 25, 37, 0, 16, 19, 22, 20, 15, 21]
 solution : [6, 2, 28, 8]

After backtrack at level 11
 pending : [40, 25, 37, 0, 16, 19, 22, 20, 15, 21, 8, 9, 29, 32, 38, 39, 42, 43, 47, 48, 49, 30, 33, 14]
 solution : [6, 2, 28]


Before backtrack at level 10
 pending : [40, 25, 37, 0, 16, 19, 22, 20, 15, 21, 8, 9, 29, 32, 38, 39, 42, 43, 47, 48, 49, 30, 33, 14]
 solution : [6, 2, 28]

After backtrack at level 10
 pending : [40, 25, 37, 0, 16, 19, 22, 20, 15, 21, 8, 9, 29, 32, 38, 39, 42, 43, 47, 48, 49, 30, 33, 14, 23]
 solution : [6, 2, 28]


Before backtrack at level 9
 pending : [40, 25, 37, 0, 16, 19, 22, 20, 15, 21, 8, 9, 29, 32, 38, 39, 42, 43, 47, 48, 49, 30, 33, 14, 23]
 solution : [6, 2, 28]

After backtrack at level 9
 pending : [40, 25, 37, 0, 16, 19, 22, 20, 15, 21, 8, 9, 29, 32, 38, 39, 42, 43, 47, 48, 49, 30, 33, 14, 23, 24]
 solution : [6, 2, 28]


Before backtrack at level 8
 pending : [40, 25, 37, 0, 16, 19, 22, 20, 15, 21, 8, 9, 29, 32, 38, 39, 42, 43, 47, 48, 49, 30, 33, 14, 23, 24]
 solution : [6, 2, 28]

After backtrack at level 8
 pending : [40, 25, 37, 0, 16, 19, 22, 20, 15, 21, 8, 9, 29, 32, 38, 39, 42, 43, 47, 48, 49, 30, 33, 14, 23, 24, 41]
 solution : [6, 2, 28]


Invert decision for 28 at level 7


New level: 8
 pending : [40, 25, 37, 0, 16, 19, 22, 20, 15, 21, 8, 9, 29, 32, 38, 39, 42, 43, 47, 48, 49, 30, 33, 14, 23, 24, 41]
 solution : [6, 2]


Before reduction : 
 pending  : [40, 25, 37, 0, 16, 19, 22, 20, 15, 21, 8, 9, 29, 32, 38, 39, 42, 43, 47, 48, 49, 30, 33, 14, 23, 24, 41]
 solution : [6, 2]

Essensial at level 8 : set()

Before removed
 coverage : [(0, 262144), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, 262144), (17, -1), (18, -1), (19, 65536), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, 2097152), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, 2097152), (38, -1), (39, -1), (40, 65536), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, 524288), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, 67108864), (9, 524288), (10, -1), (11, -1), (12, -1), (13, -1), (14, 33554432), (15, 16777216), (16, 786432), (17, -1), (18, -1), (19, 262144), (20, 4194304), (21, 8388608), (22, 131072), (23, 67108864), (24, 268435456), (25, 2097152), (26, -1), (27, -1), (28, -1), (29, 8192), (30, 8192), (31, -1), (32, 524288), (33, 1048576), (34, -1), (35, -1), (36, -1), (37, 2097152), (38, 67108864), (39, 8192), (40, 67108864), (41, 134217728), (42, 262144), (43, 262144), (44, -1), (45, -1), (46, -1), (47, 33554432), (48, 8388608), (49, 33554432), (50, -1), (51, -1), (52, -1)]

Covered at level 8 : set()

After reduction : 
 pending  : [40, 25, 37, 0, 16, 19, 22, 20, 15, 21, 8, 9, 29, 32, 38, 39, 42, 43, 47, 48, 49, 30, 33, 14, 23, 24, 41]
 solution : [6, 2]


Solution : [6, 2] has cost 9.


Decide in level 8 among pending : [40, 25, 37, 0, 16, 19, 22, 20, 15, 21, 8, 9, 29, 32, 38, 39, 42, 43, 47, 48, 49, 30, 33, 14, 23, 24, 41]

Coverage : [(0, 524288), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, 67108864), (9, 524288), (10, -1), (11, -1), (12, -1), (13, -1), (14, 33554432), (15, 16777216), (16, 786432), (17, -1), (18, -1), (19, 262144), (20, 4194304), (21, 8388608), (22, 131072), (23, 67108864), (24, 268435456), (25, 2097152), (26, -1), (27, -1), (28, -1), (29, 8192), (30, 8192), (31, -1), (32, 524288), (33, 1048576), (34, -1), (35, -1), (36, -1), (37, 2097152), (38, 67108864), (39, 8192), (40, 67108864), (41, 134217728), (42, 262144), (43, 262144), (44, -1), (45, -1), (46, -1), (47, 33554432), (48, 8388608), (49, 33554432), (50, -1), (51, -1), (52, -1)]

Decide 24 with phase True at level 8

After decision at level 8
 pending : [40, 25, 37, 0, 16, 19, 22, 20, 15, 21, 8, 9, 29, 32, 38, 39, 42, 43, 47, 48, 49, 30, 33, 14, 23, 41]
 solution : [6, 2, 24]


New level: 9
 pending : [40, 25, 37, 0, 16, 19, 22, 20, 15, 21, 8, 9, 29, 32, 38, 39, 42, 43, 47, 48, 49, 30, 33, 14, 23, 41]
 solution : [6, 2, 24]


Before reduction : 
 pending  : [40, 25, 37, 0, 16, 19, 22, 20, 15, 21, 8, 9, 29, 32, 38, 39, 42, 43, 47, 48, 49, 30, 33, 14, 23, 41]
 solution : [6, 2, 24]

Essensial at level 9 : set()

Before removed
 coverage : [(0, 524288), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, 67108864), (9, 524288), (10, -1), (11, -1), (12, -1), (13, -1), (14, 33554432), (15, 16777216), (16, 786432), (17, -1), (18, -1), (19, 262144), (20, 4194304), (21, 8388608), (22, 131072), (23, 67108864), (24, 268435456), (25, 2097152), (26, -1), (27, -1), (28, -1), (29, 8192), (30, 8192), (31, -1), (32, 524288), (33, 1048576), (34, -1), (35, -1), (36, -1), (37, 2097152), (38, 67108864), (39, 8192), (40, 67108864), (41, 134217728), (42, 262144), (43, 262144), (44, -1), (45, -1), (46, -1), (47, 33554432), (48, 8388608), (49, 33554432), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, 524288), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, 16777216), (9, 131072), (10, -1), (11, -1), (12, -1), (13, -1), (14, 33554432), (15, 16777216), (16, 786432), (17, -1), (18, -1), (19, 262144), (20, 4194304), (21, 8388608), (22, 131072), (23, 16777216), (24, -1), (25, 2097152), (26, -1), (27, -1), (28, -1), (29, 2048), (30, 0), (31, -1), (32, 131072), (33, 0), (34, -1), (35, -1), (36, -1), (37, 2097152), (38, 16777216), (39, 2048), (40, 67108864), (41, 512), (42, 65536), (43, 65536), (44, -1), (45, -1), (46, -1), (47, 8388608), (48, 2097152), (49, 16777216), (50, -1), (51, -1), (52, -1)]

Covered at level 9 : {33, 30}

After reduction : 
 pending  : [40, 25, 37, 0, 16, 19, 22, 20, 15, 21, 8, 9, 29, 32, 38, 39, 42, 43, 47, 48, 49, 14, 23, 41]
 solution : [6, 2, 24]


Before reduction : 
 pending  : [40, 25, 37, 0, 16, 19, 22, 20, 15, 21, 8, 9, 29, 32, 38, 39, 42, 43, 47, 48, 49, 14, 23, 41]
 solution : [6, 2, 24]

Essensial at level 9 : set()

Before removed
 coverage : [(0, 524288), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, 16777216), (9, 131072), (10, -1), (11, -1), (12, -1), (13, -1), (14, 33554432), (15, 16777216), (16, 786432), (17, -1), (18, -1), (19, 262144), (20, 4194304), (21, 8388608), (22, 131072), (23, 16777216), (24, -1), (25, 2097152), (26, -1), (27, -1), (28, -1), (29, 2048), (30, 0), (31, -1), (32, 131072), (33, 0), (34, -1), (35, -1), (36, -1), (37, 2097152), (38, 16777216), (39, 2048), (40, 67108864), (41, 512), (42, 65536), (43, 65536), (44, -1), (45, -1), (46, -1), (47, 8388608), (48, 2097152), (49, 16777216), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, 524288), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, 16777216), (9, 131072), (10, -1), (11, -1), (12, -1), (13, -1), (14, 33554432), (15, 16777216), (16, 786432), (17, -1), (18, -1), (19, 262144), (20, 4194304), (21, 8388608), (22, 131072), (23, 16777216), (24, -1), (25, 2097152), (26, -1), (27, -1), (28, -1), (29, 2048), (30, -1), (31, -1), (32, 131072), (33, -1), (34, -1), (35, -1), (36, -1), (37, 2097152), (38, 16777216), (39, 2048), (40, 67108864), (41, 512), (42, 65536), (43, 65536), (44, -1), (45, -1), (46, -1), (47, 8388608), (48, 2097152), (49, 16777216), (50, -1), (51, -1), (52, -1)]

Covered at level 9 : set()

After reduction : 
 pending  : [40, 25, 37, 0, 16, 19, 22, 20, 15, 21, 8, 9, 29, 32, 38, 39, 42, 43, 47, 48, 49, 14, 23, 41]
 solution : [6, 2, 24]


Solution : [6, 2, 24] has cost 16.


Decide in level 9 among pending : [40, 25, 37, 0, 16, 19, 22, 20, 15, 21, 8, 9, 29, 32, 38, 39, 42, 43, 47, 48, 49, 14, 23, 41]

Coverage : [(0, 524288), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, 16777216), (9, 131072), (10, -1), (11, -1), (12, -1), (13, -1), (14, 33554432), (15, 16777216), (16, 786432), (17, -1), (18, -1), (19, 262144), (20, 4194304), (21, 8388608), (22, 131072), (23, 16777216), (24, -1), (25, 2097152), (26, -1), (27, -1), (28, -1), (29, 2048), (30, -1), (31, -1), (32, 131072), (33, -1), (34, -1), (35, -1), (36, -1), (37, 2097152), (38, 16777216), (39, 2048), (40, 67108864), (41, 512), (42, 65536), (43, 65536), (44, -1), (45, -1), (46, -1), (47, 8388608), (48, 2097152), (49, 16777216), (50, -1), (51, -1), (52, -1)]

Decide 40 with phase True at level 9

After decision at level 9
 pending : [25, 37, 0, 16, 19, 22, 20, 15, 21, 8, 9, 29, 32, 38, 39, 42, 43, 47, 48, 49, 14, 23, 41]
 solution : [6, 2, 24, 40]


New level: 10
 pending : [25, 37, 0, 16, 19, 22, 20, 15, 21, 8, 9, 29, 32, 38, 39, 42, 43, 47, 48, 49, 14, 23, 41]
 solution : [6, 2, 24, 40]


Before reduction : 
 pending  : [25, 37, 0, 16, 19, 22, 20, 15, 21, 8, 9, 29, 32, 38, 39, 42, 43, 47, 48, 49, 14, 23, 41]
 solution : [6, 2, 24, 40]

Essensial at level 10 : set()

Before removed
 coverage : [(0, 524288), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, 16777216), (9, 131072), (10, -1), (11, -1), (12, -1), (13, -1), (14, 33554432), (15, 16777216), (16, 786432), (17, -1), (18, -1), (19, 262144), (20, 4194304), (21, 8388608), (22, 131072), (23, 16777216), (24, -1), (25, 2097152), (26, -1), (27, -1), (28, -1), (29, 2048), (30, -1), (31, -1), (32, 131072), (33, -1), (34, -1), (35, -1), (36, -1), (37, 2097152), (38, 16777216), (39, 2048), (40, 67108864), (41, 512), (42, 65536), (43, 65536), (44, -1), (45, -1), (46, -1), (47, 8388608), (48, 2097152), (49, 16777216), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, 262144), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, 4194304), (9, 32768), (10, -1), (11, -1), (12, -1), (13, -1), (14, 16777216), (15, 8388608), (16, 262144), (17, -1), (18, -1), (19, 131072), (20, 4194304), (21, 8388608), (22, 131072), (23, 4194304), (24, -1), (25, 524288), (26, -1), (27, -1), (28, -1), (29, 512), (30, -1), (31, -1), (32, 32768), (33, -1), (34, -1), (35, -1), (36, -1), (37, 524288), (38, 16777216), (39, 512), (40, -1), (41, 0), (42, 16384), (43, 16384), (44, -1), (45, -1), (46, -1), (47, 4194304), (48, 524288), (49, 16777216), (50, -1), (51, -1), (52, -1)]

Covered at level 10 : {41}

After reduction : 
 pending  : [25, 37, 0, 16, 19, 22, 20, 15, 21, 8, 9, 29, 32, 38, 39, 42, 43, 47, 48, 49, 14, 23]
 solution : [6, 2, 24, 40]


Before reduction : 
 pending  : [25, 37, 0, 16, 19, 22, 20, 15, 21, 8, 9, 29, 32, 38, 39, 42, 43, 47, 48, 49, 14, 23]
 solution : [6, 2, 24, 40]

Essensial at level 10 : set()

Before removed
 coverage : [(0, 262144), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, 4194304), (9, 32768), (10, -1), (11, -1), (12, -1), (13, -1), (14, 16777216), (15, 8388608), (16, 262144), (17, -1), (18, -1), (19, 131072), (20, 4194304), (21, 8388608), (22, 131072), (23, 4194304), (24, -1), (25, 524288), (26, -1), (27, -1), (28, -1), (29, 512), (30, -1), (31, -1), (32, 32768), (33, -1), (34, -1), (35, -1), (36, -1), (37, 524288), (38, 16777216), (39, 512), (40, -1), (41, 0), (42, 16384), (43, 16384), (44, -1), (45, -1), (46, -1), (47, 4194304), (48, 524288), (49, 16777216), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, 262144), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, 4194304), (9, 32768), (10, -1), (11, -1), (12, -1), (13, -1), (14, 16777216), (15, 8388608), (16, 262144), (17, -1), (18, -1), (19, 131072), (20, 4194304), (21, 8388608), (22, 131072), (23, 4194304), (24, -1), (25, 524288), (26, -1), (27, -1), (28, -1), (29, 512), (30, -1), (31, -1), (32, 32768), (33, -1), (34, -1), (35, -1), (36, -1), (37, 524288), (38, 16777216), (39, 512), (40, -1), (41, -1), (42, 16384), (43, 16384), (44, -1), (45, -1), (46, -1), (47, 4194304), (48, 524288), (49, 16777216), (50, -1), (51, -1), (52, -1)]

Covered at level 10 : set()

After reduction : 
 pending  : [25, 37, 0, 16, 19, 22, 20, 15, 21, 8, 9, 29, 32, 38, 39, 42, 43, 47, 48, 49, 14, 23]
 solution : [6, 2, 24, 40]


Solution : [6, 2, 24, 40] has cost 34.


Before backtrack at level 10
 pending : [25, 37, 0, 16, 19, 22, 20, 15, 21, 8, 9, 29, 32, 38, 39, 42, 43, 47, 48, 49, 14, 23]
 solution : [6, 2, 24, 40]

After backtrack at level 10
 pending : [25, 37, 0, 16, 19, 22, 20, 15, 21, 8, 9, 29, 32, 38, 39, 42, 43, 47, 48, 49, 14, 23, 41]
 solution : [6, 2, 24, 40]


Invert decision for 40 at level 9


New level: 10
 pending : [25, 37, 0, 16, 19, 22, 20, 15, 21, 8, 9, 29, 32, 38, 39, 42, 43, 47, 48, 49, 14, 23, 41]
 solution : [6, 2, 24]


Before reduction : 
 pending  : [25, 37, 0, 16, 19, 22, 20, 15, 21, 8, 9, 29, 32, 38, 39, 42, 43, 47, 48, 49, 14, 23, 41]
 solution : [6, 2, 24]

Essensial at level 10 : set()

Before removed
 coverage : [(0, 262144), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, 4194304), (9, 32768), (10, -1), (11, -1), (12, -1), (13, -1), (14, 16777216), (15, 8388608), (16, 262144), (17, -1), (18, -1), (19, 131072), (20, 4194304), (21, 8388608), (22, 131072), (23, 4194304), (24, -1), (25, 524288), (26, -1), (27, -1), (28, -1), (29, 512), (30, -1), (31, -1), (32, 32768), (33, -1), (34, -1), (35, -1), (36, -1), (37, 524288), (38, 16777216), (39, 512), (40, -1), (41, -1), (42, 16384), (43, 16384), (44, -1), (45, -1), (46, -1), (47, 4194304), (48, 524288), (49, 16777216), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, 524288), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, 16777216), (9, 131072), (10, -1), (11, -1), (12, -1), (13, -1), (14, 33554432), (15, 16777216), (16, 786432), (17, -1), (18, -1), (19, 262144), (20, 4194304), (21, 8388608), (22, 131072), (23, 16777216), (24, -1), (25, 2097152), (26, -1), (27, -1), (28, -1), (29, 2048), (30, -1), (31, -1), (32, 131072), (33, -1), (34, -1), (35, -1), (36, -1), (37, 2097152), (38, 16777216), (39, 2048), (40, -1), (41, 512), (42, 65536), (43, 65536), (44, -1), (45, -1), (46, -1), (47, 8388608), (48, 2097152), (49, 16777216), (50, -1), (51, -1), (52, -1)]

Covered at level 10 : set()

After reduction : 
 pending  : [25, 37, 0, 16, 19, 22, 20, 15, 21, 8, 9, 29, 32, 38, 39, 42, 43, 47, 48, 49, 14, 23, 41]
 solution : [6, 2, 24]


Solution : [6, 2, 24] has cost 16.


Decide in level 10 among pending : [25, 37, 0, 16, 19, 22, 20, 15, 21, 8, 9, 29, 32, 38, 39, 42, 43, 47, 48, 49, 14, 23, 41]

Coverage : [(0, 524288), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, 16777216), (9, 131072), (10, -1), (11, -1), (12, -1), (13, -1), (14, 33554432), (15, 16777216), (16, 786432), (17, -1), (18, -1), (19, 262144), (20, 4194304), (21, 8388608), (22, 131072), (23, 16777216), (24, -1), (25, 2097152), (26, -1), (27, -1), (28, -1), (29, 2048), (30, -1), (31, -1), (32, 131072), (33, -1), (34, -1), (35, -1), (36, -1), (37, 2097152), (38, 16777216), (39, 2048), (40, -1), (41, 512), (42, 65536), (43, 65536), (44, -1), (45, -1), (46, -1), (47, 8388608), (48, 2097152), (49, 16777216), (50, -1), (51, -1), (52, -1)]

Decide 14 with phase True at level 10

After decision at level 10
 pending : [25, 37, 0, 16, 19, 22, 20, 15, 21, 8, 9, 29, 32, 38, 39, 42, 43, 47, 48, 49, 23, 41]
 solution : [6, 2, 24, 14]


New level: 11
 pending : [25, 37, 0, 16, 19, 22, 20, 15, 21, 8, 9, 29, 32, 38, 39, 42, 43, 47, 48, 49, 23, 41]
 solution : [6, 2, 24, 14]


Before reduction : 
 pending  : [25, 37, 0, 16, 19, 22, 20, 15, 21, 8, 9, 29, 32, 38, 39, 42, 43, 47, 48, 49, 23, 41]
 solution : [6, 2, 24, 14]

Essensial at level 11 : set()

Before removed
 coverage : [(0, 524288), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, 16777216), (9, 131072), (10, -1), (11, -1), (12, -1), (13, -1), (14, 33554432), (15, 16777216), (16, 786432), (17, -1), (18, -1), (19, 262144), (20, 4194304), (21, 8388608), (22, 131072), (23, 16777216), (24, -1), (25, 2097152), (26, -1), (27, -1), (28, -1), (29, 2048), (30, -1), (31, -1), (32, 131072), (33, -1), (34, -1), (35, -1), (36, -1), (37, 2097152), (38, 16777216), (39, 2048), (40, -1), (41, 512), (42, 65536), (43, 65536), (44, -1), (45, -1), (46, -1), (47, 8388608), (48, 2097152), (49, 16777216), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, 0), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, 16777216), (9, 32768), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, 0), (16, 0), (17, -1), (18, -1), (19, 0), (20, 32768), (21, 131072), (22, 32768), (23, 16777216), (24, -1), (25, 2048), (26, -1), (27, -1), (28, -1), (29, 1024), (30, -1), (31, -1), (32, 65536), (33, -1), (34, -1), (35, -1), (36, -1), (37, 2048), (38, 16777216), (39, 512), (40, -1), (41, 512), (42, 32768), (43, 32768), (44, -1), (45, -1), (46, -1), (47, 8388608), (48, 2097152), (49, 16777216), (50, -1), (51, -1), (52, -1)]

Covered at level 11 : {0, 16, 19, 15}

After reduction : 
 pending  : [25, 37, 22, 20, 21, 8, 9, 29, 32, 38, 39, 42, 43, 47, 48, 49, 23, 41]
 solution : [6, 2, 24, 14]


Before reduction : 
 pending  : [25, 37, 22, 20, 21, 8, 9, 29, 32, 38, 39, 42, 43, 47, 48, 49, 23, 41]
 solution : [6, 2, 24, 14]

Essensial at level 11 : set()

Before removed
 coverage : [(0, 0), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, 16777216), (9, 32768), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, 0), (16, 0), (17, -1), (18, -1), (19, 0), (20, 32768), (21, 131072), (22, 32768), (23, 16777216), (24, -1), (25, 2048), (26, -1), (27, -1), (28, -1), (29, 1024), (30, -1), (31, -1), (32, 65536), (33, -1), (34, -1), (35, -1), (36, -1), (37, 2048), (38, 16777216), (39, 512), (40, -1), (41, 512), (42, 32768), (43, 32768), (44, -1), (45, -1), (46, -1), (47, 8388608), (48, 2097152), (49, 16777216), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, 16777216), (9, 32768), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, 32768), (21, 131072), (22, 32768), (23, 16777216), (24, -1), (25, 2048), (26, -1), (27, -1), (28, -1), (29, 1024), (30, -1), (31, -1), (32, 65536), (33, -1), (34, -1), (35, -1), (36, -1), (37, 2048), (38, 16777216), (39, 512), (40, -1), (41, 512), (42, 32768), (43, 32768), (44, -1), (45, -1), (46, -1), (47, 8388608), (48, 2097152), (49, 16777216), (50, -1), (51, -1), (52, -1)]

Covered at level 11 : set()

After reduction : 
 pending  : [25, 37, 22, 20, 21, 8, 9, 29, 32, 38, 39, 42, 43, 47, 48, 49, 23, 41]
 solution : [6, 2, 24, 14]


Solution : [6, 2, 24, 14] has cost 25.


Before backtrack at level 11
 pending : [25, 37, 22, 20, 21, 8, 9, 29, 32, 38, 39, 42, 43, 47, 48, 49, 23, 41]
 solution : [6, 2, 24, 14]

After backtrack at level 11
 pending : [25, 37, 22, 20, 21, 8, 9, 29, 32, 38, 39, 42, 43, 47, 48, 49, 23, 41, 0, 16, 19, 15]
 solution : [6, 2, 24, 14]


Invert decision for 14 at level 10


New level: 11
 pending : [25, 37, 22, 20, 21, 8, 9, 29, 32, 38, 39, 42, 43, 47, 48, 49, 23, 41, 0, 16, 19, 15]
 solution : [6, 2, 24]


Before reduction : 
 pending  : [25, 37, 22, 20, 21, 8, 9, 29, 32, 38, 39, 42, 43, 47, 48, 49, 23, 41, 0, 16, 19, 15]
 solution : [6, 2, 24]

Essensial at level 11 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, 16777216), (9, 32768), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, 32768), (21, 131072), (22, 32768), (23, 16777216), (24, -1), (25, 2048), (26, -1), (27, -1), (28, -1), (29, 1024), (30, -1), (31, -1), (32, 65536), (33, -1), (34, -1), (35, -1), (36, -1), (37, 2048), (38, 16777216), (39, 512), (40, -1), (41, 512), (42, 32768), (43, 32768), (44, -1), (45, -1), (46, -1), (47, 8388608), (48, 2097152), (49, 16777216), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, 524288), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, 16777216), (9, 131072), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, 16777216), (16, 786432), (17, -1), (18, -1), (19, 262144), (20, 4194304), (21, 8388608), (22, 131072), (23, 16777216), (24, -1), (25, 2097152), (26, -1), (27, -1), (28, -1), (29, 2048), (30, -1), (31, -1), (32, 131072), (33, -1), (34, -1), (35, -1), (36, -1), (37, 2097152), (38, 16777216), (39, 2048), (40, -1), (41, 512), (42, 65536), (43, 65536), (44, -1), (45, -1), (46, -1), (47, 8388608), (48, 2097152), (49, 16777216), (50, -1), (51, -1), (52, -1)]

Covered at level 11 : set()

After reduction : 
 pending  : [25, 37, 22, 20, 21, 8, 9, 29, 32, 38, 39, 42, 43, 47, 48, 49, 23, 41, 0, 16, 19, 15]
 solution : [6, 2, 24]


Solution : [6, 2, 24] has cost 16.


Decide in level 11 among pending : [25, 37, 22, 20, 21, 8, 9, 29, 32, 38, 39, 42, 43, 47, 48, 49, 23, 41, 0, 16, 19, 15]

Coverage : [(0, 524288), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, 16777216), (9, 131072), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, 16777216), (16, 786432), (17, -1), (18, -1), (19, 262144), (20, 4194304), (21, 8388608), (22, 131072), (23, 16777216), (24, -1), (25, 2097152), (26, -1), (27, -1), (28, -1), (29, 2048), (30, -1), (31, -1), (32, 131072), (33, -1), (34, -1), (35, -1), (36, -1), (37, 2097152), (38, 16777216), (39, 2048), (40, -1), (41, 512), (42, 65536), (43, 65536), (44, -1), (45, -1), (46, -1), (47, 8388608), (48, 2097152), (49, 16777216), (50, -1), (51, -1), (52, -1)]

Decide 8 with phase True at level 11

After decision at level 11
 pending : [25, 37, 22, 20, 21, 9, 29, 32, 38, 39, 42, 43, 47, 48, 49, 23, 41, 0, 16, 19, 15]
 solution : [6, 2, 24, 8]


New level: 12
 pending : [25, 37, 22, 20, 21, 9, 29, 32, 38, 39, 42, 43, 47, 48, 49, 23, 41, 0, 16, 19, 15]
 solution : [6, 2, 24, 8]


Before reduction : 
 pending  : [25, 37, 22, 20, 21, 9, 29, 32, 38, 39, 42, 43, 47, 48, 49, 23, 41, 0, 16, 19, 15]
 solution : [6, 2, 24, 8]

Essensial at level 12 : set()

Before removed
 coverage : [(0, 524288), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, 16777216), (9, 131072), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, 16777216), (16, 786432), (17, -1), (18, -1), (19, 262144), (20, 4194304), (21, 8388608), (22, 131072), (23, 16777216), (24, -1), (25, 2097152), (26, -1), (27, -1), (28, -1), (29, 2048), (30, -1), (31, -1), (32, 131072), (33, -1), (34, -1), (35, -1), (36, -1), (37, 2097152), (38, 16777216), (39, 2048), (40, -1), (41, 512), (42, 65536), (43, 65536), (44, -1), (45, -1), (46, -1), (47, 8388608), (48, 2097152), (49, 16777216), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, 262144), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, 0), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, 8388608), (16, 262144), (17, -1), (18, -1), (19, 131072), (20, 4194304), (21, 8388608), (22, 131072), (23, 0), (24, -1), (25, 2097152), (26, -1), (27, -1), (28, -1), (29, 0), (30, -1), (31, -1), (32, 0), (33, -1), (34, -1), (35, -1), (36, -1), (37, 2097152), (38, 0), (39, 0), (40, -1), (41, 512), (42, 0), (43, 0), (44, -1), (45, -1), (46, -1), (47, 0), (48, 0), (49, 0), (50, -1), (51, -1), (52, -1)]

Covered at level 12 : {32, 38, 39, 9, 42, 43, 47, 48, 49, 23, 29}

After reduction : 
 pending  : [25, 37, 22, 20, 21, 41, 0, 16, 19, 15]
 solution : [6, 2, 24, 8]


Before reduction : 
 pending  : [25, 37, 22, 20, 21, 41, 0, 16, 19, 15]
 solution : [6, 2, 24, 8]

Essensial at level 12 : set()

Before removed
 coverage : [(0, 262144), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, 0), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, 8388608), (16, 262144), (17, -1), (18, -1), (19, 131072), (20, 4194304), (21, 8388608), (22, 131072), (23, 0), (24, -1), (25, 2097152), (26, -1), (27, -1), (28, -1), (29, 0), (30, -1), (31, -1), (32, 0), (33, -1), (34, -1), (35, -1), (36, -1), (37, 2097152), (38, 0), (39, 0), (40, -1), (41, 512), (42, 0), (43, 0), (44, -1), (45, -1), (46, -1), (47, 0), (48, 0), (49, 0), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, 262144), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, 8388608), (16, 262144), (17, -1), (18, -1), (19, 131072), (20, 4194304), (21, 8388608), (22, 131072), (23, -1), (24, -1), (25, 2097152), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, 2097152), (38, -1), (39, -1), (40, -1), (41, 512), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 12 : set()

After reduction : 
 pending  : [25, 37, 22, 20, 21, 41, 0, 16, 19, 15]
 solution : [6, 2, 24, 8]


Solution : [6, 2, 24, 8] has cost 20.


Before backtrack at level 12
 pending : [25, 37, 22, 20, 21, 41, 0, 16, 19, 15]
 solution : [6, 2, 24, 8]

After backtrack at level 12
 pending : [25, 37, 22, 20, 21, 41, 0, 16, 19, 15, 9, 29, 32, 38, 39, 42, 43, 47, 48, 49, 23]
 solution : [6, 2, 24, 8]


Invert decision for 8 at level 11


New level: 12
 pending : [25, 37, 22, 20, 21, 41, 0, 16, 19, 15, 9, 29, 32, 38, 39, 42, 43, 47, 48, 49, 23]
 solution : [6, 2, 24]


Before reduction : 
 pending  : [25, 37, 22, 20, 21, 41, 0, 16, 19, 15, 9, 29, 32, 38, 39, 42, 43, 47, 48, 49, 23]
 solution : [6, 2, 24]

Essensial at level 12 : {23}

Before removed
 coverage : [(0, 262144), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, 8388608), (16, 262144), (17, -1), (18, -1), (19, 131072), (20, 4194304), (21, 8388608), (22, 131072), (23, -1), (24, -1), (25, 2097152), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, 2097152), (38, -1), (39, -1), (40, -1), (41, 512), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, 262144), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, 0), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, 8388608), (16, 262144), (17, -1), (18, -1), (19, 131072), (20, 4194304), (21, 8388608), (22, 131072), (23, -1), (24, -1), (25, 2097152), (26, -1), (27, -1), (28, -1), (29, 0), (30, -1), (31, -1), (32, 0), (33, -1), (34, -1), (35, -1), (36, -1), (37, 2097152), (38, 0), (39, 0), (40, -1), (41, 512), (42, 0), (43, 0), (44, -1), (45, -1), (46, -1), (47, 0), (48, 0), (49, 0), (50, -1), (51, -1), (52, -1)]

Covered at level 12 : {32, 38, 39, 9, 42, 43, 47, 48, 49, 29}

After reduction : 
 pending  : [25, 37, 22, 20, 21, 41, 0, 16, 19, 15]
 solution : [6, 2, 24, 23]


Before reduction : 
 pending  : [25, 37, 22, 20, 21, 41, 0, 16, 19, 15]
 solution : [6, 2, 24, 23]

Essensial at level 12 : set()

Before removed
 coverage : [(0, 262144), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, 0), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, 8388608), (16, 262144), (17, -1), (18, -1), (19, 131072), (20, 4194304), (21, 8388608), (22, 131072), (23, -1), (24, -1), (25, 2097152), (26, -1), (27, -1), (28, -1), (29, 0), (30, -1), (31, -1), (32, 0), (33, -1), (34, -1), (35, -1), (36, -1), (37, 2097152), (38, 0), (39, 0), (40, -1), (41, 512), (42, 0), (43, 0), (44, -1), (45, -1), (46, -1), (47, 0), (48, 0), (49, 0), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, 262144), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, 8388608), (16, 262144), (17, -1), (18, -1), (19, 131072), (20, 4194304), (21, 8388608), (22, 131072), (23, -1), (24, -1), (25, 2097152), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, 2097152), (38, -1), (39, -1), (40, -1), (41, 512), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 12 : set()

After reduction : 
 pending  : [25, 37, 22, 20, 21, 41, 0, 16, 19, 15]
 solution : [6, 2, 24, 23]


Solution : [6, 2, 24, 23] has cost 23.


Before backtrack at level 12
 pending : [25, 37, 22, 20, 21, 41, 0, 16, 19, 15]
 solution : [6, 2, 24, 23]

After backtrack at level 12
 pending : [25, 37, 22, 20, 21, 41, 0, 16, 19, 15, 23, 9, 29, 32, 38, 39, 42, 43, 47, 48, 49]
 solution : [6, 2, 24]


Before backtrack at level 11
 pending : [25, 37, 22, 20, 21, 41, 0, 16, 19, 15, 23, 9, 29, 32, 38, 39, 42, 43, 47, 48, 49]
 solution : [6, 2, 24]

After backtrack at level 11
 pending : [25, 37, 22, 20, 21, 41, 0, 16, 19, 15, 23, 9, 29, 32, 38, 39, 42, 43, 47, 48, 49, 8]
 solution : [6, 2, 24]


Before backtrack at level 10
 pending : [25, 37, 22, 20, 21, 41, 0, 16, 19, 15, 23, 9, 29, 32, 38, 39, 42, 43, 47, 48, 49, 8]
 solution : [6, 2, 24]

After backtrack at level 10
 pending : [25, 37, 22, 20, 21, 41, 0, 16, 19, 15, 23, 9, 29, 32, 38, 39, 42, 43, 47, 48, 49, 8, 14]
 solution : [6, 2, 24]


Before backtrack at level 9
 pending : [25, 37, 22, 20, 21, 41, 0, 16, 19, 15, 23, 9, 29, 32, 38, 39, 42, 43, 47, 48, 49, 8, 14]
 solution : [6, 2, 24]

After backtrack at level 9
 pending : [25, 37, 22, 20, 21, 41, 0, 16, 19, 15, 23, 9, 29, 32, 38, 39, 42, 43, 47, 48, 49, 8, 14, 30, 33, 40]
 solution : [6, 2, 24]


Invert decision for 24 at level 8


New level: 9
 pending : [25, 37, 22, 20, 21, 41, 0, 16, 19, 15, 23, 9, 29, 32, 38, 39, 42, 43, 47, 48, 49, 8, 14, 30, 33, 40]
 solution : [6, 2]


Before reduction : 
 pending  : [25, 37, 22, 20, 21, 41, 0, 16, 19, 15, 23, 9, 29, 32, 38, 39, 42, 43, 47, 48, 49, 8, 14, 30, 33, 40]
 solution : [6, 2]

Essensial at level 9 : set()

Before removed
 coverage : [(0, 262144), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, 8388608), (16, 262144), (17, -1), (18, -1), (19, 131072), (20, 4194304), (21, 8388608), (22, 131072), (23, -1), (24, -1), (25, 2097152), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, 2097152), (38, -1), (39, -1), (40, -1), (41, 512), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, 524288), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, 67108864), (9, 524288), (10, -1), (11, -1), (12, -1), (13, -1), (14, 33554432), (15, 16777216), (16, 786432), (17, -1), (18, -1), (19, 262144), (20, 4194304), (21, 8388608), (22, 131072), (23, 67108864), (24, -1), (25, 2097152), (26, -1), (27, -1), (28, -1), (29, 8192), (30, 8192), (31, -1), (32, 524288), (33, 1048576), (34, -1), (35, -1), (36, -1), (37, 2097152), (38, 67108864), (39, 8192), (40, 67108864), (41, 134217728), (42, 262144), (43, 262144), (44, -1), (45, -1), (46, -1), (47, 33554432), (48, 8388608), (49, 33554432), (50, -1), (51, -1), (52, -1)]

Covered at level 9 : set()

After reduction : 
 pending  : [25, 37, 22, 20, 21, 41, 0, 16, 19, 15, 23, 9, 29, 32, 38, 39, 42, 43, 47, 48, 49, 8, 14, 30, 33, 40]
 solution : [6, 2]


Solution : [6, 2] has cost 9.


Decide in level 9 among pending : [25, 37, 22, 20, 21, 41, 0, 16, 19, 15, 23, 9, 29, 32, 38, 39, 42, 43, 47, 48, 49, 8, 14, 30, 33, 40]

Coverage : [(0, 524288), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, 67108864), (9, 524288), (10, -1), (11, -1), (12, -1), (13, -1), (14, 33554432), (15, 16777216), (16, 786432), (17, -1), (18, -1), (19, 262144), (20, 4194304), (21, 8388608), (22, 131072), (23, 67108864), (24, -1), (25, 2097152), (26, -1), (27, -1), (28, -1), (29, 8192), (30, 8192), (31, -1), (32, 524288), (33, 1048576), (34, -1), (35, -1), (36, -1), (37, 2097152), (38, 67108864), (39, 8192), (40, 67108864), (41, 134217728), (42, 262144), (43, 262144), (44, -1), (45, -1), (46, -1), (47, 33554432), (48, 8388608), (49, 33554432), (50, -1), (51, -1), (52, -1)]

Decide 41 with phase True at level 9

After decision at level 9
 pending : [25, 37, 22, 20, 21, 0, 16, 19, 15, 23, 9, 29, 32, 38, 39, 42, 43, 47, 48, 49, 8, 14, 30, 33, 40]
 solution : [6, 2, 41]


New level: 10
 pending : [25, 37, 22, 20, 21, 0, 16, 19, 15, 23, 9, 29, 32, 38, 39, 42, 43, 47, 48, 49, 8, 14, 30, 33, 40]
 solution : [6, 2, 41]


Before reduction : 
 pending  : [25, 37, 22, 20, 21, 0, 16, 19, 15, 23, 9, 29, 32, 38, 39, 42, 43, 47, 48, 49, 8, 14, 30, 33, 40]
 solution : [6, 2, 41]

Essensial at level 10 : set()

Before removed
 coverage : [(0, 524288), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, 67108864), (9, 524288), (10, -1), (11, -1), (12, -1), (13, -1), (14, 33554432), (15, 16777216), (16, 786432), (17, -1), (18, -1), (19, 262144), (20, 4194304), (21, 8388608), (22, 131072), (23, 67108864), (24, -1), (25, 2097152), (26, -1), (27, -1), (28, -1), (29, 8192), (30, 8192), (31, -1), (32, 524288), (33, 1048576), (34, -1), (35, -1), (36, -1), (37, 2097152), (38, 67108864), (39, 8192), (40, 67108864), (41, 134217728), (42, 262144), (43, 262144), (44, -1), (45, -1), (46, -1), (47, 33554432), (48, 8388608), (49, 33554432), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, 524288), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, 67108864), (9, 524288), (10, -1), (11, -1), (12, -1), (13, -1), (14, 33554432), (15, 16777216), (16, 786432), (17, -1), (18, -1), (19, 262144), (20, 4194304), (21, 8388608), (22, 131072), (23, 67108864), (24, -1), (25, 2097152), (26, -1), (27, -1), (28, -1), (29, 8192), (30, 4096), (31, -1), (32, 524288), (33, 524288), (34, -1), (35, -1), (36, -1), (37, 2097152), (38, 67108864), (39, 8192), (40, 33554432), (41, -1), (42, 262144), (43, 262144), (44, -1), (45, -1), (46, -1), (47, 33554432), (48, 8388608), (49, 33554432), (50, -1), (51, -1), (52, -1)]

Covered at level 10 : set()

After reduction : 
 pending  : [25, 37, 22, 20, 21, 0, 16, 19, 15, 23, 9, 29, 32, 38, 39, 42, 43, 47, 48, 49, 8, 14, 30, 33, 40]
 solution : [6, 2, 41]


Solution : [6, 2, 41] has cost 23.


Before backtrack at level 10
 pending : [25, 37, 22, 20, 21, 0, 16, 19, 15, 23, 9, 29, 32, 38, 39, 42, 43, 47, 48, 49, 8, 14, 30, 33, 40]
 solution : [6, 2, 41]

After backtrack at level 10
 pending : [25, 37, 22, 20, 21, 0, 16, 19, 15, 23, 9, 29, 32, 38, 39, 42, 43, 47, 48, 49, 8, 14, 30, 33, 40]
 solution : [6, 2, 41]


Invert decision for 41 at level 9


New level: 10
 pending : [25, 37, 22, 20, 21, 0, 16, 19, 15, 23, 9, 29, 32, 38, 39, 42, 43, 47, 48, 49, 8, 14, 30, 33, 40]
 solution : [6, 2]


Before reduction : 
 pending  : [25, 37, 22, 20, 21, 0, 16, 19, 15, 23, 9, 29, 32, 38, 39, 42, 43, 47, 48, 49, 8, 14, 30, 33, 40]
 solution : [6, 2]

Essensial at level 10 : set()

Before removed
 coverage : [(0, 524288), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, 67108864), (9, 524288), (10, -1), (11, -1), (12, -1), (13, -1), (14, 33554432), (15, 16777216), (16, 786432), (17, -1), (18, -1), (19, 262144), (20, 4194304), (21, 8388608), (22, 131072), (23, 67108864), (24, -1), (25, 2097152), (26, -1), (27, -1), (28, -1), (29, 8192), (30, 4096), (31, -1), (32, 524288), (33, 524288), (34, -1), (35, -1), (36, -1), (37, 2097152), (38, 67108864), (39, 8192), (40, 33554432), (41, -1), (42, 262144), (43, 262144), (44, -1), (45, -1), (46, -1), (47, 33554432), (48, 8388608), (49, 33554432), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, 524288), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, 67108864), (9, 524288), (10, -1), (11, -1), (12, -1), (13, -1), (14, 33554432), (15, 16777216), (16, 786432), (17, -1), (18, -1), (19, 262144), (20, 4194304), (21, 8388608), (22, 131072), (23, 67108864), (24, -1), (25, 2097152), (26, -1), (27, -1), (28, -1), (29, 8192), (30, 8192), (31, -1), (32, 524288), (33, 1048576), (34, -1), (35, -1), (36, -1), (37, 2097152), (38, 67108864), (39, 8192), (40, 67108864), (41, -1), (42, 262144), (43, 262144), (44, -1), (45, -1), (46, -1), (47, 33554432), (48, 8388608), (49, 33554432), (50, -1), (51, -1), (52, -1)]

Covered at level 10 : set()

After reduction : 
 pending  : [25, 37, 22, 20, 21, 0, 16, 19, 15, 23, 9, 29, 32, 38, 39, 42, 43, 47, 48, 49, 8, 14, 30, 33, 40]
 solution : [6, 2]


Solution : [6, 2] has cost 9.


Decide in level 10 among pending : [25, 37, 22, 20, 21, 0, 16, 19, 15, 23, 9, 29, 32, 38, 39, 42, 43, 47, 48, 49, 8, 14, 30, 33, 40]

Coverage : [(0, 524288), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, 67108864), (9, 524288), (10, -1), (11, -1), (12, -1), (13, -1), (14, 33554432), (15, 16777216), (16, 786432), (17, -1), (18, -1), (19, 262144), (20, 4194304), (21, 8388608), (22, 131072), (23, 67108864), (24, -1), (25, 2097152), (26, -1), (27, -1), (28, -1), (29, 8192), (30, 8192), (31, -1), (32, 524288), (33, 1048576), (34, -1), (35, -1), (36, -1), (37, 2097152), (38, 67108864), (39, 8192), (40, 67108864), (41, -1), (42, 262144), (43, 262144), (44, -1), (45, -1), (46, -1), (47, 33554432), (48, 8388608), (49, 33554432), (50, -1), (51, -1), (52, -1)]

Decide 23 with phase True at level 10

After decision at level 10
 pending : [25, 37, 22, 20, 21, 0, 16, 19, 15, 9, 29, 32, 38, 39, 42, 43, 47, 48, 49, 8, 14, 30, 33, 40]
 solution : [6, 2, 23]


New level: 11
 pending : [25, 37, 22, 20, 21, 0, 16, 19, 15, 9, 29, 32, 38, 39, 42, 43, 47, 48, 49, 8, 14, 30, 33, 40]
 solution : [6, 2, 23]


Before reduction : 
 pending  : [25, 37, 22, 20, 21, 0, 16, 19, 15, 9, 29, 32, 38, 39, 42, 43, 47, 48, 49, 8, 14, 30, 33, 40]
 solution : [6, 2, 23]

Essensial at level 11 : set()

Before removed
 coverage : [(0, 524288), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, 67108864), (9, 524288), (10, -1), (11, -1), (12, -1), (13, -1), (14, 33554432), (15, 16777216), (16, 786432), (17, -1), (18, -1), (19, 262144), (20, 4194304), (21, 8388608), (22, 131072), (23, 67108864), (24, -1), (25, 2097152), (26, -1), (27, -1), (28, -1), (29, 8192), (30, 8192), (31, -1), (32, 524288), (33, 1048576), (34, -1), (35, -1), (36, -1), (37, 2097152), (38, 67108864), (39, 8192), (40, 67108864), (41, -1), (42, 262144), (43, 262144), (44, -1), (45, -1), (46, -1), (47, 33554432), (48, 8388608), (49, 33554432), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, 262144), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, 0), (9, 0), (10, -1), (11, -1), (12, -1), (13, -1), (14, 16777216), (15, 8388608), (16, 262144), (17, -1), (18, -1), (19, 131072), (20, 4194304), (21, 8388608), (22, 131072), (23, -1), (24, -1), (25, 2097152), (26, -1), (27, -1), (28, -1), (29, 0), (30, 0), (31, -1), (32, 0), (33, 0), (34, -1), (35, -1), (36, -1), (37, 2097152), (38, 0), (39, 0), (40, 65536), (41, -1), (42, 0), (43, 0), (44, -1), (45, -1), (46, -1), (47, 0), (48, 0), (49, 0), (50, -1), (51, -1), (52, -1)]

Covered at level 11 : {32, 33, 38, 39, 8, 9, 42, 43, 47, 48, 49, 29, 30}

After reduction : 
 pending  : [25, 37, 22, 20, 21, 0, 16, 19, 15, 14, 40]
 solution : [6, 2, 23]


Before reduction : 
 pending  : [25, 37, 22, 20, 21, 0, 16, 19, 15, 14, 40]
 solution : [6, 2, 23]

Essensial at level 11 : set()

Before removed
 coverage : [(0, 262144), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, 0), (9, 0), (10, -1), (11, -1), (12, -1), (13, -1), (14, 16777216), (15, 8388608), (16, 262144), (17, -1), (18, -1), (19, 131072), (20, 4194304), (21, 8388608), (22, 131072), (23, -1), (24, -1), (25, 2097152), (26, -1), (27, -1), (28, -1), (29, 0), (30, 0), (31, -1), (32, 0), (33, 0), (34, -1), (35, -1), (36, -1), (37, 2097152), (38, 0), (39, 0), (40, 65536), (41, -1), (42, 0), (43, 0), (44, -1), (45, -1), (46, -1), (47, 0), (48, 0), (49, 0), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, 262144), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 16777216), (15, 8388608), (16, 262144), (17, -1), (18, -1), (19, 131072), (20, 4194304), (21, 8388608), (22, 131072), (23, -1), (24, -1), (25, 2097152), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, 2097152), (38, -1), (39, -1), (40, 65536), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 11 : set()

After reduction : 
 pending  : [25, 37, 22, 20, 21, 0, 16, 19, 15, 14, 40]
 solution : [6, 2, 23]


Solution : [6, 2, 23] has cost 16.


Decide in level 11 among pending : [25, 37, 22, 20, 21, 0, 16, 19, 15, 14, 40]

Coverage : [(0, 262144), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 16777216), (15, 8388608), (16, 262144), (17, -1), (18, -1), (19, 131072), (20, 4194304), (21, 8388608), (22, 131072), (23, -1), (24, -1), (25, 2097152), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, 2097152), (38, -1), (39, -1), (40, 65536), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Decide 14 with phase True at level 11

After decision at level 11
 pending : [25, 37, 22, 20, 21, 0, 16, 19, 15, 40]
 solution : [6, 2, 23, 14]


New level: 12
 pending : [25, 37, 22, 20, 21, 0, 16, 19, 15, 40]
 solution : [6, 2, 23, 14]


Before reduction : 
 pending  : [25, 37, 22, 20, 21, 0, 16, 19, 15, 40]
 solution : [6, 2, 23, 14]

Essensial at level 12 : set()

Before removed
 coverage : [(0, 262144), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 16777216), (15, 8388608), (16, 262144), (17, -1), (18, -1), (19, 131072), (20, 4194304), (21, 8388608), (22, 131072), (23, -1), (24, -1), (25, 2097152), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, 2097152), (38, -1), (39, -1), (40, 65536), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, 0), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, 0), (16, 0), (17, -1), (18, -1), (19, 0), (20, 32768), (21, 131072), (22, 32768), (23, -1), (24, -1), (25, 2048), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, 2048), (38, -1), (39, -1), (40, 1024), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 12 : {0, 16, 19, 15}

After reduction : 
 pending  : [25, 37, 22, 20, 21, 40]
 solution : [6, 2, 23, 14]


Before reduction : 
 pending  : [25, 37, 22, 20, 21, 40]
 solution : [6, 2, 23, 14]

Essensial at level 12 : set()

Before removed
 coverage : [(0, 0), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, 0), (16, 0), (17, -1), (18, -1), (19, 0), (20, 32768), (21, 131072), (22, 32768), (23, -1), (24, -1), (25, 2048), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, 2048), (38, -1), (39, -1), (40, 1024), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, 32768), (21, 131072), (22, 32768), (23, -1), (24, -1), (25, 2048), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, 2048), (38, -1), (39, -1), (40, 1024), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 12 : set()

After reduction : 
 pending  : [25, 37, 22, 20, 21, 40]
 solution : [6, 2, 23, 14]


Solution : [6, 2, 23, 14] has cost 25.


Before backtrack at level 12
 pending : [25, 37, 22, 20, 21, 40]
 solution : [6, 2, 23, 14]

After backtrack at level 12
 pending : [25, 37, 22, 20, 21, 40, 0, 16, 19, 15]
 solution : [6, 2, 23, 14]


Invert decision for 14 at level 11


New level: 12
 pending : [25, 37, 22, 20, 21, 40, 0, 16, 19, 15]
 solution : [6, 2, 23]


Before reduction : 
 pending  : [25, 37, 22, 20, 21, 40, 0, 16, 19, 15]
 solution : [6, 2, 23]

Essensial at level 12 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, 32768), (21, 131072), (22, 32768), (23, -1), (24, -1), (25, 2048), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, 2048), (38, -1), (39, -1), (40, 1024), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, 262144), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, 8388608), (16, 262144), (17, -1), (18, -1), (19, 131072), (20, 4194304), (21, 8388608), (22, 131072), (23, -1), (24, -1), (25, 2097152), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, 2097152), (38, -1), (39, -1), (40, 65536), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 12 : set()

After reduction : 
 pending  : [25, 37, 22, 20, 21, 40, 0, 16, 19, 15]
 solution : [6, 2, 23]


Solution : [6, 2, 23] has cost 16.


Decide in level 12 among pending : [25, 37, 22, 20, 21, 40, 0, 16, 19, 15]

Coverage : [(0, 262144), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, 8388608), (16, 262144), (17, -1), (18, -1), (19, 131072), (20, 4194304), (21, 8388608), (22, 131072), (23, -1), (24, -1), (25, 2097152), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, 2097152), (38, -1), (39, -1), (40, 65536), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Decide 21 with phase True at level 12

After decision at level 12
 pending : [25, 37, 22, 20, 40, 0, 16, 19, 15]
 solution : [6, 2, 23, 21]


New level: 13
 pending : [25, 37, 22, 20, 40, 0, 16, 19, 15]
 solution : [6, 2, 23, 21]


Before reduction : 
 pending  : [25, 37, 22, 20, 40, 0, 16, 19, 15]
 solution : [6, 2, 23, 21]

Essensial at level 13 : set()

Before removed
 coverage : [(0, 262144), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, 8388608), (16, 262144), (17, -1), (18, -1), (19, 131072), (20, 4194304), (21, 8388608), (22, 131072), (23, -1), (24, -1), (25, 2097152), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, 2097152), (38, -1), (39, -1), (40, 65536), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, 131072), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, 2097152), (16, 131072), (17, -1), (18, -1), (19, 0), (20, 0), (21, -1), (22, 0), (23, -1), (24, -1), (25, 524288), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, 524288), (38, -1), (39, -1), (40, 1024), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 13 : {19, 20, 22}

After reduction : 
 pending  : [25, 37, 40, 0, 16, 15]
 solution : [6, 2, 23, 21]


Before reduction : 
 pending  : [25, 37, 40, 0, 16, 15]
 solution : [6, 2, 23, 21]

Essensial at level 13 : set()

Before removed
 coverage : [(0, 131072), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, 2097152), (16, 131072), (17, -1), (18, -1), (19, 0), (20, 0), (21, -1), (22, 0), (23, -1), (24, -1), (25, 524288), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, 524288), (38, -1), (39, -1), (40, 1024), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, 131072), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, 2097152), (16, 131072), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, 524288), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, 524288), (38, -1), (39, -1), (40, 1024), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 13 : set()

After reduction : 
 pending  : [25, 37, 40, 0, 16, 15]
 solution : [6, 2, 23, 21]


Solution : [6, 2, 23, 21] has cost 23.


Before backtrack at level 13
 pending : [25, 37, 40, 0, 16, 15]
 solution : [6, 2, 23, 21]

After backtrack at level 13
 pending : [25, 37, 40, 0, 16, 15, 22, 20, 19]
 solution : [6, 2, 23, 21]


Invert decision for 21 at level 12


New level: 13
 pending : [25, 37, 40, 0, 16, 15, 22, 20, 19]
 solution : [6, 2, 23]


Before reduction : 
 pending  : [25, 37, 40, 0, 16, 15, 22, 20, 19]
 solution : [6, 2, 23]

Essensial at level 13 : set()

Before removed
 coverage : [(0, 131072), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, 2097152), (16, 131072), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, 524288), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, 524288), (38, -1), (39, -1), (40, 1024), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, 262144), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, 8388608), (16, 262144), (17, -1), (18, -1), (19, 131072), (20, 4194304), (21, -1), (22, 131072), (23, -1), (24, -1), (25, 2097152), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, 2097152), (38, -1), (39, -1), (40, 65536), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 13 : set()

After reduction : 
 pending  : [25, 37, 40, 0, 16, 15, 22, 20, 19]
 solution : [6, 2, 23]


Solution : [6, 2, 23] has cost 16.


Decide in level 13 among pending : [25, 37, 40, 0, 16, 15, 22, 20, 19]

Coverage : [(0, 262144), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, 8388608), (16, 262144), (17, -1), (18, -1), (19, 131072), (20, 4194304), (21, -1), (22, 131072), (23, -1), (24, -1), (25, 2097152), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, 2097152), (38, -1), (39, -1), (40, 65536), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Decide 15 with phase True at level 13

After decision at level 13
 pending : [25, 37, 40, 0, 16, 22, 20, 19]
 solution : [6, 2, 23, 15]


New level: 14
 pending : [25, 37, 40, 0, 16, 22, 20, 19]
 solution : [6, 2, 23, 15]


Before reduction : 
 pending  : [25, 37, 40, 0, 16, 22, 20, 19]
 solution : [6, 2, 23, 15]

Essensial at level 14 : set()

Before removed
 coverage : [(0, 262144), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, 8388608), (16, 262144), (17, -1), (18, -1), (19, 131072), (20, 4194304), (21, -1), (22, 131072), (23, -1), (24, -1), (25, 2097152), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, 2097152), (38, -1), (39, -1), (40, 65536), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, 0), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, 0), (17, -1), (18, -1), (19, 0), (20, 32768), (21, -1), (22, 32768), (23, -1), (24, -1), (25, 2048), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, 2048), (38, -1), (39, -1), (40, 1024), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 14 : {0, 16, 19}

After reduction : 
 pending  : [25, 37, 40, 22, 20]
 solution : [6, 2, 23, 15]


Before reduction : 
 pending  : [25, 37, 40, 22, 20]
 solution : [6, 2, 23, 15]

Essensial at level 14 : set()

Before removed
 coverage : [(0, 0), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, 0), (17, -1), (18, -1), (19, 0), (20, 32768), (21, -1), (22, 32768), (23, -1), (24, -1), (25, 2048), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, 2048), (38, -1), (39, -1), (40, 1024), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, 32768), (21, -1), (22, 32768), (23, -1), (24, -1), (25, 2048), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, 2048), (38, -1), (39, -1), (40, 1024), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 14 : set()

After reduction : 
 pending  : [25, 37, 40, 22, 20]
 solution : [6, 2, 23, 15]


Solution : [6, 2, 23, 15] has cost 25.


Before backtrack at level 14
 pending : [25, 37, 40, 22, 20]
 solution : [6, 2, 23, 15]

After backtrack at level 14
 pending : [25, 37, 40, 22, 20, 0, 16, 19]
 solution : [6, 2, 23, 15]


Invert decision for 15 at level 13


New level: 14
 pending : [25, 37, 40, 22, 20, 0, 16, 19]
 solution : [6, 2, 23]


Before reduction : 
 pending  : [25, 37, 40, 22, 20, 0, 16, 19]
 solution : [6, 2, 23]

Essensial at level 14 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, 32768), (21, -1), (22, 32768), (23, -1), (24, -1), (25, 2048), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, 2048), (38, -1), (39, -1), (40, 1024), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, 262144), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, 262144), (17, -1), (18, -1), (19, 131072), (20, 4194304), (21, -1), (22, 131072), (23, -1), (24, -1), (25, 2097152), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, 2097152), (38, -1), (39, -1), (40, 65536), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 14 : set()

After reduction : 
 pending  : [25, 37, 40, 22, 20, 0, 16, 19]
 solution : [6, 2, 23]


Solution : [6, 2, 23] has cost 16.


Decide in level 14 among pending : [25, 37, 40, 22, 20, 0, 16, 19]

Coverage : [(0, 262144), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, 262144), (17, -1), (18, -1), (19, 131072), (20, 4194304), (21, -1), (22, 131072), (23, -1), (24, -1), (25, 2097152), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, 2097152), (38, -1), (39, -1), (40, 65536), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Decide 20 with phase True at level 14

After decision at level 14
 pending : [25, 37, 40, 22, 0, 16, 19]
 solution : [6, 2, 23, 20]


New level: 15
 pending : [25, 37, 40, 22, 0, 16, 19]
 solution : [6, 2, 23, 20]


Before reduction : 
 pending  : [25, 37, 40, 22, 0, 16, 19]
 solution : [6, 2, 23, 20]

Essensial at level 15 : set()

Before removed
 coverage : [(0, 262144), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, 262144), (17, -1), (18, -1), (19, 131072), (20, 4194304), (21, -1), (22, 131072), (23, -1), (24, -1), (25, 2097152), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, 2097152), (38, -1), (39, -1), (40, 65536), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, 131072), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, 131072), (17, -1), (18, -1), (19, 0), (20, -1), (21, -1), (22, 0), (23, -1), (24, -1), (25, 524288), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, 524288), (38, -1), (39, -1), (40, 1024), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 15 : {19, 22}

After reduction : 
 pending  : [25, 37, 40, 0, 16]
 solution : [6, 2, 23, 20]


Before reduction : 
 pending  : [25, 37, 40, 0, 16]
 solution : [6, 2, 23, 20]

Essensial at level 15 : set()

Before removed
 coverage : [(0, 131072), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, 131072), (17, -1), (18, -1), (19, 0), (20, -1), (21, -1), (22, 0), (23, -1), (24, -1), (25, 524288), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, 524288), (38, -1), (39, -1), (40, 1024), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, 131072), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, 131072), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, 524288), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, 524288), (38, -1), (39, -1), (40, 1024), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 15 : set()

After reduction : 
 pending  : [25, 37, 40, 0, 16]
 solution : [6, 2, 23, 20]


Solution : [6, 2, 23, 20] has cost 23.


Before backtrack at level 15
 pending : [25, 37, 40, 0, 16]
 solution : [6, 2, 23, 20]

After backtrack at level 15
 pending : [25, 37, 40, 0, 16, 22, 19]
 solution : [6, 2, 23, 20]


Invert decision for 20 at level 14


New level: 15
 pending : [25, 37, 40, 0, 16, 22, 19]
 solution : [6, 2, 23]


Before reduction : 
 pending  : [25, 37, 40, 0, 16, 22, 19]
 solution : [6, 2, 23]

Essensial at level 15 : {22}

Before removed
 coverage : [(0, 131072), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, 131072), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, 524288), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, 524288), (38, -1), (39, -1), (40, 1024), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, 262144), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, 262144), (17, -1), (18, -1), (19, 65536), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, 2097152), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, 2097152), (38, -1), (39, -1), (40, 65536), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 15 : set()

After reduction : 
 pending  : [25, 37, 40, 0, 16, 19]
 solution : [6, 2, 23, 22]


Before reduction : 
 pending  : [25, 37, 40, 0, 16, 19]
 solution : [6, 2, 23, 22]

Essensial at level 15 : set()

Before removed
 coverage : [(0, 262144), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, 262144), (17, -1), (18, -1), (19, 65536), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, 2097152), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, 2097152), (38, -1), (39, -1), (40, 65536), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, 262144), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, 262144), (17, -1), (18, -1), (19, 65536), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, 2097152), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, 2097152), (38, -1), (39, -1), (40, 65536), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 15 : set()

After reduction : 
 pending  : [25, 37, 40, 0, 16, 19]
 solution : [6, 2, 23, 22]


Solution : [6, 2, 23, 22] has cost 23.


Before backtrack at level 15
 pending : [25, 37, 40, 0, 16, 19]
 solution : [6, 2, 23, 22]

After backtrack at level 15
 pending : [25, 37, 40, 0, 16, 19, 22]
 solution : [6, 2, 23]


Before backtrack at level 14
 pending : [25, 37, 40, 0, 16, 19, 22]
 solution : [6, 2, 23]

After backtrack at level 14
 pending : [25, 37, 40, 0, 16, 19, 22, 20]
 solution : [6, 2, 23]


Before backtrack at level 13
 pending : [25, 37, 40, 0, 16, 19, 22, 20]
 solution : [6, 2, 23]

After backtrack at level 13
 pending : [25, 37, 40, 0, 16, 19, 22, 20, 15]
 solution : [6, 2, 23]


Before backtrack at level 12
 pending : [25, 37, 40, 0, 16, 19, 22, 20, 15]
 solution : [6, 2, 23]

After backtrack at level 12
 pending : [25, 37, 40, 0, 16, 19, 22, 20, 15, 21]
 solution : [6, 2, 23]


Before backtrack at level 11
 pending : [25, 37, 40, 0, 16, 19, 22, 20, 15, 21]
 solution : [6, 2, 23]

After backtrack at level 11
 pending : [25, 37, 40, 0, 16, 19, 22, 20, 15, 21, 9, 29, 32, 38, 39, 42, 43, 47, 48, 49, 8, 30, 33, 14]
 solution : [6, 2, 23]


Invert decision for 23 at level 10


New level: 11
 pending : [25, 37, 40, 0, 16, 19, 22, 20, 15, 21, 9, 29, 32, 38, 39, 42, 43, 47, 48, 49, 8, 30, 33, 14]
 solution : [6, 2]


Before reduction : 
 pending  : [25, 37, 40, 0, 16, 19, 22, 20, 15, 21, 9, 29, 32, 38, 39, 42, 43, 47, 48, 49, 8, 30, 33, 14]
 solution : [6, 2]

Essensial at level 11 : {8}

Before removed
 coverage : [(0, 262144), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, 262144), (17, -1), (18, -1), (19, 65536), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, 2097152), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, 2097152), (38, -1), (39, -1), (40, 65536), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, 262144), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, 0), (10, -1), (11, -1), (12, -1), (13, -1), (14, 16777216), (15, 8388608), (16, 262144), (17, -1), (18, -1), (19, 131072), (20, 4194304), (21, 8388608), (22, 131072), (23, -1), (24, -1), (25, 2097152), (26, -1), (27, -1), (28, -1), (29, 0), (30, 0), (31, -1), (32, 0), (33, 0), (34, -1), (35, -1), (36, -1), (37, 2097152), (38, 0), (39, 0), (40, 65536), (41, -1), (42, 0), (43, 0), (44, -1), (45, -1), (46, -1), (47, 0), (48, 0), (49, 0), (50, -1), (51, -1), (52, -1)]

Covered at level 11 : {32, 33, 38, 39, 9, 42, 43, 47, 48, 49, 29, 30}

After reduction : 
 pending  : [25, 37, 40, 0, 16, 19, 22, 20, 15, 21, 14]
 solution : [6, 2, 8]


Before reduction : 
 pending  : [25, 37, 40, 0, 16, 19, 22, 20, 15, 21, 14]
 solution : [6, 2, 8]

Essensial at level 11 : set()

Before removed
 coverage : [(0, 262144), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, 0), (10, -1), (11, -1), (12, -1), (13, -1), (14, 16777216), (15, 8388608), (16, 262144), (17, -1), (18, -1), (19, 131072), (20, 4194304), (21, 8388608), (22, 131072), (23, -1), (24, -1), (25, 2097152), (26, -1), (27, -1), (28, -1), (29, 0), (30, 0), (31, -1), (32, 0), (33, 0), (34, -1), (35, -1), (36, -1), (37, 2097152), (38, 0), (39, 0), (40, 65536), (41, -1), (42, 0), (43, 0), (44, -1), (45, -1), (46, -1), (47, 0), (48, 0), (49, 0), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, 262144), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 16777216), (15, 8388608), (16, 262144), (17, -1), (18, -1), (19, 131072), (20, 4194304), (21, 8388608), (22, 131072), (23, -1), (24, -1), (25, 2097152), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, 2097152), (38, -1), (39, -1), (40, 65536), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 11 : set()

After reduction : 
 pending  : [25, 37, 40, 0, 16, 19, 22, 20, 15, 21, 14]
 solution : [6, 2, 8]


Solution : [6, 2, 8] has cost 13.


Decide in level 11 among pending : [25, 37, 40, 0, 16, 19, 22, 20, 15, 21, 14]

Coverage : [(0, 262144), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 16777216), (15, 8388608), (16, 262144), (17, -1), (18, -1), (19, 131072), (20, 4194304), (21, 8388608), (22, 131072), (23, -1), (24, -1), (25, 2097152), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, 2097152), (38, -1), (39, -1), (40, 65536), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Decide 14 with phase True at level 11

After decision at level 11
 pending : [25, 37, 40, 0, 16, 19, 22, 20, 15, 21]
 solution : [6, 2, 8, 14]


New level: 12
 pending : [25, 37, 40, 0, 16, 19, 22, 20, 15, 21]
 solution : [6, 2, 8, 14]


Before reduction : 
 pending  : [25, 37, 40, 0, 16, 19, 22, 20, 15, 21]
 solution : [6, 2, 8, 14]

Essensial at level 12 : set()

Before removed
 coverage : [(0, 262144), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 16777216), (15, 8388608), (16, 262144), (17, -1), (18, -1), (19, 131072), (20, 4194304), (21, 8388608), (22, 131072), (23, -1), (24, -1), (25, 2097152), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, 2097152), (38, -1), (39, -1), (40, 65536), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, 0), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, 0), (16, 0), (17, -1), (18, -1), (19, 0), (20, 32768), (21, 131072), (22, 32768), (23, -1), (24, -1), (25, 2048), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, 2048), (38, -1), (39, -1), (40, 1024), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 12 : {0, 16, 19, 15}

After reduction : 
 pending  : [25, 37, 40, 22, 20, 21]
 solution : [6, 2, 8, 14]


Before reduction : 
 pending  : [25, 37, 40, 22, 20, 21]
 solution : [6, 2, 8, 14]

Essensial at level 12 : set()

Before removed
 coverage : [(0, 0), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, 0), (16, 0), (17, -1), (18, -1), (19, 0), (20, 32768), (21, 131072), (22, 32768), (23, -1), (24, -1), (25, 2048), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, 2048), (38, -1), (39, -1), (40, 1024), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, 32768), (21, 131072), (22, 32768), (23, -1), (24, -1), (25, 2048), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, 2048), (38, -1), (39, -1), (40, 1024), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 12 : set()

After reduction : 
 pending  : [25, 37, 40, 22, 20, 21]
 solution : [6, 2, 8, 14]


Solution : [6, 2, 8, 14] has cost 22.


Before backtrack at level 12
 pending : [25, 37, 40, 22, 20, 21]
 solution : [6, 2, 8, 14]

After backtrack at level 12
 pending : [25, 37, 40, 22, 20, 21, 0, 16, 19, 15]
 solution : [6, 2, 8, 14]


Invert decision for 14 at level 11


New level: 12
 pending : [25, 37, 40, 22, 20, 21, 0, 16, 19, 15]
 solution : [6, 2, 8]


Before reduction : 
 pending  : [25, 37, 40, 22, 20, 21, 0, 16, 19, 15]
 solution : [6, 2, 8]

Essensial at level 12 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, 32768), (21, 131072), (22, 32768), (23, -1), (24, -1), (25, 2048), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, 2048), (38, -1), (39, -1), (40, 1024), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, 262144), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, 8388608), (16, 262144), (17, -1), (18, -1), (19, 131072), (20, 4194304), (21, 8388608), (22, 131072), (23, -1), (24, -1), (25, 2097152), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, 2097152), (38, -1), (39, -1), (40, 65536), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 12 : set()

After reduction : 
 pending  : [25, 37, 40, 22, 20, 21, 0, 16, 19, 15]
 solution : [6, 2, 8]


Solution : [6, 2, 8] has cost 13.


Decide in level 12 among pending : [25, 37, 40, 22, 20, 21, 0, 16, 19, 15]

Coverage : [(0, 262144), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, 8388608), (16, 262144), (17, -1), (18, -1), (19, 131072), (20, 4194304), (21, 8388608), (22, 131072), (23, -1), (24, -1), (25, 2097152), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, 2097152), (38, -1), (39, -1), (40, 65536), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Decide 21 with phase True at level 12

After decision at level 12
 pending : [25, 37, 40, 22, 20, 0, 16, 19, 15]
 solution : [6, 2, 8, 21]


New level: 13
 pending : [25, 37, 40, 22, 20, 0, 16, 19, 15]
 solution : [6, 2, 8, 21]


Before reduction : 
 pending  : [25, 37, 40, 22, 20, 0, 16, 19, 15]
 solution : [6, 2, 8, 21]

Essensial at level 13 : set()

Before removed
 coverage : [(0, 262144), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, 8388608), (16, 262144), (17, -1), (18, -1), (19, 131072), (20, 4194304), (21, 8388608), (22, 131072), (23, -1), (24, -1), (25, 2097152), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, 2097152), (38, -1), (39, -1), (40, 65536), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, 131072), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, 2097152), (16, 131072), (17, -1), (18, -1), (19, 0), (20, 0), (21, -1), (22, 0), (23, -1), (24, -1), (25, 524288), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, 524288), (38, -1), (39, -1), (40, 1024), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 13 : {19, 20, 22}

After reduction : 
 pending  : [25, 37, 40, 0, 16, 15]
 solution : [6, 2, 8, 21]


Before reduction : 
 pending  : [25, 37, 40, 0, 16, 15]
 solution : [6, 2, 8, 21]

Essensial at level 13 : set()

Before removed
 coverage : [(0, 131072), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, 2097152), (16, 131072), (17, -1), (18, -1), (19, 0), (20, 0), (21, -1), (22, 0), (23, -1), (24, -1), (25, 524288), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, 524288), (38, -1), (39, -1), (40, 1024), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, 131072), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, 2097152), (16, 131072), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, 524288), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, 524288), (38, -1), (39, -1), (40, 1024), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 13 : set()

After reduction : 
 pending  : [25, 37, 40, 0, 16, 15]
 solution : [6, 2, 8, 21]


Solution : [6, 2, 8, 21] has cost 20.


Before backtrack at level 13
 pending : [25, 37, 40, 0, 16, 15]
 solution : [6, 2, 8, 21]

After backtrack at level 13
 pending : [25, 37, 40, 0, 16, 15, 22, 20, 19]
 solution : [6, 2, 8, 21]


Invert decision for 21 at level 12


New level: 13
 pending : [25, 37, 40, 0, 16, 15, 22, 20, 19]
 solution : [6, 2, 8]


Before reduction : 
 pending  : [25, 37, 40, 0, 16, 15, 22, 20, 19]
 solution : [6, 2, 8]

Essensial at level 13 : set()

Before removed
 coverage : [(0, 131072), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, 2097152), (16, 131072), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, 524288), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, 524288), (38, -1), (39, -1), (40, 1024), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, 262144), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, 8388608), (16, 262144), (17, -1), (18, -1), (19, 131072), (20, 4194304), (21, -1), (22, 131072), (23, -1), (24, -1), (25, 2097152), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, 2097152), (38, -1), (39, -1), (40, 65536), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 13 : set()

After reduction : 
 pending  : [25, 37, 40, 0, 16, 15, 22, 20, 19]
 solution : [6, 2, 8]


Solution : [6, 2, 8] has cost 13.


Decide in level 13 among pending : [25, 37, 40, 0, 16, 15, 22, 20, 19]

Coverage : [(0, 262144), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, 8388608), (16, 262144), (17, -1), (18, -1), (19, 131072), (20, 4194304), (21, -1), (22, 131072), (23, -1), (24, -1), (25, 2097152), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, 2097152), (38, -1), (39, -1), (40, 65536), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Decide 15 with phase True at level 13

After decision at level 13
 pending : [25, 37, 40, 0, 16, 22, 20, 19]
 solution : [6, 2, 8, 15]


New level: 14
 pending : [25, 37, 40, 0, 16, 22, 20, 19]
 solution : [6, 2, 8, 15]


Before reduction : 
 pending  : [25, 37, 40, 0, 16, 22, 20, 19]
 solution : [6, 2, 8, 15]

Essensial at level 14 : set()

Before removed
 coverage : [(0, 262144), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, 8388608), (16, 262144), (17, -1), (18, -1), (19, 131072), (20, 4194304), (21, -1), (22, 131072), (23, -1), (24, -1), (25, 2097152), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, 2097152), (38, -1), (39, -1), (40, 65536), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, 0), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, 0), (17, -1), (18, -1), (19, 0), (20, 32768), (21, -1), (22, 32768), (23, -1), (24, -1), (25, 2048), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, 2048), (38, -1), (39, -1), (40, 1024), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 14 : {0, 16, 19}

After reduction : 
 pending  : [25, 37, 40, 22, 20]
 solution : [6, 2, 8, 15]


Before reduction : 
 pending  : [25, 37, 40, 22, 20]
 solution : [6, 2, 8, 15]

Essensial at level 14 : set()

Before removed
 coverage : [(0, 0), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, 0), (17, -1), (18, -1), (19, 0), (20, 32768), (21, -1), (22, 32768), (23, -1), (24, -1), (25, 2048), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, 2048), (38, -1), (39, -1), (40, 1024), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, 32768), (21, -1), (22, 32768), (23, -1), (24, -1), (25, 2048), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, 2048), (38, -1), (39, -1), (40, 1024), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 14 : set()

After reduction : 
 pending  : [25, 37, 40, 22, 20]
 solution : [6, 2, 8, 15]


Solution : [6, 2, 8, 15] has cost 22.


Before backtrack at level 14
 pending : [25, 37, 40, 22, 20]
 solution : [6, 2, 8, 15]

After backtrack at level 14
 pending : [25, 37, 40, 22, 20, 0, 16, 19]
 solution : [6, 2, 8, 15]


Invert decision for 15 at level 13


New level: 14
 pending : [25, 37, 40, 22, 20, 0, 16, 19]
 solution : [6, 2, 8]


Before reduction : 
 pending  : [25, 37, 40, 22, 20, 0, 16, 19]
 solution : [6, 2, 8]

Essensial at level 14 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, 32768), (21, -1), (22, 32768), (23, -1), (24, -1), (25, 2048), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, 2048), (38, -1), (39, -1), (40, 1024), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, 262144), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, 262144), (17, -1), (18, -1), (19, 131072), (20, 4194304), (21, -1), (22, 131072), (23, -1), (24, -1), (25, 2097152), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, 2097152), (38, -1), (39, -1), (40, 65536), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 14 : set()

After reduction : 
 pending  : [25, 37, 40, 22, 20, 0, 16, 19]
 solution : [6, 2, 8]


Solution : [6, 2, 8] has cost 13.


Decide in level 14 among pending : [25, 37, 40, 22, 20, 0, 16, 19]

Coverage : [(0, 262144), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, 262144), (17, -1), (18, -1), (19, 131072), (20, 4194304), (21, -1), (22, 131072), (23, -1), (24, -1), (25, 2097152), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, 2097152), (38, -1), (39, -1), (40, 65536), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Decide 20 with phase True at level 14

After decision at level 14
 pending : [25, 37, 40, 22, 0, 16, 19]
 solution : [6, 2, 8, 20]


New level: 15
 pending : [25, 37, 40, 22, 0, 16, 19]
 solution : [6, 2, 8, 20]


Before reduction : 
 pending  : [25, 37, 40, 22, 0, 16, 19]
 solution : [6, 2, 8, 20]

Essensial at level 15 : set()

Before removed
 coverage : [(0, 262144), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, 262144), (17, -1), (18, -1), (19, 131072), (20, 4194304), (21, -1), (22, 131072), (23, -1), (24, -1), (25, 2097152), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, 2097152), (38, -1), (39, -1), (40, 65536), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, 131072), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, 131072), (17, -1), (18, -1), (19, 0), (20, -1), (21, -1), (22, 0), (23, -1), (24, -1), (25, 524288), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, 524288), (38, -1), (39, -1), (40, 1024), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 15 : {19, 22}

After reduction : 
 pending  : [25, 37, 40, 0, 16]
 solution : [6, 2, 8, 20]


Before reduction : 
 pending  : [25, 37, 40, 0, 16]
 solution : [6, 2, 8, 20]

Essensial at level 15 : set()

Before removed
 coverage : [(0, 131072), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, 131072), (17, -1), (18, -1), (19, 0), (20, -1), (21, -1), (22, 0), (23, -1), (24, -1), (25, 524288), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, 524288), (38, -1), (39, -1), (40, 1024), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, 131072), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, 131072), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, 524288), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, 524288), (38, -1), (39, -1), (40, 1024), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 15 : set()

After reduction : 
 pending  : [25, 37, 40, 0, 16]
 solution : [6, 2, 8, 20]


Solution : [6, 2, 8, 20] has cost 20.


Before backtrack at level 15
 pending : [25, 37, 40, 0, 16]
 solution : [6, 2, 8, 20]

After backtrack at level 15
 pending : [25, 37, 40, 0, 16, 22, 19]
 solution : [6, 2, 8, 20]


Invert decision for 20 at level 14


New level: 15
 pending : [25, 37, 40, 0, 16, 22, 19]
 solution : [6, 2, 8]


Before reduction : 
 pending  : [25, 37, 40, 0, 16, 22, 19]
 solution : [6, 2, 8]

Essensial at level 15 : {22}

Before removed
 coverage : [(0, 131072), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, 131072), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, 524288), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, 524288), (38, -1), (39, -1), (40, 1024), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, 262144), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, 262144), (17, -1), (18, -1), (19, 65536), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, 2097152), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, 2097152), (38, -1), (39, -1), (40, 65536), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 15 : set()

After reduction : 
 pending  : [25, 37, 40, 0, 16, 19]
 solution : [6, 2, 8, 22]


Before reduction : 
 pending  : [25, 37, 40, 0, 16, 19]
 solution : [6, 2, 8, 22]

Essensial at level 15 : set()

Before removed
 coverage : [(0, 262144), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, 262144), (17, -1), (18, -1), (19, 65536), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, 2097152), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, 2097152), (38, -1), (39, -1), (40, 65536), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, 262144), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, 262144), (17, -1), (18, -1), (19, 65536), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, 2097152), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, 2097152), (38, -1), (39, -1), (40, 65536), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 15 : set()

After reduction : 
 pending  : [25, 37, 40, 0, 16, 19]
 solution : [6, 2, 8, 22]


Solution : [6, 2, 8, 22] has cost 20.


Before backtrack at level 15
 pending : [25, 37, 40, 0, 16, 19]
 solution : [6, 2, 8, 22]

After backtrack at level 15
 pending : [25, 37, 40, 0, 16, 19, 22]
 solution : [6, 2, 8]


Before backtrack at level 14
 pending : [25, 37, 40, 0, 16, 19, 22]
 solution : [6, 2, 8]

After backtrack at level 14
 pending : [25, 37, 40, 0, 16, 19, 22, 20]
 solution : [6, 2, 8]


Before backtrack at level 13
 pending : [25, 37, 40, 0, 16, 19, 22, 20]
 solution : [6, 2, 8]

After backtrack at level 13
 pending : [25, 37, 40, 0, 16, 19, 22, 20, 15]
 solution : [6, 2, 8]


Before backtrack at level 12
 pending : [25, 37, 40, 0, 16, 19, 22, 20, 15]
 solution : [6, 2, 8]

After backtrack at level 12
 pending : [25, 37, 40, 0, 16, 19, 22, 20, 15, 21]
 solution : [6, 2, 8]


Before backtrack at level 11
 pending : [25, 37, 40, 0, 16, 19, 22, 20, 15, 21]
 solution : [6, 2, 8]

After backtrack at level 11
 pending : [25, 37, 40, 0, 16, 19, 22, 20, 15, 21, 8, 9, 29, 32, 38, 39, 42, 43, 47, 48, 49, 30, 33, 14]
 solution : [6, 2]


Before backtrack at level 10
 pending : [25, 37, 40, 0, 16, 19, 22, 20, 15, 21, 8, 9, 29, 32, 38, 39, 42, 43, 47, 48, 49, 30, 33, 14]
 solution : [6, 2]

After backtrack at level 10
 pending : [25, 37, 40, 0, 16, 19, 22, 20, 15, 21, 8, 9, 29, 32, 38, 39, 42, 43, 47, 48, 49, 30, 33, 14, 23]
 solution : [6, 2]


Before backtrack at level 9
 pending : [25, 37, 40, 0, 16, 19, 22, 20, 15, 21, 8, 9, 29, 32, 38, 39, 42, 43, 47, 48, 49, 30, 33, 14, 23]
 solution : [6, 2]

After backtrack at level 9
 pending : [25, 37, 40, 0, 16, 19, 22, 20, 15, 21, 8, 9, 29, 32, 38, 39, 42, 43, 47, 48, 49, 30, 33, 14, 23, 41]
 solution : [6, 2]


Before backtrack at level 8
 pending : [25, 37, 40, 0, 16, 19, 22, 20, 15, 21, 8, 9, 29, 32, 38, 39, 42, 43, 47, 48, 49, 30, 33, 14, 23, 41]
 solution : [6, 2]

After backtrack at level 8
 pending : [25, 37, 40, 0, 16, 19, 22, 20, 15, 21, 8, 9, 29, 32, 38, 39, 42, 43, 47, 48, 49, 30, 33, 14, 23, 41, 24]
 solution : [6, 2]


Before backtrack at level 7
 pending : [25, 37, 40, 0, 16, 19, 22, 20, 15, 21, 8, 9, 29, 32, 38, 39, 42, 43, 47, 48, 49, 30, 33, 14, 23, 41, 24]
 solution : [6, 2]

After backtrack at level 7
 pending : [25, 37, 40, 0, 16, 19, 22, 20, 15, 21, 8, 9, 29, 32, 38, 39, 42, 43, 47, 48, 49, 30, 33, 14, 23, 41, 24, 28]
 solution : [6, 2]


Before backtrack at level 6
 pending : [25, 37, 40, 0, 16, 19, 22, 20, 15, 21, 8, 9, 29, 32, 38, 39, 42, 43, 47, 48, 49, 30, 33, 14, 23, 41, 24, 28]
 solution : [6, 2]

After backtrack at level 6
 pending : [25, 37, 40, 0, 16, 19, 22, 20, 15, 21, 8, 9, 29, 32, 38, 39, 42, 43, 47, 48, 49, 30, 33, 14, 23, 41, 24, 28, 18]
 solution : [6, 2]


Before backtrack at level 5
 pending : [25, 37, 40, 0, 16, 19, 22, 20, 15, 21, 8, 9, 29, 32, 38, 39, 42, 43, 47, 48, 49, 30, 33, 14, 23, 41, 24, 28, 18]
 solution : [6, 2]

After backtrack at level 5
 pending : [25, 37, 40, 0, 16, 19, 22, 20, 15, 21, 8, 9, 29, 32, 38, 39, 42, 43, 47, 48, 49, 30, 33, 14, 23, 41, 24, 28, 18, 35]
 solution : [6, 2]


Before backtrack at level 4
 pending : [25, 37, 40, 0, 16, 19, 22, 20, 15, 21, 8, 9, 29, 32, 38, 39, 42, 43, 47, 48, 49, 30, 33, 14, 23, 41, 24, 28, 18, 35]
 solution : [6, 2]

After backtrack at level 4
 pending : [25, 37, 40, 0, 16, 19, 22, 20, 15, 21, 8, 9, 29, 32, 38, 39, 42, 43, 47, 48, 49, 30, 33, 14, 23, 41, 24, 28, 18, 35, 17]
 solution : [6, 2]


Before backtrack at level 3
 pending : [25, 37, 40, 0, 16, 19, 22, 20, 15, 21, 8, 9, 29, 32, 38, 39, 42, 43, 47, 48, 49, 30, 33, 14, 23, 41, 24, 28, 18, 35, 17]
 solution : [6, 2]

After backtrack at level 3
 pending : [25, 37, 40, 0, 16, 19, 22, 20, 15, 21, 8, 9, 29, 32, 38, 39, 42, 43, 47, 48, 49, 30, 33, 14, 23, 41, 24, 28, 18, 35, 17, 26]
 solution : [6, 2]


Invert decision for 2 at level 2


New level: 3
 pending : [25, 37, 40, 0, 16, 19, 22, 20, 15, 21, 8, 9, 29, 32, 38, 39, 42, 43, 47, 48, 49, 30, 33, 14, 23, 41, 24, 28, 18, 35, 17, 26]
 solution : [6]


Before reduction : 
 pending  : [25, 37, 40, 0, 16, 19, 22, 20, 15, 21, 8, 9, 29, 32, 38, 39, 42, 43, 47, 48, 49, 30, 33, 14, 23, 41, 24, 28, 18, 35, 17, 26]
 solution : [6]

Essensial at level 3 : set()

Before removed
 coverage : [(0, 262144), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, 262144), (17, -1), (18, -1), (19, 65536), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, 2097152), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, 2097152), (38, -1), (39, -1), (40, 65536), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, 1048576), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, 134217728), (9, 1048576), (10, -1), (11, -1), (12, -1), (13, -1), (14, 67108864), (15, 33554432), (16, 1572864), (17, 2147483648), (18, 1073741824), (19, 524288), (20, 8388608), (21, 16777216), (22, 262144), (23, 134217728), (24, 1073741824), (25, 4194304), (26, 4294967296), (27, -1), (28, 4294967296), (29, 16384), (30, 32768), (31, -1), (32, 1048576), (33, 4194304), (34, -1), (35, 2147483648), (36, -1), (37, 4194304), (38, 134217728), (39, 16384), (40, 268435456), (41, 1073741824), (42, 524288), (43, 524288), (44, -1), (45, -1), (46, -1), (47, 67108864), (48, 16777216), (49, 67108864), (50, -1), (51, -1), (52, -1)]

Covered at level 3 : set()

After reduction : 
 pending  : [25, 37, 40, 0, 16, 19, 22, 20, 15, 21, 8, 9, 29, 32, 38, 39, 42, 43, 47, 48, 49, 30, 33, 14, 23, 41, 24, 28, 18, 35, 17, 26]
 solution : [6]


Solution : [6] has cost 6.


Decide in level 3 among pending : [25, 37, 40, 0, 16, 19, 22, 20, 15, 21, 8, 9, 29, 32, 38, 39, 42, 43, 47, 48, 49, 30, 33, 14, 23, 41, 24, 28, 18, 35, 17, 26]

Coverage : [(0, 1048576), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, 134217728), (9, 1048576), (10, -1), (11, -1), (12, -1), (13, -1), (14, 67108864), (15, 33554432), (16, 1572864), (17, 2147483648), (18, 1073741824), (19, 524288), (20, 8388608), (21, 16777216), (22, 262144), (23, 134217728), (24, 1073741824), (25, 4194304), (26, 4294967296), (27, -1), (28, 4294967296), (29, 16384), (30, 32768), (31, -1), (32, 1048576), (33, 4194304), (34, -1), (35, 2147483648), (36, -1), (37, 4194304), (38, 134217728), (39, 16384), (40, 268435456), (41, 1073741824), (42, 524288), (43, 524288), (44, -1), (45, -1), (46, -1), (47, 67108864), (48, 16777216), (49, 67108864), (50, -1), (51, -1), (52, -1)]

Decide 28 with phase True at level 3

After decision at level 3
 pending : [25, 37, 40, 0, 16, 19, 22, 20, 15, 21, 8, 9, 29, 32, 38, 39, 42, 43, 47, 48, 49, 30, 33, 14, 23, 41, 24, 18, 35, 17, 26]
 solution : [6, 28]


New level: 4
 pending : [25, 37, 40, 0, 16, 19, 22, 20, 15, 21, 8, 9, 29, 32, 38, 39, 42, 43, 47, 48, 49, 30, 33, 14, 23, 41, 24, 18, 35, 17, 26]
 solution : [6, 28]


Before reduction : 
 pending  : [25, 37, 40, 0, 16, 19, 22, 20, 15, 21, 8, 9, 29, 32, 38, 39, 42, 43, 47, 48, 49, 30, 33, 14, 23, 41, 24, 18, 35, 17, 26]
 solution : [6, 28]

Essensial at level 4 : set()

Before removed
 coverage : [(0, 1048576), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, 134217728), (9, 1048576), (10, -1), (11, -1), (12, -1), (13, -1), (14, 67108864), (15, 33554432), (16, 1572864), (17, 2147483648), (18, 1073741824), (19, 524288), (20, 8388608), (21, 16777216), (22, 262144), (23, 134217728), (24, 1073741824), (25, 4194304), (26, 4294967296), (27, -1), (28, 4294967296), (29, 16384), (30, 32768), (31, -1), (32, 1048576), (33, 4194304), (34, -1), (35, 2147483648), (36, -1), (37, 4194304), (38, 134217728), (39, 16384), (40, 268435456), (41, 1073741824), (42, 524288), (43, 524288), (44, -1), (45, -1), (46, -1), (47, 67108864), (48, 16777216), (49, 67108864), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, 1048576), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, 134217728), (9, 1048576), (10, -1), (11, -1), (12, -1), (13, -1), (14, 67108864), (15, 33554432), (16, 1572864), (17, 2147483648), (18, 1073741824), (19, 524288), (20, 8388608), (21, 16777216), (22, 262144), (23, 134217728), (24, 536870912), (25, 4194304), (26, 4294967296), (27, -1), (28, -1), (29, 16384), (30, 16384), (31, -1), (32, 1048576), (33, 2097152), (34, -1), (35, 1073741824), (36, -1), (37, 4194304), (38, 134217728), (39, 16384), (40, 268435456), (41, 536870912), (42, 524288), (43, 524288), (44, -1), (45, -1), (46, -1), (47, 67108864), (48, 16777216), (49, 67108864), (50, -1), (51, -1), (52, -1)]

Covered at level 4 : set()

After reduction : 
 pending  : [25, 37, 40, 0, 16, 19, 22, 20, 15, 21, 8, 9, 29, 32, 38, 39, 42, 43, 47, 48, 49, 30, 33, 14, 23, 41, 24, 18, 35, 17, 26]
 solution : [6, 28]


Solution : [6, 28] has cost 10.


Decide in level 4 among pending : [25, 37, 40, 0, 16, 19, 22, 20, 15, 21, 8, 9, 29, 32, 38, 39, 42, 43, 47, 48, 49, 30, 33, 14, 23, 41, 24, 18, 35, 17, 26]

Coverage : [(0, 1048576), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, 134217728), (9, 1048576), (10, -1), (11, -1), (12, -1), (13, -1), (14, 67108864), (15, 33554432), (16, 1572864), (17, 2147483648), (18, 1073741824), (19, 524288), (20, 8388608), (21, 16777216), (22, 262144), (23, 134217728), (24, 536870912), (25, 4194304), (26, 4294967296), (27, -1), (28, -1), (29, 16384), (30, 16384), (31, -1), (32, 1048576), (33, 2097152), (34, -1), (35, 1073741824), (36, -1), (37, 4194304), (38, 134217728), (39, 16384), (40, 268435456), (41, 536870912), (42, 524288), (43, 524288), (44, -1), (45, -1), (46, -1), (47, 67108864), (48, 16777216), (49, 67108864), (50, -1), (51, -1), (52, -1)]

Decide 26 with phase True at level 4

After decision at level 4
 pending : [25, 37, 40, 0, 16, 19, 22, 20, 15, 21, 8, 9, 29, 32, 38, 39, 42, 43, 47, 48, 49, 30, 33, 14, 23, 41, 24, 18, 35, 17]
 solution : [6, 28, 26]


New level: 5
 pending : [25, 37, 40, 0, 16, 19, 22, 20, 15, 21, 8, 9, 29, 32, 38, 39, 42, 43, 47, 48, 49, 30, 33, 14, 23, 41, 24, 18, 35, 17]
 solution : [6, 28, 26]


Before reduction : 
 pending  : [25, 37, 40, 0, 16, 19, 22, 20, 15, 21, 8, 9, 29, 32, 38, 39, 42, 43, 47, 48, 49, 30, 33, 14, 23, 41, 24, 18, 35, 17]
 solution : [6, 28, 26]

Essensial at level 5 : set()

Before removed
 coverage : [(0, 1048576), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, 134217728), (9, 1048576), (10, -1), (11, -1), (12, -1), (13, -1), (14, 67108864), (15, 33554432), (16, 1572864), (17, 2147483648), (18, 1073741824), (19, 524288), (20, 8388608), (21, 16777216), (22, 262144), (23, 134217728), (24, 536870912), (25, 4194304), (26, 4294967296), (27, -1), (28, -1), (29, 16384), (30, 16384), (31, -1), (32, 1048576), (33, 2097152), (34, -1), (35, 1073741824), (36, -1), (37, 4194304), (38, 134217728), (39, 16384), (40, 268435456), (41, 536870912), (42, 524288), (43, 524288), (44, -1), (45, -1), (46, -1), (47, 67108864), (48, 16777216), (49, 67108864), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, 0), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, 134217728), (9, 262144), (10, -1), (11, -1), (12, -1), (13, -1), (14, 0), (15, 0), (16, 0), (17, 0), (18, 0), (19, 0), (20, 0), (21, 0), (22, 0), (23, 134217728), (24, 536870912), (25, 0), (26, -1), (27, -1), (28, -1), (29, 4096), (30, 4096), (31, -1), (32, 524288), (33, 2097152), (34, -1), (35, 1073741824), (36, -1), (37, 0), (38, 67108864), (39, 2048), (40, 2048), (41, 2048), (42, 131072), (43, 131072), (44, -1), (45, -1), (46, -1), (47, 33554432), (48, 4194304), (49, 16777216), (50, -1), (51, -1), (52, -1)]

Covered at level 5 : {0, 37, 14, 15, 16, 17, 18, 19, 20, 21, 22, 25}

After reduction : 
 pending  : [40, 8, 9, 29, 32, 38, 39, 42, 43, 47, 48, 49, 30, 33, 23, 41, 24, 35]
 solution : [6, 28, 26]


Before reduction : 
 pending  : [40, 8, 9, 29, 32, 38, 39, 42, 43, 47, 48, 49, 30, 33, 23, 41, 24, 35]
 solution : [6, 28, 26]

Essensial at level 5 : set()

Before removed
 coverage : [(0, 0), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, 134217728), (9, 262144), (10, -1), (11, -1), (12, -1), (13, -1), (14, 0), (15, 0), (16, 0), (17, 0), (18, 0), (19, 0), (20, 0), (21, 0), (22, 0), (23, 134217728), (24, 536870912), (25, 0), (26, -1), (27, -1), (28, -1), (29, 4096), (30, 4096), (31, -1), (32, 524288), (33, 2097152), (34, -1), (35, 1073741824), (36, -1), (37, 0), (38, 67108864), (39, 2048), (40, 2048), (41, 2048), (42, 131072), (43, 131072), (44, -1), (45, -1), (46, -1), (47, 33554432), (48, 4194304), (49, 16777216), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, 134217728), (9, 262144), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, 134217728), (24, 536870912), (25, -1), (26, -1), (27, -1), (28, -1), (29, 4096), (30, 4096), (31, -1), (32, 524288), (33, 2097152), (34, -1), (35, 1073741824), (36, -1), (37, -1), (38, 67108864), (39, 2048), (40, 2048), (41, 2048), (42, 131072), (43, 131072), (44, -1), (45, -1), (46, -1), (47, 33554432), (48, 4194304), (49, 16777216), (50, -1), (51, -1), (52, -1)]

Covered at level 5 : set()

After reduction : 
 pending  : [40, 8, 9, 29, 32, 38, 39, 42, 43, 47, 48, 49, 30, 33, 23, 41, 24, 35]
 solution : [6, 28, 26]


Solution : [6, 28, 26] has cost 14.


Decide in level 5 among pending : [40, 8, 9, 29, 32, 38, 39, 42, 43, 47, 48, 49, 30, 33, 23, 41, 24, 35]

Coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, 134217728), (9, 262144), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, 134217728), (24, 536870912), (25, -1), (26, -1), (27, -1), (28, -1), (29, 4096), (30, 4096), (31, -1), (32, 524288), (33, 2097152), (34, -1), (35, 1073741824), (36, -1), (37, -1), (38, 67108864), (39, 2048), (40, 2048), (41, 2048), (42, 131072), (43, 131072), (44, -1), (45, -1), (46, -1), (47, 33554432), (48, 4194304), (49, 16777216), (50, -1), (51, -1), (52, -1)]

Decide 35 with phase True at level 5

After decision at level 5
 pending : [40, 8, 9, 29, 32, 38, 39, 42, 43, 47, 48, 49, 30, 33, 23, 41, 24]
 solution : [6, 28, 26, 35]


New level: 6
 pending : [40, 8, 9, 29, 32, 38, 39, 42, 43, 47, 48, 49, 30, 33, 23, 41, 24]
 solution : [6, 28, 26, 35]


Before reduction : 
 pending  : [40, 8, 9, 29, 32, 38, 39, 42, 43, 47, 48, 49, 30, 33, 23, 41, 24]
 solution : [6, 28, 26, 35]

Essensial at level 6 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, 134217728), (9, 262144), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, 134217728), (24, 536870912), (25, -1), (26, -1), (27, -1), (28, -1), (29, 4096), (30, 4096), (31, -1), (32, 524288), (33, 2097152), (34, -1), (35, 1073741824), (36, -1), (37, -1), (38, 67108864), (39, 2048), (40, 2048), (41, 2048), (42, 131072), (43, 131072), (44, -1), (45, -1), (46, -1), (47, 33554432), (48, 4194304), (49, 16777216), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, 134217728), (9, 65536), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, 134217728), (24, 2048), (25, -1), (26, -1), (27, -1), (28, -1), (29, 1024), (30, 0), (31, -1), (32, 131072), (33, 0), (34, -1), (35, -1), (36, -1), (37, -1), (38, 16777216), (39, 512), (40, 512), (41, 0), (42, 32768), (43, 32768), (44, -1), (45, -1), (46, -1), (47, 8388608), (48, 1048576), (49, 4194304), (50, -1), (51, -1), (52, -1)]

Covered at level 6 : {33, 30, 41}

After reduction : 
 pending  : [40, 8, 9, 29, 32, 38, 39, 42, 43, 47, 48, 49, 23, 24]
 solution : [6, 28, 26, 35]


Before reduction : 
 pending  : [40, 8, 9, 29, 32, 38, 39, 42, 43, 47, 48, 49, 23, 24]
 solution : [6, 28, 26, 35]

Essensial at level 6 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, 134217728), (9, 65536), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, 134217728), (24, 2048), (25, -1), (26, -1), (27, -1), (28, -1), (29, 1024), (30, 0), (31, -1), (32, 131072), (33, 0), (34, -1), (35, -1), (36, -1), (37, -1), (38, 16777216), (39, 512), (40, 512), (41, 0), (42, 32768), (43, 32768), (44, -1), (45, -1), (46, -1), (47, 8388608), (48, 1048576), (49, 4194304), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, 134217728), (9, 65536), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, 134217728), (24, 2048), (25, -1), (26, -1), (27, -1), (28, -1), (29, 1024), (30, -1), (31, -1), (32, 131072), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, 16777216), (39, 512), (40, 512), (41, -1), (42, 32768), (43, 32768), (44, -1), (45, -1), (46, -1), (47, 8388608), (48, 1048576), (49, 4194304), (50, -1), (51, -1), (52, -1)]

Covered at level 6 : set()

After reduction : 
 pending  : [40, 8, 9, 29, 32, 38, 39, 42, 43, 47, 48, 49, 23, 24]
 solution : [6, 28, 26, 35]


Solution : [6, 28, 26, 35] has cost 27.


Before backtrack at level 6
 pending : [40, 8, 9, 29, 32, 38, 39, 42, 43, 47, 48, 49, 23, 24]
 solution : [6, 28, 26, 35]

After backtrack at level 6
 pending : [40, 8, 9, 29, 32, 38, 39, 42, 43, 47, 48, 49, 23, 24, 30, 33, 41]
 solution : [6, 28, 26, 35]


Invert decision for 35 at level 5


New level: 6
 pending : [40, 8, 9, 29, 32, 38, 39, 42, 43, 47, 48, 49, 23, 24, 30, 33, 41]
 solution : [6, 28, 26]


Before reduction : 
 pending  : [40, 8, 9, 29, 32, 38, 39, 42, 43, 47, 48, 49, 23, 24, 30, 33, 41]
 solution : [6, 28, 26]

Essensial at level 6 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, 134217728), (9, 65536), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, 134217728), (24, 2048), (25, -1), (26, -1), (27, -1), (28, -1), (29, 1024), (30, -1), (31, -1), (32, 131072), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, 16777216), (39, 512), (40, 512), (41, -1), (42, 32768), (43, 32768), (44, -1), (45, -1), (46, -1), (47, 8388608), (48, 1048576), (49, 4194304), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, 134217728), (9, 262144), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, 134217728), (24, 536870912), (25, -1), (26, -1), (27, -1), (28, -1), (29, 4096), (30, 4096), (31, -1), (32, 524288), (33, 2097152), (34, -1), (35, -1), (36, -1), (37, -1), (38, 67108864), (39, 2048), (40, 2048), (41, 2048), (42, 131072), (43, 131072), (44, -1), (45, -1), (46, -1), (47, 33554432), (48, 4194304), (49, 16777216), (50, -1), (51, -1), (52, -1)]

Covered at level 6 : set()

After reduction : 
 pending  : [40, 8, 9, 29, 32, 38, 39, 42, 43, 47, 48, 49, 23, 24, 30, 33, 41]
 solution : [6, 28, 26]


Solution : [6, 28, 26] has cost 14.


Decide in level 6 among pending : [40, 8, 9, 29, 32, 38, 39, 42, 43, 47, 48, 49, 23, 24, 30, 33, 41]

Coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, 134217728), (9, 262144), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, 134217728), (24, 536870912), (25, -1), (26, -1), (27, -1), (28, -1), (29, 4096), (30, 4096), (31, -1), (32, 524288), (33, 2097152), (34, -1), (35, -1), (36, -1), (37, -1), (38, 67108864), (39, 2048), (40, 2048), (41, 2048), (42, 131072), (43, 131072), (44, -1), (45, -1), (46, -1), (47, 33554432), (48, 4194304), (49, 16777216), (50, -1), (51, -1), (52, -1)]

Decide 24 with phase True at level 6

After decision at level 6
 pending : [40, 8, 9, 29, 32, 38, 39, 42, 43, 47, 48, 49, 23, 30, 33, 41]
 solution : [6, 28, 26, 24]


New level: 7
 pending : [40, 8, 9, 29, 32, 38, 39, 42, 43, 47, 48, 49, 23, 30, 33, 41]
 solution : [6, 28, 26, 24]


Before reduction : 
 pending  : [40, 8, 9, 29, 32, 38, 39, 42, 43, 47, 48, 49, 23, 30, 33, 41]
 solution : [6, 28, 26, 24]

Essensial at level 7 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, 134217728), (9, 262144), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, 134217728), (24, 536870912), (25, -1), (26, -1), (27, -1), (28, -1), (29, 4096), (30, 4096), (31, -1), (32, 524288), (33, 2097152), (34, -1), (35, -1), (36, -1), (37, -1), (38, 67108864), (39, 2048), (40, 2048), (41, 2048), (42, 131072), (43, 131072), (44, -1), (45, -1), (46, -1), (47, 33554432), (48, 4194304), (49, 16777216), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, 33554432), (9, 65536), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, 33554432), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, 1024), (30, 0), (31, -1), (32, 131072), (33, 0), (34, -1), (35, -1), (36, -1), (37, -1), (38, 16777216), (39, 512), (40, 512), (41, 0), (42, 32768), (43, 32768), (44, -1), (45, -1), (46, -1), (47, 8388608), (48, 1048576), (49, 8388608), (50, -1), (51, -1), (52, -1)]

Covered at level 7 : {33, 30, 41}

After reduction : 
 pending  : [40, 8, 9, 29, 32, 38, 39, 42, 43, 47, 48, 49, 23]
 solution : [6, 28, 26, 24]


Before reduction : 
 pending  : [40, 8, 9, 29, 32, 38, 39, 42, 43, 47, 48, 49, 23]
 solution : [6, 28, 26, 24]

Essensial at level 7 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, 33554432), (9, 65536), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, 33554432), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, 1024), (30, 0), (31, -1), (32, 131072), (33, 0), (34, -1), (35, -1), (36, -1), (37, -1), (38, 16777216), (39, 512), (40, 512), (41, 0), (42, 32768), (43, 32768), (44, -1), (45, -1), (46, -1), (47, 8388608), (48, 1048576), (49, 8388608), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, 33554432), (9, 65536), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, 33554432), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, 1024), (30, -1), (31, -1), (32, 131072), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, 16777216), (39, 512), (40, 512), (41, -1), (42, 32768), (43, 32768), (44, -1), (45, -1), (46, -1), (47, 8388608), (48, 1048576), (49, 8388608), (50, -1), (51, -1), (52, -1)]

Covered at level 7 : set()

After reduction : 
 pending  : [40, 8, 9, 29, 32, 38, 39, 42, 43, 47, 48, 49, 23]
 solution : [6, 28, 26, 24]


Solution : [6, 28, 26, 24] has cost 21.


Before backtrack at level 7
 pending : [40, 8, 9, 29, 32, 38, 39, 42, 43, 47, 48, 49, 23]
 solution : [6, 28, 26, 24]

After backtrack at level 7
 pending : [40, 8, 9, 29, 32, 38, 39, 42, 43, 47, 48, 49, 23, 30, 33, 41]
 solution : [6, 28, 26, 24]


Invert decision for 24 at level 6


New level: 7
 pending : [40, 8, 9, 29, 32, 38, 39, 42, 43, 47, 48, 49, 23, 30, 33, 41]
 solution : [6, 28, 26]


Before reduction : 
 pending  : [40, 8, 9, 29, 32, 38, 39, 42, 43, 47, 48, 49, 23, 30, 33, 41]
 solution : [6, 28, 26]

Essensial at level 7 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, 33554432), (9, 65536), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, 33554432), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, 1024), (30, -1), (31, -1), (32, 131072), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, 16777216), (39, 512), (40, 512), (41, -1), (42, 32768), (43, 32768), (44, -1), (45, -1), (46, -1), (47, 8388608), (48, 1048576), (49, 8388608), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, 134217728), (9, 262144), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, 134217728), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, 4096), (30, 4096), (31, -1), (32, 524288), (33, 2097152), (34, -1), (35, -1), (36, -1), (37, -1), (38, 67108864), (39, 2048), (40, 2048), (41, 2048), (42, 131072), (43, 131072), (44, -1), (45, -1), (46, -1), (47, 33554432), (48, 4194304), (49, 16777216), (50, -1), (51, -1), (52, -1)]

Covered at level 7 : set()

After reduction : 
 pending  : [40, 8, 9, 29, 32, 38, 39, 42, 43, 47, 48, 49, 23, 30, 33, 41]
 solution : [6, 28, 26]


Solution : [6, 28, 26] has cost 14.


Decide in level 7 among pending : [40, 8, 9, 29, 32, 38, 39, 42, 43, 47, 48, 49, 23, 30, 33, 41]

Coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, 134217728), (9, 262144), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, 134217728), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, 4096), (30, 4096), (31, -1), (32, 524288), (33, 2097152), (34, -1), (35, -1), (36, -1), (37, -1), (38, 67108864), (39, 2048), (40, 2048), (41, 2048), (42, 131072), (43, 131072), (44, -1), (45, -1), (46, -1), (47, 33554432), (48, 4194304), (49, 16777216), (50, -1), (51, -1), (52, -1)]

Decide 8 with phase True at level 7

After decision at level 7
 pending : [40, 9, 29, 32, 38, 39, 42, 43, 47, 48, 49, 23, 30, 33, 41]
 solution : [6, 28, 26, 8]


New level: 8
 pending : [40, 9, 29, 32, 38, 39, 42, 43, 47, 48, 49, 23, 30, 33, 41]
 solution : [6, 28, 26, 8]


Before reduction : 
 pending  : [40, 9, 29, 32, 38, 39, 42, 43, 47, 48, 49, 23, 30, 33, 41]
 solution : [6, 28, 26, 8]

Essensial at level 8 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, 134217728), (9, 262144), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, 134217728), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, 4096), (30, 4096), (31, -1), (32, 524288), (33, 2097152), (34, -1), (35, -1), (36, -1), (37, -1), (38, 67108864), (39, 2048), (40, 2048), (41, 2048), (42, 131072), (43, 131072), (44, -1), (45, -1), (46, -1), (47, 33554432), (48, 4194304), (49, 16777216), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, 0), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, 0), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, 0), (30, 0), (31, -1), (32, 0), (33, 0), (34, -1), (35, -1), (36, -1), (37, -1), (38, 0), (39, 0), (40, 0), (41, 0), (42, 0), (43, 0), (44, -1), (45, -1), (46, -1), (47, 0), (48, 0), (49, 0), (50, -1), (51, -1), (52, -1)]

Covered at level 8 : {32, 33, 38, 39, 40, 9, 42, 43, 41, 47, 48, 49, 23, 29, 30}

After reduction : 
 pending  : []
 solution : [6, 28, 26, 8]


Before reduction : 
 pending  : []
 solution : [6, 28, 26, 8]

Essensial at level 8 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, 0), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, 0), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, 0), (30, 0), (31, -1), (32, 0), (33, 0), (34, -1), (35, -1), (36, -1), (37, -1), (38, 0), (39, 0), (40, 0), (41, 0), (42, 0), (43, 0), (44, -1), (45, -1), (46, -1), (47, 0), (48, 0), (49, 0), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 8 : set()

After reduction : 
 pending  : []
 solution : [6, 28, 26, 8]


Solution : [6, 28, 26, 8] has cost 18.


Before backtrack at level 8
 pending : []
 solution : [6, 28, 26, 8]

After backtrack at level 8
 pending : [40, 9, 29, 32, 38, 39, 42, 43, 47, 48, 49, 23, 30, 33, 41]
 solution : [6, 28, 26, 8]


Invert decision for 8 at level 7


New level: 8
 pending : [40, 9, 29, 32, 38, 39, 42, 43, 47, 48, 49, 23, 30, 33, 41]
 solution : [6, 28, 26]


Before reduction : 
 pending  : [40, 9, 29, 32, 38, 39, 42, 43, 47, 48, 49, 23, 30, 33, 41]
 solution : [6, 28, 26]

Essensial at level 8 : {23}

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, 0), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, 0), (30, 0), (31, -1), (32, 0), (33, 0), (34, -1), (35, -1), (36, -1), (37, -1), (38, 0), (39, 0), (40, 0), (41, 0), (42, 0), (43, 0), (44, -1), (45, -1), (46, -1), (47, 0), (48, 0), (49, 0), (50, -1), (51, -1), (52, -1)]

Covered at level 8 : {32, 33, 38, 39, 40, 9, 42, 43, 41, 47, 48, 49, 29, 30}

After reduction : 
 pending  : []
 solution : [6, 28, 26, 23]


Before reduction : 
 pending  : []
 solution : [6, 28, 26, 23]

Essensial at level 8 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, 0), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, 0), (30, 0), (31, -1), (32, 0), (33, 0), (34, -1), (35, -1), (36, -1), (37, -1), (38, 0), (39, 0), (40, 0), (41, 0), (42, 0), (43, 0), (44, -1), (45, -1), (46, -1), (47, 0), (48, 0), (49, 0), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 8 : set()

After reduction : 
 pending  : []
 solution : [6, 28, 26, 23]


Solution : [6, 28, 26, 23] has cost 21.


Before backtrack at level 8
 pending : []
 solution : [6, 28, 26, 23]

After backtrack at level 8
 pending : [23, 40, 9, 29, 32, 38, 39, 42, 43, 47, 48, 49, 30, 33, 41]
 solution : [6, 28, 26]


Before backtrack at level 7
 pending : [23, 40, 9, 29, 32, 38, 39, 42, 43, 47, 48, 49, 30, 33, 41]
 solution : [6, 28, 26]

After backtrack at level 7
 pending : [23, 40, 9, 29, 32, 38, 39, 42, 43, 47, 48, 49, 30, 33, 41, 8]
 solution : [6, 28, 26]


Before backtrack at level 6
 pending : [23, 40, 9, 29, 32, 38, 39, 42, 43, 47, 48, 49, 30, 33, 41, 8]
 solution : [6, 28, 26]

After backtrack at level 6
 pending : [23, 40, 9, 29, 32, 38, 39, 42, 43, 47, 48, 49, 30, 33, 41, 8, 24]
 solution : [6, 28, 26]


Before backtrack at level 5
 pending : [23, 40, 9, 29, 32, 38, 39, 42, 43, 47, 48, 49, 30, 33, 41, 8, 24]
 solution : [6, 28, 26]

After backtrack at level 5
 pending : [23, 40, 9, 29, 32, 38, 39, 42, 43, 47, 48, 49, 30, 33, 41, 8, 24, 25, 37, 0, 16, 19, 22, 20, 15, 21, 14, 18, 17, 35]
 solution : [6, 28, 26]


Invert decision for 26 at level 4


New level: 5
 pending : [23, 40, 9, 29, 32, 38, 39, 42, 43, 47, 48, 49, 30, 33, 41, 8, 24, 25, 37, 0, 16, 19, 22, 20, 15, 21, 14, 18, 17, 35]
 solution : [6, 28]


Before reduction : 
 pending  : [23, 40, 9, 29, 32, 38, 39, 42, 43, 47, 48, 49, 30, 33, 41, 8, 24, 25, 37, 0, 16, 19, 22, 20, 15, 21, 14, 18, 17, 35]
 solution : [6, 28]

Essensial at level 5 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, 1048576), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, 134217728), (9, 1048576), (10, -1), (11, -1), (12, -1), (13, -1), (14, 67108864), (15, 33554432), (16, 1572864), (17, 2147483648), (18, 1073741824), (19, 524288), (20, 8388608), (21, 16777216), (22, 262144), (23, 134217728), (24, 536870912), (25, 4194304), (26, -1), (27, -1), (28, -1), (29, 16384), (30, 16384), (31, -1), (32, 1048576), (33, 2097152), (34, -1), (35, 1073741824), (36, -1), (37, 4194304), (38, 134217728), (39, 16384), (40, 268435456), (41, 536870912), (42, 524288), (43, 524288), (44, -1), (45, -1), (46, -1), (47, 67108864), (48, 16777216), (49, 67108864), (50, -1), (51, -1), (52, -1)]

Covered at level 5 : set()

After reduction : 
 pending  : [23, 40, 9, 29, 32, 38, 39, 42, 43, 47, 48, 49, 30, 33, 41, 8, 24, 25, 37, 0, 16, 19, 22, 20, 15, 21, 14, 18, 17, 35]
 solution : [6, 28]


Solution : [6, 28] has cost 10.


Decide in level 5 among pending : [23, 40, 9, 29, 32, 38, 39, 42, 43, 47, 48, 49, 30, 33, 41, 8, 24, 25, 37, 0, 16, 19, 22, 20, 15, 21, 14, 18, 17, 35]

Coverage : [(0, 1048576), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, 134217728), (9, 1048576), (10, -1), (11, -1), (12, -1), (13, -1), (14, 67108864), (15, 33554432), (16, 1572864), (17, 2147483648), (18, 1073741824), (19, 524288), (20, 8388608), (21, 16777216), (22, 262144), (23, 134217728), (24, 536870912), (25, 4194304), (26, -1), (27, -1), (28, -1), (29, 16384), (30, 16384), (31, -1), (32, 1048576), (33, 2097152), (34, -1), (35, 1073741824), (36, -1), (37, 4194304), (38, 134217728), (39, 16384), (40, 268435456), (41, 536870912), (42, 524288), (43, 524288), (44, -1), (45, -1), (46, -1), (47, 67108864), (48, 16777216), (49, 67108864), (50, -1), (51, -1), (52, -1)]

Decide 17 with phase True at level 5

After decision at level 5
 pending : [23, 40, 9, 29, 32, 38, 39, 42, 43, 47, 48, 49, 30, 33, 41, 8, 24, 25, 37, 0, 16, 19, 22, 20, 15, 21, 14, 18, 35]
 solution : [6, 28, 17]


New level: 6
 pending : [23, 40, 9, 29, 32, 38, 39, 42, 43, 47, 48, 49, 30, 33, 41, 8, 24, 25, 37, 0, 16, 19, 22, 20, 15, 21, 14, 18, 35]
 solution : [6, 28, 17]


Before reduction : 
 pending  : [23, 40, 9, 29, 32, 38, 39, 42, 43, 47, 48, 49, 30, 33, 41, 8, 24, 25, 37, 0, 16, 19, 22, 20, 15, 21, 14, 18, 35]
 solution : [6, 28, 17]

Essensial at level 6 : set()

Before removed
 coverage : [(0, 1048576), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, 134217728), (9, 1048576), (10, -1), (11, -1), (12, -1), (13, -1), (14, 67108864), (15, 33554432), (16, 1572864), (17, 2147483648), (18, 1073741824), (19, 524288), (20, 8388608), (21, 16777216), (22, 262144), (23, 134217728), (24, 536870912), (25, 4194304), (26, -1), (27, -1), (28, -1), (29, 16384), (30, 16384), (31, -1), (32, 1048576), (33, 2097152), (34, -1), (35, 1073741824), (36, -1), (37, 4194304), (38, 134217728), (39, 16384), (40, 268435456), (41, 536870912), (42, 524288), (43, 524288), (44, -1), (45, -1), (46, -1), (47, 67108864), (48, 16777216), (49, 67108864), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, 0), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, 134217728), (9, 262144), (10, -1), (11, -1), (12, -1), (13, -1), (14, 0), (15, 0), (16, 0), (17, -1), (18, 0), (19, 0), (20, 0), (21, 0), (22, 0), (23, 134217728), (24, 536870912), (25, 0), (26, -1), (27, -1), (28, -1), (29, 4096), (30, 4096), (31, -1), (32, 524288), (33, 2097152), (34, -1), (35, 1073741824), (36, -1), (37, 0), (38, 67108864), (39, 2048), (40, 2048), (41, 2048), (42, 131072), (43, 131072), (44, -1), (45, -1), (46, -1), (47, 33554432), (48, 4194304), (49, 67108864), (50, -1), (51, -1), (52, -1)]

Covered at level 6 : {0, 37, 14, 15, 16, 18, 19, 20, 21, 22, 25}

After reduction : 
 pending  : [23, 40, 9, 29, 32, 38, 39, 42, 43, 47, 48, 49, 30, 33, 41, 8, 24, 35]
 solution : [6, 28, 17]


Before reduction : 
 pending  : [23, 40, 9, 29, 32, 38, 39, 42, 43, 47, 48, 49, 30, 33, 41, 8, 24, 35]
 solution : [6, 28, 17]

Essensial at level 6 : set()

Before removed
 coverage : [(0, 0), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, 134217728), (9, 262144), (10, -1), (11, -1), (12, -1), (13, -1), (14, 0), (15, 0), (16, 0), (17, -1), (18, 0), (19, 0), (20, 0), (21, 0), (22, 0), (23, 134217728), (24, 536870912), (25, 0), (26, -1), (27, -1), (28, -1), (29, 4096), (30, 4096), (31, -1), (32, 524288), (33, 2097152), (34, -1), (35, 1073741824), (36, -1), (37, 0), (38, 67108864), (39, 2048), (40, 2048), (41, 2048), (42, 131072), (43, 131072), (44, -1), (45, -1), (46, -1), (47, 33554432), (48, 4194304), (49, 67108864), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, 134217728), (9, 262144), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, 134217728), (24, 536870912), (25, -1), (26, -1), (27, -1), (28, -1), (29, 4096), (30, 4096), (31, -1), (32, 524288), (33, 2097152), (34, -1), (35, 1073741824), (36, -1), (37, -1), (38, 67108864), (39, 2048), (40, 2048), (41, 2048), (42, 131072), (43, 131072), (44, -1), (45, -1), (46, -1), (47, 33554432), (48, 4194304), (49, 67108864), (50, -1), (51, -1), (52, -1)]

Covered at level 6 : set()

After reduction : 
 pending  : [23, 40, 9, 29, 32, 38, 39, 42, 43, 47, 48, 49, 30, 33, 41, 8, 24, 35]
 solution : [6, 28, 17]


Solution : [6, 28, 17] has cost 17.


Decide in level 6 among pending : [23, 40, 9, 29, 32, 38, 39, 42, 43, 47, 48, 49, 30, 33, 41, 8, 24, 35]

Coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, 134217728), (9, 262144), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, 134217728), (24, 536870912), (25, -1), (26, -1), (27, -1), (28, -1), (29, 4096), (30, 4096), (31, -1), (32, 524288), (33, 2097152), (34, -1), (35, 1073741824), (36, -1), (37, -1), (38, 67108864), (39, 2048), (40, 2048), (41, 2048), (42, 131072), (43, 131072), (44, -1), (45, -1), (46, -1), (47, 33554432), (48, 4194304), (49, 67108864), (50, -1), (51, -1), (52, -1)]

Decide 35 with phase True at level 6

After decision at level 6
 pending : [23, 40, 9, 29, 32, 38, 39, 42, 43, 47, 48, 49, 30, 33, 41, 8, 24]
 solution : [6, 28, 17, 35]


New level: 7
 pending : [23, 40, 9, 29, 32, 38, 39, 42, 43, 47, 48, 49, 30, 33, 41, 8, 24]
 solution : [6, 28, 17, 35]


Before reduction : 
 pending  : [23, 40, 9, 29, 32, 38, 39, 42, 43, 47, 48, 49, 30, 33, 41, 8, 24]
 solution : [6, 28, 17, 35]

Essensial at level 7 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, 134217728), (9, 262144), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, 134217728), (24, 536870912), (25, -1), (26, -1), (27, -1), (28, -1), (29, 4096), (30, 4096), (31, -1), (32, 524288), (33, 2097152), (34, -1), (35, 1073741824), (36, -1), (37, -1), (38, 67108864), (39, 2048), (40, 2048), (41, 2048), (42, 131072), (43, 131072), (44, -1), (45, -1), (46, -1), (47, 33554432), (48, 4194304), (49, 67108864), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, 134217728), (9, 65536), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, 134217728), (24, 2048), (25, -1), (26, -1), (27, -1), (28, -1), (29, 1024), (30, 0), (31, -1), (32, 131072), (33, 0), (34, -1), (35, -1), (36, -1), (37, -1), (38, 16777216), (39, 512), (40, 512), (41, 0), (42, 32768), (43, 32768), (44, -1), (45, -1), (46, -1), (47, 8388608), (48, 1048576), (49, 16777216), (50, -1), (51, -1), (52, -1)]

Covered at level 7 : {33, 30, 41}

After reduction : 
 pending  : [23, 40, 9, 29, 32, 38, 39, 42, 43, 47, 48, 49, 8, 24]
 solution : [6, 28, 17, 35]


Before reduction : 
 pending  : [23, 40, 9, 29, 32, 38, 39, 42, 43, 47, 48, 49, 8, 24]
 solution : [6, 28, 17, 35]

Essensial at level 7 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, 134217728), (9, 65536), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, 134217728), (24, 2048), (25, -1), (26, -1), (27, -1), (28, -1), (29, 1024), (30, 0), (31, -1), (32, 131072), (33, 0), (34, -1), (35, -1), (36, -1), (37, -1), (38, 16777216), (39, 512), (40, 512), (41, 0), (42, 32768), (43, 32768), (44, -1), (45, -1), (46, -1), (47, 8388608), (48, 1048576), (49, 16777216), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, 134217728), (9, 65536), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, 134217728), (24, 2048), (25, -1), (26, -1), (27, -1), (28, -1), (29, 1024), (30, -1), (31, -1), (32, 131072), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, 16777216), (39, 512), (40, 512), (41, -1), (42, 32768), (43, 32768), (44, -1), (45, -1), (46, -1), (47, 8388608), (48, 1048576), (49, 16777216), (50, -1), (51, -1), (52, -1)]

Covered at level 7 : set()

After reduction : 
 pending  : [23, 40, 9, 29, 32, 38, 39, 42, 43, 47, 48, 49, 8, 24]
 solution : [6, 28, 17, 35]


Solution : [6, 28, 17, 35] has cost 30.


Before backtrack at level 7
 pending : [23, 40, 9, 29, 32, 38, 39, 42, 43, 47, 48, 49, 8, 24]
 solution : [6, 28, 17, 35]

After backtrack at level 7
 pending : [23, 40, 9, 29, 32, 38, 39, 42, 43, 47, 48, 49, 8, 24, 30, 33, 41]
 solution : [6, 28, 17, 35]


Invert decision for 35 at level 6


New level: 7
 pending : [23, 40, 9, 29, 32, 38, 39, 42, 43, 47, 48, 49, 8, 24, 30, 33, 41]
 solution : [6, 28, 17]


Before reduction : 
 pending  : [23, 40, 9, 29, 32, 38, 39, 42, 43, 47, 48, 49, 8, 24, 30, 33, 41]
 solution : [6, 28, 17]

Essensial at level 7 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, 134217728), (9, 65536), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, 134217728), (24, 2048), (25, -1), (26, -1), (27, -1), (28, -1), (29, 1024), (30, -1), (31, -1), (32, 131072), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, 16777216), (39, 512), (40, 512), (41, -1), (42, 32768), (43, 32768), (44, -1), (45, -1), (46, -1), (47, 8388608), (48, 1048576), (49, 16777216), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, 134217728), (9, 262144), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, 134217728), (24, 536870912), (25, -1), (26, -1), (27, -1), (28, -1), (29, 4096), (30, 4096), (31, -1), (32, 524288), (33, 2097152), (34, -1), (35, -1), (36, -1), (37, -1), (38, 67108864), (39, 2048), (40, 2048), (41, 2048), (42, 131072), (43, 131072), (44, -1), (45, -1), (46, -1), (47, 33554432), (48, 4194304), (49, 67108864), (50, -1), (51, -1), (52, -1)]

Covered at level 7 : set()

After reduction : 
 pending  : [23, 40, 9, 29, 32, 38, 39, 42, 43, 47, 48, 49, 8, 24, 30, 33, 41]
 solution : [6, 28, 17]


Solution : [6, 28, 17] has cost 17.


Decide in level 7 among pending : [23, 40, 9, 29, 32, 38, 39, 42, 43, 47, 48, 49, 8, 24, 30, 33, 41]

Coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, 134217728), (9, 262144), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, 134217728), (24, 536870912), (25, -1), (26, -1), (27, -1), (28, -1), (29, 4096), (30, 4096), (31, -1), (32, 524288), (33, 2097152), (34, -1), (35, -1), (36, -1), (37, -1), (38, 67108864), (39, 2048), (40, 2048), (41, 2048), (42, 131072), (43, 131072), (44, -1), (45, -1), (46, -1), (47, 33554432), (48, 4194304), (49, 67108864), (50, -1), (51, -1), (52, -1)]

Decide 24 with phase True at level 7

After decision at level 7
 pending : [23, 40, 9, 29, 32, 38, 39, 42, 43, 47, 48, 49, 8, 30, 33, 41]
 solution : [6, 28, 17, 24]


New level: 8
 pending : [23, 40, 9, 29, 32, 38, 39, 42, 43, 47, 48, 49, 8, 30, 33, 41]
 solution : [6, 28, 17, 24]


Before reduction : 
 pending  : [23, 40, 9, 29, 32, 38, 39, 42, 43, 47, 48, 49, 8, 30, 33, 41]
 solution : [6, 28, 17, 24]

Essensial at level 8 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, 134217728), (9, 262144), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, 134217728), (24, 536870912), (25, -1), (26, -1), (27, -1), (28, -1), (29, 4096), (30, 4096), (31, -1), (32, 524288), (33, 2097152), (34, -1), (35, -1), (36, -1), (37, -1), (38, 67108864), (39, 2048), (40, 2048), (41, 2048), (42, 131072), (43, 131072), (44, -1), (45, -1), (46, -1), (47, 33554432), (48, 4194304), (49, 67108864), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, 33554432), (9, 65536), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, 33554432), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, 1024), (30, 0), (31, -1), (32, 131072), (33, 0), (34, -1), (35, -1), (36, -1), (37, -1), (38, 16777216), (39, 512), (40, 512), (41, 0), (42, 32768), (43, 32768), (44, -1), (45, -1), (46, -1), (47, 8388608), (48, 1048576), (49, 33554432), (50, -1), (51, -1), (52, -1)]

Covered at level 8 : {33, 30, 41}

After reduction : 
 pending  : [23, 40, 9, 29, 32, 38, 39, 42, 43, 47, 48, 49, 8]
 solution : [6, 28, 17, 24]


Before reduction : 
 pending  : [23, 40, 9, 29, 32, 38, 39, 42, 43, 47, 48, 49, 8]
 solution : [6, 28, 17, 24]

Essensial at level 8 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, 33554432), (9, 65536), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, 33554432), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, 1024), (30, 0), (31, -1), (32, 131072), (33, 0), (34, -1), (35, -1), (36, -1), (37, -1), (38, 16777216), (39, 512), (40, 512), (41, 0), (42, 32768), (43, 32768), (44, -1), (45, -1), (46, -1), (47, 8388608), (48, 1048576), (49, 33554432), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, 33554432), (9, 65536), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, 33554432), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, 1024), (30, -1), (31, -1), (32, 131072), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, 16777216), (39, 512), (40, 512), (41, -1), (42, 32768), (43, 32768), (44, -1), (45, -1), (46, -1), (47, 8388608), (48, 1048576), (49, 33554432), (50, -1), (51, -1), (52, -1)]

Covered at level 8 : set()

After reduction : 
 pending  : [23, 40, 9, 29, 32, 38, 39, 42, 43, 47, 48, 49, 8]
 solution : [6, 28, 17, 24]


Solution : [6, 28, 17, 24] has cost 24.


Before backtrack at level 8
 pending : [23, 40, 9, 29, 32, 38, 39, 42, 43, 47, 48, 49, 8]
 solution : [6, 28, 17, 24]

After backtrack at level 8
 pending : [23, 40, 9, 29, 32, 38, 39, 42, 43, 47, 48, 49, 8, 30, 33, 41]
 solution : [6, 28, 17, 24]


Invert decision for 24 at level 7


New level: 8
 pending : [23, 40, 9, 29, 32, 38, 39, 42, 43, 47, 48, 49, 8, 30, 33, 41]
 solution : [6, 28, 17]


Before reduction : 
 pending  : [23, 40, 9, 29, 32, 38, 39, 42, 43, 47, 48, 49, 8, 30, 33, 41]
 solution : [6, 28, 17]

Essensial at level 8 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, 33554432), (9, 65536), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, 33554432), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, 1024), (30, -1), (31, -1), (32, 131072), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, 16777216), (39, 512), (40, 512), (41, -1), (42, 32768), (43, 32768), (44, -1), (45, -1), (46, -1), (47, 8388608), (48, 1048576), (49, 33554432), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, 134217728), (9, 262144), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, 134217728), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, 4096), (30, 4096), (31, -1), (32, 524288), (33, 2097152), (34, -1), (35, -1), (36, -1), (37, -1), (38, 67108864), (39, 2048), (40, 2048), (41, 2048), (42, 131072), (43, 131072), (44, -1), (45, -1), (46, -1), (47, 33554432), (48, 4194304), (49, 67108864), (50, -1), (51, -1), (52, -1)]

Covered at level 8 : set()

After reduction : 
 pending  : [23, 40, 9, 29, 32, 38, 39, 42, 43, 47, 48, 49, 8, 30, 33, 41]
 solution : [6, 28, 17]


Solution : [6, 28, 17] has cost 17.


Decide in level 8 among pending : [23, 40, 9, 29, 32, 38, 39, 42, 43, 47, 48, 49, 8, 30, 33, 41]

Coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, 134217728), (9, 262144), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, 134217728), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, 4096), (30, 4096), (31, -1), (32, 524288), (33, 2097152), (34, -1), (35, -1), (36, -1), (37, -1), (38, 67108864), (39, 2048), (40, 2048), (41, 2048), (42, 131072), (43, 131072), (44, -1), (45, -1), (46, -1), (47, 33554432), (48, 4194304), (49, 67108864), (50, -1), (51, -1), (52, -1)]

Decide 23 with phase True at level 8

After decision at level 8
 pending : [40, 9, 29, 32, 38, 39, 42, 43, 47, 48, 49, 8, 30, 33, 41]
 solution : [6, 28, 17, 23]


New level: 9
 pending : [40, 9, 29, 32, 38, 39, 42, 43, 47, 48, 49, 8, 30, 33, 41]
 solution : [6, 28, 17, 23]


Before reduction : 
 pending  : [40, 9, 29, 32, 38, 39, 42, 43, 47, 48, 49, 8, 30, 33, 41]
 solution : [6, 28, 17, 23]

Essensial at level 9 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, 134217728), (9, 262144), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, 134217728), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, 4096), (30, 4096), (31, -1), (32, 524288), (33, 2097152), (34, -1), (35, -1), (36, -1), (37, -1), (38, 67108864), (39, 2048), (40, 2048), (41, 2048), (42, 131072), (43, 131072), (44, -1), (45, -1), (46, -1), (47, 33554432), (48, 4194304), (49, 67108864), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, 0), (9, 0), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, 0), (30, 0), (31, -1), (32, 0), (33, 0), (34, -1), (35, -1), (36, -1), (37, -1), (38, 0), (39, 0), (40, 0), (41, 0), (42, 0), (43, 0), (44, -1), (45, -1), (46, -1), (47, 0), (48, 0), (49, 0), (50, -1), (51, -1), (52, -1)]

Covered at level 9 : {32, 33, 38, 39, 40, 9, 42, 43, 8, 41, 47, 48, 49, 29, 30}

After reduction : 
 pending  : []
 solution : [6, 28, 17, 23]


Before reduction : 
 pending  : []
 solution : [6, 28, 17, 23]

Essensial at level 9 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, 0), (9, 0), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, 0), (30, 0), (31, -1), (32, 0), (33, 0), (34, -1), (35, -1), (36, -1), (37, -1), (38, 0), (39, 0), (40, 0), (41, 0), (42, 0), (43, 0), (44, -1), (45, -1), (46, -1), (47, 0), (48, 0), (49, 0), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 9 : set()

After reduction : 
 pending  : []
 solution : [6, 28, 17, 23]


Solution : [6, 28, 17, 23] has cost 24.


Before backtrack at level 9
 pending : []
 solution : [6, 28, 17, 23]

After backtrack at level 9
 pending : [40, 9, 29, 32, 38, 39, 42, 43, 47, 48, 49, 8, 30, 33, 41]
 solution : [6, 28, 17, 23]


Invert decision for 23 at level 8


New level: 9
 pending : [40, 9, 29, 32, 38, 39, 42, 43, 47, 48, 49, 8, 30, 33, 41]
 solution : [6, 28, 17]


Before reduction : 
 pending  : [40, 9, 29, 32, 38, 39, 42, 43, 47, 48, 49, 8, 30, 33, 41]
 solution : [6, 28, 17]

Essensial at level 9 : {8}

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, 0), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, 0), (30, 0), (31, -1), (32, 0), (33, 0), (34, -1), (35, -1), (36, -1), (37, -1), (38, 0), (39, 0), (40, 0), (41, 0), (42, 0), (43, 0), (44, -1), (45, -1), (46, -1), (47, 0), (48, 0), (49, 0), (50, -1), (51, -1), (52, -1)]

Covered at level 9 : {32, 33, 38, 39, 40, 9, 42, 43, 41, 47, 48, 49, 29, 30}

After reduction : 
 pending  : []
 solution : [6, 28, 17, 8]


Before reduction : 
 pending  : []
 solution : [6, 28, 17, 8]

Essensial at level 9 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, 0), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, 0), (30, 0), (31, -1), (32, 0), (33, 0), (34, -1), (35, -1), (36, -1), (37, -1), (38, 0), (39, 0), (40, 0), (41, 0), (42, 0), (43, 0), (44, -1), (45, -1), (46, -1), (47, 0), (48, 0), (49, 0), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 9 : set()

After reduction : 
 pending  : []
 solution : [6, 28, 17, 8]


Solution : [6, 28, 17, 8] has cost 21.


Before backtrack at level 9
 pending : []
 solution : [6, 28, 17, 8]

After backtrack at level 9
 pending : [8, 40, 9, 29, 32, 38, 39, 42, 43, 47, 48, 49, 30, 33, 41]
 solution : [6, 28, 17]


Before backtrack at level 8
 pending : [8, 40, 9, 29, 32, 38, 39, 42, 43, 47, 48, 49, 30, 33, 41]
 solution : [6, 28, 17]

After backtrack at level 8
 pending : [8, 40, 9, 29, 32, 38, 39, 42, 43, 47, 48, 49, 30, 33, 41, 23]
 solution : [6, 28, 17]


Before backtrack at level 7
 pending : [8, 40, 9, 29, 32, 38, 39, 42, 43, 47, 48, 49, 30, 33, 41, 23]
 solution : [6, 28, 17]

After backtrack at level 7
 pending : [8, 40, 9, 29, 32, 38, 39, 42, 43, 47, 48, 49, 30, 33, 41, 23, 24]
 solution : [6, 28, 17]


Before backtrack at level 6
 pending : [8, 40, 9, 29, 32, 38, 39, 42, 43, 47, 48, 49, 30, 33, 41, 23, 24]
 solution : [6, 28, 17]

After backtrack at level 6
 pending : [8, 40, 9, 29, 32, 38, 39, 42, 43, 47, 48, 49, 30, 33, 41, 23, 24, 25, 37, 0, 16, 19, 22, 20, 15, 21, 14, 18, 35]
 solution : [6, 28, 17]


Invert decision for 17 at level 5


New level: 6
 pending : [8, 40, 9, 29, 32, 38, 39, 42, 43, 47, 48, 49, 30, 33, 41, 23, 24, 25, 37, 0, 16, 19, 22, 20, 15, 21, 14, 18, 35]
 solution : [6, 28]


Before reduction : 
 pending  : [8, 40, 9, 29, 32, 38, 39, 42, 43, 47, 48, 49, 30, 33, 41, 23, 24, 25, 37, 0, 16, 19, 22, 20, 15, 21, 14, 18, 35]
 solution : [6, 28]

Essensial at level 6 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, 1048576), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, 134217728), (9, 1048576), (10, -1), (11, -1), (12, -1), (13, -1), (14, 67108864), (15, 33554432), (16, 1572864), (17, -1), (18, 1073741824), (19, 524288), (20, 8388608), (21, 16777216), (22, 262144), (23, 134217728), (24, 536870912), (25, 4194304), (26, -1), (27, -1), (28, -1), (29, 16384), (30, 16384), (31, -1), (32, 1048576), (33, 2097152), (34, -1), (35, 1073741824), (36, -1), (37, 4194304), (38, 134217728), (39, 16384), (40, 268435456), (41, 536870912), (42, 524288), (43, 524288), (44, -1), (45, -1), (46, -1), (47, 67108864), (48, 16777216), (49, 67108864), (50, -1), (51, -1), (52, -1)]

Covered at level 6 : set()

After reduction : 
 pending  : [8, 40, 9, 29, 32, 38, 39, 42, 43, 47, 48, 49, 30, 33, 41, 23, 24, 25, 37, 0, 16, 19, 22, 20, 15, 21, 14, 18, 35]
 solution : [6, 28]


Solution : [6, 28] has cost 10.


Decide in level 6 among pending : [8, 40, 9, 29, 32, 38, 39, 42, 43, 47, 48, 49, 30, 33, 41, 23, 24, 25, 37, 0, 16, 19, 22, 20, 15, 21, 14, 18, 35]

Coverage : [(0, 1048576), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, 134217728), (9, 1048576), (10, -1), (11, -1), (12, -1), (13, -1), (14, 67108864), (15, 33554432), (16, 1572864), (17, -1), (18, 1073741824), (19, 524288), (20, 8388608), (21, 16777216), (22, 262144), (23, 134217728), (24, 536870912), (25, 4194304), (26, -1), (27, -1), (28, -1), (29, 16384), (30, 16384), (31, -1), (32, 1048576), (33, 2097152), (34, -1), (35, 1073741824), (36, -1), (37, 4194304), (38, 134217728), (39, 16384), (40, 268435456), (41, 536870912), (42, 524288), (43, 524288), (44, -1), (45, -1), (46, -1), (47, 67108864), (48, 16777216), (49, 67108864), (50, -1), (51, -1), (52, -1)]

Decide 18 with phase True at level 6

After decision at level 6
 pending : [8, 40, 9, 29, 32, 38, 39, 42, 43, 47, 48, 49, 30, 33, 41, 23, 24, 25, 37, 0, 16, 19, 22, 20, 15, 21, 14, 35]
 solution : [6, 28, 18]


New level: 7
 pending : [8, 40, 9, 29, 32, 38, 39, 42, 43, 47, 48, 49, 30, 33, 41, 23, 24, 25, 37, 0, 16, 19, 22, 20, 15, 21, 14, 35]
 solution : [6, 28, 18]


Before reduction : 
 pending  : [8, 40, 9, 29, 32, 38, 39, 42, 43, 47, 48, 49, 30, 33, 41, 23, 24, 25, 37, 0, 16, 19, 22, 20, 15, 21, 14, 35]
 solution : [6, 28, 18]

Essensial at level 7 : set()

Before removed
 coverage : [(0, 1048576), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, 134217728), (9, 1048576), (10, -1), (11, -1), (12, -1), (13, -1), (14, 67108864), (15, 33554432), (16, 1572864), (17, -1), (18, 1073741824), (19, 524288), (20, 8388608), (21, 16777216), (22, 262144), (23, 134217728), (24, 536870912), (25, 4194304), (26, -1), (27, -1), (28, -1), (29, 16384), (30, 16384), (31, -1), (32, 1048576), (33, 2097152), (34, -1), (35, 1073741824), (36, -1), (37, 4194304), (38, 134217728), (39, 16384), (40, 268435456), (41, 536870912), (42, 524288), (43, 524288), (44, -1), (45, -1), (46, -1), (47, 67108864), (48, 16777216), (49, 67108864), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, 0), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, 134217728), (9, 262144), (10, -1), (11, -1), (12, -1), (13, -1), (14, 0), (15, 0), (16, 0), (17, -1), (18, -1), (19, 0), (20, 0), (21, 0), (22, 0), (23, 134217728), (24, 536870912), (25, 0), (26, -1), (27, -1), (28, -1), (29, 4096), (30, 4096), (31, -1), (32, 524288), (33, 2097152), (34, -1), (35, 1073741824), (36, -1), (37, 0), (38, 67108864), (39, 2048), (40, 2048), (41, 2048), (42, 262144), (43, 262144), (44, -1), (45, -1), (46, -1), (47, 67108864), (48, 16777216), (49, 67108864), (50, -1), (51, -1), (52, -1)]

Covered at level 7 : {0, 37, 14, 15, 16, 19, 20, 21, 22, 25}

After reduction : 
 pending  : [8, 40, 9, 29, 32, 38, 39, 42, 43, 47, 48, 49, 30, 33, 41, 23, 24, 35]
 solution : [6, 28, 18]


Before reduction : 
 pending  : [8, 40, 9, 29, 32, 38, 39, 42, 43, 47, 48, 49, 30, 33, 41, 23, 24, 35]
 solution : [6, 28, 18]

Essensial at level 7 : set()

Before removed
 coverage : [(0, 0), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, 134217728), (9, 262144), (10, -1), (11, -1), (12, -1), (13, -1), (14, 0), (15, 0), (16, 0), (17, -1), (18, -1), (19, 0), (20, 0), (21, 0), (22, 0), (23, 134217728), (24, 536870912), (25, 0), (26, -1), (27, -1), (28, -1), (29, 4096), (30, 4096), (31, -1), (32, 524288), (33, 2097152), (34, -1), (35, 1073741824), (36, -1), (37, 0), (38, 67108864), (39, 2048), (40, 2048), (41, 2048), (42, 262144), (43, 262144), (44, -1), (45, -1), (46, -1), (47, 67108864), (48, 16777216), (49, 67108864), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, 134217728), (9, 262144), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, 134217728), (24, 536870912), (25, -1), (26, -1), (27, -1), (28, -1), (29, 4096), (30, 4096), (31, -1), (32, 524288), (33, 2097152), (34, -1), (35, 1073741824), (36, -1), (37, -1), (38, 67108864), (39, 2048), (40, 2048), (41, 2048), (42, 262144), (43, 262144), (44, -1), (45, -1), (46, -1), (47, 67108864), (48, 16777216), (49, 67108864), (50, -1), (51, -1), (52, -1)]

Covered at level 7 : set()

After reduction : 
 pending  : [8, 40, 9, 29, 32, 38, 39, 42, 43, 47, 48, 49, 30, 33, 41, 23, 24, 35]
 solution : [6, 28, 18]


Solution : [6, 28, 18] has cost 17.


Decide in level 7 among pending : [8, 40, 9, 29, 32, 38, 39, 42, 43, 47, 48, 49, 30, 33, 41, 23, 24, 35]

Coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, 134217728), (9, 262144), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, 134217728), (24, 536870912), (25, -1), (26, -1), (27, -1), (28, -1), (29, 4096), (30, 4096), (31, -1), (32, 524288), (33, 2097152), (34, -1), (35, 1073741824), (36, -1), (37, -1), (38, 67108864), (39, 2048), (40, 2048), (41, 2048), (42, 262144), (43, 262144), (44, -1), (45, -1), (46, -1), (47, 67108864), (48, 16777216), (49, 67108864), (50, -1), (51, -1), (52, -1)]

Decide 35 with phase True at level 7

After decision at level 7
 pending : [8, 40, 9, 29, 32, 38, 39, 42, 43, 47, 48, 49, 30, 33, 41, 23, 24]
 solution : [6, 28, 18, 35]


New level: 8
 pending : [8, 40, 9, 29, 32, 38, 39, 42, 43, 47, 48, 49, 30, 33, 41, 23, 24]
 solution : [6, 28, 18, 35]


Before reduction : 
 pending  : [8, 40, 9, 29, 32, 38, 39, 42, 43, 47, 48, 49, 30, 33, 41, 23, 24]
 solution : [6, 28, 18, 35]

Essensial at level 8 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, 134217728), (9, 262144), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, 134217728), (24, 536870912), (25, -1), (26, -1), (27, -1), (28, -1), (29, 4096), (30, 4096), (31, -1), (32, 524288), (33, 2097152), (34, -1), (35, 1073741824), (36, -1), (37, -1), (38, 67108864), (39, 2048), (40, 2048), (41, 2048), (42, 262144), (43, 262144), (44, -1), (45, -1), (46, -1), (47, 67108864), (48, 16777216), (49, 67108864), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, 134217728), (9, 65536), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, 134217728), (24, 2048), (25, -1), (26, -1), (27, -1), (28, -1), (29, 1024), (30, 0), (31, -1), (32, 131072), (33, 0), (34, -1), (35, -1), (36, -1), (37, -1), (38, 16777216), (39, 512), (40, 512), (41, 0), (42, 65536), (43, 65536), (44, -1), (45, -1), (46, -1), (47, 16777216), (48, 4194304), (49, 16777216), (50, -1), (51, -1), (52, -1)]

Covered at level 8 : {33, 30, 41}

After reduction : 
 pending  : [8, 40, 9, 29, 32, 38, 39, 42, 43, 47, 48, 49, 23, 24]
 solution : [6, 28, 18, 35]


Before reduction : 
 pending  : [8, 40, 9, 29, 32, 38, 39, 42, 43, 47, 48, 49, 23, 24]
 solution : [6, 28, 18, 35]

Essensial at level 8 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, 134217728), (9, 65536), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, 134217728), (24, 2048), (25, -1), (26, -1), (27, -1), (28, -1), (29, 1024), (30, 0), (31, -1), (32, 131072), (33, 0), (34, -1), (35, -1), (36, -1), (37, -1), (38, 16777216), (39, 512), (40, 512), (41, 0), (42, 65536), (43, 65536), (44, -1), (45, -1), (46, -1), (47, 16777216), (48, 4194304), (49, 16777216), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, 134217728), (9, 65536), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, 134217728), (24, 2048), (25, -1), (26, -1), (27, -1), (28, -1), (29, 1024), (30, -1), (31, -1), (32, 131072), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, 16777216), (39, 512), (40, 512), (41, -1), (42, 65536), (43, 65536), (44, -1), (45, -1), (46, -1), (47, 16777216), (48, 4194304), (49, 16777216), (50, -1), (51, -1), (52, -1)]

Covered at level 8 : set()

After reduction : 
 pending  : [8, 40, 9, 29, 32, 38, 39, 42, 43, 47, 48, 49, 23, 24]
 solution : [6, 28, 18, 35]


Solution : [6, 28, 18, 35] has cost 30.


Before backtrack at level 8
 pending : [8, 40, 9, 29, 32, 38, 39, 42, 43, 47, 48, 49, 23, 24]
 solution : [6, 28, 18, 35]

After backtrack at level 8
 pending : [8, 40, 9, 29, 32, 38, 39, 42, 43, 47, 48, 49, 23, 24, 30, 33, 41]
 solution : [6, 28, 18, 35]


Invert decision for 35 at level 7


New level: 8
 pending : [8, 40, 9, 29, 32, 38, 39, 42, 43, 47, 48, 49, 23, 24, 30, 33, 41]
 solution : [6, 28, 18]


Before reduction : 
 pending  : [8, 40, 9, 29, 32, 38, 39, 42, 43, 47, 48, 49, 23, 24, 30, 33, 41]
 solution : [6, 28, 18]

Essensial at level 8 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, 134217728), (9, 65536), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, 134217728), (24, 2048), (25, -1), (26, -1), (27, -1), (28, -1), (29, 1024), (30, -1), (31, -1), (32, 131072), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, 16777216), (39, 512), (40, 512), (41, -1), (42, 65536), (43, 65536), (44, -1), (45, -1), (46, -1), (47, 16777216), (48, 4194304), (49, 16777216), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, 134217728), (9, 262144), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, 134217728), (24, 536870912), (25, -1), (26, -1), (27, -1), (28, -1), (29, 4096), (30, 4096), (31, -1), (32, 524288), (33, 2097152), (34, -1), (35, -1), (36, -1), (37, -1), (38, 67108864), (39, 2048), (40, 2048), (41, 2048), (42, 262144), (43, 262144), (44, -1), (45, -1), (46, -1), (47, 67108864), (48, 16777216), (49, 67108864), (50, -1), (51, -1), (52, -1)]

Covered at level 8 : set()

After reduction : 
 pending  : [8, 40, 9, 29, 32, 38, 39, 42, 43, 47, 48, 49, 23, 24, 30, 33, 41]
 solution : [6, 28, 18]


Solution : [6, 28, 18] has cost 17.


Decide in level 8 among pending : [8, 40, 9, 29, 32, 38, 39, 42, 43, 47, 48, 49, 23, 24, 30, 33, 41]

Coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, 134217728), (9, 262144), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, 134217728), (24, 536870912), (25, -1), (26, -1), (27, -1), (28, -1), (29, 4096), (30, 4096), (31, -1), (32, 524288), (33, 2097152), (34, -1), (35, -1), (36, -1), (37, -1), (38, 67108864), (39, 2048), (40, 2048), (41, 2048), (42, 262144), (43, 262144), (44, -1), (45, -1), (46, -1), (47, 67108864), (48, 16777216), (49, 67108864), (50, -1), (51, -1), (52, -1)]

Decide 24 with phase True at level 8

After decision at level 8
 pending : [8, 40, 9, 29, 32, 38, 39, 42, 43, 47, 48, 49, 23, 30, 33, 41]
 solution : [6, 28, 18, 24]


New level: 9
 pending : [8, 40, 9, 29, 32, 38, 39, 42, 43, 47, 48, 49, 23, 30, 33, 41]
 solution : [6, 28, 18, 24]


Before reduction : 
 pending  : [8, 40, 9, 29, 32, 38, 39, 42, 43, 47, 48, 49, 23, 30, 33, 41]
 solution : [6, 28, 18, 24]

Essensial at level 9 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, 134217728), (9, 262144), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, 134217728), (24, 536870912), (25, -1), (26, -1), (27, -1), (28, -1), (29, 4096), (30, 4096), (31, -1), (32, 524288), (33, 2097152), (34, -1), (35, -1), (36, -1), (37, -1), (38, 67108864), (39, 2048), (40, 2048), (41, 2048), (42, 262144), (43, 262144), (44, -1), (45, -1), (46, -1), (47, 67108864), (48, 16777216), (49, 67108864), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, 33554432), (9, 65536), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, 33554432), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, 1024), (30, 0), (31, -1), (32, 131072), (33, 0), (34, -1), (35, -1), (36, -1), (37, -1), (38, 16777216), (39, 512), (40, 512), (41, 0), (42, 65536), (43, 65536), (44, -1), (45, -1), (46, -1), (47, 16777216), (48, 4194304), (49, 33554432), (50, -1), (51, -1), (52, -1)]

Covered at level 9 : {33, 30, 41}

After reduction : 
 pending  : [8, 40, 9, 29, 32, 38, 39, 42, 43, 47, 48, 49, 23]
 solution : [6, 28, 18, 24]


Before reduction : 
 pending  : [8, 40, 9, 29, 32, 38, 39, 42, 43, 47, 48, 49, 23]
 solution : [6, 28, 18, 24]

Essensial at level 9 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, 33554432), (9, 65536), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, 33554432), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, 1024), (30, 0), (31, -1), (32, 131072), (33, 0), (34, -1), (35, -1), (36, -1), (37, -1), (38, 16777216), (39, 512), (40, 512), (41, 0), (42, 65536), (43, 65536), (44, -1), (45, -1), (46, -1), (47, 16777216), (48, 4194304), (49, 33554432), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, 33554432), (9, 65536), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, 33554432), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, 1024), (30, -1), (31, -1), (32, 131072), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, 16777216), (39, 512), (40, 512), (41, -1), (42, 65536), (43, 65536), (44, -1), (45, -1), (46, -1), (47, 16777216), (48, 4194304), (49, 33554432), (50, -1), (51, -1), (52, -1)]

Covered at level 9 : set()

After reduction : 
 pending  : [8, 40, 9, 29, 32, 38, 39, 42, 43, 47, 48, 49, 23]
 solution : [6, 28, 18, 24]


Solution : [6, 28, 18, 24] has cost 24.


Before backtrack at level 9
 pending : [8, 40, 9, 29, 32, 38, 39, 42, 43, 47, 48, 49, 23]
 solution : [6, 28, 18, 24]

After backtrack at level 9
 pending : [8, 40, 9, 29, 32, 38, 39, 42, 43, 47, 48, 49, 23, 30, 33, 41]
 solution : [6, 28, 18, 24]


Invert decision for 24 at level 8


New level: 9
 pending : [8, 40, 9, 29, 32, 38, 39, 42, 43, 47, 48, 49, 23, 30, 33, 41]
 solution : [6, 28, 18]


Before reduction : 
 pending  : [8, 40, 9, 29, 32, 38, 39, 42, 43, 47, 48, 49, 23, 30, 33, 41]
 solution : [6, 28, 18]

Essensial at level 9 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, 33554432), (9, 65536), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, 33554432), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, 1024), (30, -1), (31, -1), (32, 131072), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, 16777216), (39, 512), (40, 512), (41, -1), (42, 65536), (43, 65536), (44, -1), (45, -1), (46, -1), (47, 16777216), (48, 4194304), (49, 33554432), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, 134217728), (9, 262144), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, 134217728), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, 4096), (30, 4096), (31, -1), (32, 524288), (33, 2097152), (34, -1), (35, -1), (36, -1), (37, -1), (38, 67108864), (39, 2048), (40, 2048), (41, 2048), (42, 262144), (43, 262144), (44, -1), (45, -1), (46, -1), (47, 67108864), (48, 16777216), (49, 67108864), (50, -1), (51, -1), (52, -1)]

Covered at level 9 : set()

After reduction : 
 pending  : [8, 40, 9, 29, 32, 38, 39, 42, 43, 47, 48, 49, 23, 30, 33, 41]
 solution : [6, 28, 18]


Solution : [6, 28, 18] has cost 17.


Decide in level 9 among pending : [8, 40, 9, 29, 32, 38, 39, 42, 43, 47, 48, 49, 23, 30, 33, 41]

Coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, 134217728), (9, 262144), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, 134217728), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, 4096), (30, 4096), (31, -1), (32, 524288), (33, 2097152), (34, -1), (35, -1), (36, -1), (37, -1), (38, 67108864), (39, 2048), (40, 2048), (41, 2048), (42, 262144), (43, 262144), (44, -1), (45, -1), (46, -1), (47, 67108864), (48, 16777216), (49, 67108864), (50, -1), (51, -1), (52, -1)]

Decide 8 with phase True at level 9

After decision at level 9
 pending : [40, 9, 29, 32, 38, 39, 42, 43, 47, 48, 49, 23, 30, 33, 41]
 solution : [6, 28, 18, 8]


New level: 10
 pending : [40, 9, 29, 32, 38, 39, 42, 43, 47, 48, 49, 23, 30, 33, 41]
 solution : [6, 28, 18, 8]


Before reduction : 
 pending  : [40, 9, 29, 32, 38, 39, 42, 43, 47, 48, 49, 23, 30, 33, 41]
 solution : [6, 28, 18, 8]

Essensial at level 10 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, 134217728), (9, 262144), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, 134217728), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, 4096), (30, 4096), (31, -1), (32, 524288), (33, 2097152), (34, -1), (35, -1), (36, -1), (37, -1), (38, 67108864), (39, 2048), (40, 2048), (41, 2048), (42, 262144), (43, 262144), (44, -1), (45, -1), (46, -1), (47, 67108864), (48, 16777216), (49, 67108864), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, 0), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, 0), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, 0), (30, 0), (31, -1), (32, 0), (33, 0), (34, -1), (35, -1), (36, -1), (37, -1), (38, 0), (39, 0), (40, 0), (41, 0), (42, 0), (43, 0), (44, -1), (45, -1), (46, -1), (47, 0), (48, 0), (49, 0), (50, -1), (51, -1), (52, -1)]

Covered at level 10 : {32, 33, 38, 39, 40, 9, 42, 43, 41, 47, 48, 49, 23, 29, 30}

After reduction : 
 pending  : []
 solution : [6, 28, 18, 8]


Before reduction : 
 pending  : []
 solution : [6, 28, 18, 8]

Essensial at level 10 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, 0), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, 0), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, 0), (30, 0), (31, -1), (32, 0), (33, 0), (34, -1), (35, -1), (36, -1), (37, -1), (38, 0), (39, 0), (40, 0), (41, 0), (42, 0), (43, 0), (44, -1), (45, -1), (46, -1), (47, 0), (48, 0), (49, 0), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 10 : set()

After reduction : 
 pending  : []
 solution : [6, 28, 18, 8]


Solution : [6, 28, 18, 8] has cost 21.


Before backtrack at level 10
 pending : []
 solution : [6, 28, 18, 8]

After backtrack at level 10
 pending : [40, 9, 29, 32, 38, 39, 42, 43, 47, 48, 49, 23, 30, 33, 41]
 solution : [6, 28, 18, 8]


Invert decision for 8 at level 9


New level: 10
 pending : [40, 9, 29, 32, 38, 39, 42, 43, 47, 48, 49, 23, 30, 33, 41]
 solution : [6, 28, 18]


Before reduction : 
 pending  : [40, 9, 29, 32, 38, 39, 42, 43, 47, 48, 49, 23, 30, 33, 41]
 solution : [6, 28, 18]

Essensial at level 10 : {23}

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, 0), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, 0), (30, 0), (31, -1), (32, 0), (33, 0), (34, -1), (35, -1), (36, -1), (37, -1), (38, 0), (39, 0), (40, 0), (41, 0), (42, 0), (43, 0), (44, -1), (45, -1), (46, -1), (47, 0), (48, 0), (49, 0), (50, -1), (51, -1), (52, -1)]

Covered at level 10 : {32, 33, 38, 39, 40, 9, 42, 43, 41, 47, 48, 49, 29, 30}

After reduction : 
 pending  : []
 solution : [6, 28, 18, 23]


Before reduction : 
 pending  : []
 solution : [6, 28, 18, 23]

Essensial at level 10 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, 0), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, 0), (30, 0), (31, -1), (32, 0), (33, 0), (34, -1), (35, -1), (36, -1), (37, -1), (38, 0), (39, 0), (40, 0), (41, 0), (42, 0), (43, 0), (44, -1), (45, -1), (46, -1), (47, 0), (48, 0), (49, 0), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 10 : set()

After reduction : 
 pending  : []
 solution : [6, 28, 18, 23]


Solution : [6, 28, 18, 23] has cost 24.


Before backtrack at level 10
 pending : []
 solution : [6, 28, 18, 23]

After backtrack at level 10
 pending : [23, 40, 9, 29, 32, 38, 39, 42, 43, 47, 48, 49, 30, 33, 41]
 solution : [6, 28, 18]


Before backtrack at level 9
 pending : [23, 40, 9, 29, 32, 38, 39, 42, 43, 47, 48, 49, 30, 33, 41]
 solution : [6, 28, 18]

After backtrack at level 9
 pending : [23, 40, 9, 29, 32, 38, 39, 42, 43, 47, 48, 49, 30, 33, 41, 8]
 solution : [6, 28, 18]


Before backtrack at level 8
 pending : [23, 40, 9, 29, 32, 38, 39, 42, 43, 47, 48, 49, 30, 33, 41, 8]
 solution : [6, 28, 18]

After backtrack at level 8
 pending : [23, 40, 9, 29, 32, 38, 39, 42, 43, 47, 48, 49, 30, 33, 41, 8, 24]
 solution : [6, 28, 18]


Before backtrack at level 7
 pending : [23, 40, 9, 29, 32, 38, 39, 42, 43, 47, 48, 49, 30, 33, 41, 8, 24]
 solution : [6, 28, 18]

After backtrack at level 7
 pending : [23, 40, 9, 29, 32, 38, 39, 42, 43, 47, 48, 49, 30, 33, 41, 8, 24, 25, 37, 0, 16, 19, 22, 20, 15, 21, 14, 35]
 solution : [6, 28, 18]


Invert decision for 18 at level 6


New level: 7
 pending : [23, 40, 9, 29, 32, 38, 39, 42, 43, 47, 48, 49, 30, 33, 41, 8, 24, 25, 37, 0, 16, 19, 22, 20, 15, 21, 14, 35]
 solution : [6, 28]


Before reduction : 
 pending  : [23, 40, 9, 29, 32, 38, 39, 42, 43, 47, 48, 49, 30, 33, 41, 8, 24, 25, 37, 0, 16, 19, 22, 20, 15, 21, 14, 35]
 solution : [6, 28]

Essensial at level 7 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, 1048576), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, 134217728), (9, 1048576), (10, -1), (11, -1), (12, -1), (13, -1), (14, 67108864), (15, 33554432), (16, 1572864), (17, -1), (18, -1), (19, 524288), (20, 8388608), (21, 16777216), (22, 262144), (23, 134217728), (24, 536870912), (25, 4194304), (26, -1), (27, -1), (28, -1), (29, 16384), (30, 16384), (31, -1), (32, 1048576), (33, 2097152), (34, -1), (35, 1073741824), (36, -1), (37, 4194304), (38, 134217728), (39, 16384), (40, 268435456), (41, 536870912), (42, 524288), (43, 524288), (44, -1), (45, -1), (46, -1), (47, 67108864), (48, 16777216), (49, 67108864), (50, -1), (51, -1), (52, -1)]

Covered at level 7 : set()

After reduction : 
 pending  : [23, 40, 9, 29, 32, 38, 39, 42, 43, 47, 48, 49, 30, 33, 41, 8, 24, 25, 37, 0, 16, 19, 22, 20, 15, 21, 14, 35]
 solution : [6, 28]


Solution : [6, 28] has cost 10.


Decide in level 7 among pending : [23, 40, 9, 29, 32, 38, 39, 42, 43, 47, 48, 49, 30, 33, 41, 8, 24, 25, 37, 0, 16, 19, 22, 20, 15, 21, 14, 35]

Coverage : [(0, 1048576), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, 134217728), (9, 1048576), (10, -1), (11, -1), (12, -1), (13, -1), (14, 67108864), (15, 33554432), (16, 1572864), (17, -1), (18, -1), (19, 524288), (20, 8388608), (21, 16777216), (22, 262144), (23, 134217728), (24, 536870912), (25, 4194304), (26, -1), (27, -1), (28, -1), (29, 16384), (30, 16384), (31, -1), (32, 1048576), (33, 2097152), (34, -1), (35, 1073741824), (36, -1), (37, 4194304), (38, 134217728), (39, 16384), (40, 268435456), (41, 536870912), (42, 524288), (43, 524288), (44, -1), (45, -1), (46, -1), (47, 67108864), (48, 16777216), (49, 67108864), (50, -1), (51, -1), (52, -1)]

Decide 35 with phase True at level 7

After decision at level 7
 pending : [23, 40, 9, 29, 32, 38, 39, 42, 43, 47, 48, 49, 30, 33, 41, 8, 24, 25, 37, 0, 16, 19, 22, 20, 15, 21, 14]
 solution : [6, 28, 35]


New level: 8
 pending : [23, 40, 9, 29, 32, 38, 39, 42, 43, 47, 48, 49, 30, 33, 41, 8, 24, 25, 37, 0, 16, 19, 22, 20, 15, 21, 14]
 solution : [6, 28, 35]


Before reduction : 
 pending  : [23, 40, 9, 29, 32, 38, 39, 42, 43, 47, 48, 49, 30, 33, 41, 8, 24, 25, 37, 0, 16, 19, 22, 20, 15, 21, 14]
 solution : [6, 28, 35]

Essensial at level 8 : set()

Before removed
 coverage : [(0, 1048576), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, 134217728), (9, 1048576), (10, -1), (11, -1), (12, -1), (13, -1), (14, 67108864), (15, 33554432), (16, 1572864), (17, -1), (18, -1), (19, 524288), (20, 8388608), (21, 16777216), (22, 262144), (23, 134217728), (24, 536870912), (25, 4194304), (26, -1), (27, -1), (28, -1), (29, 16384), (30, 16384), (31, -1), (32, 1048576), (33, 2097152), (34, -1), (35, 1073741824), (36, -1), (37, 4194304), (38, 134217728), (39, 16384), (40, 268435456), (41, 536870912), (42, 524288), (43, 524288), (44, -1), (45, -1), (46, -1), (47, 67108864), (48, 16777216), (49, 67108864), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, 1048576), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, 134217728), (9, 262144), (10, -1), (11, -1), (12, -1), (13, -1), (14, 67108864), (15, 33554432), (16, 1572864), (17, -1), (18, -1), (19, 524288), (20, 8388608), (21, 16777216), (22, 262144), (23, 134217728), (24, 16384), (25, 4194304), (26, -1), (27, -1), (28, -1), (29, 4096), (30, 0), (31, -1), (32, 262144), (33, 0), (34, -1), (35, -1), (36, -1), (37, 4194304), (38, 33554432), (39, 4096), (40, 268435456), (41, 16384), (42, 131072), (43, 131072), (44, -1), (45, -1), (46, -1), (47, 16777216), (48, 4194304), (49, 16777216), (50, -1), (51, -1), (52, -1)]

Covered at level 8 : {33, 30}

After reduction : 
 pending  : [23, 40, 9, 29, 32, 38, 39, 42, 43, 47, 48, 49, 41, 8, 24, 25, 37, 0, 16, 19, 22, 20, 15, 21, 14]
 solution : [6, 28, 35]


Before reduction : 
 pending  : [23, 40, 9, 29, 32, 38, 39, 42, 43, 47, 48, 49, 41, 8, 24, 25, 37, 0, 16, 19, 22, 20, 15, 21, 14]
 solution : [6, 28, 35]

Essensial at level 8 : set()

Before removed
 coverage : [(0, 1048576), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, 134217728), (9, 262144), (10, -1), (11, -1), (12, -1), (13, -1), (14, 67108864), (15, 33554432), (16, 1572864), (17, -1), (18, -1), (19, 524288), (20, 8388608), (21, 16777216), (22, 262144), (23, 134217728), (24, 16384), (25, 4194304), (26, -1), (27, -1), (28, -1), (29, 4096), (30, 0), (31, -1), (32, 262144), (33, 0), (34, -1), (35, -1), (36, -1), (37, 4194304), (38, 33554432), (39, 4096), (40, 268435456), (41, 16384), (42, 131072), (43, 131072), (44, -1), (45, -1), (46, -1), (47, 16777216), (48, 4194304), (49, 16777216), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, 1048576), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, 134217728), (9, 262144), (10, -1), (11, -1), (12, -1), (13, -1), (14, 67108864), (15, 33554432), (16, 1572864), (17, -1), (18, -1), (19, 524288), (20, 8388608), (21, 16777216), (22, 262144), (23, 134217728), (24, 16384), (25, 4194304), (26, -1), (27, -1), (28, -1), (29, 4096), (30, -1), (31, -1), (32, 262144), (33, -1), (34, -1), (35, -1), (36, -1), (37, 4194304), (38, 33554432), (39, 4096), (40, 268435456), (41, 16384), (42, 131072), (43, 131072), (44, -1), (45, -1), (46, -1), (47, 16777216), (48, 4194304), (49, 16777216), (50, -1), (51, -1), (52, -1)]

Covered at level 8 : set()

After reduction : 
 pending  : [23, 40, 9, 29, 32, 38, 39, 42, 43, 47, 48, 49, 41, 8, 24, 25, 37, 0, 16, 19, 22, 20, 15, 21, 14]
 solution : [6, 28, 35]


Solution : [6, 28, 35] has cost 23.


Before backtrack at level 8
 pending : [23, 40, 9, 29, 32, 38, 39, 42, 43, 47, 48, 49, 41, 8, 24, 25, 37, 0, 16, 19, 22, 20, 15, 21, 14]
 solution : [6, 28, 35]

After backtrack at level 8
 pending : [23, 40, 9, 29, 32, 38, 39, 42, 43, 47, 48, 49, 41, 8, 24, 25, 37, 0, 16, 19, 22, 20, 15, 21, 14, 30, 33]
 solution : [6, 28, 35]


Invert decision for 35 at level 7


New level: 8
 pending : [23, 40, 9, 29, 32, 38, 39, 42, 43, 47, 48, 49, 41, 8, 24, 25, 37, 0, 16, 19, 22, 20, 15, 21, 14, 30, 33]
 solution : [6, 28]


Before reduction : 
 pending  : [23, 40, 9, 29, 32, 38, 39, 42, 43, 47, 48, 49, 41, 8, 24, 25, 37, 0, 16, 19, 22, 20, 15, 21, 14, 30, 33]
 solution : [6, 28]

Essensial at level 8 : set()

Before removed
 coverage : [(0, 1048576), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, 134217728), (9, 262144), (10, -1), (11, -1), (12, -1), (13, -1), (14, 67108864), (15, 33554432), (16, 1572864), (17, -1), (18, -1), (19, 524288), (20, 8388608), (21, 16777216), (22, 262144), (23, 134217728), (24, 16384), (25, 4194304), (26, -1), (27, -1), (28, -1), (29, 4096), (30, -1), (31, -1), (32, 262144), (33, -1), (34, -1), (35, -1), (36, -1), (37, 4194304), (38, 33554432), (39, 4096), (40, 268435456), (41, 16384), (42, 131072), (43, 131072), (44, -1), (45, -1), (46, -1), (47, 16777216), (48, 4194304), (49, 16777216), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, 1048576), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, 134217728), (9, 1048576), (10, -1), (11, -1), (12, -1), (13, -1), (14, 67108864), (15, 33554432), (16, 1572864), (17, -1), (18, -1), (19, 524288), (20, 8388608), (21, 16777216), (22, 262144), (23, 134217728), (24, 536870912), (25, 4194304), (26, -1), (27, -1), (28, -1), (29, 16384), (30, 16384), (31, -1), (32, 1048576), (33, 2097152), (34, -1), (35, -1), (36, -1), (37, 4194304), (38, 134217728), (39, 16384), (40, 268435456), (41, 536870912), (42, 524288), (43, 524288), (44, -1), (45, -1), (46, -1), (47, 67108864), (48, 16777216), (49, 67108864), (50, -1), (51, -1), (52, -1)]

Covered at level 8 : set()

After reduction : 
 pending  : [23, 40, 9, 29, 32, 38, 39, 42, 43, 47, 48, 49, 41, 8, 24, 25, 37, 0, 16, 19, 22, 20, 15, 21, 14, 30, 33]
 solution : [6, 28]


Solution : [6, 28] has cost 10.


Decide in level 8 among pending : [23, 40, 9, 29, 32, 38, 39, 42, 43, 47, 48, 49, 41, 8, 24, 25, 37, 0, 16, 19, 22, 20, 15, 21, 14, 30, 33]

Coverage : [(0, 1048576), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, 134217728), (9, 1048576), (10, -1), (11, -1), (12, -1), (13, -1), (14, 67108864), (15, 33554432), (16, 1572864), (17, -1), (18, -1), (19, 524288), (20, 8388608), (21, 16777216), (22, 262144), (23, 134217728), (24, 536870912), (25, 4194304), (26, -1), (27, -1), (28, -1), (29, 16384), (30, 16384), (31, -1), (32, 1048576), (33, 2097152), (34, -1), (35, -1), (36, -1), (37, 4194304), (38, 134217728), (39, 16384), (40, 268435456), (41, 536870912), (42, 524288), (43, 524288), (44, -1), (45, -1), (46, -1), (47, 67108864), (48, 16777216), (49, 67108864), (50, -1), (51, -1), (52, -1)]

Decide 41 with phase True at level 8

After decision at level 8
 pending : [23, 40, 9, 29, 32, 38, 39, 42, 43, 47, 48, 49, 8, 24, 25, 37, 0, 16, 19, 22, 20, 15, 21, 14, 30, 33]
 solution : [6, 28, 41]


New level: 9
 pending : [23, 40, 9, 29, 32, 38, 39, 42, 43, 47, 48, 49, 8, 24, 25, 37, 0, 16, 19, 22, 20, 15, 21, 14, 30, 33]
 solution : [6, 28, 41]


Before reduction : 
 pending  : [23, 40, 9, 29, 32, 38, 39, 42, 43, 47, 48, 49, 8, 24, 25, 37, 0, 16, 19, 22, 20, 15, 21, 14, 30, 33]
 solution : [6, 28, 41]

Essensial at level 9 : set()

Before removed
 coverage : [(0, 1048576), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, 134217728), (9, 1048576), (10, -1), (11, -1), (12, -1), (13, -1), (14, 67108864), (15, 33554432), (16, 1572864), (17, -1), (18, -1), (19, 524288), (20, 8388608), (21, 16777216), (22, 262144), (23, 134217728), (24, 536870912), (25, 4194304), (26, -1), (27, -1), (28, -1), (29, 16384), (30, 16384), (31, -1), (32, 1048576), (33, 2097152), (34, -1), (35, -1), (36, -1), (37, 4194304), (38, 134217728), (39, 16384), (40, 268435456), (41, 536870912), (42, 524288), (43, 524288), (44, -1), (45, -1), (46, -1), (47, 67108864), (48, 16777216), (49, 67108864), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, 1048576), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, 134217728), (9, 1048576), (10, -1), (11, -1), (12, -1), (13, -1), (14, 67108864), (15, 33554432), (16, 1572864), (17, -1), (18, -1), (19, 524288), (20, 8388608), (21, 16777216), (22, 262144), (23, 134217728), (24, 268435456), (25, 4194304), (26, -1), (27, -1), (28, -1), (29, 16384), (30, 8192), (31, -1), (32, 1048576), (33, 1048576), (34, -1), (35, -1), (36, -1), (37, 4194304), (38, 134217728), (39, 16384), (40, 134217728), (41, -1), (42, 524288), (43, 524288), (44, -1), (45, -1), (46, -1), (47, 67108864), (48, 16777216), (49, 67108864), (50, -1), (51, -1), (52, -1)]

Covered at level 9 : set()

After reduction : 
 pending  : [23, 40, 9, 29, 32, 38, 39, 42, 43, 47, 48, 49, 8, 24, 25, 37, 0, 16, 19, 22, 20, 15, 21, 14, 30, 33]
 solution : [6, 28, 41]


Solution : [6, 28, 41] has cost 24.


Before backtrack at level 9
 pending : [23, 40, 9, 29, 32, 38, 39, 42, 43, 47, 48, 49, 8, 24, 25, 37, 0, 16, 19, 22, 20, 15, 21, 14, 30, 33]
 solution : [6, 28, 41]

After backtrack at level 9
 pending : [23, 40, 9, 29, 32, 38, 39, 42, 43, 47, 48, 49, 8, 24, 25, 37, 0, 16, 19, 22, 20, 15, 21, 14, 30, 33]
 solution : [6, 28, 41]


Invert decision for 41 at level 8


New level: 9
 pending : [23, 40, 9, 29, 32, 38, 39, 42, 43, 47, 48, 49, 8, 24, 25, 37, 0, 16, 19, 22, 20, 15, 21, 14, 30, 33]
 solution : [6, 28]


Before reduction : 
 pending  : [23, 40, 9, 29, 32, 38, 39, 42, 43, 47, 48, 49, 8, 24, 25, 37, 0, 16, 19, 22, 20, 15, 21, 14, 30, 33]
 solution : [6, 28]

Essensial at level 9 : set()

Before removed
 coverage : [(0, 1048576), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, 134217728), (9, 1048576), (10, -1), (11, -1), (12, -1), (13, -1), (14, 67108864), (15, 33554432), (16, 1572864), (17, -1), (18, -1), (19, 524288), (20, 8388608), (21, 16777216), (22, 262144), (23, 134217728), (24, 268435456), (25, 4194304), (26, -1), (27, -1), (28, -1), (29, 16384), (30, 8192), (31, -1), (32, 1048576), (33, 1048576), (34, -1), (35, -1), (36, -1), (37, 4194304), (38, 134217728), (39, 16384), (40, 134217728), (41, -1), (42, 524288), (43, 524288), (44, -1), (45, -1), (46, -1), (47, 67108864), (48, 16777216), (49, 67108864), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, 1048576), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, 134217728), (9, 1048576), (10, -1), (11, -1), (12, -1), (13, -1), (14, 67108864), (15, 33554432), (16, 1572864), (17, -1), (18, -1), (19, 524288), (20, 8388608), (21, 16777216), (22, 262144), (23, 134217728), (24, 536870912), (25, 4194304), (26, -1), (27, -1), (28, -1), (29, 16384), (30, 16384), (31, -1), (32, 1048576), (33, 2097152), (34, -1), (35, -1), (36, -1), (37, 4194304), (38, 134217728), (39, 16384), (40, 268435456), (41, -1), (42, 524288), (43, 524288), (44, -1), (45, -1), (46, -1), (47, 67108864), (48, 16777216), (49, 67108864), (50, -1), (51, -1), (52, -1)]

Covered at level 9 : set()

After reduction : 
 pending  : [23, 40, 9, 29, 32, 38, 39, 42, 43, 47, 48, 49, 8, 24, 25, 37, 0, 16, 19, 22, 20, 15, 21, 14, 30, 33]
 solution : [6, 28]


Solution : [6, 28] has cost 10.


Decide in level 9 among pending : [23, 40, 9, 29, 32, 38, 39, 42, 43, 47, 48, 49, 8, 24, 25, 37, 0, 16, 19, 22, 20, 15, 21, 14, 30, 33]

Coverage : [(0, 1048576), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, 134217728), (9, 1048576), (10, -1), (11, -1), (12, -1), (13, -1), (14, 67108864), (15, 33554432), (16, 1572864), (17, -1), (18, -1), (19, 524288), (20, 8388608), (21, 16777216), (22, 262144), (23, 134217728), (24, 536870912), (25, 4194304), (26, -1), (27, -1), (28, -1), (29, 16384), (30, 16384), (31, -1), (32, 1048576), (33, 2097152), (34, -1), (35, -1), (36, -1), (37, 4194304), (38, 134217728), (39, 16384), (40, 268435456), (41, -1), (42, 524288), (43, 524288), (44, -1), (45, -1), (46, -1), (47, 67108864), (48, 16777216), (49, 67108864), (50, -1), (51, -1), (52, -1)]

Decide 24 with phase True at level 9

After decision at level 9
 pending : [23, 40, 9, 29, 32, 38, 39, 42, 43, 47, 48, 49, 8, 25, 37, 0, 16, 19, 22, 20, 15, 21, 14, 30, 33]
 solution : [6, 28, 24]


New level: 10
 pending : [23, 40, 9, 29, 32, 38, 39, 42, 43, 47, 48, 49, 8, 25, 37, 0, 16, 19, 22, 20, 15, 21, 14, 30, 33]
 solution : [6, 28, 24]


Before reduction : 
 pending  : [23, 40, 9, 29, 32, 38, 39, 42, 43, 47, 48, 49, 8, 25, 37, 0, 16, 19, 22, 20, 15, 21, 14, 30, 33]
 solution : [6, 28, 24]

Essensial at level 10 : set()

Before removed
 coverage : [(0, 1048576), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, 134217728), (9, 1048576), (10, -1), (11, -1), (12, -1), (13, -1), (14, 67108864), (15, 33554432), (16, 1572864), (17, -1), (18, -1), (19, 524288), (20, 8388608), (21, 16777216), (22, 262144), (23, 134217728), (24, 536870912), (25, 4194304), (26, -1), (27, -1), (28, -1), (29, 16384), (30, 16384), (31, -1), (32, 1048576), (33, 2097152), (34, -1), (35, -1), (36, -1), (37, 4194304), (38, 134217728), (39, 16384), (40, 268435456), (41, -1), (42, 524288), (43, 524288), (44, -1), (45, -1), (46, -1), (47, 67108864), (48, 16777216), (49, 67108864), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, 1048576), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, 33554432), (9, 262144), (10, -1), (11, -1), (12, -1), (13, -1), (14, 67108864), (15, 33554432), (16, 1572864), (17, -1), (18, -1), (19, 524288), (20, 8388608), (21, 16777216), (22, 262144), (23, 33554432), (24, -1), (25, 4194304), (26, -1), (27, -1), (28, -1), (29, 4096), (30, 0), (31, -1), (32, 262144), (33, 0), (34, -1), (35, -1), (36, -1), (37, 4194304), (38, 33554432), (39, 4096), (40, 134217728), (41, -1), (42, 131072), (43, 131072), (44, -1), (45, -1), (46, -1), (47, 16777216), (48, 4194304), (49, 33554432), (50, -1), (51, -1), (52, -1)]

Covered at level 10 : {33, 30}

After reduction : 
 pending  : [23, 40, 9, 29, 32, 38, 39, 42, 43, 47, 48, 49, 8, 25, 37, 0, 16, 19, 22, 20, 15, 21, 14]
 solution : [6, 28, 24]


Before reduction : 
 pending  : [23, 40, 9, 29, 32, 38, 39, 42, 43, 47, 48, 49, 8, 25, 37, 0, 16, 19, 22, 20, 15, 21, 14]
 solution : [6, 28, 24]

Essensial at level 10 : set()

Before removed
 coverage : [(0, 1048576), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, 33554432), (9, 262144), (10, -1), (11, -1), (12, -1), (13, -1), (14, 67108864), (15, 33554432), (16, 1572864), (17, -1), (18, -1), (19, 524288), (20, 8388608), (21, 16777216), (22, 262144), (23, 33554432), (24, -1), (25, 4194304), (26, -1), (27, -1), (28, -1), (29, 4096), (30, 0), (31, -1), (32, 262144), (33, 0), (34, -1), (35, -1), (36, -1), (37, 4194304), (38, 33554432), (39, 4096), (40, 134217728), (41, -1), (42, 131072), (43, 131072), (44, -1), (45, -1), (46, -1), (47, 16777216), (48, 4194304), (49, 33554432), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, 1048576), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, 33554432), (9, 262144), (10, -1), (11, -1), (12, -1), (13, -1), (14, 67108864), (15, 33554432), (16, 1572864), (17, -1), (18, -1), (19, 524288), (20, 8388608), (21, 16777216), (22, 262144), (23, 33554432), (24, -1), (25, 4194304), (26, -1), (27, -1), (28, -1), (29, 4096), (30, -1), (31, -1), (32, 262144), (33, -1), (34, -1), (35, -1), (36, -1), (37, 4194304), (38, 33554432), (39, 4096), (40, 134217728), (41, -1), (42, 131072), (43, 131072), (44, -1), (45, -1), (46, -1), (47, 16777216), (48, 4194304), (49, 33554432), (50, -1), (51, -1), (52, -1)]

Covered at level 10 : set()

After reduction : 
 pending  : [23, 40, 9, 29, 32, 38, 39, 42, 43, 47, 48, 49, 8, 25, 37, 0, 16, 19, 22, 20, 15, 21, 14]
 solution : [6, 28, 24]


Solution : [6, 28, 24] has cost 17.


Decide in level 10 among pending : [23, 40, 9, 29, 32, 38, 39, 42, 43, 47, 48, 49, 8, 25, 37, 0, 16, 19, 22, 20, 15, 21, 14]

Coverage : [(0, 1048576), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, 33554432), (9, 262144), (10, -1), (11, -1), (12, -1), (13, -1), (14, 67108864), (15, 33554432), (16, 1572864), (17, -1), (18, -1), (19, 524288), (20, 8388608), (21, 16777216), (22, 262144), (23, 33554432), (24, -1), (25, 4194304), (26, -1), (27, -1), (28, -1), (29, 4096), (30, -1), (31, -1), (32, 262144), (33, -1), (34, -1), (35, -1), (36, -1), (37, 4194304), (38, 33554432), (39, 4096), (40, 134217728), (41, -1), (42, 131072), (43, 131072), (44, -1), (45, -1), (46, -1), (47, 16777216), (48, 4194304), (49, 33554432), (50, -1), (51, -1), (52, -1)]

Decide 40 with phase True at level 10

After decision at level 10
 pending : [23, 9, 29, 32, 38, 39, 42, 43, 47, 48, 49, 8, 25, 37, 0, 16, 19, 22, 20, 15, 21, 14]
 solution : [6, 28, 24, 40]


New level: 11
 pending : [23, 9, 29, 32, 38, 39, 42, 43, 47, 48, 49, 8, 25, 37, 0, 16, 19, 22, 20, 15, 21, 14]
 solution : [6, 28, 24, 40]


Before reduction : 
 pending  : [23, 9, 29, 32, 38, 39, 42, 43, 47, 48, 49, 8, 25, 37, 0, 16, 19, 22, 20, 15, 21, 14]
 solution : [6, 28, 24, 40]

Essensial at level 11 : set()

Before removed
 coverage : [(0, 1048576), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, 33554432), (9, 262144), (10, -1), (11, -1), (12, -1), (13, -1), (14, 67108864), (15, 33554432), (16, 1572864), (17, -1), (18, -1), (19, 524288), (20, 8388608), (21, 16777216), (22, 262144), (23, 33554432), (24, -1), (25, 4194304), (26, -1), (27, -1), (28, -1), (29, 4096), (30, -1), (31, -1), (32, 262144), (33, -1), (34, -1), (35, -1), (36, -1), (37, 4194304), (38, 33554432), (39, 4096), (40, 134217728), (41, -1), (42, 131072), (43, 131072), (44, -1), (45, -1), (46, -1), (47, 16777216), (48, 4194304), (49, 33554432), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, 524288), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, 8388608), (9, 65536), (10, -1), (11, -1), (12, -1), (13, -1), (14, 33554432), (15, 16777216), (16, 524288), (17, -1), (18, -1), (19, 262144), (20, 8388608), (21, 16777216), (22, 262144), (23, 8388608), (24, -1), (25, 1048576), (26, -1), (27, -1), (28, -1), (29, 1024), (30, -1), (31, -1), (32, 65536), (33, -1), (34, -1), (35, -1), (36, -1), (37, 1048576), (38, 33554432), (39, 1024), (40, -1), (41, -1), (42, 32768), (43, 32768), (44, -1), (45, -1), (46, -1), (47, 8388608), (48, 1048576), (49, 33554432), (50, -1), (51, -1), (52, -1)]

Covered at level 11 : set()

After reduction : 
 pending  : [23, 9, 29, 32, 38, 39, 42, 43, 47, 48, 49, 8, 25, 37, 0, 16, 19, 22, 20, 15, 21, 14]
 solution : [6, 28, 24, 40]


Solution : [6, 28, 24, 40] has cost 35.


Before backtrack at level 11
 pending : [23, 9, 29, 32, 38, 39, 42, 43, 47, 48, 49, 8, 25, 37, 0, 16, 19, 22, 20, 15, 21, 14]
 solution : [6, 28, 24, 40]

After backtrack at level 11
 pending : [23, 9, 29, 32, 38, 39, 42, 43, 47, 48, 49, 8, 25, 37, 0, 16, 19, 22, 20, 15, 21, 14]
 solution : [6, 28, 24, 40]


Invert decision for 40 at level 10


New level: 11
 pending : [23, 9, 29, 32, 38, 39, 42, 43, 47, 48, 49, 8, 25, 37, 0, 16, 19, 22, 20, 15, 21, 14]
 solution : [6, 28, 24]


Before reduction : 
 pending  : [23, 9, 29, 32, 38, 39, 42, 43, 47, 48, 49, 8, 25, 37, 0, 16, 19, 22, 20, 15, 21, 14]
 solution : [6, 28, 24]

Essensial at level 11 : set()

Before removed
 coverage : [(0, 524288), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, 8388608), (9, 65536), (10, -1), (11, -1), (12, -1), (13, -1), (14, 33554432), (15, 16777216), (16, 524288), (17, -1), (18, -1), (19, 262144), (20, 8388608), (21, 16777216), (22, 262144), (23, 8388608), (24, -1), (25, 1048576), (26, -1), (27, -1), (28, -1), (29, 1024), (30, -1), (31, -1), (32, 65536), (33, -1), (34, -1), (35, -1), (36, -1), (37, 1048576), (38, 33554432), (39, 1024), (40, -1), (41, -1), (42, 32768), (43, 32768), (44, -1), (45, -1), (46, -1), (47, 8388608), (48, 1048576), (49, 33554432), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, 1048576), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, 33554432), (9, 262144), (10, -1), (11, -1), (12, -1), (13, -1), (14, 67108864), (15, 33554432), (16, 1572864), (17, -1), (18, -1), (19, 524288), (20, 8388608), (21, 16777216), (22, 262144), (23, 33554432), (24, -1), (25, 4194304), (26, -1), (27, -1), (28, -1), (29, 4096), (30, -1), (31, -1), (32, 262144), (33, -1), (34, -1), (35, -1), (36, -1), (37, 4194304), (38, 33554432), (39, 4096), (40, -1), (41, -1), (42, 131072), (43, 131072), (44, -1), (45, -1), (46, -1), (47, 16777216), (48, 4194304), (49, 33554432), (50, -1), (51, -1), (52, -1)]

Covered at level 11 : set()

After reduction : 
 pending  : [23, 9, 29, 32, 38, 39, 42, 43, 47, 48, 49, 8, 25, 37, 0, 16, 19, 22, 20, 15, 21, 14]
 solution : [6, 28, 24]


Solution : [6, 28, 24] has cost 17.


Decide in level 11 among pending : [23, 9, 29, 32, 38, 39, 42, 43, 47, 48, 49, 8, 25, 37, 0, 16, 19, 22, 20, 15, 21, 14]

Coverage : [(0, 1048576), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, 33554432), (9, 262144), (10, -1), (11, -1), (12, -1), (13, -1), (14, 67108864), (15, 33554432), (16, 1572864), (17, -1), (18, -1), (19, 524288), (20, 8388608), (21, 16777216), (22, 262144), (23, 33554432), (24, -1), (25, 4194304), (26, -1), (27, -1), (28, -1), (29, 4096), (30, -1), (31, -1), (32, 262144), (33, -1), (34, -1), (35, -1), (36, -1), (37, 4194304), (38, 33554432), (39, 4096), (40, -1), (41, -1), (42, 131072), (43, 131072), (44, -1), (45, -1), (46, -1), (47, 16777216), (48, 4194304), (49, 33554432), (50, -1), (51, -1), (52, -1)]

Decide 14 with phase True at level 11

After decision at level 11
 pending : [23, 9, 29, 32, 38, 39, 42, 43, 47, 48, 49, 8, 25, 37, 0, 16, 19, 22, 20, 15, 21]
 solution : [6, 28, 24, 14]


New level: 12
 pending : [23, 9, 29, 32, 38, 39, 42, 43, 47, 48, 49, 8, 25, 37, 0, 16, 19, 22, 20, 15, 21]
 solution : [6, 28, 24, 14]


Before reduction : 
 pending  : [23, 9, 29, 32, 38, 39, 42, 43, 47, 48, 49, 8, 25, 37, 0, 16, 19, 22, 20, 15, 21]
 solution : [6, 28, 24, 14]

Essensial at level 12 : set()

Before removed
 coverage : [(0, 1048576), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, 33554432), (9, 262144), (10, -1), (11, -1), (12, -1), (13, -1), (14, 67108864), (15, 33554432), (16, 1572864), (17, -1), (18, -1), (19, 524288), (20, 8388608), (21, 16777216), (22, 262144), (23, 33554432), (24, -1), (25, 4194304), (26, -1), (27, -1), (28, -1), (29, 4096), (30, -1), (31, -1), (32, 262144), (33, -1), (34, -1), (35, -1), (36, -1), (37, 4194304), (38, 33554432), (39, 4096), (40, -1), (41, -1), (42, 131072), (43, 131072), (44, -1), (45, -1), (46, -1), (47, 16777216), (48, 4194304), (49, 33554432), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, 0), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, 33554432), (9, 65536), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, 0), (16, 0), (17, -1), (18, -1), (19, 0), (20, 65536), (21, 262144), (22, 65536), (23, 33554432), (24, -1), (25, 4096), (26, -1), (27, -1), (28, -1), (29, 1024), (30, -1), (31, -1), (32, 131072), (33, -1), (34, -1), (35, -1), (36, -1), (37, 4096), (38, 33554432), (39, 512), (40, -1), (41, -1), (42, 65536), (43, 65536), (44, -1), (45, -1), (46, -1), (47, 16777216), (48, 4194304), (49, 33554432), (50, -1), (51, -1), (52, -1)]

Covered at level 12 : {0, 16, 19, 15}

After reduction : 
 pending  : [23, 9, 29, 32, 38, 39, 42, 43, 47, 48, 49, 8, 25, 37, 22, 20, 21]
 solution : [6, 28, 24, 14]


Before reduction : 
 pending  : [23, 9, 29, 32, 38, 39, 42, 43, 47, 48, 49, 8, 25, 37, 22, 20, 21]
 solution : [6, 28, 24, 14]

Essensial at level 12 : set()

Before removed
 coverage : [(0, 0), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, 33554432), (9, 65536), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, 0), (16, 0), (17, -1), (18, -1), (19, 0), (20, 65536), (21, 262144), (22, 65536), (23, 33554432), (24, -1), (25, 4096), (26, -1), (27, -1), (28, -1), (29, 1024), (30, -1), (31, -1), (32, 131072), (33, -1), (34, -1), (35, -1), (36, -1), (37, 4096), (38, 33554432), (39, 512), (40, -1), (41, -1), (42, 65536), (43, 65536), (44, -1), (45, -1), (46, -1), (47, 16777216), (48, 4194304), (49, 33554432), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, 33554432), (9, 65536), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, 65536), (21, 262144), (22, 65536), (23, 33554432), (24, -1), (25, 4096), (26, -1), (27, -1), (28, -1), (29, 1024), (30, -1), (31, -1), (32, 131072), (33, -1), (34, -1), (35, -1), (36, -1), (37, 4096), (38, 33554432), (39, 512), (40, -1), (41, -1), (42, 65536), (43, 65536), (44, -1), (45, -1), (46, -1), (47, 16777216), (48, 4194304), (49, 33554432), (50, -1), (51, -1), (52, -1)]

Covered at level 12 : set()

After reduction : 
 pending  : [23, 9, 29, 32, 38, 39, 42, 43, 47, 48, 49, 8, 25, 37, 22, 20, 21]
 solution : [6, 28, 24, 14]


Solution : [6, 28, 24, 14] has cost 26.


Before backtrack at level 12
 pending : [23, 9, 29, 32, 38, 39, 42, 43, 47, 48, 49, 8, 25, 37, 22, 20, 21]
 solution : [6, 28, 24, 14]

After backtrack at level 12
 pending : [23, 9, 29, 32, 38, 39, 42, 43, 47, 48, 49, 8, 25, 37, 22, 20, 21, 0, 16, 19, 15]
 solution : [6, 28, 24, 14]


Invert decision for 14 at level 11


New level: 12
 pending : [23, 9, 29, 32, 38, 39, 42, 43, 47, 48, 49, 8, 25, 37, 22, 20, 21, 0, 16, 19, 15]
 solution : [6, 28, 24]


Before reduction : 
 pending  : [23, 9, 29, 32, 38, 39, 42, 43, 47, 48, 49, 8, 25, 37, 22, 20, 21, 0, 16, 19, 15]
 solution : [6, 28, 24]

Essensial at level 12 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, 33554432), (9, 65536), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, 65536), (21, 262144), (22, 65536), (23, 33554432), (24, -1), (25, 4096), (26, -1), (27, -1), (28, -1), (29, 1024), (30, -1), (31, -1), (32, 131072), (33, -1), (34, -1), (35, -1), (36, -1), (37, 4096), (38, 33554432), (39, 512), (40, -1), (41, -1), (42, 65536), (43, 65536), (44, -1), (45, -1), (46, -1), (47, 16777216), (48, 4194304), (49, 33554432), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, 1048576), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, 33554432), (9, 262144), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, 33554432), (16, 1572864), (17, -1), (18, -1), (19, 524288), (20, 8388608), (21, 16777216), (22, 262144), (23, 33554432), (24, -1), (25, 4194304), (26, -1), (27, -1), (28, -1), (29, 4096), (30, -1), (31, -1), (32, 262144), (33, -1), (34, -1), (35, -1), (36, -1), (37, 4194304), (38, 33554432), (39, 4096), (40, -1), (41, -1), (42, 131072), (43, 131072), (44, -1), (45, -1), (46, -1), (47, 16777216), (48, 4194304), (49, 33554432), (50, -1), (51, -1), (52, -1)]

Covered at level 12 : set()

After reduction : 
 pending  : [23, 9, 29, 32, 38, 39, 42, 43, 47, 48, 49, 8, 25, 37, 22, 20, 21, 0, 16, 19, 15]
 solution : [6, 28, 24]


Solution : [6, 28, 24] has cost 17.


Decide in level 12 among pending : [23, 9, 29, 32, 38, 39, 42, 43, 47, 48, 49, 8, 25, 37, 22, 20, 21, 0, 16, 19, 15]

Coverage : [(0, 1048576), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, 33554432), (9, 262144), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, 33554432), (16, 1572864), (17, -1), (18, -1), (19, 524288), (20, 8388608), (21, 16777216), (22, 262144), (23, 33554432), (24, -1), (25, 4194304), (26, -1), (27, -1), (28, -1), (29, 4096), (30, -1), (31, -1), (32, 262144), (33, -1), (34, -1), (35, -1), (36, -1), (37, 4194304), (38, 33554432), (39, 4096), (40, -1), (41, -1), (42, 131072), (43, 131072), (44, -1), (45, -1), (46, -1), (47, 16777216), (48, 4194304), (49, 33554432), (50, -1), (51, -1), (52, -1)]

Decide 23 with phase True at level 12

After decision at level 12
 pending : [9, 29, 32, 38, 39, 42, 43, 47, 48, 49, 8, 25, 37, 22, 20, 21, 0, 16, 19, 15]
 solution : [6, 28, 24, 23]


New level: 13
 pending : [9, 29, 32, 38, 39, 42, 43, 47, 48, 49, 8, 25, 37, 22, 20, 21, 0, 16, 19, 15]
 solution : [6, 28, 24, 23]


Before reduction : 
 pending  : [9, 29, 32, 38, 39, 42, 43, 47, 48, 49, 8, 25, 37, 22, 20, 21, 0, 16, 19, 15]
 solution : [6, 28, 24, 23]

Essensial at level 13 : set()

Before removed
 coverage : [(0, 1048576), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, 33554432), (9, 262144), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, 33554432), (16, 1572864), (17, -1), (18, -1), (19, 524288), (20, 8388608), (21, 16777216), (22, 262144), (23, 33554432), (24, -1), (25, 4194304), (26, -1), (27, -1), (28, -1), (29, 4096), (30, -1), (31, -1), (32, 262144), (33, -1), (34, -1), (35, -1), (36, -1), (37, 4194304), (38, 33554432), (39, 4096), (40, -1), (41, -1), (42, 131072), (43, 131072), (44, -1), (45, -1), (46, -1), (47, 16777216), (48, 4194304), (49, 33554432), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, 524288), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, 0), (9, 0), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, 16777216), (16, 524288), (17, -1), (18, -1), (19, 262144), (20, 8388608), (21, 16777216), (22, 262144), (23, -1), (24, -1), (25, 2097152), (26, -1), (27, -1), (28, -1), (29, 0), (30, -1), (31, -1), (32, 0), (33, -1), (34, -1), (35, -1), (36, -1), (37, 2097152), (38, 0), (39, 0), (40, -1), (41, -1), (42, 0), (43, 0), (44, -1), (45, -1), (46, -1), (47, 0), (48, 0), (49, 0), (50, -1), (51, -1), (52, -1)]

Covered at level 13 : {32, 38, 39, 8, 9, 42, 43, 47, 48, 49, 29}

After reduction : 
 pending  : [25, 37, 22, 20, 21, 0, 16, 19, 15]
 solution : [6, 28, 24, 23]


Before reduction : 
 pending  : [25, 37, 22, 20, 21, 0, 16, 19, 15]
 solution : [6, 28, 24, 23]

Essensial at level 13 : set()

Before removed
 coverage : [(0, 524288), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, 0), (9, 0), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, 16777216), (16, 524288), (17, -1), (18, -1), (19, 262144), (20, 8388608), (21, 16777216), (22, 262144), (23, -1), (24, -1), (25, 2097152), (26, -1), (27, -1), (28, -1), (29, 0), (30, -1), (31, -1), (32, 0), (33, -1), (34, -1), (35, -1), (36, -1), (37, 2097152), (38, 0), (39, 0), (40, -1), (41, -1), (42, 0), (43, 0), (44, -1), (45, -1), (46, -1), (47, 0), (48, 0), (49, 0), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, 524288), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, 16777216), (16, 524288), (17, -1), (18, -1), (19, 262144), (20, 8388608), (21, 16777216), (22, 262144), (23, -1), (24, -1), (25, 2097152), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, 2097152), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 13 : set()

After reduction : 
 pending  : [25, 37, 22, 20, 21, 0, 16, 19, 15]
 solution : [6, 28, 24, 23]


Solution : [6, 28, 24, 23] has cost 24.


Before backtrack at level 13
 pending : [25, 37, 22, 20, 21, 0, 16, 19, 15]
 solution : [6, 28, 24, 23]

After backtrack at level 13
 pending : [25, 37, 22, 20, 21, 0, 16, 19, 15, 9, 29, 32, 38, 39, 42, 43, 47, 48, 49, 8]
 solution : [6, 28, 24, 23]


Invert decision for 23 at level 12


New level: 13
 pending : [25, 37, 22, 20, 21, 0, 16, 19, 15, 9, 29, 32, 38, 39, 42, 43, 47, 48, 49, 8]
 solution : [6, 28, 24]


Before reduction : 
 pending  : [25, 37, 22, 20, 21, 0, 16, 19, 15, 9, 29, 32, 38, 39, 42, 43, 47, 48, 49, 8]
 solution : [6, 28, 24]

Essensial at level 13 : {8}

Before removed
 coverage : [(0, 524288), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, 16777216), (16, 524288), (17, -1), (18, -1), (19, 262144), (20, 8388608), (21, 16777216), (22, 262144), (23, -1), (24, -1), (25, 2097152), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, 2097152), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, 524288), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, 0), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, 16777216), (16, 524288), (17, -1), (18, -1), (19, 262144), (20, 8388608), (21, 16777216), (22, 262144), (23, -1), (24, -1), (25, 2097152), (26, -1), (27, -1), (28, -1), (29, 0), (30, -1), (31, -1), (32, 0), (33, -1), (34, -1), (35, -1), (36, -1), (37, 2097152), (38, 0), (39, 0), (40, -1), (41, -1), (42, 0), (43, 0), (44, -1), (45, -1), (46, -1), (47, 0), (48, 0), (49, 0), (50, -1), (51, -1), (52, -1)]

Covered at level 13 : {32, 38, 39, 9, 42, 43, 47, 48, 49, 29}

After reduction : 
 pending  : [25, 37, 22, 20, 21, 0, 16, 19, 15]
 solution : [6, 28, 24, 8]


Before reduction : 
 pending  : [25, 37, 22, 20, 21, 0, 16, 19, 15]
 solution : [6, 28, 24, 8]

Essensial at level 13 : set()

Before removed
 coverage : [(0, 524288), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, 0), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, 16777216), (16, 524288), (17, -1), (18, -1), (19, 262144), (20, 8388608), (21, 16777216), (22, 262144), (23, -1), (24, -1), (25, 2097152), (26, -1), (27, -1), (28, -1), (29, 0), (30, -1), (31, -1), (32, 0), (33, -1), (34, -1), (35, -1), (36, -1), (37, 2097152), (38, 0), (39, 0), (40, -1), (41, -1), (42, 0), (43, 0), (44, -1), (45, -1), (46, -1), (47, 0), (48, 0), (49, 0), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, 524288), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, 16777216), (16, 524288), (17, -1), (18, -1), (19, 262144), (20, 8388608), (21, 16777216), (22, 262144), (23, -1), (24, -1), (25, 2097152), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, 2097152), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 13 : set()

After reduction : 
 pending  : [25, 37, 22, 20, 21, 0, 16, 19, 15]
 solution : [6, 28, 24, 8]


Solution : [6, 28, 24, 8] has cost 21.


Before backtrack at level 13
 pending : [25, 37, 22, 20, 21, 0, 16, 19, 15]
 solution : [6, 28, 24, 8]

After backtrack at level 13
 pending : [25, 37, 22, 20, 21, 0, 16, 19, 15, 8, 9, 29, 32, 38, 39, 42, 43, 47, 48, 49]
 solution : [6, 28, 24]


Before backtrack at level 12
 pending : [25, 37, 22, 20, 21, 0, 16, 19, 15, 8, 9, 29, 32, 38, 39, 42, 43, 47, 48, 49]
 solution : [6, 28, 24]

After backtrack at level 12
 pending : [25, 37, 22, 20, 21, 0, 16, 19, 15, 8, 9, 29, 32, 38, 39, 42, 43, 47, 48, 49, 23]
 solution : [6, 28, 24]


Before backtrack at level 11
 pending : [25, 37, 22, 20, 21, 0, 16, 19, 15, 8, 9, 29, 32, 38, 39, 42, 43, 47, 48, 49, 23]
 solution : [6, 28, 24]

After backtrack at level 11
 pending : [25, 37, 22, 20, 21, 0, 16, 19, 15, 8, 9, 29, 32, 38, 39, 42, 43, 47, 48, 49, 23, 14]
 solution : [6, 28, 24]


Before backtrack at level 10
 pending : [25, 37, 22, 20, 21, 0, 16, 19, 15, 8, 9, 29, 32, 38, 39, 42, 43, 47, 48, 49, 23, 14]
 solution : [6, 28, 24]

After backtrack at level 10
 pending : [25, 37, 22, 20, 21, 0, 16, 19, 15, 8, 9, 29, 32, 38, 39, 42, 43, 47, 48, 49, 23, 14, 30, 33, 40]
 solution : [6, 28, 24]


Invert decision for 24 at level 9


New level: 10
 pending : [25, 37, 22, 20, 21, 0, 16, 19, 15, 8, 9, 29, 32, 38, 39, 42, 43, 47, 48, 49, 23, 14, 30, 33, 40]
 solution : [6, 28]


Before reduction : 
 pending  : [25, 37, 22, 20, 21, 0, 16, 19, 15, 8, 9, 29, 32, 38, 39, 42, 43, 47, 48, 49, 23, 14, 30, 33, 40]
 solution : [6, 28]

Essensial at level 10 : set()

Before removed
 coverage : [(0, 524288), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, 16777216), (16, 524288), (17, -1), (18, -1), (19, 262144), (20, 8388608), (21, 16777216), (22, 262144), (23, -1), (24, -1), (25, 2097152), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, 2097152), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, 1048576), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, 134217728), (9, 1048576), (10, -1), (11, -1), (12, -1), (13, -1), (14, 67108864), (15, 33554432), (16, 1572864), (17, -1), (18, -1), (19, 524288), (20, 8388608), (21, 16777216), (22, 262144), (23, 134217728), (24, -1), (25, 4194304), (26, -1), (27, -1), (28, -1), (29, 16384), (30, 16384), (31, -1), (32, 1048576), (33, 2097152), (34, -1), (35, -1), (36, -1), (37, 4194304), (38, 134217728), (39, 16384), (40, 268435456), (41, -1), (42, 524288), (43, 524288), (44, -1), (45, -1), (46, -1), (47, 67108864), (48, 16777216), (49, 67108864), (50, -1), (51, -1), (52, -1)]

Covered at level 10 : set()

After reduction : 
 pending  : [25, 37, 22, 20, 21, 0, 16, 19, 15, 8, 9, 29, 32, 38, 39, 42, 43, 47, 48, 49, 23, 14, 30, 33, 40]
 solution : [6, 28]


Solution : [6, 28] has cost 10.


Decide in level 10 among pending : [25, 37, 22, 20, 21, 0, 16, 19, 15, 8, 9, 29, 32, 38, 39, 42, 43, 47, 48, 49, 23, 14, 30, 33, 40]

Coverage : [(0, 1048576), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, 134217728), (9, 1048576), (10, -1), (11, -1), (12, -1), (13, -1), (14, 67108864), (15, 33554432), (16, 1572864), (17, -1), (18, -1), (19, 524288), (20, 8388608), (21, 16777216), (22, 262144), (23, 134217728), (24, -1), (25, 4194304), (26, -1), (27, -1), (28, -1), (29, 16384), (30, 16384), (31, -1), (32, 1048576), (33, 2097152), (34, -1), (35, -1), (36, -1), (37, 4194304), (38, 134217728), (39, 16384), (40, 268435456), (41, -1), (42, 524288), (43, 524288), (44, -1), (45, -1), (46, -1), (47, 67108864), (48, 16777216), (49, 67108864), (50, -1), (51, -1), (52, -1)]

Decide 40 with phase True at level 10

After decision at level 10
 pending : [25, 37, 22, 20, 21, 0, 16, 19, 15, 8, 9, 29, 32, 38, 39, 42, 43, 47, 48, 49, 23, 14, 30, 33]
 solution : [6, 28, 40]


New level: 11
 pending : [25, 37, 22, 20, 21, 0, 16, 19, 15, 8, 9, 29, 32, 38, 39, 42, 43, 47, 48, 49, 23, 14, 30, 33]
 solution : [6, 28, 40]


Before reduction : 
 pending  : [25, 37, 22, 20, 21, 0, 16, 19, 15, 8, 9, 29, 32, 38, 39, 42, 43, 47, 48, 49, 23, 14, 30, 33]
 solution : [6, 28, 40]

Essensial at level 11 : set()

Before removed
 coverage : [(0, 1048576), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, 134217728), (9, 1048576), (10, -1), (11, -1), (12, -1), (13, -1), (14, 67108864), (15, 33554432), (16, 1572864), (17, -1), (18, -1), (19, 524288), (20, 8388608), (21, 16777216), (22, 262144), (23, 134217728), (24, -1), (25, 4194304), (26, -1), (27, -1), (28, -1), (29, 16384), (30, 16384), (31, -1), (32, 1048576), (33, 2097152), (34, -1), (35, -1), (36, -1), (37, 4194304), (38, 134217728), (39, 16384), (40, 268435456), (41, -1), (42, 524288), (43, 524288), (44, -1), (45, -1), (46, -1), (47, 67108864), (48, 16777216), (49, 67108864), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, 524288), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, 33554432), (9, 262144), (10, -1), (11, -1), (12, -1), (13, -1), (14, 33554432), (15, 16777216), (16, 524288), (17, -1), (18, -1), (19, 262144), (20, 8388608), (21, 16777216), (22, 262144), (23, 33554432), (24, -1), (25, 1048576), (26, -1), (27, -1), (28, -1), (29, 4096), (30, 4096), (31, -1), (32, 262144), (33, 2097152), (34, -1), (35, -1), (36, -1), (37, 1048576), (38, 134217728), (39, 4096), (40, -1), (41, -1), (42, 131072), (43, 131072), (44, -1), (45, -1), (46, -1), (47, 33554432), (48, 4194304), (49, 67108864), (50, -1), (51, -1), (52, -1)]

Covered at level 11 : set()

After reduction : 
 pending  : [25, 37, 22, 20, 21, 0, 16, 19, 15, 8, 9, 29, 32, 38, 39, 42, 43, 47, 48, 49, 23, 14, 30, 33]
 solution : [6, 28, 40]


Solution : [6, 28, 40] has cost 28.


Before backtrack at level 11
 pending : [25, 37, 22, 20, 21, 0, 16, 19, 15, 8, 9, 29, 32, 38, 39, 42, 43, 47, 48, 49, 23, 14, 30, 33]
 solution : [6, 28, 40]

After backtrack at level 11
 pending : [25, 37, 22, 20, 21, 0, 16, 19, 15, 8, 9, 29, 32, 38, 39, 42, 43, 47, 48, 49, 23, 14, 30, 33]
 solution : [6, 28, 40]


Invert decision for 40 at level 10


New level: 11
 pending : [25, 37, 22, 20, 21, 0, 16, 19, 15, 8, 9, 29, 32, 38, 39, 42, 43, 47, 48, 49, 23, 14, 30, 33]
 solution : [6, 28]


Before reduction : 
 pending  : [25, 37, 22, 20, 21, 0, 16, 19, 15, 8, 9, 29, 32, 38, 39, 42, 43, 47, 48, 49, 23, 14, 30, 33]
 solution : [6, 28]

Essensial at level 11 : set()

Before removed
 coverage : [(0, 524288), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, 33554432), (9, 262144), (10, -1), (11, -1), (12, -1), (13, -1), (14, 33554432), (15, 16777216), (16, 524288), (17, -1), (18, -1), (19, 262144), (20, 8388608), (21, 16777216), (22, 262144), (23, 33554432), (24, -1), (25, 1048576), (26, -1), (27, -1), (28, -1), (29, 4096), (30, 4096), (31, -1), (32, 262144), (33, 2097152), (34, -1), (35, -1), (36, -1), (37, 1048576), (38, 134217728), (39, 4096), (40, -1), (41, -1), (42, 131072), (43, 131072), (44, -1), (45, -1), (46, -1), (47, 33554432), (48, 4194304), (49, 67108864), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, 1048576), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, 134217728), (9, 1048576), (10, -1), (11, -1), (12, -1), (13, -1), (14, 67108864), (15, 33554432), (16, 1572864), (17, -1), (18, -1), (19, 524288), (20, 8388608), (21, 16777216), (22, 262144), (23, 134217728), (24, -1), (25, 4194304), (26, -1), (27, -1), (28, -1), (29, 16384), (30, 16384), (31, -1), (32, 1048576), (33, 2097152), (34, -1), (35, -1), (36, -1), (37, 4194304), (38, 134217728), (39, 16384), (40, -1), (41, -1), (42, 524288), (43, 524288), (44, -1), (45, -1), (46, -1), (47, 67108864), (48, 16777216), (49, 67108864), (50, -1), (51, -1), (52, -1)]

Covered at level 11 : set()

After reduction : 
 pending  : [25, 37, 22, 20, 21, 0, 16, 19, 15, 8, 9, 29, 32, 38, 39, 42, 43, 47, 48, 49, 23, 14, 30, 33]
 solution : [6, 28]


Solution : [6, 28] has cost 10.


Decide in level 11 among pending : [25, 37, 22, 20, 21, 0, 16, 19, 15, 8, 9, 29, 32, 38, 39, 42, 43, 47, 48, 49, 23, 14, 30, 33]

Coverage : [(0, 1048576), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, 134217728), (9, 1048576), (10, -1), (11, -1), (12, -1), (13, -1), (14, 67108864), (15, 33554432), (16, 1572864), (17, -1), (18, -1), (19, 524288), (20, 8388608), (21, 16777216), (22, 262144), (23, 134217728), (24, -1), (25, 4194304), (26, -1), (27, -1), (28, -1), (29, 16384), (30, 16384), (31, -1), (32, 1048576), (33, 2097152), (34, -1), (35, -1), (36, -1), (37, 4194304), (38, 134217728), (39, 16384), (40, -1), (41, -1), (42, 524288), (43, 524288), (44, -1), (45, -1), (46, -1), (47, 67108864), (48, 16777216), (49, 67108864), (50, -1), (51, -1), (52, -1)]

Decide 8 with phase True at level 11

After decision at level 11
 pending : [25, 37, 22, 20, 21, 0, 16, 19, 15, 9, 29, 32, 38, 39, 42, 43, 47, 48, 49, 23, 14, 30, 33]
 solution : [6, 28, 8]


New level: 12
 pending : [25, 37, 22, 20, 21, 0, 16, 19, 15, 9, 29, 32, 38, 39, 42, 43, 47, 48, 49, 23, 14, 30, 33]
 solution : [6, 28, 8]


Before reduction : 
 pending  : [25, 37, 22, 20, 21, 0, 16, 19, 15, 9, 29, 32, 38, 39, 42, 43, 47, 48, 49, 23, 14, 30, 33]
 solution : [6, 28, 8]

Essensial at level 12 : set()

Before removed
 coverage : [(0, 1048576), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, 134217728), (9, 1048576), (10, -1), (11, -1), (12, -1), (13, -1), (14, 67108864), (15, 33554432), (16, 1572864), (17, -1), (18, -1), (19, 524288), (20, 8388608), (21, 16777216), (22, 262144), (23, 134217728), (24, -1), (25, 4194304), (26, -1), (27, -1), (28, -1), (29, 16384), (30, 16384), (31, -1), (32, 1048576), (33, 2097152), (34, -1), (35, -1), (36, -1), (37, 4194304), (38, 134217728), (39, 16384), (40, -1), (41, -1), (42, 524288), (43, 524288), (44, -1), (45, -1), (46, -1), (47, 67108864), (48, 16777216), (49, 67108864), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, 524288), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, 0), (10, -1), (11, -1), (12, -1), (13, -1), (14, 33554432), (15, 16777216), (16, 524288), (17, -1), (18, -1), (19, 262144), (20, 8388608), (21, 16777216), (22, 262144), (23, 0), (24, -1), (25, 2097152), (26, -1), (27, -1), (28, -1), (29, 0), (30, 0), (31, -1), (32, 0), (33, 0), (34, -1), (35, -1), (36, -1), (37, 2097152), (38, 0), (39, 0), (40, -1), (41, -1), (42, 0), (43, 0), (44, -1), (45, -1), (46, -1), (47, 0), (48, 0), (49, 0), (50, -1), (51, -1), (52, -1)]

Covered at level 12 : {32, 33, 38, 39, 9, 42, 43, 47, 48, 49, 23, 29, 30}

After reduction : 
 pending  : [25, 37, 22, 20, 21, 0, 16, 19, 15, 14]
 solution : [6, 28, 8]


Before reduction : 
 pending  : [25, 37, 22, 20, 21, 0, 16, 19, 15, 14]
 solution : [6, 28, 8]

Essensial at level 12 : set()

Before removed
 coverage : [(0, 524288), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, 0), (10, -1), (11, -1), (12, -1), (13, -1), (14, 33554432), (15, 16777216), (16, 524288), (17, -1), (18, -1), (19, 262144), (20, 8388608), (21, 16777216), (22, 262144), (23, 0), (24, -1), (25, 2097152), (26, -1), (27, -1), (28, -1), (29, 0), (30, 0), (31, -1), (32, 0), (33, 0), (34, -1), (35, -1), (36, -1), (37, 2097152), (38, 0), (39, 0), (40, -1), (41, -1), (42, 0), (43, 0), (44, -1), (45, -1), (46, -1), (47, 0), (48, 0), (49, 0), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, 524288), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 33554432), (15, 16777216), (16, 524288), (17, -1), (18, -1), (19, 262144), (20, 8388608), (21, 16777216), (22, 262144), (23, -1), (24, -1), (25, 2097152), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, 2097152), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 12 : set()

After reduction : 
 pending  : [25, 37, 22, 20, 21, 0, 16, 19, 15, 14]
 solution : [6, 28, 8]


Solution : [6, 28, 8] has cost 14.


Decide in level 12 among pending : [25, 37, 22, 20, 21, 0, 16, 19, 15, 14]

Coverage : [(0, 524288), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 33554432), (15, 16777216), (16, 524288), (17, -1), (18, -1), (19, 262144), (20, 8388608), (21, 16777216), (22, 262144), (23, -1), (24, -1), (25, 2097152), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, 2097152), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Decide 14 with phase True at level 12

After decision at level 12
 pending : [25, 37, 22, 20, 21, 0, 16, 19, 15]
 solution : [6, 28, 8, 14]


New level: 13
 pending : [25, 37, 22, 20, 21, 0, 16, 19, 15]
 solution : [6, 28, 8, 14]


Before reduction : 
 pending  : [25, 37, 22, 20, 21, 0, 16, 19, 15]
 solution : [6, 28, 8, 14]

Essensial at level 13 : set()

Before removed
 coverage : [(0, 524288), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 33554432), (15, 16777216), (16, 524288), (17, -1), (18, -1), (19, 262144), (20, 8388608), (21, 16777216), (22, 262144), (23, -1), (24, -1), (25, 2097152), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, 2097152), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, 0), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, 0), (16, 0), (17, -1), (18, -1), (19, 0), (20, 65536), (21, 262144), (22, 65536), (23, -1), (24, -1), (25, 2048), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, 2048), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 13 : {0, 16, 19, 15}

After reduction : 
 pending  : [25, 37, 22, 20, 21]
 solution : [6, 28, 8, 14]


Before reduction : 
 pending  : [25, 37, 22, 20, 21]
 solution : [6, 28, 8, 14]

Essensial at level 13 : set()

Before removed
 coverage : [(0, 0), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, 0), (16, 0), (17, -1), (18, -1), (19, 0), (20, 65536), (21, 262144), (22, 65536), (23, -1), (24, -1), (25, 2048), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, 2048), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, 65536), (21, 262144), (22, 65536), (23, -1), (24, -1), (25, 2048), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, 2048), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 13 : set()

After reduction : 
 pending  : [25, 37, 22, 20, 21]
 solution : [6, 28, 8, 14]


Solution : [6, 28, 8, 14] has cost 23.


Before backtrack at level 13
 pending : [25, 37, 22, 20, 21]
 solution : [6, 28, 8, 14]

After backtrack at level 13
 pending : [25, 37, 22, 20, 21, 0, 16, 19, 15]
 solution : [6, 28, 8, 14]


Invert decision for 14 at level 12


New level: 13
 pending : [25, 37, 22, 20, 21, 0, 16, 19, 15]
 solution : [6, 28, 8]


Before reduction : 
 pending  : [25, 37, 22, 20, 21, 0, 16, 19, 15]
 solution : [6, 28, 8]

Essensial at level 13 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, 65536), (21, 262144), (22, 65536), (23, -1), (24, -1), (25, 2048), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, 2048), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, 524288), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, 16777216), (16, 524288), (17, -1), (18, -1), (19, 262144), (20, 8388608), (21, 16777216), (22, 262144), (23, -1), (24, -1), (25, 2097152), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, 2097152), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 13 : set()

After reduction : 
 pending  : [25, 37, 22, 20, 21, 0, 16, 19, 15]
 solution : [6, 28, 8]


Solution : [6, 28, 8] has cost 14.


Decide in level 13 among pending : [25, 37, 22, 20, 21, 0, 16, 19, 15]

Coverage : [(0, 524288), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, 16777216), (16, 524288), (17, -1), (18, -1), (19, 262144), (20, 8388608), (21, 16777216), (22, 262144), (23, -1), (24, -1), (25, 2097152), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, 2097152), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Decide 21 with phase True at level 13

After decision at level 13
 pending : [25, 37, 22, 20, 0, 16, 19, 15]
 solution : [6, 28, 8, 21]


New level: 14
 pending : [25, 37, 22, 20, 0, 16, 19, 15]
 solution : [6, 28, 8, 21]


Before reduction : 
 pending  : [25, 37, 22, 20, 0, 16, 19, 15]
 solution : [6, 28, 8, 21]

Essensial at level 14 : set()

Before removed
 coverage : [(0, 524288), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, 16777216), (16, 524288), (17, -1), (18, -1), (19, 262144), (20, 8388608), (21, 16777216), (22, 262144), (23, -1), (24, -1), (25, 2097152), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, 2097152), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, 262144), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, 4194304), (16, 262144), (17, -1), (18, -1), (19, 0), (20, 0), (21, -1), (22, 0), (23, -1), (24, -1), (25, 524288), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, 524288), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 14 : {19, 20, 22}

After reduction : 
 pending  : [25, 37, 0, 16, 15]
 solution : [6, 28, 8, 21]


Before reduction : 
 pending  : [25, 37, 0, 16, 15]
 solution : [6, 28, 8, 21]

Essensial at level 14 : set()

Before removed
 coverage : [(0, 262144), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, 4194304), (16, 262144), (17, -1), (18, -1), (19, 0), (20, 0), (21, -1), (22, 0), (23, -1), (24, -1), (25, 524288), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, 524288), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, 262144), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, 4194304), (16, 262144), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, 524288), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, 524288), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 14 : set()

After reduction : 
 pending  : [25, 37, 0, 16, 15]
 solution : [6, 28, 8, 21]


Solution : [6, 28, 8, 21] has cost 21.


Before backtrack at level 14
 pending : [25, 37, 0, 16, 15]
 solution : [6, 28, 8, 21]

After backtrack at level 14
 pending : [25, 37, 0, 16, 15, 22, 20, 19]
 solution : [6, 28, 8, 21]


Invert decision for 21 at level 13


New level: 14
 pending : [25, 37, 0, 16, 15, 22, 20, 19]
 solution : [6, 28, 8]


Before reduction : 
 pending  : [25, 37, 0, 16, 15, 22, 20, 19]
 solution : [6, 28, 8]

Essensial at level 14 : set()

Before removed
 coverage : [(0, 262144), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, 4194304), (16, 262144), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, 524288), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, 524288), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, 524288), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, 16777216), (16, 524288), (17, -1), (18, -1), (19, 262144), (20, 8388608), (21, -1), (22, 262144), (23, -1), (24, -1), (25, 2097152), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, 2097152), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 14 : set()

After reduction : 
 pending  : [25, 37, 0, 16, 15, 22, 20, 19]
 solution : [6, 28, 8]


Solution : [6, 28, 8] has cost 14.


Decide in level 14 among pending : [25, 37, 0, 16, 15, 22, 20, 19]

Coverage : [(0, 524288), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, 16777216), (16, 524288), (17, -1), (18, -1), (19, 262144), (20, 8388608), (21, -1), (22, 262144), (23, -1), (24, -1), (25, 2097152), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, 2097152), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Decide 15 with phase True at level 14

After decision at level 14
 pending : [25, 37, 0, 16, 22, 20, 19]
 solution : [6, 28, 8, 15]


New level: 15
 pending : [25, 37, 0, 16, 22, 20, 19]
 solution : [6, 28, 8, 15]


Before reduction : 
 pending  : [25, 37, 0, 16, 22, 20, 19]
 solution : [6, 28, 8, 15]

Essensial at level 15 : set()

Before removed
 coverage : [(0, 524288), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, 16777216), (16, 524288), (17, -1), (18, -1), (19, 262144), (20, 8388608), (21, -1), (22, 262144), (23, -1), (24, -1), (25, 2097152), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, 2097152), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, 0), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, 0), (17, -1), (18, -1), (19, 0), (20, 65536), (21, -1), (22, 65536), (23, -1), (24, -1), (25, 2048), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, 2048), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 15 : {0, 16, 19}

After reduction : 
 pending  : [25, 37, 22, 20]
 solution : [6, 28, 8, 15]


Before reduction : 
 pending  : [25, 37, 22, 20]
 solution : [6, 28, 8, 15]

Essensial at level 15 : set()

Before removed
 coverage : [(0, 0), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, 0), (17, -1), (18, -1), (19, 0), (20, 65536), (21, -1), (22, 65536), (23, -1), (24, -1), (25, 2048), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, 2048), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, 65536), (21, -1), (22, 65536), (23, -1), (24, -1), (25, 2048), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, 2048), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 15 : set()

After reduction : 
 pending  : [25, 37, 22, 20]
 solution : [6, 28, 8, 15]


Solution : [6, 28, 8, 15] has cost 23.


Before backtrack at level 15
 pending : [25, 37, 22, 20]
 solution : [6, 28, 8, 15]

After backtrack at level 15
 pending : [25, 37, 22, 20, 0, 16, 19]
 solution : [6, 28, 8, 15]


Invert decision for 15 at level 14


New level: 15
 pending : [25, 37, 22, 20, 0, 16, 19]
 solution : [6, 28, 8]


Before reduction : 
 pending  : [25, 37, 22, 20, 0, 16, 19]
 solution : [6, 28, 8]

Essensial at level 15 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, 65536), (21, -1), (22, 65536), (23, -1), (24, -1), (25, 2048), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, 2048), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, 524288), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, 524288), (17, -1), (18, -1), (19, 262144), (20, 8388608), (21, -1), (22, 262144), (23, -1), (24, -1), (25, 2097152), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, 2097152), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 15 : set()

After reduction : 
 pending  : [25, 37, 22, 20, 0, 16, 19]
 solution : [6, 28, 8]


Solution : [6, 28, 8] has cost 14.


Decide in level 15 among pending : [25, 37, 22, 20, 0, 16, 19]

Coverage : [(0, 524288), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, 524288), (17, -1), (18, -1), (19, 262144), (20, 8388608), (21, -1), (22, 262144), (23, -1), (24, -1), (25, 2097152), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, 2097152), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Decide 20 with phase True at level 15

After decision at level 15
 pending : [25, 37, 22, 0, 16, 19]
 solution : [6, 28, 8, 20]


New level: 16
 pending : [25, 37, 22, 0, 16, 19]
 solution : [6, 28, 8, 20]


Before reduction : 
 pending  : [25, 37, 22, 0, 16, 19]
 solution : [6, 28, 8, 20]

Essensial at level 16 : set()

Before removed
 coverage : [(0, 524288), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, 524288), (17, -1), (18, -1), (19, 262144), (20, 8388608), (21, -1), (22, 262144), (23, -1), (24, -1), (25, 2097152), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, 2097152), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, 262144), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, 262144), (17, -1), (18, -1), (19, 0), (20, -1), (21, -1), (22, 0), (23, -1), (24, -1), (25, 524288), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, 524288), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 16 : {19, 22}

After reduction : 
 pending  : [25, 37, 0, 16]
 solution : [6, 28, 8, 20]


Before reduction : 
 pending  : [25, 37, 0, 16]
 solution : [6, 28, 8, 20]

Essensial at level 16 : set()

Before removed
 coverage : [(0, 262144), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, 262144), (17, -1), (18, -1), (19, 0), (20, -1), (21, -1), (22, 0), (23, -1), (24, -1), (25, 524288), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, 524288), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, 262144), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, 262144), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, 524288), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, 524288), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 16 : set()

After reduction : 
 pending  : [25, 37, 0, 16]
 solution : [6, 28, 8, 20]


Solution : [6, 28, 8, 20] has cost 21.


Before backtrack at level 16
 pending : [25, 37, 0, 16]
 solution : [6, 28, 8, 20]

After backtrack at level 16
 pending : [25, 37, 0, 16, 22, 19]
 solution : [6, 28, 8, 20]


Invert decision for 20 at level 15


New level: 16
 pending : [25, 37, 0, 16, 22, 19]
 solution : [6, 28, 8]


Before reduction : 
 pending  : [25, 37, 0, 16, 22, 19]
 solution : [6, 28, 8]

Essensial at level 16 : {22}

Before removed
 coverage : [(0, 262144), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, 262144), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, 524288), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, 524288), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, 524288), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, 524288), (17, -1), (18, -1), (19, 131072), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, 2097152), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, 2097152), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 16 : set()

After reduction : 
 pending  : [25, 37, 0, 16, 19]
 solution : [6, 28, 8, 22]


Before reduction : 
 pending  : [25, 37, 0, 16, 19]
 solution : [6, 28, 8, 22]

Essensial at level 16 : set()

Before removed
 coverage : [(0, 524288), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, 524288), (17, -1), (18, -1), (19, 131072), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, 2097152), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, 2097152), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, 524288), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, 524288), (17, -1), (18, -1), (19, 131072), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, 2097152), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, 2097152), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 16 : set()

After reduction : 
 pending  : [25, 37, 0, 16, 19]
 solution : [6, 28, 8, 22]


Solution : [6, 28, 8, 22] has cost 21.


Before backtrack at level 16
 pending : [25, 37, 0, 16, 19]
 solution : [6, 28, 8, 22]

After backtrack at level 16
 pending : [25, 37, 0, 16, 19, 22]
 solution : [6, 28, 8]


Before backtrack at level 15
 pending : [25, 37, 0, 16, 19, 22]
 solution : [6, 28, 8]

After backtrack at level 15
 pending : [25, 37, 0, 16, 19, 22, 20]
 solution : [6, 28, 8]


Before backtrack at level 14
 pending : [25, 37, 0, 16, 19, 22, 20]
 solution : [6, 28, 8]

After backtrack at level 14
 pending : [25, 37, 0, 16, 19, 22, 20, 15]
 solution : [6, 28, 8]


Before backtrack at level 13
 pending : [25, 37, 0, 16, 19, 22, 20, 15]
 solution : [6, 28, 8]

After backtrack at level 13
 pending : [25, 37, 0, 16, 19, 22, 20, 15, 21]
 solution : [6, 28, 8]


Before backtrack at level 12
 pending : [25, 37, 0, 16, 19, 22, 20, 15, 21]
 solution : [6, 28, 8]

After backtrack at level 12
 pending : [25, 37, 0, 16, 19, 22, 20, 15, 21, 9, 29, 32, 38, 39, 42, 43, 47, 48, 49, 23, 30, 33, 14]
 solution : [6, 28, 8]


Invert decision for 8 at level 11


New level: 12
 pending : [25, 37, 0, 16, 19, 22, 20, 15, 21, 9, 29, 32, 38, 39, 42, 43, 47, 48, 49, 23, 30, 33, 14]
 solution : [6, 28]


Before reduction : 
 pending  : [25, 37, 0, 16, 19, 22, 20, 15, 21, 9, 29, 32, 38, 39, 42, 43, 47, 48, 49, 23, 30, 33, 14]
 solution : [6, 28]

Essensial at level 12 : {23}

Before removed
 coverage : [(0, 524288), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, 524288), (17, -1), (18, -1), (19, 131072), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, 2097152), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, 2097152), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, 524288), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, 0), (10, -1), (11, -1), (12, -1), (13, -1), (14, 33554432), (15, 16777216), (16, 524288), (17, -1), (18, -1), (19, 262144), (20, 8388608), (21, 16777216), (22, 262144), (23, -1), (24, -1), (25, 2097152), (26, -1), (27, -1), (28, -1), (29, 0), (30, 0), (31, -1), (32, 0), (33, 0), (34, -1), (35, -1), (36, -1), (37, 2097152), (38, 0), (39, 0), (40, -1), (41, -1), (42, 0), (43, 0), (44, -1), (45, -1), (46, -1), (47, 0), (48, 0), (49, 0), (50, -1), (51, -1), (52, -1)]

Covered at level 12 : {32, 33, 38, 39, 9, 42, 43, 47, 48, 49, 29, 30}

After reduction : 
 pending  : [25, 37, 0, 16, 19, 22, 20, 15, 21, 14]
 solution : [6, 28, 23]


Before reduction : 
 pending  : [25, 37, 0, 16, 19, 22, 20, 15, 21, 14]
 solution : [6, 28, 23]

Essensial at level 12 : set()

Before removed
 coverage : [(0, 524288), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, 0), (10, -1), (11, -1), (12, -1), (13, -1), (14, 33554432), (15, 16777216), (16, 524288), (17, -1), (18, -1), (19, 262144), (20, 8388608), (21, 16777216), (22, 262144), (23, -1), (24, -1), (25, 2097152), (26, -1), (27, -1), (28, -1), (29, 0), (30, 0), (31, -1), (32, 0), (33, 0), (34, -1), (35, -1), (36, -1), (37, 2097152), (38, 0), (39, 0), (40, -1), (41, -1), (42, 0), (43, 0), (44, -1), (45, -1), (46, -1), (47, 0), (48, 0), (49, 0), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, 524288), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 33554432), (15, 16777216), (16, 524288), (17, -1), (18, -1), (19, 262144), (20, 8388608), (21, 16777216), (22, 262144), (23, -1), (24, -1), (25, 2097152), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, 2097152), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 12 : set()

After reduction : 
 pending  : [25, 37, 0, 16, 19, 22, 20, 15, 21, 14]
 solution : [6, 28, 23]


Solution : [6, 28, 23] has cost 17.


Decide in level 12 among pending : [25, 37, 0, 16, 19, 22, 20, 15, 21, 14]

Coverage : [(0, 524288), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 33554432), (15, 16777216), (16, 524288), (17, -1), (18, -1), (19, 262144), (20, 8388608), (21, 16777216), (22, 262144), (23, -1), (24, -1), (25, 2097152), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, 2097152), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Decide 14 with phase True at level 12

After decision at level 12
 pending : [25, 37, 0, 16, 19, 22, 20, 15, 21]
 solution : [6, 28, 23, 14]


New level: 13
 pending : [25, 37, 0, 16, 19, 22, 20, 15, 21]
 solution : [6, 28, 23, 14]


Before reduction : 
 pending  : [25, 37, 0, 16, 19, 22, 20, 15, 21]
 solution : [6, 28, 23, 14]

Essensial at level 13 : set()

Before removed
 coverage : [(0, 524288), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 33554432), (15, 16777216), (16, 524288), (17, -1), (18, -1), (19, 262144), (20, 8388608), (21, 16777216), (22, 262144), (23, -1), (24, -1), (25, 2097152), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, 2097152), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, 0), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, 0), (16, 0), (17, -1), (18, -1), (19, 0), (20, 65536), (21, 262144), (22, 65536), (23, -1), (24, -1), (25, 2048), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, 2048), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 13 : {0, 16, 19, 15}

After reduction : 
 pending  : [25, 37, 22, 20, 21]
 solution : [6, 28, 23, 14]


Before reduction : 
 pending  : [25, 37, 22, 20, 21]
 solution : [6, 28, 23, 14]

Essensial at level 13 : set()

Before removed
 coverage : [(0, 0), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, 0), (16, 0), (17, -1), (18, -1), (19, 0), (20, 65536), (21, 262144), (22, 65536), (23, -1), (24, -1), (25, 2048), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, 2048), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, 65536), (21, 262144), (22, 65536), (23, -1), (24, -1), (25, 2048), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, 2048), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 13 : set()

After reduction : 
 pending  : [25, 37, 22, 20, 21]
 solution : [6, 28, 23, 14]


Solution : [6, 28, 23, 14] has cost 26.


Before backtrack at level 13
 pending : [25, 37, 22, 20, 21]
 solution : [6, 28, 23, 14]

After backtrack at level 13
 pending : [25, 37, 22, 20, 21, 0, 16, 19, 15]
 solution : [6, 28, 23, 14]


Invert decision for 14 at level 12


New level: 13
 pending : [25, 37, 22, 20, 21, 0, 16, 19, 15]
 solution : [6, 28, 23]


Before reduction : 
 pending  : [25, 37, 22, 20, 21, 0, 16, 19, 15]
 solution : [6, 28, 23]

Essensial at level 13 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, 65536), (21, 262144), (22, 65536), (23, -1), (24, -1), (25, 2048), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, 2048), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, 524288), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, 16777216), (16, 524288), (17, -1), (18, -1), (19, 262144), (20, 8388608), (21, 16777216), (22, 262144), (23, -1), (24, -1), (25, 2097152), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, 2097152), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 13 : set()

After reduction : 
 pending  : [25, 37, 22, 20, 21, 0, 16, 19, 15]
 solution : [6, 28, 23]


Solution : [6, 28, 23] has cost 17.


Decide in level 13 among pending : [25, 37, 22, 20, 21, 0, 16, 19, 15]

Coverage : [(0, 524288), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, 16777216), (16, 524288), (17, -1), (18, -1), (19, 262144), (20, 8388608), (21, 16777216), (22, 262144), (23, -1), (24, -1), (25, 2097152), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, 2097152), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Decide 21 with phase True at level 13

After decision at level 13
 pending : [25, 37, 22, 20, 0, 16, 19, 15]
 solution : [6, 28, 23, 21]


New level: 14
 pending : [25, 37, 22, 20, 0, 16, 19, 15]
 solution : [6, 28, 23, 21]


Before reduction : 
 pending  : [25, 37, 22, 20, 0, 16, 19, 15]
 solution : [6, 28, 23, 21]

Essensial at level 14 : set()

Before removed
 coverage : [(0, 524288), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, 16777216), (16, 524288), (17, -1), (18, -1), (19, 262144), (20, 8388608), (21, 16777216), (22, 262144), (23, -1), (24, -1), (25, 2097152), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, 2097152), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, 262144), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, 4194304), (16, 262144), (17, -1), (18, -1), (19, 0), (20, 0), (21, -1), (22, 0), (23, -1), (24, -1), (25, 524288), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, 524288), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 14 : {19, 20, 22}

After reduction : 
 pending  : [25, 37, 0, 16, 15]
 solution : [6, 28, 23, 21]


Before reduction : 
 pending  : [25, 37, 0, 16, 15]
 solution : [6, 28, 23, 21]

Essensial at level 14 : set()

Before removed
 coverage : [(0, 262144), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, 4194304), (16, 262144), (17, -1), (18, -1), (19, 0), (20, 0), (21, -1), (22, 0), (23, -1), (24, -1), (25, 524288), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, 524288), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, 262144), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, 4194304), (16, 262144), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, 524288), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, 524288), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 14 : set()

After reduction : 
 pending  : [25, 37, 0, 16, 15]
 solution : [6, 28, 23, 21]


Solution : [6, 28, 23, 21] has cost 24.


Before backtrack at level 14
 pending : [25, 37, 0, 16, 15]
 solution : [6, 28, 23, 21]

After backtrack at level 14
 pending : [25, 37, 0, 16, 15, 22, 20, 19]
 solution : [6, 28, 23, 21]


Invert decision for 21 at level 13


New level: 14
 pending : [25, 37, 0, 16, 15, 22, 20, 19]
 solution : [6, 28, 23]


Before reduction : 
 pending  : [25, 37, 0, 16, 15, 22, 20, 19]
 solution : [6, 28, 23]

Essensial at level 14 : set()

Before removed
 coverage : [(0, 262144), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, 4194304), (16, 262144), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, 524288), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, 524288), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, 524288), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, 16777216), (16, 524288), (17, -1), (18, -1), (19, 262144), (20, 8388608), (21, -1), (22, 262144), (23, -1), (24, -1), (25, 2097152), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, 2097152), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 14 : set()

After reduction : 
 pending  : [25, 37, 0, 16, 15, 22, 20, 19]
 solution : [6, 28, 23]


Solution : [6, 28, 23] has cost 17.


Decide in level 14 among pending : [25, 37, 0, 16, 15, 22, 20, 19]

Coverage : [(0, 524288), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, 16777216), (16, 524288), (17, -1), (18, -1), (19, 262144), (20, 8388608), (21, -1), (22, 262144), (23, -1), (24, -1), (25, 2097152), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, 2097152), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Decide 15 with phase True at level 14

After decision at level 14
 pending : [25, 37, 0, 16, 22, 20, 19]
 solution : [6, 28, 23, 15]


New level: 15
 pending : [25, 37, 0, 16, 22, 20, 19]
 solution : [6, 28, 23, 15]


Before reduction : 
 pending  : [25, 37, 0, 16, 22, 20, 19]
 solution : [6, 28, 23, 15]

Essensial at level 15 : set()

Before removed
 coverage : [(0, 524288), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, 16777216), (16, 524288), (17, -1), (18, -1), (19, 262144), (20, 8388608), (21, -1), (22, 262144), (23, -1), (24, -1), (25, 2097152), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, 2097152), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, 0), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, 0), (17, -1), (18, -1), (19, 0), (20, 65536), (21, -1), (22, 65536), (23, -1), (24, -1), (25, 2048), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, 2048), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 15 : {0, 16, 19}

After reduction : 
 pending  : [25, 37, 22, 20]
 solution : [6, 28, 23, 15]


Before reduction : 
 pending  : [25, 37, 22, 20]
 solution : [6, 28, 23, 15]

Essensial at level 15 : set()

Before removed
 coverage : [(0, 0), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, 0), (17, -1), (18, -1), (19, 0), (20, 65536), (21, -1), (22, 65536), (23, -1), (24, -1), (25, 2048), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, 2048), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, 65536), (21, -1), (22, 65536), (23, -1), (24, -1), (25, 2048), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, 2048), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 15 : set()

After reduction : 
 pending  : [25, 37, 22, 20]
 solution : [6, 28, 23, 15]


Solution : [6, 28, 23, 15] has cost 26.


Before backtrack at level 15
 pending : [25, 37, 22, 20]
 solution : [6, 28, 23, 15]

After backtrack at level 15
 pending : [25, 37, 22, 20, 0, 16, 19]
 solution : [6, 28, 23, 15]


Invert decision for 15 at level 14


New level: 15
 pending : [25, 37, 22, 20, 0, 16, 19]
 solution : [6, 28, 23]


Before reduction : 
 pending  : [25, 37, 22, 20, 0, 16, 19]
 solution : [6, 28, 23]

Essensial at level 15 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, 65536), (21, -1), (22, 65536), (23, -1), (24, -1), (25, 2048), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, 2048), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, 524288), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, 524288), (17, -1), (18, -1), (19, 262144), (20, 8388608), (21, -1), (22, 262144), (23, -1), (24, -1), (25, 2097152), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, 2097152), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 15 : set()

After reduction : 
 pending  : [25, 37, 22, 20, 0, 16, 19]
 solution : [6, 28, 23]


Solution : [6, 28, 23] has cost 17.


Decide in level 15 among pending : [25, 37, 22, 20, 0, 16, 19]

Coverage : [(0, 524288), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, 524288), (17, -1), (18, -1), (19, 262144), (20, 8388608), (21, -1), (22, 262144), (23, -1), (24, -1), (25, 2097152), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, 2097152), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Decide 20 with phase True at level 15

After decision at level 15
 pending : [25, 37, 22, 0, 16, 19]
 solution : [6, 28, 23, 20]


New level: 16
 pending : [25, 37, 22, 0, 16, 19]
 solution : [6, 28, 23, 20]


Before reduction : 
 pending  : [25, 37, 22, 0, 16, 19]
 solution : [6, 28, 23, 20]

Essensial at level 16 : set()

Before removed
 coverage : [(0, 524288), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, 524288), (17, -1), (18, -1), (19, 262144), (20, 8388608), (21, -1), (22, 262144), (23, -1), (24, -1), (25, 2097152), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, 2097152), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, 262144), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, 262144), (17, -1), (18, -1), (19, 0), (20, -1), (21, -1), (22, 0), (23, -1), (24, -1), (25, 524288), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, 524288), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 16 : {19, 22}

After reduction : 
 pending  : [25, 37, 0, 16]
 solution : [6, 28, 23, 20]


Before reduction : 
 pending  : [25, 37, 0, 16]
 solution : [6, 28, 23, 20]

Essensial at level 16 : set()

Before removed
 coverage : [(0, 262144), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, 262144), (17, -1), (18, -1), (19, 0), (20, -1), (21, -1), (22, 0), (23, -1), (24, -1), (25, 524288), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, 524288), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, 262144), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, 262144), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, 524288), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, 524288), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 16 : set()

After reduction : 
 pending  : [25, 37, 0, 16]
 solution : [6, 28, 23, 20]


Solution : [6, 28, 23, 20] has cost 24.


Before backtrack at level 16
 pending : [25, 37, 0, 16]
 solution : [6, 28, 23, 20]

After backtrack at level 16
 pending : [25, 37, 0, 16, 22, 19]
 solution : [6, 28, 23, 20]


Invert decision for 20 at level 15


New level: 16
 pending : [25, 37, 0, 16, 22, 19]
 solution : [6, 28, 23]


Before reduction : 
 pending  : [25, 37, 0, 16, 22, 19]
 solution : [6, 28, 23]

Essensial at level 16 : {22}

Before removed
 coverage : [(0, 262144), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, 262144), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, 524288), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, 524288), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, 524288), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, 524288), (17, -1), (18, -1), (19, 131072), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, 2097152), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, 2097152), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 16 : set()

After reduction : 
 pending  : [25, 37, 0, 16, 19]
 solution : [6, 28, 23, 22]


Before reduction : 
 pending  : [25, 37, 0, 16, 19]
 solution : [6, 28, 23, 22]

Essensial at level 16 : set()

Before removed
 coverage : [(0, 524288), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, 524288), (17, -1), (18, -1), (19, 131072), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, 2097152), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, 2097152), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, 524288), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, 524288), (17, -1), (18, -1), (19, 131072), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, 2097152), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, 2097152), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 16 : set()

After reduction : 
 pending  : [25, 37, 0, 16, 19]
 solution : [6, 28, 23, 22]


Solution : [6, 28, 23, 22] has cost 24.


Before backtrack at level 16
 pending : [25, 37, 0, 16, 19]
 solution : [6, 28, 23, 22]

After backtrack at level 16
 pending : [25, 37, 0, 16, 19, 22]
 solution : [6, 28, 23]


Before backtrack at level 15
 pending : [25, 37, 0, 16, 19, 22]
 solution : [6, 28, 23]

After backtrack at level 15
 pending : [25, 37, 0, 16, 19, 22, 20]
 solution : [6, 28, 23]


Before backtrack at level 14
 pending : [25, 37, 0, 16, 19, 22, 20]
 solution : [6, 28, 23]

After backtrack at level 14
 pending : [25, 37, 0, 16, 19, 22, 20, 15]
 solution : [6, 28, 23]


Before backtrack at level 13
 pending : [25, 37, 0, 16, 19, 22, 20, 15]
 solution : [6, 28, 23]

After backtrack at level 13
 pending : [25, 37, 0, 16, 19, 22, 20, 15, 21]
 solution : [6, 28, 23]


Before backtrack at level 12
 pending : [25, 37, 0, 16, 19, 22, 20, 15, 21]
 solution : [6, 28, 23]

After backtrack at level 12
 pending : [25, 37, 0, 16, 19, 22, 20, 15, 21, 23, 9, 29, 32, 38, 39, 42, 43, 47, 48, 49, 30, 33, 14]
 solution : [6, 28]


Before backtrack at level 11
 pending : [25, 37, 0, 16, 19, 22, 20, 15, 21, 23, 9, 29, 32, 38, 39, 42, 43, 47, 48, 49, 30, 33, 14]
 solution : [6, 28]

After backtrack at level 11
 pending : [25, 37, 0, 16, 19, 22, 20, 15, 21, 23, 9, 29, 32, 38, 39, 42, 43, 47, 48, 49, 30, 33, 14, 8]
 solution : [6, 28]


Before backtrack at level 10
 pending : [25, 37, 0, 16, 19, 22, 20, 15, 21, 23, 9, 29, 32, 38, 39, 42, 43, 47, 48, 49, 30, 33, 14, 8]
 solution : [6, 28]

After backtrack at level 10
 pending : [25, 37, 0, 16, 19, 22, 20, 15, 21, 23, 9, 29, 32, 38, 39, 42, 43, 47, 48, 49, 30, 33, 14, 8, 40]
 solution : [6, 28]


Before backtrack at level 9
 pending : [25, 37, 0, 16, 19, 22, 20, 15, 21, 23, 9, 29, 32, 38, 39, 42, 43, 47, 48, 49, 30, 33, 14, 8, 40]
 solution : [6, 28]

After backtrack at level 9
 pending : [25, 37, 0, 16, 19, 22, 20, 15, 21, 23, 9, 29, 32, 38, 39, 42, 43, 47, 48, 49, 30, 33, 14, 8, 40, 24]
 solution : [6, 28]


Before backtrack at level 8
 pending : [25, 37, 0, 16, 19, 22, 20, 15, 21, 23, 9, 29, 32, 38, 39, 42, 43, 47, 48, 49, 30, 33, 14, 8, 40, 24]
 solution : [6, 28]

After backtrack at level 8
 pending : [25, 37, 0, 16, 19, 22, 20, 15, 21, 23, 9, 29, 32, 38, 39, 42, 43, 47, 48, 49, 30, 33, 14, 8, 40, 24, 41]
 solution : [6, 28]


Before backtrack at level 7
 pending : [25, 37, 0, 16, 19, 22, 20, 15, 21, 23, 9, 29, 32, 38, 39, 42, 43, 47, 48, 49, 30, 33, 14, 8, 40, 24, 41]
 solution : [6, 28]

After backtrack at level 7
 pending : [25, 37, 0, 16, 19, 22, 20, 15, 21, 23, 9, 29, 32, 38, 39, 42, 43, 47, 48, 49, 30, 33, 14, 8, 40, 24, 41, 35]
 solution : [6, 28]


Before backtrack at level 6
 pending : [25, 37, 0, 16, 19, 22, 20, 15, 21, 23, 9, 29, 32, 38, 39, 42, 43, 47, 48, 49, 30, 33, 14, 8, 40, 24, 41, 35]
 solution : [6, 28]

After backtrack at level 6
 pending : [25, 37, 0, 16, 19, 22, 20, 15, 21, 23, 9, 29, 32, 38, 39, 42, 43, 47, 48, 49, 30, 33, 14, 8, 40, 24, 41, 35, 18]
 solution : [6, 28]


Before backtrack at level 5
 pending : [25, 37, 0, 16, 19, 22, 20, 15, 21, 23, 9, 29, 32, 38, 39, 42, 43, 47, 48, 49, 30, 33, 14, 8, 40, 24, 41, 35, 18]
 solution : [6, 28]

After backtrack at level 5
 pending : [25, 37, 0, 16, 19, 22, 20, 15, 21, 23, 9, 29, 32, 38, 39, 42, 43, 47, 48, 49, 30, 33, 14, 8, 40, 24, 41, 35, 18, 17]
 solution : [6, 28]


Before backtrack at level 4
 pending : [25, 37, 0, 16, 19, 22, 20, 15, 21, 23, 9, 29, 32, 38, 39, 42, 43, 47, 48, 49, 30, 33, 14, 8, 40, 24, 41, 35, 18, 17]
 solution : [6, 28]

After backtrack at level 4
 pending : [25, 37, 0, 16, 19, 22, 20, 15, 21, 23, 9, 29, 32, 38, 39, 42, 43, 47, 48, 49, 30, 33, 14, 8, 40, 24, 41, 35, 18, 17, 26]
 solution : [6, 28]


Invert decision for 28 at level 3


New level: 4
 pending : [25, 37, 0, 16, 19, 22, 20, 15, 21, 23, 9, 29, 32, 38, 39, 42, 43, 47, 48, 49, 30, 33, 14, 8, 40, 24, 41, 35, 18, 17, 26]
 solution : [6]


Before reduction : 
 pending  : [25, 37, 0, 16, 19, 22, 20, 15, 21, 23, 9, 29, 32, 38, 39, 42, 43, 47, 48, 49, 30, 33, 14, 8, 40, 24, 41, 35, 18, 17, 26]
 solution : [6]

Essensial at level 4 : set()

Before removed
 coverage : [(0, 524288), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, 524288), (17, -1), (18, -1), (19, 131072), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, 2097152), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, 2097152), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, 1048576), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, 134217728), (9, 1048576), (10, -1), (11, -1), (12, -1), (13, -1), (14, 67108864), (15, 33554432), (16, 1572864), (17, 2147483648), (18, 1073741824), (19, 524288), (20, 8388608), (21, 16777216), (22, 262144), (23, 134217728), (24, 1073741824), (25, 4194304), (26, 4294967296), (27, -1), (28, -1), (29, 16384), (30, 32768), (31, -1), (32, 1048576), (33, 4194304), (34, -1), (35, 2147483648), (36, -1), (37, 4194304), (38, 134217728), (39, 16384), (40, 268435456), (41, 1073741824), (42, 524288), (43, 524288), (44, -1), (45, -1), (46, -1), (47, 67108864), (48, 16777216), (49, 67108864), (50, -1), (51, -1), (52, -1)]

Covered at level 4 : set()

After reduction : 
 pending  : [25, 37, 0, 16, 19, 22, 20, 15, 21, 23, 9, 29, 32, 38, 39, 42, 43, 47, 48, 49, 30, 33, 14, 8, 40, 24, 41, 35, 18, 17, 26]
 solution : [6]


Solution : [6] has cost 6.


Decide in level 4 among pending : [25, 37, 0, 16, 19, 22, 20, 15, 21, 23, 9, 29, 32, 38, 39, 42, 43, 47, 48, 49, 30, 33, 14, 8, 40, 24, 41, 35, 18, 17, 26]

Coverage : [(0, 1048576), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, 134217728), (9, 1048576), (10, -1), (11, -1), (12, -1), (13, -1), (14, 67108864), (15, 33554432), (16, 1572864), (17, 2147483648), (18, 1073741824), (19, 524288), (20, 8388608), (21, 16777216), (22, 262144), (23, 134217728), (24, 1073741824), (25, 4194304), (26, 4294967296), (27, -1), (28, -1), (29, 16384), (30, 32768), (31, -1), (32, 1048576), (33, 4194304), (34, -1), (35, 2147483648), (36, -1), (37, 4194304), (38, 134217728), (39, 16384), (40, 268435456), (41, 1073741824), (42, 524288), (43, 524288), (44, -1), (45, -1), (46, -1), (47, 67108864), (48, 16777216), (49, 67108864), (50, -1), (51, -1), (52, -1)]

Decide 26 with phase True at level 4

After decision at level 4
 pending : [25, 37, 0, 16, 19, 22, 20, 15, 21, 23, 9, 29, 32, 38, 39, 42, 43, 47, 48, 49, 30, 33, 14, 8, 40, 24, 41, 35, 18, 17]
 solution : [6, 26]


New level: 5
 pending : [25, 37, 0, 16, 19, 22, 20, 15, 21, 23, 9, 29, 32, 38, 39, 42, 43, 47, 48, 49, 30, 33, 14, 8, 40, 24, 41, 35, 18, 17]
 solution : [6, 26]


Before reduction : 
 pending  : [25, 37, 0, 16, 19, 22, 20, 15, 21, 23, 9, 29, 32, 38, 39, 42, 43, 47, 48, 49, 30, 33, 14, 8, 40, 24, 41, 35, 18, 17]
 solution : [6, 26]

Essensial at level 5 : set()

Before removed
 coverage : [(0, 1048576), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, 134217728), (9, 1048576), (10, -1), (11, -1), (12, -1), (13, -1), (14, 67108864), (15, 33554432), (16, 1572864), (17, 2147483648), (18, 1073741824), (19, 524288), (20, 8388608), (21, 16777216), (22, 262144), (23, 134217728), (24, 1073741824), (25, 4194304), (26, 4294967296), (27, -1), (28, -1), (29, 16384), (30, 32768), (31, -1), (32, 1048576), (33, 4194304), (34, -1), (35, 2147483648), (36, -1), (37, 4194304), (38, 134217728), (39, 16384), (40, 268435456), (41, 1073741824), (42, 524288), (43, 524288), (44, -1), (45, -1), (46, -1), (47, 67108864), (48, 16777216), (49, 67108864), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, 0), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, 134217728), (9, 262144), (10, -1), (11, -1), (12, -1), (13, -1), (14, 0), (15, 0), (16, 0), (17, 0), (18, 0), (19, 0), (20, 0), (21, 0), (22, 0), (23, 134217728), (24, 1073741824), (25, 0), (26, -1), (27, -1), (28, -1), (29, 4096), (30, 8192), (31, -1), (32, 524288), (33, 4194304), (34, -1), (35, 2147483648), (36, -1), (37, 0), (38, 67108864), (39, 2048), (40, 2048), (41, 4096), (42, 131072), (43, 131072), (44, -1), (45, -1), (46, -1), (47, 33554432), (48, 4194304), (49, 16777216), (50, -1), (51, -1), (52, -1)]

Covered at level 5 : {0, 37, 14, 15, 16, 17, 18, 19, 20, 21, 22, 25}

After reduction : 
 pending  : [23, 9, 29, 32, 38, 39, 42, 43, 47, 48, 49, 30, 33, 8, 40, 24, 41, 35]
 solution : [6, 26]


Before reduction : 
 pending  : [23, 9, 29, 32, 38, 39, 42, 43, 47, 48, 49, 30, 33, 8, 40, 24, 41, 35]
 solution : [6, 26]

Essensial at level 5 : set()

Before removed
 coverage : [(0, 0), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, 134217728), (9, 262144), (10, -1), (11, -1), (12, -1), (13, -1), (14, 0), (15, 0), (16, 0), (17, 0), (18, 0), (19, 0), (20, 0), (21, 0), (22, 0), (23, 134217728), (24, 1073741824), (25, 0), (26, -1), (27, -1), (28, -1), (29, 4096), (30, 8192), (31, -1), (32, 524288), (33, 4194304), (34, -1), (35, 2147483648), (36, -1), (37, 0), (38, 67108864), (39, 2048), (40, 2048), (41, 4096), (42, 131072), (43, 131072), (44, -1), (45, -1), (46, -1), (47, 33554432), (48, 4194304), (49, 16777216), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, 134217728), (9, 262144), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, 134217728), (24, 1073741824), (25, -1), (26, -1), (27, -1), (28, -1), (29, 4096), (30, 8192), (31, -1), (32, 524288), (33, 4194304), (34, -1), (35, 2147483648), (36, -1), (37, -1), (38, 67108864), (39, 2048), (40, 2048), (41, 4096), (42, 131072), (43, 131072), (44, -1), (45, -1), (46, -1), (47, 33554432), (48, 4194304), (49, 16777216), (50, -1), (51, -1), (52, -1)]

Covered at level 5 : set()

After reduction : 
 pending  : [23, 9, 29, 32, 38, 39, 42, 43, 47, 48, 49, 30, 33, 8, 40, 24, 41, 35]
 solution : [6, 26]


Solution : [6, 26] has cost 10.


Decide in level 5 among pending : [23, 9, 29, 32, 38, 39, 42, 43, 47, 48, 49, 30, 33, 8, 40, 24, 41, 35]

Coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, 134217728), (9, 262144), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, 134217728), (24, 1073741824), (25, -1), (26, -1), (27, -1), (28, -1), (29, 4096), (30, 8192), (31, -1), (32, 524288), (33, 4194304), (34, -1), (35, 2147483648), (36, -1), (37, -1), (38, 67108864), (39, 2048), (40, 2048), (41, 4096), (42, 131072), (43, 131072), (44, -1), (45, -1), (46, -1), (47, 33554432), (48, 4194304), (49, 16777216), (50, -1), (51, -1), (52, -1)]

Decide 35 with phase True at level 5

After decision at level 5
 pending : [23, 9, 29, 32, 38, 39, 42, 43, 47, 48, 49, 30, 33, 8, 40, 24, 41]
 solution : [6, 26, 35]


New level: 6
 pending : [23, 9, 29, 32, 38, 39, 42, 43, 47, 48, 49, 30, 33, 8, 40, 24, 41]
 solution : [6, 26, 35]


Before reduction : 
 pending  : [23, 9, 29, 32, 38, 39, 42, 43, 47, 48, 49, 30, 33, 8, 40, 24, 41]
 solution : [6, 26, 35]

Essensial at level 6 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, 134217728), (9, 262144), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, 134217728), (24, 1073741824), (25, -1), (26, -1), (27, -1), (28, -1), (29, 4096), (30, 8192), (31, -1), (32, 524288), (33, 4194304), (34, -1), (35, 2147483648), (36, -1), (37, -1), (38, 67108864), (39, 2048), (40, 2048), (41, 4096), (42, 131072), (43, 131072), (44, -1), (45, -1), (46, -1), (47, 33554432), (48, 4194304), (49, 16777216), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, 134217728), (9, 65536), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, 134217728), (24, 4096), (25, -1), (26, -1), (27, -1), (28, -1), (29, 1024), (30, 0), (31, -1), (32, 131072), (33, 0), (34, -1), (35, -1), (36, -1), (37, -1), (38, 16777216), (39, 512), (40, 512), (41, 0), (42, 32768), (43, 32768), (44, -1), (45, -1), (46, -1), (47, 8388608), (48, 1048576), (49, 4194304), (50, -1), (51, -1), (52, -1)]

Covered at level 6 : {33, 30, 41}

After reduction : 
 pending  : [23, 9, 29, 32, 38, 39, 42, 43, 47, 48, 49, 8, 40, 24]
 solution : [6, 26, 35]


Before reduction : 
 pending  : [23, 9, 29, 32, 38, 39, 42, 43, 47, 48, 49, 8, 40, 24]
 solution : [6, 26, 35]

Essensial at level 6 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, 134217728), (9, 65536), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, 134217728), (24, 4096), (25, -1), (26, -1), (27, -1), (28, -1), (29, 1024), (30, 0), (31, -1), (32, 131072), (33, 0), (34, -1), (35, -1), (36, -1), (37, -1), (38, 16777216), (39, 512), (40, 512), (41, 0), (42, 32768), (43, 32768), (44, -1), (45, -1), (46, -1), (47, 8388608), (48, 1048576), (49, 4194304), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, 134217728), (9, 65536), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, 134217728), (24, 4096), (25, -1), (26, -1), (27, -1), (28, -1), (29, 1024), (30, -1), (31, -1), (32, 131072), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, 16777216), (39, 512), (40, 512), (41, -1), (42, 32768), (43, 32768), (44, -1), (45, -1), (46, -1), (47, 8388608), (48, 1048576), (49, 4194304), (50, -1), (51, -1), (52, -1)]

Covered at level 6 : set()

After reduction : 
 pending  : [23, 9, 29, 32, 38, 39, 42, 43, 47, 48, 49, 8, 40, 24]
 solution : [6, 26, 35]


Solution : [6, 26, 35] has cost 23.


Before backtrack at level 6
 pending : [23, 9, 29, 32, 38, 39, 42, 43, 47, 48, 49, 8, 40, 24]
 solution : [6, 26, 35]

After backtrack at level 6
 pending : [23, 9, 29, 32, 38, 39, 42, 43, 47, 48, 49, 8, 40, 24, 30, 33, 41]
 solution : [6, 26, 35]


Invert decision for 35 at level 5


New level: 6
 pending : [23, 9, 29, 32, 38, 39, 42, 43, 47, 48, 49, 8, 40, 24, 30, 33, 41]
 solution : [6, 26]


Before reduction : 
 pending  : [23, 9, 29, 32, 38, 39, 42, 43, 47, 48, 49, 8, 40, 24, 30, 33, 41]
 solution : [6, 26]

Essensial at level 6 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, 134217728), (9, 65536), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, 134217728), (24, 4096), (25, -1), (26, -1), (27, -1), (28, -1), (29, 1024), (30, -1), (31, -1), (32, 131072), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, 16777216), (39, 512), (40, 512), (41, -1), (42, 32768), (43, 32768), (44, -1), (45, -1), (46, -1), (47, 8388608), (48, 1048576), (49, 4194304), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, 134217728), (9, 262144), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, 134217728), (24, 1073741824), (25, -1), (26, -1), (27, -1), (28, -1), (29, 4096), (30, 8192), (31, -1), (32, 524288), (33, 4194304), (34, -1), (35, -1), (36, -1), (37, -1), (38, 67108864), (39, 2048), (40, 2048), (41, 4096), (42, 131072), (43, 131072), (44, -1), (45, -1), (46, -1), (47, 33554432), (48, 4194304), (49, 16777216), (50, -1), (51, -1), (52, -1)]

Covered at level 6 : set()

After reduction : 
 pending  : [23, 9, 29, 32, 38, 39, 42, 43, 47, 48, 49, 8, 40, 24, 30, 33, 41]
 solution : [6, 26]


Solution : [6, 26] has cost 10.


Decide in level 6 among pending : [23, 9, 29, 32, 38, 39, 42, 43, 47, 48, 49, 8, 40, 24, 30, 33, 41]

Coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, 134217728), (9, 262144), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, 134217728), (24, 1073741824), (25, -1), (26, -1), (27, -1), (28, -1), (29, 4096), (30, 8192), (31, -1), (32, 524288), (33, 4194304), (34, -1), (35, -1), (36, -1), (37, -1), (38, 67108864), (39, 2048), (40, 2048), (41, 4096), (42, 131072), (43, 131072), (44, -1), (45, -1), (46, -1), (47, 33554432), (48, 4194304), (49, 16777216), (50, -1), (51, -1), (52, -1)]

Decide 24 with phase True at level 6

After decision at level 6
 pending : [23, 9, 29, 32, 38, 39, 42, 43, 47, 48, 49, 8, 40, 30, 33, 41]
 solution : [6, 26, 24]


New level: 7
 pending : [23, 9, 29, 32, 38, 39, 42, 43, 47, 48, 49, 8, 40, 30, 33, 41]
 solution : [6, 26, 24]


Before reduction : 
 pending  : [23, 9, 29, 32, 38, 39, 42, 43, 47, 48, 49, 8, 40, 30, 33, 41]
 solution : [6, 26, 24]

Essensial at level 7 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, 134217728), (9, 262144), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, 134217728), (24, 1073741824), (25, -1), (26, -1), (27, -1), (28, -1), (29, 4096), (30, 8192), (31, -1), (32, 524288), (33, 4194304), (34, -1), (35, -1), (36, -1), (37, -1), (38, 67108864), (39, 2048), (40, 2048), (41, 4096), (42, 131072), (43, 131072), (44, -1), (45, -1), (46, -1), (47, 33554432), (48, 4194304), (49, 16777216), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, 33554432), (9, 65536), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, 33554432), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, 1024), (30, 0), (31, -1), (32, 131072), (33, 0), (34, -1), (35, -1), (36, -1), (37, -1), (38, 16777216), (39, 512), (40, 512), (41, 0), (42, 32768), (43, 32768), (44, -1), (45, -1), (46, -1), (47, 8388608), (48, 1048576), (49, 8388608), (50, -1), (51, -1), (52, -1)]

Covered at level 7 : {33, 30, 41}

After reduction : 
 pending  : [23, 9, 29, 32, 38, 39, 42, 43, 47, 48, 49, 8, 40]
 solution : [6, 26, 24]


Before reduction : 
 pending  : [23, 9, 29, 32, 38, 39, 42, 43, 47, 48, 49, 8, 40]
 solution : [6, 26, 24]

Essensial at level 7 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, 33554432), (9, 65536), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, 33554432), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, 1024), (30, 0), (31, -1), (32, 131072), (33, 0), (34, -1), (35, -1), (36, -1), (37, -1), (38, 16777216), (39, 512), (40, 512), (41, 0), (42, 32768), (43, 32768), (44, -1), (45, -1), (46, -1), (47, 8388608), (48, 1048576), (49, 8388608), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, 33554432), (9, 65536), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, 33554432), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, 1024), (30, -1), (31, -1), (32, 131072), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, 16777216), (39, 512), (40, 512), (41, -1), (42, 32768), (43, 32768), (44, -1), (45, -1), (46, -1), (47, 8388608), (48, 1048576), (49, 8388608), (50, -1), (51, -1), (52, -1)]

Covered at level 7 : set()

After reduction : 
 pending  : [23, 9, 29, 32, 38, 39, 42, 43, 47, 48, 49, 8, 40]
 solution : [6, 26, 24]


Solution : [6, 26, 24] has cost 17.


Decide in level 7 among pending : [23, 9, 29, 32, 38, 39, 42, 43, 47, 48, 49, 8, 40]

Coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, 33554432), (9, 65536), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, 33554432), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, 1024), (30, -1), (31, -1), (32, 131072), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, 16777216), (39, 512), (40, 512), (41, -1), (42, 32768), (43, 32768), (44, -1), (45, -1), (46, -1), (47, 8388608), (48, 1048576), (49, 8388608), (50, -1), (51, -1), (52, -1)]

Decide 23 with phase True at level 7

After decision at level 7
 pending : [9, 29, 32, 38, 39, 42, 43, 47, 48, 49, 8, 40]
 solution : [6, 26, 24, 23]


New level: 8
 pending : [9, 29, 32, 38, 39, 42, 43, 47, 48, 49, 8, 40]
 solution : [6, 26, 24, 23]


Before reduction : 
 pending  : [9, 29, 32, 38, 39, 42, 43, 47, 48, 49, 8, 40]
 solution : [6, 26, 24, 23]

Essensial at level 8 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, 33554432), (9, 65536), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, 33554432), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, 1024), (30, -1), (31, -1), (32, 131072), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, 16777216), (39, 512), (40, 512), (41, -1), (42, 32768), (43, 32768), (44, -1), (45, -1), (46, -1), (47, 8388608), (48, 1048576), (49, 8388608), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, 0), (9, 0), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, 0), (30, -1), (31, -1), (32, 0), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, 0), (39, 0), (40, 0), (41, -1), (42, 0), (43, 0), (44, -1), (45, -1), (46, -1), (47, 0), (48, 0), (49, 0), (50, -1), (51, -1), (52, -1)]

Covered at level 8 : {32, 38, 39, 8, 9, 42, 43, 40, 47, 48, 49, 29}

After reduction : 
 pending  : []
 solution : [6, 26, 24, 23]


Before reduction : 
 pending  : []
 solution : [6, 26, 24, 23]

Essensial at level 8 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, 0), (9, 0), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, 0), (30, -1), (31, -1), (32, 0), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, 0), (39, 0), (40, 0), (41, -1), (42, 0), (43, 0), (44, -1), (45, -1), (46, -1), (47, 0), (48, 0), (49, 0), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 8 : set()

After reduction : 
 pending  : []
 solution : [6, 26, 24, 23]


Solution : [6, 26, 24, 23] has cost 24.


Before backtrack at level 8
 pending : []
 solution : [6, 26, 24, 23]

After backtrack at level 8
 pending : [9, 29, 32, 38, 39, 42, 43, 47, 48, 49, 8, 40]
 solution : [6, 26, 24, 23]


Invert decision for 23 at level 7


New level: 8
 pending : [9, 29, 32, 38, 39, 42, 43, 47, 48, 49, 8, 40]
 solution : [6, 26, 24]


Before reduction : 
 pending  : [9, 29, 32, 38, 39, 42, 43, 47, 48, 49, 8, 40]
 solution : [6, 26, 24]

Essensial at level 8 : {8}

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, 0), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, 0), (30, -1), (31, -1), (32, 0), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, 0), (39, 0), (40, 0), (41, -1), (42, 0), (43, 0), (44, -1), (45, -1), (46, -1), (47, 0), (48, 0), (49, 0), (50, -1), (51, -1), (52, -1)]

Covered at level 8 : {32, 38, 39, 40, 9, 42, 43, 47, 48, 49, 29}

After reduction : 
 pending  : []
 solution : [6, 26, 24, 8]


Before reduction : 
 pending  : []
 solution : [6, 26, 24, 8]

Essensial at level 8 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, 0), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, 0), (30, -1), (31, -1), (32, 0), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, 0), (39, 0), (40, 0), (41, -1), (42, 0), (43, 0), (44, -1), (45, -1), (46, -1), (47, 0), (48, 0), (49, 0), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 8 : set()

After reduction : 
 pending  : []
 solution : [6, 26, 24, 8]


Solution : [6, 26, 24, 8] has cost 21.


Before backtrack at level 8
 pending : []
 solution : [6, 26, 24, 8]

After backtrack at level 8
 pending : [8, 9, 29, 32, 38, 39, 42, 43, 47, 48, 49, 40]
 solution : [6, 26, 24]


Before backtrack at level 7
 pending : [8, 9, 29, 32, 38, 39, 42, 43, 47, 48, 49, 40]
 solution : [6, 26, 24]

After backtrack at level 7
 pending : [8, 9, 29, 32, 38, 39, 42, 43, 47, 48, 49, 40, 30, 33, 41, 23]
 solution : [6, 26, 24]


Invert decision for 24 at level 6


New level: 7
 pending : [8, 9, 29, 32, 38, 39, 42, 43, 47, 48, 49, 40, 30, 33, 41, 23]
 solution : [6, 26]


Before reduction : 
 pending  : [8, 9, 29, 32, 38, 39, 42, 43, 47, 48, 49, 40, 30, 33, 41, 23]
 solution : [6, 26]

Essensial at level 7 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, 134217728), (9, 262144), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, 134217728), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, 4096), (30, 8192), (31, -1), (32, 524288), (33, 4194304), (34, -1), (35, -1), (36, -1), (37, -1), (38, 67108864), (39, 2048), (40, 2048), (41, 4096), (42, 131072), (43, 131072), (44, -1), (45, -1), (46, -1), (47, 33554432), (48, 4194304), (49, 16777216), (50, -1), (51, -1), (52, -1)]

Covered at level 7 : set()

After reduction : 
 pending  : [8, 9, 29, 32, 38, 39, 42, 43, 47, 48, 49, 40, 30, 33, 41, 23]
 solution : [6, 26]


Solution : [6, 26] has cost 10.


Decide in level 7 among pending : [8, 9, 29, 32, 38, 39, 42, 43, 47, 48, 49, 40, 30, 33, 41, 23]

Coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, 134217728), (9, 262144), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, 134217728), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, 4096), (30, 8192), (31, -1), (32, 524288), (33, 4194304), (34, -1), (35, -1), (36, -1), (37, -1), (38, 67108864), (39, 2048), (40, 2048), (41, 4096), (42, 131072), (43, 131072), (44, -1), (45, -1), (46, -1), (47, 33554432), (48, 4194304), (49, 16777216), (50, -1), (51, -1), (52, -1)]

Decide 8 with phase True at level 7

After decision at level 7
 pending : [9, 29, 32, 38, 39, 42, 43, 47, 48, 49, 40, 30, 33, 41, 23]
 solution : [6, 26, 8]


New level: 8
 pending : [9, 29, 32, 38, 39, 42, 43, 47, 48, 49, 40, 30, 33, 41, 23]
 solution : [6, 26, 8]


Before reduction : 
 pending  : [9, 29, 32, 38, 39, 42, 43, 47, 48, 49, 40, 30, 33, 41, 23]
 solution : [6, 26, 8]

Essensial at level 8 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, 134217728), (9, 262144), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, 134217728), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, 4096), (30, 8192), (31, -1), (32, 524288), (33, 4194304), (34, -1), (35, -1), (36, -1), (37, -1), (38, 67108864), (39, 2048), (40, 2048), (41, 4096), (42, 131072), (43, 131072), (44, -1), (45, -1), (46, -1), (47, 33554432), (48, 4194304), (49, 16777216), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, 0), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, 0), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, 0), (30, 0), (31, -1), (32, 0), (33, 0), (34, -1), (35, -1), (36, -1), (37, -1), (38, 0), (39, 0), (40, 0), (41, 0), (42, 0), (43, 0), (44, -1), (45, -1), (46, -1), (47, 0), (48, 0), (49, 0), (50, -1), (51, -1), (52, -1)]

Covered at level 8 : {32, 33, 38, 39, 40, 9, 42, 43, 41, 47, 48, 49, 23, 29, 30}

After reduction : 
 pending  : []
 solution : [6, 26, 8]


Before reduction : 
 pending  : []
 solution : [6, 26, 8]

Essensial at level 8 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, 0), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, 0), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, 0), (30, 0), (31, -1), (32, 0), (33, 0), (34, -1), (35, -1), (36, -1), (37, -1), (38, 0), (39, 0), (40, 0), (41, 0), (42, 0), (43, 0), (44, -1), (45, -1), (46, -1), (47, 0), (48, 0), (49, 0), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 8 : set()

After reduction : 
 pending  : []
 solution : [6, 26, 8]


Solution : [6, 26, 8] has cost 14.


Before backtrack at level 8
 pending : []
 solution : [6, 26, 8]

After backtrack at level 8
 pending : [9, 29, 32, 38, 39, 42, 43, 47, 48, 49, 40, 30, 33, 41, 23]
 solution : [6, 26, 8]


Invert decision for 8 at level 7


New level: 8
 pending : [9, 29, 32, 38, 39, 42, 43, 47, 48, 49, 40, 30, 33, 41, 23]
 solution : [6, 26]


Before reduction : 
 pending  : [9, 29, 32, 38, 39, 42, 43, 47, 48, 49, 40, 30, 33, 41, 23]
 solution : [6, 26]

Essensial at level 8 : {23}

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, 0), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, 0), (30, 0), (31, -1), (32, 0), (33, 0), (34, -1), (35, -1), (36, -1), (37, -1), (38, 0), (39, 0), (40, 0), (41, 0), (42, 0), (43, 0), (44, -1), (45, -1), (46, -1), (47, 0), (48, 0), (49, 0), (50, -1), (51, -1), (52, -1)]

Covered at level 8 : {32, 33, 38, 39, 40, 9, 42, 43, 41, 47, 48, 49, 29, 30}

After reduction : 
 pending  : []
 solution : [6, 26, 23]


Before reduction : 
 pending  : []
 solution : [6, 26, 23]

Essensial at level 8 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, 0), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, 0), (30, 0), (31, -1), (32, 0), (33, 0), (34, -1), (35, -1), (36, -1), (37, -1), (38, 0), (39, 0), (40, 0), (41, 0), (42, 0), (43, 0), (44, -1), (45, -1), (46, -1), (47, 0), (48, 0), (49, 0), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 8 : set()

After reduction : 
 pending  : []
 solution : [6, 26, 23]


Solution : [6, 26, 23] has cost 17.


Before backtrack at level 8
 pending : []
 solution : [6, 26, 23]

After backtrack at level 8
 pending : [23, 9, 29, 32, 38, 39, 42, 43, 47, 48, 49, 40, 30, 33, 41]
 solution : [6, 26]


Before backtrack at level 7
 pending : [23, 9, 29, 32, 38, 39, 42, 43, 47, 48, 49, 40, 30, 33, 41]
 solution : [6, 26]

After backtrack at level 7
 pending : [23, 9, 29, 32, 38, 39, 42, 43, 47, 48, 49, 40, 30, 33, 41, 8]
 solution : [6, 26]


Before backtrack at level 6
 pending : [23, 9, 29, 32, 38, 39, 42, 43, 47, 48, 49, 40, 30, 33, 41, 8]
 solution : [6, 26]

After backtrack at level 6
 pending : [23, 9, 29, 32, 38, 39, 42, 43, 47, 48, 49, 40, 30, 33, 41, 8, 24]
 solution : [6, 26]


Before backtrack at level 5
 pending : [23, 9, 29, 32, 38, 39, 42, 43, 47, 48, 49, 40, 30, 33, 41, 8, 24]
 solution : [6, 26]

After backtrack at level 5
 pending : [23, 9, 29, 32, 38, 39, 42, 43, 47, 48, 49, 40, 30, 33, 41, 8, 24, 25, 37, 0, 16, 19, 22, 20, 15, 21, 14, 18, 17, 35]
 solution : [6, 26]


Invert decision for 26 at level 4


New level: 5
 pending : [23, 9, 29, 32, 38, 39, 42, 43, 47, 48, 49, 40, 30, 33, 41, 8, 24, 25, 37, 0, 16, 19, 22, 20, 15, 21, 14, 18, 17, 35]
 solution : [6]


Before reduction : 
 pending  : [23, 9, 29, 32, 38, 39, 42, 43, 47, 48, 49, 40, 30, 33, 41, 8, 24, 25, 37, 0, 16, 19, 22, 20, 15, 21, 14, 18, 17, 35]
 solution : [6]

Essensial at level 5 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, 1048576), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, 134217728), (9, 1048576), (10, -1), (11, -1), (12, -1), (13, -1), (14, 67108864), (15, 33554432), (16, 1572864), (17, 2147483648), (18, 1073741824), (19, 524288), (20, 8388608), (21, 16777216), (22, 262144), (23, 134217728), (24, 1073741824), (25, 4194304), (26, -1), (27, -1), (28, -1), (29, 16384), (30, 32768), (31, -1), (32, 1048576), (33, 4194304), (34, -1), (35, 2147483648), (36, -1), (37, 4194304), (38, 134217728), (39, 16384), (40, 268435456), (41, 1073741824), (42, 524288), (43, 524288), (44, -1), (45, -1), (46, -1), (47, 67108864), (48, 16777216), (49, 67108864), (50, -1), (51, -1), (52, -1)]

Covered at level 5 : set()

After reduction : 
 pending  : [23, 9, 29, 32, 38, 39, 42, 43, 47, 48, 49, 40, 30, 33, 41, 8, 24, 25, 37, 0, 16, 19, 22, 20, 15, 21, 14, 18, 17, 35]
 solution : [6]


Solution : [6] has cost 6.


Decide in level 5 among pending : [23, 9, 29, 32, 38, 39, 42, 43, 47, 48, 49, 40, 30, 33, 41, 8, 24, 25, 37, 0, 16, 19, 22, 20, 15, 21, 14, 18, 17, 35]

Coverage : [(0, 1048576), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, 134217728), (9, 1048576), (10, -1), (11, -1), (12, -1), (13, -1), (14, 67108864), (15, 33554432), (16, 1572864), (17, 2147483648), (18, 1073741824), (19, 524288), (20, 8388608), (21, 16777216), (22, 262144), (23, 134217728), (24, 1073741824), (25, 4194304), (26, -1), (27, -1), (28, -1), (29, 16384), (30, 32768), (31, -1), (32, 1048576), (33, 4194304), (34, -1), (35, 2147483648), (36, -1), (37, 4194304), (38, 134217728), (39, 16384), (40, 268435456), (41, 1073741824), (42, 524288), (43, 524288), (44, -1), (45, -1), (46, -1), (47, 67108864), (48, 16777216), (49, 67108864), (50, -1), (51, -1), (52, -1)]

Decide 17 with phase True at level 5

After decision at level 5
 pending : [23, 9, 29, 32, 38, 39, 42, 43, 47, 48, 49, 40, 30, 33, 41, 8, 24, 25, 37, 0, 16, 19, 22, 20, 15, 21, 14, 18, 35]
 solution : [6, 17]


New level: 6
 pending : [23, 9, 29, 32, 38, 39, 42, 43, 47, 48, 49, 40, 30, 33, 41, 8, 24, 25, 37, 0, 16, 19, 22, 20, 15, 21, 14, 18, 35]
 solution : [6, 17]


Before reduction : 
 pending  : [23, 9, 29, 32, 38, 39, 42, 43, 47, 48, 49, 40, 30, 33, 41, 8, 24, 25, 37, 0, 16, 19, 22, 20, 15, 21, 14, 18, 35]
 solution : [6, 17]

Essensial at level 6 : set()

Before removed
 coverage : [(0, 1048576), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, 134217728), (9, 1048576), (10, -1), (11, -1), (12, -1), (13, -1), (14, 67108864), (15, 33554432), (16, 1572864), (17, 2147483648), (18, 1073741824), (19, 524288), (20, 8388608), (21, 16777216), (22, 262144), (23, 134217728), (24, 1073741824), (25, 4194304), (26, -1), (27, -1), (28, -1), (29, 16384), (30, 32768), (31, -1), (32, 1048576), (33, 4194304), (34, -1), (35, 2147483648), (36, -1), (37, 4194304), (38, 134217728), (39, 16384), (40, 268435456), (41, 1073741824), (42, 524288), (43, 524288), (44, -1), (45, -1), (46, -1), (47, 67108864), (48, 16777216), (49, 67108864), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, 0), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, 134217728), (9, 262144), (10, -1), (11, -1), (12, -1), (13, -1), (14, 0), (15, 0), (16, 0), (17, -1), (18, 0), (19, 0), (20, 0), (21, 0), (22, 0), (23, 134217728), (24, 1073741824), (25, 0), (26, -1), (27, -1), (28, -1), (29, 4096), (30, 8192), (31, -1), (32, 524288), (33, 4194304), (34, -1), (35, 2147483648), (36, -1), (37, 0), (38, 67108864), (39, 2048), (40, 2048), (41, 4096), (42, 131072), (43, 131072), (44, -1), (45, -1), (46, -1), (47, 33554432), (48, 4194304), (49, 67108864), (50, -1), (51, -1), (52, -1)]

Covered at level 6 : {0, 37, 14, 15, 16, 18, 19, 20, 21, 22, 25}

After reduction : 
 pending  : [23, 9, 29, 32, 38, 39, 42, 43, 47, 48, 49, 40, 30, 33, 41, 8, 24, 35]
 solution : [6, 17]


Before reduction : 
 pending  : [23, 9, 29, 32, 38, 39, 42, 43, 47, 48, 49, 40, 30, 33, 41, 8, 24, 35]
 solution : [6, 17]

Essensial at level 6 : set()

Before removed
 coverage : [(0, 0), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, 134217728), (9, 262144), (10, -1), (11, -1), (12, -1), (13, -1), (14, 0), (15, 0), (16, 0), (17, -1), (18, 0), (19, 0), (20, 0), (21, 0), (22, 0), (23, 134217728), (24, 1073741824), (25, 0), (26, -1), (27, -1), (28, -1), (29, 4096), (30, 8192), (31, -1), (32, 524288), (33, 4194304), (34, -1), (35, 2147483648), (36, -1), (37, 0), (38, 67108864), (39, 2048), (40, 2048), (41, 4096), (42, 131072), (43, 131072), (44, -1), (45, -1), (46, -1), (47, 33554432), (48, 4194304), (49, 67108864), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, 134217728), (9, 262144), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, 134217728), (24, 1073741824), (25, -1), (26, -1), (27, -1), (28, -1), (29, 4096), (30, 8192), (31, -1), (32, 524288), (33, 4194304), (34, -1), (35, 2147483648), (36, -1), (37, -1), (38, 67108864), (39, 2048), (40, 2048), (41, 4096), (42, 131072), (43, 131072), (44, -1), (45, -1), (46, -1), (47, 33554432), (48, 4194304), (49, 67108864), (50, -1), (51, -1), (52, -1)]

Covered at level 6 : set()

After reduction : 
 pending  : [23, 9, 29, 32, 38, 39, 42, 43, 47, 48, 49, 40, 30, 33, 41, 8, 24, 35]
 solution : [6, 17]


Solution : [6, 17] has cost 13.


Decide in level 6 among pending : [23, 9, 29, 32, 38, 39, 42, 43, 47, 48, 49, 40, 30, 33, 41, 8, 24, 35]

Coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, 134217728), (9, 262144), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, 134217728), (24, 1073741824), (25, -1), (26, -1), (27, -1), (28, -1), (29, 4096), (30, 8192), (31, -1), (32, 524288), (33, 4194304), (34, -1), (35, 2147483648), (36, -1), (37, -1), (38, 67108864), (39, 2048), (40, 2048), (41, 4096), (42, 131072), (43, 131072), (44, -1), (45, -1), (46, -1), (47, 33554432), (48, 4194304), (49, 67108864), (50, -1), (51, -1), (52, -1)]

Decide 35 with phase True at level 6

After decision at level 6
 pending : [23, 9, 29, 32, 38, 39, 42, 43, 47, 48, 49, 40, 30, 33, 41, 8, 24]
 solution : [6, 17, 35]


New level: 7
 pending : [23, 9, 29, 32, 38, 39, 42, 43, 47, 48, 49, 40, 30, 33, 41, 8, 24]
 solution : [6, 17, 35]


Before reduction : 
 pending  : [23, 9, 29, 32, 38, 39, 42, 43, 47, 48, 49, 40, 30, 33, 41, 8, 24]
 solution : [6, 17, 35]

Essensial at level 7 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, 134217728), (9, 262144), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, 134217728), (24, 1073741824), (25, -1), (26, -1), (27, -1), (28, -1), (29, 4096), (30, 8192), (31, -1), (32, 524288), (33, 4194304), (34, -1), (35, 2147483648), (36, -1), (37, -1), (38, 67108864), (39, 2048), (40, 2048), (41, 4096), (42, 131072), (43, 131072), (44, -1), (45, -1), (46, -1), (47, 33554432), (48, 4194304), (49, 67108864), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, 134217728), (9, 65536), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, 134217728), (24, 4096), (25, -1), (26, -1), (27, -1), (28, -1), (29, 1024), (30, 0), (31, -1), (32, 131072), (33, 0), (34, -1), (35, -1), (36, -1), (37, -1), (38, 16777216), (39, 512), (40, 512), (41, 0), (42, 32768), (43, 32768), (44, -1), (45, -1), (46, -1), (47, 8388608), (48, 1048576), (49, 16777216), (50, -1), (51, -1), (52, -1)]

Covered at level 7 : {33, 30, 41}

After reduction : 
 pending  : [23, 9, 29, 32, 38, 39, 42, 43, 47, 48, 49, 40, 8, 24]
 solution : [6, 17, 35]


Before reduction : 
 pending  : [23, 9, 29, 32, 38, 39, 42, 43, 47, 48, 49, 40, 8, 24]
 solution : [6, 17, 35]

Essensial at level 7 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, 134217728), (9, 65536), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, 134217728), (24, 4096), (25, -1), (26, -1), (27, -1), (28, -1), (29, 1024), (30, 0), (31, -1), (32, 131072), (33, 0), (34, -1), (35, -1), (36, -1), (37, -1), (38, 16777216), (39, 512), (40, 512), (41, 0), (42, 32768), (43, 32768), (44, -1), (45, -1), (46, -1), (47, 8388608), (48, 1048576), (49, 16777216), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, 134217728), (9, 65536), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, 134217728), (24, 4096), (25, -1), (26, -1), (27, -1), (28, -1), (29, 1024), (30, -1), (31, -1), (32, 131072), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, 16777216), (39, 512), (40, 512), (41, -1), (42, 32768), (43, 32768), (44, -1), (45, -1), (46, -1), (47, 8388608), (48, 1048576), (49, 16777216), (50, -1), (51, -1), (52, -1)]

Covered at level 7 : set()

After reduction : 
 pending  : [23, 9, 29, 32, 38, 39, 42, 43, 47, 48, 49, 40, 8, 24]
 solution : [6, 17, 35]


Solution : [6, 17, 35] has cost 26.


Before backtrack at level 7
 pending : [23, 9, 29, 32, 38, 39, 42, 43, 47, 48, 49, 40, 8, 24]
 solution : [6, 17, 35]

After backtrack at level 7
 pending : [23, 9, 29, 32, 38, 39, 42, 43, 47, 48, 49, 40, 8, 24, 30, 33, 41]
 solution : [6, 17, 35]


Invert decision for 35 at level 6


New level: 7
 pending : [23, 9, 29, 32, 38, 39, 42, 43, 47, 48, 49, 40, 8, 24, 30, 33, 41]
 solution : [6, 17]


Before reduction : 
 pending  : [23, 9, 29, 32, 38, 39, 42, 43, 47, 48, 49, 40, 8, 24, 30, 33, 41]
 solution : [6, 17]

Essensial at level 7 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, 134217728), (9, 65536), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, 134217728), (24, 4096), (25, -1), (26, -1), (27, -1), (28, -1), (29, 1024), (30, -1), (31, -1), (32, 131072), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, 16777216), (39, 512), (40, 512), (41, -1), (42, 32768), (43, 32768), (44, -1), (45, -1), (46, -1), (47, 8388608), (48, 1048576), (49, 16777216), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, 134217728), (9, 262144), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, 134217728), (24, 1073741824), (25, -1), (26, -1), (27, -1), (28, -1), (29, 4096), (30, 8192), (31, -1), (32, 524288), (33, 4194304), (34, -1), (35, -1), (36, -1), (37, -1), (38, 67108864), (39, 2048), (40, 2048), (41, 4096), (42, 131072), (43, 131072), (44, -1), (45, -1), (46, -1), (47, 33554432), (48, 4194304), (49, 67108864), (50, -1), (51, -1), (52, -1)]

Covered at level 7 : set()

After reduction : 
 pending  : [23, 9, 29, 32, 38, 39, 42, 43, 47, 48, 49, 40, 8, 24, 30, 33, 41]
 solution : [6, 17]


Solution : [6, 17] has cost 13.


Decide in level 7 among pending : [23, 9, 29, 32, 38, 39, 42, 43, 47, 48, 49, 40, 8, 24, 30, 33, 41]

Coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, 134217728), (9, 262144), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, 134217728), (24, 1073741824), (25, -1), (26, -1), (27, -1), (28, -1), (29, 4096), (30, 8192), (31, -1), (32, 524288), (33, 4194304), (34, -1), (35, -1), (36, -1), (37, -1), (38, 67108864), (39, 2048), (40, 2048), (41, 4096), (42, 131072), (43, 131072), (44, -1), (45, -1), (46, -1), (47, 33554432), (48, 4194304), (49, 67108864), (50, -1), (51, -1), (52, -1)]

Decide 24 with phase True at level 7

After decision at level 7
 pending : [23, 9, 29, 32, 38, 39, 42, 43, 47, 48, 49, 40, 8, 30, 33, 41]
 solution : [6, 17, 24]


New level: 8
 pending : [23, 9, 29, 32, 38, 39, 42, 43, 47, 48, 49, 40, 8, 30, 33, 41]
 solution : [6, 17, 24]


Before reduction : 
 pending  : [23, 9, 29, 32, 38, 39, 42, 43, 47, 48, 49, 40, 8, 30, 33, 41]
 solution : [6, 17, 24]

Essensial at level 8 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, 134217728), (9, 262144), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, 134217728), (24, 1073741824), (25, -1), (26, -1), (27, -1), (28, -1), (29, 4096), (30, 8192), (31, -1), (32, 524288), (33, 4194304), (34, -1), (35, -1), (36, -1), (37, -1), (38, 67108864), (39, 2048), (40, 2048), (41, 4096), (42, 131072), (43, 131072), (44, -1), (45, -1), (46, -1), (47, 33554432), (48, 4194304), (49, 67108864), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, 33554432), (9, 65536), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, 33554432), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, 1024), (30, 0), (31, -1), (32, 131072), (33, 0), (34, -1), (35, -1), (36, -1), (37, -1), (38, 16777216), (39, 512), (40, 512), (41, 0), (42, 32768), (43, 32768), (44, -1), (45, -1), (46, -1), (47, 8388608), (48, 1048576), (49, 33554432), (50, -1), (51, -1), (52, -1)]

Covered at level 8 : {33, 30, 41}

After reduction : 
 pending  : [23, 9, 29, 32, 38, 39, 42, 43, 47, 48, 49, 40, 8]
 solution : [6, 17, 24]


Before reduction : 
 pending  : [23, 9, 29, 32, 38, 39, 42, 43, 47, 48, 49, 40, 8]
 solution : [6, 17, 24]

Essensial at level 8 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, 33554432), (9, 65536), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, 33554432), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, 1024), (30, 0), (31, -1), (32, 131072), (33, 0), (34, -1), (35, -1), (36, -1), (37, -1), (38, 16777216), (39, 512), (40, 512), (41, 0), (42, 32768), (43, 32768), (44, -1), (45, -1), (46, -1), (47, 8388608), (48, 1048576), (49, 33554432), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, 33554432), (9, 65536), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, 33554432), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, 1024), (30, -1), (31, -1), (32, 131072), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, 16777216), (39, 512), (40, 512), (41, -1), (42, 32768), (43, 32768), (44, -1), (45, -1), (46, -1), (47, 8388608), (48, 1048576), (49, 33554432), (50, -1), (51, -1), (52, -1)]

Covered at level 8 : set()

After reduction : 
 pending  : [23, 9, 29, 32, 38, 39, 42, 43, 47, 48, 49, 40, 8]
 solution : [6, 17, 24]


Solution : [6, 17, 24] has cost 20.


Before backtrack at level 8
 pending : [23, 9, 29, 32, 38, 39, 42, 43, 47, 48, 49, 40, 8]
 solution : [6, 17, 24]

After backtrack at level 8
 pending : [23, 9, 29, 32, 38, 39, 42, 43, 47, 48, 49, 40, 8, 30, 33, 41]
 solution : [6, 17, 24]


Invert decision for 24 at level 7


New level: 8
 pending : [23, 9, 29, 32, 38, 39, 42, 43, 47, 48, 49, 40, 8, 30, 33, 41]
 solution : [6, 17]


Before reduction : 
 pending  : [23, 9, 29, 32, 38, 39, 42, 43, 47, 48, 49, 40, 8, 30, 33, 41]
 solution : [6, 17]

Essensial at level 8 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, 33554432), (9, 65536), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, 33554432), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, 1024), (30, -1), (31, -1), (32, 131072), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, 16777216), (39, 512), (40, 512), (41, -1), (42, 32768), (43, 32768), (44, -1), (45, -1), (46, -1), (47, 8388608), (48, 1048576), (49, 33554432), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, 134217728), (9, 262144), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, 134217728), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, 4096), (30, 8192), (31, -1), (32, 524288), (33, 4194304), (34, -1), (35, -1), (36, -1), (37, -1), (38, 67108864), (39, 2048), (40, 2048), (41, 4096), (42, 131072), (43, 131072), (44, -1), (45, -1), (46, -1), (47, 33554432), (48, 4194304), (49, 67108864), (50, -1), (51, -1), (52, -1)]

Covered at level 8 : set()

After reduction : 
 pending  : [23, 9, 29, 32, 38, 39, 42, 43, 47, 48, 49, 40, 8, 30, 33, 41]
 solution : [6, 17]


Solution : [6, 17] has cost 13.


Decide in level 8 among pending : [23, 9, 29, 32, 38, 39, 42, 43, 47, 48, 49, 40, 8, 30, 33, 41]

Coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, 134217728), (9, 262144), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, 134217728), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, 4096), (30, 8192), (31, -1), (32, 524288), (33, 4194304), (34, -1), (35, -1), (36, -1), (37, -1), (38, 67108864), (39, 2048), (40, 2048), (41, 4096), (42, 131072), (43, 131072), (44, -1), (45, -1), (46, -1), (47, 33554432), (48, 4194304), (49, 67108864), (50, -1), (51, -1), (52, -1)]

Decide 23 with phase True at level 8

After decision at level 8
 pending : [9, 29, 32, 38, 39, 42, 43, 47, 48, 49, 40, 8, 30, 33, 41]
 solution : [6, 17, 23]


New level: 9
 pending : [9, 29, 32, 38, 39, 42, 43, 47, 48, 49, 40, 8, 30, 33, 41]
 solution : [6, 17, 23]


Before reduction : 
 pending  : [9, 29, 32, 38, 39, 42, 43, 47, 48, 49, 40, 8, 30, 33, 41]
 solution : [6, 17, 23]

Essensial at level 9 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, 134217728), (9, 262144), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, 134217728), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, 4096), (30, 8192), (31, -1), (32, 524288), (33, 4194304), (34, -1), (35, -1), (36, -1), (37, -1), (38, 67108864), (39, 2048), (40, 2048), (41, 4096), (42, 131072), (43, 131072), (44, -1), (45, -1), (46, -1), (47, 33554432), (48, 4194304), (49, 67108864), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, 0), (9, 0), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, 0), (30, 0), (31, -1), (32, 0), (33, 0), (34, -1), (35, -1), (36, -1), (37, -1), (38, 0), (39, 0), (40, 0), (41, 0), (42, 0), (43, 0), (44, -1), (45, -1), (46, -1), (47, 0), (48, 0), (49, 0), (50, -1), (51, -1), (52, -1)]

Covered at level 9 : {32, 33, 38, 39, 40, 9, 42, 43, 8, 41, 47, 48, 49, 29, 30}

After reduction : 
 pending  : []
 solution : [6, 17, 23]


Before reduction : 
 pending  : []
 solution : [6, 17, 23]

Essensial at level 9 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, 0), (9, 0), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, 0), (30, 0), (31, -1), (32, 0), (33, 0), (34, -1), (35, -1), (36, -1), (37, -1), (38, 0), (39, 0), (40, 0), (41, 0), (42, 0), (43, 0), (44, -1), (45, -1), (46, -1), (47, 0), (48, 0), (49, 0), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 9 : set()

After reduction : 
 pending  : []
 solution : [6, 17, 23]


Solution : [6, 17, 23] has cost 20.


Before backtrack at level 9
 pending : []
 solution : [6, 17, 23]

After backtrack at level 9
 pending : [9, 29, 32, 38, 39, 42, 43, 47, 48, 49, 40, 8, 30, 33, 41]
 solution : [6, 17, 23]


Invert decision for 23 at level 8


New level: 9
 pending : [9, 29, 32, 38, 39, 42, 43, 47, 48, 49, 40, 8, 30, 33, 41]
 solution : [6, 17]


Before reduction : 
 pending  : [9, 29, 32, 38, 39, 42, 43, 47, 48, 49, 40, 8, 30, 33, 41]
 solution : [6, 17]

Essensial at level 9 : {8}

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, 0), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, 0), (30, 0), (31, -1), (32, 0), (33, 0), (34, -1), (35, -1), (36, -1), (37, -1), (38, 0), (39, 0), (40, 0), (41, 0), (42, 0), (43, 0), (44, -1), (45, -1), (46, -1), (47, 0), (48, 0), (49, 0), (50, -1), (51, -1), (52, -1)]

Covered at level 9 : {32, 33, 38, 39, 40, 9, 42, 43, 41, 47, 48, 49, 29, 30}

After reduction : 
 pending  : []
 solution : [6, 17, 8]


Before reduction : 
 pending  : []
 solution : [6, 17, 8]

Essensial at level 9 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, 0), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, 0), (30, 0), (31, -1), (32, 0), (33, 0), (34, -1), (35, -1), (36, -1), (37, -1), (38, 0), (39, 0), (40, 0), (41, 0), (42, 0), (43, 0), (44, -1), (45, -1), (46, -1), (47, 0), (48, 0), (49, 0), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 9 : set()

After reduction : 
 pending  : []
 solution : [6, 17, 8]


Solution : [6, 17, 8] has cost 17.


Before backtrack at level 9
 pending : []
 solution : [6, 17, 8]

After backtrack at level 9
 pending : [8, 9, 29, 32, 38, 39, 42, 43, 47, 48, 49, 40, 30, 33, 41]
 solution : [6, 17]


Before backtrack at level 8
 pending : [8, 9, 29, 32, 38, 39, 42, 43, 47, 48, 49, 40, 30, 33, 41]
 solution : [6, 17]

After backtrack at level 8
 pending : [8, 9, 29, 32, 38, 39, 42, 43, 47, 48, 49, 40, 30, 33, 41, 23]
 solution : [6, 17]


Before backtrack at level 7
 pending : [8, 9, 29, 32, 38, 39, 42, 43, 47, 48, 49, 40, 30, 33, 41, 23]
 solution : [6, 17]

After backtrack at level 7
 pending : [8, 9, 29, 32, 38, 39, 42, 43, 47, 48, 49, 40, 30, 33, 41, 23, 24]
 solution : [6, 17]


Before backtrack at level 6
 pending : [8, 9, 29, 32, 38, 39, 42, 43, 47, 48, 49, 40, 30, 33, 41, 23, 24]
 solution : [6, 17]

After backtrack at level 6
 pending : [8, 9, 29, 32, 38, 39, 42, 43, 47, 48, 49, 40, 30, 33, 41, 23, 24, 25, 37, 0, 16, 19, 22, 20, 15, 21, 14, 18, 35]
 solution : [6, 17]


Invert decision for 17 at level 5


New level: 6
 pending : [8, 9, 29, 32, 38, 39, 42, 43, 47, 48, 49, 40, 30, 33, 41, 23, 24, 25, 37, 0, 16, 19, 22, 20, 15, 21, 14, 18, 35]
 solution : [6]


Before reduction : 
 pending  : [8, 9, 29, 32, 38, 39, 42, 43, 47, 48, 49, 40, 30, 33, 41, 23, 24, 25, 37, 0, 16, 19, 22, 20, 15, 21, 14, 18, 35]
 solution : [6]

Essensial at level 6 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, 1048576), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, 134217728), (9, 1048576), (10, -1), (11, -1), (12, -1), (13, -1), (14, 67108864), (15, 33554432), (16, 1572864), (17, -1), (18, 1073741824), (19, 524288), (20, 8388608), (21, 16777216), (22, 262144), (23, 134217728), (24, 1073741824), (25, 4194304), (26, -1), (27, -1), (28, -1), (29, 16384), (30, 32768), (31, -1), (32, 1048576), (33, 4194304), (34, -1), (35, 2147483648), (36, -1), (37, 4194304), (38, 134217728), (39, 16384), (40, 268435456), (41, 1073741824), (42, 524288), (43, 524288), (44, -1), (45, -1), (46, -1), (47, 67108864), (48, 16777216), (49, 67108864), (50, -1), (51, -1), (52, -1)]

Covered at level 6 : set()

After reduction : 
 pending  : [8, 9, 29, 32, 38, 39, 42, 43, 47, 48, 49, 40, 30, 33, 41, 23, 24, 25, 37, 0, 16, 19, 22, 20, 15, 21, 14, 18, 35]
 solution : [6]


Solution : [6] has cost 6.


Decide in level 6 among pending : [8, 9, 29, 32, 38, 39, 42, 43, 47, 48, 49, 40, 30, 33, 41, 23, 24, 25, 37, 0, 16, 19, 22, 20, 15, 21, 14, 18, 35]

Coverage : [(0, 1048576), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, 134217728), (9, 1048576), (10, -1), (11, -1), (12, -1), (13, -1), (14, 67108864), (15, 33554432), (16, 1572864), (17, -1), (18, 1073741824), (19, 524288), (20, 8388608), (21, 16777216), (22, 262144), (23, 134217728), (24, 1073741824), (25, 4194304), (26, -1), (27, -1), (28, -1), (29, 16384), (30, 32768), (31, -1), (32, 1048576), (33, 4194304), (34, -1), (35, 2147483648), (36, -1), (37, 4194304), (38, 134217728), (39, 16384), (40, 268435456), (41, 1073741824), (42, 524288), (43, 524288), (44, -1), (45, -1), (46, -1), (47, 67108864), (48, 16777216), (49, 67108864), (50, -1), (51, -1), (52, -1)]

Decide 35 with phase True at level 6

After decision at level 6
 pending : [8, 9, 29, 32, 38, 39, 42, 43, 47, 48, 49, 40, 30, 33, 41, 23, 24, 25, 37, 0, 16, 19, 22, 20, 15, 21, 14, 18]
 solution : [6, 35]


New level: 7
 pending : [8, 9, 29, 32, 38, 39, 42, 43, 47, 48, 49, 40, 30, 33, 41, 23, 24, 25, 37, 0, 16, 19, 22, 20, 15, 21, 14, 18]
 solution : [6, 35]


Before reduction : 
 pending  : [8, 9, 29, 32, 38, 39, 42, 43, 47, 48, 49, 40, 30, 33, 41, 23, 24, 25, 37, 0, 16, 19, 22, 20, 15, 21, 14, 18]
 solution : [6, 35]

Essensial at level 7 : set()

Before removed
 coverage : [(0, 1048576), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, 134217728), (9, 1048576), (10, -1), (11, -1), (12, -1), (13, -1), (14, 67108864), (15, 33554432), (16, 1572864), (17, -1), (18, 1073741824), (19, 524288), (20, 8388608), (21, 16777216), (22, 262144), (23, 134217728), (24, 1073741824), (25, 4194304), (26, -1), (27, -1), (28, -1), (29, 16384), (30, 32768), (31, -1), (32, 1048576), (33, 4194304), (34, -1), (35, 2147483648), (36, -1), (37, 4194304), (38, 134217728), (39, 16384), (40, 268435456), (41, 1073741824), (42, 524288), (43, 524288), (44, -1), (45, -1), (46, -1), (47, 67108864), (48, 16777216), (49, 67108864), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, 1048576), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, 134217728), (9, 262144), (10, -1), (11, -1), (12, -1), (13, -1), (14, 67108864), (15, 33554432), (16, 1572864), (17, -1), (18, 1073741824), (19, 524288), (20, 8388608), (21, 16777216), (22, 262144), (23, 134217728), (24, 32768), (25, 4194304), (26, -1), (27, -1), (28, -1), (29, 4096), (30, 0), (31, -1), (32, 262144), (33, 0), (34, -1), (35, -1), (36, -1), (37, 4194304), (38, 33554432), (39, 4096), (40, 268435456), (41, 32768), (42, 131072), (43, 131072), (44, -1), (45, -1), (46, -1), (47, 16777216), (48, 4194304), (49, 16777216), (50, -1), (51, -1), (52, -1)]

Covered at level 7 : {33, 30}

After reduction : 
 pending  : [8, 9, 29, 32, 38, 39, 42, 43, 47, 48, 49, 40, 41, 23, 24, 25, 37, 0, 16, 19, 22, 20, 15, 21, 14, 18]
 solution : [6, 35]


Before reduction : 
 pending  : [8, 9, 29, 32, 38, 39, 42, 43, 47, 48, 49, 40, 41, 23, 24, 25, 37, 0, 16, 19, 22, 20, 15, 21, 14, 18]
 solution : [6, 35]

Essensial at level 7 : set()

Before removed
 coverage : [(0, 1048576), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, 134217728), (9, 262144), (10, -1), (11, -1), (12, -1), (13, -1), (14, 67108864), (15, 33554432), (16, 1572864), (17, -1), (18, 1073741824), (19, 524288), (20, 8388608), (21, 16777216), (22, 262144), (23, 134217728), (24, 32768), (25, 4194304), (26, -1), (27, -1), (28, -1), (29, 4096), (30, 0), (31, -1), (32, 262144), (33, 0), (34, -1), (35, -1), (36, -1), (37, 4194304), (38, 33554432), (39, 4096), (40, 268435456), (41, 32768), (42, 131072), (43, 131072), (44, -1), (45, -1), (46, -1), (47, 16777216), (48, 4194304), (49, 16777216), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, 1048576), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, 134217728), (9, 262144), (10, -1), (11, -1), (12, -1), (13, -1), (14, 67108864), (15, 33554432), (16, 1572864), (17, -1), (18, 1073741824), (19, 524288), (20, 8388608), (21, 16777216), (22, 262144), (23, 134217728), (24, 32768), (25, 4194304), (26, -1), (27, -1), (28, -1), (29, 4096), (30, -1), (31, -1), (32, 262144), (33, -1), (34, -1), (35, -1), (36, -1), (37, 4194304), (38, 33554432), (39, 4096), (40, 268435456), (41, 32768), (42, 131072), (43, 131072), (44, -1), (45, -1), (46, -1), (47, 16777216), (48, 4194304), (49, 16777216), (50, -1), (51, -1), (52, -1)]

Covered at level 7 : set()

After reduction : 
 pending  : [8, 9, 29, 32, 38, 39, 42, 43, 47, 48, 49, 40, 41, 23, 24, 25, 37, 0, 16, 19, 22, 20, 15, 21, 14, 18]
 solution : [6, 35]


Solution : [6, 35] has cost 19.


Before backtrack at level 7
 pending : [8, 9, 29, 32, 38, 39, 42, 43, 47, 48, 49, 40, 41, 23, 24, 25, 37, 0, 16, 19, 22, 20, 15, 21, 14, 18]
 solution : [6, 35]

After backtrack at level 7
 pending : [8, 9, 29, 32, 38, 39, 42, 43, 47, 48, 49, 40, 41, 23, 24, 25, 37, 0, 16, 19, 22, 20, 15, 21, 14, 18, 30, 33]
 solution : [6, 35]


Invert decision for 35 at level 6


New level: 7
 pending : [8, 9, 29, 32, 38, 39, 42, 43, 47, 48, 49, 40, 41, 23, 24, 25, 37, 0, 16, 19, 22, 20, 15, 21, 14, 18, 30, 33]
 solution : [6]


Before reduction : 
 pending  : [8, 9, 29, 32, 38, 39, 42, 43, 47, 48, 49, 40, 41, 23, 24, 25, 37, 0, 16, 19, 22, 20, 15, 21, 14, 18, 30, 33]
 solution : [6]

Essensial at level 7 : set()

Before removed
 coverage : [(0, 1048576), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, 134217728), (9, 262144), (10, -1), (11, -1), (12, -1), (13, -1), (14, 67108864), (15, 33554432), (16, 1572864), (17, -1), (18, 1073741824), (19, 524288), (20, 8388608), (21, 16777216), (22, 262144), (23, 134217728), (24, 32768), (25, 4194304), (26, -1), (27, -1), (28, -1), (29, 4096), (30, -1), (31, -1), (32, 262144), (33, -1), (34, -1), (35, -1), (36, -1), (37, 4194304), (38, 33554432), (39, 4096), (40, 268435456), (41, 32768), (42, 131072), (43, 131072), (44, -1), (45, -1), (46, -1), (47, 16777216), (48, 4194304), (49, 16777216), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, 1048576), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, 134217728), (9, 1048576), (10, -1), (11, -1), (12, -1), (13, -1), (14, 67108864), (15, 33554432), (16, 1572864), (17, -1), (18, 1073741824), (19, 524288), (20, 8388608), (21, 16777216), (22, 262144), (23, 134217728), (24, 1073741824), (25, 4194304), (26, -1), (27, -1), (28, -1), (29, 16384), (30, 32768), (31, -1), (32, 1048576), (33, 4194304), (34, -1), (35, -1), (36, -1), (37, 4194304), (38, 134217728), (39, 16384), (40, 268435456), (41, 1073741824), (42, 524288), (43, 524288), (44, -1), (45, -1), (46, -1), (47, 67108864), (48, 16777216), (49, 67108864), (50, -1), (51, -1), (52, -1)]

Covered at level 7 : set()

After reduction : 
 pending  : [8, 9, 29, 32, 38, 39, 42, 43, 47, 48, 49, 40, 41, 23, 24, 25, 37, 0, 16, 19, 22, 20, 15, 21, 14, 18, 30, 33]
 solution : [6]


Solution : [6] has cost 6.


Decide in level 7 among pending : [8, 9, 29, 32, 38, 39, 42, 43, 47, 48, 49, 40, 41, 23, 24, 25, 37, 0, 16, 19, 22, 20, 15, 21, 14, 18, 30, 33]

Coverage : [(0, 1048576), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, 134217728), (9, 1048576), (10, -1), (11, -1), (12, -1), (13, -1), (14, 67108864), (15, 33554432), (16, 1572864), (17, -1), (18, 1073741824), (19, 524288), (20, 8388608), (21, 16777216), (22, 262144), (23, 134217728), (24, 1073741824), (25, 4194304), (26, -1), (27, -1), (28, -1), (29, 16384), (30, 32768), (31, -1), (32, 1048576), (33, 4194304), (34, -1), (35, -1), (36, -1), (37, 4194304), (38, 134217728), (39, 16384), (40, 268435456), (41, 1073741824), (42, 524288), (43, 524288), (44, -1), (45, -1), (46, -1), (47, 67108864), (48, 16777216), (49, 67108864), (50, -1), (51, -1), (52, -1)]

Decide 41 with phase True at level 7

After decision at level 7
 pending : [8, 9, 29, 32, 38, 39, 42, 43, 47, 48, 49, 40, 23, 24, 25, 37, 0, 16, 19, 22, 20, 15, 21, 14, 18, 30, 33]
 solution : [6, 41]


New level: 8
 pending : [8, 9, 29, 32, 38, 39, 42, 43, 47, 48, 49, 40, 23, 24, 25, 37, 0, 16, 19, 22, 20, 15, 21, 14, 18, 30, 33]
 solution : [6, 41]


Before reduction : 
 pending  : [8, 9, 29, 32, 38, 39, 42, 43, 47, 48, 49, 40, 23, 24, 25, 37, 0, 16, 19, 22, 20, 15, 21, 14, 18, 30, 33]
 solution : [6, 41]

Essensial at level 8 : set()

Before removed
 coverage : [(0, 1048576), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, 134217728), (9, 1048576), (10, -1), (11, -1), (12, -1), (13, -1), (14, 67108864), (15, 33554432), (16, 1572864), (17, -1), (18, 1073741824), (19, 524288), (20, 8388608), (21, 16777216), (22, 262144), (23, 134217728), (24, 1073741824), (25, 4194304), (26, -1), (27, -1), (28, -1), (29, 16384), (30, 32768), (31, -1), (32, 1048576), (33, 4194304), (34, -1), (35, -1), (36, -1), (37, 4194304), (38, 134217728), (39, 16384), (40, 268435456), (41, 1073741824), (42, 524288), (43, 524288), (44, -1), (45, -1), (46, -1), (47, 67108864), (48, 16777216), (49, 67108864), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, 1048576), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, 134217728), (9, 1048576), (10, -1), (11, -1), (12, -1), (13, -1), (14, 67108864), (15, 33554432), (16, 1572864), (17, -1), (18, 1073741824), (19, 524288), (20, 8388608), (21, 16777216), (22, 262144), (23, 134217728), (24, 536870912), (25, 4194304), (26, -1), (27, -1), (28, -1), (29, 16384), (30, 16384), (31, -1), (32, 1048576), (33, 2097152), (34, -1), (35, -1), (36, -1), (37, 4194304), (38, 134217728), (39, 16384), (40, 134217728), (41, -1), (42, 524288), (43, 524288), (44, -1), (45, -1), (46, -1), (47, 67108864), (48, 16777216), (49, 67108864), (50, -1), (51, -1), (52, -1)]

Covered at level 8 : set()

After reduction : 
 pending  : [8, 9, 29, 32, 38, 39, 42, 43, 47, 48, 49, 40, 23, 24, 25, 37, 0, 16, 19, 22, 20, 15, 21, 14, 18, 30, 33]
 solution : [6, 41]


Solution : [6, 41] has cost 20.


Before backtrack at level 8
 pending : [8, 9, 29, 32, 38, 39, 42, 43, 47, 48, 49, 40, 23, 24, 25, 37, 0, 16, 19, 22, 20, 15, 21, 14, 18, 30, 33]
 solution : [6, 41]

After backtrack at level 8
 pending : [8, 9, 29, 32, 38, 39, 42, 43, 47, 48, 49, 40, 23, 24, 25, 37, 0, 16, 19, 22, 20, 15, 21, 14, 18, 30, 33]
 solution : [6, 41]


Invert decision for 41 at level 7


New level: 8
 pending : [8, 9, 29, 32, 38, 39, 42, 43, 47, 48, 49, 40, 23, 24, 25, 37, 0, 16, 19, 22, 20, 15, 21, 14, 18, 30, 33]
 solution : [6]


Before reduction : 
 pending  : [8, 9, 29, 32, 38, 39, 42, 43, 47, 48, 49, 40, 23, 24, 25, 37, 0, 16, 19, 22, 20, 15, 21, 14, 18, 30, 33]
 solution : [6]

Essensial at level 8 : set()

Before removed
 coverage : [(0, 1048576), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, 134217728), (9, 1048576), (10, -1), (11, -1), (12, -1), (13, -1), (14, 67108864), (15, 33554432), (16, 1572864), (17, -1), (18, 1073741824), (19, 524288), (20, 8388608), (21, 16777216), (22, 262144), (23, 134217728), (24, 536870912), (25, 4194304), (26, -1), (27, -1), (28, -1), (29, 16384), (30, 16384), (31, -1), (32, 1048576), (33, 2097152), (34, -1), (35, -1), (36, -1), (37, 4194304), (38, 134217728), (39, 16384), (40, 134217728), (41, -1), (42, 524288), (43, 524288), (44, -1), (45, -1), (46, -1), (47, 67108864), (48, 16777216), (49, 67108864), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, 1048576), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, 134217728), (9, 1048576), (10, -1), (11, -1), (12, -1), (13, -1), (14, 67108864), (15, 33554432), (16, 1572864), (17, -1), (18, 1073741824), (19, 524288), (20, 8388608), (21, 16777216), (22, 262144), (23, 134217728), (24, 1073741824), (25, 4194304), (26, -1), (27, -1), (28, -1), (29, 16384), (30, 32768), (31, -1), (32, 1048576), (33, 4194304), (34, -1), (35, -1), (36, -1), (37, 4194304), (38, 134217728), (39, 16384), (40, 268435456), (41, -1), (42, 524288), (43, 524288), (44, -1), (45, -1), (46, -1), (47, 67108864), (48, 16777216), (49, 67108864), (50, -1), (51, -1), (52, -1)]

Covered at level 8 : set()

After reduction : 
 pending  : [8, 9, 29, 32, 38, 39, 42, 43, 47, 48, 49, 40, 23, 24, 25, 37, 0, 16, 19, 22, 20, 15, 21, 14, 18, 30, 33]
 solution : [6]


Solution : [6] has cost 6.


Decide in level 8 among pending : [8, 9, 29, 32, 38, 39, 42, 43, 47, 48, 49, 40, 23, 24, 25, 37, 0, 16, 19, 22, 20, 15, 21, 14, 18, 30, 33]

Coverage : [(0, 1048576), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, 134217728), (9, 1048576), (10, -1), (11, -1), (12, -1), (13, -1), (14, 67108864), (15, 33554432), (16, 1572864), (17, -1), (18, 1073741824), (19, 524288), (20, 8388608), (21, 16777216), (22, 262144), (23, 134217728), (24, 1073741824), (25, 4194304), (26, -1), (27, -1), (28, -1), (29, 16384), (30, 32768), (31, -1), (32, 1048576), (33, 4194304), (34, -1), (35, -1), (36, -1), (37, 4194304), (38, 134217728), (39, 16384), (40, 268435456), (41, -1), (42, 524288), (43, 524288), (44, -1), (45, -1), (46, -1), (47, 67108864), (48, 16777216), (49, 67108864), (50, -1), (51, -1), (52, -1)]

Decide 24 with phase True at level 8

After decision at level 8
 pending : [8, 9, 29, 32, 38, 39, 42, 43, 47, 48, 49, 40, 23, 25, 37, 0, 16, 19, 22, 20, 15, 21, 14, 18, 30, 33]
 solution : [6, 24]


New level: 9
 pending : [8, 9, 29, 32, 38, 39, 42, 43, 47, 48, 49, 40, 23, 25, 37, 0, 16, 19, 22, 20, 15, 21, 14, 18, 30, 33]
 solution : [6, 24]


Before reduction : 
 pending  : [8, 9, 29, 32, 38, 39, 42, 43, 47, 48, 49, 40, 23, 25, 37, 0, 16, 19, 22, 20, 15, 21, 14, 18, 30, 33]
 solution : [6, 24]

Essensial at level 9 : set()

Before removed
 coverage : [(0, 1048576), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, 134217728), (9, 1048576), (10, -1), (11, -1), (12, -1), (13, -1), (14, 67108864), (15, 33554432), (16, 1572864), (17, -1), (18, 1073741824), (19, 524288), (20, 8388608), (21, 16777216), (22, 262144), (23, 134217728), (24, 1073741824), (25, 4194304), (26, -1), (27, -1), (28, -1), (29, 16384), (30, 32768), (31, -1), (32, 1048576), (33, 4194304), (34, -1), (35, -1), (36, -1), (37, 4194304), (38, 134217728), (39, 16384), (40, 268435456), (41, -1), (42, 524288), (43, 524288), (44, -1), (45, -1), (46, -1), (47, 67108864), (48, 16777216), (49, 67108864), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, 1048576), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, 33554432), (9, 262144), (10, -1), (11, -1), (12, -1), (13, -1), (14, 67108864), (15, 33554432), (16, 1572864), (17, -1), (18, 1073741824), (19, 524288), (20, 8388608), (21, 16777216), (22, 262144), (23, 33554432), (24, -1), (25, 4194304), (26, -1), (27, -1), (28, -1), (29, 4096), (30, 0), (31, -1), (32, 262144), (33, 0), (34, -1), (35, -1), (36, -1), (37, 4194304), (38, 33554432), (39, 4096), (40, 134217728), (41, -1), (42, 131072), (43, 131072), (44, -1), (45, -1), (46, -1), (47, 16777216), (48, 4194304), (49, 33554432), (50, -1), (51, -1), (52, -1)]

Covered at level 9 : {33, 30}

After reduction : 
 pending  : [8, 9, 29, 32, 38, 39, 42, 43, 47, 48, 49, 40, 23, 25, 37, 0, 16, 19, 22, 20, 15, 21, 14, 18]
 solution : [6, 24]


Before reduction : 
 pending  : [8, 9, 29, 32, 38, 39, 42, 43, 47, 48, 49, 40, 23, 25, 37, 0, 16, 19, 22, 20, 15, 21, 14, 18]
 solution : [6, 24]

Essensial at level 9 : set()

Before removed
 coverage : [(0, 1048576), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, 33554432), (9, 262144), (10, -1), (11, -1), (12, -1), (13, -1), (14, 67108864), (15, 33554432), (16, 1572864), (17, -1), (18, 1073741824), (19, 524288), (20, 8388608), (21, 16777216), (22, 262144), (23, 33554432), (24, -1), (25, 4194304), (26, -1), (27, -1), (28, -1), (29, 4096), (30, 0), (31, -1), (32, 262144), (33, 0), (34, -1), (35, -1), (36, -1), (37, 4194304), (38, 33554432), (39, 4096), (40, 134217728), (41, -1), (42, 131072), (43, 131072), (44, -1), (45, -1), (46, -1), (47, 16777216), (48, 4194304), (49, 33554432), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, 1048576), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, 33554432), (9, 262144), (10, -1), (11, -1), (12, -1), (13, -1), (14, 67108864), (15, 33554432), (16, 1572864), (17, -1), (18, 1073741824), (19, 524288), (20, 8388608), (21, 16777216), (22, 262144), (23, 33554432), (24, -1), (25, 4194304), (26, -1), (27, -1), (28, -1), (29, 4096), (30, -1), (31, -1), (32, 262144), (33, -1), (34, -1), (35, -1), (36, -1), (37, 4194304), (38, 33554432), (39, 4096), (40, 134217728), (41, -1), (42, 131072), (43, 131072), (44, -1), (45, -1), (46, -1), (47, 16777216), (48, 4194304), (49, 33554432), (50, -1), (51, -1), (52, -1)]

Covered at level 9 : set()

After reduction : 
 pending  : [8, 9, 29, 32, 38, 39, 42, 43, 47, 48, 49, 40, 23, 25, 37, 0, 16, 19, 22, 20, 15, 21, 14, 18]
 solution : [6, 24]


Solution : [6, 24] has cost 13.


Decide in level 9 among pending : [8, 9, 29, 32, 38, 39, 42, 43, 47, 48, 49, 40, 23, 25, 37, 0, 16, 19, 22, 20, 15, 21, 14, 18]

Coverage : [(0, 1048576), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, 33554432), (9, 262144), (10, -1), (11, -1), (12, -1), (13, -1), (14, 67108864), (15, 33554432), (16, 1572864), (17, -1), (18, 1073741824), (19, 524288), (20, 8388608), (21, 16777216), (22, 262144), (23, 33554432), (24, -1), (25, 4194304), (26, -1), (27, -1), (28, -1), (29, 4096), (30, -1), (31, -1), (32, 262144), (33, -1), (34, -1), (35, -1), (36, -1), (37, 4194304), (38, 33554432), (39, 4096), (40, 134217728), (41, -1), (42, 131072), (43, 131072), (44, -1), (45, -1), (46, -1), (47, 16777216), (48, 4194304), (49, 33554432), (50, -1), (51, -1), (52, -1)]

Decide 18 with phase True at level 9

After decision at level 9
 pending : [8, 9, 29, 32, 38, 39, 42, 43, 47, 48, 49, 40, 23, 25, 37, 0, 16, 19, 22, 20, 15, 21, 14]
 solution : [6, 24, 18]


New level: 10
 pending : [8, 9, 29, 32, 38, 39, 42, 43, 47, 48, 49, 40, 23, 25, 37, 0, 16, 19, 22, 20, 15, 21, 14]
 solution : [6, 24, 18]


Before reduction : 
 pending  : [8, 9, 29, 32, 38, 39, 42, 43, 47, 48, 49, 40, 23, 25, 37, 0, 16, 19, 22, 20, 15, 21, 14]
 solution : [6, 24, 18]

Essensial at level 10 : set()

Before removed
 coverage : [(0, 1048576), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, 33554432), (9, 262144), (10, -1), (11, -1), (12, -1), (13, -1), (14, 67108864), (15, 33554432), (16, 1572864), (17, -1), (18, 1073741824), (19, 524288), (20, 8388608), (21, 16777216), (22, 262144), (23, 33554432), (24, -1), (25, 4194304), (26, -1), (27, -1), (28, -1), (29, 4096), (30, -1), (31, -1), (32, 262144), (33, -1), (34, -1), (35, -1), (36, -1), (37, 4194304), (38, 33554432), (39, 4096), (40, 134217728), (41, -1), (42, 131072), (43, 131072), (44, -1), (45, -1), (46, -1), (47, 16777216), (48, 4194304), (49, 33554432), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, 0), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, 33554432), (9, 65536), (10, -1), (11, -1), (12, -1), (13, -1), (14, 0), (15, 0), (16, 0), (17, -1), (18, -1), (19, 0), (20, 0), (21, 0), (22, 0), (23, 33554432), (24, -1), (25, 0), (26, -1), (27, -1), (28, -1), (29, 1024), (30, -1), (31, -1), (32, 131072), (33, -1), (34, -1), (35, -1), (36, -1), (37, 0), (38, 16777216), (39, 512), (40, 512), (41, -1), (42, 65536), (43, 65536), (44, -1), (45, -1), (46, -1), (47, 16777216), (48, 4194304), (49, 33554432), (50, -1), (51, -1), (52, -1)]

Covered at level 10 : {0, 37, 14, 15, 16, 19, 20, 21, 22, 25}

After reduction : 
 pending  : [8, 9, 29, 32, 38, 39, 42, 43, 47, 48, 49, 40, 23]
 solution : [6, 24, 18]


Before reduction : 
 pending  : [8, 9, 29, 32, 38, 39, 42, 43, 47, 48, 49, 40, 23]
 solution : [6, 24, 18]

Essensial at level 10 : set()

Before removed
 coverage : [(0, 0), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, 33554432), (9, 65536), (10, -1), (11, -1), (12, -1), (13, -1), (14, 0), (15, 0), (16, 0), (17, -1), (18, -1), (19, 0), (20, 0), (21, 0), (22, 0), (23, 33554432), (24, -1), (25, 0), (26, -1), (27, -1), (28, -1), (29, 1024), (30, -1), (31, -1), (32, 131072), (33, -1), (34, -1), (35, -1), (36, -1), (37, 0), (38, 16777216), (39, 512), (40, 512), (41, -1), (42, 65536), (43, 65536), (44, -1), (45, -1), (46, -1), (47, 16777216), (48, 4194304), (49, 33554432), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, 33554432), (9, 65536), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, 33554432), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, 1024), (30, -1), (31, -1), (32, 131072), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, 16777216), (39, 512), (40, 512), (41, -1), (42, 65536), (43, 65536), (44, -1), (45, -1), (46, -1), (47, 16777216), (48, 4194304), (49, 33554432), (50, -1), (51, -1), (52, -1)]

Covered at level 10 : set()

After reduction : 
 pending  : [8, 9, 29, 32, 38, 39, 42, 43, 47, 48, 49, 40, 23]
 solution : [6, 24, 18]


Solution : [6, 24, 18] has cost 20.


Before backtrack at level 10
 pending : [8, 9, 29, 32, 38, 39, 42, 43, 47, 48, 49, 40, 23]
 solution : [6, 24, 18]

After backtrack at level 10
 pending : [8, 9, 29, 32, 38, 39, 42, 43, 47, 48, 49, 40, 23, 25, 37, 0, 16, 19, 22, 20, 15, 21, 14]
 solution : [6, 24, 18]


Invert decision for 18 at level 9


New level: 10
 pending : [8, 9, 29, 32, 38, 39, 42, 43, 47, 48, 49, 40, 23, 25, 37, 0, 16, 19, 22, 20, 15, 21, 14]
 solution : [6, 24]


Before reduction : 
 pending  : [8, 9, 29, 32, 38, 39, 42, 43, 47, 48, 49, 40, 23, 25, 37, 0, 16, 19, 22, 20, 15, 21, 14]
 solution : [6, 24]

Essensial at level 10 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, 33554432), (9, 65536), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, 33554432), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, 1024), (30, -1), (31, -1), (32, 131072), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, 16777216), (39, 512), (40, 512), (41, -1), (42, 65536), (43, 65536), (44, -1), (45, -1), (46, -1), (47, 16777216), (48, 4194304), (49, 33554432), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, 1048576), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, 33554432), (9, 262144), (10, -1), (11, -1), (12, -1), (13, -1), (14, 67108864), (15, 33554432), (16, 1572864), (17, -1), (18, -1), (19, 524288), (20, 8388608), (21, 16777216), (22, 262144), (23, 33554432), (24, -1), (25, 4194304), (26, -1), (27, -1), (28, -1), (29, 4096), (30, -1), (31, -1), (32, 262144), (33, -1), (34, -1), (35, -1), (36, -1), (37, 4194304), (38, 33554432), (39, 4096), (40, 134217728), (41, -1), (42, 131072), (43, 131072), (44, -1), (45, -1), (46, -1), (47, 16777216), (48, 4194304), (49, 33554432), (50, -1), (51, -1), (52, -1)]

Covered at level 10 : set()

After reduction : 
 pending  : [8, 9, 29, 32, 38, 39, 42, 43, 47, 48, 49, 40, 23, 25, 37, 0, 16, 19, 22, 20, 15, 21, 14]
 solution : [6, 24]


Solution : [6, 24] has cost 13.


Decide in level 10 among pending : [8, 9, 29, 32, 38, 39, 42, 43, 47, 48, 49, 40, 23, 25, 37, 0, 16, 19, 22, 20, 15, 21, 14]

Coverage : [(0, 1048576), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, 33554432), (9, 262144), (10, -1), (11, -1), (12, -1), (13, -1), (14, 67108864), (15, 33554432), (16, 1572864), (17, -1), (18, -1), (19, 524288), (20, 8388608), (21, 16777216), (22, 262144), (23, 33554432), (24, -1), (25, 4194304), (26, -1), (27, -1), (28, -1), (29, 4096), (30, -1), (31, -1), (32, 262144), (33, -1), (34, -1), (35, -1), (36, -1), (37, 4194304), (38, 33554432), (39, 4096), (40, 134217728), (41, -1), (42, 131072), (43, 131072), (44, -1), (45, -1), (46, -1), (47, 16777216), (48, 4194304), (49, 33554432), (50, -1), (51, -1), (52, -1)]

Decide 40 with phase True at level 10

After decision at level 10
 pending : [8, 9, 29, 32, 38, 39, 42, 43, 47, 48, 49, 23, 25, 37, 0, 16, 19, 22, 20, 15, 21, 14]
 solution : [6, 24, 40]


New level: 11
 pending : [8, 9, 29, 32, 38, 39, 42, 43, 47, 48, 49, 23, 25, 37, 0, 16, 19, 22, 20, 15, 21, 14]
 solution : [6, 24, 40]


Before reduction : 
 pending  : [8, 9, 29, 32, 38, 39, 42, 43, 47, 48, 49, 23, 25, 37, 0, 16, 19, 22, 20, 15, 21, 14]
 solution : [6, 24, 40]

Essensial at level 11 : set()

Before removed
 coverage : [(0, 1048576), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, 33554432), (9, 262144), (10, -1), (11, -1), (12, -1), (13, -1), (14, 67108864), (15, 33554432), (16, 1572864), (17, -1), (18, -1), (19, 524288), (20, 8388608), (21, 16777216), (22, 262144), (23, 33554432), (24, -1), (25, 4194304), (26, -1), (27, -1), (28, -1), (29, 4096), (30, -1), (31, -1), (32, 262144), (33, -1), (34, -1), (35, -1), (36, -1), (37, 4194304), (38, 33554432), (39, 4096), (40, 134217728), (41, -1), (42, 131072), (43, 131072), (44, -1), (45, -1), (46, -1), (47, 16777216), (48, 4194304), (49, 33554432), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, 524288), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, 8388608), (9, 65536), (10, -1), (11, -1), (12, -1), (13, -1), (14, 33554432), (15, 16777216), (16, 524288), (17, -1), (18, -1), (19, 262144), (20, 8388608), (21, 16777216), (22, 262144), (23, 8388608), (24, -1), (25, 1048576), (26, -1), (27, -1), (28, -1), (29, 1024), (30, -1), (31, -1), (32, 65536), (33, -1), (34, -1), (35, -1), (36, -1), (37, 1048576), (38, 33554432), (39, 1024), (40, -1), (41, -1), (42, 32768), (43, 32768), (44, -1), (45, -1), (46, -1), (47, 8388608), (48, 1048576), (49, 33554432), (50, -1), (51, -1), (52, -1)]

Covered at level 11 : set()

After reduction : 
 pending  : [8, 9, 29, 32, 38, 39, 42, 43, 47, 48, 49, 23, 25, 37, 0, 16, 19, 22, 20, 15, 21, 14]
 solution : [6, 24, 40]


Solution : [6, 24, 40] has cost 31.


Before backtrack at level 11
 pending : [8, 9, 29, 32, 38, 39, 42, 43, 47, 48, 49, 23, 25, 37, 0, 16, 19, 22, 20, 15, 21, 14]
 solution : [6, 24, 40]

After backtrack at level 11
 pending : [8, 9, 29, 32, 38, 39, 42, 43, 47, 48, 49, 23, 25, 37, 0, 16, 19, 22, 20, 15, 21, 14]
 solution : [6, 24, 40]


Invert decision for 40 at level 10


New level: 11
 pending : [8, 9, 29, 32, 38, 39, 42, 43, 47, 48, 49, 23, 25, 37, 0, 16, 19, 22, 20, 15, 21, 14]
 solution : [6, 24]


Before reduction : 
 pending  : [8, 9, 29, 32, 38, 39, 42, 43, 47, 48, 49, 23, 25, 37, 0, 16, 19, 22, 20, 15, 21, 14]
 solution : [6, 24]

Essensial at level 11 : set()

Before removed
 coverage : [(0, 524288), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, 8388608), (9, 65536), (10, -1), (11, -1), (12, -1), (13, -1), (14, 33554432), (15, 16777216), (16, 524288), (17, -1), (18, -1), (19, 262144), (20, 8388608), (21, 16777216), (22, 262144), (23, 8388608), (24, -1), (25, 1048576), (26, -1), (27, -1), (28, -1), (29, 1024), (30, -1), (31, -1), (32, 65536), (33, -1), (34, -1), (35, -1), (36, -1), (37, 1048576), (38, 33554432), (39, 1024), (40, -1), (41, -1), (42, 32768), (43, 32768), (44, -1), (45, -1), (46, -1), (47, 8388608), (48, 1048576), (49, 33554432), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, 1048576), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, 33554432), (9, 262144), (10, -1), (11, -1), (12, -1), (13, -1), (14, 67108864), (15, 33554432), (16, 1572864), (17, -1), (18, -1), (19, 524288), (20, 8388608), (21, 16777216), (22, 262144), (23, 33554432), (24, -1), (25, 4194304), (26, -1), (27, -1), (28, -1), (29, 4096), (30, -1), (31, -1), (32, 262144), (33, -1), (34, -1), (35, -1), (36, -1), (37, 4194304), (38, 33554432), (39, 4096), (40, -1), (41, -1), (42, 131072), (43, 131072), (44, -1), (45, -1), (46, -1), (47, 16777216), (48, 4194304), (49, 33554432), (50, -1), (51, -1), (52, -1)]

Covered at level 11 : set()

After reduction : 
 pending  : [8, 9, 29, 32, 38, 39, 42, 43, 47, 48, 49, 23, 25, 37, 0, 16, 19, 22, 20, 15, 21, 14]
 solution : [6, 24]


Solution : [6, 24] has cost 13.


Decide in level 11 among pending : [8, 9, 29, 32, 38, 39, 42, 43, 47, 48, 49, 23, 25, 37, 0, 16, 19, 22, 20, 15, 21, 14]

Coverage : [(0, 1048576), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, 33554432), (9, 262144), (10, -1), (11, -1), (12, -1), (13, -1), (14, 67108864), (15, 33554432), (16, 1572864), (17, -1), (18, -1), (19, 524288), (20, 8388608), (21, 16777216), (22, 262144), (23, 33554432), (24, -1), (25, 4194304), (26, -1), (27, -1), (28, -1), (29, 4096), (30, -1), (31, -1), (32, 262144), (33, -1), (34, -1), (35, -1), (36, -1), (37, 4194304), (38, 33554432), (39, 4096), (40, -1), (41, -1), (42, 131072), (43, 131072), (44, -1), (45, -1), (46, -1), (47, 16777216), (48, 4194304), (49, 33554432), (50, -1), (51, -1), (52, -1)]

Decide 14 with phase True at level 11

After decision at level 11
 pending : [8, 9, 29, 32, 38, 39, 42, 43, 47, 48, 49, 23, 25, 37, 0, 16, 19, 22, 20, 15, 21]
 solution : [6, 24, 14]


New level: 12
 pending : [8, 9, 29, 32, 38, 39, 42, 43, 47, 48, 49, 23, 25, 37, 0, 16, 19, 22, 20, 15, 21]
 solution : [6, 24, 14]


Before reduction : 
 pending  : [8, 9, 29, 32, 38, 39, 42, 43, 47, 48, 49, 23, 25, 37, 0, 16, 19, 22, 20, 15, 21]
 solution : [6, 24, 14]

Essensial at level 12 : set()

Before removed
 coverage : [(0, 1048576), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, 33554432), (9, 262144), (10, -1), (11, -1), (12, -1), (13, -1), (14, 67108864), (15, 33554432), (16, 1572864), (17, -1), (18, -1), (19, 524288), (20, 8388608), (21, 16777216), (22, 262144), (23, 33554432), (24, -1), (25, 4194304), (26, -1), (27, -1), (28, -1), (29, 4096), (30, -1), (31, -1), (32, 262144), (33, -1), (34, -1), (35, -1), (36, -1), (37, 4194304), (38, 33554432), (39, 4096), (40, -1), (41, -1), (42, 131072), (43, 131072), (44, -1), (45, -1), (46, -1), (47, 16777216), (48, 4194304), (49, 33554432), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, 0), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, 33554432), (9, 65536), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, 0), (16, 0), (17, -1), (18, -1), (19, 0), (20, 65536), (21, 262144), (22, 65536), (23, 33554432), (24, -1), (25, 4096), (26, -1), (27, -1), (28, -1), (29, 1024), (30, -1), (31, -1), (32, 131072), (33, -1), (34, -1), (35, -1), (36, -1), (37, 4096), (38, 33554432), (39, 512), (40, -1), (41, -1), (42, 65536), (43, 65536), (44, -1), (45, -1), (46, -1), (47, 16777216), (48, 4194304), (49, 33554432), (50, -1), (51, -1), (52, -1)]

Covered at level 12 : {0, 16, 19, 15}

After reduction : 
 pending  : [8, 9, 29, 32, 38, 39, 42, 43, 47, 48, 49, 23, 25, 37, 22, 20, 21]
 solution : [6, 24, 14]


Before reduction : 
 pending  : [8, 9, 29, 32, 38, 39, 42, 43, 47, 48, 49, 23, 25, 37, 22, 20, 21]
 solution : [6, 24, 14]

Essensial at level 12 : set()

Before removed
 coverage : [(0, 0), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, 33554432), (9, 65536), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, 0), (16, 0), (17, -1), (18, -1), (19, 0), (20, 65536), (21, 262144), (22, 65536), (23, 33554432), (24, -1), (25, 4096), (26, -1), (27, -1), (28, -1), (29, 1024), (30, -1), (31, -1), (32, 131072), (33, -1), (34, -1), (35, -1), (36, -1), (37, 4096), (38, 33554432), (39, 512), (40, -1), (41, -1), (42, 65536), (43, 65536), (44, -1), (45, -1), (46, -1), (47, 16777216), (48, 4194304), (49, 33554432), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, 33554432), (9, 65536), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, 65536), (21, 262144), (22, 65536), (23, 33554432), (24, -1), (25, 4096), (26, -1), (27, -1), (28, -1), (29, 1024), (30, -1), (31, -1), (32, 131072), (33, -1), (34, -1), (35, -1), (36, -1), (37, 4096), (38, 33554432), (39, 512), (40, -1), (41, -1), (42, 65536), (43, 65536), (44, -1), (45, -1), (46, -1), (47, 16777216), (48, 4194304), (49, 33554432), (50, -1), (51, -1), (52, -1)]

Covered at level 12 : set()

After reduction : 
 pending  : [8, 9, 29, 32, 38, 39, 42, 43, 47, 48, 49, 23, 25, 37, 22, 20, 21]
 solution : [6, 24, 14]


Solution : [6, 24, 14] has cost 22.


Before backtrack at level 12
 pending : [8, 9, 29, 32, 38, 39, 42, 43, 47, 48, 49, 23, 25, 37, 22, 20, 21]
 solution : [6, 24, 14]

After backtrack at level 12
 pending : [8, 9, 29, 32, 38, 39, 42, 43, 47, 48, 49, 23, 25, 37, 22, 20, 21, 0, 16, 19, 15]
 solution : [6, 24, 14]


Invert decision for 14 at level 11


New level: 12
 pending : [8, 9, 29, 32, 38, 39, 42, 43, 47, 48, 49, 23, 25, 37, 22, 20, 21, 0, 16, 19, 15]
 solution : [6, 24]


Before reduction : 
 pending  : [8, 9, 29, 32, 38, 39, 42, 43, 47, 48, 49, 23, 25, 37, 22, 20, 21, 0, 16, 19, 15]
 solution : [6, 24]

Essensial at level 12 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, 33554432), (9, 65536), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, 65536), (21, 262144), (22, 65536), (23, 33554432), (24, -1), (25, 4096), (26, -1), (27, -1), (28, -1), (29, 1024), (30, -1), (31, -1), (32, 131072), (33, -1), (34, -1), (35, -1), (36, -1), (37, 4096), (38, 33554432), (39, 512), (40, -1), (41, -1), (42, 65536), (43, 65536), (44, -1), (45, -1), (46, -1), (47, 16777216), (48, 4194304), (49, 33554432), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, 1048576), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, 33554432), (9, 262144), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, 33554432), (16, 1572864), (17, -1), (18, -1), (19, 524288), (20, 8388608), (21, 16777216), (22, 262144), (23, 33554432), (24, -1), (25, 4194304), (26, -1), (27, -1), (28, -1), (29, 4096), (30, -1), (31, -1), (32, 262144), (33, -1), (34, -1), (35, -1), (36, -1), (37, 4194304), (38, 33554432), (39, 4096), (40, -1), (41, -1), (42, 131072), (43, 131072), (44, -1), (45, -1), (46, -1), (47, 16777216), (48, 4194304), (49, 33554432), (50, -1), (51, -1), (52, -1)]

Covered at level 12 : set()

After reduction : 
 pending  : [8, 9, 29, 32, 38, 39, 42, 43, 47, 48, 49, 23, 25, 37, 22, 20, 21, 0, 16, 19, 15]
 solution : [6, 24]


Solution : [6, 24] has cost 13.


Decide in level 12 among pending : [8, 9, 29, 32, 38, 39, 42, 43, 47, 48, 49, 23, 25, 37, 22, 20, 21, 0, 16, 19, 15]

Coverage : [(0, 1048576), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, 33554432), (9, 262144), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, 33554432), (16, 1572864), (17, -1), (18, -1), (19, 524288), (20, 8388608), (21, 16777216), (22, 262144), (23, 33554432), (24, -1), (25, 4194304), (26, -1), (27, -1), (28, -1), (29, 4096), (30, -1), (31, -1), (32, 262144), (33, -1), (34, -1), (35, -1), (36, -1), (37, 4194304), (38, 33554432), (39, 4096), (40, -1), (41, -1), (42, 131072), (43, 131072), (44, -1), (45, -1), (46, -1), (47, 16777216), (48, 4194304), (49, 33554432), (50, -1), (51, -1), (52, -1)]

Decide 8 with phase True at level 12

After decision at level 12
 pending : [9, 29, 32, 38, 39, 42, 43, 47, 48, 49, 23, 25, 37, 22, 20, 21, 0, 16, 19, 15]
 solution : [6, 24, 8]


New level: 13
 pending : [9, 29, 32, 38, 39, 42, 43, 47, 48, 49, 23, 25, 37, 22, 20, 21, 0, 16, 19, 15]
 solution : [6, 24, 8]


Before reduction : 
 pending  : [9, 29, 32, 38, 39, 42, 43, 47, 48, 49, 23, 25, 37, 22, 20, 21, 0, 16, 19, 15]
 solution : [6, 24, 8]

Essensial at level 13 : set()

Before removed
 coverage : [(0, 1048576), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, 33554432), (9, 262144), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, 33554432), (16, 1572864), (17, -1), (18, -1), (19, 524288), (20, 8388608), (21, 16777216), (22, 262144), (23, 33554432), (24, -1), (25, 4194304), (26, -1), (27, -1), (28, -1), (29, 4096), (30, -1), (31, -1), (32, 262144), (33, -1), (34, -1), (35, -1), (36, -1), (37, 4194304), (38, 33554432), (39, 4096), (40, -1), (41, -1), (42, 131072), (43, 131072), (44, -1), (45, -1), (46, -1), (47, 16777216), (48, 4194304), (49, 33554432), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, 524288), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, 0), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, 16777216), (16, 524288), (17, -1), (18, -1), (19, 262144), (20, 8388608), (21, 16777216), (22, 262144), (23, 0), (24, -1), (25, 2097152), (26, -1), (27, -1), (28, -1), (29, 0), (30, -1), (31, -1), (32, 0), (33, -1), (34, -1), (35, -1), (36, -1), (37, 2097152), (38, 0), (39, 0), (40, -1), (41, -1), (42, 0), (43, 0), (44, -1), (45, -1), (46, -1), (47, 0), (48, 0), (49, 0), (50, -1), (51, -1), (52, -1)]

Covered at level 13 : {32, 38, 39, 9, 42, 43, 47, 48, 49, 23, 29}

After reduction : 
 pending  : [25, 37, 22, 20, 21, 0, 16, 19, 15]
 solution : [6, 24, 8]


Before reduction : 
 pending  : [25, 37, 22, 20, 21, 0, 16, 19, 15]
 solution : [6, 24, 8]

Essensial at level 13 : set()

Before removed
 coverage : [(0, 524288), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, 0), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, 16777216), (16, 524288), (17, -1), (18, -1), (19, 262144), (20, 8388608), (21, 16777216), (22, 262144), (23, 0), (24, -1), (25, 2097152), (26, -1), (27, -1), (28, -1), (29, 0), (30, -1), (31, -1), (32, 0), (33, -1), (34, -1), (35, -1), (36, -1), (37, 2097152), (38, 0), (39, 0), (40, -1), (41, -1), (42, 0), (43, 0), (44, -1), (45, -1), (46, -1), (47, 0), (48, 0), (49, 0), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, 524288), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, 16777216), (16, 524288), (17, -1), (18, -1), (19, 262144), (20, 8388608), (21, 16777216), (22, 262144), (23, -1), (24, -1), (25, 2097152), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, 2097152), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 13 : set()

After reduction : 
 pending  : [25, 37, 22, 20, 21, 0, 16, 19, 15]
 solution : [6, 24, 8]


Solution : [6, 24, 8] has cost 17.


Before backtrack at level 13
 pending : [25, 37, 22, 20, 21, 0, 16, 19, 15]
 solution : [6, 24, 8]

After backtrack at level 13
 pending : [25, 37, 22, 20, 21, 0, 16, 19, 15, 9, 29, 32, 38, 39, 42, 43, 47, 48, 49, 23]
 solution : [6, 24, 8]


Invert decision for 8 at level 12


New level: 13
 pending : [25, 37, 22, 20, 21, 0, 16, 19, 15, 9, 29, 32, 38, 39, 42, 43, 47, 48, 49, 23]
 solution : [6, 24]


Before reduction : 
 pending  : [25, 37, 22, 20, 21, 0, 16, 19, 15, 9, 29, 32, 38, 39, 42, 43, 47, 48, 49, 23]
 solution : [6, 24]

Essensial at level 13 : {23}

Before removed
 coverage : [(0, 524288), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, 16777216), (16, 524288), (17, -1), (18, -1), (19, 262144), (20, 8388608), (21, 16777216), (22, 262144), (23, -1), (24, -1), (25, 2097152), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, 2097152), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, 524288), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, 0), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, 16777216), (16, 524288), (17, -1), (18, -1), (19, 262144), (20, 8388608), (21, 16777216), (22, 262144), (23, -1), (24, -1), (25, 2097152), (26, -1), (27, -1), (28, -1), (29, 0), (30, -1), (31, -1), (32, 0), (33, -1), (34, -1), (35, -1), (36, -1), (37, 2097152), (38, 0), (39, 0), (40, -1), (41, -1), (42, 0), (43, 0), (44, -1), (45, -1), (46, -1), (47, 0), (48, 0), (49, 0), (50, -1), (51, -1), (52, -1)]

Covered at level 13 : {32, 38, 39, 9, 42, 43, 47, 48, 49, 29}

After reduction : 
 pending  : [25, 37, 22, 20, 21, 0, 16, 19, 15]
 solution : [6, 24, 23]


Before reduction : 
 pending  : [25, 37, 22, 20, 21, 0, 16, 19, 15]
 solution : [6, 24, 23]

Essensial at level 13 : set()

Before removed
 coverage : [(0, 524288), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, 0), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, 16777216), (16, 524288), (17, -1), (18, -1), (19, 262144), (20, 8388608), (21, 16777216), (22, 262144), (23, -1), (24, -1), (25, 2097152), (26, -1), (27, -1), (28, -1), (29, 0), (30, -1), (31, -1), (32, 0), (33, -1), (34, -1), (35, -1), (36, -1), (37, 2097152), (38, 0), (39, 0), (40, -1), (41, -1), (42, 0), (43, 0), (44, -1), (45, -1), (46, -1), (47, 0), (48, 0), (49, 0), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, 524288), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, 16777216), (16, 524288), (17, -1), (18, -1), (19, 262144), (20, 8388608), (21, 16777216), (22, 262144), (23, -1), (24, -1), (25, 2097152), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, 2097152), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 13 : set()

After reduction : 
 pending  : [25, 37, 22, 20, 21, 0, 16, 19, 15]
 solution : [6, 24, 23]


Solution : [6, 24, 23] has cost 20.


Before backtrack at level 13
 pending : [25, 37, 22, 20, 21, 0, 16, 19, 15]
 solution : [6, 24, 23]

After backtrack at level 13
 pending : [25, 37, 22, 20, 21, 0, 16, 19, 15, 23, 9, 29, 32, 38, 39, 42, 43, 47, 48, 49]
 solution : [6, 24]


Before backtrack at level 12
 pending : [25, 37, 22, 20, 21, 0, 16, 19, 15, 23, 9, 29, 32, 38, 39, 42, 43, 47, 48, 49]
 solution : [6, 24]

After backtrack at level 12
 pending : [25, 37, 22, 20, 21, 0, 16, 19, 15, 23, 9, 29, 32, 38, 39, 42, 43, 47, 48, 49, 8]
 solution : [6, 24]


Before backtrack at level 11
 pending : [25, 37, 22, 20, 21, 0, 16, 19, 15, 23, 9, 29, 32, 38, 39, 42, 43, 47, 48, 49, 8]
 solution : [6, 24]

After backtrack at level 11
 pending : [25, 37, 22, 20, 21, 0, 16, 19, 15, 23, 9, 29, 32, 38, 39, 42, 43, 47, 48, 49, 8, 14]
 solution : [6, 24]


Before backtrack at level 10
 pending : [25, 37, 22, 20, 21, 0, 16, 19, 15, 23, 9, 29, 32, 38, 39, 42, 43, 47, 48, 49, 8, 14]
 solution : [6, 24]

After backtrack at level 10
 pending : [25, 37, 22, 20, 21, 0, 16, 19, 15, 23, 9, 29, 32, 38, 39, 42, 43, 47, 48, 49, 8, 14, 40]
 solution : [6, 24]


Before backtrack at level 9
 pending : [25, 37, 22, 20, 21, 0, 16, 19, 15, 23, 9, 29, 32, 38, 39, 42, 43, 47, 48, 49, 8, 14, 40]
 solution : [6, 24]

After backtrack at level 9
 pending : [25, 37, 22, 20, 21, 0, 16, 19, 15, 23, 9, 29, 32, 38, 39, 42, 43, 47, 48, 49, 8, 14, 40, 30, 33, 18]
 solution : [6, 24]


Invert decision for 24 at level 8


New level: 9
 pending : [25, 37, 22, 20, 21, 0, 16, 19, 15, 23, 9, 29, 32, 38, 39, 42, 43, 47, 48, 49, 8, 14, 40, 30, 33, 18]
 solution : [6]


Before reduction : 
 pending  : [25, 37, 22, 20, 21, 0, 16, 19, 15, 23, 9, 29, 32, 38, 39, 42, 43, 47, 48, 49, 8, 14, 40, 30, 33, 18]
 solution : [6]

Essensial at level 9 : set()

Before removed
 coverage : [(0, 524288), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, 16777216), (16, 524288), (17, -1), (18, -1), (19, 262144), (20, 8388608), (21, 16777216), (22, 262144), (23, -1), (24, -1), (25, 2097152), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, 2097152), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, 1048576), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, 134217728), (9, 1048576), (10, -1), (11, -1), (12, -1), (13, -1), (14, 67108864), (15, 33554432), (16, 1572864), (17, -1), (18, 1073741824), (19, 524288), (20, 8388608), (21, 16777216), (22, 262144), (23, 134217728), (24, -1), (25, 4194304), (26, -1), (27, -1), (28, -1), (29, 16384), (30, 32768), (31, -1), (32, 1048576), (33, 4194304), (34, -1), (35, -1), (36, -1), (37, 4194304), (38, 134217728), (39, 16384), (40, 268435456), (41, -1), (42, 524288), (43, 524288), (44, -1), (45, -1), (46, -1), (47, 67108864), (48, 16777216), (49, 67108864), (50, -1), (51, -1), (52, -1)]

Covered at level 9 : set()

After reduction : 
 pending  : [25, 37, 22, 20, 21, 0, 16, 19, 15, 23, 9, 29, 32, 38, 39, 42, 43, 47, 48, 49, 8, 14, 40, 30, 33, 18]
 solution : [6]


Solution : [6] has cost 6.


Decide in level 9 among pending : [25, 37, 22, 20, 21, 0, 16, 19, 15, 23, 9, 29, 32, 38, 39, 42, 43, 47, 48, 49, 8, 14, 40, 30, 33, 18]

Coverage : [(0, 1048576), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, 134217728), (9, 1048576), (10, -1), (11, -1), (12, -1), (13, -1), (14, 67108864), (15, 33554432), (16, 1572864), (17, -1), (18, 1073741824), (19, 524288), (20, 8388608), (21, 16777216), (22, 262144), (23, 134217728), (24, -1), (25, 4194304), (26, -1), (27, -1), (28, -1), (29, 16384), (30, 32768), (31, -1), (32, 1048576), (33, 4194304), (34, -1), (35, -1), (36, -1), (37, 4194304), (38, 134217728), (39, 16384), (40, 268435456), (41, -1), (42, 524288), (43, 524288), (44, -1), (45, -1), (46, -1), (47, 67108864), (48, 16777216), (49, 67108864), (50, -1), (51, -1), (52, -1)]

Decide 18 with phase True at level 9

After decision at level 9
 pending : [25, 37, 22, 20, 21, 0, 16, 19, 15, 23, 9, 29, 32, 38, 39, 42, 43, 47, 48, 49, 8, 14, 40, 30, 33]
 solution : [6, 18]


New level: 10
 pending : [25, 37, 22, 20, 21, 0, 16, 19, 15, 23, 9, 29, 32, 38, 39, 42, 43, 47, 48, 49, 8, 14, 40, 30, 33]
 solution : [6, 18]


Before reduction : 
 pending  : [25, 37, 22, 20, 21, 0, 16, 19, 15, 23, 9, 29, 32, 38, 39, 42, 43, 47, 48, 49, 8, 14, 40, 30, 33]
 solution : [6, 18]

Essensial at level 10 : set()

Before removed
 coverage : [(0, 1048576), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, 134217728), (9, 1048576), (10, -1), (11, -1), (12, -1), (13, -1), (14, 67108864), (15, 33554432), (16, 1572864), (17, -1), (18, 1073741824), (19, 524288), (20, 8388608), (21, 16777216), (22, 262144), (23, 134217728), (24, -1), (25, 4194304), (26, -1), (27, -1), (28, -1), (29, 16384), (30, 32768), (31, -1), (32, 1048576), (33, 4194304), (34, -1), (35, -1), (36, -1), (37, 4194304), (38, 134217728), (39, 16384), (40, 268435456), (41, -1), (42, 524288), (43, 524288), (44, -1), (45, -1), (46, -1), (47, 67108864), (48, 16777216), (49, 67108864), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, 0), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, 134217728), (9, 262144), (10, -1), (11, -1), (12, -1), (13, -1), (14, 0), (15, 0), (16, 0), (17, -1), (18, -1), (19, 0), (20, 0), (21, 0), (22, 0), (23, 134217728), (24, -1), (25, 0), (26, -1), (27, -1), (28, -1), (29, 4096), (30, 8192), (31, -1), (32, 524288), (33, 4194304), (34, -1), (35, -1), (36, -1), (37, 0), (38, 67108864), (39, 2048), (40, 2048), (41, -1), (42, 262144), (43, 262144), (44, -1), (45, -1), (46, -1), (47, 67108864), (48, 16777216), (49, 67108864), (50, -1), (51, -1), (52, -1)]

Covered at level 10 : {0, 37, 14, 15, 16, 19, 20, 21, 22, 25}

After reduction : 
 pending  : [23, 9, 29, 32, 38, 39, 42, 43, 47, 48, 49, 8, 40, 30, 33]
 solution : [6, 18]


Before reduction : 
 pending  : [23, 9, 29, 32, 38, 39, 42, 43, 47, 48, 49, 8, 40, 30, 33]
 solution : [6, 18]

Essensial at level 10 : set()

Before removed
 coverage : [(0, 0), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, 134217728), (9, 262144), (10, -1), (11, -1), (12, -1), (13, -1), (14, 0), (15, 0), (16, 0), (17, -1), (18, -1), (19, 0), (20, 0), (21, 0), (22, 0), (23, 134217728), (24, -1), (25, 0), (26, -1), (27, -1), (28, -1), (29, 4096), (30, 8192), (31, -1), (32, 524288), (33, 4194304), (34, -1), (35, -1), (36, -1), (37, 0), (38, 67108864), (39, 2048), (40, 2048), (41, -1), (42, 262144), (43, 262144), (44, -1), (45, -1), (46, -1), (47, 67108864), (48, 16777216), (49, 67108864), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, 134217728), (9, 262144), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, 134217728), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, 4096), (30, 8192), (31, -1), (32, 524288), (33, 4194304), (34, -1), (35, -1), (36, -1), (37, -1), (38, 67108864), (39, 2048), (40, 2048), (41, -1), (42, 262144), (43, 262144), (44, -1), (45, -1), (46, -1), (47, 67108864), (48, 16777216), (49, 67108864), (50, -1), (51, -1), (52, -1)]

Covered at level 10 : set()

After reduction : 
 pending  : [23, 9, 29, 32, 38, 39, 42, 43, 47, 48, 49, 8, 40, 30, 33]
 solution : [6, 18]


Solution : [6, 18] has cost 13.


Decide in level 10 among pending : [23, 9, 29, 32, 38, 39, 42, 43, 47, 48, 49, 8, 40, 30, 33]

Coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, 134217728), (9, 262144), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, 134217728), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, 4096), (30, 8192), (31, -1), (32, 524288), (33, 4194304), (34, -1), (35, -1), (36, -1), (37, -1), (38, 67108864), (39, 2048), (40, 2048), (41, -1), (42, 262144), (43, 262144), (44, -1), (45, -1), (46, -1), (47, 67108864), (48, 16777216), (49, 67108864), (50, -1), (51, -1), (52, -1)]

Decide 23 with phase True at level 10

After decision at level 10
 pending : [9, 29, 32, 38, 39, 42, 43, 47, 48, 49, 8, 40, 30, 33]
 solution : [6, 18, 23]


New level: 11
 pending : [9, 29, 32, 38, 39, 42, 43, 47, 48, 49, 8, 40, 30, 33]
 solution : [6, 18, 23]


Before reduction : 
 pending  : [9, 29, 32, 38, 39, 42, 43, 47, 48, 49, 8, 40, 30, 33]
 solution : [6, 18, 23]

Essensial at level 11 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, 134217728), (9, 262144), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, 134217728), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, 4096), (30, 8192), (31, -1), (32, 524288), (33, 4194304), (34, -1), (35, -1), (36, -1), (37, -1), (38, 67108864), (39, 2048), (40, 2048), (41, -1), (42, 262144), (43, 262144), (44, -1), (45, -1), (46, -1), (47, 67108864), (48, 16777216), (49, 67108864), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, 0), (9, 0), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, 0), (30, 0), (31, -1), (32, 0), (33, 0), (34, -1), (35, -1), (36, -1), (37, -1), (38, 0), (39, 0), (40, 0), (41, -1), (42, 0), (43, 0), (44, -1), (45, -1), (46, -1), (47, 0), (48, 0), (49, 0), (50, -1), (51, -1), (52, -1)]

Covered at level 11 : {32, 33, 38, 39, 8, 9, 42, 43, 40, 47, 48, 49, 29, 30}

After reduction : 
 pending  : []
 solution : [6, 18, 23]


Before reduction : 
 pending  : []
 solution : [6, 18, 23]

Essensial at level 11 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, 0), (9, 0), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, 0), (30, 0), (31, -1), (32, 0), (33, 0), (34, -1), (35, -1), (36, -1), (37, -1), (38, 0), (39, 0), (40, 0), (41, -1), (42, 0), (43, 0), (44, -1), (45, -1), (46, -1), (47, 0), (48, 0), (49, 0), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 11 : set()

After reduction : 
 pending  : []
 solution : [6, 18, 23]


Solution : [6, 18, 23] has cost 20.


Before backtrack at level 11
 pending : []
 solution : [6, 18, 23]

After backtrack at level 11
 pending : [9, 29, 32, 38, 39, 42, 43, 47, 48, 49, 8, 40, 30, 33]
 solution : [6, 18, 23]


Invert decision for 23 at level 10


New level: 11
 pending : [9, 29, 32, 38, 39, 42, 43, 47, 48, 49, 8, 40, 30, 33]
 solution : [6, 18]


Before reduction : 
 pending  : [9, 29, 32, 38, 39, 42, 43, 47, 48, 49, 8, 40, 30, 33]
 solution : [6, 18]

Essensial at level 11 : {8}

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, 0), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, 0), (30, 0), (31, -1), (32, 0), (33, 0), (34, -1), (35, -1), (36, -1), (37, -1), (38, 0), (39, 0), (40, 0), (41, -1), (42, 0), (43, 0), (44, -1), (45, -1), (46, -1), (47, 0), (48, 0), (49, 0), (50, -1), (51, -1), (52, -1)]

Covered at level 11 : {32, 33, 38, 39, 40, 9, 42, 43, 47, 48, 49, 29, 30}

After reduction : 
 pending  : []
 solution : [6, 18, 8]


Before reduction : 
 pending  : []
 solution : [6, 18, 8]

Essensial at level 11 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, 0), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, 0), (30, 0), (31, -1), (32, 0), (33, 0), (34, -1), (35, -1), (36, -1), (37, -1), (38, 0), (39, 0), (40, 0), (41, -1), (42, 0), (43, 0), (44, -1), (45, -1), (46, -1), (47, 0), (48, 0), (49, 0), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 11 : set()

After reduction : 
 pending  : []
 solution : [6, 18, 8]


Solution : [6, 18, 8] has cost 17.


Before backtrack at level 11
 pending : []
 solution : [6, 18, 8]

After backtrack at level 11
 pending : [8, 9, 29, 32, 38, 39, 42, 43, 47, 48, 49, 40, 30, 33]
 solution : [6, 18]


Before backtrack at level 10
 pending : [8, 9, 29, 32, 38, 39, 42, 43, 47, 48, 49, 40, 30, 33]
 solution : [6, 18]

After backtrack at level 10
 pending : [8, 9, 29, 32, 38, 39, 42, 43, 47, 48, 49, 40, 30, 33, 25, 37, 22, 20, 21, 0, 16, 19, 15, 14, 23]
 solution : [6, 18]


Invert decision for 18 at level 9


New level: 10
 pending : [8, 9, 29, 32, 38, 39, 42, 43, 47, 48, 49, 40, 30, 33, 25, 37, 22, 20, 21, 0, 16, 19, 15, 14, 23]
 solution : [6]


Before reduction : 
 pending  : [8, 9, 29, 32, 38, 39, 42, 43, 47, 48, 49, 40, 30, 33, 25, 37, 22, 20, 21, 0, 16, 19, 15, 14, 23]
 solution : [6]

Essensial at level 10 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, 1048576), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, 134217728), (9, 1048576), (10, -1), (11, -1), (12, -1), (13, -1), (14, 67108864), (15, 33554432), (16, 1572864), (17, -1), (18, -1), (19, 524288), (20, 8388608), (21, 16777216), (22, 262144), (23, 134217728), (24, -1), (25, 4194304), (26, -1), (27, -1), (28, -1), (29, 16384), (30, 32768), (31, -1), (32, 1048576), (33, 4194304), (34, -1), (35, -1), (36, -1), (37, 4194304), (38, 134217728), (39, 16384), (40, 268435456), (41, -1), (42, 524288), (43, 524288), (44, -1), (45, -1), (46, -1), (47, 67108864), (48, 16777216), (49, 67108864), (50, -1), (51, -1), (52, -1)]

Covered at level 10 : set()

After reduction : 
 pending  : [8, 9, 29, 32, 38, 39, 42, 43, 47, 48, 49, 40, 30, 33, 25, 37, 22, 20, 21, 0, 16, 19, 15, 14, 23]
 solution : [6]


Solution : [6] has cost 6.


Decide in level 10 among pending : [8, 9, 29, 32, 38, 39, 42, 43, 47, 48, 49, 40, 30, 33, 25, 37, 22, 20, 21, 0, 16, 19, 15, 14, 23]

Coverage : [(0, 1048576), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, 134217728), (9, 1048576), (10, -1), (11, -1), (12, -1), (13, -1), (14, 67108864), (15, 33554432), (16, 1572864), (17, -1), (18, -1), (19, 524288), (20, 8388608), (21, 16777216), (22, 262144), (23, 134217728), (24, -1), (25, 4194304), (26, -1), (27, -1), (28, -1), (29, 16384), (30, 32768), (31, -1), (32, 1048576), (33, 4194304), (34, -1), (35, -1), (36, -1), (37, 4194304), (38, 134217728), (39, 16384), (40, 268435456), (41, -1), (42, 524288), (43, 524288), (44, -1), (45, -1), (46, -1), (47, 67108864), (48, 16777216), (49, 67108864), (50, -1), (51, -1), (52, -1)]

Decide 40 with phase True at level 10

After decision at level 10
 pending : [8, 9, 29, 32, 38, 39, 42, 43, 47, 48, 49, 30, 33, 25, 37, 22, 20, 21, 0, 16, 19, 15, 14, 23]
 solution : [6, 40]


New level: 11
 pending : [8, 9, 29, 32, 38, 39, 42, 43, 47, 48, 49, 30, 33, 25, 37, 22, 20, 21, 0, 16, 19, 15, 14, 23]
 solution : [6, 40]


Before reduction : 
 pending  : [8, 9, 29, 32, 38, 39, 42, 43, 47, 48, 49, 30, 33, 25, 37, 22, 20, 21, 0, 16, 19, 15, 14, 23]
 solution : [6, 40]

Essensial at level 11 : set()

Before removed
 coverage : [(0, 1048576), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, 134217728), (9, 1048576), (10, -1), (11, -1), (12, -1), (13, -1), (14, 67108864), (15, 33554432), (16, 1572864), (17, -1), (18, -1), (19, 524288), (20, 8388608), (21, 16777216), (22, 262144), (23, 134217728), (24, -1), (25, 4194304), (26, -1), (27, -1), (28, -1), (29, 16384), (30, 32768), (31, -1), (32, 1048576), (33, 4194304), (34, -1), (35, -1), (36, -1), (37, 4194304), (38, 134217728), (39, 16384), (40, 268435456), (41, -1), (42, 524288), (43, 524288), (44, -1), (45, -1), (46, -1), (47, 67108864), (48, 16777216), (49, 67108864), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, 524288), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, 33554432), (9, 262144), (10, -1), (11, -1), (12, -1), (13, -1), (14, 33554432), (15, 16777216), (16, 524288), (17, -1), (18, -1), (19, 262144), (20, 8388608), (21, 16777216), (22, 262144), (23, 33554432), (24, -1), (25, 1048576), (26, -1), (27, -1), (28, -1), (29, 4096), (30, 8192), (31, -1), (32, 262144), (33, 4194304), (34, -1), (35, -1), (36, -1), (37, 1048576), (38, 134217728), (39, 4096), (40, -1), (41, -1), (42, 131072), (43, 131072), (44, -1), (45, -1), (46, -1), (47, 33554432), (48, 4194304), (49, 67108864), (50, -1), (51, -1), (52, -1)]

Covered at level 11 : set()

After reduction : 
 pending  : [8, 9, 29, 32, 38, 39, 42, 43, 47, 48, 49, 30, 33, 25, 37, 22, 20, 21, 0, 16, 19, 15, 14, 23]
 solution : [6, 40]


Solution : [6, 40] has cost 24.


Before backtrack at level 11
 pending : [8, 9, 29, 32, 38, 39, 42, 43, 47, 48, 49, 30, 33, 25, 37, 22, 20, 21, 0, 16, 19, 15, 14, 23]
 solution : [6, 40]

After backtrack at level 11
 pending : [8, 9, 29, 32, 38, 39, 42, 43, 47, 48, 49, 30, 33, 25, 37, 22, 20, 21, 0, 16, 19, 15, 14, 23]
 solution : [6, 40]


Invert decision for 40 at level 10


New level: 11
 pending : [8, 9, 29, 32, 38, 39, 42, 43, 47, 48, 49, 30, 33, 25, 37, 22, 20, 21, 0, 16, 19, 15, 14, 23]
 solution : [6]


Before reduction : 
 pending  : [8, 9, 29, 32, 38, 39, 42, 43, 47, 48, 49, 30, 33, 25, 37, 22, 20, 21, 0, 16, 19, 15, 14, 23]
 solution : [6]

Essensial at level 11 : set()

Before removed
 coverage : [(0, 524288), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, 33554432), (9, 262144), (10, -1), (11, -1), (12, -1), (13, -1), (14, 33554432), (15, 16777216), (16, 524288), (17, -1), (18, -1), (19, 262144), (20, 8388608), (21, 16777216), (22, 262144), (23, 33554432), (24, -1), (25, 1048576), (26, -1), (27, -1), (28, -1), (29, 4096), (30, 8192), (31, -1), (32, 262144), (33, 4194304), (34, -1), (35, -1), (36, -1), (37, 1048576), (38, 134217728), (39, 4096), (40, -1), (41, -1), (42, 131072), (43, 131072), (44, -1), (45, -1), (46, -1), (47, 33554432), (48, 4194304), (49, 67108864), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, 1048576), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, 134217728), (9, 1048576), (10, -1), (11, -1), (12, -1), (13, -1), (14, 67108864), (15, 33554432), (16, 1572864), (17, -1), (18, -1), (19, 524288), (20, 8388608), (21, 16777216), (22, 262144), (23, 134217728), (24, -1), (25, 4194304), (26, -1), (27, -1), (28, -1), (29, 16384), (30, 32768), (31, -1), (32, 1048576), (33, 4194304), (34, -1), (35, -1), (36, -1), (37, 4194304), (38, 134217728), (39, 16384), (40, -1), (41, -1), (42, 524288), (43, 524288), (44, -1), (45, -1), (46, -1), (47, 67108864), (48, 16777216), (49, 67108864), (50, -1), (51, -1), (52, -1)]

Covered at level 11 : set()

After reduction : 
 pending  : [8, 9, 29, 32, 38, 39, 42, 43, 47, 48, 49, 30, 33, 25, 37, 22, 20, 21, 0, 16, 19, 15, 14, 23]
 solution : [6]


Solution : [6] has cost 6.


Decide in level 11 among pending : [8, 9, 29, 32, 38, 39, 42, 43, 47, 48, 49, 30, 33, 25, 37, 22, 20, 21, 0, 16, 19, 15, 14, 23]

Coverage : [(0, 1048576), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, 134217728), (9, 1048576), (10, -1), (11, -1), (12, -1), (13, -1), (14, 67108864), (15, 33554432), (16, 1572864), (17, -1), (18, -1), (19, 524288), (20, 8388608), (21, 16777216), (22, 262144), (23, 134217728), (24, -1), (25, 4194304), (26, -1), (27, -1), (28, -1), (29, 16384), (30, 32768), (31, -1), (32, 1048576), (33, 4194304), (34, -1), (35, -1), (36, -1), (37, 4194304), (38, 134217728), (39, 16384), (40, -1), (41, -1), (42, 524288), (43, 524288), (44, -1), (45, -1), (46, -1), (47, 67108864), (48, 16777216), (49, 67108864), (50, -1), (51, -1), (52, -1)]

Decide 8 with phase True at level 11

After decision at level 11
 pending : [9, 29, 32, 38, 39, 42, 43, 47, 48, 49, 30, 33, 25, 37, 22, 20, 21, 0, 16, 19, 15, 14, 23]
 solution : [6, 8]


New level: 12
 pending : [9, 29, 32, 38, 39, 42, 43, 47, 48, 49, 30, 33, 25, 37, 22, 20, 21, 0, 16, 19, 15, 14, 23]
 solution : [6, 8]


Before reduction : 
 pending  : [9, 29, 32, 38, 39, 42, 43, 47, 48, 49, 30, 33, 25, 37, 22, 20, 21, 0, 16, 19, 15, 14, 23]
 solution : [6, 8]

Essensial at level 12 : set()

Before removed
 coverage : [(0, 1048576), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, 134217728), (9, 1048576), (10, -1), (11, -1), (12, -1), (13, -1), (14, 67108864), (15, 33554432), (16, 1572864), (17, -1), (18, -1), (19, 524288), (20, 8388608), (21, 16777216), (22, 262144), (23, 134217728), (24, -1), (25, 4194304), (26, -1), (27, -1), (28, -1), (29, 16384), (30, 32768), (31, -1), (32, 1048576), (33, 4194304), (34, -1), (35, -1), (36, -1), (37, 4194304), (38, 134217728), (39, 16384), (40, -1), (41, -1), (42, 524288), (43, 524288), (44, -1), (45, -1), (46, -1), (47, 67108864), (48, 16777216), (49, 67108864), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, 524288), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, 0), (10, -1), (11, -1), (12, -1), (13, -1), (14, 33554432), (15, 16777216), (16, 524288), (17, -1), (18, -1), (19, 262144), (20, 8388608), (21, 16777216), (22, 262144), (23, 0), (24, -1), (25, 2097152), (26, -1), (27, -1), (28, -1), (29, 0), (30, 0), (31, -1), (32, 0), (33, 0), (34, -1), (35, -1), (36, -1), (37, 2097152), (38, 0), (39, 0), (40, -1), (41, -1), (42, 0), (43, 0), (44, -1), (45, -1), (46, -1), (47, 0), (48, 0), (49, 0), (50, -1), (51, -1), (52, -1)]

Covered at level 12 : {32, 33, 38, 39, 9, 42, 43, 47, 48, 49, 23, 29, 30}

After reduction : 
 pending  : [25, 37, 22, 20, 21, 0, 16, 19, 15, 14]
 solution : [6, 8]


Before reduction : 
 pending  : [25, 37, 22, 20, 21, 0, 16, 19, 15, 14]
 solution : [6, 8]

Essensial at level 12 : set()

Before removed
 coverage : [(0, 524288), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, 0), (10, -1), (11, -1), (12, -1), (13, -1), (14, 33554432), (15, 16777216), (16, 524288), (17, -1), (18, -1), (19, 262144), (20, 8388608), (21, 16777216), (22, 262144), (23, 0), (24, -1), (25, 2097152), (26, -1), (27, -1), (28, -1), (29, 0), (30, 0), (31, -1), (32, 0), (33, 0), (34, -1), (35, -1), (36, -1), (37, 2097152), (38, 0), (39, 0), (40, -1), (41, -1), (42, 0), (43, 0), (44, -1), (45, -1), (46, -1), (47, 0), (48, 0), (49, 0), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, 524288), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 33554432), (15, 16777216), (16, 524288), (17, -1), (18, -1), (19, 262144), (20, 8388608), (21, 16777216), (22, 262144), (23, -1), (24, -1), (25, 2097152), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, 2097152), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 12 : set()

After reduction : 
 pending  : [25, 37, 22, 20, 21, 0, 16, 19, 15, 14]
 solution : [6, 8]


Solution : [6, 8] has cost 10.


Decide in level 12 among pending : [25, 37, 22, 20, 21, 0, 16, 19, 15, 14]

Coverage : [(0, 524288), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 33554432), (15, 16777216), (16, 524288), (17, -1), (18, -1), (19, 262144), (20, 8388608), (21, 16777216), (22, 262144), (23, -1), (24, -1), (25, 2097152), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, 2097152), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Decide 14 with phase True at level 12

After decision at level 12
 pending : [25, 37, 22, 20, 21, 0, 16, 19, 15]
 solution : [6, 8, 14]


New level: 13
 pending : [25, 37, 22, 20, 21, 0, 16, 19, 15]
 solution : [6, 8, 14]


Before reduction : 
 pending  : [25, 37, 22, 20, 21, 0, 16, 19, 15]
 solution : [6, 8, 14]

Essensial at level 13 : set()

Before removed
 coverage : [(0, 524288), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 33554432), (15, 16777216), (16, 524288), (17, -1), (18, -1), (19, 262144), (20, 8388608), (21, 16777216), (22, 262144), (23, -1), (24, -1), (25, 2097152), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, 2097152), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, 0), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, 0), (16, 0), (17, -1), (18, -1), (19, 0), (20, 65536), (21, 262144), (22, 65536), (23, -1), (24, -1), (25, 2048), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, 2048), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 13 : {0, 16, 19, 15}

After reduction : 
 pending  : [25, 37, 22, 20, 21]
 solution : [6, 8, 14]


Before reduction : 
 pending  : [25, 37, 22, 20, 21]
 solution : [6, 8, 14]

Essensial at level 13 : set()

Before removed
 coverage : [(0, 0), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, 0), (16, 0), (17, -1), (18, -1), (19, 0), (20, 65536), (21, 262144), (22, 65536), (23, -1), (24, -1), (25, 2048), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, 2048), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, 65536), (21, 262144), (22, 65536), (23, -1), (24, -1), (25, 2048), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, 2048), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 13 : set()

After reduction : 
 pending  : [25, 37, 22, 20, 21]
 solution : [6, 8, 14]


Solution : [6, 8, 14] has cost 19.


Before backtrack at level 13
 pending : [25, 37, 22, 20, 21]
 solution : [6, 8, 14]

After backtrack at level 13
 pending : [25, 37, 22, 20, 21, 0, 16, 19, 15]
 solution : [6, 8, 14]


Invert decision for 14 at level 12


New level: 13
 pending : [25, 37, 22, 20, 21, 0, 16, 19, 15]
 solution : [6, 8]


Before reduction : 
 pending  : [25, 37, 22, 20, 21, 0, 16, 19, 15]
 solution : [6, 8]

Essensial at level 13 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, 65536), (21, 262144), (22, 65536), (23, -1), (24, -1), (25, 2048), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, 2048), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, 524288), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, 16777216), (16, 524288), (17, -1), (18, -1), (19, 262144), (20, 8388608), (21, 16777216), (22, 262144), (23, -1), (24, -1), (25, 2097152), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, 2097152), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 13 : set()

After reduction : 
 pending  : [25, 37, 22, 20, 21, 0, 16, 19, 15]
 solution : [6, 8]


Solution : [6, 8] has cost 10.


Decide in level 13 among pending : [25, 37, 22, 20, 21, 0, 16, 19, 15]

Coverage : [(0, 524288), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, 16777216), (16, 524288), (17, -1), (18, -1), (19, 262144), (20, 8388608), (21, 16777216), (22, 262144), (23, -1), (24, -1), (25, 2097152), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, 2097152), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Decide 21 with phase True at level 13

After decision at level 13
 pending : [25, 37, 22, 20, 0, 16, 19, 15]
 solution : [6, 8, 21]


New level: 14
 pending : [25, 37, 22, 20, 0, 16, 19, 15]
 solution : [6, 8, 21]


Before reduction : 
 pending  : [25, 37, 22, 20, 0, 16, 19, 15]
 solution : [6, 8, 21]

Essensial at level 14 : set()

Before removed
 coverage : [(0, 524288), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, 16777216), (16, 524288), (17, -1), (18, -1), (19, 262144), (20, 8388608), (21, 16777216), (22, 262144), (23, -1), (24, -1), (25, 2097152), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, 2097152), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, 262144), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, 4194304), (16, 262144), (17, -1), (18, -1), (19, 0), (20, 0), (21, -1), (22, 0), (23, -1), (24, -1), (25, 524288), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, 524288), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 14 : {19, 20, 22}

After reduction : 
 pending  : [25, 37, 0, 16, 15]
 solution : [6, 8, 21]


Before reduction : 
 pending  : [25, 37, 0, 16, 15]
 solution : [6, 8, 21]

Essensial at level 14 : set()

Before removed
 coverage : [(0, 262144), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, 4194304), (16, 262144), (17, -1), (18, -1), (19, 0), (20, 0), (21, -1), (22, 0), (23, -1), (24, -1), (25, 524288), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, 524288), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, 262144), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, 4194304), (16, 262144), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, 524288), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, 524288), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 14 : set()

After reduction : 
 pending  : [25, 37, 0, 16, 15]
 solution : [6, 8, 21]


Solution : [6, 8, 21] has cost 17.


Before backtrack at level 14
 pending : [25, 37, 0, 16, 15]
 solution : [6, 8, 21]

After backtrack at level 14
 pending : [25, 37, 0, 16, 15, 22, 20, 19]
 solution : [6, 8, 21]


Invert decision for 21 at level 13


New level: 14
 pending : [25, 37, 0, 16, 15, 22, 20, 19]
 solution : [6, 8]


Before reduction : 
 pending  : [25, 37, 0, 16, 15, 22, 20, 19]
 solution : [6, 8]

Essensial at level 14 : set()

Before removed
 coverage : [(0, 262144), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, 4194304), (16, 262144), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, 524288), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, 524288), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, 524288), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, 16777216), (16, 524288), (17, -1), (18, -1), (19, 262144), (20, 8388608), (21, -1), (22, 262144), (23, -1), (24, -1), (25, 2097152), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, 2097152), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 14 : set()

After reduction : 
 pending  : [25, 37, 0, 16, 15, 22, 20, 19]
 solution : [6, 8]


Solution : [6, 8] has cost 10.


Decide in level 14 among pending : [25, 37, 0, 16, 15, 22, 20, 19]

Coverage : [(0, 524288), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, 16777216), (16, 524288), (17, -1), (18, -1), (19, 262144), (20, 8388608), (21, -1), (22, 262144), (23, -1), (24, -1), (25, 2097152), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, 2097152), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Decide 15 with phase True at level 14

After decision at level 14
 pending : [25, 37, 0, 16, 22, 20, 19]
 solution : [6, 8, 15]


New level: 15
 pending : [25, 37, 0, 16, 22, 20, 19]
 solution : [6, 8, 15]


Before reduction : 
 pending  : [25, 37, 0, 16, 22, 20, 19]
 solution : [6, 8, 15]

Essensial at level 15 : set()

Before removed
 coverage : [(0, 524288), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, 16777216), (16, 524288), (17, -1), (18, -1), (19, 262144), (20, 8388608), (21, -1), (22, 262144), (23, -1), (24, -1), (25, 2097152), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, 2097152), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, 0), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, 0), (17, -1), (18, -1), (19, 0), (20, 65536), (21, -1), (22, 65536), (23, -1), (24, -1), (25, 2048), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, 2048), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 15 : {0, 16, 19}

After reduction : 
 pending  : [25, 37, 22, 20]
 solution : [6, 8, 15]


Before reduction : 
 pending  : [25, 37, 22, 20]
 solution : [6, 8, 15]

Essensial at level 15 : set()

Before removed
 coverage : [(0, 0), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, 0), (17, -1), (18, -1), (19, 0), (20, 65536), (21, -1), (22, 65536), (23, -1), (24, -1), (25, 2048), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, 2048), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, 65536), (21, -1), (22, 65536), (23, -1), (24, -1), (25, 2048), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, 2048), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 15 : set()

After reduction : 
 pending  : [25, 37, 22, 20]
 solution : [6, 8, 15]


Solution : [6, 8, 15] has cost 19.


Before backtrack at level 15
 pending : [25, 37, 22, 20]
 solution : [6, 8, 15]

After backtrack at level 15
 pending : [25, 37, 22, 20, 0, 16, 19]
 solution : [6, 8, 15]


Invert decision for 15 at level 14


New level: 15
 pending : [25, 37, 22, 20, 0, 16, 19]
 solution : [6, 8]


Before reduction : 
 pending  : [25, 37, 22, 20, 0, 16, 19]
 solution : [6, 8]

Essensial at level 15 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, 65536), (21, -1), (22, 65536), (23, -1), (24, -1), (25, 2048), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, 2048), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, 524288), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, 524288), (17, -1), (18, -1), (19, 262144), (20, 8388608), (21, -1), (22, 262144), (23, -1), (24, -1), (25, 2097152), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, 2097152), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 15 : set()

After reduction : 
 pending  : [25, 37, 22, 20, 0, 16, 19]
 solution : [6, 8]


Solution : [6, 8] has cost 10.


Decide in level 15 among pending : [25, 37, 22, 20, 0, 16, 19]

Coverage : [(0, 524288), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, 524288), (17, -1), (18, -1), (19, 262144), (20, 8388608), (21, -1), (22, 262144), (23, -1), (24, -1), (25, 2097152), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, 2097152), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Decide 20 with phase True at level 15

After decision at level 15
 pending : [25, 37, 22, 0, 16, 19]
 solution : [6, 8, 20]


New level: 16
 pending : [25, 37, 22, 0, 16, 19]
 solution : [6, 8, 20]


Before reduction : 
 pending  : [25, 37, 22, 0, 16, 19]
 solution : [6, 8, 20]

Essensial at level 16 : set()

Before removed
 coverage : [(0, 524288), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, 524288), (17, -1), (18, -1), (19, 262144), (20, 8388608), (21, -1), (22, 262144), (23, -1), (24, -1), (25, 2097152), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, 2097152), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, 262144), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, 262144), (17, -1), (18, -1), (19, 0), (20, -1), (21, -1), (22, 0), (23, -1), (24, -1), (25, 524288), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, 524288), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 16 : {19, 22}

After reduction : 
 pending  : [25, 37, 0, 16]
 solution : [6, 8, 20]


Before reduction : 
 pending  : [25, 37, 0, 16]
 solution : [6, 8, 20]

Essensial at level 16 : set()

Before removed
 coverage : [(0, 262144), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, 262144), (17, -1), (18, -1), (19, 0), (20, -1), (21, -1), (22, 0), (23, -1), (24, -1), (25, 524288), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, 524288), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, 262144), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, 262144), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, 524288), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, 524288), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 16 : set()

After reduction : 
 pending  : [25, 37, 0, 16]
 solution : [6, 8, 20]


Solution : [6, 8, 20] has cost 17.


Before backtrack at level 16
 pending : [25, 37, 0, 16]
 solution : [6, 8, 20]

After backtrack at level 16
 pending : [25, 37, 0, 16, 22, 19]
 solution : [6, 8, 20]


Invert decision for 20 at level 15


New level: 16
 pending : [25, 37, 0, 16, 22, 19]
 solution : [6, 8]


Before reduction : 
 pending  : [25, 37, 0, 16, 22, 19]
 solution : [6, 8]

Essensial at level 16 : {22}

Before removed
 coverage : [(0, 262144), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, 262144), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, 524288), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, 524288), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, 524288), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, 524288), (17, -1), (18, -1), (19, 131072), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, 2097152), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, 2097152), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 16 : set()

After reduction : 
 pending  : [25, 37, 0, 16, 19]
 solution : [6, 8, 22]


Before reduction : 
 pending  : [25, 37, 0, 16, 19]
 solution : [6, 8, 22]

Essensial at level 16 : set()

Before removed
 coverage : [(0, 524288), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, 524288), (17, -1), (18, -1), (19, 131072), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, 2097152), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, 2097152), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, 524288), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, 524288), (17, -1), (18, -1), (19, 131072), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, 2097152), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, 2097152), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 16 : set()

After reduction : 
 pending  : [25, 37, 0, 16, 19]
 solution : [6, 8, 22]


Solution : [6, 8, 22] has cost 17.


Before backtrack at level 16
 pending : [25, 37, 0, 16, 19]
 solution : [6, 8, 22]

After backtrack at level 16
 pending : [25, 37, 0, 16, 19, 22]
 solution : [6, 8]


Before backtrack at level 15
 pending : [25, 37, 0, 16, 19, 22]
 solution : [6, 8]

After backtrack at level 15
 pending : [25, 37, 0, 16, 19, 22, 20]
 solution : [6, 8]


Before backtrack at level 14
 pending : [25, 37, 0, 16, 19, 22, 20]
 solution : [6, 8]

After backtrack at level 14
 pending : [25, 37, 0, 16, 19, 22, 20, 15]
 solution : [6, 8]


Before backtrack at level 13
 pending : [25, 37, 0, 16, 19, 22, 20, 15]
 solution : [6, 8]

After backtrack at level 13
 pending : [25, 37, 0, 16, 19, 22, 20, 15, 21]
 solution : [6, 8]


Before backtrack at level 12
 pending : [25, 37, 0, 16, 19, 22, 20, 15, 21]
 solution : [6, 8]

After backtrack at level 12
 pending : [25, 37, 0, 16, 19, 22, 20, 15, 21, 9, 29, 32, 38, 39, 42, 43, 47, 48, 49, 30, 33, 23, 14]
 solution : [6, 8]


Invert decision for 8 at level 11


New level: 12
 pending : [25, 37, 0, 16, 19, 22, 20, 15, 21, 9, 29, 32, 38, 39, 42, 43, 47, 48, 49, 30, 33, 23, 14]
 solution : [6]


Before reduction : 
 pending  : [25, 37, 0, 16, 19, 22, 20, 15, 21, 9, 29, 32, 38, 39, 42, 43, 47, 48, 49, 30, 33, 23, 14]
 solution : [6]

Essensial at level 12 : {23}

Before removed
 coverage : [(0, 524288), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, 524288), (17, -1), (18, -1), (19, 131072), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, 2097152), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, 2097152), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, 524288), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, 0), (10, -1), (11, -1), (12, -1), (13, -1), (14, 33554432), (15, 16777216), (16, 524288), (17, -1), (18, -1), (19, 262144), (20, 8388608), (21, 16777216), (22, 262144), (23, -1), (24, -1), (25, 2097152), (26, -1), (27, -1), (28, -1), (29, 0), (30, 0), (31, -1), (32, 0), (33, 0), (34, -1), (35, -1), (36, -1), (37, 2097152), (38, 0), (39, 0), (40, -1), (41, -1), (42, 0), (43, 0), (44, -1), (45, -1), (46, -1), (47, 0), (48, 0), (49, 0), (50, -1), (51, -1), (52, -1)]

Covered at level 12 : {32, 33, 38, 39, 9, 42, 43, 47, 48, 49, 29, 30}

After reduction : 
 pending  : [25, 37, 0, 16, 19, 22, 20, 15, 21, 14]
 solution : [6, 23]


Before reduction : 
 pending  : [25, 37, 0, 16, 19, 22, 20, 15, 21, 14]
 solution : [6, 23]

Essensial at level 12 : set()

Before removed
 coverage : [(0, 524288), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, 0), (10, -1), (11, -1), (12, -1), (13, -1), (14, 33554432), (15, 16777216), (16, 524288), (17, -1), (18, -1), (19, 262144), (20, 8388608), (21, 16777216), (22, 262144), (23, -1), (24, -1), (25, 2097152), (26, -1), (27, -1), (28, -1), (29, 0), (30, 0), (31, -1), (32, 0), (33, 0), (34, -1), (35, -1), (36, -1), (37, 2097152), (38, 0), (39, 0), (40, -1), (41, -1), (42, 0), (43, 0), (44, -1), (45, -1), (46, -1), (47, 0), (48, 0), (49, 0), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, 524288), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 33554432), (15, 16777216), (16, 524288), (17, -1), (18, -1), (19, 262144), (20, 8388608), (21, 16777216), (22, 262144), (23, -1), (24, -1), (25, 2097152), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, 2097152), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 12 : set()

After reduction : 
 pending  : [25, 37, 0, 16, 19, 22, 20, 15, 21, 14]
 solution : [6, 23]


Solution : [6, 23] has cost 13.


Decide in level 12 among pending : [25, 37, 0, 16, 19, 22, 20, 15, 21, 14]

Coverage : [(0, 524288), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 33554432), (15, 16777216), (16, 524288), (17, -1), (18, -1), (19, 262144), (20, 8388608), (21, 16777216), (22, 262144), (23, -1), (24, -1), (25, 2097152), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, 2097152), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Decide 14 with phase True at level 12

After decision at level 12
 pending : [25, 37, 0, 16, 19, 22, 20, 15, 21]
 solution : [6, 23, 14]


New level: 13
 pending : [25, 37, 0, 16, 19, 22, 20, 15, 21]
 solution : [6, 23, 14]


Before reduction : 
 pending  : [25, 37, 0, 16, 19, 22, 20, 15, 21]
 solution : [6, 23, 14]

Essensial at level 13 : set()

Before removed
 coverage : [(0, 524288), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 33554432), (15, 16777216), (16, 524288), (17, -1), (18, -1), (19, 262144), (20, 8388608), (21, 16777216), (22, 262144), (23, -1), (24, -1), (25, 2097152), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, 2097152), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, 0), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, 0), (16, 0), (17, -1), (18, -1), (19, 0), (20, 65536), (21, 262144), (22, 65536), (23, -1), (24, -1), (25, 2048), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, 2048), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 13 : {0, 16, 19, 15}

After reduction : 
 pending  : [25, 37, 22, 20, 21]
 solution : [6, 23, 14]


Before reduction : 
 pending  : [25, 37, 22, 20, 21]
 solution : [6, 23, 14]

Essensial at level 13 : set()

Before removed
 coverage : [(0, 0), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, 0), (16, 0), (17, -1), (18, -1), (19, 0), (20, 65536), (21, 262144), (22, 65536), (23, -1), (24, -1), (25, 2048), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, 2048), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, 65536), (21, 262144), (22, 65536), (23, -1), (24, -1), (25, 2048), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, 2048), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 13 : set()

After reduction : 
 pending  : [25, 37, 22, 20, 21]
 solution : [6, 23, 14]


Solution : [6, 23, 14] has cost 22.


Before backtrack at level 13
 pending : [25, 37, 22, 20, 21]
 solution : [6, 23, 14]

After backtrack at level 13
 pending : [25, 37, 22, 20, 21, 0, 16, 19, 15]
 solution : [6, 23, 14]


Invert decision for 14 at level 12


New level: 13
 pending : [25, 37, 22, 20, 21, 0, 16, 19, 15]
 solution : [6, 23]


Before reduction : 
 pending  : [25, 37, 22, 20, 21, 0, 16, 19, 15]
 solution : [6, 23]

Essensial at level 13 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, 65536), (21, 262144), (22, 65536), (23, -1), (24, -1), (25, 2048), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, 2048), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, 524288), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, 16777216), (16, 524288), (17, -1), (18, -1), (19, 262144), (20, 8388608), (21, 16777216), (22, 262144), (23, -1), (24, -1), (25, 2097152), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, 2097152), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 13 : set()

After reduction : 
 pending  : [25, 37, 22, 20, 21, 0, 16, 19, 15]
 solution : [6, 23]


Solution : [6, 23] has cost 13.


Decide in level 13 among pending : [25, 37, 22, 20, 21, 0, 16, 19, 15]

Coverage : [(0, 524288), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, 16777216), (16, 524288), (17, -1), (18, -1), (19, 262144), (20, 8388608), (21, 16777216), (22, 262144), (23, -1), (24, -1), (25, 2097152), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, 2097152), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Decide 21 with phase True at level 13

After decision at level 13
 pending : [25, 37, 22, 20, 0, 16, 19, 15]
 solution : [6, 23, 21]


New level: 14
 pending : [25, 37, 22, 20, 0, 16, 19, 15]
 solution : [6, 23, 21]


Before reduction : 
 pending  : [25, 37, 22, 20, 0, 16, 19, 15]
 solution : [6, 23, 21]

Essensial at level 14 : set()

Before removed
 coverage : [(0, 524288), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, 16777216), (16, 524288), (17, -1), (18, -1), (19, 262144), (20, 8388608), (21, 16777216), (22, 262144), (23, -1), (24, -1), (25, 2097152), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, 2097152), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, 262144), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, 4194304), (16, 262144), (17, -1), (18, -1), (19, 0), (20, 0), (21, -1), (22, 0), (23, -1), (24, -1), (25, 524288), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, 524288), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 14 : {19, 20, 22}

After reduction : 
 pending  : [25, 37, 0, 16, 15]
 solution : [6, 23, 21]


Before reduction : 
 pending  : [25, 37, 0, 16, 15]
 solution : [6, 23, 21]

Essensial at level 14 : set()

Before removed
 coverage : [(0, 262144), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, 4194304), (16, 262144), (17, -1), (18, -1), (19, 0), (20, 0), (21, -1), (22, 0), (23, -1), (24, -1), (25, 524288), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, 524288), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, 262144), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, 4194304), (16, 262144), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, 524288), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, 524288), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 14 : set()

After reduction : 
 pending  : [25, 37, 0, 16, 15]
 solution : [6, 23, 21]


Solution : [6, 23, 21] has cost 20.


Before backtrack at level 14
 pending : [25, 37, 0, 16, 15]
 solution : [6, 23, 21]

After backtrack at level 14
 pending : [25, 37, 0, 16, 15, 22, 20, 19]
 solution : [6, 23, 21]


Invert decision for 21 at level 13


New level: 14
 pending : [25, 37, 0, 16, 15, 22, 20, 19]
 solution : [6, 23]


Before reduction : 
 pending  : [25, 37, 0, 16, 15, 22, 20, 19]
 solution : [6, 23]

Essensial at level 14 : set()

Before removed
 coverage : [(0, 262144), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, 4194304), (16, 262144), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, 524288), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, 524288), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, 524288), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, 16777216), (16, 524288), (17, -1), (18, -1), (19, 262144), (20, 8388608), (21, -1), (22, 262144), (23, -1), (24, -1), (25, 2097152), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, 2097152), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 14 : set()

After reduction : 
 pending  : [25, 37, 0, 16, 15, 22, 20, 19]
 solution : [6, 23]


Solution : [6, 23] has cost 13.


Decide in level 14 among pending : [25, 37, 0, 16, 15, 22, 20, 19]

Coverage : [(0, 524288), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, 16777216), (16, 524288), (17, -1), (18, -1), (19, 262144), (20, 8388608), (21, -1), (22, 262144), (23, -1), (24, -1), (25, 2097152), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, 2097152), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Decide 15 with phase True at level 14

After decision at level 14
 pending : [25, 37, 0, 16, 22, 20, 19]
 solution : [6, 23, 15]


New level: 15
 pending : [25, 37, 0, 16, 22, 20, 19]
 solution : [6, 23, 15]


Before reduction : 
 pending  : [25, 37, 0, 16, 22, 20, 19]
 solution : [6, 23, 15]

Essensial at level 15 : set()

Before removed
 coverage : [(0, 524288), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, 16777216), (16, 524288), (17, -1), (18, -1), (19, 262144), (20, 8388608), (21, -1), (22, 262144), (23, -1), (24, -1), (25, 2097152), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, 2097152), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, 0), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, 0), (17, -1), (18, -1), (19, 0), (20, 65536), (21, -1), (22, 65536), (23, -1), (24, -1), (25, 2048), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, 2048), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 15 : {0, 16, 19}

After reduction : 
 pending  : [25, 37, 22, 20]
 solution : [6, 23, 15]


Before reduction : 
 pending  : [25, 37, 22, 20]
 solution : [6, 23, 15]

Essensial at level 15 : set()

Before removed
 coverage : [(0, 0), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, 0), (17, -1), (18, -1), (19, 0), (20, 65536), (21, -1), (22, 65536), (23, -1), (24, -1), (25, 2048), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, 2048), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, 65536), (21, -1), (22, 65536), (23, -1), (24, -1), (25, 2048), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, 2048), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 15 : set()

After reduction : 
 pending  : [25, 37, 22, 20]
 solution : [6, 23, 15]


Solution : [6, 23, 15] has cost 22.


Before backtrack at level 15
 pending : [25, 37, 22, 20]
 solution : [6, 23, 15]

After backtrack at level 15
 pending : [25, 37, 22, 20, 0, 16, 19]
 solution : [6, 23, 15]


Invert decision for 15 at level 14


New level: 15
 pending : [25, 37, 22, 20, 0, 16, 19]
 solution : [6, 23]


Before reduction : 
 pending  : [25, 37, 22, 20, 0, 16, 19]
 solution : [6, 23]

Essensial at level 15 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, 65536), (21, -1), (22, 65536), (23, -1), (24, -1), (25, 2048), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, 2048), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, 524288), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, 524288), (17, -1), (18, -1), (19, 262144), (20, 8388608), (21, -1), (22, 262144), (23, -1), (24, -1), (25, 2097152), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, 2097152), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 15 : set()

After reduction : 
 pending  : [25, 37, 22, 20, 0, 16, 19]
 solution : [6, 23]


Solution : [6, 23] has cost 13.


Decide in level 15 among pending : [25, 37, 22, 20, 0, 16, 19]

Coverage : [(0, 524288), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, 524288), (17, -1), (18, -1), (19, 262144), (20, 8388608), (21, -1), (22, 262144), (23, -1), (24, -1), (25, 2097152), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, 2097152), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Decide 20 with phase True at level 15

After decision at level 15
 pending : [25, 37, 22, 0, 16, 19]
 solution : [6, 23, 20]


New level: 16
 pending : [25, 37, 22, 0, 16, 19]
 solution : [6, 23, 20]


Before reduction : 
 pending  : [25, 37, 22, 0, 16, 19]
 solution : [6, 23, 20]

Essensial at level 16 : set()

Before removed
 coverage : [(0, 524288), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, 524288), (17, -1), (18, -1), (19, 262144), (20, 8388608), (21, -1), (22, 262144), (23, -1), (24, -1), (25, 2097152), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, 2097152), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, 262144), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, 262144), (17, -1), (18, -1), (19, 0), (20, -1), (21, -1), (22, 0), (23, -1), (24, -1), (25, 524288), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, 524288), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 16 : {19, 22}

After reduction : 
 pending  : [25, 37, 0, 16]
 solution : [6, 23, 20]


Before reduction : 
 pending  : [25, 37, 0, 16]
 solution : [6, 23, 20]

Essensial at level 16 : set()

Before removed
 coverage : [(0, 262144), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, 262144), (17, -1), (18, -1), (19, 0), (20, -1), (21, -1), (22, 0), (23, -1), (24, -1), (25, 524288), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, 524288), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, 262144), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, 262144), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, 524288), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, 524288), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 16 : set()

After reduction : 
 pending  : [25, 37, 0, 16]
 solution : [6, 23, 20]


Solution : [6, 23, 20] has cost 20.


Before backtrack at level 16
 pending : [25, 37, 0, 16]
 solution : [6, 23, 20]

After backtrack at level 16
 pending : [25, 37, 0, 16, 22, 19]
 solution : [6, 23, 20]


Invert decision for 20 at level 15


New level: 16
 pending : [25, 37, 0, 16, 22, 19]
 solution : [6, 23]


Before reduction : 
 pending  : [25, 37, 0, 16, 22, 19]
 solution : [6, 23]

Essensial at level 16 : {22}

Before removed
 coverage : [(0, 262144), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, 262144), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, 524288), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, 524288), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, 524288), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, 524288), (17, -1), (18, -1), (19, 131072), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, 2097152), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, 2097152), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 16 : set()

After reduction : 
 pending  : [25, 37, 0, 16, 19]
 solution : [6, 23, 22]


Before reduction : 
 pending  : [25, 37, 0, 16, 19]
 solution : [6, 23, 22]

Essensial at level 16 : set()

Before removed
 coverage : [(0, 524288), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, 524288), (17, -1), (18, -1), (19, 131072), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, 2097152), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, 2097152), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, 524288), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, 524288), (17, -1), (18, -1), (19, 131072), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, 2097152), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, 2097152), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 16 : set()

After reduction : 
 pending  : [25, 37, 0, 16, 19]
 solution : [6, 23, 22]


Solution : [6, 23, 22] has cost 20.


Before backtrack at level 16
 pending : [25, 37, 0, 16, 19]
 solution : [6, 23, 22]

After backtrack at level 16
 pending : [25, 37, 0, 16, 19, 22]
 solution : [6, 23]


Before backtrack at level 15
 pending : [25, 37, 0, 16, 19, 22]
 solution : [6, 23]

After backtrack at level 15
 pending : [25, 37, 0, 16, 19, 22, 20]
 solution : [6, 23]


Before backtrack at level 14
 pending : [25, 37, 0, 16, 19, 22, 20]
 solution : [6, 23]

After backtrack at level 14
 pending : [25, 37, 0, 16, 19, 22, 20, 15]
 solution : [6, 23]


Before backtrack at level 13
 pending : [25, 37, 0, 16, 19, 22, 20, 15]
 solution : [6, 23]

After backtrack at level 13
 pending : [25, 37, 0, 16, 19, 22, 20, 15, 21]
 solution : [6, 23]


Before backtrack at level 12
 pending : [25, 37, 0, 16, 19, 22, 20, 15, 21]
 solution : [6, 23]

After backtrack at level 12
 pending : [25, 37, 0, 16, 19, 22, 20, 15, 21, 23, 9, 29, 32, 38, 39, 42, 43, 47, 48, 49, 30, 33, 14]
 solution : [6]


Before backtrack at level 11
 pending : [25, 37, 0, 16, 19, 22, 20, 15, 21, 23, 9, 29, 32, 38, 39, 42, 43, 47, 48, 49, 30, 33, 14]
 solution : [6]

After backtrack at level 11
 pending : [25, 37, 0, 16, 19, 22, 20, 15, 21, 23, 9, 29, 32, 38, 39, 42, 43, 47, 48, 49, 30, 33, 14, 8]
 solution : [6]


Before backtrack at level 10
 pending : [25, 37, 0, 16, 19, 22, 20, 15, 21, 23, 9, 29, 32, 38, 39, 42, 43, 47, 48, 49, 30, 33, 14, 8]
 solution : [6]

After backtrack at level 10
 pending : [25, 37, 0, 16, 19, 22, 20, 15, 21, 23, 9, 29, 32, 38, 39, 42, 43, 47, 48, 49, 30, 33, 14, 8, 40]
 solution : [6]


Before backtrack at level 9
 pending : [25, 37, 0, 16, 19, 22, 20, 15, 21, 23, 9, 29, 32, 38, 39, 42, 43, 47, 48, 49, 30, 33, 14, 8, 40]
 solution : [6]

After backtrack at level 9
 pending : [25, 37, 0, 16, 19, 22, 20, 15, 21, 23, 9, 29, 32, 38, 39, 42, 43, 47, 48, 49, 30, 33, 14, 8, 40, 18]
 solution : [6]


Before backtrack at level 8
 pending : [25, 37, 0, 16, 19, 22, 20, 15, 21, 23, 9, 29, 32, 38, 39, 42, 43, 47, 48, 49, 30, 33, 14, 8, 40, 18]
 solution : [6]

After backtrack at level 8
 pending : [25, 37, 0, 16, 19, 22, 20, 15, 21, 23, 9, 29, 32, 38, 39, 42, 43, 47, 48, 49, 30, 33, 14, 8, 40, 18, 24]
 solution : [6]


Before backtrack at level 7
 pending : [25, 37, 0, 16, 19, 22, 20, 15, 21, 23, 9, 29, 32, 38, 39, 42, 43, 47, 48, 49, 30, 33, 14, 8, 40, 18, 24]
 solution : [6]

After backtrack at level 7
 pending : [25, 37, 0, 16, 19, 22, 20, 15, 21, 23, 9, 29, 32, 38, 39, 42, 43, 47, 48, 49, 30, 33, 14, 8, 40, 18, 24, 41]
 solution : [6]


Before backtrack at level 6
 pending : [25, 37, 0, 16, 19, 22, 20, 15, 21, 23, 9, 29, 32, 38, 39, 42, 43, 47, 48, 49, 30, 33, 14, 8, 40, 18, 24, 41]
 solution : [6]

After backtrack at level 6
 pending : [25, 37, 0, 16, 19, 22, 20, 15, 21, 23, 9, 29, 32, 38, 39, 42, 43, 47, 48, 49, 30, 33, 14, 8, 40, 18, 24, 41, 35]
 solution : [6]


Before backtrack at level 5
 pending : [25, 37, 0, 16, 19, 22, 20, 15, 21, 23, 9, 29, 32, 38, 39, 42, 43, 47, 48, 49, 30, 33, 14, 8, 40, 18, 24, 41, 35]
 solution : [6]

After backtrack at level 5
 pending : [25, 37, 0, 16, 19, 22, 20, 15, 21, 23, 9, 29, 32, 38, 39, 42, 43, 47, 48, 49, 30, 33, 14, 8, 40, 18, 24, 41, 35, 17]
 solution : [6]


Before backtrack at level 4
 pending : [25, 37, 0, 16, 19, 22, 20, 15, 21, 23, 9, 29, 32, 38, 39, 42, 43, 47, 48, 49, 30, 33, 14, 8, 40, 18, 24, 41, 35, 17]
 solution : [6]

After backtrack at level 4
 pending : [25, 37, 0, 16, 19, 22, 20, 15, 21, 23, 9, 29, 32, 38, 39, 42, 43, 47, 48, 49, 30, 33, 14, 8, 40, 18, 24, 41, 35, 17, 26]
 solution : [6]


Before backtrack at level 3
 pending : [25, 37, 0, 16, 19, 22, 20, 15, 21, 23, 9, 29, 32, 38, 39, 42, 43, 47, 48, 49, 30, 33, 14, 8, 40, 18, 24, 41, 35, 17, 26]
 solution : [6]

After backtrack at level 3
 pending : [25, 37, 0, 16, 19, 22, 20, 15, 21, 23, 9, 29, 32, 38, 39, 42, 43, 47, 48, 49, 30, 33, 14, 8, 40, 18, 24, 41, 35, 17, 26, 28]
 solution : [6]


Before backtrack at level 2
 pending : [25, 37, 0, 16, 19, 22, 20, 15, 21, 23, 9, 29, 32, 38, 39, 42, 43, 47, 48, 49, 30, 33, 14, 8, 40, 18, 24, 41, 35, 17, 26, 28]
 solution : [6]

After backtrack at level 2
 pending : [25, 37, 0, 16, 19, 22, 20, 15, 21, 23, 9, 29, 32, 38, 39, 42, 43, 47, 48, 49, 30, 33, 14, 8, 40, 18, 24, 41, 35, 17, 26, 28, 2]
 solution : [6]


Before backtrack at level 1
 pending : [25, 37, 0, 16, 19, 22, 20, 15, 21, 23, 9, 29, 32, 38, 39, 42, 43, 47, 48, 49, 30, 33, 14, 8, 40, 18, 24, 41, 35, 17, 26, 28, 2]
 solution : [6]

After backtrack at level 1
 pending : [25, 37, 0, 16, 19, 22, 20, 15, 21, 23, 9, 29, 32, 38, 39, 42, 43, 47, 48, 49, 30, 33, 14, 8, 40, 18, 24, 41, 35, 17, 26, 28, 2, 1]
 solution : [6]


=====================================================================================================================

	[MIN RESULT]: Minimized Invariants on [ivybench/sym_quorum/ivy/simple-election: acceptor=3,proposer=3]

=====================================================================================================================

[MIN NOTE]: number of minimal solution found: 1

[MIN NOTE]: total qcost: 14

[MIN NOTE]: maximum branch and bound depth: 16

Definitions (length=2)

invariant [def_didNotPromise] didNotPromise(A) = forall P. ~promise(A,P) # definition

invariant [def_chosenAt] chosenAt(Q,P) = forall A. member(A,Q) -> promise(A,P) # definition

Equality Relations (length=0)

Solution 0 : [6, 26, 8] (length = 3)

invariant [invar_6] forall PROPOSER1,ACCEPTOR0,PROPOSER0. ~promise(ACCEPTOR0,PROPOSER0) | ~promise(ACCEPTOR0,PROPOSER1) | PROPOSER0 = PROPOSER1 # qcost: 6

invariant [invar_26] forall PROPOSER0. (exists QUORUM0. ~leader(PROPOSER0) | chosenAt(QUORUM0,PROPOSER0)) # qcost: 4

invariant [invar_8] forall ACCEPTOR0,PROPOSER0. ~promise(ACCEPTOR0,PROPOSER0) | start(PROPOSER0) # qcost: 4




[QRM NOTE]: Time elapsed since start: 12.718 seconds

[QRM NOTE]: Time elapsed since last: 4.066 seconds

[QRM NOTE]: Peak memory: 1745242 bytes


========================================================================================================================

	[MIN_CHECK] Minimization Sanity Check on [ivybench/sym_quorum/ivy/simple-election: acceptor=3,proposer=3]

========================================================================================================================

Minimization check for Solution 0

[MIN_CHECK RESULT]: PASS

[QRM NOTE]: Time elapsed since start: 13.212 seconds

[QRM NOTE]: Time elapsed since last: 0.494 seconds

[QRM NOTE]: Peak memory: 1781991 bytes


=========================================================================================================

	[IVY_CHECK]: Ivy Check on [ivybench/sym_quorum/ivy/simple-election: acceptor=3,proposer=3]

=========================================================================================================

ivy_check complete=fo ivybench/sym_quorum/ivy/simple-election.acceptor_3_proposer_3.0.ivy


Isolate this:

    The following properties are assumed as axioms:
        ivybench/sym_quorum/ivy/simple-election.acceptor_3_proposer_3.0.ivy: line 17: axiom1

    The following definitions are used:
        ivybench/sym_quorum/ivy/simple-election.acceptor_3_proposer_3.0.ivy: line 29: def2
        ivybench/sym_quorum/ivy/simple-election.acceptor_3_proposer_3.0.ivy: line 30: def3

    The inductive invariant consists of the following conjectures:
        ivybench/sym_quorum/ivy/simple-election.acceptor_3_proposer_3.0.ivy: line 63: def_didNotPromise
        ivybench/sym_quorum/ivy/simple-election.acceptor_3_proposer_3.0.ivy: line 64: def_chosenAt
        ivybench/sym_quorum/ivy/simple-election.acceptor_3_proposer_3.0.ivy: line 65: invar_6
        ivybench/sym_quorum/ivy/simple-election.acceptor_3_proposer_3.0.ivy: line 66: invar_26
        ivybench/sym_quorum/ivy/simple-election.acceptor_3_proposer_3.0.ivy: line 67: invar_8

    The following action implementations are present:
        ivybench/sym_quorum/ivy/simple-election.acceptor_3_proposer_3.0.ivy: line 48: implementation of decide
        ivybench/sym_quorum/ivy/simple-election.acceptor_3_proposer_3.0.ivy: line 39: implementation of send_1a
        ivybench/sym_quorum/ivy/simple-election.acceptor_3_proposer_3.0.ivy: line 42: implementation of send_1b

    The following initializers are present:
        ivybench/sym_quorum/ivy/simple-election.acceptor_3_proposer_3.0.ivy: line 32: init[after4]

    Initialization must establish the invariant
        ivybench/sym_quorum/ivy/simple-election.acceptor_3_proposer_3.0.ivy: line 63: def_didNotPromise ... PASS
        ivybench/sym_quorum/ivy/simple-election.acceptor_3_proposer_3.0.ivy: line 64: def_chosenAt ... PASS
        ivybench/sym_quorum/ivy/simple-election.acceptor_3_proposer_3.0.ivy: line 65: invar_6 ... PASS
        ivybench/sym_quorum/ivy/simple-election.acceptor_3_proposer_3.0.ivy: line 66: invar_26 ... PASS
        ivybench/sym_quorum/ivy/simple-election.acceptor_3_proposer_3.0.ivy: line 67: invar_8 ... PASS

    The following set of external actions must preserve the invariant:
        (internal) ext:decide
            ivybench/sym_quorum/ivy/simple-election.acceptor_3_proposer_3.0.ivy: line 63: def_didNotPromise ... PASS
            ivybench/sym_quorum/ivy/simple-election.acceptor_3_proposer_3.0.ivy: line 64: def_chosenAt ... PASS
            ivybench/sym_quorum/ivy/simple-election.acceptor_3_proposer_3.0.ivy: line 65: invar_6 ... PASS
            ivybench/sym_quorum/ivy/simple-election.acceptor_3_proposer_3.0.ivy: line 66: invar_26 ... PASS
            ivybench/sym_quorum/ivy/simple-election.acceptor_3_proposer_3.0.ivy: line 67: invar_8 ... PASS
        (internal) ext:send_1a
            ivybench/sym_quorum/ivy/simple-election.acceptor_3_proposer_3.0.ivy: line 63: def_didNotPromise ... PASS
            ivybench/sym_quorum/ivy/simple-election.acceptor_3_proposer_3.0.ivy: line 64: def_chosenAt ... PASS
            ivybench/sym_quorum/ivy/simple-election.acceptor_3_proposer_3.0.ivy: line 65: invar_6 ... PASS
            ivybench/sym_quorum/ivy/simple-election.acceptor_3_proposer_3.0.ivy: line 66: invar_26 ... PASS
            ivybench/sym_quorum/ivy/simple-election.acceptor_3_proposer_3.0.ivy: line 67: invar_8 ... PASS
        (internal) ext:send_1b
            ivybench/sym_quorum/ivy/simple-election.acceptor_3_proposer_3.0.ivy: line 63: def_didNotPromise ... PASS
            ivybench/sym_quorum/ivy/simple-election.acceptor_3_proposer_3.0.ivy: line 64: def_chosenAt ... PASS
            ivybench/sym_quorum/ivy/simple-election.acceptor_3_proposer_3.0.ivy: line 65: invar_6 ... PASS
            ivybench/sym_quorum/ivy/simple-election.acceptor_3_proposer_3.0.ivy: line 66: invar_26 ... PASS
            ivybench/sym_quorum/ivy/simple-election.acceptor_3_proposer_3.0.ivy: line 67: invar_8 ... PASS

    The following program assertions are treated as assumptions:
        in action send_1b when called from the environment:
            ivybench/sym_quorum/ivy/simple-election.acceptor_3_proposer_3.0.ivy: line 43: assumption
            ivybench/sym_quorum/ivy/simple-election.acceptor_3_proposer_3.0.ivy: line 44: assumption
        in action decide when called from the environment:
            ivybench/sym_quorum/ivy/simple-election.acceptor_3_proposer_3.0.ivy: line 49: assumption

OK
[IVY_CHECK RESULT]: PASS

[R Implies P]: True

[UNSAT CORE]: ((forall A. didNotPromise(A) <-> (forall P. ~promise(A,P))) & (forall P,Q. chosenAt(Q,P) <-> (forall A. member(A,Q) -> promise(A,P))) & (forall Q2,Q1. (exists A. (member(A,Q1) & member(A,Q2)))) & (forall PROPOSER1,ACCEPTOR0,PROPOSER0. ~promise(ACCEPTOR0,PROPOSER0) | ~promise(ACCEPTOR0,PROPOSER1) | PROPOSER0 = PROPOSER1) & (forall PROPOSER0. (exists QUORUM0. ~leader(PROPOSER0) | chosenAt(QUORUM0,PROPOSER0))))

[QRM NOTE]: Time elapsed since start: 13.708 seconds

[QRM NOTE]: Time elapsed since last: 0.497 seconds

[QRM NOTE]: Peak memory: 1820703 bytes


**********************************************************************

	[QRM]: ivybench/sym_quorum/ivy/simple-election.ivy

**********************************************************************

[QRM RESULT]: PASS

