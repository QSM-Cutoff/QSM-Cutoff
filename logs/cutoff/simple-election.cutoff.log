
**********************************************************************

	[QRM]: ivybench/sym_quorum/ivy/simple-election.ivy

**********************************************************************


---------- Parsing Ivy ----------


Printing isolate this:

OK


=============================================================================================================

	[FW]: Forward Reachability on [ivybench/sym_quorum/ivy/simple-election: acceptor=3,proposer=3]

=============================================================================================================


==============================================

	Set up for forward reachability

==============================================

[FW NOTE]: number of state atoms: 27

[FW NOTE]: number of interpreted atoms (e.g. member,le): 9

[FW NOTE]: symmetric group order: 36

[FW NOTE]: number of branching actions: 21

ivy_to_cpp target=qrm simple-election.acceptor_3_proposer_3.finite.ivy

[IVY_TO_CPP RESULT]: OK

swig -c++ -python -o simple-election.acceptor_3_proposer_3.finite_wrap.cpp ivy_exec.i

[SWIG RESULT]: OK

g++ -std=c++11 -fpic -pthread -O3 simple-election.acceptor_3_proposer_3.finite.cpp simple-election.acceptor_3_proposer_3.finite_wrap.cpp -I/home/yunrong/.pyenv/versions/3.12.0/include/python3.12 -c

[G++ RESULT]: OK

g++ -shared simple-election.acceptor_3_proposer_3.finite.o simple-election.acceptor_3_proposer_3.finite_wrap.o -o _ivy_exec.so -lm -lstdc++

[LINK RESULT]: OK

[QRM NOTE]: Time elapsed since start: 7.306 seconds

[QRM NOTE]: Time elapsed since last: 7.306 seconds

[QRM NOTE]: Peak memory: 1195883 bytes


===================================

	Forward reachability

===================================

[FW NOTE]: dfs max depth: 7

[FW NOTE]: number of total reachable states:        254

[FW NOTE]: number of dfs representative states:     26

[FW NOTE]: number of dfs non-representative states: 228


====================================================================================================================

	[FW RESULT]: Forward Reachability on [ivybench/sym_quorum/ivy/simple-election: acceptor=3,proposer=3]

====================================================================================================================

sort: acceptor=['acceptor0', 'acceptor1', 'acceptor2']
sort: proposer=['proposer0', 'proposer1', 'proposer2']
sort: quorum=['quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2']
predicate: member('acceptor', 'quorum')
predicate: leader('proposer',)
predicate: chosenAt('quorum', 'proposer')
predicate: promise('acceptor', 'proposer')
predicate: didNotPromise('acceptor',)
predicate: start('proposer',)
interpreted atoms: {'member(acceptor0,quorum__acceptor0_acceptor1)': '1', 'member(acceptor0,quorum__acceptor0_acceptor2)': '1', 'member(acceptor0,quorum__acceptor1_acceptor2)': '0', 'member(acceptor1,quorum__acceptor0_acceptor1)': '1', 'member(acceptor1,quorum__acceptor0_acceptor2)': '0', 'member(acceptor1,quorum__acceptor1_acceptor2)': '1', 'member(acceptor2,quorum__acceptor0_acceptor1)': '0', 'member(acceptor2,quorum__acceptor0_acceptor2)': '1', 'member(acceptor2,quorum__acceptor1_acceptor2)': '1'}
state atoms: ['chosenAt(quorum__acceptor0_acceptor1,proposer0)', 'chosenAt(quorum__acceptor0_acceptor1,proposer1)', 'chosenAt(quorum__acceptor0_acceptor1,proposer2)', 'chosenAt(quorum__acceptor0_acceptor2,proposer0)', 'chosenAt(quorum__acceptor0_acceptor2,proposer1)', 'chosenAt(quorum__acceptor0_acceptor2,proposer2)', 'chosenAt(quorum__acceptor1_acceptor2,proposer0)', 'chosenAt(quorum__acceptor1_acceptor2,proposer1)', 'chosenAt(quorum__acceptor1_acceptor2,proposer2)', 'didNotPromise(acceptor0)', 'didNotPromise(acceptor1)', 'didNotPromise(acceptor2)', 'leader(proposer0)', 'leader(proposer1)', 'leader(proposer2)', 'promise(acceptor0,proposer0)', 'promise(acceptor0,proposer1)', 'promise(acceptor0,proposer2)', 'promise(acceptor1,proposer0)', 'promise(acceptor1,proposer1)', 'promise(acceptor1,proposer2)', 'promise(acceptor2,proposer0)', 'promise(acceptor2,proposer1)', 'promise(acceptor2,proposer2)', 'start(proposer0)', 'start(proposer1)', 'start(proposer2)']
representative states : 117440939, 117441451, 117442475, 117444523, 50597803, 201367467, 9798197163, 9800294315, 134782891, 136880043, 203464619, 17108907, 348075, 50595755, 201365419, 9798195115, 9800292267, 134780843, 136877995, 203462571, 17106859, 50594731, 201364395, 9798194091, 9800291243, 203461547


=== State Orbit 0 =====================
size : 1
repr state: 000000000111000000000000000
lex min decimal: 117440939
states:
000000000111000000000000000




=== State Orbit 1 =====================
size : 3
repr state: 000000000111000000000000100
lex min decimal: 117441451
states:
000000000111000000000000100
000000000111000000000000010
000000000111000000000000001




=== State Orbit 2 =====================
size : 3
repr state: 000000000111000000000000110
lex min decimal: 117442475
states:
000000000111000000000000011
000000000111000000000000101
000000000111000000000000110




=== State Orbit 3 =====================
size : 1
repr state: 000000000111000000000000111
lex min decimal: 117444523
states:
000000000111000000000000111




=== State Orbit 4 =====================
size : 9
repr state: 000000000011000100000000111
lex min decimal: 50597803
states:
000000000011000001000000111
000000000110000000000100111
000000000011000100000000111
000000000110000000000010111
000000000101000000001000111
000000000101000000100000111
000000000101000000010000111
000000000110000000000001111
000000000011000010000000111




=== State Orbit 5 =====================
size : 9
repr state: 100000000001000100100000111
lex min decimal: 201367467
states:
010000000001000010010000111
000000010100000000010010111
000000100100000000100100111
000100000010000100000100111
100000000001000100100000111
000000001100000000001001111
000001000010000001000001111
001000000001000001001000111
000010000010000010000010111




=== State Orbit 6 =====================
size : 3
repr state: 100100100000000100100100111
lex min decimal: 9798197163
states:
001001001000000001001001111
010010010000000010010010111
100100100000000100100100111




=== State Orbit 7 =====================
size : 3
repr state: 100100100000100100100100111
lex min decimal: 9800294315
states:
001001001000001001001001111
100100100000100100100100111
010010010000010010010010111




=== State Orbit 8 =====================
size : 18
repr state: 100000000000000100100010111
lex min decimal: 134782891
states:
000001000000000001100001111
000000100000000001100100111
001000000000000001001010111
001000000000000001001100111
100000000000000100100001111
010000000000000010010001111
000010000000000010100010111
000001000000000001010001111
000000010000000001010010111
000000010000000100010010111
010000000000000010010100111
000000001000000100001001111
000000001000000010001001111
000100000000000100010100111
000010000000000010001010111
000100000000000100001100111
000000100000000010100100111
100000000000000100100010111




=== State Orbit 9 =====================
size : 18
repr state: 100000000000100100100010111
lex min decimal: 136880043
states:
000100000000100100010100111
000000010000010001010010111
100000000000100100100001111
000010000000010010100010111
001000000000001001001010111
001000000000001001001100111
000000010000010100010010111
000010000000010010001010111
000001000000001001010001111
000000100000100001100100111
000001000000001001100001111
000000001000001100001001111
000000100000100010100100111
010000000000010010010001111
010000000000010010010100111
000100000000100100001100111
100000000000100100100010111
000000001000001010001001111




=== State Orbit 10 =====================
size : 9
repr state: 100000000001100100100000111
lex min decimal: 203464619
states:
100000000001100100100000111
001000000001001001001000111
000000001100001000001001111
000000010100010000010010111
010000000001010010010000111
000000100100100000100100111
000010000010010010000010111
000001000010001001000001111
000100000010100100000100111




=== State Orbit 11 =====================
size : 18
repr state: 000000000001000100010000111
lex min decimal: 17108907
states:
000000000010000001000010111
000000000100000000001100111
000000000010000100000001111
000000000010000010000100111
000000000100000000100001111
000000000100000000010001111
000000000100000000001010111
000000000001000001010000111
000000000001000100010000111
000000000100000000100010111
000000000010000100000010111
000000000001000010100000111
000000000010000001000100111
000000000001000100001000111
000000000100000000010100111
000000000001000001100000111
000000000001000010001000111
000000000010000010000001111




=== State Orbit 12 =====================
size : 6
repr state: 000000000000000100010001111
lex min decimal: 348075
states:
000000000000000001100010111
000000000000000100001010111
000000000000000100010001111
000000000000000010100001111
000000000000000001010100111
000000000000000010001100111




=== State Orbit 13 =====================
size : 18
repr state: 000000000011000100000000110
lex min decimal: 50595755
states:
000000000011000100000000101
000000000110000000000100110
000000000101000000001000011
000000000101000000001000101
000000000101000000010000011
000000000011000001000000011
000000000101000000100000110
000000000101000000010000110
000000000011000100000000110
000000000110000000000001101
000000000011000001000000101
000000000110000000000001011
000000000101000000100000101
000000000011000010000000110
000000000110000000000010110
000000000011000010000000011
000000000110000000000010011
000000000110000000000100101




=== State Orbit 14 =====================
size : 18
repr state: 100000000001000100100000110
lex min decimal: 201365419
states:
100000000001000100100000110
000100000010000100000100110
000010000010000010000010110
010000000001000010010000011
001000000001000001001000011
000001000010000001000001101
000000001100000000001001101
000000001100000000001001011
000000010100000000010010110
000100000010000100000100101
100000000001000100100000101
001000000001000001001000101
010000000001000010010000110
000001000010000001000001011
000000010100000000010010011
000000100100000000100100110
000000100100000000100100101
000010000010000010000010011




=== State Orbit 15 =====================
size : 6
repr state: 100100100000000100100100110
lex min decimal: 9798195115
states:
010010010000000010010010110
010010010000000010010010011
100100100000000100100100101
001001001000000001001001011
001001001000000001001001101
100100100000000100100100110




=== State Orbit 16 =====================
size : 6
repr state: 100100100000100100100100110
lex min decimal: 9800292267
states:
001001001000001001001001011
010010010000010010010010110
001001001000001001001001101
100100100000100100100100101
100100100000100100100100110
010010010000010010010010011




=== State Orbit 17 =====================
size : 18
repr state: 100000000000000100100010110
lex min decimal: 134780843
states:
000000001000000100001001101
010000000000000010010100110
100000000000000100100001101
000100000000000100010100110
000010000000000010100010110
001000000000000001001010011
010000000000000010010001011
000001000000000001100001101
000001000000000001010001011
100000000000000100100010110
000000010000000100010010110
000000010000000001010010011
000000001000000010001001011
001000000000000001001100101
000000100000000010100100110
000000100000000001100100101
000100000000000100001100101
000010000000000010001010011




=== State Orbit 18 =====================
size : 18
repr state: 100000000000100100100010110
lex min decimal: 136877995
states:
000000100000100010100100110
000000010000010100010010110
000000100000100001100100101
010000000000010010010100110
000000001000001010001001011
000100000000100100001100101
100000000000100100100001101
000010000000010010100010110
000001000000001001100001101
000001000000001001010001011
000000010000010001010010011
010000000000010010010001011
000100000000100100010100110
000000001000001100001001101
001000000000001001001100101
100000000000100100100010110
000010000000010010001010011
001000000000001001001010011




=== State Orbit 19 =====================
size : 18
repr state: 100000000001100100100000110
lex min decimal: 203462571
states:
100000000001100100100000110
000100000010100100000100110
000010000010010010000010011
100000000001100100100000101
000010000010010010000010110
000000100100100000100100101
000100000010100100000100101
001000000001001001001000101
000000100100100000100100110
000000001100001000001001101
000001000010001001000001011
001000000001001001001000011
000000001100001000001001011
000000010100010000010010011
010000000001010010010000011
000000010100010000010010110
000001000010001001000001101
010000000001010010010000110




=== State Orbit 20 =====================
size : 18
repr state: 000000000001000100010000110
lex min decimal: 17106859
states:
000000000100000000100001101
000000000001000100001000101
000000000010000100000001101
000000000010000010000001011
000000000001000010100000110
000000000100000000100010110
000000000001000100010000110
000000000100000000010001011
000000000100000000001100101
000000000100000000001010011
000000000010000010000100110
000000000001000001010000011
000000000100000000010100110
000000000010000100000010110
000000000001000001100000101
000000000010000001000100101
000000000010000001000010011
000000000001000010001000011




=== State Orbit 21 =====================
size : 9
repr state: 000000000011000100000000100
lex min decimal: 50594731
states:
000000000101000000100000100
000000000110000000000010010
000000000011000100000000100
000000000011000010000000010
000000000011000001000000001
000000000110000000000100100
000000000101000000010000010
000000000110000000000001001
000000000101000000001000001




=== State Orbit 22 =====================
size : 9
repr state: 100000000001000100100000100
lex min decimal: 201364395
states:
000001000010000001000001001
000000001100000000001001001
100000000001000100100000100
001000000001000001001000001
000100000010000100000100100
000000100100000000100100100
000000010100000000010010010
010000000001000010010000010
000010000010000010000010010




=== State Orbit 23 =====================
size : 3
repr state: 100100100000000100100100100
lex min decimal: 9798194091
states:
010010010000000010010010010
001001001000000001001001001
100100100000000100100100100




=== State Orbit 24 =====================
size : 3
repr state: 100100100000100100100100100
lex min decimal: 9800291243
states:
001001001000001001001001001
010010010000010010010010010
100100100000100100100100100




=== State Orbit 25 =====================
size : 9
repr state: 100000000001100100100000100
lex min decimal: 203461547
states:
100000000001100100100000100
000001000010001001000001001
000000010100010000010010010
000000001100001000001001001
000000100100100000100100100
001000000001001001001000001
000100000010100100000100100
000010000010010010000010010
010000000001010010010000010



[QRM NOTE]: Time elapsed since start: 7.703 seconds

[QRM NOTE]: Time elapsed since last: 0.397 seconds

[QRM NOTE]: Peak memory: 1302406 bytes


======================================

	Reduce Equivalent Atoms

======================================

[FW NOTE]: equivalent atoms

[FW NOTE]: complement atoms

[FW NOTE]: remove_atom_ids: set()

[QRM NOTE]: Time elapsed since start: 7.714 seconds

[QRM NOTE]: Time elapsed since last: 0.010 seconds

[QRM NOTE]: Peak memory: 334382 bytes


====================================================================================================================

	[PRIME]: Prime Orbit Generatation on [ivybench/sym_quorum/ivy/simple-election: acceptor=3,proposer=3]

====================================================================================================================


===============================================================================================================

	[PRIME RESULT]: Prime Orbits on [ivybench/sym_quorum/ivy/simple-election: acceptor=3,proposer=3]

===============================================================================================================


=== Prime Orbit 0 =====================
size : 9
num_suborbits: 1
0 (*) : ---------------------1-1---
0     : ['promise(acceptor2,proposer0)', 'promise(acceptor2,proposer2)']
1     : ---------------------11----
1     : ['promise(acceptor2,proposer0)', 'promise(acceptor2,proposer1)']
2     : ----------------------11---
2     : ['promise(acceptor2,proposer1)', 'promise(acceptor2,proposer2)']
3     : ------------------1-1------
3     : ['promise(acceptor1,proposer0)', 'promise(acceptor1,proposer2)']
4     : ------------------11-------
4     : ['promise(acceptor1,proposer0)', 'promise(acceptor1,proposer1)']
5     : -------------------11------
5     : ['promise(acceptor1,proposer1)', 'promise(acceptor1,proposer2)']
6     : ---------------1-1---------
6     : ['promise(acceptor0,proposer0)', 'promise(acceptor0,proposer2)']
7     : ---------------11----------
7     : ['promise(acceptor0,proposer0)', 'promise(acceptor0,proposer1)']
8     : ----------------11---------
8     : ['promise(acceptor0,proposer1)', 'promise(acceptor0,proposer2)']
num_forall :   0
num_exists :   0
num_literals : 0
quantified form : None
qcost : 0


=== Prime Orbit 1 =====================
size : 36
num_suborbits: 1
9 (*) : ----1----------------1-----
9     : ['chosenAt(quorum__acceptor0_acceptor2,proposer1)', 'promise(acceptor2,proposer0)']
10     : -----1---------------1-----
10     : ['chosenAt(quorum__acceptor0_acceptor2,proposer2)', 'promise(acceptor2,proposer0)']
11     : ---1------------------1----
11     : ['chosenAt(quorum__acceptor0_acceptor2,proposer0)', 'promise(acceptor2,proposer1)']
12     : -----1----------------1----
12     : ['chosenAt(quorum__acceptor0_acceptor2,proposer2)', 'promise(acceptor2,proposer1)']
13     : ---1-------------------1---
13     : ['chosenAt(quorum__acceptor0_acceptor2,proposer0)', 'promise(acceptor2,proposer2)']
14     : ----1------------------1---
14     : ['chosenAt(quorum__acceptor0_acceptor2,proposer1)', 'promise(acceptor2,proposer2)']
15     : -1----------------1--------
15     : ['chosenAt(quorum__acceptor0_acceptor1,proposer1)', 'promise(acceptor1,proposer0)']
16     : --1---------------1--------
16     : ['chosenAt(quorum__acceptor0_acceptor1,proposer2)', 'promise(acceptor1,proposer0)']
17     : 1------------------1-------
17     : ['chosenAt(quorum__acceptor0_acceptor1,proposer0)', 'promise(acceptor1,proposer1)']
18     : --1----------------1-------
18     : ['chosenAt(quorum__acceptor0_acceptor1,proposer2)', 'promise(acceptor1,proposer1)']
19     : 1-------------------1------
19     : ['chosenAt(quorum__acceptor0_acceptor1,proposer0)', 'promise(acceptor1,proposer2)']
20     : -1------------------1------
20     : ['chosenAt(quorum__acceptor0_acceptor1,proposer1)', 'promise(acceptor1,proposer2)']
21     : -------1-------------1-----
21     : ['chosenAt(quorum__acceptor1_acceptor2,proposer1)', 'promise(acceptor2,proposer0)']
22     : --------1------------1-----
22     : ['chosenAt(quorum__acceptor1_acceptor2,proposer2)', 'promise(acceptor2,proposer0)']
23     : ------1---------------1----
23     : ['chosenAt(quorum__acceptor1_acceptor2,proposer0)', 'promise(acceptor2,proposer1)']
24     : --------1-------------1----
24     : ['chosenAt(quorum__acceptor1_acceptor2,proposer2)', 'promise(acceptor2,proposer1)']
25     : ------1----------------1---
25     : ['chosenAt(quorum__acceptor1_acceptor2,proposer0)', 'promise(acceptor2,proposer2)']
26     : -------1---------------1---
26     : ['chosenAt(quorum__acceptor1_acceptor2,proposer1)', 'promise(acceptor2,proposer2)']
27     : -1-------------1-----------
27     : ['chosenAt(quorum__acceptor0_acceptor1,proposer1)', 'promise(acceptor0,proposer0)']
28     : --1------------1-----------
28     : ['chosenAt(quorum__acceptor0_acceptor1,proposer2)', 'promise(acceptor0,proposer0)']
29     : 1---------------1----------
29     : ['chosenAt(quorum__acceptor0_acceptor1,proposer0)', 'promise(acceptor0,proposer1)']
30     : --1-------------1----------
30     : ['chosenAt(quorum__acceptor0_acceptor1,proposer2)', 'promise(acceptor0,proposer1)']
31     : 1----------------1---------
31     : ['chosenAt(quorum__acceptor0_acceptor1,proposer0)', 'promise(acceptor0,proposer2)']
32     : -1---------------1---------
32     : ['chosenAt(quorum__acceptor0_acceptor1,proposer1)', 'promise(acceptor0,proposer2)']
33     : -------1----------1--------
33     : ['chosenAt(quorum__acceptor1_acceptor2,proposer1)', 'promise(acceptor1,proposer0)']
34     : --------1---------1--------
34     : ['chosenAt(quorum__acceptor1_acceptor2,proposer2)', 'promise(acceptor1,proposer0)']
35     : ------1------------1-------
35     : ['chosenAt(quorum__acceptor1_acceptor2,proposer0)', 'promise(acceptor1,proposer1)']
36     : --------1----------1-------
36     : ['chosenAt(quorum__acceptor1_acceptor2,proposer2)', 'promise(acceptor1,proposer1)']
37     : ------1-------------1------
37     : ['chosenAt(quorum__acceptor1_acceptor2,proposer0)', 'promise(acceptor1,proposer2)']
38     : -------1------------1------
38     : ['chosenAt(quorum__acceptor1_acceptor2,proposer1)', 'promise(acceptor1,proposer2)']
39     : ----1----------1-----------
39     : ['chosenAt(quorum__acceptor0_acceptor2,proposer1)', 'promise(acceptor0,proposer0)']
40     : -----1---------1-----------
40     : ['chosenAt(quorum__acceptor0_acceptor2,proposer2)', 'promise(acceptor0,proposer0)']
41     : ---1------------1----------
41     : ['chosenAt(quorum__acceptor0_acceptor2,proposer0)', 'promise(acceptor0,proposer1)']
42     : -----1----------1----------
42     : ['chosenAt(quorum__acceptor0_acceptor2,proposer2)', 'promise(acceptor0,proposer1)']
43     : ---1-------------1---------
43     : ['chosenAt(quorum__acceptor0_acceptor2,proposer0)', 'promise(acceptor0,proposer2)']
44     : ----1------------1---------
44     : ['chosenAt(quorum__acceptor0_acceptor2,proposer1)', 'promise(acceptor0,proposer2)']
num_forall :   0
num_exists :   0
num_literals : 0
quantified form : None
qcost : 0


=== Prime Orbit 2 =====================
size : 9
num_suborbits: 1
45 (*) : -----------1---------1-----
45     : ['didNotPromise(acceptor2)', 'promise(acceptor2,proposer0)']
46     : -----------1----------1----
46     : ['didNotPromise(acceptor2)', 'promise(acceptor2,proposer1)']
47     : -----------1-----------1---
47     : ['didNotPromise(acceptor2)', 'promise(acceptor2,proposer2)']
48     : ----------1-------1--------
48     : ['didNotPromise(acceptor1)', 'promise(acceptor1,proposer0)']
49     : ----------1--------1-------
49     : ['didNotPromise(acceptor1)', 'promise(acceptor1,proposer1)']
50     : ----------1---------1------
50     : ['didNotPromise(acceptor1)', 'promise(acceptor1,proposer2)']
51     : ---------1-----1-----------
51     : ['didNotPromise(acceptor0)', 'promise(acceptor0,proposer0)']
52     : ---------1------1----------
52     : ['didNotPromise(acceptor0)', 'promise(acceptor0,proposer1)']
53     : ---------1-------1---------
53     : ['didNotPromise(acceptor0)', 'promise(acceptor0,proposer2)']
num_forall :   0
num_exists :   0
num_literals : 0
quantified form : None
qcost : 0


=== Prime Orbit 3 =====================
size : 9
num_suborbits: 1
54 (*) : ---------------------1--0--
54     : ['promise(acceptor2,proposer0)', '~start(proposer0)']
55     : ----------------------1--0-
55     : ['promise(acceptor2,proposer1)', '~start(proposer1)']
56     : -----------------------1--0
56     : ['promise(acceptor2,proposer2)', '~start(proposer2)']
57     : ------------------1-----0--
57     : ['promise(acceptor1,proposer0)', '~start(proposer0)']
58     : -------------------1-----0-
58     : ['promise(acceptor1,proposer1)', '~start(proposer1)']
59     : --------------------1-----0
59     : ['promise(acceptor1,proposer2)', '~start(proposer2)']
60     : ---------------1--------0--
60     : ['promise(acceptor0,proposer0)', '~start(proposer0)']
61     : ----------------1--------0-
61     : ['promise(acceptor0,proposer1)', '~start(proposer1)']
62     : -----------------1--------0
62     : ['promise(acceptor0,proposer2)', '~start(proposer2)']
num_forall :   0
num_exists :   0
num_literals : 0
quantified form : None
qcost : 0


=== Prime Orbit 4 =====================
size : 18
num_suborbits: 1
63 (*) : --------1--1---------------
63     : ['chosenAt(quorum__acceptor1_acceptor2,proposer2)', 'didNotPromise(acceptor2)']
64     : -------1---1---------------
64     : ['chosenAt(quorum__acceptor1_acceptor2,proposer1)', 'didNotPromise(acceptor2)']
65     : ------1----1---------------
65     : ['chosenAt(quorum__acceptor1_acceptor2,proposer0)', 'didNotPromise(acceptor2)']
66     : --------1-1----------------
66     : ['chosenAt(quorum__acceptor1_acceptor2,proposer2)', 'didNotPromise(acceptor1)']
67     : -------1--1----------------
67     : ['chosenAt(quorum__acceptor1_acceptor2,proposer1)', 'didNotPromise(acceptor1)']
68     : ------1---1----------------
68     : ['chosenAt(quorum__acceptor1_acceptor2,proposer0)', 'didNotPromise(acceptor1)']
69     : -----1-----1---------------
69     : ['chosenAt(quorum__acceptor0_acceptor2,proposer2)', 'didNotPromise(acceptor2)']
70     : ----1------1---------------
70     : ['chosenAt(quorum__acceptor0_acceptor2,proposer1)', 'didNotPromise(acceptor2)']
71     : ---1-------1---------------
71     : ['chosenAt(quorum__acceptor0_acceptor2,proposer0)', 'didNotPromise(acceptor2)']
72     : -----1---1-----------------
72     : ['chosenAt(quorum__acceptor0_acceptor2,proposer2)', 'didNotPromise(acceptor0)']
73     : ----1----1-----------------
73     : ['chosenAt(quorum__acceptor0_acceptor2,proposer1)', 'didNotPromise(acceptor0)']
74     : ---1-----1-----------------
74     : ['chosenAt(quorum__acceptor0_acceptor2,proposer0)', 'didNotPromise(acceptor0)']
75     : --1-------1----------------
75     : ['chosenAt(quorum__acceptor0_acceptor1,proposer2)', 'didNotPromise(acceptor1)']
76     : -1--------1----------------
76     : ['chosenAt(quorum__acceptor0_acceptor1,proposer1)', 'didNotPromise(acceptor1)']
77     : 1---------1----------------
77     : ['chosenAt(quorum__acceptor0_acceptor1,proposer0)', 'didNotPromise(acceptor1)']
78     : --1------1-----------------
78     : ['chosenAt(quorum__acceptor0_acceptor1,proposer2)', 'didNotPromise(acceptor0)']
79     : -1-------1-----------------
79     : ['chosenAt(quorum__acceptor0_acceptor1,proposer1)', 'didNotPromise(acceptor0)']
80     : 1--------1-----------------
80     : ['chosenAt(quorum__acceptor0_acceptor1,proposer0)', 'didNotPromise(acceptor0)']
num_forall :   0
num_exists :   0
num_literals : 0
quantified form : None
qcost : 0


=== Prime Orbit 5 =====================
size : 18
num_suborbits: 1
81 (*) : --------1----1-------------
81     : ['chosenAt(quorum__acceptor1_acceptor2,proposer2)', 'leader(proposer1)']
82     : -------1------1------------
82     : ['chosenAt(quorum__acceptor1_acceptor2,proposer1)', 'leader(proposer2)']
83     : --------1---1--------------
83     : ['chosenAt(quorum__acceptor1_acceptor2,proposer2)', 'leader(proposer0)']
84     : ------1-------1------------
84     : ['chosenAt(quorum__acceptor1_acceptor2,proposer0)', 'leader(proposer2)']
85     : -------1----1--------------
85     : ['chosenAt(quorum__acceptor1_acceptor2,proposer1)', 'leader(proposer0)']
86     : ------1------1-------------
86     : ['chosenAt(quorum__acceptor1_acceptor2,proposer0)', 'leader(proposer1)']
87     : -----1-------1-------------
87     : ['chosenAt(quorum__acceptor0_acceptor2,proposer2)', 'leader(proposer1)']
88     : ----1---------1------------
88     : ['chosenAt(quorum__acceptor0_acceptor2,proposer1)', 'leader(proposer2)']
89     : -----1------1--------------
89     : ['chosenAt(quorum__acceptor0_acceptor2,proposer2)', 'leader(proposer0)']
90     : ---1----------1------------
90     : ['chosenAt(quorum__acceptor0_acceptor2,proposer0)', 'leader(proposer2)']
91     : ----1-------1--------------
91     : ['chosenAt(quorum__acceptor0_acceptor2,proposer1)', 'leader(proposer0)']
92     : ---1---------1-------------
92     : ['chosenAt(quorum__acceptor0_acceptor2,proposer0)', 'leader(proposer1)']
93     : --1----------1-------------
93     : ['chosenAt(quorum__acceptor0_acceptor1,proposer2)', 'leader(proposer1)']
94     : -1------------1------------
94     : ['chosenAt(quorum__acceptor0_acceptor1,proposer1)', 'leader(proposer2)']
95     : --1---------1--------------
95     : ['chosenAt(quorum__acceptor0_acceptor1,proposer2)', 'leader(proposer0)']
96     : 1-------------1------------
96     : ['chosenAt(quorum__acceptor0_acceptor1,proposer0)', 'leader(proposer2)']
97     : -1----------1--------------
97     : ['chosenAt(quorum__acceptor0_acceptor1,proposer1)', 'leader(proposer0)']
98     : 1------------1-------------
98     : ['chosenAt(quorum__acceptor0_acceptor1,proposer0)', 'leader(proposer1)']
num_forall :   0
num_exists :   0
num_literals : 0
quantified form : None
qcost : 0


=== Prime Orbit 6 =====================
size : 18
num_suborbits: 1
99 (*) : --------1--------------0---
99     : ['chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~promise(acceptor2,proposer2)']
100     : -------1--------------0----
100     : ['chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~promise(acceptor2,proposer1)']
101     : ------1--------------0-----
101     : ['chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~promise(acceptor2,proposer0)']
102     : --------1-----------0------
102     : ['chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~promise(acceptor1,proposer2)']
103     : -------1-----------0-------
103     : ['chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~promise(acceptor1,proposer1)']
104     : ------1-----------0--------
104     : ['chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~promise(acceptor1,proposer0)']
105     : -----1-----------------0---
105     : ['chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~promise(acceptor2,proposer2)']
106     : ----1-----------------0----
106     : ['chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~promise(acceptor2,proposer1)']
107     : ---1-----------------0-----
107     : ['chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~promise(acceptor2,proposer0)']
108     : -----1-----------0---------
108     : ['chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~promise(acceptor0,proposer2)']
109     : ----1-----------0----------
109     : ['chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~promise(acceptor0,proposer1)']
110     : ---1-----------0-----------
110     : ['chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~promise(acceptor0,proposer0)']
111     : --1-----------------0------
111     : ['chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~promise(acceptor1,proposer2)']
112     : -1-----------------0-------
112     : ['chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~promise(acceptor1,proposer1)']
113     : 1-----------------0--------
113     : ['chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~promise(acceptor1,proposer0)']
114     : --1--------------0---------
114     : ['chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~promise(acceptor0,proposer2)']
115     : -1--------------0----------
115     : ['chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~promise(acceptor0,proposer1)']
116     : 1--------------0-----------
116     : ['chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~promise(acceptor0,proposer0)']
num_forall :   0
num_exists :   0
num_literals : 0
quantified form : None
qcost : 0


=== Prime Orbit 7 =====================
size : 27
num_suborbits: 2
117 (*) : ---1----1------------------
117     : ['chosenAt(quorum__acceptor0_acceptor2,proposer0)', 'chosenAt(quorum__acceptor1_acceptor2,proposer2)']
118     : ---1---1-------------------
118     : ['chosenAt(quorum__acceptor0_acceptor2,proposer0)', 'chosenAt(quorum__acceptor1_acceptor2,proposer1)']
119     : ----1---1------------------
119     : ['chosenAt(quorum__acceptor0_acceptor2,proposer1)', 'chosenAt(quorum__acceptor1_acceptor2,proposer2)']
120     : ----1-1--------------------
120     : ['chosenAt(quorum__acceptor0_acceptor2,proposer1)', 'chosenAt(quorum__acceptor1_acceptor2,proposer0)']
121     : -----1-1-------------------
121     : ['chosenAt(quorum__acceptor0_acceptor2,proposer2)', 'chosenAt(quorum__acceptor1_acceptor2,proposer1)']
122     : -----11--------------------
122     : ['chosenAt(quorum__acceptor0_acceptor2,proposer2)', 'chosenAt(quorum__acceptor1_acceptor2,proposer0)']
123     : 1-------1------------------
123     : ['chosenAt(quorum__acceptor0_acceptor1,proposer0)', 'chosenAt(quorum__acceptor1_acceptor2,proposer2)']
124     : 1------1-------------------
124     : ['chosenAt(quorum__acceptor0_acceptor1,proposer0)', 'chosenAt(quorum__acceptor1_acceptor2,proposer1)']
125     : -1------1------------------
125     : ['chosenAt(quorum__acceptor0_acceptor1,proposer1)', 'chosenAt(quorum__acceptor1_acceptor2,proposer2)']
126     : -1----1--------------------
126     : ['chosenAt(quorum__acceptor0_acceptor1,proposer1)', 'chosenAt(quorum__acceptor1_acceptor2,proposer0)']
127     : --1----1-------------------
127     : ['chosenAt(quorum__acceptor0_acceptor1,proposer2)', 'chosenAt(quorum__acceptor1_acceptor2,proposer1)']
128     : --1---1--------------------
128     : ['chosenAt(quorum__acceptor0_acceptor1,proposer2)', 'chosenAt(quorum__acceptor1_acceptor2,proposer0)']
129     : 1----1---------------------
129     : ['chosenAt(quorum__acceptor0_acceptor1,proposer0)', 'chosenAt(quorum__acceptor0_acceptor2,proposer2)']
130     : 1---1----------------------
130     : ['chosenAt(quorum__acceptor0_acceptor1,proposer0)', 'chosenAt(quorum__acceptor0_acceptor2,proposer1)']
131     : -1---1---------------------
131     : ['chosenAt(quorum__acceptor0_acceptor1,proposer1)', 'chosenAt(quorum__acceptor0_acceptor2,proposer2)']
132     : -1-1-----------------------
132     : ['chosenAt(quorum__acceptor0_acceptor1,proposer1)', 'chosenAt(quorum__acceptor0_acceptor2,proposer0)']
133     : --1-1----------------------
133     : ['chosenAt(quorum__acceptor0_acceptor1,proposer2)', 'chosenAt(quorum__acceptor0_acceptor2,proposer1)']
134     : --11-----------------------
134     : ['chosenAt(quorum__acceptor0_acceptor1,proposer2)', 'chosenAt(quorum__acceptor0_acceptor2,proposer0)']
144 (*) : -------11------------------
144     : ['chosenAt(quorum__acceptor1_acceptor2,proposer1)', 'chosenAt(quorum__acceptor1_acceptor2,proposer2)']
145     : ------1-1------------------
145     : ['chosenAt(quorum__acceptor1_acceptor2,proposer0)', 'chosenAt(quorum__acceptor1_acceptor2,proposer2)']
146     : ------11-------------------
146     : ['chosenAt(quorum__acceptor1_acceptor2,proposer0)', 'chosenAt(quorum__acceptor1_acceptor2,proposer1)']
147     : ----11---------------------
147     : ['chosenAt(quorum__acceptor0_acceptor2,proposer1)', 'chosenAt(quorum__acceptor0_acceptor2,proposer2)']
148     : ---1-1---------------------
148     : ['chosenAt(quorum__acceptor0_acceptor2,proposer0)', 'chosenAt(quorum__acceptor0_acceptor2,proposer2)']
149     : ---11----------------------
149     : ['chosenAt(quorum__acceptor0_acceptor2,proposer0)', 'chosenAt(quorum__acceptor0_acceptor2,proposer1)']
150     : -11------------------------
150     : ['chosenAt(quorum__acceptor0_acceptor1,proposer1)', 'chosenAt(quorum__acceptor0_acceptor1,proposer2)']
151     : 1-1------------------------
151     : ['chosenAt(quorum__acceptor0_acceptor1,proposer0)', 'chosenAt(quorum__acceptor0_acceptor1,proposer2)']
152     : 11-------------------------
152     : ['chosenAt(quorum__acceptor0_acceptor1,proposer0)', 'chosenAt(quorum__acceptor0_acceptor1,proposer1)']
num_forall :   0
num_exists :   0
num_literals : 0
quantified form : None
qcost : 0


=== Prime Orbit 8 =====================
size : 9
num_suborbits: 1
135 (*) : --------1-----------------0
135     : ['chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~start(proposer2)']
136     : -------1-----------------0-
136     : ['chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~start(proposer1)']
137     : ------1-----------------0--
137     : ['chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~start(proposer0)']
138     : -----1--------------------0
138     : ['chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~start(proposer2)']
139     : ----1--------------------0-
139     : ['chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~start(proposer1)']
140     : ---1--------------------0--
140     : ['chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~start(proposer0)']
141     : --1-----------------------0
141     : ['chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~start(proposer2)']
142     : -1-----------------------0-
142     : ['chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~start(proposer1)']
143     : 1-----------------------0--
143     : ['chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~start(proposer0)']
num_forall :   0
num_exists :   0
num_literals : 0
quantified form : None
qcost : 0


=== Prime Orbit 9 =====================
size : 3
num_suborbits: 1
153 (*) : --------------1-----------0
153     : ['leader(proposer2)', '~start(proposer2)']
154     : -------------1-----------0-
154     : ['leader(proposer1)', '~start(proposer1)']
155     : ------------1-----------0--
155     : ['leader(proposer0)', '~start(proposer0)']
num_forall :   0
num_exists :   0
num_literals : 0
quantified form : None
qcost : 0


=== Prime Orbit 10 =====================
size : 3
num_suborbits: 1
156 (*) : -------------11------------
156     : ['leader(proposer1)', 'leader(proposer2)']
157     : ------------1-1------------
157     : ['leader(proposer0)', 'leader(proposer2)']
158     : ------------11-------------
158     : ['leader(proposer0)', 'leader(proposer1)']
num_forall :   0
num_exists :   0
num_literals : 0
quantified form : None
qcost : 0


=== Prime Orbit 11 =====================
size : 18
num_suborbits: 1
159 (*) : 1--0-----------------1-----
159     : ['chosenAt(quorum__acceptor0_acceptor1,proposer0)', 'promise(acceptor2,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)']
160     : -1--0-----------------1----
160     : ['chosenAt(quorum__acceptor0_acceptor1,proposer1)', 'promise(acceptor2,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)']
161     : --1--0-----------------1---
161     : ['chosenAt(quorum__acceptor0_acceptor1,proposer2)', 'promise(acceptor2,proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)']
162     : 0--1--------------1--------
162     : ['chosenAt(quorum__acceptor0_acceptor2,proposer0)', 'promise(acceptor1,proposer0)', '~chosenAt(quorum__acceptor0_acceptor1,proposer0)']
163     : -0--1--------------1-------
163     : ['chosenAt(quorum__acceptor0_acceptor2,proposer1)', 'promise(acceptor1,proposer1)', '~chosenAt(quorum__acceptor0_acceptor1,proposer1)']
164     : --0--1--------------1------
164     : ['chosenAt(quorum__acceptor0_acceptor2,proposer2)', 'promise(acceptor1,proposer2)', '~chosenAt(quorum__acceptor0_acceptor1,proposer2)']
165     : 1-----0--------------1-----
165     : ['chosenAt(quorum__acceptor0_acceptor1,proposer0)', 'promise(acceptor2,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)']
166     : -1-----0--------------1----
166     : ['chosenAt(quorum__acceptor0_acceptor1,proposer1)', 'promise(acceptor2,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)']
167     : --1-----0--------------1---
167     : ['chosenAt(quorum__acceptor0_acceptor1,proposer2)', 'promise(acceptor2,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)']
168     : 0-----1--------1-----------
168     : ['chosenAt(quorum__acceptor1_acceptor2,proposer0)', 'promise(acceptor0,proposer0)', '~chosenAt(quorum__acceptor0_acceptor1,proposer0)']
169     : -0-----1--------1----------
169     : ['chosenAt(quorum__acceptor1_acceptor2,proposer1)', 'promise(acceptor0,proposer1)', '~chosenAt(quorum__acceptor0_acceptor1,proposer1)']
170     : --0-----1--------1---------
170     : ['chosenAt(quorum__acceptor1_acceptor2,proposer2)', 'promise(acceptor0,proposer2)', '~chosenAt(quorum__acceptor0_acceptor1,proposer2)']
171     : ---1--0-----------1--------
171     : ['chosenAt(quorum__acceptor0_acceptor2,proposer0)', 'promise(acceptor1,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)']
172     : ----1--0-----------1-------
172     : ['chosenAt(quorum__acceptor0_acceptor2,proposer1)', 'promise(acceptor1,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)']
173     : -----1--0-----------1------
173     : ['chosenAt(quorum__acceptor0_acceptor2,proposer2)', 'promise(acceptor1,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)']
174     : ---0--1--------1-----------
174     : ['chosenAt(quorum__acceptor1_acceptor2,proposer0)', 'promise(acceptor0,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)']
175     : ----0--1--------1----------
175     : ['chosenAt(quorum__acceptor1_acceptor2,proposer1)', 'promise(acceptor0,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)']
176     : -----0--1--------1---------
176     : ['chosenAt(quorum__acceptor1_acceptor2,proposer2)', 'promise(acceptor0,proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)']
num_forall :   0
num_exists :   0
num_literals : 0
quantified form : None
qcost : 0


=== Prime Orbit 12 =====================
size : 9
num_suborbits: 1
177 (*) : 1--0--1--------------------
177     : ['chosenAt(quorum__acceptor0_acceptor1,proposer0)', 'chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)']
178     : -1--0--1-------------------
178     : ['chosenAt(quorum__acceptor0_acceptor1,proposer1)', 'chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)']
179     : --1--0--1------------------
179     : ['chosenAt(quorum__acceptor0_acceptor1,proposer2)', 'chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)']
180     : 0--1--1--------------------
180     : ['chosenAt(quorum__acceptor0_acceptor2,proposer0)', 'chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~chosenAt(quorum__acceptor0_acceptor1,proposer0)']
181     : -0--1--1-------------------
181     : ['chosenAt(quorum__acceptor0_acceptor2,proposer1)', 'chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~chosenAt(quorum__acceptor0_acceptor1,proposer1)']
182     : --0--1--1------------------
182     : ['chosenAt(quorum__acceptor0_acceptor2,proposer2)', 'chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~chosenAt(quorum__acceptor0_acceptor1,proposer2)']
183     : 1--1--0--------------------
183     : ['chosenAt(quorum__acceptor0_acceptor1,proposer0)', 'chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)']
184     : -1--1--0-------------------
184     : ['chosenAt(quorum__acceptor0_acceptor1,proposer1)', 'chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)']
185     : --1--1--0------------------
185     : ['chosenAt(quorum__acceptor0_acceptor1,proposer2)', 'chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)']
num_forall :   0
num_exists :   0
num_literals : 0
quantified form : None
qcost : 0


=== Prime Orbit 13 =====================
size : 18
num_suborbits: 1
186 (*) : 0-----------1---------1----
186     : ['leader(proposer0)', 'promise(acceptor2,proposer1)', '~chosenAt(quorum__acceptor0_acceptor1,proposer0)']
187     : 0-----------1----------1---
187     : ['leader(proposer0)', 'promise(acceptor2,proposer2)', '~chosenAt(quorum__acceptor0_acceptor1,proposer0)']
188     : -0-----------1-------1-----
188     : ['leader(proposer1)', 'promise(acceptor2,proposer0)', '~chosenAt(quorum__acceptor0_acceptor1,proposer1)']
189     : -0-----------1---------1---
189     : ['leader(proposer1)', 'promise(acceptor2,proposer2)', '~chosenAt(quorum__acceptor0_acceptor1,proposer1)']
190     : --0-----------1------1-----
190     : ['leader(proposer2)', 'promise(acceptor2,proposer0)', '~chosenAt(quorum__acceptor0_acceptor1,proposer2)']
191     : --0-----------1-------1----
191     : ['leader(proposer2)', 'promise(acceptor2,proposer1)', '~chosenAt(quorum__acceptor0_acceptor1,proposer2)']
192     : ---0--------1------1-------
192     : ['leader(proposer0)', 'promise(acceptor1,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)']
193     : ---0--------1-------1------
193     : ['leader(proposer0)', 'promise(acceptor1,proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)']
194     : ----0--------1----1--------
194     : ['leader(proposer1)', 'promise(acceptor1,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)']
195     : ----0--------1------1------
195     : ['leader(proposer1)', 'promise(acceptor1,proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)']
196     : -----0--------1---1--------
196     : ['leader(proposer2)', 'promise(acceptor1,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)']
197     : -----0--------1----1-------
197     : ['leader(proposer2)', 'promise(acceptor1,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)']
198     : ------0-----1---1----------
198     : ['leader(proposer0)', 'promise(acceptor0,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)']
199     : ------0-----1----1---------
199     : ['leader(proposer0)', 'promise(acceptor0,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)']
200     : -------0-----1-1-----------
200     : ['leader(proposer1)', 'promise(acceptor0,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)']
201     : -------0-----1---1---------
201     : ['leader(proposer1)', 'promise(acceptor0,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)']
202     : --------0-----11-----------
202     : ['leader(proposer2)', 'promise(acceptor0,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)']
203     : --------0-----1-1----------
203     : ['leader(proposer2)', 'promise(acceptor0,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)']
num_forall :   0
num_exists :   0
num_literals : 0
quantified form : None
qcost : 0


=== Prime Orbit 14 =====================
size : 36
num_suborbits: 1
204 (*) : ------------1-----0---1----
204     : ['leader(proposer0)', 'promise(acceptor2,proposer1)', '~promise(acceptor1,proposer0)']
205     : ------------1-----0----1---
205     : ['leader(proposer0)', 'promise(acceptor2,proposer2)', '~promise(acceptor1,proposer0)']
206     : -------------1-----0-1-----
206     : ['leader(proposer1)', 'promise(acceptor2,proposer0)', '~promise(acceptor1,proposer1)']
207     : -------------1-----0---1---
207     : ['leader(proposer1)', 'promise(acceptor2,proposer2)', '~promise(acceptor1,proposer1)']
208     : --------------1-----01-----
208     : ['leader(proposer2)', 'promise(acceptor2,proposer0)', '~promise(acceptor1,proposer2)']
209     : --------------1-----0-1----
209     : ['leader(proposer2)', 'promise(acceptor2,proposer1)', '~promise(acceptor1,proposer2)']
210     : ------------1------1-0-----
210     : ['leader(proposer0)', 'promise(acceptor1,proposer1)', '~promise(acceptor2,proposer0)']
211     : ------------1-------10-----
211     : ['leader(proposer0)', 'promise(acceptor1,proposer2)', '~promise(acceptor2,proposer0)']
212     : -------------1----1---0----
212     : ['leader(proposer1)', 'promise(acceptor1,proposer0)', '~promise(acceptor2,proposer1)']
213     : -------------1------1-0----
213     : ['leader(proposer1)', 'promise(acceptor1,proposer2)', '~promise(acceptor2,proposer1)']
214     : --------------1---1----0---
214     : ['leader(proposer2)', 'promise(acceptor1,proposer0)', '~promise(acceptor2,proposer2)']
215     : --------------1----1---0---
215     : ['leader(proposer2)', 'promise(acceptor1,proposer1)', '~promise(acceptor2,proposer2)']
216     : ------------1--0------1----
216     : ['leader(proposer0)', 'promise(acceptor2,proposer1)', '~promise(acceptor0,proposer0)']
217     : ------------1--0-------1---
217     : ['leader(proposer0)', 'promise(acceptor2,proposer2)', '~promise(acceptor0,proposer0)']
218     : -------------1--0----1-----
218     : ['leader(proposer1)', 'promise(acceptor2,proposer0)', '~promise(acceptor0,proposer1)']
219     : -------------1--0------1---
219     : ['leader(proposer1)', 'promise(acceptor2,proposer2)', '~promise(acceptor0,proposer1)']
220     : --------------1--0---1-----
220     : ['leader(proposer2)', 'promise(acceptor2,proposer0)', '~promise(acceptor0,proposer2)']
221     : --------------1--0----1----
221     : ['leader(proposer2)', 'promise(acceptor2,proposer1)', '~promise(acceptor0,proposer2)']
222     : ------------1---1----0-----
222     : ['leader(proposer0)', 'promise(acceptor0,proposer1)', '~promise(acceptor2,proposer0)']
223     : ------------1----1---0-----
223     : ['leader(proposer0)', 'promise(acceptor0,proposer2)', '~promise(acceptor2,proposer0)']
224     : -------------1-1------0----
224     : ['leader(proposer1)', 'promise(acceptor0,proposer0)', '~promise(acceptor2,proposer1)']
225     : -------------1---1----0----
225     : ['leader(proposer1)', 'promise(acceptor0,proposer2)', '~promise(acceptor2,proposer1)']
226     : --------------11-------0---
226     : ['leader(proposer2)', 'promise(acceptor0,proposer0)', '~promise(acceptor2,proposer2)']
227     : --------------1-1------0---
227     : ['leader(proposer2)', 'promise(acceptor0,proposer1)', '~promise(acceptor2,proposer2)']
228     : ------------1--0---1-------
228     : ['leader(proposer0)', 'promise(acceptor1,proposer1)', '~promise(acceptor0,proposer0)']
229     : ------------1--0----1------
229     : ['leader(proposer0)', 'promise(acceptor1,proposer2)', '~promise(acceptor0,proposer0)']
230     : -------------1--0-1--------
230     : ['leader(proposer1)', 'promise(acceptor1,proposer0)', '~promise(acceptor0,proposer1)']
231     : -------------1--0---1------
231     : ['leader(proposer1)', 'promise(acceptor1,proposer2)', '~promise(acceptor0,proposer1)']
232     : --------------1--01--------
232     : ['leader(proposer2)', 'promise(acceptor1,proposer0)', '~promise(acceptor0,proposer2)']
233     : --------------1--0-1-------
233     : ['leader(proposer2)', 'promise(acceptor1,proposer1)', '~promise(acceptor0,proposer2)']
234     : ------------1---1-0--------
234     : ['leader(proposer0)', 'promise(acceptor0,proposer1)', '~promise(acceptor1,proposer0)']
235     : ------------1----10--------
235     : ['leader(proposer0)', 'promise(acceptor0,proposer2)', '~promise(acceptor1,proposer0)']
236     : -------------1-1---0-------
236     : ['leader(proposer1)', 'promise(acceptor0,proposer0)', '~promise(acceptor1,proposer1)']
237     : -------------1---1-0-------
237     : ['leader(proposer1)', 'promise(acceptor0,proposer2)', '~promise(acceptor1,proposer1)']
238     : --------------11----0------
238     : ['leader(proposer2)', 'promise(acceptor0,proposer0)', '~promise(acceptor1,proposer2)']
239     : --------------1-1---0------
239     : ['leader(proposer2)', 'promise(acceptor0,proposer1)', '~promise(acceptor1,proposer2)']
num_forall :   0
num_exists :   0
num_literals : 0
quantified form : None
qcost : 0


=== Prime Orbit 15 =====================
size : 36
num_suborbits: 2
240 (*) : ------------1-------1-1----
240     : ['leader(proposer0)', 'promise(acceptor1,proposer2)', 'promise(acceptor2,proposer1)']
241     : ------------1------1---1---
241     : ['leader(proposer0)', 'promise(acceptor1,proposer1)', 'promise(acceptor2,proposer2)']
242     : -------------1------11-----
242     : ['leader(proposer1)', 'promise(acceptor1,proposer2)', 'promise(acceptor2,proposer0)']
243     : -------------1----1----1---
243     : ['leader(proposer1)', 'promise(acceptor1,proposer0)', 'promise(acceptor2,proposer2)']
244     : --------------1----1-1-----
244     : ['leader(proposer2)', 'promise(acceptor1,proposer1)', 'promise(acceptor2,proposer0)']
245     : --------------1---1---1----
245     : ['leader(proposer2)', 'promise(acceptor1,proposer0)', 'promise(acceptor2,proposer1)']
246     : ------------1----1----1----
246     : ['leader(proposer0)', 'promise(acceptor0,proposer2)', 'promise(acceptor2,proposer1)']
247     : ------------1---1------1---
247     : ['leader(proposer0)', 'promise(acceptor0,proposer1)', 'promise(acceptor2,proposer2)']
248     : -------------1---1---1-----
248     : ['leader(proposer1)', 'promise(acceptor0,proposer2)', 'promise(acceptor2,proposer0)']
249     : -------------1-1-------1---
249     : ['leader(proposer1)', 'promise(acceptor0,proposer0)', 'promise(acceptor2,proposer2)']
250     : --------------1-1----1-----
250     : ['leader(proposer2)', 'promise(acceptor0,proposer1)', 'promise(acceptor2,proposer0)']
251     : --------------11------1----
251     : ['leader(proposer2)', 'promise(acceptor0,proposer0)', 'promise(acceptor2,proposer1)']
252     : ------------1----1-1-------
252     : ['leader(proposer0)', 'promise(acceptor0,proposer2)', 'promise(acceptor1,proposer1)']
253     : ------------1---1---1------
253     : ['leader(proposer0)', 'promise(acceptor0,proposer1)', 'promise(acceptor1,proposer2)']
254     : -------------1---11--------
254     : ['leader(proposer1)', 'promise(acceptor0,proposer2)', 'promise(acceptor1,proposer0)']
255     : -------------1-1----1------
255     : ['leader(proposer1)', 'promise(acceptor0,proposer0)', 'promise(acceptor1,proposer2)']
256     : --------------1-1-1--------
256     : ['leader(proposer2)', 'promise(acceptor0,proposer1)', 'promise(acceptor1,proposer0)']
257     : --------------11---1-------
257     : ['leader(proposer2)', 'promise(acceptor0,proposer0)', 'promise(acceptor1,proposer1)']
294 (*) : ------------1------1--1----
294     : ['leader(proposer0)', 'promise(acceptor1,proposer1)', 'promise(acceptor2,proposer1)']
295     : ------------1-------1--1---
295     : ['leader(proposer0)', 'promise(acceptor1,proposer2)', 'promise(acceptor2,proposer2)']
296     : -------------1----1--1-----
296     : ['leader(proposer1)', 'promise(acceptor1,proposer0)', 'promise(acceptor2,proposer0)']
297     : -------------1------1--1---
297     : ['leader(proposer1)', 'promise(acceptor1,proposer2)', 'promise(acceptor2,proposer2)']
298     : --------------1---1--1-----
298     : ['leader(proposer2)', 'promise(acceptor1,proposer0)', 'promise(acceptor2,proposer0)']
299     : --------------1----1--1----
299     : ['leader(proposer2)', 'promise(acceptor1,proposer1)', 'promise(acceptor2,proposer1)']
300     : ------------1---1-----1----
300     : ['leader(proposer0)', 'promise(acceptor0,proposer1)', 'promise(acceptor2,proposer1)']
301     : ------------1----1-----1---
301     : ['leader(proposer0)', 'promise(acceptor0,proposer2)', 'promise(acceptor2,proposer2)']
302     : -------------1-1-----1-----
302     : ['leader(proposer1)', 'promise(acceptor0,proposer0)', 'promise(acceptor2,proposer0)']
303     : -------------1---1-----1---
303     : ['leader(proposer1)', 'promise(acceptor0,proposer2)', 'promise(acceptor2,proposer2)']
304     : --------------11-----1-----
304     : ['leader(proposer2)', 'promise(acceptor0,proposer0)', 'promise(acceptor2,proposer0)']
305     : --------------1-1-----1----
305     : ['leader(proposer2)', 'promise(acceptor0,proposer1)', 'promise(acceptor2,proposer1)']
306     : ------------1---1--1-------
306     : ['leader(proposer0)', 'promise(acceptor0,proposer1)', 'promise(acceptor1,proposer1)']
307     : ------------1----1--1------
307     : ['leader(proposer0)', 'promise(acceptor0,proposer2)', 'promise(acceptor1,proposer2)']
308     : -------------1-1--1--------
308     : ['leader(proposer1)', 'promise(acceptor0,proposer0)', 'promise(acceptor1,proposer0)']
309     : -------------1---1--1------
309     : ['leader(proposer1)', 'promise(acceptor0,proposer2)', 'promise(acceptor1,proposer2)']
310     : --------------11--1--------
310     : ['leader(proposer2)', 'promise(acceptor0,proposer0)', 'promise(acceptor1,proposer0)']
311     : --------------1-1--1-------
311     : ['leader(proposer2)', 'promise(acceptor0,proposer1)', 'promise(acceptor1,proposer1)']
num_forall :   0
num_exists :   0
num_literals : 0
quantified form : None
qcost : 0


=== Prime Orbit 16 =====================
size : 36
num_suborbits: 1
258 (*) : ---------1----1-------1----
258     : ['didNotPromise(acceptor0)', 'leader(proposer2)', 'promise(acceptor2,proposer1)']
259     : ---------1---1---------1---
259     : ['didNotPromise(acceptor0)', 'leader(proposer1)', 'promise(acceptor2,proposer2)']
260     : ---------1----1------1-----
260     : ['didNotPromise(acceptor0)', 'leader(proposer2)', 'promise(acceptor2,proposer0)']
261     : ---------1--1----------1---
261     : ['didNotPromise(acceptor0)', 'leader(proposer0)', 'promise(acceptor2,proposer2)']
262     : ---------1---1-------1-----
262     : ['didNotPromise(acceptor0)', 'leader(proposer1)', 'promise(acceptor2,proposer0)']
263     : ---------1--1---------1----
263     : ['didNotPromise(acceptor0)', 'leader(proposer0)', 'promise(acceptor2,proposer1)']
264     : ---------1----1----1-------
264     : ['didNotPromise(acceptor0)', 'leader(proposer2)', 'promise(acceptor1,proposer1)']
265     : ---------1---1------1------
265     : ['didNotPromise(acceptor0)', 'leader(proposer1)', 'promise(acceptor1,proposer2)']
266     : ---------1----1---1--------
266     : ['didNotPromise(acceptor0)', 'leader(proposer2)', 'promise(acceptor1,proposer0)']
267     : ---------1--1-------1------
267     : ['didNotPromise(acceptor0)', 'leader(proposer0)', 'promise(acceptor1,proposer2)']
268     : ---------1---1----1--------
268     : ['didNotPromise(acceptor0)', 'leader(proposer1)', 'promise(acceptor1,proposer0)']
269     : ---------1--1------1-------
269     : ['didNotPromise(acceptor0)', 'leader(proposer0)', 'promise(acceptor1,proposer1)']
270     : ----------1---1-------1----
270     : ['didNotPromise(acceptor1)', 'leader(proposer2)', 'promise(acceptor2,proposer1)']
271     : ----------1--1---------1---
271     : ['didNotPromise(acceptor1)', 'leader(proposer1)', 'promise(acceptor2,proposer2)']
272     : ----------1---1------1-----
272     : ['didNotPromise(acceptor1)', 'leader(proposer2)', 'promise(acceptor2,proposer0)']
273     : ----------1-1----------1---
273     : ['didNotPromise(acceptor1)', 'leader(proposer0)', 'promise(acceptor2,proposer2)']
274     : ----------1--1-------1-----
274     : ['didNotPromise(acceptor1)', 'leader(proposer1)', 'promise(acceptor2,proposer0)']
275     : ----------1-1---------1----
275     : ['didNotPromise(acceptor1)', 'leader(proposer0)', 'promise(acceptor2,proposer1)']
276     : ----------1---1-1----------
276     : ['didNotPromise(acceptor1)', 'leader(proposer2)', 'promise(acceptor0,proposer1)']
277     : ----------1--1---1---------
277     : ['didNotPromise(acceptor1)', 'leader(proposer1)', 'promise(acceptor0,proposer2)']
278     : ----------1---11-----------
278     : ['didNotPromise(acceptor1)', 'leader(proposer2)', 'promise(acceptor0,proposer0)']
279     : ----------1-1----1---------
279     : ['didNotPromise(acceptor1)', 'leader(proposer0)', 'promise(acceptor0,proposer2)']
280     : ----------1--1-1-----------
280     : ['didNotPromise(acceptor1)', 'leader(proposer1)', 'promise(acceptor0,proposer0)']
281     : ----------1-1---1----------
281     : ['didNotPromise(acceptor1)', 'leader(proposer0)', 'promise(acceptor0,proposer1)']
282     : -----------1--1----1-------
282     : ['didNotPromise(acceptor2)', 'leader(proposer2)', 'promise(acceptor1,proposer1)']
283     : -----------1-1------1------
283     : ['didNotPromise(acceptor2)', 'leader(proposer1)', 'promise(acceptor1,proposer2)']
284     : -----------1--1---1--------
284     : ['didNotPromise(acceptor2)', 'leader(proposer2)', 'promise(acceptor1,proposer0)']
285     : -----------11-------1------
285     : ['didNotPromise(acceptor2)', 'leader(proposer0)', 'promise(acceptor1,proposer2)']
286     : -----------1-1----1--------
286     : ['didNotPromise(acceptor2)', 'leader(proposer1)', 'promise(acceptor1,proposer0)']
287     : -----------11------1-------
287     : ['didNotPromise(acceptor2)', 'leader(proposer0)', 'promise(acceptor1,proposer1)']
288     : -----------1--1-1----------
288     : ['didNotPromise(acceptor2)', 'leader(proposer2)', 'promise(acceptor0,proposer1)']
289     : -----------1-1---1---------
289     : ['didNotPromise(acceptor2)', 'leader(proposer1)', 'promise(acceptor0,proposer2)']
290     : -----------1--11-----------
290     : ['didNotPromise(acceptor2)', 'leader(proposer2)', 'promise(acceptor0,proposer0)']
291     : -----------11----1---------
291     : ['didNotPromise(acceptor2)', 'leader(proposer0)', 'promise(acceptor0,proposer2)']
292     : -----------1-1-1-----------
292     : ['didNotPromise(acceptor2)', 'leader(proposer1)', 'promise(acceptor0,proposer0)']
293     : -----------11---1----------
293     : ['didNotPromise(acceptor2)', 'leader(proposer0)', 'promise(acceptor0,proposer1)']
num_forall :   0
num_exists :   0
num_literals : 0
quantified form : None
qcost : 0


=== Prime Orbit 17 =====================
size : 9
num_suborbits: 1
312 (*) : -------0-----------1--1----
312     : ['promise(acceptor1,proposer1)', 'promise(acceptor2,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)']
313     : --------0-----------1--1---
313     : ['promise(acceptor1,proposer2)', 'promise(acceptor2,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)']
314     : ------0-----------1--1-----
314     : ['promise(acceptor1,proposer0)', 'promise(acceptor2,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)']
315     : ----0-----------1-----1----
315     : ['promise(acceptor0,proposer1)', 'promise(acceptor2,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)']
316     : -----0-----------1-----1---
316     : ['promise(acceptor0,proposer2)', 'promise(acceptor2,proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)']
317     : ---0-----------1-----1-----
317     : ['promise(acceptor0,proposer0)', 'promise(acceptor2,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)']
318     : -0--------------1--1-------
318     : ['promise(acceptor0,proposer1)', 'promise(acceptor1,proposer1)', '~chosenAt(quorum__acceptor0_acceptor1,proposer1)']
319     : --0--------------1--1------
319     : ['promise(acceptor0,proposer2)', 'promise(acceptor1,proposer2)', '~chosenAt(quorum__acceptor0_acceptor1,proposer2)']
320     : 0--------------1--1--------
320     : ['promise(acceptor0,proposer0)', 'promise(acceptor1,proposer0)', '~chosenAt(quorum__acceptor0_acceptor1,proposer0)']
num_forall :   0
num_exists :   0
num_literals : 0
quantified form : None
qcost : 0


=== Prime Orbit 18 =====================
size : 9
num_suborbits: 1
321 (*) : --------0-----1--0---------
321     : ['leader(proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~promise(acceptor0,proposer2)']
322     : -------0-----1--0----------
322     : ['leader(proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~promise(acceptor0,proposer1)']
323     : ------0-----1--0-----------
323     : ['leader(proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~promise(acceptor0,proposer0)']
324     : -----0--------1-----0------
324     : ['leader(proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~promise(acceptor1,proposer2)']
325     : ----0--------1-----0-------
325     : ['leader(proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~promise(acceptor1,proposer1)']
326     : ---0--------1-----0--------
326     : ['leader(proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~promise(acceptor1,proposer0)']
327     : --0-----------1--------0---
327     : ['leader(proposer2)', '~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~promise(acceptor2,proposer2)']
328     : -0-----------1--------0----
328     : ['leader(proposer1)', '~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~promise(acceptor2,proposer1)']
329     : 0-----------1--------0-----
329     : ['leader(proposer0)', '~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~promise(acceptor2,proposer0)']
num_forall :   0
num_exists :   0
num_literals : 0
quantified form : None
qcost : 0


=== Prime Orbit 19 =====================
size : 9
num_suborbits: 1
330 (*) : --------------1--0-----0---
330     : ['leader(proposer2)', '~promise(acceptor0,proposer2)', '~promise(acceptor2,proposer2)']
331     : -------------1--0-----0----
331     : ['leader(proposer1)', '~promise(acceptor0,proposer1)', '~promise(acceptor2,proposer1)']
332     : ------------1--0-----0-----
332     : ['leader(proposer0)', '~promise(acceptor0,proposer0)', '~promise(acceptor2,proposer0)']
333     : --------------1--0--0------
333     : ['leader(proposer2)', '~promise(acceptor0,proposer2)', '~promise(acceptor1,proposer2)']
334     : -------------1--0--0-------
334     : ['leader(proposer1)', '~promise(acceptor0,proposer1)', '~promise(acceptor1,proposer1)']
335     : ------------1--0--0--------
335     : ['leader(proposer0)', '~promise(acceptor0,proposer0)', '~promise(acceptor1,proposer0)']
336     : --------------1-----0--0---
336     : ['leader(proposer2)', '~promise(acceptor1,proposer2)', '~promise(acceptor2,proposer2)']
337     : -------------1-----0--0----
337     : ['leader(proposer1)', '~promise(acceptor1,proposer1)', '~promise(acceptor2,proposer1)']
338     : ------------1-----0--0-----
338     : ['leader(proposer0)', '~promise(acceptor1,proposer0)', '~promise(acceptor2,proposer0)']
num_forall :   0
num_exists :   0
num_literals : 0
quantified form : None
qcost : 0


=== Prime Orbit 20 =====================
size : 9
num_suborbits: 1
339 (*) : --0--------1--1------------
339     : ['didNotPromise(acceptor2)', 'leader(proposer2)', '~chosenAt(quorum__acceptor0_acceptor1,proposer2)']
340     : -0---------1-1-------------
340     : ['didNotPromise(acceptor2)', 'leader(proposer1)', '~chosenAt(quorum__acceptor0_acceptor1,proposer1)']
341     : 0----------11--------------
341     : ['didNotPromise(acceptor2)', 'leader(proposer0)', '~chosenAt(quorum__acceptor0_acceptor1,proposer0)']
342     : -----0----1---1------------
342     : ['didNotPromise(acceptor1)', 'leader(proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)']
343     : ----0-----1--1-------------
343     : ['didNotPromise(acceptor1)', 'leader(proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)']
344     : ---0------1-1--------------
344     : ['didNotPromise(acceptor1)', 'leader(proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)']
345     : --------01----1------------
345     : ['didNotPromise(acceptor0)', 'leader(proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)']
346     : -------0-1---1-------------
346     : ['didNotPromise(acceptor0)', 'leader(proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)']
347     : ------0--1--1--------------
347     : ['didNotPromise(acceptor0)', 'leader(proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)']
num_forall :   0
num_exists :   0
num_literals : 0
quantified form : None
qcost : 0


=== Prime Orbit 21 =====================
size : 18
num_suborbits: 1
348 (*) : -----------1--1-----0------
348     : ['didNotPromise(acceptor2)', 'leader(proposer2)', '~promise(acceptor1,proposer2)']
349     : -----------1-1-----0-------
349     : ['didNotPromise(acceptor2)', 'leader(proposer1)', '~promise(acceptor1,proposer1)']
350     : -----------11-----0--------
350     : ['didNotPromise(acceptor2)', 'leader(proposer0)', '~promise(acceptor1,proposer0)']
351     : ----------1---1--------0---
351     : ['didNotPromise(acceptor1)', 'leader(proposer2)', '~promise(acceptor2,proposer2)']
352     : ----------1--1--------0----
352     : ['didNotPromise(acceptor1)', 'leader(proposer1)', '~promise(acceptor2,proposer1)']
353     : ----------1-1--------0-----
353     : ['didNotPromise(acceptor1)', 'leader(proposer0)', '~promise(acceptor2,proposer0)']
354     : -----------1--1--0---------
354     : ['didNotPromise(acceptor2)', 'leader(proposer2)', '~promise(acceptor0,proposer2)']
355     : -----------1-1--0----------
355     : ['didNotPromise(acceptor2)', 'leader(proposer1)', '~promise(acceptor0,proposer1)']
356     : -----------11--0-----------
356     : ['didNotPromise(acceptor2)', 'leader(proposer0)', '~promise(acceptor0,proposer0)']
357     : ---------1----1--------0---
357     : ['didNotPromise(acceptor0)', 'leader(proposer2)', '~promise(acceptor2,proposer2)']
358     : ---------1---1--------0----
358     : ['didNotPromise(acceptor0)', 'leader(proposer1)', '~promise(acceptor2,proposer1)']
359     : ---------1--1--------0-----
359     : ['didNotPromise(acceptor0)', 'leader(proposer0)', '~promise(acceptor2,proposer0)']
360     : ----------1---1--0---------
360     : ['didNotPromise(acceptor1)', 'leader(proposer2)', '~promise(acceptor0,proposer2)']
361     : ----------1--1--0----------
361     : ['didNotPromise(acceptor1)', 'leader(proposer1)', '~promise(acceptor0,proposer1)']
362     : ----------1-1--0-----------
362     : ['didNotPromise(acceptor1)', 'leader(proposer0)', '~promise(acceptor0,proposer0)']
363     : ---------1----1-----0------
363     : ['didNotPromise(acceptor0)', 'leader(proposer2)', '~promise(acceptor1,proposer2)']
364     : ---------1---1-----0-------
364     : ['didNotPromise(acceptor0)', 'leader(proposer1)', '~promise(acceptor1,proposer1)']
365     : ---------1--1-----0--------
365     : ['didNotPromise(acceptor0)', 'leader(proposer0)', '~promise(acceptor1,proposer0)']
num_forall :   0
num_exists :   0
num_literals : 0
quantified form : None
qcost : 0


=== Prime Orbit 22 =====================
size : 9
num_suborbits: 1
366 (*) : ---------1-11--------------
366     : ['didNotPromise(acceptor0)', 'didNotPromise(acceptor2)', 'leader(proposer0)']
367     : ---------1-1-1-------------
367     : ['didNotPromise(acceptor0)', 'didNotPromise(acceptor2)', 'leader(proposer1)']
368     : ---------1-1--1------------
368     : ['didNotPromise(acceptor0)', 'didNotPromise(acceptor2)', 'leader(proposer2)']
369     : ---------11-1--------------
369     : ['didNotPromise(acceptor0)', 'didNotPromise(acceptor1)', 'leader(proposer0)']
370     : ---------11--1-------------
370     : ['didNotPromise(acceptor0)', 'didNotPromise(acceptor1)', 'leader(proposer1)']
371     : ---------11---1------------
371     : ['didNotPromise(acceptor0)', 'didNotPromise(acceptor1)', 'leader(proposer2)']
372     : ----------111--------------
372     : ['didNotPromise(acceptor1)', 'didNotPromise(acceptor2)', 'leader(proposer0)']
373     : ----------11-1-------------
373     : ['didNotPromise(acceptor1)', 'didNotPromise(acceptor2)', 'leader(proposer1)']
374     : ----------11--1------------
374     : ['didNotPromise(acceptor1)', 'didNotPromise(acceptor2)', 'leader(proposer2)']
num_forall :   0
num_exists :   0
num_literals : 0
quantified form : None
qcost : 0


=== Prime Orbit 23 =====================
size : 9
num_suborbits: 1
375 (*) : -0-----0-----1-----1-------
375     : ['leader(proposer1)', 'promise(acceptor1,proposer1)', '~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)']
376     : --0-----0-----1-----1------
376     : ['leader(proposer2)', 'promise(acceptor1,proposer2)', '~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)']
377     : 0-----0-----1-----1--------
377     : ['leader(proposer0)', 'promise(acceptor1,proposer0)', '~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)']
378     : ----0--0-----1--------1----
378     : ['leader(proposer1)', 'promise(acceptor2,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)']
379     : -----0--0-----1--------1---
379     : ['leader(proposer2)', 'promise(acceptor2,proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)']
380     : ---0--0-----1--------1-----
380     : ['leader(proposer0)', 'promise(acceptor2,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)']
381     : -0--0--------1--1----------
381     : ['leader(proposer1)', 'promise(acceptor0,proposer1)', '~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)']
382     : --0--0--------1--1---------
382     : ['leader(proposer2)', 'promise(acceptor0,proposer2)', '~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)']
383     : 0--0--------1--1-----------
383     : ['leader(proposer0)', 'promise(acceptor0,proposer0)', '~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)']
num_forall :   0
num_exists :   0
num_literals : 0
quantified form : None
qcost : 0


=== Prime Orbit 24 =====================
size : 9
num_suborbits: 1
384 (*) : -----------0----------000--
384     : ['~didNotPromise(acceptor2)', '~promise(acceptor2,proposer1)', '~promise(acceptor2,proposer2)', '~start(proposer0)']
385     : -----------0---------0-0-0-
385     : ['~didNotPromise(acceptor2)', '~promise(acceptor2,proposer0)', '~promise(acceptor2,proposer2)', '~start(proposer1)']
386     : -----------0---------00---0
386     : ['~didNotPromise(acceptor2)', '~promise(acceptor2,proposer0)', '~promise(acceptor2,proposer1)', '~start(proposer2)']
387     : ----------0--------00---0--
387     : ['~didNotPromise(acceptor1)', '~promise(acceptor1,proposer1)', '~promise(acceptor1,proposer2)', '~start(proposer0)']
388     : ----------0-------0-0----0-
388     : ['~didNotPromise(acceptor1)', '~promise(acceptor1,proposer0)', '~promise(acceptor1,proposer2)', '~start(proposer1)']
389     : ----------0-------00------0
389     : ['~didNotPromise(acceptor1)', '~promise(acceptor1,proposer0)', '~promise(acceptor1,proposer1)', '~start(proposer2)']
390     : ---------0------00------0--
390     : ['~didNotPromise(acceptor0)', '~promise(acceptor0,proposer1)', '~promise(acceptor0,proposer2)', '~start(proposer0)']
391     : ---------0-----0-0-------0-
391     : ['~didNotPromise(acceptor0)', '~promise(acceptor0,proposer0)', '~promise(acceptor0,proposer2)', '~start(proposer1)']
392     : ---------0-----00---------0
392     : ['~didNotPromise(acceptor0)', '~promise(acceptor0,proposer0)', '~promise(acceptor0,proposer1)', '~start(proposer2)']
num_forall :   0
num_exists :   0
num_literals : 0
quantified form : None
qcost : 0


=== Prime Orbit 25 =====================
size : 9
num_suborbits: 1
393 (*) : -----------0-----------000-
393     : ['~didNotPromise(acceptor2)', '~promise(acceptor2,proposer2)', '~start(proposer0)', '~start(proposer1)']
394     : -----------0----------0-0-0
394     : ['~didNotPromise(acceptor2)', '~promise(acceptor2,proposer1)', '~start(proposer0)', '~start(proposer2)']
395     : -----------0---------0---00
395     : ['~didNotPromise(acceptor2)', '~promise(acceptor2,proposer0)', '~start(proposer1)', '~start(proposer2)']
396     : ----------0---------0---00-
396     : ['~didNotPromise(acceptor1)', '~promise(acceptor1,proposer2)', '~start(proposer0)', '~start(proposer1)']
397     : ----------0--------0----0-0
397     : ['~didNotPromise(acceptor1)', '~promise(acceptor1,proposer1)', '~start(proposer0)', '~start(proposer2)']
398     : ----------0-------0------00
398     : ['~didNotPromise(acceptor1)', '~promise(acceptor1,proposer0)', '~start(proposer1)', '~start(proposer2)']
399     : ---------0-------0------00-
399     : ['~didNotPromise(acceptor0)', '~promise(acceptor0,proposer2)', '~start(proposer0)', '~start(proposer1)']
400     : ---------0------0-------0-0
400     : ['~didNotPromise(acceptor0)', '~promise(acceptor0,proposer1)', '~start(proposer0)', '~start(proposer2)']
401     : ---------0-----0---------00
401     : ['~didNotPromise(acceptor0)', '~promise(acceptor0,proposer0)', '~start(proposer1)', '~start(proposer2)']
num_forall :   0
num_exists :   0
num_literals : 0
quantified form : None
qcost : 0


=== Prime Orbit 26 =====================
size : 3
num_suborbits: 1
402 (*) : -----------0------------000
402     : ['~didNotPromise(acceptor2)', '~start(proposer0)', '~start(proposer1)', '~start(proposer2)']
403     : ----------0-------------000
403     : ['~didNotPromise(acceptor1)', '~start(proposer0)', '~start(proposer1)', '~start(proposer2)']
404     : ---------0--------------000
404     : ['~didNotPromise(acceptor0)', '~start(proposer0)', '~start(proposer1)', '~start(proposer2)']
num_forall :   0
num_exists :   0
num_literals : 0
quantified form : None
qcost : 0


=== Prime Orbit 27 =====================
size : 3
num_suborbits: 1
405 (*) : -----------0---------000---
405     : ['~didNotPromise(acceptor2)', '~promise(acceptor2,proposer0)', '~promise(acceptor2,proposer1)', '~promise(acceptor2,proposer2)']
406     : ----------0-------000------
406     : ['~didNotPromise(acceptor1)', '~promise(acceptor1,proposer0)', '~promise(acceptor1,proposer1)', '~promise(acceptor1,proposer2)']
407     : ---------0-----000---------
407     : ['~didNotPromise(acceptor0)', '~promise(acceptor0,proposer0)', '~promise(acceptor0,proposer1)', '~promise(acceptor0,proposer2)']
num_forall :   0
num_exists :   0
num_literals : 0
quantified form : None
qcost : 0


=== Prime Orbit 28 =====================
size : 3
num_suborbits: 1
408 (*) : -0--0--0-----1-------------
408     : ['leader(proposer1)', '~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)']
409     : --0--0--0-----1------------
409     : ['leader(proposer2)', '~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)']
410     : 0--0--0-----1--------------
410     : ['leader(proposer0)', '~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)']
num_forall :   0
num_exists :   0
num_literals : 0
quantified form : None
qcost : 0


=== Prime Orbit 29 =====================
size : 18
num_suborbits: 1
411 (*) : 0--------0------001--------
411     : ['promise(acceptor1,proposer0)', '~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~didNotPromise(acceptor0)', '~promise(acceptor0,proposer1)', '~promise(acceptor0,proposer2)']
412     : -0-------0-----0-0-1-------
412     : ['promise(acceptor1,proposer1)', '~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~didNotPromise(acceptor0)', '~promise(acceptor0,proposer0)', '~promise(acceptor0,proposer2)']
413     : --0------0-----00---1------
413     : ['promise(acceptor1,proposer2)', '~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~didNotPromise(acceptor0)', '~promise(acceptor0,proposer0)', '~promise(acceptor0,proposer1)']
414     : ---0-----0------00---1-----
414     : ['promise(acceptor2,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~didNotPromise(acceptor0)', '~promise(acceptor0,proposer1)', '~promise(acceptor0,proposer2)']
415     : ----0----0-----0-0----1----
415     : ['promise(acceptor2,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~didNotPromise(acceptor0)', '~promise(acceptor0,proposer0)', '~promise(acceptor0,proposer2)']
416     : -----0---0-----00------1---
416     : ['promise(acceptor2,proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~didNotPromise(acceptor0)', '~promise(acceptor0,proposer0)', '~promise(acceptor0,proposer1)']
417     : 0---------0----1---00------
417     : ['promise(acceptor0,proposer0)', '~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~didNotPromise(acceptor1)', '~promise(acceptor1,proposer1)', '~promise(acceptor1,proposer2)']
418     : -0--------0-----1-0-0------
418     : ['promise(acceptor0,proposer1)', '~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~didNotPromise(acceptor1)', '~promise(acceptor1,proposer0)', '~promise(acceptor1,proposer2)']
419     : --0-------0------100-------
419     : ['promise(acceptor0,proposer2)', '~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~didNotPromise(acceptor1)', '~promise(acceptor1,proposer0)', '~promise(acceptor1,proposer1)']
420     : ------0---0--------001-----
420     : ['promise(acceptor2,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor1)', '~promise(acceptor1,proposer1)', '~promise(acceptor1,proposer2)']
421     : -------0--0-------0-0-1----
421     : ['promise(acceptor2,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor1)', '~promise(acceptor1,proposer0)', '~promise(acceptor1,proposer2)']
422     : --------0-0-------00---1---
422     : ['promise(acceptor2,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor1)', '~promise(acceptor1,proposer0)', '~promise(acceptor1,proposer1)']
423     : ---0-------0---1------00---
423     : ['promise(acceptor0,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~didNotPromise(acceptor2)', '~promise(acceptor2,proposer1)', '~promise(acceptor2,proposer2)']
424     : ----0------0----1----0-0---
424     : ['promise(acceptor0,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~didNotPromise(acceptor2)', '~promise(acceptor2,proposer0)', '~promise(acceptor2,proposer2)']
425     : -----0-----0-----1---00----
425     : ['promise(acceptor0,proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~didNotPromise(acceptor2)', '~promise(acceptor2,proposer0)', '~promise(acceptor2,proposer1)']
426     : ------0----0------1---00---
426     : ['promise(acceptor1,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor2)', '~promise(acceptor2,proposer1)', '~promise(acceptor2,proposer2)']
427     : -------0---0-------1-0-0---
427     : ['promise(acceptor1,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor2)', '~promise(acceptor2,proposer0)', '~promise(acceptor2,proposer2)']
428     : --------0--0--------100----
428     : ['promise(acceptor1,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor2)', '~promise(acceptor2,proposer0)', '~promise(acceptor2,proposer1)']
num_forall :   0
num_exists :   0
num_literals : 0
quantified form : None
qcost : 0


=== Prime Orbit 30 =====================
size : 36
num_suborbits: 1
429 (*) : 0--------0------0-1-------0
429     : ['promise(acceptor1,proposer0)', '~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~didNotPromise(acceptor0)', '~promise(acceptor0,proposer1)', '~start(proposer2)']
430     : 0--------0-------01------0-
430     : ['promise(acceptor1,proposer0)', '~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~didNotPromise(acceptor0)', '~promise(acceptor0,proposer2)', '~start(proposer1)']
431     : -0-------0-----0---1------0
431     : ['promise(acceptor1,proposer1)', '~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~didNotPromise(acceptor0)', '~promise(acceptor0,proposer0)', '~start(proposer2)']
432     : -0-------0-------0-1----0--
432     : ['promise(acceptor1,proposer1)', '~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~didNotPromise(acceptor0)', '~promise(acceptor0,proposer2)', '~start(proposer0)']
433     : --0------0-----0----1----0-
433     : ['promise(acceptor1,proposer2)', '~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~didNotPromise(acceptor0)', '~promise(acceptor0,proposer0)', '~start(proposer1)']
434     : --0------0------0---1---0--
434     : ['promise(acceptor1,proposer2)', '~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~didNotPromise(acceptor0)', '~promise(acceptor0,proposer1)', '~start(proposer0)']
435     : ---0-----0------0----1----0
435     : ['promise(acceptor2,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~didNotPromise(acceptor0)', '~promise(acceptor0,proposer1)', '~start(proposer2)']
436     : ---0-----0-------0---1---0-
436     : ['promise(acceptor2,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~didNotPromise(acceptor0)', '~promise(acceptor0,proposer2)', '~start(proposer1)']
437     : ----0----0-----0------1---0
437     : ['promise(acceptor2,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~didNotPromise(acceptor0)', '~promise(acceptor0,proposer0)', '~start(proposer2)']
438     : ----0----0-------0----1-0--
438     : ['promise(acceptor2,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~didNotPromise(acceptor0)', '~promise(acceptor0,proposer2)', '~start(proposer0)']
439     : -----0---0-----0-------1-0-
439     : ['promise(acceptor2,proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~didNotPromise(acceptor0)', '~promise(acceptor0,proposer0)', '~start(proposer1)']
440     : -----0---0------0------10--
440     : ['promise(acceptor2,proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~didNotPromise(acceptor0)', '~promise(acceptor0,proposer1)', '~start(proposer0)']
441     : 0---------0----1---0------0
441     : ['promise(acceptor0,proposer0)', '~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~didNotPromise(acceptor1)', '~promise(acceptor1,proposer1)', '~start(proposer2)']
442     : 0---------0----1----0----0-
442     : ['promise(acceptor0,proposer0)', '~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~didNotPromise(acceptor1)', '~promise(acceptor1,proposer2)', '~start(proposer1)']
443     : -0--------0-----1-0-------0
443     : ['promise(acceptor0,proposer1)', '~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~didNotPromise(acceptor1)', '~promise(acceptor1,proposer0)', '~start(proposer2)']
444     : -0--------0-----1---0---0--
444     : ['promise(acceptor0,proposer1)', '~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~didNotPromise(acceptor1)', '~promise(acceptor1,proposer2)', '~start(proposer0)']
445     : --0-------0------10------0-
445     : ['promise(acceptor0,proposer2)', '~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~didNotPromise(acceptor1)', '~promise(acceptor1,proposer0)', '~start(proposer1)']
446     : --0-------0------1-0----0--
446     : ['promise(acceptor0,proposer2)', '~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~didNotPromise(acceptor1)', '~promise(acceptor1,proposer1)', '~start(proposer0)']
447     : ------0---0--------0-1----0
447     : ['promise(acceptor2,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor1)', '~promise(acceptor1,proposer1)', '~start(proposer2)']
448     : ------0---0---------01---0-
448     : ['promise(acceptor2,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor1)', '~promise(acceptor1,proposer2)', '~start(proposer1)']
449     : -------0--0-------0---1---0
449     : ['promise(acceptor2,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor1)', '~promise(acceptor1,proposer0)', '~start(proposer2)']
450     : -------0--0---------0-1-0--
450     : ['promise(acceptor2,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor1)', '~promise(acceptor1,proposer2)', '~start(proposer0)']
451     : --------0-0-------0----1-0-
451     : ['promise(acceptor2,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor1)', '~promise(acceptor1,proposer0)', '~start(proposer1)']
452     : --------0-0--------0---10--
452     : ['promise(acceptor2,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor1)', '~promise(acceptor1,proposer1)', '~start(proposer0)']
453     : ---0-------0---1------0---0
453     : ['promise(acceptor0,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~didNotPromise(acceptor2)', '~promise(acceptor2,proposer1)', '~start(proposer2)']
454     : ---0-------0---1-------0-0-
454     : ['promise(acceptor0,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~didNotPromise(acceptor2)', '~promise(acceptor2,proposer2)', '~start(proposer1)']
455     : ----0------0----1----0----0
455     : ['promise(acceptor0,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~didNotPromise(acceptor2)', '~promise(acceptor2,proposer0)', '~start(proposer2)']
456     : ----0------0----1------00--
456     : ['promise(acceptor0,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~didNotPromise(acceptor2)', '~promise(acceptor2,proposer2)', '~start(proposer0)']
457     : -----0-----0-----1---0---0-
457     : ['promise(acceptor0,proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~didNotPromise(acceptor2)', '~promise(acceptor2,proposer0)', '~start(proposer1)']
458     : -----0-----0-----1----0-0--
458     : ['promise(acceptor0,proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~didNotPromise(acceptor2)', '~promise(acceptor2,proposer1)', '~start(proposer0)']
459     : ------0----0------1---0---0
459     : ['promise(acceptor1,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor2)', '~promise(acceptor2,proposer1)', '~start(proposer2)']
460     : ------0----0------1----0-0-
460     : ['promise(acceptor1,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor2)', '~promise(acceptor2,proposer2)', '~start(proposer1)']
461     : -------0---0-------1-0----0
461     : ['promise(acceptor1,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor2)', '~promise(acceptor2,proposer0)', '~start(proposer2)']
462     : -------0---0-------1---00--
462     : ['promise(acceptor1,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor2)', '~promise(acceptor2,proposer2)', '~start(proposer0)']
463     : --------0--0--------10---0-
463     : ['promise(acceptor1,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor2)', '~promise(acceptor2,proposer0)', '~start(proposer1)']
464     : --------0--0--------1-0-0--
464     : ['promise(acceptor1,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor2)', '~promise(acceptor2,proposer1)', '~start(proposer0)']
num_forall :   0
num_exists :   0
num_literals : 0
quantified form : None
qcost : 0


=== Prime Orbit 31 =====================
size : 18
num_suborbits: 1
465 (*) : 0--------0--------1------00
465     : ['promise(acceptor1,proposer0)', '~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~didNotPromise(acceptor0)', '~start(proposer1)', '~start(proposer2)']
466     : -0-------0---------1----0-0
466     : ['promise(acceptor1,proposer1)', '~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~didNotPromise(acceptor0)', '~start(proposer0)', '~start(proposer2)']
467     : --0------0----------1---00-
467     : ['promise(acceptor1,proposer2)', '~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~didNotPromise(acceptor0)', '~start(proposer0)', '~start(proposer1)']
468     : ---0-----0-----------1---00
468     : ['promise(acceptor2,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~didNotPromise(acceptor0)', '~start(proposer1)', '~start(proposer2)']
469     : ----0----0------------1-0-0
469     : ['promise(acceptor2,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~didNotPromise(acceptor0)', '~start(proposer0)', '~start(proposer2)']
470     : -----0---0-------------100-
470     : ['promise(acceptor2,proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~didNotPromise(acceptor0)', '~start(proposer0)', '~start(proposer1)']
471     : 0---------0----1---------00
471     : ['promise(acceptor0,proposer0)', '~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~didNotPromise(acceptor1)', '~start(proposer1)', '~start(proposer2)']
472     : -0--------0-----1-------0-0
472     : ['promise(acceptor0,proposer1)', '~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~didNotPromise(acceptor1)', '~start(proposer0)', '~start(proposer2)']
473     : --0-------0------1------00-
473     : ['promise(acceptor0,proposer2)', '~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~didNotPromise(acceptor1)', '~start(proposer0)', '~start(proposer1)']
474     : ------0---0----------1---00
474     : ['promise(acceptor2,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor1)', '~start(proposer1)', '~start(proposer2)']
475     : -------0--0-----------1-0-0
475     : ['promise(acceptor2,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor1)', '~start(proposer0)', '~start(proposer2)']
476     : --------0-0------------100-
476     : ['promise(acceptor2,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor1)', '~start(proposer0)', '~start(proposer1)']
477     : ---0-------0---1---------00
477     : ['promise(acceptor0,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~didNotPromise(acceptor2)', '~start(proposer1)', '~start(proposer2)']
478     : ----0------0----1-------0-0
478     : ['promise(acceptor0,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~didNotPromise(acceptor2)', '~start(proposer0)', '~start(proposer2)']
479     : -----0-----0-----1------00-
479     : ['promise(acceptor0,proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~didNotPromise(acceptor2)', '~start(proposer0)', '~start(proposer1)']
480     : ------0----0------1------00
480     : ['promise(acceptor1,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor2)', '~start(proposer1)', '~start(proposer2)']
481     : -------0---0-------1----0-0
481     : ['promise(acceptor1,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor2)', '~start(proposer0)', '~start(proposer2)']
482     : --------0--0--------1---00-
482     : ['promise(acceptor1,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor2)', '~start(proposer0)', '~start(proposer1)']
num_forall :   0
num_exists :   0
num_literals : 0
quantified form : None
qcost : 0


=== Prime Orbit 32 =====================
size : 18
num_suborbits: 1
483 (*) : 1-----0----0-------------00
483     : ['chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor2)', '~start(proposer1)', '~start(proposer2)']
484     : -1-----0---0------------0-0
484     : ['chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor2)', '~start(proposer0)', '~start(proposer2)']
485     : --1-----0--0------------00-
485     : ['chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor2)', '~start(proposer0)', '~start(proposer1)']
486     : ---1--0---0--------------00
486     : ['chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor1)', '~start(proposer1)', '~start(proposer2)']
487     : ----1--0--0-------------0-0
487     : ['chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor1)', '~start(proposer0)', '~start(proposer2)']
488     : -----1--0-0-------------00-
488     : ['chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor1)', '~start(proposer0)', '~start(proposer1)']
489     : 1--0-------0-------------00
489     : ['chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~didNotPromise(acceptor2)', '~start(proposer1)', '~start(proposer2)']
490     : -1--0------0------------0-0
490     : ['chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~didNotPromise(acceptor2)', '~start(proposer0)', '~start(proposer2)']
491     : --1--0-----0------------00-
491     : ['chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~didNotPromise(acceptor2)', '~start(proposer0)', '~start(proposer1)']
492     : ---0--1--0---------------00
492     : ['chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~didNotPromise(acceptor0)', '~start(proposer1)', '~start(proposer2)']
493     : ----0--1-0--------------0-0
493     : ['chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~didNotPromise(acceptor0)', '~start(proposer0)', '~start(proposer2)']
494     : -----0--10--------------00-
494     : ['chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~didNotPromise(acceptor0)', '~start(proposer0)', '~start(proposer1)']
495     : 0--1------0--------------00
495     : ['chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~didNotPromise(acceptor1)', '~start(proposer1)', '~start(proposer2)']
496     : -0--1-----0-------------0-0
496     : ['chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~didNotPromise(acceptor1)', '~start(proposer0)', '~start(proposer2)']
497     : --0--1----0-------------00-
497     : ['chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~didNotPromise(acceptor1)', '~start(proposer0)', '~start(proposer1)']
498     : 0-----1--0---------------00
498     : ['chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~didNotPromise(acceptor0)', '~start(proposer1)', '~start(proposer2)']
499     : -0-----1-0--------------0-0
499     : ['chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~didNotPromise(acceptor0)', '~start(proposer0)', '~start(proposer2)']
500     : --0-----10--------------00-
500     : ['chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~didNotPromise(acceptor0)', '~start(proposer0)', '~start(proposer1)']
num_forall :   0
num_exists :   0
num_literals : 0
quantified form : None
qcost : 0


=== Prime Orbit 33 =====================
size : 36
num_suborbits: 1
501 (*) : 1--0-------0-----------0-0-
501     : ['chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~didNotPromise(acceptor2)', '~promise(acceptor2,proposer2)', '~start(proposer1)']
502     : 1--0-------0----------0---0
502     : ['chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~didNotPromise(acceptor2)', '~promise(acceptor2,proposer1)', '~start(proposer2)']
503     : -1--0------0-----------00--
503     : ['chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~didNotPromise(acceptor2)', '~promise(acceptor2,proposer2)', '~start(proposer0)']
504     : -1--0------0---------0----0
504     : ['chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~didNotPromise(acceptor2)', '~promise(acceptor2,proposer0)', '~start(proposer2)']
505     : --1--0-----0----------0-0--
505     : ['chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~didNotPromise(acceptor2)', '~promise(acceptor2,proposer1)', '~start(proposer0)']
506     : --1--0-----0---------0---0-
506     : ['chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~didNotPromise(acceptor2)', '~promise(acceptor2,proposer0)', '~start(proposer1)']
507     : 0--1------0---------0----0-
507     : ['chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~didNotPromise(acceptor1)', '~promise(acceptor1,proposer2)', '~start(proposer1)']
508     : 0--1------0--------0------0
508     : ['chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~didNotPromise(acceptor1)', '~promise(acceptor1,proposer1)', '~start(proposer2)']
509     : -0--1-----0---------0---0--
509     : ['chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~didNotPromise(acceptor1)', '~promise(acceptor1,proposer2)', '~start(proposer0)']
510     : -0--1-----0-------0-------0
510     : ['chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~didNotPromise(acceptor1)', '~promise(acceptor1,proposer0)', '~start(proposer2)']
511     : --0--1----0--------0----0--
511     : ['chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~didNotPromise(acceptor1)', '~promise(acceptor1,proposer1)', '~start(proposer0)']
512     : --0--1----0-------0------0-
512     : ['chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~didNotPromise(acceptor1)', '~promise(acceptor1,proposer0)', '~start(proposer1)']
513     : 1-----0----0-----------0-0-
513     : ['chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor2)', '~promise(acceptor2,proposer2)', '~start(proposer1)']
514     : 1-----0----0----------0---0
514     : ['chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor2)', '~promise(acceptor2,proposer1)', '~start(proposer2)']
515     : -1-----0---0-----------00--
515     : ['chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor2)', '~promise(acceptor2,proposer2)', '~start(proposer0)']
516     : -1-----0---0---------0----0
516     : ['chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor2)', '~promise(acceptor2,proposer0)', '~start(proposer2)']
517     : --1-----0--0----------0-0--
517     : ['chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor2)', '~promise(acceptor2,proposer1)', '~start(proposer0)']
518     : --1-----0--0---------0---0-
518     : ['chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor2)', '~promise(acceptor2,proposer0)', '~start(proposer1)']
519     : 0-----1--0-------0-------0-
519     : ['chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~didNotPromise(acceptor0)', '~promise(acceptor0,proposer2)', '~start(proposer1)']
520     : 0-----1--0------0---------0
520     : ['chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~didNotPromise(acceptor0)', '~promise(acceptor0,proposer1)', '~start(proposer2)']
521     : -0-----1-0-------0------0--
521     : ['chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~didNotPromise(acceptor0)', '~promise(acceptor0,proposer2)', '~start(proposer0)']
522     : -0-----1-0-----0----------0
522     : ['chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~didNotPromise(acceptor0)', '~promise(acceptor0,proposer0)', '~start(proposer2)']
523     : --0-----10------0-------0--
523     : ['chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~didNotPromise(acceptor0)', '~promise(acceptor0,proposer1)', '~start(proposer0)']
524     : --0-----10-----0---------0-
524     : ['chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~didNotPromise(acceptor0)', '~promise(acceptor0,proposer0)', '~start(proposer1)']
525     : ---1--0---0---------0----0-
525     : ['chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor1)', '~promise(acceptor1,proposer2)', '~start(proposer1)']
526     : ---1--0---0--------0------0
526     : ['chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor1)', '~promise(acceptor1,proposer1)', '~start(proposer2)']
527     : ----1--0--0---------0---0--
527     : ['chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor1)', '~promise(acceptor1,proposer2)', '~start(proposer0)']
528     : ----1--0--0-------0-------0
528     : ['chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor1)', '~promise(acceptor1,proposer0)', '~start(proposer2)']
529     : -----1--0-0--------0----0--
529     : ['chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor1)', '~promise(acceptor1,proposer1)', '~start(proposer0)']
530     : -----1--0-0-------0------0-
530     : ['chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor1)', '~promise(acceptor1,proposer0)', '~start(proposer1)']
531     : ---0--1--0-------0-------0-
531     : ['chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~didNotPromise(acceptor0)', '~promise(acceptor0,proposer2)', '~start(proposer1)']
532     : ---0--1--0------0---------0
532     : ['chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~didNotPromise(acceptor0)', '~promise(acceptor0,proposer1)', '~start(proposer2)']
533     : ----0--1-0-------0------0--
533     : ['chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~didNotPromise(acceptor0)', '~promise(acceptor0,proposer2)', '~start(proposer0)']
534     : ----0--1-0-----0----------0
534     : ['chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~didNotPromise(acceptor0)', '~promise(acceptor0,proposer0)', '~start(proposer2)']
535     : -----0--10------0-------0--
535     : ['chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~didNotPromise(acceptor0)', '~promise(acceptor0,proposer1)', '~start(proposer0)']
536     : -----0--10-----0---------0-
536     : ['chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~didNotPromise(acceptor0)', '~promise(acceptor0,proposer0)', '~start(proposer1)']
num_forall :   0
num_exists :   0
num_literals : 0
quantified form : None
qcost : 0


=== Prime Orbit 34 =====================
size : 18
num_suborbits: 1
537 (*) : 1--0-------0----------00---
537     : ['chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~didNotPromise(acceptor2)', '~promise(acceptor2,proposer1)', '~promise(acceptor2,proposer2)']
538     : -1--0------0---------0-0---
538     : ['chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~didNotPromise(acceptor2)', '~promise(acceptor2,proposer0)', '~promise(acceptor2,proposer2)']
539     : --1--0-----0---------00----
539     : ['chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~didNotPromise(acceptor2)', '~promise(acceptor2,proposer0)', '~promise(acceptor2,proposer1)']
540     : 0--1------0--------00------
540     : ['chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~didNotPromise(acceptor1)', '~promise(acceptor1,proposer1)', '~promise(acceptor1,proposer2)']
541     : -0--1-----0-------0-0------
541     : ['chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~didNotPromise(acceptor1)', '~promise(acceptor1,proposer0)', '~promise(acceptor1,proposer2)']
542     : --0--1----0-------00-------
542     : ['chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~didNotPromise(acceptor1)', '~promise(acceptor1,proposer0)', '~promise(acceptor1,proposer1)']
543     : 1-----0----0----------00---
543     : ['chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor2)', '~promise(acceptor2,proposer1)', '~promise(acceptor2,proposer2)']
544     : -1-----0---0---------0-0---
544     : ['chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor2)', '~promise(acceptor2,proposer0)', '~promise(acceptor2,proposer2)']
545     : --1-----0--0---------00----
545     : ['chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor2)', '~promise(acceptor2,proposer0)', '~promise(acceptor2,proposer1)']
546     : 0-----1--0------00---------
546     : ['chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~didNotPromise(acceptor0)', '~promise(acceptor0,proposer1)', '~promise(acceptor0,proposer2)']
547     : -0-----1-0-----0-0---------
547     : ['chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~didNotPromise(acceptor0)', '~promise(acceptor0,proposer0)', '~promise(acceptor0,proposer2)']
548     : --0-----10-----00----------
548     : ['chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~didNotPromise(acceptor0)', '~promise(acceptor0,proposer0)', '~promise(acceptor0,proposer1)']
549     : ---1--0---0--------00------
549     : ['chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor1)', '~promise(acceptor1,proposer1)', '~promise(acceptor1,proposer2)']
550     : ----1--0--0-------0-0------
550     : ['chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor1)', '~promise(acceptor1,proposer0)', '~promise(acceptor1,proposer2)']
551     : -----1--0-0-------00-------
551     : ['chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor1)', '~promise(acceptor1,proposer0)', '~promise(acceptor1,proposer1)']
552     : ---0--1--0------00---------
552     : ['chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~didNotPromise(acceptor0)', '~promise(acceptor0,proposer1)', '~promise(acceptor0,proposer2)']
553     : ----0--1-0-----0-0---------
553     : ['chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~didNotPromise(acceptor0)', '~promise(acceptor0,proposer0)', '~promise(acceptor0,proposer2)']
554     : -----0--10-----00----------
554     : ['chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~didNotPromise(acceptor0)', '~promise(acceptor0,proposer0)', '~promise(acceptor0,proposer1)']
num_forall :   0
num_exists :   0
num_literals : 0
quantified form : None
qcost : 0


=== Prime Orbit 35 =====================
size : 9
num_suborbits: 1
555 (*) : ---0-----0-0-------------00
555     : ['~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor2)', '~start(proposer1)', '~start(proposer2)']
556     : ----0----0-0------------0-0
556     : ['~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor2)', '~start(proposer0)', '~start(proposer2)']
557     : -----0---0-0------------00-
557     : ['~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor2)', '~start(proposer0)', '~start(proposer1)']
558     : 0--------00--------------00
558     : ['~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~start(proposer1)', '~start(proposer2)']
559     : -0-------00-------------0-0
559     : ['~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~start(proposer0)', '~start(proposer2)']
560     : --0------00-------------00-
560     : ['~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~start(proposer0)', '~start(proposer1)']
561     : ------0---00-------------00
561     : ['~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~start(proposer1)', '~start(proposer2)']
562     : -------0--00------------0-0
562     : ['~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~start(proposer0)', '~start(proposer2)']
563     : --------0-00------------00-
563     : ['~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~start(proposer0)', '~start(proposer1)']
num_forall :   0
num_exists :   0
num_literals : 0
quantified form : None
qcost : 0


=== Prime Orbit 36 =====================
size : 18
num_suborbits: 1
564 (*) : --0------00----0--0------0-
564     : ['~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~promise(acceptor0,proposer0)', '~promise(acceptor1,proposer0)', '~start(proposer1)']
565     : -0-------00----0--0-------0
565     : ['~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~promise(acceptor0,proposer0)', '~promise(acceptor1,proposer0)', '~start(proposer2)']
566     : --0------00-----0--0----0--
566     : ['~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~promise(acceptor0,proposer1)', '~promise(acceptor1,proposer1)', '~start(proposer0)']
567     : 0--------00-----0--0------0
567     : ['~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~promise(acceptor0,proposer1)', '~promise(acceptor1,proposer1)', '~start(proposer2)']
568     : -0-------00------0--0---0--
568     : ['~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~promise(acceptor0,proposer2)', '~promise(acceptor1,proposer2)', '~start(proposer0)']
569     : 0--------00------0--0----0-
569     : ['~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~promise(acceptor0,proposer2)', '~promise(acceptor1,proposer2)', '~start(proposer1)']
570     : -----0---0-0---0-----0---0-
570     : ['~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor2)', '~promise(acceptor0,proposer0)', '~promise(acceptor2,proposer0)', '~start(proposer1)']
571     : ----0----0-0---0-----0----0
571     : ['~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor2)', '~promise(acceptor0,proposer0)', '~promise(acceptor2,proposer0)', '~start(proposer2)']
572     : -----0---0-0----0-----0-0--
572     : ['~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor2)', '~promise(acceptor0,proposer1)', '~promise(acceptor2,proposer1)', '~start(proposer0)']
573     : ---0-----0-0----0-----0---0
573     : ['~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor2)', '~promise(acceptor0,proposer1)', '~promise(acceptor2,proposer1)', '~start(proposer2)']
574     : ----0----0-0-----0-----00--
574     : ['~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor2)', '~promise(acceptor0,proposer2)', '~promise(acceptor2,proposer2)', '~start(proposer0)']
575     : ---0-----0-0-----0-----0-0-
575     : ['~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor2)', '~promise(acceptor0,proposer2)', '~promise(acceptor2,proposer2)', '~start(proposer1)']
576     : --------0-00------0--0---0-
576     : ['~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor1,proposer0)', '~promise(acceptor2,proposer0)', '~start(proposer1)']
577     : -------0--00------0--0----0
577     : ['~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor1,proposer0)', '~promise(acceptor2,proposer0)', '~start(proposer2)']
578     : --------0-00-------0--0-0--
578     : ['~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor1,proposer1)', '~promise(acceptor2,proposer1)', '~start(proposer0)']
579     : ------0---00-------0--0---0
579     : ['~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor1,proposer1)', '~promise(acceptor2,proposer1)', '~start(proposer2)']
580     : -------0--00--------0--00--
580     : ['~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor1,proposer2)', '~promise(acceptor2,proposer2)', '~start(proposer0)']
581     : ------0---00--------0--0-0-
581     : ['~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor1,proposer2)', '~promise(acceptor2,proposer2)', '~start(proposer1)']
num_forall :   0
num_exists :   0
num_literals : 0
quantified form : None
qcost : 0


=== Prime Orbit 37 =====================
size : 18
num_suborbits: 1
582 (*) : --0--0---0----10---------0-
582     : ['leader(proposer2)', '~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~didNotPromise(acceptor0)', '~promise(acceptor0,proposer0)', '~start(proposer1)']
583     : -0--0----0---1-0----------0
583     : ['leader(proposer1)', '~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~didNotPromise(acceptor0)', '~promise(acceptor0,proposer0)', '~start(proposer2)']
584     : --0--0---0----1-0-------0--
584     : ['leader(proposer2)', '~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~didNotPromise(acceptor0)', '~promise(acceptor0,proposer1)', '~start(proposer0)']
585     : 0--0-----0--1---0---------0
585     : ['leader(proposer0)', '~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~didNotPromise(acceptor0)', '~promise(acceptor0,proposer1)', '~start(proposer2)']
586     : -0--0----0---1---0------0--
586     : ['leader(proposer1)', '~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~didNotPromise(acceptor0)', '~promise(acceptor0,proposer2)', '~start(proposer0)']
587     : 0--0-----0--1----0-------0-
587     : ['leader(proposer0)', '~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~didNotPromise(acceptor0)', '~promise(acceptor0,proposer2)', '~start(proposer1)']
588     : --0-----0-0---1---0------0-
588     : ['leader(proposer2)', '~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor1)', '~promise(acceptor1,proposer0)', '~start(proposer1)']
589     : -0-----0--0--1----0-------0
589     : ['leader(proposer1)', '~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor1)', '~promise(acceptor1,proposer0)', '~start(proposer2)']
590     : --0-----0-0---1----0----0--
590     : ['leader(proposer2)', '~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor1)', '~promise(acceptor1,proposer1)', '~start(proposer0)']
591     : 0-----0---0-1------0------0
591     : ['leader(proposer0)', '~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor1)', '~promise(acceptor1,proposer1)', '~start(proposer2)']
592     : -0-----0--0--1------0---0--
592     : ['leader(proposer1)', '~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor1)', '~promise(acceptor1,proposer2)', '~start(proposer0)']
593     : 0-----0---0-1-------0----0-
593     : ['leader(proposer0)', '~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor1)', '~promise(acceptor1,proposer2)', '~start(proposer1)']
594     : -----0--0--0--1------0---0-
594     : ['leader(proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor2)', '~promise(acceptor2,proposer0)', '~start(proposer1)']
595     : ----0--0---0-1-------0----0
595     : ['leader(proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor2)', '~promise(acceptor2,proposer0)', '~start(proposer2)']
596     : -----0--0--0--1-------0-0--
596     : ['leader(proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor2)', '~promise(acceptor2,proposer1)', '~start(proposer0)']
597     : ---0--0----01---------0---0
597     : ['leader(proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor2)', '~promise(acceptor2,proposer1)', '~start(proposer2)']
598     : ----0--0---0-1---------00--
598     : ['leader(proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor2)', '~promise(acceptor2,proposer2)', '~start(proposer0)']
599     : ---0--0----01----------0-0-
599     : ['leader(proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor2)', '~promise(acceptor2,proposer2)', '~start(proposer1)']
num_forall :   0
num_exists :   0
num_literals : 0
quantified form : None
qcost : 0


=== Prime Orbit 38 =====================
size : 18
num_suborbits: 1
600 (*) : --0---0---0------1---1---0-
600     : ['promise(acceptor0,proposer2)', 'promise(acceptor2,proposer0)', '~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor1)', '~start(proposer1)']
601     : -0----0---0-----1----1----0
601     : ['promise(acceptor0,proposer1)', 'promise(acceptor2,proposer0)', '~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor1)', '~start(proposer2)']
602     : --0----0--0------1----1-0--
602     : ['promise(acceptor0,proposer2)', 'promise(acceptor2,proposer1)', '~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor1)', '~start(proposer0)']
603     : 0------0--0----1------1---0
603     : ['promise(acceptor0,proposer0)', 'promise(acceptor2,proposer1)', '~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor1)', '~start(proposer2)']
604     : -0------0-0-----1------10--
604     : ['promise(acceptor0,proposer1)', 'promise(acceptor2,proposer2)', '~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor1)', '~start(proposer0)']
605     : 0-------0-0----1-------1-0-
605     : ['promise(acceptor0,proposer0)', 'promise(acceptor2,proposer2)', '~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor1)', '~start(proposer1)']
606     : -----00----0-----11------0-
606     : ['promise(acceptor0,proposer2)', 'promise(acceptor1,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor2)', '~start(proposer1)']
607     : ----0-0----0----1-1-------0
607     : ['promise(acceptor0,proposer1)', 'promise(acceptor1,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor2)', '~start(proposer2)']
608     : -----0-0---0-----1-1----0--
608     : ['promise(acceptor0,proposer2)', 'promise(acceptor1,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor2)', '~start(proposer0)']
609     : ---0---0---0---1---1------0
609     : ['promise(acceptor0,proposer0)', 'promise(acceptor1,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor2)', '~start(proposer2)']
610     : ----0---0--0----1---1---0--
610     : ['promise(acceptor0,proposer1)', 'promise(acceptor1,proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor2)', '~start(proposer0)']
611     : ---0----0--0---1----1----0-
611     : ['promise(acceptor0,proposer0)', 'promise(acceptor1,proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor2)', '~start(proposer1)']
612     : --00-----0----------11---0-
612     : ['promise(acceptor1,proposer2)', 'promise(acceptor2,proposer0)', '~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~didNotPromise(acceptor0)', '~start(proposer1)']
613     : -0-0-----0---------1-1----0
613     : ['promise(acceptor1,proposer1)', 'promise(acceptor2,proposer0)', '~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~didNotPromise(acceptor0)', '~start(proposer2)']
614     : --0-0----0----------1-1-0--
614     : ['promise(acceptor1,proposer2)', 'promise(acceptor2,proposer1)', '~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~didNotPromise(acceptor0)', '~start(proposer0)']
615     : 0---0----0--------1---1---0
615     : ['promise(acceptor1,proposer0)', 'promise(acceptor2,proposer1)', '~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~didNotPromise(acceptor0)', '~start(proposer2)']
616     : -0---0---0---------1---10--
616     : ['promise(acceptor1,proposer1)', 'promise(acceptor2,proposer2)', '~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~didNotPromise(acceptor0)', '~start(proposer0)']
617     : 0----0---0--------1----1-0-
617     : ['promise(acceptor1,proposer0)', 'promise(acceptor2,proposer2)', '~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~didNotPromise(acceptor0)', '~start(proposer1)']
num_forall :   0
num_exists :   0
num_literals : 0
quantified form : None
qcost : 0


=== Prime Orbit 39 =====================
size : 9
num_suborbits: 1
618 (*) : --0--0---0----1---------00-
618     : ['leader(proposer2)', '~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~didNotPromise(acceptor0)', '~start(proposer0)', '~start(proposer1)']
619     : -0--0----0---1----------0-0
619     : ['leader(proposer1)', '~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~didNotPromise(acceptor0)', '~start(proposer0)', '~start(proposer2)']
620     : 0--0-----0--1------------00
620     : ['leader(proposer0)', '~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~didNotPromise(acceptor0)', '~start(proposer1)', '~start(proposer2)']
621     : --0-----0-0---1---------00-
621     : ['leader(proposer2)', '~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor1)', '~start(proposer0)', '~start(proposer1)']
622     : -0-----0--0--1----------0-0
622     : ['leader(proposer1)', '~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor1)', '~start(proposer0)', '~start(proposer2)']
623     : 0-----0---0-1------------00
623     : ['leader(proposer0)', '~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor1)', '~start(proposer1)', '~start(proposer2)']
624     : -----0--0--0--1---------00-
624     : ['leader(proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor2)', '~start(proposer0)', '~start(proposer1)']
625     : ----0--0---0-1----------0-0
625     : ['leader(proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor2)', '~start(proposer0)', '~start(proposer2)']
626     : ---0--0----01------------00
626     : ['leader(proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor2)', '~start(proposer1)', '~start(proposer2)']
num_forall :   0
num_exists :   0
num_literals : 0
quantified form : None
qcost : 0


=== Prime Orbit 40 =====================
size : 9
num_suborbits: 1
627 (*) : --0-----0-0---1---00-------
627     : ['leader(proposer2)', '~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor1)', '~promise(acceptor1,proposer0)', '~promise(acceptor1,proposer1)']
628     : -0-----0--0--1----0-0------
628     : ['leader(proposer1)', '~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor1)', '~promise(acceptor1,proposer0)', '~promise(acceptor1,proposer2)']
629     : 0-----0---0-1------00------
629     : ['leader(proposer0)', '~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor1)', '~promise(acceptor1,proposer1)', '~promise(acceptor1,proposer2)']
630     : -----0--0--0--1------00----
630     : ['leader(proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor2)', '~promise(acceptor2,proposer0)', '~promise(acceptor2,proposer1)']
631     : ----0--0---0-1-------0-0---
631     : ['leader(proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor2)', '~promise(acceptor2,proposer0)', '~promise(acceptor2,proposer2)']
632     : ---0--0----01---------00---
632     : ['leader(proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor2)', '~promise(acceptor2,proposer1)', '~promise(acceptor2,proposer2)']
633     : --0--0---0----100----------
633     : ['leader(proposer2)', '~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~didNotPromise(acceptor0)', '~promise(acceptor0,proposer0)', '~promise(acceptor0,proposer1)']
634     : -0--0----0---1-0-0---------
634     : ['leader(proposer1)', '~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~didNotPromise(acceptor0)', '~promise(acceptor0,proposer0)', '~promise(acceptor0,proposer2)']
635     : 0--0-----0--1---00---------
635     : ['leader(proposer0)', '~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~didNotPromise(acceptor0)', '~promise(acceptor0,proposer1)', '~promise(acceptor0,proposer2)']
num_forall :   0
num_exists :   0
num_literals : 0
quantified form : None
qcost : 0


=== Prime Orbit 41 =====================
size : 18
num_suborbits: 1
636 (*) : -0-0-----0-------0-1-1-----
636     : ['promise(acceptor1,proposer1)', 'promise(acceptor2,proposer0)', '~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~didNotPromise(acceptor0)', '~promise(acceptor0,proposer2)']
637     : --00-----0------0---11-----
637     : ['promise(acceptor1,proposer2)', 'promise(acceptor2,proposer0)', '~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~didNotPromise(acceptor0)', '~promise(acceptor0,proposer1)']
638     : 0---0----0-------01---1----
638     : ['promise(acceptor1,proposer0)', 'promise(acceptor2,proposer1)', '~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~didNotPromise(acceptor0)', '~promise(acceptor0,proposer2)']
639     : --0-0----0-----0----1-1----
639     : ['promise(acceptor1,proposer2)', 'promise(acceptor2,proposer1)', '~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~didNotPromise(acceptor0)', '~promise(acceptor0,proposer0)']
640     : 0----0---0------0-1----1---
640     : ['promise(acceptor1,proposer0)', 'promise(acceptor2,proposer2)', '~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~didNotPromise(acceptor0)', '~promise(acceptor0,proposer1)']
641     : -0---0---0-----0---1---1---
641     : ['promise(acceptor1,proposer1)', 'promise(acceptor2,proposer2)', '~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~didNotPromise(acceptor0)', '~promise(acceptor0,proposer0)']
642     : -0----0---0-----1---01-----
642     : ['promise(acceptor0,proposer1)', 'promise(acceptor2,proposer0)', '~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor1)', '~promise(acceptor1,proposer2)']
643     : --0---0---0------1-0-1-----
643     : ['promise(acceptor0,proposer2)', 'promise(acceptor2,proposer0)', '~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor1)', '~promise(acceptor1,proposer1)']
644     : 0------0--0----1----0-1----
644     : ['promise(acceptor0,proposer0)', 'promise(acceptor2,proposer1)', '~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor1)', '~promise(acceptor1,proposer2)']
645     : --0----0--0------10---1----
645     : ['promise(acceptor0,proposer2)', 'promise(acceptor2,proposer1)', '~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor1)', '~promise(acceptor1,proposer0)']
646     : 0-------0-0----1---0---1---
646     : ['promise(acceptor0,proposer0)', 'promise(acceptor2,proposer2)', '~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor1)', '~promise(acceptor1,proposer1)']
647     : -0------0-0-----1-0----1---
647     : ['promise(acceptor0,proposer1)', 'promise(acceptor2,proposer2)', '~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor1)', '~promise(acceptor1,proposer0)']
648     : ----0-0----0----1-1----0---
648     : ['promise(acceptor0,proposer1)', 'promise(acceptor1,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor2)', '~promise(acceptor2,proposer2)']
649     : -----00----0-----11---0----
649     : ['promise(acceptor0,proposer2)', 'promise(acceptor1,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor2)', '~promise(acceptor2,proposer1)']
650     : ---0---0---0---1---1---0---
650     : ['promise(acceptor0,proposer0)', 'promise(acceptor1,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor2)', '~promise(acceptor2,proposer2)']
651     : -----0-0---0-----1-1-0-----
651     : ['promise(acceptor0,proposer2)', 'promise(acceptor1,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor2)', '~promise(acceptor2,proposer0)']
652     : ---0----0--0---1----1-0----
652     : ['promise(acceptor0,proposer0)', 'promise(acceptor1,proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor2)', '~promise(acceptor2,proposer1)']
653     : ----0---0--0----1---10-----
653     : ['promise(acceptor0,proposer1)', 'promise(acceptor1,proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor2)', '~promise(acceptor2,proposer0)']
num_forall :   0
num_exists :   0
num_literals : 0
quantified form : None
qcost : 0


=== Prime Orbit 42 =====================
size : 36
num_suborbits: 1
654 (*) : --0---0--00----0-----1---0-
654     : ['promise(acceptor2,proposer0)', '~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~promise(acceptor0,proposer0)', '~start(proposer1)']
655     : -0----0--00----0-----1----0
655     : ['promise(acceptor2,proposer0)', '~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~promise(acceptor0,proposer0)', '~start(proposer2)']
656     : --0----0-00-----0-----1-0--
656     : ['promise(acceptor2,proposer1)', '~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~promise(acceptor0,proposer1)', '~start(proposer0)']
657     : 0------0-00-----0-----1---0
657     : ['promise(acceptor2,proposer1)', '~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~promise(acceptor0,proposer1)', '~start(proposer2)']
658     : -0------000------0-----10--
658     : ['promise(acceptor2,proposer2)', '~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~promise(acceptor0,proposer2)', '~start(proposer0)']
659     : 0-------000------0-----1-0-
659     : ['promise(acceptor2,proposer2)', '~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~promise(acceptor0,proposer2)', '~start(proposer1)']
660     : -----00--0-0---0--1------0-
660     : ['promise(acceptor1,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor2)', '~promise(acceptor0,proposer0)', '~start(proposer1)']
661     : ----0-0--0-0---0--1-------0
661     : ['promise(acceptor1,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor2)', '~promise(acceptor0,proposer0)', '~start(proposer2)']
662     : -----0-0-0-0----0--1----0--
662     : ['promise(acceptor1,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor2)', '~promise(acceptor0,proposer1)', '~start(proposer0)']
663     : ---0---0-0-0----0--1------0
663     : ['promise(acceptor1,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor2)', '~promise(acceptor0,proposer1)', '~start(proposer2)']
664     : ----0---00-0-----0--1---0--
664     : ['promise(acceptor1,proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor2)', '~promise(acceptor0,proposer2)', '~start(proposer0)']
665     : ---0----00-0-----0--1----0-
665     : ['promise(acceptor1,proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor2)', '~promise(acceptor0,proposer2)', '~start(proposer1)']
666     : --00-----00-------0--1---0-
666     : ['promise(acceptor2,proposer0)', '~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~promise(acceptor1,proposer0)', '~start(proposer1)']
667     : -0-0-----00-------0--1----0
667     : ['promise(acceptor2,proposer0)', '~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~promise(acceptor1,proposer0)', '~start(proposer2)']
668     : --0-0----00--------0--1-0--
668     : ['promise(acceptor2,proposer1)', '~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~promise(acceptor1,proposer1)', '~start(proposer0)']
669     : 0---0----00--------0--1---0
669     : ['promise(acceptor2,proposer1)', '~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~promise(acceptor1,proposer1)', '~start(proposer2)']
670     : -0---0---00---------0--10--
670     : ['promise(acceptor2,proposer2)', '~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~promise(acceptor1,proposer2)', '~start(proposer0)']
671     : 0----0---00---------0--1-0-
671     : ['promise(acceptor2,proposer2)', '~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~promise(acceptor1,proposer2)', '~start(proposer1)']
672     : ---0----0-00---1--0------0-
672     : ['promise(acceptor0,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor1,proposer0)', '~start(proposer1)']
673     : ---0---0--00---1--0-------0
673     : ['promise(acceptor0,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor1,proposer0)', '~start(proposer2)']
674     : ----0---0-00----1--0----0--
674     : ['promise(acceptor0,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor1,proposer1)', '~start(proposer0)']
675     : ----0-0---00----1--0------0
675     : ['promise(acceptor0,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor1,proposer1)', '~start(proposer2)']
676     : -----0-0--00-----1--0---0--
676     : ['promise(acceptor0,proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor1,proposer2)', '~start(proposer0)']
677     : -----00---00-----1--0----0-
677     : ['promise(acceptor0,proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor1,proposer2)', '~start(proposer1)']
678     : 0----0---0-0------1--0---0-
678     : ['promise(acceptor1,proposer0)', '~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor2)', '~promise(acceptor2,proposer0)', '~start(proposer1)']
679     : 0---0----0-0------1--0----0
679     : ['promise(acceptor1,proposer0)', '~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor2)', '~promise(acceptor2,proposer0)', '~start(proposer2)']
680     : -0---0---0-0-------1--0-0--
680     : ['promise(acceptor1,proposer1)', '~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor2)', '~promise(acceptor2,proposer1)', '~start(proposer0)']
681     : -0-0-----0-0-------1--0---0
681     : ['promise(acceptor1,proposer1)', '~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor2)', '~promise(acceptor2,proposer1)', '~start(proposer2)']
682     : --0-0----0-0--------1--00--
682     : ['promise(acceptor1,proposer2)', '~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor2)', '~promise(acceptor2,proposer2)', '~start(proposer0)']
683     : --00-----0-0--------1--0-0-
683     : ['promise(acceptor1,proposer2)', '~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor2)', '~promise(acceptor2,proposer2)', '~start(proposer1)']
684     : 0-------0-00---1-----0---0-
684     : ['promise(acceptor0,proposer0)', '~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor2,proposer0)', '~start(proposer1)']
685     : 0------0--00---1-----0----0
685     : ['promise(acceptor0,proposer0)', '~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor2,proposer0)', '~start(proposer2)']
686     : -0------0-00----1-----0-0--
686     : ['promise(acceptor0,proposer1)', '~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor2,proposer1)', '~start(proposer0)']
687     : -0----0---00----1-----0---0
687     : ['promise(acceptor0,proposer1)', '~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor2,proposer1)', '~start(proposer2)']
688     : --0----0--00-----1-----00--
688     : ['promise(acceptor0,proposer2)', '~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor2,proposer2)', '~start(proposer0)']
689     : --0---0---00-----1-----0-0-
689     : ['promise(acceptor0,proposer2)', '~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor2,proposer2)', '~start(proposer1)']
num_forall :   0
num_exists :   0
num_literals : 0
quantified form : None
qcost : 0


=== Prime Orbit 43 =====================
size : 18
num_suborbits: 1
690 (*) : --00--0--00----------1---0-
690     : ['promise(acceptor2,proposer0)', '~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~start(proposer1)']
691     : -0-0--0--00----------1----0
691     : ['promise(acceptor2,proposer0)', '~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~start(proposer2)']
692     : --0-0--0-00-----------1-0--
692     : ['promise(acceptor2,proposer1)', '~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~start(proposer0)']
693     : 0---0--0-00-----------1---0
693     : ['promise(acceptor2,proposer1)', '~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~start(proposer2)']
694     : -0---0--000------------10--
694     : ['promise(acceptor2,proposer2)', '~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~start(proposer0)']
695     : 0----0--000------------1-0-
695     : ['promise(acceptor2,proposer2)', '~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~start(proposer1)']
696     : 0----00--0-0------1------0-
696     : ['promise(acceptor1,proposer0)', '~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor2)', '~start(proposer1)']
697     : 0---0-0--0-0------1-------0
697     : ['promise(acceptor1,proposer0)', '~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor2)', '~start(proposer2)']
698     : -0---0-0-0-0-------1----0--
698     : ['promise(acceptor1,proposer1)', '~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor2)', '~start(proposer0)']
699     : -0-0---0-0-0-------1------0
699     : ['promise(acceptor1,proposer1)', '~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor2)', '~start(proposer2)']
700     : --0-0---00-0--------1---0--
700     : ['promise(acceptor1,proposer2)', '~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor2)', '~start(proposer0)']
701     : --00----00-0--------1----0-
701     : ['promise(acceptor1,proposer2)', '~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor2)', '~start(proposer1)']
702     : 0--0----0-00---1---------0-
702     : ['promise(acceptor0,proposer0)', '~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~start(proposer1)']
703     : 0--0---0--00---1----------0
703     : ['promise(acceptor0,proposer0)', '~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~start(proposer2)']
704     : -0--0---0-00----1-------0--
704     : ['promise(acceptor0,proposer1)', '~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~start(proposer0)']
705     : -0--0-0---00----1---------0
705     : ['promise(acceptor0,proposer1)', '~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~start(proposer2)']
706     : --0--0-0--00-----1------0--
706     : ['promise(acceptor0,proposer2)', '~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~start(proposer0)']
707     : --0--00---00-----1-------0-
707     : ['promise(acceptor0,proposer2)', '~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~start(proposer1)']
num_forall :   0
num_exists :   0
num_literals : 0
quantified form : None
qcost : 0


=== Prime Orbit 44 =====================
size : 9
num_suborbits: 1
708 (*) : ---0-----0-0----00----00---
708     : ['~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor2)', '~promise(acceptor0,proposer1)', '~promise(acceptor0,proposer2)', '~promise(acceptor2,proposer1)', '~promise(acceptor2,proposer2)']
709     : ----0----0-0---0-0---0-0---
709     : ['~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor2)', '~promise(acceptor0,proposer0)', '~promise(acceptor0,proposer2)', '~promise(acceptor2,proposer0)', '~promise(acceptor2,proposer2)']
710     : -----0---0-0---00----00----
710     : ['~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor2)', '~promise(acceptor0,proposer0)', '~promise(acceptor0,proposer1)', '~promise(acceptor2,proposer0)', '~promise(acceptor2,proposer1)']
711     : 0--------00-----00-00------
711     : ['~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~promise(acceptor0,proposer1)', '~promise(acceptor0,proposer2)', '~promise(acceptor1,proposer1)', '~promise(acceptor1,proposer2)']
712     : -0-------00----0-00-0------
712     : ['~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~promise(acceptor0,proposer0)', '~promise(acceptor0,proposer2)', '~promise(acceptor1,proposer0)', '~promise(acceptor1,proposer2)']
713     : --0------00----00-00-------
713     : ['~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~promise(acceptor0,proposer0)', '~promise(acceptor0,proposer1)', '~promise(acceptor1,proposer0)', '~promise(acceptor1,proposer1)']
714     : ------0---00-------00-00---
714     : ['~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor1,proposer1)', '~promise(acceptor1,proposer2)', '~promise(acceptor2,proposer1)', '~promise(acceptor2,proposer2)']
715     : -------0--00------0-00-0---
715     : ['~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor1,proposer0)', '~promise(acceptor1,proposer2)', '~promise(acceptor2,proposer0)', '~promise(acceptor2,proposer2)']
716     : --------0-00------00-00----
716     : ['~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor1,proposer0)', '~promise(acceptor1,proposer1)', '~promise(acceptor2,proposer0)', '~promise(acceptor2,proposer1)']
num_forall :   0
num_exists :   0
num_literals : 0
quantified form : None
qcost : 0


=== Prime Orbit 45 =====================
size : 18
num_suborbits: 1
717 (*) : 0----00--000--------0----0-
717     : ['~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor1,proposer2)', '~start(proposer1)']
718     : 0---0-0--000-------0------0
718     : ['~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor1,proposer1)', '~start(proposer2)']
719     : -0---0-0-000--------0---0--
719     : ['~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor1,proposer2)', '~start(proposer0)']
720     : -0-0---0-000------0-------0
720     : ['~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor1,proposer0)', '~start(proposer2)']
721     : --0-0---0000-------0----0--
721     : ['~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor1,proposer1)', '~start(proposer0)']
722     : --00----0000------0------0-
722     : ['~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor1,proposer0)', '~start(proposer1)']
723     : --00--0--000-----------0-0-
723     : ['~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor2,proposer2)', '~start(proposer1)']
724     : -0-0--0--000----------0---0
724     : ['~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor2,proposer1)', '~start(proposer2)']
725     : --0-0--0-000-----------00--
725     : ['~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor2,proposer2)', '~start(proposer0)']
726     : 0---0--0-000---------0----0
726     : ['~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor2,proposer0)', '~start(proposer2)']
727     : -0---0--0000----------0-0--
727     : ['~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor2,proposer1)', '~start(proposer0)']
728     : 0----0--0000---------0---0-
728     : ['~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor2,proposer0)', '~start(proposer1)']
729     : 0--0----0000-----0-------0-
729     : ['~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor0,proposer2)', '~start(proposer1)']
730     : 0--0---0-000----0---------0
730     : ['~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor0,proposer1)', '~start(proposer2)']
731     : -0--0---0000-----0------0--
731     : ['~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor0,proposer2)', '~start(proposer0)']
732     : -0--0-0--000---0----------0
732     : ['~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor0,proposer0)', '~start(proposer2)']
733     : --0--0-0-000----0-------0--
733     : ['~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor0,proposer1)', '~start(proposer0)']
734     : --0--00--000---0---------0-
734     : ['~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor0,proposer0)', '~start(proposer1)']
num_forall :   0
num_exists :   0
num_literals : 0
quantified form : None
qcost : 0


=== Prime Orbit 46 =====================
size : 18
num_suborbits: 1
735 (*) : ---0----0000-----00------0-
735     : ['~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor0,proposer2)', '~promise(acceptor1,proposer0)', '~start(proposer1)']
736     : ---0---0-000----0-0-------0
736     : ['~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor0,proposer1)', '~promise(acceptor1,proposer0)', '~start(proposer2)']
737     : ----0---0000-----0-0----0--
737     : ['~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor0,proposer2)', '~promise(acceptor1,proposer1)', '~start(proposer0)']
738     : ----0-0--000---0---0------0
738     : ['~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor0,proposer0)', '~promise(acceptor1,proposer1)', '~start(proposer2)']
739     : -----0-0-000----0---0---0--
739     : ['~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor0,proposer1)', '~promise(acceptor1,proposer2)', '~start(proposer0)']
740     : -----00--000---0----0----0-
740     : ['~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor0,proposer0)', '~promise(acceptor1,proposer2)', '~start(proposer1)']
741     : 0-------0000-----0---0---0-
741     : ['~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor0,proposer2)', '~promise(acceptor2,proposer0)', '~start(proposer1)']
742     : 0------0-000----0----0----0
742     : ['~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor0,proposer1)', '~promise(acceptor2,proposer0)', '~start(proposer2)']
743     : -0------0000-----0----0-0--
743     : ['~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor0,proposer2)', '~promise(acceptor2,proposer1)', '~start(proposer0)']
744     : -0----0--000---0------0---0
744     : ['~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor0,proposer0)', '~promise(acceptor2,proposer1)', '~start(proposer2)']
745     : --0----0-000----0------00--
745     : ['~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor0,proposer1)', '~promise(acceptor2,proposer2)', '~start(proposer0)']
746     : --0---0--000---0-------0-0-
746     : ['~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor0,proposer0)', '~promise(acceptor2,proposer2)', '~start(proposer1)']
747     : 0----0---000--------00---0-
747     : ['~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor1,proposer2)', '~promise(acceptor2,proposer0)', '~start(proposer1)']
748     : 0---0----000-------0-0----0
748     : ['~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor1,proposer1)', '~promise(acceptor2,proposer0)', '~start(proposer2)']
749     : -0---0---000--------0-0-0--
749     : ['~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor1,proposer2)', '~promise(acceptor2,proposer1)', '~start(proposer0)']
750     : -0-0-----000------0---0---0
750     : ['~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor1,proposer0)', '~promise(acceptor2,proposer1)', '~start(proposer2)']
751     : --0-0----000-------0---00--
751     : ['~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor1,proposer1)', '~promise(acceptor2,proposer2)', '~start(proposer0)']
752     : --00-----000------0----0-0-
752     : ['~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor1,proposer0)', '~promise(acceptor2,proposer2)', '~start(proposer1)']
num_forall :   0
num_exists :   0
num_literals : 0
quantified form : None
qcost : 0


=== Prime Orbit 47 =====================
size : 18
num_suborbits: 1
753 (*) : --0--00---00-----1-0--0----
753     : ['promise(acceptor0,proposer2)', '~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor1,proposer1)', '~promise(acceptor2,proposer1)']
754     : -0--0-0---00----1---0--0---
754     : ['promise(acceptor0,proposer1)', '~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor1,proposer2)', '~promise(acceptor2,proposer2)']
755     : --0--0-0--00-----10--0-----
755     : ['promise(acceptor0,proposer2)', '~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor1,proposer0)', '~promise(acceptor2,proposer0)']
756     : 0--0---0--00---1----0--0---
756     : ['promise(acceptor0,proposer0)', '~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor1,proposer2)', '~promise(acceptor2,proposer2)']
757     : -0--0---0-00----1-0--0-----
757     : ['promise(acceptor0,proposer1)', '~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor1,proposer0)', '~promise(acceptor2,proposer0)']
758     : 0--0----0-00---1---0--0----
758     : ['promise(acceptor0,proposer0)', '~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor1,proposer1)', '~promise(acceptor2,proposer1)']
759     : --00----00-0----0---1-0----
759     : ['promise(acceptor1,proposer2)', '~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor2)', '~promise(acceptor0,proposer1)', '~promise(acceptor2,proposer1)']
760     : -0-0---0-0-0-----0-1---0---
760     : ['promise(acceptor1,proposer1)', '~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor2)', '~promise(acceptor0,proposer2)', '~promise(acceptor2,proposer2)']
761     : --0-0---00-0---0----10-----
761     : ['promise(acceptor1,proposer2)', '~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor2)', '~promise(acceptor0,proposer0)', '~promise(acceptor2,proposer0)']
762     : 0---0-0--0-0-----01----0---
762     : ['promise(acceptor1,proposer0)', '~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor2)', '~promise(acceptor0,proposer2)', '~promise(acceptor2,proposer2)']
763     : -0---0-0-0-0---0---1-0-----
763     : ['promise(acceptor1,proposer1)', '~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor2)', '~promise(acceptor0,proposer0)', '~promise(acceptor2,proposer0)']
764     : 0----00--0-0----0-1---0----
764     : ['promise(acceptor1,proposer0)', '~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor2)', '~promise(acceptor0,proposer1)', '~promise(acceptor2,proposer1)']
765     : 0----0--000-----0--0---1---
765     : ['promise(acceptor2,proposer2)', '~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~promise(acceptor0,proposer1)', '~promise(acceptor1,proposer1)']
766     : 0---0--0-00------0--0-1----
766     : ['promise(acceptor2,proposer1)', '~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~promise(acceptor0,proposer2)', '~promise(acceptor1,proposer2)']
767     : -0---0--000----0--0----1---
767     : ['promise(acceptor2,proposer2)', '~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~promise(acceptor0,proposer0)', '~promise(acceptor1,proposer0)']
768     : -0-0--0--00------0--01-----
768     : ['promise(acceptor2,proposer0)', '~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~promise(acceptor0,proposer2)', '~promise(acceptor1,proposer2)']
769     : --0-0--0-00----0--0---1----
769     : ['promise(acceptor2,proposer1)', '~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~promise(acceptor0,proposer0)', '~promise(acceptor1,proposer0)']
770     : --00--0--00-----0--0-1-----
770     : ['promise(acceptor2,proposer0)', '~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~promise(acceptor0,proposer1)', '~promise(acceptor1,proposer1)']
num_forall :   0
num_exists :   0
num_literals : 0
quantified form : None
qcost : 0


=== Prime Orbit 48 =====================
size : 36
num_suborbits: 1
771 (*) : -----00---00-----1-00-0----
771     : ['promise(acceptor0,proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor1,proposer1)', '~promise(acceptor1,proposer2)', '~promise(acceptor2,proposer1)']
772     : ----0-0---00----1--00--0---
772     : ['promise(acceptor0,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor1,proposer1)', '~promise(acceptor1,proposer2)', '~promise(acceptor2,proposer2)']
773     : -----0-0--00-----10-00-----
773     : ['promise(acceptor0,proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor1,proposer0)', '~promise(acceptor1,proposer2)', '~promise(acceptor2,proposer0)']
774     : ---0---0--00---1--0-0--0---
774     : ['promise(acceptor0,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor1,proposer0)', '~promise(acceptor1,proposer2)', '~promise(acceptor2,proposer2)']
775     : ----0---0-00----1-00-0-----
775     : ['promise(acceptor0,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor1,proposer0)', '~promise(acceptor1,proposer1)', '~promise(acceptor2,proposer0)']
776     : ---0----0-00---1--00--0----
776     : ['promise(acceptor0,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor1,proposer0)', '~promise(acceptor1,proposer1)', '~promise(acceptor2,proposer1)']
777     : --0---0---00-----1-0--00---
777     : ['promise(acceptor0,proposer2)', '~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor1,proposer1)', '~promise(acceptor2,proposer1)', '~promise(acceptor2,proposer2)']
778     : -0----0---00----1---0-00---
778     : ['promise(acceptor0,proposer1)', '~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor1,proposer2)', '~promise(acceptor2,proposer1)', '~promise(acceptor2,proposer2)']
779     : --0----0--00-----10--0-0---
779     : ['promise(acceptor0,proposer2)', '~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor1,proposer0)', '~promise(acceptor2,proposer0)', '~promise(acceptor2,proposer2)']
780     : 0------0--00---1----00-0---
780     : ['promise(acceptor0,proposer0)', '~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor1,proposer2)', '~promise(acceptor2,proposer0)', '~promise(acceptor2,proposer2)']
781     : -0------0-00----1-0--00----
781     : ['promise(acceptor0,proposer1)', '~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor1,proposer0)', '~promise(acceptor2,proposer0)', '~promise(acceptor2,proposer1)']
782     : 0-------0-00---1---0-00----
782     : ['promise(acceptor0,proposer0)', '~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor1,proposer1)', '~promise(acceptor2,proposer0)', '~promise(acceptor2,proposer1)']
783     : ---0----00-0----00--1-0----
783     : ['promise(acceptor1,proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor2)', '~promise(acceptor0,proposer1)', '~promise(acceptor0,proposer2)', '~promise(acceptor2,proposer1)']
784     : ---0---0-0-0----00-1---0---
784     : ['promise(acceptor1,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor2)', '~promise(acceptor0,proposer1)', '~promise(acceptor0,proposer2)', '~promise(acceptor2,proposer2)']
785     : ----0---00-0---0-0--10-----
785     : ['promise(acceptor1,proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor2)', '~promise(acceptor0,proposer0)', '~promise(acceptor0,proposer2)', '~promise(acceptor2,proposer0)']
786     : ----0-0--0-0---0-01----0---
786     : ['promise(acceptor1,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor2)', '~promise(acceptor0,proposer0)', '~promise(acceptor0,proposer2)', '~promise(acceptor2,proposer2)']
787     : -----0-0-0-0---00--1-0-----
787     : ['promise(acceptor1,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor2)', '~promise(acceptor0,proposer0)', '~promise(acceptor0,proposer1)', '~promise(acceptor2,proposer0)']
788     : -----00--0-0---00-1---0----
788     : ['promise(acceptor1,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor2)', '~promise(acceptor0,proposer0)', '~promise(acceptor0,proposer1)', '~promise(acceptor2,proposer1)']
789     : --00-----0-0----0---1-00---
789     : ['promise(acceptor1,proposer2)', '~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor2)', '~promise(acceptor0,proposer1)', '~promise(acceptor2,proposer1)', '~promise(acceptor2,proposer2)']
790     : -0-0-----0-0-----0-1--00---
790     : ['promise(acceptor1,proposer1)', '~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor2)', '~promise(acceptor0,proposer2)', '~promise(acceptor2,proposer1)', '~promise(acceptor2,proposer2)']
791     : --0-0----0-0---0----10-0---
791     : ['promise(acceptor1,proposer2)', '~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor2)', '~promise(acceptor0,proposer0)', '~promise(acceptor2,proposer0)', '~promise(acceptor2,proposer2)']
792     : 0---0----0-0-----01--0-0---
792     : ['promise(acceptor1,proposer0)', '~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor2)', '~promise(acceptor0,proposer2)', '~promise(acceptor2,proposer0)', '~promise(acceptor2,proposer2)']
793     : -0---0---0-0---0---1-00----
793     : ['promise(acceptor1,proposer1)', '~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor2)', '~promise(acceptor0,proposer0)', '~promise(acceptor2,proposer0)', '~promise(acceptor2,proposer1)']
794     : 0----0---0-0----0-1--00----
794     : ['promise(acceptor1,proposer0)', '~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor2)', '~promise(acceptor0,proposer1)', '~promise(acceptor2,proposer0)', '~promise(acceptor2,proposer1)']
795     : 0-------000-----00-0---1---
795     : ['promise(acceptor2,proposer2)', '~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~promise(acceptor0,proposer1)', '~promise(acceptor0,proposer2)', '~promise(acceptor1,proposer1)']
796     : 0------0-00-----00--0-1----
796     : ['promise(acceptor2,proposer1)', '~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~promise(acceptor0,proposer1)', '~promise(acceptor0,proposer2)', '~promise(acceptor1,proposer2)']
797     : -0------000----0-00----1---
797     : ['promise(acceptor2,proposer2)', '~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~promise(acceptor0,proposer0)', '~promise(acceptor0,proposer2)', '~promise(acceptor1,proposer0)']
798     : -0----0--00----0-0--01-----
798     : ['promise(acceptor2,proposer0)', '~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~promise(acceptor0,proposer0)', '~promise(acceptor0,proposer2)', '~promise(acceptor1,proposer2)']
799     : --0----0-00----00-0---1----
799     : ['promise(acceptor2,proposer1)', '~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~promise(acceptor0,proposer0)', '~promise(acceptor0,proposer1)', '~promise(acceptor1,proposer0)']
800     : --0---0--00----00--0-1-----
800     : ['promise(acceptor2,proposer0)', '~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~promise(acceptor0,proposer0)', '~promise(acceptor0,proposer1)', '~promise(acceptor1,proposer1)']
801     : 0----0---00-----0--00--1---
801     : ['promise(acceptor2,proposer2)', '~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~promise(acceptor0,proposer1)', '~promise(acceptor1,proposer1)', '~promise(acceptor1,proposer2)']
802     : 0---0----00------0-00-1----
802     : ['promise(acceptor2,proposer1)', '~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~promise(acceptor0,proposer2)', '~promise(acceptor1,proposer1)', '~promise(acceptor1,proposer2)']
803     : -0---0---00----0--0-0--1---
803     : ['promise(acceptor2,proposer2)', '~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~promise(acceptor0,proposer0)', '~promise(acceptor1,proposer0)', '~promise(acceptor1,proposer2)']
804     : -0-0-----00------00-01-----
804     : ['promise(acceptor2,proposer0)', '~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~promise(acceptor0,proposer2)', '~promise(acceptor1,proposer0)', '~promise(acceptor1,proposer2)']
805     : --0-0----00----0--00--1----
805     : ['promise(acceptor2,proposer1)', '~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~promise(acceptor0,proposer0)', '~promise(acceptor1,proposer0)', '~promise(acceptor1,proposer1)']
806     : --00-----00-----0-00-1-----
806     : ['promise(acceptor2,proposer0)', '~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~promise(acceptor0,proposer1)', '~promise(acceptor1,proposer0)', '~promise(acceptor1,proposer1)']
num_forall :   0
num_exists :   0
num_literals : 0
quantified form : None
qcost : 0


=== Prime Orbit 49 =====================
size : 3
num_suborbits: 1
807 (*) : 0-00-00-0000-------------0-
807     : ['~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~start(proposer1)']
808     : 00-00-00-000--------------0
808     : ['~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~start(proposer2)']
809     : -00-00-00000------------0--
809     : ['~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~start(proposer0)']
num_forall :   0
num_exists :   0
num_literals : 0
quantified form : None
qcost : 0


=== Prime Orbit 50 =====================
size : 18
num_suborbits: 1
810 (*) : ----0-0--000---0-0-00--0---
810     : ['~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor0,proposer0)', '~promise(acceptor0,proposer2)', '~promise(acceptor1,proposer1)', '~promise(acceptor1,proposer2)', '~promise(acceptor2,proposer2)']
811     : -----00--000---00--00-0----
811     : ['~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor0,proposer0)', '~promise(acceptor0,proposer1)', '~promise(acceptor1,proposer1)', '~promise(acceptor1,proposer2)', '~promise(acceptor2,proposer1)']
812     : ---0---0-000----000-0--0---
812     : ['~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor0,proposer1)', '~promise(acceptor0,proposer2)', '~promise(acceptor1,proposer0)', '~promise(acceptor1,proposer2)', '~promise(acceptor2,proposer2)']
813     : -----0-0-000---00-0-00-----
813     : ['~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor0,proposer0)', '~promise(acceptor0,proposer1)', '~promise(acceptor1,proposer0)', '~promise(acceptor1,proposer2)', '~promise(acceptor2,proposer0)']
814     : ---0----0000----0000--0----
814     : ['~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor0,proposer1)', '~promise(acceptor0,proposer2)', '~promise(acceptor1,proposer0)', '~promise(acceptor1,proposer1)', '~promise(acceptor2,proposer1)']
815     : ----0---0000---0-000-0-----
815     : ['~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor0,proposer0)', '~promise(acceptor0,proposer2)', '~promise(acceptor1,proposer0)', '~promise(acceptor1,proposer1)', '~promise(acceptor2,proposer0)']
816     : -0----0--000---0-0--0-00---
816     : ['~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor0,proposer0)', '~promise(acceptor0,proposer2)', '~promise(acceptor1,proposer2)', '~promise(acceptor2,proposer1)', '~promise(acceptor2,proposer2)']
817     : --0---0--000---00--0--00---
817     : ['~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor0,proposer0)', '~promise(acceptor0,proposer1)', '~promise(acceptor1,proposer1)', '~promise(acceptor2,proposer1)', '~promise(acceptor2,proposer2)']
818     : 0------0-000----00--00-0---
818     : ['~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor0,proposer1)', '~promise(acceptor0,proposer2)', '~promise(acceptor1,proposer2)', '~promise(acceptor2,proposer0)', '~promise(acceptor2,proposer2)']
819     : --0----0-000---00-0--0-0---
819     : ['~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor0,proposer0)', '~promise(acceptor0,proposer1)', '~promise(acceptor1,proposer0)', '~promise(acceptor2,proposer0)', '~promise(acceptor2,proposer2)']
820     : 0-------0000----00-0-00----
820     : ['~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor0,proposer1)', '~promise(acceptor0,proposer2)', '~promise(acceptor1,proposer1)', '~promise(acceptor2,proposer0)', '~promise(acceptor2,proposer1)']
821     : -0------0000---0-00--00----
821     : ['~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor0,proposer0)', '~promise(acceptor0,proposer2)', '~promise(acceptor1,proposer0)', '~promise(acceptor2,proposer0)', '~promise(acceptor2,proposer1)']
822     : -0-0-----000-----00-0-00---
822     : ['~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor0,proposer2)', '~promise(acceptor1,proposer0)', '~promise(acceptor1,proposer2)', '~promise(acceptor2,proposer1)', '~promise(acceptor2,proposer2)']
823     : --00-----000----0-00--00---
823     : ['~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor0,proposer1)', '~promise(acceptor1,proposer0)', '~promise(acceptor1,proposer1)', '~promise(acceptor2,proposer1)', '~promise(acceptor2,proposer2)']
824     : 0---0----000-----0-000-0---
824     : ['~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor0,proposer2)', '~promise(acceptor1,proposer1)', '~promise(acceptor1,proposer2)', '~promise(acceptor2,proposer0)', '~promise(acceptor2,proposer2)']
825     : --0-0----000---0--00-0-0---
825     : ['~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor0,proposer0)', '~promise(acceptor1,proposer0)', '~promise(acceptor1,proposer1)', '~promise(acceptor2,proposer0)', '~promise(acceptor2,proposer2)']
826     : 0----0---000----0--0000----
826     : ['~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor0,proposer1)', '~promise(acceptor1,proposer1)', '~promise(acceptor1,proposer2)', '~promise(acceptor2,proposer0)', '~promise(acceptor2,proposer1)']
827     : -0---0---000---0--0-000----
827     : ['~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor0,proposer0)', '~promise(acceptor1,proposer0)', '~promise(acceptor1,proposer2)', '~promise(acceptor2,proposer0)', '~promise(acceptor2,proposer1)']
num_forall :   0
num_exists :   0
num_literals : 0
quantified form : None
qcost : 0


=== Prime Orbit 51 =====================
size : 18
num_suborbits: 1
828 (*) : -0--0-0--000---0-0--0--0---
828     : ['~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor0,proposer0)', '~promise(acceptor0,proposer2)', '~promise(acceptor1,proposer2)', '~promise(acceptor2,proposer2)']
829     : --0--00--000---00--0--0----
829     : ['~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor0,proposer0)', '~promise(acceptor0,proposer1)', '~promise(acceptor1,proposer1)', '~promise(acceptor2,proposer1)']
830     : 0--0---0-000----00--0--0---
830     : ['~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor0,proposer1)', '~promise(acceptor0,proposer2)', '~promise(acceptor1,proposer2)', '~promise(acceptor2,proposer2)']
831     : --0--0-0-000---00-0--0-----
831     : ['~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor0,proposer0)', '~promise(acceptor0,proposer1)', '~promise(acceptor1,proposer0)', '~promise(acceptor2,proposer0)']
832     : 0--0----0000----00-0--0----
832     : ['~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor0,proposer1)', '~promise(acceptor0,proposer2)', '~promise(acceptor1,proposer1)', '~promise(acceptor2,proposer1)']
833     : -0--0---0000---0-00--0-----
833     : ['~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor0,proposer0)', '~promise(acceptor0,proposer2)', '~promise(acceptor1,proposer0)', '~promise(acceptor2,proposer0)']
834     : -0-0---0-000-----00-0--0---
834     : ['~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor0,proposer2)', '~promise(acceptor1,proposer0)', '~promise(acceptor1,proposer2)', '~promise(acceptor2,proposer2)']
835     : --00----0000----0-00--0----
835     : ['~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor0,proposer1)', '~promise(acceptor1,proposer0)', '~promise(acceptor1,proposer1)', '~promise(acceptor2,proposer1)']
836     : 0---0-0--000-----0-00--0---
836     : ['~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor0,proposer2)', '~promise(acceptor1,proposer1)', '~promise(acceptor1,proposer2)', '~promise(acceptor2,proposer2)']
837     : --0-0---0000---0--00-0-----
837     : ['~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor0,proposer0)', '~promise(acceptor1,proposer0)', '~promise(acceptor1,proposer1)', '~promise(acceptor2,proposer0)']
838     : 0----00--000----0--00-0----
838     : ['~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor0,proposer1)', '~promise(acceptor1,proposer1)', '~promise(acceptor1,proposer2)', '~promise(acceptor2,proposer1)']
839     : -0---0-0-000---0--0-00-----
839     : ['~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor0,proposer0)', '~promise(acceptor1,proposer0)', '~promise(acceptor1,proposer2)', '~promise(acceptor2,proposer0)']
840     : 0---0--0-000-----0--00-0---
840     : ['~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor0,proposer2)', '~promise(acceptor1,proposer2)', '~promise(acceptor2,proposer0)', '~promise(acceptor2,proposer2)']
841     : 0----0--0000----0--0-00----
841     : ['~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor0,proposer1)', '~promise(acceptor1,proposer1)', '~promise(acceptor2,proposer0)', '~promise(acceptor2,proposer1)']
842     : -0-0--0--000-----0--0-00---
842     : ['~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor0,proposer2)', '~promise(acceptor1,proposer2)', '~promise(acceptor2,proposer1)', '~promise(acceptor2,proposer2)']
843     : -0---0--0000---0--0--00----
843     : ['~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor0,proposer0)', '~promise(acceptor1,proposer0)', '~promise(acceptor2,proposer0)', '~promise(acceptor2,proposer1)']
844     : --00--0--000----0--0--00---
844     : ['~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor0,proposer1)', '~promise(acceptor1,proposer1)', '~promise(acceptor2,proposer1)', '~promise(acceptor2,proposer2)']
845     : --0-0--0-000---0--0--0-0---
845     : ['~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor0,proposer0)', '~promise(acceptor1,proposer0)', '~promise(acceptor2,proposer0)', '~promise(acceptor2,proposer2)']
num_forall :   0
num_exists :   0
num_literals : 0
quantified form : None
qcost : 0


=== Prime Orbit 52 =====================
size : 3
num_suborbits: 1
846 (*) : 00-00-00-000-----0--0--0---
846     : ['~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor0,proposer2)', '~promise(acceptor1,proposer2)', '~promise(acceptor2,proposer2)']
847     : 0-00-00-0000----0--0--0----
847     : ['~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor0,proposer1)', '~promise(acceptor1,proposer1)', '~promise(acceptor2,proposer1)']
848     : -00-00-00000---0--0--0-----
848     : ['~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor0,proposer0)', '~promise(acceptor1,proposer0)', '~promise(acceptor2,proposer0)']
num_forall :   0
num_exists :   0
num_literals : 0
quantified form : None
qcost : 0



[PRIME NOTE]: number of orbits after merging: 53

[PRIME NOTE]: number of orbits before merging: 55

[PRIME NOTE]: number of primes: 849

[QRM NOTE]: Time elapsed since start: 8.154 seconds

[QRM NOTE]: Time elapsed since last: 0.441 seconds

[QRM NOTE]: Peak memory: 2516638 bytes


=========================================================================================================

	[RED]: PRIME REDUCTION on [ivybench/sym_quorum/ivy/simple-election: acceptor=3,proposer=3]

=========================================================================================================

definition primes: {2, 34, 4, 6, 41, 11, 12, 44, 47, 48, 17, 50, 51, 52, 27, 29}


New level: 0
 pending : [0, 1, 3, 5, 7, 8, 9, 10, 13, 14, 15, 16, 18, 19, 20, 21, 22, 23, 24, 25, 26, 28, 30, 31, 32, 33, 35, 36, 37, 38, 39, 40, 42, 43, 45, 46, 49]
 solution : []


Before reduction : 
 pending  : [0, 1, 3, 5, 7, 8, 9, 10, 13, 14, 15, 16, 18, 19, 20, 21, 22, 23, 24, 25, 26, 28, 30, 31, 32, 33, 35, 36, 37, 38, 39, 40, 42, 43, 45, 46, 49]
 solution : []

Essensial at level 0 : {0}

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, 0), (2, -1), (3, 134217728), (4, -1), (5, 1048576), (6, -1), (7, 0), (8, 1048576), (9, 17179869184), (10, 17179869184), (11, -1), (12, -1), (13, 67108864), (14, 33554432), (15, 1572864), (16, 524288), (17, -1), (18, 2147483648), (19, 1073741824), (20, 16777216), (21, 8388608), (22, 262144), (23, 4194304), (24, 134217728), (25, 1073741824), (26, 4294967296), (27, -1), (28, 4294967296), (29, -1), (30, 1048576), (31, 4194304), (32, 32768), (33, 16384), (34, -1), (35, 2147483648), (36, 134217728), (37, 268435456), (38, 16384), (39, 1073741824), (40, 4194304), (41, -1), (42, 524288), (43, 524288), (44, -1), (45, 67108864), (46, 16777216), (47, -1), (48, -1), (49, 67108864), (50, -1), (51, -1), (52, -1)]

Covered at level 0 : {1, 7}

After reduction : 
 pending  : [3, 5, 8, 9, 10, 13, 14, 15, 16, 18, 19, 20, 21, 22, 23, 24, 25, 26, 28, 30, 31, 32, 33, 35, 36, 37, 38, 39, 40, 42, 43, 45, 46, 49]
 solution : [0]


Before reduction : 
 pending  : [3, 5, 8, 9, 10, 13, 14, 15, 16, 18, 19, 20, 21, 22, 23, 24, 25, 26, 28, 30, 31, 32, 33, 35, 36, 37, 38, 39, 40, 42, 43, 45, 46, 49]
 solution : [0]

Essensial at level 0 : set()

Before removed
 coverage : [(0, -1), (1, 0), (2, -1), (3, 134217728), (4, -1), (5, 1048576), (6, -1), (7, 0), (8, 1048576), (9, 17179869184), (10, 17179869184), (11, -1), (12, -1), (13, 67108864), (14, 33554432), (15, 1572864), (16, 524288), (17, -1), (18, 2147483648), (19, 1073741824), (20, 16777216), (21, 8388608), (22, 262144), (23, 4194304), (24, 134217728), (25, 1073741824), (26, 4294967296), (27, -1), (28, 4294967296), (29, -1), (30, 1048576), (31, 4194304), (32, 32768), (33, 16384), (34, -1), (35, 2147483648), (36, 134217728), (37, 268435456), (38, 16384), (39, 1073741824), (40, 4194304), (41, -1), (42, 524288), (43, 524288), (44, -1), (45, 67108864), (46, 16777216), (47, -1), (48, -1), (49, 67108864), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 134217728), (4, -1), (5, 1048576), (6, -1), (7, -1), (8, 1048576), (9, 17179869184), (10, 17179869184), (11, -1), (12, -1), (13, 67108864), (14, 33554432), (15, 1572864), (16, 524288), (17, -1), (18, 2147483648), (19, 1073741824), (20, 16777216), (21, 8388608), (22, 262144), (23, 4194304), (24, 134217728), (25, 1073741824), (26, 4294967296), (27, -1), (28, 4294967296), (29, -1), (30, 1048576), (31, 4194304), (32, 32768), (33, 16384), (34, -1), (35, 2147483648), (36, 134217728), (37, 268435456), (38, 16384), (39, 1073741824), (40, 4194304), (41, -1), (42, 524288), (43, 524288), (44, -1), (45, 67108864), (46, 16777216), (47, -1), (48, -1), (49, 67108864), (50, -1), (51, -1), (52, -1)]

Covered at level 0 : set()

After reduction : 
 pending  : [3, 5, 8, 9, 10, 13, 14, 15, 16, 18, 19, 20, 21, 22, 23, 24, 25, 26, 28, 30, 31, 32, 33, 35, 36, 37, 38, 39, 40, 42, 43, 45, 46, 49]
 solution : [0]

[QRM NOTE]: Time elapsed since start: 8.249 seconds

[QRM NOTE]: Time elapsed since last: 0.094 seconds

[QRM NOTE]: Peak memory: 1306985 bytes


=============================================================================================================

	[QI]: Quantifier Inference on [ivybench/sym_quorum/ivy/simple-election: acceptor=3,proposer=3]

=============================================================================================================


---------- quantifier_inference ----------


=== Prime Orbit 0 =====================
size : 9
num_suborbits: 1
0 (*) : ---------------------1-1---
0     : ['promise(acceptor2,proposer0)', 'promise(acceptor2,proposer2)']
1     : ---------------------11----
1     : ['promise(acceptor2,proposer0)', 'promise(acceptor2,proposer1)']
2     : ----------------------11---
2     : ['promise(acceptor2,proposer1)', 'promise(acceptor2,proposer2)']
3     : ------------------1-1------
3     : ['promise(acceptor1,proposer0)', 'promise(acceptor1,proposer2)']
4     : ------------------11-------
4     : ['promise(acceptor1,proposer0)', 'promise(acceptor1,proposer1)']
5     : -------------------11------
5     : ['promise(acceptor1,proposer1)', 'promise(acceptor1,proposer2)']
6     : ---------------1-1---------
6     : ['promise(acceptor0,proposer0)', 'promise(acceptor0,proposer2)']
7     : ---------------11----------
7     : ['promise(acceptor0,proposer0)', 'promise(acceptor0,proposer1)']
8     : ----------------11---------
8     : ['promise(acceptor0,proposer1)', 'promise(acceptor0,proposer2)']
num_forall :   0
num_exists :   0
num_literals : 0
quantified form : None
qcost : 0




---------- QPrime ----------


---------- ConstArgBinding ----------

terms: ['promise(acceptor2,proposer0)', 'promise(acceptor2,proposer2)']

sign_func_name2args: {'0$promise': [(Const('acceptor2', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Const('proposer0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))), (Const('acceptor2', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Const('proposer2', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))))]}

const2sigs: {Const('acceptor2', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))): [acceptor$0$promise$0$0, acceptor$0$promise$0$1], Const('proposer0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))): [proposer$0$promise$1$0], Const('proposer2', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))): [proposer$0$promise$1$1]}

sig2const: {'acceptor$0$promise$0$0': Const('acceptor2', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), 'proposer$0$promise$1$0': Const('proposer0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))), 'acceptor$0$promise$0$1': Const('acceptor2', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), 'proposer$0$promise$1$1': Const('proposer2', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))}


---------- ArgPartition ----------

sort2class_sigs: {EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')): [acceptor$0$promise$0$0; acceptor$0$promise$0$1], EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')): [proposer$0$promise$1$0, proposer$0$promise$1$1]}

sort2part_sig: {EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')): acceptor$0$promise$0$0; acceptor$0$promise$0$1, EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')): proposer$0$promise$1$0 | proposer$0$promise$1$1}

part_sig: ('acceptor$0$promise$0$0; acceptor$0$promise$0$1', 'proposer$0$promise$1$0 | proposer$0$promise$1$1')


---------- SigGenerator ----------

terms:  ['promise(acceptor2,proposer0)', 'promise(acceptor2,proposer2)']

func_name2symbol:  {'promise': Const('promise', FunctionSort(EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')), EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')), BooleanSort()))}

func_name2args_sort:  {'promise': (EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')), EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))}

sign_func_name2count:  {'0$promise': 2}


---------- ProductArgPartition ----------

sort2class_sigs: {EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')): [acceptor$0$promise$0$0; acceptor$0$promise$0$1], EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')): [proposer$0$promise$1$0, proposer$0$promise$1$1]}

sort2part_sig: {EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')): acceptor$0$promise$0$0; acceptor$0$promise$0$1, EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')): proposer$0$promise$1$0 | proposer$0$promise$1$1}

	sort: acceptor

	identical_classes: {'acceptor$0$promise$0; acceptor$0$promise$0': [acceptor$0$promise$0$0; acceptor$0$promise$0$1]}

	identical_single_classes: {'acceptor$0$promise$0; acceptor$0$promise$0': acceptor$0$promise$0$0; acceptor$0$promise$0$1}

	identical_multi_classes: {}

	sort: proposer

	identical_classes: {'proposer$0$promise$1': [proposer$0$promise$1$0, proposer$0$promise$1$1]}

	identical_single_classes: {}

	identical_multi_classes: {'proposer$0$promise$1': [proposer$0$promise$1$0, proposer$0$promise$1$1]}


---------- QInference: _set_sort_to_quantifier_mode ----------

quantifier mode: acceptor: QuantifierMode.forall

quantifier mode: proposer: QuantifierMode.forall


---------- QInference: _set_constraint_mode ----------

constraint mode: ConstraintMode.no_merge


---------- QFormula: _set_qvars ----------

forall_qvars: {Var('PROPOSER0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))), Var('ACCEPTOR0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Var('PROPOSER1', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))}

exists_qvars: set()


---------- QFormula: _set_signed_func_name_to_args ----------

signed_func_name2args: {'0$promise': [[Var('ACCEPTOR0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Var('PROPOSER0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))], [Var('ACCEPTOR0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Var('PROPOSER1', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))]]}


---------- QFormula: _set_qterms ----------

qterms: ['promise(ACCEPTOR0,PROPOSER0)', 'promise(ACCEPTOR0,PROPOSER1)']


---------- QFormula: get_qclause ----------

qclause: forall PROPOSER1,PROPOSER0,ACCEPTOR0. ~promise(ACCEPTOR0,PROPOSER0) | ~promise(ACCEPTOR0,PROPOSER1) | PROPOSER0 = PROPOSER1


=== Prime Orbit 3 =====================
size : 9
num_suborbits: 1
54 (*) : ---------------------1--0--
54     : ['promise(acceptor2,proposer0)', '~start(proposer0)']
55     : ----------------------1--0-
55     : ['promise(acceptor2,proposer1)', '~start(proposer1)']
56     : -----------------------1--0
56     : ['promise(acceptor2,proposer2)', '~start(proposer2)']
57     : ------------------1-----0--
57     : ['promise(acceptor1,proposer0)', '~start(proposer0)']
58     : -------------------1-----0-
58     : ['promise(acceptor1,proposer1)', '~start(proposer1)']
59     : --------------------1-----0
59     : ['promise(acceptor1,proposer2)', '~start(proposer2)']
60     : ---------------1--------0--
60     : ['promise(acceptor0,proposer0)', '~start(proposer0)']
61     : ----------------1--------0-
61     : ['promise(acceptor0,proposer1)', '~start(proposer1)']
62     : -----------------1--------0
62     : ['promise(acceptor0,proposer2)', '~start(proposer2)']
num_forall :   0
num_exists :   0
num_literals : 0
quantified form : None
qcost : 0




---------- QPrime ----------


---------- ConstArgBinding ----------

terms: ['promise(acceptor2,proposer0)', '~start(proposer0)']

sign_func_name2args: {'0$promise': [(Const('acceptor2', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Const('proposer0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))))], '1$start': [(Const('proposer0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))),)]}

const2sigs: {Const('acceptor2', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))): [acceptor$0$promise$0$0], Const('proposer0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))): [proposer$0$promise$1$0, proposer$1$start$0$0]}

sig2const: {'acceptor$0$promise$0$0': Const('acceptor2', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), 'proposer$0$promise$1$0': Const('proposer0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))), 'proposer$1$start$0$0': Const('proposer0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))}


---------- ArgPartition ----------

sort2class_sigs: {EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')): [acceptor$0$promise$0$0], EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')): [proposer$0$promise$1$0; proposer$1$start$0$0]}

sort2part_sig: {EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')): acceptor$0$promise$0$0, EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')): proposer$0$promise$1$0; proposer$1$start$0$0}

part_sig: ('acceptor$0$promise$0$0', 'proposer$0$promise$1$0; proposer$1$start$0$0')


---------- SigGenerator ----------

terms:  ['promise(acceptor2,proposer0)', '~start(proposer0)']

func_name2symbol:  {'promise': Const('promise', FunctionSort(EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')), EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')), BooleanSort())), 'start': Const('start', FunctionSort(EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')), BooleanSort()))}

func_name2args_sort:  {'promise': (EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')), EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))), 'start': (EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')),)}

sign_func_name2count:  {'0$promise': 1, '1$start': 1}


---------- ProductArgPartition ----------

sort2class_sigs: {EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')): [acceptor$0$promise$0$0], EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')): [proposer$0$promise$1$0; proposer$1$start$0$0]}

sort2part_sig: {EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')): acceptor$0$promise$0$0, EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')): proposer$0$promise$1$0; proposer$1$start$0$0}

	sort: acceptor

	identical_classes: {'acceptor$0$promise$0': [acceptor$0$promise$0$0]}

	identical_single_classes: {'acceptor$0$promise$0': acceptor$0$promise$0$0}

	identical_multi_classes: {}

	sort: proposer

	identical_classes: {'proposer$0$promise$1; proposer$1$start$0': [proposer$0$promise$1$0; proposer$1$start$0$0]}

	identical_single_classes: {'proposer$0$promise$1; proposer$1$start$0': proposer$0$promise$1$0; proposer$1$start$0$0}

	identical_multi_classes: {}


---------- QInference: _set_sort_to_quantifier_mode ----------

quantifier mode: acceptor: QuantifierMode.forall

quantifier mode: proposer: QuantifierMode.forall


---------- QInference: _set_constraint_mode ----------

constraint mode: ConstraintMode.no_merge


---------- QFormula: _set_qvars ----------

forall_qvars: {Var('PROPOSER0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))), Var('ACCEPTOR0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')))}

exists_qvars: set()


---------- QFormula: _set_signed_func_name_to_args ----------

signed_func_name2args: {'0$promise': [[Var('ACCEPTOR0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Var('PROPOSER0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))]], '1$start': [[Var('PROPOSER0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))]]}


---------- QFormula: _set_qterms ----------

qterms: ['promise(ACCEPTOR0,PROPOSER0)', '~start(PROPOSER0)']


---------- QFormula: get_qclause ----------

qclause: forall PROPOSER0,ACCEPTOR0. ~promise(ACCEPTOR0,PROPOSER0) | start(PROPOSER0)


=== Prime Orbit 5 =====================
size : 18
num_suborbits: 1
81 (*) : --------1----1-------------
81     : ['chosenAt(quorum__acceptor1_acceptor2,proposer2)', 'leader(proposer1)']
82     : -------1------1------------
82     : ['chosenAt(quorum__acceptor1_acceptor2,proposer1)', 'leader(proposer2)']
83     : --------1---1--------------
83     : ['chosenAt(quorum__acceptor1_acceptor2,proposer2)', 'leader(proposer0)']
84     : ------1-------1------------
84     : ['chosenAt(quorum__acceptor1_acceptor2,proposer0)', 'leader(proposer2)']
85     : -------1----1--------------
85     : ['chosenAt(quorum__acceptor1_acceptor2,proposer1)', 'leader(proposer0)']
86     : ------1------1-------------
86     : ['chosenAt(quorum__acceptor1_acceptor2,proposer0)', 'leader(proposer1)']
87     : -----1-------1-------------
87     : ['chosenAt(quorum__acceptor0_acceptor2,proposer2)', 'leader(proposer1)']
88     : ----1---------1------------
88     : ['chosenAt(quorum__acceptor0_acceptor2,proposer1)', 'leader(proposer2)']
89     : -----1------1--------------
89     : ['chosenAt(quorum__acceptor0_acceptor2,proposer2)', 'leader(proposer0)']
90     : ---1----------1------------
90     : ['chosenAt(quorum__acceptor0_acceptor2,proposer0)', 'leader(proposer2)']
91     : ----1-------1--------------
91     : ['chosenAt(quorum__acceptor0_acceptor2,proposer1)', 'leader(proposer0)']
92     : ---1---------1-------------
92     : ['chosenAt(quorum__acceptor0_acceptor2,proposer0)', 'leader(proposer1)']
93     : --1----------1-------------
93     : ['chosenAt(quorum__acceptor0_acceptor1,proposer2)', 'leader(proposer1)']
94     : -1------------1------------
94     : ['chosenAt(quorum__acceptor0_acceptor1,proposer1)', 'leader(proposer2)']
95     : --1---------1--------------
95     : ['chosenAt(quorum__acceptor0_acceptor1,proposer2)', 'leader(proposer0)']
96     : 1-------------1------------
96     : ['chosenAt(quorum__acceptor0_acceptor1,proposer0)', 'leader(proposer2)']
97     : -1----------1--------------
97     : ['chosenAt(quorum__acceptor0_acceptor1,proposer1)', 'leader(proposer0)']
98     : 1------------1-------------
98     : ['chosenAt(quorum__acceptor0_acceptor1,proposer0)', 'leader(proposer1)']
num_forall :   0
num_exists :   0
num_literals : 0
quantified form : None
qcost : 0




---------- QPrime ----------


---------- ConstArgBinding ----------

terms: ['chosenAt(quorum__acceptor1_acceptor2,proposer2)', 'leader(proposer1)']

sign_func_name2args: {'0$chosenAt': [(Const('quorum__acceptor1_acceptor2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), Const('proposer2', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))))], '0$leader': [(Const('proposer1', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))),)]}

const2sigs: {Const('quorum__acceptor1_acceptor2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))): [quorum$0$chosenAt$0$0], Const('proposer2', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))): [proposer$0$chosenAt$1$0], Const('proposer1', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))): [proposer$0$leader$0$0]}

sig2const: {'quorum$0$chosenAt$0$0': Const('quorum__acceptor1_acceptor2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), 'proposer$0$chosenAt$1$0': Const('proposer2', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))), 'proposer$0$leader$0$0': Const('proposer1', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))}


---------- ArgPartition ----------

sort2class_sigs: {EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')): [quorum$0$chosenAt$0$0], EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')): [proposer$0$chosenAt$1$0, proposer$0$leader$0$0]}

sort2part_sig: {EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')): quorum$0$chosenAt$0$0, EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')): proposer$0$chosenAt$1$0 | proposer$0$leader$0$0}

part_sig: ('proposer$0$chosenAt$1$0 | proposer$0$leader$0$0', 'quorum$0$chosenAt$0$0')


---------- SigGenerator ----------

terms:  ['chosenAt(quorum__acceptor1_acceptor2,proposer2)', 'leader(proposer1)']

func_name2symbol:  {'chosenAt': Const('chosenAt', FunctionSort(EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')), EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')), BooleanSort())), 'leader': Const('leader', FunctionSort(EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')), BooleanSort()))}

func_name2args_sort:  {'chosenAt': (EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')), EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))), 'leader': (EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')),)}

sign_func_name2count:  {'0$chosenAt': 1, '0$leader': 1}


---------- ProductArgPartition ----------

sort2class_sigs: {EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')): [quorum$0$chosenAt$0$0], EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')): [proposer$0$chosenAt$1$0, proposer$0$leader$0$0]}

sort2part_sig: {EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')): quorum$0$chosenAt$0$0, EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')): proposer$0$chosenAt$1$0 | proposer$0$leader$0$0}

	sort: quorum

	identical_classes: {'quorum$0$chosenAt$0': [quorum$0$chosenAt$0$0]}

	identical_single_classes: {'quorum$0$chosenAt$0': quorum$0$chosenAt$0$0}

	identical_multi_classes: {}

	sort: proposer

	identical_classes: {'proposer$0$chosenAt$1': [proposer$0$chosenAt$1$0], 'proposer$0$leader$0': [proposer$0$leader$0$0]}

	identical_single_classes: {'proposer$0$chosenAt$1': proposer$0$chosenAt$1$0, 'proposer$0$leader$0': proposer$0$leader$0$0}

	identical_multi_classes: {}


---------- QInference: _set_sort_to_quantifier_mode ----------

quantifier mode: quorum: QuantifierMode.forall

quantifier mode: proposer: QuantifierMode.forall


---------- QInference: _set_constraint_mode ----------

constraint mode: ConstraintMode.no_merge


---------- QFormula: _set_qvars ----------

forall_qvars: {Var('PROPOSER0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))), Var('PROPOSER1', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))), Var('QUORUM0', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')))}

exists_qvars: set()


---------- QFormula: _set_signed_func_name_to_args ----------

signed_func_name2args: {'0$chosenAt': [[Var('QUORUM0', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), Var('PROPOSER0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))]], '0$leader': [[Var('PROPOSER1', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))]]}


---------- QFormula: _set_qterms ----------

qterms: ['chosenAt(QUORUM0,PROPOSER0)', 'leader(PROPOSER1)']


---------- QFormula: get_qclause ----------

qclause: forall PROPOSER1,QUORUM0,PROPOSER0. ~chosenAt(QUORUM0,PROPOSER0) | ~leader(PROPOSER1) | PROPOSER0 = PROPOSER1


=== Prime Orbit 8 =====================
size : 9
num_suborbits: 1
135 (*) : --------1-----------------0
135     : ['chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~start(proposer2)']
136     : -------1-----------------0-
136     : ['chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~start(proposer1)']
137     : ------1-----------------0--
137     : ['chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~start(proposer0)']
138     : -----1--------------------0
138     : ['chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~start(proposer2)']
139     : ----1--------------------0-
139     : ['chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~start(proposer1)']
140     : ---1--------------------0--
140     : ['chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~start(proposer0)']
141     : --1-----------------------0
141     : ['chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~start(proposer2)']
142     : -1-----------------------0-
142     : ['chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~start(proposer1)']
143     : 1-----------------------0--
143     : ['chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~start(proposer0)']
num_forall :   0
num_exists :   0
num_literals : 0
quantified form : None
qcost : 0




---------- QPrime ----------


---------- ConstArgBinding ----------

terms: ['chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~start(proposer2)']

sign_func_name2args: {'0$chosenAt': [(Const('quorum__acceptor1_acceptor2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), Const('proposer2', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))))], '1$start': [(Const('proposer2', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))),)]}

const2sigs: {Const('quorum__acceptor1_acceptor2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))): [quorum$0$chosenAt$0$0], Const('proposer2', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))): [proposer$0$chosenAt$1$0, proposer$1$start$0$0]}

sig2const: {'quorum$0$chosenAt$0$0': Const('quorum__acceptor1_acceptor2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), 'proposer$0$chosenAt$1$0': Const('proposer2', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))), 'proposer$1$start$0$0': Const('proposer2', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))}


---------- ArgPartition ----------

sort2class_sigs: {EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')): [quorum$0$chosenAt$0$0], EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')): [proposer$0$chosenAt$1$0; proposer$1$start$0$0]}

sort2part_sig: {EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')): quorum$0$chosenAt$0$0, EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')): proposer$0$chosenAt$1$0; proposer$1$start$0$0}

part_sig: ('proposer$0$chosenAt$1$0; proposer$1$start$0$0', 'quorum$0$chosenAt$0$0')


---------- SigGenerator ----------

terms:  ['chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~start(proposer2)']

func_name2symbol:  {'chosenAt': Const('chosenAt', FunctionSort(EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')), EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')), BooleanSort())), 'start': Const('start', FunctionSort(EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')), BooleanSort()))}

func_name2args_sort:  {'chosenAt': (EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')), EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))), 'start': (EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')),)}

sign_func_name2count:  {'0$chosenAt': 1, '1$start': 1}


---------- ProductArgPartition ----------

sort2class_sigs: {EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')): [quorum$0$chosenAt$0$0], EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')): [proposer$0$chosenAt$1$0; proposer$1$start$0$0]}

sort2part_sig: {EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')): quorum$0$chosenAt$0$0, EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')): proposer$0$chosenAt$1$0; proposer$1$start$0$0}

	sort: quorum

	identical_classes: {'quorum$0$chosenAt$0': [quorum$0$chosenAt$0$0]}

	identical_single_classes: {'quorum$0$chosenAt$0': quorum$0$chosenAt$0$0}

	identical_multi_classes: {}

	sort: proposer

	identical_classes: {'proposer$0$chosenAt$1; proposer$1$start$0': [proposer$0$chosenAt$1$0; proposer$1$start$0$0]}

	identical_single_classes: {'proposer$0$chosenAt$1; proposer$1$start$0': proposer$0$chosenAt$1$0; proposer$1$start$0$0}

	identical_multi_classes: {}


---------- QInference: _set_sort_to_quantifier_mode ----------

quantifier mode: quorum: QuantifierMode.forall

quantifier mode: proposer: QuantifierMode.forall


---------- QInference: _set_constraint_mode ----------

constraint mode: ConstraintMode.no_merge


---------- QFormula: _set_qvars ----------

forall_qvars: {Var('PROPOSER0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))), Var('QUORUM0', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')))}

exists_qvars: set()


---------- QFormula: _set_signed_func_name_to_args ----------

signed_func_name2args: {'0$chosenAt': [[Var('QUORUM0', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), Var('PROPOSER0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))]], '1$start': [[Var('PROPOSER0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))]]}


---------- QFormula: _set_qterms ----------

qterms: ['chosenAt(QUORUM0,PROPOSER0)', '~start(PROPOSER0)']


---------- QFormula: get_qclause ----------

qclause: forall QUORUM0,PROPOSER0. ~chosenAt(QUORUM0,PROPOSER0) | start(PROPOSER0)


=== Prime Orbit 9 =====================
size : 3
num_suborbits: 1
153 (*) : --------------1-----------0
153     : ['leader(proposer2)', '~start(proposer2)']
154     : -------------1-----------0-
154     : ['leader(proposer1)', '~start(proposer1)']
155     : ------------1-----------0--
155     : ['leader(proposer0)', '~start(proposer0)']
num_forall :   0
num_exists :   0
num_literals : 0
quantified form : None
qcost : 0




---------- QPrime ----------


---------- ConstArgBinding ----------

terms: ['leader(proposer2)', '~start(proposer2)']

sign_func_name2args: {'0$leader': [(Const('proposer2', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))),)], '1$start': [(Const('proposer2', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))),)]}

const2sigs: {Const('proposer2', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))): [proposer$0$leader$0$0, proposer$1$start$0$0]}

sig2const: {'proposer$0$leader$0$0': Const('proposer2', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))), 'proposer$1$start$0$0': Const('proposer2', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))}


---------- ArgPartition ----------

sort2class_sigs: {EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')): [proposer$0$leader$0$0; proposer$1$start$0$0]}

sort2part_sig: {EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')): proposer$0$leader$0$0; proposer$1$start$0$0}

part_sig: ('proposer$0$leader$0$0; proposer$1$start$0$0',)


---------- SigGenerator ----------

terms:  ['leader(proposer2)', '~start(proposer2)']

func_name2symbol:  {'leader': Const('leader', FunctionSort(EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')), BooleanSort())), 'start': Const('start', FunctionSort(EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')), BooleanSort()))}

func_name2args_sort:  {'leader': (EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')),), 'start': (EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')),)}

sign_func_name2count:  {'0$leader': 1, '1$start': 1}


---------- ProductArgPartition ----------

sort2class_sigs: {EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')): [proposer$0$leader$0$0; proposer$1$start$0$0]}

sort2part_sig: {EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')): proposer$0$leader$0$0; proposer$1$start$0$0}

	sort: proposer

	identical_classes: {'proposer$0$leader$0; proposer$1$start$0': [proposer$0$leader$0$0; proposer$1$start$0$0]}

	identical_single_classes: {'proposer$0$leader$0; proposer$1$start$0': proposer$0$leader$0$0; proposer$1$start$0$0}

	identical_multi_classes: {}


---------- QInference: _set_sort_to_quantifier_mode ----------

quantifier mode: proposer: QuantifierMode.forall


---------- QInference: _set_constraint_mode ----------

constraint mode: ConstraintMode.no_merge


---------- QFormula: _set_qvars ----------

forall_qvars: {Var('PROPOSER0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))}

exists_qvars: set()


---------- QFormula: _set_signed_func_name_to_args ----------

signed_func_name2args: {'0$leader': [[Var('PROPOSER0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))]], '1$start': [[Var('PROPOSER0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))]]}


---------- QFormula: _set_qterms ----------

qterms: ['leader(PROPOSER0)', '~start(PROPOSER0)']


---------- QFormula: get_qclause ----------

qclause: forall PROPOSER0. ~leader(PROPOSER0) | start(PROPOSER0)


=== Prime Orbit 10 =====================
size : 3
num_suborbits: 1
156 (*) : -------------11------------
156     : ['leader(proposer1)', 'leader(proposer2)']
157     : ------------1-1------------
157     : ['leader(proposer0)', 'leader(proposer2)']
158     : ------------11-------------
158     : ['leader(proposer0)', 'leader(proposer1)']
num_forall :   0
num_exists :   0
num_literals : 0
quantified form : None
qcost : 0




---------- QPrime ----------


---------- ConstArgBinding ----------

terms: ['leader(proposer1)', 'leader(proposer2)']

sign_func_name2args: {'0$leader': [(Const('proposer1', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))),), (Const('proposer2', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))),)]}

const2sigs: {Const('proposer1', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))): [proposer$0$leader$0$0], Const('proposer2', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))): [proposer$0$leader$0$1]}

sig2const: {'proposer$0$leader$0$0': Const('proposer1', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))), 'proposer$0$leader$0$1': Const('proposer2', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))}


---------- ArgPartition ----------

sort2class_sigs: {EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')): [proposer$0$leader$0$0, proposer$0$leader$0$1]}

sort2part_sig: {EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')): proposer$0$leader$0$0 | proposer$0$leader$0$1}

part_sig: ('proposer$0$leader$0$0 | proposer$0$leader$0$1',)


---------- SigGenerator ----------

terms:  ['leader(proposer1)', 'leader(proposer2)']

func_name2symbol:  {'leader': Const('leader', FunctionSort(EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')), BooleanSort()))}

func_name2args_sort:  {'leader': (EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')),)}

sign_func_name2count:  {'0$leader': 2}


---------- ProductArgPartition ----------

sort2class_sigs: {EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')): [proposer$0$leader$0$0, proposer$0$leader$0$1]}

sort2part_sig: {EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')): proposer$0$leader$0$0 | proposer$0$leader$0$1}

	sort: proposer

	identical_classes: {'proposer$0$leader$0': [proposer$0$leader$0$0, proposer$0$leader$0$1]}

	identical_single_classes: {}

	identical_multi_classes: {'proposer$0$leader$0': [proposer$0$leader$0$0, proposer$0$leader$0$1]}


---------- QInference: _set_sort_to_quantifier_mode ----------

quantifier mode: proposer: QuantifierMode.forall


---------- QInference: _set_constraint_mode ----------

constraint mode: ConstraintMode.no_merge


---------- QFormula: _set_qvars ----------

forall_qvars: {Var('PROPOSER0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))), Var('PROPOSER1', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))}

exists_qvars: set()


---------- QFormula: _set_signed_func_name_to_args ----------

signed_func_name2args: {'0$leader': [[Var('PROPOSER0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))], [Var('PROPOSER1', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))]]}


---------- QFormula: _set_qterms ----------

qterms: ['leader(PROPOSER0)', 'leader(PROPOSER1)']


---------- QFormula: get_qclause ----------

qclause: forall PROPOSER1,PROPOSER0. ~leader(PROPOSER0) | ~leader(PROPOSER1) | PROPOSER0 = PROPOSER1


=== Prime Orbit 13 =====================
size : 18
num_suborbits: 1
186 (*) : 0-----------1---------1----
186     : ['leader(proposer0)', 'promise(acceptor2,proposer1)', '~chosenAt(quorum__acceptor0_acceptor1,proposer0)']
187     : 0-----------1----------1---
187     : ['leader(proposer0)', 'promise(acceptor2,proposer2)', '~chosenAt(quorum__acceptor0_acceptor1,proposer0)']
188     : -0-----------1-------1-----
188     : ['leader(proposer1)', 'promise(acceptor2,proposer0)', '~chosenAt(quorum__acceptor0_acceptor1,proposer1)']
189     : -0-----------1---------1---
189     : ['leader(proposer1)', 'promise(acceptor2,proposer2)', '~chosenAt(quorum__acceptor0_acceptor1,proposer1)']
190     : --0-----------1------1-----
190     : ['leader(proposer2)', 'promise(acceptor2,proposer0)', '~chosenAt(quorum__acceptor0_acceptor1,proposer2)']
191     : --0-----------1-------1----
191     : ['leader(proposer2)', 'promise(acceptor2,proposer1)', '~chosenAt(quorum__acceptor0_acceptor1,proposer2)']
192     : ---0--------1------1-------
192     : ['leader(proposer0)', 'promise(acceptor1,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)']
193     : ---0--------1-------1------
193     : ['leader(proposer0)', 'promise(acceptor1,proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)']
194     : ----0--------1----1--------
194     : ['leader(proposer1)', 'promise(acceptor1,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)']
195     : ----0--------1------1------
195     : ['leader(proposer1)', 'promise(acceptor1,proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)']
196     : -----0--------1---1--------
196     : ['leader(proposer2)', 'promise(acceptor1,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)']
197     : -----0--------1----1-------
197     : ['leader(proposer2)', 'promise(acceptor1,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)']
198     : ------0-----1---1----------
198     : ['leader(proposer0)', 'promise(acceptor0,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)']
199     : ------0-----1----1---------
199     : ['leader(proposer0)', 'promise(acceptor0,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)']
200     : -------0-----1-1-----------
200     : ['leader(proposer1)', 'promise(acceptor0,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)']
201     : -------0-----1---1---------
201     : ['leader(proposer1)', 'promise(acceptor0,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)']
202     : --------0-----11-----------
202     : ['leader(proposer2)', 'promise(acceptor0,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)']
203     : --------0-----1-1----------
203     : ['leader(proposer2)', 'promise(acceptor0,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)']
num_forall :   0
num_exists :   0
num_literals : 0
quantified form : None
qcost : 0




---------- QPrime ----------


---------- ConstArgBinding ----------

terms: ['~chosenAt(quorum__acceptor0_acceptor1,proposer0)', 'leader(proposer0)', 'promise(acceptor2,proposer1)', '~member(acceptor2,quorum__acceptor0_acceptor1)']

sign_func_name2args: {'1$chosenAt': [(Const('quorum__acceptor0_acceptor1', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), Const('proposer0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))))], '0$leader': [(Const('proposer0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))),)], '0$promise': [(Const('acceptor2', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Const('proposer1', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))))], '1$member': [(Const('acceptor2', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Const('quorum__acceptor0_acceptor1', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))))]}

const2sigs: {Const('quorum__acceptor0_acceptor1', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))): [quorum$1$chosenAt$0$0, quorum$1$member$1$0], Const('proposer0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))): [proposer$1$chosenAt$1$0, proposer$0$leader$0$0], Const('acceptor2', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))): [acceptor$0$promise$0$0, acceptor$1$member$0$0], Const('proposer1', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))): [proposer$0$promise$1$0]}

sig2const: {'quorum$1$chosenAt$0$0': Const('quorum__acceptor0_acceptor1', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), 'proposer$1$chosenAt$1$0': Const('proposer0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))), 'proposer$0$leader$0$0': Const('proposer0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))), 'acceptor$0$promise$0$0': Const('acceptor2', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), 'proposer$0$promise$1$0': Const('proposer1', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))), 'acceptor$1$member$0$0': Const('acceptor2', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), 'quorum$1$member$1$0': Const('quorum__acceptor0_acceptor1', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')))}


---------- ArgPartition ----------

sort2class_sigs: {EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')): [quorum$1$chosenAt$0$0; quorum$1$member$1$0], EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')): [proposer$0$leader$0$0; proposer$1$chosenAt$1$0, proposer$0$promise$1$0], EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')): [acceptor$0$promise$0$0; acceptor$1$member$0$0]}

sort2part_sig: {EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')): quorum$1$chosenAt$0$0; quorum$1$member$1$0, EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')): proposer$0$leader$0$0; proposer$1$chosenAt$1$0 | proposer$0$promise$1$0, EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')): acceptor$0$promise$0$0; acceptor$1$member$0$0}

part_sig: ('acceptor$0$promise$0$0; acceptor$1$member$0$0', 'proposer$0$leader$0$0; proposer$1$chosenAt$1$0 | proposer$0$promise$1$0', 'quorum$1$chosenAt$0$0; quorum$1$member$1$0')


---------- SigGenerator ----------

terms:  ['~chosenAt(quorum__acceptor0_acceptor1,proposer0)', 'leader(proposer0)', 'promise(acceptor2,proposer1)', '~member(acceptor2,quorum__acceptor0_acceptor1)']

func_name2symbol:  {'chosenAt': Const('chosenAt', FunctionSort(EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')), EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')), BooleanSort())), 'leader': Const('leader', FunctionSort(EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')), BooleanSort())), 'promise': Const('promise', FunctionSort(EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')), EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')), BooleanSort())), 'member': Const('member', FunctionSort(EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')), EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')), BooleanSort()))}

func_name2args_sort:  {'chosenAt': (EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')), EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))), 'leader': (EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')),), 'promise': (EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')), EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))), 'member': (EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')), EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')))}

sign_func_name2count:  {'1$chosenAt': 1, '0$leader': 1, '0$promise': 1, '1$member': 1}


---------- ProductArgPartition ----------

sort2class_sigs: {EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')): [quorum$1$chosenAt$0$0; quorum$1$member$1$0], EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')): [proposer$0$leader$0$0; proposer$1$chosenAt$1$0, proposer$0$promise$1$0], EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')): [acceptor$0$promise$0$0; acceptor$1$member$0$0]}

sort2part_sig: {EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')): quorum$1$chosenAt$0$0; quorum$1$member$1$0, EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')): proposer$0$leader$0$0; proposer$1$chosenAt$1$0 | proposer$0$promise$1$0, EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')): acceptor$0$promise$0$0; acceptor$1$member$0$0}

	sort: quorum

	identical_classes: {'quorum$1$chosenAt$0; quorum$1$member$1': [quorum$1$chosenAt$0$0; quorum$1$member$1$0]}

	identical_single_classes: {'quorum$1$chosenAt$0; quorum$1$member$1': quorum$1$chosenAt$0$0; quorum$1$member$1$0}

	identical_multi_classes: {}

	sort: proposer

	identical_classes: {'proposer$0$leader$0; proposer$1$chosenAt$1': [proposer$0$leader$0$0; proposer$1$chosenAt$1$0], 'proposer$0$promise$1': [proposer$0$promise$1$0]}

	identical_single_classes: {'proposer$0$leader$0; proposer$1$chosenAt$1': proposer$0$leader$0$0; proposer$1$chosenAt$1$0, 'proposer$0$promise$1': proposer$0$promise$1$0}

	identical_multi_classes: {}

	sort: acceptor

	identical_classes: {'acceptor$0$promise$0; acceptor$1$member$0': [acceptor$0$promise$0$0; acceptor$1$member$0$0]}

	identical_single_classes: {'acceptor$0$promise$0; acceptor$1$member$0': acceptor$0$promise$0$0; acceptor$1$member$0$0}

	identical_multi_classes: {}


---------- QInference: _set_sort_to_quantifier_mode ----------

quantifier mode: quorum: QuantifierMode.forall

quantifier mode: proposer: QuantifierMode.forall

quantifier mode: acceptor: QuantifierMode.forall


---------- QInference: _set_constraint_mode ----------

constraint mode: ConstraintMode.no_merge


---------- QFormula: _set_qvars ----------

forall_qvars: {Var('PROPOSER0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))), Var('ACCEPTOR0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Var('PROPOSER1', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))), Var('QUORUM0', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')))}

exists_qvars: set()


---------- QFormula: _set_signed_func_name_to_args ----------

signed_func_name2args: {'1$chosenAt': [[Var('QUORUM0', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), Var('PROPOSER0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))]], '0$leader': [[Var('PROPOSER0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))]], '0$promise': [[Var('ACCEPTOR0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Var('PROPOSER1', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))]], '1$member': [[Var('ACCEPTOR0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Var('QUORUM0', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')))]]}


---------- QFormula: _set_qterms ----------

qterms: ['promise(ACCEPTOR0,PROPOSER1)', 'leader(PROPOSER0)', '~member(ACCEPTOR0,QUORUM0)', '~chosenAt(QUORUM0,PROPOSER0)']


---------- QFormula: get_qclause ----------

qclause: forall PROPOSER1,QUORUM0,PROPOSER0,ACCEPTOR0. ~promise(ACCEPTOR0,PROPOSER1) | ~leader(PROPOSER0) | member(ACCEPTOR0,QUORUM0) | chosenAt(QUORUM0,PROPOSER0) | PROPOSER0 = PROPOSER1


=== Prime Orbit 14 =====================
size : 36
num_suborbits: 1
204 (*) : ------------1-----0---1----
204     : ['leader(proposer0)', 'promise(acceptor2,proposer1)', '~promise(acceptor1,proposer0)']
205     : ------------1-----0----1---
205     : ['leader(proposer0)', 'promise(acceptor2,proposer2)', '~promise(acceptor1,proposer0)']
206     : -------------1-----0-1-----
206     : ['leader(proposer1)', 'promise(acceptor2,proposer0)', '~promise(acceptor1,proposer1)']
207     : -------------1-----0---1---
207     : ['leader(proposer1)', 'promise(acceptor2,proposer2)', '~promise(acceptor1,proposer1)']
208     : --------------1-----01-----
208     : ['leader(proposer2)', 'promise(acceptor2,proposer0)', '~promise(acceptor1,proposer2)']
209     : --------------1-----0-1----
209     : ['leader(proposer2)', 'promise(acceptor2,proposer1)', '~promise(acceptor1,proposer2)']
210     : ------------1------1-0-----
210     : ['leader(proposer0)', 'promise(acceptor1,proposer1)', '~promise(acceptor2,proposer0)']
211     : ------------1-------10-----
211     : ['leader(proposer0)', 'promise(acceptor1,proposer2)', '~promise(acceptor2,proposer0)']
212     : -------------1----1---0----
212     : ['leader(proposer1)', 'promise(acceptor1,proposer0)', '~promise(acceptor2,proposer1)']
213     : -------------1------1-0----
213     : ['leader(proposer1)', 'promise(acceptor1,proposer2)', '~promise(acceptor2,proposer1)']
214     : --------------1---1----0---
214     : ['leader(proposer2)', 'promise(acceptor1,proposer0)', '~promise(acceptor2,proposer2)']
215     : --------------1----1---0---
215     : ['leader(proposer2)', 'promise(acceptor1,proposer1)', '~promise(acceptor2,proposer2)']
216     : ------------1--0------1----
216     : ['leader(proposer0)', 'promise(acceptor2,proposer1)', '~promise(acceptor0,proposer0)']
217     : ------------1--0-------1---
217     : ['leader(proposer0)', 'promise(acceptor2,proposer2)', '~promise(acceptor0,proposer0)']
218     : -------------1--0----1-----
218     : ['leader(proposer1)', 'promise(acceptor2,proposer0)', '~promise(acceptor0,proposer1)']
219     : -------------1--0------1---
219     : ['leader(proposer1)', 'promise(acceptor2,proposer2)', '~promise(acceptor0,proposer1)']
220     : --------------1--0---1-----
220     : ['leader(proposer2)', 'promise(acceptor2,proposer0)', '~promise(acceptor0,proposer2)']
221     : --------------1--0----1----
221     : ['leader(proposer2)', 'promise(acceptor2,proposer1)', '~promise(acceptor0,proposer2)']
222     : ------------1---1----0-----
222     : ['leader(proposer0)', 'promise(acceptor0,proposer1)', '~promise(acceptor2,proposer0)']
223     : ------------1----1---0-----
223     : ['leader(proposer0)', 'promise(acceptor0,proposer2)', '~promise(acceptor2,proposer0)']
224     : -------------1-1------0----
224     : ['leader(proposer1)', 'promise(acceptor0,proposer0)', '~promise(acceptor2,proposer1)']
225     : -------------1---1----0----
225     : ['leader(proposer1)', 'promise(acceptor0,proposer2)', '~promise(acceptor2,proposer1)']
226     : --------------11-------0---
226     : ['leader(proposer2)', 'promise(acceptor0,proposer0)', '~promise(acceptor2,proposer2)']
227     : --------------1-1------0---
227     : ['leader(proposer2)', 'promise(acceptor0,proposer1)', '~promise(acceptor2,proposer2)']
228     : ------------1--0---1-------
228     : ['leader(proposer0)', 'promise(acceptor1,proposer1)', '~promise(acceptor0,proposer0)']
229     : ------------1--0----1------
229     : ['leader(proposer0)', 'promise(acceptor1,proposer2)', '~promise(acceptor0,proposer0)']
230     : -------------1--0-1--------
230     : ['leader(proposer1)', 'promise(acceptor1,proposer0)', '~promise(acceptor0,proposer1)']
231     : -------------1--0---1------
231     : ['leader(proposer1)', 'promise(acceptor1,proposer2)', '~promise(acceptor0,proposer1)']
232     : --------------1--01--------
232     : ['leader(proposer2)', 'promise(acceptor1,proposer0)', '~promise(acceptor0,proposer2)']
233     : --------------1--0-1-------
233     : ['leader(proposer2)', 'promise(acceptor1,proposer1)', '~promise(acceptor0,proposer2)']
234     : ------------1---1-0--------
234     : ['leader(proposer0)', 'promise(acceptor0,proposer1)', '~promise(acceptor1,proposer0)']
235     : ------------1----10--------
235     : ['leader(proposer0)', 'promise(acceptor0,proposer2)', '~promise(acceptor1,proposer0)']
236     : -------------1-1---0-------
236     : ['leader(proposer1)', 'promise(acceptor0,proposer0)', '~promise(acceptor1,proposer1)']
237     : -------------1---1-0-------
237     : ['leader(proposer1)', 'promise(acceptor0,proposer2)', '~promise(acceptor1,proposer1)']
238     : --------------11----0------
238     : ['leader(proposer2)', 'promise(acceptor0,proposer0)', '~promise(acceptor1,proposer2)']
239     : --------------1-1---0------
239     : ['leader(proposer2)', 'promise(acceptor0,proposer1)', '~promise(acceptor1,proposer2)']
num_forall :   0
num_exists :   0
num_literals : 0
quantified form : None
qcost : 0




---------- QPrime ----------


---------- ConstArgBinding ----------

terms: ['leader(proposer0)', '~promise(acceptor1,proposer0)', 'promise(acceptor2,proposer1)']

sign_func_name2args: {'0$leader': [(Const('proposer0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))),)], '1$promise': [(Const('acceptor1', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Const('proposer0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))))], '0$promise': [(Const('acceptor2', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Const('proposer1', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))))]}

const2sigs: {Const('proposer0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))): [proposer$0$leader$0$0, proposer$1$promise$1$0], Const('acceptor1', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))): [acceptor$1$promise$0$0], Const('acceptor2', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))): [acceptor$0$promise$0$0], Const('proposer1', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))): [proposer$0$promise$1$0]}

sig2const: {'proposer$0$leader$0$0': Const('proposer0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))), 'acceptor$1$promise$0$0': Const('acceptor1', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), 'proposer$1$promise$1$0': Const('proposer0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))), 'acceptor$0$promise$0$0': Const('acceptor2', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), 'proposer$0$promise$1$0': Const('proposer1', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))}


---------- ArgPartition ----------

sort2class_sigs: {EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')): [proposer$0$leader$0$0; proposer$1$promise$1$0, proposer$0$promise$1$0], EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')): [acceptor$0$promise$0$0, acceptor$1$promise$0$0]}

sort2part_sig: {EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')): proposer$0$leader$0$0; proposer$1$promise$1$0 | proposer$0$promise$1$0, EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')): acceptor$0$promise$0$0 | acceptor$1$promise$0$0}

part_sig: ('acceptor$0$promise$0$0 | acceptor$1$promise$0$0', 'proposer$0$leader$0$0; proposer$1$promise$1$0 | proposer$0$promise$1$0')


---------- SigGenerator ----------

terms:  ['leader(proposer0)', '~promise(acceptor1,proposer0)', 'promise(acceptor2,proposer1)']

func_name2symbol:  {'leader': Const('leader', FunctionSort(EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')), BooleanSort())), 'promise': Const('promise', FunctionSort(EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')), EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')), BooleanSort()))}

func_name2args_sort:  {'leader': (EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')),), 'promise': (EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')), EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))}

sign_func_name2count:  {'0$leader': 1, '1$promise': 1, '0$promise': 1}


---------- ProductArgPartition ----------

sort2class_sigs: {EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')): [proposer$0$leader$0$0; proposer$1$promise$1$0, proposer$0$promise$1$0], EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')): [acceptor$0$promise$0$0, acceptor$1$promise$0$0]}

sort2part_sig: {EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')): proposer$0$leader$0$0; proposer$1$promise$1$0 | proposer$0$promise$1$0, EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')): acceptor$0$promise$0$0 | acceptor$1$promise$0$0}

	sort: proposer

	identical_classes: {'proposer$0$leader$0; proposer$1$promise$1': [proposer$0$leader$0$0; proposer$1$promise$1$0], 'proposer$0$promise$1': [proposer$0$promise$1$0]}

	identical_single_classes: {'proposer$0$leader$0; proposer$1$promise$1': proposer$0$leader$0$0; proposer$1$promise$1$0, 'proposer$0$promise$1': proposer$0$promise$1$0}

	identical_multi_classes: {}

	sort: acceptor

	identical_classes: {'acceptor$0$promise$0': [acceptor$0$promise$0$0], 'acceptor$1$promise$0': [acceptor$1$promise$0$0]}

	identical_single_classes: {'acceptor$0$promise$0': acceptor$0$promise$0$0, 'acceptor$1$promise$0': acceptor$1$promise$0$0}

	identical_multi_classes: {}


---------- QInference: _set_sort_to_quantifier_mode ----------

quantifier mode: proposer: QuantifierMode.forall

quantifier mode: acceptor: QuantifierMode.forall


---------- QInference: _set_constraint_mode ----------

constraint mode: ConstraintMode.no_merge


---------- QFormula: _set_qvars ----------

forall_qvars: {Var('PROPOSER0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))), Var('ACCEPTOR0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Var('ACCEPTOR1', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Var('PROPOSER1', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))}

exists_qvars: set()


---------- QFormula: _set_signed_func_name_to_args ----------

signed_func_name2args: {'0$leader': [[Var('PROPOSER0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))]], '1$promise': [[Var('ACCEPTOR1', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Var('PROPOSER0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))]], '0$promise': [[Var('ACCEPTOR0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Var('PROPOSER1', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))]]}


---------- QFormula: _set_qterms ----------

qterms: ['promise(ACCEPTOR0,PROPOSER1)', 'leader(PROPOSER0)', '~promise(ACCEPTOR1,PROPOSER0)']


---------- QFormula: get_qclause ----------

qclause: forall PROPOSER1,ACCEPTOR1,PROPOSER0,ACCEPTOR0. ~promise(ACCEPTOR0,PROPOSER1) | ~leader(PROPOSER0) | promise(ACCEPTOR1,PROPOSER0) | (PROPOSER0 = PROPOSER1 | ACCEPTOR0 = ACCEPTOR1)


=== Prime Orbit 15 =====================
size : 36
num_suborbits: 2
240 (*) : ------------1-------1-1----
240     : ['leader(proposer0)', 'promise(acceptor1,proposer2)', 'promise(acceptor2,proposer1)']
241     : ------------1------1---1---
241     : ['leader(proposer0)', 'promise(acceptor1,proposer1)', 'promise(acceptor2,proposer2)']
242     : -------------1------11-----
242     : ['leader(proposer1)', 'promise(acceptor1,proposer2)', 'promise(acceptor2,proposer0)']
243     : -------------1----1----1---
243     : ['leader(proposer1)', 'promise(acceptor1,proposer0)', 'promise(acceptor2,proposer2)']
244     : --------------1----1-1-----
244     : ['leader(proposer2)', 'promise(acceptor1,proposer1)', 'promise(acceptor2,proposer0)']
245     : --------------1---1---1----
245     : ['leader(proposer2)', 'promise(acceptor1,proposer0)', 'promise(acceptor2,proposer1)']
246     : ------------1----1----1----
246     : ['leader(proposer0)', 'promise(acceptor0,proposer2)', 'promise(acceptor2,proposer1)']
247     : ------------1---1------1---
247     : ['leader(proposer0)', 'promise(acceptor0,proposer1)', 'promise(acceptor2,proposer2)']
248     : -------------1---1---1-----
248     : ['leader(proposer1)', 'promise(acceptor0,proposer2)', 'promise(acceptor2,proposer0)']
249     : -------------1-1-------1---
249     : ['leader(proposer1)', 'promise(acceptor0,proposer0)', 'promise(acceptor2,proposer2)']
250     : --------------1-1----1-----
250     : ['leader(proposer2)', 'promise(acceptor0,proposer1)', 'promise(acceptor2,proposer0)']
251     : --------------11------1----
251     : ['leader(proposer2)', 'promise(acceptor0,proposer0)', 'promise(acceptor2,proposer1)']
252     : ------------1----1-1-------
252     : ['leader(proposer0)', 'promise(acceptor0,proposer2)', 'promise(acceptor1,proposer1)']
253     : ------------1---1---1------
253     : ['leader(proposer0)', 'promise(acceptor0,proposer1)', 'promise(acceptor1,proposer2)']
254     : -------------1---11--------
254     : ['leader(proposer1)', 'promise(acceptor0,proposer2)', 'promise(acceptor1,proposer0)']
255     : -------------1-1----1------
255     : ['leader(proposer1)', 'promise(acceptor0,proposer0)', 'promise(acceptor1,proposer2)']
256     : --------------1-1-1--------
256     : ['leader(proposer2)', 'promise(acceptor0,proposer1)', 'promise(acceptor1,proposer0)']
257     : --------------11---1-------
257     : ['leader(proposer2)', 'promise(acceptor0,proposer0)', 'promise(acceptor1,proposer1)']
294 (*) : ------------1------1--1----
294     : ['leader(proposer0)', 'promise(acceptor1,proposer1)', 'promise(acceptor2,proposer1)']
295     : ------------1-------1--1---
295     : ['leader(proposer0)', 'promise(acceptor1,proposer2)', 'promise(acceptor2,proposer2)']
296     : -------------1----1--1-----
296     : ['leader(proposer1)', 'promise(acceptor1,proposer0)', 'promise(acceptor2,proposer0)']
297     : -------------1------1--1---
297     : ['leader(proposer1)', 'promise(acceptor1,proposer2)', 'promise(acceptor2,proposer2)']
298     : --------------1---1--1-----
298     : ['leader(proposer2)', 'promise(acceptor1,proposer0)', 'promise(acceptor2,proposer0)']
299     : --------------1----1--1----
299     : ['leader(proposer2)', 'promise(acceptor1,proposer1)', 'promise(acceptor2,proposer1)']
300     : ------------1---1-----1----
300     : ['leader(proposer0)', 'promise(acceptor0,proposer1)', 'promise(acceptor2,proposer1)']
301     : ------------1----1-----1---
301     : ['leader(proposer0)', 'promise(acceptor0,proposer2)', 'promise(acceptor2,proposer2)']
302     : -------------1-1-----1-----
302     : ['leader(proposer1)', 'promise(acceptor0,proposer0)', 'promise(acceptor2,proposer0)']
303     : -------------1---1-----1---
303     : ['leader(proposer1)', 'promise(acceptor0,proposer2)', 'promise(acceptor2,proposer2)']
304     : --------------11-----1-----
304     : ['leader(proposer2)', 'promise(acceptor0,proposer0)', 'promise(acceptor2,proposer0)']
305     : --------------1-1-----1----
305     : ['leader(proposer2)', 'promise(acceptor0,proposer1)', 'promise(acceptor2,proposer1)']
306     : ------------1---1--1-------
306     : ['leader(proposer0)', 'promise(acceptor0,proposer1)', 'promise(acceptor1,proposer1)']
307     : ------------1----1--1------
307     : ['leader(proposer0)', 'promise(acceptor0,proposer2)', 'promise(acceptor1,proposer2)']
308     : -------------1-1--1--------
308     : ['leader(proposer1)', 'promise(acceptor0,proposer0)', 'promise(acceptor1,proposer0)']
309     : -------------1---1--1------
309     : ['leader(proposer1)', 'promise(acceptor0,proposer2)', 'promise(acceptor1,proposer2)']
310     : --------------11--1--------
310     : ['leader(proposer2)', 'promise(acceptor0,proposer0)', 'promise(acceptor1,proposer0)']
311     : --------------1-1--1-------
311     : ['leader(proposer2)', 'promise(acceptor0,proposer1)', 'promise(acceptor1,proposer1)']
num_forall :   0
num_exists :   0
num_literals : 0
quantified form : None
qcost : 0




---------- QPrime ----------


---------- ConstArgBinding ----------

terms: ['leader(proposer0)', 'promise(acceptor1,proposer2)', 'promise(acceptor2,proposer1)']

sign_func_name2args: {'0$leader': [(Const('proposer0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))),)], '0$promise': [(Const('acceptor1', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Const('proposer2', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))), (Const('acceptor2', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Const('proposer1', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))))]}

const2sigs: {Const('proposer0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))): [proposer$0$leader$0$0], Const('acceptor1', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))): [acceptor$0$promise$0$0], Const('proposer2', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))): [proposer$0$promise$1$0], Const('acceptor2', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))): [acceptor$0$promise$0$1], Const('proposer1', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))): [proposer$0$promise$1$1]}

sig2const: {'proposer$0$leader$0$0': Const('proposer0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))), 'acceptor$0$promise$0$0': Const('acceptor1', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), 'proposer$0$promise$1$0': Const('proposer2', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))), 'acceptor$0$promise$0$1': Const('acceptor2', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), 'proposer$0$promise$1$1': Const('proposer1', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))}


---------- ArgPartition ----------

sort2class_sigs: {EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')): [proposer$0$leader$0$0, proposer$0$promise$1$0, proposer$0$promise$1$1], EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')): [acceptor$0$promise$0$0, acceptor$0$promise$0$1]}

sort2part_sig: {EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')): proposer$0$leader$0$0 | proposer$0$promise$1$0 | proposer$0$promise$1$1, EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')): acceptor$0$promise$0$0 | acceptor$0$promise$0$1}

part_sig: ('acceptor$0$promise$0$0 | acceptor$0$promise$0$1', 'proposer$0$leader$0$0 | proposer$0$promise$1$0 | proposer$0$promise$1$1')


---------- QPrime ----------


---------- ConstArgBinding ----------

terms: ['leader(proposer0)', 'promise(acceptor1,proposer1)', 'promise(acceptor2,proposer1)']

sign_func_name2args: {'0$leader': [(Const('proposer0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))),)], '0$promise': [(Const('acceptor1', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Const('proposer1', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))), (Const('acceptor2', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Const('proposer1', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))))]}

const2sigs: {Const('proposer0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))): [proposer$0$leader$0$0], Const('acceptor1', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))): [acceptor$0$promise$0$0], Const('proposer1', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))): [proposer$0$promise$1$0, proposer$0$promise$1$1], Const('acceptor2', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))): [acceptor$0$promise$0$1]}

sig2const: {'proposer$0$leader$0$0': Const('proposer0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))), 'acceptor$0$promise$0$0': Const('acceptor1', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), 'proposer$0$promise$1$0': Const('proposer1', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))), 'acceptor$0$promise$0$1': Const('acceptor2', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), 'proposer$0$promise$1$1': Const('proposer1', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))}


---------- ArgPartition ----------

sort2class_sigs: {EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')): [proposer$0$leader$0$0, proposer$0$promise$1$0; proposer$0$promise$1$1], EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')): [acceptor$0$promise$0$0, acceptor$0$promise$0$1]}

sort2part_sig: {EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')): proposer$0$leader$0$0 | proposer$0$promise$1$0; proposer$0$promise$1$1, EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')): acceptor$0$promise$0$0 | acceptor$0$promise$0$1}

part_sig: ('acceptor$0$promise$0$0 | acceptor$0$promise$0$1', 'proposer$0$leader$0$0 | proposer$0$promise$1$0; proposer$0$promise$1$1')


---------- SigGenerator ----------

terms:  ['leader(proposer0)', 'promise(acceptor1,proposer2)', 'promise(acceptor2,proposer1)']

func_name2symbol:  {'leader': Const('leader', FunctionSort(EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')), BooleanSort())), 'promise': Const('promise', FunctionSort(EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')), EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')), BooleanSort()))}

func_name2args_sort:  {'leader': (EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')),), 'promise': (EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')), EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))}

sign_func_name2count:  {'0$leader': 1, '0$promise': 2}


---------- ProductArgPartition ----------

sort2class_sigs: {EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')): [proposer$0$leader$0$0, proposer$0$promise$1$0, proposer$0$promise$1$1], EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')): [acceptor$0$promise$0$0, acceptor$0$promise$0$1]}

sort2part_sig: {EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')): proposer$0$leader$0$0 | proposer$0$promise$1$0 | proposer$0$promise$1$1, EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')): acceptor$0$promise$0$0 | acceptor$0$promise$0$1}

	sort: proposer

	identical_classes: {'proposer$0$leader$0': [proposer$0$leader$0$0], 'proposer$0$promise$1': [proposer$0$promise$1$0, proposer$0$promise$1$1]}

	identical_single_classes: {'proposer$0$leader$0': proposer$0$leader$0$0}

	identical_multi_classes: {'proposer$0$promise$1': [proposer$0$promise$1$0, proposer$0$promise$1$1]}

	sort: acceptor

	identical_classes: {'acceptor$0$promise$0': [acceptor$0$promise$0$0, acceptor$0$promise$0$1]}

	identical_single_classes: {}

	identical_multi_classes: {'acceptor$0$promise$0': [acceptor$0$promise$0$0, acceptor$0$promise$0$1]}


---------- QInference: _set_sort_to_quantifier_mode ----------

quantifier mode: proposer: QuantifierMode.forall

quantifier mode: acceptor: QuantifierMode.forall


---------- QInference: _set_constraint_mode ----------

constraint mode: ConstraintMode.merge


---------- QFormula: _set_qvars ----------

forall_qvars: {Var('ACCEPTOR0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Var('PROPOSER2', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))), Var('PROPOSER0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))), Var('ACCEPTOR1', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Var('PROPOSER1', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))}

exists_qvars: set()


---------- QFormula: _set_signed_func_name_to_args ----------

signed_func_name2args: {'0$leader': [[Var('PROPOSER0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))]], '0$promise': [[Var('ACCEPTOR0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Var('PROPOSER1', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))], [Var('ACCEPTOR1', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Var('PROPOSER2', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))]]}


---------- QFormula: _set_qterms ----------

qterms: ['promise(ACCEPTOR0,PROPOSER1)', 'leader(PROPOSER0)', 'promise(ACCEPTOR1,PROPOSER2)']


---------- QFormula: _get_partition_constraint ----------

partition: ('acceptor$0$promise$0$0 | acceptor$0$promise$0$1', 'proposer$0$leader$0$0 | proposer$0$promise$1$0 | proposer$0$promise$1$1')[]

sort partition signature: acceptor$0$promise$0$0 | acceptor$0$promise$0$1

class signature: acceptor$0$promise$0$0


---------- QFormula: _get_class_constraint ----------

qvars: ['ACCEPTOR0:acceptor']

eq_terms: []

class signature: acceptor$0$promise$0$1


---------- QFormula: _get_class_constraint ----------

qvars: ['ACCEPTOR1:acceptor']

eq_terms: []


---------- QFormula: _get_diff_class_constraint ----------

qvars: ['ACCEPTOR0:acceptor', 'ACCEPTOR1:acceptor']

eq_terms: ['ACCEPTOR0:acceptor ~= ACCEPTOR1']

sort partition signature: proposer$0$leader$0$0 | proposer$0$promise$1$0 | proposer$0$promise$1$1

class signature: proposer$0$leader$0$0


---------- QFormula: _get_class_constraint ----------

qvars: ['PROPOSER0:proposer']

eq_terms: []

class signature: proposer$0$promise$1$0


---------- QFormula: _get_class_constraint ----------

qvars: ['PROPOSER1:proposer']

eq_terms: []

class signature: proposer$0$promise$1$1


---------- QFormula: _get_class_constraint ----------

qvars: ['PROPOSER2:proposer']

eq_terms: []


---------- QFormula: _get_diff_class_constraint ----------

qvars: ['PROPOSER0:proposer', 'PROPOSER2:proposer', 'PROPOSER1:proposer']

eq_terms: ['PROPOSER0:proposer ~= PROPOSER2', 'PROPOSER0:proposer ~= PROPOSER1', 'PROPOSER1:proposer ~= PROPOSER2']

constraint: ['ACCEPTOR0:acceptor ~= ACCEPTOR1', 'PROPOSER0:proposer ~= PROPOSER2', 'PROPOSER0:proposer ~= PROPOSER1', 'PROPOSER1:proposer ~= PROPOSER2']


---------- QFormula: _get_partition_constraint ----------

partition: ('acceptor$0$promise$0$0 | acceptor$0$promise$0$1', 'proposer$0$leader$0$0 | proposer$0$promise$1$0; proposer$0$promise$1$1')[]

sort partition signature: acceptor$0$promise$0$0 | acceptor$0$promise$0$1

class signature: acceptor$0$promise$0$0


---------- QFormula: _get_class_constraint ----------

qvars: ['ACCEPTOR0:acceptor']

eq_terms: []

class signature: acceptor$0$promise$0$1


---------- QFormula: _get_class_constraint ----------

qvars: ['ACCEPTOR1:acceptor']

eq_terms: []


---------- QFormula: _get_diff_class_constraint ----------

qvars: ['ACCEPTOR0:acceptor', 'ACCEPTOR1:acceptor']

eq_terms: ['ACCEPTOR0:acceptor ~= ACCEPTOR1']

sort partition signature: proposer$0$leader$0$0 | proposer$0$promise$1$0; proposer$0$promise$1$1

class signature: proposer$0$leader$0$0


---------- QFormula: _get_class_constraint ----------

qvars: ['PROPOSER0:proposer']

eq_terms: []

class signature: proposer$0$promise$1$0; proposer$0$promise$1$1


---------- QFormula: _get_class_constraint ----------

qvars: ['PROPOSER1:proposer', 'PROPOSER2:proposer']

eq_terms: ['PROPOSER1:proposer = PROPOSER2']


---------- QFormula: _get_diff_class_constraint ----------

qvars: ['PROPOSER0:proposer', 'PROPOSER1:proposer']

eq_terms: ['PROPOSER0:proposer ~= PROPOSER1']

constraint: ['ACCEPTOR0:acceptor ~= ACCEPTOR1', 'PROPOSER1:proposer = PROPOSER2', 'PROPOSER0:proposer ~= PROPOSER1']


---------- QFormula: _get_partition_constraint ----------

partition: ('acceptor$0$promise$0$0 | acceptor$0$promise$0$1', 'proposer$0$leader$0$0 | proposer$0$promise$1$0 | proposer$0$promise$1$1')[]

sort partition signature: acceptor$0$promise$0$0 | acceptor$0$promise$0$1

class signature: acceptor$0$promise$0$0


---------- QFormula: _get_class_constraint ----------

qvars: ['ACCEPTOR0:acceptor']

eq_terms: []

class signature: acceptor$0$promise$0$1


---------- QFormula: _get_class_constraint ----------

qvars: ['ACCEPTOR1:acceptor']

eq_terms: []


---------- QFormula: _get_diff_class_constraint ----------

qvars: ['ACCEPTOR0:acceptor', 'ACCEPTOR1:acceptor']

eq_terms: ['ACCEPTOR0:acceptor ~= ACCEPTOR1']

sort partition signature: proposer$0$leader$0$0 | proposer$0$promise$1$0 | proposer$0$promise$1$1

class signature: proposer$0$leader$0$0


---------- QFormula: _get_class_constraint ----------

qvars: ['PROPOSER0:proposer']

eq_terms: []

class signature: proposer$0$promise$1$0


---------- QFormula: _get_class_constraint ----------

qvars: ['PROPOSER1:proposer']

eq_terms: []

class signature: proposer$0$promise$1$1


---------- QFormula: _get_class_constraint ----------

qvars: ['PROPOSER2:proposer']

eq_terms: []


---------- QFormula: _get_diff_class_constraint ----------

qvars: ['PROPOSER0:proposer', 'PROPOSER2:proposer', 'PROPOSER1:proposer']

eq_terms: ['PROPOSER0:proposer ~= PROPOSER2', 'PROPOSER0:proposer ~= PROPOSER1', 'PROPOSER1:proposer ~= PROPOSER2']

constraint: ['ACCEPTOR0:acceptor ~= ACCEPTOR1', 'PROPOSER0:proposer ~= PROPOSER2', 'PROPOSER0:proposer ~= PROPOSER1', 'PROPOSER1:proposer ~= PROPOSER2']


---------- QFormula: _get_partition_constraint ----------

partition: ('acceptor$0$promise$0$0 | acceptor$0$promise$0$1', 'proposer$0$leader$0$0 | proposer$0$promise$1$0; proposer$0$promise$1$1')[]

sort partition signature: acceptor$0$promise$0$0 | acceptor$0$promise$0$1

class signature: acceptor$0$promise$0$0


---------- QFormula: _get_class_constraint ----------

qvars: ['ACCEPTOR0:acceptor']

eq_terms: []

class signature: acceptor$0$promise$0$1


---------- QFormula: _get_class_constraint ----------

qvars: ['ACCEPTOR1:acceptor']

eq_terms: []


---------- QFormula: _get_diff_class_constraint ----------

qvars: ['ACCEPTOR0:acceptor', 'ACCEPTOR1:acceptor']

eq_terms: ['ACCEPTOR0:acceptor ~= ACCEPTOR1']

sort partition signature: proposer$0$leader$0$0 | proposer$0$promise$1$0; proposer$0$promise$1$1

class signature: proposer$0$leader$0$0


---------- QFormula: _get_class_constraint ----------

qvars: ['PROPOSER0:proposer']

eq_terms: []

class signature: proposer$0$promise$1$0; proposer$0$promise$1$1


---------- QFormula: _get_class_constraint ----------

qvars: ['PROPOSER1:proposer', 'PROPOSER2:proposer']

eq_terms: ['PROPOSER1:proposer = PROPOSER2']


---------- QFormula: _get_diff_class_constraint ----------

qvars: ['PROPOSER0:proposer', 'PROPOSER1:proposer']

eq_terms: ['PROPOSER0:proposer ~= PROPOSER1']

constraint: ['ACCEPTOR0:acceptor ~= ACCEPTOR1', 'PROPOSER1:proposer = PROPOSER2', 'PROPOSER0:proposer ~= PROPOSER1']


---------- QFormula: _get_partition_constraint ----------

partition: ('acceptor$0$promise$0$0; acceptor$0$promise$0$1', 'proposer$0$leader$0$0 | proposer$0$promise$1$0 | proposer$0$promise$1$1')[]

sort partition signature: acceptor$0$promise$0$0; acceptor$0$promise$0$1

class signature: acceptor$0$promise$0$0; acceptor$0$promise$0$1


---------- QFormula: _get_class_constraint ----------

qvars: ['ACCEPTOR0:acceptor', 'ACCEPTOR1:acceptor']

eq_terms: ['ACCEPTOR0:acceptor = ACCEPTOR1']


---------- QFormula: _get_diff_class_constraint ----------

qvars: ['ACCEPTOR0:acceptor']

eq_terms: []

sort partition signature: proposer$0$leader$0$0 | proposer$0$promise$1$0 | proposer$0$promise$1$1

class signature: proposer$0$leader$0$0


---------- QFormula: _get_class_constraint ----------

qvars: ['PROPOSER0:proposer']

eq_terms: []

class signature: proposer$0$promise$1$0


---------- QFormula: _get_class_constraint ----------

qvars: ['PROPOSER1:proposer']

eq_terms: []

class signature: proposer$0$promise$1$1


---------- QFormula: _get_class_constraint ----------

qvars: ['PROPOSER2:proposer']

eq_terms: []


---------- QFormula: _get_diff_class_constraint ----------

qvars: ['PROPOSER0:proposer', 'PROPOSER2:proposer', 'PROPOSER1:proposer']

eq_terms: ['PROPOSER0:proposer ~= PROPOSER2', 'PROPOSER0:proposer ~= PROPOSER1', 'PROPOSER1:proposer ~= PROPOSER2']

constraint: ['ACCEPTOR0:acceptor = ACCEPTOR1', 'PROPOSER0:proposer ~= PROPOSER2', 'PROPOSER0:proposer ~= PROPOSER1', 'PROPOSER1:proposer ~= PROPOSER2']


---------- QFormula: _get_partition_constraint ----------

partition: ('acceptor$0$promise$0$0; acceptor$0$promise$0$1', 'proposer$0$leader$0$0 | proposer$0$promise$1$0 | proposer$0$promise$1$1')[]

sort partition signature: acceptor$0$promise$0$0; acceptor$0$promise$0$1

class signature: acceptor$0$promise$0$0; acceptor$0$promise$0$1


---------- QFormula: _get_class_constraint ----------

qvars: ['ACCEPTOR0:acceptor', 'ACCEPTOR1:acceptor']

eq_terms: ['ACCEPTOR0:acceptor = ACCEPTOR1']


---------- QFormula: _get_diff_class_constraint ----------

qvars: ['ACCEPTOR0:acceptor']

eq_terms: []

sort partition signature: proposer$0$leader$0$0 | proposer$0$promise$1$0 | proposer$0$promise$1$1

class signature: proposer$0$leader$0$0


---------- QFormula: _get_class_constraint ----------

qvars: ['PROPOSER0:proposer']

eq_terms: []

class signature: proposer$0$promise$1$0


---------- QFormula: _get_class_constraint ----------

qvars: ['PROPOSER1:proposer']

eq_terms: []

class signature: proposer$0$promise$1$1


---------- QFormula: _get_class_constraint ----------

qvars: ['PROPOSER2:proposer']

eq_terms: []


---------- QFormula: _get_diff_class_constraint ----------

qvars: ['PROPOSER0:proposer', 'PROPOSER2:proposer', 'PROPOSER1:proposer']

eq_terms: ['PROPOSER0:proposer ~= PROPOSER2', 'PROPOSER0:proposer ~= PROPOSER1', 'PROPOSER1:proposer ~= PROPOSER2']

constraint: ['ACCEPTOR0:acceptor = ACCEPTOR1', 'PROPOSER0:proposer ~= PROPOSER2', 'PROPOSER0:proposer ~= PROPOSER1', 'PROPOSER1:proposer ~= PROPOSER2']


---------- QFormula: _get_partition_constraint ----------

partition: ('acceptor$0$promise$0$0; acceptor$0$promise$0$1', 'proposer$0$leader$0$0 | proposer$0$promise$1$0; proposer$0$promise$1$1')[]

sort partition signature: acceptor$0$promise$0$0; acceptor$0$promise$0$1

class signature: acceptor$0$promise$0$0; acceptor$0$promise$0$1


---------- QFormula: _get_class_constraint ----------

qvars: ['ACCEPTOR0:acceptor', 'ACCEPTOR1:acceptor']

eq_terms: ['ACCEPTOR0:acceptor = ACCEPTOR1']


---------- QFormula: _get_diff_class_constraint ----------

qvars: ['ACCEPTOR0:acceptor']

eq_terms: []

sort partition signature: proposer$0$leader$0$0 | proposer$0$promise$1$0; proposer$0$promise$1$1

class signature: proposer$0$leader$0$0


---------- QFormula: _get_class_constraint ----------

qvars: ['PROPOSER0:proposer']

eq_terms: []

class signature: proposer$0$promise$1$0; proposer$0$promise$1$1


---------- QFormula: _get_class_constraint ----------

qvars: ['PROPOSER1:proposer', 'PROPOSER2:proposer']

eq_terms: ['PROPOSER1:proposer = PROPOSER2']


---------- QFormula: _get_diff_class_constraint ----------

qvars: ['PROPOSER0:proposer', 'PROPOSER1:proposer']

eq_terms: ['PROPOSER0:proposer ~= PROPOSER1']

constraint: ['ACCEPTOR0:acceptor = ACCEPTOR1', 'PROPOSER1:proposer = PROPOSER2', 'PROPOSER0:proposer ~= PROPOSER1']


---------- QFormula: get_qclause ----------

qclause: forall PROPOSER0,PROPOSER2,ACCEPTOR0,PROPOSER1,ACCEPTOR1. ~promise(ACCEPTOR0,PROPOSER1) | ~leader(PROPOSER0) | ~promise(ACCEPTOR1,PROPOSER2) | ((ACCEPTOR0 = ACCEPTOR1 | PROPOSER1 ~= PROPOSER2 | PROPOSER0 = PROPOSER1) & (ACCEPTOR0 = ACCEPTOR1 | PROPOSER0 = PROPOSER2 | PROPOSER0 = PROPOSER1 | PROPOSER1 = PROPOSER2))


=== Prime Orbit 16 =====================
size : 36
num_suborbits: 1
258 (*) : ---------1----1-------1----
258     : ['didNotPromise(acceptor0)', 'leader(proposer2)', 'promise(acceptor2,proposer1)']
259     : ---------1---1---------1---
259     : ['didNotPromise(acceptor0)', 'leader(proposer1)', 'promise(acceptor2,proposer2)']
260     : ---------1----1------1-----
260     : ['didNotPromise(acceptor0)', 'leader(proposer2)', 'promise(acceptor2,proposer0)']
261     : ---------1--1----------1---
261     : ['didNotPromise(acceptor0)', 'leader(proposer0)', 'promise(acceptor2,proposer2)']
262     : ---------1---1-------1-----
262     : ['didNotPromise(acceptor0)', 'leader(proposer1)', 'promise(acceptor2,proposer0)']
263     : ---------1--1---------1----
263     : ['didNotPromise(acceptor0)', 'leader(proposer0)', 'promise(acceptor2,proposer1)']
264     : ---------1----1----1-------
264     : ['didNotPromise(acceptor0)', 'leader(proposer2)', 'promise(acceptor1,proposer1)']
265     : ---------1---1------1------
265     : ['didNotPromise(acceptor0)', 'leader(proposer1)', 'promise(acceptor1,proposer2)']
266     : ---------1----1---1--------
266     : ['didNotPromise(acceptor0)', 'leader(proposer2)', 'promise(acceptor1,proposer0)']
267     : ---------1--1-------1------
267     : ['didNotPromise(acceptor0)', 'leader(proposer0)', 'promise(acceptor1,proposer2)']
268     : ---------1---1----1--------
268     : ['didNotPromise(acceptor0)', 'leader(proposer1)', 'promise(acceptor1,proposer0)']
269     : ---------1--1------1-------
269     : ['didNotPromise(acceptor0)', 'leader(proposer0)', 'promise(acceptor1,proposer1)']
270     : ----------1---1-------1----
270     : ['didNotPromise(acceptor1)', 'leader(proposer2)', 'promise(acceptor2,proposer1)']
271     : ----------1--1---------1---
271     : ['didNotPromise(acceptor1)', 'leader(proposer1)', 'promise(acceptor2,proposer2)']
272     : ----------1---1------1-----
272     : ['didNotPromise(acceptor1)', 'leader(proposer2)', 'promise(acceptor2,proposer0)']
273     : ----------1-1----------1---
273     : ['didNotPromise(acceptor1)', 'leader(proposer0)', 'promise(acceptor2,proposer2)']
274     : ----------1--1-------1-----
274     : ['didNotPromise(acceptor1)', 'leader(proposer1)', 'promise(acceptor2,proposer0)']
275     : ----------1-1---------1----
275     : ['didNotPromise(acceptor1)', 'leader(proposer0)', 'promise(acceptor2,proposer1)']
276     : ----------1---1-1----------
276     : ['didNotPromise(acceptor1)', 'leader(proposer2)', 'promise(acceptor0,proposer1)']
277     : ----------1--1---1---------
277     : ['didNotPromise(acceptor1)', 'leader(proposer1)', 'promise(acceptor0,proposer2)']
278     : ----------1---11-----------
278     : ['didNotPromise(acceptor1)', 'leader(proposer2)', 'promise(acceptor0,proposer0)']
279     : ----------1-1----1---------
279     : ['didNotPromise(acceptor1)', 'leader(proposer0)', 'promise(acceptor0,proposer2)']
280     : ----------1--1-1-----------
280     : ['didNotPromise(acceptor1)', 'leader(proposer1)', 'promise(acceptor0,proposer0)']
281     : ----------1-1---1----------
281     : ['didNotPromise(acceptor1)', 'leader(proposer0)', 'promise(acceptor0,proposer1)']
282     : -----------1--1----1-------
282     : ['didNotPromise(acceptor2)', 'leader(proposer2)', 'promise(acceptor1,proposer1)']
283     : -----------1-1------1------
283     : ['didNotPromise(acceptor2)', 'leader(proposer1)', 'promise(acceptor1,proposer2)']
284     : -----------1--1---1--------
284     : ['didNotPromise(acceptor2)', 'leader(proposer2)', 'promise(acceptor1,proposer0)']
285     : -----------11-------1------
285     : ['didNotPromise(acceptor2)', 'leader(proposer0)', 'promise(acceptor1,proposer2)']
286     : -----------1-1----1--------
286     : ['didNotPromise(acceptor2)', 'leader(proposer1)', 'promise(acceptor1,proposer0)']
287     : -----------11------1-------
287     : ['didNotPromise(acceptor2)', 'leader(proposer0)', 'promise(acceptor1,proposer1)']
288     : -----------1--1-1----------
288     : ['didNotPromise(acceptor2)', 'leader(proposer2)', 'promise(acceptor0,proposer1)']
289     : -----------1-1---1---------
289     : ['didNotPromise(acceptor2)', 'leader(proposer1)', 'promise(acceptor0,proposer2)']
290     : -----------1--11-----------
290     : ['didNotPromise(acceptor2)', 'leader(proposer2)', 'promise(acceptor0,proposer0)']
291     : -----------11----1---------
291     : ['didNotPromise(acceptor2)', 'leader(proposer0)', 'promise(acceptor0,proposer2)']
292     : -----------1-1-1-----------
292     : ['didNotPromise(acceptor2)', 'leader(proposer1)', 'promise(acceptor0,proposer0)']
293     : -----------11---1----------
293     : ['didNotPromise(acceptor2)', 'leader(proposer0)', 'promise(acceptor0,proposer1)']
num_forall :   0
num_exists :   0
num_literals : 0
quantified form : None
qcost : 0




---------- QPrime ----------


---------- ConstArgBinding ----------

terms: ['didNotPromise(acceptor0)', 'leader(proposer2)', 'promise(acceptor2,proposer1)']

sign_func_name2args: {'0$didNotPromise': [(Const('acceptor0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))),)], '0$leader': [(Const('proposer2', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))),)], '0$promise': [(Const('acceptor2', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Const('proposer1', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))))]}

const2sigs: {Const('acceptor0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))): [acceptor$0$didNotPromise$0$0], Const('proposer2', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))): [proposer$0$leader$0$0], Const('acceptor2', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))): [acceptor$0$promise$0$0], Const('proposer1', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))): [proposer$0$promise$1$0]}

sig2const: {'acceptor$0$didNotPromise$0$0': Const('acceptor0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), 'proposer$0$leader$0$0': Const('proposer2', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))), 'acceptor$0$promise$0$0': Const('acceptor2', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), 'proposer$0$promise$1$0': Const('proposer1', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))}


---------- ArgPartition ----------

sort2class_sigs: {EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')): [acceptor$0$didNotPromise$0$0, acceptor$0$promise$0$0], EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')): [proposer$0$leader$0$0, proposer$0$promise$1$0]}

sort2part_sig: {EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')): acceptor$0$didNotPromise$0$0 | acceptor$0$promise$0$0, EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')): proposer$0$leader$0$0 | proposer$0$promise$1$0}

part_sig: ('acceptor$0$didNotPromise$0$0 | acceptor$0$promise$0$0', 'proposer$0$leader$0$0 | proposer$0$promise$1$0')


---------- SigGenerator ----------

terms:  ['didNotPromise(acceptor0)', 'leader(proposer2)', 'promise(acceptor2,proposer1)']

func_name2symbol:  {'didNotPromise': Const('didNotPromise', FunctionSort(EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')), BooleanSort())), 'leader': Const('leader', FunctionSort(EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')), BooleanSort())), 'promise': Const('promise', FunctionSort(EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')), EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')), BooleanSort()))}

func_name2args_sort:  {'didNotPromise': (EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')),), 'leader': (EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')),), 'promise': (EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')), EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))}

sign_func_name2count:  {'0$didNotPromise': 1, '0$leader': 1, '0$promise': 1}


---------- ProductArgPartition ----------

sort2class_sigs: {EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')): [acceptor$0$didNotPromise$0$0, acceptor$0$promise$0$0], EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')): [proposer$0$leader$0$0, proposer$0$promise$1$0]}

sort2part_sig: {EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')): acceptor$0$didNotPromise$0$0 | acceptor$0$promise$0$0, EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')): proposer$0$leader$0$0 | proposer$0$promise$1$0}

	sort: acceptor

	identical_classes: {'acceptor$0$didNotPromise$0': [acceptor$0$didNotPromise$0$0], 'acceptor$0$promise$0': [acceptor$0$promise$0$0]}

	identical_single_classes: {'acceptor$0$didNotPromise$0': acceptor$0$didNotPromise$0$0, 'acceptor$0$promise$0': acceptor$0$promise$0$0}

	identical_multi_classes: {}

	sort: proposer

	identical_classes: {'proposer$0$leader$0': [proposer$0$leader$0$0], 'proposer$0$promise$1': [proposer$0$promise$1$0]}

	identical_single_classes: {'proposer$0$leader$0': proposer$0$leader$0$0, 'proposer$0$promise$1': proposer$0$promise$1$0}

	identical_multi_classes: {}


---------- QInference: _set_sort_to_quantifier_mode ----------

quantifier mode: acceptor: QuantifierMode.forall

quantifier mode: proposer: QuantifierMode.forall


---------- QInference: _set_constraint_mode ----------

constraint mode: ConstraintMode.no_merge


---------- QFormula: _set_qvars ----------

forall_qvars: {Var('PROPOSER0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))), Var('ACCEPTOR0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Var('ACCEPTOR1', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Var('PROPOSER1', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))}

exists_qvars: set()


---------- QFormula: _set_signed_func_name_to_args ----------

signed_func_name2args: {'0$didNotPromise': [[Var('ACCEPTOR0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')))]], '0$leader': [[Var('PROPOSER0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))]], '0$promise': [[Var('ACCEPTOR1', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Var('PROPOSER1', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))]]}


---------- QFormula: _set_qterms ----------

qterms: ['didNotPromise(ACCEPTOR0)', 'promise(ACCEPTOR1,PROPOSER1)', 'leader(PROPOSER0)']


---------- QFormula: get_qclause ----------

qclause: forall PROPOSER1,ACCEPTOR1,PROPOSER0,ACCEPTOR0. ~didNotPromise(ACCEPTOR0) | ~promise(ACCEPTOR1,PROPOSER1) | ~leader(PROPOSER0) | (PROPOSER0 = PROPOSER1 | ACCEPTOR0 = ACCEPTOR1)


=== Prime Orbit 18 =====================
size : 9
num_suborbits: 1
321 (*) : --------0-----1--0---------
321     : ['leader(proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~promise(acceptor0,proposer2)']
322     : -------0-----1--0----------
322     : ['leader(proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~promise(acceptor0,proposer1)']
323     : ------0-----1--0-----------
323     : ['leader(proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~promise(acceptor0,proposer0)']
324     : -----0--------1-----0------
324     : ['leader(proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~promise(acceptor1,proposer2)']
325     : ----0--------1-----0-------
325     : ['leader(proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~promise(acceptor1,proposer1)']
326     : ---0--------1-----0--------
326     : ['leader(proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~promise(acceptor1,proposer0)']
327     : --0-----------1--------0---
327     : ['leader(proposer2)', '~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~promise(acceptor2,proposer2)']
328     : -0-----------1--------0----
328     : ['leader(proposer1)', '~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~promise(acceptor2,proposer1)']
329     : 0-----------1--------0-----
329     : ['leader(proposer0)', '~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~promise(acceptor2,proposer0)']
num_forall :   0
num_exists :   0
num_literals : 0
quantified form : None
qcost : 0




---------- QPrime ----------


---------- ConstArgBinding ----------

terms: ['~chosenAt(quorum__acceptor1_acceptor2,proposer2)', 'leader(proposer2)', '~promise(acceptor0,proposer2)', '~member(acceptor0,quorum__acceptor1_acceptor2)']

sign_func_name2args: {'1$chosenAt': [(Const('quorum__acceptor1_acceptor2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), Const('proposer2', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))))], '0$leader': [(Const('proposer2', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))),)], '1$promise': [(Const('acceptor0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Const('proposer2', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))))], '1$member': [(Const('acceptor0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Const('quorum__acceptor1_acceptor2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))))]}

const2sigs: {Const('quorum__acceptor1_acceptor2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))): [quorum$1$chosenAt$0$0, quorum$1$member$1$0], Const('proposer2', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))): [proposer$1$chosenAt$1$0, proposer$0$leader$0$0, proposer$1$promise$1$0], Const('acceptor0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))): [acceptor$1$promise$0$0, acceptor$1$member$0$0]}

sig2const: {'quorum$1$chosenAt$0$0': Const('quorum__acceptor1_acceptor2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), 'proposer$1$chosenAt$1$0': Const('proposer2', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))), 'proposer$0$leader$0$0': Const('proposer2', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))), 'acceptor$1$promise$0$0': Const('acceptor0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), 'proposer$1$promise$1$0': Const('proposer2', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))), 'acceptor$1$member$0$0': Const('acceptor0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), 'quorum$1$member$1$0': Const('quorum__acceptor1_acceptor2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')))}


---------- ArgPartition ----------

sort2class_sigs: {EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')): [quorum$1$chosenAt$0$0; quorum$1$member$1$0], EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')): [proposer$0$leader$0$0; proposer$1$chosenAt$1$0; proposer$1$promise$1$0], EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')): [acceptor$1$member$0$0; acceptor$1$promise$0$0]}

sort2part_sig: {EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')): quorum$1$chosenAt$0$0; quorum$1$member$1$0, EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')): proposer$0$leader$0$0; proposer$1$chosenAt$1$0; proposer$1$promise$1$0, EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')): acceptor$1$member$0$0; acceptor$1$promise$0$0}

part_sig: ('acceptor$1$member$0$0; acceptor$1$promise$0$0', 'proposer$0$leader$0$0; proposer$1$chosenAt$1$0; proposer$1$promise$1$0', 'quorum$1$chosenAt$0$0; quorum$1$member$1$0')


---------- SigGenerator ----------

terms:  ['~chosenAt(quorum__acceptor1_acceptor2,proposer2)', 'leader(proposer2)', '~promise(acceptor0,proposer2)', '~member(acceptor0,quorum__acceptor1_acceptor2)']

func_name2symbol:  {'chosenAt': Const('chosenAt', FunctionSort(EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')), EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')), BooleanSort())), 'leader': Const('leader', FunctionSort(EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')), BooleanSort())), 'promise': Const('promise', FunctionSort(EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')), EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')), BooleanSort())), 'member': Const('member', FunctionSort(EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')), EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')), BooleanSort()))}

func_name2args_sort:  {'chosenAt': (EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')), EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))), 'leader': (EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')),), 'promise': (EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')), EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))), 'member': (EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')), EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')))}

sign_func_name2count:  {'1$chosenAt': 1, '0$leader': 1, '1$promise': 1, '1$member': 1}


---------- ProductArgPartition ----------

sort2class_sigs: {EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')): [quorum$1$chosenAt$0$0; quorum$1$member$1$0], EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')): [proposer$0$leader$0$0; proposer$1$chosenAt$1$0; proposer$1$promise$1$0], EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')): [acceptor$1$member$0$0; acceptor$1$promise$0$0]}

sort2part_sig: {EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')): quorum$1$chosenAt$0$0; quorum$1$member$1$0, EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')): proposer$0$leader$0$0; proposer$1$chosenAt$1$0; proposer$1$promise$1$0, EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')): acceptor$1$member$0$0; acceptor$1$promise$0$0}

	sort: quorum

	identical_classes: {'quorum$1$chosenAt$0; quorum$1$member$1': [quorum$1$chosenAt$0$0; quorum$1$member$1$0]}

	identical_single_classes: {'quorum$1$chosenAt$0; quorum$1$member$1': quorum$1$chosenAt$0$0; quorum$1$member$1$0}

	identical_multi_classes: {}

	sort: proposer

	identical_classes: {'proposer$0$leader$0; proposer$1$chosenAt$1; proposer$1$promise$1': [proposer$0$leader$0$0; proposer$1$chosenAt$1$0; proposer$1$promise$1$0]}

	identical_single_classes: {'proposer$0$leader$0; proposer$1$chosenAt$1; proposer$1$promise$1': proposer$0$leader$0$0; proposer$1$chosenAt$1$0; proposer$1$promise$1$0}

	identical_multi_classes: {}

	sort: acceptor

	identical_classes: {'acceptor$1$member$0; acceptor$1$promise$0': [acceptor$1$member$0$0; acceptor$1$promise$0$0]}

	identical_single_classes: {'acceptor$1$member$0; acceptor$1$promise$0': acceptor$1$member$0$0; acceptor$1$promise$0$0}

	identical_multi_classes: {}


---------- QInference: _set_sort_to_quantifier_mode ----------

quantifier mode: quorum: QuantifierMode.forall

quantifier mode: proposer: QuantifierMode.forall

quantifier mode: acceptor: QuantifierMode.forall


---------- QInference: _set_constraint_mode ----------

constraint mode: ConstraintMode.no_merge


---------- QFormula: _set_qvars ----------

forall_qvars: {Var('PROPOSER0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))), Var('ACCEPTOR0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Var('QUORUM0', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')))}

exists_qvars: set()


---------- QFormula: _set_signed_func_name_to_args ----------

signed_func_name2args: {'1$chosenAt': [[Var('QUORUM0', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), Var('PROPOSER0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))]], '0$leader': [[Var('PROPOSER0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))]], '1$promise': [[Var('ACCEPTOR0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Var('PROPOSER0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))]], '1$member': [[Var('ACCEPTOR0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Var('QUORUM0', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')))]]}


---------- QFormula: _set_qterms ----------

qterms: ['~promise(ACCEPTOR0,PROPOSER0)', 'leader(PROPOSER0)', '~member(ACCEPTOR0,QUORUM0)', '~chosenAt(QUORUM0,PROPOSER0)']


---------- QFormula: get_qclause ----------

qclause: forall QUORUM0,PROPOSER0,ACCEPTOR0. promise(ACCEPTOR0,PROPOSER0) | ~leader(PROPOSER0) | member(ACCEPTOR0,QUORUM0) | chosenAt(QUORUM0,PROPOSER0)


=== Prime Orbit 19 =====================
size : 9
num_suborbits: 1
330 (*) : --------------1--0-----0---
330     : ['leader(proposer2)', '~promise(acceptor0,proposer2)', '~promise(acceptor2,proposer2)']
331     : -------------1--0-----0----
331     : ['leader(proposer1)', '~promise(acceptor0,proposer1)', '~promise(acceptor2,proposer1)']
332     : ------------1--0-----0-----
332     : ['leader(proposer0)', '~promise(acceptor0,proposer0)', '~promise(acceptor2,proposer0)']
333     : --------------1--0--0------
333     : ['leader(proposer2)', '~promise(acceptor0,proposer2)', '~promise(acceptor1,proposer2)']
334     : -------------1--0--0-------
334     : ['leader(proposer1)', '~promise(acceptor0,proposer1)', '~promise(acceptor1,proposer1)']
335     : ------------1--0--0--------
335     : ['leader(proposer0)', '~promise(acceptor0,proposer0)', '~promise(acceptor1,proposer0)']
336     : --------------1-----0--0---
336     : ['leader(proposer2)', '~promise(acceptor1,proposer2)', '~promise(acceptor2,proposer2)']
337     : -------------1-----0--0----
337     : ['leader(proposer1)', '~promise(acceptor1,proposer1)', '~promise(acceptor2,proposer1)']
338     : ------------1-----0--0-----
338     : ['leader(proposer0)', '~promise(acceptor1,proposer0)', '~promise(acceptor2,proposer0)']
num_forall :   0
num_exists :   0
num_literals : 0
quantified form : None
qcost : 0




---------- QPrime ----------


---------- ConstArgBinding ----------

terms: ['leader(proposer2)', '~promise(acceptor0,proposer2)', '~promise(acceptor2,proposer2)']

sign_func_name2args: {'0$leader': [(Const('proposer2', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))),)], '1$promise': [(Const('acceptor0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Const('proposer2', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))), (Const('acceptor2', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Const('proposer2', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))))]}

const2sigs: {Const('proposer2', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))): [proposer$0$leader$0$0, proposer$1$promise$1$0, proposer$1$promise$1$1], Const('acceptor0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))): [acceptor$1$promise$0$0], Const('acceptor2', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))): [acceptor$1$promise$0$1]}

sig2const: {'proposer$0$leader$0$0': Const('proposer2', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))), 'acceptor$1$promise$0$0': Const('acceptor0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), 'proposer$1$promise$1$0': Const('proposer2', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))), 'acceptor$1$promise$0$1': Const('acceptor2', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), 'proposer$1$promise$1$1': Const('proposer2', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))}


---------- ArgPartition ----------

sort2class_sigs: {EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')): [proposer$0$leader$0$0; proposer$1$promise$1$0; proposer$1$promise$1$1], EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')): [acceptor$1$promise$0$0, acceptor$1$promise$0$1]}

sort2part_sig: {EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')): proposer$0$leader$0$0; proposer$1$promise$1$0; proposer$1$promise$1$1, EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')): acceptor$1$promise$0$0 | acceptor$1$promise$0$1}

part_sig: ('acceptor$1$promise$0$0 | acceptor$1$promise$0$1', 'proposer$0$leader$0$0; proposer$1$promise$1$0; proposer$1$promise$1$1')


---------- SigGenerator ----------

terms:  ['leader(proposer2)', '~promise(acceptor0,proposer2)', '~promise(acceptor2,proposer2)']

func_name2symbol:  {'leader': Const('leader', FunctionSort(EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')), BooleanSort())), 'promise': Const('promise', FunctionSort(EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')), EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')), BooleanSort()))}

func_name2args_sort:  {'leader': (EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')),), 'promise': (EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')), EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))}

sign_func_name2count:  {'0$leader': 1, '1$promise': 2}


---------- ProductArgPartition ----------

sort2class_sigs: {EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')): [proposer$0$leader$0$0; proposer$1$promise$1$0; proposer$1$promise$1$1], EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')): [acceptor$1$promise$0$0, acceptor$1$promise$0$1]}

sort2part_sig: {EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')): proposer$0$leader$0$0; proposer$1$promise$1$0; proposer$1$promise$1$1, EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')): acceptor$1$promise$0$0 | acceptor$1$promise$0$1}

	sort: proposer

	identical_classes: {'proposer$0$leader$0; proposer$1$promise$1; proposer$1$promise$1': [proposer$0$leader$0$0; proposer$1$promise$1$0; proposer$1$promise$1$1]}

	identical_single_classes: {'proposer$0$leader$0; proposer$1$promise$1; proposer$1$promise$1': proposer$0$leader$0$0; proposer$1$promise$1$0; proposer$1$promise$1$1}

	identical_multi_classes: {}

	sort: acceptor

	identical_classes: {'acceptor$1$promise$0': [acceptor$1$promise$0$0, acceptor$1$promise$0$1]}

	identical_single_classes: {}

	identical_multi_classes: {'acceptor$1$promise$0': [acceptor$1$promise$0$0, acceptor$1$promise$0$1]}


---------- QInference: _set_sort_to_quantifier_mode ----------

quantifier mode: proposer: QuantifierMode.forall

quantifier mode: acceptor: QuantifierMode.forall


---------- QInference: _set_constraint_mode ----------

constraint mode: ConstraintMode.no_merge


---------- QFormula: _set_qvars ----------

forall_qvars: {Var('PROPOSER0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))), Var('ACCEPTOR0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Var('ACCEPTOR1', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')))}

exists_qvars: set()


---------- QFormula: _set_signed_func_name_to_args ----------

signed_func_name2args: {'0$leader': [[Var('PROPOSER0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))]], '1$promise': [[Var('ACCEPTOR0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Var('PROPOSER0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))], [Var('ACCEPTOR1', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Var('PROPOSER0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))]]}


---------- QFormula: _set_qterms ----------

qterms: ['leader(PROPOSER0)', '~promise(ACCEPTOR1,PROPOSER0)', '~promise(ACCEPTOR0,PROPOSER0)']


---------- QFormula: get_qclause ----------

qclause: forall ACCEPTOR1,PROPOSER0,ACCEPTOR0. ~leader(PROPOSER0) | promise(ACCEPTOR1,PROPOSER0) | promise(ACCEPTOR0,PROPOSER0) | ACCEPTOR0 = ACCEPTOR1


=== Prime Orbit 20 =====================
size : 9
num_suborbits: 1
339 (*) : --0--------1--1------------
339     : ['didNotPromise(acceptor2)', 'leader(proposer2)', '~chosenAt(quorum__acceptor0_acceptor1,proposer2)']
340     : -0---------1-1-------------
340     : ['didNotPromise(acceptor2)', 'leader(proposer1)', '~chosenAt(quorum__acceptor0_acceptor1,proposer1)']
341     : 0----------11--------------
341     : ['didNotPromise(acceptor2)', 'leader(proposer0)', '~chosenAt(quorum__acceptor0_acceptor1,proposer0)']
342     : -----0----1---1------------
342     : ['didNotPromise(acceptor1)', 'leader(proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)']
343     : ----0-----1--1-------------
343     : ['didNotPromise(acceptor1)', 'leader(proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)']
344     : ---0------1-1--------------
344     : ['didNotPromise(acceptor1)', 'leader(proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)']
345     : --------01----1------------
345     : ['didNotPromise(acceptor0)', 'leader(proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)']
346     : -------0-1---1-------------
346     : ['didNotPromise(acceptor0)', 'leader(proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)']
347     : ------0--1--1--------------
347     : ['didNotPromise(acceptor0)', 'leader(proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)']
num_forall :   0
num_exists :   0
num_literals : 0
quantified form : None
qcost : 0




---------- QPrime ----------


---------- ConstArgBinding ----------

terms: ['~chosenAt(quorum__acceptor0_acceptor1,proposer2)', 'didNotPromise(acceptor2)', 'leader(proposer2)', '~member(acceptor2,quorum__acceptor0_acceptor1)']

sign_func_name2args: {'1$chosenAt': [(Const('quorum__acceptor0_acceptor1', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), Const('proposer2', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))))], '0$didNotPromise': [(Const('acceptor2', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))),)], '0$leader': [(Const('proposer2', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))),)], '1$member': [(Const('acceptor2', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Const('quorum__acceptor0_acceptor1', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))))]}

const2sigs: {Const('quorum__acceptor0_acceptor1', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))): [quorum$1$chosenAt$0$0, quorum$1$member$1$0], Const('proposer2', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))): [proposer$1$chosenAt$1$0, proposer$0$leader$0$0], Const('acceptor2', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))): [acceptor$0$didNotPromise$0$0, acceptor$1$member$0$0]}

sig2const: {'quorum$1$chosenAt$0$0': Const('quorum__acceptor0_acceptor1', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), 'proposer$1$chosenAt$1$0': Const('proposer2', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))), 'acceptor$0$didNotPromise$0$0': Const('acceptor2', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), 'proposer$0$leader$0$0': Const('proposer2', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))), 'acceptor$1$member$0$0': Const('acceptor2', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), 'quorum$1$member$1$0': Const('quorum__acceptor0_acceptor1', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')))}


---------- ArgPartition ----------

sort2class_sigs: {EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')): [quorum$1$chosenAt$0$0; quorum$1$member$1$0], EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')): [proposer$0$leader$0$0; proposer$1$chosenAt$1$0], EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')): [acceptor$0$didNotPromise$0$0; acceptor$1$member$0$0]}

sort2part_sig: {EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')): quorum$1$chosenAt$0$0; quorum$1$member$1$0, EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')): proposer$0$leader$0$0; proposer$1$chosenAt$1$0, EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')): acceptor$0$didNotPromise$0$0; acceptor$1$member$0$0}

part_sig: ('acceptor$0$didNotPromise$0$0; acceptor$1$member$0$0', 'proposer$0$leader$0$0; proposer$1$chosenAt$1$0', 'quorum$1$chosenAt$0$0; quorum$1$member$1$0')


---------- SigGenerator ----------

terms:  ['~chosenAt(quorum__acceptor0_acceptor1,proposer2)', 'didNotPromise(acceptor2)', 'leader(proposer2)', '~member(acceptor2,quorum__acceptor0_acceptor1)']

func_name2symbol:  {'chosenAt': Const('chosenAt', FunctionSort(EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')), EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')), BooleanSort())), 'didNotPromise': Const('didNotPromise', FunctionSort(EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')), BooleanSort())), 'leader': Const('leader', FunctionSort(EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')), BooleanSort())), 'member': Const('member', FunctionSort(EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')), EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')), BooleanSort()))}

func_name2args_sort:  {'chosenAt': (EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')), EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))), 'didNotPromise': (EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')),), 'leader': (EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')),), 'member': (EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')), EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')))}

sign_func_name2count:  {'1$chosenAt': 1, '0$didNotPromise': 1, '0$leader': 1, '1$member': 1}


---------- ProductArgPartition ----------

sort2class_sigs: {EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')): [quorum$1$chosenAt$0$0; quorum$1$member$1$0], EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')): [proposer$0$leader$0$0; proposer$1$chosenAt$1$0], EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')): [acceptor$0$didNotPromise$0$0; acceptor$1$member$0$0]}

sort2part_sig: {EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')): quorum$1$chosenAt$0$0; quorum$1$member$1$0, EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')): proposer$0$leader$0$0; proposer$1$chosenAt$1$0, EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')): acceptor$0$didNotPromise$0$0; acceptor$1$member$0$0}

	sort: quorum

	identical_classes: {'quorum$1$chosenAt$0; quorum$1$member$1': [quorum$1$chosenAt$0$0; quorum$1$member$1$0]}

	identical_single_classes: {'quorum$1$chosenAt$0; quorum$1$member$1': quorum$1$chosenAt$0$0; quorum$1$member$1$0}

	identical_multi_classes: {}

	sort: proposer

	identical_classes: {'proposer$0$leader$0; proposer$1$chosenAt$1': [proposer$0$leader$0$0; proposer$1$chosenAt$1$0]}

	identical_single_classes: {'proposer$0$leader$0; proposer$1$chosenAt$1': proposer$0$leader$0$0; proposer$1$chosenAt$1$0}

	identical_multi_classes: {}

	sort: acceptor

	identical_classes: {'acceptor$0$didNotPromise$0; acceptor$1$member$0': [acceptor$0$didNotPromise$0$0; acceptor$1$member$0$0]}

	identical_single_classes: {'acceptor$0$didNotPromise$0; acceptor$1$member$0': acceptor$0$didNotPromise$0$0; acceptor$1$member$0$0}

	identical_multi_classes: {}


---------- QInference: _set_sort_to_quantifier_mode ----------

quantifier mode: quorum: QuantifierMode.forall

quantifier mode: proposer: QuantifierMode.forall

quantifier mode: acceptor: QuantifierMode.forall


---------- QInference: _set_constraint_mode ----------

constraint mode: ConstraintMode.no_merge


---------- QFormula: _set_qvars ----------

forall_qvars: {Var('PROPOSER0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))), Var('ACCEPTOR0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Var('QUORUM0', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')))}

exists_qvars: set()


---------- QFormula: _set_signed_func_name_to_args ----------

signed_func_name2args: {'1$chosenAt': [[Var('QUORUM0', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), Var('PROPOSER0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))]], '0$didNotPromise': [[Var('ACCEPTOR0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')))]], '0$leader': [[Var('PROPOSER0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))]], '1$member': [[Var('ACCEPTOR0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Var('QUORUM0', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')))]]}


---------- QFormula: _set_qterms ----------

qterms: ['didNotPromise(ACCEPTOR0)', 'leader(PROPOSER0)', '~member(ACCEPTOR0,QUORUM0)', '~chosenAt(QUORUM0,PROPOSER0)']


---------- QFormula: get_qclause ----------

qclause: forall QUORUM0,PROPOSER0,ACCEPTOR0. ~didNotPromise(ACCEPTOR0) | ~leader(PROPOSER0) | member(ACCEPTOR0,QUORUM0) | chosenAt(QUORUM0,PROPOSER0)


=== Prime Orbit 21 =====================
size : 18
num_suborbits: 1
348 (*) : -----------1--1-----0------
348     : ['didNotPromise(acceptor2)', 'leader(proposer2)', '~promise(acceptor1,proposer2)']
349     : -----------1-1-----0-------
349     : ['didNotPromise(acceptor2)', 'leader(proposer1)', '~promise(acceptor1,proposer1)']
350     : -----------11-----0--------
350     : ['didNotPromise(acceptor2)', 'leader(proposer0)', '~promise(acceptor1,proposer0)']
351     : ----------1---1--------0---
351     : ['didNotPromise(acceptor1)', 'leader(proposer2)', '~promise(acceptor2,proposer2)']
352     : ----------1--1--------0----
352     : ['didNotPromise(acceptor1)', 'leader(proposer1)', '~promise(acceptor2,proposer1)']
353     : ----------1-1--------0-----
353     : ['didNotPromise(acceptor1)', 'leader(proposer0)', '~promise(acceptor2,proposer0)']
354     : -----------1--1--0---------
354     : ['didNotPromise(acceptor2)', 'leader(proposer2)', '~promise(acceptor0,proposer2)']
355     : -----------1-1--0----------
355     : ['didNotPromise(acceptor2)', 'leader(proposer1)', '~promise(acceptor0,proposer1)']
356     : -----------11--0-----------
356     : ['didNotPromise(acceptor2)', 'leader(proposer0)', '~promise(acceptor0,proposer0)']
357     : ---------1----1--------0---
357     : ['didNotPromise(acceptor0)', 'leader(proposer2)', '~promise(acceptor2,proposer2)']
358     : ---------1---1--------0----
358     : ['didNotPromise(acceptor0)', 'leader(proposer1)', '~promise(acceptor2,proposer1)']
359     : ---------1--1--------0-----
359     : ['didNotPromise(acceptor0)', 'leader(proposer0)', '~promise(acceptor2,proposer0)']
360     : ----------1---1--0---------
360     : ['didNotPromise(acceptor1)', 'leader(proposer2)', '~promise(acceptor0,proposer2)']
361     : ----------1--1--0----------
361     : ['didNotPromise(acceptor1)', 'leader(proposer1)', '~promise(acceptor0,proposer1)']
362     : ----------1-1--0-----------
362     : ['didNotPromise(acceptor1)', 'leader(proposer0)', '~promise(acceptor0,proposer0)']
363     : ---------1----1-----0------
363     : ['didNotPromise(acceptor0)', 'leader(proposer2)', '~promise(acceptor1,proposer2)']
364     : ---------1---1-----0-------
364     : ['didNotPromise(acceptor0)', 'leader(proposer1)', '~promise(acceptor1,proposer1)']
365     : ---------1--1-----0--------
365     : ['didNotPromise(acceptor0)', 'leader(proposer0)', '~promise(acceptor1,proposer0)']
num_forall :   0
num_exists :   0
num_literals : 0
quantified form : None
qcost : 0




---------- QPrime ----------


---------- ConstArgBinding ----------

terms: ['didNotPromise(acceptor2)', 'leader(proposer2)', '~promise(acceptor1,proposer2)']

sign_func_name2args: {'0$didNotPromise': [(Const('acceptor2', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))),)], '0$leader': [(Const('proposer2', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))),)], '1$promise': [(Const('acceptor1', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Const('proposer2', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))))]}

const2sigs: {Const('acceptor2', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))): [acceptor$0$didNotPromise$0$0], Const('proposer2', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))): [proposer$0$leader$0$0, proposer$1$promise$1$0], Const('acceptor1', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))): [acceptor$1$promise$0$0]}

sig2const: {'acceptor$0$didNotPromise$0$0': Const('acceptor2', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), 'proposer$0$leader$0$0': Const('proposer2', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))), 'acceptor$1$promise$0$0': Const('acceptor1', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), 'proposer$1$promise$1$0': Const('proposer2', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))}


---------- ArgPartition ----------

sort2class_sigs: {EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')): [acceptor$0$didNotPromise$0$0, acceptor$1$promise$0$0], EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')): [proposer$0$leader$0$0; proposer$1$promise$1$0]}

sort2part_sig: {EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')): acceptor$0$didNotPromise$0$0 | acceptor$1$promise$0$0, EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')): proposer$0$leader$0$0; proposer$1$promise$1$0}

part_sig: ('acceptor$0$didNotPromise$0$0 | acceptor$1$promise$0$0', 'proposer$0$leader$0$0; proposer$1$promise$1$0')


---------- SigGenerator ----------

terms:  ['didNotPromise(acceptor2)', 'leader(proposer2)', '~promise(acceptor1,proposer2)']

func_name2symbol:  {'didNotPromise': Const('didNotPromise', FunctionSort(EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')), BooleanSort())), 'leader': Const('leader', FunctionSort(EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')), BooleanSort())), 'promise': Const('promise', FunctionSort(EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')), EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')), BooleanSort()))}

func_name2args_sort:  {'didNotPromise': (EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')),), 'leader': (EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')),), 'promise': (EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')), EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))}

sign_func_name2count:  {'0$didNotPromise': 1, '0$leader': 1, '1$promise': 1}


---------- ProductArgPartition ----------

sort2class_sigs: {EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')): [acceptor$0$didNotPromise$0$0, acceptor$1$promise$0$0], EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')): [proposer$0$leader$0$0; proposer$1$promise$1$0]}

sort2part_sig: {EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')): acceptor$0$didNotPromise$0$0 | acceptor$1$promise$0$0, EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')): proposer$0$leader$0$0; proposer$1$promise$1$0}

	sort: acceptor

	identical_classes: {'acceptor$0$didNotPromise$0': [acceptor$0$didNotPromise$0$0], 'acceptor$1$promise$0': [acceptor$1$promise$0$0]}

	identical_single_classes: {'acceptor$0$didNotPromise$0': acceptor$0$didNotPromise$0$0, 'acceptor$1$promise$0': acceptor$1$promise$0$0}

	identical_multi_classes: {}

	sort: proposer

	identical_classes: {'proposer$0$leader$0; proposer$1$promise$1': [proposer$0$leader$0$0; proposer$1$promise$1$0]}

	identical_single_classes: {'proposer$0$leader$0; proposer$1$promise$1': proposer$0$leader$0$0; proposer$1$promise$1$0}

	identical_multi_classes: {}


---------- QInference: _set_sort_to_quantifier_mode ----------

quantifier mode: acceptor: QuantifierMode.forall

quantifier mode: proposer: QuantifierMode.forall


---------- QInference: _set_constraint_mode ----------

constraint mode: ConstraintMode.no_merge


---------- QFormula: _set_qvars ----------

forall_qvars: {Var('PROPOSER0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))), Var('ACCEPTOR0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Var('ACCEPTOR1', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')))}

exists_qvars: set()


---------- QFormula: _set_signed_func_name_to_args ----------

signed_func_name2args: {'0$didNotPromise': [[Var('ACCEPTOR0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')))]], '0$leader': [[Var('PROPOSER0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))]], '1$promise': [[Var('ACCEPTOR1', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Var('PROPOSER0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))]]}


---------- QFormula: _set_qterms ----------

qterms: ['didNotPromise(ACCEPTOR0)', 'leader(PROPOSER0)', '~promise(ACCEPTOR1,PROPOSER0)']


---------- QFormula: get_qclause ----------

qclause: forall ACCEPTOR1,PROPOSER0,ACCEPTOR0. ~didNotPromise(ACCEPTOR0) | ~leader(PROPOSER0) | promise(ACCEPTOR1,PROPOSER0) | ACCEPTOR0 = ACCEPTOR1


=== Prime Orbit 22 =====================
size : 9
num_suborbits: 1
366 (*) : ---------1-11--------------
366     : ['didNotPromise(acceptor0)', 'didNotPromise(acceptor2)', 'leader(proposer0)']
367     : ---------1-1-1-------------
367     : ['didNotPromise(acceptor0)', 'didNotPromise(acceptor2)', 'leader(proposer1)']
368     : ---------1-1--1------------
368     : ['didNotPromise(acceptor0)', 'didNotPromise(acceptor2)', 'leader(proposer2)']
369     : ---------11-1--------------
369     : ['didNotPromise(acceptor0)', 'didNotPromise(acceptor1)', 'leader(proposer0)']
370     : ---------11--1-------------
370     : ['didNotPromise(acceptor0)', 'didNotPromise(acceptor1)', 'leader(proposer1)']
371     : ---------11---1------------
371     : ['didNotPromise(acceptor0)', 'didNotPromise(acceptor1)', 'leader(proposer2)']
372     : ----------111--------------
372     : ['didNotPromise(acceptor1)', 'didNotPromise(acceptor2)', 'leader(proposer0)']
373     : ----------11-1-------------
373     : ['didNotPromise(acceptor1)', 'didNotPromise(acceptor2)', 'leader(proposer1)']
374     : ----------11--1------------
374     : ['didNotPromise(acceptor1)', 'didNotPromise(acceptor2)', 'leader(proposer2)']
num_forall :   0
num_exists :   0
num_literals : 0
quantified form : None
qcost : 0




---------- QPrime ----------


---------- ConstArgBinding ----------

terms: ['didNotPromise(acceptor0)', 'didNotPromise(acceptor2)', 'leader(proposer0)']

sign_func_name2args: {'0$didNotPromise': [(Const('acceptor0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))),), (Const('acceptor2', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))),)], '0$leader': [(Const('proposer0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))),)]}

const2sigs: {Const('acceptor0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))): [acceptor$0$didNotPromise$0$0], Const('acceptor2', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))): [acceptor$0$didNotPromise$0$1], Const('proposer0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))): [proposer$0$leader$0$0]}

sig2const: {'acceptor$0$didNotPromise$0$0': Const('acceptor0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), 'acceptor$0$didNotPromise$0$1': Const('acceptor2', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), 'proposer$0$leader$0$0': Const('proposer0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))}


---------- ArgPartition ----------

sort2class_sigs: {EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')): [acceptor$0$didNotPromise$0$0, acceptor$0$didNotPromise$0$1], EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')): [proposer$0$leader$0$0]}

sort2part_sig: {EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')): acceptor$0$didNotPromise$0$0 | acceptor$0$didNotPromise$0$1, EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')): proposer$0$leader$0$0}

part_sig: ('acceptor$0$didNotPromise$0$0 | acceptor$0$didNotPromise$0$1', 'proposer$0$leader$0$0')


---------- SigGenerator ----------

terms:  ['didNotPromise(acceptor0)', 'didNotPromise(acceptor2)', 'leader(proposer0)']

func_name2symbol:  {'didNotPromise': Const('didNotPromise', FunctionSort(EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')), BooleanSort())), 'leader': Const('leader', FunctionSort(EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')), BooleanSort()))}

func_name2args_sort:  {'didNotPromise': (EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')),), 'leader': (EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')),)}

sign_func_name2count:  {'0$didNotPromise': 2, '0$leader': 1}


---------- ProductArgPartition ----------

sort2class_sigs: {EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')): [acceptor$0$didNotPromise$0$0, acceptor$0$didNotPromise$0$1], EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')): [proposer$0$leader$0$0]}

sort2part_sig: {EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')): acceptor$0$didNotPromise$0$0 | acceptor$0$didNotPromise$0$1, EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')): proposer$0$leader$0$0}

	sort: acceptor

	identical_classes: {'acceptor$0$didNotPromise$0': [acceptor$0$didNotPromise$0$0, acceptor$0$didNotPromise$0$1]}

	identical_single_classes: {}

	identical_multi_classes: {'acceptor$0$didNotPromise$0': [acceptor$0$didNotPromise$0$0, acceptor$0$didNotPromise$0$1]}

	sort: proposer

	identical_classes: {'proposer$0$leader$0': [proposer$0$leader$0$0]}

	identical_single_classes: {'proposer$0$leader$0': proposer$0$leader$0$0}

	identical_multi_classes: {}


---------- QInference: _set_sort_to_quantifier_mode ----------

quantifier mode: acceptor: QuantifierMode.forall

quantifier mode: proposer: QuantifierMode.forall


---------- QInference: _set_constraint_mode ----------

constraint mode: ConstraintMode.no_merge


---------- QFormula: _set_qvars ----------

forall_qvars: {Var('PROPOSER0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))), Var('ACCEPTOR0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Var('ACCEPTOR1', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')))}

exists_qvars: set()


---------- QFormula: _set_signed_func_name_to_args ----------

signed_func_name2args: {'0$didNotPromise': [[Var('ACCEPTOR0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')))], [Var('ACCEPTOR1', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')))]], '0$leader': [[Var('PROPOSER0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))]]}


---------- QFormula: _set_qterms ----------

qterms: ['didNotPromise(ACCEPTOR0)', 'leader(PROPOSER0)', 'didNotPromise(ACCEPTOR1)']


---------- QFormula: get_qclause ----------

qclause: forall ACCEPTOR1,PROPOSER0,ACCEPTOR0. ~didNotPromise(ACCEPTOR0) | ~leader(PROPOSER0) | ~didNotPromise(ACCEPTOR1) | ACCEPTOR0 = ACCEPTOR1


=== Prime Orbit 23 =====================
size : 9
num_suborbits: 1
375 (*) : -0-----0-----1-----1-------
375     : ['leader(proposer1)', 'promise(acceptor1,proposer1)', '~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)']
376     : --0-----0-----1-----1------
376     : ['leader(proposer2)', 'promise(acceptor1,proposer2)', '~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)']
377     : 0-----0-----1-----1--------
377     : ['leader(proposer0)', 'promise(acceptor1,proposer0)', '~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)']
378     : ----0--0-----1--------1----
378     : ['leader(proposer1)', 'promise(acceptor2,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)']
379     : -----0--0-----1--------1---
379     : ['leader(proposer2)', 'promise(acceptor2,proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)']
380     : ---0--0-----1--------1-----
380     : ['leader(proposer0)', 'promise(acceptor2,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)']
381     : -0--0--------1--1----------
381     : ['leader(proposer1)', 'promise(acceptor0,proposer1)', '~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)']
382     : --0--0--------1--1---------
382     : ['leader(proposer2)', 'promise(acceptor0,proposer2)', '~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)']
383     : 0--0--------1--1-----------
383     : ['leader(proposer0)', 'promise(acceptor0,proposer0)', '~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)']
num_forall :   0
num_exists :   0
num_literals : 0
quantified form : None
qcost : 0




---------- QPrime ----------


---------- ConstArgBinding ----------

terms: ['~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', 'leader(proposer1)', 'promise(acceptor1,proposer1)', 'member(acceptor1,quorum__acceptor0_acceptor1)', 'member(acceptor1,quorum__acceptor1_acceptor2)']

sign_func_name2args: {'1$chosenAt': [(Const('quorum__acceptor0_acceptor1', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), Const('proposer1', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))), (Const('quorum__acceptor1_acceptor2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), Const('proposer1', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))))], '0$leader': [(Const('proposer1', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))),)], '0$promise': [(Const('acceptor1', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Const('proposer1', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))))], '0$member': [(Const('acceptor1', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Const('quorum__acceptor0_acceptor1', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')))), (Const('acceptor1', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Const('quorum__acceptor1_acceptor2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))))]}

const2sigs: {Const('quorum__acceptor0_acceptor1', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))): [quorum$1$chosenAt$0$0, quorum$0$member$1$0], Const('proposer1', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))): [proposer$1$chosenAt$1$0, proposer$1$chosenAt$1$1, proposer$0$leader$0$0, proposer$0$promise$1$0], Const('quorum__acceptor1_acceptor2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))): [quorum$1$chosenAt$0$1, quorum$0$member$1$1], Const('acceptor1', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))): [acceptor$0$promise$0$0, acceptor$0$member$0$0, acceptor$0$member$0$1]}

sig2const: {'quorum$1$chosenAt$0$0': Const('quorum__acceptor0_acceptor1', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), 'proposer$1$chosenAt$1$0': Const('proposer1', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))), 'quorum$1$chosenAt$0$1': Const('quorum__acceptor1_acceptor2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), 'proposer$1$chosenAt$1$1': Const('proposer1', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))), 'proposer$0$leader$0$0': Const('proposer1', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))), 'acceptor$0$promise$0$0': Const('acceptor1', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), 'proposer$0$promise$1$0': Const('proposer1', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))), 'acceptor$0$member$0$0': Const('acceptor1', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), 'quorum$0$member$1$0': Const('quorum__acceptor0_acceptor1', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), 'acceptor$0$member$0$1': Const('acceptor1', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), 'quorum$0$member$1$1': Const('quorum__acceptor1_acceptor2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')))}


---------- ArgPartition ----------

sort2class_sigs: {EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')): [quorum$0$member$1$0; quorum$1$chosenAt$0$0, quorum$0$member$1$1; quorum$1$chosenAt$0$1], EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')): [proposer$0$leader$0$0; proposer$0$promise$1$0; proposer$1$chosenAt$1$0; proposer$1$chosenAt$1$1], EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')): [acceptor$0$member$0$0; acceptor$0$member$0$1; acceptor$0$promise$0$0]}

sort2part_sig: {EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')): quorum$0$member$1$0; quorum$1$chosenAt$0$0 | quorum$0$member$1$1; quorum$1$chosenAt$0$1, EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')): proposer$0$leader$0$0; proposer$0$promise$1$0; proposer$1$chosenAt$1$0; proposer$1$chosenAt$1$1, EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')): acceptor$0$member$0$0; acceptor$0$member$0$1; acceptor$0$promise$0$0}

part_sig: ('acceptor$0$member$0$0; acceptor$0$member$0$1; acceptor$0$promise$0$0', 'proposer$0$leader$0$0; proposer$0$promise$1$0; proposer$1$chosenAt$1$0; proposer$1$chosenAt$1$1', 'quorum$0$member$1$0; quorum$1$chosenAt$0$0 | quorum$0$member$1$1; quorum$1$chosenAt$0$1')


---------- SigGenerator ----------

terms:  ['~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', 'leader(proposer1)', 'promise(acceptor1,proposer1)', 'member(acceptor1,quorum__acceptor0_acceptor1)', 'member(acceptor1,quorum__acceptor1_acceptor2)']

func_name2symbol:  {'chosenAt': Const('chosenAt', FunctionSort(EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')), EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')), BooleanSort())), 'leader': Const('leader', FunctionSort(EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')), BooleanSort())), 'promise': Const('promise', FunctionSort(EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')), EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')), BooleanSort())), 'member': Const('member', FunctionSort(EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')), EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')), BooleanSort()))}

func_name2args_sort:  {'chosenAt': (EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')), EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))), 'leader': (EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')),), 'promise': (EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')), EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))), 'member': (EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')), EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')))}

sign_func_name2count:  {'1$chosenAt': 2, '0$leader': 1, '0$promise': 1, '0$member': 2}


---------- ProductArgPartition ----------

sort2class_sigs: {EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')): [quorum$0$member$1$0; quorum$1$chosenAt$0$0, quorum$0$member$1$1; quorum$1$chosenAt$0$1], EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')): [proposer$0$leader$0$0; proposer$0$promise$1$0; proposer$1$chosenAt$1$0; proposer$1$chosenAt$1$1], EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')): [acceptor$0$member$0$0; acceptor$0$member$0$1; acceptor$0$promise$0$0]}

sort2part_sig: {EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')): quorum$0$member$1$0; quorum$1$chosenAt$0$0 | quorum$0$member$1$1; quorum$1$chosenAt$0$1, EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')): proposer$0$leader$0$0; proposer$0$promise$1$0; proposer$1$chosenAt$1$0; proposer$1$chosenAt$1$1, EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')): acceptor$0$member$0$0; acceptor$0$member$0$1; acceptor$0$promise$0$0}

	sort: quorum

	identical_classes: {'quorum$0$member$1; quorum$1$chosenAt$0': [quorum$0$member$1$0; quorum$1$chosenAt$0$0, quorum$0$member$1$1; quorum$1$chosenAt$0$1]}

	identical_single_classes: {}

	identical_multi_classes: {'quorum$0$member$1; quorum$1$chosenAt$0': [quorum$0$member$1$0, quorum$1$chosenAt$0$0, quorum$0$member$1$1, quorum$1$chosenAt$0$1]}

	sort: proposer

	identical_classes: {'proposer$0$leader$0; proposer$0$promise$1; proposer$1$chosenAt$1; proposer$1$chosenAt$1': [proposer$0$leader$0$0; proposer$0$promise$1$0; proposer$1$chosenAt$1$0; proposer$1$chosenAt$1$1]}

	identical_single_classes: {'proposer$0$leader$0; proposer$0$promise$1; proposer$1$chosenAt$1; proposer$1$chosenAt$1': proposer$0$leader$0$0; proposer$0$promise$1$0; proposer$1$chosenAt$1$0; proposer$1$chosenAt$1$1}

	identical_multi_classes: {}

	sort: acceptor

	identical_classes: {'acceptor$0$member$0; acceptor$0$member$0; acceptor$0$promise$0': [acceptor$0$member$0$0; acceptor$0$member$0$1; acceptor$0$promise$0$0]}

	identical_single_classes: {'acceptor$0$member$0; acceptor$0$member$0; acceptor$0$promise$0': acceptor$0$member$0$0; acceptor$0$member$0$1; acceptor$0$promise$0$0}

	identical_multi_classes: {}


---------- QInference: _set_sort_to_quantifier_mode ----------

quantifier mode: quorum: QuantifierMode.forall

quantifier mode: proposer: QuantifierMode.forall

quantifier mode: acceptor: QuantifierMode.forall


---------- QInference: _set_constraint_mode ----------

constraint mode: ConstraintMode.no_merge


---------- QFormula: _set_qvars ----------

forall_qvars: {Var('PROPOSER0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))), Var('ACCEPTOR0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Var('QUORUM1', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), Var('QUORUM0', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')))}

exists_qvars: set()


---------- QFormula: _set_signed_func_name_to_args ----------

signed_func_name2args: {'1$chosenAt': [[Var('QUORUM0', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), Var('PROPOSER0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))], [Var('QUORUM1', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), Var('PROPOSER0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))]], '0$leader': [[Var('PROPOSER0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))]], '0$promise': [[Var('ACCEPTOR0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Var('PROPOSER0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))]], '0$member': [[Var('ACCEPTOR0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Var('QUORUM0', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')))], [Var('ACCEPTOR0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Var('QUORUM1', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')))]]}


---------- QFormula: _set_qterms ----------

qterms: ['~chosenAt(QUORUM1,PROPOSER0)', 'member(ACCEPTOR0,QUORUM0)', 'promise(ACCEPTOR0,PROPOSER0)', 'leader(PROPOSER0)', '~chosenAt(QUORUM0,PROPOSER0)', 'member(ACCEPTOR0,QUORUM1)']


---------- QFormula: get_qclause ----------

qclause: forall QUORUM1,PROPOSER0,QUORUM0,ACCEPTOR0. chosenAt(QUORUM1,PROPOSER0) | ~member(ACCEPTOR0,QUORUM0) | ~promise(ACCEPTOR0,PROPOSER0) | ~leader(PROPOSER0) | chosenAt(QUORUM0,PROPOSER0) | ~member(ACCEPTOR0,QUORUM1) | QUORUM0 = QUORUM1


=== Prime Orbit 24 =====================
size : 9
num_suborbits: 1
384 (*) : -----------0----------000--
384     : ['~didNotPromise(acceptor2)', '~promise(acceptor2,proposer1)', '~promise(acceptor2,proposer2)', '~start(proposer0)']
385     : -----------0---------0-0-0-
385     : ['~didNotPromise(acceptor2)', '~promise(acceptor2,proposer0)', '~promise(acceptor2,proposer2)', '~start(proposer1)']
386     : -----------0---------00---0
386     : ['~didNotPromise(acceptor2)', '~promise(acceptor2,proposer0)', '~promise(acceptor2,proposer1)', '~start(proposer2)']
387     : ----------0--------00---0--
387     : ['~didNotPromise(acceptor1)', '~promise(acceptor1,proposer1)', '~promise(acceptor1,proposer2)', '~start(proposer0)']
388     : ----------0-------0-0----0-
388     : ['~didNotPromise(acceptor1)', '~promise(acceptor1,proposer0)', '~promise(acceptor1,proposer2)', '~start(proposer1)']
389     : ----------0-------00------0
389     : ['~didNotPromise(acceptor1)', '~promise(acceptor1,proposer0)', '~promise(acceptor1,proposer1)', '~start(proposer2)']
390     : ---------0------00------0--
390     : ['~didNotPromise(acceptor0)', '~promise(acceptor0,proposer1)', '~promise(acceptor0,proposer2)', '~start(proposer0)']
391     : ---------0-----0-0-------0-
391     : ['~didNotPromise(acceptor0)', '~promise(acceptor0,proposer0)', '~promise(acceptor0,proposer2)', '~start(proposer1)']
392     : ---------0-----00---------0
392     : ['~didNotPromise(acceptor0)', '~promise(acceptor0,proposer0)', '~promise(acceptor0,proposer1)', '~start(proposer2)']
num_forall :   0
num_exists :   0
num_literals : 0
quantified form : None
qcost : 0




---------- QPrime ----------


---------- ConstArgBinding ----------

terms: ['~didNotPromise(acceptor2)', '~promise(acceptor2,proposer1)', '~promise(acceptor2,proposer2)', '~start(proposer0)']

sign_func_name2args: {'1$didNotPromise': [(Const('acceptor2', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))),)], '1$promise': [(Const('acceptor2', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Const('proposer1', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))), (Const('acceptor2', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Const('proposer2', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))))], '1$start': [(Const('proposer0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))),)]}

const2sigs: {Const('acceptor2', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))): [acceptor$1$didNotPromise$0$0, acceptor$1$promise$0$0, acceptor$1$promise$0$1], Const('proposer1', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))): [proposer$1$promise$1$0], Const('proposer2', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))): [proposer$1$promise$1$1], Const('proposer0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))): [proposer$1$start$0$0]}

sig2const: {'acceptor$1$didNotPromise$0$0': Const('acceptor2', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), 'acceptor$1$promise$0$0': Const('acceptor2', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), 'proposer$1$promise$1$0': Const('proposer1', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))), 'acceptor$1$promise$0$1': Const('acceptor2', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), 'proposer$1$promise$1$1': Const('proposer2', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))), 'proposer$1$start$0$0': Const('proposer0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))}


---------- ArgPartition ----------

sort2class_sigs: {EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')): [acceptor$1$didNotPromise$0$0; acceptor$1$promise$0$0; acceptor$1$promise$0$1], EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')): [proposer$1$promise$1$0, proposer$1$promise$1$1, proposer$1$start$0$0]}

sort2part_sig: {EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')): acceptor$1$didNotPromise$0$0; acceptor$1$promise$0$0; acceptor$1$promise$0$1, EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')): proposer$1$promise$1$0 | proposer$1$promise$1$1 | proposer$1$start$0$0}

part_sig: ('acceptor$1$didNotPromise$0$0; acceptor$1$promise$0$0; acceptor$1$promise$0$1', 'proposer$1$promise$1$0 | proposer$1$promise$1$1 | proposer$1$start$0$0')


---------- SigGenerator ----------

terms:  ['~didNotPromise(acceptor2)', '~promise(acceptor2,proposer1)', '~promise(acceptor2,proposer2)', '~start(proposer0)']

func_name2symbol:  {'didNotPromise': Const('didNotPromise', FunctionSort(EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')), BooleanSort())), 'promise': Const('promise', FunctionSort(EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')), EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')), BooleanSort())), 'start': Const('start', FunctionSort(EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')), BooleanSort()))}

func_name2args_sort:  {'didNotPromise': (EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')),), 'promise': (EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')), EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))), 'start': (EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')),)}

sign_func_name2count:  {'1$didNotPromise': 1, '1$promise': 2, '1$start': 1}


---------- ProductArgPartition ----------

sort2class_sigs: {EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')): [acceptor$1$didNotPromise$0$0; acceptor$1$promise$0$0; acceptor$1$promise$0$1], EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')): [proposer$1$promise$1$0, proposer$1$promise$1$1, proposer$1$start$0$0]}

sort2part_sig: {EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')): acceptor$1$didNotPromise$0$0; acceptor$1$promise$0$0; acceptor$1$promise$0$1, EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')): proposer$1$promise$1$0 | proposer$1$promise$1$1 | proposer$1$start$0$0}

	sort: acceptor

	identical_classes: {'acceptor$1$didNotPromise$0; acceptor$1$promise$0; acceptor$1$promise$0': [acceptor$1$didNotPromise$0$0; acceptor$1$promise$0$0; acceptor$1$promise$0$1]}

	identical_single_classes: {'acceptor$1$didNotPromise$0; acceptor$1$promise$0; acceptor$1$promise$0': acceptor$1$didNotPromise$0$0; acceptor$1$promise$0$0; acceptor$1$promise$0$1}

	identical_multi_classes: {}

	sort: proposer

	identical_classes: {'proposer$1$promise$1': [proposer$1$promise$1$0, proposer$1$promise$1$1], 'proposer$1$start$0': [proposer$1$start$0$0]}

	identical_single_classes: {'proposer$1$start$0': proposer$1$start$0$0}

	identical_multi_classes: {'proposer$1$promise$1': [proposer$1$promise$1$0, proposer$1$promise$1$1]}


---------- QInference: _set_sort_to_quantifier_mode ----------

quantifier mode: acceptor: QuantifierMode.forall

quantifier mode: proposer: QuantifierMode.forall_exists


---------- QInference: _set_constraint_mode ----------

constraint mode: ConstraintMode.no_merge


---------- QFormula: _set_qvars ----------

forall_qvars: {Var('ACCEPTOR0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Var('PROPOSER1', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))}

exists_qvars: {Var('PROPOSER0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))}


---------- QFormula: _set_signed_func_name_to_args ----------

signed_func_name2args: {'1$didNotPromise': [[Var('ACCEPTOR0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')))]], '1$promise': [[Var('ACCEPTOR0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Var('PROPOSER0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))], [Var('ACCEPTOR0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Var('PROPOSER0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))]], '1$start': [[Var('PROPOSER1', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))]]}


---------- QFormula: _set_qterms ----------

qterms: ['~didNotPromise(ACCEPTOR0)', '~start(PROPOSER1)', '~promise(ACCEPTOR0,PROPOSER0)']


---------- QFormula: get_qclause ----------

qclause: forall PROPOSER1,ACCEPTOR0. didNotPromise(ACCEPTOR0) | start(PROPOSER1) | (exists PROPOSER0. (promise(ACCEPTOR0,PROPOSER0) & PROPOSER0 ~= PROPOSER1))


=== Prime Orbit 25 =====================
size : 9
num_suborbits: 1
393 (*) : -----------0-----------000-
393     : ['~didNotPromise(acceptor2)', '~promise(acceptor2,proposer2)', '~start(proposer0)', '~start(proposer1)']
394     : -----------0----------0-0-0
394     : ['~didNotPromise(acceptor2)', '~promise(acceptor2,proposer1)', '~start(proposer0)', '~start(proposer2)']
395     : -----------0---------0---00
395     : ['~didNotPromise(acceptor2)', '~promise(acceptor2,proposer0)', '~start(proposer1)', '~start(proposer2)']
396     : ----------0---------0---00-
396     : ['~didNotPromise(acceptor1)', '~promise(acceptor1,proposer2)', '~start(proposer0)', '~start(proposer1)']
397     : ----------0--------0----0-0
397     : ['~didNotPromise(acceptor1)', '~promise(acceptor1,proposer1)', '~start(proposer0)', '~start(proposer2)']
398     : ----------0-------0------00
398     : ['~didNotPromise(acceptor1)', '~promise(acceptor1,proposer0)', '~start(proposer1)', '~start(proposer2)']
399     : ---------0-------0------00-
399     : ['~didNotPromise(acceptor0)', '~promise(acceptor0,proposer2)', '~start(proposer0)', '~start(proposer1)']
400     : ---------0------0-------0-0
400     : ['~didNotPromise(acceptor0)', '~promise(acceptor0,proposer1)', '~start(proposer0)', '~start(proposer2)']
401     : ---------0-----0---------00
401     : ['~didNotPromise(acceptor0)', '~promise(acceptor0,proposer0)', '~start(proposer1)', '~start(proposer2)']
num_forall :   0
num_exists :   0
num_literals : 0
quantified form : None
qcost : 0




---------- QPrime ----------


---------- ConstArgBinding ----------

terms: ['~didNotPromise(acceptor2)', '~promise(acceptor2,proposer2)', '~start(proposer0)', '~start(proposer1)']

sign_func_name2args: {'1$didNotPromise': [(Const('acceptor2', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))),)], '1$promise': [(Const('acceptor2', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Const('proposer2', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))))], '1$start': [(Const('proposer0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))),), (Const('proposer1', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))),)]}

const2sigs: {Const('acceptor2', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))): [acceptor$1$didNotPromise$0$0, acceptor$1$promise$0$0], Const('proposer2', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))): [proposer$1$promise$1$0], Const('proposer0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))): [proposer$1$start$0$0], Const('proposer1', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))): [proposer$1$start$0$1]}

sig2const: {'acceptor$1$didNotPromise$0$0': Const('acceptor2', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), 'acceptor$1$promise$0$0': Const('acceptor2', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), 'proposer$1$promise$1$0': Const('proposer2', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))), 'proposer$1$start$0$0': Const('proposer0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))), 'proposer$1$start$0$1': Const('proposer1', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))}


---------- ArgPartition ----------

sort2class_sigs: {EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')): [acceptor$1$didNotPromise$0$0; acceptor$1$promise$0$0], EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')): [proposer$1$promise$1$0, proposer$1$start$0$0, proposer$1$start$0$1]}

sort2part_sig: {EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')): acceptor$1$didNotPromise$0$0; acceptor$1$promise$0$0, EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')): proposer$1$promise$1$0 | proposer$1$start$0$0 | proposer$1$start$0$1}

part_sig: ('acceptor$1$didNotPromise$0$0; acceptor$1$promise$0$0', 'proposer$1$promise$1$0 | proposer$1$start$0$0 | proposer$1$start$0$1')


---------- SigGenerator ----------

terms:  ['~didNotPromise(acceptor2)', '~promise(acceptor2,proposer2)', '~start(proposer0)', '~start(proposer1)']

func_name2symbol:  {'didNotPromise': Const('didNotPromise', FunctionSort(EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')), BooleanSort())), 'promise': Const('promise', FunctionSort(EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')), EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')), BooleanSort())), 'start': Const('start', FunctionSort(EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')), BooleanSort()))}

func_name2args_sort:  {'didNotPromise': (EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')),), 'promise': (EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')), EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))), 'start': (EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')),)}

sign_func_name2count:  {'1$didNotPromise': 1, '1$promise': 1, '1$start': 2}


---------- ProductArgPartition ----------

sort2class_sigs: {EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')): [acceptor$1$didNotPromise$0$0; acceptor$1$promise$0$0], EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')): [proposer$1$promise$1$0, proposer$1$start$0$0, proposer$1$start$0$1]}

sort2part_sig: {EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')): acceptor$1$didNotPromise$0$0; acceptor$1$promise$0$0, EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')): proposer$1$promise$1$0 | proposer$1$start$0$0 | proposer$1$start$0$1}

	sort: acceptor

	identical_classes: {'acceptor$1$didNotPromise$0; acceptor$1$promise$0': [acceptor$1$didNotPromise$0$0; acceptor$1$promise$0$0]}

	identical_single_classes: {'acceptor$1$didNotPromise$0; acceptor$1$promise$0': acceptor$1$didNotPromise$0$0; acceptor$1$promise$0$0}

	identical_multi_classes: {}

	sort: proposer

	identical_classes: {'proposer$1$promise$1': [proposer$1$promise$1$0], 'proposer$1$start$0': [proposer$1$start$0$0, proposer$1$start$0$1]}

	identical_single_classes: {'proposer$1$promise$1': proposer$1$promise$1$0}

	identical_multi_classes: {'proposer$1$start$0': [proposer$1$start$0$0, proposer$1$start$0$1]}


---------- QInference: _set_sort_to_quantifier_mode ----------

quantifier mode: acceptor: QuantifierMode.forall

quantifier mode: proposer: QuantifierMode.forall_exists


---------- QInference: _set_constraint_mode ----------

constraint mode: ConstraintMode.no_merge


---------- QFormula: _set_qvars ----------

forall_qvars: {Var('ACCEPTOR0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Var('PROPOSER1', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))}

exists_qvars: {Var('PROPOSER0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))}


---------- QFormula: _set_signed_func_name_to_args ----------

signed_func_name2args: {'1$didNotPromise': [[Var('ACCEPTOR0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')))]], '1$promise': [[Var('ACCEPTOR0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Var('PROPOSER1', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))]], '1$start': [[Var('PROPOSER0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))], [Var('PROPOSER0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))]]}


---------- QFormula: _set_qterms ----------

qterms: ['~didNotPromise(ACCEPTOR0)', '~promise(ACCEPTOR0,PROPOSER1)', '~start(PROPOSER0)']


---------- QFormula: get_qclause ----------

qclause: forall PROPOSER1,ACCEPTOR0. didNotPromise(ACCEPTOR0) | promise(ACCEPTOR0,PROPOSER1) | (exists PROPOSER0. (start(PROPOSER0) & PROPOSER0 ~= PROPOSER1))


=== Prime Orbit 26 =====================
size : 3
num_suborbits: 1
402 (*) : -----------0------------000
402     : ['~didNotPromise(acceptor2)', '~start(proposer0)', '~start(proposer1)', '~start(proposer2)']
403     : ----------0-------------000
403     : ['~didNotPromise(acceptor1)', '~start(proposer0)', '~start(proposer1)', '~start(proposer2)']
404     : ---------0--------------000
404     : ['~didNotPromise(acceptor0)', '~start(proposer0)', '~start(proposer1)', '~start(proposer2)']
num_forall :   0
num_exists :   0
num_literals : 0
quantified form : None
qcost : 0




---------- QPrime ----------


---------- ConstArgBinding ----------

terms: ['~didNotPromise(acceptor2)', '~start(proposer0)', '~start(proposer1)', '~start(proposer2)']

sign_func_name2args: {'1$didNotPromise': [(Const('acceptor2', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))),)], '1$start': [(Const('proposer0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))),), (Const('proposer1', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))),), (Const('proposer2', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))),)]}

const2sigs: {Const('acceptor2', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))): [acceptor$1$didNotPromise$0$0], Const('proposer0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))): [proposer$1$start$0$0], Const('proposer1', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))): [proposer$1$start$0$1], Const('proposer2', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))): [proposer$1$start$0$2]}

sig2const: {'acceptor$1$didNotPromise$0$0': Const('acceptor2', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), 'proposer$1$start$0$0': Const('proposer0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))), 'proposer$1$start$0$1': Const('proposer1', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))), 'proposer$1$start$0$2': Const('proposer2', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))}


---------- ArgPartition ----------

sort2class_sigs: {EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')): [acceptor$1$didNotPromise$0$0], EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')): [proposer$1$start$0$0, proposer$1$start$0$1, proposer$1$start$0$2]}

sort2part_sig: {EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')): acceptor$1$didNotPromise$0$0, EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')): proposer$1$start$0$0 | proposer$1$start$0$1 | proposer$1$start$0$2}

part_sig: ('acceptor$1$didNotPromise$0$0', 'proposer$1$start$0$0 | proposer$1$start$0$1 | proposer$1$start$0$2')


---------- SigGenerator ----------

terms:  ['~didNotPromise(acceptor2)', '~start(proposer0)', '~start(proposer1)', '~start(proposer2)']

func_name2symbol:  {'didNotPromise': Const('didNotPromise', FunctionSort(EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')), BooleanSort())), 'start': Const('start', FunctionSort(EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')), BooleanSort()))}

func_name2args_sort:  {'didNotPromise': (EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')),), 'start': (EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')),)}

sign_func_name2count:  {'1$didNotPromise': 1, '1$start': 3}


---------- ProductArgPartition ----------

sort2class_sigs: {EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')): [acceptor$1$didNotPromise$0$0], EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')): [proposer$1$start$0$0, proposer$1$start$0$1, proposer$1$start$0$2]}

sort2part_sig: {EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')): acceptor$1$didNotPromise$0$0, EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')): proposer$1$start$0$0 | proposer$1$start$0$1 | proposer$1$start$0$2}

	sort: acceptor

	identical_classes: {'acceptor$1$didNotPromise$0': [acceptor$1$didNotPromise$0$0]}

	identical_single_classes: {'acceptor$1$didNotPromise$0': acceptor$1$didNotPromise$0$0}

	identical_multi_classes: {}

	sort: proposer

	identical_classes: {'proposer$1$start$0': [proposer$1$start$0$0, proposer$1$start$0$1, proposer$1$start$0$2]}

	identical_single_classes: {}

	identical_multi_classes: {'proposer$1$start$0': [proposer$1$start$0$0, proposer$1$start$0$1, proposer$1$start$0$2]}


---------- QInference: _set_sort_to_quantifier_mode ----------

quantifier mode: acceptor: QuantifierMode.forall

quantifier mode: proposer: QuantifierMode.exists


---------- QInference: _set_constraint_mode ----------

constraint mode: ConstraintMode.no_merge


---------- QFormula: _set_qvars ----------

forall_qvars: {Var('ACCEPTOR0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')))}

exists_qvars: {Var('PROPOSER0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))}


---------- QFormula: _set_signed_func_name_to_args ----------

signed_func_name2args: {'1$didNotPromise': [[Var('ACCEPTOR0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')))]], '1$start': [[Var('PROPOSER0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))], [Var('PROPOSER0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))], [Var('PROPOSER0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))]]}


---------- QFormula: _set_qterms ----------

qterms: ['~didNotPromise(ACCEPTOR0)', '~start(PROPOSER0)']


---------- QFormula: get_qclause ----------

qclause: forall ACCEPTOR0. (exists PROPOSER0. didNotPromise(ACCEPTOR0) | start(PROPOSER0))


=== Prime Orbit 28 =====================
size : 3
num_suborbits: 1
408 (*) : -0--0--0-----1-------------
408     : ['leader(proposer1)', '~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)']
409     : --0--0--0-----1------------
409     : ['leader(proposer2)', '~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)']
410     : 0--0--0-----1--------------
410     : ['leader(proposer0)', '~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)']
num_forall :   0
num_exists :   0
num_literals : 0
quantified form : None
qcost : 0




---------- QPrime ----------


---------- ConstArgBinding ----------

terms: ['~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', 'leader(proposer1)']

sign_func_name2args: {'1$chosenAt': [(Const('quorum__acceptor0_acceptor1', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), Const('proposer1', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))), (Const('quorum__acceptor0_acceptor2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), Const('proposer1', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))), (Const('quorum__acceptor1_acceptor2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), Const('proposer1', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))))], '0$leader': [(Const('proposer1', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))),)]}

const2sigs: {Const('quorum__acceptor0_acceptor1', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))): [quorum$1$chosenAt$0$0], Const('proposer1', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))): [proposer$1$chosenAt$1$0, proposer$1$chosenAt$1$1, proposer$1$chosenAt$1$2, proposer$0$leader$0$0], Const('quorum__acceptor0_acceptor2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))): [quorum$1$chosenAt$0$1], Const('quorum__acceptor1_acceptor2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))): [quorum$1$chosenAt$0$2]}

sig2const: {'quorum$1$chosenAt$0$0': Const('quorum__acceptor0_acceptor1', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), 'proposer$1$chosenAt$1$0': Const('proposer1', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))), 'quorum$1$chosenAt$0$1': Const('quorum__acceptor0_acceptor2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), 'proposer$1$chosenAt$1$1': Const('proposer1', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))), 'quorum$1$chosenAt$0$2': Const('quorum__acceptor1_acceptor2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), 'proposer$1$chosenAt$1$2': Const('proposer1', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))), 'proposer$0$leader$0$0': Const('proposer1', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))}


---------- ArgPartition ----------

sort2class_sigs: {EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')): [quorum$1$chosenAt$0$0, quorum$1$chosenAt$0$1, quorum$1$chosenAt$0$2], EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')): [proposer$0$leader$0$0; proposer$1$chosenAt$1$0; proposer$1$chosenAt$1$1; proposer$1$chosenAt$1$2]}

sort2part_sig: {EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')): quorum$1$chosenAt$0$0 | quorum$1$chosenAt$0$1 | quorum$1$chosenAt$0$2, EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')): proposer$0$leader$0$0; proposer$1$chosenAt$1$0; proposer$1$chosenAt$1$1; proposer$1$chosenAt$1$2}

part_sig: ('proposer$0$leader$0$0; proposer$1$chosenAt$1$0; proposer$1$chosenAt$1$1; proposer$1$chosenAt$1$2', 'quorum$1$chosenAt$0$0 | quorum$1$chosenAt$0$1 | quorum$1$chosenAt$0$2')


---------- SigGenerator ----------

terms:  ['~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', 'leader(proposer1)']

func_name2symbol:  {'chosenAt': Const('chosenAt', FunctionSort(EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')), EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')), BooleanSort())), 'leader': Const('leader', FunctionSort(EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')), BooleanSort()))}

func_name2args_sort:  {'chosenAt': (EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')), EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))), 'leader': (EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')),)}

sign_func_name2count:  {'1$chosenAt': 3, '0$leader': 1}


---------- ProductArgPartition ----------

sort2class_sigs: {EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')): [quorum$1$chosenAt$0$0, quorum$1$chosenAt$0$1, quorum$1$chosenAt$0$2], EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')): [proposer$0$leader$0$0; proposer$1$chosenAt$1$0; proposer$1$chosenAt$1$1; proposer$1$chosenAt$1$2]}

sort2part_sig: {EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')): quorum$1$chosenAt$0$0 | quorum$1$chosenAt$0$1 | quorum$1$chosenAt$0$2, EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')): proposer$0$leader$0$0; proposer$1$chosenAt$1$0; proposer$1$chosenAt$1$1; proposer$1$chosenAt$1$2}

	sort: quorum

	identical_classes: {'quorum$1$chosenAt$0': [quorum$1$chosenAt$0$0, quorum$1$chosenAt$0$1, quorum$1$chosenAt$0$2]}

	identical_single_classes: {}

	identical_multi_classes: {'quorum$1$chosenAt$0': [quorum$1$chosenAt$0$0, quorum$1$chosenAt$0$1, quorum$1$chosenAt$0$2]}

	sort: proposer

	identical_classes: {'proposer$0$leader$0; proposer$1$chosenAt$1; proposer$1$chosenAt$1; proposer$1$chosenAt$1': [proposer$0$leader$0$0; proposer$1$chosenAt$1$0; proposer$1$chosenAt$1$1; proposer$1$chosenAt$1$2]}

	identical_single_classes: {'proposer$0$leader$0; proposer$1$chosenAt$1; proposer$1$chosenAt$1; proposer$1$chosenAt$1': proposer$0$leader$0$0; proposer$1$chosenAt$1$0; proposer$1$chosenAt$1$1; proposer$1$chosenAt$1$2}

	identical_multi_classes: {}


---------- QInference: _set_sort_to_quantifier_mode ----------

quantifier mode: quorum: QuantifierMode.exists

quantifier mode: proposer: QuantifierMode.forall


---------- QInference: _set_constraint_mode ----------

constraint mode: ConstraintMode.no_merge


---------- QFormula: _set_qvars ----------

forall_qvars: {Var('PROPOSER0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))}

exists_qvars: {Var('QUORUM0', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')))}


---------- QFormula: _set_signed_func_name_to_args ----------

signed_func_name2args: {'1$chosenAt': [[Var('QUORUM0', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), Var('PROPOSER0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))], [Var('QUORUM0', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), Var('PROPOSER0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))], [Var('QUORUM0', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), Var('PROPOSER0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))]], '0$leader': [[Var('PROPOSER0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))]]}


---------- QFormula: _set_qterms ----------

qterms: ['leader(PROPOSER0)', '~chosenAt(QUORUM0,PROPOSER0)']


---------- QFormula: get_qclause ----------

qclause: forall PROPOSER0. (exists QUORUM0. ~leader(PROPOSER0) | chosenAt(QUORUM0,PROPOSER0))


=== Prime Orbit 30 =====================
size : 36
num_suborbits: 1
429 (*) : 0--------0------0-1-------0
429     : ['promise(acceptor1,proposer0)', '~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~didNotPromise(acceptor0)', '~promise(acceptor0,proposer1)', '~start(proposer2)']
430     : 0--------0-------01------0-
430     : ['promise(acceptor1,proposer0)', '~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~didNotPromise(acceptor0)', '~promise(acceptor0,proposer2)', '~start(proposer1)']
431     : -0-------0-----0---1------0
431     : ['promise(acceptor1,proposer1)', '~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~didNotPromise(acceptor0)', '~promise(acceptor0,proposer0)', '~start(proposer2)']
432     : -0-------0-------0-1----0--
432     : ['promise(acceptor1,proposer1)', '~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~didNotPromise(acceptor0)', '~promise(acceptor0,proposer2)', '~start(proposer0)']
433     : --0------0-----0----1----0-
433     : ['promise(acceptor1,proposer2)', '~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~didNotPromise(acceptor0)', '~promise(acceptor0,proposer0)', '~start(proposer1)']
434     : --0------0------0---1---0--
434     : ['promise(acceptor1,proposer2)', '~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~didNotPromise(acceptor0)', '~promise(acceptor0,proposer1)', '~start(proposer0)']
435     : ---0-----0------0----1----0
435     : ['promise(acceptor2,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~didNotPromise(acceptor0)', '~promise(acceptor0,proposer1)', '~start(proposer2)']
436     : ---0-----0-------0---1---0-
436     : ['promise(acceptor2,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~didNotPromise(acceptor0)', '~promise(acceptor0,proposer2)', '~start(proposer1)']
437     : ----0----0-----0------1---0
437     : ['promise(acceptor2,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~didNotPromise(acceptor0)', '~promise(acceptor0,proposer0)', '~start(proposer2)']
438     : ----0----0-------0----1-0--
438     : ['promise(acceptor2,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~didNotPromise(acceptor0)', '~promise(acceptor0,proposer2)', '~start(proposer0)']
439     : -----0---0-----0-------1-0-
439     : ['promise(acceptor2,proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~didNotPromise(acceptor0)', '~promise(acceptor0,proposer0)', '~start(proposer1)']
440     : -----0---0------0------10--
440     : ['promise(acceptor2,proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~didNotPromise(acceptor0)', '~promise(acceptor0,proposer1)', '~start(proposer0)']
441     : 0---------0----1---0------0
441     : ['promise(acceptor0,proposer0)', '~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~didNotPromise(acceptor1)', '~promise(acceptor1,proposer1)', '~start(proposer2)']
442     : 0---------0----1----0----0-
442     : ['promise(acceptor0,proposer0)', '~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~didNotPromise(acceptor1)', '~promise(acceptor1,proposer2)', '~start(proposer1)']
443     : -0--------0-----1-0-------0
443     : ['promise(acceptor0,proposer1)', '~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~didNotPromise(acceptor1)', '~promise(acceptor1,proposer0)', '~start(proposer2)']
444     : -0--------0-----1---0---0--
444     : ['promise(acceptor0,proposer1)', '~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~didNotPromise(acceptor1)', '~promise(acceptor1,proposer2)', '~start(proposer0)']
445     : --0-------0------10------0-
445     : ['promise(acceptor0,proposer2)', '~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~didNotPromise(acceptor1)', '~promise(acceptor1,proposer0)', '~start(proposer1)']
446     : --0-------0------1-0----0--
446     : ['promise(acceptor0,proposer2)', '~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~didNotPromise(acceptor1)', '~promise(acceptor1,proposer1)', '~start(proposer0)']
447     : ------0---0--------0-1----0
447     : ['promise(acceptor2,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor1)', '~promise(acceptor1,proposer1)', '~start(proposer2)']
448     : ------0---0---------01---0-
448     : ['promise(acceptor2,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor1)', '~promise(acceptor1,proposer2)', '~start(proposer1)']
449     : -------0--0-------0---1---0
449     : ['promise(acceptor2,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor1)', '~promise(acceptor1,proposer0)', '~start(proposer2)']
450     : -------0--0---------0-1-0--
450     : ['promise(acceptor2,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor1)', '~promise(acceptor1,proposer2)', '~start(proposer0)']
451     : --------0-0-------0----1-0-
451     : ['promise(acceptor2,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor1)', '~promise(acceptor1,proposer0)', '~start(proposer1)']
452     : --------0-0--------0---10--
452     : ['promise(acceptor2,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor1)', '~promise(acceptor1,proposer1)', '~start(proposer0)']
453     : ---0-------0---1------0---0
453     : ['promise(acceptor0,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~didNotPromise(acceptor2)', '~promise(acceptor2,proposer1)', '~start(proposer2)']
454     : ---0-------0---1-------0-0-
454     : ['promise(acceptor0,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~didNotPromise(acceptor2)', '~promise(acceptor2,proposer2)', '~start(proposer1)']
455     : ----0------0----1----0----0
455     : ['promise(acceptor0,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~didNotPromise(acceptor2)', '~promise(acceptor2,proposer0)', '~start(proposer2)']
456     : ----0------0----1------00--
456     : ['promise(acceptor0,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~didNotPromise(acceptor2)', '~promise(acceptor2,proposer2)', '~start(proposer0)']
457     : -----0-----0-----1---0---0-
457     : ['promise(acceptor0,proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~didNotPromise(acceptor2)', '~promise(acceptor2,proposer0)', '~start(proposer1)']
458     : -----0-----0-----1----0-0--
458     : ['promise(acceptor0,proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~didNotPromise(acceptor2)', '~promise(acceptor2,proposer1)', '~start(proposer0)']
459     : ------0----0------1---0---0
459     : ['promise(acceptor1,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor2)', '~promise(acceptor2,proposer1)', '~start(proposer2)']
460     : ------0----0------1----0-0-
460     : ['promise(acceptor1,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor2)', '~promise(acceptor2,proposer2)', '~start(proposer1)']
461     : -------0---0-------1-0----0
461     : ['promise(acceptor1,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor2)', '~promise(acceptor2,proposer0)', '~start(proposer2)']
462     : -------0---0-------1---00--
462     : ['promise(acceptor1,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor2)', '~promise(acceptor2,proposer2)', '~start(proposer0)']
463     : --------0--0--------10---0-
463     : ['promise(acceptor1,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor2)', '~promise(acceptor2,proposer0)', '~start(proposer1)']
464     : --------0--0--------1-0-0--
464     : ['promise(acceptor1,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor2)', '~promise(acceptor2,proposer1)', '~start(proposer0)']
num_forall :   0
num_exists :   0
num_literals : 0
quantified form : None
qcost : 0




---------- QPrime ----------


---------- ConstArgBinding ----------

terms: ['~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~didNotPromise(acceptor0)', '~promise(acceptor0,proposer1)', 'promise(acceptor1,proposer0)', '~start(proposer2)', 'member(acceptor0,quorum__acceptor0_acceptor1)', 'member(acceptor1,quorum__acceptor0_acceptor1)']

sign_func_name2args: {'1$chosenAt': [(Const('quorum__acceptor0_acceptor1', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), Const('proposer0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))))], '1$didNotPromise': [(Const('acceptor0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))),)], '1$promise': [(Const('acceptor0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Const('proposer1', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))))], '0$promise': [(Const('acceptor1', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Const('proposer0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))))], '1$start': [(Const('proposer2', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))),)], '0$member': [(Const('acceptor0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Const('quorum__acceptor0_acceptor1', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')))), (Const('acceptor1', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Const('quorum__acceptor0_acceptor1', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))))]}

const2sigs: {Const('quorum__acceptor0_acceptor1', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))): [quorum$1$chosenAt$0$0, quorum$0$member$1$0, quorum$0$member$1$1], Const('proposer0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))): [proposer$1$chosenAt$1$0, proposer$0$promise$1$0], Const('acceptor0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))): [acceptor$1$didNotPromise$0$0, acceptor$1$promise$0$0, acceptor$0$member$0$0], Const('proposer1', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))): [proposer$1$promise$1$0], Const('acceptor1', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))): [acceptor$0$promise$0$0, acceptor$0$member$0$1], Const('proposer2', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))): [proposer$1$start$0$0]}

sig2const: {'quorum$1$chosenAt$0$0': Const('quorum__acceptor0_acceptor1', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), 'proposer$1$chosenAt$1$0': Const('proposer0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))), 'acceptor$1$didNotPromise$0$0': Const('acceptor0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), 'acceptor$1$promise$0$0': Const('acceptor0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), 'proposer$1$promise$1$0': Const('proposer1', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))), 'acceptor$0$promise$0$0': Const('acceptor1', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), 'proposer$0$promise$1$0': Const('proposer0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))), 'proposer$1$start$0$0': Const('proposer2', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))), 'acceptor$0$member$0$0': Const('acceptor0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), 'quorum$0$member$1$0': Const('quorum__acceptor0_acceptor1', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), 'acceptor$0$member$0$1': Const('acceptor1', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), 'quorum$0$member$1$1': Const('quorum__acceptor0_acceptor1', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')))}


---------- ArgPartition ----------

sort2class_sigs: {EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')): [quorum$0$member$1$0; quorum$0$member$1$1; quorum$1$chosenAt$0$0], EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')): [proposer$0$promise$1$0; proposer$1$chosenAt$1$0, proposer$1$promise$1$0, proposer$1$start$0$0], EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')): [acceptor$0$member$0$0; acceptor$1$didNotPromise$0$0; acceptor$1$promise$0$0, acceptor$0$member$0$1; acceptor$0$promise$0$0]}

sort2part_sig: {EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')): quorum$0$member$1$0; quorum$0$member$1$1; quorum$1$chosenAt$0$0, EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')): proposer$0$promise$1$0; proposer$1$chosenAt$1$0 | proposer$1$promise$1$0 | proposer$1$start$0$0, EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')): acceptor$0$member$0$0; acceptor$1$didNotPromise$0$0; acceptor$1$promise$0$0 | acceptor$0$member$0$1; acceptor$0$promise$0$0}

part_sig: ('acceptor$0$member$0$0; acceptor$1$didNotPromise$0$0; acceptor$1$promise$0$0 | acceptor$0$member$0$1; acceptor$0$promise$0$0', 'proposer$0$promise$1$0; proposer$1$chosenAt$1$0 | proposer$1$promise$1$0 | proposer$1$start$0$0', 'quorum$0$member$1$0; quorum$0$member$1$1; quorum$1$chosenAt$0$0')


---------- SigGenerator ----------

terms:  ['~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~didNotPromise(acceptor0)', '~promise(acceptor0,proposer1)', 'promise(acceptor1,proposer0)', '~start(proposer2)', 'member(acceptor0,quorum__acceptor0_acceptor1)', 'member(acceptor1,quorum__acceptor0_acceptor1)']

func_name2symbol:  {'chosenAt': Const('chosenAt', FunctionSort(EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')), EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')), BooleanSort())), 'didNotPromise': Const('didNotPromise', FunctionSort(EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')), BooleanSort())), 'promise': Const('promise', FunctionSort(EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')), EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')), BooleanSort())), 'start': Const('start', FunctionSort(EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')), BooleanSort())), 'member': Const('member', FunctionSort(EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')), EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')), BooleanSort()))}

func_name2args_sort:  {'chosenAt': (EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')), EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))), 'didNotPromise': (EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')),), 'promise': (EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')), EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))), 'start': (EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')),), 'member': (EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')), EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')))}

sign_func_name2count:  {'1$chosenAt': 1, '1$didNotPromise': 1, '1$promise': 1, '0$promise': 1, '1$start': 1, '0$member': 2}


---------- ProductArgPartition ----------

sort2class_sigs: {EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')): [quorum$0$member$1$0; quorum$0$member$1$1; quorum$1$chosenAt$0$0], EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')): [proposer$0$promise$1$0; proposer$1$chosenAt$1$0, proposer$1$promise$1$0, proposer$1$start$0$0], EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')): [acceptor$0$member$0$0; acceptor$1$didNotPromise$0$0; acceptor$1$promise$0$0, acceptor$0$member$0$1; acceptor$0$promise$0$0]}

sort2part_sig: {EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')): quorum$0$member$1$0; quorum$0$member$1$1; quorum$1$chosenAt$0$0, EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')): proposer$0$promise$1$0; proposer$1$chosenAt$1$0 | proposer$1$promise$1$0 | proposer$1$start$0$0, EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')): acceptor$0$member$0$0; acceptor$1$didNotPromise$0$0; acceptor$1$promise$0$0 | acceptor$0$member$0$1; acceptor$0$promise$0$0}

	sort: quorum

	identical_classes: {'quorum$0$member$1; quorum$0$member$1; quorum$1$chosenAt$0': [quorum$0$member$1$0; quorum$0$member$1$1; quorum$1$chosenAt$0$0]}

	identical_single_classes: {'quorum$0$member$1; quorum$0$member$1; quorum$1$chosenAt$0': quorum$0$member$1$0; quorum$0$member$1$1; quorum$1$chosenAt$0$0}

	identical_multi_classes: {}

	sort: proposer

	identical_classes: {'proposer$0$promise$1; proposer$1$chosenAt$1': [proposer$0$promise$1$0; proposer$1$chosenAt$1$0], 'proposer$1$promise$1': [proposer$1$promise$1$0], 'proposer$1$start$0': [proposer$1$start$0$0]}

	identical_single_classes: {'proposer$0$promise$1; proposer$1$chosenAt$1': proposer$0$promise$1$0; proposer$1$chosenAt$1$0, 'proposer$1$promise$1': proposer$1$promise$1$0, 'proposer$1$start$0': proposer$1$start$0$0}

	identical_multi_classes: {}

	sort: acceptor

	identical_classes: {'acceptor$0$member$0; acceptor$1$didNotPromise$0; acceptor$1$promise$0': [acceptor$0$member$0$0; acceptor$1$didNotPromise$0$0; acceptor$1$promise$0$0], 'acceptor$0$member$0; acceptor$0$promise$0': [acceptor$0$member$0$1; acceptor$0$promise$0$0]}

	identical_single_classes: {'acceptor$0$member$0; acceptor$1$didNotPromise$0; acceptor$1$promise$0': acceptor$0$member$0$0; acceptor$1$didNotPromise$0$0; acceptor$1$promise$0$0, 'acceptor$0$member$0; acceptor$0$promise$0': acceptor$0$member$0$1; acceptor$0$promise$0$0}

	identical_multi_classes: {}


---------- QInference: _set_sort_to_quantifier_mode ----------

quantifier mode: quorum: QuantifierMode.forall

quantifier mode: proposer: QuantifierMode.forall

quantifier mode: acceptor: QuantifierMode.forall


---------- QInference: _set_constraint_mode ----------

constraint mode: ConstraintMode.no_merge


---------- QFormula: _set_qvars ----------

forall_qvars: {Var('ACCEPTOR0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Var('PROPOSER2', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))), Var('QUORUM0', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), Var('PROPOSER0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))), Var('ACCEPTOR1', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Var('PROPOSER1', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))}

exists_qvars: set()


---------- QFormula: _set_signed_func_name_to_args ----------

signed_func_name2args: {'1$chosenAt': [[Var('QUORUM0', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), Var('PROPOSER0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))]], '1$didNotPromise': [[Var('ACCEPTOR0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')))]], '1$promise': [[Var('ACCEPTOR0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Var('PROPOSER1', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))]], '0$promise': [[Var('ACCEPTOR1', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Var('PROPOSER0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))]], '1$start': [[Var('PROPOSER2', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))]], '0$member': [[Var('ACCEPTOR0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Var('QUORUM0', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')))], [Var('ACCEPTOR1', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Var('QUORUM0', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')))]]}


---------- QFormula: _set_qterms ----------

qterms: ['promise(ACCEPTOR1,PROPOSER0)', 'member(ACCEPTOR0,QUORUM0)', '~didNotPromise(ACCEPTOR0)', '~chosenAt(QUORUM0,PROPOSER0)', '~promise(ACCEPTOR0,PROPOSER1)', '~start(PROPOSER2)', 'member(ACCEPTOR1,QUORUM0)']


---------- QFormula: get_qclause ----------

qclause: forall ACCEPTOR1,PROPOSER0,PROPOSER2,ACCEPTOR0,PROPOSER1,QUORUM0. ~promise(ACCEPTOR1,PROPOSER0) | ~member(ACCEPTOR0,QUORUM0) | didNotPromise(ACCEPTOR0) | chosenAt(QUORUM0,PROPOSER0) | promise(ACCEPTOR0,PROPOSER1) | start(PROPOSER2) | ~member(ACCEPTOR1,QUORUM0) | (PROPOSER0 = PROPOSER2 | PROPOSER0 = PROPOSER1 | PROPOSER1 = PROPOSER2 | ACCEPTOR0 = ACCEPTOR1)


=== Prime Orbit 31 =====================
size : 18
num_suborbits: 1
465 (*) : 0--------0--------1------00
465     : ['promise(acceptor1,proposer0)', '~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~didNotPromise(acceptor0)', '~start(proposer1)', '~start(proposer2)']
466     : -0-------0---------1----0-0
466     : ['promise(acceptor1,proposer1)', '~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~didNotPromise(acceptor0)', '~start(proposer0)', '~start(proposer2)']
467     : --0------0----------1---00-
467     : ['promise(acceptor1,proposer2)', '~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~didNotPromise(acceptor0)', '~start(proposer0)', '~start(proposer1)']
468     : ---0-----0-----------1---00
468     : ['promise(acceptor2,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~didNotPromise(acceptor0)', '~start(proposer1)', '~start(proposer2)']
469     : ----0----0------------1-0-0
469     : ['promise(acceptor2,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~didNotPromise(acceptor0)', '~start(proposer0)', '~start(proposer2)']
470     : -----0---0-------------100-
470     : ['promise(acceptor2,proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~didNotPromise(acceptor0)', '~start(proposer0)', '~start(proposer1)']
471     : 0---------0----1---------00
471     : ['promise(acceptor0,proposer0)', '~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~didNotPromise(acceptor1)', '~start(proposer1)', '~start(proposer2)']
472     : -0--------0-----1-------0-0
472     : ['promise(acceptor0,proposer1)', '~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~didNotPromise(acceptor1)', '~start(proposer0)', '~start(proposer2)']
473     : --0-------0------1------00-
473     : ['promise(acceptor0,proposer2)', '~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~didNotPromise(acceptor1)', '~start(proposer0)', '~start(proposer1)']
474     : ------0---0----------1---00
474     : ['promise(acceptor2,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor1)', '~start(proposer1)', '~start(proposer2)']
475     : -------0--0-----------1-0-0
475     : ['promise(acceptor2,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor1)', '~start(proposer0)', '~start(proposer2)']
476     : --------0-0------------100-
476     : ['promise(acceptor2,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor1)', '~start(proposer0)', '~start(proposer1)']
477     : ---0-------0---1---------00
477     : ['promise(acceptor0,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~didNotPromise(acceptor2)', '~start(proposer1)', '~start(proposer2)']
478     : ----0------0----1-------0-0
478     : ['promise(acceptor0,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~didNotPromise(acceptor2)', '~start(proposer0)', '~start(proposer2)']
479     : -----0-----0-----1------00-
479     : ['promise(acceptor0,proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~didNotPromise(acceptor2)', '~start(proposer0)', '~start(proposer1)']
480     : ------0----0------1------00
480     : ['promise(acceptor1,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor2)', '~start(proposer1)', '~start(proposer2)']
481     : -------0---0-------1----0-0
481     : ['promise(acceptor1,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor2)', '~start(proposer0)', '~start(proposer2)']
482     : --------0--0--------1---00-
482     : ['promise(acceptor1,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor2)', '~start(proposer0)', '~start(proposer1)']
num_forall :   0
num_exists :   0
num_literals : 0
quantified form : None
qcost : 0




---------- QPrime ----------


---------- ConstArgBinding ----------

terms: ['~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~didNotPromise(acceptor0)', 'promise(acceptor1,proposer0)', '~start(proposer1)', '~start(proposer2)', 'member(acceptor0,quorum__acceptor0_acceptor1)', 'member(acceptor1,quorum__acceptor0_acceptor1)']

sign_func_name2args: {'1$chosenAt': [(Const('quorum__acceptor0_acceptor1', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), Const('proposer0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))))], '1$didNotPromise': [(Const('acceptor0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))),)], '0$promise': [(Const('acceptor1', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Const('proposer0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))))], '1$start': [(Const('proposer1', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))),), (Const('proposer2', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))),)], '0$member': [(Const('acceptor0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Const('quorum__acceptor0_acceptor1', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')))), (Const('acceptor1', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Const('quorum__acceptor0_acceptor1', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))))]}

const2sigs: {Const('quorum__acceptor0_acceptor1', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))): [quorum$1$chosenAt$0$0, quorum$0$member$1$0, quorum$0$member$1$1], Const('proposer0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))): [proposer$1$chosenAt$1$0, proposer$0$promise$1$0], Const('acceptor0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))): [acceptor$1$didNotPromise$0$0, acceptor$0$member$0$0], Const('acceptor1', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))): [acceptor$0$promise$0$0, acceptor$0$member$0$1], Const('proposer1', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))): [proposer$1$start$0$0], Const('proposer2', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))): [proposer$1$start$0$1]}

sig2const: {'quorum$1$chosenAt$0$0': Const('quorum__acceptor0_acceptor1', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), 'proposer$1$chosenAt$1$0': Const('proposer0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))), 'acceptor$1$didNotPromise$0$0': Const('acceptor0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), 'acceptor$0$promise$0$0': Const('acceptor1', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), 'proposer$0$promise$1$0': Const('proposer0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))), 'proposer$1$start$0$0': Const('proposer1', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))), 'proposer$1$start$0$1': Const('proposer2', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))), 'acceptor$0$member$0$0': Const('acceptor0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), 'quorum$0$member$1$0': Const('quorum__acceptor0_acceptor1', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), 'acceptor$0$member$0$1': Const('acceptor1', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), 'quorum$0$member$1$1': Const('quorum__acceptor0_acceptor1', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')))}


---------- ArgPartition ----------

sort2class_sigs: {EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')): [quorum$0$member$1$0; quorum$0$member$1$1; quorum$1$chosenAt$0$0], EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')): [proposer$0$promise$1$0; proposer$1$chosenAt$1$0, proposer$1$start$0$0, proposer$1$start$0$1], EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')): [acceptor$0$member$0$0; acceptor$1$didNotPromise$0$0, acceptor$0$member$0$1; acceptor$0$promise$0$0]}

sort2part_sig: {EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')): quorum$0$member$1$0; quorum$0$member$1$1; quorum$1$chosenAt$0$0, EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')): proposer$0$promise$1$0; proposer$1$chosenAt$1$0 | proposer$1$start$0$0 | proposer$1$start$0$1, EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')): acceptor$0$member$0$0; acceptor$1$didNotPromise$0$0 | acceptor$0$member$0$1; acceptor$0$promise$0$0}

part_sig: ('acceptor$0$member$0$0; acceptor$1$didNotPromise$0$0 | acceptor$0$member$0$1; acceptor$0$promise$0$0', 'proposer$0$promise$1$0; proposer$1$chosenAt$1$0 | proposer$1$start$0$0 | proposer$1$start$0$1', 'quorum$0$member$1$0; quorum$0$member$1$1; quorum$1$chosenAt$0$0')


---------- SigGenerator ----------

terms:  ['~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~didNotPromise(acceptor0)', 'promise(acceptor1,proposer0)', '~start(proposer1)', '~start(proposer2)', 'member(acceptor0,quorum__acceptor0_acceptor1)', 'member(acceptor1,quorum__acceptor0_acceptor1)']

func_name2symbol:  {'chosenAt': Const('chosenAt', FunctionSort(EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')), EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')), BooleanSort())), 'didNotPromise': Const('didNotPromise', FunctionSort(EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')), BooleanSort())), 'promise': Const('promise', FunctionSort(EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')), EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')), BooleanSort())), 'start': Const('start', FunctionSort(EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')), BooleanSort())), 'member': Const('member', FunctionSort(EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')), EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')), BooleanSort()))}

func_name2args_sort:  {'chosenAt': (EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')), EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))), 'didNotPromise': (EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')),), 'promise': (EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')), EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))), 'start': (EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')),), 'member': (EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')), EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')))}

sign_func_name2count:  {'1$chosenAt': 1, '1$didNotPromise': 1, '0$promise': 1, '1$start': 2, '0$member': 2}


---------- ProductArgPartition ----------

sort2class_sigs: {EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')): [quorum$0$member$1$0; quorum$0$member$1$1; quorum$1$chosenAt$0$0], EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')): [proposer$0$promise$1$0; proposer$1$chosenAt$1$0, proposer$1$start$0$0, proposer$1$start$0$1], EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')): [acceptor$0$member$0$0; acceptor$1$didNotPromise$0$0, acceptor$0$member$0$1; acceptor$0$promise$0$0]}

sort2part_sig: {EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')): quorum$0$member$1$0; quorum$0$member$1$1; quorum$1$chosenAt$0$0, EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')): proposer$0$promise$1$0; proposer$1$chosenAt$1$0 | proposer$1$start$0$0 | proposer$1$start$0$1, EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')): acceptor$0$member$0$0; acceptor$1$didNotPromise$0$0 | acceptor$0$member$0$1; acceptor$0$promise$0$0}

	sort: quorum

	identical_classes: {'quorum$0$member$1; quorum$0$member$1; quorum$1$chosenAt$0': [quorum$0$member$1$0; quorum$0$member$1$1; quorum$1$chosenAt$0$0]}

	identical_single_classes: {'quorum$0$member$1; quorum$0$member$1; quorum$1$chosenAt$0': quorum$0$member$1$0; quorum$0$member$1$1; quorum$1$chosenAt$0$0}

	identical_multi_classes: {}

	sort: proposer

	identical_classes: {'proposer$0$promise$1; proposer$1$chosenAt$1': [proposer$0$promise$1$0; proposer$1$chosenAt$1$0], 'proposer$1$start$0': [proposer$1$start$0$0, proposer$1$start$0$1]}

	identical_single_classes: {'proposer$0$promise$1; proposer$1$chosenAt$1': proposer$0$promise$1$0; proposer$1$chosenAt$1$0}

	identical_multi_classes: {'proposer$1$start$0': [proposer$1$start$0$0, proposer$1$start$0$1]}

	sort: acceptor

	identical_classes: {'acceptor$0$member$0; acceptor$1$didNotPromise$0': [acceptor$0$member$0$0; acceptor$1$didNotPromise$0$0], 'acceptor$0$member$0; acceptor$0$promise$0': [acceptor$0$member$0$1; acceptor$0$promise$0$0]}

	identical_single_classes: {'acceptor$0$member$0; acceptor$1$didNotPromise$0': acceptor$0$member$0$0; acceptor$1$didNotPromise$0$0, 'acceptor$0$member$0; acceptor$0$promise$0': acceptor$0$member$0$1; acceptor$0$promise$0$0}

	identical_multi_classes: {}


---------- QInference: _set_sort_to_quantifier_mode ----------

quantifier mode: quorum: QuantifierMode.forall

quantifier mode: proposer: QuantifierMode.forall_exists

quantifier mode: acceptor: QuantifierMode.forall


---------- QInference: _set_constraint_mode ----------

constraint mode: ConstraintMode.no_merge


---------- QFormula: _set_qvars ----------

forall_qvars: {Var('ACCEPTOR0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Var('ACCEPTOR1', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Var('PROPOSER1', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))), Var('QUORUM0', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')))}

exists_qvars: {Var('PROPOSER0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))}


---------- QFormula: _set_signed_func_name_to_args ----------

signed_func_name2args: {'1$chosenAt': [[Var('QUORUM0', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), Var('PROPOSER1', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))]], '1$didNotPromise': [[Var('ACCEPTOR0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')))]], '0$promise': [[Var('ACCEPTOR1', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Var('PROPOSER1', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))]], '1$start': [[Var('PROPOSER0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))], [Var('PROPOSER0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))]], '0$member': [[Var('ACCEPTOR0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Var('QUORUM0', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')))], [Var('ACCEPTOR1', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Var('QUORUM0', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')))]]}


---------- QFormula: _set_qterms ----------

qterms: ['member(ACCEPTOR0,QUORUM0)', 'promise(ACCEPTOR1,PROPOSER1)', '~start(PROPOSER0)', '~didNotPromise(ACCEPTOR0)', '~chosenAt(QUORUM0,PROPOSER1)', 'member(ACCEPTOR1,QUORUM0)']


---------- QFormula: get_qclause ----------

qclause: forall PROPOSER1,ACCEPTOR1,QUORUM0,ACCEPTOR0. ~member(ACCEPTOR0,QUORUM0) | ~promise(ACCEPTOR1,PROPOSER1) | didNotPromise(ACCEPTOR0) | chosenAt(QUORUM0,PROPOSER1) | ~member(ACCEPTOR1,QUORUM0) | (exists PROPOSER0. (start(PROPOSER0) & PROPOSER0 ~= PROPOSER1)) | ACCEPTOR0 = ACCEPTOR1


=== Prime Orbit 32 =====================
size : 18
num_suborbits: 1
483 (*) : 1-----0----0-------------00
483     : ['chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor2)', '~start(proposer1)', '~start(proposer2)']
484     : -1-----0---0------------0-0
484     : ['chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor2)', '~start(proposer0)', '~start(proposer2)']
485     : --1-----0--0------------00-
485     : ['chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor2)', '~start(proposer0)', '~start(proposer1)']
486     : ---1--0---0--------------00
486     : ['chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor1)', '~start(proposer1)', '~start(proposer2)']
487     : ----1--0--0-------------0-0
487     : ['chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor1)', '~start(proposer0)', '~start(proposer2)']
488     : -----1--0-0-------------00-
488     : ['chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor1)', '~start(proposer0)', '~start(proposer1)']
489     : 1--0-------0-------------00
489     : ['chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~didNotPromise(acceptor2)', '~start(proposer1)', '~start(proposer2)']
490     : -1--0------0------------0-0
490     : ['chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~didNotPromise(acceptor2)', '~start(proposer0)', '~start(proposer2)']
491     : --1--0-----0------------00-
491     : ['chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~didNotPromise(acceptor2)', '~start(proposer0)', '~start(proposer1)']
492     : ---0--1--0---------------00
492     : ['chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~didNotPromise(acceptor0)', '~start(proposer1)', '~start(proposer2)']
493     : ----0--1-0--------------0-0
493     : ['chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~didNotPromise(acceptor0)', '~start(proposer0)', '~start(proposer2)']
494     : -----0--10--------------00-
494     : ['chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~didNotPromise(acceptor0)', '~start(proposer0)', '~start(proposer1)']
495     : 0--1------0--------------00
495     : ['chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~didNotPromise(acceptor1)', '~start(proposer1)', '~start(proposer2)']
496     : -0--1-----0-------------0-0
496     : ['chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~didNotPromise(acceptor1)', '~start(proposer0)', '~start(proposer2)']
497     : --0--1----0-------------00-
497     : ['chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~didNotPromise(acceptor1)', '~start(proposer0)', '~start(proposer1)']
498     : 0-----1--0---------------00
498     : ['chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~didNotPromise(acceptor0)', '~start(proposer1)', '~start(proposer2)']
499     : -0-----1-0--------------0-0
499     : ['chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~didNotPromise(acceptor0)', '~start(proposer0)', '~start(proposer2)']
500     : --0-----10--------------00-
500     : ['chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~didNotPromise(acceptor0)', '~start(proposer0)', '~start(proposer1)']
num_forall :   0
num_exists :   0
num_literals : 0
quantified form : None
qcost : 0




---------- QPrime ----------


---------- ConstArgBinding ----------

terms: ['chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor2)', '~start(proposer1)', '~start(proposer2)', '~member(acceptor2,quorum__acceptor0_acceptor1)', 'member(acceptor2,quorum__acceptor1_acceptor2)']

sign_func_name2args: {'0$chosenAt': [(Const('quorum__acceptor0_acceptor1', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), Const('proposer0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))))], '1$chosenAt': [(Const('quorum__acceptor1_acceptor2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), Const('proposer0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))))], '1$didNotPromise': [(Const('acceptor2', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))),)], '1$start': [(Const('proposer1', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))),), (Const('proposer2', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))),)], '1$member': [(Const('acceptor2', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Const('quorum__acceptor0_acceptor1', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))))], '0$member': [(Const('acceptor2', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Const('quorum__acceptor1_acceptor2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))))]}

const2sigs: {Const('quorum__acceptor0_acceptor1', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))): [quorum$0$chosenAt$0$0, quorum$1$member$1$0], Const('proposer0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))): [proposer$0$chosenAt$1$0, proposer$1$chosenAt$1$0], Const('quorum__acceptor1_acceptor2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))): [quorum$1$chosenAt$0$0, quorum$0$member$1$0], Const('acceptor2', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))): [acceptor$1$didNotPromise$0$0, acceptor$1$member$0$0, acceptor$0$member$0$0], Const('proposer1', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))): [proposer$1$start$0$0], Const('proposer2', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))): [proposer$1$start$0$1]}

sig2const: {'quorum$0$chosenAt$0$0': Const('quorum__acceptor0_acceptor1', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), 'proposer$0$chosenAt$1$0': Const('proposer0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))), 'quorum$1$chosenAt$0$0': Const('quorum__acceptor1_acceptor2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), 'proposer$1$chosenAt$1$0': Const('proposer0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))), 'acceptor$1$didNotPromise$0$0': Const('acceptor2', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), 'proposer$1$start$0$0': Const('proposer1', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))), 'proposer$1$start$0$1': Const('proposer2', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))), 'acceptor$1$member$0$0': Const('acceptor2', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), 'quorum$1$member$1$0': Const('quorum__acceptor0_acceptor1', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), 'acceptor$0$member$0$0': Const('acceptor2', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), 'quorum$0$member$1$0': Const('quorum__acceptor1_acceptor2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')))}


---------- ArgPartition ----------

sort2class_sigs: {EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')): [quorum$0$chosenAt$0$0; quorum$1$member$1$0, quorum$0$member$1$0; quorum$1$chosenAt$0$0], EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')): [proposer$0$chosenAt$1$0; proposer$1$chosenAt$1$0, proposer$1$start$0$0, proposer$1$start$0$1], EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')): [acceptor$0$member$0$0; acceptor$1$didNotPromise$0$0; acceptor$1$member$0$0]}

sort2part_sig: {EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')): quorum$0$chosenAt$0$0; quorum$1$member$1$0 | quorum$0$member$1$0; quorum$1$chosenAt$0$0, EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')): proposer$0$chosenAt$1$0; proposer$1$chosenAt$1$0 | proposer$1$start$0$0 | proposer$1$start$0$1, EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')): acceptor$0$member$0$0; acceptor$1$didNotPromise$0$0; acceptor$1$member$0$0}

part_sig: ('acceptor$0$member$0$0; acceptor$1$didNotPromise$0$0; acceptor$1$member$0$0', 'proposer$0$chosenAt$1$0; proposer$1$chosenAt$1$0 | proposer$1$start$0$0 | proposer$1$start$0$1', 'quorum$0$chosenAt$0$0; quorum$1$member$1$0 | quorum$0$member$1$0; quorum$1$chosenAt$0$0')


---------- SigGenerator ----------

terms:  ['chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor2)', '~start(proposer1)', '~start(proposer2)', '~member(acceptor2,quorum__acceptor0_acceptor1)', 'member(acceptor2,quorum__acceptor1_acceptor2)']

func_name2symbol:  {'chosenAt': Const('chosenAt', FunctionSort(EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')), EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')), BooleanSort())), 'didNotPromise': Const('didNotPromise', FunctionSort(EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')), BooleanSort())), 'start': Const('start', FunctionSort(EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')), BooleanSort())), 'member': Const('member', FunctionSort(EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')), EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')), BooleanSort()))}

func_name2args_sort:  {'chosenAt': (EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')), EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))), 'didNotPromise': (EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')),), 'start': (EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')),), 'member': (EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')), EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')))}

sign_func_name2count:  {'0$chosenAt': 1, '1$chosenAt': 1, '1$didNotPromise': 1, '1$start': 2, '1$member': 1, '0$member': 1}


---------- ProductArgPartition ----------

sort2class_sigs: {EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')): [quorum$0$chosenAt$0$0; quorum$1$member$1$0, quorum$0$member$1$0; quorum$1$chosenAt$0$0], EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')): [proposer$0$chosenAt$1$0; proposer$1$chosenAt$1$0, proposer$1$start$0$0, proposer$1$start$0$1], EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')): [acceptor$0$member$0$0; acceptor$1$didNotPromise$0$0; acceptor$1$member$0$0]}

sort2part_sig: {EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')): quorum$0$chosenAt$0$0; quorum$1$member$1$0 | quorum$0$member$1$0; quorum$1$chosenAt$0$0, EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')): proposer$0$chosenAt$1$0; proposer$1$chosenAt$1$0 | proposer$1$start$0$0 | proposer$1$start$0$1, EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')): acceptor$0$member$0$0; acceptor$1$didNotPromise$0$0; acceptor$1$member$0$0}

	sort: quorum

	identical_classes: {'quorum$0$chosenAt$0; quorum$1$member$1': [quorum$0$chosenAt$0$0; quorum$1$member$1$0], 'quorum$0$member$1; quorum$1$chosenAt$0': [quorum$0$member$1$0; quorum$1$chosenAt$0$0]}

	identical_single_classes: {'quorum$0$chosenAt$0; quorum$1$member$1': quorum$0$chosenAt$0$0; quorum$1$member$1$0, 'quorum$0$member$1; quorum$1$chosenAt$0': quorum$0$member$1$0; quorum$1$chosenAt$0$0}

	identical_multi_classes: {}

	sort: proposer

	identical_classes: {'proposer$0$chosenAt$1; proposer$1$chosenAt$1': [proposer$0$chosenAt$1$0; proposer$1$chosenAt$1$0], 'proposer$1$start$0': [proposer$1$start$0$0, proposer$1$start$0$1]}

	identical_single_classes: {'proposer$0$chosenAt$1; proposer$1$chosenAt$1': proposer$0$chosenAt$1$0; proposer$1$chosenAt$1$0}

	identical_multi_classes: {'proposer$1$start$0': [proposer$1$start$0$0, proposer$1$start$0$1]}

	sort: acceptor

	identical_classes: {'acceptor$0$member$0; acceptor$1$didNotPromise$0; acceptor$1$member$0': [acceptor$0$member$0$0; acceptor$1$didNotPromise$0$0; acceptor$1$member$0$0]}

	identical_single_classes: {'acceptor$0$member$0; acceptor$1$didNotPromise$0; acceptor$1$member$0': acceptor$0$member$0$0; acceptor$1$didNotPromise$0$0; acceptor$1$member$0$0}

	identical_multi_classes: {}


---------- QInference: _set_sort_to_quantifier_mode ----------

quantifier mode: quorum: QuantifierMode.forall

quantifier mode: proposer: QuantifierMode.forall_exists

quantifier mode: acceptor: QuantifierMode.forall


---------- QInference: _set_constraint_mode ----------

constraint mode: ConstraintMode.no_merge


---------- QFormula: _set_qvars ----------

forall_qvars: {Var('ACCEPTOR0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Var('QUORUM1', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), Var('PROPOSER1', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))), Var('QUORUM0', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')))}

exists_qvars: {Var('PROPOSER0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))}


---------- QFormula: _set_signed_func_name_to_args ----------

signed_func_name2args: {'0$chosenAt': [[Var('QUORUM0', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), Var('PROPOSER1', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))]], '1$chosenAt': [[Var('QUORUM1', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), Var('PROPOSER1', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))]], '1$didNotPromise': [[Var('ACCEPTOR0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')))]], '1$start': [[Var('PROPOSER0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))], [Var('PROPOSER0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))]], '1$member': [[Var('ACCEPTOR0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Var('QUORUM0', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')))]], '0$member': [[Var('ACCEPTOR0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Var('QUORUM1', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')))]]}


---------- QFormula: _set_qterms ----------

qterms: ['~start(PROPOSER0)', '~didNotPromise(ACCEPTOR0)', '~member(ACCEPTOR0,QUORUM0)', 'chosenAt(QUORUM0,PROPOSER1)', 'member(ACCEPTOR0,QUORUM1)', '~chosenAt(QUORUM1,PROPOSER1)']


---------- QFormula: get_qclause ----------

qclause: forall PROPOSER1,QUORUM1,QUORUM0,ACCEPTOR0. didNotPromise(ACCEPTOR0) | member(ACCEPTOR0,QUORUM0) | ~chosenAt(QUORUM0,PROPOSER1) | ~member(ACCEPTOR0,QUORUM1) | chosenAt(QUORUM1,PROPOSER1) | (exists PROPOSER0. (start(PROPOSER0) & PROPOSER0 ~= PROPOSER1)) | QUORUM0 = QUORUM1


=== Prime Orbit 33 =====================
size : 36
num_suborbits: 1
501 (*) : 1--0-------0-----------0-0-
501     : ['chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~didNotPromise(acceptor2)', '~promise(acceptor2,proposer2)', '~start(proposer1)']
502     : 1--0-------0----------0---0
502     : ['chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~didNotPromise(acceptor2)', '~promise(acceptor2,proposer1)', '~start(proposer2)']
503     : -1--0------0-----------00--
503     : ['chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~didNotPromise(acceptor2)', '~promise(acceptor2,proposer2)', '~start(proposer0)']
504     : -1--0------0---------0----0
504     : ['chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~didNotPromise(acceptor2)', '~promise(acceptor2,proposer0)', '~start(proposer2)']
505     : --1--0-----0----------0-0--
505     : ['chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~didNotPromise(acceptor2)', '~promise(acceptor2,proposer1)', '~start(proposer0)']
506     : --1--0-----0---------0---0-
506     : ['chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~didNotPromise(acceptor2)', '~promise(acceptor2,proposer0)', '~start(proposer1)']
507     : 0--1------0---------0----0-
507     : ['chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~didNotPromise(acceptor1)', '~promise(acceptor1,proposer2)', '~start(proposer1)']
508     : 0--1------0--------0------0
508     : ['chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~didNotPromise(acceptor1)', '~promise(acceptor1,proposer1)', '~start(proposer2)']
509     : -0--1-----0---------0---0--
509     : ['chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~didNotPromise(acceptor1)', '~promise(acceptor1,proposer2)', '~start(proposer0)']
510     : -0--1-----0-------0-------0
510     : ['chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~didNotPromise(acceptor1)', '~promise(acceptor1,proposer0)', '~start(proposer2)']
511     : --0--1----0--------0----0--
511     : ['chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~didNotPromise(acceptor1)', '~promise(acceptor1,proposer1)', '~start(proposer0)']
512     : --0--1----0-------0------0-
512     : ['chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~didNotPromise(acceptor1)', '~promise(acceptor1,proposer0)', '~start(proposer1)']
513     : 1-----0----0-----------0-0-
513     : ['chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor2)', '~promise(acceptor2,proposer2)', '~start(proposer1)']
514     : 1-----0----0----------0---0
514     : ['chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor2)', '~promise(acceptor2,proposer1)', '~start(proposer2)']
515     : -1-----0---0-----------00--
515     : ['chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor2)', '~promise(acceptor2,proposer2)', '~start(proposer0)']
516     : -1-----0---0---------0----0
516     : ['chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor2)', '~promise(acceptor2,proposer0)', '~start(proposer2)']
517     : --1-----0--0----------0-0--
517     : ['chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor2)', '~promise(acceptor2,proposer1)', '~start(proposer0)']
518     : --1-----0--0---------0---0-
518     : ['chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor2)', '~promise(acceptor2,proposer0)', '~start(proposer1)']
519     : 0-----1--0-------0-------0-
519     : ['chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~didNotPromise(acceptor0)', '~promise(acceptor0,proposer2)', '~start(proposer1)']
520     : 0-----1--0------0---------0
520     : ['chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~didNotPromise(acceptor0)', '~promise(acceptor0,proposer1)', '~start(proposer2)']
521     : -0-----1-0-------0------0--
521     : ['chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~didNotPromise(acceptor0)', '~promise(acceptor0,proposer2)', '~start(proposer0)']
522     : -0-----1-0-----0----------0
522     : ['chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~didNotPromise(acceptor0)', '~promise(acceptor0,proposer0)', '~start(proposer2)']
523     : --0-----10------0-------0--
523     : ['chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~didNotPromise(acceptor0)', '~promise(acceptor0,proposer1)', '~start(proposer0)']
524     : --0-----10-----0---------0-
524     : ['chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~didNotPromise(acceptor0)', '~promise(acceptor0,proposer0)', '~start(proposer1)']
525     : ---1--0---0---------0----0-
525     : ['chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor1)', '~promise(acceptor1,proposer2)', '~start(proposer1)']
526     : ---1--0---0--------0------0
526     : ['chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor1)', '~promise(acceptor1,proposer1)', '~start(proposer2)']
527     : ----1--0--0---------0---0--
527     : ['chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor1)', '~promise(acceptor1,proposer2)', '~start(proposer0)']
528     : ----1--0--0-------0-------0
528     : ['chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor1)', '~promise(acceptor1,proposer0)', '~start(proposer2)']
529     : -----1--0-0--------0----0--
529     : ['chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor1)', '~promise(acceptor1,proposer1)', '~start(proposer0)']
530     : -----1--0-0-------0------0-
530     : ['chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor1)', '~promise(acceptor1,proposer0)', '~start(proposer1)']
531     : ---0--1--0-------0-------0-
531     : ['chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~didNotPromise(acceptor0)', '~promise(acceptor0,proposer2)', '~start(proposer1)']
532     : ---0--1--0------0---------0
532     : ['chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~didNotPromise(acceptor0)', '~promise(acceptor0,proposer1)', '~start(proposer2)']
533     : ----0--1-0-------0------0--
533     : ['chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~didNotPromise(acceptor0)', '~promise(acceptor0,proposer2)', '~start(proposer0)']
534     : ----0--1-0-----0----------0
534     : ['chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~didNotPromise(acceptor0)', '~promise(acceptor0,proposer0)', '~start(proposer2)']
535     : -----0--10------0-------0--
535     : ['chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~didNotPromise(acceptor0)', '~promise(acceptor0,proposer1)', '~start(proposer0)']
536     : -----0--10-----0---------0-
536     : ['chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~didNotPromise(acceptor0)', '~promise(acceptor0,proposer0)', '~start(proposer1)']
num_forall :   0
num_exists :   0
num_literals : 0
quantified form : None
qcost : 0




---------- QPrime ----------


---------- ConstArgBinding ----------

terms: ['chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~didNotPromise(acceptor2)', '~promise(acceptor2,proposer2)', '~start(proposer1)', '~member(acceptor2,quorum__acceptor0_acceptor1)', 'member(acceptor2,quorum__acceptor0_acceptor2)']

sign_func_name2args: {'0$chosenAt': [(Const('quorum__acceptor0_acceptor1', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), Const('proposer0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))))], '1$chosenAt': [(Const('quorum__acceptor0_acceptor2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), Const('proposer0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))))], '1$didNotPromise': [(Const('acceptor2', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))),)], '1$promise': [(Const('acceptor2', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Const('proposer2', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))))], '1$start': [(Const('proposer1', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))),)], '1$member': [(Const('acceptor2', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Const('quorum__acceptor0_acceptor1', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))))], '0$member': [(Const('acceptor2', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Const('quorum__acceptor0_acceptor2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))))]}

const2sigs: {Const('quorum__acceptor0_acceptor1', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))): [quorum$0$chosenAt$0$0, quorum$1$member$1$0], Const('proposer0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))): [proposer$0$chosenAt$1$0, proposer$1$chosenAt$1$0], Const('quorum__acceptor0_acceptor2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))): [quorum$1$chosenAt$0$0, quorum$0$member$1$0], Const('acceptor2', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))): [acceptor$1$didNotPromise$0$0, acceptor$1$promise$0$0, acceptor$1$member$0$0, acceptor$0$member$0$0], Const('proposer2', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))): [proposer$1$promise$1$0], Const('proposer1', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))): [proposer$1$start$0$0]}

sig2const: {'quorum$0$chosenAt$0$0': Const('quorum__acceptor0_acceptor1', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), 'proposer$0$chosenAt$1$0': Const('proposer0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))), 'quorum$1$chosenAt$0$0': Const('quorum__acceptor0_acceptor2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), 'proposer$1$chosenAt$1$0': Const('proposer0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))), 'acceptor$1$didNotPromise$0$0': Const('acceptor2', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), 'acceptor$1$promise$0$0': Const('acceptor2', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), 'proposer$1$promise$1$0': Const('proposer2', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))), 'proposer$1$start$0$0': Const('proposer1', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))), 'acceptor$1$member$0$0': Const('acceptor2', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), 'quorum$1$member$1$0': Const('quorum__acceptor0_acceptor1', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), 'acceptor$0$member$0$0': Const('acceptor2', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), 'quorum$0$member$1$0': Const('quorum__acceptor0_acceptor2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')))}


---------- ArgPartition ----------

sort2class_sigs: {EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')): [quorum$0$chosenAt$0$0; quorum$1$member$1$0, quorum$0$member$1$0; quorum$1$chosenAt$0$0], EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')): [proposer$0$chosenAt$1$0; proposer$1$chosenAt$1$0, proposer$1$promise$1$0, proposer$1$start$0$0], EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')): [acceptor$0$member$0$0; acceptor$1$didNotPromise$0$0; acceptor$1$member$0$0; acceptor$1$promise$0$0]}

sort2part_sig: {EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')): quorum$0$chosenAt$0$0; quorum$1$member$1$0 | quorum$0$member$1$0; quorum$1$chosenAt$0$0, EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')): proposer$0$chosenAt$1$0; proposer$1$chosenAt$1$0 | proposer$1$promise$1$0 | proposer$1$start$0$0, EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')): acceptor$0$member$0$0; acceptor$1$didNotPromise$0$0; acceptor$1$member$0$0; acceptor$1$promise$0$0}

part_sig: ('acceptor$0$member$0$0; acceptor$1$didNotPromise$0$0; acceptor$1$member$0$0; acceptor$1$promise$0$0', 'proposer$0$chosenAt$1$0; proposer$1$chosenAt$1$0 | proposer$1$promise$1$0 | proposer$1$start$0$0', 'quorum$0$chosenAt$0$0; quorum$1$member$1$0 | quorum$0$member$1$0; quorum$1$chosenAt$0$0')


---------- SigGenerator ----------

terms:  ['chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~didNotPromise(acceptor2)', '~promise(acceptor2,proposer2)', '~start(proposer1)', '~member(acceptor2,quorum__acceptor0_acceptor1)', 'member(acceptor2,quorum__acceptor0_acceptor2)']

func_name2symbol:  {'chosenAt': Const('chosenAt', FunctionSort(EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')), EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')), BooleanSort())), 'didNotPromise': Const('didNotPromise', FunctionSort(EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')), BooleanSort())), 'promise': Const('promise', FunctionSort(EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')), EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')), BooleanSort())), 'start': Const('start', FunctionSort(EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')), BooleanSort())), 'member': Const('member', FunctionSort(EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')), EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')), BooleanSort()))}

func_name2args_sort:  {'chosenAt': (EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')), EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))), 'didNotPromise': (EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')),), 'promise': (EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')), EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))), 'start': (EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')),), 'member': (EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')), EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')))}

sign_func_name2count:  {'0$chosenAt': 1, '1$chosenAt': 1, '1$didNotPromise': 1, '1$promise': 1, '1$start': 1, '1$member': 1, '0$member': 1}


---------- ProductArgPartition ----------

sort2class_sigs: {EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')): [quorum$0$chosenAt$0$0; quorum$1$member$1$0, quorum$0$member$1$0; quorum$1$chosenAt$0$0], EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')): [proposer$0$chosenAt$1$0; proposer$1$chosenAt$1$0, proposer$1$promise$1$0, proposer$1$start$0$0], EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')): [acceptor$0$member$0$0; acceptor$1$didNotPromise$0$0; acceptor$1$member$0$0; acceptor$1$promise$0$0]}

sort2part_sig: {EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')): quorum$0$chosenAt$0$0; quorum$1$member$1$0 | quorum$0$member$1$0; quorum$1$chosenAt$0$0, EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')): proposer$0$chosenAt$1$0; proposer$1$chosenAt$1$0 | proposer$1$promise$1$0 | proposer$1$start$0$0, EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')): acceptor$0$member$0$0; acceptor$1$didNotPromise$0$0; acceptor$1$member$0$0; acceptor$1$promise$0$0}

	sort: quorum

	identical_classes: {'quorum$0$chosenAt$0; quorum$1$member$1': [quorum$0$chosenAt$0$0; quorum$1$member$1$0], 'quorum$0$member$1; quorum$1$chosenAt$0': [quorum$0$member$1$0; quorum$1$chosenAt$0$0]}

	identical_single_classes: {'quorum$0$chosenAt$0; quorum$1$member$1': quorum$0$chosenAt$0$0; quorum$1$member$1$0, 'quorum$0$member$1; quorum$1$chosenAt$0': quorum$0$member$1$0; quorum$1$chosenAt$0$0}

	identical_multi_classes: {}

	sort: proposer

	identical_classes: {'proposer$0$chosenAt$1; proposer$1$chosenAt$1': [proposer$0$chosenAt$1$0; proposer$1$chosenAt$1$0], 'proposer$1$promise$1': [proposer$1$promise$1$0], 'proposer$1$start$0': [proposer$1$start$0$0]}

	identical_single_classes: {'proposer$0$chosenAt$1; proposer$1$chosenAt$1': proposer$0$chosenAt$1$0; proposer$1$chosenAt$1$0, 'proposer$1$promise$1': proposer$1$promise$1$0, 'proposer$1$start$0': proposer$1$start$0$0}

	identical_multi_classes: {}

	sort: acceptor

	identical_classes: {'acceptor$0$member$0; acceptor$1$didNotPromise$0; acceptor$1$member$0; acceptor$1$promise$0': [acceptor$0$member$0$0; acceptor$1$didNotPromise$0$0; acceptor$1$member$0$0; acceptor$1$promise$0$0]}

	identical_single_classes: {'acceptor$0$member$0; acceptor$1$didNotPromise$0; acceptor$1$member$0; acceptor$1$promise$0': acceptor$0$member$0$0; acceptor$1$didNotPromise$0$0; acceptor$1$member$0$0; acceptor$1$promise$0$0}

	identical_multi_classes: {}


---------- QInference: _set_sort_to_quantifier_mode ----------

quantifier mode: quorum: QuantifierMode.forall

quantifier mode: proposer: QuantifierMode.forall

quantifier mode: acceptor: QuantifierMode.forall


---------- QInference: _set_constraint_mode ----------

constraint mode: ConstraintMode.no_merge


---------- QFormula: _set_qvars ----------

forall_qvars: {Var('ACCEPTOR0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Var('PROPOSER2', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))), Var('QUORUM0', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), Var('PROPOSER0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))), Var('PROPOSER1', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))), Var('QUORUM1', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')))}

exists_qvars: set()


---------- QFormula: _set_signed_func_name_to_args ----------

signed_func_name2args: {'0$chosenAt': [[Var('QUORUM0', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), Var('PROPOSER0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))]], '1$chosenAt': [[Var('QUORUM1', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), Var('PROPOSER0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))]], '1$didNotPromise': [[Var('ACCEPTOR0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')))]], '1$promise': [[Var('ACCEPTOR0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Var('PROPOSER1', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))]], '1$start': [[Var('PROPOSER2', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))]], '1$member': [[Var('ACCEPTOR0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Var('QUORUM0', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')))]], '0$member': [[Var('ACCEPTOR0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Var('QUORUM1', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')))]]}


---------- QFormula: _set_qterms ----------

qterms: ['~chosenAt(QUORUM1,PROPOSER0)', '~didNotPromise(ACCEPTOR0)', '~member(ACCEPTOR0,QUORUM0)', 'chosenAt(QUORUM0,PROPOSER0)', '~promise(ACCEPTOR0,PROPOSER1)', '~start(PROPOSER2)', 'member(ACCEPTOR0,QUORUM1)']


---------- QFormula: get_qclause ----------

qclause: forall QUORUM1,PROPOSER0,PROPOSER2,ACCEPTOR0,PROPOSER1,QUORUM0. chosenAt(QUORUM1,PROPOSER0) | didNotPromise(ACCEPTOR0) | member(ACCEPTOR0,QUORUM0) | ~chosenAt(QUORUM0,PROPOSER0) | promise(ACCEPTOR0,PROPOSER1) | start(PROPOSER2) | ~member(ACCEPTOR0,QUORUM1) | (PROPOSER0 = PROPOSER2 | PROPOSER0 = PROPOSER1 | PROPOSER1 = PROPOSER2 | QUORUM0 = QUORUM1)


=== Prime Orbit 35 =====================
size : 9
num_suborbits: 1
555 (*) : ---0-----0-0-------------00
555     : ['~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor2)', '~start(proposer1)', '~start(proposer2)']
556     : ----0----0-0------------0-0
556     : ['~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor2)', '~start(proposer0)', '~start(proposer2)']
557     : -----0---0-0------------00-
557     : ['~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor2)', '~start(proposer0)', '~start(proposer1)']
558     : 0--------00--------------00
558     : ['~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~start(proposer1)', '~start(proposer2)']
559     : -0-------00-------------0-0
559     : ['~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~start(proposer0)', '~start(proposer2)']
560     : --0------00-------------00-
560     : ['~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~start(proposer0)', '~start(proposer1)']
561     : ------0---00-------------00
561     : ['~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~start(proposer1)', '~start(proposer2)']
562     : -------0--00------------0-0
562     : ['~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~start(proposer0)', '~start(proposer2)']
563     : --------0-00------------00-
563     : ['~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~start(proposer0)', '~start(proposer1)']
num_forall :   0
num_exists :   0
num_literals : 0
quantified form : None
qcost : 0




---------- QPrime ----------


---------- ConstArgBinding ----------

terms: ['~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor2)', '~start(proposer1)', '~start(proposer2)', 'member(acceptor0,quorum__acceptor0_acceptor2)', 'member(acceptor2,quorum__acceptor0_acceptor2)']

sign_func_name2args: {'1$chosenAt': [(Const('quorum__acceptor0_acceptor2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), Const('proposer0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))))], '1$didNotPromise': [(Const('acceptor0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))),), (Const('acceptor2', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))),)], '1$start': [(Const('proposer1', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))),), (Const('proposer2', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))),)], '0$member': [(Const('acceptor0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Const('quorum__acceptor0_acceptor2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')))), (Const('acceptor2', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Const('quorum__acceptor0_acceptor2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))))]}

const2sigs: {Const('quorum__acceptor0_acceptor2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))): [quorum$1$chosenAt$0$0, quorum$0$member$1$0, quorum$0$member$1$1], Const('proposer0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))): [proposer$1$chosenAt$1$0], Const('acceptor0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))): [acceptor$1$didNotPromise$0$0, acceptor$0$member$0$0], Const('acceptor2', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))): [acceptor$1$didNotPromise$0$1, acceptor$0$member$0$1], Const('proposer1', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))): [proposer$1$start$0$0], Const('proposer2', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))): [proposer$1$start$0$1]}

sig2const: {'quorum$1$chosenAt$0$0': Const('quorum__acceptor0_acceptor2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), 'proposer$1$chosenAt$1$0': Const('proposer0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))), 'acceptor$1$didNotPromise$0$0': Const('acceptor0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), 'acceptor$1$didNotPromise$0$1': Const('acceptor2', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), 'proposer$1$start$0$0': Const('proposer1', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))), 'proposer$1$start$0$1': Const('proposer2', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))), 'acceptor$0$member$0$0': Const('acceptor0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), 'quorum$0$member$1$0': Const('quorum__acceptor0_acceptor2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), 'acceptor$0$member$0$1': Const('acceptor2', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), 'quorum$0$member$1$1': Const('quorum__acceptor0_acceptor2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')))}


---------- ArgPartition ----------

sort2class_sigs: {EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')): [quorum$0$member$1$0; quorum$0$member$1$1; quorum$1$chosenAt$0$0], EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')): [proposer$1$chosenAt$1$0, proposer$1$start$0$0, proposer$1$start$0$1], EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')): [acceptor$0$member$0$0; acceptor$1$didNotPromise$0$0, acceptor$0$member$0$1; acceptor$1$didNotPromise$0$1]}

sort2part_sig: {EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')): quorum$0$member$1$0; quorum$0$member$1$1; quorum$1$chosenAt$0$0, EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')): proposer$1$chosenAt$1$0 | proposer$1$start$0$0 | proposer$1$start$0$1, EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')): acceptor$0$member$0$0; acceptor$1$didNotPromise$0$0 | acceptor$0$member$0$1; acceptor$1$didNotPromise$0$1}

part_sig: ('acceptor$0$member$0$0; acceptor$1$didNotPromise$0$0 | acceptor$0$member$0$1; acceptor$1$didNotPromise$0$1', 'proposer$1$chosenAt$1$0 | proposer$1$start$0$0 | proposer$1$start$0$1', 'quorum$0$member$1$0; quorum$0$member$1$1; quorum$1$chosenAt$0$0')


---------- SigGenerator ----------

terms:  ['~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor2)', '~start(proposer1)', '~start(proposer2)', 'member(acceptor0,quorum__acceptor0_acceptor2)', 'member(acceptor2,quorum__acceptor0_acceptor2)']

func_name2symbol:  {'chosenAt': Const('chosenAt', FunctionSort(EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')), EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')), BooleanSort())), 'didNotPromise': Const('didNotPromise', FunctionSort(EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')), BooleanSort())), 'start': Const('start', FunctionSort(EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')), BooleanSort())), 'member': Const('member', FunctionSort(EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')), EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')), BooleanSort()))}

func_name2args_sort:  {'chosenAt': (EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')), EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))), 'didNotPromise': (EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')),), 'start': (EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')),), 'member': (EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')), EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')))}

sign_func_name2count:  {'1$chosenAt': 1, '1$didNotPromise': 2, '1$start': 2, '0$member': 2}


---------- ProductArgPartition ----------

sort2class_sigs: {EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')): [quorum$0$member$1$0; quorum$0$member$1$1; quorum$1$chosenAt$0$0], EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')): [proposer$1$chosenAt$1$0, proposer$1$start$0$0, proposer$1$start$0$1], EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')): [acceptor$0$member$0$0; acceptor$1$didNotPromise$0$0, acceptor$0$member$0$1; acceptor$1$didNotPromise$0$1]}

sort2part_sig: {EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')): quorum$0$member$1$0; quorum$0$member$1$1; quorum$1$chosenAt$0$0, EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')): proposer$1$chosenAt$1$0 | proposer$1$start$0$0 | proposer$1$start$0$1, EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')): acceptor$0$member$0$0; acceptor$1$didNotPromise$0$0 | acceptor$0$member$0$1; acceptor$1$didNotPromise$0$1}

	sort: quorum

	identical_classes: {'quorum$0$member$1; quorum$0$member$1; quorum$1$chosenAt$0': [quorum$0$member$1$0; quorum$0$member$1$1; quorum$1$chosenAt$0$0]}

	identical_single_classes: {'quorum$0$member$1; quorum$0$member$1; quorum$1$chosenAt$0': quorum$0$member$1$0; quorum$0$member$1$1; quorum$1$chosenAt$0$0}

	identical_multi_classes: {}

	sort: proposer

	identical_classes: {'proposer$1$chosenAt$1': [proposer$1$chosenAt$1$0], 'proposer$1$start$0': [proposer$1$start$0$0, proposer$1$start$0$1]}

	identical_single_classes: {'proposer$1$chosenAt$1': proposer$1$chosenAt$1$0}

	identical_multi_classes: {'proposer$1$start$0': [proposer$1$start$0$0, proposer$1$start$0$1]}

	sort: acceptor

	identical_classes: {'acceptor$0$member$0; acceptor$1$didNotPromise$0': [acceptor$0$member$0$0; acceptor$1$didNotPromise$0$0, acceptor$0$member$0$1; acceptor$1$didNotPromise$0$1]}

	identical_single_classes: {}

	identical_multi_classes: {'acceptor$0$member$0; acceptor$1$didNotPromise$0': [acceptor$0$member$0$0, acceptor$1$didNotPromise$0$0, acceptor$0$member$0$1, acceptor$1$didNotPromise$0$1]}


---------- QInference: _set_sort_to_quantifier_mode ----------

quantifier mode: quorum: QuantifierMode.forall

quantifier mode: proposer: QuantifierMode.forall_exists

quantifier mode: acceptor: QuantifierMode.forall


---------- QInference: _set_constraint_mode ----------

constraint mode: ConstraintMode.no_merge


---------- QFormula: _set_qvars ----------

forall_qvars: {Var('ACCEPTOR0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Var('ACCEPTOR1', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Var('PROPOSER1', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))), Var('QUORUM0', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')))}

exists_qvars: {Var('PROPOSER0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))}


---------- QFormula: _set_signed_func_name_to_args ----------

signed_func_name2args: {'1$chosenAt': [[Var('QUORUM0', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), Var('PROPOSER1', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))]], '1$didNotPromise': [[Var('ACCEPTOR0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')))], [Var('ACCEPTOR1', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')))]], '1$start': [[Var('PROPOSER0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))], [Var('PROPOSER0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))]], '0$member': [[Var('ACCEPTOR0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Var('QUORUM0', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')))], [Var('ACCEPTOR1', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Var('QUORUM0', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')))]]}


---------- QFormula: _set_qterms ----------

qterms: ['member(ACCEPTOR0,QUORUM0)', '~start(PROPOSER0)', '~didNotPromise(ACCEPTOR0)', '~didNotPromise(ACCEPTOR1)', '~chosenAt(QUORUM0,PROPOSER1)', 'member(ACCEPTOR1,QUORUM0)']


---------- QFormula: get_qclause ----------

qclause: forall PROPOSER1,ACCEPTOR1,QUORUM0,ACCEPTOR0. ~member(ACCEPTOR0,QUORUM0) | didNotPromise(ACCEPTOR0) | didNotPromise(ACCEPTOR1) | chosenAt(QUORUM0,PROPOSER1) | ~member(ACCEPTOR1,QUORUM0) | (exists PROPOSER0. (start(PROPOSER0) & PROPOSER0 ~= PROPOSER1)) | ACCEPTOR0 = ACCEPTOR1


=== Prime Orbit 36 =====================
size : 18
num_suborbits: 1
564 (*) : --0------00----0--0------0-
564     : ['~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~promise(acceptor0,proposer0)', '~promise(acceptor1,proposer0)', '~start(proposer1)']
565     : -0-------00----0--0-------0
565     : ['~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~promise(acceptor0,proposer0)', '~promise(acceptor1,proposer0)', '~start(proposer2)']
566     : --0------00-----0--0----0--
566     : ['~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~promise(acceptor0,proposer1)', '~promise(acceptor1,proposer1)', '~start(proposer0)']
567     : 0--------00-----0--0------0
567     : ['~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~promise(acceptor0,proposer1)', '~promise(acceptor1,proposer1)', '~start(proposer2)']
568     : -0-------00------0--0---0--
568     : ['~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~promise(acceptor0,proposer2)', '~promise(acceptor1,proposer2)', '~start(proposer0)']
569     : 0--------00------0--0----0-
569     : ['~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~promise(acceptor0,proposer2)', '~promise(acceptor1,proposer2)', '~start(proposer1)']
570     : -----0---0-0---0-----0---0-
570     : ['~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor2)', '~promise(acceptor0,proposer0)', '~promise(acceptor2,proposer0)', '~start(proposer1)']
571     : ----0----0-0---0-----0----0
571     : ['~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor2)', '~promise(acceptor0,proposer0)', '~promise(acceptor2,proposer0)', '~start(proposer2)']
572     : -----0---0-0----0-----0-0--
572     : ['~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor2)', '~promise(acceptor0,proposer1)', '~promise(acceptor2,proposer1)', '~start(proposer0)']
573     : ---0-----0-0----0-----0---0
573     : ['~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor2)', '~promise(acceptor0,proposer1)', '~promise(acceptor2,proposer1)', '~start(proposer2)']
574     : ----0----0-0-----0-----00--
574     : ['~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor2)', '~promise(acceptor0,proposer2)', '~promise(acceptor2,proposer2)', '~start(proposer0)']
575     : ---0-----0-0-----0-----0-0-
575     : ['~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor2)', '~promise(acceptor0,proposer2)', '~promise(acceptor2,proposer2)', '~start(proposer1)']
576     : --------0-00------0--0---0-
576     : ['~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor1,proposer0)', '~promise(acceptor2,proposer0)', '~start(proposer1)']
577     : -------0--00------0--0----0
577     : ['~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor1,proposer0)', '~promise(acceptor2,proposer0)', '~start(proposer2)']
578     : --------0-00-------0--0-0--
578     : ['~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor1,proposer1)', '~promise(acceptor2,proposer1)', '~start(proposer0)']
579     : ------0---00-------0--0---0
579     : ['~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor1,proposer1)', '~promise(acceptor2,proposer1)', '~start(proposer2)']
580     : -------0--00--------0--00--
580     : ['~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor1,proposer2)', '~promise(acceptor2,proposer2)', '~start(proposer0)']
581     : ------0---00--------0--0-0-
581     : ['~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor1,proposer2)', '~promise(acceptor2,proposer2)', '~start(proposer1)']
num_forall :   0
num_exists :   0
num_literals : 0
quantified form : None
qcost : 0




---------- QPrime ----------


---------- ConstArgBinding ----------

terms: ['~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~promise(acceptor0,proposer0)', '~promise(acceptor1,proposer0)', '~start(proposer1)', 'member(acceptor0,quorum__acceptor0_acceptor1)', 'member(acceptor1,quorum__acceptor0_acceptor1)']

sign_func_name2args: {'1$chosenAt': [(Const('quorum__acceptor0_acceptor1', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), Const('proposer2', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))))], '1$didNotPromise': [(Const('acceptor0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))),), (Const('acceptor1', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))),)], '1$promise': [(Const('acceptor0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Const('proposer0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))), (Const('acceptor1', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Const('proposer0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))))], '1$start': [(Const('proposer1', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))),)], '0$member': [(Const('acceptor0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Const('quorum__acceptor0_acceptor1', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')))), (Const('acceptor1', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Const('quorum__acceptor0_acceptor1', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))))]}

const2sigs: {Const('quorum__acceptor0_acceptor1', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))): [quorum$1$chosenAt$0$0, quorum$0$member$1$0, quorum$0$member$1$1], Const('proposer2', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))): [proposer$1$chosenAt$1$0], Const('acceptor0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))): [acceptor$1$didNotPromise$0$0, acceptor$1$promise$0$0, acceptor$0$member$0$0], Const('acceptor1', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))): [acceptor$1$didNotPromise$0$1, acceptor$1$promise$0$1, acceptor$0$member$0$1], Const('proposer0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))): [proposer$1$promise$1$0, proposer$1$promise$1$1], Const('proposer1', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))): [proposer$1$start$0$0]}

sig2const: {'quorum$1$chosenAt$0$0': Const('quorum__acceptor0_acceptor1', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), 'proposer$1$chosenAt$1$0': Const('proposer2', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))), 'acceptor$1$didNotPromise$0$0': Const('acceptor0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), 'acceptor$1$didNotPromise$0$1': Const('acceptor1', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), 'acceptor$1$promise$0$0': Const('acceptor0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), 'proposer$1$promise$1$0': Const('proposer0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))), 'acceptor$1$promise$0$1': Const('acceptor1', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), 'proposer$1$promise$1$1': Const('proposer0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))), 'proposer$1$start$0$0': Const('proposer1', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))), 'acceptor$0$member$0$0': Const('acceptor0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), 'quorum$0$member$1$0': Const('quorum__acceptor0_acceptor1', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), 'acceptor$0$member$0$1': Const('acceptor1', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), 'quorum$0$member$1$1': Const('quorum__acceptor0_acceptor1', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')))}


---------- ArgPartition ----------

sort2class_sigs: {EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')): [quorum$0$member$1$0; quorum$0$member$1$1; quorum$1$chosenAt$0$0], EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')): [proposer$1$chosenAt$1$0, proposer$1$promise$1$0; proposer$1$promise$1$1, proposer$1$start$0$0], EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')): [acceptor$0$member$0$0; acceptor$1$didNotPromise$0$0; acceptor$1$promise$0$0, acceptor$0$member$0$1; acceptor$1$didNotPromise$0$1; acceptor$1$promise$0$1]}

sort2part_sig: {EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')): quorum$0$member$1$0; quorum$0$member$1$1; quorum$1$chosenAt$0$0, EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')): proposer$1$chosenAt$1$0 | proposer$1$promise$1$0; proposer$1$promise$1$1 | proposer$1$start$0$0, EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')): acceptor$0$member$0$0; acceptor$1$didNotPromise$0$0; acceptor$1$promise$0$0 | acceptor$0$member$0$1; acceptor$1$didNotPromise$0$1; acceptor$1$promise$0$1}

part_sig: ('acceptor$0$member$0$0; acceptor$1$didNotPromise$0$0; acceptor$1$promise$0$0 | acceptor$0$member$0$1; acceptor$1$didNotPromise$0$1; acceptor$1$promise$0$1', 'proposer$1$chosenAt$1$0 | proposer$1$promise$1$0; proposer$1$promise$1$1 | proposer$1$start$0$0', 'quorum$0$member$1$0; quorum$0$member$1$1; quorum$1$chosenAt$0$0')


---------- SigGenerator ----------

terms:  ['~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~promise(acceptor0,proposer0)', '~promise(acceptor1,proposer0)', '~start(proposer1)', 'member(acceptor0,quorum__acceptor0_acceptor1)', 'member(acceptor1,quorum__acceptor0_acceptor1)']

func_name2symbol:  {'chosenAt': Const('chosenAt', FunctionSort(EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')), EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')), BooleanSort())), 'didNotPromise': Const('didNotPromise', FunctionSort(EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')), BooleanSort())), 'promise': Const('promise', FunctionSort(EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')), EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')), BooleanSort())), 'start': Const('start', FunctionSort(EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')), BooleanSort())), 'member': Const('member', FunctionSort(EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')), EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')), BooleanSort()))}

func_name2args_sort:  {'chosenAt': (EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')), EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))), 'didNotPromise': (EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')),), 'promise': (EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')), EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))), 'start': (EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')),), 'member': (EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')), EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')))}

sign_func_name2count:  {'1$chosenAt': 1, '1$didNotPromise': 2, '1$promise': 2, '1$start': 1, '0$member': 2}


---------- ProductArgPartition ----------

sort2class_sigs: {EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')): [quorum$0$member$1$0; quorum$0$member$1$1; quorum$1$chosenAt$0$0], EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')): [proposer$1$chosenAt$1$0, proposer$1$promise$1$0; proposer$1$promise$1$1, proposer$1$start$0$0], EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')): [acceptor$0$member$0$0; acceptor$1$didNotPromise$0$0; acceptor$1$promise$0$0, acceptor$0$member$0$1; acceptor$1$didNotPromise$0$1; acceptor$1$promise$0$1]}

sort2part_sig: {EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')): quorum$0$member$1$0; quorum$0$member$1$1; quorum$1$chosenAt$0$0, EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')): proposer$1$chosenAt$1$0 | proposer$1$promise$1$0; proposer$1$promise$1$1 | proposer$1$start$0$0, EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')): acceptor$0$member$0$0; acceptor$1$didNotPromise$0$0; acceptor$1$promise$0$0 | acceptor$0$member$0$1; acceptor$1$didNotPromise$0$1; acceptor$1$promise$0$1}

	sort: quorum

	identical_classes: {'quorum$0$member$1; quorum$0$member$1; quorum$1$chosenAt$0': [quorum$0$member$1$0; quorum$0$member$1$1; quorum$1$chosenAt$0$0]}

	identical_single_classes: {'quorum$0$member$1; quorum$0$member$1; quorum$1$chosenAt$0': quorum$0$member$1$0; quorum$0$member$1$1; quorum$1$chosenAt$0$0}

	identical_multi_classes: {}

	sort: proposer

	identical_classes: {'proposer$1$chosenAt$1': [proposer$1$chosenAt$1$0], 'proposer$1$promise$1; proposer$1$promise$1': [proposer$1$promise$1$0; proposer$1$promise$1$1], 'proposer$1$start$0': [proposer$1$start$0$0]}

	identical_single_classes: {'proposer$1$chosenAt$1': proposer$1$chosenAt$1$0, 'proposer$1$promise$1; proposer$1$promise$1': proposer$1$promise$1$0; proposer$1$promise$1$1, 'proposer$1$start$0': proposer$1$start$0$0}

	identical_multi_classes: {}

	sort: acceptor

	identical_classes: {'acceptor$0$member$0; acceptor$1$didNotPromise$0; acceptor$1$promise$0': [acceptor$0$member$0$0; acceptor$1$didNotPromise$0$0; acceptor$1$promise$0$0, acceptor$0$member$0$1; acceptor$1$didNotPromise$0$1; acceptor$1$promise$0$1]}

	identical_single_classes: {}

	identical_multi_classes: {'acceptor$0$member$0; acceptor$1$didNotPromise$0; acceptor$1$promise$0': [acceptor$0$member$0$0, acceptor$1$didNotPromise$0$0, acceptor$1$promise$0$0, acceptor$0$member$0$1, acceptor$1$didNotPromise$0$1, acceptor$1$promise$0$1]}


---------- QInference: _set_sort_to_quantifier_mode ----------

quantifier mode: quorum: QuantifierMode.forall

quantifier mode: proposer: QuantifierMode.forall

quantifier mode: acceptor: QuantifierMode.forall


---------- QInference: _set_constraint_mode ----------

constraint mode: ConstraintMode.no_merge


---------- QFormula: _set_qvars ----------

forall_qvars: {Var('ACCEPTOR0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Var('PROPOSER2', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))), Var('QUORUM0', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), Var('PROPOSER0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))), Var('ACCEPTOR1', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Var('PROPOSER1', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))}

exists_qvars: set()


---------- QFormula: _set_signed_func_name_to_args ----------

signed_func_name2args: {'1$chosenAt': [[Var('QUORUM0', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), Var('PROPOSER0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))]], '1$didNotPromise': [[Var('ACCEPTOR0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')))], [Var('ACCEPTOR1', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')))]], '1$promise': [[Var('ACCEPTOR0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Var('PROPOSER1', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))], [Var('ACCEPTOR1', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Var('PROPOSER1', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))]], '1$start': [[Var('PROPOSER2', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))]], '0$member': [[Var('ACCEPTOR0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Var('QUORUM0', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')))], [Var('ACCEPTOR1', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Var('QUORUM0', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')))]]}


---------- QFormula: _set_qterms ----------

qterms: ['member(ACCEPTOR0,QUORUM0)', '~promise(ACCEPTOR1,PROPOSER1)', '~didNotPromise(ACCEPTOR0)', '~start(PROPOSER2)', '~didNotPromise(ACCEPTOR1)', '~promise(ACCEPTOR0,PROPOSER1)', '~chosenAt(QUORUM0,PROPOSER0)', 'member(ACCEPTOR1,QUORUM0)']


---------- QFormula: get_qclause ----------

qclause: forall ACCEPTOR1,PROPOSER0,PROPOSER2,ACCEPTOR0,PROPOSER1,QUORUM0. ~member(ACCEPTOR0,QUORUM0) | promise(ACCEPTOR1,PROPOSER1) | didNotPromise(ACCEPTOR0) | start(PROPOSER2) | didNotPromise(ACCEPTOR1) | promise(ACCEPTOR0,PROPOSER1) | chosenAt(QUORUM0,PROPOSER0) | ~member(ACCEPTOR1,QUORUM0) | (PROPOSER0 = PROPOSER2 | PROPOSER0 = PROPOSER1 | PROPOSER1 = PROPOSER2 | ACCEPTOR0 = ACCEPTOR1)


=== Prime Orbit 37 =====================
size : 18
num_suborbits: 1
582 (*) : --0--0---0----10---------0-
582     : ['leader(proposer2)', '~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~didNotPromise(acceptor0)', '~promise(acceptor0,proposer0)', '~start(proposer1)']
583     : -0--0----0---1-0----------0
583     : ['leader(proposer1)', '~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~didNotPromise(acceptor0)', '~promise(acceptor0,proposer0)', '~start(proposer2)']
584     : --0--0---0----1-0-------0--
584     : ['leader(proposer2)', '~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~didNotPromise(acceptor0)', '~promise(acceptor0,proposer1)', '~start(proposer0)']
585     : 0--0-----0--1---0---------0
585     : ['leader(proposer0)', '~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~didNotPromise(acceptor0)', '~promise(acceptor0,proposer1)', '~start(proposer2)']
586     : -0--0----0---1---0------0--
586     : ['leader(proposer1)', '~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~didNotPromise(acceptor0)', '~promise(acceptor0,proposer2)', '~start(proposer0)']
587     : 0--0-----0--1----0-------0-
587     : ['leader(proposer0)', '~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~didNotPromise(acceptor0)', '~promise(acceptor0,proposer2)', '~start(proposer1)']
588     : --0-----0-0---1---0------0-
588     : ['leader(proposer2)', '~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor1)', '~promise(acceptor1,proposer0)', '~start(proposer1)']
589     : -0-----0--0--1----0-------0
589     : ['leader(proposer1)', '~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor1)', '~promise(acceptor1,proposer0)', '~start(proposer2)']
590     : --0-----0-0---1----0----0--
590     : ['leader(proposer2)', '~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor1)', '~promise(acceptor1,proposer1)', '~start(proposer0)']
591     : 0-----0---0-1------0------0
591     : ['leader(proposer0)', '~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor1)', '~promise(acceptor1,proposer1)', '~start(proposer2)']
592     : -0-----0--0--1------0---0--
592     : ['leader(proposer1)', '~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor1)', '~promise(acceptor1,proposer2)', '~start(proposer0)']
593     : 0-----0---0-1-------0----0-
593     : ['leader(proposer0)', '~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor1)', '~promise(acceptor1,proposer2)', '~start(proposer1)']
594     : -----0--0--0--1------0---0-
594     : ['leader(proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor2)', '~promise(acceptor2,proposer0)', '~start(proposer1)']
595     : ----0--0---0-1-------0----0
595     : ['leader(proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor2)', '~promise(acceptor2,proposer0)', '~start(proposer2)']
596     : -----0--0--0--1-------0-0--
596     : ['leader(proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor2)', '~promise(acceptor2,proposer1)', '~start(proposer0)']
597     : ---0--0----01---------0---0
597     : ['leader(proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor2)', '~promise(acceptor2,proposer1)', '~start(proposer2)']
598     : ----0--0---0-1---------00--
598     : ['leader(proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor2)', '~promise(acceptor2,proposer2)', '~start(proposer0)']
599     : ---0--0----01----------0-0-
599     : ['leader(proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor2)', '~promise(acceptor2,proposer2)', '~start(proposer1)']
num_forall :   0
num_exists :   0
num_literals : 0
quantified form : None
qcost : 0




---------- QPrime ----------


---------- ConstArgBinding ----------

terms: ['~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~didNotPromise(acceptor0)', 'leader(proposer2)', '~promise(acceptor0,proposer0)', '~start(proposer1)', 'member(acceptor0,quorum__acceptor0_acceptor1)', 'member(acceptor0,quorum__acceptor0_acceptor2)']

sign_func_name2args: {'1$chosenAt': [(Const('quorum__acceptor0_acceptor1', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), Const('proposer2', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))), (Const('quorum__acceptor0_acceptor2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), Const('proposer2', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))))], '1$didNotPromise': [(Const('acceptor0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))),)], '0$leader': [(Const('proposer2', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))),)], '1$promise': [(Const('acceptor0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Const('proposer0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))))], '1$start': [(Const('proposer1', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))),)], '0$member': [(Const('acceptor0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Const('quorum__acceptor0_acceptor1', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')))), (Const('acceptor0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Const('quorum__acceptor0_acceptor2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))))]}

const2sigs: {Const('quorum__acceptor0_acceptor1', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))): [quorum$1$chosenAt$0$0, quorum$0$member$1$0], Const('proposer2', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))): [proposer$1$chosenAt$1$0, proposer$1$chosenAt$1$1, proposer$0$leader$0$0], Const('quorum__acceptor0_acceptor2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))): [quorum$1$chosenAt$0$1, quorum$0$member$1$1], Const('acceptor0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))): [acceptor$1$didNotPromise$0$0, acceptor$1$promise$0$0, acceptor$0$member$0$0, acceptor$0$member$0$1], Const('proposer0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))): [proposer$1$promise$1$0], Const('proposer1', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))): [proposer$1$start$0$0]}

sig2const: {'quorum$1$chosenAt$0$0': Const('quorum__acceptor0_acceptor1', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), 'proposer$1$chosenAt$1$0': Const('proposer2', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))), 'quorum$1$chosenAt$0$1': Const('quorum__acceptor0_acceptor2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), 'proposer$1$chosenAt$1$1': Const('proposer2', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))), 'acceptor$1$didNotPromise$0$0': Const('acceptor0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), 'proposer$0$leader$0$0': Const('proposer2', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))), 'acceptor$1$promise$0$0': Const('acceptor0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), 'proposer$1$promise$1$0': Const('proposer0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))), 'proposer$1$start$0$0': Const('proposer1', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))), 'acceptor$0$member$0$0': Const('acceptor0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), 'quorum$0$member$1$0': Const('quorum__acceptor0_acceptor1', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), 'acceptor$0$member$0$1': Const('acceptor0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), 'quorum$0$member$1$1': Const('quorum__acceptor0_acceptor2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')))}


---------- ArgPartition ----------

sort2class_sigs: {EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')): [quorum$0$member$1$0; quorum$1$chosenAt$0$0, quorum$0$member$1$1; quorum$1$chosenAt$0$1], EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')): [proposer$0$leader$0$0; proposer$1$chosenAt$1$0; proposer$1$chosenAt$1$1, proposer$1$promise$1$0, proposer$1$start$0$0], EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')): [acceptor$0$member$0$0; acceptor$0$member$0$1; acceptor$1$didNotPromise$0$0; acceptor$1$promise$0$0]}

sort2part_sig: {EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')): quorum$0$member$1$0; quorum$1$chosenAt$0$0 | quorum$0$member$1$1; quorum$1$chosenAt$0$1, EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')): proposer$0$leader$0$0; proposer$1$chosenAt$1$0; proposer$1$chosenAt$1$1 | proposer$1$promise$1$0 | proposer$1$start$0$0, EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')): acceptor$0$member$0$0; acceptor$0$member$0$1; acceptor$1$didNotPromise$0$0; acceptor$1$promise$0$0}

part_sig: ('acceptor$0$member$0$0; acceptor$0$member$0$1; acceptor$1$didNotPromise$0$0; acceptor$1$promise$0$0', 'proposer$0$leader$0$0; proposer$1$chosenAt$1$0; proposer$1$chosenAt$1$1 | proposer$1$promise$1$0 | proposer$1$start$0$0', 'quorum$0$member$1$0; quorum$1$chosenAt$0$0 | quorum$0$member$1$1; quorum$1$chosenAt$0$1')


---------- SigGenerator ----------

terms:  ['~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~didNotPromise(acceptor0)', 'leader(proposer2)', '~promise(acceptor0,proposer0)', '~start(proposer1)', 'member(acceptor0,quorum__acceptor0_acceptor1)', 'member(acceptor0,quorum__acceptor0_acceptor2)']

func_name2symbol:  {'chosenAt': Const('chosenAt', FunctionSort(EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')), EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')), BooleanSort())), 'didNotPromise': Const('didNotPromise', FunctionSort(EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')), BooleanSort())), 'leader': Const('leader', FunctionSort(EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')), BooleanSort())), 'promise': Const('promise', FunctionSort(EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')), EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')), BooleanSort())), 'start': Const('start', FunctionSort(EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')), BooleanSort())), 'member': Const('member', FunctionSort(EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')), EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')), BooleanSort()))}

func_name2args_sort:  {'chosenAt': (EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')), EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))), 'didNotPromise': (EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')),), 'leader': (EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')),), 'promise': (EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')), EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))), 'start': (EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')),), 'member': (EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')), EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')))}

sign_func_name2count:  {'1$chosenAt': 2, '1$didNotPromise': 1, '0$leader': 1, '1$promise': 1, '1$start': 1, '0$member': 2}


---------- ProductArgPartition ----------

sort2class_sigs: {EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')): [quorum$0$member$1$0; quorum$1$chosenAt$0$0, quorum$0$member$1$1; quorum$1$chosenAt$0$1], EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')): [proposer$0$leader$0$0; proposer$1$chosenAt$1$0; proposer$1$chosenAt$1$1, proposer$1$promise$1$0, proposer$1$start$0$0], EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')): [acceptor$0$member$0$0; acceptor$0$member$0$1; acceptor$1$didNotPromise$0$0; acceptor$1$promise$0$0]}

sort2part_sig: {EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')): quorum$0$member$1$0; quorum$1$chosenAt$0$0 | quorum$0$member$1$1; quorum$1$chosenAt$0$1, EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')): proposer$0$leader$0$0; proposer$1$chosenAt$1$0; proposer$1$chosenAt$1$1 | proposer$1$promise$1$0 | proposer$1$start$0$0, EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')): acceptor$0$member$0$0; acceptor$0$member$0$1; acceptor$1$didNotPromise$0$0; acceptor$1$promise$0$0}

	sort: quorum

	identical_classes: {'quorum$0$member$1; quorum$1$chosenAt$0': [quorum$0$member$1$0; quorum$1$chosenAt$0$0, quorum$0$member$1$1; quorum$1$chosenAt$0$1]}

	identical_single_classes: {}

	identical_multi_classes: {'quorum$0$member$1; quorum$1$chosenAt$0': [quorum$0$member$1$0, quorum$1$chosenAt$0$0, quorum$0$member$1$1, quorum$1$chosenAt$0$1]}

	sort: proposer

	identical_classes: {'proposer$0$leader$0; proposer$1$chosenAt$1; proposer$1$chosenAt$1': [proposer$0$leader$0$0; proposer$1$chosenAt$1$0; proposer$1$chosenAt$1$1], 'proposer$1$promise$1': [proposer$1$promise$1$0], 'proposer$1$start$0': [proposer$1$start$0$0]}

	identical_single_classes: {'proposer$0$leader$0; proposer$1$chosenAt$1; proposer$1$chosenAt$1': proposer$0$leader$0$0; proposer$1$chosenAt$1$0; proposer$1$chosenAt$1$1, 'proposer$1$promise$1': proposer$1$promise$1$0, 'proposer$1$start$0': proposer$1$start$0$0}

	identical_multi_classes: {}

	sort: acceptor

	identical_classes: {'acceptor$0$member$0; acceptor$0$member$0; acceptor$1$didNotPromise$0; acceptor$1$promise$0': [acceptor$0$member$0$0; acceptor$0$member$0$1; acceptor$1$didNotPromise$0$0; acceptor$1$promise$0$0]}

	identical_single_classes: {'acceptor$0$member$0; acceptor$0$member$0; acceptor$1$didNotPromise$0; acceptor$1$promise$0': acceptor$0$member$0$0; acceptor$0$member$0$1; acceptor$1$didNotPromise$0$0; acceptor$1$promise$0$0}

	identical_multi_classes: {}


---------- QInference: _set_sort_to_quantifier_mode ----------

quantifier mode: quorum: QuantifierMode.forall

quantifier mode: proposer: QuantifierMode.forall

quantifier mode: acceptor: QuantifierMode.forall


---------- QInference: _set_constraint_mode ----------

constraint mode: ConstraintMode.no_merge


---------- QFormula: _set_qvars ----------

forall_qvars: {Var('ACCEPTOR0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Var('PROPOSER2', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))), Var('QUORUM0', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), Var('PROPOSER0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))), Var('PROPOSER1', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))), Var('QUORUM1', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')))}

exists_qvars: set()


---------- QFormula: _set_signed_func_name_to_args ----------

signed_func_name2args: {'1$chosenAt': [[Var('QUORUM0', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), Var('PROPOSER0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))], [Var('QUORUM1', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), Var('PROPOSER0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))]], '1$didNotPromise': [[Var('ACCEPTOR0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')))]], '0$leader': [[Var('PROPOSER0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))]], '1$promise': [[Var('ACCEPTOR0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Var('PROPOSER1', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))]], '1$start': [[Var('PROPOSER2', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))]], '0$member': [[Var('ACCEPTOR0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Var('QUORUM0', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')))], [Var('ACCEPTOR0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Var('QUORUM1', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')))]]}


---------- QFormula: _set_qterms ----------

qterms: ['~chosenAt(QUORUM1,PROPOSER0)', 'member(ACCEPTOR0,QUORUM0)', '~didNotPromise(ACCEPTOR0)', '~start(PROPOSER2)', '~promise(ACCEPTOR0,PROPOSER1)', 'leader(PROPOSER0)', '~chosenAt(QUORUM0,PROPOSER0)', 'member(ACCEPTOR0,QUORUM1)']


---------- QFormula: get_qclause ----------

qclause: forall QUORUM1,PROPOSER0,PROPOSER2,ACCEPTOR0,PROPOSER1,QUORUM0. chosenAt(QUORUM1,PROPOSER0) | ~member(ACCEPTOR0,QUORUM0) | didNotPromise(ACCEPTOR0) | start(PROPOSER2) | promise(ACCEPTOR0,PROPOSER1) | ~leader(PROPOSER0) | chosenAt(QUORUM0,PROPOSER0) | ~member(ACCEPTOR0,QUORUM1) | (PROPOSER0 = PROPOSER2 | PROPOSER0 = PROPOSER1 | PROPOSER1 = PROPOSER2 | QUORUM0 = QUORUM1)


=== Prime Orbit 38 =====================
size : 18
num_suborbits: 1
600 (*) : --0---0---0------1---1---0-
600     : ['promise(acceptor0,proposer2)', 'promise(acceptor2,proposer0)', '~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor1)', '~start(proposer1)']
601     : -0----0---0-----1----1----0
601     : ['promise(acceptor0,proposer1)', 'promise(acceptor2,proposer0)', '~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor1)', '~start(proposer2)']
602     : --0----0--0------1----1-0--
602     : ['promise(acceptor0,proposer2)', 'promise(acceptor2,proposer1)', '~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor1)', '~start(proposer0)']
603     : 0------0--0----1------1---0
603     : ['promise(acceptor0,proposer0)', 'promise(acceptor2,proposer1)', '~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor1)', '~start(proposer2)']
604     : -0------0-0-----1------10--
604     : ['promise(acceptor0,proposer1)', 'promise(acceptor2,proposer2)', '~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor1)', '~start(proposer0)']
605     : 0-------0-0----1-------1-0-
605     : ['promise(acceptor0,proposer0)', 'promise(acceptor2,proposer2)', '~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor1)', '~start(proposer1)']
606     : -----00----0-----11------0-
606     : ['promise(acceptor0,proposer2)', 'promise(acceptor1,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor2)', '~start(proposer1)']
607     : ----0-0----0----1-1-------0
607     : ['promise(acceptor0,proposer1)', 'promise(acceptor1,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor2)', '~start(proposer2)']
608     : -----0-0---0-----1-1----0--
608     : ['promise(acceptor0,proposer2)', 'promise(acceptor1,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor2)', '~start(proposer0)']
609     : ---0---0---0---1---1------0
609     : ['promise(acceptor0,proposer0)', 'promise(acceptor1,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor2)', '~start(proposer2)']
610     : ----0---0--0----1---1---0--
610     : ['promise(acceptor0,proposer1)', 'promise(acceptor1,proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor2)', '~start(proposer0)']
611     : ---0----0--0---1----1----0-
611     : ['promise(acceptor0,proposer0)', 'promise(acceptor1,proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor2)', '~start(proposer1)']
612     : --00-----0----------11---0-
612     : ['promise(acceptor1,proposer2)', 'promise(acceptor2,proposer0)', '~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~didNotPromise(acceptor0)', '~start(proposer1)']
613     : -0-0-----0---------1-1----0
613     : ['promise(acceptor1,proposer1)', 'promise(acceptor2,proposer0)', '~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~didNotPromise(acceptor0)', '~start(proposer2)']
614     : --0-0----0----------1-1-0--
614     : ['promise(acceptor1,proposer2)', 'promise(acceptor2,proposer1)', '~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~didNotPromise(acceptor0)', '~start(proposer0)']
615     : 0---0----0--------1---1---0
615     : ['promise(acceptor1,proposer0)', 'promise(acceptor2,proposer1)', '~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~didNotPromise(acceptor0)', '~start(proposer2)']
616     : -0---0---0---------1---10--
616     : ['promise(acceptor1,proposer1)', 'promise(acceptor2,proposer2)', '~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~didNotPromise(acceptor0)', '~start(proposer0)']
617     : 0----0---0--------1----1-0-
617     : ['promise(acceptor1,proposer0)', 'promise(acceptor2,proposer2)', '~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~didNotPromise(acceptor0)', '~start(proposer1)']
num_forall :   0
num_exists :   0
num_literals : 0
quantified form : None
qcost : 0




---------- QPrime ----------


---------- ConstArgBinding ----------

terms: ['~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor1)', 'promise(acceptor0,proposer2)', 'promise(acceptor2,proposer0)', '~start(proposer1)', 'member(acceptor0,quorum__acceptor0_acceptor1)', 'member(acceptor1,quorum__acceptor0_acceptor1)', '~member(acceptor2,quorum__acceptor0_acceptor1)', '~member(acceptor0,quorum__acceptor1_acceptor2)', 'member(acceptor1,quorum__acceptor1_acceptor2)', 'member(acceptor2,quorum__acceptor1_acceptor2)']

sign_func_name2args: {'1$chosenAt': [(Const('quorum__acceptor0_acceptor1', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), Const('proposer2', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))), (Const('quorum__acceptor1_acceptor2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), Const('proposer0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))))], '1$didNotPromise': [(Const('acceptor1', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))),)], '0$promise': [(Const('acceptor0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Const('proposer2', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))), (Const('acceptor2', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Const('proposer0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))))], '1$start': [(Const('proposer1', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))),)], '0$member': [(Const('acceptor0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Const('quorum__acceptor0_acceptor1', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')))), (Const('acceptor1', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Const('quorum__acceptor0_acceptor1', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')))), (Const('acceptor1', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Const('quorum__acceptor1_acceptor2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')))), (Const('acceptor2', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Const('quorum__acceptor1_acceptor2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))))], '1$member': [(Const('acceptor2', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Const('quorum__acceptor0_acceptor1', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')))), (Const('acceptor0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Const('quorum__acceptor1_acceptor2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))))]}

const2sigs: {Const('quorum__acceptor0_acceptor1', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))): [quorum$1$chosenAt$0$0, quorum$0$member$1$0, quorum$0$member$1$1, quorum$1$member$1$0], Const('proposer2', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))): [proposer$1$chosenAt$1$0, proposer$0$promise$1$0], Const('quorum__acceptor1_acceptor2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))): [quorum$1$chosenAt$0$1, quorum$0$member$1$2, quorum$0$member$1$3, quorum$1$member$1$1], Const('proposer0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))): [proposer$1$chosenAt$1$1, proposer$0$promise$1$1], Const('acceptor1', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))): [acceptor$1$didNotPromise$0$0, acceptor$0$member$0$1, acceptor$0$member$0$2], Const('acceptor0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))): [acceptor$0$promise$0$0, acceptor$0$member$0$0, acceptor$1$member$0$1], Const('acceptor2', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))): [acceptor$0$promise$0$1, acceptor$0$member$0$3, acceptor$1$member$0$0], Const('proposer1', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))): [proposer$1$start$0$0]}

sig2const: {'quorum$1$chosenAt$0$0': Const('quorum__acceptor0_acceptor1', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), 'proposer$1$chosenAt$1$0': Const('proposer2', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))), 'quorum$1$chosenAt$0$1': Const('quorum__acceptor1_acceptor2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), 'proposer$1$chosenAt$1$1': Const('proposer0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))), 'acceptor$1$didNotPromise$0$0': Const('acceptor1', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), 'acceptor$0$promise$0$0': Const('acceptor0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), 'proposer$0$promise$1$0': Const('proposer2', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))), 'acceptor$0$promise$0$1': Const('acceptor2', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), 'proposer$0$promise$1$1': Const('proposer0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))), 'proposer$1$start$0$0': Const('proposer1', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))), 'acceptor$0$member$0$0': Const('acceptor0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), 'quorum$0$member$1$0': Const('quorum__acceptor0_acceptor1', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), 'acceptor$0$member$0$1': Const('acceptor1', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), 'quorum$0$member$1$1': Const('quorum__acceptor0_acceptor1', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), 'acceptor$0$member$0$2': Const('acceptor1', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), 'quorum$0$member$1$2': Const('quorum__acceptor1_acceptor2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), 'acceptor$0$member$0$3': Const('acceptor2', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), 'quorum$0$member$1$3': Const('quorum__acceptor1_acceptor2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), 'acceptor$1$member$0$0': Const('acceptor2', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), 'quorum$1$member$1$0': Const('quorum__acceptor0_acceptor1', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), 'acceptor$1$member$0$1': Const('acceptor0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), 'quorum$1$member$1$1': Const('quorum__acceptor1_acceptor2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')))}


---------- ArgPartition ----------

sort2class_sigs: {EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')): [quorum$0$member$1$0; quorum$0$member$1$1; quorum$1$chosenAt$0$0; quorum$1$member$1$0, quorum$0$member$1$2; quorum$0$member$1$3; quorum$1$chosenAt$0$1; quorum$1$member$1$1], EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')): [proposer$0$promise$1$0; proposer$1$chosenAt$1$0, proposer$0$promise$1$1; proposer$1$chosenAt$1$1, proposer$1$start$0$0], EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')): [acceptor$0$member$0$0; acceptor$0$promise$0$0; acceptor$1$member$0$1, acceptor$0$member$0$1; acceptor$0$member$0$2; acceptor$1$didNotPromise$0$0, acceptor$0$member$0$3; acceptor$0$promise$0$1; acceptor$1$member$0$0]}

sort2part_sig: {EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')): quorum$0$member$1$0; quorum$0$member$1$1; quorum$1$chosenAt$0$0; quorum$1$member$1$0 | quorum$0$member$1$2; quorum$0$member$1$3; quorum$1$chosenAt$0$1; quorum$1$member$1$1, EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')): proposer$0$promise$1$0; proposer$1$chosenAt$1$0 | proposer$0$promise$1$1; proposer$1$chosenAt$1$1 | proposer$1$start$0$0, EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')): acceptor$0$member$0$0; acceptor$0$promise$0$0; acceptor$1$member$0$1 | acceptor$0$member$0$1; acceptor$0$member$0$2; acceptor$1$didNotPromise$0$0 | acceptor$0$member$0$3; acceptor$0$promise$0$1; acceptor$1$member$0$0}

part_sig: ('acceptor$0$member$0$0; acceptor$0$promise$0$0; acceptor$1$member$0$1 | acceptor$0$member$0$1; acceptor$0$member$0$2; acceptor$1$didNotPromise$0$0 | acceptor$0$member$0$3; acceptor$0$promise$0$1; acceptor$1$member$0$0', 'proposer$0$promise$1$0; proposer$1$chosenAt$1$0 | proposer$0$promise$1$1; proposer$1$chosenAt$1$1 | proposer$1$start$0$0', 'quorum$0$member$1$0; quorum$0$member$1$1; quorum$1$chosenAt$0$0; quorum$1$member$1$0 | quorum$0$member$1$2; quorum$0$member$1$3; quorum$1$chosenAt$0$1; quorum$1$member$1$1')


---------- SigGenerator ----------

terms:  ['~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor1)', 'promise(acceptor0,proposer2)', 'promise(acceptor2,proposer0)', '~start(proposer1)', 'member(acceptor0,quorum__acceptor0_acceptor1)', 'member(acceptor1,quorum__acceptor0_acceptor1)', '~member(acceptor2,quorum__acceptor0_acceptor1)', '~member(acceptor0,quorum__acceptor1_acceptor2)', 'member(acceptor1,quorum__acceptor1_acceptor2)', 'member(acceptor2,quorum__acceptor1_acceptor2)']

func_name2symbol:  {'chosenAt': Const('chosenAt', FunctionSort(EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')), EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')), BooleanSort())), 'didNotPromise': Const('didNotPromise', FunctionSort(EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')), BooleanSort())), 'promise': Const('promise', FunctionSort(EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')), EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')), BooleanSort())), 'start': Const('start', FunctionSort(EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')), BooleanSort())), 'member': Const('member', FunctionSort(EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')), EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')), BooleanSort()))}

func_name2args_sort:  {'chosenAt': (EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')), EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))), 'didNotPromise': (EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')),), 'promise': (EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')), EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))), 'start': (EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')),), 'member': (EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')), EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')))}

sign_func_name2count:  {'1$chosenAt': 2, '1$didNotPromise': 1, '0$promise': 2, '1$start': 1, '0$member': 4, '1$member': 2}


---------- ProductArgPartition ----------

sort2class_sigs: {EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')): [quorum$0$member$1$0; quorum$0$member$1$1; quorum$1$chosenAt$0$0; quorum$1$member$1$0, quorum$0$member$1$2; quorum$0$member$1$3; quorum$1$chosenAt$0$1; quorum$1$member$1$1], EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')): [proposer$0$promise$1$0; proposer$1$chosenAt$1$0, proposer$0$promise$1$1; proposer$1$chosenAt$1$1, proposer$1$start$0$0], EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')): [acceptor$0$member$0$0; acceptor$0$promise$0$0; acceptor$1$member$0$1, acceptor$0$member$0$1; acceptor$0$member$0$2; acceptor$1$didNotPromise$0$0, acceptor$0$member$0$3; acceptor$0$promise$0$1; acceptor$1$member$0$0]}

sort2part_sig: {EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')): quorum$0$member$1$0; quorum$0$member$1$1; quorum$1$chosenAt$0$0; quorum$1$member$1$0 | quorum$0$member$1$2; quorum$0$member$1$3; quorum$1$chosenAt$0$1; quorum$1$member$1$1, EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')): proposer$0$promise$1$0; proposer$1$chosenAt$1$0 | proposer$0$promise$1$1; proposer$1$chosenAt$1$1 | proposer$1$start$0$0, EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')): acceptor$0$member$0$0; acceptor$0$promise$0$0; acceptor$1$member$0$1 | acceptor$0$member$0$1; acceptor$0$member$0$2; acceptor$1$didNotPromise$0$0 | acceptor$0$member$0$3; acceptor$0$promise$0$1; acceptor$1$member$0$0}

	sort: quorum

	identical_classes: {'quorum$0$member$1; quorum$0$member$1; quorum$1$chosenAt$0; quorum$1$member$1': [quorum$0$member$1$0; quorum$0$member$1$1; quorum$1$chosenAt$0$0; quorum$1$member$1$0, quorum$0$member$1$2; quorum$0$member$1$3; quorum$1$chosenAt$0$1; quorum$1$member$1$1]}

	identical_single_classes: {}

	identical_multi_classes: {'quorum$0$member$1; quorum$0$member$1; quorum$1$chosenAt$0; quorum$1$member$1': [quorum$0$member$1$0, quorum$0$member$1$1, quorum$1$chosenAt$0$0, quorum$1$member$1$0, quorum$0$member$1$2, quorum$0$member$1$3, quorum$1$chosenAt$0$1, quorum$1$member$1$1]}

	sort: proposer

	identical_classes: {'proposer$0$promise$1; proposer$1$chosenAt$1': [proposer$0$promise$1$0; proposer$1$chosenAt$1$0, proposer$0$promise$1$1; proposer$1$chosenAt$1$1], 'proposer$1$start$0': [proposer$1$start$0$0]}

	identical_single_classes: {'proposer$1$start$0': proposer$1$start$0$0}

	identical_multi_classes: {'proposer$0$promise$1; proposer$1$chosenAt$1': [proposer$0$promise$1$0, proposer$1$chosenAt$1$0, proposer$0$promise$1$1, proposer$1$chosenAt$1$1]}

	sort: acceptor

	identical_classes: {'acceptor$0$member$0; acceptor$0$promise$0; acceptor$1$member$0': [acceptor$0$member$0$0; acceptor$0$promise$0$0; acceptor$1$member$0$1, acceptor$0$member$0$3; acceptor$0$promise$0$1; acceptor$1$member$0$0], 'acceptor$0$member$0; acceptor$0$member$0; acceptor$1$didNotPromise$0': [acceptor$0$member$0$1; acceptor$0$member$0$2; acceptor$1$didNotPromise$0$0]}

	identical_single_classes: {'acceptor$0$member$0; acceptor$0$member$0; acceptor$1$didNotPromise$0': acceptor$0$member$0$1; acceptor$0$member$0$2; acceptor$1$didNotPromise$0$0}

	identical_multi_classes: {'acceptor$0$member$0; acceptor$0$promise$0; acceptor$1$member$0': [acceptor$0$member$0$0, acceptor$0$promise$0$0, acceptor$1$member$0$1, acceptor$0$member$0$3, acceptor$0$promise$0$1, acceptor$1$member$0$0]}


---------- QInference: _set_sort_to_quantifier_mode ----------

quantifier mode: quorum: QuantifierMode.forall

quantifier mode: proposer: QuantifierMode.forall

quantifier mode: acceptor: QuantifierMode.forall


---------- QInference: _set_constraint_mode ----------

constraint mode: ConstraintMode.no_merge


---------- QFormula: _set_qvars ----------

forall_qvars: {Var('ACCEPTOR0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Var('PROPOSER2', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))), Var('QUORUM0', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), Var('PROPOSER0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))), Var('ACCEPTOR1', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Var('PROPOSER1', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))), Var('QUORUM1', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), Var('ACCEPTOR2', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')))}

exists_qvars: set()


---------- QFormula: _set_signed_func_name_to_args ----------

signed_func_name2args: {'1$chosenAt': [[Var('QUORUM0', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), Var('PROPOSER0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))], [Var('QUORUM1', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), Var('PROPOSER1', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))]], '1$didNotPromise': [[Var('ACCEPTOR1', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')))]], '0$promise': [[Var('ACCEPTOR0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Var('PROPOSER0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))], [Var('ACCEPTOR2', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Var('PROPOSER1', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))]], '1$start': [[Var('PROPOSER2', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))]], '0$member': [[Var('ACCEPTOR0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Var('QUORUM0', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')))], [Var('ACCEPTOR1', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Var('QUORUM0', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')))], [Var('ACCEPTOR1', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Var('QUORUM1', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')))], [Var('ACCEPTOR2', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Var('QUORUM1', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')))]], '1$member': [[Var('ACCEPTOR2', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Var('QUORUM0', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')))], [Var('ACCEPTOR0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Var('QUORUM1', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')))]]}


---------- QFormula: _set_qterms ----------

qterms: ['member(ACCEPTOR0,QUORUM0)', '~member(ACCEPTOR2,QUORUM0)', '~start(PROPOSER2)', '~didNotPromise(ACCEPTOR1)', '~member(ACCEPTOR0,QUORUM1)', 'promise(ACCEPTOR0,PROPOSER0)', 'member(ACCEPTOR2,QUORUM1)', 'member(ACCEPTOR1,QUORUM1)', '~chosenAt(QUORUM0,PROPOSER0)', 'promise(ACCEPTOR2,PROPOSER1)', 'member(ACCEPTOR1,QUORUM0)', '~chosenAt(QUORUM1,PROPOSER1)']


---------- QFormula: get_qclause ----------

qclause: forall QUORUM1,ACCEPTOR2,ACCEPTOR1,PROPOSER0,PROPOSER2,ACCEPTOR0,PROPOSER1,QUORUM0. ~member(ACCEPTOR0,QUORUM0) | member(ACCEPTOR2,QUORUM0) | start(PROPOSER2) | didNotPromise(ACCEPTOR1) | member(ACCEPTOR0,QUORUM1) | ~promise(ACCEPTOR0,PROPOSER0) | ~member(ACCEPTOR2,QUORUM1) | ~member(ACCEPTOR1,QUORUM1) | chosenAt(QUORUM0,PROPOSER0) | ~promise(ACCEPTOR2,PROPOSER1) | ~member(ACCEPTOR1,QUORUM0) | chosenAt(QUORUM1,PROPOSER1) | (PROPOSER1 = PROPOSER2 | ACCEPTOR1 = ACCEPTOR2 | PROPOSER0 = PROPOSER1 | ACCEPTOR0 = ACCEPTOR2 | QUORUM0 = QUORUM1 | PROPOSER0 = PROPOSER2 | ACCEPTOR0 = ACCEPTOR1)


=== Prime Orbit 39 =====================
size : 9
num_suborbits: 1
618 (*) : --0--0---0----1---------00-
618     : ['leader(proposer2)', '~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~didNotPromise(acceptor0)', '~start(proposer0)', '~start(proposer1)']
619     : -0--0----0---1----------0-0
619     : ['leader(proposer1)', '~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~didNotPromise(acceptor0)', '~start(proposer0)', '~start(proposer2)']
620     : 0--0-----0--1------------00
620     : ['leader(proposer0)', '~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~didNotPromise(acceptor0)', '~start(proposer1)', '~start(proposer2)']
621     : --0-----0-0---1---------00-
621     : ['leader(proposer2)', '~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor1)', '~start(proposer0)', '~start(proposer1)']
622     : -0-----0--0--1----------0-0
622     : ['leader(proposer1)', '~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor1)', '~start(proposer0)', '~start(proposer2)']
623     : 0-----0---0-1------------00
623     : ['leader(proposer0)', '~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor1)', '~start(proposer1)', '~start(proposer2)']
624     : -----0--0--0--1---------00-
624     : ['leader(proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor2)', '~start(proposer0)', '~start(proposer1)']
625     : ----0--0---0-1----------0-0
625     : ['leader(proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor2)', '~start(proposer0)', '~start(proposer2)']
626     : ---0--0----01------------00
626     : ['leader(proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor2)', '~start(proposer1)', '~start(proposer2)']
num_forall :   0
num_exists :   0
num_literals : 0
quantified form : None
qcost : 0




---------- QPrime ----------


---------- ConstArgBinding ----------

terms: ['~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~didNotPromise(acceptor0)', 'leader(proposer2)', '~start(proposer0)', '~start(proposer1)', 'member(acceptor0,quorum__acceptor0_acceptor1)', 'member(acceptor0,quorum__acceptor0_acceptor2)']

sign_func_name2args: {'1$chosenAt': [(Const('quorum__acceptor0_acceptor1', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), Const('proposer2', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))), (Const('quorum__acceptor0_acceptor2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), Const('proposer2', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))))], '1$didNotPromise': [(Const('acceptor0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))),)], '0$leader': [(Const('proposer2', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))),)], '1$start': [(Const('proposer0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))),), (Const('proposer1', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))),)], '0$member': [(Const('acceptor0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Const('quorum__acceptor0_acceptor1', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')))), (Const('acceptor0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Const('quorum__acceptor0_acceptor2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))))]}

const2sigs: {Const('quorum__acceptor0_acceptor1', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))): [quorum$1$chosenAt$0$0, quorum$0$member$1$0], Const('proposer2', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))): [proposer$1$chosenAt$1$0, proposer$1$chosenAt$1$1, proposer$0$leader$0$0], Const('quorum__acceptor0_acceptor2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))): [quorum$1$chosenAt$0$1, quorum$0$member$1$1], Const('acceptor0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))): [acceptor$1$didNotPromise$0$0, acceptor$0$member$0$0, acceptor$0$member$0$1], Const('proposer0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))): [proposer$1$start$0$0], Const('proposer1', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))): [proposer$1$start$0$1]}

sig2const: {'quorum$1$chosenAt$0$0': Const('quorum__acceptor0_acceptor1', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), 'proposer$1$chosenAt$1$0': Const('proposer2', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))), 'quorum$1$chosenAt$0$1': Const('quorum__acceptor0_acceptor2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), 'proposer$1$chosenAt$1$1': Const('proposer2', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))), 'acceptor$1$didNotPromise$0$0': Const('acceptor0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), 'proposer$0$leader$0$0': Const('proposer2', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))), 'proposer$1$start$0$0': Const('proposer0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))), 'proposer$1$start$0$1': Const('proposer1', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))), 'acceptor$0$member$0$0': Const('acceptor0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), 'quorum$0$member$1$0': Const('quorum__acceptor0_acceptor1', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), 'acceptor$0$member$0$1': Const('acceptor0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), 'quorum$0$member$1$1': Const('quorum__acceptor0_acceptor2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')))}


---------- ArgPartition ----------

sort2class_sigs: {EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')): [quorum$0$member$1$0; quorum$1$chosenAt$0$0, quorum$0$member$1$1; quorum$1$chosenAt$0$1], EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')): [proposer$0$leader$0$0; proposer$1$chosenAt$1$0; proposer$1$chosenAt$1$1, proposer$1$start$0$0, proposer$1$start$0$1], EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')): [acceptor$0$member$0$0; acceptor$0$member$0$1; acceptor$1$didNotPromise$0$0]}

sort2part_sig: {EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')): quorum$0$member$1$0; quorum$1$chosenAt$0$0 | quorum$0$member$1$1; quorum$1$chosenAt$0$1, EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')): proposer$0$leader$0$0; proposer$1$chosenAt$1$0; proposer$1$chosenAt$1$1 | proposer$1$start$0$0 | proposer$1$start$0$1, EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')): acceptor$0$member$0$0; acceptor$0$member$0$1; acceptor$1$didNotPromise$0$0}

part_sig: ('acceptor$0$member$0$0; acceptor$0$member$0$1; acceptor$1$didNotPromise$0$0', 'proposer$0$leader$0$0; proposer$1$chosenAt$1$0; proposer$1$chosenAt$1$1 | proposer$1$start$0$0 | proposer$1$start$0$1', 'quorum$0$member$1$0; quorum$1$chosenAt$0$0 | quorum$0$member$1$1; quorum$1$chosenAt$0$1')


---------- SigGenerator ----------

terms:  ['~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~didNotPromise(acceptor0)', 'leader(proposer2)', '~start(proposer0)', '~start(proposer1)', 'member(acceptor0,quorum__acceptor0_acceptor1)', 'member(acceptor0,quorum__acceptor0_acceptor2)']

func_name2symbol:  {'chosenAt': Const('chosenAt', FunctionSort(EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')), EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')), BooleanSort())), 'didNotPromise': Const('didNotPromise', FunctionSort(EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')), BooleanSort())), 'leader': Const('leader', FunctionSort(EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')), BooleanSort())), 'start': Const('start', FunctionSort(EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')), BooleanSort())), 'member': Const('member', FunctionSort(EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')), EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')), BooleanSort()))}

func_name2args_sort:  {'chosenAt': (EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')), EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))), 'didNotPromise': (EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')),), 'leader': (EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')),), 'start': (EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')),), 'member': (EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')), EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')))}

sign_func_name2count:  {'1$chosenAt': 2, '1$didNotPromise': 1, '0$leader': 1, '1$start': 2, '0$member': 2}


---------- ProductArgPartition ----------

sort2class_sigs: {EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')): [quorum$0$member$1$0; quorum$1$chosenAt$0$0, quorum$0$member$1$1; quorum$1$chosenAt$0$1], EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')): [proposer$0$leader$0$0; proposer$1$chosenAt$1$0; proposer$1$chosenAt$1$1, proposer$1$start$0$0, proposer$1$start$0$1], EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')): [acceptor$0$member$0$0; acceptor$0$member$0$1; acceptor$1$didNotPromise$0$0]}

sort2part_sig: {EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')): quorum$0$member$1$0; quorum$1$chosenAt$0$0 | quorum$0$member$1$1; quorum$1$chosenAt$0$1, EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')): proposer$0$leader$0$0; proposer$1$chosenAt$1$0; proposer$1$chosenAt$1$1 | proposer$1$start$0$0 | proposer$1$start$0$1, EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')): acceptor$0$member$0$0; acceptor$0$member$0$1; acceptor$1$didNotPromise$0$0}

	sort: quorum

	identical_classes: {'quorum$0$member$1; quorum$1$chosenAt$0': [quorum$0$member$1$0; quorum$1$chosenAt$0$0, quorum$0$member$1$1; quorum$1$chosenAt$0$1]}

	identical_single_classes: {}

	identical_multi_classes: {'quorum$0$member$1; quorum$1$chosenAt$0': [quorum$0$member$1$0, quorum$1$chosenAt$0$0, quorum$0$member$1$1, quorum$1$chosenAt$0$1]}

	sort: proposer

	identical_classes: {'proposer$0$leader$0; proposer$1$chosenAt$1; proposer$1$chosenAt$1': [proposer$0$leader$0$0; proposer$1$chosenAt$1$0; proposer$1$chosenAt$1$1], 'proposer$1$start$0': [proposer$1$start$0$0, proposer$1$start$0$1]}

	identical_single_classes: {'proposer$0$leader$0; proposer$1$chosenAt$1; proposer$1$chosenAt$1': proposer$0$leader$0$0; proposer$1$chosenAt$1$0; proposer$1$chosenAt$1$1}

	identical_multi_classes: {'proposer$1$start$0': [proposer$1$start$0$0, proposer$1$start$0$1]}

	sort: acceptor

	identical_classes: {'acceptor$0$member$0; acceptor$0$member$0; acceptor$1$didNotPromise$0': [acceptor$0$member$0$0; acceptor$0$member$0$1; acceptor$1$didNotPromise$0$0]}

	identical_single_classes: {'acceptor$0$member$0; acceptor$0$member$0; acceptor$1$didNotPromise$0': acceptor$0$member$0$0; acceptor$0$member$0$1; acceptor$1$didNotPromise$0$0}

	identical_multi_classes: {}


---------- QInference: _set_sort_to_quantifier_mode ----------

quantifier mode: quorum: QuantifierMode.forall

quantifier mode: proposer: QuantifierMode.forall_exists

quantifier mode: acceptor: QuantifierMode.forall


---------- QInference: _set_constraint_mode ----------

constraint mode: ConstraintMode.no_merge


---------- QFormula: _set_qvars ----------

forall_qvars: {Var('ACCEPTOR0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Var('QUORUM1', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), Var('PROPOSER1', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))), Var('QUORUM0', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')))}

exists_qvars: {Var('PROPOSER0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))}


---------- QFormula: _set_signed_func_name_to_args ----------

signed_func_name2args: {'1$chosenAt': [[Var('QUORUM0', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), Var('PROPOSER1', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))], [Var('QUORUM1', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), Var('PROPOSER1', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))]], '1$didNotPromise': [[Var('ACCEPTOR0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')))]], '0$leader': [[Var('PROPOSER1', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))]], '1$start': [[Var('PROPOSER0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))], [Var('PROPOSER0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))]], '0$member': [[Var('ACCEPTOR0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Var('QUORUM0', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')))], [Var('ACCEPTOR0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Var('QUORUM1', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')))]]}


---------- QFormula: _set_qterms ----------

qterms: ['member(ACCEPTOR0,QUORUM0)', '~start(PROPOSER0)', '~didNotPromise(ACCEPTOR0)', '~chosenAt(QUORUM0,PROPOSER1)', 'leader(PROPOSER1)', 'member(ACCEPTOR0,QUORUM1)', '~chosenAt(QUORUM1,PROPOSER1)']


---------- QFormula: get_qclause ----------

qclause: forall PROPOSER1,QUORUM1,QUORUM0,ACCEPTOR0. ~member(ACCEPTOR0,QUORUM0) | didNotPromise(ACCEPTOR0) | chosenAt(QUORUM0,PROPOSER1) | ~leader(PROPOSER1) | ~member(ACCEPTOR0,QUORUM1) | chosenAt(QUORUM1,PROPOSER1) | (exists PROPOSER0. (start(PROPOSER0) & PROPOSER0 ~= PROPOSER1)) | QUORUM0 = QUORUM1


=== Prime Orbit 40 =====================
size : 9
num_suborbits: 1
627 (*) : --0-----0-0---1---00-------
627     : ['leader(proposer2)', '~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor1)', '~promise(acceptor1,proposer0)', '~promise(acceptor1,proposer1)']
628     : -0-----0--0--1----0-0------
628     : ['leader(proposer1)', '~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor1)', '~promise(acceptor1,proposer0)', '~promise(acceptor1,proposer2)']
629     : 0-----0---0-1------00------
629     : ['leader(proposer0)', '~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor1)', '~promise(acceptor1,proposer1)', '~promise(acceptor1,proposer2)']
630     : -----0--0--0--1------00----
630     : ['leader(proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor2)', '~promise(acceptor2,proposer0)', '~promise(acceptor2,proposer1)']
631     : ----0--0---0-1-------0-0---
631     : ['leader(proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor2)', '~promise(acceptor2,proposer0)', '~promise(acceptor2,proposer2)']
632     : ---0--0----01---------00---
632     : ['leader(proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor2)', '~promise(acceptor2,proposer1)', '~promise(acceptor2,proposer2)']
633     : --0--0---0----100----------
633     : ['leader(proposer2)', '~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~didNotPromise(acceptor0)', '~promise(acceptor0,proposer0)', '~promise(acceptor0,proposer1)']
634     : -0--0----0---1-0-0---------
634     : ['leader(proposer1)', '~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~didNotPromise(acceptor0)', '~promise(acceptor0,proposer0)', '~promise(acceptor0,proposer2)']
635     : 0--0-----0--1---00---------
635     : ['leader(proposer0)', '~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~didNotPromise(acceptor0)', '~promise(acceptor0,proposer1)', '~promise(acceptor0,proposer2)']
num_forall :   0
num_exists :   0
num_literals : 0
quantified form : None
qcost : 0




---------- QPrime ----------


---------- ConstArgBinding ----------

terms: ['~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor1)', 'leader(proposer2)', '~promise(acceptor1,proposer0)', '~promise(acceptor1,proposer1)', 'member(acceptor1,quorum__acceptor0_acceptor1)', 'member(acceptor1,quorum__acceptor1_acceptor2)']

sign_func_name2args: {'1$chosenAt': [(Const('quorum__acceptor0_acceptor1', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), Const('proposer2', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))), (Const('quorum__acceptor1_acceptor2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), Const('proposer2', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))))], '1$didNotPromise': [(Const('acceptor1', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))),)], '0$leader': [(Const('proposer2', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))),)], '1$promise': [(Const('acceptor1', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Const('proposer0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))), (Const('acceptor1', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Const('proposer1', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))))], '0$member': [(Const('acceptor1', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Const('quorum__acceptor0_acceptor1', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')))), (Const('acceptor1', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Const('quorum__acceptor1_acceptor2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))))]}

const2sigs: {Const('quorum__acceptor0_acceptor1', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))): [quorum$1$chosenAt$0$0, quorum$0$member$1$0], Const('proposer2', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))): [proposer$1$chosenAt$1$0, proposer$1$chosenAt$1$1, proposer$0$leader$0$0], Const('quorum__acceptor1_acceptor2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))): [quorum$1$chosenAt$0$1, quorum$0$member$1$1], Const('acceptor1', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))): [acceptor$1$didNotPromise$0$0, acceptor$1$promise$0$0, acceptor$1$promise$0$1, acceptor$0$member$0$0, acceptor$0$member$0$1], Const('proposer0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))): [proposer$1$promise$1$0], Const('proposer1', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))): [proposer$1$promise$1$1]}

sig2const: {'quorum$1$chosenAt$0$0': Const('quorum__acceptor0_acceptor1', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), 'proposer$1$chosenAt$1$0': Const('proposer2', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))), 'quorum$1$chosenAt$0$1': Const('quorum__acceptor1_acceptor2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), 'proposer$1$chosenAt$1$1': Const('proposer2', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))), 'acceptor$1$didNotPromise$0$0': Const('acceptor1', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), 'proposer$0$leader$0$0': Const('proposer2', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))), 'acceptor$1$promise$0$0': Const('acceptor1', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), 'proposer$1$promise$1$0': Const('proposer0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))), 'acceptor$1$promise$0$1': Const('acceptor1', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), 'proposer$1$promise$1$1': Const('proposer1', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))), 'acceptor$0$member$0$0': Const('acceptor1', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), 'quorum$0$member$1$0': Const('quorum__acceptor0_acceptor1', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), 'acceptor$0$member$0$1': Const('acceptor1', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), 'quorum$0$member$1$1': Const('quorum__acceptor1_acceptor2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')))}


---------- ArgPartition ----------

sort2class_sigs: {EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')): [quorum$0$member$1$0; quorum$1$chosenAt$0$0, quorum$0$member$1$1; quorum$1$chosenAt$0$1], EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')): [proposer$0$leader$0$0; proposer$1$chosenAt$1$0; proposer$1$chosenAt$1$1, proposer$1$promise$1$0, proposer$1$promise$1$1], EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')): [acceptor$0$member$0$0; acceptor$0$member$0$1; acceptor$1$didNotPromise$0$0; acceptor$1$promise$0$0; acceptor$1$promise$0$1]}

sort2part_sig: {EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')): quorum$0$member$1$0; quorum$1$chosenAt$0$0 | quorum$0$member$1$1; quorum$1$chosenAt$0$1, EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')): proposer$0$leader$0$0; proposer$1$chosenAt$1$0; proposer$1$chosenAt$1$1 | proposer$1$promise$1$0 | proposer$1$promise$1$1, EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')): acceptor$0$member$0$0; acceptor$0$member$0$1; acceptor$1$didNotPromise$0$0; acceptor$1$promise$0$0; acceptor$1$promise$0$1}

part_sig: ('acceptor$0$member$0$0; acceptor$0$member$0$1; acceptor$1$didNotPromise$0$0; acceptor$1$promise$0$0; acceptor$1$promise$0$1', 'proposer$0$leader$0$0; proposer$1$chosenAt$1$0; proposer$1$chosenAt$1$1 | proposer$1$promise$1$0 | proposer$1$promise$1$1', 'quorum$0$member$1$0; quorum$1$chosenAt$0$0 | quorum$0$member$1$1; quorum$1$chosenAt$0$1')


---------- SigGenerator ----------

terms:  ['~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor1)', 'leader(proposer2)', '~promise(acceptor1,proposer0)', '~promise(acceptor1,proposer1)', 'member(acceptor1,quorum__acceptor0_acceptor1)', 'member(acceptor1,quorum__acceptor1_acceptor2)']

func_name2symbol:  {'chosenAt': Const('chosenAt', FunctionSort(EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')), EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')), BooleanSort())), 'didNotPromise': Const('didNotPromise', FunctionSort(EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')), BooleanSort())), 'leader': Const('leader', FunctionSort(EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')), BooleanSort())), 'promise': Const('promise', FunctionSort(EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')), EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')), BooleanSort())), 'member': Const('member', FunctionSort(EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')), EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')), BooleanSort()))}

func_name2args_sort:  {'chosenAt': (EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')), EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))), 'didNotPromise': (EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')),), 'leader': (EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')),), 'promise': (EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')), EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))), 'member': (EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')), EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')))}

sign_func_name2count:  {'1$chosenAt': 2, '1$didNotPromise': 1, '0$leader': 1, '1$promise': 2, '0$member': 2}


---------- ProductArgPartition ----------

sort2class_sigs: {EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')): [quorum$0$member$1$0; quorum$1$chosenAt$0$0, quorum$0$member$1$1; quorum$1$chosenAt$0$1], EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')): [proposer$0$leader$0$0; proposer$1$chosenAt$1$0; proposer$1$chosenAt$1$1, proposer$1$promise$1$0, proposer$1$promise$1$1], EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')): [acceptor$0$member$0$0; acceptor$0$member$0$1; acceptor$1$didNotPromise$0$0; acceptor$1$promise$0$0; acceptor$1$promise$0$1]}

sort2part_sig: {EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')): quorum$0$member$1$0; quorum$1$chosenAt$0$0 | quorum$0$member$1$1; quorum$1$chosenAt$0$1, EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')): proposer$0$leader$0$0; proposer$1$chosenAt$1$0; proposer$1$chosenAt$1$1 | proposer$1$promise$1$0 | proposer$1$promise$1$1, EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')): acceptor$0$member$0$0; acceptor$0$member$0$1; acceptor$1$didNotPromise$0$0; acceptor$1$promise$0$0; acceptor$1$promise$0$1}

	sort: quorum

	identical_classes: {'quorum$0$member$1; quorum$1$chosenAt$0': [quorum$0$member$1$0; quorum$1$chosenAt$0$0, quorum$0$member$1$1; quorum$1$chosenAt$0$1]}

	identical_single_classes: {}

	identical_multi_classes: {'quorum$0$member$1; quorum$1$chosenAt$0': [quorum$0$member$1$0, quorum$1$chosenAt$0$0, quorum$0$member$1$1, quorum$1$chosenAt$0$1]}

	sort: proposer

	identical_classes: {'proposer$0$leader$0; proposer$1$chosenAt$1; proposer$1$chosenAt$1': [proposer$0$leader$0$0; proposer$1$chosenAt$1$0; proposer$1$chosenAt$1$1], 'proposer$1$promise$1': [proposer$1$promise$1$0, proposer$1$promise$1$1]}

	identical_single_classes: {'proposer$0$leader$0; proposer$1$chosenAt$1; proposer$1$chosenAt$1': proposer$0$leader$0$0; proposer$1$chosenAt$1$0; proposer$1$chosenAt$1$1}

	identical_multi_classes: {'proposer$1$promise$1': [proposer$1$promise$1$0, proposer$1$promise$1$1]}

	sort: acceptor

	identical_classes: {'acceptor$0$member$0; acceptor$0$member$0; acceptor$1$didNotPromise$0; acceptor$1$promise$0; acceptor$1$promise$0': [acceptor$0$member$0$0; acceptor$0$member$0$1; acceptor$1$didNotPromise$0$0; acceptor$1$promise$0$0; acceptor$1$promise$0$1]}

	identical_single_classes: {'acceptor$0$member$0; acceptor$0$member$0; acceptor$1$didNotPromise$0; acceptor$1$promise$0; acceptor$1$promise$0': acceptor$0$member$0$0; acceptor$0$member$0$1; acceptor$1$didNotPromise$0$0; acceptor$1$promise$0$0; acceptor$1$promise$0$1}

	identical_multi_classes: {}


---------- QInference: _set_sort_to_quantifier_mode ----------

quantifier mode: quorum: QuantifierMode.forall

quantifier mode: proposer: QuantifierMode.forall_exists

quantifier mode: acceptor: QuantifierMode.forall


---------- QInference: _set_constraint_mode ----------

constraint mode: ConstraintMode.no_merge


---------- QFormula: _set_qvars ----------

forall_qvars: {Var('ACCEPTOR0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Var('QUORUM1', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), Var('PROPOSER1', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))), Var('QUORUM0', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')))}

exists_qvars: {Var('PROPOSER0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))}


---------- QFormula: _set_signed_func_name_to_args ----------

signed_func_name2args: {'1$chosenAt': [[Var('QUORUM0', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), Var('PROPOSER1', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))], [Var('QUORUM1', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), Var('PROPOSER1', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))]], '1$didNotPromise': [[Var('ACCEPTOR0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')))]], '0$leader': [[Var('PROPOSER1', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))]], '1$promise': [[Var('ACCEPTOR0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Var('PROPOSER0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))], [Var('ACCEPTOR0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Var('PROPOSER0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))]], '0$member': [[Var('ACCEPTOR0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Var('QUORUM0', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')))], [Var('ACCEPTOR0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Var('QUORUM1', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')))]]}


---------- QFormula: _set_qterms ----------

qterms: ['member(ACCEPTOR0,QUORUM0)', '~didNotPromise(ACCEPTOR0)', '~chosenAt(QUORUM0,PROPOSER1)', 'leader(PROPOSER1)', '~promise(ACCEPTOR0,PROPOSER0)', 'member(ACCEPTOR0,QUORUM1)', '~chosenAt(QUORUM1,PROPOSER1)']


---------- QFormula: get_qclause ----------

qclause: forall PROPOSER1,QUORUM1,QUORUM0,ACCEPTOR0. ~member(ACCEPTOR0,QUORUM0) | didNotPromise(ACCEPTOR0) | chosenAt(QUORUM0,PROPOSER1) | ~leader(PROPOSER1) | ~member(ACCEPTOR0,QUORUM1) | chosenAt(QUORUM1,PROPOSER1) | (exists PROPOSER0. (promise(ACCEPTOR0,PROPOSER0) & PROPOSER0 ~= PROPOSER1)) | QUORUM0 = QUORUM1


=== Prime Orbit 42 =====================
size : 36
num_suborbits: 1
654 (*) : --0---0--00----0-----1---0-
654     : ['promise(acceptor2,proposer0)', '~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~promise(acceptor0,proposer0)', '~start(proposer1)']
655     : -0----0--00----0-----1----0
655     : ['promise(acceptor2,proposer0)', '~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~promise(acceptor0,proposer0)', '~start(proposer2)']
656     : --0----0-00-----0-----1-0--
656     : ['promise(acceptor2,proposer1)', '~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~promise(acceptor0,proposer1)', '~start(proposer0)']
657     : 0------0-00-----0-----1---0
657     : ['promise(acceptor2,proposer1)', '~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~promise(acceptor0,proposer1)', '~start(proposer2)']
658     : -0------000------0-----10--
658     : ['promise(acceptor2,proposer2)', '~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~promise(acceptor0,proposer2)', '~start(proposer0)']
659     : 0-------000------0-----1-0-
659     : ['promise(acceptor2,proposer2)', '~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~promise(acceptor0,proposer2)', '~start(proposer1)']
660     : -----00--0-0---0--1------0-
660     : ['promise(acceptor1,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor2)', '~promise(acceptor0,proposer0)', '~start(proposer1)']
661     : ----0-0--0-0---0--1-------0
661     : ['promise(acceptor1,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor2)', '~promise(acceptor0,proposer0)', '~start(proposer2)']
662     : -----0-0-0-0----0--1----0--
662     : ['promise(acceptor1,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor2)', '~promise(acceptor0,proposer1)', '~start(proposer0)']
663     : ---0---0-0-0----0--1------0
663     : ['promise(acceptor1,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor2)', '~promise(acceptor0,proposer1)', '~start(proposer2)']
664     : ----0---00-0-----0--1---0--
664     : ['promise(acceptor1,proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor2)', '~promise(acceptor0,proposer2)', '~start(proposer0)']
665     : ---0----00-0-----0--1----0-
665     : ['promise(acceptor1,proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor2)', '~promise(acceptor0,proposer2)', '~start(proposer1)']
666     : --00-----00-------0--1---0-
666     : ['promise(acceptor2,proposer0)', '~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~promise(acceptor1,proposer0)', '~start(proposer1)']
667     : -0-0-----00-------0--1----0
667     : ['promise(acceptor2,proposer0)', '~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~promise(acceptor1,proposer0)', '~start(proposer2)']
668     : --0-0----00--------0--1-0--
668     : ['promise(acceptor2,proposer1)', '~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~promise(acceptor1,proposer1)', '~start(proposer0)']
669     : 0---0----00--------0--1---0
669     : ['promise(acceptor2,proposer1)', '~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~promise(acceptor1,proposer1)', '~start(proposer2)']
670     : -0---0---00---------0--10--
670     : ['promise(acceptor2,proposer2)', '~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~promise(acceptor1,proposer2)', '~start(proposer0)']
671     : 0----0---00---------0--1-0-
671     : ['promise(acceptor2,proposer2)', '~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~promise(acceptor1,proposer2)', '~start(proposer1)']
672     : ---0----0-00---1--0------0-
672     : ['promise(acceptor0,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor1,proposer0)', '~start(proposer1)']
673     : ---0---0--00---1--0-------0
673     : ['promise(acceptor0,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor1,proposer0)', '~start(proposer2)']
674     : ----0---0-00----1--0----0--
674     : ['promise(acceptor0,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor1,proposer1)', '~start(proposer0)']
675     : ----0-0---00----1--0------0
675     : ['promise(acceptor0,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor1,proposer1)', '~start(proposer2)']
676     : -----0-0--00-----1--0---0--
676     : ['promise(acceptor0,proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor1,proposer2)', '~start(proposer0)']
677     : -----00---00-----1--0----0-
677     : ['promise(acceptor0,proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor1,proposer2)', '~start(proposer1)']
678     : 0----0---0-0------1--0---0-
678     : ['promise(acceptor1,proposer0)', '~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor2)', '~promise(acceptor2,proposer0)', '~start(proposer1)']
679     : 0---0----0-0------1--0----0
679     : ['promise(acceptor1,proposer0)', '~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor2)', '~promise(acceptor2,proposer0)', '~start(proposer2)']
680     : -0---0---0-0-------1--0-0--
680     : ['promise(acceptor1,proposer1)', '~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor2)', '~promise(acceptor2,proposer1)', '~start(proposer0)']
681     : -0-0-----0-0-------1--0---0
681     : ['promise(acceptor1,proposer1)', '~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor2)', '~promise(acceptor2,proposer1)', '~start(proposer2)']
682     : --0-0----0-0--------1--00--
682     : ['promise(acceptor1,proposer2)', '~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor2)', '~promise(acceptor2,proposer2)', '~start(proposer0)']
683     : --00-----0-0--------1--0-0-
683     : ['promise(acceptor1,proposer2)', '~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor2)', '~promise(acceptor2,proposer2)', '~start(proposer1)']
684     : 0-------0-00---1-----0---0-
684     : ['promise(acceptor0,proposer0)', '~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor2,proposer0)', '~start(proposer1)']
685     : 0------0--00---1-----0----0
685     : ['promise(acceptor0,proposer0)', '~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor2,proposer0)', '~start(proposer2)']
686     : -0------0-00----1-----0-0--
686     : ['promise(acceptor0,proposer1)', '~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor2,proposer1)', '~start(proposer0)']
687     : -0----0---00----1-----0---0
687     : ['promise(acceptor0,proposer1)', '~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor2,proposer1)', '~start(proposer2)']
688     : --0----0--00-----1-----00--
688     : ['promise(acceptor0,proposer2)', '~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor2,proposer2)', '~start(proposer0)']
689     : --0---0---00-----1-----0-0-
689     : ['promise(acceptor0,proposer2)', '~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor2,proposer2)', '~start(proposer1)']
num_forall :   0
num_exists :   0
num_literals : 0
quantified form : None
qcost : 0




---------- QPrime ----------


---------- ConstArgBinding ----------

terms: ['~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~promise(acceptor0,proposer0)', 'promise(acceptor2,proposer0)', '~start(proposer1)', 'member(acceptor0,quorum__acceptor0_acceptor1)', 'member(acceptor1,quorum__acceptor0_acceptor1)', '~member(acceptor2,quorum__acceptor0_acceptor1)', '~member(acceptor0,quorum__acceptor1_acceptor2)', 'member(acceptor1,quorum__acceptor1_acceptor2)', 'member(acceptor2,quorum__acceptor1_acceptor2)']

sign_func_name2args: {'1$chosenAt': [(Const('quorum__acceptor0_acceptor1', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), Const('proposer2', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))), (Const('quorum__acceptor1_acceptor2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), Const('proposer0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))))], '1$didNotPromise': [(Const('acceptor0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))),), (Const('acceptor1', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))),)], '1$promise': [(Const('acceptor0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Const('proposer0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))))], '0$promise': [(Const('acceptor2', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Const('proposer0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))))], '1$start': [(Const('proposer1', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))),)], '0$member': [(Const('acceptor0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Const('quorum__acceptor0_acceptor1', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')))), (Const('acceptor1', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Const('quorum__acceptor0_acceptor1', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')))), (Const('acceptor1', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Const('quorum__acceptor1_acceptor2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')))), (Const('acceptor2', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Const('quorum__acceptor1_acceptor2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))))], '1$member': [(Const('acceptor2', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Const('quorum__acceptor0_acceptor1', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')))), (Const('acceptor0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Const('quorum__acceptor1_acceptor2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))))]}

const2sigs: {Const('quorum__acceptor0_acceptor1', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))): [quorum$1$chosenAt$0$0, quorum$0$member$1$0, quorum$0$member$1$1, quorum$1$member$1$0], Const('proposer2', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))): [proposer$1$chosenAt$1$0], Const('quorum__acceptor1_acceptor2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))): [quorum$1$chosenAt$0$1, quorum$0$member$1$2, quorum$0$member$1$3, quorum$1$member$1$1], Const('proposer0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))): [proposer$1$chosenAt$1$1, proposer$1$promise$1$0, proposer$0$promise$1$0], Const('acceptor0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))): [acceptor$1$didNotPromise$0$0, acceptor$1$promise$0$0, acceptor$0$member$0$0, acceptor$1$member$0$1], Const('acceptor1', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))): [acceptor$1$didNotPromise$0$1, acceptor$0$member$0$1, acceptor$0$member$0$2], Const('acceptor2', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))): [acceptor$0$promise$0$0, acceptor$0$member$0$3, acceptor$1$member$0$0], Const('proposer1', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))): [proposer$1$start$0$0]}

sig2const: {'quorum$1$chosenAt$0$0': Const('quorum__acceptor0_acceptor1', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), 'proposer$1$chosenAt$1$0': Const('proposer2', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))), 'quorum$1$chosenAt$0$1': Const('quorum__acceptor1_acceptor2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), 'proposer$1$chosenAt$1$1': Const('proposer0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))), 'acceptor$1$didNotPromise$0$0': Const('acceptor0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), 'acceptor$1$didNotPromise$0$1': Const('acceptor1', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), 'acceptor$1$promise$0$0': Const('acceptor0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), 'proposer$1$promise$1$0': Const('proposer0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))), 'acceptor$0$promise$0$0': Const('acceptor2', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), 'proposer$0$promise$1$0': Const('proposer0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))), 'proposer$1$start$0$0': Const('proposer1', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))), 'acceptor$0$member$0$0': Const('acceptor0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), 'quorum$0$member$1$0': Const('quorum__acceptor0_acceptor1', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), 'acceptor$0$member$0$1': Const('acceptor1', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), 'quorum$0$member$1$1': Const('quorum__acceptor0_acceptor1', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), 'acceptor$0$member$0$2': Const('acceptor1', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), 'quorum$0$member$1$2': Const('quorum__acceptor1_acceptor2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), 'acceptor$0$member$0$3': Const('acceptor2', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), 'quorum$0$member$1$3': Const('quorum__acceptor1_acceptor2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), 'acceptor$1$member$0$0': Const('acceptor2', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), 'quorum$1$member$1$0': Const('quorum__acceptor0_acceptor1', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), 'acceptor$1$member$0$1': Const('acceptor0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), 'quorum$1$member$1$1': Const('quorum__acceptor1_acceptor2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')))}


---------- ArgPartition ----------

sort2class_sigs: {EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')): [quorum$0$member$1$0; quorum$0$member$1$1; quorum$1$chosenAt$0$0; quorum$1$member$1$0, quorum$0$member$1$2; quorum$0$member$1$3; quorum$1$chosenAt$0$1; quorum$1$member$1$1], EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')): [proposer$0$promise$1$0; proposer$1$chosenAt$1$1; proposer$1$promise$1$0, proposer$1$chosenAt$1$0, proposer$1$start$0$0], EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')): [acceptor$0$member$0$0; acceptor$1$didNotPromise$0$0; acceptor$1$member$0$1; acceptor$1$promise$0$0, acceptor$0$member$0$1; acceptor$0$member$0$2; acceptor$1$didNotPromise$0$1, acceptor$0$member$0$3; acceptor$0$promise$0$0; acceptor$1$member$0$0]}

sort2part_sig: {EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')): quorum$0$member$1$0; quorum$0$member$1$1; quorum$1$chosenAt$0$0; quorum$1$member$1$0 | quorum$0$member$1$2; quorum$0$member$1$3; quorum$1$chosenAt$0$1; quorum$1$member$1$1, EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')): proposer$0$promise$1$0; proposer$1$chosenAt$1$1; proposer$1$promise$1$0 | proposer$1$chosenAt$1$0 | proposer$1$start$0$0, EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')): acceptor$0$member$0$0; acceptor$1$didNotPromise$0$0; acceptor$1$member$0$1; acceptor$1$promise$0$0 | acceptor$0$member$0$1; acceptor$0$member$0$2; acceptor$1$didNotPromise$0$1 | acceptor$0$member$0$3; acceptor$0$promise$0$0; acceptor$1$member$0$0}

part_sig: ('acceptor$0$member$0$0; acceptor$1$didNotPromise$0$0; acceptor$1$member$0$1; acceptor$1$promise$0$0 | acceptor$0$member$0$1; acceptor$0$member$0$2; acceptor$1$didNotPromise$0$1 | acceptor$0$member$0$3; acceptor$0$promise$0$0; acceptor$1$member$0$0', 'proposer$0$promise$1$0; proposer$1$chosenAt$1$1; proposer$1$promise$1$0 | proposer$1$chosenAt$1$0 | proposer$1$start$0$0', 'quorum$0$member$1$0; quorum$0$member$1$1; quorum$1$chosenAt$0$0; quorum$1$member$1$0 | quorum$0$member$1$2; quorum$0$member$1$3; quorum$1$chosenAt$0$1; quorum$1$member$1$1')


---------- SigGenerator ----------

terms:  ['~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~promise(acceptor0,proposer0)', 'promise(acceptor2,proposer0)', '~start(proposer1)', 'member(acceptor0,quorum__acceptor0_acceptor1)', 'member(acceptor1,quorum__acceptor0_acceptor1)', '~member(acceptor2,quorum__acceptor0_acceptor1)', '~member(acceptor0,quorum__acceptor1_acceptor2)', 'member(acceptor1,quorum__acceptor1_acceptor2)', 'member(acceptor2,quorum__acceptor1_acceptor2)']

func_name2symbol:  {'chosenAt': Const('chosenAt', FunctionSort(EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')), EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')), BooleanSort())), 'didNotPromise': Const('didNotPromise', FunctionSort(EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')), BooleanSort())), 'promise': Const('promise', FunctionSort(EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')), EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')), BooleanSort())), 'start': Const('start', FunctionSort(EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')), BooleanSort())), 'member': Const('member', FunctionSort(EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')), EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')), BooleanSort()))}

func_name2args_sort:  {'chosenAt': (EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')), EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))), 'didNotPromise': (EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')),), 'promise': (EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')), EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))), 'start': (EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')),), 'member': (EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')), EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')))}

sign_func_name2count:  {'1$chosenAt': 2, '1$didNotPromise': 2, '1$promise': 1, '0$promise': 1, '1$start': 1, '0$member': 4, '1$member': 2}


---------- ProductArgPartition ----------

sort2class_sigs: {EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')): [quorum$0$member$1$0; quorum$0$member$1$1; quorum$1$chosenAt$0$0; quorum$1$member$1$0, quorum$0$member$1$2; quorum$0$member$1$3; quorum$1$chosenAt$0$1; quorum$1$member$1$1], EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')): [proposer$0$promise$1$0; proposer$1$chosenAt$1$1; proposer$1$promise$1$0, proposer$1$chosenAt$1$0, proposer$1$start$0$0], EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')): [acceptor$0$member$0$0; acceptor$1$didNotPromise$0$0; acceptor$1$member$0$1; acceptor$1$promise$0$0, acceptor$0$member$0$1; acceptor$0$member$0$2; acceptor$1$didNotPromise$0$1, acceptor$0$member$0$3; acceptor$0$promise$0$0; acceptor$1$member$0$0]}

sort2part_sig: {EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')): quorum$0$member$1$0; quorum$0$member$1$1; quorum$1$chosenAt$0$0; quorum$1$member$1$0 | quorum$0$member$1$2; quorum$0$member$1$3; quorum$1$chosenAt$0$1; quorum$1$member$1$1, EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')): proposer$0$promise$1$0; proposer$1$chosenAt$1$1; proposer$1$promise$1$0 | proposer$1$chosenAt$1$0 | proposer$1$start$0$0, EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')): acceptor$0$member$0$0; acceptor$1$didNotPromise$0$0; acceptor$1$member$0$1; acceptor$1$promise$0$0 | acceptor$0$member$0$1; acceptor$0$member$0$2; acceptor$1$didNotPromise$0$1 | acceptor$0$member$0$3; acceptor$0$promise$0$0; acceptor$1$member$0$0}

	sort: quorum

	identical_classes: {'quorum$0$member$1; quorum$0$member$1; quorum$1$chosenAt$0; quorum$1$member$1': [quorum$0$member$1$0; quorum$0$member$1$1; quorum$1$chosenAt$0$0; quorum$1$member$1$0, quorum$0$member$1$2; quorum$0$member$1$3; quorum$1$chosenAt$0$1; quorum$1$member$1$1]}

	identical_single_classes: {}

	identical_multi_classes: {'quorum$0$member$1; quorum$0$member$1; quorum$1$chosenAt$0; quorum$1$member$1': [quorum$0$member$1$0, quorum$0$member$1$1, quorum$1$chosenAt$0$0, quorum$1$member$1$0, quorum$0$member$1$2, quorum$0$member$1$3, quorum$1$chosenAt$0$1, quorum$1$member$1$1]}

	sort: proposer

	identical_classes: {'proposer$0$promise$1; proposer$1$chosenAt$1; proposer$1$promise$1': [proposer$0$promise$1$0; proposer$1$chosenAt$1$1; proposer$1$promise$1$0], 'proposer$1$chosenAt$1': [proposer$1$chosenAt$1$0], 'proposer$1$start$0': [proposer$1$start$0$0]}

	identical_single_classes: {'proposer$0$promise$1; proposer$1$chosenAt$1; proposer$1$promise$1': proposer$0$promise$1$0; proposer$1$chosenAt$1$1; proposer$1$promise$1$0, 'proposer$1$chosenAt$1': proposer$1$chosenAt$1$0, 'proposer$1$start$0': proposer$1$start$0$0}

	identical_multi_classes: {}

	sort: acceptor

	identical_classes: {'acceptor$0$member$0; acceptor$1$didNotPromise$0; acceptor$1$member$0; acceptor$1$promise$0': [acceptor$0$member$0$0; acceptor$1$didNotPromise$0$0; acceptor$1$member$0$1; acceptor$1$promise$0$0], 'acceptor$0$member$0; acceptor$0$member$0; acceptor$1$didNotPromise$0': [acceptor$0$member$0$1; acceptor$0$member$0$2; acceptor$1$didNotPromise$0$1], 'acceptor$0$member$0; acceptor$0$promise$0; acceptor$1$member$0': [acceptor$0$member$0$3; acceptor$0$promise$0$0; acceptor$1$member$0$0]}

	identical_single_classes: {'acceptor$0$member$0; acceptor$1$didNotPromise$0; acceptor$1$member$0; acceptor$1$promise$0': acceptor$0$member$0$0; acceptor$1$didNotPromise$0$0; acceptor$1$member$0$1; acceptor$1$promise$0$0, 'acceptor$0$member$0; acceptor$0$member$0; acceptor$1$didNotPromise$0': acceptor$0$member$0$1; acceptor$0$member$0$2; acceptor$1$didNotPromise$0$1, 'acceptor$0$member$0; acceptor$0$promise$0; acceptor$1$member$0': acceptor$0$member$0$3; acceptor$0$promise$0$0; acceptor$1$member$0$0}

	identical_multi_classes: {}


---------- QInference: _set_sort_to_quantifier_mode ----------

quantifier mode: quorum: QuantifierMode.forall

quantifier mode: proposer: QuantifierMode.forall

quantifier mode: acceptor: QuantifierMode.forall


---------- QInference: _set_constraint_mode ----------

constraint mode: ConstraintMode.no_merge


---------- QFormula: _set_qvars ----------

forall_qvars: {Var('ACCEPTOR0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Var('PROPOSER2', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))), Var('QUORUM0', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), Var('PROPOSER0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))), Var('ACCEPTOR1', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Var('PROPOSER1', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))), Var('QUORUM1', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), Var('ACCEPTOR2', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')))}

exists_qvars: set()


---------- QFormula: _set_signed_func_name_to_args ----------

signed_func_name2args: {'1$chosenAt': [[Var('QUORUM0', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), Var('PROPOSER1', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))], [Var('QUORUM1', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), Var('PROPOSER0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))]], '1$didNotPromise': [[Var('ACCEPTOR0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')))], [Var('ACCEPTOR1', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')))]], '1$promise': [[Var('ACCEPTOR0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Var('PROPOSER0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))]], '0$promise': [[Var('ACCEPTOR2', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Var('PROPOSER0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))]], '1$start': [[Var('PROPOSER2', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))]], '0$member': [[Var('ACCEPTOR0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Var('QUORUM0', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')))], [Var('ACCEPTOR1', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Var('QUORUM0', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')))], [Var('ACCEPTOR1', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Var('QUORUM1', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')))], [Var('ACCEPTOR2', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Var('QUORUM1', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')))]], '1$member': [[Var('ACCEPTOR2', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Var('QUORUM0', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')))], [Var('ACCEPTOR0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Var('QUORUM1', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')))]]}


---------- QFormula: _set_qterms ----------

qterms: ['~chosenAt(QUORUM1,PROPOSER0)', 'member(ACCEPTOR0,QUORUM0)', '~member(ACCEPTOR2,QUORUM0)', '~didNotPromise(ACCEPTOR0)', '~start(PROPOSER2)', '~didNotPromise(ACCEPTOR1)', '~member(ACCEPTOR0,QUORUM1)', '~chosenAt(QUORUM0,PROPOSER1)', 'member(ACCEPTOR1,QUORUM1)', '~promise(ACCEPTOR0,PROPOSER0)', 'member(ACCEPTOR2,QUORUM1)', 'member(ACCEPTOR1,QUORUM0)', 'promise(ACCEPTOR2,PROPOSER0)']


---------- QFormula: get_qclause ----------

qclause: forall QUORUM1,ACCEPTOR2,ACCEPTOR1,PROPOSER0,PROPOSER2,ACCEPTOR0,PROPOSER1,QUORUM0. chosenAt(QUORUM1,PROPOSER0) | ~member(ACCEPTOR0,QUORUM0) | member(ACCEPTOR2,QUORUM0) | didNotPromise(ACCEPTOR0) | start(PROPOSER2) | didNotPromise(ACCEPTOR1) | member(ACCEPTOR0,QUORUM1) | chosenAt(QUORUM0,PROPOSER1) | ~member(ACCEPTOR1,QUORUM1) | promise(ACCEPTOR0,PROPOSER0) | ~member(ACCEPTOR2,QUORUM1) | ~member(ACCEPTOR1,QUORUM0) | ~promise(ACCEPTOR2,PROPOSER0) | (PROPOSER1 = PROPOSER2 | ACCEPTOR1 = ACCEPTOR2 | PROPOSER0 = PROPOSER1 | ACCEPTOR0 = ACCEPTOR2 | QUORUM0 = QUORUM1 | PROPOSER0 = PROPOSER2 | ACCEPTOR0 = ACCEPTOR1)


=== Prime Orbit 43 =====================
size : 18
num_suborbits: 1
690 (*) : --00--0--00----------1---0-
690     : ['promise(acceptor2,proposer0)', '~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~start(proposer1)']
691     : -0-0--0--00----------1----0
691     : ['promise(acceptor2,proposer0)', '~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~start(proposer2)']
692     : --0-0--0-00-----------1-0--
692     : ['promise(acceptor2,proposer1)', '~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~start(proposer0)']
693     : 0---0--0-00-----------1---0
693     : ['promise(acceptor2,proposer1)', '~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~start(proposer2)']
694     : -0---0--000------------10--
694     : ['promise(acceptor2,proposer2)', '~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~start(proposer0)']
695     : 0----0--000------------1-0-
695     : ['promise(acceptor2,proposer2)', '~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~start(proposer1)']
696     : 0----00--0-0------1------0-
696     : ['promise(acceptor1,proposer0)', '~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor2)', '~start(proposer1)']
697     : 0---0-0--0-0------1-------0
697     : ['promise(acceptor1,proposer0)', '~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor2)', '~start(proposer2)']
698     : -0---0-0-0-0-------1----0--
698     : ['promise(acceptor1,proposer1)', '~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor2)', '~start(proposer0)']
699     : -0-0---0-0-0-------1------0
699     : ['promise(acceptor1,proposer1)', '~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor2)', '~start(proposer2)']
700     : --0-0---00-0--------1---0--
700     : ['promise(acceptor1,proposer2)', '~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor2)', '~start(proposer0)']
701     : --00----00-0--------1----0-
701     : ['promise(acceptor1,proposer2)', '~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor2)', '~start(proposer1)']
702     : 0--0----0-00---1---------0-
702     : ['promise(acceptor0,proposer0)', '~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~start(proposer1)']
703     : 0--0---0--00---1----------0
703     : ['promise(acceptor0,proposer0)', '~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~start(proposer2)']
704     : -0--0---0-00----1-------0--
704     : ['promise(acceptor0,proposer1)', '~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~start(proposer0)']
705     : -0--0-0---00----1---------0
705     : ['promise(acceptor0,proposer1)', '~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~start(proposer2)']
706     : --0--0-0--00-----1------0--
706     : ['promise(acceptor0,proposer2)', '~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~start(proposer0)']
707     : --0--00---00-----1-------0-
707     : ['promise(acceptor0,proposer2)', '~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~start(proposer1)']
num_forall :   0
num_exists :   0
num_literals : 0
quantified form : None
qcost : 0




---------- QPrime ----------


---------- ConstArgBinding ----------

terms: ['~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', 'promise(acceptor2,proposer0)', '~start(proposer1)', 'member(acceptor0,quorum__acceptor0_acceptor1)', 'member(acceptor1,quorum__acceptor0_acceptor1)', '~member(acceptor2,quorum__acceptor0_acceptor1)', 'member(acceptor0,quorum__acceptor0_acceptor2)', '~member(acceptor1,quorum__acceptor0_acceptor2)', 'member(acceptor2,quorum__acceptor0_acceptor2)', '~member(acceptor0,quorum__acceptor1_acceptor2)', 'member(acceptor1,quorum__acceptor1_acceptor2)', 'member(acceptor2,quorum__acceptor1_acceptor2)']

sign_func_name2args: {'1$chosenAt': [(Const('quorum__acceptor0_acceptor1', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), Const('proposer2', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))), (Const('quorum__acceptor0_acceptor2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), Const('proposer0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))), (Const('quorum__acceptor1_acceptor2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), Const('proposer0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))))], '1$didNotPromise': [(Const('acceptor0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))),), (Const('acceptor1', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))),)], '0$promise': [(Const('acceptor2', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Const('proposer0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))))], '1$start': [(Const('proposer1', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))),)], '0$member': [(Const('acceptor0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Const('quorum__acceptor0_acceptor1', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')))), (Const('acceptor1', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Const('quorum__acceptor0_acceptor1', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')))), (Const('acceptor0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Const('quorum__acceptor0_acceptor2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')))), (Const('acceptor2', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Const('quorum__acceptor0_acceptor2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')))), (Const('acceptor1', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Const('quorum__acceptor1_acceptor2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')))), (Const('acceptor2', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Const('quorum__acceptor1_acceptor2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))))], '1$member': [(Const('acceptor2', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Const('quorum__acceptor0_acceptor1', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')))), (Const('acceptor1', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Const('quorum__acceptor0_acceptor2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')))), (Const('acceptor0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Const('quorum__acceptor1_acceptor2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))))]}

const2sigs: {Const('quorum__acceptor0_acceptor1', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))): [quorum$1$chosenAt$0$0, quorum$0$member$1$0, quorum$0$member$1$1, quorum$1$member$1$0], Const('proposer2', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))): [proposer$1$chosenAt$1$0], Const('quorum__acceptor0_acceptor2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))): [quorum$1$chosenAt$0$1, quorum$0$member$1$2, quorum$0$member$1$3, quorum$1$member$1$1], Const('proposer0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))): [proposer$1$chosenAt$1$1, proposer$1$chosenAt$1$2, proposer$0$promise$1$0], Const('quorum__acceptor1_acceptor2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))): [quorum$1$chosenAt$0$2, quorum$0$member$1$4, quorum$0$member$1$5, quorum$1$member$1$2], Const('acceptor0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))): [acceptor$1$didNotPromise$0$0, acceptor$0$member$0$0, acceptor$0$member$0$2, acceptor$1$member$0$2], Const('acceptor1', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))): [acceptor$1$didNotPromise$0$1, acceptor$0$member$0$1, acceptor$0$member$0$4, acceptor$1$member$0$1], Const('acceptor2', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))): [acceptor$0$promise$0$0, acceptor$0$member$0$3, acceptor$0$member$0$5, acceptor$1$member$0$0], Const('proposer1', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))): [proposer$1$start$0$0]}

sig2const: {'quorum$1$chosenAt$0$0': Const('quorum__acceptor0_acceptor1', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), 'proposer$1$chosenAt$1$0': Const('proposer2', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))), 'quorum$1$chosenAt$0$1': Const('quorum__acceptor0_acceptor2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), 'proposer$1$chosenAt$1$1': Const('proposer0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))), 'quorum$1$chosenAt$0$2': Const('quorum__acceptor1_acceptor2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), 'proposer$1$chosenAt$1$2': Const('proposer0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))), 'acceptor$1$didNotPromise$0$0': Const('acceptor0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), 'acceptor$1$didNotPromise$0$1': Const('acceptor1', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), 'acceptor$0$promise$0$0': Const('acceptor2', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), 'proposer$0$promise$1$0': Const('proposer0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))), 'proposer$1$start$0$0': Const('proposer1', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))), 'acceptor$0$member$0$0': Const('acceptor0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), 'quorum$0$member$1$0': Const('quorum__acceptor0_acceptor1', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), 'acceptor$0$member$0$1': Const('acceptor1', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), 'quorum$0$member$1$1': Const('quorum__acceptor0_acceptor1', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), 'acceptor$0$member$0$2': Const('acceptor0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), 'quorum$0$member$1$2': Const('quorum__acceptor0_acceptor2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), 'acceptor$0$member$0$3': Const('acceptor2', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), 'quorum$0$member$1$3': Const('quorum__acceptor0_acceptor2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), 'acceptor$0$member$0$4': Const('acceptor1', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), 'quorum$0$member$1$4': Const('quorum__acceptor1_acceptor2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), 'acceptor$0$member$0$5': Const('acceptor2', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), 'quorum$0$member$1$5': Const('quorum__acceptor1_acceptor2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), 'acceptor$1$member$0$0': Const('acceptor2', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), 'quorum$1$member$1$0': Const('quorum__acceptor0_acceptor1', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), 'acceptor$1$member$0$1': Const('acceptor1', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), 'quorum$1$member$1$1': Const('quorum__acceptor0_acceptor2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), 'acceptor$1$member$0$2': Const('acceptor0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), 'quorum$1$member$1$2': Const('quorum__acceptor1_acceptor2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')))}


---------- ArgPartition ----------

sort2class_sigs: {EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')): [quorum$0$member$1$0; quorum$0$member$1$1; quorum$1$chosenAt$0$0; quorum$1$member$1$0, quorum$0$member$1$2; quorum$0$member$1$3; quorum$1$chosenAt$0$1; quorum$1$member$1$1, quorum$0$member$1$4; quorum$0$member$1$5; quorum$1$chosenAt$0$2; quorum$1$member$1$2], EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')): [proposer$0$promise$1$0; proposer$1$chosenAt$1$1; proposer$1$chosenAt$1$2, proposer$1$chosenAt$1$0, proposer$1$start$0$0], EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')): [acceptor$0$member$0$0; acceptor$0$member$0$2; acceptor$1$didNotPromise$0$0; acceptor$1$member$0$2, acceptor$0$member$0$1; acceptor$0$member$0$4; acceptor$1$didNotPromise$0$1; acceptor$1$member$0$1, acceptor$0$member$0$3; acceptor$0$member$0$5; acceptor$0$promise$0$0; acceptor$1$member$0$0]}

sort2part_sig: {EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')): quorum$0$member$1$0; quorum$0$member$1$1; quorum$1$chosenAt$0$0; quorum$1$member$1$0 | quorum$0$member$1$2; quorum$0$member$1$3; quorum$1$chosenAt$0$1; quorum$1$member$1$1 | quorum$0$member$1$4; quorum$0$member$1$5; quorum$1$chosenAt$0$2; quorum$1$member$1$2, EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')): proposer$0$promise$1$0; proposer$1$chosenAt$1$1; proposer$1$chosenAt$1$2 | proposer$1$chosenAt$1$0 | proposer$1$start$0$0, EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')): acceptor$0$member$0$0; acceptor$0$member$0$2; acceptor$1$didNotPromise$0$0; acceptor$1$member$0$2 | acceptor$0$member$0$1; acceptor$0$member$0$4; acceptor$1$didNotPromise$0$1; acceptor$1$member$0$1 | acceptor$0$member$0$3; acceptor$0$member$0$5; acceptor$0$promise$0$0; acceptor$1$member$0$0}

part_sig: ('acceptor$0$member$0$0; acceptor$0$member$0$2; acceptor$1$didNotPromise$0$0; acceptor$1$member$0$2 | acceptor$0$member$0$1; acceptor$0$member$0$4; acceptor$1$didNotPromise$0$1; acceptor$1$member$0$1 | acceptor$0$member$0$3; acceptor$0$member$0$5; acceptor$0$promise$0$0; acceptor$1$member$0$0', 'proposer$0$promise$1$0; proposer$1$chosenAt$1$1; proposer$1$chosenAt$1$2 | proposer$1$chosenAt$1$0 | proposer$1$start$0$0', 'quorum$0$member$1$0; quorum$0$member$1$1; quorum$1$chosenAt$0$0; quorum$1$member$1$0 | quorum$0$member$1$2; quorum$0$member$1$3; quorum$1$chosenAt$0$1; quorum$1$member$1$1 | quorum$0$member$1$4; quorum$0$member$1$5; quorum$1$chosenAt$0$2; quorum$1$member$1$2')


---------- SigGenerator ----------

terms:  ['~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', 'promise(acceptor2,proposer0)', '~start(proposer1)', 'member(acceptor0,quorum__acceptor0_acceptor1)', 'member(acceptor1,quorum__acceptor0_acceptor1)', '~member(acceptor2,quorum__acceptor0_acceptor1)', 'member(acceptor0,quorum__acceptor0_acceptor2)', '~member(acceptor1,quorum__acceptor0_acceptor2)', 'member(acceptor2,quorum__acceptor0_acceptor2)', '~member(acceptor0,quorum__acceptor1_acceptor2)', 'member(acceptor1,quorum__acceptor1_acceptor2)', 'member(acceptor2,quorum__acceptor1_acceptor2)']

func_name2symbol:  {'chosenAt': Const('chosenAt', FunctionSort(EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')), EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')), BooleanSort())), 'didNotPromise': Const('didNotPromise', FunctionSort(EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')), BooleanSort())), 'promise': Const('promise', FunctionSort(EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')), EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')), BooleanSort())), 'start': Const('start', FunctionSort(EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')), BooleanSort())), 'member': Const('member', FunctionSort(EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')), EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')), BooleanSort()))}

func_name2args_sort:  {'chosenAt': (EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')), EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))), 'didNotPromise': (EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')),), 'promise': (EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')), EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))), 'start': (EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')),), 'member': (EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')), EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')))}

sign_func_name2count:  {'1$chosenAt': 3, '1$didNotPromise': 2, '0$promise': 1, '1$start': 1, '0$member': 6, '1$member': 3}


---------- ProductArgPartition ----------

sort2class_sigs: {EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')): [quorum$0$member$1$0; quorum$0$member$1$1; quorum$1$chosenAt$0$0; quorum$1$member$1$0, quorum$0$member$1$2; quorum$0$member$1$3; quorum$1$chosenAt$0$1; quorum$1$member$1$1, quorum$0$member$1$4; quorum$0$member$1$5; quorum$1$chosenAt$0$2; quorum$1$member$1$2], EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')): [proposer$0$promise$1$0; proposer$1$chosenAt$1$1; proposer$1$chosenAt$1$2, proposer$1$chosenAt$1$0, proposer$1$start$0$0], EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')): [acceptor$0$member$0$0; acceptor$0$member$0$2; acceptor$1$didNotPromise$0$0; acceptor$1$member$0$2, acceptor$0$member$0$1; acceptor$0$member$0$4; acceptor$1$didNotPromise$0$1; acceptor$1$member$0$1, acceptor$0$member$0$3; acceptor$0$member$0$5; acceptor$0$promise$0$0; acceptor$1$member$0$0]}

sort2part_sig: {EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')): quorum$0$member$1$0; quorum$0$member$1$1; quorum$1$chosenAt$0$0; quorum$1$member$1$0 | quorum$0$member$1$2; quorum$0$member$1$3; quorum$1$chosenAt$0$1; quorum$1$member$1$1 | quorum$0$member$1$4; quorum$0$member$1$5; quorum$1$chosenAt$0$2; quorum$1$member$1$2, EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')): proposer$0$promise$1$0; proposer$1$chosenAt$1$1; proposer$1$chosenAt$1$2 | proposer$1$chosenAt$1$0 | proposer$1$start$0$0, EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')): acceptor$0$member$0$0; acceptor$0$member$0$2; acceptor$1$didNotPromise$0$0; acceptor$1$member$0$2 | acceptor$0$member$0$1; acceptor$0$member$0$4; acceptor$1$didNotPromise$0$1; acceptor$1$member$0$1 | acceptor$0$member$0$3; acceptor$0$member$0$5; acceptor$0$promise$0$0; acceptor$1$member$0$0}

	sort: quorum

	identical_classes: {'quorum$0$member$1; quorum$0$member$1; quorum$1$chosenAt$0; quorum$1$member$1': [quorum$0$member$1$0; quorum$0$member$1$1; quorum$1$chosenAt$0$0; quorum$1$member$1$0, quorum$0$member$1$2; quorum$0$member$1$3; quorum$1$chosenAt$0$1; quorum$1$member$1$1, quorum$0$member$1$4; quorum$0$member$1$5; quorum$1$chosenAt$0$2; quorum$1$member$1$2]}

	identical_single_classes: {}

	identical_multi_classes: {'quorum$0$member$1; quorum$0$member$1; quorum$1$chosenAt$0; quorum$1$member$1': [quorum$0$member$1$0, quorum$0$member$1$1, quorum$1$chosenAt$0$0, quorum$1$member$1$0, quorum$0$member$1$2, quorum$0$member$1$3, quorum$1$chosenAt$0$1, quorum$1$member$1$1, quorum$0$member$1$4, quorum$0$member$1$5, quorum$1$chosenAt$0$2, quorum$1$member$1$2]}

	sort: proposer

	identical_classes: {'proposer$0$promise$1; proposer$1$chosenAt$1; proposer$1$chosenAt$1': [proposer$0$promise$1$0; proposer$1$chosenAt$1$1; proposer$1$chosenAt$1$2], 'proposer$1$chosenAt$1': [proposer$1$chosenAt$1$0], 'proposer$1$start$0': [proposer$1$start$0$0]}

	identical_single_classes: {'proposer$0$promise$1; proposer$1$chosenAt$1; proposer$1$chosenAt$1': proposer$0$promise$1$0; proposer$1$chosenAt$1$1; proposer$1$chosenAt$1$2, 'proposer$1$chosenAt$1': proposer$1$chosenAt$1$0, 'proposer$1$start$0': proposer$1$start$0$0}

	identical_multi_classes: {}

	sort: acceptor

	identical_classes: {'acceptor$0$member$0; acceptor$0$member$0; acceptor$1$didNotPromise$0; acceptor$1$member$0': [acceptor$0$member$0$0; acceptor$0$member$0$2; acceptor$1$didNotPromise$0$0; acceptor$1$member$0$2, acceptor$0$member$0$1; acceptor$0$member$0$4; acceptor$1$didNotPromise$0$1; acceptor$1$member$0$1], 'acceptor$0$member$0; acceptor$0$member$0; acceptor$0$promise$0; acceptor$1$member$0': [acceptor$0$member$0$3; acceptor$0$member$0$5; acceptor$0$promise$0$0; acceptor$1$member$0$0]}

	identical_single_classes: {'acceptor$0$member$0; acceptor$0$member$0; acceptor$0$promise$0; acceptor$1$member$0': acceptor$0$member$0$3; acceptor$0$member$0$5; acceptor$0$promise$0$0; acceptor$1$member$0$0}

	identical_multi_classes: {'acceptor$0$member$0; acceptor$0$member$0; acceptor$1$didNotPromise$0; acceptor$1$member$0': [acceptor$0$member$0$0, acceptor$0$member$0$2, acceptor$1$didNotPromise$0$0, acceptor$1$member$0$2, acceptor$0$member$0$1, acceptor$0$member$0$4, acceptor$1$didNotPromise$0$1, acceptor$1$member$0$1]}


---------- QInference: _set_sort_to_quantifier_mode ----------

quantifier mode: quorum: QuantifierMode.forall

quantifier mode: proposer: QuantifierMode.forall

quantifier mode: acceptor: QuantifierMode.forall


---------- QInference: _set_constraint_mode ----------

constraint mode: ConstraintMode.no_merge


---------- QFormula: _set_qvars ----------

forall_qvars: {Var('ACCEPTOR0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Var('PROPOSER2', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))), Var('QUORUM0', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), Var('QUORUM2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), Var('PROPOSER0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))), Var('ACCEPTOR1', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Var('PROPOSER1', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))), Var('QUORUM1', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), Var('ACCEPTOR2', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')))}

exists_qvars: set()


---------- QFormula: _set_signed_func_name_to_args ----------

signed_func_name2args: {'1$chosenAt': [[Var('QUORUM0', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), Var('PROPOSER1', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))], [Var('QUORUM1', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), Var('PROPOSER0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))], [Var('QUORUM2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), Var('PROPOSER0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))]], '1$didNotPromise': [[Var('ACCEPTOR0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')))], [Var('ACCEPTOR1', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')))]], '0$promise': [[Var('ACCEPTOR2', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Var('PROPOSER0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))]], '1$start': [[Var('PROPOSER2', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))]], '0$member': [[Var('ACCEPTOR0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Var('QUORUM0', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')))], [Var('ACCEPTOR1', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Var('QUORUM0', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')))], [Var('ACCEPTOR0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Var('QUORUM1', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')))], [Var('ACCEPTOR2', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Var('QUORUM1', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')))], [Var('ACCEPTOR1', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Var('QUORUM2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')))], [Var('ACCEPTOR2', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Var('QUORUM2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')))]], '1$member': [[Var('ACCEPTOR2', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Var('QUORUM0', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')))], [Var('ACCEPTOR1', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Var('QUORUM1', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')))], [Var('ACCEPTOR0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Var('QUORUM2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')))]]}


---------- QFormula: _set_qterms ----------

qterms: ['~chosenAt(QUORUM1,PROPOSER0)', 'member(ACCEPTOR0,QUORUM0)', 'member(ACCEPTOR1,QUORUM0)', 'member(ACCEPTOR1,QUORUM2)', '~member(ACCEPTOR2,QUORUM0)', 'member(ACCEPTOR2,QUORUM2)', '~didNotPromise(ACCEPTOR0)', '~start(PROPOSER2)', '~member(ACCEPTOR1,QUORUM1)', '~didNotPromise(ACCEPTOR1)', '~chosenAt(QUORUM0,PROPOSER1)', 'promise(ACCEPTOR2,PROPOSER0)', 'member(ACCEPTOR2,QUORUM1)', 'member(ACCEPTOR0,QUORUM1)', '~chosenAt(QUORUM2,PROPOSER0)', '~member(ACCEPTOR0,QUORUM2)']


---------- QFormula: get_qclause ----------

qclause: forall QUORUM2,QUORUM1,ACCEPTOR2,ACCEPTOR1,PROPOSER0,PROPOSER2,ACCEPTOR0,PROPOSER1,QUORUM0. chosenAt(QUORUM1,PROPOSER0) | ~member(ACCEPTOR0,QUORUM0) | ~member(ACCEPTOR1,QUORUM0) | ~member(ACCEPTOR1,QUORUM2) | member(ACCEPTOR2,QUORUM0) | ~member(ACCEPTOR2,QUORUM2) | didNotPromise(ACCEPTOR0) | start(PROPOSER2) | member(ACCEPTOR1,QUORUM1) | didNotPromise(ACCEPTOR1) | chosenAt(QUORUM0,PROPOSER1) | ~promise(ACCEPTOR2,PROPOSER0) | ~member(ACCEPTOR2,QUORUM1) | ~member(ACCEPTOR0,QUORUM1) | chosenAt(QUORUM2,PROPOSER0) | member(ACCEPTOR0,QUORUM2) | (QUORUM0 = QUORUM2 | PROPOSER1 = PROPOSER2 | QUORUM1 = QUORUM2 | ACCEPTOR1 = ACCEPTOR2 | PROPOSER0 = PROPOSER1 | ACCEPTOR0 = ACCEPTOR2 | QUORUM0 = QUORUM1 | PROPOSER0 = PROPOSER2 | ACCEPTOR0 = ACCEPTOR1)


=== Prime Orbit 45 =====================
size : 18
num_suborbits: 1
717 (*) : 0----00--000--------0----0-
717     : ['~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor1,proposer2)', '~start(proposer1)']
718     : 0---0-0--000-------0------0
718     : ['~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor1,proposer1)', '~start(proposer2)']
719     : -0---0-0-000--------0---0--
719     : ['~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor1,proposer2)', '~start(proposer0)']
720     : -0-0---0-000------0-------0
720     : ['~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor1,proposer0)', '~start(proposer2)']
721     : --0-0---0000-------0----0--
721     : ['~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor1,proposer1)', '~start(proposer0)']
722     : --00----0000------0------0-
722     : ['~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor1,proposer0)', '~start(proposer1)']
723     : --00--0--000-----------0-0-
723     : ['~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor2,proposer2)', '~start(proposer1)']
724     : -0-0--0--000----------0---0
724     : ['~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor2,proposer1)', '~start(proposer2)']
725     : --0-0--0-000-----------00--
725     : ['~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor2,proposer2)', '~start(proposer0)']
726     : 0---0--0-000---------0----0
726     : ['~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor2,proposer0)', '~start(proposer2)']
727     : -0---0--0000----------0-0--
727     : ['~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor2,proposer1)', '~start(proposer0)']
728     : 0----0--0000---------0---0-
728     : ['~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor2,proposer0)', '~start(proposer1)']
729     : 0--0----0000-----0-------0-
729     : ['~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor0,proposer2)', '~start(proposer1)']
730     : 0--0---0-000----0---------0
730     : ['~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor0,proposer1)', '~start(proposer2)']
731     : -0--0---0000-----0------0--
731     : ['~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor0,proposer2)', '~start(proposer0)']
732     : -0--0-0--000---0----------0
732     : ['~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor0,proposer0)', '~start(proposer2)']
733     : --0--0-0-000----0-------0--
733     : ['~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor0,proposer1)', '~start(proposer0)']
734     : --0--00--000---0---------0-
734     : ['~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor0,proposer0)', '~start(proposer1)']
num_forall :   0
num_exists :   0
num_literals : 0
quantified form : None
qcost : 0




---------- QPrime ----------


---------- ConstArgBinding ----------

terms: ['~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor1,proposer2)', '~start(proposer1)', 'member(acceptor0,quorum__acceptor0_acceptor1)', 'member(acceptor1,quorum__acceptor0_acceptor1)', '~member(acceptor2,quorum__acceptor0_acceptor1)', '~member(acceptor0,quorum__acceptor1_acceptor2)', 'member(acceptor1,quorum__acceptor1_acceptor2)', 'member(acceptor2,quorum__acceptor1_acceptor2)', 'member(acceptor0,quorum__acceptor0_acceptor2)', '~member(acceptor1,quorum__acceptor0_acceptor2)', 'member(acceptor2,quorum__acceptor0_acceptor2)']

sign_func_name2args: {'1$chosenAt': [(Const('quorum__acceptor0_acceptor1', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), Const('proposer0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))), (Const('quorum__acceptor0_acceptor2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), Const('proposer2', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))), (Const('quorum__acceptor1_acceptor2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), Const('proposer0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))))], '1$didNotPromise': [(Const('acceptor0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))),), (Const('acceptor1', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))),), (Const('acceptor2', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))),)], '1$promise': [(Const('acceptor1', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Const('proposer2', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))))], '1$start': [(Const('proposer1', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))),)], '0$member': [(Const('acceptor0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Const('quorum__acceptor0_acceptor1', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')))), (Const('acceptor1', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Const('quorum__acceptor0_acceptor1', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')))), (Const('acceptor1', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Const('quorum__acceptor1_acceptor2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')))), (Const('acceptor2', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Const('quorum__acceptor1_acceptor2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')))), (Const('acceptor0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Const('quorum__acceptor0_acceptor2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')))), (Const('acceptor2', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Const('quorum__acceptor0_acceptor2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))))], '1$member': [(Const('acceptor2', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Const('quorum__acceptor0_acceptor1', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')))), (Const('acceptor0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Const('quorum__acceptor1_acceptor2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')))), (Const('acceptor1', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Const('quorum__acceptor0_acceptor2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))))]}

const2sigs: {Const('quorum__acceptor0_acceptor1', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))): [quorum$1$chosenAt$0$0, quorum$0$member$1$0, quorum$0$member$1$1, quorum$1$member$1$0], Const('proposer0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))): [proposer$1$chosenAt$1$0, proposer$1$chosenAt$1$2], Const('quorum__acceptor0_acceptor2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))): [quorum$1$chosenAt$0$1, quorum$0$member$1$4, quorum$0$member$1$5, quorum$1$member$1$2], Const('proposer2', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))): [proposer$1$chosenAt$1$1, proposer$1$promise$1$0], Const('quorum__acceptor1_acceptor2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))): [quorum$1$chosenAt$0$2, quorum$0$member$1$2, quorum$0$member$1$3, quorum$1$member$1$1], Const('acceptor0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))): [acceptor$1$didNotPromise$0$0, acceptor$0$member$0$0, acceptor$0$member$0$4, acceptor$1$member$0$1], Const('acceptor1', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))): [acceptor$1$didNotPromise$0$1, acceptor$1$promise$0$0, acceptor$0$member$0$1, acceptor$0$member$0$2, acceptor$1$member$0$2], Const('acceptor2', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))): [acceptor$1$didNotPromise$0$2, acceptor$0$member$0$3, acceptor$0$member$0$5, acceptor$1$member$0$0], Const('proposer1', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))): [proposer$1$start$0$0]}

sig2const: {'quorum$1$chosenAt$0$0': Const('quorum__acceptor0_acceptor1', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), 'proposer$1$chosenAt$1$0': Const('proposer0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))), 'quorum$1$chosenAt$0$1': Const('quorum__acceptor0_acceptor2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), 'proposer$1$chosenAt$1$1': Const('proposer2', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))), 'quorum$1$chosenAt$0$2': Const('quorum__acceptor1_acceptor2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), 'proposer$1$chosenAt$1$2': Const('proposer0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))), 'acceptor$1$didNotPromise$0$0': Const('acceptor0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), 'acceptor$1$didNotPromise$0$1': Const('acceptor1', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), 'acceptor$1$didNotPromise$0$2': Const('acceptor2', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), 'acceptor$1$promise$0$0': Const('acceptor1', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), 'proposer$1$promise$1$0': Const('proposer2', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))), 'proposer$1$start$0$0': Const('proposer1', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))), 'acceptor$0$member$0$0': Const('acceptor0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), 'quorum$0$member$1$0': Const('quorum__acceptor0_acceptor1', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), 'acceptor$0$member$0$1': Const('acceptor1', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), 'quorum$0$member$1$1': Const('quorum__acceptor0_acceptor1', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), 'acceptor$0$member$0$2': Const('acceptor1', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), 'quorum$0$member$1$2': Const('quorum__acceptor1_acceptor2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), 'acceptor$0$member$0$3': Const('acceptor2', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), 'quorum$0$member$1$3': Const('quorum__acceptor1_acceptor2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), 'acceptor$0$member$0$4': Const('acceptor0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), 'quorum$0$member$1$4': Const('quorum__acceptor0_acceptor2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), 'acceptor$0$member$0$5': Const('acceptor2', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), 'quorum$0$member$1$5': Const('quorum__acceptor0_acceptor2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), 'acceptor$1$member$0$0': Const('acceptor2', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), 'quorum$1$member$1$0': Const('quorum__acceptor0_acceptor1', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), 'acceptor$1$member$0$1': Const('acceptor0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), 'quorum$1$member$1$1': Const('quorum__acceptor1_acceptor2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), 'acceptor$1$member$0$2': Const('acceptor1', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), 'quorum$1$member$1$2': Const('quorum__acceptor0_acceptor2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')))}


---------- ArgPartition ----------

sort2class_sigs: {EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')): [quorum$0$member$1$0; quorum$0$member$1$1; quorum$1$chosenAt$0$0; quorum$1$member$1$0, quorum$0$member$1$2; quorum$0$member$1$3; quorum$1$chosenAt$0$2; quorum$1$member$1$1, quorum$0$member$1$4; quorum$0$member$1$5; quorum$1$chosenAt$0$1; quorum$1$member$1$2], EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')): [proposer$1$chosenAt$1$0; proposer$1$chosenAt$1$2, proposer$1$chosenAt$1$1; proposer$1$promise$1$0, proposer$1$start$0$0], EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')): [acceptor$0$member$0$0; acceptor$0$member$0$4; acceptor$1$didNotPromise$0$0; acceptor$1$member$0$1, acceptor$0$member$0$1; acceptor$0$member$0$2; acceptor$1$didNotPromise$0$1; acceptor$1$member$0$2; acceptor$1$promise$0$0, acceptor$0$member$0$3; acceptor$0$member$0$5; acceptor$1$didNotPromise$0$2; acceptor$1$member$0$0]}

sort2part_sig: {EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')): quorum$0$member$1$0; quorum$0$member$1$1; quorum$1$chosenAt$0$0; quorum$1$member$1$0 | quorum$0$member$1$2; quorum$0$member$1$3; quorum$1$chosenAt$0$2; quorum$1$member$1$1 | quorum$0$member$1$4; quorum$0$member$1$5; quorum$1$chosenAt$0$1; quorum$1$member$1$2, EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')): proposer$1$chosenAt$1$0; proposer$1$chosenAt$1$2 | proposer$1$chosenAt$1$1; proposer$1$promise$1$0 | proposer$1$start$0$0, EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')): acceptor$0$member$0$0; acceptor$0$member$0$4; acceptor$1$didNotPromise$0$0; acceptor$1$member$0$1 | acceptor$0$member$0$1; acceptor$0$member$0$2; acceptor$1$didNotPromise$0$1; acceptor$1$member$0$2; acceptor$1$promise$0$0 | acceptor$0$member$0$3; acceptor$0$member$0$5; acceptor$1$didNotPromise$0$2; acceptor$1$member$0$0}

part_sig: ('acceptor$0$member$0$0; acceptor$0$member$0$4; acceptor$1$didNotPromise$0$0; acceptor$1$member$0$1 | acceptor$0$member$0$1; acceptor$0$member$0$2; acceptor$1$didNotPromise$0$1; acceptor$1$member$0$2; acceptor$1$promise$0$0 | acceptor$0$member$0$3; acceptor$0$member$0$5; acceptor$1$didNotPromise$0$2; acceptor$1$member$0$0', 'proposer$1$chosenAt$1$0; proposer$1$chosenAt$1$2 | proposer$1$chosenAt$1$1; proposer$1$promise$1$0 | proposer$1$start$0$0', 'quorum$0$member$1$0; quorum$0$member$1$1; quorum$1$chosenAt$0$0; quorum$1$member$1$0 | quorum$0$member$1$2; quorum$0$member$1$3; quorum$1$chosenAt$0$2; quorum$1$member$1$1 | quorum$0$member$1$4; quorum$0$member$1$5; quorum$1$chosenAt$0$1; quorum$1$member$1$2')


---------- SigGenerator ----------

terms:  ['~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor1,proposer2)', '~start(proposer1)', 'member(acceptor0,quorum__acceptor0_acceptor1)', 'member(acceptor1,quorum__acceptor0_acceptor1)', '~member(acceptor2,quorum__acceptor0_acceptor1)', '~member(acceptor0,quorum__acceptor1_acceptor2)', 'member(acceptor1,quorum__acceptor1_acceptor2)', 'member(acceptor2,quorum__acceptor1_acceptor2)', 'member(acceptor0,quorum__acceptor0_acceptor2)', '~member(acceptor1,quorum__acceptor0_acceptor2)', 'member(acceptor2,quorum__acceptor0_acceptor2)']

func_name2symbol:  {'chosenAt': Const('chosenAt', FunctionSort(EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')), EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')), BooleanSort())), 'didNotPromise': Const('didNotPromise', FunctionSort(EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')), BooleanSort())), 'promise': Const('promise', FunctionSort(EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')), EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')), BooleanSort())), 'start': Const('start', FunctionSort(EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')), BooleanSort())), 'member': Const('member', FunctionSort(EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')), EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')), BooleanSort()))}

func_name2args_sort:  {'chosenAt': (EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')), EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))), 'didNotPromise': (EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')),), 'promise': (EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')), EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))), 'start': (EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')),), 'member': (EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')), EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')))}

sign_func_name2count:  {'1$chosenAt': 3, '1$didNotPromise': 3, '1$promise': 1, '1$start': 1, '0$member': 6, '1$member': 3}


---------- ProductArgPartition ----------

sort2class_sigs: {EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')): [quorum$0$member$1$0; quorum$0$member$1$1; quorum$1$chosenAt$0$0; quorum$1$member$1$0, quorum$0$member$1$2; quorum$0$member$1$3; quorum$1$chosenAt$0$2; quorum$1$member$1$1, quorum$0$member$1$4; quorum$0$member$1$5; quorum$1$chosenAt$0$1; quorum$1$member$1$2], EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')): [proposer$1$chosenAt$1$0; proposer$1$chosenAt$1$2, proposer$1$chosenAt$1$1; proposer$1$promise$1$0, proposer$1$start$0$0], EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')): [acceptor$0$member$0$0; acceptor$0$member$0$4; acceptor$1$didNotPromise$0$0; acceptor$1$member$0$1, acceptor$0$member$0$1; acceptor$0$member$0$2; acceptor$1$didNotPromise$0$1; acceptor$1$member$0$2; acceptor$1$promise$0$0, acceptor$0$member$0$3; acceptor$0$member$0$5; acceptor$1$didNotPromise$0$2; acceptor$1$member$0$0]}

sort2part_sig: {EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')): quorum$0$member$1$0; quorum$0$member$1$1; quorum$1$chosenAt$0$0; quorum$1$member$1$0 | quorum$0$member$1$2; quorum$0$member$1$3; quorum$1$chosenAt$0$2; quorum$1$member$1$1 | quorum$0$member$1$4; quorum$0$member$1$5; quorum$1$chosenAt$0$1; quorum$1$member$1$2, EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')): proposer$1$chosenAt$1$0; proposer$1$chosenAt$1$2 | proposer$1$chosenAt$1$1; proposer$1$promise$1$0 | proposer$1$start$0$0, EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')): acceptor$0$member$0$0; acceptor$0$member$0$4; acceptor$1$didNotPromise$0$0; acceptor$1$member$0$1 | acceptor$0$member$0$1; acceptor$0$member$0$2; acceptor$1$didNotPromise$0$1; acceptor$1$member$0$2; acceptor$1$promise$0$0 | acceptor$0$member$0$3; acceptor$0$member$0$5; acceptor$1$didNotPromise$0$2; acceptor$1$member$0$0}

	sort: quorum

	identical_classes: {'quorum$0$member$1; quorum$0$member$1; quorum$1$chosenAt$0; quorum$1$member$1': [quorum$0$member$1$0; quorum$0$member$1$1; quorum$1$chosenAt$0$0; quorum$1$member$1$0, quorum$0$member$1$2; quorum$0$member$1$3; quorum$1$chosenAt$0$2; quorum$1$member$1$1, quorum$0$member$1$4; quorum$0$member$1$5; quorum$1$chosenAt$0$1; quorum$1$member$1$2]}

	identical_single_classes: {}

	identical_multi_classes: {'quorum$0$member$1; quorum$0$member$1; quorum$1$chosenAt$0; quorum$1$member$1': [quorum$0$member$1$0, quorum$0$member$1$1, quorum$1$chosenAt$0$0, quorum$1$member$1$0, quorum$0$member$1$2, quorum$0$member$1$3, quorum$1$chosenAt$0$2, quorum$1$member$1$1, quorum$0$member$1$4, quorum$0$member$1$5, quorum$1$chosenAt$0$1, quorum$1$member$1$2]}

	sort: proposer

	identical_classes: {'proposer$1$chosenAt$1; proposer$1$chosenAt$1': [proposer$1$chosenAt$1$0; proposer$1$chosenAt$1$2], 'proposer$1$chosenAt$1; proposer$1$promise$1': [proposer$1$chosenAt$1$1; proposer$1$promise$1$0], 'proposer$1$start$0': [proposer$1$start$0$0]}

	identical_single_classes: {'proposer$1$chosenAt$1; proposer$1$chosenAt$1': proposer$1$chosenAt$1$0; proposer$1$chosenAt$1$2, 'proposer$1$chosenAt$1; proposer$1$promise$1': proposer$1$chosenAt$1$1; proposer$1$promise$1$0, 'proposer$1$start$0': proposer$1$start$0$0}

	identical_multi_classes: {}

	sort: acceptor

	identical_classes: {'acceptor$0$member$0; acceptor$0$member$0; acceptor$1$didNotPromise$0; acceptor$1$member$0': [acceptor$0$member$0$0; acceptor$0$member$0$4; acceptor$1$didNotPromise$0$0; acceptor$1$member$0$1, acceptor$0$member$0$3; acceptor$0$member$0$5; acceptor$1$didNotPromise$0$2; acceptor$1$member$0$0], 'acceptor$0$member$0; acceptor$0$member$0; acceptor$1$didNotPromise$0; acceptor$1$member$0; acceptor$1$promise$0': [acceptor$0$member$0$1; acceptor$0$member$0$2; acceptor$1$didNotPromise$0$1; acceptor$1$member$0$2; acceptor$1$promise$0$0]}

	identical_single_classes: {'acceptor$0$member$0; acceptor$0$member$0; acceptor$1$didNotPromise$0; acceptor$1$member$0; acceptor$1$promise$0': acceptor$0$member$0$1; acceptor$0$member$0$2; acceptor$1$didNotPromise$0$1; acceptor$1$member$0$2; acceptor$1$promise$0$0}

	identical_multi_classes: {'acceptor$0$member$0; acceptor$0$member$0; acceptor$1$didNotPromise$0; acceptor$1$member$0': [acceptor$0$member$0$0, acceptor$0$member$0$4, acceptor$1$didNotPromise$0$0, acceptor$1$member$0$1, acceptor$0$member$0$3, acceptor$0$member$0$5, acceptor$1$didNotPromise$0$2, acceptor$1$member$0$0]}


---------- QInference: _set_sort_to_quantifier_mode ----------

quantifier mode: quorum: QuantifierMode.forall

quantifier mode: proposer: QuantifierMode.forall

quantifier mode: acceptor: QuantifierMode.forall


---------- QInference: _set_constraint_mode ----------

constraint mode: ConstraintMode.no_merge


---------- QFormula: _set_qvars ----------

forall_qvars: {Var('ACCEPTOR0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Var('PROPOSER2', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))), Var('QUORUM0', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), Var('QUORUM2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), Var('PROPOSER0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))), Var('ACCEPTOR1', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Var('PROPOSER1', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))), Var('QUORUM1', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), Var('ACCEPTOR2', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')))}

exists_qvars: set()


---------- QFormula: _set_signed_func_name_to_args ----------

signed_func_name2args: {'1$chosenAt': [[Var('QUORUM0', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), Var('PROPOSER0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))], [Var('QUORUM2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), Var('PROPOSER1', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))], [Var('QUORUM1', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), Var('PROPOSER0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))]], '1$didNotPromise': [[Var('ACCEPTOR0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')))], [Var('ACCEPTOR1', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')))], [Var('ACCEPTOR2', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')))]], '1$promise': [[Var('ACCEPTOR1', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Var('PROPOSER1', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))]], '1$start': [[Var('PROPOSER2', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))]], '0$member': [[Var('ACCEPTOR0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Var('QUORUM0', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')))], [Var('ACCEPTOR1', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Var('QUORUM0', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')))], [Var('ACCEPTOR1', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Var('QUORUM1', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')))], [Var('ACCEPTOR2', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Var('QUORUM1', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')))], [Var('ACCEPTOR0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Var('QUORUM2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')))], [Var('ACCEPTOR2', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Var('QUORUM2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')))]], '1$member': [[Var('ACCEPTOR2', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Var('QUORUM0', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')))], [Var('ACCEPTOR0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Var('QUORUM1', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')))], [Var('ACCEPTOR1', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Var('QUORUM2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')))]]}


---------- QFormula: _set_qterms ----------

qterms: ['~chosenAt(QUORUM1,PROPOSER0)', 'member(ACCEPTOR0,QUORUM0)', '~didNotPromise(ACCEPTOR2)', '~promise(ACCEPTOR1,PROPOSER1)', '~member(ACCEPTOR2,QUORUM0)', 'member(ACCEPTOR2,QUORUM2)', 'member(ACCEPTOR0,QUORUM2)', '~didNotPromise(ACCEPTOR0)', '~start(PROPOSER2)', '~didNotPromise(ACCEPTOR1)', '~member(ACCEPTOR0,QUORUM1)', '~chosenAt(QUORUM2,PROPOSER1)', 'member(ACCEPTOR1,QUORUM1)', '~chosenAt(QUORUM0,PROPOSER0)', '~member(ACCEPTOR1,QUORUM2)', 'member(ACCEPTOR2,QUORUM1)', 'member(ACCEPTOR1,QUORUM0)']


---------- QFormula: get_qclause ----------

qclause: forall QUORUM2,QUORUM1,ACCEPTOR2,ACCEPTOR1,PROPOSER0,PROPOSER2,ACCEPTOR0,PROPOSER1,QUORUM0. chosenAt(QUORUM1,PROPOSER0) | ~member(ACCEPTOR0,QUORUM0) | didNotPromise(ACCEPTOR2) | promise(ACCEPTOR1,PROPOSER1) | member(ACCEPTOR2,QUORUM0) | ~member(ACCEPTOR2,QUORUM2) | ~member(ACCEPTOR0,QUORUM2) | didNotPromise(ACCEPTOR0) | start(PROPOSER2) | didNotPromise(ACCEPTOR1) | member(ACCEPTOR0,QUORUM1) | chosenAt(QUORUM2,PROPOSER1) | ~member(ACCEPTOR1,QUORUM1) | chosenAt(QUORUM0,PROPOSER0) | member(ACCEPTOR1,QUORUM2) | ~member(ACCEPTOR2,QUORUM1) | ~member(ACCEPTOR1,QUORUM0) | (QUORUM0 = QUORUM2 | PROPOSER1 = PROPOSER2 | QUORUM1 = QUORUM2 | ACCEPTOR1 = ACCEPTOR2 | PROPOSER0 = PROPOSER1 | ACCEPTOR0 = ACCEPTOR2 | QUORUM0 = QUORUM1 | PROPOSER0 = PROPOSER2 | ACCEPTOR0 = ACCEPTOR1)


=== Prime Orbit 46 =====================
size : 18
num_suborbits: 1
735 (*) : ---0----0000-----00------0-
735     : ['~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor0,proposer2)', '~promise(acceptor1,proposer0)', '~start(proposer1)']
736     : ---0---0-000----0-0-------0
736     : ['~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor0,proposer1)', '~promise(acceptor1,proposer0)', '~start(proposer2)']
737     : ----0---0000-----0-0----0--
737     : ['~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor0,proposer2)', '~promise(acceptor1,proposer1)', '~start(proposer0)']
738     : ----0-0--000---0---0------0
738     : ['~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor0,proposer0)', '~promise(acceptor1,proposer1)', '~start(proposer2)']
739     : -----0-0-000----0---0---0--
739     : ['~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor0,proposer1)', '~promise(acceptor1,proposer2)', '~start(proposer0)']
740     : -----00--000---0----0----0-
740     : ['~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor0,proposer0)', '~promise(acceptor1,proposer2)', '~start(proposer1)']
741     : 0-------0000-----0---0---0-
741     : ['~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor0,proposer2)', '~promise(acceptor2,proposer0)', '~start(proposer1)']
742     : 0------0-000----0----0----0
742     : ['~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor0,proposer1)', '~promise(acceptor2,proposer0)', '~start(proposer2)']
743     : -0------0000-----0----0-0--
743     : ['~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor0,proposer2)', '~promise(acceptor2,proposer1)', '~start(proposer0)']
744     : -0----0--000---0------0---0
744     : ['~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor0,proposer0)', '~promise(acceptor2,proposer1)', '~start(proposer2)']
745     : --0----0-000----0------00--
745     : ['~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor0,proposer1)', '~promise(acceptor2,proposer2)', '~start(proposer0)']
746     : --0---0--000---0-------0-0-
746     : ['~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor0,proposer0)', '~promise(acceptor2,proposer2)', '~start(proposer1)']
747     : 0----0---000--------00---0-
747     : ['~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor1,proposer2)', '~promise(acceptor2,proposer0)', '~start(proposer1)']
748     : 0---0----000-------0-0----0
748     : ['~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor1,proposer1)', '~promise(acceptor2,proposer0)', '~start(proposer2)']
749     : -0---0---000--------0-0-0--
749     : ['~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor1,proposer2)', '~promise(acceptor2,proposer1)', '~start(proposer0)']
750     : -0-0-----000------0---0---0
750     : ['~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor1,proposer0)', '~promise(acceptor2,proposer1)', '~start(proposer2)']
751     : --0-0----000-------0---00--
751     : ['~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor1,proposer1)', '~promise(acceptor2,proposer2)', '~start(proposer0)']
752     : --00-----000------0----0-0-
752     : ['~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor1,proposer0)', '~promise(acceptor2,proposer2)', '~start(proposer1)']
num_forall :   0
num_exists :   0
num_literals : 0
quantified form : None
qcost : 0




---------- QPrime ----------


---------- ConstArgBinding ----------

terms: ['~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor0,proposer2)', '~promise(acceptor1,proposer0)', '~start(proposer1)', 'member(acceptor0,quorum__acceptor0_acceptor2)', '~member(acceptor1,quorum__acceptor0_acceptor2)', 'member(acceptor2,quorum__acceptor0_acceptor2)', '~member(acceptor0,quorum__acceptor1_acceptor2)', 'member(acceptor1,quorum__acceptor1_acceptor2)', 'member(acceptor2,quorum__acceptor1_acceptor2)']

sign_func_name2args: {'1$chosenAt': [(Const('quorum__acceptor0_acceptor2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), Const('proposer0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))), (Const('quorum__acceptor1_acceptor2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), Const('proposer2', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))))], '1$didNotPromise': [(Const('acceptor0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))),), (Const('acceptor1', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))),), (Const('acceptor2', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))),)], '1$promise': [(Const('acceptor0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Const('proposer2', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))), (Const('acceptor1', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Const('proposer0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))))], '1$start': [(Const('proposer1', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))),)], '0$member': [(Const('acceptor0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Const('quorum__acceptor0_acceptor2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')))), (Const('acceptor2', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Const('quorum__acceptor0_acceptor2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')))), (Const('acceptor1', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Const('quorum__acceptor1_acceptor2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')))), (Const('acceptor2', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Const('quorum__acceptor1_acceptor2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))))], '1$member': [(Const('acceptor1', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Const('quorum__acceptor0_acceptor2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')))), (Const('acceptor0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Const('quorum__acceptor1_acceptor2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))))]}

const2sigs: {Const('quorum__acceptor0_acceptor2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))): [quorum$1$chosenAt$0$0, quorum$0$member$1$0, quorum$0$member$1$1, quorum$1$member$1$0], Const('proposer0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))): [proposer$1$chosenAt$1$0, proposer$1$promise$1$1], Const('quorum__acceptor1_acceptor2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))): [quorum$1$chosenAt$0$1, quorum$0$member$1$2, quorum$0$member$1$3, quorum$1$member$1$1], Const('proposer2', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))): [proposer$1$chosenAt$1$1, proposer$1$promise$1$0], Const('acceptor0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))): [acceptor$1$didNotPromise$0$0, acceptor$1$promise$0$0, acceptor$0$member$0$0, acceptor$1$member$0$1], Const('acceptor1', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))): [acceptor$1$didNotPromise$0$1, acceptor$1$promise$0$1, acceptor$0$member$0$2, acceptor$1$member$0$0], Const('acceptor2', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))): [acceptor$1$didNotPromise$0$2, acceptor$0$member$0$1, acceptor$0$member$0$3], Const('proposer1', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))): [proposer$1$start$0$0]}

sig2const: {'quorum$1$chosenAt$0$0': Const('quorum__acceptor0_acceptor2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), 'proposer$1$chosenAt$1$0': Const('proposer0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))), 'quorum$1$chosenAt$0$1': Const('quorum__acceptor1_acceptor2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), 'proposer$1$chosenAt$1$1': Const('proposer2', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))), 'acceptor$1$didNotPromise$0$0': Const('acceptor0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), 'acceptor$1$didNotPromise$0$1': Const('acceptor1', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), 'acceptor$1$didNotPromise$0$2': Const('acceptor2', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), 'acceptor$1$promise$0$0': Const('acceptor0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), 'proposer$1$promise$1$0': Const('proposer2', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))), 'acceptor$1$promise$0$1': Const('acceptor1', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), 'proposer$1$promise$1$1': Const('proposer0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))), 'proposer$1$start$0$0': Const('proposer1', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))), 'acceptor$0$member$0$0': Const('acceptor0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), 'quorum$0$member$1$0': Const('quorum__acceptor0_acceptor2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), 'acceptor$0$member$0$1': Const('acceptor2', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), 'quorum$0$member$1$1': Const('quorum__acceptor0_acceptor2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), 'acceptor$0$member$0$2': Const('acceptor1', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), 'quorum$0$member$1$2': Const('quorum__acceptor1_acceptor2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), 'acceptor$0$member$0$3': Const('acceptor2', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), 'quorum$0$member$1$3': Const('quorum__acceptor1_acceptor2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), 'acceptor$1$member$0$0': Const('acceptor1', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), 'quorum$1$member$1$0': Const('quorum__acceptor0_acceptor2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), 'acceptor$1$member$0$1': Const('acceptor0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), 'quorum$1$member$1$1': Const('quorum__acceptor1_acceptor2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')))}


---------- ArgPartition ----------

sort2class_sigs: {EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')): [quorum$0$member$1$0; quorum$0$member$1$1; quorum$1$chosenAt$0$0; quorum$1$member$1$0, quorum$0$member$1$2; quorum$0$member$1$3; quorum$1$chosenAt$0$1; quorum$1$member$1$1], EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')): [proposer$1$chosenAt$1$0; proposer$1$promise$1$1, proposer$1$chosenAt$1$1; proposer$1$promise$1$0, proposer$1$start$0$0], EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')): [acceptor$0$member$0$0; acceptor$1$didNotPromise$0$0; acceptor$1$member$0$1; acceptor$1$promise$0$0, acceptor$0$member$0$1; acceptor$0$member$0$3; acceptor$1$didNotPromise$0$2, acceptor$0$member$0$2; acceptor$1$didNotPromise$0$1; acceptor$1$member$0$0; acceptor$1$promise$0$1]}

sort2part_sig: {EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')): quorum$0$member$1$0; quorum$0$member$1$1; quorum$1$chosenAt$0$0; quorum$1$member$1$0 | quorum$0$member$1$2; quorum$0$member$1$3; quorum$1$chosenAt$0$1; quorum$1$member$1$1, EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')): proposer$1$chosenAt$1$0; proposer$1$promise$1$1 | proposer$1$chosenAt$1$1; proposer$1$promise$1$0 | proposer$1$start$0$0, EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')): acceptor$0$member$0$0; acceptor$1$didNotPromise$0$0; acceptor$1$member$0$1; acceptor$1$promise$0$0 | acceptor$0$member$0$1; acceptor$0$member$0$3; acceptor$1$didNotPromise$0$2 | acceptor$0$member$0$2; acceptor$1$didNotPromise$0$1; acceptor$1$member$0$0; acceptor$1$promise$0$1}

part_sig: ('acceptor$0$member$0$0; acceptor$1$didNotPromise$0$0; acceptor$1$member$0$1; acceptor$1$promise$0$0 | acceptor$0$member$0$1; acceptor$0$member$0$3; acceptor$1$didNotPromise$0$2 | acceptor$0$member$0$2; acceptor$1$didNotPromise$0$1; acceptor$1$member$0$0; acceptor$1$promise$0$1', 'proposer$1$chosenAt$1$0; proposer$1$promise$1$1 | proposer$1$chosenAt$1$1; proposer$1$promise$1$0 | proposer$1$start$0$0', 'quorum$0$member$1$0; quorum$0$member$1$1; quorum$1$chosenAt$0$0; quorum$1$member$1$0 | quorum$0$member$1$2; quorum$0$member$1$3; quorum$1$chosenAt$0$1; quorum$1$member$1$1')


---------- SigGenerator ----------

terms:  ['~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor0,proposer2)', '~promise(acceptor1,proposer0)', '~start(proposer1)', 'member(acceptor0,quorum__acceptor0_acceptor2)', '~member(acceptor1,quorum__acceptor0_acceptor2)', 'member(acceptor2,quorum__acceptor0_acceptor2)', '~member(acceptor0,quorum__acceptor1_acceptor2)', 'member(acceptor1,quorum__acceptor1_acceptor2)', 'member(acceptor2,quorum__acceptor1_acceptor2)']

func_name2symbol:  {'chosenAt': Const('chosenAt', FunctionSort(EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')), EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')), BooleanSort())), 'didNotPromise': Const('didNotPromise', FunctionSort(EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')), BooleanSort())), 'promise': Const('promise', FunctionSort(EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')), EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')), BooleanSort())), 'start': Const('start', FunctionSort(EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')), BooleanSort())), 'member': Const('member', FunctionSort(EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')), EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')), BooleanSort()))}

func_name2args_sort:  {'chosenAt': (EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')), EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))), 'didNotPromise': (EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')),), 'promise': (EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')), EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))), 'start': (EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')),), 'member': (EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')), EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')))}

sign_func_name2count:  {'1$chosenAt': 2, '1$didNotPromise': 3, '1$promise': 2, '1$start': 1, '0$member': 4, '1$member': 2}


---------- ProductArgPartition ----------

sort2class_sigs: {EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')): [quorum$0$member$1$0; quorum$0$member$1$1; quorum$1$chosenAt$0$0; quorum$1$member$1$0, quorum$0$member$1$2; quorum$0$member$1$3; quorum$1$chosenAt$0$1; quorum$1$member$1$1], EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')): [proposer$1$chosenAt$1$0; proposer$1$promise$1$1, proposer$1$chosenAt$1$1; proposer$1$promise$1$0, proposer$1$start$0$0], EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')): [acceptor$0$member$0$0; acceptor$1$didNotPromise$0$0; acceptor$1$member$0$1; acceptor$1$promise$0$0, acceptor$0$member$0$1; acceptor$0$member$0$3; acceptor$1$didNotPromise$0$2, acceptor$0$member$0$2; acceptor$1$didNotPromise$0$1; acceptor$1$member$0$0; acceptor$1$promise$0$1]}

sort2part_sig: {EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')): quorum$0$member$1$0; quorum$0$member$1$1; quorum$1$chosenAt$0$0; quorum$1$member$1$0 | quorum$0$member$1$2; quorum$0$member$1$3; quorum$1$chosenAt$0$1; quorum$1$member$1$1, EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')): proposer$1$chosenAt$1$0; proposer$1$promise$1$1 | proposer$1$chosenAt$1$1; proposer$1$promise$1$0 | proposer$1$start$0$0, EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')): acceptor$0$member$0$0; acceptor$1$didNotPromise$0$0; acceptor$1$member$0$1; acceptor$1$promise$0$0 | acceptor$0$member$0$1; acceptor$0$member$0$3; acceptor$1$didNotPromise$0$2 | acceptor$0$member$0$2; acceptor$1$didNotPromise$0$1; acceptor$1$member$0$0; acceptor$1$promise$0$1}

	sort: quorum

	identical_classes: {'quorum$0$member$1; quorum$0$member$1; quorum$1$chosenAt$0; quorum$1$member$1': [quorum$0$member$1$0; quorum$0$member$1$1; quorum$1$chosenAt$0$0; quorum$1$member$1$0, quorum$0$member$1$2; quorum$0$member$1$3; quorum$1$chosenAt$0$1; quorum$1$member$1$1]}

	identical_single_classes: {}

	identical_multi_classes: {'quorum$0$member$1; quorum$0$member$1; quorum$1$chosenAt$0; quorum$1$member$1': [quorum$0$member$1$0, quorum$0$member$1$1, quorum$1$chosenAt$0$0, quorum$1$member$1$0, quorum$0$member$1$2, quorum$0$member$1$3, quorum$1$chosenAt$0$1, quorum$1$member$1$1]}

	sort: proposer

	identical_classes: {'proposer$1$chosenAt$1; proposer$1$promise$1': [proposer$1$chosenAt$1$0; proposer$1$promise$1$1, proposer$1$chosenAt$1$1; proposer$1$promise$1$0], 'proposer$1$start$0': [proposer$1$start$0$0]}

	identical_single_classes: {'proposer$1$start$0': proposer$1$start$0$0}

	identical_multi_classes: {'proposer$1$chosenAt$1; proposer$1$promise$1': [proposer$1$chosenAt$1$0, proposer$1$promise$1$1, proposer$1$chosenAt$1$1, proposer$1$promise$1$0]}

	sort: acceptor

	identical_classes: {'acceptor$0$member$0; acceptor$1$didNotPromise$0; acceptor$1$member$0; acceptor$1$promise$0': [acceptor$0$member$0$0; acceptor$1$didNotPromise$0$0; acceptor$1$member$0$1; acceptor$1$promise$0$0, acceptor$0$member$0$2; acceptor$1$didNotPromise$0$1; acceptor$1$member$0$0; acceptor$1$promise$0$1], 'acceptor$0$member$0; acceptor$0$member$0; acceptor$1$didNotPromise$0': [acceptor$0$member$0$1; acceptor$0$member$0$3; acceptor$1$didNotPromise$0$2]}

	identical_single_classes: {'acceptor$0$member$0; acceptor$0$member$0; acceptor$1$didNotPromise$0': acceptor$0$member$0$1; acceptor$0$member$0$3; acceptor$1$didNotPromise$0$2}

	identical_multi_classes: {'acceptor$0$member$0; acceptor$1$didNotPromise$0; acceptor$1$member$0; acceptor$1$promise$0': [acceptor$0$member$0$0, acceptor$1$didNotPromise$0$0, acceptor$1$member$0$1, acceptor$1$promise$0$0, acceptor$0$member$0$2, acceptor$1$didNotPromise$0$1, acceptor$1$member$0$0, acceptor$1$promise$0$1]}


---------- QInference: _set_sort_to_quantifier_mode ----------

quantifier mode: quorum: QuantifierMode.forall

quantifier mode: proposer: QuantifierMode.forall

quantifier mode: acceptor: QuantifierMode.forall


---------- QInference: _set_constraint_mode ----------

constraint mode: ConstraintMode.no_merge


---------- QFormula: _set_qvars ----------

forall_qvars: {Var('ACCEPTOR0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Var('PROPOSER2', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))), Var('QUORUM0', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), Var('PROPOSER0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))), Var('ACCEPTOR1', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Var('PROPOSER1', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))), Var('QUORUM1', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), Var('ACCEPTOR2', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')))}

exists_qvars: set()


---------- QFormula: _set_signed_func_name_to_args ----------

signed_func_name2args: {'1$chosenAt': [[Var('QUORUM0', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), Var('PROPOSER0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))], [Var('QUORUM1', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), Var('PROPOSER1', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))]], '1$didNotPromise': [[Var('ACCEPTOR0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')))], [Var('ACCEPTOR2', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')))], [Var('ACCEPTOR1', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')))]], '1$promise': [[Var('ACCEPTOR0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Var('PROPOSER1', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))], [Var('ACCEPTOR2', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Var('PROPOSER0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))]], '1$start': [[Var('PROPOSER2', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))]], '0$member': [[Var('ACCEPTOR0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Var('QUORUM0', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')))], [Var('ACCEPTOR1', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Var('QUORUM0', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')))], [Var('ACCEPTOR2', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Var('QUORUM1', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')))], [Var('ACCEPTOR1', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Var('QUORUM1', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')))]], '1$member': [[Var('ACCEPTOR2', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Var('QUORUM0', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')))], [Var('ACCEPTOR0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Var('QUORUM1', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')))]]}


---------- QFormula: _set_qterms ----------

qterms: ['member(ACCEPTOR0,QUORUM0)', '~didNotPromise(ACCEPTOR2)', '~member(ACCEPTOR2,QUORUM0)', '~didNotPromise(ACCEPTOR0)', '~start(PROPOSER2)', '~didNotPromise(ACCEPTOR1)', '~member(ACCEPTOR0,QUORUM1)', '~promise(ACCEPTOR0,PROPOSER1)', 'member(ACCEPTOR1,QUORUM1)', '~chosenAt(QUORUM0,PROPOSER0)', '~promise(ACCEPTOR2,PROPOSER0)', 'member(ACCEPTOR2,QUORUM1)', 'member(ACCEPTOR1,QUORUM0)', '~chosenAt(QUORUM1,PROPOSER1)']


---------- QFormula: get_qclause ----------

qclause: forall QUORUM1,ACCEPTOR2,ACCEPTOR1,PROPOSER0,PROPOSER2,ACCEPTOR0,PROPOSER1,QUORUM0. ~member(ACCEPTOR0,QUORUM0) | didNotPromise(ACCEPTOR2) | member(ACCEPTOR2,QUORUM0) | didNotPromise(ACCEPTOR0) | start(PROPOSER2) | didNotPromise(ACCEPTOR1) | member(ACCEPTOR0,QUORUM1) | promise(ACCEPTOR0,PROPOSER1) | ~member(ACCEPTOR1,QUORUM1) | chosenAt(QUORUM0,PROPOSER0) | promise(ACCEPTOR2,PROPOSER0) | ~member(ACCEPTOR2,QUORUM1) | ~member(ACCEPTOR1,QUORUM0) | chosenAt(QUORUM1,PROPOSER1) | (PROPOSER1 = PROPOSER2 | ACCEPTOR1 = ACCEPTOR2 | PROPOSER0 = PROPOSER1 | ACCEPTOR0 = ACCEPTOR2 | QUORUM0 = QUORUM1 | PROPOSER0 = PROPOSER2 | ACCEPTOR0 = ACCEPTOR1)


=== Prime Orbit 49 =====================
size : 3
num_suborbits: 1
807 (*) : 0-00-00-0000-------------0-
807     : ['~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~start(proposer1)']
808     : 00-00-00-000--------------0
808     : ['~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~start(proposer2)']
809     : -00-00-00000------------0--
809     : ['~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~start(proposer0)']
num_forall :   0
num_exists :   0
num_literals : 0
quantified form : None
qcost : 0




---------- QPrime ----------


---------- ConstArgBinding ----------

terms: ['~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~start(proposer1)', 'member(acceptor0,quorum__acceptor0_acceptor1)', 'member(acceptor1,quorum__acceptor0_acceptor1)', '~member(acceptor2,quorum__acceptor0_acceptor1)', '~member(acceptor0,quorum__acceptor1_acceptor2)', 'member(acceptor1,quorum__acceptor1_acceptor2)', 'member(acceptor2,quorum__acceptor1_acceptor2)', 'member(acceptor0,quorum__acceptor0_acceptor2)', '~member(acceptor1,quorum__acceptor0_acceptor2)', 'member(acceptor2,quorum__acceptor0_acceptor2)']

sign_func_name2args: {'1$chosenAt': [(Const('quorum__acceptor0_acceptor1', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), Const('proposer0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))), (Const('quorum__acceptor0_acceptor1', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), Const('proposer2', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))), (Const('quorum__acceptor0_acceptor2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), Const('proposer0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))), (Const('quorum__acceptor0_acceptor2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), Const('proposer2', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))), (Const('quorum__acceptor1_acceptor2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), Const('proposer0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))), (Const('quorum__acceptor1_acceptor2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), Const('proposer2', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))))], '1$didNotPromise': [(Const('acceptor0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))),), (Const('acceptor1', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))),), (Const('acceptor2', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))),)], '1$start': [(Const('proposer1', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))),)], '0$member': [(Const('acceptor0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Const('quorum__acceptor0_acceptor1', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')))), (Const('acceptor1', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Const('quorum__acceptor0_acceptor1', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')))), (Const('acceptor1', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Const('quorum__acceptor1_acceptor2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')))), (Const('acceptor2', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Const('quorum__acceptor1_acceptor2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')))), (Const('acceptor0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Const('quorum__acceptor0_acceptor2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')))), (Const('acceptor2', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Const('quorum__acceptor0_acceptor2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))))], '1$member': [(Const('acceptor2', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Const('quorum__acceptor0_acceptor1', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')))), (Const('acceptor0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Const('quorum__acceptor1_acceptor2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')))), (Const('acceptor1', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Const('quorum__acceptor0_acceptor2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))))]}

const2sigs: {Const('quorum__acceptor0_acceptor1', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))): [quorum$1$chosenAt$0$0, quorum$1$chosenAt$0$1, quorum$0$member$1$0, quorum$0$member$1$1, quorum$1$member$1$0], Const('proposer0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))): [proposer$1$chosenAt$1$0, proposer$1$chosenAt$1$2, proposer$1$chosenAt$1$4], Const('proposer2', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))): [proposer$1$chosenAt$1$1, proposer$1$chosenAt$1$3, proposer$1$chosenAt$1$5], Const('quorum__acceptor0_acceptor2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))): [quorum$1$chosenAt$0$2, quorum$1$chosenAt$0$3, quorum$0$member$1$4, quorum$0$member$1$5, quorum$1$member$1$2], Const('quorum__acceptor1_acceptor2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))): [quorum$1$chosenAt$0$4, quorum$1$chosenAt$0$5, quorum$0$member$1$2, quorum$0$member$1$3, quorum$1$member$1$1], Const('acceptor0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))): [acceptor$1$didNotPromise$0$0, acceptor$0$member$0$0, acceptor$0$member$0$4, acceptor$1$member$0$1], Const('acceptor1', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))): [acceptor$1$didNotPromise$0$1, acceptor$0$member$0$1, acceptor$0$member$0$2, acceptor$1$member$0$2], Const('acceptor2', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))): [acceptor$1$didNotPromise$0$2, acceptor$0$member$0$3, acceptor$0$member$0$5, acceptor$1$member$0$0], Const('proposer1', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))): [proposer$1$start$0$0]}

sig2const: {'quorum$1$chosenAt$0$0': Const('quorum__acceptor0_acceptor1', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), 'proposer$1$chosenAt$1$0': Const('proposer0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))), 'quorum$1$chosenAt$0$1': Const('quorum__acceptor0_acceptor1', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), 'proposer$1$chosenAt$1$1': Const('proposer2', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))), 'quorum$1$chosenAt$0$2': Const('quorum__acceptor0_acceptor2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), 'proposer$1$chosenAt$1$2': Const('proposer0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))), 'quorum$1$chosenAt$0$3': Const('quorum__acceptor0_acceptor2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), 'proposer$1$chosenAt$1$3': Const('proposer2', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))), 'quorum$1$chosenAt$0$4': Const('quorum__acceptor1_acceptor2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), 'proposer$1$chosenAt$1$4': Const('proposer0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))), 'quorum$1$chosenAt$0$5': Const('quorum__acceptor1_acceptor2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), 'proposer$1$chosenAt$1$5': Const('proposer2', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))), 'acceptor$1$didNotPromise$0$0': Const('acceptor0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), 'acceptor$1$didNotPromise$0$1': Const('acceptor1', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), 'acceptor$1$didNotPromise$0$2': Const('acceptor2', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), 'proposer$1$start$0$0': Const('proposer1', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))), 'acceptor$0$member$0$0': Const('acceptor0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), 'quorum$0$member$1$0': Const('quorum__acceptor0_acceptor1', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), 'acceptor$0$member$0$1': Const('acceptor1', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), 'quorum$0$member$1$1': Const('quorum__acceptor0_acceptor1', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), 'acceptor$0$member$0$2': Const('acceptor1', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), 'quorum$0$member$1$2': Const('quorum__acceptor1_acceptor2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), 'acceptor$0$member$0$3': Const('acceptor2', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), 'quorum$0$member$1$3': Const('quorum__acceptor1_acceptor2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), 'acceptor$0$member$0$4': Const('acceptor0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), 'quorum$0$member$1$4': Const('quorum__acceptor0_acceptor2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), 'acceptor$0$member$0$5': Const('acceptor2', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), 'quorum$0$member$1$5': Const('quorum__acceptor0_acceptor2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), 'acceptor$1$member$0$0': Const('acceptor2', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), 'quorum$1$member$1$0': Const('quorum__acceptor0_acceptor1', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), 'acceptor$1$member$0$1': Const('acceptor0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), 'quorum$1$member$1$1': Const('quorum__acceptor1_acceptor2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), 'acceptor$1$member$0$2': Const('acceptor1', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), 'quorum$1$member$1$2': Const('quorum__acceptor0_acceptor2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')))}


---------- ArgPartition ----------

sort2class_sigs: {EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')): [quorum$0$member$1$0; quorum$0$member$1$1; quorum$1$chosenAt$0$0; quorum$1$chosenAt$0$1; quorum$1$member$1$0, quorum$0$member$1$2; quorum$0$member$1$3; quorum$1$chosenAt$0$4; quorum$1$chosenAt$0$5; quorum$1$member$1$1, quorum$0$member$1$4; quorum$0$member$1$5; quorum$1$chosenAt$0$2; quorum$1$chosenAt$0$3; quorum$1$member$1$2], EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')): [proposer$1$chosenAt$1$0; proposer$1$chosenAt$1$2; proposer$1$chosenAt$1$4, proposer$1$chosenAt$1$1; proposer$1$chosenAt$1$3; proposer$1$chosenAt$1$5, proposer$1$start$0$0], EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')): [acceptor$0$member$0$0; acceptor$0$member$0$4; acceptor$1$didNotPromise$0$0; acceptor$1$member$0$1, acceptor$0$member$0$1; acceptor$0$member$0$2; acceptor$1$didNotPromise$0$1; acceptor$1$member$0$2, acceptor$0$member$0$3; acceptor$0$member$0$5; acceptor$1$didNotPromise$0$2; acceptor$1$member$0$0]}

sort2part_sig: {EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')): quorum$0$member$1$0; quorum$0$member$1$1; quorum$1$chosenAt$0$0; quorum$1$chosenAt$0$1; quorum$1$member$1$0 | quorum$0$member$1$2; quorum$0$member$1$3; quorum$1$chosenAt$0$4; quorum$1$chosenAt$0$5; quorum$1$member$1$1 | quorum$0$member$1$4; quorum$0$member$1$5; quorum$1$chosenAt$0$2; quorum$1$chosenAt$0$3; quorum$1$member$1$2, EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')): proposer$1$chosenAt$1$0; proposer$1$chosenAt$1$2; proposer$1$chosenAt$1$4 | proposer$1$chosenAt$1$1; proposer$1$chosenAt$1$3; proposer$1$chosenAt$1$5 | proposer$1$start$0$0, EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')): acceptor$0$member$0$0; acceptor$0$member$0$4; acceptor$1$didNotPromise$0$0; acceptor$1$member$0$1 | acceptor$0$member$0$1; acceptor$0$member$0$2; acceptor$1$didNotPromise$0$1; acceptor$1$member$0$2 | acceptor$0$member$0$3; acceptor$0$member$0$5; acceptor$1$didNotPromise$0$2; acceptor$1$member$0$0}

part_sig: ('acceptor$0$member$0$0; acceptor$0$member$0$4; acceptor$1$didNotPromise$0$0; acceptor$1$member$0$1 | acceptor$0$member$0$1; acceptor$0$member$0$2; acceptor$1$didNotPromise$0$1; acceptor$1$member$0$2 | acceptor$0$member$0$3; acceptor$0$member$0$5; acceptor$1$didNotPromise$0$2; acceptor$1$member$0$0', 'proposer$1$chosenAt$1$0; proposer$1$chosenAt$1$2; proposer$1$chosenAt$1$4 | proposer$1$chosenAt$1$1; proposer$1$chosenAt$1$3; proposer$1$chosenAt$1$5 | proposer$1$start$0$0', 'quorum$0$member$1$0; quorum$0$member$1$1; quorum$1$chosenAt$0$0; quorum$1$chosenAt$0$1; quorum$1$member$1$0 | quorum$0$member$1$2; quorum$0$member$1$3; quorum$1$chosenAt$0$4; quorum$1$chosenAt$0$5; quorum$1$member$1$1 | quorum$0$member$1$4; quorum$0$member$1$5; quorum$1$chosenAt$0$2; quorum$1$chosenAt$0$3; quorum$1$member$1$2')


---------- SigGenerator ----------

terms:  ['~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~start(proposer1)', 'member(acceptor0,quorum__acceptor0_acceptor1)', 'member(acceptor1,quorum__acceptor0_acceptor1)', '~member(acceptor2,quorum__acceptor0_acceptor1)', '~member(acceptor0,quorum__acceptor1_acceptor2)', 'member(acceptor1,quorum__acceptor1_acceptor2)', 'member(acceptor2,quorum__acceptor1_acceptor2)', 'member(acceptor0,quorum__acceptor0_acceptor2)', '~member(acceptor1,quorum__acceptor0_acceptor2)', 'member(acceptor2,quorum__acceptor0_acceptor2)']

func_name2symbol:  {'chosenAt': Const('chosenAt', FunctionSort(EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')), EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')), BooleanSort())), 'didNotPromise': Const('didNotPromise', FunctionSort(EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')), BooleanSort())), 'start': Const('start', FunctionSort(EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')), BooleanSort())), 'member': Const('member', FunctionSort(EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')), EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')), BooleanSort()))}

func_name2args_sort:  {'chosenAt': (EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')), EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))), 'didNotPromise': (EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')),), 'start': (EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')),), 'member': (EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')), EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')))}

sign_func_name2count:  {'1$chosenAt': 6, '1$didNotPromise': 3, '1$start': 1, '0$member': 6, '1$member': 3}


---------- ProductArgPartition ----------

sort2class_sigs: {EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')): [quorum$0$member$1$0; quorum$0$member$1$1; quorum$1$chosenAt$0$0; quorum$1$chosenAt$0$1; quorum$1$member$1$0, quorum$0$member$1$2; quorum$0$member$1$3; quorum$1$chosenAt$0$4; quorum$1$chosenAt$0$5; quorum$1$member$1$1, quorum$0$member$1$4; quorum$0$member$1$5; quorum$1$chosenAt$0$2; quorum$1$chosenAt$0$3; quorum$1$member$1$2], EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')): [proposer$1$chosenAt$1$0; proposer$1$chosenAt$1$2; proposer$1$chosenAt$1$4, proposer$1$chosenAt$1$1; proposer$1$chosenAt$1$3; proposer$1$chosenAt$1$5, proposer$1$start$0$0], EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')): [acceptor$0$member$0$0; acceptor$0$member$0$4; acceptor$1$didNotPromise$0$0; acceptor$1$member$0$1, acceptor$0$member$0$1; acceptor$0$member$0$2; acceptor$1$didNotPromise$0$1; acceptor$1$member$0$2, acceptor$0$member$0$3; acceptor$0$member$0$5; acceptor$1$didNotPromise$0$2; acceptor$1$member$0$0]}

sort2part_sig: {EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')): quorum$0$member$1$0; quorum$0$member$1$1; quorum$1$chosenAt$0$0; quorum$1$chosenAt$0$1; quorum$1$member$1$0 | quorum$0$member$1$2; quorum$0$member$1$3; quorum$1$chosenAt$0$4; quorum$1$chosenAt$0$5; quorum$1$member$1$1 | quorum$0$member$1$4; quorum$0$member$1$5; quorum$1$chosenAt$0$2; quorum$1$chosenAt$0$3; quorum$1$member$1$2, EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')): proposer$1$chosenAt$1$0; proposer$1$chosenAt$1$2; proposer$1$chosenAt$1$4 | proposer$1$chosenAt$1$1; proposer$1$chosenAt$1$3; proposer$1$chosenAt$1$5 | proposer$1$start$0$0, EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')): acceptor$0$member$0$0; acceptor$0$member$0$4; acceptor$1$didNotPromise$0$0; acceptor$1$member$0$1 | acceptor$0$member$0$1; acceptor$0$member$0$2; acceptor$1$didNotPromise$0$1; acceptor$1$member$0$2 | acceptor$0$member$0$3; acceptor$0$member$0$5; acceptor$1$didNotPromise$0$2; acceptor$1$member$0$0}

	sort: quorum

	identical_classes: {'quorum$0$member$1; quorum$0$member$1; quorum$1$chosenAt$0; quorum$1$chosenAt$0; quorum$1$member$1': [quorum$0$member$1$0; quorum$0$member$1$1; quorum$1$chosenAt$0$0; quorum$1$chosenAt$0$1; quorum$1$member$1$0, quorum$0$member$1$2; quorum$0$member$1$3; quorum$1$chosenAt$0$4; quorum$1$chosenAt$0$5; quorum$1$member$1$1, quorum$0$member$1$4; quorum$0$member$1$5; quorum$1$chosenAt$0$2; quorum$1$chosenAt$0$3; quorum$1$member$1$2]}

	identical_single_classes: {}

	identical_multi_classes: {'quorum$0$member$1; quorum$0$member$1; quorum$1$chosenAt$0; quorum$1$chosenAt$0; quorum$1$member$1': [quorum$0$member$1$0, quorum$0$member$1$1, quorum$1$chosenAt$0$0, quorum$1$chosenAt$0$1, quorum$1$member$1$0, quorum$0$member$1$2, quorum$0$member$1$3, quorum$1$chosenAt$0$4, quorum$1$chosenAt$0$5, quorum$1$member$1$1, quorum$0$member$1$4, quorum$0$member$1$5, quorum$1$chosenAt$0$2, quorum$1$chosenAt$0$3, quorum$1$member$1$2]}

	sort: proposer

	identical_classes: {'proposer$1$chosenAt$1; proposer$1$chosenAt$1; proposer$1$chosenAt$1': [proposer$1$chosenAt$1$0; proposer$1$chosenAt$1$2; proposer$1$chosenAt$1$4, proposer$1$chosenAt$1$1; proposer$1$chosenAt$1$3; proposer$1$chosenAt$1$5], 'proposer$1$start$0': [proposer$1$start$0$0]}

	identical_single_classes: {'proposer$1$start$0': proposer$1$start$0$0}

	identical_multi_classes: {'proposer$1$chosenAt$1; proposer$1$chosenAt$1; proposer$1$chosenAt$1': [proposer$1$chosenAt$1$0, proposer$1$chosenAt$1$2, proposer$1$chosenAt$1$4, proposer$1$chosenAt$1$1, proposer$1$chosenAt$1$3, proposer$1$chosenAt$1$5]}

	sort: acceptor

	identical_classes: {'acceptor$0$member$0; acceptor$0$member$0; acceptor$1$didNotPromise$0; acceptor$1$member$0': [acceptor$0$member$0$0; acceptor$0$member$0$4; acceptor$1$didNotPromise$0$0; acceptor$1$member$0$1, acceptor$0$member$0$1; acceptor$0$member$0$2; acceptor$1$didNotPromise$0$1; acceptor$1$member$0$2, acceptor$0$member$0$3; acceptor$0$member$0$5; acceptor$1$didNotPromise$0$2; acceptor$1$member$0$0]}

	identical_single_classes: {}

	identical_multi_classes: {'acceptor$0$member$0; acceptor$0$member$0; acceptor$1$didNotPromise$0; acceptor$1$member$0': [acceptor$0$member$0$0, acceptor$0$member$0$4, acceptor$1$didNotPromise$0$0, acceptor$1$member$0$1, acceptor$0$member$0$1, acceptor$0$member$0$2, acceptor$1$didNotPromise$0$1, acceptor$1$member$0$2, acceptor$0$member$0$3, acceptor$0$member$0$5, acceptor$1$didNotPromise$0$2, acceptor$1$member$0$0]}


---------- QInference: _set_sort_to_quantifier_mode ----------

quantifier mode: quorum: QuantifierMode.forall

quantifier mode: proposer: QuantifierMode.forall_exists

quantifier mode: acceptor: QuantifierMode.forall


---------- QInference: _set_constraint_mode ----------

constraint mode: ConstraintMode.no_merge


---------- QFormula: _set_qvars ----------

forall_qvars: {Var('ACCEPTOR0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Var('QUORUM0', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), Var('QUORUM2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), Var('ACCEPTOR1', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Var('PROPOSER1', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))), Var('QUORUM1', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), Var('ACCEPTOR2', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')))}

exists_qvars: {Var('PROPOSER0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))}


---------- QFormula: _set_signed_func_name_to_args ----------

signed_func_name2args: {'1$chosenAt': [[Var('QUORUM0', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), Var('PROPOSER0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))], [Var('QUORUM0', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), Var('PROPOSER0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))], [Var('QUORUM2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), Var('PROPOSER0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))], [Var('QUORUM2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), Var('PROPOSER0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))], [Var('QUORUM1', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), Var('PROPOSER0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))], [Var('QUORUM1', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), Var('PROPOSER0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))]], '1$didNotPromise': [[Var('ACCEPTOR0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')))], [Var('ACCEPTOR1', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')))], [Var('ACCEPTOR2', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')))]], '1$start': [[Var('PROPOSER1', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))]], '0$member': [[Var('ACCEPTOR0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Var('QUORUM0', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')))], [Var('ACCEPTOR1', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Var('QUORUM0', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')))], [Var('ACCEPTOR1', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Var('QUORUM1', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')))], [Var('ACCEPTOR2', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Var('QUORUM1', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')))], [Var('ACCEPTOR0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Var('QUORUM2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')))], [Var('ACCEPTOR2', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Var('QUORUM2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')))]], '1$member': [[Var('ACCEPTOR2', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Var('QUORUM0', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')))], [Var('ACCEPTOR0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Var('QUORUM1', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')))], [Var('ACCEPTOR1', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Var('QUORUM2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')))]]}


---------- QFormula: _set_qterms ----------

qterms: ['~chosenAt(QUORUM1,PROPOSER0)', 'member(ACCEPTOR0,QUORUM0)', '~didNotPromise(ACCEPTOR2)', 'member(ACCEPTOR1,QUORUM0)', '~member(ACCEPTOR2,QUORUM0)', 'member(ACCEPTOR2,QUORUM2)', 'member(ACCEPTOR0,QUORUM2)', '~didNotPromise(ACCEPTOR0)', '~start(PROPOSER1)', '~didNotPromise(ACCEPTOR1)', '~member(ACCEPTOR0,QUORUM1)', 'member(ACCEPTOR1,QUORUM1)', '~chosenAt(QUORUM0,PROPOSER0)', '~member(ACCEPTOR1,QUORUM2)', 'member(ACCEPTOR2,QUORUM1)', '~chosenAt(QUORUM2,PROPOSER0)']


---------- QFormula: get_qclause ----------

qclause: forall QUORUM2,QUORUM1,ACCEPTOR2,ACCEPTOR1,ACCEPTOR0,PROPOSER1,QUORUM0. ~member(ACCEPTOR0,QUORUM0) | didNotPromise(ACCEPTOR2) | ~member(ACCEPTOR1,QUORUM0) | member(ACCEPTOR2,QUORUM0) | ~member(ACCEPTOR2,QUORUM2) | ~member(ACCEPTOR0,QUORUM2) | didNotPromise(ACCEPTOR0) | start(PROPOSER1) | didNotPromise(ACCEPTOR1) | member(ACCEPTOR0,QUORUM1) | ~member(ACCEPTOR1,QUORUM1) | member(ACCEPTOR1,QUORUM2) | ~member(ACCEPTOR2,QUORUM1) | (exists PROPOSER0. ((chosenAt(QUORUM1,PROPOSER0) | chosenAt(QUORUM0,PROPOSER0) | chosenAt(QUORUM2,PROPOSER0)) & PROPOSER0 ~= PROPOSER1)) | (QUORUM0 = QUORUM2 | QUORUM1 = QUORUM2 | ACCEPTOR1 = ACCEPTOR2 | ACCEPTOR0 = ACCEPTOR2 | QUORUM0 = QUORUM1 | ACCEPTOR0 = ACCEPTOR1)


=======================================================================================================================

	[QI RESULT]: Quantified Prime Orbits on [ivybench/sym_quorum/ivy/simple-election: acceptor=3,proposer=3]

=======================================================================================================================


=== Prime Orbit 0 =====================
size : 9
num_suborbits: 1
0 (*) : ---------------------1-1---
0     : ['promise(acceptor2,proposer0)', 'promise(acceptor2,proposer2)']
1     : ---------------------11----
1     : ['promise(acceptor2,proposer0)', 'promise(acceptor2,proposer1)']
2     : ----------------------11---
2     : ['promise(acceptor2,proposer1)', 'promise(acceptor2,proposer2)']
3     : ------------------1-1------
3     : ['promise(acceptor1,proposer0)', 'promise(acceptor1,proposer2)']
4     : ------------------11-------
4     : ['promise(acceptor1,proposer0)', 'promise(acceptor1,proposer1)']
5     : -------------------11------
5     : ['promise(acceptor1,proposer1)', 'promise(acceptor1,proposer2)']
6     : ---------------1-1---------
6     : ['promise(acceptor0,proposer0)', 'promise(acceptor0,proposer2)']
7     : ---------------11----------
7     : ['promise(acceptor0,proposer0)', 'promise(acceptor0,proposer1)']
8     : ----------------11---------
8     : ['promise(acceptor0,proposer1)', 'promise(acceptor0,proposer2)']
num_forall :   3
num_exists :   0
num_literals : 3
quantified form : forall PROPOSER1,PROPOSER0,ACCEPTOR0. ~promise(ACCEPTOR0,PROPOSER0) | ~promise(ACCEPTOR0,PROPOSER1) | PROPOSER0 = PROPOSER1
qcost : 6




=== Prime Orbit 3 =====================
size : 9
num_suborbits: 1
54 (*) : ---------------------1--0--
54     : ['promise(acceptor2,proposer0)', '~start(proposer0)']
55     : ----------------------1--0-
55     : ['promise(acceptor2,proposer1)', '~start(proposer1)']
56     : -----------------------1--0
56     : ['promise(acceptor2,proposer2)', '~start(proposer2)']
57     : ------------------1-----0--
57     : ['promise(acceptor1,proposer0)', '~start(proposer0)']
58     : -------------------1-----0-
58     : ['promise(acceptor1,proposer1)', '~start(proposer1)']
59     : --------------------1-----0
59     : ['promise(acceptor1,proposer2)', '~start(proposer2)']
60     : ---------------1--------0--
60     : ['promise(acceptor0,proposer0)', '~start(proposer0)']
61     : ----------------1--------0-
61     : ['promise(acceptor0,proposer1)', '~start(proposer1)']
62     : -----------------1--------0
62     : ['promise(acceptor0,proposer2)', '~start(proposer2)']
num_forall :   2
num_exists :   0
num_literals : 2
quantified form : forall PROPOSER0,ACCEPTOR0. ~promise(ACCEPTOR0,PROPOSER0) | start(PROPOSER0)
qcost : 4




=== Prime Orbit 5 =====================
size : 18
num_suborbits: 1
81 (*) : --------1----1-------------
81     : ['chosenAt(quorum__acceptor1_acceptor2,proposer2)', 'leader(proposer1)']
82     : -------1------1------------
82     : ['chosenAt(quorum__acceptor1_acceptor2,proposer1)', 'leader(proposer2)']
83     : --------1---1--------------
83     : ['chosenAt(quorum__acceptor1_acceptor2,proposer2)', 'leader(proposer0)']
84     : ------1-------1------------
84     : ['chosenAt(quorum__acceptor1_acceptor2,proposer0)', 'leader(proposer2)']
85     : -------1----1--------------
85     : ['chosenAt(quorum__acceptor1_acceptor2,proposer1)', 'leader(proposer0)']
86     : ------1------1-------------
86     : ['chosenAt(quorum__acceptor1_acceptor2,proposer0)', 'leader(proposer1)']
87     : -----1-------1-------------
87     : ['chosenAt(quorum__acceptor0_acceptor2,proposer2)', 'leader(proposer1)']
88     : ----1---------1------------
88     : ['chosenAt(quorum__acceptor0_acceptor2,proposer1)', 'leader(proposer2)']
89     : -----1------1--------------
89     : ['chosenAt(quorum__acceptor0_acceptor2,proposer2)', 'leader(proposer0)']
90     : ---1----------1------------
90     : ['chosenAt(quorum__acceptor0_acceptor2,proposer0)', 'leader(proposer2)']
91     : ----1-------1--------------
91     : ['chosenAt(quorum__acceptor0_acceptor2,proposer1)', 'leader(proposer0)']
92     : ---1---------1-------------
92     : ['chosenAt(quorum__acceptor0_acceptor2,proposer0)', 'leader(proposer1)']
93     : --1----------1-------------
93     : ['chosenAt(quorum__acceptor0_acceptor1,proposer2)', 'leader(proposer1)']
94     : -1------------1------------
94     : ['chosenAt(quorum__acceptor0_acceptor1,proposer1)', 'leader(proposer2)']
95     : --1---------1--------------
95     : ['chosenAt(quorum__acceptor0_acceptor1,proposer2)', 'leader(proposer0)']
96     : 1-------------1------------
96     : ['chosenAt(quorum__acceptor0_acceptor1,proposer0)', 'leader(proposer2)']
97     : -1----------1--------------
97     : ['chosenAt(quorum__acceptor0_acceptor1,proposer1)', 'leader(proposer0)']
98     : 1------------1-------------
98     : ['chosenAt(quorum__acceptor0_acceptor1,proposer0)', 'leader(proposer1)']
num_forall :   3
num_exists :   0
num_literals : 3
quantified form : forall PROPOSER1,QUORUM0,PROPOSER0. ~chosenAt(QUORUM0,PROPOSER0) | ~leader(PROPOSER1) | PROPOSER0 = PROPOSER1
qcost : 6




=== Prime Orbit 8 =====================
size : 9
num_suborbits: 1
135 (*) : --------1-----------------0
135     : ['chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~start(proposer2)']
136     : -------1-----------------0-
136     : ['chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~start(proposer1)']
137     : ------1-----------------0--
137     : ['chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~start(proposer0)']
138     : -----1--------------------0
138     : ['chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~start(proposer2)']
139     : ----1--------------------0-
139     : ['chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~start(proposer1)']
140     : ---1--------------------0--
140     : ['chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~start(proposer0)']
141     : --1-----------------------0
141     : ['chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~start(proposer2)']
142     : -1-----------------------0-
142     : ['chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~start(proposer1)']
143     : 1-----------------------0--
143     : ['chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~start(proposer0)']
num_forall :   2
num_exists :   0
num_literals : 2
quantified form : forall QUORUM0,PROPOSER0. ~chosenAt(QUORUM0,PROPOSER0) | start(PROPOSER0)
qcost : 4




=== Prime Orbit 9 =====================
size : 3
num_suborbits: 1
153 (*) : --------------1-----------0
153     : ['leader(proposer2)', '~start(proposer2)']
154     : -------------1-----------0-
154     : ['leader(proposer1)', '~start(proposer1)']
155     : ------------1-----------0--
155     : ['leader(proposer0)', '~start(proposer0)']
num_forall :   1
num_exists :   0
num_literals : 2
quantified form : forall PROPOSER0. ~leader(PROPOSER0) | start(PROPOSER0)
qcost : 3




=== Prime Orbit 10 =====================
size : 3
num_suborbits: 1
156 (*) : -------------11------------
156     : ['leader(proposer1)', 'leader(proposer2)']
157     : ------------1-1------------
157     : ['leader(proposer0)', 'leader(proposer2)']
158     : ------------11-------------
158     : ['leader(proposer0)', 'leader(proposer1)']
num_forall :   2
num_exists :   0
num_literals : 3
quantified form : forall PROPOSER1,PROPOSER0. ~leader(PROPOSER0) | ~leader(PROPOSER1) | PROPOSER0 = PROPOSER1
qcost : 5




=== Prime Orbit 13 =====================
size : 18
num_suborbits: 1
186 (*) : 0-----------1---------1----
186     : ['leader(proposer0)', 'promise(acceptor2,proposer1)', '~chosenAt(quorum__acceptor0_acceptor1,proposer0)']
187     : 0-----------1----------1---
187     : ['leader(proposer0)', 'promise(acceptor2,proposer2)', '~chosenAt(quorum__acceptor0_acceptor1,proposer0)']
188     : -0-----------1-------1-----
188     : ['leader(proposer1)', 'promise(acceptor2,proposer0)', '~chosenAt(quorum__acceptor0_acceptor1,proposer1)']
189     : -0-----------1---------1---
189     : ['leader(proposer1)', 'promise(acceptor2,proposer2)', '~chosenAt(quorum__acceptor0_acceptor1,proposer1)']
190     : --0-----------1------1-----
190     : ['leader(proposer2)', 'promise(acceptor2,proposer0)', '~chosenAt(quorum__acceptor0_acceptor1,proposer2)']
191     : --0-----------1-------1----
191     : ['leader(proposer2)', 'promise(acceptor2,proposer1)', '~chosenAt(quorum__acceptor0_acceptor1,proposer2)']
192     : ---0--------1------1-------
192     : ['leader(proposer0)', 'promise(acceptor1,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)']
193     : ---0--------1-------1------
193     : ['leader(proposer0)', 'promise(acceptor1,proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)']
194     : ----0--------1----1--------
194     : ['leader(proposer1)', 'promise(acceptor1,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)']
195     : ----0--------1------1------
195     : ['leader(proposer1)', 'promise(acceptor1,proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)']
196     : -----0--------1---1--------
196     : ['leader(proposer2)', 'promise(acceptor1,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)']
197     : -----0--------1----1-------
197     : ['leader(proposer2)', 'promise(acceptor1,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)']
198     : ------0-----1---1----------
198     : ['leader(proposer0)', 'promise(acceptor0,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)']
199     : ------0-----1----1---------
199     : ['leader(proposer0)', 'promise(acceptor0,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)']
200     : -------0-----1-1-----------
200     : ['leader(proposer1)', 'promise(acceptor0,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)']
201     : -------0-----1---1---------
201     : ['leader(proposer1)', 'promise(acceptor0,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)']
202     : --------0-----11-----------
202     : ['leader(proposer2)', 'promise(acceptor0,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)']
203     : --------0-----1-1----------
203     : ['leader(proposer2)', 'promise(acceptor0,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)']
num_forall :   4
num_exists :   0
num_literals : 5
quantified form : forall PROPOSER1,QUORUM0,PROPOSER0,ACCEPTOR0. ~promise(ACCEPTOR0,PROPOSER1) | ~leader(PROPOSER0) | member(ACCEPTOR0,QUORUM0) | chosenAt(QUORUM0,PROPOSER0) | PROPOSER0 = PROPOSER1
qcost : 9




=== Prime Orbit 14 =====================
size : 36
num_suborbits: 1
204 (*) : ------------1-----0---1----
204     : ['leader(proposer0)', 'promise(acceptor2,proposer1)', '~promise(acceptor1,proposer0)']
205     : ------------1-----0----1---
205     : ['leader(proposer0)', 'promise(acceptor2,proposer2)', '~promise(acceptor1,proposer0)']
206     : -------------1-----0-1-----
206     : ['leader(proposer1)', 'promise(acceptor2,proposer0)', '~promise(acceptor1,proposer1)']
207     : -------------1-----0---1---
207     : ['leader(proposer1)', 'promise(acceptor2,proposer2)', '~promise(acceptor1,proposer1)']
208     : --------------1-----01-----
208     : ['leader(proposer2)', 'promise(acceptor2,proposer0)', '~promise(acceptor1,proposer2)']
209     : --------------1-----0-1----
209     : ['leader(proposer2)', 'promise(acceptor2,proposer1)', '~promise(acceptor1,proposer2)']
210     : ------------1------1-0-----
210     : ['leader(proposer0)', 'promise(acceptor1,proposer1)', '~promise(acceptor2,proposer0)']
211     : ------------1-------10-----
211     : ['leader(proposer0)', 'promise(acceptor1,proposer2)', '~promise(acceptor2,proposer0)']
212     : -------------1----1---0----
212     : ['leader(proposer1)', 'promise(acceptor1,proposer0)', '~promise(acceptor2,proposer1)']
213     : -------------1------1-0----
213     : ['leader(proposer1)', 'promise(acceptor1,proposer2)', '~promise(acceptor2,proposer1)']
214     : --------------1---1----0---
214     : ['leader(proposer2)', 'promise(acceptor1,proposer0)', '~promise(acceptor2,proposer2)']
215     : --------------1----1---0---
215     : ['leader(proposer2)', 'promise(acceptor1,proposer1)', '~promise(acceptor2,proposer2)']
216     : ------------1--0------1----
216     : ['leader(proposer0)', 'promise(acceptor2,proposer1)', '~promise(acceptor0,proposer0)']
217     : ------------1--0-------1---
217     : ['leader(proposer0)', 'promise(acceptor2,proposer2)', '~promise(acceptor0,proposer0)']
218     : -------------1--0----1-----
218     : ['leader(proposer1)', 'promise(acceptor2,proposer0)', '~promise(acceptor0,proposer1)']
219     : -------------1--0------1---
219     : ['leader(proposer1)', 'promise(acceptor2,proposer2)', '~promise(acceptor0,proposer1)']
220     : --------------1--0---1-----
220     : ['leader(proposer2)', 'promise(acceptor2,proposer0)', '~promise(acceptor0,proposer2)']
221     : --------------1--0----1----
221     : ['leader(proposer2)', 'promise(acceptor2,proposer1)', '~promise(acceptor0,proposer2)']
222     : ------------1---1----0-----
222     : ['leader(proposer0)', 'promise(acceptor0,proposer1)', '~promise(acceptor2,proposer0)']
223     : ------------1----1---0-----
223     : ['leader(proposer0)', 'promise(acceptor0,proposer2)', '~promise(acceptor2,proposer0)']
224     : -------------1-1------0----
224     : ['leader(proposer1)', 'promise(acceptor0,proposer0)', '~promise(acceptor2,proposer1)']
225     : -------------1---1----0----
225     : ['leader(proposer1)', 'promise(acceptor0,proposer2)', '~promise(acceptor2,proposer1)']
226     : --------------11-------0---
226     : ['leader(proposer2)', 'promise(acceptor0,proposer0)', '~promise(acceptor2,proposer2)']
227     : --------------1-1------0---
227     : ['leader(proposer2)', 'promise(acceptor0,proposer1)', '~promise(acceptor2,proposer2)']
228     : ------------1--0---1-------
228     : ['leader(proposer0)', 'promise(acceptor1,proposer1)', '~promise(acceptor0,proposer0)']
229     : ------------1--0----1------
229     : ['leader(proposer0)', 'promise(acceptor1,proposer2)', '~promise(acceptor0,proposer0)']
230     : -------------1--0-1--------
230     : ['leader(proposer1)', 'promise(acceptor1,proposer0)', '~promise(acceptor0,proposer1)']
231     : -------------1--0---1------
231     : ['leader(proposer1)', 'promise(acceptor1,proposer2)', '~promise(acceptor0,proposer1)']
232     : --------------1--01--------
232     : ['leader(proposer2)', 'promise(acceptor1,proposer0)', '~promise(acceptor0,proposer2)']
233     : --------------1--0-1-------
233     : ['leader(proposer2)', 'promise(acceptor1,proposer1)', '~promise(acceptor0,proposer2)']
234     : ------------1---1-0--------
234     : ['leader(proposer0)', 'promise(acceptor0,proposer1)', '~promise(acceptor1,proposer0)']
235     : ------------1----10--------
235     : ['leader(proposer0)', 'promise(acceptor0,proposer2)', '~promise(acceptor1,proposer0)']
236     : -------------1-1---0-------
236     : ['leader(proposer1)', 'promise(acceptor0,proposer0)', '~promise(acceptor1,proposer1)']
237     : -------------1---1-0-------
237     : ['leader(proposer1)', 'promise(acceptor0,proposer2)', '~promise(acceptor1,proposer1)']
238     : --------------11----0------
238     : ['leader(proposer2)', 'promise(acceptor0,proposer0)', '~promise(acceptor1,proposer2)']
239     : --------------1-1---0------
239     : ['leader(proposer2)', 'promise(acceptor0,proposer1)', '~promise(acceptor1,proposer2)']
num_forall :   4
num_exists :   0
num_literals : 5
quantified form : forall PROPOSER1,ACCEPTOR1,PROPOSER0,ACCEPTOR0. ~promise(ACCEPTOR0,PROPOSER1) | ~leader(PROPOSER0) | promise(ACCEPTOR1,PROPOSER0) | (PROPOSER0 = PROPOSER1 | ACCEPTOR0 = ACCEPTOR1)
qcost : 9




=== Prime Orbit 15 =====================
size : 36
num_suborbits: 2
240 (*) : ------------1-------1-1----
240     : ['leader(proposer0)', 'promise(acceptor1,proposer2)', 'promise(acceptor2,proposer1)']
241     : ------------1------1---1---
241     : ['leader(proposer0)', 'promise(acceptor1,proposer1)', 'promise(acceptor2,proposer2)']
242     : -------------1------11-----
242     : ['leader(proposer1)', 'promise(acceptor1,proposer2)', 'promise(acceptor2,proposer0)']
243     : -------------1----1----1---
243     : ['leader(proposer1)', 'promise(acceptor1,proposer0)', 'promise(acceptor2,proposer2)']
244     : --------------1----1-1-----
244     : ['leader(proposer2)', 'promise(acceptor1,proposer1)', 'promise(acceptor2,proposer0)']
245     : --------------1---1---1----
245     : ['leader(proposer2)', 'promise(acceptor1,proposer0)', 'promise(acceptor2,proposer1)']
246     : ------------1----1----1----
246     : ['leader(proposer0)', 'promise(acceptor0,proposer2)', 'promise(acceptor2,proposer1)']
247     : ------------1---1------1---
247     : ['leader(proposer0)', 'promise(acceptor0,proposer1)', 'promise(acceptor2,proposer2)']
248     : -------------1---1---1-----
248     : ['leader(proposer1)', 'promise(acceptor0,proposer2)', 'promise(acceptor2,proposer0)']
249     : -------------1-1-------1---
249     : ['leader(proposer1)', 'promise(acceptor0,proposer0)', 'promise(acceptor2,proposer2)']
250     : --------------1-1----1-----
250     : ['leader(proposer2)', 'promise(acceptor0,proposer1)', 'promise(acceptor2,proposer0)']
251     : --------------11------1----
251     : ['leader(proposer2)', 'promise(acceptor0,proposer0)', 'promise(acceptor2,proposer1)']
252     : ------------1----1-1-------
252     : ['leader(proposer0)', 'promise(acceptor0,proposer2)', 'promise(acceptor1,proposer1)']
253     : ------------1---1---1------
253     : ['leader(proposer0)', 'promise(acceptor0,proposer1)', 'promise(acceptor1,proposer2)']
254     : -------------1---11--------
254     : ['leader(proposer1)', 'promise(acceptor0,proposer2)', 'promise(acceptor1,proposer0)']
255     : -------------1-1----1------
255     : ['leader(proposer1)', 'promise(acceptor0,proposer0)', 'promise(acceptor1,proposer2)']
256     : --------------1-1-1--------
256     : ['leader(proposer2)', 'promise(acceptor0,proposer1)', 'promise(acceptor1,proposer0)']
257     : --------------11---1-------
257     : ['leader(proposer2)', 'promise(acceptor0,proposer0)', 'promise(acceptor1,proposer1)']
294 (*) : ------------1------1--1----
294     : ['leader(proposer0)', 'promise(acceptor1,proposer1)', 'promise(acceptor2,proposer1)']
295     : ------------1-------1--1---
295     : ['leader(proposer0)', 'promise(acceptor1,proposer2)', 'promise(acceptor2,proposer2)']
296     : -------------1----1--1-----
296     : ['leader(proposer1)', 'promise(acceptor1,proposer0)', 'promise(acceptor2,proposer0)']
297     : -------------1------1--1---
297     : ['leader(proposer1)', 'promise(acceptor1,proposer2)', 'promise(acceptor2,proposer2)']
298     : --------------1---1--1-----
298     : ['leader(proposer2)', 'promise(acceptor1,proposer0)', 'promise(acceptor2,proposer0)']
299     : --------------1----1--1----
299     : ['leader(proposer2)', 'promise(acceptor1,proposer1)', 'promise(acceptor2,proposer1)']
300     : ------------1---1-----1----
300     : ['leader(proposer0)', 'promise(acceptor0,proposer1)', 'promise(acceptor2,proposer1)']
301     : ------------1----1-----1---
301     : ['leader(proposer0)', 'promise(acceptor0,proposer2)', 'promise(acceptor2,proposer2)']
302     : -------------1-1-----1-----
302     : ['leader(proposer1)', 'promise(acceptor0,proposer0)', 'promise(acceptor2,proposer0)']
303     : -------------1---1-----1---
303     : ['leader(proposer1)', 'promise(acceptor0,proposer2)', 'promise(acceptor2,proposer2)']
304     : --------------11-----1-----
304     : ['leader(proposer2)', 'promise(acceptor0,proposer0)', 'promise(acceptor2,proposer0)']
305     : --------------1-1-----1----
305     : ['leader(proposer2)', 'promise(acceptor0,proposer1)', 'promise(acceptor2,proposer1)']
306     : ------------1---1--1-------
306     : ['leader(proposer0)', 'promise(acceptor0,proposer1)', 'promise(acceptor1,proposer1)']
307     : ------------1----1--1------
307     : ['leader(proposer0)', 'promise(acceptor0,proposer2)', 'promise(acceptor1,proposer2)']
308     : -------------1-1--1--------
308     : ['leader(proposer1)', 'promise(acceptor0,proposer0)', 'promise(acceptor1,proposer0)']
309     : -------------1---1--1------
309     : ['leader(proposer1)', 'promise(acceptor0,proposer2)', 'promise(acceptor1,proposer2)']
310     : --------------11--1--------
310     : ['leader(proposer2)', 'promise(acceptor0,proposer0)', 'promise(acceptor1,proposer0)']
311     : --------------1-1--1-------
311     : ['leader(proposer2)', 'promise(acceptor0,proposer1)', 'promise(acceptor1,proposer1)']
num_forall :   5
num_exists :   0
num_literals : 10
quantified form : forall PROPOSER0,PROPOSER2,ACCEPTOR0,PROPOSER1,ACCEPTOR1. ~promise(ACCEPTOR0,PROPOSER1) | ~leader(PROPOSER0) | ~promise(ACCEPTOR1,PROPOSER2) | ((ACCEPTOR0 = ACCEPTOR1 | PROPOSER1 ~= PROPOSER2 | PROPOSER0 = PROPOSER1) & (ACCEPTOR0 = ACCEPTOR1 | PROPOSER0 = PROPOSER2 | PROPOSER0 = PROPOSER1 | PROPOSER1 = PROPOSER2))
qcost : 15




=== Prime Orbit 16 =====================
size : 36
num_suborbits: 1
258 (*) : ---------1----1-------1----
258     : ['didNotPromise(acceptor0)', 'leader(proposer2)', 'promise(acceptor2,proposer1)']
259     : ---------1---1---------1---
259     : ['didNotPromise(acceptor0)', 'leader(proposer1)', 'promise(acceptor2,proposer2)']
260     : ---------1----1------1-----
260     : ['didNotPromise(acceptor0)', 'leader(proposer2)', 'promise(acceptor2,proposer0)']
261     : ---------1--1----------1---
261     : ['didNotPromise(acceptor0)', 'leader(proposer0)', 'promise(acceptor2,proposer2)']
262     : ---------1---1-------1-----
262     : ['didNotPromise(acceptor0)', 'leader(proposer1)', 'promise(acceptor2,proposer0)']
263     : ---------1--1---------1----
263     : ['didNotPromise(acceptor0)', 'leader(proposer0)', 'promise(acceptor2,proposer1)']
264     : ---------1----1----1-------
264     : ['didNotPromise(acceptor0)', 'leader(proposer2)', 'promise(acceptor1,proposer1)']
265     : ---------1---1------1------
265     : ['didNotPromise(acceptor0)', 'leader(proposer1)', 'promise(acceptor1,proposer2)']
266     : ---------1----1---1--------
266     : ['didNotPromise(acceptor0)', 'leader(proposer2)', 'promise(acceptor1,proposer0)']
267     : ---------1--1-------1------
267     : ['didNotPromise(acceptor0)', 'leader(proposer0)', 'promise(acceptor1,proposer2)']
268     : ---------1---1----1--------
268     : ['didNotPromise(acceptor0)', 'leader(proposer1)', 'promise(acceptor1,proposer0)']
269     : ---------1--1------1-------
269     : ['didNotPromise(acceptor0)', 'leader(proposer0)', 'promise(acceptor1,proposer1)']
270     : ----------1---1-------1----
270     : ['didNotPromise(acceptor1)', 'leader(proposer2)', 'promise(acceptor2,proposer1)']
271     : ----------1--1---------1---
271     : ['didNotPromise(acceptor1)', 'leader(proposer1)', 'promise(acceptor2,proposer2)']
272     : ----------1---1------1-----
272     : ['didNotPromise(acceptor1)', 'leader(proposer2)', 'promise(acceptor2,proposer0)']
273     : ----------1-1----------1---
273     : ['didNotPromise(acceptor1)', 'leader(proposer0)', 'promise(acceptor2,proposer2)']
274     : ----------1--1-------1-----
274     : ['didNotPromise(acceptor1)', 'leader(proposer1)', 'promise(acceptor2,proposer0)']
275     : ----------1-1---------1----
275     : ['didNotPromise(acceptor1)', 'leader(proposer0)', 'promise(acceptor2,proposer1)']
276     : ----------1---1-1----------
276     : ['didNotPromise(acceptor1)', 'leader(proposer2)', 'promise(acceptor0,proposer1)']
277     : ----------1--1---1---------
277     : ['didNotPromise(acceptor1)', 'leader(proposer1)', 'promise(acceptor0,proposer2)']
278     : ----------1---11-----------
278     : ['didNotPromise(acceptor1)', 'leader(proposer2)', 'promise(acceptor0,proposer0)']
279     : ----------1-1----1---------
279     : ['didNotPromise(acceptor1)', 'leader(proposer0)', 'promise(acceptor0,proposer2)']
280     : ----------1--1-1-----------
280     : ['didNotPromise(acceptor1)', 'leader(proposer1)', 'promise(acceptor0,proposer0)']
281     : ----------1-1---1----------
281     : ['didNotPromise(acceptor1)', 'leader(proposer0)', 'promise(acceptor0,proposer1)']
282     : -----------1--1----1-------
282     : ['didNotPromise(acceptor2)', 'leader(proposer2)', 'promise(acceptor1,proposer1)']
283     : -----------1-1------1------
283     : ['didNotPromise(acceptor2)', 'leader(proposer1)', 'promise(acceptor1,proposer2)']
284     : -----------1--1---1--------
284     : ['didNotPromise(acceptor2)', 'leader(proposer2)', 'promise(acceptor1,proposer0)']
285     : -----------11-------1------
285     : ['didNotPromise(acceptor2)', 'leader(proposer0)', 'promise(acceptor1,proposer2)']
286     : -----------1-1----1--------
286     : ['didNotPromise(acceptor2)', 'leader(proposer1)', 'promise(acceptor1,proposer0)']
287     : -----------11------1-------
287     : ['didNotPromise(acceptor2)', 'leader(proposer0)', 'promise(acceptor1,proposer1)']
288     : -----------1--1-1----------
288     : ['didNotPromise(acceptor2)', 'leader(proposer2)', 'promise(acceptor0,proposer1)']
289     : -----------1-1---1---------
289     : ['didNotPromise(acceptor2)', 'leader(proposer1)', 'promise(acceptor0,proposer2)']
290     : -----------1--11-----------
290     : ['didNotPromise(acceptor2)', 'leader(proposer2)', 'promise(acceptor0,proposer0)']
291     : -----------11----1---------
291     : ['didNotPromise(acceptor2)', 'leader(proposer0)', 'promise(acceptor0,proposer2)']
292     : -----------1-1-1-----------
292     : ['didNotPromise(acceptor2)', 'leader(proposer1)', 'promise(acceptor0,proposer0)']
293     : -----------11---1----------
293     : ['didNotPromise(acceptor2)', 'leader(proposer0)', 'promise(acceptor0,proposer1)']
num_forall :   4
num_exists :   0
num_literals : 5
quantified form : forall PROPOSER1,ACCEPTOR1,PROPOSER0,ACCEPTOR0. ~didNotPromise(ACCEPTOR0) | ~promise(ACCEPTOR1,PROPOSER1) | ~leader(PROPOSER0) | (PROPOSER0 = PROPOSER1 | ACCEPTOR0 = ACCEPTOR1)
qcost : 9




=== Prime Orbit 18 =====================
size : 9
num_suborbits: 1
321 (*) : --------0-----1--0---------
321     : ['leader(proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~promise(acceptor0,proposer2)']
322     : -------0-----1--0----------
322     : ['leader(proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~promise(acceptor0,proposer1)']
323     : ------0-----1--0-----------
323     : ['leader(proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~promise(acceptor0,proposer0)']
324     : -----0--------1-----0------
324     : ['leader(proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~promise(acceptor1,proposer2)']
325     : ----0--------1-----0-------
325     : ['leader(proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~promise(acceptor1,proposer1)']
326     : ---0--------1-----0--------
326     : ['leader(proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~promise(acceptor1,proposer0)']
327     : --0-----------1--------0---
327     : ['leader(proposer2)', '~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~promise(acceptor2,proposer2)']
328     : -0-----------1--------0----
328     : ['leader(proposer1)', '~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~promise(acceptor2,proposer1)']
329     : 0-----------1--------0-----
329     : ['leader(proposer0)', '~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~promise(acceptor2,proposer0)']
num_forall :   3
num_exists :   0
num_literals : 4
quantified form : forall QUORUM0,PROPOSER0,ACCEPTOR0. promise(ACCEPTOR0,PROPOSER0) | ~leader(PROPOSER0) | member(ACCEPTOR0,QUORUM0) | chosenAt(QUORUM0,PROPOSER0)
qcost : 7




=== Prime Orbit 19 =====================
size : 9
num_suborbits: 1
330 (*) : --------------1--0-----0---
330     : ['leader(proposer2)', '~promise(acceptor0,proposer2)', '~promise(acceptor2,proposer2)']
331     : -------------1--0-----0----
331     : ['leader(proposer1)', '~promise(acceptor0,proposer1)', '~promise(acceptor2,proposer1)']
332     : ------------1--0-----0-----
332     : ['leader(proposer0)', '~promise(acceptor0,proposer0)', '~promise(acceptor2,proposer0)']
333     : --------------1--0--0------
333     : ['leader(proposer2)', '~promise(acceptor0,proposer2)', '~promise(acceptor1,proposer2)']
334     : -------------1--0--0-------
334     : ['leader(proposer1)', '~promise(acceptor0,proposer1)', '~promise(acceptor1,proposer1)']
335     : ------------1--0--0--------
335     : ['leader(proposer0)', '~promise(acceptor0,proposer0)', '~promise(acceptor1,proposer0)']
336     : --------------1-----0--0---
336     : ['leader(proposer2)', '~promise(acceptor1,proposer2)', '~promise(acceptor2,proposer2)']
337     : -------------1-----0--0----
337     : ['leader(proposer1)', '~promise(acceptor1,proposer1)', '~promise(acceptor2,proposer1)']
338     : ------------1-----0--0-----
338     : ['leader(proposer0)', '~promise(acceptor1,proposer0)', '~promise(acceptor2,proposer0)']
num_forall :   3
num_exists :   0
num_literals : 4
quantified form : forall ACCEPTOR1,PROPOSER0,ACCEPTOR0. ~leader(PROPOSER0) | promise(ACCEPTOR1,PROPOSER0) | promise(ACCEPTOR0,PROPOSER0) | ACCEPTOR0 = ACCEPTOR1
qcost : 7




=== Prime Orbit 20 =====================
size : 9
num_suborbits: 1
339 (*) : --0--------1--1------------
339     : ['didNotPromise(acceptor2)', 'leader(proposer2)', '~chosenAt(quorum__acceptor0_acceptor1,proposer2)']
340     : -0---------1-1-------------
340     : ['didNotPromise(acceptor2)', 'leader(proposer1)', '~chosenAt(quorum__acceptor0_acceptor1,proposer1)']
341     : 0----------11--------------
341     : ['didNotPromise(acceptor2)', 'leader(proposer0)', '~chosenAt(quorum__acceptor0_acceptor1,proposer0)']
342     : -----0----1---1------------
342     : ['didNotPromise(acceptor1)', 'leader(proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)']
343     : ----0-----1--1-------------
343     : ['didNotPromise(acceptor1)', 'leader(proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)']
344     : ---0------1-1--------------
344     : ['didNotPromise(acceptor1)', 'leader(proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)']
345     : --------01----1------------
345     : ['didNotPromise(acceptor0)', 'leader(proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)']
346     : -------0-1---1-------------
346     : ['didNotPromise(acceptor0)', 'leader(proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)']
347     : ------0--1--1--------------
347     : ['didNotPromise(acceptor0)', 'leader(proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)']
num_forall :   3
num_exists :   0
num_literals : 4
quantified form : forall QUORUM0,PROPOSER0,ACCEPTOR0. ~didNotPromise(ACCEPTOR0) | ~leader(PROPOSER0) | member(ACCEPTOR0,QUORUM0) | chosenAt(QUORUM0,PROPOSER0)
qcost : 7




=== Prime Orbit 21 =====================
size : 18
num_suborbits: 1
348 (*) : -----------1--1-----0------
348     : ['didNotPromise(acceptor2)', 'leader(proposer2)', '~promise(acceptor1,proposer2)']
349     : -----------1-1-----0-------
349     : ['didNotPromise(acceptor2)', 'leader(proposer1)', '~promise(acceptor1,proposer1)']
350     : -----------11-----0--------
350     : ['didNotPromise(acceptor2)', 'leader(proposer0)', '~promise(acceptor1,proposer0)']
351     : ----------1---1--------0---
351     : ['didNotPromise(acceptor1)', 'leader(proposer2)', '~promise(acceptor2,proposer2)']
352     : ----------1--1--------0----
352     : ['didNotPromise(acceptor1)', 'leader(proposer1)', '~promise(acceptor2,proposer1)']
353     : ----------1-1--------0-----
353     : ['didNotPromise(acceptor1)', 'leader(proposer0)', '~promise(acceptor2,proposer0)']
354     : -----------1--1--0---------
354     : ['didNotPromise(acceptor2)', 'leader(proposer2)', '~promise(acceptor0,proposer2)']
355     : -----------1-1--0----------
355     : ['didNotPromise(acceptor2)', 'leader(proposer1)', '~promise(acceptor0,proposer1)']
356     : -----------11--0-----------
356     : ['didNotPromise(acceptor2)', 'leader(proposer0)', '~promise(acceptor0,proposer0)']
357     : ---------1----1--------0---
357     : ['didNotPromise(acceptor0)', 'leader(proposer2)', '~promise(acceptor2,proposer2)']
358     : ---------1---1--------0----
358     : ['didNotPromise(acceptor0)', 'leader(proposer1)', '~promise(acceptor2,proposer1)']
359     : ---------1--1--------0-----
359     : ['didNotPromise(acceptor0)', 'leader(proposer0)', '~promise(acceptor2,proposer0)']
360     : ----------1---1--0---------
360     : ['didNotPromise(acceptor1)', 'leader(proposer2)', '~promise(acceptor0,proposer2)']
361     : ----------1--1--0----------
361     : ['didNotPromise(acceptor1)', 'leader(proposer1)', '~promise(acceptor0,proposer1)']
362     : ----------1-1--0-----------
362     : ['didNotPromise(acceptor1)', 'leader(proposer0)', '~promise(acceptor0,proposer0)']
363     : ---------1----1-----0------
363     : ['didNotPromise(acceptor0)', 'leader(proposer2)', '~promise(acceptor1,proposer2)']
364     : ---------1---1-----0-------
364     : ['didNotPromise(acceptor0)', 'leader(proposer1)', '~promise(acceptor1,proposer1)']
365     : ---------1--1-----0--------
365     : ['didNotPromise(acceptor0)', 'leader(proposer0)', '~promise(acceptor1,proposer0)']
num_forall :   3
num_exists :   0
num_literals : 4
quantified form : forall ACCEPTOR1,PROPOSER0,ACCEPTOR0. ~didNotPromise(ACCEPTOR0) | ~leader(PROPOSER0) | promise(ACCEPTOR1,PROPOSER0) | ACCEPTOR0 = ACCEPTOR1
qcost : 7




=== Prime Orbit 22 =====================
size : 9
num_suborbits: 1
366 (*) : ---------1-11--------------
366     : ['didNotPromise(acceptor0)', 'didNotPromise(acceptor2)', 'leader(proposer0)']
367     : ---------1-1-1-------------
367     : ['didNotPromise(acceptor0)', 'didNotPromise(acceptor2)', 'leader(proposer1)']
368     : ---------1-1--1------------
368     : ['didNotPromise(acceptor0)', 'didNotPromise(acceptor2)', 'leader(proposer2)']
369     : ---------11-1--------------
369     : ['didNotPromise(acceptor0)', 'didNotPromise(acceptor1)', 'leader(proposer0)']
370     : ---------11--1-------------
370     : ['didNotPromise(acceptor0)', 'didNotPromise(acceptor1)', 'leader(proposer1)']
371     : ---------11---1------------
371     : ['didNotPromise(acceptor0)', 'didNotPromise(acceptor1)', 'leader(proposer2)']
372     : ----------111--------------
372     : ['didNotPromise(acceptor1)', 'didNotPromise(acceptor2)', 'leader(proposer0)']
373     : ----------11-1-------------
373     : ['didNotPromise(acceptor1)', 'didNotPromise(acceptor2)', 'leader(proposer1)']
374     : ----------11--1------------
374     : ['didNotPromise(acceptor1)', 'didNotPromise(acceptor2)', 'leader(proposer2)']
num_forall :   3
num_exists :   0
num_literals : 4
quantified form : forall ACCEPTOR1,PROPOSER0,ACCEPTOR0. ~didNotPromise(ACCEPTOR0) | ~leader(PROPOSER0) | ~didNotPromise(ACCEPTOR1) | ACCEPTOR0 = ACCEPTOR1
qcost : 7




=== Prime Orbit 23 =====================
size : 9
num_suborbits: 1
375 (*) : -0-----0-----1-----1-------
375     : ['leader(proposer1)', 'promise(acceptor1,proposer1)', '~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)']
376     : --0-----0-----1-----1------
376     : ['leader(proposer2)', 'promise(acceptor1,proposer2)', '~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)']
377     : 0-----0-----1-----1--------
377     : ['leader(proposer0)', 'promise(acceptor1,proposer0)', '~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)']
378     : ----0--0-----1--------1----
378     : ['leader(proposer1)', 'promise(acceptor2,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)']
379     : -----0--0-----1--------1---
379     : ['leader(proposer2)', 'promise(acceptor2,proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)']
380     : ---0--0-----1--------1-----
380     : ['leader(proposer0)', 'promise(acceptor2,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)']
381     : -0--0--------1--1----------
381     : ['leader(proposer1)', 'promise(acceptor0,proposer1)', '~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)']
382     : --0--0--------1--1---------
382     : ['leader(proposer2)', 'promise(acceptor0,proposer2)', '~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)']
383     : 0--0--------1--1-----------
383     : ['leader(proposer0)', 'promise(acceptor0,proposer0)', '~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)']
num_forall :   4
num_exists :   0
num_literals : 7
quantified form : forall QUORUM1,PROPOSER0,QUORUM0,ACCEPTOR0. chosenAt(QUORUM1,PROPOSER0) | ~member(ACCEPTOR0,QUORUM0) | ~promise(ACCEPTOR0,PROPOSER0) | ~leader(PROPOSER0) | chosenAt(QUORUM0,PROPOSER0) | ~member(ACCEPTOR0,QUORUM1) | QUORUM0 = QUORUM1
qcost : 11




=== Prime Orbit 24 =====================
size : 9
num_suborbits: 1
384 (*) : -----------0----------000--
384     : ['~didNotPromise(acceptor2)', '~promise(acceptor2,proposer1)', '~promise(acceptor2,proposer2)', '~start(proposer0)']
385     : -----------0---------0-0-0-
385     : ['~didNotPromise(acceptor2)', '~promise(acceptor2,proposer0)', '~promise(acceptor2,proposer2)', '~start(proposer1)']
386     : -----------0---------00---0
386     : ['~didNotPromise(acceptor2)', '~promise(acceptor2,proposer0)', '~promise(acceptor2,proposer1)', '~start(proposer2)']
387     : ----------0--------00---0--
387     : ['~didNotPromise(acceptor1)', '~promise(acceptor1,proposer1)', '~promise(acceptor1,proposer2)', '~start(proposer0)']
388     : ----------0-------0-0----0-
388     : ['~didNotPromise(acceptor1)', '~promise(acceptor1,proposer0)', '~promise(acceptor1,proposer2)', '~start(proposer1)']
389     : ----------0-------00------0
389     : ['~didNotPromise(acceptor1)', '~promise(acceptor1,proposer0)', '~promise(acceptor1,proposer1)', '~start(proposer2)']
390     : ---------0------00------0--
390     : ['~didNotPromise(acceptor0)', '~promise(acceptor0,proposer1)', '~promise(acceptor0,proposer2)', '~start(proposer0)']
391     : ---------0-----0-0-------0-
391     : ['~didNotPromise(acceptor0)', '~promise(acceptor0,proposer0)', '~promise(acceptor0,proposer2)', '~start(proposer1)']
392     : ---------0-----00---------0
392     : ['~didNotPromise(acceptor0)', '~promise(acceptor0,proposer0)', '~promise(acceptor0,proposer1)', '~start(proposer2)']
num_forall :   2
num_exists :   1
num_literals : 4
quantified form : forall PROPOSER1,ACCEPTOR0. didNotPromise(ACCEPTOR0) | start(PROPOSER1) | (exists PROPOSER0. (promise(ACCEPTOR0,PROPOSER0) & PROPOSER0 ~= PROPOSER1))
qcost : 7




=== Prime Orbit 25 =====================
size : 9
num_suborbits: 1
393 (*) : -----------0-----------000-
393     : ['~didNotPromise(acceptor2)', '~promise(acceptor2,proposer2)', '~start(proposer0)', '~start(proposer1)']
394     : -----------0----------0-0-0
394     : ['~didNotPromise(acceptor2)', '~promise(acceptor2,proposer1)', '~start(proposer0)', '~start(proposer2)']
395     : -----------0---------0---00
395     : ['~didNotPromise(acceptor2)', '~promise(acceptor2,proposer0)', '~start(proposer1)', '~start(proposer2)']
396     : ----------0---------0---00-
396     : ['~didNotPromise(acceptor1)', '~promise(acceptor1,proposer2)', '~start(proposer0)', '~start(proposer1)']
397     : ----------0--------0----0-0
397     : ['~didNotPromise(acceptor1)', '~promise(acceptor1,proposer1)', '~start(proposer0)', '~start(proposer2)']
398     : ----------0-------0------00
398     : ['~didNotPromise(acceptor1)', '~promise(acceptor1,proposer0)', '~start(proposer1)', '~start(proposer2)']
399     : ---------0-------0------00-
399     : ['~didNotPromise(acceptor0)', '~promise(acceptor0,proposer2)', '~start(proposer0)', '~start(proposer1)']
400     : ---------0------0-------0-0
400     : ['~didNotPromise(acceptor0)', '~promise(acceptor0,proposer1)', '~start(proposer0)', '~start(proposer2)']
401     : ---------0-----0---------00
401     : ['~didNotPromise(acceptor0)', '~promise(acceptor0,proposer0)', '~start(proposer1)', '~start(proposer2)']
num_forall :   2
num_exists :   1
num_literals : 4
quantified form : forall PROPOSER1,ACCEPTOR0. didNotPromise(ACCEPTOR0) | promise(ACCEPTOR0,PROPOSER1) | (exists PROPOSER0. (start(PROPOSER0) & PROPOSER0 ~= PROPOSER1))
qcost : 7




=== Prime Orbit 26 =====================
size : 3
num_suborbits: 1
402 (*) : -----------0------------000
402     : ['~didNotPromise(acceptor2)', '~start(proposer0)', '~start(proposer1)', '~start(proposer2)']
403     : ----------0-------------000
403     : ['~didNotPromise(acceptor1)', '~start(proposer0)', '~start(proposer1)', '~start(proposer2)']
404     : ---------0--------------000
404     : ['~didNotPromise(acceptor0)', '~start(proposer0)', '~start(proposer1)', '~start(proposer2)']
num_forall :   1
num_exists :   1
num_literals : 2
quantified form : forall ACCEPTOR0. (exists PROPOSER0. didNotPromise(ACCEPTOR0) | start(PROPOSER0))
qcost : 4




=== Prime Orbit 28 =====================
size : 3
num_suborbits: 1
408 (*) : -0--0--0-----1-------------
408     : ['leader(proposer1)', '~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)']
409     : --0--0--0-----1------------
409     : ['leader(proposer2)', '~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)']
410     : 0--0--0-----1--------------
410     : ['leader(proposer0)', '~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)']
num_forall :   1
num_exists :   1
num_literals : 2
quantified form : forall PROPOSER0. (exists QUORUM0. ~leader(PROPOSER0) | chosenAt(QUORUM0,PROPOSER0))
qcost : 4




=== Prime Orbit 30 =====================
size : 36
num_suborbits: 1
429 (*) : 0--------0------0-1-------0
429     : ['promise(acceptor1,proposer0)', '~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~didNotPromise(acceptor0)', '~promise(acceptor0,proposer1)', '~start(proposer2)']
430     : 0--------0-------01------0-
430     : ['promise(acceptor1,proposer0)', '~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~didNotPromise(acceptor0)', '~promise(acceptor0,proposer2)', '~start(proposer1)']
431     : -0-------0-----0---1------0
431     : ['promise(acceptor1,proposer1)', '~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~didNotPromise(acceptor0)', '~promise(acceptor0,proposer0)', '~start(proposer2)']
432     : -0-------0-------0-1----0--
432     : ['promise(acceptor1,proposer1)', '~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~didNotPromise(acceptor0)', '~promise(acceptor0,proposer2)', '~start(proposer0)']
433     : --0------0-----0----1----0-
433     : ['promise(acceptor1,proposer2)', '~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~didNotPromise(acceptor0)', '~promise(acceptor0,proposer0)', '~start(proposer1)']
434     : --0------0------0---1---0--
434     : ['promise(acceptor1,proposer2)', '~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~didNotPromise(acceptor0)', '~promise(acceptor0,proposer1)', '~start(proposer0)']
435     : ---0-----0------0----1----0
435     : ['promise(acceptor2,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~didNotPromise(acceptor0)', '~promise(acceptor0,proposer1)', '~start(proposer2)']
436     : ---0-----0-------0---1---0-
436     : ['promise(acceptor2,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~didNotPromise(acceptor0)', '~promise(acceptor0,proposer2)', '~start(proposer1)']
437     : ----0----0-----0------1---0
437     : ['promise(acceptor2,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~didNotPromise(acceptor0)', '~promise(acceptor0,proposer0)', '~start(proposer2)']
438     : ----0----0-------0----1-0--
438     : ['promise(acceptor2,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~didNotPromise(acceptor0)', '~promise(acceptor0,proposer2)', '~start(proposer0)']
439     : -----0---0-----0-------1-0-
439     : ['promise(acceptor2,proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~didNotPromise(acceptor0)', '~promise(acceptor0,proposer0)', '~start(proposer1)']
440     : -----0---0------0------10--
440     : ['promise(acceptor2,proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~didNotPromise(acceptor0)', '~promise(acceptor0,proposer1)', '~start(proposer0)']
441     : 0---------0----1---0------0
441     : ['promise(acceptor0,proposer0)', '~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~didNotPromise(acceptor1)', '~promise(acceptor1,proposer1)', '~start(proposer2)']
442     : 0---------0----1----0----0-
442     : ['promise(acceptor0,proposer0)', '~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~didNotPromise(acceptor1)', '~promise(acceptor1,proposer2)', '~start(proposer1)']
443     : -0--------0-----1-0-------0
443     : ['promise(acceptor0,proposer1)', '~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~didNotPromise(acceptor1)', '~promise(acceptor1,proposer0)', '~start(proposer2)']
444     : -0--------0-----1---0---0--
444     : ['promise(acceptor0,proposer1)', '~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~didNotPromise(acceptor1)', '~promise(acceptor1,proposer2)', '~start(proposer0)']
445     : --0-------0------10------0-
445     : ['promise(acceptor0,proposer2)', '~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~didNotPromise(acceptor1)', '~promise(acceptor1,proposer0)', '~start(proposer1)']
446     : --0-------0------1-0----0--
446     : ['promise(acceptor0,proposer2)', '~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~didNotPromise(acceptor1)', '~promise(acceptor1,proposer1)', '~start(proposer0)']
447     : ------0---0--------0-1----0
447     : ['promise(acceptor2,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor1)', '~promise(acceptor1,proposer1)', '~start(proposer2)']
448     : ------0---0---------01---0-
448     : ['promise(acceptor2,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor1)', '~promise(acceptor1,proposer2)', '~start(proposer1)']
449     : -------0--0-------0---1---0
449     : ['promise(acceptor2,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor1)', '~promise(acceptor1,proposer0)', '~start(proposer2)']
450     : -------0--0---------0-1-0--
450     : ['promise(acceptor2,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor1)', '~promise(acceptor1,proposer2)', '~start(proposer0)']
451     : --------0-0-------0----1-0-
451     : ['promise(acceptor2,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor1)', '~promise(acceptor1,proposer0)', '~start(proposer1)']
452     : --------0-0--------0---10--
452     : ['promise(acceptor2,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor1)', '~promise(acceptor1,proposer1)', '~start(proposer0)']
453     : ---0-------0---1------0---0
453     : ['promise(acceptor0,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~didNotPromise(acceptor2)', '~promise(acceptor2,proposer1)', '~start(proposer2)']
454     : ---0-------0---1-------0-0-
454     : ['promise(acceptor0,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~didNotPromise(acceptor2)', '~promise(acceptor2,proposer2)', '~start(proposer1)']
455     : ----0------0----1----0----0
455     : ['promise(acceptor0,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~didNotPromise(acceptor2)', '~promise(acceptor2,proposer0)', '~start(proposer2)']
456     : ----0------0----1------00--
456     : ['promise(acceptor0,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~didNotPromise(acceptor2)', '~promise(acceptor2,proposer2)', '~start(proposer0)']
457     : -----0-----0-----1---0---0-
457     : ['promise(acceptor0,proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~didNotPromise(acceptor2)', '~promise(acceptor2,proposer0)', '~start(proposer1)']
458     : -----0-----0-----1----0-0--
458     : ['promise(acceptor0,proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~didNotPromise(acceptor2)', '~promise(acceptor2,proposer1)', '~start(proposer0)']
459     : ------0----0------1---0---0
459     : ['promise(acceptor1,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor2)', '~promise(acceptor2,proposer1)', '~start(proposer2)']
460     : ------0----0------1----0-0-
460     : ['promise(acceptor1,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor2)', '~promise(acceptor2,proposer2)', '~start(proposer1)']
461     : -------0---0-------1-0----0
461     : ['promise(acceptor1,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor2)', '~promise(acceptor2,proposer0)', '~start(proposer2)']
462     : -------0---0-------1---00--
462     : ['promise(acceptor1,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor2)', '~promise(acceptor2,proposer2)', '~start(proposer0)']
463     : --------0--0--------10---0-
463     : ['promise(acceptor1,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor2)', '~promise(acceptor2,proposer0)', '~start(proposer1)']
464     : --------0--0--------1-0-0--
464     : ['promise(acceptor1,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor2)', '~promise(acceptor2,proposer1)', '~start(proposer0)']
num_forall :   6
num_exists :   0
num_literals : 11
quantified form : forall ACCEPTOR1,PROPOSER0,PROPOSER2,ACCEPTOR0,PROPOSER1,QUORUM0. ~promise(ACCEPTOR1,PROPOSER0) | ~member(ACCEPTOR0,QUORUM0) | didNotPromise(ACCEPTOR0) | chosenAt(QUORUM0,PROPOSER0) | promise(ACCEPTOR0,PROPOSER1) | start(PROPOSER2) | ~member(ACCEPTOR1,QUORUM0) | (PROPOSER0 = PROPOSER2 | PROPOSER0 = PROPOSER1 | PROPOSER1 = PROPOSER2 | ACCEPTOR0 = ACCEPTOR1)
qcost : 17




=== Prime Orbit 31 =====================
size : 18
num_suborbits: 1
465 (*) : 0--------0--------1------00
465     : ['promise(acceptor1,proposer0)', '~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~didNotPromise(acceptor0)', '~start(proposer1)', '~start(proposer2)']
466     : -0-------0---------1----0-0
466     : ['promise(acceptor1,proposer1)', '~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~didNotPromise(acceptor0)', '~start(proposer0)', '~start(proposer2)']
467     : --0------0----------1---00-
467     : ['promise(acceptor1,proposer2)', '~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~didNotPromise(acceptor0)', '~start(proposer0)', '~start(proposer1)']
468     : ---0-----0-----------1---00
468     : ['promise(acceptor2,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~didNotPromise(acceptor0)', '~start(proposer1)', '~start(proposer2)']
469     : ----0----0------------1-0-0
469     : ['promise(acceptor2,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~didNotPromise(acceptor0)', '~start(proposer0)', '~start(proposer2)']
470     : -----0---0-------------100-
470     : ['promise(acceptor2,proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~didNotPromise(acceptor0)', '~start(proposer0)', '~start(proposer1)']
471     : 0---------0----1---------00
471     : ['promise(acceptor0,proposer0)', '~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~didNotPromise(acceptor1)', '~start(proposer1)', '~start(proposer2)']
472     : -0--------0-----1-------0-0
472     : ['promise(acceptor0,proposer1)', '~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~didNotPromise(acceptor1)', '~start(proposer0)', '~start(proposer2)']
473     : --0-------0------1------00-
473     : ['promise(acceptor0,proposer2)', '~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~didNotPromise(acceptor1)', '~start(proposer0)', '~start(proposer1)']
474     : ------0---0----------1---00
474     : ['promise(acceptor2,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor1)', '~start(proposer1)', '~start(proposer2)']
475     : -------0--0-----------1-0-0
475     : ['promise(acceptor2,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor1)', '~start(proposer0)', '~start(proposer2)']
476     : --------0-0------------100-
476     : ['promise(acceptor2,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor1)', '~start(proposer0)', '~start(proposer1)']
477     : ---0-------0---1---------00
477     : ['promise(acceptor0,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~didNotPromise(acceptor2)', '~start(proposer1)', '~start(proposer2)']
478     : ----0------0----1-------0-0
478     : ['promise(acceptor0,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~didNotPromise(acceptor2)', '~start(proposer0)', '~start(proposer2)']
479     : -----0-----0-----1------00-
479     : ['promise(acceptor0,proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~didNotPromise(acceptor2)', '~start(proposer0)', '~start(proposer1)']
480     : ------0----0------1------00
480     : ['promise(acceptor1,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor2)', '~start(proposer1)', '~start(proposer2)']
481     : -------0---0-------1----0-0
481     : ['promise(acceptor1,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor2)', '~start(proposer0)', '~start(proposer2)']
482     : --------0--0--------1---00-
482     : ['promise(acceptor1,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor2)', '~start(proposer0)', '~start(proposer1)']
num_forall :   4
num_exists :   1
num_literals : 8
quantified form : forall PROPOSER1,ACCEPTOR1,QUORUM0,ACCEPTOR0. ~member(ACCEPTOR0,QUORUM0) | ~promise(ACCEPTOR1,PROPOSER1) | didNotPromise(ACCEPTOR0) | chosenAt(QUORUM0,PROPOSER1) | ~member(ACCEPTOR1,QUORUM0) | (exists PROPOSER0. (start(PROPOSER0) & PROPOSER0 ~= PROPOSER1)) | ACCEPTOR0 = ACCEPTOR1
qcost : 13




=== Prime Orbit 32 =====================
size : 18
num_suborbits: 1
483 (*) : 1-----0----0-------------00
483     : ['chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor2)', '~start(proposer1)', '~start(proposer2)']
484     : -1-----0---0------------0-0
484     : ['chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor2)', '~start(proposer0)', '~start(proposer2)']
485     : --1-----0--0------------00-
485     : ['chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor2)', '~start(proposer0)', '~start(proposer1)']
486     : ---1--0---0--------------00
486     : ['chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor1)', '~start(proposer1)', '~start(proposer2)']
487     : ----1--0--0-------------0-0
487     : ['chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor1)', '~start(proposer0)', '~start(proposer2)']
488     : -----1--0-0-------------00-
488     : ['chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor1)', '~start(proposer0)', '~start(proposer1)']
489     : 1--0-------0-------------00
489     : ['chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~didNotPromise(acceptor2)', '~start(proposer1)', '~start(proposer2)']
490     : -1--0------0------------0-0
490     : ['chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~didNotPromise(acceptor2)', '~start(proposer0)', '~start(proposer2)']
491     : --1--0-----0------------00-
491     : ['chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~didNotPromise(acceptor2)', '~start(proposer0)', '~start(proposer1)']
492     : ---0--1--0---------------00
492     : ['chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~didNotPromise(acceptor0)', '~start(proposer1)', '~start(proposer2)']
493     : ----0--1-0--------------0-0
493     : ['chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~didNotPromise(acceptor0)', '~start(proposer0)', '~start(proposer2)']
494     : -----0--10--------------00-
494     : ['chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~didNotPromise(acceptor0)', '~start(proposer0)', '~start(proposer1)']
495     : 0--1------0--------------00
495     : ['chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~didNotPromise(acceptor1)', '~start(proposer1)', '~start(proposer2)']
496     : -0--1-----0-------------0-0
496     : ['chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~didNotPromise(acceptor1)', '~start(proposer0)', '~start(proposer2)']
497     : --0--1----0-------------00-
497     : ['chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~didNotPromise(acceptor1)', '~start(proposer0)', '~start(proposer1)']
498     : 0-----1--0---------------00
498     : ['chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~didNotPromise(acceptor0)', '~start(proposer1)', '~start(proposer2)']
499     : -0-----1-0--------------0-0
499     : ['chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~didNotPromise(acceptor0)', '~start(proposer0)', '~start(proposer2)']
500     : --0-----10--------------00-
500     : ['chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~didNotPromise(acceptor0)', '~start(proposer0)', '~start(proposer1)']
num_forall :   4
num_exists :   1
num_literals : 8
quantified form : forall PROPOSER1,QUORUM1,QUORUM0,ACCEPTOR0. didNotPromise(ACCEPTOR0) | member(ACCEPTOR0,QUORUM0) | ~chosenAt(QUORUM0,PROPOSER1) | ~member(ACCEPTOR0,QUORUM1) | chosenAt(QUORUM1,PROPOSER1) | (exists PROPOSER0. (start(PROPOSER0) & PROPOSER0 ~= PROPOSER1)) | QUORUM0 = QUORUM1
qcost : 13




=== Prime Orbit 33 =====================
size : 36
num_suborbits: 1
501 (*) : 1--0-------0-----------0-0-
501     : ['chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~didNotPromise(acceptor2)', '~promise(acceptor2,proposer2)', '~start(proposer1)']
502     : 1--0-------0----------0---0
502     : ['chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~didNotPromise(acceptor2)', '~promise(acceptor2,proposer1)', '~start(proposer2)']
503     : -1--0------0-----------00--
503     : ['chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~didNotPromise(acceptor2)', '~promise(acceptor2,proposer2)', '~start(proposer0)']
504     : -1--0------0---------0----0
504     : ['chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~didNotPromise(acceptor2)', '~promise(acceptor2,proposer0)', '~start(proposer2)']
505     : --1--0-----0----------0-0--
505     : ['chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~didNotPromise(acceptor2)', '~promise(acceptor2,proposer1)', '~start(proposer0)']
506     : --1--0-----0---------0---0-
506     : ['chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~didNotPromise(acceptor2)', '~promise(acceptor2,proposer0)', '~start(proposer1)']
507     : 0--1------0---------0----0-
507     : ['chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~didNotPromise(acceptor1)', '~promise(acceptor1,proposer2)', '~start(proposer1)']
508     : 0--1------0--------0------0
508     : ['chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~didNotPromise(acceptor1)', '~promise(acceptor1,proposer1)', '~start(proposer2)']
509     : -0--1-----0---------0---0--
509     : ['chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~didNotPromise(acceptor1)', '~promise(acceptor1,proposer2)', '~start(proposer0)']
510     : -0--1-----0-------0-------0
510     : ['chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~didNotPromise(acceptor1)', '~promise(acceptor1,proposer0)', '~start(proposer2)']
511     : --0--1----0--------0----0--
511     : ['chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~didNotPromise(acceptor1)', '~promise(acceptor1,proposer1)', '~start(proposer0)']
512     : --0--1----0-------0------0-
512     : ['chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~didNotPromise(acceptor1)', '~promise(acceptor1,proposer0)', '~start(proposer1)']
513     : 1-----0----0-----------0-0-
513     : ['chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor2)', '~promise(acceptor2,proposer2)', '~start(proposer1)']
514     : 1-----0----0----------0---0
514     : ['chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor2)', '~promise(acceptor2,proposer1)', '~start(proposer2)']
515     : -1-----0---0-----------00--
515     : ['chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor2)', '~promise(acceptor2,proposer2)', '~start(proposer0)']
516     : -1-----0---0---------0----0
516     : ['chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor2)', '~promise(acceptor2,proposer0)', '~start(proposer2)']
517     : --1-----0--0----------0-0--
517     : ['chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor2)', '~promise(acceptor2,proposer1)', '~start(proposer0)']
518     : --1-----0--0---------0---0-
518     : ['chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor2)', '~promise(acceptor2,proposer0)', '~start(proposer1)']
519     : 0-----1--0-------0-------0-
519     : ['chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~didNotPromise(acceptor0)', '~promise(acceptor0,proposer2)', '~start(proposer1)']
520     : 0-----1--0------0---------0
520     : ['chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~didNotPromise(acceptor0)', '~promise(acceptor0,proposer1)', '~start(proposer2)']
521     : -0-----1-0-------0------0--
521     : ['chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~didNotPromise(acceptor0)', '~promise(acceptor0,proposer2)', '~start(proposer0)']
522     : -0-----1-0-----0----------0
522     : ['chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~didNotPromise(acceptor0)', '~promise(acceptor0,proposer0)', '~start(proposer2)']
523     : --0-----10------0-------0--
523     : ['chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~didNotPromise(acceptor0)', '~promise(acceptor0,proposer1)', '~start(proposer0)']
524     : --0-----10-----0---------0-
524     : ['chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~didNotPromise(acceptor0)', '~promise(acceptor0,proposer0)', '~start(proposer1)']
525     : ---1--0---0---------0----0-
525     : ['chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor1)', '~promise(acceptor1,proposer2)', '~start(proposer1)']
526     : ---1--0---0--------0------0
526     : ['chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor1)', '~promise(acceptor1,proposer1)', '~start(proposer2)']
527     : ----1--0--0---------0---0--
527     : ['chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor1)', '~promise(acceptor1,proposer2)', '~start(proposer0)']
528     : ----1--0--0-------0-------0
528     : ['chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor1)', '~promise(acceptor1,proposer0)', '~start(proposer2)']
529     : -----1--0-0--------0----0--
529     : ['chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor1)', '~promise(acceptor1,proposer1)', '~start(proposer0)']
530     : -----1--0-0-------0------0-
530     : ['chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor1)', '~promise(acceptor1,proposer0)', '~start(proposer1)']
531     : ---0--1--0-------0-------0-
531     : ['chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~didNotPromise(acceptor0)', '~promise(acceptor0,proposer2)', '~start(proposer1)']
532     : ---0--1--0------0---------0
532     : ['chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~didNotPromise(acceptor0)', '~promise(acceptor0,proposer1)', '~start(proposer2)']
533     : ----0--1-0-------0------0--
533     : ['chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~didNotPromise(acceptor0)', '~promise(acceptor0,proposer2)', '~start(proposer0)']
534     : ----0--1-0-----0----------0
534     : ['chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~didNotPromise(acceptor0)', '~promise(acceptor0,proposer0)', '~start(proposer2)']
535     : -----0--10------0-------0--
535     : ['chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~didNotPromise(acceptor0)', '~promise(acceptor0,proposer1)', '~start(proposer0)']
536     : -----0--10-----0---------0-
536     : ['chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~didNotPromise(acceptor0)', '~promise(acceptor0,proposer0)', '~start(proposer1)']
num_forall :   6
num_exists :   0
num_literals : 11
quantified form : forall QUORUM1,PROPOSER0,PROPOSER2,ACCEPTOR0,PROPOSER1,QUORUM0. chosenAt(QUORUM1,PROPOSER0) | didNotPromise(ACCEPTOR0) | member(ACCEPTOR0,QUORUM0) | ~chosenAt(QUORUM0,PROPOSER0) | promise(ACCEPTOR0,PROPOSER1) | start(PROPOSER2) | ~member(ACCEPTOR0,QUORUM1) | (PROPOSER0 = PROPOSER2 | PROPOSER0 = PROPOSER1 | PROPOSER1 = PROPOSER2 | QUORUM0 = QUORUM1)
qcost : 17




=== Prime Orbit 35 =====================
size : 9
num_suborbits: 1
555 (*) : ---0-----0-0-------------00
555     : ['~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor2)', '~start(proposer1)', '~start(proposer2)']
556     : ----0----0-0------------0-0
556     : ['~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor2)', '~start(proposer0)', '~start(proposer2)']
557     : -----0---0-0------------00-
557     : ['~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor2)', '~start(proposer0)', '~start(proposer1)']
558     : 0--------00--------------00
558     : ['~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~start(proposer1)', '~start(proposer2)']
559     : -0-------00-------------0-0
559     : ['~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~start(proposer0)', '~start(proposer2)']
560     : --0------00-------------00-
560     : ['~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~start(proposer0)', '~start(proposer1)']
561     : ------0---00-------------00
561     : ['~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~start(proposer1)', '~start(proposer2)']
562     : -------0--00------------0-0
562     : ['~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~start(proposer0)', '~start(proposer2)']
563     : --------0-00------------00-
563     : ['~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~start(proposer0)', '~start(proposer1)']
num_forall :   4
num_exists :   1
num_literals : 8
quantified form : forall PROPOSER1,ACCEPTOR1,QUORUM0,ACCEPTOR0. ~member(ACCEPTOR0,QUORUM0) | didNotPromise(ACCEPTOR0) | didNotPromise(ACCEPTOR1) | chosenAt(QUORUM0,PROPOSER1) | ~member(ACCEPTOR1,QUORUM0) | (exists PROPOSER0. (start(PROPOSER0) & PROPOSER0 ~= PROPOSER1)) | ACCEPTOR0 = ACCEPTOR1
qcost : 13




=== Prime Orbit 36 =====================
size : 18
num_suborbits: 1
564 (*) : --0------00----0--0------0-
564     : ['~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~promise(acceptor0,proposer0)', '~promise(acceptor1,proposer0)', '~start(proposer1)']
565     : -0-------00----0--0-------0
565     : ['~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~promise(acceptor0,proposer0)', '~promise(acceptor1,proposer0)', '~start(proposer2)']
566     : --0------00-----0--0----0--
566     : ['~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~promise(acceptor0,proposer1)', '~promise(acceptor1,proposer1)', '~start(proposer0)']
567     : 0--------00-----0--0------0
567     : ['~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~promise(acceptor0,proposer1)', '~promise(acceptor1,proposer1)', '~start(proposer2)']
568     : -0-------00------0--0---0--
568     : ['~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~promise(acceptor0,proposer2)', '~promise(acceptor1,proposer2)', '~start(proposer0)']
569     : 0--------00------0--0----0-
569     : ['~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~promise(acceptor0,proposer2)', '~promise(acceptor1,proposer2)', '~start(proposer1)']
570     : -----0---0-0---0-----0---0-
570     : ['~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor2)', '~promise(acceptor0,proposer0)', '~promise(acceptor2,proposer0)', '~start(proposer1)']
571     : ----0----0-0---0-----0----0
571     : ['~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor2)', '~promise(acceptor0,proposer0)', '~promise(acceptor2,proposer0)', '~start(proposer2)']
572     : -----0---0-0----0-----0-0--
572     : ['~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor2)', '~promise(acceptor0,proposer1)', '~promise(acceptor2,proposer1)', '~start(proposer0)']
573     : ---0-----0-0----0-----0---0
573     : ['~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor2)', '~promise(acceptor0,proposer1)', '~promise(acceptor2,proposer1)', '~start(proposer2)']
574     : ----0----0-0-----0-----00--
574     : ['~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor2)', '~promise(acceptor0,proposer2)', '~promise(acceptor2,proposer2)', '~start(proposer0)']
575     : ---0-----0-0-----0-----0-0-
575     : ['~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor2)', '~promise(acceptor0,proposer2)', '~promise(acceptor2,proposer2)', '~start(proposer1)']
576     : --------0-00------0--0---0-
576     : ['~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor1,proposer0)', '~promise(acceptor2,proposer0)', '~start(proposer1)']
577     : -------0--00------0--0----0
577     : ['~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor1,proposer0)', '~promise(acceptor2,proposer0)', '~start(proposer2)']
578     : --------0-00-------0--0-0--
578     : ['~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor1,proposer1)', '~promise(acceptor2,proposer1)', '~start(proposer0)']
579     : ------0---00-------0--0---0
579     : ['~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor1,proposer1)', '~promise(acceptor2,proposer1)', '~start(proposer2)']
580     : -------0--00--------0--00--
580     : ['~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor1,proposer2)', '~promise(acceptor2,proposer2)', '~start(proposer0)']
581     : ------0---00--------0--0-0-
581     : ['~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor1,proposer2)', '~promise(acceptor2,proposer2)', '~start(proposer1)']
num_forall :   6
num_exists :   0
num_literals : 12
quantified form : forall ACCEPTOR1,PROPOSER0,PROPOSER2,ACCEPTOR0,PROPOSER1,QUORUM0. ~member(ACCEPTOR0,QUORUM0) | promise(ACCEPTOR1,PROPOSER1) | didNotPromise(ACCEPTOR0) | start(PROPOSER2) | didNotPromise(ACCEPTOR1) | promise(ACCEPTOR0,PROPOSER1) | chosenAt(QUORUM0,PROPOSER0) | ~member(ACCEPTOR1,QUORUM0) | (PROPOSER0 = PROPOSER2 | PROPOSER0 = PROPOSER1 | PROPOSER1 = PROPOSER2 | ACCEPTOR0 = ACCEPTOR1)
qcost : 18




=== Prime Orbit 37 =====================
size : 18
num_suborbits: 1
582 (*) : --0--0---0----10---------0-
582     : ['leader(proposer2)', '~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~didNotPromise(acceptor0)', '~promise(acceptor0,proposer0)', '~start(proposer1)']
583     : -0--0----0---1-0----------0
583     : ['leader(proposer1)', '~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~didNotPromise(acceptor0)', '~promise(acceptor0,proposer0)', '~start(proposer2)']
584     : --0--0---0----1-0-------0--
584     : ['leader(proposer2)', '~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~didNotPromise(acceptor0)', '~promise(acceptor0,proposer1)', '~start(proposer0)']
585     : 0--0-----0--1---0---------0
585     : ['leader(proposer0)', '~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~didNotPromise(acceptor0)', '~promise(acceptor0,proposer1)', '~start(proposer2)']
586     : -0--0----0---1---0------0--
586     : ['leader(proposer1)', '~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~didNotPromise(acceptor0)', '~promise(acceptor0,proposer2)', '~start(proposer0)']
587     : 0--0-----0--1----0-------0-
587     : ['leader(proposer0)', '~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~didNotPromise(acceptor0)', '~promise(acceptor0,proposer2)', '~start(proposer1)']
588     : --0-----0-0---1---0------0-
588     : ['leader(proposer2)', '~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor1)', '~promise(acceptor1,proposer0)', '~start(proposer1)']
589     : -0-----0--0--1----0-------0
589     : ['leader(proposer1)', '~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor1)', '~promise(acceptor1,proposer0)', '~start(proposer2)']
590     : --0-----0-0---1----0----0--
590     : ['leader(proposer2)', '~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor1)', '~promise(acceptor1,proposer1)', '~start(proposer0)']
591     : 0-----0---0-1------0------0
591     : ['leader(proposer0)', '~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor1)', '~promise(acceptor1,proposer1)', '~start(proposer2)']
592     : -0-----0--0--1------0---0--
592     : ['leader(proposer1)', '~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor1)', '~promise(acceptor1,proposer2)', '~start(proposer0)']
593     : 0-----0---0-1-------0----0-
593     : ['leader(proposer0)', '~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor1)', '~promise(acceptor1,proposer2)', '~start(proposer1)']
594     : -----0--0--0--1------0---0-
594     : ['leader(proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor2)', '~promise(acceptor2,proposer0)', '~start(proposer1)']
595     : ----0--0---0-1-------0----0
595     : ['leader(proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor2)', '~promise(acceptor2,proposer0)', '~start(proposer2)']
596     : -----0--0--0--1-------0-0--
596     : ['leader(proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor2)', '~promise(acceptor2,proposer1)', '~start(proposer0)']
597     : ---0--0----01---------0---0
597     : ['leader(proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor2)', '~promise(acceptor2,proposer1)', '~start(proposer2)']
598     : ----0--0---0-1---------00--
598     : ['leader(proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor2)', '~promise(acceptor2,proposer2)', '~start(proposer0)']
599     : ---0--0----01----------0-0-
599     : ['leader(proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor2)', '~promise(acceptor2,proposer2)', '~start(proposer1)']
num_forall :   6
num_exists :   0
num_literals : 12
quantified form : forall QUORUM1,PROPOSER0,PROPOSER2,ACCEPTOR0,PROPOSER1,QUORUM0. chosenAt(QUORUM1,PROPOSER0) | ~member(ACCEPTOR0,QUORUM0) | didNotPromise(ACCEPTOR0) | start(PROPOSER2) | promise(ACCEPTOR0,PROPOSER1) | ~leader(PROPOSER0) | chosenAt(QUORUM0,PROPOSER0) | ~member(ACCEPTOR0,QUORUM1) | (PROPOSER0 = PROPOSER2 | PROPOSER0 = PROPOSER1 | PROPOSER1 = PROPOSER2 | QUORUM0 = QUORUM1)
qcost : 18




=== Prime Orbit 38 =====================
size : 18
num_suborbits: 1
600 (*) : --0---0---0------1---1---0-
600     : ['promise(acceptor0,proposer2)', 'promise(acceptor2,proposer0)', '~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor1)', '~start(proposer1)']
601     : -0----0---0-----1----1----0
601     : ['promise(acceptor0,proposer1)', 'promise(acceptor2,proposer0)', '~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor1)', '~start(proposer2)']
602     : --0----0--0------1----1-0--
602     : ['promise(acceptor0,proposer2)', 'promise(acceptor2,proposer1)', '~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor1)', '~start(proposer0)']
603     : 0------0--0----1------1---0
603     : ['promise(acceptor0,proposer0)', 'promise(acceptor2,proposer1)', '~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor1)', '~start(proposer2)']
604     : -0------0-0-----1------10--
604     : ['promise(acceptor0,proposer1)', 'promise(acceptor2,proposer2)', '~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor1)', '~start(proposer0)']
605     : 0-------0-0----1-------1-0-
605     : ['promise(acceptor0,proposer0)', 'promise(acceptor2,proposer2)', '~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor1)', '~start(proposer1)']
606     : -----00----0-----11------0-
606     : ['promise(acceptor0,proposer2)', 'promise(acceptor1,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor2)', '~start(proposer1)']
607     : ----0-0----0----1-1-------0
607     : ['promise(acceptor0,proposer1)', 'promise(acceptor1,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor2)', '~start(proposer2)']
608     : -----0-0---0-----1-1----0--
608     : ['promise(acceptor0,proposer2)', 'promise(acceptor1,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor2)', '~start(proposer0)']
609     : ---0---0---0---1---1------0
609     : ['promise(acceptor0,proposer0)', 'promise(acceptor1,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor2)', '~start(proposer2)']
610     : ----0---0--0----1---1---0--
610     : ['promise(acceptor0,proposer1)', 'promise(acceptor1,proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor2)', '~start(proposer0)']
611     : ---0----0--0---1----1----0-
611     : ['promise(acceptor0,proposer0)', 'promise(acceptor1,proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor2)', '~start(proposer1)']
612     : --00-----0----------11---0-
612     : ['promise(acceptor1,proposer2)', 'promise(acceptor2,proposer0)', '~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~didNotPromise(acceptor0)', '~start(proposer1)']
613     : -0-0-----0---------1-1----0
613     : ['promise(acceptor1,proposer1)', 'promise(acceptor2,proposer0)', '~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~didNotPromise(acceptor0)', '~start(proposer2)']
614     : --0-0----0----------1-1-0--
614     : ['promise(acceptor1,proposer2)', 'promise(acceptor2,proposer1)', '~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~didNotPromise(acceptor0)', '~start(proposer0)']
615     : 0---0----0--------1---1---0
615     : ['promise(acceptor1,proposer0)', 'promise(acceptor2,proposer1)', '~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~didNotPromise(acceptor0)', '~start(proposer2)']
616     : -0---0---0---------1---10--
616     : ['promise(acceptor1,proposer1)', 'promise(acceptor2,proposer2)', '~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~didNotPromise(acceptor0)', '~start(proposer0)']
617     : 0----0---0--------1----1-0-
617     : ['promise(acceptor1,proposer0)', 'promise(acceptor2,proposer2)', '~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~didNotPromise(acceptor0)', '~start(proposer1)']
num_forall :   8
num_exists :   0
num_literals : 19
quantified form : forall QUORUM1,ACCEPTOR2,ACCEPTOR1,PROPOSER0,PROPOSER2,ACCEPTOR0,PROPOSER1,QUORUM0. ~member(ACCEPTOR0,QUORUM0) | member(ACCEPTOR2,QUORUM0) | start(PROPOSER2) | didNotPromise(ACCEPTOR1) | member(ACCEPTOR0,QUORUM1) | ~promise(ACCEPTOR0,PROPOSER0) | ~member(ACCEPTOR2,QUORUM1) | ~member(ACCEPTOR1,QUORUM1) | chosenAt(QUORUM0,PROPOSER0) | ~promise(ACCEPTOR2,PROPOSER1) | ~member(ACCEPTOR1,QUORUM0) | chosenAt(QUORUM1,PROPOSER1) | (PROPOSER1 = PROPOSER2 | ACCEPTOR1 = ACCEPTOR2 | PROPOSER0 = PROPOSER1 | ACCEPTOR0 = ACCEPTOR2 | QUORUM0 = QUORUM1 | PROPOSER0 = PROPOSER2 | ACCEPTOR0 = ACCEPTOR1)
qcost : 27




=== Prime Orbit 39 =====================
size : 9
num_suborbits: 1
618 (*) : --0--0---0----1---------00-
618     : ['leader(proposer2)', '~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~didNotPromise(acceptor0)', '~start(proposer0)', '~start(proposer1)']
619     : -0--0----0---1----------0-0
619     : ['leader(proposer1)', '~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~didNotPromise(acceptor0)', '~start(proposer0)', '~start(proposer2)']
620     : 0--0-----0--1------------00
620     : ['leader(proposer0)', '~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~didNotPromise(acceptor0)', '~start(proposer1)', '~start(proposer2)']
621     : --0-----0-0---1---------00-
621     : ['leader(proposer2)', '~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor1)', '~start(proposer0)', '~start(proposer1)']
622     : -0-----0--0--1----------0-0
622     : ['leader(proposer1)', '~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor1)', '~start(proposer0)', '~start(proposer2)']
623     : 0-----0---0-1------------00
623     : ['leader(proposer0)', '~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor1)', '~start(proposer1)', '~start(proposer2)']
624     : -----0--0--0--1---------00-
624     : ['leader(proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor2)', '~start(proposer0)', '~start(proposer1)']
625     : ----0--0---0-1----------0-0
625     : ['leader(proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor2)', '~start(proposer0)', '~start(proposer2)']
626     : ---0--0----01------------00
626     : ['leader(proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor2)', '~start(proposer1)', '~start(proposer2)']
num_forall :   4
num_exists :   1
num_literals : 9
quantified form : forall PROPOSER1,QUORUM1,QUORUM0,ACCEPTOR0. ~member(ACCEPTOR0,QUORUM0) | didNotPromise(ACCEPTOR0) | chosenAt(QUORUM0,PROPOSER1) | ~leader(PROPOSER1) | ~member(ACCEPTOR0,QUORUM1) | chosenAt(QUORUM1,PROPOSER1) | (exists PROPOSER0. (start(PROPOSER0) & PROPOSER0 ~= PROPOSER1)) | QUORUM0 = QUORUM1
qcost : 14




=== Prime Orbit 40 =====================
size : 9
num_suborbits: 1
627 (*) : --0-----0-0---1---00-------
627     : ['leader(proposer2)', '~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor1)', '~promise(acceptor1,proposer0)', '~promise(acceptor1,proposer1)']
628     : -0-----0--0--1----0-0------
628     : ['leader(proposer1)', '~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor1)', '~promise(acceptor1,proposer0)', '~promise(acceptor1,proposer2)']
629     : 0-----0---0-1------00------
629     : ['leader(proposer0)', '~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor1)', '~promise(acceptor1,proposer1)', '~promise(acceptor1,proposer2)']
630     : -----0--0--0--1------00----
630     : ['leader(proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor2)', '~promise(acceptor2,proposer0)', '~promise(acceptor2,proposer1)']
631     : ----0--0---0-1-------0-0---
631     : ['leader(proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor2)', '~promise(acceptor2,proposer0)', '~promise(acceptor2,proposer2)']
632     : ---0--0----01---------00---
632     : ['leader(proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor2)', '~promise(acceptor2,proposer1)', '~promise(acceptor2,proposer2)']
633     : --0--0---0----100----------
633     : ['leader(proposer2)', '~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~didNotPromise(acceptor0)', '~promise(acceptor0,proposer0)', '~promise(acceptor0,proposer1)']
634     : -0--0----0---1-0-0---------
634     : ['leader(proposer1)', '~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~didNotPromise(acceptor0)', '~promise(acceptor0,proposer0)', '~promise(acceptor0,proposer2)']
635     : 0--0-----0--1---00---------
635     : ['leader(proposer0)', '~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~didNotPromise(acceptor0)', '~promise(acceptor0,proposer1)', '~promise(acceptor0,proposer2)']
num_forall :   4
num_exists :   1
num_literals : 9
quantified form : forall PROPOSER1,QUORUM1,QUORUM0,ACCEPTOR0. ~member(ACCEPTOR0,QUORUM0) | didNotPromise(ACCEPTOR0) | chosenAt(QUORUM0,PROPOSER1) | ~leader(PROPOSER1) | ~member(ACCEPTOR0,QUORUM1) | chosenAt(QUORUM1,PROPOSER1) | (exists PROPOSER0. (promise(ACCEPTOR0,PROPOSER0) & PROPOSER0 ~= PROPOSER1)) | QUORUM0 = QUORUM1
qcost : 14




=== Prime Orbit 42 =====================
size : 36
num_suborbits: 1
654 (*) : --0---0--00----0-----1---0-
654     : ['promise(acceptor2,proposer0)', '~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~promise(acceptor0,proposer0)', '~start(proposer1)']
655     : -0----0--00----0-----1----0
655     : ['promise(acceptor2,proposer0)', '~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~promise(acceptor0,proposer0)', '~start(proposer2)']
656     : --0----0-00-----0-----1-0--
656     : ['promise(acceptor2,proposer1)', '~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~promise(acceptor0,proposer1)', '~start(proposer0)']
657     : 0------0-00-----0-----1---0
657     : ['promise(acceptor2,proposer1)', '~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~promise(acceptor0,proposer1)', '~start(proposer2)']
658     : -0------000------0-----10--
658     : ['promise(acceptor2,proposer2)', '~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~promise(acceptor0,proposer2)', '~start(proposer0)']
659     : 0-------000------0-----1-0-
659     : ['promise(acceptor2,proposer2)', '~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~promise(acceptor0,proposer2)', '~start(proposer1)']
660     : -----00--0-0---0--1------0-
660     : ['promise(acceptor1,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor2)', '~promise(acceptor0,proposer0)', '~start(proposer1)']
661     : ----0-0--0-0---0--1-------0
661     : ['promise(acceptor1,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor2)', '~promise(acceptor0,proposer0)', '~start(proposer2)']
662     : -----0-0-0-0----0--1----0--
662     : ['promise(acceptor1,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor2)', '~promise(acceptor0,proposer1)', '~start(proposer0)']
663     : ---0---0-0-0----0--1------0
663     : ['promise(acceptor1,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor2)', '~promise(acceptor0,proposer1)', '~start(proposer2)']
664     : ----0---00-0-----0--1---0--
664     : ['promise(acceptor1,proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor2)', '~promise(acceptor0,proposer2)', '~start(proposer0)']
665     : ---0----00-0-----0--1----0-
665     : ['promise(acceptor1,proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor2)', '~promise(acceptor0,proposer2)', '~start(proposer1)']
666     : --00-----00-------0--1---0-
666     : ['promise(acceptor2,proposer0)', '~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~promise(acceptor1,proposer0)', '~start(proposer1)']
667     : -0-0-----00-------0--1----0
667     : ['promise(acceptor2,proposer0)', '~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~promise(acceptor1,proposer0)', '~start(proposer2)']
668     : --0-0----00--------0--1-0--
668     : ['promise(acceptor2,proposer1)', '~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~promise(acceptor1,proposer1)', '~start(proposer0)']
669     : 0---0----00--------0--1---0
669     : ['promise(acceptor2,proposer1)', '~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~promise(acceptor1,proposer1)', '~start(proposer2)']
670     : -0---0---00---------0--10--
670     : ['promise(acceptor2,proposer2)', '~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~promise(acceptor1,proposer2)', '~start(proposer0)']
671     : 0----0---00---------0--1-0-
671     : ['promise(acceptor2,proposer2)', '~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~promise(acceptor1,proposer2)', '~start(proposer1)']
672     : ---0----0-00---1--0------0-
672     : ['promise(acceptor0,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor1,proposer0)', '~start(proposer1)']
673     : ---0---0--00---1--0-------0
673     : ['promise(acceptor0,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor1,proposer0)', '~start(proposer2)']
674     : ----0---0-00----1--0----0--
674     : ['promise(acceptor0,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor1,proposer1)', '~start(proposer0)']
675     : ----0-0---00----1--0------0
675     : ['promise(acceptor0,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor1,proposer1)', '~start(proposer2)']
676     : -----0-0--00-----1--0---0--
676     : ['promise(acceptor0,proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor1,proposer2)', '~start(proposer0)']
677     : -----00---00-----1--0----0-
677     : ['promise(acceptor0,proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor1,proposer2)', '~start(proposer1)']
678     : 0----0---0-0------1--0---0-
678     : ['promise(acceptor1,proposer0)', '~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor2)', '~promise(acceptor2,proposer0)', '~start(proposer1)']
679     : 0---0----0-0------1--0----0
679     : ['promise(acceptor1,proposer0)', '~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor2)', '~promise(acceptor2,proposer0)', '~start(proposer2)']
680     : -0---0---0-0-------1--0-0--
680     : ['promise(acceptor1,proposer1)', '~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor2)', '~promise(acceptor2,proposer1)', '~start(proposer0)']
681     : -0-0-----0-0-------1--0---0
681     : ['promise(acceptor1,proposer1)', '~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor2)', '~promise(acceptor2,proposer1)', '~start(proposer2)']
682     : --0-0----0-0--------1--00--
682     : ['promise(acceptor1,proposer2)', '~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor2)', '~promise(acceptor2,proposer2)', '~start(proposer0)']
683     : --00-----0-0--------1--0-0-
683     : ['promise(acceptor1,proposer2)', '~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor2)', '~promise(acceptor2,proposer2)', '~start(proposer1)']
684     : 0-------0-00---1-----0---0-
684     : ['promise(acceptor0,proposer0)', '~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor2,proposer0)', '~start(proposer1)']
685     : 0------0--00---1-----0----0
685     : ['promise(acceptor0,proposer0)', '~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor2,proposer0)', '~start(proposer2)']
686     : -0------0-00----1-----0-0--
686     : ['promise(acceptor0,proposer1)', '~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor2,proposer1)', '~start(proposer0)']
687     : -0----0---00----1-----0---0
687     : ['promise(acceptor0,proposer1)', '~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor2,proposer1)', '~start(proposer2)']
688     : --0----0--00-----1-----00--
688     : ['promise(acceptor0,proposer2)', '~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor2,proposer2)', '~start(proposer0)']
689     : --0---0---00-----1-----0-0-
689     : ['promise(acceptor0,proposer2)', '~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor2,proposer2)', '~start(proposer1)']
num_forall :   8
num_exists :   0
num_literals : 20
quantified form : forall QUORUM1,ACCEPTOR2,ACCEPTOR1,PROPOSER0,PROPOSER2,ACCEPTOR0,PROPOSER1,QUORUM0. chosenAt(QUORUM1,PROPOSER0) | ~member(ACCEPTOR0,QUORUM0) | member(ACCEPTOR2,QUORUM0) | didNotPromise(ACCEPTOR0) | start(PROPOSER2) | didNotPromise(ACCEPTOR1) | member(ACCEPTOR0,QUORUM1) | chosenAt(QUORUM0,PROPOSER1) | ~member(ACCEPTOR1,QUORUM1) | promise(ACCEPTOR0,PROPOSER0) | ~member(ACCEPTOR2,QUORUM1) | ~member(ACCEPTOR1,QUORUM0) | ~promise(ACCEPTOR2,PROPOSER0) | (PROPOSER1 = PROPOSER2 | ACCEPTOR1 = ACCEPTOR2 | PROPOSER0 = PROPOSER1 | ACCEPTOR0 = ACCEPTOR2 | QUORUM0 = QUORUM1 | PROPOSER0 = PROPOSER2 | ACCEPTOR0 = ACCEPTOR1)
qcost : 28




=== Prime Orbit 43 =====================
size : 18
num_suborbits: 1
690 (*) : --00--0--00----------1---0-
690     : ['promise(acceptor2,proposer0)', '~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~start(proposer1)']
691     : -0-0--0--00----------1----0
691     : ['promise(acceptor2,proposer0)', '~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~start(proposer2)']
692     : --0-0--0-00-----------1-0--
692     : ['promise(acceptor2,proposer1)', '~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~start(proposer0)']
693     : 0---0--0-00-----------1---0
693     : ['promise(acceptor2,proposer1)', '~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~start(proposer2)']
694     : -0---0--000------------10--
694     : ['promise(acceptor2,proposer2)', '~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~start(proposer0)']
695     : 0----0--000------------1-0-
695     : ['promise(acceptor2,proposer2)', '~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~start(proposer1)']
696     : 0----00--0-0------1------0-
696     : ['promise(acceptor1,proposer0)', '~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor2)', '~start(proposer1)']
697     : 0---0-0--0-0------1-------0
697     : ['promise(acceptor1,proposer0)', '~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor2)', '~start(proposer2)']
698     : -0---0-0-0-0-------1----0--
698     : ['promise(acceptor1,proposer1)', '~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor2)', '~start(proposer0)']
699     : -0-0---0-0-0-------1------0
699     : ['promise(acceptor1,proposer1)', '~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor2)', '~start(proposer2)']
700     : --0-0---00-0--------1---0--
700     : ['promise(acceptor1,proposer2)', '~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor2)', '~start(proposer0)']
701     : --00----00-0--------1----0-
701     : ['promise(acceptor1,proposer2)', '~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor2)', '~start(proposer1)']
702     : 0--0----0-00---1---------0-
702     : ['promise(acceptor0,proposer0)', '~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~start(proposer1)']
703     : 0--0---0--00---1----------0
703     : ['promise(acceptor0,proposer0)', '~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~start(proposer2)']
704     : -0--0---0-00----1-------0--
704     : ['promise(acceptor0,proposer1)', '~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~start(proposer0)']
705     : -0--0-0---00----1---------0
705     : ['promise(acceptor0,proposer1)', '~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~start(proposer2)']
706     : --0--0-0--00-----1------0--
706     : ['promise(acceptor0,proposer2)', '~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~start(proposer0)']
707     : --0--00---00-----1-------0-
707     : ['promise(acceptor0,proposer2)', '~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~start(proposer1)']
num_forall :   9
num_exists :   0
num_literals : 25
quantified form : forall QUORUM2,QUORUM1,ACCEPTOR2,ACCEPTOR1,PROPOSER0,PROPOSER2,ACCEPTOR0,PROPOSER1,QUORUM0. chosenAt(QUORUM1,PROPOSER0) | ~member(ACCEPTOR0,QUORUM0) | ~member(ACCEPTOR1,QUORUM0) | ~member(ACCEPTOR1,QUORUM2) | member(ACCEPTOR2,QUORUM0) | ~member(ACCEPTOR2,QUORUM2) | didNotPromise(ACCEPTOR0) | start(PROPOSER2) | member(ACCEPTOR1,QUORUM1) | didNotPromise(ACCEPTOR1) | chosenAt(QUORUM0,PROPOSER1) | ~promise(ACCEPTOR2,PROPOSER0) | ~member(ACCEPTOR2,QUORUM1) | ~member(ACCEPTOR0,QUORUM1) | chosenAt(QUORUM2,PROPOSER0) | member(ACCEPTOR0,QUORUM2) | (QUORUM0 = QUORUM2 | PROPOSER1 = PROPOSER2 | QUORUM1 = QUORUM2 | ACCEPTOR1 = ACCEPTOR2 | PROPOSER0 = PROPOSER1 | ACCEPTOR0 = ACCEPTOR2 | QUORUM0 = QUORUM1 | PROPOSER0 = PROPOSER2 | ACCEPTOR0 = ACCEPTOR1)
qcost : 34




=== Prime Orbit 45 =====================
size : 18
num_suborbits: 1
717 (*) : 0----00--000--------0----0-
717     : ['~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor1,proposer2)', '~start(proposer1)']
718     : 0---0-0--000-------0------0
718     : ['~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor1,proposer1)', '~start(proposer2)']
719     : -0---0-0-000--------0---0--
719     : ['~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor1,proposer2)', '~start(proposer0)']
720     : -0-0---0-000------0-------0
720     : ['~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor1,proposer0)', '~start(proposer2)']
721     : --0-0---0000-------0----0--
721     : ['~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor1,proposer1)', '~start(proposer0)']
722     : --00----0000------0------0-
722     : ['~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor1,proposer0)', '~start(proposer1)']
723     : --00--0--000-----------0-0-
723     : ['~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor2,proposer2)', '~start(proposer1)']
724     : -0-0--0--000----------0---0
724     : ['~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor2,proposer1)', '~start(proposer2)']
725     : --0-0--0-000-----------00--
725     : ['~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor2,proposer2)', '~start(proposer0)']
726     : 0---0--0-000---------0----0
726     : ['~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor2,proposer0)', '~start(proposer2)']
727     : -0---0--0000----------0-0--
727     : ['~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor2,proposer1)', '~start(proposer0)']
728     : 0----0--0000---------0---0-
728     : ['~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor2,proposer0)', '~start(proposer1)']
729     : 0--0----0000-----0-------0-
729     : ['~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor0,proposer2)', '~start(proposer1)']
730     : 0--0---0-000----0---------0
730     : ['~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor0,proposer1)', '~start(proposer2)']
731     : -0--0---0000-----0------0--
731     : ['~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor0,proposer2)', '~start(proposer0)']
732     : -0--0-0--000---0----------0
732     : ['~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor0,proposer0)', '~start(proposer2)']
733     : --0--0-0-000----0-------0--
733     : ['~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor0,proposer1)', '~start(proposer0)']
734     : --0--00--000---0---------0-
734     : ['~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor0,proposer0)', '~start(proposer1)']
num_forall :   9
num_exists :   0
num_literals : 26
quantified form : forall QUORUM2,QUORUM1,ACCEPTOR2,ACCEPTOR1,PROPOSER0,PROPOSER2,ACCEPTOR0,PROPOSER1,QUORUM0. chosenAt(QUORUM1,PROPOSER0) | ~member(ACCEPTOR0,QUORUM0) | didNotPromise(ACCEPTOR2) | promise(ACCEPTOR1,PROPOSER1) | member(ACCEPTOR2,QUORUM0) | ~member(ACCEPTOR2,QUORUM2) | ~member(ACCEPTOR0,QUORUM2) | didNotPromise(ACCEPTOR0) | start(PROPOSER2) | didNotPromise(ACCEPTOR1) | member(ACCEPTOR0,QUORUM1) | chosenAt(QUORUM2,PROPOSER1) | ~member(ACCEPTOR1,QUORUM1) | chosenAt(QUORUM0,PROPOSER0) | member(ACCEPTOR1,QUORUM2) | ~member(ACCEPTOR2,QUORUM1) | ~member(ACCEPTOR1,QUORUM0) | (QUORUM0 = QUORUM2 | PROPOSER1 = PROPOSER2 | QUORUM1 = QUORUM2 | ACCEPTOR1 = ACCEPTOR2 | PROPOSER0 = PROPOSER1 | ACCEPTOR0 = ACCEPTOR2 | QUORUM0 = QUORUM1 | PROPOSER0 = PROPOSER2 | ACCEPTOR0 = ACCEPTOR1)
qcost : 35




=== Prime Orbit 46 =====================
size : 18
num_suborbits: 1
735 (*) : ---0----0000-----00------0-
735     : ['~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor0,proposer2)', '~promise(acceptor1,proposer0)', '~start(proposer1)']
736     : ---0---0-000----0-0-------0
736     : ['~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor0,proposer1)', '~promise(acceptor1,proposer0)', '~start(proposer2)']
737     : ----0---0000-----0-0----0--
737     : ['~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor0,proposer2)', '~promise(acceptor1,proposer1)', '~start(proposer0)']
738     : ----0-0--000---0---0------0
738     : ['~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor0,proposer0)', '~promise(acceptor1,proposer1)', '~start(proposer2)']
739     : -----0-0-000----0---0---0--
739     : ['~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor0,proposer1)', '~promise(acceptor1,proposer2)', '~start(proposer0)']
740     : -----00--000---0----0----0-
740     : ['~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor0,proposer0)', '~promise(acceptor1,proposer2)', '~start(proposer1)']
741     : 0-------0000-----0---0---0-
741     : ['~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor0,proposer2)', '~promise(acceptor2,proposer0)', '~start(proposer1)']
742     : 0------0-000----0----0----0
742     : ['~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor0,proposer1)', '~promise(acceptor2,proposer0)', '~start(proposer2)']
743     : -0------0000-----0----0-0--
743     : ['~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor0,proposer2)', '~promise(acceptor2,proposer1)', '~start(proposer0)']
744     : -0----0--000---0------0---0
744     : ['~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor0,proposer0)', '~promise(acceptor2,proposer1)', '~start(proposer2)']
745     : --0----0-000----0------00--
745     : ['~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor0,proposer1)', '~promise(acceptor2,proposer2)', '~start(proposer0)']
746     : --0---0--000---0-------0-0-
746     : ['~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor0,proposer0)', '~promise(acceptor2,proposer2)', '~start(proposer1)']
747     : 0----0---000--------00---0-
747     : ['~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor1,proposer2)', '~promise(acceptor2,proposer0)', '~start(proposer1)']
748     : 0---0----000-------0-0----0
748     : ['~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor1,proposer1)', '~promise(acceptor2,proposer0)', '~start(proposer2)']
749     : -0---0---000--------0-0-0--
749     : ['~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor1,proposer2)', '~promise(acceptor2,proposer1)', '~start(proposer0)']
750     : -0-0-----000------0---0---0
750     : ['~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor1,proposer0)', '~promise(acceptor2,proposer1)', '~start(proposer2)']
751     : --0-0----000-------0---00--
751     : ['~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor1,proposer1)', '~promise(acceptor2,proposer2)', '~start(proposer0)']
752     : --00-----000------0----0-0-
752     : ['~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor1,proposer0)', '~promise(acceptor2,proposer2)', '~start(proposer1)']
num_forall :   8
num_exists :   0
num_literals : 21
quantified form : forall QUORUM1,ACCEPTOR2,ACCEPTOR1,PROPOSER0,PROPOSER2,ACCEPTOR0,PROPOSER1,QUORUM0. ~member(ACCEPTOR0,QUORUM0) | didNotPromise(ACCEPTOR2) | member(ACCEPTOR2,QUORUM0) | didNotPromise(ACCEPTOR0) | start(PROPOSER2) | didNotPromise(ACCEPTOR1) | member(ACCEPTOR0,QUORUM1) | promise(ACCEPTOR0,PROPOSER1) | ~member(ACCEPTOR1,QUORUM1) | chosenAt(QUORUM0,PROPOSER0) | promise(ACCEPTOR2,PROPOSER0) | ~member(ACCEPTOR2,QUORUM1) | ~member(ACCEPTOR1,QUORUM0) | chosenAt(QUORUM1,PROPOSER1) | (PROPOSER1 = PROPOSER2 | ACCEPTOR1 = ACCEPTOR2 | PROPOSER0 = PROPOSER1 | ACCEPTOR0 = ACCEPTOR2 | QUORUM0 = QUORUM1 | PROPOSER0 = PROPOSER2 | ACCEPTOR0 = ACCEPTOR1)
qcost : 29




=== Prime Orbit 49 =====================
size : 3
num_suborbits: 1
807 (*) : 0-00-00-0000-------------0-
807     : ['~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~start(proposer1)']
808     : 00-00-00-000--------------0
808     : ['~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~start(proposer2)']
809     : -00-00-00000------------0--
809     : ['~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~start(proposer0)']
num_forall :   7
num_exists :   1
num_literals : 23
quantified form : forall QUORUM2,QUORUM1,ACCEPTOR2,ACCEPTOR1,ACCEPTOR0,PROPOSER1,QUORUM0. ~member(ACCEPTOR0,QUORUM0) | didNotPromise(ACCEPTOR2) | ~member(ACCEPTOR1,QUORUM0) | member(ACCEPTOR2,QUORUM0) | ~member(ACCEPTOR2,QUORUM2) | ~member(ACCEPTOR0,QUORUM2) | didNotPromise(ACCEPTOR0) | start(PROPOSER1) | didNotPromise(ACCEPTOR1) | member(ACCEPTOR0,QUORUM1) | ~member(ACCEPTOR1,QUORUM1) | member(ACCEPTOR1,QUORUM2) | ~member(ACCEPTOR2,QUORUM1) | (exists PROPOSER0. ((chosenAt(QUORUM1,PROPOSER0) | chosenAt(QUORUM0,PROPOSER0) | chosenAt(QUORUM2,PROPOSER0)) & PROPOSER0 ~= PROPOSER1)) | (QUORUM0 = QUORUM2 | QUORUM1 = QUORUM2 | ACCEPTOR1 = ACCEPTOR2 | ACCEPTOR0 = ACCEPTOR2 | QUORUM0 = QUORUM1 | ACCEPTOR0 = ACCEPTOR1)
qcost : 31



[QRM NOTE]: Time elapsed since start: 8.741 seconds

[QRM NOTE]: Time elapsed since last: 0.493 seconds

[QRM NOTE]: Peak memory: 3261094 bytes


======================================================================================================

	[MIN]: Minimization on [ivybench/sym_quorum/ivy/simple-election: acceptor=3,proposer=3]

======================================================================================================


New level: 1
 pending : [3, 5, 8, 9, 10, 13, 14, 15, 16, 18, 19, 20, 21, 22, 23, 24, 25, 26, 28, 30, 31, 32, 33, 35, 36, 37, 38, 39, 40, 42, 43, 45, 46, 49]
 solution : [0]


Before reduction : 
 pending  : [3, 5, 8, 9, 10, 13, 14, 15, 16, 18, 19, 20, 21, 22, 23, 24, 25, 26, 28, 30, 31, 32, 33, 35, 36, 37, 38, 39, 40, 42, 43, 45, 46, 49]
 solution : [0]

Essensial at level 1 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 134217728), (4, -1), (5, 1048576), (6, -1), (7, -1), (8, 1048576), (9, 17179869184), (10, 17179869184), (11, -1), (12, -1), (13, 67108864), (14, 33554432), (15, 1572864), (16, 524288), (17, -1), (18, 2147483648), (19, 1073741824), (20, 16777216), (21, 8388608), (22, 262144), (23, 4194304), (24, 134217728), (25, 1073741824), (26, 4294967296), (27, -1), (28, 4294967296), (29, -1), (30, 1048576), (31, 4194304), (32, 32768), (33, 16384), (34, -1), (35, 2147483648), (36, 134217728), (37, 268435456), (38, 16384), (39, 1073741824), (40, 4194304), (41, -1), (42, 524288), (43, 524288), (44, -1), (45, 67108864), (46, 16777216), (47, -1), (48, -1), (49, 67108864), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 134217728), (4, -1), (5, 1048576), (6, -1), (7, -1), (8, 1048576), (9, 17179869184), (10, 17179869184), (11, -1), (12, -1), (13, 67108864), (14, 33554432), (15, 1572864), (16, 524288), (17, -1), (18, 2147483648), (19, 1073741824), (20, 16777216), (21, 8388608), (22, 262144), (23, 4194304), (24, 134217728), (25, 1073741824), (26, 4294967296), (27, -1), (28, 4294967296), (29, -1), (30, 1048576), (31, 4194304), (32, 32768), (33, 16384), (34, -1), (35, 2147483648), (36, 134217728), (37, 268435456), (38, 16384), (39, 1073741824), (40, 4194304), (41, -1), (42, 524288), (43, 524288), (44, -1), (45, 67108864), (46, 16777216), (47, -1), (48, -1), (49, 67108864), (50, -1), (51, -1), (52, -1)]

Covered at level 1 : set()

After reduction : 
 pending  : [3, 5, 8, 9, 10, 13, 14, 15, 16, 18, 19, 20, 21, 22, 23, 24, 25, 26, 28, 30, 31, 32, 33, 35, 36, 37, 38, 39, 40, 42, 43, 45, 46, 49]
 solution : [0]


Solution : [0] has cost 6.


Decide in level 1 among pending : [3, 5, 8, 9, 10, 13, 14, 15, 16, 18, 19, 20, 21, 22, 23, 24, 25, 26, 28, 30, 31, 32, 33, 35, 36, 37, 38, 39, 40, 42, 43, 45, 46, 49]

Coverage : [(0, -1), (1, -1), (2, -1), (3, 134217728), (4, -1), (5, 1048576), (6, -1), (7, -1), (8, 1048576), (9, 17179869184), (10, 17179869184), (11, -1), (12, -1), (13, 67108864), (14, 33554432), (15, 1572864), (16, 524288), (17, -1), (18, 2147483648), (19, 1073741824), (20, 16777216), (21, 8388608), (22, 262144), (23, 4194304), (24, 134217728), (25, 1073741824), (26, 4294967296), (27, -1), (28, 4294967296), (29, -1), (30, 1048576), (31, 4194304), (32, 32768), (33, 16384), (34, -1), (35, 2147483648), (36, 134217728), (37, 268435456), (38, 16384), (39, 1073741824), (40, 4194304), (41, -1), (42, 524288), (43, 524288), (44, -1), (45, 67108864), (46, 16777216), (47, -1), (48, -1), (49, 67108864), (50, -1), (51, -1), (52, -1)]

Decide 9 with phase True at level 1

After decision at level 1
 pending : [3, 5, 8, 10, 13, 14, 15, 16, 18, 19, 20, 21, 22, 23, 24, 25, 26, 28, 30, 31, 32, 33, 35, 36, 37, 38, 39, 40, 42, 43, 45, 46, 49]
 solution : [0, 9]


New level: 2
 pending : [3, 5, 8, 10, 13, 14, 15, 16, 18, 19, 20, 21, 22, 23, 24, 25, 26, 28, 30, 31, 32, 33, 35, 36, 37, 38, 39, 40, 42, 43, 45, 46, 49]
 solution : [0, 9]


Before reduction : 
 pending  : [3, 5, 8, 10, 13, 14, 15, 16, 18, 19, 20, 21, 22, 23, 24, 25, 26, 28, 30, 31, 32, 33, 35, 36, 37, 38, 39, 40, 42, 43, 45, 46, 49]
 solution : [0, 9]

Essensial at level 2 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 134217728), (4, -1), (5, 1048576), (6, -1), (7, -1), (8, 1048576), (9, 17179869184), (10, 17179869184), (11, -1), (12, -1), (13, 67108864), (14, 33554432), (15, 1572864), (16, 524288), (17, -1), (18, 2147483648), (19, 1073741824), (20, 16777216), (21, 8388608), (22, 262144), (23, 4194304), (24, 134217728), (25, 1073741824), (26, 4294967296), (27, -1), (28, 4294967296), (29, -1), (30, 1048576), (31, 4194304), (32, 32768), (33, 16384), (34, -1), (35, 2147483648), (36, 134217728), (37, 268435456), (38, 16384), (39, 1073741824), (40, 4194304), (41, -1), (42, 524288), (43, 524288), (44, -1), (45, 67108864), (46, 16777216), (47, -1), (48, -1), (49, 67108864), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 67108864), (4, -1), (5, 524288), (6, -1), (7, -1), (8, 524288), (9, -1), (10, 4294967296), (11, -1), (12, -1), (13, 33554432), (14, 16777216), (15, 786432), (16, 262144), (17, -1), (18, 1073741824), (19, 536870912), (20, 8388608), (21, 4194304), (22, 131072), (23, 2097152), (24, 67108864), (25, 268435456), (26, 536870912), (27, -1), (28, 2147483648), (29, -1), (30, 524288), (31, 1048576), (32, 8192), (33, 8192), (34, -1), (35, 536870912), (36, 67108864), (37, 67108864), (38, 8192), (39, 134217728), (40, 2097152), (41, -1), (42, 262144), (43, 262144), (44, -1), (45, 33554432), (46, 8388608), (47, -1), (48, -1), (49, 33554432), (50, -1), (51, -1), (52, -1)]

Covered at level 2 : set()

After reduction : 
 pending  : [3, 5, 8, 10, 13, 14, 15, 16, 18, 19, 20, 21, 22, 23, 24, 25, 26, 28, 30, 31, 32, 33, 35, 36, 37, 38, 39, 40, 42, 43, 45, 46, 49]
 solution : [0, 9]


Solution : [0, 9] has cost 9.


Decide in level 2 among pending : [3, 5, 8, 10, 13, 14, 15, 16, 18, 19, 20, 21, 22, 23, 24, 25, 26, 28, 30, 31, 32, 33, 35, 36, 37, 38, 39, 40, 42, 43, 45, 46, 49]

Coverage : [(0, -1), (1, -1), (2, -1), (3, 67108864), (4, -1), (5, 524288), (6, -1), (7, -1), (8, 524288), (9, -1), (10, 4294967296), (11, -1), (12, -1), (13, 33554432), (14, 16777216), (15, 786432), (16, 262144), (17, -1), (18, 1073741824), (19, 536870912), (20, 8388608), (21, 4194304), (22, 131072), (23, 2097152), (24, 67108864), (25, 268435456), (26, 536870912), (27, -1), (28, 2147483648), (29, -1), (30, 524288), (31, 1048576), (32, 8192), (33, 8192), (34, -1), (35, 536870912), (36, 67108864), (37, 67108864), (38, 8192), (39, 134217728), (40, 2097152), (41, -1), (42, 262144), (43, 262144), (44, -1), (45, 33554432), (46, 8388608), (47, -1), (48, -1), (49, 33554432), (50, -1), (51, -1), (52, -1)]

Decide 10 with phase True at level 2

After decision at level 2
 pending : [3, 5, 8, 13, 14, 15, 16, 18, 19, 20, 21, 22, 23, 24, 25, 26, 28, 30, 31, 32, 33, 35, 36, 37, 38, 39, 40, 42, 43, 45, 46, 49]
 solution : [0, 9, 10]


New level: 3
 pending : [3, 5, 8, 13, 14, 15, 16, 18, 19, 20, 21, 22, 23, 24, 25, 26, 28, 30, 31, 32, 33, 35, 36, 37, 38, 39, 40, 42, 43, 45, 46, 49]
 solution : [0, 9, 10]


Before reduction : 
 pending  : [3, 5, 8, 13, 14, 15, 16, 18, 19, 20, 21, 22, 23, 24, 25, 26, 28, 30, 31, 32, 33, 35, 36, 37, 38, 39, 40, 42, 43, 45, 46, 49]
 solution : [0, 9, 10]

Essensial at level 3 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 67108864), (4, -1), (5, 524288), (6, -1), (7, -1), (8, 524288), (9, -1), (10, 4294967296), (11, -1), (12, -1), (13, 33554432), (14, 16777216), (15, 786432), (16, 262144), (17, -1), (18, 1073741824), (19, 536870912), (20, 8388608), (21, 4194304), (22, 131072), (23, 2097152), (24, 67108864), (25, 268435456), (26, 536870912), (27, -1), (28, 2147483648), (29, -1), (30, 524288), (31, 1048576), (32, 8192), (33, 8192), (34, -1), (35, 536870912), (36, 67108864), (37, 67108864), (38, 8192), (39, 134217728), (40, 2097152), (41, -1), (42, 262144), (43, 262144), (44, -1), (45, 33554432), (46, 8388608), (47, -1), (48, -1), (49, 33554432), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 67108864), (4, -1), (5, 131072), (6, -1), (7, -1), (8, 524288), (9, -1), (10, -1), (11, -1), (12, -1), (13, 8388608), (14, 4194304), (15, 196608), (16, 65536), (17, -1), (18, 268435456), (19, 134217728), (20, 2097152), (21, 1048576), (22, 32768), (23, 524288), (24, 67108864), (25, 268435456), (26, 536870912), (27, -1), (28, 536870912), (29, -1), (30, 524288), (31, 1048576), (32, 8192), (33, 8192), (34, -1), (35, 536870912), (36, 67108864), (37, 33554432), (38, 8192), (39, 134217728), (40, 524288), (41, -1), (42, 262144), (43, 262144), (44, -1), (45, 33554432), (46, 8388608), (47, -1), (48, -1), (49, 33554432), (50, -1), (51, -1), (52, -1)]

Covered at level 3 : set()

After reduction : 
 pending  : [3, 5, 8, 13, 14, 15, 16, 18, 19, 20, 21, 22, 23, 24, 25, 26, 28, 30, 31, 32, 33, 35, 36, 37, 38, 39, 40, 42, 43, 45, 46, 49]
 solution : [0, 9, 10]


Solution : [0, 9, 10] has cost 14.


Decide in level 3 among pending : [3, 5, 8, 13, 14, 15, 16, 18, 19, 20, 21, 22, 23, 24, 25, 26, 28, 30, 31, 32, 33, 35, 36, 37, 38, 39, 40, 42, 43, 45, 46, 49]

Coverage : [(0, -1), (1, -1), (2, -1), (3, 67108864), (4, -1), (5, 131072), (6, -1), (7, -1), (8, 524288), (9, -1), (10, -1), (11, -1), (12, -1), (13, 8388608), (14, 4194304), (15, 196608), (16, 65536), (17, -1), (18, 268435456), (19, 134217728), (20, 2097152), (21, 1048576), (22, 32768), (23, 524288), (24, 67108864), (25, 268435456), (26, 536870912), (27, -1), (28, 536870912), (29, -1), (30, 524288), (31, 1048576), (32, 8192), (33, 8192), (34, -1), (35, 536870912), (36, 67108864), (37, 33554432), (38, 8192), (39, 134217728), (40, 524288), (41, -1), (42, 262144), (43, 262144), (44, -1), (45, 33554432), (46, 8388608), (47, -1), (48, -1), (49, 33554432), (50, -1), (51, -1), (52, -1)]

Decide 26 with phase True at level 3

After decision at level 3
 pending : [3, 5, 8, 13, 14, 15, 16, 18, 19, 20, 21, 22, 23, 24, 25, 28, 30, 31, 32, 33, 35, 36, 37, 38, 39, 40, 42, 43, 45, 46, 49]
 solution : [0, 9, 10, 26]


New level: 4
 pending : [3, 5, 8, 13, 14, 15, 16, 18, 19, 20, 21, 22, 23, 24, 25, 28, 30, 31, 32, 33, 35, 36, 37, 38, 39, 40, 42, 43, 45, 46, 49]
 solution : [0, 9, 10, 26]


Before reduction : 
 pending  : [3, 5, 8, 13, 14, 15, 16, 18, 19, 20, 21, 22, 23, 24, 25, 28, 30, 31, 32, 33, 35, 36, 37, 38, 39, 40, 42, 43, 45, 46, 49]
 solution : [0, 9, 10, 26]

Essensial at level 4 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 67108864), (4, -1), (5, 131072), (6, -1), (7, -1), (8, 524288), (9, -1), (10, -1), (11, -1), (12, -1), (13, 8388608), (14, 4194304), (15, 196608), (16, 65536), (17, -1), (18, 268435456), (19, 134217728), (20, 2097152), (21, 1048576), (22, 32768), (23, 524288), (24, 67108864), (25, 268435456), (26, 536870912), (27, -1), (28, 536870912), (29, -1), (30, 524288), (31, 1048576), (32, 8192), (33, 8192), (34, -1), (35, 536870912), (36, 67108864), (37, 33554432), (38, 8192), (39, 134217728), (40, 524288), (41, -1), (42, 262144), (43, 262144), (44, -1), (45, 33554432), (46, 8388608), (47, -1), (48, -1), (49, 33554432), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 67108864), (4, -1), (5, 131072), (6, -1), (7, -1), (8, 524288), (9, -1), (10, -1), (11, -1), (12, -1), (13, 8388608), (14, 4194304), (15, 196608), (16, 65536), (17, -1), (18, 268435456), (19, 134217728), (20, 2097152), (21, 1048576), (22, 32768), (23, 524288), (24, 67108864), (25, 134217728), (26, -1), (27, -1), (28, 536870912), (29, -1), (30, 524288), (31, 524288), (32, 4096), (33, 8192), (34, -1), (35, 268435456), (36, 67108864), (37, 33554432), (38, 8192), (39, 134217728), (40, 524288), (41, -1), (42, 262144), (43, 262144), (44, -1), (45, 33554432), (46, 8388608), (47, -1), (48, -1), (49, 33554432), (50, -1), (51, -1), (52, -1)]

Covered at level 4 : set()

After reduction : 
 pending  : [3, 5, 8, 13, 14, 15, 16, 18, 19, 20, 21, 22, 23, 24, 25, 28, 30, 31, 32, 33, 35, 36, 37, 38, 39, 40, 42, 43, 45, 46, 49]
 solution : [0, 9, 10, 26]


Solution : [0, 9, 10, 26] has cost 18.


Decide in level 4 among pending : [3, 5, 8, 13, 14, 15, 16, 18, 19, 20, 21, 22, 23, 24, 25, 28, 30, 31, 32, 33, 35, 36, 37, 38, 39, 40, 42, 43, 45, 46, 49]

Coverage : [(0, -1), (1, -1), (2, -1), (3, 67108864), (4, -1), (5, 131072), (6, -1), (7, -1), (8, 524288), (9, -1), (10, -1), (11, -1), (12, -1), (13, 8388608), (14, 4194304), (15, 196608), (16, 65536), (17, -1), (18, 268435456), (19, 134217728), (20, 2097152), (21, 1048576), (22, 32768), (23, 524288), (24, 67108864), (25, 134217728), (26, -1), (27, -1), (28, 536870912), (29, -1), (30, 524288), (31, 524288), (32, 4096), (33, 8192), (34, -1), (35, 268435456), (36, 67108864), (37, 33554432), (38, 8192), (39, 134217728), (40, 524288), (41, -1), (42, 262144), (43, 262144), (44, -1), (45, 33554432), (46, 8388608), (47, -1), (48, -1), (49, 33554432), (50, -1), (51, -1), (52, -1)]

Decide 28 with phase True at level 4

After decision at level 4
 pending : [3, 5, 8, 13, 14, 15, 16, 18, 19, 20, 21, 22, 23, 24, 25, 30, 31, 32, 33, 35, 36, 37, 38, 39, 40, 42, 43, 45, 46, 49]
 solution : [0, 9, 10, 26, 28]


New level: 5
 pending : [3, 5, 8, 13, 14, 15, 16, 18, 19, 20, 21, 22, 23, 24, 25, 30, 31, 32, 33, 35, 36, 37, 38, 39, 40, 42, 43, 45, 46, 49]
 solution : [0, 9, 10, 26, 28]


Before reduction : 
 pending  : [3, 5, 8, 13, 14, 15, 16, 18, 19, 20, 21, 22, 23, 24, 25, 30, 31, 32, 33, 35, 36, 37, 38, 39, 40, 42, 43, 45, 46, 49]
 solution : [0, 9, 10, 26, 28]

Essensial at level 5 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 67108864), (4, -1), (5, 131072), (6, -1), (7, -1), (8, 524288), (9, -1), (10, -1), (11, -1), (12, -1), (13, 8388608), (14, 4194304), (15, 196608), (16, 65536), (17, -1), (18, 268435456), (19, 134217728), (20, 2097152), (21, 1048576), (22, 32768), (23, 524288), (24, 67108864), (25, 134217728), (26, -1), (27, -1), (28, 536870912), (29, -1), (30, 524288), (31, 524288), (32, 4096), (33, 8192), (34, -1), (35, 268435456), (36, 67108864), (37, 33554432), (38, 8192), (39, 134217728), (40, 524288), (41, -1), (42, 262144), (43, 262144), (44, -1), (45, 33554432), (46, 8388608), (47, -1), (48, -1), (49, 33554432), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 67108864), (4, -1), (5, 0), (6, -1), (7, -1), (8, 131072), (9, -1), (10, -1), (11, -1), (12, -1), (13, 0), (14, 0), (15, 0), (16, 0), (17, -1), (18, 0), (19, 0), (20, 0), (21, 0), (22, 0), (23, 0), (24, 67108864), (25, 134217728), (26, -1), (27, -1), (28, -1), (29, -1), (30, 262144), (31, 524288), (32, 4096), (33, 4096), (34, -1), (35, 268435456), (36, 33554432), (37, 1024), (38, 2048), (39, 2048), (40, 0), (41, -1), (42, 65536), (43, 65536), (44, -1), (45, 16777216), (46, 2097152), (47, -1), (48, -1), (49, 8388608), (50, -1), (51, -1), (52, -1)]

Covered at level 5 : {5, 40, 13, 14, 15, 16, 18, 19, 20, 21, 22, 23}

After reduction : 
 pending  : [3, 8, 24, 25, 30, 31, 32, 33, 35, 36, 37, 38, 39, 42, 43, 45, 46, 49]
 solution : [0, 9, 10, 26, 28]


Before reduction : 
 pending  : [3, 8, 24, 25, 30, 31, 32, 33, 35, 36, 37, 38, 39, 42, 43, 45, 46, 49]
 solution : [0, 9, 10, 26, 28]

Essensial at level 5 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 67108864), (4, -1), (5, 0), (6, -1), (7, -1), (8, 131072), (9, -1), (10, -1), (11, -1), (12, -1), (13, 0), (14, 0), (15, 0), (16, 0), (17, -1), (18, 0), (19, 0), (20, 0), (21, 0), (22, 0), (23, 0), (24, 67108864), (25, 134217728), (26, -1), (27, -1), (28, -1), (29, -1), (30, 262144), (31, 524288), (32, 4096), (33, 4096), (34, -1), (35, 268435456), (36, 33554432), (37, 1024), (38, 2048), (39, 2048), (40, 0), (41, -1), (42, 65536), (43, 65536), (44, -1), (45, 16777216), (46, 2097152), (47, -1), (48, -1), (49, 8388608), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 67108864), (4, -1), (5, -1), (6, -1), (7, -1), (8, 131072), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, 67108864), (25, 134217728), (26, -1), (27, -1), (28, -1), (29, -1), (30, 262144), (31, 524288), (32, 4096), (33, 4096), (34, -1), (35, 268435456), (36, 33554432), (37, 1024), (38, 2048), (39, 2048), (40, -1), (41, -1), (42, 65536), (43, 65536), (44, -1), (45, 16777216), (46, 2097152), (47, -1), (48, -1), (49, 8388608), (50, -1), (51, -1), (52, -1)]

Covered at level 5 : set()

After reduction : 
 pending  : [3, 8, 24, 25, 30, 31, 32, 33, 35, 36, 37, 38, 39, 42, 43, 45, 46, 49]
 solution : [0, 9, 10, 26, 28]


Solution : [0, 9, 10, 26, 28] has cost 22.


Decide in level 5 among pending : [3, 8, 24, 25, 30, 31, 32, 33, 35, 36, 37, 38, 39, 42, 43, 45, 46, 49]

Coverage : [(0, -1), (1, -1), (2, -1), (3, 67108864), (4, -1), (5, -1), (6, -1), (7, -1), (8, 131072), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, 67108864), (25, 134217728), (26, -1), (27, -1), (28, -1), (29, -1), (30, 262144), (31, 524288), (32, 4096), (33, 4096), (34, -1), (35, 268435456), (36, 33554432), (37, 1024), (38, 2048), (39, 2048), (40, -1), (41, -1), (42, 65536), (43, 65536), (44, -1), (45, 16777216), (46, 2097152), (47, -1), (48, -1), (49, 8388608), (50, -1), (51, -1), (52, -1)]

Decide 35 with phase True at level 5

After decision at level 5
 pending : [3, 8, 24, 25, 30, 31, 32, 33, 36, 37, 38, 39, 42, 43, 45, 46, 49]
 solution : [0, 9, 10, 26, 28, 35]


New level: 6
 pending : [3, 8, 24, 25, 30, 31, 32, 33, 36, 37, 38, 39, 42, 43, 45, 46, 49]
 solution : [0, 9, 10, 26, 28, 35]


Before reduction : 
 pending  : [3, 8, 24, 25, 30, 31, 32, 33, 36, 37, 38, 39, 42, 43, 45, 46, 49]
 solution : [0, 9, 10, 26, 28, 35]

Essensial at level 6 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 67108864), (4, -1), (5, -1), (6, -1), (7, -1), (8, 131072), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, 67108864), (25, 134217728), (26, -1), (27, -1), (28, -1), (29, -1), (30, 262144), (31, 524288), (32, 4096), (33, 4096), (34, -1), (35, 268435456), (36, 33554432), (37, 1024), (38, 2048), (39, 2048), (40, -1), (41, -1), (42, 65536), (43, 65536), (44, -1), (45, 16777216), (46, 2097152), (47, -1), (48, -1), (49, 8388608), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 67108864), (4, -1), (5, -1), (6, -1), (7, -1), (8, 32768), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, 67108864), (25, 2048), (26, -1), (27, -1), (28, -1), (29, -1), (30, 65536), (31, 0), (32, 0), (33, 1024), (34, -1), (35, -1), (36, 8388608), (37, 512), (38, 512), (39, 0), (40, -1), (41, -1), (42, 16384), (43, 16384), (44, -1), (45, 4194304), (46, 524288), (47, -1), (48, -1), (49, 2097152), (50, -1), (51, -1), (52, -1)]

Covered at level 6 : {32, 39, 31}

After reduction : 
 pending  : [3, 8, 24, 25, 30, 33, 36, 37, 38, 42, 43, 45, 46, 49]
 solution : [0, 9, 10, 26, 28, 35]


Before reduction : 
 pending  : [3, 8, 24, 25, 30, 33, 36, 37, 38, 42, 43, 45, 46, 49]
 solution : [0, 9, 10, 26, 28, 35]

Essensial at level 6 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 67108864), (4, -1), (5, -1), (6, -1), (7, -1), (8, 32768), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, 67108864), (25, 2048), (26, -1), (27, -1), (28, -1), (29, -1), (30, 65536), (31, 0), (32, 0), (33, 1024), (34, -1), (35, -1), (36, 8388608), (37, 512), (38, 512), (39, 0), (40, -1), (41, -1), (42, 16384), (43, 16384), (44, -1), (45, 4194304), (46, 524288), (47, -1), (48, -1), (49, 2097152), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 67108864), (4, -1), (5, -1), (6, -1), (7, -1), (8, 32768), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, 67108864), (25, 2048), (26, -1), (27, -1), (28, -1), (29, -1), (30, 65536), (31, -1), (32, -1), (33, 1024), (34, -1), (35, -1), (36, 8388608), (37, 512), (38, 512), (39, -1), (40, -1), (41, -1), (42, 16384), (43, 16384), (44, -1), (45, 4194304), (46, 524288), (47, -1), (48, -1), (49, 2097152), (50, -1), (51, -1), (52, -1)]

Covered at level 6 : set()

After reduction : 
 pending  : [3, 8, 24, 25, 30, 33, 36, 37, 38, 42, 43, 45, 46, 49]
 solution : [0, 9, 10, 26, 28, 35]


Solution : [0, 9, 10, 26, 28, 35] has cost 35.


Decide in level 6 among pending : [3, 8, 24, 25, 30, 33, 36, 37, 38, 42, 43, 45, 46, 49]

Coverage : [(0, -1), (1, -1), (2, -1), (3, 67108864), (4, -1), (5, -1), (6, -1), (7, -1), (8, 32768), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, 67108864), (25, 2048), (26, -1), (27, -1), (28, -1), (29, -1), (30, 65536), (31, -1), (32, -1), (33, 1024), (34, -1), (35, -1), (36, 8388608), (37, 512), (38, 512), (39, -1), (40, -1), (41, -1), (42, 16384), (43, 16384), (44, -1), (45, 4194304), (46, 524288), (47, -1), (48, -1), (49, 2097152), (50, -1), (51, -1), (52, -1)]

Decide 3 with phase True at level 6

After decision at level 6
 pending : [8, 24, 25, 30, 33, 36, 37, 38, 42, 43, 45, 46, 49]
 solution : [0, 9, 10, 26, 28, 35, 3]


New level: 7
 pending : [8, 24, 25, 30, 33, 36, 37, 38, 42, 43, 45, 46, 49]
 solution : [0, 9, 10, 26, 28, 35, 3]


Before reduction : 
 pending  : [8, 24, 25, 30, 33, 36, 37, 38, 42, 43, 45, 46, 49]
 solution : [0, 9, 10, 26, 28, 35, 3]

Essensial at level 7 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 67108864), (4, -1), (5, -1), (6, -1), (7, -1), (8, 32768), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, 67108864), (25, 2048), (26, -1), (27, -1), (28, -1), (29, -1), (30, 65536), (31, -1), (32, -1), (33, 1024), (34, -1), (35, -1), (36, 8388608), (37, 512), (38, 512), (39, -1), (40, -1), (41, -1), (42, 16384), (43, 16384), (44, -1), (45, 4194304), (46, 524288), (47, -1), (48, -1), (49, 2097152), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, 0), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, 0), (25, 0), (26, -1), (27, -1), (28, -1), (29, -1), (30, 0), (31, -1), (32, -1), (33, 0), (34, -1), (35, -1), (36, 0), (37, 0), (38, 0), (39, -1), (40, -1), (41, -1), (42, 0), (43, 0), (44, -1), (45, 0), (46, 0), (47, -1), (48, -1), (49, 0), (50, -1), (51, -1), (52, -1)]

Covered at level 7 : {33, 36, 37, 38, 8, 42, 43, 45, 46, 49, 24, 25, 30}

After reduction : 
 pending  : []
 solution : [0, 9, 10, 26, 28, 35, 3]


Before reduction : 
 pending  : []
 solution : [0, 9, 10, 26, 28, 35, 3]

Essensial at level 7 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, 0), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, 0), (25, 0), (26, -1), (27, -1), (28, -1), (29, -1), (30, 0), (31, -1), (32, -1), (33, 0), (34, -1), (35, -1), (36, 0), (37, 0), (38, 0), (39, -1), (40, -1), (41, -1), (42, 0), (43, 0), (44, -1), (45, 0), (46, 0), (47, -1), (48, -1), (49, 0), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 7 : set()

After reduction : 
 pending  : []
 solution : [0, 9, 10, 26, 28, 35, 3]


Solution : [0, 9, 10, 26, 28, 35, 3] has cost 39.


Before backtrack at level 7
 pending : []
 solution : [0, 9, 10, 26, 28, 35, 3]

After backtrack at level 7
 pending : [8, 24, 25, 30, 33, 36, 37, 38, 42, 43, 45, 46, 49]
 solution : [0, 9, 10, 26, 28, 35, 3]


Invert decision for 3 at level 6


New level: 7
 pending : [8, 24, 25, 30, 33, 36, 37, 38, 42, 43, 45, 46, 49]
 solution : [0, 9, 10, 26, 28, 35]


Before reduction : 
 pending  : [8, 24, 25, 30, 33, 36, 37, 38, 42, 43, 45, 46, 49]
 solution : [0, 9, 10, 26, 28, 35]

Essensial at level 7 : {24}

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, 0), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, 0), (26, -1), (27, -1), (28, -1), (29, -1), (30, 0), (31, -1), (32, -1), (33, 0), (34, -1), (35, -1), (36, 0), (37, 0), (38, 0), (39, -1), (40, -1), (41, -1), (42, 0), (43, 0), (44, -1), (45, 0), (46, 0), (47, -1), (48, -1), (49, 0), (50, -1), (51, -1), (52, -1)]

Covered at level 7 : {33, 36, 37, 38, 8, 42, 43, 45, 46, 49, 25, 30}

After reduction : 
 pending  : []
 solution : [0, 9, 10, 26, 28, 35, 24]


Before reduction : 
 pending  : []
 solution : [0, 9, 10, 26, 28, 35, 24]

Essensial at level 7 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, 0), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, 0), (26, -1), (27, -1), (28, -1), (29, -1), (30, 0), (31, -1), (32, -1), (33, 0), (34, -1), (35, -1), (36, 0), (37, 0), (38, 0), (39, -1), (40, -1), (41, -1), (42, 0), (43, 0), (44, -1), (45, 0), (46, 0), (47, -1), (48, -1), (49, 0), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 7 : set()

After reduction : 
 pending  : []
 solution : [0, 9, 10, 26, 28, 35, 24]


Solution : [0, 9, 10, 26, 28, 35, 24] has cost 42.


Before backtrack at level 7
 pending : []
 solution : [0, 9, 10, 26, 28, 35, 24]

After backtrack at level 7
 pending : [24, 8, 25, 30, 33, 36, 37, 38, 42, 43, 45, 46, 49]
 solution : [0, 9, 10, 26, 28, 35]


Before backtrack at level 6
 pending : [24, 8, 25, 30, 33, 36, 37, 38, 42, 43, 45, 46, 49]
 solution : [0, 9, 10, 26, 28, 35]

After backtrack at level 6
 pending : [24, 8, 25, 30, 33, 36, 37, 38, 42, 43, 45, 46, 49, 31, 32, 39, 3]
 solution : [0, 9, 10, 26, 28, 35]


Invert decision for 35 at level 5


New level: 6
 pending : [24, 8, 25, 30, 33, 36, 37, 38, 42, 43, 45, 46, 49, 31, 32, 39, 3]
 solution : [0, 9, 10, 26, 28]


Before reduction : 
 pending  : [24, 8, 25, 30, 33, 36, 37, 38, 42, 43, 45, 46, 49, 31, 32, 39, 3]
 solution : [0, 9, 10, 26, 28]

Essensial at level 6 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 67108864), (4, -1), (5, -1), (6, -1), (7, -1), (8, 131072), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, 67108864), (25, 134217728), (26, -1), (27, -1), (28, -1), (29, -1), (30, 262144), (31, 524288), (32, 4096), (33, 4096), (34, -1), (35, -1), (36, 33554432), (37, 1024), (38, 2048), (39, 2048), (40, -1), (41, -1), (42, 65536), (43, 65536), (44, -1), (45, 16777216), (46, 2097152), (47, -1), (48, -1), (49, 8388608), (50, -1), (51, -1), (52, -1)]

Covered at level 6 : set()

After reduction : 
 pending  : [24, 8, 25, 30, 33, 36, 37, 38, 42, 43, 45, 46, 49, 31, 32, 39, 3]
 solution : [0, 9, 10, 26, 28]


Solution : [0, 9, 10, 26, 28] has cost 22.


Decide in level 6 among pending : [24, 8, 25, 30, 33, 36, 37, 38, 42, 43, 45, 46, 49, 31, 32, 39, 3]

Coverage : [(0, -1), (1, -1), (2, -1), (3, 67108864), (4, -1), (5, -1), (6, -1), (7, -1), (8, 131072), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, 67108864), (25, 134217728), (26, -1), (27, -1), (28, -1), (29, -1), (30, 262144), (31, 524288), (32, 4096), (33, 4096), (34, -1), (35, -1), (36, 33554432), (37, 1024), (38, 2048), (39, 2048), (40, -1), (41, -1), (42, 65536), (43, 65536), (44, -1), (45, 16777216), (46, 2097152), (47, -1), (48, -1), (49, 8388608), (50, -1), (51, -1), (52, -1)]

Decide 25 with phase True at level 6

After decision at level 6
 pending : [24, 8, 30, 33, 36, 37, 38, 42, 43, 45, 46, 49, 31, 32, 39, 3]
 solution : [0, 9, 10, 26, 28, 25]


New level: 7
 pending : [24, 8, 30, 33, 36, 37, 38, 42, 43, 45, 46, 49, 31, 32, 39, 3]
 solution : [0, 9, 10, 26, 28, 25]


Before reduction : 
 pending  : [24, 8, 30, 33, 36, 37, 38, 42, 43, 45, 46, 49, 31, 32, 39, 3]
 solution : [0, 9, 10, 26, 28, 25]

Essensial at level 7 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 67108864), (4, -1), (5, -1), (6, -1), (7, -1), (8, 131072), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, 67108864), (25, 134217728), (26, -1), (27, -1), (28, -1), (29, -1), (30, 262144), (31, 524288), (32, 4096), (33, 4096), (34, -1), (35, -1), (36, 33554432), (37, 1024), (38, 2048), (39, 2048), (40, -1), (41, -1), (42, 65536), (43, 65536), (44, -1), (45, 16777216), (46, 2097152), (47, -1), (48, -1), (49, 8388608), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 16777216), (4, -1), (5, -1), (6, -1), (7, -1), (8, 32768), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, 16777216), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, 65536), (31, 0), (32, 0), (33, 1024), (34, -1), (35, -1), (36, 16777216), (37, 512), (38, 512), (39, 0), (40, -1), (41, -1), (42, 16384), (43, 16384), (44, -1), (45, 8388608), (46, 524288), (47, -1), (48, -1), (49, 8388608), (50, -1), (51, -1), (52, -1)]

Covered at level 7 : {32, 39, 31}

After reduction : 
 pending  : [24, 8, 30, 33, 36, 37, 38, 42, 43, 45, 46, 49, 3]
 solution : [0, 9, 10, 26, 28, 25]


Before reduction : 
 pending  : [24, 8, 30, 33, 36, 37, 38, 42, 43, 45, 46, 49, 3]
 solution : [0, 9, 10, 26, 28, 25]

Essensial at level 7 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 16777216), (4, -1), (5, -1), (6, -1), (7, -1), (8, 32768), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, 16777216), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, 65536), (31, 0), (32, 0), (33, 1024), (34, -1), (35, -1), (36, 16777216), (37, 512), (38, 512), (39, 0), (40, -1), (41, -1), (42, 16384), (43, 16384), (44, -1), (45, 8388608), (46, 524288), (47, -1), (48, -1), (49, 8388608), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 16777216), (4, -1), (5, -1), (6, -1), (7, -1), (8, 32768), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, 16777216), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, 65536), (31, -1), (32, -1), (33, 1024), (34, -1), (35, -1), (36, 16777216), (37, 512), (38, 512), (39, -1), (40, -1), (41, -1), (42, 16384), (43, 16384), (44, -1), (45, 8388608), (46, 524288), (47, -1), (48, -1), (49, 8388608), (50, -1), (51, -1), (52, -1)]

Covered at level 7 : set()

After reduction : 
 pending  : [24, 8, 30, 33, 36, 37, 38, 42, 43, 45, 46, 49, 3]
 solution : [0, 9, 10, 26, 28, 25]


Solution : [0, 9, 10, 26, 28, 25] has cost 29.


Decide in level 7 among pending : [24, 8, 30, 33, 36, 37, 38, 42, 43, 45, 46, 49, 3]

Coverage : [(0, -1), (1, -1), (2, -1), (3, 16777216), (4, -1), (5, -1), (6, -1), (7, -1), (8, 32768), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, 16777216), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, 65536), (31, -1), (32, -1), (33, 1024), (34, -1), (35, -1), (36, 16777216), (37, 512), (38, 512), (39, -1), (40, -1), (41, -1), (42, 16384), (43, 16384), (44, -1), (45, 8388608), (46, 524288), (47, -1), (48, -1), (49, 8388608), (50, -1), (51, -1), (52, -1)]

Decide 24 with phase True at level 7

After decision at level 7
 pending : [8, 30, 33, 36, 37, 38, 42, 43, 45, 46, 49, 3]
 solution : [0, 9, 10, 26, 28, 25, 24]


New level: 8
 pending : [8, 30, 33, 36, 37, 38, 42, 43, 45, 46, 49, 3]
 solution : [0, 9, 10, 26, 28, 25, 24]


Before reduction : 
 pending  : [8, 30, 33, 36, 37, 38, 42, 43, 45, 46, 49, 3]
 solution : [0, 9, 10, 26, 28, 25, 24]

Essensial at level 8 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 16777216), (4, -1), (5, -1), (6, -1), (7, -1), (8, 32768), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, 16777216), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, 65536), (31, -1), (32, -1), (33, 1024), (34, -1), (35, -1), (36, 16777216), (37, 512), (38, 512), (39, -1), (40, -1), (41, -1), (42, 16384), (43, 16384), (44, -1), (45, 8388608), (46, 524288), (47, -1), (48, -1), (49, 8388608), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 0), (4, -1), (5, -1), (6, -1), (7, -1), (8, 0), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, 0), (31, -1), (32, -1), (33, 0), (34, -1), (35, -1), (36, 0), (37, 0), (38, 0), (39, -1), (40, -1), (41, -1), (42, 0), (43, 0), (44, -1), (45, 0), (46, 0), (47, -1), (48, -1), (49, 0), (50, -1), (51, -1), (52, -1)]

Covered at level 8 : {33, 3, 36, 37, 38, 8, 42, 43, 45, 46, 49, 30}

After reduction : 
 pending  : []
 solution : [0, 9, 10, 26, 28, 25, 24]


Before reduction : 
 pending  : []
 solution : [0, 9, 10, 26, 28, 25, 24]

Essensial at level 8 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 0), (4, -1), (5, -1), (6, -1), (7, -1), (8, 0), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, 0), (31, -1), (32, -1), (33, 0), (34, -1), (35, -1), (36, 0), (37, 0), (38, 0), (39, -1), (40, -1), (41, -1), (42, 0), (43, 0), (44, -1), (45, 0), (46, 0), (47, -1), (48, -1), (49, 0), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 8 : set()

After reduction : 
 pending  : []
 solution : [0, 9, 10, 26, 28, 25, 24]


Solution : [0, 9, 10, 26, 28, 25, 24] has cost 36.


Before backtrack at level 8
 pending : []
 solution : [0, 9, 10, 26, 28, 25, 24]

After backtrack at level 8
 pending : [8, 30, 33, 36, 37, 38, 42, 43, 45, 46, 49, 3]
 solution : [0, 9, 10, 26, 28, 25, 24]


Invert decision for 24 at level 7


New level: 8
 pending : [8, 30, 33, 36, 37, 38, 42, 43, 45, 46, 49, 3]
 solution : [0, 9, 10, 26, 28, 25]


Before reduction : 
 pending  : [8, 30, 33, 36, 37, 38, 42, 43, 45, 46, 49, 3]
 solution : [0, 9, 10, 26, 28, 25]

Essensial at level 8 : {3}

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, 0), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, 0), (31, -1), (32, -1), (33, 0), (34, -1), (35, -1), (36, 0), (37, 0), (38, 0), (39, -1), (40, -1), (41, -1), (42, 0), (43, 0), (44, -1), (45, 0), (46, 0), (47, -1), (48, -1), (49, 0), (50, -1), (51, -1), (52, -1)]

Covered at level 8 : {33, 36, 37, 38, 8, 42, 43, 45, 46, 49, 30}

After reduction : 
 pending  : []
 solution : [0, 9, 10, 26, 28, 25, 3]


Before reduction : 
 pending  : []
 solution : [0, 9, 10, 26, 28, 25, 3]

Essensial at level 8 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, 0), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, 0), (31, -1), (32, -1), (33, 0), (34, -1), (35, -1), (36, 0), (37, 0), (38, 0), (39, -1), (40, -1), (41, -1), (42, 0), (43, 0), (44, -1), (45, 0), (46, 0), (47, -1), (48, -1), (49, 0), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 8 : set()

After reduction : 
 pending  : []
 solution : [0, 9, 10, 26, 28, 25, 3]


Solution : [0, 9, 10, 26, 28, 25, 3] has cost 33.


Before backtrack at level 8
 pending : []
 solution : [0, 9, 10, 26, 28, 25, 3]

After backtrack at level 8
 pending : [3, 8, 30, 33, 36, 37, 38, 42, 43, 45, 46, 49]
 solution : [0, 9, 10, 26, 28, 25]


Before backtrack at level 7
 pending : [3, 8, 30, 33, 36, 37, 38, 42, 43, 45, 46, 49]
 solution : [0, 9, 10, 26, 28, 25]

After backtrack at level 7
 pending : [3, 8, 30, 33, 36, 37, 38, 42, 43, 45, 46, 49, 31, 32, 39, 24]
 solution : [0, 9, 10, 26, 28, 25]


Invert decision for 25 at level 6


New level: 7
 pending : [3, 8, 30, 33, 36, 37, 38, 42, 43, 45, 46, 49, 31, 32, 39, 24]
 solution : [0, 9, 10, 26, 28]


Before reduction : 
 pending  : [3, 8, 30, 33, 36, 37, 38, 42, 43, 45, 46, 49, 31, 32, 39, 24]
 solution : [0, 9, 10, 26, 28]

Essensial at level 7 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 67108864), (4, -1), (5, -1), (6, -1), (7, -1), (8, 131072), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, 67108864), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, 262144), (31, 524288), (32, 4096), (33, 4096), (34, -1), (35, -1), (36, 33554432), (37, 1024), (38, 2048), (39, 2048), (40, -1), (41, -1), (42, 65536), (43, 65536), (44, -1), (45, 16777216), (46, 2097152), (47, -1), (48, -1), (49, 8388608), (50, -1), (51, -1), (52, -1)]

Covered at level 7 : set()

After reduction : 
 pending  : [3, 8, 30, 33, 36, 37, 38, 42, 43, 45, 46, 49, 31, 32, 39, 24]
 solution : [0, 9, 10, 26, 28]


Solution : [0, 9, 10, 26, 28] has cost 22.


Decide in level 7 among pending : [3, 8, 30, 33, 36, 37, 38, 42, 43, 45, 46, 49, 31, 32, 39, 24]

Coverage : [(0, -1), (1, -1), (2, -1), (3, 67108864), (4, -1), (5, -1), (6, -1), (7, -1), (8, 131072), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, 67108864), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, 262144), (31, 524288), (32, 4096), (33, 4096), (34, -1), (35, -1), (36, 33554432), (37, 1024), (38, 2048), (39, 2048), (40, -1), (41, -1), (42, 65536), (43, 65536), (44, -1), (45, 16777216), (46, 2097152), (47, -1), (48, -1), (49, 8388608), (50, -1), (51, -1), (52, -1)]

Decide 3 with phase True at level 7

After decision at level 7
 pending : [8, 30, 33, 36, 37, 38, 42, 43, 45, 46, 49, 31, 32, 39, 24]
 solution : [0, 9, 10, 26, 28, 3]


New level: 8
 pending : [8, 30, 33, 36, 37, 38, 42, 43, 45, 46, 49, 31, 32, 39, 24]
 solution : [0, 9, 10, 26, 28, 3]


Before reduction : 
 pending  : [8, 30, 33, 36, 37, 38, 42, 43, 45, 46, 49, 31, 32, 39, 24]
 solution : [0, 9, 10, 26, 28, 3]

Essensial at level 8 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 67108864), (4, -1), (5, -1), (6, -1), (7, -1), (8, 131072), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, 67108864), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, 262144), (31, 524288), (32, 4096), (33, 4096), (34, -1), (35, -1), (36, 33554432), (37, 1024), (38, 2048), (39, 2048), (40, -1), (41, -1), (42, 65536), (43, 65536), (44, -1), (45, 16777216), (46, 2097152), (47, -1), (48, -1), (49, 8388608), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, 0), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, 0), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, 0), (31, 0), (32, 0), (33, 0), (34, -1), (35, -1), (36, 0), (37, 0), (38, 0), (39, 0), (40, -1), (41, -1), (42, 0), (43, 0), (44, -1), (45, 0), (46, 0), (47, -1), (48, -1), (49, 0), (50, -1), (51, -1), (52, -1)]

Covered at level 8 : {32, 33, 36, 37, 38, 39, 8, 42, 43, 45, 46, 49, 24, 30, 31}

After reduction : 
 pending  : []
 solution : [0, 9, 10, 26, 28, 3]


Before reduction : 
 pending  : []
 solution : [0, 9, 10, 26, 28, 3]

Essensial at level 8 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, 0), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, 0), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, 0), (31, 0), (32, 0), (33, 0), (34, -1), (35, -1), (36, 0), (37, 0), (38, 0), (39, 0), (40, -1), (41, -1), (42, 0), (43, 0), (44, -1), (45, 0), (46, 0), (47, -1), (48, -1), (49, 0), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 8 : set()

After reduction : 
 pending  : []
 solution : [0, 9, 10, 26, 28, 3]


Solution : [0, 9, 10, 26, 28, 3] has cost 26.


Before backtrack at level 8
 pending : []
 solution : [0, 9, 10, 26, 28, 3]

After backtrack at level 8
 pending : [8, 30, 33, 36, 37, 38, 42, 43, 45, 46, 49, 31, 32, 39, 24]
 solution : [0, 9, 10, 26, 28, 3]


Invert decision for 3 at level 7


New level: 8
 pending : [8, 30, 33, 36, 37, 38, 42, 43, 45, 46, 49, 31, 32, 39, 24]
 solution : [0, 9, 10, 26, 28]


Before reduction : 
 pending  : [8, 30, 33, 36, 37, 38, 42, 43, 45, 46, 49, 31, 32, 39, 24]
 solution : [0, 9, 10, 26, 28]

Essensial at level 8 : {24}

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, 0), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, 0), (31, 0), (32, 0), (33, 0), (34, -1), (35, -1), (36, 0), (37, 0), (38, 0), (39, 0), (40, -1), (41, -1), (42, 0), (43, 0), (44, -1), (45, 0), (46, 0), (47, -1), (48, -1), (49, 0), (50, -1), (51, -1), (52, -1)]

Covered at level 8 : {32, 33, 36, 37, 38, 39, 8, 42, 43, 45, 46, 49, 30, 31}

After reduction : 
 pending  : []
 solution : [0, 9, 10, 26, 28, 24]


Before reduction : 
 pending  : []
 solution : [0, 9, 10, 26, 28, 24]

Essensial at level 8 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, 0), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, 0), (31, 0), (32, 0), (33, 0), (34, -1), (35, -1), (36, 0), (37, 0), (38, 0), (39, 0), (40, -1), (41, -1), (42, 0), (43, 0), (44, -1), (45, 0), (46, 0), (47, -1), (48, -1), (49, 0), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 8 : set()

After reduction : 
 pending  : []
 solution : [0, 9, 10, 26, 28, 24]


Solution : [0, 9, 10, 26, 28, 24] has cost 29.


Before backtrack at level 8
 pending : []
 solution : [0, 9, 10, 26, 28, 24]

After backtrack at level 8
 pending : [24, 8, 30, 33, 36, 37, 38, 42, 43, 45, 46, 49, 31, 32, 39]
 solution : [0, 9, 10, 26, 28]


Before backtrack at level 7
 pending : [24, 8, 30, 33, 36, 37, 38, 42, 43, 45, 46, 49, 31, 32, 39]
 solution : [0, 9, 10, 26, 28]

After backtrack at level 7
 pending : [24, 8, 30, 33, 36, 37, 38, 42, 43, 45, 46, 49, 31, 32, 39, 3]
 solution : [0, 9, 10, 26, 28]


Before backtrack at level 6
 pending : [24, 8, 30, 33, 36, 37, 38, 42, 43, 45, 46, 49, 31, 32, 39, 3]
 solution : [0, 9, 10, 26, 28]

After backtrack at level 6
 pending : [24, 8, 30, 33, 36, 37, 38, 42, 43, 45, 46, 49, 31, 32, 39, 3, 25]
 solution : [0, 9, 10, 26, 28]


Before backtrack at level 5
 pending : [24, 8, 30, 33, 36, 37, 38, 42, 43, 45, 46, 49, 31, 32, 39, 3, 25]
 solution : [0, 9, 10, 26, 28]

After backtrack at level 5
 pending : [24, 8, 30, 33, 36, 37, 38, 42, 43, 45, 46, 49, 31, 32, 39, 3, 25, 5, 13, 14, 15, 16, 18, 19, 20, 21, 22, 23, 40, 35]
 solution : [0, 9, 10, 26, 28]


Invert decision for 28 at level 4


New level: 5
 pending : [24, 8, 30, 33, 36, 37, 38, 42, 43, 45, 46, 49, 31, 32, 39, 3, 25, 5, 13, 14, 15, 16, 18, 19, 20, 21, 22, 23, 40, 35]
 solution : [0, 9, 10, 26]


Before reduction : 
 pending  : [24, 8, 30, 33, 36, 37, 38, 42, 43, 45, 46, 49, 31, 32, 39, 3, 25, 5, 13, 14, 15, 16, 18, 19, 20, 21, 22, 23, 40, 35]
 solution : [0, 9, 10, 26]

Essensial at level 5 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 67108864), (4, -1), (5, 131072), (6, -1), (7, -1), (8, 524288), (9, -1), (10, -1), (11, -1), (12, -1), (13, 8388608), (14, 4194304), (15, 196608), (16, 65536), (17, -1), (18, 268435456), (19, 134217728), (20, 2097152), (21, 1048576), (22, 32768), (23, 524288), (24, 67108864), (25, 134217728), (26, -1), (27, -1), (28, -1), (29, -1), (30, 524288), (31, 524288), (32, 4096), (33, 8192), (34, -1), (35, 268435456), (36, 67108864), (37, 33554432), (38, 8192), (39, 134217728), (40, 524288), (41, -1), (42, 262144), (43, 262144), (44, -1), (45, 33554432), (46, 8388608), (47, -1), (48, -1), (49, 33554432), (50, -1), (51, -1), (52, -1)]

Covered at level 5 : set()

After reduction : 
 pending  : [24, 8, 30, 33, 36, 37, 38, 42, 43, 45, 46, 49, 31, 32, 39, 3, 25, 5, 13, 14, 15, 16, 18, 19, 20, 21, 22, 23, 40, 35]
 solution : [0, 9, 10, 26]


Solution : [0, 9, 10, 26] has cost 18.


Decide in level 5 among pending : [24, 8, 30, 33, 36, 37, 38, 42, 43, 45, 46, 49, 31, 32, 39, 3, 25, 5, 13, 14, 15, 16, 18, 19, 20, 21, 22, 23, 40, 35]

Coverage : [(0, -1), (1, -1), (2, -1), (3, 67108864), (4, -1), (5, 131072), (6, -1), (7, -1), (8, 524288), (9, -1), (10, -1), (11, -1), (12, -1), (13, 8388608), (14, 4194304), (15, 196608), (16, 65536), (17, -1), (18, 268435456), (19, 134217728), (20, 2097152), (21, 1048576), (22, 32768), (23, 524288), (24, 67108864), (25, 134217728), (26, -1), (27, -1), (28, -1), (29, -1), (30, 524288), (31, 524288), (32, 4096), (33, 8192), (34, -1), (35, 268435456), (36, 67108864), (37, 33554432), (38, 8192), (39, 134217728), (40, 524288), (41, -1), (42, 262144), (43, 262144), (44, -1), (45, 33554432), (46, 8388608), (47, -1), (48, -1), (49, 33554432), (50, -1), (51, -1), (52, -1)]

Decide 18 with phase True at level 5

After decision at level 5
 pending : [24, 8, 30, 33, 36, 37, 38, 42, 43, 45, 46, 49, 31, 32, 39, 3, 25, 5, 13, 14, 15, 16, 19, 20, 21, 22, 23, 40, 35]
 solution : [0, 9, 10, 26, 18]


New level: 6
 pending : [24, 8, 30, 33, 36, 37, 38, 42, 43, 45, 46, 49, 31, 32, 39, 3, 25, 5, 13, 14, 15, 16, 19, 20, 21, 22, 23, 40, 35]
 solution : [0, 9, 10, 26, 18]


Before reduction : 
 pending  : [24, 8, 30, 33, 36, 37, 38, 42, 43, 45, 46, 49, 31, 32, 39, 3, 25, 5, 13, 14, 15, 16, 19, 20, 21, 22, 23, 40, 35]
 solution : [0, 9, 10, 26, 18]

Essensial at level 6 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 67108864), (4, -1), (5, 131072), (6, -1), (7, -1), (8, 524288), (9, -1), (10, -1), (11, -1), (12, -1), (13, 8388608), (14, 4194304), (15, 196608), (16, 65536), (17, -1), (18, 268435456), (19, 134217728), (20, 2097152), (21, 1048576), (22, 32768), (23, 524288), (24, 67108864), (25, 134217728), (26, -1), (27, -1), (28, -1), (29, -1), (30, 524288), (31, 524288), (32, 4096), (33, 8192), (34, -1), (35, 268435456), (36, 67108864), (37, 33554432), (38, 8192), (39, 134217728), (40, 524288), (41, -1), (42, 262144), (43, 262144), (44, -1), (45, 33554432), (46, 8388608), (47, -1), (48, -1), (49, 33554432), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 67108864), (4, -1), (5, 0), (6, -1), (7, -1), (8, 131072), (9, -1), (10, -1), (11, -1), (12, -1), (13, 0), (14, 0), (15, 0), (16, 0), (17, -1), (18, -1), (19, 0), (20, 0), (21, 0), (22, 0), (23, 0), (24, 67108864), (25, 134217728), (26, -1), (27, -1), (28, -1), (29, -1), (30, 262144), (31, 524288), (32, 4096), (33, 4096), (34, -1), (35, 268435456), (36, 33554432), (37, 1024), (38, 2048), (39, 2048), (40, 0), (41, -1), (42, 65536), (43, 65536), (44, -1), (45, 16777216), (46, 2097152), (47, -1), (48, -1), (49, 33554432), (50, -1), (51, -1), (52, -1)]

Covered at level 6 : {5, 40, 13, 14, 15, 16, 19, 20, 21, 22, 23}

After reduction : 
 pending  : [24, 8, 30, 33, 36, 37, 38, 42, 43, 45, 46, 49, 31, 32, 39, 3, 25, 35]
 solution : [0, 9, 10, 26, 18]


Before reduction : 
 pending  : [24, 8, 30, 33, 36, 37, 38, 42, 43, 45, 46, 49, 31, 32, 39, 3, 25, 35]
 solution : [0, 9, 10, 26, 18]

Essensial at level 6 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 67108864), (4, -1), (5, 0), (6, -1), (7, -1), (8, 131072), (9, -1), (10, -1), (11, -1), (12, -1), (13, 0), (14, 0), (15, 0), (16, 0), (17, -1), (18, -1), (19, 0), (20, 0), (21, 0), (22, 0), (23, 0), (24, 67108864), (25, 134217728), (26, -1), (27, -1), (28, -1), (29, -1), (30, 262144), (31, 524288), (32, 4096), (33, 4096), (34, -1), (35, 268435456), (36, 33554432), (37, 1024), (38, 2048), (39, 2048), (40, 0), (41, -1), (42, 65536), (43, 65536), (44, -1), (45, 16777216), (46, 2097152), (47, -1), (48, -1), (49, 33554432), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 67108864), (4, -1), (5, -1), (6, -1), (7, -1), (8, 131072), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, 67108864), (25, 134217728), (26, -1), (27, -1), (28, -1), (29, -1), (30, 262144), (31, 524288), (32, 4096), (33, 4096), (34, -1), (35, 268435456), (36, 33554432), (37, 1024), (38, 2048), (39, 2048), (40, -1), (41, -1), (42, 65536), (43, 65536), (44, -1), (45, 16777216), (46, 2097152), (47, -1), (48, -1), (49, 33554432), (50, -1), (51, -1), (52, -1)]

Covered at level 6 : set()

After reduction : 
 pending  : [24, 8, 30, 33, 36, 37, 38, 42, 43, 45, 46, 49, 31, 32, 39, 3, 25, 35]
 solution : [0, 9, 10, 26, 18]


Solution : [0, 9, 10, 26, 18] has cost 25.


Decide in level 6 among pending : [24, 8, 30, 33, 36, 37, 38, 42, 43, 45, 46, 49, 31, 32, 39, 3, 25, 35]

Coverage : [(0, -1), (1, -1), (2, -1), (3, 67108864), (4, -1), (5, -1), (6, -1), (7, -1), (8, 131072), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, 67108864), (25, 134217728), (26, -1), (27, -1), (28, -1), (29, -1), (30, 262144), (31, 524288), (32, 4096), (33, 4096), (34, -1), (35, 268435456), (36, 33554432), (37, 1024), (38, 2048), (39, 2048), (40, -1), (41, -1), (42, 65536), (43, 65536), (44, -1), (45, 16777216), (46, 2097152), (47, -1), (48, -1), (49, 33554432), (50, -1), (51, -1), (52, -1)]

Decide 35 with phase True at level 6

After decision at level 6
 pending : [24, 8, 30, 33, 36, 37, 38, 42, 43, 45, 46, 49, 31, 32, 39, 3, 25]
 solution : [0, 9, 10, 26, 18, 35]


New level: 7
 pending : [24, 8, 30, 33, 36, 37, 38, 42, 43, 45, 46, 49, 31, 32, 39, 3, 25]
 solution : [0, 9, 10, 26, 18, 35]


Before reduction : 
 pending  : [24, 8, 30, 33, 36, 37, 38, 42, 43, 45, 46, 49, 31, 32, 39, 3, 25]
 solution : [0, 9, 10, 26, 18, 35]

Essensial at level 7 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 67108864), (4, -1), (5, -1), (6, -1), (7, -1), (8, 131072), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, 67108864), (25, 134217728), (26, -1), (27, -1), (28, -1), (29, -1), (30, 262144), (31, 524288), (32, 4096), (33, 4096), (34, -1), (35, 268435456), (36, 33554432), (37, 1024), (38, 2048), (39, 2048), (40, -1), (41, -1), (42, 65536), (43, 65536), (44, -1), (45, 16777216), (46, 2097152), (47, -1), (48, -1), (49, 33554432), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 67108864), (4, -1), (5, -1), (6, -1), (7, -1), (8, 32768), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, 67108864), (25, 2048), (26, -1), (27, -1), (28, -1), (29, -1), (30, 65536), (31, 0), (32, 0), (33, 1024), (34, -1), (35, -1), (36, 8388608), (37, 512), (38, 512), (39, 0), (40, -1), (41, -1), (42, 16384), (43, 16384), (44, -1), (45, 4194304), (46, 524288), (47, -1), (48, -1), (49, 8388608), (50, -1), (51, -1), (52, -1)]

Covered at level 7 : {32, 39, 31}

After reduction : 
 pending  : [24, 8, 30, 33, 36, 37, 38, 42, 43, 45, 46, 49, 3, 25]
 solution : [0, 9, 10, 26, 18, 35]


Before reduction : 
 pending  : [24, 8, 30, 33, 36, 37, 38, 42, 43, 45, 46, 49, 3, 25]
 solution : [0, 9, 10, 26, 18, 35]

Essensial at level 7 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 67108864), (4, -1), (5, -1), (6, -1), (7, -1), (8, 32768), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, 67108864), (25, 2048), (26, -1), (27, -1), (28, -1), (29, -1), (30, 65536), (31, 0), (32, 0), (33, 1024), (34, -1), (35, -1), (36, 8388608), (37, 512), (38, 512), (39, 0), (40, -1), (41, -1), (42, 16384), (43, 16384), (44, -1), (45, 4194304), (46, 524288), (47, -1), (48, -1), (49, 8388608), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 67108864), (4, -1), (5, -1), (6, -1), (7, -1), (8, 32768), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, 67108864), (25, 2048), (26, -1), (27, -1), (28, -1), (29, -1), (30, 65536), (31, -1), (32, -1), (33, 1024), (34, -1), (35, -1), (36, 8388608), (37, 512), (38, 512), (39, -1), (40, -1), (41, -1), (42, 16384), (43, 16384), (44, -1), (45, 4194304), (46, 524288), (47, -1), (48, -1), (49, 8388608), (50, -1), (51, -1), (52, -1)]

Covered at level 7 : set()

After reduction : 
 pending  : [24, 8, 30, 33, 36, 37, 38, 42, 43, 45, 46, 49, 3, 25]
 solution : [0, 9, 10, 26, 18, 35]


Solution : [0, 9, 10, 26, 18, 35] has cost 38.


Before backtrack at level 7
 pending : [24, 8, 30, 33, 36, 37, 38, 42, 43, 45, 46, 49, 3, 25]
 solution : [0, 9, 10, 26, 18, 35]

After backtrack at level 7
 pending : [24, 8, 30, 33, 36, 37, 38, 42, 43, 45, 46, 49, 3, 25, 31, 32, 39]
 solution : [0, 9, 10, 26, 18, 35]


Invert decision for 35 at level 6


New level: 7
 pending : [24, 8, 30, 33, 36, 37, 38, 42, 43, 45, 46, 49, 3, 25, 31, 32, 39]
 solution : [0, 9, 10, 26, 18]


Before reduction : 
 pending  : [24, 8, 30, 33, 36, 37, 38, 42, 43, 45, 46, 49, 3, 25, 31, 32, 39]
 solution : [0, 9, 10, 26, 18]

Essensial at level 7 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 67108864), (4, -1), (5, -1), (6, -1), (7, -1), (8, 32768), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, 67108864), (25, 2048), (26, -1), (27, -1), (28, -1), (29, -1), (30, 65536), (31, -1), (32, -1), (33, 1024), (34, -1), (35, -1), (36, 8388608), (37, 512), (38, 512), (39, -1), (40, -1), (41, -1), (42, 16384), (43, 16384), (44, -1), (45, 4194304), (46, 524288), (47, -1), (48, -1), (49, 8388608), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 67108864), (4, -1), (5, -1), (6, -1), (7, -1), (8, 131072), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, 67108864), (25, 134217728), (26, -1), (27, -1), (28, -1), (29, -1), (30, 262144), (31, 524288), (32, 4096), (33, 4096), (34, -1), (35, -1), (36, 33554432), (37, 1024), (38, 2048), (39, 2048), (40, -1), (41, -1), (42, 65536), (43, 65536), (44, -1), (45, 16777216), (46, 2097152), (47, -1), (48, -1), (49, 33554432), (50, -1), (51, -1), (52, -1)]

Covered at level 7 : set()

After reduction : 
 pending  : [24, 8, 30, 33, 36, 37, 38, 42, 43, 45, 46, 49, 3, 25, 31, 32, 39]
 solution : [0, 9, 10, 26, 18]


Solution : [0, 9, 10, 26, 18] has cost 25.


Decide in level 7 among pending : [24, 8, 30, 33, 36, 37, 38, 42, 43, 45, 46, 49, 3, 25, 31, 32, 39]

Coverage : [(0, -1), (1, -1), (2, -1), (3, 67108864), (4, -1), (5, -1), (6, -1), (7, -1), (8, 131072), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, 67108864), (25, 134217728), (26, -1), (27, -1), (28, -1), (29, -1), (30, 262144), (31, 524288), (32, 4096), (33, 4096), (34, -1), (35, -1), (36, 33554432), (37, 1024), (38, 2048), (39, 2048), (40, -1), (41, -1), (42, 65536), (43, 65536), (44, -1), (45, 16777216), (46, 2097152), (47, -1), (48, -1), (49, 33554432), (50, -1), (51, -1), (52, -1)]

Decide 25 with phase True at level 7

After decision at level 7
 pending : [24, 8, 30, 33, 36, 37, 38, 42, 43, 45, 46, 49, 3, 31, 32, 39]
 solution : [0, 9, 10, 26, 18, 25]


New level: 8
 pending : [24, 8, 30, 33, 36, 37, 38, 42, 43, 45, 46, 49, 3, 31, 32, 39]
 solution : [0, 9, 10, 26, 18, 25]


Before reduction : 
 pending  : [24, 8, 30, 33, 36, 37, 38, 42, 43, 45, 46, 49, 3, 31, 32, 39]
 solution : [0, 9, 10, 26, 18, 25]

Essensial at level 8 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 67108864), (4, -1), (5, -1), (6, -1), (7, -1), (8, 131072), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, 67108864), (25, 134217728), (26, -1), (27, -1), (28, -1), (29, -1), (30, 262144), (31, 524288), (32, 4096), (33, 4096), (34, -1), (35, -1), (36, 33554432), (37, 1024), (38, 2048), (39, 2048), (40, -1), (41, -1), (42, 65536), (43, 65536), (44, -1), (45, 16777216), (46, 2097152), (47, -1), (48, -1), (49, 33554432), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 16777216), (4, -1), (5, -1), (6, -1), (7, -1), (8, 32768), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, 16777216), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, 65536), (31, 0), (32, 0), (33, 1024), (34, -1), (35, -1), (36, 16777216), (37, 512), (38, 512), (39, 0), (40, -1), (41, -1), (42, 16384), (43, 16384), (44, -1), (45, 8388608), (46, 524288), (47, -1), (48, -1), (49, 33554432), (50, -1), (51, -1), (52, -1)]

Covered at level 8 : {32, 39, 31}

After reduction : 
 pending  : [24, 8, 30, 33, 36, 37, 38, 42, 43, 45, 46, 49, 3]
 solution : [0, 9, 10, 26, 18, 25]


Before reduction : 
 pending  : [24, 8, 30, 33, 36, 37, 38, 42, 43, 45, 46, 49, 3]
 solution : [0, 9, 10, 26, 18, 25]

Essensial at level 8 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 16777216), (4, -1), (5, -1), (6, -1), (7, -1), (8, 32768), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, 16777216), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, 65536), (31, 0), (32, 0), (33, 1024), (34, -1), (35, -1), (36, 16777216), (37, 512), (38, 512), (39, 0), (40, -1), (41, -1), (42, 16384), (43, 16384), (44, -1), (45, 8388608), (46, 524288), (47, -1), (48, -1), (49, 33554432), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 16777216), (4, -1), (5, -1), (6, -1), (7, -1), (8, 32768), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, 16777216), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, 65536), (31, -1), (32, -1), (33, 1024), (34, -1), (35, -1), (36, 16777216), (37, 512), (38, 512), (39, -1), (40, -1), (41, -1), (42, 16384), (43, 16384), (44, -1), (45, 8388608), (46, 524288), (47, -1), (48, -1), (49, 33554432), (50, -1), (51, -1), (52, -1)]

Covered at level 8 : set()

After reduction : 
 pending  : [24, 8, 30, 33, 36, 37, 38, 42, 43, 45, 46, 49, 3]
 solution : [0, 9, 10, 26, 18, 25]


Solution : [0, 9, 10, 26, 18, 25] has cost 32.


Before backtrack at level 8
 pending : [24, 8, 30, 33, 36, 37, 38, 42, 43, 45, 46, 49, 3]
 solution : [0, 9, 10, 26, 18, 25]

After backtrack at level 8
 pending : [24, 8, 30, 33, 36, 37, 38, 42, 43, 45, 46, 49, 3, 31, 32, 39]
 solution : [0, 9, 10, 26, 18, 25]


Invert decision for 25 at level 7


New level: 8
 pending : [24, 8, 30, 33, 36, 37, 38, 42, 43, 45, 46, 49, 3, 31, 32, 39]
 solution : [0, 9, 10, 26, 18]


Before reduction : 
 pending  : [24, 8, 30, 33, 36, 37, 38, 42, 43, 45, 46, 49, 3, 31, 32, 39]
 solution : [0, 9, 10, 26, 18]

Essensial at level 8 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 16777216), (4, -1), (5, -1), (6, -1), (7, -1), (8, 32768), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, 16777216), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, 65536), (31, -1), (32, -1), (33, 1024), (34, -1), (35, -1), (36, 16777216), (37, 512), (38, 512), (39, -1), (40, -1), (41, -1), (42, 16384), (43, 16384), (44, -1), (45, 8388608), (46, 524288), (47, -1), (48, -1), (49, 33554432), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 67108864), (4, -1), (5, -1), (6, -1), (7, -1), (8, 131072), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, 67108864), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, 262144), (31, 524288), (32, 4096), (33, 4096), (34, -1), (35, -1), (36, 33554432), (37, 1024), (38, 2048), (39, 2048), (40, -1), (41, -1), (42, 65536), (43, 65536), (44, -1), (45, 16777216), (46, 2097152), (47, -1), (48, -1), (49, 33554432), (50, -1), (51, -1), (52, -1)]

Covered at level 8 : set()

After reduction : 
 pending  : [24, 8, 30, 33, 36, 37, 38, 42, 43, 45, 46, 49, 3, 31, 32, 39]
 solution : [0, 9, 10, 26, 18]


Solution : [0, 9, 10, 26, 18] has cost 25.


Decide in level 8 among pending : [24, 8, 30, 33, 36, 37, 38, 42, 43, 45, 46, 49, 3, 31, 32, 39]

Coverage : [(0, -1), (1, -1), (2, -1), (3, 67108864), (4, -1), (5, -1), (6, -1), (7, -1), (8, 131072), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, 67108864), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, 262144), (31, 524288), (32, 4096), (33, 4096), (34, -1), (35, -1), (36, 33554432), (37, 1024), (38, 2048), (39, 2048), (40, -1), (41, -1), (42, 65536), (43, 65536), (44, -1), (45, 16777216), (46, 2097152), (47, -1), (48, -1), (49, 33554432), (50, -1), (51, -1), (52, -1)]

Decide 24 with phase True at level 8

After decision at level 8
 pending : [8, 30, 33, 36, 37, 38, 42, 43, 45, 46, 49, 3, 31, 32, 39]
 solution : [0, 9, 10, 26, 18, 24]


New level: 9
 pending : [8, 30, 33, 36, 37, 38, 42, 43, 45, 46, 49, 3, 31, 32, 39]
 solution : [0, 9, 10, 26, 18, 24]


Before reduction : 
 pending  : [8, 30, 33, 36, 37, 38, 42, 43, 45, 46, 49, 3, 31, 32, 39]
 solution : [0, 9, 10, 26, 18, 24]

Essensial at level 9 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 67108864), (4, -1), (5, -1), (6, -1), (7, -1), (8, 131072), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, 67108864), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, 262144), (31, 524288), (32, 4096), (33, 4096), (34, -1), (35, -1), (36, 33554432), (37, 1024), (38, 2048), (39, 2048), (40, -1), (41, -1), (42, 65536), (43, 65536), (44, -1), (45, 16777216), (46, 2097152), (47, -1), (48, -1), (49, 33554432), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 0), (4, -1), (5, -1), (6, -1), (7, -1), (8, 0), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, 0), (31, 0), (32, 0), (33, 0), (34, -1), (35, -1), (36, 0), (37, 0), (38, 0), (39, 0), (40, -1), (41, -1), (42, 0), (43, 0), (44, -1), (45, 0), (46, 0), (47, -1), (48, -1), (49, 0), (50, -1), (51, -1), (52, -1)]

Covered at level 9 : {32, 33, 3, 36, 37, 38, 39, 8, 42, 43, 45, 46, 49, 30, 31}

After reduction : 
 pending  : []
 solution : [0, 9, 10, 26, 18, 24]


Before reduction : 
 pending  : []
 solution : [0, 9, 10, 26, 18, 24]

Essensial at level 9 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 0), (4, -1), (5, -1), (6, -1), (7, -1), (8, 0), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, 0), (31, 0), (32, 0), (33, 0), (34, -1), (35, -1), (36, 0), (37, 0), (38, 0), (39, 0), (40, -1), (41, -1), (42, 0), (43, 0), (44, -1), (45, 0), (46, 0), (47, -1), (48, -1), (49, 0), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 9 : set()

After reduction : 
 pending  : []
 solution : [0, 9, 10, 26, 18, 24]


Solution : [0, 9, 10, 26, 18, 24] has cost 32.


Before backtrack at level 9
 pending : []
 solution : [0, 9, 10, 26, 18, 24]

After backtrack at level 9
 pending : [8, 30, 33, 36, 37, 38, 42, 43, 45, 46, 49, 3, 31, 32, 39]
 solution : [0, 9, 10, 26, 18, 24]


Invert decision for 24 at level 8


New level: 9
 pending : [8, 30, 33, 36, 37, 38, 42, 43, 45, 46, 49, 3, 31, 32, 39]
 solution : [0, 9, 10, 26, 18]


Before reduction : 
 pending  : [8, 30, 33, 36, 37, 38, 42, 43, 45, 46, 49, 3, 31, 32, 39]
 solution : [0, 9, 10, 26, 18]

Essensial at level 9 : {3}

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, 0), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, 0), (31, 0), (32, 0), (33, 0), (34, -1), (35, -1), (36, 0), (37, 0), (38, 0), (39, 0), (40, -1), (41, -1), (42, 0), (43, 0), (44, -1), (45, 0), (46, 0), (47, -1), (48, -1), (49, 0), (50, -1), (51, -1), (52, -1)]

Covered at level 9 : {32, 33, 36, 37, 38, 39, 8, 42, 43, 45, 46, 49, 30, 31}

After reduction : 
 pending  : []
 solution : [0, 9, 10, 26, 18, 3]


Before reduction : 
 pending  : []
 solution : [0, 9, 10, 26, 18, 3]

Essensial at level 9 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, 0), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, 0), (31, 0), (32, 0), (33, 0), (34, -1), (35, -1), (36, 0), (37, 0), (38, 0), (39, 0), (40, -1), (41, -1), (42, 0), (43, 0), (44, -1), (45, 0), (46, 0), (47, -1), (48, -1), (49, 0), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 9 : set()

After reduction : 
 pending  : []
 solution : [0, 9, 10, 26, 18, 3]


Solution : [0, 9, 10, 26, 18, 3] has cost 29.


Before backtrack at level 9
 pending : []
 solution : [0, 9, 10, 26, 18, 3]

After backtrack at level 9
 pending : [3, 8, 30, 33, 36, 37, 38, 42, 43, 45, 46, 49, 31, 32, 39]
 solution : [0, 9, 10, 26, 18]


Before backtrack at level 8
 pending : [3, 8, 30, 33, 36, 37, 38, 42, 43, 45, 46, 49, 31, 32, 39]
 solution : [0, 9, 10, 26, 18]

After backtrack at level 8
 pending : [3, 8, 30, 33, 36, 37, 38, 42, 43, 45, 46, 49, 31, 32, 39, 24]
 solution : [0, 9, 10, 26, 18]


Before backtrack at level 7
 pending : [3, 8, 30, 33, 36, 37, 38, 42, 43, 45, 46, 49, 31, 32, 39, 24]
 solution : [0, 9, 10, 26, 18]

After backtrack at level 7
 pending : [3, 8, 30, 33, 36, 37, 38, 42, 43, 45, 46, 49, 31, 32, 39, 24, 25]
 solution : [0, 9, 10, 26, 18]


Before backtrack at level 6
 pending : [3, 8, 30, 33, 36, 37, 38, 42, 43, 45, 46, 49, 31, 32, 39, 24, 25]
 solution : [0, 9, 10, 26, 18]

After backtrack at level 6
 pending : [3, 8, 30, 33, 36, 37, 38, 42, 43, 45, 46, 49, 31, 32, 39, 24, 25, 5, 13, 14, 15, 16, 19, 20, 21, 22, 23, 40, 35]
 solution : [0, 9, 10, 26, 18]


Invert decision for 18 at level 5


New level: 6
 pending : [3, 8, 30, 33, 36, 37, 38, 42, 43, 45, 46, 49, 31, 32, 39, 24, 25, 5, 13, 14, 15, 16, 19, 20, 21, 22, 23, 40, 35]
 solution : [0, 9, 10, 26]


Before reduction : 
 pending  : [3, 8, 30, 33, 36, 37, 38, 42, 43, 45, 46, 49, 31, 32, 39, 24, 25, 5, 13, 14, 15, 16, 19, 20, 21, 22, 23, 40, 35]
 solution : [0, 9, 10, 26]

Essensial at level 6 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 67108864), (4, -1), (5, 131072), (6, -1), (7, -1), (8, 524288), (9, -1), (10, -1), (11, -1), (12, -1), (13, 8388608), (14, 4194304), (15, 196608), (16, 65536), (17, -1), (18, -1), (19, 134217728), (20, 2097152), (21, 1048576), (22, 32768), (23, 524288), (24, 67108864), (25, 134217728), (26, -1), (27, -1), (28, -1), (29, -1), (30, 524288), (31, 524288), (32, 4096), (33, 8192), (34, -1), (35, 268435456), (36, 67108864), (37, 33554432), (38, 8192), (39, 134217728), (40, 524288), (41, -1), (42, 262144), (43, 262144), (44, -1), (45, 33554432), (46, 8388608), (47, -1), (48, -1), (49, 33554432), (50, -1), (51, -1), (52, -1)]

Covered at level 6 : set()

After reduction : 
 pending  : [3, 8, 30, 33, 36, 37, 38, 42, 43, 45, 46, 49, 31, 32, 39, 24, 25, 5, 13, 14, 15, 16, 19, 20, 21, 22, 23, 40, 35]
 solution : [0, 9, 10, 26]


Solution : [0, 9, 10, 26] has cost 18.


Decide in level 6 among pending : [3, 8, 30, 33, 36, 37, 38, 42, 43, 45, 46, 49, 31, 32, 39, 24, 25, 5, 13, 14, 15, 16, 19, 20, 21, 22, 23, 40, 35]

Coverage : [(0, -1), (1, -1), (2, -1), (3, 67108864), (4, -1), (5, 131072), (6, -1), (7, -1), (8, 524288), (9, -1), (10, -1), (11, -1), (12, -1), (13, 8388608), (14, 4194304), (15, 196608), (16, 65536), (17, -1), (18, -1), (19, 134217728), (20, 2097152), (21, 1048576), (22, 32768), (23, 524288), (24, 67108864), (25, 134217728), (26, -1), (27, -1), (28, -1), (29, -1), (30, 524288), (31, 524288), (32, 4096), (33, 8192), (34, -1), (35, 268435456), (36, 67108864), (37, 33554432), (38, 8192), (39, 134217728), (40, 524288), (41, -1), (42, 262144), (43, 262144), (44, -1), (45, 33554432), (46, 8388608), (47, -1), (48, -1), (49, 33554432), (50, -1), (51, -1), (52, -1)]

Decide 35 with phase True at level 6

After decision at level 6
 pending : [3, 8, 30, 33, 36, 37, 38, 42, 43, 45, 46, 49, 31, 32, 39, 24, 25, 5, 13, 14, 15, 16, 19, 20, 21, 22, 23, 40]
 solution : [0, 9, 10, 26, 35]


New level: 7
 pending : [3, 8, 30, 33, 36, 37, 38, 42, 43, 45, 46, 49, 31, 32, 39, 24, 25, 5, 13, 14, 15, 16, 19, 20, 21, 22, 23, 40]
 solution : [0, 9, 10, 26, 35]


Before reduction : 
 pending  : [3, 8, 30, 33, 36, 37, 38, 42, 43, 45, 46, 49, 31, 32, 39, 24, 25, 5, 13, 14, 15, 16, 19, 20, 21, 22, 23, 40]
 solution : [0, 9, 10, 26, 35]

Essensial at level 7 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 67108864), (4, -1), (5, 131072), (6, -1), (7, -1), (8, 524288), (9, -1), (10, -1), (11, -1), (12, -1), (13, 8388608), (14, 4194304), (15, 196608), (16, 65536), (17, -1), (18, -1), (19, 134217728), (20, 2097152), (21, 1048576), (22, 32768), (23, 524288), (24, 67108864), (25, 134217728), (26, -1), (27, -1), (28, -1), (29, -1), (30, 524288), (31, 524288), (32, 4096), (33, 8192), (34, -1), (35, 268435456), (36, 67108864), (37, 33554432), (38, 8192), (39, 134217728), (40, 524288), (41, -1), (42, 262144), (43, 262144), (44, -1), (45, 33554432), (46, 8388608), (47, -1), (48, -1), (49, 33554432), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 67108864), (4, -1), (5, 131072), (6, -1), (7, -1), (8, 131072), (9, -1), (10, -1), (11, -1), (12, -1), (13, 8388608), (14, 4194304), (15, 196608), (16, 65536), (17, -1), (18, -1), (19, 134217728), (20, 2097152), (21, 1048576), (22, 32768), (23, 524288), (24, 67108864), (25, 4096), (26, -1), (27, -1), (28, -1), (29, -1), (30, 131072), (31, 0), (32, 0), (33, 2048), (34, -1), (35, -1), (36, 16777216), (37, 33554432), (38, 2048), (39, 4096), (40, 524288), (41, -1), (42, 65536), (43, 65536), (44, -1), (45, 8388608), (46, 2097152), (47, -1), (48, -1), (49, 8388608), (50, -1), (51, -1), (52, -1)]

Covered at level 7 : {32, 31}

After reduction : 
 pending  : [3, 8, 30, 33, 36, 37, 38, 42, 43, 45, 46, 49, 39, 24, 25, 5, 13, 14, 15, 16, 19, 20, 21, 22, 23, 40]
 solution : [0, 9, 10, 26, 35]


Before reduction : 
 pending  : [3, 8, 30, 33, 36, 37, 38, 42, 43, 45, 46, 49, 39, 24, 25, 5, 13, 14, 15, 16, 19, 20, 21, 22, 23, 40]
 solution : [0, 9, 10, 26, 35]

Essensial at level 7 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 67108864), (4, -1), (5, 131072), (6, -1), (7, -1), (8, 131072), (9, -1), (10, -1), (11, -1), (12, -1), (13, 8388608), (14, 4194304), (15, 196608), (16, 65536), (17, -1), (18, -1), (19, 134217728), (20, 2097152), (21, 1048576), (22, 32768), (23, 524288), (24, 67108864), (25, 4096), (26, -1), (27, -1), (28, -1), (29, -1), (30, 131072), (31, 0), (32, 0), (33, 2048), (34, -1), (35, -1), (36, 16777216), (37, 33554432), (38, 2048), (39, 4096), (40, 524288), (41, -1), (42, 65536), (43, 65536), (44, -1), (45, 8388608), (46, 2097152), (47, -1), (48, -1), (49, 8388608), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 67108864), (4, -1), (5, 131072), (6, -1), (7, -1), (8, 131072), (9, -1), (10, -1), (11, -1), (12, -1), (13, 8388608), (14, 4194304), (15, 196608), (16, 65536), (17, -1), (18, -1), (19, 134217728), (20, 2097152), (21, 1048576), (22, 32768), (23, 524288), (24, 67108864), (25, 4096), (26, -1), (27, -1), (28, -1), (29, -1), (30, 131072), (31, -1), (32, -1), (33, 2048), (34, -1), (35, -1), (36, 16777216), (37, 33554432), (38, 2048), (39, 4096), (40, 524288), (41, -1), (42, 65536), (43, 65536), (44, -1), (45, 8388608), (46, 2097152), (47, -1), (48, -1), (49, 8388608), (50, -1), (51, -1), (52, -1)]

Covered at level 7 : set()

After reduction : 
 pending  : [3, 8, 30, 33, 36, 37, 38, 42, 43, 45, 46, 49, 39, 24, 25, 5, 13, 14, 15, 16, 19, 20, 21, 22, 23, 40]
 solution : [0, 9, 10, 26, 35]


Solution : [0, 9, 10, 26, 35] has cost 31.


Before backtrack at level 7
 pending : [3, 8, 30, 33, 36, 37, 38, 42, 43, 45, 46, 49, 39, 24, 25, 5, 13, 14, 15, 16, 19, 20, 21, 22, 23, 40]
 solution : [0, 9, 10, 26, 35]

After backtrack at level 7
 pending : [3, 8, 30, 33, 36, 37, 38, 42, 43, 45, 46, 49, 39, 24, 25, 5, 13, 14, 15, 16, 19, 20, 21, 22, 23, 40, 31, 32]
 solution : [0, 9, 10, 26, 35]


Invert decision for 35 at level 6


New level: 7
 pending : [3, 8, 30, 33, 36, 37, 38, 42, 43, 45, 46, 49, 39, 24, 25, 5, 13, 14, 15, 16, 19, 20, 21, 22, 23, 40, 31, 32]
 solution : [0, 9, 10, 26]


Before reduction : 
 pending  : [3, 8, 30, 33, 36, 37, 38, 42, 43, 45, 46, 49, 39, 24, 25, 5, 13, 14, 15, 16, 19, 20, 21, 22, 23, 40, 31, 32]
 solution : [0, 9, 10, 26]

Essensial at level 7 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 67108864), (4, -1), (5, 131072), (6, -1), (7, -1), (8, 131072), (9, -1), (10, -1), (11, -1), (12, -1), (13, 8388608), (14, 4194304), (15, 196608), (16, 65536), (17, -1), (18, -1), (19, 134217728), (20, 2097152), (21, 1048576), (22, 32768), (23, 524288), (24, 67108864), (25, 4096), (26, -1), (27, -1), (28, -1), (29, -1), (30, 131072), (31, -1), (32, -1), (33, 2048), (34, -1), (35, -1), (36, 16777216), (37, 33554432), (38, 2048), (39, 4096), (40, 524288), (41, -1), (42, 65536), (43, 65536), (44, -1), (45, 8388608), (46, 2097152), (47, -1), (48, -1), (49, 8388608), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 67108864), (4, -1), (5, 131072), (6, -1), (7, -1), (8, 524288), (9, -1), (10, -1), (11, -1), (12, -1), (13, 8388608), (14, 4194304), (15, 196608), (16, 65536), (17, -1), (18, -1), (19, 134217728), (20, 2097152), (21, 1048576), (22, 32768), (23, 524288), (24, 67108864), (25, 134217728), (26, -1), (27, -1), (28, -1), (29, -1), (30, 524288), (31, 524288), (32, 4096), (33, 8192), (34, -1), (35, -1), (36, 67108864), (37, 33554432), (38, 8192), (39, 134217728), (40, 524288), (41, -1), (42, 262144), (43, 262144), (44, -1), (45, 33554432), (46, 8388608), (47, -1), (48, -1), (49, 33554432), (50, -1), (51, -1), (52, -1)]

Covered at level 7 : set()

After reduction : 
 pending  : [3, 8, 30, 33, 36, 37, 38, 42, 43, 45, 46, 49, 39, 24, 25, 5, 13, 14, 15, 16, 19, 20, 21, 22, 23, 40, 31, 32]
 solution : [0, 9, 10, 26]


Solution : [0, 9, 10, 26] has cost 18.


Decide in level 7 among pending : [3, 8, 30, 33, 36, 37, 38, 42, 43, 45, 46, 49, 39, 24, 25, 5, 13, 14, 15, 16, 19, 20, 21, 22, 23, 40, 31, 32]

Coverage : [(0, -1), (1, -1), (2, -1), (3, 67108864), (4, -1), (5, 131072), (6, -1), (7, -1), (8, 524288), (9, -1), (10, -1), (11, -1), (12, -1), (13, 8388608), (14, 4194304), (15, 196608), (16, 65536), (17, -1), (18, -1), (19, 134217728), (20, 2097152), (21, 1048576), (22, 32768), (23, 524288), (24, 67108864), (25, 134217728), (26, -1), (27, -1), (28, -1), (29, -1), (30, 524288), (31, 524288), (32, 4096), (33, 8192), (34, -1), (35, -1), (36, 67108864), (37, 33554432), (38, 8192), (39, 134217728), (40, 524288), (41, -1), (42, 262144), (43, 262144), (44, -1), (45, 33554432), (46, 8388608), (47, -1), (48, -1), (49, 33554432), (50, -1), (51, -1), (52, -1)]

Decide 39 with phase True at level 7

After decision at level 7
 pending : [3, 8, 30, 33, 36, 37, 38, 42, 43, 45, 46, 49, 24, 25, 5, 13, 14, 15, 16, 19, 20, 21, 22, 23, 40, 31, 32]
 solution : [0, 9, 10, 26, 39]


New level: 8
 pending : [3, 8, 30, 33, 36, 37, 38, 42, 43, 45, 46, 49, 24, 25, 5, 13, 14, 15, 16, 19, 20, 21, 22, 23, 40, 31, 32]
 solution : [0, 9, 10, 26, 39]


Before reduction : 
 pending  : [3, 8, 30, 33, 36, 37, 38, 42, 43, 45, 46, 49, 24, 25, 5, 13, 14, 15, 16, 19, 20, 21, 22, 23, 40, 31, 32]
 solution : [0, 9, 10, 26, 39]

Essensial at level 8 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 67108864), (4, -1), (5, 131072), (6, -1), (7, -1), (8, 524288), (9, -1), (10, -1), (11, -1), (12, -1), (13, 8388608), (14, 4194304), (15, 196608), (16, 65536), (17, -1), (18, -1), (19, 134217728), (20, 2097152), (21, 1048576), (22, 32768), (23, 524288), (24, 67108864), (25, 134217728), (26, -1), (27, -1), (28, -1), (29, -1), (30, 524288), (31, 524288), (32, 4096), (33, 8192), (34, -1), (35, -1), (36, 67108864), (37, 33554432), (38, 8192), (39, 134217728), (40, 524288), (41, -1), (42, 262144), (43, 262144), (44, -1), (45, 33554432), (46, 8388608), (47, -1), (48, -1), (49, 33554432), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 67108864), (4, -1), (5, 131072), (6, -1), (7, -1), (8, 524288), (9, -1), (10, -1), (11, -1), (12, -1), (13, 8388608), (14, 4194304), (15, 196608), (16, 65536), (17, -1), (18, -1), (19, 134217728), (20, 2097152), (21, 1048576), (22, 32768), (23, 524288), (24, 67108864), (25, 67108864), (26, -1), (27, -1), (28, -1), (29, -1), (30, 524288), (31, 262144), (32, 2048), (33, 8192), (34, -1), (35, -1), (36, 67108864), (37, 16777216), (38, 8192), (39, -1), (40, 524288), (41, -1), (42, 262144), (43, 262144), (44, -1), (45, 33554432), (46, 8388608), (47, -1), (48, -1), (49, 33554432), (50, -1), (51, -1), (52, -1)]

Covered at level 8 : set()

After reduction : 
 pending  : [3, 8, 30, 33, 36, 37, 38, 42, 43, 45, 46, 49, 24, 25, 5, 13, 14, 15, 16, 19, 20, 21, 22, 23, 40, 31, 32]
 solution : [0, 9, 10, 26, 39]


Solution : [0, 9, 10, 26, 39] has cost 32.


Before backtrack at level 8
 pending : [3, 8, 30, 33, 36, 37, 38, 42, 43, 45, 46, 49, 24, 25, 5, 13, 14, 15, 16, 19, 20, 21, 22, 23, 40, 31, 32]
 solution : [0, 9, 10, 26, 39]

After backtrack at level 8
 pending : [3, 8, 30, 33, 36, 37, 38, 42, 43, 45, 46, 49, 24, 25, 5, 13, 14, 15, 16, 19, 20, 21, 22, 23, 40, 31, 32]
 solution : [0, 9, 10, 26, 39]


Invert decision for 39 at level 7


New level: 8
 pending : [3, 8, 30, 33, 36, 37, 38, 42, 43, 45, 46, 49, 24, 25, 5, 13, 14, 15, 16, 19, 20, 21, 22, 23, 40, 31, 32]
 solution : [0, 9, 10, 26]


Before reduction : 
 pending  : [3, 8, 30, 33, 36, 37, 38, 42, 43, 45, 46, 49, 24, 25, 5, 13, 14, 15, 16, 19, 20, 21, 22, 23, 40, 31, 32]
 solution : [0, 9, 10, 26]

Essensial at level 8 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 67108864), (4, -1), (5, 131072), (6, -1), (7, -1), (8, 524288), (9, -1), (10, -1), (11, -1), (12, -1), (13, 8388608), (14, 4194304), (15, 196608), (16, 65536), (17, -1), (18, -1), (19, 134217728), (20, 2097152), (21, 1048576), (22, 32768), (23, 524288), (24, 67108864), (25, 67108864), (26, -1), (27, -1), (28, -1), (29, -1), (30, 524288), (31, 262144), (32, 2048), (33, 8192), (34, -1), (35, -1), (36, 67108864), (37, 16777216), (38, 8192), (39, -1), (40, 524288), (41, -1), (42, 262144), (43, 262144), (44, -1), (45, 33554432), (46, 8388608), (47, -1), (48, -1), (49, 33554432), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 67108864), (4, -1), (5, 131072), (6, -1), (7, -1), (8, 524288), (9, -1), (10, -1), (11, -1), (12, -1), (13, 8388608), (14, 4194304), (15, 196608), (16, 65536), (17, -1), (18, -1), (19, 134217728), (20, 2097152), (21, 1048576), (22, 32768), (23, 524288), (24, 67108864), (25, 134217728), (26, -1), (27, -1), (28, -1), (29, -1), (30, 524288), (31, 524288), (32, 4096), (33, 8192), (34, -1), (35, -1), (36, 67108864), (37, 33554432), (38, 8192), (39, -1), (40, 524288), (41, -1), (42, 262144), (43, 262144), (44, -1), (45, 33554432), (46, 8388608), (47, -1), (48, -1), (49, 33554432), (50, -1), (51, -1), (52, -1)]

Covered at level 8 : set()

After reduction : 
 pending  : [3, 8, 30, 33, 36, 37, 38, 42, 43, 45, 46, 49, 24, 25, 5, 13, 14, 15, 16, 19, 20, 21, 22, 23, 40, 31, 32]
 solution : [0, 9, 10, 26]


Solution : [0, 9, 10, 26] has cost 18.


Decide in level 8 among pending : [3, 8, 30, 33, 36, 37, 38, 42, 43, 45, 46, 49, 24, 25, 5, 13, 14, 15, 16, 19, 20, 21, 22, 23, 40, 31, 32]

Coverage : [(0, -1), (1, -1), (2, -1), (3, 67108864), (4, -1), (5, 131072), (6, -1), (7, -1), (8, 524288), (9, -1), (10, -1), (11, -1), (12, -1), (13, 8388608), (14, 4194304), (15, 196608), (16, 65536), (17, -1), (18, -1), (19, 134217728), (20, 2097152), (21, 1048576), (22, 32768), (23, 524288), (24, 67108864), (25, 134217728), (26, -1), (27, -1), (28, -1), (29, -1), (30, 524288), (31, 524288), (32, 4096), (33, 8192), (34, -1), (35, -1), (36, 67108864), (37, 33554432), (38, 8192), (39, -1), (40, 524288), (41, -1), (42, 262144), (43, 262144), (44, -1), (45, 33554432), (46, 8388608), (47, -1), (48, -1), (49, 33554432), (50, -1), (51, -1), (52, -1)]

Decide 25 with phase True at level 8

After decision at level 8
 pending : [3, 8, 30, 33, 36, 37, 38, 42, 43, 45, 46, 49, 24, 5, 13, 14, 15, 16, 19, 20, 21, 22, 23, 40, 31, 32]
 solution : [0, 9, 10, 26, 25]


New level: 9
 pending : [3, 8, 30, 33, 36, 37, 38, 42, 43, 45, 46, 49, 24, 5, 13, 14, 15, 16, 19, 20, 21, 22, 23, 40, 31, 32]
 solution : [0, 9, 10, 26, 25]


Before reduction : 
 pending  : [3, 8, 30, 33, 36, 37, 38, 42, 43, 45, 46, 49, 24, 5, 13, 14, 15, 16, 19, 20, 21, 22, 23, 40, 31, 32]
 solution : [0, 9, 10, 26, 25]

Essensial at level 9 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 67108864), (4, -1), (5, 131072), (6, -1), (7, -1), (8, 524288), (9, -1), (10, -1), (11, -1), (12, -1), (13, 8388608), (14, 4194304), (15, 196608), (16, 65536), (17, -1), (18, -1), (19, 134217728), (20, 2097152), (21, 1048576), (22, 32768), (23, 524288), (24, 67108864), (25, 134217728), (26, -1), (27, -1), (28, -1), (29, -1), (30, 524288), (31, 524288), (32, 4096), (33, 8192), (34, -1), (35, -1), (36, 67108864), (37, 33554432), (38, 8192), (39, -1), (40, 524288), (41, -1), (42, 262144), (43, 262144), (44, -1), (45, 33554432), (46, 8388608), (47, -1), (48, -1), (49, 33554432), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 16777216), (4, -1), (5, 131072), (6, -1), (7, -1), (8, 131072), (9, -1), (10, -1), (11, -1), (12, -1), (13, 8388608), (14, 4194304), (15, 196608), (16, 65536), (17, -1), (18, -1), (19, 134217728), (20, 2097152), (21, 1048576), (22, 32768), (23, 524288), (24, 16777216), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, 131072), (31, 0), (32, 0), (33, 2048), (34, -1), (35, -1), (36, 33554432), (37, 33554432), (38, 2048), (39, -1), (40, 524288), (41, -1), (42, 65536), (43, 65536), (44, -1), (45, 16777216), (46, 2097152), (47, -1), (48, -1), (49, 33554432), (50, -1), (51, -1), (52, -1)]

Covered at level 9 : {32, 31}

After reduction : 
 pending  : [3, 8, 30, 33, 36, 37, 38, 42, 43, 45, 46, 49, 24, 5, 13, 14, 15, 16, 19, 20, 21, 22, 23, 40]
 solution : [0, 9, 10, 26, 25]


Before reduction : 
 pending  : [3, 8, 30, 33, 36, 37, 38, 42, 43, 45, 46, 49, 24, 5, 13, 14, 15, 16, 19, 20, 21, 22, 23, 40]
 solution : [0, 9, 10, 26, 25]

Essensial at level 9 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 16777216), (4, -1), (5, 131072), (6, -1), (7, -1), (8, 131072), (9, -1), (10, -1), (11, -1), (12, -1), (13, 8388608), (14, 4194304), (15, 196608), (16, 65536), (17, -1), (18, -1), (19, 134217728), (20, 2097152), (21, 1048576), (22, 32768), (23, 524288), (24, 16777216), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, 131072), (31, 0), (32, 0), (33, 2048), (34, -1), (35, -1), (36, 33554432), (37, 33554432), (38, 2048), (39, -1), (40, 524288), (41, -1), (42, 65536), (43, 65536), (44, -1), (45, 16777216), (46, 2097152), (47, -1), (48, -1), (49, 33554432), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 16777216), (4, -1), (5, 131072), (6, -1), (7, -1), (8, 131072), (9, -1), (10, -1), (11, -1), (12, -1), (13, 8388608), (14, 4194304), (15, 196608), (16, 65536), (17, -1), (18, -1), (19, 134217728), (20, 2097152), (21, 1048576), (22, 32768), (23, 524288), (24, 16777216), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, 131072), (31, -1), (32, -1), (33, 2048), (34, -1), (35, -1), (36, 33554432), (37, 33554432), (38, 2048), (39, -1), (40, 524288), (41, -1), (42, 65536), (43, 65536), (44, -1), (45, 16777216), (46, 2097152), (47, -1), (48, -1), (49, 33554432), (50, -1), (51, -1), (52, -1)]

Covered at level 9 : set()

After reduction : 
 pending  : [3, 8, 30, 33, 36, 37, 38, 42, 43, 45, 46, 49, 24, 5, 13, 14, 15, 16, 19, 20, 21, 22, 23, 40]
 solution : [0, 9, 10, 26, 25]


Solution : [0, 9, 10, 26, 25] has cost 25.


Decide in level 9 among pending : [3, 8, 30, 33, 36, 37, 38, 42, 43, 45, 46, 49, 24, 5, 13, 14, 15, 16, 19, 20, 21, 22, 23, 40]

Coverage : [(0, -1), (1, -1), (2, -1), (3, 16777216), (4, -1), (5, 131072), (6, -1), (7, -1), (8, 131072), (9, -1), (10, -1), (11, -1), (12, -1), (13, 8388608), (14, 4194304), (15, 196608), (16, 65536), (17, -1), (18, -1), (19, 134217728), (20, 2097152), (21, 1048576), (22, 32768), (23, 524288), (24, 16777216), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, 131072), (31, -1), (32, -1), (33, 2048), (34, -1), (35, -1), (36, 33554432), (37, 33554432), (38, 2048), (39, -1), (40, 524288), (41, -1), (42, 65536), (43, 65536), (44, -1), (45, 16777216), (46, 2097152), (47, -1), (48, -1), (49, 33554432), (50, -1), (51, -1), (52, -1)]

Decide 19 with phase True at level 9

After decision at level 9
 pending : [3, 8, 30, 33, 36, 37, 38, 42, 43, 45, 46, 49, 24, 5, 13, 14, 15, 16, 20, 21, 22, 23, 40]
 solution : [0, 9, 10, 26, 25, 19]


New level: 10
 pending : [3, 8, 30, 33, 36, 37, 38, 42, 43, 45, 46, 49, 24, 5, 13, 14, 15, 16, 20, 21, 22, 23, 40]
 solution : [0, 9, 10, 26, 25, 19]


Before reduction : 
 pending  : [3, 8, 30, 33, 36, 37, 38, 42, 43, 45, 46, 49, 24, 5, 13, 14, 15, 16, 20, 21, 22, 23, 40]
 solution : [0, 9, 10, 26, 25, 19]

Essensial at level 10 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 16777216), (4, -1), (5, 131072), (6, -1), (7, -1), (8, 131072), (9, -1), (10, -1), (11, -1), (12, -1), (13, 8388608), (14, 4194304), (15, 196608), (16, 65536), (17, -1), (18, -1), (19, 134217728), (20, 2097152), (21, 1048576), (22, 32768), (23, 524288), (24, 16777216), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, 131072), (31, -1), (32, -1), (33, 2048), (34, -1), (35, -1), (36, 33554432), (37, 33554432), (38, 2048), (39, -1), (40, 524288), (41, -1), (42, 65536), (43, 65536), (44, -1), (45, 16777216), (46, 2097152), (47, -1), (48, -1), (49, 33554432), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 16777216), (4, -1), (5, 0), (6, -1), (7, -1), (8, 32768), (9, -1), (10, -1), (11, -1), (12, -1), (13, 0), (14, 0), (15, 0), (16, 0), (17, -1), (18, -1), (19, -1), (20, 0), (21, 0), (22, 0), (23, 0), (24, 16777216), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, 65536), (31, -1), (32, -1), (33, 1024), (34, -1), (35, -1), (36, 16777216), (37, 33554432), (38, 512), (39, -1), (40, 0), (41, -1), (42, 32768), (43, 32768), (44, -1), (45, 16777216), (46, 2097152), (47, -1), (48, -1), (49, 33554432), (50, -1), (51, -1), (52, -1)]

Covered at level 10 : {5, 40, 13, 14, 15, 16, 20, 21, 22, 23}

After reduction : 
 pending  : [3, 8, 30, 33, 36, 37, 38, 42, 43, 45, 46, 49, 24]
 solution : [0, 9, 10, 26, 25, 19]


Before reduction : 
 pending  : [3, 8, 30, 33, 36, 37, 38, 42, 43, 45, 46, 49, 24]
 solution : [0, 9, 10, 26, 25, 19]

Essensial at level 10 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 16777216), (4, -1), (5, 0), (6, -1), (7, -1), (8, 32768), (9, -1), (10, -1), (11, -1), (12, -1), (13, 0), (14, 0), (15, 0), (16, 0), (17, -1), (18, -1), (19, -1), (20, 0), (21, 0), (22, 0), (23, 0), (24, 16777216), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, 65536), (31, -1), (32, -1), (33, 1024), (34, -1), (35, -1), (36, 16777216), (37, 33554432), (38, 512), (39, -1), (40, 0), (41, -1), (42, 32768), (43, 32768), (44, -1), (45, 16777216), (46, 2097152), (47, -1), (48, -1), (49, 33554432), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 16777216), (4, -1), (5, -1), (6, -1), (7, -1), (8, 32768), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, 16777216), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, 65536), (31, -1), (32, -1), (33, 1024), (34, -1), (35, -1), (36, 16777216), (37, 512), (38, 512), (39, -1), (40, -1), (41, -1), (42, 16384), (43, 16384), (44, -1), (45, 16777216), (46, 2097152), (47, -1), (48, -1), (49, 33554432), (50, -1), (51, -1), (52, -1)]

Covered at level 10 : set()

After reduction : 
 pending  : [3, 8, 30, 33, 36, 37, 38, 42, 43, 45, 46, 49, 24]
 solution : [0, 9, 10, 26, 25, 19]


Solution : [0, 9, 10, 26, 25, 19] has cost 32.


Before backtrack at level 10
 pending : [3, 8, 30, 33, 36, 37, 38, 42, 43, 45, 46, 49, 24]
 solution : [0, 9, 10, 26, 25, 19]

After backtrack at level 10
 pending : [3, 8, 30, 33, 36, 37, 38, 42, 43, 45, 46, 49, 24, 5, 13, 14, 15, 16, 20, 21, 22, 23, 40]
 solution : [0, 9, 10, 26, 25, 19]


Invert decision for 19 at level 9


New level: 10
 pending : [3, 8, 30, 33, 36, 37, 38, 42, 43, 45, 46, 49, 24, 5, 13, 14, 15, 16, 20, 21, 22, 23, 40]
 solution : [0, 9, 10, 26, 25]


Before reduction : 
 pending  : [3, 8, 30, 33, 36, 37, 38, 42, 43, 45, 46, 49, 24, 5, 13, 14, 15, 16, 20, 21, 22, 23, 40]
 solution : [0, 9, 10, 26, 25]

Essensial at level 10 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 16777216), (4, -1), (5, -1), (6, -1), (7, -1), (8, 32768), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, 16777216), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, 65536), (31, -1), (32, -1), (33, 1024), (34, -1), (35, -1), (36, 16777216), (37, 512), (38, 512), (39, -1), (40, -1), (41, -1), (42, 16384), (43, 16384), (44, -1), (45, 16777216), (46, 2097152), (47, -1), (48, -1), (49, 33554432), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 16777216), (4, -1), (5, 131072), (6, -1), (7, -1), (8, 131072), (9, -1), (10, -1), (11, -1), (12, -1), (13, 8388608), (14, 4194304), (15, 196608), (16, 65536), (17, -1), (18, -1), (19, -1), (20, 2097152), (21, 1048576), (22, 32768), (23, 524288), (24, 16777216), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, 131072), (31, -1), (32, -1), (33, 2048), (34, -1), (35, -1), (36, 33554432), (37, 33554432), (38, 2048), (39, -1), (40, 524288), (41, -1), (42, 65536), (43, 65536), (44, -1), (45, 16777216), (46, 2097152), (47, -1), (48, -1), (49, 33554432), (50, -1), (51, -1), (52, -1)]

Covered at level 10 : set()

After reduction : 
 pending  : [3, 8, 30, 33, 36, 37, 38, 42, 43, 45, 46, 49, 24, 5, 13, 14, 15, 16, 20, 21, 22, 23, 40]
 solution : [0, 9, 10, 26, 25]


Solution : [0, 9, 10, 26, 25] has cost 25.


Decide in level 10 among pending : [3, 8, 30, 33, 36, 37, 38, 42, 43, 45, 46, 49, 24, 5, 13, 14, 15, 16, 20, 21, 22, 23, 40]

Coverage : [(0, -1), (1, -1), (2, -1), (3, 16777216), (4, -1), (5, 131072), (6, -1), (7, -1), (8, 131072), (9, -1), (10, -1), (11, -1), (12, -1), (13, 8388608), (14, 4194304), (15, 196608), (16, 65536), (17, -1), (18, -1), (19, -1), (20, 2097152), (21, 1048576), (22, 32768), (23, 524288), (24, 16777216), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, 131072), (31, -1), (32, -1), (33, 2048), (34, -1), (35, -1), (36, 33554432), (37, 33554432), (38, 2048), (39, -1), (40, 524288), (41, -1), (42, 65536), (43, 65536), (44, -1), (45, 16777216), (46, 2097152), (47, -1), (48, -1), (49, 33554432), (50, -1), (51, -1), (52, -1)]

Decide 36 with phase True at level 10

After decision at level 10
 pending : [3, 8, 30, 33, 37, 38, 42, 43, 45, 46, 49, 24, 5, 13, 14, 15, 16, 20, 21, 22, 23, 40]
 solution : [0, 9, 10, 26, 25, 36]


New level: 11
 pending : [3, 8, 30, 33, 37, 38, 42, 43, 45, 46, 49, 24, 5, 13, 14, 15, 16, 20, 21, 22, 23, 40]
 solution : [0, 9, 10, 26, 25, 36]


Before reduction : 
 pending  : [3, 8, 30, 33, 37, 38, 42, 43, 45, 46, 49, 24, 5, 13, 14, 15, 16, 20, 21, 22, 23, 40]
 solution : [0, 9, 10, 26, 25, 36]

Essensial at level 11 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 16777216), (4, -1), (5, 131072), (6, -1), (7, -1), (8, 131072), (9, -1), (10, -1), (11, -1), (12, -1), (13, 8388608), (14, 4194304), (15, 196608), (16, 65536), (17, -1), (18, -1), (19, -1), (20, 2097152), (21, 1048576), (22, 32768), (23, 524288), (24, 16777216), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, 131072), (31, -1), (32, -1), (33, 2048), (34, -1), (35, -1), (36, 33554432), (37, 33554432), (38, 2048), (39, -1), (40, 524288), (41, -1), (42, 65536), (43, 65536), (44, -1), (45, 16777216), (46, 2097152), (47, -1), (48, -1), (49, 33554432), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 65536), (4, -1), (5, 65536), (6, -1), (7, -1), (8, 0), (9, -1), (10, -1), (11, -1), (12, -1), (13, 8388608), (14, 4194304), (15, 65536), (16, 65536), (17, -1), (18, -1), (19, -1), (20, 2097152), (21, 1048576), (22, 32768), (23, 524288), (24, 2048), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, 0), (31, -1), (32, -1), (33, 0), (34, -1), (35, -1), (36, -1), (37, 33554432), (38, 0), (39, -1), (40, 524288), (41, -1), (42, 0), (43, 0), (44, -1), (45, 0), (46, 0), (47, -1), (48, -1), (49, 0), (50, -1), (51, -1), (52, -1)]

Covered at level 11 : {33, 38, 8, 42, 43, 45, 46, 49, 30}

After reduction : 
 pending  : [3, 37, 24, 5, 13, 14, 15, 16, 20, 21, 22, 23, 40]
 solution : [0, 9, 10, 26, 25, 36]


Before reduction : 
 pending  : [3, 37, 24, 5, 13, 14, 15, 16, 20, 21, 22, 23, 40]
 solution : [0, 9, 10, 26, 25, 36]

Essensial at level 11 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 65536), (4, -1), (5, 65536), (6, -1), (7, -1), (8, 0), (9, -1), (10, -1), (11, -1), (12, -1), (13, 8388608), (14, 4194304), (15, 65536), (16, 65536), (17, -1), (18, -1), (19, -1), (20, 2097152), (21, 1048576), (22, 32768), (23, 524288), (24, 2048), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, 0), (31, -1), (32, -1), (33, 0), (34, -1), (35, -1), (36, -1), (37, 33554432), (38, 0), (39, -1), (40, 524288), (41, -1), (42, 0), (43, 0), (44, -1), (45, 0), (46, 0), (47, -1), (48, -1), (49, 0), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 2048), (4, -1), (5, 65536), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, 8388608), (14, 4194304), (15, 65536), (16, 65536), (17, -1), (18, -1), (19, -1), (20, 2097152), (21, 1048576), (22, 32768), (23, 524288), (24, 2048), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, 33554432), (38, -1), (39, -1), (40, 524288), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 11 : set()

After reduction : 
 pending  : [3, 37, 24, 5, 13, 14, 15, 16, 20, 21, 22, 23, 40]
 solution : [0, 9, 10, 26, 25, 36]


Solution : [0, 9, 10, 26, 25, 36] has cost 43.


Before backtrack at level 11
 pending : [3, 37, 24, 5, 13, 14, 15, 16, 20, 21, 22, 23, 40]
 solution : [0, 9, 10, 26, 25, 36]

After backtrack at level 11
 pending : [3, 37, 24, 5, 13, 14, 15, 16, 20, 21, 22, 23, 40, 8, 30, 33, 38, 42, 43, 45, 46, 49]
 solution : [0, 9, 10, 26, 25, 36]


Invert decision for 36 at level 10


New level: 11
 pending : [3, 37, 24, 5, 13, 14, 15, 16, 20, 21, 22, 23, 40, 8, 30, 33, 38, 42, 43, 45, 46, 49]
 solution : [0, 9, 10, 26, 25]


Before reduction : 
 pending  : [3, 37, 24, 5, 13, 14, 15, 16, 20, 21, 22, 23, 40, 8, 30, 33, 38, 42, 43, 45, 46, 49]
 solution : [0, 9, 10, 26, 25]

Essensial at level 11 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 2048), (4, -1), (5, 65536), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, 8388608), (14, 4194304), (15, 65536), (16, 65536), (17, -1), (18, -1), (19, -1), (20, 2097152), (21, 1048576), (22, 32768), (23, 524288), (24, 2048), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, 33554432), (38, -1), (39, -1), (40, 524288), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 16777216), (4, -1), (5, 131072), (6, -1), (7, -1), (8, 131072), (9, -1), (10, -1), (11, -1), (12, -1), (13, 8388608), (14, 4194304), (15, 196608), (16, 65536), (17, -1), (18, -1), (19, -1), (20, 2097152), (21, 1048576), (22, 32768), (23, 524288), (24, 16777216), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, 131072), (31, -1), (32, -1), (33, 2048), (34, -1), (35, -1), (36, -1), (37, 33554432), (38, 2048), (39, -1), (40, 524288), (41, -1), (42, 65536), (43, 65536), (44, -1), (45, 16777216), (46, 2097152), (47, -1), (48, -1), (49, 33554432), (50, -1), (51, -1), (52, -1)]

Covered at level 11 : set()

After reduction : 
 pending  : [3, 37, 24, 5, 13, 14, 15, 16, 20, 21, 22, 23, 40, 8, 30, 33, 38, 42, 43, 45, 46, 49]
 solution : [0, 9, 10, 26, 25]


Solution : [0, 9, 10, 26, 25] has cost 25.


Decide in level 11 among pending : [3, 37, 24, 5, 13, 14, 15, 16, 20, 21, 22, 23, 40, 8, 30, 33, 38, 42, 43, 45, 46, 49]

Coverage : [(0, -1), (1, -1), (2, -1), (3, 16777216), (4, -1), (5, 131072), (6, -1), (7, -1), (8, 131072), (9, -1), (10, -1), (11, -1), (12, -1), (13, 8388608), (14, 4194304), (15, 196608), (16, 65536), (17, -1), (18, -1), (19, -1), (20, 2097152), (21, 1048576), (22, 32768), (23, 524288), (24, 16777216), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, 131072), (31, -1), (32, -1), (33, 2048), (34, -1), (35, -1), (36, -1), (37, 33554432), (38, 2048), (39, -1), (40, 524288), (41, -1), (42, 65536), (43, 65536), (44, -1), (45, 16777216), (46, 2097152), (47, -1), (48, -1), (49, 33554432), (50, -1), (51, -1), (52, -1)]

Decide 37 with phase True at level 11

After decision at level 11
 pending : [3, 24, 5, 13, 14, 15, 16, 20, 21, 22, 23, 40, 8, 30, 33, 38, 42, 43, 45, 46, 49]
 solution : [0, 9, 10, 26, 25, 37]


New level: 12
 pending : [3, 24, 5, 13, 14, 15, 16, 20, 21, 22, 23, 40, 8, 30, 33, 38, 42, 43, 45, 46, 49]
 solution : [0, 9, 10, 26, 25, 37]


Before reduction : 
 pending  : [3, 24, 5, 13, 14, 15, 16, 20, 21, 22, 23, 40, 8, 30, 33, 38, 42, 43, 45, 46, 49]
 solution : [0, 9, 10, 26, 25, 37]

Essensial at level 12 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 16777216), (4, -1), (5, 131072), (6, -1), (7, -1), (8, 131072), (9, -1), (10, -1), (11, -1), (12, -1), (13, 8388608), (14, 4194304), (15, 196608), (16, 65536), (17, -1), (18, -1), (19, -1), (20, 2097152), (21, 1048576), (22, 32768), (23, 524288), (24, 16777216), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, 131072), (31, -1), (32, -1), (33, 2048), (34, -1), (35, -1), (36, -1), (37, 33554432), (38, 2048), (39, -1), (40, 524288), (41, -1), (42, 65536), (43, 65536), (44, -1), (45, 16777216), (46, 2097152), (47, -1), (48, -1), (49, 33554432), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 4194304), (4, -1), (5, 65536), (6, -1), (7, -1), (8, 32768), (9, -1), (10, -1), (11, -1), (12, -1), (13, 4194304), (14, 2097152), (15, 65536), (16, 32768), (17, -1), (18, -1), (19, -1), (20, 2097152), (21, 1048576), (22, 32768), (23, 131072), (24, 4194304), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, 32768), (31, -1), (32, -1), (33, 512), (34, -1), (35, -1), (36, -1), (37, -1), (38, 512), (39, -1), (40, 131072), (41, -1), (42, 16384), (43, 16384), (44, -1), (45, 8388608), (46, 524288), (47, -1), (48, -1), (49, 33554432), (50, -1), (51, -1), (52, -1)]

Covered at level 12 : set()

After reduction : 
 pending  : [3, 24, 5, 13, 14, 15, 16, 20, 21, 22, 23, 40, 8, 30, 33, 38, 42, 43, 45, 46, 49]
 solution : [0, 9, 10, 26, 25, 37]


Solution : [0, 9, 10, 26, 25, 37] has cost 43.


Before backtrack at level 12
 pending : [3, 24, 5, 13, 14, 15, 16, 20, 21, 22, 23, 40, 8, 30, 33, 38, 42, 43, 45, 46, 49]
 solution : [0, 9, 10, 26, 25, 37]

After backtrack at level 12
 pending : [3, 24, 5, 13, 14, 15, 16, 20, 21, 22, 23, 40, 8, 30, 33, 38, 42, 43, 45, 46, 49]
 solution : [0, 9, 10, 26, 25, 37]


Invert decision for 37 at level 11


New level: 12
 pending : [3, 24, 5, 13, 14, 15, 16, 20, 21, 22, 23, 40, 8, 30, 33, 38, 42, 43, 45, 46, 49]
 solution : [0, 9, 10, 26, 25]


Before reduction : 
 pending  : [3, 24, 5, 13, 14, 15, 16, 20, 21, 22, 23, 40, 8, 30, 33, 38, 42, 43, 45, 46, 49]
 solution : [0, 9, 10, 26, 25]

Essensial at level 12 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 4194304), (4, -1), (5, 65536), (6, -1), (7, -1), (8, 32768), (9, -1), (10, -1), (11, -1), (12, -1), (13, 4194304), (14, 2097152), (15, 65536), (16, 32768), (17, -1), (18, -1), (19, -1), (20, 2097152), (21, 1048576), (22, 32768), (23, 131072), (24, 4194304), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, 32768), (31, -1), (32, -1), (33, 512), (34, -1), (35, -1), (36, -1), (37, -1), (38, 512), (39, -1), (40, 131072), (41, -1), (42, 16384), (43, 16384), (44, -1), (45, 8388608), (46, 524288), (47, -1), (48, -1), (49, 33554432), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 16777216), (4, -1), (5, 131072), (6, -1), (7, -1), (8, 131072), (9, -1), (10, -1), (11, -1), (12, -1), (13, 8388608), (14, 4194304), (15, 196608), (16, 65536), (17, -1), (18, -1), (19, -1), (20, 2097152), (21, 1048576), (22, 32768), (23, 524288), (24, 16777216), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, 131072), (31, -1), (32, -1), (33, 2048), (34, -1), (35, -1), (36, -1), (37, -1), (38, 2048), (39, -1), (40, 524288), (41, -1), (42, 65536), (43, 65536), (44, -1), (45, 16777216), (46, 2097152), (47, -1), (48, -1), (49, 33554432), (50, -1), (51, -1), (52, -1)]

Covered at level 12 : set()

After reduction : 
 pending  : [3, 24, 5, 13, 14, 15, 16, 20, 21, 22, 23, 40, 8, 30, 33, 38, 42, 43, 45, 46, 49]
 solution : [0, 9, 10, 26, 25]


Solution : [0, 9, 10, 26, 25] has cost 25.


Decide in level 12 among pending : [3, 24, 5, 13, 14, 15, 16, 20, 21, 22, 23, 40, 8, 30, 33, 38, 42, 43, 45, 46, 49]

Coverage : [(0, -1), (1, -1), (2, -1), (3, 16777216), (4, -1), (5, 131072), (6, -1), (7, -1), (8, 131072), (9, -1), (10, -1), (11, -1), (12, -1), (13, 8388608), (14, 4194304), (15, 196608), (16, 65536), (17, -1), (18, -1), (19, -1), (20, 2097152), (21, 1048576), (22, 32768), (23, 524288), (24, 16777216), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, 131072), (31, -1), (32, -1), (33, 2048), (34, -1), (35, -1), (36, -1), (37, -1), (38, 2048), (39, -1), (40, 524288), (41, -1), (42, 65536), (43, 65536), (44, -1), (45, 16777216), (46, 2097152), (47, -1), (48, -1), (49, 33554432), (50, -1), (51, -1), (52, -1)]

Decide 49 with phase True at level 12

After decision at level 12
 pending : [3, 24, 5, 13, 14, 15, 16, 20, 21, 22, 23, 40, 8, 30, 33, 38, 42, 43, 45, 46]
 solution : [0, 9, 10, 26, 25, 49]


New level: 13
 pending : [3, 24, 5, 13, 14, 15, 16, 20, 21, 22, 23, 40, 8, 30, 33, 38, 42, 43, 45, 46]
 solution : [0, 9, 10, 26, 25, 49]


Before reduction : 
 pending  : [3, 24, 5, 13, 14, 15, 16, 20, 21, 22, 23, 40, 8, 30, 33, 38, 42, 43, 45, 46]
 solution : [0, 9, 10, 26, 25, 49]

Essensial at level 13 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 16777216), (4, -1), (5, 131072), (6, -1), (7, -1), (8, 131072), (9, -1), (10, -1), (11, -1), (12, -1), (13, 8388608), (14, 4194304), (15, 196608), (16, 65536), (17, -1), (18, -1), (19, -1), (20, 2097152), (21, 1048576), (22, 32768), (23, 524288), (24, 16777216), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, 131072), (31, -1), (32, -1), (33, 2048), (34, -1), (35, -1), (36, -1), (37, -1), (38, 2048), (39, -1), (40, 524288), (41, -1), (42, 65536), (43, 65536), (44, -1), (45, 16777216), (46, 2097152), (47, -1), (48, -1), (49, 33554432), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 16777216), (4, -1), (5, 131072), (6, -1), (7, -1), (8, 2048), (9, -1), (10, -1), (11, -1), (12, -1), (13, 8388608), (14, 4194304), (15, 196608), (16, 65536), (17, -1), (18, -1), (19, -1), (20, 2097152), (21, 1048576), (22, 32768), (23, 524288), (24, 16777216), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, 131072), (31, -1), (32, -1), (33, 2048), (34, -1), (35, -1), (36, -1), (37, -1), (38, 0), (39, -1), (40, 524288), (41, -1), (42, 0), (43, 0), (44, -1), (45, 2048), (46, 0), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 13 : {46, 42, 43, 38}

After reduction : 
 pending  : [3, 24, 5, 13, 14, 15, 16, 20, 21, 22, 23, 40, 8, 30, 33, 45]
 solution : [0, 9, 10, 26, 25, 49]


Before reduction : 
 pending  : [3, 24, 5, 13, 14, 15, 16, 20, 21, 22, 23, 40, 8, 30, 33, 45]
 solution : [0, 9, 10, 26, 25, 49]

Essensial at level 13 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 16777216), (4, -1), (5, 131072), (6, -1), (7, -1), (8, 2048), (9, -1), (10, -1), (11, -1), (12, -1), (13, 8388608), (14, 4194304), (15, 196608), (16, 65536), (17, -1), (18, -1), (19, -1), (20, 2097152), (21, 1048576), (22, 32768), (23, 524288), (24, 16777216), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, 131072), (31, -1), (32, -1), (33, 2048), (34, -1), (35, -1), (36, -1), (37, -1), (38, 0), (39, -1), (40, 524288), (41, -1), (42, 0), (43, 0), (44, -1), (45, 2048), (46, 0), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 16777216), (4, -1), (5, 131072), (6, -1), (7, -1), (8, 2048), (9, -1), (10, -1), (11, -1), (12, -1), (13, 8388608), (14, 4194304), (15, 196608), (16, 65536), (17, -1), (18, -1), (19, -1), (20, 2097152), (21, 1048576), (22, 32768), (23, 524288), (24, 16777216), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, 131072), (31, -1), (32, -1), (33, 2048), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, 524288), (41, -1), (42, -1), (43, -1), (44, -1), (45, 2048), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 13 : set()

After reduction : 
 pending  : [3, 24, 5, 13, 14, 15, 16, 20, 21, 22, 23, 40, 8, 30, 33, 45]
 solution : [0, 9, 10, 26, 25, 49]


Solution : [0, 9, 10, 26, 25, 49] has cost 56.


Before backtrack at level 13
 pending : [3, 24, 5, 13, 14, 15, 16, 20, 21, 22, 23, 40, 8, 30, 33, 45]
 solution : [0, 9, 10, 26, 25, 49]

After backtrack at level 13
 pending : [3, 24, 5, 13, 14, 15, 16, 20, 21, 22, 23, 40, 8, 30, 33, 45, 38, 42, 43, 46]
 solution : [0, 9, 10, 26, 25, 49]


Invert decision for 49 at level 12


New level: 13
 pending : [3, 24, 5, 13, 14, 15, 16, 20, 21, 22, 23, 40, 8, 30, 33, 45, 38, 42, 43, 46]
 solution : [0, 9, 10, 26, 25]


Before reduction : 
 pending  : [3, 24, 5, 13, 14, 15, 16, 20, 21, 22, 23, 40, 8, 30, 33, 45, 38, 42, 43, 46]
 solution : [0, 9, 10, 26, 25]

Essensial at level 13 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 16777216), (4, -1), (5, 131072), (6, -1), (7, -1), (8, 2048), (9, -1), (10, -1), (11, -1), (12, -1), (13, 8388608), (14, 4194304), (15, 196608), (16, 65536), (17, -1), (18, -1), (19, -1), (20, 2097152), (21, 1048576), (22, 32768), (23, 524288), (24, 16777216), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, 131072), (31, -1), (32, -1), (33, 2048), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, 524288), (41, -1), (42, -1), (43, -1), (44, -1), (45, 2048), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 16777216), (4, -1), (5, 131072), (6, -1), (7, -1), (8, 131072), (9, -1), (10, -1), (11, -1), (12, -1), (13, 8388608), (14, 4194304), (15, 196608), (16, 65536), (17, -1), (18, -1), (19, -1), (20, 2097152), (21, 1048576), (22, 32768), (23, 524288), (24, 16777216), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, 131072), (31, -1), (32, -1), (33, 2048), (34, -1), (35, -1), (36, -1), (37, -1), (38, 2048), (39, -1), (40, 524288), (41, -1), (42, 65536), (43, 65536), (44, -1), (45, 16777216), (46, 2097152), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 13 : set()

After reduction : 
 pending  : [3, 24, 5, 13, 14, 15, 16, 20, 21, 22, 23, 40, 8, 30, 33, 45, 38, 42, 43, 46]
 solution : [0, 9, 10, 26, 25]


Solution : [0, 9, 10, 26, 25] has cost 25.


Decide in level 13 among pending : [3, 24, 5, 13, 14, 15, 16, 20, 21, 22, 23, 40, 8, 30, 33, 45, 38, 42, 43, 46]

Coverage : [(0, -1), (1, -1), (2, -1), (3, 16777216), (4, -1), (5, 131072), (6, -1), (7, -1), (8, 131072), (9, -1), (10, -1), (11, -1), (12, -1), (13, 8388608), (14, 4194304), (15, 196608), (16, 65536), (17, -1), (18, -1), (19, -1), (20, 2097152), (21, 1048576), (22, 32768), (23, 524288), (24, 16777216), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, 131072), (31, -1), (32, -1), (33, 2048), (34, -1), (35, -1), (36, -1), (37, -1), (38, 2048), (39, -1), (40, 524288), (41, -1), (42, 65536), (43, 65536), (44, -1), (45, 16777216), (46, 2097152), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Decide 3 with phase True at level 13

After decision at level 13
 pending : [24, 5, 13, 14, 15, 16, 20, 21, 22, 23, 40, 8, 30, 33, 45, 38, 42, 43, 46]
 solution : [0, 9, 10, 26, 25, 3]


New level: 14
 pending : [24, 5, 13, 14, 15, 16, 20, 21, 22, 23, 40, 8, 30, 33, 45, 38, 42, 43, 46]
 solution : [0, 9, 10, 26, 25, 3]


Before reduction : 
 pending  : [24, 5, 13, 14, 15, 16, 20, 21, 22, 23, 40, 8, 30, 33, 45, 38, 42, 43, 46]
 solution : [0, 9, 10, 26, 25, 3]

Essensial at level 14 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 16777216), (4, -1), (5, 131072), (6, -1), (7, -1), (8, 131072), (9, -1), (10, -1), (11, -1), (12, -1), (13, 8388608), (14, 4194304), (15, 196608), (16, 65536), (17, -1), (18, -1), (19, -1), (20, 2097152), (21, 1048576), (22, 32768), (23, 524288), (24, 16777216), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, 131072), (31, -1), (32, -1), (33, 2048), (34, -1), (35, -1), (36, -1), (37, -1), (38, 2048), (39, -1), (40, 524288), (41, -1), (42, 65536), (43, 65536), (44, -1), (45, 16777216), (46, 2097152), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 65536), (6, -1), (7, -1), (8, 0), (9, -1), (10, -1), (11, -1), (12, -1), (13, 4194304), (14, 2097152), (15, 65536), (16, 32768), (17, -1), (18, -1), (19, -1), (20, 2097152), (21, 1048576), (22, 32768), (23, 524288), (24, 0), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, 0), (31, -1), (32, -1), (33, 0), (34, -1), (35, -1), (36, -1), (37, -1), (38, 0), (39, -1), (40, 524288), (41, -1), (42, 0), (43, 0), (44, -1), (45, 0), (46, 0), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 14 : {33, 38, 8, 42, 43, 45, 46, 24, 30}

After reduction : 
 pending  : [5, 13, 14, 15, 16, 20, 21, 22, 23, 40]
 solution : [0, 9, 10, 26, 25, 3]


Before reduction : 
 pending  : [5, 13, 14, 15, 16, 20, 21, 22, 23, 40]
 solution : [0, 9, 10, 26, 25, 3]

Essensial at level 14 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 65536), (6, -1), (7, -1), (8, 0), (9, -1), (10, -1), (11, -1), (12, -1), (13, 4194304), (14, 2097152), (15, 65536), (16, 32768), (17, -1), (18, -1), (19, -1), (20, 2097152), (21, 1048576), (22, 32768), (23, 524288), (24, 0), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, 0), (31, -1), (32, -1), (33, 0), (34, -1), (35, -1), (36, -1), (37, -1), (38, 0), (39, -1), (40, 524288), (41, -1), (42, 0), (43, 0), (44, -1), (45, 0), (46, 0), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 65536), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, 4194304), (14, 2097152), (15, 65536), (16, 32768), (17, -1), (18, -1), (19, -1), (20, 2097152), (21, 1048576), (22, 32768), (23, 524288), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, 524288), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 14 : set()

After reduction : 
 pending  : [5, 13, 14, 15, 16, 20, 21, 22, 23, 40]
 solution : [0, 9, 10, 26, 25, 3]


Solution : [0, 9, 10, 26, 25, 3] has cost 29.


Before backtrack at level 14
 pending : [5, 13, 14, 15, 16, 20, 21, 22, 23, 40]
 solution : [0, 9, 10, 26, 25, 3]

After backtrack at level 14
 pending : [5, 13, 14, 15, 16, 20, 21, 22, 23, 40, 24, 8, 30, 33, 45, 38, 42, 43, 46]
 solution : [0, 9, 10, 26, 25, 3]


Invert decision for 3 at level 13


New level: 14
 pending : [5, 13, 14, 15, 16, 20, 21, 22, 23, 40, 24, 8, 30, 33, 45, 38, 42, 43, 46]
 solution : [0, 9, 10, 26, 25]


Before reduction : 
 pending  : [5, 13, 14, 15, 16, 20, 21, 22, 23, 40, 24, 8, 30, 33, 45, 38, 42, 43, 46]
 solution : [0, 9, 10, 26, 25]

Essensial at level 14 : {24}

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 65536), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, 4194304), (14, 2097152), (15, 65536), (16, 32768), (17, -1), (18, -1), (19, -1), (20, 2097152), (21, 1048576), (22, 32768), (23, 524288), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, 524288), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 65536), (6, -1), (7, -1), (8, 0), (9, -1), (10, -1), (11, -1), (12, -1), (13, 4194304), (14, 2097152), (15, 65536), (16, 32768), (17, -1), (18, -1), (19, -1), (20, 2097152), (21, 1048576), (22, 32768), (23, 524288), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, 0), (31, -1), (32, -1), (33, 0), (34, -1), (35, -1), (36, -1), (37, -1), (38, 0), (39, -1), (40, 524288), (41, -1), (42, 0), (43, 0), (44, -1), (45, 0), (46, 0), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 14 : {33, 38, 8, 42, 43, 45, 46, 30}

After reduction : 
 pending  : [5, 13, 14, 15, 16, 20, 21, 22, 23, 40]
 solution : [0, 9, 10, 26, 25, 24]


Before reduction : 
 pending  : [5, 13, 14, 15, 16, 20, 21, 22, 23, 40]
 solution : [0, 9, 10, 26, 25, 24]

Essensial at level 14 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 65536), (6, -1), (7, -1), (8, 0), (9, -1), (10, -1), (11, -1), (12, -1), (13, 4194304), (14, 2097152), (15, 65536), (16, 32768), (17, -1), (18, -1), (19, -1), (20, 2097152), (21, 1048576), (22, 32768), (23, 524288), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, 0), (31, -1), (32, -1), (33, 0), (34, -1), (35, -1), (36, -1), (37, -1), (38, 0), (39, -1), (40, 524288), (41, -1), (42, 0), (43, 0), (44, -1), (45, 0), (46, 0), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 65536), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, 4194304), (14, 2097152), (15, 65536), (16, 32768), (17, -1), (18, -1), (19, -1), (20, 2097152), (21, 1048576), (22, 32768), (23, 524288), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, 524288), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 14 : set()

After reduction : 
 pending  : [5, 13, 14, 15, 16, 20, 21, 22, 23, 40]
 solution : [0, 9, 10, 26, 25, 24]


Solution : [0, 9, 10, 26, 25, 24] has cost 32.


Before backtrack at level 14
 pending : [5, 13, 14, 15, 16, 20, 21, 22, 23, 40]
 solution : [0, 9, 10, 26, 25, 24]

After backtrack at level 14
 pending : [5, 13, 14, 15, 16, 20, 21, 22, 23, 40, 24, 8, 30, 33, 45, 38, 42, 43, 46]
 solution : [0, 9, 10, 26, 25]


Before backtrack at level 13
 pending : [5, 13, 14, 15, 16, 20, 21, 22, 23, 40, 24, 8, 30, 33, 45, 38, 42, 43, 46]
 solution : [0, 9, 10, 26, 25]

After backtrack at level 13
 pending : [5, 13, 14, 15, 16, 20, 21, 22, 23, 40, 24, 8, 30, 33, 45, 38, 42, 43, 46, 3]
 solution : [0, 9, 10, 26, 25]


Before backtrack at level 12
 pending : [5, 13, 14, 15, 16, 20, 21, 22, 23, 40, 24, 8, 30, 33, 45, 38, 42, 43, 46, 3]
 solution : [0, 9, 10, 26, 25]

After backtrack at level 12
 pending : [5, 13, 14, 15, 16, 20, 21, 22, 23, 40, 24, 8, 30, 33, 45, 38, 42, 43, 46, 3, 49]
 solution : [0, 9, 10, 26, 25]


Before backtrack at level 11
 pending : [5, 13, 14, 15, 16, 20, 21, 22, 23, 40, 24, 8, 30, 33, 45, 38, 42, 43, 46, 3, 49]
 solution : [0, 9, 10, 26, 25]

After backtrack at level 11
 pending : [5, 13, 14, 15, 16, 20, 21, 22, 23, 40, 24, 8, 30, 33, 45, 38, 42, 43, 46, 3, 49, 37]
 solution : [0, 9, 10, 26, 25]


Before backtrack at level 10
 pending : [5, 13, 14, 15, 16, 20, 21, 22, 23, 40, 24, 8, 30, 33, 45, 38, 42, 43, 46, 3, 49, 37]
 solution : [0, 9, 10, 26, 25]

After backtrack at level 10
 pending : [5, 13, 14, 15, 16, 20, 21, 22, 23, 40, 24, 8, 30, 33, 45, 38, 42, 43, 46, 3, 49, 37, 36]
 solution : [0, 9, 10, 26, 25]


Before backtrack at level 9
 pending : [5, 13, 14, 15, 16, 20, 21, 22, 23, 40, 24, 8, 30, 33, 45, 38, 42, 43, 46, 3, 49, 37, 36]
 solution : [0, 9, 10, 26, 25]

After backtrack at level 9
 pending : [5, 13, 14, 15, 16, 20, 21, 22, 23, 40, 24, 8, 30, 33, 45, 38, 42, 43, 46, 3, 49, 37, 36, 31, 32, 19]
 solution : [0, 9, 10, 26, 25]


Invert decision for 25 at level 8


New level: 9
 pending : [5, 13, 14, 15, 16, 20, 21, 22, 23, 40, 24, 8, 30, 33, 45, 38, 42, 43, 46, 3, 49, 37, 36, 31, 32, 19]
 solution : [0, 9, 10, 26]


Before reduction : 
 pending  : [5, 13, 14, 15, 16, 20, 21, 22, 23, 40, 24, 8, 30, 33, 45, 38, 42, 43, 46, 3, 49, 37, 36, 31, 32, 19]
 solution : [0, 9, 10, 26]

Essensial at level 9 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 65536), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, 4194304), (14, 2097152), (15, 65536), (16, 32768), (17, -1), (18, -1), (19, -1), (20, 2097152), (21, 1048576), (22, 32768), (23, 524288), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, 524288), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 67108864), (4, -1), (5, 131072), (6, -1), (7, -1), (8, 524288), (9, -1), (10, -1), (11, -1), (12, -1), (13, 8388608), (14, 4194304), (15, 196608), (16, 65536), (17, -1), (18, -1), (19, 134217728), (20, 2097152), (21, 1048576), (22, 32768), (23, 524288), (24, 67108864), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, 524288), (31, 524288), (32, 4096), (33, 8192), (34, -1), (35, -1), (36, 67108864), (37, 33554432), (38, 8192), (39, -1), (40, 524288), (41, -1), (42, 262144), (43, 262144), (44, -1), (45, 33554432), (46, 8388608), (47, -1), (48, -1), (49, 33554432), (50, -1), (51, -1), (52, -1)]

Covered at level 9 : set()

After reduction : 
 pending  : [5, 13, 14, 15, 16, 20, 21, 22, 23, 40, 24, 8, 30, 33, 45, 38, 42, 43, 46, 3, 49, 37, 36, 31, 32, 19]
 solution : [0, 9, 10, 26]


Solution : [0, 9, 10, 26] has cost 18.


Decide in level 9 among pending : [5, 13, 14, 15, 16, 20, 21, 22, 23, 40, 24, 8, 30, 33, 45, 38, 42, 43, 46, 3, 49, 37, 36, 31, 32, 19]

Coverage : [(0, -1), (1, -1), (2, -1), (3, 67108864), (4, -1), (5, 131072), (6, -1), (7, -1), (8, 524288), (9, -1), (10, -1), (11, -1), (12, -1), (13, 8388608), (14, 4194304), (15, 196608), (16, 65536), (17, -1), (18, -1), (19, 134217728), (20, 2097152), (21, 1048576), (22, 32768), (23, 524288), (24, 67108864), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, 524288), (31, 524288), (32, 4096), (33, 8192), (34, -1), (35, -1), (36, 67108864), (37, 33554432), (38, 8192), (39, -1), (40, 524288), (41, -1), (42, 262144), (43, 262144), (44, -1), (45, 33554432), (46, 8388608), (47, -1), (48, -1), (49, 33554432), (50, -1), (51, -1), (52, -1)]

Decide 19 with phase True at level 9

After decision at level 9
 pending : [5, 13, 14, 15, 16, 20, 21, 22, 23, 40, 24, 8, 30, 33, 45, 38, 42, 43, 46, 3, 49, 37, 36, 31, 32]
 solution : [0, 9, 10, 26, 19]


New level: 10
 pending : [5, 13, 14, 15, 16, 20, 21, 22, 23, 40, 24, 8, 30, 33, 45, 38, 42, 43, 46, 3, 49, 37, 36, 31, 32]
 solution : [0, 9, 10, 26, 19]


Before reduction : 
 pending  : [5, 13, 14, 15, 16, 20, 21, 22, 23, 40, 24, 8, 30, 33, 45, 38, 42, 43, 46, 3, 49, 37, 36, 31, 32]
 solution : [0, 9, 10, 26, 19]

Essensial at level 10 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 67108864), (4, -1), (5, 131072), (6, -1), (7, -1), (8, 524288), (9, -1), (10, -1), (11, -1), (12, -1), (13, 8388608), (14, 4194304), (15, 196608), (16, 65536), (17, -1), (18, -1), (19, 134217728), (20, 2097152), (21, 1048576), (22, 32768), (23, 524288), (24, 67108864), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, 524288), (31, 524288), (32, 4096), (33, 8192), (34, -1), (35, -1), (36, 67108864), (37, 33554432), (38, 8192), (39, -1), (40, 524288), (41, -1), (42, 262144), (43, 262144), (44, -1), (45, 33554432), (46, 8388608), (47, -1), (48, -1), (49, 33554432), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 67108864), (4, -1), (5, 0), (6, -1), (7, -1), (8, 131072), (9, -1), (10, -1), (11, -1), (12, -1), (13, 0), (14, 0), (15, 0), (16, 0), (17, -1), (18, -1), (19, -1), (20, 0), (21, 0), (22, 0), (23, 0), (24, 67108864), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, 262144), (31, 524288), (32, 4096), (33, 4096), (34, -1), (35, -1), (36, 33554432), (37, 1024), (38, 2048), (39, -1), (40, 0), (41, -1), (42, 65536), (43, 65536), (44, -1), (45, 33554432), (46, 8388608), (47, -1), (48, -1), (49, 33554432), (50, -1), (51, -1), (52, -1)]

Covered at level 10 : {5, 40, 13, 14, 15, 16, 20, 21, 22, 23}

After reduction : 
 pending  : [24, 8, 30, 33, 45, 38, 42, 43, 46, 3, 49, 37, 36, 31, 32]
 solution : [0, 9, 10, 26, 19]


Before reduction : 
 pending  : [24, 8, 30, 33, 45, 38, 42, 43, 46, 3, 49, 37, 36, 31, 32]
 solution : [0, 9, 10, 26, 19]

Essensial at level 10 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 67108864), (4, -1), (5, 0), (6, -1), (7, -1), (8, 131072), (9, -1), (10, -1), (11, -1), (12, -1), (13, 0), (14, 0), (15, 0), (16, 0), (17, -1), (18, -1), (19, -1), (20, 0), (21, 0), (22, 0), (23, 0), (24, 67108864), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, 262144), (31, 524288), (32, 4096), (33, 4096), (34, -1), (35, -1), (36, 33554432), (37, 1024), (38, 2048), (39, -1), (40, 0), (41, -1), (42, 65536), (43, 65536), (44, -1), (45, 33554432), (46, 8388608), (47, -1), (48, -1), (49, 33554432), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 67108864), (4, -1), (5, -1), (6, -1), (7, -1), (8, 131072), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, 67108864), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, 262144), (31, 524288), (32, 4096), (33, 4096), (34, -1), (35, -1), (36, 33554432), (37, 1024), (38, 2048), (39, -1), (40, -1), (41, -1), (42, 65536), (43, 65536), (44, -1), (45, 33554432), (46, 8388608), (47, -1), (48, -1), (49, 33554432), (50, -1), (51, -1), (52, -1)]

Covered at level 10 : set()

After reduction : 
 pending  : [24, 8, 30, 33, 45, 38, 42, 43, 46, 3, 49, 37, 36, 31, 32]
 solution : [0, 9, 10, 26, 19]


Solution : [0, 9, 10, 26, 19] has cost 25.


Decide in level 10 among pending : [24, 8, 30, 33, 45, 38, 42, 43, 46, 3, 49, 37, 36, 31, 32]

Coverage : [(0, -1), (1, -1), (2, -1), (3, 67108864), (4, -1), (5, -1), (6, -1), (7, -1), (8, 131072), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, 67108864), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, 262144), (31, 524288), (32, 4096), (33, 4096), (34, -1), (35, -1), (36, 33554432), (37, 1024), (38, 2048), (39, -1), (40, -1), (41, -1), (42, 65536), (43, 65536), (44, -1), (45, 33554432), (46, 8388608), (47, -1), (48, -1), (49, 33554432), (50, -1), (51, -1), (52, -1)]

Decide 24 with phase True at level 10

After decision at level 10
 pending : [8, 30, 33, 45, 38, 42, 43, 46, 3, 49, 37, 36, 31, 32]
 solution : [0, 9, 10, 26, 19, 24]


New level: 11
 pending : [8, 30, 33, 45, 38, 42, 43, 46, 3, 49, 37, 36, 31, 32]
 solution : [0, 9, 10, 26, 19, 24]


Before reduction : 
 pending  : [8, 30, 33, 45, 38, 42, 43, 46, 3, 49, 37, 36, 31, 32]
 solution : [0, 9, 10, 26, 19, 24]

Essensial at level 11 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 67108864), (4, -1), (5, -1), (6, -1), (7, -1), (8, 131072), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, 67108864), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, 262144), (31, 524288), (32, 4096), (33, 4096), (34, -1), (35, -1), (36, 33554432), (37, 1024), (38, 2048), (39, -1), (40, -1), (41, -1), (42, 65536), (43, 65536), (44, -1), (45, 33554432), (46, 8388608), (47, -1), (48, -1), (49, 33554432), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 0), (4, -1), (5, -1), (6, -1), (7, -1), (8, 0), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, 0), (31, 0), (32, 0), (33, 0), (34, -1), (35, -1), (36, 0), (37, 0), (38, 0), (39, -1), (40, -1), (41, -1), (42, 0), (43, 0), (44, -1), (45, 0), (46, 0), (47, -1), (48, -1), (49, 0), (50, -1), (51, -1), (52, -1)]

Covered at level 11 : {32, 33, 3, 36, 37, 38, 8, 42, 43, 45, 46, 49, 30, 31}

After reduction : 
 pending  : []
 solution : [0, 9, 10, 26, 19, 24]


Before reduction : 
 pending  : []
 solution : [0, 9, 10, 26, 19, 24]

Essensial at level 11 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 0), (4, -1), (5, -1), (6, -1), (7, -1), (8, 0), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, 0), (31, 0), (32, 0), (33, 0), (34, -1), (35, -1), (36, 0), (37, 0), (38, 0), (39, -1), (40, -1), (41, -1), (42, 0), (43, 0), (44, -1), (45, 0), (46, 0), (47, -1), (48, -1), (49, 0), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 11 : set()

After reduction : 
 pending  : []
 solution : [0, 9, 10, 26, 19, 24]


Solution : [0, 9, 10, 26, 19, 24] has cost 32.


Before backtrack at level 11
 pending : []
 solution : [0, 9, 10, 26, 19, 24]

After backtrack at level 11
 pending : [8, 30, 33, 45, 38, 42, 43, 46, 3, 49, 37, 36, 31, 32]
 solution : [0, 9, 10, 26, 19, 24]


Invert decision for 24 at level 10


New level: 11
 pending : [8, 30, 33, 45, 38, 42, 43, 46, 3, 49, 37, 36, 31, 32]
 solution : [0, 9, 10, 26, 19]


Before reduction : 
 pending  : [8, 30, 33, 45, 38, 42, 43, 46, 3, 49, 37, 36, 31, 32]
 solution : [0, 9, 10, 26, 19]

Essensial at level 11 : {3}

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, 0), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, 0), (31, 0), (32, 0), (33, 0), (34, -1), (35, -1), (36, 0), (37, 0), (38, 0), (39, -1), (40, -1), (41, -1), (42, 0), (43, 0), (44, -1), (45, 0), (46, 0), (47, -1), (48, -1), (49, 0), (50, -1), (51, -1), (52, -1)]

Covered at level 11 : {32, 33, 36, 37, 38, 8, 42, 43, 45, 46, 49, 30, 31}

After reduction : 
 pending  : []
 solution : [0, 9, 10, 26, 19, 3]


Before reduction : 
 pending  : []
 solution : [0, 9, 10, 26, 19, 3]

Essensial at level 11 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, 0), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, 0), (31, 0), (32, 0), (33, 0), (34, -1), (35, -1), (36, 0), (37, 0), (38, 0), (39, -1), (40, -1), (41, -1), (42, 0), (43, 0), (44, -1), (45, 0), (46, 0), (47, -1), (48, -1), (49, 0), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 11 : set()

After reduction : 
 pending  : []
 solution : [0, 9, 10, 26, 19, 3]


Solution : [0, 9, 10, 26, 19, 3] has cost 29.


Before backtrack at level 11
 pending : []
 solution : [0, 9, 10, 26, 19, 3]

After backtrack at level 11
 pending : [3, 8, 30, 33, 45, 38, 42, 43, 46, 49, 37, 36, 31, 32]
 solution : [0, 9, 10, 26, 19]


Before backtrack at level 10
 pending : [3, 8, 30, 33, 45, 38, 42, 43, 46, 49, 37, 36, 31, 32]
 solution : [0, 9, 10, 26, 19]

After backtrack at level 10
 pending : [3, 8, 30, 33, 45, 38, 42, 43, 46, 49, 37, 36, 31, 32, 5, 13, 14, 15, 16, 20, 21, 22, 23, 40, 24]
 solution : [0, 9, 10, 26, 19]


Invert decision for 19 at level 9


New level: 10
 pending : [3, 8, 30, 33, 45, 38, 42, 43, 46, 49, 37, 36, 31, 32, 5, 13, 14, 15, 16, 20, 21, 22, 23, 40, 24]
 solution : [0, 9, 10, 26]


Before reduction : 
 pending  : [3, 8, 30, 33, 45, 38, 42, 43, 46, 49, 37, 36, 31, 32, 5, 13, 14, 15, 16, 20, 21, 22, 23, 40, 24]
 solution : [0, 9, 10, 26]

Essensial at level 10 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 67108864), (4, -1), (5, 131072), (6, -1), (7, -1), (8, 524288), (9, -1), (10, -1), (11, -1), (12, -1), (13, 8388608), (14, 4194304), (15, 196608), (16, 65536), (17, -1), (18, -1), (19, -1), (20, 2097152), (21, 1048576), (22, 32768), (23, 524288), (24, 67108864), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, 524288), (31, 524288), (32, 4096), (33, 8192), (34, -1), (35, -1), (36, 67108864), (37, 33554432), (38, 8192), (39, -1), (40, 524288), (41, -1), (42, 262144), (43, 262144), (44, -1), (45, 33554432), (46, 8388608), (47, -1), (48, -1), (49, 33554432), (50, -1), (51, -1), (52, -1)]

Covered at level 10 : set()

After reduction : 
 pending  : [3, 8, 30, 33, 45, 38, 42, 43, 46, 49, 37, 36, 31, 32, 5, 13, 14, 15, 16, 20, 21, 22, 23, 40, 24]
 solution : [0, 9, 10, 26]


Solution : [0, 9, 10, 26] has cost 18.


Decide in level 10 among pending : [3, 8, 30, 33, 45, 38, 42, 43, 46, 49, 37, 36, 31, 32, 5, 13, 14, 15, 16, 20, 21, 22, 23, 40, 24]

Coverage : [(0, -1), (1, -1), (2, -1), (3, 67108864), (4, -1), (5, 131072), (6, -1), (7, -1), (8, 524288), (9, -1), (10, -1), (11, -1), (12, -1), (13, 8388608), (14, 4194304), (15, 196608), (16, 65536), (17, -1), (18, -1), (19, -1), (20, 2097152), (21, 1048576), (22, 32768), (23, 524288), (24, 67108864), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, 524288), (31, 524288), (32, 4096), (33, 8192), (34, -1), (35, -1), (36, 67108864), (37, 33554432), (38, 8192), (39, -1), (40, 524288), (41, -1), (42, 262144), (43, 262144), (44, -1), (45, 33554432), (46, 8388608), (47, -1), (48, -1), (49, 33554432), (50, -1), (51, -1), (52, -1)]

Decide 3 with phase True at level 10

After decision at level 10
 pending : [8, 30, 33, 45, 38, 42, 43, 46, 49, 37, 36, 31, 32, 5, 13, 14, 15, 16, 20, 21, 22, 23, 40, 24]
 solution : [0, 9, 10, 26, 3]


New level: 11
 pending : [8, 30, 33, 45, 38, 42, 43, 46, 49, 37, 36, 31, 32, 5, 13, 14, 15, 16, 20, 21, 22, 23, 40, 24]
 solution : [0, 9, 10, 26, 3]


Before reduction : 
 pending  : [8, 30, 33, 45, 38, 42, 43, 46, 49, 37, 36, 31, 32, 5, 13, 14, 15, 16, 20, 21, 22, 23, 40, 24]
 solution : [0, 9, 10, 26, 3]

Essensial at level 11 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 67108864), (4, -1), (5, 131072), (6, -1), (7, -1), (8, 524288), (9, -1), (10, -1), (11, -1), (12, -1), (13, 8388608), (14, 4194304), (15, 196608), (16, 65536), (17, -1), (18, -1), (19, -1), (20, 2097152), (21, 1048576), (22, 32768), (23, 524288), (24, 67108864), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, 524288), (31, 524288), (32, 4096), (33, 8192), (34, -1), (35, -1), (36, 67108864), (37, 33554432), (38, 8192), (39, -1), (40, 524288), (41, -1), (42, 262144), (43, 262144), (44, -1), (45, 33554432), (46, 8388608), (47, -1), (48, -1), (49, 33554432), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 65536), (6, -1), (7, -1), (8, 0), (9, -1), (10, -1), (11, -1), (12, -1), (13, 4194304), (14, 2097152), (15, 65536), (16, 32768), (17, -1), (18, -1), (19, -1), (20, 2097152), (21, 1048576), (22, 32768), (23, 524288), (24, 0), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, 0), (31, 0), (32, 0), (33, 0), (34, -1), (35, -1), (36, 0), (37, 32768), (38, 0), (39, -1), (40, 524288), (41, -1), (42, 0), (43, 0), (44, -1), (45, 0), (46, 0), (47, -1), (48, -1), (49, 0), (50, -1), (51, -1), (52, -1)]

Covered at level 11 : {32, 33, 36, 38, 8, 42, 43, 45, 46, 49, 24, 30, 31}

After reduction : 
 pending  : [37, 5, 13, 14, 15, 16, 20, 21, 22, 23, 40]
 solution : [0, 9, 10, 26, 3]


Before reduction : 
 pending  : [37, 5, 13, 14, 15, 16, 20, 21, 22, 23, 40]
 solution : [0, 9, 10, 26, 3]

Essensial at level 11 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 65536), (6, -1), (7, -1), (8, 0), (9, -1), (10, -1), (11, -1), (12, -1), (13, 4194304), (14, 2097152), (15, 65536), (16, 32768), (17, -1), (18, -1), (19, -1), (20, 2097152), (21, 1048576), (22, 32768), (23, 524288), (24, 0), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, 0), (31, 0), (32, 0), (33, 0), (34, -1), (35, -1), (36, 0), (37, 32768), (38, 0), (39, -1), (40, 524288), (41, -1), (42, 0), (43, 0), (44, -1), (45, 0), (46, 0), (47, -1), (48, -1), (49, 0), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 65536), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, 4194304), (14, 2097152), (15, 65536), (16, 32768), (17, -1), (18, -1), (19, -1), (20, 2097152), (21, 1048576), (22, 32768), (23, 524288), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, 32768), (38, -1), (39, -1), (40, 524288), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 11 : set()

After reduction : 
 pending  : [37, 5, 13, 14, 15, 16, 20, 21, 22, 23, 40]
 solution : [0, 9, 10, 26, 3]


Solution : [0, 9, 10, 26, 3] has cost 22.


Decide in level 11 among pending : [37, 5, 13, 14, 15, 16, 20, 21, 22, 23, 40]

Coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 65536), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, 4194304), (14, 2097152), (15, 65536), (16, 32768), (17, -1), (18, -1), (19, -1), (20, 2097152), (21, 1048576), (22, 32768), (23, 524288), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, 32768), (38, -1), (39, -1), (40, 524288), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Decide 13 with phase True at level 11

After decision at level 11
 pending : [37, 5, 14, 15, 16, 20, 21, 22, 23, 40]
 solution : [0, 9, 10, 26, 3, 13]


New level: 12
 pending : [37, 5, 14, 15, 16, 20, 21, 22, 23, 40]
 solution : [0, 9, 10, 26, 3, 13]


Before reduction : 
 pending  : [37, 5, 14, 15, 16, 20, 21, 22, 23, 40]
 solution : [0, 9, 10, 26, 3, 13]

Essensial at level 12 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 65536), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, 4194304), (14, 2097152), (15, 65536), (16, 32768), (17, -1), (18, -1), (19, -1), (20, 2097152), (21, 1048576), (22, 32768), (23, 524288), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, 32768), (38, -1), (39, -1), (40, 524288), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 0), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 0), (15, 0), (16, 0), (17, -1), (18, -1), (19, -1), (20, 32768), (21, 8192), (22, 8192), (23, 2048), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, 1024), (38, -1), (39, -1), (40, 2048), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 12 : {16, 5, 14, 15}

After reduction : 
 pending  : [37, 20, 21, 22, 23, 40]
 solution : [0, 9, 10, 26, 3, 13]


Before reduction : 
 pending  : [37, 20, 21, 22, 23, 40]
 solution : [0, 9, 10, 26, 3, 13]

Essensial at level 12 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 0), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 0), (15, 0), (16, 0), (17, -1), (18, -1), (19, -1), (20, 32768), (21, 8192), (22, 8192), (23, 2048), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, 1024), (38, -1), (39, -1), (40, 2048), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, 32768), (21, 8192), (22, 8192), (23, 2048), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, 1024), (38, -1), (39, -1), (40, 2048), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 12 : set()

After reduction : 
 pending  : [37, 20, 21, 22, 23, 40]
 solution : [0, 9, 10, 26, 3, 13]


Solution : [0, 9, 10, 26, 3, 13] has cost 31.


Before backtrack at level 12
 pending : [37, 20, 21, 22, 23, 40]
 solution : [0, 9, 10, 26, 3, 13]

After backtrack at level 12
 pending : [37, 20, 21, 22, 23, 40, 5, 14, 15, 16]
 solution : [0, 9, 10, 26, 3, 13]


Invert decision for 13 at level 11


New level: 12
 pending : [37, 20, 21, 22, 23, 40, 5, 14, 15, 16]
 solution : [0, 9, 10, 26, 3]


Before reduction : 
 pending  : [37, 20, 21, 22, 23, 40, 5, 14, 15, 16]
 solution : [0, 9, 10, 26, 3]

Essensial at level 12 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, 32768), (21, 8192), (22, 8192), (23, 2048), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, 1024), (38, -1), (39, -1), (40, 2048), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 65536), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 2097152), (15, 65536), (16, 32768), (17, -1), (18, -1), (19, -1), (20, 2097152), (21, 1048576), (22, 32768), (23, 524288), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, 32768), (38, -1), (39, -1), (40, 524288), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 12 : set()

After reduction : 
 pending  : [37, 20, 21, 22, 23, 40, 5, 14, 15, 16]
 solution : [0, 9, 10, 26, 3]


Solution : [0, 9, 10, 26, 3] has cost 22.


Decide in level 12 among pending : [37, 20, 21, 22, 23, 40, 5, 14, 15, 16]

Coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 65536), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 2097152), (15, 65536), (16, 32768), (17, -1), (18, -1), (19, -1), (20, 2097152), (21, 1048576), (22, 32768), (23, 524288), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, 32768), (38, -1), (39, -1), (40, 524288), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Decide 20 with phase True at level 12

After decision at level 12
 pending : [37, 21, 22, 23, 40, 5, 14, 15, 16]
 solution : [0, 9, 10, 26, 3, 20]


New level: 13
 pending : [37, 21, 22, 23, 40, 5, 14, 15, 16]
 solution : [0, 9, 10, 26, 3, 20]


Before reduction : 
 pending  : [37, 21, 22, 23, 40, 5, 14, 15, 16]
 solution : [0, 9, 10, 26, 3, 20]

Essensial at level 13 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 65536), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 2097152), (15, 65536), (16, 32768), (17, -1), (18, -1), (19, -1), (20, 2097152), (21, 1048576), (22, 32768), (23, 524288), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, 32768), (38, -1), (39, -1), (40, 524288), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 32768), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 524288), (15, 32768), (16, 0), (17, -1), (18, -1), (19, -1), (20, -1), (21, 0), (22, 0), (23, 131072), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, 512), (38, -1), (39, -1), (40, 131072), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 13 : {16, 21, 22}

After reduction : 
 pending  : [37, 23, 40, 5, 14, 15]
 solution : [0, 9, 10, 26, 3, 20]


Before reduction : 
 pending  : [37, 23, 40, 5, 14, 15]
 solution : [0, 9, 10, 26, 3, 20]

Essensial at level 13 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 32768), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 524288), (15, 32768), (16, 0), (17, -1), (18, -1), (19, -1), (20, -1), (21, 0), (22, 0), (23, 131072), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, 512), (38, -1), (39, -1), (40, 131072), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 32768), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 524288), (15, 32768), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, 131072), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, 512), (38, -1), (39, -1), (40, 131072), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 13 : set()

After reduction : 
 pending  : [37, 23, 40, 5, 14, 15]
 solution : [0, 9, 10, 26, 3, 20]


Solution : [0, 9, 10, 26, 3, 20] has cost 29.


Before backtrack at level 13
 pending : [37, 23, 40, 5, 14, 15]
 solution : [0, 9, 10, 26, 3, 20]

After backtrack at level 13
 pending : [37, 23, 40, 5, 14, 15, 21, 22, 16]
 solution : [0, 9, 10, 26, 3, 20]


Invert decision for 20 at level 12


New level: 13
 pending : [37, 23, 40, 5, 14, 15, 21, 22, 16]
 solution : [0, 9, 10, 26, 3]


Before reduction : 
 pending  : [37, 23, 40, 5, 14, 15, 21, 22, 16]
 solution : [0, 9, 10, 26, 3]

Essensial at level 13 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 32768), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 524288), (15, 32768), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, 131072), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, 512), (38, -1), (39, -1), (40, 131072), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 65536), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 2097152), (15, 65536), (16, 32768), (17, -1), (18, -1), (19, -1), (20, -1), (21, 1048576), (22, 32768), (23, 524288), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, 32768), (38, -1), (39, -1), (40, 524288), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 13 : set()

After reduction : 
 pending  : [37, 23, 40, 5, 14, 15, 21, 22, 16]
 solution : [0, 9, 10, 26, 3]


Solution : [0, 9, 10, 26, 3] has cost 22.


Decide in level 13 among pending : [37, 23, 40, 5, 14, 15, 21, 22, 16]

Coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 65536), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 2097152), (15, 65536), (16, 32768), (17, -1), (18, -1), (19, -1), (20, -1), (21, 1048576), (22, 32768), (23, 524288), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, 32768), (38, -1), (39, -1), (40, 524288), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Decide 14 with phase True at level 13

After decision at level 13
 pending : [37, 23, 40, 5, 15, 21, 22, 16]
 solution : [0, 9, 10, 26, 3, 14]


New level: 14
 pending : [37, 23, 40, 5, 15, 21, 22, 16]
 solution : [0, 9, 10, 26, 3, 14]


Before reduction : 
 pending  : [37, 23, 40, 5, 15, 21, 22, 16]
 solution : [0, 9, 10, 26, 3, 14]

Essensial at level 14 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 65536), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 2097152), (15, 65536), (16, 32768), (17, -1), (18, -1), (19, -1), (20, -1), (21, 1048576), (22, 32768), (23, 524288), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, 32768), (38, -1), (39, -1), (40, 524288), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 0), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, 0), (16, 0), (17, -1), (18, -1), (19, -1), (20, -1), (21, 8192), (22, 8192), (23, 2048), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, 1024), (38, -1), (39, -1), (40, 2048), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 14 : {16, 5, 15}

After reduction : 
 pending  : [37, 23, 40, 21, 22]
 solution : [0, 9, 10, 26, 3, 14]


Before reduction : 
 pending  : [37, 23, 40, 21, 22]
 solution : [0, 9, 10, 26, 3, 14]

Essensial at level 14 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 0), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, 0), (16, 0), (17, -1), (18, -1), (19, -1), (20, -1), (21, 8192), (22, 8192), (23, 2048), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, 1024), (38, -1), (39, -1), (40, 2048), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, 8192), (22, 8192), (23, 2048), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, 1024), (38, -1), (39, -1), (40, 2048), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 14 : set()

After reduction : 
 pending  : [37, 23, 40, 21, 22]
 solution : [0, 9, 10, 26, 3, 14]


Solution : [0, 9, 10, 26, 3, 14] has cost 31.


Before backtrack at level 14
 pending : [37, 23, 40, 21, 22]
 solution : [0, 9, 10, 26, 3, 14]

After backtrack at level 14
 pending : [37, 23, 40, 21, 22, 5, 15, 16]
 solution : [0, 9, 10, 26, 3, 14]


Invert decision for 14 at level 13


New level: 14
 pending : [37, 23, 40, 21, 22, 5, 15, 16]
 solution : [0, 9, 10, 26, 3]


Before reduction : 
 pending  : [37, 23, 40, 21, 22, 5, 15, 16]
 solution : [0, 9, 10, 26, 3]

Essensial at level 14 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, 8192), (22, 8192), (23, 2048), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, 1024), (38, -1), (39, -1), (40, 2048), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 65536), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, 65536), (16, 32768), (17, -1), (18, -1), (19, -1), (20, -1), (21, 1048576), (22, 32768), (23, 524288), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, 32768), (38, -1), (39, -1), (40, 524288), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 14 : set()

After reduction : 
 pending  : [37, 23, 40, 21, 22, 5, 15, 16]
 solution : [0, 9, 10, 26, 3]


Solution : [0, 9, 10, 26, 3] has cost 22.


Decide in level 14 among pending : [37, 23, 40, 21, 22, 5, 15, 16]

Coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 65536), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, 65536), (16, 32768), (17, -1), (18, -1), (19, -1), (20, -1), (21, 1048576), (22, 32768), (23, 524288), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, 32768), (38, -1), (39, -1), (40, 524288), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Decide 21 with phase True at level 14

After decision at level 14
 pending : [37, 23, 40, 22, 5, 15, 16]
 solution : [0, 9, 10, 26, 3, 21]


New level: 15
 pending : [37, 23, 40, 22, 5, 15, 16]
 solution : [0, 9, 10, 26, 3, 21]


Before reduction : 
 pending  : [37, 23, 40, 22, 5, 15, 16]
 solution : [0, 9, 10, 26, 3, 21]

Essensial at level 15 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 65536), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, 65536), (16, 32768), (17, -1), (18, -1), (19, -1), (20, -1), (21, 1048576), (22, 32768), (23, 524288), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, 32768), (38, -1), (39, -1), (40, 524288), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 32768), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, 32768), (16, 0), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, 0), (23, 131072), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, 512), (38, -1), (39, -1), (40, 131072), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 15 : {16, 22}

After reduction : 
 pending  : [37, 23, 40, 5, 15]
 solution : [0, 9, 10, 26, 3, 21]


Before reduction : 
 pending  : [37, 23, 40, 5, 15]
 solution : [0, 9, 10, 26, 3, 21]

Essensial at level 15 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 32768), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, 32768), (16, 0), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, 0), (23, 131072), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, 512), (38, -1), (39, -1), (40, 131072), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 32768), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, 32768), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, 131072), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, 512), (38, -1), (39, -1), (40, 131072), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 15 : set()

After reduction : 
 pending  : [37, 23, 40, 5, 15]
 solution : [0, 9, 10, 26, 3, 21]


Solution : [0, 9, 10, 26, 3, 21] has cost 29.


Before backtrack at level 15
 pending : [37, 23, 40, 5, 15]
 solution : [0, 9, 10, 26, 3, 21]

After backtrack at level 15
 pending : [37, 23, 40, 5, 15, 22, 16]
 solution : [0, 9, 10, 26, 3, 21]


Invert decision for 21 at level 14


New level: 15
 pending : [37, 23, 40, 5, 15, 22, 16]
 solution : [0, 9, 10, 26, 3]


Before reduction : 
 pending  : [37, 23, 40, 5, 15, 22, 16]
 solution : [0, 9, 10, 26, 3]

Essensial at level 15 : {22}

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 32768), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, 32768), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, 131072), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, 512), (38, -1), (39, -1), (40, 131072), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 65536), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, 65536), (16, 16384), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, 524288), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, 32768), (38, -1), (39, -1), (40, 524288), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 15 : set()

After reduction : 
 pending  : [37, 23, 40, 5, 15, 16]
 solution : [0, 9, 10, 26, 3, 22]


Before reduction : 
 pending  : [37, 23, 40, 5, 15, 16]
 solution : [0, 9, 10, 26, 3, 22]

Essensial at level 15 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 65536), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, 65536), (16, 16384), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, 524288), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, 32768), (38, -1), (39, -1), (40, 524288), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 65536), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, 65536), (16, 16384), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, 524288), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, 32768), (38, -1), (39, -1), (40, 524288), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 15 : set()

After reduction : 
 pending  : [37, 23, 40, 5, 15, 16]
 solution : [0, 9, 10, 26, 3, 22]


Solution : [0, 9, 10, 26, 3, 22] has cost 29.


Before backtrack at level 15
 pending : [37, 23, 40, 5, 15, 16]
 solution : [0, 9, 10, 26, 3, 22]

After backtrack at level 15
 pending : [37, 23, 40, 5, 15, 16, 22]
 solution : [0, 9, 10, 26, 3]


Before backtrack at level 14
 pending : [37, 23, 40, 5, 15, 16, 22]
 solution : [0, 9, 10, 26, 3]

After backtrack at level 14
 pending : [37, 23, 40, 5, 15, 16, 22, 21]
 solution : [0, 9, 10, 26, 3]


Before backtrack at level 13
 pending : [37, 23, 40, 5, 15, 16, 22, 21]
 solution : [0, 9, 10, 26, 3]

After backtrack at level 13
 pending : [37, 23, 40, 5, 15, 16, 22, 21, 14]
 solution : [0, 9, 10, 26, 3]


Before backtrack at level 12
 pending : [37, 23, 40, 5, 15, 16, 22, 21, 14]
 solution : [0, 9, 10, 26, 3]

After backtrack at level 12
 pending : [37, 23, 40, 5, 15, 16, 22, 21, 14, 20]
 solution : [0, 9, 10, 26, 3]


Before backtrack at level 11
 pending : [37, 23, 40, 5, 15, 16, 22, 21, 14, 20]
 solution : [0, 9, 10, 26, 3]

After backtrack at level 11
 pending : [37, 23, 40, 5, 15, 16, 22, 21, 14, 20, 8, 30, 33, 45, 38, 42, 43, 46, 49, 36, 31, 32, 24, 13]
 solution : [0, 9, 10, 26, 3]


Invert decision for 3 at level 10


New level: 11
 pending : [37, 23, 40, 5, 15, 16, 22, 21, 14, 20, 8, 30, 33, 45, 38, 42, 43, 46, 49, 36, 31, 32, 24, 13]
 solution : [0, 9, 10, 26]


Before reduction : 
 pending  : [37, 23, 40, 5, 15, 16, 22, 21, 14, 20, 8, 30, 33, 45, 38, 42, 43, 46, 49, 36, 31, 32, 24, 13]
 solution : [0, 9, 10, 26]

Essensial at level 11 : {24}

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 65536), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, 65536), (16, 16384), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, 524288), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, 32768), (38, -1), (39, -1), (40, 524288), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 65536), (6, -1), (7, -1), (8, 0), (9, -1), (10, -1), (11, -1), (12, -1), (13, 4194304), (14, 2097152), (15, 65536), (16, 32768), (17, -1), (18, -1), (19, -1), (20, 2097152), (21, 1048576), (22, 32768), (23, 524288), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, 0), (31, 0), (32, 0), (33, 0), (34, -1), (35, -1), (36, 0), (37, 262144), (38, 0), (39, -1), (40, 524288), (41, -1), (42, 0), (43, 0), (44, -1), (45, 0), (46, 0), (47, -1), (48, -1), (49, 0), (50, -1), (51, -1), (52, -1)]

Covered at level 11 : {32, 33, 36, 38, 8, 42, 43, 45, 46, 49, 30, 31}

After reduction : 
 pending  : [37, 23, 40, 5, 15, 16, 22, 21, 14, 20, 13]
 solution : [0, 9, 10, 26, 24]


Before reduction : 
 pending  : [37, 23, 40, 5, 15, 16, 22, 21, 14, 20, 13]
 solution : [0, 9, 10, 26, 24]

Essensial at level 11 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 65536), (6, -1), (7, -1), (8, 0), (9, -1), (10, -1), (11, -1), (12, -1), (13, 4194304), (14, 2097152), (15, 65536), (16, 32768), (17, -1), (18, -1), (19, -1), (20, 2097152), (21, 1048576), (22, 32768), (23, 524288), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, 0), (31, 0), (32, 0), (33, 0), (34, -1), (35, -1), (36, 0), (37, 262144), (38, 0), (39, -1), (40, 524288), (41, -1), (42, 0), (43, 0), (44, -1), (45, 0), (46, 0), (47, -1), (48, -1), (49, 0), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 65536), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, 4194304), (14, 2097152), (15, 65536), (16, 32768), (17, -1), (18, -1), (19, -1), (20, 2097152), (21, 1048576), (22, 32768), (23, 524288), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, 262144), (38, -1), (39, -1), (40, 524288), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 11 : set()

After reduction : 
 pending  : [37, 23, 40, 5, 15, 16, 22, 21, 14, 20, 13]
 solution : [0, 9, 10, 26, 24]


Solution : [0, 9, 10, 26, 24] has cost 25.


Decide in level 11 among pending : [37, 23, 40, 5, 15, 16, 22, 21, 14, 20, 13]

Coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 65536), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, 4194304), (14, 2097152), (15, 65536), (16, 32768), (17, -1), (18, -1), (19, -1), (20, 2097152), (21, 1048576), (22, 32768), (23, 524288), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, 262144), (38, -1), (39, -1), (40, 524288), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Decide 13 with phase True at level 11

After decision at level 11
 pending : [37, 23, 40, 5, 15, 16, 22, 21, 14, 20]
 solution : [0, 9, 10, 26, 24, 13]


New level: 12
 pending : [37, 23, 40, 5, 15, 16, 22, 21, 14, 20]
 solution : [0, 9, 10, 26, 24, 13]


Before reduction : 
 pending  : [37, 23, 40, 5, 15, 16, 22, 21, 14, 20]
 solution : [0, 9, 10, 26, 24, 13]

Essensial at level 12 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 65536), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, 4194304), (14, 2097152), (15, 65536), (16, 32768), (17, -1), (18, -1), (19, -1), (20, 2097152), (21, 1048576), (22, 32768), (23, 524288), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, 262144), (38, -1), (39, -1), (40, 524288), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 0), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 0), (15, 0), (16, 0), (17, -1), (18, -1), (19, -1), (20, 32768), (21, 8192), (22, 8192), (23, 2048), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, 1024), (38, -1), (39, -1), (40, 2048), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 12 : {16, 5, 14, 15}

After reduction : 
 pending  : [37, 23, 40, 22, 21, 20]
 solution : [0, 9, 10, 26, 24, 13]


Before reduction : 
 pending  : [37, 23, 40, 22, 21, 20]
 solution : [0, 9, 10, 26, 24, 13]

Essensial at level 12 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 0), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 0), (15, 0), (16, 0), (17, -1), (18, -1), (19, -1), (20, 32768), (21, 8192), (22, 8192), (23, 2048), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, 1024), (38, -1), (39, -1), (40, 2048), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, 32768), (21, 8192), (22, 8192), (23, 2048), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, 1024), (38, -1), (39, -1), (40, 2048), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 12 : set()

After reduction : 
 pending  : [37, 23, 40, 22, 21, 20]
 solution : [0, 9, 10, 26, 24, 13]


Solution : [0, 9, 10, 26, 24, 13] has cost 34.


Before backtrack at level 12
 pending : [37, 23, 40, 22, 21, 20]
 solution : [0, 9, 10, 26, 24, 13]

After backtrack at level 12
 pending : [37, 23, 40, 22, 21, 20, 5, 15, 16, 14]
 solution : [0, 9, 10, 26, 24, 13]


Invert decision for 13 at level 11


New level: 12
 pending : [37, 23, 40, 22, 21, 20, 5, 15, 16, 14]
 solution : [0, 9, 10, 26, 24]


Before reduction : 
 pending  : [37, 23, 40, 22, 21, 20, 5, 15, 16, 14]
 solution : [0, 9, 10, 26, 24]

Essensial at level 12 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, 32768), (21, 8192), (22, 8192), (23, 2048), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, 1024), (38, -1), (39, -1), (40, 2048), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 65536), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 2097152), (15, 65536), (16, 32768), (17, -1), (18, -1), (19, -1), (20, 2097152), (21, 1048576), (22, 32768), (23, 524288), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, 262144), (38, -1), (39, -1), (40, 524288), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 12 : set()

After reduction : 
 pending  : [37, 23, 40, 22, 21, 20, 5, 15, 16, 14]
 solution : [0, 9, 10, 26, 24]


Solution : [0, 9, 10, 26, 24] has cost 25.


Decide in level 12 among pending : [37, 23, 40, 22, 21, 20, 5, 15, 16, 14]

Coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 65536), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 2097152), (15, 65536), (16, 32768), (17, -1), (18, -1), (19, -1), (20, 2097152), (21, 1048576), (22, 32768), (23, 524288), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, 262144), (38, -1), (39, -1), (40, 524288), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Decide 20 with phase True at level 12

After decision at level 12
 pending : [37, 23, 40, 22, 21, 5, 15, 16, 14]
 solution : [0, 9, 10, 26, 24, 20]


New level: 13
 pending : [37, 23, 40, 22, 21, 5, 15, 16, 14]
 solution : [0, 9, 10, 26, 24, 20]


Before reduction : 
 pending  : [37, 23, 40, 22, 21, 5, 15, 16, 14]
 solution : [0, 9, 10, 26, 24, 20]

Essensial at level 13 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 65536), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 2097152), (15, 65536), (16, 32768), (17, -1), (18, -1), (19, -1), (20, 2097152), (21, 1048576), (22, 32768), (23, 524288), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, 262144), (38, -1), (39, -1), (40, 524288), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 32768), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 524288), (15, 32768), (16, 0), (17, -1), (18, -1), (19, -1), (20, -1), (21, 0), (22, 0), (23, 131072), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, 512), (38, -1), (39, -1), (40, 131072), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 13 : {16, 21, 22}

After reduction : 
 pending  : [37, 23, 40, 5, 15, 14]
 solution : [0, 9, 10, 26, 24, 20]


Before reduction : 
 pending  : [37, 23, 40, 5, 15, 14]
 solution : [0, 9, 10, 26, 24, 20]

Essensial at level 13 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 32768), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 524288), (15, 32768), (16, 0), (17, -1), (18, -1), (19, -1), (20, -1), (21, 0), (22, 0), (23, 131072), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, 512), (38, -1), (39, -1), (40, 131072), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 32768), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 524288), (15, 32768), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, 131072), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, 512), (38, -1), (39, -1), (40, 131072), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 13 : set()

After reduction : 
 pending  : [37, 23, 40, 5, 15, 14]
 solution : [0, 9, 10, 26, 24, 20]


Solution : [0, 9, 10, 26, 24, 20] has cost 32.


Before backtrack at level 13
 pending : [37, 23, 40, 5, 15, 14]
 solution : [0, 9, 10, 26, 24, 20]

After backtrack at level 13
 pending : [37, 23, 40, 5, 15, 14, 22, 21, 16]
 solution : [0, 9, 10, 26, 24, 20]


Invert decision for 20 at level 12


New level: 13
 pending : [37, 23, 40, 5, 15, 14, 22, 21, 16]
 solution : [0, 9, 10, 26, 24]


Before reduction : 
 pending  : [37, 23, 40, 5, 15, 14, 22, 21, 16]
 solution : [0, 9, 10, 26, 24]

Essensial at level 13 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 32768), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 524288), (15, 32768), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, 131072), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, 512), (38, -1), (39, -1), (40, 131072), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 65536), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 2097152), (15, 65536), (16, 32768), (17, -1), (18, -1), (19, -1), (20, -1), (21, 1048576), (22, 32768), (23, 524288), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, 262144), (38, -1), (39, -1), (40, 524288), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 13 : set()

After reduction : 
 pending  : [37, 23, 40, 5, 15, 14, 22, 21, 16]
 solution : [0, 9, 10, 26, 24]


Solution : [0, 9, 10, 26, 24] has cost 25.


Decide in level 13 among pending : [37, 23, 40, 5, 15, 14, 22, 21, 16]

Coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 65536), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 2097152), (15, 65536), (16, 32768), (17, -1), (18, -1), (19, -1), (20, -1), (21, 1048576), (22, 32768), (23, 524288), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, 262144), (38, -1), (39, -1), (40, 524288), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Decide 14 with phase True at level 13

After decision at level 13
 pending : [37, 23, 40, 5, 15, 22, 21, 16]
 solution : [0, 9, 10, 26, 24, 14]


New level: 14
 pending : [37, 23, 40, 5, 15, 22, 21, 16]
 solution : [0, 9, 10, 26, 24, 14]


Before reduction : 
 pending  : [37, 23, 40, 5, 15, 22, 21, 16]
 solution : [0, 9, 10, 26, 24, 14]

Essensial at level 14 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 65536), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 2097152), (15, 65536), (16, 32768), (17, -1), (18, -1), (19, -1), (20, -1), (21, 1048576), (22, 32768), (23, 524288), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, 262144), (38, -1), (39, -1), (40, 524288), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 0), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, 0), (16, 0), (17, -1), (18, -1), (19, -1), (20, -1), (21, 8192), (22, 8192), (23, 2048), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, 1024), (38, -1), (39, -1), (40, 2048), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 14 : {16, 5, 15}

After reduction : 
 pending  : [37, 23, 40, 22, 21]
 solution : [0, 9, 10, 26, 24, 14]


Before reduction : 
 pending  : [37, 23, 40, 22, 21]
 solution : [0, 9, 10, 26, 24, 14]

Essensial at level 14 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 0), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, 0), (16, 0), (17, -1), (18, -1), (19, -1), (20, -1), (21, 8192), (22, 8192), (23, 2048), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, 1024), (38, -1), (39, -1), (40, 2048), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, 8192), (22, 8192), (23, 2048), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, 1024), (38, -1), (39, -1), (40, 2048), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 14 : set()

After reduction : 
 pending  : [37, 23, 40, 22, 21]
 solution : [0, 9, 10, 26, 24, 14]


Solution : [0, 9, 10, 26, 24, 14] has cost 34.


Before backtrack at level 14
 pending : [37, 23, 40, 22, 21]
 solution : [0, 9, 10, 26, 24, 14]

After backtrack at level 14
 pending : [37, 23, 40, 22, 21, 5, 15, 16]
 solution : [0, 9, 10, 26, 24, 14]


Invert decision for 14 at level 13


New level: 14
 pending : [37, 23, 40, 22, 21, 5, 15, 16]
 solution : [0, 9, 10, 26, 24]


Before reduction : 
 pending  : [37, 23, 40, 22, 21, 5, 15, 16]
 solution : [0, 9, 10, 26, 24]

Essensial at level 14 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, 8192), (22, 8192), (23, 2048), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, 1024), (38, -1), (39, -1), (40, 2048), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 65536), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, 65536), (16, 32768), (17, -1), (18, -1), (19, -1), (20, -1), (21, 1048576), (22, 32768), (23, 524288), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, 262144), (38, -1), (39, -1), (40, 524288), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 14 : set()

After reduction : 
 pending  : [37, 23, 40, 22, 21, 5, 15, 16]
 solution : [0, 9, 10, 26, 24]


Solution : [0, 9, 10, 26, 24] has cost 25.


Decide in level 14 among pending : [37, 23, 40, 22, 21, 5, 15, 16]

Coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 65536), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, 65536), (16, 32768), (17, -1), (18, -1), (19, -1), (20, -1), (21, 1048576), (22, 32768), (23, 524288), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, 262144), (38, -1), (39, -1), (40, 524288), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Decide 21 with phase True at level 14

After decision at level 14
 pending : [37, 23, 40, 22, 5, 15, 16]
 solution : [0, 9, 10, 26, 24, 21]


New level: 15
 pending : [37, 23, 40, 22, 5, 15, 16]
 solution : [0, 9, 10, 26, 24, 21]


Before reduction : 
 pending  : [37, 23, 40, 22, 5, 15, 16]
 solution : [0, 9, 10, 26, 24, 21]

Essensial at level 15 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 65536), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, 65536), (16, 32768), (17, -1), (18, -1), (19, -1), (20, -1), (21, 1048576), (22, 32768), (23, 524288), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, 262144), (38, -1), (39, -1), (40, 524288), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 32768), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, 32768), (16, 0), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, 0), (23, 131072), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, 512), (38, -1), (39, -1), (40, 131072), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 15 : {16, 22}

After reduction : 
 pending  : [37, 23, 40, 5, 15]
 solution : [0, 9, 10, 26, 24, 21]


Before reduction : 
 pending  : [37, 23, 40, 5, 15]
 solution : [0, 9, 10, 26, 24, 21]

Essensial at level 15 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 32768), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, 32768), (16, 0), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, 0), (23, 131072), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, 512), (38, -1), (39, -1), (40, 131072), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 32768), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, 32768), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, 131072), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, 512), (38, -1), (39, -1), (40, 131072), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 15 : set()

After reduction : 
 pending  : [37, 23, 40, 5, 15]
 solution : [0, 9, 10, 26, 24, 21]


Solution : [0, 9, 10, 26, 24, 21] has cost 32.


Before backtrack at level 15
 pending : [37, 23, 40, 5, 15]
 solution : [0, 9, 10, 26, 24, 21]

After backtrack at level 15
 pending : [37, 23, 40, 5, 15, 22, 16]
 solution : [0, 9, 10, 26, 24, 21]


Invert decision for 21 at level 14


New level: 15
 pending : [37, 23, 40, 5, 15, 22, 16]
 solution : [0, 9, 10, 26, 24]


Before reduction : 
 pending  : [37, 23, 40, 5, 15, 22, 16]
 solution : [0, 9, 10, 26, 24]

Essensial at level 15 : {22}

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 32768), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, 32768), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, 131072), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, 512), (38, -1), (39, -1), (40, 131072), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 65536), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, 65536), (16, 16384), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, 524288), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, 262144), (38, -1), (39, -1), (40, 524288), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 15 : set()

After reduction : 
 pending  : [37, 23, 40, 5, 15, 16]
 solution : [0, 9, 10, 26, 24, 22]


Before reduction : 
 pending  : [37, 23, 40, 5, 15, 16]
 solution : [0, 9, 10, 26, 24, 22]

Essensial at level 15 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 65536), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, 65536), (16, 16384), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, 524288), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, 262144), (38, -1), (39, -1), (40, 524288), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 65536), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, 65536), (16, 16384), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, 524288), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, 262144), (38, -1), (39, -1), (40, 524288), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 15 : set()

After reduction : 
 pending  : [37, 23, 40, 5, 15, 16]
 solution : [0, 9, 10, 26, 24, 22]


Solution : [0, 9, 10, 26, 24, 22] has cost 32.


Before backtrack at level 15
 pending : [37, 23, 40, 5, 15, 16]
 solution : [0, 9, 10, 26, 24, 22]

After backtrack at level 15
 pending : [37, 23, 40, 5, 15, 16, 22]
 solution : [0, 9, 10, 26, 24]


Before backtrack at level 14
 pending : [37, 23, 40, 5, 15, 16, 22]
 solution : [0, 9, 10, 26, 24]

After backtrack at level 14
 pending : [37, 23, 40, 5, 15, 16, 22, 21]
 solution : [0, 9, 10, 26, 24]


Before backtrack at level 13
 pending : [37, 23, 40, 5, 15, 16, 22, 21]
 solution : [0, 9, 10, 26, 24]

After backtrack at level 13
 pending : [37, 23, 40, 5, 15, 16, 22, 21, 14]
 solution : [0, 9, 10, 26, 24]


Before backtrack at level 12
 pending : [37, 23, 40, 5, 15, 16, 22, 21, 14]
 solution : [0, 9, 10, 26, 24]

After backtrack at level 12
 pending : [37, 23, 40, 5, 15, 16, 22, 21, 14, 20]
 solution : [0, 9, 10, 26, 24]


Before backtrack at level 11
 pending : [37, 23, 40, 5, 15, 16, 22, 21, 14, 20]
 solution : [0, 9, 10, 26, 24]

After backtrack at level 11
 pending : [37, 23, 40, 5, 15, 16, 22, 21, 14, 20, 24, 8, 30, 33, 45, 38, 42, 43, 46, 49, 36, 31, 32, 13]
 solution : [0, 9, 10, 26]


Before backtrack at level 10
 pending : [37, 23, 40, 5, 15, 16, 22, 21, 14, 20, 24, 8, 30, 33, 45, 38, 42, 43, 46, 49, 36, 31, 32, 13]
 solution : [0, 9, 10, 26]

After backtrack at level 10
 pending : [37, 23, 40, 5, 15, 16, 22, 21, 14, 20, 24, 8, 30, 33, 45, 38, 42, 43, 46, 49, 36, 31, 32, 13, 3]
 solution : [0, 9, 10, 26]


Before backtrack at level 9
 pending : [37, 23, 40, 5, 15, 16, 22, 21, 14, 20, 24, 8, 30, 33, 45, 38, 42, 43, 46, 49, 36, 31, 32, 13, 3]
 solution : [0, 9, 10, 26]

After backtrack at level 9
 pending : [37, 23, 40, 5, 15, 16, 22, 21, 14, 20, 24, 8, 30, 33, 45, 38, 42, 43, 46, 49, 36, 31, 32, 13, 3, 19]
 solution : [0, 9, 10, 26]


Before backtrack at level 8
 pending : [37, 23, 40, 5, 15, 16, 22, 21, 14, 20, 24, 8, 30, 33, 45, 38, 42, 43, 46, 49, 36, 31, 32, 13, 3, 19]
 solution : [0, 9, 10, 26]

After backtrack at level 8
 pending : [37, 23, 40, 5, 15, 16, 22, 21, 14, 20, 24, 8, 30, 33, 45, 38, 42, 43, 46, 49, 36, 31, 32, 13, 3, 19, 25]
 solution : [0, 9, 10, 26]


Before backtrack at level 7
 pending : [37, 23, 40, 5, 15, 16, 22, 21, 14, 20, 24, 8, 30, 33, 45, 38, 42, 43, 46, 49, 36, 31, 32, 13, 3, 19, 25]
 solution : [0, 9, 10, 26]

After backtrack at level 7
 pending : [37, 23, 40, 5, 15, 16, 22, 21, 14, 20, 24, 8, 30, 33, 45, 38, 42, 43, 46, 49, 36, 31, 32, 13, 3, 19, 25, 39]
 solution : [0, 9, 10, 26]


Before backtrack at level 6
 pending : [37, 23, 40, 5, 15, 16, 22, 21, 14, 20, 24, 8, 30, 33, 45, 38, 42, 43, 46, 49, 36, 31, 32, 13, 3, 19, 25, 39]
 solution : [0, 9, 10, 26]

After backtrack at level 6
 pending : [37, 23, 40, 5, 15, 16, 22, 21, 14, 20, 24, 8, 30, 33, 45, 38, 42, 43, 46, 49, 36, 31, 32, 13, 3, 19, 25, 39, 35]
 solution : [0, 9, 10, 26]


Before backtrack at level 5
 pending : [37, 23, 40, 5, 15, 16, 22, 21, 14, 20, 24, 8, 30, 33, 45, 38, 42, 43, 46, 49, 36, 31, 32, 13, 3, 19, 25, 39, 35]
 solution : [0, 9, 10, 26]

After backtrack at level 5
 pending : [37, 23, 40, 5, 15, 16, 22, 21, 14, 20, 24, 8, 30, 33, 45, 38, 42, 43, 46, 49, 36, 31, 32, 13, 3, 19, 25, 39, 35, 18]
 solution : [0, 9, 10, 26]


Before backtrack at level 4
 pending : [37, 23, 40, 5, 15, 16, 22, 21, 14, 20, 24, 8, 30, 33, 45, 38, 42, 43, 46, 49, 36, 31, 32, 13, 3, 19, 25, 39, 35, 18]
 solution : [0, 9, 10, 26]

After backtrack at level 4
 pending : [37, 23, 40, 5, 15, 16, 22, 21, 14, 20, 24, 8, 30, 33, 45, 38, 42, 43, 46, 49, 36, 31, 32, 13, 3, 19, 25, 39, 35, 18, 28]
 solution : [0, 9, 10, 26]


Invert decision for 26 at level 3


New level: 4
 pending : [37, 23, 40, 5, 15, 16, 22, 21, 14, 20, 24, 8, 30, 33, 45, 38, 42, 43, 46, 49, 36, 31, 32, 13, 3, 19, 25, 39, 35, 18, 28]
 solution : [0, 9, 10]


Before reduction : 
 pending  : [37, 23, 40, 5, 15, 16, 22, 21, 14, 20, 24, 8, 30, 33, 45, 38, 42, 43, 46, 49, 36, 31, 32, 13, 3, 19, 25, 39, 35, 18, 28]
 solution : [0, 9, 10]

Essensial at level 4 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 65536), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, 65536), (16, 16384), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, 524288), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, 262144), (38, -1), (39, -1), (40, 524288), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 67108864), (4, -1), (5, 131072), (6, -1), (7, -1), (8, 524288), (9, -1), (10, -1), (11, -1), (12, -1), (13, 8388608), (14, 4194304), (15, 196608), (16, 65536), (17, -1), (18, 268435456), (19, 134217728), (20, 2097152), (21, 1048576), (22, 32768), (23, 524288), (24, 67108864), (25, 268435456), (26, -1), (27, -1), (28, 536870912), (29, -1), (30, 524288), (31, 1048576), (32, 8192), (33, 8192), (34, -1), (35, 536870912), (36, 67108864), (37, 33554432), (38, 8192), (39, 134217728), (40, 524288), (41, -1), (42, 262144), (43, 262144), (44, -1), (45, 33554432), (46, 8388608), (47, -1), (48, -1), (49, 33554432), (50, -1), (51, -1), (52, -1)]

Covered at level 4 : set()

After reduction : 
 pending  : [37, 23, 40, 5, 15, 16, 22, 21, 14, 20, 24, 8, 30, 33, 45, 38, 42, 43, 46, 49, 36, 31, 32, 13, 3, 19, 25, 39, 35, 18, 28]
 solution : [0, 9, 10]


Solution : [0, 9, 10] has cost 14.


Decide in level 4 among pending : [37, 23, 40, 5, 15, 16, 22, 21, 14, 20, 24, 8, 30, 33, 45, 38, 42, 43, 46, 49, 36, 31, 32, 13, 3, 19, 25, 39, 35, 18, 28]

Coverage : [(0, -1), (1, -1), (2, -1), (3, 67108864), (4, -1), (5, 131072), (6, -1), (7, -1), (8, 524288), (9, -1), (10, -1), (11, -1), (12, -1), (13, 8388608), (14, 4194304), (15, 196608), (16, 65536), (17, -1), (18, 268435456), (19, 134217728), (20, 2097152), (21, 1048576), (22, 32768), (23, 524288), (24, 67108864), (25, 268435456), (26, -1), (27, -1), (28, 536870912), (29, -1), (30, 524288), (31, 1048576), (32, 8192), (33, 8192), (34, -1), (35, 536870912), (36, 67108864), (37, 33554432), (38, 8192), (39, 134217728), (40, 524288), (41, -1), (42, 262144), (43, 262144), (44, -1), (45, 33554432), (46, 8388608), (47, -1), (48, -1), (49, 33554432), (50, -1), (51, -1), (52, -1)]

Decide 35 with phase True at level 4

After decision at level 4
 pending : [37, 23, 40, 5, 15, 16, 22, 21, 14, 20, 24, 8, 30, 33, 45, 38, 42, 43, 46, 49, 36, 31, 32, 13, 3, 19, 25, 39, 18, 28]
 solution : [0, 9, 10, 35]


New level: 5
 pending : [37, 23, 40, 5, 15, 16, 22, 21, 14, 20, 24, 8, 30, 33, 45, 38, 42, 43, 46, 49, 36, 31, 32, 13, 3, 19, 25, 39, 18, 28]
 solution : [0, 9, 10, 35]


Before reduction : 
 pending  : [37, 23, 40, 5, 15, 16, 22, 21, 14, 20, 24, 8, 30, 33, 45, 38, 42, 43, 46, 49, 36, 31, 32, 13, 3, 19, 25, 39, 18, 28]
 solution : [0, 9, 10, 35]

Essensial at level 5 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 67108864), (4, -1), (5, 131072), (6, -1), (7, -1), (8, 524288), (9, -1), (10, -1), (11, -1), (12, -1), (13, 8388608), (14, 4194304), (15, 196608), (16, 65536), (17, -1), (18, 268435456), (19, 134217728), (20, 2097152), (21, 1048576), (22, 32768), (23, 524288), (24, 67108864), (25, 268435456), (26, -1), (27, -1), (28, 536870912), (29, -1), (30, 524288), (31, 1048576), (32, 8192), (33, 8192), (34, -1), (35, 536870912), (36, 67108864), (37, 33554432), (38, 8192), (39, 134217728), (40, 524288), (41, -1), (42, 262144), (43, 262144), (44, -1), (45, 33554432), (46, 8388608), (47, -1), (48, -1), (49, 33554432), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 67108864), (4, -1), (5, 131072), (6, -1), (7, -1), (8, 131072), (9, -1), (10, -1), (11, -1), (12, -1), (13, 8388608), (14, 4194304), (15, 196608), (16, 65536), (17, -1), (18, 268435456), (19, 134217728), (20, 2097152), (21, 1048576), (22, 32768), (23, 524288), (24, 67108864), (25, 8192), (26, -1), (27, -1), (28, 536870912), (29, -1), (30, 131072), (31, 0), (32, 0), (33, 2048), (34, -1), (35, -1), (36, 16777216), (37, 33554432), (38, 2048), (39, 4096), (40, 524288), (41, -1), (42, 65536), (43, 65536), (44, -1), (45, 8388608), (46, 2097152), (47, -1), (48, -1), (49, 8388608), (50, -1), (51, -1), (52, -1)]

Covered at level 5 : {32, 31}

After reduction : 
 pending  : [37, 23, 40, 5, 15, 16, 22, 21, 14, 20, 24, 8, 30, 33, 45, 38, 42, 43, 46, 49, 36, 13, 3, 19, 25, 39, 18, 28]
 solution : [0, 9, 10, 35]


Before reduction : 
 pending  : [37, 23, 40, 5, 15, 16, 22, 21, 14, 20, 24, 8, 30, 33, 45, 38, 42, 43, 46, 49, 36, 13, 3, 19, 25, 39, 18, 28]
 solution : [0, 9, 10, 35]

Essensial at level 5 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 67108864), (4, -1), (5, 131072), (6, -1), (7, -1), (8, 131072), (9, -1), (10, -1), (11, -1), (12, -1), (13, 8388608), (14, 4194304), (15, 196608), (16, 65536), (17, -1), (18, 268435456), (19, 134217728), (20, 2097152), (21, 1048576), (22, 32768), (23, 524288), (24, 67108864), (25, 8192), (26, -1), (27, -1), (28, 536870912), (29, -1), (30, 131072), (31, 0), (32, 0), (33, 2048), (34, -1), (35, -1), (36, 16777216), (37, 33554432), (38, 2048), (39, 4096), (40, 524288), (41, -1), (42, 65536), (43, 65536), (44, -1), (45, 8388608), (46, 2097152), (47, -1), (48, -1), (49, 8388608), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 67108864), (4, -1), (5, 131072), (6, -1), (7, -1), (8, 131072), (9, -1), (10, -1), (11, -1), (12, -1), (13, 8388608), (14, 4194304), (15, 196608), (16, 65536), (17, -1), (18, 268435456), (19, 134217728), (20, 2097152), (21, 1048576), (22, 32768), (23, 524288), (24, 67108864), (25, 8192), (26, -1), (27, -1), (28, 536870912), (29, -1), (30, 131072), (31, -1), (32, -1), (33, 2048), (34, -1), (35, -1), (36, 16777216), (37, 33554432), (38, 2048), (39, 4096), (40, 524288), (41, -1), (42, 65536), (43, 65536), (44, -1), (45, 8388608), (46, 2097152), (47, -1), (48, -1), (49, 8388608), (50, -1), (51, -1), (52, -1)]

Covered at level 5 : set()

After reduction : 
 pending  : [37, 23, 40, 5, 15, 16, 22, 21, 14, 20, 24, 8, 30, 33, 45, 38, 42, 43, 46, 49, 36, 13, 3, 19, 25, 39, 18, 28]
 solution : [0, 9, 10, 35]


Solution : [0, 9, 10, 35] has cost 27.


Before backtrack at level 5
 pending : [37, 23, 40, 5, 15, 16, 22, 21, 14, 20, 24, 8, 30, 33, 45, 38, 42, 43, 46, 49, 36, 13, 3, 19, 25, 39, 18, 28]
 solution : [0, 9, 10, 35]

After backtrack at level 5
 pending : [37, 23, 40, 5, 15, 16, 22, 21, 14, 20, 24, 8, 30, 33, 45, 38, 42, 43, 46, 49, 36, 13, 3, 19, 25, 39, 18, 28, 31, 32]
 solution : [0, 9, 10, 35]


Invert decision for 35 at level 4


New level: 5
 pending : [37, 23, 40, 5, 15, 16, 22, 21, 14, 20, 24, 8, 30, 33, 45, 38, 42, 43, 46, 49, 36, 13, 3, 19, 25, 39, 18, 28, 31, 32]
 solution : [0, 9, 10]


Before reduction : 
 pending  : [37, 23, 40, 5, 15, 16, 22, 21, 14, 20, 24, 8, 30, 33, 45, 38, 42, 43, 46, 49, 36, 13, 3, 19, 25, 39, 18, 28, 31, 32]
 solution : [0, 9, 10]

Essensial at level 5 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 67108864), (4, -1), (5, 131072), (6, -1), (7, -1), (8, 131072), (9, -1), (10, -1), (11, -1), (12, -1), (13, 8388608), (14, 4194304), (15, 196608), (16, 65536), (17, -1), (18, 268435456), (19, 134217728), (20, 2097152), (21, 1048576), (22, 32768), (23, 524288), (24, 67108864), (25, 8192), (26, -1), (27, -1), (28, 536870912), (29, -1), (30, 131072), (31, -1), (32, -1), (33, 2048), (34, -1), (35, -1), (36, 16777216), (37, 33554432), (38, 2048), (39, 4096), (40, 524288), (41, -1), (42, 65536), (43, 65536), (44, -1), (45, 8388608), (46, 2097152), (47, -1), (48, -1), (49, 8388608), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 67108864), (4, -1), (5, 131072), (6, -1), (7, -1), (8, 524288), (9, -1), (10, -1), (11, -1), (12, -1), (13, 8388608), (14, 4194304), (15, 196608), (16, 65536), (17, -1), (18, 268435456), (19, 134217728), (20, 2097152), (21, 1048576), (22, 32768), (23, 524288), (24, 67108864), (25, 268435456), (26, -1), (27, -1), (28, 536870912), (29, -1), (30, 524288), (31, 1048576), (32, 8192), (33, 8192), (34, -1), (35, -1), (36, 67108864), (37, 33554432), (38, 8192), (39, 134217728), (40, 524288), (41, -1), (42, 262144), (43, 262144), (44, -1), (45, 33554432), (46, 8388608), (47, -1), (48, -1), (49, 33554432), (50, -1), (51, -1), (52, -1)]

Covered at level 5 : set()

After reduction : 
 pending  : [37, 23, 40, 5, 15, 16, 22, 21, 14, 20, 24, 8, 30, 33, 45, 38, 42, 43, 46, 49, 36, 13, 3, 19, 25, 39, 18, 28, 31, 32]
 solution : [0, 9, 10]


Solution : [0, 9, 10] has cost 14.


Decide in level 5 among pending : [37, 23, 40, 5, 15, 16, 22, 21, 14, 20, 24, 8, 30, 33, 45, 38, 42, 43, 46, 49, 36, 13, 3, 19, 25, 39, 18, 28, 31, 32]

Coverage : [(0, -1), (1, -1), (2, -1), (3, 67108864), (4, -1), (5, 131072), (6, -1), (7, -1), (8, 524288), (9, -1), (10, -1), (11, -1), (12, -1), (13, 8388608), (14, 4194304), (15, 196608), (16, 65536), (17, -1), (18, 268435456), (19, 134217728), (20, 2097152), (21, 1048576), (22, 32768), (23, 524288), (24, 67108864), (25, 268435456), (26, -1), (27, -1), (28, 536870912), (29, -1), (30, 524288), (31, 1048576), (32, 8192), (33, 8192), (34, -1), (35, -1), (36, 67108864), (37, 33554432), (38, 8192), (39, 134217728), (40, 524288), (41, -1), (42, 262144), (43, 262144), (44, -1), (45, 33554432), (46, 8388608), (47, -1), (48, -1), (49, 33554432), (50, -1), (51, -1), (52, -1)]

Decide 28 with phase True at level 5

After decision at level 5
 pending : [37, 23, 40, 5, 15, 16, 22, 21, 14, 20, 24, 8, 30, 33, 45, 38, 42, 43, 46, 49, 36, 13, 3, 19, 25, 39, 18, 31, 32]
 solution : [0, 9, 10, 28]


New level: 6
 pending : [37, 23, 40, 5, 15, 16, 22, 21, 14, 20, 24, 8, 30, 33, 45, 38, 42, 43, 46, 49, 36, 13, 3, 19, 25, 39, 18, 31, 32]
 solution : [0, 9, 10, 28]


Before reduction : 
 pending  : [37, 23, 40, 5, 15, 16, 22, 21, 14, 20, 24, 8, 30, 33, 45, 38, 42, 43, 46, 49, 36, 13, 3, 19, 25, 39, 18, 31, 32]
 solution : [0, 9, 10, 28]

Essensial at level 6 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 67108864), (4, -1), (5, 131072), (6, -1), (7, -1), (8, 524288), (9, -1), (10, -1), (11, -1), (12, -1), (13, 8388608), (14, 4194304), (15, 196608), (16, 65536), (17, -1), (18, 268435456), (19, 134217728), (20, 2097152), (21, 1048576), (22, 32768), (23, 524288), (24, 67108864), (25, 268435456), (26, -1), (27, -1), (28, 536870912), (29, -1), (30, 524288), (31, 1048576), (32, 8192), (33, 8192), (34, -1), (35, -1), (36, 67108864), (37, 33554432), (38, 8192), (39, 134217728), (40, 524288), (41, -1), (42, 262144), (43, 262144), (44, -1), (45, 33554432), (46, 8388608), (47, -1), (48, -1), (49, 33554432), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 67108864), (4, -1), (5, 0), (6, -1), (7, -1), (8, 131072), (9, -1), (10, -1), (11, -1), (12, -1), (13, 0), (14, 0), (15, 0), (16, 0), (17, -1), (18, 0), (19, 0), (20, 0), (21, 0), (22, 0), (23, 0), (24, 67108864), (25, 268435456), (26, -1), (27, -1), (28, -1), (29, -1), (30, 262144), (31, 1048576), (32, 8192), (33, 4096), (34, -1), (35, -1), (36, 33554432), (37, 1024), (38, 2048), (39, 2048), (40, 0), (41, -1), (42, 65536), (43, 65536), (44, -1), (45, 16777216), (46, 2097152), (47, -1), (48, -1), (49, 8388608), (50, -1), (51, -1), (52, -1)]

Covered at level 6 : {5, 40, 13, 14, 15, 16, 18, 19, 20, 21, 22, 23}

After reduction : 
 pending  : [37, 24, 8, 30, 33, 45, 38, 42, 43, 46, 49, 36, 3, 25, 39, 31, 32]
 solution : [0, 9, 10, 28]


Before reduction : 
 pending  : [37, 24, 8, 30, 33, 45, 38, 42, 43, 46, 49, 36, 3, 25, 39, 31, 32]
 solution : [0, 9, 10, 28]

Essensial at level 6 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 67108864), (4, -1), (5, 0), (6, -1), (7, -1), (8, 131072), (9, -1), (10, -1), (11, -1), (12, -1), (13, 0), (14, 0), (15, 0), (16, 0), (17, -1), (18, 0), (19, 0), (20, 0), (21, 0), (22, 0), (23, 0), (24, 67108864), (25, 268435456), (26, -1), (27, -1), (28, -1), (29, -1), (30, 262144), (31, 1048576), (32, 8192), (33, 4096), (34, -1), (35, -1), (36, 33554432), (37, 1024), (38, 2048), (39, 2048), (40, 0), (41, -1), (42, 65536), (43, 65536), (44, -1), (45, 16777216), (46, 2097152), (47, -1), (48, -1), (49, 8388608), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 67108864), (4, -1), (5, -1), (6, -1), (7, -1), (8, 131072), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, 67108864), (25, 268435456), (26, -1), (27, -1), (28, -1), (29, -1), (30, 262144), (31, 1048576), (32, 8192), (33, 4096), (34, -1), (35, -1), (36, 33554432), (37, 1024), (38, 2048), (39, 2048), (40, -1), (41, -1), (42, 65536), (43, 65536), (44, -1), (45, 16777216), (46, 2097152), (47, -1), (48, -1), (49, 8388608), (50, -1), (51, -1), (52, -1)]

Covered at level 6 : set()

After reduction : 
 pending  : [37, 24, 8, 30, 33, 45, 38, 42, 43, 46, 49, 36, 3, 25, 39, 31, 32]
 solution : [0, 9, 10, 28]


Solution : [0, 9, 10, 28] has cost 18.


Decide in level 6 among pending : [37, 24, 8, 30, 33, 45, 38, 42, 43, 46, 49, 36, 3, 25, 39, 31, 32]

Coverage : [(0, -1), (1, -1), (2, -1), (3, 67108864), (4, -1), (5, -1), (6, -1), (7, -1), (8, 131072), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, 67108864), (25, 268435456), (26, -1), (27, -1), (28, -1), (29, -1), (30, 262144), (31, 1048576), (32, 8192), (33, 4096), (34, -1), (35, -1), (36, 33554432), (37, 1024), (38, 2048), (39, 2048), (40, -1), (41, -1), (42, 65536), (43, 65536), (44, -1), (45, 16777216), (46, 2097152), (47, -1), (48, -1), (49, 8388608), (50, -1), (51, -1), (52, -1)]

Decide 25 with phase True at level 6

After decision at level 6
 pending : [37, 24, 8, 30, 33, 45, 38, 42, 43, 46, 49, 36, 3, 39, 31, 32]
 solution : [0, 9, 10, 28, 25]


New level: 7
 pending : [37, 24, 8, 30, 33, 45, 38, 42, 43, 46, 49, 36, 3, 39, 31, 32]
 solution : [0, 9, 10, 28, 25]


Before reduction : 
 pending  : [37, 24, 8, 30, 33, 45, 38, 42, 43, 46, 49, 36, 3, 39, 31, 32]
 solution : [0, 9, 10, 28, 25]

Essensial at level 7 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 67108864), (4, -1), (5, -1), (6, -1), (7, -1), (8, 131072), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, 67108864), (25, 268435456), (26, -1), (27, -1), (28, -1), (29, -1), (30, 262144), (31, 1048576), (32, 8192), (33, 4096), (34, -1), (35, -1), (36, 33554432), (37, 1024), (38, 2048), (39, 2048), (40, -1), (41, -1), (42, 65536), (43, 65536), (44, -1), (45, 16777216), (46, 2097152), (47, -1), (48, -1), (49, 8388608), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 16777216), (4, -1), (5, -1), (6, -1), (7, -1), (8, 32768), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, 16777216), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, 65536), (31, 0), (32, 0), (33, 1024), (34, -1), (35, -1), (36, 16777216), (37, 512), (38, 512), (39, 0), (40, -1), (41, -1), (42, 16384), (43, 16384), (44, -1), (45, 8388608), (46, 524288), (47, -1), (48, -1), (49, 8388608), (50, -1), (51, -1), (52, -1)]

Covered at level 7 : {32, 31, 39}

After reduction : 
 pending  : [37, 24, 8, 30, 33, 45, 38, 42, 43, 46, 49, 36, 3]
 solution : [0, 9, 10, 28, 25]


Before reduction : 
 pending  : [37, 24, 8, 30, 33, 45, 38, 42, 43, 46, 49, 36, 3]
 solution : [0, 9, 10, 28, 25]

Essensial at level 7 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 16777216), (4, -1), (5, -1), (6, -1), (7, -1), (8, 32768), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, 16777216), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, 65536), (31, 0), (32, 0), (33, 1024), (34, -1), (35, -1), (36, 16777216), (37, 512), (38, 512), (39, 0), (40, -1), (41, -1), (42, 16384), (43, 16384), (44, -1), (45, 8388608), (46, 524288), (47, -1), (48, -1), (49, 8388608), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 16777216), (4, -1), (5, -1), (6, -1), (7, -1), (8, 32768), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, 16777216), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, 65536), (31, -1), (32, -1), (33, 1024), (34, -1), (35, -1), (36, 16777216), (37, 512), (38, 512), (39, -1), (40, -1), (41, -1), (42, 16384), (43, 16384), (44, -1), (45, 8388608), (46, 524288), (47, -1), (48, -1), (49, 8388608), (50, -1), (51, -1), (52, -1)]

Covered at level 7 : set()

After reduction : 
 pending  : [37, 24, 8, 30, 33, 45, 38, 42, 43, 46, 49, 36, 3]
 solution : [0, 9, 10, 28, 25]


Solution : [0, 9, 10, 28, 25] has cost 25.


Decide in level 7 among pending : [37, 24, 8, 30, 33, 45, 38, 42, 43, 46, 49, 36, 3]

Coverage : [(0, -1), (1, -1), (2, -1), (3, 16777216), (4, -1), (5, -1), (6, -1), (7, -1), (8, 32768), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, 16777216), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, 65536), (31, -1), (32, -1), (33, 1024), (34, -1), (35, -1), (36, 16777216), (37, 512), (38, 512), (39, -1), (40, -1), (41, -1), (42, 16384), (43, 16384), (44, -1), (45, 8388608), (46, 524288), (47, -1), (48, -1), (49, 8388608), (50, -1), (51, -1), (52, -1)]

Decide 24 with phase True at level 7

After decision at level 7
 pending : [37, 8, 30, 33, 45, 38, 42, 43, 46, 49, 36, 3]
 solution : [0, 9, 10, 28, 25, 24]


New level: 8
 pending : [37, 8, 30, 33, 45, 38, 42, 43, 46, 49, 36, 3]
 solution : [0, 9, 10, 28, 25, 24]


Before reduction : 
 pending  : [37, 8, 30, 33, 45, 38, 42, 43, 46, 49, 36, 3]
 solution : [0, 9, 10, 28, 25, 24]

Essensial at level 8 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 16777216), (4, -1), (5, -1), (6, -1), (7, -1), (8, 32768), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, 16777216), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, 65536), (31, -1), (32, -1), (33, 1024), (34, -1), (35, -1), (36, 16777216), (37, 512), (38, 512), (39, -1), (40, -1), (41, -1), (42, 16384), (43, 16384), (44, -1), (45, 8388608), (46, 524288), (47, -1), (48, -1), (49, 8388608), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 0), (4, -1), (5, -1), (6, -1), (7, -1), (8, 0), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, 0), (31, -1), (32, -1), (33, 0), (34, -1), (35, -1), (36, 0), (37, 0), (38, 0), (39, -1), (40, -1), (41, -1), (42, 0), (43, 0), (44, -1), (45, 0), (46, 0), (47, -1), (48, -1), (49, 0), (50, -1), (51, -1), (52, -1)]

Covered at level 8 : {33, 3, 36, 37, 38, 8, 42, 43, 45, 46, 49, 30}

After reduction : 
 pending  : []
 solution : [0, 9, 10, 28, 25, 24]


Before reduction : 
 pending  : []
 solution : [0, 9, 10, 28, 25, 24]

Essensial at level 8 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 0), (4, -1), (5, -1), (6, -1), (7, -1), (8, 0), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, 0), (31, -1), (32, -1), (33, 0), (34, -1), (35, -1), (36, 0), (37, 0), (38, 0), (39, -1), (40, -1), (41, -1), (42, 0), (43, 0), (44, -1), (45, 0), (46, 0), (47, -1), (48, -1), (49, 0), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 8 : set()

After reduction : 
 pending  : []
 solution : [0, 9, 10, 28, 25, 24]


Solution : [0, 9, 10, 28, 25, 24] has cost 32.


Before backtrack at level 8
 pending : []
 solution : [0, 9, 10, 28, 25, 24]

After backtrack at level 8
 pending : [37, 8, 30, 33, 45, 38, 42, 43, 46, 49, 36, 3]
 solution : [0, 9, 10, 28, 25, 24]


Invert decision for 24 at level 7


New level: 8
 pending : [37, 8, 30, 33, 45, 38, 42, 43, 46, 49, 36, 3]
 solution : [0, 9, 10, 28, 25]


Before reduction : 
 pending  : [37, 8, 30, 33, 45, 38, 42, 43, 46, 49, 36, 3]
 solution : [0, 9, 10, 28, 25]

Essensial at level 8 : {3}

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, 0), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, 0), (31, -1), (32, -1), (33, 0), (34, -1), (35, -1), (36, 0), (37, 0), (38, 0), (39, -1), (40, -1), (41, -1), (42, 0), (43, 0), (44, -1), (45, 0), (46, 0), (47, -1), (48, -1), (49, 0), (50, -1), (51, -1), (52, -1)]

Covered at level 8 : {33, 36, 37, 38, 8, 42, 43, 45, 46, 49, 30}

After reduction : 
 pending  : []
 solution : [0, 9, 10, 28, 25, 3]


Before reduction : 
 pending  : []
 solution : [0, 9, 10, 28, 25, 3]

Essensial at level 8 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, 0), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, 0), (31, -1), (32, -1), (33, 0), (34, -1), (35, -1), (36, 0), (37, 0), (38, 0), (39, -1), (40, -1), (41, -1), (42, 0), (43, 0), (44, -1), (45, 0), (46, 0), (47, -1), (48, -1), (49, 0), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 8 : set()

After reduction : 
 pending  : []
 solution : [0, 9, 10, 28, 25, 3]


Solution : [0, 9, 10, 28, 25, 3] has cost 29.


Before backtrack at level 8
 pending : []
 solution : [0, 9, 10, 28, 25, 3]

After backtrack at level 8
 pending : [3, 37, 8, 30, 33, 45, 38, 42, 43, 46, 49, 36]
 solution : [0, 9, 10, 28, 25]


Before backtrack at level 7
 pending : [3, 37, 8, 30, 33, 45, 38, 42, 43, 46, 49, 36]
 solution : [0, 9, 10, 28, 25]

After backtrack at level 7
 pending : [3, 37, 8, 30, 33, 45, 38, 42, 43, 46, 49, 36, 39, 31, 32, 24]
 solution : [0, 9, 10, 28, 25]


Invert decision for 25 at level 6


New level: 7
 pending : [3, 37, 8, 30, 33, 45, 38, 42, 43, 46, 49, 36, 39, 31, 32, 24]
 solution : [0, 9, 10, 28]


Before reduction : 
 pending  : [3, 37, 8, 30, 33, 45, 38, 42, 43, 46, 49, 36, 39, 31, 32, 24]
 solution : [0, 9, 10, 28]

Essensial at level 7 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 67108864), (4, -1), (5, -1), (6, -1), (7, -1), (8, 131072), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, 67108864), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, 262144), (31, 1048576), (32, 8192), (33, 4096), (34, -1), (35, -1), (36, 33554432), (37, 1024), (38, 2048), (39, 2048), (40, -1), (41, -1), (42, 65536), (43, 65536), (44, -1), (45, 16777216), (46, 2097152), (47, -1), (48, -1), (49, 8388608), (50, -1), (51, -1), (52, -1)]

Covered at level 7 : set()

After reduction : 
 pending  : [3, 37, 8, 30, 33, 45, 38, 42, 43, 46, 49, 36, 39, 31, 32, 24]
 solution : [0, 9, 10, 28]


Solution : [0, 9, 10, 28] has cost 18.


Decide in level 7 among pending : [3, 37, 8, 30, 33, 45, 38, 42, 43, 46, 49, 36, 39, 31, 32, 24]

Coverage : [(0, -1), (1, -1), (2, -1), (3, 67108864), (4, -1), (5, -1), (6, -1), (7, -1), (8, 131072), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, 67108864), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, 262144), (31, 1048576), (32, 8192), (33, 4096), (34, -1), (35, -1), (36, 33554432), (37, 1024), (38, 2048), (39, 2048), (40, -1), (41, -1), (42, 65536), (43, 65536), (44, -1), (45, 16777216), (46, 2097152), (47, -1), (48, -1), (49, 8388608), (50, -1), (51, -1), (52, -1)]

Decide 3 with phase True at level 7

After decision at level 7
 pending : [37, 8, 30, 33, 45, 38, 42, 43, 46, 49, 36, 39, 31, 32, 24]
 solution : [0, 9, 10, 28, 3]


New level: 8
 pending : [37, 8, 30, 33, 45, 38, 42, 43, 46, 49, 36, 39, 31, 32, 24]
 solution : [0, 9, 10, 28, 3]


Before reduction : 
 pending  : [37, 8, 30, 33, 45, 38, 42, 43, 46, 49, 36, 39, 31, 32, 24]
 solution : [0, 9, 10, 28, 3]

Essensial at level 8 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 67108864), (4, -1), (5, -1), (6, -1), (7, -1), (8, 131072), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, 67108864), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, 262144), (31, 1048576), (32, 8192), (33, 4096), (34, -1), (35, -1), (36, 33554432), (37, 1024), (38, 2048), (39, 2048), (40, -1), (41, -1), (42, 65536), (43, 65536), (44, -1), (45, 16777216), (46, 2097152), (47, -1), (48, -1), (49, 8388608), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, 0), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, 0), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, 0), (31, 0), (32, 0), (33, 0), (34, -1), (35, -1), (36, 0), (37, 0), (38, 0), (39, 0), (40, -1), (41, -1), (42, 0), (43, 0), (44, -1), (45, 0), (46, 0), (47, -1), (48, -1), (49, 0), (50, -1), (51, -1), (52, -1)]

Covered at level 8 : {32, 33, 36, 37, 38, 39, 8, 42, 43, 45, 46, 49, 24, 30, 31}

After reduction : 
 pending  : []
 solution : [0, 9, 10, 28, 3]


Before reduction : 
 pending  : []
 solution : [0, 9, 10, 28, 3]

Essensial at level 8 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, 0), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, 0), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, 0), (31, 0), (32, 0), (33, 0), (34, -1), (35, -1), (36, 0), (37, 0), (38, 0), (39, 0), (40, -1), (41, -1), (42, 0), (43, 0), (44, -1), (45, 0), (46, 0), (47, -1), (48, -1), (49, 0), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 8 : set()

After reduction : 
 pending  : []
 solution : [0, 9, 10, 28, 3]


Solution : [0, 9, 10, 28, 3] has cost 22.


Before backtrack at level 8
 pending : []
 solution : [0, 9, 10, 28, 3]

After backtrack at level 8
 pending : [37, 8, 30, 33, 45, 38, 42, 43, 46, 49, 36, 39, 31, 32, 24]
 solution : [0, 9, 10, 28, 3]


Invert decision for 3 at level 7


New level: 8
 pending : [37, 8, 30, 33, 45, 38, 42, 43, 46, 49, 36, 39, 31, 32, 24]
 solution : [0, 9, 10, 28]


Before reduction : 
 pending  : [37, 8, 30, 33, 45, 38, 42, 43, 46, 49, 36, 39, 31, 32, 24]
 solution : [0, 9, 10, 28]

Essensial at level 8 : {24}

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, 0), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, 0), (31, 0), (32, 0), (33, 0), (34, -1), (35, -1), (36, 0), (37, 0), (38, 0), (39, 0), (40, -1), (41, -1), (42, 0), (43, 0), (44, -1), (45, 0), (46, 0), (47, -1), (48, -1), (49, 0), (50, -1), (51, -1), (52, -1)]

Covered at level 8 : {32, 33, 36, 37, 38, 39, 8, 42, 43, 45, 46, 49, 30, 31}

After reduction : 
 pending  : []
 solution : [0, 9, 10, 28, 24]


Before reduction : 
 pending  : []
 solution : [0, 9, 10, 28, 24]

Essensial at level 8 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, 0), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, 0), (31, 0), (32, 0), (33, 0), (34, -1), (35, -1), (36, 0), (37, 0), (38, 0), (39, 0), (40, -1), (41, -1), (42, 0), (43, 0), (44, -1), (45, 0), (46, 0), (47, -1), (48, -1), (49, 0), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 8 : set()

After reduction : 
 pending  : []
 solution : [0, 9, 10, 28, 24]


Solution : [0, 9, 10, 28, 24] has cost 25.


Before backtrack at level 8
 pending : []
 solution : [0, 9, 10, 28, 24]

After backtrack at level 8
 pending : [24, 37, 8, 30, 33, 45, 38, 42, 43, 46, 49, 36, 39, 31, 32]
 solution : [0, 9, 10, 28]


Before backtrack at level 7
 pending : [24, 37, 8, 30, 33, 45, 38, 42, 43, 46, 49, 36, 39, 31, 32]
 solution : [0, 9, 10, 28]

After backtrack at level 7
 pending : [24, 37, 8, 30, 33, 45, 38, 42, 43, 46, 49, 36, 39, 31, 32, 3]
 solution : [0, 9, 10, 28]


Before backtrack at level 6
 pending : [24, 37, 8, 30, 33, 45, 38, 42, 43, 46, 49, 36, 39, 31, 32, 3]
 solution : [0, 9, 10, 28]

After backtrack at level 6
 pending : [24, 37, 8, 30, 33, 45, 38, 42, 43, 46, 49, 36, 39, 31, 32, 3, 23, 40, 5, 15, 16, 22, 21, 14, 20, 13, 19, 18, 25]
 solution : [0, 9, 10, 28]


Invert decision for 28 at level 5


New level: 6
 pending : [24, 37, 8, 30, 33, 45, 38, 42, 43, 46, 49, 36, 39, 31, 32, 3, 23, 40, 5, 15, 16, 22, 21, 14, 20, 13, 19, 18, 25]
 solution : [0, 9, 10]


Before reduction : 
 pending  : [24, 37, 8, 30, 33, 45, 38, 42, 43, 46, 49, 36, 39, 31, 32, 3, 23, 40, 5, 15, 16, 22, 21, 14, 20, 13, 19, 18, 25]
 solution : [0, 9, 10]

Essensial at level 6 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 67108864), (4, -1), (5, 131072), (6, -1), (7, -1), (8, 524288), (9, -1), (10, -1), (11, -1), (12, -1), (13, 8388608), (14, 4194304), (15, 196608), (16, 65536), (17, -1), (18, 268435456), (19, 134217728), (20, 2097152), (21, 1048576), (22, 32768), (23, 524288), (24, 67108864), (25, 268435456), (26, -1), (27, -1), (28, -1), (29, -1), (30, 524288), (31, 1048576), (32, 8192), (33, 8192), (34, -1), (35, -1), (36, 67108864), (37, 33554432), (38, 8192), (39, 134217728), (40, 524288), (41, -1), (42, 262144), (43, 262144), (44, -1), (45, 33554432), (46, 8388608), (47, -1), (48, -1), (49, 33554432), (50, -1), (51, -1), (52, -1)]

Covered at level 6 : set()

After reduction : 
 pending  : [24, 37, 8, 30, 33, 45, 38, 42, 43, 46, 49, 36, 39, 31, 32, 3, 23, 40, 5, 15, 16, 22, 21, 14, 20, 13, 19, 18, 25]
 solution : [0, 9, 10]


Solution : [0, 9, 10] has cost 14.


Decide in level 6 among pending : [24, 37, 8, 30, 33, 45, 38, 42, 43, 46, 49, 36, 39, 31, 32, 3, 23, 40, 5, 15, 16, 22, 21, 14, 20, 13, 19, 18, 25]

Coverage : [(0, -1), (1, -1), (2, -1), (3, 67108864), (4, -1), (5, 131072), (6, -1), (7, -1), (8, 524288), (9, -1), (10, -1), (11, -1), (12, -1), (13, 8388608), (14, 4194304), (15, 196608), (16, 65536), (17, -1), (18, 268435456), (19, 134217728), (20, 2097152), (21, 1048576), (22, 32768), (23, 524288), (24, 67108864), (25, 268435456), (26, -1), (27, -1), (28, -1), (29, -1), (30, 524288), (31, 1048576), (32, 8192), (33, 8192), (34, -1), (35, -1), (36, 67108864), (37, 33554432), (38, 8192), (39, 134217728), (40, 524288), (41, -1), (42, 262144), (43, 262144), (44, -1), (45, 33554432), (46, 8388608), (47, -1), (48, -1), (49, 33554432), (50, -1), (51, -1), (52, -1)]

Decide 18 with phase True at level 6

After decision at level 6
 pending : [24, 37, 8, 30, 33, 45, 38, 42, 43, 46, 49, 36, 39, 31, 32, 3, 23, 40, 5, 15, 16, 22, 21, 14, 20, 13, 19, 25]
 solution : [0, 9, 10, 18]


New level: 7
 pending : [24, 37, 8, 30, 33, 45, 38, 42, 43, 46, 49, 36, 39, 31, 32, 3, 23, 40, 5, 15, 16, 22, 21, 14, 20, 13, 19, 25]
 solution : [0, 9, 10, 18]


Before reduction : 
 pending  : [24, 37, 8, 30, 33, 45, 38, 42, 43, 46, 49, 36, 39, 31, 32, 3, 23, 40, 5, 15, 16, 22, 21, 14, 20, 13, 19, 25]
 solution : [0, 9, 10, 18]

Essensial at level 7 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 67108864), (4, -1), (5, 131072), (6, -1), (7, -1), (8, 524288), (9, -1), (10, -1), (11, -1), (12, -1), (13, 8388608), (14, 4194304), (15, 196608), (16, 65536), (17, -1), (18, 268435456), (19, 134217728), (20, 2097152), (21, 1048576), (22, 32768), (23, 524288), (24, 67108864), (25, 268435456), (26, -1), (27, -1), (28, -1), (29, -1), (30, 524288), (31, 1048576), (32, 8192), (33, 8192), (34, -1), (35, -1), (36, 67108864), (37, 33554432), (38, 8192), (39, 134217728), (40, 524288), (41, -1), (42, 262144), (43, 262144), (44, -1), (45, 33554432), (46, 8388608), (47, -1), (48, -1), (49, 33554432), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 67108864), (4, -1), (5, 0), (6, -1), (7, -1), (8, 131072), (9, -1), (10, -1), (11, -1), (12, -1), (13, 0), (14, 0), (15, 0), (16, 0), (17, -1), (18, -1), (19, 0), (20, 0), (21, 0), (22, 0), (23, 0), (24, 67108864), (25, 268435456), (26, -1), (27, -1), (28, -1), (29, -1), (30, 262144), (31, 1048576), (32, 8192), (33, 4096), (34, -1), (35, -1), (36, 33554432), (37, 1024), (38, 2048), (39, 2048), (40, 0), (41, -1), (42, 65536), (43, 65536), (44, -1), (45, 16777216), (46, 2097152), (47, -1), (48, -1), (49, 33554432), (50, -1), (51, -1), (52, -1)]

Covered at level 7 : {5, 40, 13, 14, 15, 16, 19, 20, 21, 22, 23}

After reduction : 
 pending  : [24, 37, 8, 30, 33, 45, 38, 42, 43, 46, 49, 36, 39, 31, 32, 3, 25]
 solution : [0, 9, 10, 18]


Before reduction : 
 pending  : [24, 37, 8, 30, 33, 45, 38, 42, 43, 46, 49, 36, 39, 31, 32, 3, 25]
 solution : [0, 9, 10, 18]

Essensial at level 7 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 67108864), (4, -1), (5, 0), (6, -1), (7, -1), (8, 131072), (9, -1), (10, -1), (11, -1), (12, -1), (13, 0), (14, 0), (15, 0), (16, 0), (17, -1), (18, -1), (19, 0), (20, 0), (21, 0), (22, 0), (23, 0), (24, 67108864), (25, 268435456), (26, -1), (27, -1), (28, -1), (29, -1), (30, 262144), (31, 1048576), (32, 8192), (33, 4096), (34, -1), (35, -1), (36, 33554432), (37, 1024), (38, 2048), (39, 2048), (40, 0), (41, -1), (42, 65536), (43, 65536), (44, -1), (45, 16777216), (46, 2097152), (47, -1), (48, -1), (49, 33554432), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 67108864), (4, -1), (5, -1), (6, -1), (7, -1), (8, 131072), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, 67108864), (25, 268435456), (26, -1), (27, -1), (28, -1), (29, -1), (30, 262144), (31, 1048576), (32, 8192), (33, 4096), (34, -1), (35, -1), (36, 33554432), (37, 1024), (38, 2048), (39, 2048), (40, -1), (41, -1), (42, 65536), (43, 65536), (44, -1), (45, 16777216), (46, 2097152), (47, -1), (48, -1), (49, 33554432), (50, -1), (51, -1), (52, -1)]

Covered at level 7 : set()

After reduction : 
 pending  : [24, 37, 8, 30, 33, 45, 38, 42, 43, 46, 49, 36, 39, 31, 32, 3, 25]
 solution : [0, 9, 10, 18]


Solution : [0, 9, 10, 18] has cost 21.


Decide in level 7 among pending : [24, 37, 8, 30, 33, 45, 38, 42, 43, 46, 49, 36, 39, 31, 32, 3, 25]

Coverage : [(0, -1), (1, -1), (2, -1), (3, 67108864), (4, -1), (5, -1), (6, -1), (7, -1), (8, 131072), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, 67108864), (25, 268435456), (26, -1), (27, -1), (28, -1), (29, -1), (30, 262144), (31, 1048576), (32, 8192), (33, 4096), (34, -1), (35, -1), (36, 33554432), (37, 1024), (38, 2048), (39, 2048), (40, -1), (41, -1), (42, 65536), (43, 65536), (44, -1), (45, 16777216), (46, 2097152), (47, -1), (48, -1), (49, 33554432), (50, -1), (51, -1), (52, -1)]

Decide 25 with phase True at level 7

After decision at level 7
 pending : [24, 37, 8, 30, 33, 45, 38, 42, 43, 46, 49, 36, 39, 31, 32, 3]
 solution : [0, 9, 10, 18, 25]


New level: 8
 pending : [24, 37, 8, 30, 33, 45, 38, 42, 43, 46, 49, 36, 39, 31, 32, 3]
 solution : [0, 9, 10, 18, 25]


Before reduction : 
 pending  : [24, 37, 8, 30, 33, 45, 38, 42, 43, 46, 49, 36, 39, 31, 32, 3]
 solution : [0, 9, 10, 18, 25]

Essensial at level 8 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 67108864), (4, -1), (5, -1), (6, -1), (7, -1), (8, 131072), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, 67108864), (25, 268435456), (26, -1), (27, -1), (28, -1), (29, -1), (30, 262144), (31, 1048576), (32, 8192), (33, 4096), (34, -1), (35, -1), (36, 33554432), (37, 1024), (38, 2048), (39, 2048), (40, -1), (41, -1), (42, 65536), (43, 65536), (44, -1), (45, 16777216), (46, 2097152), (47, -1), (48, -1), (49, 33554432), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 16777216), (4, -1), (5, -1), (6, -1), (7, -1), (8, 32768), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, 16777216), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, 65536), (31, 0), (32, 0), (33, 1024), (34, -1), (35, -1), (36, 16777216), (37, 512), (38, 512), (39, 0), (40, -1), (41, -1), (42, 16384), (43, 16384), (44, -1), (45, 8388608), (46, 524288), (47, -1), (48, -1), (49, 33554432), (50, -1), (51, -1), (52, -1)]

Covered at level 8 : {32, 31, 39}

After reduction : 
 pending  : [24, 37, 8, 30, 33, 45, 38, 42, 43, 46, 49, 36, 3]
 solution : [0, 9, 10, 18, 25]


Before reduction : 
 pending  : [24, 37, 8, 30, 33, 45, 38, 42, 43, 46, 49, 36, 3]
 solution : [0, 9, 10, 18, 25]

Essensial at level 8 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 16777216), (4, -1), (5, -1), (6, -1), (7, -1), (8, 32768), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, 16777216), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, 65536), (31, 0), (32, 0), (33, 1024), (34, -1), (35, -1), (36, 16777216), (37, 512), (38, 512), (39, 0), (40, -1), (41, -1), (42, 16384), (43, 16384), (44, -1), (45, 8388608), (46, 524288), (47, -1), (48, -1), (49, 33554432), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 16777216), (4, -1), (5, -1), (6, -1), (7, -1), (8, 32768), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, 16777216), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, 65536), (31, -1), (32, -1), (33, 1024), (34, -1), (35, -1), (36, 16777216), (37, 512), (38, 512), (39, -1), (40, -1), (41, -1), (42, 16384), (43, 16384), (44, -1), (45, 8388608), (46, 524288), (47, -1), (48, -1), (49, 33554432), (50, -1), (51, -1), (52, -1)]

Covered at level 8 : set()

After reduction : 
 pending  : [24, 37, 8, 30, 33, 45, 38, 42, 43, 46, 49, 36, 3]
 solution : [0, 9, 10, 18, 25]


Solution : [0, 9, 10, 18, 25] has cost 28.


Before backtrack at level 8
 pending : [24, 37, 8, 30, 33, 45, 38, 42, 43, 46, 49, 36, 3]
 solution : [0, 9, 10, 18, 25]

After backtrack at level 8
 pending : [24, 37, 8, 30, 33, 45, 38, 42, 43, 46, 49, 36, 3, 39, 31, 32]
 solution : [0, 9, 10, 18, 25]


Invert decision for 25 at level 7


New level: 8
 pending : [24, 37, 8, 30, 33, 45, 38, 42, 43, 46, 49, 36, 3, 39, 31, 32]
 solution : [0, 9, 10, 18]


Before reduction : 
 pending  : [24, 37, 8, 30, 33, 45, 38, 42, 43, 46, 49, 36, 3, 39, 31, 32]
 solution : [0, 9, 10, 18]

Essensial at level 8 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 16777216), (4, -1), (5, -1), (6, -1), (7, -1), (8, 32768), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, 16777216), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, 65536), (31, -1), (32, -1), (33, 1024), (34, -1), (35, -1), (36, 16777216), (37, 512), (38, 512), (39, -1), (40, -1), (41, -1), (42, 16384), (43, 16384), (44, -1), (45, 8388608), (46, 524288), (47, -1), (48, -1), (49, 33554432), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 67108864), (4, -1), (5, -1), (6, -1), (7, -1), (8, 131072), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, 67108864), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, 262144), (31, 1048576), (32, 8192), (33, 4096), (34, -1), (35, -1), (36, 33554432), (37, 1024), (38, 2048), (39, 2048), (40, -1), (41, -1), (42, 65536), (43, 65536), (44, -1), (45, 16777216), (46, 2097152), (47, -1), (48, -1), (49, 33554432), (50, -1), (51, -1), (52, -1)]

Covered at level 8 : set()

After reduction : 
 pending  : [24, 37, 8, 30, 33, 45, 38, 42, 43, 46, 49, 36, 3, 39, 31, 32]
 solution : [0, 9, 10, 18]


Solution : [0, 9, 10, 18] has cost 21.


Decide in level 8 among pending : [24, 37, 8, 30, 33, 45, 38, 42, 43, 46, 49, 36, 3, 39, 31, 32]

Coverage : [(0, -1), (1, -1), (2, -1), (3, 67108864), (4, -1), (5, -1), (6, -1), (7, -1), (8, 131072), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, 67108864), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, 262144), (31, 1048576), (32, 8192), (33, 4096), (34, -1), (35, -1), (36, 33554432), (37, 1024), (38, 2048), (39, 2048), (40, -1), (41, -1), (42, 65536), (43, 65536), (44, -1), (45, 16777216), (46, 2097152), (47, -1), (48, -1), (49, 33554432), (50, -1), (51, -1), (52, -1)]

Decide 24 with phase True at level 8

After decision at level 8
 pending : [37, 8, 30, 33, 45, 38, 42, 43, 46, 49, 36, 3, 39, 31, 32]
 solution : [0, 9, 10, 18, 24]


New level: 9
 pending : [37, 8, 30, 33, 45, 38, 42, 43, 46, 49, 36, 3, 39, 31, 32]
 solution : [0, 9, 10, 18, 24]


Before reduction : 
 pending  : [37, 8, 30, 33, 45, 38, 42, 43, 46, 49, 36, 3, 39, 31, 32]
 solution : [0, 9, 10, 18, 24]

Essensial at level 9 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 67108864), (4, -1), (5, -1), (6, -1), (7, -1), (8, 131072), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, 67108864), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, 262144), (31, 1048576), (32, 8192), (33, 4096), (34, -1), (35, -1), (36, 33554432), (37, 1024), (38, 2048), (39, 2048), (40, -1), (41, -1), (42, 65536), (43, 65536), (44, -1), (45, 16777216), (46, 2097152), (47, -1), (48, -1), (49, 33554432), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 0), (4, -1), (5, -1), (6, -1), (7, -1), (8, 0), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, 0), (31, 0), (32, 0), (33, 0), (34, -1), (35, -1), (36, 0), (37, 0), (38, 0), (39, 0), (40, -1), (41, -1), (42, 0), (43, 0), (44, -1), (45, 0), (46, 0), (47, -1), (48, -1), (49, 0), (50, -1), (51, -1), (52, -1)]

Covered at level 9 : {32, 33, 3, 36, 37, 38, 39, 8, 42, 43, 45, 46, 49, 30, 31}

After reduction : 
 pending  : []
 solution : [0, 9, 10, 18, 24]


Before reduction : 
 pending  : []
 solution : [0, 9, 10, 18, 24]

Essensial at level 9 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 0), (4, -1), (5, -1), (6, -1), (7, -1), (8, 0), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, 0), (31, 0), (32, 0), (33, 0), (34, -1), (35, -1), (36, 0), (37, 0), (38, 0), (39, 0), (40, -1), (41, -1), (42, 0), (43, 0), (44, -1), (45, 0), (46, 0), (47, -1), (48, -1), (49, 0), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 9 : set()

After reduction : 
 pending  : []
 solution : [0, 9, 10, 18, 24]


Solution : [0, 9, 10, 18, 24] has cost 28.


Before backtrack at level 9
 pending : []
 solution : [0, 9, 10, 18, 24]

After backtrack at level 9
 pending : [37, 8, 30, 33, 45, 38, 42, 43, 46, 49, 36, 3, 39, 31, 32]
 solution : [0, 9, 10, 18, 24]


Invert decision for 24 at level 8


New level: 9
 pending : [37, 8, 30, 33, 45, 38, 42, 43, 46, 49, 36, 3, 39, 31, 32]
 solution : [0, 9, 10, 18]


Before reduction : 
 pending  : [37, 8, 30, 33, 45, 38, 42, 43, 46, 49, 36, 3, 39, 31, 32]
 solution : [0, 9, 10, 18]

Essensial at level 9 : {3}

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, 0), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, 0), (31, 0), (32, 0), (33, 0), (34, -1), (35, -1), (36, 0), (37, 0), (38, 0), (39, 0), (40, -1), (41, -1), (42, 0), (43, 0), (44, -1), (45, 0), (46, 0), (47, -1), (48, -1), (49, 0), (50, -1), (51, -1), (52, -1)]

Covered at level 9 : {32, 33, 36, 37, 38, 39, 8, 42, 43, 45, 46, 49, 30, 31}

After reduction : 
 pending  : []
 solution : [0, 9, 10, 18, 3]


Before reduction : 
 pending  : []
 solution : [0, 9, 10, 18, 3]

Essensial at level 9 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, 0), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, 0), (31, 0), (32, 0), (33, 0), (34, -1), (35, -1), (36, 0), (37, 0), (38, 0), (39, 0), (40, -1), (41, -1), (42, 0), (43, 0), (44, -1), (45, 0), (46, 0), (47, -1), (48, -1), (49, 0), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 9 : set()

After reduction : 
 pending  : []
 solution : [0, 9, 10, 18, 3]


Solution : [0, 9, 10, 18, 3] has cost 25.


Before backtrack at level 9
 pending : []
 solution : [0, 9, 10, 18, 3]

After backtrack at level 9
 pending : [3, 37, 8, 30, 33, 45, 38, 42, 43, 46, 49, 36, 39, 31, 32]
 solution : [0, 9, 10, 18]


Before backtrack at level 8
 pending : [3, 37, 8, 30, 33, 45, 38, 42, 43, 46, 49, 36, 39, 31, 32]
 solution : [0, 9, 10, 18]

After backtrack at level 8
 pending : [3, 37, 8, 30, 33, 45, 38, 42, 43, 46, 49, 36, 39, 31, 32, 24]
 solution : [0, 9, 10, 18]


Before backtrack at level 7
 pending : [3, 37, 8, 30, 33, 45, 38, 42, 43, 46, 49, 36, 39, 31, 32, 24]
 solution : [0, 9, 10, 18]

After backtrack at level 7
 pending : [3, 37, 8, 30, 33, 45, 38, 42, 43, 46, 49, 36, 39, 31, 32, 24, 23, 40, 5, 15, 16, 22, 21, 14, 20, 13, 19, 25]
 solution : [0, 9, 10, 18]


Invert decision for 18 at level 6


New level: 7
 pending : [3, 37, 8, 30, 33, 45, 38, 42, 43, 46, 49, 36, 39, 31, 32, 24, 23, 40, 5, 15, 16, 22, 21, 14, 20, 13, 19, 25]
 solution : [0, 9, 10]


Before reduction : 
 pending  : [3, 37, 8, 30, 33, 45, 38, 42, 43, 46, 49, 36, 39, 31, 32, 24, 23, 40, 5, 15, 16, 22, 21, 14, 20, 13, 19, 25]
 solution : [0, 9, 10]

Essensial at level 7 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 67108864), (4, -1), (5, 131072), (6, -1), (7, -1), (8, 524288), (9, -1), (10, -1), (11, -1), (12, -1), (13, 8388608), (14, 4194304), (15, 196608), (16, 65536), (17, -1), (18, -1), (19, 134217728), (20, 2097152), (21, 1048576), (22, 32768), (23, 524288), (24, 67108864), (25, 268435456), (26, -1), (27, -1), (28, -1), (29, -1), (30, 524288), (31, 1048576), (32, 8192), (33, 8192), (34, -1), (35, -1), (36, 67108864), (37, 33554432), (38, 8192), (39, 134217728), (40, 524288), (41, -1), (42, 262144), (43, 262144), (44, -1), (45, 33554432), (46, 8388608), (47, -1), (48, -1), (49, 33554432), (50, -1), (51, -1), (52, -1)]

Covered at level 7 : set()

After reduction : 
 pending  : [3, 37, 8, 30, 33, 45, 38, 42, 43, 46, 49, 36, 39, 31, 32, 24, 23, 40, 5, 15, 16, 22, 21, 14, 20, 13, 19, 25]
 solution : [0, 9, 10]


Solution : [0, 9, 10] has cost 14.


Decide in level 7 among pending : [3, 37, 8, 30, 33, 45, 38, 42, 43, 46, 49, 36, 39, 31, 32, 24, 23, 40, 5, 15, 16, 22, 21, 14, 20, 13, 19, 25]

Coverage : [(0, -1), (1, -1), (2, -1), (3, 67108864), (4, -1), (5, 131072), (6, -1), (7, -1), (8, 524288), (9, -1), (10, -1), (11, -1), (12, -1), (13, 8388608), (14, 4194304), (15, 196608), (16, 65536), (17, -1), (18, -1), (19, 134217728), (20, 2097152), (21, 1048576), (22, 32768), (23, 524288), (24, 67108864), (25, 268435456), (26, -1), (27, -1), (28, -1), (29, -1), (30, 524288), (31, 1048576), (32, 8192), (33, 8192), (34, -1), (35, -1), (36, 67108864), (37, 33554432), (38, 8192), (39, 134217728), (40, 524288), (41, -1), (42, 262144), (43, 262144), (44, -1), (45, 33554432), (46, 8388608), (47, -1), (48, -1), (49, 33554432), (50, -1), (51, -1), (52, -1)]

Decide 25 with phase True at level 7

After decision at level 7
 pending : [3, 37, 8, 30, 33, 45, 38, 42, 43, 46, 49, 36, 39, 31, 32, 24, 23, 40, 5, 15, 16, 22, 21, 14, 20, 13, 19]
 solution : [0, 9, 10, 25]


New level: 8
 pending : [3, 37, 8, 30, 33, 45, 38, 42, 43, 46, 49, 36, 39, 31, 32, 24, 23, 40, 5, 15, 16, 22, 21, 14, 20, 13, 19]
 solution : [0, 9, 10, 25]


Before reduction : 
 pending  : [3, 37, 8, 30, 33, 45, 38, 42, 43, 46, 49, 36, 39, 31, 32, 24, 23, 40, 5, 15, 16, 22, 21, 14, 20, 13, 19]
 solution : [0, 9, 10, 25]

Essensial at level 8 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 67108864), (4, -1), (5, 131072), (6, -1), (7, -1), (8, 524288), (9, -1), (10, -1), (11, -1), (12, -1), (13, 8388608), (14, 4194304), (15, 196608), (16, 65536), (17, -1), (18, -1), (19, 134217728), (20, 2097152), (21, 1048576), (22, 32768), (23, 524288), (24, 67108864), (25, 268435456), (26, -1), (27, -1), (28, -1), (29, -1), (30, 524288), (31, 1048576), (32, 8192), (33, 8192), (34, -1), (35, -1), (36, 67108864), (37, 33554432), (38, 8192), (39, 134217728), (40, 524288), (41, -1), (42, 262144), (43, 262144), (44, -1), (45, 33554432), (46, 8388608), (47, -1), (48, -1), (49, 33554432), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 16777216), (4, -1), (5, 131072), (6, -1), (7, -1), (8, 131072), (9, -1), (10, -1), (11, -1), (12, -1), (13, 8388608), (14, 4194304), (15, 196608), (16, 65536), (17, -1), (18, -1), (19, 134217728), (20, 2097152), (21, 1048576), (22, 32768), (23, 524288), (24, 16777216), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, 131072), (31, 0), (32, 0), (33, 2048), (34, -1), (35, -1), (36, 33554432), (37, 33554432), (38, 2048), (39, 512), (40, 524288), (41, -1), (42, 65536), (43, 65536), (44, -1), (45, 16777216), (46, 2097152), (47, -1), (48, -1), (49, 33554432), (50, -1), (51, -1), (52, -1)]

Covered at level 8 : {32, 31}

After reduction : 
 pending  : [3, 37, 8, 30, 33, 45, 38, 42, 43, 46, 49, 36, 39, 24, 23, 40, 5, 15, 16, 22, 21, 14, 20, 13, 19]
 solution : [0, 9, 10, 25]


Before reduction : 
 pending  : [3, 37, 8, 30, 33, 45, 38, 42, 43, 46, 49, 36, 39, 24, 23, 40, 5, 15, 16, 22, 21, 14, 20, 13, 19]
 solution : [0, 9, 10, 25]

Essensial at level 8 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 16777216), (4, -1), (5, 131072), (6, -1), (7, -1), (8, 131072), (9, -1), (10, -1), (11, -1), (12, -1), (13, 8388608), (14, 4194304), (15, 196608), (16, 65536), (17, -1), (18, -1), (19, 134217728), (20, 2097152), (21, 1048576), (22, 32768), (23, 524288), (24, 16777216), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, 131072), (31, 0), (32, 0), (33, 2048), (34, -1), (35, -1), (36, 33554432), (37, 33554432), (38, 2048), (39, 512), (40, 524288), (41, -1), (42, 65536), (43, 65536), (44, -1), (45, 16777216), (46, 2097152), (47, -1), (48, -1), (49, 33554432), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 16777216), (4, -1), (5, 131072), (6, -1), (7, -1), (8, 131072), (9, -1), (10, -1), (11, -1), (12, -1), (13, 8388608), (14, 4194304), (15, 196608), (16, 65536), (17, -1), (18, -1), (19, 134217728), (20, 2097152), (21, 1048576), (22, 32768), (23, 524288), (24, 16777216), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, 131072), (31, -1), (32, -1), (33, 2048), (34, -1), (35, -1), (36, 33554432), (37, 33554432), (38, 2048), (39, 512), (40, 524288), (41, -1), (42, 65536), (43, 65536), (44, -1), (45, 16777216), (46, 2097152), (47, -1), (48, -1), (49, 33554432), (50, -1), (51, -1), (52, -1)]

Covered at level 8 : set()

After reduction : 
 pending  : [3, 37, 8, 30, 33, 45, 38, 42, 43, 46, 49, 36, 39, 24, 23, 40, 5, 15, 16, 22, 21, 14, 20, 13, 19]
 solution : [0, 9, 10, 25]


Solution : [0, 9, 10, 25] has cost 21.


Decide in level 8 among pending : [3, 37, 8, 30, 33, 45, 38, 42, 43, 46, 49, 36, 39, 24, 23, 40, 5, 15, 16, 22, 21, 14, 20, 13, 19]

Coverage : [(0, -1), (1, -1), (2, -1), (3, 16777216), (4, -1), (5, 131072), (6, -1), (7, -1), (8, 131072), (9, -1), (10, -1), (11, -1), (12, -1), (13, 8388608), (14, 4194304), (15, 196608), (16, 65536), (17, -1), (18, -1), (19, 134217728), (20, 2097152), (21, 1048576), (22, 32768), (23, 524288), (24, 16777216), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, 131072), (31, -1), (32, -1), (33, 2048), (34, -1), (35, -1), (36, 33554432), (37, 33554432), (38, 2048), (39, 512), (40, 524288), (41, -1), (42, 65536), (43, 65536), (44, -1), (45, 16777216), (46, 2097152), (47, -1), (48, -1), (49, 33554432), (50, -1), (51, -1), (52, -1)]

Decide 19 with phase True at level 8

After decision at level 8
 pending : [3, 37, 8, 30, 33, 45, 38, 42, 43, 46, 49, 36, 39, 24, 23, 40, 5, 15, 16, 22, 21, 14, 20, 13]
 solution : [0, 9, 10, 25, 19]


New level: 9
 pending : [3, 37, 8, 30, 33, 45, 38, 42, 43, 46, 49, 36, 39, 24, 23, 40, 5, 15, 16, 22, 21, 14, 20, 13]
 solution : [0, 9, 10, 25, 19]


Before reduction : 
 pending  : [3, 37, 8, 30, 33, 45, 38, 42, 43, 46, 49, 36, 39, 24, 23, 40, 5, 15, 16, 22, 21, 14, 20, 13]
 solution : [0, 9, 10, 25, 19]

Essensial at level 9 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 16777216), (4, -1), (5, 131072), (6, -1), (7, -1), (8, 131072), (9, -1), (10, -1), (11, -1), (12, -1), (13, 8388608), (14, 4194304), (15, 196608), (16, 65536), (17, -1), (18, -1), (19, 134217728), (20, 2097152), (21, 1048576), (22, 32768), (23, 524288), (24, 16777216), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, 131072), (31, -1), (32, -1), (33, 2048), (34, -1), (35, -1), (36, 33554432), (37, 33554432), (38, 2048), (39, 512), (40, 524288), (41, -1), (42, 65536), (43, 65536), (44, -1), (45, 16777216), (46, 2097152), (47, -1), (48, -1), (49, 33554432), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 16777216), (4, -1), (5, 0), (6, -1), (7, -1), (8, 32768), (9, -1), (10, -1), (11, -1), (12, -1), (13, 0), (14, 0), (15, 0), (16, 0), (17, -1), (18, -1), (19, -1), (20, 0), (21, 0), (22, 0), (23, 0), (24, 16777216), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, 65536), (31, -1), (32, -1), (33, 1024), (34, -1), (35, -1), (36, 16777216), (37, 512), (38, 512), (39, 0), (40, 0), (41, -1), (42, 16384), (43, 16384), (44, -1), (45, 16777216), (46, 2097152), (47, -1), (48, -1), (49, 33554432), (50, -1), (51, -1), (52, -1)]

Covered at level 9 : {5, 39, 40, 13, 14, 15, 16, 20, 21, 22, 23}

After reduction : 
 pending  : [3, 37, 8, 30, 33, 45, 38, 42, 43, 46, 49, 36, 24]
 solution : [0, 9, 10, 25, 19]


Before reduction : 
 pending  : [3, 37, 8, 30, 33, 45, 38, 42, 43, 46, 49, 36, 24]
 solution : [0, 9, 10, 25, 19]

Essensial at level 9 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 16777216), (4, -1), (5, 0), (6, -1), (7, -1), (8, 32768), (9, -1), (10, -1), (11, -1), (12, -1), (13, 0), (14, 0), (15, 0), (16, 0), (17, -1), (18, -1), (19, -1), (20, 0), (21, 0), (22, 0), (23, 0), (24, 16777216), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, 65536), (31, -1), (32, -1), (33, 1024), (34, -1), (35, -1), (36, 16777216), (37, 512), (38, 512), (39, 0), (40, 0), (41, -1), (42, 16384), (43, 16384), (44, -1), (45, 16777216), (46, 2097152), (47, -1), (48, -1), (49, 33554432), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 16777216), (4, -1), (5, -1), (6, -1), (7, -1), (8, 32768), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, 16777216), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, 65536), (31, -1), (32, -1), (33, 1024), (34, -1), (35, -1), (36, 16777216), (37, 512), (38, 512), (39, -1), (40, -1), (41, -1), (42, 16384), (43, 16384), (44, -1), (45, 16777216), (46, 2097152), (47, -1), (48, -1), (49, 33554432), (50, -1), (51, -1), (52, -1)]

Covered at level 9 : set()

After reduction : 
 pending  : [3, 37, 8, 30, 33, 45, 38, 42, 43, 46, 49, 36, 24]
 solution : [0, 9, 10, 25, 19]


Solution : [0, 9, 10, 25, 19] has cost 28.


Before backtrack at level 9
 pending : [3, 37, 8, 30, 33, 45, 38, 42, 43, 46, 49, 36, 24]
 solution : [0, 9, 10, 25, 19]

After backtrack at level 9
 pending : [3, 37, 8, 30, 33, 45, 38, 42, 43, 46, 49, 36, 24, 39, 23, 40, 5, 15, 16, 22, 21, 14, 20, 13]
 solution : [0, 9, 10, 25, 19]


Invert decision for 19 at level 8


New level: 9
 pending : [3, 37, 8, 30, 33, 45, 38, 42, 43, 46, 49, 36, 24, 39, 23, 40, 5, 15, 16, 22, 21, 14, 20, 13]
 solution : [0, 9, 10, 25]


Before reduction : 
 pending  : [3, 37, 8, 30, 33, 45, 38, 42, 43, 46, 49, 36, 24, 39, 23, 40, 5, 15, 16, 22, 21, 14, 20, 13]
 solution : [0, 9, 10, 25]

Essensial at level 9 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 16777216), (4, -1), (5, -1), (6, -1), (7, -1), (8, 32768), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, 16777216), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, 65536), (31, -1), (32, -1), (33, 1024), (34, -1), (35, -1), (36, 16777216), (37, 512), (38, 512), (39, -1), (40, -1), (41, -1), (42, 16384), (43, 16384), (44, -1), (45, 16777216), (46, 2097152), (47, -1), (48, -1), (49, 33554432), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 16777216), (4, -1), (5, 131072), (6, -1), (7, -1), (8, 131072), (9, -1), (10, -1), (11, -1), (12, -1), (13, 8388608), (14, 4194304), (15, 196608), (16, 65536), (17, -1), (18, -1), (19, -1), (20, 2097152), (21, 1048576), (22, 32768), (23, 524288), (24, 16777216), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, 131072), (31, -1), (32, -1), (33, 2048), (34, -1), (35, -1), (36, 33554432), (37, 33554432), (38, 2048), (39, 512), (40, 524288), (41, -1), (42, 65536), (43, 65536), (44, -1), (45, 16777216), (46, 2097152), (47, -1), (48, -1), (49, 33554432), (50, -1), (51, -1), (52, -1)]

Covered at level 9 : set()

After reduction : 
 pending  : [3, 37, 8, 30, 33, 45, 38, 42, 43, 46, 49, 36, 24, 39, 23, 40, 5, 15, 16, 22, 21, 14, 20, 13]
 solution : [0, 9, 10, 25]


Solution : [0, 9, 10, 25] has cost 21.


Decide in level 9 among pending : [3, 37, 8, 30, 33, 45, 38, 42, 43, 46, 49, 36, 24, 39, 23, 40, 5, 15, 16, 22, 21, 14, 20, 13]

Coverage : [(0, -1), (1, -1), (2, -1), (3, 16777216), (4, -1), (5, 131072), (6, -1), (7, -1), (8, 131072), (9, -1), (10, -1), (11, -1), (12, -1), (13, 8388608), (14, 4194304), (15, 196608), (16, 65536), (17, -1), (18, -1), (19, -1), (20, 2097152), (21, 1048576), (22, 32768), (23, 524288), (24, 16777216), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, 131072), (31, -1), (32, -1), (33, 2048), (34, -1), (35, -1), (36, 33554432), (37, 33554432), (38, 2048), (39, 512), (40, 524288), (41, -1), (42, 65536), (43, 65536), (44, -1), (45, 16777216), (46, 2097152), (47, -1), (48, -1), (49, 33554432), (50, -1), (51, -1), (52, -1)]

Decide 37 with phase True at level 9

After decision at level 9
 pending : [3, 8, 30, 33, 45, 38, 42, 43, 46, 49, 36, 24, 39, 23, 40, 5, 15, 16, 22, 21, 14, 20, 13]
 solution : [0, 9, 10, 25, 37]


New level: 10
 pending : [3, 8, 30, 33, 45, 38, 42, 43, 46, 49, 36, 24, 39, 23, 40, 5, 15, 16, 22, 21, 14, 20, 13]
 solution : [0, 9, 10, 25, 37]


Before reduction : 
 pending  : [3, 8, 30, 33, 45, 38, 42, 43, 46, 49, 36, 24, 39, 23, 40, 5, 15, 16, 22, 21, 14, 20, 13]
 solution : [0, 9, 10, 25, 37]

Essensial at level 10 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 16777216), (4, -1), (5, 131072), (6, -1), (7, -1), (8, 131072), (9, -1), (10, -1), (11, -1), (12, -1), (13, 8388608), (14, 4194304), (15, 196608), (16, 65536), (17, -1), (18, -1), (19, -1), (20, 2097152), (21, 1048576), (22, 32768), (23, 524288), (24, 16777216), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, 131072), (31, -1), (32, -1), (33, 2048), (34, -1), (35, -1), (36, 33554432), (37, 33554432), (38, 2048), (39, 512), (40, 524288), (41, -1), (42, 65536), (43, 65536), (44, -1), (45, 16777216), (46, 2097152), (47, -1), (48, -1), (49, 33554432), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 4194304), (4, -1), (5, 65536), (6, -1), (7, -1), (8, 32768), (9, -1), (10, -1), (11, -1), (12, -1), (13, 4194304), (14, 2097152), (15, 65536), (16, 32768), (17, -1), (18, -1), (19, -1), (20, 2097152), (21, 1048576), (22, 32768), (23, 131072), (24, 4194304), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, 32768), (31, -1), (32, -1), (33, 512), (34, -1), (35, -1), (36, 33554432), (37, -1), (38, 512), (39, 0), (40, 131072), (41, -1), (42, 16384), (43, 16384), (44, -1), (45, 8388608), (46, 524288), (47, -1), (48, -1), (49, 33554432), (50, -1), (51, -1), (52, -1)]

Covered at level 10 : {39}

After reduction : 
 pending  : [3, 8, 30, 33, 45, 38, 42, 43, 46, 49, 36, 24, 23, 40, 5, 15, 16, 22, 21, 14, 20, 13]
 solution : [0, 9, 10, 25, 37]


Before reduction : 
 pending  : [3, 8, 30, 33, 45, 38, 42, 43, 46, 49, 36, 24, 23, 40, 5, 15, 16, 22, 21, 14, 20, 13]
 solution : [0, 9, 10, 25, 37]

Essensial at level 10 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 4194304), (4, -1), (5, 65536), (6, -1), (7, -1), (8, 32768), (9, -1), (10, -1), (11, -1), (12, -1), (13, 4194304), (14, 2097152), (15, 65536), (16, 32768), (17, -1), (18, -1), (19, -1), (20, 2097152), (21, 1048576), (22, 32768), (23, 131072), (24, 4194304), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, 32768), (31, -1), (32, -1), (33, 512), (34, -1), (35, -1), (36, 33554432), (37, -1), (38, 512), (39, 0), (40, 131072), (41, -1), (42, 16384), (43, 16384), (44, -1), (45, 8388608), (46, 524288), (47, -1), (48, -1), (49, 33554432), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 4194304), (4, -1), (5, 65536), (6, -1), (7, -1), (8, 32768), (9, -1), (10, -1), (11, -1), (12, -1), (13, 4194304), (14, 2097152), (15, 65536), (16, 32768), (17, -1), (18, -1), (19, -1), (20, 2097152), (21, 1048576), (22, 32768), (23, 131072), (24, 4194304), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, 32768), (31, -1), (32, -1), (33, 512), (34, -1), (35, -1), (36, 33554432), (37, -1), (38, 512), (39, -1), (40, 131072), (41, -1), (42, 16384), (43, 16384), (44, -1), (45, 8388608), (46, 524288), (47, -1), (48, -1), (49, 33554432), (50, -1), (51, -1), (52, -1)]

Covered at level 10 : set()

After reduction : 
 pending  : [3, 8, 30, 33, 45, 38, 42, 43, 46, 49, 36, 24, 23, 40, 5, 15, 16, 22, 21, 14, 20, 13]
 solution : [0, 9, 10, 25, 37]


Solution : [0, 9, 10, 25, 37] has cost 39.


Before backtrack at level 10
 pending : [3, 8, 30, 33, 45, 38, 42, 43, 46, 49, 36, 24, 23, 40, 5, 15, 16, 22, 21, 14, 20, 13]
 solution : [0, 9, 10, 25, 37]

After backtrack at level 10
 pending : [3, 8, 30, 33, 45, 38, 42, 43, 46, 49, 36, 24, 23, 40, 5, 15, 16, 22, 21, 14, 20, 13, 39]
 solution : [0, 9, 10, 25, 37]


Invert decision for 37 at level 9


New level: 10
 pending : [3, 8, 30, 33, 45, 38, 42, 43, 46, 49, 36, 24, 23, 40, 5, 15, 16, 22, 21, 14, 20, 13, 39]
 solution : [0, 9, 10, 25]


Before reduction : 
 pending  : [3, 8, 30, 33, 45, 38, 42, 43, 46, 49, 36, 24, 23, 40, 5, 15, 16, 22, 21, 14, 20, 13, 39]
 solution : [0, 9, 10, 25]

Essensial at level 10 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 4194304), (4, -1), (5, 65536), (6, -1), (7, -1), (8, 32768), (9, -1), (10, -1), (11, -1), (12, -1), (13, 4194304), (14, 2097152), (15, 65536), (16, 32768), (17, -1), (18, -1), (19, -1), (20, 2097152), (21, 1048576), (22, 32768), (23, 131072), (24, 4194304), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, 32768), (31, -1), (32, -1), (33, 512), (34, -1), (35, -1), (36, 33554432), (37, -1), (38, 512), (39, -1), (40, 131072), (41, -1), (42, 16384), (43, 16384), (44, -1), (45, 8388608), (46, 524288), (47, -1), (48, -1), (49, 33554432), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 16777216), (4, -1), (5, 131072), (6, -1), (7, -1), (8, 131072), (9, -1), (10, -1), (11, -1), (12, -1), (13, 8388608), (14, 4194304), (15, 196608), (16, 65536), (17, -1), (18, -1), (19, -1), (20, 2097152), (21, 1048576), (22, 32768), (23, 524288), (24, 16777216), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, 131072), (31, -1), (32, -1), (33, 2048), (34, -1), (35, -1), (36, 33554432), (37, -1), (38, 2048), (39, 512), (40, 524288), (41, -1), (42, 65536), (43, 65536), (44, -1), (45, 16777216), (46, 2097152), (47, -1), (48, -1), (49, 33554432), (50, -1), (51, -1), (52, -1)]

Covered at level 10 : set()

After reduction : 
 pending  : [3, 8, 30, 33, 45, 38, 42, 43, 46, 49, 36, 24, 23, 40, 5, 15, 16, 22, 21, 14, 20, 13, 39]
 solution : [0, 9, 10, 25]


Solution : [0, 9, 10, 25] has cost 21.


Decide in level 10 among pending : [3, 8, 30, 33, 45, 38, 42, 43, 46, 49, 36, 24, 23, 40, 5, 15, 16, 22, 21, 14, 20, 13, 39]

Coverage : [(0, -1), (1, -1), (2, -1), (3, 16777216), (4, -1), (5, 131072), (6, -1), (7, -1), (8, 131072), (9, -1), (10, -1), (11, -1), (12, -1), (13, 8388608), (14, 4194304), (15, 196608), (16, 65536), (17, -1), (18, -1), (19, -1), (20, 2097152), (21, 1048576), (22, 32768), (23, 524288), (24, 16777216), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, 131072), (31, -1), (32, -1), (33, 2048), (34, -1), (35, -1), (36, 33554432), (37, -1), (38, 2048), (39, 512), (40, 524288), (41, -1), (42, 65536), (43, 65536), (44, -1), (45, 16777216), (46, 2097152), (47, -1), (48, -1), (49, 33554432), (50, -1), (51, -1), (52, -1)]

Decide 49 with phase True at level 10

After decision at level 10
 pending : [3, 8, 30, 33, 45, 38, 42, 43, 46, 36, 24, 23, 40, 5, 15, 16, 22, 21, 14, 20, 13, 39]
 solution : [0, 9, 10, 25, 49]


New level: 11
 pending : [3, 8, 30, 33, 45, 38, 42, 43, 46, 36, 24, 23, 40, 5, 15, 16, 22, 21, 14, 20, 13, 39]
 solution : [0, 9, 10, 25, 49]


Before reduction : 
 pending  : [3, 8, 30, 33, 45, 38, 42, 43, 46, 36, 24, 23, 40, 5, 15, 16, 22, 21, 14, 20, 13, 39]
 solution : [0, 9, 10, 25, 49]

Essensial at level 11 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 16777216), (4, -1), (5, 131072), (6, -1), (7, -1), (8, 131072), (9, -1), (10, -1), (11, -1), (12, -1), (13, 8388608), (14, 4194304), (15, 196608), (16, 65536), (17, -1), (18, -1), (19, -1), (20, 2097152), (21, 1048576), (22, 32768), (23, 524288), (24, 16777216), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, 131072), (31, -1), (32, -1), (33, 2048), (34, -1), (35, -1), (36, 33554432), (37, -1), (38, 2048), (39, 512), (40, 524288), (41, -1), (42, 65536), (43, 65536), (44, -1), (45, 16777216), (46, 2097152), (47, -1), (48, -1), (49, 33554432), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 16777216), (4, -1), (5, 131072), (6, -1), (7, -1), (8, 2048), (9, -1), (10, -1), (11, -1), (12, -1), (13, 8388608), (14, 4194304), (15, 196608), (16, 65536), (17, -1), (18, -1), (19, -1), (20, 2097152), (21, 1048576), (22, 32768), (23, 524288), (24, 16777216), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, 131072), (31, -1), (32, -1), (33, 2048), (34, -1), (35, -1), (36, 33554432), (37, -1), (38, 0), (39, 512), (40, 524288), (41, -1), (42, 0), (43, 0), (44, -1), (45, 2048), (46, 0), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 11 : {46, 42, 43, 38}

After reduction : 
 pending  : [3, 8, 30, 33, 45, 36, 24, 23, 40, 5, 15, 16, 22, 21, 14, 20, 13, 39]
 solution : [0, 9, 10, 25, 49]


Before reduction : 
 pending  : [3, 8, 30, 33, 45, 36, 24, 23, 40, 5, 15, 16, 22, 21, 14, 20, 13, 39]
 solution : [0, 9, 10, 25, 49]

Essensial at level 11 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 16777216), (4, -1), (5, 131072), (6, -1), (7, -1), (8, 2048), (9, -1), (10, -1), (11, -1), (12, -1), (13, 8388608), (14, 4194304), (15, 196608), (16, 65536), (17, -1), (18, -1), (19, -1), (20, 2097152), (21, 1048576), (22, 32768), (23, 524288), (24, 16777216), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, 131072), (31, -1), (32, -1), (33, 2048), (34, -1), (35, -1), (36, 33554432), (37, -1), (38, 0), (39, 512), (40, 524288), (41, -1), (42, 0), (43, 0), (44, -1), (45, 2048), (46, 0), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 16777216), (4, -1), (5, 131072), (6, -1), (7, -1), (8, 2048), (9, -1), (10, -1), (11, -1), (12, -1), (13, 8388608), (14, 4194304), (15, 196608), (16, 65536), (17, -1), (18, -1), (19, -1), (20, 2097152), (21, 1048576), (22, 32768), (23, 524288), (24, 16777216), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, 131072), (31, -1), (32, -1), (33, 2048), (34, -1), (35, -1), (36, 33554432), (37, -1), (38, -1), (39, 512), (40, 524288), (41, -1), (42, -1), (43, -1), (44, -1), (45, 2048), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 11 : set()

After reduction : 
 pending  : [3, 8, 30, 33, 45, 36, 24, 23, 40, 5, 15, 16, 22, 21, 14, 20, 13, 39]
 solution : [0, 9, 10, 25, 49]


Solution : [0, 9, 10, 25, 49] has cost 52.


Before backtrack at level 11
 pending : [3, 8, 30, 33, 45, 36, 24, 23, 40, 5, 15, 16, 22, 21, 14, 20, 13, 39]
 solution : [0, 9, 10, 25, 49]

After backtrack at level 11
 pending : [3, 8, 30, 33, 45, 36, 24, 23, 40, 5, 15, 16, 22, 21, 14, 20, 13, 39, 38, 42, 43, 46]
 solution : [0, 9, 10, 25, 49]


Invert decision for 49 at level 10


New level: 11
 pending : [3, 8, 30, 33, 45, 36, 24, 23, 40, 5, 15, 16, 22, 21, 14, 20, 13, 39, 38, 42, 43, 46]
 solution : [0, 9, 10, 25]


Before reduction : 
 pending  : [3, 8, 30, 33, 45, 36, 24, 23, 40, 5, 15, 16, 22, 21, 14, 20, 13, 39, 38, 42, 43, 46]
 solution : [0, 9, 10, 25]

Essensial at level 11 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 16777216), (4, -1), (5, 131072), (6, -1), (7, -1), (8, 2048), (9, -1), (10, -1), (11, -1), (12, -1), (13, 8388608), (14, 4194304), (15, 196608), (16, 65536), (17, -1), (18, -1), (19, -1), (20, 2097152), (21, 1048576), (22, 32768), (23, 524288), (24, 16777216), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, 131072), (31, -1), (32, -1), (33, 2048), (34, -1), (35, -1), (36, 33554432), (37, -1), (38, -1), (39, 512), (40, 524288), (41, -1), (42, -1), (43, -1), (44, -1), (45, 2048), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 16777216), (4, -1), (5, 131072), (6, -1), (7, -1), (8, 131072), (9, -1), (10, -1), (11, -1), (12, -1), (13, 8388608), (14, 4194304), (15, 196608), (16, 65536), (17, -1), (18, -1), (19, -1), (20, 2097152), (21, 1048576), (22, 32768), (23, 524288), (24, 16777216), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, 131072), (31, -1), (32, -1), (33, 2048), (34, -1), (35, -1), (36, 33554432), (37, -1), (38, 2048), (39, 512), (40, 524288), (41, -1), (42, 65536), (43, 65536), (44, -1), (45, 16777216), (46, 2097152), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 11 : set()

After reduction : 
 pending  : [3, 8, 30, 33, 45, 36, 24, 23, 40, 5, 15, 16, 22, 21, 14, 20, 13, 39, 38, 42, 43, 46]
 solution : [0, 9, 10, 25]


Solution : [0, 9, 10, 25] has cost 21.


Decide in level 11 among pending : [3, 8, 30, 33, 45, 36, 24, 23, 40, 5, 15, 16, 22, 21, 14, 20, 13, 39, 38, 42, 43, 46]

Coverage : [(0, -1), (1, -1), (2, -1), (3, 16777216), (4, -1), (5, 131072), (6, -1), (7, -1), (8, 131072), (9, -1), (10, -1), (11, -1), (12, -1), (13, 8388608), (14, 4194304), (15, 196608), (16, 65536), (17, -1), (18, -1), (19, -1), (20, 2097152), (21, 1048576), (22, 32768), (23, 524288), (24, 16777216), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, 131072), (31, -1), (32, -1), (33, 2048), (34, -1), (35, -1), (36, 33554432), (37, -1), (38, 2048), (39, 512), (40, 524288), (41, -1), (42, 65536), (43, 65536), (44, -1), (45, 16777216), (46, 2097152), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Decide 36 with phase True at level 11

After decision at level 11
 pending : [3, 8, 30, 33, 45, 24, 23, 40, 5, 15, 16, 22, 21, 14, 20, 13, 39, 38, 42, 43, 46]
 solution : [0, 9, 10, 25, 36]


New level: 12
 pending : [3, 8, 30, 33, 45, 24, 23, 40, 5, 15, 16, 22, 21, 14, 20, 13, 39, 38, 42, 43, 46]
 solution : [0, 9, 10, 25, 36]


Before reduction : 
 pending  : [3, 8, 30, 33, 45, 24, 23, 40, 5, 15, 16, 22, 21, 14, 20, 13, 39, 38, 42, 43, 46]
 solution : [0, 9, 10, 25, 36]

Essensial at level 12 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 16777216), (4, -1), (5, 131072), (6, -1), (7, -1), (8, 131072), (9, -1), (10, -1), (11, -1), (12, -1), (13, 8388608), (14, 4194304), (15, 196608), (16, 65536), (17, -1), (18, -1), (19, -1), (20, 2097152), (21, 1048576), (22, 32768), (23, 524288), (24, 16777216), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, 131072), (31, -1), (32, -1), (33, 2048), (34, -1), (35, -1), (36, 33554432), (37, -1), (38, 2048), (39, 512), (40, 524288), (41, -1), (42, 65536), (43, 65536), (44, -1), (45, 16777216), (46, 2097152), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 2048), (4, -1), (5, 65536), (6, -1), (7, -1), (8, 0), (9, -1), (10, -1), (11, -1), (12, -1), (13, 8388608), (14, 4194304), (15, 65536), (16, 65536), (17, -1), (18, -1), (19, -1), (20, 2097152), (21, 1048576), (22, 32768), (23, 524288), (24, 2048), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, 0), (31, -1), (32, -1), (33, 0), (34, -1), (35, -1), (36, -1), (37, -1), (38, 0), (39, 512), (40, 524288), (41, -1), (42, 0), (43, 0), (44, -1), (45, 0), (46, 0), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 12 : {33, 38, 8, 42, 43, 45, 46, 30}

After reduction : 
 pending  : [3, 24, 23, 40, 5, 15, 16, 22, 21, 14, 20, 13, 39]
 solution : [0, 9, 10, 25, 36]


Before reduction : 
 pending  : [3, 24, 23, 40, 5, 15, 16, 22, 21, 14, 20, 13, 39]
 solution : [0, 9, 10, 25, 36]

Essensial at level 12 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 2048), (4, -1), (5, 65536), (6, -1), (7, -1), (8, 0), (9, -1), (10, -1), (11, -1), (12, -1), (13, 8388608), (14, 4194304), (15, 65536), (16, 65536), (17, -1), (18, -1), (19, -1), (20, 2097152), (21, 1048576), (22, 32768), (23, 524288), (24, 2048), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, 0), (31, -1), (32, -1), (33, 0), (34, -1), (35, -1), (36, -1), (37, -1), (38, 0), (39, 512), (40, 524288), (41, -1), (42, 0), (43, 0), (44, -1), (45, 0), (46, 0), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 2048), (4, -1), (5, 65536), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, 8388608), (14, 4194304), (15, 65536), (16, 65536), (17, -1), (18, -1), (19, -1), (20, 2097152), (21, 1048576), (22, 32768), (23, 524288), (24, 2048), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, 512), (40, 524288), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 12 : set()

After reduction : 
 pending  : [3, 24, 23, 40, 5, 15, 16, 22, 21, 14, 20, 13, 39]
 solution : [0, 9, 10, 25, 36]


Solution : [0, 9, 10, 25, 36] has cost 39.


Before backtrack at level 12
 pending : [3, 24, 23, 40, 5, 15, 16, 22, 21, 14, 20, 13, 39]
 solution : [0, 9, 10, 25, 36]

After backtrack at level 12
 pending : [3, 24, 23, 40, 5, 15, 16, 22, 21, 14, 20, 13, 39, 8, 30, 33, 45, 38, 42, 43, 46]
 solution : [0, 9, 10, 25, 36]


Invert decision for 36 at level 11


New level: 12
 pending : [3, 24, 23, 40, 5, 15, 16, 22, 21, 14, 20, 13, 39, 8, 30, 33, 45, 38, 42, 43, 46]
 solution : [0, 9, 10, 25]


Before reduction : 
 pending  : [3, 24, 23, 40, 5, 15, 16, 22, 21, 14, 20, 13, 39, 8, 30, 33, 45, 38, 42, 43, 46]
 solution : [0, 9, 10, 25]

Essensial at level 12 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 2048), (4, -1), (5, 65536), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, 8388608), (14, 4194304), (15, 65536), (16, 65536), (17, -1), (18, -1), (19, -1), (20, 2097152), (21, 1048576), (22, 32768), (23, 524288), (24, 2048), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, 512), (40, 524288), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 16777216), (4, -1), (5, 131072), (6, -1), (7, -1), (8, 131072), (9, -1), (10, -1), (11, -1), (12, -1), (13, 8388608), (14, 4194304), (15, 196608), (16, 65536), (17, -1), (18, -1), (19, -1), (20, 2097152), (21, 1048576), (22, 32768), (23, 524288), (24, 16777216), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, 131072), (31, -1), (32, -1), (33, 2048), (34, -1), (35, -1), (36, -1), (37, -1), (38, 2048), (39, 512), (40, 524288), (41, -1), (42, 65536), (43, 65536), (44, -1), (45, 16777216), (46, 2097152), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 12 : set()

After reduction : 
 pending  : [3, 24, 23, 40, 5, 15, 16, 22, 21, 14, 20, 13, 39, 8, 30, 33, 45, 38, 42, 43, 46]
 solution : [0, 9, 10, 25]


Solution : [0, 9, 10, 25] has cost 21.


Decide in level 12 among pending : [3, 24, 23, 40, 5, 15, 16, 22, 21, 14, 20, 13, 39, 8, 30, 33, 45, 38, 42, 43, 46]

Coverage : [(0, -1), (1, -1), (2, -1), (3, 16777216), (4, -1), (5, 131072), (6, -1), (7, -1), (8, 131072), (9, -1), (10, -1), (11, -1), (12, -1), (13, 8388608), (14, 4194304), (15, 196608), (16, 65536), (17, -1), (18, -1), (19, -1), (20, 2097152), (21, 1048576), (22, 32768), (23, 524288), (24, 16777216), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, 131072), (31, -1), (32, -1), (33, 2048), (34, -1), (35, -1), (36, -1), (37, -1), (38, 2048), (39, 512), (40, 524288), (41, -1), (42, 65536), (43, 65536), (44, -1), (45, 16777216), (46, 2097152), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Decide 3 with phase True at level 12

After decision at level 12
 pending : [24, 23, 40, 5, 15, 16, 22, 21, 14, 20, 13, 39, 8, 30, 33, 45, 38, 42, 43, 46]
 solution : [0, 9, 10, 25, 3]


New level: 13
 pending : [24, 23, 40, 5, 15, 16, 22, 21, 14, 20, 13, 39, 8, 30, 33, 45, 38, 42, 43, 46]
 solution : [0, 9, 10, 25, 3]


Before reduction : 
 pending  : [24, 23, 40, 5, 15, 16, 22, 21, 14, 20, 13, 39, 8, 30, 33, 45, 38, 42, 43, 46]
 solution : [0, 9, 10, 25, 3]

Essensial at level 13 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 16777216), (4, -1), (5, 131072), (6, -1), (7, -1), (8, 131072), (9, -1), (10, -1), (11, -1), (12, -1), (13, 8388608), (14, 4194304), (15, 196608), (16, 65536), (17, -1), (18, -1), (19, -1), (20, 2097152), (21, 1048576), (22, 32768), (23, 524288), (24, 16777216), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, 131072), (31, -1), (32, -1), (33, 2048), (34, -1), (35, -1), (36, -1), (37, -1), (38, 2048), (39, 512), (40, 524288), (41, -1), (42, 65536), (43, 65536), (44, -1), (45, 16777216), (46, 2097152), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 65536), (6, -1), (7, -1), (8, 0), (9, -1), (10, -1), (11, -1), (12, -1), (13, 4194304), (14, 2097152), (15, 65536), (16, 32768), (17, -1), (18, -1), (19, -1), (20, 2097152), (21, 1048576), (22, 32768), (23, 524288), (24, 0), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, 0), (31, -1), (32, -1), (33, 0), (34, -1), (35, -1), (36, -1), (37, -1), (38, 0), (39, 512), (40, 524288), (41, -1), (42, 0), (43, 0), (44, -1), (45, 0), (46, 0), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 13 : {33, 38, 8, 42, 43, 45, 46, 24, 30}

After reduction : 
 pending  : [23, 40, 5, 15, 16, 22, 21, 14, 20, 13, 39]
 solution : [0, 9, 10, 25, 3]


Before reduction : 
 pending  : [23, 40, 5, 15, 16, 22, 21, 14, 20, 13, 39]
 solution : [0, 9, 10, 25, 3]

Essensial at level 13 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 65536), (6, -1), (7, -1), (8, 0), (9, -1), (10, -1), (11, -1), (12, -1), (13, 4194304), (14, 2097152), (15, 65536), (16, 32768), (17, -1), (18, -1), (19, -1), (20, 2097152), (21, 1048576), (22, 32768), (23, 524288), (24, 0), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, 0), (31, -1), (32, -1), (33, 0), (34, -1), (35, -1), (36, -1), (37, -1), (38, 0), (39, 512), (40, 524288), (41, -1), (42, 0), (43, 0), (44, -1), (45, 0), (46, 0), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 65536), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, 4194304), (14, 2097152), (15, 65536), (16, 32768), (17, -1), (18, -1), (19, -1), (20, 2097152), (21, 1048576), (22, 32768), (23, 524288), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, 512), (40, 524288), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 13 : set()

After reduction : 
 pending  : [23, 40, 5, 15, 16, 22, 21, 14, 20, 13, 39]
 solution : [0, 9, 10, 25, 3]


Solution : [0, 9, 10, 25, 3] has cost 25.


Before backtrack at level 13
 pending : [23, 40, 5, 15, 16, 22, 21, 14, 20, 13, 39]
 solution : [0, 9, 10, 25, 3]

After backtrack at level 13
 pending : [23, 40, 5, 15, 16, 22, 21, 14, 20, 13, 39, 24, 8, 30, 33, 45, 38, 42, 43, 46]
 solution : [0, 9, 10, 25, 3]


Invert decision for 3 at level 12


New level: 13
 pending : [23, 40, 5, 15, 16, 22, 21, 14, 20, 13, 39, 24, 8, 30, 33, 45, 38, 42, 43, 46]
 solution : [0, 9, 10, 25]


Before reduction : 
 pending  : [23, 40, 5, 15, 16, 22, 21, 14, 20, 13, 39, 24, 8, 30, 33, 45, 38, 42, 43, 46]
 solution : [0, 9, 10, 25]

Essensial at level 13 : {24}

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 65536), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, 4194304), (14, 2097152), (15, 65536), (16, 32768), (17, -1), (18, -1), (19, -1), (20, 2097152), (21, 1048576), (22, 32768), (23, 524288), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, 512), (40, 524288), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 65536), (6, -1), (7, -1), (8, 0), (9, -1), (10, -1), (11, -1), (12, -1), (13, 4194304), (14, 2097152), (15, 65536), (16, 32768), (17, -1), (18, -1), (19, -1), (20, 2097152), (21, 1048576), (22, 32768), (23, 524288), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, 0), (31, -1), (32, -1), (33, 0), (34, -1), (35, -1), (36, -1), (37, -1), (38, 0), (39, 512), (40, 524288), (41, -1), (42, 0), (43, 0), (44, -1), (45, 0), (46, 0), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 13 : {33, 38, 8, 42, 43, 45, 46, 30}

After reduction : 
 pending  : [23, 40, 5, 15, 16, 22, 21, 14, 20, 13, 39]
 solution : [0, 9, 10, 25, 24]


Before reduction : 
 pending  : [23, 40, 5, 15, 16, 22, 21, 14, 20, 13, 39]
 solution : [0, 9, 10, 25, 24]

Essensial at level 13 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 65536), (6, -1), (7, -1), (8, 0), (9, -1), (10, -1), (11, -1), (12, -1), (13, 4194304), (14, 2097152), (15, 65536), (16, 32768), (17, -1), (18, -1), (19, -1), (20, 2097152), (21, 1048576), (22, 32768), (23, 524288), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, 0), (31, -1), (32, -1), (33, 0), (34, -1), (35, -1), (36, -1), (37, -1), (38, 0), (39, 512), (40, 524288), (41, -1), (42, 0), (43, 0), (44, -1), (45, 0), (46, 0), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 65536), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, 4194304), (14, 2097152), (15, 65536), (16, 32768), (17, -1), (18, -1), (19, -1), (20, 2097152), (21, 1048576), (22, 32768), (23, 524288), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, 512), (40, 524288), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 13 : set()

After reduction : 
 pending  : [23, 40, 5, 15, 16, 22, 21, 14, 20, 13, 39]
 solution : [0, 9, 10, 25, 24]


Solution : [0, 9, 10, 25, 24] has cost 28.


Before backtrack at level 13
 pending : [23, 40, 5, 15, 16, 22, 21, 14, 20, 13, 39]
 solution : [0, 9, 10, 25, 24]

After backtrack at level 13
 pending : [23, 40, 5, 15, 16, 22, 21, 14, 20, 13, 39, 24, 8, 30, 33, 45, 38, 42, 43, 46]
 solution : [0, 9, 10, 25]


Before backtrack at level 12
 pending : [23, 40, 5, 15, 16, 22, 21, 14, 20, 13, 39, 24, 8, 30, 33, 45, 38, 42, 43, 46]
 solution : [0, 9, 10, 25]

After backtrack at level 12
 pending : [23, 40, 5, 15, 16, 22, 21, 14, 20, 13, 39, 24, 8, 30, 33, 45, 38, 42, 43, 46, 3]
 solution : [0, 9, 10, 25]


Before backtrack at level 11
 pending : [23, 40, 5, 15, 16, 22, 21, 14, 20, 13, 39, 24, 8, 30, 33, 45, 38, 42, 43, 46, 3]
 solution : [0, 9, 10, 25]

After backtrack at level 11
 pending : [23, 40, 5, 15, 16, 22, 21, 14, 20, 13, 39, 24, 8, 30, 33, 45, 38, 42, 43, 46, 3, 36]
 solution : [0, 9, 10, 25]


Before backtrack at level 10
 pending : [23, 40, 5, 15, 16, 22, 21, 14, 20, 13, 39, 24, 8, 30, 33, 45, 38, 42, 43, 46, 3, 36]
 solution : [0, 9, 10, 25]

After backtrack at level 10
 pending : [23, 40, 5, 15, 16, 22, 21, 14, 20, 13, 39, 24, 8, 30, 33, 45, 38, 42, 43, 46, 3, 36, 49]
 solution : [0, 9, 10, 25]


Before backtrack at level 9
 pending : [23, 40, 5, 15, 16, 22, 21, 14, 20, 13, 39, 24, 8, 30, 33, 45, 38, 42, 43, 46, 3, 36, 49]
 solution : [0, 9, 10, 25]

After backtrack at level 9
 pending : [23, 40, 5, 15, 16, 22, 21, 14, 20, 13, 39, 24, 8, 30, 33, 45, 38, 42, 43, 46, 3, 36, 49, 37]
 solution : [0, 9, 10, 25]


Before backtrack at level 8
 pending : [23, 40, 5, 15, 16, 22, 21, 14, 20, 13, 39, 24, 8, 30, 33, 45, 38, 42, 43, 46, 3, 36, 49, 37]
 solution : [0, 9, 10, 25]

After backtrack at level 8
 pending : [23, 40, 5, 15, 16, 22, 21, 14, 20, 13, 39, 24, 8, 30, 33, 45, 38, 42, 43, 46, 3, 36, 49, 37, 31, 32, 19]
 solution : [0, 9, 10, 25]


Invert decision for 25 at level 7


New level: 8
 pending : [23, 40, 5, 15, 16, 22, 21, 14, 20, 13, 39, 24, 8, 30, 33, 45, 38, 42, 43, 46, 3, 36, 49, 37, 31, 32, 19]
 solution : [0, 9, 10]


Before reduction : 
 pending  : [23, 40, 5, 15, 16, 22, 21, 14, 20, 13, 39, 24, 8, 30, 33, 45, 38, 42, 43, 46, 3, 36, 49, 37, 31, 32, 19]
 solution : [0, 9, 10]

Essensial at level 8 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 65536), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, 4194304), (14, 2097152), (15, 65536), (16, 32768), (17, -1), (18, -1), (19, -1), (20, 2097152), (21, 1048576), (22, 32768), (23, 524288), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, 512), (40, 524288), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 67108864), (4, -1), (5, 131072), (6, -1), (7, -1), (8, 524288), (9, -1), (10, -1), (11, -1), (12, -1), (13, 8388608), (14, 4194304), (15, 196608), (16, 65536), (17, -1), (18, -1), (19, 134217728), (20, 2097152), (21, 1048576), (22, 32768), (23, 524288), (24, 67108864), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, 524288), (31, 1048576), (32, 8192), (33, 8192), (34, -1), (35, -1), (36, 67108864), (37, 33554432), (38, 8192), (39, 134217728), (40, 524288), (41, -1), (42, 262144), (43, 262144), (44, -1), (45, 33554432), (46, 8388608), (47, -1), (48, -1), (49, 33554432), (50, -1), (51, -1), (52, -1)]

Covered at level 8 : set()

After reduction : 
 pending  : [23, 40, 5, 15, 16, 22, 21, 14, 20, 13, 39, 24, 8, 30, 33, 45, 38, 42, 43, 46, 3, 36, 49, 37, 31, 32, 19]
 solution : [0, 9, 10]


Solution : [0, 9, 10] has cost 14.


Decide in level 8 among pending : [23, 40, 5, 15, 16, 22, 21, 14, 20, 13, 39, 24, 8, 30, 33, 45, 38, 42, 43, 46, 3, 36, 49, 37, 31, 32, 19]

Coverage : [(0, -1), (1, -1), (2, -1), (3, 67108864), (4, -1), (5, 131072), (6, -1), (7, -1), (8, 524288), (9, -1), (10, -1), (11, -1), (12, -1), (13, 8388608), (14, 4194304), (15, 196608), (16, 65536), (17, -1), (18, -1), (19, 134217728), (20, 2097152), (21, 1048576), (22, 32768), (23, 524288), (24, 67108864), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, 524288), (31, 1048576), (32, 8192), (33, 8192), (34, -1), (35, -1), (36, 67108864), (37, 33554432), (38, 8192), (39, 134217728), (40, 524288), (41, -1), (42, 262144), (43, 262144), (44, -1), (45, 33554432), (46, 8388608), (47, -1), (48, -1), (49, 33554432), (50, -1), (51, -1), (52, -1)]

Decide 39 with phase True at level 8

After decision at level 8
 pending : [23, 40, 5, 15, 16, 22, 21, 14, 20, 13, 24, 8, 30, 33, 45, 38, 42, 43, 46, 3, 36, 49, 37, 31, 32, 19]
 solution : [0, 9, 10, 39]


New level: 9
 pending : [23, 40, 5, 15, 16, 22, 21, 14, 20, 13, 24, 8, 30, 33, 45, 38, 42, 43, 46, 3, 36, 49, 37, 31, 32, 19]
 solution : [0, 9, 10, 39]


Before reduction : 
 pending  : [23, 40, 5, 15, 16, 22, 21, 14, 20, 13, 24, 8, 30, 33, 45, 38, 42, 43, 46, 3, 36, 49, 37, 31, 32, 19]
 solution : [0, 9, 10, 39]

Essensial at level 9 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 67108864), (4, -1), (5, 131072), (6, -1), (7, -1), (8, 524288), (9, -1), (10, -1), (11, -1), (12, -1), (13, 8388608), (14, 4194304), (15, 196608), (16, 65536), (17, -1), (18, -1), (19, 134217728), (20, 2097152), (21, 1048576), (22, 32768), (23, 524288), (24, 67108864), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, 524288), (31, 1048576), (32, 8192), (33, 8192), (34, -1), (35, -1), (36, 67108864), (37, 33554432), (38, 8192), (39, 134217728), (40, 524288), (41, -1), (42, 262144), (43, 262144), (44, -1), (45, 33554432), (46, 8388608), (47, -1), (48, -1), (49, 33554432), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 67108864), (4, -1), (5, 131072), (6, -1), (7, -1), (8, 524288), (9, -1), (10, -1), (11, -1), (12, -1), (13, 8388608), (14, 4194304), (15, 196608), (16, 65536), (17, -1), (18, -1), (19, 134217728), (20, 2097152), (21, 1048576), (22, 32768), (23, 524288), (24, 67108864), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, 524288), (31, 524288), (32, 4096), (33, 8192), (34, -1), (35, -1), (36, 67108864), (37, 16777216), (38, 8192), (39, -1), (40, 524288), (41, -1), (42, 262144), (43, 262144), (44, -1), (45, 33554432), (46, 8388608), (47, -1), (48, -1), (49, 33554432), (50, -1), (51, -1), (52, -1)]

Covered at level 9 : set()

After reduction : 
 pending  : [23, 40, 5, 15, 16, 22, 21, 14, 20, 13, 24, 8, 30, 33, 45, 38, 42, 43, 46, 3, 36, 49, 37, 31, 32, 19]
 solution : [0, 9, 10, 39]


Solution : [0, 9, 10, 39] has cost 28.


Before backtrack at level 9
 pending : [23, 40, 5, 15, 16, 22, 21, 14, 20, 13, 24, 8, 30, 33, 45, 38, 42, 43, 46, 3, 36, 49, 37, 31, 32, 19]
 solution : [0, 9, 10, 39]

After backtrack at level 9
 pending : [23, 40, 5, 15, 16, 22, 21, 14, 20, 13, 24, 8, 30, 33, 45, 38, 42, 43, 46, 3, 36, 49, 37, 31, 32, 19]
 solution : [0, 9, 10, 39]


Invert decision for 39 at level 8


New level: 9
 pending : [23, 40, 5, 15, 16, 22, 21, 14, 20, 13, 24, 8, 30, 33, 45, 38, 42, 43, 46, 3, 36, 49, 37, 31, 32, 19]
 solution : [0, 9, 10]


Before reduction : 
 pending  : [23, 40, 5, 15, 16, 22, 21, 14, 20, 13, 24, 8, 30, 33, 45, 38, 42, 43, 46, 3, 36, 49, 37, 31, 32, 19]
 solution : [0, 9, 10]

Essensial at level 9 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 67108864), (4, -1), (5, 131072), (6, -1), (7, -1), (8, 524288), (9, -1), (10, -1), (11, -1), (12, -1), (13, 8388608), (14, 4194304), (15, 196608), (16, 65536), (17, -1), (18, -1), (19, 134217728), (20, 2097152), (21, 1048576), (22, 32768), (23, 524288), (24, 67108864), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, 524288), (31, 524288), (32, 4096), (33, 8192), (34, -1), (35, -1), (36, 67108864), (37, 16777216), (38, 8192), (39, -1), (40, 524288), (41, -1), (42, 262144), (43, 262144), (44, -1), (45, 33554432), (46, 8388608), (47, -1), (48, -1), (49, 33554432), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 67108864), (4, -1), (5, 131072), (6, -1), (7, -1), (8, 524288), (9, -1), (10, -1), (11, -1), (12, -1), (13, 8388608), (14, 4194304), (15, 196608), (16, 65536), (17, -1), (18, -1), (19, 134217728), (20, 2097152), (21, 1048576), (22, 32768), (23, 524288), (24, 67108864), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, 524288), (31, 1048576), (32, 8192), (33, 8192), (34, -1), (35, -1), (36, 67108864), (37, 33554432), (38, 8192), (39, -1), (40, 524288), (41, -1), (42, 262144), (43, 262144), (44, -1), (45, 33554432), (46, 8388608), (47, -1), (48, -1), (49, 33554432), (50, -1), (51, -1), (52, -1)]

Covered at level 9 : set()

After reduction : 
 pending  : [23, 40, 5, 15, 16, 22, 21, 14, 20, 13, 24, 8, 30, 33, 45, 38, 42, 43, 46, 3, 36, 49, 37, 31, 32, 19]
 solution : [0, 9, 10]


Solution : [0, 9, 10] has cost 14.


Decide in level 9 among pending : [23, 40, 5, 15, 16, 22, 21, 14, 20, 13, 24, 8, 30, 33, 45, 38, 42, 43, 46, 3, 36, 49, 37, 31, 32, 19]

Coverage : [(0, -1), (1, -1), (2, -1), (3, 67108864), (4, -1), (5, 131072), (6, -1), (7, -1), (8, 524288), (9, -1), (10, -1), (11, -1), (12, -1), (13, 8388608), (14, 4194304), (15, 196608), (16, 65536), (17, -1), (18, -1), (19, 134217728), (20, 2097152), (21, 1048576), (22, 32768), (23, 524288), (24, 67108864), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, 524288), (31, 1048576), (32, 8192), (33, 8192), (34, -1), (35, -1), (36, 67108864), (37, 33554432), (38, 8192), (39, -1), (40, 524288), (41, -1), (42, 262144), (43, 262144), (44, -1), (45, 33554432), (46, 8388608), (47, -1), (48, -1), (49, 33554432), (50, -1), (51, -1), (52, -1)]

Decide 19 with phase True at level 9

After decision at level 9
 pending : [23, 40, 5, 15, 16, 22, 21, 14, 20, 13, 24, 8, 30, 33, 45, 38, 42, 43, 46, 3, 36, 49, 37, 31, 32]
 solution : [0, 9, 10, 19]


New level: 10
 pending : [23, 40, 5, 15, 16, 22, 21, 14, 20, 13, 24, 8, 30, 33, 45, 38, 42, 43, 46, 3, 36, 49, 37, 31, 32]
 solution : [0, 9, 10, 19]


Before reduction : 
 pending  : [23, 40, 5, 15, 16, 22, 21, 14, 20, 13, 24, 8, 30, 33, 45, 38, 42, 43, 46, 3, 36, 49, 37, 31, 32]
 solution : [0, 9, 10, 19]

Essensial at level 10 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 67108864), (4, -1), (5, 131072), (6, -1), (7, -1), (8, 524288), (9, -1), (10, -1), (11, -1), (12, -1), (13, 8388608), (14, 4194304), (15, 196608), (16, 65536), (17, -1), (18, -1), (19, 134217728), (20, 2097152), (21, 1048576), (22, 32768), (23, 524288), (24, 67108864), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, 524288), (31, 1048576), (32, 8192), (33, 8192), (34, -1), (35, -1), (36, 67108864), (37, 33554432), (38, 8192), (39, -1), (40, 524288), (41, -1), (42, 262144), (43, 262144), (44, -1), (45, 33554432), (46, 8388608), (47, -1), (48, -1), (49, 33554432), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 67108864), (4, -1), (5, 0), (6, -1), (7, -1), (8, 131072), (9, -1), (10, -1), (11, -1), (12, -1), (13, 0), (14, 0), (15, 0), (16, 0), (17, -1), (18, -1), (19, -1), (20, 0), (21, 0), (22, 0), (23, 0), (24, 67108864), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, 262144), (31, 1048576), (32, 8192), (33, 4096), (34, -1), (35, -1), (36, 33554432), (37, 1024), (38, 2048), (39, -1), (40, 0), (41, -1), (42, 65536), (43, 65536), (44, -1), (45, 33554432), (46, 8388608), (47, -1), (48, -1), (49, 33554432), (50, -1), (51, -1), (52, -1)]

Covered at level 10 : {5, 40, 13, 14, 15, 16, 20, 21, 22, 23}

After reduction : 
 pending  : [24, 8, 30, 33, 45, 38, 42, 43, 46, 3, 36, 49, 37, 31, 32]
 solution : [0, 9, 10, 19]


Before reduction : 
 pending  : [24, 8, 30, 33, 45, 38, 42, 43, 46, 3, 36, 49, 37, 31, 32]
 solution : [0, 9, 10, 19]

Essensial at level 10 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 67108864), (4, -1), (5, 0), (6, -1), (7, -1), (8, 131072), (9, -1), (10, -1), (11, -1), (12, -1), (13, 0), (14, 0), (15, 0), (16, 0), (17, -1), (18, -1), (19, -1), (20, 0), (21, 0), (22, 0), (23, 0), (24, 67108864), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, 262144), (31, 1048576), (32, 8192), (33, 4096), (34, -1), (35, -1), (36, 33554432), (37, 1024), (38, 2048), (39, -1), (40, 0), (41, -1), (42, 65536), (43, 65536), (44, -1), (45, 33554432), (46, 8388608), (47, -1), (48, -1), (49, 33554432), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 67108864), (4, -1), (5, -1), (6, -1), (7, -1), (8, 131072), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, 67108864), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, 262144), (31, 1048576), (32, 8192), (33, 4096), (34, -1), (35, -1), (36, 33554432), (37, 1024), (38, 2048), (39, -1), (40, -1), (41, -1), (42, 65536), (43, 65536), (44, -1), (45, 33554432), (46, 8388608), (47, -1), (48, -1), (49, 33554432), (50, -1), (51, -1), (52, -1)]

Covered at level 10 : set()

After reduction : 
 pending  : [24, 8, 30, 33, 45, 38, 42, 43, 46, 3, 36, 49, 37, 31, 32]
 solution : [0, 9, 10, 19]


Solution : [0, 9, 10, 19] has cost 21.


Decide in level 10 among pending : [24, 8, 30, 33, 45, 38, 42, 43, 46, 3, 36, 49, 37, 31, 32]

Coverage : [(0, -1), (1, -1), (2, -1), (3, 67108864), (4, -1), (5, -1), (6, -1), (7, -1), (8, 131072), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, 67108864), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, 262144), (31, 1048576), (32, 8192), (33, 4096), (34, -1), (35, -1), (36, 33554432), (37, 1024), (38, 2048), (39, -1), (40, -1), (41, -1), (42, 65536), (43, 65536), (44, -1), (45, 33554432), (46, 8388608), (47, -1), (48, -1), (49, 33554432), (50, -1), (51, -1), (52, -1)]

Decide 24 with phase True at level 10

After decision at level 10
 pending : [8, 30, 33, 45, 38, 42, 43, 46, 3, 36, 49, 37, 31, 32]
 solution : [0, 9, 10, 19, 24]


New level: 11
 pending : [8, 30, 33, 45, 38, 42, 43, 46, 3, 36, 49, 37, 31, 32]
 solution : [0, 9, 10, 19, 24]


Before reduction : 
 pending  : [8, 30, 33, 45, 38, 42, 43, 46, 3, 36, 49, 37, 31, 32]
 solution : [0, 9, 10, 19, 24]

Essensial at level 11 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 67108864), (4, -1), (5, -1), (6, -1), (7, -1), (8, 131072), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, 67108864), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, 262144), (31, 1048576), (32, 8192), (33, 4096), (34, -1), (35, -1), (36, 33554432), (37, 1024), (38, 2048), (39, -1), (40, -1), (41, -1), (42, 65536), (43, 65536), (44, -1), (45, 33554432), (46, 8388608), (47, -1), (48, -1), (49, 33554432), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 0), (4, -1), (5, -1), (6, -1), (7, -1), (8, 0), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, 0), (31, 0), (32, 0), (33, 0), (34, -1), (35, -1), (36, 0), (37, 0), (38, 0), (39, -1), (40, -1), (41, -1), (42, 0), (43, 0), (44, -1), (45, 0), (46, 0), (47, -1), (48, -1), (49, 0), (50, -1), (51, -1), (52, -1)]

Covered at level 11 : {32, 33, 3, 36, 37, 38, 8, 42, 43, 45, 46, 49, 30, 31}

After reduction : 
 pending  : []
 solution : [0, 9, 10, 19, 24]


Before reduction : 
 pending  : []
 solution : [0, 9, 10, 19, 24]

Essensial at level 11 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 0), (4, -1), (5, -1), (6, -1), (7, -1), (8, 0), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, 0), (31, 0), (32, 0), (33, 0), (34, -1), (35, -1), (36, 0), (37, 0), (38, 0), (39, -1), (40, -1), (41, -1), (42, 0), (43, 0), (44, -1), (45, 0), (46, 0), (47, -1), (48, -1), (49, 0), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 11 : set()

After reduction : 
 pending  : []
 solution : [0, 9, 10, 19, 24]


Solution : [0, 9, 10, 19, 24] has cost 28.


Before backtrack at level 11
 pending : []
 solution : [0, 9, 10, 19, 24]

After backtrack at level 11
 pending : [8, 30, 33, 45, 38, 42, 43, 46, 3, 36, 49, 37, 31, 32]
 solution : [0, 9, 10, 19, 24]


Invert decision for 24 at level 10


New level: 11
 pending : [8, 30, 33, 45, 38, 42, 43, 46, 3, 36, 49, 37, 31, 32]
 solution : [0, 9, 10, 19]


Before reduction : 
 pending  : [8, 30, 33, 45, 38, 42, 43, 46, 3, 36, 49, 37, 31, 32]
 solution : [0, 9, 10, 19]

Essensial at level 11 : {3}

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, 0), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, 0), (31, 0), (32, 0), (33, 0), (34, -1), (35, -1), (36, 0), (37, 0), (38, 0), (39, -1), (40, -1), (41, -1), (42, 0), (43, 0), (44, -1), (45, 0), (46, 0), (47, -1), (48, -1), (49, 0), (50, -1), (51, -1), (52, -1)]

Covered at level 11 : {32, 33, 36, 37, 38, 8, 42, 43, 45, 46, 49, 30, 31}

After reduction : 
 pending  : []
 solution : [0, 9, 10, 19, 3]


Before reduction : 
 pending  : []
 solution : [0, 9, 10, 19, 3]

Essensial at level 11 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, 0), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, 0), (31, 0), (32, 0), (33, 0), (34, -1), (35, -1), (36, 0), (37, 0), (38, 0), (39, -1), (40, -1), (41, -1), (42, 0), (43, 0), (44, -1), (45, 0), (46, 0), (47, -1), (48, -1), (49, 0), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 11 : set()

After reduction : 
 pending  : []
 solution : [0, 9, 10, 19, 3]


Solution : [0, 9, 10, 19, 3] has cost 25.


Before backtrack at level 11
 pending : []
 solution : [0, 9, 10, 19, 3]

After backtrack at level 11
 pending : [3, 8, 30, 33, 45, 38, 42, 43, 46, 36, 49, 37, 31, 32]
 solution : [0, 9, 10, 19]


Before backtrack at level 10
 pending : [3, 8, 30, 33, 45, 38, 42, 43, 46, 36, 49, 37, 31, 32]
 solution : [0, 9, 10, 19]

After backtrack at level 10
 pending : [3, 8, 30, 33, 45, 38, 42, 43, 46, 36, 49, 37, 31, 32, 23, 40, 5, 15, 16, 22, 21, 14, 20, 13, 24]
 solution : [0, 9, 10, 19]


Invert decision for 19 at level 9


New level: 10
 pending : [3, 8, 30, 33, 45, 38, 42, 43, 46, 36, 49, 37, 31, 32, 23, 40, 5, 15, 16, 22, 21, 14, 20, 13, 24]
 solution : [0, 9, 10]


Before reduction : 
 pending  : [3, 8, 30, 33, 45, 38, 42, 43, 46, 36, 49, 37, 31, 32, 23, 40, 5, 15, 16, 22, 21, 14, 20, 13, 24]
 solution : [0, 9, 10]

Essensial at level 10 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 67108864), (4, -1), (5, 131072), (6, -1), (7, -1), (8, 524288), (9, -1), (10, -1), (11, -1), (12, -1), (13, 8388608), (14, 4194304), (15, 196608), (16, 65536), (17, -1), (18, -1), (19, -1), (20, 2097152), (21, 1048576), (22, 32768), (23, 524288), (24, 67108864), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, 524288), (31, 1048576), (32, 8192), (33, 8192), (34, -1), (35, -1), (36, 67108864), (37, 33554432), (38, 8192), (39, -1), (40, 524288), (41, -1), (42, 262144), (43, 262144), (44, -1), (45, 33554432), (46, 8388608), (47, -1), (48, -1), (49, 33554432), (50, -1), (51, -1), (52, -1)]

Covered at level 10 : set()

After reduction : 
 pending  : [3, 8, 30, 33, 45, 38, 42, 43, 46, 36, 49, 37, 31, 32, 23, 40, 5, 15, 16, 22, 21, 14, 20, 13, 24]
 solution : [0, 9, 10]


Solution : [0, 9, 10] has cost 14.


Decide in level 10 among pending : [3, 8, 30, 33, 45, 38, 42, 43, 46, 36, 49, 37, 31, 32, 23, 40, 5, 15, 16, 22, 21, 14, 20, 13, 24]

Coverage : [(0, -1), (1, -1), (2, -1), (3, 67108864), (4, -1), (5, 131072), (6, -1), (7, -1), (8, 524288), (9, -1), (10, -1), (11, -1), (12, -1), (13, 8388608), (14, 4194304), (15, 196608), (16, 65536), (17, -1), (18, -1), (19, -1), (20, 2097152), (21, 1048576), (22, 32768), (23, 524288), (24, 67108864), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, 524288), (31, 1048576), (32, 8192), (33, 8192), (34, -1), (35, -1), (36, 67108864), (37, 33554432), (38, 8192), (39, -1), (40, 524288), (41, -1), (42, 262144), (43, 262144), (44, -1), (45, 33554432), (46, 8388608), (47, -1), (48, -1), (49, 33554432), (50, -1), (51, -1), (52, -1)]

Decide 3 with phase True at level 10

After decision at level 10
 pending : [8, 30, 33, 45, 38, 42, 43, 46, 36, 49, 37, 31, 32, 23, 40, 5, 15, 16, 22, 21, 14, 20, 13, 24]
 solution : [0, 9, 10, 3]


New level: 11
 pending : [8, 30, 33, 45, 38, 42, 43, 46, 36, 49, 37, 31, 32, 23, 40, 5, 15, 16, 22, 21, 14, 20, 13, 24]
 solution : [0, 9, 10, 3]


Before reduction : 
 pending  : [8, 30, 33, 45, 38, 42, 43, 46, 36, 49, 37, 31, 32, 23, 40, 5, 15, 16, 22, 21, 14, 20, 13, 24]
 solution : [0, 9, 10, 3]

Essensial at level 11 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 67108864), (4, -1), (5, 131072), (6, -1), (7, -1), (8, 524288), (9, -1), (10, -1), (11, -1), (12, -1), (13, 8388608), (14, 4194304), (15, 196608), (16, 65536), (17, -1), (18, -1), (19, -1), (20, 2097152), (21, 1048576), (22, 32768), (23, 524288), (24, 67108864), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, 524288), (31, 1048576), (32, 8192), (33, 8192), (34, -1), (35, -1), (36, 67108864), (37, 33554432), (38, 8192), (39, -1), (40, 524288), (41, -1), (42, 262144), (43, 262144), (44, -1), (45, 33554432), (46, 8388608), (47, -1), (48, -1), (49, 33554432), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 65536), (6, -1), (7, -1), (8, 0), (9, -1), (10, -1), (11, -1), (12, -1), (13, 4194304), (14, 2097152), (15, 65536), (16, 32768), (17, -1), (18, -1), (19, -1), (20, 2097152), (21, 1048576), (22, 32768), (23, 524288), (24, 0), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, 0), (31, 0), (32, 0), (33, 0), (34, -1), (35, -1), (36, 0), (37, 32768), (38, 0), (39, -1), (40, 524288), (41, -1), (42, 0), (43, 0), (44, -1), (45, 0), (46, 0), (47, -1), (48, -1), (49, 0), (50, -1), (51, -1), (52, -1)]

Covered at level 11 : {32, 33, 36, 38, 8, 42, 43, 45, 46, 49, 24, 30, 31}

After reduction : 
 pending  : [37, 23, 40, 5, 15, 16, 22, 21, 14, 20, 13]
 solution : [0, 9, 10, 3]


Before reduction : 
 pending  : [37, 23, 40, 5, 15, 16, 22, 21, 14, 20, 13]
 solution : [0, 9, 10, 3]

Essensial at level 11 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 65536), (6, -1), (7, -1), (8, 0), (9, -1), (10, -1), (11, -1), (12, -1), (13, 4194304), (14, 2097152), (15, 65536), (16, 32768), (17, -1), (18, -1), (19, -1), (20, 2097152), (21, 1048576), (22, 32768), (23, 524288), (24, 0), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, 0), (31, 0), (32, 0), (33, 0), (34, -1), (35, -1), (36, 0), (37, 32768), (38, 0), (39, -1), (40, 524288), (41, -1), (42, 0), (43, 0), (44, -1), (45, 0), (46, 0), (47, -1), (48, -1), (49, 0), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 65536), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, 4194304), (14, 2097152), (15, 65536), (16, 32768), (17, -1), (18, -1), (19, -1), (20, 2097152), (21, 1048576), (22, 32768), (23, 524288), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, 32768), (38, -1), (39, -1), (40, 524288), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 11 : set()

After reduction : 
 pending  : [37, 23, 40, 5, 15, 16, 22, 21, 14, 20, 13]
 solution : [0, 9, 10, 3]


Solution : [0, 9, 10, 3] has cost 18.


Decide in level 11 among pending : [37, 23, 40, 5, 15, 16, 22, 21, 14, 20, 13]

Coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 65536), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, 4194304), (14, 2097152), (15, 65536), (16, 32768), (17, -1), (18, -1), (19, -1), (20, 2097152), (21, 1048576), (22, 32768), (23, 524288), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, 32768), (38, -1), (39, -1), (40, 524288), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Decide 13 with phase True at level 11

After decision at level 11
 pending : [37, 23, 40, 5, 15, 16, 22, 21, 14, 20]
 solution : [0, 9, 10, 3, 13]


New level: 12
 pending : [37, 23, 40, 5, 15, 16, 22, 21, 14, 20]
 solution : [0, 9, 10, 3, 13]


Before reduction : 
 pending  : [37, 23, 40, 5, 15, 16, 22, 21, 14, 20]
 solution : [0, 9, 10, 3, 13]

Essensial at level 12 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 65536), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, 4194304), (14, 2097152), (15, 65536), (16, 32768), (17, -1), (18, -1), (19, -1), (20, 2097152), (21, 1048576), (22, 32768), (23, 524288), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, 32768), (38, -1), (39, -1), (40, 524288), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 0), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 0), (15, 0), (16, 0), (17, -1), (18, -1), (19, -1), (20, 32768), (21, 8192), (22, 8192), (23, 2048), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, 1024), (38, -1), (39, -1), (40, 2048), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 12 : {16, 5, 14, 15}

After reduction : 
 pending  : [37, 23, 40, 22, 21, 20]
 solution : [0, 9, 10, 3, 13]


Before reduction : 
 pending  : [37, 23, 40, 22, 21, 20]
 solution : [0, 9, 10, 3, 13]

Essensial at level 12 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 0), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 0), (15, 0), (16, 0), (17, -1), (18, -1), (19, -1), (20, 32768), (21, 8192), (22, 8192), (23, 2048), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, 1024), (38, -1), (39, -1), (40, 2048), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, 32768), (21, 8192), (22, 8192), (23, 2048), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, 1024), (38, -1), (39, -1), (40, 2048), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 12 : set()

After reduction : 
 pending  : [37, 23, 40, 22, 21, 20]
 solution : [0, 9, 10, 3, 13]


Solution : [0, 9, 10, 3, 13] has cost 27.


Before backtrack at level 12
 pending : [37, 23, 40, 22, 21, 20]
 solution : [0, 9, 10, 3, 13]

After backtrack at level 12
 pending : [37, 23, 40, 22, 21, 20, 5, 15, 16, 14]
 solution : [0, 9, 10, 3, 13]


Invert decision for 13 at level 11


New level: 12
 pending : [37, 23, 40, 22, 21, 20, 5, 15, 16, 14]
 solution : [0, 9, 10, 3]


Before reduction : 
 pending  : [37, 23, 40, 22, 21, 20, 5, 15, 16, 14]
 solution : [0, 9, 10, 3]

Essensial at level 12 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, 32768), (21, 8192), (22, 8192), (23, 2048), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, 1024), (38, -1), (39, -1), (40, 2048), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 65536), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 2097152), (15, 65536), (16, 32768), (17, -1), (18, -1), (19, -1), (20, 2097152), (21, 1048576), (22, 32768), (23, 524288), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, 32768), (38, -1), (39, -1), (40, 524288), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 12 : set()

After reduction : 
 pending  : [37, 23, 40, 22, 21, 20, 5, 15, 16, 14]
 solution : [0, 9, 10, 3]


Solution : [0, 9, 10, 3] has cost 18.


Decide in level 12 among pending : [37, 23, 40, 22, 21, 20, 5, 15, 16, 14]

Coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 65536), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 2097152), (15, 65536), (16, 32768), (17, -1), (18, -1), (19, -1), (20, 2097152), (21, 1048576), (22, 32768), (23, 524288), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, 32768), (38, -1), (39, -1), (40, 524288), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Decide 20 with phase True at level 12

After decision at level 12
 pending : [37, 23, 40, 22, 21, 5, 15, 16, 14]
 solution : [0, 9, 10, 3, 20]


New level: 13
 pending : [37, 23, 40, 22, 21, 5, 15, 16, 14]
 solution : [0, 9, 10, 3, 20]


Before reduction : 
 pending  : [37, 23, 40, 22, 21, 5, 15, 16, 14]
 solution : [0, 9, 10, 3, 20]

Essensial at level 13 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 65536), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 2097152), (15, 65536), (16, 32768), (17, -1), (18, -1), (19, -1), (20, 2097152), (21, 1048576), (22, 32768), (23, 524288), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, 32768), (38, -1), (39, -1), (40, 524288), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 32768), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 524288), (15, 32768), (16, 0), (17, -1), (18, -1), (19, -1), (20, -1), (21, 0), (22, 0), (23, 131072), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, 512), (38, -1), (39, -1), (40, 131072), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 13 : {16, 21, 22}

After reduction : 
 pending  : [37, 23, 40, 5, 15, 14]
 solution : [0, 9, 10, 3, 20]


Before reduction : 
 pending  : [37, 23, 40, 5, 15, 14]
 solution : [0, 9, 10, 3, 20]

Essensial at level 13 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 32768), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 524288), (15, 32768), (16, 0), (17, -1), (18, -1), (19, -1), (20, -1), (21, 0), (22, 0), (23, 131072), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, 512), (38, -1), (39, -1), (40, 131072), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 32768), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 524288), (15, 32768), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, 131072), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, 512), (38, -1), (39, -1), (40, 131072), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 13 : set()

After reduction : 
 pending  : [37, 23, 40, 5, 15, 14]
 solution : [0, 9, 10, 3, 20]


Solution : [0, 9, 10, 3, 20] has cost 25.


Before backtrack at level 13
 pending : [37, 23, 40, 5, 15, 14]
 solution : [0, 9, 10, 3, 20]

After backtrack at level 13
 pending : [37, 23, 40, 5, 15, 14, 22, 21, 16]
 solution : [0, 9, 10, 3, 20]


Invert decision for 20 at level 12


New level: 13
 pending : [37, 23, 40, 5, 15, 14, 22, 21, 16]
 solution : [0, 9, 10, 3]


Before reduction : 
 pending  : [37, 23, 40, 5, 15, 14, 22, 21, 16]
 solution : [0, 9, 10, 3]

Essensial at level 13 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 32768), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 524288), (15, 32768), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, 131072), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, 512), (38, -1), (39, -1), (40, 131072), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 65536), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 2097152), (15, 65536), (16, 32768), (17, -1), (18, -1), (19, -1), (20, -1), (21, 1048576), (22, 32768), (23, 524288), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, 32768), (38, -1), (39, -1), (40, 524288), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 13 : set()

After reduction : 
 pending  : [37, 23, 40, 5, 15, 14, 22, 21, 16]
 solution : [0, 9, 10, 3]


Solution : [0, 9, 10, 3] has cost 18.


Decide in level 13 among pending : [37, 23, 40, 5, 15, 14, 22, 21, 16]

Coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 65536), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 2097152), (15, 65536), (16, 32768), (17, -1), (18, -1), (19, -1), (20, -1), (21, 1048576), (22, 32768), (23, 524288), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, 32768), (38, -1), (39, -1), (40, 524288), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Decide 14 with phase True at level 13

After decision at level 13
 pending : [37, 23, 40, 5, 15, 22, 21, 16]
 solution : [0, 9, 10, 3, 14]


New level: 14
 pending : [37, 23, 40, 5, 15, 22, 21, 16]
 solution : [0, 9, 10, 3, 14]


Before reduction : 
 pending  : [37, 23, 40, 5, 15, 22, 21, 16]
 solution : [0, 9, 10, 3, 14]

Essensial at level 14 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 65536), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 2097152), (15, 65536), (16, 32768), (17, -1), (18, -1), (19, -1), (20, -1), (21, 1048576), (22, 32768), (23, 524288), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, 32768), (38, -1), (39, -1), (40, 524288), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 0), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, 0), (16, 0), (17, -1), (18, -1), (19, -1), (20, -1), (21, 8192), (22, 8192), (23, 2048), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, 1024), (38, -1), (39, -1), (40, 2048), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 14 : {16, 5, 15}

After reduction : 
 pending  : [37, 23, 40, 22, 21]
 solution : [0, 9, 10, 3, 14]


Before reduction : 
 pending  : [37, 23, 40, 22, 21]
 solution : [0, 9, 10, 3, 14]

Essensial at level 14 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 0), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, 0), (16, 0), (17, -1), (18, -1), (19, -1), (20, -1), (21, 8192), (22, 8192), (23, 2048), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, 1024), (38, -1), (39, -1), (40, 2048), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, 8192), (22, 8192), (23, 2048), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, 1024), (38, -1), (39, -1), (40, 2048), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 14 : set()

After reduction : 
 pending  : [37, 23, 40, 22, 21]
 solution : [0, 9, 10, 3, 14]


Solution : [0, 9, 10, 3, 14] has cost 27.


Before backtrack at level 14
 pending : [37, 23, 40, 22, 21]
 solution : [0, 9, 10, 3, 14]

After backtrack at level 14
 pending : [37, 23, 40, 22, 21, 5, 15, 16]
 solution : [0, 9, 10, 3, 14]


Invert decision for 14 at level 13


New level: 14
 pending : [37, 23, 40, 22, 21, 5, 15, 16]
 solution : [0, 9, 10, 3]


Before reduction : 
 pending  : [37, 23, 40, 22, 21, 5, 15, 16]
 solution : [0, 9, 10, 3]

Essensial at level 14 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, 8192), (22, 8192), (23, 2048), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, 1024), (38, -1), (39, -1), (40, 2048), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 65536), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, 65536), (16, 32768), (17, -1), (18, -1), (19, -1), (20, -1), (21, 1048576), (22, 32768), (23, 524288), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, 32768), (38, -1), (39, -1), (40, 524288), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 14 : set()

After reduction : 
 pending  : [37, 23, 40, 22, 21, 5, 15, 16]
 solution : [0, 9, 10, 3]


Solution : [0, 9, 10, 3] has cost 18.


Decide in level 14 among pending : [37, 23, 40, 22, 21, 5, 15, 16]

Coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 65536), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, 65536), (16, 32768), (17, -1), (18, -1), (19, -1), (20, -1), (21, 1048576), (22, 32768), (23, 524288), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, 32768), (38, -1), (39, -1), (40, 524288), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Decide 21 with phase True at level 14

After decision at level 14
 pending : [37, 23, 40, 22, 5, 15, 16]
 solution : [0, 9, 10, 3, 21]


New level: 15
 pending : [37, 23, 40, 22, 5, 15, 16]
 solution : [0, 9, 10, 3, 21]


Before reduction : 
 pending  : [37, 23, 40, 22, 5, 15, 16]
 solution : [0, 9, 10, 3, 21]

Essensial at level 15 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 65536), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, 65536), (16, 32768), (17, -1), (18, -1), (19, -1), (20, -1), (21, 1048576), (22, 32768), (23, 524288), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, 32768), (38, -1), (39, -1), (40, 524288), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 32768), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, 32768), (16, 0), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, 0), (23, 131072), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, 512), (38, -1), (39, -1), (40, 131072), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 15 : {16, 22}

After reduction : 
 pending  : [37, 23, 40, 5, 15]
 solution : [0, 9, 10, 3, 21]


Before reduction : 
 pending  : [37, 23, 40, 5, 15]
 solution : [0, 9, 10, 3, 21]

Essensial at level 15 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 32768), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, 32768), (16, 0), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, 0), (23, 131072), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, 512), (38, -1), (39, -1), (40, 131072), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 32768), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, 32768), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, 131072), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, 512), (38, -1), (39, -1), (40, 131072), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 15 : set()

After reduction : 
 pending  : [37, 23, 40, 5, 15]
 solution : [0, 9, 10, 3, 21]


Solution : [0, 9, 10, 3, 21] has cost 25.


Before backtrack at level 15
 pending : [37, 23, 40, 5, 15]
 solution : [0, 9, 10, 3, 21]

After backtrack at level 15
 pending : [37, 23, 40, 5, 15, 22, 16]
 solution : [0, 9, 10, 3, 21]


Invert decision for 21 at level 14


New level: 15
 pending : [37, 23, 40, 5, 15, 22, 16]
 solution : [0, 9, 10, 3]


Before reduction : 
 pending  : [37, 23, 40, 5, 15, 22, 16]
 solution : [0, 9, 10, 3]

Essensial at level 15 : {22}

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 32768), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, 32768), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, 131072), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, 512), (38, -1), (39, -1), (40, 131072), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 65536), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, 65536), (16, 16384), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, 524288), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, 32768), (38, -1), (39, -1), (40, 524288), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 15 : set()

After reduction : 
 pending  : [37, 23, 40, 5, 15, 16]
 solution : [0, 9, 10, 3, 22]


Before reduction : 
 pending  : [37, 23, 40, 5, 15, 16]
 solution : [0, 9, 10, 3, 22]

Essensial at level 15 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 65536), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, 65536), (16, 16384), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, 524288), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, 32768), (38, -1), (39, -1), (40, 524288), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 65536), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, 65536), (16, 16384), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, 524288), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, 32768), (38, -1), (39, -1), (40, 524288), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 15 : set()

After reduction : 
 pending  : [37, 23, 40, 5, 15, 16]
 solution : [0, 9, 10, 3, 22]


Solution : [0, 9, 10, 3, 22] has cost 25.


Before backtrack at level 15
 pending : [37, 23, 40, 5, 15, 16]
 solution : [0, 9, 10, 3, 22]

After backtrack at level 15
 pending : [37, 23, 40, 5, 15, 16, 22]
 solution : [0, 9, 10, 3]


Before backtrack at level 14
 pending : [37, 23, 40, 5, 15, 16, 22]
 solution : [0, 9, 10, 3]

After backtrack at level 14
 pending : [37, 23, 40, 5, 15, 16, 22, 21]
 solution : [0, 9, 10, 3]


Before backtrack at level 13
 pending : [37, 23, 40, 5, 15, 16, 22, 21]
 solution : [0, 9, 10, 3]

After backtrack at level 13
 pending : [37, 23, 40, 5, 15, 16, 22, 21, 14]
 solution : [0, 9, 10, 3]


Before backtrack at level 12
 pending : [37, 23, 40, 5, 15, 16, 22, 21, 14]
 solution : [0, 9, 10, 3]

After backtrack at level 12
 pending : [37, 23, 40, 5, 15, 16, 22, 21, 14, 20]
 solution : [0, 9, 10, 3]


Before backtrack at level 11
 pending : [37, 23, 40, 5, 15, 16, 22, 21, 14, 20]
 solution : [0, 9, 10, 3]

After backtrack at level 11
 pending : [37, 23, 40, 5, 15, 16, 22, 21, 14, 20, 8, 30, 33, 45, 38, 42, 43, 46, 36, 49, 31, 32, 24, 13]
 solution : [0, 9, 10, 3]


Invert decision for 3 at level 10


New level: 11
 pending : [37, 23, 40, 5, 15, 16, 22, 21, 14, 20, 8, 30, 33, 45, 38, 42, 43, 46, 36, 49, 31, 32, 24, 13]
 solution : [0, 9, 10]


Before reduction : 
 pending  : [37, 23, 40, 5, 15, 16, 22, 21, 14, 20, 8, 30, 33, 45, 38, 42, 43, 46, 36, 49, 31, 32, 24, 13]
 solution : [0, 9, 10]

Essensial at level 11 : {24}

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 65536), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, 65536), (16, 16384), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, 524288), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, 32768), (38, -1), (39, -1), (40, 524288), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 65536), (6, -1), (7, -1), (8, 0), (9, -1), (10, -1), (11, -1), (12, -1), (13, 4194304), (14, 2097152), (15, 65536), (16, 32768), (17, -1), (18, -1), (19, -1), (20, 2097152), (21, 1048576), (22, 32768), (23, 524288), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, 0), (31, 0), (32, 0), (33, 0), (34, -1), (35, -1), (36, 0), (37, 262144), (38, 0), (39, -1), (40, 524288), (41, -1), (42, 0), (43, 0), (44, -1), (45, 0), (46, 0), (47, -1), (48, -1), (49, 0), (50, -1), (51, -1), (52, -1)]

Covered at level 11 : {32, 33, 36, 38, 8, 42, 43, 45, 46, 49, 30, 31}

After reduction : 
 pending  : [37, 23, 40, 5, 15, 16, 22, 21, 14, 20, 13]
 solution : [0, 9, 10, 24]


Before reduction : 
 pending  : [37, 23, 40, 5, 15, 16, 22, 21, 14, 20, 13]
 solution : [0, 9, 10, 24]

Essensial at level 11 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 65536), (6, -1), (7, -1), (8, 0), (9, -1), (10, -1), (11, -1), (12, -1), (13, 4194304), (14, 2097152), (15, 65536), (16, 32768), (17, -1), (18, -1), (19, -1), (20, 2097152), (21, 1048576), (22, 32768), (23, 524288), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, 0), (31, 0), (32, 0), (33, 0), (34, -1), (35, -1), (36, 0), (37, 262144), (38, 0), (39, -1), (40, 524288), (41, -1), (42, 0), (43, 0), (44, -1), (45, 0), (46, 0), (47, -1), (48, -1), (49, 0), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 65536), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, 4194304), (14, 2097152), (15, 65536), (16, 32768), (17, -1), (18, -1), (19, -1), (20, 2097152), (21, 1048576), (22, 32768), (23, 524288), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, 262144), (38, -1), (39, -1), (40, 524288), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 11 : set()

After reduction : 
 pending  : [37, 23, 40, 5, 15, 16, 22, 21, 14, 20, 13]
 solution : [0, 9, 10, 24]


Solution : [0, 9, 10, 24] has cost 21.


Decide in level 11 among pending : [37, 23, 40, 5, 15, 16, 22, 21, 14, 20, 13]

Coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 65536), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, 4194304), (14, 2097152), (15, 65536), (16, 32768), (17, -1), (18, -1), (19, -1), (20, 2097152), (21, 1048576), (22, 32768), (23, 524288), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, 262144), (38, -1), (39, -1), (40, 524288), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Decide 13 with phase True at level 11

After decision at level 11
 pending : [37, 23, 40, 5, 15, 16, 22, 21, 14, 20]
 solution : [0, 9, 10, 24, 13]


New level: 12
 pending : [37, 23, 40, 5, 15, 16, 22, 21, 14, 20]
 solution : [0, 9, 10, 24, 13]


Before reduction : 
 pending  : [37, 23, 40, 5, 15, 16, 22, 21, 14, 20]
 solution : [0, 9, 10, 24, 13]

Essensial at level 12 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 65536), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, 4194304), (14, 2097152), (15, 65536), (16, 32768), (17, -1), (18, -1), (19, -1), (20, 2097152), (21, 1048576), (22, 32768), (23, 524288), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, 262144), (38, -1), (39, -1), (40, 524288), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 0), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 0), (15, 0), (16, 0), (17, -1), (18, -1), (19, -1), (20, 32768), (21, 8192), (22, 8192), (23, 2048), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, 1024), (38, -1), (39, -1), (40, 2048), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 12 : {16, 5, 14, 15}

After reduction : 
 pending  : [37, 23, 40, 22, 21, 20]
 solution : [0, 9, 10, 24, 13]


Before reduction : 
 pending  : [37, 23, 40, 22, 21, 20]
 solution : [0, 9, 10, 24, 13]

Essensial at level 12 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 0), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 0), (15, 0), (16, 0), (17, -1), (18, -1), (19, -1), (20, 32768), (21, 8192), (22, 8192), (23, 2048), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, 1024), (38, -1), (39, -1), (40, 2048), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, 32768), (21, 8192), (22, 8192), (23, 2048), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, 1024), (38, -1), (39, -1), (40, 2048), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 12 : set()

After reduction : 
 pending  : [37, 23, 40, 22, 21, 20]
 solution : [0, 9, 10, 24, 13]


Solution : [0, 9, 10, 24, 13] has cost 30.


Before backtrack at level 12
 pending : [37, 23, 40, 22, 21, 20]
 solution : [0, 9, 10, 24, 13]

After backtrack at level 12
 pending : [37, 23, 40, 22, 21, 20, 5, 15, 16, 14]
 solution : [0, 9, 10, 24, 13]


Invert decision for 13 at level 11


New level: 12
 pending : [37, 23, 40, 22, 21, 20, 5, 15, 16, 14]
 solution : [0, 9, 10, 24]


Before reduction : 
 pending  : [37, 23, 40, 22, 21, 20, 5, 15, 16, 14]
 solution : [0, 9, 10, 24]

Essensial at level 12 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, 32768), (21, 8192), (22, 8192), (23, 2048), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, 1024), (38, -1), (39, -1), (40, 2048), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 65536), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 2097152), (15, 65536), (16, 32768), (17, -1), (18, -1), (19, -1), (20, 2097152), (21, 1048576), (22, 32768), (23, 524288), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, 262144), (38, -1), (39, -1), (40, 524288), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 12 : set()

After reduction : 
 pending  : [37, 23, 40, 22, 21, 20, 5, 15, 16, 14]
 solution : [0, 9, 10, 24]


Solution : [0, 9, 10, 24] has cost 21.


Decide in level 12 among pending : [37, 23, 40, 22, 21, 20, 5, 15, 16, 14]

Coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 65536), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 2097152), (15, 65536), (16, 32768), (17, -1), (18, -1), (19, -1), (20, 2097152), (21, 1048576), (22, 32768), (23, 524288), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, 262144), (38, -1), (39, -1), (40, 524288), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Decide 20 with phase True at level 12

After decision at level 12
 pending : [37, 23, 40, 22, 21, 5, 15, 16, 14]
 solution : [0, 9, 10, 24, 20]


New level: 13
 pending : [37, 23, 40, 22, 21, 5, 15, 16, 14]
 solution : [0, 9, 10, 24, 20]


Before reduction : 
 pending  : [37, 23, 40, 22, 21, 5, 15, 16, 14]
 solution : [0, 9, 10, 24, 20]

Essensial at level 13 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 65536), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 2097152), (15, 65536), (16, 32768), (17, -1), (18, -1), (19, -1), (20, 2097152), (21, 1048576), (22, 32768), (23, 524288), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, 262144), (38, -1), (39, -1), (40, 524288), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 32768), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 524288), (15, 32768), (16, 0), (17, -1), (18, -1), (19, -1), (20, -1), (21, 0), (22, 0), (23, 131072), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, 512), (38, -1), (39, -1), (40, 131072), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 13 : {16, 21, 22}

After reduction : 
 pending  : [37, 23, 40, 5, 15, 14]
 solution : [0, 9, 10, 24, 20]


Before reduction : 
 pending  : [37, 23, 40, 5, 15, 14]
 solution : [0, 9, 10, 24, 20]

Essensial at level 13 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 32768), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 524288), (15, 32768), (16, 0), (17, -1), (18, -1), (19, -1), (20, -1), (21, 0), (22, 0), (23, 131072), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, 512), (38, -1), (39, -1), (40, 131072), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 32768), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 524288), (15, 32768), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, 131072), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, 512), (38, -1), (39, -1), (40, 131072), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 13 : set()

After reduction : 
 pending  : [37, 23, 40, 5, 15, 14]
 solution : [0, 9, 10, 24, 20]


Solution : [0, 9, 10, 24, 20] has cost 28.


Before backtrack at level 13
 pending : [37, 23, 40, 5, 15, 14]
 solution : [0, 9, 10, 24, 20]

After backtrack at level 13
 pending : [37, 23, 40, 5, 15, 14, 22, 21, 16]
 solution : [0, 9, 10, 24, 20]


Invert decision for 20 at level 12


New level: 13
 pending : [37, 23, 40, 5, 15, 14, 22, 21, 16]
 solution : [0, 9, 10, 24]


Before reduction : 
 pending  : [37, 23, 40, 5, 15, 14, 22, 21, 16]
 solution : [0, 9, 10, 24]

Essensial at level 13 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 32768), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 524288), (15, 32768), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, 131072), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, 512), (38, -1), (39, -1), (40, 131072), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 65536), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 2097152), (15, 65536), (16, 32768), (17, -1), (18, -1), (19, -1), (20, -1), (21, 1048576), (22, 32768), (23, 524288), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, 262144), (38, -1), (39, -1), (40, 524288), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 13 : set()

After reduction : 
 pending  : [37, 23, 40, 5, 15, 14, 22, 21, 16]
 solution : [0, 9, 10, 24]


Solution : [0, 9, 10, 24] has cost 21.


Decide in level 13 among pending : [37, 23, 40, 5, 15, 14, 22, 21, 16]

Coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 65536), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 2097152), (15, 65536), (16, 32768), (17, -1), (18, -1), (19, -1), (20, -1), (21, 1048576), (22, 32768), (23, 524288), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, 262144), (38, -1), (39, -1), (40, 524288), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Decide 14 with phase True at level 13

After decision at level 13
 pending : [37, 23, 40, 5, 15, 22, 21, 16]
 solution : [0, 9, 10, 24, 14]


New level: 14
 pending : [37, 23, 40, 5, 15, 22, 21, 16]
 solution : [0, 9, 10, 24, 14]


Before reduction : 
 pending  : [37, 23, 40, 5, 15, 22, 21, 16]
 solution : [0, 9, 10, 24, 14]

Essensial at level 14 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 65536), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 2097152), (15, 65536), (16, 32768), (17, -1), (18, -1), (19, -1), (20, -1), (21, 1048576), (22, 32768), (23, 524288), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, 262144), (38, -1), (39, -1), (40, 524288), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 0), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, 0), (16, 0), (17, -1), (18, -1), (19, -1), (20, -1), (21, 8192), (22, 8192), (23, 2048), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, 1024), (38, -1), (39, -1), (40, 2048), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 14 : {16, 5, 15}

After reduction : 
 pending  : [37, 23, 40, 22, 21]
 solution : [0, 9, 10, 24, 14]


Before reduction : 
 pending  : [37, 23, 40, 22, 21]
 solution : [0, 9, 10, 24, 14]

Essensial at level 14 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 0), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, 0), (16, 0), (17, -1), (18, -1), (19, -1), (20, -1), (21, 8192), (22, 8192), (23, 2048), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, 1024), (38, -1), (39, -1), (40, 2048), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, 8192), (22, 8192), (23, 2048), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, 1024), (38, -1), (39, -1), (40, 2048), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 14 : set()

After reduction : 
 pending  : [37, 23, 40, 22, 21]
 solution : [0, 9, 10, 24, 14]


Solution : [0, 9, 10, 24, 14] has cost 30.


Before backtrack at level 14
 pending : [37, 23, 40, 22, 21]
 solution : [0, 9, 10, 24, 14]

After backtrack at level 14
 pending : [37, 23, 40, 22, 21, 5, 15, 16]
 solution : [0, 9, 10, 24, 14]


Invert decision for 14 at level 13


New level: 14
 pending : [37, 23, 40, 22, 21, 5, 15, 16]
 solution : [0, 9, 10, 24]


Before reduction : 
 pending  : [37, 23, 40, 22, 21, 5, 15, 16]
 solution : [0, 9, 10, 24]

Essensial at level 14 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, 8192), (22, 8192), (23, 2048), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, 1024), (38, -1), (39, -1), (40, 2048), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 65536), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, 65536), (16, 32768), (17, -1), (18, -1), (19, -1), (20, -1), (21, 1048576), (22, 32768), (23, 524288), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, 262144), (38, -1), (39, -1), (40, 524288), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 14 : set()

After reduction : 
 pending  : [37, 23, 40, 22, 21, 5, 15, 16]
 solution : [0, 9, 10, 24]


Solution : [0, 9, 10, 24] has cost 21.


Decide in level 14 among pending : [37, 23, 40, 22, 21, 5, 15, 16]

Coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 65536), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, 65536), (16, 32768), (17, -1), (18, -1), (19, -1), (20, -1), (21, 1048576), (22, 32768), (23, 524288), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, 262144), (38, -1), (39, -1), (40, 524288), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Decide 21 with phase True at level 14

After decision at level 14
 pending : [37, 23, 40, 22, 5, 15, 16]
 solution : [0, 9, 10, 24, 21]


New level: 15
 pending : [37, 23, 40, 22, 5, 15, 16]
 solution : [0, 9, 10, 24, 21]


Before reduction : 
 pending  : [37, 23, 40, 22, 5, 15, 16]
 solution : [0, 9, 10, 24, 21]

Essensial at level 15 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 65536), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, 65536), (16, 32768), (17, -1), (18, -1), (19, -1), (20, -1), (21, 1048576), (22, 32768), (23, 524288), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, 262144), (38, -1), (39, -1), (40, 524288), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 32768), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, 32768), (16, 0), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, 0), (23, 131072), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, 512), (38, -1), (39, -1), (40, 131072), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 15 : {16, 22}

After reduction : 
 pending  : [37, 23, 40, 5, 15]
 solution : [0, 9, 10, 24, 21]


Before reduction : 
 pending  : [37, 23, 40, 5, 15]
 solution : [0, 9, 10, 24, 21]

Essensial at level 15 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 32768), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, 32768), (16, 0), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, 0), (23, 131072), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, 512), (38, -1), (39, -1), (40, 131072), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 32768), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, 32768), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, 131072), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, 512), (38, -1), (39, -1), (40, 131072), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 15 : set()

After reduction : 
 pending  : [37, 23, 40, 5, 15]
 solution : [0, 9, 10, 24, 21]


Solution : [0, 9, 10, 24, 21] has cost 28.


Before backtrack at level 15
 pending : [37, 23, 40, 5, 15]
 solution : [0, 9, 10, 24, 21]

After backtrack at level 15
 pending : [37, 23, 40, 5, 15, 22, 16]
 solution : [0, 9, 10, 24, 21]


Invert decision for 21 at level 14


New level: 15
 pending : [37, 23, 40, 5, 15, 22, 16]
 solution : [0, 9, 10, 24]


Before reduction : 
 pending  : [37, 23, 40, 5, 15, 22, 16]
 solution : [0, 9, 10, 24]

Essensial at level 15 : {22}

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 32768), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, 32768), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, 131072), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, 512), (38, -1), (39, -1), (40, 131072), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 65536), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, 65536), (16, 16384), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, 524288), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, 262144), (38, -1), (39, -1), (40, 524288), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 15 : set()

After reduction : 
 pending  : [37, 23, 40, 5, 15, 16]
 solution : [0, 9, 10, 24, 22]


Before reduction : 
 pending  : [37, 23, 40, 5, 15, 16]
 solution : [0, 9, 10, 24, 22]

Essensial at level 15 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 65536), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, 65536), (16, 16384), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, 524288), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, 262144), (38, -1), (39, -1), (40, 524288), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 65536), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, 65536), (16, 16384), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, 524288), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, 262144), (38, -1), (39, -1), (40, 524288), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 15 : set()

After reduction : 
 pending  : [37, 23, 40, 5, 15, 16]
 solution : [0, 9, 10, 24, 22]


Solution : [0, 9, 10, 24, 22] has cost 28.


Before backtrack at level 15
 pending : [37, 23, 40, 5, 15, 16]
 solution : [0, 9, 10, 24, 22]

After backtrack at level 15
 pending : [37, 23, 40, 5, 15, 16, 22]
 solution : [0, 9, 10, 24]


Before backtrack at level 14
 pending : [37, 23, 40, 5, 15, 16, 22]
 solution : [0, 9, 10, 24]

After backtrack at level 14
 pending : [37, 23, 40, 5, 15, 16, 22, 21]
 solution : [0, 9, 10, 24]


Before backtrack at level 13
 pending : [37, 23, 40, 5, 15, 16, 22, 21]
 solution : [0, 9, 10, 24]

After backtrack at level 13
 pending : [37, 23, 40, 5, 15, 16, 22, 21, 14]
 solution : [0, 9, 10, 24]


Before backtrack at level 12
 pending : [37, 23, 40, 5, 15, 16, 22, 21, 14]
 solution : [0, 9, 10, 24]

After backtrack at level 12
 pending : [37, 23, 40, 5, 15, 16, 22, 21, 14, 20]
 solution : [0, 9, 10, 24]


Before backtrack at level 11
 pending : [37, 23, 40, 5, 15, 16, 22, 21, 14, 20]
 solution : [0, 9, 10, 24]

After backtrack at level 11
 pending : [37, 23, 40, 5, 15, 16, 22, 21, 14, 20, 24, 8, 30, 33, 45, 38, 42, 43, 46, 36, 49, 31, 32, 13]
 solution : [0, 9, 10]


Before backtrack at level 10
 pending : [37, 23, 40, 5, 15, 16, 22, 21, 14, 20, 24, 8, 30, 33, 45, 38, 42, 43, 46, 36, 49, 31, 32, 13]
 solution : [0, 9, 10]

After backtrack at level 10
 pending : [37, 23, 40, 5, 15, 16, 22, 21, 14, 20, 24, 8, 30, 33, 45, 38, 42, 43, 46, 36, 49, 31, 32, 13, 3]
 solution : [0, 9, 10]


Before backtrack at level 9
 pending : [37, 23, 40, 5, 15, 16, 22, 21, 14, 20, 24, 8, 30, 33, 45, 38, 42, 43, 46, 36, 49, 31, 32, 13, 3]
 solution : [0, 9, 10]

After backtrack at level 9
 pending : [37, 23, 40, 5, 15, 16, 22, 21, 14, 20, 24, 8, 30, 33, 45, 38, 42, 43, 46, 36, 49, 31, 32, 13, 3, 19]
 solution : [0, 9, 10]


Before backtrack at level 8
 pending : [37, 23, 40, 5, 15, 16, 22, 21, 14, 20, 24, 8, 30, 33, 45, 38, 42, 43, 46, 36, 49, 31, 32, 13, 3, 19]
 solution : [0, 9, 10]

After backtrack at level 8
 pending : [37, 23, 40, 5, 15, 16, 22, 21, 14, 20, 24, 8, 30, 33, 45, 38, 42, 43, 46, 36, 49, 31, 32, 13, 3, 19, 39]
 solution : [0, 9, 10]


Before backtrack at level 7
 pending : [37, 23, 40, 5, 15, 16, 22, 21, 14, 20, 24, 8, 30, 33, 45, 38, 42, 43, 46, 36, 49, 31, 32, 13, 3, 19, 39]
 solution : [0, 9, 10]

After backtrack at level 7
 pending : [37, 23, 40, 5, 15, 16, 22, 21, 14, 20, 24, 8, 30, 33, 45, 38, 42, 43, 46, 36, 49, 31, 32, 13, 3, 19, 39, 25]
 solution : [0, 9, 10]


Before backtrack at level 6
 pending : [37, 23, 40, 5, 15, 16, 22, 21, 14, 20, 24, 8, 30, 33, 45, 38, 42, 43, 46, 36, 49, 31, 32, 13, 3, 19, 39, 25]
 solution : [0, 9, 10]

After backtrack at level 6
 pending : [37, 23, 40, 5, 15, 16, 22, 21, 14, 20, 24, 8, 30, 33, 45, 38, 42, 43, 46, 36, 49, 31, 32, 13, 3, 19, 39, 25, 18]
 solution : [0, 9, 10]


Before backtrack at level 5
 pending : [37, 23, 40, 5, 15, 16, 22, 21, 14, 20, 24, 8, 30, 33, 45, 38, 42, 43, 46, 36, 49, 31, 32, 13, 3, 19, 39, 25, 18]
 solution : [0, 9, 10]

After backtrack at level 5
 pending : [37, 23, 40, 5, 15, 16, 22, 21, 14, 20, 24, 8, 30, 33, 45, 38, 42, 43, 46, 36, 49, 31, 32, 13, 3, 19, 39, 25, 18, 28]
 solution : [0, 9, 10]


Before backtrack at level 4
 pending : [37, 23, 40, 5, 15, 16, 22, 21, 14, 20, 24, 8, 30, 33, 45, 38, 42, 43, 46, 36, 49, 31, 32, 13, 3, 19, 39, 25, 18, 28]
 solution : [0, 9, 10]

After backtrack at level 4
 pending : [37, 23, 40, 5, 15, 16, 22, 21, 14, 20, 24, 8, 30, 33, 45, 38, 42, 43, 46, 36, 49, 31, 32, 13, 3, 19, 39, 25, 18, 28, 35]
 solution : [0, 9, 10]


Before backtrack at level 3
 pending : [37, 23, 40, 5, 15, 16, 22, 21, 14, 20, 24, 8, 30, 33, 45, 38, 42, 43, 46, 36, 49, 31, 32, 13, 3, 19, 39, 25, 18, 28, 35]
 solution : [0, 9, 10]

After backtrack at level 3
 pending : [37, 23, 40, 5, 15, 16, 22, 21, 14, 20, 24, 8, 30, 33, 45, 38, 42, 43, 46, 36, 49, 31, 32, 13, 3, 19, 39, 25, 18, 28, 35, 26]
 solution : [0, 9, 10]


Invert decision for 10 at level 2


New level: 3
 pending : [37, 23, 40, 5, 15, 16, 22, 21, 14, 20, 24, 8, 30, 33, 45, 38, 42, 43, 46, 36, 49, 31, 32, 13, 3, 19, 39, 25, 18, 28, 35, 26]
 solution : [0, 9]


Before reduction : 
 pending  : [37, 23, 40, 5, 15, 16, 22, 21, 14, 20, 24, 8, 30, 33, 45, 38, 42, 43, 46, 36, 49, 31, 32, 13, 3, 19, 39, 25, 18, 28, 35, 26]
 solution : [0, 9]

Essensial at level 3 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 65536), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, 65536), (16, 16384), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, 524288), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, 262144), (38, -1), (39, -1), (40, 524288), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 67108864), (4, -1), (5, 524288), (6, -1), (7, -1), (8, 524288), (9, -1), (10, -1), (11, -1), (12, -1), (13, 33554432), (14, 16777216), (15, 786432), (16, 262144), (17, -1), (18, 1073741824), (19, 536870912), (20, 8388608), (21, 4194304), (22, 131072), (23, 2097152), (24, 67108864), (25, 268435456), (26, 536870912), (27, -1), (28, 2147483648), (29, -1), (30, 524288), (31, 1048576), (32, 8192), (33, 8192), (34, -1), (35, 536870912), (36, 67108864), (37, 67108864), (38, 8192), (39, 134217728), (40, 2097152), (41, -1), (42, 262144), (43, 262144), (44, -1), (45, 33554432), (46, 8388608), (47, -1), (48, -1), (49, 33554432), (50, -1), (51, -1), (52, -1)]

Covered at level 3 : set()

After reduction : 
 pending  : [37, 23, 40, 5, 15, 16, 22, 21, 14, 20, 24, 8, 30, 33, 45, 38, 42, 43, 46, 36, 49, 31, 32, 13, 3, 19, 39, 25, 18, 28, 35, 26]
 solution : [0, 9]


Solution : [0, 9] has cost 9.


Decide in level 3 among pending : [37, 23, 40, 5, 15, 16, 22, 21, 14, 20, 24, 8, 30, 33, 45, 38, 42, 43, 46, 36, 49, 31, 32, 13, 3, 19, 39, 25, 18, 28, 35, 26]

Coverage : [(0, -1), (1, -1), (2, -1), (3, 67108864), (4, -1), (5, 524288), (6, -1), (7, -1), (8, 524288), (9, -1), (10, -1), (11, -1), (12, -1), (13, 33554432), (14, 16777216), (15, 786432), (16, 262144), (17, -1), (18, 1073741824), (19, 536870912), (20, 8388608), (21, 4194304), (22, 131072), (23, 2097152), (24, 67108864), (25, 268435456), (26, 536870912), (27, -1), (28, 2147483648), (29, -1), (30, 524288), (31, 1048576), (32, 8192), (33, 8192), (34, -1), (35, 536870912), (36, 67108864), (37, 67108864), (38, 8192), (39, 134217728), (40, 2097152), (41, -1), (42, 262144), (43, 262144), (44, -1), (45, 33554432), (46, 8388608), (47, -1), (48, -1), (49, 33554432), (50, -1), (51, -1), (52, -1)]

Decide 28 with phase True at level 3

After decision at level 3
 pending : [37, 23, 40, 5, 15, 16, 22, 21, 14, 20, 24, 8, 30, 33, 45, 38, 42, 43, 46, 36, 49, 31, 32, 13, 3, 19, 39, 25, 18, 35, 26]
 solution : [0, 9, 28]


New level: 4
 pending : [37, 23, 40, 5, 15, 16, 22, 21, 14, 20, 24, 8, 30, 33, 45, 38, 42, 43, 46, 36, 49, 31, 32, 13, 3, 19, 39, 25, 18, 35, 26]
 solution : [0, 9, 28]


Before reduction : 
 pending  : [37, 23, 40, 5, 15, 16, 22, 21, 14, 20, 24, 8, 30, 33, 45, 38, 42, 43, 46, 36, 49, 31, 32, 13, 3, 19, 39, 25, 18, 35, 26]
 solution : [0, 9, 28]

Essensial at level 4 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 67108864), (4, -1), (5, 524288), (6, -1), (7, -1), (8, 524288), (9, -1), (10, -1), (11, -1), (12, -1), (13, 33554432), (14, 16777216), (15, 786432), (16, 262144), (17, -1), (18, 1073741824), (19, 536870912), (20, 8388608), (21, 4194304), (22, 131072), (23, 2097152), (24, 67108864), (25, 268435456), (26, 536870912), (27, -1), (28, 2147483648), (29, -1), (30, 524288), (31, 1048576), (32, 8192), (33, 8192), (34, -1), (35, 536870912), (36, 67108864), (37, 67108864), (38, 8192), (39, 134217728), (40, 2097152), (41, -1), (42, 262144), (43, 262144), (44, -1), (45, 33554432), (46, 8388608), (47, -1), (48, -1), (49, 33554432), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 67108864), (4, -1), (5, 0), (6, -1), (7, -1), (8, 131072), (9, -1), (10, -1), (11, -1), (12, -1), (13, 0), (14, 0), (15, 0), (16, 0), (17, -1), (18, 0), (19, 0), (20, 0), (21, 0), (22, 0), (23, 0), (24, 67108864), (25, 268435456), (26, 536870912), (27, -1), (28, -1), (29, -1), (30, 262144), (31, 1048576), (32, 8192), (33, 4096), (34, -1), (35, 536870912), (36, 33554432), (37, 1024), (38, 2048), (39, 2048), (40, 0), (41, -1), (42, 65536), (43, 65536), (44, -1), (45, 16777216), (46, 2097152), (47, -1), (48, -1), (49, 8388608), (50, -1), (51, -1), (52, -1)]

Covered at level 4 : {5, 40, 13, 14, 15, 16, 18, 19, 20, 21, 22, 23}

After reduction : 
 pending  : [37, 24, 8, 30, 33, 45, 38, 42, 43, 46, 36, 49, 31, 32, 3, 39, 25, 35, 26]
 solution : [0, 9, 28]


Before reduction : 
 pending  : [37, 24, 8, 30, 33, 45, 38, 42, 43, 46, 36, 49, 31, 32, 3, 39, 25, 35, 26]
 solution : [0, 9, 28]

Essensial at level 4 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 67108864), (4, -1), (5, 0), (6, -1), (7, -1), (8, 131072), (9, -1), (10, -1), (11, -1), (12, -1), (13, 0), (14, 0), (15, 0), (16, 0), (17, -1), (18, 0), (19, 0), (20, 0), (21, 0), (22, 0), (23, 0), (24, 67108864), (25, 268435456), (26, 536870912), (27, -1), (28, -1), (29, -1), (30, 262144), (31, 1048576), (32, 8192), (33, 4096), (34, -1), (35, 536870912), (36, 33554432), (37, 1024), (38, 2048), (39, 2048), (40, 0), (41, -1), (42, 65536), (43, 65536), (44, -1), (45, 16777216), (46, 2097152), (47, -1), (48, -1), (49, 8388608), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 67108864), (4, -1), (5, -1), (6, -1), (7, -1), (8, 131072), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, 67108864), (25, 268435456), (26, 536870912), (27, -1), (28, -1), (29, -1), (30, 262144), (31, 1048576), (32, 8192), (33, 4096), (34, -1), (35, 536870912), (36, 33554432), (37, 1024), (38, 2048), (39, 2048), (40, -1), (41, -1), (42, 65536), (43, 65536), (44, -1), (45, 16777216), (46, 2097152), (47, -1), (48, -1), (49, 8388608), (50, -1), (51, -1), (52, -1)]

Covered at level 4 : set()

After reduction : 
 pending  : [37, 24, 8, 30, 33, 45, 38, 42, 43, 46, 36, 49, 31, 32, 3, 39, 25, 35, 26]
 solution : [0, 9, 28]


Solution : [0, 9, 28] has cost 13.


Decide in level 4 among pending : [37, 24, 8, 30, 33, 45, 38, 42, 43, 46, 36, 49, 31, 32, 3, 39, 25, 35, 26]

Coverage : [(0, -1), (1, -1), (2, -1), (3, 67108864), (4, -1), (5, -1), (6, -1), (7, -1), (8, 131072), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, 67108864), (25, 268435456), (26, 536870912), (27, -1), (28, -1), (29, -1), (30, 262144), (31, 1048576), (32, 8192), (33, 4096), (34, -1), (35, 536870912), (36, 33554432), (37, 1024), (38, 2048), (39, 2048), (40, -1), (41, -1), (42, 65536), (43, 65536), (44, -1), (45, 16777216), (46, 2097152), (47, -1), (48, -1), (49, 8388608), (50, -1), (51, -1), (52, -1)]

Decide 35 with phase True at level 4

After decision at level 4
 pending : [37, 24, 8, 30, 33, 45, 38, 42, 43, 46, 36, 49, 31, 32, 3, 39, 25, 26]
 solution : [0, 9, 28, 35]


New level: 5
 pending : [37, 24, 8, 30, 33, 45, 38, 42, 43, 46, 36, 49, 31, 32, 3, 39, 25, 26]
 solution : [0, 9, 28, 35]


Before reduction : 
 pending  : [37, 24, 8, 30, 33, 45, 38, 42, 43, 46, 36, 49, 31, 32, 3, 39, 25, 26]
 solution : [0, 9, 28, 35]

Essensial at level 5 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 67108864), (4, -1), (5, -1), (6, -1), (7, -1), (8, 131072), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, 67108864), (25, 268435456), (26, 536870912), (27, -1), (28, -1), (29, -1), (30, 262144), (31, 1048576), (32, 8192), (33, 4096), (34, -1), (35, 536870912), (36, 33554432), (37, 1024), (38, 2048), (39, 2048), (40, -1), (41, -1), (42, 65536), (43, 65536), (44, -1), (45, 16777216), (46, 2097152), (47, -1), (48, -1), (49, 8388608), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 67108864), (4, -1), (5, -1), (6, -1), (7, -1), (8, 32768), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, 67108864), (25, 4096), (26, 536870912), (27, -1), (28, -1), (29, -1), (30, 65536), (31, 0), (32, 0), (33, 1024), (34, -1), (35, -1), (36, 8388608), (37, 512), (38, 512), (39, 0), (40, -1), (41, -1), (42, 16384), (43, 16384), (44, -1), (45, 4194304), (46, 524288), (47, -1), (48, -1), (49, 2097152), (50, -1), (51, -1), (52, -1)]

Covered at level 5 : {32, 39, 31}

After reduction : 
 pending  : [37, 24, 8, 30, 33, 45, 38, 42, 43, 46, 36, 49, 3, 25, 26]
 solution : [0, 9, 28, 35]


Before reduction : 
 pending  : [37, 24, 8, 30, 33, 45, 38, 42, 43, 46, 36, 49, 3, 25, 26]
 solution : [0, 9, 28, 35]

Essensial at level 5 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 67108864), (4, -1), (5, -1), (6, -1), (7, -1), (8, 32768), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, 67108864), (25, 4096), (26, 536870912), (27, -1), (28, -1), (29, -1), (30, 65536), (31, 0), (32, 0), (33, 1024), (34, -1), (35, -1), (36, 8388608), (37, 512), (38, 512), (39, 0), (40, -1), (41, -1), (42, 16384), (43, 16384), (44, -1), (45, 4194304), (46, 524288), (47, -1), (48, -1), (49, 2097152), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 67108864), (4, -1), (5, -1), (6, -1), (7, -1), (8, 32768), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, 67108864), (25, 4096), (26, 536870912), (27, -1), (28, -1), (29, -1), (30, 65536), (31, -1), (32, -1), (33, 1024), (34, -1), (35, -1), (36, 8388608), (37, 512), (38, 512), (39, -1), (40, -1), (41, -1), (42, 16384), (43, 16384), (44, -1), (45, 4194304), (46, 524288), (47, -1), (48, -1), (49, 2097152), (50, -1), (51, -1), (52, -1)]

Covered at level 5 : set()

After reduction : 
 pending  : [37, 24, 8, 30, 33, 45, 38, 42, 43, 46, 36, 49, 3, 25, 26]
 solution : [0, 9, 28, 35]


Solution : [0, 9, 28, 35] has cost 26.


Before backtrack at level 5
 pending : [37, 24, 8, 30, 33, 45, 38, 42, 43, 46, 36, 49, 3, 25, 26]
 solution : [0, 9, 28, 35]

After backtrack at level 5
 pending : [37, 24, 8, 30, 33, 45, 38, 42, 43, 46, 36, 49, 3, 25, 26, 31, 32, 39]
 solution : [0, 9, 28, 35]


Invert decision for 35 at level 4


New level: 5
 pending : [37, 24, 8, 30, 33, 45, 38, 42, 43, 46, 36, 49, 3, 25, 26, 31, 32, 39]
 solution : [0, 9, 28]


Before reduction : 
 pending  : [37, 24, 8, 30, 33, 45, 38, 42, 43, 46, 36, 49, 3, 25, 26, 31, 32, 39]
 solution : [0, 9, 28]

Essensial at level 5 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 67108864), (4, -1), (5, -1), (6, -1), (7, -1), (8, 32768), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, 67108864), (25, 4096), (26, 536870912), (27, -1), (28, -1), (29, -1), (30, 65536), (31, -1), (32, -1), (33, 1024), (34, -1), (35, -1), (36, 8388608), (37, 512), (38, 512), (39, -1), (40, -1), (41, -1), (42, 16384), (43, 16384), (44, -1), (45, 4194304), (46, 524288), (47, -1), (48, -1), (49, 2097152), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 67108864), (4, -1), (5, -1), (6, -1), (7, -1), (8, 131072), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, 67108864), (25, 268435456), (26, 536870912), (27, -1), (28, -1), (29, -1), (30, 262144), (31, 1048576), (32, 8192), (33, 4096), (34, -1), (35, -1), (36, 33554432), (37, 1024), (38, 2048), (39, 2048), (40, -1), (41, -1), (42, 65536), (43, 65536), (44, -1), (45, 16777216), (46, 2097152), (47, -1), (48, -1), (49, 8388608), (50, -1), (51, -1), (52, -1)]

Covered at level 5 : set()

After reduction : 
 pending  : [37, 24, 8, 30, 33, 45, 38, 42, 43, 46, 36, 49, 3, 25, 26, 31, 32, 39]
 solution : [0, 9, 28]


Solution : [0, 9, 28] has cost 13.


Decide in level 5 among pending : [37, 24, 8, 30, 33, 45, 38, 42, 43, 46, 36, 49, 3, 25, 26, 31, 32, 39]

Coverage : [(0, -1), (1, -1), (2, -1), (3, 67108864), (4, -1), (5, -1), (6, -1), (7, -1), (8, 131072), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, 67108864), (25, 268435456), (26, 536870912), (27, -1), (28, -1), (29, -1), (30, 262144), (31, 1048576), (32, 8192), (33, 4096), (34, -1), (35, -1), (36, 33554432), (37, 1024), (38, 2048), (39, 2048), (40, -1), (41, -1), (42, 65536), (43, 65536), (44, -1), (45, 16777216), (46, 2097152), (47, -1), (48, -1), (49, 8388608), (50, -1), (51, -1), (52, -1)]

Decide 26 with phase True at level 5

After decision at level 5
 pending : [37, 24, 8, 30, 33, 45, 38, 42, 43, 46, 36, 49, 3, 25, 31, 32, 39]
 solution : [0, 9, 28, 26]


New level: 6
 pending : [37, 24, 8, 30, 33, 45, 38, 42, 43, 46, 36, 49, 3, 25, 31, 32, 39]
 solution : [0, 9, 28, 26]


Before reduction : 
 pending  : [37, 24, 8, 30, 33, 45, 38, 42, 43, 46, 36, 49, 3, 25, 31, 32, 39]
 solution : [0, 9, 28, 26]

Essensial at level 6 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 67108864), (4, -1), (5, -1), (6, -1), (7, -1), (8, 131072), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, 67108864), (25, 268435456), (26, 536870912), (27, -1), (28, -1), (29, -1), (30, 262144), (31, 1048576), (32, 8192), (33, 4096), (34, -1), (35, -1), (36, 33554432), (37, 1024), (38, 2048), (39, 2048), (40, -1), (41, -1), (42, 65536), (43, 65536), (44, -1), (45, 16777216), (46, 2097152), (47, -1), (48, -1), (49, 8388608), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 67108864), (4, -1), (5, -1), (6, -1), (7, -1), (8, 131072), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, 67108864), (25, 134217728), (26, -1), (27, -1), (28, -1), (29, -1), (30, 262144), (31, 524288), (32, 4096), (33, 4096), (34, -1), (35, -1), (36, 33554432), (37, 1024), (38, 2048), (39, 2048), (40, -1), (41, -1), (42, 65536), (43, 65536), (44, -1), (45, 16777216), (46, 2097152), (47, -1), (48, -1), (49, 8388608), (50, -1), (51, -1), (52, -1)]

Covered at level 6 : set()

After reduction : 
 pending  : [37, 24, 8, 30, 33, 45, 38, 42, 43, 46, 36, 49, 3, 25, 31, 32, 39]
 solution : [0, 9, 28, 26]


Solution : [0, 9, 28, 26] has cost 17.


Decide in level 6 among pending : [37, 24, 8, 30, 33, 45, 38, 42, 43, 46, 36, 49, 3, 25, 31, 32, 39]

Coverage : [(0, -1), (1, -1), (2, -1), (3, 67108864), (4, -1), (5, -1), (6, -1), (7, -1), (8, 131072), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, 67108864), (25, 134217728), (26, -1), (27, -1), (28, -1), (29, -1), (30, 262144), (31, 524288), (32, 4096), (33, 4096), (34, -1), (35, -1), (36, 33554432), (37, 1024), (38, 2048), (39, 2048), (40, -1), (41, -1), (42, 65536), (43, 65536), (44, -1), (45, 16777216), (46, 2097152), (47, -1), (48, -1), (49, 8388608), (50, -1), (51, -1), (52, -1)]

Decide 25 with phase True at level 6

After decision at level 6
 pending : [37, 24, 8, 30, 33, 45, 38, 42, 43, 46, 36, 49, 3, 31, 32, 39]
 solution : [0, 9, 28, 26, 25]


New level: 7
 pending : [37, 24, 8, 30, 33, 45, 38, 42, 43, 46, 36, 49, 3, 31, 32, 39]
 solution : [0, 9, 28, 26, 25]


Before reduction : 
 pending  : [37, 24, 8, 30, 33, 45, 38, 42, 43, 46, 36, 49, 3, 31, 32, 39]
 solution : [0, 9, 28, 26, 25]

Essensial at level 7 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 67108864), (4, -1), (5, -1), (6, -1), (7, -1), (8, 131072), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, 67108864), (25, 134217728), (26, -1), (27, -1), (28, -1), (29, -1), (30, 262144), (31, 524288), (32, 4096), (33, 4096), (34, -1), (35, -1), (36, 33554432), (37, 1024), (38, 2048), (39, 2048), (40, -1), (41, -1), (42, 65536), (43, 65536), (44, -1), (45, 16777216), (46, 2097152), (47, -1), (48, -1), (49, 8388608), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 16777216), (4, -1), (5, -1), (6, -1), (7, -1), (8, 32768), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, 16777216), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, 65536), (31, 0), (32, 0), (33, 1024), (34, -1), (35, -1), (36, 16777216), (37, 512), (38, 512), (39, 0), (40, -1), (41, -1), (42, 16384), (43, 16384), (44, -1), (45, 8388608), (46, 524288), (47, -1), (48, -1), (49, 8388608), (50, -1), (51, -1), (52, -1)]

Covered at level 7 : {32, 39, 31}

After reduction : 
 pending  : [37, 24, 8, 30, 33, 45, 38, 42, 43, 46, 36, 49, 3]
 solution : [0, 9, 28, 26, 25]


Before reduction : 
 pending  : [37, 24, 8, 30, 33, 45, 38, 42, 43, 46, 36, 49, 3]
 solution : [0, 9, 28, 26, 25]

Essensial at level 7 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 16777216), (4, -1), (5, -1), (6, -1), (7, -1), (8, 32768), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, 16777216), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, 65536), (31, 0), (32, 0), (33, 1024), (34, -1), (35, -1), (36, 16777216), (37, 512), (38, 512), (39, 0), (40, -1), (41, -1), (42, 16384), (43, 16384), (44, -1), (45, 8388608), (46, 524288), (47, -1), (48, -1), (49, 8388608), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 16777216), (4, -1), (5, -1), (6, -1), (7, -1), (8, 32768), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, 16777216), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, 65536), (31, -1), (32, -1), (33, 1024), (34, -1), (35, -1), (36, 16777216), (37, 512), (38, 512), (39, -1), (40, -1), (41, -1), (42, 16384), (43, 16384), (44, -1), (45, 8388608), (46, 524288), (47, -1), (48, -1), (49, 8388608), (50, -1), (51, -1), (52, -1)]

Covered at level 7 : set()

After reduction : 
 pending  : [37, 24, 8, 30, 33, 45, 38, 42, 43, 46, 36, 49, 3]
 solution : [0, 9, 28, 26, 25]


Solution : [0, 9, 28, 26, 25] has cost 24.


Before backtrack at level 7
 pending : [37, 24, 8, 30, 33, 45, 38, 42, 43, 46, 36, 49, 3]
 solution : [0, 9, 28, 26, 25]

After backtrack at level 7
 pending : [37, 24, 8, 30, 33, 45, 38, 42, 43, 46, 36, 49, 3, 31, 32, 39]
 solution : [0, 9, 28, 26, 25]


Invert decision for 25 at level 6


New level: 7
 pending : [37, 24, 8, 30, 33, 45, 38, 42, 43, 46, 36, 49, 3, 31, 32, 39]
 solution : [0, 9, 28, 26]


Before reduction : 
 pending  : [37, 24, 8, 30, 33, 45, 38, 42, 43, 46, 36, 49, 3, 31, 32, 39]
 solution : [0, 9, 28, 26]

Essensial at level 7 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 16777216), (4, -1), (5, -1), (6, -1), (7, -1), (8, 32768), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, 16777216), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, 65536), (31, -1), (32, -1), (33, 1024), (34, -1), (35, -1), (36, 16777216), (37, 512), (38, 512), (39, -1), (40, -1), (41, -1), (42, 16384), (43, 16384), (44, -1), (45, 8388608), (46, 524288), (47, -1), (48, -1), (49, 8388608), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 67108864), (4, -1), (5, -1), (6, -1), (7, -1), (8, 131072), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, 67108864), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, 262144), (31, 524288), (32, 4096), (33, 4096), (34, -1), (35, -1), (36, 33554432), (37, 1024), (38, 2048), (39, 2048), (40, -1), (41, -1), (42, 65536), (43, 65536), (44, -1), (45, 16777216), (46, 2097152), (47, -1), (48, -1), (49, 8388608), (50, -1), (51, -1), (52, -1)]

Covered at level 7 : set()

After reduction : 
 pending  : [37, 24, 8, 30, 33, 45, 38, 42, 43, 46, 36, 49, 3, 31, 32, 39]
 solution : [0, 9, 28, 26]


Solution : [0, 9, 28, 26] has cost 17.


Decide in level 7 among pending : [37, 24, 8, 30, 33, 45, 38, 42, 43, 46, 36, 49, 3, 31, 32, 39]

Coverage : [(0, -1), (1, -1), (2, -1), (3, 67108864), (4, -1), (5, -1), (6, -1), (7, -1), (8, 131072), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, 67108864), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, 262144), (31, 524288), (32, 4096), (33, 4096), (34, -1), (35, -1), (36, 33554432), (37, 1024), (38, 2048), (39, 2048), (40, -1), (41, -1), (42, 65536), (43, 65536), (44, -1), (45, 16777216), (46, 2097152), (47, -1), (48, -1), (49, 8388608), (50, -1), (51, -1), (52, -1)]

Decide 24 with phase True at level 7

After decision at level 7
 pending : [37, 8, 30, 33, 45, 38, 42, 43, 46, 36, 49, 3, 31, 32, 39]
 solution : [0, 9, 28, 26, 24]


New level: 8
 pending : [37, 8, 30, 33, 45, 38, 42, 43, 46, 36, 49, 3, 31, 32, 39]
 solution : [0, 9, 28, 26, 24]


Before reduction : 
 pending  : [37, 8, 30, 33, 45, 38, 42, 43, 46, 36, 49, 3, 31, 32, 39]
 solution : [0, 9, 28, 26, 24]

Essensial at level 8 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 67108864), (4, -1), (5, -1), (6, -1), (7, -1), (8, 131072), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, 67108864), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, 262144), (31, 524288), (32, 4096), (33, 4096), (34, -1), (35, -1), (36, 33554432), (37, 1024), (38, 2048), (39, 2048), (40, -1), (41, -1), (42, 65536), (43, 65536), (44, -1), (45, 16777216), (46, 2097152), (47, -1), (48, -1), (49, 8388608), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 0), (4, -1), (5, -1), (6, -1), (7, -1), (8, 0), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, 0), (31, 0), (32, 0), (33, 0), (34, -1), (35, -1), (36, 0), (37, 0), (38, 0), (39, 0), (40, -1), (41, -1), (42, 0), (43, 0), (44, -1), (45, 0), (46, 0), (47, -1), (48, -1), (49, 0), (50, -1), (51, -1), (52, -1)]

Covered at level 8 : {32, 33, 3, 36, 37, 38, 39, 8, 42, 43, 45, 46, 49, 30, 31}

After reduction : 
 pending  : []
 solution : [0, 9, 28, 26, 24]


Before reduction : 
 pending  : []
 solution : [0, 9, 28, 26, 24]

Essensial at level 8 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 0), (4, -1), (5, -1), (6, -1), (7, -1), (8, 0), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, 0), (31, 0), (32, 0), (33, 0), (34, -1), (35, -1), (36, 0), (37, 0), (38, 0), (39, 0), (40, -1), (41, -1), (42, 0), (43, 0), (44, -1), (45, 0), (46, 0), (47, -1), (48, -1), (49, 0), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 8 : set()

After reduction : 
 pending  : []
 solution : [0, 9, 28, 26, 24]


Solution : [0, 9, 28, 26, 24] has cost 24.


Before backtrack at level 8
 pending : []
 solution : [0, 9, 28, 26, 24]

After backtrack at level 8
 pending : [37, 8, 30, 33, 45, 38, 42, 43, 46, 36, 49, 3, 31, 32, 39]
 solution : [0, 9, 28, 26, 24]


Invert decision for 24 at level 7


New level: 8
 pending : [37, 8, 30, 33, 45, 38, 42, 43, 46, 36, 49, 3, 31, 32, 39]
 solution : [0, 9, 28, 26]


Before reduction : 
 pending  : [37, 8, 30, 33, 45, 38, 42, 43, 46, 36, 49, 3, 31, 32, 39]
 solution : [0, 9, 28, 26]

Essensial at level 8 : {3}

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, 0), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, 0), (31, 0), (32, 0), (33, 0), (34, -1), (35, -1), (36, 0), (37, 0), (38, 0), (39, 0), (40, -1), (41, -1), (42, 0), (43, 0), (44, -1), (45, 0), (46, 0), (47, -1), (48, -1), (49, 0), (50, -1), (51, -1), (52, -1)]

Covered at level 8 : {32, 33, 36, 37, 38, 39, 8, 42, 43, 45, 46, 49, 30, 31}

After reduction : 
 pending  : []
 solution : [0, 9, 28, 26, 3]


Before reduction : 
 pending  : []
 solution : [0, 9, 28, 26, 3]

Essensial at level 8 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, 0), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, 0), (31, 0), (32, 0), (33, 0), (34, -1), (35, -1), (36, 0), (37, 0), (38, 0), (39, 0), (40, -1), (41, -1), (42, 0), (43, 0), (44, -1), (45, 0), (46, 0), (47, -1), (48, -1), (49, 0), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 8 : set()

After reduction : 
 pending  : []
 solution : [0, 9, 28, 26, 3]


Solution : [0, 9, 28, 26, 3] has cost 21.


Before backtrack at level 8
 pending : []
 solution : [0, 9, 28, 26, 3]

After backtrack at level 8
 pending : [3, 37, 8, 30, 33, 45, 38, 42, 43, 46, 36, 49, 31, 32, 39]
 solution : [0, 9, 28, 26]


Before backtrack at level 7
 pending : [3, 37, 8, 30, 33, 45, 38, 42, 43, 46, 36, 49, 31, 32, 39]
 solution : [0, 9, 28, 26]

After backtrack at level 7
 pending : [3, 37, 8, 30, 33, 45, 38, 42, 43, 46, 36, 49, 31, 32, 39, 24]
 solution : [0, 9, 28, 26]


Before backtrack at level 6
 pending : [3, 37, 8, 30, 33, 45, 38, 42, 43, 46, 36, 49, 31, 32, 39, 24]
 solution : [0, 9, 28, 26]

After backtrack at level 6
 pending : [3, 37, 8, 30, 33, 45, 38, 42, 43, 46, 36, 49, 31, 32, 39, 24, 25]
 solution : [0, 9, 28, 26]


Invert decision for 26 at level 5


New level: 6
 pending : [3, 37, 8, 30, 33, 45, 38, 42, 43, 46, 36, 49, 31, 32, 39, 24, 25]
 solution : [0, 9, 28]


Before reduction : 
 pending  : [3, 37, 8, 30, 33, 45, 38, 42, 43, 46, 36, 49, 31, 32, 39, 24, 25]
 solution : [0, 9, 28]

Essensial at level 6 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 67108864), (4, -1), (5, -1), (6, -1), (7, -1), (8, 131072), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, 67108864), (25, 268435456), (26, -1), (27, -1), (28, -1), (29, -1), (30, 262144), (31, 1048576), (32, 8192), (33, 4096), (34, -1), (35, -1), (36, 33554432), (37, 1024), (38, 2048), (39, 2048), (40, -1), (41, -1), (42, 65536), (43, 65536), (44, -1), (45, 16777216), (46, 2097152), (47, -1), (48, -1), (49, 8388608), (50, -1), (51, -1), (52, -1)]

Covered at level 6 : set()

After reduction : 
 pending  : [3, 37, 8, 30, 33, 45, 38, 42, 43, 46, 36, 49, 31, 32, 39, 24, 25]
 solution : [0, 9, 28]


Solution : [0, 9, 28] has cost 13.


Decide in level 6 among pending : [3, 37, 8, 30, 33, 45, 38, 42, 43, 46, 36, 49, 31, 32, 39, 24, 25]

Coverage : [(0, -1), (1, -1), (2, -1), (3, 67108864), (4, -1), (5, -1), (6, -1), (7, -1), (8, 131072), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, 67108864), (25, 268435456), (26, -1), (27, -1), (28, -1), (29, -1), (30, 262144), (31, 1048576), (32, 8192), (33, 4096), (34, -1), (35, -1), (36, 33554432), (37, 1024), (38, 2048), (39, 2048), (40, -1), (41, -1), (42, 65536), (43, 65536), (44, -1), (45, 16777216), (46, 2097152), (47, -1), (48, -1), (49, 8388608), (50, -1), (51, -1), (52, -1)]

Decide 25 with phase True at level 6

After decision at level 6
 pending : [3, 37, 8, 30, 33, 45, 38, 42, 43, 46, 36, 49, 31, 32, 39, 24]
 solution : [0, 9, 28, 25]


New level: 7
 pending : [3, 37, 8, 30, 33, 45, 38, 42, 43, 46, 36, 49, 31, 32, 39, 24]
 solution : [0, 9, 28, 25]


Before reduction : 
 pending  : [3, 37, 8, 30, 33, 45, 38, 42, 43, 46, 36, 49, 31, 32, 39, 24]
 solution : [0, 9, 28, 25]

Essensial at level 7 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 67108864), (4, -1), (5, -1), (6, -1), (7, -1), (8, 131072), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, 67108864), (25, 268435456), (26, -1), (27, -1), (28, -1), (29, -1), (30, 262144), (31, 1048576), (32, 8192), (33, 4096), (34, -1), (35, -1), (36, 33554432), (37, 1024), (38, 2048), (39, 2048), (40, -1), (41, -1), (42, 65536), (43, 65536), (44, -1), (45, 16777216), (46, 2097152), (47, -1), (48, -1), (49, 8388608), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 16777216), (4, -1), (5, -1), (6, -1), (7, -1), (8, 32768), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, 16777216), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, 65536), (31, 0), (32, 0), (33, 1024), (34, -1), (35, -1), (36, 16777216), (37, 512), (38, 512), (39, 0), (40, -1), (41, -1), (42, 16384), (43, 16384), (44, -1), (45, 8388608), (46, 524288), (47, -1), (48, -1), (49, 8388608), (50, -1), (51, -1), (52, -1)]

Covered at level 7 : {32, 39, 31}

After reduction : 
 pending  : [3, 37, 8, 30, 33, 45, 38, 42, 43, 46, 36, 49, 24]
 solution : [0, 9, 28, 25]


Before reduction : 
 pending  : [3, 37, 8, 30, 33, 45, 38, 42, 43, 46, 36, 49, 24]
 solution : [0, 9, 28, 25]

Essensial at level 7 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 16777216), (4, -1), (5, -1), (6, -1), (7, -1), (8, 32768), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, 16777216), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, 65536), (31, 0), (32, 0), (33, 1024), (34, -1), (35, -1), (36, 16777216), (37, 512), (38, 512), (39, 0), (40, -1), (41, -1), (42, 16384), (43, 16384), (44, -1), (45, 8388608), (46, 524288), (47, -1), (48, -1), (49, 8388608), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 16777216), (4, -1), (5, -1), (6, -1), (7, -1), (8, 32768), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, 16777216), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, 65536), (31, -1), (32, -1), (33, 1024), (34, -1), (35, -1), (36, 16777216), (37, 512), (38, 512), (39, -1), (40, -1), (41, -1), (42, 16384), (43, 16384), (44, -1), (45, 8388608), (46, 524288), (47, -1), (48, -1), (49, 8388608), (50, -1), (51, -1), (52, -1)]

Covered at level 7 : set()

After reduction : 
 pending  : [3, 37, 8, 30, 33, 45, 38, 42, 43, 46, 36, 49, 24]
 solution : [0, 9, 28, 25]


Solution : [0, 9, 28, 25] has cost 20.


Decide in level 7 among pending : [3, 37, 8, 30, 33, 45, 38, 42, 43, 46, 36, 49, 24]

Coverage : [(0, -1), (1, -1), (2, -1), (3, 16777216), (4, -1), (5, -1), (6, -1), (7, -1), (8, 32768), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, 16777216), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, 65536), (31, -1), (32, -1), (33, 1024), (34, -1), (35, -1), (36, 16777216), (37, 512), (38, 512), (39, -1), (40, -1), (41, -1), (42, 16384), (43, 16384), (44, -1), (45, 8388608), (46, 524288), (47, -1), (48, -1), (49, 8388608), (50, -1), (51, -1), (52, -1)]

Decide 3 with phase True at level 7

After decision at level 7
 pending : [37, 8, 30, 33, 45, 38, 42, 43, 46, 36, 49, 24]
 solution : [0, 9, 28, 25, 3]


New level: 8
 pending : [37, 8, 30, 33, 45, 38, 42, 43, 46, 36, 49, 24]
 solution : [0, 9, 28, 25, 3]


Before reduction : 
 pending  : [37, 8, 30, 33, 45, 38, 42, 43, 46, 36, 49, 24]
 solution : [0, 9, 28, 25, 3]

Essensial at level 8 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 16777216), (4, -1), (5, -1), (6, -1), (7, -1), (8, 32768), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, 16777216), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, 65536), (31, -1), (32, -1), (33, 1024), (34, -1), (35, -1), (36, 16777216), (37, 512), (38, 512), (39, -1), (40, -1), (41, -1), (42, 16384), (43, 16384), (44, -1), (45, 8388608), (46, 524288), (47, -1), (48, -1), (49, 8388608), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, 0), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, 0), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, 0), (31, -1), (32, -1), (33, 0), (34, -1), (35, -1), (36, 0), (37, 0), (38, 0), (39, -1), (40, -1), (41, -1), (42, 0), (43, 0), (44, -1), (45, 0), (46, 0), (47, -1), (48, -1), (49, 0), (50, -1), (51, -1), (52, -1)]

Covered at level 8 : {33, 36, 37, 38, 8, 42, 43, 45, 46, 49, 24, 30}

After reduction : 
 pending  : []
 solution : [0, 9, 28, 25, 3]


Before reduction : 
 pending  : []
 solution : [0, 9, 28, 25, 3]

Essensial at level 8 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, 0), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, 0), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, 0), (31, -1), (32, -1), (33, 0), (34, -1), (35, -1), (36, 0), (37, 0), (38, 0), (39, -1), (40, -1), (41, -1), (42, 0), (43, 0), (44, -1), (45, 0), (46, 0), (47, -1), (48, -1), (49, 0), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 8 : set()

After reduction : 
 pending  : []
 solution : [0, 9, 28, 25, 3]


Solution : [0, 9, 28, 25, 3] has cost 24.


Before backtrack at level 8
 pending : []
 solution : [0, 9, 28, 25, 3]

After backtrack at level 8
 pending : [37, 8, 30, 33, 45, 38, 42, 43, 46, 36, 49, 24]
 solution : [0, 9, 28, 25, 3]


Invert decision for 3 at level 7


New level: 8
 pending : [37, 8, 30, 33, 45, 38, 42, 43, 46, 36, 49, 24]
 solution : [0, 9, 28, 25]


Before reduction : 
 pending  : [37, 8, 30, 33, 45, 38, 42, 43, 46, 36, 49, 24]
 solution : [0, 9, 28, 25]

Essensial at level 8 : {24}

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, 0), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, 0), (31, -1), (32, -1), (33, 0), (34, -1), (35, -1), (36, 0), (37, 0), (38, 0), (39, -1), (40, -1), (41, -1), (42, 0), (43, 0), (44, -1), (45, 0), (46, 0), (47, -1), (48, -1), (49, 0), (50, -1), (51, -1), (52, -1)]

Covered at level 8 : {33, 36, 37, 38, 8, 42, 43, 45, 46, 49, 30}

After reduction : 
 pending  : []
 solution : [0, 9, 28, 25, 24]


Before reduction : 
 pending  : []
 solution : [0, 9, 28, 25, 24]

Essensial at level 8 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, 0), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, 0), (31, -1), (32, -1), (33, 0), (34, -1), (35, -1), (36, 0), (37, 0), (38, 0), (39, -1), (40, -1), (41, -1), (42, 0), (43, 0), (44, -1), (45, 0), (46, 0), (47, -1), (48, -1), (49, 0), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 8 : set()

After reduction : 
 pending  : []
 solution : [0, 9, 28, 25, 24]


Solution : [0, 9, 28, 25, 24] has cost 27.


Before backtrack at level 8
 pending : []
 solution : [0, 9, 28, 25, 24]

After backtrack at level 8
 pending : [24, 37, 8, 30, 33, 45, 38, 42, 43, 46, 36, 49]
 solution : [0, 9, 28, 25]


Before backtrack at level 7
 pending : [24, 37, 8, 30, 33, 45, 38, 42, 43, 46, 36, 49]
 solution : [0, 9, 28, 25]

After backtrack at level 7
 pending : [24, 37, 8, 30, 33, 45, 38, 42, 43, 46, 36, 49, 31, 32, 39, 3]
 solution : [0, 9, 28, 25]


Invert decision for 25 at level 6


New level: 7
 pending : [24, 37, 8, 30, 33, 45, 38, 42, 43, 46, 36, 49, 31, 32, 39, 3]
 solution : [0, 9, 28]


Before reduction : 
 pending  : [24, 37, 8, 30, 33, 45, 38, 42, 43, 46, 36, 49, 31, 32, 39, 3]
 solution : [0, 9, 28]

Essensial at level 7 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 67108864), (4, -1), (5, -1), (6, -1), (7, -1), (8, 131072), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, 67108864), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, 262144), (31, 1048576), (32, 8192), (33, 4096), (34, -1), (35, -1), (36, 33554432), (37, 1024), (38, 2048), (39, 2048), (40, -1), (41, -1), (42, 65536), (43, 65536), (44, -1), (45, 16777216), (46, 2097152), (47, -1), (48, -1), (49, 8388608), (50, -1), (51, -1), (52, -1)]

Covered at level 7 : set()

After reduction : 
 pending  : [24, 37, 8, 30, 33, 45, 38, 42, 43, 46, 36, 49, 31, 32, 39, 3]
 solution : [0, 9, 28]


Solution : [0, 9, 28] has cost 13.


Decide in level 7 among pending : [24, 37, 8, 30, 33, 45, 38, 42, 43, 46, 36, 49, 31, 32, 39, 3]

Coverage : [(0, -1), (1, -1), (2, -1), (3, 67108864), (4, -1), (5, -1), (6, -1), (7, -1), (8, 131072), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, 67108864), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, 262144), (31, 1048576), (32, 8192), (33, 4096), (34, -1), (35, -1), (36, 33554432), (37, 1024), (38, 2048), (39, 2048), (40, -1), (41, -1), (42, 65536), (43, 65536), (44, -1), (45, 16777216), (46, 2097152), (47, -1), (48, -1), (49, 8388608), (50, -1), (51, -1), (52, -1)]

Decide 24 with phase True at level 7

After decision at level 7
 pending : [37, 8, 30, 33, 45, 38, 42, 43, 46, 36, 49, 31, 32, 39, 3]
 solution : [0, 9, 28, 24]


New level: 8
 pending : [37, 8, 30, 33, 45, 38, 42, 43, 46, 36, 49, 31, 32, 39, 3]
 solution : [0, 9, 28, 24]


Before reduction : 
 pending  : [37, 8, 30, 33, 45, 38, 42, 43, 46, 36, 49, 31, 32, 39, 3]
 solution : [0, 9, 28, 24]

Essensial at level 8 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 67108864), (4, -1), (5, -1), (6, -1), (7, -1), (8, 131072), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, 67108864), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, 262144), (31, 1048576), (32, 8192), (33, 4096), (34, -1), (35, -1), (36, 33554432), (37, 1024), (38, 2048), (39, 2048), (40, -1), (41, -1), (42, 65536), (43, 65536), (44, -1), (45, 16777216), (46, 2097152), (47, -1), (48, -1), (49, 8388608), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 0), (4, -1), (5, -1), (6, -1), (7, -1), (8, 0), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, 0), (31, 0), (32, 0), (33, 0), (34, -1), (35, -1), (36, 0), (37, 0), (38, 0), (39, 0), (40, -1), (41, -1), (42, 0), (43, 0), (44, -1), (45, 0), (46, 0), (47, -1), (48, -1), (49, 0), (50, -1), (51, -1), (52, -1)]

Covered at level 8 : {32, 33, 3, 36, 37, 38, 39, 8, 42, 43, 45, 46, 49, 30, 31}

After reduction : 
 pending  : []
 solution : [0, 9, 28, 24]


Before reduction : 
 pending  : []
 solution : [0, 9, 28, 24]

Essensial at level 8 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 0), (4, -1), (5, -1), (6, -1), (7, -1), (8, 0), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, 0), (31, 0), (32, 0), (33, 0), (34, -1), (35, -1), (36, 0), (37, 0), (38, 0), (39, 0), (40, -1), (41, -1), (42, 0), (43, 0), (44, -1), (45, 0), (46, 0), (47, -1), (48, -1), (49, 0), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 8 : set()

After reduction : 
 pending  : []
 solution : [0, 9, 28, 24]


Solution : [0, 9, 28, 24] has cost 20.


Before backtrack at level 8
 pending : []
 solution : [0, 9, 28, 24]

After backtrack at level 8
 pending : [37, 8, 30, 33, 45, 38, 42, 43, 46, 36, 49, 31, 32, 39, 3]
 solution : [0, 9, 28, 24]


Invert decision for 24 at level 7


New level: 8
 pending : [37, 8, 30, 33, 45, 38, 42, 43, 46, 36, 49, 31, 32, 39, 3]
 solution : [0, 9, 28]


Before reduction : 
 pending  : [37, 8, 30, 33, 45, 38, 42, 43, 46, 36, 49, 31, 32, 39, 3]
 solution : [0, 9, 28]

Essensial at level 8 : {3}

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, 0), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, 0), (31, 0), (32, 0), (33, 0), (34, -1), (35, -1), (36, 0), (37, 0), (38, 0), (39, 0), (40, -1), (41, -1), (42, 0), (43, 0), (44, -1), (45, 0), (46, 0), (47, -1), (48, -1), (49, 0), (50, -1), (51, -1), (52, -1)]

Covered at level 8 : {32, 33, 36, 37, 38, 39, 8, 42, 43, 45, 46, 49, 30, 31}

After reduction : 
 pending  : []
 solution : [0, 9, 28, 3]


Before reduction : 
 pending  : []
 solution : [0, 9, 28, 3]

Essensial at level 8 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, 0), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, 0), (31, 0), (32, 0), (33, 0), (34, -1), (35, -1), (36, 0), (37, 0), (38, 0), (39, 0), (40, -1), (41, -1), (42, 0), (43, 0), (44, -1), (45, 0), (46, 0), (47, -1), (48, -1), (49, 0), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 8 : set()

After reduction : 
 pending  : []
 solution : [0, 9, 28, 3]


Solution : [0, 9, 28, 3] has cost 17.


Before backtrack at level 8
 pending : []
 solution : [0, 9, 28, 3]

After backtrack at level 8
 pending : [3, 37, 8, 30, 33, 45, 38, 42, 43, 46, 36, 49, 31, 32, 39]
 solution : [0, 9, 28]


Before backtrack at level 7
 pending : [3, 37, 8, 30, 33, 45, 38, 42, 43, 46, 36, 49, 31, 32, 39]
 solution : [0, 9, 28]

After backtrack at level 7
 pending : [3, 37, 8, 30, 33, 45, 38, 42, 43, 46, 36, 49, 31, 32, 39, 24]
 solution : [0, 9, 28]


Before backtrack at level 6
 pending : [3, 37, 8, 30, 33, 45, 38, 42, 43, 46, 36, 49, 31, 32, 39, 24]
 solution : [0, 9, 28]

After backtrack at level 6
 pending : [3, 37, 8, 30, 33, 45, 38, 42, 43, 46, 36, 49, 31, 32, 39, 24, 25]
 solution : [0, 9, 28]


Before backtrack at level 5
 pending : [3, 37, 8, 30, 33, 45, 38, 42, 43, 46, 36, 49, 31, 32, 39, 24, 25]
 solution : [0, 9, 28]

After backtrack at level 5
 pending : [3, 37, 8, 30, 33, 45, 38, 42, 43, 46, 36, 49, 31, 32, 39, 24, 25, 26]
 solution : [0, 9, 28]


Before backtrack at level 4
 pending : [3, 37, 8, 30, 33, 45, 38, 42, 43, 46, 36, 49, 31, 32, 39, 24, 25, 26]
 solution : [0, 9, 28]

After backtrack at level 4
 pending : [3, 37, 8, 30, 33, 45, 38, 42, 43, 46, 36, 49, 31, 32, 39, 24, 25, 26, 23, 40, 5, 15, 16, 22, 21, 14, 20, 13, 19, 18, 35]
 solution : [0, 9, 28]


Invert decision for 28 at level 3


New level: 4
 pending : [3, 37, 8, 30, 33, 45, 38, 42, 43, 46, 36, 49, 31, 32, 39, 24, 25, 26, 23, 40, 5, 15, 16, 22, 21, 14, 20, 13, 19, 18, 35]
 solution : [0, 9]


Before reduction : 
 pending  : [3, 37, 8, 30, 33, 45, 38, 42, 43, 46, 36, 49, 31, 32, 39, 24, 25, 26, 23, 40, 5, 15, 16, 22, 21, 14, 20, 13, 19, 18, 35]
 solution : [0, 9]

Essensial at level 4 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 67108864), (4, -1), (5, 524288), (6, -1), (7, -1), (8, 524288), (9, -1), (10, -1), (11, -1), (12, -1), (13, 33554432), (14, 16777216), (15, 786432), (16, 262144), (17, -1), (18, 1073741824), (19, 536870912), (20, 8388608), (21, 4194304), (22, 131072), (23, 2097152), (24, 67108864), (25, 268435456), (26, 536870912), (27, -1), (28, -1), (29, -1), (30, 524288), (31, 1048576), (32, 8192), (33, 8192), (34, -1), (35, 536870912), (36, 67108864), (37, 67108864), (38, 8192), (39, 134217728), (40, 2097152), (41, -1), (42, 262144), (43, 262144), (44, -1), (45, 33554432), (46, 8388608), (47, -1), (48, -1), (49, 33554432), (50, -1), (51, -1), (52, -1)]

Covered at level 4 : set()

After reduction : 
 pending  : [3, 37, 8, 30, 33, 45, 38, 42, 43, 46, 36, 49, 31, 32, 39, 24, 25, 26, 23, 40, 5, 15, 16, 22, 21, 14, 20, 13, 19, 18, 35]
 solution : [0, 9]


Solution : [0, 9] has cost 9.


Decide in level 4 among pending : [3, 37, 8, 30, 33, 45, 38, 42, 43, 46, 36, 49, 31, 32, 39, 24, 25, 26, 23, 40, 5, 15, 16, 22, 21, 14, 20, 13, 19, 18, 35]

Coverage : [(0, -1), (1, -1), (2, -1), (3, 67108864), (4, -1), (5, 524288), (6, -1), (7, -1), (8, 524288), (9, -1), (10, -1), (11, -1), (12, -1), (13, 33554432), (14, 16777216), (15, 786432), (16, 262144), (17, -1), (18, 1073741824), (19, 536870912), (20, 8388608), (21, 4194304), (22, 131072), (23, 2097152), (24, 67108864), (25, 268435456), (26, 536870912), (27, -1), (28, -1), (29, -1), (30, 524288), (31, 1048576), (32, 8192), (33, 8192), (34, -1), (35, 536870912), (36, 67108864), (37, 67108864), (38, 8192), (39, 134217728), (40, 2097152), (41, -1), (42, 262144), (43, 262144), (44, -1), (45, 33554432), (46, 8388608), (47, -1), (48, -1), (49, 33554432), (50, -1), (51, -1), (52, -1)]

Decide 18 with phase True at level 4

After decision at level 4
 pending : [3, 37, 8, 30, 33, 45, 38, 42, 43, 46, 36, 49, 31, 32, 39, 24, 25, 26, 23, 40, 5, 15, 16, 22, 21, 14, 20, 13, 19, 35]
 solution : [0, 9, 18]


New level: 5
 pending : [3, 37, 8, 30, 33, 45, 38, 42, 43, 46, 36, 49, 31, 32, 39, 24, 25, 26, 23, 40, 5, 15, 16, 22, 21, 14, 20, 13, 19, 35]
 solution : [0, 9, 18]


Before reduction : 
 pending  : [3, 37, 8, 30, 33, 45, 38, 42, 43, 46, 36, 49, 31, 32, 39, 24, 25, 26, 23, 40, 5, 15, 16, 22, 21, 14, 20, 13, 19, 35]
 solution : [0, 9, 18]

Essensial at level 5 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 67108864), (4, -1), (5, 524288), (6, -1), (7, -1), (8, 524288), (9, -1), (10, -1), (11, -1), (12, -1), (13, 33554432), (14, 16777216), (15, 786432), (16, 262144), (17, -1), (18, 1073741824), (19, 536870912), (20, 8388608), (21, 4194304), (22, 131072), (23, 2097152), (24, 67108864), (25, 268435456), (26, 536870912), (27, -1), (28, -1), (29, -1), (30, 524288), (31, 1048576), (32, 8192), (33, 8192), (34, -1), (35, 536870912), (36, 67108864), (37, 67108864), (38, 8192), (39, 134217728), (40, 2097152), (41, -1), (42, 262144), (43, 262144), (44, -1), (45, 33554432), (46, 8388608), (47, -1), (48, -1), (49, 33554432), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 67108864), (4, -1), (5, 0), (6, -1), (7, -1), (8, 131072), (9, -1), (10, -1), (11, -1), (12, -1), (13, 0), (14, 0), (15, 0), (16, 0), (17, -1), (18, -1), (19, 0), (20, 0), (21, 0), (22, 0), (23, 0), (24, 67108864), (25, 268435456), (26, 536870912), (27, -1), (28, -1), (29, -1), (30, 262144), (31, 1048576), (32, 8192), (33, 4096), (34, -1), (35, 536870912), (36, 33554432), (37, 1024), (38, 2048), (39, 2048), (40, 0), (41, -1), (42, 65536), (43, 65536), (44, -1), (45, 16777216), (46, 2097152), (47, -1), (48, -1), (49, 33554432), (50, -1), (51, -1), (52, -1)]

Covered at level 5 : {5, 40, 13, 14, 15, 16, 19, 20, 21, 22, 23}

After reduction : 
 pending  : [3, 37, 8, 30, 33, 45, 38, 42, 43, 46, 36, 49, 31, 32, 39, 24, 25, 26, 35]
 solution : [0, 9, 18]


Before reduction : 
 pending  : [3, 37, 8, 30, 33, 45, 38, 42, 43, 46, 36, 49, 31, 32, 39, 24, 25, 26, 35]
 solution : [0, 9, 18]

Essensial at level 5 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 67108864), (4, -1), (5, 0), (6, -1), (7, -1), (8, 131072), (9, -1), (10, -1), (11, -1), (12, -1), (13, 0), (14, 0), (15, 0), (16, 0), (17, -1), (18, -1), (19, 0), (20, 0), (21, 0), (22, 0), (23, 0), (24, 67108864), (25, 268435456), (26, 536870912), (27, -1), (28, -1), (29, -1), (30, 262144), (31, 1048576), (32, 8192), (33, 4096), (34, -1), (35, 536870912), (36, 33554432), (37, 1024), (38, 2048), (39, 2048), (40, 0), (41, -1), (42, 65536), (43, 65536), (44, -1), (45, 16777216), (46, 2097152), (47, -1), (48, -1), (49, 33554432), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 67108864), (4, -1), (5, -1), (6, -1), (7, -1), (8, 131072), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, 67108864), (25, 268435456), (26, 536870912), (27, -1), (28, -1), (29, -1), (30, 262144), (31, 1048576), (32, 8192), (33, 4096), (34, -1), (35, 536870912), (36, 33554432), (37, 1024), (38, 2048), (39, 2048), (40, -1), (41, -1), (42, 65536), (43, 65536), (44, -1), (45, 16777216), (46, 2097152), (47, -1), (48, -1), (49, 33554432), (50, -1), (51, -1), (52, -1)]

Covered at level 5 : set()

After reduction : 
 pending  : [3, 37, 8, 30, 33, 45, 38, 42, 43, 46, 36, 49, 31, 32, 39, 24, 25, 26, 35]
 solution : [0, 9, 18]


Solution : [0, 9, 18] has cost 16.


Decide in level 5 among pending : [3, 37, 8, 30, 33, 45, 38, 42, 43, 46, 36, 49, 31, 32, 39, 24, 25, 26, 35]

Coverage : [(0, -1), (1, -1), (2, -1), (3, 67108864), (4, -1), (5, -1), (6, -1), (7, -1), (8, 131072), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, 67108864), (25, 268435456), (26, 536870912), (27, -1), (28, -1), (29, -1), (30, 262144), (31, 1048576), (32, 8192), (33, 4096), (34, -1), (35, 536870912), (36, 33554432), (37, 1024), (38, 2048), (39, 2048), (40, -1), (41, -1), (42, 65536), (43, 65536), (44, -1), (45, 16777216), (46, 2097152), (47, -1), (48, -1), (49, 33554432), (50, -1), (51, -1), (52, -1)]

Decide 26 with phase True at level 5

After decision at level 5
 pending : [3, 37, 8, 30, 33, 45, 38, 42, 43, 46, 36, 49, 31, 32, 39, 24, 25, 35]
 solution : [0, 9, 18, 26]


New level: 6
 pending : [3, 37, 8, 30, 33, 45, 38, 42, 43, 46, 36, 49, 31, 32, 39, 24, 25, 35]
 solution : [0, 9, 18, 26]


Before reduction : 
 pending  : [3, 37, 8, 30, 33, 45, 38, 42, 43, 46, 36, 49, 31, 32, 39, 24, 25, 35]
 solution : [0, 9, 18, 26]

Essensial at level 6 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 67108864), (4, -1), (5, -1), (6, -1), (7, -1), (8, 131072), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, 67108864), (25, 268435456), (26, 536870912), (27, -1), (28, -1), (29, -1), (30, 262144), (31, 1048576), (32, 8192), (33, 4096), (34, -1), (35, 536870912), (36, 33554432), (37, 1024), (38, 2048), (39, 2048), (40, -1), (41, -1), (42, 65536), (43, 65536), (44, -1), (45, 16777216), (46, 2097152), (47, -1), (48, -1), (49, 33554432), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 67108864), (4, -1), (5, -1), (6, -1), (7, -1), (8, 131072), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, 67108864), (25, 134217728), (26, -1), (27, -1), (28, -1), (29, -1), (30, 262144), (31, 524288), (32, 4096), (33, 4096), (34, -1), (35, 268435456), (36, 33554432), (37, 1024), (38, 2048), (39, 2048), (40, -1), (41, -1), (42, 65536), (43, 65536), (44, -1), (45, 16777216), (46, 2097152), (47, -1), (48, -1), (49, 33554432), (50, -1), (51, -1), (52, -1)]

Covered at level 6 : set()

After reduction : 
 pending  : [3, 37, 8, 30, 33, 45, 38, 42, 43, 46, 36, 49, 31, 32, 39, 24, 25, 35]
 solution : [0, 9, 18, 26]


Solution : [0, 9, 18, 26] has cost 20.


Before backtrack at level 6
 pending : [3, 37, 8, 30, 33, 45, 38, 42, 43, 46, 36, 49, 31, 32, 39, 24, 25, 35]
 solution : [0, 9, 18, 26]

After backtrack at level 6
 pending : [3, 37, 8, 30, 33, 45, 38, 42, 43, 46, 36, 49, 31, 32, 39, 24, 25, 35]
 solution : [0, 9, 18, 26]


Invert decision for 26 at level 5


New level: 6
 pending : [3, 37, 8, 30, 33, 45, 38, 42, 43, 46, 36, 49, 31, 32, 39, 24, 25, 35]
 solution : [0, 9, 18]


Before reduction : 
 pending  : [3, 37, 8, 30, 33, 45, 38, 42, 43, 46, 36, 49, 31, 32, 39, 24, 25, 35]
 solution : [0, 9, 18]

Essensial at level 6 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 67108864), (4, -1), (5, -1), (6, -1), (7, -1), (8, 131072), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, 67108864), (25, 134217728), (26, -1), (27, -1), (28, -1), (29, -1), (30, 262144), (31, 524288), (32, 4096), (33, 4096), (34, -1), (35, 268435456), (36, 33554432), (37, 1024), (38, 2048), (39, 2048), (40, -1), (41, -1), (42, 65536), (43, 65536), (44, -1), (45, 16777216), (46, 2097152), (47, -1), (48, -1), (49, 33554432), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 67108864), (4, -1), (5, -1), (6, -1), (7, -1), (8, 131072), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, 67108864), (25, 268435456), (26, -1), (27, -1), (28, -1), (29, -1), (30, 262144), (31, 1048576), (32, 8192), (33, 4096), (34, -1), (35, 536870912), (36, 33554432), (37, 1024), (38, 2048), (39, 2048), (40, -1), (41, -1), (42, 65536), (43, 65536), (44, -1), (45, 16777216), (46, 2097152), (47, -1), (48, -1), (49, 33554432), (50, -1), (51, -1), (52, -1)]

Covered at level 6 : set()

After reduction : 
 pending  : [3, 37, 8, 30, 33, 45, 38, 42, 43, 46, 36, 49, 31, 32, 39, 24, 25, 35]
 solution : [0, 9, 18]


Solution : [0, 9, 18] has cost 16.


Decide in level 6 among pending : [3, 37, 8, 30, 33, 45, 38, 42, 43, 46, 36, 49, 31, 32, 39, 24, 25, 35]

Coverage : [(0, -1), (1, -1), (2, -1), (3, 67108864), (4, -1), (5, -1), (6, -1), (7, -1), (8, 131072), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, 67108864), (25, 268435456), (26, -1), (27, -1), (28, -1), (29, -1), (30, 262144), (31, 1048576), (32, 8192), (33, 4096), (34, -1), (35, 536870912), (36, 33554432), (37, 1024), (38, 2048), (39, 2048), (40, -1), (41, -1), (42, 65536), (43, 65536), (44, -1), (45, 16777216), (46, 2097152), (47, -1), (48, -1), (49, 33554432), (50, -1), (51, -1), (52, -1)]

Decide 35 with phase True at level 6

After decision at level 6
 pending : [3, 37, 8, 30, 33, 45, 38, 42, 43, 46, 36, 49, 31, 32, 39, 24, 25]
 solution : [0, 9, 18, 35]


New level: 7
 pending : [3, 37, 8, 30, 33, 45, 38, 42, 43, 46, 36, 49, 31, 32, 39, 24, 25]
 solution : [0, 9, 18, 35]


Before reduction : 
 pending  : [3, 37, 8, 30, 33, 45, 38, 42, 43, 46, 36, 49, 31, 32, 39, 24, 25]
 solution : [0, 9, 18, 35]

Essensial at level 7 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 67108864), (4, -1), (5, -1), (6, -1), (7, -1), (8, 131072), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, 67108864), (25, 268435456), (26, -1), (27, -1), (28, -1), (29, -1), (30, 262144), (31, 1048576), (32, 8192), (33, 4096), (34, -1), (35, 536870912), (36, 33554432), (37, 1024), (38, 2048), (39, 2048), (40, -1), (41, -1), (42, 65536), (43, 65536), (44, -1), (45, 16777216), (46, 2097152), (47, -1), (48, -1), (49, 33554432), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 67108864), (4, -1), (5, -1), (6, -1), (7, -1), (8, 32768), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, 67108864), (25, 4096), (26, -1), (27, -1), (28, -1), (29, -1), (30, 65536), (31, 0), (32, 0), (33, 1024), (34, -1), (35, -1), (36, 8388608), (37, 512), (38, 512), (39, 0), (40, -1), (41, -1), (42, 16384), (43, 16384), (44, -1), (45, 4194304), (46, 524288), (47, -1), (48, -1), (49, 8388608), (50, -1), (51, -1), (52, -1)]

Covered at level 7 : {32, 39, 31}

After reduction : 
 pending  : [3, 37, 8, 30, 33, 45, 38, 42, 43, 46, 36, 49, 24, 25]
 solution : [0, 9, 18, 35]


Before reduction : 
 pending  : [3, 37, 8, 30, 33, 45, 38, 42, 43, 46, 36, 49, 24, 25]
 solution : [0, 9, 18, 35]

Essensial at level 7 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 67108864), (4, -1), (5, -1), (6, -1), (7, -1), (8, 32768), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, 67108864), (25, 4096), (26, -1), (27, -1), (28, -1), (29, -1), (30, 65536), (31, 0), (32, 0), (33, 1024), (34, -1), (35, -1), (36, 8388608), (37, 512), (38, 512), (39, 0), (40, -1), (41, -1), (42, 16384), (43, 16384), (44, -1), (45, 4194304), (46, 524288), (47, -1), (48, -1), (49, 8388608), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 67108864), (4, -1), (5, -1), (6, -1), (7, -1), (8, 32768), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, 67108864), (25, 4096), (26, -1), (27, -1), (28, -1), (29, -1), (30, 65536), (31, -1), (32, -1), (33, 1024), (34, -1), (35, -1), (36, 8388608), (37, 512), (38, 512), (39, -1), (40, -1), (41, -1), (42, 16384), (43, 16384), (44, -1), (45, 4194304), (46, 524288), (47, -1), (48, -1), (49, 8388608), (50, -1), (51, -1), (52, -1)]

Covered at level 7 : set()

After reduction : 
 pending  : [3, 37, 8, 30, 33, 45, 38, 42, 43, 46, 36, 49, 24, 25]
 solution : [0, 9, 18, 35]


Solution : [0, 9, 18, 35] has cost 29.


Before backtrack at level 7
 pending : [3, 37, 8, 30, 33, 45, 38, 42, 43, 46, 36, 49, 24, 25]
 solution : [0, 9, 18, 35]

After backtrack at level 7
 pending : [3, 37, 8, 30, 33, 45, 38, 42, 43, 46, 36, 49, 24, 25, 31, 32, 39]
 solution : [0, 9, 18, 35]


Invert decision for 35 at level 6


New level: 7
 pending : [3, 37, 8, 30, 33, 45, 38, 42, 43, 46, 36, 49, 24, 25, 31, 32, 39]
 solution : [0, 9, 18]


Before reduction : 
 pending  : [3, 37, 8, 30, 33, 45, 38, 42, 43, 46, 36, 49, 24, 25, 31, 32, 39]
 solution : [0, 9, 18]

Essensial at level 7 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 67108864), (4, -1), (5, -1), (6, -1), (7, -1), (8, 32768), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, 67108864), (25, 4096), (26, -1), (27, -1), (28, -1), (29, -1), (30, 65536), (31, -1), (32, -1), (33, 1024), (34, -1), (35, -1), (36, 8388608), (37, 512), (38, 512), (39, -1), (40, -1), (41, -1), (42, 16384), (43, 16384), (44, -1), (45, 4194304), (46, 524288), (47, -1), (48, -1), (49, 8388608), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 67108864), (4, -1), (5, -1), (6, -1), (7, -1), (8, 131072), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, 67108864), (25, 268435456), (26, -1), (27, -1), (28, -1), (29, -1), (30, 262144), (31, 1048576), (32, 8192), (33, 4096), (34, -1), (35, -1), (36, 33554432), (37, 1024), (38, 2048), (39, 2048), (40, -1), (41, -1), (42, 65536), (43, 65536), (44, -1), (45, 16777216), (46, 2097152), (47, -1), (48, -1), (49, 33554432), (50, -1), (51, -1), (52, -1)]

Covered at level 7 : set()

After reduction : 
 pending  : [3, 37, 8, 30, 33, 45, 38, 42, 43, 46, 36, 49, 24, 25, 31, 32, 39]
 solution : [0, 9, 18]


Solution : [0, 9, 18] has cost 16.


Decide in level 7 among pending : [3, 37, 8, 30, 33, 45, 38, 42, 43, 46, 36, 49, 24, 25, 31, 32, 39]

Coverage : [(0, -1), (1, -1), (2, -1), (3, 67108864), (4, -1), (5, -1), (6, -1), (7, -1), (8, 131072), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, 67108864), (25, 268435456), (26, -1), (27, -1), (28, -1), (29, -1), (30, 262144), (31, 1048576), (32, 8192), (33, 4096), (34, -1), (35, -1), (36, 33554432), (37, 1024), (38, 2048), (39, 2048), (40, -1), (41, -1), (42, 65536), (43, 65536), (44, -1), (45, 16777216), (46, 2097152), (47, -1), (48, -1), (49, 33554432), (50, -1), (51, -1), (52, -1)]

Decide 25 with phase True at level 7

After decision at level 7
 pending : [3, 37, 8, 30, 33, 45, 38, 42, 43, 46, 36, 49, 24, 31, 32, 39]
 solution : [0, 9, 18, 25]


New level: 8
 pending : [3, 37, 8, 30, 33, 45, 38, 42, 43, 46, 36, 49, 24, 31, 32, 39]
 solution : [0, 9, 18, 25]


Before reduction : 
 pending  : [3, 37, 8, 30, 33, 45, 38, 42, 43, 46, 36, 49, 24, 31, 32, 39]
 solution : [0, 9, 18, 25]

Essensial at level 8 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 67108864), (4, -1), (5, -1), (6, -1), (7, -1), (8, 131072), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, 67108864), (25, 268435456), (26, -1), (27, -1), (28, -1), (29, -1), (30, 262144), (31, 1048576), (32, 8192), (33, 4096), (34, -1), (35, -1), (36, 33554432), (37, 1024), (38, 2048), (39, 2048), (40, -1), (41, -1), (42, 65536), (43, 65536), (44, -1), (45, 16777216), (46, 2097152), (47, -1), (48, -1), (49, 33554432), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 16777216), (4, -1), (5, -1), (6, -1), (7, -1), (8, 32768), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, 16777216), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, 65536), (31, 0), (32, 0), (33, 1024), (34, -1), (35, -1), (36, 16777216), (37, 512), (38, 512), (39, 0), (40, -1), (41, -1), (42, 16384), (43, 16384), (44, -1), (45, 8388608), (46, 524288), (47, -1), (48, -1), (49, 33554432), (50, -1), (51, -1), (52, -1)]

Covered at level 8 : {32, 39, 31}

After reduction : 
 pending  : [3, 37, 8, 30, 33, 45, 38, 42, 43, 46, 36, 49, 24]
 solution : [0, 9, 18, 25]


Before reduction : 
 pending  : [3, 37, 8, 30, 33, 45, 38, 42, 43, 46, 36, 49, 24]
 solution : [0, 9, 18, 25]

Essensial at level 8 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 16777216), (4, -1), (5, -1), (6, -1), (7, -1), (8, 32768), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, 16777216), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, 65536), (31, 0), (32, 0), (33, 1024), (34, -1), (35, -1), (36, 16777216), (37, 512), (38, 512), (39, 0), (40, -1), (41, -1), (42, 16384), (43, 16384), (44, -1), (45, 8388608), (46, 524288), (47, -1), (48, -1), (49, 33554432), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 16777216), (4, -1), (5, -1), (6, -1), (7, -1), (8, 32768), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, 16777216), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, 65536), (31, -1), (32, -1), (33, 1024), (34, -1), (35, -1), (36, 16777216), (37, 512), (38, 512), (39, -1), (40, -1), (41, -1), (42, 16384), (43, 16384), (44, -1), (45, 8388608), (46, 524288), (47, -1), (48, -1), (49, 33554432), (50, -1), (51, -1), (52, -1)]

Covered at level 8 : set()

After reduction : 
 pending  : [3, 37, 8, 30, 33, 45, 38, 42, 43, 46, 36, 49, 24]
 solution : [0, 9, 18, 25]


Solution : [0, 9, 18, 25] has cost 23.


Before backtrack at level 8
 pending : [3, 37, 8, 30, 33, 45, 38, 42, 43, 46, 36, 49, 24]
 solution : [0, 9, 18, 25]

After backtrack at level 8
 pending : [3, 37, 8, 30, 33, 45, 38, 42, 43, 46, 36, 49, 24, 31, 32, 39]
 solution : [0, 9, 18, 25]


Invert decision for 25 at level 7


New level: 8
 pending : [3, 37, 8, 30, 33, 45, 38, 42, 43, 46, 36, 49, 24, 31, 32, 39]
 solution : [0, 9, 18]


Before reduction : 
 pending  : [3, 37, 8, 30, 33, 45, 38, 42, 43, 46, 36, 49, 24, 31, 32, 39]
 solution : [0, 9, 18]

Essensial at level 8 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 16777216), (4, -1), (5, -1), (6, -1), (7, -1), (8, 32768), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, 16777216), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, 65536), (31, -1), (32, -1), (33, 1024), (34, -1), (35, -1), (36, 16777216), (37, 512), (38, 512), (39, -1), (40, -1), (41, -1), (42, 16384), (43, 16384), (44, -1), (45, 8388608), (46, 524288), (47, -1), (48, -1), (49, 33554432), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 67108864), (4, -1), (5, -1), (6, -1), (7, -1), (8, 131072), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, 67108864), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, 262144), (31, 1048576), (32, 8192), (33, 4096), (34, -1), (35, -1), (36, 33554432), (37, 1024), (38, 2048), (39, 2048), (40, -1), (41, -1), (42, 65536), (43, 65536), (44, -1), (45, 16777216), (46, 2097152), (47, -1), (48, -1), (49, 33554432), (50, -1), (51, -1), (52, -1)]

Covered at level 8 : set()

After reduction : 
 pending  : [3, 37, 8, 30, 33, 45, 38, 42, 43, 46, 36, 49, 24, 31, 32, 39]
 solution : [0, 9, 18]


Solution : [0, 9, 18] has cost 16.


Decide in level 8 among pending : [3, 37, 8, 30, 33, 45, 38, 42, 43, 46, 36, 49, 24, 31, 32, 39]

Coverage : [(0, -1), (1, -1), (2, -1), (3, 67108864), (4, -1), (5, -1), (6, -1), (7, -1), (8, 131072), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, 67108864), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, 262144), (31, 1048576), (32, 8192), (33, 4096), (34, -1), (35, -1), (36, 33554432), (37, 1024), (38, 2048), (39, 2048), (40, -1), (41, -1), (42, 65536), (43, 65536), (44, -1), (45, 16777216), (46, 2097152), (47, -1), (48, -1), (49, 33554432), (50, -1), (51, -1), (52, -1)]

Decide 3 with phase True at level 8

After decision at level 8
 pending : [37, 8, 30, 33, 45, 38, 42, 43, 46, 36, 49, 24, 31, 32, 39]
 solution : [0, 9, 18, 3]


New level: 9
 pending : [37, 8, 30, 33, 45, 38, 42, 43, 46, 36, 49, 24, 31, 32, 39]
 solution : [0, 9, 18, 3]


Before reduction : 
 pending  : [37, 8, 30, 33, 45, 38, 42, 43, 46, 36, 49, 24, 31, 32, 39]
 solution : [0, 9, 18, 3]

Essensial at level 9 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 67108864), (4, -1), (5, -1), (6, -1), (7, -1), (8, 131072), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, 67108864), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, 262144), (31, 1048576), (32, 8192), (33, 4096), (34, -1), (35, -1), (36, 33554432), (37, 1024), (38, 2048), (39, 2048), (40, -1), (41, -1), (42, 65536), (43, 65536), (44, -1), (45, 16777216), (46, 2097152), (47, -1), (48, -1), (49, 33554432), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, 0), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, 0), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, 0), (31, 0), (32, 0), (33, 0), (34, -1), (35, -1), (36, 0), (37, 0), (38, 0), (39, 0), (40, -1), (41, -1), (42, 0), (43, 0), (44, -1), (45, 0), (46, 0), (47, -1), (48, -1), (49, 0), (50, -1), (51, -1), (52, -1)]

Covered at level 9 : {32, 33, 36, 37, 38, 39, 8, 42, 43, 45, 46, 49, 24, 30, 31}

After reduction : 
 pending  : []
 solution : [0, 9, 18, 3]


Before reduction : 
 pending  : []
 solution : [0, 9, 18, 3]

Essensial at level 9 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, 0), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, 0), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, 0), (31, 0), (32, 0), (33, 0), (34, -1), (35, -1), (36, 0), (37, 0), (38, 0), (39, 0), (40, -1), (41, -1), (42, 0), (43, 0), (44, -1), (45, 0), (46, 0), (47, -1), (48, -1), (49, 0), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 9 : set()

After reduction : 
 pending  : []
 solution : [0, 9, 18, 3]


Solution : [0, 9, 18, 3] has cost 20.


Before backtrack at level 9
 pending : []
 solution : [0, 9, 18, 3]

After backtrack at level 9
 pending : [37, 8, 30, 33, 45, 38, 42, 43, 46, 36, 49, 24, 31, 32, 39]
 solution : [0, 9, 18, 3]


Invert decision for 3 at level 8


New level: 9
 pending : [37, 8, 30, 33, 45, 38, 42, 43, 46, 36, 49, 24, 31, 32, 39]
 solution : [0, 9, 18]


Before reduction : 
 pending  : [37, 8, 30, 33, 45, 38, 42, 43, 46, 36, 49, 24, 31, 32, 39]
 solution : [0, 9, 18]

Essensial at level 9 : {24}

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, 0), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, 0), (31, 0), (32, 0), (33, 0), (34, -1), (35, -1), (36, 0), (37, 0), (38, 0), (39, 0), (40, -1), (41, -1), (42, 0), (43, 0), (44, -1), (45, 0), (46, 0), (47, -1), (48, -1), (49, 0), (50, -1), (51, -1), (52, -1)]

Covered at level 9 : {32, 33, 36, 37, 38, 39, 8, 42, 43, 45, 46, 49, 30, 31}

After reduction : 
 pending  : []
 solution : [0, 9, 18, 24]


Before reduction : 
 pending  : []
 solution : [0, 9, 18, 24]

Essensial at level 9 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, 0), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, 0), (31, 0), (32, 0), (33, 0), (34, -1), (35, -1), (36, 0), (37, 0), (38, 0), (39, 0), (40, -1), (41, -1), (42, 0), (43, 0), (44, -1), (45, 0), (46, 0), (47, -1), (48, -1), (49, 0), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 9 : set()

After reduction : 
 pending  : []
 solution : [0, 9, 18, 24]


Solution : [0, 9, 18, 24] has cost 23.


Before backtrack at level 9
 pending : []
 solution : [0, 9, 18, 24]

After backtrack at level 9
 pending : [24, 37, 8, 30, 33, 45, 38, 42, 43, 46, 36, 49, 31, 32, 39]
 solution : [0, 9, 18]


Before backtrack at level 8
 pending : [24, 37, 8, 30, 33, 45, 38, 42, 43, 46, 36, 49, 31, 32, 39]
 solution : [0, 9, 18]

After backtrack at level 8
 pending : [24, 37, 8, 30, 33, 45, 38, 42, 43, 46, 36, 49, 31, 32, 39, 3]
 solution : [0, 9, 18]


Before backtrack at level 7
 pending : [24, 37, 8, 30, 33, 45, 38, 42, 43, 46, 36, 49, 31, 32, 39, 3]
 solution : [0, 9, 18]

After backtrack at level 7
 pending : [24, 37, 8, 30, 33, 45, 38, 42, 43, 46, 36, 49, 31, 32, 39, 3, 25]
 solution : [0, 9, 18]


Before backtrack at level 6
 pending : [24, 37, 8, 30, 33, 45, 38, 42, 43, 46, 36, 49, 31, 32, 39, 3, 25]
 solution : [0, 9, 18]

After backtrack at level 6
 pending : [24, 37, 8, 30, 33, 45, 38, 42, 43, 46, 36, 49, 31, 32, 39, 3, 25, 35]
 solution : [0, 9, 18]


Before backtrack at level 5
 pending : [24, 37, 8, 30, 33, 45, 38, 42, 43, 46, 36, 49, 31, 32, 39, 3, 25, 35]
 solution : [0, 9, 18]

After backtrack at level 5
 pending : [24, 37, 8, 30, 33, 45, 38, 42, 43, 46, 36, 49, 31, 32, 39, 3, 25, 35, 23, 40, 5, 15, 16, 22, 21, 14, 20, 13, 19, 26]
 solution : [0, 9, 18]


Invert decision for 18 at level 4


New level: 5
 pending : [24, 37, 8, 30, 33, 45, 38, 42, 43, 46, 36, 49, 31, 32, 39, 3, 25, 35, 23, 40, 5, 15, 16, 22, 21, 14, 20, 13, 19, 26]
 solution : [0, 9]


Before reduction : 
 pending  : [24, 37, 8, 30, 33, 45, 38, 42, 43, 46, 36, 49, 31, 32, 39, 3, 25, 35, 23, 40, 5, 15, 16, 22, 21, 14, 20, 13, 19, 26]
 solution : [0, 9]

Essensial at level 5 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 67108864), (4, -1), (5, 524288), (6, -1), (7, -1), (8, 524288), (9, -1), (10, -1), (11, -1), (12, -1), (13, 33554432), (14, 16777216), (15, 786432), (16, 262144), (17, -1), (18, -1), (19, 536870912), (20, 8388608), (21, 4194304), (22, 131072), (23, 2097152), (24, 67108864), (25, 268435456), (26, 536870912), (27, -1), (28, -1), (29, -1), (30, 524288), (31, 1048576), (32, 8192), (33, 8192), (34, -1), (35, 536870912), (36, 67108864), (37, 67108864), (38, 8192), (39, 134217728), (40, 2097152), (41, -1), (42, 262144), (43, 262144), (44, -1), (45, 33554432), (46, 8388608), (47, -1), (48, -1), (49, 33554432), (50, -1), (51, -1), (52, -1)]

Covered at level 5 : set()

After reduction : 
 pending  : [24, 37, 8, 30, 33, 45, 38, 42, 43, 46, 36, 49, 31, 32, 39, 3, 25, 35, 23, 40, 5, 15, 16, 22, 21, 14, 20, 13, 19, 26]
 solution : [0, 9]


Solution : [0, 9] has cost 9.


Decide in level 5 among pending : [24, 37, 8, 30, 33, 45, 38, 42, 43, 46, 36, 49, 31, 32, 39, 3, 25, 35, 23, 40, 5, 15, 16, 22, 21, 14, 20, 13, 19, 26]

Coverage : [(0, -1), (1, -1), (2, -1), (3, 67108864), (4, -1), (5, 524288), (6, -1), (7, -1), (8, 524288), (9, -1), (10, -1), (11, -1), (12, -1), (13, 33554432), (14, 16777216), (15, 786432), (16, 262144), (17, -1), (18, -1), (19, 536870912), (20, 8388608), (21, 4194304), (22, 131072), (23, 2097152), (24, 67108864), (25, 268435456), (26, 536870912), (27, -1), (28, -1), (29, -1), (30, 524288), (31, 1048576), (32, 8192), (33, 8192), (34, -1), (35, 536870912), (36, 67108864), (37, 67108864), (38, 8192), (39, 134217728), (40, 2097152), (41, -1), (42, 262144), (43, 262144), (44, -1), (45, 33554432), (46, 8388608), (47, -1), (48, -1), (49, 33554432), (50, -1), (51, -1), (52, -1)]

Decide 35 with phase True at level 5

After decision at level 5
 pending : [24, 37, 8, 30, 33, 45, 38, 42, 43, 46, 36, 49, 31, 32, 39, 3, 25, 23, 40, 5, 15, 16, 22, 21, 14, 20, 13, 19, 26]
 solution : [0, 9, 35]


New level: 6
 pending : [24, 37, 8, 30, 33, 45, 38, 42, 43, 46, 36, 49, 31, 32, 39, 3, 25, 23, 40, 5, 15, 16, 22, 21, 14, 20, 13, 19, 26]
 solution : [0, 9, 35]


Before reduction : 
 pending  : [24, 37, 8, 30, 33, 45, 38, 42, 43, 46, 36, 49, 31, 32, 39, 3, 25, 23, 40, 5, 15, 16, 22, 21, 14, 20, 13, 19, 26]
 solution : [0, 9, 35]

Essensial at level 6 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 67108864), (4, -1), (5, 524288), (6, -1), (7, -1), (8, 524288), (9, -1), (10, -1), (11, -1), (12, -1), (13, 33554432), (14, 16777216), (15, 786432), (16, 262144), (17, -1), (18, -1), (19, 536870912), (20, 8388608), (21, 4194304), (22, 131072), (23, 2097152), (24, 67108864), (25, 268435456), (26, 536870912), (27, -1), (28, -1), (29, -1), (30, 524288), (31, 1048576), (32, 8192), (33, 8192), (34, -1), (35, 536870912), (36, 67108864), (37, 67108864), (38, 8192), (39, 134217728), (40, 2097152), (41, -1), (42, 262144), (43, 262144), (44, -1), (45, 33554432), (46, 8388608), (47, -1), (48, -1), (49, 33554432), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 67108864), (4, -1), (5, 524288), (6, -1), (7, -1), (8, 131072), (9, -1), (10, -1), (11, -1), (12, -1), (13, 33554432), (14, 16777216), (15, 786432), (16, 262144), (17, -1), (18, -1), (19, 536870912), (20, 8388608), (21, 4194304), (22, 131072), (23, 2097152), (24, 67108864), (25, 8192), (26, 536870912), (27, -1), (28, -1), (29, -1), (30, 131072), (31, 0), (32, 0), (33, 2048), (34, -1), (35, -1), (36, 16777216), (37, 67108864), (38, 2048), (39, 4096), (40, 2097152), (41, -1), (42, 65536), (43, 65536), (44, -1), (45, 8388608), (46, 2097152), (47, -1), (48, -1), (49, 8388608), (50, -1), (51, -1), (52, -1)]

Covered at level 6 : {32, 31}

After reduction : 
 pending  : [24, 37, 8, 30, 33, 45, 38, 42, 43, 46, 36, 49, 39, 3, 25, 23, 40, 5, 15, 16, 22, 21, 14, 20, 13, 19, 26]
 solution : [0, 9, 35]


Before reduction : 
 pending  : [24, 37, 8, 30, 33, 45, 38, 42, 43, 46, 36, 49, 39, 3, 25, 23, 40, 5, 15, 16, 22, 21, 14, 20, 13, 19, 26]
 solution : [0, 9, 35]

Essensial at level 6 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 67108864), (4, -1), (5, 524288), (6, -1), (7, -1), (8, 131072), (9, -1), (10, -1), (11, -1), (12, -1), (13, 33554432), (14, 16777216), (15, 786432), (16, 262144), (17, -1), (18, -1), (19, 536870912), (20, 8388608), (21, 4194304), (22, 131072), (23, 2097152), (24, 67108864), (25, 8192), (26, 536870912), (27, -1), (28, -1), (29, -1), (30, 131072), (31, 0), (32, 0), (33, 2048), (34, -1), (35, -1), (36, 16777216), (37, 67108864), (38, 2048), (39, 4096), (40, 2097152), (41, -1), (42, 65536), (43, 65536), (44, -1), (45, 8388608), (46, 2097152), (47, -1), (48, -1), (49, 8388608), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 67108864), (4, -1), (5, 524288), (6, -1), (7, -1), (8, 131072), (9, -1), (10, -1), (11, -1), (12, -1), (13, 33554432), (14, 16777216), (15, 786432), (16, 262144), (17, -1), (18, -1), (19, 536870912), (20, 8388608), (21, 4194304), (22, 131072), (23, 2097152), (24, 67108864), (25, 8192), (26, 536870912), (27, -1), (28, -1), (29, -1), (30, 131072), (31, -1), (32, -1), (33, 2048), (34, -1), (35, -1), (36, 16777216), (37, 67108864), (38, 2048), (39, 4096), (40, 2097152), (41, -1), (42, 65536), (43, 65536), (44, -1), (45, 8388608), (46, 2097152), (47, -1), (48, -1), (49, 8388608), (50, -1), (51, -1), (52, -1)]

Covered at level 6 : set()

After reduction : 
 pending  : [24, 37, 8, 30, 33, 45, 38, 42, 43, 46, 36, 49, 39, 3, 25, 23, 40, 5, 15, 16, 22, 21, 14, 20, 13, 19, 26]
 solution : [0, 9, 35]


Solution : [0, 9, 35] has cost 22.


Before backtrack at level 6
 pending : [24, 37, 8, 30, 33, 45, 38, 42, 43, 46, 36, 49, 39, 3, 25, 23, 40, 5, 15, 16, 22, 21, 14, 20, 13, 19, 26]
 solution : [0, 9, 35]

After backtrack at level 6
 pending : [24, 37, 8, 30, 33, 45, 38, 42, 43, 46, 36, 49, 39, 3, 25, 23, 40, 5, 15, 16, 22, 21, 14, 20, 13, 19, 26, 31, 32]
 solution : [0, 9, 35]


Invert decision for 35 at level 5


New level: 6
 pending : [24, 37, 8, 30, 33, 45, 38, 42, 43, 46, 36, 49, 39, 3, 25, 23, 40, 5, 15, 16, 22, 21, 14, 20, 13, 19, 26, 31, 32]
 solution : [0, 9]


Before reduction : 
 pending  : [24, 37, 8, 30, 33, 45, 38, 42, 43, 46, 36, 49, 39, 3, 25, 23, 40, 5, 15, 16, 22, 21, 14, 20, 13, 19, 26, 31, 32]
 solution : [0, 9]

Essensial at level 6 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 67108864), (4, -1), (5, 524288), (6, -1), (7, -1), (8, 131072), (9, -1), (10, -1), (11, -1), (12, -1), (13, 33554432), (14, 16777216), (15, 786432), (16, 262144), (17, -1), (18, -1), (19, 536870912), (20, 8388608), (21, 4194304), (22, 131072), (23, 2097152), (24, 67108864), (25, 8192), (26, 536870912), (27, -1), (28, -1), (29, -1), (30, 131072), (31, -1), (32, -1), (33, 2048), (34, -1), (35, -1), (36, 16777216), (37, 67108864), (38, 2048), (39, 4096), (40, 2097152), (41, -1), (42, 65536), (43, 65536), (44, -1), (45, 8388608), (46, 2097152), (47, -1), (48, -1), (49, 8388608), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 67108864), (4, -1), (5, 524288), (6, -1), (7, -1), (8, 524288), (9, -1), (10, -1), (11, -1), (12, -1), (13, 33554432), (14, 16777216), (15, 786432), (16, 262144), (17, -1), (18, -1), (19, 536870912), (20, 8388608), (21, 4194304), (22, 131072), (23, 2097152), (24, 67108864), (25, 268435456), (26, 536870912), (27, -1), (28, -1), (29, -1), (30, 524288), (31, 1048576), (32, 8192), (33, 8192), (34, -1), (35, -1), (36, 67108864), (37, 67108864), (38, 8192), (39, 134217728), (40, 2097152), (41, -1), (42, 262144), (43, 262144), (44, -1), (45, 33554432), (46, 8388608), (47, -1), (48, -1), (49, 33554432), (50, -1), (51, -1), (52, -1)]

Covered at level 6 : set()

After reduction : 
 pending  : [24, 37, 8, 30, 33, 45, 38, 42, 43, 46, 36, 49, 39, 3, 25, 23, 40, 5, 15, 16, 22, 21, 14, 20, 13, 19, 26, 31, 32]
 solution : [0, 9]


Solution : [0, 9] has cost 9.


Decide in level 6 among pending : [24, 37, 8, 30, 33, 45, 38, 42, 43, 46, 36, 49, 39, 3, 25, 23, 40, 5, 15, 16, 22, 21, 14, 20, 13, 19, 26, 31, 32]

Coverage : [(0, -1), (1, -1), (2, -1), (3, 67108864), (4, -1), (5, 524288), (6, -1), (7, -1), (8, 524288), (9, -1), (10, -1), (11, -1), (12, -1), (13, 33554432), (14, 16777216), (15, 786432), (16, 262144), (17, -1), (18, -1), (19, 536870912), (20, 8388608), (21, 4194304), (22, 131072), (23, 2097152), (24, 67108864), (25, 268435456), (26, 536870912), (27, -1), (28, -1), (29, -1), (30, 524288), (31, 1048576), (32, 8192), (33, 8192), (34, -1), (35, -1), (36, 67108864), (37, 67108864), (38, 8192), (39, 134217728), (40, 2097152), (41, -1), (42, 262144), (43, 262144), (44, -1), (45, 33554432), (46, 8388608), (47, -1), (48, -1), (49, 33554432), (50, -1), (51, -1), (52, -1)]

Decide 19 with phase True at level 6

After decision at level 6
 pending : [24, 37, 8, 30, 33, 45, 38, 42, 43, 46, 36, 49, 39, 3, 25, 23, 40, 5, 15, 16, 22, 21, 14, 20, 13, 26, 31, 32]
 solution : [0, 9, 19]


New level: 7
 pending : [24, 37, 8, 30, 33, 45, 38, 42, 43, 46, 36, 49, 39, 3, 25, 23, 40, 5, 15, 16, 22, 21, 14, 20, 13, 26, 31, 32]
 solution : [0, 9, 19]


Before reduction : 
 pending  : [24, 37, 8, 30, 33, 45, 38, 42, 43, 46, 36, 49, 39, 3, 25, 23, 40, 5, 15, 16, 22, 21, 14, 20, 13, 26, 31, 32]
 solution : [0, 9, 19]

Essensial at level 7 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 67108864), (4, -1), (5, 524288), (6, -1), (7, -1), (8, 524288), (9, -1), (10, -1), (11, -1), (12, -1), (13, 33554432), (14, 16777216), (15, 786432), (16, 262144), (17, -1), (18, -1), (19, 536870912), (20, 8388608), (21, 4194304), (22, 131072), (23, 2097152), (24, 67108864), (25, 268435456), (26, 536870912), (27, -1), (28, -1), (29, -1), (30, 524288), (31, 1048576), (32, 8192), (33, 8192), (34, -1), (35, -1), (36, 67108864), (37, 67108864), (38, 8192), (39, 134217728), (40, 2097152), (41, -1), (42, 262144), (43, 262144), (44, -1), (45, 33554432), (46, 8388608), (47, -1), (48, -1), (49, 33554432), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 67108864), (4, -1), (5, 0), (6, -1), (7, -1), (8, 131072), (9, -1), (10, -1), (11, -1), (12, -1), (13, 0), (14, 0), (15, 0), (16, 0), (17, -1), (18, -1), (19, -1), (20, 0), (21, 0), (22, 0), (23, 0), (24, 67108864), (25, 268435456), (26, 536870912), (27, -1), (28, -1), (29, -1), (30, 262144), (31, 1048576), (32, 8192), (33, 4096), (34, -1), (35, -1), (36, 33554432), (37, 1024), (38, 2048), (39, 2048), (40, 0), (41, -1), (42, 65536), (43, 65536), (44, -1), (45, 33554432), (46, 8388608), (47, -1), (48, -1), (49, 33554432), (50, -1), (51, -1), (52, -1)]

Covered at level 7 : {5, 40, 13, 14, 15, 16, 20, 21, 22, 23}

After reduction : 
 pending  : [24, 37, 8, 30, 33, 45, 38, 42, 43, 46, 36, 49, 39, 3, 25, 26, 31, 32]
 solution : [0, 9, 19]


Before reduction : 
 pending  : [24, 37, 8, 30, 33, 45, 38, 42, 43, 46, 36, 49, 39, 3, 25, 26, 31, 32]
 solution : [0, 9, 19]

Essensial at level 7 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 67108864), (4, -1), (5, 0), (6, -1), (7, -1), (8, 131072), (9, -1), (10, -1), (11, -1), (12, -1), (13, 0), (14, 0), (15, 0), (16, 0), (17, -1), (18, -1), (19, -1), (20, 0), (21, 0), (22, 0), (23, 0), (24, 67108864), (25, 268435456), (26, 536870912), (27, -1), (28, -1), (29, -1), (30, 262144), (31, 1048576), (32, 8192), (33, 4096), (34, -1), (35, -1), (36, 33554432), (37, 1024), (38, 2048), (39, 2048), (40, 0), (41, -1), (42, 65536), (43, 65536), (44, -1), (45, 33554432), (46, 8388608), (47, -1), (48, -1), (49, 33554432), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 67108864), (4, -1), (5, -1), (6, -1), (7, -1), (8, 131072), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, 67108864), (25, 268435456), (26, 536870912), (27, -1), (28, -1), (29, -1), (30, 262144), (31, 1048576), (32, 8192), (33, 4096), (34, -1), (35, -1), (36, 33554432), (37, 1024), (38, 2048), (39, 2048), (40, -1), (41, -1), (42, 65536), (43, 65536), (44, -1), (45, 33554432), (46, 8388608), (47, -1), (48, -1), (49, 33554432), (50, -1), (51, -1), (52, -1)]

Covered at level 7 : set()

After reduction : 
 pending  : [24, 37, 8, 30, 33, 45, 38, 42, 43, 46, 36, 49, 39, 3, 25, 26, 31, 32]
 solution : [0, 9, 19]


Solution : [0, 9, 19] has cost 16.


Decide in level 7 among pending : [24, 37, 8, 30, 33, 45, 38, 42, 43, 46, 36, 49, 39, 3, 25, 26, 31, 32]

Coverage : [(0, -1), (1, -1), (2, -1), (3, 67108864), (4, -1), (5, -1), (6, -1), (7, -1), (8, 131072), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, 67108864), (25, 268435456), (26, 536870912), (27, -1), (28, -1), (29, -1), (30, 262144), (31, 1048576), (32, 8192), (33, 4096), (34, -1), (35, -1), (36, 33554432), (37, 1024), (38, 2048), (39, 2048), (40, -1), (41, -1), (42, 65536), (43, 65536), (44, -1), (45, 33554432), (46, 8388608), (47, -1), (48, -1), (49, 33554432), (50, -1), (51, -1), (52, -1)]

Decide 26 with phase True at level 7

After decision at level 7
 pending : [24, 37, 8, 30, 33, 45, 38, 42, 43, 46, 36, 49, 39, 3, 25, 31, 32]
 solution : [0, 9, 19, 26]


New level: 8
 pending : [24, 37, 8, 30, 33, 45, 38, 42, 43, 46, 36, 49, 39, 3, 25, 31, 32]
 solution : [0, 9, 19, 26]


Before reduction : 
 pending  : [24, 37, 8, 30, 33, 45, 38, 42, 43, 46, 36, 49, 39, 3, 25, 31, 32]
 solution : [0, 9, 19, 26]

Essensial at level 8 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 67108864), (4, -1), (5, -1), (6, -1), (7, -1), (8, 131072), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, 67108864), (25, 268435456), (26, 536870912), (27, -1), (28, -1), (29, -1), (30, 262144), (31, 1048576), (32, 8192), (33, 4096), (34, -1), (35, -1), (36, 33554432), (37, 1024), (38, 2048), (39, 2048), (40, -1), (41, -1), (42, 65536), (43, 65536), (44, -1), (45, 33554432), (46, 8388608), (47, -1), (48, -1), (49, 33554432), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 67108864), (4, -1), (5, -1), (6, -1), (7, -1), (8, 131072), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, 67108864), (25, 134217728), (26, -1), (27, -1), (28, -1), (29, -1), (30, 262144), (31, 524288), (32, 4096), (33, 4096), (34, -1), (35, -1), (36, 33554432), (37, 1024), (38, 2048), (39, 2048), (40, -1), (41, -1), (42, 65536), (43, 65536), (44, -1), (45, 33554432), (46, 8388608), (47, -1), (48, -1), (49, 33554432), (50, -1), (51, -1), (52, -1)]

Covered at level 8 : set()

After reduction : 
 pending  : [24, 37, 8, 30, 33, 45, 38, 42, 43, 46, 36, 49, 39, 3, 25, 31, 32]
 solution : [0, 9, 19, 26]


Solution : [0, 9, 19, 26] has cost 20.


Before backtrack at level 8
 pending : [24, 37, 8, 30, 33, 45, 38, 42, 43, 46, 36, 49, 39, 3, 25, 31, 32]
 solution : [0, 9, 19, 26]

After backtrack at level 8
 pending : [24, 37, 8, 30, 33, 45, 38, 42, 43, 46, 36, 49, 39, 3, 25, 31, 32]
 solution : [0, 9, 19, 26]


Invert decision for 26 at level 7


New level: 8
 pending : [24, 37, 8, 30, 33, 45, 38, 42, 43, 46, 36, 49, 39, 3, 25, 31, 32]
 solution : [0, 9, 19]


Before reduction : 
 pending  : [24, 37, 8, 30, 33, 45, 38, 42, 43, 46, 36, 49, 39, 3, 25, 31, 32]
 solution : [0, 9, 19]

Essensial at level 8 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 67108864), (4, -1), (5, -1), (6, -1), (7, -1), (8, 131072), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, 67108864), (25, 134217728), (26, -1), (27, -1), (28, -1), (29, -1), (30, 262144), (31, 524288), (32, 4096), (33, 4096), (34, -1), (35, -1), (36, 33554432), (37, 1024), (38, 2048), (39, 2048), (40, -1), (41, -1), (42, 65536), (43, 65536), (44, -1), (45, 33554432), (46, 8388608), (47, -1), (48, -1), (49, 33554432), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 67108864), (4, -1), (5, -1), (6, -1), (7, -1), (8, 131072), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, 67108864), (25, 268435456), (26, -1), (27, -1), (28, -1), (29, -1), (30, 262144), (31, 1048576), (32, 8192), (33, 4096), (34, -1), (35, -1), (36, 33554432), (37, 1024), (38, 2048), (39, 2048), (40, -1), (41, -1), (42, 65536), (43, 65536), (44, -1), (45, 33554432), (46, 8388608), (47, -1), (48, -1), (49, 33554432), (50, -1), (51, -1), (52, -1)]

Covered at level 8 : set()

After reduction : 
 pending  : [24, 37, 8, 30, 33, 45, 38, 42, 43, 46, 36, 49, 39, 3, 25, 31, 32]
 solution : [0, 9, 19]


Solution : [0, 9, 19] has cost 16.


Decide in level 8 among pending : [24, 37, 8, 30, 33, 45, 38, 42, 43, 46, 36, 49, 39, 3, 25, 31, 32]

Coverage : [(0, -1), (1, -1), (2, -1), (3, 67108864), (4, -1), (5, -1), (6, -1), (7, -1), (8, 131072), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, 67108864), (25, 268435456), (26, -1), (27, -1), (28, -1), (29, -1), (30, 262144), (31, 1048576), (32, 8192), (33, 4096), (34, -1), (35, -1), (36, 33554432), (37, 1024), (38, 2048), (39, 2048), (40, -1), (41, -1), (42, 65536), (43, 65536), (44, -1), (45, 33554432), (46, 8388608), (47, -1), (48, -1), (49, 33554432), (50, -1), (51, -1), (52, -1)]

Decide 25 with phase True at level 8

After decision at level 8
 pending : [24, 37, 8, 30, 33, 45, 38, 42, 43, 46, 36, 49, 39, 3, 31, 32]
 solution : [0, 9, 19, 25]


New level: 9
 pending : [24, 37, 8, 30, 33, 45, 38, 42, 43, 46, 36, 49, 39, 3, 31, 32]
 solution : [0, 9, 19, 25]


Before reduction : 
 pending  : [24, 37, 8, 30, 33, 45, 38, 42, 43, 46, 36, 49, 39, 3, 31, 32]
 solution : [0, 9, 19, 25]

Essensial at level 9 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 67108864), (4, -1), (5, -1), (6, -1), (7, -1), (8, 131072), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, 67108864), (25, 268435456), (26, -1), (27, -1), (28, -1), (29, -1), (30, 262144), (31, 1048576), (32, 8192), (33, 4096), (34, -1), (35, -1), (36, 33554432), (37, 1024), (38, 2048), (39, 2048), (40, -1), (41, -1), (42, 65536), (43, 65536), (44, -1), (45, 33554432), (46, 8388608), (47, -1), (48, -1), (49, 33554432), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 16777216), (4, -1), (5, -1), (6, -1), (7, -1), (8, 32768), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, 16777216), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, 65536), (31, 0), (32, 0), (33, 1024), (34, -1), (35, -1), (36, 16777216), (37, 512), (38, 512), (39, 0), (40, -1), (41, -1), (42, 16384), (43, 16384), (44, -1), (45, 16777216), (46, 2097152), (47, -1), (48, -1), (49, 33554432), (50, -1), (51, -1), (52, -1)]

Covered at level 9 : {32, 31, 39}

After reduction : 
 pending  : [24, 37, 8, 30, 33, 45, 38, 42, 43, 46, 36, 49, 3]
 solution : [0, 9, 19, 25]


Before reduction : 
 pending  : [24, 37, 8, 30, 33, 45, 38, 42, 43, 46, 36, 49, 3]
 solution : [0, 9, 19, 25]

Essensial at level 9 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 16777216), (4, -1), (5, -1), (6, -1), (7, -1), (8, 32768), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, 16777216), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, 65536), (31, 0), (32, 0), (33, 1024), (34, -1), (35, -1), (36, 16777216), (37, 512), (38, 512), (39, 0), (40, -1), (41, -1), (42, 16384), (43, 16384), (44, -1), (45, 16777216), (46, 2097152), (47, -1), (48, -1), (49, 33554432), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 16777216), (4, -1), (5, -1), (6, -1), (7, -1), (8, 32768), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, 16777216), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, 65536), (31, -1), (32, -1), (33, 1024), (34, -1), (35, -1), (36, 16777216), (37, 512), (38, 512), (39, -1), (40, -1), (41, -1), (42, 16384), (43, 16384), (44, -1), (45, 16777216), (46, 2097152), (47, -1), (48, -1), (49, 33554432), (50, -1), (51, -1), (52, -1)]

Covered at level 9 : set()

After reduction : 
 pending  : [24, 37, 8, 30, 33, 45, 38, 42, 43, 46, 36, 49, 3]
 solution : [0, 9, 19, 25]


Solution : [0, 9, 19, 25] has cost 23.


Before backtrack at level 9
 pending : [24, 37, 8, 30, 33, 45, 38, 42, 43, 46, 36, 49, 3]
 solution : [0, 9, 19, 25]

After backtrack at level 9
 pending : [24, 37, 8, 30, 33, 45, 38, 42, 43, 46, 36, 49, 3, 39, 31, 32]
 solution : [0, 9, 19, 25]


Invert decision for 25 at level 8


New level: 9
 pending : [24, 37, 8, 30, 33, 45, 38, 42, 43, 46, 36, 49, 3, 39, 31, 32]
 solution : [0, 9, 19]


Before reduction : 
 pending  : [24, 37, 8, 30, 33, 45, 38, 42, 43, 46, 36, 49, 3, 39, 31, 32]
 solution : [0, 9, 19]

Essensial at level 9 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 16777216), (4, -1), (5, -1), (6, -1), (7, -1), (8, 32768), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, 16777216), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, 65536), (31, -1), (32, -1), (33, 1024), (34, -1), (35, -1), (36, 16777216), (37, 512), (38, 512), (39, -1), (40, -1), (41, -1), (42, 16384), (43, 16384), (44, -1), (45, 16777216), (46, 2097152), (47, -1), (48, -1), (49, 33554432), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 67108864), (4, -1), (5, -1), (6, -1), (7, -1), (8, 131072), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, 67108864), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, 262144), (31, 1048576), (32, 8192), (33, 4096), (34, -1), (35, -1), (36, 33554432), (37, 1024), (38, 2048), (39, 2048), (40, -1), (41, -1), (42, 65536), (43, 65536), (44, -1), (45, 33554432), (46, 8388608), (47, -1), (48, -1), (49, 33554432), (50, -1), (51, -1), (52, -1)]

Covered at level 9 : set()

After reduction : 
 pending  : [24, 37, 8, 30, 33, 45, 38, 42, 43, 46, 36, 49, 3, 39, 31, 32]
 solution : [0, 9, 19]


Solution : [0, 9, 19] has cost 16.


Decide in level 9 among pending : [24, 37, 8, 30, 33, 45, 38, 42, 43, 46, 36, 49, 3, 39, 31, 32]

Coverage : [(0, -1), (1, -1), (2, -1), (3, 67108864), (4, -1), (5, -1), (6, -1), (7, -1), (8, 131072), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, 67108864), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, 262144), (31, 1048576), (32, 8192), (33, 4096), (34, -1), (35, -1), (36, 33554432), (37, 1024), (38, 2048), (39, 2048), (40, -1), (41, -1), (42, 65536), (43, 65536), (44, -1), (45, 33554432), (46, 8388608), (47, -1), (48, -1), (49, 33554432), (50, -1), (51, -1), (52, -1)]

Decide 24 with phase True at level 9

After decision at level 9
 pending : [37, 8, 30, 33, 45, 38, 42, 43, 46, 36, 49, 3, 39, 31, 32]
 solution : [0, 9, 19, 24]


New level: 10
 pending : [37, 8, 30, 33, 45, 38, 42, 43, 46, 36, 49, 3, 39, 31, 32]
 solution : [0, 9, 19, 24]


Before reduction : 
 pending  : [37, 8, 30, 33, 45, 38, 42, 43, 46, 36, 49, 3, 39, 31, 32]
 solution : [0, 9, 19, 24]

Essensial at level 10 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 67108864), (4, -1), (5, -1), (6, -1), (7, -1), (8, 131072), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, 67108864), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, 262144), (31, 1048576), (32, 8192), (33, 4096), (34, -1), (35, -1), (36, 33554432), (37, 1024), (38, 2048), (39, 2048), (40, -1), (41, -1), (42, 65536), (43, 65536), (44, -1), (45, 33554432), (46, 8388608), (47, -1), (48, -1), (49, 33554432), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 0), (4, -1), (5, -1), (6, -1), (7, -1), (8, 0), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, 0), (31, 0), (32, 0), (33, 0), (34, -1), (35, -1), (36, 0), (37, 0), (38, 0), (39, 0), (40, -1), (41, -1), (42, 0), (43, 0), (44, -1), (45, 0), (46, 0), (47, -1), (48, -1), (49, 0), (50, -1), (51, -1), (52, -1)]

Covered at level 10 : {32, 33, 3, 36, 37, 38, 39, 8, 42, 43, 45, 46, 49, 30, 31}

After reduction : 
 pending  : []
 solution : [0, 9, 19, 24]


Before reduction : 
 pending  : []
 solution : [0, 9, 19, 24]

Essensial at level 10 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 0), (4, -1), (5, -1), (6, -1), (7, -1), (8, 0), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, 0), (31, 0), (32, 0), (33, 0), (34, -1), (35, -1), (36, 0), (37, 0), (38, 0), (39, 0), (40, -1), (41, -1), (42, 0), (43, 0), (44, -1), (45, 0), (46, 0), (47, -1), (48, -1), (49, 0), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 10 : set()

After reduction : 
 pending  : []
 solution : [0, 9, 19, 24]


Solution : [0, 9, 19, 24] has cost 23.


Before backtrack at level 10
 pending : []
 solution : [0, 9, 19, 24]

After backtrack at level 10
 pending : [37, 8, 30, 33, 45, 38, 42, 43, 46, 36, 49, 3, 39, 31, 32]
 solution : [0, 9, 19, 24]


Invert decision for 24 at level 9


New level: 10
 pending : [37, 8, 30, 33, 45, 38, 42, 43, 46, 36, 49, 3, 39, 31, 32]
 solution : [0, 9, 19]


Before reduction : 
 pending  : [37, 8, 30, 33, 45, 38, 42, 43, 46, 36, 49, 3, 39, 31, 32]
 solution : [0, 9, 19]

Essensial at level 10 : {3}

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, 0), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, 0), (31, 0), (32, 0), (33, 0), (34, -1), (35, -1), (36, 0), (37, 0), (38, 0), (39, 0), (40, -1), (41, -1), (42, 0), (43, 0), (44, -1), (45, 0), (46, 0), (47, -1), (48, -1), (49, 0), (50, -1), (51, -1), (52, -1)]

Covered at level 10 : {32, 33, 36, 37, 38, 39, 8, 42, 43, 45, 46, 49, 30, 31}

After reduction : 
 pending  : []
 solution : [0, 9, 19, 3]


Before reduction : 
 pending  : []
 solution : [0, 9, 19, 3]

Essensial at level 10 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, 0), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, 0), (31, 0), (32, 0), (33, 0), (34, -1), (35, -1), (36, 0), (37, 0), (38, 0), (39, 0), (40, -1), (41, -1), (42, 0), (43, 0), (44, -1), (45, 0), (46, 0), (47, -1), (48, -1), (49, 0), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 10 : set()

After reduction : 
 pending  : []
 solution : [0, 9, 19, 3]


Solution : [0, 9, 19, 3] has cost 20.


Before backtrack at level 10
 pending : []
 solution : [0, 9, 19, 3]

After backtrack at level 10
 pending : [3, 37, 8, 30, 33, 45, 38, 42, 43, 46, 36, 49, 39, 31, 32]
 solution : [0, 9, 19]


Before backtrack at level 9
 pending : [3, 37, 8, 30, 33, 45, 38, 42, 43, 46, 36, 49, 39, 31, 32]
 solution : [0, 9, 19]

After backtrack at level 9
 pending : [3, 37, 8, 30, 33, 45, 38, 42, 43, 46, 36, 49, 39, 31, 32, 24]
 solution : [0, 9, 19]


Before backtrack at level 8
 pending : [3, 37, 8, 30, 33, 45, 38, 42, 43, 46, 36, 49, 39, 31, 32, 24]
 solution : [0, 9, 19]

After backtrack at level 8
 pending : [3, 37, 8, 30, 33, 45, 38, 42, 43, 46, 36, 49, 39, 31, 32, 24, 25]
 solution : [0, 9, 19]


Before backtrack at level 7
 pending : [3, 37, 8, 30, 33, 45, 38, 42, 43, 46, 36, 49, 39, 31, 32, 24, 25]
 solution : [0, 9, 19]

After backtrack at level 7
 pending : [3, 37, 8, 30, 33, 45, 38, 42, 43, 46, 36, 49, 39, 31, 32, 24, 25, 23, 40, 5, 15, 16, 22, 21, 14, 20, 13, 26]
 solution : [0, 9, 19]


Invert decision for 19 at level 6


New level: 7
 pending : [3, 37, 8, 30, 33, 45, 38, 42, 43, 46, 36, 49, 39, 31, 32, 24, 25, 23, 40, 5, 15, 16, 22, 21, 14, 20, 13, 26]
 solution : [0, 9]


Before reduction : 
 pending  : [3, 37, 8, 30, 33, 45, 38, 42, 43, 46, 36, 49, 39, 31, 32, 24, 25, 23, 40, 5, 15, 16, 22, 21, 14, 20, 13, 26]
 solution : [0, 9]

Essensial at level 7 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 67108864), (4, -1), (5, 524288), (6, -1), (7, -1), (8, 524288), (9, -1), (10, -1), (11, -1), (12, -1), (13, 33554432), (14, 16777216), (15, 786432), (16, 262144), (17, -1), (18, -1), (19, -1), (20, 8388608), (21, 4194304), (22, 131072), (23, 2097152), (24, 67108864), (25, 268435456), (26, 536870912), (27, -1), (28, -1), (29, -1), (30, 524288), (31, 1048576), (32, 8192), (33, 8192), (34, -1), (35, -1), (36, 67108864), (37, 67108864), (38, 8192), (39, 134217728), (40, 2097152), (41, -1), (42, 262144), (43, 262144), (44, -1), (45, 33554432), (46, 8388608), (47, -1), (48, -1), (49, 33554432), (50, -1), (51, -1), (52, -1)]

Covered at level 7 : set()

After reduction : 
 pending  : [3, 37, 8, 30, 33, 45, 38, 42, 43, 46, 36, 49, 39, 31, 32, 24, 25, 23, 40, 5, 15, 16, 22, 21, 14, 20, 13, 26]
 solution : [0, 9]


Solution : [0, 9] has cost 9.


Decide in level 7 among pending : [3, 37, 8, 30, 33, 45, 38, 42, 43, 46, 36, 49, 39, 31, 32, 24, 25, 23, 40, 5, 15, 16, 22, 21, 14, 20, 13, 26]

Coverage : [(0, -1), (1, -1), (2, -1), (3, 67108864), (4, -1), (5, 524288), (6, -1), (7, -1), (8, 524288), (9, -1), (10, -1), (11, -1), (12, -1), (13, 33554432), (14, 16777216), (15, 786432), (16, 262144), (17, -1), (18, -1), (19, -1), (20, 8388608), (21, 4194304), (22, 131072), (23, 2097152), (24, 67108864), (25, 268435456), (26, 536870912), (27, -1), (28, -1), (29, -1), (30, 524288), (31, 1048576), (32, 8192), (33, 8192), (34, -1), (35, -1), (36, 67108864), (37, 67108864), (38, 8192), (39, 134217728), (40, 2097152), (41, -1), (42, 262144), (43, 262144), (44, -1), (45, 33554432), (46, 8388608), (47, -1), (48, -1), (49, 33554432), (50, -1), (51, -1), (52, -1)]

Decide 26 with phase True at level 7

After decision at level 7
 pending : [3, 37, 8, 30, 33, 45, 38, 42, 43, 46, 36, 49, 39, 31, 32, 24, 25, 23, 40, 5, 15, 16, 22, 21, 14, 20, 13]
 solution : [0, 9, 26]


New level: 8
 pending : [3, 37, 8, 30, 33, 45, 38, 42, 43, 46, 36, 49, 39, 31, 32, 24, 25, 23, 40, 5, 15, 16, 22, 21, 14, 20, 13]
 solution : [0, 9, 26]


Before reduction : 
 pending  : [3, 37, 8, 30, 33, 45, 38, 42, 43, 46, 36, 49, 39, 31, 32, 24, 25, 23, 40, 5, 15, 16, 22, 21, 14, 20, 13]
 solution : [0, 9, 26]

Essensial at level 8 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 67108864), (4, -1), (5, 524288), (6, -1), (7, -1), (8, 524288), (9, -1), (10, -1), (11, -1), (12, -1), (13, 33554432), (14, 16777216), (15, 786432), (16, 262144), (17, -1), (18, -1), (19, -1), (20, 8388608), (21, 4194304), (22, 131072), (23, 2097152), (24, 67108864), (25, 268435456), (26, 536870912), (27, -1), (28, -1), (29, -1), (30, 524288), (31, 1048576), (32, 8192), (33, 8192), (34, -1), (35, -1), (36, 67108864), (37, 67108864), (38, 8192), (39, 134217728), (40, 2097152), (41, -1), (42, 262144), (43, 262144), (44, -1), (45, 33554432), (46, 8388608), (47, -1), (48, -1), (49, 33554432), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 67108864), (4, -1), (5, 524288), (6, -1), (7, -1), (8, 524288), (9, -1), (10, -1), (11, -1), (12, -1), (13, 33554432), (14, 16777216), (15, 786432), (16, 262144), (17, -1), (18, -1), (19, -1), (20, 8388608), (21, 4194304), (22, 131072), (23, 2097152), (24, 67108864), (25, 134217728), (26, -1), (27, -1), (28, -1), (29, -1), (30, 524288), (31, 524288), (32, 4096), (33, 8192), (34, -1), (35, -1), (36, 67108864), (37, 67108864), (38, 8192), (39, 134217728), (40, 2097152), (41, -1), (42, 262144), (43, 262144), (44, -1), (45, 33554432), (46, 8388608), (47, -1), (48, -1), (49, 33554432), (50, -1), (51, -1), (52, -1)]

Covered at level 8 : set()

After reduction : 
 pending  : [3, 37, 8, 30, 33, 45, 38, 42, 43, 46, 36, 49, 39, 31, 32, 24, 25, 23, 40, 5, 15, 16, 22, 21, 14, 20, 13]
 solution : [0, 9, 26]


Solution : [0, 9, 26] has cost 13.


Decide in level 8 among pending : [3, 37, 8, 30, 33, 45, 38, 42, 43, 46, 36, 49, 39, 31, 32, 24, 25, 23, 40, 5, 15, 16, 22, 21, 14, 20, 13]

Coverage : [(0, -1), (1, -1), (2, -1), (3, 67108864), (4, -1), (5, 524288), (6, -1), (7, -1), (8, 524288), (9, -1), (10, -1), (11, -1), (12, -1), (13, 33554432), (14, 16777216), (15, 786432), (16, 262144), (17, -1), (18, -1), (19, -1), (20, 8388608), (21, 4194304), (22, 131072), (23, 2097152), (24, 67108864), (25, 134217728), (26, -1), (27, -1), (28, -1), (29, -1), (30, 524288), (31, 524288), (32, 4096), (33, 8192), (34, -1), (35, -1), (36, 67108864), (37, 67108864), (38, 8192), (39, 134217728), (40, 2097152), (41, -1), (42, 262144), (43, 262144), (44, -1), (45, 33554432), (46, 8388608), (47, -1), (48, -1), (49, 33554432), (50, -1), (51, -1), (52, -1)]

Decide 39 with phase True at level 8

After decision at level 8
 pending : [3, 37, 8, 30, 33, 45, 38, 42, 43, 46, 36, 49, 31, 32, 24, 25, 23, 40, 5, 15, 16, 22, 21, 14, 20, 13]
 solution : [0, 9, 26, 39]


New level: 9
 pending : [3, 37, 8, 30, 33, 45, 38, 42, 43, 46, 36, 49, 31, 32, 24, 25, 23, 40, 5, 15, 16, 22, 21, 14, 20, 13]
 solution : [0, 9, 26, 39]


Before reduction : 
 pending  : [3, 37, 8, 30, 33, 45, 38, 42, 43, 46, 36, 49, 31, 32, 24, 25, 23, 40, 5, 15, 16, 22, 21, 14, 20, 13]
 solution : [0, 9, 26, 39]

Essensial at level 9 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 67108864), (4, -1), (5, 524288), (6, -1), (7, -1), (8, 524288), (9, -1), (10, -1), (11, -1), (12, -1), (13, 33554432), (14, 16777216), (15, 786432), (16, 262144), (17, -1), (18, -1), (19, -1), (20, 8388608), (21, 4194304), (22, 131072), (23, 2097152), (24, 67108864), (25, 134217728), (26, -1), (27, -1), (28, -1), (29, -1), (30, 524288), (31, 524288), (32, 4096), (33, 8192), (34, -1), (35, -1), (36, 67108864), (37, 67108864), (38, 8192), (39, 134217728), (40, 2097152), (41, -1), (42, 262144), (43, 262144), (44, -1), (45, 33554432), (46, 8388608), (47, -1), (48, -1), (49, 33554432), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 67108864), (4, -1), (5, 524288), (6, -1), (7, -1), (8, 524288), (9, -1), (10, -1), (11, -1), (12, -1), (13, 33554432), (14, 16777216), (15, 786432), (16, 262144), (17, -1), (18, -1), (19, -1), (20, 8388608), (21, 4194304), (22, 131072), (23, 2097152), (24, 67108864), (25, 67108864), (26, -1), (27, -1), (28, -1), (29, -1), (30, 524288), (31, 262144), (32, 2048), (33, 8192), (34, -1), (35, -1), (36, 67108864), (37, 33554432), (38, 8192), (39, -1), (40, 2097152), (41, -1), (42, 262144), (43, 262144), (44, -1), (45, 33554432), (46, 8388608), (47, -1), (48, -1), (49, 33554432), (50, -1), (51, -1), (52, -1)]

Covered at level 9 : set()

After reduction : 
 pending  : [3, 37, 8, 30, 33, 45, 38, 42, 43, 46, 36, 49, 31, 32, 24, 25, 23, 40, 5, 15, 16, 22, 21, 14, 20, 13]
 solution : [0, 9, 26, 39]


Solution : [0, 9, 26, 39] has cost 27.


Before backtrack at level 9
 pending : [3, 37, 8, 30, 33, 45, 38, 42, 43, 46, 36, 49, 31, 32, 24, 25, 23, 40, 5, 15, 16, 22, 21, 14, 20, 13]
 solution : [0, 9, 26, 39]

After backtrack at level 9
 pending : [3, 37, 8, 30, 33, 45, 38, 42, 43, 46, 36, 49, 31, 32, 24, 25, 23, 40, 5, 15, 16, 22, 21, 14, 20, 13]
 solution : [0, 9, 26, 39]


Invert decision for 39 at level 8


New level: 9
 pending : [3, 37, 8, 30, 33, 45, 38, 42, 43, 46, 36, 49, 31, 32, 24, 25, 23, 40, 5, 15, 16, 22, 21, 14, 20, 13]
 solution : [0, 9, 26]


Before reduction : 
 pending  : [3, 37, 8, 30, 33, 45, 38, 42, 43, 46, 36, 49, 31, 32, 24, 25, 23, 40, 5, 15, 16, 22, 21, 14, 20, 13]
 solution : [0, 9, 26]

Essensial at level 9 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 67108864), (4, -1), (5, 524288), (6, -1), (7, -1), (8, 524288), (9, -1), (10, -1), (11, -1), (12, -1), (13, 33554432), (14, 16777216), (15, 786432), (16, 262144), (17, -1), (18, -1), (19, -1), (20, 8388608), (21, 4194304), (22, 131072), (23, 2097152), (24, 67108864), (25, 67108864), (26, -1), (27, -1), (28, -1), (29, -1), (30, 524288), (31, 262144), (32, 2048), (33, 8192), (34, -1), (35, -1), (36, 67108864), (37, 33554432), (38, 8192), (39, -1), (40, 2097152), (41, -1), (42, 262144), (43, 262144), (44, -1), (45, 33554432), (46, 8388608), (47, -1), (48, -1), (49, 33554432), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 67108864), (4, -1), (5, 524288), (6, -1), (7, -1), (8, 524288), (9, -1), (10, -1), (11, -1), (12, -1), (13, 33554432), (14, 16777216), (15, 786432), (16, 262144), (17, -1), (18, -1), (19, -1), (20, 8388608), (21, 4194304), (22, 131072), (23, 2097152), (24, 67108864), (25, 134217728), (26, -1), (27, -1), (28, -1), (29, -1), (30, 524288), (31, 524288), (32, 4096), (33, 8192), (34, -1), (35, -1), (36, 67108864), (37, 67108864), (38, 8192), (39, -1), (40, 2097152), (41, -1), (42, 262144), (43, 262144), (44, -1), (45, 33554432), (46, 8388608), (47, -1), (48, -1), (49, 33554432), (50, -1), (51, -1), (52, -1)]

Covered at level 9 : set()

After reduction : 
 pending  : [3, 37, 8, 30, 33, 45, 38, 42, 43, 46, 36, 49, 31, 32, 24, 25, 23, 40, 5, 15, 16, 22, 21, 14, 20, 13]
 solution : [0, 9, 26]


Solution : [0, 9, 26] has cost 13.


Decide in level 9 among pending : [3, 37, 8, 30, 33, 45, 38, 42, 43, 46, 36, 49, 31, 32, 24, 25, 23, 40, 5, 15, 16, 22, 21, 14, 20, 13]

Coverage : [(0, -1), (1, -1), (2, -1), (3, 67108864), (4, -1), (5, 524288), (6, -1), (7, -1), (8, 524288), (9, -1), (10, -1), (11, -1), (12, -1), (13, 33554432), (14, 16777216), (15, 786432), (16, 262144), (17, -1), (18, -1), (19, -1), (20, 8388608), (21, 4194304), (22, 131072), (23, 2097152), (24, 67108864), (25, 134217728), (26, -1), (27, -1), (28, -1), (29, -1), (30, 524288), (31, 524288), (32, 4096), (33, 8192), (34, -1), (35, -1), (36, 67108864), (37, 67108864), (38, 8192), (39, -1), (40, 2097152), (41, -1), (42, 262144), (43, 262144), (44, -1), (45, 33554432), (46, 8388608), (47, -1), (48, -1), (49, 33554432), (50, -1), (51, -1), (52, -1)]

Decide 25 with phase True at level 9

After decision at level 9
 pending : [3, 37, 8, 30, 33, 45, 38, 42, 43, 46, 36, 49, 31, 32, 24, 23, 40, 5, 15, 16, 22, 21, 14, 20, 13]
 solution : [0, 9, 26, 25]


New level: 10
 pending : [3, 37, 8, 30, 33, 45, 38, 42, 43, 46, 36, 49, 31, 32, 24, 23, 40, 5, 15, 16, 22, 21, 14, 20, 13]
 solution : [0, 9, 26, 25]


Before reduction : 
 pending  : [3, 37, 8, 30, 33, 45, 38, 42, 43, 46, 36, 49, 31, 32, 24, 23, 40, 5, 15, 16, 22, 21, 14, 20, 13]
 solution : [0, 9, 26, 25]

Essensial at level 10 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 67108864), (4, -1), (5, 524288), (6, -1), (7, -1), (8, 524288), (9, -1), (10, -1), (11, -1), (12, -1), (13, 33554432), (14, 16777216), (15, 786432), (16, 262144), (17, -1), (18, -1), (19, -1), (20, 8388608), (21, 4194304), (22, 131072), (23, 2097152), (24, 67108864), (25, 134217728), (26, -1), (27, -1), (28, -1), (29, -1), (30, 524288), (31, 524288), (32, 4096), (33, 8192), (34, -1), (35, -1), (36, 67108864), (37, 67108864), (38, 8192), (39, -1), (40, 2097152), (41, -1), (42, 262144), (43, 262144), (44, -1), (45, 33554432), (46, 8388608), (47, -1), (48, -1), (49, 33554432), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 16777216), (4, -1), (5, 524288), (6, -1), (7, -1), (8, 131072), (9, -1), (10, -1), (11, -1), (12, -1), (13, 33554432), (14, 16777216), (15, 786432), (16, 262144), (17, -1), (18, -1), (19, -1), (20, 8388608), (21, 4194304), (22, 131072), (23, 2097152), (24, 16777216), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, 131072), (31, 0), (32, 0), (33, 2048), (34, -1), (35, -1), (36, 33554432), (37, 67108864), (38, 2048), (39, -1), (40, 2097152), (41, -1), (42, 65536), (43, 65536), (44, -1), (45, 16777216), (46, 2097152), (47, -1), (48, -1), (49, 33554432), (50, -1), (51, -1), (52, -1)]

Covered at level 10 : {32, 31}

After reduction : 
 pending  : [3, 37, 8, 30, 33, 45, 38, 42, 43, 46, 36, 49, 24, 23, 40, 5, 15, 16, 22, 21, 14, 20, 13]
 solution : [0, 9, 26, 25]


Before reduction : 
 pending  : [3, 37, 8, 30, 33, 45, 38, 42, 43, 46, 36, 49, 24, 23, 40, 5, 15, 16, 22, 21, 14, 20, 13]
 solution : [0, 9, 26, 25]

Essensial at level 10 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 16777216), (4, -1), (5, 524288), (6, -1), (7, -1), (8, 131072), (9, -1), (10, -1), (11, -1), (12, -1), (13, 33554432), (14, 16777216), (15, 786432), (16, 262144), (17, -1), (18, -1), (19, -1), (20, 8388608), (21, 4194304), (22, 131072), (23, 2097152), (24, 16777216), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, 131072), (31, 0), (32, 0), (33, 2048), (34, -1), (35, -1), (36, 33554432), (37, 67108864), (38, 2048), (39, -1), (40, 2097152), (41, -1), (42, 65536), (43, 65536), (44, -1), (45, 16777216), (46, 2097152), (47, -1), (48, -1), (49, 33554432), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 16777216), (4, -1), (5, 524288), (6, -1), (7, -1), (8, 131072), (9, -1), (10, -1), (11, -1), (12, -1), (13, 33554432), (14, 16777216), (15, 786432), (16, 262144), (17, -1), (18, -1), (19, -1), (20, 8388608), (21, 4194304), (22, 131072), (23, 2097152), (24, 16777216), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, 131072), (31, -1), (32, -1), (33, 2048), (34, -1), (35, -1), (36, 33554432), (37, 67108864), (38, 2048), (39, -1), (40, 2097152), (41, -1), (42, 65536), (43, 65536), (44, -1), (45, 16777216), (46, 2097152), (47, -1), (48, -1), (49, 33554432), (50, -1), (51, -1), (52, -1)]

Covered at level 10 : set()

After reduction : 
 pending  : [3, 37, 8, 30, 33, 45, 38, 42, 43, 46, 36, 49, 24, 23, 40, 5, 15, 16, 22, 21, 14, 20, 13]
 solution : [0, 9, 26, 25]


Solution : [0, 9, 26, 25] has cost 20.


Before backtrack at level 10
 pending : [3, 37, 8, 30, 33, 45, 38, 42, 43, 46, 36, 49, 24, 23, 40, 5, 15, 16, 22, 21, 14, 20, 13]
 solution : [0, 9, 26, 25]

After backtrack at level 10
 pending : [3, 37, 8, 30, 33, 45, 38, 42, 43, 46, 36, 49, 24, 23, 40, 5, 15, 16, 22, 21, 14, 20, 13, 31, 32]
 solution : [0, 9, 26, 25]


Invert decision for 25 at level 9


New level: 10
 pending : [3, 37, 8, 30, 33, 45, 38, 42, 43, 46, 36, 49, 24, 23, 40, 5, 15, 16, 22, 21, 14, 20, 13, 31, 32]
 solution : [0, 9, 26]


Before reduction : 
 pending  : [3, 37, 8, 30, 33, 45, 38, 42, 43, 46, 36, 49, 24, 23, 40, 5, 15, 16, 22, 21, 14, 20, 13, 31, 32]
 solution : [0, 9, 26]

Essensial at level 10 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 16777216), (4, -1), (5, 524288), (6, -1), (7, -1), (8, 131072), (9, -1), (10, -1), (11, -1), (12, -1), (13, 33554432), (14, 16777216), (15, 786432), (16, 262144), (17, -1), (18, -1), (19, -1), (20, 8388608), (21, 4194304), (22, 131072), (23, 2097152), (24, 16777216), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, 131072), (31, -1), (32, -1), (33, 2048), (34, -1), (35, -1), (36, 33554432), (37, 67108864), (38, 2048), (39, -1), (40, 2097152), (41, -1), (42, 65536), (43, 65536), (44, -1), (45, 16777216), (46, 2097152), (47, -1), (48, -1), (49, 33554432), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 67108864), (4, -1), (5, 524288), (6, -1), (7, -1), (8, 524288), (9, -1), (10, -1), (11, -1), (12, -1), (13, 33554432), (14, 16777216), (15, 786432), (16, 262144), (17, -1), (18, -1), (19, -1), (20, 8388608), (21, 4194304), (22, 131072), (23, 2097152), (24, 67108864), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, 524288), (31, 524288), (32, 4096), (33, 8192), (34, -1), (35, -1), (36, 67108864), (37, 67108864), (38, 8192), (39, -1), (40, 2097152), (41, -1), (42, 262144), (43, 262144), (44, -1), (45, 33554432), (46, 8388608), (47, -1), (48, -1), (49, 33554432), (50, -1), (51, -1), (52, -1)]

Covered at level 10 : set()

After reduction : 
 pending  : [3, 37, 8, 30, 33, 45, 38, 42, 43, 46, 36, 49, 24, 23, 40, 5, 15, 16, 22, 21, 14, 20, 13, 31, 32]
 solution : [0, 9, 26]


Solution : [0, 9, 26] has cost 13.


Decide in level 10 among pending : [3, 37, 8, 30, 33, 45, 38, 42, 43, 46, 36, 49, 24, 23, 40, 5, 15, 16, 22, 21, 14, 20, 13, 31, 32]

Coverage : [(0, -1), (1, -1), (2, -1), (3, 67108864), (4, -1), (5, 524288), (6, -1), (7, -1), (8, 524288), (9, -1), (10, -1), (11, -1), (12, -1), (13, 33554432), (14, 16777216), (15, 786432), (16, 262144), (17, -1), (18, -1), (19, -1), (20, 8388608), (21, 4194304), (22, 131072), (23, 2097152), (24, 67108864), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, 524288), (31, 524288), (32, 4096), (33, 8192), (34, -1), (35, -1), (36, 67108864), (37, 67108864), (38, 8192), (39, -1), (40, 2097152), (41, -1), (42, 262144), (43, 262144), (44, -1), (45, 33554432), (46, 8388608), (47, -1), (48, -1), (49, 33554432), (50, -1), (51, -1), (52, -1)]

Decide 3 with phase True at level 10

After decision at level 10
 pending : [37, 8, 30, 33, 45, 38, 42, 43, 46, 36, 49, 24, 23, 40, 5, 15, 16, 22, 21, 14, 20, 13, 31, 32]
 solution : [0, 9, 26, 3]


New level: 11
 pending : [37, 8, 30, 33, 45, 38, 42, 43, 46, 36, 49, 24, 23, 40, 5, 15, 16, 22, 21, 14, 20, 13, 31, 32]
 solution : [0, 9, 26, 3]


Before reduction : 
 pending  : [37, 8, 30, 33, 45, 38, 42, 43, 46, 36, 49, 24, 23, 40, 5, 15, 16, 22, 21, 14, 20, 13, 31, 32]
 solution : [0, 9, 26, 3]

Essensial at level 11 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 67108864), (4, -1), (5, 524288), (6, -1), (7, -1), (8, 524288), (9, -1), (10, -1), (11, -1), (12, -1), (13, 33554432), (14, 16777216), (15, 786432), (16, 262144), (17, -1), (18, -1), (19, -1), (20, 8388608), (21, 4194304), (22, 131072), (23, 2097152), (24, 67108864), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, 524288), (31, 524288), (32, 4096), (33, 8192), (34, -1), (35, -1), (36, 67108864), (37, 67108864), (38, 8192), (39, -1), (40, 2097152), (41, -1), (42, 262144), (43, 262144), (44, -1), (45, 33554432), (46, 8388608), (47, -1), (48, -1), (49, 33554432), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 262144), (6, -1), (7, -1), (8, 0), (9, -1), (10, -1), (11, -1), (12, -1), (13, 16777216), (14, 8388608), (15, 262144), (16, 131072), (17, -1), (18, -1), (19, -1), (20, 8388608), (21, 4194304), (22, 131072), (23, 2097152), (24, 0), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, 0), (31, 0), (32, 0), (33, 0), (34, -1), (35, -1), (36, 0), (37, 65536), (38, 0), (39, -1), (40, 2097152), (41, -1), (42, 0), (43, 0), (44, -1), (45, 0), (46, 0), (47, -1), (48, -1), (49, 0), (50, -1), (51, -1), (52, -1)]

Covered at level 11 : {32, 33, 36, 38, 8, 42, 43, 45, 46, 49, 24, 30, 31}

After reduction : 
 pending  : [37, 23, 40, 5, 15, 16, 22, 21, 14, 20, 13]
 solution : [0, 9, 26, 3]


Before reduction : 
 pending  : [37, 23, 40, 5, 15, 16, 22, 21, 14, 20, 13]
 solution : [0, 9, 26, 3]

Essensial at level 11 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 262144), (6, -1), (7, -1), (8, 0), (9, -1), (10, -1), (11, -1), (12, -1), (13, 16777216), (14, 8388608), (15, 262144), (16, 131072), (17, -1), (18, -1), (19, -1), (20, 8388608), (21, 4194304), (22, 131072), (23, 2097152), (24, 0), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, 0), (31, 0), (32, 0), (33, 0), (34, -1), (35, -1), (36, 0), (37, 65536), (38, 0), (39, -1), (40, 2097152), (41, -1), (42, 0), (43, 0), (44, -1), (45, 0), (46, 0), (47, -1), (48, -1), (49, 0), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 262144), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, 16777216), (14, 8388608), (15, 262144), (16, 131072), (17, -1), (18, -1), (19, -1), (20, 8388608), (21, 4194304), (22, 131072), (23, 2097152), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, 65536), (38, -1), (39, -1), (40, 2097152), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 11 : set()

After reduction : 
 pending  : [37, 23, 40, 5, 15, 16, 22, 21, 14, 20, 13]
 solution : [0, 9, 26, 3]


Solution : [0, 9, 26, 3] has cost 17.


Decide in level 11 among pending : [37, 23, 40, 5, 15, 16, 22, 21, 14, 20, 13]

Coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 262144), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, 16777216), (14, 8388608), (15, 262144), (16, 131072), (17, -1), (18, -1), (19, -1), (20, 8388608), (21, 4194304), (22, 131072), (23, 2097152), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, 65536), (38, -1), (39, -1), (40, 2097152), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Decide 13 with phase True at level 11

After decision at level 11
 pending : [37, 23, 40, 5, 15, 16, 22, 21, 14, 20]
 solution : [0, 9, 26, 3, 13]


New level: 12
 pending : [37, 23, 40, 5, 15, 16, 22, 21, 14, 20]
 solution : [0, 9, 26, 3, 13]


Before reduction : 
 pending  : [37, 23, 40, 5, 15, 16, 22, 21, 14, 20]
 solution : [0, 9, 26, 3, 13]

Essensial at level 12 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 262144), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, 16777216), (14, 8388608), (15, 262144), (16, 131072), (17, -1), (18, -1), (19, -1), (20, 8388608), (21, 4194304), (22, 131072), (23, 2097152), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, 65536), (38, -1), (39, -1), (40, 2097152), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 0), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 0), (15, 0), (16, 0), (17, -1), (18, -1), (19, -1), (20, 131072), (21, 32768), (22, 32768), (23, 2048), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, 1024), (38, -1), (39, -1), (40, 2048), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 12 : {16, 5, 14, 15}

After reduction : 
 pending  : [37, 23, 40, 22, 21, 20]
 solution : [0, 9, 26, 3, 13]


Before reduction : 
 pending  : [37, 23, 40, 22, 21, 20]
 solution : [0, 9, 26, 3, 13]

Essensial at level 12 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 0), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 0), (15, 0), (16, 0), (17, -1), (18, -1), (19, -1), (20, 131072), (21, 32768), (22, 32768), (23, 2048), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, 1024), (38, -1), (39, -1), (40, 2048), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, 131072), (21, 32768), (22, 32768), (23, 2048), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, 1024), (38, -1), (39, -1), (40, 2048), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 12 : set()

After reduction : 
 pending  : [37, 23, 40, 22, 21, 20]
 solution : [0, 9, 26, 3, 13]


Solution : [0, 9, 26, 3, 13] has cost 26.


Before backtrack at level 12
 pending : [37, 23, 40, 22, 21, 20]
 solution : [0, 9, 26, 3, 13]

After backtrack at level 12
 pending : [37, 23, 40, 22, 21, 20, 5, 15, 16, 14]
 solution : [0, 9, 26, 3, 13]


Invert decision for 13 at level 11


New level: 12
 pending : [37, 23, 40, 22, 21, 20, 5, 15, 16, 14]
 solution : [0, 9, 26, 3]


Before reduction : 
 pending  : [37, 23, 40, 22, 21, 20, 5, 15, 16, 14]
 solution : [0, 9, 26, 3]

Essensial at level 12 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, 131072), (21, 32768), (22, 32768), (23, 2048), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, 1024), (38, -1), (39, -1), (40, 2048), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 262144), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 8388608), (15, 262144), (16, 131072), (17, -1), (18, -1), (19, -1), (20, 8388608), (21, 4194304), (22, 131072), (23, 2097152), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, 65536), (38, -1), (39, -1), (40, 2097152), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 12 : set()

After reduction : 
 pending  : [37, 23, 40, 22, 21, 20, 5, 15, 16, 14]
 solution : [0, 9, 26, 3]


Solution : [0, 9, 26, 3] has cost 17.


Decide in level 12 among pending : [37, 23, 40, 22, 21, 20, 5, 15, 16, 14]

Coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 262144), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 8388608), (15, 262144), (16, 131072), (17, -1), (18, -1), (19, -1), (20, 8388608), (21, 4194304), (22, 131072), (23, 2097152), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, 65536), (38, -1), (39, -1), (40, 2097152), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Decide 20 with phase True at level 12

After decision at level 12
 pending : [37, 23, 40, 22, 21, 5, 15, 16, 14]
 solution : [0, 9, 26, 3, 20]


New level: 13
 pending : [37, 23, 40, 22, 21, 5, 15, 16, 14]
 solution : [0, 9, 26, 3, 20]


Before reduction : 
 pending  : [37, 23, 40, 22, 21, 5, 15, 16, 14]
 solution : [0, 9, 26, 3, 20]

Essensial at level 13 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 262144), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 8388608), (15, 262144), (16, 131072), (17, -1), (18, -1), (19, -1), (20, 8388608), (21, 4194304), (22, 131072), (23, 2097152), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, 65536), (38, -1), (39, -1), (40, 2097152), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 131072), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 2097152), (15, 131072), (16, 0), (17, -1), (18, -1), (19, -1), (20, -1), (21, 0), (22, 0), (23, 524288), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, 1024), (38, -1), (39, -1), (40, 524288), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 13 : {16, 21, 22}

After reduction : 
 pending  : [37, 23, 40, 5, 15, 14]
 solution : [0, 9, 26, 3, 20]


Before reduction : 
 pending  : [37, 23, 40, 5, 15, 14]
 solution : [0, 9, 26, 3, 20]

Essensial at level 13 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 131072), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 2097152), (15, 131072), (16, 0), (17, -1), (18, -1), (19, -1), (20, -1), (21, 0), (22, 0), (23, 524288), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, 1024), (38, -1), (39, -1), (40, 524288), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 131072), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 2097152), (15, 131072), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, 524288), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, 1024), (38, -1), (39, -1), (40, 524288), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 13 : set()

After reduction : 
 pending  : [37, 23, 40, 5, 15, 14]
 solution : [0, 9, 26, 3, 20]


Solution : [0, 9, 26, 3, 20] has cost 24.


Before backtrack at level 13
 pending : [37, 23, 40, 5, 15, 14]
 solution : [0, 9, 26, 3, 20]

After backtrack at level 13
 pending : [37, 23, 40, 5, 15, 14, 22, 21, 16]
 solution : [0, 9, 26, 3, 20]


Invert decision for 20 at level 12


New level: 13
 pending : [37, 23, 40, 5, 15, 14, 22, 21, 16]
 solution : [0, 9, 26, 3]


Before reduction : 
 pending  : [37, 23, 40, 5, 15, 14, 22, 21, 16]
 solution : [0, 9, 26, 3]

Essensial at level 13 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 131072), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 2097152), (15, 131072), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, 524288), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, 1024), (38, -1), (39, -1), (40, 524288), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 262144), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 8388608), (15, 262144), (16, 131072), (17, -1), (18, -1), (19, -1), (20, -1), (21, 4194304), (22, 131072), (23, 2097152), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, 65536), (38, -1), (39, -1), (40, 2097152), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 13 : set()

After reduction : 
 pending  : [37, 23, 40, 5, 15, 14, 22, 21, 16]
 solution : [0, 9, 26, 3]


Solution : [0, 9, 26, 3] has cost 17.


Decide in level 13 among pending : [37, 23, 40, 5, 15, 14, 22, 21, 16]

Coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 262144), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 8388608), (15, 262144), (16, 131072), (17, -1), (18, -1), (19, -1), (20, -1), (21, 4194304), (22, 131072), (23, 2097152), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, 65536), (38, -1), (39, -1), (40, 2097152), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Decide 14 with phase True at level 13

After decision at level 13
 pending : [37, 23, 40, 5, 15, 22, 21, 16]
 solution : [0, 9, 26, 3, 14]


New level: 14
 pending : [37, 23, 40, 5, 15, 22, 21, 16]
 solution : [0, 9, 26, 3, 14]


Before reduction : 
 pending  : [37, 23, 40, 5, 15, 22, 21, 16]
 solution : [0, 9, 26, 3, 14]

Essensial at level 14 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 262144), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 8388608), (15, 262144), (16, 131072), (17, -1), (18, -1), (19, -1), (20, -1), (21, 4194304), (22, 131072), (23, 2097152), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, 65536), (38, -1), (39, -1), (40, 2097152), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 0), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, 0), (16, 0), (17, -1), (18, -1), (19, -1), (20, -1), (21, 32768), (22, 32768), (23, 2048), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, 1024), (38, -1), (39, -1), (40, 2048), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 14 : {16, 5, 15}

After reduction : 
 pending  : [37, 23, 40, 22, 21]
 solution : [0, 9, 26, 3, 14]


Before reduction : 
 pending  : [37, 23, 40, 22, 21]
 solution : [0, 9, 26, 3, 14]

Essensial at level 14 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 0), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, 0), (16, 0), (17, -1), (18, -1), (19, -1), (20, -1), (21, 32768), (22, 32768), (23, 2048), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, 1024), (38, -1), (39, -1), (40, 2048), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, 32768), (22, 32768), (23, 2048), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, 1024), (38, -1), (39, -1), (40, 2048), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 14 : set()

After reduction : 
 pending  : [37, 23, 40, 22, 21]
 solution : [0, 9, 26, 3, 14]


Solution : [0, 9, 26, 3, 14] has cost 26.


Before backtrack at level 14
 pending : [37, 23, 40, 22, 21]
 solution : [0, 9, 26, 3, 14]

After backtrack at level 14
 pending : [37, 23, 40, 22, 21, 5, 15, 16]
 solution : [0, 9, 26, 3, 14]


Invert decision for 14 at level 13


New level: 14
 pending : [37, 23, 40, 22, 21, 5, 15, 16]
 solution : [0, 9, 26, 3]


Before reduction : 
 pending  : [37, 23, 40, 22, 21, 5, 15, 16]
 solution : [0, 9, 26, 3]

Essensial at level 14 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, 32768), (22, 32768), (23, 2048), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, 1024), (38, -1), (39, -1), (40, 2048), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 262144), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, 262144), (16, 131072), (17, -1), (18, -1), (19, -1), (20, -1), (21, 4194304), (22, 131072), (23, 2097152), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, 65536), (38, -1), (39, -1), (40, 2097152), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 14 : set()

After reduction : 
 pending  : [37, 23, 40, 22, 21, 5, 15, 16]
 solution : [0, 9, 26, 3]


Solution : [0, 9, 26, 3] has cost 17.


Decide in level 14 among pending : [37, 23, 40, 22, 21, 5, 15, 16]

Coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 262144), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, 262144), (16, 131072), (17, -1), (18, -1), (19, -1), (20, -1), (21, 4194304), (22, 131072), (23, 2097152), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, 65536), (38, -1), (39, -1), (40, 2097152), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Decide 21 with phase True at level 14

After decision at level 14
 pending : [37, 23, 40, 22, 5, 15, 16]
 solution : [0, 9, 26, 3, 21]


New level: 15
 pending : [37, 23, 40, 22, 5, 15, 16]
 solution : [0, 9, 26, 3, 21]


Before reduction : 
 pending  : [37, 23, 40, 22, 5, 15, 16]
 solution : [0, 9, 26, 3, 21]

Essensial at level 15 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 262144), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, 262144), (16, 131072), (17, -1), (18, -1), (19, -1), (20, -1), (21, 4194304), (22, 131072), (23, 2097152), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, 65536), (38, -1), (39, -1), (40, 2097152), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 131072), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, 131072), (16, 0), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, 0), (23, 524288), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, 1024), (38, -1), (39, -1), (40, 524288), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 15 : {16, 22}

After reduction : 
 pending  : [37, 23, 40, 5, 15]
 solution : [0, 9, 26, 3, 21]


Before reduction : 
 pending  : [37, 23, 40, 5, 15]
 solution : [0, 9, 26, 3, 21]

Essensial at level 15 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 131072), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, 131072), (16, 0), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, 0), (23, 524288), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, 1024), (38, -1), (39, -1), (40, 524288), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 131072), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, 131072), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, 524288), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, 1024), (38, -1), (39, -1), (40, 524288), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 15 : set()

After reduction : 
 pending  : [37, 23, 40, 5, 15]
 solution : [0, 9, 26, 3, 21]


Solution : [0, 9, 26, 3, 21] has cost 24.


Before backtrack at level 15
 pending : [37, 23, 40, 5, 15]
 solution : [0, 9, 26, 3, 21]

After backtrack at level 15
 pending : [37, 23, 40, 5, 15, 22, 16]
 solution : [0, 9, 26, 3, 21]


Invert decision for 21 at level 14


New level: 15
 pending : [37, 23, 40, 5, 15, 22, 16]
 solution : [0, 9, 26, 3]


Before reduction : 
 pending  : [37, 23, 40, 5, 15, 22, 16]
 solution : [0, 9, 26, 3]

Essensial at level 15 : {22}

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 131072), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, 131072), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, 524288), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, 1024), (38, -1), (39, -1), (40, 524288), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 262144), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, 262144), (16, 65536), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, 2097152), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, 65536), (38, -1), (39, -1), (40, 2097152), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 15 : set()

After reduction : 
 pending  : [37, 23, 40, 5, 15, 16]
 solution : [0, 9, 26, 3, 22]


Before reduction : 
 pending  : [37, 23, 40, 5, 15, 16]
 solution : [0, 9, 26, 3, 22]

Essensial at level 15 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 262144), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, 262144), (16, 65536), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, 2097152), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, 65536), (38, -1), (39, -1), (40, 2097152), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 262144), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, 262144), (16, 65536), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, 2097152), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, 65536), (38, -1), (39, -1), (40, 2097152), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 15 : set()

After reduction : 
 pending  : [37, 23, 40, 5, 15, 16]
 solution : [0, 9, 26, 3, 22]


Solution : [0, 9, 26, 3, 22] has cost 24.


Before backtrack at level 15
 pending : [37, 23, 40, 5, 15, 16]
 solution : [0, 9, 26, 3, 22]

After backtrack at level 15
 pending : [37, 23, 40, 5, 15, 16, 22]
 solution : [0, 9, 26, 3]


Before backtrack at level 14
 pending : [37, 23, 40, 5, 15, 16, 22]
 solution : [0, 9, 26, 3]

After backtrack at level 14
 pending : [37, 23, 40, 5, 15, 16, 22, 21]
 solution : [0, 9, 26, 3]


Before backtrack at level 13
 pending : [37, 23, 40, 5, 15, 16, 22, 21]
 solution : [0, 9, 26, 3]

After backtrack at level 13
 pending : [37, 23, 40, 5, 15, 16, 22, 21, 14]
 solution : [0, 9, 26, 3]


Before backtrack at level 12
 pending : [37, 23, 40, 5, 15, 16, 22, 21, 14]
 solution : [0, 9, 26, 3]

After backtrack at level 12
 pending : [37, 23, 40, 5, 15, 16, 22, 21, 14, 20]
 solution : [0, 9, 26, 3]


Before backtrack at level 11
 pending : [37, 23, 40, 5, 15, 16, 22, 21, 14, 20]
 solution : [0, 9, 26, 3]

After backtrack at level 11
 pending : [37, 23, 40, 5, 15, 16, 22, 21, 14, 20, 8, 30, 33, 45, 38, 42, 43, 46, 36, 49, 24, 31, 32, 13]
 solution : [0, 9, 26, 3]


Invert decision for 3 at level 10


New level: 11
 pending : [37, 23, 40, 5, 15, 16, 22, 21, 14, 20, 8, 30, 33, 45, 38, 42, 43, 46, 36, 49, 24, 31, 32, 13]
 solution : [0, 9, 26]


Before reduction : 
 pending  : [37, 23, 40, 5, 15, 16, 22, 21, 14, 20, 8, 30, 33, 45, 38, 42, 43, 46, 36, 49, 24, 31, 32, 13]
 solution : [0, 9, 26]

Essensial at level 11 : {24}

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 262144), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, 262144), (16, 65536), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, 2097152), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, 65536), (38, -1), (39, -1), (40, 2097152), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 262144), (6, -1), (7, -1), (8, 0), (9, -1), (10, -1), (11, -1), (12, -1), (13, 16777216), (14, 8388608), (15, 262144), (16, 131072), (17, -1), (18, -1), (19, -1), (20, 8388608), (21, 4194304), (22, 131072), (23, 2097152), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, 0), (31, 0), (32, 0), (33, 0), (34, -1), (35, -1), (36, 0), (37, 524288), (38, 0), (39, -1), (40, 2097152), (41, -1), (42, 0), (43, 0), (44, -1), (45, 0), (46, 0), (47, -1), (48, -1), (49, 0), (50, -1), (51, -1), (52, -1)]

Covered at level 11 : {32, 33, 36, 38, 8, 42, 43, 45, 46, 49, 30, 31}

After reduction : 
 pending  : [37, 23, 40, 5, 15, 16, 22, 21, 14, 20, 13]
 solution : [0, 9, 26, 24]


Before reduction : 
 pending  : [37, 23, 40, 5, 15, 16, 22, 21, 14, 20, 13]
 solution : [0, 9, 26, 24]

Essensial at level 11 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 262144), (6, -1), (7, -1), (8, 0), (9, -1), (10, -1), (11, -1), (12, -1), (13, 16777216), (14, 8388608), (15, 262144), (16, 131072), (17, -1), (18, -1), (19, -1), (20, 8388608), (21, 4194304), (22, 131072), (23, 2097152), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, 0), (31, 0), (32, 0), (33, 0), (34, -1), (35, -1), (36, 0), (37, 524288), (38, 0), (39, -1), (40, 2097152), (41, -1), (42, 0), (43, 0), (44, -1), (45, 0), (46, 0), (47, -1), (48, -1), (49, 0), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 262144), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, 16777216), (14, 8388608), (15, 262144), (16, 131072), (17, -1), (18, -1), (19, -1), (20, 8388608), (21, 4194304), (22, 131072), (23, 2097152), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, 524288), (38, -1), (39, -1), (40, 2097152), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 11 : set()

After reduction : 
 pending  : [37, 23, 40, 5, 15, 16, 22, 21, 14, 20, 13]
 solution : [0, 9, 26, 24]


Solution : [0, 9, 26, 24] has cost 20.


Before backtrack at level 11
 pending : [37, 23, 40, 5, 15, 16, 22, 21, 14, 20, 13]
 solution : [0, 9, 26, 24]

After backtrack at level 11
 pending : [37, 23, 40, 5, 15, 16, 22, 21, 14, 20, 13, 24, 8, 30, 33, 45, 38, 42, 43, 46, 36, 49, 31, 32]
 solution : [0, 9, 26]


Before backtrack at level 10
 pending : [37, 23, 40, 5, 15, 16, 22, 21, 14, 20, 13, 24, 8, 30, 33, 45, 38, 42, 43, 46, 36, 49, 31, 32]
 solution : [0, 9, 26]

After backtrack at level 10
 pending : [37, 23, 40, 5, 15, 16, 22, 21, 14, 20, 13, 24, 8, 30, 33, 45, 38, 42, 43, 46, 36, 49, 31, 32, 3]
 solution : [0, 9, 26]


Before backtrack at level 9
 pending : [37, 23, 40, 5, 15, 16, 22, 21, 14, 20, 13, 24, 8, 30, 33, 45, 38, 42, 43, 46, 36, 49, 31, 32, 3]
 solution : [0, 9, 26]

After backtrack at level 9
 pending : [37, 23, 40, 5, 15, 16, 22, 21, 14, 20, 13, 24, 8, 30, 33, 45, 38, 42, 43, 46, 36, 49, 31, 32, 3, 25]
 solution : [0, 9, 26]


Before backtrack at level 8
 pending : [37, 23, 40, 5, 15, 16, 22, 21, 14, 20, 13, 24, 8, 30, 33, 45, 38, 42, 43, 46, 36, 49, 31, 32, 3, 25]
 solution : [0, 9, 26]

After backtrack at level 8
 pending : [37, 23, 40, 5, 15, 16, 22, 21, 14, 20, 13, 24, 8, 30, 33, 45, 38, 42, 43, 46, 36, 49, 31, 32, 3, 25, 39]
 solution : [0, 9, 26]


Invert decision for 26 at level 7


New level: 8
 pending : [37, 23, 40, 5, 15, 16, 22, 21, 14, 20, 13, 24, 8, 30, 33, 45, 38, 42, 43, 46, 36, 49, 31, 32, 3, 25, 39]
 solution : [0, 9]


Before reduction : 
 pending  : [37, 23, 40, 5, 15, 16, 22, 21, 14, 20, 13, 24, 8, 30, 33, 45, 38, 42, 43, 46, 36, 49, 31, 32, 3, 25, 39]
 solution : [0, 9]

Essensial at level 8 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 262144), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, 16777216), (14, 8388608), (15, 262144), (16, 131072), (17, -1), (18, -1), (19, -1), (20, 8388608), (21, 4194304), (22, 131072), (23, 2097152), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, 524288), (38, -1), (39, -1), (40, 2097152), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 67108864), (4, -1), (5, 524288), (6, -1), (7, -1), (8, 524288), (9, -1), (10, -1), (11, -1), (12, -1), (13, 33554432), (14, 16777216), (15, 786432), (16, 262144), (17, -1), (18, -1), (19, -1), (20, 8388608), (21, 4194304), (22, 131072), (23, 2097152), (24, 67108864), (25, 268435456), (26, -1), (27, -1), (28, -1), (29, -1), (30, 524288), (31, 1048576), (32, 8192), (33, 8192), (34, -1), (35, -1), (36, 67108864), (37, 67108864), (38, 8192), (39, 134217728), (40, 2097152), (41, -1), (42, 262144), (43, 262144), (44, -1), (45, 33554432), (46, 8388608), (47, -1), (48, -1), (49, 33554432), (50, -1), (51, -1), (52, -1)]

Covered at level 8 : set()

After reduction : 
 pending  : [37, 23, 40, 5, 15, 16, 22, 21, 14, 20, 13, 24, 8, 30, 33, 45, 38, 42, 43, 46, 36, 49, 31, 32, 3, 25, 39]
 solution : [0, 9]


Solution : [0, 9] has cost 9.


Decide in level 8 among pending : [37, 23, 40, 5, 15, 16, 22, 21, 14, 20, 13, 24, 8, 30, 33, 45, 38, 42, 43, 46, 36, 49, 31, 32, 3, 25, 39]

Coverage : [(0, -1), (1, -1), (2, -1), (3, 67108864), (4, -1), (5, 524288), (6, -1), (7, -1), (8, 524288), (9, -1), (10, -1), (11, -1), (12, -1), (13, 33554432), (14, 16777216), (15, 786432), (16, 262144), (17, -1), (18, -1), (19, -1), (20, 8388608), (21, 4194304), (22, 131072), (23, 2097152), (24, 67108864), (25, 268435456), (26, -1), (27, -1), (28, -1), (29, -1), (30, 524288), (31, 1048576), (32, 8192), (33, 8192), (34, -1), (35, -1), (36, 67108864), (37, 67108864), (38, 8192), (39, 134217728), (40, 2097152), (41, -1), (42, 262144), (43, 262144), (44, -1), (45, 33554432), (46, 8388608), (47, -1), (48, -1), (49, 33554432), (50, -1), (51, -1), (52, -1)]

Decide 25 with phase True at level 8

After decision at level 8
 pending : [37, 23, 40, 5, 15, 16, 22, 21, 14, 20, 13, 24, 8, 30, 33, 45, 38, 42, 43, 46, 36, 49, 31, 32, 3, 39]
 solution : [0, 9, 25]


New level: 9
 pending : [37, 23, 40, 5, 15, 16, 22, 21, 14, 20, 13, 24, 8, 30, 33, 45, 38, 42, 43, 46, 36, 49, 31, 32, 3, 39]
 solution : [0, 9, 25]


Before reduction : 
 pending  : [37, 23, 40, 5, 15, 16, 22, 21, 14, 20, 13, 24, 8, 30, 33, 45, 38, 42, 43, 46, 36, 49, 31, 32, 3, 39]
 solution : [0, 9, 25]

Essensial at level 9 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 67108864), (4, -1), (5, 524288), (6, -1), (7, -1), (8, 524288), (9, -1), (10, -1), (11, -1), (12, -1), (13, 33554432), (14, 16777216), (15, 786432), (16, 262144), (17, -1), (18, -1), (19, -1), (20, 8388608), (21, 4194304), (22, 131072), (23, 2097152), (24, 67108864), (25, 268435456), (26, -1), (27, -1), (28, -1), (29, -1), (30, 524288), (31, 1048576), (32, 8192), (33, 8192), (34, -1), (35, -1), (36, 67108864), (37, 67108864), (38, 8192), (39, 134217728), (40, 2097152), (41, -1), (42, 262144), (43, 262144), (44, -1), (45, 33554432), (46, 8388608), (47, -1), (48, -1), (49, 33554432), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 16777216), (4, -1), (5, 524288), (6, -1), (7, -1), (8, 131072), (9, -1), (10, -1), (11, -1), (12, -1), (13, 33554432), (14, 16777216), (15, 786432), (16, 262144), (17, -1), (18, -1), (19, -1), (20, 8388608), (21, 4194304), (22, 131072), (23, 2097152), (24, 16777216), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, 131072), (31, 0), (32, 0), (33, 2048), (34, -1), (35, -1), (36, 33554432), (37, 67108864), (38, 2048), (39, 512), (40, 2097152), (41, -1), (42, 65536), (43, 65536), (44, -1), (45, 16777216), (46, 2097152), (47, -1), (48, -1), (49, 33554432), (50, -1), (51, -1), (52, -1)]

Covered at level 9 : {32, 31}

After reduction : 
 pending  : [37, 23, 40, 5, 15, 16, 22, 21, 14, 20, 13, 24, 8, 30, 33, 45, 38, 42, 43, 46, 36, 49, 3, 39]
 solution : [0, 9, 25]


Before reduction : 
 pending  : [37, 23, 40, 5, 15, 16, 22, 21, 14, 20, 13, 24, 8, 30, 33, 45, 38, 42, 43, 46, 36, 49, 3, 39]
 solution : [0, 9, 25]

Essensial at level 9 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 16777216), (4, -1), (5, 524288), (6, -1), (7, -1), (8, 131072), (9, -1), (10, -1), (11, -1), (12, -1), (13, 33554432), (14, 16777216), (15, 786432), (16, 262144), (17, -1), (18, -1), (19, -1), (20, 8388608), (21, 4194304), (22, 131072), (23, 2097152), (24, 16777216), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, 131072), (31, 0), (32, 0), (33, 2048), (34, -1), (35, -1), (36, 33554432), (37, 67108864), (38, 2048), (39, 512), (40, 2097152), (41, -1), (42, 65536), (43, 65536), (44, -1), (45, 16777216), (46, 2097152), (47, -1), (48, -1), (49, 33554432), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 16777216), (4, -1), (5, 524288), (6, -1), (7, -1), (8, 131072), (9, -1), (10, -1), (11, -1), (12, -1), (13, 33554432), (14, 16777216), (15, 786432), (16, 262144), (17, -1), (18, -1), (19, -1), (20, 8388608), (21, 4194304), (22, 131072), (23, 2097152), (24, 16777216), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, 131072), (31, -1), (32, -1), (33, 2048), (34, -1), (35, -1), (36, 33554432), (37, 67108864), (38, 2048), (39, 512), (40, 2097152), (41, -1), (42, 65536), (43, 65536), (44, -1), (45, 16777216), (46, 2097152), (47, -1), (48, -1), (49, 33554432), (50, -1), (51, -1), (52, -1)]

Covered at level 9 : set()

After reduction : 
 pending  : [37, 23, 40, 5, 15, 16, 22, 21, 14, 20, 13, 24, 8, 30, 33, 45, 38, 42, 43, 46, 36, 49, 3, 39]
 solution : [0, 9, 25]


Solution : [0, 9, 25] has cost 16.


Decide in level 9 among pending : [37, 23, 40, 5, 15, 16, 22, 21, 14, 20, 13, 24, 8, 30, 33, 45, 38, 42, 43, 46, 36, 49, 3, 39]

Coverage : [(0, -1), (1, -1), (2, -1), (3, 16777216), (4, -1), (5, 524288), (6, -1), (7, -1), (8, 131072), (9, -1), (10, -1), (11, -1), (12, -1), (13, 33554432), (14, 16777216), (15, 786432), (16, 262144), (17, -1), (18, -1), (19, -1), (20, 8388608), (21, 4194304), (22, 131072), (23, 2097152), (24, 16777216), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, 131072), (31, -1), (32, -1), (33, 2048), (34, -1), (35, -1), (36, 33554432), (37, 67108864), (38, 2048), (39, 512), (40, 2097152), (41, -1), (42, 65536), (43, 65536), (44, -1), (45, 16777216), (46, 2097152), (47, -1), (48, -1), (49, 33554432), (50, -1), (51, -1), (52, -1)]

Decide 37 with phase True at level 9

After decision at level 9
 pending : [23, 40, 5, 15, 16, 22, 21, 14, 20, 13, 24, 8, 30, 33, 45, 38, 42, 43, 46, 36, 49, 3, 39]
 solution : [0, 9, 25, 37]


New level: 10
 pending : [23, 40, 5, 15, 16, 22, 21, 14, 20, 13, 24, 8, 30, 33, 45, 38, 42, 43, 46, 36, 49, 3, 39]
 solution : [0, 9, 25, 37]


Before reduction : 
 pending  : [23, 40, 5, 15, 16, 22, 21, 14, 20, 13, 24, 8, 30, 33, 45, 38, 42, 43, 46, 36, 49, 3, 39]
 solution : [0, 9, 25, 37]

Essensial at level 10 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 16777216), (4, -1), (5, 524288), (6, -1), (7, -1), (8, 131072), (9, -1), (10, -1), (11, -1), (12, -1), (13, 33554432), (14, 16777216), (15, 786432), (16, 262144), (17, -1), (18, -1), (19, -1), (20, 8388608), (21, 4194304), (22, 131072), (23, 2097152), (24, 16777216), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, 131072), (31, -1), (32, -1), (33, 2048), (34, -1), (35, -1), (36, 33554432), (37, 67108864), (38, 2048), (39, 512), (40, 2097152), (41, -1), (42, 65536), (43, 65536), (44, -1), (45, 16777216), (46, 2097152), (47, -1), (48, -1), (49, 33554432), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 4194304), (4, -1), (5, 262144), (6, -1), (7, -1), (8, 32768), (9, -1), (10, -1), (11, -1), (12, -1), (13, 16777216), (14, 8388608), (15, 262144), (16, 131072), (17, -1), (18, -1), (19, -1), (20, 8388608), (21, 4194304), (22, 131072), (23, 524288), (24, 4194304), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, 32768), (31, -1), (32, -1), (33, 512), (34, -1), (35, -1), (36, 33554432), (37, -1), (38, 512), (39, 0), (40, 524288), (41, -1), (42, 16384), (43, 16384), (44, -1), (45, 8388608), (46, 524288), (47, -1), (48, -1), (49, 33554432), (50, -1), (51, -1), (52, -1)]

Covered at level 10 : {39}

After reduction : 
 pending  : [23, 40, 5, 15, 16, 22, 21, 14, 20, 13, 24, 8, 30, 33, 45, 38, 42, 43, 46, 36, 49, 3]
 solution : [0, 9, 25, 37]


Before reduction : 
 pending  : [23, 40, 5, 15, 16, 22, 21, 14, 20, 13, 24, 8, 30, 33, 45, 38, 42, 43, 46, 36, 49, 3]
 solution : [0, 9, 25, 37]

Essensial at level 10 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 4194304), (4, -1), (5, 262144), (6, -1), (7, -1), (8, 32768), (9, -1), (10, -1), (11, -1), (12, -1), (13, 16777216), (14, 8388608), (15, 262144), (16, 131072), (17, -1), (18, -1), (19, -1), (20, 8388608), (21, 4194304), (22, 131072), (23, 524288), (24, 4194304), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, 32768), (31, -1), (32, -1), (33, 512), (34, -1), (35, -1), (36, 33554432), (37, -1), (38, 512), (39, 0), (40, 524288), (41, -1), (42, 16384), (43, 16384), (44, -1), (45, 8388608), (46, 524288), (47, -1), (48, -1), (49, 33554432), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 4194304), (4, -1), (5, 262144), (6, -1), (7, -1), (8, 32768), (9, -1), (10, -1), (11, -1), (12, -1), (13, 16777216), (14, 8388608), (15, 262144), (16, 131072), (17, -1), (18, -1), (19, -1), (20, 8388608), (21, 4194304), (22, 131072), (23, 524288), (24, 4194304), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, 32768), (31, -1), (32, -1), (33, 512), (34, -1), (35, -1), (36, 33554432), (37, -1), (38, 512), (39, -1), (40, 524288), (41, -1), (42, 16384), (43, 16384), (44, -1), (45, 8388608), (46, 524288), (47, -1), (48, -1), (49, 33554432), (50, -1), (51, -1), (52, -1)]

Covered at level 10 : set()

After reduction : 
 pending  : [23, 40, 5, 15, 16, 22, 21, 14, 20, 13, 24, 8, 30, 33, 45, 38, 42, 43, 46, 36, 49, 3]
 solution : [0, 9, 25, 37]


Solution : [0, 9, 25, 37] has cost 34.


Before backtrack at level 10
 pending : [23, 40, 5, 15, 16, 22, 21, 14, 20, 13, 24, 8, 30, 33, 45, 38, 42, 43, 46, 36, 49, 3]
 solution : [0, 9, 25, 37]

After backtrack at level 10
 pending : [23, 40, 5, 15, 16, 22, 21, 14, 20, 13, 24, 8, 30, 33, 45, 38, 42, 43, 46, 36, 49, 3, 39]
 solution : [0, 9, 25, 37]


Invert decision for 37 at level 9


New level: 10
 pending : [23, 40, 5, 15, 16, 22, 21, 14, 20, 13, 24, 8, 30, 33, 45, 38, 42, 43, 46, 36, 49, 3, 39]
 solution : [0, 9, 25]


Before reduction : 
 pending  : [23, 40, 5, 15, 16, 22, 21, 14, 20, 13, 24, 8, 30, 33, 45, 38, 42, 43, 46, 36, 49, 3, 39]
 solution : [0, 9, 25]

Essensial at level 10 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 4194304), (4, -1), (5, 262144), (6, -1), (7, -1), (8, 32768), (9, -1), (10, -1), (11, -1), (12, -1), (13, 16777216), (14, 8388608), (15, 262144), (16, 131072), (17, -1), (18, -1), (19, -1), (20, 8388608), (21, 4194304), (22, 131072), (23, 524288), (24, 4194304), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, 32768), (31, -1), (32, -1), (33, 512), (34, -1), (35, -1), (36, 33554432), (37, -1), (38, 512), (39, -1), (40, 524288), (41, -1), (42, 16384), (43, 16384), (44, -1), (45, 8388608), (46, 524288), (47, -1), (48, -1), (49, 33554432), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 16777216), (4, -1), (5, 524288), (6, -1), (7, -1), (8, 131072), (9, -1), (10, -1), (11, -1), (12, -1), (13, 33554432), (14, 16777216), (15, 786432), (16, 262144), (17, -1), (18, -1), (19, -1), (20, 8388608), (21, 4194304), (22, 131072), (23, 2097152), (24, 16777216), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, 131072), (31, -1), (32, -1), (33, 2048), (34, -1), (35, -1), (36, 33554432), (37, -1), (38, 2048), (39, 512), (40, 2097152), (41, -1), (42, 65536), (43, 65536), (44, -1), (45, 16777216), (46, 2097152), (47, -1), (48, -1), (49, 33554432), (50, -1), (51, -1), (52, -1)]

Covered at level 10 : set()

After reduction : 
 pending  : [23, 40, 5, 15, 16, 22, 21, 14, 20, 13, 24, 8, 30, 33, 45, 38, 42, 43, 46, 36, 49, 3, 39]
 solution : [0, 9, 25]


Solution : [0, 9, 25] has cost 16.


Decide in level 10 among pending : [23, 40, 5, 15, 16, 22, 21, 14, 20, 13, 24, 8, 30, 33, 45, 38, 42, 43, 46, 36, 49, 3, 39]

Coverage : [(0, -1), (1, -1), (2, -1), (3, 16777216), (4, -1), (5, 524288), (6, -1), (7, -1), (8, 131072), (9, -1), (10, -1), (11, -1), (12, -1), (13, 33554432), (14, 16777216), (15, 786432), (16, 262144), (17, -1), (18, -1), (19, -1), (20, 8388608), (21, 4194304), (22, 131072), (23, 2097152), (24, 16777216), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, 131072), (31, -1), (32, -1), (33, 2048), (34, -1), (35, -1), (36, 33554432), (37, -1), (38, 2048), (39, 512), (40, 2097152), (41, -1), (42, 65536), (43, 65536), (44, -1), (45, 16777216), (46, 2097152), (47, -1), (48, -1), (49, 33554432), (50, -1), (51, -1), (52, -1)]

Decide 13 with phase True at level 10

After decision at level 10
 pending : [23, 40, 5, 15, 16, 22, 21, 14, 20, 24, 8, 30, 33, 45, 38, 42, 43, 46, 36, 49, 3, 39]
 solution : [0, 9, 25, 13]


New level: 11
 pending : [23, 40, 5, 15, 16, 22, 21, 14, 20, 24, 8, 30, 33, 45, 38, 42, 43, 46, 36, 49, 3, 39]
 solution : [0, 9, 25, 13]


Before reduction : 
 pending  : [23, 40, 5, 15, 16, 22, 21, 14, 20, 24, 8, 30, 33, 45, 38, 42, 43, 46, 36, 49, 3, 39]
 solution : [0, 9, 25, 13]

Essensial at level 11 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 16777216), (4, -1), (5, 524288), (6, -1), (7, -1), (8, 131072), (9, -1), (10, -1), (11, -1), (12, -1), (13, 33554432), (14, 16777216), (15, 786432), (16, 262144), (17, -1), (18, -1), (19, -1), (20, 8388608), (21, 4194304), (22, 131072), (23, 2097152), (24, 16777216), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, 131072), (31, -1), (32, -1), (33, 2048), (34, -1), (35, -1), (36, 33554432), (37, -1), (38, 2048), (39, 512), (40, 2097152), (41, -1), (42, 65536), (43, 65536), (44, -1), (45, 16777216), (46, 2097152), (47, -1), (48, -1), (49, 33554432), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 16777216), (4, -1), (5, 0), (6, -1), (7, -1), (8, 32768), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 0), (15, 0), (16, 0), (17, -1), (18, -1), (19, -1), (20, 131072), (21, 32768), (22, 32768), (23, 2048), (24, 16777216), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, 65536), (31, -1), (32, -1), (33, 1024), (34, -1), (35, -1), (36, 33554432), (37, -1), (38, 512), (39, 512), (40, 2048), (41, -1), (42, 32768), (43, 32768), (44, -1), (45, 16777216), (46, 2097152), (47, -1), (48, -1), (49, 33554432), (50, -1), (51, -1), (52, -1)]

Covered at level 11 : {16, 5, 14, 15}

After reduction : 
 pending  : [23, 40, 22, 21, 20, 24, 8, 30, 33, 45, 38, 42, 43, 46, 36, 49, 3, 39]
 solution : [0, 9, 25, 13]


Before reduction : 
 pending  : [23, 40, 22, 21, 20, 24, 8, 30, 33, 45, 38, 42, 43, 46, 36, 49, 3, 39]
 solution : [0, 9, 25, 13]

Essensial at level 11 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 16777216), (4, -1), (5, 0), (6, -1), (7, -1), (8, 32768), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 0), (15, 0), (16, 0), (17, -1), (18, -1), (19, -1), (20, 131072), (21, 32768), (22, 32768), (23, 2048), (24, 16777216), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, 65536), (31, -1), (32, -1), (33, 1024), (34, -1), (35, -1), (36, 33554432), (37, -1), (38, 512), (39, 512), (40, 2048), (41, -1), (42, 32768), (43, 32768), (44, -1), (45, 16777216), (46, 2097152), (47, -1), (48, -1), (49, 33554432), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 16777216), (4, -1), (5, -1), (6, -1), (7, -1), (8, 32768), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, 131072), (21, 32768), (22, 32768), (23, 2048), (24, 16777216), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, 65536), (31, -1), (32, -1), (33, 1024), (34, -1), (35, -1), (36, 33554432), (37, -1), (38, 512), (39, 512), (40, 2048), (41, -1), (42, 32768), (43, 32768), (44, -1), (45, 16777216), (46, 2097152), (47, -1), (48, -1), (49, 33554432), (50, -1), (51, -1), (52, -1)]

Covered at level 11 : set()

After reduction : 
 pending  : [23, 40, 22, 21, 20, 24, 8, 30, 33, 45, 38, 42, 43, 46, 36, 49, 3, 39]
 solution : [0, 9, 25, 13]


Solution : [0, 9, 25, 13] has cost 25.


Before backtrack at level 11
 pending : [23, 40, 22, 21, 20, 24, 8, 30, 33, 45, 38, 42, 43, 46, 36, 49, 3, 39]
 solution : [0, 9, 25, 13]

After backtrack at level 11
 pending : [23, 40, 22, 21, 20, 24, 8, 30, 33, 45, 38, 42, 43, 46, 36, 49, 3, 39, 5, 15, 16, 14]
 solution : [0, 9, 25, 13]


Invert decision for 13 at level 10


New level: 11
 pending : [23, 40, 22, 21, 20, 24, 8, 30, 33, 45, 38, 42, 43, 46, 36, 49, 3, 39, 5, 15, 16, 14]
 solution : [0, 9, 25]


Before reduction : 
 pending  : [23, 40, 22, 21, 20, 24, 8, 30, 33, 45, 38, 42, 43, 46, 36, 49, 3, 39, 5, 15, 16, 14]
 solution : [0, 9, 25]

Essensial at level 11 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 16777216), (4, -1), (5, -1), (6, -1), (7, -1), (8, 32768), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, 131072), (21, 32768), (22, 32768), (23, 2048), (24, 16777216), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, 65536), (31, -1), (32, -1), (33, 1024), (34, -1), (35, -1), (36, 33554432), (37, -1), (38, 512), (39, 512), (40, 2048), (41, -1), (42, 32768), (43, 32768), (44, -1), (45, 16777216), (46, 2097152), (47, -1), (48, -1), (49, 33554432), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 16777216), (4, -1), (5, 524288), (6, -1), (7, -1), (8, 131072), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 16777216), (15, 786432), (16, 262144), (17, -1), (18, -1), (19, -1), (20, 8388608), (21, 4194304), (22, 131072), (23, 2097152), (24, 16777216), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, 131072), (31, -1), (32, -1), (33, 2048), (34, -1), (35, -1), (36, 33554432), (37, -1), (38, 2048), (39, 512), (40, 2097152), (41, -1), (42, 65536), (43, 65536), (44, -1), (45, 16777216), (46, 2097152), (47, -1), (48, -1), (49, 33554432), (50, -1), (51, -1), (52, -1)]

Covered at level 11 : set()

After reduction : 
 pending  : [23, 40, 22, 21, 20, 24, 8, 30, 33, 45, 38, 42, 43, 46, 36, 49, 3, 39, 5, 15, 16, 14]
 solution : [0, 9, 25]


Solution : [0, 9, 25] has cost 16.


Decide in level 11 among pending : [23, 40, 22, 21, 20, 24, 8, 30, 33, 45, 38, 42, 43, 46, 36, 49, 3, 39, 5, 15, 16, 14]

Coverage : [(0, -1), (1, -1), (2, -1), (3, 16777216), (4, -1), (5, 524288), (6, -1), (7, -1), (8, 131072), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 16777216), (15, 786432), (16, 262144), (17, -1), (18, -1), (19, -1), (20, 8388608), (21, 4194304), (22, 131072), (23, 2097152), (24, 16777216), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, 131072), (31, -1), (32, -1), (33, 2048), (34, -1), (35, -1), (36, 33554432), (37, -1), (38, 2048), (39, 512), (40, 2097152), (41, -1), (42, 65536), (43, 65536), (44, -1), (45, 16777216), (46, 2097152), (47, -1), (48, -1), (49, 33554432), (50, -1), (51, -1), (52, -1)]

Decide 36 with phase True at level 11

After decision at level 11
 pending : [23, 40, 22, 21, 20, 24, 8, 30, 33, 45, 38, 42, 43, 46, 49, 3, 39, 5, 15, 16, 14]
 solution : [0, 9, 25, 36]


New level: 12
 pending : [23, 40, 22, 21, 20, 24, 8, 30, 33, 45, 38, 42, 43, 46, 49, 3, 39, 5, 15, 16, 14]
 solution : [0, 9, 25, 36]


Before reduction : 
 pending  : [23, 40, 22, 21, 20, 24, 8, 30, 33, 45, 38, 42, 43, 46, 49, 3, 39, 5, 15, 16, 14]
 solution : [0, 9, 25, 36]

Essensial at level 12 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 16777216), (4, -1), (5, 524288), (6, -1), (7, -1), (8, 131072), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 16777216), (15, 786432), (16, 262144), (17, -1), (18, -1), (19, -1), (20, 8388608), (21, 4194304), (22, 131072), (23, 2097152), (24, 16777216), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, 131072), (31, -1), (32, -1), (33, 2048), (34, -1), (35, -1), (36, 33554432), (37, -1), (38, 2048), (39, 512), (40, 2097152), (41, -1), (42, 65536), (43, 65536), (44, -1), (45, 16777216), (46, 2097152), (47, -1), (48, -1), (49, 33554432), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 2048), (4, -1), (5, 262144), (6, -1), (7, -1), (8, 0), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 16777216), (15, 262144), (16, 262144), (17, -1), (18, -1), (19, -1), (20, 8388608), (21, 4194304), (22, 131072), (23, 2097152), (24, 2048), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, 0), (31, -1), (32, -1), (33, 0), (34, -1), (35, -1), (36, -1), (37, -1), (38, 0), (39, 512), (40, 2097152), (41, -1), (42, 0), (43, 0), (44, -1), (45, 0), (46, 0), (47, -1), (48, -1), (49, 0), (50, -1), (51, -1), (52, -1)]

Covered at level 12 : {33, 38, 8, 42, 43, 45, 46, 49, 30}

After reduction : 
 pending  : [23, 40, 22, 21, 20, 24, 3, 39, 5, 15, 16, 14]
 solution : [0, 9, 25, 36]


Before reduction : 
 pending  : [23, 40, 22, 21, 20, 24, 3, 39, 5, 15, 16, 14]
 solution : [0, 9, 25, 36]

Essensial at level 12 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 2048), (4, -1), (5, 262144), (6, -1), (7, -1), (8, 0), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 16777216), (15, 262144), (16, 262144), (17, -1), (18, -1), (19, -1), (20, 8388608), (21, 4194304), (22, 131072), (23, 2097152), (24, 2048), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, 0), (31, -1), (32, -1), (33, 0), (34, -1), (35, -1), (36, -1), (37, -1), (38, 0), (39, 512), (40, 2097152), (41, -1), (42, 0), (43, 0), (44, -1), (45, 0), (46, 0), (47, -1), (48, -1), (49, 0), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 2048), (4, -1), (5, 262144), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 16777216), (15, 262144), (16, 262144), (17, -1), (18, -1), (19, -1), (20, 8388608), (21, 4194304), (22, 131072), (23, 2097152), (24, 2048), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, 512), (40, 2097152), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 12 : set()

After reduction : 
 pending  : [23, 40, 22, 21, 20, 24, 3, 39, 5, 15, 16, 14]
 solution : [0, 9, 25, 36]


Solution : [0, 9, 25, 36] has cost 34.


Before backtrack at level 12
 pending : [23, 40, 22, 21, 20, 24, 3, 39, 5, 15, 16, 14]
 solution : [0, 9, 25, 36]

After backtrack at level 12
 pending : [23, 40, 22, 21, 20, 24, 3, 39, 5, 15, 16, 14, 8, 30, 33, 45, 38, 42, 43, 46, 49]
 solution : [0, 9, 25, 36]


Invert decision for 36 at level 11


New level: 12
 pending : [23, 40, 22, 21, 20, 24, 3, 39, 5, 15, 16, 14, 8, 30, 33, 45, 38, 42, 43, 46, 49]
 solution : [0, 9, 25]


Before reduction : 
 pending  : [23, 40, 22, 21, 20, 24, 3, 39, 5, 15, 16, 14, 8, 30, 33, 45, 38, 42, 43, 46, 49]
 solution : [0, 9, 25]

Essensial at level 12 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 2048), (4, -1), (5, 262144), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 16777216), (15, 262144), (16, 262144), (17, -1), (18, -1), (19, -1), (20, 8388608), (21, 4194304), (22, 131072), (23, 2097152), (24, 2048), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, 512), (40, 2097152), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 16777216), (4, -1), (5, 524288), (6, -1), (7, -1), (8, 131072), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 16777216), (15, 786432), (16, 262144), (17, -1), (18, -1), (19, -1), (20, 8388608), (21, 4194304), (22, 131072), (23, 2097152), (24, 16777216), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, 131072), (31, -1), (32, -1), (33, 2048), (34, -1), (35, -1), (36, -1), (37, -1), (38, 2048), (39, 512), (40, 2097152), (41, -1), (42, 65536), (43, 65536), (44, -1), (45, 16777216), (46, 2097152), (47, -1), (48, -1), (49, 33554432), (50, -1), (51, -1), (52, -1)]

Covered at level 12 : set()

After reduction : 
 pending  : [23, 40, 22, 21, 20, 24, 3, 39, 5, 15, 16, 14, 8, 30, 33, 45, 38, 42, 43, 46, 49]
 solution : [0, 9, 25]


Solution : [0, 9, 25] has cost 16.


Decide in level 12 among pending : [23, 40, 22, 21, 20, 24, 3, 39, 5, 15, 16, 14, 8, 30, 33, 45, 38, 42, 43, 46, 49]

Coverage : [(0, -1), (1, -1), (2, -1), (3, 16777216), (4, -1), (5, 524288), (6, -1), (7, -1), (8, 131072), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 16777216), (15, 786432), (16, 262144), (17, -1), (18, -1), (19, -1), (20, 8388608), (21, 4194304), (22, 131072), (23, 2097152), (24, 16777216), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, 131072), (31, -1), (32, -1), (33, 2048), (34, -1), (35, -1), (36, -1), (37, -1), (38, 2048), (39, 512), (40, 2097152), (41, -1), (42, 65536), (43, 65536), (44, -1), (45, 16777216), (46, 2097152), (47, -1), (48, -1), (49, 33554432), (50, -1), (51, -1), (52, -1)]

Decide 49 with phase True at level 12

After decision at level 12
 pending : [23, 40, 22, 21, 20, 24, 3, 39, 5, 15, 16, 14, 8, 30, 33, 45, 38, 42, 43, 46]
 solution : [0, 9, 25, 49]


New level: 13
 pending : [23, 40, 22, 21, 20, 24, 3, 39, 5, 15, 16, 14, 8, 30, 33, 45, 38, 42, 43, 46]
 solution : [0, 9, 25, 49]


Before reduction : 
 pending  : [23, 40, 22, 21, 20, 24, 3, 39, 5, 15, 16, 14, 8, 30, 33, 45, 38, 42, 43, 46]
 solution : [0, 9, 25, 49]

Essensial at level 13 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 16777216), (4, -1), (5, 524288), (6, -1), (7, -1), (8, 131072), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 16777216), (15, 786432), (16, 262144), (17, -1), (18, -1), (19, -1), (20, 8388608), (21, 4194304), (22, 131072), (23, 2097152), (24, 16777216), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, 131072), (31, -1), (32, -1), (33, 2048), (34, -1), (35, -1), (36, -1), (37, -1), (38, 2048), (39, 512), (40, 2097152), (41, -1), (42, 65536), (43, 65536), (44, -1), (45, 16777216), (46, 2097152), (47, -1), (48, -1), (49, 33554432), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 16777216), (4, -1), (5, 524288), (6, -1), (7, -1), (8, 2048), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 16777216), (15, 786432), (16, 262144), (17, -1), (18, -1), (19, -1), (20, 8388608), (21, 4194304), (22, 131072), (23, 2097152), (24, 16777216), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, 131072), (31, -1), (32, -1), (33, 2048), (34, -1), (35, -1), (36, -1), (37, -1), (38, 0), (39, 512), (40, 2097152), (41, -1), (42, 0), (43, 0), (44, -1), (45, 2048), (46, 0), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 13 : {46, 42, 43, 38}

After reduction : 
 pending  : [23, 40, 22, 21, 20, 24, 3, 39, 5, 15, 16, 14, 8, 30, 33, 45]
 solution : [0, 9, 25, 49]


Before reduction : 
 pending  : [23, 40, 22, 21, 20, 24, 3, 39, 5, 15, 16, 14, 8, 30, 33, 45]
 solution : [0, 9, 25, 49]

Essensial at level 13 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 16777216), (4, -1), (5, 524288), (6, -1), (7, -1), (8, 2048), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 16777216), (15, 786432), (16, 262144), (17, -1), (18, -1), (19, -1), (20, 8388608), (21, 4194304), (22, 131072), (23, 2097152), (24, 16777216), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, 131072), (31, -1), (32, -1), (33, 2048), (34, -1), (35, -1), (36, -1), (37, -1), (38, 0), (39, 512), (40, 2097152), (41, -1), (42, 0), (43, 0), (44, -1), (45, 2048), (46, 0), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 16777216), (4, -1), (5, 524288), (6, -1), (7, -1), (8, 2048), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 16777216), (15, 786432), (16, 262144), (17, -1), (18, -1), (19, -1), (20, 8388608), (21, 4194304), (22, 131072), (23, 2097152), (24, 16777216), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, 131072), (31, -1), (32, -1), (33, 2048), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, 512), (40, 2097152), (41, -1), (42, -1), (43, -1), (44, -1), (45, 2048), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 13 : set()

After reduction : 
 pending  : [23, 40, 22, 21, 20, 24, 3, 39, 5, 15, 16, 14, 8, 30, 33, 45]
 solution : [0, 9, 25, 49]


Solution : [0, 9, 25, 49] has cost 47.


Before backtrack at level 13
 pending : [23, 40, 22, 21, 20, 24, 3, 39, 5, 15, 16, 14, 8, 30, 33, 45]
 solution : [0, 9, 25, 49]

After backtrack at level 13
 pending : [23, 40, 22, 21, 20, 24, 3, 39, 5, 15, 16, 14, 8, 30, 33, 45, 38, 42, 43, 46]
 solution : [0, 9, 25, 49]


Invert decision for 49 at level 12


New level: 13
 pending : [23, 40, 22, 21, 20, 24, 3, 39, 5, 15, 16, 14, 8, 30, 33, 45, 38, 42, 43, 46]
 solution : [0, 9, 25]


Before reduction : 
 pending  : [23, 40, 22, 21, 20, 24, 3, 39, 5, 15, 16, 14, 8, 30, 33, 45, 38, 42, 43, 46]
 solution : [0, 9, 25]

Essensial at level 13 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 16777216), (4, -1), (5, 524288), (6, -1), (7, -1), (8, 2048), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 16777216), (15, 786432), (16, 262144), (17, -1), (18, -1), (19, -1), (20, 8388608), (21, 4194304), (22, 131072), (23, 2097152), (24, 16777216), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, 131072), (31, -1), (32, -1), (33, 2048), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, 512), (40, 2097152), (41, -1), (42, -1), (43, -1), (44, -1), (45, 2048), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 16777216), (4, -1), (5, 524288), (6, -1), (7, -1), (8, 131072), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 16777216), (15, 786432), (16, 262144), (17, -1), (18, -1), (19, -1), (20, 8388608), (21, 4194304), (22, 131072), (23, 2097152), (24, 16777216), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, 131072), (31, -1), (32, -1), (33, 2048), (34, -1), (35, -1), (36, -1), (37, -1), (38, 2048), (39, 512), (40, 2097152), (41, -1), (42, 65536), (43, 65536), (44, -1), (45, 16777216), (46, 2097152), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 13 : set()

After reduction : 
 pending  : [23, 40, 22, 21, 20, 24, 3, 39, 5, 15, 16, 14, 8, 30, 33, 45, 38, 42, 43, 46]
 solution : [0, 9, 25]


Solution : [0, 9, 25] has cost 16.


Decide in level 13 among pending : [23, 40, 22, 21, 20, 24, 3, 39, 5, 15, 16, 14, 8, 30, 33, 45, 38, 42, 43, 46]

Coverage : [(0, -1), (1, -1), (2, -1), (3, 16777216), (4, -1), (5, 524288), (6, -1), (7, -1), (8, 131072), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 16777216), (15, 786432), (16, 262144), (17, -1), (18, -1), (19, -1), (20, 8388608), (21, 4194304), (22, 131072), (23, 2097152), (24, 16777216), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, 131072), (31, -1), (32, -1), (33, 2048), (34, -1), (35, -1), (36, -1), (37, -1), (38, 2048), (39, 512), (40, 2097152), (41, -1), (42, 65536), (43, 65536), (44, -1), (45, 16777216), (46, 2097152), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Decide 24 with phase True at level 13

After decision at level 13
 pending : [23, 40, 22, 21, 20, 3, 39, 5, 15, 16, 14, 8, 30, 33, 45, 38, 42, 43, 46]
 solution : [0, 9, 25, 24]


New level: 14
 pending : [23, 40, 22, 21, 20, 3, 39, 5, 15, 16, 14, 8, 30, 33, 45, 38, 42, 43, 46]
 solution : [0, 9, 25, 24]


Before reduction : 
 pending  : [23, 40, 22, 21, 20, 3, 39, 5, 15, 16, 14, 8, 30, 33, 45, 38, 42, 43, 46]
 solution : [0, 9, 25, 24]

Essensial at level 14 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 16777216), (4, -1), (5, 524288), (6, -1), (7, -1), (8, 131072), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 16777216), (15, 786432), (16, 262144), (17, -1), (18, -1), (19, -1), (20, 8388608), (21, 4194304), (22, 131072), (23, 2097152), (24, 16777216), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, 131072), (31, -1), (32, -1), (33, 2048), (34, -1), (35, -1), (36, -1), (37, -1), (38, 2048), (39, 512), (40, 2097152), (41, -1), (42, 65536), (43, 65536), (44, -1), (45, 16777216), (46, 2097152), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 0), (4, -1), (5, 262144), (6, -1), (7, -1), (8, 0), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 8388608), (15, 262144), (16, 131072), (17, -1), (18, -1), (19, -1), (20, 8388608), (21, 4194304), (22, 131072), (23, 2097152), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, 0), (31, -1), (32, -1), (33, 0), (34, -1), (35, -1), (36, -1), (37, -1), (38, 0), (39, 512), (40, 2097152), (41, -1), (42, 0), (43, 0), (44, -1), (45, 0), (46, 0), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 14 : {33, 3, 38, 8, 42, 43, 45, 46, 30}

After reduction : 
 pending  : [23, 40, 22, 21, 20, 39, 5, 15, 16, 14]
 solution : [0, 9, 25, 24]


Before reduction : 
 pending  : [23, 40, 22, 21, 20, 39, 5, 15, 16, 14]
 solution : [0, 9, 25, 24]

Essensial at level 14 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 0), (4, -1), (5, 262144), (6, -1), (7, -1), (8, 0), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 8388608), (15, 262144), (16, 131072), (17, -1), (18, -1), (19, -1), (20, 8388608), (21, 4194304), (22, 131072), (23, 2097152), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, 0), (31, -1), (32, -1), (33, 0), (34, -1), (35, -1), (36, -1), (37, -1), (38, 0), (39, 512), (40, 2097152), (41, -1), (42, 0), (43, 0), (44, -1), (45, 0), (46, 0), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 262144), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 8388608), (15, 262144), (16, 131072), (17, -1), (18, -1), (19, -1), (20, 8388608), (21, 4194304), (22, 131072), (23, 2097152), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, 512), (40, 2097152), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 14 : set()

After reduction : 
 pending  : [23, 40, 22, 21, 20, 39, 5, 15, 16, 14]
 solution : [0, 9, 25, 24]


Solution : [0, 9, 25, 24] has cost 23.


Before backtrack at level 14
 pending : [23, 40, 22, 21, 20, 39, 5, 15, 16, 14]
 solution : [0, 9, 25, 24]

After backtrack at level 14
 pending : [23, 40, 22, 21, 20, 39, 5, 15, 16, 14, 3, 8, 30, 33, 45, 38, 42, 43, 46]
 solution : [0, 9, 25, 24]


Invert decision for 24 at level 13


New level: 14
 pending : [23, 40, 22, 21, 20, 39, 5, 15, 16, 14, 3, 8, 30, 33, 45, 38, 42, 43, 46]
 solution : [0, 9, 25]


Before reduction : 
 pending  : [23, 40, 22, 21, 20, 39, 5, 15, 16, 14, 3, 8, 30, 33, 45, 38, 42, 43, 46]
 solution : [0, 9, 25]

Essensial at level 14 : {3}

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 262144), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 8388608), (15, 262144), (16, 131072), (17, -1), (18, -1), (19, -1), (20, 8388608), (21, 4194304), (22, 131072), (23, 2097152), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, 512), (40, 2097152), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 262144), (6, -1), (7, -1), (8, 0), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 8388608), (15, 262144), (16, 131072), (17, -1), (18, -1), (19, -1), (20, 8388608), (21, 4194304), (22, 131072), (23, 2097152), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, 0), (31, -1), (32, -1), (33, 0), (34, -1), (35, -1), (36, -1), (37, -1), (38, 0), (39, 512), (40, 2097152), (41, -1), (42, 0), (43, 0), (44, -1), (45, 0), (46, 0), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 14 : {33, 38, 8, 42, 43, 45, 46, 30}

After reduction : 
 pending  : [23, 40, 22, 21, 20, 39, 5, 15, 16, 14]
 solution : [0, 9, 25, 3]


Before reduction : 
 pending  : [23, 40, 22, 21, 20, 39, 5, 15, 16, 14]
 solution : [0, 9, 25, 3]

Essensial at level 14 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 262144), (6, -1), (7, -1), (8, 0), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 8388608), (15, 262144), (16, 131072), (17, -1), (18, -1), (19, -1), (20, 8388608), (21, 4194304), (22, 131072), (23, 2097152), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, 0), (31, -1), (32, -1), (33, 0), (34, -1), (35, -1), (36, -1), (37, -1), (38, 0), (39, 512), (40, 2097152), (41, -1), (42, 0), (43, 0), (44, -1), (45, 0), (46, 0), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 262144), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 8388608), (15, 262144), (16, 131072), (17, -1), (18, -1), (19, -1), (20, 8388608), (21, 4194304), (22, 131072), (23, 2097152), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, 512), (40, 2097152), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 14 : set()

After reduction : 
 pending  : [23, 40, 22, 21, 20, 39, 5, 15, 16, 14]
 solution : [0, 9, 25, 3]


Solution : [0, 9, 25, 3] has cost 20.


Before backtrack at level 14
 pending : [23, 40, 22, 21, 20, 39, 5, 15, 16, 14]
 solution : [0, 9, 25, 3]

After backtrack at level 14
 pending : [23, 40, 22, 21, 20, 39, 5, 15, 16, 14, 3, 8, 30, 33, 45, 38, 42, 43, 46]
 solution : [0, 9, 25]


Before backtrack at level 13
 pending : [23, 40, 22, 21, 20, 39, 5, 15, 16, 14, 3, 8, 30, 33, 45, 38, 42, 43, 46]
 solution : [0, 9, 25]

After backtrack at level 13
 pending : [23, 40, 22, 21, 20, 39, 5, 15, 16, 14, 3, 8, 30, 33, 45, 38, 42, 43, 46, 24]
 solution : [0, 9, 25]


Before backtrack at level 12
 pending : [23, 40, 22, 21, 20, 39, 5, 15, 16, 14, 3, 8, 30, 33, 45, 38, 42, 43, 46, 24]
 solution : [0, 9, 25]

After backtrack at level 12
 pending : [23, 40, 22, 21, 20, 39, 5, 15, 16, 14, 3, 8, 30, 33, 45, 38, 42, 43, 46, 24, 49]
 solution : [0, 9, 25]


Before backtrack at level 11
 pending : [23, 40, 22, 21, 20, 39, 5, 15, 16, 14, 3, 8, 30, 33, 45, 38, 42, 43, 46, 24, 49]
 solution : [0, 9, 25]

After backtrack at level 11
 pending : [23, 40, 22, 21, 20, 39, 5, 15, 16, 14, 3, 8, 30, 33, 45, 38, 42, 43, 46, 24, 49, 36]
 solution : [0, 9, 25]


Before backtrack at level 10
 pending : [23, 40, 22, 21, 20, 39, 5, 15, 16, 14, 3, 8, 30, 33, 45, 38, 42, 43, 46, 24, 49, 36]
 solution : [0, 9, 25]

After backtrack at level 10
 pending : [23, 40, 22, 21, 20, 39, 5, 15, 16, 14, 3, 8, 30, 33, 45, 38, 42, 43, 46, 24, 49, 36, 13]
 solution : [0, 9, 25]


Before backtrack at level 9
 pending : [23, 40, 22, 21, 20, 39, 5, 15, 16, 14, 3, 8, 30, 33, 45, 38, 42, 43, 46, 24, 49, 36, 13]
 solution : [0, 9, 25]

After backtrack at level 9
 pending : [23, 40, 22, 21, 20, 39, 5, 15, 16, 14, 3, 8, 30, 33, 45, 38, 42, 43, 46, 24, 49, 36, 13, 31, 32, 37]
 solution : [0, 9, 25]


Invert decision for 25 at level 8


New level: 9
 pending : [23, 40, 22, 21, 20, 39, 5, 15, 16, 14, 3, 8, 30, 33, 45, 38, 42, 43, 46, 24, 49, 36, 13, 31, 32, 37]
 solution : [0, 9]


Before reduction : 
 pending  : [23, 40, 22, 21, 20, 39, 5, 15, 16, 14, 3, 8, 30, 33, 45, 38, 42, 43, 46, 24, 49, 36, 13, 31, 32, 37]
 solution : [0, 9]

Essensial at level 9 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 262144), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 8388608), (15, 262144), (16, 131072), (17, -1), (18, -1), (19, -1), (20, 8388608), (21, 4194304), (22, 131072), (23, 2097152), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, 512), (40, 2097152), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 67108864), (4, -1), (5, 524288), (6, -1), (7, -1), (8, 524288), (9, -1), (10, -1), (11, -1), (12, -1), (13, 33554432), (14, 16777216), (15, 786432), (16, 262144), (17, -1), (18, -1), (19, -1), (20, 8388608), (21, 4194304), (22, 131072), (23, 2097152), (24, 67108864), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, 524288), (31, 1048576), (32, 8192), (33, 8192), (34, -1), (35, -1), (36, 67108864), (37, 67108864), (38, 8192), (39, 134217728), (40, 2097152), (41, -1), (42, 262144), (43, 262144), (44, -1), (45, 33554432), (46, 8388608), (47, -1), (48, -1), (49, 33554432), (50, -1), (51, -1), (52, -1)]

Covered at level 9 : set()

After reduction : 
 pending  : [23, 40, 22, 21, 20, 39, 5, 15, 16, 14, 3, 8, 30, 33, 45, 38, 42, 43, 46, 24, 49, 36, 13, 31, 32, 37]
 solution : [0, 9]


Solution : [0, 9] has cost 9.


Decide in level 9 among pending : [23, 40, 22, 21, 20, 39, 5, 15, 16, 14, 3, 8, 30, 33, 45, 38, 42, 43, 46, 24, 49, 36, 13, 31, 32, 37]

Coverage : [(0, -1), (1, -1), (2, -1), (3, 67108864), (4, -1), (5, 524288), (6, -1), (7, -1), (8, 524288), (9, -1), (10, -1), (11, -1), (12, -1), (13, 33554432), (14, 16777216), (15, 786432), (16, 262144), (17, -1), (18, -1), (19, -1), (20, 8388608), (21, 4194304), (22, 131072), (23, 2097152), (24, 67108864), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, 524288), (31, 1048576), (32, 8192), (33, 8192), (34, -1), (35, -1), (36, 67108864), (37, 67108864), (38, 8192), (39, 134217728), (40, 2097152), (41, -1), (42, 262144), (43, 262144), (44, -1), (45, 33554432), (46, 8388608), (47, -1), (48, -1), (49, 33554432), (50, -1), (51, -1), (52, -1)]

Decide 39 with phase True at level 9

After decision at level 9
 pending : [23, 40, 22, 21, 20, 5, 15, 16, 14, 3, 8, 30, 33, 45, 38, 42, 43, 46, 24, 49, 36, 13, 31, 32, 37]
 solution : [0, 9, 39]


New level: 10
 pending : [23, 40, 22, 21, 20, 5, 15, 16, 14, 3, 8, 30, 33, 45, 38, 42, 43, 46, 24, 49, 36, 13, 31, 32, 37]
 solution : [0, 9, 39]


Before reduction : 
 pending  : [23, 40, 22, 21, 20, 5, 15, 16, 14, 3, 8, 30, 33, 45, 38, 42, 43, 46, 24, 49, 36, 13, 31, 32, 37]
 solution : [0, 9, 39]

Essensial at level 10 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 67108864), (4, -1), (5, 524288), (6, -1), (7, -1), (8, 524288), (9, -1), (10, -1), (11, -1), (12, -1), (13, 33554432), (14, 16777216), (15, 786432), (16, 262144), (17, -1), (18, -1), (19, -1), (20, 8388608), (21, 4194304), (22, 131072), (23, 2097152), (24, 67108864), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, 524288), (31, 1048576), (32, 8192), (33, 8192), (34, -1), (35, -1), (36, 67108864), (37, 67108864), (38, 8192), (39, 134217728), (40, 2097152), (41, -1), (42, 262144), (43, 262144), (44, -1), (45, 33554432), (46, 8388608), (47, -1), (48, -1), (49, 33554432), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 67108864), (4, -1), (5, 524288), (6, -1), (7, -1), (8, 524288), (9, -1), (10, -1), (11, -1), (12, -1), (13, 33554432), (14, 16777216), (15, 786432), (16, 262144), (17, -1), (18, -1), (19, -1), (20, 8388608), (21, 4194304), (22, 131072), (23, 2097152), (24, 67108864), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, 524288), (31, 524288), (32, 4096), (33, 8192), (34, -1), (35, -1), (36, 67108864), (37, 33554432), (38, 8192), (39, -1), (40, 2097152), (41, -1), (42, 262144), (43, 262144), (44, -1), (45, 33554432), (46, 8388608), (47, -1), (48, -1), (49, 33554432), (50, -1), (51, -1), (52, -1)]

Covered at level 10 : set()

After reduction : 
 pending  : [23, 40, 22, 21, 20, 5, 15, 16, 14, 3, 8, 30, 33, 45, 38, 42, 43, 46, 24, 49, 36, 13, 31, 32, 37]
 solution : [0, 9, 39]


Solution : [0, 9, 39] has cost 23.


Before backtrack at level 10
 pending : [23, 40, 22, 21, 20, 5, 15, 16, 14, 3, 8, 30, 33, 45, 38, 42, 43, 46, 24, 49, 36, 13, 31, 32, 37]
 solution : [0, 9, 39]

After backtrack at level 10
 pending : [23, 40, 22, 21, 20, 5, 15, 16, 14, 3, 8, 30, 33, 45, 38, 42, 43, 46, 24, 49, 36, 13, 31, 32, 37]
 solution : [0, 9, 39]


Invert decision for 39 at level 9


New level: 10
 pending : [23, 40, 22, 21, 20, 5, 15, 16, 14, 3, 8, 30, 33, 45, 38, 42, 43, 46, 24, 49, 36, 13, 31, 32, 37]
 solution : [0, 9]


Before reduction : 
 pending  : [23, 40, 22, 21, 20, 5, 15, 16, 14, 3, 8, 30, 33, 45, 38, 42, 43, 46, 24, 49, 36, 13, 31, 32, 37]
 solution : [0, 9]

Essensial at level 10 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 67108864), (4, -1), (5, 524288), (6, -1), (7, -1), (8, 524288), (9, -1), (10, -1), (11, -1), (12, -1), (13, 33554432), (14, 16777216), (15, 786432), (16, 262144), (17, -1), (18, -1), (19, -1), (20, 8388608), (21, 4194304), (22, 131072), (23, 2097152), (24, 67108864), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, 524288), (31, 524288), (32, 4096), (33, 8192), (34, -1), (35, -1), (36, 67108864), (37, 33554432), (38, 8192), (39, -1), (40, 2097152), (41, -1), (42, 262144), (43, 262144), (44, -1), (45, 33554432), (46, 8388608), (47, -1), (48, -1), (49, 33554432), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 67108864), (4, -1), (5, 524288), (6, -1), (7, -1), (8, 524288), (9, -1), (10, -1), (11, -1), (12, -1), (13, 33554432), (14, 16777216), (15, 786432), (16, 262144), (17, -1), (18, -1), (19, -1), (20, 8388608), (21, 4194304), (22, 131072), (23, 2097152), (24, 67108864), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, 524288), (31, 1048576), (32, 8192), (33, 8192), (34, -1), (35, -1), (36, 67108864), (37, 67108864), (38, 8192), (39, -1), (40, 2097152), (41, -1), (42, 262144), (43, 262144), (44, -1), (45, 33554432), (46, 8388608), (47, -1), (48, -1), (49, 33554432), (50, -1), (51, -1), (52, -1)]

Covered at level 10 : set()

After reduction : 
 pending  : [23, 40, 22, 21, 20, 5, 15, 16, 14, 3, 8, 30, 33, 45, 38, 42, 43, 46, 24, 49, 36, 13, 31, 32, 37]
 solution : [0, 9]


Solution : [0, 9] has cost 9.


Decide in level 10 among pending : [23, 40, 22, 21, 20, 5, 15, 16, 14, 3, 8, 30, 33, 45, 38, 42, 43, 46, 24, 49, 36, 13, 31, 32, 37]

Coverage : [(0, -1), (1, -1), (2, -1), (3, 67108864), (4, -1), (5, 524288), (6, -1), (7, -1), (8, 524288), (9, -1), (10, -1), (11, -1), (12, -1), (13, 33554432), (14, 16777216), (15, 786432), (16, 262144), (17, -1), (18, -1), (19, -1), (20, 8388608), (21, 4194304), (22, 131072), (23, 2097152), (24, 67108864), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, 524288), (31, 1048576), (32, 8192), (33, 8192), (34, -1), (35, -1), (36, 67108864), (37, 67108864), (38, 8192), (39, -1), (40, 2097152), (41, -1), (42, 262144), (43, 262144), (44, -1), (45, 33554432), (46, 8388608), (47, -1), (48, -1), (49, 33554432), (50, -1), (51, -1), (52, -1)]

Decide 3 with phase True at level 10

After decision at level 10
 pending : [23, 40, 22, 21, 20, 5, 15, 16, 14, 8, 30, 33, 45, 38, 42, 43, 46, 24, 49, 36, 13, 31, 32, 37]
 solution : [0, 9, 3]


New level: 11
 pending : [23, 40, 22, 21, 20, 5, 15, 16, 14, 8, 30, 33, 45, 38, 42, 43, 46, 24, 49, 36, 13, 31, 32, 37]
 solution : [0, 9, 3]


Before reduction : 
 pending  : [23, 40, 22, 21, 20, 5, 15, 16, 14, 8, 30, 33, 45, 38, 42, 43, 46, 24, 49, 36, 13, 31, 32, 37]
 solution : [0, 9, 3]

Essensial at level 11 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 67108864), (4, -1), (5, 524288), (6, -1), (7, -1), (8, 524288), (9, -1), (10, -1), (11, -1), (12, -1), (13, 33554432), (14, 16777216), (15, 786432), (16, 262144), (17, -1), (18, -1), (19, -1), (20, 8388608), (21, 4194304), (22, 131072), (23, 2097152), (24, 67108864), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, 524288), (31, 1048576), (32, 8192), (33, 8192), (34, -1), (35, -1), (36, 67108864), (37, 67108864), (38, 8192), (39, -1), (40, 2097152), (41, -1), (42, 262144), (43, 262144), (44, -1), (45, 33554432), (46, 8388608), (47, -1), (48, -1), (49, 33554432), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 262144), (6, -1), (7, -1), (8, 0), (9, -1), (10, -1), (11, -1), (12, -1), (13, 16777216), (14, 8388608), (15, 262144), (16, 131072), (17, -1), (18, -1), (19, -1), (20, 8388608), (21, 4194304), (22, 131072), (23, 2097152), (24, 0), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, 0), (31, 0), (32, 0), (33, 0), (34, -1), (35, -1), (36, 0), (37, 65536), (38, 0), (39, -1), (40, 2097152), (41, -1), (42, 0), (43, 0), (44, -1), (45, 0), (46, 0), (47, -1), (48, -1), (49, 0), (50, -1), (51, -1), (52, -1)]

Covered at level 11 : {32, 33, 36, 38, 8, 42, 43, 45, 46, 49, 24, 30, 31}

After reduction : 
 pending  : [23, 40, 22, 21, 20, 5, 15, 16, 14, 13, 37]
 solution : [0, 9, 3]


Before reduction : 
 pending  : [23, 40, 22, 21, 20, 5, 15, 16, 14, 13, 37]
 solution : [0, 9, 3]

Essensial at level 11 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 262144), (6, -1), (7, -1), (8, 0), (9, -1), (10, -1), (11, -1), (12, -1), (13, 16777216), (14, 8388608), (15, 262144), (16, 131072), (17, -1), (18, -1), (19, -1), (20, 8388608), (21, 4194304), (22, 131072), (23, 2097152), (24, 0), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, 0), (31, 0), (32, 0), (33, 0), (34, -1), (35, -1), (36, 0), (37, 65536), (38, 0), (39, -1), (40, 2097152), (41, -1), (42, 0), (43, 0), (44, -1), (45, 0), (46, 0), (47, -1), (48, -1), (49, 0), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 262144), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, 16777216), (14, 8388608), (15, 262144), (16, 131072), (17, -1), (18, -1), (19, -1), (20, 8388608), (21, 4194304), (22, 131072), (23, 2097152), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, 65536), (38, -1), (39, -1), (40, 2097152), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 11 : set()

After reduction : 
 pending  : [23, 40, 22, 21, 20, 5, 15, 16, 14, 13, 37]
 solution : [0, 9, 3]


Solution : [0, 9, 3] has cost 13.


Decide in level 11 among pending : [23, 40, 22, 21, 20, 5, 15, 16, 14, 13, 37]

Coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 262144), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, 16777216), (14, 8388608), (15, 262144), (16, 131072), (17, -1), (18, -1), (19, -1), (20, 8388608), (21, 4194304), (22, 131072), (23, 2097152), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, 65536), (38, -1), (39, -1), (40, 2097152), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Decide 13 with phase True at level 11

After decision at level 11
 pending : [23, 40, 22, 21, 20, 5, 15, 16, 14, 37]
 solution : [0, 9, 3, 13]


New level: 12
 pending : [23, 40, 22, 21, 20, 5, 15, 16, 14, 37]
 solution : [0, 9, 3, 13]


Before reduction : 
 pending  : [23, 40, 22, 21, 20, 5, 15, 16, 14, 37]
 solution : [0, 9, 3, 13]

Essensial at level 12 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 262144), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, 16777216), (14, 8388608), (15, 262144), (16, 131072), (17, -1), (18, -1), (19, -1), (20, 8388608), (21, 4194304), (22, 131072), (23, 2097152), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, 65536), (38, -1), (39, -1), (40, 2097152), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 0), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 0), (15, 0), (16, 0), (17, -1), (18, -1), (19, -1), (20, 131072), (21, 32768), (22, 32768), (23, 2048), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, 1024), (38, -1), (39, -1), (40, 2048), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 12 : {16, 5, 14, 15}

After reduction : 
 pending  : [23, 40, 22, 21, 20, 37]
 solution : [0, 9, 3, 13]


Before reduction : 
 pending  : [23, 40, 22, 21, 20, 37]
 solution : [0, 9, 3, 13]

Essensial at level 12 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 0), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 0), (15, 0), (16, 0), (17, -1), (18, -1), (19, -1), (20, 131072), (21, 32768), (22, 32768), (23, 2048), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, 1024), (38, -1), (39, -1), (40, 2048), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, 131072), (21, 32768), (22, 32768), (23, 2048), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, 1024), (38, -1), (39, -1), (40, 2048), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 12 : set()

After reduction : 
 pending  : [23, 40, 22, 21, 20, 37]
 solution : [0, 9, 3, 13]


Solution : [0, 9, 3, 13] has cost 22.


Before backtrack at level 12
 pending : [23, 40, 22, 21, 20, 37]
 solution : [0, 9, 3, 13]

After backtrack at level 12
 pending : [23, 40, 22, 21, 20, 37, 5, 15, 16, 14]
 solution : [0, 9, 3, 13]


Invert decision for 13 at level 11


New level: 12
 pending : [23, 40, 22, 21, 20, 37, 5, 15, 16, 14]
 solution : [0, 9, 3]


Before reduction : 
 pending  : [23, 40, 22, 21, 20, 37, 5, 15, 16, 14]
 solution : [0, 9, 3]

Essensial at level 12 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, 131072), (21, 32768), (22, 32768), (23, 2048), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, 1024), (38, -1), (39, -1), (40, 2048), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 262144), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 8388608), (15, 262144), (16, 131072), (17, -1), (18, -1), (19, -1), (20, 8388608), (21, 4194304), (22, 131072), (23, 2097152), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, 65536), (38, -1), (39, -1), (40, 2097152), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 12 : set()

After reduction : 
 pending  : [23, 40, 22, 21, 20, 37, 5, 15, 16, 14]
 solution : [0, 9, 3]


Solution : [0, 9, 3] has cost 13.


Decide in level 12 among pending : [23, 40, 22, 21, 20, 37, 5, 15, 16, 14]

Coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 262144), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 8388608), (15, 262144), (16, 131072), (17, -1), (18, -1), (19, -1), (20, 8388608), (21, 4194304), (22, 131072), (23, 2097152), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, 65536), (38, -1), (39, -1), (40, 2097152), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Decide 20 with phase True at level 12

After decision at level 12
 pending : [23, 40, 22, 21, 37, 5, 15, 16, 14]
 solution : [0, 9, 3, 20]


New level: 13
 pending : [23, 40, 22, 21, 37, 5, 15, 16, 14]
 solution : [0, 9, 3, 20]


Before reduction : 
 pending  : [23, 40, 22, 21, 37, 5, 15, 16, 14]
 solution : [0, 9, 3, 20]

Essensial at level 13 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 262144), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 8388608), (15, 262144), (16, 131072), (17, -1), (18, -1), (19, -1), (20, 8388608), (21, 4194304), (22, 131072), (23, 2097152), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, 65536), (38, -1), (39, -1), (40, 2097152), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 131072), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 2097152), (15, 131072), (16, 0), (17, -1), (18, -1), (19, -1), (20, -1), (21, 0), (22, 0), (23, 524288), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, 1024), (38, -1), (39, -1), (40, 524288), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 13 : {16, 21, 22}

After reduction : 
 pending  : [23, 40, 37, 5, 15, 14]
 solution : [0, 9, 3, 20]


Before reduction : 
 pending  : [23, 40, 37, 5, 15, 14]
 solution : [0, 9, 3, 20]

Essensial at level 13 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 131072), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 2097152), (15, 131072), (16, 0), (17, -1), (18, -1), (19, -1), (20, -1), (21, 0), (22, 0), (23, 524288), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, 1024), (38, -1), (39, -1), (40, 524288), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 131072), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 2097152), (15, 131072), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, 524288), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, 1024), (38, -1), (39, -1), (40, 524288), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 13 : set()

After reduction : 
 pending  : [23, 40, 37, 5, 15, 14]
 solution : [0, 9, 3, 20]


Solution : [0, 9, 3, 20] has cost 20.


Before backtrack at level 13
 pending : [23, 40, 37, 5, 15, 14]
 solution : [0, 9, 3, 20]

After backtrack at level 13
 pending : [23, 40, 37, 5, 15, 14, 22, 21, 16]
 solution : [0, 9, 3, 20]


Invert decision for 20 at level 12


New level: 13
 pending : [23, 40, 37, 5, 15, 14, 22, 21, 16]
 solution : [0, 9, 3]


Before reduction : 
 pending  : [23, 40, 37, 5, 15, 14, 22, 21, 16]
 solution : [0, 9, 3]

Essensial at level 13 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 131072), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 2097152), (15, 131072), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, 524288), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, 1024), (38, -1), (39, -1), (40, 524288), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 262144), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 8388608), (15, 262144), (16, 131072), (17, -1), (18, -1), (19, -1), (20, -1), (21, 4194304), (22, 131072), (23, 2097152), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, 65536), (38, -1), (39, -1), (40, 2097152), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 13 : set()

After reduction : 
 pending  : [23, 40, 37, 5, 15, 14, 22, 21, 16]
 solution : [0, 9, 3]


Solution : [0, 9, 3] has cost 13.


Decide in level 13 among pending : [23, 40, 37, 5, 15, 14, 22, 21, 16]

Coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 262144), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 8388608), (15, 262144), (16, 131072), (17, -1), (18, -1), (19, -1), (20, -1), (21, 4194304), (22, 131072), (23, 2097152), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, 65536), (38, -1), (39, -1), (40, 2097152), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Decide 14 with phase True at level 13

After decision at level 13
 pending : [23, 40, 37, 5, 15, 22, 21, 16]
 solution : [0, 9, 3, 14]


New level: 14
 pending : [23, 40, 37, 5, 15, 22, 21, 16]
 solution : [0, 9, 3, 14]


Before reduction : 
 pending  : [23, 40, 37, 5, 15, 22, 21, 16]
 solution : [0, 9, 3, 14]

Essensial at level 14 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 262144), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 8388608), (15, 262144), (16, 131072), (17, -1), (18, -1), (19, -1), (20, -1), (21, 4194304), (22, 131072), (23, 2097152), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, 65536), (38, -1), (39, -1), (40, 2097152), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 0), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, 0), (16, 0), (17, -1), (18, -1), (19, -1), (20, -1), (21, 32768), (22, 32768), (23, 2048), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, 1024), (38, -1), (39, -1), (40, 2048), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 14 : {16, 5, 15}

After reduction : 
 pending  : [23, 40, 37, 22, 21]
 solution : [0, 9, 3, 14]


Before reduction : 
 pending  : [23, 40, 37, 22, 21]
 solution : [0, 9, 3, 14]

Essensial at level 14 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 0), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, 0), (16, 0), (17, -1), (18, -1), (19, -1), (20, -1), (21, 32768), (22, 32768), (23, 2048), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, 1024), (38, -1), (39, -1), (40, 2048), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, 32768), (22, 32768), (23, 2048), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, 1024), (38, -1), (39, -1), (40, 2048), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 14 : set()

After reduction : 
 pending  : [23, 40, 37, 22, 21]
 solution : [0, 9, 3, 14]


Solution : [0, 9, 3, 14] has cost 22.


Before backtrack at level 14
 pending : [23, 40, 37, 22, 21]
 solution : [0, 9, 3, 14]

After backtrack at level 14
 pending : [23, 40, 37, 22, 21, 5, 15, 16]
 solution : [0, 9, 3, 14]


Invert decision for 14 at level 13


New level: 14
 pending : [23, 40, 37, 22, 21, 5, 15, 16]
 solution : [0, 9, 3]


Before reduction : 
 pending  : [23, 40, 37, 22, 21, 5, 15, 16]
 solution : [0, 9, 3]

Essensial at level 14 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, 32768), (22, 32768), (23, 2048), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, 1024), (38, -1), (39, -1), (40, 2048), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 262144), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, 262144), (16, 131072), (17, -1), (18, -1), (19, -1), (20, -1), (21, 4194304), (22, 131072), (23, 2097152), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, 65536), (38, -1), (39, -1), (40, 2097152), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 14 : set()

After reduction : 
 pending  : [23, 40, 37, 22, 21, 5, 15, 16]
 solution : [0, 9, 3]


Solution : [0, 9, 3] has cost 13.


Decide in level 14 among pending : [23, 40, 37, 22, 21, 5, 15, 16]

Coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 262144), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, 262144), (16, 131072), (17, -1), (18, -1), (19, -1), (20, -1), (21, 4194304), (22, 131072), (23, 2097152), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, 65536), (38, -1), (39, -1), (40, 2097152), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Decide 21 with phase True at level 14

After decision at level 14
 pending : [23, 40, 37, 22, 5, 15, 16]
 solution : [0, 9, 3, 21]


New level: 15
 pending : [23, 40, 37, 22, 5, 15, 16]
 solution : [0, 9, 3, 21]


Before reduction : 
 pending  : [23, 40, 37, 22, 5, 15, 16]
 solution : [0, 9, 3, 21]

Essensial at level 15 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 262144), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, 262144), (16, 131072), (17, -1), (18, -1), (19, -1), (20, -1), (21, 4194304), (22, 131072), (23, 2097152), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, 65536), (38, -1), (39, -1), (40, 2097152), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 131072), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, 131072), (16, 0), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, 0), (23, 524288), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, 1024), (38, -1), (39, -1), (40, 524288), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 15 : {16, 22}

After reduction : 
 pending  : [23, 40, 37, 5, 15]
 solution : [0, 9, 3, 21]


Before reduction : 
 pending  : [23, 40, 37, 5, 15]
 solution : [0, 9, 3, 21]

Essensial at level 15 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 131072), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, 131072), (16, 0), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, 0), (23, 524288), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, 1024), (38, -1), (39, -1), (40, 524288), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 131072), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, 131072), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, 524288), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, 1024), (38, -1), (39, -1), (40, 524288), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 15 : set()

After reduction : 
 pending  : [23, 40, 37, 5, 15]
 solution : [0, 9, 3, 21]


Solution : [0, 9, 3, 21] has cost 20.


Before backtrack at level 15
 pending : [23, 40, 37, 5, 15]
 solution : [0, 9, 3, 21]

After backtrack at level 15
 pending : [23, 40, 37, 5, 15, 22, 16]
 solution : [0, 9, 3, 21]


Invert decision for 21 at level 14


New level: 15
 pending : [23, 40, 37, 5, 15, 22, 16]
 solution : [0, 9, 3]


Before reduction : 
 pending  : [23, 40, 37, 5, 15, 22, 16]
 solution : [0, 9, 3]

Essensial at level 15 : {22}

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 131072), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, 131072), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, 524288), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, 1024), (38, -1), (39, -1), (40, 524288), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 262144), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, 262144), (16, 65536), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, 2097152), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, 65536), (38, -1), (39, -1), (40, 2097152), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 15 : set()

After reduction : 
 pending  : [23, 40, 37, 5, 15, 16]
 solution : [0, 9, 3, 22]


Before reduction : 
 pending  : [23, 40, 37, 5, 15, 16]
 solution : [0, 9, 3, 22]

Essensial at level 15 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 262144), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, 262144), (16, 65536), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, 2097152), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, 65536), (38, -1), (39, -1), (40, 2097152), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 262144), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, 262144), (16, 65536), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, 2097152), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, 65536), (38, -1), (39, -1), (40, 2097152), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 15 : set()

After reduction : 
 pending  : [23, 40, 37, 5, 15, 16]
 solution : [0, 9, 3, 22]


Solution : [0, 9, 3, 22] has cost 20.


Before backtrack at level 15
 pending : [23, 40, 37, 5, 15, 16]
 solution : [0, 9, 3, 22]

After backtrack at level 15
 pending : [23, 40, 37, 5, 15, 16, 22]
 solution : [0, 9, 3]


Before backtrack at level 14
 pending : [23, 40, 37, 5, 15, 16, 22]
 solution : [0, 9, 3]

After backtrack at level 14
 pending : [23, 40, 37, 5, 15, 16, 22, 21]
 solution : [0, 9, 3]


Before backtrack at level 13
 pending : [23, 40, 37, 5, 15, 16, 22, 21]
 solution : [0, 9, 3]

After backtrack at level 13
 pending : [23, 40, 37, 5, 15, 16, 22, 21, 14]
 solution : [0, 9, 3]


Before backtrack at level 12
 pending : [23, 40, 37, 5, 15, 16, 22, 21, 14]
 solution : [0, 9, 3]

After backtrack at level 12
 pending : [23, 40, 37, 5, 15, 16, 22, 21, 14, 20]
 solution : [0, 9, 3]


Before backtrack at level 11
 pending : [23, 40, 37, 5, 15, 16, 22, 21, 14, 20]
 solution : [0, 9, 3]

After backtrack at level 11
 pending : [23, 40, 37, 5, 15, 16, 22, 21, 14, 20, 8, 30, 33, 45, 38, 42, 43, 46, 24, 49, 36, 31, 32, 13]
 solution : [0, 9, 3]


Invert decision for 3 at level 10


New level: 11
 pending : [23, 40, 37, 5, 15, 16, 22, 21, 14, 20, 8, 30, 33, 45, 38, 42, 43, 46, 24, 49, 36, 31, 32, 13]
 solution : [0, 9]


Before reduction : 
 pending  : [23, 40, 37, 5, 15, 16, 22, 21, 14, 20, 8, 30, 33, 45, 38, 42, 43, 46, 24, 49, 36, 31, 32, 13]
 solution : [0, 9]

Essensial at level 11 : {24}

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 262144), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, 262144), (16, 65536), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, 2097152), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, 65536), (38, -1), (39, -1), (40, 2097152), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 262144), (6, -1), (7, -1), (8, 0), (9, -1), (10, -1), (11, -1), (12, -1), (13, 16777216), (14, 8388608), (15, 262144), (16, 131072), (17, -1), (18, -1), (19, -1), (20, 8388608), (21, 4194304), (22, 131072), (23, 2097152), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, 0), (31, 0), (32, 0), (33, 0), (34, -1), (35, -1), (36, 0), (37, 524288), (38, 0), (39, -1), (40, 2097152), (41, -1), (42, 0), (43, 0), (44, -1), (45, 0), (46, 0), (47, -1), (48, -1), (49, 0), (50, -1), (51, -1), (52, -1)]

Covered at level 11 : {32, 33, 36, 38, 8, 42, 43, 45, 46, 49, 30, 31}

After reduction : 
 pending  : [23, 40, 37, 5, 15, 16, 22, 21, 14, 20, 13]
 solution : [0, 9, 24]


Before reduction : 
 pending  : [23, 40, 37, 5, 15, 16, 22, 21, 14, 20, 13]
 solution : [0, 9, 24]

Essensial at level 11 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 262144), (6, -1), (7, -1), (8, 0), (9, -1), (10, -1), (11, -1), (12, -1), (13, 16777216), (14, 8388608), (15, 262144), (16, 131072), (17, -1), (18, -1), (19, -1), (20, 8388608), (21, 4194304), (22, 131072), (23, 2097152), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, 0), (31, 0), (32, 0), (33, 0), (34, -1), (35, -1), (36, 0), (37, 524288), (38, 0), (39, -1), (40, 2097152), (41, -1), (42, 0), (43, 0), (44, -1), (45, 0), (46, 0), (47, -1), (48, -1), (49, 0), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 262144), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, 16777216), (14, 8388608), (15, 262144), (16, 131072), (17, -1), (18, -1), (19, -1), (20, 8388608), (21, 4194304), (22, 131072), (23, 2097152), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, 524288), (38, -1), (39, -1), (40, 2097152), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 11 : set()

After reduction : 
 pending  : [23, 40, 37, 5, 15, 16, 22, 21, 14, 20, 13]
 solution : [0, 9, 24]


Solution : [0, 9, 24] has cost 16.


Decide in level 11 among pending : [23, 40, 37, 5, 15, 16, 22, 21, 14, 20, 13]

Coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 262144), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, 16777216), (14, 8388608), (15, 262144), (16, 131072), (17, -1), (18, -1), (19, -1), (20, 8388608), (21, 4194304), (22, 131072), (23, 2097152), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, 524288), (38, -1), (39, -1), (40, 2097152), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Decide 13 with phase True at level 11

After decision at level 11
 pending : [23, 40, 37, 5, 15, 16, 22, 21, 14, 20]
 solution : [0, 9, 24, 13]


New level: 12
 pending : [23, 40, 37, 5, 15, 16, 22, 21, 14, 20]
 solution : [0, 9, 24, 13]


Before reduction : 
 pending  : [23, 40, 37, 5, 15, 16, 22, 21, 14, 20]
 solution : [0, 9, 24, 13]

Essensial at level 12 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 262144), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, 16777216), (14, 8388608), (15, 262144), (16, 131072), (17, -1), (18, -1), (19, -1), (20, 8388608), (21, 4194304), (22, 131072), (23, 2097152), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, 524288), (38, -1), (39, -1), (40, 2097152), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 0), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 0), (15, 0), (16, 0), (17, -1), (18, -1), (19, -1), (20, 131072), (21, 32768), (22, 32768), (23, 2048), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, 1024), (38, -1), (39, -1), (40, 2048), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 12 : {16, 5, 14, 15}

After reduction : 
 pending  : [23, 40, 37, 22, 21, 20]
 solution : [0, 9, 24, 13]


Before reduction : 
 pending  : [23, 40, 37, 22, 21, 20]
 solution : [0, 9, 24, 13]

Essensial at level 12 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 0), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 0), (15, 0), (16, 0), (17, -1), (18, -1), (19, -1), (20, 131072), (21, 32768), (22, 32768), (23, 2048), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, 1024), (38, -1), (39, -1), (40, 2048), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, 131072), (21, 32768), (22, 32768), (23, 2048), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, 1024), (38, -1), (39, -1), (40, 2048), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 12 : set()

After reduction : 
 pending  : [23, 40, 37, 22, 21, 20]
 solution : [0, 9, 24, 13]


Solution : [0, 9, 24, 13] has cost 25.


Before backtrack at level 12
 pending : [23, 40, 37, 22, 21, 20]
 solution : [0, 9, 24, 13]

After backtrack at level 12
 pending : [23, 40, 37, 22, 21, 20, 5, 15, 16, 14]
 solution : [0, 9, 24, 13]


Invert decision for 13 at level 11


New level: 12
 pending : [23, 40, 37, 22, 21, 20, 5, 15, 16, 14]
 solution : [0, 9, 24]


Before reduction : 
 pending  : [23, 40, 37, 22, 21, 20, 5, 15, 16, 14]
 solution : [0, 9, 24]

Essensial at level 12 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, 131072), (21, 32768), (22, 32768), (23, 2048), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, 1024), (38, -1), (39, -1), (40, 2048), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 262144), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 8388608), (15, 262144), (16, 131072), (17, -1), (18, -1), (19, -1), (20, 8388608), (21, 4194304), (22, 131072), (23, 2097152), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, 524288), (38, -1), (39, -1), (40, 2097152), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 12 : set()

After reduction : 
 pending  : [23, 40, 37, 22, 21, 20, 5, 15, 16, 14]
 solution : [0, 9, 24]


Solution : [0, 9, 24] has cost 16.


Decide in level 12 among pending : [23, 40, 37, 22, 21, 20, 5, 15, 16, 14]

Coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 262144), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 8388608), (15, 262144), (16, 131072), (17, -1), (18, -1), (19, -1), (20, 8388608), (21, 4194304), (22, 131072), (23, 2097152), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, 524288), (38, -1), (39, -1), (40, 2097152), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Decide 20 with phase True at level 12

After decision at level 12
 pending : [23, 40, 37, 22, 21, 5, 15, 16, 14]
 solution : [0, 9, 24, 20]


New level: 13
 pending : [23, 40, 37, 22, 21, 5, 15, 16, 14]
 solution : [0, 9, 24, 20]


Before reduction : 
 pending  : [23, 40, 37, 22, 21, 5, 15, 16, 14]
 solution : [0, 9, 24, 20]

Essensial at level 13 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 262144), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 8388608), (15, 262144), (16, 131072), (17, -1), (18, -1), (19, -1), (20, 8388608), (21, 4194304), (22, 131072), (23, 2097152), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, 524288), (38, -1), (39, -1), (40, 2097152), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 131072), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 2097152), (15, 131072), (16, 0), (17, -1), (18, -1), (19, -1), (20, -1), (21, 0), (22, 0), (23, 524288), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, 1024), (38, -1), (39, -1), (40, 524288), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 13 : {16, 21, 22}

After reduction : 
 pending  : [23, 40, 37, 5, 15, 14]
 solution : [0, 9, 24, 20]


Before reduction : 
 pending  : [23, 40, 37, 5, 15, 14]
 solution : [0, 9, 24, 20]

Essensial at level 13 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 131072), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 2097152), (15, 131072), (16, 0), (17, -1), (18, -1), (19, -1), (20, -1), (21, 0), (22, 0), (23, 524288), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, 1024), (38, -1), (39, -1), (40, 524288), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 131072), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 2097152), (15, 131072), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, 524288), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, 1024), (38, -1), (39, -1), (40, 524288), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 13 : set()

After reduction : 
 pending  : [23, 40, 37, 5, 15, 14]
 solution : [0, 9, 24, 20]


Solution : [0, 9, 24, 20] has cost 23.


Before backtrack at level 13
 pending : [23, 40, 37, 5, 15, 14]
 solution : [0, 9, 24, 20]

After backtrack at level 13
 pending : [23, 40, 37, 5, 15, 14, 22, 21, 16]
 solution : [0, 9, 24, 20]


Invert decision for 20 at level 12


New level: 13
 pending : [23, 40, 37, 5, 15, 14, 22, 21, 16]
 solution : [0, 9, 24]


Before reduction : 
 pending  : [23, 40, 37, 5, 15, 14, 22, 21, 16]
 solution : [0, 9, 24]

Essensial at level 13 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 131072), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 2097152), (15, 131072), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, 524288), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, 1024), (38, -1), (39, -1), (40, 524288), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 262144), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 8388608), (15, 262144), (16, 131072), (17, -1), (18, -1), (19, -1), (20, -1), (21, 4194304), (22, 131072), (23, 2097152), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, 524288), (38, -1), (39, -1), (40, 2097152), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 13 : set()

After reduction : 
 pending  : [23, 40, 37, 5, 15, 14, 22, 21, 16]
 solution : [0, 9, 24]


Solution : [0, 9, 24] has cost 16.


Decide in level 13 among pending : [23, 40, 37, 5, 15, 14, 22, 21, 16]

Coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 262144), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 8388608), (15, 262144), (16, 131072), (17, -1), (18, -1), (19, -1), (20, -1), (21, 4194304), (22, 131072), (23, 2097152), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, 524288), (38, -1), (39, -1), (40, 2097152), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Decide 14 with phase True at level 13

After decision at level 13
 pending : [23, 40, 37, 5, 15, 22, 21, 16]
 solution : [0, 9, 24, 14]


New level: 14
 pending : [23, 40, 37, 5, 15, 22, 21, 16]
 solution : [0, 9, 24, 14]


Before reduction : 
 pending  : [23, 40, 37, 5, 15, 22, 21, 16]
 solution : [0, 9, 24, 14]

Essensial at level 14 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 262144), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 8388608), (15, 262144), (16, 131072), (17, -1), (18, -1), (19, -1), (20, -1), (21, 4194304), (22, 131072), (23, 2097152), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, 524288), (38, -1), (39, -1), (40, 2097152), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 0), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, 0), (16, 0), (17, -1), (18, -1), (19, -1), (20, -1), (21, 32768), (22, 32768), (23, 2048), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, 1024), (38, -1), (39, -1), (40, 2048), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 14 : {16, 5, 15}

After reduction : 
 pending  : [23, 40, 37, 22, 21]
 solution : [0, 9, 24, 14]


Before reduction : 
 pending  : [23, 40, 37, 22, 21]
 solution : [0, 9, 24, 14]

Essensial at level 14 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 0), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, 0), (16, 0), (17, -1), (18, -1), (19, -1), (20, -1), (21, 32768), (22, 32768), (23, 2048), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, 1024), (38, -1), (39, -1), (40, 2048), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, 32768), (22, 32768), (23, 2048), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, 1024), (38, -1), (39, -1), (40, 2048), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 14 : set()

After reduction : 
 pending  : [23, 40, 37, 22, 21]
 solution : [0, 9, 24, 14]


Solution : [0, 9, 24, 14] has cost 25.


Before backtrack at level 14
 pending : [23, 40, 37, 22, 21]
 solution : [0, 9, 24, 14]

After backtrack at level 14
 pending : [23, 40, 37, 22, 21, 5, 15, 16]
 solution : [0, 9, 24, 14]


Invert decision for 14 at level 13


New level: 14
 pending : [23, 40, 37, 22, 21, 5, 15, 16]
 solution : [0, 9, 24]


Before reduction : 
 pending  : [23, 40, 37, 22, 21, 5, 15, 16]
 solution : [0, 9, 24]

Essensial at level 14 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, 32768), (22, 32768), (23, 2048), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, 1024), (38, -1), (39, -1), (40, 2048), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 262144), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, 262144), (16, 131072), (17, -1), (18, -1), (19, -1), (20, -1), (21, 4194304), (22, 131072), (23, 2097152), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, 524288), (38, -1), (39, -1), (40, 2097152), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 14 : set()

After reduction : 
 pending  : [23, 40, 37, 22, 21, 5, 15, 16]
 solution : [0, 9, 24]


Solution : [0, 9, 24] has cost 16.


Decide in level 14 among pending : [23, 40, 37, 22, 21, 5, 15, 16]

Coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 262144), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, 262144), (16, 131072), (17, -1), (18, -1), (19, -1), (20, -1), (21, 4194304), (22, 131072), (23, 2097152), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, 524288), (38, -1), (39, -1), (40, 2097152), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Decide 21 with phase True at level 14

After decision at level 14
 pending : [23, 40, 37, 22, 5, 15, 16]
 solution : [0, 9, 24, 21]


New level: 15
 pending : [23, 40, 37, 22, 5, 15, 16]
 solution : [0, 9, 24, 21]


Before reduction : 
 pending  : [23, 40, 37, 22, 5, 15, 16]
 solution : [0, 9, 24, 21]

Essensial at level 15 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 262144), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, 262144), (16, 131072), (17, -1), (18, -1), (19, -1), (20, -1), (21, 4194304), (22, 131072), (23, 2097152), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, 524288), (38, -1), (39, -1), (40, 2097152), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 131072), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, 131072), (16, 0), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, 0), (23, 524288), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, 1024), (38, -1), (39, -1), (40, 524288), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 15 : {16, 22}

After reduction : 
 pending  : [23, 40, 37, 5, 15]
 solution : [0, 9, 24, 21]


Before reduction : 
 pending  : [23, 40, 37, 5, 15]
 solution : [0, 9, 24, 21]

Essensial at level 15 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 131072), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, 131072), (16, 0), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, 0), (23, 524288), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, 1024), (38, -1), (39, -1), (40, 524288), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 131072), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, 131072), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, 524288), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, 1024), (38, -1), (39, -1), (40, 524288), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 15 : set()

After reduction : 
 pending  : [23, 40, 37, 5, 15]
 solution : [0, 9, 24, 21]


Solution : [0, 9, 24, 21] has cost 23.


Before backtrack at level 15
 pending : [23, 40, 37, 5, 15]
 solution : [0, 9, 24, 21]

After backtrack at level 15
 pending : [23, 40, 37, 5, 15, 22, 16]
 solution : [0, 9, 24, 21]


Invert decision for 21 at level 14


New level: 15
 pending : [23, 40, 37, 5, 15, 22, 16]
 solution : [0, 9, 24]


Before reduction : 
 pending  : [23, 40, 37, 5, 15, 22, 16]
 solution : [0, 9, 24]

Essensial at level 15 : {22}

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 131072), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, 131072), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, 524288), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, 1024), (38, -1), (39, -1), (40, 524288), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 262144), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, 262144), (16, 65536), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, 2097152), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, 524288), (38, -1), (39, -1), (40, 2097152), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 15 : set()

After reduction : 
 pending  : [23, 40, 37, 5, 15, 16]
 solution : [0, 9, 24, 22]


Before reduction : 
 pending  : [23, 40, 37, 5, 15, 16]
 solution : [0, 9, 24, 22]

Essensial at level 15 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 262144), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, 262144), (16, 65536), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, 2097152), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, 524288), (38, -1), (39, -1), (40, 2097152), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 262144), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, 262144), (16, 65536), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, 2097152), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, 524288), (38, -1), (39, -1), (40, 2097152), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 15 : set()

After reduction : 
 pending  : [23, 40, 37, 5, 15, 16]
 solution : [0, 9, 24, 22]


Solution : [0, 9, 24, 22] has cost 23.


Before backtrack at level 15
 pending : [23, 40, 37, 5, 15, 16]
 solution : [0, 9, 24, 22]

After backtrack at level 15
 pending : [23, 40, 37, 5, 15, 16, 22]
 solution : [0, 9, 24]


Before backtrack at level 14
 pending : [23, 40, 37, 5, 15, 16, 22]
 solution : [0, 9, 24]

After backtrack at level 14
 pending : [23, 40, 37, 5, 15, 16, 22, 21]
 solution : [0, 9, 24]


Before backtrack at level 13
 pending : [23, 40, 37, 5, 15, 16, 22, 21]
 solution : [0, 9, 24]

After backtrack at level 13
 pending : [23, 40, 37, 5, 15, 16, 22, 21, 14]
 solution : [0, 9, 24]


Before backtrack at level 12
 pending : [23, 40, 37, 5, 15, 16, 22, 21, 14]
 solution : [0, 9, 24]

After backtrack at level 12
 pending : [23, 40, 37, 5, 15, 16, 22, 21, 14, 20]
 solution : [0, 9, 24]


Before backtrack at level 11
 pending : [23, 40, 37, 5, 15, 16, 22, 21, 14, 20]
 solution : [0, 9, 24]

After backtrack at level 11
 pending : [23, 40, 37, 5, 15, 16, 22, 21, 14, 20, 24, 8, 30, 33, 45, 38, 42, 43, 46, 49, 36, 31, 32, 13]
 solution : [0, 9]


Before backtrack at level 10
 pending : [23, 40, 37, 5, 15, 16, 22, 21, 14, 20, 24, 8, 30, 33, 45, 38, 42, 43, 46, 49, 36, 31, 32, 13]
 solution : [0, 9]

After backtrack at level 10
 pending : [23, 40, 37, 5, 15, 16, 22, 21, 14, 20, 24, 8, 30, 33, 45, 38, 42, 43, 46, 49, 36, 31, 32, 13, 3]
 solution : [0, 9]


Before backtrack at level 9
 pending : [23, 40, 37, 5, 15, 16, 22, 21, 14, 20, 24, 8, 30, 33, 45, 38, 42, 43, 46, 49, 36, 31, 32, 13, 3]
 solution : [0, 9]

After backtrack at level 9
 pending : [23, 40, 37, 5, 15, 16, 22, 21, 14, 20, 24, 8, 30, 33, 45, 38, 42, 43, 46, 49, 36, 31, 32, 13, 3, 39]
 solution : [0, 9]


Before backtrack at level 8
 pending : [23, 40, 37, 5, 15, 16, 22, 21, 14, 20, 24, 8, 30, 33, 45, 38, 42, 43, 46, 49, 36, 31, 32, 13, 3, 39]
 solution : [0, 9]

After backtrack at level 8
 pending : [23, 40, 37, 5, 15, 16, 22, 21, 14, 20, 24, 8, 30, 33, 45, 38, 42, 43, 46, 49, 36, 31, 32, 13, 3, 39, 25]
 solution : [0, 9]


Before backtrack at level 7
 pending : [23, 40, 37, 5, 15, 16, 22, 21, 14, 20, 24, 8, 30, 33, 45, 38, 42, 43, 46, 49, 36, 31, 32, 13, 3, 39, 25]
 solution : [0, 9]

After backtrack at level 7
 pending : [23, 40, 37, 5, 15, 16, 22, 21, 14, 20, 24, 8, 30, 33, 45, 38, 42, 43, 46, 49, 36, 31, 32, 13, 3, 39, 25, 26]
 solution : [0, 9]


Before backtrack at level 6
 pending : [23, 40, 37, 5, 15, 16, 22, 21, 14, 20, 24, 8, 30, 33, 45, 38, 42, 43, 46, 49, 36, 31, 32, 13, 3, 39, 25, 26]
 solution : [0, 9]

After backtrack at level 6
 pending : [23, 40, 37, 5, 15, 16, 22, 21, 14, 20, 24, 8, 30, 33, 45, 38, 42, 43, 46, 49, 36, 31, 32, 13, 3, 39, 25, 26, 19]
 solution : [0, 9]


Before backtrack at level 5
 pending : [23, 40, 37, 5, 15, 16, 22, 21, 14, 20, 24, 8, 30, 33, 45, 38, 42, 43, 46, 49, 36, 31, 32, 13, 3, 39, 25, 26, 19]
 solution : [0, 9]

After backtrack at level 5
 pending : [23, 40, 37, 5, 15, 16, 22, 21, 14, 20, 24, 8, 30, 33, 45, 38, 42, 43, 46, 49, 36, 31, 32, 13, 3, 39, 25, 26, 19, 35]
 solution : [0, 9]


Before backtrack at level 4
 pending : [23, 40, 37, 5, 15, 16, 22, 21, 14, 20, 24, 8, 30, 33, 45, 38, 42, 43, 46, 49, 36, 31, 32, 13, 3, 39, 25, 26, 19, 35]
 solution : [0, 9]

After backtrack at level 4
 pending : [23, 40, 37, 5, 15, 16, 22, 21, 14, 20, 24, 8, 30, 33, 45, 38, 42, 43, 46, 49, 36, 31, 32, 13, 3, 39, 25, 26, 19, 35, 18]
 solution : [0, 9]


Before backtrack at level 3
 pending : [23, 40, 37, 5, 15, 16, 22, 21, 14, 20, 24, 8, 30, 33, 45, 38, 42, 43, 46, 49, 36, 31, 32, 13, 3, 39, 25, 26, 19, 35, 18]
 solution : [0, 9]

After backtrack at level 3
 pending : [23, 40, 37, 5, 15, 16, 22, 21, 14, 20, 24, 8, 30, 33, 45, 38, 42, 43, 46, 49, 36, 31, 32, 13, 3, 39, 25, 26, 19, 35, 18, 28]
 solution : [0, 9]


Before backtrack at level 2
 pending : [23, 40, 37, 5, 15, 16, 22, 21, 14, 20, 24, 8, 30, 33, 45, 38, 42, 43, 46, 49, 36, 31, 32, 13, 3, 39, 25, 26, 19, 35, 18, 28]
 solution : [0, 9]

After backtrack at level 2
 pending : [23, 40, 37, 5, 15, 16, 22, 21, 14, 20, 24, 8, 30, 33, 45, 38, 42, 43, 46, 49, 36, 31, 32, 13, 3, 39, 25, 26, 19, 35, 18, 28, 10]
 solution : [0, 9]


Invert decision for 9 at level 1


New level: 2
 pending : [23, 40, 37, 5, 15, 16, 22, 21, 14, 20, 24, 8, 30, 33, 45, 38, 42, 43, 46, 49, 36, 31, 32, 13, 3, 39, 25, 26, 19, 35, 18, 28, 10]
 solution : [0]


Before reduction : 
 pending  : [23, 40, 37, 5, 15, 16, 22, 21, 14, 20, 24, 8, 30, 33, 45, 38, 42, 43, 46, 49, 36, 31, 32, 13, 3, 39, 25, 26, 19, 35, 18, 28, 10]
 solution : [0]

Essensial at level 2 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 262144), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, 262144), (16, 65536), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, 2097152), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, 524288), (38, -1), (39, -1), (40, 2097152), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 134217728), (4, -1), (5, 1048576), (6, -1), (7, -1), (8, 1048576), (9, -1), (10, 17179869184), (11, -1), (12, -1), (13, 67108864), (14, 33554432), (15, 1572864), (16, 524288), (17, -1), (18, 2147483648), (19, 1073741824), (20, 16777216), (21, 8388608), (22, 262144), (23, 4194304), (24, 134217728), (25, 1073741824), (26, 4294967296), (27, -1), (28, 4294967296), (29, -1), (30, 1048576), (31, 4194304), (32, 32768), (33, 16384), (34, -1), (35, 2147483648), (36, 134217728), (37, 268435456), (38, 16384), (39, 1073741824), (40, 4194304), (41, -1), (42, 524288), (43, 524288), (44, -1), (45, 67108864), (46, 16777216), (47, -1), (48, -1), (49, 67108864), (50, -1), (51, -1), (52, -1)]

Covered at level 2 : set()

After reduction : 
 pending  : [23, 40, 37, 5, 15, 16, 22, 21, 14, 20, 24, 8, 30, 33, 45, 38, 42, 43, 46, 49, 36, 31, 32, 13, 3, 39, 25, 26, 19, 35, 18, 28, 10]
 solution : [0]


Solution : [0] has cost 6.


Decide in level 2 among pending : [23, 40, 37, 5, 15, 16, 22, 21, 14, 20, 24, 8, 30, 33, 45, 38, 42, 43, 46, 49, 36, 31, 32, 13, 3, 39, 25, 26, 19, 35, 18, 28, 10]

Coverage : [(0, -1), (1, -1), (2, -1), (3, 134217728), (4, -1), (5, 1048576), (6, -1), (7, -1), (8, 1048576), (9, -1), (10, 17179869184), (11, -1), (12, -1), (13, 67108864), (14, 33554432), (15, 1572864), (16, 524288), (17, -1), (18, 2147483648), (19, 1073741824), (20, 16777216), (21, 8388608), (22, 262144), (23, 4194304), (24, 134217728), (25, 1073741824), (26, 4294967296), (27, -1), (28, 4294967296), (29, -1), (30, 1048576), (31, 4194304), (32, 32768), (33, 16384), (34, -1), (35, 2147483648), (36, 134217728), (37, 268435456), (38, 16384), (39, 1073741824), (40, 4194304), (41, -1), (42, 524288), (43, 524288), (44, -1), (45, 67108864), (46, 16777216), (47, -1), (48, -1), (49, 67108864), (50, -1), (51, -1), (52, -1)]

Decide 10 with phase True at level 2

After decision at level 2
 pending : [23, 40, 37, 5, 15, 16, 22, 21, 14, 20, 24, 8, 30, 33, 45, 38, 42, 43, 46, 49, 36, 31, 32, 13, 3, 39, 25, 26, 19, 35, 18, 28]
 solution : [0, 10]


New level: 3
 pending : [23, 40, 37, 5, 15, 16, 22, 21, 14, 20, 24, 8, 30, 33, 45, 38, 42, 43, 46, 49, 36, 31, 32, 13, 3, 39, 25, 26, 19, 35, 18, 28]
 solution : [0, 10]


Before reduction : 
 pending  : [23, 40, 37, 5, 15, 16, 22, 21, 14, 20, 24, 8, 30, 33, 45, 38, 42, 43, 46, 49, 36, 31, 32, 13, 3, 39, 25, 26, 19, 35, 18, 28]
 solution : [0, 10]

Essensial at level 3 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 134217728), (4, -1), (5, 1048576), (6, -1), (7, -1), (8, 1048576), (9, -1), (10, 17179869184), (11, -1), (12, -1), (13, 67108864), (14, 33554432), (15, 1572864), (16, 524288), (17, -1), (18, 2147483648), (19, 1073741824), (20, 16777216), (21, 8388608), (22, 262144), (23, 4194304), (24, 134217728), (25, 1073741824), (26, 4294967296), (27, -1), (28, 4294967296), (29, -1), (30, 1048576), (31, 4194304), (32, 32768), (33, 16384), (34, -1), (35, 2147483648), (36, 134217728), (37, 268435456), (38, 16384), (39, 1073741824), (40, 4194304), (41, -1), (42, 524288), (43, 524288), (44, -1), (45, 67108864), (46, 16777216), (47, -1), (48, -1), (49, 67108864), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 134217728), (4, -1), (5, 262144), (6, -1), (7, -1), (8, 1048576), (9, -1), (10, -1), (11, -1), (12, -1), (13, 16777216), (14, 8388608), (15, 393216), (16, 131072), (17, -1), (18, 536870912), (19, 268435456), (20, 4194304), (21, 2097152), (22, 65536), (23, 1048576), (24, 134217728), (25, 1073741824), (26, 4294967296), (27, -1), (28, 1073741824), (29, -1), (30, 1048576), (31, 4194304), (32, 32768), (33, 16384), (34, -1), (35, 2147483648), (36, 134217728), (37, 67108864), (38, 16384), (39, 268435456), (40, 1048576), (41, -1), (42, 524288), (43, 524288), (44, -1), (45, 67108864), (46, 16777216), (47, -1), (48, -1), (49, 67108864), (50, -1), (51, -1), (52, -1)]

Covered at level 3 : set()

After reduction : 
 pending  : [23, 40, 37, 5, 15, 16, 22, 21, 14, 20, 24, 8, 30, 33, 45, 38, 42, 43, 46, 49, 36, 31, 32, 13, 3, 39, 25, 26, 19, 35, 18, 28]
 solution : [0, 10]


Solution : [0, 10] has cost 11.


Decide in level 3 among pending : [23, 40, 37, 5, 15, 16, 22, 21, 14, 20, 24, 8, 30, 33, 45, 38, 42, 43, 46, 49, 36, 31, 32, 13, 3, 39, 25, 26, 19, 35, 18, 28]

Coverage : [(0, -1), (1, -1), (2, -1), (3, 134217728), (4, -1), (5, 262144), (6, -1), (7, -1), (8, 1048576), (9, -1), (10, -1), (11, -1), (12, -1), (13, 16777216), (14, 8388608), (15, 393216), (16, 131072), (17, -1), (18, 536870912), (19, 268435456), (20, 4194304), (21, 2097152), (22, 65536), (23, 1048576), (24, 134217728), (25, 1073741824), (26, 4294967296), (27, -1), (28, 1073741824), (29, -1), (30, 1048576), (31, 4194304), (32, 32768), (33, 16384), (34, -1), (35, 2147483648), (36, 134217728), (37, 67108864), (38, 16384), (39, 268435456), (40, 1048576), (41, -1), (42, 524288), (43, 524288), (44, -1), (45, 67108864), (46, 16777216), (47, -1), (48, -1), (49, 67108864), (50, -1), (51, -1), (52, -1)]

Decide 26 with phase True at level 3

After decision at level 3
 pending : [23, 40, 37, 5, 15, 16, 22, 21, 14, 20, 24, 8, 30, 33, 45, 38, 42, 43, 46, 49, 36, 31, 32, 13, 3, 39, 25, 19, 35, 18, 28]
 solution : [0, 10, 26]


New level: 4
 pending : [23, 40, 37, 5, 15, 16, 22, 21, 14, 20, 24, 8, 30, 33, 45, 38, 42, 43, 46, 49, 36, 31, 32, 13, 3, 39, 25, 19, 35, 18, 28]
 solution : [0, 10, 26]


Before reduction : 
 pending  : [23, 40, 37, 5, 15, 16, 22, 21, 14, 20, 24, 8, 30, 33, 45, 38, 42, 43, 46, 49, 36, 31, 32, 13, 3, 39, 25, 19, 35, 18, 28]
 solution : [0, 10, 26]

Essensial at level 4 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 134217728), (4, -1), (5, 262144), (6, -1), (7, -1), (8, 1048576), (9, -1), (10, -1), (11, -1), (12, -1), (13, 16777216), (14, 8388608), (15, 393216), (16, 131072), (17, -1), (18, 536870912), (19, 268435456), (20, 4194304), (21, 2097152), (22, 65536), (23, 1048576), (24, 134217728), (25, 1073741824), (26, 4294967296), (27, -1), (28, 1073741824), (29, -1), (30, 1048576), (31, 4194304), (32, 32768), (33, 16384), (34, -1), (35, 2147483648), (36, 134217728), (37, 67108864), (38, 16384), (39, 268435456), (40, 1048576), (41, -1), (42, 524288), (43, 524288), (44, -1), (45, 67108864), (46, 16777216), (47, -1), (48, -1), (49, 67108864), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 134217728), (4, -1), (5, 262144), (6, -1), (7, -1), (8, 1048576), (9, -1), (10, -1), (11, -1), (12, -1), (13, 16777216), (14, 8388608), (15, 393216), (16, 131072), (17, -1), (18, 536870912), (19, 268435456), (20, 4194304), (21, 2097152), (22, 65536), (23, 1048576), (24, 134217728), (25, 536870912), (26, -1), (27, -1), (28, 1073741824), (29, -1), (30, 1048576), (31, 2097152), (32, 16384), (33, 16384), (34, -1), (35, 1073741824), (36, 134217728), (37, 67108864), (38, 16384), (39, 134217728), (40, 1048576), (41, -1), (42, 524288), (43, 524288), (44, -1), (45, 67108864), (46, 16777216), (47, -1), (48, -1), (49, 67108864), (50, -1), (51, -1), (52, -1)]

Covered at level 4 : set()

After reduction : 
 pending  : [23, 40, 37, 5, 15, 16, 22, 21, 14, 20, 24, 8, 30, 33, 45, 38, 42, 43, 46, 49, 36, 31, 32, 13, 3, 39, 25, 19, 35, 18, 28]
 solution : [0, 10, 26]


Solution : [0, 10, 26] has cost 15.


Decide in level 4 among pending : [23, 40, 37, 5, 15, 16, 22, 21, 14, 20, 24, 8, 30, 33, 45, 38, 42, 43, 46, 49, 36, 31, 32, 13, 3, 39, 25, 19, 35, 18, 28]

Coverage : [(0, -1), (1, -1), (2, -1), (3, 134217728), (4, -1), (5, 262144), (6, -1), (7, -1), (8, 1048576), (9, -1), (10, -1), (11, -1), (12, -1), (13, 16777216), (14, 8388608), (15, 393216), (16, 131072), (17, -1), (18, 536870912), (19, 268435456), (20, 4194304), (21, 2097152), (22, 65536), (23, 1048576), (24, 134217728), (25, 536870912), (26, -1), (27, -1), (28, 1073741824), (29, -1), (30, 1048576), (31, 2097152), (32, 16384), (33, 16384), (34, -1), (35, 1073741824), (36, 134217728), (37, 67108864), (38, 16384), (39, 134217728), (40, 1048576), (41, -1), (42, 524288), (43, 524288), (44, -1), (45, 67108864), (46, 16777216), (47, -1), (48, -1), (49, 67108864), (50, -1), (51, -1), (52, -1)]

Decide 35 with phase True at level 4

After decision at level 4
 pending : [23, 40, 37, 5, 15, 16, 22, 21, 14, 20, 24, 8, 30, 33, 45, 38, 42, 43, 46, 49, 36, 31, 32, 13, 3, 39, 25, 19, 18, 28]
 solution : [0, 10, 26, 35]


New level: 5
 pending : [23, 40, 37, 5, 15, 16, 22, 21, 14, 20, 24, 8, 30, 33, 45, 38, 42, 43, 46, 49, 36, 31, 32, 13, 3, 39, 25, 19, 18, 28]
 solution : [0, 10, 26, 35]


Before reduction : 
 pending  : [23, 40, 37, 5, 15, 16, 22, 21, 14, 20, 24, 8, 30, 33, 45, 38, 42, 43, 46, 49, 36, 31, 32, 13, 3, 39, 25, 19, 18, 28]
 solution : [0, 10, 26, 35]

Essensial at level 5 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 134217728), (4, -1), (5, 262144), (6, -1), (7, -1), (8, 1048576), (9, -1), (10, -1), (11, -1), (12, -1), (13, 16777216), (14, 8388608), (15, 393216), (16, 131072), (17, -1), (18, 536870912), (19, 268435456), (20, 4194304), (21, 2097152), (22, 65536), (23, 1048576), (24, 134217728), (25, 536870912), (26, -1), (27, -1), (28, 1073741824), (29, -1), (30, 1048576), (31, 2097152), (32, 16384), (33, 16384), (34, -1), (35, 1073741824), (36, 134217728), (37, 67108864), (38, 16384), (39, 134217728), (40, 1048576), (41, -1), (42, 524288), (43, 524288), (44, -1), (45, 67108864), (46, 16777216), (47, -1), (48, -1), (49, 67108864), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 134217728), (4, -1), (5, 262144), (6, -1), (7, -1), (8, 262144), (9, -1), (10, -1), (11, -1), (12, -1), (13, 16777216), (14, 8388608), (15, 393216), (16, 131072), (17, -1), (18, 536870912), (19, 268435456), (20, 4194304), (21, 2097152), (22, 65536), (23, 1048576), (24, 134217728), (25, 16384), (26, -1), (27, -1), (28, 1073741824), (29, -1), (30, 262144), (31, 0), (32, 0), (33, 4096), (34, -1), (35, -1), (36, 33554432), (37, 67108864), (38, 4096), (39, 4096), (40, 1048576), (41, -1), (42, 131072), (43, 131072), (44, -1), (45, 16777216), (46, 4194304), (47, -1), (48, -1), (49, 16777216), (50, -1), (51, -1), (52, -1)]

Covered at level 5 : {32, 31}

After reduction : 
 pending  : [23, 40, 37, 5, 15, 16, 22, 21, 14, 20, 24, 8, 30, 33, 45, 38, 42, 43, 46, 49, 36, 13, 3, 39, 25, 19, 18, 28]
 solution : [0, 10, 26, 35]


Before reduction : 
 pending  : [23, 40, 37, 5, 15, 16, 22, 21, 14, 20, 24, 8, 30, 33, 45, 38, 42, 43, 46, 49, 36, 13, 3, 39, 25, 19, 18, 28]
 solution : [0, 10, 26, 35]

Essensial at level 5 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 134217728), (4, -1), (5, 262144), (6, -1), (7, -1), (8, 262144), (9, -1), (10, -1), (11, -1), (12, -1), (13, 16777216), (14, 8388608), (15, 393216), (16, 131072), (17, -1), (18, 536870912), (19, 268435456), (20, 4194304), (21, 2097152), (22, 65536), (23, 1048576), (24, 134217728), (25, 16384), (26, -1), (27, -1), (28, 1073741824), (29, -1), (30, 262144), (31, 0), (32, 0), (33, 4096), (34, -1), (35, -1), (36, 33554432), (37, 67108864), (38, 4096), (39, 4096), (40, 1048576), (41, -1), (42, 131072), (43, 131072), (44, -1), (45, 16777216), (46, 4194304), (47, -1), (48, -1), (49, 16777216), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 134217728), (4, -1), (5, 262144), (6, -1), (7, -1), (8, 262144), (9, -1), (10, -1), (11, -1), (12, -1), (13, 16777216), (14, 8388608), (15, 393216), (16, 131072), (17, -1), (18, 536870912), (19, 268435456), (20, 4194304), (21, 2097152), (22, 65536), (23, 1048576), (24, 134217728), (25, 16384), (26, -1), (27, -1), (28, 1073741824), (29, -1), (30, 262144), (31, -1), (32, -1), (33, 4096), (34, -1), (35, -1), (36, 33554432), (37, 67108864), (38, 4096), (39, 4096), (40, 1048576), (41, -1), (42, 131072), (43, 131072), (44, -1), (45, 16777216), (46, 4194304), (47, -1), (48, -1), (49, 16777216), (50, -1), (51, -1), (52, -1)]

Covered at level 5 : set()

After reduction : 
 pending  : [23, 40, 37, 5, 15, 16, 22, 21, 14, 20, 24, 8, 30, 33, 45, 38, 42, 43, 46, 49, 36, 13, 3, 39, 25, 19, 18, 28]
 solution : [0, 10, 26, 35]


Solution : [0, 10, 26, 35] has cost 28.


Before backtrack at level 5
 pending : [23, 40, 37, 5, 15, 16, 22, 21, 14, 20, 24, 8, 30, 33, 45, 38, 42, 43, 46, 49, 36, 13, 3, 39, 25, 19, 18, 28]
 solution : [0, 10, 26, 35]

After backtrack at level 5
 pending : [23, 40, 37, 5, 15, 16, 22, 21, 14, 20, 24, 8, 30, 33, 45, 38, 42, 43, 46, 49, 36, 13, 3, 39, 25, 19, 18, 28, 31, 32]
 solution : [0, 10, 26, 35]


Invert decision for 35 at level 4


New level: 5
 pending : [23, 40, 37, 5, 15, 16, 22, 21, 14, 20, 24, 8, 30, 33, 45, 38, 42, 43, 46, 49, 36, 13, 3, 39, 25, 19, 18, 28, 31, 32]
 solution : [0, 10, 26]


Before reduction : 
 pending  : [23, 40, 37, 5, 15, 16, 22, 21, 14, 20, 24, 8, 30, 33, 45, 38, 42, 43, 46, 49, 36, 13, 3, 39, 25, 19, 18, 28, 31, 32]
 solution : [0, 10, 26]

Essensial at level 5 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 134217728), (4, -1), (5, 262144), (6, -1), (7, -1), (8, 262144), (9, -1), (10, -1), (11, -1), (12, -1), (13, 16777216), (14, 8388608), (15, 393216), (16, 131072), (17, -1), (18, 536870912), (19, 268435456), (20, 4194304), (21, 2097152), (22, 65536), (23, 1048576), (24, 134217728), (25, 16384), (26, -1), (27, -1), (28, 1073741824), (29, -1), (30, 262144), (31, -1), (32, -1), (33, 4096), (34, -1), (35, -1), (36, 33554432), (37, 67108864), (38, 4096), (39, 4096), (40, 1048576), (41, -1), (42, 131072), (43, 131072), (44, -1), (45, 16777216), (46, 4194304), (47, -1), (48, -1), (49, 16777216), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 134217728), (4, -1), (5, 262144), (6, -1), (7, -1), (8, 1048576), (9, -1), (10, -1), (11, -1), (12, -1), (13, 16777216), (14, 8388608), (15, 393216), (16, 131072), (17, -1), (18, 536870912), (19, 268435456), (20, 4194304), (21, 2097152), (22, 65536), (23, 1048576), (24, 134217728), (25, 536870912), (26, -1), (27, -1), (28, 1073741824), (29, -1), (30, 1048576), (31, 2097152), (32, 16384), (33, 16384), (34, -1), (35, -1), (36, 134217728), (37, 67108864), (38, 16384), (39, 134217728), (40, 1048576), (41, -1), (42, 524288), (43, 524288), (44, -1), (45, 67108864), (46, 16777216), (47, -1), (48, -1), (49, 67108864), (50, -1), (51, -1), (52, -1)]

Covered at level 5 : set()

After reduction : 
 pending  : [23, 40, 37, 5, 15, 16, 22, 21, 14, 20, 24, 8, 30, 33, 45, 38, 42, 43, 46, 49, 36, 13, 3, 39, 25, 19, 18, 28, 31, 32]
 solution : [0, 10, 26]


Solution : [0, 10, 26] has cost 15.


Decide in level 5 among pending : [23, 40, 37, 5, 15, 16, 22, 21, 14, 20, 24, 8, 30, 33, 45, 38, 42, 43, 46, 49, 36, 13, 3, 39, 25, 19, 18, 28, 31, 32]

Coverage : [(0, -1), (1, -1), (2, -1), (3, 134217728), (4, -1), (5, 262144), (6, -1), (7, -1), (8, 1048576), (9, -1), (10, -1), (11, -1), (12, -1), (13, 16777216), (14, 8388608), (15, 393216), (16, 131072), (17, -1), (18, 536870912), (19, 268435456), (20, 4194304), (21, 2097152), (22, 65536), (23, 1048576), (24, 134217728), (25, 536870912), (26, -1), (27, -1), (28, 1073741824), (29, -1), (30, 1048576), (31, 2097152), (32, 16384), (33, 16384), (34, -1), (35, -1), (36, 134217728), (37, 67108864), (38, 16384), (39, 134217728), (40, 1048576), (41, -1), (42, 524288), (43, 524288), (44, -1), (45, 67108864), (46, 16777216), (47, -1), (48, -1), (49, 67108864), (50, -1), (51, -1), (52, -1)]

Decide 28 with phase True at level 5

After decision at level 5
 pending : [23, 40, 37, 5, 15, 16, 22, 21, 14, 20, 24, 8, 30, 33, 45, 38, 42, 43, 46, 49, 36, 13, 3, 39, 25, 19, 18, 31, 32]
 solution : [0, 10, 26, 28]


New level: 6
 pending : [23, 40, 37, 5, 15, 16, 22, 21, 14, 20, 24, 8, 30, 33, 45, 38, 42, 43, 46, 49, 36, 13, 3, 39, 25, 19, 18, 31, 32]
 solution : [0, 10, 26, 28]


Before reduction : 
 pending  : [23, 40, 37, 5, 15, 16, 22, 21, 14, 20, 24, 8, 30, 33, 45, 38, 42, 43, 46, 49, 36, 13, 3, 39, 25, 19, 18, 31, 32]
 solution : [0, 10, 26, 28]

Essensial at level 6 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 134217728), (4, -1), (5, 262144), (6, -1), (7, -1), (8, 1048576), (9, -1), (10, -1), (11, -1), (12, -1), (13, 16777216), (14, 8388608), (15, 393216), (16, 131072), (17, -1), (18, 536870912), (19, 268435456), (20, 4194304), (21, 2097152), (22, 65536), (23, 1048576), (24, 134217728), (25, 536870912), (26, -1), (27, -1), (28, 1073741824), (29, -1), (30, 1048576), (31, 2097152), (32, 16384), (33, 16384), (34, -1), (35, -1), (36, 134217728), (37, 67108864), (38, 16384), (39, 134217728), (40, 1048576), (41, -1), (42, 524288), (43, 524288), (44, -1), (45, 67108864), (46, 16777216), (47, -1), (48, -1), (49, 67108864), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 134217728), (4, -1), (5, 0), (6, -1), (7, -1), (8, 262144), (9, -1), (10, -1), (11, -1), (12, -1), (13, 0), (14, 0), (15, 0), (16, 0), (17, -1), (18, 0), (19, 0), (20, 0), (21, 0), (22, 0), (23, 0), (24, 134217728), (25, 536870912), (26, -1), (27, -1), (28, -1), (29, -1), (30, 524288), (31, 2097152), (32, 4096), (33, 4096), (34, -1), (35, -1), (36, 67108864), (37, 2048), (38, 2048), (39, 2048), (40, 0), (41, -1), (42, 131072), (43, 131072), (44, -1), (45, 33554432), (46, 4194304), (47, -1), (48, -1), (49, 16777216), (50, -1), (51, -1), (52, -1)]

Covered at level 6 : {5, 40, 13, 14, 15, 16, 18, 19, 20, 21, 22, 23}

After reduction : 
 pending  : [37, 24, 8, 30, 33, 45, 38, 42, 43, 46, 49, 36, 3, 39, 25, 31, 32]
 solution : [0, 10, 26, 28]


Before reduction : 
 pending  : [37, 24, 8, 30, 33, 45, 38, 42, 43, 46, 49, 36, 3, 39, 25, 31, 32]
 solution : [0, 10, 26, 28]

Essensial at level 6 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 134217728), (4, -1), (5, 0), (6, -1), (7, -1), (8, 262144), (9, -1), (10, -1), (11, -1), (12, -1), (13, 0), (14, 0), (15, 0), (16, 0), (17, -1), (18, 0), (19, 0), (20, 0), (21, 0), (22, 0), (23, 0), (24, 134217728), (25, 536870912), (26, -1), (27, -1), (28, -1), (29, -1), (30, 524288), (31, 2097152), (32, 4096), (33, 4096), (34, -1), (35, -1), (36, 67108864), (37, 2048), (38, 2048), (39, 2048), (40, 0), (41, -1), (42, 131072), (43, 131072), (44, -1), (45, 33554432), (46, 4194304), (47, -1), (48, -1), (49, 16777216), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 134217728), (4, -1), (5, -1), (6, -1), (7, -1), (8, 262144), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, 134217728), (25, 536870912), (26, -1), (27, -1), (28, -1), (29, -1), (30, 524288), (31, 2097152), (32, 4096), (33, 4096), (34, -1), (35, -1), (36, 67108864), (37, 2048), (38, 2048), (39, 2048), (40, -1), (41, -1), (42, 131072), (43, 131072), (44, -1), (45, 33554432), (46, 4194304), (47, -1), (48, -1), (49, 16777216), (50, -1), (51, -1), (52, -1)]

Covered at level 6 : set()

After reduction : 
 pending  : [37, 24, 8, 30, 33, 45, 38, 42, 43, 46, 49, 36, 3, 39, 25, 31, 32]
 solution : [0, 10, 26, 28]


Solution : [0, 10, 26, 28] has cost 19.


Before backtrack at level 6
 pending : [37, 24, 8, 30, 33, 45, 38, 42, 43, 46, 49, 36, 3, 39, 25, 31, 32]
 solution : [0, 10, 26, 28]

After backtrack at level 6
 pending : [37, 24, 8, 30, 33, 45, 38, 42, 43, 46, 49, 36, 3, 39, 25, 31, 32, 23, 40, 5, 15, 16, 22, 21, 14, 20, 13, 19, 18]
 solution : [0, 10, 26, 28]


Invert decision for 28 at level 5


New level: 6
 pending : [37, 24, 8, 30, 33, 45, 38, 42, 43, 46, 49, 36, 3, 39, 25, 31, 32, 23, 40, 5, 15, 16, 22, 21, 14, 20, 13, 19, 18]
 solution : [0, 10, 26]


Before reduction : 
 pending  : [37, 24, 8, 30, 33, 45, 38, 42, 43, 46, 49, 36, 3, 39, 25, 31, 32, 23, 40, 5, 15, 16, 22, 21, 14, 20, 13, 19, 18]
 solution : [0, 10, 26]

Essensial at level 6 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 134217728), (4, -1), (5, -1), (6, -1), (7, -1), (8, 262144), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, 134217728), (25, 536870912), (26, -1), (27, -1), (28, -1), (29, -1), (30, 524288), (31, 2097152), (32, 4096), (33, 4096), (34, -1), (35, -1), (36, 67108864), (37, 2048), (38, 2048), (39, 2048), (40, -1), (41, -1), (42, 131072), (43, 131072), (44, -1), (45, 33554432), (46, 4194304), (47, -1), (48, -1), (49, 16777216), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 134217728), (4, -1), (5, 262144), (6, -1), (7, -1), (8, 1048576), (9, -1), (10, -1), (11, -1), (12, -1), (13, 16777216), (14, 8388608), (15, 393216), (16, 131072), (17, -1), (18, 536870912), (19, 268435456), (20, 4194304), (21, 2097152), (22, 65536), (23, 1048576), (24, 134217728), (25, 536870912), (26, -1), (27, -1), (28, -1), (29, -1), (30, 1048576), (31, 2097152), (32, 16384), (33, 16384), (34, -1), (35, -1), (36, 134217728), (37, 67108864), (38, 16384), (39, 134217728), (40, 1048576), (41, -1), (42, 524288), (43, 524288), (44, -1), (45, 67108864), (46, 16777216), (47, -1), (48, -1), (49, 67108864), (50, -1), (51, -1), (52, -1)]

Covered at level 6 : set()

After reduction : 
 pending  : [37, 24, 8, 30, 33, 45, 38, 42, 43, 46, 49, 36, 3, 39, 25, 31, 32, 23, 40, 5, 15, 16, 22, 21, 14, 20, 13, 19, 18]
 solution : [0, 10, 26]


Solution : [0, 10, 26] has cost 15.


Decide in level 6 among pending : [37, 24, 8, 30, 33, 45, 38, 42, 43, 46, 49, 36, 3, 39, 25, 31, 32, 23, 40, 5, 15, 16, 22, 21, 14, 20, 13, 19, 18]

Coverage : [(0, -1), (1, -1), (2, -1), (3, 134217728), (4, -1), (5, 262144), (6, -1), (7, -1), (8, 1048576), (9, -1), (10, -1), (11, -1), (12, -1), (13, 16777216), (14, 8388608), (15, 393216), (16, 131072), (17, -1), (18, 536870912), (19, 268435456), (20, 4194304), (21, 2097152), (22, 65536), (23, 1048576), (24, 134217728), (25, 536870912), (26, -1), (27, -1), (28, -1), (29, -1), (30, 1048576), (31, 2097152), (32, 16384), (33, 16384), (34, -1), (35, -1), (36, 134217728), (37, 67108864), (38, 16384), (39, 134217728), (40, 1048576), (41, -1), (42, 524288), (43, 524288), (44, -1), (45, 67108864), (46, 16777216), (47, -1), (48, -1), (49, 67108864), (50, -1), (51, -1), (52, -1)]

Decide 25 with phase True at level 6

After decision at level 6
 pending : [37, 24, 8, 30, 33, 45, 38, 42, 43, 46, 49, 36, 3, 39, 31, 32, 23, 40, 5, 15, 16, 22, 21, 14, 20, 13, 19, 18]
 solution : [0, 10, 26, 25]


New level: 7
 pending : [37, 24, 8, 30, 33, 45, 38, 42, 43, 46, 49, 36, 3, 39, 31, 32, 23, 40, 5, 15, 16, 22, 21, 14, 20, 13, 19, 18]
 solution : [0, 10, 26, 25]


Before reduction : 
 pending  : [37, 24, 8, 30, 33, 45, 38, 42, 43, 46, 49, 36, 3, 39, 31, 32, 23, 40, 5, 15, 16, 22, 21, 14, 20, 13, 19, 18]
 solution : [0, 10, 26, 25]

Essensial at level 7 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 134217728), (4, -1), (5, 262144), (6, -1), (7, -1), (8, 1048576), (9, -1), (10, -1), (11, -1), (12, -1), (13, 16777216), (14, 8388608), (15, 393216), (16, 131072), (17, -1), (18, 536870912), (19, 268435456), (20, 4194304), (21, 2097152), (22, 65536), (23, 1048576), (24, 134217728), (25, 536870912), (26, -1), (27, -1), (28, -1), (29, -1), (30, 1048576), (31, 2097152), (32, 16384), (33, 16384), (34, -1), (35, -1), (36, 134217728), (37, 67108864), (38, 16384), (39, 134217728), (40, 1048576), (41, -1), (42, 524288), (43, 524288), (44, -1), (45, 67108864), (46, 16777216), (47, -1), (48, -1), (49, 67108864), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 33554432), (4, -1), (5, 262144), (6, -1), (7, -1), (8, 262144), (9, -1), (10, -1), (11, -1), (12, -1), (13, 16777216), (14, 8388608), (15, 393216), (16, 131072), (17, -1), (18, 536870912), (19, 268435456), (20, 4194304), (21, 2097152), (22, 65536), (23, 1048576), (24, 33554432), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, 262144), (31, 0), (32, 0), (33, 4096), (34, -1), (35, -1), (36, 67108864), (37, 33554432), (38, 4096), (39, 512), (40, 1048576), (41, -1), (42, 131072), (43, 131072), (44, -1), (45, 33554432), (46, 4194304), (47, -1), (48, -1), (49, 67108864), (50, -1), (51, -1), (52, -1)]

Covered at level 7 : {32, 31}

After reduction : 
 pending  : [37, 24, 8, 30, 33, 45, 38, 42, 43, 46, 49, 36, 3, 39, 23, 40, 5, 15, 16, 22, 21, 14, 20, 13, 19, 18]
 solution : [0, 10, 26, 25]


Before reduction : 
 pending  : [37, 24, 8, 30, 33, 45, 38, 42, 43, 46, 49, 36, 3, 39, 23, 40, 5, 15, 16, 22, 21, 14, 20, 13, 19, 18]
 solution : [0, 10, 26, 25]

Essensial at level 7 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 33554432), (4, -1), (5, 262144), (6, -1), (7, -1), (8, 262144), (9, -1), (10, -1), (11, -1), (12, -1), (13, 16777216), (14, 8388608), (15, 393216), (16, 131072), (17, -1), (18, 536870912), (19, 268435456), (20, 4194304), (21, 2097152), (22, 65536), (23, 1048576), (24, 33554432), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, 262144), (31, 0), (32, 0), (33, 4096), (34, -1), (35, -1), (36, 67108864), (37, 33554432), (38, 4096), (39, 512), (40, 1048576), (41, -1), (42, 131072), (43, 131072), (44, -1), (45, 33554432), (46, 4194304), (47, -1), (48, -1), (49, 67108864), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 33554432), (4, -1), (5, 262144), (6, -1), (7, -1), (8, 262144), (9, -1), (10, -1), (11, -1), (12, -1), (13, 16777216), (14, 8388608), (15, 393216), (16, 131072), (17, -1), (18, 536870912), (19, 268435456), (20, 4194304), (21, 2097152), (22, 65536), (23, 1048576), (24, 33554432), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, 262144), (31, -1), (32, -1), (33, 4096), (34, -1), (35, -1), (36, 67108864), (37, 33554432), (38, 4096), (39, 512), (40, 1048576), (41, -1), (42, 131072), (43, 131072), (44, -1), (45, 33554432), (46, 4194304), (47, -1), (48, -1), (49, 67108864), (50, -1), (51, -1), (52, -1)]

Covered at level 7 : set()

After reduction : 
 pending  : [37, 24, 8, 30, 33, 45, 38, 42, 43, 46, 49, 36, 3, 39, 23, 40, 5, 15, 16, 22, 21, 14, 20, 13, 19, 18]
 solution : [0, 10, 26, 25]


Solution : [0, 10, 26, 25] has cost 22.


Before backtrack at level 7
 pending : [37, 24, 8, 30, 33, 45, 38, 42, 43, 46, 49, 36, 3, 39, 23, 40, 5, 15, 16, 22, 21, 14, 20, 13, 19, 18]
 solution : [0, 10, 26, 25]

After backtrack at level 7
 pending : [37, 24, 8, 30, 33, 45, 38, 42, 43, 46, 49, 36, 3, 39, 23, 40, 5, 15, 16, 22, 21, 14, 20, 13, 19, 18, 31, 32]
 solution : [0, 10, 26, 25]


Invert decision for 25 at level 6


New level: 7
 pending : [37, 24, 8, 30, 33, 45, 38, 42, 43, 46, 49, 36, 3, 39, 23, 40, 5, 15, 16, 22, 21, 14, 20, 13, 19, 18, 31, 32]
 solution : [0, 10, 26]


Before reduction : 
 pending  : [37, 24, 8, 30, 33, 45, 38, 42, 43, 46, 49, 36, 3, 39, 23, 40, 5, 15, 16, 22, 21, 14, 20, 13, 19, 18, 31, 32]
 solution : [0, 10, 26]

Essensial at level 7 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 33554432), (4, -1), (5, 262144), (6, -1), (7, -1), (8, 262144), (9, -1), (10, -1), (11, -1), (12, -1), (13, 16777216), (14, 8388608), (15, 393216), (16, 131072), (17, -1), (18, 536870912), (19, 268435456), (20, 4194304), (21, 2097152), (22, 65536), (23, 1048576), (24, 33554432), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, 262144), (31, -1), (32, -1), (33, 4096), (34, -1), (35, -1), (36, 67108864), (37, 33554432), (38, 4096), (39, 512), (40, 1048576), (41, -1), (42, 131072), (43, 131072), (44, -1), (45, 33554432), (46, 4194304), (47, -1), (48, -1), (49, 67108864), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 134217728), (4, -1), (5, 262144), (6, -1), (7, -1), (8, 1048576), (9, -1), (10, -1), (11, -1), (12, -1), (13, 16777216), (14, 8388608), (15, 393216), (16, 131072), (17, -1), (18, 536870912), (19, 268435456), (20, 4194304), (21, 2097152), (22, 65536), (23, 1048576), (24, 134217728), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, 1048576), (31, 2097152), (32, 16384), (33, 16384), (34, -1), (35, -1), (36, 134217728), (37, 67108864), (38, 16384), (39, 134217728), (40, 1048576), (41, -1), (42, 524288), (43, 524288), (44, -1), (45, 67108864), (46, 16777216), (47, -1), (48, -1), (49, 67108864), (50, -1), (51, -1), (52, -1)]

Covered at level 7 : set()

After reduction : 
 pending  : [37, 24, 8, 30, 33, 45, 38, 42, 43, 46, 49, 36, 3, 39, 23, 40, 5, 15, 16, 22, 21, 14, 20, 13, 19, 18, 31, 32]
 solution : [0, 10, 26]


Solution : [0, 10, 26] has cost 15.


Decide in level 7 among pending : [37, 24, 8, 30, 33, 45, 38, 42, 43, 46, 49, 36, 3, 39, 23, 40, 5, 15, 16, 22, 21, 14, 20, 13, 19, 18, 31, 32]

Coverage : [(0, -1), (1, -1), (2, -1), (3, 134217728), (4, -1), (5, 262144), (6, -1), (7, -1), (8, 1048576), (9, -1), (10, -1), (11, -1), (12, -1), (13, 16777216), (14, 8388608), (15, 393216), (16, 131072), (17, -1), (18, 536870912), (19, 268435456), (20, 4194304), (21, 2097152), (22, 65536), (23, 1048576), (24, 134217728), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, 1048576), (31, 2097152), (32, 16384), (33, 16384), (34, -1), (35, -1), (36, 134217728), (37, 67108864), (38, 16384), (39, 134217728), (40, 1048576), (41, -1), (42, 524288), (43, 524288), (44, -1), (45, 67108864), (46, 16777216), (47, -1), (48, -1), (49, 67108864), (50, -1), (51, -1), (52, -1)]

Decide 18 with phase True at level 7

After decision at level 7
 pending : [37, 24, 8, 30, 33, 45, 38, 42, 43, 46, 49, 36, 3, 39, 23, 40, 5, 15, 16, 22, 21, 14, 20, 13, 19, 31, 32]
 solution : [0, 10, 26, 18]


New level: 8
 pending : [37, 24, 8, 30, 33, 45, 38, 42, 43, 46, 49, 36, 3, 39, 23, 40, 5, 15, 16, 22, 21, 14, 20, 13, 19, 31, 32]
 solution : [0, 10, 26, 18]


Before reduction : 
 pending  : [37, 24, 8, 30, 33, 45, 38, 42, 43, 46, 49, 36, 3, 39, 23, 40, 5, 15, 16, 22, 21, 14, 20, 13, 19, 31, 32]
 solution : [0, 10, 26, 18]

Essensial at level 8 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 134217728), (4, -1), (5, 262144), (6, -1), (7, -1), (8, 1048576), (9, -1), (10, -1), (11, -1), (12, -1), (13, 16777216), (14, 8388608), (15, 393216), (16, 131072), (17, -1), (18, 536870912), (19, 268435456), (20, 4194304), (21, 2097152), (22, 65536), (23, 1048576), (24, 134217728), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, 1048576), (31, 2097152), (32, 16384), (33, 16384), (34, -1), (35, -1), (36, 134217728), (37, 67108864), (38, 16384), (39, 134217728), (40, 1048576), (41, -1), (42, 524288), (43, 524288), (44, -1), (45, 67108864), (46, 16777216), (47, -1), (48, -1), (49, 67108864), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 134217728), (4, -1), (5, 0), (6, -1), (7, -1), (8, 262144), (9, -1), (10, -1), (11, -1), (12, -1), (13, 0), (14, 0), (15, 0), (16, 0), (17, -1), (18, -1), (19, 0), (20, 0), (21, 0), (22, 0), (23, 0), (24, 134217728), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, 524288), (31, 2097152), (32, 4096), (33, 4096), (34, -1), (35, -1), (36, 67108864), (37, 2048), (38, 2048), (39, 2048), (40, 0), (41, -1), (42, 131072), (43, 131072), (44, -1), (45, 33554432), (46, 4194304), (47, -1), (48, -1), (49, 67108864), (50, -1), (51, -1), (52, -1)]

Covered at level 8 : {5, 40, 13, 14, 15, 16, 19, 20, 21, 22, 23}

After reduction : 
 pending  : [37, 24, 8, 30, 33, 45, 38, 42, 43, 46, 49, 36, 3, 39, 31, 32]
 solution : [0, 10, 26, 18]


Before reduction : 
 pending  : [37, 24, 8, 30, 33, 45, 38, 42, 43, 46, 49, 36, 3, 39, 31, 32]
 solution : [0, 10, 26, 18]

Essensial at level 8 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 134217728), (4, -1), (5, 0), (6, -1), (7, -1), (8, 262144), (9, -1), (10, -1), (11, -1), (12, -1), (13, 0), (14, 0), (15, 0), (16, 0), (17, -1), (18, -1), (19, 0), (20, 0), (21, 0), (22, 0), (23, 0), (24, 134217728), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, 524288), (31, 2097152), (32, 4096), (33, 4096), (34, -1), (35, -1), (36, 67108864), (37, 2048), (38, 2048), (39, 2048), (40, 0), (41, -1), (42, 131072), (43, 131072), (44, -1), (45, 33554432), (46, 4194304), (47, -1), (48, -1), (49, 67108864), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 134217728), (4, -1), (5, -1), (6, -1), (7, -1), (8, 262144), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, 134217728), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, 524288), (31, 2097152), (32, 4096), (33, 4096), (34, -1), (35, -1), (36, 67108864), (37, 2048), (38, 2048), (39, 2048), (40, -1), (41, -1), (42, 131072), (43, 131072), (44, -1), (45, 33554432), (46, 4194304), (47, -1), (48, -1), (49, 67108864), (50, -1), (51, -1), (52, -1)]

Covered at level 8 : set()

After reduction : 
 pending  : [37, 24, 8, 30, 33, 45, 38, 42, 43, 46, 49, 36, 3, 39, 31, 32]
 solution : [0, 10, 26, 18]


Solution : [0, 10, 26, 18] has cost 22.


Before backtrack at level 8
 pending : [37, 24, 8, 30, 33, 45, 38, 42, 43, 46, 49, 36, 3, 39, 31, 32]
 solution : [0, 10, 26, 18]

After backtrack at level 8
 pending : [37, 24, 8, 30, 33, 45, 38, 42, 43, 46, 49, 36, 3, 39, 31, 32, 23, 40, 5, 15, 16, 22, 21, 14, 20, 13, 19]
 solution : [0, 10, 26, 18]


Invert decision for 18 at level 7


New level: 8
 pending : [37, 24, 8, 30, 33, 45, 38, 42, 43, 46, 49, 36, 3, 39, 31, 32, 23, 40, 5, 15, 16, 22, 21, 14, 20, 13, 19]
 solution : [0, 10, 26]


Before reduction : 
 pending  : [37, 24, 8, 30, 33, 45, 38, 42, 43, 46, 49, 36, 3, 39, 31, 32, 23, 40, 5, 15, 16, 22, 21, 14, 20, 13, 19]
 solution : [0, 10, 26]

Essensial at level 8 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 134217728), (4, -1), (5, -1), (6, -1), (7, -1), (8, 262144), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, 134217728), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, 524288), (31, 2097152), (32, 4096), (33, 4096), (34, -1), (35, -1), (36, 67108864), (37, 2048), (38, 2048), (39, 2048), (40, -1), (41, -1), (42, 131072), (43, 131072), (44, -1), (45, 33554432), (46, 4194304), (47, -1), (48, -1), (49, 67108864), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 134217728), (4, -1), (5, 262144), (6, -1), (7, -1), (8, 1048576), (9, -1), (10, -1), (11, -1), (12, -1), (13, 16777216), (14, 8388608), (15, 393216), (16, 131072), (17, -1), (18, -1), (19, 268435456), (20, 4194304), (21, 2097152), (22, 65536), (23, 1048576), (24, 134217728), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, 1048576), (31, 2097152), (32, 16384), (33, 16384), (34, -1), (35, -1), (36, 134217728), (37, 67108864), (38, 16384), (39, 134217728), (40, 1048576), (41, -1), (42, 524288), (43, 524288), (44, -1), (45, 67108864), (46, 16777216), (47, -1), (48, -1), (49, 67108864), (50, -1), (51, -1), (52, -1)]

Covered at level 8 : set()

After reduction : 
 pending  : [37, 24, 8, 30, 33, 45, 38, 42, 43, 46, 49, 36, 3, 39, 31, 32, 23, 40, 5, 15, 16, 22, 21, 14, 20, 13, 19]
 solution : [0, 10, 26]


Solution : [0, 10, 26] has cost 15.


Decide in level 8 among pending : [37, 24, 8, 30, 33, 45, 38, 42, 43, 46, 49, 36, 3, 39, 31, 32, 23, 40, 5, 15, 16, 22, 21, 14, 20, 13, 19]

Coverage : [(0, -1), (1, -1), (2, -1), (3, 134217728), (4, -1), (5, 262144), (6, -1), (7, -1), (8, 1048576), (9, -1), (10, -1), (11, -1), (12, -1), (13, 16777216), (14, 8388608), (15, 393216), (16, 131072), (17, -1), (18, -1), (19, 268435456), (20, 4194304), (21, 2097152), (22, 65536), (23, 1048576), (24, 134217728), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, 1048576), (31, 2097152), (32, 16384), (33, 16384), (34, -1), (35, -1), (36, 134217728), (37, 67108864), (38, 16384), (39, 134217728), (40, 1048576), (41, -1), (42, 524288), (43, 524288), (44, -1), (45, 67108864), (46, 16777216), (47, -1), (48, -1), (49, 67108864), (50, -1), (51, -1), (52, -1)]

Decide 19 with phase True at level 8

After decision at level 8
 pending : [37, 24, 8, 30, 33, 45, 38, 42, 43, 46, 49, 36, 3, 39, 31, 32, 23, 40, 5, 15, 16, 22, 21, 14, 20, 13]
 solution : [0, 10, 26, 19]


New level: 9
 pending : [37, 24, 8, 30, 33, 45, 38, 42, 43, 46, 49, 36, 3, 39, 31, 32, 23, 40, 5, 15, 16, 22, 21, 14, 20, 13]
 solution : [0, 10, 26, 19]


Before reduction : 
 pending  : [37, 24, 8, 30, 33, 45, 38, 42, 43, 46, 49, 36, 3, 39, 31, 32, 23, 40, 5, 15, 16, 22, 21, 14, 20, 13]
 solution : [0, 10, 26, 19]

Essensial at level 9 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 134217728), (4, -1), (5, 262144), (6, -1), (7, -1), (8, 1048576), (9, -1), (10, -1), (11, -1), (12, -1), (13, 16777216), (14, 8388608), (15, 393216), (16, 131072), (17, -1), (18, -1), (19, 268435456), (20, 4194304), (21, 2097152), (22, 65536), (23, 1048576), (24, 134217728), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, 1048576), (31, 2097152), (32, 16384), (33, 16384), (34, -1), (35, -1), (36, 134217728), (37, 67108864), (38, 16384), (39, 134217728), (40, 1048576), (41, -1), (42, 524288), (43, 524288), (44, -1), (45, 67108864), (46, 16777216), (47, -1), (48, -1), (49, 67108864), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 134217728), (4, -1), (5, 0), (6, -1), (7, -1), (8, 262144), (9, -1), (10, -1), (11, -1), (12, -1), (13, 0), (14, 0), (15, 0), (16, 0), (17, -1), (18, -1), (19, -1), (20, 0), (21, 0), (22, 0), (23, 0), (24, 134217728), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, 524288), (31, 2097152), (32, 4096), (33, 4096), (34, -1), (35, -1), (36, 67108864), (37, 2048), (38, 2048), (39, 2048), (40, 0), (41, -1), (42, 131072), (43, 131072), (44, -1), (45, 67108864), (46, 16777216), (47, -1), (48, -1), (49, 67108864), (50, -1), (51, -1), (52, -1)]

Covered at level 9 : {5, 40, 13, 14, 15, 16, 20, 21, 22, 23}

After reduction : 
 pending  : [37, 24, 8, 30, 33, 45, 38, 42, 43, 46, 49, 36, 3, 39, 31, 32]
 solution : [0, 10, 26, 19]


Before reduction : 
 pending  : [37, 24, 8, 30, 33, 45, 38, 42, 43, 46, 49, 36, 3, 39, 31, 32]
 solution : [0, 10, 26, 19]

Essensial at level 9 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 134217728), (4, -1), (5, 0), (6, -1), (7, -1), (8, 262144), (9, -1), (10, -1), (11, -1), (12, -1), (13, 0), (14, 0), (15, 0), (16, 0), (17, -1), (18, -1), (19, -1), (20, 0), (21, 0), (22, 0), (23, 0), (24, 134217728), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, 524288), (31, 2097152), (32, 4096), (33, 4096), (34, -1), (35, -1), (36, 67108864), (37, 2048), (38, 2048), (39, 2048), (40, 0), (41, -1), (42, 131072), (43, 131072), (44, -1), (45, 67108864), (46, 16777216), (47, -1), (48, -1), (49, 67108864), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 134217728), (4, -1), (5, -1), (6, -1), (7, -1), (8, 262144), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, 134217728), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, 524288), (31, 2097152), (32, 4096), (33, 4096), (34, -1), (35, -1), (36, 67108864), (37, 2048), (38, 2048), (39, 2048), (40, -1), (41, -1), (42, 131072), (43, 131072), (44, -1), (45, 67108864), (46, 16777216), (47, -1), (48, -1), (49, 67108864), (50, -1), (51, -1), (52, -1)]

Covered at level 9 : set()

After reduction : 
 pending  : [37, 24, 8, 30, 33, 45, 38, 42, 43, 46, 49, 36, 3, 39, 31, 32]
 solution : [0, 10, 26, 19]


Solution : [0, 10, 26, 19] has cost 22.


Before backtrack at level 9
 pending : [37, 24, 8, 30, 33, 45, 38, 42, 43, 46, 49, 36, 3, 39, 31, 32]
 solution : [0, 10, 26, 19]

After backtrack at level 9
 pending : [37, 24, 8, 30, 33, 45, 38, 42, 43, 46, 49, 36, 3, 39, 31, 32, 23, 40, 5, 15, 16, 22, 21, 14, 20, 13]
 solution : [0, 10, 26, 19]


Invert decision for 19 at level 8


New level: 9
 pending : [37, 24, 8, 30, 33, 45, 38, 42, 43, 46, 49, 36, 3, 39, 31, 32, 23, 40, 5, 15, 16, 22, 21, 14, 20, 13]
 solution : [0, 10, 26]


Before reduction : 
 pending  : [37, 24, 8, 30, 33, 45, 38, 42, 43, 46, 49, 36, 3, 39, 31, 32, 23, 40, 5, 15, 16, 22, 21, 14, 20, 13]
 solution : [0, 10, 26]

Essensial at level 9 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 134217728), (4, -1), (5, -1), (6, -1), (7, -1), (8, 262144), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, 134217728), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, 524288), (31, 2097152), (32, 4096), (33, 4096), (34, -1), (35, -1), (36, 67108864), (37, 2048), (38, 2048), (39, 2048), (40, -1), (41, -1), (42, 131072), (43, 131072), (44, -1), (45, 67108864), (46, 16777216), (47, -1), (48, -1), (49, 67108864), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 134217728), (4, -1), (5, 262144), (6, -1), (7, -1), (8, 1048576), (9, -1), (10, -1), (11, -1), (12, -1), (13, 16777216), (14, 8388608), (15, 393216), (16, 131072), (17, -1), (18, -1), (19, -1), (20, 4194304), (21, 2097152), (22, 65536), (23, 1048576), (24, 134217728), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, 1048576), (31, 2097152), (32, 16384), (33, 16384), (34, -1), (35, -1), (36, 134217728), (37, 67108864), (38, 16384), (39, 134217728), (40, 1048576), (41, -1), (42, 524288), (43, 524288), (44, -1), (45, 67108864), (46, 16777216), (47, -1), (48, -1), (49, 67108864), (50, -1), (51, -1), (52, -1)]

Covered at level 9 : set()

After reduction : 
 pending  : [37, 24, 8, 30, 33, 45, 38, 42, 43, 46, 49, 36, 3, 39, 31, 32, 23, 40, 5, 15, 16, 22, 21, 14, 20, 13]
 solution : [0, 10, 26]


Solution : [0, 10, 26] has cost 15.


Decide in level 9 among pending : [37, 24, 8, 30, 33, 45, 38, 42, 43, 46, 49, 36, 3, 39, 31, 32, 23, 40, 5, 15, 16, 22, 21, 14, 20, 13]

Coverage : [(0, -1), (1, -1), (2, -1), (3, 134217728), (4, -1), (5, 262144), (6, -1), (7, -1), (8, 1048576), (9, -1), (10, -1), (11, -1), (12, -1), (13, 16777216), (14, 8388608), (15, 393216), (16, 131072), (17, -1), (18, -1), (19, -1), (20, 4194304), (21, 2097152), (22, 65536), (23, 1048576), (24, 134217728), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, 1048576), (31, 2097152), (32, 16384), (33, 16384), (34, -1), (35, -1), (36, 134217728), (37, 67108864), (38, 16384), (39, 134217728), (40, 1048576), (41, -1), (42, 524288), (43, 524288), (44, -1), (45, 67108864), (46, 16777216), (47, -1), (48, -1), (49, 67108864), (50, -1), (51, -1), (52, -1)]

Decide 24 with phase True at level 9

After decision at level 9
 pending : [37, 8, 30, 33, 45, 38, 42, 43, 46, 49, 36, 3, 39, 31, 32, 23, 40, 5, 15, 16, 22, 21, 14, 20, 13]
 solution : [0, 10, 26, 24]


New level: 10
 pending : [37, 8, 30, 33, 45, 38, 42, 43, 46, 49, 36, 3, 39, 31, 32, 23, 40, 5, 15, 16, 22, 21, 14, 20, 13]
 solution : [0, 10, 26, 24]


Before reduction : 
 pending  : [37, 8, 30, 33, 45, 38, 42, 43, 46, 49, 36, 3, 39, 31, 32, 23, 40, 5, 15, 16, 22, 21, 14, 20, 13]
 solution : [0, 10, 26, 24]

Essensial at level 10 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 134217728), (4, -1), (5, 262144), (6, -1), (7, -1), (8, 1048576), (9, -1), (10, -1), (11, -1), (12, -1), (13, 16777216), (14, 8388608), (15, 393216), (16, 131072), (17, -1), (18, -1), (19, -1), (20, 4194304), (21, 2097152), (22, 65536), (23, 1048576), (24, 134217728), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, 1048576), (31, 2097152), (32, 16384), (33, 16384), (34, -1), (35, -1), (36, 134217728), (37, 67108864), (38, 16384), (39, 134217728), (40, 1048576), (41, -1), (42, 524288), (43, 524288), (44, -1), (45, 67108864), (46, 16777216), (47, -1), (48, -1), (49, 67108864), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 0), (4, -1), (5, 131072), (6, -1), (7, -1), (8, 0), (9, -1), (10, -1), (11, -1), (12, -1), (13, 8388608), (14, 4194304), (15, 131072), (16, 65536), (17, -1), (18, -1), (19, -1), (20, 4194304), (21, 2097152), (22, 65536), (23, 524288), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, 0), (31, 0), (32, 0), (33, 0), (34, -1), (35, -1), (36, 0), (37, 262144), (38, 0), (39, 512), (40, 524288), (41, -1), (42, 0), (43, 0), (44, -1), (45, 0), (46, 0), (47, -1), (48, -1), (49, 0), (50, -1), (51, -1), (52, -1)]

Covered at level 10 : {32, 33, 3, 36, 38, 8, 42, 43, 45, 46, 49, 30, 31}

After reduction : 
 pending  : [37, 39, 23, 40, 5, 15, 16, 22, 21, 14, 20, 13]
 solution : [0, 10, 26, 24]


Before reduction : 
 pending  : [37, 39, 23, 40, 5, 15, 16, 22, 21, 14, 20, 13]
 solution : [0, 10, 26, 24]

Essensial at level 10 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 0), (4, -1), (5, 131072), (6, -1), (7, -1), (8, 0), (9, -1), (10, -1), (11, -1), (12, -1), (13, 8388608), (14, 4194304), (15, 131072), (16, 65536), (17, -1), (18, -1), (19, -1), (20, 4194304), (21, 2097152), (22, 65536), (23, 524288), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, 0), (31, 0), (32, 0), (33, 0), (34, -1), (35, -1), (36, 0), (37, 262144), (38, 0), (39, 512), (40, 524288), (41, -1), (42, 0), (43, 0), (44, -1), (45, 0), (46, 0), (47, -1), (48, -1), (49, 0), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 131072), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, 8388608), (14, 4194304), (15, 131072), (16, 65536), (17, -1), (18, -1), (19, -1), (20, 4194304), (21, 2097152), (22, 65536), (23, 524288), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, 262144), (38, -1), (39, 512), (40, 524288), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 10 : set()

After reduction : 
 pending  : [37, 39, 23, 40, 5, 15, 16, 22, 21, 14, 20, 13]
 solution : [0, 10, 26, 24]


Solution : [0, 10, 26, 24] has cost 22.


Before backtrack at level 10
 pending : [37, 39, 23, 40, 5, 15, 16, 22, 21, 14, 20, 13]
 solution : [0, 10, 26, 24]

After backtrack at level 10
 pending : [37, 39, 23, 40, 5, 15, 16, 22, 21, 14, 20, 13, 8, 30, 33, 45, 38, 42, 43, 46, 49, 36, 3, 31, 32]
 solution : [0, 10, 26, 24]


Invert decision for 24 at level 9


New level: 10
 pending : [37, 39, 23, 40, 5, 15, 16, 22, 21, 14, 20, 13, 8, 30, 33, 45, 38, 42, 43, 46, 49, 36, 3, 31, 32]
 solution : [0, 10, 26]


Before reduction : 
 pending  : [37, 39, 23, 40, 5, 15, 16, 22, 21, 14, 20, 13, 8, 30, 33, 45, 38, 42, 43, 46, 49, 36, 3, 31, 32]
 solution : [0, 10, 26]

Essensial at level 10 : {3}

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 131072), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, 8388608), (14, 4194304), (15, 131072), (16, 65536), (17, -1), (18, -1), (19, -1), (20, 4194304), (21, 2097152), (22, 65536), (23, 524288), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, 262144), (38, -1), (39, 512), (40, 524288), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 131072), (6, -1), (7, -1), (8, 0), (9, -1), (10, -1), (11, -1), (12, -1), (13, 8388608), (14, 4194304), (15, 131072), (16, 65536), (17, -1), (18, -1), (19, -1), (20, 4194304), (21, 2097152), (22, 65536), (23, 524288), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, 0), (31, 0), (32, 0), (33, 0), (34, -1), (35, -1), (36, 0), (37, 32768), (38, 0), (39, 512), (40, 524288), (41, -1), (42, 0), (43, 0), (44, -1), (45, 0), (46, 0), (47, -1), (48, -1), (49, 0), (50, -1), (51, -1), (52, -1)]

Covered at level 10 : {32, 33, 36, 38, 8, 42, 43, 45, 46, 49, 30, 31}

After reduction : 
 pending  : [37, 39, 23, 40, 5, 15, 16, 22, 21, 14, 20, 13]
 solution : [0, 10, 26, 3]


Before reduction : 
 pending  : [37, 39, 23, 40, 5, 15, 16, 22, 21, 14, 20, 13]
 solution : [0, 10, 26, 3]

Essensial at level 10 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 131072), (6, -1), (7, -1), (8, 0), (9, -1), (10, -1), (11, -1), (12, -1), (13, 8388608), (14, 4194304), (15, 131072), (16, 65536), (17, -1), (18, -1), (19, -1), (20, 4194304), (21, 2097152), (22, 65536), (23, 524288), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, 0), (31, 0), (32, 0), (33, 0), (34, -1), (35, -1), (36, 0), (37, 32768), (38, 0), (39, 512), (40, 524288), (41, -1), (42, 0), (43, 0), (44, -1), (45, 0), (46, 0), (47, -1), (48, -1), (49, 0), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 131072), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, 8388608), (14, 4194304), (15, 131072), (16, 65536), (17, -1), (18, -1), (19, -1), (20, 4194304), (21, 2097152), (22, 65536), (23, 524288), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, 32768), (38, -1), (39, 512), (40, 524288), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 10 : set()

After reduction : 
 pending  : [37, 39, 23, 40, 5, 15, 16, 22, 21, 14, 20, 13]
 solution : [0, 10, 26, 3]


Solution : [0, 10, 26, 3] has cost 19.


Before backtrack at level 10
 pending : [37, 39, 23, 40, 5, 15, 16, 22, 21, 14, 20, 13]
 solution : [0, 10, 26, 3]

After backtrack at level 10
 pending : [37, 39, 23, 40, 5, 15, 16, 22, 21, 14, 20, 13, 3, 8, 30, 33, 45, 38, 42, 43, 46, 49, 36, 31, 32]
 solution : [0, 10, 26]


Before backtrack at level 9
 pending : [37, 39, 23, 40, 5, 15, 16, 22, 21, 14, 20, 13, 3, 8, 30, 33, 45, 38, 42, 43, 46, 49, 36, 31, 32]
 solution : [0, 10, 26]

After backtrack at level 9
 pending : [37, 39, 23, 40, 5, 15, 16, 22, 21, 14, 20, 13, 3, 8, 30, 33, 45, 38, 42, 43, 46, 49, 36, 31, 32, 24]
 solution : [0, 10, 26]


Before backtrack at level 8
 pending : [37, 39, 23, 40, 5, 15, 16, 22, 21, 14, 20, 13, 3, 8, 30, 33, 45, 38, 42, 43, 46, 49, 36, 31, 32, 24]
 solution : [0, 10, 26]

After backtrack at level 8
 pending : [37, 39, 23, 40, 5, 15, 16, 22, 21, 14, 20, 13, 3, 8, 30, 33, 45, 38, 42, 43, 46, 49, 36, 31, 32, 24, 19]
 solution : [0, 10, 26]


Before backtrack at level 7
 pending : [37, 39, 23, 40, 5, 15, 16, 22, 21, 14, 20, 13, 3, 8, 30, 33, 45, 38, 42, 43, 46, 49, 36, 31, 32, 24, 19]
 solution : [0, 10, 26]

After backtrack at level 7
 pending : [37, 39, 23, 40, 5, 15, 16, 22, 21, 14, 20, 13, 3, 8, 30, 33, 45, 38, 42, 43, 46, 49, 36, 31, 32, 24, 19, 18]
 solution : [0, 10, 26]


Before backtrack at level 6
 pending : [37, 39, 23, 40, 5, 15, 16, 22, 21, 14, 20, 13, 3, 8, 30, 33, 45, 38, 42, 43, 46, 49, 36, 31, 32, 24, 19, 18]
 solution : [0, 10, 26]

After backtrack at level 6
 pending : [37, 39, 23, 40, 5, 15, 16, 22, 21, 14, 20, 13, 3, 8, 30, 33, 45, 38, 42, 43, 46, 49, 36, 31, 32, 24, 19, 18, 25]
 solution : [0, 10, 26]


Before backtrack at level 5
 pending : [37, 39, 23, 40, 5, 15, 16, 22, 21, 14, 20, 13, 3, 8, 30, 33, 45, 38, 42, 43, 46, 49, 36, 31, 32, 24, 19, 18, 25]
 solution : [0, 10, 26]

After backtrack at level 5
 pending : [37, 39, 23, 40, 5, 15, 16, 22, 21, 14, 20, 13, 3, 8, 30, 33, 45, 38, 42, 43, 46, 49, 36, 31, 32, 24, 19, 18, 25, 28]
 solution : [0, 10, 26]


Before backtrack at level 4
 pending : [37, 39, 23, 40, 5, 15, 16, 22, 21, 14, 20, 13, 3, 8, 30, 33, 45, 38, 42, 43, 46, 49, 36, 31, 32, 24, 19, 18, 25, 28]
 solution : [0, 10, 26]

After backtrack at level 4
 pending : [37, 39, 23, 40, 5, 15, 16, 22, 21, 14, 20, 13, 3, 8, 30, 33, 45, 38, 42, 43, 46, 49, 36, 31, 32, 24, 19, 18, 25, 28, 35]
 solution : [0, 10, 26]


Invert decision for 26 at level 3


New level: 4
 pending : [37, 39, 23, 40, 5, 15, 16, 22, 21, 14, 20, 13, 3, 8, 30, 33, 45, 38, 42, 43, 46, 49, 36, 31, 32, 24, 19, 18, 25, 28, 35]
 solution : [0, 10]


Before reduction : 
 pending  : [37, 39, 23, 40, 5, 15, 16, 22, 21, 14, 20, 13, 3, 8, 30, 33, 45, 38, 42, 43, 46, 49, 36, 31, 32, 24, 19, 18, 25, 28, 35]
 solution : [0, 10]

Essensial at level 4 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 131072), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, 8388608), (14, 4194304), (15, 131072), (16, 65536), (17, -1), (18, -1), (19, -1), (20, 4194304), (21, 2097152), (22, 65536), (23, 524288), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, 32768), (38, -1), (39, 512), (40, 524288), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 134217728), (4, -1), (5, 262144), (6, -1), (7, -1), (8, 1048576), (9, -1), (10, -1), (11, -1), (12, -1), (13, 16777216), (14, 8388608), (15, 393216), (16, 131072), (17, -1), (18, 536870912), (19, 268435456), (20, 4194304), (21, 2097152), (22, 65536), (23, 1048576), (24, 134217728), (25, 1073741824), (26, -1), (27, -1), (28, 1073741824), (29, -1), (30, 1048576), (31, 4194304), (32, 32768), (33, 16384), (34, -1), (35, 2147483648), (36, 134217728), (37, 67108864), (38, 16384), (39, 268435456), (40, 1048576), (41, -1), (42, 524288), (43, 524288), (44, -1), (45, 67108864), (46, 16777216), (47, -1), (48, -1), (49, 67108864), (50, -1), (51, -1), (52, -1)]

Covered at level 4 : set()

After reduction : 
 pending  : [37, 39, 23, 40, 5, 15, 16, 22, 21, 14, 20, 13, 3, 8, 30, 33, 45, 38, 42, 43, 46, 49, 36, 31, 32, 24, 19, 18, 25, 28, 35]
 solution : [0, 10]


Solution : [0, 10] has cost 11.


Decide in level 4 among pending : [37, 39, 23, 40, 5, 15, 16, 22, 21, 14, 20, 13, 3, 8, 30, 33, 45, 38, 42, 43, 46, 49, 36, 31, 32, 24, 19, 18, 25, 28, 35]

Coverage : [(0, -1), (1, -1), (2, -1), (3, 134217728), (4, -1), (5, 262144), (6, -1), (7, -1), (8, 1048576), (9, -1), (10, -1), (11, -1), (12, -1), (13, 16777216), (14, 8388608), (15, 393216), (16, 131072), (17, -1), (18, 536870912), (19, 268435456), (20, 4194304), (21, 2097152), (22, 65536), (23, 1048576), (24, 134217728), (25, 1073741824), (26, -1), (27, -1), (28, 1073741824), (29, -1), (30, 1048576), (31, 4194304), (32, 32768), (33, 16384), (34, -1), (35, 2147483648), (36, 134217728), (37, 67108864), (38, 16384), (39, 268435456), (40, 1048576), (41, -1), (42, 524288), (43, 524288), (44, -1), (45, 67108864), (46, 16777216), (47, -1), (48, -1), (49, 67108864), (50, -1), (51, -1), (52, -1)]

Decide 35 with phase True at level 4

After decision at level 4
 pending : [37, 39, 23, 40, 5, 15, 16, 22, 21, 14, 20, 13, 3, 8, 30, 33, 45, 38, 42, 43, 46, 49, 36, 31, 32, 24, 19, 18, 25, 28]
 solution : [0, 10, 35]


New level: 5
 pending : [37, 39, 23, 40, 5, 15, 16, 22, 21, 14, 20, 13, 3, 8, 30, 33, 45, 38, 42, 43, 46, 49, 36, 31, 32, 24, 19, 18, 25, 28]
 solution : [0, 10, 35]


Before reduction : 
 pending  : [37, 39, 23, 40, 5, 15, 16, 22, 21, 14, 20, 13, 3, 8, 30, 33, 45, 38, 42, 43, 46, 49, 36, 31, 32, 24, 19, 18, 25, 28]
 solution : [0, 10, 35]

Essensial at level 5 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 134217728), (4, -1), (5, 262144), (6, -1), (7, -1), (8, 1048576), (9, -1), (10, -1), (11, -1), (12, -1), (13, 16777216), (14, 8388608), (15, 393216), (16, 131072), (17, -1), (18, 536870912), (19, 268435456), (20, 4194304), (21, 2097152), (22, 65536), (23, 1048576), (24, 134217728), (25, 1073741824), (26, -1), (27, -1), (28, 1073741824), (29, -1), (30, 1048576), (31, 4194304), (32, 32768), (33, 16384), (34, -1), (35, 2147483648), (36, 134217728), (37, 67108864), (38, 16384), (39, 268435456), (40, 1048576), (41, -1), (42, 524288), (43, 524288), (44, -1), (45, 67108864), (46, 16777216), (47, -1), (48, -1), (49, 67108864), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 134217728), (4, -1), (5, 262144), (6, -1), (7, -1), (8, 262144), (9, -1), (10, -1), (11, -1), (12, -1), (13, 16777216), (14, 8388608), (15, 393216), (16, 131072), (17, -1), (18, 536870912), (19, 268435456), (20, 4194304), (21, 2097152), (22, 65536), (23, 1048576), (24, 134217728), (25, 32768), (26, -1), (27, -1), (28, 1073741824), (29, -1), (30, 262144), (31, 0), (32, 0), (33, 4096), (34, -1), (35, -1), (36, 33554432), (37, 67108864), (38, 4096), (39, 8192), (40, 1048576), (41, -1), (42, 131072), (43, 131072), (44, -1), (45, 16777216), (46, 4194304), (47, -1), (48, -1), (49, 16777216), (50, -1), (51, -1), (52, -1)]

Covered at level 5 : {32, 31}

After reduction : 
 pending  : [37, 39, 23, 40, 5, 15, 16, 22, 21, 14, 20, 13, 3, 8, 30, 33, 45, 38, 42, 43, 46, 49, 36, 24, 19, 18, 25, 28]
 solution : [0, 10, 35]


Before reduction : 
 pending  : [37, 39, 23, 40, 5, 15, 16, 22, 21, 14, 20, 13, 3, 8, 30, 33, 45, 38, 42, 43, 46, 49, 36, 24, 19, 18, 25, 28]
 solution : [0, 10, 35]

Essensial at level 5 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 134217728), (4, -1), (5, 262144), (6, -1), (7, -1), (8, 262144), (9, -1), (10, -1), (11, -1), (12, -1), (13, 16777216), (14, 8388608), (15, 393216), (16, 131072), (17, -1), (18, 536870912), (19, 268435456), (20, 4194304), (21, 2097152), (22, 65536), (23, 1048576), (24, 134217728), (25, 32768), (26, -1), (27, -1), (28, 1073741824), (29, -1), (30, 262144), (31, 0), (32, 0), (33, 4096), (34, -1), (35, -1), (36, 33554432), (37, 67108864), (38, 4096), (39, 8192), (40, 1048576), (41, -1), (42, 131072), (43, 131072), (44, -1), (45, 16777216), (46, 4194304), (47, -1), (48, -1), (49, 16777216), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 134217728), (4, -1), (5, 262144), (6, -1), (7, -1), (8, 262144), (9, -1), (10, -1), (11, -1), (12, -1), (13, 16777216), (14, 8388608), (15, 393216), (16, 131072), (17, -1), (18, 536870912), (19, 268435456), (20, 4194304), (21, 2097152), (22, 65536), (23, 1048576), (24, 134217728), (25, 32768), (26, -1), (27, -1), (28, 1073741824), (29, -1), (30, 262144), (31, -1), (32, -1), (33, 4096), (34, -1), (35, -1), (36, 33554432), (37, 67108864), (38, 4096), (39, 8192), (40, 1048576), (41, -1), (42, 131072), (43, 131072), (44, -1), (45, 16777216), (46, 4194304), (47, -1), (48, -1), (49, 16777216), (50, -1), (51, -1), (52, -1)]

Covered at level 5 : set()

After reduction : 
 pending  : [37, 39, 23, 40, 5, 15, 16, 22, 21, 14, 20, 13, 3, 8, 30, 33, 45, 38, 42, 43, 46, 49, 36, 24, 19, 18, 25, 28]
 solution : [0, 10, 35]


Solution : [0, 10, 35] has cost 24.


Before backtrack at level 5
 pending : [37, 39, 23, 40, 5, 15, 16, 22, 21, 14, 20, 13, 3, 8, 30, 33, 45, 38, 42, 43, 46, 49, 36, 24, 19, 18, 25, 28]
 solution : [0, 10, 35]

After backtrack at level 5
 pending : [37, 39, 23, 40, 5, 15, 16, 22, 21, 14, 20, 13, 3, 8, 30, 33, 45, 38, 42, 43, 46, 49, 36, 24, 19, 18, 25, 28, 31, 32]
 solution : [0, 10, 35]


Invert decision for 35 at level 4


New level: 5
 pending : [37, 39, 23, 40, 5, 15, 16, 22, 21, 14, 20, 13, 3, 8, 30, 33, 45, 38, 42, 43, 46, 49, 36, 24, 19, 18, 25, 28, 31, 32]
 solution : [0, 10]


Before reduction : 
 pending  : [37, 39, 23, 40, 5, 15, 16, 22, 21, 14, 20, 13, 3, 8, 30, 33, 45, 38, 42, 43, 46, 49, 36, 24, 19, 18, 25, 28, 31, 32]
 solution : [0, 10]

Essensial at level 5 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 134217728), (4, -1), (5, 262144), (6, -1), (7, -1), (8, 262144), (9, -1), (10, -1), (11, -1), (12, -1), (13, 16777216), (14, 8388608), (15, 393216), (16, 131072), (17, -1), (18, 536870912), (19, 268435456), (20, 4194304), (21, 2097152), (22, 65536), (23, 1048576), (24, 134217728), (25, 32768), (26, -1), (27, -1), (28, 1073741824), (29, -1), (30, 262144), (31, -1), (32, -1), (33, 4096), (34, -1), (35, -1), (36, 33554432), (37, 67108864), (38, 4096), (39, 8192), (40, 1048576), (41, -1), (42, 131072), (43, 131072), (44, -1), (45, 16777216), (46, 4194304), (47, -1), (48, -1), (49, 16777216), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 134217728), (4, -1), (5, 262144), (6, -1), (7, -1), (8, 1048576), (9, -1), (10, -1), (11, -1), (12, -1), (13, 16777216), (14, 8388608), (15, 393216), (16, 131072), (17, -1), (18, 536870912), (19, 268435456), (20, 4194304), (21, 2097152), (22, 65536), (23, 1048576), (24, 134217728), (25, 1073741824), (26, -1), (27, -1), (28, 1073741824), (29, -1), (30, 1048576), (31, 4194304), (32, 32768), (33, 16384), (34, -1), (35, -1), (36, 134217728), (37, 67108864), (38, 16384), (39, 268435456), (40, 1048576), (41, -1), (42, 524288), (43, 524288), (44, -1), (45, 67108864), (46, 16777216), (47, -1), (48, -1), (49, 67108864), (50, -1), (51, -1), (52, -1)]

Covered at level 5 : set()

After reduction : 
 pending  : [37, 39, 23, 40, 5, 15, 16, 22, 21, 14, 20, 13, 3, 8, 30, 33, 45, 38, 42, 43, 46, 49, 36, 24, 19, 18, 25, 28, 31, 32]
 solution : [0, 10]


Solution : [0, 10] has cost 11.


Decide in level 5 among pending : [37, 39, 23, 40, 5, 15, 16, 22, 21, 14, 20, 13, 3, 8, 30, 33, 45, 38, 42, 43, 46, 49, 36, 24, 19, 18, 25, 28, 31, 32]

Coverage : [(0, -1), (1, -1), (2, -1), (3, 134217728), (4, -1), (5, 262144), (6, -1), (7, -1), (8, 1048576), (9, -1), (10, -1), (11, -1), (12, -1), (13, 16777216), (14, 8388608), (15, 393216), (16, 131072), (17, -1), (18, 536870912), (19, 268435456), (20, 4194304), (21, 2097152), (22, 65536), (23, 1048576), (24, 134217728), (25, 1073741824), (26, -1), (27, -1), (28, 1073741824), (29, -1), (30, 1048576), (31, 4194304), (32, 32768), (33, 16384), (34, -1), (35, -1), (36, 134217728), (37, 67108864), (38, 16384), (39, 268435456), (40, 1048576), (41, -1), (42, 524288), (43, 524288), (44, -1), (45, 67108864), (46, 16777216), (47, -1), (48, -1), (49, 67108864), (50, -1), (51, -1), (52, -1)]

Decide 25 with phase True at level 5

After decision at level 5
 pending : [37, 39, 23, 40, 5, 15, 16, 22, 21, 14, 20, 13, 3, 8, 30, 33, 45, 38, 42, 43, 46, 49, 36, 24, 19, 18, 28, 31, 32]
 solution : [0, 10, 25]


New level: 6
 pending : [37, 39, 23, 40, 5, 15, 16, 22, 21, 14, 20, 13, 3, 8, 30, 33, 45, 38, 42, 43, 46, 49, 36, 24, 19, 18, 28, 31, 32]
 solution : [0, 10, 25]


Before reduction : 
 pending  : [37, 39, 23, 40, 5, 15, 16, 22, 21, 14, 20, 13, 3, 8, 30, 33, 45, 38, 42, 43, 46, 49, 36, 24, 19, 18, 28, 31, 32]
 solution : [0, 10, 25]

Essensial at level 6 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 134217728), (4, -1), (5, 262144), (6, -1), (7, -1), (8, 1048576), (9, -1), (10, -1), (11, -1), (12, -1), (13, 16777216), (14, 8388608), (15, 393216), (16, 131072), (17, -1), (18, 536870912), (19, 268435456), (20, 4194304), (21, 2097152), (22, 65536), (23, 1048576), (24, 134217728), (25, 1073741824), (26, -1), (27, -1), (28, 1073741824), (29, -1), (30, 1048576), (31, 4194304), (32, 32768), (33, 16384), (34, -1), (35, -1), (36, 134217728), (37, 67108864), (38, 16384), (39, 268435456), (40, 1048576), (41, -1), (42, 524288), (43, 524288), (44, -1), (45, 67108864), (46, 16777216), (47, -1), (48, -1), (49, 67108864), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 33554432), (4, -1), (5, 262144), (6, -1), (7, -1), (8, 262144), (9, -1), (10, -1), (11, -1), (12, -1), (13, 16777216), (14, 8388608), (15, 393216), (16, 131072), (17, -1), (18, 536870912), (19, 268435456), (20, 4194304), (21, 2097152), (22, 65536), (23, 1048576), (24, 33554432), (25, -1), (26, -1), (27, -1), (28, 1073741824), (29, -1), (30, 262144), (31, 0), (32, 0), (33, 4096), (34, -1), (35, -1), (36, 67108864), (37, 33554432), (38, 4096), (39, 512), (40, 1048576), (41, -1), (42, 131072), (43, 131072), (44, -1), (45, 33554432), (46, 4194304), (47, -1), (48, -1), (49, 67108864), (50, -1), (51, -1), (52, -1)]

Covered at level 6 : {32, 31}

After reduction : 
 pending  : [37, 39, 23, 40, 5, 15, 16, 22, 21, 14, 20, 13, 3, 8, 30, 33, 45, 38, 42, 43, 46, 49, 36, 24, 19, 18, 28]
 solution : [0, 10, 25]


Before reduction : 
 pending  : [37, 39, 23, 40, 5, 15, 16, 22, 21, 14, 20, 13, 3, 8, 30, 33, 45, 38, 42, 43, 46, 49, 36, 24, 19, 18, 28]
 solution : [0, 10, 25]

Essensial at level 6 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 33554432), (4, -1), (5, 262144), (6, -1), (7, -1), (8, 262144), (9, -1), (10, -1), (11, -1), (12, -1), (13, 16777216), (14, 8388608), (15, 393216), (16, 131072), (17, -1), (18, 536870912), (19, 268435456), (20, 4194304), (21, 2097152), (22, 65536), (23, 1048576), (24, 33554432), (25, -1), (26, -1), (27, -1), (28, 1073741824), (29, -1), (30, 262144), (31, 0), (32, 0), (33, 4096), (34, -1), (35, -1), (36, 67108864), (37, 33554432), (38, 4096), (39, 512), (40, 1048576), (41, -1), (42, 131072), (43, 131072), (44, -1), (45, 33554432), (46, 4194304), (47, -1), (48, -1), (49, 67108864), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 33554432), (4, -1), (5, 262144), (6, -1), (7, -1), (8, 262144), (9, -1), (10, -1), (11, -1), (12, -1), (13, 16777216), (14, 8388608), (15, 393216), (16, 131072), (17, -1), (18, 536870912), (19, 268435456), (20, 4194304), (21, 2097152), (22, 65536), (23, 1048576), (24, 33554432), (25, -1), (26, -1), (27, -1), (28, 1073741824), (29, -1), (30, 262144), (31, -1), (32, -1), (33, 4096), (34, -1), (35, -1), (36, 67108864), (37, 33554432), (38, 4096), (39, 512), (40, 1048576), (41, -1), (42, 131072), (43, 131072), (44, -1), (45, 33554432), (46, 4194304), (47, -1), (48, -1), (49, 67108864), (50, -1), (51, -1), (52, -1)]

Covered at level 6 : set()

After reduction : 
 pending  : [37, 39, 23, 40, 5, 15, 16, 22, 21, 14, 20, 13, 3, 8, 30, 33, 45, 38, 42, 43, 46, 49, 36, 24, 19, 18, 28]
 solution : [0, 10, 25]


Solution : [0, 10, 25] has cost 18.


Before backtrack at level 6
 pending : [37, 39, 23, 40, 5, 15, 16, 22, 21, 14, 20, 13, 3, 8, 30, 33, 45, 38, 42, 43, 46, 49, 36, 24, 19, 18, 28]
 solution : [0, 10, 25]

After backtrack at level 6
 pending : [37, 39, 23, 40, 5, 15, 16, 22, 21, 14, 20, 13, 3, 8, 30, 33, 45, 38, 42, 43, 46, 49, 36, 24, 19, 18, 28, 31, 32]
 solution : [0, 10, 25]


Invert decision for 25 at level 5


New level: 6
 pending : [37, 39, 23, 40, 5, 15, 16, 22, 21, 14, 20, 13, 3, 8, 30, 33, 45, 38, 42, 43, 46, 49, 36, 24, 19, 18, 28, 31, 32]
 solution : [0, 10]


Before reduction : 
 pending  : [37, 39, 23, 40, 5, 15, 16, 22, 21, 14, 20, 13, 3, 8, 30, 33, 45, 38, 42, 43, 46, 49, 36, 24, 19, 18, 28, 31, 32]
 solution : [0, 10]

Essensial at level 6 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 33554432), (4, -1), (5, 262144), (6, -1), (7, -1), (8, 262144), (9, -1), (10, -1), (11, -1), (12, -1), (13, 16777216), (14, 8388608), (15, 393216), (16, 131072), (17, -1), (18, 536870912), (19, 268435456), (20, 4194304), (21, 2097152), (22, 65536), (23, 1048576), (24, 33554432), (25, -1), (26, -1), (27, -1), (28, 1073741824), (29, -1), (30, 262144), (31, -1), (32, -1), (33, 4096), (34, -1), (35, -1), (36, 67108864), (37, 33554432), (38, 4096), (39, 512), (40, 1048576), (41, -1), (42, 131072), (43, 131072), (44, -1), (45, 33554432), (46, 4194304), (47, -1), (48, -1), (49, 67108864), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 134217728), (4, -1), (5, 262144), (6, -1), (7, -1), (8, 1048576), (9, -1), (10, -1), (11, -1), (12, -1), (13, 16777216), (14, 8388608), (15, 393216), (16, 131072), (17, -1), (18, 536870912), (19, 268435456), (20, 4194304), (21, 2097152), (22, 65536), (23, 1048576), (24, 134217728), (25, -1), (26, -1), (27, -1), (28, 1073741824), (29, -1), (30, 1048576), (31, 4194304), (32, 32768), (33, 16384), (34, -1), (35, -1), (36, 134217728), (37, 67108864), (38, 16384), (39, 268435456), (40, 1048576), (41, -1), (42, 524288), (43, 524288), (44, -1), (45, 67108864), (46, 16777216), (47, -1), (48, -1), (49, 67108864), (50, -1), (51, -1), (52, -1)]

Covered at level 6 : set()

After reduction : 
 pending  : [37, 39, 23, 40, 5, 15, 16, 22, 21, 14, 20, 13, 3, 8, 30, 33, 45, 38, 42, 43, 46, 49, 36, 24, 19, 18, 28, 31, 32]
 solution : [0, 10]


Solution : [0, 10] has cost 11.


Decide in level 6 among pending : [37, 39, 23, 40, 5, 15, 16, 22, 21, 14, 20, 13, 3, 8, 30, 33, 45, 38, 42, 43, 46, 49, 36, 24, 19, 18, 28, 31, 32]

Coverage : [(0, -1), (1, -1), (2, -1), (3, 134217728), (4, -1), (5, 262144), (6, -1), (7, -1), (8, 1048576), (9, -1), (10, -1), (11, -1), (12, -1), (13, 16777216), (14, 8388608), (15, 393216), (16, 131072), (17, -1), (18, 536870912), (19, 268435456), (20, 4194304), (21, 2097152), (22, 65536), (23, 1048576), (24, 134217728), (25, -1), (26, -1), (27, -1), (28, 1073741824), (29, -1), (30, 1048576), (31, 4194304), (32, 32768), (33, 16384), (34, -1), (35, -1), (36, 134217728), (37, 67108864), (38, 16384), (39, 268435456), (40, 1048576), (41, -1), (42, 524288), (43, 524288), (44, -1), (45, 67108864), (46, 16777216), (47, -1), (48, -1), (49, 67108864), (50, -1), (51, -1), (52, -1)]

Decide 28 with phase True at level 6

After decision at level 6
 pending : [37, 39, 23, 40, 5, 15, 16, 22, 21, 14, 20, 13, 3, 8, 30, 33, 45, 38, 42, 43, 46, 49, 36, 24, 19, 18, 31, 32]
 solution : [0, 10, 28]


New level: 7
 pending : [37, 39, 23, 40, 5, 15, 16, 22, 21, 14, 20, 13, 3, 8, 30, 33, 45, 38, 42, 43, 46, 49, 36, 24, 19, 18, 31, 32]
 solution : [0, 10, 28]


Before reduction : 
 pending  : [37, 39, 23, 40, 5, 15, 16, 22, 21, 14, 20, 13, 3, 8, 30, 33, 45, 38, 42, 43, 46, 49, 36, 24, 19, 18, 31, 32]
 solution : [0, 10, 28]

Essensial at level 7 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 134217728), (4, -1), (5, 262144), (6, -1), (7, -1), (8, 1048576), (9, -1), (10, -1), (11, -1), (12, -1), (13, 16777216), (14, 8388608), (15, 393216), (16, 131072), (17, -1), (18, 536870912), (19, 268435456), (20, 4194304), (21, 2097152), (22, 65536), (23, 1048576), (24, 134217728), (25, -1), (26, -1), (27, -1), (28, 1073741824), (29, -1), (30, 1048576), (31, 4194304), (32, 32768), (33, 16384), (34, -1), (35, -1), (36, 134217728), (37, 67108864), (38, 16384), (39, 268435456), (40, 1048576), (41, -1), (42, 524288), (43, 524288), (44, -1), (45, 67108864), (46, 16777216), (47, -1), (48, -1), (49, 67108864), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 134217728), (4, -1), (5, 0), (6, -1), (7, -1), (8, 262144), (9, -1), (10, -1), (11, -1), (12, -1), (13, 0), (14, 0), (15, 0), (16, 0), (17, -1), (18, 0), (19, 0), (20, 0), (21, 0), (22, 0), (23, 0), (24, 134217728), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, 524288), (31, 4194304), (32, 8192), (33, 4096), (34, -1), (35, -1), (36, 67108864), (37, 2048), (38, 2048), (39, 4096), (40, 0), (41, -1), (42, 131072), (43, 131072), (44, -1), (45, 33554432), (46, 4194304), (47, -1), (48, -1), (49, 16777216), (50, -1), (51, -1), (52, -1)]

Covered at level 7 : {5, 40, 13, 14, 15, 16, 18, 19, 20, 21, 22, 23}

After reduction : 
 pending  : [37, 39, 3, 8, 30, 33, 45, 38, 42, 43, 46, 49, 36, 24, 31, 32]
 solution : [0, 10, 28]


Before reduction : 
 pending  : [37, 39, 3, 8, 30, 33, 45, 38, 42, 43, 46, 49, 36, 24, 31, 32]
 solution : [0, 10, 28]

Essensial at level 7 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 134217728), (4, -1), (5, 0), (6, -1), (7, -1), (8, 262144), (9, -1), (10, -1), (11, -1), (12, -1), (13, 0), (14, 0), (15, 0), (16, 0), (17, -1), (18, 0), (19, 0), (20, 0), (21, 0), (22, 0), (23, 0), (24, 134217728), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, 524288), (31, 4194304), (32, 8192), (33, 4096), (34, -1), (35, -1), (36, 67108864), (37, 2048), (38, 2048), (39, 4096), (40, 0), (41, -1), (42, 131072), (43, 131072), (44, -1), (45, 33554432), (46, 4194304), (47, -1), (48, -1), (49, 16777216), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 134217728), (4, -1), (5, -1), (6, -1), (7, -1), (8, 262144), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, 134217728), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, 524288), (31, 4194304), (32, 8192), (33, 4096), (34, -1), (35, -1), (36, 67108864), (37, 2048), (38, 2048), (39, 4096), (40, -1), (41, -1), (42, 131072), (43, 131072), (44, -1), (45, 33554432), (46, 4194304), (47, -1), (48, -1), (49, 16777216), (50, -1), (51, -1), (52, -1)]

Covered at level 7 : set()

After reduction : 
 pending  : [37, 39, 3, 8, 30, 33, 45, 38, 42, 43, 46, 49, 36, 24, 31, 32]
 solution : [0, 10, 28]


Solution : [0, 10, 28] has cost 15.


Decide in level 7 among pending : [37, 39, 3, 8, 30, 33, 45, 38, 42, 43, 46, 49, 36, 24, 31, 32]

Coverage : [(0, -1), (1, -1), (2, -1), (3, 134217728), (4, -1), (5, -1), (6, -1), (7, -1), (8, 262144), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, 134217728), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, 524288), (31, 4194304), (32, 8192), (33, 4096), (34, -1), (35, -1), (36, 67108864), (37, 2048), (38, 2048), (39, 4096), (40, -1), (41, -1), (42, 131072), (43, 131072), (44, -1), (45, 33554432), (46, 4194304), (47, -1), (48, -1), (49, 16777216), (50, -1), (51, -1), (52, -1)]

Decide 3 with phase True at level 7

After decision at level 7
 pending : [37, 39, 8, 30, 33, 45, 38, 42, 43, 46, 49, 36, 24, 31, 32]
 solution : [0, 10, 28, 3]


New level: 8
 pending : [37, 39, 8, 30, 33, 45, 38, 42, 43, 46, 49, 36, 24, 31, 32]
 solution : [0, 10, 28, 3]


Before reduction : 
 pending  : [37, 39, 8, 30, 33, 45, 38, 42, 43, 46, 49, 36, 24, 31, 32]
 solution : [0, 10, 28, 3]

Essensial at level 8 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 134217728), (4, -1), (5, -1), (6, -1), (7, -1), (8, 262144), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, 134217728), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, 524288), (31, 4194304), (32, 8192), (33, 4096), (34, -1), (35, -1), (36, 67108864), (37, 2048), (38, 2048), (39, 4096), (40, -1), (41, -1), (42, 131072), (43, 131072), (44, -1), (45, 33554432), (46, 4194304), (47, -1), (48, -1), (49, 16777216), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, 0), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, 0), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, 0), (31, 0), (32, 0), (33, 0), (34, -1), (35, -1), (36, 0), (37, 0), (38, 0), (39, 0), (40, -1), (41, -1), (42, 0), (43, 0), (44, -1), (45, 0), (46, 0), (47, -1), (48, -1), (49, 0), (50, -1), (51, -1), (52, -1)]

Covered at level 8 : {32, 33, 36, 37, 38, 39, 8, 42, 43, 45, 46, 49, 24, 30, 31}

After reduction : 
 pending  : []
 solution : [0, 10, 28, 3]


Before reduction : 
 pending  : []
 solution : [0, 10, 28, 3]

Essensial at level 8 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, 0), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, 0), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, 0), (31, 0), (32, 0), (33, 0), (34, -1), (35, -1), (36, 0), (37, 0), (38, 0), (39, 0), (40, -1), (41, -1), (42, 0), (43, 0), (44, -1), (45, 0), (46, 0), (47, -1), (48, -1), (49, 0), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 8 : set()

After reduction : 
 pending  : []
 solution : [0, 10, 28, 3]


Solution : [0, 10, 28, 3] has cost 19.


Before backtrack at level 8
 pending : []
 solution : [0, 10, 28, 3]

After backtrack at level 8
 pending : [37, 39, 8, 30, 33, 45, 38, 42, 43, 46, 49, 36, 24, 31, 32]
 solution : [0, 10, 28, 3]


Invert decision for 3 at level 7


New level: 8
 pending : [37, 39, 8, 30, 33, 45, 38, 42, 43, 46, 49, 36, 24, 31, 32]
 solution : [0, 10, 28]


Before reduction : 
 pending  : [37, 39, 8, 30, 33, 45, 38, 42, 43, 46, 49, 36, 24, 31, 32]
 solution : [0, 10, 28]

Essensial at level 8 : {24}

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, 0), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, 0), (31, 0), (32, 0), (33, 0), (34, -1), (35, -1), (36, 0), (37, 0), (38, 0), (39, 0), (40, -1), (41, -1), (42, 0), (43, 0), (44, -1), (45, 0), (46, 0), (47, -1), (48, -1), (49, 0), (50, -1), (51, -1), (52, -1)]

Covered at level 8 : {32, 33, 36, 37, 38, 39, 8, 42, 43, 45, 46, 49, 30, 31}

After reduction : 
 pending  : []
 solution : [0, 10, 28, 24]


Before reduction : 
 pending  : []
 solution : [0, 10, 28, 24]

Essensial at level 8 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, 0), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, 0), (31, 0), (32, 0), (33, 0), (34, -1), (35, -1), (36, 0), (37, 0), (38, 0), (39, 0), (40, -1), (41, -1), (42, 0), (43, 0), (44, -1), (45, 0), (46, 0), (47, -1), (48, -1), (49, 0), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 8 : set()

After reduction : 
 pending  : []
 solution : [0, 10, 28, 24]


Solution : [0, 10, 28, 24] has cost 22.


Before backtrack at level 8
 pending : []
 solution : [0, 10, 28, 24]

After backtrack at level 8
 pending : [24, 37, 39, 8, 30, 33, 45, 38, 42, 43, 46, 49, 36, 31, 32]
 solution : [0, 10, 28]


Before backtrack at level 7
 pending : [24, 37, 39, 8, 30, 33, 45, 38, 42, 43, 46, 49, 36, 31, 32]
 solution : [0, 10, 28]

After backtrack at level 7
 pending : [24, 37, 39, 8, 30, 33, 45, 38, 42, 43, 46, 49, 36, 31, 32, 23, 40, 5, 15, 16, 22, 21, 14, 20, 13, 19, 18, 3]
 solution : [0, 10, 28]


Invert decision for 28 at level 6


New level: 7
 pending : [24, 37, 39, 8, 30, 33, 45, 38, 42, 43, 46, 49, 36, 31, 32, 23, 40, 5, 15, 16, 22, 21, 14, 20, 13, 19, 18, 3]
 solution : [0, 10]


Before reduction : 
 pending  : [24, 37, 39, 8, 30, 33, 45, 38, 42, 43, 46, 49, 36, 31, 32, 23, 40, 5, 15, 16, 22, 21, 14, 20, 13, 19, 18, 3]
 solution : [0, 10]

Essensial at level 7 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 134217728), (4, -1), (5, 262144), (6, -1), (7, -1), (8, 1048576), (9, -1), (10, -1), (11, -1), (12, -1), (13, 16777216), (14, 8388608), (15, 393216), (16, 131072), (17, -1), (18, 536870912), (19, 268435456), (20, 4194304), (21, 2097152), (22, 65536), (23, 1048576), (24, 134217728), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, 1048576), (31, 4194304), (32, 32768), (33, 16384), (34, -1), (35, -1), (36, 134217728), (37, 67108864), (38, 16384), (39, 268435456), (40, 1048576), (41, -1), (42, 524288), (43, 524288), (44, -1), (45, 67108864), (46, 16777216), (47, -1), (48, -1), (49, 67108864), (50, -1), (51, -1), (52, -1)]

Covered at level 7 : set()

After reduction : 
 pending  : [24, 37, 39, 8, 30, 33, 45, 38, 42, 43, 46, 49, 36, 31, 32, 23, 40, 5, 15, 16, 22, 21, 14, 20, 13, 19, 18, 3]
 solution : [0, 10]


Solution : [0, 10] has cost 11.


Decide in level 7 among pending : [24, 37, 39, 8, 30, 33, 45, 38, 42, 43, 46, 49, 36, 31, 32, 23, 40, 5, 15, 16, 22, 21, 14, 20, 13, 19, 18, 3]

Coverage : [(0, -1), (1, -1), (2, -1), (3, 134217728), (4, -1), (5, 262144), (6, -1), (7, -1), (8, 1048576), (9, -1), (10, -1), (11, -1), (12, -1), (13, 16777216), (14, 8388608), (15, 393216), (16, 131072), (17, -1), (18, 536870912), (19, 268435456), (20, 4194304), (21, 2097152), (22, 65536), (23, 1048576), (24, 134217728), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, 1048576), (31, 4194304), (32, 32768), (33, 16384), (34, -1), (35, -1), (36, 134217728), (37, 67108864), (38, 16384), (39, 268435456), (40, 1048576), (41, -1), (42, 524288), (43, 524288), (44, -1), (45, 67108864), (46, 16777216), (47, -1), (48, -1), (49, 67108864), (50, -1), (51, -1), (52, -1)]

Decide 18 with phase True at level 7

After decision at level 7
 pending : [24, 37, 39, 8, 30, 33, 45, 38, 42, 43, 46, 49, 36, 31, 32, 23, 40, 5, 15, 16, 22, 21, 14, 20, 13, 19, 3]
 solution : [0, 10, 18]


New level: 8
 pending : [24, 37, 39, 8, 30, 33, 45, 38, 42, 43, 46, 49, 36, 31, 32, 23, 40, 5, 15, 16, 22, 21, 14, 20, 13, 19, 3]
 solution : [0, 10, 18]


Before reduction : 
 pending  : [24, 37, 39, 8, 30, 33, 45, 38, 42, 43, 46, 49, 36, 31, 32, 23, 40, 5, 15, 16, 22, 21, 14, 20, 13, 19, 3]
 solution : [0, 10, 18]

Essensial at level 8 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 134217728), (4, -1), (5, 262144), (6, -1), (7, -1), (8, 1048576), (9, -1), (10, -1), (11, -1), (12, -1), (13, 16777216), (14, 8388608), (15, 393216), (16, 131072), (17, -1), (18, 536870912), (19, 268435456), (20, 4194304), (21, 2097152), (22, 65536), (23, 1048576), (24, 134217728), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, 1048576), (31, 4194304), (32, 32768), (33, 16384), (34, -1), (35, -1), (36, 134217728), (37, 67108864), (38, 16384), (39, 268435456), (40, 1048576), (41, -1), (42, 524288), (43, 524288), (44, -1), (45, 67108864), (46, 16777216), (47, -1), (48, -1), (49, 67108864), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 134217728), (4, -1), (5, 0), (6, -1), (7, -1), (8, 262144), (9, -1), (10, -1), (11, -1), (12, -1), (13, 0), (14, 0), (15, 0), (16, 0), (17, -1), (18, -1), (19, 0), (20, 0), (21, 0), (22, 0), (23, 0), (24, 134217728), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, 524288), (31, 4194304), (32, 8192), (33, 4096), (34, -1), (35, -1), (36, 67108864), (37, 2048), (38, 2048), (39, 4096), (40, 0), (41, -1), (42, 131072), (43, 131072), (44, -1), (45, 33554432), (46, 4194304), (47, -1), (48, -1), (49, 67108864), (50, -1), (51, -1), (52, -1)]

Covered at level 8 : {5, 40, 13, 14, 15, 16, 19, 20, 21, 22, 23}

After reduction : 
 pending  : [24, 37, 39, 8, 30, 33, 45, 38, 42, 43, 46, 49, 36, 31, 32, 3]
 solution : [0, 10, 18]


Before reduction : 
 pending  : [24, 37, 39, 8, 30, 33, 45, 38, 42, 43, 46, 49, 36, 31, 32, 3]
 solution : [0, 10, 18]

Essensial at level 8 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 134217728), (4, -1), (5, 0), (6, -1), (7, -1), (8, 262144), (9, -1), (10, -1), (11, -1), (12, -1), (13, 0), (14, 0), (15, 0), (16, 0), (17, -1), (18, -1), (19, 0), (20, 0), (21, 0), (22, 0), (23, 0), (24, 134217728), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, 524288), (31, 4194304), (32, 8192), (33, 4096), (34, -1), (35, -1), (36, 67108864), (37, 2048), (38, 2048), (39, 4096), (40, 0), (41, -1), (42, 131072), (43, 131072), (44, -1), (45, 33554432), (46, 4194304), (47, -1), (48, -1), (49, 67108864), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 134217728), (4, -1), (5, -1), (6, -1), (7, -1), (8, 262144), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, 134217728), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, 524288), (31, 4194304), (32, 8192), (33, 4096), (34, -1), (35, -1), (36, 67108864), (37, 2048), (38, 2048), (39, 4096), (40, -1), (41, -1), (42, 131072), (43, 131072), (44, -1), (45, 33554432), (46, 4194304), (47, -1), (48, -1), (49, 67108864), (50, -1), (51, -1), (52, -1)]

Covered at level 8 : set()

After reduction : 
 pending  : [24, 37, 39, 8, 30, 33, 45, 38, 42, 43, 46, 49, 36, 31, 32, 3]
 solution : [0, 10, 18]


Solution : [0, 10, 18] has cost 18.


Before backtrack at level 8
 pending : [24, 37, 39, 8, 30, 33, 45, 38, 42, 43, 46, 49, 36, 31, 32, 3]
 solution : [0, 10, 18]

After backtrack at level 8
 pending : [24, 37, 39, 8, 30, 33, 45, 38, 42, 43, 46, 49, 36, 31, 32, 3, 23, 40, 5, 15, 16, 22, 21, 14, 20, 13, 19]
 solution : [0, 10, 18]


Invert decision for 18 at level 7


New level: 8
 pending : [24, 37, 39, 8, 30, 33, 45, 38, 42, 43, 46, 49, 36, 31, 32, 3, 23, 40, 5, 15, 16, 22, 21, 14, 20, 13, 19]
 solution : [0, 10]


Before reduction : 
 pending  : [24, 37, 39, 8, 30, 33, 45, 38, 42, 43, 46, 49, 36, 31, 32, 3, 23, 40, 5, 15, 16, 22, 21, 14, 20, 13, 19]
 solution : [0, 10]

Essensial at level 8 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 134217728), (4, -1), (5, -1), (6, -1), (7, -1), (8, 262144), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, 134217728), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, 524288), (31, 4194304), (32, 8192), (33, 4096), (34, -1), (35, -1), (36, 67108864), (37, 2048), (38, 2048), (39, 4096), (40, -1), (41, -1), (42, 131072), (43, 131072), (44, -1), (45, 33554432), (46, 4194304), (47, -1), (48, -1), (49, 67108864), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 134217728), (4, -1), (5, 262144), (6, -1), (7, -1), (8, 1048576), (9, -1), (10, -1), (11, -1), (12, -1), (13, 16777216), (14, 8388608), (15, 393216), (16, 131072), (17, -1), (18, -1), (19, 268435456), (20, 4194304), (21, 2097152), (22, 65536), (23, 1048576), (24, 134217728), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, 1048576), (31, 4194304), (32, 32768), (33, 16384), (34, -1), (35, -1), (36, 134217728), (37, 67108864), (38, 16384), (39, 268435456), (40, 1048576), (41, -1), (42, 524288), (43, 524288), (44, -1), (45, 67108864), (46, 16777216), (47, -1), (48, -1), (49, 67108864), (50, -1), (51, -1), (52, -1)]

Covered at level 8 : set()

After reduction : 
 pending  : [24, 37, 39, 8, 30, 33, 45, 38, 42, 43, 46, 49, 36, 31, 32, 3, 23, 40, 5, 15, 16, 22, 21, 14, 20, 13, 19]
 solution : [0, 10]


Solution : [0, 10] has cost 11.


Decide in level 8 among pending : [24, 37, 39, 8, 30, 33, 45, 38, 42, 43, 46, 49, 36, 31, 32, 3, 23, 40, 5, 15, 16, 22, 21, 14, 20, 13, 19]

Coverage : [(0, -1), (1, -1), (2, -1), (3, 134217728), (4, -1), (5, 262144), (6, -1), (7, -1), (8, 1048576), (9, -1), (10, -1), (11, -1), (12, -1), (13, 16777216), (14, 8388608), (15, 393216), (16, 131072), (17, -1), (18, -1), (19, 268435456), (20, 4194304), (21, 2097152), (22, 65536), (23, 1048576), (24, 134217728), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, 1048576), (31, 4194304), (32, 32768), (33, 16384), (34, -1), (35, -1), (36, 134217728), (37, 67108864), (38, 16384), (39, 268435456), (40, 1048576), (41, -1), (42, 524288), (43, 524288), (44, -1), (45, 67108864), (46, 16777216), (47, -1), (48, -1), (49, 67108864), (50, -1), (51, -1), (52, -1)]

Decide 39 with phase True at level 8

After decision at level 8
 pending : [24, 37, 8, 30, 33, 45, 38, 42, 43, 46, 49, 36, 31, 32, 3, 23, 40, 5, 15, 16, 22, 21, 14, 20, 13, 19]
 solution : [0, 10, 39]


New level: 9
 pending : [24, 37, 8, 30, 33, 45, 38, 42, 43, 46, 49, 36, 31, 32, 3, 23, 40, 5, 15, 16, 22, 21, 14, 20, 13, 19]
 solution : [0, 10, 39]


Before reduction : 
 pending  : [24, 37, 8, 30, 33, 45, 38, 42, 43, 46, 49, 36, 31, 32, 3, 23, 40, 5, 15, 16, 22, 21, 14, 20, 13, 19]
 solution : [0, 10, 39]

Essensial at level 9 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 134217728), (4, -1), (5, 262144), (6, -1), (7, -1), (8, 1048576), (9, -1), (10, -1), (11, -1), (12, -1), (13, 16777216), (14, 8388608), (15, 393216), (16, 131072), (17, -1), (18, -1), (19, 268435456), (20, 4194304), (21, 2097152), (22, 65536), (23, 1048576), (24, 134217728), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, 1048576), (31, 4194304), (32, 32768), (33, 16384), (34, -1), (35, -1), (36, 134217728), (37, 67108864), (38, 16384), (39, 268435456), (40, 1048576), (41, -1), (42, 524288), (43, 524288), (44, -1), (45, 67108864), (46, 16777216), (47, -1), (48, -1), (49, 67108864), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 134217728), (4, -1), (5, 262144), (6, -1), (7, -1), (8, 1048576), (9, -1), (10, -1), (11, -1), (12, -1), (13, 16777216), (14, 8388608), (15, 393216), (16, 131072), (17, -1), (18, -1), (19, 268435456), (20, 4194304), (21, 2097152), (22, 65536), (23, 1048576), (24, 134217728), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, 1048576), (31, 2097152), (32, 16384), (33, 16384), (34, -1), (35, -1), (36, 134217728), (37, 33554432), (38, 16384), (39, -1), (40, 1048576), (41, -1), (42, 524288), (43, 524288), (44, -1), (45, 67108864), (46, 16777216), (47, -1), (48, -1), (49, 67108864), (50, -1), (51, -1), (52, -1)]

Covered at level 9 : set()

After reduction : 
 pending  : [24, 37, 8, 30, 33, 45, 38, 42, 43, 46, 49, 36, 31, 32, 3, 23, 40, 5, 15, 16, 22, 21, 14, 20, 13, 19]
 solution : [0, 10, 39]


Solution : [0, 10, 39] has cost 25.


Before backtrack at level 9
 pending : [24, 37, 8, 30, 33, 45, 38, 42, 43, 46, 49, 36, 31, 32, 3, 23, 40, 5, 15, 16, 22, 21, 14, 20, 13, 19]
 solution : [0, 10, 39]

After backtrack at level 9
 pending : [24, 37, 8, 30, 33, 45, 38, 42, 43, 46, 49, 36, 31, 32, 3, 23, 40, 5, 15, 16, 22, 21, 14, 20, 13, 19]
 solution : [0, 10, 39]


Invert decision for 39 at level 8


New level: 9
 pending : [24, 37, 8, 30, 33, 45, 38, 42, 43, 46, 49, 36, 31, 32, 3, 23, 40, 5, 15, 16, 22, 21, 14, 20, 13, 19]
 solution : [0, 10]


Before reduction : 
 pending  : [24, 37, 8, 30, 33, 45, 38, 42, 43, 46, 49, 36, 31, 32, 3, 23, 40, 5, 15, 16, 22, 21, 14, 20, 13, 19]
 solution : [0, 10]

Essensial at level 9 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 134217728), (4, -1), (5, 262144), (6, -1), (7, -1), (8, 1048576), (9, -1), (10, -1), (11, -1), (12, -1), (13, 16777216), (14, 8388608), (15, 393216), (16, 131072), (17, -1), (18, -1), (19, 268435456), (20, 4194304), (21, 2097152), (22, 65536), (23, 1048576), (24, 134217728), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, 1048576), (31, 2097152), (32, 16384), (33, 16384), (34, -1), (35, -1), (36, 134217728), (37, 33554432), (38, 16384), (39, -1), (40, 1048576), (41, -1), (42, 524288), (43, 524288), (44, -1), (45, 67108864), (46, 16777216), (47, -1), (48, -1), (49, 67108864), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 134217728), (4, -1), (5, 262144), (6, -1), (7, -1), (8, 1048576), (9, -1), (10, -1), (11, -1), (12, -1), (13, 16777216), (14, 8388608), (15, 393216), (16, 131072), (17, -1), (18, -1), (19, 268435456), (20, 4194304), (21, 2097152), (22, 65536), (23, 1048576), (24, 134217728), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, 1048576), (31, 4194304), (32, 32768), (33, 16384), (34, -1), (35, -1), (36, 134217728), (37, 67108864), (38, 16384), (39, -1), (40, 1048576), (41, -1), (42, 524288), (43, 524288), (44, -1), (45, 67108864), (46, 16777216), (47, -1), (48, -1), (49, 67108864), (50, -1), (51, -1), (52, -1)]

Covered at level 9 : set()

After reduction : 
 pending  : [24, 37, 8, 30, 33, 45, 38, 42, 43, 46, 49, 36, 31, 32, 3, 23, 40, 5, 15, 16, 22, 21, 14, 20, 13, 19]
 solution : [0, 10]


Solution : [0, 10] has cost 11.


Decide in level 9 among pending : [24, 37, 8, 30, 33, 45, 38, 42, 43, 46, 49, 36, 31, 32, 3, 23, 40, 5, 15, 16, 22, 21, 14, 20, 13, 19]

Coverage : [(0, -1), (1, -1), (2, -1), (3, 134217728), (4, -1), (5, 262144), (6, -1), (7, -1), (8, 1048576), (9, -1), (10, -1), (11, -1), (12, -1), (13, 16777216), (14, 8388608), (15, 393216), (16, 131072), (17, -1), (18, -1), (19, 268435456), (20, 4194304), (21, 2097152), (22, 65536), (23, 1048576), (24, 134217728), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, 1048576), (31, 4194304), (32, 32768), (33, 16384), (34, -1), (35, -1), (36, 134217728), (37, 67108864), (38, 16384), (39, -1), (40, 1048576), (41, -1), (42, 524288), (43, 524288), (44, -1), (45, 67108864), (46, 16777216), (47, -1), (48, -1), (49, 67108864), (50, -1), (51, -1), (52, -1)]

Decide 19 with phase True at level 9

After decision at level 9
 pending : [24, 37, 8, 30, 33, 45, 38, 42, 43, 46, 49, 36, 31, 32, 3, 23, 40, 5, 15, 16, 22, 21, 14, 20, 13]
 solution : [0, 10, 19]


New level: 10
 pending : [24, 37, 8, 30, 33, 45, 38, 42, 43, 46, 49, 36, 31, 32, 3, 23, 40, 5, 15, 16, 22, 21, 14, 20, 13]
 solution : [0, 10, 19]


Before reduction : 
 pending  : [24, 37, 8, 30, 33, 45, 38, 42, 43, 46, 49, 36, 31, 32, 3, 23, 40, 5, 15, 16, 22, 21, 14, 20, 13]
 solution : [0, 10, 19]

Essensial at level 10 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 134217728), (4, -1), (5, 262144), (6, -1), (7, -1), (8, 1048576), (9, -1), (10, -1), (11, -1), (12, -1), (13, 16777216), (14, 8388608), (15, 393216), (16, 131072), (17, -1), (18, -1), (19, 268435456), (20, 4194304), (21, 2097152), (22, 65536), (23, 1048576), (24, 134217728), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, 1048576), (31, 4194304), (32, 32768), (33, 16384), (34, -1), (35, -1), (36, 134217728), (37, 67108864), (38, 16384), (39, -1), (40, 1048576), (41, -1), (42, 524288), (43, 524288), (44, -1), (45, 67108864), (46, 16777216), (47, -1), (48, -1), (49, 67108864), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 134217728), (4, -1), (5, 0), (6, -1), (7, -1), (8, 262144), (9, -1), (10, -1), (11, -1), (12, -1), (13, 0), (14, 0), (15, 0), (16, 0), (17, -1), (18, -1), (19, -1), (20, 0), (21, 0), (22, 0), (23, 0), (24, 134217728), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, 524288), (31, 4194304), (32, 8192), (33, 4096), (34, -1), (35, -1), (36, 67108864), (37, 2048), (38, 2048), (39, -1), (40, 0), (41, -1), (42, 131072), (43, 131072), (44, -1), (45, 67108864), (46, 16777216), (47, -1), (48, -1), (49, 67108864), (50, -1), (51, -1), (52, -1)]

Covered at level 10 : {5, 40, 13, 14, 15, 16, 20, 21, 22, 23}

After reduction : 
 pending  : [24, 37, 8, 30, 33, 45, 38, 42, 43, 46, 49, 36, 31, 32, 3]
 solution : [0, 10, 19]


Before reduction : 
 pending  : [24, 37, 8, 30, 33, 45, 38, 42, 43, 46, 49, 36, 31, 32, 3]
 solution : [0, 10, 19]

Essensial at level 10 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 134217728), (4, -1), (5, 0), (6, -1), (7, -1), (8, 262144), (9, -1), (10, -1), (11, -1), (12, -1), (13, 0), (14, 0), (15, 0), (16, 0), (17, -1), (18, -1), (19, -1), (20, 0), (21, 0), (22, 0), (23, 0), (24, 134217728), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, 524288), (31, 4194304), (32, 8192), (33, 4096), (34, -1), (35, -1), (36, 67108864), (37, 2048), (38, 2048), (39, -1), (40, 0), (41, -1), (42, 131072), (43, 131072), (44, -1), (45, 67108864), (46, 16777216), (47, -1), (48, -1), (49, 67108864), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 134217728), (4, -1), (5, -1), (6, -1), (7, -1), (8, 262144), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, 134217728), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, 524288), (31, 4194304), (32, 8192), (33, 4096), (34, -1), (35, -1), (36, 67108864), (37, 2048), (38, 2048), (39, -1), (40, -1), (41, -1), (42, 131072), (43, 131072), (44, -1), (45, 67108864), (46, 16777216), (47, -1), (48, -1), (49, 67108864), (50, -1), (51, -1), (52, -1)]

Covered at level 10 : set()

After reduction : 
 pending  : [24, 37, 8, 30, 33, 45, 38, 42, 43, 46, 49, 36, 31, 32, 3]
 solution : [0, 10, 19]


Solution : [0, 10, 19] has cost 18.


Before backtrack at level 10
 pending : [24, 37, 8, 30, 33, 45, 38, 42, 43, 46, 49, 36, 31, 32, 3]
 solution : [0, 10, 19]

After backtrack at level 10
 pending : [24, 37, 8, 30, 33, 45, 38, 42, 43, 46, 49, 36, 31, 32, 3, 23, 40, 5, 15, 16, 22, 21, 14, 20, 13]
 solution : [0, 10, 19]


Invert decision for 19 at level 9


New level: 10
 pending : [24, 37, 8, 30, 33, 45, 38, 42, 43, 46, 49, 36, 31, 32, 3, 23, 40, 5, 15, 16, 22, 21, 14, 20, 13]
 solution : [0, 10]


Before reduction : 
 pending  : [24, 37, 8, 30, 33, 45, 38, 42, 43, 46, 49, 36, 31, 32, 3, 23, 40, 5, 15, 16, 22, 21, 14, 20, 13]
 solution : [0, 10]

Essensial at level 10 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 134217728), (4, -1), (5, -1), (6, -1), (7, -1), (8, 262144), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, 134217728), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, 524288), (31, 4194304), (32, 8192), (33, 4096), (34, -1), (35, -1), (36, 67108864), (37, 2048), (38, 2048), (39, -1), (40, -1), (41, -1), (42, 131072), (43, 131072), (44, -1), (45, 67108864), (46, 16777216), (47, -1), (48, -1), (49, 67108864), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 134217728), (4, -1), (5, 262144), (6, -1), (7, -1), (8, 1048576), (9, -1), (10, -1), (11, -1), (12, -1), (13, 16777216), (14, 8388608), (15, 393216), (16, 131072), (17, -1), (18, -1), (19, -1), (20, 4194304), (21, 2097152), (22, 65536), (23, 1048576), (24, 134217728), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, 1048576), (31, 4194304), (32, 32768), (33, 16384), (34, -1), (35, -1), (36, 134217728), (37, 67108864), (38, 16384), (39, -1), (40, 1048576), (41, -1), (42, 524288), (43, 524288), (44, -1), (45, 67108864), (46, 16777216), (47, -1), (48, -1), (49, 67108864), (50, -1), (51, -1), (52, -1)]

Covered at level 10 : set()

After reduction : 
 pending  : [24, 37, 8, 30, 33, 45, 38, 42, 43, 46, 49, 36, 31, 32, 3, 23, 40, 5, 15, 16, 22, 21, 14, 20, 13]
 solution : [0, 10]


Solution : [0, 10] has cost 11.


Decide in level 10 among pending : [24, 37, 8, 30, 33, 45, 38, 42, 43, 46, 49, 36, 31, 32, 3, 23, 40, 5, 15, 16, 22, 21, 14, 20, 13]

Coverage : [(0, -1), (1, -1), (2, -1), (3, 134217728), (4, -1), (5, 262144), (6, -1), (7, -1), (8, 1048576), (9, -1), (10, -1), (11, -1), (12, -1), (13, 16777216), (14, 8388608), (15, 393216), (16, 131072), (17, -1), (18, -1), (19, -1), (20, 4194304), (21, 2097152), (22, 65536), (23, 1048576), (24, 134217728), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, 1048576), (31, 4194304), (32, 32768), (33, 16384), (34, -1), (35, -1), (36, 134217728), (37, 67108864), (38, 16384), (39, -1), (40, 1048576), (41, -1), (42, 524288), (43, 524288), (44, -1), (45, 67108864), (46, 16777216), (47, -1), (48, -1), (49, 67108864), (50, -1), (51, -1), (52, -1)]

Decide 24 with phase True at level 10

After decision at level 10
 pending : [37, 8, 30, 33, 45, 38, 42, 43, 46, 49, 36, 31, 32, 3, 23, 40, 5, 15, 16, 22, 21, 14, 20, 13]
 solution : [0, 10, 24]


New level: 11
 pending : [37, 8, 30, 33, 45, 38, 42, 43, 46, 49, 36, 31, 32, 3, 23, 40, 5, 15, 16, 22, 21, 14, 20, 13]
 solution : [0, 10, 24]


Before reduction : 
 pending  : [37, 8, 30, 33, 45, 38, 42, 43, 46, 49, 36, 31, 32, 3, 23, 40, 5, 15, 16, 22, 21, 14, 20, 13]
 solution : [0, 10, 24]

Essensial at level 11 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 134217728), (4, -1), (5, 262144), (6, -1), (7, -1), (8, 1048576), (9, -1), (10, -1), (11, -1), (12, -1), (13, 16777216), (14, 8388608), (15, 393216), (16, 131072), (17, -1), (18, -1), (19, -1), (20, 4194304), (21, 2097152), (22, 65536), (23, 1048576), (24, 134217728), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, 1048576), (31, 4194304), (32, 32768), (33, 16384), (34, -1), (35, -1), (36, 134217728), (37, 67108864), (38, 16384), (39, -1), (40, 1048576), (41, -1), (42, 524288), (43, 524288), (44, -1), (45, 67108864), (46, 16777216), (47, -1), (48, -1), (49, 67108864), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 0), (4, -1), (5, 131072), (6, -1), (7, -1), (8, 0), (9, -1), (10, -1), (11, -1), (12, -1), (13, 8388608), (14, 4194304), (15, 131072), (16, 65536), (17, -1), (18, -1), (19, -1), (20, 4194304), (21, 2097152), (22, 65536), (23, 524288), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, 0), (31, 0), (32, 0), (33, 0), (34, -1), (35, -1), (36, 0), (37, 262144), (38, 0), (39, -1), (40, 524288), (41, -1), (42, 0), (43, 0), (44, -1), (45, 0), (46, 0), (47, -1), (48, -1), (49, 0), (50, -1), (51, -1), (52, -1)]

Covered at level 11 : {32, 33, 3, 36, 38, 8, 42, 43, 45, 46, 49, 30, 31}

After reduction : 
 pending  : [37, 23, 40, 5, 15, 16, 22, 21, 14, 20, 13]
 solution : [0, 10, 24]


Before reduction : 
 pending  : [37, 23, 40, 5, 15, 16, 22, 21, 14, 20, 13]
 solution : [0, 10, 24]

Essensial at level 11 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 0), (4, -1), (5, 131072), (6, -1), (7, -1), (8, 0), (9, -1), (10, -1), (11, -1), (12, -1), (13, 8388608), (14, 4194304), (15, 131072), (16, 65536), (17, -1), (18, -1), (19, -1), (20, 4194304), (21, 2097152), (22, 65536), (23, 524288), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, 0), (31, 0), (32, 0), (33, 0), (34, -1), (35, -1), (36, 0), (37, 262144), (38, 0), (39, -1), (40, 524288), (41, -1), (42, 0), (43, 0), (44, -1), (45, 0), (46, 0), (47, -1), (48, -1), (49, 0), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 131072), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, 8388608), (14, 4194304), (15, 131072), (16, 65536), (17, -1), (18, -1), (19, -1), (20, 4194304), (21, 2097152), (22, 65536), (23, 524288), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, 262144), (38, -1), (39, -1), (40, 524288), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 11 : set()

After reduction : 
 pending  : [37, 23, 40, 5, 15, 16, 22, 21, 14, 20, 13]
 solution : [0, 10, 24]


Solution : [0, 10, 24] has cost 18.


Before backtrack at level 11
 pending : [37, 23, 40, 5, 15, 16, 22, 21, 14, 20, 13]
 solution : [0, 10, 24]

After backtrack at level 11
 pending : [37, 23, 40, 5, 15, 16, 22, 21, 14, 20, 13, 8, 30, 33, 45, 38, 42, 43, 46, 49, 36, 31, 32, 3]
 solution : [0, 10, 24]


Invert decision for 24 at level 10


New level: 11
 pending : [37, 23, 40, 5, 15, 16, 22, 21, 14, 20, 13, 8, 30, 33, 45, 38, 42, 43, 46, 49, 36, 31, 32, 3]
 solution : [0, 10]


Before reduction : 
 pending  : [37, 23, 40, 5, 15, 16, 22, 21, 14, 20, 13, 8, 30, 33, 45, 38, 42, 43, 46, 49, 36, 31, 32, 3]
 solution : [0, 10]

Essensial at level 11 : {3}

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 131072), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, 8388608), (14, 4194304), (15, 131072), (16, 65536), (17, -1), (18, -1), (19, -1), (20, 4194304), (21, 2097152), (22, 65536), (23, 524288), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, 262144), (38, -1), (39, -1), (40, 524288), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 131072), (6, -1), (7, -1), (8, 0), (9, -1), (10, -1), (11, -1), (12, -1), (13, 8388608), (14, 4194304), (15, 131072), (16, 65536), (17, -1), (18, -1), (19, -1), (20, 4194304), (21, 2097152), (22, 65536), (23, 524288), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, 0), (31, 0), (32, 0), (33, 0), (34, -1), (35, -1), (36, 0), (37, 32768), (38, 0), (39, -1), (40, 524288), (41, -1), (42, 0), (43, 0), (44, -1), (45, 0), (46, 0), (47, -1), (48, -1), (49, 0), (50, -1), (51, -1), (52, -1)]

Covered at level 11 : {32, 33, 36, 38, 8, 42, 43, 45, 46, 49, 30, 31}

After reduction : 
 pending  : [37, 23, 40, 5, 15, 16, 22, 21, 14, 20, 13]
 solution : [0, 10, 3]


Before reduction : 
 pending  : [37, 23, 40, 5, 15, 16, 22, 21, 14, 20, 13]
 solution : [0, 10, 3]

Essensial at level 11 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 131072), (6, -1), (7, -1), (8, 0), (9, -1), (10, -1), (11, -1), (12, -1), (13, 8388608), (14, 4194304), (15, 131072), (16, 65536), (17, -1), (18, -1), (19, -1), (20, 4194304), (21, 2097152), (22, 65536), (23, 524288), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, 0), (31, 0), (32, 0), (33, 0), (34, -1), (35, -1), (36, 0), (37, 32768), (38, 0), (39, -1), (40, 524288), (41, -1), (42, 0), (43, 0), (44, -1), (45, 0), (46, 0), (47, -1), (48, -1), (49, 0), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 131072), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, 8388608), (14, 4194304), (15, 131072), (16, 65536), (17, -1), (18, -1), (19, -1), (20, 4194304), (21, 2097152), (22, 65536), (23, 524288), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, 32768), (38, -1), (39, -1), (40, 524288), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 11 : set()

After reduction : 
 pending  : [37, 23, 40, 5, 15, 16, 22, 21, 14, 20, 13]
 solution : [0, 10, 3]


Solution : [0, 10, 3] has cost 15.


Decide in level 11 among pending : [37, 23, 40, 5, 15, 16, 22, 21, 14, 20, 13]

Coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 131072), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, 8388608), (14, 4194304), (15, 131072), (16, 65536), (17, -1), (18, -1), (19, -1), (20, 4194304), (21, 2097152), (22, 65536), (23, 524288), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, 32768), (38, -1), (39, -1), (40, 524288), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Decide 13 with phase True at level 11

After decision at level 11
 pending : [37, 23, 40, 5, 15, 16, 22, 21, 14, 20]
 solution : [0, 10, 3, 13]


New level: 12
 pending : [37, 23, 40, 5, 15, 16, 22, 21, 14, 20]
 solution : [0, 10, 3, 13]


Before reduction : 
 pending  : [37, 23, 40, 5, 15, 16, 22, 21, 14, 20]
 solution : [0, 10, 3, 13]

Essensial at level 12 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 131072), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, 8388608), (14, 4194304), (15, 131072), (16, 65536), (17, -1), (18, -1), (19, -1), (20, 4194304), (21, 2097152), (22, 65536), (23, 524288), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, 32768), (38, -1), (39, -1), (40, 524288), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 0), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 0), (15, 0), (16, 0), (17, -1), (18, -1), (19, -1), (20, 65536), (21, 16384), (22, 16384), (23, 2048), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, 1024), (38, -1), (39, -1), (40, 2048), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 12 : {16, 5, 14, 15}

After reduction : 
 pending  : [37, 23, 40, 22, 21, 20]
 solution : [0, 10, 3, 13]


Before reduction : 
 pending  : [37, 23, 40, 22, 21, 20]
 solution : [0, 10, 3, 13]

Essensial at level 12 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 0), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 0), (15, 0), (16, 0), (17, -1), (18, -1), (19, -1), (20, 65536), (21, 16384), (22, 16384), (23, 2048), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, 1024), (38, -1), (39, -1), (40, 2048), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, 65536), (21, 16384), (22, 16384), (23, 2048), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, 1024), (38, -1), (39, -1), (40, 2048), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 12 : set()

After reduction : 
 pending  : [37, 23, 40, 22, 21, 20]
 solution : [0, 10, 3, 13]


Solution : [0, 10, 3, 13] has cost 24.


Before backtrack at level 12
 pending : [37, 23, 40, 22, 21, 20]
 solution : [0, 10, 3, 13]

After backtrack at level 12
 pending : [37, 23, 40, 22, 21, 20, 5, 15, 16, 14]
 solution : [0, 10, 3, 13]


Invert decision for 13 at level 11


New level: 12
 pending : [37, 23, 40, 22, 21, 20, 5, 15, 16, 14]
 solution : [0, 10, 3]


Before reduction : 
 pending  : [37, 23, 40, 22, 21, 20, 5, 15, 16, 14]
 solution : [0, 10, 3]

Essensial at level 12 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, 65536), (21, 16384), (22, 16384), (23, 2048), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, 1024), (38, -1), (39, -1), (40, 2048), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 131072), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 4194304), (15, 131072), (16, 65536), (17, -1), (18, -1), (19, -1), (20, 4194304), (21, 2097152), (22, 65536), (23, 524288), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, 32768), (38, -1), (39, -1), (40, 524288), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 12 : set()

After reduction : 
 pending  : [37, 23, 40, 22, 21, 20, 5, 15, 16, 14]
 solution : [0, 10, 3]


Solution : [0, 10, 3] has cost 15.


Decide in level 12 among pending : [37, 23, 40, 22, 21, 20, 5, 15, 16, 14]

Coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 131072), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 4194304), (15, 131072), (16, 65536), (17, -1), (18, -1), (19, -1), (20, 4194304), (21, 2097152), (22, 65536), (23, 524288), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, 32768), (38, -1), (39, -1), (40, 524288), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Decide 20 with phase True at level 12

After decision at level 12
 pending : [37, 23, 40, 22, 21, 5, 15, 16, 14]
 solution : [0, 10, 3, 20]


New level: 13
 pending : [37, 23, 40, 22, 21, 5, 15, 16, 14]
 solution : [0, 10, 3, 20]


Before reduction : 
 pending  : [37, 23, 40, 22, 21, 5, 15, 16, 14]
 solution : [0, 10, 3, 20]

Essensial at level 13 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 131072), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 4194304), (15, 131072), (16, 65536), (17, -1), (18, -1), (19, -1), (20, 4194304), (21, 2097152), (22, 65536), (23, 524288), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, 32768), (38, -1), (39, -1), (40, 524288), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 65536), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 1048576), (15, 65536), (16, 0), (17, -1), (18, -1), (19, -1), (20, -1), (21, 0), (22, 0), (23, 131072), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, 512), (38, -1), (39, -1), (40, 131072), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 13 : {16, 21, 22}

After reduction : 
 pending  : [37, 23, 40, 5, 15, 14]
 solution : [0, 10, 3, 20]


Before reduction : 
 pending  : [37, 23, 40, 5, 15, 14]
 solution : [0, 10, 3, 20]

Essensial at level 13 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 65536), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 1048576), (15, 65536), (16, 0), (17, -1), (18, -1), (19, -1), (20, -1), (21, 0), (22, 0), (23, 131072), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, 512), (38, -1), (39, -1), (40, 131072), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 65536), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 1048576), (15, 65536), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, 131072), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, 512), (38, -1), (39, -1), (40, 131072), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 13 : set()

After reduction : 
 pending  : [37, 23, 40, 5, 15, 14]
 solution : [0, 10, 3, 20]


Solution : [0, 10, 3, 20] has cost 22.


Before backtrack at level 13
 pending : [37, 23, 40, 5, 15, 14]
 solution : [0, 10, 3, 20]

After backtrack at level 13
 pending : [37, 23, 40, 5, 15, 14, 22, 21, 16]
 solution : [0, 10, 3, 20]


Invert decision for 20 at level 12


New level: 13
 pending : [37, 23, 40, 5, 15, 14, 22, 21, 16]
 solution : [0, 10, 3]


Before reduction : 
 pending  : [37, 23, 40, 5, 15, 14, 22, 21, 16]
 solution : [0, 10, 3]

Essensial at level 13 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 65536), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 1048576), (15, 65536), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, 131072), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, 512), (38, -1), (39, -1), (40, 131072), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 131072), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 4194304), (15, 131072), (16, 65536), (17, -1), (18, -1), (19, -1), (20, -1), (21, 2097152), (22, 65536), (23, 524288), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, 32768), (38, -1), (39, -1), (40, 524288), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 13 : set()

After reduction : 
 pending  : [37, 23, 40, 5, 15, 14, 22, 21, 16]
 solution : [0, 10, 3]


Solution : [0, 10, 3] has cost 15.


Decide in level 13 among pending : [37, 23, 40, 5, 15, 14, 22, 21, 16]

Coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 131072), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 4194304), (15, 131072), (16, 65536), (17, -1), (18, -1), (19, -1), (20, -1), (21, 2097152), (22, 65536), (23, 524288), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, 32768), (38, -1), (39, -1), (40, 524288), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Decide 14 with phase True at level 13

After decision at level 13
 pending : [37, 23, 40, 5, 15, 22, 21, 16]
 solution : [0, 10, 3, 14]


New level: 14
 pending : [37, 23, 40, 5, 15, 22, 21, 16]
 solution : [0, 10, 3, 14]


Before reduction : 
 pending  : [37, 23, 40, 5, 15, 22, 21, 16]
 solution : [0, 10, 3, 14]

Essensial at level 14 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 131072), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 4194304), (15, 131072), (16, 65536), (17, -1), (18, -1), (19, -1), (20, -1), (21, 2097152), (22, 65536), (23, 524288), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, 32768), (38, -1), (39, -1), (40, 524288), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 0), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, 0), (16, 0), (17, -1), (18, -1), (19, -1), (20, -1), (21, 16384), (22, 16384), (23, 2048), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, 1024), (38, -1), (39, -1), (40, 2048), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 14 : {16, 5, 15}

After reduction : 
 pending  : [37, 23, 40, 22, 21]
 solution : [0, 10, 3, 14]


Before reduction : 
 pending  : [37, 23, 40, 22, 21]
 solution : [0, 10, 3, 14]

Essensial at level 14 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 0), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, 0), (16, 0), (17, -1), (18, -1), (19, -1), (20, -1), (21, 16384), (22, 16384), (23, 2048), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, 1024), (38, -1), (39, -1), (40, 2048), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, 16384), (22, 16384), (23, 2048), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, 1024), (38, -1), (39, -1), (40, 2048), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 14 : set()

After reduction : 
 pending  : [37, 23, 40, 22, 21]
 solution : [0, 10, 3, 14]


Solution : [0, 10, 3, 14] has cost 24.


Before backtrack at level 14
 pending : [37, 23, 40, 22, 21]
 solution : [0, 10, 3, 14]

After backtrack at level 14
 pending : [37, 23, 40, 22, 21, 5, 15, 16]
 solution : [0, 10, 3, 14]


Invert decision for 14 at level 13


New level: 14
 pending : [37, 23, 40, 22, 21, 5, 15, 16]
 solution : [0, 10, 3]


Before reduction : 
 pending  : [37, 23, 40, 22, 21, 5, 15, 16]
 solution : [0, 10, 3]

Essensial at level 14 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, 16384), (22, 16384), (23, 2048), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, 1024), (38, -1), (39, -1), (40, 2048), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 131072), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, 131072), (16, 65536), (17, -1), (18, -1), (19, -1), (20, -1), (21, 2097152), (22, 65536), (23, 524288), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, 32768), (38, -1), (39, -1), (40, 524288), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 14 : set()

After reduction : 
 pending  : [37, 23, 40, 22, 21, 5, 15, 16]
 solution : [0, 10, 3]


Solution : [0, 10, 3] has cost 15.


Decide in level 14 among pending : [37, 23, 40, 22, 21, 5, 15, 16]

Coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 131072), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, 131072), (16, 65536), (17, -1), (18, -1), (19, -1), (20, -1), (21, 2097152), (22, 65536), (23, 524288), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, 32768), (38, -1), (39, -1), (40, 524288), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Decide 21 with phase True at level 14

After decision at level 14
 pending : [37, 23, 40, 22, 5, 15, 16]
 solution : [0, 10, 3, 21]


New level: 15
 pending : [37, 23, 40, 22, 5, 15, 16]
 solution : [0, 10, 3, 21]


Before reduction : 
 pending  : [37, 23, 40, 22, 5, 15, 16]
 solution : [0, 10, 3, 21]

Essensial at level 15 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 131072), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, 131072), (16, 65536), (17, -1), (18, -1), (19, -1), (20, -1), (21, 2097152), (22, 65536), (23, 524288), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, 32768), (38, -1), (39, -1), (40, 524288), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 65536), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, 65536), (16, 0), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, 0), (23, 131072), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, 512), (38, -1), (39, -1), (40, 131072), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 15 : {16, 22}

After reduction : 
 pending  : [37, 23, 40, 5, 15]
 solution : [0, 10, 3, 21]


Before reduction : 
 pending  : [37, 23, 40, 5, 15]
 solution : [0, 10, 3, 21]

Essensial at level 15 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 65536), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, 65536), (16, 0), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, 0), (23, 131072), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, 512), (38, -1), (39, -1), (40, 131072), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 65536), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, 65536), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, 131072), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, 512), (38, -1), (39, -1), (40, 131072), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 15 : set()

After reduction : 
 pending  : [37, 23, 40, 5, 15]
 solution : [0, 10, 3, 21]


Solution : [0, 10, 3, 21] has cost 22.


Before backtrack at level 15
 pending : [37, 23, 40, 5, 15]
 solution : [0, 10, 3, 21]

After backtrack at level 15
 pending : [37, 23, 40, 5, 15, 22, 16]
 solution : [0, 10, 3, 21]


Invert decision for 21 at level 14


New level: 15
 pending : [37, 23, 40, 5, 15, 22, 16]
 solution : [0, 10, 3]


Before reduction : 
 pending  : [37, 23, 40, 5, 15, 22, 16]
 solution : [0, 10, 3]

Essensial at level 15 : {22}

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 65536), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, 65536), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, 131072), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, 512), (38, -1), (39, -1), (40, 131072), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 131072), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, 131072), (16, 32768), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, 524288), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, 32768), (38, -1), (39, -1), (40, 524288), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 15 : set()

After reduction : 
 pending  : [37, 23, 40, 5, 15, 16]
 solution : [0, 10, 3, 22]


Before reduction : 
 pending  : [37, 23, 40, 5, 15, 16]
 solution : [0, 10, 3, 22]

Essensial at level 15 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 131072), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, 131072), (16, 32768), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, 524288), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, 32768), (38, -1), (39, -1), (40, 524288), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 131072), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, 131072), (16, 32768), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, 524288), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, 32768), (38, -1), (39, -1), (40, 524288), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 15 : set()

After reduction : 
 pending  : [37, 23, 40, 5, 15, 16]
 solution : [0, 10, 3, 22]


Solution : [0, 10, 3, 22] has cost 22.


Before backtrack at level 15
 pending : [37, 23, 40, 5, 15, 16]
 solution : [0, 10, 3, 22]

After backtrack at level 15
 pending : [37, 23, 40, 5, 15, 16, 22]
 solution : [0, 10, 3]


Before backtrack at level 14
 pending : [37, 23, 40, 5, 15, 16, 22]
 solution : [0, 10, 3]

After backtrack at level 14
 pending : [37, 23, 40, 5, 15, 16, 22, 21]
 solution : [0, 10, 3]


Before backtrack at level 13
 pending : [37, 23, 40, 5, 15, 16, 22, 21]
 solution : [0, 10, 3]

After backtrack at level 13
 pending : [37, 23, 40, 5, 15, 16, 22, 21, 14]
 solution : [0, 10, 3]


Before backtrack at level 12
 pending : [37, 23, 40, 5, 15, 16, 22, 21, 14]
 solution : [0, 10, 3]

After backtrack at level 12
 pending : [37, 23, 40, 5, 15, 16, 22, 21, 14, 20]
 solution : [0, 10, 3]


Before backtrack at level 11
 pending : [37, 23, 40, 5, 15, 16, 22, 21, 14, 20]
 solution : [0, 10, 3]

After backtrack at level 11
 pending : [37, 23, 40, 5, 15, 16, 22, 21, 14, 20, 3, 8, 30, 33, 45, 38, 42, 43, 46, 49, 36, 31, 32, 13]
 solution : [0, 10]


Before backtrack at level 10
 pending : [37, 23, 40, 5, 15, 16, 22, 21, 14, 20, 3, 8, 30, 33, 45, 38, 42, 43, 46, 49, 36, 31, 32, 13]
 solution : [0, 10]

After backtrack at level 10
 pending : [37, 23, 40, 5, 15, 16, 22, 21, 14, 20, 3, 8, 30, 33, 45, 38, 42, 43, 46, 49, 36, 31, 32, 13, 24]
 solution : [0, 10]


Before backtrack at level 9
 pending : [37, 23, 40, 5, 15, 16, 22, 21, 14, 20, 3, 8, 30, 33, 45, 38, 42, 43, 46, 49, 36, 31, 32, 13, 24]
 solution : [0, 10]

After backtrack at level 9
 pending : [37, 23, 40, 5, 15, 16, 22, 21, 14, 20, 3, 8, 30, 33, 45, 38, 42, 43, 46, 49, 36, 31, 32, 13, 24, 19]
 solution : [0, 10]


Before backtrack at level 8
 pending : [37, 23, 40, 5, 15, 16, 22, 21, 14, 20, 3, 8, 30, 33, 45, 38, 42, 43, 46, 49, 36, 31, 32, 13, 24, 19]
 solution : [0, 10]

After backtrack at level 8
 pending : [37, 23, 40, 5, 15, 16, 22, 21, 14, 20, 3, 8, 30, 33, 45, 38, 42, 43, 46, 49, 36, 31, 32, 13, 24, 19, 39]
 solution : [0, 10]


Before backtrack at level 7
 pending : [37, 23, 40, 5, 15, 16, 22, 21, 14, 20, 3, 8, 30, 33, 45, 38, 42, 43, 46, 49, 36, 31, 32, 13, 24, 19, 39]
 solution : [0, 10]

After backtrack at level 7
 pending : [37, 23, 40, 5, 15, 16, 22, 21, 14, 20, 3, 8, 30, 33, 45, 38, 42, 43, 46, 49, 36, 31, 32, 13, 24, 19, 39, 18]
 solution : [0, 10]


Before backtrack at level 6
 pending : [37, 23, 40, 5, 15, 16, 22, 21, 14, 20, 3, 8, 30, 33, 45, 38, 42, 43, 46, 49, 36, 31, 32, 13, 24, 19, 39, 18]
 solution : [0, 10]

After backtrack at level 6
 pending : [37, 23, 40, 5, 15, 16, 22, 21, 14, 20, 3, 8, 30, 33, 45, 38, 42, 43, 46, 49, 36, 31, 32, 13, 24, 19, 39, 18, 28]
 solution : [0, 10]


Before backtrack at level 5
 pending : [37, 23, 40, 5, 15, 16, 22, 21, 14, 20, 3, 8, 30, 33, 45, 38, 42, 43, 46, 49, 36, 31, 32, 13, 24, 19, 39, 18, 28]
 solution : [0, 10]

After backtrack at level 5
 pending : [37, 23, 40, 5, 15, 16, 22, 21, 14, 20, 3, 8, 30, 33, 45, 38, 42, 43, 46, 49, 36, 31, 32, 13, 24, 19, 39, 18, 28, 25]
 solution : [0, 10]


Before backtrack at level 4
 pending : [37, 23, 40, 5, 15, 16, 22, 21, 14, 20, 3, 8, 30, 33, 45, 38, 42, 43, 46, 49, 36, 31, 32, 13, 24, 19, 39, 18, 28, 25]
 solution : [0, 10]

After backtrack at level 4
 pending : [37, 23, 40, 5, 15, 16, 22, 21, 14, 20, 3, 8, 30, 33, 45, 38, 42, 43, 46, 49, 36, 31, 32, 13, 24, 19, 39, 18, 28, 25, 35]
 solution : [0, 10]


Before backtrack at level 3
 pending : [37, 23, 40, 5, 15, 16, 22, 21, 14, 20, 3, 8, 30, 33, 45, 38, 42, 43, 46, 49, 36, 31, 32, 13, 24, 19, 39, 18, 28, 25, 35]
 solution : [0, 10]

After backtrack at level 3
 pending : [37, 23, 40, 5, 15, 16, 22, 21, 14, 20, 3, 8, 30, 33, 45, 38, 42, 43, 46, 49, 36, 31, 32, 13, 24, 19, 39, 18, 28, 25, 35, 26]
 solution : [0, 10]


Invert decision for 10 at level 2


New level: 3
 pending : [37, 23, 40, 5, 15, 16, 22, 21, 14, 20, 3, 8, 30, 33, 45, 38, 42, 43, 46, 49, 36, 31, 32, 13, 24, 19, 39, 18, 28, 25, 35, 26]
 solution : [0]


Before reduction : 
 pending  : [37, 23, 40, 5, 15, 16, 22, 21, 14, 20, 3, 8, 30, 33, 45, 38, 42, 43, 46, 49, 36, 31, 32, 13, 24, 19, 39, 18, 28, 25, 35, 26]
 solution : [0]

Essensial at level 3 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 131072), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, 131072), (16, 32768), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, 524288), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, 32768), (38, -1), (39, -1), (40, 524288), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 134217728), (4, -1), (5, 1048576), (6, -1), (7, -1), (8, 1048576), (9, -1), (10, -1), (11, -1), (12, -1), (13, 67108864), (14, 33554432), (15, 1572864), (16, 524288), (17, -1), (18, 2147483648), (19, 1073741824), (20, 16777216), (21, 8388608), (22, 262144), (23, 4194304), (24, 134217728), (25, 1073741824), (26, 4294967296), (27, -1), (28, 4294967296), (29, -1), (30, 1048576), (31, 4194304), (32, 32768), (33, 16384), (34, -1), (35, 2147483648), (36, 134217728), (37, 268435456), (38, 16384), (39, 1073741824), (40, 4194304), (41, -1), (42, 524288), (43, 524288), (44, -1), (45, 67108864), (46, 16777216), (47, -1), (48, -1), (49, 67108864), (50, -1), (51, -1), (52, -1)]

Covered at level 3 : set()

After reduction : 
 pending  : [37, 23, 40, 5, 15, 16, 22, 21, 14, 20, 3, 8, 30, 33, 45, 38, 42, 43, 46, 49, 36, 31, 32, 13, 24, 19, 39, 18, 28, 25, 35, 26]
 solution : [0]


Solution : [0] has cost 6.


Decide in level 3 among pending : [37, 23, 40, 5, 15, 16, 22, 21, 14, 20, 3, 8, 30, 33, 45, 38, 42, 43, 46, 49, 36, 31, 32, 13, 24, 19, 39, 18, 28, 25, 35, 26]

Coverage : [(0, -1), (1, -1), (2, -1), (3, 134217728), (4, -1), (5, 1048576), (6, -1), (7, -1), (8, 1048576), (9, -1), (10, -1), (11, -1), (12, -1), (13, 67108864), (14, 33554432), (15, 1572864), (16, 524288), (17, -1), (18, 2147483648), (19, 1073741824), (20, 16777216), (21, 8388608), (22, 262144), (23, 4194304), (24, 134217728), (25, 1073741824), (26, 4294967296), (27, -1), (28, 4294967296), (29, -1), (30, 1048576), (31, 4194304), (32, 32768), (33, 16384), (34, -1), (35, 2147483648), (36, 134217728), (37, 268435456), (38, 16384), (39, 1073741824), (40, 4194304), (41, -1), (42, 524288), (43, 524288), (44, -1), (45, 67108864), (46, 16777216), (47, -1), (48, -1), (49, 67108864), (50, -1), (51, -1), (52, -1)]

Decide 28 with phase True at level 3

After decision at level 3
 pending : [37, 23, 40, 5, 15, 16, 22, 21, 14, 20, 3, 8, 30, 33, 45, 38, 42, 43, 46, 49, 36, 31, 32, 13, 24, 19, 39, 18, 25, 35, 26]
 solution : [0, 28]


New level: 4
 pending : [37, 23, 40, 5, 15, 16, 22, 21, 14, 20, 3, 8, 30, 33, 45, 38, 42, 43, 46, 49, 36, 31, 32, 13, 24, 19, 39, 18, 25, 35, 26]
 solution : [0, 28]


Before reduction : 
 pending  : [37, 23, 40, 5, 15, 16, 22, 21, 14, 20, 3, 8, 30, 33, 45, 38, 42, 43, 46, 49, 36, 31, 32, 13, 24, 19, 39, 18, 25, 35, 26]
 solution : [0, 28]

Essensial at level 4 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 134217728), (4, -1), (5, 1048576), (6, -1), (7, -1), (8, 1048576), (9, -1), (10, -1), (11, -1), (12, -1), (13, 67108864), (14, 33554432), (15, 1572864), (16, 524288), (17, -1), (18, 2147483648), (19, 1073741824), (20, 16777216), (21, 8388608), (22, 262144), (23, 4194304), (24, 134217728), (25, 1073741824), (26, 4294967296), (27, -1), (28, 4294967296), (29, -1), (30, 1048576), (31, 4194304), (32, 32768), (33, 16384), (34, -1), (35, 2147483648), (36, 134217728), (37, 268435456), (38, 16384), (39, 1073741824), (40, 4194304), (41, -1), (42, 524288), (43, 524288), (44, -1), (45, 67108864), (46, 16777216), (47, -1), (48, -1), (49, 67108864), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 134217728), (4, -1), (5, 0), (6, -1), (7, -1), (8, 262144), (9, -1), (10, -1), (11, -1), (12, -1), (13, 0), (14, 0), (15, 0), (16, 0), (17, -1), (18, 0), (19, 0), (20, 0), (21, 0), (22, 0), (23, 0), (24, 134217728), (25, 1073741824), (26, 4294967296), (27, -1), (28, -1), (29, -1), (30, 524288), (31, 4194304), (32, 8192), (33, 4096), (34, -1), (35, 2147483648), (36, 67108864), (37, 2048), (38, 2048), (39, 4096), (40, 0), (41, -1), (42, 131072), (43, 131072), (44, -1), (45, 33554432), (46, 4194304), (47, -1), (48, -1), (49, 16777216), (50, -1), (51, -1), (52, -1)]

Covered at level 4 : {5, 40, 13, 14, 15, 16, 18, 19, 20, 21, 22, 23}

After reduction : 
 pending  : [37, 3, 8, 30, 33, 45, 38, 42, 43, 46, 49, 36, 31, 32, 24, 39, 25, 35, 26]
 solution : [0, 28]


Before reduction : 
 pending  : [37, 3, 8, 30, 33, 45, 38, 42, 43, 46, 49, 36, 31, 32, 24, 39, 25, 35, 26]
 solution : [0, 28]

Essensial at level 4 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 134217728), (4, -1), (5, 0), (6, -1), (7, -1), (8, 262144), (9, -1), (10, -1), (11, -1), (12, -1), (13, 0), (14, 0), (15, 0), (16, 0), (17, -1), (18, 0), (19, 0), (20, 0), (21, 0), (22, 0), (23, 0), (24, 134217728), (25, 1073741824), (26, 4294967296), (27, -1), (28, -1), (29, -1), (30, 524288), (31, 4194304), (32, 8192), (33, 4096), (34, -1), (35, 2147483648), (36, 67108864), (37, 2048), (38, 2048), (39, 4096), (40, 0), (41, -1), (42, 131072), (43, 131072), (44, -1), (45, 33554432), (46, 4194304), (47, -1), (48, -1), (49, 16777216), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 134217728), (4, -1), (5, -1), (6, -1), (7, -1), (8, 262144), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, 134217728), (25, 1073741824), (26, 4294967296), (27, -1), (28, -1), (29, -1), (30, 524288), (31, 4194304), (32, 8192), (33, 4096), (34, -1), (35, 2147483648), (36, 67108864), (37, 2048), (38, 2048), (39, 4096), (40, -1), (41, -1), (42, 131072), (43, 131072), (44, -1), (45, 33554432), (46, 4194304), (47, -1), (48, -1), (49, 16777216), (50, -1), (51, -1), (52, -1)]

Covered at level 4 : set()

After reduction : 
 pending  : [37, 3, 8, 30, 33, 45, 38, 42, 43, 46, 49, 36, 31, 32, 24, 39, 25, 35, 26]
 solution : [0, 28]


Solution : [0, 28] has cost 10.


Decide in level 4 among pending : [37, 3, 8, 30, 33, 45, 38, 42, 43, 46, 49, 36, 31, 32, 24, 39, 25, 35, 26]

Coverage : [(0, -1), (1, -1), (2, -1), (3, 134217728), (4, -1), (5, -1), (6, -1), (7, -1), (8, 262144), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, 134217728), (25, 1073741824), (26, 4294967296), (27, -1), (28, -1), (29, -1), (30, 524288), (31, 4194304), (32, 8192), (33, 4096), (34, -1), (35, 2147483648), (36, 67108864), (37, 2048), (38, 2048), (39, 4096), (40, -1), (41, -1), (42, 131072), (43, 131072), (44, -1), (45, 33554432), (46, 4194304), (47, -1), (48, -1), (49, 16777216), (50, -1), (51, -1), (52, -1)]

Decide 26 with phase True at level 4

After decision at level 4
 pending : [37, 3, 8, 30, 33, 45, 38, 42, 43, 46, 49, 36, 31, 32, 24, 39, 25, 35]
 solution : [0, 28, 26]


New level: 5
 pending : [37, 3, 8, 30, 33, 45, 38, 42, 43, 46, 49, 36, 31, 32, 24, 39, 25, 35]
 solution : [0, 28, 26]


Before reduction : 
 pending  : [37, 3, 8, 30, 33, 45, 38, 42, 43, 46, 49, 36, 31, 32, 24, 39, 25, 35]
 solution : [0, 28, 26]

Essensial at level 5 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 134217728), (4, -1), (5, -1), (6, -1), (7, -1), (8, 262144), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, 134217728), (25, 1073741824), (26, 4294967296), (27, -1), (28, -1), (29, -1), (30, 524288), (31, 4194304), (32, 8192), (33, 4096), (34, -1), (35, 2147483648), (36, 67108864), (37, 2048), (38, 2048), (39, 4096), (40, -1), (41, -1), (42, 131072), (43, 131072), (44, -1), (45, 33554432), (46, 4194304), (47, -1), (48, -1), (49, 16777216), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 134217728), (4, -1), (5, -1), (6, -1), (7, -1), (8, 262144), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, 134217728), (25, 536870912), (26, -1), (27, -1), (28, -1), (29, -1), (30, 524288), (31, 2097152), (32, 4096), (33, 4096), (34, -1), (35, 1073741824), (36, 67108864), (37, 2048), (38, 2048), (39, 2048), (40, -1), (41, -1), (42, 131072), (43, 131072), (44, -1), (45, 33554432), (46, 4194304), (47, -1), (48, -1), (49, 16777216), (50, -1), (51, -1), (52, -1)]

Covered at level 5 : set()

After reduction : 
 pending  : [37, 3, 8, 30, 33, 45, 38, 42, 43, 46, 49, 36, 31, 32, 24, 39, 25, 35]
 solution : [0, 28, 26]


Solution : [0, 28, 26] has cost 14.


Decide in level 5 among pending : [37, 3, 8, 30, 33, 45, 38, 42, 43, 46, 49, 36, 31, 32, 24, 39, 25, 35]

Coverage : [(0, -1), (1, -1), (2, -1), (3, 134217728), (4, -1), (5, -1), (6, -1), (7, -1), (8, 262144), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, 134217728), (25, 536870912), (26, -1), (27, -1), (28, -1), (29, -1), (30, 524288), (31, 2097152), (32, 4096), (33, 4096), (34, -1), (35, 1073741824), (36, 67108864), (37, 2048), (38, 2048), (39, 2048), (40, -1), (41, -1), (42, 131072), (43, 131072), (44, -1), (45, 33554432), (46, 4194304), (47, -1), (48, -1), (49, 16777216), (50, -1), (51, -1), (52, -1)]

Decide 35 with phase True at level 5

After decision at level 5
 pending : [37, 3, 8, 30, 33, 45, 38, 42, 43, 46, 49, 36, 31, 32, 24, 39, 25]
 solution : [0, 28, 26, 35]


New level: 6
 pending : [37, 3, 8, 30, 33, 45, 38, 42, 43, 46, 49, 36, 31, 32, 24, 39, 25]
 solution : [0, 28, 26, 35]


Before reduction : 
 pending  : [37, 3, 8, 30, 33, 45, 38, 42, 43, 46, 49, 36, 31, 32, 24, 39, 25]
 solution : [0, 28, 26, 35]

Essensial at level 6 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 134217728), (4, -1), (5, -1), (6, -1), (7, -1), (8, 262144), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, 134217728), (25, 536870912), (26, -1), (27, -1), (28, -1), (29, -1), (30, 524288), (31, 2097152), (32, 4096), (33, 4096), (34, -1), (35, 1073741824), (36, 67108864), (37, 2048), (38, 2048), (39, 2048), (40, -1), (41, -1), (42, 131072), (43, 131072), (44, -1), (45, 33554432), (46, 4194304), (47, -1), (48, -1), (49, 16777216), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 134217728), (4, -1), (5, -1), (6, -1), (7, -1), (8, 65536), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, 134217728), (25, 2048), (26, -1), (27, -1), (28, -1), (29, -1), (30, 131072), (31, 0), (32, 0), (33, 1024), (34, -1), (35, -1), (36, 16777216), (37, 512), (38, 512), (39, 0), (40, -1), (41, -1), (42, 32768), (43, 32768), (44, -1), (45, 8388608), (46, 1048576), (47, -1), (48, -1), (49, 4194304), (50, -1), (51, -1), (52, -1)]

Covered at level 6 : {32, 39, 31}

After reduction : 
 pending  : [37, 3, 8, 30, 33, 45, 38, 42, 43, 46, 49, 36, 24, 25]
 solution : [0, 28, 26, 35]


Before reduction : 
 pending  : [37, 3, 8, 30, 33, 45, 38, 42, 43, 46, 49, 36, 24, 25]
 solution : [0, 28, 26, 35]

Essensial at level 6 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 134217728), (4, -1), (5, -1), (6, -1), (7, -1), (8, 65536), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, 134217728), (25, 2048), (26, -1), (27, -1), (28, -1), (29, -1), (30, 131072), (31, 0), (32, 0), (33, 1024), (34, -1), (35, -1), (36, 16777216), (37, 512), (38, 512), (39, 0), (40, -1), (41, -1), (42, 32768), (43, 32768), (44, -1), (45, 8388608), (46, 1048576), (47, -1), (48, -1), (49, 4194304), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 134217728), (4, -1), (5, -1), (6, -1), (7, -1), (8, 65536), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, 134217728), (25, 2048), (26, -1), (27, -1), (28, -1), (29, -1), (30, 131072), (31, -1), (32, -1), (33, 1024), (34, -1), (35, -1), (36, 16777216), (37, 512), (38, 512), (39, -1), (40, -1), (41, -1), (42, 32768), (43, 32768), (44, -1), (45, 8388608), (46, 1048576), (47, -1), (48, -1), (49, 4194304), (50, -1), (51, -1), (52, -1)]

Covered at level 6 : set()

After reduction : 
 pending  : [37, 3, 8, 30, 33, 45, 38, 42, 43, 46, 49, 36, 24, 25]
 solution : [0, 28, 26, 35]


Solution : [0, 28, 26, 35] has cost 27.


Before backtrack at level 6
 pending : [37, 3, 8, 30, 33, 45, 38, 42, 43, 46, 49, 36, 24, 25]
 solution : [0, 28, 26, 35]

After backtrack at level 6
 pending : [37, 3, 8, 30, 33, 45, 38, 42, 43, 46, 49, 36, 24, 25, 31, 32, 39]
 solution : [0, 28, 26, 35]


Invert decision for 35 at level 5


New level: 6
 pending : [37, 3, 8, 30, 33, 45, 38, 42, 43, 46, 49, 36, 24, 25, 31, 32, 39]
 solution : [0, 28, 26]


Before reduction : 
 pending  : [37, 3, 8, 30, 33, 45, 38, 42, 43, 46, 49, 36, 24, 25, 31, 32, 39]
 solution : [0, 28, 26]

Essensial at level 6 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 134217728), (4, -1), (5, -1), (6, -1), (7, -1), (8, 65536), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, 134217728), (25, 2048), (26, -1), (27, -1), (28, -1), (29, -1), (30, 131072), (31, -1), (32, -1), (33, 1024), (34, -1), (35, -1), (36, 16777216), (37, 512), (38, 512), (39, -1), (40, -1), (41, -1), (42, 32768), (43, 32768), (44, -1), (45, 8388608), (46, 1048576), (47, -1), (48, -1), (49, 4194304), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 134217728), (4, -1), (5, -1), (6, -1), (7, -1), (8, 262144), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, 134217728), (25, 536870912), (26, -1), (27, -1), (28, -1), (29, -1), (30, 524288), (31, 2097152), (32, 4096), (33, 4096), (34, -1), (35, -1), (36, 67108864), (37, 2048), (38, 2048), (39, 2048), (40, -1), (41, -1), (42, 131072), (43, 131072), (44, -1), (45, 33554432), (46, 4194304), (47, -1), (48, -1), (49, 16777216), (50, -1), (51, -1), (52, -1)]

Covered at level 6 : set()

After reduction : 
 pending  : [37, 3, 8, 30, 33, 45, 38, 42, 43, 46, 49, 36, 24, 25, 31, 32, 39]
 solution : [0, 28, 26]


Solution : [0, 28, 26] has cost 14.


Decide in level 6 among pending : [37, 3, 8, 30, 33, 45, 38, 42, 43, 46, 49, 36, 24, 25, 31, 32, 39]

Coverage : [(0, -1), (1, -1), (2, -1), (3, 134217728), (4, -1), (5, -1), (6, -1), (7, -1), (8, 262144), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, 134217728), (25, 536870912), (26, -1), (27, -1), (28, -1), (29, -1), (30, 524288), (31, 2097152), (32, 4096), (33, 4096), (34, -1), (35, -1), (36, 67108864), (37, 2048), (38, 2048), (39, 2048), (40, -1), (41, -1), (42, 131072), (43, 131072), (44, -1), (45, 33554432), (46, 4194304), (47, -1), (48, -1), (49, 16777216), (50, -1), (51, -1), (52, -1)]

Decide 25 with phase True at level 6

After decision at level 6
 pending : [37, 3, 8, 30, 33, 45, 38, 42, 43, 46, 49, 36, 24, 31, 32, 39]
 solution : [0, 28, 26, 25]


New level: 7
 pending : [37, 3, 8, 30, 33, 45, 38, 42, 43, 46, 49, 36, 24, 31, 32, 39]
 solution : [0, 28, 26, 25]


Before reduction : 
 pending  : [37, 3, 8, 30, 33, 45, 38, 42, 43, 46, 49, 36, 24, 31, 32, 39]
 solution : [0, 28, 26, 25]

Essensial at level 7 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 134217728), (4, -1), (5, -1), (6, -1), (7, -1), (8, 262144), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, 134217728), (25, 536870912), (26, -1), (27, -1), (28, -1), (29, -1), (30, 524288), (31, 2097152), (32, 4096), (33, 4096), (34, -1), (35, -1), (36, 67108864), (37, 2048), (38, 2048), (39, 2048), (40, -1), (41, -1), (42, 131072), (43, 131072), (44, -1), (45, 33554432), (46, 4194304), (47, -1), (48, -1), (49, 16777216), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 33554432), (4, -1), (5, -1), (6, -1), (7, -1), (8, 65536), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, 33554432), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, 131072), (31, 0), (32, 0), (33, 1024), (34, -1), (35, -1), (36, 33554432), (37, 512), (38, 512), (39, 0), (40, -1), (41, -1), (42, 32768), (43, 32768), (44, -1), (45, 16777216), (46, 1048576), (47, -1), (48, -1), (49, 16777216), (50, -1), (51, -1), (52, -1)]

Covered at level 7 : {32, 39, 31}

After reduction : 
 pending  : [37, 3, 8, 30, 33, 45, 38, 42, 43, 46, 49, 36, 24]
 solution : [0, 28, 26, 25]


Before reduction : 
 pending  : [37, 3, 8, 30, 33, 45, 38, 42, 43, 46, 49, 36, 24]
 solution : [0, 28, 26, 25]

Essensial at level 7 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 33554432), (4, -1), (5, -1), (6, -1), (7, -1), (8, 65536), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, 33554432), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, 131072), (31, 0), (32, 0), (33, 1024), (34, -1), (35, -1), (36, 33554432), (37, 512), (38, 512), (39, 0), (40, -1), (41, -1), (42, 32768), (43, 32768), (44, -1), (45, 16777216), (46, 1048576), (47, -1), (48, -1), (49, 16777216), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 33554432), (4, -1), (5, -1), (6, -1), (7, -1), (8, 65536), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, 33554432), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, 131072), (31, -1), (32, -1), (33, 1024), (34, -1), (35, -1), (36, 33554432), (37, 512), (38, 512), (39, -1), (40, -1), (41, -1), (42, 32768), (43, 32768), (44, -1), (45, 16777216), (46, 1048576), (47, -1), (48, -1), (49, 16777216), (50, -1), (51, -1), (52, -1)]

Covered at level 7 : set()

After reduction : 
 pending  : [37, 3, 8, 30, 33, 45, 38, 42, 43, 46, 49, 36, 24]
 solution : [0, 28, 26, 25]


Solution : [0, 28, 26, 25] has cost 21.


Before backtrack at level 7
 pending : [37, 3, 8, 30, 33, 45, 38, 42, 43, 46, 49, 36, 24]
 solution : [0, 28, 26, 25]

After backtrack at level 7
 pending : [37, 3, 8, 30, 33, 45, 38, 42, 43, 46, 49, 36, 24, 31, 32, 39]
 solution : [0, 28, 26, 25]


Invert decision for 25 at level 6


New level: 7
 pending : [37, 3, 8, 30, 33, 45, 38, 42, 43, 46, 49, 36, 24, 31, 32, 39]
 solution : [0, 28, 26]


Before reduction : 
 pending  : [37, 3, 8, 30, 33, 45, 38, 42, 43, 46, 49, 36, 24, 31, 32, 39]
 solution : [0, 28, 26]

Essensial at level 7 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 33554432), (4, -1), (5, -1), (6, -1), (7, -1), (8, 65536), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, 33554432), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, 131072), (31, -1), (32, -1), (33, 1024), (34, -1), (35, -1), (36, 33554432), (37, 512), (38, 512), (39, -1), (40, -1), (41, -1), (42, 32768), (43, 32768), (44, -1), (45, 16777216), (46, 1048576), (47, -1), (48, -1), (49, 16777216), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 134217728), (4, -1), (5, -1), (6, -1), (7, -1), (8, 262144), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, 134217728), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, 524288), (31, 2097152), (32, 4096), (33, 4096), (34, -1), (35, -1), (36, 67108864), (37, 2048), (38, 2048), (39, 2048), (40, -1), (41, -1), (42, 131072), (43, 131072), (44, -1), (45, 33554432), (46, 4194304), (47, -1), (48, -1), (49, 16777216), (50, -1), (51, -1), (52, -1)]

Covered at level 7 : set()

After reduction : 
 pending  : [37, 3, 8, 30, 33, 45, 38, 42, 43, 46, 49, 36, 24, 31, 32, 39]
 solution : [0, 28, 26]


Solution : [0, 28, 26] has cost 14.


Decide in level 7 among pending : [37, 3, 8, 30, 33, 45, 38, 42, 43, 46, 49, 36, 24, 31, 32, 39]

Coverage : [(0, -1), (1, -1), (2, -1), (3, 134217728), (4, -1), (5, -1), (6, -1), (7, -1), (8, 262144), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, 134217728), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, 524288), (31, 2097152), (32, 4096), (33, 4096), (34, -1), (35, -1), (36, 67108864), (37, 2048), (38, 2048), (39, 2048), (40, -1), (41, -1), (42, 131072), (43, 131072), (44, -1), (45, 33554432), (46, 4194304), (47, -1), (48, -1), (49, 16777216), (50, -1), (51, -1), (52, -1)]

Decide 3 with phase True at level 7

After decision at level 7
 pending : [37, 8, 30, 33, 45, 38, 42, 43, 46, 49, 36, 24, 31, 32, 39]
 solution : [0, 28, 26, 3]


New level: 8
 pending : [37, 8, 30, 33, 45, 38, 42, 43, 46, 49, 36, 24, 31, 32, 39]
 solution : [0, 28, 26, 3]


Before reduction : 
 pending  : [37, 8, 30, 33, 45, 38, 42, 43, 46, 49, 36, 24, 31, 32, 39]
 solution : [0, 28, 26, 3]

Essensial at level 8 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 134217728), (4, -1), (5, -1), (6, -1), (7, -1), (8, 262144), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, 134217728), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, 524288), (31, 2097152), (32, 4096), (33, 4096), (34, -1), (35, -1), (36, 67108864), (37, 2048), (38, 2048), (39, 2048), (40, -1), (41, -1), (42, 131072), (43, 131072), (44, -1), (45, 33554432), (46, 4194304), (47, -1), (48, -1), (49, 16777216), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, 0), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, 0), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, 0), (31, 0), (32, 0), (33, 0), (34, -1), (35, -1), (36, 0), (37, 0), (38, 0), (39, 0), (40, -1), (41, -1), (42, 0), (43, 0), (44, -1), (45, 0), (46, 0), (47, -1), (48, -1), (49, 0), (50, -1), (51, -1), (52, -1)]

Covered at level 8 : {32, 33, 36, 37, 38, 39, 8, 42, 43, 45, 46, 49, 24, 30, 31}

After reduction : 
 pending  : []
 solution : [0, 28, 26, 3]


Before reduction : 
 pending  : []
 solution : [0, 28, 26, 3]

Essensial at level 8 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, 0), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, 0), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, 0), (31, 0), (32, 0), (33, 0), (34, -1), (35, -1), (36, 0), (37, 0), (38, 0), (39, 0), (40, -1), (41, -1), (42, 0), (43, 0), (44, -1), (45, 0), (46, 0), (47, -1), (48, -1), (49, 0), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 8 : set()

After reduction : 
 pending  : []
 solution : [0, 28, 26, 3]


Solution : [0, 28, 26, 3] has cost 18.


Before backtrack at level 8
 pending : []
 solution : [0, 28, 26, 3]

After backtrack at level 8
 pending : [37, 8, 30, 33, 45, 38, 42, 43, 46, 49, 36, 24, 31, 32, 39]
 solution : [0, 28, 26, 3]


Invert decision for 3 at level 7


New level: 8
 pending : [37, 8, 30, 33, 45, 38, 42, 43, 46, 49, 36, 24, 31, 32, 39]
 solution : [0, 28, 26]


Before reduction : 
 pending  : [37, 8, 30, 33, 45, 38, 42, 43, 46, 49, 36, 24, 31, 32, 39]
 solution : [0, 28, 26]

Essensial at level 8 : {24}

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, 0), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, 0), (31, 0), (32, 0), (33, 0), (34, -1), (35, -1), (36, 0), (37, 0), (38, 0), (39, 0), (40, -1), (41, -1), (42, 0), (43, 0), (44, -1), (45, 0), (46, 0), (47, -1), (48, -1), (49, 0), (50, -1), (51, -1), (52, -1)]

Covered at level 8 : {32, 33, 36, 37, 38, 39, 8, 42, 43, 45, 46, 49, 30, 31}

After reduction : 
 pending  : []
 solution : [0, 28, 26, 24]


Before reduction : 
 pending  : []
 solution : [0, 28, 26, 24]

Essensial at level 8 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, 0), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, 0), (31, 0), (32, 0), (33, 0), (34, -1), (35, -1), (36, 0), (37, 0), (38, 0), (39, 0), (40, -1), (41, -1), (42, 0), (43, 0), (44, -1), (45, 0), (46, 0), (47, -1), (48, -1), (49, 0), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 8 : set()

After reduction : 
 pending  : []
 solution : [0, 28, 26, 24]


Solution : [0, 28, 26, 24] has cost 21.


Before backtrack at level 8
 pending : []
 solution : [0, 28, 26, 24]

After backtrack at level 8
 pending : [24, 37, 8, 30, 33, 45, 38, 42, 43, 46, 49, 36, 31, 32, 39]
 solution : [0, 28, 26]


Before backtrack at level 7
 pending : [24, 37, 8, 30, 33, 45, 38, 42, 43, 46, 49, 36, 31, 32, 39]
 solution : [0, 28, 26]

After backtrack at level 7
 pending : [24, 37, 8, 30, 33, 45, 38, 42, 43, 46, 49, 36, 31, 32, 39, 3]
 solution : [0, 28, 26]


Before backtrack at level 6
 pending : [24, 37, 8, 30, 33, 45, 38, 42, 43, 46, 49, 36, 31, 32, 39, 3]
 solution : [0, 28, 26]

After backtrack at level 6
 pending : [24, 37, 8, 30, 33, 45, 38, 42, 43, 46, 49, 36, 31, 32, 39, 3, 25]
 solution : [0, 28, 26]


Before backtrack at level 5
 pending : [24, 37, 8, 30, 33, 45, 38, 42, 43, 46, 49, 36, 31, 32, 39, 3, 25]
 solution : [0, 28, 26]

After backtrack at level 5
 pending : [24, 37, 8, 30, 33, 45, 38, 42, 43, 46, 49, 36, 31, 32, 39, 3, 25, 35]
 solution : [0, 28, 26]


Invert decision for 26 at level 4


New level: 5
 pending : [24, 37, 8, 30, 33, 45, 38, 42, 43, 46, 49, 36, 31, 32, 39, 3, 25, 35]
 solution : [0, 28]


Before reduction : 
 pending  : [24, 37, 8, 30, 33, 45, 38, 42, 43, 46, 49, 36, 31, 32, 39, 3, 25, 35]
 solution : [0, 28]

Essensial at level 5 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 134217728), (4, -1), (5, -1), (6, -1), (7, -1), (8, 262144), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, 134217728), (25, 1073741824), (26, -1), (27, -1), (28, -1), (29, -1), (30, 524288), (31, 4194304), (32, 8192), (33, 4096), (34, -1), (35, 2147483648), (36, 67108864), (37, 2048), (38, 2048), (39, 4096), (40, -1), (41, -1), (42, 131072), (43, 131072), (44, -1), (45, 33554432), (46, 4194304), (47, -1), (48, -1), (49, 16777216), (50, -1), (51, -1), (52, -1)]

Covered at level 5 : set()

After reduction : 
 pending  : [24, 37, 8, 30, 33, 45, 38, 42, 43, 46, 49, 36, 31, 32, 39, 3, 25, 35]
 solution : [0, 28]


Solution : [0, 28] has cost 10.


Decide in level 5 among pending : [24, 37, 8, 30, 33, 45, 38, 42, 43, 46, 49, 36, 31, 32, 39, 3, 25, 35]

Coverage : [(0, -1), (1, -1), (2, -1), (3, 134217728), (4, -1), (5, -1), (6, -1), (7, -1), (8, 262144), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, 134217728), (25, 1073741824), (26, -1), (27, -1), (28, -1), (29, -1), (30, 524288), (31, 4194304), (32, 8192), (33, 4096), (34, -1), (35, 2147483648), (36, 67108864), (37, 2048), (38, 2048), (39, 4096), (40, -1), (41, -1), (42, 131072), (43, 131072), (44, -1), (45, 33554432), (46, 4194304), (47, -1), (48, -1), (49, 16777216), (50, -1), (51, -1), (52, -1)]

Decide 35 with phase True at level 5

After decision at level 5
 pending : [24, 37, 8, 30, 33, 45, 38, 42, 43, 46, 49, 36, 31, 32, 39, 3, 25]
 solution : [0, 28, 35]


New level: 6
 pending : [24, 37, 8, 30, 33, 45, 38, 42, 43, 46, 49, 36, 31, 32, 39, 3, 25]
 solution : [0, 28, 35]


Before reduction : 
 pending  : [24, 37, 8, 30, 33, 45, 38, 42, 43, 46, 49, 36, 31, 32, 39, 3, 25]
 solution : [0, 28, 35]

Essensial at level 6 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 134217728), (4, -1), (5, -1), (6, -1), (7, -1), (8, 262144), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, 134217728), (25, 1073741824), (26, -1), (27, -1), (28, -1), (29, -1), (30, 524288), (31, 4194304), (32, 8192), (33, 4096), (34, -1), (35, 2147483648), (36, 67108864), (37, 2048), (38, 2048), (39, 4096), (40, -1), (41, -1), (42, 131072), (43, 131072), (44, -1), (45, 33554432), (46, 4194304), (47, -1), (48, -1), (49, 16777216), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 134217728), (4, -1), (5, -1), (6, -1), (7, -1), (8, 65536), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, 134217728), (25, 4096), (26, -1), (27, -1), (28, -1), (29, -1), (30, 131072), (31, 0), (32, 0), (33, 1024), (34, -1), (35, -1), (36, 16777216), (37, 512), (38, 512), (39, 0), (40, -1), (41, -1), (42, 32768), (43, 32768), (44, -1), (45, 8388608), (46, 1048576), (47, -1), (48, -1), (49, 4194304), (50, -1), (51, -1), (52, -1)]

Covered at level 6 : {32, 39, 31}

After reduction : 
 pending  : [24, 37, 8, 30, 33, 45, 38, 42, 43, 46, 49, 36, 3, 25]
 solution : [0, 28, 35]


Before reduction : 
 pending  : [24, 37, 8, 30, 33, 45, 38, 42, 43, 46, 49, 36, 3, 25]
 solution : [0, 28, 35]

Essensial at level 6 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 134217728), (4, -1), (5, -1), (6, -1), (7, -1), (8, 65536), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, 134217728), (25, 4096), (26, -1), (27, -1), (28, -1), (29, -1), (30, 131072), (31, 0), (32, 0), (33, 1024), (34, -1), (35, -1), (36, 16777216), (37, 512), (38, 512), (39, 0), (40, -1), (41, -1), (42, 32768), (43, 32768), (44, -1), (45, 8388608), (46, 1048576), (47, -1), (48, -1), (49, 4194304), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 134217728), (4, -1), (5, -1), (6, -1), (7, -1), (8, 65536), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, 134217728), (25, 4096), (26, -1), (27, -1), (28, -1), (29, -1), (30, 131072), (31, -1), (32, -1), (33, 1024), (34, -1), (35, -1), (36, 16777216), (37, 512), (38, 512), (39, -1), (40, -1), (41, -1), (42, 32768), (43, 32768), (44, -1), (45, 8388608), (46, 1048576), (47, -1), (48, -1), (49, 4194304), (50, -1), (51, -1), (52, -1)]

Covered at level 6 : set()

After reduction : 
 pending  : [24, 37, 8, 30, 33, 45, 38, 42, 43, 46, 49, 36, 3, 25]
 solution : [0, 28, 35]


Solution : [0, 28, 35] has cost 23.


Before backtrack at level 6
 pending : [24, 37, 8, 30, 33, 45, 38, 42, 43, 46, 49, 36, 3, 25]
 solution : [0, 28, 35]

After backtrack at level 6
 pending : [24, 37, 8, 30, 33, 45, 38, 42, 43, 46, 49, 36, 3, 25, 31, 32, 39]
 solution : [0, 28, 35]


Invert decision for 35 at level 5


New level: 6
 pending : [24, 37, 8, 30, 33, 45, 38, 42, 43, 46, 49, 36, 3, 25, 31, 32, 39]
 solution : [0, 28]


Before reduction : 
 pending  : [24, 37, 8, 30, 33, 45, 38, 42, 43, 46, 49, 36, 3, 25, 31, 32, 39]
 solution : [0, 28]

Essensial at level 6 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 134217728), (4, -1), (5, -1), (6, -1), (7, -1), (8, 65536), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, 134217728), (25, 4096), (26, -1), (27, -1), (28, -1), (29, -1), (30, 131072), (31, -1), (32, -1), (33, 1024), (34, -1), (35, -1), (36, 16777216), (37, 512), (38, 512), (39, -1), (40, -1), (41, -1), (42, 32768), (43, 32768), (44, -1), (45, 8388608), (46, 1048576), (47, -1), (48, -1), (49, 4194304), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 134217728), (4, -1), (5, -1), (6, -1), (7, -1), (8, 262144), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, 134217728), (25, 1073741824), (26, -1), (27, -1), (28, -1), (29, -1), (30, 524288), (31, 4194304), (32, 8192), (33, 4096), (34, -1), (35, -1), (36, 67108864), (37, 2048), (38, 2048), (39, 4096), (40, -1), (41, -1), (42, 131072), (43, 131072), (44, -1), (45, 33554432), (46, 4194304), (47, -1), (48, -1), (49, 16777216), (50, -1), (51, -1), (52, -1)]

Covered at level 6 : set()

After reduction : 
 pending  : [24, 37, 8, 30, 33, 45, 38, 42, 43, 46, 49, 36, 3, 25, 31, 32, 39]
 solution : [0, 28]


Solution : [0, 28] has cost 10.


Decide in level 6 among pending : [24, 37, 8, 30, 33, 45, 38, 42, 43, 46, 49, 36, 3, 25, 31, 32, 39]

Coverage : [(0, -1), (1, -1), (2, -1), (3, 134217728), (4, -1), (5, -1), (6, -1), (7, -1), (8, 262144), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, 134217728), (25, 1073741824), (26, -1), (27, -1), (28, -1), (29, -1), (30, 524288), (31, 4194304), (32, 8192), (33, 4096), (34, -1), (35, -1), (36, 67108864), (37, 2048), (38, 2048), (39, 4096), (40, -1), (41, -1), (42, 131072), (43, 131072), (44, -1), (45, 33554432), (46, 4194304), (47, -1), (48, -1), (49, 16777216), (50, -1), (51, -1), (52, -1)]

Decide 25 with phase True at level 6

After decision at level 6
 pending : [24, 37, 8, 30, 33, 45, 38, 42, 43, 46, 49, 36, 3, 31, 32, 39]
 solution : [0, 28, 25]


New level: 7
 pending : [24, 37, 8, 30, 33, 45, 38, 42, 43, 46, 49, 36, 3, 31, 32, 39]
 solution : [0, 28, 25]


Before reduction : 
 pending  : [24, 37, 8, 30, 33, 45, 38, 42, 43, 46, 49, 36, 3, 31, 32, 39]
 solution : [0, 28, 25]

Essensial at level 7 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 134217728), (4, -1), (5, -1), (6, -1), (7, -1), (8, 262144), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, 134217728), (25, 1073741824), (26, -1), (27, -1), (28, -1), (29, -1), (30, 524288), (31, 4194304), (32, 8192), (33, 4096), (34, -1), (35, -1), (36, 67108864), (37, 2048), (38, 2048), (39, 4096), (40, -1), (41, -1), (42, 131072), (43, 131072), (44, -1), (45, 33554432), (46, 4194304), (47, -1), (48, -1), (49, 16777216), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 33554432), (4, -1), (5, -1), (6, -1), (7, -1), (8, 65536), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, 33554432), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, 131072), (31, 0), (32, 0), (33, 1024), (34, -1), (35, -1), (36, 33554432), (37, 512), (38, 512), (39, 0), (40, -1), (41, -1), (42, 32768), (43, 32768), (44, -1), (45, 16777216), (46, 1048576), (47, -1), (48, -1), (49, 16777216), (50, -1), (51, -1), (52, -1)]

Covered at level 7 : {32, 39, 31}

After reduction : 
 pending  : [24, 37, 8, 30, 33, 45, 38, 42, 43, 46, 49, 36, 3]
 solution : [0, 28, 25]


Before reduction : 
 pending  : [24, 37, 8, 30, 33, 45, 38, 42, 43, 46, 49, 36, 3]
 solution : [0, 28, 25]

Essensial at level 7 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 33554432), (4, -1), (5, -1), (6, -1), (7, -1), (8, 65536), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, 33554432), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, 131072), (31, 0), (32, 0), (33, 1024), (34, -1), (35, -1), (36, 33554432), (37, 512), (38, 512), (39, 0), (40, -1), (41, -1), (42, 32768), (43, 32768), (44, -1), (45, 16777216), (46, 1048576), (47, -1), (48, -1), (49, 16777216), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 33554432), (4, -1), (5, -1), (6, -1), (7, -1), (8, 65536), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, 33554432), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, 131072), (31, -1), (32, -1), (33, 1024), (34, -1), (35, -1), (36, 33554432), (37, 512), (38, 512), (39, -1), (40, -1), (41, -1), (42, 32768), (43, 32768), (44, -1), (45, 16777216), (46, 1048576), (47, -1), (48, -1), (49, 16777216), (50, -1), (51, -1), (52, -1)]

Covered at level 7 : set()

After reduction : 
 pending  : [24, 37, 8, 30, 33, 45, 38, 42, 43, 46, 49, 36, 3]
 solution : [0, 28, 25]


Solution : [0, 28, 25] has cost 17.


Decide in level 7 among pending : [24, 37, 8, 30, 33, 45, 38, 42, 43, 46, 49, 36, 3]

Coverage : [(0, -1), (1, -1), (2, -1), (3, 33554432), (4, -1), (5, -1), (6, -1), (7, -1), (8, 65536), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, 33554432), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, 131072), (31, -1), (32, -1), (33, 1024), (34, -1), (35, -1), (36, 33554432), (37, 512), (38, 512), (39, -1), (40, -1), (41, -1), (42, 32768), (43, 32768), (44, -1), (45, 16777216), (46, 1048576), (47, -1), (48, -1), (49, 16777216), (50, -1), (51, -1), (52, -1)]

Decide 24 with phase True at level 7

After decision at level 7
 pending : [37, 8, 30, 33, 45, 38, 42, 43, 46, 49, 36, 3]
 solution : [0, 28, 25, 24]


New level: 8
 pending : [37, 8, 30, 33, 45, 38, 42, 43, 46, 49, 36, 3]
 solution : [0, 28, 25, 24]


Before reduction : 
 pending  : [37, 8, 30, 33, 45, 38, 42, 43, 46, 49, 36, 3]
 solution : [0, 28, 25, 24]

Essensial at level 8 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 33554432), (4, -1), (5, -1), (6, -1), (7, -1), (8, 65536), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, 33554432), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, 131072), (31, -1), (32, -1), (33, 1024), (34, -1), (35, -1), (36, 33554432), (37, 512), (38, 512), (39, -1), (40, -1), (41, -1), (42, 32768), (43, 32768), (44, -1), (45, 16777216), (46, 1048576), (47, -1), (48, -1), (49, 16777216), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 0), (4, -1), (5, -1), (6, -1), (7, -1), (8, 0), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, 0), (31, -1), (32, -1), (33, 0), (34, -1), (35, -1), (36, 0), (37, 0), (38, 0), (39, -1), (40, -1), (41, -1), (42, 0), (43, 0), (44, -1), (45, 0), (46, 0), (47, -1), (48, -1), (49, 0), (50, -1), (51, -1), (52, -1)]

Covered at level 8 : {33, 3, 36, 37, 38, 8, 42, 43, 45, 46, 49, 30}

After reduction : 
 pending  : []
 solution : [0, 28, 25, 24]


Before reduction : 
 pending  : []
 solution : [0, 28, 25, 24]

Essensial at level 8 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 0), (4, -1), (5, -1), (6, -1), (7, -1), (8, 0), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, 0), (31, -1), (32, -1), (33, 0), (34, -1), (35, -1), (36, 0), (37, 0), (38, 0), (39, -1), (40, -1), (41, -1), (42, 0), (43, 0), (44, -1), (45, 0), (46, 0), (47, -1), (48, -1), (49, 0), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 8 : set()

After reduction : 
 pending  : []
 solution : [0, 28, 25, 24]


Solution : [0, 28, 25, 24] has cost 24.


Before backtrack at level 8
 pending : []
 solution : [0, 28, 25, 24]

After backtrack at level 8
 pending : [37, 8, 30, 33, 45, 38, 42, 43, 46, 49, 36, 3]
 solution : [0, 28, 25, 24]


Invert decision for 24 at level 7


New level: 8
 pending : [37, 8, 30, 33, 45, 38, 42, 43, 46, 49, 36, 3]
 solution : [0, 28, 25]


Before reduction : 
 pending  : [37, 8, 30, 33, 45, 38, 42, 43, 46, 49, 36, 3]
 solution : [0, 28, 25]

Essensial at level 8 : {3}

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, 0), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, 0), (31, -1), (32, -1), (33, 0), (34, -1), (35, -1), (36, 0), (37, 0), (38, 0), (39, -1), (40, -1), (41, -1), (42, 0), (43, 0), (44, -1), (45, 0), (46, 0), (47, -1), (48, -1), (49, 0), (50, -1), (51, -1), (52, -1)]

Covered at level 8 : {33, 36, 37, 38, 8, 42, 43, 45, 46, 49, 30}

After reduction : 
 pending  : []
 solution : [0, 28, 25, 3]


Before reduction : 
 pending  : []
 solution : [0, 28, 25, 3]

Essensial at level 8 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, 0), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, 0), (31, -1), (32, -1), (33, 0), (34, -1), (35, -1), (36, 0), (37, 0), (38, 0), (39, -1), (40, -1), (41, -1), (42, 0), (43, 0), (44, -1), (45, 0), (46, 0), (47, -1), (48, -1), (49, 0), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 8 : set()

After reduction : 
 pending  : []
 solution : [0, 28, 25, 3]


Solution : [0, 28, 25, 3] has cost 21.


Before backtrack at level 8
 pending : []
 solution : [0, 28, 25, 3]

After backtrack at level 8
 pending : [3, 37, 8, 30, 33, 45, 38, 42, 43, 46, 49, 36]
 solution : [0, 28, 25]


Before backtrack at level 7
 pending : [3, 37, 8, 30, 33, 45, 38, 42, 43, 46, 49, 36]
 solution : [0, 28, 25]

After backtrack at level 7
 pending : [3, 37, 8, 30, 33, 45, 38, 42, 43, 46, 49, 36, 31, 32, 39, 24]
 solution : [0, 28, 25]


Invert decision for 25 at level 6


New level: 7
 pending : [3, 37, 8, 30, 33, 45, 38, 42, 43, 46, 49, 36, 31, 32, 39, 24]
 solution : [0, 28]


Before reduction : 
 pending  : [3, 37, 8, 30, 33, 45, 38, 42, 43, 46, 49, 36, 31, 32, 39, 24]
 solution : [0, 28]

Essensial at level 7 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 134217728), (4, -1), (5, -1), (6, -1), (7, -1), (8, 262144), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, 134217728), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, 524288), (31, 4194304), (32, 8192), (33, 4096), (34, -1), (35, -1), (36, 67108864), (37, 2048), (38, 2048), (39, 4096), (40, -1), (41, -1), (42, 131072), (43, 131072), (44, -1), (45, 33554432), (46, 4194304), (47, -1), (48, -1), (49, 16777216), (50, -1), (51, -1), (52, -1)]

Covered at level 7 : set()

After reduction : 
 pending  : [3, 37, 8, 30, 33, 45, 38, 42, 43, 46, 49, 36, 31, 32, 39, 24]
 solution : [0, 28]


Solution : [0, 28] has cost 10.


Decide in level 7 among pending : [3, 37, 8, 30, 33, 45, 38, 42, 43, 46, 49, 36, 31, 32, 39, 24]

Coverage : [(0, -1), (1, -1), (2, -1), (3, 134217728), (4, -1), (5, -1), (6, -1), (7, -1), (8, 262144), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, 134217728), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, 524288), (31, 4194304), (32, 8192), (33, 4096), (34, -1), (35, -1), (36, 67108864), (37, 2048), (38, 2048), (39, 4096), (40, -1), (41, -1), (42, 131072), (43, 131072), (44, -1), (45, 33554432), (46, 4194304), (47, -1), (48, -1), (49, 16777216), (50, -1), (51, -1), (52, -1)]

Decide 3 with phase True at level 7

After decision at level 7
 pending : [37, 8, 30, 33, 45, 38, 42, 43, 46, 49, 36, 31, 32, 39, 24]
 solution : [0, 28, 3]


New level: 8
 pending : [37, 8, 30, 33, 45, 38, 42, 43, 46, 49, 36, 31, 32, 39, 24]
 solution : [0, 28, 3]


Before reduction : 
 pending  : [37, 8, 30, 33, 45, 38, 42, 43, 46, 49, 36, 31, 32, 39, 24]
 solution : [0, 28, 3]

Essensial at level 8 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 134217728), (4, -1), (5, -1), (6, -1), (7, -1), (8, 262144), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, 134217728), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, 524288), (31, 4194304), (32, 8192), (33, 4096), (34, -1), (35, -1), (36, 67108864), (37, 2048), (38, 2048), (39, 4096), (40, -1), (41, -1), (42, 131072), (43, 131072), (44, -1), (45, 33554432), (46, 4194304), (47, -1), (48, -1), (49, 16777216), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, 0), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, 0), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, 0), (31, 0), (32, 0), (33, 0), (34, -1), (35, -1), (36, 0), (37, 0), (38, 0), (39, 0), (40, -1), (41, -1), (42, 0), (43, 0), (44, -1), (45, 0), (46, 0), (47, -1), (48, -1), (49, 0), (50, -1), (51, -1), (52, -1)]

Covered at level 8 : {32, 33, 36, 37, 38, 39, 8, 42, 43, 45, 46, 49, 24, 30, 31}

After reduction : 
 pending  : []
 solution : [0, 28, 3]


Before reduction : 
 pending  : []
 solution : [0, 28, 3]

Essensial at level 8 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, 0), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, 0), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, 0), (31, 0), (32, 0), (33, 0), (34, -1), (35, -1), (36, 0), (37, 0), (38, 0), (39, 0), (40, -1), (41, -1), (42, 0), (43, 0), (44, -1), (45, 0), (46, 0), (47, -1), (48, -1), (49, 0), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 8 : set()

After reduction : 
 pending  : []
 solution : [0, 28, 3]


Solution : [0, 28, 3] has cost 14.


Before backtrack at level 8
 pending : []
 solution : [0, 28, 3]

After backtrack at level 8
 pending : [37, 8, 30, 33, 45, 38, 42, 43, 46, 49, 36, 31, 32, 39, 24]
 solution : [0, 28, 3]


Invert decision for 3 at level 7


New level: 8
 pending : [37, 8, 30, 33, 45, 38, 42, 43, 46, 49, 36, 31, 32, 39, 24]
 solution : [0, 28]


Before reduction : 
 pending  : [37, 8, 30, 33, 45, 38, 42, 43, 46, 49, 36, 31, 32, 39, 24]
 solution : [0, 28]

Essensial at level 8 : {24}

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, 0), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, 0), (31, 0), (32, 0), (33, 0), (34, -1), (35, -1), (36, 0), (37, 0), (38, 0), (39, 0), (40, -1), (41, -1), (42, 0), (43, 0), (44, -1), (45, 0), (46, 0), (47, -1), (48, -1), (49, 0), (50, -1), (51, -1), (52, -1)]

Covered at level 8 : {32, 33, 36, 37, 38, 39, 8, 42, 43, 45, 46, 49, 30, 31}

After reduction : 
 pending  : []
 solution : [0, 28, 24]


Before reduction : 
 pending  : []
 solution : [0, 28, 24]

Essensial at level 8 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, 0), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, 0), (31, 0), (32, 0), (33, 0), (34, -1), (35, -1), (36, 0), (37, 0), (38, 0), (39, 0), (40, -1), (41, -1), (42, 0), (43, 0), (44, -1), (45, 0), (46, 0), (47, -1), (48, -1), (49, 0), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 8 : set()

After reduction : 
 pending  : []
 solution : [0, 28, 24]


Solution : [0, 28, 24] has cost 17.


Before backtrack at level 8
 pending : []
 solution : [0, 28, 24]

After backtrack at level 8
 pending : [24, 37, 8, 30, 33, 45, 38, 42, 43, 46, 49, 36, 31, 32, 39]
 solution : [0, 28]


Before backtrack at level 7
 pending : [24, 37, 8, 30, 33, 45, 38, 42, 43, 46, 49, 36, 31, 32, 39]
 solution : [0, 28]

After backtrack at level 7
 pending : [24, 37, 8, 30, 33, 45, 38, 42, 43, 46, 49, 36, 31, 32, 39, 3]
 solution : [0, 28]


Before backtrack at level 6
 pending : [24, 37, 8, 30, 33, 45, 38, 42, 43, 46, 49, 36, 31, 32, 39, 3]
 solution : [0, 28]

After backtrack at level 6
 pending : [24, 37, 8, 30, 33, 45, 38, 42, 43, 46, 49, 36, 31, 32, 39, 3, 25]
 solution : [0, 28]


Before backtrack at level 5
 pending : [24, 37, 8, 30, 33, 45, 38, 42, 43, 46, 49, 36, 31, 32, 39, 3, 25]
 solution : [0, 28]

After backtrack at level 5
 pending : [24, 37, 8, 30, 33, 45, 38, 42, 43, 46, 49, 36, 31, 32, 39, 3, 25, 35]
 solution : [0, 28]


Before backtrack at level 4
 pending : [24, 37, 8, 30, 33, 45, 38, 42, 43, 46, 49, 36, 31, 32, 39, 3, 25, 35]
 solution : [0, 28]

After backtrack at level 4
 pending : [24, 37, 8, 30, 33, 45, 38, 42, 43, 46, 49, 36, 31, 32, 39, 3, 25, 35, 23, 40, 5, 15, 16, 22, 21, 14, 20, 13, 19, 18, 26]
 solution : [0, 28]


Invert decision for 28 at level 3


New level: 4
 pending : [24, 37, 8, 30, 33, 45, 38, 42, 43, 46, 49, 36, 31, 32, 39, 3, 25, 35, 23, 40, 5, 15, 16, 22, 21, 14, 20, 13, 19, 18, 26]
 solution : [0]


Before reduction : 
 pending  : [24, 37, 8, 30, 33, 45, 38, 42, 43, 46, 49, 36, 31, 32, 39, 3, 25, 35, 23, 40, 5, 15, 16, 22, 21, 14, 20, 13, 19, 18, 26]
 solution : [0]

Essensial at level 4 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 134217728), (4, -1), (5, 1048576), (6, -1), (7, -1), (8, 1048576), (9, -1), (10, -1), (11, -1), (12, -1), (13, 67108864), (14, 33554432), (15, 1572864), (16, 524288), (17, -1), (18, 2147483648), (19, 1073741824), (20, 16777216), (21, 8388608), (22, 262144), (23, 4194304), (24, 134217728), (25, 1073741824), (26, 4294967296), (27, -1), (28, -1), (29, -1), (30, 1048576), (31, 4194304), (32, 32768), (33, 16384), (34, -1), (35, 2147483648), (36, 134217728), (37, 268435456), (38, 16384), (39, 1073741824), (40, 4194304), (41, -1), (42, 524288), (43, 524288), (44, -1), (45, 67108864), (46, 16777216), (47, -1), (48, -1), (49, 67108864), (50, -1), (51, -1), (52, -1)]

Covered at level 4 : set()

After reduction : 
 pending  : [24, 37, 8, 30, 33, 45, 38, 42, 43, 46, 49, 36, 31, 32, 39, 3, 25, 35, 23, 40, 5, 15, 16, 22, 21, 14, 20, 13, 19, 18, 26]
 solution : [0]


Solution : [0] has cost 6.


Decide in level 4 among pending : [24, 37, 8, 30, 33, 45, 38, 42, 43, 46, 49, 36, 31, 32, 39, 3, 25, 35, 23, 40, 5, 15, 16, 22, 21, 14, 20, 13, 19, 18, 26]

Coverage : [(0, -1), (1, -1), (2, -1), (3, 134217728), (4, -1), (5, 1048576), (6, -1), (7, -1), (8, 1048576), (9, -1), (10, -1), (11, -1), (12, -1), (13, 67108864), (14, 33554432), (15, 1572864), (16, 524288), (17, -1), (18, 2147483648), (19, 1073741824), (20, 16777216), (21, 8388608), (22, 262144), (23, 4194304), (24, 134217728), (25, 1073741824), (26, 4294967296), (27, -1), (28, -1), (29, -1), (30, 1048576), (31, 4194304), (32, 32768), (33, 16384), (34, -1), (35, 2147483648), (36, 134217728), (37, 268435456), (38, 16384), (39, 1073741824), (40, 4194304), (41, -1), (42, 524288), (43, 524288), (44, -1), (45, 67108864), (46, 16777216), (47, -1), (48, -1), (49, 67108864), (50, -1), (51, -1), (52, -1)]

Decide 26 with phase True at level 4

After decision at level 4
 pending : [24, 37, 8, 30, 33, 45, 38, 42, 43, 46, 49, 36, 31, 32, 39, 3, 25, 35, 23, 40, 5, 15, 16, 22, 21, 14, 20, 13, 19, 18]
 solution : [0, 26]


New level: 5
 pending : [24, 37, 8, 30, 33, 45, 38, 42, 43, 46, 49, 36, 31, 32, 39, 3, 25, 35, 23, 40, 5, 15, 16, 22, 21, 14, 20, 13, 19, 18]
 solution : [0, 26]


Before reduction : 
 pending  : [24, 37, 8, 30, 33, 45, 38, 42, 43, 46, 49, 36, 31, 32, 39, 3, 25, 35, 23, 40, 5, 15, 16, 22, 21, 14, 20, 13, 19, 18]
 solution : [0, 26]

Essensial at level 5 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 134217728), (4, -1), (5, 1048576), (6, -1), (7, -1), (8, 1048576), (9, -1), (10, -1), (11, -1), (12, -1), (13, 67108864), (14, 33554432), (15, 1572864), (16, 524288), (17, -1), (18, 2147483648), (19, 1073741824), (20, 16777216), (21, 8388608), (22, 262144), (23, 4194304), (24, 134217728), (25, 1073741824), (26, 4294967296), (27, -1), (28, -1), (29, -1), (30, 1048576), (31, 4194304), (32, 32768), (33, 16384), (34, -1), (35, 2147483648), (36, 134217728), (37, 268435456), (38, 16384), (39, 1073741824), (40, 4194304), (41, -1), (42, 524288), (43, 524288), (44, -1), (45, 67108864), (46, 16777216), (47, -1), (48, -1), (49, 67108864), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 134217728), (4, -1), (5, 1048576), (6, -1), (7, -1), (8, 1048576), (9, -1), (10, -1), (11, -1), (12, -1), (13, 67108864), (14, 33554432), (15, 1572864), (16, 524288), (17, -1), (18, 2147483648), (19, 1073741824), (20, 16777216), (21, 8388608), (22, 262144), (23, 4194304), (24, 134217728), (25, 536870912), (26, -1), (27, -1), (28, -1), (29, -1), (30, 1048576), (31, 2097152), (32, 16384), (33, 16384), (34, -1), (35, 1073741824), (36, 134217728), (37, 268435456), (38, 16384), (39, 536870912), (40, 4194304), (41, -1), (42, 524288), (43, 524288), (44, -1), (45, 67108864), (46, 16777216), (47, -1), (48, -1), (49, 67108864), (50, -1), (51, -1), (52, -1)]

Covered at level 5 : set()

After reduction : 
 pending  : [24, 37, 8, 30, 33, 45, 38, 42, 43, 46, 49, 36, 31, 32, 39, 3, 25, 35, 23, 40, 5, 15, 16, 22, 21, 14, 20, 13, 19, 18]
 solution : [0, 26]


Solution : [0, 26] has cost 10.


Decide in level 5 among pending : [24, 37, 8, 30, 33, 45, 38, 42, 43, 46, 49, 36, 31, 32, 39, 3, 25, 35, 23, 40, 5, 15, 16, 22, 21, 14, 20, 13, 19, 18]

Coverage : [(0, -1), (1, -1), (2, -1), (3, 134217728), (4, -1), (5, 1048576), (6, -1), (7, -1), (8, 1048576), (9, -1), (10, -1), (11, -1), (12, -1), (13, 67108864), (14, 33554432), (15, 1572864), (16, 524288), (17, -1), (18, 2147483648), (19, 1073741824), (20, 16777216), (21, 8388608), (22, 262144), (23, 4194304), (24, 134217728), (25, 536870912), (26, -1), (27, -1), (28, -1), (29, -1), (30, 1048576), (31, 2097152), (32, 16384), (33, 16384), (34, -1), (35, 1073741824), (36, 134217728), (37, 268435456), (38, 16384), (39, 536870912), (40, 4194304), (41, -1), (42, 524288), (43, 524288), (44, -1), (45, 67108864), (46, 16777216), (47, -1), (48, -1), (49, 67108864), (50, -1), (51, -1), (52, -1)]

Decide 18 with phase True at level 5

After decision at level 5
 pending : [24, 37, 8, 30, 33, 45, 38, 42, 43, 46, 49, 36, 31, 32, 39, 3, 25, 35, 23, 40, 5, 15, 16, 22, 21, 14, 20, 13, 19]
 solution : [0, 26, 18]


New level: 6
 pending : [24, 37, 8, 30, 33, 45, 38, 42, 43, 46, 49, 36, 31, 32, 39, 3, 25, 35, 23, 40, 5, 15, 16, 22, 21, 14, 20, 13, 19]
 solution : [0, 26, 18]


Before reduction : 
 pending  : [24, 37, 8, 30, 33, 45, 38, 42, 43, 46, 49, 36, 31, 32, 39, 3, 25, 35, 23, 40, 5, 15, 16, 22, 21, 14, 20, 13, 19]
 solution : [0, 26, 18]

Essensial at level 6 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 134217728), (4, -1), (5, 1048576), (6, -1), (7, -1), (8, 1048576), (9, -1), (10, -1), (11, -1), (12, -1), (13, 67108864), (14, 33554432), (15, 1572864), (16, 524288), (17, -1), (18, 2147483648), (19, 1073741824), (20, 16777216), (21, 8388608), (22, 262144), (23, 4194304), (24, 134217728), (25, 536870912), (26, -1), (27, -1), (28, -1), (29, -1), (30, 1048576), (31, 2097152), (32, 16384), (33, 16384), (34, -1), (35, 1073741824), (36, 134217728), (37, 268435456), (38, 16384), (39, 536870912), (40, 4194304), (41, -1), (42, 524288), (43, 524288), (44, -1), (45, 67108864), (46, 16777216), (47, -1), (48, -1), (49, 67108864), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 134217728), (4, -1), (5, 0), (6, -1), (7, -1), (8, 262144), (9, -1), (10, -1), (11, -1), (12, -1), (13, 0), (14, 0), (15, 0), (16, 0), (17, -1), (18, -1), (19, 0), (20, 0), (21, 0), (22, 0), (23, 0), (24, 134217728), (25, 536870912), (26, -1), (27, -1), (28, -1), (29, -1), (30, 524288), (31, 2097152), (32, 4096), (33, 4096), (34, -1), (35, 1073741824), (36, 67108864), (37, 2048), (38, 2048), (39, 2048), (40, 0), (41, -1), (42, 131072), (43, 131072), (44, -1), (45, 33554432), (46, 4194304), (47, -1), (48, -1), (49, 67108864), (50, -1), (51, -1), (52, -1)]

Covered at level 6 : {5, 40, 13, 14, 15, 16, 19, 20, 21, 22, 23}

After reduction : 
 pending  : [24, 37, 8, 30, 33, 45, 38, 42, 43, 46, 49, 36, 31, 32, 39, 3, 25, 35]
 solution : [0, 26, 18]


Before reduction : 
 pending  : [24, 37, 8, 30, 33, 45, 38, 42, 43, 46, 49, 36, 31, 32, 39, 3, 25, 35]
 solution : [0, 26, 18]

Essensial at level 6 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 134217728), (4, -1), (5, 0), (6, -1), (7, -1), (8, 262144), (9, -1), (10, -1), (11, -1), (12, -1), (13, 0), (14, 0), (15, 0), (16, 0), (17, -1), (18, -1), (19, 0), (20, 0), (21, 0), (22, 0), (23, 0), (24, 134217728), (25, 536870912), (26, -1), (27, -1), (28, -1), (29, -1), (30, 524288), (31, 2097152), (32, 4096), (33, 4096), (34, -1), (35, 1073741824), (36, 67108864), (37, 2048), (38, 2048), (39, 2048), (40, 0), (41, -1), (42, 131072), (43, 131072), (44, -1), (45, 33554432), (46, 4194304), (47, -1), (48, -1), (49, 67108864), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 134217728), (4, -1), (5, -1), (6, -1), (7, -1), (8, 262144), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, 134217728), (25, 536870912), (26, -1), (27, -1), (28, -1), (29, -1), (30, 524288), (31, 2097152), (32, 4096), (33, 4096), (34, -1), (35, 1073741824), (36, 67108864), (37, 2048), (38, 2048), (39, 2048), (40, -1), (41, -1), (42, 131072), (43, 131072), (44, -1), (45, 33554432), (46, 4194304), (47, -1), (48, -1), (49, 67108864), (50, -1), (51, -1), (52, -1)]

Covered at level 6 : set()

After reduction : 
 pending  : [24, 37, 8, 30, 33, 45, 38, 42, 43, 46, 49, 36, 31, 32, 39, 3, 25, 35]
 solution : [0, 26, 18]


Solution : [0, 26, 18] has cost 17.


Before backtrack at level 6
 pending : [24, 37, 8, 30, 33, 45, 38, 42, 43, 46, 49, 36, 31, 32, 39, 3, 25, 35]
 solution : [0, 26, 18]

After backtrack at level 6
 pending : [24, 37, 8, 30, 33, 45, 38, 42, 43, 46, 49, 36, 31, 32, 39, 3, 25, 35, 23, 40, 5, 15, 16, 22, 21, 14, 20, 13, 19]
 solution : [0, 26, 18]


Invert decision for 18 at level 5


New level: 6
 pending : [24, 37, 8, 30, 33, 45, 38, 42, 43, 46, 49, 36, 31, 32, 39, 3, 25, 35, 23, 40, 5, 15, 16, 22, 21, 14, 20, 13, 19]
 solution : [0, 26]


Before reduction : 
 pending  : [24, 37, 8, 30, 33, 45, 38, 42, 43, 46, 49, 36, 31, 32, 39, 3, 25, 35, 23, 40, 5, 15, 16, 22, 21, 14, 20, 13, 19]
 solution : [0, 26]

Essensial at level 6 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 134217728), (4, -1), (5, -1), (6, -1), (7, -1), (8, 262144), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, 134217728), (25, 536870912), (26, -1), (27, -1), (28, -1), (29, -1), (30, 524288), (31, 2097152), (32, 4096), (33, 4096), (34, -1), (35, 1073741824), (36, 67108864), (37, 2048), (38, 2048), (39, 2048), (40, -1), (41, -1), (42, 131072), (43, 131072), (44, -1), (45, 33554432), (46, 4194304), (47, -1), (48, -1), (49, 67108864), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 134217728), (4, -1), (5, 1048576), (6, -1), (7, -1), (8, 1048576), (9, -1), (10, -1), (11, -1), (12, -1), (13, 67108864), (14, 33554432), (15, 1572864), (16, 524288), (17, -1), (18, -1), (19, 1073741824), (20, 16777216), (21, 8388608), (22, 262144), (23, 4194304), (24, 134217728), (25, 536870912), (26, -1), (27, -1), (28, -1), (29, -1), (30, 1048576), (31, 2097152), (32, 16384), (33, 16384), (34, -1), (35, 1073741824), (36, 134217728), (37, 268435456), (38, 16384), (39, 536870912), (40, 4194304), (41, -1), (42, 524288), (43, 524288), (44, -1), (45, 67108864), (46, 16777216), (47, -1), (48, -1), (49, 67108864), (50, -1), (51, -1), (52, -1)]

Covered at level 6 : set()

After reduction : 
 pending  : [24, 37, 8, 30, 33, 45, 38, 42, 43, 46, 49, 36, 31, 32, 39, 3, 25, 35, 23, 40, 5, 15, 16, 22, 21, 14, 20, 13, 19]
 solution : [0, 26]


Solution : [0, 26] has cost 10.


Decide in level 6 among pending : [24, 37, 8, 30, 33, 45, 38, 42, 43, 46, 49, 36, 31, 32, 39, 3, 25, 35, 23, 40, 5, 15, 16, 22, 21, 14, 20, 13, 19]

Coverage : [(0, -1), (1, -1), (2, -1), (3, 134217728), (4, -1), (5, 1048576), (6, -1), (7, -1), (8, 1048576), (9, -1), (10, -1), (11, -1), (12, -1), (13, 67108864), (14, 33554432), (15, 1572864), (16, 524288), (17, -1), (18, -1), (19, 1073741824), (20, 16777216), (21, 8388608), (22, 262144), (23, 4194304), (24, 134217728), (25, 536870912), (26, -1), (27, -1), (28, -1), (29, -1), (30, 1048576), (31, 2097152), (32, 16384), (33, 16384), (34, -1), (35, 1073741824), (36, 134217728), (37, 268435456), (38, 16384), (39, 536870912), (40, 4194304), (41, -1), (42, 524288), (43, 524288), (44, -1), (45, 67108864), (46, 16777216), (47, -1), (48, -1), (49, 67108864), (50, -1), (51, -1), (52, -1)]

Decide 35 with phase True at level 6

After decision at level 6
 pending : [24, 37, 8, 30, 33, 45, 38, 42, 43, 46, 49, 36, 31, 32, 39, 3, 25, 23, 40, 5, 15, 16, 22, 21, 14, 20, 13, 19]
 solution : [0, 26, 35]


New level: 7
 pending : [24, 37, 8, 30, 33, 45, 38, 42, 43, 46, 49, 36, 31, 32, 39, 3, 25, 23, 40, 5, 15, 16, 22, 21, 14, 20, 13, 19]
 solution : [0, 26, 35]


Before reduction : 
 pending  : [24, 37, 8, 30, 33, 45, 38, 42, 43, 46, 49, 36, 31, 32, 39, 3, 25, 23, 40, 5, 15, 16, 22, 21, 14, 20, 13, 19]
 solution : [0, 26, 35]

Essensial at level 7 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 134217728), (4, -1), (5, 1048576), (6, -1), (7, -1), (8, 1048576), (9, -1), (10, -1), (11, -1), (12, -1), (13, 67108864), (14, 33554432), (15, 1572864), (16, 524288), (17, -1), (18, -1), (19, 1073741824), (20, 16777216), (21, 8388608), (22, 262144), (23, 4194304), (24, 134217728), (25, 536870912), (26, -1), (27, -1), (28, -1), (29, -1), (30, 1048576), (31, 2097152), (32, 16384), (33, 16384), (34, -1), (35, 1073741824), (36, 134217728), (37, 268435456), (38, 16384), (39, 536870912), (40, 4194304), (41, -1), (42, 524288), (43, 524288), (44, -1), (45, 67108864), (46, 16777216), (47, -1), (48, -1), (49, 67108864), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 134217728), (4, -1), (5, 1048576), (6, -1), (7, -1), (8, 262144), (9, -1), (10, -1), (11, -1), (12, -1), (13, 67108864), (14, 33554432), (15, 1572864), (16, 524288), (17, -1), (18, -1), (19, 1073741824), (20, 16777216), (21, 8388608), (22, 262144), (23, 4194304), (24, 134217728), (25, 16384), (26, -1), (27, -1), (28, -1), (29, -1), (30, 262144), (31, 0), (32, 0), (33, 4096), (34, -1), (35, -1), (36, 33554432), (37, 268435456), (38, 4096), (39, 16384), (40, 4194304), (41, -1), (42, 131072), (43, 131072), (44, -1), (45, 16777216), (46, 4194304), (47, -1), (48, -1), (49, 16777216), (50, -1), (51, -1), (52, -1)]

Covered at level 7 : {32, 31}

After reduction : 
 pending  : [24, 37, 8, 30, 33, 45, 38, 42, 43, 46, 49, 36, 39, 3, 25, 23, 40, 5, 15, 16, 22, 21, 14, 20, 13, 19]
 solution : [0, 26, 35]


Before reduction : 
 pending  : [24, 37, 8, 30, 33, 45, 38, 42, 43, 46, 49, 36, 39, 3, 25, 23, 40, 5, 15, 16, 22, 21, 14, 20, 13, 19]
 solution : [0, 26, 35]

Essensial at level 7 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 134217728), (4, -1), (5, 1048576), (6, -1), (7, -1), (8, 262144), (9, -1), (10, -1), (11, -1), (12, -1), (13, 67108864), (14, 33554432), (15, 1572864), (16, 524288), (17, -1), (18, -1), (19, 1073741824), (20, 16777216), (21, 8388608), (22, 262144), (23, 4194304), (24, 134217728), (25, 16384), (26, -1), (27, -1), (28, -1), (29, -1), (30, 262144), (31, 0), (32, 0), (33, 4096), (34, -1), (35, -1), (36, 33554432), (37, 268435456), (38, 4096), (39, 16384), (40, 4194304), (41, -1), (42, 131072), (43, 131072), (44, -1), (45, 16777216), (46, 4194304), (47, -1), (48, -1), (49, 16777216), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 134217728), (4, -1), (5, 1048576), (6, -1), (7, -1), (8, 262144), (9, -1), (10, -1), (11, -1), (12, -1), (13, 67108864), (14, 33554432), (15, 1572864), (16, 524288), (17, -1), (18, -1), (19, 1073741824), (20, 16777216), (21, 8388608), (22, 262144), (23, 4194304), (24, 134217728), (25, 16384), (26, -1), (27, -1), (28, -1), (29, -1), (30, 262144), (31, -1), (32, -1), (33, 4096), (34, -1), (35, -1), (36, 33554432), (37, 268435456), (38, 4096), (39, 16384), (40, 4194304), (41, -1), (42, 131072), (43, 131072), (44, -1), (45, 16777216), (46, 4194304), (47, -1), (48, -1), (49, 16777216), (50, -1), (51, -1), (52, -1)]

Covered at level 7 : set()

After reduction : 
 pending  : [24, 37, 8, 30, 33, 45, 38, 42, 43, 46, 49, 36, 39, 3, 25, 23, 40, 5, 15, 16, 22, 21, 14, 20, 13, 19]
 solution : [0, 26, 35]


Solution : [0, 26, 35] has cost 23.


Before backtrack at level 7
 pending : [24, 37, 8, 30, 33, 45, 38, 42, 43, 46, 49, 36, 39, 3, 25, 23, 40, 5, 15, 16, 22, 21, 14, 20, 13, 19]
 solution : [0, 26, 35]

After backtrack at level 7
 pending : [24, 37, 8, 30, 33, 45, 38, 42, 43, 46, 49, 36, 39, 3, 25, 23, 40, 5, 15, 16, 22, 21, 14, 20, 13, 19, 31, 32]
 solution : [0, 26, 35]


Invert decision for 35 at level 6


New level: 7
 pending : [24, 37, 8, 30, 33, 45, 38, 42, 43, 46, 49, 36, 39, 3, 25, 23, 40, 5, 15, 16, 22, 21, 14, 20, 13, 19, 31, 32]
 solution : [0, 26]


Before reduction : 
 pending  : [24, 37, 8, 30, 33, 45, 38, 42, 43, 46, 49, 36, 39, 3, 25, 23, 40, 5, 15, 16, 22, 21, 14, 20, 13, 19, 31, 32]
 solution : [0, 26]

Essensial at level 7 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 134217728), (4, -1), (5, 1048576), (6, -1), (7, -1), (8, 262144), (9, -1), (10, -1), (11, -1), (12, -1), (13, 67108864), (14, 33554432), (15, 1572864), (16, 524288), (17, -1), (18, -1), (19, 1073741824), (20, 16777216), (21, 8388608), (22, 262144), (23, 4194304), (24, 134217728), (25, 16384), (26, -1), (27, -1), (28, -1), (29, -1), (30, 262144), (31, -1), (32, -1), (33, 4096), (34, -1), (35, -1), (36, 33554432), (37, 268435456), (38, 4096), (39, 16384), (40, 4194304), (41, -1), (42, 131072), (43, 131072), (44, -1), (45, 16777216), (46, 4194304), (47, -1), (48, -1), (49, 16777216), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 134217728), (4, -1), (5, 1048576), (6, -1), (7, -1), (8, 1048576), (9, -1), (10, -1), (11, -1), (12, -1), (13, 67108864), (14, 33554432), (15, 1572864), (16, 524288), (17, -1), (18, -1), (19, 1073741824), (20, 16777216), (21, 8388608), (22, 262144), (23, 4194304), (24, 134217728), (25, 536870912), (26, -1), (27, -1), (28, -1), (29, -1), (30, 1048576), (31, 2097152), (32, 16384), (33, 16384), (34, -1), (35, -1), (36, 134217728), (37, 268435456), (38, 16384), (39, 536870912), (40, 4194304), (41, -1), (42, 524288), (43, 524288), (44, -1), (45, 67108864), (46, 16777216), (47, -1), (48, -1), (49, 67108864), (50, -1), (51, -1), (52, -1)]

Covered at level 7 : set()

After reduction : 
 pending  : [24, 37, 8, 30, 33, 45, 38, 42, 43, 46, 49, 36, 39, 3, 25, 23, 40, 5, 15, 16, 22, 21, 14, 20, 13, 19, 31, 32]
 solution : [0, 26]


Solution : [0, 26] has cost 10.


Decide in level 7 among pending : [24, 37, 8, 30, 33, 45, 38, 42, 43, 46, 49, 36, 39, 3, 25, 23, 40, 5, 15, 16, 22, 21, 14, 20, 13, 19, 31, 32]

Coverage : [(0, -1), (1, -1), (2, -1), (3, 134217728), (4, -1), (5, 1048576), (6, -1), (7, -1), (8, 1048576), (9, -1), (10, -1), (11, -1), (12, -1), (13, 67108864), (14, 33554432), (15, 1572864), (16, 524288), (17, -1), (18, -1), (19, 1073741824), (20, 16777216), (21, 8388608), (22, 262144), (23, 4194304), (24, 134217728), (25, 536870912), (26, -1), (27, -1), (28, -1), (29, -1), (30, 1048576), (31, 2097152), (32, 16384), (33, 16384), (34, -1), (35, -1), (36, 134217728), (37, 268435456), (38, 16384), (39, 536870912), (40, 4194304), (41, -1), (42, 524288), (43, 524288), (44, -1), (45, 67108864), (46, 16777216), (47, -1), (48, -1), (49, 67108864), (50, -1), (51, -1), (52, -1)]

Decide 19 with phase True at level 7

After decision at level 7
 pending : [24, 37, 8, 30, 33, 45, 38, 42, 43, 46, 49, 36, 39, 3, 25, 23, 40, 5, 15, 16, 22, 21, 14, 20, 13, 31, 32]
 solution : [0, 26, 19]


New level: 8
 pending : [24, 37, 8, 30, 33, 45, 38, 42, 43, 46, 49, 36, 39, 3, 25, 23, 40, 5, 15, 16, 22, 21, 14, 20, 13, 31, 32]
 solution : [0, 26, 19]


Before reduction : 
 pending  : [24, 37, 8, 30, 33, 45, 38, 42, 43, 46, 49, 36, 39, 3, 25, 23, 40, 5, 15, 16, 22, 21, 14, 20, 13, 31, 32]
 solution : [0, 26, 19]

Essensial at level 8 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 134217728), (4, -1), (5, 1048576), (6, -1), (7, -1), (8, 1048576), (9, -1), (10, -1), (11, -1), (12, -1), (13, 67108864), (14, 33554432), (15, 1572864), (16, 524288), (17, -1), (18, -1), (19, 1073741824), (20, 16777216), (21, 8388608), (22, 262144), (23, 4194304), (24, 134217728), (25, 536870912), (26, -1), (27, -1), (28, -1), (29, -1), (30, 1048576), (31, 2097152), (32, 16384), (33, 16384), (34, -1), (35, -1), (36, 134217728), (37, 268435456), (38, 16384), (39, 536870912), (40, 4194304), (41, -1), (42, 524288), (43, 524288), (44, -1), (45, 67108864), (46, 16777216), (47, -1), (48, -1), (49, 67108864), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 134217728), (4, -1), (5, 0), (6, -1), (7, -1), (8, 262144), (9, -1), (10, -1), (11, -1), (12, -1), (13, 0), (14, 0), (15, 0), (16, 0), (17, -1), (18, -1), (19, -1), (20, 0), (21, 0), (22, 0), (23, 0), (24, 134217728), (25, 536870912), (26, -1), (27, -1), (28, -1), (29, -1), (30, 524288), (31, 2097152), (32, 4096), (33, 4096), (34, -1), (35, -1), (36, 67108864), (37, 2048), (38, 2048), (39, 2048), (40, 0), (41, -1), (42, 131072), (43, 131072), (44, -1), (45, 67108864), (46, 16777216), (47, -1), (48, -1), (49, 67108864), (50, -1), (51, -1), (52, -1)]

Covered at level 8 : {5, 40, 13, 14, 15, 16, 20, 21, 22, 23}

After reduction : 
 pending  : [24, 37, 8, 30, 33, 45, 38, 42, 43, 46, 49, 36, 39, 3, 25, 31, 32]
 solution : [0, 26, 19]


Before reduction : 
 pending  : [24, 37, 8, 30, 33, 45, 38, 42, 43, 46, 49, 36, 39, 3, 25, 31, 32]
 solution : [0, 26, 19]

Essensial at level 8 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 134217728), (4, -1), (5, 0), (6, -1), (7, -1), (8, 262144), (9, -1), (10, -1), (11, -1), (12, -1), (13, 0), (14, 0), (15, 0), (16, 0), (17, -1), (18, -1), (19, -1), (20, 0), (21, 0), (22, 0), (23, 0), (24, 134217728), (25, 536870912), (26, -1), (27, -1), (28, -1), (29, -1), (30, 524288), (31, 2097152), (32, 4096), (33, 4096), (34, -1), (35, -1), (36, 67108864), (37, 2048), (38, 2048), (39, 2048), (40, 0), (41, -1), (42, 131072), (43, 131072), (44, -1), (45, 67108864), (46, 16777216), (47, -1), (48, -1), (49, 67108864), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 134217728), (4, -1), (5, -1), (6, -1), (7, -1), (8, 262144), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, 134217728), (25, 536870912), (26, -1), (27, -1), (28, -1), (29, -1), (30, 524288), (31, 2097152), (32, 4096), (33, 4096), (34, -1), (35, -1), (36, 67108864), (37, 2048), (38, 2048), (39, 2048), (40, -1), (41, -1), (42, 131072), (43, 131072), (44, -1), (45, 67108864), (46, 16777216), (47, -1), (48, -1), (49, 67108864), (50, -1), (51, -1), (52, -1)]

Covered at level 8 : set()

After reduction : 
 pending  : [24, 37, 8, 30, 33, 45, 38, 42, 43, 46, 49, 36, 39, 3, 25, 31, 32]
 solution : [0, 26, 19]


Solution : [0, 26, 19] has cost 17.


Before backtrack at level 8
 pending : [24, 37, 8, 30, 33, 45, 38, 42, 43, 46, 49, 36, 39, 3, 25, 31, 32]
 solution : [0, 26, 19]

After backtrack at level 8
 pending : [24, 37, 8, 30, 33, 45, 38, 42, 43, 46, 49, 36, 39, 3, 25, 31, 32, 23, 40, 5, 15, 16, 22, 21, 14, 20, 13]
 solution : [0, 26, 19]


Invert decision for 19 at level 7


New level: 8
 pending : [24, 37, 8, 30, 33, 45, 38, 42, 43, 46, 49, 36, 39, 3, 25, 31, 32, 23, 40, 5, 15, 16, 22, 21, 14, 20, 13]
 solution : [0, 26]


Before reduction : 
 pending  : [24, 37, 8, 30, 33, 45, 38, 42, 43, 46, 49, 36, 39, 3, 25, 31, 32, 23, 40, 5, 15, 16, 22, 21, 14, 20, 13]
 solution : [0, 26]

Essensial at level 8 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 134217728), (4, -1), (5, -1), (6, -1), (7, -1), (8, 262144), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, 134217728), (25, 536870912), (26, -1), (27, -1), (28, -1), (29, -1), (30, 524288), (31, 2097152), (32, 4096), (33, 4096), (34, -1), (35, -1), (36, 67108864), (37, 2048), (38, 2048), (39, 2048), (40, -1), (41, -1), (42, 131072), (43, 131072), (44, -1), (45, 67108864), (46, 16777216), (47, -1), (48, -1), (49, 67108864), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 134217728), (4, -1), (5, 1048576), (6, -1), (7, -1), (8, 1048576), (9, -1), (10, -1), (11, -1), (12, -1), (13, 67108864), (14, 33554432), (15, 1572864), (16, 524288), (17, -1), (18, -1), (19, -1), (20, 16777216), (21, 8388608), (22, 262144), (23, 4194304), (24, 134217728), (25, 536870912), (26, -1), (27, -1), (28, -1), (29, -1), (30, 1048576), (31, 2097152), (32, 16384), (33, 16384), (34, -1), (35, -1), (36, 134217728), (37, 268435456), (38, 16384), (39, 536870912), (40, 4194304), (41, -1), (42, 524288), (43, 524288), (44, -1), (45, 67108864), (46, 16777216), (47, -1), (48, -1), (49, 67108864), (50, -1), (51, -1), (52, -1)]

Covered at level 8 : set()

After reduction : 
 pending  : [24, 37, 8, 30, 33, 45, 38, 42, 43, 46, 49, 36, 39, 3, 25, 31, 32, 23, 40, 5, 15, 16, 22, 21, 14, 20, 13]
 solution : [0, 26]


Solution : [0, 26] has cost 10.


Decide in level 8 among pending : [24, 37, 8, 30, 33, 45, 38, 42, 43, 46, 49, 36, 39, 3, 25, 31, 32, 23, 40, 5, 15, 16, 22, 21, 14, 20, 13]

Coverage : [(0, -1), (1, -1), (2, -1), (3, 134217728), (4, -1), (5, 1048576), (6, -1), (7, -1), (8, 1048576), (9, -1), (10, -1), (11, -1), (12, -1), (13, 67108864), (14, 33554432), (15, 1572864), (16, 524288), (17, -1), (18, -1), (19, -1), (20, 16777216), (21, 8388608), (22, 262144), (23, 4194304), (24, 134217728), (25, 536870912), (26, -1), (27, -1), (28, -1), (29, -1), (30, 1048576), (31, 2097152), (32, 16384), (33, 16384), (34, -1), (35, -1), (36, 134217728), (37, 268435456), (38, 16384), (39, 536870912), (40, 4194304), (41, -1), (42, 524288), (43, 524288), (44, -1), (45, 67108864), (46, 16777216), (47, -1), (48, -1), (49, 67108864), (50, -1), (51, -1), (52, -1)]

Decide 39 with phase True at level 8

After decision at level 8
 pending : [24, 37, 8, 30, 33, 45, 38, 42, 43, 46, 49, 36, 3, 25, 31, 32, 23, 40, 5, 15, 16, 22, 21, 14, 20, 13]
 solution : [0, 26, 39]


New level: 9
 pending : [24, 37, 8, 30, 33, 45, 38, 42, 43, 46, 49, 36, 3, 25, 31, 32, 23, 40, 5, 15, 16, 22, 21, 14, 20, 13]
 solution : [0, 26, 39]


Before reduction : 
 pending  : [24, 37, 8, 30, 33, 45, 38, 42, 43, 46, 49, 36, 3, 25, 31, 32, 23, 40, 5, 15, 16, 22, 21, 14, 20, 13]
 solution : [0, 26, 39]

Essensial at level 9 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 134217728), (4, -1), (5, 1048576), (6, -1), (7, -1), (8, 1048576), (9, -1), (10, -1), (11, -1), (12, -1), (13, 67108864), (14, 33554432), (15, 1572864), (16, 524288), (17, -1), (18, -1), (19, -1), (20, 16777216), (21, 8388608), (22, 262144), (23, 4194304), (24, 134217728), (25, 536870912), (26, -1), (27, -1), (28, -1), (29, -1), (30, 1048576), (31, 2097152), (32, 16384), (33, 16384), (34, -1), (35, -1), (36, 134217728), (37, 268435456), (38, 16384), (39, 536870912), (40, 4194304), (41, -1), (42, 524288), (43, 524288), (44, -1), (45, 67108864), (46, 16777216), (47, -1), (48, -1), (49, 67108864), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 134217728), (4, -1), (5, 1048576), (6, -1), (7, -1), (8, 1048576), (9, -1), (10, -1), (11, -1), (12, -1), (13, 67108864), (14, 33554432), (15, 1572864), (16, 524288), (17, -1), (18, -1), (19, -1), (20, 16777216), (21, 8388608), (22, 262144), (23, 4194304), (24, 134217728), (25, 268435456), (26, -1), (27, -1), (28, -1), (29, -1), (30, 1048576), (31, 1048576), (32, 8192), (33, 16384), (34, -1), (35, -1), (36, 134217728), (37, 134217728), (38, 16384), (39, -1), (40, 4194304), (41, -1), (42, 524288), (43, 524288), (44, -1), (45, 67108864), (46, 16777216), (47, -1), (48, -1), (49, 67108864), (50, -1), (51, -1), (52, -1)]

Covered at level 9 : set()

After reduction : 
 pending  : [24, 37, 8, 30, 33, 45, 38, 42, 43, 46, 49, 36, 3, 25, 31, 32, 23, 40, 5, 15, 16, 22, 21, 14, 20, 13]
 solution : [0, 26, 39]


Solution : [0, 26, 39] has cost 24.


Before backtrack at level 9
 pending : [24, 37, 8, 30, 33, 45, 38, 42, 43, 46, 49, 36, 3, 25, 31, 32, 23, 40, 5, 15, 16, 22, 21, 14, 20, 13]
 solution : [0, 26, 39]

After backtrack at level 9
 pending : [24, 37, 8, 30, 33, 45, 38, 42, 43, 46, 49, 36, 3, 25, 31, 32, 23, 40, 5, 15, 16, 22, 21, 14, 20, 13]
 solution : [0, 26, 39]


Invert decision for 39 at level 8


New level: 9
 pending : [24, 37, 8, 30, 33, 45, 38, 42, 43, 46, 49, 36, 3, 25, 31, 32, 23, 40, 5, 15, 16, 22, 21, 14, 20, 13]
 solution : [0, 26]


Before reduction : 
 pending  : [24, 37, 8, 30, 33, 45, 38, 42, 43, 46, 49, 36, 3, 25, 31, 32, 23, 40, 5, 15, 16, 22, 21, 14, 20, 13]
 solution : [0, 26]

Essensial at level 9 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 134217728), (4, -1), (5, 1048576), (6, -1), (7, -1), (8, 1048576), (9, -1), (10, -1), (11, -1), (12, -1), (13, 67108864), (14, 33554432), (15, 1572864), (16, 524288), (17, -1), (18, -1), (19, -1), (20, 16777216), (21, 8388608), (22, 262144), (23, 4194304), (24, 134217728), (25, 268435456), (26, -1), (27, -1), (28, -1), (29, -1), (30, 1048576), (31, 1048576), (32, 8192), (33, 16384), (34, -1), (35, -1), (36, 134217728), (37, 134217728), (38, 16384), (39, -1), (40, 4194304), (41, -1), (42, 524288), (43, 524288), (44, -1), (45, 67108864), (46, 16777216), (47, -1), (48, -1), (49, 67108864), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 134217728), (4, -1), (5, 1048576), (6, -1), (7, -1), (8, 1048576), (9, -1), (10, -1), (11, -1), (12, -1), (13, 67108864), (14, 33554432), (15, 1572864), (16, 524288), (17, -1), (18, -1), (19, -1), (20, 16777216), (21, 8388608), (22, 262144), (23, 4194304), (24, 134217728), (25, 536870912), (26, -1), (27, -1), (28, -1), (29, -1), (30, 1048576), (31, 2097152), (32, 16384), (33, 16384), (34, -1), (35, -1), (36, 134217728), (37, 268435456), (38, 16384), (39, -1), (40, 4194304), (41, -1), (42, 524288), (43, 524288), (44, -1), (45, 67108864), (46, 16777216), (47, -1), (48, -1), (49, 67108864), (50, -1), (51, -1), (52, -1)]

Covered at level 9 : set()

After reduction : 
 pending  : [24, 37, 8, 30, 33, 45, 38, 42, 43, 46, 49, 36, 3, 25, 31, 32, 23, 40, 5, 15, 16, 22, 21, 14, 20, 13]
 solution : [0, 26]


Solution : [0, 26] has cost 10.


Decide in level 9 among pending : [24, 37, 8, 30, 33, 45, 38, 42, 43, 46, 49, 36, 3, 25, 31, 32, 23, 40, 5, 15, 16, 22, 21, 14, 20, 13]

Coverage : [(0, -1), (1, -1), (2, -1), (3, 134217728), (4, -1), (5, 1048576), (6, -1), (7, -1), (8, 1048576), (9, -1), (10, -1), (11, -1), (12, -1), (13, 67108864), (14, 33554432), (15, 1572864), (16, 524288), (17, -1), (18, -1), (19, -1), (20, 16777216), (21, 8388608), (22, 262144), (23, 4194304), (24, 134217728), (25, 536870912), (26, -1), (27, -1), (28, -1), (29, -1), (30, 1048576), (31, 2097152), (32, 16384), (33, 16384), (34, -1), (35, -1), (36, 134217728), (37, 268435456), (38, 16384), (39, -1), (40, 4194304), (41, -1), (42, 524288), (43, 524288), (44, -1), (45, 67108864), (46, 16777216), (47, -1), (48, -1), (49, 67108864), (50, -1), (51, -1), (52, -1)]

Decide 25 with phase True at level 9

After decision at level 9
 pending : [24, 37, 8, 30, 33, 45, 38, 42, 43, 46, 49, 36, 3, 31, 32, 23, 40, 5, 15, 16, 22, 21, 14, 20, 13]
 solution : [0, 26, 25]


New level: 10
 pending : [24, 37, 8, 30, 33, 45, 38, 42, 43, 46, 49, 36, 3, 31, 32, 23, 40, 5, 15, 16, 22, 21, 14, 20, 13]
 solution : [0, 26, 25]


Before reduction : 
 pending  : [24, 37, 8, 30, 33, 45, 38, 42, 43, 46, 49, 36, 3, 31, 32, 23, 40, 5, 15, 16, 22, 21, 14, 20, 13]
 solution : [0, 26, 25]

Essensial at level 10 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 134217728), (4, -1), (5, 1048576), (6, -1), (7, -1), (8, 1048576), (9, -1), (10, -1), (11, -1), (12, -1), (13, 67108864), (14, 33554432), (15, 1572864), (16, 524288), (17, -1), (18, -1), (19, -1), (20, 16777216), (21, 8388608), (22, 262144), (23, 4194304), (24, 134217728), (25, 536870912), (26, -1), (27, -1), (28, -1), (29, -1), (30, 1048576), (31, 2097152), (32, 16384), (33, 16384), (34, -1), (35, -1), (36, 134217728), (37, 268435456), (38, 16384), (39, -1), (40, 4194304), (41, -1), (42, 524288), (43, 524288), (44, -1), (45, 67108864), (46, 16777216), (47, -1), (48, -1), (49, 67108864), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 33554432), (4, -1), (5, 1048576), (6, -1), (7, -1), (8, 262144), (9, -1), (10, -1), (11, -1), (12, -1), (13, 67108864), (14, 33554432), (15, 1572864), (16, 524288), (17, -1), (18, -1), (19, -1), (20, 16777216), (21, 8388608), (22, 262144), (23, 4194304), (24, 33554432), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, 262144), (31, 0), (32, 0), (33, 4096), (34, -1), (35, -1), (36, 67108864), (37, 134217728), (38, 4096), (39, -1), (40, 4194304), (41, -1), (42, 131072), (43, 131072), (44, -1), (45, 33554432), (46, 4194304), (47, -1), (48, -1), (49, 67108864), (50, -1), (51, -1), (52, -1)]

Covered at level 10 : {32, 31}

After reduction : 
 pending  : [24, 37, 8, 30, 33, 45, 38, 42, 43, 46, 49, 36, 3, 23, 40, 5, 15, 16, 22, 21, 14, 20, 13]
 solution : [0, 26, 25]


Before reduction : 
 pending  : [24, 37, 8, 30, 33, 45, 38, 42, 43, 46, 49, 36, 3, 23, 40, 5, 15, 16, 22, 21, 14, 20, 13]
 solution : [0, 26, 25]

Essensial at level 10 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 33554432), (4, -1), (5, 1048576), (6, -1), (7, -1), (8, 262144), (9, -1), (10, -1), (11, -1), (12, -1), (13, 67108864), (14, 33554432), (15, 1572864), (16, 524288), (17, -1), (18, -1), (19, -1), (20, 16777216), (21, 8388608), (22, 262144), (23, 4194304), (24, 33554432), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, 262144), (31, 0), (32, 0), (33, 4096), (34, -1), (35, -1), (36, 67108864), (37, 134217728), (38, 4096), (39, -1), (40, 4194304), (41, -1), (42, 131072), (43, 131072), (44, -1), (45, 33554432), (46, 4194304), (47, -1), (48, -1), (49, 67108864), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 33554432), (4, -1), (5, 1048576), (6, -1), (7, -1), (8, 262144), (9, -1), (10, -1), (11, -1), (12, -1), (13, 67108864), (14, 33554432), (15, 1572864), (16, 524288), (17, -1), (18, -1), (19, -1), (20, 16777216), (21, 8388608), (22, 262144), (23, 4194304), (24, 33554432), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, 262144), (31, -1), (32, -1), (33, 4096), (34, -1), (35, -1), (36, 67108864), (37, 134217728), (38, 4096), (39, -1), (40, 4194304), (41, -1), (42, 131072), (43, 131072), (44, -1), (45, 33554432), (46, 4194304), (47, -1), (48, -1), (49, 67108864), (50, -1), (51, -1), (52, -1)]

Covered at level 10 : set()

After reduction : 
 pending  : [24, 37, 8, 30, 33, 45, 38, 42, 43, 46, 49, 36, 3, 23, 40, 5, 15, 16, 22, 21, 14, 20, 13]
 solution : [0, 26, 25]


Solution : [0, 26, 25] has cost 17.


Before backtrack at level 10
 pending : [24, 37, 8, 30, 33, 45, 38, 42, 43, 46, 49, 36, 3, 23, 40, 5, 15, 16, 22, 21, 14, 20, 13]
 solution : [0, 26, 25]

After backtrack at level 10
 pending : [24, 37, 8, 30, 33, 45, 38, 42, 43, 46, 49, 36, 3, 23, 40, 5, 15, 16, 22, 21, 14, 20, 13, 31, 32]
 solution : [0, 26, 25]


Invert decision for 25 at level 9


New level: 10
 pending : [24, 37, 8, 30, 33, 45, 38, 42, 43, 46, 49, 36, 3, 23, 40, 5, 15, 16, 22, 21, 14, 20, 13, 31, 32]
 solution : [0, 26]


Before reduction : 
 pending  : [24, 37, 8, 30, 33, 45, 38, 42, 43, 46, 49, 36, 3, 23, 40, 5, 15, 16, 22, 21, 14, 20, 13, 31, 32]
 solution : [0, 26]

Essensial at level 10 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 33554432), (4, -1), (5, 1048576), (6, -1), (7, -1), (8, 262144), (9, -1), (10, -1), (11, -1), (12, -1), (13, 67108864), (14, 33554432), (15, 1572864), (16, 524288), (17, -1), (18, -1), (19, -1), (20, 16777216), (21, 8388608), (22, 262144), (23, 4194304), (24, 33554432), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, 262144), (31, -1), (32, -1), (33, 4096), (34, -1), (35, -1), (36, 67108864), (37, 134217728), (38, 4096), (39, -1), (40, 4194304), (41, -1), (42, 131072), (43, 131072), (44, -1), (45, 33554432), (46, 4194304), (47, -1), (48, -1), (49, 67108864), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 134217728), (4, -1), (5, 1048576), (6, -1), (7, -1), (8, 1048576), (9, -1), (10, -1), (11, -1), (12, -1), (13, 67108864), (14, 33554432), (15, 1572864), (16, 524288), (17, -1), (18, -1), (19, -1), (20, 16777216), (21, 8388608), (22, 262144), (23, 4194304), (24, 134217728), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, 1048576), (31, 2097152), (32, 16384), (33, 16384), (34, -1), (35, -1), (36, 134217728), (37, 268435456), (38, 16384), (39, -1), (40, 4194304), (41, -1), (42, 524288), (43, 524288), (44, -1), (45, 67108864), (46, 16777216), (47, -1), (48, -1), (49, 67108864), (50, -1), (51, -1), (52, -1)]

Covered at level 10 : set()

After reduction : 
 pending  : [24, 37, 8, 30, 33, 45, 38, 42, 43, 46, 49, 36, 3, 23, 40, 5, 15, 16, 22, 21, 14, 20, 13, 31, 32]
 solution : [0, 26]


Solution : [0, 26] has cost 10.


Decide in level 10 among pending : [24, 37, 8, 30, 33, 45, 38, 42, 43, 46, 49, 36, 3, 23, 40, 5, 15, 16, 22, 21, 14, 20, 13, 31, 32]

Coverage : [(0, -1), (1, -1), (2, -1), (3, 134217728), (4, -1), (5, 1048576), (6, -1), (7, -1), (8, 1048576), (9, -1), (10, -1), (11, -1), (12, -1), (13, 67108864), (14, 33554432), (15, 1572864), (16, 524288), (17, -1), (18, -1), (19, -1), (20, 16777216), (21, 8388608), (22, 262144), (23, 4194304), (24, 134217728), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, 1048576), (31, 2097152), (32, 16384), (33, 16384), (34, -1), (35, -1), (36, 134217728), (37, 268435456), (38, 16384), (39, -1), (40, 4194304), (41, -1), (42, 524288), (43, 524288), (44, -1), (45, 67108864), (46, 16777216), (47, -1), (48, -1), (49, 67108864), (50, -1), (51, -1), (52, -1)]

Decide 37 with phase True at level 10

After decision at level 10
 pending : [24, 8, 30, 33, 45, 38, 42, 43, 46, 49, 36, 3, 23, 40, 5, 15, 16, 22, 21, 14, 20, 13, 31, 32]
 solution : [0, 26, 37]


New level: 11
 pending : [24, 8, 30, 33, 45, 38, 42, 43, 46, 49, 36, 3, 23, 40, 5, 15, 16, 22, 21, 14, 20, 13, 31, 32]
 solution : [0, 26, 37]


Before reduction : 
 pending  : [24, 8, 30, 33, 45, 38, 42, 43, 46, 49, 36, 3, 23, 40, 5, 15, 16, 22, 21, 14, 20, 13, 31, 32]
 solution : [0, 26, 37]

Essensial at level 11 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 134217728), (4, -1), (5, 1048576), (6, -1), (7, -1), (8, 1048576), (9, -1), (10, -1), (11, -1), (12, -1), (13, 67108864), (14, 33554432), (15, 1572864), (16, 524288), (17, -1), (18, -1), (19, -1), (20, 16777216), (21, 8388608), (22, 262144), (23, 4194304), (24, 134217728), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, 1048576), (31, 2097152), (32, 16384), (33, 16384), (34, -1), (35, -1), (36, 134217728), (37, 268435456), (38, 16384), (39, -1), (40, 4194304), (41, -1), (42, 524288), (43, 524288), (44, -1), (45, 67108864), (46, 16777216), (47, -1), (48, -1), (49, 67108864), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 33554432), (4, -1), (5, 524288), (6, -1), (7, -1), (8, 262144), (9, -1), (10, -1), (11, -1), (12, -1), (13, 33554432), (14, 16777216), (15, 524288), (16, 262144), (17, -1), (18, -1), (19, -1), (20, 16777216), (21, 8388608), (22, 262144), (23, 1048576), (24, 33554432), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, 262144), (31, 2097152), (32, 4096), (33, 4096), (34, -1), (35, -1), (36, 134217728), (37, -1), (38, 4096), (39, -1), (40, 1048576), (41, -1), (42, 131072), (43, 131072), (44, -1), (45, 33554432), (46, 4194304), (47, -1), (48, -1), (49, 67108864), (50, -1), (51, -1), (52, -1)]

Covered at level 11 : set()

After reduction : 
 pending  : [24, 8, 30, 33, 45, 38, 42, 43, 46, 49, 36, 3, 23, 40, 5, 15, 16, 22, 21, 14, 20, 13, 31, 32]
 solution : [0, 26, 37]


Solution : [0, 26, 37] has cost 28.


Before backtrack at level 11
 pending : [24, 8, 30, 33, 45, 38, 42, 43, 46, 49, 36, 3, 23, 40, 5, 15, 16, 22, 21, 14, 20, 13, 31, 32]
 solution : [0, 26, 37]

After backtrack at level 11
 pending : [24, 8, 30, 33, 45, 38, 42, 43, 46, 49, 36, 3, 23, 40, 5, 15, 16, 22, 21, 14, 20, 13, 31, 32]
 solution : [0, 26, 37]


Invert decision for 37 at level 10


New level: 11
 pending : [24, 8, 30, 33, 45, 38, 42, 43, 46, 49, 36, 3, 23, 40, 5, 15, 16, 22, 21, 14, 20, 13, 31, 32]
 solution : [0, 26]


Before reduction : 
 pending  : [24, 8, 30, 33, 45, 38, 42, 43, 46, 49, 36, 3, 23, 40, 5, 15, 16, 22, 21, 14, 20, 13, 31, 32]
 solution : [0, 26]

Essensial at level 11 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 33554432), (4, -1), (5, 524288), (6, -1), (7, -1), (8, 262144), (9, -1), (10, -1), (11, -1), (12, -1), (13, 33554432), (14, 16777216), (15, 524288), (16, 262144), (17, -1), (18, -1), (19, -1), (20, 16777216), (21, 8388608), (22, 262144), (23, 1048576), (24, 33554432), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, 262144), (31, 2097152), (32, 4096), (33, 4096), (34, -1), (35, -1), (36, 134217728), (37, -1), (38, 4096), (39, -1), (40, 1048576), (41, -1), (42, 131072), (43, 131072), (44, -1), (45, 33554432), (46, 4194304), (47, -1), (48, -1), (49, 67108864), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 134217728), (4, -1), (5, 1048576), (6, -1), (7, -1), (8, 1048576), (9, -1), (10, -1), (11, -1), (12, -1), (13, 67108864), (14, 33554432), (15, 1572864), (16, 524288), (17, -1), (18, -1), (19, -1), (20, 16777216), (21, 8388608), (22, 262144), (23, 4194304), (24, 134217728), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, 1048576), (31, 2097152), (32, 16384), (33, 16384), (34, -1), (35, -1), (36, 134217728), (37, -1), (38, 16384), (39, -1), (40, 4194304), (41, -1), (42, 524288), (43, 524288), (44, -1), (45, 67108864), (46, 16777216), (47, -1), (48, -1), (49, 67108864), (50, -1), (51, -1), (52, -1)]

Covered at level 11 : set()

After reduction : 
 pending  : [24, 8, 30, 33, 45, 38, 42, 43, 46, 49, 36, 3, 23, 40, 5, 15, 16, 22, 21, 14, 20, 13, 31, 32]
 solution : [0, 26]


Solution : [0, 26] has cost 10.


Decide in level 11 among pending : [24, 8, 30, 33, 45, 38, 42, 43, 46, 49, 36, 3, 23, 40, 5, 15, 16, 22, 21, 14, 20, 13, 31, 32]

Coverage : [(0, -1), (1, -1), (2, -1), (3, 134217728), (4, -1), (5, 1048576), (6, -1), (7, -1), (8, 1048576), (9, -1), (10, -1), (11, -1), (12, -1), (13, 67108864), (14, 33554432), (15, 1572864), (16, 524288), (17, -1), (18, -1), (19, -1), (20, 16777216), (21, 8388608), (22, 262144), (23, 4194304), (24, 134217728), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, 1048576), (31, 2097152), (32, 16384), (33, 16384), (34, -1), (35, -1), (36, 134217728), (37, -1), (38, 16384), (39, -1), (40, 4194304), (41, -1), (42, 524288), (43, 524288), (44, -1), (45, 67108864), (46, 16777216), (47, -1), (48, -1), (49, 67108864), (50, -1), (51, -1), (52, -1)]

Decide 24 with phase True at level 11

After decision at level 11
 pending : [8, 30, 33, 45, 38, 42, 43, 46, 49, 36, 3, 23, 40, 5, 15, 16, 22, 21, 14, 20, 13, 31, 32]
 solution : [0, 26, 24]


New level: 12
 pending : [8, 30, 33, 45, 38, 42, 43, 46, 49, 36, 3, 23, 40, 5, 15, 16, 22, 21, 14, 20, 13, 31, 32]
 solution : [0, 26, 24]


Before reduction : 
 pending  : [8, 30, 33, 45, 38, 42, 43, 46, 49, 36, 3, 23, 40, 5, 15, 16, 22, 21, 14, 20, 13, 31, 32]
 solution : [0, 26, 24]

Essensial at level 12 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 134217728), (4, -1), (5, 1048576), (6, -1), (7, -1), (8, 1048576), (9, -1), (10, -1), (11, -1), (12, -1), (13, 67108864), (14, 33554432), (15, 1572864), (16, 524288), (17, -1), (18, -1), (19, -1), (20, 16777216), (21, 8388608), (22, 262144), (23, 4194304), (24, 134217728), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, 1048576), (31, 2097152), (32, 16384), (33, 16384), (34, -1), (35, -1), (36, 134217728), (37, -1), (38, 16384), (39, -1), (40, 4194304), (41, -1), (42, 524288), (43, 524288), (44, -1), (45, 67108864), (46, 16777216), (47, -1), (48, -1), (49, 67108864), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 0), (4, -1), (5, 524288), (6, -1), (7, -1), (8, 0), (9, -1), (10, -1), (11, -1), (12, -1), (13, 33554432), (14, 16777216), (15, 524288), (16, 262144), (17, -1), (18, -1), (19, -1), (20, 16777216), (21, 8388608), (22, 262144), (23, 2097152), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, 0), (31, 0), (32, 0), (33, 0), (34, -1), (35, -1), (36, 0), (37, -1), (38, 0), (39, -1), (40, 2097152), (41, -1), (42, 0), (43, 0), (44, -1), (45, 0), (46, 0), (47, -1), (48, -1), (49, 0), (50, -1), (51, -1), (52, -1)]

Covered at level 12 : {32, 33, 3, 36, 38, 8, 42, 43, 45, 46, 49, 30, 31}

After reduction : 
 pending  : [23, 40, 5, 15, 16, 22, 21, 14, 20, 13]
 solution : [0, 26, 24]


Before reduction : 
 pending  : [23, 40, 5, 15, 16, 22, 21, 14, 20, 13]
 solution : [0, 26, 24]

Essensial at level 12 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 0), (4, -1), (5, 524288), (6, -1), (7, -1), (8, 0), (9, -1), (10, -1), (11, -1), (12, -1), (13, 33554432), (14, 16777216), (15, 524288), (16, 262144), (17, -1), (18, -1), (19, -1), (20, 16777216), (21, 8388608), (22, 262144), (23, 2097152), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, 0), (31, 0), (32, 0), (33, 0), (34, -1), (35, -1), (36, 0), (37, -1), (38, 0), (39, -1), (40, 2097152), (41, -1), (42, 0), (43, 0), (44, -1), (45, 0), (46, 0), (47, -1), (48, -1), (49, 0), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 524288), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, 33554432), (14, 16777216), (15, 524288), (16, 262144), (17, -1), (18, -1), (19, -1), (20, 16777216), (21, 8388608), (22, 262144), (23, 2097152), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, 2097152), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 12 : set()

After reduction : 
 pending  : [23, 40, 5, 15, 16, 22, 21, 14, 20, 13]
 solution : [0, 26, 24]


Solution : [0, 26, 24] has cost 17.


Before backtrack at level 12
 pending : [23, 40, 5, 15, 16, 22, 21, 14, 20, 13]
 solution : [0, 26, 24]

After backtrack at level 12
 pending : [23, 40, 5, 15, 16, 22, 21, 14, 20, 13, 8, 30, 33, 45, 38, 42, 43, 46, 49, 36, 3, 31, 32]
 solution : [0, 26, 24]


Invert decision for 24 at level 11


New level: 12
 pending : [23, 40, 5, 15, 16, 22, 21, 14, 20, 13, 8, 30, 33, 45, 38, 42, 43, 46, 49, 36, 3, 31, 32]
 solution : [0, 26]


Before reduction : 
 pending  : [23, 40, 5, 15, 16, 22, 21, 14, 20, 13, 8, 30, 33, 45, 38, 42, 43, 46, 49, 36, 3, 31, 32]
 solution : [0, 26]

Essensial at level 12 : {3}

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 524288), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, 33554432), (14, 16777216), (15, 524288), (16, 262144), (17, -1), (18, -1), (19, -1), (20, 16777216), (21, 8388608), (22, 262144), (23, 2097152), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, 2097152), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 524288), (6, -1), (7, -1), (8, 0), (9, -1), (10, -1), (11, -1), (12, -1), (13, 33554432), (14, 16777216), (15, 524288), (16, 262144), (17, -1), (18, -1), (19, -1), (20, 16777216), (21, 8388608), (22, 262144), (23, 2097152), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, 0), (31, 0), (32, 0), (33, 0), (34, -1), (35, -1), (36, 0), (37, -1), (38, 0), (39, -1), (40, 2097152), (41, -1), (42, 0), (43, 0), (44, -1), (45, 0), (46, 0), (47, -1), (48, -1), (49, 0), (50, -1), (51, -1), (52, -1)]

Covered at level 12 : {32, 33, 36, 38, 8, 42, 43, 45, 46, 49, 30, 31}

After reduction : 
 pending  : [23, 40, 5, 15, 16, 22, 21, 14, 20, 13]
 solution : [0, 26, 3]


Before reduction : 
 pending  : [23, 40, 5, 15, 16, 22, 21, 14, 20, 13]
 solution : [0, 26, 3]

Essensial at level 12 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 524288), (6, -1), (7, -1), (8, 0), (9, -1), (10, -1), (11, -1), (12, -1), (13, 33554432), (14, 16777216), (15, 524288), (16, 262144), (17, -1), (18, -1), (19, -1), (20, 16777216), (21, 8388608), (22, 262144), (23, 2097152), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, 0), (31, 0), (32, 0), (33, 0), (34, -1), (35, -1), (36, 0), (37, -1), (38, 0), (39, -1), (40, 2097152), (41, -1), (42, 0), (43, 0), (44, -1), (45, 0), (46, 0), (47, -1), (48, -1), (49, 0), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 524288), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, 33554432), (14, 16777216), (15, 524288), (16, 262144), (17, -1), (18, -1), (19, -1), (20, 16777216), (21, 8388608), (22, 262144), (23, 2097152), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, 2097152), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 12 : set()

After reduction : 
 pending  : [23, 40, 5, 15, 16, 22, 21, 14, 20, 13]
 solution : [0, 26, 3]


Solution : [0, 26, 3] has cost 14.


Decide in level 12 among pending : [23, 40, 5, 15, 16, 22, 21, 14, 20, 13]

Coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 524288), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, 33554432), (14, 16777216), (15, 524288), (16, 262144), (17, -1), (18, -1), (19, -1), (20, 16777216), (21, 8388608), (22, 262144), (23, 2097152), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, 2097152), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Decide 13 with phase True at level 12

After decision at level 12
 pending : [23, 40, 5, 15, 16, 22, 21, 14, 20]
 solution : [0, 26, 3, 13]


New level: 13
 pending : [23, 40, 5, 15, 16, 22, 21, 14, 20]
 solution : [0, 26, 3, 13]


Before reduction : 
 pending  : [23, 40, 5, 15, 16, 22, 21, 14, 20]
 solution : [0, 26, 3, 13]

Essensial at level 13 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 524288), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, 33554432), (14, 16777216), (15, 524288), (16, 262144), (17, -1), (18, -1), (19, -1), (20, 16777216), (21, 8388608), (22, 262144), (23, 2097152), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, 2097152), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 0), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 0), (15, 0), (16, 0), (17, -1), (18, -1), (19, -1), (20, 262144), (21, 65536), (22, 65536), (23, 2048), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, 2048), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 13 : {16, 5, 14, 15}

After reduction : 
 pending  : [23, 40, 22, 21, 20]
 solution : [0, 26, 3, 13]


Before reduction : 
 pending  : [23, 40, 22, 21, 20]
 solution : [0, 26, 3, 13]

Essensial at level 13 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 0), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 0), (15, 0), (16, 0), (17, -1), (18, -1), (19, -1), (20, 262144), (21, 65536), (22, 65536), (23, 2048), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, 2048), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, 262144), (21, 65536), (22, 65536), (23, 2048), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, 2048), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 13 : set()

After reduction : 
 pending  : [23, 40, 22, 21, 20]
 solution : [0, 26, 3, 13]


Solution : [0, 26, 3, 13] has cost 23.


Before backtrack at level 13
 pending : [23, 40, 22, 21, 20]
 solution : [0, 26, 3, 13]

After backtrack at level 13
 pending : [23, 40, 22, 21, 20, 5, 15, 16, 14]
 solution : [0, 26, 3, 13]


Invert decision for 13 at level 12


New level: 13
 pending : [23, 40, 22, 21, 20, 5, 15, 16, 14]
 solution : [0, 26, 3]


Before reduction : 
 pending  : [23, 40, 22, 21, 20, 5, 15, 16, 14]
 solution : [0, 26, 3]

Essensial at level 13 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, 262144), (21, 65536), (22, 65536), (23, 2048), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, 2048), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 524288), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 16777216), (15, 524288), (16, 262144), (17, -1), (18, -1), (19, -1), (20, 16777216), (21, 8388608), (22, 262144), (23, 2097152), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, 2097152), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 13 : set()

After reduction : 
 pending  : [23, 40, 22, 21, 20, 5, 15, 16, 14]
 solution : [0, 26, 3]


Solution : [0, 26, 3] has cost 14.


Decide in level 13 among pending : [23, 40, 22, 21, 20, 5, 15, 16, 14]

Coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 524288), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 16777216), (15, 524288), (16, 262144), (17, -1), (18, -1), (19, -1), (20, 16777216), (21, 8388608), (22, 262144), (23, 2097152), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, 2097152), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Decide 20 with phase True at level 13

After decision at level 13
 pending : [23, 40, 22, 21, 5, 15, 16, 14]
 solution : [0, 26, 3, 20]


New level: 14
 pending : [23, 40, 22, 21, 5, 15, 16, 14]
 solution : [0, 26, 3, 20]


Before reduction : 
 pending  : [23, 40, 22, 21, 5, 15, 16, 14]
 solution : [0, 26, 3, 20]

Essensial at level 14 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 524288), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 16777216), (15, 524288), (16, 262144), (17, -1), (18, -1), (19, -1), (20, 16777216), (21, 8388608), (22, 262144), (23, 2097152), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, 2097152), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 262144), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 4194304), (15, 262144), (16, 0), (17, -1), (18, -1), (19, -1), (20, -1), (21, 0), (22, 0), (23, 524288), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, 524288), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 14 : {16, 21, 22}

After reduction : 
 pending  : [23, 40, 5, 15, 14]
 solution : [0, 26, 3, 20]


Before reduction : 
 pending  : [23, 40, 5, 15, 14]
 solution : [0, 26, 3, 20]

Essensial at level 14 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 262144), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 4194304), (15, 262144), (16, 0), (17, -1), (18, -1), (19, -1), (20, -1), (21, 0), (22, 0), (23, 524288), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, 524288), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 262144), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 4194304), (15, 262144), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, 524288), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, 524288), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 14 : set()

After reduction : 
 pending  : [23, 40, 5, 15, 14]
 solution : [0, 26, 3, 20]


Solution : [0, 26, 3, 20] has cost 21.


Before backtrack at level 14
 pending : [23, 40, 5, 15, 14]
 solution : [0, 26, 3, 20]

After backtrack at level 14
 pending : [23, 40, 5, 15, 14, 22, 21, 16]
 solution : [0, 26, 3, 20]


Invert decision for 20 at level 13


New level: 14
 pending : [23, 40, 5, 15, 14, 22, 21, 16]
 solution : [0, 26, 3]


Before reduction : 
 pending  : [23, 40, 5, 15, 14, 22, 21, 16]
 solution : [0, 26, 3]

Essensial at level 14 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 262144), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 4194304), (15, 262144), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, 524288), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, 524288), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 524288), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 16777216), (15, 524288), (16, 262144), (17, -1), (18, -1), (19, -1), (20, -1), (21, 8388608), (22, 262144), (23, 2097152), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, 2097152), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 14 : set()

After reduction : 
 pending  : [23, 40, 5, 15, 14, 22, 21, 16]
 solution : [0, 26, 3]


Solution : [0, 26, 3] has cost 14.


Decide in level 14 among pending : [23, 40, 5, 15, 14, 22, 21, 16]

Coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 524288), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 16777216), (15, 524288), (16, 262144), (17, -1), (18, -1), (19, -1), (20, -1), (21, 8388608), (22, 262144), (23, 2097152), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, 2097152), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Decide 14 with phase True at level 14

After decision at level 14
 pending : [23, 40, 5, 15, 22, 21, 16]
 solution : [0, 26, 3, 14]


New level: 15
 pending : [23, 40, 5, 15, 22, 21, 16]
 solution : [0, 26, 3, 14]


Before reduction : 
 pending  : [23, 40, 5, 15, 22, 21, 16]
 solution : [0, 26, 3, 14]

Essensial at level 15 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 524288), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 16777216), (15, 524288), (16, 262144), (17, -1), (18, -1), (19, -1), (20, -1), (21, 8388608), (22, 262144), (23, 2097152), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, 2097152), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 0), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, 0), (16, 0), (17, -1), (18, -1), (19, -1), (20, -1), (21, 65536), (22, 65536), (23, 2048), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, 2048), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 15 : {16, 5, 15}

After reduction : 
 pending  : [23, 40, 22, 21]
 solution : [0, 26, 3, 14]


Before reduction : 
 pending  : [23, 40, 22, 21]
 solution : [0, 26, 3, 14]

Essensial at level 15 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 0), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, 0), (16, 0), (17, -1), (18, -1), (19, -1), (20, -1), (21, 65536), (22, 65536), (23, 2048), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, 2048), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, 65536), (22, 65536), (23, 2048), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, 2048), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 15 : set()

After reduction : 
 pending  : [23, 40, 22, 21]
 solution : [0, 26, 3, 14]


Solution : [0, 26, 3, 14] has cost 23.


Before backtrack at level 15
 pending : [23, 40, 22, 21]
 solution : [0, 26, 3, 14]

After backtrack at level 15
 pending : [23, 40, 22, 21, 5, 15, 16]
 solution : [0, 26, 3, 14]


Invert decision for 14 at level 14


New level: 15
 pending : [23, 40, 22, 21, 5, 15, 16]
 solution : [0, 26, 3]


Before reduction : 
 pending  : [23, 40, 22, 21, 5, 15, 16]
 solution : [0, 26, 3]

Essensial at level 15 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, 65536), (22, 65536), (23, 2048), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, 2048), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 524288), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, 524288), (16, 262144), (17, -1), (18, -1), (19, -1), (20, -1), (21, 8388608), (22, 262144), (23, 2097152), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, 2097152), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 15 : set()

After reduction : 
 pending  : [23, 40, 22, 21, 5, 15, 16]
 solution : [0, 26, 3]


Solution : [0, 26, 3] has cost 14.


Decide in level 15 among pending : [23, 40, 22, 21, 5, 15, 16]

Coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 524288), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, 524288), (16, 262144), (17, -1), (18, -1), (19, -1), (20, -1), (21, 8388608), (22, 262144), (23, 2097152), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, 2097152), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Decide 21 with phase True at level 15

After decision at level 15
 pending : [23, 40, 22, 5, 15, 16]
 solution : [0, 26, 3, 21]


New level: 16
 pending : [23, 40, 22, 5, 15, 16]
 solution : [0, 26, 3, 21]


Before reduction : 
 pending  : [23, 40, 22, 5, 15, 16]
 solution : [0, 26, 3, 21]

Essensial at level 16 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 524288), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, 524288), (16, 262144), (17, -1), (18, -1), (19, -1), (20, -1), (21, 8388608), (22, 262144), (23, 2097152), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, 2097152), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 262144), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, 262144), (16, 0), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, 0), (23, 524288), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, 524288), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 16 : {16, 22}

After reduction : 
 pending  : [23, 40, 5, 15]
 solution : [0, 26, 3, 21]


Before reduction : 
 pending  : [23, 40, 5, 15]
 solution : [0, 26, 3, 21]

Essensial at level 16 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 262144), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, 262144), (16, 0), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, 0), (23, 524288), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, 524288), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 262144), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, 262144), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, 524288), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, 524288), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 16 : set()

After reduction : 
 pending  : [23, 40, 5, 15]
 solution : [0, 26, 3, 21]


Solution : [0, 26, 3, 21] has cost 21.


Before backtrack at level 16
 pending : [23, 40, 5, 15]
 solution : [0, 26, 3, 21]

After backtrack at level 16
 pending : [23, 40, 5, 15, 22, 16]
 solution : [0, 26, 3, 21]


Invert decision for 21 at level 15


New level: 16
 pending : [23, 40, 5, 15, 22, 16]
 solution : [0, 26, 3]


Before reduction : 
 pending  : [23, 40, 5, 15, 22, 16]
 solution : [0, 26, 3]

Essensial at level 16 : {22}

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 262144), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, 262144), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, 524288), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, 524288), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 524288), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, 524288), (16, 131072), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, 2097152), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, 2097152), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 16 : set()

After reduction : 
 pending  : [23, 40, 5, 15, 16]
 solution : [0, 26, 3, 22]


Before reduction : 
 pending  : [23, 40, 5, 15, 16]
 solution : [0, 26, 3, 22]

Essensial at level 16 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 524288), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, 524288), (16, 131072), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, 2097152), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, 2097152), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 524288), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, 524288), (16, 131072), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, 2097152), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, 2097152), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 16 : set()

After reduction : 
 pending  : [23, 40, 5, 15, 16]
 solution : [0, 26, 3, 22]


Solution : [0, 26, 3, 22] has cost 21.


Before backtrack at level 16
 pending : [23, 40, 5, 15, 16]
 solution : [0, 26, 3, 22]

After backtrack at level 16
 pending : [23, 40, 5, 15, 16, 22]
 solution : [0, 26, 3]


Before backtrack at level 15
 pending : [23, 40, 5, 15, 16, 22]
 solution : [0, 26, 3]

After backtrack at level 15
 pending : [23, 40, 5, 15, 16, 22, 21]
 solution : [0, 26, 3]


Before backtrack at level 14
 pending : [23, 40, 5, 15, 16, 22, 21]
 solution : [0, 26, 3]

After backtrack at level 14
 pending : [23, 40, 5, 15, 16, 22, 21, 14]
 solution : [0, 26, 3]


Before backtrack at level 13
 pending : [23, 40, 5, 15, 16, 22, 21, 14]
 solution : [0, 26, 3]

After backtrack at level 13
 pending : [23, 40, 5, 15, 16, 22, 21, 14, 20]
 solution : [0, 26, 3]


Before backtrack at level 12
 pending : [23, 40, 5, 15, 16, 22, 21, 14, 20]
 solution : [0, 26, 3]

After backtrack at level 12
 pending : [23, 40, 5, 15, 16, 22, 21, 14, 20, 3, 8, 30, 33, 45, 38, 42, 43, 46, 49, 36, 31, 32, 13]
 solution : [0, 26]


Before backtrack at level 11
 pending : [23, 40, 5, 15, 16, 22, 21, 14, 20, 3, 8, 30, 33, 45, 38, 42, 43, 46, 49, 36, 31, 32, 13]
 solution : [0, 26]

After backtrack at level 11
 pending : [23, 40, 5, 15, 16, 22, 21, 14, 20, 3, 8, 30, 33, 45, 38, 42, 43, 46, 49, 36, 31, 32, 13, 24]
 solution : [0, 26]


Before backtrack at level 10
 pending : [23, 40, 5, 15, 16, 22, 21, 14, 20, 3, 8, 30, 33, 45, 38, 42, 43, 46, 49, 36, 31, 32, 13, 24]
 solution : [0, 26]

After backtrack at level 10
 pending : [23, 40, 5, 15, 16, 22, 21, 14, 20, 3, 8, 30, 33, 45, 38, 42, 43, 46, 49, 36, 31, 32, 13, 24, 37]
 solution : [0, 26]


Before backtrack at level 9
 pending : [23, 40, 5, 15, 16, 22, 21, 14, 20, 3, 8, 30, 33, 45, 38, 42, 43, 46, 49, 36, 31, 32, 13, 24, 37]
 solution : [0, 26]

After backtrack at level 9
 pending : [23, 40, 5, 15, 16, 22, 21, 14, 20, 3, 8, 30, 33, 45, 38, 42, 43, 46, 49, 36, 31, 32, 13, 24, 37, 25]
 solution : [0, 26]


Before backtrack at level 8
 pending : [23, 40, 5, 15, 16, 22, 21, 14, 20, 3, 8, 30, 33, 45, 38, 42, 43, 46, 49, 36, 31, 32, 13, 24, 37, 25]
 solution : [0, 26]

After backtrack at level 8
 pending : [23, 40, 5, 15, 16, 22, 21, 14, 20, 3, 8, 30, 33, 45, 38, 42, 43, 46, 49, 36, 31, 32, 13, 24, 37, 25, 39]
 solution : [0, 26]


Before backtrack at level 7
 pending : [23, 40, 5, 15, 16, 22, 21, 14, 20, 3, 8, 30, 33, 45, 38, 42, 43, 46, 49, 36, 31, 32, 13, 24, 37, 25, 39]
 solution : [0, 26]

After backtrack at level 7
 pending : [23, 40, 5, 15, 16, 22, 21, 14, 20, 3, 8, 30, 33, 45, 38, 42, 43, 46, 49, 36, 31, 32, 13, 24, 37, 25, 39, 19]
 solution : [0, 26]


Before backtrack at level 6
 pending : [23, 40, 5, 15, 16, 22, 21, 14, 20, 3, 8, 30, 33, 45, 38, 42, 43, 46, 49, 36, 31, 32, 13, 24, 37, 25, 39, 19]
 solution : [0, 26]

After backtrack at level 6
 pending : [23, 40, 5, 15, 16, 22, 21, 14, 20, 3, 8, 30, 33, 45, 38, 42, 43, 46, 49, 36, 31, 32, 13, 24, 37, 25, 39, 19, 35]
 solution : [0, 26]


Before backtrack at level 5
 pending : [23, 40, 5, 15, 16, 22, 21, 14, 20, 3, 8, 30, 33, 45, 38, 42, 43, 46, 49, 36, 31, 32, 13, 24, 37, 25, 39, 19, 35]
 solution : [0, 26]

After backtrack at level 5
 pending : [23, 40, 5, 15, 16, 22, 21, 14, 20, 3, 8, 30, 33, 45, 38, 42, 43, 46, 49, 36, 31, 32, 13, 24, 37, 25, 39, 19, 35, 18]
 solution : [0, 26]


Invert decision for 26 at level 4


New level: 5
 pending : [23, 40, 5, 15, 16, 22, 21, 14, 20, 3, 8, 30, 33, 45, 38, 42, 43, 46, 49, 36, 31, 32, 13, 24, 37, 25, 39, 19, 35, 18]
 solution : [0]


Before reduction : 
 pending  : [23, 40, 5, 15, 16, 22, 21, 14, 20, 3, 8, 30, 33, 45, 38, 42, 43, 46, 49, 36, 31, 32, 13, 24, 37, 25, 39, 19, 35, 18]
 solution : [0]

Essensial at level 5 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 524288), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, 524288), (16, 131072), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, 2097152), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, 2097152), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 134217728), (4, -1), (5, 1048576), (6, -1), (7, -1), (8, 1048576), (9, -1), (10, -1), (11, -1), (12, -1), (13, 67108864), (14, 33554432), (15, 1572864), (16, 524288), (17, -1), (18, 2147483648), (19, 1073741824), (20, 16777216), (21, 8388608), (22, 262144), (23, 4194304), (24, 134217728), (25, 1073741824), (26, -1), (27, -1), (28, -1), (29, -1), (30, 1048576), (31, 4194304), (32, 32768), (33, 16384), (34, -1), (35, 2147483648), (36, 134217728), (37, 268435456), (38, 16384), (39, 1073741824), (40, 4194304), (41, -1), (42, 524288), (43, 524288), (44, -1), (45, 67108864), (46, 16777216), (47, -1), (48, -1), (49, 67108864), (50, -1), (51, -1), (52, -1)]

Covered at level 5 : set()

After reduction : 
 pending  : [23, 40, 5, 15, 16, 22, 21, 14, 20, 3, 8, 30, 33, 45, 38, 42, 43, 46, 49, 36, 31, 32, 13, 24, 37, 25, 39, 19, 35, 18]
 solution : [0]


Solution : [0] has cost 6.


Decide in level 5 among pending : [23, 40, 5, 15, 16, 22, 21, 14, 20, 3, 8, 30, 33, 45, 38, 42, 43, 46, 49, 36, 31, 32, 13, 24, 37, 25, 39, 19, 35, 18]

Coverage : [(0, -1), (1, -1), (2, -1), (3, 134217728), (4, -1), (5, 1048576), (6, -1), (7, -1), (8, 1048576), (9, -1), (10, -1), (11, -1), (12, -1), (13, 67108864), (14, 33554432), (15, 1572864), (16, 524288), (17, -1), (18, 2147483648), (19, 1073741824), (20, 16777216), (21, 8388608), (22, 262144), (23, 4194304), (24, 134217728), (25, 1073741824), (26, -1), (27, -1), (28, -1), (29, -1), (30, 1048576), (31, 4194304), (32, 32768), (33, 16384), (34, -1), (35, 2147483648), (36, 134217728), (37, 268435456), (38, 16384), (39, 1073741824), (40, 4194304), (41, -1), (42, 524288), (43, 524288), (44, -1), (45, 67108864), (46, 16777216), (47, -1), (48, -1), (49, 67108864), (50, -1), (51, -1), (52, -1)]

Decide 35 with phase True at level 5

After decision at level 5
 pending : [23, 40, 5, 15, 16, 22, 21, 14, 20, 3, 8, 30, 33, 45, 38, 42, 43, 46, 49, 36, 31, 32, 13, 24, 37, 25, 39, 19, 18]
 solution : [0, 35]


New level: 6
 pending : [23, 40, 5, 15, 16, 22, 21, 14, 20, 3, 8, 30, 33, 45, 38, 42, 43, 46, 49, 36, 31, 32, 13, 24, 37, 25, 39, 19, 18]
 solution : [0, 35]


Before reduction : 
 pending  : [23, 40, 5, 15, 16, 22, 21, 14, 20, 3, 8, 30, 33, 45, 38, 42, 43, 46, 49, 36, 31, 32, 13, 24, 37, 25, 39, 19, 18]
 solution : [0, 35]

Essensial at level 6 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 134217728), (4, -1), (5, 1048576), (6, -1), (7, -1), (8, 1048576), (9, -1), (10, -1), (11, -1), (12, -1), (13, 67108864), (14, 33554432), (15, 1572864), (16, 524288), (17, -1), (18, 2147483648), (19, 1073741824), (20, 16777216), (21, 8388608), (22, 262144), (23, 4194304), (24, 134217728), (25, 1073741824), (26, -1), (27, -1), (28, -1), (29, -1), (30, 1048576), (31, 4194304), (32, 32768), (33, 16384), (34, -1), (35, 2147483648), (36, 134217728), (37, 268435456), (38, 16384), (39, 1073741824), (40, 4194304), (41, -1), (42, 524288), (43, 524288), (44, -1), (45, 67108864), (46, 16777216), (47, -1), (48, -1), (49, 67108864), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 134217728), (4, -1), (5, 1048576), (6, -1), (7, -1), (8, 262144), (9, -1), (10, -1), (11, -1), (12, -1), (13, 67108864), (14, 33554432), (15, 1572864), (16, 524288), (17, -1), (18, 2147483648), (19, 1073741824), (20, 16777216), (21, 8388608), (22, 262144), (23, 4194304), (24, 134217728), (25, 32768), (26, -1), (27, -1), (28, -1), (29, -1), (30, 262144), (31, 0), (32, 0), (33, 4096), (34, -1), (35, -1), (36, 33554432), (37, 268435456), (38, 4096), (39, 32768), (40, 4194304), (41, -1), (42, 131072), (43, 131072), (44, -1), (45, 16777216), (46, 4194304), (47, -1), (48, -1), (49, 16777216), (50, -1), (51, -1), (52, -1)]

Covered at level 6 : {32, 31}

After reduction : 
 pending  : [23, 40, 5, 15, 16, 22, 21, 14, 20, 3, 8, 30, 33, 45, 38, 42, 43, 46, 49, 36, 13, 24, 37, 25, 39, 19, 18]
 solution : [0, 35]


Before reduction : 
 pending  : [23, 40, 5, 15, 16, 22, 21, 14, 20, 3, 8, 30, 33, 45, 38, 42, 43, 46, 49, 36, 13, 24, 37, 25, 39, 19, 18]
 solution : [0, 35]

Essensial at level 6 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 134217728), (4, -1), (5, 1048576), (6, -1), (7, -1), (8, 262144), (9, -1), (10, -1), (11, -1), (12, -1), (13, 67108864), (14, 33554432), (15, 1572864), (16, 524288), (17, -1), (18, 2147483648), (19, 1073741824), (20, 16777216), (21, 8388608), (22, 262144), (23, 4194304), (24, 134217728), (25, 32768), (26, -1), (27, -1), (28, -1), (29, -1), (30, 262144), (31, 0), (32, 0), (33, 4096), (34, -1), (35, -1), (36, 33554432), (37, 268435456), (38, 4096), (39, 32768), (40, 4194304), (41, -1), (42, 131072), (43, 131072), (44, -1), (45, 16777216), (46, 4194304), (47, -1), (48, -1), (49, 16777216), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 134217728), (4, -1), (5, 1048576), (6, -1), (7, -1), (8, 262144), (9, -1), (10, -1), (11, -1), (12, -1), (13, 67108864), (14, 33554432), (15, 1572864), (16, 524288), (17, -1), (18, 2147483648), (19, 1073741824), (20, 16777216), (21, 8388608), (22, 262144), (23, 4194304), (24, 134217728), (25, 32768), (26, -1), (27, -1), (28, -1), (29, -1), (30, 262144), (31, -1), (32, -1), (33, 4096), (34, -1), (35, -1), (36, 33554432), (37, 268435456), (38, 4096), (39, 32768), (40, 4194304), (41, -1), (42, 131072), (43, 131072), (44, -1), (45, 16777216), (46, 4194304), (47, -1), (48, -1), (49, 16777216), (50, -1), (51, -1), (52, -1)]

Covered at level 6 : set()

After reduction : 
 pending  : [23, 40, 5, 15, 16, 22, 21, 14, 20, 3, 8, 30, 33, 45, 38, 42, 43, 46, 49, 36, 13, 24, 37, 25, 39, 19, 18]
 solution : [0, 35]


Solution : [0, 35] has cost 19.


Before backtrack at level 6
 pending : [23, 40, 5, 15, 16, 22, 21, 14, 20, 3, 8, 30, 33, 45, 38, 42, 43, 46, 49, 36, 13, 24, 37, 25, 39, 19, 18]
 solution : [0, 35]

After backtrack at level 6
 pending : [23, 40, 5, 15, 16, 22, 21, 14, 20, 3, 8, 30, 33, 45, 38, 42, 43, 46, 49, 36, 13, 24, 37, 25, 39, 19, 18, 31, 32]
 solution : [0, 35]


Invert decision for 35 at level 5


New level: 6
 pending : [23, 40, 5, 15, 16, 22, 21, 14, 20, 3, 8, 30, 33, 45, 38, 42, 43, 46, 49, 36, 13, 24, 37, 25, 39, 19, 18, 31, 32]
 solution : [0]


Before reduction : 
 pending  : [23, 40, 5, 15, 16, 22, 21, 14, 20, 3, 8, 30, 33, 45, 38, 42, 43, 46, 49, 36, 13, 24, 37, 25, 39, 19, 18, 31, 32]
 solution : [0]

Essensial at level 6 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 134217728), (4, -1), (5, 1048576), (6, -1), (7, -1), (8, 262144), (9, -1), (10, -1), (11, -1), (12, -1), (13, 67108864), (14, 33554432), (15, 1572864), (16, 524288), (17, -1), (18, 2147483648), (19, 1073741824), (20, 16777216), (21, 8388608), (22, 262144), (23, 4194304), (24, 134217728), (25, 32768), (26, -1), (27, -1), (28, -1), (29, -1), (30, 262144), (31, -1), (32, -1), (33, 4096), (34, -1), (35, -1), (36, 33554432), (37, 268435456), (38, 4096), (39, 32768), (40, 4194304), (41, -1), (42, 131072), (43, 131072), (44, -1), (45, 16777216), (46, 4194304), (47, -1), (48, -1), (49, 16777216), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 134217728), (4, -1), (5, 1048576), (6, -1), (7, -1), (8, 1048576), (9, -1), (10, -1), (11, -1), (12, -1), (13, 67108864), (14, 33554432), (15, 1572864), (16, 524288), (17, -1), (18, 2147483648), (19, 1073741824), (20, 16777216), (21, 8388608), (22, 262144), (23, 4194304), (24, 134217728), (25, 1073741824), (26, -1), (27, -1), (28, -1), (29, -1), (30, 1048576), (31, 4194304), (32, 32768), (33, 16384), (34, -1), (35, -1), (36, 134217728), (37, 268435456), (38, 16384), (39, 1073741824), (40, 4194304), (41, -1), (42, 524288), (43, 524288), (44, -1), (45, 67108864), (46, 16777216), (47, -1), (48, -1), (49, 67108864), (50, -1), (51, -1), (52, -1)]

Covered at level 6 : set()

After reduction : 
 pending  : [23, 40, 5, 15, 16, 22, 21, 14, 20, 3, 8, 30, 33, 45, 38, 42, 43, 46, 49, 36, 13, 24, 37, 25, 39, 19, 18, 31, 32]
 solution : [0]


Solution : [0] has cost 6.


Decide in level 6 among pending : [23, 40, 5, 15, 16, 22, 21, 14, 20, 3, 8, 30, 33, 45, 38, 42, 43, 46, 49, 36, 13, 24, 37, 25, 39, 19, 18, 31, 32]

Coverage : [(0, -1), (1, -1), (2, -1), (3, 134217728), (4, -1), (5, 1048576), (6, -1), (7, -1), (8, 1048576), (9, -1), (10, -1), (11, -1), (12, -1), (13, 67108864), (14, 33554432), (15, 1572864), (16, 524288), (17, -1), (18, 2147483648), (19, 1073741824), (20, 16777216), (21, 8388608), (22, 262144), (23, 4194304), (24, 134217728), (25, 1073741824), (26, -1), (27, -1), (28, -1), (29, -1), (30, 1048576), (31, 4194304), (32, 32768), (33, 16384), (34, -1), (35, -1), (36, 134217728), (37, 268435456), (38, 16384), (39, 1073741824), (40, 4194304), (41, -1), (42, 524288), (43, 524288), (44, -1), (45, 67108864), (46, 16777216), (47, -1), (48, -1), (49, 67108864), (50, -1), (51, -1), (52, -1)]

Decide 18 with phase True at level 6

After decision at level 6
 pending : [23, 40, 5, 15, 16, 22, 21, 14, 20, 3, 8, 30, 33, 45, 38, 42, 43, 46, 49, 36, 13, 24, 37, 25, 39, 19, 31, 32]
 solution : [0, 18]


New level: 7
 pending : [23, 40, 5, 15, 16, 22, 21, 14, 20, 3, 8, 30, 33, 45, 38, 42, 43, 46, 49, 36, 13, 24, 37, 25, 39, 19, 31, 32]
 solution : [0, 18]


Before reduction : 
 pending  : [23, 40, 5, 15, 16, 22, 21, 14, 20, 3, 8, 30, 33, 45, 38, 42, 43, 46, 49, 36, 13, 24, 37, 25, 39, 19, 31, 32]
 solution : [0, 18]

Essensial at level 7 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 134217728), (4, -1), (5, 1048576), (6, -1), (7, -1), (8, 1048576), (9, -1), (10, -1), (11, -1), (12, -1), (13, 67108864), (14, 33554432), (15, 1572864), (16, 524288), (17, -1), (18, 2147483648), (19, 1073741824), (20, 16777216), (21, 8388608), (22, 262144), (23, 4194304), (24, 134217728), (25, 1073741824), (26, -1), (27, -1), (28, -1), (29, -1), (30, 1048576), (31, 4194304), (32, 32768), (33, 16384), (34, -1), (35, -1), (36, 134217728), (37, 268435456), (38, 16384), (39, 1073741824), (40, 4194304), (41, -1), (42, 524288), (43, 524288), (44, -1), (45, 67108864), (46, 16777216), (47, -1), (48, -1), (49, 67108864), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 134217728), (4, -1), (5, 0), (6, -1), (7, -1), (8, 262144), (9, -1), (10, -1), (11, -1), (12, -1), (13, 0), (14, 0), (15, 0), (16, 0), (17, -1), (18, -1), (19, 0), (20, 0), (21, 0), (22, 0), (23, 0), (24, 134217728), (25, 1073741824), (26, -1), (27, -1), (28, -1), (29, -1), (30, 524288), (31, 4194304), (32, 8192), (33, 4096), (34, -1), (35, -1), (36, 67108864), (37, 2048), (38, 2048), (39, 4096), (40, 0), (41, -1), (42, 131072), (43, 131072), (44, -1), (45, 33554432), (46, 4194304), (47, -1), (48, -1), (49, 67108864), (50, -1), (51, -1), (52, -1)]

Covered at level 7 : {5, 40, 13, 14, 15, 16, 19, 20, 21, 22, 23}

After reduction : 
 pending  : [3, 8, 30, 33, 45, 38, 42, 43, 46, 49, 36, 24, 37, 25, 39, 31, 32]
 solution : [0, 18]


Before reduction : 
 pending  : [3, 8, 30, 33, 45, 38, 42, 43, 46, 49, 36, 24, 37, 25, 39, 31, 32]
 solution : [0, 18]

Essensial at level 7 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 134217728), (4, -1), (5, 0), (6, -1), (7, -1), (8, 262144), (9, -1), (10, -1), (11, -1), (12, -1), (13, 0), (14, 0), (15, 0), (16, 0), (17, -1), (18, -1), (19, 0), (20, 0), (21, 0), (22, 0), (23, 0), (24, 134217728), (25, 1073741824), (26, -1), (27, -1), (28, -1), (29, -1), (30, 524288), (31, 4194304), (32, 8192), (33, 4096), (34, -1), (35, -1), (36, 67108864), (37, 2048), (38, 2048), (39, 4096), (40, 0), (41, -1), (42, 131072), (43, 131072), (44, -1), (45, 33554432), (46, 4194304), (47, -1), (48, -1), (49, 67108864), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 134217728), (4, -1), (5, -1), (6, -1), (7, -1), (8, 262144), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, 134217728), (25, 1073741824), (26, -1), (27, -1), (28, -1), (29, -1), (30, 524288), (31, 4194304), (32, 8192), (33, 4096), (34, -1), (35, -1), (36, 67108864), (37, 2048), (38, 2048), (39, 4096), (40, -1), (41, -1), (42, 131072), (43, 131072), (44, -1), (45, 33554432), (46, 4194304), (47, -1), (48, -1), (49, 67108864), (50, -1), (51, -1), (52, -1)]

Covered at level 7 : set()

After reduction : 
 pending  : [3, 8, 30, 33, 45, 38, 42, 43, 46, 49, 36, 24, 37, 25, 39, 31, 32]
 solution : [0, 18]


Solution : [0, 18] has cost 13.


Decide in level 7 among pending : [3, 8, 30, 33, 45, 38, 42, 43, 46, 49, 36, 24, 37, 25, 39, 31, 32]

Coverage : [(0, -1), (1, -1), (2, -1), (3, 134217728), (4, -1), (5, -1), (6, -1), (7, -1), (8, 262144), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, 134217728), (25, 1073741824), (26, -1), (27, -1), (28, -1), (29, -1), (30, 524288), (31, 4194304), (32, 8192), (33, 4096), (34, -1), (35, -1), (36, 67108864), (37, 2048), (38, 2048), (39, 4096), (40, -1), (41, -1), (42, 131072), (43, 131072), (44, -1), (45, 33554432), (46, 4194304), (47, -1), (48, -1), (49, 67108864), (50, -1), (51, -1), (52, -1)]

Decide 25 with phase True at level 7

After decision at level 7
 pending : [3, 8, 30, 33, 45, 38, 42, 43, 46, 49, 36, 24, 37, 39, 31, 32]
 solution : [0, 18, 25]


New level: 8
 pending : [3, 8, 30, 33, 45, 38, 42, 43, 46, 49, 36, 24, 37, 39, 31, 32]
 solution : [0, 18, 25]


Before reduction : 
 pending  : [3, 8, 30, 33, 45, 38, 42, 43, 46, 49, 36, 24, 37, 39, 31, 32]
 solution : [0, 18, 25]

Essensial at level 8 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 134217728), (4, -1), (5, -1), (6, -1), (7, -1), (8, 262144), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, 134217728), (25, 1073741824), (26, -1), (27, -1), (28, -1), (29, -1), (30, 524288), (31, 4194304), (32, 8192), (33, 4096), (34, -1), (35, -1), (36, 67108864), (37, 2048), (38, 2048), (39, 4096), (40, -1), (41, -1), (42, 131072), (43, 131072), (44, -1), (45, 33554432), (46, 4194304), (47, -1), (48, -1), (49, 67108864), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 33554432), (4, -1), (5, -1), (6, -1), (7, -1), (8, 65536), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, 33554432), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, 131072), (31, 0), (32, 0), (33, 1024), (34, -1), (35, -1), (36, 33554432), (37, 512), (38, 512), (39, 0), (40, -1), (41, -1), (42, 32768), (43, 32768), (44, -1), (45, 16777216), (46, 1048576), (47, -1), (48, -1), (49, 67108864), (50, -1), (51, -1), (52, -1)]

Covered at level 8 : {32, 31, 39}

After reduction : 
 pending  : [3, 8, 30, 33, 45, 38, 42, 43, 46, 49, 36, 24, 37]
 solution : [0, 18, 25]


Before reduction : 
 pending  : [3, 8, 30, 33, 45, 38, 42, 43, 46, 49, 36, 24, 37]
 solution : [0, 18, 25]

Essensial at level 8 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 33554432), (4, -1), (5, -1), (6, -1), (7, -1), (8, 65536), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, 33554432), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, 131072), (31, 0), (32, 0), (33, 1024), (34, -1), (35, -1), (36, 33554432), (37, 512), (38, 512), (39, 0), (40, -1), (41, -1), (42, 32768), (43, 32768), (44, -1), (45, 16777216), (46, 1048576), (47, -1), (48, -1), (49, 67108864), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 33554432), (4, -1), (5, -1), (6, -1), (7, -1), (8, 65536), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, 33554432), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, 131072), (31, -1), (32, -1), (33, 1024), (34, -1), (35, -1), (36, 33554432), (37, 512), (38, 512), (39, -1), (40, -1), (41, -1), (42, 32768), (43, 32768), (44, -1), (45, 16777216), (46, 1048576), (47, -1), (48, -1), (49, 67108864), (50, -1), (51, -1), (52, -1)]

Covered at level 8 : set()

After reduction : 
 pending  : [3, 8, 30, 33, 45, 38, 42, 43, 46, 49, 36, 24, 37]
 solution : [0, 18, 25]


Solution : [0, 18, 25] has cost 20.


Before backtrack at level 8
 pending : [3, 8, 30, 33, 45, 38, 42, 43, 46, 49, 36, 24, 37]
 solution : [0, 18, 25]

After backtrack at level 8
 pending : [3, 8, 30, 33, 45, 38, 42, 43, 46, 49, 36, 24, 37, 39, 31, 32]
 solution : [0, 18, 25]


Invert decision for 25 at level 7


New level: 8
 pending : [3, 8, 30, 33, 45, 38, 42, 43, 46, 49, 36, 24, 37, 39, 31, 32]
 solution : [0, 18]


Before reduction : 
 pending  : [3, 8, 30, 33, 45, 38, 42, 43, 46, 49, 36, 24, 37, 39, 31, 32]
 solution : [0, 18]

Essensial at level 8 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 33554432), (4, -1), (5, -1), (6, -1), (7, -1), (8, 65536), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, 33554432), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, 131072), (31, -1), (32, -1), (33, 1024), (34, -1), (35, -1), (36, 33554432), (37, 512), (38, 512), (39, -1), (40, -1), (41, -1), (42, 32768), (43, 32768), (44, -1), (45, 16777216), (46, 1048576), (47, -1), (48, -1), (49, 67108864), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 134217728), (4, -1), (5, -1), (6, -1), (7, -1), (8, 262144), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, 134217728), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, 524288), (31, 4194304), (32, 8192), (33, 4096), (34, -1), (35, -1), (36, 67108864), (37, 2048), (38, 2048), (39, 4096), (40, -1), (41, -1), (42, 131072), (43, 131072), (44, -1), (45, 33554432), (46, 4194304), (47, -1), (48, -1), (49, 67108864), (50, -1), (51, -1), (52, -1)]

Covered at level 8 : set()

After reduction : 
 pending  : [3, 8, 30, 33, 45, 38, 42, 43, 46, 49, 36, 24, 37, 39, 31, 32]
 solution : [0, 18]


Solution : [0, 18] has cost 13.


Decide in level 8 among pending : [3, 8, 30, 33, 45, 38, 42, 43, 46, 49, 36, 24, 37, 39, 31, 32]

Coverage : [(0, -1), (1, -1), (2, -1), (3, 134217728), (4, -1), (5, -1), (6, -1), (7, -1), (8, 262144), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, 134217728), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, 524288), (31, 4194304), (32, 8192), (33, 4096), (34, -1), (35, -1), (36, 67108864), (37, 2048), (38, 2048), (39, 4096), (40, -1), (41, -1), (42, 131072), (43, 131072), (44, -1), (45, 33554432), (46, 4194304), (47, -1), (48, -1), (49, 67108864), (50, -1), (51, -1), (52, -1)]

Decide 3 with phase True at level 8

After decision at level 8
 pending : [8, 30, 33, 45, 38, 42, 43, 46, 49, 36, 24, 37, 39, 31, 32]
 solution : [0, 18, 3]


New level: 9
 pending : [8, 30, 33, 45, 38, 42, 43, 46, 49, 36, 24, 37, 39, 31, 32]
 solution : [0, 18, 3]


Before reduction : 
 pending  : [8, 30, 33, 45, 38, 42, 43, 46, 49, 36, 24, 37, 39, 31, 32]
 solution : [0, 18, 3]

Essensial at level 9 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 134217728), (4, -1), (5, -1), (6, -1), (7, -1), (8, 262144), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, 134217728), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, 524288), (31, 4194304), (32, 8192), (33, 4096), (34, -1), (35, -1), (36, 67108864), (37, 2048), (38, 2048), (39, 4096), (40, -1), (41, -1), (42, 131072), (43, 131072), (44, -1), (45, 33554432), (46, 4194304), (47, -1), (48, -1), (49, 67108864), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, 0), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, 0), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, 0), (31, 0), (32, 0), (33, 0), (34, -1), (35, -1), (36, 0), (37, 0), (38, 0), (39, 0), (40, -1), (41, -1), (42, 0), (43, 0), (44, -1), (45, 0), (46, 0), (47, -1), (48, -1), (49, 0), (50, -1), (51, -1), (52, -1)]

Covered at level 9 : {32, 33, 36, 37, 38, 39, 8, 42, 43, 45, 46, 49, 24, 30, 31}

After reduction : 
 pending  : []
 solution : [0, 18, 3]


Before reduction : 
 pending  : []
 solution : [0, 18, 3]

Essensial at level 9 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, 0), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, 0), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, 0), (31, 0), (32, 0), (33, 0), (34, -1), (35, -1), (36, 0), (37, 0), (38, 0), (39, 0), (40, -1), (41, -1), (42, 0), (43, 0), (44, -1), (45, 0), (46, 0), (47, -1), (48, -1), (49, 0), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 9 : set()

After reduction : 
 pending  : []
 solution : [0, 18, 3]


Solution : [0, 18, 3] has cost 17.


Before backtrack at level 9
 pending : []
 solution : [0, 18, 3]

After backtrack at level 9
 pending : [8, 30, 33, 45, 38, 42, 43, 46, 49, 36, 24, 37, 39, 31, 32]
 solution : [0, 18, 3]


Invert decision for 3 at level 8


New level: 9
 pending : [8, 30, 33, 45, 38, 42, 43, 46, 49, 36, 24, 37, 39, 31, 32]
 solution : [0, 18]


Before reduction : 
 pending  : [8, 30, 33, 45, 38, 42, 43, 46, 49, 36, 24, 37, 39, 31, 32]
 solution : [0, 18]

Essensial at level 9 : {24}

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, 0), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, 0), (31, 0), (32, 0), (33, 0), (34, -1), (35, -1), (36, 0), (37, 0), (38, 0), (39, 0), (40, -1), (41, -1), (42, 0), (43, 0), (44, -1), (45, 0), (46, 0), (47, -1), (48, -1), (49, 0), (50, -1), (51, -1), (52, -1)]

Covered at level 9 : {32, 33, 36, 37, 38, 39, 8, 42, 43, 45, 46, 49, 30, 31}

After reduction : 
 pending  : []
 solution : [0, 18, 24]


Before reduction : 
 pending  : []
 solution : [0, 18, 24]

Essensial at level 9 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, 0), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, 0), (31, 0), (32, 0), (33, 0), (34, -1), (35, -1), (36, 0), (37, 0), (38, 0), (39, 0), (40, -1), (41, -1), (42, 0), (43, 0), (44, -1), (45, 0), (46, 0), (47, -1), (48, -1), (49, 0), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 9 : set()

After reduction : 
 pending  : []
 solution : [0, 18, 24]


Solution : [0, 18, 24] has cost 20.


Before backtrack at level 9
 pending : []
 solution : [0, 18, 24]

After backtrack at level 9
 pending : [24, 8, 30, 33, 45, 38, 42, 43, 46, 49, 36, 37, 39, 31, 32]
 solution : [0, 18]


Before backtrack at level 8
 pending : [24, 8, 30, 33, 45, 38, 42, 43, 46, 49, 36, 37, 39, 31, 32]
 solution : [0, 18]

After backtrack at level 8
 pending : [24, 8, 30, 33, 45, 38, 42, 43, 46, 49, 36, 37, 39, 31, 32, 3]
 solution : [0, 18]


Before backtrack at level 7
 pending : [24, 8, 30, 33, 45, 38, 42, 43, 46, 49, 36, 37, 39, 31, 32, 3]
 solution : [0, 18]

After backtrack at level 7
 pending : [24, 8, 30, 33, 45, 38, 42, 43, 46, 49, 36, 37, 39, 31, 32, 3, 23, 40, 5, 15, 16, 22, 21, 14, 20, 13, 19, 25]
 solution : [0, 18]


Invert decision for 18 at level 6


New level: 7
 pending : [24, 8, 30, 33, 45, 38, 42, 43, 46, 49, 36, 37, 39, 31, 32, 3, 23, 40, 5, 15, 16, 22, 21, 14, 20, 13, 19, 25]
 solution : [0]


Before reduction : 
 pending  : [24, 8, 30, 33, 45, 38, 42, 43, 46, 49, 36, 37, 39, 31, 32, 3, 23, 40, 5, 15, 16, 22, 21, 14, 20, 13, 19, 25]
 solution : [0]

Essensial at level 7 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 134217728), (4, -1), (5, 1048576), (6, -1), (7, -1), (8, 1048576), (9, -1), (10, -1), (11, -1), (12, -1), (13, 67108864), (14, 33554432), (15, 1572864), (16, 524288), (17, -1), (18, -1), (19, 1073741824), (20, 16777216), (21, 8388608), (22, 262144), (23, 4194304), (24, 134217728), (25, 1073741824), (26, -1), (27, -1), (28, -1), (29, -1), (30, 1048576), (31, 4194304), (32, 32768), (33, 16384), (34, -1), (35, -1), (36, 134217728), (37, 268435456), (38, 16384), (39, 1073741824), (40, 4194304), (41, -1), (42, 524288), (43, 524288), (44, -1), (45, 67108864), (46, 16777216), (47, -1), (48, -1), (49, 67108864), (50, -1), (51, -1), (52, -1)]

Covered at level 7 : set()

After reduction : 
 pending  : [24, 8, 30, 33, 45, 38, 42, 43, 46, 49, 36, 37, 39, 31, 32, 3, 23, 40, 5, 15, 16, 22, 21, 14, 20, 13, 19, 25]
 solution : [0]


Solution : [0] has cost 6.


Decide in level 7 among pending : [24, 8, 30, 33, 45, 38, 42, 43, 46, 49, 36, 37, 39, 31, 32, 3, 23, 40, 5, 15, 16, 22, 21, 14, 20, 13, 19, 25]

Coverage : [(0, -1), (1, -1), (2, -1), (3, 134217728), (4, -1), (5, 1048576), (6, -1), (7, -1), (8, 1048576), (9, -1), (10, -1), (11, -1), (12, -1), (13, 67108864), (14, 33554432), (15, 1572864), (16, 524288), (17, -1), (18, -1), (19, 1073741824), (20, 16777216), (21, 8388608), (22, 262144), (23, 4194304), (24, 134217728), (25, 1073741824), (26, -1), (27, -1), (28, -1), (29, -1), (30, 1048576), (31, 4194304), (32, 32768), (33, 16384), (34, -1), (35, -1), (36, 134217728), (37, 268435456), (38, 16384), (39, 1073741824), (40, 4194304), (41, -1), (42, 524288), (43, 524288), (44, -1), (45, 67108864), (46, 16777216), (47, -1), (48, -1), (49, 67108864), (50, -1), (51, -1), (52, -1)]

Decide 39 with phase True at level 7

After decision at level 7
 pending : [24, 8, 30, 33, 45, 38, 42, 43, 46, 49, 36, 37, 31, 32, 3, 23, 40, 5, 15, 16, 22, 21, 14, 20, 13, 19, 25]
 solution : [0, 39]


New level: 8
 pending : [24, 8, 30, 33, 45, 38, 42, 43, 46, 49, 36, 37, 31, 32, 3, 23, 40, 5, 15, 16, 22, 21, 14, 20, 13, 19, 25]
 solution : [0, 39]


Before reduction : 
 pending  : [24, 8, 30, 33, 45, 38, 42, 43, 46, 49, 36, 37, 31, 32, 3, 23, 40, 5, 15, 16, 22, 21, 14, 20, 13, 19, 25]
 solution : [0, 39]

Essensial at level 8 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 134217728), (4, -1), (5, 1048576), (6, -1), (7, -1), (8, 1048576), (9, -1), (10, -1), (11, -1), (12, -1), (13, 67108864), (14, 33554432), (15, 1572864), (16, 524288), (17, -1), (18, -1), (19, 1073741824), (20, 16777216), (21, 8388608), (22, 262144), (23, 4194304), (24, 134217728), (25, 1073741824), (26, -1), (27, -1), (28, -1), (29, -1), (30, 1048576), (31, 4194304), (32, 32768), (33, 16384), (34, -1), (35, -1), (36, 134217728), (37, 268435456), (38, 16384), (39, 1073741824), (40, 4194304), (41, -1), (42, 524288), (43, 524288), (44, -1), (45, 67108864), (46, 16777216), (47, -1), (48, -1), (49, 67108864), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 134217728), (4, -1), (5, 1048576), (6, -1), (7, -1), (8, 1048576), (9, -1), (10, -1), (11, -1), (12, -1), (13, 67108864), (14, 33554432), (15, 1572864), (16, 524288), (17, -1), (18, -1), (19, 1073741824), (20, 16777216), (21, 8388608), (22, 262144), (23, 4194304), (24, 134217728), (25, 536870912), (26, -1), (27, -1), (28, -1), (29, -1), (30, 1048576), (31, 2097152), (32, 16384), (33, 16384), (34, -1), (35, -1), (36, 134217728), (37, 134217728), (38, 16384), (39, -1), (40, 4194304), (41, -1), (42, 524288), (43, 524288), (44, -1), (45, 67108864), (46, 16777216), (47, -1), (48, -1), (49, 67108864), (50, -1), (51, -1), (52, -1)]

Covered at level 8 : set()

After reduction : 
 pending  : [24, 8, 30, 33, 45, 38, 42, 43, 46, 49, 36, 37, 31, 32, 3, 23, 40, 5, 15, 16, 22, 21, 14, 20, 13, 19, 25]
 solution : [0, 39]


Solution : [0, 39] has cost 20.


Before backtrack at level 8
 pending : [24, 8, 30, 33, 45, 38, 42, 43, 46, 49, 36, 37, 31, 32, 3, 23, 40, 5, 15, 16, 22, 21, 14, 20, 13, 19, 25]
 solution : [0, 39]

After backtrack at level 8
 pending : [24, 8, 30, 33, 45, 38, 42, 43, 46, 49, 36, 37, 31, 32, 3, 23, 40, 5, 15, 16, 22, 21, 14, 20, 13, 19, 25]
 solution : [0, 39]


Invert decision for 39 at level 7


New level: 8
 pending : [24, 8, 30, 33, 45, 38, 42, 43, 46, 49, 36, 37, 31, 32, 3, 23, 40, 5, 15, 16, 22, 21, 14, 20, 13, 19, 25]
 solution : [0]


Before reduction : 
 pending  : [24, 8, 30, 33, 45, 38, 42, 43, 46, 49, 36, 37, 31, 32, 3, 23, 40, 5, 15, 16, 22, 21, 14, 20, 13, 19, 25]
 solution : [0]

Essensial at level 8 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 134217728), (4, -1), (5, 1048576), (6, -1), (7, -1), (8, 1048576), (9, -1), (10, -1), (11, -1), (12, -1), (13, 67108864), (14, 33554432), (15, 1572864), (16, 524288), (17, -1), (18, -1), (19, 1073741824), (20, 16777216), (21, 8388608), (22, 262144), (23, 4194304), (24, 134217728), (25, 536870912), (26, -1), (27, -1), (28, -1), (29, -1), (30, 1048576), (31, 2097152), (32, 16384), (33, 16384), (34, -1), (35, -1), (36, 134217728), (37, 134217728), (38, 16384), (39, -1), (40, 4194304), (41, -1), (42, 524288), (43, 524288), (44, -1), (45, 67108864), (46, 16777216), (47, -1), (48, -1), (49, 67108864), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 134217728), (4, -1), (5, 1048576), (6, -1), (7, -1), (8, 1048576), (9, -1), (10, -1), (11, -1), (12, -1), (13, 67108864), (14, 33554432), (15, 1572864), (16, 524288), (17, -1), (18, -1), (19, 1073741824), (20, 16777216), (21, 8388608), (22, 262144), (23, 4194304), (24, 134217728), (25, 1073741824), (26, -1), (27, -1), (28, -1), (29, -1), (30, 1048576), (31, 4194304), (32, 32768), (33, 16384), (34, -1), (35, -1), (36, 134217728), (37, 268435456), (38, 16384), (39, -1), (40, 4194304), (41, -1), (42, 524288), (43, 524288), (44, -1), (45, 67108864), (46, 16777216), (47, -1), (48, -1), (49, 67108864), (50, -1), (51, -1), (52, -1)]

Covered at level 8 : set()

After reduction : 
 pending  : [24, 8, 30, 33, 45, 38, 42, 43, 46, 49, 36, 37, 31, 32, 3, 23, 40, 5, 15, 16, 22, 21, 14, 20, 13, 19, 25]
 solution : [0]


Solution : [0] has cost 6.


Decide in level 8 among pending : [24, 8, 30, 33, 45, 38, 42, 43, 46, 49, 36, 37, 31, 32, 3, 23, 40, 5, 15, 16, 22, 21, 14, 20, 13, 19, 25]

Coverage : [(0, -1), (1, -1), (2, -1), (3, 134217728), (4, -1), (5, 1048576), (6, -1), (7, -1), (8, 1048576), (9, -1), (10, -1), (11, -1), (12, -1), (13, 67108864), (14, 33554432), (15, 1572864), (16, 524288), (17, -1), (18, -1), (19, 1073741824), (20, 16777216), (21, 8388608), (22, 262144), (23, 4194304), (24, 134217728), (25, 1073741824), (26, -1), (27, -1), (28, -1), (29, -1), (30, 1048576), (31, 4194304), (32, 32768), (33, 16384), (34, -1), (35, -1), (36, 134217728), (37, 268435456), (38, 16384), (39, -1), (40, 4194304), (41, -1), (42, 524288), (43, 524288), (44, -1), (45, 67108864), (46, 16777216), (47, -1), (48, -1), (49, 67108864), (50, -1), (51, -1), (52, -1)]

Decide 19 with phase True at level 8

After decision at level 8
 pending : [24, 8, 30, 33, 45, 38, 42, 43, 46, 49, 36, 37, 31, 32, 3, 23, 40, 5, 15, 16, 22, 21, 14, 20, 13, 25]
 solution : [0, 19]


New level: 9
 pending : [24, 8, 30, 33, 45, 38, 42, 43, 46, 49, 36, 37, 31, 32, 3, 23, 40, 5, 15, 16, 22, 21, 14, 20, 13, 25]
 solution : [0, 19]


Before reduction : 
 pending  : [24, 8, 30, 33, 45, 38, 42, 43, 46, 49, 36, 37, 31, 32, 3, 23, 40, 5, 15, 16, 22, 21, 14, 20, 13, 25]
 solution : [0, 19]

Essensial at level 9 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 134217728), (4, -1), (5, 1048576), (6, -1), (7, -1), (8, 1048576), (9, -1), (10, -1), (11, -1), (12, -1), (13, 67108864), (14, 33554432), (15, 1572864), (16, 524288), (17, -1), (18, -1), (19, 1073741824), (20, 16777216), (21, 8388608), (22, 262144), (23, 4194304), (24, 134217728), (25, 1073741824), (26, -1), (27, -1), (28, -1), (29, -1), (30, 1048576), (31, 4194304), (32, 32768), (33, 16384), (34, -1), (35, -1), (36, 134217728), (37, 268435456), (38, 16384), (39, -1), (40, 4194304), (41, -1), (42, 524288), (43, 524288), (44, -1), (45, 67108864), (46, 16777216), (47, -1), (48, -1), (49, 67108864), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 134217728), (4, -1), (5, 0), (6, -1), (7, -1), (8, 262144), (9, -1), (10, -1), (11, -1), (12, -1), (13, 0), (14, 0), (15, 0), (16, 0), (17, -1), (18, -1), (19, -1), (20, 0), (21, 0), (22, 0), (23, 0), (24, 134217728), (25, 1073741824), (26, -1), (27, -1), (28, -1), (29, -1), (30, 524288), (31, 4194304), (32, 8192), (33, 4096), (34, -1), (35, -1), (36, 67108864), (37, 2048), (38, 2048), (39, -1), (40, 0), (41, -1), (42, 131072), (43, 131072), (44, -1), (45, 67108864), (46, 16777216), (47, -1), (48, -1), (49, 67108864), (50, -1), (51, -1), (52, -1)]

Covered at level 9 : {5, 40, 13, 14, 15, 16, 20, 21, 22, 23}

After reduction : 
 pending  : [24, 8, 30, 33, 45, 38, 42, 43, 46, 49, 36, 37, 31, 32, 3, 25]
 solution : [0, 19]


Before reduction : 
 pending  : [24, 8, 30, 33, 45, 38, 42, 43, 46, 49, 36, 37, 31, 32, 3, 25]
 solution : [0, 19]

Essensial at level 9 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 134217728), (4, -1), (5, 0), (6, -1), (7, -1), (8, 262144), (9, -1), (10, -1), (11, -1), (12, -1), (13, 0), (14, 0), (15, 0), (16, 0), (17, -1), (18, -1), (19, -1), (20, 0), (21, 0), (22, 0), (23, 0), (24, 134217728), (25, 1073741824), (26, -1), (27, -1), (28, -1), (29, -1), (30, 524288), (31, 4194304), (32, 8192), (33, 4096), (34, -1), (35, -1), (36, 67108864), (37, 2048), (38, 2048), (39, -1), (40, 0), (41, -1), (42, 131072), (43, 131072), (44, -1), (45, 67108864), (46, 16777216), (47, -1), (48, -1), (49, 67108864), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 134217728), (4, -1), (5, -1), (6, -1), (7, -1), (8, 262144), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, 134217728), (25, 1073741824), (26, -1), (27, -1), (28, -1), (29, -1), (30, 524288), (31, 4194304), (32, 8192), (33, 4096), (34, -1), (35, -1), (36, 67108864), (37, 2048), (38, 2048), (39, -1), (40, -1), (41, -1), (42, 131072), (43, 131072), (44, -1), (45, 67108864), (46, 16777216), (47, -1), (48, -1), (49, 67108864), (50, -1), (51, -1), (52, -1)]

Covered at level 9 : set()

After reduction : 
 pending  : [24, 8, 30, 33, 45, 38, 42, 43, 46, 49, 36, 37, 31, 32, 3, 25]
 solution : [0, 19]


Solution : [0, 19] has cost 13.


Decide in level 9 among pending : [24, 8, 30, 33, 45, 38, 42, 43, 46, 49, 36, 37, 31, 32, 3, 25]

Coverage : [(0, -1), (1, -1), (2, -1), (3, 134217728), (4, -1), (5, -1), (6, -1), (7, -1), (8, 262144), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, 134217728), (25, 1073741824), (26, -1), (27, -1), (28, -1), (29, -1), (30, 524288), (31, 4194304), (32, 8192), (33, 4096), (34, -1), (35, -1), (36, 67108864), (37, 2048), (38, 2048), (39, -1), (40, -1), (41, -1), (42, 131072), (43, 131072), (44, -1), (45, 67108864), (46, 16777216), (47, -1), (48, -1), (49, 67108864), (50, -1), (51, -1), (52, -1)]

Decide 25 with phase True at level 9

After decision at level 9
 pending : [24, 8, 30, 33, 45, 38, 42, 43, 46, 49, 36, 37, 31, 32, 3]
 solution : [0, 19, 25]


New level: 10
 pending : [24, 8, 30, 33, 45, 38, 42, 43, 46, 49, 36, 37, 31, 32, 3]
 solution : [0, 19, 25]


Before reduction : 
 pending  : [24, 8, 30, 33, 45, 38, 42, 43, 46, 49, 36, 37, 31, 32, 3]
 solution : [0, 19, 25]

Essensial at level 10 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 134217728), (4, -1), (5, -1), (6, -1), (7, -1), (8, 262144), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, 134217728), (25, 1073741824), (26, -1), (27, -1), (28, -1), (29, -1), (30, 524288), (31, 4194304), (32, 8192), (33, 4096), (34, -1), (35, -1), (36, 67108864), (37, 2048), (38, 2048), (39, -1), (40, -1), (41, -1), (42, 131072), (43, 131072), (44, -1), (45, 67108864), (46, 16777216), (47, -1), (48, -1), (49, 67108864), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 33554432), (4, -1), (5, -1), (6, -1), (7, -1), (8, 65536), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, 33554432), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, 131072), (31, 0), (32, 0), (33, 1024), (34, -1), (35, -1), (36, 33554432), (37, 512), (38, 512), (39, -1), (40, -1), (41, -1), (42, 32768), (43, 32768), (44, -1), (45, 33554432), (46, 4194304), (47, -1), (48, -1), (49, 67108864), (50, -1), (51, -1), (52, -1)]

Covered at level 10 : {32, 31}

After reduction : 
 pending  : [24, 8, 30, 33, 45, 38, 42, 43, 46, 49, 36, 37, 3]
 solution : [0, 19, 25]


Before reduction : 
 pending  : [24, 8, 30, 33, 45, 38, 42, 43, 46, 49, 36, 37, 3]
 solution : [0, 19, 25]

Essensial at level 10 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 33554432), (4, -1), (5, -1), (6, -1), (7, -1), (8, 65536), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, 33554432), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, 131072), (31, 0), (32, 0), (33, 1024), (34, -1), (35, -1), (36, 33554432), (37, 512), (38, 512), (39, -1), (40, -1), (41, -1), (42, 32768), (43, 32768), (44, -1), (45, 33554432), (46, 4194304), (47, -1), (48, -1), (49, 67108864), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 33554432), (4, -1), (5, -1), (6, -1), (7, -1), (8, 65536), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, 33554432), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, 131072), (31, -1), (32, -1), (33, 1024), (34, -1), (35, -1), (36, 33554432), (37, 512), (38, 512), (39, -1), (40, -1), (41, -1), (42, 32768), (43, 32768), (44, -1), (45, 33554432), (46, 4194304), (47, -1), (48, -1), (49, 67108864), (50, -1), (51, -1), (52, -1)]

Covered at level 10 : set()

After reduction : 
 pending  : [24, 8, 30, 33, 45, 38, 42, 43, 46, 49, 36, 37, 3]
 solution : [0, 19, 25]


Solution : [0, 19, 25] has cost 20.


Before backtrack at level 10
 pending : [24, 8, 30, 33, 45, 38, 42, 43, 46, 49, 36, 37, 3]
 solution : [0, 19, 25]

After backtrack at level 10
 pending : [24, 8, 30, 33, 45, 38, 42, 43, 46, 49, 36, 37, 3, 31, 32]
 solution : [0, 19, 25]


Invert decision for 25 at level 9


New level: 10
 pending : [24, 8, 30, 33, 45, 38, 42, 43, 46, 49, 36, 37, 3, 31, 32]
 solution : [0, 19]


Before reduction : 
 pending  : [24, 8, 30, 33, 45, 38, 42, 43, 46, 49, 36, 37, 3, 31, 32]
 solution : [0, 19]

Essensial at level 10 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 33554432), (4, -1), (5, -1), (6, -1), (7, -1), (8, 65536), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, 33554432), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, 131072), (31, -1), (32, -1), (33, 1024), (34, -1), (35, -1), (36, 33554432), (37, 512), (38, 512), (39, -1), (40, -1), (41, -1), (42, 32768), (43, 32768), (44, -1), (45, 33554432), (46, 4194304), (47, -1), (48, -1), (49, 67108864), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 134217728), (4, -1), (5, -1), (6, -1), (7, -1), (8, 262144), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, 134217728), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, 524288), (31, 4194304), (32, 8192), (33, 4096), (34, -1), (35, -1), (36, 67108864), (37, 2048), (38, 2048), (39, -1), (40, -1), (41, -1), (42, 131072), (43, 131072), (44, -1), (45, 67108864), (46, 16777216), (47, -1), (48, -1), (49, 67108864), (50, -1), (51, -1), (52, -1)]

Covered at level 10 : set()

After reduction : 
 pending  : [24, 8, 30, 33, 45, 38, 42, 43, 46, 49, 36, 37, 3, 31, 32]
 solution : [0, 19]


Solution : [0, 19] has cost 13.


Decide in level 10 among pending : [24, 8, 30, 33, 45, 38, 42, 43, 46, 49, 36, 37, 3, 31, 32]

Coverage : [(0, -1), (1, -1), (2, -1), (3, 134217728), (4, -1), (5, -1), (6, -1), (7, -1), (8, 262144), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, 134217728), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, 524288), (31, 4194304), (32, 8192), (33, 4096), (34, -1), (35, -1), (36, 67108864), (37, 2048), (38, 2048), (39, -1), (40, -1), (41, -1), (42, 131072), (43, 131072), (44, -1), (45, 67108864), (46, 16777216), (47, -1), (48, -1), (49, 67108864), (50, -1), (51, -1), (52, -1)]

Decide 24 with phase True at level 10

After decision at level 10
 pending : [8, 30, 33, 45, 38, 42, 43, 46, 49, 36, 37, 3, 31, 32]
 solution : [0, 19, 24]


New level: 11
 pending : [8, 30, 33, 45, 38, 42, 43, 46, 49, 36, 37, 3, 31, 32]
 solution : [0, 19, 24]


Before reduction : 
 pending  : [8, 30, 33, 45, 38, 42, 43, 46, 49, 36, 37, 3, 31, 32]
 solution : [0, 19, 24]

Essensial at level 11 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 134217728), (4, -1), (5, -1), (6, -1), (7, -1), (8, 262144), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, 134217728), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, 524288), (31, 4194304), (32, 8192), (33, 4096), (34, -1), (35, -1), (36, 67108864), (37, 2048), (38, 2048), (39, -1), (40, -1), (41, -1), (42, 131072), (43, 131072), (44, -1), (45, 67108864), (46, 16777216), (47, -1), (48, -1), (49, 67108864), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 0), (4, -1), (5, -1), (6, -1), (7, -1), (8, 0), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, 0), (31, 0), (32, 0), (33, 0), (34, -1), (35, -1), (36, 0), (37, 0), (38, 0), (39, -1), (40, -1), (41, -1), (42, 0), (43, 0), (44, -1), (45, 0), (46, 0), (47, -1), (48, -1), (49, 0), (50, -1), (51, -1), (52, -1)]

Covered at level 11 : {32, 33, 3, 36, 37, 38, 8, 42, 43, 45, 46, 49, 30, 31}

After reduction : 
 pending  : []
 solution : [0, 19, 24]


Before reduction : 
 pending  : []
 solution : [0, 19, 24]

Essensial at level 11 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 0), (4, -1), (5, -1), (6, -1), (7, -1), (8, 0), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, 0), (31, 0), (32, 0), (33, 0), (34, -1), (35, -1), (36, 0), (37, 0), (38, 0), (39, -1), (40, -1), (41, -1), (42, 0), (43, 0), (44, -1), (45, 0), (46, 0), (47, -1), (48, -1), (49, 0), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 11 : set()

After reduction : 
 pending  : []
 solution : [0, 19, 24]


Solution : [0, 19, 24] has cost 20.


Before backtrack at level 11
 pending : []
 solution : [0, 19, 24]

After backtrack at level 11
 pending : [8, 30, 33, 45, 38, 42, 43, 46, 49, 36, 37, 3, 31, 32]
 solution : [0, 19, 24]


Invert decision for 24 at level 10


New level: 11
 pending : [8, 30, 33, 45, 38, 42, 43, 46, 49, 36, 37, 3, 31, 32]
 solution : [0, 19]


Before reduction : 
 pending  : [8, 30, 33, 45, 38, 42, 43, 46, 49, 36, 37, 3, 31, 32]
 solution : [0, 19]

Essensial at level 11 : {3}

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, 0), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, 0), (31, 0), (32, 0), (33, 0), (34, -1), (35, -1), (36, 0), (37, 0), (38, 0), (39, -1), (40, -1), (41, -1), (42, 0), (43, 0), (44, -1), (45, 0), (46, 0), (47, -1), (48, -1), (49, 0), (50, -1), (51, -1), (52, -1)]

Covered at level 11 : {32, 33, 36, 37, 38, 8, 42, 43, 45, 46, 49, 30, 31}

After reduction : 
 pending  : []
 solution : [0, 19, 3]


Before reduction : 
 pending  : []
 solution : [0, 19, 3]

Essensial at level 11 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, 0), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, 0), (31, 0), (32, 0), (33, 0), (34, -1), (35, -1), (36, 0), (37, 0), (38, 0), (39, -1), (40, -1), (41, -1), (42, 0), (43, 0), (44, -1), (45, 0), (46, 0), (47, -1), (48, -1), (49, 0), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 11 : set()

After reduction : 
 pending  : []
 solution : [0, 19, 3]


Solution : [0, 19, 3] has cost 17.


Before backtrack at level 11
 pending : []
 solution : [0, 19, 3]

After backtrack at level 11
 pending : [3, 8, 30, 33, 45, 38, 42, 43, 46, 49, 36, 37, 31, 32]
 solution : [0, 19]


Before backtrack at level 10
 pending : [3, 8, 30, 33, 45, 38, 42, 43, 46, 49, 36, 37, 31, 32]
 solution : [0, 19]

After backtrack at level 10
 pending : [3, 8, 30, 33, 45, 38, 42, 43, 46, 49, 36, 37, 31, 32, 24]
 solution : [0, 19]


Before backtrack at level 9
 pending : [3, 8, 30, 33, 45, 38, 42, 43, 46, 49, 36, 37, 31, 32, 24]
 solution : [0, 19]

After backtrack at level 9
 pending : [3, 8, 30, 33, 45, 38, 42, 43, 46, 49, 36, 37, 31, 32, 24, 23, 40, 5, 15, 16, 22, 21, 14, 20, 13, 25]
 solution : [0, 19]


Invert decision for 19 at level 8


New level: 9
 pending : [3, 8, 30, 33, 45, 38, 42, 43, 46, 49, 36, 37, 31, 32, 24, 23, 40, 5, 15, 16, 22, 21, 14, 20, 13, 25]
 solution : [0]


Before reduction : 
 pending  : [3, 8, 30, 33, 45, 38, 42, 43, 46, 49, 36, 37, 31, 32, 24, 23, 40, 5, 15, 16, 22, 21, 14, 20, 13, 25]
 solution : [0]

Essensial at level 9 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 134217728), (4, -1), (5, 1048576), (6, -1), (7, -1), (8, 1048576), (9, -1), (10, -1), (11, -1), (12, -1), (13, 67108864), (14, 33554432), (15, 1572864), (16, 524288), (17, -1), (18, -1), (19, -1), (20, 16777216), (21, 8388608), (22, 262144), (23, 4194304), (24, 134217728), (25, 1073741824), (26, -1), (27, -1), (28, -1), (29, -1), (30, 1048576), (31, 4194304), (32, 32768), (33, 16384), (34, -1), (35, -1), (36, 134217728), (37, 268435456), (38, 16384), (39, -1), (40, 4194304), (41, -1), (42, 524288), (43, 524288), (44, -1), (45, 67108864), (46, 16777216), (47, -1), (48, -1), (49, 67108864), (50, -1), (51, -1), (52, -1)]

Covered at level 9 : set()

After reduction : 
 pending  : [3, 8, 30, 33, 45, 38, 42, 43, 46, 49, 36, 37, 31, 32, 24, 23, 40, 5, 15, 16, 22, 21, 14, 20, 13, 25]
 solution : [0]


Solution : [0] has cost 6.


Decide in level 9 among pending : [3, 8, 30, 33, 45, 38, 42, 43, 46, 49, 36, 37, 31, 32, 24, 23, 40, 5, 15, 16, 22, 21, 14, 20, 13, 25]

Coverage : [(0, -1), (1, -1), (2, -1), (3, 134217728), (4, -1), (5, 1048576), (6, -1), (7, -1), (8, 1048576), (9, -1), (10, -1), (11, -1), (12, -1), (13, 67108864), (14, 33554432), (15, 1572864), (16, 524288), (17, -1), (18, -1), (19, -1), (20, 16777216), (21, 8388608), (22, 262144), (23, 4194304), (24, 134217728), (25, 1073741824), (26, -1), (27, -1), (28, -1), (29, -1), (30, 1048576), (31, 4194304), (32, 32768), (33, 16384), (34, -1), (35, -1), (36, 134217728), (37, 268435456), (38, 16384), (39, -1), (40, 4194304), (41, -1), (42, 524288), (43, 524288), (44, -1), (45, 67108864), (46, 16777216), (47, -1), (48, -1), (49, 67108864), (50, -1), (51, -1), (52, -1)]

Decide 25 with phase True at level 9

After decision at level 9
 pending : [3, 8, 30, 33, 45, 38, 42, 43, 46, 49, 36, 37, 31, 32, 24, 23, 40, 5, 15, 16, 22, 21, 14, 20, 13]
 solution : [0, 25]


New level: 10
 pending : [3, 8, 30, 33, 45, 38, 42, 43, 46, 49, 36, 37, 31, 32, 24, 23, 40, 5, 15, 16, 22, 21, 14, 20, 13]
 solution : [0, 25]


Before reduction : 
 pending  : [3, 8, 30, 33, 45, 38, 42, 43, 46, 49, 36, 37, 31, 32, 24, 23, 40, 5, 15, 16, 22, 21, 14, 20, 13]
 solution : [0, 25]

Essensial at level 10 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 134217728), (4, -1), (5, 1048576), (6, -1), (7, -1), (8, 1048576), (9, -1), (10, -1), (11, -1), (12, -1), (13, 67108864), (14, 33554432), (15, 1572864), (16, 524288), (17, -1), (18, -1), (19, -1), (20, 16777216), (21, 8388608), (22, 262144), (23, 4194304), (24, 134217728), (25, 1073741824), (26, -1), (27, -1), (28, -1), (29, -1), (30, 1048576), (31, 4194304), (32, 32768), (33, 16384), (34, -1), (35, -1), (36, 134217728), (37, 268435456), (38, 16384), (39, -1), (40, 4194304), (41, -1), (42, 524288), (43, 524288), (44, -1), (45, 67108864), (46, 16777216), (47, -1), (48, -1), (49, 67108864), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 33554432), (4, -1), (5, 1048576), (6, -1), (7, -1), (8, 262144), (9, -1), (10, -1), (11, -1), (12, -1), (13, 67108864), (14, 33554432), (15, 1572864), (16, 524288), (17, -1), (18, -1), (19, -1), (20, 16777216), (21, 8388608), (22, 262144), (23, 4194304), (24, 33554432), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, 262144), (31, 0), (32, 0), (33, 4096), (34, -1), (35, -1), (36, 67108864), (37, 134217728), (38, 4096), (39, -1), (40, 4194304), (41, -1), (42, 131072), (43, 131072), (44, -1), (45, 33554432), (46, 4194304), (47, -1), (48, -1), (49, 67108864), (50, -1), (51, -1), (52, -1)]

Covered at level 10 : {32, 31}

After reduction : 
 pending  : [3, 8, 30, 33, 45, 38, 42, 43, 46, 49, 36, 37, 24, 23, 40, 5, 15, 16, 22, 21, 14, 20, 13]
 solution : [0, 25]


Before reduction : 
 pending  : [3, 8, 30, 33, 45, 38, 42, 43, 46, 49, 36, 37, 24, 23, 40, 5, 15, 16, 22, 21, 14, 20, 13]
 solution : [0, 25]

Essensial at level 10 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 33554432), (4, -1), (5, 1048576), (6, -1), (7, -1), (8, 262144), (9, -1), (10, -1), (11, -1), (12, -1), (13, 67108864), (14, 33554432), (15, 1572864), (16, 524288), (17, -1), (18, -1), (19, -1), (20, 16777216), (21, 8388608), (22, 262144), (23, 4194304), (24, 33554432), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, 262144), (31, 0), (32, 0), (33, 4096), (34, -1), (35, -1), (36, 67108864), (37, 134217728), (38, 4096), (39, -1), (40, 4194304), (41, -1), (42, 131072), (43, 131072), (44, -1), (45, 33554432), (46, 4194304), (47, -1), (48, -1), (49, 67108864), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 33554432), (4, -1), (5, 1048576), (6, -1), (7, -1), (8, 262144), (9, -1), (10, -1), (11, -1), (12, -1), (13, 67108864), (14, 33554432), (15, 1572864), (16, 524288), (17, -1), (18, -1), (19, -1), (20, 16777216), (21, 8388608), (22, 262144), (23, 4194304), (24, 33554432), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, 262144), (31, -1), (32, -1), (33, 4096), (34, -1), (35, -1), (36, 67108864), (37, 134217728), (38, 4096), (39, -1), (40, 4194304), (41, -1), (42, 131072), (43, 131072), (44, -1), (45, 33554432), (46, 4194304), (47, -1), (48, -1), (49, 67108864), (50, -1), (51, -1), (52, -1)]

Covered at level 10 : set()

After reduction : 
 pending  : [3, 8, 30, 33, 45, 38, 42, 43, 46, 49, 36, 37, 24, 23, 40, 5, 15, 16, 22, 21, 14, 20, 13]
 solution : [0, 25]


Solution : [0, 25] has cost 13.


Decide in level 10 among pending : [3, 8, 30, 33, 45, 38, 42, 43, 46, 49, 36, 37, 24, 23, 40, 5, 15, 16, 22, 21, 14, 20, 13]

Coverage : [(0, -1), (1, -1), (2, -1), (3, 33554432), (4, -1), (5, 1048576), (6, -1), (7, -1), (8, 262144), (9, -1), (10, -1), (11, -1), (12, -1), (13, 67108864), (14, 33554432), (15, 1572864), (16, 524288), (17, -1), (18, -1), (19, -1), (20, 16777216), (21, 8388608), (22, 262144), (23, 4194304), (24, 33554432), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, 262144), (31, -1), (32, -1), (33, 4096), (34, -1), (35, -1), (36, 67108864), (37, 134217728), (38, 4096), (39, -1), (40, 4194304), (41, -1), (42, 131072), (43, 131072), (44, -1), (45, 33554432), (46, 4194304), (47, -1), (48, -1), (49, 67108864), (50, -1), (51, -1), (52, -1)]

Decide 37 with phase True at level 10

After decision at level 10
 pending : [3, 8, 30, 33, 45, 38, 42, 43, 46, 49, 36, 24, 23, 40, 5, 15, 16, 22, 21, 14, 20, 13]
 solution : [0, 25, 37]


New level: 11
 pending : [3, 8, 30, 33, 45, 38, 42, 43, 46, 49, 36, 24, 23, 40, 5, 15, 16, 22, 21, 14, 20, 13]
 solution : [0, 25, 37]


Before reduction : 
 pending  : [3, 8, 30, 33, 45, 38, 42, 43, 46, 49, 36, 24, 23, 40, 5, 15, 16, 22, 21, 14, 20, 13]
 solution : [0, 25, 37]

Essensial at level 11 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 33554432), (4, -1), (5, 1048576), (6, -1), (7, -1), (8, 262144), (9, -1), (10, -1), (11, -1), (12, -1), (13, 67108864), (14, 33554432), (15, 1572864), (16, 524288), (17, -1), (18, -1), (19, -1), (20, 16777216), (21, 8388608), (22, 262144), (23, 4194304), (24, 33554432), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, 262144), (31, -1), (32, -1), (33, 4096), (34, -1), (35, -1), (36, 67108864), (37, 134217728), (38, 4096), (39, -1), (40, 4194304), (41, -1), (42, 131072), (43, 131072), (44, -1), (45, 33554432), (46, 4194304), (47, -1), (48, -1), (49, 67108864), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 8388608), (4, -1), (5, 524288), (6, -1), (7, -1), (8, 65536), (9, -1), (10, -1), (11, -1), (12, -1), (13, 33554432), (14, 16777216), (15, 524288), (16, 262144), (17, -1), (18, -1), (19, -1), (20, 16777216), (21, 8388608), (22, 262144), (23, 1048576), (24, 8388608), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, 65536), (31, -1), (32, -1), (33, 1024), (34, -1), (35, -1), (36, 67108864), (37, -1), (38, 1024), (39, -1), (40, 1048576), (41, -1), (42, 32768), (43, 32768), (44, -1), (45, 16777216), (46, 1048576), (47, -1), (48, -1), (49, 67108864), (50, -1), (51, -1), (52, -1)]

Covered at level 11 : set()

After reduction : 
 pending  : [3, 8, 30, 33, 45, 38, 42, 43, 46, 49, 36, 24, 23, 40, 5, 15, 16, 22, 21, 14, 20, 13]
 solution : [0, 25, 37]


Solution : [0, 25, 37] has cost 31.


Before backtrack at level 11
 pending : [3, 8, 30, 33, 45, 38, 42, 43, 46, 49, 36, 24, 23, 40, 5, 15, 16, 22, 21, 14, 20, 13]
 solution : [0, 25, 37]

After backtrack at level 11
 pending : [3, 8, 30, 33, 45, 38, 42, 43, 46, 49, 36, 24, 23, 40, 5, 15, 16, 22, 21, 14, 20, 13]
 solution : [0, 25, 37]


Invert decision for 37 at level 10


New level: 11
 pending : [3, 8, 30, 33, 45, 38, 42, 43, 46, 49, 36, 24, 23, 40, 5, 15, 16, 22, 21, 14, 20, 13]
 solution : [0, 25]


Before reduction : 
 pending  : [3, 8, 30, 33, 45, 38, 42, 43, 46, 49, 36, 24, 23, 40, 5, 15, 16, 22, 21, 14, 20, 13]
 solution : [0, 25]

Essensial at level 11 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 8388608), (4, -1), (5, 524288), (6, -1), (7, -1), (8, 65536), (9, -1), (10, -1), (11, -1), (12, -1), (13, 33554432), (14, 16777216), (15, 524288), (16, 262144), (17, -1), (18, -1), (19, -1), (20, 16777216), (21, 8388608), (22, 262144), (23, 1048576), (24, 8388608), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, 65536), (31, -1), (32, -1), (33, 1024), (34, -1), (35, -1), (36, 67108864), (37, -1), (38, 1024), (39, -1), (40, 1048576), (41, -1), (42, 32768), (43, 32768), (44, -1), (45, 16777216), (46, 1048576), (47, -1), (48, -1), (49, 67108864), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 33554432), (4, -1), (5, 1048576), (6, -1), (7, -1), (8, 262144), (9, -1), (10, -1), (11, -1), (12, -1), (13, 67108864), (14, 33554432), (15, 1572864), (16, 524288), (17, -1), (18, -1), (19, -1), (20, 16777216), (21, 8388608), (22, 262144), (23, 4194304), (24, 33554432), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, 262144), (31, -1), (32, -1), (33, 4096), (34, -1), (35, -1), (36, 67108864), (37, -1), (38, 4096), (39, -1), (40, 4194304), (41, -1), (42, 131072), (43, 131072), (44, -1), (45, 33554432), (46, 4194304), (47, -1), (48, -1), (49, 67108864), (50, -1), (51, -1), (52, -1)]

Covered at level 11 : set()

After reduction : 
 pending  : [3, 8, 30, 33, 45, 38, 42, 43, 46, 49, 36, 24, 23, 40, 5, 15, 16, 22, 21, 14, 20, 13]
 solution : [0, 25]


Solution : [0, 25] has cost 13.


Decide in level 11 among pending : [3, 8, 30, 33, 45, 38, 42, 43, 46, 49, 36, 24, 23, 40, 5, 15, 16, 22, 21, 14, 20, 13]

Coverage : [(0, -1), (1, -1), (2, -1), (3, 33554432), (4, -1), (5, 1048576), (6, -1), (7, -1), (8, 262144), (9, -1), (10, -1), (11, -1), (12, -1), (13, 67108864), (14, 33554432), (15, 1572864), (16, 524288), (17, -1), (18, -1), (19, -1), (20, 16777216), (21, 8388608), (22, 262144), (23, 4194304), (24, 33554432), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, 262144), (31, -1), (32, -1), (33, 4096), (34, -1), (35, -1), (36, 67108864), (37, -1), (38, 4096), (39, -1), (40, 4194304), (41, -1), (42, 131072), (43, 131072), (44, -1), (45, 33554432), (46, 4194304), (47, -1), (48, -1), (49, 67108864), (50, -1), (51, -1), (52, -1)]

Decide 49 with phase True at level 11

After decision at level 11
 pending : [3, 8, 30, 33, 45, 38, 42, 43, 46, 36, 24, 23, 40, 5, 15, 16, 22, 21, 14, 20, 13]
 solution : [0, 25, 49]


New level: 12
 pending : [3, 8, 30, 33, 45, 38, 42, 43, 46, 36, 24, 23, 40, 5, 15, 16, 22, 21, 14, 20, 13]
 solution : [0, 25, 49]


Before reduction : 
 pending  : [3, 8, 30, 33, 45, 38, 42, 43, 46, 36, 24, 23, 40, 5, 15, 16, 22, 21, 14, 20, 13]
 solution : [0, 25, 49]

Essensial at level 12 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 33554432), (4, -1), (5, 1048576), (6, -1), (7, -1), (8, 262144), (9, -1), (10, -1), (11, -1), (12, -1), (13, 67108864), (14, 33554432), (15, 1572864), (16, 524288), (17, -1), (18, -1), (19, -1), (20, 16777216), (21, 8388608), (22, 262144), (23, 4194304), (24, 33554432), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, 262144), (31, -1), (32, -1), (33, 4096), (34, -1), (35, -1), (36, 67108864), (37, -1), (38, 4096), (39, -1), (40, 4194304), (41, -1), (42, 131072), (43, 131072), (44, -1), (45, 33554432), (46, 4194304), (47, -1), (48, -1), (49, 67108864), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 33554432), (4, -1), (5, 1048576), (6, -1), (7, -1), (8, 4096), (9, -1), (10, -1), (11, -1), (12, -1), (13, 67108864), (14, 33554432), (15, 1572864), (16, 524288), (17, -1), (18, -1), (19, -1), (20, 16777216), (21, 8388608), (22, 262144), (23, 4194304), (24, 33554432), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, 262144), (31, -1), (32, -1), (33, 4096), (34, -1), (35, -1), (36, 67108864), (37, -1), (38, 0), (39, -1), (40, 4194304), (41, -1), (42, 0), (43, 0), (44, -1), (45, 4096), (46, 0), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 12 : {46, 42, 43, 38}

After reduction : 
 pending  : [3, 8, 30, 33, 45, 36, 24, 23, 40, 5, 15, 16, 22, 21, 14, 20, 13]
 solution : [0, 25, 49]


Before reduction : 
 pending  : [3, 8, 30, 33, 45, 36, 24, 23, 40, 5, 15, 16, 22, 21, 14, 20, 13]
 solution : [0, 25, 49]

Essensial at level 12 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 33554432), (4, -1), (5, 1048576), (6, -1), (7, -1), (8, 4096), (9, -1), (10, -1), (11, -1), (12, -1), (13, 67108864), (14, 33554432), (15, 1572864), (16, 524288), (17, -1), (18, -1), (19, -1), (20, 16777216), (21, 8388608), (22, 262144), (23, 4194304), (24, 33554432), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, 262144), (31, -1), (32, -1), (33, 4096), (34, -1), (35, -1), (36, 67108864), (37, -1), (38, 0), (39, -1), (40, 4194304), (41, -1), (42, 0), (43, 0), (44, -1), (45, 4096), (46, 0), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 33554432), (4, -1), (5, 1048576), (6, -1), (7, -1), (8, 4096), (9, -1), (10, -1), (11, -1), (12, -1), (13, 67108864), (14, 33554432), (15, 1572864), (16, 524288), (17, -1), (18, -1), (19, -1), (20, 16777216), (21, 8388608), (22, 262144), (23, 4194304), (24, 33554432), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, 262144), (31, -1), (32, -1), (33, 4096), (34, -1), (35, -1), (36, 67108864), (37, -1), (38, -1), (39, -1), (40, 4194304), (41, -1), (42, -1), (43, -1), (44, -1), (45, 4096), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 12 : set()

After reduction : 
 pending  : [3, 8, 30, 33, 45, 36, 24, 23, 40, 5, 15, 16, 22, 21, 14, 20, 13]
 solution : [0, 25, 49]


Solution : [0, 25, 49] has cost 44.


Before backtrack at level 12
 pending : [3, 8, 30, 33, 45, 36, 24, 23, 40, 5, 15, 16, 22, 21, 14, 20, 13]
 solution : [0, 25, 49]

After backtrack at level 12
 pending : [3, 8, 30, 33, 45, 36, 24, 23, 40, 5, 15, 16, 22, 21, 14, 20, 13, 38, 42, 43, 46]
 solution : [0, 25, 49]


Invert decision for 49 at level 11


New level: 12
 pending : [3, 8, 30, 33, 45, 36, 24, 23, 40, 5, 15, 16, 22, 21, 14, 20, 13, 38, 42, 43, 46]
 solution : [0, 25]


Before reduction : 
 pending  : [3, 8, 30, 33, 45, 36, 24, 23, 40, 5, 15, 16, 22, 21, 14, 20, 13, 38, 42, 43, 46]
 solution : [0, 25]

Essensial at level 12 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 33554432), (4, -1), (5, 1048576), (6, -1), (7, -1), (8, 4096), (9, -1), (10, -1), (11, -1), (12, -1), (13, 67108864), (14, 33554432), (15, 1572864), (16, 524288), (17, -1), (18, -1), (19, -1), (20, 16777216), (21, 8388608), (22, 262144), (23, 4194304), (24, 33554432), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, 262144), (31, -1), (32, -1), (33, 4096), (34, -1), (35, -1), (36, 67108864), (37, -1), (38, -1), (39, -1), (40, 4194304), (41, -1), (42, -1), (43, -1), (44, -1), (45, 4096), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 33554432), (4, -1), (5, 1048576), (6, -1), (7, -1), (8, 262144), (9, -1), (10, -1), (11, -1), (12, -1), (13, 67108864), (14, 33554432), (15, 1572864), (16, 524288), (17, -1), (18, -1), (19, -1), (20, 16777216), (21, 8388608), (22, 262144), (23, 4194304), (24, 33554432), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, 262144), (31, -1), (32, -1), (33, 4096), (34, -1), (35, -1), (36, 67108864), (37, -1), (38, 4096), (39, -1), (40, 4194304), (41, -1), (42, 131072), (43, 131072), (44, -1), (45, 33554432), (46, 4194304), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 12 : set()

After reduction : 
 pending  : [3, 8, 30, 33, 45, 36, 24, 23, 40, 5, 15, 16, 22, 21, 14, 20, 13, 38, 42, 43, 46]
 solution : [0, 25]


Solution : [0, 25] has cost 13.


Decide in level 12 among pending : [3, 8, 30, 33, 45, 36, 24, 23, 40, 5, 15, 16, 22, 21, 14, 20, 13, 38, 42, 43, 46]

Coverage : [(0, -1), (1, -1), (2, -1), (3, 33554432), (4, -1), (5, 1048576), (6, -1), (7, -1), (8, 262144), (9, -1), (10, -1), (11, -1), (12, -1), (13, 67108864), (14, 33554432), (15, 1572864), (16, 524288), (17, -1), (18, -1), (19, -1), (20, 16777216), (21, 8388608), (22, 262144), (23, 4194304), (24, 33554432), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, 262144), (31, -1), (32, -1), (33, 4096), (34, -1), (35, -1), (36, 67108864), (37, -1), (38, 4096), (39, -1), (40, 4194304), (41, -1), (42, 131072), (43, 131072), (44, -1), (45, 33554432), (46, 4194304), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Decide 36 with phase True at level 12

After decision at level 12
 pending : [3, 8, 30, 33, 45, 24, 23, 40, 5, 15, 16, 22, 21, 14, 20, 13, 38, 42, 43, 46]
 solution : [0, 25, 36]


New level: 13
 pending : [3, 8, 30, 33, 45, 24, 23, 40, 5, 15, 16, 22, 21, 14, 20, 13, 38, 42, 43, 46]
 solution : [0, 25, 36]


Before reduction : 
 pending  : [3, 8, 30, 33, 45, 24, 23, 40, 5, 15, 16, 22, 21, 14, 20, 13, 38, 42, 43, 46]
 solution : [0, 25, 36]

Essensial at level 13 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 33554432), (4, -1), (5, 1048576), (6, -1), (7, -1), (8, 262144), (9, -1), (10, -1), (11, -1), (12, -1), (13, 67108864), (14, 33554432), (15, 1572864), (16, 524288), (17, -1), (18, -1), (19, -1), (20, 16777216), (21, 8388608), (22, 262144), (23, 4194304), (24, 33554432), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, 262144), (31, -1), (32, -1), (33, 4096), (34, -1), (35, -1), (36, 67108864), (37, -1), (38, 4096), (39, -1), (40, 4194304), (41, -1), (42, 131072), (43, 131072), (44, -1), (45, 33554432), (46, 4194304), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 4096), (4, -1), (5, 524288), (6, -1), (7, -1), (8, 0), (9, -1), (10, -1), (11, -1), (12, -1), (13, 67108864), (14, 33554432), (15, 524288), (16, 524288), (17, -1), (18, -1), (19, -1), (20, 16777216), (21, 8388608), (22, 262144), (23, 4194304), (24, 4096), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, 0), (31, -1), (32, -1), (33, 0), (34, -1), (35, -1), (36, -1), (37, -1), (38, 0), (39, -1), (40, 4194304), (41, -1), (42, 0), (43, 0), (44, -1), (45, 0), (46, 0), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 13 : {33, 38, 8, 42, 43, 45, 46, 30}

After reduction : 
 pending  : [3, 24, 23, 40, 5, 15, 16, 22, 21, 14, 20, 13]
 solution : [0, 25, 36]


Before reduction : 
 pending  : [3, 24, 23, 40, 5, 15, 16, 22, 21, 14, 20, 13]
 solution : [0, 25, 36]

Essensial at level 13 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 4096), (4, -1), (5, 524288), (6, -1), (7, -1), (8, 0), (9, -1), (10, -1), (11, -1), (12, -1), (13, 67108864), (14, 33554432), (15, 524288), (16, 524288), (17, -1), (18, -1), (19, -1), (20, 16777216), (21, 8388608), (22, 262144), (23, 4194304), (24, 4096), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, 0), (31, -1), (32, -1), (33, 0), (34, -1), (35, -1), (36, -1), (37, -1), (38, 0), (39, -1), (40, 4194304), (41, -1), (42, 0), (43, 0), (44, -1), (45, 0), (46, 0), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 4096), (4, -1), (5, 524288), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, 67108864), (14, 33554432), (15, 524288), (16, 524288), (17, -1), (18, -1), (19, -1), (20, 16777216), (21, 8388608), (22, 262144), (23, 4194304), (24, 4096), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, 4194304), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 13 : set()

After reduction : 
 pending  : [3, 24, 23, 40, 5, 15, 16, 22, 21, 14, 20, 13]
 solution : [0, 25, 36]


Solution : [0, 25, 36] has cost 31.


Before backtrack at level 13
 pending : [3, 24, 23, 40, 5, 15, 16, 22, 21, 14, 20, 13]
 solution : [0, 25, 36]

After backtrack at level 13
 pending : [3, 24, 23, 40, 5, 15, 16, 22, 21, 14, 20, 13, 8, 30, 33, 45, 38, 42, 43, 46]
 solution : [0, 25, 36]


Invert decision for 36 at level 12


New level: 13
 pending : [3, 24, 23, 40, 5, 15, 16, 22, 21, 14, 20, 13, 8, 30, 33, 45, 38, 42, 43, 46]
 solution : [0, 25]


Before reduction : 
 pending  : [3, 24, 23, 40, 5, 15, 16, 22, 21, 14, 20, 13, 8, 30, 33, 45, 38, 42, 43, 46]
 solution : [0, 25]

Essensial at level 13 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 4096), (4, -1), (5, 524288), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, 67108864), (14, 33554432), (15, 524288), (16, 524288), (17, -1), (18, -1), (19, -1), (20, 16777216), (21, 8388608), (22, 262144), (23, 4194304), (24, 4096), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, 4194304), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 33554432), (4, -1), (5, 1048576), (6, -1), (7, -1), (8, 262144), (9, -1), (10, -1), (11, -1), (12, -1), (13, 67108864), (14, 33554432), (15, 1572864), (16, 524288), (17, -1), (18, -1), (19, -1), (20, 16777216), (21, 8388608), (22, 262144), (23, 4194304), (24, 33554432), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, 262144), (31, -1), (32, -1), (33, 4096), (34, -1), (35, -1), (36, -1), (37, -1), (38, 4096), (39, -1), (40, 4194304), (41, -1), (42, 131072), (43, 131072), (44, -1), (45, 33554432), (46, 4194304), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 13 : set()

After reduction : 
 pending  : [3, 24, 23, 40, 5, 15, 16, 22, 21, 14, 20, 13, 8, 30, 33, 45, 38, 42, 43, 46]
 solution : [0, 25]


Solution : [0, 25] has cost 13.


Decide in level 13 among pending : [3, 24, 23, 40, 5, 15, 16, 22, 21, 14, 20, 13, 8, 30, 33, 45, 38, 42, 43, 46]

Coverage : [(0, -1), (1, -1), (2, -1), (3, 33554432), (4, -1), (5, 1048576), (6, -1), (7, -1), (8, 262144), (9, -1), (10, -1), (11, -1), (12, -1), (13, 67108864), (14, 33554432), (15, 1572864), (16, 524288), (17, -1), (18, -1), (19, -1), (20, 16777216), (21, 8388608), (22, 262144), (23, 4194304), (24, 33554432), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, 262144), (31, -1), (32, -1), (33, 4096), (34, -1), (35, -1), (36, -1), (37, -1), (38, 4096), (39, -1), (40, 4194304), (41, -1), (42, 131072), (43, 131072), (44, -1), (45, 33554432), (46, 4194304), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Decide 13 with phase True at level 13

After decision at level 13
 pending : [3, 24, 23, 40, 5, 15, 16, 22, 21, 14, 20, 8, 30, 33, 45, 38, 42, 43, 46]
 solution : [0, 25, 13]


New level: 14
 pending : [3, 24, 23, 40, 5, 15, 16, 22, 21, 14, 20, 8, 30, 33, 45, 38, 42, 43, 46]
 solution : [0, 25, 13]


Before reduction : 
 pending  : [3, 24, 23, 40, 5, 15, 16, 22, 21, 14, 20, 8, 30, 33, 45, 38, 42, 43, 46]
 solution : [0, 25, 13]

Essensial at level 14 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 33554432), (4, -1), (5, 1048576), (6, -1), (7, -1), (8, 262144), (9, -1), (10, -1), (11, -1), (12, -1), (13, 67108864), (14, 33554432), (15, 1572864), (16, 524288), (17, -1), (18, -1), (19, -1), (20, 16777216), (21, 8388608), (22, 262144), (23, 4194304), (24, 33554432), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, 262144), (31, -1), (32, -1), (33, 4096), (34, -1), (35, -1), (36, -1), (37, -1), (38, 4096), (39, -1), (40, 4194304), (41, -1), (42, 131072), (43, 131072), (44, -1), (45, 33554432), (46, 4194304), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 33554432), (4, -1), (5, 0), (6, -1), (7, -1), (8, 65536), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 0), (15, 0), (16, 0), (17, -1), (18, -1), (19, -1), (20, 262144), (21, 65536), (22, 65536), (23, 4096), (24, 33554432), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, 131072), (31, -1), (32, -1), (33, 1024), (34, -1), (35, -1), (36, -1), (37, -1), (38, 512), (39, -1), (40, 4096), (41, -1), (42, 65536), (43, 65536), (44, -1), (45, 33554432), (46, 4194304), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 14 : {16, 5, 14, 15}

After reduction : 
 pending  : [3, 24, 23, 40, 22, 21, 20, 8, 30, 33, 45, 38, 42, 43, 46]
 solution : [0, 25, 13]


Before reduction : 
 pending  : [3, 24, 23, 40, 22, 21, 20, 8, 30, 33, 45, 38, 42, 43, 46]
 solution : [0, 25, 13]

Essensial at level 14 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 33554432), (4, -1), (5, 0), (6, -1), (7, -1), (8, 65536), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 0), (15, 0), (16, 0), (17, -1), (18, -1), (19, -1), (20, 262144), (21, 65536), (22, 65536), (23, 4096), (24, 33554432), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, 131072), (31, -1), (32, -1), (33, 1024), (34, -1), (35, -1), (36, -1), (37, -1), (38, 512), (39, -1), (40, 4096), (41, -1), (42, 65536), (43, 65536), (44, -1), (45, 33554432), (46, 4194304), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 33554432), (4, -1), (5, -1), (6, -1), (7, -1), (8, 65536), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, 262144), (21, 65536), (22, 65536), (23, 4096), (24, 33554432), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, 131072), (31, -1), (32, -1), (33, 1024), (34, -1), (35, -1), (36, -1), (37, -1), (38, 512), (39, -1), (40, 4096), (41, -1), (42, 65536), (43, 65536), (44, -1), (45, 33554432), (46, 4194304), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 14 : set()

After reduction : 
 pending  : [3, 24, 23, 40, 22, 21, 20, 8, 30, 33, 45, 38, 42, 43, 46]
 solution : [0, 25, 13]


Solution : [0, 25, 13] has cost 22.


Before backtrack at level 14
 pending : [3, 24, 23, 40, 22, 21, 20, 8, 30, 33, 45, 38, 42, 43, 46]
 solution : [0, 25, 13]

After backtrack at level 14
 pending : [3, 24, 23, 40, 22, 21, 20, 8, 30, 33, 45, 38, 42, 43, 46, 5, 15, 16, 14]
 solution : [0, 25, 13]


Invert decision for 13 at level 13


New level: 14
 pending : [3, 24, 23, 40, 22, 21, 20, 8, 30, 33, 45, 38, 42, 43, 46, 5, 15, 16, 14]
 solution : [0, 25]


Before reduction : 
 pending  : [3, 24, 23, 40, 22, 21, 20, 8, 30, 33, 45, 38, 42, 43, 46, 5, 15, 16, 14]
 solution : [0, 25]

Essensial at level 14 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 33554432), (4, -1), (5, -1), (6, -1), (7, -1), (8, 65536), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, 262144), (21, 65536), (22, 65536), (23, 4096), (24, 33554432), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, 131072), (31, -1), (32, -1), (33, 1024), (34, -1), (35, -1), (36, -1), (37, -1), (38, 512), (39, -1), (40, 4096), (41, -1), (42, 65536), (43, 65536), (44, -1), (45, 33554432), (46, 4194304), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 33554432), (4, -1), (5, 1048576), (6, -1), (7, -1), (8, 262144), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 33554432), (15, 1572864), (16, 524288), (17, -1), (18, -1), (19, -1), (20, 16777216), (21, 8388608), (22, 262144), (23, 4194304), (24, 33554432), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, 262144), (31, -1), (32, -1), (33, 4096), (34, -1), (35, -1), (36, -1), (37, -1), (38, 4096), (39, -1), (40, 4194304), (41, -1), (42, 131072), (43, 131072), (44, -1), (45, 33554432), (46, 4194304), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 14 : set()

After reduction : 
 pending  : [3, 24, 23, 40, 22, 21, 20, 8, 30, 33, 45, 38, 42, 43, 46, 5, 15, 16, 14]
 solution : [0, 25]


Solution : [0, 25] has cost 13.


Decide in level 14 among pending : [3, 24, 23, 40, 22, 21, 20, 8, 30, 33, 45, 38, 42, 43, 46, 5, 15, 16, 14]

Coverage : [(0, -1), (1, -1), (2, -1), (3, 33554432), (4, -1), (5, 1048576), (6, -1), (7, -1), (8, 262144), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 33554432), (15, 1572864), (16, 524288), (17, -1), (18, -1), (19, -1), (20, 16777216), (21, 8388608), (22, 262144), (23, 4194304), (24, 33554432), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, 262144), (31, -1), (32, -1), (33, 4096), (34, -1), (35, -1), (36, -1), (37, -1), (38, 4096), (39, -1), (40, 4194304), (41, -1), (42, 131072), (43, 131072), (44, -1), (45, 33554432), (46, 4194304), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Decide 3 with phase True at level 14

After decision at level 14
 pending : [24, 23, 40, 22, 21, 20, 8, 30, 33, 45, 38, 42, 43, 46, 5, 15, 16, 14]
 solution : [0, 25, 3]


New level: 15
 pending : [24, 23, 40, 22, 21, 20, 8, 30, 33, 45, 38, 42, 43, 46, 5, 15, 16, 14]
 solution : [0, 25, 3]


Before reduction : 
 pending  : [24, 23, 40, 22, 21, 20, 8, 30, 33, 45, 38, 42, 43, 46, 5, 15, 16, 14]
 solution : [0, 25, 3]

Essensial at level 15 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 33554432), (4, -1), (5, 1048576), (6, -1), (7, -1), (8, 262144), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 33554432), (15, 1572864), (16, 524288), (17, -1), (18, -1), (19, -1), (20, 16777216), (21, 8388608), (22, 262144), (23, 4194304), (24, 33554432), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, 262144), (31, -1), (32, -1), (33, 4096), (34, -1), (35, -1), (36, -1), (37, -1), (38, 4096), (39, -1), (40, 4194304), (41, -1), (42, 131072), (43, 131072), (44, -1), (45, 33554432), (46, 4194304), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 524288), (6, -1), (7, -1), (8, 0), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 16777216), (15, 524288), (16, 262144), (17, -1), (18, -1), (19, -1), (20, 16777216), (21, 8388608), (22, 262144), (23, 2097152), (24, 0), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, 0), (31, -1), (32, -1), (33, 0), (34, -1), (35, -1), (36, -1), (37, -1), (38, 0), (39, -1), (40, 2097152), (41, -1), (42, 0), (43, 0), (44, -1), (45, 0), (46, 0), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 15 : {33, 38, 8, 42, 43, 45, 46, 24, 30}

After reduction : 
 pending  : [23, 40, 22, 21, 20, 5, 15, 16, 14]
 solution : [0, 25, 3]


Before reduction : 
 pending  : [23, 40, 22, 21, 20, 5, 15, 16, 14]
 solution : [0, 25, 3]

Essensial at level 15 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 524288), (6, -1), (7, -1), (8, 0), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 16777216), (15, 524288), (16, 262144), (17, -1), (18, -1), (19, -1), (20, 16777216), (21, 8388608), (22, 262144), (23, 2097152), (24, 0), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, 0), (31, -1), (32, -1), (33, 0), (34, -1), (35, -1), (36, -1), (37, -1), (38, 0), (39, -1), (40, 2097152), (41, -1), (42, 0), (43, 0), (44, -1), (45, 0), (46, 0), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 524288), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 16777216), (15, 524288), (16, 262144), (17, -1), (18, -1), (19, -1), (20, 16777216), (21, 8388608), (22, 262144), (23, 2097152), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, 2097152), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 15 : set()

After reduction : 
 pending  : [23, 40, 22, 21, 20, 5, 15, 16, 14]
 solution : [0, 25, 3]


Solution : [0, 25, 3] has cost 17.


Before backtrack at level 15
 pending : [23, 40, 22, 21, 20, 5, 15, 16, 14]
 solution : [0, 25, 3]

After backtrack at level 15
 pending : [23, 40, 22, 21, 20, 5, 15, 16, 14, 24, 8, 30, 33, 45, 38, 42, 43, 46]
 solution : [0, 25, 3]


Invert decision for 3 at level 14


New level: 15
 pending : [23, 40, 22, 21, 20, 5, 15, 16, 14, 24, 8, 30, 33, 45, 38, 42, 43, 46]
 solution : [0, 25]


Before reduction : 
 pending  : [23, 40, 22, 21, 20, 5, 15, 16, 14, 24, 8, 30, 33, 45, 38, 42, 43, 46]
 solution : [0, 25]

Essensial at level 15 : {24}

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 524288), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 16777216), (15, 524288), (16, 262144), (17, -1), (18, -1), (19, -1), (20, 16777216), (21, 8388608), (22, 262144), (23, 2097152), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, 2097152), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 524288), (6, -1), (7, -1), (8, 0), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 16777216), (15, 524288), (16, 262144), (17, -1), (18, -1), (19, -1), (20, 16777216), (21, 8388608), (22, 262144), (23, 2097152), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, 0), (31, -1), (32, -1), (33, 0), (34, -1), (35, -1), (36, -1), (37, -1), (38, 0), (39, -1), (40, 2097152), (41, -1), (42, 0), (43, 0), (44, -1), (45, 0), (46, 0), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 15 : {33, 38, 8, 42, 43, 45, 46, 30}

After reduction : 
 pending  : [23, 40, 22, 21, 20, 5, 15, 16, 14]
 solution : [0, 25, 24]


Before reduction : 
 pending  : [23, 40, 22, 21, 20, 5, 15, 16, 14]
 solution : [0, 25, 24]

Essensial at level 15 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 524288), (6, -1), (7, -1), (8, 0), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 16777216), (15, 524288), (16, 262144), (17, -1), (18, -1), (19, -1), (20, 16777216), (21, 8388608), (22, 262144), (23, 2097152), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, 0), (31, -1), (32, -1), (33, 0), (34, -1), (35, -1), (36, -1), (37, -1), (38, 0), (39, -1), (40, 2097152), (41, -1), (42, 0), (43, 0), (44, -1), (45, 0), (46, 0), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 524288), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 16777216), (15, 524288), (16, 262144), (17, -1), (18, -1), (19, -1), (20, 16777216), (21, 8388608), (22, 262144), (23, 2097152), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, 2097152), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 15 : set()

After reduction : 
 pending  : [23, 40, 22, 21, 20, 5, 15, 16, 14]
 solution : [0, 25, 24]


Solution : [0, 25, 24] has cost 20.


Before backtrack at level 15
 pending : [23, 40, 22, 21, 20, 5, 15, 16, 14]
 solution : [0, 25, 24]

After backtrack at level 15
 pending : [23, 40, 22, 21, 20, 5, 15, 16, 14, 24, 8, 30, 33, 45, 38, 42, 43, 46]
 solution : [0, 25]


Before backtrack at level 14
 pending : [23, 40, 22, 21, 20, 5, 15, 16, 14, 24, 8, 30, 33, 45, 38, 42, 43, 46]
 solution : [0, 25]

After backtrack at level 14
 pending : [23, 40, 22, 21, 20, 5, 15, 16, 14, 24, 8, 30, 33, 45, 38, 42, 43, 46, 3]
 solution : [0, 25]


Before backtrack at level 13
 pending : [23, 40, 22, 21, 20, 5, 15, 16, 14, 24, 8, 30, 33, 45, 38, 42, 43, 46, 3]
 solution : [0, 25]

After backtrack at level 13
 pending : [23, 40, 22, 21, 20, 5, 15, 16, 14, 24, 8, 30, 33, 45, 38, 42, 43, 46, 3, 13]
 solution : [0, 25]


Before backtrack at level 12
 pending : [23, 40, 22, 21, 20, 5, 15, 16, 14, 24, 8, 30, 33, 45, 38, 42, 43, 46, 3, 13]
 solution : [0, 25]

After backtrack at level 12
 pending : [23, 40, 22, 21, 20, 5, 15, 16, 14, 24, 8, 30, 33, 45, 38, 42, 43, 46, 3, 13, 36]
 solution : [0, 25]


Before backtrack at level 11
 pending : [23, 40, 22, 21, 20, 5, 15, 16, 14, 24, 8, 30, 33, 45, 38, 42, 43, 46, 3, 13, 36]
 solution : [0, 25]

After backtrack at level 11
 pending : [23, 40, 22, 21, 20, 5, 15, 16, 14, 24, 8, 30, 33, 45, 38, 42, 43, 46, 3, 13, 36, 49]
 solution : [0, 25]


Before backtrack at level 10
 pending : [23, 40, 22, 21, 20, 5, 15, 16, 14, 24, 8, 30, 33, 45, 38, 42, 43, 46, 3, 13, 36, 49]
 solution : [0, 25]

After backtrack at level 10
 pending : [23, 40, 22, 21, 20, 5, 15, 16, 14, 24, 8, 30, 33, 45, 38, 42, 43, 46, 3, 13, 36, 49, 31, 32, 37]
 solution : [0, 25]


Invert decision for 25 at level 9


New level: 10
 pending : [23, 40, 22, 21, 20, 5, 15, 16, 14, 24, 8, 30, 33, 45, 38, 42, 43, 46, 3, 13, 36, 49, 31, 32, 37]
 solution : [0]


Before reduction : 
 pending  : [23, 40, 22, 21, 20, 5, 15, 16, 14, 24, 8, 30, 33, 45, 38, 42, 43, 46, 3, 13, 36, 49, 31, 32, 37]
 solution : [0]

Essensial at level 10 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 524288), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 16777216), (15, 524288), (16, 262144), (17, -1), (18, -1), (19, -1), (20, 16777216), (21, 8388608), (22, 262144), (23, 2097152), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, 2097152), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 134217728), (4, -1), (5, 1048576), (6, -1), (7, -1), (8, 1048576), (9, -1), (10, -1), (11, -1), (12, -1), (13, 67108864), (14, 33554432), (15, 1572864), (16, 524288), (17, -1), (18, -1), (19, -1), (20, 16777216), (21, 8388608), (22, 262144), (23, 4194304), (24, 134217728), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, 1048576), (31, 4194304), (32, 32768), (33, 16384), (34, -1), (35, -1), (36, 134217728), (37, 268435456), (38, 16384), (39, -1), (40, 4194304), (41, -1), (42, 524288), (43, 524288), (44, -1), (45, 67108864), (46, 16777216), (47, -1), (48, -1), (49, 67108864), (50, -1), (51, -1), (52, -1)]

Covered at level 10 : set()

After reduction : 
 pending  : [23, 40, 22, 21, 20, 5, 15, 16, 14, 24, 8, 30, 33, 45, 38, 42, 43, 46, 3, 13, 36, 49, 31, 32, 37]
 solution : [0]


Solution : [0] has cost 6.


Decide in level 10 among pending : [23, 40, 22, 21, 20, 5, 15, 16, 14, 24, 8, 30, 33, 45, 38, 42, 43, 46, 3, 13, 36, 49, 31, 32, 37]

Coverage : [(0, -1), (1, -1), (2, -1), (3, 134217728), (4, -1), (5, 1048576), (6, -1), (7, -1), (8, 1048576), (9, -1), (10, -1), (11, -1), (12, -1), (13, 67108864), (14, 33554432), (15, 1572864), (16, 524288), (17, -1), (18, -1), (19, -1), (20, 16777216), (21, 8388608), (22, 262144), (23, 4194304), (24, 134217728), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, 1048576), (31, 4194304), (32, 32768), (33, 16384), (34, -1), (35, -1), (36, 134217728), (37, 268435456), (38, 16384), (39, -1), (40, 4194304), (41, -1), (42, 524288), (43, 524288), (44, -1), (45, 67108864), (46, 16777216), (47, -1), (48, -1), (49, 67108864), (50, -1), (51, -1), (52, -1)]

Decide 37 with phase True at level 10

After decision at level 10
 pending : [23, 40, 22, 21, 20, 5, 15, 16, 14, 24, 8, 30, 33, 45, 38, 42, 43, 46, 3, 13, 36, 49, 31, 32]
 solution : [0, 37]


New level: 11
 pending : [23, 40, 22, 21, 20, 5, 15, 16, 14, 24, 8, 30, 33, 45, 38, 42, 43, 46, 3, 13, 36, 49, 31, 32]
 solution : [0, 37]


Before reduction : 
 pending  : [23, 40, 22, 21, 20, 5, 15, 16, 14, 24, 8, 30, 33, 45, 38, 42, 43, 46, 3, 13, 36, 49, 31, 32]
 solution : [0, 37]

Essensial at level 11 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 134217728), (4, -1), (5, 1048576), (6, -1), (7, -1), (8, 1048576), (9, -1), (10, -1), (11, -1), (12, -1), (13, 67108864), (14, 33554432), (15, 1572864), (16, 524288), (17, -1), (18, -1), (19, -1), (20, 16777216), (21, 8388608), (22, 262144), (23, 4194304), (24, 134217728), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, 1048576), (31, 4194304), (32, 32768), (33, 16384), (34, -1), (35, -1), (36, 134217728), (37, 268435456), (38, 16384), (39, -1), (40, 4194304), (41, -1), (42, 524288), (43, 524288), (44, -1), (45, 67108864), (46, 16777216), (47, -1), (48, -1), (49, 67108864), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 33554432), (4, -1), (5, 524288), (6, -1), (7, -1), (8, 262144), (9, -1), (10, -1), (11, -1), (12, -1), (13, 33554432), (14, 16777216), (15, 524288), (16, 262144), (17, -1), (18, -1), (19, -1), (20, 16777216), (21, 8388608), (22, 262144), (23, 1048576), (24, 33554432), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, 262144), (31, 4194304), (32, 8192), (33, 4096), (34, -1), (35, -1), (36, 134217728), (37, -1), (38, 4096), (39, -1), (40, 1048576), (41, -1), (42, 131072), (43, 131072), (44, -1), (45, 33554432), (46, 4194304), (47, -1), (48, -1), (49, 67108864), (50, -1), (51, -1), (52, -1)]

Covered at level 11 : set()

After reduction : 
 pending  : [23, 40, 22, 21, 20, 5, 15, 16, 14, 24, 8, 30, 33, 45, 38, 42, 43, 46, 3, 13, 36, 49, 31, 32]
 solution : [0, 37]


Solution : [0, 37] has cost 24.


Before backtrack at level 11
 pending : [23, 40, 22, 21, 20, 5, 15, 16, 14, 24, 8, 30, 33, 45, 38, 42, 43, 46, 3, 13, 36, 49, 31, 32]
 solution : [0, 37]

After backtrack at level 11
 pending : [23, 40, 22, 21, 20, 5, 15, 16, 14, 24, 8, 30, 33, 45, 38, 42, 43, 46, 3, 13, 36, 49, 31, 32]
 solution : [0, 37]


Invert decision for 37 at level 10


New level: 11
 pending : [23, 40, 22, 21, 20, 5, 15, 16, 14, 24, 8, 30, 33, 45, 38, 42, 43, 46, 3, 13, 36, 49, 31, 32]
 solution : [0]


Before reduction : 
 pending  : [23, 40, 22, 21, 20, 5, 15, 16, 14, 24, 8, 30, 33, 45, 38, 42, 43, 46, 3, 13, 36, 49, 31, 32]
 solution : [0]

Essensial at level 11 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 33554432), (4, -1), (5, 524288), (6, -1), (7, -1), (8, 262144), (9, -1), (10, -1), (11, -1), (12, -1), (13, 33554432), (14, 16777216), (15, 524288), (16, 262144), (17, -1), (18, -1), (19, -1), (20, 16777216), (21, 8388608), (22, 262144), (23, 1048576), (24, 33554432), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, 262144), (31, 4194304), (32, 8192), (33, 4096), (34, -1), (35, -1), (36, 134217728), (37, -1), (38, 4096), (39, -1), (40, 1048576), (41, -1), (42, 131072), (43, 131072), (44, -1), (45, 33554432), (46, 4194304), (47, -1), (48, -1), (49, 67108864), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 134217728), (4, -1), (5, 1048576), (6, -1), (7, -1), (8, 1048576), (9, -1), (10, -1), (11, -1), (12, -1), (13, 67108864), (14, 33554432), (15, 1572864), (16, 524288), (17, -1), (18, -1), (19, -1), (20, 16777216), (21, 8388608), (22, 262144), (23, 4194304), (24, 134217728), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, 1048576), (31, 4194304), (32, 32768), (33, 16384), (34, -1), (35, -1), (36, 134217728), (37, -1), (38, 16384), (39, -1), (40, 4194304), (41, -1), (42, 524288), (43, 524288), (44, -1), (45, 67108864), (46, 16777216), (47, -1), (48, -1), (49, 67108864), (50, -1), (51, -1), (52, -1)]

Covered at level 11 : set()

After reduction : 
 pending  : [23, 40, 22, 21, 20, 5, 15, 16, 14, 24, 8, 30, 33, 45, 38, 42, 43, 46, 3, 13, 36, 49, 31, 32]
 solution : [0]


Solution : [0] has cost 6.


Decide in level 11 among pending : [23, 40, 22, 21, 20, 5, 15, 16, 14, 24, 8, 30, 33, 45, 38, 42, 43, 46, 3, 13, 36, 49, 31, 32]

Coverage : [(0, -1), (1, -1), (2, -1), (3, 134217728), (4, -1), (5, 1048576), (6, -1), (7, -1), (8, 1048576), (9, -1), (10, -1), (11, -1), (12, -1), (13, 67108864), (14, 33554432), (15, 1572864), (16, 524288), (17, -1), (18, -1), (19, -1), (20, 16777216), (21, 8388608), (22, 262144), (23, 4194304), (24, 134217728), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, 1048576), (31, 4194304), (32, 32768), (33, 16384), (34, -1), (35, -1), (36, 134217728), (37, -1), (38, 16384), (39, -1), (40, 4194304), (41, -1), (42, 524288), (43, 524288), (44, -1), (45, 67108864), (46, 16777216), (47, -1), (48, -1), (49, 67108864), (50, -1), (51, -1), (52, -1)]

Decide 24 with phase True at level 11

After decision at level 11
 pending : [23, 40, 22, 21, 20, 5, 15, 16, 14, 8, 30, 33, 45, 38, 42, 43, 46, 3, 13, 36, 49, 31, 32]
 solution : [0, 24]


New level: 12
 pending : [23, 40, 22, 21, 20, 5, 15, 16, 14, 8, 30, 33, 45, 38, 42, 43, 46, 3, 13, 36, 49, 31, 32]
 solution : [0, 24]


Before reduction : 
 pending  : [23, 40, 22, 21, 20, 5, 15, 16, 14, 8, 30, 33, 45, 38, 42, 43, 46, 3, 13, 36, 49, 31, 32]
 solution : [0, 24]

Essensial at level 12 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 134217728), (4, -1), (5, 1048576), (6, -1), (7, -1), (8, 1048576), (9, -1), (10, -1), (11, -1), (12, -1), (13, 67108864), (14, 33554432), (15, 1572864), (16, 524288), (17, -1), (18, -1), (19, -1), (20, 16777216), (21, 8388608), (22, 262144), (23, 4194304), (24, 134217728), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, 1048576), (31, 4194304), (32, 32768), (33, 16384), (34, -1), (35, -1), (36, 134217728), (37, -1), (38, 16384), (39, -1), (40, 4194304), (41, -1), (42, 524288), (43, 524288), (44, -1), (45, 67108864), (46, 16777216), (47, -1), (48, -1), (49, 67108864), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 0), (4, -1), (5, 524288), (6, -1), (7, -1), (8, 0), (9, -1), (10, -1), (11, -1), (12, -1), (13, 33554432), (14, 16777216), (15, 524288), (16, 262144), (17, -1), (18, -1), (19, -1), (20, 16777216), (21, 8388608), (22, 262144), (23, 2097152), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, 0), (31, 0), (32, 0), (33, 0), (34, -1), (35, -1), (36, 0), (37, -1), (38, 0), (39, -1), (40, 2097152), (41, -1), (42, 0), (43, 0), (44, -1), (45, 0), (46, 0), (47, -1), (48, -1), (49, 0), (50, -1), (51, -1), (52, -1)]

Covered at level 12 : {32, 33, 3, 36, 38, 8, 42, 43, 45, 46, 49, 30, 31}

After reduction : 
 pending  : [23, 40, 22, 21, 20, 5, 15, 16, 14, 13]
 solution : [0, 24]


Before reduction : 
 pending  : [23, 40, 22, 21, 20, 5, 15, 16, 14, 13]
 solution : [0, 24]

Essensial at level 12 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 0), (4, -1), (5, 524288), (6, -1), (7, -1), (8, 0), (9, -1), (10, -1), (11, -1), (12, -1), (13, 33554432), (14, 16777216), (15, 524288), (16, 262144), (17, -1), (18, -1), (19, -1), (20, 16777216), (21, 8388608), (22, 262144), (23, 2097152), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, 0), (31, 0), (32, 0), (33, 0), (34, -1), (35, -1), (36, 0), (37, -1), (38, 0), (39, -1), (40, 2097152), (41, -1), (42, 0), (43, 0), (44, -1), (45, 0), (46, 0), (47, -1), (48, -1), (49, 0), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 524288), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, 33554432), (14, 16777216), (15, 524288), (16, 262144), (17, -1), (18, -1), (19, -1), (20, 16777216), (21, 8388608), (22, 262144), (23, 2097152), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, 2097152), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 12 : set()

After reduction : 
 pending  : [23, 40, 22, 21, 20, 5, 15, 16, 14, 13]
 solution : [0, 24]


Solution : [0, 24] has cost 13.


Decide in level 12 among pending : [23, 40, 22, 21, 20, 5, 15, 16, 14, 13]

Coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 524288), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, 33554432), (14, 16777216), (15, 524288), (16, 262144), (17, -1), (18, -1), (19, -1), (20, 16777216), (21, 8388608), (22, 262144), (23, 2097152), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, 2097152), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Decide 13 with phase True at level 12

After decision at level 12
 pending : [23, 40, 22, 21, 20, 5, 15, 16, 14]
 solution : [0, 24, 13]


New level: 13
 pending : [23, 40, 22, 21, 20, 5, 15, 16, 14]
 solution : [0, 24, 13]


Before reduction : 
 pending  : [23, 40, 22, 21, 20, 5, 15, 16, 14]
 solution : [0, 24, 13]

Essensial at level 13 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 524288), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, 33554432), (14, 16777216), (15, 524288), (16, 262144), (17, -1), (18, -1), (19, -1), (20, 16777216), (21, 8388608), (22, 262144), (23, 2097152), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, 2097152), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 0), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 0), (15, 0), (16, 0), (17, -1), (18, -1), (19, -1), (20, 262144), (21, 65536), (22, 65536), (23, 2048), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, 2048), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 13 : {16, 5, 14, 15}

After reduction : 
 pending  : [23, 40, 22, 21, 20]
 solution : [0, 24, 13]


Before reduction : 
 pending  : [23, 40, 22, 21, 20]
 solution : [0, 24, 13]

Essensial at level 13 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 0), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 0), (15, 0), (16, 0), (17, -1), (18, -1), (19, -1), (20, 262144), (21, 65536), (22, 65536), (23, 2048), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, 2048), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, 262144), (21, 65536), (22, 65536), (23, 2048), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, 2048), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 13 : set()

After reduction : 
 pending  : [23, 40, 22, 21, 20]
 solution : [0, 24, 13]


Solution : [0, 24, 13] has cost 22.


Before backtrack at level 13
 pending : [23, 40, 22, 21, 20]
 solution : [0, 24, 13]

After backtrack at level 13
 pending : [23, 40, 22, 21, 20, 5, 15, 16, 14]
 solution : [0, 24, 13]


Invert decision for 13 at level 12


New level: 13
 pending : [23, 40, 22, 21, 20, 5, 15, 16, 14]
 solution : [0, 24]


Before reduction : 
 pending  : [23, 40, 22, 21, 20, 5, 15, 16, 14]
 solution : [0, 24]

Essensial at level 13 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, 262144), (21, 65536), (22, 65536), (23, 2048), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, 2048), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 524288), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 16777216), (15, 524288), (16, 262144), (17, -1), (18, -1), (19, -1), (20, 16777216), (21, 8388608), (22, 262144), (23, 2097152), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, 2097152), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 13 : set()

After reduction : 
 pending  : [23, 40, 22, 21, 20, 5, 15, 16, 14]
 solution : [0, 24]


Solution : [0, 24] has cost 13.


Decide in level 13 among pending : [23, 40, 22, 21, 20, 5, 15, 16, 14]

Coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 524288), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 16777216), (15, 524288), (16, 262144), (17, -1), (18, -1), (19, -1), (20, 16777216), (21, 8388608), (22, 262144), (23, 2097152), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, 2097152), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Decide 20 with phase True at level 13

After decision at level 13
 pending : [23, 40, 22, 21, 5, 15, 16, 14]
 solution : [0, 24, 20]


New level: 14
 pending : [23, 40, 22, 21, 5, 15, 16, 14]
 solution : [0, 24, 20]


Before reduction : 
 pending  : [23, 40, 22, 21, 5, 15, 16, 14]
 solution : [0, 24, 20]

Essensial at level 14 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 524288), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 16777216), (15, 524288), (16, 262144), (17, -1), (18, -1), (19, -1), (20, 16777216), (21, 8388608), (22, 262144), (23, 2097152), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, 2097152), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 262144), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 4194304), (15, 262144), (16, 0), (17, -1), (18, -1), (19, -1), (20, -1), (21, 0), (22, 0), (23, 524288), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, 524288), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 14 : {16, 21, 22}

After reduction : 
 pending  : [23, 40, 5, 15, 14]
 solution : [0, 24, 20]


Before reduction : 
 pending  : [23, 40, 5, 15, 14]
 solution : [0, 24, 20]

Essensial at level 14 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 262144), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 4194304), (15, 262144), (16, 0), (17, -1), (18, -1), (19, -1), (20, -1), (21, 0), (22, 0), (23, 524288), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, 524288), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 262144), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 4194304), (15, 262144), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, 524288), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, 524288), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 14 : set()

After reduction : 
 pending  : [23, 40, 5, 15, 14]
 solution : [0, 24, 20]


Solution : [0, 24, 20] has cost 20.


Before backtrack at level 14
 pending : [23, 40, 5, 15, 14]
 solution : [0, 24, 20]

After backtrack at level 14
 pending : [23, 40, 5, 15, 14, 22, 21, 16]
 solution : [0, 24, 20]


Invert decision for 20 at level 13


New level: 14
 pending : [23, 40, 5, 15, 14, 22, 21, 16]
 solution : [0, 24]


Before reduction : 
 pending  : [23, 40, 5, 15, 14, 22, 21, 16]
 solution : [0, 24]

Essensial at level 14 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 262144), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 4194304), (15, 262144), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, 524288), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, 524288), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 524288), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 16777216), (15, 524288), (16, 262144), (17, -1), (18, -1), (19, -1), (20, -1), (21, 8388608), (22, 262144), (23, 2097152), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, 2097152), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 14 : set()

After reduction : 
 pending  : [23, 40, 5, 15, 14, 22, 21, 16]
 solution : [0, 24]


Solution : [0, 24] has cost 13.


Decide in level 14 among pending : [23, 40, 5, 15, 14, 22, 21, 16]

Coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 524288), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 16777216), (15, 524288), (16, 262144), (17, -1), (18, -1), (19, -1), (20, -1), (21, 8388608), (22, 262144), (23, 2097152), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, 2097152), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Decide 14 with phase True at level 14

After decision at level 14
 pending : [23, 40, 5, 15, 22, 21, 16]
 solution : [0, 24, 14]


New level: 15
 pending : [23, 40, 5, 15, 22, 21, 16]
 solution : [0, 24, 14]


Before reduction : 
 pending  : [23, 40, 5, 15, 22, 21, 16]
 solution : [0, 24, 14]

Essensial at level 15 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 524288), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 16777216), (15, 524288), (16, 262144), (17, -1), (18, -1), (19, -1), (20, -1), (21, 8388608), (22, 262144), (23, 2097152), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, 2097152), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 0), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, 0), (16, 0), (17, -1), (18, -1), (19, -1), (20, -1), (21, 65536), (22, 65536), (23, 2048), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, 2048), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 15 : {16, 5, 15}

After reduction : 
 pending  : [23, 40, 22, 21]
 solution : [0, 24, 14]


Before reduction : 
 pending  : [23, 40, 22, 21]
 solution : [0, 24, 14]

Essensial at level 15 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 0), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, 0), (16, 0), (17, -1), (18, -1), (19, -1), (20, -1), (21, 65536), (22, 65536), (23, 2048), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, 2048), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, 65536), (22, 65536), (23, 2048), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, 2048), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 15 : set()

After reduction : 
 pending  : [23, 40, 22, 21]
 solution : [0, 24, 14]


Solution : [0, 24, 14] has cost 22.


Before backtrack at level 15
 pending : [23, 40, 22, 21]
 solution : [0, 24, 14]

After backtrack at level 15
 pending : [23, 40, 22, 21, 5, 15, 16]
 solution : [0, 24, 14]


Invert decision for 14 at level 14


New level: 15
 pending : [23, 40, 22, 21, 5, 15, 16]
 solution : [0, 24]


Before reduction : 
 pending  : [23, 40, 22, 21, 5, 15, 16]
 solution : [0, 24]

Essensial at level 15 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, 65536), (22, 65536), (23, 2048), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, 2048), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 524288), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, 524288), (16, 262144), (17, -1), (18, -1), (19, -1), (20, -1), (21, 8388608), (22, 262144), (23, 2097152), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, 2097152), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 15 : set()

After reduction : 
 pending  : [23, 40, 22, 21, 5, 15, 16]
 solution : [0, 24]


Solution : [0, 24] has cost 13.


Decide in level 15 among pending : [23, 40, 22, 21, 5, 15, 16]

Coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 524288), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, 524288), (16, 262144), (17, -1), (18, -1), (19, -1), (20, -1), (21, 8388608), (22, 262144), (23, 2097152), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, 2097152), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Decide 21 with phase True at level 15

After decision at level 15
 pending : [23, 40, 22, 5, 15, 16]
 solution : [0, 24, 21]


New level: 16
 pending : [23, 40, 22, 5, 15, 16]
 solution : [0, 24, 21]


Before reduction : 
 pending  : [23, 40, 22, 5, 15, 16]
 solution : [0, 24, 21]

Essensial at level 16 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 524288), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, 524288), (16, 262144), (17, -1), (18, -1), (19, -1), (20, -1), (21, 8388608), (22, 262144), (23, 2097152), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, 2097152), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 262144), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, 262144), (16, 0), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, 0), (23, 524288), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, 524288), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 16 : {16, 22}

After reduction : 
 pending  : [23, 40, 5, 15]
 solution : [0, 24, 21]


Before reduction : 
 pending  : [23, 40, 5, 15]
 solution : [0, 24, 21]

Essensial at level 16 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 262144), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, 262144), (16, 0), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, 0), (23, 524288), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, 524288), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 262144), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, 262144), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, 524288), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, 524288), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 16 : set()

After reduction : 
 pending  : [23, 40, 5, 15]
 solution : [0, 24, 21]


Solution : [0, 24, 21] has cost 20.


Before backtrack at level 16
 pending : [23, 40, 5, 15]
 solution : [0, 24, 21]

After backtrack at level 16
 pending : [23, 40, 5, 15, 22, 16]
 solution : [0, 24, 21]


Invert decision for 21 at level 15


New level: 16
 pending : [23, 40, 5, 15, 22, 16]
 solution : [0, 24]


Before reduction : 
 pending  : [23, 40, 5, 15, 22, 16]
 solution : [0, 24]

Essensial at level 16 : {22}

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 262144), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, 262144), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, 524288), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, 524288), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 524288), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, 524288), (16, 131072), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, 2097152), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, 2097152), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 16 : set()

After reduction : 
 pending  : [23, 40, 5, 15, 16]
 solution : [0, 24, 22]


Before reduction : 
 pending  : [23, 40, 5, 15, 16]
 solution : [0, 24, 22]

Essensial at level 16 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 524288), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, 524288), (16, 131072), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, 2097152), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, 2097152), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 524288), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, 524288), (16, 131072), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, 2097152), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, 2097152), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 16 : set()

After reduction : 
 pending  : [23, 40, 5, 15, 16]
 solution : [0, 24, 22]


Solution : [0, 24, 22] has cost 20.


Before backtrack at level 16
 pending : [23, 40, 5, 15, 16]
 solution : [0, 24, 22]

After backtrack at level 16
 pending : [23, 40, 5, 15, 16, 22]
 solution : [0, 24]


Before backtrack at level 15
 pending : [23, 40, 5, 15, 16, 22]
 solution : [0, 24]

After backtrack at level 15
 pending : [23, 40, 5, 15, 16, 22, 21]
 solution : [0, 24]


Before backtrack at level 14
 pending : [23, 40, 5, 15, 16, 22, 21]
 solution : [0, 24]

After backtrack at level 14
 pending : [23, 40, 5, 15, 16, 22, 21, 14]
 solution : [0, 24]


Before backtrack at level 13
 pending : [23, 40, 5, 15, 16, 22, 21, 14]
 solution : [0, 24]

After backtrack at level 13
 pending : [23, 40, 5, 15, 16, 22, 21, 14, 20]
 solution : [0, 24]


Before backtrack at level 12
 pending : [23, 40, 5, 15, 16, 22, 21, 14, 20]
 solution : [0, 24]

After backtrack at level 12
 pending : [23, 40, 5, 15, 16, 22, 21, 14, 20, 8, 30, 33, 45, 38, 42, 43, 46, 3, 36, 49, 31, 32, 13]
 solution : [0, 24]


Invert decision for 24 at level 11


New level: 12
 pending : [23, 40, 5, 15, 16, 22, 21, 14, 20, 8, 30, 33, 45, 38, 42, 43, 46, 3, 36, 49, 31, 32, 13]
 solution : [0]


Before reduction : 
 pending  : [23, 40, 5, 15, 16, 22, 21, 14, 20, 8, 30, 33, 45, 38, 42, 43, 46, 3, 36, 49, 31, 32, 13]
 solution : [0]

Essensial at level 12 : {3}

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 524288), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, 524288), (16, 131072), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, 2097152), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, 2097152), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 524288), (6, -1), (7, -1), (8, 0), (9, -1), (10, -1), (11, -1), (12, -1), (13, 33554432), (14, 16777216), (15, 524288), (16, 262144), (17, -1), (18, -1), (19, -1), (20, 16777216), (21, 8388608), (22, 262144), (23, 2097152), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, 0), (31, 0), (32, 0), (33, 0), (34, -1), (35, -1), (36, 0), (37, -1), (38, 0), (39, -1), (40, 2097152), (41, -1), (42, 0), (43, 0), (44, -1), (45, 0), (46, 0), (47, -1), (48, -1), (49, 0), (50, -1), (51, -1), (52, -1)]

Covered at level 12 : {32, 33, 36, 38, 8, 42, 43, 45, 46, 49, 30, 31}

After reduction : 
 pending  : [23, 40, 5, 15, 16, 22, 21, 14, 20, 13]
 solution : [0, 3]


Before reduction : 
 pending  : [23, 40, 5, 15, 16, 22, 21, 14, 20, 13]
 solution : [0, 3]

Essensial at level 12 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 524288), (6, -1), (7, -1), (8, 0), (9, -1), (10, -1), (11, -1), (12, -1), (13, 33554432), (14, 16777216), (15, 524288), (16, 262144), (17, -1), (18, -1), (19, -1), (20, 16777216), (21, 8388608), (22, 262144), (23, 2097152), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, 0), (31, 0), (32, 0), (33, 0), (34, -1), (35, -1), (36, 0), (37, -1), (38, 0), (39, -1), (40, 2097152), (41, -1), (42, 0), (43, 0), (44, -1), (45, 0), (46, 0), (47, -1), (48, -1), (49, 0), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 524288), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, 33554432), (14, 16777216), (15, 524288), (16, 262144), (17, -1), (18, -1), (19, -1), (20, 16777216), (21, 8388608), (22, 262144), (23, 2097152), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, 2097152), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 12 : set()

After reduction : 
 pending  : [23, 40, 5, 15, 16, 22, 21, 14, 20, 13]
 solution : [0, 3]


Solution : [0, 3] has cost 10.


Decide in level 12 among pending : [23, 40, 5, 15, 16, 22, 21, 14, 20, 13]

Coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 524288), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, 33554432), (14, 16777216), (15, 524288), (16, 262144), (17, -1), (18, -1), (19, -1), (20, 16777216), (21, 8388608), (22, 262144), (23, 2097152), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, 2097152), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Decide 13 with phase True at level 12

After decision at level 12
 pending : [23, 40, 5, 15, 16, 22, 21, 14, 20]
 solution : [0, 3, 13]


New level: 13
 pending : [23, 40, 5, 15, 16, 22, 21, 14, 20]
 solution : [0, 3, 13]


Before reduction : 
 pending  : [23, 40, 5, 15, 16, 22, 21, 14, 20]
 solution : [0, 3, 13]

Essensial at level 13 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 524288), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, 33554432), (14, 16777216), (15, 524288), (16, 262144), (17, -1), (18, -1), (19, -1), (20, 16777216), (21, 8388608), (22, 262144), (23, 2097152), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, 2097152), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 0), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 0), (15, 0), (16, 0), (17, -1), (18, -1), (19, -1), (20, 262144), (21, 65536), (22, 65536), (23, 2048), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, 2048), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 13 : {16, 5, 14, 15}

After reduction : 
 pending  : [23, 40, 22, 21, 20]
 solution : [0, 3, 13]


Before reduction : 
 pending  : [23, 40, 22, 21, 20]
 solution : [0, 3, 13]

Essensial at level 13 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 0), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 0), (15, 0), (16, 0), (17, -1), (18, -1), (19, -1), (20, 262144), (21, 65536), (22, 65536), (23, 2048), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, 2048), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, 262144), (21, 65536), (22, 65536), (23, 2048), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, 2048), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 13 : set()

After reduction : 
 pending  : [23, 40, 22, 21, 20]
 solution : [0, 3, 13]


Solution : [0, 3, 13] has cost 19.


Before backtrack at level 13
 pending : [23, 40, 22, 21, 20]
 solution : [0, 3, 13]

After backtrack at level 13
 pending : [23, 40, 22, 21, 20, 5, 15, 16, 14]
 solution : [0, 3, 13]


Invert decision for 13 at level 12


New level: 13
 pending : [23, 40, 22, 21, 20, 5, 15, 16, 14]
 solution : [0, 3]


Before reduction : 
 pending  : [23, 40, 22, 21, 20, 5, 15, 16, 14]
 solution : [0, 3]

Essensial at level 13 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, 262144), (21, 65536), (22, 65536), (23, 2048), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, 2048), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 524288), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 16777216), (15, 524288), (16, 262144), (17, -1), (18, -1), (19, -1), (20, 16777216), (21, 8388608), (22, 262144), (23, 2097152), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, 2097152), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 13 : set()

After reduction : 
 pending  : [23, 40, 22, 21, 20, 5, 15, 16, 14]
 solution : [0, 3]


Solution : [0, 3] has cost 10.


Decide in level 13 among pending : [23, 40, 22, 21, 20, 5, 15, 16, 14]

Coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 524288), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 16777216), (15, 524288), (16, 262144), (17, -1), (18, -1), (19, -1), (20, 16777216), (21, 8388608), (22, 262144), (23, 2097152), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, 2097152), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Decide 20 with phase True at level 13

After decision at level 13
 pending : [23, 40, 22, 21, 5, 15, 16, 14]
 solution : [0, 3, 20]


New level: 14
 pending : [23, 40, 22, 21, 5, 15, 16, 14]
 solution : [0, 3, 20]


Before reduction : 
 pending  : [23, 40, 22, 21, 5, 15, 16, 14]
 solution : [0, 3, 20]

Essensial at level 14 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 524288), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 16777216), (15, 524288), (16, 262144), (17, -1), (18, -1), (19, -1), (20, 16777216), (21, 8388608), (22, 262144), (23, 2097152), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, 2097152), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 262144), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 4194304), (15, 262144), (16, 0), (17, -1), (18, -1), (19, -1), (20, -1), (21, 0), (22, 0), (23, 524288), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, 524288), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 14 : {16, 21, 22}

After reduction : 
 pending  : [23, 40, 5, 15, 14]
 solution : [0, 3, 20]


Before reduction : 
 pending  : [23, 40, 5, 15, 14]
 solution : [0, 3, 20]

Essensial at level 14 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 262144), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 4194304), (15, 262144), (16, 0), (17, -1), (18, -1), (19, -1), (20, -1), (21, 0), (22, 0), (23, 524288), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, 524288), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 262144), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 4194304), (15, 262144), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, 524288), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, 524288), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 14 : set()

After reduction : 
 pending  : [23, 40, 5, 15, 14]
 solution : [0, 3, 20]


Solution : [0, 3, 20] has cost 17.


Before backtrack at level 14
 pending : [23, 40, 5, 15, 14]
 solution : [0, 3, 20]

After backtrack at level 14
 pending : [23, 40, 5, 15, 14, 22, 21, 16]
 solution : [0, 3, 20]


Invert decision for 20 at level 13


New level: 14
 pending : [23, 40, 5, 15, 14, 22, 21, 16]
 solution : [0, 3]


Before reduction : 
 pending  : [23, 40, 5, 15, 14, 22, 21, 16]
 solution : [0, 3]

Essensial at level 14 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 262144), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 4194304), (15, 262144), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, 524288), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, 524288), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 524288), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 16777216), (15, 524288), (16, 262144), (17, -1), (18, -1), (19, -1), (20, -1), (21, 8388608), (22, 262144), (23, 2097152), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, 2097152), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 14 : set()

After reduction : 
 pending  : [23, 40, 5, 15, 14, 22, 21, 16]
 solution : [0, 3]


Solution : [0, 3] has cost 10.


Decide in level 14 among pending : [23, 40, 5, 15, 14, 22, 21, 16]

Coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 524288), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 16777216), (15, 524288), (16, 262144), (17, -1), (18, -1), (19, -1), (20, -1), (21, 8388608), (22, 262144), (23, 2097152), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, 2097152), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Decide 14 with phase True at level 14

After decision at level 14
 pending : [23, 40, 5, 15, 22, 21, 16]
 solution : [0, 3, 14]


New level: 15
 pending : [23, 40, 5, 15, 22, 21, 16]
 solution : [0, 3, 14]


Before reduction : 
 pending  : [23, 40, 5, 15, 22, 21, 16]
 solution : [0, 3, 14]

Essensial at level 15 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 524288), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 16777216), (15, 524288), (16, 262144), (17, -1), (18, -1), (19, -1), (20, -1), (21, 8388608), (22, 262144), (23, 2097152), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, 2097152), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 0), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, 0), (16, 0), (17, -1), (18, -1), (19, -1), (20, -1), (21, 65536), (22, 65536), (23, 2048), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, 2048), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 15 : {16, 5, 15}

After reduction : 
 pending  : [23, 40, 22, 21]
 solution : [0, 3, 14]


Before reduction : 
 pending  : [23, 40, 22, 21]
 solution : [0, 3, 14]

Essensial at level 15 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 0), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, 0), (16, 0), (17, -1), (18, -1), (19, -1), (20, -1), (21, 65536), (22, 65536), (23, 2048), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, 2048), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, 65536), (22, 65536), (23, 2048), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, 2048), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 15 : set()

After reduction : 
 pending  : [23, 40, 22, 21]
 solution : [0, 3, 14]


Solution : [0, 3, 14] has cost 19.


Before backtrack at level 15
 pending : [23, 40, 22, 21]
 solution : [0, 3, 14]

After backtrack at level 15
 pending : [23, 40, 22, 21, 5, 15, 16]
 solution : [0, 3, 14]


Invert decision for 14 at level 14


New level: 15
 pending : [23, 40, 22, 21, 5, 15, 16]
 solution : [0, 3]


Before reduction : 
 pending  : [23, 40, 22, 21, 5, 15, 16]
 solution : [0, 3]

Essensial at level 15 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, 65536), (22, 65536), (23, 2048), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, 2048), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 524288), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, 524288), (16, 262144), (17, -1), (18, -1), (19, -1), (20, -1), (21, 8388608), (22, 262144), (23, 2097152), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, 2097152), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 15 : set()

After reduction : 
 pending  : [23, 40, 22, 21, 5, 15, 16]
 solution : [0, 3]


Solution : [0, 3] has cost 10.


Decide in level 15 among pending : [23, 40, 22, 21, 5, 15, 16]

Coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 524288), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, 524288), (16, 262144), (17, -1), (18, -1), (19, -1), (20, -1), (21, 8388608), (22, 262144), (23, 2097152), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, 2097152), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Decide 21 with phase True at level 15

After decision at level 15
 pending : [23, 40, 22, 5, 15, 16]
 solution : [0, 3, 21]


New level: 16
 pending : [23, 40, 22, 5, 15, 16]
 solution : [0, 3, 21]


Before reduction : 
 pending  : [23, 40, 22, 5, 15, 16]
 solution : [0, 3, 21]

Essensial at level 16 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 524288), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, 524288), (16, 262144), (17, -1), (18, -1), (19, -1), (20, -1), (21, 8388608), (22, 262144), (23, 2097152), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, 2097152), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 262144), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, 262144), (16, 0), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, 0), (23, 524288), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, 524288), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 16 : {16, 22}

After reduction : 
 pending  : [23, 40, 5, 15]
 solution : [0, 3, 21]


Before reduction : 
 pending  : [23, 40, 5, 15]
 solution : [0, 3, 21]

Essensial at level 16 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 262144), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, 262144), (16, 0), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, 0), (23, 524288), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, 524288), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 262144), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, 262144), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, 524288), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, 524288), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 16 : set()

After reduction : 
 pending  : [23, 40, 5, 15]
 solution : [0, 3, 21]


Solution : [0, 3, 21] has cost 17.


Before backtrack at level 16
 pending : [23, 40, 5, 15]
 solution : [0, 3, 21]

After backtrack at level 16
 pending : [23, 40, 5, 15, 22, 16]
 solution : [0, 3, 21]


Invert decision for 21 at level 15


New level: 16
 pending : [23, 40, 5, 15, 22, 16]
 solution : [0, 3]


Before reduction : 
 pending  : [23, 40, 5, 15, 22, 16]
 solution : [0, 3]

Essensial at level 16 : {22}

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 262144), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, 262144), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, 524288), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, 524288), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 524288), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, 524288), (16, 131072), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, 2097152), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, 2097152), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 16 : set()

After reduction : 
 pending  : [23, 40, 5, 15, 16]
 solution : [0, 3, 22]


Before reduction : 
 pending  : [23, 40, 5, 15, 16]
 solution : [0, 3, 22]

Essensial at level 16 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 524288), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, 524288), (16, 131072), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, 2097152), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, 2097152), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 524288), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, 524288), (16, 131072), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, 2097152), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, 2097152), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 16 : set()

After reduction : 
 pending  : [23, 40, 5, 15, 16]
 solution : [0, 3, 22]


Solution : [0, 3, 22] has cost 17.


Before backtrack at level 16
 pending : [23, 40, 5, 15, 16]
 solution : [0, 3, 22]

After backtrack at level 16
 pending : [23, 40, 5, 15, 16, 22]
 solution : [0, 3]


Before backtrack at level 15
 pending : [23, 40, 5, 15, 16, 22]
 solution : [0, 3]

After backtrack at level 15
 pending : [23, 40, 5, 15, 16, 22, 21]
 solution : [0, 3]


Before backtrack at level 14
 pending : [23, 40, 5, 15, 16, 22, 21]
 solution : [0, 3]

After backtrack at level 14
 pending : [23, 40, 5, 15, 16, 22, 21, 14]
 solution : [0, 3]


Before backtrack at level 13
 pending : [23, 40, 5, 15, 16, 22, 21, 14]
 solution : [0, 3]

After backtrack at level 13
 pending : [23, 40, 5, 15, 16, 22, 21, 14, 20]
 solution : [0, 3]


Before backtrack at level 12
 pending : [23, 40, 5, 15, 16, 22, 21, 14, 20]
 solution : [0, 3]

After backtrack at level 12
 pending : [23, 40, 5, 15, 16, 22, 21, 14, 20, 3, 8, 30, 33, 45, 38, 42, 43, 46, 36, 49, 31, 32, 13]
 solution : [0]


Before backtrack at level 11
 pending : [23, 40, 5, 15, 16, 22, 21, 14, 20, 3, 8, 30, 33, 45, 38, 42, 43, 46, 36, 49, 31, 32, 13]
 solution : [0]

After backtrack at level 11
 pending : [23, 40, 5, 15, 16, 22, 21, 14, 20, 3, 8, 30, 33, 45, 38, 42, 43, 46, 36, 49, 31, 32, 13, 24]
 solution : [0]


Before backtrack at level 10
 pending : [23, 40, 5, 15, 16, 22, 21, 14, 20, 3, 8, 30, 33, 45, 38, 42, 43, 46, 36, 49, 31, 32, 13, 24]
 solution : [0]

After backtrack at level 10
 pending : [23, 40, 5, 15, 16, 22, 21, 14, 20, 3, 8, 30, 33, 45, 38, 42, 43, 46, 36, 49, 31, 32, 13, 24, 37]
 solution : [0]


Before backtrack at level 9
 pending : [23, 40, 5, 15, 16, 22, 21, 14, 20, 3, 8, 30, 33, 45, 38, 42, 43, 46, 36, 49, 31, 32, 13, 24, 37]
 solution : [0]

After backtrack at level 9
 pending : [23, 40, 5, 15, 16, 22, 21, 14, 20, 3, 8, 30, 33, 45, 38, 42, 43, 46, 36, 49, 31, 32, 13, 24, 37, 25]
 solution : [0]


Before backtrack at level 8
 pending : [23, 40, 5, 15, 16, 22, 21, 14, 20, 3, 8, 30, 33, 45, 38, 42, 43, 46, 36, 49, 31, 32, 13, 24, 37, 25]
 solution : [0]

After backtrack at level 8
 pending : [23, 40, 5, 15, 16, 22, 21, 14, 20, 3, 8, 30, 33, 45, 38, 42, 43, 46, 36, 49, 31, 32, 13, 24, 37, 25, 19]
 solution : [0]


Before backtrack at level 7
 pending : [23, 40, 5, 15, 16, 22, 21, 14, 20, 3, 8, 30, 33, 45, 38, 42, 43, 46, 36, 49, 31, 32, 13, 24, 37, 25, 19]
 solution : [0]

After backtrack at level 7
 pending : [23, 40, 5, 15, 16, 22, 21, 14, 20, 3, 8, 30, 33, 45, 38, 42, 43, 46, 36, 49, 31, 32, 13, 24, 37, 25, 19, 39]
 solution : [0]


Before backtrack at level 6
 pending : [23, 40, 5, 15, 16, 22, 21, 14, 20, 3, 8, 30, 33, 45, 38, 42, 43, 46, 36, 49, 31, 32, 13, 24, 37, 25, 19, 39]
 solution : [0]

After backtrack at level 6
 pending : [23, 40, 5, 15, 16, 22, 21, 14, 20, 3, 8, 30, 33, 45, 38, 42, 43, 46, 36, 49, 31, 32, 13, 24, 37, 25, 19, 39, 18]
 solution : [0]


Before backtrack at level 5
 pending : [23, 40, 5, 15, 16, 22, 21, 14, 20, 3, 8, 30, 33, 45, 38, 42, 43, 46, 36, 49, 31, 32, 13, 24, 37, 25, 19, 39, 18]
 solution : [0]

After backtrack at level 5
 pending : [23, 40, 5, 15, 16, 22, 21, 14, 20, 3, 8, 30, 33, 45, 38, 42, 43, 46, 36, 49, 31, 32, 13, 24, 37, 25, 19, 39, 18, 35]
 solution : [0]


Before backtrack at level 4
 pending : [23, 40, 5, 15, 16, 22, 21, 14, 20, 3, 8, 30, 33, 45, 38, 42, 43, 46, 36, 49, 31, 32, 13, 24, 37, 25, 19, 39, 18, 35]
 solution : [0]

After backtrack at level 4
 pending : [23, 40, 5, 15, 16, 22, 21, 14, 20, 3, 8, 30, 33, 45, 38, 42, 43, 46, 36, 49, 31, 32, 13, 24, 37, 25, 19, 39, 18, 35, 26]
 solution : [0]


Before backtrack at level 3
 pending : [23, 40, 5, 15, 16, 22, 21, 14, 20, 3, 8, 30, 33, 45, 38, 42, 43, 46, 36, 49, 31, 32, 13, 24, 37, 25, 19, 39, 18, 35, 26]
 solution : [0]

After backtrack at level 3
 pending : [23, 40, 5, 15, 16, 22, 21, 14, 20, 3, 8, 30, 33, 45, 38, 42, 43, 46, 36, 49, 31, 32, 13, 24, 37, 25, 19, 39, 18, 35, 26, 28]
 solution : [0]


Before backtrack at level 2
 pending : [23, 40, 5, 15, 16, 22, 21, 14, 20, 3, 8, 30, 33, 45, 38, 42, 43, 46, 36, 49, 31, 32, 13, 24, 37, 25, 19, 39, 18, 35, 26, 28]
 solution : [0]

After backtrack at level 2
 pending : [23, 40, 5, 15, 16, 22, 21, 14, 20, 3, 8, 30, 33, 45, 38, 42, 43, 46, 36, 49, 31, 32, 13, 24, 37, 25, 19, 39, 18, 35, 26, 28, 10]
 solution : [0]


Before backtrack at level 1
 pending : [23, 40, 5, 15, 16, 22, 21, 14, 20, 3, 8, 30, 33, 45, 38, 42, 43, 46, 36, 49, 31, 32, 13, 24, 37, 25, 19, 39, 18, 35, 26, 28, 10]
 solution : [0]

After backtrack at level 1
 pending : [23, 40, 5, 15, 16, 22, 21, 14, 20, 3, 8, 30, 33, 45, 38, 42, 43, 46, 36, 49, 31, 32, 13, 24, 37, 25, 19, 39, 18, 35, 26, 28, 10, 9]
 solution : [0]


=====================================================================================================================

	[MIN RESULT]: Minimized Invariants on [ivybench/sym_quorum/ivy/simple-election: acceptor=3,proposer=3]

=====================================================================================================================

[MIN NOTE]: number of minimal solution found: 1

[MIN NOTE]: total qcost: 14

[MIN NOTE]: maximum branch and bound depth: 16

Definitions (length=2)

invariant [def_didNotPromise] didNotPromise(A) = forall P. ~promise(A,P) # definition

invariant [def_chosenAt] chosenAt(Q,P) = forall A. member(A,Q) -> promise(A,P) # definition

Equality Relations (length=0)

Solution 0 : [0, 28, 3] (length = 3)

invariant [invar_0] forall PROPOSER1,PROPOSER0,ACCEPTOR0. ~promise(ACCEPTOR0,PROPOSER0) | ~promise(ACCEPTOR0,PROPOSER1) | PROPOSER0 = PROPOSER1 # qcost: 6

invariant [invar_28] forall PROPOSER0. (exists QUORUM0. ~leader(PROPOSER0) | chosenAt(QUORUM0,PROPOSER0)) # qcost: 4

invariant [invar_3] forall PROPOSER0,ACCEPTOR0. ~promise(ACCEPTOR0,PROPOSER0) | start(PROPOSER0) # qcost: 4




[QRM NOTE]: Time elapsed since start: 10.259 seconds

[QRM NOTE]: Time elapsed since last: 1.518 seconds

[QRM NOTE]: Peak memory: 3182276 bytes


=========================================================================================================

	[IVY_CHECK]: Ivy Check on [ivybench/sym_quorum/ivy/simple-election: acceptor=3,proposer=3]

=========================================================================================================

ivy_check complete=fo ivybench/sym_quorum/ivy/simple-election.acceptor_3_proposer_3.0.ivy


Isolate this:

    The following properties are assumed as axioms:
        ivybench/sym_quorum/ivy/simple-election.acceptor_3_proposer_3.0.ivy: line 17: axiom1

    The following definitions are used:
        ivybench/sym_quorum/ivy/simple-election.acceptor_3_proposer_3.0.ivy: line 29: def2
        ivybench/sym_quorum/ivy/simple-election.acceptor_3_proposer_3.0.ivy: line 30: def3

    The inductive invariant consists of the following conjectures:
        ivybench/sym_quorum/ivy/simple-election.acceptor_3_proposer_3.0.ivy: line 63: def_didNotPromise
        ivybench/sym_quorum/ivy/simple-election.acceptor_3_proposer_3.0.ivy: line 64: def_chosenAt
        ivybench/sym_quorum/ivy/simple-election.acceptor_3_proposer_3.0.ivy: line 65: invar_0
        ivybench/sym_quorum/ivy/simple-election.acceptor_3_proposer_3.0.ivy: line 66: invar_28
        ivybench/sym_quorum/ivy/simple-election.acceptor_3_proposer_3.0.ivy: line 67: invar_3

    The following action implementations are present:
        ivybench/sym_quorum/ivy/simple-election.acceptor_3_proposer_3.0.ivy: line 48: implementation of decide
        ivybench/sym_quorum/ivy/simple-election.acceptor_3_proposer_3.0.ivy: line 39: implementation of send_1a
        ivybench/sym_quorum/ivy/simple-election.acceptor_3_proposer_3.0.ivy: line 42: implementation of send_1b

    The following initializers are present:
        ivybench/sym_quorum/ivy/simple-election.acceptor_3_proposer_3.0.ivy: line 32: init[after4]

    Initialization must establish the invariant
        ivybench/sym_quorum/ivy/simple-election.acceptor_3_proposer_3.0.ivy: line 63: def_didNotPromise ... PASS
        ivybench/sym_quorum/ivy/simple-election.acceptor_3_proposer_3.0.ivy: line 64: def_chosenAt ... PASS
        ivybench/sym_quorum/ivy/simple-election.acceptor_3_proposer_3.0.ivy: line 65: invar_0 ... PASS
        ivybench/sym_quorum/ivy/simple-election.acceptor_3_proposer_3.0.ivy: line 66: invar_28 ... PASS
        ivybench/sym_quorum/ivy/simple-election.acceptor_3_proposer_3.0.ivy: line 67: invar_3 ... PASS

    The following set of external actions must preserve the invariant:
        (internal) ext:decide
            ivybench/sym_quorum/ivy/simple-election.acceptor_3_proposer_3.0.ivy: line 63: def_didNotPromise ... PASS
            ivybench/sym_quorum/ivy/simple-election.acceptor_3_proposer_3.0.ivy: line 64: def_chosenAt ... PASS
            ivybench/sym_quorum/ivy/simple-election.acceptor_3_proposer_3.0.ivy: line 65: invar_0 ... PASS
            ivybench/sym_quorum/ivy/simple-election.acceptor_3_proposer_3.0.ivy: line 66: invar_28 ... PASS
            ivybench/sym_quorum/ivy/simple-election.acceptor_3_proposer_3.0.ivy: line 67: invar_3 ... PASS
        (internal) ext:send_1a
            ivybench/sym_quorum/ivy/simple-election.acceptor_3_proposer_3.0.ivy: line 63: def_didNotPromise ... PASS
            ivybench/sym_quorum/ivy/simple-election.acceptor_3_proposer_3.0.ivy: line 64: def_chosenAt ... PASS
            ivybench/sym_quorum/ivy/simple-election.acceptor_3_proposer_3.0.ivy: line 65: invar_0 ... PASS
            ivybench/sym_quorum/ivy/simple-election.acceptor_3_proposer_3.0.ivy: line 66: invar_28 ... PASS
            ivybench/sym_quorum/ivy/simple-election.acceptor_3_proposer_3.0.ivy: line 67: invar_3 ... PASS
        (internal) ext:send_1b
            ivybench/sym_quorum/ivy/simple-election.acceptor_3_proposer_3.0.ivy: line 63: def_didNotPromise ... PASS
            ivybench/sym_quorum/ivy/simple-election.acceptor_3_proposer_3.0.ivy: line 64: def_chosenAt ... PASS
            ivybench/sym_quorum/ivy/simple-election.acceptor_3_proposer_3.0.ivy: line 65: invar_0 ... PASS
            ivybench/sym_quorum/ivy/simple-election.acceptor_3_proposer_3.0.ivy: line 66: invar_28 ... PASS
            ivybench/sym_quorum/ivy/simple-election.acceptor_3_proposer_3.0.ivy: line 67: invar_3 ... PASS

    The following program assertions are treated as assumptions:
        in action send_1b when called from the environment:
            ivybench/sym_quorum/ivy/simple-election.acceptor_3_proposer_3.0.ivy: line 43: assumption
            ivybench/sym_quorum/ivy/simple-election.acceptor_3_proposer_3.0.ivy: line 44: assumption
        in action decide when called from the environment:
            ivybench/sym_quorum/ivy/simple-election.acceptor_3_proposer_3.0.ivy: line 49: assumption

OK
[IVY_CHECK RESULT]: PASS

[R Implies P]: True

[UNSAT CORE]: ((forall A. didNotPromise(A) <-> (forall P. ~promise(A,P))) & (forall P,Q. chosenAt(Q,P) <-> (forall A. member(A,Q) -> promise(A,P))) & (forall Q1,Q2. (exists A. (member(A,Q1) & member(A,Q2)))) & (forall PROPOSER1,PROPOSER0,ACCEPTOR0. ~promise(ACCEPTOR0,PROPOSER0) | ~promise(ACCEPTOR0,PROPOSER1) | PROPOSER0 = PROPOSER1) & (forall PROPOSER0. (exists QUORUM0. ~leader(PROPOSER0) | chosenAt(QUORUM0,PROPOSER0))))

[QRM NOTE]: Time elapsed since start: 13.089 seconds

[QRM NOTE]: Time elapsed since last: 2.830 seconds

[QRM NOTE]: Peak memory: 2183265 bytes


**********************************************************************

	[QRM]: ivybench/sym_quorum/ivy/simple-election.ivy

**********************************************************************

[QRM RESULT]: PASS

