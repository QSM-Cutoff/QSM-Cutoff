
**********************************************************************

	[QRM]: ivybench/sym_quorum/ivy/simple-election.ivy

**********************************************************************


---------- Parsing Ivy ----------


Printing isolate this:

OK


=============================================================================================================

	[FW]: Forward Reachability on [ivybench/sym_quorum/ivy/simple-election: acceptor=3,proposer=3]

=============================================================================================================


==============================================

	Set up for forward reachability

==============================================

ivy_to_cpp target=qrm simple-election.acceptor_3_proposer_3.finite.ivy

[IVY_TO_CPP RESULT]: OK

swig -c++ -python -o simple-election.acceptor_3_proposer_3.finite_wrap.cpp ivy_exec.i

[SWIG RESULT]: OK

g++ -std=c++11 -fpic -pthread -O3 simple-election.acceptor_3_proposer_3.finite.cpp simple-election.acceptor_3_proposer_3.finite_wrap.cpp -I/home/yunrong/.pyenv/versions/3.12.0/include/python3.12 -c

[G++ RESULT]: OK

g++ -shared simple-election.acceptor_3_proposer_3.finite.o simple-election.acceptor_3_proposer_3.finite_wrap.o -o _ivy_exec.so -lm -lstdc++

[LINK RESULT]: OK

[FW NOTE]: number of state atoms: 27

[FW NOTE]: number of interpreted atoms (e.g. member,le): 9

[FW NOTE]: number of branching actions: 21

[FW NOTE]: symmetric group order: 36

[QRM NOTE]: Time elapsed since start: 6.185 seconds

[QRM NOTE]: Time elapsed since last: 6.185 seconds

[QRM NOTE]: Peak memory: 1190222 bytes


=====================================

	Symmetric Quotient DFS

=====================================

[FW NOTE]: dfs max depth: 7

[FW NOTE]: number of total reachable states:        254

[FW NOTE]: number of dfs representative states:     26

[FW NOTE]: number of dfs non-representative states: 228


====================================================================================================================

	[FW RESULT]: Forward Reachability on [ivybench/sym_quorum/ivy/simple-election: acceptor=3,proposer=3]

====================================================================================================================

sort: acceptor=['acceptor0', 'acceptor1', 'acceptor2']
sort: proposer=['proposer0', 'proposer1', 'proposer2']
sort: quorum=['quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2']
predicate: promise('acceptor', 'proposer')
predicate: chosenAt('quorum', 'proposer')
predicate: didNotPromise('acceptor',)
predicate: leader('proposer',)
predicate: start('proposer',)
predicate: member('acceptor', 'quorum')
interpreted atoms: {'member(acceptor0,quorum__acceptor0_acceptor1)': '1', 'member(acceptor0,quorum__acceptor0_acceptor2)': '1', 'member(acceptor0,quorum__acceptor1_acceptor2)': '0', 'member(acceptor1,quorum__acceptor0_acceptor1)': '1', 'member(acceptor1,quorum__acceptor0_acceptor2)': '0', 'member(acceptor1,quorum__acceptor1_acceptor2)': '1', 'member(acceptor2,quorum__acceptor0_acceptor1)': '0', 'member(acceptor2,quorum__acceptor0_acceptor2)': '1', 'member(acceptor2,quorum__acceptor1_acceptor2)': '1'}
state atoms: ['chosenAt(quorum__acceptor0_acceptor1,proposer0)', 'chosenAt(quorum__acceptor0_acceptor1,proposer1)', 'chosenAt(quorum__acceptor0_acceptor1,proposer2)', 'chosenAt(quorum__acceptor0_acceptor2,proposer0)', 'chosenAt(quorum__acceptor0_acceptor2,proposer1)', 'chosenAt(quorum__acceptor0_acceptor2,proposer2)', 'chosenAt(quorum__acceptor1_acceptor2,proposer0)', 'chosenAt(quorum__acceptor1_acceptor2,proposer1)', 'chosenAt(quorum__acceptor1_acceptor2,proposer2)', 'didNotPromise(acceptor0)', 'didNotPromise(acceptor1)', 'didNotPromise(acceptor2)', 'leader(proposer0)', 'leader(proposer1)', 'leader(proposer2)', 'promise(acceptor0,proposer0)', 'promise(acceptor0,proposer1)', 'promise(acceptor0,proposer2)', 'promise(acceptor1,proposer0)', 'promise(acceptor1,proposer1)', 'promise(acceptor1,proposer2)', 'promise(acceptor2,proposer0)', 'promise(acceptor2,proposer1)', 'promise(acceptor2,proposer2)', 'start(proposer0)', 'start(proposer1)', 'start(proposer2)']
representative states : 117440939, 117441451, 117442475, 117444523, 50597803, 201367467, 9798197163, 9800294315, 134782891, 136880043, 203464619, 17108907, 348075, 50595755, 201365419, 9798195115, 9800292267, 134780843, 136877995, 203462571, 17106859, 50594731, 201364395, 9798194091, 9800291243, 203461547


=== State Orbit 0 =====================
size : 1
repr state: 000000000111000000000000000
lex min decimal: 117440939
states:
000000000111000000000000000




=== State Orbit 1 =====================
size : 3
repr state: 000000000111000000000000100
lex min decimal: 117441451
states:
000000000111000000000000010
000000000111000000000000100
000000000111000000000000001




=== State Orbit 2 =====================
size : 3
repr state: 000000000111000000000000110
lex min decimal: 117442475
states:
000000000111000000000000110
000000000111000000000000101
000000000111000000000000011




=== State Orbit 3 =====================
size : 1
repr state: 000000000111000000000000111
lex min decimal: 117444523
states:
000000000111000000000000111




=== State Orbit 4 =====================
size : 9
repr state: 000000000011000100000000111
lex min decimal: 50597803
states:
000000000110000000000100111
000000000101000000100000111
000000000011000100000000111
000000000110000000000001111
000000000011000001000000111
000000000101000000010000111
000000000101000000001000111
000000000110000000000010111
000000000011000010000000111




=== State Orbit 5 =====================
size : 9
repr state: 100000000001000100100000111
lex min decimal: 201367467
states:
000000100100000000100100111
000001000010000001000001111
000100000010000100000100111
100000000001000100100000111
000000001100000000001001111
001000000001000001001000111
010000000001000010010000111
000010000010000010000010111
000000010100000000010010111




=== State Orbit 6 =====================
size : 3
repr state: 100100100000000100100100111
lex min decimal: 9798197163
states:
001001001000000001001001111
010010010000000010010010111
100100100000000100100100111




=== State Orbit 7 =====================
size : 3
repr state: 100100100000100100100100111
lex min decimal: 9800294315
states:
100100100000100100100100111
001001001000001001001001111
010010010000010010010010111




=== State Orbit 8 =====================
size : 18
repr state: 100000000000000100100010111
lex min decimal: 134782891
states:
000100000000000100010100111
001000000000000001001100111
000000001000000100001001111
100000000000000100100001111
000000010000000100010010111
100000000000000100100010111
000000001000000010001001111
000000100000000010100100111
010000000000000010010100111
001000000000000001001010111
000010000000000010001010111
000001000000000001100001111
000100000000000100001100111
000010000000000010100010111
000001000000000001010001111
000000100000000001100100111
000000010000000001010010111
010000000000000010010001111




=== State Orbit 9 =====================
size : 18
repr state: 100000000000100100100010111
lex min decimal: 136880043
states:
000001000000001001010001111
000100000000100100001100111
000010000000010010100010111
000100000000100100010100111
100000000000100100100010111
100000000000100100100001111
000000010000010001010010111
000000100000100001100100111
000010000000010010001010111
000000001000001010001001111
000000001000001100001001111
000001000000001001100001111
000000100000100010100100111
010000000000010010010100111
001000000000001001001100111
001000000000001001001010111
000000010000010100010010111
010000000000010010010001111




=== State Orbit 10 =====================
size : 9
repr state: 100000000001100100100000111
lex min decimal: 203464619
states:
000100000010100100000100111
000000001100001000001001111
100000000001100100100000111
000000010100010000010010111
000010000010010010000010111
000001000010001001000001111
001000000001001001001000111
010000000001010010010000111
000000100100100000100100111




=== State Orbit 11 =====================
size : 18
repr state: 000000000001000100010000111
lex min decimal: 17108907
states:
000000000100000000001100111
000000000010000010000100111
000000000010000100000010111
000000000100000000100001111
000000000100000000100010111
000000000010000001000100111
000000000001000001010000111
000000000001000001100000111
000000000001000100010000111
000000000010000010000001111
000000000001000010001000111
000000000100000000010001111
000000000100000000001010111
000000000010000100000001111
000000000001000100001000111
000000000100000000010100111
000000000010000001000010111
000000000001000010100000111




=== State Orbit 12 =====================
size : 6
repr state: 000000000000000100010001111
lex min decimal: 348075
states:
000000000000000100001010111
000000000000000010100001111
000000000000000001010100111
000000000000000100010001111
000000000000000010001100111
000000000000000001100010111




=== State Orbit 13 =====================
size : 18
repr state: 000000000011000100000000110
lex min decimal: 50595755
states:
000000000110000000000001011
000000000101000000100000110
000000000110000000000010011
000000000011000001000000011
000000000110000000000100110
000000000011000100000000101
000000000101000000001000011
000000000110000000000100101
000000000101000000010000011
000000000011000010000000011
000000000011000001000000101
000000000101000000100000101
000000000110000000000010110
000000000110000000000001101
000000000101000000001000101
000000000011000100000000110
000000000011000010000000110
000000000101000000010000110




=== State Orbit 14 =====================
size : 18
repr state: 100000000001000100100000110
lex min decimal: 201365419
states:
000100000010000100000100110
000001000010000001000001011
000000010100000000010010011
000001000010000001000001101
000100000010000100000100101
000010000010000010000010110
001000000001000001001000101
010000000001000010010000011
000000001100000000001001101
010000000001000010010000110
000010000010000010000010011
000000010100000000010010110
000000001100000000001001011
100000000001000100100000101
000000100100000000100100110
001000000001000001001000011
100000000001000100100000110
000000100100000000100100101




=== State Orbit 15 =====================
size : 6
repr state: 100100100000000100100100110
lex min decimal: 9798195115
states:
100100100000000100100100101
010010010000000010010010011
001001001000000001001001101
010010010000000010010010110
001001001000000001001001011
100100100000000100100100110




=== State Orbit 16 =====================
size : 6
repr state: 100100100000100100100100110
lex min decimal: 9800292267
states:
100100100000100100100100110
001001001000001001001001011
010010010000010010010010110
010010010000010010010010011
100100100000100100100100101
001001001000001001001001101




=== State Orbit 17 =====================
size : 18
repr state: 100000000000000100100010110
lex min decimal: 134780843
states:
000000010000000001010010011
000000001000000100001001101
010000000000000010010100110
000100000000000100010100110
100000000000000100100001101
000100000000000100001100101
000001000000000001010001011
010000000000000010010001011
000000001000000010001001011
000001000000000001100001101
000000100000000010100100110
100000000000000100100010110
000000100000000001100100101
001000000000000001001010011
001000000000000001001100101
000000010000000100010010110
000010000000000010100010110
000010000000000010001010011




=== State Orbit 18 =====================
size : 18
repr state: 100000000000100100100010110
lex min decimal: 136877995
states:
000100000000100100010100110
001000000000001001001010011
000000010000010001010010011
000001000000001001010001011
010000000000010010010001011
100000000000100100100001101
000001000000001001100001101
000000100000100010100100110
000000100000100001100100101
000010000000010010100010110
010000000000010010010100110
100000000000100100100010110
000000001000001100001001101
000000010000010100010010110
000100000000100100001100101
000010000000010010001010011
001000000000001001001100101
000000001000001010001001011




=== State Orbit 19 =====================
size : 18
repr state: 100000000001100100100000110
lex min decimal: 203462571
states:
010000000001010010010000110
000000010100010000010010110
100000000001100100100000110
000000100100100000100100101
000100000010100100000100101
001000000001001001001000011
000001000010001001000001011
000000010100010000010010011
000001000010001001000001101
001000000001001001001000101
100000000001100100100000101
000010000010010010000010110
000000001100001000001001101
000100000010100100000100110
000010000010010010000010011
010000000001010010010000011
000000100100100000100100110
000000001100001000001001011




=== State Orbit 20 =====================
size : 18
repr state: 000000000001000100010000110
lex min decimal: 17106859
states:
000000000100000000100001101
000000000001000001010000011
000000000010000100000010110
000000000010000010000001011
000000000010000100000001101
000000000100000000100010110
000000000100000000010100110
000000000001000010001000011
000000000010000001000010011
000000000100000000001010011
000000000100000000010001011
000000000001000100001000101
000000000010000001000100101
000000000001000001100000101
000000000001000100010000110
000000000100000000001100101
000000000001000010100000110
000000000010000010000100110




=== State Orbit 21 =====================
size : 9
repr state: 000000000011000100000000100
lex min decimal: 50594731
states:
000000000110000000000001001
000000000011000001000000001
000000000110000000000010010
000000000011000100000000100
000000000011000010000000010
000000000101000000001000001
000000000101000000010000010
000000000101000000100000100
000000000110000000000100100




=== State Orbit 22 =====================
size : 9
repr state: 100000000001000100100000100
lex min decimal: 201364395
states:
100000000001000100100000100
010000000001000010010000010
000100000010000100000100100
001000000001000001001000001
000001000010000001000001001
000000100100000000100100100
000000010100000000010010010
000000001100000000001001001
000010000010000010000010010




=== State Orbit 23 =====================
size : 3
repr state: 100100100000000100100100100
lex min decimal: 9798194091
states:
001001001000000001001001001
100100100000000100100100100
010010010000000010010010010




=== State Orbit 24 =====================
size : 3
repr state: 100100100000100100100100100
lex min decimal: 9800291243
states:
010010010000010010010010010
001001001000001001001001001
100100100000100100100100100




=== State Orbit 25 =====================
size : 9
repr state: 100000000001100100100000100
lex min decimal: 203461547
states:
000000001100001000001001001
000000100100100000100100100
000010000010010010000010010
010000000001010010010000010
100000000001100100100000100
000100000010100100000100100
001000000001001001001000001
000000010100010000010010010
000001000010001001000001001



[QRM NOTE]: Time elapsed since start: 6.561 seconds

[QRM NOTE]: Time elapsed since last: 0.376 seconds

[QRM NOTE]: Peak memory: 1296815 bytes


======================================

	Reduce Equivalent Atoms

======================================

[FW NOTE]: equivalent atoms

[FW NOTE]: complement atoms

[FW NOTE]: remove_atom_ids: set()

[QRM NOTE]: Time elapsed since start: 6.571 seconds

[QRM NOTE]: Time elapsed since last: 0.010 seconds

[QRM NOTE]: Peak memory: 328837 bytes


====================================================================================================================

	[PRIME]: Prime Orbit Generatation on [ivybench/sym_quorum/ivy/simple-election: acceptor=3,proposer=3]

====================================================================================================================


===============================================================================================================

	[PRIME RESULT]: Prime Orbits on [ivybench/sym_quorum/ivy/simple-election: acceptor=3,proposer=3]

===============================================================================================================


=== Prime Orbit 0 =====================
size : 36
num_suborbits: 1
0 (*) : ------1---------------1----
0     : ['chosenAt(quorum__acceptor1_acceptor2,proposer0)', 'promise(acceptor2,proposer1)']
1     : ------1----------------1---
1     : ['chosenAt(quorum__acceptor1_acceptor2,proposer0)', 'promise(acceptor2,proposer2)']
2     : -------1-------------1-----
2     : ['chosenAt(quorum__acceptor1_acceptor2,proposer1)', 'promise(acceptor2,proposer0)']
3     : -------1---------------1---
3     : ['chosenAt(quorum__acceptor1_acceptor2,proposer1)', 'promise(acceptor2,proposer2)']
4     : --------1------------1-----
4     : ['chosenAt(quorum__acceptor1_acceptor2,proposer2)', 'promise(acceptor2,proposer0)']
5     : --------1-------------1----
5     : ['chosenAt(quorum__acceptor1_acceptor2,proposer2)', 'promise(acceptor2,proposer1)']
6     : ------1------------1-------
6     : ['chosenAt(quorum__acceptor1_acceptor2,proposer0)', 'promise(acceptor1,proposer1)']
7     : ------1-------------1------
7     : ['chosenAt(quorum__acceptor1_acceptor2,proposer0)', 'promise(acceptor1,proposer2)']
8     : -------1----------1--------
8     : ['chosenAt(quorum__acceptor1_acceptor2,proposer1)', 'promise(acceptor1,proposer0)']
9     : -------1------------1------
9     : ['chosenAt(quorum__acceptor1_acceptor2,proposer1)', 'promise(acceptor1,proposer2)']
10     : --------1---------1--------
10     : ['chosenAt(quorum__acceptor1_acceptor2,proposer2)', 'promise(acceptor1,proposer0)']
11     : --------1----------1-------
11     : ['chosenAt(quorum__acceptor1_acceptor2,proposer2)', 'promise(acceptor1,proposer1)']
12     : ---1------------------1----
12     : ['chosenAt(quorum__acceptor0_acceptor2,proposer0)', 'promise(acceptor2,proposer1)']
13     : ---1-------------------1---
13     : ['chosenAt(quorum__acceptor0_acceptor2,proposer0)', 'promise(acceptor2,proposer2)']
14     : ----1----------------1-----
14     : ['chosenAt(quorum__acceptor0_acceptor2,proposer1)', 'promise(acceptor2,proposer0)']
15     : ----1------------------1---
15     : ['chosenAt(quorum__acceptor0_acceptor2,proposer1)', 'promise(acceptor2,proposer2)']
16     : -----1---------------1-----
16     : ['chosenAt(quorum__acceptor0_acceptor2,proposer2)', 'promise(acceptor2,proposer0)']
17     : -----1----------------1----
17     : ['chosenAt(quorum__acceptor0_acceptor2,proposer2)', 'promise(acceptor2,proposer1)']
18     : ---1------------1----------
18     : ['chosenAt(quorum__acceptor0_acceptor2,proposer0)', 'promise(acceptor0,proposer1)']
19     : ---1-------------1---------
19     : ['chosenAt(quorum__acceptor0_acceptor2,proposer0)', 'promise(acceptor0,proposer2)']
20     : ----1----------1-----------
20     : ['chosenAt(quorum__acceptor0_acceptor2,proposer1)', 'promise(acceptor0,proposer0)']
21     : ----1------------1---------
21     : ['chosenAt(quorum__acceptor0_acceptor2,proposer1)', 'promise(acceptor0,proposer2)']
22     : -----1---------1-----------
22     : ['chosenAt(quorum__acceptor0_acceptor2,proposer2)', 'promise(acceptor0,proposer0)']
23     : -----1----------1----------
23     : ['chosenAt(quorum__acceptor0_acceptor2,proposer2)', 'promise(acceptor0,proposer1)']
24     : 1------------------1-------
24     : ['chosenAt(quorum__acceptor0_acceptor1,proposer0)', 'promise(acceptor1,proposer1)']
25     : 1-------------------1------
25     : ['chosenAt(quorum__acceptor0_acceptor1,proposer0)', 'promise(acceptor1,proposer2)']
26     : -1----------------1--------
26     : ['chosenAt(quorum__acceptor0_acceptor1,proposer1)', 'promise(acceptor1,proposer0)']
27     : -1------------------1------
27     : ['chosenAt(quorum__acceptor0_acceptor1,proposer1)', 'promise(acceptor1,proposer2)']
28     : --1---------------1--------
28     : ['chosenAt(quorum__acceptor0_acceptor1,proposer2)', 'promise(acceptor1,proposer0)']
29     : --1----------------1-------
29     : ['chosenAt(quorum__acceptor0_acceptor1,proposer2)', 'promise(acceptor1,proposer1)']
30     : 1---------------1----------
30     : ['chosenAt(quorum__acceptor0_acceptor1,proposer0)', 'promise(acceptor0,proposer1)']
31     : 1----------------1---------
31     : ['chosenAt(quorum__acceptor0_acceptor1,proposer0)', 'promise(acceptor0,proposer2)']
32     : -1-------------1-----------
32     : ['chosenAt(quorum__acceptor0_acceptor1,proposer1)', 'promise(acceptor0,proposer0)']
33     : -1---------------1---------
33     : ['chosenAt(quorum__acceptor0_acceptor1,proposer1)', 'promise(acceptor0,proposer2)']
34     : --1------------1-----------
34     : ['chosenAt(quorum__acceptor0_acceptor1,proposer2)', 'promise(acceptor0,proposer0)']
35     : --1-------------1----------
35     : ['chosenAt(quorum__acceptor0_acceptor1,proposer2)', 'promise(acceptor0,proposer1)']
num_forall :   0
num_exists :   0
num_literals : 0
quantified form : None
qcost : 0


=== Prime Orbit 1 =====================
size : 27
num_suborbits: 2
36 (*) : ----1-1--------------------
36     : ['chosenAt(quorum__acceptor0_acceptor2,proposer1)', 'chosenAt(quorum__acceptor1_acceptor2,proposer0)']
37     : -----11--------------------
37     : ['chosenAt(quorum__acceptor0_acceptor2,proposer2)', 'chosenAt(quorum__acceptor1_acceptor2,proposer0)']
38     : ---1---1-------------------
38     : ['chosenAt(quorum__acceptor0_acceptor2,proposer0)', 'chosenAt(quorum__acceptor1_acceptor2,proposer1)']
39     : -----1-1-------------------
39     : ['chosenAt(quorum__acceptor0_acceptor2,proposer2)', 'chosenAt(quorum__acceptor1_acceptor2,proposer1)']
40     : ---1----1------------------
40     : ['chosenAt(quorum__acceptor0_acceptor2,proposer0)', 'chosenAt(quorum__acceptor1_acceptor2,proposer2)']
41     : ----1---1------------------
41     : ['chosenAt(quorum__acceptor0_acceptor2,proposer1)', 'chosenAt(quorum__acceptor1_acceptor2,proposer2)']
42     : -1----1--------------------
42     : ['chosenAt(quorum__acceptor0_acceptor1,proposer1)', 'chosenAt(quorum__acceptor1_acceptor2,proposer0)']
43     : --1---1--------------------
43     : ['chosenAt(quorum__acceptor0_acceptor1,proposer2)', 'chosenAt(quorum__acceptor1_acceptor2,proposer0)']
44     : 1------1-------------------
44     : ['chosenAt(quorum__acceptor0_acceptor1,proposer0)', 'chosenAt(quorum__acceptor1_acceptor2,proposer1)']
45     : --1----1-------------------
45     : ['chosenAt(quorum__acceptor0_acceptor1,proposer2)', 'chosenAt(quorum__acceptor1_acceptor2,proposer1)']
46     : 1-------1------------------
46     : ['chosenAt(quorum__acceptor0_acceptor1,proposer0)', 'chosenAt(quorum__acceptor1_acceptor2,proposer2)']
47     : -1------1------------------
47     : ['chosenAt(quorum__acceptor0_acceptor1,proposer1)', 'chosenAt(quorum__acceptor1_acceptor2,proposer2)']
48     : -1-1-----------------------
48     : ['chosenAt(quorum__acceptor0_acceptor1,proposer1)', 'chosenAt(quorum__acceptor0_acceptor2,proposer0)']
49     : --11-----------------------
49     : ['chosenAt(quorum__acceptor0_acceptor1,proposer2)', 'chosenAt(quorum__acceptor0_acceptor2,proposer0)']
50     : 1---1----------------------
50     : ['chosenAt(quorum__acceptor0_acceptor1,proposer0)', 'chosenAt(quorum__acceptor0_acceptor2,proposer1)']
51     : --1-1----------------------
51     : ['chosenAt(quorum__acceptor0_acceptor1,proposer2)', 'chosenAt(quorum__acceptor0_acceptor2,proposer1)']
52     : 1----1---------------------
52     : ['chosenAt(quorum__acceptor0_acceptor1,proposer0)', 'chosenAt(quorum__acceptor0_acceptor2,proposer2)']
53     : -1---1---------------------
53     : ['chosenAt(quorum__acceptor0_acceptor1,proposer1)', 'chosenAt(quorum__acceptor0_acceptor2,proposer2)']
54 (*) : ------1-1------------------
54     : ['chosenAt(quorum__acceptor1_acceptor2,proposer0)', 'chosenAt(quorum__acceptor1_acceptor2,proposer2)']
55     : ------11-------------------
55     : ['chosenAt(quorum__acceptor1_acceptor2,proposer0)', 'chosenAt(quorum__acceptor1_acceptor2,proposer1)']
56     : -------11------------------
56     : ['chosenAt(quorum__acceptor1_acceptor2,proposer1)', 'chosenAt(quorum__acceptor1_acceptor2,proposer2)']
57     : ---1-1---------------------
57     : ['chosenAt(quorum__acceptor0_acceptor2,proposer0)', 'chosenAt(quorum__acceptor0_acceptor2,proposer2)']
58     : ---11----------------------
58     : ['chosenAt(quorum__acceptor0_acceptor2,proposer0)', 'chosenAt(quorum__acceptor0_acceptor2,proposer1)']
59     : ----11---------------------
59     : ['chosenAt(quorum__acceptor0_acceptor2,proposer1)', 'chosenAt(quorum__acceptor0_acceptor2,proposer2)']
60     : 1-1------------------------
60     : ['chosenAt(quorum__acceptor0_acceptor1,proposer0)', 'chosenAt(quorum__acceptor0_acceptor1,proposer2)']
61     : 11-------------------------
61     : ['chosenAt(quorum__acceptor0_acceptor1,proposer0)', 'chosenAt(quorum__acceptor0_acceptor1,proposer1)']
62     : -11------------------------
62     : ['chosenAt(quorum__acceptor0_acceptor1,proposer1)', 'chosenAt(quorum__acceptor0_acceptor1,proposer2)']
num_forall :   0
num_exists :   0
num_literals : 0
quantified form : None
qcost : 0


=== Prime Orbit 2 =====================
size : 18
num_suborbits: 1
63 (*) : ------1--------------0-----
63     : ['chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~promise(acceptor2,proposer0)']
64     : -------1--------------0----
64     : ['chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~promise(acceptor2,proposer1)']
65     : --------1--------------0---
65     : ['chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~promise(acceptor2,proposer2)']
66     : ------1-----------0--------
66     : ['chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~promise(acceptor1,proposer0)']
67     : -------1-----------0-------
67     : ['chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~promise(acceptor1,proposer1)']
68     : --------1-----------0------
68     : ['chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~promise(acceptor1,proposer2)']
69     : ---1-----------------0-----
69     : ['chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~promise(acceptor2,proposer0)']
70     : ----1-----------------0----
70     : ['chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~promise(acceptor2,proposer1)']
71     : -----1-----------------0---
71     : ['chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~promise(acceptor2,proposer2)']
72     : ---1-----------0-----------
72     : ['chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~promise(acceptor0,proposer0)']
73     : ----1-----------0----------
73     : ['chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~promise(acceptor0,proposer1)']
74     : -----1-----------0---------
74     : ['chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~promise(acceptor0,proposer2)']
75     : 1-----------------0--------
75     : ['chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~promise(acceptor1,proposer0)']
76     : -1-----------------0-------
76     : ['chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~promise(acceptor1,proposer1)']
77     : --1-----------------0------
77     : ['chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~promise(acceptor1,proposer2)']
78     : 1--------------0-----------
78     : ['chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~promise(acceptor0,proposer0)']
79     : -1--------------0----------
79     : ['chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~promise(acceptor0,proposer1)']
80     : --1--------------0---------
80     : ['chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~promise(acceptor0,proposer2)']
num_forall :   0
num_exists :   0
num_literals : 0
quantified form : None
qcost : 0


=== Prime Orbit 3 =====================
size : 18
num_suborbits: 1
81 (*) : ------1-------1------------
81     : ['chosenAt(quorum__acceptor1_acceptor2,proposer0)', 'leader(proposer2)']
82     : ------1------1-------------
82     : ['chosenAt(quorum__acceptor1_acceptor2,proposer0)', 'leader(proposer1)']
83     : -------1------1------------
83     : ['chosenAt(quorum__acceptor1_acceptor2,proposer1)', 'leader(proposer2)']
84     : -------1----1--------------
84     : ['chosenAt(quorum__acceptor1_acceptor2,proposer1)', 'leader(proposer0)']
85     : --------1----1-------------
85     : ['chosenAt(quorum__acceptor1_acceptor2,proposer2)', 'leader(proposer1)']
86     : --------1---1--------------
86     : ['chosenAt(quorum__acceptor1_acceptor2,proposer2)', 'leader(proposer0)']
87     : ---1----------1------------
87     : ['chosenAt(quorum__acceptor0_acceptor2,proposer0)', 'leader(proposer2)']
88     : ---1---------1-------------
88     : ['chosenAt(quorum__acceptor0_acceptor2,proposer0)', 'leader(proposer1)']
89     : ----1---------1------------
89     : ['chosenAt(quorum__acceptor0_acceptor2,proposer1)', 'leader(proposer2)']
90     : ----1-------1--------------
90     : ['chosenAt(quorum__acceptor0_acceptor2,proposer1)', 'leader(proposer0)']
91     : -----1-------1-------------
91     : ['chosenAt(quorum__acceptor0_acceptor2,proposer2)', 'leader(proposer1)']
92     : -----1------1--------------
92     : ['chosenAt(quorum__acceptor0_acceptor2,proposer2)', 'leader(proposer0)']
93     : 1-------------1------------
93     : ['chosenAt(quorum__acceptor0_acceptor1,proposer0)', 'leader(proposer2)']
94     : 1------------1-------------
94     : ['chosenAt(quorum__acceptor0_acceptor1,proposer0)', 'leader(proposer1)']
95     : -1------------1------------
95     : ['chosenAt(quorum__acceptor0_acceptor1,proposer1)', 'leader(proposer2)']
96     : -1----------1--------------
96     : ['chosenAt(quorum__acceptor0_acceptor1,proposer1)', 'leader(proposer0)']
97     : --1----------1-------------
97     : ['chosenAt(quorum__acceptor0_acceptor1,proposer2)', 'leader(proposer1)']
98     : --1---------1--------------
98     : ['chosenAt(quorum__acceptor0_acceptor1,proposer2)', 'leader(proposer0)']
num_forall :   0
num_exists :   0
num_literals : 0
quantified form : None
qcost : 0


=== Prime Orbit 4 =====================
size : 18
num_suborbits: 1
99 (*) : ------1----1---------------
99     : ['chosenAt(quorum__acceptor1_acceptor2,proposer0)', 'didNotPromise(acceptor2)']
100     : -------1---1---------------
100     : ['chosenAt(quorum__acceptor1_acceptor2,proposer1)', 'didNotPromise(acceptor2)']
101     : --------1--1---------------
101     : ['chosenAt(quorum__acceptor1_acceptor2,proposer2)', 'didNotPromise(acceptor2)']
102     : ------1---1----------------
102     : ['chosenAt(quorum__acceptor1_acceptor2,proposer0)', 'didNotPromise(acceptor1)']
103     : -------1--1----------------
103     : ['chosenAt(quorum__acceptor1_acceptor2,proposer1)', 'didNotPromise(acceptor1)']
104     : --------1-1----------------
104     : ['chosenAt(quorum__acceptor1_acceptor2,proposer2)', 'didNotPromise(acceptor1)']
105     : ---1-------1---------------
105     : ['chosenAt(quorum__acceptor0_acceptor2,proposer0)', 'didNotPromise(acceptor2)']
106     : ----1------1---------------
106     : ['chosenAt(quorum__acceptor0_acceptor2,proposer1)', 'didNotPromise(acceptor2)']
107     : -----1-----1---------------
107     : ['chosenAt(quorum__acceptor0_acceptor2,proposer2)', 'didNotPromise(acceptor2)']
108     : ---1-----1-----------------
108     : ['chosenAt(quorum__acceptor0_acceptor2,proposer0)', 'didNotPromise(acceptor0)']
109     : ----1----1-----------------
109     : ['chosenAt(quorum__acceptor0_acceptor2,proposer1)', 'didNotPromise(acceptor0)']
110     : -----1---1-----------------
110     : ['chosenAt(quorum__acceptor0_acceptor2,proposer2)', 'didNotPromise(acceptor0)']
111     : 1---------1----------------
111     : ['chosenAt(quorum__acceptor0_acceptor1,proposer0)', 'didNotPromise(acceptor1)']
112     : -1--------1----------------
112     : ['chosenAt(quorum__acceptor0_acceptor1,proposer1)', 'didNotPromise(acceptor1)']
113     : --1-------1----------------
113     : ['chosenAt(quorum__acceptor0_acceptor1,proposer2)', 'didNotPromise(acceptor1)']
114     : 1--------1-----------------
114     : ['chosenAt(quorum__acceptor0_acceptor1,proposer0)', 'didNotPromise(acceptor0)']
115     : -1-------1-----------------
115     : ['chosenAt(quorum__acceptor0_acceptor1,proposer1)', 'didNotPromise(acceptor0)']
116     : --1------1-----------------
116     : ['chosenAt(quorum__acceptor0_acceptor1,proposer2)', 'didNotPromise(acceptor0)']
num_forall :   0
num_exists :   0
num_literals : 0
quantified form : None
qcost : 0


=== Prime Orbit 5 =====================
size : 9
num_suborbits: 1
117 (*) : ------1-----------------0--
117     : ['chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~start(proposer0)']
118     : -------1-----------------0-
118     : ['chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~start(proposer1)']
119     : --------1-----------------0
119     : ['chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~start(proposer2)']
120     : ---1--------------------0--
120     : ['chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~start(proposer0)']
121     : ----1--------------------0-
121     : ['chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~start(proposer1)']
122     : -----1--------------------0
122     : ['chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~start(proposer2)']
123     : 1-----------------------0--
123     : ['chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~start(proposer0)']
124     : -1-----------------------0-
124     : ['chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~start(proposer1)']
125     : --1-----------------------0
125     : ['chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~start(proposer2)']
num_forall :   0
num_exists :   0
num_literals : 0
quantified form : None
qcost : 0


=== Prime Orbit 6 =====================
size : 9
num_suborbits: 1
126 (*) : ---------1-----1-----------
126     : ['didNotPromise(acceptor0)', 'promise(acceptor0,proposer0)']
127     : ---------1------1----------
127     : ['didNotPromise(acceptor0)', 'promise(acceptor0,proposer1)']
128     : ---------1-------1---------
128     : ['didNotPromise(acceptor0)', 'promise(acceptor0,proposer2)']
129     : ----------1-------1--------
129     : ['didNotPromise(acceptor1)', 'promise(acceptor1,proposer0)']
130     : ----------1--------1-------
130     : ['didNotPromise(acceptor1)', 'promise(acceptor1,proposer1)']
131     : ----------1---------1------
131     : ['didNotPromise(acceptor1)', 'promise(acceptor1,proposer2)']
132     : -----------1---------1-----
132     : ['didNotPromise(acceptor2)', 'promise(acceptor2,proposer0)']
133     : -----------1----------1----
133     : ['didNotPromise(acceptor2)', 'promise(acceptor2,proposer1)']
134     : -----------1-----------1---
134     : ['didNotPromise(acceptor2)', 'promise(acceptor2,proposer2)']
num_forall :   0
num_exists :   0
num_literals : 0
quantified form : None
qcost : 0


=== Prime Orbit 7 =====================
size : 9
num_suborbits: 1
135 (*) : ------------------1-----0--
135     : ['promise(acceptor1,proposer0)', '~start(proposer0)']
136     : -------------------1-----0-
136     : ['promise(acceptor1,proposer1)', '~start(proposer1)']
137     : --------------------1-----0
137     : ['promise(acceptor1,proposer2)', '~start(proposer2)']
138     : ---------------------1--0--
138     : ['promise(acceptor2,proposer0)', '~start(proposer0)']
139     : ----------------------1--0-
139     : ['promise(acceptor2,proposer1)', '~start(proposer1)']
140     : -----------------------1--0
140     : ['promise(acceptor2,proposer2)', '~start(proposer2)']
141     : ---------------1--------0--
141     : ['promise(acceptor0,proposer0)', '~start(proposer0)']
142     : ----------------1--------0-
142     : ['promise(acceptor0,proposer1)', '~start(proposer1)']
143     : -----------------1--------0
143     : ['promise(acceptor0,proposer2)', '~start(proposer2)']
num_forall :   0
num_exists :   0
num_literals : 0
quantified form : None
qcost : 0


=== Prime Orbit 8 =====================
size : 3
num_suborbits: 1
144 (*) : ------------1-----------0--
144     : ['leader(proposer0)', '~start(proposer0)']
145     : -------------1-----------0-
145     : ['leader(proposer1)', '~start(proposer1)']
146     : --------------1-----------0
146     : ['leader(proposer2)', '~start(proposer2)']
num_forall :   0
num_exists :   0
num_literals : 0
quantified form : None
qcost : 0


=== Prime Orbit 9 =====================
size : 9
num_suborbits: 1
147 (*) : ---------------------1-1---
147     : ['promise(acceptor2,proposer0)', 'promise(acceptor2,proposer2)']
148     : ---------------------11----
148     : ['promise(acceptor2,proposer0)', 'promise(acceptor2,proposer1)']
149     : ----------------------11---
149     : ['promise(acceptor2,proposer1)', 'promise(acceptor2,proposer2)']
150     : ------------------1-1------
150     : ['promise(acceptor1,proposer0)', 'promise(acceptor1,proposer2)']
151     : ------------------11-------
151     : ['promise(acceptor1,proposer0)', 'promise(acceptor1,proposer1)']
152     : -------------------11------
152     : ['promise(acceptor1,proposer1)', 'promise(acceptor1,proposer2)']
153     : ---------------1-1---------
153     : ['promise(acceptor0,proposer0)', 'promise(acceptor0,proposer2)']
154     : ---------------11----------
154     : ['promise(acceptor0,proposer0)', 'promise(acceptor0,proposer1)']
155     : ----------------11---------
155     : ['promise(acceptor0,proposer1)', 'promise(acceptor0,proposer2)']
num_forall :   0
num_exists :   0
num_literals : 0
quantified form : None
qcost : 0


=== Prime Orbit 10 =====================
size : 3
num_suborbits: 1
156 (*) : ------------1-1------------
156     : ['leader(proposer0)', 'leader(proposer2)']
157     : ------------11-------------
157     : ['leader(proposer0)', 'leader(proposer1)']
158     : -------------11------------
158     : ['leader(proposer1)', 'leader(proposer2)']
num_forall :   0
num_exists :   0
num_literals : 0
quantified form : None
qcost : 0


=== Prime Orbit 11 =====================
size : 9
num_suborbits: 1
159 (*) : -1--1--0-------------------
159     : ['chosenAt(quorum__acceptor0_acceptor1,proposer1)', 'chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)']
160     : --1--1--0------------------
160     : ['chosenAt(quorum__acceptor0_acceptor1,proposer2)', 'chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)']
161     : 1--1--0--------------------
161     : ['chosenAt(quorum__acceptor0_acceptor1,proposer0)', 'chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)']
162     : -1--0--1-------------------
162     : ['chosenAt(quorum__acceptor0_acceptor1,proposer1)', 'chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)']
163     : --1--0--1------------------
163     : ['chosenAt(quorum__acceptor0_acceptor1,proposer2)', 'chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)']
164     : 1--0--1--------------------
164     : ['chosenAt(quorum__acceptor0_acceptor1,proposer0)', 'chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)']
165     : -0--1--1-------------------
165     : ['chosenAt(quorum__acceptor0_acceptor2,proposer1)', 'chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~chosenAt(quorum__acceptor0_acceptor1,proposer1)']
166     : --0--1--1------------------
166     : ['chosenAt(quorum__acceptor0_acceptor2,proposer2)', 'chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~chosenAt(quorum__acceptor0_acceptor1,proposer2)']
167     : 0--1--1--------------------
167     : ['chosenAt(quorum__acceptor0_acceptor2,proposer0)', 'chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~chosenAt(quorum__acceptor0_acceptor1,proposer0)']
num_forall :   0
num_exists :   0
num_literals : 0
quantified form : None
qcost : 0


=== Prime Orbit 12 =====================
size : 18
num_suborbits: 1
168 (*) : -1-----0--------------1----
168     : ['chosenAt(quorum__acceptor0_acceptor1,proposer1)', 'promise(acceptor2,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)']
169     : --1-----0--------------1---
169     : ['chosenAt(quorum__acceptor0_acceptor1,proposer2)', 'promise(acceptor2,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)']
170     : 1-----0--------------1-----
170     : ['chosenAt(quorum__acceptor0_acceptor1,proposer0)', 'promise(acceptor2,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)']
171     : ----1--0-----------1-------
171     : ['chosenAt(quorum__acceptor0_acceptor2,proposer1)', 'promise(acceptor1,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)']
172     : -----1--0-----------1------
172     : ['chosenAt(quorum__acceptor0_acceptor2,proposer2)', 'promise(acceptor1,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)']
173     : ---1--0-----------1--------
173     : ['chosenAt(quorum__acceptor0_acceptor2,proposer0)', 'promise(acceptor1,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)']
174     : -1--0-----------------1----
174     : ['chosenAt(quorum__acceptor0_acceptor1,proposer1)', 'promise(acceptor2,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)']
175     : --1--0-----------------1---
175     : ['chosenAt(quorum__acceptor0_acceptor1,proposer2)', 'promise(acceptor2,proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)']
176     : 1--0-----------------1-----
176     : ['chosenAt(quorum__acceptor0_acceptor1,proposer0)', 'promise(acceptor2,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)']
177     : ----0--1--------1----------
177     : ['chosenAt(quorum__acceptor1_acceptor2,proposer1)', 'promise(acceptor0,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)']
178     : -----0--1--------1---------
178     : ['chosenAt(quorum__acceptor1_acceptor2,proposer2)', 'promise(acceptor0,proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)']
179     : ---0--1--------1-----------
179     : ['chosenAt(quorum__acceptor1_acceptor2,proposer0)', 'promise(acceptor0,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)']
180     : -0--1--------------1-------
180     : ['chosenAt(quorum__acceptor0_acceptor2,proposer1)', 'promise(acceptor1,proposer1)', '~chosenAt(quorum__acceptor0_acceptor1,proposer1)']
181     : --0--1--------------1------
181     : ['chosenAt(quorum__acceptor0_acceptor2,proposer2)', 'promise(acceptor1,proposer2)', '~chosenAt(quorum__acceptor0_acceptor1,proposer2)']
182     : 0--1--------------1--------
182     : ['chosenAt(quorum__acceptor0_acceptor2,proposer0)', 'promise(acceptor1,proposer0)', '~chosenAt(quorum__acceptor0_acceptor1,proposer0)']
183     : -0-----1--------1----------
183     : ['chosenAt(quorum__acceptor1_acceptor2,proposer1)', 'promise(acceptor0,proposer1)', '~chosenAt(quorum__acceptor0_acceptor1,proposer1)']
184     : --0-----1--------1---------
184     : ['chosenAt(quorum__acceptor1_acceptor2,proposer2)', 'promise(acceptor0,proposer2)', '~chosenAt(quorum__acceptor0_acceptor1,proposer2)']
185     : 0-----1--------1-----------
185     : ['chosenAt(quorum__acceptor1_acceptor2,proposer0)', 'promise(acceptor0,proposer0)', '~chosenAt(quorum__acceptor0_acceptor1,proposer0)']
num_forall :   0
num_exists :   0
num_literals : 0
quantified form : None
qcost : 0


=== Prime Orbit 13 =====================
size : 9
num_suborbits: 1
186 (*) : -0-----------1--------0----
186     : ['leader(proposer1)', '~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~promise(acceptor2,proposer1)']
187     : --0-----------1--------0---
187     : ['leader(proposer2)', '~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~promise(acceptor2,proposer2)']
188     : 0-----------1--------0-----
188     : ['leader(proposer0)', '~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~promise(acceptor2,proposer0)']
189     : ----0--------1-----0-------
189     : ['leader(proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~promise(acceptor1,proposer1)']
190     : -----0--------1-----0------
190     : ['leader(proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~promise(acceptor1,proposer2)']
191     : ---0--------1-----0--------
191     : ['leader(proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~promise(acceptor1,proposer0)']
192     : -------0-----1--0----------
192     : ['leader(proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~promise(acceptor0,proposer1)']
193     : --------0-----1--0---------
193     : ['leader(proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~promise(acceptor0,proposer2)']
194     : ------0-----1--0-----------
194     : ['leader(proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~promise(acceptor0,proposer0)']
num_forall :   0
num_exists :   0
num_literals : 0
quantified form : None
qcost : 0


=== Prime Orbit 14 =====================
size : 9
num_suborbits: 1
195 (*) : ----0-----1--1-------------
195     : ['didNotPromise(acceptor1)', 'leader(proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)']
196     : -----0----1---1------------
196     : ['didNotPromise(acceptor1)', 'leader(proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)']
197     : ---0------1-1--------------
197     : ['didNotPromise(acceptor1)', 'leader(proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)']
198     : -0---------1-1-------------
198     : ['didNotPromise(acceptor2)', 'leader(proposer1)', '~chosenAt(quorum__acceptor0_acceptor1,proposer1)']
199     : --0--------1--1------------
199     : ['didNotPromise(acceptor2)', 'leader(proposer2)', '~chosenAt(quorum__acceptor0_acceptor1,proposer2)']
200     : 0----------11--------------
200     : ['didNotPromise(acceptor2)', 'leader(proposer0)', '~chosenAt(quorum__acceptor0_acceptor1,proposer0)']
201     : -------0-1---1-------------
201     : ['didNotPromise(acceptor0)', 'leader(proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)']
202     : --------01----1------------
202     : ['didNotPromise(acceptor0)', 'leader(proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)']
203     : ------0--1--1--------------
203     : ['didNotPromise(acceptor0)', 'leader(proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)']
num_forall :   0
num_exists :   0
num_literals : 0
quantified form : None
qcost : 0


=== Prime Orbit 15 =====================
size : 18
num_suborbits: 1
204 (*) : ----------1--1--------0----
204     : ['didNotPromise(acceptor1)', 'leader(proposer1)', '~promise(acceptor2,proposer1)']
205     : ----------1---1--------0---
205     : ['didNotPromise(acceptor1)', 'leader(proposer2)', '~promise(acceptor2,proposer2)']
206     : ----------1-1--------0-----
206     : ['didNotPromise(acceptor1)', 'leader(proposer0)', '~promise(acceptor2,proposer0)']
207     : -----------1-1-----0-------
207     : ['didNotPromise(acceptor2)', 'leader(proposer1)', '~promise(acceptor1,proposer1)']
208     : -----------1--1-----0------
208     : ['didNotPromise(acceptor2)', 'leader(proposer2)', '~promise(acceptor1,proposer2)']
209     : -----------11-----0--------
209     : ['didNotPromise(acceptor2)', 'leader(proposer0)', '~promise(acceptor1,proposer0)']
210     : ---------1---1--------0----
210     : ['didNotPromise(acceptor0)', 'leader(proposer1)', '~promise(acceptor2,proposer1)']
211     : ---------1----1--------0---
211     : ['didNotPromise(acceptor0)', 'leader(proposer2)', '~promise(acceptor2,proposer2)']
212     : ---------1--1--------0-----
212     : ['didNotPromise(acceptor0)', 'leader(proposer0)', '~promise(acceptor2,proposer0)']
213     : -----------1-1--0----------
213     : ['didNotPromise(acceptor2)', 'leader(proposer1)', '~promise(acceptor0,proposer1)']
214     : -----------1--1--0---------
214     : ['didNotPromise(acceptor2)', 'leader(proposer2)', '~promise(acceptor0,proposer2)']
215     : -----------11--0-----------
215     : ['didNotPromise(acceptor2)', 'leader(proposer0)', '~promise(acceptor0,proposer0)']
216     : ---------1---1-----0-------
216     : ['didNotPromise(acceptor0)', 'leader(proposer1)', '~promise(acceptor1,proposer1)']
217     : ---------1----1-----0------
217     : ['didNotPromise(acceptor0)', 'leader(proposer2)', '~promise(acceptor1,proposer2)']
218     : ---------1--1-----0--------
218     : ['didNotPromise(acceptor0)', 'leader(proposer0)', '~promise(acceptor1,proposer0)']
219     : ----------1--1--0----------
219     : ['didNotPromise(acceptor1)', 'leader(proposer1)', '~promise(acceptor0,proposer1)']
220     : ----------1---1--0---------
220     : ['didNotPromise(acceptor1)', 'leader(proposer2)', '~promise(acceptor0,proposer2)']
221     : ----------1-1--0-----------
221     : ['didNotPromise(acceptor1)', 'leader(proposer0)', '~promise(acceptor0,proposer0)']
num_forall :   0
num_exists :   0
num_literals : 0
quantified form : None
qcost : 0


=== Prime Orbit 16 =====================
size : 36
num_suborbits: 1
222 (*) : ----------1--1---------1---
222     : ['didNotPromise(acceptor1)', 'leader(proposer1)', 'promise(acceptor2,proposer2)']
223     : ----------1---1-------1----
223     : ['didNotPromise(acceptor1)', 'leader(proposer2)', 'promise(acceptor2,proposer1)']
224     : ----------1-1----------1---
224     : ['didNotPromise(acceptor1)', 'leader(proposer0)', 'promise(acceptor2,proposer2)']
225     : ----------1---1------1-----
225     : ['didNotPromise(acceptor1)', 'leader(proposer2)', 'promise(acceptor2,proposer0)']
226     : ----------1-1---------1----
226     : ['didNotPromise(acceptor1)', 'leader(proposer0)', 'promise(acceptor2,proposer1)']
227     : ----------1--1-------1-----
227     : ['didNotPromise(acceptor1)', 'leader(proposer1)', 'promise(acceptor2,proposer0)']
228     : -----------1-1------1------
228     : ['didNotPromise(acceptor2)', 'leader(proposer1)', 'promise(acceptor1,proposer2)']
229     : -----------1--1----1-------
229     : ['didNotPromise(acceptor2)', 'leader(proposer2)', 'promise(acceptor1,proposer1)']
230     : -----------11-------1------
230     : ['didNotPromise(acceptor2)', 'leader(proposer0)', 'promise(acceptor1,proposer2)']
231     : -----------1--1---1--------
231     : ['didNotPromise(acceptor2)', 'leader(proposer2)', 'promise(acceptor1,proposer0)']
232     : -----------11------1-------
232     : ['didNotPromise(acceptor2)', 'leader(proposer0)', 'promise(acceptor1,proposer1)']
233     : -----------1-1----1--------
233     : ['didNotPromise(acceptor2)', 'leader(proposer1)', 'promise(acceptor1,proposer0)']
234     : ---------1---1---------1---
234     : ['didNotPromise(acceptor0)', 'leader(proposer1)', 'promise(acceptor2,proposer2)']
235     : ---------1----1-------1----
235     : ['didNotPromise(acceptor0)', 'leader(proposer2)', 'promise(acceptor2,proposer1)']
236     : ---------1--1----------1---
236     : ['didNotPromise(acceptor0)', 'leader(proposer0)', 'promise(acceptor2,proposer2)']
237     : ---------1----1------1-----
237     : ['didNotPromise(acceptor0)', 'leader(proposer2)', 'promise(acceptor2,proposer0)']
238     : ---------1--1---------1----
238     : ['didNotPromise(acceptor0)', 'leader(proposer0)', 'promise(acceptor2,proposer1)']
239     : ---------1---1-------1-----
239     : ['didNotPromise(acceptor0)', 'leader(proposer1)', 'promise(acceptor2,proposer0)']
240     : -----------1-1---1---------
240     : ['didNotPromise(acceptor2)', 'leader(proposer1)', 'promise(acceptor0,proposer2)']
241     : -----------1--1-1----------
241     : ['didNotPromise(acceptor2)', 'leader(proposer2)', 'promise(acceptor0,proposer1)']
242     : -----------11----1---------
242     : ['didNotPromise(acceptor2)', 'leader(proposer0)', 'promise(acceptor0,proposer2)']
243     : -----------1--11-----------
243     : ['didNotPromise(acceptor2)', 'leader(proposer2)', 'promise(acceptor0,proposer0)']
244     : -----------11---1----------
244     : ['didNotPromise(acceptor2)', 'leader(proposer0)', 'promise(acceptor0,proposer1)']
245     : -----------1-1-1-----------
245     : ['didNotPromise(acceptor2)', 'leader(proposer1)', 'promise(acceptor0,proposer0)']
246     : ---------1---1------1------
246     : ['didNotPromise(acceptor0)', 'leader(proposer1)', 'promise(acceptor1,proposer2)']
247     : ---------1----1----1-------
247     : ['didNotPromise(acceptor0)', 'leader(proposer2)', 'promise(acceptor1,proposer1)']
248     : ---------1--1-------1------
248     : ['didNotPromise(acceptor0)', 'leader(proposer0)', 'promise(acceptor1,proposer2)']
249     : ---------1----1---1--------
249     : ['didNotPromise(acceptor0)', 'leader(proposer2)', 'promise(acceptor1,proposer0)']
250     : ---------1--1------1-------
250     : ['didNotPromise(acceptor0)', 'leader(proposer0)', 'promise(acceptor1,proposer1)']
251     : ---------1---1----1--------
251     : ['didNotPromise(acceptor0)', 'leader(proposer1)', 'promise(acceptor1,proposer0)']
252     : ----------1--1---1---------
252     : ['didNotPromise(acceptor1)', 'leader(proposer1)', 'promise(acceptor0,proposer2)']
253     : ----------1---1-1----------
253     : ['didNotPromise(acceptor1)', 'leader(proposer2)', 'promise(acceptor0,proposer1)']
254     : ----------1-1----1---------
254     : ['didNotPromise(acceptor1)', 'leader(proposer0)', 'promise(acceptor0,proposer2)']
255     : ----------1---11-----------
255     : ['didNotPromise(acceptor1)', 'leader(proposer2)', 'promise(acceptor0,proposer0)']
256     : ----------1-1---1----------
256     : ['didNotPromise(acceptor1)', 'leader(proposer0)', 'promise(acceptor0,proposer1)']
257     : ----------1--1-1-----------
257     : ['didNotPromise(acceptor1)', 'leader(proposer1)', 'promise(acceptor0,proposer0)']
num_forall :   0
num_exists :   0
num_literals : 0
quantified form : None
qcost : 0


=== Prime Orbit 17 =====================
size : 18
num_suborbits: 1
258 (*) : -0-----------1---------1---
258     : ['leader(proposer1)', 'promise(acceptor2,proposer2)', '~chosenAt(quorum__acceptor0_acceptor1,proposer1)']
259     : --0-----------1-------1----
259     : ['leader(proposer2)', 'promise(acceptor2,proposer1)', '~chosenAt(quorum__acceptor0_acceptor1,proposer2)']
260     : 0-----------1----------1---
260     : ['leader(proposer0)', 'promise(acceptor2,proposer2)', '~chosenAt(quorum__acceptor0_acceptor1,proposer0)']
261     : --0-----------1------1-----
261     : ['leader(proposer2)', 'promise(acceptor2,proposer0)', '~chosenAt(quorum__acceptor0_acceptor1,proposer2)']
262     : 0-----------1---------1----
262     : ['leader(proposer0)', 'promise(acceptor2,proposer1)', '~chosenAt(quorum__acceptor0_acceptor1,proposer0)']
263     : -0-----------1-------1-----
263     : ['leader(proposer1)', 'promise(acceptor2,proposer0)', '~chosenAt(quorum__acceptor0_acceptor1,proposer1)']
264     : ----0--------1------1------
264     : ['leader(proposer1)', 'promise(acceptor1,proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)']
265     : -----0--------1----1-------
265     : ['leader(proposer2)', 'promise(acceptor1,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)']
266     : ---0--------1-------1------
266     : ['leader(proposer0)', 'promise(acceptor1,proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)']
267     : -----0--------1---1--------
267     : ['leader(proposer2)', 'promise(acceptor1,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)']
268     : ---0--------1------1-------
268     : ['leader(proposer0)', 'promise(acceptor1,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)']
269     : ----0--------1----1--------
269     : ['leader(proposer1)', 'promise(acceptor1,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)']
270     : -------0-----1---1---------
270     : ['leader(proposer1)', 'promise(acceptor0,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)']
271     : --------0-----1-1----------
271     : ['leader(proposer2)', 'promise(acceptor0,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)']
272     : ------0-----1----1---------
272     : ['leader(proposer0)', 'promise(acceptor0,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)']
273     : --------0-----11-----------
273     : ['leader(proposer2)', 'promise(acceptor0,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)']
274     : ------0-----1---1----------
274     : ['leader(proposer0)', 'promise(acceptor0,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)']
275     : -------0-----1-1-----------
275     : ['leader(proposer1)', 'promise(acceptor0,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)']
num_forall :   0
num_exists :   0
num_literals : 0
quantified form : None
qcost : 0


=== Prime Orbit 18 =====================
size : 36
num_suborbits: 1
276 (*) : --------------1--0---1-----
276     : ['leader(proposer2)', 'promise(acceptor2,proposer0)', '~promise(acceptor0,proposer2)']
277     : -------------1--0----1-----
277     : ['leader(proposer1)', 'promise(acceptor2,proposer0)', '~promise(acceptor0,proposer1)']
278     : --------------1--0----1----
278     : ['leader(proposer2)', 'promise(acceptor2,proposer1)', '~promise(acceptor0,proposer2)']
279     : ------------1--0------1----
279     : ['leader(proposer0)', 'promise(acceptor2,proposer1)', '~promise(acceptor0,proposer0)']
280     : -------------1--0------1---
280     : ['leader(proposer1)', 'promise(acceptor2,proposer2)', '~promise(acceptor0,proposer1)']
281     : ------------1--0-------1---
281     : ['leader(proposer0)', 'promise(acceptor2,proposer2)', '~promise(acceptor0,proposer0)']
282     : --------------1--01--------
282     : ['leader(proposer2)', 'promise(acceptor1,proposer0)', '~promise(acceptor0,proposer2)']
283     : -------------1--0-1--------
283     : ['leader(proposer1)', 'promise(acceptor1,proposer0)', '~promise(acceptor0,proposer1)']
284     : --------------1--0-1-------
284     : ['leader(proposer2)', 'promise(acceptor1,proposer1)', '~promise(acceptor0,proposer2)']
285     : ------------1--0---1-------
285     : ['leader(proposer0)', 'promise(acceptor1,proposer1)', '~promise(acceptor0,proposer0)']
286     : -------------1--0---1------
286     : ['leader(proposer1)', 'promise(acceptor1,proposer2)', '~promise(acceptor0,proposer1)']
287     : ------------1--0----1------
287     : ['leader(proposer0)', 'promise(acceptor1,proposer2)', '~promise(acceptor0,proposer0)']
288     : --------------1-----01-----
288     : ['leader(proposer2)', 'promise(acceptor2,proposer0)', '~promise(acceptor1,proposer2)']
289     : -------------1-----0-1-----
289     : ['leader(proposer1)', 'promise(acceptor2,proposer0)', '~promise(acceptor1,proposer1)']
290     : --------------1-----0-1----
290     : ['leader(proposer2)', 'promise(acceptor2,proposer1)', '~promise(acceptor1,proposer2)']
291     : ------------1-----0---1----
291     : ['leader(proposer0)', 'promise(acceptor2,proposer1)', '~promise(acceptor1,proposer0)']
292     : -------------1-----0---1---
292     : ['leader(proposer1)', 'promise(acceptor2,proposer2)', '~promise(acceptor1,proposer1)']
293     : ------------1-----0----1---
293     : ['leader(proposer0)', 'promise(acceptor2,proposer2)', '~promise(acceptor1,proposer0)']
294     : --------------11----0------
294     : ['leader(proposer2)', 'promise(acceptor0,proposer0)', '~promise(acceptor1,proposer2)']
295     : -------------1-1---0-------
295     : ['leader(proposer1)', 'promise(acceptor0,proposer0)', '~promise(acceptor1,proposer1)']
296     : --------------1-1---0------
296     : ['leader(proposer2)', 'promise(acceptor0,proposer1)', '~promise(acceptor1,proposer2)']
297     : ------------1---1-0--------
297     : ['leader(proposer0)', 'promise(acceptor0,proposer1)', '~promise(acceptor1,proposer0)']
298     : -------------1---1-0-------
298     : ['leader(proposer1)', 'promise(acceptor0,proposer2)', '~promise(acceptor1,proposer1)']
299     : ------------1----10--------
299     : ['leader(proposer0)', 'promise(acceptor0,proposer2)', '~promise(acceptor1,proposer0)']
300     : --------------1---1----0---
300     : ['leader(proposer2)', 'promise(acceptor1,proposer0)', '~promise(acceptor2,proposer2)']
301     : -------------1----1---0----
301     : ['leader(proposer1)', 'promise(acceptor1,proposer0)', '~promise(acceptor2,proposer1)']
302     : --------------1----1---0---
302     : ['leader(proposer2)', 'promise(acceptor1,proposer1)', '~promise(acceptor2,proposer2)']
303     : ------------1------1-0-----
303     : ['leader(proposer0)', 'promise(acceptor1,proposer1)', '~promise(acceptor2,proposer0)']
304     : -------------1------1-0----
304     : ['leader(proposer1)', 'promise(acceptor1,proposer2)', '~promise(acceptor2,proposer1)']
305     : ------------1-------10-----
305     : ['leader(proposer0)', 'promise(acceptor1,proposer2)', '~promise(acceptor2,proposer0)']
306     : --------------11-------0---
306     : ['leader(proposer2)', 'promise(acceptor0,proposer0)', '~promise(acceptor2,proposer2)']
307     : -------------1-1------0----
307     : ['leader(proposer1)', 'promise(acceptor0,proposer0)', '~promise(acceptor2,proposer1)']
308     : --------------1-1------0---
308     : ['leader(proposer2)', 'promise(acceptor0,proposer1)', '~promise(acceptor2,proposer2)']
309     : ------------1---1----0-----
309     : ['leader(proposer0)', 'promise(acceptor0,proposer1)', '~promise(acceptor2,proposer0)']
310     : -------------1---1----0----
310     : ['leader(proposer1)', 'promise(acceptor0,proposer2)', '~promise(acceptor2,proposer1)']
311     : ------------1----1---0-----
311     : ['leader(proposer0)', 'promise(acceptor0,proposer2)', '~promise(acceptor2,proposer0)']
num_forall :   0
num_exists :   0
num_literals : 0
quantified form : None
qcost : 0


=== Prime Orbit 19 =====================
size : 36
num_suborbits: 2
312 (*) : --------------1---1--1-----
312     : ['leader(proposer2)', 'promise(acceptor1,proposer0)', 'promise(acceptor2,proposer0)']
313     : -------------1----1--1-----
313     : ['leader(proposer1)', 'promise(acceptor1,proposer0)', 'promise(acceptor2,proposer0)']
314     : --------------1----1--1----
314     : ['leader(proposer2)', 'promise(acceptor1,proposer1)', 'promise(acceptor2,proposer1)']
315     : ------------1------1--1----
315     : ['leader(proposer0)', 'promise(acceptor1,proposer1)', 'promise(acceptor2,proposer1)']
316     : -------------1------1--1---
316     : ['leader(proposer1)', 'promise(acceptor1,proposer2)', 'promise(acceptor2,proposer2)']
317     : ------------1-------1--1---
317     : ['leader(proposer0)', 'promise(acceptor1,proposer2)', 'promise(acceptor2,proposer2)']
318     : --------------11-----1-----
318     : ['leader(proposer2)', 'promise(acceptor0,proposer0)', 'promise(acceptor2,proposer0)']
319     : -------------1-1-----1-----
319     : ['leader(proposer1)', 'promise(acceptor0,proposer0)', 'promise(acceptor2,proposer0)']
320     : --------------1-1-----1----
320     : ['leader(proposer2)', 'promise(acceptor0,proposer1)', 'promise(acceptor2,proposer1)']
321     : ------------1---1-----1----
321     : ['leader(proposer0)', 'promise(acceptor0,proposer1)', 'promise(acceptor2,proposer1)']
322     : -------------1---1-----1---
322     : ['leader(proposer1)', 'promise(acceptor0,proposer2)', 'promise(acceptor2,proposer2)']
323     : ------------1----1-----1---
323     : ['leader(proposer0)', 'promise(acceptor0,proposer2)', 'promise(acceptor2,proposer2)']
324     : --------------11--1--------
324     : ['leader(proposer2)', 'promise(acceptor0,proposer0)', 'promise(acceptor1,proposer0)']
325     : -------------1-1--1--------
325     : ['leader(proposer1)', 'promise(acceptor0,proposer0)', 'promise(acceptor1,proposer0)']
326     : --------------1-1--1-------
326     : ['leader(proposer2)', 'promise(acceptor0,proposer1)', 'promise(acceptor1,proposer1)']
327     : ------------1---1--1-------
327     : ['leader(proposer0)', 'promise(acceptor0,proposer1)', 'promise(acceptor1,proposer1)']
328     : -------------1---1--1------
328     : ['leader(proposer1)', 'promise(acceptor0,proposer2)', 'promise(acceptor1,proposer2)']
329     : ------------1----1--1------
329     : ['leader(proposer0)', 'promise(acceptor0,proposer2)', 'promise(acceptor1,proposer2)']
330 (*) : --------------1----1-1-----
330     : ['leader(proposer2)', 'promise(acceptor1,proposer1)', 'promise(acceptor2,proposer0)']
331     : -------------1------11-----
331     : ['leader(proposer1)', 'promise(acceptor1,proposer2)', 'promise(acceptor2,proposer0)']
332     : --------------1---1---1----
332     : ['leader(proposer2)', 'promise(acceptor1,proposer0)', 'promise(acceptor2,proposer1)']
333     : ------------1-------1-1----
333     : ['leader(proposer0)', 'promise(acceptor1,proposer2)', 'promise(acceptor2,proposer1)']
334     : -------------1----1----1---
334     : ['leader(proposer1)', 'promise(acceptor1,proposer0)', 'promise(acceptor2,proposer2)']
335     : ------------1------1---1---
335     : ['leader(proposer0)', 'promise(acceptor1,proposer1)', 'promise(acceptor2,proposer2)']
336     : --------------1-1----1-----
336     : ['leader(proposer2)', 'promise(acceptor0,proposer1)', 'promise(acceptor2,proposer0)']
337     : -------------1---1---1-----
337     : ['leader(proposer1)', 'promise(acceptor0,proposer2)', 'promise(acceptor2,proposer0)']
338     : --------------11------1----
338     : ['leader(proposer2)', 'promise(acceptor0,proposer0)', 'promise(acceptor2,proposer1)']
339     : ------------1----1----1----
339     : ['leader(proposer0)', 'promise(acceptor0,proposer2)', 'promise(acceptor2,proposer1)']
340     : -------------1-1-------1---
340     : ['leader(proposer1)', 'promise(acceptor0,proposer0)', 'promise(acceptor2,proposer2)']
341     : ------------1---1------1---
341     : ['leader(proposer0)', 'promise(acceptor0,proposer1)', 'promise(acceptor2,proposer2)']
342     : --------------1-1-1--------
342     : ['leader(proposer2)', 'promise(acceptor0,proposer1)', 'promise(acceptor1,proposer0)']
343     : -------------1---11--------
343     : ['leader(proposer1)', 'promise(acceptor0,proposer2)', 'promise(acceptor1,proposer0)']
344     : --------------11---1-------
344     : ['leader(proposer2)', 'promise(acceptor0,proposer0)', 'promise(acceptor1,proposer1)']
345     : ------------1----1-1-------
345     : ['leader(proposer0)', 'promise(acceptor0,proposer2)', 'promise(acceptor1,proposer1)']
346     : -------------1-1----1------
346     : ['leader(proposer1)', 'promise(acceptor0,proposer0)', 'promise(acceptor1,proposer2)']
347     : ------------1---1---1------
347     : ['leader(proposer0)', 'promise(acceptor0,proposer1)', 'promise(acceptor1,proposer2)']
num_forall :   0
num_exists :   0
num_literals : 0
quantified form : None
qcost : 0


=== Prime Orbit 20 =====================
size : 9
num_suborbits: 1
348 (*) : ------0-----------1--1-----
348     : ['promise(acceptor1,proposer0)', 'promise(acceptor2,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)']
349     : -------0-----------1--1----
349     : ['promise(acceptor1,proposer1)', 'promise(acceptor2,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)']
350     : --------0-----------1--1---
350     : ['promise(acceptor1,proposer2)', 'promise(acceptor2,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)']
351     : ---0-----------1-----1-----
351     : ['promise(acceptor0,proposer0)', 'promise(acceptor2,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)']
352     : ----0-----------1-----1----
352     : ['promise(acceptor0,proposer1)', 'promise(acceptor2,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)']
353     : -----0-----------1-----1---
353     : ['promise(acceptor0,proposer2)', 'promise(acceptor2,proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)']
354     : 0--------------1--1--------
354     : ['promise(acceptor0,proposer0)', 'promise(acceptor1,proposer0)', '~chosenAt(quorum__acceptor0_acceptor1,proposer0)']
355     : -0--------------1--1-------
355     : ['promise(acceptor0,proposer1)', 'promise(acceptor1,proposer1)', '~chosenAt(quorum__acceptor0_acceptor1,proposer1)']
356     : --0--------------1--1------
356     : ['promise(acceptor0,proposer2)', 'promise(acceptor1,proposer2)', '~chosenAt(quorum__acceptor0_acceptor1,proposer2)']
num_forall :   0
num_exists :   0
num_literals : 0
quantified form : None
qcost : 0


=== Prime Orbit 21 =====================
size : 9
num_suborbits: 1
357 (*) : ------------1--0--0--------
357     : ['leader(proposer0)', '~promise(acceptor0,proposer0)', '~promise(acceptor1,proposer0)']
358     : -------------1--0--0-------
358     : ['leader(proposer1)', '~promise(acceptor0,proposer1)', '~promise(acceptor1,proposer1)']
359     : --------------1--0--0------
359     : ['leader(proposer2)', '~promise(acceptor0,proposer2)', '~promise(acceptor1,proposer2)']
360     : ------------1--0-----0-----
360     : ['leader(proposer0)', '~promise(acceptor0,proposer0)', '~promise(acceptor2,proposer0)']
361     : -------------1--0-----0----
361     : ['leader(proposer1)', '~promise(acceptor0,proposer1)', '~promise(acceptor2,proposer1)']
362     : --------------1--0-----0---
362     : ['leader(proposer2)', '~promise(acceptor0,proposer2)', '~promise(acceptor2,proposer2)']
363     : ------------1-----0--0-----
363     : ['leader(proposer0)', '~promise(acceptor1,proposer0)', '~promise(acceptor2,proposer0)']
364     : -------------1-----0--0----
364     : ['leader(proposer1)', '~promise(acceptor1,proposer1)', '~promise(acceptor2,proposer1)']
365     : --------------1-----0--0---
365     : ['leader(proposer2)', '~promise(acceptor1,proposer2)', '~promise(acceptor2,proposer2)']
num_forall :   0
num_exists :   0
num_literals : 0
quantified form : None
qcost : 0


=== Prime Orbit 22 =====================
size : 9
num_suborbits: 1
366 (*) : ---------11--1-------------
366     : ['didNotPromise(acceptor0)', 'didNotPromise(acceptor1)', 'leader(proposer1)']
367     : ---------11---1------------
367     : ['didNotPromise(acceptor0)', 'didNotPromise(acceptor1)', 'leader(proposer2)']
368     : ---------11-1--------------
368     : ['didNotPromise(acceptor0)', 'didNotPromise(acceptor1)', 'leader(proposer0)']
369     : ---------1-1-1-------------
369     : ['didNotPromise(acceptor0)', 'didNotPromise(acceptor2)', 'leader(proposer1)']
370     : ---------1-1--1------------
370     : ['didNotPromise(acceptor0)', 'didNotPromise(acceptor2)', 'leader(proposer2)']
371     : ---------1-11--------------
371     : ['didNotPromise(acceptor0)', 'didNotPromise(acceptor2)', 'leader(proposer0)']
372     : ----------11-1-------------
372     : ['didNotPromise(acceptor1)', 'didNotPromise(acceptor2)', 'leader(proposer1)']
373     : ----------11--1------------
373     : ['didNotPromise(acceptor1)', 'didNotPromise(acceptor2)', 'leader(proposer2)']
374     : ----------111--------------
374     : ['didNotPromise(acceptor1)', 'didNotPromise(acceptor2)', 'leader(proposer0)']
num_forall :   0
num_exists :   0
num_literals : 0
quantified form : None
qcost : 0


=== Prime Orbit 23 =====================
size : 9
num_suborbits: 1
375 (*) : ---------0------00------0--
375     : ['~didNotPromise(acceptor0)', '~promise(acceptor0,proposer1)', '~promise(acceptor0,proposer2)', '~start(proposer0)']
376     : ---------0-----0-0-------0-
376     : ['~didNotPromise(acceptor0)', '~promise(acceptor0,proposer0)', '~promise(acceptor0,proposer2)', '~start(proposer1)']
377     : ---------0-----00---------0
377     : ['~didNotPromise(acceptor0)', '~promise(acceptor0,proposer0)', '~promise(acceptor0,proposer1)', '~start(proposer2)']
378     : ----------0--------00---0--
378     : ['~didNotPromise(acceptor1)', '~promise(acceptor1,proposer1)', '~promise(acceptor1,proposer2)', '~start(proposer0)']
379     : ----------0-------0-0----0-
379     : ['~didNotPromise(acceptor1)', '~promise(acceptor1,proposer0)', '~promise(acceptor1,proposer2)', '~start(proposer1)']
380     : ----------0-------00------0
380     : ['~didNotPromise(acceptor1)', '~promise(acceptor1,proposer0)', '~promise(acceptor1,proposer1)', '~start(proposer2)']
381     : -----------0----------000--
381     : ['~didNotPromise(acceptor2)', '~promise(acceptor2,proposer1)', '~promise(acceptor2,proposer2)', '~start(proposer0)']
382     : -----------0---------0-0-0-
382     : ['~didNotPromise(acceptor2)', '~promise(acceptor2,proposer0)', '~promise(acceptor2,proposer2)', '~start(proposer1)']
383     : -----------0---------00---0
383     : ['~didNotPromise(acceptor2)', '~promise(acceptor2,proposer0)', '~promise(acceptor2,proposer1)', '~start(proposer2)']
num_forall :   0
num_exists :   0
num_literals : 0
quantified form : None
qcost : 0


=== Prime Orbit 24 =====================
size : 9
num_suborbits: 1
384 (*) : ----------0--------0----0-0
384     : ['~didNotPromise(acceptor1)', '~promise(acceptor1,proposer1)', '~start(proposer0)', '~start(proposer2)']
385     : ----------0---------0---00-
385     : ['~didNotPromise(acceptor1)', '~promise(acceptor1,proposer2)', '~start(proposer0)', '~start(proposer1)']
386     : ----------0-------0------00
386     : ['~didNotPromise(acceptor1)', '~promise(acceptor1,proposer0)', '~start(proposer1)', '~start(proposer2)']
387     : -----------0----------0-0-0
387     : ['~didNotPromise(acceptor2)', '~promise(acceptor2,proposer1)', '~start(proposer0)', '~start(proposer2)']
388     : -----------0-----------000-
388     : ['~didNotPromise(acceptor2)', '~promise(acceptor2,proposer2)', '~start(proposer0)', '~start(proposer1)']
389     : -----------0---------0---00
389     : ['~didNotPromise(acceptor2)', '~promise(acceptor2,proposer0)', '~start(proposer1)', '~start(proposer2)']
390     : ---------0------0-------0-0
390     : ['~didNotPromise(acceptor0)', '~promise(acceptor0,proposer1)', '~start(proposer0)', '~start(proposer2)']
391     : ---------0-------0------00-
391     : ['~didNotPromise(acceptor0)', '~promise(acceptor0,proposer2)', '~start(proposer0)', '~start(proposer1)']
392     : ---------0-----0---------00
392     : ['~didNotPromise(acceptor0)', '~promise(acceptor0,proposer0)', '~start(proposer1)', '~start(proposer2)']
num_forall :   0
num_exists :   0
num_literals : 0
quantified form : None
qcost : 0


=== Prime Orbit 25 =====================
size : 3
num_suborbits: 1
393 (*) : ----------0-------000------
393     : ['~didNotPromise(acceptor1)', '~promise(acceptor1,proposer0)', '~promise(acceptor1,proposer1)', '~promise(acceptor1,proposer2)']
394     : -----------0---------000---
394     : ['~didNotPromise(acceptor2)', '~promise(acceptor2,proposer0)', '~promise(acceptor2,proposer1)', '~promise(acceptor2,proposer2)']
395     : ---------0-----000---------
395     : ['~didNotPromise(acceptor0)', '~promise(acceptor0,proposer0)', '~promise(acceptor0,proposer1)', '~promise(acceptor0,proposer2)']
num_forall :   0
num_exists :   0
num_literals : 0
quantified form : None
qcost : 0


=== Prime Orbit 26 =====================
size : 3
num_suborbits: 1
396 (*) : ----------0-------------000
396     : ['~didNotPromise(acceptor1)', '~start(proposer0)', '~start(proposer1)', '~start(proposer2)']
397     : -----------0------------000
397     : ['~didNotPromise(acceptor2)', '~start(proposer0)', '~start(proposer1)', '~start(proposer2)']
398     : ---------0--------------000
398     : ['~didNotPromise(acceptor0)', '~start(proposer0)', '~start(proposer1)', '~start(proposer2)']
num_forall :   0
num_exists :   0
num_literals : 0
quantified form : None
qcost : 0


=== Prime Orbit 27 =====================
size : 9
num_suborbits: 1
399 (*) : --0-----0-----1-----1------
399     : ['leader(proposer2)', 'promise(acceptor1,proposer2)', '~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)']
400     : -0-----0-----1-----1-------
400     : ['leader(proposer1)', 'promise(acceptor1,proposer1)', '~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)']
401     : 0-----0-----1-----1--------
401     : ['leader(proposer0)', 'promise(acceptor1,proposer0)', '~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)']
402     : -----0--0-----1--------1---
402     : ['leader(proposer2)', 'promise(acceptor2,proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)']
403     : ----0--0-----1--------1----
403     : ['leader(proposer1)', 'promise(acceptor2,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)']
404     : ---0--0-----1--------1-----
404     : ['leader(proposer0)', 'promise(acceptor2,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)']
405     : --0--0--------1--1---------
405     : ['leader(proposer2)', 'promise(acceptor0,proposer2)', '~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)']
406     : -0--0--------1--1----------
406     : ['leader(proposer1)', 'promise(acceptor0,proposer1)', '~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)']
407     : 0--0--------1--1-----------
407     : ['leader(proposer0)', 'promise(acceptor0,proposer0)', '~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)']
num_forall :   0
num_exists :   0
num_literals : 0
quantified form : None
qcost : 0


=== Prime Orbit 28 =====================
size : 3
num_suborbits: 1
408 (*) : --0--0--0-----1------------
408     : ['leader(proposer2)', '~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)']
409     : -0--0--0-----1-------------
409     : ['leader(proposer1)', '~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)']
410     : 0--0--0-----1--------------
410     : ['leader(proposer0)', '~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)']
num_forall :   0
num_exists :   0
num_literals : 0
quantified form : None
qcost : 0


=== Prime Orbit 29 =====================
size : 36
num_suborbits: 1
411 (*) : --0-------0------1-0----0--
411     : ['promise(acceptor0,proposer2)', '~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~didNotPromise(acceptor1)', '~promise(acceptor1,proposer1)', '~start(proposer0)']
412     : -0--------0-----1---0---0--
412     : ['promise(acceptor0,proposer1)', '~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~didNotPromise(acceptor1)', '~promise(acceptor1,proposer2)', '~start(proposer0)']
413     : --0-------0------10------0-
413     : ['promise(acceptor0,proposer2)', '~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~didNotPromise(acceptor1)', '~promise(acceptor1,proposer0)', '~start(proposer1)']
414     : 0---------0----1----0----0-
414     : ['promise(acceptor0,proposer0)', '~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~didNotPromise(acceptor1)', '~promise(acceptor1,proposer2)', '~start(proposer1)']
415     : -0--------0-----1-0-------0
415     : ['promise(acceptor0,proposer1)', '~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~didNotPromise(acceptor1)', '~promise(acceptor1,proposer0)', '~start(proposer2)']
416     : 0---------0----1---0------0
416     : ['promise(acceptor0,proposer0)', '~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~didNotPromise(acceptor1)', '~promise(acceptor1,proposer1)', '~start(proposer2)']
417     : -----0-----0-----1----0-0--
417     : ['promise(acceptor0,proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~didNotPromise(acceptor2)', '~promise(acceptor2,proposer1)', '~start(proposer0)']
418     : ----0------0----1------00--
418     : ['promise(acceptor0,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~didNotPromise(acceptor2)', '~promise(acceptor2,proposer2)', '~start(proposer0)']
419     : -----0-----0-----1---0---0-
419     : ['promise(acceptor0,proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~didNotPromise(acceptor2)', '~promise(acceptor2,proposer0)', '~start(proposer1)']
420     : ---0-------0---1-------0-0-
420     : ['promise(acceptor0,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~didNotPromise(acceptor2)', '~promise(acceptor2,proposer2)', '~start(proposer1)']
421     : ----0------0----1----0----0
421     : ['promise(acceptor0,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~didNotPromise(acceptor2)', '~promise(acceptor2,proposer0)', '~start(proposer2)']
422     : ---0-------0---1------0---0
422     : ['promise(acceptor0,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~didNotPromise(acceptor2)', '~promise(acceptor2,proposer1)', '~start(proposer2)']
423     : --0------0------0---1---0--
423     : ['promise(acceptor1,proposer2)', '~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~didNotPromise(acceptor0)', '~promise(acceptor0,proposer1)', '~start(proposer0)']
424     : -0-------0-------0-1----0--
424     : ['promise(acceptor1,proposer1)', '~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~didNotPromise(acceptor0)', '~promise(acceptor0,proposer2)', '~start(proposer0)']
425     : --0------0-----0----1----0-
425     : ['promise(acceptor1,proposer2)', '~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~didNotPromise(acceptor0)', '~promise(acceptor0,proposer0)', '~start(proposer1)']
426     : 0--------0-------01------0-
426     : ['promise(acceptor1,proposer0)', '~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~didNotPromise(acceptor0)', '~promise(acceptor0,proposer2)', '~start(proposer1)']
427     : -0-------0-----0---1------0
427     : ['promise(acceptor1,proposer1)', '~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~didNotPromise(acceptor0)', '~promise(acceptor0,proposer0)', '~start(proposer2)']
428     : 0--------0------0-1-------0
428     : ['promise(acceptor1,proposer0)', '~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~didNotPromise(acceptor0)', '~promise(acceptor0,proposer1)', '~start(proposer2)']
429     : --------0--0--------1-0-0--
429     : ['promise(acceptor1,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor2)', '~promise(acceptor2,proposer1)', '~start(proposer0)']
430     : -------0---0-------1---00--
430     : ['promise(acceptor1,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor2)', '~promise(acceptor2,proposer2)', '~start(proposer0)']
431     : --------0--0--------10---0-
431     : ['promise(acceptor1,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor2)', '~promise(acceptor2,proposer0)', '~start(proposer1)']
432     : ------0----0------1----0-0-
432     : ['promise(acceptor1,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor2)', '~promise(acceptor2,proposer2)', '~start(proposer1)']
433     : -------0---0-------1-0----0
433     : ['promise(acceptor1,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor2)', '~promise(acceptor2,proposer0)', '~start(proposer2)']
434     : ------0----0------1---0---0
434     : ['promise(acceptor1,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor2)', '~promise(acceptor2,proposer1)', '~start(proposer2)']
435     : -----0---0------0------10--
435     : ['promise(acceptor2,proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~didNotPromise(acceptor0)', '~promise(acceptor0,proposer1)', '~start(proposer0)']
436     : ----0----0-------0----1-0--
436     : ['promise(acceptor2,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~didNotPromise(acceptor0)', '~promise(acceptor0,proposer2)', '~start(proposer0)']
437     : -----0---0-----0-------1-0-
437     : ['promise(acceptor2,proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~didNotPromise(acceptor0)', '~promise(acceptor0,proposer0)', '~start(proposer1)']
438     : ---0-----0-------0---1---0-
438     : ['promise(acceptor2,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~didNotPromise(acceptor0)', '~promise(acceptor0,proposer2)', '~start(proposer1)']
439     : ----0----0-----0------1---0
439     : ['promise(acceptor2,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~didNotPromise(acceptor0)', '~promise(acceptor0,proposer0)', '~start(proposer2)']
440     : ---0-----0------0----1----0
440     : ['promise(acceptor2,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~didNotPromise(acceptor0)', '~promise(acceptor0,proposer1)', '~start(proposer2)']
441     : --------0-0--------0---10--
441     : ['promise(acceptor2,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor1)', '~promise(acceptor1,proposer1)', '~start(proposer0)']
442     : -------0--0---------0-1-0--
442     : ['promise(acceptor2,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor1)', '~promise(acceptor1,proposer2)', '~start(proposer0)']
443     : --------0-0-------0----1-0-
443     : ['promise(acceptor2,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor1)', '~promise(acceptor1,proposer0)', '~start(proposer1)']
444     : ------0---0---------01---0-
444     : ['promise(acceptor2,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor1)', '~promise(acceptor1,proposer2)', '~start(proposer1)']
445     : -------0--0-------0---1---0
445     : ['promise(acceptor2,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor1)', '~promise(acceptor1,proposer0)', '~start(proposer2)']
446     : ------0---0--------0-1----0
446     : ['promise(acceptor2,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor1)', '~promise(acceptor1,proposer1)', '~start(proposer2)']
num_forall :   0
num_exists :   0
num_literals : 0
quantified form : None
qcost : 0


=== Prime Orbit 30 =====================
size : 18
num_suborbits: 1
447 (*) : -----0-----0-----1------00-
447     : ['promise(acceptor0,proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~didNotPromise(acceptor2)', '~start(proposer0)', '~start(proposer1)']
448     : ----0------0----1-------0-0
448     : ['promise(acceptor0,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~didNotPromise(acceptor2)', '~start(proposer0)', '~start(proposer2)']
449     : ---0-------0---1---------00
449     : ['promise(acceptor0,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~didNotPromise(acceptor2)', '~start(proposer1)', '~start(proposer2)']
450     : --0-------0------1------00-
450     : ['promise(acceptor0,proposer2)', '~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~didNotPromise(acceptor1)', '~start(proposer0)', '~start(proposer1)']
451     : -0--------0-----1-------0-0
451     : ['promise(acceptor0,proposer1)', '~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~didNotPromise(acceptor1)', '~start(proposer0)', '~start(proposer2)']
452     : 0---------0----1---------00
452     : ['promise(acceptor0,proposer0)', '~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~didNotPromise(acceptor1)', '~start(proposer1)', '~start(proposer2)']
453     : --------0--0--------1---00-
453     : ['promise(acceptor1,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor2)', '~start(proposer0)', '~start(proposer1)']
454     : -------0---0-------1----0-0
454     : ['promise(acceptor1,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor2)', '~start(proposer0)', '~start(proposer2)']
455     : ------0----0------1------00
455     : ['promise(acceptor1,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor2)', '~start(proposer1)', '~start(proposer2)']
456     : --0------0----------1---00-
456     : ['promise(acceptor1,proposer2)', '~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~didNotPromise(acceptor0)', '~start(proposer0)', '~start(proposer1)']
457     : -0-------0---------1----0-0
457     : ['promise(acceptor1,proposer1)', '~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~didNotPromise(acceptor0)', '~start(proposer0)', '~start(proposer2)']
458     : 0--------0--------1------00
458     : ['promise(acceptor1,proposer0)', '~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~didNotPromise(acceptor0)', '~start(proposer1)', '~start(proposer2)']
459     : --------0-0------------100-
459     : ['promise(acceptor2,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor1)', '~start(proposer0)', '~start(proposer1)']
460     : -------0--0-----------1-0-0
460     : ['promise(acceptor2,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor1)', '~start(proposer0)', '~start(proposer2)']
461     : ------0---0----------1---00
461     : ['promise(acceptor2,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor1)', '~start(proposer1)', '~start(proposer2)']
462     : -----0---0-------------100-
462     : ['promise(acceptor2,proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~didNotPromise(acceptor0)', '~start(proposer0)', '~start(proposer1)']
463     : ----0----0------------1-0-0
463     : ['promise(acceptor2,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~didNotPromise(acceptor0)', '~start(proposer0)', '~start(proposer2)']
464     : ---0-----0-----------1---00
464     : ['promise(acceptor2,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~didNotPromise(acceptor0)', '~start(proposer1)', '~start(proposer2)']
num_forall :   0
num_exists :   0
num_literals : 0
quantified form : None
qcost : 0


=== Prime Orbit 31 =====================
size : 36
num_suborbits: 1
465 (*) : -0--1-----0---------0---0--
465     : ['chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~didNotPromise(acceptor1)', '~promise(acceptor1,proposer2)', '~start(proposer0)']
466     : --0--1----0--------0----0--
466     : ['chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~didNotPromise(acceptor1)', '~promise(acceptor1,proposer1)', '~start(proposer0)']
467     : 0--1------0---------0----0-
467     : ['chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~didNotPromise(acceptor1)', '~promise(acceptor1,proposer2)', '~start(proposer1)']
468     : --0--1----0-------0------0-
468     : ['chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~didNotPromise(acceptor1)', '~promise(acceptor1,proposer0)', '~start(proposer1)']
469     : 0--1------0--------0------0
469     : ['chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~didNotPromise(acceptor1)', '~promise(acceptor1,proposer1)', '~start(proposer2)']
470     : -0--1-----0-------0-------0
470     : ['chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~didNotPromise(acceptor1)', '~promise(acceptor1,proposer0)', '~start(proposer2)']
471     : -1--0------0-----------00--
471     : ['chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~didNotPromise(acceptor2)', '~promise(acceptor2,proposer2)', '~start(proposer0)']
472     : --1--0-----0----------0-0--
472     : ['chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~didNotPromise(acceptor2)', '~promise(acceptor2,proposer1)', '~start(proposer0)']
473     : 1--0-------0-----------0-0-
473     : ['chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~didNotPromise(acceptor2)', '~promise(acceptor2,proposer2)', '~start(proposer1)']
474     : --1--0-----0---------0---0-
474     : ['chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~didNotPromise(acceptor2)', '~promise(acceptor2,proposer0)', '~start(proposer1)']
475     : 1--0-------0----------0---0
475     : ['chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~didNotPromise(acceptor2)', '~promise(acceptor2,proposer1)', '~start(proposer2)']
476     : -1--0------0---------0----0
476     : ['chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~didNotPromise(acceptor2)', '~promise(acceptor2,proposer0)', '~start(proposer2)']
477     : -0-----1-0-------0------0--
477     : ['chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~didNotPromise(acceptor0)', '~promise(acceptor0,proposer2)', '~start(proposer0)']
478     : --0-----10------0-------0--
478     : ['chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~didNotPromise(acceptor0)', '~promise(acceptor0,proposer1)', '~start(proposer0)']
479     : 0-----1--0-------0-------0-
479     : ['chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~didNotPromise(acceptor0)', '~promise(acceptor0,proposer2)', '~start(proposer1)']
480     : --0-----10-----0---------0-
480     : ['chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~didNotPromise(acceptor0)', '~promise(acceptor0,proposer0)', '~start(proposer1)']
481     : 0-----1--0------0---------0
481     : ['chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~didNotPromise(acceptor0)', '~promise(acceptor0,proposer1)', '~start(proposer2)']
482     : -0-----1-0-----0----------0
482     : ['chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~didNotPromise(acceptor0)', '~promise(acceptor0,proposer0)', '~start(proposer2)']
483     : -1-----0---0-----------00--
483     : ['chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor2)', '~promise(acceptor2,proposer2)', '~start(proposer0)']
484     : --1-----0--0----------0-0--
484     : ['chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor2)', '~promise(acceptor2,proposer1)', '~start(proposer0)']
485     : 1-----0----0-----------0-0-
485     : ['chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor2)', '~promise(acceptor2,proposer2)', '~start(proposer1)']
486     : --1-----0--0---------0---0-
486     : ['chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor2)', '~promise(acceptor2,proposer0)', '~start(proposer1)']
487     : 1-----0----0----------0---0
487     : ['chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor2)', '~promise(acceptor2,proposer1)', '~start(proposer2)']
488     : -1-----0---0---------0----0
488     : ['chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor2)', '~promise(acceptor2,proposer0)', '~start(proposer2)']
489     : ----0--1-0-------0------0--
489     : ['chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~didNotPromise(acceptor0)', '~promise(acceptor0,proposer2)', '~start(proposer0)']
490     : -----0--10------0-------0--
490     : ['chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~didNotPromise(acceptor0)', '~promise(acceptor0,proposer1)', '~start(proposer0)']
491     : ---0--1--0-------0-------0-
491     : ['chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~didNotPromise(acceptor0)', '~promise(acceptor0,proposer2)', '~start(proposer1)']
492     : -----0--10-----0---------0-
492     : ['chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~didNotPromise(acceptor0)', '~promise(acceptor0,proposer0)', '~start(proposer1)']
493     : ---0--1--0------0---------0
493     : ['chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~didNotPromise(acceptor0)', '~promise(acceptor0,proposer1)', '~start(proposer2)']
494     : ----0--1-0-----0----------0
494     : ['chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~didNotPromise(acceptor0)', '~promise(acceptor0,proposer0)', '~start(proposer2)']
495     : ----1--0--0---------0---0--
495     : ['chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor1)', '~promise(acceptor1,proposer2)', '~start(proposer0)']
496     : -----1--0-0--------0----0--
496     : ['chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor1)', '~promise(acceptor1,proposer1)', '~start(proposer0)']
497     : ---1--0---0---------0----0-
497     : ['chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor1)', '~promise(acceptor1,proposer2)', '~start(proposer1)']
498     : -----1--0-0-------0------0-
498     : ['chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor1)', '~promise(acceptor1,proposer0)', '~start(proposer1)']
499     : ---1--0---0--------0------0
499     : ['chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor1)', '~promise(acceptor1,proposer1)', '~start(proposer2)']
500     : ----1--0--0-------0-------0
500     : ['chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor1)', '~promise(acceptor1,proposer0)', '~start(proposer2)']
num_forall :   0
num_exists :   0
num_literals : 0
quantified form : None
qcost : 0


=== Prime Orbit 32 =====================
size : 9
num_suborbits: 1
501 (*) : --------0-00------------00-
501     : ['~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~start(proposer0)', '~start(proposer1)']
502     : -------0--00------------0-0
502     : ['~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~start(proposer0)', '~start(proposer2)']
503     : ------0---00-------------00
503     : ['~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~start(proposer1)', '~start(proposer2)']
504     : -----0---0-0------------00-
504     : ['~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor2)', '~start(proposer0)', '~start(proposer1)']
505     : ----0----0-0------------0-0
505     : ['~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor2)', '~start(proposer0)', '~start(proposer2)']
506     : ---0-----0-0-------------00
506     : ['~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor2)', '~start(proposer1)', '~start(proposer2)']
507     : --0------00-------------00-
507     : ['~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~start(proposer0)', '~start(proposer1)']
508     : -0-------00-------------0-0
508     : ['~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~start(proposer0)', '~start(proposer2)']
509     : 0--------00--------------00
509     : ['~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~start(proposer1)', '~start(proposer2)']
num_forall :   0
num_exists :   0
num_literals : 0
quantified form : None
qcost : 0


=== Prime Orbit 33 =====================
size : 18
num_suborbits: 1
510 (*) : --1-----0--0------------00-
510     : ['chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor2)', '~start(proposer0)', '~start(proposer1)']
511     : -1-----0---0------------0-0
511     : ['chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor2)', '~start(proposer0)', '~start(proposer2)']
512     : 1-----0----0-------------00
512     : ['chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor2)', '~start(proposer1)', '~start(proposer2)']
513     : -----1--0-0-------------00-
513     : ['chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor1)', '~start(proposer0)', '~start(proposer1)']
514     : ----1--0--0-------------0-0
514     : ['chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor1)', '~start(proposer0)', '~start(proposer2)']
515     : ---1--0---0--------------00
515     : ['chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor1)', '~start(proposer1)', '~start(proposer2)']
516     : --1--0-----0------------00-
516     : ['chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~didNotPromise(acceptor2)', '~start(proposer0)', '~start(proposer1)']
517     : -1--0------0------------0-0
517     : ['chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~didNotPromise(acceptor2)', '~start(proposer0)', '~start(proposer2)']
518     : 1--0-------0-------------00
518     : ['chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~didNotPromise(acceptor2)', '~start(proposer1)', '~start(proposer2)']
519     : -----0--10--------------00-
519     : ['chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~didNotPromise(acceptor0)', '~start(proposer0)', '~start(proposer1)']
520     : ----0--1-0--------------0-0
520     : ['chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~didNotPromise(acceptor0)', '~start(proposer0)', '~start(proposer2)']
521     : ---0--1--0---------------00
521     : ['chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~didNotPromise(acceptor0)', '~start(proposer1)', '~start(proposer2)']
522     : --0--1----0-------------00-
522     : ['chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~didNotPromise(acceptor1)', '~start(proposer0)', '~start(proposer1)']
523     : -0--1-----0-------------0-0
523     : ['chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~didNotPromise(acceptor1)', '~start(proposer0)', '~start(proposer2)']
524     : 0--1------0--------------00
524     : ['chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~didNotPromise(acceptor1)', '~start(proposer1)', '~start(proposer2)']
525     : --0-----10--------------00-
525     : ['chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~didNotPromise(acceptor0)', '~start(proposer0)', '~start(proposer1)']
526     : -0-----1-0--------------0-0
526     : ['chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~didNotPromise(acceptor0)', '~start(proposer0)', '~start(proposer2)']
527     : 0-----1--0---------------00
527     : ['chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~didNotPromise(acceptor0)', '~start(proposer1)', '~start(proposer2)']
num_forall :   0
num_exists :   0
num_literals : 0
quantified form : None
qcost : 0


=== Prime Orbit 34 =====================
size : 18
num_suborbits: 1
528 (*) : -----0--10-----00----------
528     : ['chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~didNotPromise(acceptor0)', '~promise(acceptor0,proposer0)', '~promise(acceptor0,proposer1)']
529     : ----0--1-0-----0-0---------
529     : ['chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~didNotPromise(acceptor0)', '~promise(acceptor0,proposer0)', '~promise(acceptor0,proposer2)']
530     : ---0--1--0------00---------
530     : ['chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~didNotPromise(acceptor0)', '~promise(acceptor0,proposer1)', '~promise(acceptor0,proposer2)']
531     : --0-----10-----00----------
531     : ['chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~didNotPromise(acceptor0)', '~promise(acceptor0,proposer0)', '~promise(acceptor0,proposer1)']
532     : -0-----1-0-----0-0---------
532     : ['chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~didNotPromise(acceptor0)', '~promise(acceptor0,proposer0)', '~promise(acceptor0,proposer2)']
533     : 0-----1--0------00---------
533     : ['chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~didNotPromise(acceptor0)', '~promise(acceptor0,proposer1)', '~promise(acceptor0,proposer2)']
534     : -----1--0-0-------00-------
534     : ['chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor1)', '~promise(acceptor1,proposer0)', '~promise(acceptor1,proposer1)']
535     : ----1--0--0-------0-0------
535     : ['chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor1)', '~promise(acceptor1,proposer0)', '~promise(acceptor1,proposer2)']
536     : ---1--0---0--------00------
536     : ['chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor1)', '~promise(acceptor1,proposer1)', '~promise(acceptor1,proposer2)']
537     : --0--1----0-------00-------
537     : ['chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~didNotPromise(acceptor1)', '~promise(acceptor1,proposer0)', '~promise(acceptor1,proposer1)']
538     : -0--1-----0-------0-0------
538     : ['chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~didNotPromise(acceptor1)', '~promise(acceptor1,proposer0)', '~promise(acceptor1,proposer2)']
539     : 0--1------0--------00------
539     : ['chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~didNotPromise(acceptor1)', '~promise(acceptor1,proposer1)', '~promise(acceptor1,proposer2)']
540     : --1-----0--0---------00----
540     : ['chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor2)', '~promise(acceptor2,proposer0)', '~promise(acceptor2,proposer1)']
541     : -1-----0---0---------0-0---
541     : ['chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor2)', '~promise(acceptor2,proposer0)', '~promise(acceptor2,proposer2)']
542     : 1-----0----0----------00---
542     : ['chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor2)', '~promise(acceptor2,proposer1)', '~promise(acceptor2,proposer2)']
543     : --1--0-----0---------00----
543     : ['chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~didNotPromise(acceptor2)', '~promise(acceptor2,proposer0)', '~promise(acceptor2,proposer1)']
544     : -1--0------0---------0-0---
544     : ['chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~didNotPromise(acceptor2)', '~promise(acceptor2,proposer0)', '~promise(acceptor2,proposer2)']
545     : 1--0-------0----------00---
545     : ['chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~didNotPromise(acceptor2)', '~promise(acceptor2,proposer1)', '~promise(acceptor2,proposer2)']
num_forall :   0
num_exists :   0
num_literals : 0
quantified form : None
qcost : 0


=== Prime Orbit 35 =====================
size : 18
num_suborbits: 1
546 (*) : -0--------0-----1-0-0------
546     : ['promise(acceptor0,proposer1)', '~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~didNotPromise(acceptor1)', '~promise(acceptor1,proposer0)', '~promise(acceptor1,proposer2)']
547     : --0-------0------100-------
547     : ['promise(acceptor0,proposer2)', '~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~didNotPromise(acceptor1)', '~promise(acceptor1,proposer0)', '~promise(acceptor1,proposer1)']
548     : 0---------0----1---00------
548     : ['promise(acceptor0,proposer0)', '~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~didNotPromise(acceptor1)', '~promise(acceptor1,proposer1)', '~promise(acceptor1,proposer2)']
549     : ----0------0----1----0-0---
549     : ['promise(acceptor0,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~didNotPromise(acceptor2)', '~promise(acceptor2,proposer0)', '~promise(acceptor2,proposer2)']
550     : -----0-----0-----1---00----
550     : ['promise(acceptor0,proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~didNotPromise(acceptor2)', '~promise(acceptor2,proposer0)', '~promise(acceptor2,proposer1)']
551     : ---0-------0---1------00---
551     : ['promise(acceptor0,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~didNotPromise(acceptor2)', '~promise(acceptor2,proposer1)', '~promise(acceptor2,proposer2)']
552     : -0-------0-----0-0-1-------
552     : ['promise(acceptor1,proposer1)', '~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~didNotPromise(acceptor0)', '~promise(acceptor0,proposer0)', '~promise(acceptor0,proposer2)']
553     : --0------0-----00---1------
553     : ['promise(acceptor1,proposer2)', '~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~didNotPromise(acceptor0)', '~promise(acceptor0,proposer0)', '~promise(acceptor0,proposer1)']
554     : 0--------0------001--------
554     : ['promise(acceptor1,proposer0)', '~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~didNotPromise(acceptor0)', '~promise(acceptor0,proposer1)', '~promise(acceptor0,proposer2)']
555     : -------0---0-------1-0-0---
555     : ['promise(acceptor1,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor2)', '~promise(acceptor2,proposer0)', '~promise(acceptor2,proposer2)']
556     : --------0--0--------100----
556     : ['promise(acceptor1,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor2)', '~promise(acceptor2,proposer0)', '~promise(acceptor2,proposer1)']
557     : ------0----0------1---00---
557     : ['promise(acceptor1,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor2)', '~promise(acceptor2,proposer1)', '~promise(acceptor2,proposer2)']
558     : ----0----0-----0-0----1----
558     : ['promise(acceptor2,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~didNotPromise(acceptor0)', '~promise(acceptor0,proposer0)', '~promise(acceptor0,proposer2)']
559     : -----0---0-----00------1---
559     : ['promise(acceptor2,proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~didNotPromise(acceptor0)', '~promise(acceptor0,proposer0)', '~promise(acceptor0,proposer1)']
560     : ---0-----0------00---1-----
560     : ['promise(acceptor2,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~didNotPromise(acceptor0)', '~promise(acceptor0,proposer1)', '~promise(acceptor0,proposer2)']
561     : -------0--0-------0-0-1----
561     : ['promise(acceptor2,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor1)', '~promise(acceptor1,proposer0)', '~promise(acceptor1,proposer2)']
562     : --------0-0-------00---1---
562     : ['promise(acceptor2,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor1)', '~promise(acceptor1,proposer0)', '~promise(acceptor1,proposer1)']
563     : ------0---0--------001-----
563     : ['promise(acceptor2,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor1)', '~promise(acceptor1,proposer1)', '~promise(acceptor1,proposer2)']
num_forall :   0
num_exists :   0
num_literals : 0
quantified form : None
qcost : 0


=== Prime Orbit 36 =====================
size : 18
num_suborbits: 1
564 (*) : 0------0--0----1----0-1----
564     : ['promise(acceptor0,proposer0)', 'promise(acceptor2,proposer1)', '~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor1)', '~promise(acceptor1,proposer2)']
565     : 0-------0-0----1---0---1---
565     : ['promise(acceptor0,proposer0)', 'promise(acceptor2,proposer2)', '~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor1)', '~promise(acceptor1,proposer1)']
566     : -0----0---0-----1---01-----
566     : ['promise(acceptor0,proposer1)', 'promise(acceptor2,proposer0)', '~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor1)', '~promise(acceptor1,proposer2)']
567     : -0------0-0-----1-0----1---
567     : ['promise(acceptor0,proposer1)', 'promise(acceptor2,proposer2)', '~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor1)', '~promise(acceptor1,proposer0)']
568     : --0---0---0------1-0-1-----
568     : ['promise(acceptor0,proposer2)', 'promise(acceptor2,proposer0)', '~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor1)', '~promise(acceptor1,proposer1)']
569     : --0----0--0------10---1----
569     : ['promise(acceptor0,proposer2)', 'promise(acceptor2,proposer1)', '~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor1)', '~promise(acceptor1,proposer0)']
570     : ---0---0---0---1---1---0---
570     : ['promise(acceptor0,proposer0)', 'promise(acceptor1,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor2)', '~promise(acceptor2,proposer2)']
571     : ---0----0--0---1----1-0----
571     : ['promise(acceptor0,proposer0)', 'promise(acceptor1,proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor2)', '~promise(acceptor2,proposer1)']
572     : ----0-0----0----1-1----0---
572     : ['promise(acceptor0,proposer1)', 'promise(acceptor1,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor2)', '~promise(acceptor2,proposer2)']
573     : ----0---0--0----1---10-----
573     : ['promise(acceptor0,proposer1)', 'promise(acceptor1,proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor2)', '~promise(acceptor2,proposer0)']
574     : -----00----0-----11---0----
574     : ['promise(acceptor0,proposer2)', 'promise(acceptor1,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor2)', '~promise(acceptor2,proposer1)']
575     : -----0-0---0-----1-1-0-----
575     : ['promise(acceptor0,proposer2)', 'promise(acceptor1,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor2)', '~promise(acceptor2,proposer0)']
576     : 0---0----0-------01---1----
576     : ['promise(acceptor1,proposer0)', 'promise(acceptor2,proposer1)', '~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~didNotPromise(acceptor0)', '~promise(acceptor0,proposer2)']
577     : 0----0---0------0-1----1---
577     : ['promise(acceptor1,proposer0)', 'promise(acceptor2,proposer2)', '~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~didNotPromise(acceptor0)', '~promise(acceptor0,proposer1)']
578     : -0-0-----0-------0-1-1-----
578     : ['promise(acceptor1,proposer1)', 'promise(acceptor2,proposer0)', '~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~didNotPromise(acceptor0)', '~promise(acceptor0,proposer2)']
579     : -0---0---0-----0---1---1---
579     : ['promise(acceptor1,proposer1)', 'promise(acceptor2,proposer2)', '~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~didNotPromise(acceptor0)', '~promise(acceptor0,proposer0)']
580     : --00-----0------0---11-----
580     : ['promise(acceptor1,proposer2)', 'promise(acceptor2,proposer0)', '~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~didNotPromise(acceptor0)', '~promise(acceptor0,proposer1)']
581     : --0-0----0-----0----1-1----
581     : ['promise(acceptor1,proposer2)', 'promise(acceptor2,proposer1)', '~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~didNotPromise(acceptor0)', '~promise(acceptor0,proposer0)']
num_forall :   0
num_exists :   0
num_literals : 0
quantified form : None
qcost : 0


=== Prime Orbit 37 =====================
size : 18
num_suborbits: 1
582 (*) : ---0----0--0---1----1----0-
582     : ['promise(acceptor0,proposer0)', 'promise(acceptor1,proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor2)', '~start(proposer1)']
583     : ---0---0---0---1---1------0
583     : ['promise(acceptor0,proposer0)', 'promise(acceptor1,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor2)', '~start(proposer2)']
584     : ----0---0--0----1---1---0--
584     : ['promise(acceptor0,proposer1)', 'promise(acceptor1,proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor2)', '~start(proposer0)']
585     : ----0-0----0----1-1-------0
585     : ['promise(acceptor0,proposer1)', 'promise(acceptor1,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor2)', '~start(proposer2)']
586     : -----0-0---0-----1-1----0--
586     : ['promise(acceptor0,proposer2)', 'promise(acceptor1,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor2)', '~start(proposer0)']
587     : -----00----0-----11------0-
587     : ['promise(acceptor0,proposer2)', 'promise(acceptor1,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor2)', '~start(proposer1)']
588     : 0-------0-0----1-------1-0-
588     : ['promise(acceptor0,proposer0)', 'promise(acceptor2,proposer2)', '~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor1)', '~start(proposer1)']
589     : 0------0--0----1------1---0
589     : ['promise(acceptor0,proposer0)', 'promise(acceptor2,proposer1)', '~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor1)', '~start(proposer2)']
590     : -0------0-0-----1------10--
590     : ['promise(acceptor0,proposer1)', 'promise(acceptor2,proposer2)', '~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor1)', '~start(proposer0)']
591     : -0----0---0-----1----1----0
591     : ['promise(acceptor0,proposer1)', 'promise(acceptor2,proposer0)', '~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor1)', '~start(proposer2)']
592     : --0----0--0------1----1-0--
592     : ['promise(acceptor0,proposer2)', 'promise(acceptor2,proposer1)', '~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor1)', '~start(proposer0)']
593     : --0---0---0------1---1---0-
593     : ['promise(acceptor0,proposer2)', 'promise(acceptor2,proposer0)', '~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor1)', '~start(proposer1)']
594     : 0----0---0--------1----1-0-
594     : ['promise(acceptor1,proposer0)', 'promise(acceptor2,proposer2)', '~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~didNotPromise(acceptor0)', '~start(proposer1)']
595     : 0---0----0--------1---1---0
595     : ['promise(acceptor1,proposer0)', 'promise(acceptor2,proposer1)', '~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~didNotPromise(acceptor0)', '~start(proposer2)']
596     : -0---0---0---------1---10--
596     : ['promise(acceptor1,proposer1)', 'promise(acceptor2,proposer2)', '~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~didNotPromise(acceptor0)', '~start(proposer0)']
597     : -0-0-----0---------1-1----0
597     : ['promise(acceptor1,proposer1)', 'promise(acceptor2,proposer0)', '~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~didNotPromise(acceptor0)', '~start(proposer2)']
598     : --0-0----0----------1-1-0--
598     : ['promise(acceptor1,proposer2)', 'promise(acceptor2,proposer1)', '~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~didNotPromise(acceptor0)', '~start(proposer0)']
599     : --00-----0----------11---0-
599     : ['promise(acceptor1,proposer2)', 'promise(acceptor2,proposer0)', '~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~didNotPromise(acceptor0)', '~start(proposer1)']
num_forall :   0
num_exists :   0
num_literals : 0
quantified form : None
qcost : 0


=== Prime Orbit 38 =====================
size : 18
num_suborbits: 1
600 (*) : -0-----0--0--1----0-------0
600     : ['leader(proposer1)', '~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor1)', '~promise(acceptor1,proposer0)', '~start(proposer2)']
601     : --0-----0-0---1---0------0-
601     : ['leader(proposer2)', '~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor1)', '~promise(acceptor1,proposer0)', '~start(proposer1)']
602     : 0-----0---0-1------0------0
602     : ['leader(proposer0)', '~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor1)', '~promise(acceptor1,proposer1)', '~start(proposer2)']
603     : --0-----0-0---1----0----0--
603     : ['leader(proposer2)', '~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor1)', '~promise(acceptor1,proposer1)', '~start(proposer0)']
604     : 0-----0---0-1-------0----0-
604     : ['leader(proposer0)', '~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor1)', '~promise(acceptor1,proposer2)', '~start(proposer1)']
605     : -0-----0--0--1------0---0--
605     : ['leader(proposer1)', '~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor1)', '~promise(acceptor1,proposer2)', '~start(proposer0)']
606     : ----0--0---0-1-------0----0
606     : ['leader(proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor2)', '~promise(acceptor2,proposer0)', '~start(proposer2)']
607     : -----0--0--0--1------0---0-
607     : ['leader(proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor2)', '~promise(acceptor2,proposer0)', '~start(proposer1)']
608     : ---0--0----01---------0---0
608     : ['leader(proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor2)', '~promise(acceptor2,proposer1)', '~start(proposer2)']
609     : -----0--0--0--1-------0-0--
609     : ['leader(proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor2)', '~promise(acceptor2,proposer1)', '~start(proposer0)']
610     : ---0--0----01----------0-0-
610     : ['leader(proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor2)', '~promise(acceptor2,proposer2)', '~start(proposer1)']
611     : ----0--0---0-1---------00--
611     : ['leader(proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor2)', '~promise(acceptor2,proposer2)', '~start(proposer0)']
612     : -0--0----0---1-0----------0
612     : ['leader(proposer1)', '~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~didNotPromise(acceptor0)', '~promise(acceptor0,proposer0)', '~start(proposer2)']
613     : --0--0---0----10---------0-
613     : ['leader(proposer2)', '~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~didNotPromise(acceptor0)', '~promise(acceptor0,proposer0)', '~start(proposer1)']
614     : 0--0-----0--1---0---------0
614     : ['leader(proposer0)', '~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~didNotPromise(acceptor0)', '~promise(acceptor0,proposer1)', '~start(proposer2)']
615     : --0--0---0----1-0-------0--
615     : ['leader(proposer2)', '~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~didNotPromise(acceptor0)', '~promise(acceptor0,proposer1)', '~start(proposer0)']
616     : 0--0-----0--1----0-------0-
616     : ['leader(proposer0)', '~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~didNotPromise(acceptor0)', '~promise(acceptor0,proposer2)', '~start(proposer1)']
617     : -0--0----0---1---0------0--
617     : ['leader(proposer1)', '~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~didNotPromise(acceptor0)', '~promise(acceptor0,proposer2)', '~start(proposer0)']
num_forall :   0
num_exists :   0
num_literals : 0
quantified form : None
qcost : 0


=== Prime Orbit 39 =====================
size : 9
num_suborbits: 1
618 (*) : -0-----0--0--1----0-0------
618     : ['leader(proposer1)', '~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor1)', '~promise(acceptor1,proposer0)', '~promise(acceptor1,proposer2)']
619     : --0-----0-0---1---00-------
619     : ['leader(proposer2)', '~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor1)', '~promise(acceptor1,proposer0)', '~promise(acceptor1,proposer1)']
620     : 0-----0---0-1------00------
620     : ['leader(proposer0)', '~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor1)', '~promise(acceptor1,proposer1)', '~promise(acceptor1,proposer2)']
621     : ----0--0---0-1-------0-0---
621     : ['leader(proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor2)', '~promise(acceptor2,proposer0)', '~promise(acceptor2,proposer2)']
622     : -----0--0--0--1------00----
622     : ['leader(proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor2)', '~promise(acceptor2,proposer0)', '~promise(acceptor2,proposer1)']
623     : ---0--0----01---------00---
623     : ['leader(proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor2)', '~promise(acceptor2,proposer1)', '~promise(acceptor2,proposer2)']
624     : -0--0----0---1-0-0---------
624     : ['leader(proposer1)', '~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~didNotPromise(acceptor0)', '~promise(acceptor0,proposer0)', '~promise(acceptor0,proposer2)']
625     : --0--0---0----100----------
625     : ['leader(proposer2)', '~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~didNotPromise(acceptor0)', '~promise(acceptor0,proposer0)', '~promise(acceptor0,proposer1)']
626     : 0--0-----0--1---00---------
626     : ['leader(proposer0)', '~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~didNotPromise(acceptor0)', '~promise(acceptor0,proposer1)', '~promise(acceptor0,proposer2)']
num_forall :   0
num_exists :   0
num_literals : 0
quantified form : None
qcost : 0


=== Prime Orbit 40 =====================
size : 9
num_suborbits: 1
627 (*) : -0-----0--0--1----------0-0
627     : ['leader(proposer1)', '~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor1)', '~start(proposer0)', '~start(proposer2)']
628     : --0-----0-0---1---------00-
628     : ['leader(proposer2)', '~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor1)', '~start(proposer0)', '~start(proposer1)']
629     : 0-----0---0-1------------00
629     : ['leader(proposer0)', '~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor1)', '~start(proposer1)', '~start(proposer2)']
630     : ----0--0---0-1----------0-0
630     : ['leader(proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor2)', '~start(proposer0)', '~start(proposer2)']
631     : -----0--0--0--1---------00-
631     : ['leader(proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor2)', '~start(proposer0)', '~start(proposer1)']
632     : ---0--0----01------------00
632     : ['leader(proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor2)', '~start(proposer1)', '~start(proposer2)']
633     : -0--0----0---1----------0-0
633     : ['leader(proposer1)', '~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~didNotPromise(acceptor0)', '~start(proposer0)', '~start(proposer2)']
634     : --0--0---0----1---------00-
634     : ['leader(proposer2)', '~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~didNotPromise(acceptor0)', '~start(proposer0)', '~start(proposer1)']
635     : 0--0-----0--1------------00
635     : ['leader(proposer0)', '~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~didNotPromise(acceptor0)', '~start(proposer1)', '~start(proposer2)']
num_forall :   0
num_exists :   0
num_literals : 0
quantified form : None
qcost : 0


=== Prime Orbit 41 =====================
size : 18
num_suborbits: 1
636 (*) : --0------00----0--0------0-
636     : ['~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~promise(acceptor0,proposer0)', '~promise(acceptor1,proposer0)', '~start(proposer1)']
637     : -0-------00----0--0-------0
637     : ['~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~promise(acceptor0,proposer0)', '~promise(acceptor1,proposer0)', '~start(proposer2)']
638     : --0------00-----0--0----0--
638     : ['~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~promise(acceptor0,proposer1)', '~promise(acceptor1,proposer1)', '~start(proposer0)']
639     : 0--------00-----0--0------0
639     : ['~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~promise(acceptor0,proposer1)', '~promise(acceptor1,proposer1)', '~start(proposer2)']
640     : -0-------00------0--0---0--
640     : ['~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~promise(acceptor0,proposer2)', '~promise(acceptor1,proposer2)', '~start(proposer0)']
641     : 0--------00------0--0----0-
641     : ['~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~promise(acceptor0,proposer2)', '~promise(acceptor1,proposer2)', '~start(proposer1)']
642     : -----0---0-0---0-----0---0-
642     : ['~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor2)', '~promise(acceptor0,proposer0)', '~promise(acceptor2,proposer0)', '~start(proposer1)']
643     : ----0----0-0---0-----0----0
643     : ['~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor2)', '~promise(acceptor0,proposer0)', '~promise(acceptor2,proposer0)', '~start(proposer2)']
644     : -----0---0-0----0-----0-0--
644     : ['~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor2)', '~promise(acceptor0,proposer1)', '~promise(acceptor2,proposer1)', '~start(proposer0)']
645     : ---0-----0-0----0-----0---0
645     : ['~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor2)', '~promise(acceptor0,proposer1)', '~promise(acceptor2,proposer1)', '~start(proposer2)']
646     : ----0----0-0-----0-----00--
646     : ['~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor2)', '~promise(acceptor0,proposer2)', '~promise(acceptor2,proposer2)', '~start(proposer0)']
647     : ---0-----0-0-----0-----0-0-
647     : ['~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor2)', '~promise(acceptor0,proposer2)', '~promise(acceptor2,proposer2)', '~start(proposer1)']
648     : --------0-00------0--0---0-
648     : ['~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor1,proposer0)', '~promise(acceptor2,proposer0)', '~start(proposer1)']
649     : -------0--00------0--0----0
649     : ['~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor1,proposer0)', '~promise(acceptor2,proposer0)', '~start(proposer2)']
650     : --------0-00-------0--0-0--
650     : ['~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor1,proposer1)', '~promise(acceptor2,proposer1)', '~start(proposer0)']
651     : ------0---00-------0--0---0
651     : ['~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor1,proposer1)', '~promise(acceptor2,proposer1)', '~start(proposer2)']
652     : -------0--00--------0--00--
652     : ['~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor1,proposer2)', '~promise(acceptor2,proposer2)', '~start(proposer0)']
653     : ------0---00--------0--0-0-
653     : ['~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor1,proposer2)', '~promise(acceptor2,proposer2)', '~start(proposer1)']
num_forall :   0
num_exists :   0
num_literals : 0
quantified form : None
qcost : 0


=== Prime Orbit 42 =====================
size : 36
num_suborbits: 1
654 (*) : --0-0----0-0--------1--00--
654     : ['promise(acceptor1,proposer2)', '~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor2)', '~promise(acceptor2,proposer2)', '~start(proposer0)']
655     : -0---0---0-0-------1--0-0--
655     : ['promise(acceptor1,proposer1)', '~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor2)', '~promise(acceptor2,proposer1)', '~start(proposer0)']
656     : --00-----0-0--------1--0-0-
656     : ['promise(acceptor1,proposer2)', '~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor2)', '~promise(acceptor2,proposer2)', '~start(proposer1)']
657     : 0----0---0-0------1--0---0-
657     : ['promise(acceptor1,proposer0)', '~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor2)', '~promise(acceptor2,proposer0)', '~start(proposer1)']
658     : -0-0-----0-0-------1--0---0
658     : ['promise(acceptor1,proposer1)', '~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor2)', '~promise(acceptor2,proposer1)', '~start(proposer2)']
659     : 0---0----0-0------1--0----0
659     : ['promise(acceptor1,proposer0)', '~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor2)', '~promise(acceptor2,proposer0)', '~start(proposer2)']
660     : -0---0---00---------0--10--
660     : ['promise(acceptor2,proposer2)', '~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~promise(acceptor1,proposer2)', '~start(proposer0)']
661     : --0-0----00--------0--1-0--
661     : ['promise(acceptor2,proposer1)', '~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~promise(acceptor1,proposer1)', '~start(proposer0)']
662     : 0----0---00---------0--1-0-
662     : ['promise(acceptor2,proposer2)', '~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~promise(acceptor1,proposer2)', '~start(proposer1)']
663     : --00-----00-------0--1---0-
663     : ['promise(acceptor2,proposer0)', '~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~promise(acceptor1,proposer0)', '~start(proposer1)']
664     : 0---0----00--------0--1---0
664     : ['promise(acceptor2,proposer1)', '~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~promise(acceptor1,proposer1)', '~start(proposer2)']
665     : -0-0-----00-------0--1----0
665     : ['promise(acceptor2,proposer0)', '~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~promise(acceptor1,proposer0)', '~start(proposer2)']
666     : --0----0--00-----1-----00--
666     : ['promise(acceptor0,proposer2)', '~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor2,proposer2)', '~start(proposer0)']
667     : -0------0-00----1-----0-0--
667     : ['promise(acceptor0,proposer1)', '~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor2,proposer1)', '~start(proposer0)']
668     : --0---0---00-----1-----0-0-
668     : ['promise(acceptor0,proposer2)', '~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor2,proposer2)', '~start(proposer1)']
669     : 0-------0-00---1-----0---0-
669     : ['promise(acceptor0,proposer0)', '~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor2,proposer0)', '~start(proposer1)']
670     : -0----0---00----1-----0---0
670     : ['promise(acceptor0,proposer1)', '~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor2,proposer1)', '~start(proposer2)']
671     : 0------0--00---1-----0----0
671     : ['promise(acceptor0,proposer0)', '~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor2,proposer0)', '~start(proposer2)']
672     : -0------000------0-----10--
672     : ['promise(acceptor2,proposer2)', '~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~promise(acceptor0,proposer2)', '~start(proposer0)']
673     : --0----0-00-----0-----1-0--
673     : ['promise(acceptor2,proposer1)', '~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~promise(acceptor0,proposer1)', '~start(proposer0)']
674     : 0-------000------0-----1-0-
674     : ['promise(acceptor2,proposer2)', '~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~promise(acceptor0,proposer2)', '~start(proposer1)']
675     : --0---0--00----0-----1---0-
675     : ['promise(acceptor2,proposer0)', '~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~promise(acceptor0,proposer0)', '~start(proposer1)']
676     : 0------0-00-----0-----1---0
676     : ['promise(acceptor2,proposer1)', '~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~promise(acceptor0,proposer1)', '~start(proposer2)']
677     : -0----0--00----0-----1----0
677     : ['promise(acceptor2,proposer0)', '~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~promise(acceptor0,proposer0)', '~start(proposer2)']
678     : -----0-0--00-----1--0---0--
678     : ['promise(acceptor0,proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor1,proposer2)', '~start(proposer0)']
679     : ----0---0-00----1--0----0--
679     : ['promise(acceptor0,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor1,proposer1)', '~start(proposer0)']
680     : -----00---00-----1--0----0-
680     : ['promise(acceptor0,proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor1,proposer2)', '~start(proposer1)']
681     : ---0----0-00---1--0------0-
681     : ['promise(acceptor0,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor1,proposer0)', '~start(proposer1)']
682     : ----0-0---00----1--0------0
682     : ['promise(acceptor0,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor1,proposer1)', '~start(proposer2)']
683     : ---0---0--00---1--0-------0
683     : ['promise(acceptor0,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor1,proposer0)', '~start(proposer2)']
684     : ----0---00-0-----0--1---0--
684     : ['promise(acceptor1,proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor2)', '~promise(acceptor0,proposer2)', '~start(proposer0)']
685     : -----0-0-0-0----0--1----0--
685     : ['promise(acceptor1,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor2)', '~promise(acceptor0,proposer1)', '~start(proposer0)']
686     : ---0----00-0-----0--1----0-
686     : ['promise(acceptor1,proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor2)', '~promise(acceptor0,proposer2)', '~start(proposer1)']
687     : -----00--0-0---0--1------0-
687     : ['promise(acceptor1,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor2)', '~promise(acceptor0,proposer0)', '~start(proposer1)']
688     : ---0---0-0-0----0--1------0
688     : ['promise(acceptor1,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor2)', '~promise(acceptor0,proposer1)', '~start(proposer2)']
689     : ----0-0--0-0---0--1-------0
689     : ['promise(acceptor1,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor2)', '~promise(acceptor0,proposer0)', '~start(proposer2)']
num_forall :   0
num_exists :   0
num_literals : 0
quantified form : None
qcost : 0


=== Prime Orbit 43 =====================
size : 18
num_suborbits: 1
690 (*) : --0-0---00-0--------1---0--
690     : ['promise(acceptor1,proposer2)', '~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor2)', '~start(proposer0)']
691     : -0---0-0-0-0-------1----0--
691     : ['promise(acceptor1,proposer1)', '~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor2)', '~start(proposer0)']
692     : --00----00-0--------1----0-
692     : ['promise(acceptor1,proposer2)', '~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor2)', '~start(proposer1)']
693     : 0----00--0-0------1------0-
693     : ['promise(acceptor1,proposer0)', '~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor2)', '~start(proposer1)']
694     : -0-0---0-0-0-------1------0
694     : ['promise(acceptor1,proposer1)', '~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor2)', '~start(proposer2)']
695     : 0---0-0--0-0------1-------0
695     : ['promise(acceptor1,proposer0)', '~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor2)', '~start(proposer2)']
696     : -0---0--000------------10--
696     : ['promise(acceptor2,proposer2)', '~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~start(proposer0)']
697     : --0-0--0-00-----------1-0--
697     : ['promise(acceptor2,proposer1)', '~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~start(proposer0)']
698     : 0----0--000------------1-0-
698     : ['promise(acceptor2,proposer2)', '~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~start(proposer1)']
699     : --00--0--00----------1---0-
699     : ['promise(acceptor2,proposer0)', '~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~start(proposer1)']
700     : 0---0--0-00-----------1---0
700     : ['promise(acceptor2,proposer1)', '~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~start(proposer2)']
701     : -0-0--0--00----------1----0
701     : ['promise(acceptor2,proposer0)', '~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~start(proposer2)']
702     : --0--0-0--00-----1------0--
702     : ['promise(acceptor0,proposer2)', '~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~start(proposer0)']
703     : -0--0---0-00----1-------0--
703     : ['promise(acceptor0,proposer1)', '~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~start(proposer0)']
704     : --0--00---00-----1-------0-
704     : ['promise(acceptor0,proposer2)', '~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~start(proposer1)']
705     : 0--0----0-00---1---------0-
705     : ['promise(acceptor0,proposer0)', '~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~start(proposer1)']
706     : -0--0-0---00----1---------0
706     : ['promise(acceptor0,proposer1)', '~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~start(proposer2)']
707     : 0--0---0--00---1----------0
707     : ['promise(acceptor0,proposer0)', '~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~start(proposer2)']
num_forall :   0
num_exists :   0
num_literals : 0
quantified form : None
qcost : 0


=== Prime Orbit 44 =====================
size : 9
num_suborbits: 1
708 (*) : 0--------00-----00-00------
708     : ['~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~promise(acceptor0,proposer1)', '~promise(acceptor0,proposer2)', '~promise(acceptor1,proposer1)', '~promise(acceptor1,proposer2)']
709     : -0-------00----0-00-0------
709     : ['~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~promise(acceptor0,proposer0)', '~promise(acceptor0,proposer2)', '~promise(acceptor1,proposer0)', '~promise(acceptor1,proposer2)']
710     : --0------00----00-00-------
710     : ['~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~promise(acceptor0,proposer0)', '~promise(acceptor0,proposer1)', '~promise(acceptor1,proposer0)', '~promise(acceptor1,proposer1)']
711     : ---0-----0-0----00----00---
711     : ['~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor2)', '~promise(acceptor0,proposer1)', '~promise(acceptor0,proposer2)', '~promise(acceptor2,proposer1)', '~promise(acceptor2,proposer2)']
712     : ----0----0-0---0-0---0-0---
712     : ['~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor2)', '~promise(acceptor0,proposer0)', '~promise(acceptor0,proposer2)', '~promise(acceptor2,proposer0)', '~promise(acceptor2,proposer2)']
713     : -----0---0-0---00----00----
713     : ['~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor2)', '~promise(acceptor0,proposer0)', '~promise(acceptor0,proposer1)', '~promise(acceptor2,proposer0)', '~promise(acceptor2,proposer1)']
714     : ------0---00-------00-00---
714     : ['~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor1,proposer1)', '~promise(acceptor1,proposer2)', '~promise(acceptor2,proposer1)', '~promise(acceptor2,proposer2)']
715     : -------0--00------0-00-0---
715     : ['~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor1,proposer0)', '~promise(acceptor1,proposer2)', '~promise(acceptor2,proposer0)', '~promise(acceptor2,proposer2)']
716     : --------0-00------00-00----
716     : ['~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor1,proposer0)', '~promise(acceptor1,proposer1)', '~promise(acceptor2,proposer0)', '~promise(acceptor2,proposer1)']
num_forall :   0
num_exists :   0
num_literals : 0
quantified form : None
qcost : 0


=== Prime Orbit 45 =====================
size : 36
num_suborbits: 1
717 (*) : --00-----00-----0-00-1-----
717     : ['promise(acceptor2,proposer0)', '~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~promise(acceptor0,proposer1)', '~promise(acceptor1,proposer0)', '~promise(acceptor1,proposer1)']
718     : -0-0-----00------00-01-----
718     : ['promise(acceptor2,proposer0)', '~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~promise(acceptor0,proposer2)', '~promise(acceptor1,proposer0)', '~promise(acceptor1,proposer2)']
719     : --0-0----00----0--00--1----
719     : ['promise(acceptor2,proposer1)', '~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~promise(acceptor0,proposer0)', '~promise(acceptor1,proposer0)', '~promise(acceptor1,proposer1)']
720     : 0---0----00------0-00-1----
720     : ['promise(acceptor2,proposer1)', '~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~promise(acceptor0,proposer2)', '~promise(acceptor1,proposer1)', '~promise(acceptor1,proposer2)']
721     : -0---0---00----0--0-0--1---
721     : ['promise(acceptor2,proposer2)', '~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~promise(acceptor0,proposer0)', '~promise(acceptor1,proposer0)', '~promise(acceptor1,proposer2)']
722     : 0----0---00-----0--00--1---
722     : ['promise(acceptor2,proposer2)', '~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~promise(acceptor0,proposer1)', '~promise(acceptor1,proposer1)', '~promise(acceptor1,proposer2)']
723     : 0----0---0-0----0-1--00----
723     : ['promise(acceptor1,proposer0)', '~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor2)', '~promise(acceptor0,proposer1)', '~promise(acceptor2,proposer0)', '~promise(acceptor2,proposer1)']
724     : 0---0----0-0-----01--0-0---
724     : ['promise(acceptor1,proposer0)', '~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor2)', '~promise(acceptor0,proposer2)', '~promise(acceptor2,proposer0)', '~promise(acceptor2,proposer2)']
725     : -0---0---0-0---0---1-00----
725     : ['promise(acceptor1,proposer1)', '~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor2)', '~promise(acceptor0,proposer0)', '~promise(acceptor2,proposer0)', '~promise(acceptor2,proposer1)']
726     : -0-0-----0-0-----0-1--00---
726     : ['promise(acceptor1,proposer1)', '~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor2)', '~promise(acceptor0,proposer2)', '~promise(acceptor2,proposer1)', '~promise(acceptor2,proposer2)']
727     : --0-0----0-0---0----10-0---
727     : ['promise(acceptor1,proposer2)', '~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor2)', '~promise(acceptor0,proposer0)', '~promise(acceptor2,proposer0)', '~promise(acceptor2,proposer2)']
728     : --00-----0-0----0---1-00---
728     : ['promise(acceptor1,proposer2)', '~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor2)', '~promise(acceptor0,proposer1)', '~promise(acceptor2,proposer1)', '~promise(acceptor2,proposer2)']
729     : --0---0--00----00--0-1-----
729     : ['promise(acceptor2,proposer0)', '~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~promise(acceptor0,proposer0)', '~promise(acceptor0,proposer1)', '~promise(acceptor1,proposer1)']
730     : -0----0--00----0-0--01-----
730     : ['promise(acceptor2,proposer0)', '~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~promise(acceptor0,proposer0)', '~promise(acceptor0,proposer2)', '~promise(acceptor1,proposer2)']
731     : --0----0-00----00-0---1----
731     : ['promise(acceptor2,proposer1)', '~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~promise(acceptor0,proposer0)', '~promise(acceptor0,proposer1)', '~promise(acceptor1,proposer0)']
732     : 0------0-00-----00--0-1----
732     : ['promise(acceptor2,proposer1)', '~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~promise(acceptor0,proposer1)', '~promise(acceptor0,proposer2)', '~promise(acceptor1,proposer2)']
733     : -0------000----0-00----1---
733     : ['promise(acceptor2,proposer2)', '~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~promise(acceptor0,proposer0)', '~promise(acceptor0,proposer2)', '~promise(acceptor1,proposer0)']
734     : 0-------000-----00-0---1---
734     : ['promise(acceptor2,proposer2)', '~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~promise(acceptor0,proposer1)', '~promise(acceptor0,proposer2)', '~promise(acceptor1,proposer1)']
735     : 0-------0-00---1---0-00----
735     : ['promise(acceptor0,proposer0)', '~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor1,proposer1)', '~promise(acceptor2,proposer0)', '~promise(acceptor2,proposer1)']
736     : 0------0--00---1----00-0---
736     : ['promise(acceptor0,proposer0)', '~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor1,proposer2)', '~promise(acceptor2,proposer0)', '~promise(acceptor2,proposer2)']
737     : -0------0-00----1-0--00----
737     : ['promise(acceptor0,proposer1)', '~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor1,proposer0)', '~promise(acceptor2,proposer0)', '~promise(acceptor2,proposer1)']
738     : -0----0---00----1---0-00---
738     : ['promise(acceptor0,proposer1)', '~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor1,proposer2)', '~promise(acceptor2,proposer1)', '~promise(acceptor2,proposer2)']
739     : --0----0--00-----10--0-0---
739     : ['promise(acceptor0,proposer2)', '~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor1,proposer0)', '~promise(acceptor2,proposer0)', '~promise(acceptor2,proposer2)']
740     : --0---0---00-----1-0--00---
740     : ['promise(acceptor0,proposer2)', '~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor1,proposer1)', '~promise(acceptor2,proposer1)', '~promise(acceptor2,proposer2)']
741     : -----00--0-0---00-1---0----
741     : ['promise(acceptor1,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor2)', '~promise(acceptor0,proposer0)', '~promise(acceptor0,proposer1)', '~promise(acceptor2,proposer1)']
742     : ----0-0--0-0---0-01----0---
742     : ['promise(acceptor1,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor2)', '~promise(acceptor0,proposer0)', '~promise(acceptor0,proposer2)', '~promise(acceptor2,proposer2)']
743     : -----0-0-0-0---00--1-0-----
743     : ['promise(acceptor1,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor2)', '~promise(acceptor0,proposer0)', '~promise(acceptor0,proposer1)', '~promise(acceptor2,proposer0)']
744     : ---0---0-0-0----00-1---0---
744     : ['promise(acceptor1,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor2)', '~promise(acceptor0,proposer1)', '~promise(acceptor0,proposer2)', '~promise(acceptor2,proposer2)']
745     : ----0---00-0---0-0--10-----
745     : ['promise(acceptor1,proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor2)', '~promise(acceptor0,proposer0)', '~promise(acceptor0,proposer2)', '~promise(acceptor2,proposer0)']
746     : ---0----00-0----00--1-0----
746     : ['promise(acceptor1,proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor2)', '~promise(acceptor0,proposer1)', '~promise(acceptor0,proposer2)', '~promise(acceptor2,proposer1)']
747     : ---0----0-00---1--00--0----
747     : ['promise(acceptor0,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor1,proposer0)', '~promise(acceptor1,proposer1)', '~promise(acceptor2,proposer1)']
748     : ---0---0--00---1--0-0--0---
748     : ['promise(acceptor0,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor1,proposer0)', '~promise(acceptor1,proposer2)', '~promise(acceptor2,proposer2)']
749     : ----0---0-00----1-00-0-----
749     : ['promise(acceptor0,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor1,proposer0)', '~promise(acceptor1,proposer1)', '~promise(acceptor2,proposer0)']
750     : ----0-0---00----1--00--0---
750     : ['promise(acceptor0,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor1,proposer1)', '~promise(acceptor1,proposer2)', '~promise(acceptor2,proposer2)']
751     : -----0-0--00-----10-00-----
751     : ['promise(acceptor0,proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor1,proposer0)', '~promise(acceptor1,proposer2)', '~promise(acceptor2,proposer0)']
752     : -----00---00-----1-00-0----
752     : ['promise(acceptor0,proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor1,proposer1)', '~promise(acceptor1,proposer2)', '~promise(acceptor2,proposer1)']
num_forall :   0
num_exists :   0
num_literals : 0
quantified form : None
qcost : 0


=== Prime Orbit 46 =====================
size : 18
num_suborbits: 1
753 (*) : --00--0--00-----0--0-1-----
753     : ['promise(acceptor2,proposer0)', '~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~promise(acceptor0,proposer1)', '~promise(acceptor1,proposer1)']
754     : -0-0--0--00------0--01-----
754     : ['promise(acceptor2,proposer0)', '~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~promise(acceptor0,proposer2)', '~promise(acceptor1,proposer2)']
755     : --0-0--0-00----0--0---1----
755     : ['promise(acceptor2,proposer1)', '~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~promise(acceptor0,proposer0)', '~promise(acceptor1,proposer0)']
756     : 0---0--0-00------0--0-1----
756     : ['promise(acceptor2,proposer1)', '~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~promise(acceptor0,proposer2)', '~promise(acceptor1,proposer2)']
757     : -0---0--000----0--0----1---
757     : ['promise(acceptor2,proposer2)', '~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~promise(acceptor0,proposer0)', '~promise(acceptor1,proposer0)']
758     : 0----0--000-----0--0---1---
758     : ['promise(acceptor2,proposer2)', '~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~promise(acceptor0,proposer1)', '~promise(acceptor1,proposer1)']
759     : 0----00--0-0----0-1---0----
759     : ['promise(acceptor1,proposer0)', '~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor2)', '~promise(acceptor0,proposer1)', '~promise(acceptor2,proposer1)']
760     : 0---0-0--0-0-----01----0---
760     : ['promise(acceptor1,proposer0)', '~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor2)', '~promise(acceptor0,proposer2)', '~promise(acceptor2,proposer2)']
761     : -0---0-0-0-0---0---1-0-----
761     : ['promise(acceptor1,proposer1)', '~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor2)', '~promise(acceptor0,proposer0)', '~promise(acceptor2,proposer0)']
762     : -0-0---0-0-0-----0-1---0---
762     : ['promise(acceptor1,proposer1)', '~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor2)', '~promise(acceptor0,proposer2)', '~promise(acceptor2,proposer2)']
763     : --0-0---00-0---0----10-----
763     : ['promise(acceptor1,proposer2)', '~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor2)', '~promise(acceptor0,proposer0)', '~promise(acceptor2,proposer0)']
764     : --00----00-0----0---1-0----
764     : ['promise(acceptor1,proposer2)', '~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor2)', '~promise(acceptor0,proposer1)', '~promise(acceptor2,proposer1)']
765     : 0--0----0-00---1---0--0----
765     : ['promise(acceptor0,proposer0)', '~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor1,proposer1)', '~promise(acceptor2,proposer1)']
766     : 0--0---0--00---1----0--0---
766     : ['promise(acceptor0,proposer0)', '~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor1,proposer2)', '~promise(acceptor2,proposer2)']
767     : -0--0---0-00----1-0--0-----
767     : ['promise(acceptor0,proposer1)', '~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor1,proposer0)', '~promise(acceptor2,proposer0)']
768     : -0--0-0---00----1---0--0---
768     : ['promise(acceptor0,proposer1)', '~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor1,proposer2)', '~promise(acceptor2,proposer2)']
769     : --0--0-0--00-----10--0-----
769     : ['promise(acceptor0,proposer2)', '~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor1,proposer0)', '~promise(acceptor2,proposer0)']
770     : --0--00---00-----1-0--0----
770     : ['promise(acceptor0,proposer2)', '~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor1,proposer1)', '~promise(acceptor2,proposer1)']
num_forall :   0
num_exists :   0
num_literals : 0
quantified form : None
qcost : 0


=== Prime Orbit 47 =====================
size : 18
num_suborbits: 1
771 (*) : 0----0--0000---------0---0-
771     : ['~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor2,proposer0)', '~start(proposer1)']
772     : 0---0--0-000---------0----0
772     : ['~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor2,proposer0)', '~start(proposer2)']
773     : -0---0--0000----------0-0--
773     : ['~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor2,proposer1)', '~start(proposer0)']
774     : -0-0--0--000----------0---0
774     : ['~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor2,proposer1)', '~start(proposer2)']
775     : --0-0--0-000-----------00--
775     : ['~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor2,proposer2)', '~start(proposer0)']
776     : --00--0--000-----------0-0-
776     : ['~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor2,proposer2)', '~start(proposer1)']
777     : --00----0000------0------0-
777     : ['~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor1,proposer0)', '~start(proposer1)']
778     : -0-0---0-000------0-------0
778     : ['~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor1,proposer0)', '~start(proposer2)']
779     : --0-0---0000-------0----0--
779     : ['~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor1,proposer1)', '~start(proposer0)']
780     : 0---0-0--000-------0------0
780     : ['~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor1,proposer1)', '~start(proposer2)']
781     : -0---0-0-000--------0---0--
781     : ['~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor1,proposer2)', '~start(proposer0)']
782     : 0----00--000--------0----0-
782     : ['~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor1,proposer2)', '~start(proposer1)']
783     : --0--00--000---0---------0-
783     : ['~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor0,proposer0)', '~start(proposer1)']
784     : -0--0-0--000---0----------0
784     : ['~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor0,proposer0)', '~start(proposer2)']
785     : --0--0-0-000----0-------0--
785     : ['~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor0,proposer1)', '~start(proposer0)']
786     : 0--0---0-000----0---------0
786     : ['~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor0,proposer1)', '~start(proposer2)']
787     : -0--0---0000-----0------0--
787     : ['~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor0,proposer2)', '~start(proposer0)']
788     : 0--0----0000-----0-------0-
788     : ['~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor0,proposer2)', '~start(proposer1)']
num_forall :   0
num_exists :   0
num_literals : 0
quantified form : None
qcost : 0


=== Prime Orbit 48 =====================
size : 18
num_suborbits: 1
789 (*) : --00-----000------0----0-0-
789     : ['~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor1,proposer0)', '~promise(acceptor2,proposer2)', '~start(proposer1)']
790     : -0-0-----000------0---0---0
790     : ['~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor1,proposer0)', '~promise(acceptor2,proposer1)', '~start(proposer2)']
791     : --0-0----000-------0---00--
791     : ['~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor1,proposer1)', '~promise(acceptor2,proposer2)', '~start(proposer0)']
792     : 0---0----000-------0-0----0
792     : ['~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor1,proposer1)', '~promise(acceptor2,proposer0)', '~start(proposer2)']
793     : -0---0---000--------0-0-0--
793     : ['~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor1,proposer2)', '~promise(acceptor2,proposer1)', '~start(proposer0)']
794     : 0----0---000--------00---0-
794     : ['~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor1,proposer2)', '~promise(acceptor2,proposer0)', '~start(proposer1)']
795     : --0---0--000---0-------0-0-
795     : ['~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor0,proposer0)', '~promise(acceptor2,proposer2)', '~start(proposer1)']
796     : -0----0--000---0------0---0
796     : ['~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor0,proposer0)', '~promise(acceptor2,proposer1)', '~start(proposer2)']
797     : --0----0-000----0------00--
797     : ['~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor0,proposer1)', '~promise(acceptor2,proposer2)', '~start(proposer0)']
798     : 0------0-000----0----0----0
798     : ['~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor0,proposer1)', '~promise(acceptor2,proposer0)', '~start(proposer2)']
799     : -0------0000-----0----0-0--
799     : ['~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor0,proposer2)', '~promise(acceptor2,proposer1)', '~start(proposer0)']
800     : 0-------0000-----0---0---0-
800     : ['~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor0,proposer2)', '~promise(acceptor2,proposer0)', '~start(proposer1)']
801     : -----00--000---0----0----0-
801     : ['~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor0,proposer0)', '~promise(acceptor1,proposer2)', '~start(proposer1)']
802     : ----0-0--000---0---0------0
802     : ['~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor0,proposer0)', '~promise(acceptor1,proposer1)', '~start(proposer2)']
803     : -----0-0-000----0---0---0--
803     : ['~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor0,proposer1)', '~promise(acceptor1,proposer2)', '~start(proposer0)']
804     : ---0---0-000----0-0-------0
804     : ['~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor0,proposer1)', '~promise(acceptor1,proposer0)', '~start(proposer2)']
805     : ----0---0000-----0-0----0--
805     : ['~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor0,proposer2)', '~promise(acceptor1,proposer1)', '~start(proposer0)']
806     : ---0----0000-----00------0-
806     : ['~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor0,proposer2)', '~promise(acceptor1,proposer0)', '~start(proposer1)']
num_forall :   0
num_exists :   0
num_literals : 0
quantified form : None
qcost : 0


=== Prime Orbit 49 =====================
size : 3
num_suborbits: 1
807 (*) : 0-00-00-0000-------------0-
807     : ['~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~start(proposer1)']
808     : 00-00-00-000--------------0
808     : ['~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~start(proposer2)']
809     : -00-00-00000------------0--
809     : ['~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~start(proposer0)']
num_forall :   0
num_exists :   0
num_literals : 0
quantified form : None
qcost : 0


=== Prime Orbit 50 =====================
size : 18
num_suborbits: 1
810 (*) : ---0---0-000----000-0--0---
810     : ['~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor0,proposer1)', '~promise(acceptor0,proposer2)', '~promise(acceptor1,proposer0)', '~promise(acceptor1,proposer2)', '~promise(acceptor2,proposer2)']
811     : ---0----0000----0000--0----
811     : ['~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor0,proposer1)', '~promise(acceptor0,proposer2)', '~promise(acceptor1,proposer0)', '~promise(acceptor1,proposer1)', '~promise(acceptor2,proposer1)']
812     : ----0-0--000---0-0-00--0---
812     : ['~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor0,proposer0)', '~promise(acceptor0,proposer2)', '~promise(acceptor1,proposer1)', '~promise(acceptor1,proposer2)', '~promise(acceptor2,proposer2)']
813     : ----0---0000---0-000-0-----
813     : ['~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor0,proposer0)', '~promise(acceptor0,proposer2)', '~promise(acceptor1,proposer0)', '~promise(acceptor1,proposer1)', '~promise(acceptor2,proposer0)']
814     : -----00--000---00--00-0----
814     : ['~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor0,proposer0)', '~promise(acceptor0,proposer1)', '~promise(acceptor1,proposer1)', '~promise(acceptor1,proposer2)', '~promise(acceptor2,proposer1)']
815     : -----0-0-000---00-0-00-----
815     : ['~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor0,proposer0)', '~promise(acceptor0,proposer1)', '~promise(acceptor1,proposer0)', '~promise(acceptor1,proposer2)', '~promise(acceptor2,proposer0)']
816     : 0------0-000----00--00-0---
816     : ['~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor0,proposer1)', '~promise(acceptor0,proposer2)', '~promise(acceptor1,proposer2)', '~promise(acceptor2,proposer0)', '~promise(acceptor2,proposer2)']
817     : 0-------0000----00-0-00----
817     : ['~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor0,proposer1)', '~promise(acceptor0,proposer2)', '~promise(acceptor1,proposer1)', '~promise(acceptor2,proposer0)', '~promise(acceptor2,proposer1)']
818     : -0----0--000---0-0--0-00---
818     : ['~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor0,proposer0)', '~promise(acceptor0,proposer2)', '~promise(acceptor1,proposer2)', '~promise(acceptor2,proposer1)', '~promise(acceptor2,proposer2)']
819     : -0------0000---0-00--00----
819     : ['~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor0,proposer0)', '~promise(acceptor0,proposer2)', '~promise(acceptor1,proposer0)', '~promise(acceptor2,proposer0)', '~promise(acceptor2,proposer1)']
820     : --0---0--000---00--0--00---
820     : ['~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor0,proposer0)', '~promise(acceptor0,proposer1)', '~promise(acceptor1,proposer1)', '~promise(acceptor2,proposer1)', '~promise(acceptor2,proposer2)']
821     : --0----0-000---00-0--0-0---
821     : ['~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor0,proposer0)', '~promise(acceptor0,proposer1)', '~promise(acceptor1,proposer0)', '~promise(acceptor2,proposer0)', '~promise(acceptor2,proposer2)']
822     : 0---0----000-----0-000-0---
822     : ['~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor0,proposer2)', '~promise(acceptor1,proposer1)', '~promise(acceptor1,proposer2)', '~promise(acceptor2,proposer0)', '~promise(acceptor2,proposer2)']
823     : 0----0---000----0--0000----
823     : ['~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor0,proposer1)', '~promise(acceptor1,proposer1)', '~promise(acceptor1,proposer2)', '~promise(acceptor2,proposer0)', '~promise(acceptor2,proposer1)']
824     : -0-0-----000-----00-0-00---
824     : ['~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor0,proposer2)', '~promise(acceptor1,proposer0)', '~promise(acceptor1,proposer2)', '~promise(acceptor2,proposer1)', '~promise(acceptor2,proposer2)']
825     : -0---0---000---0--0-000----
825     : ['~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor0,proposer0)', '~promise(acceptor1,proposer0)', '~promise(acceptor1,proposer2)', '~promise(acceptor2,proposer0)', '~promise(acceptor2,proposer1)']
826     : --00-----000----0-00--00---
826     : ['~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor0,proposer1)', '~promise(acceptor1,proposer0)', '~promise(acceptor1,proposer1)', '~promise(acceptor2,proposer1)', '~promise(acceptor2,proposer2)']
827     : --0-0----000---0--00-0-0---
827     : ['~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor0,proposer0)', '~promise(acceptor1,proposer0)', '~promise(acceptor1,proposer1)', '~promise(acceptor2,proposer0)', '~promise(acceptor2,proposer2)']
num_forall :   0
num_exists :   0
num_literals : 0
quantified form : None
qcost : 0


=== Prime Orbit 51 =====================
size : 18
num_suborbits: 1
828 (*) : -0-0---0-000-----00-0--0---
828     : ['~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor0,proposer2)', '~promise(acceptor1,proposer0)', '~promise(acceptor1,proposer2)', '~promise(acceptor2,proposer2)']
829     : --00----0000----0-00--0----
829     : ['~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor0,proposer1)', '~promise(acceptor1,proposer0)', '~promise(acceptor1,proposer1)', '~promise(acceptor2,proposer1)']
830     : 0---0-0--000-----0-00--0---
830     : ['~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor0,proposer2)', '~promise(acceptor1,proposer1)', '~promise(acceptor1,proposer2)', '~promise(acceptor2,proposer2)']
831     : --0-0---0000---0--00-0-----
831     : ['~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor0,proposer0)', '~promise(acceptor1,proposer0)', '~promise(acceptor1,proposer1)', '~promise(acceptor2,proposer0)']
832     : 0----00--000----0--00-0----
832     : ['~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor0,proposer1)', '~promise(acceptor1,proposer1)', '~promise(acceptor1,proposer2)', '~promise(acceptor2,proposer1)']
833     : -0---0-0-000---0--0-00-----
833     : ['~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor0,proposer0)', '~promise(acceptor1,proposer0)', '~promise(acceptor1,proposer2)', '~promise(acceptor2,proposer0)']
834     : 0---0--0-000-----0--00-0---
834     : ['~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor0,proposer2)', '~promise(acceptor1,proposer2)', '~promise(acceptor2,proposer0)', '~promise(acceptor2,proposer2)']
835     : 0----0--0000----0--0-00----
835     : ['~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor0,proposer1)', '~promise(acceptor1,proposer1)', '~promise(acceptor2,proposer0)', '~promise(acceptor2,proposer1)']
836     : -0-0--0--000-----0--0-00---
836     : ['~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor0,proposer2)', '~promise(acceptor1,proposer2)', '~promise(acceptor2,proposer1)', '~promise(acceptor2,proposer2)']
837     : -0---0--0000---0--0--00----
837     : ['~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor0,proposer0)', '~promise(acceptor1,proposer0)', '~promise(acceptor2,proposer0)', '~promise(acceptor2,proposer1)']
838     : --00--0--000----0--0--00---
838     : ['~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor0,proposer1)', '~promise(acceptor1,proposer1)', '~promise(acceptor2,proposer1)', '~promise(acceptor2,proposer2)']
839     : --0-0--0-000---0--0--0-0---
839     : ['~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor0,proposer0)', '~promise(acceptor1,proposer0)', '~promise(acceptor2,proposer0)', '~promise(acceptor2,proposer2)']
840     : -0--0-0--000---0-0--0--0---
840     : ['~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor0,proposer0)', '~promise(acceptor0,proposer2)', '~promise(acceptor1,proposer2)', '~promise(acceptor2,proposer2)']
841     : --0--00--000---00--0--0----
841     : ['~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor0,proposer0)', '~promise(acceptor0,proposer1)', '~promise(acceptor1,proposer1)', '~promise(acceptor2,proposer1)']
842     : 0--0---0-000----00--0--0---
842     : ['~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor0,proposer1)', '~promise(acceptor0,proposer2)', '~promise(acceptor1,proposer2)', '~promise(acceptor2,proposer2)']
843     : --0--0-0-000---00-0--0-----
843     : ['~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor0,proposer0)', '~promise(acceptor0,proposer1)', '~promise(acceptor1,proposer0)', '~promise(acceptor2,proposer0)']
844     : 0--0----0000----00-0--0----
844     : ['~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor0,proposer1)', '~promise(acceptor0,proposer2)', '~promise(acceptor1,proposer1)', '~promise(acceptor2,proposer1)']
845     : -0--0---0000---0-00--0-----
845     : ['~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor0,proposer0)', '~promise(acceptor0,proposer2)', '~promise(acceptor1,proposer0)', '~promise(acceptor2,proposer0)']
num_forall :   0
num_exists :   0
num_literals : 0
quantified form : None
qcost : 0


=== Prime Orbit 52 =====================
size : 3
num_suborbits: 1
846 (*) : 0-00-00-0000----0--0--0----
846     : ['~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor0,proposer1)', '~promise(acceptor1,proposer1)', '~promise(acceptor2,proposer1)']
847     : 00-00-00-000-----0--0--0---
847     : ['~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor0,proposer2)', '~promise(acceptor1,proposer2)', '~promise(acceptor2,proposer2)']
848     : -00-00-00000---0--0--0-----
848     : ['~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor0,proposer0)', '~promise(acceptor1,proposer0)', '~promise(acceptor2,proposer0)']
num_forall :   0
num_exists :   0
num_literals : 0
quantified form : None
qcost : 0



[PRIME NOTE]: number of orbits after merging: 53

[PRIME NOTE]: number of orbits before merging: 55

[PRIME NOTE]: number of primes: 849

[QRM NOTE]: Time elapsed since start: 6.954 seconds

[QRM NOTE]: Time elapsed since last: 0.384 seconds

[QRM NOTE]: Peak memory: 2522878 bytes


=========================================================================================================

	[RED]: PRIME REDUCTION on [ivybench/sym_quorum/ivy/simple-election: acceptor=3,proposer=3]

=========================================================================================================

definition primes: {2, 34, 4, 35, 6, 36, 11, 12, 44, 45, 46, 50, 51, 20, 52, 25}


New level: 0
 pending : [0, 1, 3, 5, 7, 8, 9, 10, 13, 14, 15, 16, 17, 18, 19, 21, 22, 23, 24, 26, 27, 28, 29, 30, 31, 32, 33, 37, 38, 39, 40, 41, 42, 43, 47, 48, 49]
 solution : []


Before reduction : 
 pending  : [0, 1, 3, 5, 7, 8, 9, 10, 13, 14, 15, 16, 17, 18, 19, 21, 22, 23, 24, 26, 27, 28, 29, 30, 31, 32, 33, 37, 38, 39, 40, 41, 42, 43, 47, 48, 49]
 solution : []

Essensial at level 0 : {9}

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, 0), (1, 0), (2, -1), (3, 1048576), (4, -1), (5, 1048576), (6, -1), (7, 134217728), (8, 17179869184), (9, -1), (10, 17179869184), (11, -1), (12, -1), (13, 2147483648), (14, 16777216), (15, 8388608), (16, 524288), (17, 67108864), (18, 33554432), (19, 1114112), (20, -1), (21, 1073741824), (22, 262144), (23, 134217728), (24, 1073741824), (25, -1), (26, 4294967296), (27, 4194304), (28, 4294967296), (29, 1048576), (30, 4194304), (31, 16384), (32, 2147483648), (33, 32768), (34, -1), (35, -1), (36, -1), (37, 16384), (38, 268435456), (39, 4194304), (40, 1073741824), (41, 134217728), (42, 524288), (43, 524288), (44, -1), (45, -1), (46, -1), (47, 67108864), (48, 16777216), (49, 67108864), (50, -1), (51, -1), (52, -1)]

Covered at level 0 : {0, 1}

After reduction : 
 pending  : [3, 5, 7, 8, 10, 13, 14, 15, 16, 17, 18, 19, 21, 22, 23, 24, 26, 27, 28, 29, 30, 31, 32, 33, 37, 38, 39, 40, 41, 42, 43, 47, 48, 49]
 solution : [9]


Before reduction : 
 pending  : [3, 5, 7, 8, 10, 13, 14, 15, 16, 17, 18, 19, 21, 22, 23, 24, 26, 27, 28, 29, 30, 31, 32, 33, 37, 38, 39, 40, 41, 42, 43, 47, 48, 49]
 solution : [9]

Essensial at level 0 : set()

Before removed
 coverage : [(0, 0), (1, 0), (2, -1), (3, 1048576), (4, -1), (5, 1048576), (6, -1), (7, 134217728), (8, 17179869184), (9, -1), (10, 17179869184), (11, -1), (12, -1), (13, 2147483648), (14, 16777216), (15, 8388608), (16, 524288), (17, 67108864), (18, 33554432), (19, 1114112), (20, -1), (21, 1073741824), (22, 262144), (23, 134217728), (24, 1073741824), (25, -1), (26, 4294967296), (27, 4194304), (28, 4294967296), (29, 1048576), (30, 4194304), (31, 16384), (32, 2147483648), (33, 32768), (34, -1), (35, -1), (36, -1), (37, 16384), (38, 268435456), (39, 4194304), (40, 1073741824), (41, 134217728), (42, 524288), (43, 524288), (44, -1), (45, -1), (46, -1), (47, 67108864), (48, 16777216), (49, 67108864), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 1048576), (4, -1), (5, 1048576), (6, -1), (7, 134217728), (8, 17179869184), (9, -1), (10, 17179869184), (11, -1), (12, -1), (13, 2147483648), (14, 16777216), (15, 8388608), (16, 524288), (17, 67108864), (18, 33554432), (19, 1114112), (20, -1), (21, 1073741824), (22, 262144), (23, 134217728), (24, 1073741824), (25, -1), (26, 4294967296), (27, 4194304), (28, 4294967296), (29, 1048576), (30, 4194304), (31, 16384), (32, 2147483648), (33, 32768), (34, -1), (35, -1), (36, -1), (37, 16384), (38, 268435456), (39, 4194304), (40, 1073741824), (41, 134217728), (42, 524288), (43, 524288), (44, -1), (45, -1), (46, -1), (47, 67108864), (48, 16777216), (49, 67108864), (50, -1), (51, -1), (52, -1)]

Covered at level 0 : set()

After reduction : 
 pending  : [3, 5, 7, 8, 10, 13, 14, 15, 16, 17, 18, 19, 21, 22, 23, 24, 26, 27, 28, 29, 30, 31, 32, 33, 37, 38, 39, 40, 41, 42, 43, 47, 48, 49]
 solution : [9]

[QRM NOTE]: Time elapsed since start: 7.062 seconds

[QRM NOTE]: Time elapsed since last: 0.108 seconds

[QRM NOTE]: Peak memory: 1297871 bytes


=============================================================================================================

	[QI]: Quantifier Inference on [ivybench/sym_quorum/ivy/simple-election: acceptor=3,proposer=3]

=============================================================================================================


---------- quantifier_inference ----------


=== Prime Orbit 9 =====================
size : 9
num_suborbits: 1
147 (*) : ---------------------1-1---
147     : ['promise(acceptor2,proposer0)', 'promise(acceptor2,proposer2)']
148     : ---------------------11----
148     : ['promise(acceptor2,proposer0)', 'promise(acceptor2,proposer1)']
149     : ----------------------11---
149     : ['promise(acceptor2,proposer1)', 'promise(acceptor2,proposer2)']
150     : ------------------1-1------
150     : ['promise(acceptor1,proposer0)', 'promise(acceptor1,proposer2)']
151     : ------------------11-------
151     : ['promise(acceptor1,proposer0)', 'promise(acceptor1,proposer1)']
152     : -------------------11------
152     : ['promise(acceptor1,proposer1)', 'promise(acceptor1,proposer2)']
153     : ---------------1-1---------
153     : ['promise(acceptor0,proposer0)', 'promise(acceptor0,proposer2)']
154     : ---------------11----------
154     : ['promise(acceptor0,proposer0)', 'promise(acceptor0,proposer1)']
155     : ----------------11---------
155     : ['promise(acceptor0,proposer1)', 'promise(acceptor0,proposer2)']
num_forall :   0
num_exists :   0
num_literals : 0
quantified form : None
qcost : 0




---------- QPrime ----------


---------- ConstArgBinding ----------

terms: ['promise(acceptor2,proposer0)', 'promise(acceptor2,proposer2)']

sign_func_name2args: {'0$promise': [(Const('acceptor2', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Const('proposer0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))), (Const('acceptor2', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Const('proposer2', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))))]}

const2sigs: {Const('acceptor2', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))): [acceptor$0$promise$0$0, acceptor$0$promise$0$1], Const('proposer0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))): [proposer$0$promise$1$0], Const('proposer2', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))): [proposer$0$promise$1$1]}

sig2const: {'acceptor$0$promise$0$0': Const('acceptor2', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), 'proposer$0$promise$1$0': Const('proposer0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))), 'acceptor$0$promise$0$1': Const('acceptor2', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), 'proposer$0$promise$1$1': Const('proposer2', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))}


---------- ArgPartition ----------

sort2class_sigs: {EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')): [acceptor$0$promise$0$0; acceptor$0$promise$0$1], EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')): [proposer$0$promise$1$0, proposer$0$promise$1$1]}

sort2part_sig: {EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')): acceptor$0$promise$0$0; acceptor$0$promise$0$1, EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')): proposer$0$promise$1$0 | proposer$0$promise$1$1}

part_sig: ('acceptor$0$promise$0$0; acceptor$0$promise$0$1', 'proposer$0$promise$1$0 | proposer$0$promise$1$1')


---------- SigGenerator ----------

terms:  ['promise(acceptor2,proposer0)', 'promise(acceptor2,proposer2)']

func_name2symbol:  {'promise': Const('promise', FunctionSort(EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')), EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')), BooleanSort()))}

func_name2args_sort:  {'promise': (EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')), EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))}

sign_func_name2count:  {'0$promise': 2}


---------- ProductArgPartition ----------

sort2class_sigs: {EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')): [acceptor$0$promise$0$0; acceptor$0$promise$0$1], EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')): [proposer$0$promise$1$0, proposer$0$promise$1$1]}

sort2part_sig: {EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')): acceptor$0$promise$0$0; acceptor$0$promise$0$1, EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')): proposer$0$promise$1$0 | proposer$0$promise$1$1}

	sort: acceptor

	identical_classes: {'acceptor$0$promise$0; acceptor$0$promise$0': [acceptor$0$promise$0$0; acceptor$0$promise$0$1]}

	identical_single_classes: {'acceptor$0$promise$0; acceptor$0$promise$0': acceptor$0$promise$0$0; acceptor$0$promise$0$1}

	identical_multi_classes: {}

	sort: proposer

	identical_classes: {'proposer$0$promise$1': [proposer$0$promise$1$0, proposer$0$promise$1$1]}

	identical_single_classes: {}

	identical_multi_classes: {'proposer$0$promise$1': [proposer$0$promise$1$0, proposer$0$promise$1$1]}


---------- QInference: _set_sort_to_quantifier_mode ----------

quantifier mode: acceptor: QuantifierMode.forall

quantifier mode: proposer: QuantifierMode.forall


---------- QInference: _set_constraint_mode ----------

constraint mode: ConstraintMode.no_merge


---------- QFormula: _set_qvars ----------

forall_qvars: {Var('ACCEPTOR0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Var('PROPOSER0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))), Var('PROPOSER1', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))}

exists_qvars: set()


---------- QFormula: _set_signed_func_name_to_args ----------

signed_func_name2args: {'0$promise': [[Var('ACCEPTOR0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Var('PROPOSER0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))], [Var('ACCEPTOR0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Var('PROPOSER1', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))]]}


---------- QFormula: _set_qterms ----------

qterms: ['promise(ACCEPTOR0,PROPOSER0)', 'promise(ACCEPTOR0,PROPOSER1)']


---------- QFormula: get_qclause ----------

qclause: forall ACCEPTOR0,PROPOSER0,PROPOSER1. ~promise(ACCEPTOR0,PROPOSER0) | ~promise(ACCEPTOR0,PROPOSER1) | PROPOSER0 = PROPOSER1


=== Prime Orbit 3 =====================
size : 18
num_suborbits: 1
81 (*) : ------1-------1------------
81     : ['chosenAt(quorum__acceptor1_acceptor2,proposer0)', 'leader(proposer2)']
82     : ------1------1-------------
82     : ['chosenAt(quorum__acceptor1_acceptor2,proposer0)', 'leader(proposer1)']
83     : -------1------1------------
83     : ['chosenAt(quorum__acceptor1_acceptor2,proposer1)', 'leader(proposer2)']
84     : -------1----1--------------
84     : ['chosenAt(quorum__acceptor1_acceptor2,proposer1)', 'leader(proposer0)']
85     : --------1----1-------------
85     : ['chosenAt(quorum__acceptor1_acceptor2,proposer2)', 'leader(proposer1)']
86     : --------1---1--------------
86     : ['chosenAt(quorum__acceptor1_acceptor2,proposer2)', 'leader(proposer0)']
87     : ---1----------1------------
87     : ['chosenAt(quorum__acceptor0_acceptor2,proposer0)', 'leader(proposer2)']
88     : ---1---------1-------------
88     : ['chosenAt(quorum__acceptor0_acceptor2,proposer0)', 'leader(proposer1)']
89     : ----1---------1------------
89     : ['chosenAt(quorum__acceptor0_acceptor2,proposer1)', 'leader(proposer2)']
90     : ----1-------1--------------
90     : ['chosenAt(quorum__acceptor0_acceptor2,proposer1)', 'leader(proposer0)']
91     : -----1-------1-------------
91     : ['chosenAt(quorum__acceptor0_acceptor2,proposer2)', 'leader(proposer1)']
92     : -----1------1--------------
92     : ['chosenAt(quorum__acceptor0_acceptor2,proposer2)', 'leader(proposer0)']
93     : 1-------------1------------
93     : ['chosenAt(quorum__acceptor0_acceptor1,proposer0)', 'leader(proposer2)']
94     : 1------------1-------------
94     : ['chosenAt(quorum__acceptor0_acceptor1,proposer0)', 'leader(proposer1)']
95     : -1------------1------------
95     : ['chosenAt(quorum__acceptor0_acceptor1,proposer1)', 'leader(proposer2)']
96     : -1----------1--------------
96     : ['chosenAt(quorum__acceptor0_acceptor1,proposer1)', 'leader(proposer0)']
97     : --1----------1-------------
97     : ['chosenAt(quorum__acceptor0_acceptor1,proposer2)', 'leader(proposer1)']
98     : --1---------1--------------
98     : ['chosenAt(quorum__acceptor0_acceptor1,proposer2)', 'leader(proposer0)']
num_forall :   0
num_exists :   0
num_literals : 0
quantified form : None
qcost : 0




---------- QPrime ----------


---------- ConstArgBinding ----------

terms: ['chosenAt(quorum__acceptor1_acceptor2,proposer0)', 'leader(proposer2)']

sign_func_name2args: {'0$chosenAt': [(Const('quorum__acceptor1_acceptor2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), Const('proposer0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))))], '0$leader': [(Const('proposer2', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))),)]}

const2sigs: {Const('quorum__acceptor1_acceptor2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))): [quorum$0$chosenAt$0$0], Const('proposer0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))): [proposer$0$chosenAt$1$0], Const('proposer2', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))): [proposer$0$leader$0$0]}

sig2const: {'quorum$0$chosenAt$0$0': Const('quorum__acceptor1_acceptor2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), 'proposer$0$chosenAt$1$0': Const('proposer0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))), 'proposer$0$leader$0$0': Const('proposer2', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))}


---------- ArgPartition ----------

sort2class_sigs: {EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')): [quorum$0$chosenAt$0$0], EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')): [proposer$0$chosenAt$1$0, proposer$0$leader$0$0]}

sort2part_sig: {EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')): quorum$0$chosenAt$0$0, EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')): proposer$0$chosenAt$1$0 | proposer$0$leader$0$0}

part_sig: ('proposer$0$chosenAt$1$0 | proposer$0$leader$0$0', 'quorum$0$chosenAt$0$0')


---------- SigGenerator ----------

terms:  ['chosenAt(quorum__acceptor1_acceptor2,proposer0)', 'leader(proposer2)']

func_name2symbol:  {'chosenAt': Const('chosenAt', FunctionSort(EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')), EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')), BooleanSort())), 'leader': Const('leader', FunctionSort(EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')), BooleanSort()))}

func_name2args_sort:  {'chosenAt': (EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')), EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))), 'leader': (EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')),)}

sign_func_name2count:  {'0$chosenAt': 1, '0$leader': 1}


---------- ProductArgPartition ----------

sort2class_sigs: {EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')): [quorum$0$chosenAt$0$0], EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')): [proposer$0$chosenAt$1$0, proposer$0$leader$0$0]}

sort2part_sig: {EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')): quorum$0$chosenAt$0$0, EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')): proposer$0$chosenAt$1$0 | proposer$0$leader$0$0}

	sort: quorum

	identical_classes: {'quorum$0$chosenAt$0': [quorum$0$chosenAt$0$0]}

	identical_single_classes: {'quorum$0$chosenAt$0': quorum$0$chosenAt$0$0}

	identical_multi_classes: {}

	sort: proposer

	identical_classes: {'proposer$0$chosenAt$1': [proposer$0$chosenAt$1$0], 'proposer$0$leader$0': [proposer$0$leader$0$0]}

	identical_single_classes: {'proposer$0$chosenAt$1': proposer$0$chosenAt$1$0, 'proposer$0$leader$0': proposer$0$leader$0$0}

	identical_multi_classes: {}


---------- QInference: _set_sort_to_quantifier_mode ----------

quantifier mode: quorum: QuantifierMode.forall

quantifier mode: proposer: QuantifierMode.forall


---------- QInference: _set_constraint_mode ----------

constraint mode: ConstraintMode.no_merge


---------- QFormula: _set_qvars ----------

forall_qvars: {Var('PROPOSER0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))), Var('PROPOSER1', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))), Var('QUORUM0', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')))}

exists_qvars: set()


---------- QFormula: _set_signed_func_name_to_args ----------

signed_func_name2args: {'0$chosenAt': [[Var('QUORUM0', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), Var('PROPOSER0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))]], '0$leader': [[Var('PROPOSER1', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))]]}


---------- QFormula: _set_qterms ----------

qterms: ['chosenAt(QUORUM0,PROPOSER0)', 'leader(PROPOSER1)']


---------- QFormula: get_qclause ----------

qclause: forall QUORUM0,PROPOSER0,PROPOSER1. ~chosenAt(QUORUM0,PROPOSER0) | ~leader(PROPOSER1) | PROPOSER0 = PROPOSER1


=== Prime Orbit 5 =====================
size : 9
num_suborbits: 1
117 (*) : ------1-----------------0--
117     : ['chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~start(proposer0)']
118     : -------1-----------------0-
118     : ['chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~start(proposer1)']
119     : --------1-----------------0
119     : ['chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~start(proposer2)']
120     : ---1--------------------0--
120     : ['chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~start(proposer0)']
121     : ----1--------------------0-
121     : ['chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~start(proposer1)']
122     : -----1--------------------0
122     : ['chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~start(proposer2)']
123     : 1-----------------------0--
123     : ['chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~start(proposer0)']
124     : -1-----------------------0-
124     : ['chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~start(proposer1)']
125     : --1-----------------------0
125     : ['chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~start(proposer2)']
num_forall :   0
num_exists :   0
num_literals : 0
quantified form : None
qcost : 0




---------- QPrime ----------


---------- ConstArgBinding ----------

terms: ['chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~start(proposer0)']

sign_func_name2args: {'0$chosenAt': [(Const('quorum__acceptor1_acceptor2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), Const('proposer0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))))], '1$start': [(Const('proposer0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))),)]}

const2sigs: {Const('quorum__acceptor1_acceptor2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))): [quorum$0$chosenAt$0$0], Const('proposer0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))): [proposer$0$chosenAt$1$0, proposer$1$start$0$0]}

sig2const: {'quorum$0$chosenAt$0$0': Const('quorum__acceptor1_acceptor2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), 'proposer$0$chosenAt$1$0': Const('proposer0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))), 'proposer$1$start$0$0': Const('proposer0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))}


---------- ArgPartition ----------

sort2class_sigs: {EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')): [quorum$0$chosenAt$0$0], EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')): [proposer$0$chosenAt$1$0; proposer$1$start$0$0]}

sort2part_sig: {EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')): quorum$0$chosenAt$0$0, EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')): proposer$0$chosenAt$1$0; proposer$1$start$0$0}

part_sig: ('proposer$0$chosenAt$1$0; proposer$1$start$0$0', 'quorum$0$chosenAt$0$0')


---------- SigGenerator ----------

terms:  ['chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~start(proposer0)']

func_name2symbol:  {'chosenAt': Const('chosenAt', FunctionSort(EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')), EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')), BooleanSort())), 'start': Const('start', FunctionSort(EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')), BooleanSort()))}

func_name2args_sort:  {'chosenAt': (EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')), EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))), 'start': (EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')),)}

sign_func_name2count:  {'0$chosenAt': 1, '1$start': 1}


---------- ProductArgPartition ----------

sort2class_sigs: {EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')): [quorum$0$chosenAt$0$0], EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')): [proposer$0$chosenAt$1$0; proposer$1$start$0$0]}

sort2part_sig: {EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')): quorum$0$chosenAt$0$0, EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')): proposer$0$chosenAt$1$0; proposer$1$start$0$0}

	sort: quorum

	identical_classes: {'quorum$0$chosenAt$0': [quorum$0$chosenAt$0$0]}

	identical_single_classes: {'quorum$0$chosenAt$0': quorum$0$chosenAt$0$0}

	identical_multi_classes: {}

	sort: proposer

	identical_classes: {'proposer$0$chosenAt$1; proposer$1$start$0': [proposer$0$chosenAt$1$0; proposer$1$start$0$0]}

	identical_single_classes: {'proposer$0$chosenAt$1; proposer$1$start$0': proposer$0$chosenAt$1$0; proposer$1$start$0$0}

	identical_multi_classes: {}


---------- QInference: _set_sort_to_quantifier_mode ----------

quantifier mode: quorum: QuantifierMode.forall

quantifier mode: proposer: QuantifierMode.forall


---------- QInference: _set_constraint_mode ----------

constraint mode: ConstraintMode.no_merge


---------- QFormula: _set_qvars ----------

forall_qvars: {Var('PROPOSER0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))), Var('QUORUM0', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')))}

exists_qvars: set()


---------- QFormula: _set_signed_func_name_to_args ----------

signed_func_name2args: {'0$chosenAt': [[Var('QUORUM0', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), Var('PROPOSER0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))]], '1$start': [[Var('PROPOSER0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))]]}


---------- QFormula: _set_qterms ----------

qterms: ['chosenAt(QUORUM0,PROPOSER0)', '~start(PROPOSER0)']


---------- QFormula: get_qclause ----------

qclause: forall PROPOSER0,QUORUM0. ~chosenAt(QUORUM0,PROPOSER0) | start(PROPOSER0)


=== Prime Orbit 7 =====================
size : 9
num_suborbits: 1
135 (*) : ------------------1-----0--
135     : ['promise(acceptor1,proposer0)', '~start(proposer0)']
136     : -------------------1-----0-
136     : ['promise(acceptor1,proposer1)', '~start(proposer1)']
137     : --------------------1-----0
137     : ['promise(acceptor1,proposer2)', '~start(proposer2)']
138     : ---------------------1--0--
138     : ['promise(acceptor2,proposer0)', '~start(proposer0)']
139     : ----------------------1--0-
139     : ['promise(acceptor2,proposer1)', '~start(proposer1)']
140     : -----------------------1--0
140     : ['promise(acceptor2,proposer2)', '~start(proposer2)']
141     : ---------------1--------0--
141     : ['promise(acceptor0,proposer0)', '~start(proposer0)']
142     : ----------------1--------0-
142     : ['promise(acceptor0,proposer1)', '~start(proposer1)']
143     : -----------------1--------0
143     : ['promise(acceptor0,proposer2)', '~start(proposer2)']
num_forall :   0
num_exists :   0
num_literals : 0
quantified form : None
qcost : 0




---------- QPrime ----------


---------- ConstArgBinding ----------

terms: ['promise(acceptor1,proposer0)', '~start(proposer0)']

sign_func_name2args: {'0$promise': [(Const('acceptor1', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Const('proposer0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))))], '1$start': [(Const('proposer0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))),)]}

const2sigs: {Const('acceptor1', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))): [acceptor$0$promise$0$0], Const('proposer0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))): [proposer$0$promise$1$0, proposer$1$start$0$0]}

sig2const: {'acceptor$0$promise$0$0': Const('acceptor1', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), 'proposer$0$promise$1$0': Const('proposer0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))), 'proposer$1$start$0$0': Const('proposer0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))}


---------- ArgPartition ----------

sort2class_sigs: {EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')): [acceptor$0$promise$0$0], EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')): [proposer$0$promise$1$0; proposer$1$start$0$0]}

sort2part_sig: {EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')): acceptor$0$promise$0$0, EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')): proposer$0$promise$1$0; proposer$1$start$0$0}

part_sig: ('acceptor$0$promise$0$0', 'proposer$0$promise$1$0; proposer$1$start$0$0')


---------- SigGenerator ----------

terms:  ['promise(acceptor1,proposer0)', '~start(proposer0)']

func_name2symbol:  {'promise': Const('promise', FunctionSort(EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')), EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')), BooleanSort())), 'start': Const('start', FunctionSort(EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')), BooleanSort()))}

func_name2args_sort:  {'promise': (EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')), EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))), 'start': (EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')),)}

sign_func_name2count:  {'0$promise': 1, '1$start': 1}


---------- ProductArgPartition ----------

sort2class_sigs: {EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')): [acceptor$0$promise$0$0], EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')): [proposer$0$promise$1$0; proposer$1$start$0$0]}

sort2part_sig: {EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')): acceptor$0$promise$0$0, EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')): proposer$0$promise$1$0; proposer$1$start$0$0}

	sort: acceptor

	identical_classes: {'acceptor$0$promise$0': [acceptor$0$promise$0$0]}

	identical_single_classes: {'acceptor$0$promise$0': acceptor$0$promise$0$0}

	identical_multi_classes: {}

	sort: proposer

	identical_classes: {'proposer$0$promise$1; proposer$1$start$0': [proposer$0$promise$1$0; proposer$1$start$0$0]}

	identical_single_classes: {'proposer$0$promise$1; proposer$1$start$0': proposer$0$promise$1$0; proposer$1$start$0$0}

	identical_multi_classes: {}


---------- QInference: _set_sort_to_quantifier_mode ----------

quantifier mode: acceptor: QuantifierMode.forall

quantifier mode: proposer: QuantifierMode.forall


---------- QInference: _set_constraint_mode ----------

constraint mode: ConstraintMode.no_merge


---------- QFormula: _set_qvars ----------

forall_qvars: {Var('ACCEPTOR0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Var('PROPOSER0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))}

exists_qvars: set()


---------- QFormula: _set_signed_func_name_to_args ----------

signed_func_name2args: {'0$promise': [[Var('ACCEPTOR0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Var('PROPOSER0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))]], '1$start': [[Var('PROPOSER0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))]]}


---------- QFormula: _set_qterms ----------

qterms: ['~start(PROPOSER0)', 'promise(ACCEPTOR0,PROPOSER0)']


---------- QFormula: get_qclause ----------

qclause: forall ACCEPTOR0,PROPOSER0. start(PROPOSER0) | ~promise(ACCEPTOR0,PROPOSER0)


=== Prime Orbit 8 =====================
size : 3
num_suborbits: 1
144 (*) : ------------1-----------0--
144     : ['leader(proposer0)', '~start(proposer0)']
145     : -------------1-----------0-
145     : ['leader(proposer1)', '~start(proposer1)']
146     : --------------1-----------0
146     : ['leader(proposer2)', '~start(proposer2)']
num_forall :   0
num_exists :   0
num_literals : 0
quantified form : None
qcost : 0




---------- QPrime ----------


---------- ConstArgBinding ----------

terms: ['leader(proposer0)', '~start(proposer0)']

sign_func_name2args: {'0$leader': [(Const('proposer0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))),)], '1$start': [(Const('proposer0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))),)]}

const2sigs: {Const('proposer0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))): [proposer$0$leader$0$0, proposer$1$start$0$0]}

sig2const: {'proposer$0$leader$0$0': Const('proposer0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))), 'proposer$1$start$0$0': Const('proposer0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))}


---------- ArgPartition ----------

sort2class_sigs: {EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')): [proposer$0$leader$0$0; proposer$1$start$0$0]}

sort2part_sig: {EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')): proposer$0$leader$0$0; proposer$1$start$0$0}

part_sig: ('proposer$0$leader$0$0; proposer$1$start$0$0',)


---------- SigGenerator ----------

terms:  ['leader(proposer0)', '~start(proposer0)']

func_name2symbol:  {'leader': Const('leader', FunctionSort(EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')), BooleanSort())), 'start': Const('start', FunctionSort(EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')), BooleanSort()))}

func_name2args_sort:  {'leader': (EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')),), 'start': (EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')),)}

sign_func_name2count:  {'0$leader': 1, '1$start': 1}


---------- ProductArgPartition ----------

sort2class_sigs: {EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')): [proposer$0$leader$0$0; proposer$1$start$0$0]}

sort2part_sig: {EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')): proposer$0$leader$0$0; proposer$1$start$0$0}

	sort: proposer

	identical_classes: {'proposer$0$leader$0; proposer$1$start$0': [proposer$0$leader$0$0; proposer$1$start$0$0]}

	identical_single_classes: {'proposer$0$leader$0; proposer$1$start$0': proposer$0$leader$0$0; proposer$1$start$0$0}

	identical_multi_classes: {}


---------- QInference: _set_sort_to_quantifier_mode ----------

quantifier mode: proposer: QuantifierMode.forall


---------- QInference: _set_constraint_mode ----------

constraint mode: ConstraintMode.no_merge


---------- QFormula: _set_qvars ----------

forall_qvars: {Var('PROPOSER0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))}

exists_qvars: set()


---------- QFormula: _set_signed_func_name_to_args ----------

signed_func_name2args: {'0$leader': [[Var('PROPOSER0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))]], '1$start': [[Var('PROPOSER0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))]]}


---------- QFormula: _set_qterms ----------

qterms: ['~start(PROPOSER0)', 'leader(PROPOSER0)']


---------- QFormula: get_qclause ----------

qclause: forall PROPOSER0. start(PROPOSER0) | ~leader(PROPOSER0)


=== Prime Orbit 10 =====================
size : 3
num_suborbits: 1
156 (*) : ------------1-1------------
156     : ['leader(proposer0)', 'leader(proposer2)']
157     : ------------11-------------
157     : ['leader(proposer0)', 'leader(proposer1)']
158     : -------------11------------
158     : ['leader(proposer1)', 'leader(proposer2)']
num_forall :   0
num_exists :   0
num_literals : 0
quantified form : None
qcost : 0




---------- QPrime ----------


---------- ConstArgBinding ----------

terms: ['leader(proposer0)', 'leader(proposer2)']

sign_func_name2args: {'0$leader': [(Const('proposer0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))),), (Const('proposer2', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))),)]}

const2sigs: {Const('proposer0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))): [proposer$0$leader$0$0], Const('proposer2', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))): [proposer$0$leader$0$1]}

sig2const: {'proposer$0$leader$0$0': Const('proposer0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))), 'proposer$0$leader$0$1': Const('proposer2', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))}


---------- ArgPartition ----------

sort2class_sigs: {EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')): [proposer$0$leader$0$0, proposer$0$leader$0$1]}

sort2part_sig: {EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')): proposer$0$leader$0$0 | proposer$0$leader$0$1}

part_sig: ('proposer$0$leader$0$0 | proposer$0$leader$0$1',)


---------- SigGenerator ----------

terms:  ['leader(proposer0)', 'leader(proposer2)']

func_name2symbol:  {'leader': Const('leader', FunctionSort(EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')), BooleanSort()))}

func_name2args_sort:  {'leader': (EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')),)}

sign_func_name2count:  {'0$leader': 2}


---------- ProductArgPartition ----------

sort2class_sigs: {EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')): [proposer$0$leader$0$0, proposer$0$leader$0$1]}

sort2part_sig: {EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')): proposer$0$leader$0$0 | proposer$0$leader$0$1}

	sort: proposer

	identical_classes: {'proposer$0$leader$0': [proposer$0$leader$0$0, proposer$0$leader$0$1]}

	identical_single_classes: {}

	identical_multi_classes: {'proposer$0$leader$0': [proposer$0$leader$0$0, proposer$0$leader$0$1]}


---------- QInference: _set_sort_to_quantifier_mode ----------

quantifier mode: proposer: QuantifierMode.forall


---------- QInference: _set_constraint_mode ----------

constraint mode: ConstraintMode.no_merge


---------- QFormula: _set_qvars ----------

forall_qvars: {Var('PROPOSER0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))), Var('PROPOSER1', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))}

exists_qvars: set()


---------- QFormula: _set_signed_func_name_to_args ----------

signed_func_name2args: {'0$leader': [[Var('PROPOSER0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))], [Var('PROPOSER1', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))]]}


---------- QFormula: _set_qterms ----------

qterms: ['leader(PROPOSER0)', 'leader(PROPOSER1)']


---------- QFormula: get_qclause ----------

qclause: forall PROPOSER0,PROPOSER1. ~leader(PROPOSER0) | ~leader(PROPOSER1) | PROPOSER0 = PROPOSER1


=== Prime Orbit 13 =====================
size : 9
num_suborbits: 1
186 (*) : -0-----------1--------0----
186     : ['leader(proposer1)', '~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~promise(acceptor2,proposer1)']
187     : --0-----------1--------0---
187     : ['leader(proposer2)', '~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~promise(acceptor2,proposer2)']
188     : 0-----------1--------0-----
188     : ['leader(proposer0)', '~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~promise(acceptor2,proposer0)']
189     : ----0--------1-----0-------
189     : ['leader(proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~promise(acceptor1,proposer1)']
190     : -----0--------1-----0------
190     : ['leader(proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~promise(acceptor1,proposer2)']
191     : ---0--------1-----0--------
191     : ['leader(proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~promise(acceptor1,proposer0)']
192     : -------0-----1--0----------
192     : ['leader(proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~promise(acceptor0,proposer1)']
193     : --------0-----1--0---------
193     : ['leader(proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~promise(acceptor0,proposer2)']
194     : ------0-----1--0-----------
194     : ['leader(proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~promise(acceptor0,proposer0)']
num_forall :   0
num_exists :   0
num_literals : 0
quantified form : None
qcost : 0




---------- QPrime ----------


---------- ConstArgBinding ----------

terms: ['~chosenAt(quorum__acceptor0_acceptor1,proposer1)', 'leader(proposer1)', '~promise(acceptor2,proposer1)', '~member(acceptor2,quorum__acceptor0_acceptor1)']

sign_func_name2args: {'1$chosenAt': [(Const('quorum__acceptor0_acceptor1', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), Const('proposer1', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))))], '0$leader': [(Const('proposer1', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))),)], '1$promise': [(Const('acceptor2', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Const('proposer1', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))))], '1$member': [(Const('acceptor2', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Const('quorum__acceptor0_acceptor1', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))))]}

const2sigs: {Const('quorum__acceptor0_acceptor1', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))): [quorum$1$chosenAt$0$0, quorum$1$member$1$0], Const('proposer1', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))): [proposer$1$chosenAt$1$0, proposer$0$leader$0$0, proposer$1$promise$1$0], Const('acceptor2', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))): [acceptor$1$promise$0$0, acceptor$1$member$0$0]}

sig2const: {'quorum$1$chosenAt$0$0': Const('quorum__acceptor0_acceptor1', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), 'proposer$1$chosenAt$1$0': Const('proposer1', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))), 'proposer$0$leader$0$0': Const('proposer1', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))), 'acceptor$1$promise$0$0': Const('acceptor2', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), 'proposer$1$promise$1$0': Const('proposer1', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))), 'acceptor$1$member$0$0': Const('acceptor2', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), 'quorum$1$member$1$0': Const('quorum__acceptor0_acceptor1', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')))}


---------- ArgPartition ----------

sort2class_sigs: {EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')): [quorum$1$chosenAt$0$0; quorum$1$member$1$0], EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')): [proposer$0$leader$0$0; proposer$1$chosenAt$1$0; proposer$1$promise$1$0], EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')): [acceptor$1$member$0$0; acceptor$1$promise$0$0]}

sort2part_sig: {EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')): quorum$1$chosenAt$0$0; quorum$1$member$1$0, EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')): proposer$0$leader$0$0; proposer$1$chosenAt$1$0; proposer$1$promise$1$0, EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')): acceptor$1$member$0$0; acceptor$1$promise$0$0}

part_sig: ('acceptor$1$member$0$0; acceptor$1$promise$0$0', 'proposer$0$leader$0$0; proposer$1$chosenAt$1$0; proposer$1$promise$1$0', 'quorum$1$chosenAt$0$0; quorum$1$member$1$0')


---------- SigGenerator ----------

terms:  ['~chosenAt(quorum__acceptor0_acceptor1,proposer1)', 'leader(proposer1)', '~promise(acceptor2,proposer1)', '~member(acceptor2,quorum__acceptor0_acceptor1)']

func_name2symbol:  {'chosenAt': Const('chosenAt', FunctionSort(EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')), EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')), BooleanSort())), 'leader': Const('leader', FunctionSort(EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')), BooleanSort())), 'promise': Const('promise', FunctionSort(EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')), EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')), BooleanSort())), 'member': Const('member', FunctionSort(EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')), EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')), BooleanSort()))}

func_name2args_sort:  {'chosenAt': (EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')), EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))), 'leader': (EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')),), 'promise': (EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')), EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))), 'member': (EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')), EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')))}

sign_func_name2count:  {'1$chosenAt': 1, '0$leader': 1, '1$promise': 1, '1$member': 1}


---------- ProductArgPartition ----------

sort2class_sigs: {EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')): [quorum$1$chosenAt$0$0; quorum$1$member$1$0], EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')): [proposer$0$leader$0$0; proposer$1$chosenAt$1$0; proposer$1$promise$1$0], EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')): [acceptor$1$member$0$0; acceptor$1$promise$0$0]}

sort2part_sig: {EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')): quorum$1$chosenAt$0$0; quorum$1$member$1$0, EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')): proposer$0$leader$0$0; proposer$1$chosenAt$1$0; proposer$1$promise$1$0, EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')): acceptor$1$member$0$0; acceptor$1$promise$0$0}

	sort: quorum

	identical_classes: {'quorum$1$chosenAt$0; quorum$1$member$1': [quorum$1$chosenAt$0$0; quorum$1$member$1$0]}

	identical_single_classes: {'quorum$1$chosenAt$0; quorum$1$member$1': quorum$1$chosenAt$0$0; quorum$1$member$1$0}

	identical_multi_classes: {}

	sort: proposer

	identical_classes: {'proposer$0$leader$0; proposer$1$chosenAt$1; proposer$1$promise$1': [proposer$0$leader$0$0; proposer$1$chosenAt$1$0; proposer$1$promise$1$0]}

	identical_single_classes: {'proposer$0$leader$0; proposer$1$chosenAt$1; proposer$1$promise$1': proposer$0$leader$0$0; proposer$1$chosenAt$1$0; proposer$1$promise$1$0}

	identical_multi_classes: {}

	sort: acceptor

	identical_classes: {'acceptor$1$member$0; acceptor$1$promise$0': [acceptor$1$member$0$0; acceptor$1$promise$0$0]}

	identical_single_classes: {'acceptor$1$member$0; acceptor$1$promise$0': acceptor$1$member$0$0; acceptor$1$promise$0$0}

	identical_multi_classes: {}


---------- QInference: _set_sort_to_quantifier_mode ----------

quantifier mode: quorum: QuantifierMode.forall

quantifier mode: proposer: QuantifierMode.forall

quantifier mode: acceptor: QuantifierMode.forall


---------- QInference: _set_constraint_mode ----------

constraint mode: ConstraintMode.no_merge


---------- QFormula: _set_qvars ----------

forall_qvars: {Var('ACCEPTOR0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Var('PROPOSER0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))), Var('QUORUM0', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')))}

exists_qvars: set()


---------- QFormula: _set_signed_func_name_to_args ----------

signed_func_name2args: {'1$chosenAt': [[Var('QUORUM0', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), Var('PROPOSER0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))]], '0$leader': [[Var('PROPOSER0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))]], '1$promise': [[Var('ACCEPTOR0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Var('PROPOSER0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))]], '1$member': [[Var('ACCEPTOR0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Var('QUORUM0', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')))]]}


---------- QFormula: _set_qterms ----------

qterms: ['~promise(ACCEPTOR0,PROPOSER0)', '~member(ACCEPTOR0,QUORUM0)', 'leader(PROPOSER0)', '~chosenAt(QUORUM0,PROPOSER0)']


---------- QFormula: get_qclause ----------

qclause: forall ACCEPTOR0,PROPOSER0,QUORUM0. promise(ACCEPTOR0,PROPOSER0) | member(ACCEPTOR0,QUORUM0) | ~leader(PROPOSER0) | chosenAt(QUORUM0,PROPOSER0)


=== Prime Orbit 14 =====================
size : 9
num_suborbits: 1
195 (*) : ----0-----1--1-------------
195     : ['didNotPromise(acceptor1)', 'leader(proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)']
196     : -----0----1---1------------
196     : ['didNotPromise(acceptor1)', 'leader(proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)']
197     : ---0------1-1--------------
197     : ['didNotPromise(acceptor1)', 'leader(proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)']
198     : -0---------1-1-------------
198     : ['didNotPromise(acceptor2)', 'leader(proposer1)', '~chosenAt(quorum__acceptor0_acceptor1,proposer1)']
199     : --0--------1--1------------
199     : ['didNotPromise(acceptor2)', 'leader(proposer2)', '~chosenAt(quorum__acceptor0_acceptor1,proposer2)']
200     : 0----------11--------------
200     : ['didNotPromise(acceptor2)', 'leader(proposer0)', '~chosenAt(quorum__acceptor0_acceptor1,proposer0)']
201     : -------0-1---1-------------
201     : ['didNotPromise(acceptor0)', 'leader(proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)']
202     : --------01----1------------
202     : ['didNotPromise(acceptor0)', 'leader(proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)']
203     : ------0--1--1--------------
203     : ['didNotPromise(acceptor0)', 'leader(proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)']
num_forall :   0
num_exists :   0
num_literals : 0
quantified form : None
qcost : 0




---------- QPrime ----------


---------- ConstArgBinding ----------

terms: ['~chosenAt(quorum__acceptor0_acceptor2,proposer1)', 'didNotPromise(acceptor1)', 'leader(proposer1)', '~member(acceptor1,quorum__acceptor0_acceptor2)']

sign_func_name2args: {'1$chosenAt': [(Const('quorum__acceptor0_acceptor2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), Const('proposer1', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))))], '0$didNotPromise': [(Const('acceptor1', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))),)], '0$leader': [(Const('proposer1', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))),)], '1$member': [(Const('acceptor1', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Const('quorum__acceptor0_acceptor2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))))]}

const2sigs: {Const('quorum__acceptor0_acceptor2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))): [quorum$1$chosenAt$0$0, quorum$1$member$1$0], Const('proposer1', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))): [proposer$1$chosenAt$1$0, proposer$0$leader$0$0], Const('acceptor1', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))): [acceptor$0$didNotPromise$0$0, acceptor$1$member$0$0]}

sig2const: {'quorum$1$chosenAt$0$0': Const('quorum__acceptor0_acceptor2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), 'proposer$1$chosenAt$1$0': Const('proposer1', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))), 'acceptor$0$didNotPromise$0$0': Const('acceptor1', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), 'proposer$0$leader$0$0': Const('proposer1', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))), 'acceptor$1$member$0$0': Const('acceptor1', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), 'quorum$1$member$1$0': Const('quorum__acceptor0_acceptor2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')))}


---------- ArgPartition ----------

sort2class_sigs: {EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')): [quorum$1$chosenAt$0$0; quorum$1$member$1$0], EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')): [proposer$0$leader$0$0; proposer$1$chosenAt$1$0], EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')): [acceptor$0$didNotPromise$0$0; acceptor$1$member$0$0]}

sort2part_sig: {EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')): quorum$1$chosenAt$0$0; quorum$1$member$1$0, EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')): proposer$0$leader$0$0; proposer$1$chosenAt$1$0, EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')): acceptor$0$didNotPromise$0$0; acceptor$1$member$0$0}

part_sig: ('acceptor$0$didNotPromise$0$0; acceptor$1$member$0$0', 'proposer$0$leader$0$0; proposer$1$chosenAt$1$0', 'quorum$1$chosenAt$0$0; quorum$1$member$1$0')


---------- SigGenerator ----------

terms:  ['~chosenAt(quorum__acceptor0_acceptor2,proposer1)', 'didNotPromise(acceptor1)', 'leader(proposer1)', '~member(acceptor1,quorum__acceptor0_acceptor2)']

func_name2symbol:  {'chosenAt': Const('chosenAt', FunctionSort(EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')), EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')), BooleanSort())), 'didNotPromise': Const('didNotPromise', FunctionSort(EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')), BooleanSort())), 'leader': Const('leader', FunctionSort(EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')), BooleanSort())), 'member': Const('member', FunctionSort(EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')), EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')), BooleanSort()))}

func_name2args_sort:  {'chosenAt': (EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')), EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))), 'didNotPromise': (EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')),), 'leader': (EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')),), 'member': (EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')), EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')))}

sign_func_name2count:  {'1$chosenAt': 1, '0$didNotPromise': 1, '0$leader': 1, '1$member': 1}


---------- ProductArgPartition ----------

sort2class_sigs: {EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')): [quorum$1$chosenAt$0$0; quorum$1$member$1$0], EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')): [proposer$0$leader$0$0; proposer$1$chosenAt$1$0], EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')): [acceptor$0$didNotPromise$0$0; acceptor$1$member$0$0]}

sort2part_sig: {EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')): quorum$1$chosenAt$0$0; quorum$1$member$1$0, EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')): proposer$0$leader$0$0; proposer$1$chosenAt$1$0, EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')): acceptor$0$didNotPromise$0$0; acceptor$1$member$0$0}

	sort: quorum

	identical_classes: {'quorum$1$chosenAt$0; quorum$1$member$1': [quorum$1$chosenAt$0$0; quorum$1$member$1$0]}

	identical_single_classes: {'quorum$1$chosenAt$0; quorum$1$member$1': quorum$1$chosenAt$0$0; quorum$1$member$1$0}

	identical_multi_classes: {}

	sort: proposer

	identical_classes: {'proposer$0$leader$0; proposer$1$chosenAt$1': [proposer$0$leader$0$0; proposer$1$chosenAt$1$0]}

	identical_single_classes: {'proposer$0$leader$0; proposer$1$chosenAt$1': proposer$0$leader$0$0; proposer$1$chosenAt$1$0}

	identical_multi_classes: {}

	sort: acceptor

	identical_classes: {'acceptor$0$didNotPromise$0; acceptor$1$member$0': [acceptor$0$didNotPromise$0$0; acceptor$1$member$0$0]}

	identical_single_classes: {'acceptor$0$didNotPromise$0; acceptor$1$member$0': acceptor$0$didNotPromise$0$0; acceptor$1$member$0$0}

	identical_multi_classes: {}


---------- QInference: _set_sort_to_quantifier_mode ----------

quantifier mode: quorum: QuantifierMode.forall

quantifier mode: proposer: QuantifierMode.forall

quantifier mode: acceptor: QuantifierMode.forall


---------- QInference: _set_constraint_mode ----------

constraint mode: ConstraintMode.no_merge


---------- QFormula: _set_qvars ----------

forall_qvars: {Var('ACCEPTOR0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Var('PROPOSER0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))), Var('QUORUM0', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')))}

exists_qvars: set()


---------- QFormula: _set_signed_func_name_to_args ----------

signed_func_name2args: {'1$chosenAt': [[Var('QUORUM0', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), Var('PROPOSER0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))]], '0$didNotPromise': [[Var('ACCEPTOR0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')))]], '0$leader': [[Var('PROPOSER0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))]], '1$member': [[Var('ACCEPTOR0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Var('QUORUM0', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')))]]}


---------- QFormula: _set_qterms ----------

qterms: ['leader(PROPOSER0)', '~member(ACCEPTOR0,QUORUM0)', 'didNotPromise(ACCEPTOR0)', '~chosenAt(QUORUM0,PROPOSER0)']


---------- QFormula: get_qclause ----------

qclause: forall ACCEPTOR0,PROPOSER0,QUORUM0. ~leader(PROPOSER0) | member(ACCEPTOR0,QUORUM0) | ~didNotPromise(ACCEPTOR0) | chosenAt(QUORUM0,PROPOSER0)


=== Prime Orbit 15 =====================
size : 18
num_suborbits: 1
204 (*) : ----------1--1--------0----
204     : ['didNotPromise(acceptor1)', 'leader(proposer1)', '~promise(acceptor2,proposer1)']
205     : ----------1---1--------0---
205     : ['didNotPromise(acceptor1)', 'leader(proposer2)', '~promise(acceptor2,proposer2)']
206     : ----------1-1--------0-----
206     : ['didNotPromise(acceptor1)', 'leader(proposer0)', '~promise(acceptor2,proposer0)']
207     : -----------1-1-----0-------
207     : ['didNotPromise(acceptor2)', 'leader(proposer1)', '~promise(acceptor1,proposer1)']
208     : -----------1--1-----0------
208     : ['didNotPromise(acceptor2)', 'leader(proposer2)', '~promise(acceptor1,proposer2)']
209     : -----------11-----0--------
209     : ['didNotPromise(acceptor2)', 'leader(proposer0)', '~promise(acceptor1,proposer0)']
210     : ---------1---1--------0----
210     : ['didNotPromise(acceptor0)', 'leader(proposer1)', '~promise(acceptor2,proposer1)']
211     : ---------1----1--------0---
211     : ['didNotPromise(acceptor0)', 'leader(proposer2)', '~promise(acceptor2,proposer2)']
212     : ---------1--1--------0-----
212     : ['didNotPromise(acceptor0)', 'leader(proposer0)', '~promise(acceptor2,proposer0)']
213     : -----------1-1--0----------
213     : ['didNotPromise(acceptor2)', 'leader(proposer1)', '~promise(acceptor0,proposer1)']
214     : -----------1--1--0---------
214     : ['didNotPromise(acceptor2)', 'leader(proposer2)', '~promise(acceptor0,proposer2)']
215     : -----------11--0-----------
215     : ['didNotPromise(acceptor2)', 'leader(proposer0)', '~promise(acceptor0,proposer0)']
216     : ---------1---1-----0-------
216     : ['didNotPromise(acceptor0)', 'leader(proposer1)', '~promise(acceptor1,proposer1)']
217     : ---------1----1-----0------
217     : ['didNotPromise(acceptor0)', 'leader(proposer2)', '~promise(acceptor1,proposer2)']
218     : ---------1--1-----0--------
218     : ['didNotPromise(acceptor0)', 'leader(proposer0)', '~promise(acceptor1,proposer0)']
219     : ----------1--1--0----------
219     : ['didNotPromise(acceptor1)', 'leader(proposer1)', '~promise(acceptor0,proposer1)']
220     : ----------1---1--0---------
220     : ['didNotPromise(acceptor1)', 'leader(proposer2)', '~promise(acceptor0,proposer2)']
221     : ----------1-1--0-----------
221     : ['didNotPromise(acceptor1)', 'leader(proposer0)', '~promise(acceptor0,proposer0)']
num_forall :   0
num_exists :   0
num_literals : 0
quantified form : None
qcost : 0




---------- QPrime ----------


---------- ConstArgBinding ----------

terms: ['didNotPromise(acceptor1)', 'leader(proposer1)', '~promise(acceptor2,proposer1)']

sign_func_name2args: {'0$didNotPromise': [(Const('acceptor1', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))),)], '0$leader': [(Const('proposer1', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))),)], '1$promise': [(Const('acceptor2', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Const('proposer1', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))))]}

const2sigs: {Const('acceptor1', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))): [acceptor$0$didNotPromise$0$0], Const('proposer1', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))): [proposer$0$leader$0$0, proposer$1$promise$1$0], Const('acceptor2', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))): [acceptor$1$promise$0$0]}

sig2const: {'acceptor$0$didNotPromise$0$0': Const('acceptor1', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), 'proposer$0$leader$0$0': Const('proposer1', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))), 'acceptor$1$promise$0$0': Const('acceptor2', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), 'proposer$1$promise$1$0': Const('proposer1', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))}


---------- ArgPartition ----------

sort2class_sigs: {EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')): [acceptor$0$didNotPromise$0$0, acceptor$1$promise$0$0], EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')): [proposer$0$leader$0$0; proposer$1$promise$1$0]}

sort2part_sig: {EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')): acceptor$0$didNotPromise$0$0 | acceptor$1$promise$0$0, EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')): proposer$0$leader$0$0; proposer$1$promise$1$0}

part_sig: ('acceptor$0$didNotPromise$0$0 | acceptor$1$promise$0$0', 'proposer$0$leader$0$0; proposer$1$promise$1$0')


---------- SigGenerator ----------

terms:  ['didNotPromise(acceptor1)', 'leader(proposer1)', '~promise(acceptor2,proposer1)']

func_name2symbol:  {'didNotPromise': Const('didNotPromise', FunctionSort(EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')), BooleanSort())), 'leader': Const('leader', FunctionSort(EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')), BooleanSort())), 'promise': Const('promise', FunctionSort(EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')), EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')), BooleanSort()))}

func_name2args_sort:  {'didNotPromise': (EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')),), 'leader': (EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')),), 'promise': (EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')), EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))}

sign_func_name2count:  {'0$didNotPromise': 1, '0$leader': 1, '1$promise': 1}


---------- ProductArgPartition ----------

sort2class_sigs: {EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')): [acceptor$0$didNotPromise$0$0, acceptor$1$promise$0$0], EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')): [proposer$0$leader$0$0; proposer$1$promise$1$0]}

sort2part_sig: {EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')): acceptor$0$didNotPromise$0$0 | acceptor$1$promise$0$0, EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')): proposer$0$leader$0$0; proposer$1$promise$1$0}

	sort: acceptor

	identical_classes: {'acceptor$0$didNotPromise$0': [acceptor$0$didNotPromise$0$0], 'acceptor$1$promise$0': [acceptor$1$promise$0$0]}

	identical_single_classes: {'acceptor$0$didNotPromise$0': acceptor$0$didNotPromise$0$0, 'acceptor$1$promise$0': acceptor$1$promise$0$0}

	identical_multi_classes: {}

	sort: proposer

	identical_classes: {'proposer$0$leader$0; proposer$1$promise$1': [proposer$0$leader$0$0; proposer$1$promise$1$0]}

	identical_single_classes: {'proposer$0$leader$0; proposer$1$promise$1': proposer$0$leader$0$0; proposer$1$promise$1$0}

	identical_multi_classes: {}


---------- QInference: _set_sort_to_quantifier_mode ----------

quantifier mode: acceptor: QuantifierMode.forall

quantifier mode: proposer: QuantifierMode.forall


---------- QInference: _set_constraint_mode ----------

constraint mode: ConstraintMode.no_merge


---------- QFormula: _set_qvars ----------

forall_qvars: {Var('ACCEPTOR0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Var('PROPOSER0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))), Var('ACCEPTOR1', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')))}

exists_qvars: set()


---------- QFormula: _set_signed_func_name_to_args ----------

signed_func_name2args: {'0$didNotPromise': [[Var('ACCEPTOR0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')))]], '0$leader': [[Var('PROPOSER0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))]], '1$promise': [[Var('ACCEPTOR1', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Var('PROPOSER0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))]]}


---------- QFormula: _set_qterms ----------

qterms: ['leader(PROPOSER0)', 'didNotPromise(ACCEPTOR0)', '~promise(ACCEPTOR1,PROPOSER0)']


---------- QFormula: get_qclause ----------

qclause: forall ACCEPTOR1,ACCEPTOR0,PROPOSER0. ~leader(PROPOSER0) | ~didNotPromise(ACCEPTOR0) | promise(ACCEPTOR1,PROPOSER0) | ACCEPTOR0 = ACCEPTOR1


=== Prime Orbit 16 =====================
size : 36
num_suborbits: 1
222 (*) : ----------1--1---------1---
222     : ['didNotPromise(acceptor1)', 'leader(proposer1)', 'promise(acceptor2,proposer2)']
223     : ----------1---1-------1----
223     : ['didNotPromise(acceptor1)', 'leader(proposer2)', 'promise(acceptor2,proposer1)']
224     : ----------1-1----------1---
224     : ['didNotPromise(acceptor1)', 'leader(proposer0)', 'promise(acceptor2,proposer2)']
225     : ----------1---1------1-----
225     : ['didNotPromise(acceptor1)', 'leader(proposer2)', 'promise(acceptor2,proposer0)']
226     : ----------1-1---------1----
226     : ['didNotPromise(acceptor1)', 'leader(proposer0)', 'promise(acceptor2,proposer1)']
227     : ----------1--1-------1-----
227     : ['didNotPromise(acceptor1)', 'leader(proposer1)', 'promise(acceptor2,proposer0)']
228     : -----------1-1------1------
228     : ['didNotPromise(acceptor2)', 'leader(proposer1)', 'promise(acceptor1,proposer2)']
229     : -----------1--1----1-------
229     : ['didNotPromise(acceptor2)', 'leader(proposer2)', 'promise(acceptor1,proposer1)']
230     : -----------11-------1------
230     : ['didNotPromise(acceptor2)', 'leader(proposer0)', 'promise(acceptor1,proposer2)']
231     : -----------1--1---1--------
231     : ['didNotPromise(acceptor2)', 'leader(proposer2)', 'promise(acceptor1,proposer0)']
232     : -----------11------1-------
232     : ['didNotPromise(acceptor2)', 'leader(proposer0)', 'promise(acceptor1,proposer1)']
233     : -----------1-1----1--------
233     : ['didNotPromise(acceptor2)', 'leader(proposer1)', 'promise(acceptor1,proposer0)']
234     : ---------1---1---------1---
234     : ['didNotPromise(acceptor0)', 'leader(proposer1)', 'promise(acceptor2,proposer2)']
235     : ---------1----1-------1----
235     : ['didNotPromise(acceptor0)', 'leader(proposer2)', 'promise(acceptor2,proposer1)']
236     : ---------1--1----------1---
236     : ['didNotPromise(acceptor0)', 'leader(proposer0)', 'promise(acceptor2,proposer2)']
237     : ---------1----1------1-----
237     : ['didNotPromise(acceptor0)', 'leader(proposer2)', 'promise(acceptor2,proposer0)']
238     : ---------1--1---------1----
238     : ['didNotPromise(acceptor0)', 'leader(proposer0)', 'promise(acceptor2,proposer1)']
239     : ---------1---1-------1-----
239     : ['didNotPromise(acceptor0)', 'leader(proposer1)', 'promise(acceptor2,proposer0)']
240     : -----------1-1---1---------
240     : ['didNotPromise(acceptor2)', 'leader(proposer1)', 'promise(acceptor0,proposer2)']
241     : -----------1--1-1----------
241     : ['didNotPromise(acceptor2)', 'leader(proposer2)', 'promise(acceptor0,proposer1)']
242     : -----------11----1---------
242     : ['didNotPromise(acceptor2)', 'leader(proposer0)', 'promise(acceptor0,proposer2)']
243     : -----------1--11-----------
243     : ['didNotPromise(acceptor2)', 'leader(proposer2)', 'promise(acceptor0,proposer0)']
244     : -----------11---1----------
244     : ['didNotPromise(acceptor2)', 'leader(proposer0)', 'promise(acceptor0,proposer1)']
245     : -----------1-1-1-----------
245     : ['didNotPromise(acceptor2)', 'leader(proposer1)', 'promise(acceptor0,proposer0)']
246     : ---------1---1------1------
246     : ['didNotPromise(acceptor0)', 'leader(proposer1)', 'promise(acceptor1,proposer2)']
247     : ---------1----1----1-------
247     : ['didNotPromise(acceptor0)', 'leader(proposer2)', 'promise(acceptor1,proposer1)']
248     : ---------1--1-------1------
248     : ['didNotPromise(acceptor0)', 'leader(proposer0)', 'promise(acceptor1,proposer2)']
249     : ---------1----1---1--------
249     : ['didNotPromise(acceptor0)', 'leader(proposer2)', 'promise(acceptor1,proposer0)']
250     : ---------1--1------1-------
250     : ['didNotPromise(acceptor0)', 'leader(proposer0)', 'promise(acceptor1,proposer1)']
251     : ---------1---1----1--------
251     : ['didNotPromise(acceptor0)', 'leader(proposer1)', 'promise(acceptor1,proposer0)']
252     : ----------1--1---1---------
252     : ['didNotPromise(acceptor1)', 'leader(proposer1)', 'promise(acceptor0,proposer2)']
253     : ----------1---1-1----------
253     : ['didNotPromise(acceptor1)', 'leader(proposer2)', 'promise(acceptor0,proposer1)']
254     : ----------1-1----1---------
254     : ['didNotPromise(acceptor1)', 'leader(proposer0)', 'promise(acceptor0,proposer2)']
255     : ----------1---11-----------
255     : ['didNotPromise(acceptor1)', 'leader(proposer2)', 'promise(acceptor0,proposer0)']
256     : ----------1-1---1----------
256     : ['didNotPromise(acceptor1)', 'leader(proposer0)', 'promise(acceptor0,proposer1)']
257     : ----------1--1-1-----------
257     : ['didNotPromise(acceptor1)', 'leader(proposer1)', 'promise(acceptor0,proposer0)']
num_forall :   0
num_exists :   0
num_literals : 0
quantified form : None
qcost : 0




---------- QPrime ----------


---------- ConstArgBinding ----------

terms: ['didNotPromise(acceptor1)', 'leader(proposer1)', 'promise(acceptor2,proposer2)']

sign_func_name2args: {'0$didNotPromise': [(Const('acceptor1', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))),)], '0$leader': [(Const('proposer1', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))),)], '0$promise': [(Const('acceptor2', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Const('proposer2', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))))]}

const2sigs: {Const('acceptor1', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))): [acceptor$0$didNotPromise$0$0], Const('proposer1', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))): [proposer$0$leader$0$0], Const('acceptor2', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))): [acceptor$0$promise$0$0], Const('proposer2', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))): [proposer$0$promise$1$0]}

sig2const: {'acceptor$0$didNotPromise$0$0': Const('acceptor1', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), 'proposer$0$leader$0$0': Const('proposer1', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))), 'acceptor$0$promise$0$0': Const('acceptor2', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), 'proposer$0$promise$1$0': Const('proposer2', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))}


---------- ArgPartition ----------

sort2class_sigs: {EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')): [acceptor$0$didNotPromise$0$0, acceptor$0$promise$0$0], EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')): [proposer$0$leader$0$0, proposer$0$promise$1$0]}

sort2part_sig: {EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')): acceptor$0$didNotPromise$0$0 | acceptor$0$promise$0$0, EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')): proposer$0$leader$0$0 | proposer$0$promise$1$0}

part_sig: ('acceptor$0$didNotPromise$0$0 | acceptor$0$promise$0$0', 'proposer$0$leader$0$0 | proposer$0$promise$1$0')


---------- SigGenerator ----------

terms:  ['didNotPromise(acceptor1)', 'leader(proposer1)', 'promise(acceptor2,proposer2)']

func_name2symbol:  {'didNotPromise': Const('didNotPromise', FunctionSort(EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')), BooleanSort())), 'leader': Const('leader', FunctionSort(EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')), BooleanSort())), 'promise': Const('promise', FunctionSort(EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')), EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')), BooleanSort()))}

func_name2args_sort:  {'didNotPromise': (EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')),), 'leader': (EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')),), 'promise': (EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')), EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))}

sign_func_name2count:  {'0$didNotPromise': 1, '0$leader': 1, '0$promise': 1}


---------- ProductArgPartition ----------

sort2class_sigs: {EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')): [acceptor$0$didNotPromise$0$0, acceptor$0$promise$0$0], EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')): [proposer$0$leader$0$0, proposer$0$promise$1$0]}

sort2part_sig: {EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')): acceptor$0$didNotPromise$0$0 | acceptor$0$promise$0$0, EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')): proposer$0$leader$0$0 | proposer$0$promise$1$0}

	sort: acceptor

	identical_classes: {'acceptor$0$didNotPromise$0': [acceptor$0$didNotPromise$0$0], 'acceptor$0$promise$0': [acceptor$0$promise$0$0]}

	identical_single_classes: {'acceptor$0$didNotPromise$0': acceptor$0$didNotPromise$0$0, 'acceptor$0$promise$0': acceptor$0$promise$0$0}

	identical_multi_classes: {}

	sort: proposer

	identical_classes: {'proposer$0$leader$0': [proposer$0$leader$0$0], 'proposer$0$promise$1': [proposer$0$promise$1$0]}

	identical_single_classes: {'proposer$0$leader$0': proposer$0$leader$0$0, 'proposer$0$promise$1': proposer$0$promise$1$0}

	identical_multi_classes: {}


---------- QInference: _set_sort_to_quantifier_mode ----------

quantifier mode: acceptor: QuantifierMode.forall

quantifier mode: proposer: QuantifierMode.forall


---------- QInference: _set_constraint_mode ----------

constraint mode: ConstraintMode.no_merge


---------- QFormula: _set_qvars ----------

forall_qvars: {Var('ACCEPTOR0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Var('PROPOSER0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))), Var('PROPOSER1', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))), Var('ACCEPTOR1', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')))}

exists_qvars: set()


---------- QFormula: _set_signed_func_name_to_args ----------

signed_func_name2args: {'0$didNotPromise': [[Var('ACCEPTOR0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')))]], '0$leader': [[Var('PROPOSER0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))]], '0$promise': [[Var('ACCEPTOR1', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Var('PROPOSER1', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))]]}


---------- QFormula: _set_qterms ----------

qterms: ['promise(ACCEPTOR1,PROPOSER1)', 'leader(PROPOSER0)', 'didNotPromise(ACCEPTOR0)']


---------- QFormula: get_qclause ----------

qclause: forall ACCEPTOR1,ACCEPTOR0,PROPOSER0,PROPOSER1. ~promise(ACCEPTOR1,PROPOSER1) | ~leader(PROPOSER0) | ~didNotPromise(ACCEPTOR0) | (PROPOSER0 = PROPOSER1 | ACCEPTOR0 = ACCEPTOR1)


=== Prime Orbit 17 =====================
size : 18
num_suborbits: 1
258 (*) : -0-----------1---------1---
258     : ['leader(proposer1)', 'promise(acceptor2,proposer2)', '~chosenAt(quorum__acceptor0_acceptor1,proposer1)']
259     : --0-----------1-------1----
259     : ['leader(proposer2)', 'promise(acceptor2,proposer1)', '~chosenAt(quorum__acceptor0_acceptor1,proposer2)']
260     : 0-----------1----------1---
260     : ['leader(proposer0)', 'promise(acceptor2,proposer2)', '~chosenAt(quorum__acceptor0_acceptor1,proposer0)']
261     : --0-----------1------1-----
261     : ['leader(proposer2)', 'promise(acceptor2,proposer0)', '~chosenAt(quorum__acceptor0_acceptor1,proposer2)']
262     : 0-----------1---------1----
262     : ['leader(proposer0)', 'promise(acceptor2,proposer1)', '~chosenAt(quorum__acceptor0_acceptor1,proposer0)']
263     : -0-----------1-------1-----
263     : ['leader(proposer1)', 'promise(acceptor2,proposer0)', '~chosenAt(quorum__acceptor0_acceptor1,proposer1)']
264     : ----0--------1------1------
264     : ['leader(proposer1)', 'promise(acceptor1,proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)']
265     : -----0--------1----1-------
265     : ['leader(proposer2)', 'promise(acceptor1,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)']
266     : ---0--------1-------1------
266     : ['leader(proposer0)', 'promise(acceptor1,proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)']
267     : -----0--------1---1--------
267     : ['leader(proposer2)', 'promise(acceptor1,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)']
268     : ---0--------1------1-------
268     : ['leader(proposer0)', 'promise(acceptor1,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)']
269     : ----0--------1----1--------
269     : ['leader(proposer1)', 'promise(acceptor1,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)']
270     : -------0-----1---1---------
270     : ['leader(proposer1)', 'promise(acceptor0,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)']
271     : --------0-----1-1----------
271     : ['leader(proposer2)', 'promise(acceptor0,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)']
272     : ------0-----1----1---------
272     : ['leader(proposer0)', 'promise(acceptor0,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)']
273     : --------0-----11-----------
273     : ['leader(proposer2)', 'promise(acceptor0,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)']
274     : ------0-----1---1----------
274     : ['leader(proposer0)', 'promise(acceptor0,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)']
275     : -------0-----1-1-----------
275     : ['leader(proposer1)', 'promise(acceptor0,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)']
num_forall :   0
num_exists :   0
num_literals : 0
quantified form : None
qcost : 0




---------- QPrime ----------


---------- ConstArgBinding ----------

terms: ['~chosenAt(quorum__acceptor0_acceptor1,proposer1)', 'leader(proposer1)', 'promise(acceptor2,proposer2)', '~member(acceptor2,quorum__acceptor0_acceptor1)']

sign_func_name2args: {'1$chosenAt': [(Const('quorum__acceptor0_acceptor1', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), Const('proposer1', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))))], '0$leader': [(Const('proposer1', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))),)], '0$promise': [(Const('acceptor2', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Const('proposer2', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))))], '1$member': [(Const('acceptor2', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Const('quorum__acceptor0_acceptor1', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))))]}

const2sigs: {Const('quorum__acceptor0_acceptor1', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))): [quorum$1$chosenAt$0$0, quorum$1$member$1$0], Const('proposer1', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))): [proposer$1$chosenAt$1$0, proposer$0$leader$0$0], Const('acceptor2', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))): [acceptor$0$promise$0$0, acceptor$1$member$0$0], Const('proposer2', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))): [proposer$0$promise$1$0]}

sig2const: {'quorum$1$chosenAt$0$0': Const('quorum__acceptor0_acceptor1', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), 'proposer$1$chosenAt$1$0': Const('proposer1', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))), 'proposer$0$leader$0$0': Const('proposer1', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))), 'acceptor$0$promise$0$0': Const('acceptor2', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), 'proposer$0$promise$1$0': Const('proposer2', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))), 'acceptor$1$member$0$0': Const('acceptor2', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), 'quorum$1$member$1$0': Const('quorum__acceptor0_acceptor1', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')))}


---------- ArgPartition ----------

sort2class_sigs: {EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')): [quorum$1$chosenAt$0$0; quorum$1$member$1$0], EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')): [proposer$0$leader$0$0; proposer$1$chosenAt$1$0, proposer$0$promise$1$0], EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')): [acceptor$0$promise$0$0; acceptor$1$member$0$0]}

sort2part_sig: {EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')): quorum$1$chosenAt$0$0; quorum$1$member$1$0, EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')): proposer$0$leader$0$0; proposer$1$chosenAt$1$0 | proposer$0$promise$1$0, EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')): acceptor$0$promise$0$0; acceptor$1$member$0$0}

part_sig: ('acceptor$0$promise$0$0; acceptor$1$member$0$0', 'proposer$0$leader$0$0; proposer$1$chosenAt$1$0 | proposer$0$promise$1$0', 'quorum$1$chosenAt$0$0; quorum$1$member$1$0')


---------- SigGenerator ----------

terms:  ['~chosenAt(quorum__acceptor0_acceptor1,proposer1)', 'leader(proposer1)', 'promise(acceptor2,proposer2)', '~member(acceptor2,quorum__acceptor0_acceptor1)']

func_name2symbol:  {'chosenAt': Const('chosenAt', FunctionSort(EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')), EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')), BooleanSort())), 'leader': Const('leader', FunctionSort(EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')), BooleanSort())), 'promise': Const('promise', FunctionSort(EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')), EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')), BooleanSort())), 'member': Const('member', FunctionSort(EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')), EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')), BooleanSort()))}

func_name2args_sort:  {'chosenAt': (EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')), EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))), 'leader': (EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')),), 'promise': (EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')), EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))), 'member': (EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')), EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')))}

sign_func_name2count:  {'1$chosenAt': 1, '0$leader': 1, '0$promise': 1, '1$member': 1}


---------- ProductArgPartition ----------

sort2class_sigs: {EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')): [quorum$1$chosenAt$0$0; quorum$1$member$1$0], EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')): [proposer$0$leader$0$0; proposer$1$chosenAt$1$0, proposer$0$promise$1$0], EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')): [acceptor$0$promise$0$0; acceptor$1$member$0$0]}

sort2part_sig: {EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')): quorum$1$chosenAt$0$0; quorum$1$member$1$0, EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')): proposer$0$leader$0$0; proposer$1$chosenAt$1$0 | proposer$0$promise$1$0, EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')): acceptor$0$promise$0$0; acceptor$1$member$0$0}

	sort: quorum

	identical_classes: {'quorum$1$chosenAt$0; quorum$1$member$1': [quorum$1$chosenAt$0$0; quorum$1$member$1$0]}

	identical_single_classes: {'quorum$1$chosenAt$0; quorum$1$member$1': quorum$1$chosenAt$0$0; quorum$1$member$1$0}

	identical_multi_classes: {}

	sort: proposer

	identical_classes: {'proposer$0$leader$0; proposer$1$chosenAt$1': [proposer$0$leader$0$0; proposer$1$chosenAt$1$0], 'proposer$0$promise$1': [proposer$0$promise$1$0]}

	identical_single_classes: {'proposer$0$leader$0; proposer$1$chosenAt$1': proposer$0$leader$0$0; proposer$1$chosenAt$1$0, 'proposer$0$promise$1': proposer$0$promise$1$0}

	identical_multi_classes: {}

	sort: acceptor

	identical_classes: {'acceptor$0$promise$0; acceptor$1$member$0': [acceptor$0$promise$0$0; acceptor$1$member$0$0]}

	identical_single_classes: {'acceptor$0$promise$0; acceptor$1$member$0': acceptor$0$promise$0$0; acceptor$1$member$0$0}

	identical_multi_classes: {}


---------- QInference: _set_sort_to_quantifier_mode ----------

quantifier mode: quorum: QuantifierMode.forall

quantifier mode: proposer: QuantifierMode.forall

quantifier mode: acceptor: QuantifierMode.forall


---------- QInference: _set_constraint_mode ----------

constraint mode: ConstraintMode.no_merge


---------- QFormula: _set_qvars ----------

forall_qvars: {Var('ACCEPTOR0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Var('PROPOSER0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))), Var('PROPOSER1', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))), Var('QUORUM0', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')))}

exists_qvars: set()


---------- QFormula: _set_signed_func_name_to_args ----------

signed_func_name2args: {'1$chosenAt': [[Var('QUORUM0', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), Var('PROPOSER0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))]], '0$leader': [[Var('PROPOSER0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))]], '0$promise': [[Var('ACCEPTOR0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Var('PROPOSER1', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))]], '1$member': [[Var('ACCEPTOR0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Var('QUORUM0', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')))]]}


---------- QFormula: _set_qterms ----------

qterms: ['~member(ACCEPTOR0,QUORUM0)', 'leader(PROPOSER0)', '~chosenAt(QUORUM0,PROPOSER0)', 'promise(ACCEPTOR0,PROPOSER1)']


---------- QFormula: get_qclause ----------

qclause: forall QUORUM0,ACCEPTOR0,PROPOSER0,PROPOSER1. member(ACCEPTOR0,QUORUM0) | ~leader(PROPOSER0) | chosenAt(QUORUM0,PROPOSER0) | ~promise(ACCEPTOR0,PROPOSER1) | PROPOSER0 = PROPOSER1


=== Prime Orbit 18 =====================
size : 36
num_suborbits: 1
276 (*) : --------------1--0---1-----
276     : ['leader(proposer2)', 'promise(acceptor2,proposer0)', '~promise(acceptor0,proposer2)']
277     : -------------1--0----1-----
277     : ['leader(proposer1)', 'promise(acceptor2,proposer0)', '~promise(acceptor0,proposer1)']
278     : --------------1--0----1----
278     : ['leader(proposer2)', 'promise(acceptor2,proposer1)', '~promise(acceptor0,proposer2)']
279     : ------------1--0------1----
279     : ['leader(proposer0)', 'promise(acceptor2,proposer1)', '~promise(acceptor0,proposer0)']
280     : -------------1--0------1---
280     : ['leader(proposer1)', 'promise(acceptor2,proposer2)', '~promise(acceptor0,proposer1)']
281     : ------------1--0-------1---
281     : ['leader(proposer0)', 'promise(acceptor2,proposer2)', '~promise(acceptor0,proposer0)']
282     : --------------1--01--------
282     : ['leader(proposer2)', 'promise(acceptor1,proposer0)', '~promise(acceptor0,proposer2)']
283     : -------------1--0-1--------
283     : ['leader(proposer1)', 'promise(acceptor1,proposer0)', '~promise(acceptor0,proposer1)']
284     : --------------1--0-1-------
284     : ['leader(proposer2)', 'promise(acceptor1,proposer1)', '~promise(acceptor0,proposer2)']
285     : ------------1--0---1-------
285     : ['leader(proposer0)', 'promise(acceptor1,proposer1)', '~promise(acceptor0,proposer0)']
286     : -------------1--0---1------
286     : ['leader(proposer1)', 'promise(acceptor1,proposer2)', '~promise(acceptor0,proposer1)']
287     : ------------1--0----1------
287     : ['leader(proposer0)', 'promise(acceptor1,proposer2)', '~promise(acceptor0,proposer0)']
288     : --------------1-----01-----
288     : ['leader(proposer2)', 'promise(acceptor2,proposer0)', '~promise(acceptor1,proposer2)']
289     : -------------1-----0-1-----
289     : ['leader(proposer1)', 'promise(acceptor2,proposer0)', '~promise(acceptor1,proposer1)']
290     : --------------1-----0-1----
290     : ['leader(proposer2)', 'promise(acceptor2,proposer1)', '~promise(acceptor1,proposer2)']
291     : ------------1-----0---1----
291     : ['leader(proposer0)', 'promise(acceptor2,proposer1)', '~promise(acceptor1,proposer0)']
292     : -------------1-----0---1---
292     : ['leader(proposer1)', 'promise(acceptor2,proposer2)', '~promise(acceptor1,proposer1)']
293     : ------------1-----0----1---
293     : ['leader(proposer0)', 'promise(acceptor2,proposer2)', '~promise(acceptor1,proposer0)']
294     : --------------11----0------
294     : ['leader(proposer2)', 'promise(acceptor0,proposer0)', '~promise(acceptor1,proposer2)']
295     : -------------1-1---0-------
295     : ['leader(proposer1)', 'promise(acceptor0,proposer0)', '~promise(acceptor1,proposer1)']
296     : --------------1-1---0------
296     : ['leader(proposer2)', 'promise(acceptor0,proposer1)', '~promise(acceptor1,proposer2)']
297     : ------------1---1-0--------
297     : ['leader(proposer0)', 'promise(acceptor0,proposer1)', '~promise(acceptor1,proposer0)']
298     : -------------1---1-0-------
298     : ['leader(proposer1)', 'promise(acceptor0,proposer2)', '~promise(acceptor1,proposer1)']
299     : ------------1----10--------
299     : ['leader(proposer0)', 'promise(acceptor0,proposer2)', '~promise(acceptor1,proposer0)']
300     : --------------1---1----0---
300     : ['leader(proposer2)', 'promise(acceptor1,proposer0)', '~promise(acceptor2,proposer2)']
301     : -------------1----1---0----
301     : ['leader(proposer1)', 'promise(acceptor1,proposer0)', '~promise(acceptor2,proposer1)']
302     : --------------1----1---0---
302     : ['leader(proposer2)', 'promise(acceptor1,proposer1)', '~promise(acceptor2,proposer2)']
303     : ------------1------1-0-----
303     : ['leader(proposer0)', 'promise(acceptor1,proposer1)', '~promise(acceptor2,proposer0)']
304     : -------------1------1-0----
304     : ['leader(proposer1)', 'promise(acceptor1,proposer2)', '~promise(acceptor2,proposer1)']
305     : ------------1-------10-----
305     : ['leader(proposer0)', 'promise(acceptor1,proposer2)', '~promise(acceptor2,proposer0)']
306     : --------------11-------0---
306     : ['leader(proposer2)', 'promise(acceptor0,proposer0)', '~promise(acceptor2,proposer2)']
307     : -------------1-1------0----
307     : ['leader(proposer1)', 'promise(acceptor0,proposer0)', '~promise(acceptor2,proposer1)']
308     : --------------1-1------0---
308     : ['leader(proposer2)', 'promise(acceptor0,proposer1)', '~promise(acceptor2,proposer2)']
309     : ------------1---1----0-----
309     : ['leader(proposer0)', 'promise(acceptor0,proposer1)', '~promise(acceptor2,proposer0)']
310     : -------------1---1----0----
310     : ['leader(proposer1)', 'promise(acceptor0,proposer2)', '~promise(acceptor2,proposer1)']
311     : ------------1----1---0-----
311     : ['leader(proposer0)', 'promise(acceptor0,proposer2)', '~promise(acceptor2,proposer0)']
num_forall :   0
num_exists :   0
num_literals : 0
quantified form : None
qcost : 0




---------- QPrime ----------


---------- ConstArgBinding ----------

terms: ['leader(proposer2)', '~promise(acceptor0,proposer2)', 'promise(acceptor2,proposer0)']

sign_func_name2args: {'0$leader': [(Const('proposer2', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))),)], '1$promise': [(Const('acceptor0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Const('proposer2', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))))], '0$promise': [(Const('acceptor2', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Const('proposer0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))))]}

const2sigs: {Const('proposer2', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))): [proposer$0$leader$0$0, proposer$1$promise$1$0], Const('acceptor0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))): [acceptor$1$promise$0$0], Const('acceptor2', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))): [acceptor$0$promise$0$0], Const('proposer0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))): [proposer$0$promise$1$0]}

sig2const: {'proposer$0$leader$0$0': Const('proposer2', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))), 'acceptor$1$promise$0$0': Const('acceptor0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), 'proposer$1$promise$1$0': Const('proposer2', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))), 'acceptor$0$promise$0$0': Const('acceptor2', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), 'proposer$0$promise$1$0': Const('proposer0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))}


---------- ArgPartition ----------

sort2class_sigs: {EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')): [proposer$0$leader$0$0; proposer$1$promise$1$0, proposer$0$promise$1$0], EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')): [acceptor$0$promise$0$0, acceptor$1$promise$0$0]}

sort2part_sig: {EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')): proposer$0$leader$0$0; proposer$1$promise$1$0 | proposer$0$promise$1$0, EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')): acceptor$0$promise$0$0 | acceptor$1$promise$0$0}

part_sig: ('acceptor$0$promise$0$0 | acceptor$1$promise$0$0', 'proposer$0$leader$0$0; proposer$1$promise$1$0 | proposer$0$promise$1$0')


---------- SigGenerator ----------

terms:  ['leader(proposer2)', '~promise(acceptor0,proposer2)', 'promise(acceptor2,proposer0)']

func_name2symbol:  {'leader': Const('leader', FunctionSort(EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')), BooleanSort())), 'promise': Const('promise', FunctionSort(EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')), EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')), BooleanSort()))}

func_name2args_sort:  {'leader': (EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')),), 'promise': (EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')), EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))}

sign_func_name2count:  {'0$leader': 1, '1$promise': 1, '0$promise': 1}


---------- ProductArgPartition ----------

sort2class_sigs: {EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')): [proposer$0$leader$0$0; proposer$1$promise$1$0, proposer$0$promise$1$0], EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')): [acceptor$0$promise$0$0, acceptor$1$promise$0$0]}

sort2part_sig: {EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')): proposer$0$leader$0$0; proposer$1$promise$1$0 | proposer$0$promise$1$0, EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')): acceptor$0$promise$0$0 | acceptor$1$promise$0$0}

	sort: proposer

	identical_classes: {'proposer$0$leader$0; proposer$1$promise$1': [proposer$0$leader$0$0; proposer$1$promise$1$0], 'proposer$0$promise$1': [proposer$0$promise$1$0]}

	identical_single_classes: {'proposer$0$leader$0; proposer$1$promise$1': proposer$0$leader$0$0; proposer$1$promise$1$0, 'proposer$0$promise$1': proposer$0$promise$1$0}

	identical_multi_classes: {}

	sort: acceptor

	identical_classes: {'acceptor$0$promise$0': [acceptor$0$promise$0$0], 'acceptor$1$promise$0': [acceptor$1$promise$0$0]}

	identical_single_classes: {'acceptor$0$promise$0': acceptor$0$promise$0$0, 'acceptor$1$promise$0': acceptor$1$promise$0$0}

	identical_multi_classes: {}


---------- QInference: _set_sort_to_quantifier_mode ----------

quantifier mode: proposer: QuantifierMode.forall

quantifier mode: acceptor: QuantifierMode.forall


---------- QInference: _set_constraint_mode ----------

constraint mode: ConstraintMode.no_merge


---------- QFormula: _set_qvars ----------

forall_qvars: {Var('ACCEPTOR0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Var('PROPOSER0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))), Var('PROPOSER1', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))), Var('ACCEPTOR1', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')))}

exists_qvars: set()


---------- QFormula: _set_signed_func_name_to_args ----------

signed_func_name2args: {'0$leader': [[Var('PROPOSER0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))]], '1$promise': [[Var('ACCEPTOR1', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Var('PROPOSER0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))]], '0$promise': [[Var('ACCEPTOR0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Var('PROPOSER1', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))]]}


---------- QFormula: _set_qterms ----------

qterms: ['promise(ACCEPTOR0,PROPOSER1)', 'leader(PROPOSER0)', '~promise(ACCEPTOR1,PROPOSER0)']


---------- QFormula: get_qclause ----------

qclause: forall ACCEPTOR1,ACCEPTOR0,PROPOSER0,PROPOSER1. ~promise(ACCEPTOR0,PROPOSER1) | ~leader(PROPOSER0) | promise(ACCEPTOR1,PROPOSER0) | (PROPOSER0 = PROPOSER1 | ACCEPTOR0 = ACCEPTOR1)


=== Prime Orbit 19 =====================
size : 36
num_suborbits: 2
312 (*) : --------------1---1--1-----
312     : ['leader(proposer2)', 'promise(acceptor1,proposer0)', 'promise(acceptor2,proposer0)']
313     : -------------1----1--1-----
313     : ['leader(proposer1)', 'promise(acceptor1,proposer0)', 'promise(acceptor2,proposer0)']
314     : --------------1----1--1----
314     : ['leader(proposer2)', 'promise(acceptor1,proposer1)', 'promise(acceptor2,proposer1)']
315     : ------------1------1--1----
315     : ['leader(proposer0)', 'promise(acceptor1,proposer1)', 'promise(acceptor2,proposer1)']
316     : -------------1------1--1---
316     : ['leader(proposer1)', 'promise(acceptor1,proposer2)', 'promise(acceptor2,proposer2)']
317     : ------------1-------1--1---
317     : ['leader(proposer0)', 'promise(acceptor1,proposer2)', 'promise(acceptor2,proposer2)']
318     : --------------11-----1-----
318     : ['leader(proposer2)', 'promise(acceptor0,proposer0)', 'promise(acceptor2,proposer0)']
319     : -------------1-1-----1-----
319     : ['leader(proposer1)', 'promise(acceptor0,proposer0)', 'promise(acceptor2,proposer0)']
320     : --------------1-1-----1----
320     : ['leader(proposer2)', 'promise(acceptor0,proposer1)', 'promise(acceptor2,proposer1)']
321     : ------------1---1-----1----
321     : ['leader(proposer0)', 'promise(acceptor0,proposer1)', 'promise(acceptor2,proposer1)']
322     : -------------1---1-----1---
322     : ['leader(proposer1)', 'promise(acceptor0,proposer2)', 'promise(acceptor2,proposer2)']
323     : ------------1----1-----1---
323     : ['leader(proposer0)', 'promise(acceptor0,proposer2)', 'promise(acceptor2,proposer2)']
324     : --------------11--1--------
324     : ['leader(proposer2)', 'promise(acceptor0,proposer0)', 'promise(acceptor1,proposer0)']
325     : -------------1-1--1--------
325     : ['leader(proposer1)', 'promise(acceptor0,proposer0)', 'promise(acceptor1,proposer0)']
326     : --------------1-1--1-------
326     : ['leader(proposer2)', 'promise(acceptor0,proposer1)', 'promise(acceptor1,proposer1)']
327     : ------------1---1--1-------
327     : ['leader(proposer0)', 'promise(acceptor0,proposer1)', 'promise(acceptor1,proposer1)']
328     : -------------1---1--1------
328     : ['leader(proposer1)', 'promise(acceptor0,proposer2)', 'promise(acceptor1,proposer2)']
329     : ------------1----1--1------
329     : ['leader(proposer0)', 'promise(acceptor0,proposer2)', 'promise(acceptor1,proposer2)']
330 (*) : --------------1----1-1-----
330     : ['leader(proposer2)', 'promise(acceptor1,proposer1)', 'promise(acceptor2,proposer0)']
331     : -------------1------11-----
331     : ['leader(proposer1)', 'promise(acceptor1,proposer2)', 'promise(acceptor2,proposer0)']
332     : --------------1---1---1----
332     : ['leader(proposer2)', 'promise(acceptor1,proposer0)', 'promise(acceptor2,proposer1)']
333     : ------------1-------1-1----
333     : ['leader(proposer0)', 'promise(acceptor1,proposer2)', 'promise(acceptor2,proposer1)']
334     : -------------1----1----1---
334     : ['leader(proposer1)', 'promise(acceptor1,proposer0)', 'promise(acceptor2,proposer2)']
335     : ------------1------1---1---
335     : ['leader(proposer0)', 'promise(acceptor1,proposer1)', 'promise(acceptor2,proposer2)']
336     : --------------1-1----1-----
336     : ['leader(proposer2)', 'promise(acceptor0,proposer1)', 'promise(acceptor2,proposer0)']
337     : -------------1---1---1-----
337     : ['leader(proposer1)', 'promise(acceptor0,proposer2)', 'promise(acceptor2,proposer0)']
338     : --------------11------1----
338     : ['leader(proposer2)', 'promise(acceptor0,proposer0)', 'promise(acceptor2,proposer1)']
339     : ------------1----1----1----
339     : ['leader(proposer0)', 'promise(acceptor0,proposer2)', 'promise(acceptor2,proposer1)']
340     : -------------1-1-------1---
340     : ['leader(proposer1)', 'promise(acceptor0,proposer0)', 'promise(acceptor2,proposer2)']
341     : ------------1---1------1---
341     : ['leader(proposer0)', 'promise(acceptor0,proposer1)', 'promise(acceptor2,proposer2)']
342     : --------------1-1-1--------
342     : ['leader(proposer2)', 'promise(acceptor0,proposer1)', 'promise(acceptor1,proposer0)']
343     : -------------1---11--------
343     : ['leader(proposer1)', 'promise(acceptor0,proposer2)', 'promise(acceptor1,proposer0)']
344     : --------------11---1-------
344     : ['leader(proposer2)', 'promise(acceptor0,proposer0)', 'promise(acceptor1,proposer1)']
345     : ------------1----1-1-------
345     : ['leader(proposer0)', 'promise(acceptor0,proposer2)', 'promise(acceptor1,proposer1)']
346     : -------------1-1----1------
346     : ['leader(proposer1)', 'promise(acceptor0,proposer0)', 'promise(acceptor1,proposer2)']
347     : ------------1---1---1------
347     : ['leader(proposer0)', 'promise(acceptor0,proposer1)', 'promise(acceptor1,proposer2)']
num_forall :   0
num_exists :   0
num_literals : 0
quantified form : None
qcost : 0




---------- QPrime ----------


---------- ConstArgBinding ----------

terms: ['leader(proposer2)', 'promise(acceptor1,proposer0)', 'promise(acceptor2,proposer0)']

sign_func_name2args: {'0$leader': [(Const('proposer2', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))),)], '0$promise': [(Const('acceptor1', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Const('proposer0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))), (Const('acceptor2', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Const('proposer0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))))]}

const2sigs: {Const('proposer2', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))): [proposer$0$leader$0$0], Const('acceptor1', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))): [acceptor$0$promise$0$0], Const('proposer0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))): [proposer$0$promise$1$0, proposer$0$promise$1$1], Const('acceptor2', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))): [acceptor$0$promise$0$1]}

sig2const: {'proposer$0$leader$0$0': Const('proposer2', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))), 'acceptor$0$promise$0$0': Const('acceptor1', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), 'proposer$0$promise$1$0': Const('proposer0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))), 'acceptor$0$promise$0$1': Const('acceptor2', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), 'proposer$0$promise$1$1': Const('proposer0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))}


---------- ArgPartition ----------

sort2class_sigs: {EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')): [proposer$0$leader$0$0, proposer$0$promise$1$0; proposer$0$promise$1$1], EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')): [acceptor$0$promise$0$0, acceptor$0$promise$0$1]}

sort2part_sig: {EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')): proposer$0$leader$0$0 | proposer$0$promise$1$0; proposer$0$promise$1$1, EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')): acceptor$0$promise$0$0 | acceptor$0$promise$0$1}

part_sig: ('acceptor$0$promise$0$0 | acceptor$0$promise$0$1', 'proposer$0$leader$0$0 | proposer$0$promise$1$0; proposer$0$promise$1$1')


---------- QPrime ----------


---------- ConstArgBinding ----------

terms: ['leader(proposer2)', 'promise(acceptor1,proposer1)', 'promise(acceptor2,proposer0)']

sign_func_name2args: {'0$leader': [(Const('proposer2', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))),)], '0$promise': [(Const('acceptor1', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Const('proposer1', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))), (Const('acceptor2', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Const('proposer0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))))]}

const2sigs: {Const('proposer2', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))): [proposer$0$leader$0$0], Const('acceptor1', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))): [acceptor$0$promise$0$0], Const('proposer1', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))): [proposer$0$promise$1$0], Const('acceptor2', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))): [acceptor$0$promise$0$1], Const('proposer0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))): [proposer$0$promise$1$1]}

sig2const: {'proposer$0$leader$0$0': Const('proposer2', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))), 'acceptor$0$promise$0$0': Const('acceptor1', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), 'proposer$0$promise$1$0': Const('proposer1', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))), 'acceptor$0$promise$0$1': Const('acceptor2', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), 'proposer$0$promise$1$1': Const('proposer0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))}


---------- ArgPartition ----------

sort2class_sigs: {EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')): [proposer$0$leader$0$0, proposer$0$promise$1$0, proposer$0$promise$1$1], EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')): [acceptor$0$promise$0$0, acceptor$0$promise$0$1]}

sort2part_sig: {EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')): proposer$0$leader$0$0 | proposer$0$promise$1$0 | proposer$0$promise$1$1, EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')): acceptor$0$promise$0$0 | acceptor$0$promise$0$1}

part_sig: ('acceptor$0$promise$0$0 | acceptor$0$promise$0$1', 'proposer$0$leader$0$0 | proposer$0$promise$1$0 | proposer$0$promise$1$1')


---------- SigGenerator ----------

terms:  ['leader(proposer2)', 'promise(acceptor1,proposer0)', 'promise(acceptor2,proposer0)']

func_name2symbol:  {'leader': Const('leader', FunctionSort(EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')), BooleanSort())), 'promise': Const('promise', FunctionSort(EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')), EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')), BooleanSort()))}

func_name2args_sort:  {'leader': (EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')),), 'promise': (EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')), EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))}

sign_func_name2count:  {'0$leader': 1, '0$promise': 2}


---------- ProductArgPartition ----------

sort2class_sigs: {EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')): [proposer$0$leader$0$0, proposer$0$promise$1$0, proposer$0$promise$1$1], EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')): [acceptor$0$promise$0$0, acceptor$0$promise$0$1]}

sort2part_sig: {EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')): proposer$0$leader$0$0 | proposer$0$promise$1$0 | proposer$0$promise$1$1, EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')): acceptor$0$promise$0$0 | acceptor$0$promise$0$1}

	sort: proposer

	identical_classes: {'proposer$0$leader$0': [proposer$0$leader$0$0], 'proposer$0$promise$1': [proposer$0$promise$1$0, proposer$0$promise$1$1]}

	identical_single_classes: {'proposer$0$leader$0': proposer$0$leader$0$0}

	identical_multi_classes: {'proposer$0$promise$1': [proposer$0$promise$1$0, proposer$0$promise$1$1]}

	sort: acceptor

	identical_classes: {'acceptor$0$promise$0': [acceptor$0$promise$0$0, acceptor$0$promise$0$1]}

	identical_single_classes: {}

	identical_multi_classes: {'acceptor$0$promise$0': [acceptor$0$promise$0$0, acceptor$0$promise$0$1]}


---------- QInference: _set_sort_to_quantifier_mode ----------

quantifier mode: proposer: QuantifierMode.forall

quantifier mode: acceptor: QuantifierMode.forall


---------- QInference: _set_constraint_mode ----------

constraint mode: ConstraintMode.merge


---------- QFormula: _set_qvars ----------

forall_qvars: {Var('ACCEPTOR0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Var('PROPOSER0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))), Var('PROPOSER2', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))), Var('ACCEPTOR1', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Var('PROPOSER1', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))}

exists_qvars: set()


---------- QFormula: _set_signed_func_name_to_args ----------

signed_func_name2args: {'0$leader': [[Var('PROPOSER0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))]], '0$promise': [[Var('ACCEPTOR0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Var('PROPOSER1', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))], [Var('ACCEPTOR1', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Var('PROPOSER2', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))]]}


---------- QFormula: _set_qterms ----------

qterms: ['promise(ACCEPTOR1,PROPOSER2)', 'leader(PROPOSER0)', 'promise(ACCEPTOR0,PROPOSER1)']


---------- QFormula: _get_partition_constraint ----------

partition: ('acceptor$0$promise$0$0 | acceptor$0$promise$0$1', 'proposer$0$leader$0$0 | proposer$0$promise$1$0; proposer$0$promise$1$1')[]

sort partition signature: acceptor$0$promise$0$0 | acceptor$0$promise$0$1

class signature: acceptor$0$promise$0$0


---------- QFormula: _get_class_constraint ----------

qvars: ['ACCEPTOR0:acceptor']

eq_terms: []

class signature: acceptor$0$promise$0$1


---------- QFormula: _get_class_constraint ----------

qvars: ['ACCEPTOR1:acceptor']

eq_terms: []


---------- QFormula: _get_diff_class_constraint ----------

qvars: ['ACCEPTOR0:acceptor', 'ACCEPTOR1:acceptor']

eq_terms: ['ACCEPTOR0:acceptor ~= ACCEPTOR1']

sort partition signature: proposer$0$leader$0$0 | proposer$0$promise$1$0; proposer$0$promise$1$1

class signature: proposer$0$leader$0$0


---------- QFormula: _get_class_constraint ----------

qvars: ['PROPOSER0:proposer']

eq_terms: []

class signature: proposer$0$promise$1$0; proposer$0$promise$1$1


---------- QFormula: _get_class_constraint ----------

qvars: ['PROPOSER1:proposer', 'PROPOSER2:proposer']

eq_terms: ['PROPOSER1:proposer = PROPOSER2']


---------- QFormula: _get_diff_class_constraint ----------

qvars: ['PROPOSER0:proposer', 'PROPOSER1:proposer']

eq_terms: ['PROPOSER0:proposer ~= PROPOSER1']

constraint: ['ACCEPTOR0:acceptor ~= ACCEPTOR1', 'PROPOSER1:proposer = PROPOSER2', 'PROPOSER0:proposer ~= PROPOSER1']


---------- QFormula: _get_partition_constraint ----------

partition: ('acceptor$0$promise$0$0 | acceptor$0$promise$0$1', 'proposer$0$leader$0$0 | proposer$0$promise$1$0 | proposer$0$promise$1$1')[]

sort partition signature: acceptor$0$promise$0$0 | acceptor$0$promise$0$1

class signature: acceptor$0$promise$0$0


---------- QFormula: _get_class_constraint ----------

qvars: ['ACCEPTOR0:acceptor']

eq_terms: []

class signature: acceptor$0$promise$0$1


---------- QFormula: _get_class_constraint ----------

qvars: ['ACCEPTOR1:acceptor']

eq_terms: []


---------- QFormula: _get_diff_class_constraint ----------

qvars: ['ACCEPTOR0:acceptor', 'ACCEPTOR1:acceptor']

eq_terms: ['ACCEPTOR0:acceptor ~= ACCEPTOR1']

sort partition signature: proposer$0$leader$0$0 | proposer$0$promise$1$0 | proposer$0$promise$1$1

class signature: proposer$0$leader$0$0


---------- QFormula: _get_class_constraint ----------

qvars: ['PROPOSER0:proposer']

eq_terms: []

class signature: proposer$0$promise$1$0


---------- QFormula: _get_class_constraint ----------

qvars: ['PROPOSER1:proposer']

eq_terms: []

class signature: proposer$0$promise$1$1


---------- QFormula: _get_class_constraint ----------

qvars: ['PROPOSER2:proposer']

eq_terms: []


---------- QFormula: _get_diff_class_constraint ----------

qvars: ['PROPOSER0:proposer', 'PROPOSER1:proposer', 'PROPOSER2:proposer']

eq_terms: ['PROPOSER1:proposer ~= PROPOSER2', 'PROPOSER0:proposer ~= PROPOSER1', 'PROPOSER0:proposer ~= PROPOSER2']

constraint: ['ACCEPTOR0:acceptor ~= ACCEPTOR1', 'PROPOSER1:proposer ~= PROPOSER2', 'PROPOSER0:proposer ~= PROPOSER1', 'PROPOSER0:proposer ~= PROPOSER2']


---------- QFormula: _get_partition_constraint ----------

partition: ('acceptor$0$promise$0$0 | acceptor$0$promise$0$1', 'proposer$0$leader$0$0 | proposer$0$promise$1$0; proposer$0$promise$1$1')[]

sort partition signature: acceptor$0$promise$0$0 | acceptor$0$promise$0$1

class signature: acceptor$0$promise$0$0


---------- QFormula: _get_class_constraint ----------

qvars: ['ACCEPTOR0:acceptor']

eq_terms: []

class signature: acceptor$0$promise$0$1


---------- QFormula: _get_class_constraint ----------

qvars: ['ACCEPTOR1:acceptor']

eq_terms: []


---------- QFormula: _get_diff_class_constraint ----------

qvars: ['ACCEPTOR0:acceptor', 'ACCEPTOR1:acceptor']

eq_terms: ['ACCEPTOR0:acceptor ~= ACCEPTOR1']

sort partition signature: proposer$0$leader$0$0 | proposer$0$promise$1$0; proposer$0$promise$1$1

class signature: proposer$0$leader$0$0


---------- QFormula: _get_class_constraint ----------

qvars: ['PROPOSER0:proposer']

eq_terms: []

class signature: proposer$0$promise$1$0; proposer$0$promise$1$1


---------- QFormula: _get_class_constraint ----------

qvars: ['PROPOSER1:proposer', 'PROPOSER2:proposer']

eq_terms: ['PROPOSER1:proposer = PROPOSER2']


---------- QFormula: _get_diff_class_constraint ----------

qvars: ['PROPOSER0:proposer', 'PROPOSER1:proposer']

eq_terms: ['PROPOSER0:proposer ~= PROPOSER1']

constraint: ['ACCEPTOR0:acceptor ~= ACCEPTOR1', 'PROPOSER1:proposer = PROPOSER2', 'PROPOSER0:proposer ~= PROPOSER1']


---------- QFormula: _get_partition_constraint ----------

partition: ('acceptor$0$promise$0$0 | acceptor$0$promise$0$1', 'proposer$0$leader$0$0 | proposer$0$promise$1$0 | proposer$0$promise$1$1')[]

sort partition signature: acceptor$0$promise$0$0 | acceptor$0$promise$0$1

class signature: acceptor$0$promise$0$0


---------- QFormula: _get_class_constraint ----------

qvars: ['ACCEPTOR0:acceptor']

eq_terms: []

class signature: acceptor$0$promise$0$1


---------- QFormula: _get_class_constraint ----------

qvars: ['ACCEPTOR1:acceptor']

eq_terms: []


---------- QFormula: _get_diff_class_constraint ----------

qvars: ['ACCEPTOR0:acceptor', 'ACCEPTOR1:acceptor']

eq_terms: ['ACCEPTOR0:acceptor ~= ACCEPTOR1']

sort partition signature: proposer$0$leader$0$0 | proposer$0$promise$1$0 | proposer$0$promise$1$1

class signature: proposer$0$leader$0$0


---------- QFormula: _get_class_constraint ----------

qvars: ['PROPOSER0:proposer']

eq_terms: []

class signature: proposer$0$promise$1$0


---------- QFormula: _get_class_constraint ----------

qvars: ['PROPOSER1:proposer']

eq_terms: []

class signature: proposer$0$promise$1$1


---------- QFormula: _get_class_constraint ----------

qvars: ['PROPOSER2:proposer']

eq_terms: []


---------- QFormula: _get_diff_class_constraint ----------

qvars: ['PROPOSER0:proposer', 'PROPOSER1:proposer', 'PROPOSER2:proposer']

eq_terms: ['PROPOSER1:proposer ~= PROPOSER2', 'PROPOSER0:proposer ~= PROPOSER1', 'PROPOSER0:proposer ~= PROPOSER2']

constraint: ['ACCEPTOR0:acceptor ~= ACCEPTOR1', 'PROPOSER1:proposer ~= PROPOSER2', 'PROPOSER0:proposer ~= PROPOSER1', 'PROPOSER0:proposer ~= PROPOSER2']


---------- QFormula: _get_partition_constraint ----------

partition: ('acceptor$0$promise$0$0; acceptor$0$promise$0$1', 'proposer$0$leader$0$0 | proposer$0$promise$1$0 | proposer$0$promise$1$1')[]

sort partition signature: acceptor$0$promise$0$0; acceptor$0$promise$0$1

class signature: acceptor$0$promise$0$0; acceptor$0$promise$0$1


---------- QFormula: _get_class_constraint ----------

qvars: ['ACCEPTOR0:acceptor', 'ACCEPTOR1:acceptor']

eq_terms: ['ACCEPTOR0:acceptor = ACCEPTOR1']


---------- QFormula: _get_diff_class_constraint ----------

qvars: ['ACCEPTOR0:acceptor']

eq_terms: []

sort partition signature: proposer$0$leader$0$0 | proposer$0$promise$1$0 | proposer$0$promise$1$1

class signature: proposer$0$leader$0$0


---------- QFormula: _get_class_constraint ----------

qvars: ['PROPOSER0:proposer']

eq_terms: []

class signature: proposer$0$promise$1$0


---------- QFormula: _get_class_constraint ----------

qvars: ['PROPOSER1:proposer']

eq_terms: []

class signature: proposer$0$promise$1$1


---------- QFormula: _get_class_constraint ----------

qvars: ['PROPOSER2:proposer']

eq_terms: []


---------- QFormula: _get_diff_class_constraint ----------

qvars: ['PROPOSER0:proposer', 'PROPOSER1:proposer', 'PROPOSER2:proposer']

eq_terms: ['PROPOSER1:proposer ~= PROPOSER2', 'PROPOSER0:proposer ~= PROPOSER1', 'PROPOSER0:proposer ~= PROPOSER2']

constraint: ['ACCEPTOR0:acceptor = ACCEPTOR1', 'PROPOSER1:proposer ~= PROPOSER2', 'PROPOSER0:proposer ~= PROPOSER1', 'PROPOSER0:proposer ~= PROPOSER2']


---------- QFormula: _get_partition_constraint ----------

partition: ('acceptor$0$promise$0$0; acceptor$0$promise$0$1', 'proposer$0$leader$0$0 | proposer$0$promise$1$0 | proposer$0$promise$1$1')[]

sort partition signature: acceptor$0$promise$0$0; acceptor$0$promise$0$1

class signature: acceptor$0$promise$0$0; acceptor$0$promise$0$1


---------- QFormula: _get_class_constraint ----------

qvars: ['ACCEPTOR0:acceptor', 'ACCEPTOR1:acceptor']

eq_terms: ['ACCEPTOR0:acceptor = ACCEPTOR1']


---------- QFormula: _get_diff_class_constraint ----------

qvars: ['ACCEPTOR0:acceptor']

eq_terms: []

sort partition signature: proposer$0$leader$0$0 | proposer$0$promise$1$0 | proposer$0$promise$1$1

class signature: proposer$0$leader$0$0


---------- QFormula: _get_class_constraint ----------

qvars: ['PROPOSER0:proposer']

eq_terms: []

class signature: proposer$0$promise$1$0


---------- QFormula: _get_class_constraint ----------

qvars: ['PROPOSER1:proposer']

eq_terms: []

class signature: proposer$0$promise$1$1


---------- QFormula: _get_class_constraint ----------

qvars: ['PROPOSER2:proposer']

eq_terms: []


---------- QFormula: _get_diff_class_constraint ----------

qvars: ['PROPOSER0:proposer', 'PROPOSER1:proposer', 'PROPOSER2:proposer']

eq_terms: ['PROPOSER1:proposer ~= PROPOSER2', 'PROPOSER0:proposer ~= PROPOSER1', 'PROPOSER0:proposer ~= PROPOSER2']

constraint: ['ACCEPTOR0:acceptor = ACCEPTOR1', 'PROPOSER1:proposer ~= PROPOSER2', 'PROPOSER0:proposer ~= PROPOSER1', 'PROPOSER0:proposer ~= PROPOSER2']


---------- QFormula: _get_partition_constraint ----------

partition: ('acceptor$0$promise$0$0; acceptor$0$promise$0$1', 'proposer$0$leader$0$0 | proposer$0$promise$1$0; proposer$0$promise$1$1')[]

sort partition signature: acceptor$0$promise$0$0; acceptor$0$promise$0$1

class signature: acceptor$0$promise$0$0; acceptor$0$promise$0$1


---------- QFormula: _get_class_constraint ----------

qvars: ['ACCEPTOR0:acceptor', 'ACCEPTOR1:acceptor']

eq_terms: ['ACCEPTOR0:acceptor = ACCEPTOR1']


---------- QFormula: _get_diff_class_constraint ----------

qvars: ['ACCEPTOR0:acceptor']

eq_terms: []

sort partition signature: proposer$0$leader$0$0 | proposer$0$promise$1$0; proposer$0$promise$1$1

class signature: proposer$0$leader$0$0


---------- QFormula: _get_class_constraint ----------

qvars: ['PROPOSER0:proposer']

eq_terms: []

class signature: proposer$0$promise$1$0; proposer$0$promise$1$1


---------- QFormula: _get_class_constraint ----------

qvars: ['PROPOSER1:proposer', 'PROPOSER2:proposer']

eq_terms: ['PROPOSER1:proposer = PROPOSER2']


---------- QFormula: _get_diff_class_constraint ----------

qvars: ['PROPOSER0:proposer', 'PROPOSER1:proposer']

eq_terms: ['PROPOSER0:proposer ~= PROPOSER1']

constraint: ['ACCEPTOR0:acceptor = ACCEPTOR1', 'PROPOSER1:proposer = PROPOSER2', 'PROPOSER0:proposer ~= PROPOSER1']


---------- QFormula: get_qclause ----------

qclause: forall PROPOSER2,PROPOSER1,ACCEPTOR1,ACCEPTOR0,PROPOSER0. ~promise(ACCEPTOR1,PROPOSER2) | ~leader(PROPOSER0) | ~promise(ACCEPTOR0,PROPOSER1) | ((ACCEPTOR0 = ACCEPTOR1 | PROPOSER1 ~= PROPOSER2 | PROPOSER0 = PROPOSER1) & (ACCEPTOR0 = ACCEPTOR1 | PROPOSER1 = PROPOSER2 | PROPOSER0 = PROPOSER1 | PROPOSER0 = PROPOSER2))


=== Prime Orbit 21 =====================
size : 9
num_suborbits: 1
357 (*) : ------------1--0--0--------
357     : ['leader(proposer0)', '~promise(acceptor0,proposer0)', '~promise(acceptor1,proposer0)']
358     : -------------1--0--0-------
358     : ['leader(proposer1)', '~promise(acceptor0,proposer1)', '~promise(acceptor1,proposer1)']
359     : --------------1--0--0------
359     : ['leader(proposer2)', '~promise(acceptor0,proposer2)', '~promise(acceptor1,proposer2)']
360     : ------------1--0-----0-----
360     : ['leader(proposer0)', '~promise(acceptor0,proposer0)', '~promise(acceptor2,proposer0)']
361     : -------------1--0-----0----
361     : ['leader(proposer1)', '~promise(acceptor0,proposer1)', '~promise(acceptor2,proposer1)']
362     : --------------1--0-----0---
362     : ['leader(proposer2)', '~promise(acceptor0,proposer2)', '~promise(acceptor2,proposer2)']
363     : ------------1-----0--0-----
363     : ['leader(proposer0)', '~promise(acceptor1,proposer0)', '~promise(acceptor2,proposer0)']
364     : -------------1-----0--0----
364     : ['leader(proposer1)', '~promise(acceptor1,proposer1)', '~promise(acceptor2,proposer1)']
365     : --------------1-----0--0---
365     : ['leader(proposer2)', '~promise(acceptor1,proposer2)', '~promise(acceptor2,proposer2)']
num_forall :   0
num_exists :   0
num_literals : 0
quantified form : None
qcost : 0




---------- QPrime ----------


---------- ConstArgBinding ----------

terms: ['leader(proposer0)', '~promise(acceptor0,proposer0)', '~promise(acceptor1,proposer0)']

sign_func_name2args: {'0$leader': [(Const('proposer0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))),)], '1$promise': [(Const('acceptor0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Const('proposer0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))), (Const('acceptor1', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Const('proposer0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))))]}

const2sigs: {Const('proposer0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))): [proposer$0$leader$0$0, proposer$1$promise$1$0, proposer$1$promise$1$1], Const('acceptor0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))): [acceptor$1$promise$0$0], Const('acceptor1', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))): [acceptor$1$promise$0$1]}

sig2const: {'proposer$0$leader$0$0': Const('proposer0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))), 'acceptor$1$promise$0$0': Const('acceptor0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), 'proposer$1$promise$1$0': Const('proposer0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))), 'acceptor$1$promise$0$1': Const('acceptor1', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), 'proposer$1$promise$1$1': Const('proposer0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))}


---------- ArgPartition ----------

sort2class_sigs: {EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')): [proposer$0$leader$0$0; proposer$1$promise$1$0; proposer$1$promise$1$1], EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')): [acceptor$1$promise$0$0, acceptor$1$promise$0$1]}

sort2part_sig: {EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')): proposer$0$leader$0$0; proposer$1$promise$1$0; proposer$1$promise$1$1, EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')): acceptor$1$promise$0$0 | acceptor$1$promise$0$1}

part_sig: ('acceptor$1$promise$0$0 | acceptor$1$promise$0$1', 'proposer$0$leader$0$0; proposer$1$promise$1$0; proposer$1$promise$1$1')


---------- SigGenerator ----------

terms:  ['leader(proposer0)', '~promise(acceptor0,proposer0)', '~promise(acceptor1,proposer0)']

func_name2symbol:  {'leader': Const('leader', FunctionSort(EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')), BooleanSort())), 'promise': Const('promise', FunctionSort(EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')), EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')), BooleanSort()))}

func_name2args_sort:  {'leader': (EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')),), 'promise': (EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')), EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))}

sign_func_name2count:  {'0$leader': 1, '1$promise': 2}


---------- ProductArgPartition ----------

sort2class_sigs: {EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')): [proposer$0$leader$0$0; proposer$1$promise$1$0; proposer$1$promise$1$1], EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')): [acceptor$1$promise$0$0, acceptor$1$promise$0$1]}

sort2part_sig: {EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')): proposer$0$leader$0$0; proposer$1$promise$1$0; proposer$1$promise$1$1, EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')): acceptor$1$promise$0$0 | acceptor$1$promise$0$1}

	sort: proposer

	identical_classes: {'proposer$0$leader$0; proposer$1$promise$1; proposer$1$promise$1': [proposer$0$leader$0$0; proposer$1$promise$1$0; proposer$1$promise$1$1]}

	identical_single_classes: {'proposer$0$leader$0; proposer$1$promise$1; proposer$1$promise$1': proposer$0$leader$0$0; proposer$1$promise$1$0; proposer$1$promise$1$1}

	identical_multi_classes: {}

	sort: acceptor

	identical_classes: {'acceptor$1$promise$0': [acceptor$1$promise$0$0, acceptor$1$promise$0$1]}

	identical_single_classes: {}

	identical_multi_classes: {'acceptor$1$promise$0': [acceptor$1$promise$0$0, acceptor$1$promise$0$1]}


---------- QInference: _set_sort_to_quantifier_mode ----------

quantifier mode: proposer: QuantifierMode.forall

quantifier mode: acceptor: QuantifierMode.forall


---------- QInference: _set_constraint_mode ----------

constraint mode: ConstraintMode.no_merge


---------- QFormula: _set_qvars ----------

forall_qvars: {Var('ACCEPTOR0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Var('PROPOSER0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))), Var('ACCEPTOR1', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')))}

exists_qvars: set()


---------- QFormula: _set_signed_func_name_to_args ----------

signed_func_name2args: {'0$leader': [[Var('PROPOSER0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))]], '1$promise': [[Var('ACCEPTOR0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Var('PROPOSER0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))], [Var('ACCEPTOR1', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Var('PROPOSER0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))]]}


---------- QFormula: _set_qterms ----------

qterms: ['leader(PROPOSER0)', '~promise(ACCEPTOR0,PROPOSER0)', '~promise(ACCEPTOR1,PROPOSER0)']


---------- QFormula: get_qclause ----------

qclause: forall ACCEPTOR1,ACCEPTOR0,PROPOSER0. ~leader(PROPOSER0) | promise(ACCEPTOR0,PROPOSER0) | promise(ACCEPTOR1,PROPOSER0) | ACCEPTOR0 = ACCEPTOR1


=== Prime Orbit 22 =====================
size : 9
num_suborbits: 1
366 (*) : ---------11--1-------------
366     : ['didNotPromise(acceptor0)', 'didNotPromise(acceptor1)', 'leader(proposer1)']
367     : ---------11---1------------
367     : ['didNotPromise(acceptor0)', 'didNotPromise(acceptor1)', 'leader(proposer2)']
368     : ---------11-1--------------
368     : ['didNotPromise(acceptor0)', 'didNotPromise(acceptor1)', 'leader(proposer0)']
369     : ---------1-1-1-------------
369     : ['didNotPromise(acceptor0)', 'didNotPromise(acceptor2)', 'leader(proposer1)']
370     : ---------1-1--1------------
370     : ['didNotPromise(acceptor0)', 'didNotPromise(acceptor2)', 'leader(proposer2)']
371     : ---------1-11--------------
371     : ['didNotPromise(acceptor0)', 'didNotPromise(acceptor2)', 'leader(proposer0)']
372     : ----------11-1-------------
372     : ['didNotPromise(acceptor1)', 'didNotPromise(acceptor2)', 'leader(proposer1)']
373     : ----------11--1------------
373     : ['didNotPromise(acceptor1)', 'didNotPromise(acceptor2)', 'leader(proposer2)']
374     : ----------111--------------
374     : ['didNotPromise(acceptor1)', 'didNotPromise(acceptor2)', 'leader(proposer0)']
num_forall :   0
num_exists :   0
num_literals : 0
quantified form : None
qcost : 0




---------- QPrime ----------


---------- ConstArgBinding ----------

terms: ['didNotPromise(acceptor0)', 'didNotPromise(acceptor1)', 'leader(proposer1)']

sign_func_name2args: {'0$didNotPromise': [(Const('acceptor0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))),), (Const('acceptor1', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))),)], '0$leader': [(Const('proposer1', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))),)]}

const2sigs: {Const('acceptor0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))): [acceptor$0$didNotPromise$0$0], Const('acceptor1', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))): [acceptor$0$didNotPromise$0$1], Const('proposer1', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))): [proposer$0$leader$0$0]}

sig2const: {'acceptor$0$didNotPromise$0$0': Const('acceptor0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), 'acceptor$0$didNotPromise$0$1': Const('acceptor1', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), 'proposer$0$leader$0$0': Const('proposer1', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))}


---------- ArgPartition ----------

sort2class_sigs: {EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')): [acceptor$0$didNotPromise$0$0, acceptor$0$didNotPromise$0$1], EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')): [proposer$0$leader$0$0]}

sort2part_sig: {EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')): acceptor$0$didNotPromise$0$0 | acceptor$0$didNotPromise$0$1, EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')): proposer$0$leader$0$0}

part_sig: ('acceptor$0$didNotPromise$0$0 | acceptor$0$didNotPromise$0$1', 'proposer$0$leader$0$0')


---------- SigGenerator ----------

terms:  ['didNotPromise(acceptor0)', 'didNotPromise(acceptor1)', 'leader(proposer1)']

func_name2symbol:  {'didNotPromise': Const('didNotPromise', FunctionSort(EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')), BooleanSort())), 'leader': Const('leader', FunctionSort(EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')), BooleanSort()))}

func_name2args_sort:  {'didNotPromise': (EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')),), 'leader': (EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')),)}

sign_func_name2count:  {'0$didNotPromise': 2, '0$leader': 1}


---------- ProductArgPartition ----------

sort2class_sigs: {EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')): [acceptor$0$didNotPromise$0$0, acceptor$0$didNotPromise$0$1], EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')): [proposer$0$leader$0$0]}

sort2part_sig: {EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')): acceptor$0$didNotPromise$0$0 | acceptor$0$didNotPromise$0$1, EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')): proposer$0$leader$0$0}

	sort: acceptor

	identical_classes: {'acceptor$0$didNotPromise$0': [acceptor$0$didNotPromise$0$0, acceptor$0$didNotPromise$0$1]}

	identical_single_classes: {}

	identical_multi_classes: {'acceptor$0$didNotPromise$0': [acceptor$0$didNotPromise$0$0, acceptor$0$didNotPromise$0$1]}

	sort: proposer

	identical_classes: {'proposer$0$leader$0': [proposer$0$leader$0$0]}

	identical_single_classes: {'proposer$0$leader$0': proposer$0$leader$0$0}

	identical_multi_classes: {}


---------- QInference: _set_sort_to_quantifier_mode ----------

quantifier mode: acceptor: QuantifierMode.forall

quantifier mode: proposer: QuantifierMode.forall


---------- QInference: _set_constraint_mode ----------

constraint mode: ConstraintMode.no_merge


---------- QFormula: _set_qvars ----------

forall_qvars: {Var('ACCEPTOR0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Var('PROPOSER0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))), Var('ACCEPTOR1', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')))}

exists_qvars: set()


---------- QFormula: _set_signed_func_name_to_args ----------

signed_func_name2args: {'0$didNotPromise': [[Var('ACCEPTOR0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')))], [Var('ACCEPTOR1', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')))]], '0$leader': [[Var('PROPOSER0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))]]}


---------- QFormula: _set_qterms ----------

qterms: ['leader(PROPOSER0)', 'didNotPromise(ACCEPTOR1)', 'didNotPromise(ACCEPTOR0)']


---------- QFormula: get_qclause ----------

qclause: forall ACCEPTOR1,ACCEPTOR0,PROPOSER0. ~leader(PROPOSER0) | ~didNotPromise(ACCEPTOR1) | ~didNotPromise(ACCEPTOR0) | ACCEPTOR0 = ACCEPTOR1


=== Prime Orbit 23 =====================
size : 9
num_suborbits: 1
375 (*) : ---------0------00------0--
375     : ['~didNotPromise(acceptor0)', '~promise(acceptor0,proposer1)', '~promise(acceptor0,proposer2)', '~start(proposer0)']
376     : ---------0-----0-0-------0-
376     : ['~didNotPromise(acceptor0)', '~promise(acceptor0,proposer0)', '~promise(acceptor0,proposer2)', '~start(proposer1)']
377     : ---------0-----00---------0
377     : ['~didNotPromise(acceptor0)', '~promise(acceptor0,proposer0)', '~promise(acceptor0,proposer1)', '~start(proposer2)']
378     : ----------0--------00---0--
378     : ['~didNotPromise(acceptor1)', '~promise(acceptor1,proposer1)', '~promise(acceptor1,proposer2)', '~start(proposer0)']
379     : ----------0-------0-0----0-
379     : ['~didNotPromise(acceptor1)', '~promise(acceptor1,proposer0)', '~promise(acceptor1,proposer2)', '~start(proposer1)']
380     : ----------0-------00------0
380     : ['~didNotPromise(acceptor1)', '~promise(acceptor1,proposer0)', '~promise(acceptor1,proposer1)', '~start(proposer2)']
381     : -----------0----------000--
381     : ['~didNotPromise(acceptor2)', '~promise(acceptor2,proposer1)', '~promise(acceptor2,proposer2)', '~start(proposer0)']
382     : -----------0---------0-0-0-
382     : ['~didNotPromise(acceptor2)', '~promise(acceptor2,proposer0)', '~promise(acceptor2,proposer2)', '~start(proposer1)']
383     : -----------0---------00---0
383     : ['~didNotPromise(acceptor2)', '~promise(acceptor2,proposer0)', '~promise(acceptor2,proposer1)', '~start(proposer2)']
num_forall :   0
num_exists :   0
num_literals : 0
quantified form : None
qcost : 0




---------- QPrime ----------


---------- ConstArgBinding ----------

terms: ['~didNotPromise(acceptor0)', '~promise(acceptor0,proposer1)', '~promise(acceptor0,proposer2)', '~start(proposer0)']

sign_func_name2args: {'1$didNotPromise': [(Const('acceptor0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))),)], '1$promise': [(Const('acceptor0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Const('proposer1', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))), (Const('acceptor0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Const('proposer2', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))))], '1$start': [(Const('proposer0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))),)]}

const2sigs: {Const('acceptor0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))): [acceptor$1$didNotPromise$0$0, acceptor$1$promise$0$0, acceptor$1$promise$0$1], Const('proposer1', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))): [proposer$1$promise$1$0], Const('proposer2', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))): [proposer$1$promise$1$1], Const('proposer0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))): [proposer$1$start$0$0]}

sig2const: {'acceptor$1$didNotPromise$0$0': Const('acceptor0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), 'acceptor$1$promise$0$0': Const('acceptor0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), 'proposer$1$promise$1$0': Const('proposer1', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))), 'acceptor$1$promise$0$1': Const('acceptor0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), 'proposer$1$promise$1$1': Const('proposer2', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))), 'proposer$1$start$0$0': Const('proposer0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))}


---------- ArgPartition ----------

sort2class_sigs: {EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')): [acceptor$1$didNotPromise$0$0; acceptor$1$promise$0$0; acceptor$1$promise$0$1], EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')): [proposer$1$promise$1$0, proposer$1$promise$1$1, proposer$1$start$0$0]}

sort2part_sig: {EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')): acceptor$1$didNotPromise$0$0; acceptor$1$promise$0$0; acceptor$1$promise$0$1, EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')): proposer$1$promise$1$0 | proposer$1$promise$1$1 | proposer$1$start$0$0}

part_sig: ('acceptor$1$didNotPromise$0$0; acceptor$1$promise$0$0; acceptor$1$promise$0$1', 'proposer$1$promise$1$0 | proposer$1$promise$1$1 | proposer$1$start$0$0')


---------- SigGenerator ----------

terms:  ['~didNotPromise(acceptor0)', '~promise(acceptor0,proposer1)', '~promise(acceptor0,proposer2)', '~start(proposer0)']

func_name2symbol:  {'didNotPromise': Const('didNotPromise', FunctionSort(EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')), BooleanSort())), 'promise': Const('promise', FunctionSort(EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')), EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')), BooleanSort())), 'start': Const('start', FunctionSort(EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')), BooleanSort()))}

func_name2args_sort:  {'didNotPromise': (EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')),), 'promise': (EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')), EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))), 'start': (EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')),)}

sign_func_name2count:  {'1$didNotPromise': 1, '1$promise': 2, '1$start': 1}


---------- ProductArgPartition ----------

sort2class_sigs: {EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')): [acceptor$1$didNotPromise$0$0; acceptor$1$promise$0$0; acceptor$1$promise$0$1], EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')): [proposer$1$promise$1$0, proposer$1$promise$1$1, proposer$1$start$0$0]}

sort2part_sig: {EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')): acceptor$1$didNotPromise$0$0; acceptor$1$promise$0$0; acceptor$1$promise$0$1, EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')): proposer$1$promise$1$0 | proposer$1$promise$1$1 | proposer$1$start$0$0}

	sort: acceptor

	identical_classes: {'acceptor$1$didNotPromise$0; acceptor$1$promise$0; acceptor$1$promise$0': [acceptor$1$didNotPromise$0$0; acceptor$1$promise$0$0; acceptor$1$promise$0$1]}

	identical_single_classes: {'acceptor$1$didNotPromise$0; acceptor$1$promise$0; acceptor$1$promise$0': acceptor$1$didNotPromise$0$0; acceptor$1$promise$0$0; acceptor$1$promise$0$1}

	identical_multi_classes: {}

	sort: proposer

	identical_classes: {'proposer$1$promise$1': [proposer$1$promise$1$0, proposer$1$promise$1$1], 'proposer$1$start$0': [proposer$1$start$0$0]}

	identical_single_classes: {'proposer$1$start$0': proposer$1$start$0$0}

	identical_multi_classes: {'proposer$1$promise$1': [proposer$1$promise$1$0, proposer$1$promise$1$1]}


---------- QInference: _set_sort_to_quantifier_mode ----------

quantifier mode: acceptor: QuantifierMode.forall

quantifier mode: proposer: QuantifierMode.forall_exists


---------- QInference: _set_constraint_mode ----------

constraint mode: ConstraintMode.no_merge


---------- QFormula: _set_qvars ----------

forall_qvars: {Var('ACCEPTOR0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Var('PROPOSER1', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))}

exists_qvars: {Var('PROPOSER0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))}


---------- QFormula: _set_signed_func_name_to_args ----------

signed_func_name2args: {'1$didNotPromise': [[Var('ACCEPTOR0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')))]], '1$promise': [[Var('ACCEPTOR0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Var('PROPOSER0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))], [Var('ACCEPTOR0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Var('PROPOSER0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))]], '1$start': [[Var('PROPOSER1', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))]]}


---------- QFormula: _set_qterms ----------

qterms: ['~start(PROPOSER1)', '~didNotPromise(ACCEPTOR0)', '~promise(ACCEPTOR0,PROPOSER0)']


---------- QFormula: get_qclause ----------

qclause: forall ACCEPTOR0,PROPOSER1. start(PROPOSER1) | didNotPromise(ACCEPTOR0) | (exists PROPOSER0. (promise(ACCEPTOR0,PROPOSER0) & PROPOSER0 ~= PROPOSER1))


=== Prime Orbit 24 =====================
size : 9
num_suborbits: 1
384 (*) : ----------0--------0----0-0
384     : ['~didNotPromise(acceptor1)', '~promise(acceptor1,proposer1)', '~start(proposer0)', '~start(proposer2)']
385     : ----------0---------0---00-
385     : ['~didNotPromise(acceptor1)', '~promise(acceptor1,proposer2)', '~start(proposer0)', '~start(proposer1)']
386     : ----------0-------0------00
386     : ['~didNotPromise(acceptor1)', '~promise(acceptor1,proposer0)', '~start(proposer1)', '~start(proposer2)']
387     : -----------0----------0-0-0
387     : ['~didNotPromise(acceptor2)', '~promise(acceptor2,proposer1)', '~start(proposer0)', '~start(proposer2)']
388     : -----------0-----------000-
388     : ['~didNotPromise(acceptor2)', '~promise(acceptor2,proposer2)', '~start(proposer0)', '~start(proposer1)']
389     : -----------0---------0---00
389     : ['~didNotPromise(acceptor2)', '~promise(acceptor2,proposer0)', '~start(proposer1)', '~start(proposer2)']
390     : ---------0------0-------0-0
390     : ['~didNotPromise(acceptor0)', '~promise(acceptor0,proposer1)', '~start(proposer0)', '~start(proposer2)']
391     : ---------0-------0------00-
391     : ['~didNotPromise(acceptor0)', '~promise(acceptor0,proposer2)', '~start(proposer0)', '~start(proposer1)']
392     : ---------0-----0---------00
392     : ['~didNotPromise(acceptor0)', '~promise(acceptor0,proposer0)', '~start(proposer1)', '~start(proposer2)']
num_forall :   0
num_exists :   0
num_literals : 0
quantified form : None
qcost : 0




---------- QPrime ----------


---------- ConstArgBinding ----------

terms: ['~didNotPromise(acceptor1)', '~promise(acceptor1,proposer1)', '~start(proposer0)', '~start(proposer2)']

sign_func_name2args: {'1$didNotPromise': [(Const('acceptor1', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))),)], '1$promise': [(Const('acceptor1', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Const('proposer1', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))))], '1$start': [(Const('proposer0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))),), (Const('proposer2', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))),)]}

const2sigs: {Const('acceptor1', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))): [acceptor$1$didNotPromise$0$0, acceptor$1$promise$0$0], Const('proposer1', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))): [proposer$1$promise$1$0], Const('proposer0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))): [proposer$1$start$0$0], Const('proposer2', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))): [proposer$1$start$0$1]}

sig2const: {'acceptor$1$didNotPromise$0$0': Const('acceptor1', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), 'acceptor$1$promise$0$0': Const('acceptor1', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), 'proposer$1$promise$1$0': Const('proposer1', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))), 'proposer$1$start$0$0': Const('proposer0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))), 'proposer$1$start$0$1': Const('proposer2', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))}


---------- ArgPartition ----------

sort2class_sigs: {EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')): [acceptor$1$didNotPromise$0$0; acceptor$1$promise$0$0], EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')): [proposer$1$promise$1$0, proposer$1$start$0$0, proposer$1$start$0$1]}

sort2part_sig: {EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')): acceptor$1$didNotPromise$0$0; acceptor$1$promise$0$0, EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')): proposer$1$promise$1$0 | proposer$1$start$0$0 | proposer$1$start$0$1}

part_sig: ('acceptor$1$didNotPromise$0$0; acceptor$1$promise$0$0', 'proposer$1$promise$1$0 | proposer$1$start$0$0 | proposer$1$start$0$1')


---------- SigGenerator ----------

terms:  ['~didNotPromise(acceptor1)', '~promise(acceptor1,proposer1)', '~start(proposer0)', '~start(proposer2)']

func_name2symbol:  {'didNotPromise': Const('didNotPromise', FunctionSort(EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')), BooleanSort())), 'promise': Const('promise', FunctionSort(EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')), EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')), BooleanSort())), 'start': Const('start', FunctionSort(EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')), BooleanSort()))}

func_name2args_sort:  {'didNotPromise': (EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')),), 'promise': (EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')), EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))), 'start': (EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')),)}

sign_func_name2count:  {'1$didNotPromise': 1, '1$promise': 1, '1$start': 2}


---------- ProductArgPartition ----------

sort2class_sigs: {EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')): [acceptor$1$didNotPromise$0$0; acceptor$1$promise$0$0], EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')): [proposer$1$promise$1$0, proposer$1$start$0$0, proposer$1$start$0$1]}

sort2part_sig: {EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')): acceptor$1$didNotPromise$0$0; acceptor$1$promise$0$0, EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')): proposer$1$promise$1$0 | proposer$1$start$0$0 | proposer$1$start$0$1}

	sort: acceptor

	identical_classes: {'acceptor$1$didNotPromise$0; acceptor$1$promise$0': [acceptor$1$didNotPromise$0$0; acceptor$1$promise$0$0]}

	identical_single_classes: {'acceptor$1$didNotPromise$0; acceptor$1$promise$0': acceptor$1$didNotPromise$0$0; acceptor$1$promise$0$0}

	identical_multi_classes: {}

	sort: proposer

	identical_classes: {'proposer$1$promise$1': [proposer$1$promise$1$0], 'proposer$1$start$0': [proposer$1$start$0$0, proposer$1$start$0$1]}

	identical_single_classes: {'proposer$1$promise$1': proposer$1$promise$1$0}

	identical_multi_classes: {'proposer$1$start$0': [proposer$1$start$0$0, proposer$1$start$0$1]}


---------- QInference: _set_sort_to_quantifier_mode ----------

quantifier mode: acceptor: QuantifierMode.forall

quantifier mode: proposer: QuantifierMode.forall_exists


---------- QInference: _set_constraint_mode ----------

constraint mode: ConstraintMode.no_merge


---------- QFormula: _set_qvars ----------

forall_qvars: {Var('ACCEPTOR0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Var('PROPOSER1', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))}

exists_qvars: {Var('PROPOSER0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))}


---------- QFormula: _set_signed_func_name_to_args ----------

signed_func_name2args: {'1$didNotPromise': [[Var('ACCEPTOR0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')))]], '1$promise': [[Var('ACCEPTOR0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Var('PROPOSER1', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))]], '1$start': [[Var('PROPOSER0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))], [Var('PROPOSER0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))]]}


---------- QFormula: _set_qterms ----------

qterms: ['~promise(ACCEPTOR0,PROPOSER1)', '~start(PROPOSER0)', '~didNotPromise(ACCEPTOR0)']


---------- QFormula: get_qclause ----------

qclause: forall ACCEPTOR0,PROPOSER1. promise(ACCEPTOR0,PROPOSER1) | didNotPromise(ACCEPTOR0) | (exists PROPOSER0. (start(PROPOSER0) & PROPOSER0 ~= PROPOSER1))


=== Prime Orbit 26 =====================
size : 3
num_suborbits: 1
396 (*) : ----------0-------------000
396     : ['~didNotPromise(acceptor1)', '~start(proposer0)', '~start(proposer1)', '~start(proposer2)']
397     : -----------0------------000
397     : ['~didNotPromise(acceptor2)', '~start(proposer0)', '~start(proposer1)', '~start(proposer2)']
398     : ---------0--------------000
398     : ['~didNotPromise(acceptor0)', '~start(proposer0)', '~start(proposer1)', '~start(proposer2)']
num_forall :   0
num_exists :   0
num_literals : 0
quantified form : None
qcost : 0




---------- QPrime ----------


---------- ConstArgBinding ----------

terms: ['~didNotPromise(acceptor1)', '~start(proposer0)', '~start(proposer1)', '~start(proposer2)']

sign_func_name2args: {'1$didNotPromise': [(Const('acceptor1', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))),)], '1$start': [(Const('proposer0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))),), (Const('proposer1', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))),), (Const('proposer2', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))),)]}

const2sigs: {Const('acceptor1', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))): [acceptor$1$didNotPromise$0$0], Const('proposer0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))): [proposer$1$start$0$0], Const('proposer1', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))): [proposer$1$start$0$1], Const('proposer2', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))): [proposer$1$start$0$2]}

sig2const: {'acceptor$1$didNotPromise$0$0': Const('acceptor1', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), 'proposer$1$start$0$0': Const('proposer0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))), 'proposer$1$start$0$1': Const('proposer1', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))), 'proposer$1$start$0$2': Const('proposer2', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))}


---------- ArgPartition ----------

sort2class_sigs: {EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')): [acceptor$1$didNotPromise$0$0], EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')): [proposer$1$start$0$0, proposer$1$start$0$1, proposer$1$start$0$2]}

sort2part_sig: {EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')): acceptor$1$didNotPromise$0$0, EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')): proposer$1$start$0$0 | proposer$1$start$0$1 | proposer$1$start$0$2}

part_sig: ('acceptor$1$didNotPromise$0$0', 'proposer$1$start$0$0 | proposer$1$start$0$1 | proposer$1$start$0$2')


---------- SigGenerator ----------

terms:  ['~didNotPromise(acceptor1)', '~start(proposer0)', '~start(proposer1)', '~start(proposer2)']

func_name2symbol:  {'didNotPromise': Const('didNotPromise', FunctionSort(EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')), BooleanSort())), 'start': Const('start', FunctionSort(EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')), BooleanSort()))}

func_name2args_sort:  {'didNotPromise': (EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')),), 'start': (EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')),)}

sign_func_name2count:  {'1$didNotPromise': 1, '1$start': 3}


---------- ProductArgPartition ----------

sort2class_sigs: {EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')): [acceptor$1$didNotPromise$0$0], EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')): [proposer$1$start$0$0, proposer$1$start$0$1, proposer$1$start$0$2]}

sort2part_sig: {EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')): acceptor$1$didNotPromise$0$0, EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')): proposer$1$start$0$0 | proposer$1$start$0$1 | proposer$1$start$0$2}

	sort: acceptor

	identical_classes: {'acceptor$1$didNotPromise$0': [acceptor$1$didNotPromise$0$0]}

	identical_single_classes: {'acceptor$1$didNotPromise$0': acceptor$1$didNotPromise$0$0}

	identical_multi_classes: {}

	sort: proposer

	identical_classes: {'proposer$1$start$0': [proposer$1$start$0$0, proposer$1$start$0$1, proposer$1$start$0$2]}

	identical_single_classes: {}

	identical_multi_classes: {'proposer$1$start$0': [proposer$1$start$0$0, proposer$1$start$0$1, proposer$1$start$0$2]}


---------- QInference: _set_sort_to_quantifier_mode ----------

quantifier mode: acceptor: QuantifierMode.forall

quantifier mode: proposer: QuantifierMode.exists


---------- QInference: _set_constraint_mode ----------

constraint mode: ConstraintMode.no_merge


---------- QFormula: _set_qvars ----------

forall_qvars: {Var('ACCEPTOR0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')))}

exists_qvars: {Var('PROPOSER0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))}


---------- QFormula: _set_signed_func_name_to_args ----------

signed_func_name2args: {'1$didNotPromise': [[Var('ACCEPTOR0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')))]], '1$start': [[Var('PROPOSER0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))], [Var('PROPOSER0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))], [Var('PROPOSER0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))]]}


---------- QFormula: _set_qterms ----------

qterms: ['~start(PROPOSER0)', '~didNotPromise(ACCEPTOR0)']


---------- QFormula: get_qclause ----------

qclause: forall ACCEPTOR0. (exists PROPOSER0. start(PROPOSER0) | didNotPromise(ACCEPTOR0))


=== Prime Orbit 27 =====================
size : 9
num_suborbits: 1
399 (*) : --0-----0-----1-----1------
399     : ['leader(proposer2)', 'promise(acceptor1,proposer2)', '~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)']
400     : -0-----0-----1-----1-------
400     : ['leader(proposer1)', 'promise(acceptor1,proposer1)', '~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)']
401     : 0-----0-----1-----1--------
401     : ['leader(proposer0)', 'promise(acceptor1,proposer0)', '~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)']
402     : -----0--0-----1--------1---
402     : ['leader(proposer2)', 'promise(acceptor2,proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)']
403     : ----0--0-----1--------1----
403     : ['leader(proposer1)', 'promise(acceptor2,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)']
404     : ---0--0-----1--------1-----
404     : ['leader(proposer0)', 'promise(acceptor2,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)']
405     : --0--0--------1--1---------
405     : ['leader(proposer2)', 'promise(acceptor0,proposer2)', '~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)']
406     : -0--0--------1--1----------
406     : ['leader(proposer1)', 'promise(acceptor0,proposer1)', '~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)']
407     : 0--0--------1--1-----------
407     : ['leader(proposer0)', 'promise(acceptor0,proposer0)', '~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)']
num_forall :   0
num_exists :   0
num_literals : 0
quantified form : None
qcost : 0




---------- QPrime ----------


---------- ConstArgBinding ----------

terms: ['~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', 'leader(proposer2)', 'promise(acceptor1,proposer2)', 'member(acceptor1,quorum__acceptor0_acceptor1)', 'member(acceptor1,quorum__acceptor1_acceptor2)']

sign_func_name2args: {'1$chosenAt': [(Const('quorum__acceptor0_acceptor1', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), Const('proposer2', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))), (Const('quorum__acceptor1_acceptor2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), Const('proposer2', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))))], '0$leader': [(Const('proposer2', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))),)], '0$promise': [(Const('acceptor1', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Const('proposer2', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))))], '0$member': [(Const('acceptor1', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Const('quorum__acceptor0_acceptor1', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')))), (Const('acceptor1', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Const('quorum__acceptor1_acceptor2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))))]}

const2sigs: {Const('quorum__acceptor0_acceptor1', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))): [quorum$1$chosenAt$0$0, quorum$0$member$1$0], Const('proposer2', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))): [proposer$1$chosenAt$1$0, proposer$1$chosenAt$1$1, proposer$0$leader$0$0, proposer$0$promise$1$0], Const('quorum__acceptor1_acceptor2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))): [quorum$1$chosenAt$0$1, quorum$0$member$1$1], Const('acceptor1', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))): [acceptor$0$promise$0$0, acceptor$0$member$0$0, acceptor$0$member$0$1]}

sig2const: {'quorum$1$chosenAt$0$0': Const('quorum__acceptor0_acceptor1', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), 'proposer$1$chosenAt$1$0': Const('proposer2', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))), 'quorum$1$chosenAt$0$1': Const('quorum__acceptor1_acceptor2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), 'proposer$1$chosenAt$1$1': Const('proposer2', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))), 'proposer$0$leader$0$0': Const('proposer2', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))), 'acceptor$0$promise$0$0': Const('acceptor1', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), 'proposer$0$promise$1$0': Const('proposer2', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))), 'acceptor$0$member$0$0': Const('acceptor1', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), 'quorum$0$member$1$0': Const('quorum__acceptor0_acceptor1', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), 'acceptor$0$member$0$1': Const('acceptor1', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), 'quorum$0$member$1$1': Const('quorum__acceptor1_acceptor2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')))}


---------- ArgPartition ----------

sort2class_sigs: {EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')): [quorum$0$member$1$0; quorum$1$chosenAt$0$0, quorum$0$member$1$1; quorum$1$chosenAt$0$1], EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')): [proposer$0$leader$0$0; proposer$0$promise$1$0; proposer$1$chosenAt$1$0; proposer$1$chosenAt$1$1], EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')): [acceptor$0$member$0$0; acceptor$0$member$0$1; acceptor$0$promise$0$0]}

sort2part_sig: {EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')): quorum$0$member$1$0; quorum$1$chosenAt$0$0 | quorum$0$member$1$1; quorum$1$chosenAt$0$1, EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')): proposer$0$leader$0$0; proposer$0$promise$1$0; proposer$1$chosenAt$1$0; proposer$1$chosenAt$1$1, EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')): acceptor$0$member$0$0; acceptor$0$member$0$1; acceptor$0$promise$0$0}

part_sig: ('acceptor$0$member$0$0; acceptor$0$member$0$1; acceptor$0$promise$0$0', 'proposer$0$leader$0$0; proposer$0$promise$1$0; proposer$1$chosenAt$1$0; proposer$1$chosenAt$1$1', 'quorum$0$member$1$0; quorum$1$chosenAt$0$0 | quorum$0$member$1$1; quorum$1$chosenAt$0$1')


---------- SigGenerator ----------

terms:  ['~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', 'leader(proposer2)', 'promise(acceptor1,proposer2)', 'member(acceptor1,quorum__acceptor0_acceptor1)', 'member(acceptor1,quorum__acceptor1_acceptor2)']

func_name2symbol:  {'chosenAt': Const('chosenAt', FunctionSort(EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')), EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')), BooleanSort())), 'leader': Const('leader', FunctionSort(EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')), BooleanSort())), 'promise': Const('promise', FunctionSort(EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')), EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')), BooleanSort())), 'member': Const('member', FunctionSort(EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')), EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')), BooleanSort()))}

func_name2args_sort:  {'chosenAt': (EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')), EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))), 'leader': (EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')),), 'promise': (EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')), EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))), 'member': (EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')), EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')))}

sign_func_name2count:  {'1$chosenAt': 2, '0$leader': 1, '0$promise': 1, '0$member': 2}


---------- ProductArgPartition ----------

sort2class_sigs: {EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')): [quorum$0$member$1$0; quorum$1$chosenAt$0$0, quorum$0$member$1$1; quorum$1$chosenAt$0$1], EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')): [proposer$0$leader$0$0; proposer$0$promise$1$0; proposer$1$chosenAt$1$0; proposer$1$chosenAt$1$1], EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')): [acceptor$0$member$0$0; acceptor$0$member$0$1; acceptor$0$promise$0$0]}

sort2part_sig: {EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')): quorum$0$member$1$0; quorum$1$chosenAt$0$0 | quorum$0$member$1$1; quorum$1$chosenAt$0$1, EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')): proposer$0$leader$0$0; proposer$0$promise$1$0; proposer$1$chosenAt$1$0; proposer$1$chosenAt$1$1, EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')): acceptor$0$member$0$0; acceptor$0$member$0$1; acceptor$0$promise$0$0}

	sort: quorum

	identical_classes: {'quorum$0$member$1; quorum$1$chosenAt$0': [quorum$0$member$1$0; quorum$1$chosenAt$0$0, quorum$0$member$1$1; quorum$1$chosenAt$0$1]}

	identical_single_classes: {}

	identical_multi_classes: {'quorum$0$member$1; quorum$1$chosenAt$0': [quorum$0$member$1$0, quorum$1$chosenAt$0$0, quorum$0$member$1$1, quorum$1$chosenAt$0$1]}

	sort: proposer

	identical_classes: {'proposer$0$leader$0; proposer$0$promise$1; proposer$1$chosenAt$1; proposer$1$chosenAt$1': [proposer$0$leader$0$0; proposer$0$promise$1$0; proposer$1$chosenAt$1$0; proposer$1$chosenAt$1$1]}

	identical_single_classes: {'proposer$0$leader$0; proposer$0$promise$1; proposer$1$chosenAt$1; proposer$1$chosenAt$1': proposer$0$leader$0$0; proposer$0$promise$1$0; proposer$1$chosenAt$1$0; proposer$1$chosenAt$1$1}

	identical_multi_classes: {}

	sort: acceptor

	identical_classes: {'acceptor$0$member$0; acceptor$0$member$0; acceptor$0$promise$0': [acceptor$0$member$0$0; acceptor$0$member$0$1; acceptor$0$promise$0$0]}

	identical_single_classes: {'acceptor$0$member$0; acceptor$0$member$0; acceptor$0$promise$0': acceptor$0$member$0$0; acceptor$0$member$0$1; acceptor$0$promise$0$0}

	identical_multi_classes: {}


---------- QInference: _set_sort_to_quantifier_mode ----------

quantifier mode: quorum: QuantifierMode.forall

quantifier mode: proposer: QuantifierMode.forall

quantifier mode: acceptor: QuantifierMode.forall


---------- QInference: _set_constraint_mode ----------

constraint mode: ConstraintMode.no_merge


---------- QFormula: _set_qvars ----------

forall_qvars: {Var('ACCEPTOR0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Var('QUORUM1', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), Var('PROPOSER0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))), Var('QUORUM0', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')))}

exists_qvars: set()


---------- QFormula: _set_signed_func_name_to_args ----------

signed_func_name2args: {'1$chosenAt': [[Var('QUORUM0', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), Var('PROPOSER0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))], [Var('QUORUM1', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), Var('PROPOSER0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))]], '0$leader': [[Var('PROPOSER0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))]], '0$promise': [[Var('ACCEPTOR0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Var('PROPOSER0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))]], '0$member': [[Var('ACCEPTOR0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Var('QUORUM0', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')))], [Var('ACCEPTOR0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Var('QUORUM1', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')))]]}


---------- QFormula: _set_qterms ----------

qterms: ['~chosenAt(QUORUM1,PROPOSER0)', 'member(ACCEPTOR0,QUORUM0)', 'leader(PROPOSER0)', '~chosenAt(QUORUM0,PROPOSER0)', 'promise(ACCEPTOR0,PROPOSER0)', 'member(ACCEPTOR0,QUORUM1)']


---------- QFormula: get_qclause ----------

qclause: forall QUORUM1,ACCEPTOR0,PROPOSER0,QUORUM0. chosenAt(QUORUM1,PROPOSER0) | ~member(ACCEPTOR0,QUORUM0) | ~leader(PROPOSER0) | chosenAt(QUORUM0,PROPOSER0) | ~promise(ACCEPTOR0,PROPOSER0) | ~member(ACCEPTOR0,QUORUM1) | QUORUM0 = QUORUM1


=== Prime Orbit 28 =====================
size : 3
num_suborbits: 1
408 (*) : --0--0--0-----1------------
408     : ['leader(proposer2)', '~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)']
409     : -0--0--0-----1-------------
409     : ['leader(proposer1)', '~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)']
410     : 0--0--0-----1--------------
410     : ['leader(proposer0)', '~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)']
num_forall :   0
num_exists :   0
num_literals : 0
quantified form : None
qcost : 0




---------- QPrime ----------


---------- ConstArgBinding ----------

terms: ['~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', 'leader(proposer2)']

sign_func_name2args: {'1$chosenAt': [(Const('quorum__acceptor0_acceptor1', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), Const('proposer2', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))), (Const('quorum__acceptor0_acceptor2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), Const('proposer2', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))), (Const('quorum__acceptor1_acceptor2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), Const('proposer2', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))))], '0$leader': [(Const('proposer2', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))),)]}

const2sigs: {Const('quorum__acceptor0_acceptor1', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))): [quorum$1$chosenAt$0$0], Const('proposer2', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))): [proposer$1$chosenAt$1$0, proposer$1$chosenAt$1$1, proposer$1$chosenAt$1$2, proposer$0$leader$0$0], Const('quorum__acceptor0_acceptor2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))): [quorum$1$chosenAt$0$1], Const('quorum__acceptor1_acceptor2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))): [quorum$1$chosenAt$0$2]}

sig2const: {'quorum$1$chosenAt$0$0': Const('quorum__acceptor0_acceptor1', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), 'proposer$1$chosenAt$1$0': Const('proposer2', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))), 'quorum$1$chosenAt$0$1': Const('quorum__acceptor0_acceptor2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), 'proposer$1$chosenAt$1$1': Const('proposer2', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))), 'quorum$1$chosenAt$0$2': Const('quorum__acceptor1_acceptor2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), 'proposer$1$chosenAt$1$2': Const('proposer2', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))), 'proposer$0$leader$0$0': Const('proposer2', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))}


---------- ArgPartition ----------

sort2class_sigs: {EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')): [quorum$1$chosenAt$0$0, quorum$1$chosenAt$0$1, quorum$1$chosenAt$0$2], EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')): [proposer$0$leader$0$0; proposer$1$chosenAt$1$0; proposer$1$chosenAt$1$1; proposer$1$chosenAt$1$2]}

sort2part_sig: {EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')): quorum$1$chosenAt$0$0 | quorum$1$chosenAt$0$1 | quorum$1$chosenAt$0$2, EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')): proposer$0$leader$0$0; proposer$1$chosenAt$1$0; proposer$1$chosenAt$1$1; proposer$1$chosenAt$1$2}

part_sig: ('proposer$0$leader$0$0; proposer$1$chosenAt$1$0; proposer$1$chosenAt$1$1; proposer$1$chosenAt$1$2', 'quorum$1$chosenAt$0$0 | quorum$1$chosenAt$0$1 | quorum$1$chosenAt$0$2')


---------- SigGenerator ----------

terms:  ['~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', 'leader(proposer2)']

func_name2symbol:  {'chosenAt': Const('chosenAt', FunctionSort(EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')), EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')), BooleanSort())), 'leader': Const('leader', FunctionSort(EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')), BooleanSort()))}

func_name2args_sort:  {'chosenAt': (EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')), EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))), 'leader': (EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')),)}

sign_func_name2count:  {'1$chosenAt': 3, '0$leader': 1}


---------- ProductArgPartition ----------

sort2class_sigs: {EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')): [quorum$1$chosenAt$0$0, quorum$1$chosenAt$0$1, quorum$1$chosenAt$0$2], EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')): [proposer$0$leader$0$0; proposer$1$chosenAt$1$0; proposer$1$chosenAt$1$1; proposer$1$chosenAt$1$2]}

sort2part_sig: {EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')): quorum$1$chosenAt$0$0 | quorum$1$chosenAt$0$1 | quorum$1$chosenAt$0$2, EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')): proposer$0$leader$0$0; proposer$1$chosenAt$1$0; proposer$1$chosenAt$1$1; proposer$1$chosenAt$1$2}

	sort: quorum

	identical_classes: {'quorum$1$chosenAt$0': [quorum$1$chosenAt$0$0, quorum$1$chosenAt$0$1, quorum$1$chosenAt$0$2]}

	identical_single_classes: {}

	identical_multi_classes: {'quorum$1$chosenAt$0': [quorum$1$chosenAt$0$0, quorum$1$chosenAt$0$1, quorum$1$chosenAt$0$2]}

	sort: proposer

	identical_classes: {'proposer$0$leader$0; proposer$1$chosenAt$1; proposer$1$chosenAt$1; proposer$1$chosenAt$1': [proposer$0$leader$0$0; proposer$1$chosenAt$1$0; proposer$1$chosenAt$1$1; proposer$1$chosenAt$1$2]}

	identical_single_classes: {'proposer$0$leader$0; proposer$1$chosenAt$1; proposer$1$chosenAt$1; proposer$1$chosenAt$1': proposer$0$leader$0$0; proposer$1$chosenAt$1$0; proposer$1$chosenAt$1$1; proposer$1$chosenAt$1$2}

	identical_multi_classes: {}


---------- QInference: _set_sort_to_quantifier_mode ----------

quantifier mode: quorum: QuantifierMode.exists

quantifier mode: proposer: QuantifierMode.forall


---------- QInference: _set_constraint_mode ----------

constraint mode: ConstraintMode.no_merge


---------- QFormula: _set_qvars ----------

forall_qvars: {Var('PROPOSER0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))}

exists_qvars: {Var('QUORUM0', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')))}


---------- QFormula: _set_signed_func_name_to_args ----------

signed_func_name2args: {'1$chosenAt': [[Var('QUORUM0', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), Var('PROPOSER0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))], [Var('QUORUM0', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), Var('PROPOSER0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))], [Var('QUORUM0', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), Var('PROPOSER0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))]], '0$leader': [[Var('PROPOSER0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))]]}


---------- QFormula: _set_qterms ----------

qterms: ['leader(PROPOSER0)', '~chosenAt(QUORUM0,PROPOSER0)']


---------- QFormula: get_qclause ----------

qclause: forall PROPOSER0. (exists QUORUM0. ~leader(PROPOSER0) | chosenAt(QUORUM0,PROPOSER0))


=== Prime Orbit 29 =====================
size : 36
num_suborbits: 1
411 (*) : --0-------0------1-0----0--
411     : ['promise(acceptor0,proposer2)', '~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~didNotPromise(acceptor1)', '~promise(acceptor1,proposer1)', '~start(proposer0)']
412     : -0--------0-----1---0---0--
412     : ['promise(acceptor0,proposer1)', '~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~didNotPromise(acceptor1)', '~promise(acceptor1,proposer2)', '~start(proposer0)']
413     : --0-------0------10------0-
413     : ['promise(acceptor0,proposer2)', '~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~didNotPromise(acceptor1)', '~promise(acceptor1,proposer0)', '~start(proposer1)']
414     : 0---------0----1----0----0-
414     : ['promise(acceptor0,proposer0)', '~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~didNotPromise(acceptor1)', '~promise(acceptor1,proposer2)', '~start(proposer1)']
415     : -0--------0-----1-0-------0
415     : ['promise(acceptor0,proposer1)', '~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~didNotPromise(acceptor1)', '~promise(acceptor1,proposer0)', '~start(proposer2)']
416     : 0---------0----1---0------0
416     : ['promise(acceptor0,proposer0)', '~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~didNotPromise(acceptor1)', '~promise(acceptor1,proposer1)', '~start(proposer2)']
417     : -----0-----0-----1----0-0--
417     : ['promise(acceptor0,proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~didNotPromise(acceptor2)', '~promise(acceptor2,proposer1)', '~start(proposer0)']
418     : ----0------0----1------00--
418     : ['promise(acceptor0,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~didNotPromise(acceptor2)', '~promise(acceptor2,proposer2)', '~start(proposer0)']
419     : -----0-----0-----1---0---0-
419     : ['promise(acceptor0,proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~didNotPromise(acceptor2)', '~promise(acceptor2,proposer0)', '~start(proposer1)']
420     : ---0-------0---1-------0-0-
420     : ['promise(acceptor0,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~didNotPromise(acceptor2)', '~promise(acceptor2,proposer2)', '~start(proposer1)']
421     : ----0------0----1----0----0
421     : ['promise(acceptor0,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~didNotPromise(acceptor2)', '~promise(acceptor2,proposer0)', '~start(proposer2)']
422     : ---0-------0---1------0---0
422     : ['promise(acceptor0,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~didNotPromise(acceptor2)', '~promise(acceptor2,proposer1)', '~start(proposer2)']
423     : --0------0------0---1---0--
423     : ['promise(acceptor1,proposer2)', '~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~didNotPromise(acceptor0)', '~promise(acceptor0,proposer1)', '~start(proposer0)']
424     : -0-------0-------0-1----0--
424     : ['promise(acceptor1,proposer1)', '~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~didNotPromise(acceptor0)', '~promise(acceptor0,proposer2)', '~start(proposer0)']
425     : --0------0-----0----1----0-
425     : ['promise(acceptor1,proposer2)', '~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~didNotPromise(acceptor0)', '~promise(acceptor0,proposer0)', '~start(proposer1)']
426     : 0--------0-------01------0-
426     : ['promise(acceptor1,proposer0)', '~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~didNotPromise(acceptor0)', '~promise(acceptor0,proposer2)', '~start(proposer1)']
427     : -0-------0-----0---1------0
427     : ['promise(acceptor1,proposer1)', '~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~didNotPromise(acceptor0)', '~promise(acceptor0,proposer0)', '~start(proposer2)']
428     : 0--------0------0-1-------0
428     : ['promise(acceptor1,proposer0)', '~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~didNotPromise(acceptor0)', '~promise(acceptor0,proposer1)', '~start(proposer2)']
429     : --------0--0--------1-0-0--
429     : ['promise(acceptor1,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor2)', '~promise(acceptor2,proposer1)', '~start(proposer0)']
430     : -------0---0-------1---00--
430     : ['promise(acceptor1,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor2)', '~promise(acceptor2,proposer2)', '~start(proposer0)']
431     : --------0--0--------10---0-
431     : ['promise(acceptor1,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor2)', '~promise(acceptor2,proposer0)', '~start(proposer1)']
432     : ------0----0------1----0-0-
432     : ['promise(acceptor1,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor2)', '~promise(acceptor2,proposer2)', '~start(proposer1)']
433     : -------0---0-------1-0----0
433     : ['promise(acceptor1,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor2)', '~promise(acceptor2,proposer0)', '~start(proposer2)']
434     : ------0----0------1---0---0
434     : ['promise(acceptor1,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor2)', '~promise(acceptor2,proposer1)', '~start(proposer2)']
435     : -----0---0------0------10--
435     : ['promise(acceptor2,proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~didNotPromise(acceptor0)', '~promise(acceptor0,proposer1)', '~start(proposer0)']
436     : ----0----0-------0----1-0--
436     : ['promise(acceptor2,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~didNotPromise(acceptor0)', '~promise(acceptor0,proposer2)', '~start(proposer0)']
437     : -----0---0-----0-------1-0-
437     : ['promise(acceptor2,proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~didNotPromise(acceptor0)', '~promise(acceptor0,proposer0)', '~start(proposer1)']
438     : ---0-----0-------0---1---0-
438     : ['promise(acceptor2,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~didNotPromise(acceptor0)', '~promise(acceptor0,proposer2)', '~start(proposer1)']
439     : ----0----0-----0------1---0
439     : ['promise(acceptor2,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~didNotPromise(acceptor0)', '~promise(acceptor0,proposer0)', '~start(proposer2)']
440     : ---0-----0------0----1----0
440     : ['promise(acceptor2,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~didNotPromise(acceptor0)', '~promise(acceptor0,proposer1)', '~start(proposer2)']
441     : --------0-0--------0---10--
441     : ['promise(acceptor2,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor1)', '~promise(acceptor1,proposer1)', '~start(proposer0)']
442     : -------0--0---------0-1-0--
442     : ['promise(acceptor2,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor1)', '~promise(acceptor1,proposer2)', '~start(proposer0)']
443     : --------0-0-------0----1-0-
443     : ['promise(acceptor2,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor1)', '~promise(acceptor1,proposer0)', '~start(proposer1)']
444     : ------0---0---------01---0-
444     : ['promise(acceptor2,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor1)', '~promise(acceptor1,proposer2)', '~start(proposer1)']
445     : -------0--0-------0---1---0
445     : ['promise(acceptor2,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor1)', '~promise(acceptor1,proposer0)', '~start(proposer2)']
446     : ------0---0--------0-1----0
446     : ['promise(acceptor2,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor1)', '~promise(acceptor1,proposer1)', '~start(proposer2)']
num_forall :   0
num_exists :   0
num_literals : 0
quantified form : None
qcost : 0




---------- QPrime ----------


---------- ConstArgBinding ----------

terms: ['~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~didNotPromise(acceptor1)', 'promise(acceptor0,proposer2)', '~promise(acceptor1,proposer1)', '~start(proposer0)', 'member(acceptor0,quorum__acceptor0_acceptor1)', 'member(acceptor1,quorum__acceptor0_acceptor1)']

sign_func_name2args: {'1$chosenAt': [(Const('quorum__acceptor0_acceptor1', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), Const('proposer2', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))))], '1$didNotPromise': [(Const('acceptor1', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))),)], '0$promise': [(Const('acceptor0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Const('proposer2', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))))], '1$promise': [(Const('acceptor1', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Const('proposer1', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))))], '1$start': [(Const('proposer0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))),)], '0$member': [(Const('acceptor0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Const('quorum__acceptor0_acceptor1', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')))), (Const('acceptor1', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Const('quorum__acceptor0_acceptor1', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))))]}

const2sigs: {Const('quorum__acceptor0_acceptor1', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))): [quorum$1$chosenAt$0$0, quorum$0$member$1$0, quorum$0$member$1$1], Const('proposer2', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))): [proposer$1$chosenAt$1$0, proposer$0$promise$1$0], Const('acceptor1', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))): [acceptor$1$didNotPromise$0$0, acceptor$1$promise$0$0, acceptor$0$member$0$1], Const('acceptor0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))): [acceptor$0$promise$0$0, acceptor$0$member$0$0], Const('proposer1', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))): [proposer$1$promise$1$0], Const('proposer0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))): [proposer$1$start$0$0]}

sig2const: {'quorum$1$chosenAt$0$0': Const('quorum__acceptor0_acceptor1', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), 'proposer$1$chosenAt$1$0': Const('proposer2', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))), 'acceptor$1$didNotPromise$0$0': Const('acceptor1', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), 'acceptor$0$promise$0$0': Const('acceptor0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), 'proposer$0$promise$1$0': Const('proposer2', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))), 'acceptor$1$promise$0$0': Const('acceptor1', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), 'proposer$1$promise$1$0': Const('proposer1', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))), 'proposer$1$start$0$0': Const('proposer0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))), 'acceptor$0$member$0$0': Const('acceptor0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), 'quorum$0$member$1$0': Const('quorum__acceptor0_acceptor1', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), 'acceptor$0$member$0$1': Const('acceptor1', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), 'quorum$0$member$1$1': Const('quorum__acceptor0_acceptor1', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')))}


---------- ArgPartition ----------

sort2class_sigs: {EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')): [quorum$0$member$1$0; quorum$0$member$1$1; quorum$1$chosenAt$0$0], EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')): [proposer$0$promise$1$0; proposer$1$chosenAt$1$0, proposer$1$promise$1$0, proposer$1$start$0$0], EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')): [acceptor$0$member$0$0; acceptor$0$promise$0$0, acceptor$0$member$0$1; acceptor$1$didNotPromise$0$0; acceptor$1$promise$0$0]}

sort2part_sig: {EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')): quorum$0$member$1$0; quorum$0$member$1$1; quorum$1$chosenAt$0$0, EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')): proposer$0$promise$1$0; proposer$1$chosenAt$1$0 | proposer$1$promise$1$0 | proposer$1$start$0$0, EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')): acceptor$0$member$0$0; acceptor$0$promise$0$0 | acceptor$0$member$0$1; acceptor$1$didNotPromise$0$0; acceptor$1$promise$0$0}

part_sig: ('acceptor$0$member$0$0; acceptor$0$promise$0$0 | acceptor$0$member$0$1; acceptor$1$didNotPromise$0$0; acceptor$1$promise$0$0', 'proposer$0$promise$1$0; proposer$1$chosenAt$1$0 | proposer$1$promise$1$0 | proposer$1$start$0$0', 'quorum$0$member$1$0; quorum$0$member$1$1; quorum$1$chosenAt$0$0')


---------- SigGenerator ----------

terms:  ['~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~didNotPromise(acceptor1)', 'promise(acceptor0,proposer2)', '~promise(acceptor1,proposer1)', '~start(proposer0)', 'member(acceptor0,quorum__acceptor0_acceptor1)', 'member(acceptor1,quorum__acceptor0_acceptor1)']

func_name2symbol:  {'chosenAt': Const('chosenAt', FunctionSort(EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')), EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')), BooleanSort())), 'didNotPromise': Const('didNotPromise', FunctionSort(EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')), BooleanSort())), 'promise': Const('promise', FunctionSort(EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')), EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')), BooleanSort())), 'start': Const('start', FunctionSort(EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')), BooleanSort())), 'member': Const('member', FunctionSort(EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')), EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')), BooleanSort()))}

func_name2args_sort:  {'chosenAt': (EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')), EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))), 'didNotPromise': (EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')),), 'promise': (EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')), EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))), 'start': (EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')),), 'member': (EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')), EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')))}

sign_func_name2count:  {'1$chosenAt': 1, '1$didNotPromise': 1, '0$promise': 1, '1$promise': 1, '1$start': 1, '0$member': 2}


---------- ProductArgPartition ----------

sort2class_sigs: {EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')): [quorum$0$member$1$0; quorum$0$member$1$1; quorum$1$chosenAt$0$0], EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')): [proposer$0$promise$1$0; proposer$1$chosenAt$1$0, proposer$1$promise$1$0, proposer$1$start$0$0], EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')): [acceptor$0$member$0$0; acceptor$0$promise$0$0, acceptor$0$member$0$1; acceptor$1$didNotPromise$0$0; acceptor$1$promise$0$0]}

sort2part_sig: {EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')): quorum$0$member$1$0; quorum$0$member$1$1; quorum$1$chosenAt$0$0, EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')): proposer$0$promise$1$0; proposer$1$chosenAt$1$0 | proposer$1$promise$1$0 | proposer$1$start$0$0, EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')): acceptor$0$member$0$0; acceptor$0$promise$0$0 | acceptor$0$member$0$1; acceptor$1$didNotPromise$0$0; acceptor$1$promise$0$0}

	sort: quorum

	identical_classes: {'quorum$0$member$1; quorum$0$member$1; quorum$1$chosenAt$0': [quorum$0$member$1$0; quorum$0$member$1$1; quorum$1$chosenAt$0$0]}

	identical_single_classes: {'quorum$0$member$1; quorum$0$member$1; quorum$1$chosenAt$0': quorum$0$member$1$0; quorum$0$member$1$1; quorum$1$chosenAt$0$0}

	identical_multi_classes: {}

	sort: proposer

	identical_classes: {'proposer$0$promise$1; proposer$1$chosenAt$1': [proposer$0$promise$1$0; proposer$1$chosenAt$1$0], 'proposer$1$promise$1': [proposer$1$promise$1$0], 'proposer$1$start$0': [proposer$1$start$0$0]}

	identical_single_classes: {'proposer$0$promise$1; proposer$1$chosenAt$1': proposer$0$promise$1$0; proposer$1$chosenAt$1$0, 'proposer$1$promise$1': proposer$1$promise$1$0, 'proposer$1$start$0': proposer$1$start$0$0}

	identical_multi_classes: {}

	sort: acceptor

	identical_classes: {'acceptor$0$member$0; acceptor$0$promise$0': [acceptor$0$member$0$0; acceptor$0$promise$0$0], 'acceptor$0$member$0; acceptor$1$didNotPromise$0; acceptor$1$promise$0': [acceptor$0$member$0$1; acceptor$1$didNotPromise$0$0; acceptor$1$promise$0$0]}

	identical_single_classes: {'acceptor$0$member$0; acceptor$0$promise$0': acceptor$0$member$0$0; acceptor$0$promise$0$0, 'acceptor$0$member$0; acceptor$1$didNotPromise$0; acceptor$1$promise$0': acceptor$0$member$0$1; acceptor$1$didNotPromise$0$0; acceptor$1$promise$0$0}

	identical_multi_classes: {}


---------- QInference: _set_sort_to_quantifier_mode ----------

quantifier mode: quorum: QuantifierMode.forall

quantifier mode: proposer: QuantifierMode.forall

quantifier mode: acceptor: QuantifierMode.forall


---------- QInference: _set_constraint_mode ----------

constraint mode: ConstraintMode.no_merge


---------- QFormula: _set_qvars ----------

forall_qvars: {Var('ACCEPTOR0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Var('PROPOSER0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))), Var('QUORUM0', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), Var('PROPOSER2', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))), Var('ACCEPTOR1', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Var('PROPOSER1', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))}

exists_qvars: set()


---------- QFormula: _set_signed_func_name_to_args ----------

signed_func_name2args: {'1$chosenAt': [[Var('QUORUM0', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), Var('PROPOSER0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))]], '1$didNotPromise': [[Var('ACCEPTOR1', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')))]], '0$promise': [[Var('ACCEPTOR0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Var('PROPOSER0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))]], '1$promise': [[Var('ACCEPTOR1', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Var('PROPOSER1', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))]], '1$start': [[Var('PROPOSER2', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))]], '0$member': [[Var('ACCEPTOR0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Var('QUORUM0', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')))], [Var('ACCEPTOR1', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Var('QUORUM0', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')))]]}


---------- QFormula: _set_qterms ----------

qterms: ['~promise(ACCEPTOR1,PROPOSER1)', '~start(PROPOSER2)', 'member(ACCEPTOR0,QUORUM0)', 'member(ACCEPTOR1,QUORUM0)', '~didNotPromise(ACCEPTOR1)', '~chosenAt(QUORUM0,PROPOSER0)', 'promise(ACCEPTOR0,PROPOSER0)']


---------- QFormula: get_qclause ----------

qclause: forall QUORUM0,PROPOSER2,PROPOSER1,ACCEPTOR1,ACCEPTOR0,PROPOSER0. promise(ACCEPTOR1,PROPOSER1) | start(PROPOSER2) | ~member(ACCEPTOR0,QUORUM0) | ~member(ACCEPTOR1,QUORUM0) | didNotPromise(ACCEPTOR1) | chosenAt(QUORUM0,PROPOSER0) | ~promise(ACCEPTOR0,PROPOSER0) | (PROPOSER1 = PROPOSER2 | PROPOSER0 = PROPOSER1 | PROPOSER0 = PROPOSER2 | ACCEPTOR0 = ACCEPTOR1)


=== Prime Orbit 30 =====================
size : 18
num_suborbits: 1
447 (*) : -----0-----0-----1------00-
447     : ['promise(acceptor0,proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~didNotPromise(acceptor2)', '~start(proposer0)', '~start(proposer1)']
448     : ----0------0----1-------0-0
448     : ['promise(acceptor0,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~didNotPromise(acceptor2)', '~start(proposer0)', '~start(proposer2)']
449     : ---0-------0---1---------00
449     : ['promise(acceptor0,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~didNotPromise(acceptor2)', '~start(proposer1)', '~start(proposer2)']
450     : --0-------0------1------00-
450     : ['promise(acceptor0,proposer2)', '~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~didNotPromise(acceptor1)', '~start(proposer0)', '~start(proposer1)']
451     : -0--------0-----1-------0-0
451     : ['promise(acceptor0,proposer1)', '~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~didNotPromise(acceptor1)', '~start(proposer0)', '~start(proposer2)']
452     : 0---------0----1---------00
452     : ['promise(acceptor0,proposer0)', '~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~didNotPromise(acceptor1)', '~start(proposer1)', '~start(proposer2)']
453     : --------0--0--------1---00-
453     : ['promise(acceptor1,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor2)', '~start(proposer0)', '~start(proposer1)']
454     : -------0---0-------1----0-0
454     : ['promise(acceptor1,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor2)', '~start(proposer0)', '~start(proposer2)']
455     : ------0----0------1------00
455     : ['promise(acceptor1,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor2)', '~start(proposer1)', '~start(proposer2)']
456     : --0------0----------1---00-
456     : ['promise(acceptor1,proposer2)', '~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~didNotPromise(acceptor0)', '~start(proposer0)', '~start(proposer1)']
457     : -0-------0---------1----0-0
457     : ['promise(acceptor1,proposer1)', '~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~didNotPromise(acceptor0)', '~start(proposer0)', '~start(proposer2)']
458     : 0--------0--------1------00
458     : ['promise(acceptor1,proposer0)', '~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~didNotPromise(acceptor0)', '~start(proposer1)', '~start(proposer2)']
459     : --------0-0------------100-
459     : ['promise(acceptor2,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor1)', '~start(proposer0)', '~start(proposer1)']
460     : -------0--0-----------1-0-0
460     : ['promise(acceptor2,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor1)', '~start(proposer0)', '~start(proposer2)']
461     : ------0---0----------1---00
461     : ['promise(acceptor2,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor1)', '~start(proposer1)', '~start(proposer2)']
462     : -----0---0-------------100-
462     : ['promise(acceptor2,proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~didNotPromise(acceptor0)', '~start(proposer0)', '~start(proposer1)']
463     : ----0----0------------1-0-0
463     : ['promise(acceptor2,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~didNotPromise(acceptor0)', '~start(proposer0)', '~start(proposer2)']
464     : ---0-----0-----------1---00
464     : ['promise(acceptor2,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~didNotPromise(acceptor0)', '~start(proposer1)', '~start(proposer2)']
num_forall :   0
num_exists :   0
num_literals : 0
quantified form : None
qcost : 0




---------- QPrime ----------


---------- ConstArgBinding ----------

terms: ['~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~didNotPromise(acceptor2)', 'promise(acceptor0,proposer2)', '~start(proposer0)', '~start(proposer1)', 'member(acceptor0,quorum__acceptor0_acceptor2)', 'member(acceptor2,quorum__acceptor0_acceptor2)']

sign_func_name2args: {'1$chosenAt': [(Const('quorum__acceptor0_acceptor2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), Const('proposer2', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))))], '1$didNotPromise': [(Const('acceptor2', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))),)], '0$promise': [(Const('acceptor0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Const('proposer2', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))))], '1$start': [(Const('proposer0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))),), (Const('proposer1', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))),)], '0$member': [(Const('acceptor0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Const('quorum__acceptor0_acceptor2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')))), (Const('acceptor2', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Const('quorum__acceptor0_acceptor2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))))]}

const2sigs: {Const('quorum__acceptor0_acceptor2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))): [quorum$1$chosenAt$0$0, quorum$0$member$1$0, quorum$0$member$1$1], Const('proposer2', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))): [proposer$1$chosenAt$1$0, proposer$0$promise$1$0], Const('acceptor2', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))): [acceptor$1$didNotPromise$0$0, acceptor$0$member$0$1], Const('acceptor0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))): [acceptor$0$promise$0$0, acceptor$0$member$0$0], Const('proposer0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))): [proposer$1$start$0$0], Const('proposer1', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))): [proposer$1$start$0$1]}

sig2const: {'quorum$1$chosenAt$0$0': Const('quorum__acceptor0_acceptor2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), 'proposer$1$chosenAt$1$0': Const('proposer2', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))), 'acceptor$1$didNotPromise$0$0': Const('acceptor2', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), 'acceptor$0$promise$0$0': Const('acceptor0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), 'proposer$0$promise$1$0': Const('proposer2', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))), 'proposer$1$start$0$0': Const('proposer0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))), 'proposer$1$start$0$1': Const('proposer1', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))), 'acceptor$0$member$0$0': Const('acceptor0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), 'quorum$0$member$1$0': Const('quorum__acceptor0_acceptor2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), 'acceptor$0$member$0$1': Const('acceptor2', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), 'quorum$0$member$1$1': Const('quorum__acceptor0_acceptor2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')))}


---------- ArgPartition ----------

sort2class_sigs: {EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')): [quorum$0$member$1$0; quorum$0$member$1$1; quorum$1$chosenAt$0$0], EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')): [proposer$0$promise$1$0; proposer$1$chosenAt$1$0, proposer$1$start$0$0, proposer$1$start$0$1], EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')): [acceptor$0$member$0$0; acceptor$0$promise$0$0, acceptor$0$member$0$1; acceptor$1$didNotPromise$0$0]}

sort2part_sig: {EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')): quorum$0$member$1$0; quorum$0$member$1$1; quorum$1$chosenAt$0$0, EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')): proposer$0$promise$1$0; proposer$1$chosenAt$1$0 | proposer$1$start$0$0 | proposer$1$start$0$1, EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')): acceptor$0$member$0$0; acceptor$0$promise$0$0 | acceptor$0$member$0$1; acceptor$1$didNotPromise$0$0}

part_sig: ('acceptor$0$member$0$0; acceptor$0$promise$0$0 | acceptor$0$member$0$1; acceptor$1$didNotPromise$0$0', 'proposer$0$promise$1$0; proposer$1$chosenAt$1$0 | proposer$1$start$0$0 | proposer$1$start$0$1', 'quorum$0$member$1$0; quorum$0$member$1$1; quorum$1$chosenAt$0$0')


---------- SigGenerator ----------

terms:  ['~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~didNotPromise(acceptor2)', 'promise(acceptor0,proposer2)', '~start(proposer0)', '~start(proposer1)', 'member(acceptor0,quorum__acceptor0_acceptor2)', 'member(acceptor2,quorum__acceptor0_acceptor2)']

func_name2symbol:  {'chosenAt': Const('chosenAt', FunctionSort(EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')), EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')), BooleanSort())), 'didNotPromise': Const('didNotPromise', FunctionSort(EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')), BooleanSort())), 'promise': Const('promise', FunctionSort(EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')), EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')), BooleanSort())), 'start': Const('start', FunctionSort(EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')), BooleanSort())), 'member': Const('member', FunctionSort(EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')), EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')), BooleanSort()))}

func_name2args_sort:  {'chosenAt': (EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')), EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))), 'didNotPromise': (EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')),), 'promise': (EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')), EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))), 'start': (EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')),), 'member': (EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')), EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')))}

sign_func_name2count:  {'1$chosenAt': 1, '1$didNotPromise': 1, '0$promise': 1, '1$start': 2, '0$member': 2}


---------- ProductArgPartition ----------

sort2class_sigs: {EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')): [quorum$0$member$1$0; quorum$0$member$1$1; quorum$1$chosenAt$0$0], EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')): [proposer$0$promise$1$0; proposer$1$chosenAt$1$0, proposer$1$start$0$0, proposer$1$start$0$1], EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')): [acceptor$0$member$0$0; acceptor$0$promise$0$0, acceptor$0$member$0$1; acceptor$1$didNotPromise$0$0]}

sort2part_sig: {EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')): quorum$0$member$1$0; quorum$0$member$1$1; quorum$1$chosenAt$0$0, EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')): proposer$0$promise$1$0; proposer$1$chosenAt$1$0 | proposer$1$start$0$0 | proposer$1$start$0$1, EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')): acceptor$0$member$0$0; acceptor$0$promise$0$0 | acceptor$0$member$0$1; acceptor$1$didNotPromise$0$0}

	sort: quorum

	identical_classes: {'quorum$0$member$1; quorum$0$member$1; quorum$1$chosenAt$0': [quorum$0$member$1$0; quorum$0$member$1$1; quorum$1$chosenAt$0$0]}

	identical_single_classes: {'quorum$0$member$1; quorum$0$member$1; quorum$1$chosenAt$0': quorum$0$member$1$0; quorum$0$member$1$1; quorum$1$chosenAt$0$0}

	identical_multi_classes: {}

	sort: proposer

	identical_classes: {'proposer$0$promise$1; proposer$1$chosenAt$1': [proposer$0$promise$1$0; proposer$1$chosenAt$1$0], 'proposer$1$start$0': [proposer$1$start$0$0, proposer$1$start$0$1]}

	identical_single_classes: {'proposer$0$promise$1; proposer$1$chosenAt$1': proposer$0$promise$1$0; proposer$1$chosenAt$1$0}

	identical_multi_classes: {'proposer$1$start$0': [proposer$1$start$0$0, proposer$1$start$0$1]}

	sort: acceptor

	identical_classes: {'acceptor$0$member$0; acceptor$0$promise$0': [acceptor$0$member$0$0; acceptor$0$promise$0$0], 'acceptor$0$member$0; acceptor$1$didNotPromise$0': [acceptor$0$member$0$1; acceptor$1$didNotPromise$0$0]}

	identical_single_classes: {'acceptor$0$member$0; acceptor$0$promise$0': acceptor$0$member$0$0; acceptor$0$promise$0$0, 'acceptor$0$member$0; acceptor$1$didNotPromise$0': acceptor$0$member$0$1; acceptor$1$didNotPromise$0$0}

	identical_multi_classes: {}


---------- QInference: _set_sort_to_quantifier_mode ----------

quantifier mode: quorum: QuantifierMode.forall

quantifier mode: proposer: QuantifierMode.forall_exists

quantifier mode: acceptor: QuantifierMode.forall


---------- QInference: _set_constraint_mode ----------

constraint mode: ConstraintMode.no_merge


---------- QFormula: _set_qvars ----------

forall_qvars: {Var('ACCEPTOR0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Var('PROPOSER1', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))), Var('QUORUM0', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), Var('ACCEPTOR1', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')))}

exists_qvars: {Var('PROPOSER0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))}


---------- QFormula: _set_signed_func_name_to_args ----------

signed_func_name2args: {'1$chosenAt': [[Var('QUORUM0', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), Var('PROPOSER1', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))]], '1$didNotPromise': [[Var('ACCEPTOR1', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')))]], '0$promise': [[Var('ACCEPTOR0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Var('PROPOSER1', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))]], '1$start': [[Var('PROPOSER0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))], [Var('PROPOSER0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))]], '0$member': [[Var('ACCEPTOR0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Var('QUORUM0', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')))], [Var('ACCEPTOR1', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Var('QUORUM0', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')))]]}


---------- QFormula: _set_qterms ----------

qterms: ['promise(ACCEPTOR0,PROPOSER1)', 'member(ACCEPTOR0,QUORUM0)', 'member(ACCEPTOR1,QUORUM0)', '~didNotPromise(ACCEPTOR1)', '~chosenAt(QUORUM0,PROPOSER1)', '~start(PROPOSER0)']


---------- QFormula: get_qclause ----------

qclause: forall ACCEPTOR1,QUORUM0,ACCEPTOR0,PROPOSER1. ~promise(ACCEPTOR0,PROPOSER1) | ~member(ACCEPTOR0,QUORUM0) | ~member(ACCEPTOR1,QUORUM0) | didNotPromise(ACCEPTOR1) | chosenAt(QUORUM0,PROPOSER1) | (exists PROPOSER0. (start(PROPOSER0) & PROPOSER0 ~= PROPOSER1)) | ACCEPTOR0 = ACCEPTOR1


=== Prime Orbit 31 =====================
size : 36
num_suborbits: 1
465 (*) : -0--1-----0---------0---0--
465     : ['chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~didNotPromise(acceptor1)', '~promise(acceptor1,proposer2)', '~start(proposer0)']
466     : --0--1----0--------0----0--
466     : ['chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~didNotPromise(acceptor1)', '~promise(acceptor1,proposer1)', '~start(proposer0)']
467     : 0--1------0---------0----0-
467     : ['chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~didNotPromise(acceptor1)', '~promise(acceptor1,proposer2)', '~start(proposer1)']
468     : --0--1----0-------0------0-
468     : ['chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~didNotPromise(acceptor1)', '~promise(acceptor1,proposer0)', '~start(proposer1)']
469     : 0--1------0--------0------0
469     : ['chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~didNotPromise(acceptor1)', '~promise(acceptor1,proposer1)', '~start(proposer2)']
470     : -0--1-----0-------0-------0
470     : ['chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~didNotPromise(acceptor1)', '~promise(acceptor1,proposer0)', '~start(proposer2)']
471     : -1--0------0-----------00--
471     : ['chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~didNotPromise(acceptor2)', '~promise(acceptor2,proposer2)', '~start(proposer0)']
472     : --1--0-----0----------0-0--
472     : ['chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~didNotPromise(acceptor2)', '~promise(acceptor2,proposer1)', '~start(proposer0)']
473     : 1--0-------0-----------0-0-
473     : ['chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~didNotPromise(acceptor2)', '~promise(acceptor2,proposer2)', '~start(proposer1)']
474     : --1--0-----0---------0---0-
474     : ['chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~didNotPromise(acceptor2)', '~promise(acceptor2,proposer0)', '~start(proposer1)']
475     : 1--0-------0----------0---0
475     : ['chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~didNotPromise(acceptor2)', '~promise(acceptor2,proposer1)', '~start(proposer2)']
476     : -1--0------0---------0----0
476     : ['chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~didNotPromise(acceptor2)', '~promise(acceptor2,proposer0)', '~start(proposer2)']
477     : -0-----1-0-------0------0--
477     : ['chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~didNotPromise(acceptor0)', '~promise(acceptor0,proposer2)', '~start(proposer0)']
478     : --0-----10------0-------0--
478     : ['chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~didNotPromise(acceptor0)', '~promise(acceptor0,proposer1)', '~start(proposer0)']
479     : 0-----1--0-------0-------0-
479     : ['chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~didNotPromise(acceptor0)', '~promise(acceptor0,proposer2)', '~start(proposer1)']
480     : --0-----10-----0---------0-
480     : ['chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~didNotPromise(acceptor0)', '~promise(acceptor0,proposer0)', '~start(proposer1)']
481     : 0-----1--0------0---------0
481     : ['chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~didNotPromise(acceptor0)', '~promise(acceptor0,proposer1)', '~start(proposer2)']
482     : -0-----1-0-----0----------0
482     : ['chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~didNotPromise(acceptor0)', '~promise(acceptor0,proposer0)', '~start(proposer2)']
483     : -1-----0---0-----------00--
483     : ['chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor2)', '~promise(acceptor2,proposer2)', '~start(proposer0)']
484     : --1-----0--0----------0-0--
484     : ['chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor2)', '~promise(acceptor2,proposer1)', '~start(proposer0)']
485     : 1-----0----0-----------0-0-
485     : ['chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor2)', '~promise(acceptor2,proposer2)', '~start(proposer1)']
486     : --1-----0--0---------0---0-
486     : ['chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor2)', '~promise(acceptor2,proposer0)', '~start(proposer1)']
487     : 1-----0----0----------0---0
487     : ['chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor2)', '~promise(acceptor2,proposer1)', '~start(proposer2)']
488     : -1-----0---0---------0----0
488     : ['chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor2)', '~promise(acceptor2,proposer0)', '~start(proposer2)']
489     : ----0--1-0-------0------0--
489     : ['chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~didNotPromise(acceptor0)', '~promise(acceptor0,proposer2)', '~start(proposer0)']
490     : -----0--10------0-------0--
490     : ['chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~didNotPromise(acceptor0)', '~promise(acceptor0,proposer1)', '~start(proposer0)']
491     : ---0--1--0-------0-------0-
491     : ['chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~didNotPromise(acceptor0)', '~promise(acceptor0,proposer2)', '~start(proposer1)']
492     : -----0--10-----0---------0-
492     : ['chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~didNotPromise(acceptor0)', '~promise(acceptor0,proposer0)', '~start(proposer1)']
493     : ---0--1--0------0---------0
493     : ['chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~didNotPromise(acceptor0)', '~promise(acceptor0,proposer1)', '~start(proposer2)']
494     : ----0--1-0-----0----------0
494     : ['chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~didNotPromise(acceptor0)', '~promise(acceptor0,proposer0)', '~start(proposer2)']
495     : ----1--0--0---------0---0--
495     : ['chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor1)', '~promise(acceptor1,proposer2)', '~start(proposer0)']
496     : -----1--0-0--------0----0--
496     : ['chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor1)', '~promise(acceptor1,proposer1)', '~start(proposer0)']
497     : ---1--0---0---------0----0-
497     : ['chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor1)', '~promise(acceptor1,proposer2)', '~start(proposer1)']
498     : -----1--0-0-------0------0-
498     : ['chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor1)', '~promise(acceptor1,proposer0)', '~start(proposer1)']
499     : ---1--0---0--------0------0
499     : ['chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor1)', '~promise(acceptor1,proposer1)', '~start(proposer2)']
500     : ----1--0--0-------0-------0
500     : ['chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor1)', '~promise(acceptor1,proposer0)', '~start(proposer2)']
num_forall :   0
num_exists :   0
num_literals : 0
quantified form : None
qcost : 0




---------- QPrime ----------


---------- ConstArgBinding ----------

terms: ['~chosenAt(quorum__acceptor0_acceptor1,proposer1)', 'chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~didNotPromise(acceptor1)', '~promise(acceptor1,proposer2)', '~start(proposer0)', 'member(acceptor1,quorum__acceptor0_acceptor1)', '~member(acceptor1,quorum__acceptor0_acceptor2)']

sign_func_name2args: {'1$chosenAt': [(Const('quorum__acceptor0_acceptor1', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), Const('proposer1', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))))], '0$chosenAt': [(Const('quorum__acceptor0_acceptor2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), Const('proposer1', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))))], '1$didNotPromise': [(Const('acceptor1', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))),)], '1$promise': [(Const('acceptor1', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Const('proposer2', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))))], '1$start': [(Const('proposer0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))),)], '0$member': [(Const('acceptor1', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Const('quorum__acceptor0_acceptor1', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))))], '1$member': [(Const('acceptor1', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Const('quorum__acceptor0_acceptor2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))))]}

const2sigs: {Const('quorum__acceptor0_acceptor1', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))): [quorum$1$chosenAt$0$0, quorum$0$member$1$0], Const('proposer1', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))): [proposer$1$chosenAt$1$0, proposer$0$chosenAt$1$0], Const('quorum__acceptor0_acceptor2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))): [quorum$0$chosenAt$0$0, quorum$1$member$1$0], Const('acceptor1', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))): [acceptor$1$didNotPromise$0$0, acceptor$1$promise$0$0, acceptor$0$member$0$0, acceptor$1$member$0$0], Const('proposer2', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))): [proposer$1$promise$1$0], Const('proposer0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))): [proposer$1$start$0$0]}

sig2const: {'quorum$1$chosenAt$0$0': Const('quorum__acceptor0_acceptor1', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), 'proposer$1$chosenAt$1$0': Const('proposer1', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))), 'quorum$0$chosenAt$0$0': Const('quorum__acceptor0_acceptor2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), 'proposer$0$chosenAt$1$0': Const('proposer1', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))), 'acceptor$1$didNotPromise$0$0': Const('acceptor1', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), 'acceptor$1$promise$0$0': Const('acceptor1', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), 'proposer$1$promise$1$0': Const('proposer2', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))), 'proposer$1$start$0$0': Const('proposer0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))), 'acceptor$0$member$0$0': Const('acceptor1', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), 'quorum$0$member$1$0': Const('quorum__acceptor0_acceptor1', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), 'acceptor$1$member$0$0': Const('acceptor1', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), 'quorum$1$member$1$0': Const('quorum__acceptor0_acceptor2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')))}


---------- ArgPartition ----------

sort2class_sigs: {EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')): [quorum$0$chosenAt$0$0; quorum$1$member$1$0, quorum$0$member$1$0; quorum$1$chosenAt$0$0], EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')): [proposer$0$chosenAt$1$0; proposer$1$chosenAt$1$0, proposer$1$promise$1$0, proposer$1$start$0$0], EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')): [acceptor$0$member$0$0; acceptor$1$didNotPromise$0$0; acceptor$1$member$0$0; acceptor$1$promise$0$0]}

sort2part_sig: {EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')): quorum$0$chosenAt$0$0; quorum$1$member$1$0 | quorum$0$member$1$0; quorum$1$chosenAt$0$0, EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')): proposer$0$chosenAt$1$0; proposer$1$chosenAt$1$0 | proposer$1$promise$1$0 | proposer$1$start$0$0, EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')): acceptor$0$member$0$0; acceptor$1$didNotPromise$0$0; acceptor$1$member$0$0; acceptor$1$promise$0$0}

part_sig: ('acceptor$0$member$0$0; acceptor$1$didNotPromise$0$0; acceptor$1$member$0$0; acceptor$1$promise$0$0', 'proposer$0$chosenAt$1$0; proposer$1$chosenAt$1$0 | proposer$1$promise$1$0 | proposer$1$start$0$0', 'quorum$0$chosenAt$0$0; quorum$1$member$1$0 | quorum$0$member$1$0; quorum$1$chosenAt$0$0')


---------- SigGenerator ----------

terms:  ['~chosenAt(quorum__acceptor0_acceptor1,proposer1)', 'chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~didNotPromise(acceptor1)', '~promise(acceptor1,proposer2)', '~start(proposer0)', 'member(acceptor1,quorum__acceptor0_acceptor1)', '~member(acceptor1,quorum__acceptor0_acceptor2)']

func_name2symbol:  {'chosenAt': Const('chosenAt', FunctionSort(EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')), EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')), BooleanSort())), 'didNotPromise': Const('didNotPromise', FunctionSort(EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')), BooleanSort())), 'promise': Const('promise', FunctionSort(EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')), EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')), BooleanSort())), 'start': Const('start', FunctionSort(EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')), BooleanSort())), 'member': Const('member', FunctionSort(EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')), EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')), BooleanSort()))}

func_name2args_sort:  {'chosenAt': (EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')), EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))), 'didNotPromise': (EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')),), 'promise': (EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')), EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))), 'start': (EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')),), 'member': (EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')), EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')))}

sign_func_name2count:  {'1$chosenAt': 1, '0$chosenAt': 1, '1$didNotPromise': 1, '1$promise': 1, '1$start': 1, '0$member': 1, '1$member': 1}


---------- ProductArgPartition ----------

sort2class_sigs: {EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')): [quorum$0$chosenAt$0$0; quorum$1$member$1$0, quorum$0$member$1$0; quorum$1$chosenAt$0$0], EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')): [proposer$0$chosenAt$1$0; proposer$1$chosenAt$1$0, proposer$1$promise$1$0, proposer$1$start$0$0], EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')): [acceptor$0$member$0$0; acceptor$1$didNotPromise$0$0; acceptor$1$member$0$0; acceptor$1$promise$0$0]}

sort2part_sig: {EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')): quorum$0$chosenAt$0$0; quorum$1$member$1$0 | quorum$0$member$1$0; quorum$1$chosenAt$0$0, EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')): proposer$0$chosenAt$1$0; proposer$1$chosenAt$1$0 | proposer$1$promise$1$0 | proposer$1$start$0$0, EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')): acceptor$0$member$0$0; acceptor$1$didNotPromise$0$0; acceptor$1$member$0$0; acceptor$1$promise$0$0}

	sort: quorum

	identical_classes: {'quorum$0$chosenAt$0; quorum$1$member$1': [quorum$0$chosenAt$0$0; quorum$1$member$1$0], 'quorum$0$member$1; quorum$1$chosenAt$0': [quorum$0$member$1$0; quorum$1$chosenAt$0$0]}

	identical_single_classes: {'quorum$0$chosenAt$0; quorum$1$member$1': quorum$0$chosenAt$0$0; quorum$1$member$1$0, 'quorum$0$member$1; quorum$1$chosenAt$0': quorum$0$member$1$0; quorum$1$chosenAt$0$0}

	identical_multi_classes: {}

	sort: proposer

	identical_classes: {'proposer$0$chosenAt$1; proposer$1$chosenAt$1': [proposer$0$chosenAt$1$0; proposer$1$chosenAt$1$0], 'proposer$1$promise$1': [proposer$1$promise$1$0], 'proposer$1$start$0': [proposer$1$start$0$0]}

	identical_single_classes: {'proposer$0$chosenAt$1; proposer$1$chosenAt$1': proposer$0$chosenAt$1$0; proposer$1$chosenAt$1$0, 'proposer$1$promise$1': proposer$1$promise$1$0, 'proposer$1$start$0': proposer$1$start$0$0}

	identical_multi_classes: {}

	sort: acceptor

	identical_classes: {'acceptor$0$member$0; acceptor$1$didNotPromise$0; acceptor$1$member$0; acceptor$1$promise$0': [acceptor$0$member$0$0; acceptor$1$didNotPromise$0$0; acceptor$1$member$0$0; acceptor$1$promise$0$0]}

	identical_single_classes: {'acceptor$0$member$0; acceptor$1$didNotPromise$0; acceptor$1$member$0; acceptor$1$promise$0': acceptor$0$member$0$0; acceptor$1$didNotPromise$0$0; acceptor$1$member$0$0; acceptor$1$promise$0$0}

	identical_multi_classes: {}


---------- QInference: _set_sort_to_quantifier_mode ----------

quantifier mode: quorum: QuantifierMode.forall

quantifier mode: proposer: QuantifierMode.forall

quantifier mode: acceptor: QuantifierMode.forall


---------- QInference: _set_constraint_mode ----------

constraint mode: ConstraintMode.no_merge


---------- QFormula: _set_qvars ----------

forall_qvars: {Var('ACCEPTOR0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Var('QUORUM1', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), Var('PROPOSER0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))), Var('QUORUM0', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), Var('PROPOSER2', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))), Var('PROPOSER1', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))}

exists_qvars: set()


---------- QFormula: _set_signed_func_name_to_args ----------

signed_func_name2args: {'1$chosenAt': [[Var('QUORUM1', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), Var('PROPOSER0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))]], '0$chosenAt': [[Var('QUORUM0', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), Var('PROPOSER0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))]], '1$didNotPromise': [[Var('ACCEPTOR0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')))]], '1$promise': [[Var('ACCEPTOR0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Var('PROPOSER1', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))]], '1$start': [[Var('PROPOSER2', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))]], '0$member': [[Var('ACCEPTOR0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Var('QUORUM1', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')))]], '1$member': [[Var('ACCEPTOR0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Var('QUORUM0', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')))]]}


---------- QFormula: _set_qterms ----------

qterms: ['~chosenAt(QUORUM1,PROPOSER0)', '~didNotPromise(ACCEPTOR0)', 'chosenAt(QUORUM0,PROPOSER0)', '~promise(ACCEPTOR0,PROPOSER1)', '~start(PROPOSER2)', '~member(ACCEPTOR0,QUORUM0)', 'member(ACCEPTOR0,QUORUM1)']


---------- QFormula: get_qclause ----------

qclause: forall QUORUM0,PROPOSER2,PROPOSER1,ACCEPTOR0,PROPOSER0,QUORUM1. chosenAt(QUORUM1,PROPOSER0) | didNotPromise(ACCEPTOR0) | ~chosenAt(QUORUM0,PROPOSER0) | promise(ACCEPTOR0,PROPOSER1) | start(PROPOSER2) | member(ACCEPTOR0,QUORUM0) | ~member(ACCEPTOR0,QUORUM1) | (QUORUM0 = QUORUM1 | PROPOSER1 = PROPOSER2 | PROPOSER0 = PROPOSER1 | PROPOSER0 = PROPOSER2)


=== Prime Orbit 32 =====================
size : 9
num_suborbits: 1
501 (*) : --------0-00------------00-
501     : ['~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~start(proposer0)', '~start(proposer1)']
502     : -------0--00------------0-0
502     : ['~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~start(proposer0)', '~start(proposer2)']
503     : ------0---00-------------00
503     : ['~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~start(proposer1)', '~start(proposer2)']
504     : -----0---0-0------------00-
504     : ['~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor2)', '~start(proposer0)', '~start(proposer1)']
505     : ----0----0-0------------0-0
505     : ['~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor2)', '~start(proposer0)', '~start(proposer2)']
506     : ---0-----0-0-------------00
506     : ['~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor2)', '~start(proposer1)', '~start(proposer2)']
507     : --0------00-------------00-
507     : ['~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~start(proposer0)', '~start(proposer1)']
508     : -0-------00-------------0-0
508     : ['~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~start(proposer0)', '~start(proposer2)']
509     : 0--------00--------------00
509     : ['~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~start(proposer1)', '~start(proposer2)']
num_forall :   0
num_exists :   0
num_literals : 0
quantified form : None
qcost : 0




---------- QPrime ----------


---------- ConstArgBinding ----------

terms: ['~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~start(proposer0)', '~start(proposer1)', 'member(acceptor1,quorum__acceptor1_acceptor2)', 'member(acceptor2,quorum__acceptor1_acceptor2)']

sign_func_name2args: {'1$chosenAt': [(Const('quorum__acceptor1_acceptor2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), Const('proposer2', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))))], '1$didNotPromise': [(Const('acceptor1', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))),), (Const('acceptor2', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))),)], '1$start': [(Const('proposer0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))),), (Const('proposer1', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))),)], '0$member': [(Const('acceptor1', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Const('quorum__acceptor1_acceptor2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')))), (Const('acceptor2', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Const('quorum__acceptor1_acceptor2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))))]}

const2sigs: {Const('quorum__acceptor1_acceptor2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))): [quorum$1$chosenAt$0$0, quorum$0$member$1$0, quorum$0$member$1$1], Const('proposer2', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))): [proposer$1$chosenAt$1$0], Const('acceptor1', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))): [acceptor$1$didNotPromise$0$0, acceptor$0$member$0$0], Const('acceptor2', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))): [acceptor$1$didNotPromise$0$1, acceptor$0$member$0$1], Const('proposer0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))): [proposer$1$start$0$0], Const('proposer1', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))): [proposer$1$start$0$1]}

sig2const: {'quorum$1$chosenAt$0$0': Const('quorum__acceptor1_acceptor2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), 'proposer$1$chosenAt$1$0': Const('proposer2', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))), 'acceptor$1$didNotPromise$0$0': Const('acceptor1', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), 'acceptor$1$didNotPromise$0$1': Const('acceptor2', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), 'proposer$1$start$0$0': Const('proposer0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))), 'proposer$1$start$0$1': Const('proposer1', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))), 'acceptor$0$member$0$0': Const('acceptor1', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), 'quorum$0$member$1$0': Const('quorum__acceptor1_acceptor2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), 'acceptor$0$member$0$1': Const('acceptor2', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), 'quorum$0$member$1$1': Const('quorum__acceptor1_acceptor2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')))}


---------- ArgPartition ----------

sort2class_sigs: {EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')): [quorum$0$member$1$0; quorum$0$member$1$1; quorum$1$chosenAt$0$0], EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')): [proposer$1$chosenAt$1$0, proposer$1$start$0$0, proposer$1$start$0$1], EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')): [acceptor$0$member$0$0; acceptor$1$didNotPromise$0$0, acceptor$0$member$0$1; acceptor$1$didNotPromise$0$1]}

sort2part_sig: {EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')): quorum$0$member$1$0; quorum$0$member$1$1; quorum$1$chosenAt$0$0, EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')): proposer$1$chosenAt$1$0 | proposer$1$start$0$0 | proposer$1$start$0$1, EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')): acceptor$0$member$0$0; acceptor$1$didNotPromise$0$0 | acceptor$0$member$0$1; acceptor$1$didNotPromise$0$1}

part_sig: ('acceptor$0$member$0$0; acceptor$1$didNotPromise$0$0 | acceptor$0$member$0$1; acceptor$1$didNotPromise$0$1', 'proposer$1$chosenAt$1$0 | proposer$1$start$0$0 | proposer$1$start$0$1', 'quorum$0$member$1$0; quorum$0$member$1$1; quorum$1$chosenAt$0$0')


---------- SigGenerator ----------

terms:  ['~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~start(proposer0)', '~start(proposer1)', 'member(acceptor1,quorum__acceptor1_acceptor2)', 'member(acceptor2,quorum__acceptor1_acceptor2)']

func_name2symbol:  {'chosenAt': Const('chosenAt', FunctionSort(EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')), EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')), BooleanSort())), 'didNotPromise': Const('didNotPromise', FunctionSort(EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')), BooleanSort())), 'start': Const('start', FunctionSort(EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')), BooleanSort())), 'member': Const('member', FunctionSort(EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')), EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')), BooleanSort()))}

func_name2args_sort:  {'chosenAt': (EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')), EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))), 'didNotPromise': (EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')),), 'start': (EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')),), 'member': (EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')), EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')))}

sign_func_name2count:  {'1$chosenAt': 1, '1$didNotPromise': 2, '1$start': 2, '0$member': 2}


---------- ProductArgPartition ----------

sort2class_sigs: {EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')): [quorum$0$member$1$0; quorum$0$member$1$1; quorum$1$chosenAt$0$0], EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')): [proposer$1$chosenAt$1$0, proposer$1$start$0$0, proposer$1$start$0$1], EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')): [acceptor$0$member$0$0; acceptor$1$didNotPromise$0$0, acceptor$0$member$0$1; acceptor$1$didNotPromise$0$1]}

sort2part_sig: {EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')): quorum$0$member$1$0; quorum$0$member$1$1; quorum$1$chosenAt$0$0, EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')): proposer$1$chosenAt$1$0 | proposer$1$start$0$0 | proposer$1$start$0$1, EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')): acceptor$0$member$0$0; acceptor$1$didNotPromise$0$0 | acceptor$0$member$0$1; acceptor$1$didNotPromise$0$1}

	sort: quorum

	identical_classes: {'quorum$0$member$1; quorum$0$member$1; quorum$1$chosenAt$0': [quorum$0$member$1$0; quorum$0$member$1$1; quorum$1$chosenAt$0$0]}

	identical_single_classes: {'quorum$0$member$1; quorum$0$member$1; quorum$1$chosenAt$0': quorum$0$member$1$0; quorum$0$member$1$1; quorum$1$chosenAt$0$0}

	identical_multi_classes: {}

	sort: proposer

	identical_classes: {'proposer$1$chosenAt$1': [proposer$1$chosenAt$1$0], 'proposer$1$start$0': [proposer$1$start$0$0, proposer$1$start$0$1]}

	identical_single_classes: {'proposer$1$chosenAt$1': proposer$1$chosenAt$1$0}

	identical_multi_classes: {'proposer$1$start$0': [proposer$1$start$0$0, proposer$1$start$0$1]}

	sort: acceptor

	identical_classes: {'acceptor$0$member$0; acceptor$1$didNotPromise$0': [acceptor$0$member$0$0; acceptor$1$didNotPromise$0$0, acceptor$0$member$0$1; acceptor$1$didNotPromise$0$1]}

	identical_single_classes: {}

	identical_multi_classes: {'acceptor$0$member$0; acceptor$1$didNotPromise$0': [acceptor$0$member$0$0, acceptor$1$didNotPromise$0$0, acceptor$0$member$0$1, acceptor$1$didNotPromise$0$1]}


---------- QInference: _set_sort_to_quantifier_mode ----------

quantifier mode: quorum: QuantifierMode.forall

quantifier mode: proposer: QuantifierMode.forall_exists

quantifier mode: acceptor: QuantifierMode.forall


---------- QInference: _set_constraint_mode ----------

constraint mode: ConstraintMode.no_merge


---------- QFormula: _set_qvars ----------

forall_qvars: {Var('ACCEPTOR0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Var('PROPOSER1', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))), Var('QUORUM0', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), Var('ACCEPTOR1', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')))}

exists_qvars: {Var('PROPOSER0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))}


---------- QFormula: _set_signed_func_name_to_args ----------

signed_func_name2args: {'1$chosenAt': [[Var('QUORUM0', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), Var('PROPOSER1', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))]], '1$didNotPromise': [[Var('ACCEPTOR0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')))], [Var('ACCEPTOR1', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')))]], '1$start': [[Var('PROPOSER0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))], [Var('PROPOSER0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))]], '0$member': [[Var('ACCEPTOR0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Var('QUORUM0', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')))], [Var('ACCEPTOR1', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Var('QUORUM0', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')))]]}


---------- QFormula: _set_qterms ----------

qterms: ['~didNotPromise(ACCEPTOR0)', 'member(ACCEPTOR0,QUORUM0)', 'member(ACCEPTOR1,QUORUM0)', '~didNotPromise(ACCEPTOR1)', '~chosenAt(QUORUM0,PROPOSER1)', '~start(PROPOSER0)']


---------- QFormula: get_qclause ----------

qclause: forall ACCEPTOR1,QUORUM0,ACCEPTOR0,PROPOSER1. didNotPromise(ACCEPTOR0) | ~member(ACCEPTOR0,QUORUM0) | ~member(ACCEPTOR1,QUORUM0) | didNotPromise(ACCEPTOR1) | chosenAt(QUORUM0,PROPOSER1) | (exists PROPOSER0. (start(PROPOSER0) & PROPOSER0 ~= PROPOSER1)) | ACCEPTOR0 = ACCEPTOR1


=== Prime Orbit 33 =====================
size : 18
num_suborbits: 1
510 (*) : --1-----0--0------------00-
510     : ['chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor2)', '~start(proposer0)', '~start(proposer1)']
511     : -1-----0---0------------0-0
511     : ['chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor2)', '~start(proposer0)', '~start(proposer2)']
512     : 1-----0----0-------------00
512     : ['chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor2)', '~start(proposer1)', '~start(proposer2)']
513     : -----1--0-0-------------00-
513     : ['chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor1)', '~start(proposer0)', '~start(proposer1)']
514     : ----1--0--0-------------0-0
514     : ['chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor1)', '~start(proposer0)', '~start(proposer2)']
515     : ---1--0---0--------------00
515     : ['chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor1)', '~start(proposer1)', '~start(proposer2)']
516     : --1--0-----0------------00-
516     : ['chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~didNotPromise(acceptor2)', '~start(proposer0)', '~start(proposer1)']
517     : -1--0------0------------0-0
517     : ['chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~didNotPromise(acceptor2)', '~start(proposer0)', '~start(proposer2)']
518     : 1--0-------0-------------00
518     : ['chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~didNotPromise(acceptor2)', '~start(proposer1)', '~start(proposer2)']
519     : -----0--10--------------00-
519     : ['chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~didNotPromise(acceptor0)', '~start(proposer0)', '~start(proposer1)']
520     : ----0--1-0--------------0-0
520     : ['chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~didNotPromise(acceptor0)', '~start(proposer0)', '~start(proposer2)']
521     : ---0--1--0---------------00
521     : ['chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~didNotPromise(acceptor0)', '~start(proposer1)', '~start(proposer2)']
522     : --0--1----0-------------00-
522     : ['chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~didNotPromise(acceptor1)', '~start(proposer0)', '~start(proposer1)']
523     : -0--1-----0-------------0-0
523     : ['chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~didNotPromise(acceptor1)', '~start(proposer0)', '~start(proposer2)']
524     : 0--1------0--------------00
524     : ['chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~didNotPromise(acceptor1)', '~start(proposer1)', '~start(proposer2)']
525     : --0-----10--------------00-
525     : ['chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~didNotPromise(acceptor0)', '~start(proposer0)', '~start(proposer1)']
526     : -0-----1-0--------------0-0
526     : ['chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~didNotPromise(acceptor0)', '~start(proposer0)', '~start(proposer2)']
527     : 0-----1--0---------------00
527     : ['chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~didNotPromise(acceptor0)', '~start(proposer1)', '~start(proposer2)']
num_forall :   0
num_exists :   0
num_literals : 0
quantified form : None
qcost : 0




---------- QPrime ----------


---------- ConstArgBinding ----------

terms: ['chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor2)', '~start(proposer0)', '~start(proposer1)', '~member(acceptor2,quorum__acceptor0_acceptor1)', 'member(acceptor2,quorum__acceptor1_acceptor2)']

sign_func_name2args: {'0$chosenAt': [(Const('quorum__acceptor0_acceptor1', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), Const('proposer2', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))))], '1$chosenAt': [(Const('quorum__acceptor1_acceptor2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), Const('proposer2', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))))], '1$didNotPromise': [(Const('acceptor2', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))),)], '1$start': [(Const('proposer0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))),), (Const('proposer1', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))),)], '1$member': [(Const('acceptor2', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Const('quorum__acceptor0_acceptor1', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))))], '0$member': [(Const('acceptor2', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Const('quorum__acceptor1_acceptor2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))))]}

const2sigs: {Const('quorum__acceptor0_acceptor1', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))): [quorum$0$chosenAt$0$0, quorum$1$member$1$0], Const('proposer2', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))): [proposer$0$chosenAt$1$0, proposer$1$chosenAt$1$0], Const('quorum__acceptor1_acceptor2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))): [quorum$1$chosenAt$0$0, quorum$0$member$1$0], Const('acceptor2', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))): [acceptor$1$didNotPromise$0$0, acceptor$1$member$0$0, acceptor$0$member$0$0], Const('proposer0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))): [proposer$1$start$0$0], Const('proposer1', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))): [proposer$1$start$0$1]}

sig2const: {'quorum$0$chosenAt$0$0': Const('quorum__acceptor0_acceptor1', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), 'proposer$0$chosenAt$1$0': Const('proposer2', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))), 'quorum$1$chosenAt$0$0': Const('quorum__acceptor1_acceptor2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), 'proposer$1$chosenAt$1$0': Const('proposer2', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))), 'acceptor$1$didNotPromise$0$0': Const('acceptor2', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), 'proposer$1$start$0$0': Const('proposer0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))), 'proposer$1$start$0$1': Const('proposer1', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))), 'acceptor$1$member$0$0': Const('acceptor2', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), 'quorum$1$member$1$0': Const('quorum__acceptor0_acceptor1', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), 'acceptor$0$member$0$0': Const('acceptor2', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), 'quorum$0$member$1$0': Const('quorum__acceptor1_acceptor2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')))}


---------- ArgPartition ----------

sort2class_sigs: {EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')): [quorum$0$chosenAt$0$0; quorum$1$member$1$0, quorum$0$member$1$0; quorum$1$chosenAt$0$0], EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')): [proposer$0$chosenAt$1$0; proposer$1$chosenAt$1$0, proposer$1$start$0$0, proposer$1$start$0$1], EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')): [acceptor$0$member$0$0; acceptor$1$didNotPromise$0$0; acceptor$1$member$0$0]}

sort2part_sig: {EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')): quorum$0$chosenAt$0$0; quorum$1$member$1$0 | quorum$0$member$1$0; quorum$1$chosenAt$0$0, EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')): proposer$0$chosenAt$1$0; proposer$1$chosenAt$1$0 | proposer$1$start$0$0 | proposer$1$start$0$1, EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')): acceptor$0$member$0$0; acceptor$1$didNotPromise$0$0; acceptor$1$member$0$0}

part_sig: ('acceptor$0$member$0$0; acceptor$1$didNotPromise$0$0; acceptor$1$member$0$0', 'proposer$0$chosenAt$1$0; proposer$1$chosenAt$1$0 | proposer$1$start$0$0 | proposer$1$start$0$1', 'quorum$0$chosenAt$0$0; quorum$1$member$1$0 | quorum$0$member$1$0; quorum$1$chosenAt$0$0')


---------- SigGenerator ----------

terms:  ['chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor2)', '~start(proposer0)', '~start(proposer1)', '~member(acceptor2,quorum__acceptor0_acceptor1)', 'member(acceptor2,quorum__acceptor1_acceptor2)']

func_name2symbol:  {'chosenAt': Const('chosenAt', FunctionSort(EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')), EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')), BooleanSort())), 'didNotPromise': Const('didNotPromise', FunctionSort(EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')), BooleanSort())), 'start': Const('start', FunctionSort(EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')), BooleanSort())), 'member': Const('member', FunctionSort(EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')), EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')), BooleanSort()))}

func_name2args_sort:  {'chosenAt': (EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')), EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))), 'didNotPromise': (EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')),), 'start': (EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')),), 'member': (EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')), EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')))}

sign_func_name2count:  {'0$chosenAt': 1, '1$chosenAt': 1, '1$didNotPromise': 1, '1$start': 2, '1$member': 1, '0$member': 1}


---------- ProductArgPartition ----------

sort2class_sigs: {EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')): [quorum$0$chosenAt$0$0; quorum$1$member$1$0, quorum$0$member$1$0; quorum$1$chosenAt$0$0], EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')): [proposer$0$chosenAt$1$0; proposer$1$chosenAt$1$0, proposer$1$start$0$0, proposer$1$start$0$1], EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')): [acceptor$0$member$0$0; acceptor$1$didNotPromise$0$0; acceptor$1$member$0$0]}

sort2part_sig: {EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')): quorum$0$chosenAt$0$0; quorum$1$member$1$0 | quorum$0$member$1$0; quorum$1$chosenAt$0$0, EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')): proposer$0$chosenAt$1$0; proposer$1$chosenAt$1$0 | proposer$1$start$0$0 | proposer$1$start$0$1, EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')): acceptor$0$member$0$0; acceptor$1$didNotPromise$0$0; acceptor$1$member$0$0}

	sort: quorum

	identical_classes: {'quorum$0$chosenAt$0; quorum$1$member$1': [quorum$0$chosenAt$0$0; quorum$1$member$1$0], 'quorum$0$member$1; quorum$1$chosenAt$0': [quorum$0$member$1$0; quorum$1$chosenAt$0$0]}

	identical_single_classes: {'quorum$0$chosenAt$0; quorum$1$member$1': quorum$0$chosenAt$0$0; quorum$1$member$1$0, 'quorum$0$member$1; quorum$1$chosenAt$0': quorum$0$member$1$0; quorum$1$chosenAt$0$0}

	identical_multi_classes: {}

	sort: proposer

	identical_classes: {'proposer$0$chosenAt$1; proposer$1$chosenAt$1': [proposer$0$chosenAt$1$0; proposer$1$chosenAt$1$0], 'proposer$1$start$0': [proposer$1$start$0$0, proposer$1$start$0$1]}

	identical_single_classes: {'proposer$0$chosenAt$1; proposer$1$chosenAt$1': proposer$0$chosenAt$1$0; proposer$1$chosenAt$1$0}

	identical_multi_classes: {'proposer$1$start$0': [proposer$1$start$0$0, proposer$1$start$0$1]}

	sort: acceptor

	identical_classes: {'acceptor$0$member$0; acceptor$1$didNotPromise$0; acceptor$1$member$0': [acceptor$0$member$0$0; acceptor$1$didNotPromise$0$0; acceptor$1$member$0$0]}

	identical_single_classes: {'acceptor$0$member$0; acceptor$1$didNotPromise$0; acceptor$1$member$0': acceptor$0$member$0$0; acceptor$1$didNotPromise$0$0; acceptor$1$member$0$0}

	identical_multi_classes: {}


---------- QInference: _set_sort_to_quantifier_mode ----------

quantifier mode: quorum: QuantifierMode.forall

quantifier mode: proposer: QuantifierMode.forall_exists

quantifier mode: acceptor: QuantifierMode.forall


---------- QInference: _set_constraint_mode ----------

constraint mode: ConstraintMode.no_merge


---------- QFormula: _set_qvars ----------

forall_qvars: {Var('ACCEPTOR0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Var('QUORUM1', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), Var('PROPOSER1', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))), Var('QUORUM0', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')))}

exists_qvars: {Var('PROPOSER0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))}


---------- QFormula: _set_signed_func_name_to_args ----------

signed_func_name2args: {'0$chosenAt': [[Var('QUORUM0', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), Var('PROPOSER1', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))]], '1$chosenAt': [[Var('QUORUM1', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), Var('PROPOSER1', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))]], '1$didNotPromise': [[Var('ACCEPTOR0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')))]], '1$start': [[Var('PROPOSER0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))], [Var('PROPOSER0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))]], '1$member': [[Var('ACCEPTOR0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Var('QUORUM0', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')))]], '0$member': [[Var('ACCEPTOR0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Var('QUORUM1', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')))]]}


---------- QFormula: _set_qterms ----------

qterms: ['~didNotPromise(ACCEPTOR0)', '~start(PROPOSER0)', '~chosenAt(QUORUM1,PROPOSER1)', 'chosenAt(QUORUM0,PROPOSER1)', '~member(ACCEPTOR0,QUORUM0)', 'member(ACCEPTOR0,QUORUM1)']


---------- QFormula: get_qclause ----------

qclause: forall QUORUM0,QUORUM1,ACCEPTOR0,PROPOSER1. didNotPromise(ACCEPTOR0) | chosenAt(QUORUM1,PROPOSER1) | ~chosenAt(QUORUM0,PROPOSER1) | member(ACCEPTOR0,QUORUM0) | ~member(ACCEPTOR0,QUORUM1) | (exists PROPOSER0. (start(PROPOSER0) & PROPOSER0 ~= PROPOSER1)) | QUORUM0 = QUORUM1


=== Prime Orbit 37 =====================
size : 18
num_suborbits: 1
582 (*) : ---0----0--0---1----1----0-
582     : ['promise(acceptor0,proposer0)', 'promise(acceptor1,proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor2)', '~start(proposer1)']
583     : ---0---0---0---1---1------0
583     : ['promise(acceptor0,proposer0)', 'promise(acceptor1,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor2)', '~start(proposer2)']
584     : ----0---0--0----1---1---0--
584     : ['promise(acceptor0,proposer1)', 'promise(acceptor1,proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor2)', '~start(proposer0)']
585     : ----0-0----0----1-1-------0
585     : ['promise(acceptor0,proposer1)', 'promise(acceptor1,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor2)', '~start(proposer2)']
586     : -----0-0---0-----1-1----0--
586     : ['promise(acceptor0,proposer2)', 'promise(acceptor1,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor2)', '~start(proposer0)']
587     : -----00----0-----11------0-
587     : ['promise(acceptor0,proposer2)', 'promise(acceptor1,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor2)', '~start(proposer1)']
588     : 0-------0-0----1-------1-0-
588     : ['promise(acceptor0,proposer0)', 'promise(acceptor2,proposer2)', '~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor1)', '~start(proposer1)']
589     : 0------0--0----1------1---0
589     : ['promise(acceptor0,proposer0)', 'promise(acceptor2,proposer1)', '~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor1)', '~start(proposer2)']
590     : -0------0-0-----1------10--
590     : ['promise(acceptor0,proposer1)', 'promise(acceptor2,proposer2)', '~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor1)', '~start(proposer0)']
591     : -0----0---0-----1----1----0
591     : ['promise(acceptor0,proposer1)', 'promise(acceptor2,proposer0)', '~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor1)', '~start(proposer2)']
592     : --0----0--0------1----1-0--
592     : ['promise(acceptor0,proposer2)', 'promise(acceptor2,proposer1)', '~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor1)', '~start(proposer0)']
593     : --0---0---0------1---1---0-
593     : ['promise(acceptor0,proposer2)', 'promise(acceptor2,proposer0)', '~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor1)', '~start(proposer1)']
594     : 0----0---0--------1----1-0-
594     : ['promise(acceptor1,proposer0)', 'promise(acceptor2,proposer2)', '~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~didNotPromise(acceptor0)', '~start(proposer1)']
595     : 0---0----0--------1---1---0
595     : ['promise(acceptor1,proposer0)', 'promise(acceptor2,proposer1)', '~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~didNotPromise(acceptor0)', '~start(proposer2)']
596     : -0---0---0---------1---10--
596     : ['promise(acceptor1,proposer1)', 'promise(acceptor2,proposer2)', '~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~didNotPromise(acceptor0)', '~start(proposer0)']
597     : -0-0-----0---------1-1----0
597     : ['promise(acceptor1,proposer1)', 'promise(acceptor2,proposer0)', '~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~didNotPromise(acceptor0)', '~start(proposer2)']
598     : --0-0----0----------1-1-0--
598     : ['promise(acceptor1,proposer2)', 'promise(acceptor2,proposer1)', '~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~didNotPromise(acceptor0)', '~start(proposer0)']
599     : --00-----0----------11---0-
599     : ['promise(acceptor1,proposer2)', 'promise(acceptor2,proposer0)', '~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~didNotPromise(acceptor0)', '~start(proposer1)']
num_forall :   0
num_exists :   0
num_literals : 0
quantified form : None
qcost : 0




---------- QPrime ----------


---------- ConstArgBinding ----------

terms: ['~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor2)', 'promise(acceptor0,proposer0)', 'promise(acceptor1,proposer2)', '~start(proposer1)', 'member(acceptor0,quorum__acceptor0_acceptor2)', '~member(acceptor1,quorum__acceptor0_acceptor2)', 'member(acceptor2,quorum__acceptor0_acceptor2)', '~member(acceptor0,quorum__acceptor1_acceptor2)', 'member(acceptor1,quorum__acceptor1_acceptor2)', 'member(acceptor2,quorum__acceptor1_acceptor2)']

sign_func_name2args: {'1$chosenAt': [(Const('quorum__acceptor0_acceptor2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), Const('proposer0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))), (Const('quorum__acceptor1_acceptor2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), Const('proposer2', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))))], '1$didNotPromise': [(Const('acceptor2', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))),)], '0$promise': [(Const('acceptor0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Const('proposer0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))), (Const('acceptor1', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Const('proposer2', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))))], '1$start': [(Const('proposer1', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))),)], '0$member': [(Const('acceptor0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Const('quorum__acceptor0_acceptor2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')))), (Const('acceptor2', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Const('quorum__acceptor0_acceptor2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')))), (Const('acceptor1', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Const('quorum__acceptor1_acceptor2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')))), (Const('acceptor2', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Const('quorum__acceptor1_acceptor2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))))], '1$member': [(Const('acceptor1', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Const('quorum__acceptor0_acceptor2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')))), (Const('acceptor0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Const('quorum__acceptor1_acceptor2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))))]}

const2sigs: {Const('quorum__acceptor0_acceptor2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))): [quorum$1$chosenAt$0$0, quorum$0$member$1$0, quorum$0$member$1$1, quorum$1$member$1$0], Const('proposer0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))): [proposer$1$chosenAt$1$0, proposer$0$promise$1$0], Const('quorum__acceptor1_acceptor2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))): [quorum$1$chosenAt$0$1, quorum$0$member$1$2, quorum$0$member$1$3, quorum$1$member$1$1], Const('proposer2', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))): [proposer$1$chosenAt$1$1, proposer$0$promise$1$1], Const('acceptor2', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))): [acceptor$1$didNotPromise$0$0, acceptor$0$member$0$1, acceptor$0$member$0$3], Const('acceptor0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))): [acceptor$0$promise$0$0, acceptor$0$member$0$0, acceptor$1$member$0$1], Const('acceptor1', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))): [acceptor$0$promise$0$1, acceptor$0$member$0$2, acceptor$1$member$0$0], Const('proposer1', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))): [proposer$1$start$0$0]}

sig2const: {'quorum$1$chosenAt$0$0': Const('quorum__acceptor0_acceptor2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), 'proposer$1$chosenAt$1$0': Const('proposer0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))), 'quorum$1$chosenAt$0$1': Const('quorum__acceptor1_acceptor2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), 'proposer$1$chosenAt$1$1': Const('proposer2', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))), 'acceptor$1$didNotPromise$0$0': Const('acceptor2', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), 'acceptor$0$promise$0$0': Const('acceptor0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), 'proposer$0$promise$1$0': Const('proposer0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))), 'acceptor$0$promise$0$1': Const('acceptor1', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), 'proposer$0$promise$1$1': Const('proposer2', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))), 'proposer$1$start$0$0': Const('proposer1', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))), 'acceptor$0$member$0$0': Const('acceptor0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), 'quorum$0$member$1$0': Const('quorum__acceptor0_acceptor2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), 'acceptor$0$member$0$1': Const('acceptor2', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), 'quorum$0$member$1$1': Const('quorum__acceptor0_acceptor2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), 'acceptor$0$member$0$2': Const('acceptor1', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), 'quorum$0$member$1$2': Const('quorum__acceptor1_acceptor2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), 'acceptor$0$member$0$3': Const('acceptor2', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), 'quorum$0$member$1$3': Const('quorum__acceptor1_acceptor2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), 'acceptor$1$member$0$0': Const('acceptor1', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), 'quorum$1$member$1$0': Const('quorum__acceptor0_acceptor2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), 'acceptor$1$member$0$1': Const('acceptor0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), 'quorum$1$member$1$1': Const('quorum__acceptor1_acceptor2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')))}


---------- ArgPartition ----------

sort2class_sigs: {EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')): [quorum$0$member$1$0; quorum$0$member$1$1; quorum$1$chosenAt$0$0; quorum$1$member$1$0, quorum$0$member$1$2; quorum$0$member$1$3; quorum$1$chosenAt$0$1; quorum$1$member$1$1], EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')): [proposer$0$promise$1$0; proposer$1$chosenAt$1$0, proposer$0$promise$1$1; proposer$1$chosenAt$1$1, proposer$1$start$0$0], EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')): [acceptor$0$member$0$0; acceptor$0$promise$0$0; acceptor$1$member$0$1, acceptor$0$member$0$1; acceptor$0$member$0$3; acceptor$1$didNotPromise$0$0, acceptor$0$member$0$2; acceptor$0$promise$0$1; acceptor$1$member$0$0]}

sort2part_sig: {EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')): quorum$0$member$1$0; quorum$0$member$1$1; quorum$1$chosenAt$0$0; quorum$1$member$1$0 | quorum$0$member$1$2; quorum$0$member$1$3; quorum$1$chosenAt$0$1; quorum$1$member$1$1, EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')): proposer$0$promise$1$0; proposer$1$chosenAt$1$0 | proposer$0$promise$1$1; proposer$1$chosenAt$1$1 | proposer$1$start$0$0, EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')): acceptor$0$member$0$0; acceptor$0$promise$0$0; acceptor$1$member$0$1 | acceptor$0$member$0$1; acceptor$0$member$0$3; acceptor$1$didNotPromise$0$0 | acceptor$0$member$0$2; acceptor$0$promise$0$1; acceptor$1$member$0$0}

part_sig: ('acceptor$0$member$0$0; acceptor$0$promise$0$0; acceptor$1$member$0$1 | acceptor$0$member$0$1; acceptor$0$member$0$3; acceptor$1$didNotPromise$0$0 | acceptor$0$member$0$2; acceptor$0$promise$0$1; acceptor$1$member$0$0', 'proposer$0$promise$1$0; proposer$1$chosenAt$1$0 | proposer$0$promise$1$1; proposer$1$chosenAt$1$1 | proposer$1$start$0$0', 'quorum$0$member$1$0; quorum$0$member$1$1; quorum$1$chosenAt$0$0; quorum$1$member$1$0 | quorum$0$member$1$2; quorum$0$member$1$3; quorum$1$chosenAt$0$1; quorum$1$member$1$1')


---------- SigGenerator ----------

terms:  ['~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor2)', 'promise(acceptor0,proposer0)', 'promise(acceptor1,proposer2)', '~start(proposer1)', 'member(acceptor0,quorum__acceptor0_acceptor2)', '~member(acceptor1,quorum__acceptor0_acceptor2)', 'member(acceptor2,quorum__acceptor0_acceptor2)', '~member(acceptor0,quorum__acceptor1_acceptor2)', 'member(acceptor1,quorum__acceptor1_acceptor2)', 'member(acceptor2,quorum__acceptor1_acceptor2)']

func_name2symbol:  {'chosenAt': Const('chosenAt', FunctionSort(EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')), EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')), BooleanSort())), 'didNotPromise': Const('didNotPromise', FunctionSort(EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')), BooleanSort())), 'promise': Const('promise', FunctionSort(EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')), EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')), BooleanSort())), 'start': Const('start', FunctionSort(EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')), BooleanSort())), 'member': Const('member', FunctionSort(EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')), EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')), BooleanSort()))}

func_name2args_sort:  {'chosenAt': (EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')), EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))), 'didNotPromise': (EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')),), 'promise': (EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')), EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))), 'start': (EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')),), 'member': (EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')), EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')))}

sign_func_name2count:  {'1$chosenAt': 2, '1$didNotPromise': 1, '0$promise': 2, '1$start': 1, '0$member': 4, '1$member': 2}


---------- ProductArgPartition ----------

sort2class_sigs: {EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')): [quorum$0$member$1$0; quorum$0$member$1$1; quorum$1$chosenAt$0$0; quorum$1$member$1$0, quorum$0$member$1$2; quorum$0$member$1$3; quorum$1$chosenAt$0$1; quorum$1$member$1$1], EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')): [proposer$0$promise$1$0; proposer$1$chosenAt$1$0, proposer$0$promise$1$1; proposer$1$chosenAt$1$1, proposer$1$start$0$0], EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')): [acceptor$0$member$0$0; acceptor$0$promise$0$0; acceptor$1$member$0$1, acceptor$0$member$0$1; acceptor$0$member$0$3; acceptor$1$didNotPromise$0$0, acceptor$0$member$0$2; acceptor$0$promise$0$1; acceptor$1$member$0$0]}

sort2part_sig: {EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')): quorum$0$member$1$0; quorum$0$member$1$1; quorum$1$chosenAt$0$0; quorum$1$member$1$0 | quorum$0$member$1$2; quorum$0$member$1$3; quorum$1$chosenAt$0$1; quorum$1$member$1$1, EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')): proposer$0$promise$1$0; proposer$1$chosenAt$1$0 | proposer$0$promise$1$1; proposer$1$chosenAt$1$1 | proposer$1$start$0$0, EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')): acceptor$0$member$0$0; acceptor$0$promise$0$0; acceptor$1$member$0$1 | acceptor$0$member$0$1; acceptor$0$member$0$3; acceptor$1$didNotPromise$0$0 | acceptor$0$member$0$2; acceptor$0$promise$0$1; acceptor$1$member$0$0}

	sort: quorum

	identical_classes: {'quorum$0$member$1; quorum$0$member$1; quorum$1$chosenAt$0; quorum$1$member$1': [quorum$0$member$1$0; quorum$0$member$1$1; quorum$1$chosenAt$0$0; quorum$1$member$1$0, quorum$0$member$1$2; quorum$0$member$1$3; quorum$1$chosenAt$0$1; quorum$1$member$1$1]}

	identical_single_classes: {}

	identical_multi_classes: {'quorum$0$member$1; quorum$0$member$1; quorum$1$chosenAt$0; quorum$1$member$1': [quorum$0$member$1$0, quorum$0$member$1$1, quorum$1$chosenAt$0$0, quorum$1$member$1$0, quorum$0$member$1$2, quorum$0$member$1$3, quorum$1$chosenAt$0$1, quorum$1$member$1$1]}

	sort: proposer

	identical_classes: {'proposer$0$promise$1; proposer$1$chosenAt$1': [proposer$0$promise$1$0; proposer$1$chosenAt$1$0, proposer$0$promise$1$1; proposer$1$chosenAt$1$1], 'proposer$1$start$0': [proposer$1$start$0$0]}

	identical_single_classes: {'proposer$1$start$0': proposer$1$start$0$0}

	identical_multi_classes: {'proposer$0$promise$1; proposer$1$chosenAt$1': [proposer$0$promise$1$0, proposer$1$chosenAt$1$0, proposer$0$promise$1$1, proposer$1$chosenAt$1$1]}

	sort: acceptor

	identical_classes: {'acceptor$0$member$0; acceptor$0$promise$0; acceptor$1$member$0': [acceptor$0$member$0$0; acceptor$0$promise$0$0; acceptor$1$member$0$1, acceptor$0$member$0$2; acceptor$0$promise$0$1; acceptor$1$member$0$0], 'acceptor$0$member$0; acceptor$0$member$0; acceptor$1$didNotPromise$0': [acceptor$0$member$0$1; acceptor$0$member$0$3; acceptor$1$didNotPromise$0$0]}

	identical_single_classes: {'acceptor$0$member$0; acceptor$0$member$0; acceptor$1$didNotPromise$0': acceptor$0$member$0$1; acceptor$0$member$0$3; acceptor$1$didNotPromise$0$0}

	identical_multi_classes: {'acceptor$0$member$0; acceptor$0$promise$0; acceptor$1$member$0': [acceptor$0$member$0$0, acceptor$0$promise$0$0, acceptor$1$member$0$1, acceptor$0$member$0$2, acceptor$0$promise$0$1, acceptor$1$member$0$0]}


---------- QInference: _set_sort_to_quantifier_mode ----------

quantifier mode: quorum: QuantifierMode.forall

quantifier mode: proposer: QuantifierMode.forall

quantifier mode: acceptor: QuantifierMode.forall


---------- QInference: _set_constraint_mode ----------

constraint mode: ConstraintMode.no_merge


---------- QFormula: _set_qvars ----------

forall_qvars: {Var('ACCEPTOR0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Var('QUORUM1', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), Var('PROPOSER0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))), Var('ACCEPTOR2', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Var('QUORUM0', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), Var('PROPOSER2', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))), Var('ACCEPTOR1', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Var('PROPOSER1', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))}

exists_qvars: set()


---------- QFormula: _set_signed_func_name_to_args ----------

signed_func_name2args: {'1$chosenAt': [[Var('QUORUM0', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), Var('PROPOSER0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))], [Var('QUORUM1', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), Var('PROPOSER1', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))]], '1$didNotPromise': [[Var('ACCEPTOR1', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')))]], '0$promise': [[Var('ACCEPTOR0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Var('PROPOSER0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))], [Var('ACCEPTOR2', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Var('PROPOSER1', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))]], '1$start': [[Var('PROPOSER2', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))]], '0$member': [[Var('ACCEPTOR0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Var('QUORUM0', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')))], [Var('ACCEPTOR1', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Var('QUORUM0', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')))], [Var('ACCEPTOR2', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Var('QUORUM1', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')))], [Var('ACCEPTOR1', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Var('QUORUM1', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')))]], '1$member': [[Var('ACCEPTOR2', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Var('QUORUM0', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')))], [Var('ACCEPTOR0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Var('QUORUM1', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')))]]}


---------- QFormula: _set_qterms ----------

qterms: ['~member(ACCEPTOR0,QUORUM1)', 'member(ACCEPTOR1,QUORUM1)', 'promise(ACCEPTOR2,PROPOSER1)', '~start(PROPOSER2)', 'member(ACCEPTOR0,QUORUM0)', 'member(ACCEPTOR1,QUORUM0)', 'member(ACCEPTOR2,QUORUM1)', '~didNotPromise(ACCEPTOR1)', '~chosenAt(QUORUM0,PROPOSER0)', '~chosenAt(QUORUM1,PROPOSER1)', 'promise(ACCEPTOR0,PROPOSER0)', '~member(ACCEPTOR2,QUORUM0)']


---------- QFormula: get_qclause ----------

qclause: forall QUORUM0,PROPOSER2,PROPOSER1,ACCEPTOR1,QUORUM1,ACCEPTOR0,PROPOSER0,ACCEPTOR2. member(ACCEPTOR0,QUORUM1) | ~member(ACCEPTOR1,QUORUM1) | ~promise(ACCEPTOR2,PROPOSER1) | start(PROPOSER2) | ~member(ACCEPTOR0,QUORUM0) | ~member(ACCEPTOR1,QUORUM0) | ~member(ACCEPTOR2,QUORUM1) | didNotPromise(ACCEPTOR1) | chosenAt(QUORUM0,PROPOSER0) | chosenAt(QUORUM1,PROPOSER1) | ~promise(ACCEPTOR0,PROPOSER0) | member(ACCEPTOR2,QUORUM0) | (PROPOSER1 = PROPOSER2 | ACCEPTOR0 = ACCEPTOR1 | QUORUM0 = QUORUM1 | PROPOSER0 = PROPOSER1 | ACCEPTOR1 = ACCEPTOR2 | ACCEPTOR0 = ACCEPTOR2 | PROPOSER0 = PROPOSER2)


=== Prime Orbit 38 =====================
size : 18
num_suborbits: 1
600 (*) : -0-----0--0--1----0-------0
600     : ['leader(proposer1)', '~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor1)', '~promise(acceptor1,proposer0)', '~start(proposer2)']
601     : --0-----0-0---1---0------0-
601     : ['leader(proposer2)', '~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor1)', '~promise(acceptor1,proposer0)', '~start(proposer1)']
602     : 0-----0---0-1------0------0
602     : ['leader(proposer0)', '~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor1)', '~promise(acceptor1,proposer1)', '~start(proposer2)']
603     : --0-----0-0---1----0----0--
603     : ['leader(proposer2)', '~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor1)', '~promise(acceptor1,proposer1)', '~start(proposer0)']
604     : 0-----0---0-1-------0----0-
604     : ['leader(proposer0)', '~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor1)', '~promise(acceptor1,proposer2)', '~start(proposer1)']
605     : -0-----0--0--1------0---0--
605     : ['leader(proposer1)', '~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor1)', '~promise(acceptor1,proposer2)', '~start(proposer0)']
606     : ----0--0---0-1-------0----0
606     : ['leader(proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor2)', '~promise(acceptor2,proposer0)', '~start(proposer2)']
607     : -----0--0--0--1------0---0-
607     : ['leader(proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor2)', '~promise(acceptor2,proposer0)', '~start(proposer1)']
608     : ---0--0----01---------0---0
608     : ['leader(proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor2)', '~promise(acceptor2,proposer1)', '~start(proposer2)']
609     : -----0--0--0--1-------0-0--
609     : ['leader(proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor2)', '~promise(acceptor2,proposer1)', '~start(proposer0)']
610     : ---0--0----01----------0-0-
610     : ['leader(proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor2)', '~promise(acceptor2,proposer2)', '~start(proposer1)']
611     : ----0--0---0-1---------00--
611     : ['leader(proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor2)', '~promise(acceptor2,proposer2)', '~start(proposer0)']
612     : -0--0----0---1-0----------0
612     : ['leader(proposer1)', '~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~didNotPromise(acceptor0)', '~promise(acceptor0,proposer0)', '~start(proposer2)']
613     : --0--0---0----10---------0-
613     : ['leader(proposer2)', '~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~didNotPromise(acceptor0)', '~promise(acceptor0,proposer0)', '~start(proposer1)']
614     : 0--0-----0--1---0---------0
614     : ['leader(proposer0)', '~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~didNotPromise(acceptor0)', '~promise(acceptor0,proposer1)', '~start(proposer2)']
615     : --0--0---0----1-0-------0--
615     : ['leader(proposer2)', '~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~didNotPromise(acceptor0)', '~promise(acceptor0,proposer1)', '~start(proposer0)']
616     : 0--0-----0--1----0-------0-
616     : ['leader(proposer0)', '~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~didNotPromise(acceptor0)', '~promise(acceptor0,proposer2)', '~start(proposer1)']
617     : -0--0----0---1---0------0--
617     : ['leader(proposer1)', '~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~didNotPromise(acceptor0)', '~promise(acceptor0,proposer2)', '~start(proposer0)']
num_forall :   0
num_exists :   0
num_literals : 0
quantified form : None
qcost : 0




---------- QPrime ----------


---------- ConstArgBinding ----------

terms: ['~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor1)', 'leader(proposer1)', '~promise(acceptor1,proposer0)', '~start(proposer2)', 'member(acceptor1,quorum__acceptor0_acceptor1)', 'member(acceptor1,quorum__acceptor1_acceptor2)']

sign_func_name2args: {'1$chosenAt': [(Const('quorum__acceptor0_acceptor1', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), Const('proposer1', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))), (Const('quorum__acceptor1_acceptor2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), Const('proposer1', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))))], '1$didNotPromise': [(Const('acceptor1', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))),)], '0$leader': [(Const('proposer1', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))),)], '1$promise': [(Const('acceptor1', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Const('proposer0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))))], '1$start': [(Const('proposer2', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))),)], '0$member': [(Const('acceptor1', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Const('quorum__acceptor0_acceptor1', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')))), (Const('acceptor1', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Const('quorum__acceptor1_acceptor2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))))]}

const2sigs: {Const('quorum__acceptor0_acceptor1', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))): [quorum$1$chosenAt$0$0, quorum$0$member$1$0], Const('proposer1', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))): [proposer$1$chosenAt$1$0, proposer$1$chosenAt$1$1, proposer$0$leader$0$0], Const('quorum__acceptor1_acceptor2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))): [quorum$1$chosenAt$0$1, quorum$0$member$1$1], Const('acceptor1', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))): [acceptor$1$didNotPromise$0$0, acceptor$1$promise$0$0, acceptor$0$member$0$0, acceptor$0$member$0$1], Const('proposer0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))): [proposer$1$promise$1$0], Const('proposer2', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))): [proposer$1$start$0$0]}

sig2const: {'quorum$1$chosenAt$0$0': Const('quorum__acceptor0_acceptor1', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), 'proposer$1$chosenAt$1$0': Const('proposer1', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))), 'quorum$1$chosenAt$0$1': Const('quorum__acceptor1_acceptor2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), 'proposer$1$chosenAt$1$1': Const('proposer1', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))), 'acceptor$1$didNotPromise$0$0': Const('acceptor1', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), 'proposer$0$leader$0$0': Const('proposer1', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))), 'acceptor$1$promise$0$0': Const('acceptor1', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), 'proposer$1$promise$1$0': Const('proposer0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))), 'proposer$1$start$0$0': Const('proposer2', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))), 'acceptor$0$member$0$0': Const('acceptor1', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), 'quorum$0$member$1$0': Const('quorum__acceptor0_acceptor1', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), 'acceptor$0$member$0$1': Const('acceptor1', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), 'quorum$0$member$1$1': Const('quorum__acceptor1_acceptor2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')))}


---------- ArgPartition ----------

sort2class_sigs: {EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')): [quorum$0$member$1$0; quorum$1$chosenAt$0$0, quorum$0$member$1$1; quorum$1$chosenAt$0$1], EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')): [proposer$0$leader$0$0; proposer$1$chosenAt$1$0; proposer$1$chosenAt$1$1, proposer$1$promise$1$0, proposer$1$start$0$0], EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')): [acceptor$0$member$0$0; acceptor$0$member$0$1; acceptor$1$didNotPromise$0$0; acceptor$1$promise$0$0]}

sort2part_sig: {EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')): quorum$0$member$1$0; quorum$1$chosenAt$0$0 | quorum$0$member$1$1; quorum$1$chosenAt$0$1, EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')): proposer$0$leader$0$0; proposer$1$chosenAt$1$0; proposer$1$chosenAt$1$1 | proposer$1$promise$1$0 | proposer$1$start$0$0, EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')): acceptor$0$member$0$0; acceptor$0$member$0$1; acceptor$1$didNotPromise$0$0; acceptor$1$promise$0$0}

part_sig: ('acceptor$0$member$0$0; acceptor$0$member$0$1; acceptor$1$didNotPromise$0$0; acceptor$1$promise$0$0', 'proposer$0$leader$0$0; proposer$1$chosenAt$1$0; proposer$1$chosenAt$1$1 | proposer$1$promise$1$0 | proposer$1$start$0$0', 'quorum$0$member$1$0; quorum$1$chosenAt$0$0 | quorum$0$member$1$1; quorum$1$chosenAt$0$1')


---------- SigGenerator ----------

terms:  ['~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor1)', 'leader(proposer1)', '~promise(acceptor1,proposer0)', '~start(proposer2)', 'member(acceptor1,quorum__acceptor0_acceptor1)', 'member(acceptor1,quorum__acceptor1_acceptor2)']

func_name2symbol:  {'chosenAt': Const('chosenAt', FunctionSort(EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')), EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')), BooleanSort())), 'didNotPromise': Const('didNotPromise', FunctionSort(EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')), BooleanSort())), 'leader': Const('leader', FunctionSort(EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')), BooleanSort())), 'promise': Const('promise', FunctionSort(EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')), EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')), BooleanSort())), 'start': Const('start', FunctionSort(EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')), BooleanSort())), 'member': Const('member', FunctionSort(EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')), EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')), BooleanSort()))}

func_name2args_sort:  {'chosenAt': (EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')), EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))), 'didNotPromise': (EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')),), 'leader': (EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')),), 'promise': (EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')), EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))), 'start': (EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')),), 'member': (EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')), EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')))}

sign_func_name2count:  {'1$chosenAt': 2, '1$didNotPromise': 1, '0$leader': 1, '1$promise': 1, '1$start': 1, '0$member': 2}


---------- ProductArgPartition ----------

sort2class_sigs: {EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')): [quorum$0$member$1$0; quorum$1$chosenAt$0$0, quorum$0$member$1$1; quorum$1$chosenAt$0$1], EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')): [proposer$0$leader$0$0; proposer$1$chosenAt$1$0; proposer$1$chosenAt$1$1, proposer$1$promise$1$0, proposer$1$start$0$0], EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')): [acceptor$0$member$0$0; acceptor$0$member$0$1; acceptor$1$didNotPromise$0$0; acceptor$1$promise$0$0]}

sort2part_sig: {EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')): quorum$0$member$1$0; quorum$1$chosenAt$0$0 | quorum$0$member$1$1; quorum$1$chosenAt$0$1, EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')): proposer$0$leader$0$0; proposer$1$chosenAt$1$0; proposer$1$chosenAt$1$1 | proposer$1$promise$1$0 | proposer$1$start$0$0, EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')): acceptor$0$member$0$0; acceptor$0$member$0$1; acceptor$1$didNotPromise$0$0; acceptor$1$promise$0$0}

	sort: quorum

	identical_classes: {'quorum$0$member$1; quorum$1$chosenAt$0': [quorum$0$member$1$0; quorum$1$chosenAt$0$0, quorum$0$member$1$1; quorum$1$chosenAt$0$1]}

	identical_single_classes: {}

	identical_multi_classes: {'quorum$0$member$1; quorum$1$chosenAt$0': [quorum$0$member$1$0, quorum$1$chosenAt$0$0, quorum$0$member$1$1, quorum$1$chosenAt$0$1]}

	sort: proposer

	identical_classes: {'proposer$0$leader$0; proposer$1$chosenAt$1; proposer$1$chosenAt$1': [proposer$0$leader$0$0; proposer$1$chosenAt$1$0; proposer$1$chosenAt$1$1], 'proposer$1$promise$1': [proposer$1$promise$1$0], 'proposer$1$start$0': [proposer$1$start$0$0]}

	identical_single_classes: {'proposer$0$leader$0; proposer$1$chosenAt$1; proposer$1$chosenAt$1': proposer$0$leader$0$0; proposer$1$chosenAt$1$0; proposer$1$chosenAt$1$1, 'proposer$1$promise$1': proposer$1$promise$1$0, 'proposer$1$start$0': proposer$1$start$0$0}

	identical_multi_classes: {}

	sort: acceptor

	identical_classes: {'acceptor$0$member$0; acceptor$0$member$0; acceptor$1$didNotPromise$0; acceptor$1$promise$0': [acceptor$0$member$0$0; acceptor$0$member$0$1; acceptor$1$didNotPromise$0$0; acceptor$1$promise$0$0]}

	identical_single_classes: {'acceptor$0$member$0; acceptor$0$member$0; acceptor$1$didNotPromise$0; acceptor$1$promise$0': acceptor$0$member$0$0; acceptor$0$member$0$1; acceptor$1$didNotPromise$0$0; acceptor$1$promise$0$0}

	identical_multi_classes: {}


---------- QInference: _set_sort_to_quantifier_mode ----------

quantifier mode: quorum: QuantifierMode.forall

quantifier mode: proposer: QuantifierMode.forall

quantifier mode: acceptor: QuantifierMode.forall


---------- QInference: _set_constraint_mode ----------

constraint mode: ConstraintMode.no_merge


---------- QFormula: _set_qvars ----------

forall_qvars: {Var('ACCEPTOR0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Var('QUORUM1', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), Var('PROPOSER0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))), Var('QUORUM0', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), Var('PROPOSER2', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))), Var('PROPOSER1', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))}

exists_qvars: set()


---------- QFormula: _set_signed_func_name_to_args ----------

signed_func_name2args: {'1$chosenAt': [[Var('QUORUM0', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), Var('PROPOSER0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))], [Var('QUORUM1', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), Var('PROPOSER0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))]], '1$didNotPromise': [[Var('ACCEPTOR0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')))]], '0$leader': [[Var('PROPOSER0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))]], '1$promise': [[Var('ACCEPTOR0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Var('PROPOSER1', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))]], '1$start': [[Var('PROPOSER2', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))]], '0$member': [[Var('ACCEPTOR0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Var('QUORUM0', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')))], [Var('ACCEPTOR0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Var('QUORUM1', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')))]]}


---------- QFormula: _set_qterms ----------

qterms: ['~chosenAt(QUORUM1,PROPOSER0)', '~didNotPromise(ACCEPTOR0)', '~promise(ACCEPTOR0,PROPOSER1)', '~start(PROPOSER2)', 'member(ACCEPTOR0,QUORUM0)', 'leader(PROPOSER0)', '~chosenAt(QUORUM0,PROPOSER0)', 'member(ACCEPTOR0,QUORUM1)']


---------- QFormula: get_qclause ----------

qclause: forall QUORUM0,PROPOSER2,PROPOSER1,ACCEPTOR0,PROPOSER0,QUORUM1. chosenAt(QUORUM1,PROPOSER0) | didNotPromise(ACCEPTOR0) | promise(ACCEPTOR0,PROPOSER1) | start(PROPOSER2) | ~member(ACCEPTOR0,QUORUM0) | ~leader(PROPOSER0) | chosenAt(QUORUM0,PROPOSER0) | ~member(ACCEPTOR0,QUORUM1) | (QUORUM0 = QUORUM1 | PROPOSER1 = PROPOSER2 | PROPOSER0 = PROPOSER1 | PROPOSER0 = PROPOSER2)


=== Prime Orbit 39 =====================
size : 9
num_suborbits: 1
618 (*) : -0-----0--0--1----0-0------
618     : ['leader(proposer1)', '~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor1)', '~promise(acceptor1,proposer0)', '~promise(acceptor1,proposer2)']
619     : --0-----0-0---1---00-------
619     : ['leader(proposer2)', '~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor1)', '~promise(acceptor1,proposer0)', '~promise(acceptor1,proposer1)']
620     : 0-----0---0-1------00------
620     : ['leader(proposer0)', '~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor1)', '~promise(acceptor1,proposer1)', '~promise(acceptor1,proposer2)']
621     : ----0--0---0-1-------0-0---
621     : ['leader(proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor2)', '~promise(acceptor2,proposer0)', '~promise(acceptor2,proposer2)']
622     : -----0--0--0--1------00----
622     : ['leader(proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor2)', '~promise(acceptor2,proposer0)', '~promise(acceptor2,proposer1)']
623     : ---0--0----01---------00---
623     : ['leader(proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor2)', '~promise(acceptor2,proposer1)', '~promise(acceptor2,proposer2)']
624     : -0--0----0---1-0-0---------
624     : ['leader(proposer1)', '~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~didNotPromise(acceptor0)', '~promise(acceptor0,proposer0)', '~promise(acceptor0,proposer2)']
625     : --0--0---0----100----------
625     : ['leader(proposer2)', '~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~didNotPromise(acceptor0)', '~promise(acceptor0,proposer0)', '~promise(acceptor0,proposer1)']
626     : 0--0-----0--1---00---------
626     : ['leader(proposer0)', '~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~didNotPromise(acceptor0)', '~promise(acceptor0,proposer1)', '~promise(acceptor0,proposer2)']
num_forall :   0
num_exists :   0
num_literals : 0
quantified form : None
qcost : 0




---------- QPrime ----------


---------- ConstArgBinding ----------

terms: ['~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor1)', 'leader(proposer1)', '~promise(acceptor1,proposer0)', '~promise(acceptor1,proposer2)', 'member(acceptor1,quorum__acceptor0_acceptor1)', 'member(acceptor1,quorum__acceptor1_acceptor2)']

sign_func_name2args: {'1$chosenAt': [(Const('quorum__acceptor0_acceptor1', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), Const('proposer1', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))), (Const('quorum__acceptor1_acceptor2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), Const('proposer1', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))))], '1$didNotPromise': [(Const('acceptor1', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))),)], '0$leader': [(Const('proposer1', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))),)], '1$promise': [(Const('acceptor1', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Const('proposer0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))), (Const('acceptor1', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Const('proposer2', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))))], '0$member': [(Const('acceptor1', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Const('quorum__acceptor0_acceptor1', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')))), (Const('acceptor1', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Const('quorum__acceptor1_acceptor2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))))]}

const2sigs: {Const('quorum__acceptor0_acceptor1', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))): [quorum$1$chosenAt$0$0, quorum$0$member$1$0], Const('proposer1', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))): [proposer$1$chosenAt$1$0, proposer$1$chosenAt$1$1, proposer$0$leader$0$0], Const('quorum__acceptor1_acceptor2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))): [quorum$1$chosenAt$0$1, quorum$0$member$1$1], Const('acceptor1', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))): [acceptor$1$didNotPromise$0$0, acceptor$1$promise$0$0, acceptor$1$promise$0$1, acceptor$0$member$0$0, acceptor$0$member$0$1], Const('proposer0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))): [proposer$1$promise$1$0], Const('proposer2', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))): [proposer$1$promise$1$1]}

sig2const: {'quorum$1$chosenAt$0$0': Const('quorum__acceptor0_acceptor1', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), 'proposer$1$chosenAt$1$0': Const('proposer1', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))), 'quorum$1$chosenAt$0$1': Const('quorum__acceptor1_acceptor2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), 'proposer$1$chosenAt$1$1': Const('proposer1', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))), 'acceptor$1$didNotPromise$0$0': Const('acceptor1', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), 'proposer$0$leader$0$0': Const('proposer1', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))), 'acceptor$1$promise$0$0': Const('acceptor1', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), 'proposer$1$promise$1$0': Const('proposer0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))), 'acceptor$1$promise$0$1': Const('acceptor1', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), 'proposer$1$promise$1$1': Const('proposer2', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))), 'acceptor$0$member$0$0': Const('acceptor1', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), 'quorum$0$member$1$0': Const('quorum__acceptor0_acceptor1', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), 'acceptor$0$member$0$1': Const('acceptor1', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), 'quorum$0$member$1$1': Const('quorum__acceptor1_acceptor2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')))}


---------- ArgPartition ----------

sort2class_sigs: {EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')): [quorum$0$member$1$0; quorum$1$chosenAt$0$0, quorum$0$member$1$1; quorum$1$chosenAt$0$1], EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')): [proposer$0$leader$0$0; proposer$1$chosenAt$1$0; proposer$1$chosenAt$1$1, proposer$1$promise$1$0, proposer$1$promise$1$1], EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')): [acceptor$0$member$0$0; acceptor$0$member$0$1; acceptor$1$didNotPromise$0$0; acceptor$1$promise$0$0; acceptor$1$promise$0$1]}

sort2part_sig: {EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')): quorum$0$member$1$0; quorum$1$chosenAt$0$0 | quorum$0$member$1$1; quorum$1$chosenAt$0$1, EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')): proposer$0$leader$0$0; proposer$1$chosenAt$1$0; proposer$1$chosenAt$1$1 | proposer$1$promise$1$0 | proposer$1$promise$1$1, EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')): acceptor$0$member$0$0; acceptor$0$member$0$1; acceptor$1$didNotPromise$0$0; acceptor$1$promise$0$0; acceptor$1$promise$0$1}

part_sig: ('acceptor$0$member$0$0; acceptor$0$member$0$1; acceptor$1$didNotPromise$0$0; acceptor$1$promise$0$0; acceptor$1$promise$0$1', 'proposer$0$leader$0$0; proposer$1$chosenAt$1$0; proposer$1$chosenAt$1$1 | proposer$1$promise$1$0 | proposer$1$promise$1$1', 'quorum$0$member$1$0; quorum$1$chosenAt$0$0 | quorum$0$member$1$1; quorum$1$chosenAt$0$1')


---------- SigGenerator ----------

terms:  ['~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor1)', 'leader(proposer1)', '~promise(acceptor1,proposer0)', '~promise(acceptor1,proposer2)', 'member(acceptor1,quorum__acceptor0_acceptor1)', 'member(acceptor1,quorum__acceptor1_acceptor2)']

func_name2symbol:  {'chosenAt': Const('chosenAt', FunctionSort(EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')), EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')), BooleanSort())), 'didNotPromise': Const('didNotPromise', FunctionSort(EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')), BooleanSort())), 'leader': Const('leader', FunctionSort(EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')), BooleanSort())), 'promise': Const('promise', FunctionSort(EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')), EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')), BooleanSort())), 'member': Const('member', FunctionSort(EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')), EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')), BooleanSort()))}

func_name2args_sort:  {'chosenAt': (EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')), EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))), 'didNotPromise': (EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')),), 'leader': (EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')),), 'promise': (EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')), EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))), 'member': (EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')), EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')))}

sign_func_name2count:  {'1$chosenAt': 2, '1$didNotPromise': 1, '0$leader': 1, '1$promise': 2, '0$member': 2}


---------- ProductArgPartition ----------

sort2class_sigs: {EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')): [quorum$0$member$1$0; quorum$1$chosenAt$0$0, quorum$0$member$1$1; quorum$1$chosenAt$0$1], EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')): [proposer$0$leader$0$0; proposer$1$chosenAt$1$0; proposer$1$chosenAt$1$1, proposer$1$promise$1$0, proposer$1$promise$1$1], EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')): [acceptor$0$member$0$0; acceptor$0$member$0$1; acceptor$1$didNotPromise$0$0; acceptor$1$promise$0$0; acceptor$1$promise$0$1]}

sort2part_sig: {EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')): quorum$0$member$1$0; quorum$1$chosenAt$0$0 | quorum$0$member$1$1; quorum$1$chosenAt$0$1, EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')): proposer$0$leader$0$0; proposer$1$chosenAt$1$0; proposer$1$chosenAt$1$1 | proposer$1$promise$1$0 | proposer$1$promise$1$1, EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')): acceptor$0$member$0$0; acceptor$0$member$0$1; acceptor$1$didNotPromise$0$0; acceptor$1$promise$0$0; acceptor$1$promise$0$1}

	sort: quorum

	identical_classes: {'quorum$0$member$1; quorum$1$chosenAt$0': [quorum$0$member$1$0; quorum$1$chosenAt$0$0, quorum$0$member$1$1; quorum$1$chosenAt$0$1]}

	identical_single_classes: {}

	identical_multi_classes: {'quorum$0$member$1; quorum$1$chosenAt$0': [quorum$0$member$1$0, quorum$1$chosenAt$0$0, quorum$0$member$1$1, quorum$1$chosenAt$0$1]}

	sort: proposer

	identical_classes: {'proposer$0$leader$0; proposer$1$chosenAt$1; proposer$1$chosenAt$1': [proposer$0$leader$0$0; proposer$1$chosenAt$1$0; proposer$1$chosenAt$1$1], 'proposer$1$promise$1': [proposer$1$promise$1$0, proposer$1$promise$1$1]}

	identical_single_classes: {'proposer$0$leader$0; proposer$1$chosenAt$1; proposer$1$chosenAt$1': proposer$0$leader$0$0; proposer$1$chosenAt$1$0; proposer$1$chosenAt$1$1}

	identical_multi_classes: {'proposer$1$promise$1': [proposer$1$promise$1$0, proposer$1$promise$1$1]}

	sort: acceptor

	identical_classes: {'acceptor$0$member$0; acceptor$0$member$0; acceptor$1$didNotPromise$0; acceptor$1$promise$0; acceptor$1$promise$0': [acceptor$0$member$0$0; acceptor$0$member$0$1; acceptor$1$didNotPromise$0$0; acceptor$1$promise$0$0; acceptor$1$promise$0$1]}

	identical_single_classes: {'acceptor$0$member$0; acceptor$0$member$0; acceptor$1$didNotPromise$0; acceptor$1$promise$0; acceptor$1$promise$0': acceptor$0$member$0$0; acceptor$0$member$0$1; acceptor$1$didNotPromise$0$0; acceptor$1$promise$0$0; acceptor$1$promise$0$1}

	identical_multi_classes: {}


---------- QInference: _set_sort_to_quantifier_mode ----------

quantifier mode: quorum: QuantifierMode.forall

quantifier mode: proposer: QuantifierMode.forall_exists

quantifier mode: acceptor: QuantifierMode.forall


---------- QInference: _set_constraint_mode ----------

constraint mode: ConstraintMode.no_merge


---------- QFormula: _set_qvars ----------

forall_qvars: {Var('ACCEPTOR0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Var('QUORUM1', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), Var('PROPOSER1', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))), Var('QUORUM0', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')))}

exists_qvars: {Var('PROPOSER0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))}


---------- QFormula: _set_signed_func_name_to_args ----------

signed_func_name2args: {'1$chosenAt': [[Var('QUORUM0', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), Var('PROPOSER1', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))], [Var('QUORUM1', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), Var('PROPOSER1', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))]], '1$didNotPromise': [[Var('ACCEPTOR0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')))]], '0$leader': [[Var('PROPOSER1', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))]], '1$promise': [[Var('ACCEPTOR0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Var('PROPOSER0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))], [Var('ACCEPTOR0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Var('PROPOSER0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))]], '0$member': [[Var('ACCEPTOR0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Var('QUORUM0', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')))], [Var('ACCEPTOR0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Var('QUORUM1', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')))]]}


---------- QFormula: _set_qterms ----------

qterms: ['~didNotPromise(ACCEPTOR0)', '~promise(ACCEPTOR0,PROPOSER0)', 'leader(PROPOSER1)', 'member(ACCEPTOR0,QUORUM0)', '~chosenAt(QUORUM1,PROPOSER1)', '~chosenAt(QUORUM0,PROPOSER1)', 'member(ACCEPTOR0,QUORUM1)']


---------- QFormula: get_qclause ----------

qclause: forall QUORUM0,QUORUM1,ACCEPTOR0,PROPOSER1. didNotPromise(ACCEPTOR0) | ~leader(PROPOSER1) | ~member(ACCEPTOR0,QUORUM0) | chosenAt(QUORUM1,PROPOSER1) | chosenAt(QUORUM0,PROPOSER1) | ~member(ACCEPTOR0,QUORUM1) | (exists PROPOSER0. (promise(ACCEPTOR0,PROPOSER0) & PROPOSER0 ~= PROPOSER1)) | QUORUM0 = QUORUM1


=== Prime Orbit 40 =====================
size : 9
num_suborbits: 1
627 (*) : -0-----0--0--1----------0-0
627     : ['leader(proposer1)', '~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor1)', '~start(proposer0)', '~start(proposer2)']
628     : --0-----0-0---1---------00-
628     : ['leader(proposer2)', '~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor1)', '~start(proposer0)', '~start(proposer1)']
629     : 0-----0---0-1------------00
629     : ['leader(proposer0)', '~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor1)', '~start(proposer1)', '~start(proposer2)']
630     : ----0--0---0-1----------0-0
630     : ['leader(proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor2)', '~start(proposer0)', '~start(proposer2)']
631     : -----0--0--0--1---------00-
631     : ['leader(proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor2)', '~start(proposer0)', '~start(proposer1)']
632     : ---0--0----01------------00
632     : ['leader(proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor2)', '~start(proposer1)', '~start(proposer2)']
633     : -0--0----0---1----------0-0
633     : ['leader(proposer1)', '~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~didNotPromise(acceptor0)', '~start(proposer0)', '~start(proposer2)']
634     : --0--0---0----1---------00-
634     : ['leader(proposer2)', '~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~didNotPromise(acceptor0)', '~start(proposer0)', '~start(proposer1)']
635     : 0--0-----0--1------------00
635     : ['leader(proposer0)', '~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~didNotPromise(acceptor0)', '~start(proposer1)', '~start(proposer2)']
num_forall :   0
num_exists :   0
num_literals : 0
quantified form : None
qcost : 0




---------- QPrime ----------


---------- ConstArgBinding ----------

terms: ['~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor1)', 'leader(proposer1)', '~start(proposer0)', '~start(proposer2)', 'member(acceptor1,quorum__acceptor0_acceptor1)', 'member(acceptor1,quorum__acceptor1_acceptor2)']

sign_func_name2args: {'1$chosenAt': [(Const('quorum__acceptor0_acceptor1', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), Const('proposer1', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))), (Const('quorum__acceptor1_acceptor2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), Const('proposer1', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))))], '1$didNotPromise': [(Const('acceptor1', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))),)], '0$leader': [(Const('proposer1', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))),)], '1$start': [(Const('proposer0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))),), (Const('proposer2', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))),)], '0$member': [(Const('acceptor1', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Const('quorum__acceptor0_acceptor1', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')))), (Const('acceptor1', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Const('quorum__acceptor1_acceptor2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))))]}

const2sigs: {Const('quorum__acceptor0_acceptor1', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))): [quorum$1$chosenAt$0$0, quorum$0$member$1$0], Const('proposer1', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))): [proposer$1$chosenAt$1$0, proposer$1$chosenAt$1$1, proposer$0$leader$0$0], Const('quorum__acceptor1_acceptor2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))): [quorum$1$chosenAt$0$1, quorum$0$member$1$1], Const('acceptor1', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))): [acceptor$1$didNotPromise$0$0, acceptor$0$member$0$0, acceptor$0$member$0$1], Const('proposer0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))): [proposer$1$start$0$0], Const('proposer2', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))): [proposer$1$start$0$1]}

sig2const: {'quorum$1$chosenAt$0$0': Const('quorum__acceptor0_acceptor1', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), 'proposer$1$chosenAt$1$0': Const('proposer1', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))), 'quorum$1$chosenAt$0$1': Const('quorum__acceptor1_acceptor2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), 'proposer$1$chosenAt$1$1': Const('proposer1', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))), 'acceptor$1$didNotPromise$0$0': Const('acceptor1', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), 'proposer$0$leader$0$0': Const('proposer1', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))), 'proposer$1$start$0$0': Const('proposer0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))), 'proposer$1$start$0$1': Const('proposer2', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))), 'acceptor$0$member$0$0': Const('acceptor1', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), 'quorum$0$member$1$0': Const('quorum__acceptor0_acceptor1', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), 'acceptor$0$member$0$1': Const('acceptor1', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), 'quorum$0$member$1$1': Const('quorum__acceptor1_acceptor2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')))}


---------- ArgPartition ----------

sort2class_sigs: {EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')): [quorum$0$member$1$0; quorum$1$chosenAt$0$0, quorum$0$member$1$1; quorum$1$chosenAt$0$1], EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')): [proposer$0$leader$0$0; proposer$1$chosenAt$1$0; proposer$1$chosenAt$1$1, proposer$1$start$0$0, proposer$1$start$0$1], EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')): [acceptor$0$member$0$0; acceptor$0$member$0$1; acceptor$1$didNotPromise$0$0]}

sort2part_sig: {EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')): quorum$0$member$1$0; quorum$1$chosenAt$0$0 | quorum$0$member$1$1; quorum$1$chosenAt$0$1, EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')): proposer$0$leader$0$0; proposer$1$chosenAt$1$0; proposer$1$chosenAt$1$1 | proposer$1$start$0$0 | proposer$1$start$0$1, EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')): acceptor$0$member$0$0; acceptor$0$member$0$1; acceptor$1$didNotPromise$0$0}

part_sig: ('acceptor$0$member$0$0; acceptor$0$member$0$1; acceptor$1$didNotPromise$0$0', 'proposer$0$leader$0$0; proposer$1$chosenAt$1$0; proposer$1$chosenAt$1$1 | proposer$1$start$0$0 | proposer$1$start$0$1', 'quorum$0$member$1$0; quorum$1$chosenAt$0$0 | quorum$0$member$1$1; quorum$1$chosenAt$0$1')


---------- SigGenerator ----------

terms:  ['~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor1)', 'leader(proposer1)', '~start(proposer0)', '~start(proposer2)', 'member(acceptor1,quorum__acceptor0_acceptor1)', 'member(acceptor1,quorum__acceptor1_acceptor2)']

func_name2symbol:  {'chosenAt': Const('chosenAt', FunctionSort(EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')), EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')), BooleanSort())), 'didNotPromise': Const('didNotPromise', FunctionSort(EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')), BooleanSort())), 'leader': Const('leader', FunctionSort(EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')), BooleanSort())), 'start': Const('start', FunctionSort(EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')), BooleanSort())), 'member': Const('member', FunctionSort(EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')), EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')), BooleanSort()))}

func_name2args_sort:  {'chosenAt': (EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')), EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))), 'didNotPromise': (EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')),), 'leader': (EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')),), 'start': (EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')),), 'member': (EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')), EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')))}

sign_func_name2count:  {'1$chosenAt': 2, '1$didNotPromise': 1, '0$leader': 1, '1$start': 2, '0$member': 2}


---------- ProductArgPartition ----------

sort2class_sigs: {EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')): [quorum$0$member$1$0; quorum$1$chosenAt$0$0, quorum$0$member$1$1; quorum$1$chosenAt$0$1], EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')): [proposer$0$leader$0$0; proposer$1$chosenAt$1$0; proposer$1$chosenAt$1$1, proposer$1$start$0$0, proposer$1$start$0$1], EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')): [acceptor$0$member$0$0; acceptor$0$member$0$1; acceptor$1$didNotPromise$0$0]}

sort2part_sig: {EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')): quorum$0$member$1$0; quorum$1$chosenAt$0$0 | quorum$0$member$1$1; quorum$1$chosenAt$0$1, EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')): proposer$0$leader$0$0; proposer$1$chosenAt$1$0; proposer$1$chosenAt$1$1 | proposer$1$start$0$0 | proposer$1$start$0$1, EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')): acceptor$0$member$0$0; acceptor$0$member$0$1; acceptor$1$didNotPromise$0$0}

	sort: quorum

	identical_classes: {'quorum$0$member$1; quorum$1$chosenAt$0': [quorum$0$member$1$0; quorum$1$chosenAt$0$0, quorum$0$member$1$1; quorum$1$chosenAt$0$1]}

	identical_single_classes: {}

	identical_multi_classes: {'quorum$0$member$1; quorum$1$chosenAt$0': [quorum$0$member$1$0, quorum$1$chosenAt$0$0, quorum$0$member$1$1, quorum$1$chosenAt$0$1]}

	sort: proposer

	identical_classes: {'proposer$0$leader$0; proposer$1$chosenAt$1; proposer$1$chosenAt$1': [proposer$0$leader$0$0; proposer$1$chosenAt$1$0; proposer$1$chosenAt$1$1], 'proposer$1$start$0': [proposer$1$start$0$0, proposer$1$start$0$1]}

	identical_single_classes: {'proposer$0$leader$0; proposer$1$chosenAt$1; proposer$1$chosenAt$1': proposer$0$leader$0$0; proposer$1$chosenAt$1$0; proposer$1$chosenAt$1$1}

	identical_multi_classes: {'proposer$1$start$0': [proposer$1$start$0$0, proposer$1$start$0$1]}

	sort: acceptor

	identical_classes: {'acceptor$0$member$0; acceptor$0$member$0; acceptor$1$didNotPromise$0': [acceptor$0$member$0$0; acceptor$0$member$0$1; acceptor$1$didNotPromise$0$0]}

	identical_single_classes: {'acceptor$0$member$0; acceptor$0$member$0; acceptor$1$didNotPromise$0': acceptor$0$member$0$0; acceptor$0$member$0$1; acceptor$1$didNotPromise$0$0}

	identical_multi_classes: {}


---------- QInference: _set_sort_to_quantifier_mode ----------

quantifier mode: quorum: QuantifierMode.forall

quantifier mode: proposer: QuantifierMode.forall_exists

quantifier mode: acceptor: QuantifierMode.forall


---------- QInference: _set_constraint_mode ----------

constraint mode: ConstraintMode.no_merge


---------- QFormula: _set_qvars ----------

forall_qvars: {Var('ACCEPTOR0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Var('QUORUM1', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), Var('PROPOSER1', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))), Var('QUORUM0', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')))}

exists_qvars: {Var('PROPOSER0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))}


---------- QFormula: _set_signed_func_name_to_args ----------

signed_func_name2args: {'1$chosenAt': [[Var('QUORUM0', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), Var('PROPOSER1', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))], [Var('QUORUM1', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), Var('PROPOSER1', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))]], '1$didNotPromise': [[Var('ACCEPTOR0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')))]], '0$leader': [[Var('PROPOSER1', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))]], '1$start': [[Var('PROPOSER0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))], [Var('PROPOSER0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))]], '0$member': [[Var('ACCEPTOR0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Var('QUORUM0', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')))], [Var('ACCEPTOR0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Var('QUORUM1', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')))]]}


---------- QFormula: _set_qterms ----------

qterms: ['~didNotPromise(ACCEPTOR0)', 'leader(PROPOSER1)', 'member(ACCEPTOR0,QUORUM0)', '~chosenAt(QUORUM1,PROPOSER1)', '~chosenAt(QUORUM0,PROPOSER1)', '~start(PROPOSER0)', 'member(ACCEPTOR0,QUORUM1)']


---------- QFormula: get_qclause ----------

qclause: forall QUORUM0,QUORUM1,ACCEPTOR0,PROPOSER1. didNotPromise(ACCEPTOR0) | ~leader(PROPOSER1) | ~member(ACCEPTOR0,QUORUM0) | chosenAt(QUORUM1,PROPOSER1) | chosenAt(QUORUM0,PROPOSER1) | ~member(ACCEPTOR0,QUORUM1) | (exists PROPOSER0. (start(PROPOSER0) & PROPOSER0 ~= PROPOSER1)) | QUORUM0 = QUORUM1


=== Prime Orbit 41 =====================
size : 18
num_suborbits: 1
636 (*) : --0------00----0--0------0-
636     : ['~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~promise(acceptor0,proposer0)', '~promise(acceptor1,proposer0)', '~start(proposer1)']
637     : -0-------00----0--0-------0
637     : ['~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~promise(acceptor0,proposer0)', '~promise(acceptor1,proposer0)', '~start(proposer2)']
638     : --0------00-----0--0----0--
638     : ['~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~promise(acceptor0,proposer1)', '~promise(acceptor1,proposer1)', '~start(proposer0)']
639     : 0--------00-----0--0------0
639     : ['~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~promise(acceptor0,proposer1)', '~promise(acceptor1,proposer1)', '~start(proposer2)']
640     : -0-------00------0--0---0--
640     : ['~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~promise(acceptor0,proposer2)', '~promise(acceptor1,proposer2)', '~start(proposer0)']
641     : 0--------00------0--0----0-
641     : ['~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~promise(acceptor0,proposer2)', '~promise(acceptor1,proposer2)', '~start(proposer1)']
642     : -----0---0-0---0-----0---0-
642     : ['~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor2)', '~promise(acceptor0,proposer0)', '~promise(acceptor2,proposer0)', '~start(proposer1)']
643     : ----0----0-0---0-----0----0
643     : ['~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor2)', '~promise(acceptor0,proposer0)', '~promise(acceptor2,proposer0)', '~start(proposer2)']
644     : -----0---0-0----0-----0-0--
644     : ['~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor2)', '~promise(acceptor0,proposer1)', '~promise(acceptor2,proposer1)', '~start(proposer0)']
645     : ---0-----0-0----0-----0---0
645     : ['~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor2)', '~promise(acceptor0,proposer1)', '~promise(acceptor2,proposer1)', '~start(proposer2)']
646     : ----0----0-0-----0-----00--
646     : ['~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor2)', '~promise(acceptor0,proposer2)', '~promise(acceptor2,proposer2)', '~start(proposer0)']
647     : ---0-----0-0-----0-----0-0-
647     : ['~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor2)', '~promise(acceptor0,proposer2)', '~promise(acceptor2,proposer2)', '~start(proposer1)']
648     : --------0-00------0--0---0-
648     : ['~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor1,proposer0)', '~promise(acceptor2,proposer0)', '~start(proposer1)']
649     : -------0--00------0--0----0
649     : ['~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor1,proposer0)', '~promise(acceptor2,proposer0)', '~start(proposer2)']
650     : --------0-00-------0--0-0--
650     : ['~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor1,proposer1)', '~promise(acceptor2,proposer1)', '~start(proposer0)']
651     : ------0---00-------0--0---0
651     : ['~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor1,proposer1)', '~promise(acceptor2,proposer1)', '~start(proposer2)']
652     : -------0--00--------0--00--
652     : ['~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor1,proposer2)', '~promise(acceptor2,proposer2)', '~start(proposer0)']
653     : ------0---00--------0--0-0-
653     : ['~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor1,proposer2)', '~promise(acceptor2,proposer2)', '~start(proposer1)']
num_forall :   0
num_exists :   0
num_literals : 0
quantified form : None
qcost : 0




---------- QPrime ----------


---------- ConstArgBinding ----------

terms: ['~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~promise(acceptor0,proposer0)', '~promise(acceptor1,proposer0)', '~start(proposer1)', 'member(acceptor0,quorum__acceptor0_acceptor1)', 'member(acceptor1,quorum__acceptor0_acceptor1)']

sign_func_name2args: {'1$chosenAt': [(Const('quorum__acceptor0_acceptor1', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), Const('proposer2', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))))], '1$didNotPromise': [(Const('acceptor0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))),), (Const('acceptor1', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))),)], '1$promise': [(Const('acceptor0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Const('proposer0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))), (Const('acceptor1', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Const('proposer0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))))], '1$start': [(Const('proposer1', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))),)], '0$member': [(Const('acceptor0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Const('quorum__acceptor0_acceptor1', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')))), (Const('acceptor1', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Const('quorum__acceptor0_acceptor1', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))))]}

const2sigs: {Const('quorum__acceptor0_acceptor1', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))): [quorum$1$chosenAt$0$0, quorum$0$member$1$0, quorum$0$member$1$1], Const('proposer2', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))): [proposer$1$chosenAt$1$0], Const('acceptor0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))): [acceptor$1$didNotPromise$0$0, acceptor$1$promise$0$0, acceptor$0$member$0$0], Const('acceptor1', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))): [acceptor$1$didNotPromise$0$1, acceptor$1$promise$0$1, acceptor$0$member$0$1], Const('proposer0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))): [proposer$1$promise$1$0, proposer$1$promise$1$1], Const('proposer1', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))): [proposer$1$start$0$0]}

sig2const: {'quorum$1$chosenAt$0$0': Const('quorum__acceptor0_acceptor1', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), 'proposer$1$chosenAt$1$0': Const('proposer2', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))), 'acceptor$1$didNotPromise$0$0': Const('acceptor0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), 'acceptor$1$didNotPromise$0$1': Const('acceptor1', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), 'acceptor$1$promise$0$0': Const('acceptor0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), 'proposer$1$promise$1$0': Const('proposer0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))), 'acceptor$1$promise$0$1': Const('acceptor1', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), 'proposer$1$promise$1$1': Const('proposer0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))), 'proposer$1$start$0$0': Const('proposer1', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))), 'acceptor$0$member$0$0': Const('acceptor0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), 'quorum$0$member$1$0': Const('quorum__acceptor0_acceptor1', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), 'acceptor$0$member$0$1': Const('acceptor1', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), 'quorum$0$member$1$1': Const('quorum__acceptor0_acceptor1', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')))}


---------- ArgPartition ----------

sort2class_sigs: {EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')): [quorum$0$member$1$0; quorum$0$member$1$1; quorum$1$chosenAt$0$0], EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')): [proposer$1$chosenAt$1$0, proposer$1$promise$1$0; proposer$1$promise$1$1, proposer$1$start$0$0], EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')): [acceptor$0$member$0$0; acceptor$1$didNotPromise$0$0; acceptor$1$promise$0$0, acceptor$0$member$0$1; acceptor$1$didNotPromise$0$1; acceptor$1$promise$0$1]}

sort2part_sig: {EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')): quorum$0$member$1$0; quorum$0$member$1$1; quorum$1$chosenAt$0$0, EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')): proposer$1$chosenAt$1$0 | proposer$1$promise$1$0; proposer$1$promise$1$1 | proposer$1$start$0$0, EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')): acceptor$0$member$0$0; acceptor$1$didNotPromise$0$0; acceptor$1$promise$0$0 | acceptor$0$member$0$1; acceptor$1$didNotPromise$0$1; acceptor$1$promise$0$1}

part_sig: ('acceptor$0$member$0$0; acceptor$1$didNotPromise$0$0; acceptor$1$promise$0$0 | acceptor$0$member$0$1; acceptor$1$didNotPromise$0$1; acceptor$1$promise$0$1', 'proposer$1$chosenAt$1$0 | proposer$1$promise$1$0; proposer$1$promise$1$1 | proposer$1$start$0$0', 'quorum$0$member$1$0; quorum$0$member$1$1; quorum$1$chosenAt$0$0')


---------- SigGenerator ----------

terms:  ['~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~promise(acceptor0,proposer0)', '~promise(acceptor1,proposer0)', '~start(proposer1)', 'member(acceptor0,quorum__acceptor0_acceptor1)', 'member(acceptor1,quorum__acceptor0_acceptor1)']

func_name2symbol:  {'chosenAt': Const('chosenAt', FunctionSort(EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')), EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')), BooleanSort())), 'didNotPromise': Const('didNotPromise', FunctionSort(EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')), BooleanSort())), 'promise': Const('promise', FunctionSort(EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')), EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')), BooleanSort())), 'start': Const('start', FunctionSort(EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')), BooleanSort())), 'member': Const('member', FunctionSort(EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')), EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')), BooleanSort()))}

func_name2args_sort:  {'chosenAt': (EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')), EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))), 'didNotPromise': (EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')),), 'promise': (EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')), EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))), 'start': (EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')),), 'member': (EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')), EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')))}

sign_func_name2count:  {'1$chosenAt': 1, '1$didNotPromise': 2, '1$promise': 2, '1$start': 1, '0$member': 2}


---------- ProductArgPartition ----------

sort2class_sigs: {EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')): [quorum$0$member$1$0; quorum$0$member$1$1; quorum$1$chosenAt$0$0], EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')): [proposer$1$chosenAt$1$0, proposer$1$promise$1$0; proposer$1$promise$1$1, proposer$1$start$0$0], EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')): [acceptor$0$member$0$0; acceptor$1$didNotPromise$0$0; acceptor$1$promise$0$0, acceptor$0$member$0$1; acceptor$1$didNotPromise$0$1; acceptor$1$promise$0$1]}

sort2part_sig: {EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')): quorum$0$member$1$0; quorum$0$member$1$1; quorum$1$chosenAt$0$0, EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')): proposer$1$chosenAt$1$0 | proposer$1$promise$1$0; proposer$1$promise$1$1 | proposer$1$start$0$0, EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')): acceptor$0$member$0$0; acceptor$1$didNotPromise$0$0; acceptor$1$promise$0$0 | acceptor$0$member$0$1; acceptor$1$didNotPromise$0$1; acceptor$1$promise$0$1}

	sort: quorum

	identical_classes: {'quorum$0$member$1; quorum$0$member$1; quorum$1$chosenAt$0': [quorum$0$member$1$0; quorum$0$member$1$1; quorum$1$chosenAt$0$0]}

	identical_single_classes: {'quorum$0$member$1; quorum$0$member$1; quorum$1$chosenAt$0': quorum$0$member$1$0; quorum$0$member$1$1; quorum$1$chosenAt$0$0}

	identical_multi_classes: {}

	sort: proposer

	identical_classes: {'proposer$1$chosenAt$1': [proposer$1$chosenAt$1$0], 'proposer$1$promise$1; proposer$1$promise$1': [proposer$1$promise$1$0; proposer$1$promise$1$1], 'proposer$1$start$0': [proposer$1$start$0$0]}

	identical_single_classes: {'proposer$1$chosenAt$1': proposer$1$chosenAt$1$0, 'proposer$1$promise$1; proposer$1$promise$1': proposer$1$promise$1$0; proposer$1$promise$1$1, 'proposer$1$start$0': proposer$1$start$0$0}

	identical_multi_classes: {}

	sort: acceptor

	identical_classes: {'acceptor$0$member$0; acceptor$1$didNotPromise$0; acceptor$1$promise$0': [acceptor$0$member$0$0; acceptor$1$didNotPromise$0$0; acceptor$1$promise$0$0, acceptor$0$member$0$1; acceptor$1$didNotPromise$0$1; acceptor$1$promise$0$1]}

	identical_single_classes: {}

	identical_multi_classes: {'acceptor$0$member$0; acceptor$1$didNotPromise$0; acceptor$1$promise$0': [acceptor$0$member$0$0, acceptor$1$didNotPromise$0$0, acceptor$1$promise$0$0, acceptor$0$member$0$1, acceptor$1$didNotPromise$0$1, acceptor$1$promise$0$1]}


---------- QInference: _set_sort_to_quantifier_mode ----------

quantifier mode: quorum: QuantifierMode.forall

quantifier mode: proposer: QuantifierMode.forall

quantifier mode: acceptor: QuantifierMode.forall


---------- QInference: _set_constraint_mode ----------

constraint mode: ConstraintMode.no_merge


---------- QFormula: _set_qvars ----------

forall_qvars: {Var('ACCEPTOR0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Var('PROPOSER0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))), Var('QUORUM0', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), Var('PROPOSER2', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))), Var('ACCEPTOR1', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Var('PROPOSER1', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))}

exists_qvars: set()


---------- QFormula: _set_signed_func_name_to_args ----------

signed_func_name2args: {'1$chosenAt': [[Var('QUORUM0', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), Var('PROPOSER0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))]], '1$didNotPromise': [[Var('ACCEPTOR0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')))], [Var('ACCEPTOR1', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')))]], '1$promise': [[Var('ACCEPTOR0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Var('PROPOSER1', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))], [Var('ACCEPTOR1', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Var('PROPOSER1', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))]], '1$start': [[Var('PROPOSER2', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))]], '0$member': [[Var('ACCEPTOR0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Var('QUORUM0', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')))], [Var('ACCEPTOR1', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Var('QUORUM0', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')))]]}


---------- QFormula: _set_qterms ----------

qterms: ['~promise(ACCEPTOR1,PROPOSER1)', '~didNotPromise(ACCEPTOR0)', '~promise(ACCEPTOR0,PROPOSER1)', '~start(PROPOSER2)', 'member(ACCEPTOR0,QUORUM0)', 'member(ACCEPTOR1,QUORUM0)', '~didNotPromise(ACCEPTOR1)', '~chosenAt(QUORUM0,PROPOSER0)']


---------- QFormula: get_qclause ----------

qclause: forall QUORUM0,PROPOSER2,PROPOSER1,ACCEPTOR1,ACCEPTOR0,PROPOSER0. promise(ACCEPTOR1,PROPOSER1) | didNotPromise(ACCEPTOR0) | promise(ACCEPTOR0,PROPOSER1) | start(PROPOSER2) | ~member(ACCEPTOR0,QUORUM0) | ~member(ACCEPTOR1,QUORUM0) | didNotPromise(ACCEPTOR1) | chosenAt(QUORUM0,PROPOSER0) | (PROPOSER1 = PROPOSER2 | PROPOSER0 = PROPOSER1 | PROPOSER0 = PROPOSER2 | ACCEPTOR0 = ACCEPTOR1)


=== Prime Orbit 42 =====================
size : 36
num_suborbits: 1
654 (*) : --0-0----0-0--------1--00--
654     : ['promise(acceptor1,proposer2)', '~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor2)', '~promise(acceptor2,proposer2)', '~start(proposer0)']
655     : -0---0---0-0-------1--0-0--
655     : ['promise(acceptor1,proposer1)', '~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor2)', '~promise(acceptor2,proposer1)', '~start(proposer0)']
656     : --00-----0-0--------1--0-0-
656     : ['promise(acceptor1,proposer2)', '~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor2)', '~promise(acceptor2,proposer2)', '~start(proposer1)']
657     : 0----0---0-0------1--0---0-
657     : ['promise(acceptor1,proposer0)', '~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor2)', '~promise(acceptor2,proposer0)', '~start(proposer1)']
658     : -0-0-----0-0-------1--0---0
658     : ['promise(acceptor1,proposer1)', '~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor2)', '~promise(acceptor2,proposer1)', '~start(proposer2)']
659     : 0---0----0-0------1--0----0
659     : ['promise(acceptor1,proposer0)', '~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor2)', '~promise(acceptor2,proposer0)', '~start(proposer2)']
660     : -0---0---00---------0--10--
660     : ['promise(acceptor2,proposer2)', '~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~promise(acceptor1,proposer2)', '~start(proposer0)']
661     : --0-0----00--------0--1-0--
661     : ['promise(acceptor2,proposer1)', '~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~promise(acceptor1,proposer1)', '~start(proposer0)']
662     : 0----0---00---------0--1-0-
662     : ['promise(acceptor2,proposer2)', '~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~promise(acceptor1,proposer2)', '~start(proposer1)']
663     : --00-----00-------0--1---0-
663     : ['promise(acceptor2,proposer0)', '~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~promise(acceptor1,proposer0)', '~start(proposer1)']
664     : 0---0----00--------0--1---0
664     : ['promise(acceptor2,proposer1)', '~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~promise(acceptor1,proposer1)', '~start(proposer2)']
665     : -0-0-----00-------0--1----0
665     : ['promise(acceptor2,proposer0)', '~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~promise(acceptor1,proposer0)', '~start(proposer2)']
666     : --0----0--00-----1-----00--
666     : ['promise(acceptor0,proposer2)', '~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor2,proposer2)', '~start(proposer0)']
667     : -0------0-00----1-----0-0--
667     : ['promise(acceptor0,proposer1)', '~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor2,proposer1)', '~start(proposer0)']
668     : --0---0---00-----1-----0-0-
668     : ['promise(acceptor0,proposer2)', '~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor2,proposer2)', '~start(proposer1)']
669     : 0-------0-00---1-----0---0-
669     : ['promise(acceptor0,proposer0)', '~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor2,proposer0)', '~start(proposer1)']
670     : -0----0---00----1-----0---0
670     : ['promise(acceptor0,proposer1)', '~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor2,proposer1)', '~start(proposer2)']
671     : 0------0--00---1-----0----0
671     : ['promise(acceptor0,proposer0)', '~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor2,proposer0)', '~start(proposer2)']
672     : -0------000------0-----10--
672     : ['promise(acceptor2,proposer2)', '~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~promise(acceptor0,proposer2)', '~start(proposer0)']
673     : --0----0-00-----0-----1-0--
673     : ['promise(acceptor2,proposer1)', '~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~promise(acceptor0,proposer1)', '~start(proposer0)']
674     : 0-------000------0-----1-0-
674     : ['promise(acceptor2,proposer2)', '~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~promise(acceptor0,proposer2)', '~start(proposer1)']
675     : --0---0--00----0-----1---0-
675     : ['promise(acceptor2,proposer0)', '~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~promise(acceptor0,proposer0)', '~start(proposer1)']
676     : 0------0-00-----0-----1---0
676     : ['promise(acceptor2,proposer1)', '~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~promise(acceptor0,proposer1)', '~start(proposer2)']
677     : -0----0--00----0-----1----0
677     : ['promise(acceptor2,proposer0)', '~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~promise(acceptor0,proposer0)', '~start(proposer2)']
678     : -----0-0--00-----1--0---0--
678     : ['promise(acceptor0,proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor1,proposer2)', '~start(proposer0)']
679     : ----0---0-00----1--0----0--
679     : ['promise(acceptor0,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor1,proposer1)', '~start(proposer0)']
680     : -----00---00-----1--0----0-
680     : ['promise(acceptor0,proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor1,proposer2)', '~start(proposer1)']
681     : ---0----0-00---1--0------0-
681     : ['promise(acceptor0,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor1,proposer0)', '~start(proposer1)']
682     : ----0-0---00----1--0------0
682     : ['promise(acceptor0,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor1,proposer1)', '~start(proposer2)']
683     : ---0---0--00---1--0-------0
683     : ['promise(acceptor0,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor1,proposer0)', '~start(proposer2)']
684     : ----0---00-0-----0--1---0--
684     : ['promise(acceptor1,proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor2)', '~promise(acceptor0,proposer2)', '~start(proposer0)']
685     : -----0-0-0-0----0--1----0--
685     : ['promise(acceptor1,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor2)', '~promise(acceptor0,proposer1)', '~start(proposer0)']
686     : ---0----00-0-----0--1----0-
686     : ['promise(acceptor1,proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor2)', '~promise(acceptor0,proposer2)', '~start(proposer1)']
687     : -----00--0-0---0--1------0-
687     : ['promise(acceptor1,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor2)', '~promise(acceptor0,proposer0)', '~start(proposer1)']
688     : ---0---0-0-0----0--1------0
688     : ['promise(acceptor1,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor2)', '~promise(acceptor0,proposer1)', '~start(proposer2)']
689     : ----0-0--0-0---0--1-------0
689     : ['promise(acceptor1,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor2)', '~promise(acceptor0,proposer0)', '~start(proposer2)']
num_forall :   0
num_exists :   0
num_literals : 0
quantified form : None
qcost : 0




---------- QPrime ----------


---------- ConstArgBinding ----------

terms: ['~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor2)', 'promise(acceptor1,proposer2)', '~promise(acceptor2,proposer2)', '~start(proposer0)', 'member(acceptor0,quorum__acceptor0_acceptor1)', 'member(acceptor1,quorum__acceptor0_acceptor1)', '~member(acceptor2,quorum__acceptor0_acceptor1)', 'member(acceptor0,quorum__acceptor0_acceptor2)', '~member(acceptor1,quorum__acceptor0_acceptor2)', 'member(acceptor2,quorum__acceptor0_acceptor2)']

sign_func_name2args: {'1$chosenAt': [(Const('quorum__acceptor0_acceptor1', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), Const('proposer2', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))), (Const('quorum__acceptor0_acceptor2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), Const('proposer1', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))))], '1$didNotPromise': [(Const('acceptor0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))),), (Const('acceptor2', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))),)], '0$promise': [(Const('acceptor1', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Const('proposer2', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))))], '1$promise': [(Const('acceptor2', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Const('proposer2', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))))], '1$start': [(Const('proposer0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))),)], '0$member': [(Const('acceptor0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Const('quorum__acceptor0_acceptor1', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')))), (Const('acceptor1', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Const('quorum__acceptor0_acceptor1', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')))), (Const('acceptor0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Const('quorum__acceptor0_acceptor2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')))), (Const('acceptor2', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Const('quorum__acceptor0_acceptor2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))))], '1$member': [(Const('acceptor2', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Const('quorum__acceptor0_acceptor1', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')))), (Const('acceptor1', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Const('quorum__acceptor0_acceptor2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))))]}

const2sigs: {Const('quorum__acceptor0_acceptor1', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))): [quorum$1$chosenAt$0$0, quorum$0$member$1$0, quorum$0$member$1$1, quorum$1$member$1$0], Const('proposer2', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))): [proposer$1$chosenAt$1$0, proposer$0$promise$1$0, proposer$1$promise$1$0], Const('quorum__acceptor0_acceptor2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))): [quorum$1$chosenAt$0$1, quorum$0$member$1$2, quorum$0$member$1$3, quorum$1$member$1$1], Const('proposer1', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))): [proposer$1$chosenAt$1$1], Const('acceptor0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))): [acceptor$1$didNotPromise$0$0, acceptor$0$member$0$0, acceptor$0$member$0$2], Const('acceptor2', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))): [acceptor$1$didNotPromise$0$1, acceptor$1$promise$0$0, acceptor$0$member$0$3, acceptor$1$member$0$0], Const('acceptor1', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))): [acceptor$0$promise$0$0, acceptor$0$member$0$1, acceptor$1$member$0$1], Const('proposer0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))): [proposer$1$start$0$0]}

sig2const: {'quorum$1$chosenAt$0$0': Const('quorum__acceptor0_acceptor1', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), 'proposer$1$chosenAt$1$0': Const('proposer2', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))), 'quorum$1$chosenAt$0$1': Const('quorum__acceptor0_acceptor2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), 'proposer$1$chosenAt$1$1': Const('proposer1', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))), 'acceptor$1$didNotPromise$0$0': Const('acceptor0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), 'acceptor$1$didNotPromise$0$1': Const('acceptor2', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), 'acceptor$0$promise$0$0': Const('acceptor1', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), 'proposer$0$promise$1$0': Const('proposer2', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))), 'acceptor$1$promise$0$0': Const('acceptor2', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), 'proposer$1$promise$1$0': Const('proposer2', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))), 'proposer$1$start$0$0': Const('proposer0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))), 'acceptor$0$member$0$0': Const('acceptor0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), 'quorum$0$member$1$0': Const('quorum__acceptor0_acceptor1', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), 'acceptor$0$member$0$1': Const('acceptor1', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), 'quorum$0$member$1$1': Const('quorum__acceptor0_acceptor1', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), 'acceptor$0$member$0$2': Const('acceptor0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), 'quorum$0$member$1$2': Const('quorum__acceptor0_acceptor2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), 'acceptor$0$member$0$3': Const('acceptor2', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), 'quorum$0$member$1$3': Const('quorum__acceptor0_acceptor2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), 'acceptor$1$member$0$0': Const('acceptor2', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), 'quorum$1$member$1$0': Const('quorum__acceptor0_acceptor1', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), 'acceptor$1$member$0$1': Const('acceptor1', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), 'quorum$1$member$1$1': Const('quorum__acceptor0_acceptor2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')))}


---------- ArgPartition ----------

sort2class_sigs: {EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')): [quorum$0$member$1$0; quorum$0$member$1$1; quorum$1$chosenAt$0$0; quorum$1$member$1$0, quorum$0$member$1$2; quorum$0$member$1$3; quorum$1$chosenAt$0$1; quorum$1$member$1$1], EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')): [proposer$0$promise$1$0; proposer$1$chosenAt$1$0; proposer$1$promise$1$0, proposer$1$chosenAt$1$1, proposer$1$start$0$0], EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')): [acceptor$0$member$0$0; acceptor$0$member$0$2; acceptor$1$didNotPromise$0$0, acceptor$0$member$0$1; acceptor$0$promise$0$0; acceptor$1$member$0$1, acceptor$0$member$0$3; acceptor$1$didNotPromise$0$1; acceptor$1$member$0$0; acceptor$1$promise$0$0]}

sort2part_sig: {EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')): quorum$0$member$1$0; quorum$0$member$1$1; quorum$1$chosenAt$0$0; quorum$1$member$1$0 | quorum$0$member$1$2; quorum$0$member$1$3; quorum$1$chosenAt$0$1; quorum$1$member$1$1, EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')): proposer$0$promise$1$0; proposer$1$chosenAt$1$0; proposer$1$promise$1$0 | proposer$1$chosenAt$1$1 | proposer$1$start$0$0, EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')): acceptor$0$member$0$0; acceptor$0$member$0$2; acceptor$1$didNotPromise$0$0 | acceptor$0$member$0$1; acceptor$0$promise$0$0; acceptor$1$member$0$1 | acceptor$0$member$0$3; acceptor$1$didNotPromise$0$1; acceptor$1$member$0$0; acceptor$1$promise$0$0}

part_sig: ('acceptor$0$member$0$0; acceptor$0$member$0$2; acceptor$1$didNotPromise$0$0 | acceptor$0$member$0$1; acceptor$0$promise$0$0; acceptor$1$member$0$1 | acceptor$0$member$0$3; acceptor$1$didNotPromise$0$1; acceptor$1$member$0$0; acceptor$1$promise$0$0', 'proposer$0$promise$1$0; proposer$1$chosenAt$1$0; proposer$1$promise$1$0 | proposer$1$chosenAt$1$1 | proposer$1$start$0$0', 'quorum$0$member$1$0; quorum$0$member$1$1; quorum$1$chosenAt$0$0; quorum$1$member$1$0 | quorum$0$member$1$2; quorum$0$member$1$3; quorum$1$chosenAt$0$1; quorum$1$member$1$1')


---------- SigGenerator ----------

terms:  ['~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor2)', 'promise(acceptor1,proposer2)', '~promise(acceptor2,proposer2)', '~start(proposer0)', 'member(acceptor0,quorum__acceptor0_acceptor1)', 'member(acceptor1,quorum__acceptor0_acceptor1)', '~member(acceptor2,quorum__acceptor0_acceptor1)', 'member(acceptor0,quorum__acceptor0_acceptor2)', '~member(acceptor1,quorum__acceptor0_acceptor2)', 'member(acceptor2,quorum__acceptor0_acceptor2)']

func_name2symbol:  {'chosenAt': Const('chosenAt', FunctionSort(EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')), EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')), BooleanSort())), 'didNotPromise': Const('didNotPromise', FunctionSort(EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')), BooleanSort())), 'promise': Const('promise', FunctionSort(EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')), EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')), BooleanSort())), 'start': Const('start', FunctionSort(EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')), BooleanSort())), 'member': Const('member', FunctionSort(EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')), EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')), BooleanSort()))}

func_name2args_sort:  {'chosenAt': (EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')), EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))), 'didNotPromise': (EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')),), 'promise': (EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')), EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))), 'start': (EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')),), 'member': (EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')), EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')))}

sign_func_name2count:  {'1$chosenAt': 2, '1$didNotPromise': 2, '0$promise': 1, '1$promise': 1, '1$start': 1, '0$member': 4, '1$member': 2}


---------- ProductArgPartition ----------

sort2class_sigs: {EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')): [quorum$0$member$1$0; quorum$0$member$1$1; quorum$1$chosenAt$0$0; quorum$1$member$1$0, quorum$0$member$1$2; quorum$0$member$1$3; quorum$1$chosenAt$0$1; quorum$1$member$1$1], EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')): [proposer$0$promise$1$0; proposer$1$chosenAt$1$0; proposer$1$promise$1$0, proposer$1$chosenAt$1$1, proposer$1$start$0$0], EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')): [acceptor$0$member$0$0; acceptor$0$member$0$2; acceptor$1$didNotPromise$0$0, acceptor$0$member$0$1; acceptor$0$promise$0$0; acceptor$1$member$0$1, acceptor$0$member$0$3; acceptor$1$didNotPromise$0$1; acceptor$1$member$0$0; acceptor$1$promise$0$0]}

sort2part_sig: {EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')): quorum$0$member$1$0; quorum$0$member$1$1; quorum$1$chosenAt$0$0; quorum$1$member$1$0 | quorum$0$member$1$2; quorum$0$member$1$3; quorum$1$chosenAt$0$1; quorum$1$member$1$1, EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')): proposer$0$promise$1$0; proposer$1$chosenAt$1$0; proposer$1$promise$1$0 | proposer$1$chosenAt$1$1 | proposer$1$start$0$0, EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')): acceptor$0$member$0$0; acceptor$0$member$0$2; acceptor$1$didNotPromise$0$0 | acceptor$0$member$0$1; acceptor$0$promise$0$0; acceptor$1$member$0$1 | acceptor$0$member$0$3; acceptor$1$didNotPromise$0$1; acceptor$1$member$0$0; acceptor$1$promise$0$0}

	sort: quorum

	identical_classes: {'quorum$0$member$1; quorum$0$member$1; quorum$1$chosenAt$0; quorum$1$member$1': [quorum$0$member$1$0; quorum$0$member$1$1; quorum$1$chosenAt$0$0; quorum$1$member$1$0, quorum$0$member$1$2; quorum$0$member$1$3; quorum$1$chosenAt$0$1; quorum$1$member$1$1]}

	identical_single_classes: {}

	identical_multi_classes: {'quorum$0$member$1; quorum$0$member$1; quorum$1$chosenAt$0; quorum$1$member$1': [quorum$0$member$1$0, quorum$0$member$1$1, quorum$1$chosenAt$0$0, quorum$1$member$1$0, quorum$0$member$1$2, quorum$0$member$1$3, quorum$1$chosenAt$0$1, quorum$1$member$1$1]}

	sort: proposer

	identical_classes: {'proposer$0$promise$1; proposer$1$chosenAt$1; proposer$1$promise$1': [proposer$0$promise$1$0; proposer$1$chosenAt$1$0; proposer$1$promise$1$0], 'proposer$1$chosenAt$1': [proposer$1$chosenAt$1$1], 'proposer$1$start$0': [proposer$1$start$0$0]}

	identical_single_classes: {'proposer$0$promise$1; proposer$1$chosenAt$1; proposer$1$promise$1': proposer$0$promise$1$0; proposer$1$chosenAt$1$0; proposer$1$promise$1$0, 'proposer$1$chosenAt$1': proposer$1$chosenAt$1$1, 'proposer$1$start$0': proposer$1$start$0$0}

	identical_multi_classes: {}

	sort: acceptor

	identical_classes: {'acceptor$0$member$0; acceptor$0$member$0; acceptor$1$didNotPromise$0': [acceptor$0$member$0$0; acceptor$0$member$0$2; acceptor$1$didNotPromise$0$0], 'acceptor$0$member$0; acceptor$0$promise$0; acceptor$1$member$0': [acceptor$0$member$0$1; acceptor$0$promise$0$0; acceptor$1$member$0$1], 'acceptor$0$member$0; acceptor$1$didNotPromise$0; acceptor$1$member$0; acceptor$1$promise$0': [acceptor$0$member$0$3; acceptor$1$didNotPromise$0$1; acceptor$1$member$0$0; acceptor$1$promise$0$0]}

	identical_single_classes: {'acceptor$0$member$0; acceptor$0$member$0; acceptor$1$didNotPromise$0': acceptor$0$member$0$0; acceptor$0$member$0$2; acceptor$1$didNotPromise$0$0, 'acceptor$0$member$0; acceptor$0$promise$0; acceptor$1$member$0': acceptor$0$member$0$1; acceptor$0$promise$0$0; acceptor$1$member$0$1, 'acceptor$0$member$0; acceptor$1$didNotPromise$0; acceptor$1$member$0; acceptor$1$promise$0': acceptor$0$member$0$3; acceptor$1$didNotPromise$0$1; acceptor$1$member$0$0; acceptor$1$promise$0$0}

	identical_multi_classes: {}


---------- QInference: _set_sort_to_quantifier_mode ----------

quantifier mode: quorum: QuantifierMode.forall

quantifier mode: proposer: QuantifierMode.forall

quantifier mode: acceptor: QuantifierMode.forall


---------- QInference: _set_constraint_mode ----------

constraint mode: ConstraintMode.no_merge


---------- QFormula: _set_qvars ----------

forall_qvars: {Var('ACCEPTOR0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Var('QUORUM1', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), Var('PROPOSER0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))), Var('ACCEPTOR2', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Var('QUORUM0', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), Var('PROPOSER2', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))), Var('ACCEPTOR1', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Var('PROPOSER1', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))}

exists_qvars: set()


---------- QFormula: _set_signed_func_name_to_args ----------

signed_func_name2args: {'1$chosenAt': [[Var('QUORUM0', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), Var('PROPOSER0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))], [Var('QUORUM1', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), Var('PROPOSER1', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))]], '1$didNotPromise': [[Var('ACCEPTOR0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')))], [Var('ACCEPTOR2', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')))]], '0$promise': [[Var('ACCEPTOR1', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Var('PROPOSER0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))]], '1$promise': [[Var('ACCEPTOR2', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Var('PROPOSER0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))]], '1$start': [[Var('PROPOSER2', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))]], '0$member': [[Var('ACCEPTOR0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Var('QUORUM0', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')))], [Var('ACCEPTOR1', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Var('QUORUM0', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')))], [Var('ACCEPTOR0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Var('QUORUM1', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')))], [Var('ACCEPTOR2', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Var('QUORUM1', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')))]], '1$member': [[Var('ACCEPTOR2', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Var('QUORUM0', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')))], [Var('ACCEPTOR1', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Var('QUORUM1', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')))]]}


---------- QFormula: _set_qterms ----------

qterms: ['~member(ACCEPTOR1,QUORUM1)', '~didNotPromise(ACCEPTOR2)', '~didNotPromise(ACCEPTOR0)', 'promise(ACCEPTOR1,PROPOSER0)', '~start(PROPOSER2)', '~member(ACCEPTOR2,QUORUM0)', '~promise(ACCEPTOR2,PROPOSER0)', 'member(ACCEPTOR0,QUORUM0)', 'member(ACCEPTOR1,QUORUM0)', 'member(ACCEPTOR2,QUORUM1)', '~chosenAt(QUORUM1,PROPOSER1)', '~chosenAt(QUORUM0,PROPOSER0)', 'member(ACCEPTOR0,QUORUM1)']


---------- QFormula: get_qclause ----------

qclause: forall QUORUM0,PROPOSER2,PROPOSER1,ACCEPTOR1,QUORUM1,ACCEPTOR0,PROPOSER0,ACCEPTOR2. member(ACCEPTOR1,QUORUM1) | didNotPromise(ACCEPTOR2) | didNotPromise(ACCEPTOR0) | ~promise(ACCEPTOR1,PROPOSER0) | start(PROPOSER2) | member(ACCEPTOR2,QUORUM0) | promise(ACCEPTOR2,PROPOSER0) | ~member(ACCEPTOR0,QUORUM0) | ~member(ACCEPTOR1,QUORUM0) | ~member(ACCEPTOR2,QUORUM1) | chosenAt(QUORUM1,PROPOSER1) | chosenAt(QUORUM0,PROPOSER0) | ~member(ACCEPTOR0,QUORUM1) | (PROPOSER1 = PROPOSER2 | ACCEPTOR0 = ACCEPTOR1 | QUORUM0 = QUORUM1 | PROPOSER0 = PROPOSER1 | ACCEPTOR1 = ACCEPTOR2 | ACCEPTOR0 = ACCEPTOR2 | PROPOSER0 = PROPOSER2)


=== Prime Orbit 43 =====================
size : 18
num_suborbits: 1
690 (*) : --0-0---00-0--------1---0--
690     : ['promise(acceptor1,proposer2)', '~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor2)', '~start(proposer0)']
691     : -0---0-0-0-0-------1----0--
691     : ['promise(acceptor1,proposer1)', '~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor2)', '~start(proposer0)']
692     : --00----00-0--------1----0-
692     : ['promise(acceptor1,proposer2)', '~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor2)', '~start(proposer1)']
693     : 0----00--0-0------1------0-
693     : ['promise(acceptor1,proposer0)', '~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor2)', '~start(proposer1)']
694     : -0-0---0-0-0-------1------0
694     : ['promise(acceptor1,proposer1)', '~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor2)', '~start(proposer2)']
695     : 0---0-0--0-0------1-------0
695     : ['promise(acceptor1,proposer0)', '~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor2)', '~start(proposer2)']
696     : -0---0--000------------10--
696     : ['promise(acceptor2,proposer2)', '~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~start(proposer0)']
697     : --0-0--0-00-----------1-0--
697     : ['promise(acceptor2,proposer1)', '~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~start(proposer0)']
698     : 0----0--000------------1-0-
698     : ['promise(acceptor2,proposer2)', '~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~start(proposer1)']
699     : --00--0--00----------1---0-
699     : ['promise(acceptor2,proposer0)', '~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~start(proposer1)']
700     : 0---0--0-00-----------1---0
700     : ['promise(acceptor2,proposer1)', '~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~start(proposer2)']
701     : -0-0--0--00----------1----0
701     : ['promise(acceptor2,proposer0)', '~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~start(proposer2)']
702     : --0--0-0--00-----1------0--
702     : ['promise(acceptor0,proposer2)', '~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~start(proposer0)']
703     : -0--0---0-00----1-------0--
703     : ['promise(acceptor0,proposer1)', '~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~start(proposer0)']
704     : --0--00---00-----1-------0-
704     : ['promise(acceptor0,proposer2)', '~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~start(proposer1)']
705     : 0--0----0-00---1---------0-
705     : ['promise(acceptor0,proposer0)', '~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~start(proposer1)']
706     : -0--0-0---00----1---------0
706     : ['promise(acceptor0,proposer1)', '~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~start(proposer2)']
707     : 0--0---0--00---1----------0
707     : ['promise(acceptor0,proposer0)', '~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~start(proposer2)']
num_forall :   0
num_exists :   0
num_literals : 0
quantified form : None
qcost : 0




---------- QPrime ----------


---------- ConstArgBinding ----------

terms: ['~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor2)', 'promise(acceptor1,proposer2)', '~start(proposer0)', 'member(acceptor0,quorum__acceptor0_acceptor1)', 'member(acceptor1,quorum__acceptor0_acceptor1)', '~member(acceptor2,quorum__acceptor0_acceptor1)', 'member(acceptor0,quorum__acceptor0_acceptor2)', '~member(acceptor1,quorum__acceptor0_acceptor2)', 'member(acceptor2,quorum__acceptor0_acceptor2)', '~member(acceptor0,quorum__acceptor1_acceptor2)', 'member(acceptor1,quorum__acceptor1_acceptor2)', 'member(acceptor2,quorum__acceptor1_acceptor2)']

sign_func_name2args: {'1$chosenAt': [(Const('quorum__acceptor0_acceptor1', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), Const('proposer2', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))), (Const('quorum__acceptor0_acceptor2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), Const('proposer1', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))), (Const('quorum__acceptor1_acceptor2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), Const('proposer2', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))))], '1$didNotPromise': [(Const('acceptor0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))),), (Const('acceptor2', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))),)], '0$promise': [(Const('acceptor1', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Const('proposer2', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))))], '1$start': [(Const('proposer0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))),)], '0$member': [(Const('acceptor0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Const('quorum__acceptor0_acceptor1', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')))), (Const('acceptor1', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Const('quorum__acceptor0_acceptor1', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')))), (Const('acceptor0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Const('quorum__acceptor0_acceptor2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')))), (Const('acceptor2', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Const('quorum__acceptor0_acceptor2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')))), (Const('acceptor1', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Const('quorum__acceptor1_acceptor2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')))), (Const('acceptor2', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Const('quorum__acceptor1_acceptor2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))))], '1$member': [(Const('acceptor2', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Const('quorum__acceptor0_acceptor1', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')))), (Const('acceptor1', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Const('quorum__acceptor0_acceptor2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')))), (Const('acceptor0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Const('quorum__acceptor1_acceptor2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))))]}

const2sigs: {Const('quorum__acceptor0_acceptor1', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))): [quorum$1$chosenAt$0$0, quorum$0$member$1$0, quorum$0$member$1$1, quorum$1$member$1$0], Const('proposer2', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))): [proposer$1$chosenAt$1$0, proposer$1$chosenAt$1$2, proposer$0$promise$1$0], Const('quorum__acceptor0_acceptor2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))): [quorum$1$chosenAt$0$1, quorum$0$member$1$2, quorum$0$member$1$3, quorum$1$member$1$1], Const('proposer1', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))): [proposer$1$chosenAt$1$1], Const('quorum__acceptor1_acceptor2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))): [quorum$1$chosenAt$0$2, quorum$0$member$1$4, quorum$0$member$1$5, quorum$1$member$1$2], Const('acceptor0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))): [acceptor$1$didNotPromise$0$0, acceptor$0$member$0$0, acceptor$0$member$0$2, acceptor$1$member$0$2], Const('acceptor2', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))): [acceptor$1$didNotPromise$0$1, acceptor$0$member$0$3, acceptor$0$member$0$5, acceptor$1$member$0$0], Const('acceptor1', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))): [acceptor$0$promise$0$0, acceptor$0$member$0$1, acceptor$0$member$0$4, acceptor$1$member$0$1], Const('proposer0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))): [proposer$1$start$0$0]}

sig2const: {'quorum$1$chosenAt$0$0': Const('quorum__acceptor0_acceptor1', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), 'proposer$1$chosenAt$1$0': Const('proposer2', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))), 'quorum$1$chosenAt$0$1': Const('quorum__acceptor0_acceptor2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), 'proposer$1$chosenAt$1$1': Const('proposer1', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))), 'quorum$1$chosenAt$0$2': Const('quorum__acceptor1_acceptor2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), 'proposer$1$chosenAt$1$2': Const('proposer2', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))), 'acceptor$1$didNotPromise$0$0': Const('acceptor0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), 'acceptor$1$didNotPromise$0$1': Const('acceptor2', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), 'acceptor$0$promise$0$0': Const('acceptor1', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), 'proposer$0$promise$1$0': Const('proposer2', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))), 'proposer$1$start$0$0': Const('proposer0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))), 'acceptor$0$member$0$0': Const('acceptor0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), 'quorum$0$member$1$0': Const('quorum__acceptor0_acceptor1', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), 'acceptor$0$member$0$1': Const('acceptor1', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), 'quorum$0$member$1$1': Const('quorum__acceptor0_acceptor1', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), 'acceptor$0$member$0$2': Const('acceptor0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), 'quorum$0$member$1$2': Const('quorum__acceptor0_acceptor2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), 'acceptor$0$member$0$3': Const('acceptor2', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), 'quorum$0$member$1$3': Const('quorum__acceptor0_acceptor2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), 'acceptor$0$member$0$4': Const('acceptor1', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), 'quorum$0$member$1$4': Const('quorum__acceptor1_acceptor2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), 'acceptor$0$member$0$5': Const('acceptor2', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), 'quorum$0$member$1$5': Const('quorum__acceptor1_acceptor2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), 'acceptor$1$member$0$0': Const('acceptor2', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), 'quorum$1$member$1$0': Const('quorum__acceptor0_acceptor1', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), 'acceptor$1$member$0$1': Const('acceptor1', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), 'quorum$1$member$1$1': Const('quorum__acceptor0_acceptor2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), 'acceptor$1$member$0$2': Const('acceptor0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), 'quorum$1$member$1$2': Const('quorum__acceptor1_acceptor2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')))}


---------- ArgPartition ----------

sort2class_sigs: {EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')): [quorum$0$member$1$0; quorum$0$member$1$1; quorum$1$chosenAt$0$0; quorum$1$member$1$0, quorum$0$member$1$2; quorum$0$member$1$3; quorum$1$chosenAt$0$1; quorum$1$member$1$1, quorum$0$member$1$4; quorum$0$member$1$5; quorum$1$chosenAt$0$2; quorum$1$member$1$2], EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')): [proposer$0$promise$1$0; proposer$1$chosenAt$1$0; proposer$1$chosenAt$1$2, proposer$1$chosenAt$1$1, proposer$1$start$0$0], EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')): [acceptor$0$member$0$0; acceptor$0$member$0$2; acceptor$1$didNotPromise$0$0; acceptor$1$member$0$2, acceptor$0$member$0$1; acceptor$0$member$0$4; acceptor$0$promise$0$0; acceptor$1$member$0$1, acceptor$0$member$0$3; acceptor$0$member$0$5; acceptor$1$didNotPromise$0$1; acceptor$1$member$0$0]}

sort2part_sig: {EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')): quorum$0$member$1$0; quorum$0$member$1$1; quorum$1$chosenAt$0$0; quorum$1$member$1$0 | quorum$0$member$1$2; quorum$0$member$1$3; quorum$1$chosenAt$0$1; quorum$1$member$1$1 | quorum$0$member$1$4; quorum$0$member$1$5; quorum$1$chosenAt$0$2; quorum$1$member$1$2, EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')): proposer$0$promise$1$0; proposer$1$chosenAt$1$0; proposer$1$chosenAt$1$2 | proposer$1$chosenAt$1$1 | proposer$1$start$0$0, EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')): acceptor$0$member$0$0; acceptor$0$member$0$2; acceptor$1$didNotPromise$0$0; acceptor$1$member$0$2 | acceptor$0$member$0$1; acceptor$0$member$0$4; acceptor$0$promise$0$0; acceptor$1$member$0$1 | acceptor$0$member$0$3; acceptor$0$member$0$5; acceptor$1$didNotPromise$0$1; acceptor$1$member$0$0}

part_sig: ('acceptor$0$member$0$0; acceptor$0$member$0$2; acceptor$1$didNotPromise$0$0; acceptor$1$member$0$2 | acceptor$0$member$0$1; acceptor$0$member$0$4; acceptor$0$promise$0$0; acceptor$1$member$0$1 | acceptor$0$member$0$3; acceptor$0$member$0$5; acceptor$1$didNotPromise$0$1; acceptor$1$member$0$0', 'proposer$0$promise$1$0; proposer$1$chosenAt$1$0; proposer$1$chosenAt$1$2 | proposer$1$chosenAt$1$1 | proposer$1$start$0$0', 'quorum$0$member$1$0; quorum$0$member$1$1; quorum$1$chosenAt$0$0; quorum$1$member$1$0 | quorum$0$member$1$2; quorum$0$member$1$3; quorum$1$chosenAt$0$1; quorum$1$member$1$1 | quorum$0$member$1$4; quorum$0$member$1$5; quorum$1$chosenAt$0$2; quorum$1$member$1$2')


---------- SigGenerator ----------

terms:  ['~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor2)', 'promise(acceptor1,proposer2)', '~start(proposer0)', 'member(acceptor0,quorum__acceptor0_acceptor1)', 'member(acceptor1,quorum__acceptor0_acceptor1)', '~member(acceptor2,quorum__acceptor0_acceptor1)', 'member(acceptor0,quorum__acceptor0_acceptor2)', '~member(acceptor1,quorum__acceptor0_acceptor2)', 'member(acceptor2,quorum__acceptor0_acceptor2)', '~member(acceptor0,quorum__acceptor1_acceptor2)', 'member(acceptor1,quorum__acceptor1_acceptor2)', 'member(acceptor2,quorum__acceptor1_acceptor2)']

func_name2symbol:  {'chosenAt': Const('chosenAt', FunctionSort(EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')), EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')), BooleanSort())), 'didNotPromise': Const('didNotPromise', FunctionSort(EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')), BooleanSort())), 'promise': Const('promise', FunctionSort(EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')), EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')), BooleanSort())), 'start': Const('start', FunctionSort(EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')), BooleanSort())), 'member': Const('member', FunctionSort(EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')), EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')), BooleanSort()))}

func_name2args_sort:  {'chosenAt': (EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')), EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))), 'didNotPromise': (EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')),), 'promise': (EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')), EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))), 'start': (EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')),), 'member': (EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')), EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')))}

sign_func_name2count:  {'1$chosenAt': 3, '1$didNotPromise': 2, '0$promise': 1, '1$start': 1, '0$member': 6, '1$member': 3}


---------- ProductArgPartition ----------

sort2class_sigs: {EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')): [quorum$0$member$1$0; quorum$0$member$1$1; quorum$1$chosenAt$0$0; quorum$1$member$1$0, quorum$0$member$1$2; quorum$0$member$1$3; quorum$1$chosenAt$0$1; quorum$1$member$1$1, quorum$0$member$1$4; quorum$0$member$1$5; quorum$1$chosenAt$0$2; quorum$1$member$1$2], EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')): [proposer$0$promise$1$0; proposer$1$chosenAt$1$0; proposer$1$chosenAt$1$2, proposer$1$chosenAt$1$1, proposer$1$start$0$0], EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')): [acceptor$0$member$0$0; acceptor$0$member$0$2; acceptor$1$didNotPromise$0$0; acceptor$1$member$0$2, acceptor$0$member$0$1; acceptor$0$member$0$4; acceptor$0$promise$0$0; acceptor$1$member$0$1, acceptor$0$member$0$3; acceptor$0$member$0$5; acceptor$1$didNotPromise$0$1; acceptor$1$member$0$0]}

sort2part_sig: {EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')): quorum$0$member$1$0; quorum$0$member$1$1; quorum$1$chosenAt$0$0; quorum$1$member$1$0 | quorum$0$member$1$2; quorum$0$member$1$3; quorum$1$chosenAt$0$1; quorum$1$member$1$1 | quorum$0$member$1$4; quorum$0$member$1$5; quorum$1$chosenAt$0$2; quorum$1$member$1$2, EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')): proposer$0$promise$1$0; proposer$1$chosenAt$1$0; proposer$1$chosenAt$1$2 | proposer$1$chosenAt$1$1 | proposer$1$start$0$0, EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')): acceptor$0$member$0$0; acceptor$0$member$0$2; acceptor$1$didNotPromise$0$0; acceptor$1$member$0$2 | acceptor$0$member$0$1; acceptor$0$member$0$4; acceptor$0$promise$0$0; acceptor$1$member$0$1 | acceptor$0$member$0$3; acceptor$0$member$0$5; acceptor$1$didNotPromise$0$1; acceptor$1$member$0$0}

	sort: quorum

	identical_classes: {'quorum$0$member$1; quorum$0$member$1; quorum$1$chosenAt$0; quorum$1$member$1': [quorum$0$member$1$0; quorum$0$member$1$1; quorum$1$chosenAt$0$0; quorum$1$member$1$0, quorum$0$member$1$2; quorum$0$member$1$3; quorum$1$chosenAt$0$1; quorum$1$member$1$1, quorum$0$member$1$4; quorum$0$member$1$5; quorum$1$chosenAt$0$2; quorum$1$member$1$2]}

	identical_single_classes: {}

	identical_multi_classes: {'quorum$0$member$1; quorum$0$member$1; quorum$1$chosenAt$0; quorum$1$member$1': [quorum$0$member$1$0, quorum$0$member$1$1, quorum$1$chosenAt$0$0, quorum$1$member$1$0, quorum$0$member$1$2, quorum$0$member$1$3, quorum$1$chosenAt$0$1, quorum$1$member$1$1, quorum$0$member$1$4, quorum$0$member$1$5, quorum$1$chosenAt$0$2, quorum$1$member$1$2]}

	sort: proposer

	identical_classes: {'proposer$0$promise$1; proposer$1$chosenAt$1; proposer$1$chosenAt$1': [proposer$0$promise$1$0; proposer$1$chosenAt$1$0; proposer$1$chosenAt$1$2], 'proposer$1$chosenAt$1': [proposer$1$chosenAt$1$1], 'proposer$1$start$0': [proposer$1$start$0$0]}

	identical_single_classes: {'proposer$0$promise$1; proposer$1$chosenAt$1; proposer$1$chosenAt$1': proposer$0$promise$1$0; proposer$1$chosenAt$1$0; proposer$1$chosenAt$1$2, 'proposer$1$chosenAt$1': proposer$1$chosenAt$1$1, 'proposer$1$start$0': proposer$1$start$0$0}

	identical_multi_classes: {}

	sort: acceptor

	identical_classes: {'acceptor$0$member$0; acceptor$0$member$0; acceptor$1$didNotPromise$0; acceptor$1$member$0': [acceptor$0$member$0$0; acceptor$0$member$0$2; acceptor$1$didNotPromise$0$0; acceptor$1$member$0$2, acceptor$0$member$0$3; acceptor$0$member$0$5; acceptor$1$didNotPromise$0$1; acceptor$1$member$0$0], 'acceptor$0$member$0; acceptor$0$member$0; acceptor$0$promise$0; acceptor$1$member$0': [acceptor$0$member$0$1; acceptor$0$member$0$4; acceptor$0$promise$0$0; acceptor$1$member$0$1]}

	identical_single_classes: {'acceptor$0$member$0; acceptor$0$member$0; acceptor$0$promise$0; acceptor$1$member$0': acceptor$0$member$0$1; acceptor$0$member$0$4; acceptor$0$promise$0$0; acceptor$1$member$0$1}

	identical_multi_classes: {'acceptor$0$member$0; acceptor$0$member$0; acceptor$1$didNotPromise$0; acceptor$1$member$0': [acceptor$0$member$0$0, acceptor$0$member$0$2, acceptor$1$didNotPromise$0$0, acceptor$1$member$0$2, acceptor$0$member$0$3, acceptor$0$member$0$5, acceptor$1$didNotPromise$0$1, acceptor$1$member$0$0]}


---------- QInference: _set_sort_to_quantifier_mode ----------

quantifier mode: quorum: QuantifierMode.forall

quantifier mode: proposer: QuantifierMode.forall

quantifier mode: acceptor: QuantifierMode.forall


---------- QInference: _set_constraint_mode ----------

constraint mode: ConstraintMode.no_merge


---------- QFormula: _set_qvars ----------

forall_qvars: {Var('ACCEPTOR0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Var('QUORUM1', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), Var('PROPOSER0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))), Var('QUORUM2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), Var('ACCEPTOR2', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Var('QUORUM0', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), Var('PROPOSER2', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))), Var('ACCEPTOR1', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Var('PROPOSER1', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))}

exists_qvars: set()


---------- QFormula: _set_signed_func_name_to_args ----------

signed_func_name2args: {'1$chosenAt': [[Var('QUORUM0', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), Var('PROPOSER0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))], [Var('QUORUM1', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), Var('PROPOSER1', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))], [Var('QUORUM2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), Var('PROPOSER0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))]], '1$didNotPromise': [[Var('ACCEPTOR0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')))], [Var('ACCEPTOR2', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')))]], '0$promise': [[Var('ACCEPTOR1', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Var('PROPOSER0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))]], '1$start': [[Var('PROPOSER2', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))]], '0$member': [[Var('ACCEPTOR0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Var('QUORUM0', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')))], [Var('ACCEPTOR1', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Var('QUORUM0', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')))], [Var('ACCEPTOR0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Var('QUORUM1', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')))], [Var('ACCEPTOR2', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Var('QUORUM1', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')))], [Var('ACCEPTOR1', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Var('QUORUM2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')))], [Var('ACCEPTOR2', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Var('QUORUM2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')))]], '1$member': [[Var('ACCEPTOR2', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Var('QUORUM0', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')))], [Var('ACCEPTOR1', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Var('QUORUM1', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')))], [Var('ACCEPTOR0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Var('QUORUM2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')))]]}


---------- QFormula: _set_qterms ----------

qterms: ['~member(ACCEPTOR1,QUORUM1)', '~didNotPromise(ACCEPTOR2)', '~didNotPromise(ACCEPTOR0)', 'promise(ACCEPTOR1,PROPOSER0)', 'member(ACCEPTOR2,QUORUM2)', '~member(ACCEPTOR0,QUORUM2)', '~start(PROPOSER2)', '~member(ACCEPTOR2,QUORUM0)', 'member(ACCEPTOR0,QUORUM0)', 'member(ACCEPTOR1,QUORUM0)', 'member(ACCEPTOR2,QUORUM1)', '~chosenAt(QUORUM2,PROPOSER0)', 'member(ACCEPTOR1,QUORUM2)', '~chosenAt(QUORUM1,PROPOSER1)', '~chosenAt(QUORUM0,PROPOSER0)', 'member(ACCEPTOR0,QUORUM1)']


---------- QFormula: get_qclause ----------

qclause: forall QUORUM0,PROPOSER2,PROPOSER1,ACCEPTOR1,QUORUM1,ACCEPTOR0,PROPOSER0,ACCEPTOR2,QUORUM2. member(ACCEPTOR1,QUORUM1) | didNotPromise(ACCEPTOR2) | didNotPromise(ACCEPTOR0) | ~promise(ACCEPTOR1,PROPOSER0) | ~member(ACCEPTOR2,QUORUM2) | member(ACCEPTOR0,QUORUM2) | start(PROPOSER2) | member(ACCEPTOR2,QUORUM0) | ~member(ACCEPTOR0,QUORUM0) | ~member(ACCEPTOR1,QUORUM0) | ~member(ACCEPTOR2,QUORUM1) | chosenAt(QUORUM2,PROPOSER0) | ~member(ACCEPTOR1,QUORUM2) | chosenAt(QUORUM1,PROPOSER1) | chosenAt(QUORUM0,PROPOSER0) | ~member(ACCEPTOR0,QUORUM1) | (PROPOSER1 = PROPOSER2 | QUORUM0 = QUORUM2 | ACCEPTOR0 = ACCEPTOR1 | QUORUM0 = QUORUM1 | QUORUM1 = QUORUM2 | PROPOSER0 = PROPOSER1 | ACCEPTOR1 = ACCEPTOR2 | ACCEPTOR0 = ACCEPTOR2 | PROPOSER0 = PROPOSER2)


=== Prime Orbit 47 =====================
size : 18
num_suborbits: 1
771 (*) : 0----0--0000---------0---0-
771     : ['~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor2,proposer0)', '~start(proposer1)']
772     : 0---0--0-000---------0----0
772     : ['~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor2,proposer0)', '~start(proposer2)']
773     : -0---0--0000----------0-0--
773     : ['~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor2,proposer1)', '~start(proposer0)']
774     : -0-0--0--000----------0---0
774     : ['~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor2,proposer1)', '~start(proposer2)']
775     : --0-0--0-000-----------00--
775     : ['~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor2,proposer2)', '~start(proposer0)']
776     : --00--0--000-----------0-0-
776     : ['~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor2,proposer2)', '~start(proposer1)']
777     : --00----0000------0------0-
777     : ['~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor1,proposer0)', '~start(proposer1)']
778     : -0-0---0-000------0-------0
778     : ['~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor1,proposer0)', '~start(proposer2)']
779     : --0-0---0000-------0----0--
779     : ['~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor1,proposer1)', '~start(proposer0)']
780     : 0---0-0--000-------0------0
780     : ['~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor1,proposer1)', '~start(proposer2)']
781     : -0---0-0-000--------0---0--
781     : ['~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor1,proposer2)', '~start(proposer0)']
782     : 0----00--000--------0----0-
782     : ['~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor1,proposer2)', '~start(proposer1)']
783     : --0--00--000---0---------0-
783     : ['~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor0,proposer0)', '~start(proposer1)']
784     : -0--0-0--000---0----------0
784     : ['~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor0,proposer0)', '~start(proposer2)']
785     : --0--0-0-000----0-------0--
785     : ['~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor0,proposer1)', '~start(proposer0)']
786     : 0--0---0-000----0---------0
786     : ['~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor0,proposer1)', '~start(proposer2)']
787     : -0--0---0000-----0------0--
787     : ['~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor0,proposer2)', '~start(proposer0)']
788     : 0--0----0000-----0-------0-
788     : ['~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor0,proposer2)', '~start(proposer1)']
num_forall :   0
num_exists :   0
num_literals : 0
quantified form : None
qcost : 0




---------- QPrime ----------


---------- ConstArgBinding ----------

terms: ['~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor2,proposer0)', '~start(proposer1)', 'member(acceptor0,quorum__acceptor0_acceptor1)', 'member(acceptor1,quorum__acceptor0_acceptor1)', '~member(acceptor2,quorum__acceptor0_acceptor1)', 'member(acceptor0,quorum__acceptor0_acceptor2)', '~member(acceptor1,quorum__acceptor0_acceptor2)', 'member(acceptor2,quorum__acceptor0_acceptor2)', '~member(acceptor0,quorum__acceptor1_acceptor2)', 'member(acceptor1,quorum__acceptor1_acceptor2)', 'member(acceptor2,quorum__acceptor1_acceptor2)']

sign_func_name2args: {'1$chosenAt': [(Const('quorum__acceptor0_acceptor1', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), Const('proposer0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))), (Const('quorum__acceptor0_acceptor2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), Const('proposer2', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))), (Const('quorum__acceptor1_acceptor2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), Const('proposer2', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))))], '1$didNotPromise': [(Const('acceptor0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))),), (Const('acceptor1', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))),), (Const('acceptor2', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))),)], '1$promise': [(Const('acceptor2', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Const('proposer0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))))], '1$start': [(Const('proposer1', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))),)], '0$member': [(Const('acceptor0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Const('quorum__acceptor0_acceptor1', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')))), (Const('acceptor1', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Const('quorum__acceptor0_acceptor1', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')))), (Const('acceptor0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Const('quorum__acceptor0_acceptor2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')))), (Const('acceptor2', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Const('quorum__acceptor0_acceptor2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')))), (Const('acceptor1', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Const('quorum__acceptor1_acceptor2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')))), (Const('acceptor2', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Const('quorum__acceptor1_acceptor2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))))], '1$member': [(Const('acceptor2', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Const('quorum__acceptor0_acceptor1', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')))), (Const('acceptor1', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Const('quorum__acceptor0_acceptor2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')))), (Const('acceptor0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Const('quorum__acceptor1_acceptor2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))))]}

const2sigs: {Const('quorum__acceptor0_acceptor1', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))): [quorum$1$chosenAt$0$0, quorum$0$member$1$0, quorum$0$member$1$1, quorum$1$member$1$0], Const('proposer0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))): [proposer$1$chosenAt$1$0, proposer$1$promise$1$0], Const('quorum__acceptor0_acceptor2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))): [quorum$1$chosenAt$0$1, quorum$0$member$1$2, quorum$0$member$1$3, quorum$1$member$1$1], Const('proposer2', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))): [proposer$1$chosenAt$1$1, proposer$1$chosenAt$1$2], Const('quorum__acceptor1_acceptor2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))): [quorum$1$chosenAt$0$2, quorum$0$member$1$4, quorum$0$member$1$5, quorum$1$member$1$2], Const('acceptor0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))): [acceptor$1$didNotPromise$0$0, acceptor$0$member$0$0, acceptor$0$member$0$2, acceptor$1$member$0$2], Const('acceptor1', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))): [acceptor$1$didNotPromise$0$1, acceptor$0$member$0$1, acceptor$0$member$0$4, acceptor$1$member$0$1], Const('acceptor2', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))): [acceptor$1$didNotPromise$0$2, acceptor$1$promise$0$0, acceptor$0$member$0$3, acceptor$0$member$0$5, acceptor$1$member$0$0], Const('proposer1', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))): [proposer$1$start$0$0]}

sig2const: {'quorum$1$chosenAt$0$0': Const('quorum__acceptor0_acceptor1', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), 'proposer$1$chosenAt$1$0': Const('proposer0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))), 'quorum$1$chosenAt$0$1': Const('quorum__acceptor0_acceptor2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), 'proposer$1$chosenAt$1$1': Const('proposer2', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))), 'quorum$1$chosenAt$0$2': Const('quorum__acceptor1_acceptor2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), 'proposer$1$chosenAt$1$2': Const('proposer2', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))), 'acceptor$1$didNotPromise$0$0': Const('acceptor0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), 'acceptor$1$didNotPromise$0$1': Const('acceptor1', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), 'acceptor$1$didNotPromise$0$2': Const('acceptor2', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), 'acceptor$1$promise$0$0': Const('acceptor2', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), 'proposer$1$promise$1$0': Const('proposer0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))), 'proposer$1$start$0$0': Const('proposer1', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))), 'acceptor$0$member$0$0': Const('acceptor0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), 'quorum$0$member$1$0': Const('quorum__acceptor0_acceptor1', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), 'acceptor$0$member$0$1': Const('acceptor1', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), 'quorum$0$member$1$1': Const('quorum__acceptor0_acceptor1', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), 'acceptor$0$member$0$2': Const('acceptor0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), 'quorum$0$member$1$2': Const('quorum__acceptor0_acceptor2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), 'acceptor$0$member$0$3': Const('acceptor2', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), 'quorum$0$member$1$3': Const('quorum__acceptor0_acceptor2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), 'acceptor$0$member$0$4': Const('acceptor1', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), 'quorum$0$member$1$4': Const('quorum__acceptor1_acceptor2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), 'acceptor$0$member$0$5': Const('acceptor2', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), 'quorum$0$member$1$5': Const('quorum__acceptor1_acceptor2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), 'acceptor$1$member$0$0': Const('acceptor2', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), 'quorum$1$member$1$0': Const('quorum__acceptor0_acceptor1', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), 'acceptor$1$member$0$1': Const('acceptor1', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), 'quorum$1$member$1$1': Const('quorum__acceptor0_acceptor2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), 'acceptor$1$member$0$2': Const('acceptor0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), 'quorum$1$member$1$2': Const('quorum__acceptor1_acceptor2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')))}


---------- ArgPartition ----------

sort2class_sigs: {EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')): [quorum$0$member$1$0; quorum$0$member$1$1; quorum$1$chosenAt$0$0; quorum$1$member$1$0, quorum$0$member$1$2; quorum$0$member$1$3; quorum$1$chosenAt$0$1; quorum$1$member$1$1, quorum$0$member$1$4; quorum$0$member$1$5; quorum$1$chosenAt$0$2; quorum$1$member$1$2], EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')): [proposer$1$chosenAt$1$0; proposer$1$promise$1$0, proposer$1$chosenAt$1$1; proposer$1$chosenAt$1$2, proposer$1$start$0$0], EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')): [acceptor$0$member$0$0; acceptor$0$member$0$2; acceptor$1$didNotPromise$0$0; acceptor$1$member$0$2, acceptor$0$member$0$1; acceptor$0$member$0$4; acceptor$1$didNotPromise$0$1; acceptor$1$member$0$1, acceptor$0$member$0$3; acceptor$0$member$0$5; acceptor$1$didNotPromise$0$2; acceptor$1$member$0$0; acceptor$1$promise$0$0]}

sort2part_sig: {EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')): quorum$0$member$1$0; quorum$0$member$1$1; quorum$1$chosenAt$0$0; quorum$1$member$1$0 | quorum$0$member$1$2; quorum$0$member$1$3; quorum$1$chosenAt$0$1; quorum$1$member$1$1 | quorum$0$member$1$4; quorum$0$member$1$5; quorum$1$chosenAt$0$2; quorum$1$member$1$2, EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')): proposer$1$chosenAt$1$0; proposer$1$promise$1$0 | proposer$1$chosenAt$1$1; proposer$1$chosenAt$1$2 | proposer$1$start$0$0, EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')): acceptor$0$member$0$0; acceptor$0$member$0$2; acceptor$1$didNotPromise$0$0; acceptor$1$member$0$2 | acceptor$0$member$0$1; acceptor$0$member$0$4; acceptor$1$didNotPromise$0$1; acceptor$1$member$0$1 | acceptor$0$member$0$3; acceptor$0$member$0$5; acceptor$1$didNotPromise$0$2; acceptor$1$member$0$0; acceptor$1$promise$0$0}

part_sig: ('acceptor$0$member$0$0; acceptor$0$member$0$2; acceptor$1$didNotPromise$0$0; acceptor$1$member$0$2 | acceptor$0$member$0$1; acceptor$0$member$0$4; acceptor$1$didNotPromise$0$1; acceptor$1$member$0$1 | acceptor$0$member$0$3; acceptor$0$member$0$5; acceptor$1$didNotPromise$0$2; acceptor$1$member$0$0; acceptor$1$promise$0$0', 'proposer$1$chosenAt$1$0; proposer$1$promise$1$0 | proposer$1$chosenAt$1$1; proposer$1$chosenAt$1$2 | proposer$1$start$0$0', 'quorum$0$member$1$0; quorum$0$member$1$1; quorum$1$chosenAt$0$0; quorum$1$member$1$0 | quorum$0$member$1$2; quorum$0$member$1$3; quorum$1$chosenAt$0$1; quorum$1$member$1$1 | quorum$0$member$1$4; quorum$0$member$1$5; quorum$1$chosenAt$0$2; quorum$1$member$1$2')


---------- SigGenerator ----------

terms:  ['~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor2,proposer0)', '~start(proposer1)', 'member(acceptor0,quorum__acceptor0_acceptor1)', 'member(acceptor1,quorum__acceptor0_acceptor1)', '~member(acceptor2,quorum__acceptor0_acceptor1)', 'member(acceptor0,quorum__acceptor0_acceptor2)', '~member(acceptor1,quorum__acceptor0_acceptor2)', 'member(acceptor2,quorum__acceptor0_acceptor2)', '~member(acceptor0,quorum__acceptor1_acceptor2)', 'member(acceptor1,quorum__acceptor1_acceptor2)', 'member(acceptor2,quorum__acceptor1_acceptor2)']

func_name2symbol:  {'chosenAt': Const('chosenAt', FunctionSort(EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')), EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')), BooleanSort())), 'didNotPromise': Const('didNotPromise', FunctionSort(EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')), BooleanSort())), 'promise': Const('promise', FunctionSort(EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')), EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')), BooleanSort())), 'start': Const('start', FunctionSort(EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')), BooleanSort())), 'member': Const('member', FunctionSort(EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')), EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')), BooleanSort()))}

func_name2args_sort:  {'chosenAt': (EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')), EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))), 'didNotPromise': (EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')),), 'promise': (EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')), EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))), 'start': (EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')),), 'member': (EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')), EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')))}

sign_func_name2count:  {'1$chosenAt': 3, '1$didNotPromise': 3, '1$promise': 1, '1$start': 1, '0$member': 6, '1$member': 3}


---------- ProductArgPartition ----------

sort2class_sigs: {EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')): [quorum$0$member$1$0; quorum$0$member$1$1; quorum$1$chosenAt$0$0; quorum$1$member$1$0, quorum$0$member$1$2; quorum$0$member$1$3; quorum$1$chosenAt$0$1; quorum$1$member$1$1, quorum$0$member$1$4; quorum$0$member$1$5; quorum$1$chosenAt$0$2; quorum$1$member$1$2], EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')): [proposer$1$chosenAt$1$0; proposer$1$promise$1$0, proposer$1$chosenAt$1$1; proposer$1$chosenAt$1$2, proposer$1$start$0$0], EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')): [acceptor$0$member$0$0; acceptor$0$member$0$2; acceptor$1$didNotPromise$0$0; acceptor$1$member$0$2, acceptor$0$member$0$1; acceptor$0$member$0$4; acceptor$1$didNotPromise$0$1; acceptor$1$member$0$1, acceptor$0$member$0$3; acceptor$0$member$0$5; acceptor$1$didNotPromise$0$2; acceptor$1$member$0$0; acceptor$1$promise$0$0]}

sort2part_sig: {EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')): quorum$0$member$1$0; quorum$0$member$1$1; quorum$1$chosenAt$0$0; quorum$1$member$1$0 | quorum$0$member$1$2; quorum$0$member$1$3; quorum$1$chosenAt$0$1; quorum$1$member$1$1 | quorum$0$member$1$4; quorum$0$member$1$5; quorum$1$chosenAt$0$2; quorum$1$member$1$2, EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')): proposer$1$chosenAt$1$0; proposer$1$promise$1$0 | proposer$1$chosenAt$1$1; proposer$1$chosenAt$1$2 | proposer$1$start$0$0, EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')): acceptor$0$member$0$0; acceptor$0$member$0$2; acceptor$1$didNotPromise$0$0; acceptor$1$member$0$2 | acceptor$0$member$0$1; acceptor$0$member$0$4; acceptor$1$didNotPromise$0$1; acceptor$1$member$0$1 | acceptor$0$member$0$3; acceptor$0$member$0$5; acceptor$1$didNotPromise$0$2; acceptor$1$member$0$0; acceptor$1$promise$0$0}

	sort: quorum

	identical_classes: {'quorum$0$member$1; quorum$0$member$1; quorum$1$chosenAt$0; quorum$1$member$1': [quorum$0$member$1$0; quorum$0$member$1$1; quorum$1$chosenAt$0$0; quorum$1$member$1$0, quorum$0$member$1$2; quorum$0$member$1$3; quorum$1$chosenAt$0$1; quorum$1$member$1$1, quorum$0$member$1$4; quorum$0$member$1$5; quorum$1$chosenAt$0$2; quorum$1$member$1$2]}

	identical_single_classes: {}

	identical_multi_classes: {'quorum$0$member$1; quorum$0$member$1; quorum$1$chosenAt$0; quorum$1$member$1': [quorum$0$member$1$0, quorum$0$member$1$1, quorum$1$chosenAt$0$0, quorum$1$member$1$0, quorum$0$member$1$2, quorum$0$member$1$3, quorum$1$chosenAt$0$1, quorum$1$member$1$1, quorum$0$member$1$4, quorum$0$member$1$5, quorum$1$chosenAt$0$2, quorum$1$member$1$2]}

	sort: proposer

	identical_classes: {'proposer$1$chosenAt$1; proposer$1$promise$1': [proposer$1$chosenAt$1$0; proposer$1$promise$1$0], 'proposer$1$chosenAt$1; proposer$1$chosenAt$1': [proposer$1$chosenAt$1$1; proposer$1$chosenAt$1$2], 'proposer$1$start$0': [proposer$1$start$0$0]}

	identical_single_classes: {'proposer$1$chosenAt$1; proposer$1$promise$1': proposer$1$chosenAt$1$0; proposer$1$promise$1$0, 'proposer$1$chosenAt$1; proposer$1$chosenAt$1': proposer$1$chosenAt$1$1; proposer$1$chosenAt$1$2, 'proposer$1$start$0': proposer$1$start$0$0}

	identical_multi_classes: {}

	sort: acceptor

	identical_classes: {'acceptor$0$member$0; acceptor$0$member$0; acceptor$1$didNotPromise$0; acceptor$1$member$0': [acceptor$0$member$0$0; acceptor$0$member$0$2; acceptor$1$didNotPromise$0$0; acceptor$1$member$0$2, acceptor$0$member$0$1; acceptor$0$member$0$4; acceptor$1$didNotPromise$0$1; acceptor$1$member$0$1], 'acceptor$0$member$0; acceptor$0$member$0; acceptor$1$didNotPromise$0; acceptor$1$member$0; acceptor$1$promise$0': [acceptor$0$member$0$3; acceptor$0$member$0$5; acceptor$1$didNotPromise$0$2; acceptor$1$member$0$0; acceptor$1$promise$0$0]}

	identical_single_classes: {'acceptor$0$member$0; acceptor$0$member$0; acceptor$1$didNotPromise$0; acceptor$1$member$0; acceptor$1$promise$0': acceptor$0$member$0$3; acceptor$0$member$0$5; acceptor$1$didNotPromise$0$2; acceptor$1$member$0$0; acceptor$1$promise$0$0}

	identical_multi_classes: {'acceptor$0$member$0; acceptor$0$member$0; acceptor$1$didNotPromise$0; acceptor$1$member$0': [acceptor$0$member$0$0, acceptor$0$member$0$2, acceptor$1$didNotPromise$0$0, acceptor$1$member$0$2, acceptor$0$member$0$1, acceptor$0$member$0$4, acceptor$1$didNotPromise$0$1, acceptor$1$member$0$1]}


---------- QInference: _set_sort_to_quantifier_mode ----------

quantifier mode: quorum: QuantifierMode.forall

quantifier mode: proposer: QuantifierMode.forall

quantifier mode: acceptor: QuantifierMode.forall


---------- QInference: _set_constraint_mode ----------

constraint mode: ConstraintMode.no_merge


---------- QFormula: _set_qvars ----------

forall_qvars: {Var('ACCEPTOR0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Var('QUORUM1', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), Var('PROPOSER0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))), Var('QUORUM2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), Var('ACCEPTOR2', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Var('QUORUM0', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), Var('PROPOSER2', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))), Var('ACCEPTOR1', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Var('PROPOSER1', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))}

exists_qvars: set()


---------- QFormula: _set_signed_func_name_to_args ----------

signed_func_name2args: {'1$chosenAt': [[Var('QUORUM0', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), Var('PROPOSER0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))], [Var('QUORUM1', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), Var('PROPOSER1', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))], [Var('QUORUM2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), Var('PROPOSER1', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))]], '1$didNotPromise': [[Var('ACCEPTOR0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')))], [Var('ACCEPTOR1', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')))], [Var('ACCEPTOR2', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')))]], '1$promise': [[Var('ACCEPTOR2', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Var('PROPOSER0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))]], '1$start': [[Var('PROPOSER2', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))]], '0$member': [[Var('ACCEPTOR0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Var('QUORUM0', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')))], [Var('ACCEPTOR1', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Var('QUORUM0', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')))], [Var('ACCEPTOR0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Var('QUORUM1', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')))], [Var('ACCEPTOR2', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Var('QUORUM1', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')))], [Var('ACCEPTOR1', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Var('QUORUM2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')))], [Var('ACCEPTOR2', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Var('QUORUM2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')))]], '1$member': [[Var('ACCEPTOR2', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Var('QUORUM0', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')))], [Var('ACCEPTOR1', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Var('QUORUM1', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')))], [Var('ACCEPTOR0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Var('QUORUM2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')))]]}


---------- QFormula: _set_qterms ----------

qterms: ['~member(ACCEPTOR1,QUORUM1)', '~chosenAt(QUORUM2,PROPOSER1)', '~didNotPromise(ACCEPTOR0)', '~didNotPromise(ACCEPTOR2)', 'member(ACCEPTOR2,QUORUM2)', '~member(ACCEPTOR0,QUORUM2)', '~start(PROPOSER2)', '~member(ACCEPTOR2,QUORUM0)', '~promise(ACCEPTOR2,PROPOSER0)', 'member(ACCEPTOR0,QUORUM0)', 'member(ACCEPTOR1,QUORUM0)', 'member(ACCEPTOR2,QUORUM1)', '~didNotPromise(ACCEPTOR1)', 'member(ACCEPTOR1,QUORUM2)', '~chosenAt(QUORUM1,PROPOSER1)', '~chosenAt(QUORUM0,PROPOSER0)', 'member(ACCEPTOR0,QUORUM1)']


---------- QFormula: get_qclause ----------

qclause: forall QUORUM0,PROPOSER2,PROPOSER1,ACCEPTOR1,QUORUM1,ACCEPTOR0,PROPOSER0,ACCEPTOR2,QUORUM2. member(ACCEPTOR1,QUORUM1) | chosenAt(QUORUM2,PROPOSER1) | didNotPromise(ACCEPTOR0) | didNotPromise(ACCEPTOR2) | ~member(ACCEPTOR2,QUORUM2) | member(ACCEPTOR0,QUORUM2) | start(PROPOSER2) | member(ACCEPTOR2,QUORUM0) | promise(ACCEPTOR2,PROPOSER0) | ~member(ACCEPTOR0,QUORUM0) | ~member(ACCEPTOR1,QUORUM0) | ~member(ACCEPTOR2,QUORUM1) | didNotPromise(ACCEPTOR1) | ~member(ACCEPTOR1,QUORUM2) | chosenAt(QUORUM1,PROPOSER1) | chosenAt(QUORUM0,PROPOSER0) | ~member(ACCEPTOR0,QUORUM1) | (PROPOSER1 = PROPOSER2 | QUORUM0 = QUORUM2 | ACCEPTOR0 = ACCEPTOR1 | QUORUM0 = QUORUM1 | QUORUM1 = QUORUM2 | PROPOSER0 = PROPOSER1 | ACCEPTOR1 = ACCEPTOR2 | ACCEPTOR0 = ACCEPTOR2 | PROPOSER0 = PROPOSER2)


=== Prime Orbit 48 =====================
size : 18
num_suborbits: 1
789 (*) : --00-----000------0----0-0-
789     : ['~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor1,proposer0)', '~promise(acceptor2,proposer2)', '~start(proposer1)']
790     : -0-0-----000------0---0---0
790     : ['~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor1,proposer0)', '~promise(acceptor2,proposer1)', '~start(proposer2)']
791     : --0-0----000-------0---00--
791     : ['~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor1,proposer1)', '~promise(acceptor2,proposer2)', '~start(proposer0)']
792     : 0---0----000-------0-0----0
792     : ['~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor1,proposer1)', '~promise(acceptor2,proposer0)', '~start(proposer2)']
793     : -0---0---000--------0-0-0--
793     : ['~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor1,proposer2)', '~promise(acceptor2,proposer1)', '~start(proposer0)']
794     : 0----0---000--------00---0-
794     : ['~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor1,proposer2)', '~promise(acceptor2,proposer0)', '~start(proposer1)']
795     : --0---0--000---0-------0-0-
795     : ['~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor0,proposer0)', '~promise(acceptor2,proposer2)', '~start(proposer1)']
796     : -0----0--000---0------0---0
796     : ['~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor0,proposer0)', '~promise(acceptor2,proposer1)', '~start(proposer2)']
797     : --0----0-000----0------00--
797     : ['~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor0,proposer1)', '~promise(acceptor2,proposer2)', '~start(proposer0)']
798     : 0------0-000----0----0----0
798     : ['~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor0,proposer1)', '~promise(acceptor2,proposer0)', '~start(proposer2)']
799     : -0------0000-----0----0-0--
799     : ['~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor0,proposer2)', '~promise(acceptor2,proposer1)', '~start(proposer0)']
800     : 0-------0000-----0---0---0-
800     : ['~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor0,proposer2)', '~promise(acceptor2,proposer0)', '~start(proposer1)']
801     : -----00--000---0----0----0-
801     : ['~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor0,proposer0)', '~promise(acceptor1,proposer2)', '~start(proposer1)']
802     : ----0-0--000---0---0------0
802     : ['~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor0,proposer0)', '~promise(acceptor1,proposer1)', '~start(proposer2)']
803     : -----0-0-000----0---0---0--
803     : ['~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor0,proposer1)', '~promise(acceptor1,proposer2)', '~start(proposer0)']
804     : ---0---0-000----0-0-------0
804     : ['~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor0,proposer1)', '~promise(acceptor1,proposer0)', '~start(proposer2)']
805     : ----0---0000-----0-0----0--
805     : ['~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor0,proposer2)', '~promise(acceptor1,proposer1)', '~start(proposer0)']
806     : ---0----0000-----00------0-
806     : ['~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor0,proposer2)', '~promise(acceptor1,proposer0)', '~start(proposer1)']
num_forall :   0
num_exists :   0
num_literals : 0
quantified form : None
qcost : 0




---------- QPrime ----------


---------- ConstArgBinding ----------

terms: ['~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor1,proposer0)', '~promise(acceptor2,proposer2)', '~start(proposer1)', 'member(acceptor0,quorum__acceptor0_acceptor1)', 'member(acceptor1,quorum__acceptor0_acceptor1)', '~member(acceptor2,quorum__acceptor0_acceptor1)', 'member(acceptor0,quorum__acceptor0_acceptor2)', '~member(acceptor1,quorum__acceptor0_acceptor2)', 'member(acceptor2,quorum__acceptor0_acceptor2)']

sign_func_name2args: {'1$chosenAt': [(Const('quorum__acceptor0_acceptor1', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), Const('proposer2', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))), (Const('quorum__acceptor0_acceptor2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), Const('proposer0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))))], '1$didNotPromise': [(Const('acceptor0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))),), (Const('acceptor1', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))),), (Const('acceptor2', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))),)], '1$promise': [(Const('acceptor1', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Const('proposer0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))), (Const('acceptor2', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Const('proposer2', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))))], '1$start': [(Const('proposer1', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))),)], '0$member': [(Const('acceptor0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Const('quorum__acceptor0_acceptor1', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')))), (Const('acceptor1', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Const('quorum__acceptor0_acceptor1', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')))), (Const('acceptor0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Const('quorum__acceptor0_acceptor2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')))), (Const('acceptor2', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Const('quorum__acceptor0_acceptor2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))))], '1$member': [(Const('acceptor2', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Const('quorum__acceptor0_acceptor1', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')))), (Const('acceptor1', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Const('quorum__acceptor0_acceptor2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))))]}

const2sigs: {Const('quorum__acceptor0_acceptor1', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))): [quorum$1$chosenAt$0$0, quorum$0$member$1$0, quorum$0$member$1$1, quorum$1$member$1$0], Const('proposer2', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))): [proposer$1$chosenAt$1$0, proposer$1$promise$1$1], Const('quorum__acceptor0_acceptor2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))): [quorum$1$chosenAt$0$1, quorum$0$member$1$2, quorum$0$member$1$3, quorum$1$member$1$1], Const('proposer0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))): [proposer$1$chosenAt$1$1, proposer$1$promise$1$0], Const('acceptor0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))): [acceptor$1$didNotPromise$0$0, acceptor$0$member$0$0, acceptor$0$member$0$2], Const('acceptor1', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))): [acceptor$1$didNotPromise$0$1, acceptor$1$promise$0$0, acceptor$0$member$0$1, acceptor$1$member$0$1], Const('acceptor2', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))): [acceptor$1$didNotPromise$0$2, acceptor$1$promise$0$1, acceptor$0$member$0$3, acceptor$1$member$0$0], Const('proposer1', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))): [proposer$1$start$0$0]}

sig2const: {'quorum$1$chosenAt$0$0': Const('quorum__acceptor0_acceptor1', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), 'proposer$1$chosenAt$1$0': Const('proposer2', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))), 'quorum$1$chosenAt$0$1': Const('quorum__acceptor0_acceptor2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), 'proposer$1$chosenAt$1$1': Const('proposer0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))), 'acceptor$1$didNotPromise$0$0': Const('acceptor0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), 'acceptor$1$didNotPromise$0$1': Const('acceptor1', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), 'acceptor$1$didNotPromise$0$2': Const('acceptor2', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), 'acceptor$1$promise$0$0': Const('acceptor1', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), 'proposer$1$promise$1$0': Const('proposer0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))), 'acceptor$1$promise$0$1': Const('acceptor2', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), 'proposer$1$promise$1$1': Const('proposer2', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))), 'proposer$1$start$0$0': Const('proposer1', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))), 'acceptor$0$member$0$0': Const('acceptor0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), 'quorum$0$member$1$0': Const('quorum__acceptor0_acceptor1', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), 'acceptor$0$member$0$1': Const('acceptor1', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), 'quorum$0$member$1$1': Const('quorum__acceptor0_acceptor1', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), 'acceptor$0$member$0$2': Const('acceptor0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), 'quorum$0$member$1$2': Const('quorum__acceptor0_acceptor2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), 'acceptor$0$member$0$3': Const('acceptor2', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), 'quorum$0$member$1$3': Const('quorum__acceptor0_acceptor2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), 'acceptor$1$member$0$0': Const('acceptor2', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), 'quorum$1$member$1$0': Const('quorum__acceptor0_acceptor1', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), 'acceptor$1$member$0$1': Const('acceptor1', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), 'quorum$1$member$1$1': Const('quorum__acceptor0_acceptor2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')))}


---------- ArgPartition ----------

sort2class_sigs: {EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')): [quorum$0$member$1$0; quorum$0$member$1$1; quorum$1$chosenAt$0$0; quorum$1$member$1$0, quorum$0$member$1$2; quorum$0$member$1$3; quorum$1$chosenAt$0$1; quorum$1$member$1$1], EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')): [proposer$1$chosenAt$1$0; proposer$1$promise$1$1, proposer$1$chosenAt$1$1; proposer$1$promise$1$0, proposer$1$start$0$0], EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')): [acceptor$0$member$0$0; acceptor$0$member$0$2; acceptor$1$didNotPromise$0$0, acceptor$0$member$0$1; acceptor$1$didNotPromise$0$1; acceptor$1$member$0$1; acceptor$1$promise$0$0, acceptor$0$member$0$3; acceptor$1$didNotPromise$0$2; acceptor$1$member$0$0; acceptor$1$promise$0$1]}

sort2part_sig: {EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')): quorum$0$member$1$0; quorum$0$member$1$1; quorum$1$chosenAt$0$0; quorum$1$member$1$0 | quorum$0$member$1$2; quorum$0$member$1$3; quorum$1$chosenAt$0$1; quorum$1$member$1$1, EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')): proposer$1$chosenAt$1$0; proposer$1$promise$1$1 | proposer$1$chosenAt$1$1; proposer$1$promise$1$0 | proposer$1$start$0$0, EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')): acceptor$0$member$0$0; acceptor$0$member$0$2; acceptor$1$didNotPromise$0$0 | acceptor$0$member$0$1; acceptor$1$didNotPromise$0$1; acceptor$1$member$0$1; acceptor$1$promise$0$0 | acceptor$0$member$0$3; acceptor$1$didNotPromise$0$2; acceptor$1$member$0$0; acceptor$1$promise$0$1}

part_sig: ('acceptor$0$member$0$0; acceptor$0$member$0$2; acceptor$1$didNotPromise$0$0 | acceptor$0$member$0$1; acceptor$1$didNotPromise$0$1; acceptor$1$member$0$1; acceptor$1$promise$0$0 | acceptor$0$member$0$3; acceptor$1$didNotPromise$0$2; acceptor$1$member$0$0; acceptor$1$promise$0$1', 'proposer$1$chosenAt$1$0; proposer$1$promise$1$1 | proposer$1$chosenAt$1$1; proposer$1$promise$1$0 | proposer$1$start$0$0', 'quorum$0$member$1$0; quorum$0$member$1$1; quorum$1$chosenAt$0$0; quorum$1$member$1$0 | quorum$0$member$1$2; quorum$0$member$1$3; quorum$1$chosenAt$0$1; quorum$1$member$1$1')


---------- SigGenerator ----------

terms:  ['~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor1,proposer0)', '~promise(acceptor2,proposer2)', '~start(proposer1)', 'member(acceptor0,quorum__acceptor0_acceptor1)', 'member(acceptor1,quorum__acceptor0_acceptor1)', '~member(acceptor2,quorum__acceptor0_acceptor1)', 'member(acceptor0,quorum__acceptor0_acceptor2)', '~member(acceptor1,quorum__acceptor0_acceptor2)', 'member(acceptor2,quorum__acceptor0_acceptor2)']

func_name2symbol:  {'chosenAt': Const('chosenAt', FunctionSort(EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')), EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')), BooleanSort())), 'didNotPromise': Const('didNotPromise', FunctionSort(EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')), BooleanSort())), 'promise': Const('promise', FunctionSort(EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')), EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')), BooleanSort())), 'start': Const('start', FunctionSort(EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')), BooleanSort())), 'member': Const('member', FunctionSort(EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')), EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')), BooleanSort()))}

func_name2args_sort:  {'chosenAt': (EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')), EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))), 'didNotPromise': (EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')),), 'promise': (EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')), EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))), 'start': (EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')),), 'member': (EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')), EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')))}

sign_func_name2count:  {'1$chosenAt': 2, '1$didNotPromise': 3, '1$promise': 2, '1$start': 1, '0$member': 4, '1$member': 2}


---------- ProductArgPartition ----------

sort2class_sigs: {EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')): [quorum$0$member$1$0; quorum$0$member$1$1; quorum$1$chosenAt$0$0; quorum$1$member$1$0, quorum$0$member$1$2; quorum$0$member$1$3; quorum$1$chosenAt$0$1; quorum$1$member$1$1], EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')): [proposer$1$chosenAt$1$0; proposer$1$promise$1$1, proposer$1$chosenAt$1$1; proposer$1$promise$1$0, proposer$1$start$0$0], EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')): [acceptor$0$member$0$0; acceptor$0$member$0$2; acceptor$1$didNotPromise$0$0, acceptor$0$member$0$1; acceptor$1$didNotPromise$0$1; acceptor$1$member$0$1; acceptor$1$promise$0$0, acceptor$0$member$0$3; acceptor$1$didNotPromise$0$2; acceptor$1$member$0$0; acceptor$1$promise$0$1]}

sort2part_sig: {EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')): quorum$0$member$1$0; quorum$0$member$1$1; quorum$1$chosenAt$0$0; quorum$1$member$1$0 | quorum$0$member$1$2; quorum$0$member$1$3; quorum$1$chosenAt$0$1; quorum$1$member$1$1, EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')): proposer$1$chosenAt$1$0; proposer$1$promise$1$1 | proposer$1$chosenAt$1$1; proposer$1$promise$1$0 | proposer$1$start$0$0, EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')): acceptor$0$member$0$0; acceptor$0$member$0$2; acceptor$1$didNotPromise$0$0 | acceptor$0$member$0$1; acceptor$1$didNotPromise$0$1; acceptor$1$member$0$1; acceptor$1$promise$0$0 | acceptor$0$member$0$3; acceptor$1$didNotPromise$0$2; acceptor$1$member$0$0; acceptor$1$promise$0$1}

	sort: quorum

	identical_classes: {'quorum$0$member$1; quorum$0$member$1; quorum$1$chosenAt$0; quorum$1$member$1': [quorum$0$member$1$0; quorum$0$member$1$1; quorum$1$chosenAt$0$0; quorum$1$member$1$0, quorum$0$member$1$2; quorum$0$member$1$3; quorum$1$chosenAt$0$1; quorum$1$member$1$1]}

	identical_single_classes: {}

	identical_multi_classes: {'quorum$0$member$1; quorum$0$member$1; quorum$1$chosenAt$0; quorum$1$member$1': [quorum$0$member$1$0, quorum$0$member$1$1, quorum$1$chosenAt$0$0, quorum$1$member$1$0, quorum$0$member$1$2, quorum$0$member$1$3, quorum$1$chosenAt$0$1, quorum$1$member$1$1]}

	sort: proposer

	identical_classes: {'proposer$1$chosenAt$1; proposer$1$promise$1': [proposer$1$chosenAt$1$0; proposer$1$promise$1$1, proposer$1$chosenAt$1$1; proposer$1$promise$1$0], 'proposer$1$start$0': [proposer$1$start$0$0]}

	identical_single_classes: {'proposer$1$start$0': proposer$1$start$0$0}

	identical_multi_classes: {'proposer$1$chosenAt$1; proposer$1$promise$1': [proposer$1$chosenAt$1$0, proposer$1$promise$1$1, proposer$1$chosenAt$1$1, proposer$1$promise$1$0]}

	sort: acceptor

	identical_classes: {'acceptor$0$member$0; acceptor$0$member$0; acceptor$1$didNotPromise$0': [acceptor$0$member$0$0; acceptor$0$member$0$2; acceptor$1$didNotPromise$0$0], 'acceptor$0$member$0; acceptor$1$didNotPromise$0; acceptor$1$member$0; acceptor$1$promise$0': [acceptor$0$member$0$1; acceptor$1$didNotPromise$0$1; acceptor$1$member$0$1; acceptor$1$promise$0$0, acceptor$0$member$0$3; acceptor$1$didNotPromise$0$2; acceptor$1$member$0$0; acceptor$1$promise$0$1]}

	identical_single_classes: {'acceptor$0$member$0; acceptor$0$member$0; acceptor$1$didNotPromise$0': acceptor$0$member$0$0; acceptor$0$member$0$2; acceptor$1$didNotPromise$0$0}

	identical_multi_classes: {'acceptor$0$member$0; acceptor$1$didNotPromise$0; acceptor$1$member$0; acceptor$1$promise$0': [acceptor$0$member$0$1, acceptor$1$didNotPromise$0$1, acceptor$1$member$0$1, acceptor$1$promise$0$0, acceptor$0$member$0$3, acceptor$1$didNotPromise$0$2, acceptor$1$member$0$0, acceptor$1$promise$0$1]}


---------- QInference: _set_sort_to_quantifier_mode ----------

quantifier mode: quorum: QuantifierMode.forall

quantifier mode: proposer: QuantifierMode.forall

quantifier mode: acceptor: QuantifierMode.forall


---------- QInference: _set_constraint_mode ----------

constraint mode: ConstraintMode.no_merge


---------- QFormula: _set_qvars ----------

forall_qvars: {Var('ACCEPTOR0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Var('QUORUM1', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), Var('PROPOSER0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))), Var('ACCEPTOR2', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Var('QUORUM0', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), Var('PROPOSER2', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))), Var('ACCEPTOR1', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Var('PROPOSER1', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))}

exists_qvars: set()


---------- QFormula: _set_signed_func_name_to_args ----------

signed_func_name2args: {'1$chosenAt': [[Var('QUORUM0', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), Var('PROPOSER0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))], [Var('QUORUM1', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), Var('PROPOSER1', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))]], '1$didNotPromise': [[Var('ACCEPTOR0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')))], [Var('ACCEPTOR1', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')))], [Var('ACCEPTOR2', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')))]], '1$promise': [[Var('ACCEPTOR1', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Var('PROPOSER1', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))], [Var('ACCEPTOR2', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Var('PROPOSER0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))]], '1$start': [[Var('PROPOSER2', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))]], '0$member': [[Var('ACCEPTOR0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Var('QUORUM0', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')))], [Var('ACCEPTOR1', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Var('QUORUM0', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')))], [Var('ACCEPTOR0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Var('QUORUM1', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')))], [Var('ACCEPTOR2', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Var('QUORUM1', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')))]], '1$member': [[Var('ACCEPTOR2', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Var('QUORUM0', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')))], [Var('ACCEPTOR1', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Var('QUORUM1', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')))]]}


---------- QFormula: _set_qterms ----------

qterms: ['~member(ACCEPTOR1,QUORUM1)', '~didNotPromise(ACCEPTOR2)', '~didNotPromise(ACCEPTOR0)', '~promise(ACCEPTOR1,PROPOSER1)', '~start(PROPOSER2)', '~member(ACCEPTOR2,QUORUM0)', '~promise(ACCEPTOR2,PROPOSER0)', 'member(ACCEPTOR0,QUORUM0)', 'member(ACCEPTOR1,QUORUM0)', 'member(ACCEPTOR2,QUORUM1)', '~didNotPromise(ACCEPTOR1)', '~chosenAt(QUORUM1,PROPOSER1)', '~chosenAt(QUORUM0,PROPOSER0)', 'member(ACCEPTOR0,QUORUM1)']


---------- QFormula: get_qclause ----------

qclause: forall QUORUM0,PROPOSER2,PROPOSER1,ACCEPTOR1,QUORUM1,ACCEPTOR0,PROPOSER0,ACCEPTOR2. member(ACCEPTOR1,QUORUM1) | didNotPromise(ACCEPTOR2) | didNotPromise(ACCEPTOR0) | promise(ACCEPTOR1,PROPOSER1) | start(PROPOSER2) | member(ACCEPTOR2,QUORUM0) | promise(ACCEPTOR2,PROPOSER0) | ~member(ACCEPTOR0,QUORUM0) | ~member(ACCEPTOR1,QUORUM0) | ~member(ACCEPTOR2,QUORUM1) | didNotPromise(ACCEPTOR1) | chosenAt(QUORUM1,PROPOSER1) | chosenAt(QUORUM0,PROPOSER0) | ~member(ACCEPTOR0,QUORUM1) | (PROPOSER1 = PROPOSER2 | ACCEPTOR0 = ACCEPTOR1 | QUORUM0 = QUORUM1 | PROPOSER0 = PROPOSER1 | ACCEPTOR1 = ACCEPTOR2 | ACCEPTOR0 = ACCEPTOR2 | PROPOSER0 = PROPOSER2)


=== Prime Orbit 49 =====================
size : 3
num_suborbits: 1
807 (*) : 0-00-00-0000-------------0-
807     : ['~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~start(proposer1)']
808     : 00-00-00-000--------------0
808     : ['~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~start(proposer2)']
809     : -00-00-00000------------0--
809     : ['~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~start(proposer0)']
num_forall :   0
num_exists :   0
num_literals : 0
quantified form : None
qcost : 0




---------- QPrime ----------


---------- ConstArgBinding ----------

terms: ['~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~start(proposer1)', 'member(acceptor0,quorum__acceptor0_acceptor1)', 'member(acceptor1,quorum__acceptor0_acceptor1)', '~member(acceptor2,quorum__acceptor0_acceptor1)', 'member(acceptor0,quorum__acceptor0_acceptor2)', '~member(acceptor1,quorum__acceptor0_acceptor2)', 'member(acceptor2,quorum__acceptor0_acceptor2)', '~member(acceptor0,quorum__acceptor1_acceptor2)', 'member(acceptor1,quorum__acceptor1_acceptor2)', 'member(acceptor2,quorum__acceptor1_acceptor2)']

sign_func_name2args: {'1$chosenAt': [(Const('quorum__acceptor0_acceptor1', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), Const('proposer0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))), (Const('quorum__acceptor0_acceptor1', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), Const('proposer2', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))), (Const('quorum__acceptor0_acceptor2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), Const('proposer0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))), (Const('quorum__acceptor0_acceptor2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), Const('proposer2', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))), (Const('quorum__acceptor1_acceptor2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), Const('proposer0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))), (Const('quorum__acceptor1_acceptor2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), Const('proposer2', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))))], '1$didNotPromise': [(Const('acceptor0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))),), (Const('acceptor1', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))),), (Const('acceptor2', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))),)], '1$start': [(Const('proposer1', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))),)], '0$member': [(Const('acceptor0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Const('quorum__acceptor0_acceptor1', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')))), (Const('acceptor1', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Const('quorum__acceptor0_acceptor1', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')))), (Const('acceptor0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Const('quorum__acceptor0_acceptor2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')))), (Const('acceptor2', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Const('quorum__acceptor0_acceptor2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')))), (Const('acceptor1', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Const('quorum__acceptor1_acceptor2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')))), (Const('acceptor2', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Const('quorum__acceptor1_acceptor2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))))], '1$member': [(Const('acceptor2', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Const('quorum__acceptor0_acceptor1', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')))), (Const('acceptor1', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Const('quorum__acceptor0_acceptor2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')))), (Const('acceptor0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Const('quorum__acceptor1_acceptor2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))))]}

const2sigs: {Const('quorum__acceptor0_acceptor1', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))): [quorum$1$chosenAt$0$0, quorum$1$chosenAt$0$1, quorum$0$member$1$0, quorum$0$member$1$1, quorum$1$member$1$0], Const('proposer0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))): [proposer$1$chosenAt$1$0, proposer$1$chosenAt$1$2, proposer$1$chosenAt$1$4], Const('proposer2', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))): [proposer$1$chosenAt$1$1, proposer$1$chosenAt$1$3, proposer$1$chosenAt$1$5], Const('quorum__acceptor0_acceptor2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))): [quorum$1$chosenAt$0$2, quorum$1$chosenAt$0$3, quorum$0$member$1$2, quorum$0$member$1$3, quorum$1$member$1$1], Const('quorum__acceptor1_acceptor2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))): [quorum$1$chosenAt$0$4, quorum$1$chosenAt$0$5, quorum$0$member$1$4, quorum$0$member$1$5, quorum$1$member$1$2], Const('acceptor0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))): [acceptor$1$didNotPromise$0$0, acceptor$0$member$0$0, acceptor$0$member$0$2, acceptor$1$member$0$2], Const('acceptor1', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))): [acceptor$1$didNotPromise$0$1, acceptor$0$member$0$1, acceptor$0$member$0$4, acceptor$1$member$0$1], Const('acceptor2', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))): [acceptor$1$didNotPromise$0$2, acceptor$0$member$0$3, acceptor$0$member$0$5, acceptor$1$member$0$0], Const('proposer1', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))): [proposer$1$start$0$0]}

sig2const: {'quorum$1$chosenAt$0$0': Const('quorum__acceptor0_acceptor1', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), 'proposer$1$chosenAt$1$0': Const('proposer0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))), 'quorum$1$chosenAt$0$1': Const('quorum__acceptor0_acceptor1', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), 'proposer$1$chosenAt$1$1': Const('proposer2', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))), 'quorum$1$chosenAt$0$2': Const('quorum__acceptor0_acceptor2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), 'proposer$1$chosenAt$1$2': Const('proposer0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))), 'quorum$1$chosenAt$0$3': Const('quorum__acceptor0_acceptor2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), 'proposer$1$chosenAt$1$3': Const('proposer2', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))), 'quorum$1$chosenAt$0$4': Const('quorum__acceptor1_acceptor2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), 'proposer$1$chosenAt$1$4': Const('proposer0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))), 'quorum$1$chosenAt$0$5': Const('quorum__acceptor1_acceptor2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), 'proposer$1$chosenAt$1$5': Const('proposer2', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))), 'acceptor$1$didNotPromise$0$0': Const('acceptor0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), 'acceptor$1$didNotPromise$0$1': Const('acceptor1', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), 'acceptor$1$didNotPromise$0$2': Const('acceptor2', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), 'proposer$1$start$0$0': Const('proposer1', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))), 'acceptor$0$member$0$0': Const('acceptor0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), 'quorum$0$member$1$0': Const('quorum__acceptor0_acceptor1', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), 'acceptor$0$member$0$1': Const('acceptor1', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), 'quorum$0$member$1$1': Const('quorum__acceptor0_acceptor1', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), 'acceptor$0$member$0$2': Const('acceptor0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), 'quorum$0$member$1$2': Const('quorum__acceptor0_acceptor2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), 'acceptor$0$member$0$3': Const('acceptor2', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), 'quorum$0$member$1$3': Const('quorum__acceptor0_acceptor2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), 'acceptor$0$member$0$4': Const('acceptor1', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), 'quorum$0$member$1$4': Const('quorum__acceptor1_acceptor2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), 'acceptor$0$member$0$5': Const('acceptor2', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), 'quorum$0$member$1$5': Const('quorum__acceptor1_acceptor2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), 'acceptor$1$member$0$0': Const('acceptor2', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), 'quorum$1$member$1$0': Const('quorum__acceptor0_acceptor1', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), 'acceptor$1$member$0$1': Const('acceptor1', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), 'quorum$1$member$1$1': Const('quorum__acceptor0_acceptor2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), 'acceptor$1$member$0$2': Const('acceptor0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), 'quorum$1$member$1$2': Const('quorum__acceptor1_acceptor2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')))}


---------- ArgPartition ----------

sort2class_sigs: {EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')): [quorum$0$member$1$0; quorum$0$member$1$1; quorum$1$chosenAt$0$0; quorum$1$chosenAt$0$1; quorum$1$member$1$0, quorum$0$member$1$2; quorum$0$member$1$3; quorum$1$chosenAt$0$2; quorum$1$chosenAt$0$3; quorum$1$member$1$1, quorum$0$member$1$4; quorum$0$member$1$5; quorum$1$chosenAt$0$4; quorum$1$chosenAt$0$5; quorum$1$member$1$2], EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')): [proposer$1$chosenAt$1$0; proposer$1$chosenAt$1$2; proposer$1$chosenAt$1$4, proposer$1$chosenAt$1$1; proposer$1$chosenAt$1$3; proposer$1$chosenAt$1$5, proposer$1$start$0$0], EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')): [acceptor$0$member$0$0; acceptor$0$member$0$2; acceptor$1$didNotPromise$0$0; acceptor$1$member$0$2, acceptor$0$member$0$1; acceptor$0$member$0$4; acceptor$1$didNotPromise$0$1; acceptor$1$member$0$1, acceptor$0$member$0$3; acceptor$0$member$0$5; acceptor$1$didNotPromise$0$2; acceptor$1$member$0$0]}

sort2part_sig: {EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')): quorum$0$member$1$0; quorum$0$member$1$1; quorum$1$chosenAt$0$0; quorum$1$chosenAt$0$1; quorum$1$member$1$0 | quorum$0$member$1$2; quorum$0$member$1$3; quorum$1$chosenAt$0$2; quorum$1$chosenAt$0$3; quorum$1$member$1$1 | quorum$0$member$1$4; quorum$0$member$1$5; quorum$1$chosenAt$0$4; quorum$1$chosenAt$0$5; quorum$1$member$1$2, EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')): proposer$1$chosenAt$1$0; proposer$1$chosenAt$1$2; proposer$1$chosenAt$1$4 | proposer$1$chosenAt$1$1; proposer$1$chosenAt$1$3; proposer$1$chosenAt$1$5 | proposer$1$start$0$0, EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')): acceptor$0$member$0$0; acceptor$0$member$0$2; acceptor$1$didNotPromise$0$0; acceptor$1$member$0$2 | acceptor$0$member$0$1; acceptor$0$member$0$4; acceptor$1$didNotPromise$0$1; acceptor$1$member$0$1 | acceptor$0$member$0$3; acceptor$0$member$0$5; acceptor$1$didNotPromise$0$2; acceptor$1$member$0$0}

part_sig: ('acceptor$0$member$0$0; acceptor$0$member$0$2; acceptor$1$didNotPromise$0$0; acceptor$1$member$0$2 | acceptor$0$member$0$1; acceptor$0$member$0$4; acceptor$1$didNotPromise$0$1; acceptor$1$member$0$1 | acceptor$0$member$0$3; acceptor$0$member$0$5; acceptor$1$didNotPromise$0$2; acceptor$1$member$0$0', 'proposer$1$chosenAt$1$0; proposer$1$chosenAt$1$2; proposer$1$chosenAt$1$4 | proposer$1$chosenAt$1$1; proposer$1$chosenAt$1$3; proposer$1$chosenAt$1$5 | proposer$1$start$0$0', 'quorum$0$member$1$0; quorum$0$member$1$1; quorum$1$chosenAt$0$0; quorum$1$chosenAt$0$1; quorum$1$member$1$0 | quorum$0$member$1$2; quorum$0$member$1$3; quorum$1$chosenAt$0$2; quorum$1$chosenAt$0$3; quorum$1$member$1$1 | quorum$0$member$1$4; quorum$0$member$1$5; quorum$1$chosenAt$0$4; quorum$1$chosenAt$0$5; quorum$1$member$1$2')


---------- SigGenerator ----------

terms:  ['~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~start(proposer1)', 'member(acceptor0,quorum__acceptor0_acceptor1)', 'member(acceptor1,quorum__acceptor0_acceptor1)', '~member(acceptor2,quorum__acceptor0_acceptor1)', 'member(acceptor0,quorum__acceptor0_acceptor2)', '~member(acceptor1,quorum__acceptor0_acceptor2)', 'member(acceptor2,quorum__acceptor0_acceptor2)', '~member(acceptor0,quorum__acceptor1_acceptor2)', 'member(acceptor1,quorum__acceptor1_acceptor2)', 'member(acceptor2,quorum__acceptor1_acceptor2)']

func_name2symbol:  {'chosenAt': Const('chosenAt', FunctionSort(EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')), EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')), BooleanSort())), 'didNotPromise': Const('didNotPromise', FunctionSort(EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')), BooleanSort())), 'start': Const('start', FunctionSort(EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')), BooleanSort())), 'member': Const('member', FunctionSort(EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')), EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')), BooleanSort()))}

func_name2args_sort:  {'chosenAt': (EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')), EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))), 'didNotPromise': (EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')),), 'start': (EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')),), 'member': (EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')), EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')))}

sign_func_name2count:  {'1$chosenAt': 6, '1$didNotPromise': 3, '1$start': 1, '0$member': 6, '1$member': 3}


---------- ProductArgPartition ----------

sort2class_sigs: {EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')): [quorum$0$member$1$0; quorum$0$member$1$1; quorum$1$chosenAt$0$0; quorum$1$chosenAt$0$1; quorum$1$member$1$0, quorum$0$member$1$2; quorum$0$member$1$3; quorum$1$chosenAt$0$2; quorum$1$chosenAt$0$3; quorum$1$member$1$1, quorum$0$member$1$4; quorum$0$member$1$5; quorum$1$chosenAt$0$4; quorum$1$chosenAt$0$5; quorum$1$member$1$2], EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')): [proposer$1$chosenAt$1$0; proposer$1$chosenAt$1$2; proposer$1$chosenAt$1$4, proposer$1$chosenAt$1$1; proposer$1$chosenAt$1$3; proposer$1$chosenAt$1$5, proposer$1$start$0$0], EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')): [acceptor$0$member$0$0; acceptor$0$member$0$2; acceptor$1$didNotPromise$0$0; acceptor$1$member$0$2, acceptor$0$member$0$1; acceptor$0$member$0$4; acceptor$1$didNotPromise$0$1; acceptor$1$member$0$1, acceptor$0$member$0$3; acceptor$0$member$0$5; acceptor$1$didNotPromise$0$2; acceptor$1$member$0$0]}

sort2part_sig: {EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')): quorum$0$member$1$0; quorum$0$member$1$1; quorum$1$chosenAt$0$0; quorum$1$chosenAt$0$1; quorum$1$member$1$0 | quorum$0$member$1$2; quorum$0$member$1$3; quorum$1$chosenAt$0$2; quorum$1$chosenAt$0$3; quorum$1$member$1$1 | quorum$0$member$1$4; quorum$0$member$1$5; quorum$1$chosenAt$0$4; quorum$1$chosenAt$0$5; quorum$1$member$1$2, EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')): proposer$1$chosenAt$1$0; proposer$1$chosenAt$1$2; proposer$1$chosenAt$1$4 | proposer$1$chosenAt$1$1; proposer$1$chosenAt$1$3; proposer$1$chosenAt$1$5 | proposer$1$start$0$0, EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')): acceptor$0$member$0$0; acceptor$0$member$0$2; acceptor$1$didNotPromise$0$0; acceptor$1$member$0$2 | acceptor$0$member$0$1; acceptor$0$member$0$4; acceptor$1$didNotPromise$0$1; acceptor$1$member$0$1 | acceptor$0$member$0$3; acceptor$0$member$0$5; acceptor$1$didNotPromise$0$2; acceptor$1$member$0$0}

	sort: quorum

	identical_classes: {'quorum$0$member$1; quorum$0$member$1; quorum$1$chosenAt$0; quorum$1$chosenAt$0; quorum$1$member$1': [quorum$0$member$1$0; quorum$0$member$1$1; quorum$1$chosenAt$0$0; quorum$1$chosenAt$0$1; quorum$1$member$1$0, quorum$0$member$1$2; quorum$0$member$1$3; quorum$1$chosenAt$0$2; quorum$1$chosenAt$0$3; quorum$1$member$1$1, quorum$0$member$1$4; quorum$0$member$1$5; quorum$1$chosenAt$0$4; quorum$1$chosenAt$0$5; quorum$1$member$1$2]}

	identical_single_classes: {}

	identical_multi_classes: {'quorum$0$member$1; quorum$0$member$1; quorum$1$chosenAt$0; quorum$1$chosenAt$0; quorum$1$member$1': [quorum$0$member$1$0, quorum$0$member$1$1, quorum$1$chosenAt$0$0, quorum$1$chosenAt$0$1, quorum$1$member$1$0, quorum$0$member$1$2, quorum$0$member$1$3, quorum$1$chosenAt$0$2, quorum$1$chosenAt$0$3, quorum$1$member$1$1, quorum$0$member$1$4, quorum$0$member$1$5, quorum$1$chosenAt$0$4, quorum$1$chosenAt$0$5, quorum$1$member$1$2]}

	sort: proposer

	identical_classes: {'proposer$1$chosenAt$1; proposer$1$chosenAt$1; proposer$1$chosenAt$1': [proposer$1$chosenAt$1$0; proposer$1$chosenAt$1$2; proposer$1$chosenAt$1$4, proposer$1$chosenAt$1$1; proposer$1$chosenAt$1$3; proposer$1$chosenAt$1$5], 'proposer$1$start$0': [proposer$1$start$0$0]}

	identical_single_classes: {'proposer$1$start$0': proposer$1$start$0$0}

	identical_multi_classes: {'proposer$1$chosenAt$1; proposer$1$chosenAt$1; proposer$1$chosenAt$1': [proposer$1$chosenAt$1$0, proposer$1$chosenAt$1$2, proposer$1$chosenAt$1$4, proposer$1$chosenAt$1$1, proposer$1$chosenAt$1$3, proposer$1$chosenAt$1$5]}

	sort: acceptor

	identical_classes: {'acceptor$0$member$0; acceptor$0$member$0; acceptor$1$didNotPromise$0; acceptor$1$member$0': [acceptor$0$member$0$0; acceptor$0$member$0$2; acceptor$1$didNotPromise$0$0; acceptor$1$member$0$2, acceptor$0$member$0$1; acceptor$0$member$0$4; acceptor$1$didNotPromise$0$1; acceptor$1$member$0$1, acceptor$0$member$0$3; acceptor$0$member$0$5; acceptor$1$didNotPromise$0$2; acceptor$1$member$0$0]}

	identical_single_classes: {}

	identical_multi_classes: {'acceptor$0$member$0; acceptor$0$member$0; acceptor$1$didNotPromise$0; acceptor$1$member$0': [acceptor$0$member$0$0, acceptor$0$member$0$2, acceptor$1$didNotPromise$0$0, acceptor$1$member$0$2, acceptor$0$member$0$1, acceptor$0$member$0$4, acceptor$1$didNotPromise$0$1, acceptor$1$member$0$1, acceptor$0$member$0$3, acceptor$0$member$0$5, acceptor$1$didNotPromise$0$2, acceptor$1$member$0$0]}


---------- QInference: _set_sort_to_quantifier_mode ----------

quantifier mode: quorum: QuantifierMode.forall

quantifier mode: proposer: QuantifierMode.forall_exists

quantifier mode: acceptor: QuantifierMode.forall


---------- QInference: _set_constraint_mode ----------

constraint mode: ConstraintMode.no_merge


---------- QFormula: _set_qvars ----------

forall_qvars: {Var('ACCEPTOR0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Var('QUORUM1', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), Var('QUORUM2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), Var('ACCEPTOR2', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Var('QUORUM0', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), Var('ACCEPTOR1', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Var('PROPOSER1', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))}

exists_qvars: {Var('PROPOSER0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))}


---------- QFormula: _set_signed_func_name_to_args ----------

signed_func_name2args: {'1$chosenAt': [[Var('QUORUM0', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), Var('PROPOSER0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))], [Var('QUORUM0', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), Var('PROPOSER0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))], [Var('QUORUM1', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), Var('PROPOSER0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))], [Var('QUORUM1', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), Var('PROPOSER0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))], [Var('QUORUM2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), Var('PROPOSER0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))], [Var('QUORUM2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), Var('PROPOSER0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))]], '1$didNotPromise': [[Var('ACCEPTOR0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')))], [Var('ACCEPTOR1', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')))], [Var('ACCEPTOR2', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')))]], '1$start': [[Var('PROPOSER1', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))]], '0$member': [[Var('ACCEPTOR0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Var('QUORUM0', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')))], [Var('ACCEPTOR1', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Var('QUORUM0', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')))], [Var('ACCEPTOR0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Var('QUORUM1', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')))], [Var('ACCEPTOR2', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Var('QUORUM1', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')))], [Var('ACCEPTOR1', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Var('QUORUM2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')))], [Var('ACCEPTOR2', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Var('QUORUM2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')))]], '1$member': [[Var('ACCEPTOR2', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Var('QUORUM0', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')))], [Var('ACCEPTOR1', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Var('QUORUM1', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')))], [Var('ACCEPTOR0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Var('QUORUM2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')))]]}


---------- QFormula: _set_qterms ----------

qterms: ['~chosenAt(QUORUM1,PROPOSER0)', '~didNotPromise(ACCEPTOR2)', '~didNotPromise(ACCEPTOR0)', 'member(ACCEPTOR2,QUORUM2)', '~member(ACCEPTOR1,QUORUM1)', '~member(ACCEPTOR0,QUORUM2)', 'member(ACCEPTOR0,QUORUM0)', '~start(PROPOSER1)', 'member(ACCEPTOR1,QUORUM0)', 'member(ACCEPTOR2,QUORUM1)', '~chosenAt(QUORUM2,PROPOSER0)', '~didNotPromise(ACCEPTOR1)', 'member(ACCEPTOR1,QUORUM2)', '~member(ACCEPTOR2,QUORUM0)', '~chosenAt(QUORUM0,PROPOSER0)', 'member(ACCEPTOR0,QUORUM1)']


---------- QFormula: get_qclause ----------

qclause: forall QUORUM0,PROPOSER1,ACCEPTOR1,QUORUM1,ACCEPTOR0,ACCEPTOR2,QUORUM2. didNotPromise(ACCEPTOR2) | didNotPromise(ACCEPTOR0) | ~member(ACCEPTOR2,QUORUM2) | member(ACCEPTOR1,QUORUM1) | member(ACCEPTOR0,QUORUM2) | ~member(ACCEPTOR0,QUORUM0) | start(PROPOSER1) | ~member(ACCEPTOR1,QUORUM0) | ~member(ACCEPTOR2,QUORUM1) | didNotPromise(ACCEPTOR1) | ~member(ACCEPTOR1,QUORUM2) | member(ACCEPTOR2,QUORUM0) | ~member(ACCEPTOR0,QUORUM1) | (exists PROPOSER0. ((chosenAt(QUORUM1,PROPOSER0) | chosenAt(QUORUM2,PROPOSER0) | chosenAt(QUORUM0,PROPOSER0)) & PROPOSER0 ~= PROPOSER1)) | (QUORUM0 = QUORUM2 | ACCEPTOR0 = ACCEPTOR1 | QUORUM0 = QUORUM1 | QUORUM1 = QUORUM2 | ACCEPTOR1 = ACCEPTOR2 | ACCEPTOR0 = ACCEPTOR2)


=======================================================================================================================

	[QI RESULT]: Quantified Prime Orbits on [ivybench/sym_quorum/ivy/simple-election: acceptor=3,proposer=3]

=======================================================================================================================


=== Prime Orbit 9 =====================
size : 9
num_suborbits: 1
147 (*) : ---------------------1-1---
147     : ['promise(acceptor2,proposer0)', 'promise(acceptor2,proposer2)']
148     : ---------------------11----
148     : ['promise(acceptor2,proposer0)', 'promise(acceptor2,proposer1)']
149     : ----------------------11---
149     : ['promise(acceptor2,proposer1)', 'promise(acceptor2,proposer2)']
150     : ------------------1-1------
150     : ['promise(acceptor1,proposer0)', 'promise(acceptor1,proposer2)']
151     : ------------------11-------
151     : ['promise(acceptor1,proposer0)', 'promise(acceptor1,proposer1)']
152     : -------------------11------
152     : ['promise(acceptor1,proposer1)', 'promise(acceptor1,proposer2)']
153     : ---------------1-1---------
153     : ['promise(acceptor0,proposer0)', 'promise(acceptor0,proposer2)']
154     : ---------------11----------
154     : ['promise(acceptor0,proposer0)', 'promise(acceptor0,proposer1)']
155     : ----------------11---------
155     : ['promise(acceptor0,proposer1)', 'promise(acceptor0,proposer2)']
num_forall :   3
num_exists :   0
num_literals : 3
quantified form : forall ACCEPTOR0,PROPOSER0,PROPOSER1. ~promise(ACCEPTOR0,PROPOSER0) | ~promise(ACCEPTOR0,PROPOSER1) | PROPOSER0 = PROPOSER1
qcost : 6




=== Prime Orbit 3 =====================
size : 18
num_suborbits: 1
81 (*) : ------1-------1------------
81     : ['chosenAt(quorum__acceptor1_acceptor2,proposer0)', 'leader(proposer2)']
82     : ------1------1-------------
82     : ['chosenAt(quorum__acceptor1_acceptor2,proposer0)', 'leader(proposer1)']
83     : -------1------1------------
83     : ['chosenAt(quorum__acceptor1_acceptor2,proposer1)', 'leader(proposer2)']
84     : -------1----1--------------
84     : ['chosenAt(quorum__acceptor1_acceptor2,proposer1)', 'leader(proposer0)']
85     : --------1----1-------------
85     : ['chosenAt(quorum__acceptor1_acceptor2,proposer2)', 'leader(proposer1)']
86     : --------1---1--------------
86     : ['chosenAt(quorum__acceptor1_acceptor2,proposer2)', 'leader(proposer0)']
87     : ---1----------1------------
87     : ['chosenAt(quorum__acceptor0_acceptor2,proposer0)', 'leader(proposer2)']
88     : ---1---------1-------------
88     : ['chosenAt(quorum__acceptor0_acceptor2,proposer0)', 'leader(proposer1)']
89     : ----1---------1------------
89     : ['chosenAt(quorum__acceptor0_acceptor2,proposer1)', 'leader(proposer2)']
90     : ----1-------1--------------
90     : ['chosenAt(quorum__acceptor0_acceptor2,proposer1)', 'leader(proposer0)']
91     : -----1-------1-------------
91     : ['chosenAt(quorum__acceptor0_acceptor2,proposer2)', 'leader(proposer1)']
92     : -----1------1--------------
92     : ['chosenAt(quorum__acceptor0_acceptor2,proposer2)', 'leader(proposer0)']
93     : 1-------------1------------
93     : ['chosenAt(quorum__acceptor0_acceptor1,proposer0)', 'leader(proposer2)']
94     : 1------------1-------------
94     : ['chosenAt(quorum__acceptor0_acceptor1,proposer0)', 'leader(proposer1)']
95     : -1------------1------------
95     : ['chosenAt(quorum__acceptor0_acceptor1,proposer1)', 'leader(proposer2)']
96     : -1----------1--------------
96     : ['chosenAt(quorum__acceptor0_acceptor1,proposer1)', 'leader(proposer0)']
97     : --1----------1-------------
97     : ['chosenAt(quorum__acceptor0_acceptor1,proposer2)', 'leader(proposer1)']
98     : --1---------1--------------
98     : ['chosenAt(quorum__acceptor0_acceptor1,proposer2)', 'leader(proposer0)']
num_forall :   3
num_exists :   0
num_literals : 3
quantified form : forall QUORUM0,PROPOSER0,PROPOSER1. ~chosenAt(QUORUM0,PROPOSER0) | ~leader(PROPOSER1) | PROPOSER0 = PROPOSER1
qcost : 6




=== Prime Orbit 5 =====================
size : 9
num_suborbits: 1
117 (*) : ------1-----------------0--
117     : ['chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~start(proposer0)']
118     : -------1-----------------0-
118     : ['chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~start(proposer1)']
119     : --------1-----------------0
119     : ['chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~start(proposer2)']
120     : ---1--------------------0--
120     : ['chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~start(proposer0)']
121     : ----1--------------------0-
121     : ['chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~start(proposer1)']
122     : -----1--------------------0
122     : ['chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~start(proposer2)']
123     : 1-----------------------0--
123     : ['chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~start(proposer0)']
124     : -1-----------------------0-
124     : ['chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~start(proposer1)']
125     : --1-----------------------0
125     : ['chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~start(proposer2)']
num_forall :   2
num_exists :   0
num_literals : 2
quantified form : forall PROPOSER0,QUORUM0. ~chosenAt(QUORUM0,PROPOSER0) | start(PROPOSER0)
qcost : 4




=== Prime Orbit 7 =====================
size : 9
num_suborbits: 1
135 (*) : ------------------1-----0--
135     : ['promise(acceptor1,proposer0)', '~start(proposer0)']
136     : -------------------1-----0-
136     : ['promise(acceptor1,proposer1)', '~start(proposer1)']
137     : --------------------1-----0
137     : ['promise(acceptor1,proposer2)', '~start(proposer2)']
138     : ---------------------1--0--
138     : ['promise(acceptor2,proposer0)', '~start(proposer0)']
139     : ----------------------1--0-
139     : ['promise(acceptor2,proposer1)', '~start(proposer1)']
140     : -----------------------1--0
140     : ['promise(acceptor2,proposer2)', '~start(proposer2)']
141     : ---------------1--------0--
141     : ['promise(acceptor0,proposer0)', '~start(proposer0)']
142     : ----------------1--------0-
142     : ['promise(acceptor0,proposer1)', '~start(proposer1)']
143     : -----------------1--------0
143     : ['promise(acceptor0,proposer2)', '~start(proposer2)']
num_forall :   2
num_exists :   0
num_literals : 2
quantified form : forall ACCEPTOR0,PROPOSER0. start(PROPOSER0) | ~promise(ACCEPTOR0,PROPOSER0)
qcost : 4




=== Prime Orbit 8 =====================
size : 3
num_suborbits: 1
144 (*) : ------------1-----------0--
144     : ['leader(proposer0)', '~start(proposer0)']
145     : -------------1-----------0-
145     : ['leader(proposer1)', '~start(proposer1)']
146     : --------------1-----------0
146     : ['leader(proposer2)', '~start(proposer2)']
num_forall :   1
num_exists :   0
num_literals : 2
quantified form : forall PROPOSER0. start(PROPOSER0) | ~leader(PROPOSER0)
qcost : 3




=== Prime Orbit 10 =====================
size : 3
num_suborbits: 1
156 (*) : ------------1-1------------
156     : ['leader(proposer0)', 'leader(proposer2)']
157     : ------------11-------------
157     : ['leader(proposer0)', 'leader(proposer1)']
158     : -------------11------------
158     : ['leader(proposer1)', 'leader(proposer2)']
num_forall :   2
num_exists :   0
num_literals : 3
quantified form : forall PROPOSER0,PROPOSER1. ~leader(PROPOSER0) | ~leader(PROPOSER1) | PROPOSER0 = PROPOSER1
qcost : 5




=== Prime Orbit 13 =====================
size : 9
num_suborbits: 1
186 (*) : -0-----------1--------0----
186     : ['leader(proposer1)', '~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~promise(acceptor2,proposer1)']
187     : --0-----------1--------0---
187     : ['leader(proposer2)', '~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~promise(acceptor2,proposer2)']
188     : 0-----------1--------0-----
188     : ['leader(proposer0)', '~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~promise(acceptor2,proposer0)']
189     : ----0--------1-----0-------
189     : ['leader(proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~promise(acceptor1,proposer1)']
190     : -----0--------1-----0------
190     : ['leader(proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~promise(acceptor1,proposer2)']
191     : ---0--------1-----0--------
191     : ['leader(proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~promise(acceptor1,proposer0)']
192     : -------0-----1--0----------
192     : ['leader(proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~promise(acceptor0,proposer1)']
193     : --------0-----1--0---------
193     : ['leader(proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~promise(acceptor0,proposer2)']
194     : ------0-----1--0-----------
194     : ['leader(proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~promise(acceptor0,proposer0)']
num_forall :   3
num_exists :   0
num_literals : 4
quantified form : forall ACCEPTOR0,PROPOSER0,QUORUM0. promise(ACCEPTOR0,PROPOSER0) | member(ACCEPTOR0,QUORUM0) | ~leader(PROPOSER0) | chosenAt(QUORUM0,PROPOSER0)
qcost : 7




=== Prime Orbit 14 =====================
size : 9
num_suborbits: 1
195 (*) : ----0-----1--1-------------
195     : ['didNotPromise(acceptor1)', 'leader(proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)']
196     : -----0----1---1------------
196     : ['didNotPromise(acceptor1)', 'leader(proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)']
197     : ---0------1-1--------------
197     : ['didNotPromise(acceptor1)', 'leader(proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)']
198     : -0---------1-1-------------
198     : ['didNotPromise(acceptor2)', 'leader(proposer1)', '~chosenAt(quorum__acceptor0_acceptor1,proposer1)']
199     : --0--------1--1------------
199     : ['didNotPromise(acceptor2)', 'leader(proposer2)', '~chosenAt(quorum__acceptor0_acceptor1,proposer2)']
200     : 0----------11--------------
200     : ['didNotPromise(acceptor2)', 'leader(proposer0)', '~chosenAt(quorum__acceptor0_acceptor1,proposer0)']
201     : -------0-1---1-------------
201     : ['didNotPromise(acceptor0)', 'leader(proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)']
202     : --------01----1------------
202     : ['didNotPromise(acceptor0)', 'leader(proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)']
203     : ------0--1--1--------------
203     : ['didNotPromise(acceptor0)', 'leader(proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)']
num_forall :   3
num_exists :   0
num_literals : 4
quantified form : forall ACCEPTOR0,PROPOSER0,QUORUM0. ~leader(PROPOSER0) | member(ACCEPTOR0,QUORUM0) | ~didNotPromise(ACCEPTOR0) | chosenAt(QUORUM0,PROPOSER0)
qcost : 7




=== Prime Orbit 15 =====================
size : 18
num_suborbits: 1
204 (*) : ----------1--1--------0----
204     : ['didNotPromise(acceptor1)', 'leader(proposer1)', '~promise(acceptor2,proposer1)']
205     : ----------1---1--------0---
205     : ['didNotPromise(acceptor1)', 'leader(proposer2)', '~promise(acceptor2,proposer2)']
206     : ----------1-1--------0-----
206     : ['didNotPromise(acceptor1)', 'leader(proposer0)', '~promise(acceptor2,proposer0)']
207     : -----------1-1-----0-------
207     : ['didNotPromise(acceptor2)', 'leader(proposer1)', '~promise(acceptor1,proposer1)']
208     : -----------1--1-----0------
208     : ['didNotPromise(acceptor2)', 'leader(proposer2)', '~promise(acceptor1,proposer2)']
209     : -----------11-----0--------
209     : ['didNotPromise(acceptor2)', 'leader(proposer0)', '~promise(acceptor1,proposer0)']
210     : ---------1---1--------0----
210     : ['didNotPromise(acceptor0)', 'leader(proposer1)', '~promise(acceptor2,proposer1)']
211     : ---------1----1--------0---
211     : ['didNotPromise(acceptor0)', 'leader(proposer2)', '~promise(acceptor2,proposer2)']
212     : ---------1--1--------0-----
212     : ['didNotPromise(acceptor0)', 'leader(proposer0)', '~promise(acceptor2,proposer0)']
213     : -----------1-1--0----------
213     : ['didNotPromise(acceptor2)', 'leader(proposer1)', '~promise(acceptor0,proposer1)']
214     : -----------1--1--0---------
214     : ['didNotPromise(acceptor2)', 'leader(proposer2)', '~promise(acceptor0,proposer2)']
215     : -----------11--0-----------
215     : ['didNotPromise(acceptor2)', 'leader(proposer0)', '~promise(acceptor0,proposer0)']
216     : ---------1---1-----0-------
216     : ['didNotPromise(acceptor0)', 'leader(proposer1)', '~promise(acceptor1,proposer1)']
217     : ---------1----1-----0------
217     : ['didNotPromise(acceptor0)', 'leader(proposer2)', '~promise(acceptor1,proposer2)']
218     : ---------1--1-----0--------
218     : ['didNotPromise(acceptor0)', 'leader(proposer0)', '~promise(acceptor1,proposer0)']
219     : ----------1--1--0----------
219     : ['didNotPromise(acceptor1)', 'leader(proposer1)', '~promise(acceptor0,proposer1)']
220     : ----------1---1--0---------
220     : ['didNotPromise(acceptor1)', 'leader(proposer2)', '~promise(acceptor0,proposer2)']
221     : ----------1-1--0-----------
221     : ['didNotPromise(acceptor1)', 'leader(proposer0)', '~promise(acceptor0,proposer0)']
num_forall :   3
num_exists :   0
num_literals : 4
quantified form : forall ACCEPTOR1,ACCEPTOR0,PROPOSER0. ~leader(PROPOSER0) | ~didNotPromise(ACCEPTOR0) | promise(ACCEPTOR1,PROPOSER0) | ACCEPTOR0 = ACCEPTOR1
qcost : 7




=== Prime Orbit 16 =====================
size : 36
num_suborbits: 1
222 (*) : ----------1--1---------1---
222     : ['didNotPromise(acceptor1)', 'leader(proposer1)', 'promise(acceptor2,proposer2)']
223     : ----------1---1-------1----
223     : ['didNotPromise(acceptor1)', 'leader(proposer2)', 'promise(acceptor2,proposer1)']
224     : ----------1-1----------1---
224     : ['didNotPromise(acceptor1)', 'leader(proposer0)', 'promise(acceptor2,proposer2)']
225     : ----------1---1------1-----
225     : ['didNotPromise(acceptor1)', 'leader(proposer2)', 'promise(acceptor2,proposer0)']
226     : ----------1-1---------1----
226     : ['didNotPromise(acceptor1)', 'leader(proposer0)', 'promise(acceptor2,proposer1)']
227     : ----------1--1-------1-----
227     : ['didNotPromise(acceptor1)', 'leader(proposer1)', 'promise(acceptor2,proposer0)']
228     : -----------1-1------1------
228     : ['didNotPromise(acceptor2)', 'leader(proposer1)', 'promise(acceptor1,proposer2)']
229     : -----------1--1----1-------
229     : ['didNotPromise(acceptor2)', 'leader(proposer2)', 'promise(acceptor1,proposer1)']
230     : -----------11-------1------
230     : ['didNotPromise(acceptor2)', 'leader(proposer0)', 'promise(acceptor1,proposer2)']
231     : -----------1--1---1--------
231     : ['didNotPromise(acceptor2)', 'leader(proposer2)', 'promise(acceptor1,proposer0)']
232     : -----------11------1-------
232     : ['didNotPromise(acceptor2)', 'leader(proposer0)', 'promise(acceptor1,proposer1)']
233     : -----------1-1----1--------
233     : ['didNotPromise(acceptor2)', 'leader(proposer1)', 'promise(acceptor1,proposer0)']
234     : ---------1---1---------1---
234     : ['didNotPromise(acceptor0)', 'leader(proposer1)', 'promise(acceptor2,proposer2)']
235     : ---------1----1-------1----
235     : ['didNotPromise(acceptor0)', 'leader(proposer2)', 'promise(acceptor2,proposer1)']
236     : ---------1--1----------1---
236     : ['didNotPromise(acceptor0)', 'leader(proposer0)', 'promise(acceptor2,proposer2)']
237     : ---------1----1------1-----
237     : ['didNotPromise(acceptor0)', 'leader(proposer2)', 'promise(acceptor2,proposer0)']
238     : ---------1--1---------1----
238     : ['didNotPromise(acceptor0)', 'leader(proposer0)', 'promise(acceptor2,proposer1)']
239     : ---------1---1-------1-----
239     : ['didNotPromise(acceptor0)', 'leader(proposer1)', 'promise(acceptor2,proposer0)']
240     : -----------1-1---1---------
240     : ['didNotPromise(acceptor2)', 'leader(proposer1)', 'promise(acceptor0,proposer2)']
241     : -----------1--1-1----------
241     : ['didNotPromise(acceptor2)', 'leader(proposer2)', 'promise(acceptor0,proposer1)']
242     : -----------11----1---------
242     : ['didNotPromise(acceptor2)', 'leader(proposer0)', 'promise(acceptor0,proposer2)']
243     : -----------1--11-----------
243     : ['didNotPromise(acceptor2)', 'leader(proposer2)', 'promise(acceptor0,proposer0)']
244     : -----------11---1----------
244     : ['didNotPromise(acceptor2)', 'leader(proposer0)', 'promise(acceptor0,proposer1)']
245     : -----------1-1-1-----------
245     : ['didNotPromise(acceptor2)', 'leader(proposer1)', 'promise(acceptor0,proposer0)']
246     : ---------1---1------1------
246     : ['didNotPromise(acceptor0)', 'leader(proposer1)', 'promise(acceptor1,proposer2)']
247     : ---------1----1----1-------
247     : ['didNotPromise(acceptor0)', 'leader(proposer2)', 'promise(acceptor1,proposer1)']
248     : ---------1--1-------1------
248     : ['didNotPromise(acceptor0)', 'leader(proposer0)', 'promise(acceptor1,proposer2)']
249     : ---------1----1---1--------
249     : ['didNotPromise(acceptor0)', 'leader(proposer2)', 'promise(acceptor1,proposer0)']
250     : ---------1--1------1-------
250     : ['didNotPromise(acceptor0)', 'leader(proposer0)', 'promise(acceptor1,proposer1)']
251     : ---------1---1----1--------
251     : ['didNotPromise(acceptor0)', 'leader(proposer1)', 'promise(acceptor1,proposer0)']
252     : ----------1--1---1---------
252     : ['didNotPromise(acceptor1)', 'leader(proposer1)', 'promise(acceptor0,proposer2)']
253     : ----------1---1-1----------
253     : ['didNotPromise(acceptor1)', 'leader(proposer2)', 'promise(acceptor0,proposer1)']
254     : ----------1-1----1---------
254     : ['didNotPromise(acceptor1)', 'leader(proposer0)', 'promise(acceptor0,proposer2)']
255     : ----------1---11-----------
255     : ['didNotPromise(acceptor1)', 'leader(proposer2)', 'promise(acceptor0,proposer0)']
256     : ----------1-1---1----------
256     : ['didNotPromise(acceptor1)', 'leader(proposer0)', 'promise(acceptor0,proposer1)']
257     : ----------1--1-1-----------
257     : ['didNotPromise(acceptor1)', 'leader(proposer1)', 'promise(acceptor0,proposer0)']
num_forall :   4
num_exists :   0
num_literals : 5
quantified form : forall ACCEPTOR1,ACCEPTOR0,PROPOSER0,PROPOSER1. ~promise(ACCEPTOR1,PROPOSER1) | ~leader(PROPOSER0) | ~didNotPromise(ACCEPTOR0) | (PROPOSER0 = PROPOSER1 | ACCEPTOR0 = ACCEPTOR1)
qcost : 9




=== Prime Orbit 17 =====================
size : 18
num_suborbits: 1
258 (*) : -0-----------1---------1---
258     : ['leader(proposer1)', 'promise(acceptor2,proposer2)', '~chosenAt(quorum__acceptor0_acceptor1,proposer1)']
259     : --0-----------1-------1----
259     : ['leader(proposer2)', 'promise(acceptor2,proposer1)', '~chosenAt(quorum__acceptor0_acceptor1,proposer2)']
260     : 0-----------1----------1---
260     : ['leader(proposer0)', 'promise(acceptor2,proposer2)', '~chosenAt(quorum__acceptor0_acceptor1,proposer0)']
261     : --0-----------1------1-----
261     : ['leader(proposer2)', 'promise(acceptor2,proposer0)', '~chosenAt(quorum__acceptor0_acceptor1,proposer2)']
262     : 0-----------1---------1----
262     : ['leader(proposer0)', 'promise(acceptor2,proposer1)', '~chosenAt(quorum__acceptor0_acceptor1,proposer0)']
263     : -0-----------1-------1-----
263     : ['leader(proposer1)', 'promise(acceptor2,proposer0)', '~chosenAt(quorum__acceptor0_acceptor1,proposer1)']
264     : ----0--------1------1------
264     : ['leader(proposer1)', 'promise(acceptor1,proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)']
265     : -----0--------1----1-------
265     : ['leader(proposer2)', 'promise(acceptor1,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)']
266     : ---0--------1-------1------
266     : ['leader(proposer0)', 'promise(acceptor1,proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)']
267     : -----0--------1---1--------
267     : ['leader(proposer2)', 'promise(acceptor1,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)']
268     : ---0--------1------1-------
268     : ['leader(proposer0)', 'promise(acceptor1,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)']
269     : ----0--------1----1--------
269     : ['leader(proposer1)', 'promise(acceptor1,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)']
270     : -------0-----1---1---------
270     : ['leader(proposer1)', 'promise(acceptor0,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)']
271     : --------0-----1-1----------
271     : ['leader(proposer2)', 'promise(acceptor0,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)']
272     : ------0-----1----1---------
272     : ['leader(proposer0)', 'promise(acceptor0,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)']
273     : --------0-----11-----------
273     : ['leader(proposer2)', 'promise(acceptor0,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)']
274     : ------0-----1---1----------
274     : ['leader(proposer0)', 'promise(acceptor0,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)']
275     : -------0-----1-1-----------
275     : ['leader(proposer1)', 'promise(acceptor0,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)']
num_forall :   4
num_exists :   0
num_literals : 5
quantified form : forall QUORUM0,ACCEPTOR0,PROPOSER0,PROPOSER1. member(ACCEPTOR0,QUORUM0) | ~leader(PROPOSER0) | chosenAt(QUORUM0,PROPOSER0) | ~promise(ACCEPTOR0,PROPOSER1) | PROPOSER0 = PROPOSER1
qcost : 9




=== Prime Orbit 18 =====================
size : 36
num_suborbits: 1
276 (*) : --------------1--0---1-----
276     : ['leader(proposer2)', 'promise(acceptor2,proposer0)', '~promise(acceptor0,proposer2)']
277     : -------------1--0----1-----
277     : ['leader(proposer1)', 'promise(acceptor2,proposer0)', '~promise(acceptor0,proposer1)']
278     : --------------1--0----1----
278     : ['leader(proposer2)', 'promise(acceptor2,proposer1)', '~promise(acceptor0,proposer2)']
279     : ------------1--0------1----
279     : ['leader(proposer0)', 'promise(acceptor2,proposer1)', '~promise(acceptor0,proposer0)']
280     : -------------1--0------1---
280     : ['leader(proposer1)', 'promise(acceptor2,proposer2)', '~promise(acceptor0,proposer1)']
281     : ------------1--0-------1---
281     : ['leader(proposer0)', 'promise(acceptor2,proposer2)', '~promise(acceptor0,proposer0)']
282     : --------------1--01--------
282     : ['leader(proposer2)', 'promise(acceptor1,proposer0)', '~promise(acceptor0,proposer2)']
283     : -------------1--0-1--------
283     : ['leader(proposer1)', 'promise(acceptor1,proposer0)', '~promise(acceptor0,proposer1)']
284     : --------------1--0-1-------
284     : ['leader(proposer2)', 'promise(acceptor1,proposer1)', '~promise(acceptor0,proposer2)']
285     : ------------1--0---1-------
285     : ['leader(proposer0)', 'promise(acceptor1,proposer1)', '~promise(acceptor0,proposer0)']
286     : -------------1--0---1------
286     : ['leader(proposer1)', 'promise(acceptor1,proposer2)', '~promise(acceptor0,proposer1)']
287     : ------------1--0----1------
287     : ['leader(proposer0)', 'promise(acceptor1,proposer2)', '~promise(acceptor0,proposer0)']
288     : --------------1-----01-----
288     : ['leader(proposer2)', 'promise(acceptor2,proposer0)', '~promise(acceptor1,proposer2)']
289     : -------------1-----0-1-----
289     : ['leader(proposer1)', 'promise(acceptor2,proposer0)', '~promise(acceptor1,proposer1)']
290     : --------------1-----0-1----
290     : ['leader(proposer2)', 'promise(acceptor2,proposer1)', '~promise(acceptor1,proposer2)']
291     : ------------1-----0---1----
291     : ['leader(proposer0)', 'promise(acceptor2,proposer1)', '~promise(acceptor1,proposer0)']
292     : -------------1-----0---1---
292     : ['leader(proposer1)', 'promise(acceptor2,proposer2)', '~promise(acceptor1,proposer1)']
293     : ------------1-----0----1---
293     : ['leader(proposer0)', 'promise(acceptor2,proposer2)', '~promise(acceptor1,proposer0)']
294     : --------------11----0------
294     : ['leader(proposer2)', 'promise(acceptor0,proposer0)', '~promise(acceptor1,proposer2)']
295     : -------------1-1---0-------
295     : ['leader(proposer1)', 'promise(acceptor0,proposer0)', '~promise(acceptor1,proposer1)']
296     : --------------1-1---0------
296     : ['leader(proposer2)', 'promise(acceptor0,proposer1)', '~promise(acceptor1,proposer2)']
297     : ------------1---1-0--------
297     : ['leader(proposer0)', 'promise(acceptor0,proposer1)', '~promise(acceptor1,proposer0)']
298     : -------------1---1-0-------
298     : ['leader(proposer1)', 'promise(acceptor0,proposer2)', '~promise(acceptor1,proposer1)']
299     : ------------1----10--------
299     : ['leader(proposer0)', 'promise(acceptor0,proposer2)', '~promise(acceptor1,proposer0)']
300     : --------------1---1----0---
300     : ['leader(proposer2)', 'promise(acceptor1,proposer0)', '~promise(acceptor2,proposer2)']
301     : -------------1----1---0----
301     : ['leader(proposer1)', 'promise(acceptor1,proposer0)', '~promise(acceptor2,proposer1)']
302     : --------------1----1---0---
302     : ['leader(proposer2)', 'promise(acceptor1,proposer1)', '~promise(acceptor2,proposer2)']
303     : ------------1------1-0-----
303     : ['leader(proposer0)', 'promise(acceptor1,proposer1)', '~promise(acceptor2,proposer0)']
304     : -------------1------1-0----
304     : ['leader(proposer1)', 'promise(acceptor1,proposer2)', '~promise(acceptor2,proposer1)']
305     : ------------1-------10-----
305     : ['leader(proposer0)', 'promise(acceptor1,proposer2)', '~promise(acceptor2,proposer0)']
306     : --------------11-------0---
306     : ['leader(proposer2)', 'promise(acceptor0,proposer0)', '~promise(acceptor2,proposer2)']
307     : -------------1-1------0----
307     : ['leader(proposer1)', 'promise(acceptor0,proposer0)', '~promise(acceptor2,proposer1)']
308     : --------------1-1------0---
308     : ['leader(proposer2)', 'promise(acceptor0,proposer1)', '~promise(acceptor2,proposer2)']
309     : ------------1---1----0-----
309     : ['leader(proposer0)', 'promise(acceptor0,proposer1)', '~promise(acceptor2,proposer0)']
310     : -------------1---1----0----
310     : ['leader(proposer1)', 'promise(acceptor0,proposer2)', '~promise(acceptor2,proposer1)']
311     : ------------1----1---0-----
311     : ['leader(proposer0)', 'promise(acceptor0,proposer2)', '~promise(acceptor2,proposer0)']
num_forall :   4
num_exists :   0
num_literals : 5
quantified form : forall ACCEPTOR1,ACCEPTOR0,PROPOSER0,PROPOSER1. ~promise(ACCEPTOR0,PROPOSER1) | ~leader(PROPOSER0) | promise(ACCEPTOR1,PROPOSER0) | (PROPOSER0 = PROPOSER1 | ACCEPTOR0 = ACCEPTOR1)
qcost : 9




=== Prime Orbit 19 =====================
size : 36
num_suborbits: 2
312 (*) : --------------1---1--1-----
312     : ['leader(proposer2)', 'promise(acceptor1,proposer0)', 'promise(acceptor2,proposer0)']
313     : -------------1----1--1-----
313     : ['leader(proposer1)', 'promise(acceptor1,proposer0)', 'promise(acceptor2,proposer0)']
314     : --------------1----1--1----
314     : ['leader(proposer2)', 'promise(acceptor1,proposer1)', 'promise(acceptor2,proposer1)']
315     : ------------1------1--1----
315     : ['leader(proposer0)', 'promise(acceptor1,proposer1)', 'promise(acceptor2,proposer1)']
316     : -------------1------1--1---
316     : ['leader(proposer1)', 'promise(acceptor1,proposer2)', 'promise(acceptor2,proposer2)']
317     : ------------1-------1--1---
317     : ['leader(proposer0)', 'promise(acceptor1,proposer2)', 'promise(acceptor2,proposer2)']
318     : --------------11-----1-----
318     : ['leader(proposer2)', 'promise(acceptor0,proposer0)', 'promise(acceptor2,proposer0)']
319     : -------------1-1-----1-----
319     : ['leader(proposer1)', 'promise(acceptor0,proposer0)', 'promise(acceptor2,proposer0)']
320     : --------------1-1-----1----
320     : ['leader(proposer2)', 'promise(acceptor0,proposer1)', 'promise(acceptor2,proposer1)']
321     : ------------1---1-----1----
321     : ['leader(proposer0)', 'promise(acceptor0,proposer1)', 'promise(acceptor2,proposer1)']
322     : -------------1---1-----1---
322     : ['leader(proposer1)', 'promise(acceptor0,proposer2)', 'promise(acceptor2,proposer2)']
323     : ------------1----1-----1---
323     : ['leader(proposer0)', 'promise(acceptor0,proposer2)', 'promise(acceptor2,proposer2)']
324     : --------------11--1--------
324     : ['leader(proposer2)', 'promise(acceptor0,proposer0)', 'promise(acceptor1,proposer0)']
325     : -------------1-1--1--------
325     : ['leader(proposer1)', 'promise(acceptor0,proposer0)', 'promise(acceptor1,proposer0)']
326     : --------------1-1--1-------
326     : ['leader(proposer2)', 'promise(acceptor0,proposer1)', 'promise(acceptor1,proposer1)']
327     : ------------1---1--1-------
327     : ['leader(proposer0)', 'promise(acceptor0,proposer1)', 'promise(acceptor1,proposer1)']
328     : -------------1---1--1------
328     : ['leader(proposer1)', 'promise(acceptor0,proposer2)', 'promise(acceptor1,proposer2)']
329     : ------------1----1--1------
329     : ['leader(proposer0)', 'promise(acceptor0,proposer2)', 'promise(acceptor1,proposer2)']
330 (*) : --------------1----1-1-----
330     : ['leader(proposer2)', 'promise(acceptor1,proposer1)', 'promise(acceptor2,proposer0)']
331     : -------------1------11-----
331     : ['leader(proposer1)', 'promise(acceptor1,proposer2)', 'promise(acceptor2,proposer0)']
332     : --------------1---1---1----
332     : ['leader(proposer2)', 'promise(acceptor1,proposer0)', 'promise(acceptor2,proposer1)']
333     : ------------1-------1-1----
333     : ['leader(proposer0)', 'promise(acceptor1,proposer2)', 'promise(acceptor2,proposer1)']
334     : -------------1----1----1---
334     : ['leader(proposer1)', 'promise(acceptor1,proposer0)', 'promise(acceptor2,proposer2)']
335     : ------------1------1---1---
335     : ['leader(proposer0)', 'promise(acceptor1,proposer1)', 'promise(acceptor2,proposer2)']
336     : --------------1-1----1-----
336     : ['leader(proposer2)', 'promise(acceptor0,proposer1)', 'promise(acceptor2,proposer0)']
337     : -------------1---1---1-----
337     : ['leader(proposer1)', 'promise(acceptor0,proposer2)', 'promise(acceptor2,proposer0)']
338     : --------------11------1----
338     : ['leader(proposer2)', 'promise(acceptor0,proposer0)', 'promise(acceptor2,proposer1)']
339     : ------------1----1----1----
339     : ['leader(proposer0)', 'promise(acceptor0,proposer2)', 'promise(acceptor2,proposer1)']
340     : -------------1-1-------1---
340     : ['leader(proposer1)', 'promise(acceptor0,proposer0)', 'promise(acceptor2,proposer2)']
341     : ------------1---1------1---
341     : ['leader(proposer0)', 'promise(acceptor0,proposer1)', 'promise(acceptor2,proposer2)']
342     : --------------1-1-1--------
342     : ['leader(proposer2)', 'promise(acceptor0,proposer1)', 'promise(acceptor1,proposer0)']
343     : -------------1---11--------
343     : ['leader(proposer1)', 'promise(acceptor0,proposer2)', 'promise(acceptor1,proposer0)']
344     : --------------11---1-------
344     : ['leader(proposer2)', 'promise(acceptor0,proposer0)', 'promise(acceptor1,proposer1)']
345     : ------------1----1-1-------
345     : ['leader(proposer0)', 'promise(acceptor0,proposer2)', 'promise(acceptor1,proposer1)']
346     : -------------1-1----1------
346     : ['leader(proposer1)', 'promise(acceptor0,proposer0)', 'promise(acceptor1,proposer2)']
347     : ------------1---1---1------
347     : ['leader(proposer0)', 'promise(acceptor0,proposer1)', 'promise(acceptor1,proposer2)']
num_forall :   5
num_exists :   0
num_literals : 10
quantified form : forall PROPOSER2,PROPOSER1,ACCEPTOR1,ACCEPTOR0,PROPOSER0. ~promise(ACCEPTOR1,PROPOSER2) | ~leader(PROPOSER0) | ~promise(ACCEPTOR0,PROPOSER1) | ((ACCEPTOR0 = ACCEPTOR1 | PROPOSER1 ~= PROPOSER2 | PROPOSER0 = PROPOSER1) & (ACCEPTOR0 = ACCEPTOR1 | PROPOSER1 = PROPOSER2 | PROPOSER0 = PROPOSER1 | PROPOSER0 = PROPOSER2))
qcost : 15




=== Prime Orbit 21 =====================
size : 9
num_suborbits: 1
357 (*) : ------------1--0--0--------
357     : ['leader(proposer0)', '~promise(acceptor0,proposer0)', '~promise(acceptor1,proposer0)']
358     : -------------1--0--0-------
358     : ['leader(proposer1)', '~promise(acceptor0,proposer1)', '~promise(acceptor1,proposer1)']
359     : --------------1--0--0------
359     : ['leader(proposer2)', '~promise(acceptor0,proposer2)', '~promise(acceptor1,proposer2)']
360     : ------------1--0-----0-----
360     : ['leader(proposer0)', '~promise(acceptor0,proposer0)', '~promise(acceptor2,proposer0)']
361     : -------------1--0-----0----
361     : ['leader(proposer1)', '~promise(acceptor0,proposer1)', '~promise(acceptor2,proposer1)']
362     : --------------1--0-----0---
362     : ['leader(proposer2)', '~promise(acceptor0,proposer2)', '~promise(acceptor2,proposer2)']
363     : ------------1-----0--0-----
363     : ['leader(proposer0)', '~promise(acceptor1,proposer0)', '~promise(acceptor2,proposer0)']
364     : -------------1-----0--0----
364     : ['leader(proposer1)', '~promise(acceptor1,proposer1)', '~promise(acceptor2,proposer1)']
365     : --------------1-----0--0---
365     : ['leader(proposer2)', '~promise(acceptor1,proposer2)', '~promise(acceptor2,proposer2)']
num_forall :   3
num_exists :   0
num_literals : 4
quantified form : forall ACCEPTOR1,ACCEPTOR0,PROPOSER0. ~leader(PROPOSER0) | promise(ACCEPTOR0,PROPOSER0) | promise(ACCEPTOR1,PROPOSER0) | ACCEPTOR0 = ACCEPTOR1
qcost : 7




=== Prime Orbit 22 =====================
size : 9
num_suborbits: 1
366 (*) : ---------11--1-------------
366     : ['didNotPromise(acceptor0)', 'didNotPromise(acceptor1)', 'leader(proposer1)']
367     : ---------11---1------------
367     : ['didNotPromise(acceptor0)', 'didNotPromise(acceptor1)', 'leader(proposer2)']
368     : ---------11-1--------------
368     : ['didNotPromise(acceptor0)', 'didNotPromise(acceptor1)', 'leader(proposer0)']
369     : ---------1-1-1-------------
369     : ['didNotPromise(acceptor0)', 'didNotPromise(acceptor2)', 'leader(proposer1)']
370     : ---------1-1--1------------
370     : ['didNotPromise(acceptor0)', 'didNotPromise(acceptor2)', 'leader(proposer2)']
371     : ---------1-11--------------
371     : ['didNotPromise(acceptor0)', 'didNotPromise(acceptor2)', 'leader(proposer0)']
372     : ----------11-1-------------
372     : ['didNotPromise(acceptor1)', 'didNotPromise(acceptor2)', 'leader(proposer1)']
373     : ----------11--1------------
373     : ['didNotPromise(acceptor1)', 'didNotPromise(acceptor2)', 'leader(proposer2)']
374     : ----------111--------------
374     : ['didNotPromise(acceptor1)', 'didNotPromise(acceptor2)', 'leader(proposer0)']
num_forall :   3
num_exists :   0
num_literals : 4
quantified form : forall ACCEPTOR1,ACCEPTOR0,PROPOSER0. ~leader(PROPOSER0) | ~didNotPromise(ACCEPTOR1) | ~didNotPromise(ACCEPTOR0) | ACCEPTOR0 = ACCEPTOR1
qcost : 7




=== Prime Orbit 23 =====================
size : 9
num_suborbits: 1
375 (*) : ---------0------00------0--
375     : ['~didNotPromise(acceptor0)', '~promise(acceptor0,proposer1)', '~promise(acceptor0,proposer2)', '~start(proposer0)']
376     : ---------0-----0-0-------0-
376     : ['~didNotPromise(acceptor0)', '~promise(acceptor0,proposer0)', '~promise(acceptor0,proposer2)', '~start(proposer1)']
377     : ---------0-----00---------0
377     : ['~didNotPromise(acceptor0)', '~promise(acceptor0,proposer0)', '~promise(acceptor0,proposer1)', '~start(proposer2)']
378     : ----------0--------00---0--
378     : ['~didNotPromise(acceptor1)', '~promise(acceptor1,proposer1)', '~promise(acceptor1,proposer2)', '~start(proposer0)']
379     : ----------0-------0-0----0-
379     : ['~didNotPromise(acceptor1)', '~promise(acceptor1,proposer0)', '~promise(acceptor1,proposer2)', '~start(proposer1)']
380     : ----------0-------00------0
380     : ['~didNotPromise(acceptor1)', '~promise(acceptor1,proposer0)', '~promise(acceptor1,proposer1)', '~start(proposer2)']
381     : -----------0----------000--
381     : ['~didNotPromise(acceptor2)', '~promise(acceptor2,proposer1)', '~promise(acceptor2,proposer2)', '~start(proposer0)']
382     : -----------0---------0-0-0-
382     : ['~didNotPromise(acceptor2)', '~promise(acceptor2,proposer0)', '~promise(acceptor2,proposer2)', '~start(proposer1)']
383     : -----------0---------00---0
383     : ['~didNotPromise(acceptor2)', '~promise(acceptor2,proposer0)', '~promise(acceptor2,proposer1)', '~start(proposer2)']
num_forall :   2
num_exists :   1
num_literals : 4
quantified form : forall ACCEPTOR0,PROPOSER1. start(PROPOSER1) | didNotPromise(ACCEPTOR0) | (exists PROPOSER0. (promise(ACCEPTOR0,PROPOSER0) & PROPOSER0 ~= PROPOSER1))
qcost : 7




=== Prime Orbit 24 =====================
size : 9
num_suborbits: 1
384 (*) : ----------0--------0----0-0
384     : ['~didNotPromise(acceptor1)', '~promise(acceptor1,proposer1)', '~start(proposer0)', '~start(proposer2)']
385     : ----------0---------0---00-
385     : ['~didNotPromise(acceptor1)', '~promise(acceptor1,proposer2)', '~start(proposer0)', '~start(proposer1)']
386     : ----------0-------0------00
386     : ['~didNotPromise(acceptor1)', '~promise(acceptor1,proposer0)', '~start(proposer1)', '~start(proposer2)']
387     : -----------0----------0-0-0
387     : ['~didNotPromise(acceptor2)', '~promise(acceptor2,proposer1)', '~start(proposer0)', '~start(proposer2)']
388     : -----------0-----------000-
388     : ['~didNotPromise(acceptor2)', '~promise(acceptor2,proposer2)', '~start(proposer0)', '~start(proposer1)']
389     : -----------0---------0---00
389     : ['~didNotPromise(acceptor2)', '~promise(acceptor2,proposer0)', '~start(proposer1)', '~start(proposer2)']
390     : ---------0------0-------0-0
390     : ['~didNotPromise(acceptor0)', '~promise(acceptor0,proposer1)', '~start(proposer0)', '~start(proposer2)']
391     : ---------0-------0------00-
391     : ['~didNotPromise(acceptor0)', '~promise(acceptor0,proposer2)', '~start(proposer0)', '~start(proposer1)']
392     : ---------0-----0---------00
392     : ['~didNotPromise(acceptor0)', '~promise(acceptor0,proposer0)', '~start(proposer1)', '~start(proposer2)']
num_forall :   2
num_exists :   1
num_literals : 4
quantified form : forall ACCEPTOR0,PROPOSER1. promise(ACCEPTOR0,PROPOSER1) | didNotPromise(ACCEPTOR0) | (exists PROPOSER0. (start(PROPOSER0) & PROPOSER0 ~= PROPOSER1))
qcost : 7




=== Prime Orbit 26 =====================
size : 3
num_suborbits: 1
396 (*) : ----------0-------------000
396     : ['~didNotPromise(acceptor1)', '~start(proposer0)', '~start(proposer1)', '~start(proposer2)']
397     : -----------0------------000
397     : ['~didNotPromise(acceptor2)', '~start(proposer0)', '~start(proposer1)', '~start(proposer2)']
398     : ---------0--------------000
398     : ['~didNotPromise(acceptor0)', '~start(proposer0)', '~start(proposer1)', '~start(proposer2)']
num_forall :   1
num_exists :   1
num_literals : 2
quantified form : forall ACCEPTOR0. (exists PROPOSER0. start(PROPOSER0) | didNotPromise(ACCEPTOR0))
qcost : 4




=== Prime Orbit 27 =====================
size : 9
num_suborbits: 1
399 (*) : --0-----0-----1-----1------
399     : ['leader(proposer2)', 'promise(acceptor1,proposer2)', '~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)']
400     : -0-----0-----1-----1-------
400     : ['leader(proposer1)', 'promise(acceptor1,proposer1)', '~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)']
401     : 0-----0-----1-----1--------
401     : ['leader(proposer0)', 'promise(acceptor1,proposer0)', '~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)']
402     : -----0--0-----1--------1---
402     : ['leader(proposer2)', 'promise(acceptor2,proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)']
403     : ----0--0-----1--------1----
403     : ['leader(proposer1)', 'promise(acceptor2,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)']
404     : ---0--0-----1--------1-----
404     : ['leader(proposer0)', 'promise(acceptor2,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)']
405     : --0--0--------1--1---------
405     : ['leader(proposer2)', 'promise(acceptor0,proposer2)', '~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)']
406     : -0--0--------1--1----------
406     : ['leader(proposer1)', 'promise(acceptor0,proposer1)', '~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)']
407     : 0--0--------1--1-----------
407     : ['leader(proposer0)', 'promise(acceptor0,proposer0)', '~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)']
num_forall :   4
num_exists :   0
num_literals : 7
quantified form : forall QUORUM1,ACCEPTOR0,PROPOSER0,QUORUM0. chosenAt(QUORUM1,PROPOSER0) | ~member(ACCEPTOR0,QUORUM0) | ~leader(PROPOSER0) | chosenAt(QUORUM0,PROPOSER0) | ~promise(ACCEPTOR0,PROPOSER0) | ~member(ACCEPTOR0,QUORUM1) | QUORUM0 = QUORUM1
qcost : 11




=== Prime Orbit 28 =====================
size : 3
num_suborbits: 1
408 (*) : --0--0--0-----1------------
408     : ['leader(proposer2)', '~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)']
409     : -0--0--0-----1-------------
409     : ['leader(proposer1)', '~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)']
410     : 0--0--0-----1--------------
410     : ['leader(proposer0)', '~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)']
num_forall :   1
num_exists :   1
num_literals : 2
quantified form : forall PROPOSER0. (exists QUORUM0. ~leader(PROPOSER0) | chosenAt(QUORUM0,PROPOSER0))
qcost : 4




=== Prime Orbit 29 =====================
size : 36
num_suborbits: 1
411 (*) : --0-------0------1-0----0--
411     : ['promise(acceptor0,proposer2)', '~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~didNotPromise(acceptor1)', '~promise(acceptor1,proposer1)', '~start(proposer0)']
412     : -0--------0-----1---0---0--
412     : ['promise(acceptor0,proposer1)', '~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~didNotPromise(acceptor1)', '~promise(acceptor1,proposer2)', '~start(proposer0)']
413     : --0-------0------10------0-
413     : ['promise(acceptor0,proposer2)', '~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~didNotPromise(acceptor1)', '~promise(acceptor1,proposer0)', '~start(proposer1)']
414     : 0---------0----1----0----0-
414     : ['promise(acceptor0,proposer0)', '~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~didNotPromise(acceptor1)', '~promise(acceptor1,proposer2)', '~start(proposer1)']
415     : -0--------0-----1-0-------0
415     : ['promise(acceptor0,proposer1)', '~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~didNotPromise(acceptor1)', '~promise(acceptor1,proposer0)', '~start(proposer2)']
416     : 0---------0----1---0------0
416     : ['promise(acceptor0,proposer0)', '~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~didNotPromise(acceptor1)', '~promise(acceptor1,proposer1)', '~start(proposer2)']
417     : -----0-----0-----1----0-0--
417     : ['promise(acceptor0,proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~didNotPromise(acceptor2)', '~promise(acceptor2,proposer1)', '~start(proposer0)']
418     : ----0------0----1------00--
418     : ['promise(acceptor0,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~didNotPromise(acceptor2)', '~promise(acceptor2,proposer2)', '~start(proposer0)']
419     : -----0-----0-----1---0---0-
419     : ['promise(acceptor0,proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~didNotPromise(acceptor2)', '~promise(acceptor2,proposer0)', '~start(proposer1)']
420     : ---0-------0---1-------0-0-
420     : ['promise(acceptor0,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~didNotPromise(acceptor2)', '~promise(acceptor2,proposer2)', '~start(proposer1)']
421     : ----0------0----1----0----0
421     : ['promise(acceptor0,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~didNotPromise(acceptor2)', '~promise(acceptor2,proposer0)', '~start(proposer2)']
422     : ---0-------0---1------0---0
422     : ['promise(acceptor0,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~didNotPromise(acceptor2)', '~promise(acceptor2,proposer1)', '~start(proposer2)']
423     : --0------0------0---1---0--
423     : ['promise(acceptor1,proposer2)', '~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~didNotPromise(acceptor0)', '~promise(acceptor0,proposer1)', '~start(proposer0)']
424     : -0-------0-------0-1----0--
424     : ['promise(acceptor1,proposer1)', '~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~didNotPromise(acceptor0)', '~promise(acceptor0,proposer2)', '~start(proposer0)']
425     : --0------0-----0----1----0-
425     : ['promise(acceptor1,proposer2)', '~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~didNotPromise(acceptor0)', '~promise(acceptor0,proposer0)', '~start(proposer1)']
426     : 0--------0-------01------0-
426     : ['promise(acceptor1,proposer0)', '~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~didNotPromise(acceptor0)', '~promise(acceptor0,proposer2)', '~start(proposer1)']
427     : -0-------0-----0---1------0
427     : ['promise(acceptor1,proposer1)', '~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~didNotPromise(acceptor0)', '~promise(acceptor0,proposer0)', '~start(proposer2)']
428     : 0--------0------0-1-------0
428     : ['promise(acceptor1,proposer0)', '~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~didNotPromise(acceptor0)', '~promise(acceptor0,proposer1)', '~start(proposer2)']
429     : --------0--0--------1-0-0--
429     : ['promise(acceptor1,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor2)', '~promise(acceptor2,proposer1)', '~start(proposer0)']
430     : -------0---0-------1---00--
430     : ['promise(acceptor1,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor2)', '~promise(acceptor2,proposer2)', '~start(proposer0)']
431     : --------0--0--------10---0-
431     : ['promise(acceptor1,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor2)', '~promise(acceptor2,proposer0)', '~start(proposer1)']
432     : ------0----0------1----0-0-
432     : ['promise(acceptor1,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor2)', '~promise(acceptor2,proposer2)', '~start(proposer1)']
433     : -------0---0-------1-0----0
433     : ['promise(acceptor1,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor2)', '~promise(acceptor2,proposer0)', '~start(proposer2)']
434     : ------0----0------1---0---0
434     : ['promise(acceptor1,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor2)', '~promise(acceptor2,proposer1)', '~start(proposer2)']
435     : -----0---0------0------10--
435     : ['promise(acceptor2,proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~didNotPromise(acceptor0)', '~promise(acceptor0,proposer1)', '~start(proposer0)']
436     : ----0----0-------0----1-0--
436     : ['promise(acceptor2,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~didNotPromise(acceptor0)', '~promise(acceptor0,proposer2)', '~start(proposer0)']
437     : -----0---0-----0-------1-0-
437     : ['promise(acceptor2,proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~didNotPromise(acceptor0)', '~promise(acceptor0,proposer0)', '~start(proposer1)']
438     : ---0-----0-------0---1---0-
438     : ['promise(acceptor2,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~didNotPromise(acceptor0)', '~promise(acceptor0,proposer2)', '~start(proposer1)']
439     : ----0----0-----0------1---0
439     : ['promise(acceptor2,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~didNotPromise(acceptor0)', '~promise(acceptor0,proposer0)', '~start(proposer2)']
440     : ---0-----0------0----1----0
440     : ['promise(acceptor2,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~didNotPromise(acceptor0)', '~promise(acceptor0,proposer1)', '~start(proposer2)']
441     : --------0-0--------0---10--
441     : ['promise(acceptor2,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor1)', '~promise(acceptor1,proposer1)', '~start(proposer0)']
442     : -------0--0---------0-1-0--
442     : ['promise(acceptor2,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor1)', '~promise(acceptor1,proposer2)', '~start(proposer0)']
443     : --------0-0-------0----1-0-
443     : ['promise(acceptor2,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor1)', '~promise(acceptor1,proposer0)', '~start(proposer1)']
444     : ------0---0---------01---0-
444     : ['promise(acceptor2,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor1)', '~promise(acceptor1,proposer2)', '~start(proposer1)']
445     : -------0--0-------0---1---0
445     : ['promise(acceptor2,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor1)', '~promise(acceptor1,proposer0)', '~start(proposer2)']
446     : ------0---0--------0-1----0
446     : ['promise(acceptor2,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor1)', '~promise(acceptor1,proposer1)', '~start(proposer2)']
num_forall :   6
num_exists :   0
num_literals : 11
quantified form : forall QUORUM0,PROPOSER2,PROPOSER1,ACCEPTOR1,ACCEPTOR0,PROPOSER0. promise(ACCEPTOR1,PROPOSER1) | start(PROPOSER2) | ~member(ACCEPTOR0,QUORUM0) | ~member(ACCEPTOR1,QUORUM0) | didNotPromise(ACCEPTOR1) | chosenAt(QUORUM0,PROPOSER0) | ~promise(ACCEPTOR0,PROPOSER0) | (PROPOSER1 = PROPOSER2 | PROPOSER0 = PROPOSER1 | PROPOSER0 = PROPOSER2 | ACCEPTOR0 = ACCEPTOR1)
qcost : 17




=== Prime Orbit 30 =====================
size : 18
num_suborbits: 1
447 (*) : -----0-----0-----1------00-
447     : ['promise(acceptor0,proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~didNotPromise(acceptor2)', '~start(proposer0)', '~start(proposer1)']
448     : ----0------0----1-------0-0
448     : ['promise(acceptor0,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~didNotPromise(acceptor2)', '~start(proposer0)', '~start(proposer2)']
449     : ---0-------0---1---------00
449     : ['promise(acceptor0,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~didNotPromise(acceptor2)', '~start(proposer1)', '~start(proposer2)']
450     : --0-------0------1------00-
450     : ['promise(acceptor0,proposer2)', '~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~didNotPromise(acceptor1)', '~start(proposer0)', '~start(proposer1)']
451     : -0--------0-----1-------0-0
451     : ['promise(acceptor0,proposer1)', '~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~didNotPromise(acceptor1)', '~start(proposer0)', '~start(proposer2)']
452     : 0---------0----1---------00
452     : ['promise(acceptor0,proposer0)', '~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~didNotPromise(acceptor1)', '~start(proposer1)', '~start(proposer2)']
453     : --------0--0--------1---00-
453     : ['promise(acceptor1,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor2)', '~start(proposer0)', '~start(proposer1)']
454     : -------0---0-------1----0-0
454     : ['promise(acceptor1,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor2)', '~start(proposer0)', '~start(proposer2)']
455     : ------0----0------1------00
455     : ['promise(acceptor1,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor2)', '~start(proposer1)', '~start(proposer2)']
456     : --0------0----------1---00-
456     : ['promise(acceptor1,proposer2)', '~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~didNotPromise(acceptor0)', '~start(proposer0)', '~start(proposer1)']
457     : -0-------0---------1----0-0
457     : ['promise(acceptor1,proposer1)', '~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~didNotPromise(acceptor0)', '~start(proposer0)', '~start(proposer2)']
458     : 0--------0--------1------00
458     : ['promise(acceptor1,proposer0)', '~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~didNotPromise(acceptor0)', '~start(proposer1)', '~start(proposer2)']
459     : --------0-0------------100-
459     : ['promise(acceptor2,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor1)', '~start(proposer0)', '~start(proposer1)']
460     : -------0--0-----------1-0-0
460     : ['promise(acceptor2,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor1)', '~start(proposer0)', '~start(proposer2)']
461     : ------0---0----------1---00
461     : ['promise(acceptor2,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor1)', '~start(proposer1)', '~start(proposer2)']
462     : -----0---0-------------100-
462     : ['promise(acceptor2,proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~didNotPromise(acceptor0)', '~start(proposer0)', '~start(proposer1)']
463     : ----0----0------------1-0-0
463     : ['promise(acceptor2,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~didNotPromise(acceptor0)', '~start(proposer0)', '~start(proposer2)']
464     : ---0-----0-----------1---00
464     : ['promise(acceptor2,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~didNotPromise(acceptor0)', '~start(proposer1)', '~start(proposer2)']
num_forall :   4
num_exists :   1
num_literals : 8
quantified form : forall ACCEPTOR1,QUORUM0,ACCEPTOR0,PROPOSER1. ~promise(ACCEPTOR0,PROPOSER1) | ~member(ACCEPTOR0,QUORUM0) | ~member(ACCEPTOR1,QUORUM0) | didNotPromise(ACCEPTOR1) | chosenAt(QUORUM0,PROPOSER1) | (exists PROPOSER0. (start(PROPOSER0) & PROPOSER0 ~= PROPOSER1)) | ACCEPTOR0 = ACCEPTOR1
qcost : 13




=== Prime Orbit 31 =====================
size : 36
num_suborbits: 1
465 (*) : -0--1-----0---------0---0--
465     : ['chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~didNotPromise(acceptor1)', '~promise(acceptor1,proposer2)', '~start(proposer0)']
466     : --0--1----0--------0----0--
466     : ['chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~didNotPromise(acceptor1)', '~promise(acceptor1,proposer1)', '~start(proposer0)']
467     : 0--1------0---------0----0-
467     : ['chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~didNotPromise(acceptor1)', '~promise(acceptor1,proposer2)', '~start(proposer1)']
468     : --0--1----0-------0------0-
468     : ['chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~didNotPromise(acceptor1)', '~promise(acceptor1,proposer0)', '~start(proposer1)']
469     : 0--1------0--------0------0
469     : ['chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~didNotPromise(acceptor1)', '~promise(acceptor1,proposer1)', '~start(proposer2)']
470     : -0--1-----0-------0-------0
470     : ['chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~didNotPromise(acceptor1)', '~promise(acceptor1,proposer0)', '~start(proposer2)']
471     : -1--0------0-----------00--
471     : ['chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~didNotPromise(acceptor2)', '~promise(acceptor2,proposer2)', '~start(proposer0)']
472     : --1--0-----0----------0-0--
472     : ['chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~didNotPromise(acceptor2)', '~promise(acceptor2,proposer1)', '~start(proposer0)']
473     : 1--0-------0-----------0-0-
473     : ['chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~didNotPromise(acceptor2)', '~promise(acceptor2,proposer2)', '~start(proposer1)']
474     : --1--0-----0---------0---0-
474     : ['chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~didNotPromise(acceptor2)', '~promise(acceptor2,proposer0)', '~start(proposer1)']
475     : 1--0-------0----------0---0
475     : ['chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~didNotPromise(acceptor2)', '~promise(acceptor2,proposer1)', '~start(proposer2)']
476     : -1--0------0---------0----0
476     : ['chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~didNotPromise(acceptor2)', '~promise(acceptor2,proposer0)', '~start(proposer2)']
477     : -0-----1-0-------0------0--
477     : ['chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~didNotPromise(acceptor0)', '~promise(acceptor0,proposer2)', '~start(proposer0)']
478     : --0-----10------0-------0--
478     : ['chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~didNotPromise(acceptor0)', '~promise(acceptor0,proposer1)', '~start(proposer0)']
479     : 0-----1--0-------0-------0-
479     : ['chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~didNotPromise(acceptor0)', '~promise(acceptor0,proposer2)', '~start(proposer1)']
480     : --0-----10-----0---------0-
480     : ['chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~didNotPromise(acceptor0)', '~promise(acceptor0,proposer0)', '~start(proposer1)']
481     : 0-----1--0------0---------0
481     : ['chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~didNotPromise(acceptor0)', '~promise(acceptor0,proposer1)', '~start(proposer2)']
482     : -0-----1-0-----0----------0
482     : ['chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~didNotPromise(acceptor0)', '~promise(acceptor0,proposer0)', '~start(proposer2)']
483     : -1-----0---0-----------00--
483     : ['chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor2)', '~promise(acceptor2,proposer2)', '~start(proposer0)']
484     : --1-----0--0----------0-0--
484     : ['chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor2)', '~promise(acceptor2,proposer1)', '~start(proposer0)']
485     : 1-----0----0-----------0-0-
485     : ['chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor2)', '~promise(acceptor2,proposer2)', '~start(proposer1)']
486     : --1-----0--0---------0---0-
486     : ['chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor2)', '~promise(acceptor2,proposer0)', '~start(proposer1)']
487     : 1-----0----0----------0---0
487     : ['chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor2)', '~promise(acceptor2,proposer1)', '~start(proposer2)']
488     : -1-----0---0---------0----0
488     : ['chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor2)', '~promise(acceptor2,proposer0)', '~start(proposer2)']
489     : ----0--1-0-------0------0--
489     : ['chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~didNotPromise(acceptor0)', '~promise(acceptor0,proposer2)', '~start(proposer0)']
490     : -----0--10------0-------0--
490     : ['chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~didNotPromise(acceptor0)', '~promise(acceptor0,proposer1)', '~start(proposer0)']
491     : ---0--1--0-------0-------0-
491     : ['chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~didNotPromise(acceptor0)', '~promise(acceptor0,proposer2)', '~start(proposer1)']
492     : -----0--10-----0---------0-
492     : ['chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~didNotPromise(acceptor0)', '~promise(acceptor0,proposer0)', '~start(proposer1)']
493     : ---0--1--0------0---------0
493     : ['chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~didNotPromise(acceptor0)', '~promise(acceptor0,proposer1)', '~start(proposer2)']
494     : ----0--1-0-----0----------0
494     : ['chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~didNotPromise(acceptor0)', '~promise(acceptor0,proposer0)', '~start(proposer2)']
495     : ----1--0--0---------0---0--
495     : ['chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor1)', '~promise(acceptor1,proposer2)', '~start(proposer0)']
496     : -----1--0-0--------0----0--
496     : ['chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor1)', '~promise(acceptor1,proposer1)', '~start(proposer0)']
497     : ---1--0---0---------0----0-
497     : ['chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor1)', '~promise(acceptor1,proposer2)', '~start(proposer1)']
498     : -----1--0-0-------0------0-
498     : ['chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor1)', '~promise(acceptor1,proposer0)', '~start(proposer1)']
499     : ---1--0---0--------0------0
499     : ['chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor1)', '~promise(acceptor1,proposer1)', '~start(proposer2)']
500     : ----1--0--0-------0-------0
500     : ['chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor1)', '~promise(acceptor1,proposer0)', '~start(proposer2)']
num_forall :   6
num_exists :   0
num_literals : 11
quantified form : forall QUORUM0,PROPOSER2,PROPOSER1,ACCEPTOR0,PROPOSER0,QUORUM1. chosenAt(QUORUM1,PROPOSER0) | didNotPromise(ACCEPTOR0) | ~chosenAt(QUORUM0,PROPOSER0) | promise(ACCEPTOR0,PROPOSER1) | start(PROPOSER2) | member(ACCEPTOR0,QUORUM0) | ~member(ACCEPTOR0,QUORUM1) | (QUORUM0 = QUORUM1 | PROPOSER1 = PROPOSER2 | PROPOSER0 = PROPOSER1 | PROPOSER0 = PROPOSER2)
qcost : 17




=== Prime Orbit 32 =====================
size : 9
num_suborbits: 1
501 (*) : --------0-00------------00-
501     : ['~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~start(proposer0)', '~start(proposer1)']
502     : -------0--00------------0-0
502     : ['~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~start(proposer0)', '~start(proposer2)']
503     : ------0---00-------------00
503     : ['~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~start(proposer1)', '~start(proposer2)']
504     : -----0---0-0------------00-
504     : ['~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor2)', '~start(proposer0)', '~start(proposer1)']
505     : ----0----0-0------------0-0
505     : ['~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor2)', '~start(proposer0)', '~start(proposer2)']
506     : ---0-----0-0-------------00
506     : ['~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor2)', '~start(proposer1)', '~start(proposer2)']
507     : --0------00-------------00-
507     : ['~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~start(proposer0)', '~start(proposer1)']
508     : -0-------00-------------0-0
508     : ['~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~start(proposer0)', '~start(proposer2)']
509     : 0--------00--------------00
509     : ['~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~start(proposer1)', '~start(proposer2)']
num_forall :   4
num_exists :   1
num_literals : 8
quantified form : forall ACCEPTOR1,QUORUM0,ACCEPTOR0,PROPOSER1. didNotPromise(ACCEPTOR0) | ~member(ACCEPTOR0,QUORUM0) | ~member(ACCEPTOR1,QUORUM0) | didNotPromise(ACCEPTOR1) | chosenAt(QUORUM0,PROPOSER1) | (exists PROPOSER0. (start(PROPOSER0) & PROPOSER0 ~= PROPOSER1)) | ACCEPTOR0 = ACCEPTOR1
qcost : 13




=== Prime Orbit 33 =====================
size : 18
num_suborbits: 1
510 (*) : --1-----0--0------------00-
510     : ['chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor2)', '~start(proposer0)', '~start(proposer1)']
511     : -1-----0---0------------0-0
511     : ['chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor2)', '~start(proposer0)', '~start(proposer2)']
512     : 1-----0----0-------------00
512     : ['chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor2)', '~start(proposer1)', '~start(proposer2)']
513     : -----1--0-0-------------00-
513     : ['chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor1)', '~start(proposer0)', '~start(proposer1)']
514     : ----1--0--0-------------0-0
514     : ['chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor1)', '~start(proposer0)', '~start(proposer2)']
515     : ---1--0---0--------------00
515     : ['chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor1)', '~start(proposer1)', '~start(proposer2)']
516     : --1--0-----0------------00-
516     : ['chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~didNotPromise(acceptor2)', '~start(proposer0)', '~start(proposer1)']
517     : -1--0------0------------0-0
517     : ['chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~didNotPromise(acceptor2)', '~start(proposer0)', '~start(proposer2)']
518     : 1--0-------0-------------00
518     : ['chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~didNotPromise(acceptor2)', '~start(proposer1)', '~start(proposer2)']
519     : -----0--10--------------00-
519     : ['chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~didNotPromise(acceptor0)', '~start(proposer0)', '~start(proposer1)']
520     : ----0--1-0--------------0-0
520     : ['chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~didNotPromise(acceptor0)', '~start(proposer0)', '~start(proposer2)']
521     : ---0--1--0---------------00
521     : ['chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~didNotPromise(acceptor0)', '~start(proposer1)', '~start(proposer2)']
522     : --0--1----0-------------00-
522     : ['chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~didNotPromise(acceptor1)', '~start(proposer0)', '~start(proposer1)']
523     : -0--1-----0-------------0-0
523     : ['chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~didNotPromise(acceptor1)', '~start(proposer0)', '~start(proposer2)']
524     : 0--1------0--------------00
524     : ['chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~didNotPromise(acceptor1)', '~start(proposer1)', '~start(proposer2)']
525     : --0-----10--------------00-
525     : ['chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~didNotPromise(acceptor0)', '~start(proposer0)', '~start(proposer1)']
526     : -0-----1-0--------------0-0
526     : ['chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~didNotPromise(acceptor0)', '~start(proposer0)', '~start(proposer2)']
527     : 0-----1--0---------------00
527     : ['chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~didNotPromise(acceptor0)', '~start(proposer1)', '~start(proposer2)']
num_forall :   4
num_exists :   1
num_literals : 8
quantified form : forall QUORUM0,QUORUM1,ACCEPTOR0,PROPOSER1. didNotPromise(ACCEPTOR0) | chosenAt(QUORUM1,PROPOSER1) | ~chosenAt(QUORUM0,PROPOSER1) | member(ACCEPTOR0,QUORUM0) | ~member(ACCEPTOR0,QUORUM1) | (exists PROPOSER0. (start(PROPOSER0) & PROPOSER0 ~= PROPOSER1)) | QUORUM0 = QUORUM1
qcost : 13




=== Prime Orbit 37 =====================
size : 18
num_suborbits: 1
582 (*) : ---0----0--0---1----1----0-
582     : ['promise(acceptor0,proposer0)', 'promise(acceptor1,proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor2)', '~start(proposer1)']
583     : ---0---0---0---1---1------0
583     : ['promise(acceptor0,proposer0)', 'promise(acceptor1,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor2)', '~start(proposer2)']
584     : ----0---0--0----1---1---0--
584     : ['promise(acceptor0,proposer1)', 'promise(acceptor1,proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor2)', '~start(proposer0)']
585     : ----0-0----0----1-1-------0
585     : ['promise(acceptor0,proposer1)', 'promise(acceptor1,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor2)', '~start(proposer2)']
586     : -----0-0---0-----1-1----0--
586     : ['promise(acceptor0,proposer2)', 'promise(acceptor1,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor2)', '~start(proposer0)']
587     : -----00----0-----11------0-
587     : ['promise(acceptor0,proposer2)', 'promise(acceptor1,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor2)', '~start(proposer1)']
588     : 0-------0-0----1-------1-0-
588     : ['promise(acceptor0,proposer0)', 'promise(acceptor2,proposer2)', '~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor1)', '~start(proposer1)']
589     : 0------0--0----1------1---0
589     : ['promise(acceptor0,proposer0)', 'promise(acceptor2,proposer1)', '~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor1)', '~start(proposer2)']
590     : -0------0-0-----1------10--
590     : ['promise(acceptor0,proposer1)', 'promise(acceptor2,proposer2)', '~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor1)', '~start(proposer0)']
591     : -0----0---0-----1----1----0
591     : ['promise(acceptor0,proposer1)', 'promise(acceptor2,proposer0)', '~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor1)', '~start(proposer2)']
592     : --0----0--0------1----1-0--
592     : ['promise(acceptor0,proposer2)', 'promise(acceptor2,proposer1)', '~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor1)', '~start(proposer0)']
593     : --0---0---0------1---1---0-
593     : ['promise(acceptor0,proposer2)', 'promise(acceptor2,proposer0)', '~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor1)', '~start(proposer1)']
594     : 0----0---0--------1----1-0-
594     : ['promise(acceptor1,proposer0)', 'promise(acceptor2,proposer2)', '~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~didNotPromise(acceptor0)', '~start(proposer1)']
595     : 0---0----0--------1---1---0
595     : ['promise(acceptor1,proposer0)', 'promise(acceptor2,proposer1)', '~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~didNotPromise(acceptor0)', '~start(proposer2)']
596     : -0---0---0---------1---10--
596     : ['promise(acceptor1,proposer1)', 'promise(acceptor2,proposer2)', '~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~didNotPromise(acceptor0)', '~start(proposer0)']
597     : -0-0-----0---------1-1----0
597     : ['promise(acceptor1,proposer1)', 'promise(acceptor2,proposer0)', '~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~didNotPromise(acceptor0)', '~start(proposer2)']
598     : --0-0----0----------1-1-0--
598     : ['promise(acceptor1,proposer2)', 'promise(acceptor2,proposer1)', '~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~didNotPromise(acceptor0)', '~start(proposer0)']
599     : --00-----0----------11---0-
599     : ['promise(acceptor1,proposer2)', 'promise(acceptor2,proposer0)', '~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~didNotPromise(acceptor0)', '~start(proposer1)']
num_forall :   8
num_exists :   0
num_literals : 19
quantified form : forall QUORUM0,PROPOSER2,PROPOSER1,ACCEPTOR1,QUORUM1,ACCEPTOR0,PROPOSER0,ACCEPTOR2. member(ACCEPTOR0,QUORUM1) | ~member(ACCEPTOR1,QUORUM1) | ~promise(ACCEPTOR2,PROPOSER1) | start(PROPOSER2) | ~member(ACCEPTOR0,QUORUM0) | ~member(ACCEPTOR1,QUORUM0) | ~member(ACCEPTOR2,QUORUM1) | didNotPromise(ACCEPTOR1) | chosenAt(QUORUM0,PROPOSER0) | chosenAt(QUORUM1,PROPOSER1) | ~promise(ACCEPTOR0,PROPOSER0) | member(ACCEPTOR2,QUORUM0) | (PROPOSER1 = PROPOSER2 | ACCEPTOR0 = ACCEPTOR1 | QUORUM0 = QUORUM1 | PROPOSER0 = PROPOSER1 | ACCEPTOR1 = ACCEPTOR2 | ACCEPTOR0 = ACCEPTOR2 | PROPOSER0 = PROPOSER2)
qcost : 27




=== Prime Orbit 38 =====================
size : 18
num_suborbits: 1
600 (*) : -0-----0--0--1----0-------0
600     : ['leader(proposer1)', '~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor1)', '~promise(acceptor1,proposer0)', '~start(proposer2)']
601     : --0-----0-0---1---0------0-
601     : ['leader(proposer2)', '~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor1)', '~promise(acceptor1,proposer0)', '~start(proposer1)']
602     : 0-----0---0-1------0------0
602     : ['leader(proposer0)', '~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor1)', '~promise(acceptor1,proposer1)', '~start(proposer2)']
603     : --0-----0-0---1----0----0--
603     : ['leader(proposer2)', '~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor1)', '~promise(acceptor1,proposer1)', '~start(proposer0)']
604     : 0-----0---0-1-------0----0-
604     : ['leader(proposer0)', '~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor1)', '~promise(acceptor1,proposer2)', '~start(proposer1)']
605     : -0-----0--0--1------0---0--
605     : ['leader(proposer1)', '~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor1)', '~promise(acceptor1,proposer2)', '~start(proposer0)']
606     : ----0--0---0-1-------0----0
606     : ['leader(proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor2)', '~promise(acceptor2,proposer0)', '~start(proposer2)']
607     : -----0--0--0--1------0---0-
607     : ['leader(proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor2)', '~promise(acceptor2,proposer0)', '~start(proposer1)']
608     : ---0--0----01---------0---0
608     : ['leader(proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor2)', '~promise(acceptor2,proposer1)', '~start(proposer2)']
609     : -----0--0--0--1-------0-0--
609     : ['leader(proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor2)', '~promise(acceptor2,proposer1)', '~start(proposer0)']
610     : ---0--0----01----------0-0-
610     : ['leader(proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor2)', '~promise(acceptor2,proposer2)', '~start(proposer1)']
611     : ----0--0---0-1---------00--
611     : ['leader(proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor2)', '~promise(acceptor2,proposer2)', '~start(proposer0)']
612     : -0--0----0---1-0----------0
612     : ['leader(proposer1)', '~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~didNotPromise(acceptor0)', '~promise(acceptor0,proposer0)', '~start(proposer2)']
613     : --0--0---0----10---------0-
613     : ['leader(proposer2)', '~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~didNotPromise(acceptor0)', '~promise(acceptor0,proposer0)', '~start(proposer1)']
614     : 0--0-----0--1---0---------0
614     : ['leader(proposer0)', '~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~didNotPromise(acceptor0)', '~promise(acceptor0,proposer1)', '~start(proposer2)']
615     : --0--0---0----1-0-------0--
615     : ['leader(proposer2)', '~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~didNotPromise(acceptor0)', '~promise(acceptor0,proposer1)', '~start(proposer0)']
616     : 0--0-----0--1----0-------0-
616     : ['leader(proposer0)', '~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~didNotPromise(acceptor0)', '~promise(acceptor0,proposer2)', '~start(proposer1)']
617     : -0--0----0---1---0------0--
617     : ['leader(proposer1)', '~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~didNotPromise(acceptor0)', '~promise(acceptor0,proposer2)', '~start(proposer0)']
num_forall :   6
num_exists :   0
num_literals : 12
quantified form : forall QUORUM0,PROPOSER2,PROPOSER1,ACCEPTOR0,PROPOSER0,QUORUM1. chosenAt(QUORUM1,PROPOSER0) | didNotPromise(ACCEPTOR0) | promise(ACCEPTOR0,PROPOSER1) | start(PROPOSER2) | ~member(ACCEPTOR0,QUORUM0) | ~leader(PROPOSER0) | chosenAt(QUORUM0,PROPOSER0) | ~member(ACCEPTOR0,QUORUM1) | (QUORUM0 = QUORUM1 | PROPOSER1 = PROPOSER2 | PROPOSER0 = PROPOSER1 | PROPOSER0 = PROPOSER2)
qcost : 18




=== Prime Orbit 39 =====================
size : 9
num_suborbits: 1
618 (*) : -0-----0--0--1----0-0------
618     : ['leader(proposer1)', '~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor1)', '~promise(acceptor1,proposer0)', '~promise(acceptor1,proposer2)']
619     : --0-----0-0---1---00-------
619     : ['leader(proposer2)', '~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor1)', '~promise(acceptor1,proposer0)', '~promise(acceptor1,proposer1)']
620     : 0-----0---0-1------00------
620     : ['leader(proposer0)', '~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor1)', '~promise(acceptor1,proposer1)', '~promise(acceptor1,proposer2)']
621     : ----0--0---0-1-------0-0---
621     : ['leader(proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor2)', '~promise(acceptor2,proposer0)', '~promise(acceptor2,proposer2)']
622     : -----0--0--0--1------00----
622     : ['leader(proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor2)', '~promise(acceptor2,proposer0)', '~promise(acceptor2,proposer1)']
623     : ---0--0----01---------00---
623     : ['leader(proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor2)', '~promise(acceptor2,proposer1)', '~promise(acceptor2,proposer2)']
624     : -0--0----0---1-0-0---------
624     : ['leader(proposer1)', '~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~didNotPromise(acceptor0)', '~promise(acceptor0,proposer0)', '~promise(acceptor0,proposer2)']
625     : --0--0---0----100----------
625     : ['leader(proposer2)', '~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~didNotPromise(acceptor0)', '~promise(acceptor0,proposer0)', '~promise(acceptor0,proposer1)']
626     : 0--0-----0--1---00---------
626     : ['leader(proposer0)', '~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~didNotPromise(acceptor0)', '~promise(acceptor0,proposer1)', '~promise(acceptor0,proposer2)']
num_forall :   4
num_exists :   1
num_literals : 9
quantified form : forall QUORUM0,QUORUM1,ACCEPTOR0,PROPOSER1. didNotPromise(ACCEPTOR0) | ~leader(PROPOSER1) | ~member(ACCEPTOR0,QUORUM0) | chosenAt(QUORUM1,PROPOSER1) | chosenAt(QUORUM0,PROPOSER1) | ~member(ACCEPTOR0,QUORUM1) | (exists PROPOSER0. (promise(ACCEPTOR0,PROPOSER0) & PROPOSER0 ~= PROPOSER1)) | QUORUM0 = QUORUM1
qcost : 14




=== Prime Orbit 40 =====================
size : 9
num_suborbits: 1
627 (*) : -0-----0--0--1----------0-0
627     : ['leader(proposer1)', '~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor1)', '~start(proposer0)', '~start(proposer2)']
628     : --0-----0-0---1---------00-
628     : ['leader(proposer2)', '~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor1)', '~start(proposer0)', '~start(proposer1)']
629     : 0-----0---0-1------------00
629     : ['leader(proposer0)', '~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor1)', '~start(proposer1)', '~start(proposer2)']
630     : ----0--0---0-1----------0-0
630     : ['leader(proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor2)', '~start(proposer0)', '~start(proposer2)']
631     : -----0--0--0--1---------00-
631     : ['leader(proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor2)', '~start(proposer0)', '~start(proposer1)']
632     : ---0--0----01------------00
632     : ['leader(proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor2)', '~start(proposer1)', '~start(proposer2)']
633     : -0--0----0---1----------0-0
633     : ['leader(proposer1)', '~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~didNotPromise(acceptor0)', '~start(proposer0)', '~start(proposer2)']
634     : --0--0---0----1---------00-
634     : ['leader(proposer2)', '~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~didNotPromise(acceptor0)', '~start(proposer0)', '~start(proposer1)']
635     : 0--0-----0--1------------00
635     : ['leader(proposer0)', '~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~didNotPromise(acceptor0)', '~start(proposer1)', '~start(proposer2)']
num_forall :   4
num_exists :   1
num_literals : 9
quantified form : forall QUORUM0,QUORUM1,ACCEPTOR0,PROPOSER1. didNotPromise(ACCEPTOR0) | ~leader(PROPOSER1) | ~member(ACCEPTOR0,QUORUM0) | chosenAt(QUORUM1,PROPOSER1) | chosenAt(QUORUM0,PROPOSER1) | ~member(ACCEPTOR0,QUORUM1) | (exists PROPOSER0. (start(PROPOSER0) & PROPOSER0 ~= PROPOSER1)) | QUORUM0 = QUORUM1
qcost : 14




=== Prime Orbit 41 =====================
size : 18
num_suborbits: 1
636 (*) : --0------00----0--0------0-
636     : ['~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~promise(acceptor0,proposer0)', '~promise(acceptor1,proposer0)', '~start(proposer1)']
637     : -0-------00----0--0-------0
637     : ['~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~promise(acceptor0,proposer0)', '~promise(acceptor1,proposer0)', '~start(proposer2)']
638     : --0------00-----0--0----0--
638     : ['~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~promise(acceptor0,proposer1)', '~promise(acceptor1,proposer1)', '~start(proposer0)']
639     : 0--------00-----0--0------0
639     : ['~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~promise(acceptor0,proposer1)', '~promise(acceptor1,proposer1)', '~start(proposer2)']
640     : -0-------00------0--0---0--
640     : ['~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~promise(acceptor0,proposer2)', '~promise(acceptor1,proposer2)', '~start(proposer0)']
641     : 0--------00------0--0----0-
641     : ['~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~promise(acceptor0,proposer2)', '~promise(acceptor1,proposer2)', '~start(proposer1)']
642     : -----0---0-0---0-----0---0-
642     : ['~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor2)', '~promise(acceptor0,proposer0)', '~promise(acceptor2,proposer0)', '~start(proposer1)']
643     : ----0----0-0---0-----0----0
643     : ['~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor2)', '~promise(acceptor0,proposer0)', '~promise(acceptor2,proposer0)', '~start(proposer2)']
644     : -----0---0-0----0-----0-0--
644     : ['~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor2)', '~promise(acceptor0,proposer1)', '~promise(acceptor2,proposer1)', '~start(proposer0)']
645     : ---0-----0-0----0-----0---0
645     : ['~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor2)', '~promise(acceptor0,proposer1)', '~promise(acceptor2,proposer1)', '~start(proposer2)']
646     : ----0----0-0-----0-----00--
646     : ['~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor2)', '~promise(acceptor0,proposer2)', '~promise(acceptor2,proposer2)', '~start(proposer0)']
647     : ---0-----0-0-----0-----0-0-
647     : ['~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor2)', '~promise(acceptor0,proposer2)', '~promise(acceptor2,proposer2)', '~start(proposer1)']
648     : --------0-00------0--0---0-
648     : ['~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor1,proposer0)', '~promise(acceptor2,proposer0)', '~start(proposer1)']
649     : -------0--00------0--0----0
649     : ['~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor1,proposer0)', '~promise(acceptor2,proposer0)', '~start(proposer2)']
650     : --------0-00-------0--0-0--
650     : ['~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor1,proposer1)', '~promise(acceptor2,proposer1)', '~start(proposer0)']
651     : ------0---00-------0--0---0
651     : ['~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor1,proposer1)', '~promise(acceptor2,proposer1)', '~start(proposer2)']
652     : -------0--00--------0--00--
652     : ['~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor1,proposer2)', '~promise(acceptor2,proposer2)', '~start(proposer0)']
653     : ------0---00--------0--0-0-
653     : ['~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor1,proposer2)', '~promise(acceptor2,proposer2)', '~start(proposer1)']
num_forall :   6
num_exists :   0
num_literals : 12
quantified form : forall QUORUM0,PROPOSER2,PROPOSER1,ACCEPTOR1,ACCEPTOR0,PROPOSER0. promise(ACCEPTOR1,PROPOSER1) | didNotPromise(ACCEPTOR0) | promise(ACCEPTOR0,PROPOSER1) | start(PROPOSER2) | ~member(ACCEPTOR0,QUORUM0) | ~member(ACCEPTOR1,QUORUM0) | didNotPromise(ACCEPTOR1) | chosenAt(QUORUM0,PROPOSER0) | (PROPOSER1 = PROPOSER2 | PROPOSER0 = PROPOSER1 | PROPOSER0 = PROPOSER2 | ACCEPTOR0 = ACCEPTOR1)
qcost : 18




=== Prime Orbit 42 =====================
size : 36
num_suborbits: 1
654 (*) : --0-0----0-0--------1--00--
654     : ['promise(acceptor1,proposer2)', '~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor2)', '~promise(acceptor2,proposer2)', '~start(proposer0)']
655     : -0---0---0-0-------1--0-0--
655     : ['promise(acceptor1,proposer1)', '~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor2)', '~promise(acceptor2,proposer1)', '~start(proposer0)']
656     : --00-----0-0--------1--0-0-
656     : ['promise(acceptor1,proposer2)', '~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor2)', '~promise(acceptor2,proposer2)', '~start(proposer1)']
657     : 0----0---0-0------1--0---0-
657     : ['promise(acceptor1,proposer0)', '~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor2)', '~promise(acceptor2,proposer0)', '~start(proposer1)']
658     : -0-0-----0-0-------1--0---0
658     : ['promise(acceptor1,proposer1)', '~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor2)', '~promise(acceptor2,proposer1)', '~start(proposer2)']
659     : 0---0----0-0------1--0----0
659     : ['promise(acceptor1,proposer0)', '~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor2)', '~promise(acceptor2,proposer0)', '~start(proposer2)']
660     : -0---0---00---------0--10--
660     : ['promise(acceptor2,proposer2)', '~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~promise(acceptor1,proposer2)', '~start(proposer0)']
661     : --0-0----00--------0--1-0--
661     : ['promise(acceptor2,proposer1)', '~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~promise(acceptor1,proposer1)', '~start(proposer0)']
662     : 0----0---00---------0--1-0-
662     : ['promise(acceptor2,proposer2)', '~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~promise(acceptor1,proposer2)', '~start(proposer1)']
663     : --00-----00-------0--1---0-
663     : ['promise(acceptor2,proposer0)', '~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~promise(acceptor1,proposer0)', '~start(proposer1)']
664     : 0---0----00--------0--1---0
664     : ['promise(acceptor2,proposer1)', '~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~promise(acceptor1,proposer1)', '~start(proposer2)']
665     : -0-0-----00-------0--1----0
665     : ['promise(acceptor2,proposer0)', '~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~promise(acceptor1,proposer0)', '~start(proposer2)']
666     : --0----0--00-----1-----00--
666     : ['promise(acceptor0,proposer2)', '~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor2,proposer2)', '~start(proposer0)']
667     : -0------0-00----1-----0-0--
667     : ['promise(acceptor0,proposer1)', '~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor2,proposer1)', '~start(proposer0)']
668     : --0---0---00-----1-----0-0-
668     : ['promise(acceptor0,proposer2)', '~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor2,proposer2)', '~start(proposer1)']
669     : 0-------0-00---1-----0---0-
669     : ['promise(acceptor0,proposer0)', '~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor2,proposer0)', '~start(proposer1)']
670     : -0----0---00----1-----0---0
670     : ['promise(acceptor0,proposer1)', '~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor2,proposer1)', '~start(proposer2)']
671     : 0------0--00---1-----0----0
671     : ['promise(acceptor0,proposer0)', '~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor2,proposer0)', '~start(proposer2)']
672     : -0------000------0-----10--
672     : ['promise(acceptor2,proposer2)', '~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~promise(acceptor0,proposer2)', '~start(proposer0)']
673     : --0----0-00-----0-----1-0--
673     : ['promise(acceptor2,proposer1)', '~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~promise(acceptor0,proposer1)', '~start(proposer0)']
674     : 0-------000------0-----1-0-
674     : ['promise(acceptor2,proposer2)', '~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~promise(acceptor0,proposer2)', '~start(proposer1)']
675     : --0---0--00----0-----1---0-
675     : ['promise(acceptor2,proposer0)', '~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~promise(acceptor0,proposer0)', '~start(proposer1)']
676     : 0------0-00-----0-----1---0
676     : ['promise(acceptor2,proposer1)', '~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~promise(acceptor0,proposer1)', '~start(proposer2)']
677     : -0----0--00----0-----1----0
677     : ['promise(acceptor2,proposer0)', '~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~promise(acceptor0,proposer0)', '~start(proposer2)']
678     : -----0-0--00-----1--0---0--
678     : ['promise(acceptor0,proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor1,proposer2)', '~start(proposer0)']
679     : ----0---0-00----1--0----0--
679     : ['promise(acceptor0,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor1,proposer1)', '~start(proposer0)']
680     : -----00---00-----1--0----0-
680     : ['promise(acceptor0,proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor1,proposer2)', '~start(proposer1)']
681     : ---0----0-00---1--0------0-
681     : ['promise(acceptor0,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor1,proposer0)', '~start(proposer1)']
682     : ----0-0---00----1--0------0
682     : ['promise(acceptor0,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor1,proposer1)', '~start(proposer2)']
683     : ---0---0--00---1--0-------0
683     : ['promise(acceptor0,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor1,proposer0)', '~start(proposer2)']
684     : ----0---00-0-----0--1---0--
684     : ['promise(acceptor1,proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor2)', '~promise(acceptor0,proposer2)', '~start(proposer0)']
685     : -----0-0-0-0----0--1----0--
685     : ['promise(acceptor1,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor2)', '~promise(acceptor0,proposer1)', '~start(proposer0)']
686     : ---0----00-0-----0--1----0-
686     : ['promise(acceptor1,proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor2)', '~promise(acceptor0,proposer2)', '~start(proposer1)']
687     : -----00--0-0---0--1------0-
687     : ['promise(acceptor1,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor2)', '~promise(acceptor0,proposer0)', '~start(proposer1)']
688     : ---0---0-0-0----0--1------0
688     : ['promise(acceptor1,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor2)', '~promise(acceptor0,proposer1)', '~start(proposer2)']
689     : ----0-0--0-0---0--1-------0
689     : ['promise(acceptor1,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor2)', '~promise(acceptor0,proposer0)', '~start(proposer2)']
num_forall :   8
num_exists :   0
num_literals : 20
quantified form : forall QUORUM0,PROPOSER2,PROPOSER1,ACCEPTOR1,QUORUM1,ACCEPTOR0,PROPOSER0,ACCEPTOR2. member(ACCEPTOR1,QUORUM1) | didNotPromise(ACCEPTOR2) | didNotPromise(ACCEPTOR0) | ~promise(ACCEPTOR1,PROPOSER0) | start(PROPOSER2) | member(ACCEPTOR2,QUORUM0) | promise(ACCEPTOR2,PROPOSER0) | ~member(ACCEPTOR0,QUORUM0) | ~member(ACCEPTOR1,QUORUM0) | ~member(ACCEPTOR2,QUORUM1) | chosenAt(QUORUM1,PROPOSER1) | chosenAt(QUORUM0,PROPOSER0) | ~member(ACCEPTOR0,QUORUM1) | (PROPOSER1 = PROPOSER2 | ACCEPTOR0 = ACCEPTOR1 | QUORUM0 = QUORUM1 | PROPOSER0 = PROPOSER1 | ACCEPTOR1 = ACCEPTOR2 | ACCEPTOR0 = ACCEPTOR2 | PROPOSER0 = PROPOSER2)
qcost : 28




=== Prime Orbit 43 =====================
size : 18
num_suborbits: 1
690 (*) : --0-0---00-0--------1---0--
690     : ['promise(acceptor1,proposer2)', '~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor2)', '~start(proposer0)']
691     : -0---0-0-0-0-------1----0--
691     : ['promise(acceptor1,proposer1)', '~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor2)', '~start(proposer0)']
692     : --00----00-0--------1----0-
692     : ['promise(acceptor1,proposer2)', '~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor2)', '~start(proposer1)']
693     : 0----00--0-0------1------0-
693     : ['promise(acceptor1,proposer0)', '~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor2)', '~start(proposer1)']
694     : -0-0---0-0-0-------1------0
694     : ['promise(acceptor1,proposer1)', '~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor2)', '~start(proposer2)']
695     : 0---0-0--0-0------1-------0
695     : ['promise(acceptor1,proposer0)', '~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor2)', '~start(proposer2)']
696     : -0---0--000------------10--
696     : ['promise(acceptor2,proposer2)', '~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~start(proposer0)']
697     : --0-0--0-00-----------1-0--
697     : ['promise(acceptor2,proposer1)', '~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~start(proposer0)']
698     : 0----0--000------------1-0-
698     : ['promise(acceptor2,proposer2)', '~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~start(proposer1)']
699     : --00--0--00----------1---0-
699     : ['promise(acceptor2,proposer0)', '~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~start(proposer1)']
700     : 0---0--0-00-----------1---0
700     : ['promise(acceptor2,proposer1)', '~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~start(proposer2)']
701     : -0-0--0--00----------1----0
701     : ['promise(acceptor2,proposer0)', '~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~start(proposer2)']
702     : --0--0-0--00-----1------0--
702     : ['promise(acceptor0,proposer2)', '~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~start(proposer0)']
703     : -0--0---0-00----1-------0--
703     : ['promise(acceptor0,proposer1)', '~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~start(proposer0)']
704     : --0--00---00-----1-------0-
704     : ['promise(acceptor0,proposer2)', '~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~start(proposer1)']
705     : 0--0----0-00---1---------0-
705     : ['promise(acceptor0,proposer0)', '~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~start(proposer1)']
706     : -0--0-0---00----1---------0
706     : ['promise(acceptor0,proposer1)', '~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~start(proposer2)']
707     : 0--0---0--00---1----------0
707     : ['promise(acceptor0,proposer0)', '~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~start(proposer2)']
num_forall :   9
num_exists :   0
num_literals : 25
quantified form : forall QUORUM0,PROPOSER2,PROPOSER1,ACCEPTOR1,QUORUM1,ACCEPTOR0,PROPOSER0,ACCEPTOR2,QUORUM2. member(ACCEPTOR1,QUORUM1) | didNotPromise(ACCEPTOR2) | didNotPromise(ACCEPTOR0) | ~promise(ACCEPTOR1,PROPOSER0) | ~member(ACCEPTOR2,QUORUM2) | member(ACCEPTOR0,QUORUM2) | start(PROPOSER2) | member(ACCEPTOR2,QUORUM0) | ~member(ACCEPTOR0,QUORUM0) | ~member(ACCEPTOR1,QUORUM0) | ~member(ACCEPTOR2,QUORUM1) | chosenAt(QUORUM2,PROPOSER0) | ~member(ACCEPTOR1,QUORUM2) | chosenAt(QUORUM1,PROPOSER1) | chosenAt(QUORUM0,PROPOSER0) | ~member(ACCEPTOR0,QUORUM1) | (PROPOSER1 = PROPOSER2 | QUORUM0 = QUORUM2 | ACCEPTOR0 = ACCEPTOR1 | QUORUM0 = QUORUM1 | QUORUM1 = QUORUM2 | PROPOSER0 = PROPOSER1 | ACCEPTOR1 = ACCEPTOR2 | ACCEPTOR0 = ACCEPTOR2 | PROPOSER0 = PROPOSER2)
qcost : 34




=== Prime Orbit 47 =====================
size : 18
num_suborbits: 1
771 (*) : 0----0--0000---------0---0-
771     : ['~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor2,proposer0)', '~start(proposer1)']
772     : 0---0--0-000---------0----0
772     : ['~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor2,proposer0)', '~start(proposer2)']
773     : -0---0--0000----------0-0--
773     : ['~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor2,proposer1)', '~start(proposer0)']
774     : -0-0--0--000----------0---0
774     : ['~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor2,proposer1)', '~start(proposer2)']
775     : --0-0--0-000-----------00--
775     : ['~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor2,proposer2)', '~start(proposer0)']
776     : --00--0--000-----------0-0-
776     : ['~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor2,proposer2)', '~start(proposer1)']
777     : --00----0000------0------0-
777     : ['~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor1,proposer0)', '~start(proposer1)']
778     : -0-0---0-000------0-------0
778     : ['~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor1,proposer0)', '~start(proposer2)']
779     : --0-0---0000-------0----0--
779     : ['~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor1,proposer1)', '~start(proposer0)']
780     : 0---0-0--000-------0------0
780     : ['~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor1,proposer1)', '~start(proposer2)']
781     : -0---0-0-000--------0---0--
781     : ['~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor1,proposer2)', '~start(proposer0)']
782     : 0----00--000--------0----0-
782     : ['~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor1,proposer2)', '~start(proposer1)']
783     : --0--00--000---0---------0-
783     : ['~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor0,proposer0)', '~start(proposer1)']
784     : -0--0-0--000---0----------0
784     : ['~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor0,proposer0)', '~start(proposer2)']
785     : --0--0-0-000----0-------0--
785     : ['~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor0,proposer1)', '~start(proposer0)']
786     : 0--0---0-000----0---------0
786     : ['~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor0,proposer1)', '~start(proposer2)']
787     : -0--0---0000-----0------0--
787     : ['~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor0,proposer2)', '~start(proposer0)']
788     : 0--0----0000-----0-------0-
788     : ['~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor0,proposer2)', '~start(proposer1)']
num_forall :   9
num_exists :   0
num_literals : 26
quantified form : forall QUORUM0,PROPOSER2,PROPOSER1,ACCEPTOR1,QUORUM1,ACCEPTOR0,PROPOSER0,ACCEPTOR2,QUORUM2. member(ACCEPTOR1,QUORUM1) | chosenAt(QUORUM2,PROPOSER1) | didNotPromise(ACCEPTOR0) | didNotPromise(ACCEPTOR2) | ~member(ACCEPTOR2,QUORUM2) | member(ACCEPTOR0,QUORUM2) | start(PROPOSER2) | member(ACCEPTOR2,QUORUM0) | promise(ACCEPTOR2,PROPOSER0) | ~member(ACCEPTOR0,QUORUM0) | ~member(ACCEPTOR1,QUORUM0) | ~member(ACCEPTOR2,QUORUM1) | didNotPromise(ACCEPTOR1) | ~member(ACCEPTOR1,QUORUM2) | chosenAt(QUORUM1,PROPOSER1) | chosenAt(QUORUM0,PROPOSER0) | ~member(ACCEPTOR0,QUORUM1) | (PROPOSER1 = PROPOSER2 | QUORUM0 = QUORUM2 | ACCEPTOR0 = ACCEPTOR1 | QUORUM0 = QUORUM1 | QUORUM1 = QUORUM2 | PROPOSER0 = PROPOSER1 | ACCEPTOR1 = ACCEPTOR2 | ACCEPTOR0 = ACCEPTOR2 | PROPOSER0 = PROPOSER2)
qcost : 35




=== Prime Orbit 48 =====================
size : 18
num_suborbits: 1
789 (*) : --00-----000------0----0-0-
789     : ['~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor1,proposer0)', '~promise(acceptor2,proposer2)', '~start(proposer1)']
790     : -0-0-----000------0---0---0
790     : ['~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor1,proposer0)', '~promise(acceptor2,proposer1)', '~start(proposer2)']
791     : --0-0----000-------0---00--
791     : ['~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor1,proposer1)', '~promise(acceptor2,proposer2)', '~start(proposer0)']
792     : 0---0----000-------0-0----0
792     : ['~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor1,proposer1)', '~promise(acceptor2,proposer0)', '~start(proposer2)']
793     : -0---0---000--------0-0-0--
793     : ['~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor1,proposer2)', '~promise(acceptor2,proposer1)', '~start(proposer0)']
794     : 0----0---000--------00---0-
794     : ['~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor1,proposer2)', '~promise(acceptor2,proposer0)', '~start(proposer1)']
795     : --0---0--000---0-------0-0-
795     : ['~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor0,proposer0)', '~promise(acceptor2,proposer2)', '~start(proposer1)']
796     : -0----0--000---0------0---0
796     : ['~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor0,proposer0)', '~promise(acceptor2,proposer1)', '~start(proposer2)']
797     : --0----0-000----0------00--
797     : ['~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor0,proposer1)', '~promise(acceptor2,proposer2)', '~start(proposer0)']
798     : 0------0-000----0----0----0
798     : ['~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor0,proposer1)', '~promise(acceptor2,proposer0)', '~start(proposer2)']
799     : -0------0000-----0----0-0--
799     : ['~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor0,proposer2)', '~promise(acceptor2,proposer1)', '~start(proposer0)']
800     : 0-------0000-----0---0---0-
800     : ['~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor0,proposer2)', '~promise(acceptor2,proposer0)', '~start(proposer1)']
801     : -----00--000---0----0----0-
801     : ['~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor0,proposer0)', '~promise(acceptor1,proposer2)', '~start(proposer1)']
802     : ----0-0--000---0---0------0
802     : ['~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor0,proposer0)', '~promise(acceptor1,proposer1)', '~start(proposer2)']
803     : -----0-0-000----0---0---0--
803     : ['~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor0,proposer1)', '~promise(acceptor1,proposer2)', '~start(proposer0)']
804     : ---0---0-000----0-0-------0
804     : ['~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor0,proposer1)', '~promise(acceptor1,proposer0)', '~start(proposer2)']
805     : ----0---0000-----0-0----0--
805     : ['~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor0,proposer2)', '~promise(acceptor1,proposer1)', '~start(proposer0)']
806     : ---0----0000-----00------0-
806     : ['~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor0,proposer2)', '~promise(acceptor1,proposer0)', '~start(proposer1)']
num_forall :   8
num_exists :   0
num_literals : 21
quantified form : forall QUORUM0,PROPOSER2,PROPOSER1,ACCEPTOR1,QUORUM1,ACCEPTOR0,PROPOSER0,ACCEPTOR2. member(ACCEPTOR1,QUORUM1) | didNotPromise(ACCEPTOR2) | didNotPromise(ACCEPTOR0) | promise(ACCEPTOR1,PROPOSER1) | start(PROPOSER2) | member(ACCEPTOR2,QUORUM0) | promise(ACCEPTOR2,PROPOSER0) | ~member(ACCEPTOR0,QUORUM0) | ~member(ACCEPTOR1,QUORUM0) | ~member(ACCEPTOR2,QUORUM1) | didNotPromise(ACCEPTOR1) | chosenAt(QUORUM1,PROPOSER1) | chosenAt(QUORUM0,PROPOSER0) | ~member(ACCEPTOR0,QUORUM1) | (PROPOSER1 = PROPOSER2 | ACCEPTOR0 = ACCEPTOR1 | QUORUM0 = QUORUM1 | PROPOSER0 = PROPOSER1 | ACCEPTOR1 = ACCEPTOR2 | ACCEPTOR0 = ACCEPTOR2 | PROPOSER0 = PROPOSER2)
qcost : 29




=== Prime Orbit 49 =====================
size : 3
num_suborbits: 1
807 (*) : 0-00-00-0000-------------0-
807     : ['~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~start(proposer1)']
808     : 00-00-00-000--------------0
808     : ['~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~start(proposer2)']
809     : -00-00-00000------------0--
809     : ['~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~start(proposer0)']
num_forall :   7
num_exists :   1
num_literals : 23
quantified form : forall QUORUM0,PROPOSER1,ACCEPTOR1,QUORUM1,ACCEPTOR0,ACCEPTOR2,QUORUM2. didNotPromise(ACCEPTOR2) | didNotPromise(ACCEPTOR0) | ~member(ACCEPTOR2,QUORUM2) | member(ACCEPTOR1,QUORUM1) | member(ACCEPTOR0,QUORUM2) | ~member(ACCEPTOR0,QUORUM0) | start(PROPOSER1) | ~member(ACCEPTOR1,QUORUM0) | ~member(ACCEPTOR2,QUORUM1) | didNotPromise(ACCEPTOR1) | ~member(ACCEPTOR1,QUORUM2) | member(ACCEPTOR2,QUORUM0) | ~member(ACCEPTOR0,QUORUM1) | (exists PROPOSER0. ((chosenAt(QUORUM1,PROPOSER0) | chosenAt(QUORUM2,PROPOSER0) | chosenAt(QUORUM0,PROPOSER0)) & PROPOSER0 ~= PROPOSER1)) | (QUORUM0 = QUORUM2 | ACCEPTOR0 = ACCEPTOR1 | QUORUM0 = QUORUM1 | QUORUM1 = QUORUM2 | ACCEPTOR1 = ACCEPTOR2 | ACCEPTOR0 = ACCEPTOR2)
qcost : 31



[QRM NOTE]: Time elapsed since start: 7.521 seconds

[QRM NOTE]: Time elapsed since last: 0.459 seconds

[QRM NOTE]: Peak memory: 3267747 bytes


======================================================================================================

	[MIN]: Minimization on [ivybench/sym_quorum/ivy/simple-election: acceptor=3,proposer=3]

======================================================================================================


New level: 1
 pending : [3, 5, 7, 8, 10, 13, 14, 15, 16, 17, 18, 19, 21, 22, 23, 24, 26, 27, 28, 29, 30, 31, 32, 33, 37, 38, 39, 40, 41, 42, 43, 47, 48, 49]
 solution : [9]


Before reduction : 
 pending  : [3, 5, 7, 8, 10, 13, 14, 15, 16, 17, 18, 19, 21, 22, 23, 24, 26, 27, 28, 29, 30, 31, 32, 33, 37, 38, 39, 40, 41, 42, 43, 47, 48, 49]
 solution : [9]

Essensial at level 1 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 1048576), (4, -1), (5, 1048576), (6, -1), (7, 134217728), (8, 17179869184), (9, -1), (10, 17179869184), (11, -1), (12, -1), (13, 2147483648), (14, 16777216), (15, 8388608), (16, 524288), (17, 67108864), (18, 33554432), (19, 1114112), (20, -1), (21, 1073741824), (22, 262144), (23, 134217728), (24, 1073741824), (25, -1), (26, 4294967296), (27, 4194304), (28, 4294967296), (29, 1048576), (30, 4194304), (31, 16384), (32, 2147483648), (33, 32768), (34, -1), (35, -1), (36, -1), (37, 16384), (38, 268435456), (39, 4194304), (40, 1073741824), (41, 134217728), (42, 524288), (43, 524288), (44, -1), (45, -1), (46, -1), (47, 67108864), (48, 16777216), (49, 67108864), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 1048576), (4, -1), (5, 1048576), (6, -1), (7, 134217728), (8, 17179869184), (9, -1), (10, 17179869184), (11, -1), (12, -1), (13, 2147483648), (14, 16777216), (15, 8388608), (16, 524288), (17, 67108864), (18, 33554432), (19, 1114112), (20, -1), (21, 1073741824), (22, 262144), (23, 134217728), (24, 1073741824), (25, -1), (26, 4294967296), (27, 4194304), (28, 4294967296), (29, 1048576), (30, 4194304), (31, 16384), (32, 2147483648), (33, 32768), (34, -1), (35, -1), (36, -1), (37, 16384), (38, 268435456), (39, 4194304), (40, 1073741824), (41, 134217728), (42, 524288), (43, 524288), (44, -1), (45, -1), (46, -1), (47, 67108864), (48, 16777216), (49, 67108864), (50, -1), (51, -1), (52, -1)]

Covered at level 1 : set()

After reduction : 
 pending  : [3, 5, 7, 8, 10, 13, 14, 15, 16, 17, 18, 19, 21, 22, 23, 24, 26, 27, 28, 29, 30, 31, 32, 33, 37, 38, 39, 40, 41, 42, 43, 47, 48, 49]
 solution : [9]


Solution : [9] has cost 6.


Decide in level 1 among pending : [3, 5, 7, 8, 10, 13, 14, 15, 16, 17, 18, 19, 21, 22, 23, 24, 26, 27, 28, 29, 30, 31, 32, 33, 37, 38, 39, 40, 41, 42, 43, 47, 48, 49]

Coverage : [(0, -1), (1, -1), (2, -1), (3, 1048576), (4, -1), (5, 1048576), (6, -1), (7, 134217728), (8, 17179869184), (9, -1), (10, 17179869184), (11, -1), (12, -1), (13, 2147483648), (14, 16777216), (15, 8388608), (16, 524288), (17, 67108864), (18, 33554432), (19, 1114112), (20, -1), (21, 1073741824), (22, 262144), (23, 134217728), (24, 1073741824), (25, -1), (26, 4294967296), (27, 4194304), (28, 4294967296), (29, 1048576), (30, 4194304), (31, 16384), (32, 2147483648), (33, 32768), (34, -1), (35, -1), (36, -1), (37, 16384), (38, 268435456), (39, 4194304), (40, 1073741824), (41, 134217728), (42, 524288), (43, 524288), (44, -1), (45, -1), (46, -1), (47, 67108864), (48, 16777216), (49, 67108864), (50, -1), (51, -1), (52, -1)]

Decide 8 with phase True at level 1

After decision at level 1
 pending : [3, 5, 7, 10, 13, 14, 15, 16, 17, 18, 19, 21, 22, 23, 24, 26, 27, 28, 29, 30, 31, 32, 33, 37, 38, 39, 40, 41, 42, 43, 47, 48, 49]
 solution : [9, 8]


New level: 2
 pending : [3, 5, 7, 10, 13, 14, 15, 16, 17, 18, 19, 21, 22, 23, 24, 26, 27, 28, 29, 30, 31, 32, 33, 37, 38, 39, 40, 41, 42, 43, 47, 48, 49]
 solution : [9, 8]


Before reduction : 
 pending  : [3, 5, 7, 10, 13, 14, 15, 16, 17, 18, 19, 21, 22, 23, 24, 26, 27, 28, 29, 30, 31, 32, 33, 37, 38, 39, 40, 41, 42, 43, 47, 48, 49]
 solution : [9, 8]

Essensial at level 2 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 1048576), (4, -1), (5, 1048576), (6, -1), (7, 134217728), (8, 17179869184), (9, -1), (10, 17179869184), (11, -1), (12, -1), (13, 2147483648), (14, 16777216), (15, 8388608), (16, 524288), (17, 67108864), (18, 33554432), (19, 1114112), (20, -1), (21, 1073741824), (22, 262144), (23, 134217728), (24, 1073741824), (25, -1), (26, 4294967296), (27, 4194304), (28, 4294967296), (29, 1048576), (30, 4194304), (31, 16384), (32, 2147483648), (33, 32768), (34, -1), (35, -1), (36, -1), (37, 16384), (38, 268435456), (39, 4194304), (40, 1073741824), (41, 134217728), (42, 524288), (43, 524288), (44, -1), (45, -1), (46, -1), (47, 67108864), (48, 16777216), (49, 67108864), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 524288), (4, -1), (5, 524288), (6, -1), (7, 67108864), (8, -1), (9, -1), (10, 4294967296), (11, -1), (12, -1), (13, 1073741824), (14, 8388608), (15, 4194304), (16, 262144), (17, 33554432), (18, 16777216), (19, 557056), (20, -1), (21, 536870912), (22, 131072), (23, 67108864), (24, 268435456), (25, -1), (26, 536870912), (27, 2097152), (28, 2147483648), (29, 524288), (30, 1048576), (31, 8192), (32, 536870912), (33, 8192), (34, -1), (35, -1), (36, -1), (37, 8192), (38, 67108864), (39, 2097152), (40, 134217728), (41, 67108864), (42, 262144), (43, 262144), (44, -1), (45, -1), (46, -1), (47, 33554432), (48, 8388608), (49, 33554432), (50, -1), (51, -1), (52, -1)]

Covered at level 2 : set()

After reduction : 
 pending  : [3, 5, 7, 10, 13, 14, 15, 16, 17, 18, 19, 21, 22, 23, 24, 26, 27, 28, 29, 30, 31, 32, 33, 37, 38, 39, 40, 41, 42, 43, 47, 48, 49]
 solution : [9, 8]


Solution : [9, 8] has cost 9.


Decide in level 2 among pending : [3, 5, 7, 10, 13, 14, 15, 16, 17, 18, 19, 21, 22, 23, 24, 26, 27, 28, 29, 30, 31, 32, 33, 37, 38, 39, 40, 41, 42, 43, 47, 48, 49]

Coverage : [(0, -1), (1, -1), (2, -1), (3, 524288), (4, -1), (5, 524288), (6, -1), (7, 67108864), (8, -1), (9, -1), (10, 4294967296), (11, -1), (12, -1), (13, 1073741824), (14, 8388608), (15, 4194304), (16, 262144), (17, 33554432), (18, 16777216), (19, 557056), (20, -1), (21, 536870912), (22, 131072), (23, 67108864), (24, 268435456), (25, -1), (26, 536870912), (27, 2097152), (28, 2147483648), (29, 524288), (30, 1048576), (31, 8192), (32, 536870912), (33, 8192), (34, -1), (35, -1), (36, -1), (37, 8192), (38, 67108864), (39, 2097152), (40, 134217728), (41, 67108864), (42, 262144), (43, 262144), (44, -1), (45, -1), (46, -1), (47, 33554432), (48, 8388608), (49, 33554432), (50, -1), (51, -1), (52, -1)]

Decide 10 with phase True at level 2

After decision at level 2
 pending : [3, 5, 7, 13, 14, 15, 16, 17, 18, 19, 21, 22, 23, 24, 26, 27, 28, 29, 30, 31, 32, 33, 37, 38, 39, 40, 41, 42, 43, 47, 48, 49]
 solution : [9, 8, 10]


New level: 3
 pending : [3, 5, 7, 13, 14, 15, 16, 17, 18, 19, 21, 22, 23, 24, 26, 27, 28, 29, 30, 31, 32, 33, 37, 38, 39, 40, 41, 42, 43, 47, 48, 49]
 solution : [9, 8, 10]


Before reduction : 
 pending  : [3, 5, 7, 13, 14, 15, 16, 17, 18, 19, 21, 22, 23, 24, 26, 27, 28, 29, 30, 31, 32, 33, 37, 38, 39, 40, 41, 42, 43, 47, 48, 49]
 solution : [9, 8, 10]

Essensial at level 3 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 524288), (4, -1), (5, 524288), (6, -1), (7, 67108864), (8, -1), (9, -1), (10, 4294967296), (11, -1), (12, -1), (13, 1073741824), (14, 8388608), (15, 4194304), (16, 262144), (17, 33554432), (18, 16777216), (19, 557056), (20, -1), (21, 536870912), (22, 131072), (23, 67108864), (24, 268435456), (25, -1), (26, 536870912), (27, 2097152), (28, 2147483648), (29, 524288), (30, 1048576), (31, 8192), (32, 536870912), (33, 8192), (34, -1), (35, -1), (36, -1), (37, 8192), (38, 67108864), (39, 2097152), (40, 134217728), (41, 67108864), (42, 262144), (43, 262144), (44, -1), (45, -1), (46, -1), (47, 33554432), (48, 8388608), (49, 33554432), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 131072), (4, -1), (5, 524288), (6, -1), (7, 67108864), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, 268435456), (14, 2097152), (15, 1048576), (16, 65536), (17, 8388608), (18, 4194304), (19, 139264), (20, -1), (21, 134217728), (22, 32768), (23, 67108864), (24, 268435456), (25, -1), (26, 536870912), (27, 524288), (28, 536870912), (29, 524288), (30, 1048576), (31, 8192), (32, 536870912), (33, 8192), (34, -1), (35, -1), (36, -1), (37, 8192), (38, 33554432), (39, 524288), (40, 134217728), (41, 67108864), (42, 262144), (43, 262144), (44, -1), (45, -1), (46, -1), (47, 33554432), (48, 8388608), (49, 33554432), (50, -1), (51, -1), (52, -1)]

Covered at level 3 : set()

After reduction : 
 pending  : [3, 5, 7, 13, 14, 15, 16, 17, 18, 19, 21, 22, 23, 24, 26, 27, 28, 29, 30, 31, 32, 33, 37, 38, 39, 40, 41, 42, 43, 47, 48, 49]
 solution : [9, 8, 10]


Solution : [9, 8, 10] has cost 14.


Decide in level 3 among pending : [3, 5, 7, 13, 14, 15, 16, 17, 18, 19, 21, 22, 23, 24, 26, 27, 28, 29, 30, 31, 32, 33, 37, 38, 39, 40, 41, 42, 43, 47, 48, 49]

Coverage : [(0, -1), (1, -1), (2, -1), (3, 131072), (4, -1), (5, 524288), (6, -1), (7, 67108864), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, 268435456), (14, 2097152), (15, 1048576), (16, 65536), (17, 8388608), (18, 4194304), (19, 139264), (20, -1), (21, 134217728), (22, 32768), (23, 67108864), (24, 268435456), (25, -1), (26, 536870912), (27, 524288), (28, 536870912), (29, 524288), (30, 1048576), (31, 8192), (32, 536870912), (33, 8192), (34, -1), (35, -1), (36, -1), (37, 8192), (38, 33554432), (39, 524288), (40, 134217728), (41, 67108864), (42, 262144), (43, 262144), (44, -1), (45, -1), (46, -1), (47, 33554432), (48, 8388608), (49, 33554432), (50, -1), (51, -1), (52, -1)]

Decide 26 with phase True at level 3

After decision at level 3
 pending : [3, 5, 7, 13, 14, 15, 16, 17, 18, 19, 21, 22, 23, 24, 27, 28, 29, 30, 31, 32, 33, 37, 38, 39, 40, 41, 42, 43, 47, 48, 49]
 solution : [9, 8, 10, 26]


New level: 4
 pending : [3, 5, 7, 13, 14, 15, 16, 17, 18, 19, 21, 22, 23, 24, 27, 28, 29, 30, 31, 32, 33, 37, 38, 39, 40, 41, 42, 43, 47, 48, 49]
 solution : [9, 8, 10, 26]


Before reduction : 
 pending  : [3, 5, 7, 13, 14, 15, 16, 17, 18, 19, 21, 22, 23, 24, 27, 28, 29, 30, 31, 32, 33, 37, 38, 39, 40, 41, 42, 43, 47, 48, 49]
 solution : [9, 8, 10, 26]

Essensial at level 4 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 131072), (4, -1), (5, 524288), (6, -1), (7, 67108864), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, 268435456), (14, 2097152), (15, 1048576), (16, 65536), (17, 8388608), (18, 4194304), (19, 139264), (20, -1), (21, 134217728), (22, 32768), (23, 67108864), (24, 268435456), (25, -1), (26, 536870912), (27, 524288), (28, 536870912), (29, 524288), (30, 1048576), (31, 8192), (32, 536870912), (33, 8192), (34, -1), (35, -1), (36, -1), (37, 8192), (38, 33554432), (39, 524288), (40, 134217728), (41, 67108864), (42, 262144), (43, 262144), (44, -1), (45, -1), (46, -1), (47, 33554432), (48, 8388608), (49, 33554432), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 131072), (4, -1), (5, 524288), (6, -1), (7, 67108864), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, 268435456), (14, 2097152), (15, 1048576), (16, 65536), (17, 8388608), (18, 4194304), (19, 139264), (20, -1), (21, 134217728), (22, 32768), (23, 67108864), (24, 134217728), (25, -1), (26, -1), (27, 524288), (28, 536870912), (29, 524288), (30, 524288), (31, 8192), (32, 268435456), (33, 4096), (34, -1), (35, -1), (36, -1), (37, 8192), (38, 33554432), (39, 524288), (40, 134217728), (41, 67108864), (42, 262144), (43, 262144), (44, -1), (45, -1), (46, -1), (47, 33554432), (48, 8388608), (49, 33554432), (50, -1), (51, -1), (52, -1)]

Covered at level 4 : set()

After reduction : 
 pending  : [3, 5, 7, 13, 14, 15, 16, 17, 18, 19, 21, 22, 23, 24, 27, 28, 29, 30, 31, 32, 33, 37, 38, 39, 40, 41, 42, 43, 47, 48, 49]
 solution : [9, 8, 10, 26]


Solution : [9, 8, 10, 26] has cost 18.


Decide in level 4 among pending : [3, 5, 7, 13, 14, 15, 16, 17, 18, 19, 21, 22, 23, 24, 27, 28, 29, 30, 31, 32, 33, 37, 38, 39, 40, 41, 42, 43, 47, 48, 49]

Coverage : [(0, -1), (1, -1), (2, -1), (3, 131072), (4, -1), (5, 524288), (6, -1), (7, 67108864), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, 268435456), (14, 2097152), (15, 1048576), (16, 65536), (17, 8388608), (18, 4194304), (19, 139264), (20, -1), (21, 134217728), (22, 32768), (23, 67108864), (24, 134217728), (25, -1), (26, -1), (27, 524288), (28, 536870912), (29, 524288), (30, 524288), (31, 8192), (32, 268435456), (33, 4096), (34, -1), (35, -1), (36, -1), (37, 8192), (38, 33554432), (39, 524288), (40, 134217728), (41, 67108864), (42, 262144), (43, 262144), (44, -1), (45, -1), (46, -1), (47, 33554432), (48, 8388608), (49, 33554432), (50, -1), (51, -1), (52, -1)]

Decide 28 with phase True at level 4

After decision at level 4
 pending : [3, 5, 7, 13, 14, 15, 16, 17, 18, 19, 21, 22, 23, 24, 27, 29, 30, 31, 32, 33, 37, 38, 39, 40, 41, 42, 43, 47, 48, 49]
 solution : [9, 8, 10, 26, 28]


New level: 5
 pending : [3, 5, 7, 13, 14, 15, 16, 17, 18, 19, 21, 22, 23, 24, 27, 29, 30, 31, 32, 33, 37, 38, 39, 40, 41, 42, 43, 47, 48, 49]
 solution : [9, 8, 10, 26, 28]


Before reduction : 
 pending  : [3, 5, 7, 13, 14, 15, 16, 17, 18, 19, 21, 22, 23, 24, 27, 29, 30, 31, 32, 33, 37, 38, 39, 40, 41, 42, 43, 47, 48, 49]
 solution : [9, 8, 10, 26, 28]

Essensial at level 5 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 131072), (4, -1), (5, 524288), (6, -1), (7, 67108864), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, 268435456), (14, 2097152), (15, 1048576), (16, 65536), (17, 8388608), (18, 4194304), (19, 139264), (20, -1), (21, 134217728), (22, 32768), (23, 67108864), (24, 134217728), (25, -1), (26, -1), (27, 524288), (28, 536870912), (29, 524288), (30, 524288), (31, 8192), (32, 268435456), (33, 4096), (34, -1), (35, -1), (36, -1), (37, 8192), (38, 33554432), (39, 524288), (40, 134217728), (41, 67108864), (42, 262144), (43, 262144), (44, -1), (45, -1), (46, -1), (47, 33554432), (48, 8388608), (49, 33554432), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 0), (4, -1), (5, 131072), (6, -1), (7, 67108864), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, 0), (14, 0), (15, 0), (16, 0), (17, 0), (18, 0), (19, 0), (20, -1), (21, 0), (22, 0), (23, 67108864), (24, 134217728), (25, -1), (26, -1), (27, 0), (28, -1), (29, 262144), (30, 524288), (31, 4096), (32, 268435456), (33, 4096), (34, -1), (35, -1), (36, -1), (37, 2048), (38, 1024), (39, 0), (40, 2048), (41, 33554432), (42, 65536), (43, 65536), (44, -1), (45, -1), (46, -1), (47, 16777216), (48, 2097152), (49, 8388608), (50, -1), (51, -1), (52, -1)]

Covered at level 5 : {3, 39, 13, 14, 15, 16, 17, 18, 19, 21, 22, 27}

After reduction : 
 pending  : [5, 7, 23, 24, 29, 30, 31, 32, 33, 37, 38, 40, 41, 42, 43, 47, 48, 49]
 solution : [9, 8, 10, 26, 28]


Before reduction : 
 pending  : [5, 7, 23, 24, 29, 30, 31, 32, 33, 37, 38, 40, 41, 42, 43, 47, 48, 49]
 solution : [9, 8, 10, 26, 28]

Essensial at level 5 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 0), (4, -1), (5, 131072), (6, -1), (7, 67108864), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, 0), (14, 0), (15, 0), (16, 0), (17, 0), (18, 0), (19, 0), (20, -1), (21, 0), (22, 0), (23, 67108864), (24, 134217728), (25, -1), (26, -1), (27, 0), (28, -1), (29, 262144), (30, 524288), (31, 4096), (32, 268435456), (33, 4096), (34, -1), (35, -1), (36, -1), (37, 2048), (38, 1024), (39, 0), (40, 2048), (41, 33554432), (42, 65536), (43, 65536), (44, -1), (45, -1), (46, -1), (47, 16777216), (48, 2097152), (49, 8388608), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 131072), (6, -1), (7, 67108864), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, 67108864), (24, 134217728), (25, -1), (26, -1), (27, -1), (28, -1), (29, 262144), (30, 524288), (31, 4096), (32, 268435456), (33, 4096), (34, -1), (35, -1), (36, -1), (37, 2048), (38, 1024), (39, -1), (40, 2048), (41, 33554432), (42, 65536), (43, 65536), (44, -1), (45, -1), (46, -1), (47, 16777216), (48, 2097152), (49, 8388608), (50, -1), (51, -1), (52, -1)]

Covered at level 5 : set()

After reduction : 
 pending  : [5, 7, 23, 24, 29, 30, 31, 32, 33, 37, 38, 40, 41, 42, 43, 47, 48, 49]
 solution : [9, 8, 10, 26, 28]


Solution : [9, 8, 10, 26, 28] has cost 22.


Decide in level 5 among pending : [5, 7, 23, 24, 29, 30, 31, 32, 33, 37, 38, 40, 41, 42, 43, 47, 48, 49]

Coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 131072), (6, -1), (7, 67108864), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, 67108864), (24, 134217728), (25, -1), (26, -1), (27, -1), (28, -1), (29, 262144), (30, 524288), (31, 4096), (32, 268435456), (33, 4096), (34, -1), (35, -1), (36, -1), (37, 2048), (38, 1024), (39, -1), (40, 2048), (41, 33554432), (42, 65536), (43, 65536), (44, -1), (45, -1), (46, -1), (47, 16777216), (48, 2097152), (49, 8388608), (50, -1), (51, -1), (52, -1)]

Decide 32 with phase True at level 5

After decision at level 5
 pending : [5, 7, 23, 24, 29, 30, 31, 33, 37, 38, 40, 41, 42, 43, 47, 48, 49]
 solution : [9, 8, 10, 26, 28, 32]


New level: 6
 pending : [5, 7, 23, 24, 29, 30, 31, 33, 37, 38, 40, 41, 42, 43, 47, 48, 49]
 solution : [9, 8, 10, 26, 28, 32]


Before reduction : 
 pending  : [5, 7, 23, 24, 29, 30, 31, 33, 37, 38, 40, 41, 42, 43, 47, 48, 49]
 solution : [9, 8, 10, 26, 28, 32]

Essensial at level 6 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 131072), (6, -1), (7, 67108864), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, 67108864), (24, 134217728), (25, -1), (26, -1), (27, -1), (28, -1), (29, 262144), (30, 524288), (31, 4096), (32, 268435456), (33, 4096), (34, -1), (35, -1), (36, -1), (37, 2048), (38, 1024), (39, -1), (40, 2048), (41, 33554432), (42, 65536), (43, 65536), (44, -1), (45, -1), (46, -1), (47, 16777216), (48, 2097152), (49, 8388608), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 32768), (6, -1), (7, 67108864), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, 67108864), (24, 2048), (25, -1), (26, -1), (27, -1), (28, -1), (29, 65536), (30, 0), (31, 1024), (32, -1), (33, 0), (34, -1), (35, -1), (36, -1), (37, 512), (38, 512), (39, -1), (40, 0), (41, 8388608), (42, 16384), (43, 16384), (44, -1), (45, -1), (46, -1), (47, 4194304), (48, 524288), (49, 2097152), (50, -1), (51, -1), (52, -1)]

Covered at level 6 : {40, 33, 30}

After reduction : 
 pending  : [5, 7, 23, 24, 29, 31, 37, 38, 41, 42, 43, 47, 48, 49]
 solution : [9, 8, 10, 26, 28, 32]


Before reduction : 
 pending  : [5, 7, 23, 24, 29, 31, 37, 38, 41, 42, 43, 47, 48, 49]
 solution : [9, 8, 10, 26, 28, 32]

Essensial at level 6 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 32768), (6, -1), (7, 67108864), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, 67108864), (24, 2048), (25, -1), (26, -1), (27, -1), (28, -1), (29, 65536), (30, 0), (31, 1024), (32, -1), (33, 0), (34, -1), (35, -1), (36, -1), (37, 512), (38, 512), (39, -1), (40, 0), (41, 8388608), (42, 16384), (43, 16384), (44, -1), (45, -1), (46, -1), (47, 4194304), (48, 524288), (49, 2097152), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 32768), (6, -1), (7, 67108864), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, 67108864), (24, 2048), (25, -1), (26, -1), (27, -1), (28, -1), (29, 65536), (30, -1), (31, 1024), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, 512), (38, 512), (39, -1), (40, -1), (41, 8388608), (42, 16384), (43, 16384), (44, -1), (45, -1), (46, -1), (47, 4194304), (48, 524288), (49, 2097152), (50, -1), (51, -1), (52, -1)]

Covered at level 6 : set()

After reduction : 
 pending  : [5, 7, 23, 24, 29, 31, 37, 38, 41, 42, 43, 47, 48, 49]
 solution : [9, 8, 10, 26, 28, 32]


Solution : [9, 8, 10, 26, 28, 32] has cost 35.


Decide in level 6 among pending : [5, 7, 23, 24, 29, 31, 37, 38, 41, 42, 43, 47, 48, 49]

Coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 32768), (6, -1), (7, 67108864), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, 67108864), (24, 2048), (25, -1), (26, -1), (27, -1), (28, -1), (29, 65536), (30, -1), (31, 1024), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, 512), (38, 512), (39, -1), (40, -1), (41, 8388608), (42, 16384), (43, 16384), (44, -1), (45, -1), (46, -1), (47, 4194304), (48, 524288), (49, 2097152), (50, -1), (51, -1), (52, -1)]

Decide 7 with phase True at level 6

After decision at level 6
 pending : [5, 23, 24, 29, 31, 37, 38, 41, 42, 43, 47, 48, 49]
 solution : [9, 8, 10, 26, 28, 32, 7]


New level: 7
 pending : [5, 23, 24, 29, 31, 37, 38, 41, 42, 43, 47, 48, 49]
 solution : [9, 8, 10, 26, 28, 32, 7]


Before reduction : 
 pending  : [5, 23, 24, 29, 31, 37, 38, 41, 42, 43, 47, 48, 49]
 solution : [9, 8, 10, 26, 28, 32, 7]

Essensial at level 7 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 32768), (6, -1), (7, 67108864), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, 67108864), (24, 2048), (25, -1), (26, -1), (27, -1), (28, -1), (29, 65536), (30, -1), (31, 1024), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, 512), (38, 512), (39, -1), (40, -1), (41, 8388608), (42, 16384), (43, 16384), (44, -1), (45, -1), (46, -1), (47, 4194304), (48, 524288), (49, 2097152), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 0), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, 0), (24, 0), (25, -1), (26, -1), (27, -1), (28, -1), (29, 0), (30, -1), (31, 0), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, 0), (38, 0), (39, -1), (40, -1), (41, 0), (42, 0), (43, 0), (44, -1), (45, -1), (46, -1), (47, 0), (48, 0), (49, 0), (50, -1), (51, -1), (52, -1)]

Covered at level 7 : {5, 37, 38, 41, 42, 43, 47, 48, 49, 23, 24, 29, 31}

After reduction : 
 pending  : []
 solution : [9, 8, 10, 26, 28, 32, 7]


Before reduction : 
 pending  : []
 solution : [9, 8, 10, 26, 28, 32, 7]

Essensial at level 7 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 0), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, 0), (24, 0), (25, -1), (26, -1), (27, -1), (28, -1), (29, 0), (30, -1), (31, 0), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, 0), (38, 0), (39, -1), (40, -1), (41, 0), (42, 0), (43, 0), (44, -1), (45, -1), (46, -1), (47, 0), (48, 0), (49, 0), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 7 : set()

After reduction : 
 pending  : []
 solution : [9, 8, 10, 26, 28, 32, 7]


Solution : [9, 8, 10, 26, 28, 32, 7] has cost 39.


Before backtrack at level 7
 pending : []
 solution : [9, 8, 10, 26, 28, 32, 7]

After backtrack at level 7
 pending : [5, 23, 24, 29, 31, 37, 38, 41, 42, 43, 47, 48, 49]
 solution : [9, 8, 10, 26, 28, 32, 7]


Invert decision for 7 at level 6


New level: 7
 pending : [5, 23, 24, 29, 31, 37, 38, 41, 42, 43, 47, 48, 49]
 solution : [9, 8, 10, 26, 28, 32]


Before reduction : 
 pending  : [5, 23, 24, 29, 31, 37, 38, 41, 42, 43, 47, 48, 49]
 solution : [9, 8, 10, 26, 28, 32]

Essensial at level 7 : {23}

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 0), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, 0), (25, -1), (26, -1), (27, -1), (28, -1), (29, 0), (30, -1), (31, 0), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, 0), (38, 0), (39, -1), (40, -1), (41, 0), (42, 0), (43, 0), (44, -1), (45, -1), (46, -1), (47, 0), (48, 0), (49, 0), (50, -1), (51, -1), (52, -1)]

Covered at level 7 : {37, 5, 38, 41, 42, 43, 47, 48, 49, 24, 29, 31}

After reduction : 
 pending  : []
 solution : [9, 8, 10, 26, 28, 32, 23]


Before reduction : 
 pending  : []
 solution : [9, 8, 10, 26, 28, 32, 23]

Essensial at level 7 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 0), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, 0), (25, -1), (26, -1), (27, -1), (28, -1), (29, 0), (30, -1), (31, 0), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, 0), (38, 0), (39, -1), (40, -1), (41, 0), (42, 0), (43, 0), (44, -1), (45, -1), (46, -1), (47, 0), (48, 0), (49, 0), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 7 : set()

After reduction : 
 pending  : []
 solution : [9, 8, 10, 26, 28, 32, 23]


Solution : [9, 8, 10, 26, 28, 32, 23] has cost 42.


Before backtrack at level 7
 pending : []
 solution : [9, 8, 10, 26, 28, 32, 23]

After backtrack at level 7
 pending : [23, 5, 24, 29, 31, 37, 38, 41, 42, 43, 47, 48, 49]
 solution : [9, 8, 10, 26, 28, 32]


Before backtrack at level 6
 pending : [23, 5, 24, 29, 31, 37, 38, 41, 42, 43, 47, 48, 49]
 solution : [9, 8, 10, 26, 28, 32]

After backtrack at level 6
 pending : [23, 5, 24, 29, 31, 37, 38, 41, 42, 43, 47, 48, 49, 30, 33, 40, 7]
 solution : [9, 8, 10, 26, 28, 32]


Invert decision for 32 at level 5


New level: 6
 pending : [23, 5, 24, 29, 31, 37, 38, 41, 42, 43, 47, 48, 49, 30, 33, 40, 7]
 solution : [9, 8, 10, 26, 28]


Before reduction : 
 pending  : [23, 5, 24, 29, 31, 37, 38, 41, 42, 43, 47, 48, 49, 30, 33, 40, 7]
 solution : [9, 8, 10, 26, 28]

Essensial at level 6 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 131072), (6, -1), (7, 67108864), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, 67108864), (24, 134217728), (25, -1), (26, -1), (27, -1), (28, -1), (29, 262144), (30, 524288), (31, 4096), (32, -1), (33, 4096), (34, -1), (35, -1), (36, -1), (37, 2048), (38, 1024), (39, -1), (40, 2048), (41, 33554432), (42, 65536), (43, 65536), (44, -1), (45, -1), (46, -1), (47, 16777216), (48, 2097152), (49, 8388608), (50, -1), (51, -1), (52, -1)]

Covered at level 6 : set()

After reduction : 
 pending  : [23, 5, 24, 29, 31, 37, 38, 41, 42, 43, 47, 48, 49, 30, 33, 40, 7]
 solution : [9, 8, 10, 26, 28]


Solution : [9, 8, 10, 26, 28] has cost 22.


Decide in level 6 among pending : [23, 5, 24, 29, 31, 37, 38, 41, 42, 43, 47, 48, 49, 30, 33, 40, 7]

Coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 131072), (6, -1), (7, 67108864), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, 67108864), (24, 134217728), (25, -1), (26, -1), (27, -1), (28, -1), (29, 262144), (30, 524288), (31, 4096), (32, -1), (33, 4096), (34, -1), (35, -1), (36, -1), (37, 2048), (38, 1024), (39, -1), (40, 2048), (41, 33554432), (42, 65536), (43, 65536), (44, -1), (45, -1), (46, -1), (47, 16777216), (48, 2097152), (49, 8388608), (50, -1), (51, -1), (52, -1)]

Decide 24 with phase True at level 6

After decision at level 6
 pending : [23, 5, 29, 31, 37, 38, 41, 42, 43, 47, 48, 49, 30, 33, 40, 7]
 solution : [9, 8, 10, 26, 28, 24]


New level: 7
 pending : [23, 5, 29, 31, 37, 38, 41, 42, 43, 47, 48, 49, 30, 33, 40, 7]
 solution : [9, 8, 10, 26, 28, 24]


Before reduction : 
 pending  : [23, 5, 29, 31, 37, 38, 41, 42, 43, 47, 48, 49, 30, 33, 40, 7]
 solution : [9, 8, 10, 26, 28, 24]

Essensial at level 7 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 131072), (6, -1), (7, 67108864), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, 67108864), (24, 134217728), (25, -1), (26, -1), (27, -1), (28, -1), (29, 262144), (30, 524288), (31, 4096), (32, -1), (33, 4096), (34, -1), (35, -1), (36, -1), (37, 2048), (38, 1024), (39, -1), (40, 2048), (41, 33554432), (42, 65536), (43, 65536), (44, -1), (45, -1), (46, -1), (47, 16777216), (48, 2097152), (49, 8388608), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 32768), (6, -1), (7, 16777216), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, 16777216), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, 65536), (30, 0), (31, 1024), (32, -1), (33, 0), (34, -1), (35, -1), (36, -1), (37, 512), (38, 512), (39, -1), (40, 0), (41, 16777216), (42, 16384), (43, 16384), (44, -1), (45, -1), (46, -1), (47, 8388608), (48, 524288), (49, 8388608), (50, -1), (51, -1), (52, -1)]

Covered at level 7 : {40, 33, 30}

After reduction : 
 pending  : [23, 5, 29, 31, 37, 38, 41, 42, 43, 47, 48, 49, 7]
 solution : [9, 8, 10, 26, 28, 24]


Before reduction : 
 pending  : [23, 5, 29, 31, 37, 38, 41, 42, 43, 47, 48, 49, 7]
 solution : [9, 8, 10, 26, 28, 24]

Essensial at level 7 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 32768), (6, -1), (7, 16777216), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, 16777216), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, 65536), (30, 0), (31, 1024), (32, -1), (33, 0), (34, -1), (35, -1), (36, -1), (37, 512), (38, 512), (39, -1), (40, 0), (41, 16777216), (42, 16384), (43, 16384), (44, -1), (45, -1), (46, -1), (47, 8388608), (48, 524288), (49, 8388608), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 32768), (6, -1), (7, 16777216), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, 16777216), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, 65536), (30, -1), (31, 1024), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, 512), (38, 512), (39, -1), (40, -1), (41, 16777216), (42, 16384), (43, 16384), (44, -1), (45, -1), (46, -1), (47, 8388608), (48, 524288), (49, 8388608), (50, -1), (51, -1), (52, -1)]

Covered at level 7 : set()

After reduction : 
 pending  : [23, 5, 29, 31, 37, 38, 41, 42, 43, 47, 48, 49, 7]
 solution : [9, 8, 10, 26, 28, 24]


Solution : [9, 8, 10, 26, 28, 24] has cost 29.


Decide in level 7 among pending : [23, 5, 29, 31, 37, 38, 41, 42, 43, 47, 48, 49, 7]

Coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 32768), (6, -1), (7, 16777216), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, 16777216), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, 65536), (30, -1), (31, 1024), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, 512), (38, 512), (39, -1), (40, -1), (41, 16777216), (42, 16384), (43, 16384), (44, -1), (45, -1), (46, -1), (47, 8388608), (48, 524288), (49, 8388608), (50, -1), (51, -1), (52, -1)]

Decide 23 with phase True at level 7

After decision at level 7
 pending : [5, 29, 31, 37, 38, 41, 42, 43, 47, 48, 49, 7]
 solution : [9, 8, 10, 26, 28, 24, 23]


New level: 8
 pending : [5, 29, 31, 37, 38, 41, 42, 43, 47, 48, 49, 7]
 solution : [9, 8, 10, 26, 28, 24, 23]


Before reduction : 
 pending  : [5, 29, 31, 37, 38, 41, 42, 43, 47, 48, 49, 7]
 solution : [9, 8, 10, 26, 28, 24, 23]

Essensial at level 8 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 32768), (6, -1), (7, 16777216), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, 16777216), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, 65536), (30, -1), (31, 1024), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, 512), (38, 512), (39, -1), (40, -1), (41, 16777216), (42, 16384), (43, 16384), (44, -1), (45, -1), (46, -1), (47, 8388608), (48, 524288), (49, 8388608), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 0), (6, -1), (7, 0), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, 0), (30, -1), (31, 0), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, 0), (38, 0), (39, -1), (40, -1), (41, 0), (42, 0), (43, 0), (44, -1), (45, -1), (46, -1), (47, 0), (48, 0), (49, 0), (50, -1), (51, -1), (52, -1)]

Covered at level 8 : {37, 5, 38, 7, 41, 42, 43, 47, 48, 49, 29, 31}

After reduction : 
 pending  : []
 solution : [9, 8, 10, 26, 28, 24, 23]


Before reduction : 
 pending  : []
 solution : [9, 8, 10, 26, 28, 24, 23]

Essensial at level 8 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 0), (6, -1), (7, 0), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, 0), (30, -1), (31, 0), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, 0), (38, 0), (39, -1), (40, -1), (41, 0), (42, 0), (43, 0), (44, -1), (45, -1), (46, -1), (47, 0), (48, 0), (49, 0), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 8 : set()

After reduction : 
 pending  : []
 solution : [9, 8, 10, 26, 28, 24, 23]


Solution : [9, 8, 10, 26, 28, 24, 23] has cost 36.


Before backtrack at level 8
 pending : []
 solution : [9, 8, 10, 26, 28, 24, 23]

After backtrack at level 8
 pending : [5, 29, 31, 37, 38, 41, 42, 43, 47, 48, 49, 7]
 solution : [9, 8, 10, 26, 28, 24, 23]


Invert decision for 23 at level 7


New level: 8
 pending : [5, 29, 31, 37, 38, 41, 42, 43, 47, 48, 49, 7]
 solution : [9, 8, 10, 26, 28, 24]


Before reduction : 
 pending  : [5, 29, 31, 37, 38, 41, 42, 43, 47, 48, 49, 7]
 solution : [9, 8, 10, 26, 28, 24]

Essensial at level 8 : {7}

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 0), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, 0), (30, -1), (31, 0), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, 0), (38, 0), (39, -1), (40, -1), (41, 0), (42, 0), (43, 0), (44, -1), (45, -1), (46, -1), (47, 0), (48, 0), (49, 0), (50, -1), (51, -1), (52, -1)]

Covered at level 8 : {37, 5, 38, 41, 42, 43, 47, 48, 49, 29, 31}

After reduction : 
 pending  : []
 solution : [9, 8, 10, 26, 28, 24, 7]


Before reduction : 
 pending  : []
 solution : [9, 8, 10, 26, 28, 24, 7]

Essensial at level 8 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 0), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, 0), (30, -1), (31, 0), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, 0), (38, 0), (39, -1), (40, -1), (41, 0), (42, 0), (43, 0), (44, -1), (45, -1), (46, -1), (47, 0), (48, 0), (49, 0), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 8 : set()

After reduction : 
 pending  : []
 solution : [9, 8, 10, 26, 28, 24, 7]


Solution : [9, 8, 10, 26, 28, 24, 7] has cost 33.


Before backtrack at level 8
 pending : []
 solution : [9, 8, 10, 26, 28, 24, 7]

After backtrack at level 8
 pending : [7, 5, 29, 31, 37, 38, 41, 42, 43, 47, 48, 49]
 solution : [9, 8, 10, 26, 28, 24]


Before backtrack at level 7
 pending : [7, 5, 29, 31, 37, 38, 41, 42, 43, 47, 48, 49]
 solution : [9, 8, 10, 26, 28, 24]

After backtrack at level 7
 pending : [7, 5, 29, 31, 37, 38, 41, 42, 43, 47, 48, 49, 30, 33, 40, 23]
 solution : [9, 8, 10, 26, 28, 24]


Invert decision for 24 at level 6


New level: 7
 pending : [7, 5, 29, 31, 37, 38, 41, 42, 43, 47, 48, 49, 30, 33, 40, 23]
 solution : [9, 8, 10, 26, 28]


Before reduction : 
 pending  : [7, 5, 29, 31, 37, 38, 41, 42, 43, 47, 48, 49, 30, 33, 40, 23]
 solution : [9, 8, 10, 26, 28]

Essensial at level 7 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 131072), (6, -1), (7, 67108864), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, 67108864), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, 262144), (30, 524288), (31, 4096), (32, -1), (33, 4096), (34, -1), (35, -1), (36, -1), (37, 2048), (38, 1024), (39, -1), (40, 2048), (41, 33554432), (42, 65536), (43, 65536), (44, -1), (45, -1), (46, -1), (47, 16777216), (48, 2097152), (49, 8388608), (50, -1), (51, -1), (52, -1)]

Covered at level 7 : set()

After reduction : 
 pending  : [7, 5, 29, 31, 37, 38, 41, 42, 43, 47, 48, 49, 30, 33, 40, 23]
 solution : [9, 8, 10, 26, 28]


Solution : [9, 8, 10, 26, 28] has cost 22.


Decide in level 7 among pending : [7, 5, 29, 31, 37, 38, 41, 42, 43, 47, 48, 49, 30, 33, 40, 23]

Coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 131072), (6, -1), (7, 67108864), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, 67108864), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, 262144), (30, 524288), (31, 4096), (32, -1), (33, 4096), (34, -1), (35, -1), (36, -1), (37, 2048), (38, 1024), (39, -1), (40, 2048), (41, 33554432), (42, 65536), (43, 65536), (44, -1), (45, -1), (46, -1), (47, 16777216), (48, 2097152), (49, 8388608), (50, -1), (51, -1), (52, -1)]

Decide 7 with phase True at level 7

After decision at level 7
 pending : [5, 29, 31, 37, 38, 41, 42, 43, 47, 48, 49, 30, 33, 40, 23]
 solution : [9, 8, 10, 26, 28, 7]


New level: 8
 pending : [5, 29, 31, 37, 38, 41, 42, 43, 47, 48, 49, 30, 33, 40, 23]
 solution : [9, 8, 10, 26, 28, 7]


Before reduction : 
 pending  : [5, 29, 31, 37, 38, 41, 42, 43, 47, 48, 49, 30, 33, 40, 23]
 solution : [9, 8, 10, 26, 28, 7]

Essensial at level 8 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 131072), (6, -1), (7, 67108864), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, 67108864), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, 262144), (30, 524288), (31, 4096), (32, -1), (33, 4096), (34, -1), (35, -1), (36, -1), (37, 2048), (38, 1024), (39, -1), (40, 2048), (41, 33554432), (42, 65536), (43, 65536), (44, -1), (45, -1), (46, -1), (47, 16777216), (48, 2097152), (49, 8388608), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 0), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, 0), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, 0), (30, 0), (31, 0), (32, -1), (33, 0), (34, -1), (35, -1), (36, -1), (37, 0), (38, 0), (39, -1), (40, 0), (41, 0), (42, 0), (43, 0), (44, -1), (45, -1), (46, -1), (47, 0), (48, 0), (49, 0), (50, -1), (51, -1), (52, -1)]

Covered at level 8 : {33, 37, 5, 38, 40, 41, 42, 43, 47, 48, 49, 23, 29, 30, 31}

After reduction : 
 pending  : []
 solution : [9, 8, 10, 26, 28, 7]


Before reduction : 
 pending  : []
 solution : [9, 8, 10, 26, 28, 7]

Essensial at level 8 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 0), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, 0), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, 0), (30, 0), (31, 0), (32, -1), (33, 0), (34, -1), (35, -1), (36, -1), (37, 0), (38, 0), (39, -1), (40, 0), (41, 0), (42, 0), (43, 0), (44, -1), (45, -1), (46, -1), (47, 0), (48, 0), (49, 0), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 8 : set()

After reduction : 
 pending  : []
 solution : [9, 8, 10, 26, 28, 7]


Solution : [9, 8, 10, 26, 28, 7] has cost 26.


Before backtrack at level 8
 pending : []
 solution : [9, 8, 10, 26, 28, 7]

After backtrack at level 8
 pending : [5, 29, 31, 37, 38, 41, 42, 43, 47, 48, 49, 30, 33, 40, 23]
 solution : [9, 8, 10, 26, 28, 7]


Invert decision for 7 at level 7


New level: 8
 pending : [5, 29, 31, 37, 38, 41, 42, 43, 47, 48, 49, 30, 33, 40, 23]
 solution : [9, 8, 10, 26, 28]


Before reduction : 
 pending  : [5, 29, 31, 37, 38, 41, 42, 43, 47, 48, 49, 30, 33, 40, 23]
 solution : [9, 8, 10, 26, 28]

Essensial at level 8 : {23}

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 0), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, 0), (30, 0), (31, 0), (32, -1), (33, 0), (34, -1), (35, -1), (36, -1), (37, 0), (38, 0), (39, -1), (40, 0), (41, 0), (42, 0), (43, 0), (44, -1), (45, -1), (46, -1), (47, 0), (48, 0), (49, 0), (50, -1), (51, -1), (52, -1)]

Covered at level 8 : {33, 37, 5, 38, 40, 41, 42, 43, 47, 48, 49, 29, 30, 31}

After reduction : 
 pending  : []
 solution : [9, 8, 10, 26, 28, 23]


Before reduction : 
 pending  : []
 solution : [9, 8, 10, 26, 28, 23]

Essensial at level 8 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 0), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, 0), (30, 0), (31, 0), (32, -1), (33, 0), (34, -1), (35, -1), (36, -1), (37, 0), (38, 0), (39, -1), (40, 0), (41, 0), (42, 0), (43, 0), (44, -1), (45, -1), (46, -1), (47, 0), (48, 0), (49, 0), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 8 : set()

After reduction : 
 pending  : []
 solution : [9, 8, 10, 26, 28, 23]


Solution : [9, 8, 10, 26, 28, 23] has cost 29.


Before backtrack at level 8
 pending : []
 solution : [9, 8, 10, 26, 28, 23]

After backtrack at level 8
 pending : [23, 5, 29, 31, 37, 38, 41, 42, 43, 47, 48, 49, 30, 33, 40]
 solution : [9, 8, 10, 26, 28]


Before backtrack at level 7
 pending : [23, 5, 29, 31, 37, 38, 41, 42, 43, 47, 48, 49, 30, 33, 40]
 solution : [9, 8, 10, 26, 28]

After backtrack at level 7
 pending : [23, 5, 29, 31, 37, 38, 41, 42, 43, 47, 48, 49, 30, 33, 40, 7]
 solution : [9, 8, 10, 26, 28]


Before backtrack at level 6
 pending : [23, 5, 29, 31, 37, 38, 41, 42, 43, 47, 48, 49, 30, 33, 40, 7]
 solution : [9, 8, 10, 26, 28]

After backtrack at level 6
 pending : [23, 5, 29, 31, 37, 38, 41, 42, 43, 47, 48, 49, 30, 33, 40, 7, 24]
 solution : [9, 8, 10, 26, 28]


Before backtrack at level 5
 pending : [23, 5, 29, 31, 37, 38, 41, 42, 43, 47, 48, 49, 30, 33, 40, 7, 24]
 solution : [9, 8, 10, 26, 28]

After backtrack at level 5
 pending : [23, 5, 29, 31, 37, 38, 41, 42, 43, 47, 48, 49, 30, 33, 40, 7, 24, 3, 13, 14, 15, 16, 17, 18, 19, 21, 22, 27, 39, 32]
 solution : [9, 8, 10, 26, 28]


Invert decision for 28 at level 4


New level: 5
 pending : [23, 5, 29, 31, 37, 38, 41, 42, 43, 47, 48, 49, 30, 33, 40, 7, 24, 3, 13, 14, 15, 16, 17, 18, 19, 21, 22, 27, 39, 32]
 solution : [9, 8, 10, 26]


Before reduction : 
 pending  : [23, 5, 29, 31, 37, 38, 41, 42, 43, 47, 48, 49, 30, 33, 40, 7, 24, 3, 13, 14, 15, 16, 17, 18, 19, 21, 22, 27, 39, 32]
 solution : [9, 8, 10, 26]

Essensial at level 5 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 131072), (4, -1), (5, 524288), (6, -1), (7, 67108864), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, 268435456), (14, 2097152), (15, 1048576), (16, 65536), (17, 8388608), (18, 4194304), (19, 139264), (20, -1), (21, 134217728), (22, 32768), (23, 67108864), (24, 134217728), (25, -1), (26, -1), (27, 524288), (28, -1), (29, 524288), (30, 524288), (31, 8192), (32, 268435456), (33, 4096), (34, -1), (35, -1), (36, -1), (37, 8192), (38, 33554432), (39, 524288), (40, 134217728), (41, 67108864), (42, 262144), (43, 262144), (44, -1), (45, -1), (46, -1), (47, 33554432), (48, 8388608), (49, 33554432), (50, -1), (51, -1), (52, -1)]

Covered at level 5 : set()

After reduction : 
 pending  : [23, 5, 29, 31, 37, 38, 41, 42, 43, 47, 48, 49, 30, 33, 40, 7, 24, 3, 13, 14, 15, 16, 17, 18, 19, 21, 22, 27, 39, 32]
 solution : [9, 8, 10, 26]


Solution : [9, 8, 10, 26] has cost 18.


Decide in level 5 among pending : [23, 5, 29, 31, 37, 38, 41, 42, 43, 47, 48, 49, 30, 33, 40, 7, 24, 3, 13, 14, 15, 16, 17, 18, 19, 21, 22, 27, 39, 32]

Coverage : [(0, -1), (1, -1), (2, -1), (3, 131072), (4, -1), (5, 524288), (6, -1), (7, 67108864), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, 268435456), (14, 2097152), (15, 1048576), (16, 65536), (17, 8388608), (18, 4194304), (19, 139264), (20, -1), (21, 134217728), (22, 32768), (23, 67108864), (24, 134217728), (25, -1), (26, -1), (27, 524288), (28, -1), (29, 524288), (30, 524288), (31, 8192), (32, 268435456), (33, 4096), (34, -1), (35, -1), (36, -1), (37, 8192), (38, 33554432), (39, 524288), (40, 134217728), (41, 67108864), (42, 262144), (43, 262144), (44, -1), (45, -1), (46, -1), (47, 33554432), (48, 8388608), (49, 33554432), (50, -1), (51, -1), (52, -1)]

Decide 13 with phase True at level 5

After decision at level 5
 pending : [23, 5, 29, 31, 37, 38, 41, 42, 43, 47, 48, 49, 30, 33, 40, 7, 24, 3, 14, 15, 16, 17, 18, 19, 21, 22, 27, 39, 32]
 solution : [9, 8, 10, 26, 13]


New level: 6
 pending : [23, 5, 29, 31, 37, 38, 41, 42, 43, 47, 48, 49, 30, 33, 40, 7, 24, 3, 14, 15, 16, 17, 18, 19, 21, 22, 27, 39, 32]
 solution : [9, 8, 10, 26, 13]


Before reduction : 
 pending  : [23, 5, 29, 31, 37, 38, 41, 42, 43, 47, 48, 49, 30, 33, 40, 7, 24, 3, 14, 15, 16, 17, 18, 19, 21, 22, 27, 39, 32]
 solution : [9, 8, 10, 26, 13]

Essensial at level 6 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 131072), (4, -1), (5, 524288), (6, -1), (7, 67108864), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, 268435456), (14, 2097152), (15, 1048576), (16, 65536), (17, 8388608), (18, 4194304), (19, 139264), (20, -1), (21, 134217728), (22, 32768), (23, 67108864), (24, 134217728), (25, -1), (26, -1), (27, 524288), (28, -1), (29, 524288), (30, 524288), (31, 8192), (32, 268435456), (33, 4096), (34, -1), (35, -1), (36, -1), (37, 8192), (38, 33554432), (39, 524288), (40, 134217728), (41, 67108864), (42, 262144), (43, 262144), (44, -1), (45, -1), (46, -1), (47, 33554432), (48, 8388608), (49, 33554432), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 0), (4, -1), (5, 131072), (6, -1), (7, 67108864), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 0), (15, 0), (16, 0), (17, 0), (18, 0), (19, 0), (20, -1), (21, 0), (22, 0), (23, 67108864), (24, 134217728), (25, -1), (26, -1), (27, 0), (28, -1), (29, 262144), (30, 524288), (31, 4096), (32, 268435456), (33, 4096), (34, -1), (35, -1), (36, -1), (37, 2048), (38, 1024), (39, 0), (40, 2048), (41, 33554432), (42, 65536), (43, 65536), (44, -1), (45, -1), (46, -1), (47, 16777216), (48, 2097152), (49, 33554432), (50, -1), (51, -1), (52, -1)]

Covered at level 6 : {3, 39, 14, 15, 16, 17, 18, 19, 21, 22, 27}

After reduction : 
 pending  : [23, 5, 29, 31, 37, 38, 41, 42, 43, 47, 48, 49, 30, 33, 40, 7, 24, 32]
 solution : [9, 8, 10, 26, 13]


Before reduction : 
 pending  : [23, 5, 29, 31, 37, 38, 41, 42, 43, 47, 48, 49, 30, 33, 40, 7, 24, 32]
 solution : [9, 8, 10, 26, 13]

Essensial at level 6 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 0), (4, -1), (5, 131072), (6, -1), (7, 67108864), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 0), (15, 0), (16, 0), (17, 0), (18, 0), (19, 0), (20, -1), (21, 0), (22, 0), (23, 67108864), (24, 134217728), (25, -1), (26, -1), (27, 0), (28, -1), (29, 262144), (30, 524288), (31, 4096), (32, 268435456), (33, 4096), (34, -1), (35, -1), (36, -1), (37, 2048), (38, 1024), (39, 0), (40, 2048), (41, 33554432), (42, 65536), (43, 65536), (44, -1), (45, -1), (46, -1), (47, 16777216), (48, 2097152), (49, 33554432), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 131072), (6, -1), (7, 67108864), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, 67108864), (24, 134217728), (25, -1), (26, -1), (27, -1), (28, -1), (29, 262144), (30, 524288), (31, 4096), (32, 268435456), (33, 4096), (34, -1), (35, -1), (36, -1), (37, 2048), (38, 1024), (39, -1), (40, 2048), (41, 33554432), (42, 65536), (43, 65536), (44, -1), (45, -1), (46, -1), (47, 16777216), (48, 2097152), (49, 33554432), (50, -1), (51, -1), (52, -1)]

Covered at level 6 : set()

After reduction : 
 pending  : [23, 5, 29, 31, 37, 38, 41, 42, 43, 47, 48, 49, 30, 33, 40, 7, 24, 32]
 solution : [9, 8, 10, 26, 13]


Solution : [9, 8, 10, 26, 13] has cost 25.


Decide in level 6 among pending : [23, 5, 29, 31, 37, 38, 41, 42, 43, 47, 48, 49, 30, 33, 40, 7, 24, 32]

Coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 131072), (6, -1), (7, 67108864), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, 67108864), (24, 134217728), (25, -1), (26, -1), (27, -1), (28, -1), (29, 262144), (30, 524288), (31, 4096), (32, 268435456), (33, 4096), (34, -1), (35, -1), (36, -1), (37, 2048), (38, 1024), (39, -1), (40, 2048), (41, 33554432), (42, 65536), (43, 65536), (44, -1), (45, -1), (46, -1), (47, 16777216), (48, 2097152), (49, 33554432), (50, -1), (51, -1), (52, -1)]

Decide 32 with phase True at level 6

After decision at level 6
 pending : [23, 5, 29, 31, 37, 38, 41, 42, 43, 47, 48, 49, 30, 33, 40, 7, 24]
 solution : [9, 8, 10, 26, 13, 32]


New level: 7
 pending : [23, 5, 29, 31, 37, 38, 41, 42, 43, 47, 48, 49, 30, 33, 40, 7, 24]
 solution : [9, 8, 10, 26, 13, 32]


Before reduction : 
 pending  : [23, 5, 29, 31, 37, 38, 41, 42, 43, 47, 48, 49, 30, 33, 40, 7, 24]
 solution : [9, 8, 10, 26, 13, 32]

Essensial at level 7 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 131072), (6, -1), (7, 67108864), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, 67108864), (24, 134217728), (25, -1), (26, -1), (27, -1), (28, -1), (29, 262144), (30, 524288), (31, 4096), (32, 268435456), (33, 4096), (34, -1), (35, -1), (36, -1), (37, 2048), (38, 1024), (39, -1), (40, 2048), (41, 33554432), (42, 65536), (43, 65536), (44, -1), (45, -1), (46, -1), (47, 16777216), (48, 2097152), (49, 33554432), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 32768), (6, -1), (7, 67108864), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, 67108864), (24, 2048), (25, -1), (26, -1), (27, -1), (28, -1), (29, 65536), (30, 0), (31, 1024), (32, -1), (33, 0), (34, -1), (35, -1), (36, -1), (37, 512), (38, 512), (39, -1), (40, 0), (41, 8388608), (42, 16384), (43, 16384), (44, -1), (45, -1), (46, -1), (47, 4194304), (48, 524288), (49, 8388608), (50, -1), (51, -1), (52, -1)]

Covered at level 7 : {40, 33, 30}

After reduction : 
 pending  : [23, 5, 29, 31, 37, 38, 41, 42, 43, 47, 48, 49, 7, 24]
 solution : [9, 8, 10, 26, 13, 32]


Before reduction : 
 pending  : [23, 5, 29, 31, 37, 38, 41, 42, 43, 47, 48, 49, 7, 24]
 solution : [9, 8, 10, 26, 13, 32]

Essensial at level 7 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 32768), (6, -1), (7, 67108864), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, 67108864), (24, 2048), (25, -1), (26, -1), (27, -1), (28, -1), (29, 65536), (30, 0), (31, 1024), (32, -1), (33, 0), (34, -1), (35, -1), (36, -1), (37, 512), (38, 512), (39, -1), (40, 0), (41, 8388608), (42, 16384), (43, 16384), (44, -1), (45, -1), (46, -1), (47, 4194304), (48, 524288), (49, 8388608), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 32768), (6, -1), (7, 67108864), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, 67108864), (24, 2048), (25, -1), (26, -1), (27, -1), (28, -1), (29, 65536), (30, -1), (31, 1024), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, 512), (38, 512), (39, -1), (40, -1), (41, 8388608), (42, 16384), (43, 16384), (44, -1), (45, -1), (46, -1), (47, 4194304), (48, 524288), (49, 8388608), (50, -1), (51, -1), (52, -1)]

Covered at level 7 : set()

After reduction : 
 pending  : [23, 5, 29, 31, 37, 38, 41, 42, 43, 47, 48, 49, 7, 24]
 solution : [9, 8, 10, 26, 13, 32]


Solution : [9, 8, 10, 26, 13, 32] has cost 38.


Before backtrack at level 7
 pending : [23, 5, 29, 31, 37, 38, 41, 42, 43, 47, 48, 49, 7, 24]
 solution : [9, 8, 10, 26, 13, 32]

After backtrack at level 7
 pending : [23, 5, 29, 31, 37, 38, 41, 42, 43, 47, 48, 49, 7, 24, 30, 33, 40]
 solution : [9, 8, 10, 26, 13, 32]


Invert decision for 32 at level 6


New level: 7
 pending : [23, 5, 29, 31, 37, 38, 41, 42, 43, 47, 48, 49, 7, 24, 30, 33, 40]
 solution : [9, 8, 10, 26, 13]


Before reduction : 
 pending  : [23, 5, 29, 31, 37, 38, 41, 42, 43, 47, 48, 49, 7, 24, 30, 33, 40]
 solution : [9, 8, 10, 26, 13]

Essensial at level 7 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 32768), (6, -1), (7, 67108864), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, 67108864), (24, 2048), (25, -1), (26, -1), (27, -1), (28, -1), (29, 65536), (30, -1), (31, 1024), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, 512), (38, 512), (39, -1), (40, -1), (41, 8388608), (42, 16384), (43, 16384), (44, -1), (45, -1), (46, -1), (47, 4194304), (48, 524288), (49, 8388608), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 131072), (6, -1), (7, 67108864), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, 67108864), (24, 134217728), (25, -1), (26, -1), (27, -1), (28, -1), (29, 262144), (30, 524288), (31, 4096), (32, -1), (33, 4096), (34, -1), (35, -1), (36, -1), (37, 2048), (38, 1024), (39, -1), (40, 2048), (41, 33554432), (42, 65536), (43, 65536), (44, -1), (45, -1), (46, -1), (47, 16777216), (48, 2097152), (49, 33554432), (50, -1), (51, -1), (52, -1)]

Covered at level 7 : set()

After reduction : 
 pending  : [23, 5, 29, 31, 37, 38, 41, 42, 43, 47, 48, 49, 7, 24, 30, 33, 40]
 solution : [9, 8, 10, 26, 13]


Solution : [9, 8, 10, 26, 13] has cost 25.


Decide in level 7 among pending : [23, 5, 29, 31, 37, 38, 41, 42, 43, 47, 48, 49, 7, 24, 30, 33, 40]

Coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 131072), (6, -1), (7, 67108864), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, 67108864), (24, 134217728), (25, -1), (26, -1), (27, -1), (28, -1), (29, 262144), (30, 524288), (31, 4096), (32, -1), (33, 4096), (34, -1), (35, -1), (36, -1), (37, 2048), (38, 1024), (39, -1), (40, 2048), (41, 33554432), (42, 65536), (43, 65536), (44, -1), (45, -1), (46, -1), (47, 16777216), (48, 2097152), (49, 33554432), (50, -1), (51, -1), (52, -1)]

Decide 24 with phase True at level 7

After decision at level 7
 pending : [23, 5, 29, 31, 37, 38, 41, 42, 43, 47, 48, 49, 7, 30, 33, 40]
 solution : [9, 8, 10, 26, 13, 24]


New level: 8
 pending : [23, 5, 29, 31, 37, 38, 41, 42, 43, 47, 48, 49, 7, 30, 33, 40]
 solution : [9, 8, 10, 26, 13, 24]


Before reduction : 
 pending  : [23, 5, 29, 31, 37, 38, 41, 42, 43, 47, 48, 49, 7, 30, 33, 40]
 solution : [9, 8, 10, 26, 13, 24]

Essensial at level 8 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 131072), (6, -1), (7, 67108864), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, 67108864), (24, 134217728), (25, -1), (26, -1), (27, -1), (28, -1), (29, 262144), (30, 524288), (31, 4096), (32, -1), (33, 4096), (34, -1), (35, -1), (36, -1), (37, 2048), (38, 1024), (39, -1), (40, 2048), (41, 33554432), (42, 65536), (43, 65536), (44, -1), (45, -1), (46, -1), (47, 16777216), (48, 2097152), (49, 33554432), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 32768), (6, -1), (7, 16777216), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, 16777216), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, 65536), (30, 0), (31, 1024), (32, -1), (33, 0), (34, -1), (35, -1), (36, -1), (37, 512), (38, 512), (39, -1), (40, 0), (41, 16777216), (42, 16384), (43, 16384), (44, -1), (45, -1), (46, -1), (47, 8388608), (48, 524288), (49, 33554432), (50, -1), (51, -1), (52, -1)]

Covered at level 8 : {40, 33, 30}

After reduction : 
 pending  : [23, 5, 29, 31, 37, 38, 41, 42, 43, 47, 48, 49, 7]
 solution : [9, 8, 10, 26, 13, 24]


Before reduction : 
 pending  : [23, 5, 29, 31, 37, 38, 41, 42, 43, 47, 48, 49, 7]
 solution : [9, 8, 10, 26, 13, 24]

Essensial at level 8 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 32768), (6, -1), (7, 16777216), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, 16777216), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, 65536), (30, 0), (31, 1024), (32, -1), (33, 0), (34, -1), (35, -1), (36, -1), (37, 512), (38, 512), (39, -1), (40, 0), (41, 16777216), (42, 16384), (43, 16384), (44, -1), (45, -1), (46, -1), (47, 8388608), (48, 524288), (49, 33554432), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 32768), (6, -1), (7, 16777216), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, 16777216), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, 65536), (30, -1), (31, 1024), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, 512), (38, 512), (39, -1), (40, -1), (41, 16777216), (42, 16384), (43, 16384), (44, -1), (45, -1), (46, -1), (47, 8388608), (48, 524288), (49, 33554432), (50, -1), (51, -1), (52, -1)]

Covered at level 8 : set()

After reduction : 
 pending  : [23, 5, 29, 31, 37, 38, 41, 42, 43, 47, 48, 49, 7]
 solution : [9, 8, 10, 26, 13, 24]


Solution : [9, 8, 10, 26, 13, 24] has cost 32.


Before backtrack at level 8
 pending : [23, 5, 29, 31, 37, 38, 41, 42, 43, 47, 48, 49, 7]
 solution : [9, 8, 10, 26, 13, 24]

After backtrack at level 8
 pending : [23, 5, 29, 31, 37, 38, 41, 42, 43, 47, 48, 49, 7, 30, 33, 40]
 solution : [9, 8, 10, 26, 13, 24]


Invert decision for 24 at level 7


New level: 8
 pending : [23, 5, 29, 31, 37, 38, 41, 42, 43, 47, 48, 49, 7, 30, 33, 40]
 solution : [9, 8, 10, 26, 13]


Before reduction : 
 pending  : [23, 5, 29, 31, 37, 38, 41, 42, 43, 47, 48, 49, 7, 30, 33, 40]
 solution : [9, 8, 10, 26, 13]

Essensial at level 8 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 32768), (6, -1), (7, 16777216), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, 16777216), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, 65536), (30, -1), (31, 1024), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, 512), (38, 512), (39, -1), (40, -1), (41, 16777216), (42, 16384), (43, 16384), (44, -1), (45, -1), (46, -1), (47, 8388608), (48, 524288), (49, 33554432), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 131072), (6, -1), (7, 67108864), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, 67108864), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, 262144), (30, 524288), (31, 4096), (32, -1), (33, 4096), (34, -1), (35, -1), (36, -1), (37, 2048), (38, 1024), (39, -1), (40, 2048), (41, 33554432), (42, 65536), (43, 65536), (44, -1), (45, -1), (46, -1), (47, 16777216), (48, 2097152), (49, 33554432), (50, -1), (51, -1), (52, -1)]

Covered at level 8 : set()

After reduction : 
 pending  : [23, 5, 29, 31, 37, 38, 41, 42, 43, 47, 48, 49, 7, 30, 33, 40]
 solution : [9, 8, 10, 26, 13]


Solution : [9, 8, 10, 26, 13] has cost 25.


Decide in level 8 among pending : [23, 5, 29, 31, 37, 38, 41, 42, 43, 47, 48, 49, 7, 30, 33, 40]

Coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 131072), (6, -1), (7, 67108864), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, 67108864), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, 262144), (30, 524288), (31, 4096), (32, -1), (33, 4096), (34, -1), (35, -1), (36, -1), (37, 2048), (38, 1024), (39, -1), (40, 2048), (41, 33554432), (42, 65536), (43, 65536), (44, -1), (45, -1), (46, -1), (47, 16777216), (48, 2097152), (49, 33554432), (50, -1), (51, -1), (52, -1)]

Decide 23 with phase True at level 8

After decision at level 8
 pending : [5, 29, 31, 37, 38, 41, 42, 43, 47, 48, 49, 7, 30, 33, 40]
 solution : [9, 8, 10, 26, 13, 23]


New level: 9
 pending : [5, 29, 31, 37, 38, 41, 42, 43, 47, 48, 49, 7, 30, 33, 40]
 solution : [9, 8, 10, 26, 13, 23]


Before reduction : 
 pending  : [5, 29, 31, 37, 38, 41, 42, 43, 47, 48, 49, 7, 30, 33, 40]
 solution : [9, 8, 10, 26, 13, 23]

Essensial at level 9 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 131072), (6, -1), (7, 67108864), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, 67108864), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, 262144), (30, 524288), (31, 4096), (32, -1), (33, 4096), (34, -1), (35, -1), (36, -1), (37, 2048), (38, 1024), (39, -1), (40, 2048), (41, 33554432), (42, 65536), (43, 65536), (44, -1), (45, -1), (46, -1), (47, 16777216), (48, 2097152), (49, 33554432), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 0), (6, -1), (7, 0), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, 0), (30, 0), (31, 0), (32, -1), (33, 0), (34, -1), (35, -1), (36, -1), (37, 0), (38, 0), (39, -1), (40, 0), (41, 0), (42, 0), (43, 0), (44, -1), (45, -1), (46, -1), (47, 0), (48, 0), (49, 0), (50, -1), (51, -1), (52, -1)]

Covered at level 9 : {33, 37, 5, 38, 7, 41, 42, 43, 40, 47, 48, 49, 29, 30, 31}

After reduction : 
 pending  : []
 solution : [9, 8, 10, 26, 13, 23]


Before reduction : 
 pending  : []
 solution : [9, 8, 10, 26, 13, 23]

Essensial at level 9 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 0), (6, -1), (7, 0), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, 0), (30, 0), (31, 0), (32, -1), (33, 0), (34, -1), (35, -1), (36, -1), (37, 0), (38, 0), (39, -1), (40, 0), (41, 0), (42, 0), (43, 0), (44, -1), (45, -1), (46, -1), (47, 0), (48, 0), (49, 0), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 9 : set()

After reduction : 
 pending  : []
 solution : [9, 8, 10, 26, 13, 23]


Solution : [9, 8, 10, 26, 13, 23] has cost 32.


Before backtrack at level 9
 pending : []
 solution : [9, 8, 10, 26, 13, 23]

After backtrack at level 9
 pending : [5, 29, 31, 37, 38, 41, 42, 43, 47, 48, 49, 7, 30, 33, 40]
 solution : [9, 8, 10, 26, 13, 23]


Invert decision for 23 at level 8


New level: 9
 pending : [5, 29, 31, 37, 38, 41, 42, 43, 47, 48, 49, 7, 30, 33, 40]
 solution : [9, 8, 10, 26, 13]


Before reduction : 
 pending  : [5, 29, 31, 37, 38, 41, 42, 43, 47, 48, 49, 7, 30, 33, 40]
 solution : [9, 8, 10, 26, 13]

Essensial at level 9 : {7}

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 0), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, 0), (30, 0), (31, 0), (32, -1), (33, 0), (34, -1), (35, -1), (36, -1), (37, 0), (38, 0), (39, -1), (40, 0), (41, 0), (42, 0), (43, 0), (44, -1), (45, -1), (46, -1), (47, 0), (48, 0), (49, 0), (50, -1), (51, -1), (52, -1)]

Covered at level 9 : {33, 37, 5, 38, 40, 41, 42, 43, 47, 48, 49, 29, 30, 31}

After reduction : 
 pending  : []
 solution : [9, 8, 10, 26, 13, 7]


Before reduction : 
 pending  : []
 solution : [9, 8, 10, 26, 13, 7]

Essensial at level 9 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 0), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, 0), (30, 0), (31, 0), (32, -1), (33, 0), (34, -1), (35, -1), (36, -1), (37, 0), (38, 0), (39, -1), (40, 0), (41, 0), (42, 0), (43, 0), (44, -1), (45, -1), (46, -1), (47, 0), (48, 0), (49, 0), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 9 : set()

After reduction : 
 pending  : []
 solution : [9, 8, 10, 26, 13, 7]


Solution : [9, 8, 10, 26, 13, 7] has cost 29.


Before backtrack at level 9
 pending : []
 solution : [9, 8, 10, 26, 13, 7]

After backtrack at level 9
 pending : [7, 5, 29, 31, 37, 38, 41, 42, 43, 47, 48, 49, 30, 33, 40]
 solution : [9, 8, 10, 26, 13]


Before backtrack at level 8
 pending : [7, 5, 29, 31, 37, 38, 41, 42, 43, 47, 48, 49, 30, 33, 40]
 solution : [9, 8, 10, 26, 13]

After backtrack at level 8
 pending : [7, 5, 29, 31, 37, 38, 41, 42, 43, 47, 48, 49, 30, 33, 40, 23]
 solution : [9, 8, 10, 26, 13]


Before backtrack at level 7
 pending : [7, 5, 29, 31, 37, 38, 41, 42, 43, 47, 48, 49, 30, 33, 40, 23]
 solution : [9, 8, 10, 26, 13]

After backtrack at level 7
 pending : [7, 5, 29, 31, 37, 38, 41, 42, 43, 47, 48, 49, 30, 33, 40, 23, 24]
 solution : [9, 8, 10, 26, 13]


Before backtrack at level 6
 pending : [7, 5, 29, 31, 37, 38, 41, 42, 43, 47, 48, 49, 30, 33, 40, 23, 24]
 solution : [9, 8, 10, 26, 13]

After backtrack at level 6
 pending : [7, 5, 29, 31, 37, 38, 41, 42, 43, 47, 48, 49, 30, 33, 40, 23, 24, 3, 14, 15, 16, 17, 18, 19, 21, 22, 27, 39, 32]
 solution : [9, 8, 10, 26, 13]


Invert decision for 13 at level 5


New level: 6
 pending : [7, 5, 29, 31, 37, 38, 41, 42, 43, 47, 48, 49, 30, 33, 40, 23, 24, 3, 14, 15, 16, 17, 18, 19, 21, 22, 27, 39, 32]
 solution : [9, 8, 10, 26]


Before reduction : 
 pending  : [7, 5, 29, 31, 37, 38, 41, 42, 43, 47, 48, 49, 30, 33, 40, 23, 24, 3, 14, 15, 16, 17, 18, 19, 21, 22, 27, 39, 32]
 solution : [9, 8, 10, 26]

Essensial at level 6 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 131072), (4, -1), (5, 524288), (6, -1), (7, 67108864), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 2097152), (15, 1048576), (16, 65536), (17, 8388608), (18, 4194304), (19, 139264), (20, -1), (21, 134217728), (22, 32768), (23, 67108864), (24, 134217728), (25, -1), (26, -1), (27, 524288), (28, -1), (29, 524288), (30, 524288), (31, 8192), (32, 268435456), (33, 4096), (34, -1), (35, -1), (36, -1), (37, 8192), (38, 33554432), (39, 524288), (40, 134217728), (41, 67108864), (42, 262144), (43, 262144), (44, -1), (45, -1), (46, -1), (47, 33554432), (48, 8388608), (49, 33554432), (50, -1), (51, -1), (52, -1)]

Covered at level 6 : set()

After reduction : 
 pending  : [7, 5, 29, 31, 37, 38, 41, 42, 43, 47, 48, 49, 30, 33, 40, 23, 24, 3, 14, 15, 16, 17, 18, 19, 21, 22, 27, 39, 32]
 solution : [9, 8, 10, 26]


Solution : [9, 8, 10, 26] has cost 18.


Decide in level 6 among pending : [7, 5, 29, 31, 37, 38, 41, 42, 43, 47, 48, 49, 30, 33, 40, 23, 24, 3, 14, 15, 16, 17, 18, 19, 21, 22, 27, 39, 32]

Coverage : [(0, -1), (1, -1), (2, -1), (3, 131072), (4, -1), (5, 524288), (6, -1), (7, 67108864), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 2097152), (15, 1048576), (16, 65536), (17, 8388608), (18, 4194304), (19, 139264), (20, -1), (21, 134217728), (22, 32768), (23, 67108864), (24, 134217728), (25, -1), (26, -1), (27, 524288), (28, -1), (29, 524288), (30, 524288), (31, 8192), (32, 268435456), (33, 4096), (34, -1), (35, -1), (36, -1), (37, 8192), (38, 33554432), (39, 524288), (40, 134217728), (41, 67108864), (42, 262144), (43, 262144), (44, -1), (45, -1), (46, -1), (47, 33554432), (48, 8388608), (49, 33554432), (50, -1), (51, -1), (52, -1)]

Decide 32 with phase True at level 6

After decision at level 6
 pending : [7, 5, 29, 31, 37, 38, 41, 42, 43, 47, 48, 49, 30, 33, 40, 23, 24, 3, 14, 15, 16, 17, 18, 19, 21, 22, 27, 39]
 solution : [9, 8, 10, 26, 32]


New level: 7
 pending : [7, 5, 29, 31, 37, 38, 41, 42, 43, 47, 48, 49, 30, 33, 40, 23, 24, 3, 14, 15, 16, 17, 18, 19, 21, 22, 27, 39]
 solution : [9, 8, 10, 26, 32]


Before reduction : 
 pending  : [7, 5, 29, 31, 37, 38, 41, 42, 43, 47, 48, 49, 30, 33, 40, 23, 24, 3, 14, 15, 16, 17, 18, 19, 21, 22, 27, 39]
 solution : [9, 8, 10, 26, 32]

Essensial at level 7 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 131072), (4, -1), (5, 524288), (6, -1), (7, 67108864), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 2097152), (15, 1048576), (16, 65536), (17, 8388608), (18, 4194304), (19, 139264), (20, -1), (21, 134217728), (22, 32768), (23, 67108864), (24, 134217728), (25, -1), (26, -1), (27, 524288), (28, -1), (29, 524288), (30, 524288), (31, 8192), (32, 268435456), (33, 4096), (34, -1), (35, -1), (36, -1), (37, 8192), (38, 33554432), (39, 524288), (40, 134217728), (41, 67108864), (42, 262144), (43, 262144), (44, -1), (45, -1), (46, -1), (47, 33554432), (48, 8388608), (49, 33554432), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 131072), (4, -1), (5, 131072), (6, -1), (7, 67108864), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 2097152), (15, 1048576), (16, 65536), (17, 8388608), (18, 4194304), (19, 139264), (20, -1), (21, 134217728), (22, 32768), (23, 67108864), (24, 4096), (25, -1), (26, -1), (27, 524288), (28, -1), (29, 131072), (30, 0), (31, 2048), (32, -1), (33, 0), (34, -1), (35, -1), (36, -1), (37, 2048), (38, 33554432), (39, 524288), (40, 4096), (41, 16777216), (42, 65536), (43, 65536), (44, -1), (45, -1), (46, -1), (47, 8388608), (48, 2097152), (49, 8388608), (50, -1), (51, -1), (52, -1)]

Covered at level 7 : {33, 30}

After reduction : 
 pending  : [7, 5, 29, 31, 37, 38, 41, 42, 43, 47, 48, 49, 40, 23, 24, 3, 14, 15, 16, 17, 18, 19, 21, 22, 27, 39]
 solution : [9, 8, 10, 26, 32]


Before reduction : 
 pending  : [7, 5, 29, 31, 37, 38, 41, 42, 43, 47, 48, 49, 40, 23, 24, 3, 14, 15, 16, 17, 18, 19, 21, 22, 27, 39]
 solution : [9, 8, 10, 26, 32]

Essensial at level 7 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 131072), (4, -1), (5, 131072), (6, -1), (7, 67108864), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 2097152), (15, 1048576), (16, 65536), (17, 8388608), (18, 4194304), (19, 139264), (20, -1), (21, 134217728), (22, 32768), (23, 67108864), (24, 4096), (25, -1), (26, -1), (27, 524288), (28, -1), (29, 131072), (30, 0), (31, 2048), (32, -1), (33, 0), (34, -1), (35, -1), (36, -1), (37, 2048), (38, 33554432), (39, 524288), (40, 4096), (41, 16777216), (42, 65536), (43, 65536), (44, -1), (45, -1), (46, -1), (47, 8388608), (48, 2097152), (49, 8388608), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 131072), (4, -1), (5, 131072), (6, -1), (7, 67108864), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 2097152), (15, 1048576), (16, 65536), (17, 8388608), (18, 4194304), (19, 139264), (20, -1), (21, 134217728), (22, 32768), (23, 67108864), (24, 4096), (25, -1), (26, -1), (27, 524288), (28, -1), (29, 131072), (30, -1), (31, 2048), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, 2048), (38, 33554432), (39, 524288), (40, 4096), (41, 16777216), (42, 65536), (43, 65536), (44, -1), (45, -1), (46, -1), (47, 8388608), (48, 2097152), (49, 8388608), (50, -1), (51, -1), (52, -1)]

Covered at level 7 : set()

After reduction : 
 pending  : [7, 5, 29, 31, 37, 38, 41, 42, 43, 47, 48, 49, 40, 23, 24, 3, 14, 15, 16, 17, 18, 19, 21, 22, 27, 39]
 solution : [9, 8, 10, 26, 32]


Solution : [9, 8, 10, 26, 32] has cost 31.


Before backtrack at level 7
 pending : [7, 5, 29, 31, 37, 38, 41, 42, 43, 47, 48, 49, 40, 23, 24, 3, 14, 15, 16, 17, 18, 19, 21, 22, 27, 39]
 solution : [9, 8, 10, 26, 32]

After backtrack at level 7
 pending : [7, 5, 29, 31, 37, 38, 41, 42, 43, 47, 48, 49, 40, 23, 24, 3, 14, 15, 16, 17, 18, 19, 21, 22, 27, 39, 30, 33]
 solution : [9, 8, 10, 26, 32]


Invert decision for 32 at level 6


New level: 7
 pending : [7, 5, 29, 31, 37, 38, 41, 42, 43, 47, 48, 49, 40, 23, 24, 3, 14, 15, 16, 17, 18, 19, 21, 22, 27, 39, 30, 33]
 solution : [9, 8, 10, 26]


Before reduction : 
 pending  : [7, 5, 29, 31, 37, 38, 41, 42, 43, 47, 48, 49, 40, 23, 24, 3, 14, 15, 16, 17, 18, 19, 21, 22, 27, 39, 30, 33]
 solution : [9, 8, 10, 26]

Essensial at level 7 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 131072), (4, -1), (5, 131072), (6, -1), (7, 67108864), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 2097152), (15, 1048576), (16, 65536), (17, 8388608), (18, 4194304), (19, 139264), (20, -1), (21, 134217728), (22, 32768), (23, 67108864), (24, 4096), (25, -1), (26, -1), (27, 524288), (28, -1), (29, 131072), (30, -1), (31, 2048), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, 2048), (38, 33554432), (39, 524288), (40, 4096), (41, 16777216), (42, 65536), (43, 65536), (44, -1), (45, -1), (46, -1), (47, 8388608), (48, 2097152), (49, 8388608), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 131072), (4, -1), (5, 524288), (6, -1), (7, 67108864), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 2097152), (15, 1048576), (16, 65536), (17, 8388608), (18, 4194304), (19, 139264), (20, -1), (21, 134217728), (22, 32768), (23, 67108864), (24, 134217728), (25, -1), (26, -1), (27, 524288), (28, -1), (29, 524288), (30, 524288), (31, 8192), (32, -1), (33, 4096), (34, -1), (35, -1), (36, -1), (37, 8192), (38, 33554432), (39, 524288), (40, 134217728), (41, 67108864), (42, 262144), (43, 262144), (44, -1), (45, -1), (46, -1), (47, 33554432), (48, 8388608), (49, 33554432), (50, -1), (51, -1), (52, -1)]

Covered at level 7 : set()

After reduction : 
 pending  : [7, 5, 29, 31, 37, 38, 41, 42, 43, 47, 48, 49, 40, 23, 24, 3, 14, 15, 16, 17, 18, 19, 21, 22, 27, 39, 30, 33]
 solution : [9, 8, 10, 26]


Solution : [9, 8, 10, 26] has cost 18.


Decide in level 7 among pending : [7, 5, 29, 31, 37, 38, 41, 42, 43, 47, 48, 49, 40, 23, 24, 3, 14, 15, 16, 17, 18, 19, 21, 22, 27, 39, 30, 33]

Coverage : [(0, -1), (1, -1), (2, -1), (3, 131072), (4, -1), (5, 524288), (6, -1), (7, 67108864), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 2097152), (15, 1048576), (16, 65536), (17, 8388608), (18, 4194304), (19, 139264), (20, -1), (21, 134217728), (22, 32768), (23, 67108864), (24, 134217728), (25, -1), (26, -1), (27, 524288), (28, -1), (29, 524288), (30, 524288), (31, 8192), (32, -1), (33, 4096), (34, -1), (35, -1), (36, -1), (37, 8192), (38, 33554432), (39, 524288), (40, 134217728), (41, 67108864), (42, 262144), (43, 262144), (44, -1), (45, -1), (46, -1), (47, 33554432), (48, 8388608), (49, 33554432), (50, -1), (51, -1), (52, -1)]

Decide 40 with phase True at level 7

After decision at level 7
 pending : [7, 5, 29, 31, 37, 38, 41, 42, 43, 47, 48, 49, 23, 24, 3, 14, 15, 16, 17, 18, 19, 21, 22, 27, 39, 30, 33]
 solution : [9, 8, 10, 26, 40]


New level: 8
 pending : [7, 5, 29, 31, 37, 38, 41, 42, 43, 47, 48, 49, 23, 24, 3, 14, 15, 16, 17, 18, 19, 21, 22, 27, 39, 30, 33]
 solution : [9, 8, 10, 26, 40]


Before reduction : 
 pending  : [7, 5, 29, 31, 37, 38, 41, 42, 43, 47, 48, 49, 23, 24, 3, 14, 15, 16, 17, 18, 19, 21, 22, 27, 39, 30, 33]
 solution : [9, 8, 10, 26, 40]

Essensial at level 8 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 131072), (4, -1), (5, 524288), (6, -1), (7, 67108864), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 2097152), (15, 1048576), (16, 65536), (17, 8388608), (18, 4194304), (19, 139264), (20, -1), (21, 134217728), (22, 32768), (23, 67108864), (24, 134217728), (25, -1), (26, -1), (27, 524288), (28, -1), (29, 524288), (30, 524288), (31, 8192), (32, -1), (33, 4096), (34, -1), (35, -1), (36, -1), (37, 8192), (38, 33554432), (39, 524288), (40, 134217728), (41, 67108864), (42, 262144), (43, 262144), (44, -1), (45, -1), (46, -1), (47, 33554432), (48, 8388608), (49, 33554432), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 131072), (4, -1), (5, 524288), (6, -1), (7, 67108864), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 2097152), (15, 1048576), (16, 65536), (17, 8388608), (18, 4194304), (19, 139264), (20, -1), (21, 134217728), (22, 32768), (23, 67108864), (24, 67108864), (25, -1), (26, -1), (27, 524288), (28, -1), (29, 524288), (30, 262144), (31, 8192), (32, -1), (33, 2048), (34, -1), (35, -1), (36, -1), (37, 8192), (38, 16777216), (39, 524288), (40, -1), (41, 67108864), (42, 262144), (43, 262144), (44, -1), (45, -1), (46, -1), (47, 33554432), (48, 8388608), (49, 33554432), (50, -1), (51, -1), (52, -1)]

Covered at level 8 : set()

After reduction : 
 pending  : [7, 5, 29, 31, 37, 38, 41, 42, 43, 47, 48, 49, 23, 24, 3, 14, 15, 16, 17, 18, 19, 21, 22, 27, 39, 30, 33]
 solution : [9, 8, 10, 26, 40]


Solution : [9, 8, 10, 26, 40] has cost 32.


Before backtrack at level 8
 pending : [7, 5, 29, 31, 37, 38, 41, 42, 43, 47, 48, 49, 23, 24, 3, 14, 15, 16, 17, 18, 19, 21, 22, 27, 39, 30, 33]
 solution : [9, 8, 10, 26, 40]

After backtrack at level 8
 pending : [7, 5, 29, 31, 37, 38, 41, 42, 43, 47, 48, 49, 23, 24, 3, 14, 15, 16, 17, 18, 19, 21, 22, 27, 39, 30, 33]
 solution : [9, 8, 10, 26, 40]


Invert decision for 40 at level 7


New level: 8
 pending : [7, 5, 29, 31, 37, 38, 41, 42, 43, 47, 48, 49, 23, 24, 3, 14, 15, 16, 17, 18, 19, 21, 22, 27, 39, 30, 33]
 solution : [9, 8, 10, 26]


Before reduction : 
 pending  : [7, 5, 29, 31, 37, 38, 41, 42, 43, 47, 48, 49, 23, 24, 3, 14, 15, 16, 17, 18, 19, 21, 22, 27, 39, 30, 33]
 solution : [9, 8, 10, 26]

Essensial at level 8 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 131072), (4, -1), (5, 524288), (6, -1), (7, 67108864), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 2097152), (15, 1048576), (16, 65536), (17, 8388608), (18, 4194304), (19, 139264), (20, -1), (21, 134217728), (22, 32768), (23, 67108864), (24, 67108864), (25, -1), (26, -1), (27, 524288), (28, -1), (29, 524288), (30, 262144), (31, 8192), (32, -1), (33, 2048), (34, -1), (35, -1), (36, -1), (37, 8192), (38, 16777216), (39, 524288), (40, -1), (41, 67108864), (42, 262144), (43, 262144), (44, -1), (45, -1), (46, -1), (47, 33554432), (48, 8388608), (49, 33554432), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 131072), (4, -1), (5, 524288), (6, -1), (7, 67108864), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 2097152), (15, 1048576), (16, 65536), (17, 8388608), (18, 4194304), (19, 139264), (20, -1), (21, 134217728), (22, 32768), (23, 67108864), (24, 134217728), (25, -1), (26, -1), (27, 524288), (28, -1), (29, 524288), (30, 524288), (31, 8192), (32, -1), (33, 4096), (34, -1), (35, -1), (36, -1), (37, 8192), (38, 33554432), (39, 524288), (40, -1), (41, 67108864), (42, 262144), (43, 262144), (44, -1), (45, -1), (46, -1), (47, 33554432), (48, 8388608), (49, 33554432), (50, -1), (51, -1), (52, -1)]

Covered at level 8 : set()

After reduction : 
 pending  : [7, 5, 29, 31, 37, 38, 41, 42, 43, 47, 48, 49, 23, 24, 3, 14, 15, 16, 17, 18, 19, 21, 22, 27, 39, 30, 33]
 solution : [9, 8, 10, 26]


Solution : [9, 8, 10, 26] has cost 18.


Decide in level 8 among pending : [7, 5, 29, 31, 37, 38, 41, 42, 43, 47, 48, 49, 23, 24, 3, 14, 15, 16, 17, 18, 19, 21, 22, 27, 39, 30, 33]

Coverage : [(0, -1), (1, -1), (2, -1), (3, 131072), (4, -1), (5, 524288), (6, -1), (7, 67108864), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 2097152), (15, 1048576), (16, 65536), (17, 8388608), (18, 4194304), (19, 139264), (20, -1), (21, 134217728), (22, 32768), (23, 67108864), (24, 134217728), (25, -1), (26, -1), (27, 524288), (28, -1), (29, 524288), (30, 524288), (31, 8192), (32, -1), (33, 4096), (34, -1), (35, -1), (36, -1), (37, 8192), (38, 33554432), (39, 524288), (40, -1), (41, 67108864), (42, 262144), (43, 262144), (44, -1), (45, -1), (46, -1), (47, 33554432), (48, 8388608), (49, 33554432), (50, -1), (51, -1), (52, -1)]

Decide 24 with phase True at level 8

After decision at level 8
 pending : [7, 5, 29, 31, 37, 38, 41, 42, 43, 47, 48, 49, 23, 3, 14, 15, 16, 17, 18, 19, 21, 22, 27, 39, 30, 33]
 solution : [9, 8, 10, 26, 24]


New level: 9
 pending : [7, 5, 29, 31, 37, 38, 41, 42, 43, 47, 48, 49, 23, 3, 14, 15, 16, 17, 18, 19, 21, 22, 27, 39, 30, 33]
 solution : [9, 8, 10, 26, 24]


Before reduction : 
 pending  : [7, 5, 29, 31, 37, 38, 41, 42, 43, 47, 48, 49, 23, 3, 14, 15, 16, 17, 18, 19, 21, 22, 27, 39, 30, 33]
 solution : [9, 8, 10, 26, 24]

Essensial at level 9 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 131072), (4, -1), (5, 524288), (6, -1), (7, 67108864), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 2097152), (15, 1048576), (16, 65536), (17, 8388608), (18, 4194304), (19, 139264), (20, -1), (21, 134217728), (22, 32768), (23, 67108864), (24, 134217728), (25, -1), (26, -1), (27, 524288), (28, -1), (29, 524288), (30, 524288), (31, 8192), (32, -1), (33, 4096), (34, -1), (35, -1), (36, -1), (37, 8192), (38, 33554432), (39, 524288), (40, -1), (41, 67108864), (42, 262144), (43, 262144), (44, -1), (45, -1), (46, -1), (47, 33554432), (48, 8388608), (49, 33554432), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 131072), (4, -1), (5, 131072), (6, -1), (7, 16777216), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 2097152), (15, 1048576), (16, 65536), (17, 8388608), (18, 4194304), (19, 139264), (20, -1), (21, 134217728), (22, 32768), (23, 16777216), (24, -1), (25, -1), (26, -1), (27, 524288), (28, -1), (29, 131072), (30, 0), (31, 2048), (32, -1), (33, 0), (34, -1), (35, -1), (36, -1), (37, 2048), (38, 33554432), (39, 524288), (40, -1), (41, 33554432), (42, 65536), (43, 65536), (44, -1), (45, -1), (46, -1), (47, 16777216), (48, 2097152), (49, 33554432), (50, -1), (51, -1), (52, -1)]

Covered at level 9 : {33, 30}

After reduction : 
 pending  : [7, 5, 29, 31, 37, 38, 41, 42, 43, 47, 48, 49, 23, 3, 14, 15, 16, 17, 18, 19, 21, 22, 27, 39]
 solution : [9, 8, 10, 26, 24]


Before reduction : 
 pending  : [7, 5, 29, 31, 37, 38, 41, 42, 43, 47, 48, 49, 23, 3, 14, 15, 16, 17, 18, 19, 21, 22, 27, 39]
 solution : [9, 8, 10, 26, 24]

Essensial at level 9 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 131072), (4, -1), (5, 131072), (6, -1), (7, 16777216), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 2097152), (15, 1048576), (16, 65536), (17, 8388608), (18, 4194304), (19, 139264), (20, -1), (21, 134217728), (22, 32768), (23, 16777216), (24, -1), (25, -1), (26, -1), (27, 524288), (28, -1), (29, 131072), (30, 0), (31, 2048), (32, -1), (33, 0), (34, -1), (35, -1), (36, -1), (37, 2048), (38, 33554432), (39, 524288), (40, -1), (41, 33554432), (42, 65536), (43, 65536), (44, -1), (45, -1), (46, -1), (47, 16777216), (48, 2097152), (49, 33554432), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 131072), (4, -1), (5, 131072), (6, -1), (7, 16777216), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 2097152), (15, 1048576), (16, 65536), (17, 8388608), (18, 4194304), (19, 139264), (20, -1), (21, 134217728), (22, 32768), (23, 16777216), (24, -1), (25, -1), (26, -1), (27, 524288), (28, -1), (29, 131072), (30, -1), (31, 2048), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, 2048), (38, 33554432), (39, 524288), (40, -1), (41, 33554432), (42, 65536), (43, 65536), (44, -1), (45, -1), (46, -1), (47, 16777216), (48, 2097152), (49, 33554432), (50, -1), (51, -1), (52, -1)]

Covered at level 9 : set()

After reduction : 
 pending  : [7, 5, 29, 31, 37, 38, 41, 42, 43, 47, 48, 49, 23, 3, 14, 15, 16, 17, 18, 19, 21, 22, 27, 39]
 solution : [9, 8, 10, 26, 24]


Solution : [9, 8, 10, 26, 24] has cost 25.


Decide in level 9 among pending : [7, 5, 29, 31, 37, 38, 41, 42, 43, 47, 48, 49, 23, 3, 14, 15, 16, 17, 18, 19, 21, 22, 27, 39]

Coverage : [(0, -1), (1, -1), (2, -1), (3, 131072), (4, -1), (5, 131072), (6, -1), (7, 16777216), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 2097152), (15, 1048576), (16, 65536), (17, 8388608), (18, 4194304), (19, 139264), (20, -1), (21, 134217728), (22, 32768), (23, 16777216), (24, -1), (25, -1), (26, -1), (27, 524288), (28, -1), (29, 131072), (30, -1), (31, 2048), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, 2048), (38, 33554432), (39, 524288), (40, -1), (41, 33554432), (42, 65536), (43, 65536), (44, -1), (45, -1), (46, -1), (47, 16777216), (48, 2097152), (49, 33554432), (50, -1), (51, -1), (52, -1)]

Decide 21 with phase True at level 9

After decision at level 9
 pending : [7, 5, 29, 31, 37, 38, 41, 42, 43, 47, 48, 49, 23, 3, 14, 15, 16, 17, 18, 19, 22, 27, 39]
 solution : [9, 8, 10, 26, 24, 21]


New level: 10
 pending : [7, 5, 29, 31, 37, 38, 41, 42, 43, 47, 48, 49, 23, 3, 14, 15, 16, 17, 18, 19, 22, 27, 39]
 solution : [9, 8, 10, 26, 24, 21]


Before reduction : 
 pending  : [7, 5, 29, 31, 37, 38, 41, 42, 43, 47, 48, 49, 23, 3, 14, 15, 16, 17, 18, 19, 22, 27, 39]
 solution : [9, 8, 10, 26, 24, 21]

Essensial at level 10 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 131072), (4, -1), (5, 131072), (6, -1), (7, 16777216), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 2097152), (15, 1048576), (16, 65536), (17, 8388608), (18, 4194304), (19, 139264), (20, -1), (21, 134217728), (22, 32768), (23, 16777216), (24, -1), (25, -1), (26, -1), (27, 524288), (28, -1), (29, 131072), (30, -1), (31, 2048), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, 2048), (38, 33554432), (39, 524288), (40, -1), (41, 33554432), (42, 65536), (43, 65536), (44, -1), (45, -1), (46, -1), (47, 16777216), (48, 2097152), (49, 33554432), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 0), (4, -1), (5, 32768), (6, -1), (7, 16777216), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 0), (15, 0), (16, 0), (17, 0), (18, 0), (19, 0), (20, -1), (21, -1), (22, 0), (23, 16777216), (24, -1), (25, -1), (26, -1), (27, 0), (28, -1), (29, 65536), (30, -1), (31, 1024), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, 512), (38, 33554432), (39, 0), (40, -1), (41, 16777216), (42, 32768), (43, 32768), (44, -1), (45, -1), (46, -1), (47, 16777216), (48, 2097152), (49, 33554432), (50, -1), (51, -1), (52, -1)]

Covered at level 10 : {3, 39, 14, 15, 16, 17, 18, 19, 22, 27}

After reduction : 
 pending  : [7, 5, 29, 31, 37, 38, 41, 42, 43, 47, 48, 49, 23]
 solution : [9, 8, 10, 26, 24, 21]


Before reduction : 
 pending  : [7, 5, 29, 31, 37, 38, 41, 42, 43, 47, 48, 49, 23]
 solution : [9, 8, 10, 26, 24, 21]

Essensial at level 10 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 0), (4, -1), (5, 32768), (6, -1), (7, 16777216), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 0), (15, 0), (16, 0), (17, 0), (18, 0), (19, 0), (20, -1), (21, -1), (22, 0), (23, 16777216), (24, -1), (25, -1), (26, -1), (27, 0), (28, -1), (29, 65536), (30, -1), (31, 1024), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, 512), (38, 33554432), (39, 0), (40, -1), (41, 16777216), (42, 32768), (43, 32768), (44, -1), (45, -1), (46, -1), (47, 16777216), (48, 2097152), (49, 33554432), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 32768), (6, -1), (7, 16777216), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, 16777216), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, 65536), (30, -1), (31, 1024), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, 512), (38, 512), (39, -1), (40, -1), (41, 16777216), (42, 16384), (43, 16384), (44, -1), (45, -1), (46, -1), (47, 16777216), (48, 2097152), (49, 33554432), (50, -1), (51, -1), (52, -1)]

Covered at level 10 : set()

After reduction : 
 pending  : [7, 5, 29, 31, 37, 38, 41, 42, 43, 47, 48, 49, 23]
 solution : [9, 8, 10, 26, 24, 21]


Solution : [9, 8, 10, 26, 24, 21] has cost 32.


Before backtrack at level 10
 pending : [7, 5, 29, 31, 37, 38, 41, 42, 43, 47, 48, 49, 23]
 solution : [9, 8, 10, 26, 24, 21]

After backtrack at level 10
 pending : [7, 5, 29, 31, 37, 38, 41, 42, 43, 47, 48, 49, 23, 3, 14, 15, 16, 17, 18, 19, 22, 27, 39]
 solution : [9, 8, 10, 26, 24, 21]


Invert decision for 21 at level 9


New level: 10
 pending : [7, 5, 29, 31, 37, 38, 41, 42, 43, 47, 48, 49, 23, 3, 14, 15, 16, 17, 18, 19, 22, 27, 39]
 solution : [9, 8, 10, 26, 24]


Before reduction : 
 pending  : [7, 5, 29, 31, 37, 38, 41, 42, 43, 47, 48, 49, 23, 3, 14, 15, 16, 17, 18, 19, 22, 27, 39]
 solution : [9, 8, 10, 26, 24]

Essensial at level 10 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 32768), (6, -1), (7, 16777216), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, 16777216), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, 65536), (30, -1), (31, 1024), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, 512), (38, 512), (39, -1), (40, -1), (41, 16777216), (42, 16384), (43, 16384), (44, -1), (45, -1), (46, -1), (47, 16777216), (48, 2097152), (49, 33554432), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 131072), (4, -1), (5, 131072), (6, -1), (7, 16777216), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 2097152), (15, 1048576), (16, 65536), (17, 8388608), (18, 4194304), (19, 139264), (20, -1), (21, -1), (22, 32768), (23, 16777216), (24, -1), (25, -1), (26, -1), (27, 524288), (28, -1), (29, 131072), (30, -1), (31, 2048), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, 2048), (38, 33554432), (39, 524288), (40, -1), (41, 33554432), (42, 65536), (43, 65536), (44, -1), (45, -1), (46, -1), (47, 16777216), (48, 2097152), (49, 33554432), (50, -1), (51, -1), (52, -1)]

Covered at level 10 : set()

After reduction : 
 pending  : [7, 5, 29, 31, 37, 38, 41, 42, 43, 47, 48, 49, 23, 3, 14, 15, 16, 17, 18, 19, 22, 27, 39]
 solution : [9, 8, 10, 26, 24]


Solution : [9, 8, 10, 26, 24] has cost 25.


Decide in level 10 among pending : [7, 5, 29, 31, 37, 38, 41, 42, 43, 47, 48, 49, 23, 3, 14, 15, 16, 17, 18, 19, 22, 27, 39]

Coverage : [(0, -1), (1, -1), (2, -1), (3, 131072), (4, -1), (5, 131072), (6, -1), (7, 16777216), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 2097152), (15, 1048576), (16, 65536), (17, 8388608), (18, 4194304), (19, 139264), (20, -1), (21, -1), (22, 32768), (23, 16777216), (24, -1), (25, -1), (26, -1), (27, 524288), (28, -1), (29, 131072), (30, -1), (31, 2048), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, 2048), (38, 33554432), (39, 524288), (40, -1), (41, 33554432), (42, 65536), (43, 65536), (44, -1), (45, -1), (46, -1), (47, 16777216), (48, 2097152), (49, 33554432), (50, -1), (51, -1), (52, -1)]

Decide 38 with phase True at level 10

After decision at level 10
 pending : [7, 5, 29, 31, 37, 41, 42, 43, 47, 48, 49, 23, 3, 14, 15, 16, 17, 18, 19, 22, 27, 39]
 solution : [9, 8, 10, 26, 24, 38]


New level: 11
 pending : [7, 5, 29, 31, 37, 41, 42, 43, 47, 48, 49, 23, 3, 14, 15, 16, 17, 18, 19, 22, 27, 39]
 solution : [9, 8, 10, 26, 24, 38]


Before reduction : 
 pending  : [7, 5, 29, 31, 37, 41, 42, 43, 47, 48, 49, 23, 3, 14, 15, 16, 17, 18, 19, 22, 27, 39]
 solution : [9, 8, 10, 26, 24, 38]

Essensial at level 11 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 131072), (4, -1), (5, 131072), (6, -1), (7, 16777216), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 2097152), (15, 1048576), (16, 65536), (17, 8388608), (18, 4194304), (19, 139264), (20, -1), (21, -1), (22, 32768), (23, 16777216), (24, -1), (25, -1), (26, -1), (27, 524288), (28, -1), (29, 131072), (30, -1), (31, 2048), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, 2048), (38, 33554432), (39, 524288), (40, -1), (41, 33554432), (42, 65536), (43, 65536), (44, -1), (45, -1), (46, -1), (47, 16777216), (48, 2097152), (49, 33554432), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 65536), (4, -1), (5, 32768), (6, -1), (7, 4194304), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 2097152), (15, 1048576), (16, 32768), (17, 4194304), (18, 2097152), (19, 67584), (20, -1), (21, -1), (22, 32768), (23, 4194304), (24, -1), (25, -1), (26, -1), (27, 131072), (28, -1), (29, 32768), (30, -1), (31, 512), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, 512), (38, -1), (39, 131072), (40, -1), (41, 33554432), (42, 16384), (43, 16384), (44, -1), (45, -1), (46, -1), (47, 8388608), (48, 524288), (49, 33554432), (50, -1), (51, -1), (52, -1)]

Covered at level 11 : set()

After reduction : 
 pending  : [7, 5, 29, 31, 37, 41, 42, 43, 47, 48, 49, 23, 3, 14, 15, 16, 17, 18, 19, 22, 27, 39]
 solution : [9, 8, 10, 26, 24, 38]


Solution : [9, 8, 10, 26, 24, 38] has cost 43.


Before backtrack at level 11
 pending : [7, 5, 29, 31, 37, 41, 42, 43, 47, 48, 49, 23, 3, 14, 15, 16, 17, 18, 19, 22, 27, 39]
 solution : [9, 8, 10, 26, 24, 38]

After backtrack at level 11
 pending : [7, 5, 29, 31, 37, 41, 42, 43, 47, 48, 49, 23, 3, 14, 15, 16, 17, 18, 19, 22, 27, 39]
 solution : [9, 8, 10, 26, 24, 38]


Invert decision for 38 at level 10


New level: 11
 pending : [7, 5, 29, 31, 37, 41, 42, 43, 47, 48, 49, 23, 3, 14, 15, 16, 17, 18, 19, 22, 27, 39]
 solution : [9, 8, 10, 26, 24]


Before reduction : 
 pending  : [7, 5, 29, 31, 37, 41, 42, 43, 47, 48, 49, 23, 3, 14, 15, 16, 17, 18, 19, 22, 27, 39]
 solution : [9, 8, 10, 26, 24]

Essensial at level 11 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 65536), (4, -1), (5, 32768), (6, -1), (7, 4194304), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 2097152), (15, 1048576), (16, 32768), (17, 4194304), (18, 2097152), (19, 67584), (20, -1), (21, -1), (22, 32768), (23, 4194304), (24, -1), (25, -1), (26, -1), (27, 131072), (28, -1), (29, 32768), (30, -1), (31, 512), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, 512), (38, -1), (39, 131072), (40, -1), (41, 33554432), (42, 16384), (43, 16384), (44, -1), (45, -1), (46, -1), (47, 8388608), (48, 524288), (49, 33554432), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 131072), (4, -1), (5, 131072), (6, -1), (7, 16777216), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 2097152), (15, 1048576), (16, 65536), (17, 8388608), (18, 4194304), (19, 139264), (20, -1), (21, -1), (22, 32768), (23, 16777216), (24, -1), (25, -1), (26, -1), (27, 524288), (28, -1), (29, 131072), (30, -1), (31, 2048), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, 2048), (38, -1), (39, 524288), (40, -1), (41, 33554432), (42, 65536), (43, 65536), (44, -1), (45, -1), (46, -1), (47, 16777216), (48, 2097152), (49, 33554432), (50, -1), (51, -1), (52, -1)]

Covered at level 11 : set()

After reduction : 
 pending  : [7, 5, 29, 31, 37, 41, 42, 43, 47, 48, 49, 23, 3, 14, 15, 16, 17, 18, 19, 22, 27, 39]
 solution : [9, 8, 10, 26, 24]


Solution : [9, 8, 10, 26, 24] has cost 25.


Decide in level 11 among pending : [7, 5, 29, 31, 37, 41, 42, 43, 47, 48, 49, 23, 3, 14, 15, 16, 17, 18, 19, 22, 27, 39]

Coverage : [(0, -1), (1, -1), (2, -1), (3, 131072), (4, -1), (5, 131072), (6, -1), (7, 16777216), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 2097152), (15, 1048576), (16, 65536), (17, 8388608), (18, 4194304), (19, 139264), (20, -1), (21, -1), (22, 32768), (23, 16777216), (24, -1), (25, -1), (26, -1), (27, 524288), (28, -1), (29, 131072), (30, -1), (31, 2048), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, 2048), (38, -1), (39, 524288), (40, -1), (41, 33554432), (42, 65536), (43, 65536), (44, -1), (45, -1), (46, -1), (47, 16777216), (48, 2097152), (49, 33554432), (50, -1), (51, -1), (52, -1)]

Decide 41 with phase True at level 11

After decision at level 11
 pending : [7, 5, 29, 31, 37, 42, 43, 47, 48, 49, 23, 3, 14, 15, 16, 17, 18, 19, 22, 27, 39]
 solution : [9, 8, 10, 26, 24, 41]


New level: 12
 pending : [7, 5, 29, 31, 37, 42, 43, 47, 48, 49, 23, 3, 14, 15, 16, 17, 18, 19, 22, 27, 39]
 solution : [9, 8, 10, 26, 24, 41]


Before reduction : 
 pending  : [7, 5, 29, 31, 37, 42, 43, 47, 48, 49, 23, 3, 14, 15, 16, 17, 18, 19, 22, 27, 39]
 solution : [9, 8, 10, 26, 24, 41]

Essensial at level 12 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 131072), (4, -1), (5, 131072), (6, -1), (7, 16777216), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 2097152), (15, 1048576), (16, 65536), (17, 8388608), (18, 4194304), (19, 139264), (20, -1), (21, -1), (22, 32768), (23, 16777216), (24, -1), (25, -1), (26, -1), (27, 524288), (28, -1), (29, 131072), (30, -1), (31, 2048), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, 2048), (38, -1), (39, 524288), (40, -1), (41, 33554432), (42, 65536), (43, 65536), (44, -1), (45, -1), (46, -1), (47, 16777216), (48, 2097152), (49, 33554432), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 65536), (4, -1), (5, 0), (6, -1), (7, 16777216), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 2097152), (15, 1048576), (16, 65536), (17, 8388608), (18, 4194304), (19, 67584), (20, -1), (21, -1), (22, 32768), (23, 2048), (24, -1), (25, -1), (26, -1), (27, 524288), (28, -1), (29, 0), (30, -1), (31, 0), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, 0), (38, -1), (39, 524288), (40, -1), (41, -1), (42, 0), (43, 0), (44, -1), (45, -1), (46, -1), (47, 0), (48, 0), (49, 0), (50, -1), (51, -1), (52, -1)]

Covered at level 12 : {37, 5, 42, 43, 47, 48, 49, 29, 31}

After reduction : 
 pending  : [7, 23, 3, 14, 15, 16, 17, 18, 19, 22, 27, 39]
 solution : [9, 8, 10, 26, 24, 41]


Before reduction : 
 pending  : [7, 23, 3, 14, 15, 16, 17, 18, 19, 22, 27, 39]
 solution : [9, 8, 10, 26, 24, 41]

Essensial at level 12 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 65536), (4, -1), (5, 0), (6, -1), (7, 16777216), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 2097152), (15, 1048576), (16, 65536), (17, 8388608), (18, 4194304), (19, 67584), (20, -1), (21, -1), (22, 32768), (23, 2048), (24, -1), (25, -1), (26, -1), (27, 524288), (28, -1), (29, 0), (30, -1), (31, 0), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, 0), (38, -1), (39, 524288), (40, -1), (41, -1), (42, 0), (43, 0), (44, -1), (45, -1), (46, -1), (47, 0), (48, 0), (49, 0), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 65536), (4, -1), (5, -1), (6, -1), (7, 65536), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 2097152), (15, 1048576), (16, 65536), (17, 8388608), (18, 4194304), (19, 67584), (20, -1), (21, -1), (22, 32768), (23, 2048), (24, -1), (25, -1), (26, -1), (27, 524288), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, 524288), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 12 : set()

After reduction : 
 pending  : [7, 23, 3, 14, 15, 16, 17, 18, 19, 22, 27, 39]
 solution : [9, 8, 10, 26, 24, 41]


Solution : [9, 8, 10, 26, 24, 41] has cost 43.


Before backtrack at level 12
 pending : [7, 23, 3, 14, 15, 16, 17, 18, 19, 22, 27, 39]
 solution : [9, 8, 10, 26, 24, 41]

After backtrack at level 12
 pending : [7, 23, 3, 14, 15, 16, 17, 18, 19, 22, 27, 39, 5, 29, 31, 37, 42, 43, 47, 48, 49]
 solution : [9, 8, 10, 26, 24, 41]


Invert decision for 41 at level 11


New level: 12
 pending : [7, 23, 3, 14, 15, 16, 17, 18, 19, 22, 27, 39, 5, 29, 31, 37, 42, 43, 47, 48, 49]
 solution : [9, 8, 10, 26, 24]


Before reduction : 
 pending  : [7, 23, 3, 14, 15, 16, 17, 18, 19, 22, 27, 39, 5, 29, 31, 37, 42, 43, 47, 48, 49]
 solution : [9, 8, 10, 26, 24]

Essensial at level 12 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 65536), (4, -1), (5, -1), (6, -1), (7, 65536), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 2097152), (15, 1048576), (16, 65536), (17, 8388608), (18, 4194304), (19, 67584), (20, -1), (21, -1), (22, 32768), (23, 2048), (24, -1), (25, -1), (26, -1), (27, 524288), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, 524288), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 131072), (4, -1), (5, 131072), (6, -1), (7, 16777216), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 2097152), (15, 1048576), (16, 65536), (17, 8388608), (18, 4194304), (19, 139264), (20, -1), (21, -1), (22, 32768), (23, 16777216), (24, -1), (25, -1), (26, -1), (27, 524288), (28, -1), (29, 131072), (30, -1), (31, 2048), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, 2048), (38, -1), (39, 524288), (40, -1), (41, -1), (42, 65536), (43, 65536), (44, -1), (45, -1), (46, -1), (47, 8388608), (48, 2097152), (49, 16777216), (50, -1), (51, -1), (52, -1)]

Covered at level 12 : set()

After reduction : 
 pending  : [7, 23, 3, 14, 15, 16, 17, 18, 19, 22, 27, 39, 5, 29, 31, 37, 42, 43, 47, 48, 49]
 solution : [9, 8, 10, 26, 24]


Solution : [9, 8, 10, 26, 24] has cost 25.


Decide in level 12 among pending : [7, 23, 3, 14, 15, 16, 17, 18, 19, 22, 27, 39, 5, 29, 31, 37, 42, 43, 47, 48, 49]

Coverage : [(0, -1), (1, -1), (2, -1), (3, 131072), (4, -1), (5, 131072), (6, -1), (7, 16777216), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 2097152), (15, 1048576), (16, 65536), (17, 8388608), (18, 4194304), (19, 139264), (20, -1), (21, -1), (22, 32768), (23, 16777216), (24, -1), (25, -1), (26, -1), (27, 524288), (28, -1), (29, 131072), (30, -1), (31, 2048), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, 2048), (38, -1), (39, 524288), (40, -1), (41, -1), (42, 65536), (43, 65536), (44, -1), (45, -1), (46, -1), (47, 8388608), (48, 2097152), (49, 16777216), (50, -1), (51, -1), (52, -1)]

Decide 7 with phase True at level 12

After decision at level 12
 pending : [23, 3, 14, 15, 16, 17, 18, 19, 22, 27, 39, 5, 29, 31, 37, 42, 43, 47, 48, 49]
 solution : [9, 8, 10, 26, 24, 7]


New level: 13
 pending : [23, 3, 14, 15, 16, 17, 18, 19, 22, 27, 39, 5, 29, 31, 37, 42, 43, 47, 48, 49]
 solution : [9, 8, 10, 26, 24, 7]


Before reduction : 
 pending  : [23, 3, 14, 15, 16, 17, 18, 19, 22, 27, 39, 5, 29, 31, 37, 42, 43, 47, 48, 49]
 solution : [9, 8, 10, 26, 24, 7]

Essensial at level 13 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 131072), (4, -1), (5, 131072), (6, -1), (7, 16777216), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 2097152), (15, 1048576), (16, 65536), (17, 8388608), (18, 4194304), (19, 139264), (20, -1), (21, -1), (22, 32768), (23, 16777216), (24, -1), (25, -1), (26, -1), (27, 524288), (28, -1), (29, 131072), (30, -1), (31, 2048), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, 2048), (38, -1), (39, 524288), (40, -1), (41, -1), (42, 65536), (43, 65536), (44, -1), (45, -1), (46, -1), (47, 8388608), (48, 2097152), (49, 16777216), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 65536), (4, -1), (5, 0), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 2097152), (15, 1048576), (16, 32768), (17, 4194304), (18, 2097152), (19, 67584), (20, -1), (21, -1), (22, 32768), (23, 0), (24, -1), (25, -1), (26, -1), (27, 524288), (28, -1), (29, 0), (30, -1), (31, 0), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, 0), (38, -1), (39, 524288), (40, -1), (41, -1), (42, 0), (43, 0), (44, -1), (45, -1), (46, -1), (47, 0), (48, 0), (49, 0), (50, -1), (51, -1), (52, -1)]

Covered at level 13 : {37, 5, 42, 43, 47, 48, 49, 23, 29, 31}

After reduction : 
 pending  : [3, 14, 15, 16, 17, 18, 19, 22, 27, 39]
 solution : [9, 8, 10, 26, 24, 7]


Before reduction : 
 pending  : [3, 14, 15, 16, 17, 18, 19, 22, 27, 39]
 solution : [9, 8, 10, 26, 24, 7]

Essensial at level 13 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 65536), (4, -1), (5, 0), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 2097152), (15, 1048576), (16, 32768), (17, 4194304), (18, 2097152), (19, 67584), (20, -1), (21, -1), (22, 32768), (23, 0), (24, -1), (25, -1), (26, -1), (27, 524288), (28, -1), (29, 0), (30, -1), (31, 0), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, 0), (38, -1), (39, 524288), (40, -1), (41, -1), (42, 0), (43, 0), (44, -1), (45, -1), (46, -1), (47, 0), (48, 0), (49, 0), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 65536), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 2097152), (15, 1048576), (16, 32768), (17, 4194304), (18, 2097152), (19, 67584), (20, -1), (21, -1), (22, 32768), (23, -1), (24, -1), (25, -1), (26, -1), (27, 524288), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, 524288), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 13 : set()

After reduction : 
 pending  : [3, 14, 15, 16, 17, 18, 19, 22, 27, 39]
 solution : [9, 8, 10, 26, 24, 7]


Solution : [9, 8, 10, 26, 24, 7] has cost 29.


Before backtrack at level 13
 pending : [3, 14, 15, 16, 17, 18, 19, 22, 27, 39]
 solution : [9, 8, 10, 26, 24, 7]

After backtrack at level 13
 pending : [3, 14, 15, 16, 17, 18, 19, 22, 27, 39, 23, 5, 29, 31, 37, 42, 43, 47, 48, 49]
 solution : [9, 8, 10, 26, 24, 7]


Invert decision for 7 at level 12


New level: 13
 pending : [3, 14, 15, 16, 17, 18, 19, 22, 27, 39, 23, 5, 29, 31, 37, 42, 43, 47, 48, 49]
 solution : [9, 8, 10, 26, 24]


Before reduction : 
 pending  : [3, 14, 15, 16, 17, 18, 19, 22, 27, 39, 23, 5, 29, 31, 37, 42, 43, 47, 48, 49]
 solution : [9, 8, 10, 26, 24]

Essensial at level 13 : {23}

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 65536), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 2097152), (15, 1048576), (16, 32768), (17, 4194304), (18, 2097152), (19, 67584), (20, -1), (21, -1), (22, 32768), (23, -1), (24, -1), (25, -1), (26, -1), (27, 524288), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, 524288), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 65536), (4, -1), (5, 0), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 2097152), (15, 1048576), (16, 32768), (17, 4194304), (18, 2097152), (19, 67584), (20, -1), (21, -1), (22, 32768), (23, -1), (24, -1), (25, -1), (26, -1), (27, 524288), (28, -1), (29, 0), (30, -1), (31, 0), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, 0), (38, -1), (39, 524288), (40, -1), (41, -1), (42, 0), (43, 0), (44, -1), (45, -1), (46, -1), (47, 0), (48, 0), (49, 0), (50, -1), (51, -1), (52, -1)]

Covered at level 13 : {37, 5, 42, 43, 47, 48, 49, 29, 31}

After reduction : 
 pending  : [3, 14, 15, 16, 17, 18, 19, 22, 27, 39]
 solution : [9, 8, 10, 26, 24, 23]


Before reduction : 
 pending  : [3, 14, 15, 16, 17, 18, 19, 22, 27, 39]
 solution : [9, 8, 10, 26, 24, 23]

Essensial at level 13 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 65536), (4, -1), (5, 0), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 2097152), (15, 1048576), (16, 32768), (17, 4194304), (18, 2097152), (19, 67584), (20, -1), (21, -1), (22, 32768), (23, -1), (24, -1), (25, -1), (26, -1), (27, 524288), (28, -1), (29, 0), (30, -1), (31, 0), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, 0), (38, -1), (39, 524288), (40, -1), (41, -1), (42, 0), (43, 0), (44, -1), (45, -1), (46, -1), (47, 0), (48, 0), (49, 0), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 65536), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 2097152), (15, 1048576), (16, 32768), (17, 4194304), (18, 2097152), (19, 67584), (20, -1), (21, -1), (22, 32768), (23, -1), (24, -1), (25, -1), (26, -1), (27, 524288), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, 524288), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 13 : set()

After reduction : 
 pending  : [3, 14, 15, 16, 17, 18, 19, 22, 27, 39]
 solution : [9, 8, 10, 26, 24, 23]


Solution : [9, 8, 10, 26, 24, 23] has cost 32.


Before backtrack at level 13
 pending : [3, 14, 15, 16, 17, 18, 19, 22, 27, 39]
 solution : [9, 8, 10, 26, 24, 23]

After backtrack at level 13
 pending : [3, 14, 15, 16, 17, 18, 19, 22, 27, 39, 23, 5, 29, 31, 37, 42, 43, 47, 48, 49]
 solution : [9, 8, 10, 26, 24]


Before backtrack at level 12
 pending : [3, 14, 15, 16, 17, 18, 19, 22, 27, 39, 23, 5, 29, 31, 37, 42, 43, 47, 48, 49]
 solution : [9, 8, 10, 26, 24]

After backtrack at level 12
 pending : [3, 14, 15, 16, 17, 18, 19, 22, 27, 39, 23, 5, 29, 31, 37, 42, 43, 47, 48, 49, 7]
 solution : [9, 8, 10, 26, 24]


Before backtrack at level 11
 pending : [3, 14, 15, 16, 17, 18, 19, 22, 27, 39, 23, 5, 29, 31, 37, 42, 43, 47, 48, 49, 7]
 solution : [9, 8, 10, 26, 24]

After backtrack at level 11
 pending : [3, 14, 15, 16, 17, 18, 19, 22, 27, 39, 23, 5, 29, 31, 37, 42, 43, 47, 48, 49, 7, 41]
 solution : [9, 8, 10, 26, 24]


Before backtrack at level 10
 pending : [3, 14, 15, 16, 17, 18, 19, 22, 27, 39, 23, 5, 29, 31, 37, 42, 43, 47, 48, 49, 7, 41]
 solution : [9, 8, 10, 26, 24]

After backtrack at level 10
 pending : [3, 14, 15, 16, 17, 18, 19, 22, 27, 39, 23, 5, 29, 31, 37, 42, 43, 47, 48, 49, 7, 41, 38]
 solution : [9, 8, 10, 26, 24]


Before backtrack at level 9
 pending : [3, 14, 15, 16, 17, 18, 19, 22, 27, 39, 23, 5, 29, 31, 37, 42, 43, 47, 48, 49, 7, 41, 38]
 solution : [9, 8, 10, 26, 24]

After backtrack at level 9
 pending : [3, 14, 15, 16, 17, 18, 19, 22, 27, 39, 23, 5, 29, 31, 37, 42, 43, 47, 48, 49, 7, 41, 38, 30, 33, 21]
 solution : [9, 8, 10, 26, 24]


Invert decision for 24 at level 8


New level: 9
 pending : [3, 14, 15, 16, 17, 18, 19, 22, 27, 39, 23, 5, 29, 31, 37, 42, 43, 47, 48, 49, 7, 41, 38, 30, 33, 21]
 solution : [9, 8, 10, 26]


Before reduction : 
 pending  : [3, 14, 15, 16, 17, 18, 19, 22, 27, 39, 23, 5, 29, 31, 37, 42, 43, 47, 48, 49, 7, 41, 38, 30, 33, 21]
 solution : [9, 8, 10, 26]

Essensial at level 9 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 65536), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 2097152), (15, 1048576), (16, 32768), (17, 4194304), (18, 2097152), (19, 67584), (20, -1), (21, -1), (22, 32768), (23, -1), (24, -1), (25, -1), (26, -1), (27, 524288), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, 524288), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 131072), (4, -1), (5, 524288), (6, -1), (7, 67108864), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 2097152), (15, 1048576), (16, 65536), (17, 8388608), (18, 4194304), (19, 139264), (20, -1), (21, 134217728), (22, 32768), (23, 67108864), (24, -1), (25, -1), (26, -1), (27, 524288), (28, -1), (29, 524288), (30, 524288), (31, 8192), (32, -1), (33, 4096), (34, -1), (35, -1), (36, -1), (37, 8192), (38, 33554432), (39, 524288), (40, -1), (41, 67108864), (42, 262144), (43, 262144), (44, -1), (45, -1), (46, -1), (47, 33554432), (48, 8388608), (49, 33554432), (50, -1), (51, -1), (52, -1)]

Covered at level 9 : set()

After reduction : 
 pending  : [3, 14, 15, 16, 17, 18, 19, 22, 27, 39, 23, 5, 29, 31, 37, 42, 43, 47, 48, 49, 7, 41, 38, 30, 33, 21]
 solution : [9, 8, 10, 26]


Solution : [9, 8, 10, 26] has cost 18.


Decide in level 9 among pending : [3, 14, 15, 16, 17, 18, 19, 22, 27, 39, 23, 5, 29, 31, 37, 42, 43, 47, 48, 49, 7, 41, 38, 30, 33, 21]

Coverage : [(0, -1), (1, -1), (2, -1), (3, 131072), (4, -1), (5, 524288), (6, -1), (7, 67108864), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 2097152), (15, 1048576), (16, 65536), (17, 8388608), (18, 4194304), (19, 139264), (20, -1), (21, 134217728), (22, 32768), (23, 67108864), (24, -1), (25, -1), (26, -1), (27, 524288), (28, -1), (29, 524288), (30, 524288), (31, 8192), (32, -1), (33, 4096), (34, -1), (35, -1), (36, -1), (37, 8192), (38, 33554432), (39, 524288), (40, -1), (41, 67108864), (42, 262144), (43, 262144), (44, -1), (45, -1), (46, -1), (47, 33554432), (48, 8388608), (49, 33554432), (50, -1), (51, -1), (52, -1)]

Decide 21 with phase True at level 9

After decision at level 9
 pending : [3, 14, 15, 16, 17, 18, 19, 22, 27, 39, 23, 5, 29, 31, 37, 42, 43, 47, 48, 49, 7, 41, 38, 30, 33]
 solution : [9, 8, 10, 26, 21]


New level: 10
 pending : [3, 14, 15, 16, 17, 18, 19, 22, 27, 39, 23, 5, 29, 31, 37, 42, 43, 47, 48, 49, 7, 41, 38, 30, 33]
 solution : [9, 8, 10, 26, 21]


Before reduction : 
 pending  : [3, 14, 15, 16, 17, 18, 19, 22, 27, 39, 23, 5, 29, 31, 37, 42, 43, 47, 48, 49, 7, 41, 38, 30, 33]
 solution : [9, 8, 10, 26, 21]

Essensial at level 10 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 131072), (4, -1), (5, 524288), (6, -1), (7, 67108864), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 2097152), (15, 1048576), (16, 65536), (17, 8388608), (18, 4194304), (19, 139264), (20, -1), (21, 134217728), (22, 32768), (23, 67108864), (24, -1), (25, -1), (26, -1), (27, 524288), (28, -1), (29, 524288), (30, 524288), (31, 8192), (32, -1), (33, 4096), (34, -1), (35, -1), (36, -1), (37, 8192), (38, 33554432), (39, 524288), (40, -1), (41, 67108864), (42, 262144), (43, 262144), (44, -1), (45, -1), (46, -1), (47, 33554432), (48, 8388608), (49, 33554432), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 0), (4, -1), (5, 131072), (6, -1), (7, 67108864), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 0), (15, 0), (16, 0), (17, 0), (18, 0), (19, 0), (20, -1), (21, -1), (22, 0), (23, 67108864), (24, -1), (25, -1), (26, -1), (27, 0), (28, -1), (29, 262144), (30, 524288), (31, 4096), (32, -1), (33, 4096), (34, -1), (35, -1), (36, -1), (37, 2048), (38, 1024), (39, 0), (40, -1), (41, 33554432), (42, 65536), (43, 65536), (44, -1), (45, -1), (46, -1), (47, 33554432), (48, 8388608), (49, 33554432), (50, -1), (51, -1), (52, -1)]

Covered at level 10 : {3, 39, 14, 15, 16, 17, 18, 19, 22, 27}

After reduction : 
 pending  : [23, 5, 29, 31, 37, 42, 43, 47, 48, 49, 7, 41, 38, 30, 33]
 solution : [9, 8, 10, 26, 21]


Before reduction : 
 pending  : [23, 5, 29, 31, 37, 42, 43, 47, 48, 49, 7, 41, 38, 30, 33]
 solution : [9, 8, 10, 26, 21]

Essensial at level 10 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 0), (4, -1), (5, 131072), (6, -1), (7, 67108864), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 0), (15, 0), (16, 0), (17, 0), (18, 0), (19, 0), (20, -1), (21, -1), (22, 0), (23, 67108864), (24, -1), (25, -1), (26, -1), (27, 0), (28, -1), (29, 262144), (30, 524288), (31, 4096), (32, -1), (33, 4096), (34, -1), (35, -1), (36, -1), (37, 2048), (38, 1024), (39, 0), (40, -1), (41, 33554432), (42, 65536), (43, 65536), (44, -1), (45, -1), (46, -1), (47, 33554432), (48, 8388608), (49, 33554432), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 131072), (6, -1), (7, 67108864), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, 67108864), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, 262144), (30, 524288), (31, 4096), (32, -1), (33, 4096), (34, -1), (35, -1), (36, -1), (37, 2048), (38, 1024), (39, -1), (40, -1), (41, 33554432), (42, 65536), (43, 65536), (44, -1), (45, -1), (46, -1), (47, 33554432), (48, 8388608), (49, 33554432), (50, -1), (51, -1), (52, -1)]

Covered at level 10 : set()

After reduction : 
 pending  : [23, 5, 29, 31, 37, 42, 43, 47, 48, 49, 7, 41, 38, 30, 33]
 solution : [9, 8, 10, 26, 21]


Solution : [9, 8, 10, 26, 21] has cost 25.


Decide in level 10 among pending : [23, 5, 29, 31, 37, 42, 43, 47, 48, 49, 7, 41, 38, 30, 33]

Coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 131072), (6, -1), (7, 67108864), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, 67108864), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, 262144), (30, 524288), (31, 4096), (32, -1), (33, 4096), (34, -1), (35, -1), (36, -1), (37, 2048), (38, 1024), (39, -1), (40, -1), (41, 33554432), (42, 65536), (43, 65536), (44, -1), (45, -1), (46, -1), (47, 33554432), (48, 8388608), (49, 33554432), (50, -1), (51, -1), (52, -1)]

Decide 23 with phase True at level 10

After decision at level 10
 pending : [5, 29, 31, 37, 42, 43, 47, 48, 49, 7, 41, 38, 30, 33]
 solution : [9, 8, 10, 26, 21, 23]


New level: 11
 pending : [5, 29, 31, 37, 42, 43, 47, 48, 49, 7, 41, 38, 30, 33]
 solution : [9, 8, 10, 26, 21, 23]


Before reduction : 
 pending  : [5, 29, 31, 37, 42, 43, 47, 48, 49, 7, 41, 38, 30, 33]
 solution : [9, 8, 10, 26, 21, 23]

Essensial at level 11 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 131072), (6, -1), (7, 67108864), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, 67108864), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, 262144), (30, 524288), (31, 4096), (32, -1), (33, 4096), (34, -1), (35, -1), (36, -1), (37, 2048), (38, 1024), (39, -1), (40, -1), (41, 33554432), (42, 65536), (43, 65536), (44, -1), (45, -1), (46, -1), (47, 33554432), (48, 8388608), (49, 33554432), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 0), (6, -1), (7, 0), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, 0), (30, 0), (31, 0), (32, -1), (33, 0), (34, -1), (35, -1), (36, -1), (37, 0), (38, 0), (39, -1), (40, -1), (41, 0), (42, 0), (43, 0), (44, -1), (45, -1), (46, -1), (47, 0), (48, 0), (49, 0), (50, -1), (51, -1), (52, -1)]

Covered at level 11 : {33, 37, 5, 7, 38, 41, 42, 43, 47, 48, 49, 29, 30, 31}

After reduction : 
 pending  : []
 solution : [9, 8, 10, 26, 21, 23]


Before reduction : 
 pending  : []
 solution : [9, 8, 10, 26, 21, 23]

Essensial at level 11 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 0), (6, -1), (7, 0), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, 0), (30, 0), (31, 0), (32, -1), (33, 0), (34, -1), (35, -1), (36, -1), (37, 0), (38, 0), (39, -1), (40, -1), (41, 0), (42, 0), (43, 0), (44, -1), (45, -1), (46, -1), (47, 0), (48, 0), (49, 0), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 11 : set()

After reduction : 
 pending  : []
 solution : [9, 8, 10, 26, 21, 23]


Solution : [9, 8, 10, 26, 21, 23] has cost 32.


Before backtrack at level 11
 pending : []
 solution : [9, 8, 10, 26, 21, 23]

After backtrack at level 11
 pending : [5, 29, 31, 37, 42, 43, 47, 48, 49, 7, 41, 38, 30, 33]
 solution : [9, 8, 10, 26, 21, 23]


Invert decision for 23 at level 10


New level: 11
 pending : [5, 29, 31, 37, 42, 43, 47, 48, 49, 7, 41, 38, 30, 33]
 solution : [9, 8, 10, 26, 21]


Before reduction : 
 pending  : [5, 29, 31, 37, 42, 43, 47, 48, 49, 7, 41, 38, 30, 33]
 solution : [9, 8, 10, 26, 21]

Essensial at level 11 : {7}

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 0), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, 0), (30, 0), (31, 0), (32, -1), (33, 0), (34, -1), (35, -1), (36, -1), (37, 0), (38, 0), (39, -1), (40, -1), (41, 0), (42, 0), (43, 0), (44, -1), (45, -1), (46, -1), (47, 0), (48, 0), (49, 0), (50, -1), (51, -1), (52, -1)]

Covered at level 11 : {33, 37, 5, 38, 41, 42, 43, 47, 48, 49, 29, 30, 31}

After reduction : 
 pending  : []
 solution : [9, 8, 10, 26, 21, 7]


Before reduction : 
 pending  : []
 solution : [9, 8, 10, 26, 21, 7]

Essensial at level 11 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 0), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, 0), (30, 0), (31, 0), (32, -1), (33, 0), (34, -1), (35, -1), (36, -1), (37, 0), (38, 0), (39, -1), (40, -1), (41, 0), (42, 0), (43, 0), (44, -1), (45, -1), (46, -1), (47, 0), (48, 0), (49, 0), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 11 : set()

After reduction : 
 pending  : []
 solution : [9, 8, 10, 26, 21, 7]


Solution : [9, 8, 10, 26, 21, 7] has cost 29.


Before backtrack at level 11
 pending : []
 solution : [9, 8, 10, 26, 21, 7]

After backtrack at level 11
 pending : [7, 5, 29, 31, 37, 42, 43, 47, 48, 49, 41, 38, 30, 33]
 solution : [9, 8, 10, 26, 21]


Before backtrack at level 10
 pending : [7, 5, 29, 31, 37, 42, 43, 47, 48, 49, 41, 38, 30, 33]
 solution : [9, 8, 10, 26, 21]

After backtrack at level 10
 pending : [7, 5, 29, 31, 37, 42, 43, 47, 48, 49, 41, 38, 30, 33, 3, 14, 15, 16, 17, 18, 19, 22, 27, 39, 23]
 solution : [9, 8, 10, 26, 21]


Invert decision for 21 at level 9


New level: 10
 pending : [7, 5, 29, 31, 37, 42, 43, 47, 48, 49, 41, 38, 30, 33, 3, 14, 15, 16, 17, 18, 19, 22, 27, 39, 23]
 solution : [9, 8, 10, 26]


Before reduction : 
 pending  : [7, 5, 29, 31, 37, 42, 43, 47, 48, 49, 41, 38, 30, 33, 3, 14, 15, 16, 17, 18, 19, 22, 27, 39, 23]
 solution : [9, 8, 10, 26]

Essensial at level 10 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 131072), (4, -1), (5, 524288), (6, -1), (7, 67108864), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 2097152), (15, 1048576), (16, 65536), (17, 8388608), (18, 4194304), (19, 139264), (20, -1), (21, -1), (22, 32768), (23, 67108864), (24, -1), (25, -1), (26, -1), (27, 524288), (28, -1), (29, 524288), (30, 524288), (31, 8192), (32, -1), (33, 4096), (34, -1), (35, -1), (36, -1), (37, 8192), (38, 33554432), (39, 524288), (40, -1), (41, 67108864), (42, 262144), (43, 262144), (44, -1), (45, -1), (46, -1), (47, 33554432), (48, 8388608), (49, 33554432), (50, -1), (51, -1), (52, -1)]

Covered at level 10 : set()

After reduction : 
 pending  : [7, 5, 29, 31, 37, 42, 43, 47, 48, 49, 41, 38, 30, 33, 3, 14, 15, 16, 17, 18, 19, 22, 27, 39, 23]
 solution : [9, 8, 10, 26]


Solution : [9, 8, 10, 26] has cost 18.


Decide in level 10 among pending : [7, 5, 29, 31, 37, 42, 43, 47, 48, 49, 41, 38, 30, 33, 3, 14, 15, 16, 17, 18, 19, 22, 27, 39, 23]

Coverage : [(0, -1), (1, -1), (2, -1), (3, 131072), (4, -1), (5, 524288), (6, -1), (7, 67108864), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 2097152), (15, 1048576), (16, 65536), (17, 8388608), (18, 4194304), (19, 139264), (20, -1), (21, -1), (22, 32768), (23, 67108864), (24, -1), (25, -1), (26, -1), (27, 524288), (28, -1), (29, 524288), (30, 524288), (31, 8192), (32, -1), (33, 4096), (34, -1), (35, -1), (36, -1), (37, 8192), (38, 33554432), (39, 524288), (40, -1), (41, 67108864), (42, 262144), (43, 262144), (44, -1), (45, -1), (46, -1), (47, 33554432), (48, 8388608), (49, 33554432), (50, -1), (51, -1), (52, -1)]

Decide 7 with phase True at level 10

After decision at level 10
 pending : [5, 29, 31, 37, 42, 43, 47, 48, 49, 41, 38, 30, 33, 3, 14, 15, 16, 17, 18, 19, 22, 27, 39, 23]
 solution : [9, 8, 10, 26, 7]


New level: 11
 pending : [5, 29, 31, 37, 42, 43, 47, 48, 49, 41, 38, 30, 33, 3, 14, 15, 16, 17, 18, 19, 22, 27, 39, 23]
 solution : [9, 8, 10, 26, 7]


Before reduction : 
 pending  : [5, 29, 31, 37, 42, 43, 47, 48, 49, 41, 38, 30, 33, 3, 14, 15, 16, 17, 18, 19, 22, 27, 39, 23]
 solution : [9, 8, 10, 26, 7]

Essensial at level 11 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 131072), (4, -1), (5, 524288), (6, -1), (7, 67108864), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 2097152), (15, 1048576), (16, 65536), (17, 8388608), (18, 4194304), (19, 139264), (20, -1), (21, -1), (22, 32768), (23, 67108864), (24, -1), (25, -1), (26, -1), (27, 524288), (28, -1), (29, 524288), (30, 524288), (31, 8192), (32, -1), (33, 4096), (34, -1), (35, -1), (36, -1), (37, 8192), (38, 33554432), (39, 524288), (40, -1), (41, 67108864), (42, 262144), (43, 262144), (44, -1), (45, -1), (46, -1), (47, 33554432), (48, 8388608), (49, 33554432), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 65536), (4, -1), (5, 0), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 2097152), (15, 1048576), (16, 32768), (17, 4194304), (18, 2097152), (19, 67584), (20, -1), (21, -1), (22, 32768), (23, 0), (24, -1), (25, -1), (26, -1), (27, 524288), (28, -1), (29, 0), (30, 0), (31, 0), (32, -1), (33, 0), (34, -1), (35, -1), (36, -1), (37, 0), (38, 32768), (39, 524288), (40, -1), (41, 0), (42, 0), (43, 0), (44, -1), (45, -1), (46, -1), (47, 0), (48, 0), (49, 0), (50, -1), (51, -1), (52, -1)]

Covered at level 11 : {33, 37, 5, 41, 42, 43, 47, 48, 49, 23, 29, 30, 31}

After reduction : 
 pending  : [38, 3, 14, 15, 16, 17, 18, 19, 22, 27, 39]
 solution : [9, 8, 10, 26, 7]


Before reduction : 
 pending  : [38, 3, 14, 15, 16, 17, 18, 19, 22, 27, 39]
 solution : [9, 8, 10, 26, 7]

Essensial at level 11 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 65536), (4, -1), (5, 0), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 2097152), (15, 1048576), (16, 32768), (17, 4194304), (18, 2097152), (19, 67584), (20, -1), (21, -1), (22, 32768), (23, 0), (24, -1), (25, -1), (26, -1), (27, 524288), (28, -1), (29, 0), (30, 0), (31, 0), (32, -1), (33, 0), (34, -1), (35, -1), (36, -1), (37, 0), (38, 32768), (39, 524288), (40, -1), (41, 0), (42, 0), (43, 0), (44, -1), (45, -1), (46, -1), (47, 0), (48, 0), (49, 0), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 65536), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 2097152), (15, 1048576), (16, 32768), (17, 4194304), (18, 2097152), (19, 67584), (20, -1), (21, -1), (22, 32768), (23, -1), (24, -1), (25, -1), (26, -1), (27, 524288), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, 32768), (39, 524288), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 11 : set()

After reduction : 
 pending  : [38, 3, 14, 15, 16, 17, 18, 19, 22, 27, 39]
 solution : [9, 8, 10, 26, 7]


Solution : [9, 8, 10, 26, 7] has cost 22.


Decide in level 11 among pending : [38, 3, 14, 15, 16, 17, 18, 19, 22, 27, 39]

Coverage : [(0, -1), (1, -1), (2, -1), (3, 65536), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 2097152), (15, 1048576), (16, 32768), (17, 4194304), (18, 2097152), (19, 67584), (20, -1), (21, -1), (22, 32768), (23, -1), (24, -1), (25, -1), (26, -1), (27, 524288), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, 32768), (39, 524288), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Decide 17 with phase True at level 11

After decision at level 11
 pending : [38, 3, 14, 15, 16, 18, 19, 22, 27, 39]
 solution : [9, 8, 10, 26, 7, 17]


New level: 12
 pending : [38, 3, 14, 15, 16, 18, 19, 22, 27, 39]
 solution : [9, 8, 10, 26, 7, 17]


Before reduction : 
 pending  : [38, 3, 14, 15, 16, 18, 19, 22, 27, 39]
 solution : [9, 8, 10, 26, 7, 17]

Essensial at level 12 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 65536), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 2097152), (15, 1048576), (16, 32768), (17, 4194304), (18, 2097152), (19, 67584), (20, -1), (21, -1), (22, 32768), (23, -1), (24, -1), (25, -1), (26, -1), (27, 524288), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, 32768), (39, 524288), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 0), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 32768), (15, 8192), (16, 0), (17, -1), (18, 0), (19, 0), (20, -1), (21, -1), (22, 8192), (23, -1), (24, -1), (25, -1), (26, -1), (27, 2048), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, 1024), (39, 2048), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 12 : {16, 19, 18, 3}

After reduction : 
 pending  : [38, 14, 15, 22, 27, 39]
 solution : [9, 8, 10, 26, 7, 17]


Before reduction : 
 pending  : [38, 14, 15, 22, 27, 39]
 solution : [9, 8, 10, 26, 7, 17]

Essensial at level 12 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 0), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 32768), (15, 8192), (16, 0), (17, -1), (18, 0), (19, 0), (20, -1), (21, -1), (22, 8192), (23, -1), (24, -1), (25, -1), (26, -1), (27, 2048), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, 1024), (39, 2048), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 32768), (15, 8192), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, 8192), (23, -1), (24, -1), (25, -1), (26, -1), (27, 2048), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, 1024), (39, 2048), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 12 : set()

After reduction : 
 pending  : [38, 14, 15, 22, 27, 39]
 solution : [9, 8, 10, 26, 7, 17]


Solution : [9, 8, 10, 26, 7, 17] has cost 31.


Before backtrack at level 12
 pending : [38, 14, 15, 22, 27, 39]
 solution : [9, 8, 10, 26, 7, 17]

After backtrack at level 12
 pending : [38, 14, 15, 22, 27, 39, 3, 16, 18, 19]
 solution : [9, 8, 10, 26, 7, 17]


Invert decision for 17 at level 11


New level: 12
 pending : [38, 14, 15, 22, 27, 39, 3, 16, 18, 19]
 solution : [9, 8, 10, 26, 7]


Before reduction : 
 pending  : [38, 14, 15, 22, 27, 39, 3, 16, 18, 19]
 solution : [9, 8, 10, 26, 7]

Essensial at level 12 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 32768), (15, 8192), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, 8192), (23, -1), (24, -1), (25, -1), (26, -1), (27, 2048), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, 1024), (39, 2048), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 65536), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 2097152), (15, 1048576), (16, 32768), (17, -1), (18, 2097152), (19, 67584), (20, -1), (21, -1), (22, 32768), (23, -1), (24, -1), (25, -1), (26, -1), (27, 524288), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, 32768), (39, 524288), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 12 : set()

After reduction : 
 pending  : [38, 14, 15, 22, 27, 39, 3, 16, 18, 19]
 solution : [9, 8, 10, 26, 7]


Solution : [9, 8, 10, 26, 7] has cost 22.


Decide in level 12 among pending : [38, 14, 15, 22, 27, 39, 3, 16, 18, 19]

Coverage : [(0, -1), (1, -1), (2, -1), (3, 65536), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 2097152), (15, 1048576), (16, 32768), (17, -1), (18, 2097152), (19, 67584), (20, -1), (21, -1), (22, 32768), (23, -1), (24, -1), (25, -1), (26, -1), (27, 524288), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, 32768), (39, 524288), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Decide 14 with phase True at level 12

After decision at level 12
 pending : [38, 15, 22, 27, 39, 3, 16, 18, 19]
 solution : [9, 8, 10, 26, 7, 14]


New level: 13
 pending : [38, 15, 22, 27, 39, 3, 16, 18, 19]
 solution : [9, 8, 10, 26, 7, 14]


Before reduction : 
 pending  : [38, 15, 22, 27, 39, 3, 16, 18, 19]
 solution : [9, 8, 10, 26, 7, 14]

Essensial at level 13 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 65536), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 2097152), (15, 1048576), (16, 32768), (17, -1), (18, 2097152), (19, 67584), (20, -1), (21, -1), (22, 32768), (23, -1), (24, -1), (25, -1), (26, -1), (27, 524288), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, 32768), (39, 524288), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 32768), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, 0), (16, 0), (17, -1), (18, 524288), (19, 33280), (20, -1), (21, -1), (22, 0), (23, -1), (24, -1), (25, -1), (26, -1), (27, 131072), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, 512), (39, 131072), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 13 : {16, 22, 15}

After reduction : 
 pending  : [38, 27, 39, 3, 18, 19]
 solution : [9, 8, 10, 26, 7, 14]


Before reduction : 
 pending  : [38, 27, 39, 3, 18, 19]
 solution : [9, 8, 10, 26, 7, 14]

Essensial at level 13 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 32768), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, 0), (16, 0), (17, -1), (18, 524288), (19, 33280), (20, -1), (21, -1), (22, 0), (23, -1), (24, -1), (25, -1), (26, -1), (27, 131072), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, 512), (39, 131072), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 32768), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, 524288), (19, 33280), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, 131072), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, 512), (39, 131072), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 13 : set()

After reduction : 
 pending  : [38, 27, 39, 3, 18, 19]
 solution : [9, 8, 10, 26, 7, 14]


Solution : [9, 8, 10, 26, 7, 14] has cost 29.


Before backtrack at level 13
 pending : [38, 27, 39, 3, 18, 19]
 solution : [9, 8, 10, 26, 7, 14]

After backtrack at level 13
 pending : [38, 27, 39, 3, 18, 19, 15, 22, 16]
 solution : [9, 8, 10, 26, 7, 14]


Invert decision for 14 at level 12


New level: 13
 pending : [38, 27, 39, 3, 18, 19, 15, 22, 16]
 solution : [9, 8, 10, 26, 7]


Before reduction : 
 pending  : [38, 27, 39, 3, 18, 19, 15, 22, 16]
 solution : [9, 8, 10, 26, 7]

Essensial at level 13 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 32768), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, 524288), (19, 33280), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, 131072), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, 512), (39, 131072), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 65536), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, 1048576), (16, 32768), (17, -1), (18, 2097152), (19, 67584), (20, -1), (21, -1), (22, 32768), (23, -1), (24, -1), (25, -1), (26, -1), (27, 524288), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, 32768), (39, 524288), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 13 : set()

After reduction : 
 pending  : [38, 27, 39, 3, 18, 19, 15, 22, 16]
 solution : [9, 8, 10, 26, 7]


Solution : [9, 8, 10, 26, 7] has cost 22.


Decide in level 13 among pending : [38, 27, 39, 3, 18, 19, 15, 22, 16]

Coverage : [(0, -1), (1, -1), (2, -1), (3, 65536), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, 1048576), (16, 32768), (17, -1), (18, 2097152), (19, 67584), (20, -1), (21, -1), (22, 32768), (23, -1), (24, -1), (25, -1), (26, -1), (27, 524288), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, 32768), (39, 524288), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Decide 18 with phase True at level 13

After decision at level 13
 pending : [38, 27, 39, 3, 19, 15, 22, 16]
 solution : [9, 8, 10, 26, 7, 18]


New level: 14
 pending : [38, 27, 39, 3, 19, 15, 22, 16]
 solution : [9, 8, 10, 26, 7, 18]


Before reduction : 
 pending  : [38, 27, 39, 3, 19, 15, 22, 16]
 solution : [9, 8, 10, 26, 7, 18]

Essensial at level 14 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 65536), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, 1048576), (16, 32768), (17, -1), (18, 2097152), (19, 67584), (20, -1), (21, -1), (22, 32768), (23, -1), (24, -1), (25, -1), (26, -1), (27, 524288), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, 32768), (39, 524288), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 0), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, 8192), (16, 0), (17, -1), (18, -1), (19, 0), (20, -1), (21, -1), (22, 8192), (23, -1), (24, -1), (25, -1), (26, -1), (27, 2048), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, 1024), (39, 2048), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 14 : {19, 16, 3}

After reduction : 
 pending  : [38, 27, 39, 15, 22]
 solution : [9, 8, 10, 26, 7, 18]


Before reduction : 
 pending  : [38, 27, 39, 15, 22]
 solution : [9, 8, 10, 26, 7, 18]

Essensial at level 14 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 0), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, 8192), (16, 0), (17, -1), (18, -1), (19, 0), (20, -1), (21, -1), (22, 8192), (23, -1), (24, -1), (25, -1), (26, -1), (27, 2048), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, 1024), (39, 2048), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, 8192), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, 8192), (23, -1), (24, -1), (25, -1), (26, -1), (27, 2048), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, 1024), (39, 2048), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 14 : set()

After reduction : 
 pending  : [38, 27, 39, 15, 22]
 solution : [9, 8, 10, 26, 7, 18]


Solution : [9, 8, 10, 26, 7, 18] has cost 31.


Before backtrack at level 14
 pending : [38, 27, 39, 15, 22]
 solution : [9, 8, 10, 26, 7, 18]

After backtrack at level 14
 pending : [38, 27, 39, 15, 22, 3, 19, 16]
 solution : [9, 8, 10, 26, 7, 18]


Invert decision for 18 at level 13


New level: 14
 pending : [38, 27, 39, 15, 22, 3, 19, 16]
 solution : [9, 8, 10, 26, 7]


Before reduction : 
 pending  : [38, 27, 39, 15, 22, 3, 19, 16]
 solution : [9, 8, 10, 26, 7]

Essensial at level 14 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, 8192), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, 8192), (23, -1), (24, -1), (25, -1), (26, -1), (27, 2048), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, 1024), (39, 2048), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 65536), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, 1048576), (16, 32768), (17, -1), (18, -1), (19, 67584), (20, -1), (21, -1), (22, 32768), (23, -1), (24, -1), (25, -1), (26, -1), (27, 524288), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, 32768), (39, 524288), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 14 : set()

After reduction : 
 pending  : [38, 27, 39, 15, 22, 3, 19, 16]
 solution : [9, 8, 10, 26, 7]


Solution : [9, 8, 10, 26, 7] has cost 22.


Decide in level 14 among pending : [38, 27, 39, 15, 22, 3, 19, 16]

Coverage : [(0, -1), (1, -1), (2, -1), (3, 65536), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, 1048576), (16, 32768), (17, -1), (18, -1), (19, 67584), (20, -1), (21, -1), (22, 32768), (23, -1), (24, -1), (25, -1), (26, -1), (27, 524288), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, 32768), (39, 524288), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Decide 15 with phase True at level 14

After decision at level 14
 pending : [38, 27, 39, 22, 3, 19, 16]
 solution : [9, 8, 10, 26, 7, 15]


New level: 15
 pending : [38, 27, 39, 22, 3, 19, 16]
 solution : [9, 8, 10, 26, 7, 15]


Before reduction : 
 pending  : [38, 27, 39, 22, 3, 19, 16]
 solution : [9, 8, 10, 26, 7, 15]

Essensial at level 15 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 65536), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, 1048576), (16, 32768), (17, -1), (18, -1), (19, 67584), (20, -1), (21, -1), (22, 32768), (23, -1), (24, -1), (25, -1), (26, -1), (27, 524288), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, 32768), (39, 524288), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 32768), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, 0), (17, -1), (18, -1), (19, 33280), (20, -1), (21, -1), (22, 0), (23, -1), (24, -1), (25, -1), (26, -1), (27, 131072), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, 512), (39, 131072), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 15 : {16, 22}

After reduction : 
 pending  : [38, 27, 39, 3, 19]
 solution : [9, 8, 10, 26, 7, 15]


Before reduction : 
 pending  : [38, 27, 39, 3, 19]
 solution : [9, 8, 10, 26, 7, 15]

Essensial at level 15 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 32768), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, 0), (17, -1), (18, -1), (19, 33280), (20, -1), (21, -1), (22, 0), (23, -1), (24, -1), (25, -1), (26, -1), (27, 131072), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, 512), (39, 131072), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 32768), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, 33280), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, 131072), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, 512), (39, 131072), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 15 : set()

After reduction : 
 pending  : [38, 27, 39, 3, 19]
 solution : [9, 8, 10, 26, 7, 15]


Solution : [9, 8, 10, 26, 7, 15] has cost 29.


Before backtrack at level 15
 pending : [38, 27, 39, 3, 19]
 solution : [9, 8, 10, 26, 7, 15]

After backtrack at level 15
 pending : [38, 27, 39, 3, 19, 22, 16]
 solution : [9, 8, 10, 26, 7, 15]


Invert decision for 15 at level 14


New level: 15
 pending : [38, 27, 39, 3, 19, 22, 16]
 solution : [9, 8, 10, 26, 7]


Before reduction : 
 pending  : [38, 27, 39, 3, 19, 22, 16]
 solution : [9, 8, 10, 26, 7]

Essensial at level 15 : {22}

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 32768), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, 33280), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, 131072), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, 512), (39, 131072), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 65536), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, 16384), (17, -1), (18, -1), (19, 67584), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, 524288), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, 32768), (39, 524288), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 15 : set()

After reduction : 
 pending  : [38, 27, 39, 3, 19, 16]
 solution : [9, 8, 10, 26, 7, 22]


Before reduction : 
 pending  : [38, 27, 39, 3, 19, 16]
 solution : [9, 8, 10, 26, 7, 22]

Essensial at level 15 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 65536), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, 16384), (17, -1), (18, -1), (19, 67584), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, 524288), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, 32768), (39, 524288), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 65536), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, 16384), (17, -1), (18, -1), (19, 67584), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, 524288), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, 32768), (39, 524288), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 15 : set()

After reduction : 
 pending  : [38, 27, 39, 3, 19, 16]
 solution : [9, 8, 10, 26, 7, 22]


Solution : [9, 8, 10, 26, 7, 22] has cost 29.


Before backtrack at level 15
 pending : [38, 27, 39, 3, 19, 16]
 solution : [9, 8, 10, 26, 7, 22]

After backtrack at level 15
 pending : [38, 27, 39, 3, 19, 16, 22]
 solution : [9, 8, 10, 26, 7]


Before backtrack at level 14
 pending : [38, 27, 39, 3, 19, 16, 22]
 solution : [9, 8, 10, 26, 7]

After backtrack at level 14
 pending : [38, 27, 39, 3, 19, 16, 22, 15]
 solution : [9, 8, 10, 26, 7]


Before backtrack at level 13
 pending : [38, 27, 39, 3, 19, 16, 22, 15]
 solution : [9, 8, 10, 26, 7]

After backtrack at level 13
 pending : [38, 27, 39, 3, 19, 16, 22, 15, 18]
 solution : [9, 8, 10, 26, 7]


Before backtrack at level 12
 pending : [38, 27, 39, 3, 19, 16, 22, 15, 18]
 solution : [9, 8, 10, 26, 7]

After backtrack at level 12
 pending : [38, 27, 39, 3, 19, 16, 22, 15, 18, 14]
 solution : [9, 8, 10, 26, 7]


Before backtrack at level 11
 pending : [38, 27, 39, 3, 19, 16, 22, 15, 18, 14]
 solution : [9, 8, 10, 26, 7]

After backtrack at level 11
 pending : [38, 27, 39, 3, 19, 16, 22, 15, 18, 14, 5, 29, 31, 37, 42, 43, 47, 48, 49, 41, 30, 33, 23, 17]
 solution : [9, 8, 10, 26, 7]


Invert decision for 7 at level 10


New level: 11
 pending : [38, 27, 39, 3, 19, 16, 22, 15, 18, 14, 5, 29, 31, 37, 42, 43, 47, 48, 49, 41, 30, 33, 23, 17]
 solution : [9, 8, 10, 26]


Before reduction : 
 pending  : [38, 27, 39, 3, 19, 16, 22, 15, 18, 14, 5, 29, 31, 37, 42, 43, 47, 48, 49, 41, 30, 33, 23, 17]
 solution : [9, 8, 10, 26]

Essensial at level 11 : {23}

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 65536), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, 16384), (17, -1), (18, -1), (19, 67584), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, 524288), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, 32768), (39, 524288), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 65536), (4, -1), (5, 0), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 2097152), (15, 1048576), (16, 32768), (17, 4194304), (18, 2097152), (19, 67584), (20, -1), (21, -1), (22, 32768), (23, -1), (24, -1), (25, -1), (26, -1), (27, 524288), (28, -1), (29, 0), (30, 0), (31, 0), (32, -1), (33, 0), (34, -1), (35, -1), (36, -1), (37, 0), (38, 262144), (39, 524288), (40, -1), (41, 0), (42, 0), (43, 0), (44, -1), (45, -1), (46, -1), (47, 0), (48, 0), (49, 0), (50, -1), (51, -1), (52, -1)]

Covered at level 11 : {33, 37, 5, 41, 42, 43, 47, 48, 49, 29, 30, 31}

After reduction : 
 pending  : [38, 27, 39, 3, 19, 16, 22, 15, 18, 14, 17]
 solution : [9, 8, 10, 26, 23]


Before reduction : 
 pending  : [38, 27, 39, 3, 19, 16, 22, 15, 18, 14, 17]
 solution : [9, 8, 10, 26, 23]

Essensial at level 11 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 65536), (4, -1), (5, 0), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 2097152), (15, 1048576), (16, 32768), (17, 4194304), (18, 2097152), (19, 67584), (20, -1), (21, -1), (22, 32768), (23, -1), (24, -1), (25, -1), (26, -1), (27, 524288), (28, -1), (29, 0), (30, 0), (31, 0), (32, -1), (33, 0), (34, -1), (35, -1), (36, -1), (37, 0), (38, 262144), (39, 524288), (40, -1), (41, 0), (42, 0), (43, 0), (44, -1), (45, -1), (46, -1), (47, 0), (48, 0), (49, 0), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 65536), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 2097152), (15, 1048576), (16, 32768), (17, 4194304), (18, 2097152), (19, 67584), (20, -1), (21, -1), (22, 32768), (23, -1), (24, -1), (25, -1), (26, -1), (27, 524288), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, 262144), (39, 524288), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 11 : set()

After reduction : 
 pending  : [38, 27, 39, 3, 19, 16, 22, 15, 18, 14, 17]
 solution : [9, 8, 10, 26, 23]


Solution : [9, 8, 10, 26, 23] has cost 25.


Decide in level 11 among pending : [38, 27, 39, 3, 19, 16, 22, 15, 18, 14, 17]

Coverage : [(0, -1), (1, -1), (2, -1), (3, 65536), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 2097152), (15, 1048576), (16, 32768), (17, 4194304), (18, 2097152), (19, 67584), (20, -1), (21, -1), (22, 32768), (23, -1), (24, -1), (25, -1), (26, -1), (27, 524288), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, 262144), (39, 524288), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Decide 17 with phase True at level 11

After decision at level 11
 pending : [38, 27, 39, 3, 19, 16, 22, 15, 18, 14]
 solution : [9, 8, 10, 26, 23, 17]


New level: 12
 pending : [38, 27, 39, 3, 19, 16, 22, 15, 18, 14]
 solution : [9, 8, 10, 26, 23, 17]


Before reduction : 
 pending  : [38, 27, 39, 3, 19, 16, 22, 15, 18, 14]
 solution : [9, 8, 10, 26, 23, 17]

Essensial at level 12 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 65536), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 2097152), (15, 1048576), (16, 32768), (17, 4194304), (18, 2097152), (19, 67584), (20, -1), (21, -1), (22, 32768), (23, -1), (24, -1), (25, -1), (26, -1), (27, 524288), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, 262144), (39, 524288), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 0), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 32768), (15, 8192), (16, 0), (17, -1), (18, 0), (19, 0), (20, -1), (21, -1), (22, 8192), (23, -1), (24, -1), (25, -1), (26, -1), (27, 2048), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, 1024), (39, 2048), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 12 : {19, 16, 18, 3}

After reduction : 
 pending  : [38, 27, 39, 22, 15, 14]
 solution : [9, 8, 10, 26, 23, 17]


Before reduction : 
 pending  : [38, 27, 39, 22, 15, 14]
 solution : [9, 8, 10, 26, 23, 17]

Essensial at level 12 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 0), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 32768), (15, 8192), (16, 0), (17, -1), (18, 0), (19, 0), (20, -1), (21, -1), (22, 8192), (23, -1), (24, -1), (25, -1), (26, -1), (27, 2048), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, 1024), (39, 2048), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 32768), (15, 8192), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, 8192), (23, -1), (24, -1), (25, -1), (26, -1), (27, 2048), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, 1024), (39, 2048), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 12 : set()

After reduction : 
 pending  : [38, 27, 39, 22, 15, 14]
 solution : [9, 8, 10, 26, 23, 17]


Solution : [9, 8, 10, 26, 23, 17] has cost 34.


Before backtrack at level 12
 pending : [38, 27, 39, 22, 15, 14]
 solution : [9, 8, 10, 26, 23, 17]

After backtrack at level 12
 pending : [38, 27, 39, 22, 15, 14, 3, 19, 16, 18]
 solution : [9, 8, 10, 26, 23, 17]


Invert decision for 17 at level 11


New level: 12
 pending : [38, 27, 39, 22, 15, 14, 3, 19, 16, 18]
 solution : [9, 8, 10, 26, 23]


Before reduction : 
 pending  : [38, 27, 39, 22, 15, 14, 3, 19, 16, 18]
 solution : [9, 8, 10, 26, 23]

Essensial at level 12 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 32768), (15, 8192), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, 8192), (23, -1), (24, -1), (25, -1), (26, -1), (27, 2048), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, 1024), (39, 2048), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 65536), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 2097152), (15, 1048576), (16, 32768), (17, -1), (18, 2097152), (19, 67584), (20, -1), (21, -1), (22, 32768), (23, -1), (24, -1), (25, -1), (26, -1), (27, 524288), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, 262144), (39, 524288), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 12 : set()

After reduction : 
 pending  : [38, 27, 39, 22, 15, 14, 3, 19, 16, 18]
 solution : [9, 8, 10, 26, 23]


Solution : [9, 8, 10, 26, 23] has cost 25.


Decide in level 12 among pending : [38, 27, 39, 22, 15, 14, 3, 19, 16, 18]

Coverage : [(0, -1), (1, -1), (2, -1), (3, 65536), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 2097152), (15, 1048576), (16, 32768), (17, -1), (18, 2097152), (19, 67584), (20, -1), (21, -1), (22, 32768), (23, -1), (24, -1), (25, -1), (26, -1), (27, 524288), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, 262144), (39, 524288), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Decide 14 with phase True at level 12

After decision at level 12
 pending : [38, 27, 39, 22, 15, 3, 19, 16, 18]
 solution : [9, 8, 10, 26, 23, 14]


New level: 13
 pending : [38, 27, 39, 22, 15, 3, 19, 16, 18]
 solution : [9, 8, 10, 26, 23, 14]


Before reduction : 
 pending  : [38, 27, 39, 22, 15, 3, 19, 16, 18]
 solution : [9, 8, 10, 26, 23, 14]

Essensial at level 13 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 65536), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 2097152), (15, 1048576), (16, 32768), (17, -1), (18, 2097152), (19, 67584), (20, -1), (21, -1), (22, 32768), (23, -1), (24, -1), (25, -1), (26, -1), (27, 524288), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, 262144), (39, 524288), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 32768), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, 0), (16, 0), (17, -1), (18, 524288), (19, 33280), (20, -1), (21, -1), (22, 0), (23, -1), (24, -1), (25, -1), (26, -1), (27, 131072), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, 512), (39, 131072), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 13 : {16, 22, 15}

After reduction : 
 pending  : [38, 27, 39, 3, 19, 18]
 solution : [9, 8, 10, 26, 23, 14]


Before reduction : 
 pending  : [38, 27, 39, 3, 19, 18]
 solution : [9, 8, 10, 26, 23, 14]

Essensial at level 13 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 32768), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, 0), (16, 0), (17, -1), (18, 524288), (19, 33280), (20, -1), (21, -1), (22, 0), (23, -1), (24, -1), (25, -1), (26, -1), (27, 131072), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, 512), (39, 131072), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 32768), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, 524288), (19, 33280), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, 131072), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, 512), (39, 131072), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 13 : set()

After reduction : 
 pending  : [38, 27, 39, 3, 19, 18]
 solution : [9, 8, 10, 26, 23, 14]


Solution : [9, 8, 10, 26, 23, 14] has cost 32.


Before backtrack at level 13
 pending : [38, 27, 39, 3, 19, 18]
 solution : [9, 8, 10, 26, 23, 14]

After backtrack at level 13
 pending : [38, 27, 39, 3, 19, 18, 22, 15, 16]
 solution : [9, 8, 10, 26, 23, 14]


Invert decision for 14 at level 12


New level: 13
 pending : [38, 27, 39, 3, 19, 18, 22, 15, 16]
 solution : [9, 8, 10, 26, 23]


Before reduction : 
 pending  : [38, 27, 39, 3, 19, 18, 22, 15, 16]
 solution : [9, 8, 10, 26, 23]

Essensial at level 13 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 32768), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, 524288), (19, 33280), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, 131072), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, 512), (39, 131072), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 65536), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, 1048576), (16, 32768), (17, -1), (18, 2097152), (19, 67584), (20, -1), (21, -1), (22, 32768), (23, -1), (24, -1), (25, -1), (26, -1), (27, 524288), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, 262144), (39, 524288), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 13 : set()

After reduction : 
 pending  : [38, 27, 39, 3, 19, 18, 22, 15, 16]
 solution : [9, 8, 10, 26, 23]


Solution : [9, 8, 10, 26, 23] has cost 25.


Decide in level 13 among pending : [38, 27, 39, 3, 19, 18, 22, 15, 16]

Coverage : [(0, -1), (1, -1), (2, -1), (3, 65536), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, 1048576), (16, 32768), (17, -1), (18, 2097152), (19, 67584), (20, -1), (21, -1), (22, 32768), (23, -1), (24, -1), (25, -1), (26, -1), (27, 524288), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, 262144), (39, 524288), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Decide 18 with phase True at level 13

After decision at level 13
 pending : [38, 27, 39, 3, 19, 22, 15, 16]
 solution : [9, 8, 10, 26, 23, 18]


New level: 14
 pending : [38, 27, 39, 3, 19, 22, 15, 16]
 solution : [9, 8, 10, 26, 23, 18]


Before reduction : 
 pending  : [38, 27, 39, 3, 19, 22, 15, 16]
 solution : [9, 8, 10, 26, 23, 18]

Essensial at level 14 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 65536), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, 1048576), (16, 32768), (17, -1), (18, 2097152), (19, 67584), (20, -1), (21, -1), (22, 32768), (23, -1), (24, -1), (25, -1), (26, -1), (27, 524288), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, 262144), (39, 524288), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 0), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, 8192), (16, 0), (17, -1), (18, -1), (19, 0), (20, -1), (21, -1), (22, 8192), (23, -1), (24, -1), (25, -1), (26, -1), (27, 2048), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, 1024), (39, 2048), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 14 : {19, 16, 3}

After reduction : 
 pending  : [38, 27, 39, 22, 15]
 solution : [9, 8, 10, 26, 23, 18]


Before reduction : 
 pending  : [38, 27, 39, 22, 15]
 solution : [9, 8, 10, 26, 23, 18]

Essensial at level 14 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 0), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, 8192), (16, 0), (17, -1), (18, -1), (19, 0), (20, -1), (21, -1), (22, 8192), (23, -1), (24, -1), (25, -1), (26, -1), (27, 2048), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, 1024), (39, 2048), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, 8192), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, 8192), (23, -1), (24, -1), (25, -1), (26, -1), (27, 2048), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, 1024), (39, 2048), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 14 : set()

After reduction : 
 pending  : [38, 27, 39, 22, 15]
 solution : [9, 8, 10, 26, 23, 18]


Solution : [9, 8, 10, 26, 23, 18] has cost 34.


Before backtrack at level 14
 pending : [38, 27, 39, 22, 15]
 solution : [9, 8, 10, 26, 23, 18]

After backtrack at level 14
 pending : [38, 27, 39, 22, 15, 3, 19, 16]
 solution : [9, 8, 10, 26, 23, 18]


Invert decision for 18 at level 13


New level: 14
 pending : [38, 27, 39, 22, 15, 3, 19, 16]
 solution : [9, 8, 10, 26, 23]


Before reduction : 
 pending  : [38, 27, 39, 22, 15, 3, 19, 16]
 solution : [9, 8, 10, 26, 23]

Essensial at level 14 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, 8192), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, 8192), (23, -1), (24, -1), (25, -1), (26, -1), (27, 2048), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, 1024), (39, 2048), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 65536), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, 1048576), (16, 32768), (17, -1), (18, -1), (19, 67584), (20, -1), (21, -1), (22, 32768), (23, -1), (24, -1), (25, -1), (26, -1), (27, 524288), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, 262144), (39, 524288), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 14 : set()

After reduction : 
 pending  : [38, 27, 39, 22, 15, 3, 19, 16]
 solution : [9, 8, 10, 26, 23]


Solution : [9, 8, 10, 26, 23] has cost 25.


Decide in level 14 among pending : [38, 27, 39, 22, 15, 3, 19, 16]

Coverage : [(0, -1), (1, -1), (2, -1), (3, 65536), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, 1048576), (16, 32768), (17, -1), (18, -1), (19, 67584), (20, -1), (21, -1), (22, 32768), (23, -1), (24, -1), (25, -1), (26, -1), (27, 524288), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, 262144), (39, 524288), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Decide 15 with phase True at level 14

After decision at level 14
 pending : [38, 27, 39, 22, 3, 19, 16]
 solution : [9, 8, 10, 26, 23, 15]


New level: 15
 pending : [38, 27, 39, 22, 3, 19, 16]
 solution : [9, 8, 10, 26, 23, 15]


Before reduction : 
 pending  : [38, 27, 39, 22, 3, 19, 16]
 solution : [9, 8, 10, 26, 23, 15]

Essensial at level 15 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 65536), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, 1048576), (16, 32768), (17, -1), (18, -1), (19, 67584), (20, -1), (21, -1), (22, 32768), (23, -1), (24, -1), (25, -1), (26, -1), (27, 524288), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, 262144), (39, 524288), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 32768), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, 0), (17, -1), (18, -1), (19, 33280), (20, -1), (21, -1), (22, 0), (23, -1), (24, -1), (25, -1), (26, -1), (27, 131072), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, 512), (39, 131072), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 15 : {16, 22}

After reduction : 
 pending  : [38, 27, 39, 3, 19]
 solution : [9, 8, 10, 26, 23, 15]


Before reduction : 
 pending  : [38, 27, 39, 3, 19]
 solution : [9, 8, 10, 26, 23, 15]

Essensial at level 15 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 32768), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, 0), (17, -1), (18, -1), (19, 33280), (20, -1), (21, -1), (22, 0), (23, -1), (24, -1), (25, -1), (26, -1), (27, 131072), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, 512), (39, 131072), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 32768), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, 33280), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, 131072), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, 512), (39, 131072), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 15 : set()

After reduction : 
 pending  : [38, 27, 39, 3, 19]
 solution : [9, 8, 10, 26, 23, 15]


Solution : [9, 8, 10, 26, 23, 15] has cost 32.


Before backtrack at level 15
 pending : [38, 27, 39, 3, 19]
 solution : [9, 8, 10, 26, 23, 15]

After backtrack at level 15
 pending : [38, 27, 39, 3, 19, 22, 16]
 solution : [9, 8, 10, 26, 23, 15]


Invert decision for 15 at level 14


New level: 15
 pending : [38, 27, 39, 3, 19, 22, 16]
 solution : [9, 8, 10, 26, 23]


Before reduction : 
 pending  : [38, 27, 39, 3, 19, 22, 16]
 solution : [9, 8, 10, 26, 23]

Essensial at level 15 : {22}

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 32768), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, 33280), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, 131072), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, 512), (39, 131072), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 65536), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, 16384), (17, -1), (18, -1), (19, 67584), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, 524288), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, 262144), (39, 524288), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 15 : set()

After reduction : 
 pending  : [38, 27, 39, 3, 19, 16]
 solution : [9, 8, 10, 26, 23, 22]


Before reduction : 
 pending  : [38, 27, 39, 3, 19, 16]
 solution : [9, 8, 10, 26, 23, 22]

Essensial at level 15 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 65536), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, 16384), (17, -1), (18, -1), (19, 67584), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, 524288), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, 262144), (39, 524288), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 65536), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, 16384), (17, -1), (18, -1), (19, 67584), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, 524288), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, 262144), (39, 524288), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 15 : set()

After reduction : 
 pending  : [38, 27, 39, 3, 19, 16]
 solution : [9, 8, 10, 26, 23, 22]


Solution : [9, 8, 10, 26, 23, 22] has cost 32.


Before backtrack at level 15
 pending : [38, 27, 39, 3, 19, 16]
 solution : [9, 8, 10, 26, 23, 22]

After backtrack at level 15
 pending : [38, 27, 39, 3, 19, 16, 22]
 solution : [9, 8, 10, 26, 23]


Before backtrack at level 14
 pending : [38, 27, 39, 3, 19, 16, 22]
 solution : [9, 8, 10, 26, 23]

After backtrack at level 14
 pending : [38, 27, 39, 3, 19, 16, 22, 15]
 solution : [9, 8, 10, 26, 23]


Before backtrack at level 13
 pending : [38, 27, 39, 3, 19, 16, 22, 15]
 solution : [9, 8, 10, 26, 23]

After backtrack at level 13
 pending : [38, 27, 39, 3, 19, 16, 22, 15, 18]
 solution : [9, 8, 10, 26, 23]


Before backtrack at level 12
 pending : [38, 27, 39, 3, 19, 16, 22, 15, 18]
 solution : [9, 8, 10, 26, 23]

After backtrack at level 12
 pending : [38, 27, 39, 3, 19, 16, 22, 15, 18, 14]
 solution : [9, 8, 10, 26, 23]


Before backtrack at level 11
 pending : [38, 27, 39, 3, 19, 16, 22, 15, 18, 14]
 solution : [9, 8, 10, 26, 23]

After backtrack at level 11
 pending : [38, 27, 39, 3, 19, 16, 22, 15, 18, 14, 23, 5, 29, 31, 37, 42, 43, 47, 48, 49, 41, 30, 33, 17]
 solution : [9, 8, 10, 26]


Before backtrack at level 10
 pending : [38, 27, 39, 3, 19, 16, 22, 15, 18, 14, 23, 5, 29, 31, 37, 42, 43, 47, 48, 49, 41, 30, 33, 17]
 solution : [9, 8, 10, 26]

After backtrack at level 10
 pending : [38, 27, 39, 3, 19, 16, 22, 15, 18, 14, 23, 5, 29, 31, 37, 42, 43, 47, 48, 49, 41, 30, 33, 17, 7]
 solution : [9, 8, 10, 26]


Before backtrack at level 9
 pending : [38, 27, 39, 3, 19, 16, 22, 15, 18, 14, 23, 5, 29, 31, 37, 42, 43, 47, 48, 49, 41, 30, 33, 17, 7]
 solution : [9, 8, 10, 26]

After backtrack at level 9
 pending : [38, 27, 39, 3, 19, 16, 22, 15, 18, 14, 23, 5, 29, 31, 37, 42, 43, 47, 48, 49, 41, 30, 33, 17, 7, 21]
 solution : [9, 8, 10, 26]


Before backtrack at level 8
 pending : [38, 27, 39, 3, 19, 16, 22, 15, 18, 14, 23, 5, 29, 31, 37, 42, 43, 47, 48, 49, 41, 30, 33, 17, 7, 21]
 solution : [9, 8, 10, 26]

After backtrack at level 8
 pending : [38, 27, 39, 3, 19, 16, 22, 15, 18, 14, 23, 5, 29, 31, 37, 42, 43, 47, 48, 49, 41, 30, 33, 17, 7, 21, 24]
 solution : [9, 8, 10, 26]


Before backtrack at level 7
 pending : [38, 27, 39, 3, 19, 16, 22, 15, 18, 14, 23, 5, 29, 31, 37, 42, 43, 47, 48, 49, 41, 30, 33, 17, 7, 21, 24]
 solution : [9, 8, 10, 26]

After backtrack at level 7
 pending : [38, 27, 39, 3, 19, 16, 22, 15, 18, 14, 23, 5, 29, 31, 37, 42, 43, 47, 48, 49, 41, 30, 33, 17, 7, 21, 24, 40]
 solution : [9, 8, 10, 26]


Before backtrack at level 6
 pending : [38, 27, 39, 3, 19, 16, 22, 15, 18, 14, 23, 5, 29, 31, 37, 42, 43, 47, 48, 49, 41, 30, 33, 17, 7, 21, 24, 40]
 solution : [9, 8, 10, 26]

After backtrack at level 6
 pending : [38, 27, 39, 3, 19, 16, 22, 15, 18, 14, 23, 5, 29, 31, 37, 42, 43, 47, 48, 49, 41, 30, 33, 17, 7, 21, 24, 40, 32]
 solution : [9, 8, 10, 26]


Before backtrack at level 5
 pending : [38, 27, 39, 3, 19, 16, 22, 15, 18, 14, 23, 5, 29, 31, 37, 42, 43, 47, 48, 49, 41, 30, 33, 17, 7, 21, 24, 40, 32]
 solution : [9, 8, 10, 26]

After backtrack at level 5
 pending : [38, 27, 39, 3, 19, 16, 22, 15, 18, 14, 23, 5, 29, 31, 37, 42, 43, 47, 48, 49, 41, 30, 33, 17, 7, 21, 24, 40, 32, 13]
 solution : [9, 8, 10, 26]


Before backtrack at level 4
 pending : [38, 27, 39, 3, 19, 16, 22, 15, 18, 14, 23, 5, 29, 31, 37, 42, 43, 47, 48, 49, 41, 30, 33, 17, 7, 21, 24, 40, 32, 13]
 solution : [9, 8, 10, 26]

After backtrack at level 4
 pending : [38, 27, 39, 3, 19, 16, 22, 15, 18, 14, 23, 5, 29, 31, 37, 42, 43, 47, 48, 49, 41, 30, 33, 17, 7, 21, 24, 40, 32, 13, 28]
 solution : [9, 8, 10, 26]


Invert decision for 26 at level 3


New level: 4
 pending : [38, 27, 39, 3, 19, 16, 22, 15, 18, 14, 23, 5, 29, 31, 37, 42, 43, 47, 48, 49, 41, 30, 33, 17, 7, 21, 24, 40, 32, 13, 28]
 solution : [9, 8, 10]


Before reduction : 
 pending  : [38, 27, 39, 3, 19, 16, 22, 15, 18, 14, 23, 5, 29, 31, 37, 42, 43, 47, 48, 49, 41, 30, 33, 17, 7, 21, 24, 40, 32, 13, 28]
 solution : [9, 8, 10]

Essensial at level 4 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 65536), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, 16384), (17, -1), (18, -1), (19, 67584), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, 524288), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, 262144), (39, 524288), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 131072), (4, -1), (5, 524288), (6, -1), (7, 67108864), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, 268435456), (14, 2097152), (15, 1048576), (16, 65536), (17, 8388608), (18, 4194304), (19, 139264), (20, -1), (21, 134217728), (22, 32768), (23, 67108864), (24, 268435456), (25, -1), (26, -1), (27, 524288), (28, 536870912), (29, 524288), (30, 1048576), (31, 8192), (32, 536870912), (33, 8192), (34, -1), (35, -1), (36, -1), (37, 8192), (38, 33554432), (39, 524288), (40, 134217728), (41, 67108864), (42, 262144), (43, 262144), (44, -1), (45, -1), (46, -1), (47, 33554432), (48, 8388608), (49, 33554432), (50, -1), (51, -1), (52, -1)]

Covered at level 4 : set()

After reduction : 
 pending  : [38, 27, 39, 3, 19, 16, 22, 15, 18, 14, 23, 5, 29, 31, 37, 42, 43, 47, 48, 49, 41, 30, 33, 17, 7, 21, 24, 40, 32, 13, 28]
 solution : [9, 8, 10]


Solution : [9, 8, 10] has cost 14.


Decide in level 4 among pending : [38, 27, 39, 3, 19, 16, 22, 15, 18, 14, 23, 5, 29, 31, 37, 42, 43, 47, 48, 49, 41, 30, 33, 17, 7, 21, 24, 40, 32, 13, 28]

Coverage : [(0, -1), (1, -1), (2, -1), (3, 131072), (4, -1), (5, 524288), (6, -1), (7, 67108864), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, 268435456), (14, 2097152), (15, 1048576), (16, 65536), (17, 8388608), (18, 4194304), (19, 139264), (20, -1), (21, 134217728), (22, 32768), (23, 67108864), (24, 268435456), (25, -1), (26, -1), (27, 524288), (28, 536870912), (29, 524288), (30, 1048576), (31, 8192), (32, 536870912), (33, 8192), (34, -1), (35, -1), (36, -1), (37, 8192), (38, 33554432), (39, 524288), (40, 134217728), (41, 67108864), (42, 262144), (43, 262144), (44, -1), (45, -1), (46, -1), (47, 33554432), (48, 8388608), (49, 33554432), (50, -1), (51, -1), (52, -1)]

Decide 32 with phase True at level 4

After decision at level 4
 pending : [38, 27, 39, 3, 19, 16, 22, 15, 18, 14, 23, 5, 29, 31, 37, 42, 43, 47, 48, 49, 41, 30, 33, 17, 7, 21, 24, 40, 13, 28]
 solution : [9, 8, 10, 32]


New level: 5
 pending : [38, 27, 39, 3, 19, 16, 22, 15, 18, 14, 23, 5, 29, 31, 37, 42, 43, 47, 48, 49, 41, 30, 33, 17, 7, 21, 24, 40, 13, 28]
 solution : [9, 8, 10, 32]


Before reduction : 
 pending  : [38, 27, 39, 3, 19, 16, 22, 15, 18, 14, 23, 5, 29, 31, 37, 42, 43, 47, 48, 49, 41, 30, 33, 17, 7, 21, 24, 40, 13, 28]
 solution : [9, 8, 10, 32]

Essensial at level 5 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 131072), (4, -1), (5, 524288), (6, -1), (7, 67108864), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, 268435456), (14, 2097152), (15, 1048576), (16, 65536), (17, 8388608), (18, 4194304), (19, 139264), (20, -1), (21, 134217728), (22, 32768), (23, 67108864), (24, 268435456), (25, -1), (26, -1), (27, 524288), (28, 536870912), (29, 524288), (30, 1048576), (31, 8192), (32, 536870912), (33, 8192), (34, -1), (35, -1), (36, -1), (37, 8192), (38, 33554432), (39, 524288), (40, 134217728), (41, 67108864), (42, 262144), (43, 262144), (44, -1), (45, -1), (46, -1), (47, 33554432), (48, 8388608), (49, 33554432), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 131072), (4, -1), (5, 131072), (6, -1), (7, 67108864), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, 268435456), (14, 2097152), (15, 1048576), (16, 65536), (17, 8388608), (18, 4194304), (19, 139264), (20, -1), (21, 134217728), (22, 32768), (23, 67108864), (24, 8192), (25, -1), (26, -1), (27, 524288), (28, 536870912), (29, 131072), (30, 0), (31, 2048), (32, -1), (33, 0), (34, -1), (35, -1), (36, -1), (37, 2048), (38, 33554432), (39, 524288), (40, 4096), (41, 16777216), (42, 65536), (43, 65536), (44, -1), (45, -1), (46, -1), (47, 8388608), (48, 2097152), (49, 8388608), (50, -1), (51, -1), (52, -1)]

Covered at level 5 : {33, 30}

After reduction : 
 pending  : [38, 27, 39, 3, 19, 16, 22, 15, 18, 14, 23, 5, 29, 31, 37, 42, 43, 47, 48, 49, 41, 17, 7, 21, 24, 40, 13, 28]
 solution : [9, 8, 10, 32]


Before reduction : 
 pending  : [38, 27, 39, 3, 19, 16, 22, 15, 18, 14, 23, 5, 29, 31, 37, 42, 43, 47, 48, 49, 41, 17, 7, 21, 24, 40, 13, 28]
 solution : [9, 8, 10, 32]

Essensial at level 5 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 131072), (4, -1), (5, 131072), (6, -1), (7, 67108864), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, 268435456), (14, 2097152), (15, 1048576), (16, 65536), (17, 8388608), (18, 4194304), (19, 139264), (20, -1), (21, 134217728), (22, 32768), (23, 67108864), (24, 8192), (25, -1), (26, -1), (27, 524288), (28, 536870912), (29, 131072), (30, 0), (31, 2048), (32, -1), (33, 0), (34, -1), (35, -1), (36, -1), (37, 2048), (38, 33554432), (39, 524288), (40, 4096), (41, 16777216), (42, 65536), (43, 65536), (44, -1), (45, -1), (46, -1), (47, 8388608), (48, 2097152), (49, 8388608), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 131072), (4, -1), (5, 131072), (6, -1), (7, 67108864), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, 268435456), (14, 2097152), (15, 1048576), (16, 65536), (17, 8388608), (18, 4194304), (19, 139264), (20, -1), (21, 134217728), (22, 32768), (23, 67108864), (24, 8192), (25, -1), (26, -1), (27, 524288), (28, 536870912), (29, 131072), (30, -1), (31, 2048), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, 2048), (38, 33554432), (39, 524288), (40, 4096), (41, 16777216), (42, 65536), (43, 65536), (44, -1), (45, -1), (46, -1), (47, 8388608), (48, 2097152), (49, 8388608), (50, -1), (51, -1), (52, -1)]

Covered at level 5 : set()

After reduction : 
 pending  : [38, 27, 39, 3, 19, 16, 22, 15, 18, 14, 23, 5, 29, 31, 37, 42, 43, 47, 48, 49, 41, 17, 7, 21, 24, 40, 13, 28]
 solution : [9, 8, 10, 32]


Solution : [9, 8, 10, 32] has cost 27.


Before backtrack at level 5
 pending : [38, 27, 39, 3, 19, 16, 22, 15, 18, 14, 23, 5, 29, 31, 37, 42, 43, 47, 48, 49, 41, 17, 7, 21, 24, 40, 13, 28]
 solution : [9, 8, 10, 32]

After backtrack at level 5
 pending : [38, 27, 39, 3, 19, 16, 22, 15, 18, 14, 23, 5, 29, 31, 37, 42, 43, 47, 48, 49, 41, 17, 7, 21, 24, 40, 13, 28, 30, 33]
 solution : [9, 8, 10, 32]


Invert decision for 32 at level 4


New level: 5
 pending : [38, 27, 39, 3, 19, 16, 22, 15, 18, 14, 23, 5, 29, 31, 37, 42, 43, 47, 48, 49, 41, 17, 7, 21, 24, 40, 13, 28, 30, 33]
 solution : [9, 8, 10]


Before reduction : 
 pending  : [38, 27, 39, 3, 19, 16, 22, 15, 18, 14, 23, 5, 29, 31, 37, 42, 43, 47, 48, 49, 41, 17, 7, 21, 24, 40, 13, 28, 30, 33]
 solution : [9, 8, 10]

Essensial at level 5 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 131072), (4, -1), (5, 131072), (6, -1), (7, 67108864), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, 268435456), (14, 2097152), (15, 1048576), (16, 65536), (17, 8388608), (18, 4194304), (19, 139264), (20, -1), (21, 134217728), (22, 32768), (23, 67108864), (24, 8192), (25, -1), (26, -1), (27, 524288), (28, 536870912), (29, 131072), (30, -1), (31, 2048), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, 2048), (38, 33554432), (39, 524288), (40, 4096), (41, 16777216), (42, 65536), (43, 65536), (44, -1), (45, -1), (46, -1), (47, 8388608), (48, 2097152), (49, 8388608), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 131072), (4, -1), (5, 524288), (6, -1), (7, 67108864), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, 268435456), (14, 2097152), (15, 1048576), (16, 65536), (17, 8388608), (18, 4194304), (19, 139264), (20, -1), (21, 134217728), (22, 32768), (23, 67108864), (24, 268435456), (25, -1), (26, -1), (27, 524288), (28, 536870912), (29, 524288), (30, 1048576), (31, 8192), (32, -1), (33, 8192), (34, -1), (35, -1), (36, -1), (37, 8192), (38, 33554432), (39, 524288), (40, 134217728), (41, 67108864), (42, 262144), (43, 262144), (44, -1), (45, -1), (46, -1), (47, 33554432), (48, 8388608), (49, 33554432), (50, -1), (51, -1), (52, -1)]

Covered at level 5 : set()

After reduction : 
 pending  : [38, 27, 39, 3, 19, 16, 22, 15, 18, 14, 23, 5, 29, 31, 37, 42, 43, 47, 48, 49, 41, 17, 7, 21, 24, 40, 13, 28, 30, 33]
 solution : [9, 8, 10]


Solution : [9, 8, 10] has cost 14.


Decide in level 5 among pending : [38, 27, 39, 3, 19, 16, 22, 15, 18, 14, 23, 5, 29, 31, 37, 42, 43, 47, 48, 49, 41, 17, 7, 21, 24, 40, 13, 28, 30, 33]

Coverage : [(0, -1), (1, -1), (2, -1), (3, 131072), (4, -1), (5, 524288), (6, -1), (7, 67108864), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, 268435456), (14, 2097152), (15, 1048576), (16, 65536), (17, 8388608), (18, 4194304), (19, 139264), (20, -1), (21, 134217728), (22, 32768), (23, 67108864), (24, 268435456), (25, -1), (26, -1), (27, 524288), (28, 536870912), (29, 524288), (30, 1048576), (31, 8192), (32, -1), (33, 8192), (34, -1), (35, -1), (36, -1), (37, 8192), (38, 33554432), (39, 524288), (40, 134217728), (41, 67108864), (42, 262144), (43, 262144), (44, -1), (45, -1), (46, -1), (47, 33554432), (48, 8388608), (49, 33554432), (50, -1), (51, -1), (52, -1)]

Decide 28 with phase True at level 5

After decision at level 5
 pending : [38, 27, 39, 3, 19, 16, 22, 15, 18, 14, 23, 5, 29, 31, 37, 42, 43, 47, 48, 49, 41, 17, 7, 21, 24, 40, 13, 30, 33]
 solution : [9, 8, 10, 28]


New level: 6
 pending : [38, 27, 39, 3, 19, 16, 22, 15, 18, 14, 23, 5, 29, 31, 37, 42, 43, 47, 48, 49, 41, 17, 7, 21, 24, 40, 13, 30, 33]
 solution : [9, 8, 10, 28]


Before reduction : 
 pending  : [38, 27, 39, 3, 19, 16, 22, 15, 18, 14, 23, 5, 29, 31, 37, 42, 43, 47, 48, 49, 41, 17, 7, 21, 24, 40, 13, 30, 33]
 solution : [9, 8, 10, 28]

Essensial at level 6 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 131072), (4, -1), (5, 524288), (6, -1), (7, 67108864), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, 268435456), (14, 2097152), (15, 1048576), (16, 65536), (17, 8388608), (18, 4194304), (19, 139264), (20, -1), (21, 134217728), (22, 32768), (23, 67108864), (24, 268435456), (25, -1), (26, -1), (27, 524288), (28, 536870912), (29, 524288), (30, 1048576), (31, 8192), (32, -1), (33, 8192), (34, -1), (35, -1), (36, -1), (37, 8192), (38, 33554432), (39, 524288), (40, 134217728), (41, 67108864), (42, 262144), (43, 262144), (44, -1), (45, -1), (46, -1), (47, 33554432), (48, 8388608), (49, 33554432), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 0), (4, -1), (5, 131072), (6, -1), (7, 67108864), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, 0), (14, 0), (15, 0), (16, 0), (17, 0), (18, 0), (19, 0), (20, -1), (21, 0), (22, 0), (23, 67108864), (24, 268435456), (25, -1), (26, -1), (27, 0), (28, -1), (29, 262144), (30, 1048576), (31, 4096), (32, -1), (33, 8192), (34, -1), (35, -1), (36, -1), (37, 2048), (38, 1024), (39, 0), (40, 2048), (41, 33554432), (42, 65536), (43, 65536), (44, -1), (45, -1), (46, -1), (47, 16777216), (48, 2097152), (49, 8388608), (50, -1), (51, -1), (52, -1)]

Covered at level 6 : {3, 39, 13, 14, 15, 16, 17, 18, 19, 21, 22, 27}

After reduction : 
 pending  : [38, 23, 5, 29, 31, 37, 42, 43, 47, 48, 49, 41, 7, 24, 40, 30, 33]
 solution : [9, 8, 10, 28]


Before reduction : 
 pending  : [38, 23, 5, 29, 31, 37, 42, 43, 47, 48, 49, 41, 7, 24, 40, 30, 33]
 solution : [9, 8, 10, 28]

Essensial at level 6 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 0), (4, -1), (5, 131072), (6, -1), (7, 67108864), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, 0), (14, 0), (15, 0), (16, 0), (17, 0), (18, 0), (19, 0), (20, -1), (21, 0), (22, 0), (23, 67108864), (24, 268435456), (25, -1), (26, -1), (27, 0), (28, -1), (29, 262144), (30, 1048576), (31, 4096), (32, -1), (33, 8192), (34, -1), (35, -1), (36, -1), (37, 2048), (38, 1024), (39, 0), (40, 2048), (41, 33554432), (42, 65536), (43, 65536), (44, -1), (45, -1), (46, -1), (47, 16777216), (48, 2097152), (49, 8388608), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 131072), (6, -1), (7, 67108864), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, 67108864), (24, 268435456), (25, -1), (26, -1), (27, -1), (28, -1), (29, 262144), (30, 1048576), (31, 4096), (32, -1), (33, 8192), (34, -1), (35, -1), (36, -1), (37, 2048), (38, 1024), (39, -1), (40, 2048), (41, 33554432), (42, 65536), (43, 65536), (44, -1), (45, -1), (46, -1), (47, 16777216), (48, 2097152), (49, 8388608), (50, -1), (51, -1), (52, -1)]

Covered at level 6 : set()

After reduction : 
 pending  : [38, 23, 5, 29, 31, 37, 42, 43, 47, 48, 49, 41, 7, 24, 40, 30, 33]
 solution : [9, 8, 10, 28]


Solution : [9, 8, 10, 28] has cost 18.


Decide in level 6 among pending : [38, 23, 5, 29, 31, 37, 42, 43, 47, 48, 49, 41, 7, 24, 40, 30, 33]

Coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 131072), (6, -1), (7, 67108864), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, 67108864), (24, 268435456), (25, -1), (26, -1), (27, -1), (28, -1), (29, 262144), (30, 1048576), (31, 4096), (32, -1), (33, 8192), (34, -1), (35, -1), (36, -1), (37, 2048), (38, 1024), (39, -1), (40, 2048), (41, 33554432), (42, 65536), (43, 65536), (44, -1), (45, -1), (46, -1), (47, 16777216), (48, 2097152), (49, 8388608), (50, -1), (51, -1), (52, -1)]

Decide 24 with phase True at level 6

After decision at level 6
 pending : [38, 23, 5, 29, 31, 37, 42, 43, 47, 48, 49, 41, 7, 40, 30, 33]
 solution : [9, 8, 10, 28, 24]


New level: 7
 pending : [38, 23, 5, 29, 31, 37, 42, 43, 47, 48, 49, 41, 7, 40, 30, 33]
 solution : [9, 8, 10, 28, 24]


Before reduction : 
 pending  : [38, 23, 5, 29, 31, 37, 42, 43, 47, 48, 49, 41, 7, 40, 30, 33]
 solution : [9, 8, 10, 28, 24]

Essensial at level 7 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 131072), (6, -1), (7, 67108864), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, 67108864), (24, 268435456), (25, -1), (26, -1), (27, -1), (28, -1), (29, 262144), (30, 1048576), (31, 4096), (32, -1), (33, 8192), (34, -1), (35, -1), (36, -1), (37, 2048), (38, 1024), (39, -1), (40, 2048), (41, 33554432), (42, 65536), (43, 65536), (44, -1), (45, -1), (46, -1), (47, 16777216), (48, 2097152), (49, 8388608), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 32768), (6, -1), (7, 16777216), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, 16777216), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, 65536), (30, 0), (31, 1024), (32, -1), (33, 0), (34, -1), (35, -1), (36, -1), (37, 512), (38, 512), (39, -1), (40, 0), (41, 16777216), (42, 16384), (43, 16384), (44, -1), (45, -1), (46, -1), (47, 4194304), (48, 524288), (49, 4194304), (50, -1), (51, -1), (52, -1)]

Covered at level 7 : {40, 33, 30}

After reduction : 
 pending  : [38, 23, 5, 29, 31, 37, 42, 43, 47, 48, 49, 41, 7]
 solution : [9, 8, 10, 28, 24]


Before reduction : 
 pending  : [38, 23, 5, 29, 31, 37, 42, 43, 47, 48, 49, 41, 7]
 solution : [9, 8, 10, 28, 24]

Essensial at level 7 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 32768), (6, -1), (7, 16777216), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, 16777216), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, 65536), (30, 0), (31, 1024), (32, -1), (33, 0), (34, -1), (35, -1), (36, -1), (37, 512), (38, 512), (39, -1), (40, 0), (41, 16777216), (42, 16384), (43, 16384), (44, -1), (45, -1), (46, -1), (47, 4194304), (48, 524288), (49, 4194304), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 32768), (6, -1), (7, 16777216), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, 16777216), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, 65536), (30, -1), (31, 1024), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, 512), (38, 512), (39, -1), (40, -1), (41, 16777216), (42, 16384), (43, 16384), (44, -1), (45, -1), (46, -1), (47, 4194304), (48, 524288), (49, 4194304), (50, -1), (51, -1), (52, -1)]

Covered at level 7 : set()

After reduction : 
 pending  : [38, 23, 5, 29, 31, 37, 42, 43, 47, 48, 49, 41, 7]
 solution : [9, 8, 10, 28, 24]


Solution : [9, 8, 10, 28, 24] has cost 25.


Decide in level 7 among pending : [38, 23, 5, 29, 31, 37, 42, 43, 47, 48, 49, 41, 7]

Coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 32768), (6, -1), (7, 16777216), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, 16777216), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, 65536), (30, -1), (31, 1024), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, 512), (38, 512), (39, -1), (40, -1), (41, 16777216), (42, 16384), (43, 16384), (44, -1), (45, -1), (46, -1), (47, 4194304), (48, 524288), (49, 4194304), (50, -1), (51, -1), (52, -1)]

Decide 23 with phase True at level 7

After decision at level 7
 pending : [38, 5, 29, 31, 37, 42, 43, 47, 48, 49, 41, 7]
 solution : [9, 8, 10, 28, 24, 23]


New level: 8
 pending : [38, 5, 29, 31, 37, 42, 43, 47, 48, 49, 41, 7]
 solution : [9, 8, 10, 28, 24, 23]


Before reduction : 
 pending  : [38, 5, 29, 31, 37, 42, 43, 47, 48, 49, 41, 7]
 solution : [9, 8, 10, 28, 24, 23]

Essensial at level 8 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 32768), (6, -1), (7, 16777216), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, 16777216), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, 65536), (30, -1), (31, 1024), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, 512), (38, 512), (39, -1), (40, -1), (41, 16777216), (42, 16384), (43, 16384), (44, -1), (45, -1), (46, -1), (47, 4194304), (48, 524288), (49, 4194304), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 0), (6, -1), (7, 0), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, 0), (30, -1), (31, 0), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, 0), (38, 0), (39, -1), (40, -1), (41, 0), (42, 0), (43, 0), (44, -1), (45, -1), (46, -1), (47, 0), (48, 0), (49, 0), (50, -1), (51, -1), (52, -1)]

Covered at level 8 : {37, 5, 38, 7, 41, 42, 43, 47, 48, 49, 29, 31}

After reduction : 
 pending  : []
 solution : [9, 8, 10, 28, 24, 23]


Before reduction : 
 pending  : []
 solution : [9, 8, 10, 28, 24, 23]

Essensial at level 8 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 0), (6, -1), (7, 0), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, 0), (30, -1), (31, 0), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, 0), (38, 0), (39, -1), (40, -1), (41, 0), (42, 0), (43, 0), (44, -1), (45, -1), (46, -1), (47, 0), (48, 0), (49, 0), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 8 : set()

After reduction : 
 pending  : []
 solution : [9, 8, 10, 28, 24, 23]


Solution : [9, 8, 10, 28, 24, 23] has cost 32.


Before backtrack at level 8
 pending : []
 solution : [9, 8, 10, 28, 24, 23]

After backtrack at level 8
 pending : [38, 5, 29, 31, 37, 42, 43, 47, 48, 49, 41, 7]
 solution : [9, 8, 10, 28, 24, 23]


Invert decision for 23 at level 7


New level: 8
 pending : [38, 5, 29, 31, 37, 42, 43, 47, 48, 49, 41, 7]
 solution : [9, 8, 10, 28, 24]


Before reduction : 
 pending  : [38, 5, 29, 31, 37, 42, 43, 47, 48, 49, 41, 7]
 solution : [9, 8, 10, 28, 24]

Essensial at level 8 : {7}

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 0), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, 0), (30, -1), (31, 0), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, 0), (38, 0), (39, -1), (40, -1), (41, 0), (42, 0), (43, 0), (44, -1), (45, -1), (46, -1), (47, 0), (48, 0), (49, 0), (50, -1), (51, -1), (52, -1)]

Covered at level 8 : {37, 5, 38, 41, 42, 43, 47, 48, 49, 29, 31}

After reduction : 
 pending  : []
 solution : [9, 8, 10, 28, 24, 7]


Before reduction : 
 pending  : []
 solution : [9, 8, 10, 28, 24, 7]

Essensial at level 8 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 0), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, 0), (30, -1), (31, 0), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, 0), (38, 0), (39, -1), (40, -1), (41, 0), (42, 0), (43, 0), (44, -1), (45, -1), (46, -1), (47, 0), (48, 0), (49, 0), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 8 : set()

After reduction : 
 pending  : []
 solution : [9, 8, 10, 28, 24, 7]


Solution : [9, 8, 10, 28, 24, 7] has cost 29.


Before backtrack at level 8
 pending : []
 solution : [9, 8, 10, 28, 24, 7]

After backtrack at level 8
 pending : [7, 38, 5, 29, 31, 37, 42, 43, 47, 48, 49, 41]
 solution : [9, 8, 10, 28, 24]


Before backtrack at level 7
 pending : [7, 38, 5, 29, 31, 37, 42, 43, 47, 48, 49, 41]
 solution : [9, 8, 10, 28, 24]

After backtrack at level 7
 pending : [7, 38, 5, 29, 31, 37, 42, 43, 47, 48, 49, 41, 40, 30, 33, 23]
 solution : [9, 8, 10, 28, 24]


Invert decision for 24 at level 6


New level: 7
 pending : [7, 38, 5, 29, 31, 37, 42, 43, 47, 48, 49, 41, 40, 30, 33, 23]
 solution : [9, 8, 10, 28]


Before reduction : 
 pending  : [7, 38, 5, 29, 31, 37, 42, 43, 47, 48, 49, 41, 40, 30, 33, 23]
 solution : [9, 8, 10, 28]

Essensial at level 7 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 131072), (6, -1), (7, 67108864), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, 67108864), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, 262144), (30, 1048576), (31, 4096), (32, -1), (33, 8192), (34, -1), (35, -1), (36, -1), (37, 2048), (38, 1024), (39, -1), (40, 2048), (41, 33554432), (42, 65536), (43, 65536), (44, -1), (45, -1), (46, -1), (47, 16777216), (48, 2097152), (49, 8388608), (50, -1), (51, -1), (52, -1)]

Covered at level 7 : set()

After reduction : 
 pending  : [7, 38, 5, 29, 31, 37, 42, 43, 47, 48, 49, 41, 40, 30, 33, 23]
 solution : [9, 8, 10, 28]


Solution : [9, 8, 10, 28] has cost 18.


Decide in level 7 among pending : [7, 38, 5, 29, 31, 37, 42, 43, 47, 48, 49, 41, 40, 30, 33, 23]

Coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 131072), (6, -1), (7, 67108864), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, 67108864), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, 262144), (30, 1048576), (31, 4096), (32, -1), (33, 8192), (34, -1), (35, -1), (36, -1), (37, 2048), (38, 1024), (39, -1), (40, 2048), (41, 33554432), (42, 65536), (43, 65536), (44, -1), (45, -1), (46, -1), (47, 16777216), (48, 2097152), (49, 8388608), (50, -1), (51, -1), (52, -1)]

Decide 7 with phase True at level 7

After decision at level 7
 pending : [38, 5, 29, 31, 37, 42, 43, 47, 48, 49, 41, 40, 30, 33, 23]
 solution : [9, 8, 10, 28, 7]


New level: 8
 pending : [38, 5, 29, 31, 37, 42, 43, 47, 48, 49, 41, 40, 30, 33, 23]
 solution : [9, 8, 10, 28, 7]


Before reduction : 
 pending  : [38, 5, 29, 31, 37, 42, 43, 47, 48, 49, 41, 40, 30, 33, 23]
 solution : [9, 8, 10, 28, 7]

Essensial at level 8 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 131072), (6, -1), (7, 67108864), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, 67108864), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, 262144), (30, 1048576), (31, 4096), (32, -1), (33, 8192), (34, -1), (35, -1), (36, -1), (37, 2048), (38, 1024), (39, -1), (40, 2048), (41, 33554432), (42, 65536), (43, 65536), (44, -1), (45, -1), (46, -1), (47, 16777216), (48, 2097152), (49, 8388608), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 0), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, 0), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, 0), (30, 0), (31, 0), (32, -1), (33, 0), (34, -1), (35, -1), (36, -1), (37, 0), (38, 0), (39, -1), (40, 0), (41, 0), (42, 0), (43, 0), (44, -1), (45, -1), (46, -1), (47, 0), (48, 0), (49, 0), (50, -1), (51, -1), (52, -1)]

Covered at level 8 : {33, 37, 5, 38, 40, 41, 42, 43, 47, 48, 49, 23, 29, 30, 31}

After reduction : 
 pending  : []
 solution : [9, 8, 10, 28, 7]


Before reduction : 
 pending  : []
 solution : [9, 8, 10, 28, 7]

Essensial at level 8 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 0), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, 0), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, 0), (30, 0), (31, 0), (32, -1), (33, 0), (34, -1), (35, -1), (36, -1), (37, 0), (38, 0), (39, -1), (40, 0), (41, 0), (42, 0), (43, 0), (44, -1), (45, -1), (46, -1), (47, 0), (48, 0), (49, 0), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 8 : set()

After reduction : 
 pending  : []
 solution : [9, 8, 10, 28, 7]


Solution : [9, 8, 10, 28, 7] has cost 22.


Before backtrack at level 8
 pending : []
 solution : [9, 8, 10, 28, 7]

After backtrack at level 8
 pending : [38, 5, 29, 31, 37, 42, 43, 47, 48, 49, 41, 40, 30, 33, 23]
 solution : [9, 8, 10, 28, 7]


Invert decision for 7 at level 7


New level: 8
 pending : [38, 5, 29, 31, 37, 42, 43, 47, 48, 49, 41, 40, 30, 33, 23]
 solution : [9, 8, 10, 28]


Before reduction : 
 pending  : [38, 5, 29, 31, 37, 42, 43, 47, 48, 49, 41, 40, 30, 33, 23]
 solution : [9, 8, 10, 28]

Essensial at level 8 : {23}

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 0), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, 0), (30, 0), (31, 0), (32, -1), (33, 0), (34, -1), (35, -1), (36, -1), (37, 0), (38, 0), (39, -1), (40, 0), (41, 0), (42, 0), (43, 0), (44, -1), (45, -1), (46, -1), (47, 0), (48, 0), (49, 0), (50, -1), (51, -1), (52, -1)]

Covered at level 8 : {33, 37, 5, 38, 40, 41, 42, 43, 47, 48, 49, 29, 30, 31}

After reduction : 
 pending  : []
 solution : [9, 8, 10, 28, 23]


Before reduction : 
 pending  : []
 solution : [9, 8, 10, 28, 23]

Essensial at level 8 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 0), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, 0), (30, 0), (31, 0), (32, -1), (33, 0), (34, -1), (35, -1), (36, -1), (37, 0), (38, 0), (39, -1), (40, 0), (41, 0), (42, 0), (43, 0), (44, -1), (45, -1), (46, -1), (47, 0), (48, 0), (49, 0), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 8 : set()

After reduction : 
 pending  : []
 solution : [9, 8, 10, 28, 23]


Solution : [9, 8, 10, 28, 23] has cost 25.


Before backtrack at level 8
 pending : []
 solution : [9, 8, 10, 28, 23]

After backtrack at level 8
 pending : [23, 38, 5, 29, 31, 37, 42, 43, 47, 48, 49, 41, 40, 30, 33]
 solution : [9, 8, 10, 28]


Before backtrack at level 7
 pending : [23, 38, 5, 29, 31, 37, 42, 43, 47, 48, 49, 41, 40, 30, 33]
 solution : [9, 8, 10, 28]

After backtrack at level 7
 pending : [23, 38, 5, 29, 31, 37, 42, 43, 47, 48, 49, 41, 40, 30, 33, 7]
 solution : [9, 8, 10, 28]


Before backtrack at level 6
 pending : [23, 38, 5, 29, 31, 37, 42, 43, 47, 48, 49, 41, 40, 30, 33, 7]
 solution : [9, 8, 10, 28]

After backtrack at level 6
 pending : [23, 38, 5, 29, 31, 37, 42, 43, 47, 48, 49, 41, 40, 30, 33, 7, 27, 39, 3, 19, 16, 22, 15, 18, 14, 17, 21, 13, 24]
 solution : [9, 8, 10, 28]


Invert decision for 28 at level 5


New level: 6
 pending : [23, 38, 5, 29, 31, 37, 42, 43, 47, 48, 49, 41, 40, 30, 33, 7, 27, 39, 3, 19, 16, 22, 15, 18, 14, 17, 21, 13, 24]
 solution : [9, 8, 10]


Before reduction : 
 pending  : [23, 38, 5, 29, 31, 37, 42, 43, 47, 48, 49, 41, 40, 30, 33, 7, 27, 39, 3, 19, 16, 22, 15, 18, 14, 17, 21, 13, 24]
 solution : [9, 8, 10]

Essensial at level 6 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 131072), (4, -1), (5, 524288), (6, -1), (7, 67108864), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, 268435456), (14, 2097152), (15, 1048576), (16, 65536), (17, 8388608), (18, 4194304), (19, 139264), (20, -1), (21, 134217728), (22, 32768), (23, 67108864), (24, 268435456), (25, -1), (26, -1), (27, 524288), (28, -1), (29, 524288), (30, 1048576), (31, 8192), (32, -1), (33, 8192), (34, -1), (35, -1), (36, -1), (37, 8192), (38, 33554432), (39, 524288), (40, 134217728), (41, 67108864), (42, 262144), (43, 262144), (44, -1), (45, -1), (46, -1), (47, 33554432), (48, 8388608), (49, 33554432), (50, -1), (51, -1), (52, -1)]

Covered at level 6 : set()

After reduction : 
 pending  : [23, 38, 5, 29, 31, 37, 42, 43, 47, 48, 49, 41, 40, 30, 33, 7, 27, 39, 3, 19, 16, 22, 15, 18, 14, 17, 21, 13, 24]
 solution : [9, 8, 10]


Solution : [9, 8, 10] has cost 14.


Decide in level 6 among pending : [23, 38, 5, 29, 31, 37, 42, 43, 47, 48, 49, 41, 40, 30, 33, 7, 27, 39, 3, 19, 16, 22, 15, 18, 14, 17, 21, 13, 24]

Coverage : [(0, -1), (1, -1), (2, -1), (3, 131072), (4, -1), (5, 524288), (6, -1), (7, 67108864), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, 268435456), (14, 2097152), (15, 1048576), (16, 65536), (17, 8388608), (18, 4194304), (19, 139264), (20, -1), (21, 134217728), (22, 32768), (23, 67108864), (24, 268435456), (25, -1), (26, -1), (27, 524288), (28, -1), (29, 524288), (30, 1048576), (31, 8192), (32, -1), (33, 8192), (34, -1), (35, -1), (36, -1), (37, 8192), (38, 33554432), (39, 524288), (40, 134217728), (41, 67108864), (42, 262144), (43, 262144), (44, -1), (45, -1), (46, -1), (47, 33554432), (48, 8388608), (49, 33554432), (50, -1), (51, -1), (52, -1)]

Decide 13 with phase True at level 6

After decision at level 6
 pending : [23, 38, 5, 29, 31, 37, 42, 43, 47, 48, 49, 41, 40, 30, 33, 7, 27, 39, 3, 19, 16, 22, 15, 18, 14, 17, 21, 24]
 solution : [9, 8, 10, 13]


New level: 7
 pending : [23, 38, 5, 29, 31, 37, 42, 43, 47, 48, 49, 41, 40, 30, 33, 7, 27, 39, 3, 19, 16, 22, 15, 18, 14, 17, 21, 24]
 solution : [9, 8, 10, 13]


Before reduction : 
 pending  : [23, 38, 5, 29, 31, 37, 42, 43, 47, 48, 49, 41, 40, 30, 33, 7, 27, 39, 3, 19, 16, 22, 15, 18, 14, 17, 21, 24]
 solution : [9, 8, 10, 13]

Essensial at level 7 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 131072), (4, -1), (5, 524288), (6, -1), (7, 67108864), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, 268435456), (14, 2097152), (15, 1048576), (16, 65536), (17, 8388608), (18, 4194304), (19, 139264), (20, -1), (21, 134217728), (22, 32768), (23, 67108864), (24, 268435456), (25, -1), (26, -1), (27, 524288), (28, -1), (29, 524288), (30, 1048576), (31, 8192), (32, -1), (33, 8192), (34, -1), (35, -1), (36, -1), (37, 8192), (38, 33554432), (39, 524288), (40, 134217728), (41, 67108864), (42, 262144), (43, 262144), (44, -1), (45, -1), (46, -1), (47, 33554432), (48, 8388608), (49, 33554432), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 0), (4, -1), (5, 131072), (6, -1), (7, 67108864), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 0), (15, 0), (16, 0), (17, 0), (18, 0), (19, 0), (20, -1), (21, 0), (22, 0), (23, 67108864), (24, 268435456), (25, -1), (26, -1), (27, 0), (28, -1), (29, 262144), (30, 1048576), (31, 4096), (32, -1), (33, 8192), (34, -1), (35, -1), (36, -1), (37, 2048), (38, 1024), (39, 0), (40, 2048), (41, 33554432), (42, 65536), (43, 65536), (44, -1), (45, -1), (46, -1), (47, 16777216), (48, 2097152), (49, 33554432), (50, -1), (51, -1), (52, -1)]

Covered at level 7 : {3, 39, 14, 15, 16, 17, 18, 19, 21, 22, 27}

After reduction : 
 pending  : [23, 38, 5, 29, 31, 37, 42, 43, 47, 48, 49, 41, 40, 30, 33, 7, 24]
 solution : [9, 8, 10, 13]


Before reduction : 
 pending  : [23, 38, 5, 29, 31, 37, 42, 43, 47, 48, 49, 41, 40, 30, 33, 7, 24]
 solution : [9, 8, 10, 13]

Essensial at level 7 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 0), (4, -1), (5, 131072), (6, -1), (7, 67108864), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 0), (15, 0), (16, 0), (17, 0), (18, 0), (19, 0), (20, -1), (21, 0), (22, 0), (23, 67108864), (24, 268435456), (25, -1), (26, -1), (27, 0), (28, -1), (29, 262144), (30, 1048576), (31, 4096), (32, -1), (33, 8192), (34, -1), (35, -1), (36, -1), (37, 2048), (38, 1024), (39, 0), (40, 2048), (41, 33554432), (42, 65536), (43, 65536), (44, -1), (45, -1), (46, -1), (47, 16777216), (48, 2097152), (49, 33554432), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 131072), (6, -1), (7, 67108864), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, 67108864), (24, 268435456), (25, -1), (26, -1), (27, -1), (28, -1), (29, 262144), (30, 1048576), (31, 4096), (32, -1), (33, 8192), (34, -1), (35, -1), (36, -1), (37, 2048), (38, 1024), (39, -1), (40, 2048), (41, 33554432), (42, 65536), (43, 65536), (44, -1), (45, -1), (46, -1), (47, 16777216), (48, 2097152), (49, 33554432), (50, -1), (51, -1), (52, -1)]

Covered at level 7 : set()

After reduction : 
 pending  : [23, 38, 5, 29, 31, 37, 42, 43, 47, 48, 49, 41, 40, 30, 33, 7, 24]
 solution : [9, 8, 10, 13]


Solution : [9, 8, 10, 13] has cost 21.


Decide in level 7 among pending : [23, 38, 5, 29, 31, 37, 42, 43, 47, 48, 49, 41, 40, 30, 33, 7, 24]

Coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 131072), (6, -1), (7, 67108864), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, 67108864), (24, 268435456), (25, -1), (26, -1), (27, -1), (28, -1), (29, 262144), (30, 1048576), (31, 4096), (32, -1), (33, 8192), (34, -1), (35, -1), (36, -1), (37, 2048), (38, 1024), (39, -1), (40, 2048), (41, 33554432), (42, 65536), (43, 65536), (44, -1), (45, -1), (46, -1), (47, 16777216), (48, 2097152), (49, 33554432), (50, -1), (51, -1), (52, -1)]

Decide 24 with phase True at level 7

After decision at level 7
 pending : [23, 38, 5, 29, 31, 37, 42, 43, 47, 48, 49, 41, 40, 30, 33, 7]
 solution : [9, 8, 10, 13, 24]


New level: 8
 pending : [23, 38, 5, 29, 31, 37, 42, 43, 47, 48, 49, 41, 40, 30, 33, 7]
 solution : [9, 8, 10, 13, 24]


Before reduction : 
 pending  : [23, 38, 5, 29, 31, 37, 42, 43, 47, 48, 49, 41, 40, 30, 33, 7]
 solution : [9, 8, 10, 13, 24]

Essensial at level 8 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 131072), (6, -1), (7, 67108864), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, 67108864), (24, 268435456), (25, -1), (26, -1), (27, -1), (28, -1), (29, 262144), (30, 1048576), (31, 4096), (32, -1), (33, 8192), (34, -1), (35, -1), (36, -1), (37, 2048), (38, 1024), (39, -1), (40, 2048), (41, 33554432), (42, 65536), (43, 65536), (44, -1), (45, -1), (46, -1), (47, 16777216), (48, 2097152), (49, 33554432), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 32768), (6, -1), (7, 16777216), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, 16777216), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, 65536), (30, 0), (31, 1024), (32, -1), (33, 0), (34, -1), (35, -1), (36, -1), (37, 512), (38, 512), (39, -1), (40, 0), (41, 16777216), (42, 16384), (43, 16384), (44, -1), (45, -1), (46, -1), (47, 4194304), (48, 524288), (49, 16777216), (50, -1), (51, -1), (52, -1)]

Covered at level 8 : {40, 33, 30}

After reduction : 
 pending  : [23, 38, 5, 29, 31, 37, 42, 43, 47, 48, 49, 41, 7]
 solution : [9, 8, 10, 13, 24]


Before reduction : 
 pending  : [23, 38, 5, 29, 31, 37, 42, 43, 47, 48, 49, 41, 7]
 solution : [9, 8, 10, 13, 24]

Essensial at level 8 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 32768), (6, -1), (7, 16777216), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, 16777216), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, 65536), (30, 0), (31, 1024), (32, -1), (33, 0), (34, -1), (35, -1), (36, -1), (37, 512), (38, 512), (39, -1), (40, 0), (41, 16777216), (42, 16384), (43, 16384), (44, -1), (45, -1), (46, -1), (47, 4194304), (48, 524288), (49, 16777216), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 32768), (6, -1), (7, 16777216), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, 16777216), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, 65536), (30, -1), (31, 1024), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, 512), (38, 512), (39, -1), (40, -1), (41, 16777216), (42, 16384), (43, 16384), (44, -1), (45, -1), (46, -1), (47, 4194304), (48, 524288), (49, 16777216), (50, -1), (51, -1), (52, -1)]

Covered at level 8 : set()

After reduction : 
 pending  : [23, 38, 5, 29, 31, 37, 42, 43, 47, 48, 49, 41, 7]
 solution : [9, 8, 10, 13, 24]


Solution : [9, 8, 10, 13, 24] has cost 28.


Before backtrack at level 8
 pending : [23, 38, 5, 29, 31, 37, 42, 43, 47, 48, 49, 41, 7]
 solution : [9, 8, 10, 13, 24]

After backtrack at level 8
 pending : [23, 38, 5, 29, 31, 37, 42, 43, 47, 48, 49, 41, 7, 40, 30, 33]
 solution : [9, 8, 10, 13, 24]


Invert decision for 24 at level 7


New level: 8
 pending : [23, 38, 5, 29, 31, 37, 42, 43, 47, 48, 49, 41, 7, 40, 30, 33]
 solution : [9, 8, 10, 13]


Before reduction : 
 pending  : [23, 38, 5, 29, 31, 37, 42, 43, 47, 48, 49, 41, 7, 40, 30, 33]
 solution : [9, 8, 10, 13]

Essensial at level 8 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 32768), (6, -1), (7, 16777216), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, 16777216), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, 65536), (30, -1), (31, 1024), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, 512), (38, 512), (39, -1), (40, -1), (41, 16777216), (42, 16384), (43, 16384), (44, -1), (45, -1), (46, -1), (47, 4194304), (48, 524288), (49, 16777216), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 131072), (6, -1), (7, 67108864), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, 67108864), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, 262144), (30, 1048576), (31, 4096), (32, -1), (33, 8192), (34, -1), (35, -1), (36, -1), (37, 2048), (38, 1024), (39, -1), (40, 2048), (41, 33554432), (42, 65536), (43, 65536), (44, -1), (45, -1), (46, -1), (47, 16777216), (48, 2097152), (49, 33554432), (50, -1), (51, -1), (52, -1)]

Covered at level 8 : set()

After reduction : 
 pending  : [23, 38, 5, 29, 31, 37, 42, 43, 47, 48, 49, 41, 7, 40, 30, 33]
 solution : [9, 8, 10, 13]


Solution : [9, 8, 10, 13] has cost 21.


Decide in level 8 among pending : [23, 38, 5, 29, 31, 37, 42, 43, 47, 48, 49, 41, 7, 40, 30, 33]

Coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 131072), (6, -1), (7, 67108864), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, 67108864), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, 262144), (30, 1048576), (31, 4096), (32, -1), (33, 8192), (34, -1), (35, -1), (36, -1), (37, 2048), (38, 1024), (39, -1), (40, 2048), (41, 33554432), (42, 65536), (43, 65536), (44, -1), (45, -1), (46, -1), (47, 16777216), (48, 2097152), (49, 33554432), (50, -1), (51, -1), (52, -1)]

Decide 23 with phase True at level 8

After decision at level 8
 pending : [38, 5, 29, 31, 37, 42, 43, 47, 48, 49, 41, 7, 40, 30, 33]
 solution : [9, 8, 10, 13, 23]


New level: 9
 pending : [38, 5, 29, 31, 37, 42, 43, 47, 48, 49, 41, 7, 40, 30, 33]
 solution : [9, 8, 10, 13, 23]


Before reduction : 
 pending  : [38, 5, 29, 31, 37, 42, 43, 47, 48, 49, 41, 7, 40, 30, 33]
 solution : [9, 8, 10, 13, 23]

Essensial at level 9 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 131072), (6, -1), (7, 67108864), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, 67108864), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, 262144), (30, 1048576), (31, 4096), (32, -1), (33, 8192), (34, -1), (35, -1), (36, -1), (37, 2048), (38, 1024), (39, -1), (40, 2048), (41, 33554432), (42, 65536), (43, 65536), (44, -1), (45, -1), (46, -1), (47, 16777216), (48, 2097152), (49, 33554432), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 0), (6, -1), (7, 0), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, 0), (30, 0), (31, 0), (32, -1), (33, 0), (34, -1), (35, -1), (36, -1), (37, 0), (38, 0), (39, -1), (40, 0), (41, 0), (42, 0), (43, 0), (44, -1), (45, -1), (46, -1), (47, 0), (48, 0), (49, 0), (50, -1), (51, -1), (52, -1)]

Covered at level 9 : {33, 37, 5, 38, 7, 41, 42, 43, 40, 47, 48, 49, 29, 30, 31}

After reduction : 
 pending  : []
 solution : [9, 8, 10, 13, 23]


Before reduction : 
 pending  : []
 solution : [9, 8, 10, 13, 23]

Essensial at level 9 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 0), (6, -1), (7, 0), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, 0), (30, 0), (31, 0), (32, -1), (33, 0), (34, -1), (35, -1), (36, -1), (37, 0), (38, 0), (39, -1), (40, 0), (41, 0), (42, 0), (43, 0), (44, -1), (45, -1), (46, -1), (47, 0), (48, 0), (49, 0), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 9 : set()

After reduction : 
 pending  : []
 solution : [9, 8, 10, 13, 23]


Solution : [9, 8, 10, 13, 23] has cost 28.


Before backtrack at level 9
 pending : []
 solution : [9, 8, 10, 13, 23]

After backtrack at level 9
 pending : [38, 5, 29, 31, 37, 42, 43, 47, 48, 49, 41, 7, 40, 30, 33]
 solution : [9, 8, 10, 13, 23]


Invert decision for 23 at level 8


New level: 9
 pending : [38, 5, 29, 31, 37, 42, 43, 47, 48, 49, 41, 7, 40, 30, 33]
 solution : [9, 8, 10, 13]


Before reduction : 
 pending  : [38, 5, 29, 31, 37, 42, 43, 47, 48, 49, 41, 7, 40, 30, 33]
 solution : [9, 8, 10, 13]

Essensial at level 9 : {7}

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 0), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, 0), (30, 0), (31, 0), (32, -1), (33, 0), (34, -1), (35, -1), (36, -1), (37, 0), (38, 0), (39, -1), (40, 0), (41, 0), (42, 0), (43, 0), (44, -1), (45, -1), (46, -1), (47, 0), (48, 0), (49, 0), (50, -1), (51, -1), (52, -1)]

Covered at level 9 : {33, 37, 5, 38, 40, 41, 42, 43, 47, 48, 49, 29, 30, 31}

After reduction : 
 pending  : []
 solution : [9, 8, 10, 13, 7]


Before reduction : 
 pending  : []
 solution : [9, 8, 10, 13, 7]

Essensial at level 9 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 0), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, 0), (30, 0), (31, 0), (32, -1), (33, 0), (34, -1), (35, -1), (36, -1), (37, 0), (38, 0), (39, -1), (40, 0), (41, 0), (42, 0), (43, 0), (44, -1), (45, -1), (46, -1), (47, 0), (48, 0), (49, 0), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 9 : set()

After reduction : 
 pending  : []
 solution : [9, 8, 10, 13, 7]


Solution : [9, 8, 10, 13, 7] has cost 25.


Before backtrack at level 9
 pending : []
 solution : [9, 8, 10, 13, 7]

After backtrack at level 9
 pending : [7, 38, 5, 29, 31, 37, 42, 43, 47, 48, 49, 41, 40, 30, 33]
 solution : [9, 8, 10, 13]


Before backtrack at level 8
 pending : [7, 38, 5, 29, 31, 37, 42, 43, 47, 48, 49, 41, 40, 30, 33]
 solution : [9, 8, 10, 13]

After backtrack at level 8
 pending : [7, 38, 5, 29, 31, 37, 42, 43, 47, 48, 49, 41, 40, 30, 33, 23]
 solution : [9, 8, 10, 13]


Before backtrack at level 7
 pending : [7, 38, 5, 29, 31, 37, 42, 43, 47, 48, 49, 41, 40, 30, 33, 23]
 solution : [9, 8, 10, 13]

After backtrack at level 7
 pending : [7, 38, 5, 29, 31, 37, 42, 43, 47, 48, 49, 41, 40, 30, 33, 23, 27, 39, 3, 19, 16, 22, 15, 18, 14, 17, 21, 24]
 solution : [9, 8, 10, 13]


Invert decision for 13 at level 6


New level: 7
 pending : [7, 38, 5, 29, 31, 37, 42, 43, 47, 48, 49, 41, 40, 30, 33, 23, 27, 39, 3, 19, 16, 22, 15, 18, 14, 17, 21, 24]
 solution : [9, 8, 10]


Before reduction : 
 pending  : [7, 38, 5, 29, 31, 37, 42, 43, 47, 48, 49, 41, 40, 30, 33, 23, 27, 39, 3, 19, 16, 22, 15, 18, 14, 17, 21, 24]
 solution : [9, 8, 10]

Essensial at level 7 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 131072), (4, -1), (5, 524288), (6, -1), (7, 67108864), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 2097152), (15, 1048576), (16, 65536), (17, 8388608), (18, 4194304), (19, 139264), (20, -1), (21, 134217728), (22, 32768), (23, 67108864), (24, 268435456), (25, -1), (26, -1), (27, 524288), (28, -1), (29, 524288), (30, 1048576), (31, 8192), (32, -1), (33, 8192), (34, -1), (35, -1), (36, -1), (37, 8192), (38, 33554432), (39, 524288), (40, 134217728), (41, 67108864), (42, 262144), (43, 262144), (44, -1), (45, -1), (46, -1), (47, 33554432), (48, 8388608), (49, 33554432), (50, -1), (51, -1), (52, -1)]

Covered at level 7 : set()

After reduction : 
 pending  : [7, 38, 5, 29, 31, 37, 42, 43, 47, 48, 49, 41, 40, 30, 33, 23, 27, 39, 3, 19, 16, 22, 15, 18, 14, 17, 21, 24]
 solution : [9, 8, 10]


Solution : [9, 8, 10] has cost 14.


Decide in level 7 among pending : [7, 38, 5, 29, 31, 37, 42, 43, 47, 48, 49, 41, 40, 30, 33, 23, 27, 39, 3, 19, 16, 22, 15, 18, 14, 17, 21, 24]

Coverage : [(0, -1), (1, -1), (2, -1), (3, 131072), (4, -1), (5, 524288), (6, -1), (7, 67108864), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 2097152), (15, 1048576), (16, 65536), (17, 8388608), (18, 4194304), (19, 139264), (20, -1), (21, 134217728), (22, 32768), (23, 67108864), (24, 268435456), (25, -1), (26, -1), (27, 524288), (28, -1), (29, 524288), (30, 1048576), (31, 8192), (32, -1), (33, 8192), (34, -1), (35, -1), (36, -1), (37, 8192), (38, 33554432), (39, 524288), (40, 134217728), (41, 67108864), (42, 262144), (43, 262144), (44, -1), (45, -1), (46, -1), (47, 33554432), (48, 8388608), (49, 33554432), (50, -1), (51, -1), (52, -1)]

Decide 24 with phase True at level 7

After decision at level 7
 pending : [7, 38, 5, 29, 31, 37, 42, 43, 47, 48, 49, 41, 40, 30, 33, 23, 27, 39, 3, 19, 16, 22, 15, 18, 14, 17, 21]
 solution : [9, 8, 10, 24]


New level: 8
 pending : [7, 38, 5, 29, 31, 37, 42, 43, 47, 48, 49, 41, 40, 30, 33, 23, 27, 39, 3, 19, 16, 22, 15, 18, 14, 17, 21]
 solution : [9, 8, 10, 24]


Before reduction : 
 pending  : [7, 38, 5, 29, 31, 37, 42, 43, 47, 48, 49, 41, 40, 30, 33, 23, 27, 39, 3, 19, 16, 22, 15, 18, 14, 17, 21]
 solution : [9, 8, 10, 24]

Essensial at level 8 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 131072), (4, -1), (5, 524288), (6, -1), (7, 67108864), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 2097152), (15, 1048576), (16, 65536), (17, 8388608), (18, 4194304), (19, 139264), (20, -1), (21, 134217728), (22, 32768), (23, 67108864), (24, 268435456), (25, -1), (26, -1), (27, 524288), (28, -1), (29, 524288), (30, 1048576), (31, 8192), (32, -1), (33, 8192), (34, -1), (35, -1), (36, -1), (37, 8192), (38, 33554432), (39, 524288), (40, 134217728), (41, 67108864), (42, 262144), (43, 262144), (44, -1), (45, -1), (46, -1), (47, 33554432), (48, 8388608), (49, 33554432), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 131072), (4, -1), (5, 131072), (6, -1), (7, 16777216), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 2097152), (15, 1048576), (16, 65536), (17, 8388608), (18, 4194304), (19, 139264), (20, -1), (21, 134217728), (22, 32768), (23, 16777216), (24, -1), (25, -1), (26, -1), (27, 524288), (28, -1), (29, 131072), (30, 0), (31, 2048), (32, -1), (33, 0), (34, -1), (35, -1), (36, -1), (37, 2048), (38, 33554432), (39, 524288), (40, 512), (41, 33554432), (42, 65536), (43, 65536), (44, -1), (45, -1), (46, -1), (47, 8388608), (48, 2097152), (49, 16777216), (50, -1), (51, -1), (52, -1)]

Covered at level 8 : {33, 30}

After reduction : 
 pending  : [7, 38, 5, 29, 31, 37, 42, 43, 47, 48, 49, 41, 40, 23, 27, 39, 3, 19, 16, 22, 15, 18, 14, 17, 21]
 solution : [9, 8, 10, 24]


Before reduction : 
 pending  : [7, 38, 5, 29, 31, 37, 42, 43, 47, 48, 49, 41, 40, 23, 27, 39, 3, 19, 16, 22, 15, 18, 14, 17, 21]
 solution : [9, 8, 10, 24]

Essensial at level 8 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 131072), (4, -1), (5, 131072), (6, -1), (7, 16777216), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 2097152), (15, 1048576), (16, 65536), (17, 8388608), (18, 4194304), (19, 139264), (20, -1), (21, 134217728), (22, 32768), (23, 16777216), (24, -1), (25, -1), (26, -1), (27, 524288), (28, -1), (29, 131072), (30, 0), (31, 2048), (32, -1), (33, 0), (34, -1), (35, -1), (36, -1), (37, 2048), (38, 33554432), (39, 524288), (40, 512), (41, 33554432), (42, 65536), (43, 65536), (44, -1), (45, -1), (46, -1), (47, 8388608), (48, 2097152), (49, 16777216), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 131072), (4, -1), (5, 131072), (6, -1), (7, 16777216), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 2097152), (15, 1048576), (16, 65536), (17, 8388608), (18, 4194304), (19, 139264), (20, -1), (21, 134217728), (22, 32768), (23, 16777216), (24, -1), (25, -1), (26, -1), (27, 524288), (28, -1), (29, 131072), (30, -1), (31, 2048), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, 2048), (38, 33554432), (39, 524288), (40, 512), (41, 33554432), (42, 65536), (43, 65536), (44, -1), (45, -1), (46, -1), (47, 8388608), (48, 2097152), (49, 16777216), (50, -1), (51, -1), (52, -1)]

Covered at level 8 : set()

After reduction : 
 pending  : [7, 38, 5, 29, 31, 37, 42, 43, 47, 48, 49, 41, 40, 23, 27, 39, 3, 19, 16, 22, 15, 18, 14, 17, 21]
 solution : [9, 8, 10, 24]


Solution : [9, 8, 10, 24] has cost 21.


Decide in level 8 among pending : [7, 38, 5, 29, 31, 37, 42, 43, 47, 48, 49, 41, 40, 23, 27, 39, 3, 19, 16, 22, 15, 18, 14, 17, 21]

Coverage : [(0, -1), (1, -1), (2, -1), (3, 131072), (4, -1), (5, 131072), (6, -1), (7, 16777216), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 2097152), (15, 1048576), (16, 65536), (17, 8388608), (18, 4194304), (19, 139264), (20, -1), (21, 134217728), (22, 32768), (23, 16777216), (24, -1), (25, -1), (26, -1), (27, 524288), (28, -1), (29, 131072), (30, -1), (31, 2048), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, 2048), (38, 33554432), (39, 524288), (40, 512), (41, 33554432), (42, 65536), (43, 65536), (44, -1), (45, -1), (46, -1), (47, 8388608), (48, 2097152), (49, 16777216), (50, -1), (51, -1), (52, -1)]

Decide 21 with phase True at level 8

After decision at level 8
 pending : [7, 38, 5, 29, 31, 37, 42, 43, 47, 48, 49, 41, 40, 23, 27, 39, 3, 19, 16, 22, 15, 18, 14, 17]
 solution : [9, 8, 10, 24, 21]


New level: 9
 pending : [7, 38, 5, 29, 31, 37, 42, 43, 47, 48, 49, 41, 40, 23, 27, 39, 3, 19, 16, 22, 15, 18, 14, 17]
 solution : [9, 8, 10, 24, 21]


Before reduction : 
 pending  : [7, 38, 5, 29, 31, 37, 42, 43, 47, 48, 49, 41, 40, 23, 27, 39, 3, 19, 16, 22, 15, 18, 14, 17]
 solution : [9, 8, 10, 24, 21]

Essensial at level 9 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 131072), (4, -1), (5, 131072), (6, -1), (7, 16777216), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 2097152), (15, 1048576), (16, 65536), (17, 8388608), (18, 4194304), (19, 139264), (20, -1), (21, 134217728), (22, 32768), (23, 16777216), (24, -1), (25, -1), (26, -1), (27, 524288), (28, -1), (29, 131072), (30, -1), (31, 2048), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, 2048), (38, 33554432), (39, 524288), (40, 512), (41, 33554432), (42, 65536), (43, 65536), (44, -1), (45, -1), (46, -1), (47, 8388608), (48, 2097152), (49, 16777216), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 0), (4, -1), (5, 32768), (6, -1), (7, 16777216), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 0), (15, 0), (16, 0), (17, 0), (18, 0), (19, 0), (20, -1), (21, -1), (22, 0), (23, 16777216), (24, -1), (25, -1), (26, -1), (27, 0), (28, -1), (29, 65536), (30, -1), (31, 1024), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, 512), (38, 512), (39, 0), (40, 0), (41, 16777216), (42, 16384), (43, 16384), (44, -1), (45, -1), (46, -1), (47, 8388608), (48, 2097152), (49, 16777216), (50, -1), (51, -1), (52, -1)]

Covered at level 9 : {3, 39, 40, 14, 15, 16, 17, 18, 19, 22, 27}

After reduction : 
 pending  : [7, 38, 5, 29, 31, 37, 42, 43, 47, 48, 49, 41, 23]
 solution : [9, 8, 10, 24, 21]


Before reduction : 
 pending  : [7, 38, 5, 29, 31, 37, 42, 43, 47, 48, 49, 41, 23]
 solution : [9, 8, 10, 24, 21]

Essensial at level 9 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 0), (4, -1), (5, 32768), (6, -1), (7, 16777216), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 0), (15, 0), (16, 0), (17, 0), (18, 0), (19, 0), (20, -1), (21, -1), (22, 0), (23, 16777216), (24, -1), (25, -1), (26, -1), (27, 0), (28, -1), (29, 65536), (30, -1), (31, 1024), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, 512), (38, 512), (39, 0), (40, 0), (41, 16777216), (42, 16384), (43, 16384), (44, -1), (45, -1), (46, -1), (47, 8388608), (48, 2097152), (49, 16777216), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 32768), (6, -1), (7, 16777216), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, 16777216), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, 65536), (30, -1), (31, 1024), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, 512), (38, 512), (39, -1), (40, -1), (41, 16777216), (42, 16384), (43, 16384), (44, -1), (45, -1), (46, -1), (47, 8388608), (48, 2097152), (49, 16777216), (50, -1), (51, -1), (52, -1)]

Covered at level 9 : set()

After reduction : 
 pending  : [7, 38, 5, 29, 31, 37, 42, 43, 47, 48, 49, 41, 23]
 solution : [9, 8, 10, 24, 21]


Solution : [9, 8, 10, 24, 21] has cost 28.


Before backtrack at level 9
 pending : [7, 38, 5, 29, 31, 37, 42, 43, 47, 48, 49, 41, 23]
 solution : [9, 8, 10, 24, 21]

After backtrack at level 9
 pending : [7, 38, 5, 29, 31, 37, 42, 43, 47, 48, 49, 41, 23, 40, 27, 39, 3, 19, 16, 22, 15, 18, 14, 17]
 solution : [9, 8, 10, 24, 21]


Invert decision for 21 at level 8


New level: 9
 pending : [7, 38, 5, 29, 31, 37, 42, 43, 47, 48, 49, 41, 23, 40, 27, 39, 3, 19, 16, 22, 15, 18, 14, 17]
 solution : [9, 8, 10, 24]


Before reduction : 
 pending  : [7, 38, 5, 29, 31, 37, 42, 43, 47, 48, 49, 41, 23, 40, 27, 39, 3, 19, 16, 22, 15, 18, 14, 17]
 solution : [9, 8, 10, 24]

Essensial at level 9 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 32768), (6, -1), (7, 16777216), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, 16777216), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, 65536), (30, -1), (31, 1024), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, 512), (38, 512), (39, -1), (40, -1), (41, 16777216), (42, 16384), (43, 16384), (44, -1), (45, -1), (46, -1), (47, 8388608), (48, 2097152), (49, 16777216), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 131072), (4, -1), (5, 131072), (6, -1), (7, 16777216), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 2097152), (15, 1048576), (16, 65536), (17, 8388608), (18, 4194304), (19, 139264), (20, -1), (21, -1), (22, 32768), (23, 16777216), (24, -1), (25, -1), (26, -1), (27, 524288), (28, -1), (29, 131072), (30, -1), (31, 2048), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, 2048), (38, 33554432), (39, 524288), (40, 512), (41, 33554432), (42, 65536), (43, 65536), (44, -1), (45, -1), (46, -1), (47, 8388608), (48, 2097152), (49, 16777216), (50, -1), (51, -1), (52, -1)]

Covered at level 9 : set()

After reduction : 
 pending  : [7, 38, 5, 29, 31, 37, 42, 43, 47, 48, 49, 41, 23, 40, 27, 39, 3, 19, 16, 22, 15, 18, 14, 17]
 solution : [9, 8, 10, 24]


Solution : [9, 8, 10, 24] has cost 21.


Decide in level 9 among pending : [7, 38, 5, 29, 31, 37, 42, 43, 47, 48, 49, 41, 23, 40, 27, 39, 3, 19, 16, 22, 15, 18, 14, 17]

Coverage : [(0, -1), (1, -1), (2, -1), (3, 131072), (4, -1), (5, 131072), (6, -1), (7, 16777216), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 2097152), (15, 1048576), (16, 65536), (17, 8388608), (18, 4194304), (19, 139264), (20, -1), (21, -1), (22, 32768), (23, 16777216), (24, -1), (25, -1), (26, -1), (27, 524288), (28, -1), (29, 131072), (30, -1), (31, 2048), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, 2048), (38, 33554432), (39, 524288), (40, 512), (41, 33554432), (42, 65536), (43, 65536), (44, -1), (45, -1), (46, -1), (47, 8388608), (48, 2097152), (49, 16777216), (50, -1), (51, -1), (52, -1)]

Decide 38 with phase True at level 9

After decision at level 9
 pending : [7, 5, 29, 31, 37, 42, 43, 47, 48, 49, 41, 23, 40, 27, 39, 3, 19, 16, 22, 15, 18, 14, 17]
 solution : [9, 8, 10, 24, 38]


New level: 10
 pending : [7, 5, 29, 31, 37, 42, 43, 47, 48, 49, 41, 23, 40, 27, 39, 3, 19, 16, 22, 15, 18, 14, 17]
 solution : [9, 8, 10, 24, 38]


Before reduction : 
 pending  : [7, 5, 29, 31, 37, 42, 43, 47, 48, 49, 41, 23, 40, 27, 39, 3, 19, 16, 22, 15, 18, 14, 17]
 solution : [9, 8, 10, 24, 38]

Essensial at level 10 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 131072), (4, -1), (5, 131072), (6, -1), (7, 16777216), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 2097152), (15, 1048576), (16, 65536), (17, 8388608), (18, 4194304), (19, 139264), (20, -1), (21, -1), (22, 32768), (23, 16777216), (24, -1), (25, -1), (26, -1), (27, 524288), (28, -1), (29, 131072), (30, -1), (31, 2048), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, 2048), (38, 33554432), (39, 524288), (40, 512), (41, 33554432), (42, 65536), (43, 65536), (44, -1), (45, -1), (46, -1), (47, 8388608), (48, 2097152), (49, 16777216), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 65536), (4, -1), (5, 32768), (6, -1), (7, 4194304), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 2097152), (15, 1048576), (16, 32768), (17, 4194304), (18, 2097152), (19, 67584), (20, -1), (21, -1), (22, 32768), (23, 4194304), (24, -1), (25, -1), (26, -1), (27, 131072), (28, -1), (29, 32768), (30, -1), (31, 512), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, 512), (38, -1), (39, 131072), (40, 0), (41, 33554432), (42, 16384), (43, 16384), (44, -1), (45, -1), (46, -1), (47, 4194304), (48, 524288), (49, 16777216), (50, -1), (51, -1), (52, -1)]

Covered at level 10 : {40}

After reduction : 
 pending  : [7, 5, 29, 31, 37, 42, 43, 47, 48, 49, 41, 23, 27, 39, 3, 19, 16, 22, 15, 18, 14, 17]
 solution : [9, 8, 10, 24, 38]


Before reduction : 
 pending  : [7, 5, 29, 31, 37, 42, 43, 47, 48, 49, 41, 23, 27, 39, 3, 19, 16, 22, 15, 18, 14, 17]
 solution : [9, 8, 10, 24, 38]

Essensial at level 10 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 65536), (4, -1), (5, 32768), (6, -1), (7, 4194304), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 2097152), (15, 1048576), (16, 32768), (17, 4194304), (18, 2097152), (19, 67584), (20, -1), (21, -1), (22, 32768), (23, 4194304), (24, -1), (25, -1), (26, -1), (27, 131072), (28, -1), (29, 32768), (30, -1), (31, 512), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, 512), (38, -1), (39, 131072), (40, 0), (41, 33554432), (42, 16384), (43, 16384), (44, -1), (45, -1), (46, -1), (47, 4194304), (48, 524288), (49, 16777216), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 65536), (4, -1), (5, 32768), (6, -1), (7, 4194304), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 2097152), (15, 1048576), (16, 32768), (17, 4194304), (18, 2097152), (19, 67584), (20, -1), (21, -1), (22, 32768), (23, 4194304), (24, -1), (25, -1), (26, -1), (27, 131072), (28, -1), (29, 32768), (30, -1), (31, 512), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, 512), (38, -1), (39, 131072), (40, -1), (41, 33554432), (42, 16384), (43, 16384), (44, -1), (45, -1), (46, -1), (47, 4194304), (48, 524288), (49, 16777216), (50, -1), (51, -1), (52, -1)]

Covered at level 10 : set()

After reduction : 
 pending  : [7, 5, 29, 31, 37, 42, 43, 47, 48, 49, 41, 23, 27, 39, 3, 19, 16, 22, 15, 18, 14, 17]
 solution : [9, 8, 10, 24, 38]


Solution : [9, 8, 10, 24, 38] has cost 39.


Before backtrack at level 10
 pending : [7, 5, 29, 31, 37, 42, 43, 47, 48, 49, 41, 23, 27, 39, 3, 19, 16, 22, 15, 18, 14, 17]
 solution : [9, 8, 10, 24, 38]

After backtrack at level 10
 pending : [7, 5, 29, 31, 37, 42, 43, 47, 48, 49, 41, 23, 27, 39, 3, 19, 16, 22, 15, 18, 14, 17, 40]
 solution : [9, 8, 10, 24, 38]


Invert decision for 38 at level 9


New level: 10
 pending : [7, 5, 29, 31, 37, 42, 43, 47, 48, 49, 41, 23, 27, 39, 3, 19, 16, 22, 15, 18, 14, 17, 40]
 solution : [9, 8, 10, 24]


Before reduction : 
 pending  : [7, 5, 29, 31, 37, 42, 43, 47, 48, 49, 41, 23, 27, 39, 3, 19, 16, 22, 15, 18, 14, 17, 40]
 solution : [9, 8, 10, 24]

Essensial at level 10 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 65536), (4, -1), (5, 32768), (6, -1), (7, 4194304), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 2097152), (15, 1048576), (16, 32768), (17, 4194304), (18, 2097152), (19, 67584), (20, -1), (21, -1), (22, 32768), (23, 4194304), (24, -1), (25, -1), (26, -1), (27, 131072), (28, -1), (29, 32768), (30, -1), (31, 512), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, 512), (38, -1), (39, 131072), (40, -1), (41, 33554432), (42, 16384), (43, 16384), (44, -1), (45, -1), (46, -1), (47, 4194304), (48, 524288), (49, 16777216), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 131072), (4, -1), (5, 131072), (6, -1), (7, 16777216), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 2097152), (15, 1048576), (16, 65536), (17, 8388608), (18, 4194304), (19, 139264), (20, -1), (21, -1), (22, 32768), (23, 16777216), (24, -1), (25, -1), (26, -1), (27, 524288), (28, -1), (29, 131072), (30, -1), (31, 2048), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, 2048), (38, -1), (39, 524288), (40, 512), (41, 33554432), (42, 65536), (43, 65536), (44, -1), (45, -1), (46, -1), (47, 8388608), (48, 2097152), (49, 16777216), (50, -1), (51, -1), (52, -1)]

Covered at level 10 : set()

After reduction : 
 pending  : [7, 5, 29, 31, 37, 42, 43, 47, 48, 49, 41, 23, 27, 39, 3, 19, 16, 22, 15, 18, 14, 17, 40]
 solution : [9, 8, 10, 24]


Solution : [9, 8, 10, 24] has cost 21.


Decide in level 10 among pending : [7, 5, 29, 31, 37, 42, 43, 47, 48, 49, 41, 23, 27, 39, 3, 19, 16, 22, 15, 18, 14, 17, 40]

Coverage : [(0, -1), (1, -1), (2, -1), (3, 131072), (4, -1), (5, 131072), (6, -1), (7, 16777216), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 2097152), (15, 1048576), (16, 65536), (17, 8388608), (18, 4194304), (19, 139264), (20, -1), (21, -1), (22, 32768), (23, 16777216), (24, -1), (25, -1), (26, -1), (27, 524288), (28, -1), (29, 131072), (30, -1), (31, 2048), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, 2048), (38, -1), (39, 524288), (40, 512), (41, 33554432), (42, 65536), (43, 65536), (44, -1), (45, -1), (46, -1), (47, 8388608), (48, 2097152), (49, 16777216), (50, -1), (51, -1), (52, -1)]

Decide 41 with phase True at level 10

After decision at level 10
 pending : [7, 5, 29, 31, 37, 42, 43, 47, 48, 49, 23, 27, 39, 3, 19, 16, 22, 15, 18, 14, 17, 40]
 solution : [9, 8, 10, 24, 41]


New level: 11
 pending : [7, 5, 29, 31, 37, 42, 43, 47, 48, 49, 23, 27, 39, 3, 19, 16, 22, 15, 18, 14, 17, 40]
 solution : [9, 8, 10, 24, 41]


Before reduction : 
 pending  : [7, 5, 29, 31, 37, 42, 43, 47, 48, 49, 23, 27, 39, 3, 19, 16, 22, 15, 18, 14, 17, 40]
 solution : [9, 8, 10, 24, 41]

Essensial at level 11 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 131072), (4, -1), (5, 131072), (6, -1), (7, 16777216), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 2097152), (15, 1048576), (16, 65536), (17, 8388608), (18, 4194304), (19, 139264), (20, -1), (21, -1), (22, 32768), (23, 16777216), (24, -1), (25, -1), (26, -1), (27, 524288), (28, -1), (29, 131072), (30, -1), (31, 2048), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, 2048), (38, -1), (39, 524288), (40, 512), (41, 33554432), (42, 65536), (43, 65536), (44, -1), (45, -1), (46, -1), (47, 8388608), (48, 2097152), (49, 16777216), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 65536), (4, -1), (5, 0), (6, -1), (7, 65536), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 2097152), (15, 1048576), (16, 65536), (17, 8388608), (18, 4194304), (19, 67584), (20, -1), (21, -1), (22, 32768), (23, 2048), (24, -1), (25, -1), (26, -1), (27, 524288), (28, -1), (29, 0), (30, -1), (31, 0), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, 0), (38, -1), (39, 524288), (40, 512), (41, -1), (42, 0), (43, 0), (44, -1), (45, -1), (46, -1), (47, 0), (48, 0), (49, 0), (50, -1), (51, -1), (52, -1)]

Covered at level 11 : {37, 5, 42, 43, 47, 48, 49, 29, 31}

After reduction : 
 pending  : [7, 23, 27, 39, 3, 19, 16, 22, 15, 18, 14, 17, 40]
 solution : [9, 8, 10, 24, 41]


Before reduction : 
 pending  : [7, 23, 27, 39, 3, 19, 16, 22, 15, 18, 14, 17, 40]
 solution : [9, 8, 10, 24, 41]

Essensial at level 11 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 65536), (4, -1), (5, 0), (6, -1), (7, 65536), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 2097152), (15, 1048576), (16, 65536), (17, 8388608), (18, 4194304), (19, 67584), (20, -1), (21, -1), (22, 32768), (23, 2048), (24, -1), (25, -1), (26, -1), (27, 524288), (28, -1), (29, 0), (30, -1), (31, 0), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, 0), (38, -1), (39, 524288), (40, 512), (41, -1), (42, 0), (43, 0), (44, -1), (45, -1), (46, -1), (47, 0), (48, 0), (49, 0), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 65536), (4, -1), (5, -1), (6, -1), (7, 65536), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 2097152), (15, 1048576), (16, 65536), (17, 8388608), (18, 4194304), (19, 67584), (20, -1), (21, -1), (22, 32768), (23, 2048), (24, -1), (25, -1), (26, -1), (27, 524288), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, 524288), (40, 512), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 11 : set()

After reduction : 
 pending  : [7, 23, 27, 39, 3, 19, 16, 22, 15, 18, 14, 17, 40]
 solution : [9, 8, 10, 24, 41]


Solution : [9, 8, 10, 24, 41] has cost 39.


Before backtrack at level 11
 pending : [7, 23, 27, 39, 3, 19, 16, 22, 15, 18, 14, 17, 40]
 solution : [9, 8, 10, 24, 41]

After backtrack at level 11
 pending : [7, 23, 27, 39, 3, 19, 16, 22, 15, 18, 14, 17, 40, 5, 29, 31, 37, 42, 43, 47, 48, 49]
 solution : [9, 8, 10, 24, 41]


Invert decision for 41 at level 10


New level: 11
 pending : [7, 23, 27, 39, 3, 19, 16, 22, 15, 18, 14, 17, 40, 5, 29, 31, 37, 42, 43, 47, 48, 49]
 solution : [9, 8, 10, 24]


Before reduction : 
 pending  : [7, 23, 27, 39, 3, 19, 16, 22, 15, 18, 14, 17, 40, 5, 29, 31, 37, 42, 43, 47, 48, 49]
 solution : [9, 8, 10, 24]

Essensial at level 11 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 65536), (4, -1), (5, -1), (6, -1), (7, 65536), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 2097152), (15, 1048576), (16, 65536), (17, 8388608), (18, 4194304), (19, 67584), (20, -1), (21, -1), (22, 32768), (23, 2048), (24, -1), (25, -1), (26, -1), (27, 524288), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, 524288), (40, 512), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 131072), (4, -1), (5, 131072), (6, -1), (7, 16777216), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 2097152), (15, 1048576), (16, 65536), (17, 8388608), (18, 4194304), (19, 139264), (20, -1), (21, -1), (22, 32768), (23, 16777216), (24, -1), (25, -1), (26, -1), (27, 524288), (28, -1), (29, 131072), (30, -1), (31, 2048), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, 2048), (38, -1), (39, 524288), (40, 512), (41, -1), (42, 65536), (43, 65536), (44, -1), (45, -1), (46, -1), (47, 8388608), (48, 2097152), (49, 16777216), (50, -1), (51, -1), (52, -1)]

Covered at level 11 : set()

After reduction : 
 pending  : [7, 23, 27, 39, 3, 19, 16, 22, 15, 18, 14, 17, 40, 5, 29, 31, 37, 42, 43, 47, 48, 49]
 solution : [9, 8, 10, 24]


Solution : [9, 8, 10, 24] has cost 21.


Decide in level 11 among pending : [7, 23, 27, 39, 3, 19, 16, 22, 15, 18, 14, 17, 40, 5, 29, 31, 37, 42, 43, 47, 48, 49]

Coverage : [(0, -1), (1, -1), (2, -1), (3, 131072), (4, -1), (5, 131072), (6, -1), (7, 16777216), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 2097152), (15, 1048576), (16, 65536), (17, 8388608), (18, 4194304), (19, 139264), (20, -1), (21, -1), (22, 32768), (23, 16777216), (24, -1), (25, -1), (26, -1), (27, 524288), (28, -1), (29, 131072), (30, -1), (31, 2048), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, 2048), (38, -1), (39, 524288), (40, 512), (41, -1), (42, 65536), (43, 65536), (44, -1), (45, -1), (46, -1), (47, 8388608), (48, 2097152), (49, 16777216), (50, -1), (51, -1), (52, -1)]

Decide 7 with phase True at level 11

After decision at level 11
 pending : [23, 27, 39, 3, 19, 16, 22, 15, 18, 14, 17, 40, 5, 29, 31, 37, 42, 43, 47, 48, 49]
 solution : [9, 8, 10, 24, 7]


New level: 12
 pending : [23, 27, 39, 3, 19, 16, 22, 15, 18, 14, 17, 40, 5, 29, 31, 37, 42, 43, 47, 48, 49]
 solution : [9, 8, 10, 24, 7]


Before reduction : 
 pending  : [23, 27, 39, 3, 19, 16, 22, 15, 18, 14, 17, 40, 5, 29, 31, 37, 42, 43, 47, 48, 49]
 solution : [9, 8, 10, 24, 7]

Essensial at level 12 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 131072), (4, -1), (5, 131072), (6, -1), (7, 16777216), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 2097152), (15, 1048576), (16, 65536), (17, 8388608), (18, 4194304), (19, 139264), (20, -1), (21, -1), (22, 32768), (23, 16777216), (24, -1), (25, -1), (26, -1), (27, 524288), (28, -1), (29, 131072), (30, -1), (31, 2048), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, 2048), (38, -1), (39, 524288), (40, 512), (41, -1), (42, 65536), (43, 65536), (44, -1), (45, -1), (46, -1), (47, 8388608), (48, 2097152), (49, 16777216), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 65536), (4, -1), (5, 0), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 2097152), (15, 1048576), (16, 32768), (17, 4194304), (18, 2097152), (19, 67584), (20, -1), (21, -1), (22, 32768), (23, 0), (24, -1), (25, -1), (26, -1), (27, 524288), (28, -1), (29, 0), (30, -1), (31, 0), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, 0), (38, -1), (39, 524288), (40, 512), (41, -1), (42, 0), (43, 0), (44, -1), (45, -1), (46, -1), (47, 0), (48, 0), (49, 0), (50, -1), (51, -1), (52, -1)]

Covered at level 12 : {37, 5, 42, 43, 47, 48, 49, 23, 29, 31}

After reduction : 
 pending  : [27, 39, 3, 19, 16, 22, 15, 18, 14, 17, 40]
 solution : [9, 8, 10, 24, 7]


Before reduction : 
 pending  : [27, 39, 3, 19, 16, 22, 15, 18, 14, 17, 40]
 solution : [9, 8, 10, 24, 7]

Essensial at level 12 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 65536), (4, -1), (5, 0), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 2097152), (15, 1048576), (16, 32768), (17, 4194304), (18, 2097152), (19, 67584), (20, -1), (21, -1), (22, 32768), (23, 0), (24, -1), (25, -1), (26, -1), (27, 524288), (28, -1), (29, 0), (30, -1), (31, 0), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, 0), (38, -1), (39, 524288), (40, 512), (41, -1), (42, 0), (43, 0), (44, -1), (45, -1), (46, -1), (47, 0), (48, 0), (49, 0), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 65536), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 2097152), (15, 1048576), (16, 32768), (17, 4194304), (18, 2097152), (19, 67584), (20, -1), (21, -1), (22, 32768), (23, -1), (24, -1), (25, -1), (26, -1), (27, 524288), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, 524288), (40, 512), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 12 : set()

After reduction : 
 pending  : [27, 39, 3, 19, 16, 22, 15, 18, 14, 17, 40]
 solution : [9, 8, 10, 24, 7]


Solution : [9, 8, 10, 24, 7] has cost 25.


Before backtrack at level 12
 pending : [27, 39, 3, 19, 16, 22, 15, 18, 14, 17, 40]
 solution : [9, 8, 10, 24, 7]

After backtrack at level 12
 pending : [27, 39, 3, 19, 16, 22, 15, 18, 14, 17, 40, 23, 5, 29, 31, 37, 42, 43, 47, 48, 49]
 solution : [9, 8, 10, 24, 7]


Invert decision for 7 at level 11


New level: 12
 pending : [27, 39, 3, 19, 16, 22, 15, 18, 14, 17, 40, 23, 5, 29, 31, 37, 42, 43, 47, 48, 49]
 solution : [9, 8, 10, 24]


Before reduction : 
 pending  : [27, 39, 3, 19, 16, 22, 15, 18, 14, 17, 40, 23, 5, 29, 31, 37, 42, 43, 47, 48, 49]
 solution : [9, 8, 10, 24]

Essensial at level 12 : {23}

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 65536), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 2097152), (15, 1048576), (16, 32768), (17, 4194304), (18, 2097152), (19, 67584), (20, -1), (21, -1), (22, 32768), (23, -1), (24, -1), (25, -1), (26, -1), (27, 524288), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, 524288), (40, 512), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 65536), (4, -1), (5, 0), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 2097152), (15, 1048576), (16, 32768), (17, 4194304), (18, 2097152), (19, 67584), (20, -1), (21, -1), (22, 32768), (23, -1), (24, -1), (25, -1), (26, -1), (27, 524288), (28, -1), (29, 0), (30, -1), (31, 0), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, 0), (38, -1), (39, 524288), (40, 512), (41, -1), (42, 0), (43, 0), (44, -1), (45, -1), (46, -1), (47, 0), (48, 0), (49, 0), (50, -1), (51, -1), (52, -1)]

Covered at level 12 : {37, 5, 42, 43, 47, 48, 49, 29, 31}

After reduction : 
 pending  : [27, 39, 3, 19, 16, 22, 15, 18, 14, 17, 40]
 solution : [9, 8, 10, 24, 23]


Before reduction : 
 pending  : [27, 39, 3, 19, 16, 22, 15, 18, 14, 17, 40]
 solution : [9, 8, 10, 24, 23]

Essensial at level 12 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 65536), (4, -1), (5, 0), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 2097152), (15, 1048576), (16, 32768), (17, 4194304), (18, 2097152), (19, 67584), (20, -1), (21, -1), (22, 32768), (23, -1), (24, -1), (25, -1), (26, -1), (27, 524288), (28, -1), (29, 0), (30, -1), (31, 0), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, 0), (38, -1), (39, 524288), (40, 512), (41, -1), (42, 0), (43, 0), (44, -1), (45, -1), (46, -1), (47, 0), (48, 0), (49, 0), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 65536), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 2097152), (15, 1048576), (16, 32768), (17, 4194304), (18, 2097152), (19, 67584), (20, -1), (21, -1), (22, 32768), (23, -1), (24, -1), (25, -1), (26, -1), (27, 524288), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, 524288), (40, 512), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 12 : set()

After reduction : 
 pending  : [27, 39, 3, 19, 16, 22, 15, 18, 14, 17, 40]
 solution : [9, 8, 10, 24, 23]


Solution : [9, 8, 10, 24, 23] has cost 28.


Before backtrack at level 12
 pending : [27, 39, 3, 19, 16, 22, 15, 18, 14, 17, 40]
 solution : [9, 8, 10, 24, 23]

After backtrack at level 12
 pending : [27, 39, 3, 19, 16, 22, 15, 18, 14, 17, 40, 23, 5, 29, 31, 37, 42, 43, 47, 48, 49]
 solution : [9, 8, 10, 24]


Before backtrack at level 11
 pending : [27, 39, 3, 19, 16, 22, 15, 18, 14, 17, 40, 23, 5, 29, 31, 37, 42, 43, 47, 48, 49]
 solution : [9, 8, 10, 24]

After backtrack at level 11
 pending : [27, 39, 3, 19, 16, 22, 15, 18, 14, 17, 40, 23, 5, 29, 31, 37, 42, 43, 47, 48, 49, 7]
 solution : [9, 8, 10, 24]


Before backtrack at level 10
 pending : [27, 39, 3, 19, 16, 22, 15, 18, 14, 17, 40, 23, 5, 29, 31, 37, 42, 43, 47, 48, 49, 7]
 solution : [9, 8, 10, 24]

After backtrack at level 10
 pending : [27, 39, 3, 19, 16, 22, 15, 18, 14, 17, 40, 23, 5, 29, 31, 37, 42, 43, 47, 48, 49, 7, 41]
 solution : [9, 8, 10, 24]


Before backtrack at level 9
 pending : [27, 39, 3, 19, 16, 22, 15, 18, 14, 17, 40, 23, 5, 29, 31, 37, 42, 43, 47, 48, 49, 7, 41]
 solution : [9, 8, 10, 24]

After backtrack at level 9
 pending : [27, 39, 3, 19, 16, 22, 15, 18, 14, 17, 40, 23, 5, 29, 31, 37, 42, 43, 47, 48, 49, 7, 41, 38]
 solution : [9, 8, 10, 24]


Before backtrack at level 8
 pending : [27, 39, 3, 19, 16, 22, 15, 18, 14, 17, 40, 23, 5, 29, 31, 37, 42, 43, 47, 48, 49, 7, 41, 38]
 solution : [9, 8, 10, 24]

After backtrack at level 8
 pending : [27, 39, 3, 19, 16, 22, 15, 18, 14, 17, 40, 23, 5, 29, 31, 37, 42, 43, 47, 48, 49, 7, 41, 38, 30, 33, 21]
 solution : [9, 8, 10, 24]


Invert decision for 24 at level 7


New level: 8
 pending : [27, 39, 3, 19, 16, 22, 15, 18, 14, 17, 40, 23, 5, 29, 31, 37, 42, 43, 47, 48, 49, 7, 41, 38, 30, 33, 21]
 solution : [9, 8, 10]


Before reduction : 
 pending  : [27, 39, 3, 19, 16, 22, 15, 18, 14, 17, 40, 23, 5, 29, 31, 37, 42, 43, 47, 48, 49, 7, 41, 38, 30, 33, 21]
 solution : [9, 8, 10]

Essensial at level 8 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 65536), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 2097152), (15, 1048576), (16, 32768), (17, 4194304), (18, 2097152), (19, 67584), (20, -1), (21, -1), (22, 32768), (23, -1), (24, -1), (25, -1), (26, -1), (27, 524288), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, 524288), (40, 512), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 131072), (4, -1), (5, 524288), (6, -1), (7, 67108864), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 2097152), (15, 1048576), (16, 65536), (17, 8388608), (18, 4194304), (19, 139264), (20, -1), (21, 134217728), (22, 32768), (23, 67108864), (24, -1), (25, -1), (26, -1), (27, 524288), (28, -1), (29, 524288), (30, 1048576), (31, 8192), (32, -1), (33, 8192), (34, -1), (35, -1), (36, -1), (37, 8192), (38, 33554432), (39, 524288), (40, 134217728), (41, 67108864), (42, 262144), (43, 262144), (44, -1), (45, -1), (46, -1), (47, 33554432), (48, 8388608), (49, 33554432), (50, -1), (51, -1), (52, -1)]

Covered at level 8 : set()

After reduction : 
 pending  : [27, 39, 3, 19, 16, 22, 15, 18, 14, 17, 40, 23, 5, 29, 31, 37, 42, 43, 47, 48, 49, 7, 41, 38, 30, 33, 21]
 solution : [9, 8, 10]


Solution : [9, 8, 10] has cost 14.


Decide in level 8 among pending : [27, 39, 3, 19, 16, 22, 15, 18, 14, 17, 40, 23, 5, 29, 31, 37, 42, 43, 47, 48, 49, 7, 41, 38, 30, 33, 21]

Coverage : [(0, -1), (1, -1), (2, -1), (3, 131072), (4, -1), (5, 524288), (6, -1), (7, 67108864), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 2097152), (15, 1048576), (16, 65536), (17, 8388608), (18, 4194304), (19, 139264), (20, -1), (21, 134217728), (22, 32768), (23, 67108864), (24, -1), (25, -1), (26, -1), (27, 524288), (28, -1), (29, 524288), (30, 1048576), (31, 8192), (32, -1), (33, 8192), (34, -1), (35, -1), (36, -1), (37, 8192), (38, 33554432), (39, 524288), (40, 134217728), (41, 67108864), (42, 262144), (43, 262144), (44, -1), (45, -1), (46, -1), (47, 33554432), (48, 8388608), (49, 33554432), (50, -1), (51, -1), (52, -1)]

Decide 40 with phase True at level 8

After decision at level 8
 pending : [27, 39, 3, 19, 16, 22, 15, 18, 14, 17, 23, 5, 29, 31, 37, 42, 43, 47, 48, 49, 7, 41, 38, 30, 33, 21]
 solution : [9, 8, 10, 40]


New level: 9
 pending : [27, 39, 3, 19, 16, 22, 15, 18, 14, 17, 23, 5, 29, 31, 37, 42, 43, 47, 48, 49, 7, 41, 38, 30, 33, 21]
 solution : [9, 8, 10, 40]


Before reduction : 
 pending  : [27, 39, 3, 19, 16, 22, 15, 18, 14, 17, 23, 5, 29, 31, 37, 42, 43, 47, 48, 49, 7, 41, 38, 30, 33, 21]
 solution : [9, 8, 10, 40]

Essensial at level 9 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 131072), (4, -1), (5, 524288), (6, -1), (7, 67108864), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 2097152), (15, 1048576), (16, 65536), (17, 8388608), (18, 4194304), (19, 139264), (20, -1), (21, 134217728), (22, 32768), (23, 67108864), (24, -1), (25, -1), (26, -1), (27, 524288), (28, -1), (29, 524288), (30, 1048576), (31, 8192), (32, -1), (33, 8192), (34, -1), (35, -1), (36, -1), (37, 8192), (38, 33554432), (39, 524288), (40, 134217728), (41, 67108864), (42, 262144), (43, 262144), (44, -1), (45, -1), (46, -1), (47, 33554432), (48, 8388608), (49, 33554432), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 131072), (4, -1), (5, 524288), (6, -1), (7, 67108864), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 2097152), (15, 1048576), (16, 65536), (17, 8388608), (18, 4194304), (19, 139264), (20, -1), (21, 134217728), (22, 32768), (23, 67108864), (24, -1), (25, -1), (26, -1), (27, 524288), (28, -1), (29, 524288), (30, 524288), (31, 8192), (32, -1), (33, 4096), (34, -1), (35, -1), (36, -1), (37, 8192), (38, 16777216), (39, 524288), (40, -1), (41, 67108864), (42, 262144), (43, 262144), (44, -1), (45, -1), (46, -1), (47, 33554432), (48, 8388608), (49, 33554432), (50, -1), (51, -1), (52, -1)]

Covered at level 9 : set()

After reduction : 
 pending  : [27, 39, 3, 19, 16, 22, 15, 18, 14, 17, 23, 5, 29, 31, 37, 42, 43, 47, 48, 49, 7, 41, 38, 30, 33, 21]
 solution : [9, 8, 10, 40]


Solution : [9, 8, 10, 40] has cost 28.


Before backtrack at level 9
 pending : [27, 39, 3, 19, 16, 22, 15, 18, 14, 17, 23, 5, 29, 31, 37, 42, 43, 47, 48, 49, 7, 41, 38, 30, 33, 21]
 solution : [9, 8, 10, 40]

After backtrack at level 9
 pending : [27, 39, 3, 19, 16, 22, 15, 18, 14, 17, 23, 5, 29, 31, 37, 42, 43, 47, 48, 49, 7, 41, 38, 30, 33, 21]
 solution : [9, 8, 10, 40]


Invert decision for 40 at level 8


New level: 9
 pending : [27, 39, 3, 19, 16, 22, 15, 18, 14, 17, 23, 5, 29, 31, 37, 42, 43, 47, 48, 49, 7, 41, 38, 30, 33, 21]
 solution : [9, 8, 10]


Before reduction : 
 pending  : [27, 39, 3, 19, 16, 22, 15, 18, 14, 17, 23, 5, 29, 31, 37, 42, 43, 47, 48, 49, 7, 41, 38, 30, 33, 21]
 solution : [9, 8, 10]

Essensial at level 9 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 131072), (4, -1), (5, 524288), (6, -1), (7, 67108864), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 2097152), (15, 1048576), (16, 65536), (17, 8388608), (18, 4194304), (19, 139264), (20, -1), (21, 134217728), (22, 32768), (23, 67108864), (24, -1), (25, -1), (26, -1), (27, 524288), (28, -1), (29, 524288), (30, 524288), (31, 8192), (32, -1), (33, 4096), (34, -1), (35, -1), (36, -1), (37, 8192), (38, 16777216), (39, 524288), (40, -1), (41, 67108864), (42, 262144), (43, 262144), (44, -1), (45, -1), (46, -1), (47, 33554432), (48, 8388608), (49, 33554432), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 131072), (4, -1), (5, 524288), (6, -1), (7, 67108864), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 2097152), (15, 1048576), (16, 65536), (17, 8388608), (18, 4194304), (19, 139264), (20, -1), (21, 134217728), (22, 32768), (23, 67108864), (24, -1), (25, -1), (26, -1), (27, 524288), (28, -1), (29, 524288), (30, 1048576), (31, 8192), (32, -1), (33, 8192), (34, -1), (35, -1), (36, -1), (37, 8192), (38, 33554432), (39, 524288), (40, -1), (41, 67108864), (42, 262144), (43, 262144), (44, -1), (45, -1), (46, -1), (47, 33554432), (48, 8388608), (49, 33554432), (50, -1), (51, -1), (52, -1)]

Covered at level 9 : set()

After reduction : 
 pending  : [27, 39, 3, 19, 16, 22, 15, 18, 14, 17, 23, 5, 29, 31, 37, 42, 43, 47, 48, 49, 7, 41, 38, 30, 33, 21]
 solution : [9, 8, 10]


Solution : [9, 8, 10] has cost 14.


Decide in level 9 among pending : [27, 39, 3, 19, 16, 22, 15, 18, 14, 17, 23, 5, 29, 31, 37, 42, 43, 47, 48, 49, 7, 41, 38, 30, 33, 21]

Coverage : [(0, -1), (1, -1), (2, -1), (3, 131072), (4, -1), (5, 524288), (6, -1), (7, 67108864), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 2097152), (15, 1048576), (16, 65536), (17, 8388608), (18, 4194304), (19, 139264), (20, -1), (21, 134217728), (22, 32768), (23, 67108864), (24, -1), (25, -1), (26, -1), (27, 524288), (28, -1), (29, 524288), (30, 1048576), (31, 8192), (32, -1), (33, 8192), (34, -1), (35, -1), (36, -1), (37, 8192), (38, 33554432), (39, 524288), (40, -1), (41, 67108864), (42, 262144), (43, 262144), (44, -1), (45, -1), (46, -1), (47, 33554432), (48, 8388608), (49, 33554432), (50, -1), (51, -1), (52, -1)]

Decide 21 with phase True at level 9

After decision at level 9
 pending : [27, 39, 3, 19, 16, 22, 15, 18, 14, 17, 23, 5, 29, 31, 37, 42, 43, 47, 48, 49, 7, 41, 38, 30, 33]
 solution : [9, 8, 10, 21]


New level: 10
 pending : [27, 39, 3, 19, 16, 22, 15, 18, 14, 17, 23, 5, 29, 31, 37, 42, 43, 47, 48, 49, 7, 41, 38, 30, 33]
 solution : [9, 8, 10, 21]


Before reduction : 
 pending  : [27, 39, 3, 19, 16, 22, 15, 18, 14, 17, 23, 5, 29, 31, 37, 42, 43, 47, 48, 49, 7, 41, 38, 30, 33]
 solution : [9, 8, 10, 21]

Essensial at level 10 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 131072), (4, -1), (5, 524288), (6, -1), (7, 67108864), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 2097152), (15, 1048576), (16, 65536), (17, 8388608), (18, 4194304), (19, 139264), (20, -1), (21, 134217728), (22, 32768), (23, 67108864), (24, -1), (25, -1), (26, -1), (27, 524288), (28, -1), (29, 524288), (30, 1048576), (31, 8192), (32, -1), (33, 8192), (34, -1), (35, -1), (36, -1), (37, 8192), (38, 33554432), (39, 524288), (40, -1), (41, 67108864), (42, 262144), (43, 262144), (44, -1), (45, -1), (46, -1), (47, 33554432), (48, 8388608), (49, 33554432), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 0), (4, -1), (5, 131072), (6, -1), (7, 67108864), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 0), (15, 0), (16, 0), (17, 0), (18, 0), (19, 0), (20, -1), (21, -1), (22, 0), (23, 67108864), (24, -1), (25, -1), (26, -1), (27, 0), (28, -1), (29, 262144), (30, 1048576), (31, 4096), (32, -1), (33, 8192), (34, -1), (35, -1), (36, -1), (37, 2048), (38, 1024), (39, 0), (40, -1), (41, 33554432), (42, 65536), (43, 65536), (44, -1), (45, -1), (46, -1), (47, 33554432), (48, 8388608), (49, 33554432), (50, -1), (51, -1), (52, -1)]

Covered at level 10 : {3, 39, 14, 15, 16, 17, 18, 19, 22, 27}

After reduction : 
 pending  : [23, 5, 29, 31, 37, 42, 43, 47, 48, 49, 7, 41, 38, 30, 33]
 solution : [9, 8, 10, 21]


Before reduction : 
 pending  : [23, 5, 29, 31, 37, 42, 43, 47, 48, 49, 7, 41, 38, 30, 33]
 solution : [9, 8, 10, 21]

Essensial at level 10 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 0), (4, -1), (5, 131072), (6, -1), (7, 67108864), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 0), (15, 0), (16, 0), (17, 0), (18, 0), (19, 0), (20, -1), (21, -1), (22, 0), (23, 67108864), (24, -1), (25, -1), (26, -1), (27, 0), (28, -1), (29, 262144), (30, 1048576), (31, 4096), (32, -1), (33, 8192), (34, -1), (35, -1), (36, -1), (37, 2048), (38, 1024), (39, 0), (40, -1), (41, 33554432), (42, 65536), (43, 65536), (44, -1), (45, -1), (46, -1), (47, 33554432), (48, 8388608), (49, 33554432), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 131072), (6, -1), (7, 67108864), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, 67108864), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, 262144), (30, 1048576), (31, 4096), (32, -1), (33, 8192), (34, -1), (35, -1), (36, -1), (37, 2048), (38, 1024), (39, -1), (40, -1), (41, 33554432), (42, 65536), (43, 65536), (44, -1), (45, -1), (46, -1), (47, 33554432), (48, 8388608), (49, 33554432), (50, -1), (51, -1), (52, -1)]

Covered at level 10 : set()

After reduction : 
 pending  : [23, 5, 29, 31, 37, 42, 43, 47, 48, 49, 7, 41, 38, 30, 33]
 solution : [9, 8, 10, 21]


Solution : [9, 8, 10, 21] has cost 21.


Decide in level 10 among pending : [23, 5, 29, 31, 37, 42, 43, 47, 48, 49, 7, 41, 38, 30, 33]

Coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 131072), (6, -1), (7, 67108864), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, 67108864), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, 262144), (30, 1048576), (31, 4096), (32, -1), (33, 8192), (34, -1), (35, -1), (36, -1), (37, 2048), (38, 1024), (39, -1), (40, -1), (41, 33554432), (42, 65536), (43, 65536), (44, -1), (45, -1), (46, -1), (47, 33554432), (48, 8388608), (49, 33554432), (50, -1), (51, -1), (52, -1)]

Decide 23 with phase True at level 10

After decision at level 10
 pending : [5, 29, 31, 37, 42, 43, 47, 48, 49, 7, 41, 38, 30, 33]
 solution : [9, 8, 10, 21, 23]


New level: 11
 pending : [5, 29, 31, 37, 42, 43, 47, 48, 49, 7, 41, 38, 30, 33]
 solution : [9, 8, 10, 21, 23]


Before reduction : 
 pending  : [5, 29, 31, 37, 42, 43, 47, 48, 49, 7, 41, 38, 30, 33]
 solution : [9, 8, 10, 21, 23]

Essensial at level 11 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 131072), (6, -1), (7, 67108864), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, 67108864), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, 262144), (30, 1048576), (31, 4096), (32, -1), (33, 8192), (34, -1), (35, -1), (36, -1), (37, 2048), (38, 1024), (39, -1), (40, -1), (41, 33554432), (42, 65536), (43, 65536), (44, -1), (45, -1), (46, -1), (47, 33554432), (48, 8388608), (49, 33554432), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 0), (6, -1), (7, 0), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, 0), (30, 0), (31, 0), (32, -1), (33, 0), (34, -1), (35, -1), (36, -1), (37, 0), (38, 0), (39, -1), (40, -1), (41, 0), (42, 0), (43, 0), (44, -1), (45, -1), (46, -1), (47, 0), (48, 0), (49, 0), (50, -1), (51, -1), (52, -1)]

Covered at level 11 : {33, 37, 5, 7, 38, 41, 42, 43, 47, 48, 49, 29, 30, 31}

After reduction : 
 pending  : []
 solution : [9, 8, 10, 21, 23]


Before reduction : 
 pending  : []
 solution : [9, 8, 10, 21, 23]

Essensial at level 11 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 0), (6, -1), (7, 0), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, 0), (30, 0), (31, 0), (32, -1), (33, 0), (34, -1), (35, -1), (36, -1), (37, 0), (38, 0), (39, -1), (40, -1), (41, 0), (42, 0), (43, 0), (44, -1), (45, -1), (46, -1), (47, 0), (48, 0), (49, 0), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 11 : set()

After reduction : 
 pending  : []
 solution : [9, 8, 10, 21, 23]


Solution : [9, 8, 10, 21, 23] has cost 28.


Before backtrack at level 11
 pending : []
 solution : [9, 8, 10, 21, 23]

After backtrack at level 11
 pending : [5, 29, 31, 37, 42, 43, 47, 48, 49, 7, 41, 38, 30, 33]
 solution : [9, 8, 10, 21, 23]


Invert decision for 23 at level 10


New level: 11
 pending : [5, 29, 31, 37, 42, 43, 47, 48, 49, 7, 41, 38, 30, 33]
 solution : [9, 8, 10, 21]


Before reduction : 
 pending  : [5, 29, 31, 37, 42, 43, 47, 48, 49, 7, 41, 38, 30, 33]
 solution : [9, 8, 10, 21]

Essensial at level 11 : {7}

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 0), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, 0), (30, 0), (31, 0), (32, -1), (33, 0), (34, -1), (35, -1), (36, -1), (37, 0), (38, 0), (39, -1), (40, -1), (41, 0), (42, 0), (43, 0), (44, -1), (45, -1), (46, -1), (47, 0), (48, 0), (49, 0), (50, -1), (51, -1), (52, -1)]

Covered at level 11 : {33, 37, 5, 38, 41, 42, 43, 47, 48, 49, 29, 30, 31}

After reduction : 
 pending  : []
 solution : [9, 8, 10, 21, 7]


Before reduction : 
 pending  : []
 solution : [9, 8, 10, 21, 7]

Essensial at level 11 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 0), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, 0), (30, 0), (31, 0), (32, -1), (33, 0), (34, -1), (35, -1), (36, -1), (37, 0), (38, 0), (39, -1), (40, -1), (41, 0), (42, 0), (43, 0), (44, -1), (45, -1), (46, -1), (47, 0), (48, 0), (49, 0), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 11 : set()

After reduction : 
 pending  : []
 solution : [9, 8, 10, 21, 7]


Solution : [9, 8, 10, 21, 7] has cost 25.


Before backtrack at level 11
 pending : []
 solution : [9, 8, 10, 21, 7]

After backtrack at level 11
 pending : [7, 5, 29, 31, 37, 42, 43, 47, 48, 49, 41, 38, 30, 33]
 solution : [9, 8, 10, 21]


Before backtrack at level 10
 pending : [7, 5, 29, 31, 37, 42, 43, 47, 48, 49, 41, 38, 30, 33]
 solution : [9, 8, 10, 21]

After backtrack at level 10
 pending : [7, 5, 29, 31, 37, 42, 43, 47, 48, 49, 41, 38, 30, 33, 27, 39, 3, 19, 16, 22, 15, 18, 14, 17, 23]
 solution : [9, 8, 10, 21]


Invert decision for 21 at level 9


New level: 10
 pending : [7, 5, 29, 31, 37, 42, 43, 47, 48, 49, 41, 38, 30, 33, 27, 39, 3, 19, 16, 22, 15, 18, 14, 17, 23]
 solution : [9, 8, 10]


Before reduction : 
 pending  : [7, 5, 29, 31, 37, 42, 43, 47, 48, 49, 41, 38, 30, 33, 27, 39, 3, 19, 16, 22, 15, 18, 14, 17, 23]
 solution : [9, 8, 10]

Essensial at level 10 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 131072), (4, -1), (5, 524288), (6, -1), (7, 67108864), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 2097152), (15, 1048576), (16, 65536), (17, 8388608), (18, 4194304), (19, 139264), (20, -1), (21, -1), (22, 32768), (23, 67108864), (24, -1), (25, -1), (26, -1), (27, 524288), (28, -1), (29, 524288), (30, 1048576), (31, 8192), (32, -1), (33, 8192), (34, -1), (35, -1), (36, -1), (37, 8192), (38, 33554432), (39, 524288), (40, -1), (41, 67108864), (42, 262144), (43, 262144), (44, -1), (45, -1), (46, -1), (47, 33554432), (48, 8388608), (49, 33554432), (50, -1), (51, -1), (52, -1)]

Covered at level 10 : set()

After reduction : 
 pending  : [7, 5, 29, 31, 37, 42, 43, 47, 48, 49, 41, 38, 30, 33, 27, 39, 3, 19, 16, 22, 15, 18, 14, 17, 23]
 solution : [9, 8, 10]


Solution : [9, 8, 10] has cost 14.


Decide in level 10 among pending : [7, 5, 29, 31, 37, 42, 43, 47, 48, 49, 41, 38, 30, 33, 27, 39, 3, 19, 16, 22, 15, 18, 14, 17, 23]

Coverage : [(0, -1), (1, -1), (2, -1), (3, 131072), (4, -1), (5, 524288), (6, -1), (7, 67108864), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 2097152), (15, 1048576), (16, 65536), (17, 8388608), (18, 4194304), (19, 139264), (20, -1), (21, -1), (22, 32768), (23, 67108864), (24, -1), (25, -1), (26, -1), (27, 524288), (28, -1), (29, 524288), (30, 1048576), (31, 8192), (32, -1), (33, 8192), (34, -1), (35, -1), (36, -1), (37, 8192), (38, 33554432), (39, 524288), (40, -1), (41, 67108864), (42, 262144), (43, 262144), (44, -1), (45, -1), (46, -1), (47, 33554432), (48, 8388608), (49, 33554432), (50, -1), (51, -1), (52, -1)]

Decide 7 with phase True at level 10

After decision at level 10
 pending : [5, 29, 31, 37, 42, 43, 47, 48, 49, 41, 38, 30, 33, 27, 39, 3, 19, 16, 22, 15, 18, 14, 17, 23]
 solution : [9, 8, 10, 7]


New level: 11
 pending : [5, 29, 31, 37, 42, 43, 47, 48, 49, 41, 38, 30, 33, 27, 39, 3, 19, 16, 22, 15, 18, 14, 17, 23]
 solution : [9, 8, 10, 7]


Before reduction : 
 pending  : [5, 29, 31, 37, 42, 43, 47, 48, 49, 41, 38, 30, 33, 27, 39, 3, 19, 16, 22, 15, 18, 14, 17, 23]
 solution : [9, 8, 10, 7]

Essensial at level 11 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 131072), (4, -1), (5, 524288), (6, -1), (7, 67108864), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 2097152), (15, 1048576), (16, 65536), (17, 8388608), (18, 4194304), (19, 139264), (20, -1), (21, -1), (22, 32768), (23, 67108864), (24, -1), (25, -1), (26, -1), (27, 524288), (28, -1), (29, 524288), (30, 1048576), (31, 8192), (32, -1), (33, 8192), (34, -1), (35, -1), (36, -1), (37, 8192), (38, 33554432), (39, 524288), (40, -1), (41, 67108864), (42, 262144), (43, 262144), (44, -1), (45, -1), (46, -1), (47, 33554432), (48, 8388608), (49, 33554432), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 65536), (4, -1), (5, 0), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 2097152), (15, 1048576), (16, 32768), (17, 4194304), (18, 2097152), (19, 67584), (20, -1), (21, -1), (22, 32768), (23, 0), (24, -1), (25, -1), (26, -1), (27, 524288), (28, -1), (29, 0), (30, 0), (31, 0), (32, -1), (33, 0), (34, -1), (35, -1), (36, -1), (37, 0), (38, 32768), (39, 524288), (40, -1), (41, 0), (42, 0), (43, 0), (44, -1), (45, -1), (46, -1), (47, 0), (48, 0), (49, 0), (50, -1), (51, -1), (52, -1)]

Covered at level 11 : {33, 37, 5, 41, 42, 43, 47, 48, 49, 23, 29, 30, 31}

After reduction : 
 pending  : [38, 27, 39, 3, 19, 16, 22, 15, 18, 14, 17]
 solution : [9, 8, 10, 7]


Before reduction : 
 pending  : [38, 27, 39, 3, 19, 16, 22, 15, 18, 14, 17]
 solution : [9, 8, 10, 7]

Essensial at level 11 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 65536), (4, -1), (5, 0), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 2097152), (15, 1048576), (16, 32768), (17, 4194304), (18, 2097152), (19, 67584), (20, -1), (21, -1), (22, 32768), (23, 0), (24, -1), (25, -1), (26, -1), (27, 524288), (28, -1), (29, 0), (30, 0), (31, 0), (32, -1), (33, 0), (34, -1), (35, -1), (36, -1), (37, 0), (38, 32768), (39, 524288), (40, -1), (41, 0), (42, 0), (43, 0), (44, -1), (45, -1), (46, -1), (47, 0), (48, 0), (49, 0), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 65536), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 2097152), (15, 1048576), (16, 32768), (17, 4194304), (18, 2097152), (19, 67584), (20, -1), (21, -1), (22, 32768), (23, -1), (24, -1), (25, -1), (26, -1), (27, 524288), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, 32768), (39, 524288), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 11 : set()

After reduction : 
 pending  : [38, 27, 39, 3, 19, 16, 22, 15, 18, 14, 17]
 solution : [9, 8, 10, 7]


Solution : [9, 8, 10, 7] has cost 18.


Decide in level 11 among pending : [38, 27, 39, 3, 19, 16, 22, 15, 18, 14, 17]

Coverage : [(0, -1), (1, -1), (2, -1), (3, 65536), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 2097152), (15, 1048576), (16, 32768), (17, 4194304), (18, 2097152), (19, 67584), (20, -1), (21, -1), (22, 32768), (23, -1), (24, -1), (25, -1), (26, -1), (27, 524288), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, 32768), (39, 524288), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Decide 17 with phase True at level 11

After decision at level 11
 pending : [38, 27, 39, 3, 19, 16, 22, 15, 18, 14]
 solution : [9, 8, 10, 7, 17]


New level: 12
 pending : [38, 27, 39, 3, 19, 16, 22, 15, 18, 14]
 solution : [9, 8, 10, 7, 17]


Before reduction : 
 pending  : [38, 27, 39, 3, 19, 16, 22, 15, 18, 14]
 solution : [9, 8, 10, 7, 17]

Essensial at level 12 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 65536), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 2097152), (15, 1048576), (16, 32768), (17, 4194304), (18, 2097152), (19, 67584), (20, -1), (21, -1), (22, 32768), (23, -1), (24, -1), (25, -1), (26, -1), (27, 524288), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, 32768), (39, 524288), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 0), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 32768), (15, 8192), (16, 0), (17, -1), (18, 0), (19, 0), (20, -1), (21, -1), (22, 8192), (23, -1), (24, -1), (25, -1), (26, -1), (27, 2048), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, 1024), (39, 2048), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 12 : {19, 16, 18, 3}

After reduction : 
 pending  : [38, 27, 39, 22, 15, 14]
 solution : [9, 8, 10, 7, 17]


Before reduction : 
 pending  : [38, 27, 39, 22, 15, 14]
 solution : [9, 8, 10, 7, 17]

Essensial at level 12 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 0), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 32768), (15, 8192), (16, 0), (17, -1), (18, 0), (19, 0), (20, -1), (21, -1), (22, 8192), (23, -1), (24, -1), (25, -1), (26, -1), (27, 2048), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, 1024), (39, 2048), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 32768), (15, 8192), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, 8192), (23, -1), (24, -1), (25, -1), (26, -1), (27, 2048), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, 1024), (39, 2048), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 12 : set()

After reduction : 
 pending  : [38, 27, 39, 22, 15, 14]
 solution : [9, 8, 10, 7, 17]


Solution : [9, 8, 10, 7, 17] has cost 27.


Before backtrack at level 12
 pending : [38, 27, 39, 22, 15, 14]
 solution : [9, 8, 10, 7, 17]

After backtrack at level 12
 pending : [38, 27, 39, 22, 15, 14, 3, 19, 16, 18]
 solution : [9, 8, 10, 7, 17]


Invert decision for 17 at level 11


New level: 12
 pending : [38, 27, 39, 22, 15, 14, 3, 19, 16, 18]
 solution : [9, 8, 10, 7]


Before reduction : 
 pending  : [38, 27, 39, 22, 15, 14, 3, 19, 16, 18]
 solution : [9, 8, 10, 7]

Essensial at level 12 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 32768), (15, 8192), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, 8192), (23, -1), (24, -1), (25, -1), (26, -1), (27, 2048), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, 1024), (39, 2048), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 65536), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 2097152), (15, 1048576), (16, 32768), (17, -1), (18, 2097152), (19, 67584), (20, -1), (21, -1), (22, 32768), (23, -1), (24, -1), (25, -1), (26, -1), (27, 524288), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, 32768), (39, 524288), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 12 : set()

After reduction : 
 pending  : [38, 27, 39, 22, 15, 14, 3, 19, 16, 18]
 solution : [9, 8, 10, 7]


Solution : [9, 8, 10, 7] has cost 18.


Decide in level 12 among pending : [38, 27, 39, 22, 15, 14, 3, 19, 16, 18]

Coverage : [(0, -1), (1, -1), (2, -1), (3, 65536), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 2097152), (15, 1048576), (16, 32768), (17, -1), (18, 2097152), (19, 67584), (20, -1), (21, -1), (22, 32768), (23, -1), (24, -1), (25, -1), (26, -1), (27, 524288), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, 32768), (39, 524288), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Decide 14 with phase True at level 12

After decision at level 12
 pending : [38, 27, 39, 22, 15, 3, 19, 16, 18]
 solution : [9, 8, 10, 7, 14]


New level: 13
 pending : [38, 27, 39, 22, 15, 3, 19, 16, 18]
 solution : [9, 8, 10, 7, 14]


Before reduction : 
 pending  : [38, 27, 39, 22, 15, 3, 19, 16, 18]
 solution : [9, 8, 10, 7, 14]

Essensial at level 13 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 65536), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 2097152), (15, 1048576), (16, 32768), (17, -1), (18, 2097152), (19, 67584), (20, -1), (21, -1), (22, 32768), (23, -1), (24, -1), (25, -1), (26, -1), (27, 524288), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, 32768), (39, 524288), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 32768), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, 0), (16, 0), (17, -1), (18, 524288), (19, 33280), (20, -1), (21, -1), (22, 0), (23, -1), (24, -1), (25, -1), (26, -1), (27, 131072), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, 512), (39, 131072), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 13 : {16, 22, 15}

After reduction : 
 pending  : [38, 27, 39, 3, 19, 18]
 solution : [9, 8, 10, 7, 14]


Before reduction : 
 pending  : [38, 27, 39, 3, 19, 18]
 solution : [9, 8, 10, 7, 14]

Essensial at level 13 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 32768), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, 0), (16, 0), (17, -1), (18, 524288), (19, 33280), (20, -1), (21, -1), (22, 0), (23, -1), (24, -1), (25, -1), (26, -1), (27, 131072), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, 512), (39, 131072), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 32768), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, 524288), (19, 33280), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, 131072), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, 512), (39, 131072), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 13 : set()

After reduction : 
 pending  : [38, 27, 39, 3, 19, 18]
 solution : [9, 8, 10, 7, 14]


Solution : [9, 8, 10, 7, 14] has cost 25.


Before backtrack at level 13
 pending : [38, 27, 39, 3, 19, 18]
 solution : [9, 8, 10, 7, 14]

After backtrack at level 13
 pending : [38, 27, 39, 3, 19, 18, 22, 15, 16]
 solution : [9, 8, 10, 7, 14]


Invert decision for 14 at level 12


New level: 13
 pending : [38, 27, 39, 3, 19, 18, 22, 15, 16]
 solution : [9, 8, 10, 7]


Before reduction : 
 pending  : [38, 27, 39, 3, 19, 18, 22, 15, 16]
 solution : [9, 8, 10, 7]

Essensial at level 13 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 32768), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, 524288), (19, 33280), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, 131072), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, 512), (39, 131072), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 65536), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, 1048576), (16, 32768), (17, -1), (18, 2097152), (19, 67584), (20, -1), (21, -1), (22, 32768), (23, -1), (24, -1), (25, -1), (26, -1), (27, 524288), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, 32768), (39, 524288), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 13 : set()

After reduction : 
 pending  : [38, 27, 39, 3, 19, 18, 22, 15, 16]
 solution : [9, 8, 10, 7]


Solution : [9, 8, 10, 7] has cost 18.


Decide in level 13 among pending : [38, 27, 39, 3, 19, 18, 22, 15, 16]

Coverage : [(0, -1), (1, -1), (2, -1), (3, 65536), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, 1048576), (16, 32768), (17, -1), (18, 2097152), (19, 67584), (20, -1), (21, -1), (22, 32768), (23, -1), (24, -1), (25, -1), (26, -1), (27, 524288), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, 32768), (39, 524288), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Decide 18 with phase True at level 13

After decision at level 13
 pending : [38, 27, 39, 3, 19, 22, 15, 16]
 solution : [9, 8, 10, 7, 18]


New level: 14
 pending : [38, 27, 39, 3, 19, 22, 15, 16]
 solution : [9, 8, 10, 7, 18]


Before reduction : 
 pending  : [38, 27, 39, 3, 19, 22, 15, 16]
 solution : [9, 8, 10, 7, 18]

Essensial at level 14 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 65536), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, 1048576), (16, 32768), (17, -1), (18, 2097152), (19, 67584), (20, -1), (21, -1), (22, 32768), (23, -1), (24, -1), (25, -1), (26, -1), (27, 524288), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, 32768), (39, 524288), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 0), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, 8192), (16, 0), (17, -1), (18, -1), (19, 0), (20, -1), (21, -1), (22, 8192), (23, -1), (24, -1), (25, -1), (26, -1), (27, 2048), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, 1024), (39, 2048), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 14 : {19, 16, 3}

After reduction : 
 pending  : [38, 27, 39, 22, 15]
 solution : [9, 8, 10, 7, 18]


Before reduction : 
 pending  : [38, 27, 39, 22, 15]
 solution : [9, 8, 10, 7, 18]

Essensial at level 14 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 0), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, 8192), (16, 0), (17, -1), (18, -1), (19, 0), (20, -1), (21, -1), (22, 8192), (23, -1), (24, -1), (25, -1), (26, -1), (27, 2048), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, 1024), (39, 2048), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, 8192), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, 8192), (23, -1), (24, -1), (25, -1), (26, -1), (27, 2048), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, 1024), (39, 2048), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 14 : set()

After reduction : 
 pending  : [38, 27, 39, 22, 15]
 solution : [9, 8, 10, 7, 18]


Solution : [9, 8, 10, 7, 18] has cost 27.


Before backtrack at level 14
 pending : [38, 27, 39, 22, 15]
 solution : [9, 8, 10, 7, 18]

After backtrack at level 14
 pending : [38, 27, 39, 22, 15, 3, 19, 16]
 solution : [9, 8, 10, 7, 18]


Invert decision for 18 at level 13


New level: 14
 pending : [38, 27, 39, 22, 15, 3, 19, 16]
 solution : [9, 8, 10, 7]


Before reduction : 
 pending  : [38, 27, 39, 22, 15, 3, 19, 16]
 solution : [9, 8, 10, 7]

Essensial at level 14 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, 8192), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, 8192), (23, -1), (24, -1), (25, -1), (26, -1), (27, 2048), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, 1024), (39, 2048), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 65536), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, 1048576), (16, 32768), (17, -1), (18, -1), (19, 67584), (20, -1), (21, -1), (22, 32768), (23, -1), (24, -1), (25, -1), (26, -1), (27, 524288), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, 32768), (39, 524288), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 14 : set()

After reduction : 
 pending  : [38, 27, 39, 22, 15, 3, 19, 16]
 solution : [9, 8, 10, 7]


Solution : [9, 8, 10, 7] has cost 18.


Decide in level 14 among pending : [38, 27, 39, 22, 15, 3, 19, 16]

Coverage : [(0, -1), (1, -1), (2, -1), (3, 65536), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, 1048576), (16, 32768), (17, -1), (18, -1), (19, 67584), (20, -1), (21, -1), (22, 32768), (23, -1), (24, -1), (25, -1), (26, -1), (27, 524288), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, 32768), (39, 524288), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Decide 15 with phase True at level 14

After decision at level 14
 pending : [38, 27, 39, 22, 3, 19, 16]
 solution : [9, 8, 10, 7, 15]


New level: 15
 pending : [38, 27, 39, 22, 3, 19, 16]
 solution : [9, 8, 10, 7, 15]


Before reduction : 
 pending  : [38, 27, 39, 22, 3, 19, 16]
 solution : [9, 8, 10, 7, 15]

Essensial at level 15 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 65536), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, 1048576), (16, 32768), (17, -1), (18, -1), (19, 67584), (20, -1), (21, -1), (22, 32768), (23, -1), (24, -1), (25, -1), (26, -1), (27, 524288), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, 32768), (39, 524288), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 32768), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, 0), (17, -1), (18, -1), (19, 33280), (20, -1), (21, -1), (22, 0), (23, -1), (24, -1), (25, -1), (26, -1), (27, 131072), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, 512), (39, 131072), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 15 : {16, 22}

After reduction : 
 pending  : [38, 27, 39, 3, 19]
 solution : [9, 8, 10, 7, 15]


Before reduction : 
 pending  : [38, 27, 39, 3, 19]
 solution : [9, 8, 10, 7, 15]

Essensial at level 15 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 32768), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, 0), (17, -1), (18, -1), (19, 33280), (20, -1), (21, -1), (22, 0), (23, -1), (24, -1), (25, -1), (26, -1), (27, 131072), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, 512), (39, 131072), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 32768), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, 33280), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, 131072), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, 512), (39, 131072), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 15 : set()

After reduction : 
 pending  : [38, 27, 39, 3, 19]
 solution : [9, 8, 10, 7, 15]


Solution : [9, 8, 10, 7, 15] has cost 25.


Before backtrack at level 15
 pending : [38, 27, 39, 3, 19]
 solution : [9, 8, 10, 7, 15]

After backtrack at level 15
 pending : [38, 27, 39, 3, 19, 22, 16]
 solution : [9, 8, 10, 7, 15]


Invert decision for 15 at level 14


New level: 15
 pending : [38, 27, 39, 3, 19, 22, 16]
 solution : [9, 8, 10, 7]


Before reduction : 
 pending  : [38, 27, 39, 3, 19, 22, 16]
 solution : [9, 8, 10, 7]

Essensial at level 15 : {22}

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 32768), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, 33280), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, 131072), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, 512), (39, 131072), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 65536), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, 16384), (17, -1), (18, -1), (19, 67584), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, 524288), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, 32768), (39, 524288), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 15 : set()

After reduction : 
 pending  : [38, 27, 39, 3, 19, 16]
 solution : [9, 8, 10, 7, 22]


Before reduction : 
 pending  : [38, 27, 39, 3, 19, 16]
 solution : [9, 8, 10, 7, 22]

Essensial at level 15 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 65536), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, 16384), (17, -1), (18, -1), (19, 67584), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, 524288), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, 32768), (39, 524288), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 65536), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, 16384), (17, -1), (18, -1), (19, 67584), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, 524288), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, 32768), (39, 524288), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 15 : set()

After reduction : 
 pending  : [38, 27, 39, 3, 19, 16]
 solution : [9, 8, 10, 7, 22]


Solution : [9, 8, 10, 7, 22] has cost 25.


Before backtrack at level 15
 pending : [38, 27, 39, 3, 19, 16]
 solution : [9, 8, 10, 7, 22]

After backtrack at level 15
 pending : [38, 27, 39, 3, 19, 16, 22]
 solution : [9, 8, 10, 7]


Before backtrack at level 14
 pending : [38, 27, 39, 3, 19, 16, 22]
 solution : [9, 8, 10, 7]

After backtrack at level 14
 pending : [38, 27, 39, 3, 19, 16, 22, 15]
 solution : [9, 8, 10, 7]


Before backtrack at level 13
 pending : [38, 27, 39, 3, 19, 16, 22, 15]
 solution : [9, 8, 10, 7]

After backtrack at level 13
 pending : [38, 27, 39, 3, 19, 16, 22, 15, 18]
 solution : [9, 8, 10, 7]


Before backtrack at level 12
 pending : [38, 27, 39, 3, 19, 16, 22, 15, 18]
 solution : [9, 8, 10, 7]

After backtrack at level 12
 pending : [38, 27, 39, 3, 19, 16, 22, 15, 18, 14]
 solution : [9, 8, 10, 7]


Before backtrack at level 11
 pending : [38, 27, 39, 3, 19, 16, 22, 15, 18, 14]
 solution : [9, 8, 10, 7]

After backtrack at level 11
 pending : [38, 27, 39, 3, 19, 16, 22, 15, 18, 14, 5, 29, 31, 37, 42, 43, 47, 48, 49, 41, 30, 33, 23, 17]
 solution : [9, 8, 10, 7]


Invert decision for 7 at level 10


New level: 11
 pending : [38, 27, 39, 3, 19, 16, 22, 15, 18, 14, 5, 29, 31, 37, 42, 43, 47, 48, 49, 41, 30, 33, 23, 17]
 solution : [9, 8, 10]


Before reduction : 
 pending  : [38, 27, 39, 3, 19, 16, 22, 15, 18, 14, 5, 29, 31, 37, 42, 43, 47, 48, 49, 41, 30, 33, 23, 17]
 solution : [9, 8, 10]

Essensial at level 11 : {23}

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 65536), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, 16384), (17, -1), (18, -1), (19, 67584), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, 524288), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, 32768), (39, 524288), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 65536), (4, -1), (5, 0), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 2097152), (15, 1048576), (16, 32768), (17, 4194304), (18, 2097152), (19, 67584), (20, -1), (21, -1), (22, 32768), (23, -1), (24, -1), (25, -1), (26, -1), (27, 524288), (28, -1), (29, 0), (30, 0), (31, 0), (32, -1), (33, 0), (34, -1), (35, -1), (36, -1), (37, 0), (38, 262144), (39, 524288), (40, -1), (41, 0), (42, 0), (43, 0), (44, -1), (45, -1), (46, -1), (47, 0), (48, 0), (49, 0), (50, -1), (51, -1), (52, -1)]

Covered at level 11 : {33, 37, 5, 41, 42, 43, 47, 48, 49, 29, 30, 31}

After reduction : 
 pending  : [38, 27, 39, 3, 19, 16, 22, 15, 18, 14, 17]
 solution : [9, 8, 10, 23]


Before reduction : 
 pending  : [38, 27, 39, 3, 19, 16, 22, 15, 18, 14, 17]
 solution : [9, 8, 10, 23]

Essensial at level 11 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 65536), (4, -1), (5, 0), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 2097152), (15, 1048576), (16, 32768), (17, 4194304), (18, 2097152), (19, 67584), (20, -1), (21, -1), (22, 32768), (23, -1), (24, -1), (25, -1), (26, -1), (27, 524288), (28, -1), (29, 0), (30, 0), (31, 0), (32, -1), (33, 0), (34, -1), (35, -1), (36, -1), (37, 0), (38, 262144), (39, 524288), (40, -1), (41, 0), (42, 0), (43, 0), (44, -1), (45, -1), (46, -1), (47, 0), (48, 0), (49, 0), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 65536), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 2097152), (15, 1048576), (16, 32768), (17, 4194304), (18, 2097152), (19, 67584), (20, -1), (21, -1), (22, 32768), (23, -1), (24, -1), (25, -1), (26, -1), (27, 524288), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, 262144), (39, 524288), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 11 : set()

After reduction : 
 pending  : [38, 27, 39, 3, 19, 16, 22, 15, 18, 14, 17]
 solution : [9, 8, 10, 23]


Solution : [9, 8, 10, 23] has cost 21.


Decide in level 11 among pending : [38, 27, 39, 3, 19, 16, 22, 15, 18, 14, 17]

Coverage : [(0, -1), (1, -1), (2, -1), (3, 65536), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 2097152), (15, 1048576), (16, 32768), (17, 4194304), (18, 2097152), (19, 67584), (20, -1), (21, -1), (22, 32768), (23, -1), (24, -1), (25, -1), (26, -1), (27, 524288), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, 262144), (39, 524288), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Decide 17 with phase True at level 11

After decision at level 11
 pending : [38, 27, 39, 3, 19, 16, 22, 15, 18, 14]
 solution : [9, 8, 10, 23, 17]


New level: 12
 pending : [38, 27, 39, 3, 19, 16, 22, 15, 18, 14]
 solution : [9, 8, 10, 23, 17]


Before reduction : 
 pending  : [38, 27, 39, 3, 19, 16, 22, 15, 18, 14]
 solution : [9, 8, 10, 23, 17]

Essensial at level 12 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 65536), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 2097152), (15, 1048576), (16, 32768), (17, 4194304), (18, 2097152), (19, 67584), (20, -1), (21, -1), (22, 32768), (23, -1), (24, -1), (25, -1), (26, -1), (27, 524288), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, 262144), (39, 524288), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 0), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 32768), (15, 8192), (16, 0), (17, -1), (18, 0), (19, 0), (20, -1), (21, -1), (22, 8192), (23, -1), (24, -1), (25, -1), (26, -1), (27, 2048), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, 1024), (39, 2048), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 12 : {19, 16, 18, 3}

After reduction : 
 pending  : [38, 27, 39, 22, 15, 14]
 solution : [9, 8, 10, 23, 17]


Before reduction : 
 pending  : [38, 27, 39, 22, 15, 14]
 solution : [9, 8, 10, 23, 17]

Essensial at level 12 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 0), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 32768), (15, 8192), (16, 0), (17, -1), (18, 0), (19, 0), (20, -1), (21, -1), (22, 8192), (23, -1), (24, -1), (25, -1), (26, -1), (27, 2048), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, 1024), (39, 2048), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 32768), (15, 8192), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, 8192), (23, -1), (24, -1), (25, -1), (26, -1), (27, 2048), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, 1024), (39, 2048), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 12 : set()

After reduction : 
 pending  : [38, 27, 39, 22, 15, 14]
 solution : [9, 8, 10, 23, 17]


Solution : [9, 8, 10, 23, 17] has cost 30.


Before backtrack at level 12
 pending : [38, 27, 39, 22, 15, 14]
 solution : [9, 8, 10, 23, 17]

After backtrack at level 12
 pending : [38, 27, 39, 22, 15, 14, 3, 19, 16, 18]
 solution : [9, 8, 10, 23, 17]


Invert decision for 17 at level 11


New level: 12
 pending : [38, 27, 39, 22, 15, 14, 3, 19, 16, 18]
 solution : [9, 8, 10, 23]


Before reduction : 
 pending  : [38, 27, 39, 22, 15, 14, 3, 19, 16, 18]
 solution : [9, 8, 10, 23]

Essensial at level 12 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 32768), (15, 8192), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, 8192), (23, -1), (24, -1), (25, -1), (26, -1), (27, 2048), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, 1024), (39, 2048), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 65536), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 2097152), (15, 1048576), (16, 32768), (17, -1), (18, 2097152), (19, 67584), (20, -1), (21, -1), (22, 32768), (23, -1), (24, -1), (25, -1), (26, -1), (27, 524288), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, 262144), (39, 524288), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 12 : set()

After reduction : 
 pending  : [38, 27, 39, 22, 15, 14, 3, 19, 16, 18]
 solution : [9, 8, 10, 23]


Solution : [9, 8, 10, 23] has cost 21.


Decide in level 12 among pending : [38, 27, 39, 22, 15, 14, 3, 19, 16, 18]

Coverage : [(0, -1), (1, -1), (2, -1), (3, 65536), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 2097152), (15, 1048576), (16, 32768), (17, -1), (18, 2097152), (19, 67584), (20, -1), (21, -1), (22, 32768), (23, -1), (24, -1), (25, -1), (26, -1), (27, 524288), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, 262144), (39, 524288), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Decide 14 with phase True at level 12

After decision at level 12
 pending : [38, 27, 39, 22, 15, 3, 19, 16, 18]
 solution : [9, 8, 10, 23, 14]


New level: 13
 pending : [38, 27, 39, 22, 15, 3, 19, 16, 18]
 solution : [9, 8, 10, 23, 14]


Before reduction : 
 pending  : [38, 27, 39, 22, 15, 3, 19, 16, 18]
 solution : [9, 8, 10, 23, 14]

Essensial at level 13 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 65536), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 2097152), (15, 1048576), (16, 32768), (17, -1), (18, 2097152), (19, 67584), (20, -1), (21, -1), (22, 32768), (23, -1), (24, -1), (25, -1), (26, -1), (27, 524288), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, 262144), (39, 524288), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 32768), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, 0), (16, 0), (17, -1), (18, 524288), (19, 33280), (20, -1), (21, -1), (22, 0), (23, -1), (24, -1), (25, -1), (26, -1), (27, 131072), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, 512), (39, 131072), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 13 : {16, 22, 15}

After reduction : 
 pending  : [38, 27, 39, 3, 19, 18]
 solution : [9, 8, 10, 23, 14]


Before reduction : 
 pending  : [38, 27, 39, 3, 19, 18]
 solution : [9, 8, 10, 23, 14]

Essensial at level 13 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 32768), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, 0), (16, 0), (17, -1), (18, 524288), (19, 33280), (20, -1), (21, -1), (22, 0), (23, -1), (24, -1), (25, -1), (26, -1), (27, 131072), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, 512), (39, 131072), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 32768), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, 524288), (19, 33280), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, 131072), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, 512), (39, 131072), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 13 : set()

After reduction : 
 pending  : [38, 27, 39, 3, 19, 18]
 solution : [9, 8, 10, 23, 14]


Solution : [9, 8, 10, 23, 14] has cost 28.


Before backtrack at level 13
 pending : [38, 27, 39, 3, 19, 18]
 solution : [9, 8, 10, 23, 14]

After backtrack at level 13
 pending : [38, 27, 39, 3, 19, 18, 22, 15, 16]
 solution : [9, 8, 10, 23, 14]


Invert decision for 14 at level 12


New level: 13
 pending : [38, 27, 39, 3, 19, 18, 22, 15, 16]
 solution : [9, 8, 10, 23]


Before reduction : 
 pending  : [38, 27, 39, 3, 19, 18, 22, 15, 16]
 solution : [9, 8, 10, 23]

Essensial at level 13 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 32768), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, 524288), (19, 33280), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, 131072), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, 512), (39, 131072), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 65536), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, 1048576), (16, 32768), (17, -1), (18, 2097152), (19, 67584), (20, -1), (21, -1), (22, 32768), (23, -1), (24, -1), (25, -1), (26, -1), (27, 524288), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, 262144), (39, 524288), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 13 : set()

After reduction : 
 pending  : [38, 27, 39, 3, 19, 18, 22, 15, 16]
 solution : [9, 8, 10, 23]


Solution : [9, 8, 10, 23] has cost 21.


Decide in level 13 among pending : [38, 27, 39, 3, 19, 18, 22, 15, 16]

Coverage : [(0, -1), (1, -1), (2, -1), (3, 65536), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, 1048576), (16, 32768), (17, -1), (18, 2097152), (19, 67584), (20, -1), (21, -1), (22, 32768), (23, -1), (24, -1), (25, -1), (26, -1), (27, 524288), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, 262144), (39, 524288), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Decide 18 with phase True at level 13

After decision at level 13
 pending : [38, 27, 39, 3, 19, 22, 15, 16]
 solution : [9, 8, 10, 23, 18]


New level: 14
 pending : [38, 27, 39, 3, 19, 22, 15, 16]
 solution : [9, 8, 10, 23, 18]


Before reduction : 
 pending  : [38, 27, 39, 3, 19, 22, 15, 16]
 solution : [9, 8, 10, 23, 18]

Essensial at level 14 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 65536), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, 1048576), (16, 32768), (17, -1), (18, 2097152), (19, 67584), (20, -1), (21, -1), (22, 32768), (23, -1), (24, -1), (25, -1), (26, -1), (27, 524288), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, 262144), (39, 524288), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 0), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, 8192), (16, 0), (17, -1), (18, -1), (19, 0), (20, -1), (21, -1), (22, 8192), (23, -1), (24, -1), (25, -1), (26, -1), (27, 2048), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, 1024), (39, 2048), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 14 : {19, 16, 3}

After reduction : 
 pending  : [38, 27, 39, 22, 15]
 solution : [9, 8, 10, 23, 18]


Before reduction : 
 pending  : [38, 27, 39, 22, 15]
 solution : [9, 8, 10, 23, 18]

Essensial at level 14 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 0), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, 8192), (16, 0), (17, -1), (18, -1), (19, 0), (20, -1), (21, -1), (22, 8192), (23, -1), (24, -1), (25, -1), (26, -1), (27, 2048), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, 1024), (39, 2048), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, 8192), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, 8192), (23, -1), (24, -1), (25, -1), (26, -1), (27, 2048), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, 1024), (39, 2048), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 14 : set()

After reduction : 
 pending  : [38, 27, 39, 22, 15]
 solution : [9, 8, 10, 23, 18]


Solution : [9, 8, 10, 23, 18] has cost 30.


Before backtrack at level 14
 pending : [38, 27, 39, 22, 15]
 solution : [9, 8, 10, 23, 18]

After backtrack at level 14
 pending : [38, 27, 39, 22, 15, 3, 19, 16]
 solution : [9, 8, 10, 23, 18]


Invert decision for 18 at level 13


New level: 14
 pending : [38, 27, 39, 22, 15, 3, 19, 16]
 solution : [9, 8, 10, 23]


Before reduction : 
 pending  : [38, 27, 39, 22, 15, 3, 19, 16]
 solution : [9, 8, 10, 23]

Essensial at level 14 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, 8192), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, 8192), (23, -1), (24, -1), (25, -1), (26, -1), (27, 2048), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, 1024), (39, 2048), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 65536), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, 1048576), (16, 32768), (17, -1), (18, -1), (19, 67584), (20, -1), (21, -1), (22, 32768), (23, -1), (24, -1), (25, -1), (26, -1), (27, 524288), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, 262144), (39, 524288), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 14 : set()

After reduction : 
 pending  : [38, 27, 39, 22, 15, 3, 19, 16]
 solution : [9, 8, 10, 23]


Solution : [9, 8, 10, 23] has cost 21.


Decide in level 14 among pending : [38, 27, 39, 22, 15, 3, 19, 16]

Coverage : [(0, -1), (1, -1), (2, -1), (3, 65536), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, 1048576), (16, 32768), (17, -1), (18, -1), (19, 67584), (20, -1), (21, -1), (22, 32768), (23, -1), (24, -1), (25, -1), (26, -1), (27, 524288), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, 262144), (39, 524288), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Decide 15 with phase True at level 14

After decision at level 14
 pending : [38, 27, 39, 22, 3, 19, 16]
 solution : [9, 8, 10, 23, 15]


New level: 15
 pending : [38, 27, 39, 22, 3, 19, 16]
 solution : [9, 8, 10, 23, 15]


Before reduction : 
 pending  : [38, 27, 39, 22, 3, 19, 16]
 solution : [9, 8, 10, 23, 15]

Essensial at level 15 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 65536), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, 1048576), (16, 32768), (17, -1), (18, -1), (19, 67584), (20, -1), (21, -1), (22, 32768), (23, -1), (24, -1), (25, -1), (26, -1), (27, 524288), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, 262144), (39, 524288), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 32768), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, 0), (17, -1), (18, -1), (19, 33280), (20, -1), (21, -1), (22, 0), (23, -1), (24, -1), (25, -1), (26, -1), (27, 131072), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, 512), (39, 131072), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 15 : {16, 22}

After reduction : 
 pending  : [38, 27, 39, 3, 19]
 solution : [9, 8, 10, 23, 15]


Before reduction : 
 pending  : [38, 27, 39, 3, 19]
 solution : [9, 8, 10, 23, 15]

Essensial at level 15 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 32768), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, 0), (17, -1), (18, -1), (19, 33280), (20, -1), (21, -1), (22, 0), (23, -1), (24, -1), (25, -1), (26, -1), (27, 131072), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, 512), (39, 131072), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 32768), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, 33280), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, 131072), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, 512), (39, 131072), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 15 : set()

After reduction : 
 pending  : [38, 27, 39, 3, 19]
 solution : [9, 8, 10, 23, 15]


Solution : [9, 8, 10, 23, 15] has cost 28.


Before backtrack at level 15
 pending : [38, 27, 39, 3, 19]
 solution : [9, 8, 10, 23, 15]

After backtrack at level 15
 pending : [38, 27, 39, 3, 19, 22, 16]
 solution : [9, 8, 10, 23, 15]


Invert decision for 15 at level 14


New level: 15
 pending : [38, 27, 39, 3, 19, 22, 16]
 solution : [9, 8, 10, 23]


Before reduction : 
 pending  : [38, 27, 39, 3, 19, 22, 16]
 solution : [9, 8, 10, 23]

Essensial at level 15 : {22}

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 32768), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, 33280), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, 131072), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, 512), (39, 131072), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 65536), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, 16384), (17, -1), (18, -1), (19, 67584), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, 524288), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, 262144), (39, 524288), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 15 : set()

After reduction : 
 pending  : [38, 27, 39, 3, 19, 16]
 solution : [9, 8, 10, 23, 22]


Before reduction : 
 pending  : [38, 27, 39, 3, 19, 16]
 solution : [9, 8, 10, 23, 22]

Essensial at level 15 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 65536), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, 16384), (17, -1), (18, -1), (19, 67584), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, 524288), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, 262144), (39, 524288), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 65536), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, 16384), (17, -1), (18, -1), (19, 67584), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, 524288), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, 262144), (39, 524288), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 15 : set()

After reduction : 
 pending  : [38, 27, 39, 3, 19, 16]
 solution : [9, 8, 10, 23, 22]


Solution : [9, 8, 10, 23, 22] has cost 28.


Before backtrack at level 15
 pending : [38, 27, 39, 3, 19, 16]
 solution : [9, 8, 10, 23, 22]

After backtrack at level 15
 pending : [38, 27, 39, 3, 19, 16, 22]
 solution : [9, 8, 10, 23]


Before backtrack at level 14
 pending : [38, 27, 39, 3, 19, 16, 22]
 solution : [9, 8, 10, 23]

After backtrack at level 14
 pending : [38, 27, 39, 3, 19, 16, 22, 15]
 solution : [9, 8, 10, 23]


Before backtrack at level 13
 pending : [38, 27, 39, 3, 19, 16, 22, 15]
 solution : [9, 8, 10, 23]

After backtrack at level 13
 pending : [38, 27, 39, 3, 19, 16, 22, 15, 18]
 solution : [9, 8, 10, 23]


Before backtrack at level 12
 pending : [38, 27, 39, 3, 19, 16, 22, 15, 18]
 solution : [9, 8, 10, 23]

After backtrack at level 12
 pending : [38, 27, 39, 3, 19, 16, 22, 15, 18, 14]
 solution : [9, 8, 10, 23]


Before backtrack at level 11
 pending : [38, 27, 39, 3, 19, 16, 22, 15, 18, 14]
 solution : [9, 8, 10, 23]

After backtrack at level 11
 pending : [38, 27, 39, 3, 19, 16, 22, 15, 18, 14, 23, 5, 29, 31, 37, 42, 43, 47, 48, 49, 41, 30, 33, 17]
 solution : [9, 8, 10]


Before backtrack at level 10
 pending : [38, 27, 39, 3, 19, 16, 22, 15, 18, 14, 23, 5, 29, 31, 37, 42, 43, 47, 48, 49, 41, 30, 33, 17]
 solution : [9, 8, 10]

After backtrack at level 10
 pending : [38, 27, 39, 3, 19, 16, 22, 15, 18, 14, 23, 5, 29, 31, 37, 42, 43, 47, 48, 49, 41, 30, 33, 17, 7]
 solution : [9, 8, 10]


Before backtrack at level 9
 pending : [38, 27, 39, 3, 19, 16, 22, 15, 18, 14, 23, 5, 29, 31, 37, 42, 43, 47, 48, 49, 41, 30, 33, 17, 7]
 solution : [9, 8, 10]

After backtrack at level 9
 pending : [38, 27, 39, 3, 19, 16, 22, 15, 18, 14, 23, 5, 29, 31, 37, 42, 43, 47, 48, 49, 41, 30, 33, 17, 7, 21]
 solution : [9, 8, 10]


Before backtrack at level 8
 pending : [38, 27, 39, 3, 19, 16, 22, 15, 18, 14, 23, 5, 29, 31, 37, 42, 43, 47, 48, 49, 41, 30, 33, 17, 7, 21]
 solution : [9, 8, 10]

After backtrack at level 8
 pending : [38, 27, 39, 3, 19, 16, 22, 15, 18, 14, 23, 5, 29, 31, 37, 42, 43, 47, 48, 49, 41, 30, 33, 17, 7, 21, 40]
 solution : [9, 8, 10]


Before backtrack at level 7
 pending : [38, 27, 39, 3, 19, 16, 22, 15, 18, 14, 23, 5, 29, 31, 37, 42, 43, 47, 48, 49, 41, 30, 33, 17, 7, 21, 40]
 solution : [9, 8, 10]

After backtrack at level 7
 pending : [38, 27, 39, 3, 19, 16, 22, 15, 18, 14, 23, 5, 29, 31, 37, 42, 43, 47, 48, 49, 41, 30, 33, 17, 7, 21, 40, 24]
 solution : [9, 8, 10]


Before backtrack at level 6
 pending : [38, 27, 39, 3, 19, 16, 22, 15, 18, 14, 23, 5, 29, 31, 37, 42, 43, 47, 48, 49, 41, 30, 33, 17, 7, 21, 40, 24]
 solution : [9, 8, 10]

After backtrack at level 6
 pending : [38, 27, 39, 3, 19, 16, 22, 15, 18, 14, 23, 5, 29, 31, 37, 42, 43, 47, 48, 49, 41, 30, 33, 17, 7, 21, 40, 24, 13]
 solution : [9, 8, 10]


Before backtrack at level 5
 pending : [38, 27, 39, 3, 19, 16, 22, 15, 18, 14, 23, 5, 29, 31, 37, 42, 43, 47, 48, 49, 41, 30, 33, 17, 7, 21, 40, 24, 13]
 solution : [9, 8, 10]

After backtrack at level 5
 pending : [38, 27, 39, 3, 19, 16, 22, 15, 18, 14, 23, 5, 29, 31, 37, 42, 43, 47, 48, 49, 41, 30, 33, 17, 7, 21, 40, 24, 13, 28]
 solution : [9, 8, 10]


Before backtrack at level 4
 pending : [38, 27, 39, 3, 19, 16, 22, 15, 18, 14, 23, 5, 29, 31, 37, 42, 43, 47, 48, 49, 41, 30, 33, 17, 7, 21, 40, 24, 13, 28]
 solution : [9, 8, 10]

After backtrack at level 4
 pending : [38, 27, 39, 3, 19, 16, 22, 15, 18, 14, 23, 5, 29, 31, 37, 42, 43, 47, 48, 49, 41, 30, 33, 17, 7, 21, 40, 24, 13, 28, 32]
 solution : [9, 8, 10]


Before backtrack at level 3
 pending : [38, 27, 39, 3, 19, 16, 22, 15, 18, 14, 23, 5, 29, 31, 37, 42, 43, 47, 48, 49, 41, 30, 33, 17, 7, 21, 40, 24, 13, 28, 32]
 solution : [9, 8, 10]

After backtrack at level 3
 pending : [38, 27, 39, 3, 19, 16, 22, 15, 18, 14, 23, 5, 29, 31, 37, 42, 43, 47, 48, 49, 41, 30, 33, 17, 7, 21, 40, 24, 13, 28, 32, 26]
 solution : [9, 8, 10]


Invert decision for 10 at level 2


New level: 3
 pending : [38, 27, 39, 3, 19, 16, 22, 15, 18, 14, 23, 5, 29, 31, 37, 42, 43, 47, 48, 49, 41, 30, 33, 17, 7, 21, 40, 24, 13, 28, 32, 26]
 solution : [9, 8]


Before reduction : 
 pending  : [38, 27, 39, 3, 19, 16, 22, 15, 18, 14, 23, 5, 29, 31, 37, 42, 43, 47, 48, 49, 41, 30, 33, 17, 7, 21, 40, 24, 13, 28, 32, 26]
 solution : [9, 8]

Essensial at level 3 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 65536), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, 16384), (17, -1), (18, -1), (19, 67584), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, 524288), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, 262144), (39, 524288), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 524288), (4, -1), (5, 524288), (6, -1), (7, 67108864), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, 1073741824), (14, 8388608), (15, 4194304), (16, 262144), (17, 33554432), (18, 16777216), (19, 557056), (20, -1), (21, 536870912), (22, 131072), (23, 67108864), (24, 268435456), (25, -1), (26, 536870912), (27, 2097152), (28, 2147483648), (29, 524288), (30, 1048576), (31, 8192), (32, 536870912), (33, 8192), (34, -1), (35, -1), (36, -1), (37, 8192), (38, 67108864), (39, 2097152), (40, 134217728), (41, 67108864), (42, 262144), (43, 262144), (44, -1), (45, -1), (46, -1), (47, 33554432), (48, 8388608), (49, 33554432), (50, -1), (51, -1), (52, -1)]

Covered at level 3 : set()

After reduction : 
 pending  : [38, 27, 39, 3, 19, 16, 22, 15, 18, 14, 23, 5, 29, 31, 37, 42, 43, 47, 48, 49, 41, 30, 33, 17, 7, 21, 40, 24, 13, 28, 32, 26]
 solution : [9, 8]


Solution : [9, 8] has cost 9.


Decide in level 3 among pending : [38, 27, 39, 3, 19, 16, 22, 15, 18, 14, 23, 5, 29, 31, 37, 42, 43, 47, 48, 49, 41, 30, 33, 17, 7, 21, 40, 24, 13, 28, 32, 26]

Coverage : [(0, -1), (1, -1), (2, -1), (3, 524288), (4, -1), (5, 524288), (6, -1), (7, 67108864), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, 1073741824), (14, 8388608), (15, 4194304), (16, 262144), (17, 33554432), (18, 16777216), (19, 557056), (20, -1), (21, 536870912), (22, 131072), (23, 67108864), (24, 268435456), (25, -1), (26, 536870912), (27, 2097152), (28, 2147483648), (29, 524288), (30, 1048576), (31, 8192), (32, 536870912), (33, 8192), (34, -1), (35, -1), (36, -1), (37, 8192), (38, 67108864), (39, 2097152), (40, 134217728), (41, 67108864), (42, 262144), (43, 262144), (44, -1), (45, -1), (46, -1), (47, 33554432), (48, 8388608), (49, 33554432), (50, -1), (51, -1), (52, -1)]

Decide 28 with phase True at level 3

After decision at level 3
 pending : [38, 27, 39, 3, 19, 16, 22, 15, 18, 14, 23, 5, 29, 31, 37, 42, 43, 47, 48, 49, 41, 30, 33, 17, 7, 21, 40, 24, 13, 32, 26]
 solution : [9, 8, 28]


New level: 4
 pending : [38, 27, 39, 3, 19, 16, 22, 15, 18, 14, 23, 5, 29, 31, 37, 42, 43, 47, 48, 49, 41, 30, 33, 17, 7, 21, 40, 24, 13, 32, 26]
 solution : [9, 8, 28]


Before reduction : 
 pending  : [38, 27, 39, 3, 19, 16, 22, 15, 18, 14, 23, 5, 29, 31, 37, 42, 43, 47, 48, 49, 41, 30, 33, 17, 7, 21, 40, 24, 13, 32, 26]
 solution : [9, 8, 28]

Essensial at level 4 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 524288), (4, -1), (5, 524288), (6, -1), (7, 67108864), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, 1073741824), (14, 8388608), (15, 4194304), (16, 262144), (17, 33554432), (18, 16777216), (19, 557056), (20, -1), (21, 536870912), (22, 131072), (23, 67108864), (24, 268435456), (25, -1), (26, 536870912), (27, 2097152), (28, 2147483648), (29, 524288), (30, 1048576), (31, 8192), (32, 536870912), (33, 8192), (34, -1), (35, -1), (36, -1), (37, 8192), (38, 67108864), (39, 2097152), (40, 134217728), (41, 67108864), (42, 262144), (43, 262144), (44, -1), (45, -1), (46, -1), (47, 33554432), (48, 8388608), (49, 33554432), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 0), (4, -1), (5, 131072), (6, -1), (7, 67108864), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, 0), (14, 0), (15, 0), (16, 0), (17, 0), (18, 0), (19, 0), (20, -1), (21, 0), (22, 0), (23, 67108864), (24, 268435456), (25, -1), (26, 536870912), (27, 0), (28, -1), (29, 262144), (30, 1048576), (31, 4096), (32, 536870912), (33, 8192), (34, -1), (35, -1), (36, -1), (37, 2048), (38, 1024), (39, 0), (40, 2048), (41, 33554432), (42, 65536), (43, 65536), (44, -1), (45, -1), (46, -1), (47, 16777216), (48, 2097152), (49, 8388608), (50, -1), (51, -1), (52, -1)]

Covered at level 4 : {3, 39, 13, 14, 15, 16, 17, 18, 19, 21, 22, 27}

After reduction : 
 pending  : [38, 23, 5, 29, 31, 37, 42, 43, 47, 48, 49, 41, 30, 33, 7, 40, 24, 32, 26]
 solution : [9, 8, 28]


Before reduction : 
 pending  : [38, 23, 5, 29, 31, 37, 42, 43, 47, 48, 49, 41, 30, 33, 7, 40, 24, 32, 26]
 solution : [9, 8, 28]

Essensial at level 4 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 0), (4, -1), (5, 131072), (6, -1), (7, 67108864), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, 0), (14, 0), (15, 0), (16, 0), (17, 0), (18, 0), (19, 0), (20, -1), (21, 0), (22, 0), (23, 67108864), (24, 268435456), (25, -1), (26, 536870912), (27, 0), (28, -1), (29, 262144), (30, 1048576), (31, 4096), (32, 536870912), (33, 8192), (34, -1), (35, -1), (36, -1), (37, 2048), (38, 1024), (39, 0), (40, 2048), (41, 33554432), (42, 65536), (43, 65536), (44, -1), (45, -1), (46, -1), (47, 16777216), (48, 2097152), (49, 8388608), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 131072), (6, -1), (7, 67108864), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, 67108864), (24, 268435456), (25, -1), (26, 536870912), (27, -1), (28, -1), (29, 262144), (30, 1048576), (31, 4096), (32, 536870912), (33, 8192), (34, -1), (35, -1), (36, -1), (37, 2048), (38, 1024), (39, -1), (40, 2048), (41, 33554432), (42, 65536), (43, 65536), (44, -1), (45, -1), (46, -1), (47, 16777216), (48, 2097152), (49, 8388608), (50, -1), (51, -1), (52, -1)]

Covered at level 4 : set()

After reduction : 
 pending  : [38, 23, 5, 29, 31, 37, 42, 43, 47, 48, 49, 41, 30, 33, 7, 40, 24, 32, 26]
 solution : [9, 8, 28]


Solution : [9, 8, 28] has cost 13.


Decide in level 4 among pending : [38, 23, 5, 29, 31, 37, 42, 43, 47, 48, 49, 41, 30, 33, 7, 40, 24, 32, 26]

Coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 131072), (6, -1), (7, 67108864), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, 67108864), (24, 268435456), (25, -1), (26, 536870912), (27, -1), (28, -1), (29, 262144), (30, 1048576), (31, 4096), (32, 536870912), (33, 8192), (34, -1), (35, -1), (36, -1), (37, 2048), (38, 1024), (39, -1), (40, 2048), (41, 33554432), (42, 65536), (43, 65536), (44, -1), (45, -1), (46, -1), (47, 16777216), (48, 2097152), (49, 8388608), (50, -1), (51, -1), (52, -1)]

Decide 32 with phase True at level 4

After decision at level 4
 pending : [38, 23, 5, 29, 31, 37, 42, 43, 47, 48, 49, 41, 30, 33, 7, 40, 24, 26]
 solution : [9, 8, 28, 32]


New level: 5
 pending : [38, 23, 5, 29, 31, 37, 42, 43, 47, 48, 49, 41, 30, 33, 7, 40, 24, 26]
 solution : [9, 8, 28, 32]


Before reduction : 
 pending  : [38, 23, 5, 29, 31, 37, 42, 43, 47, 48, 49, 41, 30, 33, 7, 40, 24, 26]
 solution : [9, 8, 28, 32]

Essensial at level 5 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 131072), (6, -1), (7, 67108864), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, 67108864), (24, 268435456), (25, -1), (26, 536870912), (27, -1), (28, -1), (29, 262144), (30, 1048576), (31, 4096), (32, 536870912), (33, 8192), (34, -1), (35, -1), (36, -1), (37, 2048), (38, 1024), (39, -1), (40, 2048), (41, 33554432), (42, 65536), (43, 65536), (44, -1), (45, -1), (46, -1), (47, 16777216), (48, 2097152), (49, 8388608), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 32768), (6, -1), (7, 67108864), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, 67108864), (24, 4096), (25, -1), (26, 536870912), (27, -1), (28, -1), (29, 65536), (30, 0), (31, 1024), (32, -1), (33, 0), (34, -1), (35, -1), (36, -1), (37, 512), (38, 512), (39, -1), (40, 0), (41, 8388608), (42, 16384), (43, 16384), (44, -1), (45, -1), (46, -1), (47, 4194304), (48, 524288), (49, 2097152), (50, -1), (51, -1), (52, -1)]

Covered at level 5 : {40, 33, 30}

After reduction : 
 pending  : [38, 23, 5, 29, 31, 37, 42, 43, 47, 48, 49, 41, 7, 24, 26]
 solution : [9, 8, 28, 32]


Before reduction : 
 pending  : [38, 23, 5, 29, 31, 37, 42, 43, 47, 48, 49, 41, 7, 24, 26]
 solution : [9, 8, 28, 32]

Essensial at level 5 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 32768), (6, -1), (7, 67108864), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, 67108864), (24, 4096), (25, -1), (26, 536870912), (27, -1), (28, -1), (29, 65536), (30, 0), (31, 1024), (32, -1), (33, 0), (34, -1), (35, -1), (36, -1), (37, 512), (38, 512), (39, -1), (40, 0), (41, 8388608), (42, 16384), (43, 16384), (44, -1), (45, -1), (46, -1), (47, 4194304), (48, 524288), (49, 2097152), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 32768), (6, -1), (7, 67108864), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, 67108864), (24, 4096), (25, -1), (26, 536870912), (27, -1), (28, -1), (29, 65536), (30, -1), (31, 1024), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, 512), (38, 512), (39, -1), (40, -1), (41, 8388608), (42, 16384), (43, 16384), (44, -1), (45, -1), (46, -1), (47, 4194304), (48, 524288), (49, 2097152), (50, -1), (51, -1), (52, -1)]

Covered at level 5 : set()

After reduction : 
 pending  : [38, 23, 5, 29, 31, 37, 42, 43, 47, 48, 49, 41, 7, 24, 26]
 solution : [9, 8, 28, 32]


Solution : [9, 8, 28, 32] has cost 26.


Before backtrack at level 5
 pending : [38, 23, 5, 29, 31, 37, 42, 43, 47, 48, 49, 41, 7, 24, 26]
 solution : [9, 8, 28, 32]

After backtrack at level 5
 pending : [38, 23, 5, 29, 31, 37, 42, 43, 47, 48, 49, 41, 7, 24, 26, 30, 33, 40]
 solution : [9, 8, 28, 32]


Invert decision for 32 at level 4


New level: 5
 pending : [38, 23, 5, 29, 31, 37, 42, 43, 47, 48, 49, 41, 7, 24, 26, 30, 33, 40]
 solution : [9, 8, 28]


Before reduction : 
 pending  : [38, 23, 5, 29, 31, 37, 42, 43, 47, 48, 49, 41, 7, 24, 26, 30, 33, 40]
 solution : [9, 8, 28]

Essensial at level 5 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 32768), (6, -1), (7, 67108864), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, 67108864), (24, 4096), (25, -1), (26, 536870912), (27, -1), (28, -1), (29, 65536), (30, -1), (31, 1024), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, 512), (38, 512), (39, -1), (40, -1), (41, 8388608), (42, 16384), (43, 16384), (44, -1), (45, -1), (46, -1), (47, 4194304), (48, 524288), (49, 2097152), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 131072), (6, -1), (7, 67108864), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, 67108864), (24, 268435456), (25, -1), (26, 536870912), (27, -1), (28, -1), (29, 262144), (30, 1048576), (31, 4096), (32, -1), (33, 8192), (34, -1), (35, -1), (36, -1), (37, 2048), (38, 1024), (39, -1), (40, 2048), (41, 33554432), (42, 65536), (43, 65536), (44, -1), (45, -1), (46, -1), (47, 16777216), (48, 2097152), (49, 8388608), (50, -1), (51, -1), (52, -1)]

Covered at level 5 : set()

After reduction : 
 pending  : [38, 23, 5, 29, 31, 37, 42, 43, 47, 48, 49, 41, 7, 24, 26, 30, 33, 40]
 solution : [9, 8, 28]


Solution : [9, 8, 28] has cost 13.


Decide in level 5 among pending : [38, 23, 5, 29, 31, 37, 42, 43, 47, 48, 49, 41, 7, 24, 26, 30, 33, 40]

Coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 131072), (6, -1), (7, 67108864), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, 67108864), (24, 268435456), (25, -1), (26, 536870912), (27, -1), (28, -1), (29, 262144), (30, 1048576), (31, 4096), (32, -1), (33, 8192), (34, -1), (35, -1), (36, -1), (37, 2048), (38, 1024), (39, -1), (40, 2048), (41, 33554432), (42, 65536), (43, 65536), (44, -1), (45, -1), (46, -1), (47, 16777216), (48, 2097152), (49, 8388608), (50, -1), (51, -1), (52, -1)]

Decide 26 with phase True at level 5

After decision at level 5
 pending : [38, 23, 5, 29, 31, 37, 42, 43, 47, 48, 49, 41, 7, 24, 30, 33, 40]
 solution : [9, 8, 28, 26]


New level: 6
 pending : [38, 23, 5, 29, 31, 37, 42, 43, 47, 48, 49, 41, 7, 24, 30, 33, 40]
 solution : [9, 8, 28, 26]


Before reduction : 
 pending  : [38, 23, 5, 29, 31, 37, 42, 43, 47, 48, 49, 41, 7, 24, 30, 33, 40]
 solution : [9, 8, 28, 26]

Essensial at level 6 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 131072), (6, -1), (7, 67108864), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, 67108864), (24, 268435456), (25, -1), (26, 536870912), (27, -1), (28, -1), (29, 262144), (30, 1048576), (31, 4096), (32, -1), (33, 8192), (34, -1), (35, -1), (36, -1), (37, 2048), (38, 1024), (39, -1), (40, 2048), (41, 33554432), (42, 65536), (43, 65536), (44, -1), (45, -1), (46, -1), (47, 16777216), (48, 2097152), (49, 8388608), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 131072), (6, -1), (7, 67108864), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, 67108864), (24, 134217728), (25, -1), (26, -1), (27, -1), (28, -1), (29, 262144), (30, 524288), (31, 4096), (32, -1), (33, 4096), (34, -1), (35, -1), (36, -1), (37, 2048), (38, 1024), (39, -1), (40, 2048), (41, 33554432), (42, 65536), (43, 65536), (44, -1), (45, -1), (46, -1), (47, 16777216), (48, 2097152), (49, 8388608), (50, -1), (51, -1), (52, -1)]

Covered at level 6 : set()

After reduction : 
 pending  : [38, 23, 5, 29, 31, 37, 42, 43, 47, 48, 49, 41, 7, 24, 30, 33, 40]
 solution : [9, 8, 28, 26]


Solution : [9, 8, 28, 26] has cost 17.


Decide in level 6 among pending : [38, 23, 5, 29, 31, 37, 42, 43, 47, 48, 49, 41, 7, 24, 30, 33, 40]

Coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 131072), (6, -1), (7, 67108864), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, 67108864), (24, 134217728), (25, -1), (26, -1), (27, -1), (28, -1), (29, 262144), (30, 524288), (31, 4096), (32, -1), (33, 4096), (34, -1), (35, -1), (36, -1), (37, 2048), (38, 1024), (39, -1), (40, 2048), (41, 33554432), (42, 65536), (43, 65536), (44, -1), (45, -1), (46, -1), (47, 16777216), (48, 2097152), (49, 8388608), (50, -1), (51, -1), (52, -1)]

Decide 24 with phase True at level 6

After decision at level 6
 pending : [38, 23, 5, 29, 31, 37, 42, 43, 47, 48, 49, 41, 7, 30, 33, 40]
 solution : [9, 8, 28, 26, 24]


New level: 7
 pending : [38, 23, 5, 29, 31, 37, 42, 43, 47, 48, 49, 41, 7, 30, 33, 40]
 solution : [9, 8, 28, 26, 24]


Before reduction : 
 pending  : [38, 23, 5, 29, 31, 37, 42, 43, 47, 48, 49, 41, 7, 30, 33, 40]
 solution : [9, 8, 28, 26, 24]

Essensial at level 7 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 131072), (6, -1), (7, 67108864), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, 67108864), (24, 134217728), (25, -1), (26, -1), (27, -1), (28, -1), (29, 262144), (30, 524288), (31, 4096), (32, -1), (33, 4096), (34, -1), (35, -1), (36, -1), (37, 2048), (38, 1024), (39, -1), (40, 2048), (41, 33554432), (42, 65536), (43, 65536), (44, -1), (45, -1), (46, -1), (47, 16777216), (48, 2097152), (49, 8388608), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 32768), (6, -1), (7, 16777216), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, 16777216), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, 65536), (30, 0), (31, 1024), (32, -1), (33, 0), (34, -1), (35, -1), (36, -1), (37, 512), (38, 512), (39, -1), (40, 0), (41, 16777216), (42, 16384), (43, 16384), (44, -1), (45, -1), (46, -1), (47, 4194304), (48, 524288), (49, 4194304), (50, -1), (51, -1), (52, -1)]

Covered at level 7 : {40, 33, 30}

After reduction : 
 pending  : [38, 23, 5, 29, 31, 37, 42, 43, 47, 48, 49, 41, 7]
 solution : [9, 8, 28, 26, 24]


Before reduction : 
 pending  : [38, 23, 5, 29, 31, 37, 42, 43, 47, 48, 49, 41, 7]
 solution : [9, 8, 28, 26, 24]

Essensial at level 7 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 32768), (6, -1), (7, 16777216), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, 16777216), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, 65536), (30, 0), (31, 1024), (32, -1), (33, 0), (34, -1), (35, -1), (36, -1), (37, 512), (38, 512), (39, -1), (40, 0), (41, 16777216), (42, 16384), (43, 16384), (44, -1), (45, -1), (46, -1), (47, 4194304), (48, 524288), (49, 4194304), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 32768), (6, -1), (7, 16777216), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, 16777216), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, 65536), (30, -1), (31, 1024), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, 512), (38, 512), (39, -1), (40, -1), (41, 16777216), (42, 16384), (43, 16384), (44, -1), (45, -1), (46, -1), (47, 4194304), (48, 524288), (49, 4194304), (50, -1), (51, -1), (52, -1)]

Covered at level 7 : set()

After reduction : 
 pending  : [38, 23, 5, 29, 31, 37, 42, 43, 47, 48, 49, 41, 7]
 solution : [9, 8, 28, 26, 24]


Solution : [9, 8, 28, 26, 24] has cost 24.


Before backtrack at level 7
 pending : [38, 23, 5, 29, 31, 37, 42, 43, 47, 48, 49, 41, 7]
 solution : [9, 8, 28, 26, 24]

After backtrack at level 7
 pending : [38, 23, 5, 29, 31, 37, 42, 43, 47, 48, 49, 41, 7, 30, 33, 40]
 solution : [9, 8, 28, 26, 24]


Invert decision for 24 at level 6


New level: 7
 pending : [38, 23, 5, 29, 31, 37, 42, 43, 47, 48, 49, 41, 7, 30, 33, 40]
 solution : [9, 8, 28, 26]


Before reduction : 
 pending  : [38, 23, 5, 29, 31, 37, 42, 43, 47, 48, 49, 41, 7, 30, 33, 40]
 solution : [9, 8, 28, 26]

Essensial at level 7 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 32768), (6, -1), (7, 16777216), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, 16777216), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, 65536), (30, -1), (31, 1024), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, 512), (38, 512), (39, -1), (40, -1), (41, 16777216), (42, 16384), (43, 16384), (44, -1), (45, -1), (46, -1), (47, 4194304), (48, 524288), (49, 4194304), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 131072), (6, -1), (7, 67108864), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, 67108864), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, 262144), (30, 524288), (31, 4096), (32, -1), (33, 4096), (34, -1), (35, -1), (36, -1), (37, 2048), (38, 1024), (39, -1), (40, 2048), (41, 33554432), (42, 65536), (43, 65536), (44, -1), (45, -1), (46, -1), (47, 16777216), (48, 2097152), (49, 8388608), (50, -1), (51, -1), (52, -1)]

Covered at level 7 : set()

After reduction : 
 pending  : [38, 23, 5, 29, 31, 37, 42, 43, 47, 48, 49, 41, 7, 30, 33, 40]
 solution : [9, 8, 28, 26]


Solution : [9, 8, 28, 26] has cost 17.


Decide in level 7 among pending : [38, 23, 5, 29, 31, 37, 42, 43, 47, 48, 49, 41, 7, 30, 33, 40]

Coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 131072), (6, -1), (7, 67108864), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, 67108864), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, 262144), (30, 524288), (31, 4096), (32, -1), (33, 4096), (34, -1), (35, -1), (36, -1), (37, 2048), (38, 1024), (39, -1), (40, 2048), (41, 33554432), (42, 65536), (43, 65536), (44, -1), (45, -1), (46, -1), (47, 16777216), (48, 2097152), (49, 8388608), (50, -1), (51, -1), (52, -1)]

Decide 23 with phase True at level 7

After decision at level 7
 pending : [38, 5, 29, 31, 37, 42, 43, 47, 48, 49, 41, 7, 30, 33, 40]
 solution : [9, 8, 28, 26, 23]


New level: 8
 pending : [38, 5, 29, 31, 37, 42, 43, 47, 48, 49, 41, 7, 30, 33, 40]
 solution : [9, 8, 28, 26, 23]


Before reduction : 
 pending  : [38, 5, 29, 31, 37, 42, 43, 47, 48, 49, 41, 7, 30, 33, 40]
 solution : [9, 8, 28, 26, 23]

Essensial at level 8 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 131072), (6, -1), (7, 67108864), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, 67108864), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, 262144), (30, 524288), (31, 4096), (32, -1), (33, 4096), (34, -1), (35, -1), (36, -1), (37, 2048), (38, 1024), (39, -1), (40, 2048), (41, 33554432), (42, 65536), (43, 65536), (44, -1), (45, -1), (46, -1), (47, 16777216), (48, 2097152), (49, 8388608), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 0), (6, -1), (7, 0), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, 0), (30, 0), (31, 0), (32, -1), (33, 0), (34, -1), (35, -1), (36, -1), (37, 0), (38, 0), (39, -1), (40, 0), (41, 0), (42, 0), (43, 0), (44, -1), (45, -1), (46, -1), (47, 0), (48, 0), (49, 0), (50, -1), (51, -1), (52, -1)]

Covered at level 8 : {33, 37, 5, 38, 7, 41, 42, 43, 40, 47, 48, 49, 29, 30, 31}

After reduction : 
 pending  : []
 solution : [9, 8, 28, 26, 23]


Before reduction : 
 pending  : []
 solution : [9, 8, 28, 26, 23]

Essensial at level 8 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 0), (6, -1), (7, 0), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, 0), (30, 0), (31, 0), (32, -1), (33, 0), (34, -1), (35, -1), (36, -1), (37, 0), (38, 0), (39, -1), (40, 0), (41, 0), (42, 0), (43, 0), (44, -1), (45, -1), (46, -1), (47, 0), (48, 0), (49, 0), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 8 : set()

After reduction : 
 pending  : []
 solution : [9, 8, 28, 26, 23]


Solution : [9, 8, 28, 26, 23] has cost 24.


Before backtrack at level 8
 pending : []
 solution : [9, 8, 28, 26, 23]

After backtrack at level 8
 pending : [38, 5, 29, 31, 37, 42, 43, 47, 48, 49, 41, 7, 30, 33, 40]
 solution : [9, 8, 28, 26, 23]


Invert decision for 23 at level 7


New level: 8
 pending : [38, 5, 29, 31, 37, 42, 43, 47, 48, 49, 41, 7, 30, 33, 40]
 solution : [9, 8, 28, 26]


Before reduction : 
 pending  : [38, 5, 29, 31, 37, 42, 43, 47, 48, 49, 41, 7, 30, 33, 40]
 solution : [9, 8, 28, 26]

Essensial at level 8 : {7}

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 0), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, 0), (30, 0), (31, 0), (32, -1), (33, 0), (34, -1), (35, -1), (36, -1), (37, 0), (38, 0), (39, -1), (40, 0), (41, 0), (42, 0), (43, 0), (44, -1), (45, -1), (46, -1), (47, 0), (48, 0), (49, 0), (50, -1), (51, -1), (52, -1)]

Covered at level 8 : {33, 37, 5, 38, 40, 41, 42, 43, 47, 48, 49, 29, 30, 31}

After reduction : 
 pending  : []
 solution : [9, 8, 28, 26, 7]


Before reduction : 
 pending  : []
 solution : [9, 8, 28, 26, 7]

Essensial at level 8 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 0), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, 0), (30, 0), (31, 0), (32, -1), (33, 0), (34, -1), (35, -1), (36, -1), (37, 0), (38, 0), (39, -1), (40, 0), (41, 0), (42, 0), (43, 0), (44, -1), (45, -1), (46, -1), (47, 0), (48, 0), (49, 0), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 8 : set()

After reduction : 
 pending  : []
 solution : [9, 8, 28, 26, 7]


Solution : [9, 8, 28, 26, 7] has cost 21.


Before backtrack at level 8
 pending : []
 solution : [9, 8, 28, 26, 7]

After backtrack at level 8
 pending : [7, 38, 5, 29, 31, 37, 42, 43, 47, 48, 49, 41, 30, 33, 40]
 solution : [9, 8, 28, 26]


Before backtrack at level 7
 pending : [7, 38, 5, 29, 31, 37, 42, 43, 47, 48, 49, 41, 30, 33, 40]
 solution : [9, 8, 28, 26]

After backtrack at level 7
 pending : [7, 38, 5, 29, 31, 37, 42, 43, 47, 48, 49, 41, 30, 33, 40, 23]
 solution : [9, 8, 28, 26]


Before backtrack at level 6
 pending : [7, 38, 5, 29, 31, 37, 42, 43, 47, 48, 49, 41, 30, 33, 40, 23]
 solution : [9, 8, 28, 26]

After backtrack at level 6
 pending : [7, 38, 5, 29, 31, 37, 42, 43, 47, 48, 49, 41, 30, 33, 40, 23, 24]
 solution : [9, 8, 28, 26]


Invert decision for 26 at level 5


New level: 6
 pending : [7, 38, 5, 29, 31, 37, 42, 43, 47, 48, 49, 41, 30, 33, 40, 23, 24]
 solution : [9, 8, 28]


Before reduction : 
 pending  : [7, 38, 5, 29, 31, 37, 42, 43, 47, 48, 49, 41, 30, 33, 40, 23, 24]
 solution : [9, 8, 28]

Essensial at level 6 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 131072), (6, -1), (7, 67108864), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, 67108864), (24, 268435456), (25, -1), (26, -1), (27, -1), (28, -1), (29, 262144), (30, 1048576), (31, 4096), (32, -1), (33, 8192), (34, -1), (35, -1), (36, -1), (37, 2048), (38, 1024), (39, -1), (40, 2048), (41, 33554432), (42, 65536), (43, 65536), (44, -1), (45, -1), (46, -1), (47, 16777216), (48, 2097152), (49, 8388608), (50, -1), (51, -1), (52, -1)]

Covered at level 6 : set()

After reduction : 
 pending  : [7, 38, 5, 29, 31, 37, 42, 43, 47, 48, 49, 41, 30, 33, 40, 23, 24]
 solution : [9, 8, 28]


Solution : [9, 8, 28] has cost 13.


Decide in level 6 among pending : [7, 38, 5, 29, 31, 37, 42, 43, 47, 48, 49, 41, 30, 33, 40, 23, 24]

Coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 131072), (6, -1), (7, 67108864), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, 67108864), (24, 268435456), (25, -1), (26, -1), (27, -1), (28, -1), (29, 262144), (30, 1048576), (31, 4096), (32, -1), (33, 8192), (34, -1), (35, -1), (36, -1), (37, 2048), (38, 1024), (39, -1), (40, 2048), (41, 33554432), (42, 65536), (43, 65536), (44, -1), (45, -1), (46, -1), (47, 16777216), (48, 2097152), (49, 8388608), (50, -1), (51, -1), (52, -1)]

Decide 24 with phase True at level 6

After decision at level 6
 pending : [7, 38, 5, 29, 31, 37, 42, 43, 47, 48, 49, 41, 30, 33, 40, 23]
 solution : [9, 8, 28, 24]


New level: 7
 pending : [7, 38, 5, 29, 31, 37, 42, 43, 47, 48, 49, 41, 30, 33, 40, 23]
 solution : [9, 8, 28, 24]


Before reduction : 
 pending  : [7, 38, 5, 29, 31, 37, 42, 43, 47, 48, 49, 41, 30, 33, 40, 23]
 solution : [9, 8, 28, 24]

Essensial at level 7 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 131072), (6, -1), (7, 67108864), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, 67108864), (24, 268435456), (25, -1), (26, -1), (27, -1), (28, -1), (29, 262144), (30, 1048576), (31, 4096), (32, -1), (33, 8192), (34, -1), (35, -1), (36, -1), (37, 2048), (38, 1024), (39, -1), (40, 2048), (41, 33554432), (42, 65536), (43, 65536), (44, -1), (45, -1), (46, -1), (47, 16777216), (48, 2097152), (49, 8388608), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 32768), (6, -1), (7, 16777216), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, 16777216), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, 65536), (30, 0), (31, 1024), (32, -1), (33, 0), (34, -1), (35, -1), (36, -1), (37, 512), (38, 512), (39, -1), (40, 0), (41, 16777216), (42, 16384), (43, 16384), (44, -1), (45, -1), (46, -1), (47, 4194304), (48, 524288), (49, 4194304), (50, -1), (51, -1), (52, -1)]

Covered at level 7 : {40, 33, 30}

After reduction : 
 pending  : [7, 38, 5, 29, 31, 37, 42, 43, 47, 48, 49, 41, 23]
 solution : [9, 8, 28, 24]


Before reduction : 
 pending  : [7, 38, 5, 29, 31, 37, 42, 43, 47, 48, 49, 41, 23]
 solution : [9, 8, 28, 24]

Essensial at level 7 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 32768), (6, -1), (7, 16777216), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, 16777216), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, 65536), (30, 0), (31, 1024), (32, -1), (33, 0), (34, -1), (35, -1), (36, -1), (37, 512), (38, 512), (39, -1), (40, 0), (41, 16777216), (42, 16384), (43, 16384), (44, -1), (45, -1), (46, -1), (47, 4194304), (48, 524288), (49, 4194304), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 32768), (6, -1), (7, 16777216), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, 16777216), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, 65536), (30, -1), (31, 1024), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, 512), (38, 512), (39, -1), (40, -1), (41, 16777216), (42, 16384), (43, 16384), (44, -1), (45, -1), (46, -1), (47, 4194304), (48, 524288), (49, 4194304), (50, -1), (51, -1), (52, -1)]

Covered at level 7 : set()

After reduction : 
 pending  : [7, 38, 5, 29, 31, 37, 42, 43, 47, 48, 49, 41, 23]
 solution : [9, 8, 28, 24]


Solution : [9, 8, 28, 24] has cost 20.


Decide in level 7 among pending : [7, 38, 5, 29, 31, 37, 42, 43, 47, 48, 49, 41, 23]

Coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 32768), (6, -1), (7, 16777216), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, 16777216), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, 65536), (30, -1), (31, 1024), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, 512), (38, 512), (39, -1), (40, -1), (41, 16777216), (42, 16384), (43, 16384), (44, -1), (45, -1), (46, -1), (47, 4194304), (48, 524288), (49, 4194304), (50, -1), (51, -1), (52, -1)]

Decide 7 with phase True at level 7

After decision at level 7
 pending : [38, 5, 29, 31, 37, 42, 43, 47, 48, 49, 41, 23]
 solution : [9, 8, 28, 24, 7]


New level: 8
 pending : [38, 5, 29, 31, 37, 42, 43, 47, 48, 49, 41, 23]
 solution : [9, 8, 28, 24, 7]


Before reduction : 
 pending  : [38, 5, 29, 31, 37, 42, 43, 47, 48, 49, 41, 23]
 solution : [9, 8, 28, 24, 7]

Essensial at level 8 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 32768), (6, -1), (7, 16777216), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, 16777216), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, 65536), (30, -1), (31, 1024), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, 512), (38, 512), (39, -1), (40, -1), (41, 16777216), (42, 16384), (43, 16384), (44, -1), (45, -1), (46, -1), (47, 4194304), (48, 524288), (49, 4194304), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 0), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, 0), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, 0), (30, -1), (31, 0), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, 0), (38, 0), (39, -1), (40, -1), (41, 0), (42, 0), (43, 0), (44, -1), (45, -1), (46, -1), (47, 0), (48, 0), (49, 0), (50, -1), (51, -1), (52, -1)]

Covered at level 8 : {37, 5, 38, 41, 42, 43, 47, 48, 49, 23, 29, 31}

After reduction : 
 pending  : []
 solution : [9, 8, 28, 24, 7]


Before reduction : 
 pending  : []
 solution : [9, 8, 28, 24, 7]

Essensial at level 8 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 0), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, 0), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, 0), (30, -1), (31, 0), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, 0), (38, 0), (39, -1), (40, -1), (41, 0), (42, 0), (43, 0), (44, -1), (45, -1), (46, -1), (47, 0), (48, 0), (49, 0), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 8 : set()

After reduction : 
 pending  : []
 solution : [9, 8, 28, 24, 7]


Solution : [9, 8, 28, 24, 7] has cost 24.


Before backtrack at level 8
 pending : []
 solution : [9, 8, 28, 24, 7]

After backtrack at level 8
 pending : [38, 5, 29, 31, 37, 42, 43, 47, 48, 49, 41, 23]
 solution : [9, 8, 28, 24, 7]


Invert decision for 7 at level 7


New level: 8
 pending : [38, 5, 29, 31, 37, 42, 43, 47, 48, 49, 41, 23]
 solution : [9, 8, 28, 24]


Before reduction : 
 pending  : [38, 5, 29, 31, 37, 42, 43, 47, 48, 49, 41, 23]
 solution : [9, 8, 28, 24]

Essensial at level 8 : {23}

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 0), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, 0), (30, -1), (31, 0), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, 0), (38, 0), (39, -1), (40, -1), (41, 0), (42, 0), (43, 0), (44, -1), (45, -1), (46, -1), (47, 0), (48, 0), (49, 0), (50, -1), (51, -1), (52, -1)]

Covered at level 8 : {37, 5, 38, 41, 42, 43, 47, 48, 49, 29, 31}

After reduction : 
 pending  : []
 solution : [9, 8, 28, 24, 23]


Before reduction : 
 pending  : []
 solution : [9, 8, 28, 24, 23]

Essensial at level 8 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 0), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, 0), (30, -1), (31, 0), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, 0), (38, 0), (39, -1), (40, -1), (41, 0), (42, 0), (43, 0), (44, -1), (45, -1), (46, -1), (47, 0), (48, 0), (49, 0), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 8 : set()

After reduction : 
 pending  : []
 solution : [9, 8, 28, 24, 23]


Solution : [9, 8, 28, 24, 23] has cost 27.


Before backtrack at level 8
 pending : []
 solution : [9, 8, 28, 24, 23]

After backtrack at level 8
 pending : [23, 38, 5, 29, 31, 37, 42, 43, 47, 48, 49, 41]
 solution : [9, 8, 28, 24]


Before backtrack at level 7
 pending : [23, 38, 5, 29, 31, 37, 42, 43, 47, 48, 49, 41]
 solution : [9, 8, 28, 24]

After backtrack at level 7
 pending : [23, 38, 5, 29, 31, 37, 42, 43, 47, 48, 49, 41, 30, 33, 40, 7]
 solution : [9, 8, 28, 24]


Invert decision for 24 at level 6


New level: 7
 pending : [23, 38, 5, 29, 31, 37, 42, 43, 47, 48, 49, 41, 30, 33, 40, 7]
 solution : [9, 8, 28]


Before reduction : 
 pending  : [23, 38, 5, 29, 31, 37, 42, 43, 47, 48, 49, 41, 30, 33, 40, 7]
 solution : [9, 8, 28]

Essensial at level 7 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 131072), (6, -1), (7, 67108864), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, 67108864), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, 262144), (30, 1048576), (31, 4096), (32, -1), (33, 8192), (34, -1), (35, -1), (36, -1), (37, 2048), (38, 1024), (39, -1), (40, 2048), (41, 33554432), (42, 65536), (43, 65536), (44, -1), (45, -1), (46, -1), (47, 16777216), (48, 2097152), (49, 8388608), (50, -1), (51, -1), (52, -1)]

Covered at level 7 : set()

After reduction : 
 pending  : [23, 38, 5, 29, 31, 37, 42, 43, 47, 48, 49, 41, 30, 33, 40, 7]
 solution : [9, 8, 28]


Solution : [9, 8, 28] has cost 13.


Decide in level 7 among pending : [23, 38, 5, 29, 31, 37, 42, 43, 47, 48, 49, 41, 30, 33, 40, 7]

Coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 131072), (6, -1), (7, 67108864), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, 67108864), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, 262144), (30, 1048576), (31, 4096), (32, -1), (33, 8192), (34, -1), (35, -1), (36, -1), (37, 2048), (38, 1024), (39, -1), (40, 2048), (41, 33554432), (42, 65536), (43, 65536), (44, -1), (45, -1), (46, -1), (47, 16777216), (48, 2097152), (49, 8388608), (50, -1), (51, -1), (52, -1)]

Decide 23 with phase True at level 7

After decision at level 7
 pending : [38, 5, 29, 31, 37, 42, 43, 47, 48, 49, 41, 30, 33, 40, 7]
 solution : [9, 8, 28, 23]


New level: 8
 pending : [38, 5, 29, 31, 37, 42, 43, 47, 48, 49, 41, 30, 33, 40, 7]
 solution : [9, 8, 28, 23]


Before reduction : 
 pending  : [38, 5, 29, 31, 37, 42, 43, 47, 48, 49, 41, 30, 33, 40, 7]
 solution : [9, 8, 28, 23]

Essensial at level 8 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 131072), (6, -1), (7, 67108864), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, 67108864), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, 262144), (30, 1048576), (31, 4096), (32, -1), (33, 8192), (34, -1), (35, -1), (36, -1), (37, 2048), (38, 1024), (39, -1), (40, 2048), (41, 33554432), (42, 65536), (43, 65536), (44, -1), (45, -1), (46, -1), (47, 16777216), (48, 2097152), (49, 8388608), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 0), (6, -1), (7, 0), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, 0), (30, 0), (31, 0), (32, -1), (33, 0), (34, -1), (35, -1), (36, -1), (37, 0), (38, 0), (39, -1), (40, 0), (41, 0), (42, 0), (43, 0), (44, -1), (45, -1), (46, -1), (47, 0), (48, 0), (49, 0), (50, -1), (51, -1), (52, -1)]

Covered at level 8 : {33, 37, 5, 38, 40, 41, 42, 43, 7, 47, 48, 49, 29, 30, 31}

After reduction : 
 pending  : []
 solution : [9, 8, 28, 23]


Before reduction : 
 pending  : []
 solution : [9, 8, 28, 23]

Essensial at level 8 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 0), (6, -1), (7, 0), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, 0), (30, 0), (31, 0), (32, -1), (33, 0), (34, -1), (35, -1), (36, -1), (37, 0), (38, 0), (39, -1), (40, 0), (41, 0), (42, 0), (43, 0), (44, -1), (45, -1), (46, -1), (47, 0), (48, 0), (49, 0), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 8 : set()

After reduction : 
 pending  : []
 solution : [9, 8, 28, 23]


Solution : [9, 8, 28, 23] has cost 20.


Before backtrack at level 8
 pending : []
 solution : [9, 8, 28, 23]

After backtrack at level 8
 pending : [38, 5, 29, 31, 37, 42, 43, 47, 48, 49, 41, 30, 33, 40, 7]
 solution : [9, 8, 28, 23]


Invert decision for 23 at level 7


New level: 8
 pending : [38, 5, 29, 31, 37, 42, 43, 47, 48, 49, 41, 30, 33, 40, 7]
 solution : [9, 8, 28]


Before reduction : 
 pending  : [38, 5, 29, 31, 37, 42, 43, 47, 48, 49, 41, 30, 33, 40, 7]
 solution : [9, 8, 28]

Essensial at level 8 : {7}

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 0), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, 0), (30, 0), (31, 0), (32, -1), (33, 0), (34, -1), (35, -1), (36, -1), (37, 0), (38, 0), (39, -1), (40, 0), (41, 0), (42, 0), (43, 0), (44, -1), (45, -1), (46, -1), (47, 0), (48, 0), (49, 0), (50, -1), (51, -1), (52, -1)]

Covered at level 8 : {33, 37, 5, 38, 40, 41, 42, 43, 47, 48, 49, 29, 30, 31}

After reduction : 
 pending  : []
 solution : [9, 8, 28, 7]


Before reduction : 
 pending  : []
 solution : [9, 8, 28, 7]

Essensial at level 8 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 0), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, 0), (30, 0), (31, 0), (32, -1), (33, 0), (34, -1), (35, -1), (36, -1), (37, 0), (38, 0), (39, -1), (40, 0), (41, 0), (42, 0), (43, 0), (44, -1), (45, -1), (46, -1), (47, 0), (48, 0), (49, 0), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 8 : set()

After reduction : 
 pending  : []
 solution : [9, 8, 28, 7]


Solution : [9, 8, 28, 7] has cost 17.


Before backtrack at level 8
 pending : []
 solution : [9, 8, 28, 7]

After backtrack at level 8
 pending : [7, 38, 5, 29, 31, 37, 42, 43, 47, 48, 49, 41, 30, 33, 40]
 solution : [9, 8, 28]


Before backtrack at level 7
 pending : [7, 38, 5, 29, 31, 37, 42, 43, 47, 48, 49, 41, 30, 33, 40]
 solution : [9, 8, 28]

After backtrack at level 7
 pending : [7, 38, 5, 29, 31, 37, 42, 43, 47, 48, 49, 41, 30, 33, 40, 23]
 solution : [9, 8, 28]


Before backtrack at level 6
 pending : [7, 38, 5, 29, 31, 37, 42, 43, 47, 48, 49, 41, 30, 33, 40, 23]
 solution : [9, 8, 28]

After backtrack at level 6
 pending : [7, 38, 5, 29, 31, 37, 42, 43, 47, 48, 49, 41, 30, 33, 40, 23, 24]
 solution : [9, 8, 28]


Before backtrack at level 5
 pending : [7, 38, 5, 29, 31, 37, 42, 43, 47, 48, 49, 41, 30, 33, 40, 23, 24]
 solution : [9, 8, 28]

After backtrack at level 5
 pending : [7, 38, 5, 29, 31, 37, 42, 43, 47, 48, 49, 41, 30, 33, 40, 23, 24, 26]
 solution : [9, 8, 28]


Before backtrack at level 4
 pending : [7, 38, 5, 29, 31, 37, 42, 43, 47, 48, 49, 41, 30, 33, 40, 23, 24, 26]
 solution : [9, 8, 28]

After backtrack at level 4
 pending : [7, 38, 5, 29, 31, 37, 42, 43, 47, 48, 49, 41, 30, 33, 40, 23, 24, 26, 27, 39, 3, 19, 16, 22, 15, 18, 14, 17, 21, 13, 32]
 solution : [9, 8, 28]


Invert decision for 28 at level 3


New level: 4
 pending : [7, 38, 5, 29, 31, 37, 42, 43, 47, 48, 49, 41, 30, 33, 40, 23, 24, 26, 27, 39, 3, 19, 16, 22, 15, 18, 14, 17, 21, 13, 32]
 solution : [9, 8]


Before reduction : 
 pending  : [7, 38, 5, 29, 31, 37, 42, 43, 47, 48, 49, 41, 30, 33, 40, 23, 24, 26, 27, 39, 3, 19, 16, 22, 15, 18, 14, 17, 21, 13, 32]
 solution : [9, 8]

Essensial at level 4 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 524288), (4, -1), (5, 524288), (6, -1), (7, 67108864), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, 1073741824), (14, 8388608), (15, 4194304), (16, 262144), (17, 33554432), (18, 16777216), (19, 557056), (20, -1), (21, 536870912), (22, 131072), (23, 67108864), (24, 268435456), (25, -1), (26, 536870912), (27, 2097152), (28, -1), (29, 524288), (30, 1048576), (31, 8192), (32, 536870912), (33, 8192), (34, -1), (35, -1), (36, -1), (37, 8192), (38, 67108864), (39, 2097152), (40, 134217728), (41, 67108864), (42, 262144), (43, 262144), (44, -1), (45, -1), (46, -1), (47, 33554432), (48, 8388608), (49, 33554432), (50, -1), (51, -1), (52, -1)]

Covered at level 4 : set()

After reduction : 
 pending  : [7, 38, 5, 29, 31, 37, 42, 43, 47, 48, 49, 41, 30, 33, 40, 23, 24, 26, 27, 39, 3, 19, 16, 22, 15, 18, 14, 17, 21, 13, 32]
 solution : [9, 8]


Solution : [9, 8] has cost 9.


Decide in level 4 among pending : [7, 38, 5, 29, 31, 37, 42, 43, 47, 48, 49, 41, 30, 33, 40, 23, 24, 26, 27, 39, 3, 19, 16, 22, 15, 18, 14, 17, 21, 13, 32]

Coverage : [(0, -1), (1, -1), (2, -1), (3, 524288), (4, -1), (5, 524288), (6, -1), (7, 67108864), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, 1073741824), (14, 8388608), (15, 4194304), (16, 262144), (17, 33554432), (18, 16777216), (19, 557056), (20, -1), (21, 536870912), (22, 131072), (23, 67108864), (24, 268435456), (25, -1), (26, 536870912), (27, 2097152), (28, -1), (29, 524288), (30, 1048576), (31, 8192), (32, 536870912), (33, 8192), (34, -1), (35, -1), (36, -1), (37, 8192), (38, 67108864), (39, 2097152), (40, 134217728), (41, 67108864), (42, 262144), (43, 262144), (44, -1), (45, -1), (46, -1), (47, 33554432), (48, 8388608), (49, 33554432), (50, -1), (51, -1), (52, -1)]

Decide 13 with phase True at level 4

After decision at level 4
 pending : [7, 38, 5, 29, 31, 37, 42, 43, 47, 48, 49, 41, 30, 33, 40, 23, 24, 26, 27, 39, 3, 19, 16, 22, 15, 18, 14, 17, 21, 32]
 solution : [9, 8, 13]


New level: 5
 pending : [7, 38, 5, 29, 31, 37, 42, 43, 47, 48, 49, 41, 30, 33, 40, 23, 24, 26, 27, 39, 3, 19, 16, 22, 15, 18, 14, 17, 21, 32]
 solution : [9, 8, 13]


Before reduction : 
 pending  : [7, 38, 5, 29, 31, 37, 42, 43, 47, 48, 49, 41, 30, 33, 40, 23, 24, 26, 27, 39, 3, 19, 16, 22, 15, 18, 14, 17, 21, 32]
 solution : [9, 8, 13]

Essensial at level 5 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 524288), (4, -1), (5, 524288), (6, -1), (7, 67108864), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, 1073741824), (14, 8388608), (15, 4194304), (16, 262144), (17, 33554432), (18, 16777216), (19, 557056), (20, -1), (21, 536870912), (22, 131072), (23, 67108864), (24, 268435456), (25, -1), (26, 536870912), (27, 2097152), (28, -1), (29, 524288), (30, 1048576), (31, 8192), (32, 536870912), (33, 8192), (34, -1), (35, -1), (36, -1), (37, 8192), (38, 67108864), (39, 2097152), (40, 134217728), (41, 67108864), (42, 262144), (43, 262144), (44, -1), (45, -1), (46, -1), (47, 33554432), (48, 8388608), (49, 33554432), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 0), (4, -1), (5, 131072), (6, -1), (7, 67108864), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 0), (15, 0), (16, 0), (17, 0), (18, 0), (19, 0), (20, -1), (21, 0), (22, 0), (23, 67108864), (24, 268435456), (25, -1), (26, 536870912), (27, 0), (28, -1), (29, 262144), (30, 1048576), (31, 4096), (32, 536870912), (33, 8192), (34, -1), (35, -1), (36, -1), (37, 2048), (38, 1024), (39, 0), (40, 2048), (41, 33554432), (42, 65536), (43, 65536), (44, -1), (45, -1), (46, -1), (47, 16777216), (48, 2097152), (49, 33554432), (50, -1), (51, -1), (52, -1)]

Covered at level 5 : {3, 39, 14, 15, 16, 17, 18, 19, 21, 22, 27}

After reduction : 
 pending  : [7, 38, 5, 29, 31, 37, 42, 43, 47, 48, 49, 41, 30, 33, 40, 23, 24, 26, 32]
 solution : [9, 8, 13]


Before reduction : 
 pending  : [7, 38, 5, 29, 31, 37, 42, 43, 47, 48, 49, 41, 30, 33, 40, 23, 24, 26, 32]
 solution : [9, 8, 13]

Essensial at level 5 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 0), (4, -1), (5, 131072), (6, -1), (7, 67108864), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 0), (15, 0), (16, 0), (17, 0), (18, 0), (19, 0), (20, -1), (21, 0), (22, 0), (23, 67108864), (24, 268435456), (25, -1), (26, 536870912), (27, 0), (28, -1), (29, 262144), (30, 1048576), (31, 4096), (32, 536870912), (33, 8192), (34, -1), (35, -1), (36, -1), (37, 2048), (38, 1024), (39, 0), (40, 2048), (41, 33554432), (42, 65536), (43, 65536), (44, -1), (45, -1), (46, -1), (47, 16777216), (48, 2097152), (49, 33554432), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 131072), (6, -1), (7, 67108864), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, 67108864), (24, 268435456), (25, -1), (26, 536870912), (27, -1), (28, -1), (29, 262144), (30, 1048576), (31, 4096), (32, 536870912), (33, 8192), (34, -1), (35, -1), (36, -1), (37, 2048), (38, 1024), (39, -1), (40, 2048), (41, 33554432), (42, 65536), (43, 65536), (44, -1), (45, -1), (46, -1), (47, 16777216), (48, 2097152), (49, 33554432), (50, -1), (51, -1), (52, -1)]

Covered at level 5 : set()

After reduction : 
 pending  : [7, 38, 5, 29, 31, 37, 42, 43, 47, 48, 49, 41, 30, 33, 40, 23, 24, 26, 32]
 solution : [9, 8, 13]


Solution : [9, 8, 13] has cost 16.


Decide in level 5 among pending : [7, 38, 5, 29, 31, 37, 42, 43, 47, 48, 49, 41, 30, 33, 40, 23, 24, 26, 32]

Coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 131072), (6, -1), (7, 67108864), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, 67108864), (24, 268435456), (25, -1), (26, 536870912), (27, -1), (28, -1), (29, 262144), (30, 1048576), (31, 4096), (32, 536870912), (33, 8192), (34, -1), (35, -1), (36, -1), (37, 2048), (38, 1024), (39, -1), (40, 2048), (41, 33554432), (42, 65536), (43, 65536), (44, -1), (45, -1), (46, -1), (47, 16777216), (48, 2097152), (49, 33554432), (50, -1), (51, -1), (52, -1)]

Decide 26 with phase True at level 5

After decision at level 5
 pending : [7, 38, 5, 29, 31, 37, 42, 43, 47, 48, 49, 41, 30, 33, 40, 23, 24, 32]
 solution : [9, 8, 13, 26]


New level: 6
 pending : [7, 38, 5, 29, 31, 37, 42, 43, 47, 48, 49, 41, 30, 33, 40, 23, 24, 32]
 solution : [9, 8, 13, 26]


Before reduction : 
 pending  : [7, 38, 5, 29, 31, 37, 42, 43, 47, 48, 49, 41, 30, 33, 40, 23, 24, 32]
 solution : [9, 8, 13, 26]

Essensial at level 6 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 131072), (6, -1), (7, 67108864), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, 67108864), (24, 268435456), (25, -1), (26, 536870912), (27, -1), (28, -1), (29, 262144), (30, 1048576), (31, 4096), (32, 536870912), (33, 8192), (34, -1), (35, -1), (36, -1), (37, 2048), (38, 1024), (39, -1), (40, 2048), (41, 33554432), (42, 65536), (43, 65536), (44, -1), (45, -1), (46, -1), (47, 16777216), (48, 2097152), (49, 33554432), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 131072), (6, -1), (7, 67108864), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, 67108864), (24, 134217728), (25, -1), (26, -1), (27, -1), (28, -1), (29, 262144), (30, 524288), (31, 4096), (32, 268435456), (33, 4096), (34, -1), (35, -1), (36, -1), (37, 2048), (38, 1024), (39, -1), (40, 2048), (41, 33554432), (42, 65536), (43, 65536), (44, -1), (45, -1), (46, -1), (47, 16777216), (48, 2097152), (49, 33554432), (50, -1), (51, -1), (52, -1)]

Covered at level 6 : set()

After reduction : 
 pending  : [7, 38, 5, 29, 31, 37, 42, 43, 47, 48, 49, 41, 30, 33, 40, 23, 24, 32]
 solution : [9, 8, 13, 26]


Solution : [9, 8, 13, 26] has cost 20.


Before backtrack at level 6
 pending : [7, 38, 5, 29, 31, 37, 42, 43, 47, 48, 49, 41, 30, 33, 40, 23, 24, 32]
 solution : [9, 8, 13, 26]

After backtrack at level 6
 pending : [7, 38, 5, 29, 31, 37, 42, 43, 47, 48, 49, 41, 30, 33, 40, 23, 24, 32]
 solution : [9, 8, 13, 26]


Invert decision for 26 at level 5


New level: 6
 pending : [7, 38, 5, 29, 31, 37, 42, 43, 47, 48, 49, 41, 30, 33, 40, 23, 24, 32]
 solution : [9, 8, 13]


Before reduction : 
 pending  : [7, 38, 5, 29, 31, 37, 42, 43, 47, 48, 49, 41, 30, 33, 40, 23, 24, 32]
 solution : [9, 8, 13]

Essensial at level 6 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 131072), (6, -1), (7, 67108864), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, 67108864), (24, 134217728), (25, -1), (26, -1), (27, -1), (28, -1), (29, 262144), (30, 524288), (31, 4096), (32, 268435456), (33, 4096), (34, -1), (35, -1), (36, -1), (37, 2048), (38, 1024), (39, -1), (40, 2048), (41, 33554432), (42, 65536), (43, 65536), (44, -1), (45, -1), (46, -1), (47, 16777216), (48, 2097152), (49, 33554432), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 131072), (6, -1), (7, 67108864), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, 67108864), (24, 268435456), (25, -1), (26, -1), (27, -1), (28, -1), (29, 262144), (30, 1048576), (31, 4096), (32, 536870912), (33, 8192), (34, -1), (35, -1), (36, -1), (37, 2048), (38, 1024), (39, -1), (40, 2048), (41, 33554432), (42, 65536), (43, 65536), (44, -1), (45, -1), (46, -1), (47, 16777216), (48, 2097152), (49, 33554432), (50, -1), (51, -1), (52, -1)]

Covered at level 6 : set()

After reduction : 
 pending  : [7, 38, 5, 29, 31, 37, 42, 43, 47, 48, 49, 41, 30, 33, 40, 23, 24, 32]
 solution : [9, 8, 13]


Solution : [9, 8, 13] has cost 16.


Decide in level 6 among pending : [7, 38, 5, 29, 31, 37, 42, 43, 47, 48, 49, 41, 30, 33, 40, 23, 24, 32]

Coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 131072), (6, -1), (7, 67108864), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, 67108864), (24, 268435456), (25, -1), (26, -1), (27, -1), (28, -1), (29, 262144), (30, 1048576), (31, 4096), (32, 536870912), (33, 8192), (34, -1), (35, -1), (36, -1), (37, 2048), (38, 1024), (39, -1), (40, 2048), (41, 33554432), (42, 65536), (43, 65536), (44, -1), (45, -1), (46, -1), (47, 16777216), (48, 2097152), (49, 33554432), (50, -1), (51, -1), (52, -1)]

Decide 32 with phase True at level 6

After decision at level 6
 pending : [7, 38, 5, 29, 31, 37, 42, 43, 47, 48, 49, 41, 30, 33, 40, 23, 24]
 solution : [9, 8, 13, 32]


New level: 7
 pending : [7, 38, 5, 29, 31, 37, 42, 43, 47, 48, 49, 41, 30, 33, 40, 23, 24]
 solution : [9, 8, 13, 32]


Before reduction : 
 pending  : [7, 38, 5, 29, 31, 37, 42, 43, 47, 48, 49, 41, 30, 33, 40, 23, 24]
 solution : [9, 8, 13, 32]

Essensial at level 7 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 131072), (6, -1), (7, 67108864), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, 67108864), (24, 268435456), (25, -1), (26, -1), (27, -1), (28, -1), (29, 262144), (30, 1048576), (31, 4096), (32, 536870912), (33, 8192), (34, -1), (35, -1), (36, -1), (37, 2048), (38, 1024), (39, -1), (40, 2048), (41, 33554432), (42, 65536), (43, 65536), (44, -1), (45, -1), (46, -1), (47, 16777216), (48, 2097152), (49, 33554432), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 32768), (6, -1), (7, 67108864), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, 67108864), (24, 4096), (25, -1), (26, -1), (27, -1), (28, -1), (29, 65536), (30, 0), (31, 1024), (32, -1), (33, 0), (34, -1), (35, -1), (36, -1), (37, 512), (38, 512), (39, -1), (40, 0), (41, 8388608), (42, 16384), (43, 16384), (44, -1), (45, -1), (46, -1), (47, 4194304), (48, 524288), (49, 8388608), (50, -1), (51, -1), (52, -1)]

Covered at level 7 : {40, 33, 30}

After reduction : 
 pending  : [7, 38, 5, 29, 31, 37, 42, 43, 47, 48, 49, 41, 23, 24]
 solution : [9, 8, 13, 32]


Before reduction : 
 pending  : [7, 38, 5, 29, 31, 37, 42, 43, 47, 48, 49, 41, 23, 24]
 solution : [9, 8, 13, 32]

Essensial at level 7 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 32768), (6, -1), (7, 67108864), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, 67108864), (24, 4096), (25, -1), (26, -1), (27, -1), (28, -1), (29, 65536), (30, 0), (31, 1024), (32, -1), (33, 0), (34, -1), (35, -1), (36, -1), (37, 512), (38, 512), (39, -1), (40, 0), (41, 8388608), (42, 16384), (43, 16384), (44, -1), (45, -1), (46, -1), (47, 4194304), (48, 524288), (49, 8388608), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 32768), (6, -1), (7, 67108864), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, 67108864), (24, 4096), (25, -1), (26, -1), (27, -1), (28, -1), (29, 65536), (30, -1), (31, 1024), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, 512), (38, 512), (39, -1), (40, -1), (41, 8388608), (42, 16384), (43, 16384), (44, -1), (45, -1), (46, -1), (47, 4194304), (48, 524288), (49, 8388608), (50, -1), (51, -1), (52, -1)]

Covered at level 7 : set()

After reduction : 
 pending  : [7, 38, 5, 29, 31, 37, 42, 43, 47, 48, 49, 41, 23, 24]
 solution : [9, 8, 13, 32]


Solution : [9, 8, 13, 32] has cost 29.


Before backtrack at level 7
 pending : [7, 38, 5, 29, 31, 37, 42, 43, 47, 48, 49, 41, 23, 24]
 solution : [9, 8, 13, 32]

After backtrack at level 7
 pending : [7, 38, 5, 29, 31, 37, 42, 43, 47, 48, 49, 41, 23, 24, 30, 33, 40]
 solution : [9, 8, 13, 32]


Invert decision for 32 at level 6


New level: 7
 pending : [7, 38, 5, 29, 31, 37, 42, 43, 47, 48, 49, 41, 23, 24, 30, 33, 40]
 solution : [9, 8, 13]


Before reduction : 
 pending  : [7, 38, 5, 29, 31, 37, 42, 43, 47, 48, 49, 41, 23, 24, 30, 33, 40]
 solution : [9, 8, 13]

Essensial at level 7 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 32768), (6, -1), (7, 67108864), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, 67108864), (24, 4096), (25, -1), (26, -1), (27, -1), (28, -1), (29, 65536), (30, -1), (31, 1024), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, 512), (38, 512), (39, -1), (40, -1), (41, 8388608), (42, 16384), (43, 16384), (44, -1), (45, -1), (46, -1), (47, 4194304), (48, 524288), (49, 8388608), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 131072), (6, -1), (7, 67108864), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, 67108864), (24, 268435456), (25, -1), (26, -1), (27, -1), (28, -1), (29, 262144), (30, 1048576), (31, 4096), (32, -1), (33, 8192), (34, -1), (35, -1), (36, -1), (37, 2048), (38, 1024), (39, -1), (40, 2048), (41, 33554432), (42, 65536), (43, 65536), (44, -1), (45, -1), (46, -1), (47, 16777216), (48, 2097152), (49, 33554432), (50, -1), (51, -1), (52, -1)]

Covered at level 7 : set()

After reduction : 
 pending  : [7, 38, 5, 29, 31, 37, 42, 43, 47, 48, 49, 41, 23, 24, 30, 33, 40]
 solution : [9, 8, 13]


Solution : [9, 8, 13] has cost 16.


Decide in level 7 among pending : [7, 38, 5, 29, 31, 37, 42, 43, 47, 48, 49, 41, 23, 24, 30, 33, 40]

Coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 131072), (6, -1), (7, 67108864), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, 67108864), (24, 268435456), (25, -1), (26, -1), (27, -1), (28, -1), (29, 262144), (30, 1048576), (31, 4096), (32, -1), (33, 8192), (34, -1), (35, -1), (36, -1), (37, 2048), (38, 1024), (39, -1), (40, 2048), (41, 33554432), (42, 65536), (43, 65536), (44, -1), (45, -1), (46, -1), (47, 16777216), (48, 2097152), (49, 33554432), (50, -1), (51, -1), (52, -1)]

Decide 24 with phase True at level 7

After decision at level 7
 pending : [7, 38, 5, 29, 31, 37, 42, 43, 47, 48, 49, 41, 23, 30, 33, 40]
 solution : [9, 8, 13, 24]


New level: 8
 pending : [7, 38, 5, 29, 31, 37, 42, 43, 47, 48, 49, 41, 23, 30, 33, 40]
 solution : [9, 8, 13, 24]


Before reduction : 
 pending  : [7, 38, 5, 29, 31, 37, 42, 43, 47, 48, 49, 41, 23, 30, 33, 40]
 solution : [9, 8, 13, 24]

Essensial at level 8 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 131072), (6, -1), (7, 67108864), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, 67108864), (24, 268435456), (25, -1), (26, -1), (27, -1), (28, -1), (29, 262144), (30, 1048576), (31, 4096), (32, -1), (33, 8192), (34, -1), (35, -1), (36, -1), (37, 2048), (38, 1024), (39, -1), (40, 2048), (41, 33554432), (42, 65536), (43, 65536), (44, -1), (45, -1), (46, -1), (47, 16777216), (48, 2097152), (49, 33554432), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 32768), (6, -1), (7, 16777216), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, 16777216), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, 65536), (30, 0), (31, 1024), (32, -1), (33, 0), (34, -1), (35, -1), (36, -1), (37, 512), (38, 512), (39, -1), (40, 0), (41, 16777216), (42, 16384), (43, 16384), (44, -1), (45, -1), (46, -1), (47, 4194304), (48, 524288), (49, 16777216), (50, -1), (51, -1), (52, -1)]

Covered at level 8 : {40, 33, 30}

After reduction : 
 pending  : [7, 38, 5, 29, 31, 37, 42, 43, 47, 48, 49, 41, 23]
 solution : [9, 8, 13, 24]


Before reduction : 
 pending  : [7, 38, 5, 29, 31, 37, 42, 43, 47, 48, 49, 41, 23]
 solution : [9, 8, 13, 24]

Essensial at level 8 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 32768), (6, -1), (7, 16777216), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, 16777216), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, 65536), (30, 0), (31, 1024), (32, -1), (33, 0), (34, -1), (35, -1), (36, -1), (37, 512), (38, 512), (39, -1), (40, 0), (41, 16777216), (42, 16384), (43, 16384), (44, -1), (45, -1), (46, -1), (47, 4194304), (48, 524288), (49, 16777216), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 32768), (6, -1), (7, 16777216), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, 16777216), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, 65536), (30, -1), (31, 1024), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, 512), (38, 512), (39, -1), (40, -1), (41, 16777216), (42, 16384), (43, 16384), (44, -1), (45, -1), (46, -1), (47, 4194304), (48, 524288), (49, 16777216), (50, -1), (51, -1), (52, -1)]

Covered at level 8 : set()

After reduction : 
 pending  : [7, 38, 5, 29, 31, 37, 42, 43, 47, 48, 49, 41, 23]
 solution : [9, 8, 13, 24]


Solution : [9, 8, 13, 24] has cost 23.


Before backtrack at level 8
 pending : [7, 38, 5, 29, 31, 37, 42, 43, 47, 48, 49, 41, 23]
 solution : [9, 8, 13, 24]

After backtrack at level 8
 pending : [7, 38, 5, 29, 31, 37, 42, 43, 47, 48, 49, 41, 23, 30, 33, 40]
 solution : [9, 8, 13, 24]


Invert decision for 24 at level 7


New level: 8
 pending : [7, 38, 5, 29, 31, 37, 42, 43, 47, 48, 49, 41, 23, 30, 33, 40]
 solution : [9, 8, 13]


Before reduction : 
 pending  : [7, 38, 5, 29, 31, 37, 42, 43, 47, 48, 49, 41, 23, 30, 33, 40]
 solution : [9, 8, 13]

Essensial at level 8 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 32768), (6, -1), (7, 16777216), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, 16777216), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, 65536), (30, -1), (31, 1024), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, 512), (38, 512), (39, -1), (40, -1), (41, 16777216), (42, 16384), (43, 16384), (44, -1), (45, -1), (46, -1), (47, 4194304), (48, 524288), (49, 16777216), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 131072), (6, -1), (7, 67108864), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, 67108864), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, 262144), (30, 1048576), (31, 4096), (32, -1), (33, 8192), (34, -1), (35, -1), (36, -1), (37, 2048), (38, 1024), (39, -1), (40, 2048), (41, 33554432), (42, 65536), (43, 65536), (44, -1), (45, -1), (46, -1), (47, 16777216), (48, 2097152), (49, 33554432), (50, -1), (51, -1), (52, -1)]

Covered at level 8 : set()

After reduction : 
 pending  : [7, 38, 5, 29, 31, 37, 42, 43, 47, 48, 49, 41, 23, 30, 33, 40]
 solution : [9, 8, 13]


Solution : [9, 8, 13] has cost 16.


Decide in level 8 among pending : [7, 38, 5, 29, 31, 37, 42, 43, 47, 48, 49, 41, 23, 30, 33, 40]

Coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 131072), (6, -1), (7, 67108864), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, 67108864), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, 262144), (30, 1048576), (31, 4096), (32, -1), (33, 8192), (34, -1), (35, -1), (36, -1), (37, 2048), (38, 1024), (39, -1), (40, 2048), (41, 33554432), (42, 65536), (43, 65536), (44, -1), (45, -1), (46, -1), (47, 16777216), (48, 2097152), (49, 33554432), (50, -1), (51, -1), (52, -1)]

Decide 7 with phase True at level 8

After decision at level 8
 pending : [38, 5, 29, 31, 37, 42, 43, 47, 48, 49, 41, 23, 30, 33, 40]
 solution : [9, 8, 13, 7]


New level: 9
 pending : [38, 5, 29, 31, 37, 42, 43, 47, 48, 49, 41, 23, 30, 33, 40]
 solution : [9, 8, 13, 7]


Before reduction : 
 pending  : [38, 5, 29, 31, 37, 42, 43, 47, 48, 49, 41, 23, 30, 33, 40]
 solution : [9, 8, 13, 7]

Essensial at level 9 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 131072), (6, -1), (7, 67108864), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, 67108864), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, 262144), (30, 1048576), (31, 4096), (32, -1), (33, 8192), (34, -1), (35, -1), (36, -1), (37, 2048), (38, 1024), (39, -1), (40, 2048), (41, 33554432), (42, 65536), (43, 65536), (44, -1), (45, -1), (46, -1), (47, 16777216), (48, 2097152), (49, 33554432), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 0), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, 0), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, 0), (30, 0), (31, 0), (32, -1), (33, 0), (34, -1), (35, -1), (36, -1), (37, 0), (38, 0), (39, -1), (40, 0), (41, 0), (42, 0), (43, 0), (44, -1), (45, -1), (46, -1), (47, 0), (48, 0), (49, 0), (50, -1), (51, -1), (52, -1)]

Covered at level 9 : {33, 37, 5, 38, 40, 41, 42, 43, 47, 48, 49, 23, 29, 30, 31}

After reduction : 
 pending  : []
 solution : [9, 8, 13, 7]


Before reduction : 
 pending  : []
 solution : [9, 8, 13, 7]

Essensial at level 9 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 0), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, 0), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, 0), (30, 0), (31, 0), (32, -1), (33, 0), (34, -1), (35, -1), (36, -1), (37, 0), (38, 0), (39, -1), (40, 0), (41, 0), (42, 0), (43, 0), (44, -1), (45, -1), (46, -1), (47, 0), (48, 0), (49, 0), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 9 : set()

After reduction : 
 pending  : []
 solution : [9, 8, 13, 7]


Solution : [9, 8, 13, 7] has cost 20.


Before backtrack at level 9
 pending : []
 solution : [9, 8, 13, 7]

After backtrack at level 9
 pending : [38, 5, 29, 31, 37, 42, 43, 47, 48, 49, 41, 23, 30, 33, 40]
 solution : [9, 8, 13, 7]


Invert decision for 7 at level 8


New level: 9
 pending : [38, 5, 29, 31, 37, 42, 43, 47, 48, 49, 41, 23, 30, 33, 40]
 solution : [9, 8, 13]


Before reduction : 
 pending  : [38, 5, 29, 31, 37, 42, 43, 47, 48, 49, 41, 23, 30, 33, 40]
 solution : [9, 8, 13]

Essensial at level 9 : {23}

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 0), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, 0), (30, 0), (31, 0), (32, -1), (33, 0), (34, -1), (35, -1), (36, -1), (37, 0), (38, 0), (39, -1), (40, 0), (41, 0), (42, 0), (43, 0), (44, -1), (45, -1), (46, -1), (47, 0), (48, 0), (49, 0), (50, -1), (51, -1), (52, -1)]

Covered at level 9 : {33, 37, 5, 38, 40, 41, 42, 43, 47, 48, 49, 29, 30, 31}

After reduction : 
 pending  : []
 solution : [9, 8, 13, 23]


Before reduction : 
 pending  : []
 solution : [9, 8, 13, 23]

Essensial at level 9 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 0), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, 0), (30, 0), (31, 0), (32, -1), (33, 0), (34, -1), (35, -1), (36, -1), (37, 0), (38, 0), (39, -1), (40, 0), (41, 0), (42, 0), (43, 0), (44, -1), (45, -1), (46, -1), (47, 0), (48, 0), (49, 0), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 9 : set()

After reduction : 
 pending  : []
 solution : [9, 8, 13, 23]


Solution : [9, 8, 13, 23] has cost 23.


Before backtrack at level 9
 pending : []
 solution : [9, 8, 13, 23]

After backtrack at level 9
 pending : [23, 38, 5, 29, 31, 37, 42, 43, 47, 48, 49, 41, 30, 33, 40]
 solution : [9, 8, 13]


Before backtrack at level 8
 pending : [23, 38, 5, 29, 31, 37, 42, 43, 47, 48, 49, 41, 30, 33, 40]
 solution : [9, 8, 13]

After backtrack at level 8
 pending : [23, 38, 5, 29, 31, 37, 42, 43, 47, 48, 49, 41, 30, 33, 40, 7]
 solution : [9, 8, 13]


Before backtrack at level 7
 pending : [23, 38, 5, 29, 31, 37, 42, 43, 47, 48, 49, 41, 30, 33, 40, 7]
 solution : [9, 8, 13]

After backtrack at level 7
 pending : [23, 38, 5, 29, 31, 37, 42, 43, 47, 48, 49, 41, 30, 33, 40, 7, 24]
 solution : [9, 8, 13]


Before backtrack at level 6
 pending : [23, 38, 5, 29, 31, 37, 42, 43, 47, 48, 49, 41, 30, 33, 40, 7, 24]
 solution : [9, 8, 13]

After backtrack at level 6
 pending : [23, 38, 5, 29, 31, 37, 42, 43, 47, 48, 49, 41, 30, 33, 40, 7, 24, 32]
 solution : [9, 8, 13]


Before backtrack at level 5
 pending : [23, 38, 5, 29, 31, 37, 42, 43, 47, 48, 49, 41, 30, 33, 40, 7, 24, 32]
 solution : [9, 8, 13]

After backtrack at level 5
 pending : [23, 38, 5, 29, 31, 37, 42, 43, 47, 48, 49, 41, 30, 33, 40, 7, 24, 32, 27, 39, 3, 19, 16, 22, 15, 18, 14, 17, 21, 26]
 solution : [9, 8, 13]


Invert decision for 13 at level 4


New level: 5
 pending : [23, 38, 5, 29, 31, 37, 42, 43, 47, 48, 49, 41, 30, 33, 40, 7, 24, 32, 27, 39, 3, 19, 16, 22, 15, 18, 14, 17, 21, 26]
 solution : [9, 8]


Before reduction : 
 pending  : [23, 38, 5, 29, 31, 37, 42, 43, 47, 48, 49, 41, 30, 33, 40, 7, 24, 32, 27, 39, 3, 19, 16, 22, 15, 18, 14, 17, 21, 26]
 solution : [9, 8]

Essensial at level 5 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 524288), (4, -1), (5, 524288), (6, -1), (7, 67108864), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 8388608), (15, 4194304), (16, 262144), (17, 33554432), (18, 16777216), (19, 557056), (20, -1), (21, 536870912), (22, 131072), (23, 67108864), (24, 268435456), (25, -1), (26, 536870912), (27, 2097152), (28, -1), (29, 524288), (30, 1048576), (31, 8192), (32, 536870912), (33, 8192), (34, -1), (35, -1), (36, -1), (37, 8192), (38, 67108864), (39, 2097152), (40, 134217728), (41, 67108864), (42, 262144), (43, 262144), (44, -1), (45, -1), (46, -1), (47, 33554432), (48, 8388608), (49, 33554432), (50, -1), (51, -1), (52, -1)]

Covered at level 5 : set()

After reduction : 
 pending  : [23, 38, 5, 29, 31, 37, 42, 43, 47, 48, 49, 41, 30, 33, 40, 7, 24, 32, 27, 39, 3, 19, 16, 22, 15, 18, 14, 17, 21, 26]
 solution : [9, 8]


Solution : [9, 8] has cost 9.


Decide in level 5 among pending : [23, 38, 5, 29, 31, 37, 42, 43, 47, 48, 49, 41, 30, 33, 40, 7, 24, 32, 27, 39, 3, 19, 16, 22, 15, 18, 14, 17, 21, 26]

Coverage : [(0, -1), (1, -1), (2, -1), (3, 524288), (4, -1), (5, 524288), (6, -1), (7, 67108864), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 8388608), (15, 4194304), (16, 262144), (17, 33554432), (18, 16777216), (19, 557056), (20, -1), (21, 536870912), (22, 131072), (23, 67108864), (24, 268435456), (25, -1), (26, 536870912), (27, 2097152), (28, -1), (29, 524288), (30, 1048576), (31, 8192), (32, 536870912), (33, 8192), (34, -1), (35, -1), (36, -1), (37, 8192), (38, 67108864), (39, 2097152), (40, 134217728), (41, 67108864), (42, 262144), (43, 262144), (44, -1), (45, -1), (46, -1), (47, 33554432), (48, 8388608), (49, 33554432), (50, -1), (51, -1), (52, -1)]

Decide 32 with phase True at level 5

After decision at level 5
 pending : [23, 38, 5, 29, 31, 37, 42, 43, 47, 48, 49, 41, 30, 33, 40, 7, 24, 27, 39, 3, 19, 16, 22, 15, 18, 14, 17, 21, 26]
 solution : [9, 8, 32]


New level: 6
 pending : [23, 38, 5, 29, 31, 37, 42, 43, 47, 48, 49, 41, 30, 33, 40, 7, 24, 27, 39, 3, 19, 16, 22, 15, 18, 14, 17, 21, 26]
 solution : [9, 8, 32]


Before reduction : 
 pending  : [23, 38, 5, 29, 31, 37, 42, 43, 47, 48, 49, 41, 30, 33, 40, 7, 24, 27, 39, 3, 19, 16, 22, 15, 18, 14, 17, 21, 26]
 solution : [9, 8, 32]

Essensial at level 6 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 524288), (4, -1), (5, 524288), (6, -1), (7, 67108864), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 8388608), (15, 4194304), (16, 262144), (17, 33554432), (18, 16777216), (19, 557056), (20, -1), (21, 536870912), (22, 131072), (23, 67108864), (24, 268435456), (25, -1), (26, 536870912), (27, 2097152), (28, -1), (29, 524288), (30, 1048576), (31, 8192), (32, 536870912), (33, 8192), (34, -1), (35, -1), (36, -1), (37, 8192), (38, 67108864), (39, 2097152), (40, 134217728), (41, 67108864), (42, 262144), (43, 262144), (44, -1), (45, -1), (46, -1), (47, 33554432), (48, 8388608), (49, 33554432), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 524288), (4, -1), (5, 131072), (6, -1), (7, 67108864), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 8388608), (15, 4194304), (16, 262144), (17, 33554432), (18, 16777216), (19, 557056), (20, -1), (21, 536870912), (22, 131072), (23, 67108864), (24, 8192), (25, -1), (26, 524288), (27, 2097152), (28, -1), (29, 131072), (30, 0), (31, 2048), (32, -1), (33, 0), (34, -1), (35, -1), (36, -1), (37, 2048), (38, 67108864), (39, 2097152), (40, 4096), (41, 16777216), (42, 65536), (43, 65536), (44, -1), (45, -1), (46, -1), (47, 8388608), (48, 2097152), (49, 8388608), (50, -1), (51, -1), (52, -1)]

Covered at level 6 : {33, 30}

After reduction : 
 pending  : [23, 38, 5, 29, 31, 37, 42, 43, 47, 48, 49, 41, 40, 7, 24, 27, 39, 3, 19, 16, 22, 15, 18, 14, 17, 21, 26]
 solution : [9, 8, 32]


Before reduction : 
 pending  : [23, 38, 5, 29, 31, 37, 42, 43, 47, 48, 49, 41, 40, 7, 24, 27, 39, 3, 19, 16, 22, 15, 18, 14, 17, 21, 26]
 solution : [9, 8, 32]

Essensial at level 6 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 524288), (4, -1), (5, 131072), (6, -1), (7, 67108864), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 8388608), (15, 4194304), (16, 262144), (17, 33554432), (18, 16777216), (19, 557056), (20, -1), (21, 536870912), (22, 131072), (23, 67108864), (24, 8192), (25, -1), (26, 524288), (27, 2097152), (28, -1), (29, 131072), (30, 0), (31, 2048), (32, -1), (33, 0), (34, -1), (35, -1), (36, -1), (37, 2048), (38, 67108864), (39, 2097152), (40, 4096), (41, 16777216), (42, 65536), (43, 65536), (44, -1), (45, -1), (46, -1), (47, 8388608), (48, 2097152), (49, 8388608), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 524288), (4, -1), (5, 131072), (6, -1), (7, 67108864), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 8388608), (15, 4194304), (16, 262144), (17, 33554432), (18, 16777216), (19, 557056), (20, -1), (21, 536870912), (22, 131072), (23, 67108864), (24, 8192), (25, -1), (26, 524288), (27, 2097152), (28, -1), (29, 131072), (30, -1), (31, 2048), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, 2048), (38, 67108864), (39, 2097152), (40, 4096), (41, 16777216), (42, 65536), (43, 65536), (44, -1), (45, -1), (46, -1), (47, 8388608), (48, 2097152), (49, 8388608), (50, -1), (51, -1), (52, -1)]

Covered at level 6 : set()

After reduction : 
 pending  : [23, 38, 5, 29, 31, 37, 42, 43, 47, 48, 49, 41, 40, 7, 24, 27, 39, 3, 19, 16, 22, 15, 18, 14, 17, 21, 26]
 solution : [9, 8, 32]


Solution : [9, 8, 32] has cost 22.


Before backtrack at level 6
 pending : [23, 38, 5, 29, 31, 37, 42, 43, 47, 48, 49, 41, 40, 7, 24, 27, 39, 3, 19, 16, 22, 15, 18, 14, 17, 21, 26]
 solution : [9, 8, 32]

After backtrack at level 6
 pending : [23, 38, 5, 29, 31, 37, 42, 43, 47, 48, 49, 41, 40, 7, 24, 27, 39, 3, 19, 16, 22, 15, 18, 14, 17, 21, 26, 30, 33]
 solution : [9, 8, 32]


Invert decision for 32 at level 5


New level: 6
 pending : [23, 38, 5, 29, 31, 37, 42, 43, 47, 48, 49, 41, 40, 7, 24, 27, 39, 3, 19, 16, 22, 15, 18, 14, 17, 21, 26, 30, 33]
 solution : [9, 8]


Before reduction : 
 pending  : [23, 38, 5, 29, 31, 37, 42, 43, 47, 48, 49, 41, 40, 7, 24, 27, 39, 3, 19, 16, 22, 15, 18, 14, 17, 21, 26, 30, 33]
 solution : [9, 8]

Essensial at level 6 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 524288), (4, -1), (5, 131072), (6, -1), (7, 67108864), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 8388608), (15, 4194304), (16, 262144), (17, 33554432), (18, 16777216), (19, 557056), (20, -1), (21, 536870912), (22, 131072), (23, 67108864), (24, 8192), (25, -1), (26, 524288), (27, 2097152), (28, -1), (29, 131072), (30, -1), (31, 2048), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, 2048), (38, 67108864), (39, 2097152), (40, 4096), (41, 16777216), (42, 65536), (43, 65536), (44, -1), (45, -1), (46, -1), (47, 8388608), (48, 2097152), (49, 8388608), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 524288), (4, -1), (5, 524288), (6, -1), (7, 67108864), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 8388608), (15, 4194304), (16, 262144), (17, 33554432), (18, 16777216), (19, 557056), (20, -1), (21, 536870912), (22, 131072), (23, 67108864), (24, 268435456), (25, -1), (26, 536870912), (27, 2097152), (28, -1), (29, 524288), (30, 1048576), (31, 8192), (32, -1), (33, 8192), (34, -1), (35, -1), (36, -1), (37, 8192), (38, 67108864), (39, 2097152), (40, 134217728), (41, 67108864), (42, 262144), (43, 262144), (44, -1), (45, -1), (46, -1), (47, 33554432), (48, 8388608), (49, 33554432), (50, -1), (51, -1), (52, -1)]

Covered at level 6 : set()

After reduction : 
 pending  : [23, 38, 5, 29, 31, 37, 42, 43, 47, 48, 49, 41, 40, 7, 24, 27, 39, 3, 19, 16, 22, 15, 18, 14, 17, 21, 26, 30, 33]
 solution : [9, 8]


Solution : [9, 8] has cost 9.


Decide in level 6 among pending : [23, 38, 5, 29, 31, 37, 42, 43, 47, 48, 49, 41, 40, 7, 24, 27, 39, 3, 19, 16, 22, 15, 18, 14, 17, 21, 26, 30, 33]

Coverage : [(0, -1), (1, -1), (2, -1), (3, 524288), (4, -1), (5, 524288), (6, -1), (7, 67108864), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 8388608), (15, 4194304), (16, 262144), (17, 33554432), (18, 16777216), (19, 557056), (20, -1), (21, 536870912), (22, 131072), (23, 67108864), (24, 268435456), (25, -1), (26, 536870912), (27, 2097152), (28, -1), (29, 524288), (30, 1048576), (31, 8192), (32, -1), (33, 8192), (34, -1), (35, -1), (36, -1), (37, 8192), (38, 67108864), (39, 2097152), (40, 134217728), (41, 67108864), (42, 262144), (43, 262144), (44, -1), (45, -1), (46, -1), (47, 33554432), (48, 8388608), (49, 33554432), (50, -1), (51, -1), (52, -1)]

Decide 21 with phase True at level 6

After decision at level 6
 pending : [23, 38, 5, 29, 31, 37, 42, 43, 47, 48, 49, 41, 40, 7, 24, 27, 39, 3, 19, 16, 22, 15, 18, 14, 17, 26, 30, 33]
 solution : [9, 8, 21]


New level: 7
 pending : [23, 38, 5, 29, 31, 37, 42, 43, 47, 48, 49, 41, 40, 7, 24, 27, 39, 3, 19, 16, 22, 15, 18, 14, 17, 26, 30, 33]
 solution : [9, 8, 21]


Before reduction : 
 pending  : [23, 38, 5, 29, 31, 37, 42, 43, 47, 48, 49, 41, 40, 7, 24, 27, 39, 3, 19, 16, 22, 15, 18, 14, 17, 26, 30, 33]
 solution : [9, 8, 21]

Essensial at level 7 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 524288), (4, -1), (5, 524288), (6, -1), (7, 67108864), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 8388608), (15, 4194304), (16, 262144), (17, 33554432), (18, 16777216), (19, 557056), (20, -1), (21, 536870912), (22, 131072), (23, 67108864), (24, 268435456), (25, -1), (26, 536870912), (27, 2097152), (28, -1), (29, 524288), (30, 1048576), (31, 8192), (32, -1), (33, 8192), (34, -1), (35, -1), (36, -1), (37, 8192), (38, 67108864), (39, 2097152), (40, 134217728), (41, 67108864), (42, 262144), (43, 262144), (44, -1), (45, -1), (46, -1), (47, 33554432), (48, 8388608), (49, 33554432), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 0), (4, -1), (5, 131072), (6, -1), (7, 67108864), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 0), (15, 0), (16, 0), (17, 0), (18, 0), (19, 0), (20, -1), (21, -1), (22, 0), (23, 67108864), (24, 268435456), (25, -1), (26, 536870912), (27, 0), (28, -1), (29, 262144), (30, 1048576), (31, 4096), (32, -1), (33, 8192), (34, -1), (35, -1), (36, -1), (37, 2048), (38, 1024), (39, 0), (40, 2048), (41, 33554432), (42, 65536), (43, 65536), (44, -1), (45, -1), (46, -1), (47, 33554432), (48, 8388608), (49, 33554432), (50, -1), (51, -1), (52, -1)]

Covered at level 7 : {3, 39, 14, 15, 16, 17, 18, 19, 22, 27}

After reduction : 
 pending  : [23, 38, 5, 29, 31, 37, 42, 43, 47, 48, 49, 41, 40, 7, 24, 26, 30, 33]
 solution : [9, 8, 21]


Before reduction : 
 pending  : [23, 38, 5, 29, 31, 37, 42, 43, 47, 48, 49, 41, 40, 7, 24, 26, 30, 33]
 solution : [9, 8, 21]

Essensial at level 7 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 0), (4, -1), (5, 131072), (6, -1), (7, 67108864), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 0), (15, 0), (16, 0), (17, 0), (18, 0), (19, 0), (20, -1), (21, -1), (22, 0), (23, 67108864), (24, 268435456), (25, -1), (26, 536870912), (27, 0), (28, -1), (29, 262144), (30, 1048576), (31, 4096), (32, -1), (33, 8192), (34, -1), (35, -1), (36, -1), (37, 2048), (38, 1024), (39, 0), (40, 2048), (41, 33554432), (42, 65536), (43, 65536), (44, -1), (45, -1), (46, -1), (47, 33554432), (48, 8388608), (49, 33554432), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 131072), (6, -1), (7, 67108864), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, 67108864), (24, 268435456), (25, -1), (26, 536870912), (27, -1), (28, -1), (29, 262144), (30, 1048576), (31, 4096), (32, -1), (33, 8192), (34, -1), (35, -1), (36, -1), (37, 2048), (38, 1024), (39, -1), (40, 2048), (41, 33554432), (42, 65536), (43, 65536), (44, -1), (45, -1), (46, -1), (47, 33554432), (48, 8388608), (49, 33554432), (50, -1), (51, -1), (52, -1)]

Covered at level 7 : set()

After reduction : 
 pending  : [23, 38, 5, 29, 31, 37, 42, 43, 47, 48, 49, 41, 40, 7, 24, 26, 30, 33]
 solution : [9, 8, 21]


Solution : [9, 8, 21] has cost 16.


Decide in level 7 among pending : [23, 38, 5, 29, 31, 37, 42, 43, 47, 48, 49, 41, 40, 7, 24, 26, 30, 33]

Coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 131072), (6, -1), (7, 67108864), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, 67108864), (24, 268435456), (25, -1), (26, 536870912), (27, -1), (28, -1), (29, 262144), (30, 1048576), (31, 4096), (32, -1), (33, 8192), (34, -1), (35, -1), (36, -1), (37, 2048), (38, 1024), (39, -1), (40, 2048), (41, 33554432), (42, 65536), (43, 65536), (44, -1), (45, -1), (46, -1), (47, 33554432), (48, 8388608), (49, 33554432), (50, -1), (51, -1), (52, -1)]

Decide 26 with phase True at level 7

After decision at level 7
 pending : [23, 38, 5, 29, 31, 37, 42, 43, 47, 48, 49, 41, 40, 7, 24, 30, 33]
 solution : [9, 8, 21, 26]


New level: 8
 pending : [23, 38, 5, 29, 31, 37, 42, 43, 47, 48, 49, 41, 40, 7, 24, 30, 33]
 solution : [9, 8, 21, 26]


Before reduction : 
 pending  : [23, 38, 5, 29, 31, 37, 42, 43, 47, 48, 49, 41, 40, 7, 24, 30, 33]
 solution : [9, 8, 21, 26]

Essensial at level 8 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 131072), (6, -1), (7, 67108864), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, 67108864), (24, 268435456), (25, -1), (26, 536870912), (27, -1), (28, -1), (29, 262144), (30, 1048576), (31, 4096), (32, -1), (33, 8192), (34, -1), (35, -1), (36, -1), (37, 2048), (38, 1024), (39, -1), (40, 2048), (41, 33554432), (42, 65536), (43, 65536), (44, -1), (45, -1), (46, -1), (47, 33554432), (48, 8388608), (49, 33554432), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 131072), (6, -1), (7, 67108864), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, 67108864), (24, 134217728), (25, -1), (26, -1), (27, -1), (28, -1), (29, 262144), (30, 524288), (31, 4096), (32, -1), (33, 4096), (34, -1), (35, -1), (36, -1), (37, 2048), (38, 1024), (39, -1), (40, 2048), (41, 33554432), (42, 65536), (43, 65536), (44, -1), (45, -1), (46, -1), (47, 33554432), (48, 8388608), (49, 33554432), (50, -1), (51, -1), (52, -1)]

Covered at level 8 : set()

After reduction : 
 pending  : [23, 38, 5, 29, 31, 37, 42, 43, 47, 48, 49, 41, 40, 7, 24, 30, 33]
 solution : [9, 8, 21, 26]


Solution : [9, 8, 21, 26] has cost 20.


Before backtrack at level 8
 pending : [23, 38, 5, 29, 31, 37, 42, 43, 47, 48, 49, 41, 40, 7, 24, 30, 33]
 solution : [9, 8, 21, 26]

After backtrack at level 8
 pending : [23, 38, 5, 29, 31, 37, 42, 43, 47, 48, 49, 41, 40, 7, 24, 30, 33]
 solution : [9, 8, 21, 26]


Invert decision for 26 at level 7


New level: 8
 pending : [23, 38, 5, 29, 31, 37, 42, 43, 47, 48, 49, 41, 40, 7, 24, 30, 33]
 solution : [9, 8, 21]


Before reduction : 
 pending  : [23, 38, 5, 29, 31, 37, 42, 43, 47, 48, 49, 41, 40, 7, 24, 30, 33]
 solution : [9, 8, 21]

Essensial at level 8 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 131072), (6, -1), (7, 67108864), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, 67108864), (24, 134217728), (25, -1), (26, -1), (27, -1), (28, -1), (29, 262144), (30, 524288), (31, 4096), (32, -1), (33, 4096), (34, -1), (35, -1), (36, -1), (37, 2048), (38, 1024), (39, -1), (40, 2048), (41, 33554432), (42, 65536), (43, 65536), (44, -1), (45, -1), (46, -1), (47, 33554432), (48, 8388608), (49, 33554432), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 131072), (6, -1), (7, 67108864), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, 67108864), (24, 268435456), (25, -1), (26, -1), (27, -1), (28, -1), (29, 262144), (30, 1048576), (31, 4096), (32, -1), (33, 8192), (34, -1), (35, -1), (36, -1), (37, 2048), (38, 1024), (39, -1), (40, 2048), (41, 33554432), (42, 65536), (43, 65536), (44, -1), (45, -1), (46, -1), (47, 33554432), (48, 8388608), (49, 33554432), (50, -1), (51, -1), (52, -1)]

Covered at level 8 : set()

After reduction : 
 pending  : [23, 38, 5, 29, 31, 37, 42, 43, 47, 48, 49, 41, 40, 7, 24, 30, 33]
 solution : [9, 8, 21]


Solution : [9, 8, 21] has cost 16.


Decide in level 8 among pending : [23, 38, 5, 29, 31, 37, 42, 43, 47, 48, 49, 41, 40, 7, 24, 30, 33]

Coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 131072), (6, -1), (7, 67108864), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, 67108864), (24, 268435456), (25, -1), (26, -1), (27, -1), (28, -1), (29, 262144), (30, 1048576), (31, 4096), (32, -1), (33, 8192), (34, -1), (35, -1), (36, -1), (37, 2048), (38, 1024), (39, -1), (40, 2048), (41, 33554432), (42, 65536), (43, 65536), (44, -1), (45, -1), (46, -1), (47, 33554432), (48, 8388608), (49, 33554432), (50, -1), (51, -1), (52, -1)]

Decide 24 with phase True at level 8

After decision at level 8
 pending : [23, 38, 5, 29, 31, 37, 42, 43, 47, 48, 49, 41, 40, 7, 30, 33]
 solution : [9, 8, 21, 24]


New level: 9
 pending : [23, 38, 5, 29, 31, 37, 42, 43, 47, 48, 49, 41, 40, 7, 30, 33]
 solution : [9, 8, 21, 24]


Before reduction : 
 pending  : [23, 38, 5, 29, 31, 37, 42, 43, 47, 48, 49, 41, 40, 7, 30, 33]
 solution : [9, 8, 21, 24]

Essensial at level 9 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 131072), (6, -1), (7, 67108864), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, 67108864), (24, 268435456), (25, -1), (26, -1), (27, -1), (28, -1), (29, 262144), (30, 1048576), (31, 4096), (32, -1), (33, 8192), (34, -1), (35, -1), (36, -1), (37, 2048), (38, 1024), (39, -1), (40, 2048), (41, 33554432), (42, 65536), (43, 65536), (44, -1), (45, -1), (46, -1), (47, 33554432), (48, 8388608), (49, 33554432), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 32768), (6, -1), (7, 16777216), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, 16777216), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, 65536), (30, 0), (31, 1024), (32, -1), (33, 0), (34, -1), (35, -1), (36, -1), (37, 512), (38, 512), (39, -1), (40, 0), (41, 16777216), (42, 16384), (43, 16384), (44, -1), (45, -1), (46, -1), (47, 8388608), (48, 2097152), (49, 16777216), (50, -1), (51, -1), (52, -1)]

Covered at level 9 : {40, 33, 30}

After reduction : 
 pending  : [23, 38, 5, 29, 31, 37, 42, 43, 47, 48, 49, 41, 7]
 solution : [9, 8, 21, 24]


Before reduction : 
 pending  : [23, 38, 5, 29, 31, 37, 42, 43, 47, 48, 49, 41, 7]
 solution : [9, 8, 21, 24]

Essensial at level 9 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 32768), (6, -1), (7, 16777216), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, 16777216), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, 65536), (30, 0), (31, 1024), (32, -1), (33, 0), (34, -1), (35, -1), (36, -1), (37, 512), (38, 512), (39, -1), (40, 0), (41, 16777216), (42, 16384), (43, 16384), (44, -1), (45, -1), (46, -1), (47, 8388608), (48, 2097152), (49, 16777216), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 32768), (6, -1), (7, 16777216), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, 16777216), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, 65536), (30, -1), (31, 1024), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, 512), (38, 512), (39, -1), (40, -1), (41, 16777216), (42, 16384), (43, 16384), (44, -1), (45, -1), (46, -1), (47, 8388608), (48, 2097152), (49, 16777216), (50, -1), (51, -1), (52, -1)]

Covered at level 9 : set()

After reduction : 
 pending  : [23, 38, 5, 29, 31, 37, 42, 43, 47, 48, 49, 41, 7]
 solution : [9, 8, 21, 24]


Solution : [9, 8, 21, 24] has cost 23.


Before backtrack at level 9
 pending : [23, 38, 5, 29, 31, 37, 42, 43, 47, 48, 49, 41, 7]
 solution : [9, 8, 21, 24]

After backtrack at level 9
 pending : [23, 38, 5, 29, 31, 37, 42, 43, 47, 48, 49, 41, 7, 40, 30, 33]
 solution : [9, 8, 21, 24]


Invert decision for 24 at level 8


New level: 9
 pending : [23, 38, 5, 29, 31, 37, 42, 43, 47, 48, 49, 41, 7, 40, 30, 33]
 solution : [9, 8, 21]


Before reduction : 
 pending  : [23, 38, 5, 29, 31, 37, 42, 43, 47, 48, 49, 41, 7, 40, 30, 33]
 solution : [9, 8, 21]

Essensial at level 9 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 32768), (6, -1), (7, 16777216), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, 16777216), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, 65536), (30, -1), (31, 1024), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, 512), (38, 512), (39, -1), (40, -1), (41, 16777216), (42, 16384), (43, 16384), (44, -1), (45, -1), (46, -1), (47, 8388608), (48, 2097152), (49, 16777216), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 131072), (6, -1), (7, 67108864), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, 67108864), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, 262144), (30, 1048576), (31, 4096), (32, -1), (33, 8192), (34, -1), (35, -1), (36, -1), (37, 2048), (38, 1024), (39, -1), (40, 2048), (41, 33554432), (42, 65536), (43, 65536), (44, -1), (45, -1), (46, -1), (47, 33554432), (48, 8388608), (49, 33554432), (50, -1), (51, -1), (52, -1)]

Covered at level 9 : set()

After reduction : 
 pending  : [23, 38, 5, 29, 31, 37, 42, 43, 47, 48, 49, 41, 7, 40, 30, 33]
 solution : [9, 8, 21]


Solution : [9, 8, 21] has cost 16.


Decide in level 9 among pending : [23, 38, 5, 29, 31, 37, 42, 43, 47, 48, 49, 41, 7, 40, 30, 33]

Coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 131072), (6, -1), (7, 67108864), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, 67108864), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, 262144), (30, 1048576), (31, 4096), (32, -1), (33, 8192), (34, -1), (35, -1), (36, -1), (37, 2048), (38, 1024), (39, -1), (40, 2048), (41, 33554432), (42, 65536), (43, 65536), (44, -1), (45, -1), (46, -1), (47, 33554432), (48, 8388608), (49, 33554432), (50, -1), (51, -1), (52, -1)]

Decide 23 with phase True at level 9

After decision at level 9
 pending : [38, 5, 29, 31, 37, 42, 43, 47, 48, 49, 41, 7, 40, 30, 33]
 solution : [9, 8, 21, 23]


New level: 10
 pending : [38, 5, 29, 31, 37, 42, 43, 47, 48, 49, 41, 7, 40, 30, 33]
 solution : [9, 8, 21, 23]


Before reduction : 
 pending  : [38, 5, 29, 31, 37, 42, 43, 47, 48, 49, 41, 7, 40, 30, 33]
 solution : [9, 8, 21, 23]

Essensial at level 10 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 131072), (6, -1), (7, 67108864), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, 67108864), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, 262144), (30, 1048576), (31, 4096), (32, -1), (33, 8192), (34, -1), (35, -1), (36, -1), (37, 2048), (38, 1024), (39, -1), (40, 2048), (41, 33554432), (42, 65536), (43, 65536), (44, -1), (45, -1), (46, -1), (47, 33554432), (48, 8388608), (49, 33554432), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 0), (6, -1), (7, 0), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, 0), (30, 0), (31, 0), (32, -1), (33, 0), (34, -1), (35, -1), (36, -1), (37, 0), (38, 0), (39, -1), (40, 0), (41, 0), (42, 0), (43, 0), (44, -1), (45, -1), (46, -1), (47, 0), (48, 0), (49, 0), (50, -1), (51, -1), (52, -1)]

Covered at level 10 : {33, 37, 5, 38, 7, 41, 42, 43, 40, 47, 48, 49, 29, 30, 31}

After reduction : 
 pending  : []
 solution : [9, 8, 21, 23]


Before reduction : 
 pending  : []
 solution : [9, 8, 21, 23]

Essensial at level 10 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 0), (6, -1), (7, 0), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, 0), (30, 0), (31, 0), (32, -1), (33, 0), (34, -1), (35, -1), (36, -1), (37, 0), (38, 0), (39, -1), (40, 0), (41, 0), (42, 0), (43, 0), (44, -1), (45, -1), (46, -1), (47, 0), (48, 0), (49, 0), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 10 : set()

After reduction : 
 pending  : []
 solution : [9, 8, 21, 23]


Solution : [9, 8, 21, 23] has cost 23.


Before backtrack at level 10
 pending : []
 solution : [9, 8, 21, 23]

After backtrack at level 10
 pending : [38, 5, 29, 31, 37, 42, 43, 47, 48, 49, 41, 7, 40, 30, 33]
 solution : [9, 8, 21, 23]


Invert decision for 23 at level 9


New level: 10
 pending : [38, 5, 29, 31, 37, 42, 43, 47, 48, 49, 41, 7, 40, 30, 33]
 solution : [9, 8, 21]


Before reduction : 
 pending  : [38, 5, 29, 31, 37, 42, 43, 47, 48, 49, 41, 7, 40, 30, 33]
 solution : [9, 8, 21]

Essensial at level 10 : {7}

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 0), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, 0), (30, 0), (31, 0), (32, -1), (33, 0), (34, -1), (35, -1), (36, -1), (37, 0), (38, 0), (39, -1), (40, 0), (41, 0), (42, 0), (43, 0), (44, -1), (45, -1), (46, -1), (47, 0), (48, 0), (49, 0), (50, -1), (51, -1), (52, -1)]

Covered at level 10 : {33, 37, 5, 38, 40, 41, 42, 43, 47, 48, 49, 29, 30, 31}

After reduction : 
 pending  : []
 solution : [9, 8, 21, 7]


Before reduction : 
 pending  : []
 solution : [9, 8, 21, 7]

Essensial at level 10 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 0), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, 0), (30, 0), (31, 0), (32, -1), (33, 0), (34, -1), (35, -1), (36, -1), (37, 0), (38, 0), (39, -1), (40, 0), (41, 0), (42, 0), (43, 0), (44, -1), (45, -1), (46, -1), (47, 0), (48, 0), (49, 0), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 10 : set()

After reduction : 
 pending  : []
 solution : [9, 8, 21, 7]


Solution : [9, 8, 21, 7] has cost 20.


Before backtrack at level 10
 pending : []
 solution : [9, 8, 21, 7]

After backtrack at level 10
 pending : [7, 38, 5, 29, 31, 37, 42, 43, 47, 48, 49, 41, 40, 30, 33]
 solution : [9, 8, 21]


Before backtrack at level 9
 pending : [7, 38, 5, 29, 31, 37, 42, 43, 47, 48, 49, 41, 40, 30, 33]
 solution : [9, 8, 21]

After backtrack at level 9
 pending : [7, 38, 5, 29, 31, 37, 42, 43, 47, 48, 49, 41, 40, 30, 33, 23]
 solution : [9, 8, 21]


Before backtrack at level 8
 pending : [7, 38, 5, 29, 31, 37, 42, 43, 47, 48, 49, 41, 40, 30, 33, 23]
 solution : [9, 8, 21]

After backtrack at level 8
 pending : [7, 38, 5, 29, 31, 37, 42, 43, 47, 48, 49, 41, 40, 30, 33, 23, 24]
 solution : [9, 8, 21]


Before backtrack at level 7
 pending : [7, 38, 5, 29, 31, 37, 42, 43, 47, 48, 49, 41, 40, 30, 33, 23, 24]
 solution : [9, 8, 21]

After backtrack at level 7
 pending : [7, 38, 5, 29, 31, 37, 42, 43, 47, 48, 49, 41, 40, 30, 33, 23, 24, 27, 39, 3, 19, 16, 22, 15, 18, 14, 17, 26]
 solution : [9, 8, 21]


Invert decision for 21 at level 6


New level: 7
 pending : [7, 38, 5, 29, 31, 37, 42, 43, 47, 48, 49, 41, 40, 30, 33, 23, 24, 27, 39, 3, 19, 16, 22, 15, 18, 14, 17, 26]
 solution : [9, 8]


Before reduction : 
 pending  : [7, 38, 5, 29, 31, 37, 42, 43, 47, 48, 49, 41, 40, 30, 33, 23, 24, 27, 39, 3, 19, 16, 22, 15, 18, 14, 17, 26]
 solution : [9, 8]

Essensial at level 7 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 524288), (4, -1), (5, 524288), (6, -1), (7, 67108864), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 8388608), (15, 4194304), (16, 262144), (17, 33554432), (18, 16777216), (19, 557056), (20, -1), (21, -1), (22, 131072), (23, 67108864), (24, 268435456), (25, -1), (26, 536870912), (27, 2097152), (28, -1), (29, 524288), (30, 1048576), (31, 8192), (32, -1), (33, 8192), (34, -1), (35, -1), (36, -1), (37, 8192), (38, 67108864), (39, 2097152), (40, 134217728), (41, 67108864), (42, 262144), (43, 262144), (44, -1), (45, -1), (46, -1), (47, 33554432), (48, 8388608), (49, 33554432), (50, -1), (51, -1), (52, -1)]

Covered at level 7 : set()

After reduction : 
 pending  : [7, 38, 5, 29, 31, 37, 42, 43, 47, 48, 49, 41, 40, 30, 33, 23, 24, 27, 39, 3, 19, 16, 22, 15, 18, 14, 17, 26]
 solution : [9, 8]


Solution : [9, 8] has cost 9.


Decide in level 7 among pending : [7, 38, 5, 29, 31, 37, 42, 43, 47, 48, 49, 41, 40, 30, 33, 23, 24, 27, 39, 3, 19, 16, 22, 15, 18, 14, 17, 26]

Coverage : [(0, -1), (1, -1), (2, -1), (3, 524288), (4, -1), (5, 524288), (6, -1), (7, 67108864), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 8388608), (15, 4194304), (16, 262144), (17, 33554432), (18, 16777216), (19, 557056), (20, -1), (21, -1), (22, 131072), (23, 67108864), (24, 268435456), (25, -1), (26, 536870912), (27, 2097152), (28, -1), (29, 524288), (30, 1048576), (31, 8192), (32, -1), (33, 8192), (34, -1), (35, -1), (36, -1), (37, 8192), (38, 67108864), (39, 2097152), (40, 134217728), (41, 67108864), (42, 262144), (43, 262144), (44, -1), (45, -1), (46, -1), (47, 33554432), (48, 8388608), (49, 33554432), (50, -1), (51, -1), (52, -1)]

Decide 26 with phase True at level 7

After decision at level 7
 pending : [7, 38, 5, 29, 31, 37, 42, 43, 47, 48, 49, 41, 40, 30, 33, 23, 24, 27, 39, 3, 19, 16, 22, 15, 18, 14, 17]
 solution : [9, 8, 26]


New level: 8
 pending : [7, 38, 5, 29, 31, 37, 42, 43, 47, 48, 49, 41, 40, 30, 33, 23, 24, 27, 39, 3, 19, 16, 22, 15, 18, 14, 17]
 solution : [9, 8, 26]


Before reduction : 
 pending  : [7, 38, 5, 29, 31, 37, 42, 43, 47, 48, 49, 41, 40, 30, 33, 23, 24, 27, 39, 3, 19, 16, 22, 15, 18, 14, 17]
 solution : [9, 8, 26]

Essensial at level 8 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 524288), (4, -1), (5, 524288), (6, -1), (7, 67108864), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 8388608), (15, 4194304), (16, 262144), (17, 33554432), (18, 16777216), (19, 557056), (20, -1), (21, -1), (22, 131072), (23, 67108864), (24, 268435456), (25, -1), (26, 536870912), (27, 2097152), (28, -1), (29, 524288), (30, 1048576), (31, 8192), (32, -1), (33, 8192), (34, -1), (35, -1), (36, -1), (37, 8192), (38, 67108864), (39, 2097152), (40, 134217728), (41, 67108864), (42, 262144), (43, 262144), (44, -1), (45, -1), (46, -1), (47, 33554432), (48, 8388608), (49, 33554432), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 524288), (4, -1), (5, 524288), (6, -1), (7, 67108864), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 8388608), (15, 4194304), (16, 262144), (17, 33554432), (18, 16777216), (19, 557056), (20, -1), (21, -1), (22, 131072), (23, 67108864), (24, 134217728), (25, -1), (26, -1), (27, 2097152), (28, -1), (29, 524288), (30, 524288), (31, 8192), (32, -1), (33, 4096), (34, -1), (35, -1), (36, -1), (37, 8192), (38, 67108864), (39, 2097152), (40, 134217728), (41, 67108864), (42, 262144), (43, 262144), (44, -1), (45, -1), (46, -1), (47, 33554432), (48, 8388608), (49, 33554432), (50, -1), (51, -1), (52, -1)]

Covered at level 8 : set()

After reduction : 
 pending  : [7, 38, 5, 29, 31, 37, 42, 43, 47, 48, 49, 41, 40, 30, 33, 23, 24, 27, 39, 3, 19, 16, 22, 15, 18, 14, 17]
 solution : [9, 8, 26]


Solution : [9, 8, 26] has cost 13.


Decide in level 8 among pending : [7, 38, 5, 29, 31, 37, 42, 43, 47, 48, 49, 41, 40, 30, 33, 23, 24, 27, 39, 3, 19, 16, 22, 15, 18, 14, 17]

Coverage : [(0, -1), (1, -1), (2, -1), (3, 524288), (4, -1), (5, 524288), (6, -1), (7, 67108864), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 8388608), (15, 4194304), (16, 262144), (17, 33554432), (18, 16777216), (19, 557056), (20, -1), (21, -1), (22, 131072), (23, 67108864), (24, 134217728), (25, -1), (26, -1), (27, 2097152), (28, -1), (29, 524288), (30, 524288), (31, 8192), (32, -1), (33, 4096), (34, -1), (35, -1), (36, -1), (37, 8192), (38, 67108864), (39, 2097152), (40, 134217728), (41, 67108864), (42, 262144), (43, 262144), (44, -1), (45, -1), (46, -1), (47, 33554432), (48, 8388608), (49, 33554432), (50, -1), (51, -1), (52, -1)]

Decide 40 with phase True at level 8

After decision at level 8
 pending : [7, 38, 5, 29, 31, 37, 42, 43, 47, 48, 49, 41, 30, 33, 23, 24, 27, 39, 3, 19, 16, 22, 15, 18, 14, 17]
 solution : [9, 8, 26, 40]


New level: 9
 pending : [7, 38, 5, 29, 31, 37, 42, 43, 47, 48, 49, 41, 30, 33, 23, 24, 27, 39, 3, 19, 16, 22, 15, 18, 14, 17]
 solution : [9, 8, 26, 40]


Before reduction : 
 pending  : [7, 38, 5, 29, 31, 37, 42, 43, 47, 48, 49, 41, 30, 33, 23, 24, 27, 39, 3, 19, 16, 22, 15, 18, 14, 17]
 solution : [9, 8, 26, 40]

Essensial at level 9 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 524288), (4, -1), (5, 524288), (6, -1), (7, 67108864), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 8388608), (15, 4194304), (16, 262144), (17, 33554432), (18, 16777216), (19, 557056), (20, -1), (21, -1), (22, 131072), (23, 67108864), (24, 134217728), (25, -1), (26, -1), (27, 2097152), (28, -1), (29, 524288), (30, 524288), (31, 8192), (32, -1), (33, 4096), (34, -1), (35, -1), (36, -1), (37, 8192), (38, 67108864), (39, 2097152), (40, 134217728), (41, 67108864), (42, 262144), (43, 262144), (44, -1), (45, -1), (46, -1), (47, 33554432), (48, 8388608), (49, 33554432), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 524288), (4, -1), (5, 524288), (6, -1), (7, 67108864), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 8388608), (15, 4194304), (16, 262144), (17, 33554432), (18, 16777216), (19, 557056), (20, -1), (21, -1), (22, 131072), (23, 67108864), (24, 67108864), (25, -1), (26, -1), (27, 2097152), (28, -1), (29, 524288), (30, 262144), (31, 8192), (32, -1), (33, 2048), (34, -1), (35, -1), (36, -1), (37, 8192), (38, 33554432), (39, 2097152), (40, -1), (41, 67108864), (42, 262144), (43, 262144), (44, -1), (45, -1), (46, -1), (47, 33554432), (48, 8388608), (49, 33554432), (50, -1), (51, -1), (52, -1)]

Covered at level 9 : set()

After reduction : 
 pending  : [7, 38, 5, 29, 31, 37, 42, 43, 47, 48, 49, 41, 30, 33, 23, 24, 27, 39, 3, 19, 16, 22, 15, 18, 14, 17]
 solution : [9, 8, 26, 40]


Solution : [9, 8, 26, 40] has cost 27.


Before backtrack at level 9
 pending : [7, 38, 5, 29, 31, 37, 42, 43, 47, 48, 49, 41, 30, 33, 23, 24, 27, 39, 3, 19, 16, 22, 15, 18, 14, 17]
 solution : [9, 8, 26, 40]

After backtrack at level 9
 pending : [7, 38, 5, 29, 31, 37, 42, 43, 47, 48, 49, 41, 30, 33, 23, 24, 27, 39, 3, 19, 16, 22, 15, 18, 14, 17]
 solution : [9, 8, 26, 40]


Invert decision for 40 at level 8


New level: 9
 pending : [7, 38, 5, 29, 31, 37, 42, 43, 47, 48, 49, 41, 30, 33, 23, 24, 27, 39, 3, 19, 16, 22, 15, 18, 14, 17]
 solution : [9, 8, 26]


Before reduction : 
 pending  : [7, 38, 5, 29, 31, 37, 42, 43, 47, 48, 49, 41, 30, 33, 23, 24, 27, 39, 3, 19, 16, 22, 15, 18, 14, 17]
 solution : [9, 8, 26]

Essensial at level 9 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 524288), (4, -1), (5, 524288), (6, -1), (7, 67108864), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 8388608), (15, 4194304), (16, 262144), (17, 33554432), (18, 16777216), (19, 557056), (20, -1), (21, -1), (22, 131072), (23, 67108864), (24, 67108864), (25, -1), (26, -1), (27, 2097152), (28, -1), (29, 524288), (30, 262144), (31, 8192), (32, -1), (33, 2048), (34, -1), (35, -1), (36, -1), (37, 8192), (38, 33554432), (39, 2097152), (40, -1), (41, 67108864), (42, 262144), (43, 262144), (44, -1), (45, -1), (46, -1), (47, 33554432), (48, 8388608), (49, 33554432), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 524288), (4, -1), (5, 524288), (6, -1), (7, 67108864), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 8388608), (15, 4194304), (16, 262144), (17, 33554432), (18, 16777216), (19, 557056), (20, -1), (21, -1), (22, 131072), (23, 67108864), (24, 134217728), (25, -1), (26, -1), (27, 2097152), (28, -1), (29, 524288), (30, 524288), (31, 8192), (32, -1), (33, 4096), (34, -1), (35, -1), (36, -1), (37, 8192), (38, 67108864), (39, 2097152), (40, -1), (41, 67108864), (42, 262144), (43, 262144), (44, -1), (45, -1), (46, -1), (47, 33554432), (48, 8388608), (49, 33554432), (50, -1), (51, -1), (52, -1)]

Covered at level 9 : set()

After reduction : 
 pending  : [7, 38, 5, 29, 31, 37, 42, 43, 47, 48, 49, 41, 30, 33, 23, 24, 27, 39, 3, 19, 16, 22, 15, 18, 14, 17]
 solution : [9, 8, 26]


Solution : [9, 8, 26] has cost 13.


Decide in level 9 among pending : [7, 38, 5, 29, 31, 37, 42, 43, 47, 48, 49, 41, 30, 33, 23, 24, 27, 39, 3, 19, 16, 22, 15, 18, 14, 17]

Coverage : [(0, -1), (1, -1), (2, -1), (3, 524288), (4, -1), (5, 524288), (6, -1), (7, 67108864), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 8388608), (15, 4194304), (16, 262144), (17, 33554432), (18, 16777216), (19, 557056), (20, -1), (21, -1), (22, 131072), (23, 67108864), (24, 134217728), (25, -1), (26, -1), (27, 2097152), (28, -1), (29, 524288), (30, 524288), (31, 8192), (32, -1), (33, 4096), (34, -1), (35, -1), (36, -1), (37, 8192), (38, 67108864), (39, 2097152), (40, -1), (41, 67108864), (42, 262144), (43, 262144), (44, -1), (45, -1), (46, -1), (47, 33554432), (48, 8388608), (49, 33554432), (50, -1), (51, -1), (52, -1)]

Decide 24 with phase True at level 9

After decision at level 9
 pending : [7, 38, 5, 29, 31, 37, 42, 43, 47, 48, 49, 41, 30, 33, 23, 27, 39, 3, 19, 16, 22, 15, 18, 14, 17]
 solution : [9, 8, 26, 24]


New level: 10
 pending : [7, 38, 5, 29, 31, 37, 42, 43, 47, 48, 49, 41, 30, 33, 23, 27, 39, 3, 19, 16, 22, 15, 18, 14, 17]
 solution : [9, 8, 26, 24]


Before reduction : 
 pending  : [7, 38, 5, 29, 31, 37, 42, 43, 47, 48, 49, 41, 30, 33, 23, 27, 39, 3, 19, 16, 22, 15, 18, 14, 17]
 solution : [9, 8, 26, 24]

Essensial at level 10 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 524288), (4, -1), (5, 524288), (6, -1), (7, 67108864), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 8388608), (15, 4194304), (16, 262144), (17, 33554432), (18, 16777216), (19, 557056), (20, -1), (21, -1), (22, 131072), (23, 67108864), (24, 134217728), (25, -1), (26, -1), (27, 2097152), (28, -1), (29, 524288), (30, 524288), (31, 8192), (32, -1), (33, 4096), (34, -1), (35, -1), (36, -1), (37, 8192), (38, 67108864), (39, 2097152), (40, -1), (41, 67108864), (42, 262144), (43, 262144), (44, -1), (45, -1), (46, -1), (47, 33554432), (48, 8388608), (49, 33554432), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 524288), (4, -1), (5, 131072), (6, -1), (7, 16777216), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 8388608), (15, 4194304), (16, 262144), (17, 33554432), (18, 16777216), (19, 557056), (20, -1), (21, -1), (22, 131072), (23, 16777216), (24, -1), (25, -1), (26, -1), (27, 2097152), (28, -1), (29, 131072), (30, 0), (31, 2048), (32, -1), (33, 0), (34, -1), (35, -1), (36, -1), (37, 2048), (38, 67108864), (39, 2097152), (40, -1), (41, 33554432), (42, 65536), (43, 65536), (44, -1), (45, -1), (46, -1), (47, 8388608), (48, 2097152), (49, 16777216), (50, -1), (51, -1), (52, -1)]

Covered at level 10 : {33, 30}

After reduction : 
 pending  : [7, 38, 5, 29, 31, 37, 42, 43, 47, 48, 49, 41, 23, 27, 39, 3, 19, 16, 22, 15, 18, 14, 17]
 solution : [9, 8, 26, 24]


Before reduction : 
 pending  : [7, 38, 5, 29, 31, 37, 42, 43, 47, 48, 49, 41, 23, 27, 39, 3, 19, 16, 22, 15, 18, 14, 17]
 solution : [9, 8, 26, 24]

Essensial at level 10 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 524288), (4, -1), (5, 131072), (6, -1), (7, 16777216), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 8388608), (15, 4194304), (16, 262144), (17, 33554432), (18, 16777216), (19, 557056), (20, -1), (21, -1), (22, 131072), (23, 16777216), (24, -1), (25, -1), (26, -1), (27, 2097152), (28, -1), (29, 131072), (30, 0), (31, 2048), (32, -1), (33, 0), (34, -1), (35, -1), (36, -1), (37, 2048), (38, 67108864), (39, 2097152), (40, -1), (41, 33554432), (42, 65536), (43, 65536), (44, -1), (45, -1), (46, -1), (47, 8388608), (48, 2097152), (49, 16777216), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 524288), (4, -1), (5, 131072), (6, -1), (7, 16777216), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 8388608), (15, 4194304), (16, 262144), (17, 33554432), (18, 16777216), (19, 557056), (20, -1), (21, -1), (22, 131072), (23, 16777216), (24, -1), (25, -1), (26, -1), (27, 2097152), (28, -1), (29, 131072), (30, -1), (31, 2048), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, 2048), (38, 67108864), (39, 2097152), (40, -1), (41, 33554432), (42, 65536), (43, 65536), (44, -1), (45, -1), (46, -1), (47, 8388608), (48, 2097152), (49, 16777216), (50, -1), (51, -1), (52, -1)]

Covered at level 10 : set()

After reduction : 
 pending  : [7, 38, 5, 29, 31, 37, 42, 43, 47, 48, 49, 41, 23, 27, 39, 3, 19, 16, 22, 15, 18, 14, 17]
 solution : [9, 8, 26, 24]


Solution : [9, 8, 26, 24] has cost 20.


Before backtrack at level 10
 pending : [7, 38, 5, 29, 31, 37, 42, 43, 47, 48, 49, 41, 23, 27, 39, 3, 19, 16, 22, 15, 18, 14, 17]
 solution : [9, 8, 26, 24]

After backtrack at level 10
 pending : [7, 38, 5, 29, 31, 37, 42, 43, 47, 48, 49, 41, 23, 27, 39, 3, 19, 16, 22, 15, 18, 14, 17, 30, 33]
 solution : [9, 8, 26, 24]


Invert decision for 24 at level 9


New level: 10
 pending : [7, 38, 5, 29, 31, 37, 42, 43, 47, 48, 49, 41, 23, 27, 39, 3, 19, 16, 22, 15, 18, 14, 17, 30, 33]
 solution : [9, 8, 26]


Before reduction : 
 pending  : [7, 38, 5, 29, 31, 37, 42, 43, 47, 48, 49, 41, 23, 27, 39, 3, 19, 16, 22, 15, 18, 14, 17, 30, 33]
 solution : [9, 8, 26]

Essensial at level 10 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 524288), (4, -1), (5, 131072), (6, -1), (7, 16777216), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 8388608), (15, 4194304), (16, 262144), (17, 33554432), (18, 16777216), (19, 557056), (20, -1), (21, -1), (22, 131072), (23, 16777216), (24, -1), (25, -1), (26, -1), (27, 2097152), (28, -1), (29, 131072), (30, -1), (31, 2048), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, 2048), (38, 67108864), (39, 2097152), (40, -1), (41, 33554432), (42, 65536), (43, 65536), (44, -1), (45, -1), (46, -1), (47, 8388608), (48, 2097152), (49, 16777216), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 524288), (4, -1), (5, 524288), (6, -1), (7, 67108864), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 8388608), (15, 4194304), (16, 262144), (17, 33554432), (18, 16777216), (19, 557056), (20, -1), (21, -1), (22, 131072), (23, 67108864), (24, -1), (25, -1), (26, -1), (27, 2097152), (28, -1), (29, 524288), (30, 524288), (31, 8192), (32, -1), (33, 4096), (34, -1), (35, -1), (36, -1), (37, 8192), (38, 67108864), (39, 2097152), (40, -1), (41, 67108864), (42, 262144), (43, 262144), (44, -1), (45, -1), (46, -1), (47, 33554432), (48, 8388608), (49, 33554432), (50, -1), (51, -1), (52, -1)]

Covered at level 10 : set()

After reduction : 
 pending  : [7, 38, 5, 29, 31, 37, 42, 43, 47, 48, 49, 41, 23, 27, 39, 3, 19, 16, 22, 15, 18, 14, 17, 30, 33]
 solution : [9, 8, 26]


Solution : [9, 8, 26] has cost 13.


Decide in level 10 among pending : [7, 38, 5, 29, 31, 37, 42, 43, 47, 48, 49, 41, 23, 27, 39, 3, 19, 16, 22, 15, 18, 14, 17, 30, 33]

Coverage : [(0, -1), (1, -1), (2, -1), (3, 524288), (4, -1), (5, 524288), (6, -1), (7, 67108864), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 8388608), (15, 4194304), (16, 262144), (17, 33554432), (18, 16777216), (19, 557056), (20, -1), (21, -1), (22, 131072), (23, 67108864), (24, -1), (25, -1), (26, -1), (27, 2097152), (28, -1), (29, 524288), (30, 524288), (31, 8192), (32, -1), (33, 4096), (34, -1), (35, -1), (36, -1), (37, 8192), (38, 67108864), (39, 2097152), (40, -1), (41, 67108864), (42, 262144), (43, 262144), (44, -1), (45, -1), (46, -1), (47, 33554432), (48, 8388608), (49, 33554432), (50, -1), (51, -1), (52, -1)]

Decide 7 with phase True at level 10

After decision at level 10
 pending : [38, 5, 29, 31, 37, 42, 43, 47, 48, 49, 41, 23, 27, 39, 3, 19, 16, 22, 15, 18, 14, 17, 30, 33]
 solution : [9, 8, 26, 7]


New level: 11
 pending : [38, 5, 29, 31, 37, 42, 43, 47, 48, 49, 41, 23, 27, 39, 3, 19, 16, 22, 15, 18, 14, 17, 30, 33]
 solution : [9, 8, 26, 7]


Before reduction : 
 pending  : [38, 5, 29, 31, 37, 42, 43, 47, 48, 49, 41, 23, 27, 39, 3, 19, 16, 22, 15, 18, 14, 17, 30, 33]
 solution : [9, 8, 26, 7]

Essensial at level 11 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 524288), (4, -1), (5, 524288), (6, -1), (7, 67108864), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 8388608), (15, 4194304), (16, 262144), (17, 33554432), (18, 16777216), (19, 557056), (20, -1), (21, -1), (22, 131072), (23, 67108864), (24, -1), (25, -1), (26, -1), (27, 2097152), (28, -1), (29, 524288), (30, 524288), (31, 8192), (32, -1), (33, 4096), (34, -1), (35, -1), (36, -1), (37, 8192), (38, 67108864), (39, 2097152), (40, -1), (41, 67108864), (42, 262144), (43, 262144), (44, -1), (45, -1), (46, -1), (47, 33554432), (48, 8388608), (49, 33554432), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 262144), (4, -1), (5, 0), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 8388608), (15, 4194304), (16, 131072), (17, 16777216), (18, 8388608), (19, 270336), (20, -1), (21, -1), (22, 131072), (23, 0), (24, -1), (25, -1), (26, -1), (27, 2097152), (28, -1), (29, 0), (30, 0), (31, 0), (32, -1), (33, 0), (34, -1), (35, -1), (36, -1), (37, 0), (38, 65536), (39, 2097152), (40, -1), (41, 0), (42, 0), (43, 0), (44, -1), (45, -1), (46, -1), (47, 0), (48, 0), (49, 0), (50, -1), (51, -1), (52, -1)]

Covered at level 11 : {33, 37, 5, 41, 42, 43, 47, 48, 49, 23, 29, 30, 31}

After reduction : 
 pending  : [38, 27, 39, 3, 19, 16, 22, 15, 18, 14, 17]
 solution : [9, 8, 26, 7]


Before reduction : 
 pending  : [38, 27, 39, 3, 19, 16, 22, 15, 18, 14, 17]
 solution : [9, 8, 26, 7]

Essensial at level 11 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 262144), (4, -1), (5, 0), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 8388608), (15, 4194304), (16, 131072), (17, 16777216), (18, 8388608), (19, 270336), (20, -1), (21, -1), (22, 131072), (23, 0), (24, -1), (25, -1), (26, -1), (27, 2097152), (28, -1), (29, 0), (30, 0), (31, 0), (32, -1), (33, 0), (34, -1), (35, -1), (36, -1), (37, 0), (38, 65536), (39, 2097152), (40, -1), (41, 0), (42, 0), (43, 0), (44, -1), (45, -1), (46, -1), (47, 0), (48, 0), (49, 0), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 262144), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 8388608), (15, 4194304), (16, 131072), (17, 16777216), (18, 8388608), (19, 270336), (20, -1), (21, -1), (22, 131072), (23, -1), (24, -1), (25, -1), (26, -1), (27, 2097152), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, 65536), (39, 2097152), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 11 : set()

After reduction : 
 pending  : [38, 27, 39, 3, 19, 16, 22, 15, 18, 14, 17]
 solution : [9, 8, 26, 7]


Solution : [9, 8, 26, 7] has cost 17.


Decide in level 11 among pending : [38, 27, 39, 3, 19, 16, 22, 15, 18, 14, 17]

Coverage : [(0, -1), (1, -1), (2, -1), (3, 262144), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 8388608), (15, 4194304), (16, 131072), (17, 16777216), (18, 8388608), (19, 270336), (20, -1), (21, -1), (22, 131072), (23, -1), (24, -1), (25, -1), (26, -1), (27, 2097152), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, 65536), (39, 2097152), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Decide 17 with phase True at level 11

After decision at level 11
 pending : [38, 27, 39, 3, 19, 16, 22, 15, 18, 14]
 solution : [9, 8, 26, 7, 17]


New level: 12
 pending : [38, 27, 39, 3, 19, 16, 22, 15, 18, 14]
 solution : [9, 8, 26, 7, 17]


Before reduction : 
 pending  : [38, 27, 39, 3, 19, 16, 22, 15, 18, 14]
 solution : [9, 8, 26, 7, 17]

Essensial at level 12 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 262144), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 8388608), (15, 4194304), (16, 131072), (17, 16777216), (18, 8388608), (19, 270336), (20, -1), (21, -1), (22, 131072), (23, -1), (24, -1), (25, -1), (26, -1), (27, 2097152), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, 65536), (39, 2097152), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 0), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 131072), (15, 32768), (16, 0), (17, -1), (18, 0), (19, 0), (20, -1), (21, -1), (22, 32768), (23, -1), (24, -1), (25, -1), (26, -1), (27, 2048), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, 1024), (39, 2048), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 12 : {19, 16, 18, 3}

After reduction : 
 pending  : [38, 27, 39, 22, 15, 14]
 solution : [9, 8, 26, 7, 17]


Before reduction : 
 pending  : [38, 27, 39, 22, 15, 14]
 solution : [9, 8, 26, 7, 17]

Essensial at level 12 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 0), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 131072), (15, 32768), (16, 0), (17, -1), (18, 0), (19, 0), (20, -1), (21, -1), (22, 32768), (23, -1), (24, -1), (25, -1), (26, -1), (27, 2048), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, 1024), (39, 2048), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 131072), (15, 32768), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, 32768), (23, -1), (24, -1), (25, -1), (26, -1), (27, 2048), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, 1024), (39, 2048), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 12 : set()

After reduction : 
 pending  : [38, 27, 39, 22, 15, 14]
 solution : [9, 8, 26, 7, 17]


Solution : [9, 8, 26, 7, 17] has cost 26.


Before backtrack at level 12
 pending : [38, 27, 39, 22, 15, 14]
 solution : [9, 8, 26, 7, 17]

After backtrack at level 12
 pending : [38, 27, 39, 22, 15, 14, 3, 19, 16, 18]
 solution : [9, 8, 26, 7, 17]


Invert decision for 17 at level 11


New level: 12
 pending : [38, 27, 39, 22, 15, 14, 3, 19, 16, 18]
 solution : [9, 8, 26, 7]


Before reduction : 
 pending  : [38, 27, 39, 22, 15, 14, 3, 19, 16, 18]
 solution : [9, 8, 26, 7]

Essensial at level 12 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 131072), (15, 32768), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, 32768), (23, -1), (24, -1), (25, -1), (26, -1), (27, 2048), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, 1024), (39, 2048), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 262144), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 8388608), (15, 4194304), (16, 131072), (17, -1), (18, 8388608), (19, 270336), (20, -1), (21, -1), (22, 131072), (23, -1), (24, -1), (25, -1), (26, -1), (27, 2097152), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, 65536), (39, 2097152), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 12 : set()

After reduction : 
 pending  : [38, 27, 39, 22, 15, 14, 3, 19, 16, 18]
 solution : [9, 8, 26, 7]


Solution : [9, 8, 26, 7] has cost 17.


Decide in level 12 among pending : [38, 27, 39, 22, 15, 14, 3, 19, 16, 18]

Coverage : [(0, -1), (1, -1), (2, -1), (3, 262144), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 8388608), (15, 4194304), (16, 131072), (17, -1), (18, 8388608), (19, 270336), (20, -1), (21, -1), (22, 131072), (23, -1), (24, -1), (25, -1), (26, -1), (27, 2097152), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, 65536), (39, 2097152), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Decide 14 with phase True at level 12

After decision at level 12
 pending : [38, 27, 39, 22, 15, 3, 19, 16, 18]
 solution : [9, 8, 26, 7, 14]


New level: 13
 pending : [38, 27, 39, 22, 15, 3, 19, 16, 18]
 solution : [9, 8, 26, 7, 14]


Before reduction : 
 pending  : [38, 27, 39, 22, 15, 3, 19, 16, 18]
 solution : [9, 8, 26, 7, 14]

Essensial at level 13 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 262144), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 8388608), (15, 4194304), (16, 131072), (17, -1), (18, 8388608), (19, 270336), (20, -1), (21, -1), (22, 131072), (23, -1), (24, -1), (25, -1), (26, -1), (27, 2097152), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, 65536), (39, 2097152), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 131072), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, 0), (16, 0), (17, -1), (18, 2097152), (19, 133120), (20, -1), (21, -1), (22, 0), (23, -1), (24, -1), (25, -1), (26, -1), (27, 524288), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, 1024), (39, 524288), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 13 : {16, 22, 15}

After reduction : 
 pending  : [38, 27, 39, 3, 19, 18]
 solution : [9, 8, 26, 7, 14]


Before reduction : 
 pending  : [38, 27, 39, 3, 19, 18]
 solution : [9, 8, 26, 7, 14]

Essensial at level 13 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 131072), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, 0), (16, 0), (17, -1), (18, 2097152), (19, 133120), (20, -1), (21, -1), (22, 0), (23, -1), (24, -1), (25, -1), (26, -1), (27, 524288), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, 1024), (39, 524288), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 131072), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, 2097152), (19, 133120), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, 524288), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, 1024), (39, 524288), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 13 : set()

After reduction : 
 pending  : [38, 27, 39, 3, 19, 18]
 solution : [9, 8, 26, 7, 14]


Solution : [9, 8, 26, 7, 14] has cost 24.


Before backtrack at level 13
 pending : [38, 27, 39, 3, 19, 18]
 solution : [9, 8, 26, 7, 14]

After backtrack at level 13
 pending : [38, 27, 39, 3, 19, 18, 22, 15, 16]
 solution : [9, 8, 26, 7, 14]


Invert decision for 14 at level 12


New level: 13
 pending : [38, 27, 39, 3, 19, 18, 22, 15, 16]
 solution : [9, 8, 26, 7]


Before reduction : 
 pending  : [38, 27, 39, 3, 19, 18, 22, 15, 16]
 solution : [9, 8, 26, 7]

Essensial at level 13 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 131072), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, 2097152), (19, 133120), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, 524288), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, 1024), (39, 524288), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 262144), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, 4194304), (16, 131072), (17, -1), (18, 8388608), (19, 270336), (20, -1), (21, -1), (22, 131072), (23, -1), (24, -1), (25, -1), (26, -1), (27, 2097152), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, 65536), (39, 2097152), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 13 : set()

After reduction : 
 pending  : [38, 27, 39, 3, 19, 18, 22, 15, 16]
 solution : [9, 8, 26, 7]


Solution : [9, 8, 26, 7] has cost 17.


Decide in level 13 among pending : [38, 27, 39, 3, 19, 18, 22, 15, 16]

Coverage : [(0, -1), (1, -1), (2, -1), (3, 262144), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, 4194304), (16, 131072), (17, -1), (18, 8388608), (19, 270336), (20, -1), (21, -1), (22, 131072), (23, -1), (24, -1), (25, -1), (26, -1), (27, 2097152), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, 65536), (39, 2097152), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Decide 18 with phase True at level 13

After decision at level 13
 pending : [38, 27, 39, 3, 19, 22, 15, 16]
 solution : [9, 8, 26, 7, 18]


New level: 14
 pending : [38, 27, 39, 3, 19, 22, 15, 16]
 solution : [9, 8, 26, 7, 18]


Before reduction : 
 pending  : [38, 27, 39, 3, 19, 22, 15, 16]
 solution : [9, 8, 26, 7, 18]

Essensial at level 14 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 262144), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, 4194304), (16, 131072), (17, -1), (18, 8388608), (19, 270336), (20, -1), (21, -1), (22, 131072), (23, -1), (24, -1), (25, -1), (26, -1), (27, 2097152), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, 65536), (39, 2097152), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 0), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, 32768), (16, 0), (17, -1), (18, -1), (19, 0), (20, -1), (21, -1), (22, 32768), (23, -1), (24, -1), (25, -1), (26, -1), (27, 2048), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, 1024), (39, 2048), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 14 : {19, 16, 3}

After reduction : 
 pending  : [38, 27, 39, 22, 15]
 solution : [9, 8, 26, 7, 18]


Before reduction : 
 pending  : [38, 27, 39, 22, 15]
 solution : [9, 8, 26, 7, 18]

Essensial at level 14 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 0), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, 32768), (16, 0), (17, -1), (18, -1), (19, 0), (20, -1), (21, -1), (22, 32768), (23, -1), (24, -1), (25, -1), (26, -1), (27, 2048), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, 1024), (39, 2048), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, 32768), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, 32768), (23, -1), (24, -1), (25, -1), (26, -1), (27, 2048), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, 1024), (39, 2048), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 14 : set()

After reduction : 
 pending  : [38, 27, 39, 22, 15]
 solution : [9, 8, 26, 7, 18]


Solution : [9, 8, 26, 7, 18] has cost 26.


Before backtrack at level 14
 pending : [38, 27, 39, 22, 15]
 solution : [9, 8, 26, 7, 18]

After backtrack at level 14
 pending : [38, 27, 39, 22, 15, 3, 19, 16]
 solution : [9, 8, 26, 7, 18]


Invert decision for 18 at level 13


New level: 14
 pending : [38, 27, 39, 22, 15, 3, 19, 16]
 solution : [9, 8, 26, 7]


Before reduction : 
 pending  : [38, 27, 39, 22, 15, 3, 19, 16]
 solution : [9, 8, 26, 7]

Essensial at level 14 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, 32768), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, 32768), (23, -1), (24, -1), (25, -1), (26, -1), (27, 2048), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, 1024), (39, 2048), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 262144), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, 4194304), (16, 131072), (17, -1), (18, -1), (19, 270336), (20, -1), (21, -1), (22, 131072), (23, -1), (24, -1), (25, -1), (26, -1), (27, 2097152), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, 65536), (39, 2097152), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 14 : set()

After reduction : 
 pending  : [38, 27, 39, 22, 15, 3, 19, 16]
 solution : [9, 8, 26, 7]


Solution : [9, 8, 26, 7] has cost 17.


Decide in level 14 among pending : [38, 27, 39, 22, 15, 3, 19, 16]

Coverage : [(0, -1), (1, -1), (2, -1), (3, 262144), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, 4194304), (16, 131072), (17, -1), (18, -1), (19, 270336), (20, -1), (21, -1), (22, 131072), (23, -1), (24, -1), (25, -1), (26, -1), (27, 2097152), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, 65536), (39, 2097152), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Decide 15 with phase True at level 14

After decision at level 14
 pending : [38, 27, 39, 22, 3, 19, 16]
 solution : [9, 8, 26, 7, 15]


New level: 15
 pending : [38, 27, 39, 22, 3, 19, 16]
 solution : [9, 8, 26, 7, 15]


Before reduction : 
 pending  : [38, 27, 39, 22, 3, 19, 16]
 solution : [9, 8, 26, 7, 15]

Essensial at level 15 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 262144), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, 4194304), (16, 131072), (17, -1), (18, -1), (19, 270336), (20, -1), (21, -1), (22, 131072), (23, -1), (24, -1), (25, -1), (26, -1), (27, 2097152), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, 65536), (39, 2097152), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 131072), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, 0), (17, -1), (18, -1), (19, 133120), (20, -1), (21, -1), (22, 0), (23, -1), (24, -1), (25, -1), (26, -1), (27, 524288), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, 1024), (39, 524288), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 15 : {16, 22}

After reduction : 
 pending  : [38, 27, 39, 3, 19]
 solution : [9, 8, 26, 7, 15]


Before reduction : 
 pending  : [38, 27, 39, 3, 19]
 solution : [9, 8, 26, 7, 15]

Essensial at level 15 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 131072), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, 0), (17, -1), (18, -1), (19, 133120), (20, -1), (21, -1), (22, 0), (23, -1), (24, -1), (25, -1), (26, -1), (27, 524288), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, 1024), (39, 524288), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 131072), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, 133120), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, 524288), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, 1024), (39, 524288), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 15 : set()

After reduction : 
 pending  : [38, 27, 39, 3, 19]
 solution : [9, 8, 26, 7, 15]


Solution : [9, 8, 26, 7, 15] has cost 24.


Before backtrack at level 15
 pending : [38, 27, 39, 3, 19]
 solution : [9, 8, 26, 7, 15]

After backtrack at level 15
 pending : [38, 27, 39, 3, 19, 22, 16]
 solution : [9, 8, 26, 7, 15]


Invert decision for 15 at level 14


New level: 15
 pending : [38, 27, 39, 3, 19, 22, 16]
 solution : [9, 8, 26, 7]


Before reduction : 
 pending  : [38, 27, 39, 3, 19, 22, 16]
 solution : [9, 8, 26, 7]

Essensial at level 15 : {22}

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 131072), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, 133120), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, 524288), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, 1024), (39, 524288), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 262144), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, 65536), (17, -1), (18, -1), (19, 270336), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, 2097152), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, 65536), (39, 2097152), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 15 : set()

After reduction : 
 pending  : [38, 27, 39, 3, 19, 16]
 solution : [9, 8, 26, 7, 22]


Before reduction : 
 pending  : [38, 27, 39, 3, 19, 16]
 solution : [9, 8, 26, 7, 22]

Essensial at level 15 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 262144), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, 65536), (17, -1), (18, -1), (19, 270336), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, 2097152), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, 65536), (39, 2097152), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 262144), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, 65536), (17, -1), (18, -1), (19, 270336), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, 2097152), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, 65536), (39, 2097152), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 15 : set()

After reduction : 
 pending  : [38, 27, 39, 3, 19, 16]
 solution : [9, 8, 26, 7, 22]


Solution : [9, 8, 26, 7, 22] has cost 24.


Before backtrack at level 15
 pending : [38, 27, 39, 3, 19, 16]
 solution : [9, 8, 26, 7, 22]

After backtrack at level 15
 pending : [38, 27, 39, 3, 19, 16, 22]
 solution : [9, 8, 26, 7]


Before backtrack at level 14
 pending : [38, 27, 39, 3, 19, 16, 22]
 solution : [9, 8, 26, 7]

After backtrack at level 14
 pending : [38, 27, 39, 3, 19, 16, 22, 15]
 solution : [9, 8, 26, 7]


Before backtrack at level 13
 pending : [38, 27, 39, 3, 19, 16, 22, 15]
 solution : [9, 8, 26, 7]

After backtrack at level 13
 pending : [38, 27, 39, 3, 19, 16, 22, 15, 18]
 solution : [9, 8, 26, 7]


Before backtrack at level 12
 pending : [38, 27, 39, 3, 19, 16, 22, 15, 18]
 solution : [9, 8, 26, 7]

After backtrack at level 12
 pending : [38, 27, 39, 3, 19, 16, 22, 15, 18, 14]
 solution : [9, 8, 26, 7]


Before backtrack at level 11
 pending : [38, 27, 39, 3, 19, 16, 22, 15, 18, 14]
 solution : [9, 8, 26, 7]

After backtrack at level 11
 pending : [38, 27, 39, 3, 19, 16, 22, 15, 18, 14, 5, 29, 31, 37, 42, 43, 47, 48, 49, 41, 23, 30, 33, 17]
 solution : [9, 8, 26, 7]


Invert decision for 7 at level 10


New level: 11
 pending : [38, 27, 39, 3, 19, 16, 22, 15, 18, 14, 5, 29, 31, 37, 42, 43, 47, 48, 49, 41, 23, 30, 33, 17]
 solution : [9, 8, 26]


Before reduction : 
 pending  : [38, 27, 39, 3, 19, 16, 22, 15, 18, 14, 5, 29, 31, 37, 42, 43, 47, 48, 49, 41, 23, 30, 33, 17]
 solution : [9, 8, 26]

Essensial at level 11 : {23}

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 262144), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, 65536), (17, -1), (18, -1), (19, 270336), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, 2097152), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, 65536), (39, 2097152), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 262144), (4, -1), (5, 0), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 8388608), (15, 4194304), (16, 131072), (17, 16777216), (18, 8388608), (19, 270336), (20, -1), (21, -1), (22, 131072), (23, -1), (24, -1), (25, -1), (26, -1), (27, 2097152), (28, -1), (29, 0), (30, 0), (31, 0), (32, -1), (33, 0), (34, -1), (35, -1), (36, -1), (37, 0), (38, 524288), (39, 2097152), (40, -1), (41, 0), (42, 0), (43, 0), (44, -1), (45, -1), (46, -1), (47, 0), (48, 0), (49, 0), (50, -1), (51, -1), (52, -1)]

Covered at level 11 : {33, 37, 5, 41, 42, 43, 47, 48, 49, 29, 30, 31}

After reduction : 
 pending  : [38, 27, 39, 3, 19, 16, 22, 15, 18, 14, 17]
 solution : [9, 8, 26, 23]


Before reduction : 
 pending  : [38, 27, 39, 3, 19, 16, 22, 15, 18, 14, 17]
 solution : [9, 8, 26, 23]

Essensial at level 11 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 262144), (4, -1), (5, 0), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 8388608), (15, 4194304), (16, 131072), (17, 16777216), (18, 8388608), (19, 270336), (20, -1), (21, -1), (22, 131072), (23, -1), (24, -1), (25, -1), (26, -1), (27, 2097152), (28, -1), (29, 0), (30, 0), (31, 0), (32, -1), (33, 0), (34, -1), (35, -1), (36, -1), (37, 0), (38, 524288), (39, 2097152), (40, -1), (41, 0), (42, 0), (43, 0), (44, -1), (45, -1), (46, -1), (47, 0), (48, 0), (49, 0), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 262144), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 8388608), (15, 4194304), (16, 131072), (17, 16777216), (18, 8388608), (19, 270336), (20, -1), (21, -1), (22, 131072), (23, -1), (24, -1), (25, -1), (26, -1), (27, 2097152), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, 524288), (39, 2097152), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 11 : set()

After reduction : 
 pending  : [38, 27, 39, 3, 19, 16, 22, 15, 18, 14, 17]
 solution : [9, 8, 26, 23]


Solution : [9, 8, 26, 23] has cost 20.


Before backtrack at level 11
 pending : [38, 27, 39, 3, 19, 16, 22, 15, 18, 14, 17]
 solution : [9, 8, 26, 23]

After backtrack at level 11
 pending : [38, 27, 39, 3, 19, 16, 22, 15, 18, 14, 17, 23, 5, 29, 31, 37, 42, 43, 47, 48, 49, 41, 30, 33]
 solution : [9, 8, 26]


Before backtrack at level 10
 pending : [38, 27, 39, 3, 19, 16, 22, 15, 18, 14, 17, 23, 5, 29, 31, 37, 42, 43, 47, 48, 49, 41, 30, 33]
 solution : [9, 8, 26]

After backtrack at level 10
 pending : [38, 27, 39, 3, 19, 16, 22, 15, 18, 14, 17, 23, 5, 29, 31, 37, 42, 43, 47, 48, 49, 41, 30, 33, 7]
 solution : [9, 8, 26]


Before backtrack at level 9
 pending : [38, 27, 39, 3, 19, 16, 22, 15, 18, 14, 17, 23, 5, 29, 31, 37, 42, 43, 47, 48, 49, 41, 30, 33, 7]
 solution : [9, 8, 26]

After backtrack at level 9
 pending : [38, 27, 39, 3, 19, 16, 22, 15, 18, 14, 17, 23, 5, 29, 31, 37, 42, 43, 47, 48, 49, 41, 30, 33, 7, 24]
 solution : [9, 8, 26]


Before backtrack at level 8
 pending : [38, 27, 39, 3, 19, 16, 22, 15, 18, 14, 17, 23, 5, 29, 31, 37, 42, 43, 47, 48, 49, 41, 30, 33, 7, 24]
 solution : [9, 8, 26]

After backtrack at level 8
 pending : [38, 27, 39, 3, 19, 16, 22, 15, 18, 14, 17, 23, 5, 29, 31, 37, 42, 43, 47, 48, 49, 41, 30, 33, 7, 24, 40]
 solution : [9, 8, 26]


Invert decision for 26 at level 7


New level: 8
 pending : [38, 27, 39, 3, 19, 16, 22, 15, 18, 14, 17, 23, 5, 29, 31, 37, 42, 43, 47, 48, 49, 41, 30, 33, 7, 24, 40]
 solution : [9, 8]


Before reduction : 
 pending  : [38, 27, 39, 3, 19, 16, 22, 15, 18, 14, 17, 23, 5, 29, 31, 37, 42, 43, 47, 48, 49, 41, 30, 33, 7, 24, 40]
 solution : [9, 8]

Essensial at level 8 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 262144), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 8388608), (15, 4194304), (16, 131072), (17, 16777216), (18, 8388608), (19, 270336), (20, -1), (21, -1), (22, 131072), (23, -1), (24, -1), (25, -1), (26, -1), (27, 2097152), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, 524288), (39, 2097152), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 524288), (4, -1), (5, 524288), (6, -1), (7, 67108864), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 8388608), (15, 4194304), (16, 262144), (17, 33554432), (18, 16777216), (19, 557056), (20, -1), (21, -1), (22, 131072), (23, 67108864), (24, 268435456), (25, -1), (26, -1), (27, 2097152), (28, -1), (29, 524288), (30, 1048576), (31, 8192), (32, -1), (33, 8192), (34, -1), (35, -1), (36, -1), (37, 8192), (38, 67108864), (39, 2097152), (40, 134217728), (41, 67108864), (42, 262144), (43, 262144), (44, -1), (45, -1), (46, -1), (47, 33554432), (48, 8388608), (49, 33554432), (50, -1), (51, -1), (52, -1)]

Covered at level 8 : set()

After reduction : 
 pending  : [38, 27, 39, 3, 19, 16, 22, 15, 18, 14, 17, 23, 5, 29, 31, 37, 42, 43, 47, 48, 49, 41, 30, 33, 7, 24, 40]
 solution : [9, 8]


Solution : [9, 8] has cost 9.


Decide in level 8 among pending : [38, 27, 39, 3, 19, 16, 22, 15, 18, 14, 17, 23, 5, 29, 31, 37, 42, 43, 47, 48, 49, 41, 30, 33, 7, 24, 40]

Coverage : [(0, -1), (1, -1), (2, -1), (3, 524288), (4, -1), (5, 524288), (6, -1), (7, 67108864), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 8388608), (15, 4194304), (16, 262144), (17, 33554432), (18, 16777216), (19, 557056), (20, -1), (21, -1), (22, 131072), (23, 67108864), (24, 268435456), (25, -1), (26, -1), (27, 2097152), (28, -1), (29, 524288), (30, 1048576), (31, 8192), (32, -1), (33, 8192), (34, -1), (35, -1), (36, -1), (37, 8192), (38, 67108864), (39, 2097152), (40, 134217728), (41, 67108864), (42, 262144), (43, 262144), (44, -1), (45, -1), (46, -1), (47, 33554432), (48, 8388608), (49, 33554432), (50, -1), (51, -1), (52, -1)]

Decide 24 with phase True at level 8

After decision at level 8
 pending : [38, 27, 39, 3, 19, 16, 22, 15, 18, 14, 17, 23, 5, 29, 31, 37, 42, 43, 47, 48, 49, 41, 30, 33, 7, 40]
 solution : [9, 8, 24]


New level: 9
 pending : [38, 27, 39, 3, 19, 16, 22, 15, 18, 14, 17, 23, 5, 29, 31, 37, 42, 43, 47, 48, 49, 41, 30, 33, 7, 40]
 solution : [9, 8, 24]


Before reduction : 
 pending  : [38, 27, 39, 3, 19, 16, 22, 15, 18, 14, 17, 23, 5, 29, 31, 37, 42, 43, 47, 48, 49, 41, 30, 33, 7, 40]
 solution : [9, 8, 24]

Essensial at level 9 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 524288), (4, -1), (5, 524288), (6, -1), (7, 67108864), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 8388608), (15, 4194304), (16, 262144), (17, 33554432), (18, 16777216), (19, 557056), (20, -1), (21, -1), (22, 131072), (23, 67108864), (24, 268435456), (25, -1), (26, -1), (27, 2097152), (28, -1), (29, 524288), (30, 1048576), (31, 8192), (32, -1), (33, 8192), (34, -1), (35, -1), (36, -1), (37, 8192), (38, 67108864), (39, 2097152), (40, 134217728), (41, 67108864), (42, 262144), (43, 262144), (44, -1), (45, -1), (46, -1), (47, 33554432), (48, 8388608), (49, 33554432), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 524288), (4, -1), (5, 131072), (6, -1), (7, 16777216), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 8388608), (15, 4194304), (16, 262144), (17, 33554432), (18, 16777216), (19, 557056), (20, -1), (21, -1), (22, 131072), (23, 16777216), (24, -1), (25, -1), (26, -1), (27, 2097152), (28, -1), (29, 131072), (30, 0), (31, 2048), (32, -1), (33, 0), (34, -1), (35, -1), (36, -1), (37, 2048), (38, 67108864), (39, 2097152), (40, 512), (41, 33554432), (42, 65536), (43, 65536), (44, -1), (45, -1), (46, -1), (47, 8388608), (48, 2097152), (49, 16777216), (50, -1), (51, -1), (52, -1)]

Covered at level 9 : {33, 30}

After reduction : 
 pending  : [38, 27, 39, 3, 19, 16, 22, 15, 18, 14, 17, 23, 5, 29, 31, 37, 42, 43, 47, 48, 49, 41, 7, 40]
 solution : [9, 8, 24]


Before reduction : 
 pending  : [38, 27, 39, 3, 19, 16, 22, 15, 18, 14, 17, 23, 5, 29, 31, 37, 42, 43, 47, 48, 49, 41, 7, 40]
 solution : [9, 8, 24]

Essensial at level 9 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 524288), (4, -1), (5, 131072), (6, -1), (7, 16777216), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 8388608), (15, 4194304), (16, 262144), (17, 33554432), (18, 16777216), (19, 557056), (20, -1), (21, -1), (22, 131072), (23, 16777216), (24, -1), (25, -1), (26, -1), (27, 2097152), (28, -1), (29, 131072), (30, 0), (31, 2048), (32, -1), (33, 0), (34, -1), (35, -1), (36, -1), (37, 2048), (38, 67108864), (39, 2097152), (40, 512), (41, 33554432), (42, 65536), (43, 65536), (44, -1), (45, -1), (46, -1), (47, 8388608), (48, 2097152), (49, 16777216), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 524288), (4, -1), (5, 131072), (6, -1), (7, 16777216), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 8388608), (15, 4194304), (16, 262144), (17, 33554432), (18, 16777216), (19, 557056), (20, -1), (21, -1), (22, 131072), (23, 16777216), (24, -1), (25, -1), (26, -1), (27, 2097152), (28, -1), (29, 131072), (30, -1), (31, 2048), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, 2048), (38, 67108864), (39, 2097152), (40, 512), (41, 33554432), (42, 65536), (43, 65536), (44, -1), (45, -1), (46, -1), (47, 8388608), (48, 2097152), (49, 16777216), (50, -1), (51, -1), (52, -1)]

Covered at level 9 : set()

After reduction : 
 pending  : [38, 27, 39, 3, 19, 16, 22, 15, 18, 14, 17, 23, 5, 29, 31, 37, 42, 43, 47, 48, 49, 41, 7, 40]
 solution : [9, 8, 24]


Solution : [9, 8, 24] has cost 16.


Decide in level 9 among pending : [38, 27, 39, 3, 19, 16, 22, 15, 18, 14, 17, 23, 5, 29, 31, 37, 42, 43, 47, 48, 49, 41, 7, 40]

Coverage : [(0, -1), (1, -1), (2, -1), (3, 524288), (4, -1), (5, 131072), (6, -1), (7, 16777216), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 8388608), (15, 4194304), (16, 262144), (17, 33554432), (18, 16777216), (19, 557056), (20, -1), (21, -1), (22, 131072), (23, 16777216), (24, -1), (25, -1), (26, -1), (27, 2097152), (28, -1), (29, 131072), (30, -1), (31, 2048), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, 2048), (38, 67108864), (39, 2097152), (40, 512), (41, 33554432), (42, 65536), (43, 65536), (44, -1), (45, -1), (46, -1), (47, 8388608), (48, 2097152), (49, 16777216), (50, -1), (51, -1), (52, -1)]

Decide 38 with phase True at level 9

After decision at level 9
 pending : [27, 39, 3, 19, 16, 22, 15, 18, 14, 17, 23, 5, 29, 31, 37, 42, 43, 47, 48, 49, 41, 7, 40]
 solution : [9, 8, 24, 38]


New level: 10
 pending : [27, 39, 3, 19, 16, 22, 15, 18, 14, 17, 23, 5, 29, 31, 37, 42, 43, 47, 48, 49, 41, 7, 40]
 solution : [9, 8, 24, 38]


Before reduction : 
 pending  : [27, 39, 3, 19, 16, 22, 15, 18, 14, 17, 23, 5, 29, 31, 37, 42, 43, 47, 48, 49, 41, 7, 40]
 solution : [9, 8, 24, 38]

Essensial at level 10 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 524288), (4, -1), (5, 131072), (6, -1), (7, 16777216), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 8388608), (15, 4194304), (16, 262144), (17, 33554432), (18, 16777216), (19, 557056), (20, -1), (21, -1), (22, 131072), (23, 16777216), (24, -1), (25, -1), (26, -1), (27, 2097152), (28, -1), (29, 131072), (30, -1), (31, 2048), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, 2048), (38, 67108864), (39, 2097152), (40, 512), (41, 33554432), (42, 65536), (43, 65536), (44, -1), (45, -1), (46, -1), (47, 8388608), (48, 2097152), (49, 16777216), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 262144), (4, -1), (5, 32768), (6, -1), (7, 4194304), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 8388608), (15, 4194304), (16, 131072), (17, 16777216), (18, 8388608), (19, 270336), (20, -1), (21, -1), (22, 131072), (23, 4194304), (24, -1), (25, -1), (26, -1), (27, 524288), (28, -1), (29, 32768), (30, -1), (31, 512), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, 512), (38, -1), (39, 524288), (40, 0), (41, 33554432), (42, 16384), (43, 16384), (44, -1), (45, -1), (46, -1), (47, 4194304), (48, 524288), (49, 16777216), (50, -1), (51, -1), (52, -1)]

Covered at level 10 : {40}

After reduction : 
 pending  : [27, 39, 3, 19, 16, 22, 15, 18, 14, 17, 23, 5, 29, 31, 37, 42, 43, 47, 48, 49, 41, 7]
 solution : [9, 8, 24, 38]


Before reduction : 
 pending  : [27, 39, 3, 19, 16, 22, 15, 18, 14, 17, 23, 5, 29, 31, 37, 42, 43, 47, 48, 49, 41, 7]
 solution : [9, 8, 24, 38]

Essensial at level 10 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 262144), (4, -1), (5, 32768), (6, -1), (7, 4194304), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 8388608), (15, 4194304), (16, 131072), (17, 16777216), (18, 8388608), (19, 270336), (20, -1), (21, -1), (22, 131072), (23, 4194304), (24, -1), (25, -1), (26, -1), (27, 524288), (28, -1), (29, 32768), (30, -1), (31, 512), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, 512), (38, -1), (39, 524288), (40, 0), (41, 33554432), (42, 16384), (43, 16384), (44, -1), (45, -1), (46, -1), (47, 4194304), (48, 524288), (49, 16777216), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 262144), (4, -1), (5, 32768), (6, -1), (7, 4194304), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 8388608), (15, 4194304), (16, 131072), (17, 16777216), (18, 8388608), (19, 270336), (20, -1), (21, -1), (22, 131072), (23, 4194304), (24, -1), (25, -1), (26, -1), (27, 524288), (28, -1), (29, 32768), (30, -1), (31, 512), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, 512), (38, -1), (39, 524288), (40, -1), (41, 33554432), (42, 16384), (43, 16384), (44, -1), (45, -1), (46, -1), (47, 4194304), (48, 524288), (49, 16777216), (50, -1), (51, -1), (52, -1)]

Covered at level 10 : set()

After reduction : 
 pending  : [27, 39, 3, 19, 16, 22, 15, 18, 14, 17, 23, 5, 29, 31, 37, 42, 43, 47, 48, 49, 41, 7]
 solution : [9, 8, 24, 38]


Solution : [9, 8, 24, 38] has cost 34.


Before backtrack at level 10
 pending : [27, 39, 3, 19, 16, 22, 15, 18, 14, 17, 23, 5, 29, 31, 37, 42, 43, 47, 48, 49, 41, 7]
 solution : [9, 8, 24, 38]

After backtrack at level 10
 pending : [27, 39, 3, 19, 16, 22, 15, 18, 14, 17, 23, 5, 29, 31, 37, 42, 43, 47, 48, 49, 41, 7, 40]
 solution : [9, 8, 24, 38]


Invert decision for 38 at level 9


New level: 10
 pending : [27, 39, 3, 19, 16, 22, 15, 18, 14, 17, 23, 5, 29, 31, 37, 42, 43, 47, 48, 49, 41, 7, 40]
 solution : [9, 8, 24]


Before reduction : 
 pending  : [27, 39, 3, 19, 16, 22, 15, 18, 14, 17, 23, 5, 29, 31, 37, 42, 43, 47, 48, 49, 41, 7, 40]
 solution : [9, 8, 24]

Essensial at level 10 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 262144), (4, -1), (5, 32768), (6, -1), (7, 4194304), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 8388608), (15, 4194304), (16, 131072), (17, 16777216), (18, 8388608), (19, 270336), (20, -1), (21, -1), (22, 131072), (23, 4194304), (24, -1), (25, -1), (26, -1), (27, 524288), (28, -1), (29, 32768), (30, -1), (31, 512), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, 512), (38, -1), (39, 524288), (40, -1), (41, 33554432), (42, 16384), (43, 16384), (44, -1), (45, -1), (46, -1), (47, 4194304), (48, 524288), (49, 16777216), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 524288), (4, -1), (5, 131072), (6, -1), (7, 16777216), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 8388608), (15, 4194304), (16, 262144), (17, 33554432), (18, 16777216), (19, 557056), (20, -1), (21, -1), (22, 131072), (23, 16777216), (24, -1), (25, -1), (26, -1), (27, 2097152), (28, -1), (29, 131072), (30, -1), (31, 2048), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, 2048), (38, -1), (39, 2097152), (40, 512), (41, 33554432), (42, 65536), (43, 65536), (44, -1), (45, -1), (46, -1), (47, 8388608), (48, 2097152), (49, 16777216), (50, -1), (51, -1), (52, -1)]

Covered at level 10 : set()

After reduction : 
 pending  : [27, 39, 3, 19, 16, 22, 15, 18, 14, 17, 23, 5, 29, 31, 37, 42, 43, 47, 48, 49, 41, 7, 40]
 solution : [9, 8, 24]


Solution : [9, 8, 24] has cost 16.


Decide in level 10 among pending : [27, 39, 3, 19, 16, 22, 15, 18, 14, 17, 23, 5, 29, 31, 37, 42, 43, 47, 48, 49, 41, 7, 40]

Coverage : [(0, -1), (1, -1), (2, -1), (3, 524288), (4, -1), (5, 131072), (6, -1), (7, 16777216), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 8388608), (15, 4194304), (16, 262144), (17, 33554432), (18, 16777216), (19, 557056), (20, -1), (21, -1), (22, 131072), (23, 16777216), (24, -1), (25, -1), (26, -1), (27, 2097152), (28, -1), (29, 131072), (30, -1), (31, 2048), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, 2048), (38, -1), (39, 2097152), (40, 512), (41, 33554432), (42, 65536), (43, 65536), (44, -1), (45, -1), (46, -1), (47, 8388608), (48, 2097152), (49, 16777216), (50, -1), (51, -1), (52, -1)]

Decide 17 with phase True at level 10

After decision at level 10
 pending : [27, 39, 3, 19, 16, 22, 15, 18, 14, 23, 5, 29, 31, 37, 42, 43, 47, 48, 49, 41, 7, 40]
 solution : [9, 8, 24, 17]


New level: 11
 pending : [27, 39, 3, 19, 16, 22, 15, 18, 14, 23, 5, 29, 31, 37, 42, 43, 47, 48, 49, 41, 7, 40]
 solution : [9, 8, 24, 17]


Before reduction : 
 pending  : [27, 39, 3, 19, 16, 22, 15, 18, 14, 23, 5, 29, 31, 37, 42, 43, 47, 48, 49, 41, 7, 40]
 solution : [9, 8, 24, 17]

Essensial at level 11 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 524288), (4, -1), (5, 131072), (6, -1), (7, 16777216), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 8388608), (15, 4194304), (16, 262144), (17, 33554432), (18, 16777216), (19, 557056), (20, -1), (21, -1), (22, 131072), (23, 16777216), (24, -1), (25, -1), (26, -1), (27, 2097152), (28, -1), (29, 131072), (30, -1), (31, 2048), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, 2048), (38, -1), (39, 2097152), (40, 512), (41, 33554432), (42, 65536), (43, 65536), (44, -1), (45, -1), (46, -1), (47, 8388608), (48, 2097152), (49, 16777216), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 0), (4, -1), (5, 32768), (6, -1), (7, 16777216), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 131072), (15, 32768), (16, 0), (17, -1), (18, 0), (19, 0), (20, -1), (21, -1), (22, 32768), (23, 16777216), (24, -1), (25, -1), (26, -1), (27, 2048), (28, -1), (29, 65536), (30, -1), (31, 1024), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, 512), (38, -1), (39, 2048), (40, 512), (41, 33554432), (42, 32768), (43, 32768), (44, -1), (45, -1), (46, -1), (47, 8388608), (48, 2097152), (49, 16777216), (50, -1), (51, -1), (52, -1)]

Covered at level 11 : {19, 16, 18, 3}

After reduction : 
 pending  : [27, 39, 22, 15, 14, 23, 5, 29, 31, 37, 42, 43, 47, 48, 49, 41, 7, 40]
 solution : [9, 8, 24, 17]


Before reduction : 
 pending  : [27, 39, 22, 15, 14, 23, 5, 29, 31, 37, 42, 43, 47, 48, 49, 41, 7, 40]
 solution : [9, 8, 24, 17]

Essensial at level 11 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 0), (4, -1), (5, 32768), (6, -1), (7, 16777216), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 131072), (15, 32768), (16, 0), (17, -1), (18, 0), (19, 0), (20, -1), (21, -1), (22, 32768), (23, 16777216), (24, -1), (25, -1), (26, -1), (27, 2048), (28, -1), (29, 65536), (30, -1), (31, 1024), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, 512), (38, -1), (39, 2048), (40, 512), (41, 33554432), (42, 32768), (43, 32768), (44, -1), (45, -1), (46, -1), (47, 8388608), (48, 2097152), (49, 16777216), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 32768), (6, -1), (7, 16777216), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 131072), (15, 32768), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, 32768), (23, 16777216), (24, -1), (25, -1), (26, -1), (27, 2048), (28, -1), (29, 65536), (30, -1), (31, 1024), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, 512), (38, -1), (39, 2048), (40, 512), (41, 33554432), (42, 32768), (43, 32768), (44, -1), (45, -1), (46, -1), (47, 8388608), (48, 2097152), (49, 16777216), (50, -1), (51, -1), (52, -1)]

Covered at level 11 : set()

After reduction : 
 pending  : [27, 39, 22, 15, 14, 23, 5, 29, 31, 37, 42, 43, 47, 48, 49, 41, 7, 40]
 solution : [9, 8, 24, 17]


Solution : [9, 8, 24, 17] has cost 25.


Before backtrack at level 11
 pending : [27, 39, 22, 15, 14, 23, 5, 29, 31, 37, 42, 43, 47, 48, 49, 41, 7, 40]
 solution : [9, 8, 24, 17]

After backtrack at level 11
 pending : [27, 39, 22, 15, 14, 23, 5, 29, 31, 37, 42, 43, 47, 48, 49, 41, 7, 40, 3, 19, 16, 18]
 solution : [9, 8, 24, 17]


Invert decision for 17 at level 10


New level: 11
 pending : [27, 39, 22, 15, 14, 23, 5, 29, 31, 37, 42, 43, 47, 48, 49, 41, 7, 40, 3, 19, 16, 18]
 solution : [9, 8, 24]


Before reduction : 
 pending  : [27, 39, 22, 15, 14, 23, 5, 29, 31, 37, 42, 43, 47, 48, 49, 41, 7, 40, 3, 19, 16, 18]
 solution : [9, 8, 24]

Essensial at level 11 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 32768), (6, -1), (7, 16777216), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 131072), (15, 32768), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, 32768), (23, 16777216), (24, -1), (25, -1), (26, -1), (27, 2048), (28, -1), (29, 65536), (30, -1), (31, 1024), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, 512), (38, -1), (39, 2048), (40, 512), (41, 33554432), (42, 32768), (43, 32768), (44, -1), (45, -1), (46, -1), (47, 8388608), (48, 2097152), (49, 16777216), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 524288), (4, -1), (5, 131072), (6, -1), (7, 16777216), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 8388608), (15, 4194304), (16, 262144), (17, -1), (18, 16777216), (19, 557056), (20, -1), (21, -1), (22, 131072), (23, 16777216), (24, -1), (25, -1), (26, -1), (27, 2097152), (28, -1), (29, 131072), (30, -1), (31, 2048), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, 2048), (38, -1), (39, 2097152), (40, 512), (41, 33554432), (42, 65536), (43, 65536), (44, -1), (45, -1), (46, -1), (47, 8388608), (48, 2097152), (49, 16777216), (50, -1), (51, -1), (52, -1)]

Covered at level 11 : set()

After reduction : 
 pending  : [27, 39, 22, 15, 14, 23, 5, 29, 31, 37, 42, 43, 47, 48, 49, 41, 7, 40, 3, 19, 16, 18]
 solution : [9, 8, 24]


Solution : [9, 8, 24] has cost 16.


Decide in level 11 among pending : [27, 39, 22, 15, 14, 23, 5, 29, 31, 37, 42, 43, 47, 48, 49, 41, 7, 40, 3, 19, 16, 18]

Coverage : [(0, -1), (1, -1), (2, -1), (3, 524288), (4, -1), (5, 131072), (6, -1), (7, 16777216), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 8388608), (15, 4194304), (16, 262144), (17, -1), (18, 16777216), (19, 557056), (20, -1), (21, -1), (22, 131072), (23, 16777216), (24, -1), (25, -1), (26, -1), (27, 2097152), (28, -1), (29, 131072), (30, -1), (31, 2048), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, 2048), (38, -1), (39, 2097152), (40, 512), (41, 33554432), (42, 65536), (43, 65536), (44, -1), (45, -1), (46, -1), (47, 8388608), (48, 2097152), (49, 16777216), (50, -1), (51, -1), (52, -1)]

Decide 41 with phase True at level 11

After decision at level 11
 pending : [27, 39, 22, 15, 14, 23, 5, 29, 31, 37, 42, 43, 47, 48, 49, 7, 40, 3, 19, 16, 18]
 solution : [9, 8, 24, 41]


New level: 12
 pending : [27, 39, 22, 15, 14, 23, 5, 29, 31, 37, 42, 43, 47, 48, 49, 7, 40, 3, 19, 16, 18]
 solution : [9, 8, 24, 41]


Before reduction : 
 pending  : [27, 39, 22, 15, 14, 23, 5, 29, 31, 37, 42, 43, 47, 48, 49, 7, 40, 3, 19, 16, 18]
 solution : [9, 8, 24, 41]

Essensial at level 12 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 524288), (4, -1), (5, 131072), (6, -1), (7, 16777216), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 8388608), (15, 4194304), (16, 262144), (17, -1), (18, 16777216), (19, 557056), (20, -1), (21, -1), (22, 131072), (23, 16777216), (24, -1), (25, -1), (26, -1), (27, 2097152), (28, -1), (29, 131072), (30, -1), (31, 2048), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, 2048), (38, -1), (39, 2097152), (40, 512), (41, 33554432), (42, 65536), (43, 65536), (44, -1), (45, -1), (46, -1), (47, 8388608), (48, 2097152), (49, 16777216), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 262144), (4, -1), (5, 0), (6, -1), (7, 2048), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 8388608), (15, 4194304), (16, 262144), (17, -1), (18, 16777216), (19, 270336), (20, -1), (21, -1), (22, 131072), (23, 2048), (24, -1), (25, -1), (26, -1), (27, 2097152), (28, -1), (29, 0), (30, -1), (31, 0), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, 0), (38, -1), (39, 2097152), (40, 512), (41, -1), (42, 0), (43, 0), (44, -1), (45, -1), (46, -1), (47, 0), (48, 0), (49, 0), (50, -1), (51, -1), (52, -1)]

Covered at level 12 : {37, 5, 42, 43, 47, 48, 49, 29, 31}

After reduction : 
 pending  : [27, 39, 22, 15, 14, 23, 7, 40, 3, 19, 16, 18]
 solution : [9, 8, 24, 41]


Before reduction : 
 pending  : [27, 39, 22, 15, 14, 23, 7, 40, 3, 19, 16, 18]
 solution : [9, 8, 24, 41]

Essensial at level 12 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 262144), (4, -1), (5, 0), (6, -1), (7, 2048), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 8388608), (15, 4194304), (16, 262144), (17, -1), (18, 16777216), (19, 270336), (20, -1), (21, -1), (22, 131072), (23, 2048), (24, -1), (25, -1), (26, -1), (27, 2097152), (28, -1), (29, 0), (30, -1), (31, 0), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, 0), (38, -1), (39, 2097152), (40, 512), (41, -1), (42, 0), (43, 0), (44, -1), (45, -1), (46, -1), (47, 0), (48, 0), (49, 0), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 262144), (4, -1), (5, -1), (6, -1), (7, 2048), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 8388608), (15, 4194304), (16, 262144), (17, -1), (18, 16777216), (19, 270336), (20, -1), (21, -1), (22, 131072), (23, 2048), (24, -1), (25, -1), (26, -1), (27, 2097152), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, 2097152), (40, 512), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 12 : set()

After reduction : 
 pending  : [27, 39, 22, 15, 14, 23, 7, 40, 3, 19, 16, 18]
 solution : [9, 8, 24, 41]


Solution : [9, 8, 24, 41] has cost 34.


Before backtrack at level 12
 pending : [27, 39, 22, 15, 14, 23, 7, 40, 3, 19, 16, 18]
 solution : [9, 8, 24, 41]

After backtrack at level 12
 pending : [27, 39, 22, 15, 14, 23, 7, 40, 3, 19, 16, 18, 5, 29, 31, 37, 42, 43, 47, 48, 49]
 solution : [9, 8, 24, 41]


Invert decision for 41 at level 11


New level: 12
 pending : [27, 39, 22, 15, 14, 23, 7, 40, 3, 19, 16, 18, 5, 29, 31, 37, 42, 43, 47, 48, 49]
 solution : [9, 8, 24]


Before reduction : 
 pending  : [27, 39, 22, 15, 14, 23, 7, 40, 3, 19, 16, 18, 5, 29, 31, 37, 42, 43, 47, 48, 49]
 solution : [9, 8, 24]

Essensial at level 12 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 262144), (4, -1), (5, -1), (6, -1), (7, 2048), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 8388608), (15, 4194304), (16, 262144), (17, -1), (18, 16777216), (19, 270336), (20, -1), (21, -1), (22, 131072), (23, 2048), (24, -1), (25, -1), (26, -1), (27, 2097152), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, 2097152), (40, 512), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 524288), (4, -1), (5, 131072), (6, -1), (7, 16777216), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 8388608), (15, 4194304), (16, 262144), (17, -1), (18, 16777216), (19, 557056), (20, -1), (21, -1), (22, 131072), (23, 16777216), (24, -1), (25, -1), (26, -1), (27, 2097152), (28, -1), (29, 131072), (30, -1), (31, 2048), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, 2048), (38, -1), (39, 2097152), (40, 512), (41, -1), (42, 65536), (43, 65536), (44, -1), (45, -1), (46, -1), (47, 8388608), (48, 2097152), (49, 16777216), (50, -1), (51, -1), (52, -1)]

Covered at level 12 : set()

After reduction : 
 pending  : [27, 39, 22, 15, 14, 23, 7, 40, 3, 19, 16, 18, 5, 29, 31, 37, 42, 43, 47, 48, 49]
 solution : [9, 8, 24]


Solution : [9, 8, 24] has cost 16.


Decide in level 12 among pending : [27, 39, 22, 15, 14, 23, 7, 40, 3, 19, 16, 18, 5, 29, 31, 37, 42, 43, 47, 48, 49]

Coverage : [(0, -1), (1, -1), (2, -1), (3, 524288), (4, -1), (5, 131072), (6, -1), (7, 16777216), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 8388608), (15, 4194304), (16, 262144), (17, -1), (18, 16777216), (19, 557056), (20, -1), (21, -1), (22, 131072), (23, 16777216), (24, -1), (25, -1), (26, -1), (27, 2097152), (28, -1), (29, 131072), (30, -1), (31, 2048), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, 2048), (38, -1), (39, 2097152), (40, 512), (41, -1), (42, 65536), (43, 65536), (44, -1), (45, -1), (46, -1), (47, 8388608), (48, 2097152), (49, 16777216), (50, -1), (51, -1), (52, -1)]

Decide 23 with phase True at level 12

After decision at level 12
 pending : [27, 39, 22, 15, 14, 7, 40, 3, 19, 16, 18, 5, 29, 31, 37, 42, 43, 47, 48, 49]
 solution : [9, 8, 24, 23]


New level: 13
 pending : [27, 39, 22, 15, 14, 7, 40, 3, 19, 16, 18, 5, 29, 31, 37, 42, 43, 47, 48, 49]
 solution : [9, 8, 24, 23]


Before reduction : 
 pending  : [27, 39, 22, 15, 14, 7, 40, 3, 19, 16, 18, 5, 29, 31, 37, 42, 43, 47, 48, 49]
 solution : [9, 8, 24, 23]

Essensial at level 13 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 524288), (4, -1), (5, 131072), (6, -1), (7, 16777216), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 8388608), (15, 4194304), (16, 262144), (17, -1), (18, 16777216), (19, 557056), (20, -1), (21, -1), (22, 131072), (23, 16777216), (24, -1), (25, -1), (26, -1), (27, 2097152), (28, -1), (29, 131072), (30, -1), (31, 2048), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, 2048), (38, -1), (39, 2097152), (40, 512), (41, -1), (42, 65536), (43, 65536), (44, -1), (45, -1), (46, -1), (47, 8388608), (48, 2097152), (49, 16777216), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 262144), (4, -1), (5, 0), (6, -1), (7, 0), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 8388608), (15, 4194304), (16, 131072), (17, -1), (18, 8388608), (19, 270336), (20, -1), (21, -1), (22, 131072), (23, -1), (24, -1), (25, -1), (26, -1), (27, 2097152), (28, -1), (29, 0), (30, -1), (31, 0), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, 0), (38, -1), (39, 2097152), (40, 512), (41, -1), (42, 0), (43, 0), (44, -1), (45, -1), (46, -1), (47, 0), (48, 0), (49, 0), (50, -1), (51, -1), (52, -1)]

Covered at level 13 : {37, 5, 7, 42, 43, 47, 48, 49, 29, 31}

After reduction : 
 pending  : [27, 39, 22, 15, 14, 40, 3, 19, 16, 18]
 solution : [9, 8, 24, 23]


Before reduction : 
 pending  : [27, 39, 22, 15, 14, 40, 3, 19, 16, 18]
 solution : [9, 8, 24, 23]

Essensial at level 13 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 262144), (4, -1), (5, 0), (6, -1), (7, 0), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 8388608), (15, 4194304), (16, 131072), (17, -1), (18, 8388608), (19, 270336), (20, -1), (21, -1), (22, 131072), (23, -1), (24, -1), (25, -1), (26, -1), (27, 2097152), (28, -1), (29, 0), (30, -1), (31, 0), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, 0), (38, -1), (39, 2097152), (40, 512), (41, -1), (42, 0), (43, 0), (44, -1), (45, -1), (46, -1), (47, 0), (48, 0), (49, 0), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 262144), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 8388608), (15, 4194304), (16, 131072), (17, -1), (18, 8388608), (19, 270336), (20, -1), (21, -1), (22, 131072), (23, -1), (24, -1), (25, -1), (26, -1), (27, 2097152), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, 2097152), (40, 512), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 13 : set()

After reduction : 
 pending  : [27, 39, 22, 15, 14, 40, 3, 19, 16, 18]
 solution : [9, 8, 24, 23]


Solution : [9, 8, 24, 23] has cost 23.


Before backtrack at level 13
 pending : [27, 39, 22, 15, 14, 40, 3, 19, 16, 18]
 solution : [9, 8, 24, 23]

After backtrack at level 13
 pending : [27, 39, 22, 15, 14, 40, 3, 19, 16, 18, 7, 5, 29, 31, 37, 42, 43, 47, 48, 49]
 solution : [9, 8, 24, 23]


Invert decision for 23 at level 12


New level: 13
 pending : [27, 39, 22, 15, 14, 40, 3, 19, 16, 18, 7, 5, 29, 31, 37, 42, 43, 47, 48, 49]
 solution : [9, 8, 24]


Before reduction : 
 pending  : [27, 39, 22, 15, 14, 40, 3, 19, 16, 18, 7, 5, 29, 31, 37, 42, 43, 47, 48, 49]
 solution : [9, 8, 24]

Essensial at level 13 : {7}

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 262144), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 8388608), (15, 4194304), (16, 131072), (17, -1), (18, 8388608), (19, 270336), (20, -1), (21, -1), (22, 131072), (23, -1), (24, -1), (25, -1), (26, -1), (27, 2097152), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, 2097152), (40, 512), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 262144), (4, -1), (5, 0), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 8388608), (15, 4194304), (16, 131072), (17, -1), (18, 8388608), (19, 270336), (20, -1), (21, -1), (22, 131072), (23, -1), (24, -1), (25, -1), (26, -1), (27, 2097152), (28, -1), (29, 0), (30, -1), (31, 0), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, 0), (38, -1), (39, 2097152), (40, 512), (41, -1), (42, 0), (43, 0), (44, -1), (45, -1), (46, -1), (47, 0), (48, 0), (49, 0), (50, -1), (51, -1), (52, -1)]

Covered at level 13 : {37, 5, 42, 43, 47, 48, 49, 29, 31}

After reduction : 
 pending  : [27, 39, 22, 15, 14, 40, 3, 19, 16, 18]
 solution : [9, 8, 24, 7]


Before reduction : 
 pending  : [27, 39, 22, 15, 14, 40, 3, 19, 16, 18]
 solution : [9, 8, 24, 7]

Essensial at level 13 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 262144), (4, -1), (5, 0), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 8388608), (15, 4194304), (16, 131072), (17, -1), (18, 8388608), (19, 270336), (20, -1), (21, -1), (22, 131072), (23, -1), (24, -1), (25, -1), (26, -1), (27, 2097152), (28, -1), (29, 0), (30, -1), (31, 0), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, 0), (38, -1), (39, 2097152), (40, 512), (41, -1), (42, 0), (43, 0), (44, -1), (45, -1), (46, -1), (47, 0), (48, 0), (49, 0), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 262144), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 8388608), (15, 4194304), (16, 131072), (17, -1), (18, 8388608), (19, 270336), (20, -1), (21, -1), (22, 131072), (23, -1), (24, -1), (25, -1), (26, -1), (27, 2097152), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, 2097152), (40, 512), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 13 : set()

After reduction : 
 pending  : [27, 39, 22, 15, 14, 40, 3, 19, 16, 18]
 solution : [9, 8, 24, 7]


Solution : [9, 8, 24, 7] has cost 20.


Before backtrack at level 13
 pending : [27, 39, 22, 15, 14, 40, 3, 19, 16, 18]
 solution : [9, 8, 24, 7]

After backtrack at level 13
 pending : [27, 39, 22, 15, 14, 40, 3, 19, 16, 18, 7, 5, 29, 31, 37, 42, 43, 47, 48, 49]
 solution : [9, 8, 24]


Before backtrack at level 12
 pending : [27, 39, 22, 15, 14, 40, 3, 19, 16, 18, 7, 5, 29, 31, 37, 42, 43, 47, 48, 49]
 solution : [9, 8, 24]

After backtrack at level 12
 pending : [27, 39, 22, 15, 14, 40, 3, 19, 16, 18, 7, 5, 29, 31, 37, 42, 43, 47, 48, 49, 23]
 solution : [9, 8, 24]


Before backtrack at level 11
 pending : [27, 39, 22, 15, 14, 40, 3, 19, 16, 18, 7, 5, 29, 31, 37, 42, 43, 47, 48, 49, 23]
 solution : [9, 8, 24]

After backtrack at level 11
 pending : [27, 39, 22, 15, 14, 40, 3, 19, 16, 18, 7, 5, 29, 31, 37, 42, 43, 47, 48, 49, 23, 41]
 solution : [9, 8, 24]


Before backtrack at level 10
 pending : [27, 39, 22, 15, 14, 40, 3, 19, 16, 18, 7, 5, 29, 31, 37, 42, 43, 47, 48, 49, 23, 41]
 solution : [9, 8, 24]

After backtrack at level 10
 pending : [27, 39, 22, 15, 14, 40, 3, 19, 16, 18, 7, 5, 29, 31, 37, 42, 43, 47, 48, 49, 23, 41, 17]
 solution : [9, 8, 24]


Before backtrack at level 9
 pending : [27, 39, 22, 15, 14, 40, 3, 19, 16, 18, 7, 5, 29, 31, 37, 42, 43, 47, 48, 49, 23, 41, 17]
 solution : [9, 8, 24]

After backtrack at level 9
 pending : [27, 39, 22, 15, 14, 40, 3, 19, 16, 18, 7, 5, 29, 31, 37, 42, 43, 47, 48, 49, 23, 41, 17, 30, 33, 38]
 solution : [9, 8, 24]


Invert decision for 24 at level 8


New level: 9
 pending : [27, 39, 22, 15, 14, 40, 3, 19, 16, 18, 7, 5, 29, 31, 37, 42, 43, 47, 48, 49, 23, 41, 17, 30, 33, 38]
 solution : [9, 8]


Before reduction : 
 pending  : [27, 39, 22, 15, 14, 40, 3, 19, 16, 18, 7, 5, 29, 31, 37, 42, 43, 47, 48, 49, 23, 41, 17, 30, 33, 38]
 solution : [9, 8]

Essensial at level 9 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 262144), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 8388608), (15, 4194304), (16, 131072), (17, -1), (18, 8388608), (19, 270336), (20, -1), (21, -1), (22, 131072), (23, -1), (24, -1), (25, -1), (26, -1), (27, 2097152), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, 2097152), (40, 512), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 524288), (4, -1), (5, 524288), (6, -1), (7, 67108864), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 8388608), (15, 4194304), (16, 262144), (17, 33554432), (18, 16777216), (19, 557056), (20, -1), (21, -1), (22, 131072), (23, 67108864), (24, -1), (25, -1), (26, -1), (27, 2097152), (28, -1), (29, 524288), (30, 1048576), (31, 8192), (32, -1), (33, 8192), (34, -1), (35, -1), (36, -1), (37, 8192), (38, 67108864), (39, 2097152), (40, 134217728), (41, 67108864), (42, 262144), (43, 262144), (44, -1), (45, -1), (46, -1), (47, 33554432), (48, 8388608), (49, 33554432), (50, -1), (51, -1), (52, -1)]

Covered at level 9 : set()

After reduction : 
 pending  : [27, 39, 22, 15, 14, 40, 3, 19, 16, 18, 7, 5, 29, 31, 37, 42, 43, 47, 48, 49, 23, 41, 17, 30, 33, 38]
 solution : [9, 8]


Solution : [9, 8] has cost 9.


Decide in level 9 among pending : [27, 39, 22, 15, 14, 40, 3, 19, 16, 18, 7, 5, 29, 31, 37, 42, 43, 47, 48, 49, 23, 41, 17, 30, 33, 38]

Coverage : [(0, -1), (1, -1), (2, -1), (3, 524288), (4, -1), (5, 524288), (6, -1), (7, 67108864), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 8388608), (15, 4194304), (16, 262144), (17, 33554432), (18, 16777216), (19, 557056), (20, -1), (21, -1), (22, 131072), (23, 67108864), (24, -1), (25, -1), (26, -1), (27, 2097152), (28, -1), (29, 524288), (30, 1048576), (31, 8192), (32, -1), (33, 8192), (34, -1), (35, -1), (36, -1), (37, 8192), (38, 67108864), (39, 2097152), (40, 134217728), (41, 67108864), (42, 262144), (43, 262144), (44, -1), (45, -1), (46, -1), (47, 33554432), (48, 8388608), (49, 33554432), (50, -1), (51, -1), (52, -1)]

Decide 40 with phase True at level 9

After decision at level 9
 pending : [27, 39, 22, 15, 14, 3, 19, 16, 18, 7, 5, 29, 31, 37, 42, 43, 47, 48, 49, 23, 41, 17, 30, 33, 38]
 solution : [9, 8, 40]


New level: 10
 pending : [27, 39, 22, 15, 14, 3, 19, 16, 18, 7, 5, 29, 31, 37, 42, 43, 47, 48, 49, 23, 41, 17, 30, 33, 38]
 solution : [9, 8, 40]


Before reduction : 
 pending  : [27, 39, 22, 15, 14, 3, 19, 16, 18, 7, 5, 29, 31, 37, 42, 43, 47, 48, 49, 23, 41, 17, 30, 33, 38]
 solution : [9, 8, 40]

Essensial at level 10 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 524288), (4, -1), (5, 524288), (6, -1), (7, 67108864), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 8388608), (15, 4194304), (16, 262144), (17, 33554432), (18, 16777216), (19, 557056), (20, -1), (21, -1), (22, 131072), (23, 67108864), (24, -1), (25, -1), (26, -1), (27, 2097152), (28, -1), (29, 524288), (30, 1048576), (31, 8192), (32, -1), (33, 8192), (34, -1), (35, -1), (36, -1), (37, 8192), (38, 67108864), (39, 2097152), (40, 134217728), (41, 67108864), (42, 262144), (43, 262144), (44, -1), (45, -1), (46, -1), (47, 33554432), (48, 8388608), (49, 33554432), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 524288), (4, -1), (5, 524288), (6, -1), (7, 67108864), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 8388608), (15, 4194304), (16, 262144), (17, 33554432), (18, 16777216), (19, 557056), (20, -1), (21, -1), (22, 131072), (23, 67108864), (24, -1), (25, -1), (26, -1), (27, 2097152), (28, -1), (29, 524288), (30, 524288), (31, 8192), (32, -1), (33, 4096), (34, -1), (35, -1), (36, -1), (37, 8192), (38, 33554432), (39, 2097152), (40, -1), (41, 67108864), (42, 262144), (43, 262144), (44, -1), (45, -1), (46, -1), (47, 33554432), (48, 8388608), (49, 33554432), (50, -1), (51, -1), (52, -1)]

Covered at level 10 : set()

After reduction : 
 pending  : [27, 39, 22, 15, 14, 3, 19, 16, 18, 7, 5, 29, 31, 37, 42, 43, 47, 48, 49, 23, 41, 17, 30, 33, 38]
 solution : [9, 8, 40]


Solution : [9, 8, 40] has cost 23.


Before backtrack at level 10
 pending : [27, 39, 22, 15, 14, 3, 19, 16, 18, 7, 5, 29, 31, 37, 42, 43, 47, 48, 49, 23, 41, 17, 30, 33, 38]
 solution : [9, 8, 40]

After backtrack at level 10
 pending : [27, 39, 22, 15, 14, 3, 19, 16, 18, 7, 5, 29, 31, 37, 42, 43, 47, 48, 49, 23, 41, 17, 30, 33, 38]
 solution : [9, 8, 40]


Invert decision for 40 at level 9


New level: 10
 pending : [27, 39, 22, 15, 14, 3, 19, 16, 18, 7, 5, 29, 31, 37, 42, 43, 47, 48, 49, 23, 41, 17, 30, 33, 38]
 solution : [9, 8]


Before reduction : 
 pending  : [27, 39, 22, 15, 14, 3, 19, 16, 18, 7, 5, 29, 31, 37, 42, 43, 47, 48, 49, 23, 41, 17, 30, 33, 38]
 solution : [9, 8]

Essensial at level 10 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 524288), (4, -1), (5, 524288), (6, -1), (7, 67108864), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 8388608), (15, 4194304), (16, 262144), (17, 33554432), (18, 16777216), (19, 557056), (20, -1), (21, -1), (22, 131072), (23, 67108864), (24, -1), (25, -1), (26, -1), (27, 2097152), (28, -1), (29, 524288), (30, 524288), (31, 8192), (32, -1), (33, 4096), (34, -1), (35, -1), (36, -1), (37, 8192), (38, 33554432), (39, 2097152), (40, -1), (41, 67108864), (42, 262144), (43, 262144), (44, -1), (45, -1), (46, -1), (47, 33554432), (48, 8388608), (49, 33554432), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 524288), (4, -1), (5, 524288), (6, -1), (7, 67108864), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 8388608), (15, 4194304), (16, 262144), (17, 33554432), (18, 16777216), (19, 557056), (20, -1), (21, -1), (22, 131072), (23, 67108864), (24, -1), (25, -1), (26, -1), (27, 2097152), (28, -1), (29, 524288), (30, 1048576), (31, 8192), (32, -1), (33, 8192), (34, -1), (35, -1), (36, -1), (37, 8192), (38, 67108864), (39, 2097152), (40, -1), (41, 67108864), (42, 262144), (43, 262144), (44, -1), (45, -1), (46, -1), (47, 33554432), (48, 8388608), (49, 33554432), (50, -1), (51, -1), (52, -1)]

Covered at level 10 : set()

After reduction : 
 pending  : [27, 39, 22, 15, 14, 3, 19, 16, 18, 7, 5, 29, 31, 37, 42, 43, 47, 48, 49, 23, 41, 17, 30, 33, 38]
 solution : [9, 8]


Solution : [9, 8] has cost 9.


Decide in level 10 among pending : [27, 39, 22, 15, 14, 3, 19, 16, 18, 7, 5, 29, 31, 37, 42, 43, 47, 48, 49, 23, 41, 17, 30, 33, 38]

Coverage : [(0, -1), (1, -1), (2, -1), (3, 524288), (4, -1), (5, 524288), (6, -1), (7, 67108864), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 8388608), (15, 4194304), (16, 262144), (17, 33554432), (18, 16777216), (19, 557056), (20, -1), (21, -1), (22, 131072), (23, 67108864), (24, -1), (25, -1), (26, -1), (27, 2097152), (28, -1), (29, 524288), (30, 1048576), (31, 8192), (32, -1), (33, 8192), (34, -1), (35, -1), (36, -1), (37, 8192), (38, 67108864), (39, 2097152), (40, -1), (41, 67108864), (42, 262144), (43, 262144), (44, -1), (45, -1), (46, -1), (47, 33554432), (48, 8388608), (49, 33554432), (50, -1), (51, -1), (52, -1)]

Decide 7 with phase True at level 10

After decision at level 10
 pending : [27, 39, 22, 15, 14, 3, 19, 16, 18, 5, 29, 31, 37, 42, 43, 47, 48, 49, 23, 41, 17, 30, 33, 38]
 solution : [9, 8, 7]


New level: 11
 pending : [27, 39, 22, 15, 14, 3, 19, 16, 18, 5, 29, 31, 37, 42, 43, 47, 48, 49, 23, 41, 17, 30, 33, 38]
 solution : [9, 8, 7]


Before reduction : 
 pending  : [27, 39, 22, 15, 14, 3, 19, 16, 18, 5, 29, 31, 37, 42, 43, 47, 48, 49, 23, 41, 17, 30, 33, 38]
 solution : [9, 8, 7]

Essensial at level 11 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 524288), (4, -1), (5, 524288), (6, -1), (7, 67108864), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 8388608), (15, 4194304), (16, 262144), (17, 33554432), (18, 16777216), (19, 557056), (20, -1), (21, -1), (22, 131072), (23, 67108864), (24, -1), (25, -1), (26, -1), (27, 2097152), (28, -1), (29, 524288), (30, 1048576), (31, 8192), (32, -1), (33, 8192), (34, -1), (35, -1), (36, -1), (37, 8192), (38, 67108864), (39, 2097152), (40, -1), (41, 67108864), (42, 262144), (43, 262144), (44, -1), (45, -1), (46, -1), (47, 33554432), (48, 8388608), (49, 33554432), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 262144), (4, -1), (5, 0), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 8388608), (15, 4194304), (16, 131072), (17, 16777216), (18, 8388608), (19, 270336), (20, -1), (21, -1), (22, 131072), (23, 0), (24, -1), (25, -1), (26, -1), (27, 2097152), (28, -1), (29, 0), (30, 0), (31, 0), (32, -1), (33, 0), (34, -1), (35, -1), (36, -1), (37, 0), (38, 65536), (39, 2097152), (40, -1), (41, 0), (42, 0), (43, 0), (44, -1), (45, -1), (46, -1), (47, 0), (48, 0), (49, 0), (50, -1), (51, -1), (52, -1)]

Covered at level 11 : {33, 37, 5, 41, 42, 43, 47, 48, 49, 23, 29, 30, 31}

After reduction : 
 pending  : [27, 39, 22, 15, 14, 3, 19, 16, 18, 17, 38]
 solution : [9, 8, 7]


Before reduction : 
 pending  : [27, 39, 22, 15, 14, 3, 19, 16, 18, 17, 38]
 solution : [9, 8, 7]

Essensial at level 11 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 262144), (4, -1), (5, 0), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 8388608), (15, 4194304), (16, 131072), (17, 16777216), (18, 8388608), (19, 270336), (20, -1), (21, -1), (22, 131072), (23, 0), (24, -1), (25, -1), (26, -1), (27, 2097152), (28, -1), (29, 0), (30, 0), (31, 0), (32, -1), (33, 0), (34, -1), (35, -1), (36, -1), (37, 0), (38, 65536), (39, 2097152), (40, -1), (41, 0), (42, 0), (43, 0), (44, -1), (45, -1), (46, -1), (47, 0), (48, 0), (49, 0), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 262144), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 8388608), (15, 4194304), (16, 131072), (17, 16777216), (18, 8388608), (19, 270336), (20, -1), (21, -1), (22, 131072), (23, -1), (24, -1), (25, -1), (26, -1), (27, 2097152), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, 65536), (39, 2097152), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 11 : set()

After reduction : 
 pending  : [27, 39, 22, 15, 14, 3, 19, 16, 18, 17, 38]
 solution : [9, 8, 7]


Solution : [9, 8, 7] has cost 13.


Decide in level 11 among pending : [27, 39, 22, 15, 14, 3, 19, 16, 18, 17, 38]

Coverage : [(0, -1), (1, -1), (2, -1), (3, 262144), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 8388608), (15, 4194304), (16, 131072), (17, 16777216), (18, 8388608), (19, 270336), (20, -1), (21, -1), (22, 131072), (23, -1), (24, -1), (25, -1), (26, -1), (27, 2097152), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, 65536), (39, 2097152), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Decide 17 with phase True at level 11

After decision at level 11
 pending : [27, 39, 22, 15, 14, 3, 19, 16, 18, 38]
 solution : [9, 8, 7, 17]


New level: 12
 pending : [27, 39, 22, 15, 14, 3, 19, 16, 18, 38]
 solution : [9, 8, 7, 17]


Before reduction : 
 pending  : [27, 39, 22, 15, 14, 3, 19, 16, 18, 38]
 solution : [9, 8, 7, 17]

Essensial at level 12 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 262144), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 8388608), (15, 4194304), (16, 131072), (17, 16777216), (18, 8388608), (19, 270336), (20, -1), (21, -1), (22, 131072), (23, -1), (24, -1), (25, -1), (26, -1), (27, 2097152), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, 65536), (39, 2097152), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 0), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 131072), (15, 32768), (16, 0), (17, -1), (18, 0), (19, 0), (20, -1), (21, -1), (22, 32768), (23, -1), (24, -1), (25, -1), (26, -1), (27, 2048), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, 1024), (39, 2048), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 12 : {19, 16, 18, 3}

After reduction : 
 pending  : [27, 39, 22, 15, 14, 38]
 solution : [9, 8, 7, 17]


Before reduction : 
 pending  : [27, 39, 22, 15, 14, 38]
 solution : [9, 8, 7, 17]

Essensial at level 12 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 0), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 131072), (15, 32768), (16, 0), (17, -1), (18, 0), (19, 0), (20, -1), (21, -1), (22, 32768), (23, -1), (24, -1), (25, -1), (26, -1), (27, 2048), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, 1024), (39, 2048), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 131072), (15, 32768), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, 32768), (23, -1), (24, -1), (25, -1), (26, -1), (27, 2048), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, 1024), (39, 2048), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 12 : set()

After reduction : 
 pending  : [27, 39, 22, 15, 14, 38]
 solution : [9, 8, 7, 17]


Solution : [9, 8, 7, 17] has cost 22.


Before backtrack at level 12
 pending : [27, 39, 22, 15, 14, 38]
 solution : [9, 8, 7, 17]

After backtrack at level 12
 pending : [27, 39, 22, 15, 14, 38, 3, 19, 16, 18]
 solution : [9, 8, 7, 17]


Invert decision for 17 at level 11


New level: 12
 pending : [27, 39, 22, 15, 14, 38, 3, 19, 16, 18]
 solution : [9, 8, 7]


Before reduction : 
 pending  : [27, 39, 22, 15, 14, 38, 3, 19, 16, 18]
 solution : [9, 8, 7]

Essensial at level 12 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 131072), (15, 32768), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, 32768), (23, -1), (24, -1), (25, -1), (26, -1), (27, 2048), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, 1024), (39, 2048), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 262144), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 8388608), (15, 4194304), (16, 131072), (17, -1), (18, 8388608), (19, 270336), (20, -1), (21, -1), (22, 131072), (23, -1), (24, -1), (25, -1), (26, -1), (27, 2097152), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, 65536), (39, 2097152), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 12 : set()

After reduction : 
 pending  : [27, 39, 22, 15, 14, 38, 3, 19, 16, 18]
 solution : [9, 8, 7]


Solution : [9, 8, 7] has cost 13.


Decide in level 12 among pending : [27, 39, 22, 15, 14, 38, 3, 19, 16, 18]

Coverage : [(0, -1), (1, -1), (2, -1), (3, 262144), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 8388608), (15, 4194304), (16, 131072), (17, -1), (18, 8388608), (19, 270336), (20, -1), (21, -1), (22, 131072), (23, -1), (24, -1), (25, -1), (26, -1), (27, 2097152), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, 65536), (39, 2097152), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Decide 14 with phase True at level 12

After decision at level 12
 pending : [27, 39, 22, 15, 38, 3, 19, 16, 18]
 solution : [9, 8, 7, 14]


New level: 13
 pending : [27, 39, 22, 15, 38, 3, 19, 16, 18]
 solution : [9, 8, 7, 14]


Before reduction : 
 pending  : [27, 39, 22, 15, 38, 3, 19, 16, 18]
 solution : [9, 8, 7, 14]

Essensial at level 13 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 262144), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 8388608), (15, 4194304), (16, 131072), (17, -1), (18, 8388608), (19, 270336), (20, -1), (21, -1), (22, 131072), (23, -1), (24, -1), (25, -1), (26, -1), (27, 2097152), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, 65536), (39, 2097152), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 131072), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, 0), (16, 0), (17, -1), (18, 2097152), (19, 133120), (20, -1), (21, -1), (22, 0), (23, -1), (24, -1), (25, -1), (26, -1), (27, 524288), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, 1024), (39, 524288), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 13 : {16, 22, 15}

After reduction : 
 pending  : [27, 39, 38, 3, 19, 18]
 solution : [9, 8, 7, 14]


Before reduction : 
 pending  : [27, 39, 38, 3, 19, 18]
 solution : [9, 8, 7, 14]

Essensial at level 13 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 131072), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, 0), (16, 0), (17, -1), (18, 2097152), (19, 133120), (20, -1), (21, -1), (22, 0), (23, -1), (24, -1), (25, -1), (26, -1), (27, 524288), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, 1024), (39, 524288), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 131072), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, 2097152), (19, 133120), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, 524288), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, 1024), (39, 524288), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 13 : set()

After reduction : 
 pending  : [27, 39, 38, 3, 19, 18]
 solution : [9, 8, 7, 14]


Solution : [9, 8, 7, 14] has cost 20.


Before backtrack at level 13
 pending : [27, 39, 38, 3, 19, 18]
 solution : [9, 8, 7, 14]

After backtrack at level 13
 pending : [27, 39, 38, 3, 19, 18, 22, 15, 16]
 solution : [9, 8, 7, 14]


Invert decision for 14 at level 12


New level: 13
 pending : [27, 39, 38, 3, 19, 18, 22, 15, 16]
 solution : [9, 8, 7]


Before reduction : 
 pending  : [27, 39, 38, 3, 19, 18, 22, 15, 16]
 solution : [9, 8, 7]

Essensial at level 13 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 131072), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, 2097152), (19, 133120), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, 524288), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, 1024), (39, 524288), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 262144), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, 4194304), (16, 131072), (17, -1), (18, 8388608), (19, 270336), (20, -1), (21, -1), (22, 131072), (23, -1), (24, -1), (25, -1), (26, -1), (27, 2097152), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, 65536), (39, 2097152), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 13 : set()

After reduction : 
 pending  : [27, 39, 38, 3, 19, 18, 22, 15, 16]
 solution : [9, 8, 7]


Solution : [9, 8, 7] has cost 13.


Decide in level 13 among pending : [27, 39, 38, 3, 19, 18, 22, 15, 16]

Coverage : [(0, -1), (1, -1), (2, -1), (3, 262144), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, 4194304), (16, 131072), (17, -1), (18, 8388608), (19, 270336), (20, -1), (21, -1), (22, 131072), (23, -1), (24, -1), (25, -1), (26, -1), (27, 2097152), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, 65536), (39, 2097152), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Decide 18 with phase True at level 13

After decision at level 13
 pending : [27, 39, 38, 3, 19, 22, 15, 16]
 solution : [9, 8, 7, 18]


New level: 14
 pending : [27, 39, 38, 3, 19, 22, 15, 16]
 solution : [9, 8, 7, 18]


Before reduction : 
 pending  : [27, 39, 38, 3, 19, 22, 15, 16]
 solution : [9, 8, 7, 18]

Essensial at level 14 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 262144), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, 4194304), (16, 131072), (17, -1), (18, 8388608), (19, 270336), (20, -1), (21, -1), (22, 131072), (23, -1), (24, -1), (25, -1), (26, -1), (27, 2097152), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, 65536), (39, 2097152), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 0), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, 32768), (16, 0), (17, -1), (18, -1), (19, 0), (20, -1), (21, -1), (22, 32768), (23, -1), (24, -1), (25, -1), (26, -1), (27, 2048), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, 1024), (39, 2048), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 14 : {19, 16, 3}

After reduction : 
 pending  : [27, 39, 38, 22, 15]
 solution : [9, 8, 7, 18]


Before reduction : 
 pending  : [27, 39, 38, 22, 15]
 solution : [9, 8, 7, 18]

Essensial at level 14 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 0), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, 32768), (16, 0), (17, -1), (18, -1), (19, 0), (20, -1), (21, -1), (22, 32768), (23, -1), (24, -1), (25, -1), (26, -1), (27, 2048), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, 1024), (39, 2048), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, 32768), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, 32768), (23, -1), (24, -1), (25, -1), (26, -1), (27, 2048), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, 1024), (39, 2048), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 14 : set()

After reduction : 
 pending  : [27, 39, 38, 22, 15]
 solution : [9, 8, 7, 18]


Solution : [9, 8, 7, 18] has cost 22.


Before backtrack at level 14
 pending : [27, 39, 38, 22, 15]
 solution : [9, 8, 7, 18]

After backtrack at level 14
 pending : [27, 39, 38, 22, 15, 3, 19, 16]
 solution : [9, 8, 7, 18]


Invert decision for 18 at level 13


New level: 14
 pending : [27, 39, 38, 22, 15, 3, 19, 16]
 solution : [9, 8, 7]


Before reduction : 
 pending  : [27, 39, 38, 22, 15, 3, 19, 16]
 solution : [9, 8, 7]

Essensial at level 14 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, 32768), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, 32768), (23, -1), (24, -1), (25, -1), (26, -1), (27, 2048), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, 1024), (39, 2048), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 262144), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, 4194304), (16, 131072), (17, -1), (18, -1), (19, 270336), (20, -1), (21, -1), (22, 131072), (23, -1), (24, -1), (25, -1), (26, -1), (27, 2097152), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, 65536), (39, 2097152), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 14 : set()

After reduction : 
 pending  : [27, 39, 38, 22, 15, 3, 19, 16]
 solution : [9, 8, 7]


Solution : [9, 8, 7] has cost 13.


Decide in level 14 among pending : [27, 39, 38, 22, 15, 3, 19, 16]

Coverage : [(0, -1), (1, -1), (2, -1), (3, 262144), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, 4194304), (16, 131072), (17, -1), (18, -1), (19, 270336), (20, -1), (21, -1), (22, 131072), (23, -1), (24, -1), (25, -1), (26, -1), (27, 2097152), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, 65536), (39, 2097152), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Decide 15 with phase True at level 14

After decision at level 14
 pending : [27, 39, 38, 22, 3, 19, 16]
 solution : [9, 8, 7, 15]


New level: 15
 pending : [27, 39, 38, 22, 3, 19, 16]
 solution : [9, 8, 7, 15]


Before reduction : 
 pending  : [27, 39, 38, 22, 3, 19, 16]
 solution : [9, 8, 7, 15]

Essensial at level 15 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 262144), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, 4194304), (16, 131072), (17, -1), (18, -1), (19, 270336), (20, -1), (21, -1), (22, 131072), (23, -1), (24, -1), (25, -1), (26, -1), (27, 2097152), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, 65536), (39, 2097152), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 131072), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, 0), (17, -1), (18, -1), (19, 133120), (20, -1), (21, -1), (22, 0), (23, -1), (24, -1), (25, -1), (26, -1), (27, 524288), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, 1024), (39, 524288), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 15 : {16, 22}

After reduction : 
 pending  : [27, 39, 38, 3, 19]
 solution : [9, 8, 7, 15]


Before reduction : 
 pending  : [27, 39, 38, 3, 19]
 solution : [9, 8, 7, 15]

Essensial at level 15 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 131072), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, 0), (17, -1), (18, -1), (19, 133120), (20, -1), (21, -1), (22, 0), (23, -1), (24, -1), (25, -1), (26, -1), (27, 524288), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, 1024), (39, 524288), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 131072), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, 133120), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, 524288), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, 1024), (39, 524288), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 15 : set()

After reduction : 
 pending  : [27, 39, 38, 3, 19]
 solution : [9, 8, 7, 15]


Solution : [9, 8, 7, 15] has cost 20.


Before backtrack at level 15
 pending : [27, 39, 38, 3, 19]
 solution : [9, 8, 7, 15]

After backtrack at level 15
 pending : [27, 39, 38, 3, 19, 22, 16]
 solution : [9, 8, 7, 15]


Invert decision for 15 at level 14


New level: 15
 pending : [27, 39, 38, 3, 19, 22, 16]
 solution : [9, 8, 7]


Before reduction : 
 pending  : [27, 39, 38, 3, 19, 22, 16]
 solution : [9, 8, 7]

Essensial at level 15 : {22}

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 131072), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, 133120), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, 524288), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, 1024), (39, 524288), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 262144), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, 65536), (17, -1), (18, -1), (19, 270336), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, 2097152), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, 65536), (39, 2097152), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 15 : set()

After reduction : 
 pending  : [27, 39, 38, 3, 19, 16]
 solution : [9, 8, 7, 22]


Before reduction : 
 pending  : [27, 39, 38, 3, 19, 16]
 solution : [9, 8, 7, 22]

Essensial at level 15 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 262144), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, 65536), (17, -1), (18, -1), (19, 270336), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, 2097152), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, 65536), (39, 2097152), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 262144), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, 65536), (17, -1), (18, -1), (19, 270336), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, 2097152), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, 65536), (39, 2097152), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 15 : set()

After reduction : 
 pending  : [27, 39, 38, 3, 19, 16]
 solution : [9, 8, 7, 22]


Solution : [9, 8, 7, 22] has cost 20.


Before backtrack at level 15
 pending : [27, 39, 38, 3, 19, 16]
 solution : [9, 8, 7, 22]

After backtrack at level 15
 pending : [27, 39, 38, 3, 19, 16, 22]
 solution : [9, 8, 7]


Before backtrack at level 14
 pending : [27, 39, 38, 3, 19, 16, 22]
 solution : [9, 8, 7]

After backtrack at level 14
 pending : [27, 39, 38, 3, 19, 16, 22, 15]
 solution : [9, 8, 7]


Before backtrack at level 13
 pending : [27, 39, 38, 3, 19, 16, 22, 15]
 solution : [9, 8, 7]

After backtrack at level 13
 pending : [27, 39, 38, 3, 19, 16, 22, 15, 18]
 solution : [9, 8, 7]


Before backtrack at level 12
 pending : [27, 39, 38, 3, 19, 16, 22, 15, 18]
 solution : [9, 8, 7]

After backtrack at level 12
 pending : [27, 39, 38, 3, 19, 16, 22, 15, 18, 14]
 solution : [9, 8, 7]


Before backtrack at level 11
 pending : [27, 39, 38, 3, 19, 16, 22, 15, 18, 14]
 solution : [9, 8, 7]

After backtrack at level 11
 pending : [27, 39, 38, 3, 19, 16, 22, 15, 18, 14, 5, 29, 31, 37, 42, 43, 47, 48, 49, 23, 41, 30, 33, 17]
 solution : [9, 8, 7]


Invert decision for 7 at level 10


New level: 11
 pending : [27, 39, 38, 3, 19, 16, 22, 15, 18, 14, 5, 29, 31, 37, 42, 43, 47, 48, 49, 23, 41, 30, 33, 17]
 solution : [9, 8]


Before reduction : 
 pending  : [27, 39, 38, 3, 19, 16, 22, 15, 18, 14, 5, 29, 31, 37, 42, 43, 47, 48, 49, 23, 41, 30, 33, 17]
 solution : [9, 8]

Essensial at level 11 : {23}

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 262144), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, 65536), (17, -1), (18, -1), (19, 270336), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, 2097152), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, 65536), (39, 2097152), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 262144), (4, -1), (5, 0), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 8388608), (15, 4194304), (16, 131072), (17, 16777216), (18, 8388608), (19, 270336), (20, -1), (21, -1), (22, 131072), (23, -1), (24, -1), (25, -1), (26, -1), (27, 2097152), (28, -1), (29, 0), (30, 0), (31, 0), (32, -1), (33, 0), (34, -1), (35, -1), (36, -1), (37, 0), (38, 524288), (39, 2097152), (40, -1), (41, 0), (42, 0), (43, 0), (44, -1), (45, -1), (46, -1), (47, 0), (48, 0), (49, 0), (50, -1), (51, -1), (52, -1)]

Covered at level 11 : {33, 37, 5, 41, 42, 43, 47, 48, 49, 29, 30, 31}

After reduction : 
 pending  : [27, 39, 38, 3, 19, 16, 22, 15, 18, 14, 17]
 solution : [9, 8, 23]


Before reduction : 
 pending  : [27, 39, 38, 3, 19, 16, 22, 15, 18, 14, 17]
 solution : [9, 8, 23]

Essensial at level 11 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 262144), (4, -1), (5, 0), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 8388608), (15, 4194304), (16, 131072), (17, 16777216), (18, 8388608), (19, 270336), (20, -1), (21, -1), (22, 131072), (23, -1), (24, -1), (25, -1), (26, -1), (27, 2097152), (28, -1), (29, 0), (30, 0), (31, 0), (32, -1), (33, 0), (34, -1), (35, -1), (36, -1), (37, 0), (38, 524288), (39, 2097152), (40, -1), (41, 0), (42, 0), (43, 0), (44, -1), (45, -1), (46, -1), (47, 0), (48, 0), (49, 0), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 262144), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 8388608), (15, 4194304), (16, 131072), (17, 16777216), (18, 8388608), (19, 270336), (20, -1), (21, -1), (22, 131072), (23, -1), (24, -1), (25, -1), (26, -1), (27, 2097152), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, 524288), (39, 2097152), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 11 : set()

After reduction : 
 pending  : [27, 39, 38, 3, 19, 16, 22, 15, 18, 14, 17]
 solution : [9, 8, 23]


Solution : [9, 8, 23] has cost 16.


Decide in level 11 among pending : [27, 39, 38, 3, 19, 16, 22, 15, 18, 14, 17]

Coverage : [(0, -1), (1, -1), (2, -1), (3, 262144), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 8388608), (15, 4194304), (16, 131072), (17, 16777216), (18, 8388608), (19, 270336), (20, -1), (21, -1), (22, 131072), (23, -1), (24, -1), (25, -1), (26, -1), (27, 2097152), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, 524288), (39, 2097152), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Decide 17 with phase True at level 11

After decision at level 11
 pending : [27, 39, 38, 3, 19, 16, 22, 15, 18, 14]
 solution : [9, 8, 23, 17]


New level: 12
 pending : [27, 39, 38, 3, 19, 16, 22, 15, 18, 14]
 solution : [9, 8, 23, 17]


Before reduction : 
 pending  : [27, 39, 38, 3, 19, 16, 22, 15, 18, 14]
 solution : [9, 8, 23, 17]

Essensial at level 12 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 262144), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 8388608), (15, 4194304), (16, 131072), (17, 16777216), (18, 8388608), (19, 270336), (20, -1), (21, -1), (22, 131072), (23, -1), (24, -1), (25, -1), (26, -1), (27, 2097152), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, 524288), (39, 2097152), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 0), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 131072), (15, 32768), (16, 0), (17, -1), (18, 0), (19, 0), (20, -1), (21, -1), (22, 32768), (23, -1), (24, -1), (25, -1), (26, -1), (27, 2048), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, 1024), (39, 2048), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 12 : {19, 16, 18, 3}

After reduction : 
 pending  : [27, 39, 38, 22, 15, 14]
 solution : [9, 8, 23, 17]


Before reduction : 
 pending  : [27, 39, 38, 22, 15, 14]
 solution : [9, 8, 23, 17]

Essensial at level 12 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 0), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 131072), (15, 32768), (16, 0), (17, -1), (18, 0), (19, 0), (20, -1), (21, -1), (22, 32768), (23, -1), (24, -1), (25, -1), (26, -1), (27, 2048), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, 1024), (39, 2048), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 131072), (15, 32768), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, 32768), (23, -1), (24, -1), (25, -1), (26, -1), (27, 2048), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, 1024), (39, 2048), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 12 : set()

After reduction : 
 pending  : [27, 39, 38, 22, 15, 14]
 solution : [9, 8, 23, 17]


Solution : [9, 8, 23, 17] has cost 25.


Before backtrack at level 12
 pending : [27, 39, 38, 22, 15, 14]
 solution : [9, 8, 23, 17]

After backtrack at level 12
 pending : [27, 39, 38, 22, 15, 14, 3, 19, 16, 18]
 solution : [9, 8, 23, 17]


Invert decision for 17 at level 11


New level: 12
 pending : [27, 39, 38, 22, 15, 14, 3, 19, 16, 18]
 solution : [9, 8, 23]


Before reduction : 
 pending  : [27, 39, 38, 22, 15, 14, 3, 19, 16, 18]
 solution : [9, 8, 23]

Essensial at level 12 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 131072), (15, 32768), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, 32768), (23, -1), (24, -1), (25, -1), (26, -1), (27, 2048), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, 1024), (39, 2048), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 262144), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 8388608), (15, 4194304), (16, 131072), (17, -1), (18, 8388608), (19, 270336), (20, -1), (21, -1), (22, 131072), (23, -1), (24, -1), (25, -1), (26, -1), (27, 2097152), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, 524288), (39, 2097152), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 12 : set()

After reduction : 
 pending  : [27, 39, 38, 22, 15, 14, 3, 19, 16, 18]
 solution : [9, 8, 23]


Solution : [9, 8, 23] has cost 16.


Decide in level 12 among pending : [27, 39, 38, 22, 15, 14, 3, 19, 16, 18]

Coverage : [(0, -1), (1, -1), (2, -1), (3, 262144), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 8388608), (15, 4194304), (16, 131072), (17, -1), (18, 8388608), (19, 270336), (20, -1), (21, -1), (22, 131072), (23, -1), (24, -1), (25, -1), (26, -1), (27, 2097152), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, 524288), (39, 2097152), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Decide 14 with phase True at level 12

After decision at level 12
 pending : [27, 39, 38, 22, 15, 3, 19, 16, 18]
 solution : [9, 8, 23, 14]


New level: 13
 pending : [27, 39, 38, 22, 15, 3, 19, 16, 18]
 solution : [9, 8, 23, 14]


Before reduction : 
 pending  : [27, 39, 38, 22, 15, 3, 19, 16, 18]
 solution : [9, 8, 23, 14]

Essensial at level 13 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 262144), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 8388608), (15, 4194304), (16, 131072), (17, -1), (18, 8388608), (19, 270336), (20, -1), (21, -1), (22, 131072), (23, -1), (24, -1), (25, -1), (26, -1), (27, 2097152), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, 524288), (39, 2097152), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 131072), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, 0), (16, 0), (17, -1), (18, 2097152), (19, 133120), (20, -1), (21, -1), (22, 0), (23, -1), (24, -1), (25, -1), (26, -1), (27, 524288), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, 1024), (39, 524288), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 13 : {16, 22, 15}

After reduction : 
 pending  : [27, 39, 38, 3, 19, 18]
 solution : [9, 8, 23, 14]


Before reduction : 
 pending  : [27, 39, 38, 3, 19, 18]
 solution : [9, 8, 23, 14]

Essensial at level 13 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 131072), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, 0), (16, 0), (17, -1), (18, 2097152), (19, 133120), (20, -1), (21, -1), (22, 0), (23, -1), (24, -1), (25, -1), (26, -1), (27, 524288), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, 1024), (39, 524288), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 131072), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, 2097152), (19, 133120), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, 524288), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, 1024), (39, 524288), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 13 : set()

After reduction : 
 pending  : [27, 39, 38, 3, 19, 18]
 solution : [9, 8, 23, 14]


Solution : [9, 8, 23, 14] has cost 23.


Before backtrack at level 13
 pending : [27, 39, 38, 3, 19, 18]
 solution : [9, 8, 23, 14]

After backtrack at level 13
 pending : [27, 39, 38, 3, 19, 18, 22, 15, 16]
 solution : [9, 8, 23, 14]


Invert decision for 14 at level 12


New level: 13
 pending : [27, 39, 38, 3, 19, 18, 22, 15, 16]
 solution : [9, 8, 23]


Before reduction : 
 pending  : [27, 39, 38, 3, 19, 18, 22, 15, 16]
 solution : [9, 8, 23]

Essensial at level 13 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 131072), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, 2097152), (19, 133120), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, 524288), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, 1024), (39, 524288), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 262144), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, 4194304), (16, 131072), (17, -1), (18, 8388608), (19, 270336), (20, -1), (21, -1), (22, 131072), (23, -1), (24, -1), (25, -1), (26, -1), (27, 2097152), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, 524288), (39, 2097152), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 13 : set()

After reduction : 
 pending  : [27, 39, 38, 3, 19, 18, 22, 15, 16]
 solution : [9, 8, 23]


Solution : [9, 8, 23] has cost 16.


Decide in level 13 among pending : [27, 39, 38, 3, 19, 18, 22, 15, 16]

Coverage : [(0, -1), (1, -1), (2, -1), (3, 262144), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, 4194304), (16, 131072), (17, -1), (18, 8388608), (19, 270336), (20, -1), (21, -1), (22, 131072), (23, -1), (24, -1), (25, -1), (26, -1), (27, 2097152), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, 524288), (39, 2097152), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Decide 18 with phase True at level 13

After decision at level 13
 pending : [27, 39, 38, 3, 19, 22, 15, 16]
 solution : [9, 8, 23, 18]


New level: 14
 pending : [27, 39, 38, 3, 19, 22, 15, 16]
 solution : [9, 8, 23, 18]


Before reduction : 
 pending  : [27, 39, 38, 3, 19, 22, 15, 16]
 solution : [9, 8, 23, 18]

Essensial at level 14 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 262144), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, 4194304), (16, 131072), (17, -1), (18, 8388608), (19, 270336), (20, -1), (21, -1), (22, 131072), (23, -1), (24, -1), (25, -1), (26, -1), (27, 2097152), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, 524288), (39, 2097152), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 0), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, 32768), (16, 0), (17, -1), (18, -1), (19, 0), (20, -1), (21, -1), (22, 32768), (23, -1), (24, -1), (25, -1), (26, -1), (27, 2048), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, 1024), (39, 2048), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 14 : {19, 16, 3}

After reduction : 
 pending  : [27, 39, 38, 22, 15]
 solution : [9, 8, 23, 18]


Before reduction : 
 pending  : [27, 39, 38, 22, 15]
 solution : [9, 8, 23, 18]

Essensial at level 14 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 0), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, 32768), (16, 0), (17, -1), (18, -1), (19, 0), (20, -1), (21, -1), (22, 32768), (23, -1), (24, -1), (25, -1), (26, -1), (27, 2048), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, 1024), (39, 2048), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, 32768), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, 32768), (23, -1), (24, -1), (25, -1), (26, -1), (27, 2048), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, 1024), (39, 2048), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 14 : set()

After reduction : 
 pending  : [27, 39, 38, 22, 15]
 solution : [9, 8, 23, 18]


Solution : [9, 8, 23, 18] has cost 25.


Before backtrack at level 14
 pending : [27, 39, 38, 22, 15]
 solution : [9, 8, 23, 18]

After backtrack at level 14
 pending : [27, 39, 38, 22, 15, 3, 19, 16]
 solution : [9, 8, 23, 18]


Invert decision for 18 at level 13


New level: 14
 pending : [27, 39, 38, 22, 15, 3, 19, 16]
 solution : [9, 8, 23]


Before reduction : 
 pending  : [27, 39, 38, 22, 15, 3, 19, 16]
 solution : [9, 8, 23]

Essensial at level 14 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, 32768), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, 32768), (23, -1), (24, -1), (25, -1), (26, -1), (27, 2048), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, 1024), (39, 2048), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 262144), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, 4194304), (16, 131072), (17, -1), (18, -1), (19, 270336), (20, -1), (21, -1), (22, 131072), (23, -1), (24, -1), (25, -1), (26, -1), (27, 2097152), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, 524288), (39, 2097152), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 14 : set()

After reduction : 
 pending  : [27, 39, 38, 22, 15, 3, 19, 16]
 solution : [9, 8, 23]


Solution : [9, 8, 23] has cost 16.


Decide in level 14 among pending : [27, 39, 38, 22, 15, 3, 19, 16]

Coverage : [(0, -1), (1, -1), (2, -1), (3, 262144), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, 4194304), (16, 131072), (17, -1), (18, -1), (19, 270336), (20, -1), (21, -1), (22, 131072), (23, -1), (24, -1), (25, -1), (26, -1), (27, 2097152), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, 524288), (39, 2097152), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Decide 15 with phase True at level 14

After decision at level 14
 pending : [27, 39, 38, 22, 3, 19, 16]
 solution : [9, 8, 23, 15]


New level: 15
 pending : [27, 39, 38, 22, 3, 19, 16]
 solution : [9, 8, 23, 15]


Before reduction : 
 pending  : [27, 39, 38, 22, 3, 19, 16]
 solution : [9, 8, 23, 15]

Essensial at level 15 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 262144), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, 4194304), (16, 131072), (17, -1), (18, -1), (19, 270336), (20, -1), (21, -1), (22, 131072), (23, -1), (24, -1), (25, -1), (26, -1), (27, 2097152), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, 524288), (39, 2097152), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 131072), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, 0), (17, -1), (18, -1), (19, 133120), (20, -1), (21, -1), (22, 0), (23, -1), (24, -1), (25, -1), (26, -1), (27, 524288), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, 1024), (39, 524288), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 15 : {16, 22}

After reduction : 
 pending  : [27, 39, 38, 3, 19]
 solution : [9, 8, 23, 15]


Before reduction : 
 pending  : [27, 39, 38, 3, 19]
 solution : [9, 8, 23, 15]

Essensial at level 15 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 131072), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, 0), (17, -1), (18, -1), (19, 133120), (20, -1), (21, -1), (22, 0), (23, -1), (24, -1), (25, -1), (26, -1), (27, 524288), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, 1024), (39, 524288), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 131072), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, 133120), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, 524288), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, 1024), (39, 524288), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 15 : set()

After reduction : 
 pending  : [27, 39, 38, 3, 19]
 solution : [9, 8, 23, 15]


Solution : [9, 8, 23, 15] has cost 23.


Before backtrack at level 15
 pending : [27, 39, 38, 3, 19]
 solution : [9, 8, 23, 15]

After backtrack at level 15
 pending : [27, 39, 38, 3, 19, 22, 16]
 solution : [9, 8, 23, 15]


Invert decision for 15 at level 14


New level: 15
 pending : [27, 39, 38, 3, 19, 22, 16]
 solution : [9, 8, 23]


Before reduction : 
 pending  : [27, 39, 38, 3, 19, 22, 16]
 solution : [9, 8, 23]

Essensial at level 15 : {22}

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 131072), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, 133120), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, 524288), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, 1024), (39, 524288), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 262144), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, 65536), (17, -1), (18, -1), (19, 270336), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, 2097152), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, 524288), (39, 2097152), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 15 : set()

After reduction : 
 pending  : [27, 39, 38, 3, 19, 16]
 solution : [9, 8, 23, 22]


Before reduction : 
 pending  : [27, 39, 38, 3, 19, 16]
 solution : [9, 8, 23, 22]

Essensial at level 15 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 262144), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, 65536), (17, -1), (18, -1), (19, 270336), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, 2097152), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, 524288), (39, 2097152), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 262144), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, 65536), (17, -1), (18, -1), (19, 270336), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, 2097152), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, 524288), (39, 2097152), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 15 : set()

After reduction : 
 pending  : [27, 39, 38, 3, 19, 16]
 solution : [9, 8, 23, 22]


Solution : [9, 8, 23, 22] has cost 23.


Before backtrack at level 15
 pending : [27, 39, 38, 3, 19, 16]
 solution : [9, 8, 23, 22]

After backtrack at level 15
 pending : [27, 39, 38, 3, 19, 16, 22]
 solution : [9, 8, 23]


Before backtrack at level 14
 pending : [27, 39, 38, 3, 19, 16, 22]
 solution : [9, 8, 23]

After backtrack at level 14
 pending : [27, 39, 38, 3, 19, 16, 22, 15]
 solution : [9, 8, 23]


Before backtrack at level 13
 pending : [27, 39, 38, 3, 19, 16, 22, 15]
 solution : [9, 8, 23]

After backtrack at level 13
 pending : [27, 39, 38, 3, 19, 16, 22, 15, 18]
 solution : [9, 8, 23]


Before backtrack at level 12
 pending : [27, 39, 38, 3, 19, 16, 22, 15, 18]
 solution : [9, 8, 23]

After backtrack at level 12
 pending : [27, 39, 38, 3, 19, 16, 22, 15, 18, 14]
 solution : [9, 8, 23]


Before backtrack at level 11
 pending : [27, 39, 38, 3, 19, 16, 22, 15, 18, 14]
 solution : [9, 8, 23]

After backtrack at level 11
 pending : [27, 39, 38, 3, 19, 16, 22, 15, 18, 14, 23, 5, 29, 31, 37, 42, 43, 47, 48, 49, 41, 30, 33, 17]
 solution : [9, 8]


Before backtrack at level 10
 pending : [27, 39, 38, 3, 19, 16, 22, 15, 18, 14, 23, 5, 29, 31, 37, 42, 43, 47, 48, 49, 41, 30, 33, 17]
 solution : [9, 8]

After backtrack at level 10
 pending : [27, 39, 38, 3, 19, 16, 22, 15, 18, 14, 23, 5, 29, 31, 37, 42, 43, 47, 48, 49, 41, 30, 33, 17, 7]
 solution : [9, 8]


Before backtrack at level 9
 pending : [27, 39, 38, 3, 19, 16, 22, 15, 18, 14, 23, 5, 29, 31, 37, 42, 43, 47, 48, 49, 41, 30, 33, 17, 7]
 solution : [9, 8]

After backtrack at level 9
 pending : [27, 39, 38, 3, 19, 16, 22, 15, 18, 14, 23, 5, 29, 31, 37, 42, 43, 47, 48, 49, 41, 30, 33, 17, 7, 40]
 solution : [9, 8]


Before backtrack at level 8
 pending : [27, 39, 38, 3, 19, 16, 22, 15, 18, 14, 23, 5, 29, 31, 37, 42, 43, 47, 48, 49, 41, 30, 33, 17, 7, 40]
 solution : [9, 8]

After backtrack at level 8
 pending : [27, 39, 38, 3, 19, 16, 22, 15, 18, 14, 23, 5, 29, 31, 37, 42, 43, 47, 48, 49, 41, 30, 33, 17, 7, 40, 24]
 solution : [9, 8]


Before backtrack at level 7
 pending : [27, 39, 38, 3, 19, 16, 22, 15, 18, 14, 23, 5, 29, 31, 37, 42, 43, 47, 48, 49, 41, 30, 33, 17, 7, 40, 24]
 solution : [9, 8]

After backtrack at level 7
 pending : [27, 39, 38, 3, 19, 16, 22, 15, 18, 14, 23, 5, 29, 31, 37, 42, 43, 47, 48, 49, 41, 30, 33, 17, 7, 40, 24, 26]
 solution : [9, 8]


Before backtrack at level 6
 pending : [27, 39, 38, 3, 19, 16, 22, 15, 18, 14, 23, 5, 29, 31, 37, 42, 43, 47, 48, 49, 41, 30, 33, 17, 7, 40, 24, 26]
 solution : [9, 8]

After backtrack at level 6
 pending : [27, 39, 38, 3, 19, 16, 22, 15, 18, 14, 23, 5, 29, 31, 37, 42, 43, 47, 48, 49, 41, 30, 33, 17, 7, 40, 24, 26, 21]
 solution : [9, 8]


Before backtrack at level 5
 pending : [27, 39, 38, 3, 19, 16, 22, 15, 18, 14, 23, 5, 29, 31, 37, 42, 43, 47, 48, 49, 41, 30, 33, 17, 7, 40, 24, 26, 21]
 solution : [9, 8]

After backtrack at level 5
 pending : [27, 39, 38, 3, 19, 16, 22, 15, 18, 14, 23, 5, 29, 31, 37, 42, 43, 47, 48, 49, 41, 30, 33, 17, 7, 40, 24, 26, 21, 32]
 solution : [9, 8]


Before backtrack at level 4
 pending : [27, 39, 38, 3, 19, 16, 22, 15, 18, 14, 23, 5, 29, 31, 37, 42, 43, 47, 48, 49, 41, 30, 33, 17, 7, 40, 24, 26, 21, 32]
 solution : [9, 8]

After backtrack at level 4
 pending : [27, 39, 38, 3, 19, 16, 22, 15, 18, 14, 23, 5, 29, 31, 37, 42, 43, 47, 48, 49, 41, 30, 33, 17, 7, 40, 24, 26, 21, 32, 13]
 solution : [9, 8]


Before backtrack at level 3
 pending : [27, 39, 38, 3, 19, 16, 22, 15, 18, 14, 23, 5, 29, 31, 37, 42, 43, 47, 48, 49, 41, 30, 33, 17, 7, 40, 24, 26, 21, 32, 13]
 solution : [9, 8]

After backtrack at level 3
 pending : [27, 39, 38, 3, 19, 16, 22, 15, 18, 14, 23, 5, 29, 31, 37, 42, 43, 47, 48, 49, 41, 30, 33, 17, 7, 40, 24, 26, 21, 32, 13, 28]
 solution : [9, 8]


Before backtrack at level 2
 pending : [27, 39, 38, 3, 19, 16, 22, 15, 18, 14, 23, 5, 29, 31, 37, 42, 43, 47, 48, 49, 41, 30, 33, 17, 7, 40, 24, 26, 21, 32, 13, 28]
 solution : [9, 8]

After backtrack at level 2
 pending : [27, 39, 38, 3, 19, 16, 22, 15, 18, 14, 23, 5, 29, 31, 37, 42, 43, 47, 48, 49, 41, 30, 33, 17, 7, 40, 24, 26, 21, 32, 13, 28, 10]
 solution : [9, 8]


Invert decision for 8 at level 1


New level: 2
 pending : [27, 39, 38, 3, 19, 16, 22, 15, 18, 14, 23, 5, 29, 31, 37, 42, 43, 47, 48, 49, 41, 30, 33, 17, 7, 40, 24, 26, 21, 32, 13, 28, 10]
 solution : [9]


Before reduction : 
 pending  : [27, 39, 38, 3, 19, 16, 22, 15, 18, 14, 23, 5, 29, 31, 37, 42, 43, 47, 48, 49, 41, 30, 33, 17, 7, 40, 24, 26, 21, 32, 13, 28, 10]
 solution : [9]

Essensial at level 2 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 262144), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, 65536), (17, -1), (18, -1), (19, 270336), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, 2097152), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, 524288), (39, 2097152), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 1048576), (4, -1), (5, 1048576), (6, -1), (7, 134217728), (8, -1), (9, -1), (10, 17179869184), (11, -1), (12, -1), (13, 2147483648), (14, 16777216), (15, 8388608), (16, 524288), (17, 67108864), (18, 33554432), (19, 1114112), (20, -1), (21, 1073741824), (22, 262144), (23, 134217728), (24, 1073741824), (25, -1), (26, 4294967296), (27, 4194304), (28, 4294967296), (29, 1048576), (30, 4194304), (31, 16384), (32, 2147483648), (33, 32768), (34, -1), (35, -1), (36, -1), (37, 16384), (38, 268435456), (39, 4194304), (40, 1073741824), (41, 134217728), (42, 524288), (43, 524288), (44, -1), (45, -1), (46, -1), (47, 67108864), (48, 16777216), (49, 67108864), (50, -1), (51, -1), (52, -1)]

Covered at level 2 : set()

After reduction : 
 pending  : [27, 39, 38, 3, 19, 16, 22, 15, 18, 14, 23, 5, 29, 31, 37, 42, 43, 47, 48, 49, 41, 30, 33, 17, 7, 40, 24, 26, 21, 32, 13, 28, 10]
 solution : [9]


Solution : [9] has cost 6.


Decide in level 2 among pending : [27, 39, 38, 3, 19, 16, 22, 15, 18, 14, 23, 5, 29, 31, 37, 42, 43, 47, 48, 49, 41, 30, 33, 17, 7, 40, 24, 26, 21, 32, 13, 28, 10]

Coverage : [(0, -1), (1, -1), (2, -1), (3, 1048576), (4, -1), (5, 1048576), (6, -1), (7, 134217728), (8, -1), (9, -1), (10, 17179869184), (11, -1), (12, -1), (13, 2147483648), (14, 16777216), (15, 8388608), (16, 524288), (17, 67108864), (18, 33554432), (19, 1114112), (20, -1), (21, 1073741824), (22, 262144), (23, 134217728), (24, 1073741824), (25, -1), (26, 4294967296), (27, 4194304), (28, 4294967296), (29, 1048576), (30, 4194304), (31, 16384), (32, 2147483648), (33, 32768), (34, -1), (35, -1), (36, -1), (37, 16384), (38, 268435456), (39, 4194304), (40, 1073741824), (41, 134217728), (42, 524288), (43, 524288), (44, -1), (45, -1), (46, -1), (47, 67108864), (48, 16777216), (49, 67108864), (50, -1), (51, -1), (52, -1)]

Decide 10 with phase True at level 2

After decision at level 2
 pending : [27, 39, 38, 3, 19, 16, 22, 15, 18, 14, 23, 5, 29, 31, 37, 42, 43, 47, 48, 49, 41, 30, 33, 17, 7, 40, 24, 26, 21, 32, 13, 28]
 solution : [9, 10]


New level: 3
 pending : [27, 39, 38, 3, 19, 16, 22, 15, 18, 14, 23, 5, 29, 31, 37, 42, 43, 47, 48, 49, 41, 30, 33, 17, 7, 40, 24, 26, 21, 32, 13, 28]
 solution : [9, 10]


Before reduction : 
 pending  : [27, 39, 38, 3, 19, 16, 22, 15, 18, 14, 23, 5, 29, 31, 37, 42, 43, 47, 48, 49, 41, 30, 33, 17, 7, 40, 24, 26, 21, 32, 13, 28]
 solution : [9, 10]

Essensial at level 3 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 1048576), (4, -1), (5, 1048576), (6, -1), (7, 134217728), (8, -1), (9, -1), (10, 17179869184), (11, -1), (12, -1), (13, 2147483648), (14, 16777216), (15, 8388608), (16, 524288), (17, 67108864), (18, 33554432), (19, 1114112), (20, -1), (21, 1073741824), (22, 262144), (23, 134217728), (24, 1073741824), (25, -1), (26, 4294967296), (27, 4194304), (28, 4294967296), (29, 1048576), (30, 4194304), (31, 16384), (32, 2147483648), (33, 32768), (34, -1), (35, -1), (36, -1), (37, 16384), (38, 268435456), (39, 4194304), (40, 1073741824), (41, 134217728), (42, 524288), (43, 524288), (44, -1), (45, -1), (46, -1), (47, 67108864), (48, 16777216), (49, 67108864), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 262144), (4, -1), (5, 1048576), (6, -1), (7, 134217728), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, 536870912), (14, 4194304), (15, 2097152), (16, 131072), (17, 16777216), (18, 8388608), (19, 278528), (20, -1), (21, 268435456), (22, 65536), (23, 134217728), (24, 1073741824), (25, -1), (26, 4294967296), (27, 1048576), (28, 1073741824), (29, 1048576), (30, 4194304), (31, 16384), (32, 2147483648), (33, 32768), (34, -1), (35, -1), (36, -1), (37, 16384), (38, 67108864), (39, 1048576), (40, 268435456), (41, 134217728), (42, 524288), (43, 524288), (44, -1), (45, -1), (46, -1), (47, 67108864), (48, 16777216), (49, 67108864), (50, -1), (51, -1), (52, -1)]

Covered at level 3 : set()

After reduction : 
 pending  : [27, 39, 38, 3, 19, 16, 22, 15, 18, 14, 23, 5, 29, 31, 37, 42, 43, 47, 48, 49, 41, 30, 33, 17, 7, 40, 24, 26, 21, 32, 13, 28]
 solution : [9, 10]


Solution : [9, 10] has cost 11.


Decide in level 3 among pending : [27, 39, 38, 3, 19, 16, 22, 15, 18, 14, 23, 5, 29, 31, 37, 42, 43, 47, 48, 49, 41, 30, 33, 17, 7, 40, 24, 26, 21, 32, 13, 28]

Coverage : [(0, -1), (1, -1), (2, -1), (3, 262144), (4, -1), (5, 1048576), (6, -1), (7, 134217728), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, 536870912), (14, 4194304), (15, 2097152), (16, 131072), (17, 16777216), (18, 8388608), (19, 278528), (20, -1), (21, 268435456), (22, 65536), (23, 134217728), (24, 1073741824), (25, -1), (26, 4294967296), (27, 1048576), (28, 1073741824), (29, 1048576), (30, 4194304), (31, 16384), (32, 2147483648), (33, 32768), (34, -1), (35, -1), (36, -1), (37, 16384), (38, 67108864), (39, 1048576), (40, 268435456), (41, 134217728), (42, 524288), (43, 524288), (44, -1), (45, -1), (46, -1), (47, 67108864), (48, 16777216), (49, 67108864), (50, -1), (51, -1), (52, -1)]

Decide 26 with phase True at level 3

After decision at level 3
 pending : [27, 39, 38, 3, 19, 16, 22, 15, 18, 14, 23, 5, 29, 31, 37, 42, 43, 47, 48, 49, 41, 30, 33, 17, 7, 40, 24, 21, 32, 13, 28]
 solution : [9, 10, 26]


New level: 4
 pending : [27, 39, 38, 3, 19, 16, 22, 15, 18, 14, 23, 5, 29, 31, 37, 42, 43, 47, 48, 49, 41, 30, 33, 17, 7, 40, 24, 21, 32, 13, 28]
 solution : [9, 10, 26]


Before reduction : 
 pending  : [27, 39, 38, 3, 19, 16, 22, 15, 18, 14, 23, 5, 29, 31, 37, 42, 43, 47, 48, 49, 41, 30, 33, 17, 7, 40, 24, 21, 32, 13, 28]
 solution : [9, 10, 26]

Essensial at level 4 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 262144), (4, -1), (5, 1048576), (6, -1), (7, 134217728), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, 536870912), (14, 4194304), (15, 2097152), (16, 131072), (17, 16777216), (18, 8388608), (19, 278528), (20, -1), (21, 268435456), (22, 65536), (23, 134217728), (24, 1073741824), (25, -1), (26, 4294967296), (27, 1048576), (28, 1073741824), (29, 1048576), (30, 4194304), (31, 16384), (32, 2147483648), (33, 32768), (34, -1), (35, -1), (36, -1), (37, 16384), (38, 67108864), (39, 1048576), (40, 268435456), (41, 134217728), (42, 524288), (43, 524288), (44, -1), (45, -1), (46, -1), (47, 67108864), (48, 16777216), (49, 67108864), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 262144), (4, -1), (5, 1048576), (6, -1), (7, 134217728), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, 536870912), (14, 4194304), (15, 2097152), (16, 131072), (17, 16777216), (18, 8388608), (19, 278528), (20, -1), (21, 268435456), (22, 65536), (23, 134217728), (24, 536870912), (25, -1), (26, -1), (27, 1048576), (28, 1073741824), (29, 1048576), (30, 2097152), (31, 16384), (32, 1073741824), (33, 16384), (34, -1), (35, -1), (36, -1), (37, 16384), (38, 67108864), (39, 1048576), (40, 134217728), (41, 134217728), (42, 524288), (43, 524288), (44, -1), (45, -1), (46, -1), (47, 67108864), (48, 16777216), (49, 67108864), (50, -1), (51, -1), (52, -1)]

Covered at level 4 : set()

After reduction : 
 pending  : [27, 39, 38, 3, 19, 16, 22, 15, 18, 14, 23, 5, 29, 31, 37, 42, 43, 47, 48, 49, 41, 30, 33, 17, 7, 40, 24, 21, 32, 13, 28]
 solution : [9, 10, 26]


Solution : [9, 10, 26] has cost 15.


Decide in level 4 among pending : [27, 39, 38, 3, 19, 16, 22, 15, 18, 14, 23, 5, 29, 31, 37, 42, 43, 47, 48, 49, 41, 30, 33, 17, 7, 40, 24, 21, 32, 13, 28]

Coverage : [(0, -1), (1, -1), (2, -1), (3, 262144), (4, -1), (5, 1048576), (6, -1), (7, 134217728), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, 536870912), (14, 4194304), (15, 2097152), (16, 131072), (17, 16777216), (18, 8388608), (19, 278528), (20, -1), (21, 268435456), (22, 65536), (23, 134217728), (24, 536870912), (25, -1), (26, -1), (27, 1048576), (28, 1073741824), (29, 1048576), (30, 2097152), (31, 16384), (32, 1073741824), (33, 16384), (34, -1), (35, -1), (36, -1), (37, 16384), (38, 67108864), (39, 1048576), (40, 134217728), (41, 134217728), (42, 524288), (43, 524288), (44, -1), (45, -1), (46, -1), (47, 67108864), (48, 16777216), (49, 67108864), (50, -1), (51, -1), (52, -1)]

Decide 32 with phase True at level 4

After decision at level 4
 pending : [27, 39, 38, 3, 19, 16, 22, 15, 18, 14, 23, 5, 29, 31, 37, 42, 43, 47, 48, 49, 41, 30, 33, 17, 7, 40, 24, 21, 13, 28]
 solution : [9, 10, 26, 32]


New level: 5
 pending : [27, 39, 38, 3, 19, 16, 22, 15, 18, 14, 23, 5, 29, 31, 37, 42, 43, 47, 48, 49, 41, 30, 33, 17, 7, 40, 24, 21, 13, 28]
 solution : [9, 10, 26, 32]


Before reduction : 
 pending  : [27, 39, 38, 3, 19, 16, 22, 15, 18, 14, 23, 5, 29, 31, 37, 42, 43, 47, 48, 49, 41, 30, 33, 17, 7, 40, 24, 21, 13, 28]
 solution : [9, 10, 26, 32]

Essensial at level 5 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 262144), (4, -1), (5, 1048576), (6, -1), (7, 134217728), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, 536870912), (14, 4194304), (15, 2097152), (16, 131072), (17, 16777216), (18, 8388608), (19, 278528), (20, -1), (21, 268435456), (22, 65536), (23, 134217728), (24, 536870912), (25, -1), (26, -1), (27, 1048576), (28, 1073741824), (29, 1048576), (30, 2097152), (31, 16384), (32, 1073741824), (33, 16384), (34, -1), (35, -1), (36, -1), (37, 16384), (38, 67108864), (39, 1048576), (40, 134217728), (41, 134217728), (42, 524288), (43, 524288), (44, -1), (45, -1), (46, -1), (47, 67108864), (48, 16777216), (49, 67108864), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 262144), (4, -1), (5, 262144), (6, -1), (7, 134217728), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, 536870912), (14, 4194304), (15, 2097152), (16, 131072), (17, 16777216), (18, 8388608), (19, 278528), (20, -1), (21, 268435456), (22, 65536), (23, 134217728), (24, 16384), (25, -1), (26, -1), (27, 1048576), (28, 1073741824), (29, 262144), (30, 0), (31, 4096), (32, -1), (33, 0), (34, -1), (35, -1), (36, -1), (37, 4096), (38, 67108864), (39, 1048576), (40, 4096), (41, 33554432), (42, 131072), (43, 131072), (44, -1), (45, -1), (46, -1), (47, 16777216), (48, 4194304), (49, 16777216), (50, -1), (51, -1), (52, -1)]

Covered at level 5 : {33, 30}

After reduction : 
 pending  : [27, 39, 38, 3, 19, 16, 22, 15, 18, 14, 23, 5, 29, 31, 37, 42, 43, 47, 48, 49, 41, 17, 7, 40, 24, 21, 13, 28]
 solution : [9, 10, 26, 32]


Before reduction : 
 pending  : [27, 39, 38, 3, 19, 16, 22, 15, 18, 14, 23, 5, 29, 31, 37, 42, 43, 47, 48, 49, 41, 17, 7, 40, 24, 21, 13, 28]
 solution : [9, 10, 26, 32]

Essensial at level 5 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 262144), (4, -1), (5, 262144), (6, -1), (7, 134217728), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, 536870912), (14, 4194304), (15, 2097152), (16, 131072), (17, 16777216), (18, 8388608), (19, 278528), (20, -1), (21, 268435456), (22, 65536), (23, 134217728), (24, 16384), (25, -1), (26, -1), (27, 1048576), (28, 1073741824), (29, 262144), (30, 0), (31, 4096), (32, -1), (33, 0), (34, -1), (35, -1), (36, -1), (37, 4096), (38, 67108864), (39, 1048576), (40, 4096), (41, 33554432), (42, 131072), (43, 131072), (44, -1), (45, -1), (46, -1), (47, 16777216), (48, 4194304), (49, 16777216), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 262144), (4, -1), (5, 262144), (6, -1), (7, 134217728), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, 536870912), (14, 4194304), (15, 2097152), (16, 131072), (17, 16777216), (18, 8388608), (19, 278528), (20, -1), (21, 268435456), (22, 65536), (23, 134217728), (24, 16384), (25, -1), (26, -1), (27, 1048576), (28, 1073741824), (29, 262144), (30, -1), (31, 4096), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, 4096), (38, 67108864), (39, 1048576), (40, 4096), (41, 33554432), (42, 131072), (43, 131072), (44, -1), (45, -1), (46, -1), (47, 16777216), (48, 4194304), (49, 16777216), (50, -1), (51, -1), (52, -1)]

Covered at level 5 : set()

After reduction : 
 pending  : [27, 39, 38, 3, 19, 16, 22, 15, 18, 14, 23, 5, 29, 31, 37, 42, 43, 47, 48, 49, 41, 17, 7, 40, 24, 21, 13, 28]
 solution : [9, 10, 26, 32]


Solution : [9, 10, 26, 32] has cost 28.


Before backtrack at level 5
 pending : [27, 39, 38, 3, 19, 16, 22, 15, 18, 14, 23, 5, 29, 31, 37, 42, 43, 47, 48, 49, 41, 17, 7, 40, 24, 21, 13, 28]
 solution : [9, 10, 26, 32]

After backtrack at level 5
 pending : [27, 39, 38, 3, 19, 16, 22, 15, 18, 14, 23, 5, 29, 31, 37, 42, 43, 47, 48, 49, 41, 17, 7, 40, 24, 21, 13, 28, 30, 33]
 solution : [9, 10, 26, 32]


Invert decision for 32 at level 4


New level: 5
 pending : [27, 39, 38, 3, 19, 16, 22, 15, 18, 14, 23, 5, 29, 31, 37, 42, 43, 47, 48, 49, 41, 17, 7, 40, 24, 21, 13, 28, 30, 33]
 solution : [9, 10, 26]


Before reduction : 
 pending  : [27, 39, 38, 3, 19, 16, 22, 15, 18, 14, 23, 5, 29, 31, 37, 42, 43, 47, 48, 49, 41, 17, 7, 40, 24, 21, 13, 28, 30, 33]
 solution : [9, 10, 26]

Essensial at level 5 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 262144), (4, -1), (5, 262144), (6, -1), (7, 134217728), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, 536870912), (14, 4194304), (15, 2097152), (16, 131072), (17, 16777216), (18, 8388608), (19, 278528), (20, -1), (21, 268435456), (22, 65536), (23, 134217728), (24, 16384), (25, -1), (26, -1), (27, 1048576), (28, 1073741824), (29, 262144), (30, -1), (31, 4096), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, 4096), (38, 67108864), (39, 1048576), (40, 4096), (41, 33554432), (42, 131072), (43, 131072), (44, -1), (45, -1), (46, -1), (47, 16777216), (48, 4194304), (49, 16777216), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 262144), (4, -1), (5, 1048576), (6, -1), (7, 134217728), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, 536870912), (14, 4194304), (15, 2097152), (16, 131072), (17, 16777216), (18, 8388608), (19, 278528), (20, -1), (21, 268435456), (22, 65536), (23, 134217728), (24, 536870912), (25, -1), (26, -1), (27, 1048576), (28, 1073741824), (29, 1048576), (30, 2097152), (31, 16384), (32, -1), (33, 16384), (34, -1), (35, -1), (36, -1), (37, 16384), (38, 67108864), (39, 1048576), (40, 134217728), (41, 134217728), (42, 524288), (43, 524288), (44, -1), (45, -1), (46, -1), (47, 67108864), (48, 16777216), (49, 67108864), (50, -1), (51, -1), (52, -1)]

Covered at level 5 : set()

After reduction : 
 pending  : [27, 39, 38, 3, 19, 16, 22, 15, 18, 14, 23, 5, 29, 31, 37, 42, 43, 47, 48, 49, 41, 17, 7, 40, 24, 21, 13, 28, 30, 33]
 solution : [9, 10, 26]


Solution : [9, 10, 26] has cost 15.


Decide in level 5 among pending : [27, 39, 38, 3, 19, 16, 22, 15, 18, 14, 23, 5, 29, 31, 37, 42, 43, 47, 48, 49, 41, 17, 7, 40, 24, 21, 13, 28, 30, 33]

Coverage : [(0, -1), (1, -1), (2, -1), (3, 262144), (4, -1), (5, 1048576), (6, -1), (7, 134217728), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, 536870912), (14, 4194304), (15, 2097152), (16, 131072), (17, 16777216), (18, 8388608), (19, 278528), (20, -1), (21, 268435456), (22, 65536), (23, 134217728), (24, 536870912), (25, -1), (26, -1), (27, 1048576), (28, 1073741824), (29, 1048576), (30, 2097152), (31, 16384), (32, -1), (33, 16384), (34, -1), (35, -1), (36, -1), (37, 16384), (38, 67108864), (39, 1048576), (40, 134217728), (41, 134217728), (42, 524288), (43, 524288), (44, -1), (45, -1), (46, -1), (47, 67108864), (48, 16777216), (49, 67108864), (50, -1), (51, -1), (52, -1)]

Decide 28 with phase True at level 5

After decision at level 5
 pending : [27, 39, 38, 3, 19, 16, 22, 15, 18, 14, 23, 5, 29, 31, 37, 42, 43, 47, 48, 49, 41, 17, 7, 40, 24, 21, 13, 30, 33]
 solution : [9, 10, 26, 28]


New level: 6
 pending : [27, 39, 38, 3, 19, 16, 22, 15, 18, 14, 23, 5, 29, 31, 37, 42, 43, 47, 48, 49, 41, 17, 7, 40, 24, 21, 13, 30, 33]
 solution : [9, 10, 26, 28]


Before reduction : 
 pending  : [27, 39, 38, 3, 19, 16, 22, 15, 18, 14, 23, 5, 29, 31, 37, 42, 43, 47, 48, 49, 41, 17, 7, 40, 24, 21, 13, 30, 33]
 solution : [9, 10, 26, 28]

Essensial at level 6 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 262144), (4, -1), (5, 1048576), (6, -1), (7, 134217728), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, 536870912), (14, 4194304), (15, 2097152), (16, 131072), (17, 16777216), (18, 8388608), (19, 278528), (20, -1), (21, 268435456), (22, 65536), (23, 134217728), (24, 536870912), (25, -1), (26, -1), (27, 1048576), (28, 1073741824), (29, 1048576), (30, 2097152), (31, 16384), (32, -1), (33, 16384), (34, -1), (35, -1), (36, -1), (37, 16384), (38, 67108864), (39, 1048576), (40, 134217728), (41, 134217728), (42, 524288), (43, 524288), (44, -1), (45, -1), (46, -1), (47, 67108864), (48, 16777216), (49, 67108864), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 0), (4, -1), (5, 262144), (6, -1), (7, 134217728), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, 0), (14, 0), (15, 0), (16, 0), (17, 0), (18, 0), (19, 0), (20, -1), (21, 0), (22, 0), (23, 134217728), (24, 536870912), (25, -1), (26, -1), (27, 0), (28, -1), (29, 524288), (30, 2097152), (31, 4096), (32, -1), (33, 4096), (34, -1), (35, -1), (36, -1), (37, 2048), (38, 2048), (39, 0), (40, 2048), (41, 67108864), (42, 131072), (43, 131072), (44, -1), (45, -1), (46, -1), (47, 33554432), (48, 4194304), (49, 16777216), (50, -1), (51, -1), (52, -1)]

Covered at level 6 : {3, 39, 13, 14, 15, 16, 17, 18, 19, 21, 22, 27}

After reduction : 
 pending  : [38, 23, 5, 29, 31, 37, 42, 43, 47, 48, 49, 41, 7, 40, 24, 30, 33]
 solution : [9, 10, 26, 28]


Before reduction : 
 pending  : [38, 23, 5, 29, 31, 37, 42, 43, 47, 48, 49, 41, 7, 40, 24, 30, 33]
 solution : [9, 10, 26, 28]

Essensial at level 6 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 0), (4, -1), (5, 262144), (6, -1), (7, 134217728), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, 0), (14, 0), (15, 0), (16, 0), (17, 0), (18, 0), (19, 0), (20, -1), (21, 0), (22, 0), (23, 134217728), (24, 536870912), (25, -1), (26, -1), (27, 0), (28, -1), (29, 524288), (30, 2097152), (31, 4096), (32, -1), (33, 4096), (34, -1), (35, -1), (36, -1), (37, 2048), (38, 2048), (39, 0), (40, 2048), (41, 67108864), (42, 131072), (43, 131072), (44, -1), (45, -1), (46, -1), (47, 33554432), (48, 4194304), (49, 16777216), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 262144), (6, -1), (7, 134217728), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, 134217728), (24, 536870912), (25, -1), (26, -1), (27, -1), (28, -1), (29, 524288), (30, 2097152), (31, 4096), (32, -1), (33, 4096), (34, -1), (35, -1), (36, -1), (37, 2048), (38, 2048), (39, -1), (40, 2048), (41, 67108864), (42, 131072), (43, 131072), (44, -1), (45, -1), (46, -1), (47, 33554432), (48, 4194304), (49, 16777216), (50, -1), (51, -1), (52, -1)]

Covered at level 6 : set()

After reduction : 
 pending  : [38, 23, 5, 29, 31, 37, 42, 43, 47, 48, 49, 41, 7, 40, 24, 30, 33]
 solution : [9, 10, 26, 28]


Solution : [9, 10, 26, 28] has cost 19.


Before backtrack at level 6
 pending : [38, 23, 5, 29, 31, 37, 42, 43, 47, 48, 49, 41, 7, 40, 24, 30, 33]
 solution : [9, 10, 26, 28]

After backtrack at level 6
 pending : [38, 23, 5, 29, 31, 37, 42, 43, 47, 48, 49, 41, 7, 40, 24, 30, 33, 27, 39, 3, 19, 16, 22, 15, 18, 14, 17, 21, 13]
 solution : [9, 10, 26, 28]


Invert decision for 28 at level 5


New level: 6
 pending : [38, 23, 5, 29, 31, 37, 42, 43, 47, 48, 49, 41, 7, 40, 24, 30, 33, 27, 39, 3, 19, 16, 22, 15, 18, 14, 17, 21, 13]
 solution : [9, 10, 26]


Before reduction : 
 pending  : [38, 23, 5, 29, 31, 37, 42, 43, 47, 48, 49, 41, 7, 40, 24, 30, 33, 27, 39, 3, 19, 16, 22, 15, 18, 14, 17, 21, 13]
 solution : [9, 10, 26]

Essensial at level 6 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 262144), (6, -1), (7, 134217728), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, 134217728), (24, 536870912), (25, -1), (26, -1), (27, -1), (28, -1), (29, 524288), (30, 2097152), (31, 4096), (32, -1), (33, 4096), (34, -1), (35, -1), (36, -1), (37, 2048), (38, 2048), (39, -1), (40, 2048), (41, 67108864), (42, 131072), (43, 131072), (44, -1), (45, -1), (46, -1), (47, 33554432), (48, 4194304), (49, 16777216), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 262144), (4, -1), (5, 1048576), (6, -1), (7, 134217728), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, 536870912), (14, 4194304), (15, 2097152), (16, 131072), (17, 16777216), (18, 8388608), (19, 278528), (20, -1), (21, 268435456), (22, 65536), (23, 134217728), (24, 536870912), (25, -1), (26, -1), (27, 1048576), (28, -1), (29, 1048576), (30, 2097152), (31, 16384), (32, -1), (33, 16384), (34, -1), (35, -1), (36, -1), (37, 16384), (38, 67108864), (39, 1048576), (40, 134217728), (41, 134217728), (42, 524288), (43, 524288), (44, -1), (45, -1), (46, -1), (47, 67108864), (48, 16777216), (49, 67108864), (50, -1), (51, -1), (52, -1)]

Covered at level 6 : set()

After reduction : 
 pending  : [38, 23, 5, 29, 31, 37, 42, 43, 47, 48, 49, 41, 7, 40, 24, 30, 33, 27, 39, 3, 19, 16, 22, 15, 18, 14, 17, 21, 13]
 solution : [9, 10, 26]


Solution : [9, 10, 26] has cost 15.


Decide in level 6 among pending : [38, 23, 5, 29, 31, 37, 42, 43, 47, 48, 49, 41, 7, 40, 24, 30, 33, 27, 39, 3, 19, 16, 22, 15, 18, 14, 17, 21, 13]

Coverage : [(0, -1), (1, -1), (2, -1), (3, 262144), (4, -1), (5, 1048576), (6, -1), (7, 134217728), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, 536870912), (14, 4194304), (15, 2097152), (16, 131072), (17, 16777216), (18, 8388608), (19, 278528), (20, -1), (21, 268435456), (22, 65536), (23, 134217728), (24, 536870912), (25, -1), (26, -1), (27, 1048576), (28, -1), (29, 1048576), (30, 2097152), (31, 16384), (32, -1), (33, 16384), (34, -1), (35, -1), (36, -1), (37, 16384), (38, 67108864), (39, 1048576), (40, 134217728), (41, 134217728), (42, 524288), (43, 524288), (44, -1), (45, -1), (46, -1), (47, 67108864), (48, 16777216), (49, 67108864), (50, -1), (51, -1), (52, -1)]

Decide 24 with phase True at level 6

After decision at level 6
 pending : [38, 23, 5, 29, 31, 37, 42, 43, 47, 48, 49, 41, 7, 40, 30, 33, 27, 39, 3, 19, 16, 22, 15, 18, 14, 17, 21, 13]
 solution : [9, 10, 26, 24]


New level: 7
 pending : [38, 23, 5, 29, 31, 37, 42, 43, 47, 48, 49, 41, 7, 40, 30, 33, 27, 39, 3, 19, 16, 22, 15, 18, 14, 17, 21, 13]
 solution : [9, 10, 26, 24]


Before reduction : 
 pending  : [38, 23, 5, 29, 31, 37, 42, 43, 47, 48, 49, 41, 7, 40, 30, 33, 27, 39, 3, 19, 16, 22, 15, 18, 14, 17, 21, 13]
 solution : [9, 10, 26, 24]

Essensial at level 7 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 262144), (4, -1), (5, 1048576), (6, -1), (7, 134217728), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, 536870912), (14, 4194304), (15, 2097152), (16, 131072), (17, 16777216), (18, 8388608), (19, 278528), (20, -1), (21, 268435456), (22, 65536), (23, 134217728), (24, 536870912), (25, -1), (26, -1), (27, 1048576), (28, -1), (29, 1048576), (30, 2097152), (31, 16384), (32, -1), (33, 16384), (34, -1), (35, -1), (36, -1), (37, 16384), (38, 67108864), (39, 1048576), (40, 134217728), (41, 134217728), (42, 524288), (43, 524288), (44, -1), (45, -1), (46, -1), (47, 67108864), (48, 16777216), (49, 67108864), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 262144), (4, -1), (5, 262144), (6, -1), (7, 33554432), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, 536870912), (14, 4194304), (15, 2097152), (16, 131072), (17, 16777216), (18, 8388608), (19, 278528), (20, -1), (21, 268435456), (22, 65536), (23, 33554432), (24, -1), (25, -1), (26, -1), (27, 1048576), (28, -1), (29, 262144), (30, 0), (31, 4096), (32, -1), (33, 0), (34, -1), (35, -1), (36, -1), (37, 4096), (38, 33554432), (39, 1048576), (40, 512), (41, 67108864), (42, 131072), (43, 131072), (44, -1), (45, -1), (46, -1), (47, 16777216), (48, 4194304), (49, 33554432), (50, -1), (51, -1), (52, -1)]

Covered at level 7 : {33, 30}

After reduction : 
 pending  : [38, 23, 5, 29, 31, 37, 42, 43, 47, 48, 49, 41, 7, 40, 27, 39, 3, 19, 16, 22, 15, 18, 14, 17, 21, 13]
 solution : [9, 10, 26, 24]


Before reduction : 
 pending  : [38, 23, 5, 29, 31, 37, 42, 43, 47, 48, 49, 41, 7, 40, 27, 39, 3, 19, 16, 22, 15, 18, 14, 17, 21, 13]
 solution : [9, 10, 26, 24]

Essensial at level 7 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 262144), (4, -1), (5, 262144), (6, -1), (7, 33554432), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, 536870912), (14, 4194304), (15, 2097152), (16, 131072), (17, 16777216), (18, 8388608), (19, 278528), (20, -1), (21, 268435456), (22, 65536), (23, 33554432), (24, -1), (25, -1), (26, -1), (27, 1048576), (28, -1), (29, 262144), (30, 0), (31, 4096), (32, -1), (33, 0), (34, -1), (35, -1), (36, -1), (37, 4096), (38, 33554432), (39, 1048576), (40, 512), (41, 67108864), (42, 131072), (43, 131072), (44, -1), (45, -1), (46, -1), (47, 16777216), (48, 4194304), (49, 33554432), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 262144), (4, -1), (5, 262144), (6, -1), (7, 33554432), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, 536870912), (14, 4194304), (15, 2097152), (16, 131072), (17, 16777216), (18, 8388608), (19, 278528), (20, -1), (21, 268435456), (22, 65536), (23, 33554432), (24, -1), (25, -1), (26, -1), (27, 1048576), (28, -1), (29, 262144), (30, -1), (31, 4096), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, 4096), (38, 33554432), (39, 1048576), (40, 512), (41, 67108864), (42, 131072), (43, 131072), (44, -1), (45, -1), (46, -1), (47, 16777216), (48, 4194304), (49, 33554432), (50, -1), (51, -1), (52, -1)]

Covered at level 7 : set()

After reduction : 
 pending  : [38, 23, 5, 29, 31, 37, 42, 43, 47, 48, 49, 41, 7, 40, 27, 39, 3, 19, 16, 22, 15, 18, 14, 17, 21, 13]
 solution : [9, 10, 26, 24]


Solution : [9, 10, 26, 24] has cost 22.


Before backtrack at level 7
 pending : [38, 23, 5, 29, 31, 37, 42, 43, 47, 48, 49, 41, 7, 40, 27, 39, 3, 19, 16, 22, 15, 18, 14, 17, 21, 13]
 solution : [9, 10, 26, 24]

After backtrack at level 7
 pending : [38, 23, 5, 29, 31, 37, 42, 43, 47, 48, 49, 41, 7, 40, 27, 39, 3, 19, 16, 22, 15, 18, 14, 17, 21, 13, 30, 33]
 solution : [9, 10, 26, 24]


Invert decision for 24 at level 6


New level: 7
 pending : [38, 23, 5, 29, 31, 37, 42, 43, 47, 48, 49, 41, 7, 40, 27, 39, 3, 19, 16, 22, 15, 18, 14, 17, 21, 13, 30, 33]
 solution : [9, 10, 26]


Before reduction : 
 pending  : [38, 23, 5, 29, 31, 37, 42, 43, 47, 48, 49, 41, 7, 40, 27, 39, 3, 19, 16, 22, 15, 18, 14, 17, 21, 13, 30, 33]
 solution : [9, 10, 26]

Essensial at level 7 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 262144), (4, -1), (5, 262144), (6, -1), (7, 33554432), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, 536870912), (14, 4194304), (15, 2097152), (16, 131072), (17, 16777216), (18, 8388608), (19, 278528), (20, -1), (21, 268435456), (22, 65536), (23, 33554432), (24, -1), (25, -1), (26, -1), (27, 1048576), (28, -1), (29, 262144), (30, -1), (31, 4096), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, 4096), (38, 33554432), (39, 1048576), (40, 512), (41, 67108864), (42, 131072), (43, 131072), (44, -1), (45, -1), (46, -1), (47, 16777216), (48, 4194304), (49, 33554432), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 262144), (4, -1), (5, 1048576), (6, -1), (7, 134217728), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, 536870912), (14, 4194304), (15, 2097152), (16, 131072), (17, 16777216), (18, 8388608), (19, 278528), (20, -1), (21, 268435456), (22, 65536), (23, 134217728), (24, -1), (25, -1), (26, -1), (27, 1048576), (28, -1), (29, 1048576), (30, 2097152), (31, 16384), (32, -1), (33, 16384), (34, -1), (35, -1), (36, -1), (37, 16384), (38, 67108864), (39, 1048576), (40, 134217728), (41, 134217728), (42, 524288), (43, 524288), (44, -1), (45, -1), (46, -1), (47, 67108864), (48, 16777216), (49, 67108864), (50, -1), (51, -1), (52, -1)]

Covered at level 7 : set()

After reduction : 
 pending  : [38, 23, 5, 29, 31, 37, 42, 43, 47, 48, 49, 41, 7, 40, 27, 39, 3, 19, 16, 22, 15, 18, 14, 17, 21, 13, 30, 33]
 solution : [9, 10, 26]


Solution : [9, 10, 26] has cost 15.


Decide in level 7 among pending : [38, 23, 5, 29, 31, 37, 42, 43, 47, 48, 49, 41, 7, 40, 27, 39, 3, 19, 16, 22, 15, 18, 14, 17, 21, 13, 30, 33]

Coverage : [(0, -1), (1, -1), (2, -1), (3, 262144), (4, -1), (5, 1048576), (6, -1), (7, 134217728), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, 536870912), (14, 4194304), (15, 2097152), (16, 131072), (17, 16777216), (18, 8388608), (19, 278528), (20, -1), (21, 268435456), (22, 65536), (23, 134217728), (24, -1), (25, -1), (26, -1), (27, 1048576), (28, -1), (29, 1048576), (30, 2097152), (31, 16384), (32, -1), (33, 16384), (34, -1), (35, -1), (36, -1), (37, 16384), (38, 67108864), (39, 1048576), (40, 134217728), (41, 134217728), (42, 524288), (43, 524288), (44, -1), (45, -1), (46, -1), (47, 67108864), (48, 16777216), (49, 67108864), (50, -1), (51, -1), (52, -1)]

Decide 13 with phase True at level 7

After decision at level 7
 pending : [38, 23, 5, 29, 31, 37, 42, 43, 47, 48, 49, 41, 7, 40, 27, 39, 3, 19, 16, 22, 15, 18, 14, 17, 21, 30, 33]
 solution : [9, 10, 26, 13]


New level: 8
 pending : [38, 23, 5, 29, 31, 37, 42, 43, 47, 48, 49, 41, 7, 40, 27, 39, 3, 19, 16, 22, 15, 18, 14, 17, 21, 30, 33]
 solution : [9, 10, 26, 13]


Before reduction : 
 pending  : [38, 23, 5, 29, 31, 37, 42, 43, 47, 48, 49, 41, 7, 40, 27, 39, 3, 19, 16, 22, 15, 18, 14, 17, 21, 30, 33]
 solution : [9, 10, 26, 13]

Essensial at level 8 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 262144), (4, -1), (5, 1048576), (6, -1), (7, 134217728), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, 536870912), (14, 4194304), (15, 2097152), (16, 131072), (17, 16777216), (18, 8388608), (19, 278528), (20, -1), (21, 268435456), (22, 65536), (23, 134217728), (24, -1), (25, -1), (26, -1), (27, 1048576), (28, -1), (29, 1048576), (30, 2097152), (31, 16384), (32, -1), (33, 16384), (34, -1), (35, -1), (36, -1), (37, 16384), (38, 67108864), (39, 1048576), (40, 134217728), (41, 134217728), (42, 524288), (43, 524288), (44, -1), (45, -1), (46, -1), (47, 67108864), (48, 16777216), (49, 67108864), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 0), (4, -1), (5, 262144), (6, -1), (7, 134217728), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 0), (15, 0), (16, 0), (17, 0), (18, 0), (19, 0), (20, -1), (21, 0), (22, 0), (23, 134217728), (24, -1), (25, -1), (26, -1), (27, 0), (28, -1), (29, 524288), (30, 2097152), (31, 4096), (32, -1), (33, 4096), (34, -1), (35, -1), (36, -1), (37, 2048), (38, 2048), (39, 0), (40, 2048), (41, 67108864), (42, 131072), (43, 131072), (44, -1), (45, -1), (46, -1), (47, 33554432), (48, 4194304), (49, 67108864), (50, -1), (51, -1), (52, -1)]

Covered at level 8 : {3, 39, 14, 15, 16, 17, 18, 19, 21, 22, 27}

After reduction : 
 pending  : [38, 23, 5, 29, 31, 37, 42, 43, 47, 48, 49, 41, 7, 40, 30, 33]
 solution : [9, 10, 26, 13]


Before reduction : 
 pending  : [38, 23, 5, 29, 31, 37, 42, 43, 47, 48, 49, 41, 7, 40, 30, 33]
 solution : [9, 10, 26, 13]

Essensial at level 8 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 0), (4, -1), (5, 262144), (6, -1), (7, 134217728), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 0), (15, 0), (16, 0), (17, 0), (18, 0), (19, 0), (20, -1), (21, 0), (22, 0), (23, 134217728), (24, -1), (25, -1), (26, -1), (27, 0), (28, -1), (29, 524288), (30, 2097152), (31, 4096), (32, -1), (33, 4096), (34, -1), (35, -1), (36, -1), (37, 2048), (38, 2048), (39, 0), (40, 2048), (41, 67108864), (42, 131072), (43, 131072), (44, -1), (45, -1), (46, -1), (47, 33554432), (48, 4194304), (49, 67108864), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 262144), (6, -1), (7, 134217728), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, 134217728), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, 524288), (30, 2097152), (31, 4096), (32, -1), (33, 4096), (34, -1), (35, -1), (36, -1), (37, 2048), (38, 2048), (39, -1), (40, 2048), (41, 67108864), (42, 131072), (43, 131072), (44, -1), (45, -1), (46, -1), (47, 33554432), (48, 4194304), (49, 67108864), (50, -1), (51, -1), (52, -1)]

Covered at level 8 : set()

After reduction : 
 pending  : [38, 23, 5, 29, 31, 37, 42, 43, 47, 48, 49, 41, 7, 40, 30, 33]
 solution : [9, 10, 26, 13]


Solution : [9, 10, 26, 13] has cost 22.


Before backtrack at level 8
 pending : [38, 23, 5, 29, 31, 37, 42, 43, 47, 48, 49, 41, 7, 40, 30, 33]
 solution : [9, 10, 26, 13]

After backtrack at level 8
 pending : [38, 23, 5, 29, 31, 37, 42, 43, 47, 48, 49, 41, 7, 40, 30, 33, 27, 39, 3, 19, 16, 22, 15, 18, 14, 17, 21]
 solution : [9, 10, 26, 13]


Invert decision for 13 at level 7


New level: 8
 pending : [38, 23, 5, 29, 31, 37, 42, 43, 47, 48, 49, 41, 7, 40, 30, 33, 27, 39, 3, 19, 16, 22, 15, 18, 14, 17, 21]
 solution : [9, 10, 26]


Before reduction : 
 pending  : [38, 23, 5, 29, 31, 37, 42, 43, 47, 48, 49, 41, 7, 40, 30, 33, 27, 39, 3, 19, 16, 22, 15, 18, 14, 17, 21]
 solution : [9, 10, 26]

Essensial at level 8 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 262144), (6, -1), (7, 134217728), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, 134217728), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, 524288), (30, 2097152), (31, 4096), (32, -1), (33, 4096), (34, -1), (35, -1), (36, -1), (37, 2048), (38, 2048), (39, -1), (40, 2048), (41, 67108864), (42, 131072), (43, 131072), (44, -1), (45, -1), (46, -1), (47, 33554432), (48, 4194304), (49, 67108864), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 262144), (4, -1), (5, 1048576), (6, -1), (7, 134217728), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 4194304), (15, 2097152), (16, 131072), (17, 16777216), (18, 8388608), (19, 278528), (20, -1), (21, 268435456), (22, 65536), (23, 134217728), (24, -1), (25, -1), (26, -1), (27, 1048576), (28, -1), (29, 1048576), (30, 2097152), (31, 16384), (32, -1), (33, 16384), (34, -1), (35, -1), (36, -1), (37, 16384), (38, 67108864), (39, 1048576), (40, 134217728), (41, 134217728), (42, 524288), (43, 524288), (44, -1), (45, -1), (46, -1), (47, 67108864), (48, 16777216), (49, 67108864), (50, -1), (51, -1), (52, -1)]

Covered at level 8 : set()

After reduction : 
 pending  : [38, 23, 5, 29, 31, 37, 42, 43, 47, 48, 49, 41, 7, 40, 30, 33, 27, 39, 3, 19, 16, 22, 15, 18, 14, 17, 21]
 solution : [9, 10, 26]


Solution : [9, 10, 26] has cost 15.


Decide in level 8 among pending : [38, 23, 5, 29, 31, 37, 42, 43, 47, 48, 49, 41, 7, 40, 30, 33, 27, 39, 3, 19, 16, 22, 15, 18, 14, 17, 21]

Coverage : [(0, -1), (1, -1), (2, -1), (3, 262144), (4, -1), (5, 1048576), (6, -1), (7, 134217728), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 4194304), (15, 2097152), (16, 131072), (17, 16777216), (18, 8388608), (19, 278528), (20, -1), (21, 268435456), (22, 65536), (23, 134217728), (24, -1), (25, -1), (26, -1), (27, 1048576), (28, -1), (29, 1048576), (30, 2097152), (31, 16384), (32, -1), (33, 16384), (34, -1), (35, -1), (36, -1), (37, 16384), (38, 67108864), (39, 1048576), (40, 134217728), (41, 134217728), (42, 524288), (43, 524288), (44, -1), (45, -1), (46, -1), (47, 67108864), (48, 16777216), (49, 67108864), (50, -1), (51, -1), (52, -1)]

Decide 21 with phase True at level 8

After decision at level 8
 pending : [38, 23, 5, 29, 31, 37, 42, 43, 47, 48, 49, 41, 7, 40, 30, 33, 27, 39, 3, 19, 16, 22, 15, 18, 14, 17]
 solution : [9, 10, 26, 21]


New level: 9
 pending : [38, 23, 5, 29, 31, 37, 42, 43, 47, 48, 49, 41, 7, 40, 30, 33, 27, 39, 3, 19, 16, 22, 15, 18, 14, 17]
 solution : [9, 10, 26, 21]


Before reduction : 
 pending  : [38, 23, 5, 29, 31, 37, 42, 43, 47, 48, 49, 41, 7, 40, 30, 33, 27, 39, 3, 19, 16, 22, 15, 18, 14, 17]
 solution : [9, 10, 26, 21]

Essensial at level 9 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 262144), (4, -1), (5, 1048576), (6, -1), (7, 134217728), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 4194304), (15, 2097152), (16, 131072), (17, 16777216), (18, 8388608), (19, 278528), (20, -1), (21, 268435456), (22, 65536), (23, 134217728), (24, -1), (25, -1), (26, -1), (27, 1048576), (28, -1), (29, 1048576), (30, 2097152), (31, 16384), (32, -1), (33, 16384), (34, -1), (35, -1), (36, -1), (37, 16384), (38, 67108864), (39, 1048576), (40, 134217728), (41, 134217728), (42, 524288), (43, 524288), (44, -1), (45, -1), (46, -1), (47, 67108864), (48, 16777216), (49, 67108864), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 0), (4, -1), (5, 262144), (6, -1), (7, 134217728), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 0), (15, 0), (16, 0), (17, 0), (18, 0), (19, 0), (20, -1), (21, -1), (22, 0), (23, 134217728), (24, -1), (25, -1), (26, -1), (27, 0), (28, -1), (29, 524288), (30, 2097152), (31, 4096), (32, -1), (33, 4096), (34, -1), (35, -1), (36, -1), (37, 2048), (38, 2048), (39, 0), (40, 2048), (41, 67108864), (42, 131072), (43, 131072), (44, -1), (45, -1), (46, -1), (47, 67108864), (48, 16777216), (49, 67108864), (50, -1), (51, -1), (52, -1)]

Covered at level 9 : {3, 39, 14, 15, 16, 17, 18, 19, 22, 27}

After reduction : 
 pending  : [38, 23, 5, 29, 31, 37, 42, 43, 47, 48, 49, 41, 7, 40, 30, 33]
 solution : [9, 10, 26, 21]


Before reduction : 
 pending  : [38, 23, 5, 29, 31, 37, 42, 43, 47, 48, 49, 41, 7, 40, 30, 33]
 solution : [9, 10, 26, 21]

Essensial at level 9 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 0), (4, -1), (5, 262144), (6, -1), (7, 134217728), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 0), (15, 0), (16, 0), (17, 0), (18, 0), (19, 0), (20, -1), (21, -1), (22, 0), (23, 134217728), (24, -1), (25, -1), (26, -1), (27, 0), (28, -1), (29, 524288), (30, 2097152), (31, 4096), (32, -1), (33, 4096), (34, -1), (35, -1), (36, -1), (37, 2048), (38, 2048), (39, 0), (40, 2048), (41, 67108864), (42, 131072), (43, 131072), (44, -1), (45, -1), (46, -1), (47, 67108864), (48, 16777216), (49, 67108864), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 262144), (6, -1), (7, 134217728), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, 134217728), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, 524288), (30, 2097152), (31, 4096), (32, -1), (33, 4096), (34, -1), (35, -1), (36, -1), (37, 2048), (38, 2048), (39, -1), (40, 2048), (41, 67108864), (42, 131072), (43, 131072), (44, -1), (45, -1), (46, -1), (47, 67108864), (48, 16777216), (49, 67108864), (50, -1), (51, -1), (52, -1)]

Covered at level 9 : set()

After reduction : 
 pending  : [38, 23, 5, 29, 31, 37, 42, 43, 47, 48, 49, 41, 7, 40, 30, 33]
 solution : [9, 10, 26, 21]


Solution : [9, 10, 26, 21] has cost 22.


Before backtrack at level 9
 pending : [38, 23, 5, 29, 31, 37, 42, 43, 47, 48, 49, 41, 7, 40, 30, 33]
 solution : [9, 10, 26, 21]

After backtrack at level 9
 pending : [38, 23, 5, 29, 31, 37, 42, 43, 47, 48, 49, 41, 7, 40, 30, 33, 27, 39, 3, 19, 16, 22, 15, 18, 14, 17]
 solution : [9, 10, 26, 21]


Invert decision for 21 at level 8


New level: 9
 pending : [38, 23, 5, 29, 31, 37, 42, 43, 47, 48, 49, 41, 7, 40, 30, 33, 27, 39, 3, 19, 16, 22, 15, 18, 14, 17]
 solution : [9, 10, 26]


Before reduction : 
 pending  : [38, 23, 5, 29, 31, 37, 42, 43, 47, 48, 49, 41, 7, 40, 30, 33, 27, 39, 3, 19, 16, 22, 15, 18, 14, 17]
 solution : [9, 10, 26]

Essensial at level 9 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 262144), (6, -1), (7, 134217728), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, 134217728), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, 524288), (30, 2097152), (31, 4096), (32, -1), (33, 4096), (34, -1), (35, -1), (36, -1), (37, 2048), (38, 2048), (39, -1), (40, 2048), (41, 67108864), (42, 131072), (43, 131072), (44, -1), (45, -1), (46, -1), (47, 67108864), (48, 16777216), (49, 67108864), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 262144), (4, -1), (5, 1048576), (6, -1), (7, 134217728), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 4194304), (15, 2097152), (16, 131072), (17, 16777216), (18, 8388608), (19, 278528), (20, -1), (21, -1), (22, 65536), (23, 134217728), (24, -1), (25, -1), (26, -1), (27, 1048576), (28, -1), (29, 1048576), (30, 2097152), (31, 16384), (32, -1), (33, 16384), (34, -1), (35, -1), (36, -1), (37, 16384), (38, 67108864), (39, 1048576), (40, 134217728), (41, 134217728), (42, 524288), (43, 524288), (44, -1), (45, -1), (46, -1), (47, 67108864), (48, 16777216), (49, 67108864), (50, -1), (51, -1), (52, -1)]

Covered at level 9 : set()

After reduction : 
 pending  : [38, 23, 5, 29, 31, 37, 42, 43, 47, 48, 49, 41, 7, 40, 30, 33, 27, 39, 3, 19, 16, 22, 15, 18, 14, 17]
 solution : [9, 10, 26]


Solution : [9, 10, 26] has cost 15.


Decide in level 9 among pending : [38, 23, 5, 29, 31, 37, 42, 43, 47, 48, 49, 41, 7, 40, 30, 33, 27, 39, 3, 19, 16, 22, 15, 18, 14, 17]

Coverage : [(0, -1), (1, -1), (2, -1), (3, 262144), (4, -1), (5, 1048576), (6, -1), (7, 134217728), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 4194304), (15, 2097152), (16, 131072), (17, 16777216), (18, 8388608), (19, 278528), (20, -1), (21, -1), (22, 65536), (23, 134217728), (24, -1), (25, -1), (26, -1), (27, 1048576), (28, -1), (29, 1048576), (30, 2097152), (31, 16384), (32, -1), (33, 16384), (34, -1), (35, -1), (36, -1), (37, 16384), (38, 67108864), (39, 1048576), (40, 134217728), (41, 134217728), (42, 524288), (43, 524288), (44, -1), (45, -1), (46, -1), (47, 67108864), (48, 16777216), (49, 67108864), (50, -1), (51, -1), (52, -1)]

Decide 23 with phase True at level 9

After decision at level 9
 pending : [38, 5, 29, 31, 37, 42, 43, 47, 48, 49, 41, 7, 40, 30, 33, 27, 39, 3, 19, 16, 22, 15, 18, 14, 17]
 solution : [9, 10, 26, 23]


New level: 10
 pending : [38, 5, 29, 31, 37, 42, 43, 47, 48, 49, 41, 7, 40, 30, 33, 27, 39, 3, 19, 16, 22, 15, 18, 14, 17]
 solution : [9, 10, 26, 23]


Before reduction : 
 pending  : [38, 5, 29, 31, 37, 42, 43, 47, 48, 49, 41, 7, 40, 30, 33, 27, 39, 3, 19, 16, 22, 15, 18, 14, 17]
 solution : [9, 10, 26, 23]

Essensial at level 10 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 262144), (4, -1), (5, 1048576), (6, -1), (7, 134217728), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 4194304), (15, 2097152), (16, 131072), (17, 16777216), (18, 8388608), (19, 278528), (20, -1), (21, -1), (22, 65536), (23, 134217728), (24, -1), (25, -1), (26, -1), (27, 1048576), (28, -1), (29, 1048576), (30, 2097152), (31, 16384), (32, -1), (33, 16384), (34, -1), (35, -1), (36, -1), (37, 16384), (38, 67108864), (39, 1048576), (40, 134217728), (41, 134217728), (42, 524288), (43, 524288), (44, -1), (45, -1), (46, -1), (47, 67108864), (48, 16777216), (49, 67108864), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 131072), (4, -1), (5, 0), (6, -1), (7, 0), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 4194304), (15, 2097152), (16, 65536), (17, 8388608), (18, 4194304), (19, 135168), (20, -1), (21, -1), (22, 65536), (23, -1), (24, -1), (25, -1), (26, -1), (27, 524288), (28, -1), (29, 0), (30, 0), (31, 0), (32, -1), (33, 0), (34, -1), (35, -1), (36, -1), (37, 0), (38, 262144), (39, 524288), (40, 512), (41, 0), (42, 0), (43, 0), (44, -1), (45, -1), (46, -1), (47, 0), (48, 0), (49, 0), (50, -1), (51, -1), (52, -1)]

Covered at level 10 : {33, 37, 5, 7, 41, 42, 43, 47, 48, 49, 29, 30, 31}

After reduction : 
 pending  : [38, 40, 27, 39, 3, 19, 16, 22, 15, 18, 14, 17]
 solution : [9, 10, 26, 23]


Before reduction : 
 pending  : [38, 40, 27, 39, 3, 19, 16, 22, 15, 18, 14, 17]
 solution : [9, 10, 26, 23]

Essensial at level 10 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 131072), (4, -1), (5, 0), (6, -1), (7, 0), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 4194304), (15, 2097152), (16, 65536), (17, 8388608), (18, 4194304), (19, 135168), (20, -1), (21, -1), (22, 65536), (23, -1), (24, -1), (25, -1), (26, -1), (27, 524288), (28, -1), (29, 0), (30, 0), (31, 0), (32, -1), (33, 0), (34, -1), (35, -1), (36, -1), (37, 0), (38, 262144), (39, 524288), (40, 512), (41, 0), (42, 0), (43, 0), (44, -1), (45, -1), (46, -1), (47, 0), (48, 0), (49, 0), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 131072), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 4194304), (15, 2097152), (16, 65536), (17, 8388608), (18, 4194304), (19, 135168), (20, -1), (21, -1), (22, 65536), (23, -1), (24, -1), (25, -1), (26, -1), (27, 524288), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, 262144), (39, 524288), (40, 512), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 10 : set()

After reduction : 
 pending  : [38, 40, 27, 39, 3, 19, 16, 22, 15, 18, 14, 17]
 solution : [9, 10, 26, 23]


Solution : [9, 10, 26, 23] has cost 22.


Before backtrack at level 10
 pending : [38, 40, 27, 39, 3, 19, 16, 22, 15, 18, 14, 17]
 solution : [9, 10, 26, 23]

After backtrack at level 10
 pending : [38, 40, 27, 39, 3, 19, 16, 22, 15, 18, 14, 17, 5, 29, 31, 37, 42, 43, 47, 48, 49, 41, 7, 30, 33]
 solution : [9, 10, 26, 23]


Invert decision for 23 at level 9


New level: 10
 pending : [38, 40, 27, 39, 3, 19, 16, 22, 15, 18, 14, 17, 5, 29, 31, 37, 42, 43, 47, 48, 49, 41, 7, 30, 33]
 solution : [9, 10, 26]


Before reduction : 
 pending  : [38, 40, 27, 39, 3, 19, 16, 22, 15, 18, 14, 17, 5, 29, 31, 37, 42, 43, 47, 48, 49, 41, 7, 30, 33]
 solution : [9, 10, 26]

Essensial at level 10 : {7}

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 131072), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 4194304), (15, 2097152), (16, 65536), (17, 8388608), (18, 4194304), (19, 135168), (20, -1), (21, -1), (22, 65536), (23, -1), (24, -1), (25, -1), (26, -1), (27, 524288), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, 262144), (39, 524288), (40, 512), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 131072), (4, -1), (5, 0), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 4194304), (15, 2097152), (16, 65536), (17, 8388608), (18, 4194304), (19, 135168), (20, -1), (21, -1), (22, 65536), (23, -1), (24, -1), (25, -1), (26, -1), (27, 524288), (28, -1), (29, 0), (30, 0), (31, 0), (32, -1), (33, 0), (34, -1), (35, -1), (36, -1), (37, 0), (38, 32768), (39, 524288), (40, 512), (41, 0), (42, 0), (43, 0), (44, -1), (45, -1), (46, -1), (47, 0), (48, 0), (49, 0), (50, -1), (51, -1), (52, -1)]

Covered at level 10 : {33, 37, 5, 41, 42, 43, 47, 48, 49, 29, 30, 31}

After reduction : 
 pending  : [38, 40, 27, 39, 3, 19, 16, 22, 15, 18, 14, 17]
 solution : [9, 10, 26, 7]


Before reduction : 
 pending  : [38, 40, 27, 39, 3, 19, 16, 22, 15, 18, 14, 17]
 solution : [9, 10, 26, 7]

Essensial at level 10 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 131072), (4, -1), (5, 0), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 4194304), (15, 2097152), (16, 65536), (17, 8388608), (18, 4194304), (19, 135168), (20, -1), (21, -1), (22, 65536), (23, -1), (24, -1), (25, -1), (26, -1), (27, 524288), (28, -1), (29, 0), (30, 0), (31, 0), (32, -1), (33, 0), (34, -1), (35, -1), (36, -1), (37, 0), (38, 32768), (39, 524288), (40, 512), (41, 0), (42, 0), (43, 0), (44, -1), (45, -1), (46, -1), (47, 0), (48, 0), (49, 0), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 131072), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 4194304), (15, 2097152), (16, 65536), (17, 8388608), (18, 4194304), (19, 135168), (20, -1), (21, -1), (22, 65536), (23, -1), (24, -1), (25, -1), (26, -1), (27, 524288), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, 32768), (39, 524288), (40, 512), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 10 : set()

After reduction : 
 pending  : [38, 40, 27, 39, 3, 19, 16, 22, 15, 18, 14, 17]
 solution : [9, 10, 26, 7]


Solution : [9, 10, 26, 7] has cost 19.


Before backtrack at level 10
 pending : [38, 40, 27, 39, 3, 19, 16, 22, 15, 18, 14, 17]
 solution : [9, 10, 26, 7]

After backtrack at level 10
 pending : [38, 40, 27, 39, 3, 19, 16, 22, 15, 18, 14, 17, 7, 5, 29, 31, 37, 42, 43, 47, 48, 49, 41, 30, 33]
 solution : [9, 10, 26]


Before backtrack at level 9
 pending : [38, 40, 27, 39, 3, 19, 16, 22, 15, 18, 14, 17, 7, 5, 29, 31, 37, 42, 43, 47, 48, 49, 41, 30, 33]
 solution : [9, 10, 26]

After backtrack at level 9
 pending : [38, 40, 27, 39, 3, 19, 16, 22, 15, 18, 14, 17, 7, 5, 29, 31, 37, 42, 43, 47, 48, 49, 41, 30, 33, 23]
 solution : [9, 10, 26]


Before backtrack at level 8
 pending : [38, 40, 27, 39, 3, 19, 16, 22, 15, 18, 14, 17, 7, 5, 29, 31, 37, 42, 43, 47, 48, 49, 41, 30, 33, 23]
 solution : [9, 10, 26]

After backtrack at level 8
 pending : [38, 40, 27, 39, 3, 19, 16, 22, 15, 18, 14, 17, 7, 5, 29, 31, 37, 42, 43, 47, 48, 49, 41, 30, 33, 23, 21]
 solution : [9, 10, 26]


Before backtrack at level 7
 pending : [38, 40, 27, 39, 3, 19, 16, 22, 15, 18, 14, 17, 7, 5, 29, 31, 37, 42, 43, 47, 48, 49, 41, 30, 33, 23, 21]
 solution : [9, 10, 26]

After backtrack at level 7
 pending : [38, 40, 27, 39, 3, 19, 16, 22, 15, 18, 14, 17, 7, 5, 29, 31, 37, 42, 43, 47, 48, 49, 41, 30, 33, 23, 21, 13]
 solution : [9, 10, 26]


Before backtrack at level 6
 pending : [38, 40, 27, 39, 3, 19, 16, 22, 15, 18, 14, 17, 7, 5, 29, 31, 37, 42, 43, 47, 48, 49, 41, 30, 33, 23, 21, 13]
 solution : [9, 10, 26]

After backtrack at level 6
 pending : [38, 40, 27, 39, 3, 19, 16, 22, 15, 18, 14, 17, 7, 5, 29, 31, 37, 42, 43, 47, 48, 49, 41, 30, 33, 23, 21, 13, 24]
 solution : [9, 10, 26]


Before backtrack at level 5
 pending : [38, 40, 27, 39, 3, 19, 16, 22, 15, 18, 14, 17, 7, 5, 29, 31, 37, 42, 43, 47, 48, 49, 41, 30, 33, 23, 21, 13, 24]
 solution : [9, 10, 26]

After backtrack at level 5
 pending : [38, 40, 27, 39, 3, 19, 16, 22, 15, 18, 14, 17, 7, 5, 29, 31, 37, 42, 43, 47, 48, 49, 41, 30, 33, 23, 21, 13, 24, 28]
 solution : [9, 10, 26]


Before backtrack at level 4
 pending : [38, 40, 27, 39, 3, 19, 16, 22, 15, 18, 14, 17, 7, 5, 29, 31, 37, 42, 43, 47, 48, 49, 41, 30, 33, 23, 21, 13, 24, 28]
 solution : [9, 10, 26]

After backtrack at level 4
 pending : [38, 40, 27, 39, 3, 19, 16, 22, 15, 18, 14, 17, 7, 5, 29, 31, 37, 42, 43, 47, 48, 49, 41, 30, 33, 23, 21, 13, 24, 28, 32]
 solution : [9, 10, 26]


Invert decision for 26 at level 3


New level: 4
 pending : [38, 40, 27, 39, 3, 19, 16, 22, 15, 18, 14, 17, 7, 5, 29, 31, 37, 42, 43, 47, 48, 49, 41, 30, 33, 23, 21, 13, 24, 28, 32]
 solution : [9, 10]


Before reduction : 
 pending  : [38, 40, 27, 39, 3, 19, 16, 22, 15, 18, 14, 17, 7, 5, 29, 31, 37, 42, 43, 47, 48, 49, 41, 30, 33, 23, 21, 13, 24, 28, 32]
 solution : [9, 10]

Essensial at level 4 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 131072), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 4194304), (15, 2097152), (16, 65536), (17, 8388608), (18, 4194304), (19, 135168), (20, -1), (21, -1), (22, 65536), (23, -1), (24, -1), (25, -1), (26, -1), (27, 524288), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, 32768), (39, 524288), (40, 512), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 262144), (4, -1), (5, 1048576), (6, -1), (7, 134217728), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, 536870912), (14, 4194304), (15, 2097152), (16, 131072), (17, 16777216), (18, 8388608), (19, 278528), (20, -1), (21, 268435456), (22, 65536), (23, 134217728), (24, 1073741824), (25, -1), (26, -1), (27, 1048576), (28, 1073741824), (29, 1048576), (30, 4194304), (31, 16384), (32, 2147483648), (33, 32768), (34, -1), (35, -1), (36, -1), (37, 16384), (38, 67108864), (39, 1048576), (40, 268435456), (41, 134217728), (42, 524288), (43, 524288), (44, -1), (45, -1), (46, -1), (47, 67108864), (48, 16777216), (49, 67108864), (50, -1), (51, -1), (52, -1)]

Covered at level 4 : set()

After reduction : 
 pending  : [38, 40, 27, 39, 3, 19, 16, 22, 15, 18, 14, 17, 7, 5, 29, 31, 37, 42, 43, 47, 48, 49, 41, 30, 33, 23, 21, 13, 24, 28, 32]
 solution : [9, 10]


Solution : [9, 10] has cost 11.


Decide in level 4 among pending : [38, 40, 27, 39, 3, 19, 16, 22, 15, 18, 14, 17, 7, 5, 29, 31, 37, 42, 43, 47, 48, 49, 41, 30, 33, 23, 21, 13, 24, 28, 32]

Coverage : [(0, -1), (1, -1), (2, -1), (3, 262144), (4, -1), (5, 1048576), (6, -1), (7, 134217728), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, 536870912), (14, 4194304), (15, 2097152), (16, 131072), (17, 16777216), (18, 8388608), (19, 278528), (20, -1), (21, 268435456), (22, 65536), (23, 134217728), (24, 1073741824), (25, -1), (26, -1), (27, 1048576), (28, 1073741824), (29, 1048576), (30, 4194304), (31, 16384), (32, 2147483648), (33, 32768), (34, -1), (35, -1), (36, -1), (37, 16384), (38, 67108864), (39, 1048576), (40, 268435456), (41, 134217728), (42, 524288), (43, 524288), (44, -1), (45, -1), (46, -1), (47, 67108864), (48, 16777216), (49, 67108864), (50, -1), (51, -1), (52, -1)]

Decide 32 with phase True at level 4

After decision at level 4
 pending : [38, 40, 27, 39, 3, 19, 16, 22, 15, 18, 14, 17, 7, 5, 29, 31, 37, 42, 43, 47, 48, 49, 41, 30, 33, 23, 21, 13, 24, 28]
 solution : [9, 10, 32]


New level: 5
 pending : [38, 40, 27, 39, 3, 19, 16, 22, 15, 18, 14, 17, 7, 5, 29, 31, 37, 42, 43, 47, 48, 49, 41, 30, 33, 23, 21, 13, 24, 28]
 solution : [9, 10, 32]


Before reduction : 
 pending  : [38, 40, 27, 39, 3, 19, 16, 22, 15, 18, 14, 17, 7, 5, 29, 31, 37, 42, 43, 47, 48, 49, 41, 30, 33, 23, 21, 13, 24, 28]
 solution : [9, 10, 32]

Essensial at level 5 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 262144), (4, -1), (5, 1048576), (6, -1), (7, 134217728), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, 536870912), (14, 4194304), (15, 2097152), (16, 131072), (17, 16777216), (18, 8388608), (19, 278528), (20, -1), (21, 268435456), (22, 65536), (23, 134217728), (24, 1073741824), (25, -1), (26, -1), (27, 1048576), (28, 1073741824), (29, 1048576), (30, 4194304), (31, 16384), (32, 2147483648), (33, 32768), (34, -1), (35, -1), (36, -1), (37, 16384), (38, 67108864), (39, 1048576), (40, 268435456), (41, 134217728), (42, 524288), (43, 524288), (44, -1), (45, -1), (46, -1), (47, 67108864), (48, 16777216), (49, 67108864), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 262144), (4, -1), (5, 262144), (6, -1), (7, 134217728), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, 536870912), (14, 4194304), (15, 2097152), (16, 131072), (17, 16777216), (18, 8388608), (19, 278528), (20, -1), (21, 268435456), (22, 65536), (23, 134217728), (24, 32768), (25, -1), (26, -1), (27, 1048576), (28, 1073741824), (29, 262144), (30, 0), (31, 4096), (32, -1), (33, 0), (34, -1), (35, -1), (36, -1), (37, 4096), (38, 67108864), (39, 1048576), (40, 8192), (41, 33554432), (42, 131072), (43, 131072), (44, -1), (45, -1), (46, -1), (47, 16777216), (48, 4194304), (49, 16777216), (50, -1), (51, -1), (52, -1)]

Covered at level 5 : {33, 30}

After reduction : 
 pending  : [38, 40, 27, 39, 3, 19, 16, 22, 15, 18, 14, 17, 7, 5, 29, 31, 37, 42, 43, 47, 48, 49, 41, 23, 21, 13, 24, 28]
 solution : [9, 10, 32]


Before reduction : 
 pending  : [38, 40, 27, 39, 3, 19, 16, 22, 15, 18, 14, 17, 7, 5, 29, 31, 37, 42, 43, 47, 48, 49, 41, 23, 21, 13, 24, 28]
 solution : [9, 10, 32]

Essensial at level 5 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 262144), (4, -1), (5, 262144), (6, -1), (7, 134217728), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, 536870912), (14, 4194304), (15, 2097152), (16, 131072), (17, 16777216), (18, 8388608), (19, 278528), (20, -1), (21, 268435456), (22, 65536), (23, 134217728), (24, 32768), (25, -1), (26, -1), (27, 1048576), (28, 1073741824), (29, 262144), (30, 0), (31, 4096), (32, -1), (33, 0), (34, -1), (35, -1), (36, -1), (37, 4096), (38, 67108864), (39, 1048576), (40, 8192), (41, 33554432), (42, 131072), (43, 131072), (44, -1), (45, -1), (46, -1), (47, 16777216), (48, 4194304), (49, 16777216), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 262144), (4, -1), (5, 262144), (6, -1), (7, 134217728), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, 536870912), (14, 4194304), (15, 2097152), (16, 131072), (17, 16777216), (18, 8388608), (19, 278528), (20, -1), (21, 268435456), (22, 65536), (23, 134217728), (24, 32768), (25, -1), (26, -1), (27, 1048576), (28, 1073741824), (29, 262144), (30, -1), (31, 4096), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, 4096), (38, 67108864), (39, 1048576), (40, 8192), (41, 33554432), (42, 131072), (43, 131072), (44, -1), (45, -1), (46, -1), (47, 16777216), (48, 4194304), (49, 16777216), (50, -1), (51, -1), (52, -1)]

Covered at level 5 : set()

After reduction : 
 pending  : [38, 40, 27, 39, 3, 19, 16, 22, 15, 18, 14, 17, 7, 5, 29, 31, 37, 42, 43, 47, 48, 49, 41, 23, 21, 13, 24, 28]
 solution : [9, 10, 32]


Solution : [9, 10, 32] has cost 24.


Before backtrack at level 5
 pending : [38, 40, 27, 39, 3, 19, 16, 22, 15, 18, 14, 17, 7, 5, 29, 31, 37, 42, 43, 47, 48, 49, 41, 23, 21, 13, 24, 28]
 solution : [9, 10, 32]

After backtrack at level 5
 pending : [38, 40, 27, 39, 3, 19, 16, 22, 15, 18, 14, 17, 7, 5, 29, 31, 37, 42, 43, 47, 48, 49, 41, 23, 21, 13, 24, 28, 30, 33]
 solution : [9, 10, 32]


Invert decision for 32 at level 4


New level: 5
 pending : [38, 40, 27, 39, 3, 19, 16, 22, 15, 18, 14, 17, 7, 5, 29, 31, 37, 42, 43, 47, 48, 49, 41, 23, 21, 13, 24, 28, 30, 33]
 solution : [9, 10]


Before reduction : 
 pending  : [38, 40, 27, 39, 3, 19, 16, 22, 15, 18, 14, 17, 7, 5, 29, 31, 37, 42, 43, 47, 48, 49, 41, 23, 21, 13, 24, 28, 30, 33]
 solution : [9, 10]

Essensial at level 5 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 262144), (4, -1), (5, 262144), (6, -1), (7, 134217728), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, 536870912), (14, 4194304), (15, 2097152), (16, 131072), (17, 16777216), (18, 8388608), (19, 278528), (20, -1), (21, 268435456), (22, 65536), (23, 134217728), (24, 32768), (25, -1), (26, -1), (27, 1048576), (28, 1073741824), (29, 262144), (30, -1), (31, 4096), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, 4096), (38, 67108864), (39, 1048576), (40, 8192), (41, 33554432), (42, 131072), (43, 131072), (44, -1), (45, -1), (46, -1), (47, 16777216), (48, 4194304), (49, 16777216), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 262144), (4, -1), (5, 1048576), (6, -1), (7, 134217728), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, 536870912), (14, 4194304), (15, 2097152), (16, 131072), (17, 16777216), (18, 8388608), (19, 278528), (20, -1), (21, 268435456), (22, 65536), (23, 134217728), (24, 1073741824), (25, -1), (26, -1), (27, 1048576), (28, 1073741824), (29, 1048576), (30, 4194304), (31, 16384), (32, -1), (33, 32768), (34, -1), (35, -1), (36, -1), (37, 16384), (38, 67108864), (39, 1048576), (40, 268435456), (41, 134217728), (42, 524288), (43, 524288), (44, -1), (45, -1), (46, -1), (47, 67108864), (48, 16777216), (49, 67108864), (50, -1), (51, -1), (52, -1)]

Covered at level 5 : set()

After reduction : 
 pending  : [38, 40, 27, 39, 3, 19, 16, 22, 15, 18, 14, 17, 7, 5, 29, 31, 37, 42, 43, 47, 48, 49, 41, 23, 21, 13, 24, 28, 30, 33]
 solution : [9, 10]


Solution : [9, 10] has cost 11.


Decide in level 5 among pending : [38, 40, 27, 39, 3, 19, 16, 22, 15, 18, 14, 17, 7, 5, 29, 31, 37, 42, 43, 47, 48, 49, 41, 23, 21, 13, 24, 28, 30, 33]

Coverage : [(0, -1), (1, -1), (2, -1), (3, 262144), (4, -1), (5, 1048576), (6, -1), (7, 134217728), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, 536870912), (14, 4194304), (15, 2097152), (16, 131072), (17, 16777216), (18, 8388608), (19, 278528), (20, -1), (21, 268435456), (22, 65536), (23, 134217728), (24, 1073741824), (25, -1), (26, -1), (27, 1048576), (28, 1073741824), (29, 1048576), (30, 4194304), (31, 16384), (32, -1), (33, 32768), (34, -1), (35, -1), (36, -1), (37, 16384), (38, 67108864), (39, 1048576), (40, 268435456), (41, 134217728), (42, 524288), (43, 524288), (44, -1), (45, -1), (46, -1), (47, 67108864), (48, 16777216), (49, 67108864), (50, -1), (51, -1), (52, -1)]

Decide 24 with phase True at level 5

After decision at level 5
 pending : [38, 40, 27, 39, 3, 19, 16, 22, 15, 18, 14, 17, 7, 5, 29, 31, 37, 42, 43, 47, 48, 49, 41, 23, 21, 13, 28, 30, 33]
 solution : [9, 10, 24]


New level: 6
 pending : [38, 40, 27, 39, 3, 19, 16, 22, 15, 18, 14, 17, 7, 5, 29, 31, 37, 42, 43, 47, 48, 49, 41, 23, 21, 13, 28, 30, 33]
 solution : [9, 10, 24]


Before reduction : 
 pending  : [38, 40, 27, 39, 3, 19, 16, 22, 15, 18, 14, 17, 7, 5, 29, 31, 37, 42, 43, 47, 48, 49, 41, 23, 21, 13, 28, 30, 33]
 solution : [9, 10, 24]

Essensial at level 6 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 262144), (4, -1), (5, 1048576), (6, -1), (7, 134217728), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, 536870912), (14, 4194304), (15, 2097152), (16, 131072), (17, 16777216), (18, 8388608), (19, 278528), (20, -1), (21, 268435456), (22, 65536), (23, 134217728), (24, 1073741824), (25, -1), (26, -1), (27, 1048576), (28, 1073741824), (29, 1048576), (30, 4194304), (31, 16384), (32, -1), (33, 32768), (34, -1), (35, -1), (36, -1), (37, 16384), (38, 67108864), (39, 1048576), (40, 268435456), (41, 134217728), (42, 524288), (43, 524288), (44, -1), (45, -1), (46, -1), (47, 67108864), (48, 16777216), (49, 67108864), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 262144), (4, -1), (5, 262144), (6, -1), (7, 33554432), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, 536870912), (14, 4194304), (15, 2097152), (16, 131072), (17, 16777216), (18, 8388608), (19, 278528), (20, -1), (21, 268435456), (22, 65536), (23, 33554432), (24, -1), (25, -1), (26, -1), (27, 1048576), (28, 1073741824), (29, 262144), (30, 0), (31, 4096), (32, -1), (33, 0), (34, -1), (35, -1), (36, -1), (37, 4096), (38, 33554432), (39, 1048576), (40, 512), (41, 67108864), (42, 131072), (43, 131072), (44, -1), (45, -1), (46, -1), (47, 16777216), (48, 4194304), (49, 33554432), (50, -1), (51, -1), (52, -1)]

Covered at level 6 : {33, 30}

After reduction : 
 pending  : [38, 40, 27, 39, 3, 19, 16, 22, 15, 18, 14, 17, 7, 5, 29, 31, 37, 42, 43, 47, 48, 49, 41, 23, 21, 13, 28]
 solution : [9, 10, 24]


Before reduction : 
 pending  : [38, 40, 27, 39, 3, 19, 16, 22, 15, 18, 14, 17, 7, 5, 29, 31, 37, 42, 43, 47, 48, 49, 41, 23, 21, 13, 28]
 solution : [9, 10, 24]

Essensial at level 6 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 262144), (4, -1), (5, 262144), (6, -1), (7, 33554432), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, 536870912), (14, 4194304), (15, 2097152), (16, 131072), (17, 16777216), (18, 8388608), (19, 278528), (20, -1), (21, 268435456), (22, 65536), (23, 33554432), (24, -1), (25, -1), (26, -1), (27, 1048576), (28, 1073741824), (29, 262144), (30, 0), (31, 4096), (32, -1), (33, 0), (34, -1), (35, -1), (36, -1), (37, 4096), (38, 33554432), (39, 1048576), (40, 512), (41, 67108864), (42, 131072), (43, 131072), (44, -1), (45, -1), (46, -1), (47, 16777216), (48, 4194304), (49, 33554432), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 262144), (4, -1), (5, 262144), (6, -1), (7, 33554432), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, 536870912), (14, 4194304), (15, 2097152), (16, 131072), (17, 16777216), (18, 8388608), (19, 278528), (20, -1), (21, 268435456), (22, 65536), (23, 33554432), (24, -1), (25, -1), (26, -1), (27, 1048576), (28, 1073741824), (29, 262144), (30, -1), (31, 4096), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, 4096), (38, 33554432), (39, 1048576), (40, 512), (41, 67108864), (42, 131072), (43, 131072), (44, -1), (45, -1), (46, -1), (47, 16777216), (48, 4194304), (49, 33554432), (50, -1), (51, -1), (52, -1)]

Covered at level 6 : set()

After reduction : 
 pending  : [38, 40, 27, 39, 3, 19, 16, 22, 15, 18, 14, 17, 7, 5, 29, 31, 37, 42, 43, 47, 48, 49, 41, 23, 21, 13, 28]
 solution : [9, 10, 24]


Solution : [9, 10, 24] has cost 18.


Before backtrack at level 6
 pending : [38, 40, 27, 39, 3, 19, 16, 22, 15, 18, 14, 17, 7, 5, 29, 31, 37, 42, 43, 47, 48, 49, 41, 23, 21, 13, 28]
 solution : [9, 10, 24]

After backtrack at level 6
 pending : [38, 40, 27, 39, 3, 19, 16, 22, 15, 18, 14, 17, 7, 5, 29, 31, 37, 42, 43, 47, 48, 49, 41, 23, 21, 13, 28, 30, 33]
 solution : [9, 10, 24]


Invert decision for 24 at level 5


New level: 6
 pending : [38, 40, 27, 39, 3, 19, 16, 22, 15, 18, 14, 17, 7, 5, 29, 31, 37, 42, 43, 47, 48, 49, 41, 23, 21, 13, 28, 30, 33]
 solution : [9, 10]


Before reduction : 
 pending  : [38, 40, 27, 39, 3, 19, 16, 22, 15, 18, 14, 17, 7, 5, 29, 31, 37, 42, 43, 47, 48, 49, 41, 23, 21, 13, 28, 30, 33]
 solution : [9, 10]

Essensial at level 6 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 262144), (4, -1), (5, 262144), (6, -1), (7, 33554432), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, 536870912), (14, 4194304), (15, 2097152), (16, 131072), (17, 16777216), (18, 8388608), (19, 278528), (20, -1), (21, 268435456), (22, 65536), (23, 33554432), (24, -1), (25, -1), (26, -1), (27, 1048576), (28, 1073741824), (29, 262144), (30, -1), (31, 4096), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, 4096), (38, 33554432), (39, 1048576), (40, 512), (41, 67108864), (42, 131072), (43, 131072), (44, -1), (45, -1), (46, -1), (47, 16777216), (48, 4194304), (49, 33554432), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 262144), (4, -1), (5, 1048576), (6, -1), (7, 134217728), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, 536870912), (14, 4194304), (15, 2097152), (16, 131072), (17, 16777216), (18, 8388608), (19, 278528), (20, -1), (21, 268435456), (22, 65536), (23, 134217728), (24, -1), (25, -1), (26, -1), (27, 1048576), (28, 1073741824), (29, 1048576), (30, 4194304), (31, 16384), (32, -1), (33, 32768), (34, -1), (35, -1), (36, -1), (37, 16384), (38, 67108864), (39, 1048576), (40, 268435456), (41, 134217728), (42, 524288), (43, 524288), (44, -1), (45, -1), (46, -1), (47, 67108864), (48, 16777216), (49, 67108864), (50, -1), (51, -1), (52, -1)]

Covered at level 6 : set()

After reduction : 
 pending  : [38, 40, 27, 39, 3, 19, 16, 22, 15, 18, 14, 17, 7, 5, 29, 31, 37, 42, 43, 47, 48, 49, 41, 23, 21, 13, 28, 30, 33]
 solution : [9, 10]


Solution : [9, 10] has cost 11.


Decide in level 6 among pending : [38, 40, 27, 39, 3, 19, 16, 22, 15, 18, 14, 17, 7, 5, 29, 31, 37, 42, 43, 47, 48, 49, 41, 23, 21, 13, 28, 30, 33]

Coverage : [(0, -1), (1, -1), (2, -1), (3, 262144), (4, -1), (5, 1048576), (6, -1), (7, 134217728), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, 536870912), (14, 4194304), (15, 2097152), (16, 131072), (17, 16777216), (18, 8388608), (19, 278528), (20, -1), (21, 268435456), (22, 65536), (23, 134217728), (24, -1), (25, -1), (26, -1), (27, 1048576), (28, 1073741824), (29, 1048576), (30, 4194304), (31, 16384), (32, -1), (33, 32768), (34, -1), (35, -1), (36, -1), (37, 16384), (38, 67108864), (39, 1048576), (40, 268435456), (41, 134217728), (42, 524288), (43, 524288), (44, -1), (45, -1), (46, -1), (47, 67108864), (48, 16777216), (49, 67108864), (50, -1), (51, -1), (52, -1)]

Decide 28 with phase True at level 6

After decision at level 6
 pending : [38, 40, 27, 39, 3, 19, 16, 22, 15, 18, 14, 17, 7, 5, 29, 31, 37, 42, 43, 47, 48, 49, 41, 23, 21, 13, 30, 33]
 solution : [9, 10, 28]


New level: 7
 pending : [38, 40, 27, 39, 3, 19, 16, 22, 15, 18, 14, 17, 7, 5, 29, 31, 37, 42, 43, 47, 48, 49, 41, 23, 21, 13, 30, 33]
 solution : [9, 10, 28]


Before reduction : 
 pending  : [38, 40, 27, 39, 3, 19, 16, 22, 15, 18, 14, 17, 7, 5, 29, 31, 37, 42, 43, 47, 48, 49, 41, 23, 21, 13, 30, 33]
 solution : [9, 10, 28]

Essensial at level 7 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 262144), (4, -1), (5, 1048576), (6, -1), (7, 134217728), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, 536870912), (14, 4194304), (15, 2097152), (16, 131072), (17, 16777216), (18, 8388608), (19, 278528), (20, -1), (21, 268435456), (22, 65536), (23, 134217728), (24, -1), (25, -1), (26, -1), (27, 1048576), (28, 1073741824), (29, 1048576), (30, 4194304), (31, 16384), (32, -1), (33, 32768), (34, -1), (35, -1), (36, -1), (37, 16384), (38, 67108864), (39, 1048576), (40, 268435456), (41, 134217728), (42, 524288), (43, 524288), (44, -1), (45, -1), (46, -1), (47, 67108864), (48, 16777216), (49, 67108864), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 0), (4, -1), (5, 262144), (6, -1), (7, 134217728), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, 0), (14, 0), (15, 0), (16, 0), (17, 0), (18, 0), (19, 0), (20, -1), (21, 0), (22, 0), (23, 134217728), (24, -1), (25, -1), (26, -1), (27, 0), (28, -1), (29, 524288), (30, 4194304), (31, 4096), (32, -1), (33, 8192), (34, -1), (35, -1), (36, -1), (37, 2048), (38, 2048), (39, 0), (40, 4096), (41, 67108864), (42, 131072), (43, 131072), (44, -1), (45, -1), (46, -1), (47, 33554432), (48, 4194304), (49, 16777216), (50, -1), (51, -1), (52, -1)]

Covered at level 7 : {3, 39, 13, 14, 15, 16, 17, 18, 19, 21, 22, 27}

After reduction : 
 pending  : [38, 40, 7, 5, 29, 31, 37, 42, 43, 47, 48, 49, 41, 23, 30, 33]
 solution : [9, 10, 28]


Before reduction : 
 pending  : [38, 40, 7, 5, 29, 31, 37, 42, 43, 47, 48, 49, 41, 23, 30, 33]
 solution : [9, 10, 28]

Essensial at level 7 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 0), (4, -1), (5, 262144), (6, -1), (7, 134217728), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, 0), (14, 0), (15, 0), (16, 0), (17, 0), (18, 0), (19, 0), (20, -1), (21, 0), (22, 0), (23, 134217728), (24, -1), (25, -1), (26, -1), (27, 0), (28, -1), (29, 524288), (30, 4194304), (31, 4096), (32, -1), (33, 8192), (34, -1), (35, -1), (36, -1), (37, 2048), (38, 2048), (39, 0), (40, 4096), (41, 67108864), (42, 131072), (43, 131072), (44, -1), (45, -1), (46, -1), (47, 33554432), (48, 4194304), (49, 16777216), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 262144), (6, -1), (7, 134217728), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, 134217728), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, 524288), (30, 4194304), (31, 4096), (32, -1), (33, 8192), (34, -1), (35, -1), (36, -1), (37, 2048), (38, 2048), (39, -1), (40, 4096), (41, 67108864), (42, 131072), (43, 131072), (44, -1), (45, -1), (46, -1), (47, 33554432), (48, 4194304), (49, 16777216), (50, -1), (51, -1), (52, -1)]

Covered at level 7 : set()

After reduction : 
 pending  : [38, 40, 7, 5, 29, 31, 37, 42, 43, 47, 48, 49, 41, 23, 30, 33]
 solution : [9, 10, 28]


Solution : [9, 10, 28] has cost 15.


Decide in level 7 among pending : [38, 40, 7, 5, 29, 31, 37, 42, 43, 47, 48, 49, 41, 23, 30, 33]

Coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 262144), (6, -1), (7, 134217728), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, 134217728), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, 524288), (30, 4194304), (31, 4096), (32, -1), (33, 8192), (34, -1), (35, -1), (36, -1), (37, 2048), (38, 2048), (39, -1), (40, 4096), (41, 67108864), (42, 131072), (43, 131072), (44, -1), (45, -1), (46, -1), (47, 33554432), (48, 4194304), (49, 16777216), (50, -1), (51, -1), (52, -1)]

Decide 7 with phase True at level 7

After decision at level 7
 pending : [38, 40, 5, 29, 31, 37, 42, 43, 47, 48, 49, 41, 23, 30, 33]
 solution : [9, 10, 28, 7]


New level: 8
 pending : [38, 40, 5, 29, 31, 37, 42, 43, 47, 48, 49, 41, 23, 30, 33]
 solution : [9, 10, 28, 7]


Before reduction : 
 pending  : [38, 40, 5, 29, 31, 37, 42, 43, 47, 48, 49, 41, 23, 30, 33]
 solution : [9, 10, 28, 7]

Essensial at level 8 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 262144), (6, -1), (7, 134217728), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, 134217728), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, 524288), (30, 4194304), (31, 4096), (32, -1), (33, 8192), (34, -1), (35, -1), (36, -1), (37, 2048), (38, 2048), (39, -1), (40, 4096), (41, 67108864), (42, 131072), (43, 131072), (44, -1), (45, -1), (46, -1), (47, 33554432), (48, 4194304), (49, 16777216), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 0), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, 0), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, 0), (30, 0), (31, 0), (32, -1), (33, 0), (34, -1), (35, -1), (36, -1), (37, 0), (38, 0), (39, -1), (40, 0), (41, 0), (42, 0), (43, 0), (44, -1), (45, -1), (46, -1), (47, 0), (48, 0), (49, 0), (50, -1), (51, -1), (52, -1)]

Covered at level 8 : {33, 5, 38, 37, 40, 41, 42, 43, 47, 48, 49, 23, 29, 30, 31}

After reduction : 
 pending  : []
 solution : [9, 10, 28, 7]


Before reduction : 
 pending  : []
 solution : [9, 10, 28, 7]

Essensial at level 8 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 0), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, 0), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, 0), (30, 0), (31, 0), (32, -1), (33, 0), (34, -1), (35, -1), (36, -1), (37, 0), (38, 0), (39, -1), (40, 0), (41, 0), (42, 0), (43, 0), (44, -1), (45, -1), (46, -1), (47, 0), (48, 0), (49, 0), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 8 : set()

After reduction : 
 pending  : []
 solution : [9, 10, 28, 7]


Solution : [9, 10, 28, 7] has cost 19.


Before backtrack at level 8
 pending : []
 solution : [9, 10, 28, 7]

After backtrack at level 8
 pending : [38, 40, 5, 29, 31, 37, 42, 43, 47, 48, 49, 41, 23, 30, 33]
 solution : [9, 10, 28, 7]


Invert decision for 7 at level 7


New level: 8
 pending : [38, 40, 5, 29, 31, 37, 42, 43, 47, 48, 49, 41, 23, 30, 33]
 solution : [9, 10, 28]


Before reduction : 
 pending  : [38, 40, 5, 29, 31, 37, 42, 43, 47, 48, 49, 41, 23, 30, 33]
 solution : [9, 10, 28]

Essensial at level 8 : {23}

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 0), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, 0), (30, 0), (31, 0), (32, -1), (33, 0), (34, -1), (35, -1), (36, -1), (37, 0), (38, 0), (39, -1), (40, 0), (41, 0), (42, 0), (43, 0), (44, -1), (45, -1), (46, -1), (47, 0), (48, 0), (49, 0), (50, -1), (51, -1), (52, -1)]

Covered at level 8 : {33, 5, 38, 37, 40, 41, 42, 43, 47, 48, 49, 29, 30, 31}

After reduction : 
 pending  : []
 solution : [9, 10, 28, 23]


Before reduction : 
 pending  : []
 solution : [9, 10, 28, 23]

Essensial at level 8 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 0), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, 0), (30, 0), (31, 0), (32, -1), (33, 0), (34, -1), (35, -1), (36, -1), (37, 0), (38, 0), (39, -1), (40, 0), (41, 0), (42, 0), (43, 0), (44, -1), (45, -1), (46, -1), (47, 0), (48, 0), (49, 0), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 8 : set()

After reduction : 
 pending  : []
 solution : [9, 10, 28, 23]


Solution : [9, 10, 28, 23] has cost 22.


Before backtrack at level 8
 pending : []
 solution : [9, 10, 28, 23]

After backtrack at level 8
 pending : [23, 38, 40, 5, 29, 31, 37, 42, 43, 47, 48, 49, 41, 30, 33]
 solution : [9, 10, 28]


Before backtrack at level 7
 pending : [23, 38, 40, 5, 29, 31, 37, 42, 43, 47, 48, 49, 41, 30, 33]
 solution : [9, 10, 28]

After backtrack at level 7
 pending : [23, 38, 40, 5, 29, 31, 37, 42, 43, 47, 48, 49, 41, 30, 33, 27, 39, 3, 19, 16, 22, 15, 18, 14, 17, 21, 13, 7]
 solution : [9, 10, 28]


Invert decision for 28 at level 6


New level: 7
 pending : [23, 38, 40, 5, 29, 31, 37, 42, 43, 47, 48, 49, 41, 30, 33, 27, 39, 3, 19, 16, 22, 15, 18, 14, 17, 21, 13, 7]
 solution : [9, 10]


Before reduction : 
 pending  : [23, 38, 40, 5, 29, 31, 37, 42, 43, 47, 48, 49, 41, 30, 33, 27, 39, 3, 19, 16, 22, 15, 18, 14, 17, 21, 13, 7]
 solution : [9, 10]

Essensial at level 7 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 262144), (4, -1), (5, 1048576), (6, -1), (7, 134217728), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, 536870912), (14, 4194304), (15, 2097152), (16, 131072), (17, 16777216), (18, 8388608), (19, 278528), (20, -1), (21, 268435456), (22, 65536), (23, 134217728), (24, -1), (25, -1), (26, -1), (27, 1048576), (28, -1), (29, 1048576), (30, 4194304), (31, 16384), (32, -1), (33, 32768), (34, -1), (35, -1), (36, -1), (37, 16384), (38, 67108864), (39, 1048576), (40, 268435456), (41, 134217728), (42, 524288), (43, 524288), (44, -1), (45, -1), (46, -1), (47, 67108864), (48, 16777216), (49, 67108864), (50, -1), (51, -1), (52, -1)]

Covered at level 7 : set()

After reduction : 
 pending  : [23, 38, 40, 5, 29, 31, 37, 42, 43, 47, 48, 49, 41, 30, 33, 27, 39, 3, 19, 16, 22, 15, 18, 14, 17, 21, 13, 7]
 solution : [9, 10]


Solution : [9, 10] has cost 11.


Decide in level 7 among pending : [23, 38, 40, 5, 29, 31, 37, 42, 43, 47, 48, 49, 41, 30, 33, 27, 39, 3, 19, 16, 22, 15, 18, 14, 17, 21, 13, 7]

Coverage : [(0, -1), (1, -1), (2, -1), (3, 262144), (4, -1), (5, 1048576), (6, -1), (7, 134217728), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, 536870912), (14, 4194304), (15, 2097152), (16, 131072), (17, 16777216), (18, 8388608), (19, 278528), (20, -1), (21, 268435456), (22, 65536), (23, 134217728), (24, -1), (25, -1), (26, -1), (27, 1048576), (28, -1), (29, 1048576), (30, 4194304), (31, 16384), (32, -1), (33, 32768), (34, -1), (35, -1), (36, -1), (37, 16384), (38, 67108864), (39, 1048576), (40, 268435456), (41, 134217728), (42, 524288), (43, 524288), (44, -1), (45, -1), (46, -1), (47, 67108864), (48, 16777216), (49, 67108864), (50, -1), (51, -1), (52, -1)]

Decide 13 with phase True at level 7

After decision at level 7
 pending : [23, 38, 40, 5, 29, 31, 37, 42, 43, 47, 48, 49, 41, 30, 33, 27, 39, 3, 19, 16, 22, 15, 18, 14, 17, 21, 7]
 solution : [9, 10, 13]


New level: 8
 pending : [23, 38, 40, 5, 29, 31, 37, 42, 43, 47, 48, 49, 41, 30, 33, 27, 39, 3, 19, 16, 22, 15, 18, 14, 17, 21, 7]
 solution : [9, 10, 13]


Before reduction : 
 pending  : [23, 38, 40, 5, 29, 31, 37, 42, 43, 47, 48, 49, 41, 30, 33, 27, 39, 3, 19, 16, 22, 15, 18, 14, 17, 21, 7]
 solution : [9, 10, 13]

Essensial at level 8 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 262144), (4, -1), (5, 1048576), (6, -1), (7, 134217728), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, 536870912), (14, 4194304), (15, 2097152), (16, 131072), (17, 16777216), (18, 8388608), (19, 278528), (20, -1), (21, 268435456), (22, 65536), (23, 134217728), (24, -1), (25, -1), (26, -1), (27, 1048576), (28, -1), (29, 1048576), (30, 4194304), (31, 16384), (32, -1), (33, 32768), (34, -1), (35, -1), (36, -1), (37, 16384), (38, 67108864), (39, 1048576), (40, 268435456), (41, 134217728), (42, 524288), (43, 524288), (44, -1), (45, -1), (46, -1), (47, 67108864), (48, 16777216), (49, 67108864), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 0), (4, -1), (5, 262144), (6, -1), (7, 134217728), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 0), (15, 0), (16, 0), (17, 0), (18, 0), (19, 0), (20, -1), (21, 0), (22, 0), (23, 134217728), (24, -1), (25, -1), (26, -1), (27, 0), (28, -1), (29, 524288), (30, 4194304), (31, 4096), (32, -1), (33, 8192), (34, -1), (35, -1), (36, -1), (37, 2048), (38, 2048), (39, 0), (40, 4096), (41, 67108864), (42, 131072), (43, 131072), (44, -1), (45, -1), (46, -1), (47, 33554432), (48, 4194304), (49, 67108864), (50, -1), (51, -1), (52, -1)]

Covered at level 8 : {3, 39, 14, 15, 16, 17, 18, 19, 21, 22, 27}

After reduction : 
 pending  : [23, 38, 40, 5, 29, 31, 37, 42, 43, 47, 48, 49, 41, 30, 33, 7]
 solution : [9, 10, 13]


Before reduction : 
 pending  : [23, 38, 40, 5, 29, 31, 37, 42, 43, 47, 48, 49, 41, 30, 33, 7]
 solution : [9, 10, 13]

Essensial at level 8 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 0), (4, -1), (5, 262144), (6, -1), (7, 134217728), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 0), (15, 0), (16, 0), (17, 0), (18, 0), (19, 0), (20, -1), (21, 0), (22, 0), (23, 134217728), (24, -1), (25, -1), (26, -1), (27, 0), (28, -1), (29, 524288), (30, 4194304), (31, 4096), (32, -1), (33, 8192), (34, -1), (35, -1), (36, -1), (37, 2048), (38, 2048), (39, 0), (40, 4096), (41, 67108864), (42, 131072), (43, 131072), (44, -1), (45, -1), (46, -1), (47, 33554432), (48, 4194304), (49, 67108864), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 262144), (6, -1), (7, 134217728), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, 134217728), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, 524288), (30, 4194304), (31, 4096), (32, -1), (33, 8192), (34, -1), (35, -1), (36, -1), (37, 2048), (38, 2048), (39, -1), (40, 4096), (41, 67108864), (42, 131072), (43, 131072), (44, -1), (45, -1), (46, -1), (47, 33554432), (48, 4194304), (49, 67108864), (50, -1), (51, -1), (52, -1)]

Covered at level 8 : set()

After reduction : 
 pending  : [23, 38, 40, 5, 29, 31, 37, 42, 43, 47, 48, 49, 41, 30, 33, 7]
 solution : [9, 10, 13]


Solution : [9, 10, 13] has cost 18.


Before backtrack at level 8
 pending : [23, 38, 40, 5, 29, 31, 37, 42, 43, 47, 48, 49, 41, 30, 33, 7]
 solution : [9, 10, 13]

After backtrack at level 8
 pending : [23, 38, 40, 5, 29, 31, 37, 42, 43, 47, 48, 49, 41, 30, 33, 7, 27, 39, 3, 19, 16, 22, 15, 18, 14, 17, 21]
 solution : [9, 10, 13]


Invert decision for 13 at level 7


New level: 8
 pending : [23, 38, 40, 5, 29, 31, 37, 42, 43, 47, 48, 49, 41, 30, 33, 7, 27, 39, 3, 19, 16, 22, 15, 18, 14, 17, 21]
 solution : [9, 10]


Before reduction : 
 pending  : [23, 38, 40, 5, 29, 31, 37, 42, 43, 47, 48, 49, 41, 30, 33, 7, 27, 39, 3, 19, 16, 22, 15, 18, 14, 17, 21]
 solution : [9, 10]

Essensial at level 8 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 262144), (6, -1), (7, 134217728), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, 134217728), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, 524288), (30, 4194304), (31, 4096), (32, -1), (33, 8192), (34, -1), (35, -1), (36, -1), (37, 2048), (38, 2048), (39, -1), (40, 4096), (41, 67108864), (42, 131072), (43, 131072), (44, -1), (45, -1), (46, -1), (47, 33554432), (48, 4194304), (49, 67108864), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 262144), (4, -1), (5, 1048576), (6, -1), (7, 134217728), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 4194304), (15, 2097152), (16, 131072), (17, 16777216), (18, 8388608), (19, 278528), (20, -1), (21, 268435456), (22, 65536), (23, 134217728), (24, -1), (25, -1), (26, -1), (27, 1048576), (28, -1), (29, 1048576), (30, 4194304), (31, 16384), (32, -1), (33, 32768), (34, -1), (35, -1), (36, -1), (37, 16384), (38, 67108864), (39, 1048576), (40, 268435456), (41, 134217728), (42, 524288), (43, 524288), (44, -1), (45, -1), (46, -1), (47, 67108864), (48, 16777216), (49, 67108864), (50, -1), (51, -1), (52, -1)]

Covered at level 8 : set()

After reduction : 
 pending  : [23, 38, 40, 5, 29, 31, 37, 42, 43, 47, 48, 49, 41, 30, 33, 7, 27, 39, 3, 19, 16, 22, 15, 18, 14, 17, 21]
 solution : [9, 10]


Solution : [9, 10] has cost 11.


Decide in level 8 among pending : [23, 38, 40, 5, 29, 31, 37, 42, 43, 47, 48, 49, 41, 30, 33, 7, 27, 39, 3, 19, 16, 22, 15, 18, 14, 17, 21]

Coverage : [(0, -1), (1, -1), (2, -1), (3, 262144), (4, -1), (5, 1048576), (6, -1), (7, 134217728), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 4194304), (15, 2097152), (16, 131072), (17, 16777216), (18, 8388608), (19, 278528), (20, -1), (21, 268435456), (22, 65536), (23, 134217728), (24, -1), (25, -1), (26, -1), (27, 1048576), (28, -1), (29, 1048576), (30, 4194304), (31, 16384), (32, -1), (33, 32768), (34, -1), (35, -1), (36, -1), (37, 16384), (38, 67108864), (39, 1048576), (40, 268435456), (41, 134217728), (42, 524288), (43, 524288), (44, -1), (45, -1), (46, -1), (47, 67108864), (48, 16777216), (49, 67108864), (50, -1), (51, -1), (52, -1)]

Decide 40 with phase True at level 8

After decision at level 8
 pending : [23, 38, 5, 29, 31, 37, 42, 43, 47, 48, 49, 41, 30, 33, 7, 27, 39, 3, 19, 16, 22, 15, 18, 14, 17, 21]
 solution : [9, 10, 40]


New level: 9
 pending : [23, 38, 5, 29, 31, 37, 42, 43, 47, 48, 49, 41, 30, 33, 7, 27, 39, 3, 19, 16, 22, 15, 18, 14, 17, 21]
 solution : [9, 10, 40]


Before reduction : 
 pending  : [23, 38, 5, 29, 31, 37, 42, 43, 47, 48, 49, 41, 30, 33, 7, 27, 39, 3, 19, 16, 22, 15, 18, 14, 17, 21]
 solution : [9, 10, 40]

Essensial at level 9 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 262144), (4, -1), (5, 1048576), (6, -1), (7, 134217728), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 4194304), (15, 2097152), (16, 131072), (17, 16777216), (18, 8388608), (19, 278528), (20, -1), (21, 268435456), (22, 65536), (23, 134217728), (24, -1), (25, -1), (26, -1), (27, 1048576), (28, -1), (29, 1048576), (30, 4194304), (31, 16384), (32, -1), (33, 32768), (34, -1), (35, -1), (36, -1), (37, 16384), (38, 67108864), (39, 1048576), (40, 268435456), (41, 134217728), (42, 524288), (43, 524288), (44, -1), (45, -1), (46, -1), (47, 67108864), (48, 16777216), (49, 67108864), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 262144), (4, -1), (5, 1048576), (6, -1), (7, 134217728), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 4194304), (15, 2097152), (16, 131072), (17, 16777216), (18, 8388608), (19, 278528), (20, -1), (21, 268435456), (22, 65536), (23, 134217728), (24, -1), (25, -1), (26, -1), (27, 1048576), (28, -1), (29, 1048576), (30, 2097152), (31, 16384), (32, -1), (33, 16384), (34, -1), (35, -1), (36, -1), (37, 16384), (38, 33554432), (39, 1048576), (40, -1), (41, 134217728), (42, 524288), (43, 524288), (44, -1), (45, -1), (46, -1), (47, 67108864), (48, 16777216), (49, 67108864), (50, -1), (51, -1), (52, -1)]

Covered at level 9 : set()

After reduction : 
 pending  : [23, 38, 5, 29, 31, 37, 42, 43, 47, 48, 49, 41, 30, 33, 7, 27, 39, 3, 19, 16, 22, 15, 18, 14, 17, 21]
 solution : [9, 10, 40]


Solution : [9, 10, 40] has cost 25.


Before backtrack at level 9
 pending : [23, 38, 5, 29, 31, 37, 42, 43, 47, 48, 49, 41, 30, 33, 7, 27, 39, 3, 19, 16, 22, 15, 18, 14, 17, 21]
 solution : [9, 10, 40]

After backtrack at level 9
 pending : [23, 38, 5, 29, 31, 37, 42, 43, 47, 48, 49, 41, 30, 33, 7, 27, 39, 3, 19, 16, 22, 15, 18, 14, 17, 21]
 solution : [9, 10, 40]


Invert decision for 40 at level 8


New level: 9
 pending : [23, 38, 5, 29, 31, 37, 42, 43, 47, 48, 49, 41, 30, 33, 7, 27, 39, 3, 19, 16, 22, 15, 18, 14, 17, 21]
 solution : [9, 10]


Before reduction : 
 pending  : [23, 38, 5, 29, 31, 37, 42, 43, 47, 48, 49, 41, 30, 33, 7, 27, 39, 3, 19, 16, 22, 15, 18, 14, 17, 21]
 solution : [9, 10]

Essensial at level 9 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 262144), (4, -1), (5, 1048576), (6, -1), (7, 134217728), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 4194304), (15, 2097152), (16, 131072), (17, 16777216), (18, 8388608), (19, 278528), (20, -1), (21, 268435456), (22, 65536), (23, 134217728), (24, -1), (25, -1), (26, -1), (27, 1048576), (28, -1), (29, 1048576), (30, 2097152), (31, 16384), (32, -1), (33, 16384), (34, -1), (35, -1), (36, -1), (37, 16384), (38, 33554432), (39, 1048576), (40, -1), (41, 134217728), (42, 524288), (43, 524288), (44, -1), (45, -1), (46, -1), (47, 67108864), (48, 16777216), (49, 67108864), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 262144), (4, -1), (5, 1048576), (6, -1), (7, 134217728), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 4194304), (15, 2097152), (16, 131072), (17, 16777216), (18, 8388608), (19, 278528), (20, -1), (21, 268435456), (22, 65536), (23, 134217728), (24, -1), (25, -1), (26, -1), (27, 1048576), (28, -1), (29, 1048576), (30, 4194304), (31, 16384), (32, -1), (33, 32768), (34, -1), (35, -1), (36, -1), (37, 16384), (38, 67108864), (39, 1048576), (40, -1), (41, 134217728), (42, 524288), (43, 524288), (44, -1), (45, -1), (46, -1), (47, 67108864), (48, 16777216), (49, 67108864), (50, -1), (51, -1), (52, -1)]

Covered at level 9 : set()

After reduction : 
 pending  : [23, 38, 5, 29, 31, 37, 42, 43, 47, 48, 49, 41, 30, 33, 7, 27, 39, 3, 19, 16, 22, 15, 18, 14, 17, 21]
 solution : [9, 10]


Solution : [9, 10] has cost 11.


Decide in level 9 among pending : [23, 38, 5, 29, 31, 37, 42, 43, 47, 48, 49, 41, 30, 33, 7, 27, 39, 3, 19, 16, 22, 15, 18, 14, 17, 21]

Coverage : [(0, -1), (1, -1), (2, -1), (3, 262144), (4, -1), (5, 1048576), (6, -1), (7, 134217728), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 4194304), (15, 2097152), (16, 131072), (17, 16777216), (18, 8388608), (19, 278528), (20, -1), (21, 268435456), (22, 65536), (23, 134217728), (24, -1), (25, -1), (26, -1), (27, 1048576), (28, -1), (29, 1048576), (30, 4194304), (31, 16384), (32, -1), (33, 32768), (34, -1), (35, -1), (36, -1), (37, 16384), (38, 67108864), (39, 1048576), (40, -1), (41, 134217728), (42, 524288), (43, 524288), (44, -1), (45, -1), (46, -1), (47, 67108864), (48, 16777216), (49, 67108864), (50, -1), (51, -1), (52, -1)]

Decide 21 with phase True at level 9

After decision at level 9
 pending : [23, 38, 5, 29, 31, 37, 42, 43, 47, 48, 49, 41, 30, 33, 7, 27, 39, 3, 19, 16, 22, 15, 18, 14, 17]
 solution : [9, 10, 21]


New level: 10
 pending : [23, 38, 5, 29, 31, 37, 42, 43, 47, 48, 49, 41, 30, 33, 7, 27, 39, 3, 19, 16, 22, 15, 18, 14, 17]
 solution : [9, 10, 21]


Before reduction : 
 pending  : [23, 38, 5, 29, 31, 37, 42, 43, 47, 48, 49, 41, 30, 33, 7, 27, 39, 3, 19, 16, 22, 15, 18, 14, 17]
 solution : [9, 10, 21]

Essensial at level 10 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 262144), (4, -1), (5, 1048576), (6, -1), (7, 134217728), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 4194304), (15, 2097152), (16, 131072), (17, 16777216), (18, 8388608), (19, 278528), (20, -1), (21, 268435456), (22, 65536), (23, 134217728), (24, -1), (25, -1), (26, -1), (27, 1048576), (28, -1), (29, 1048576), (30, 4194304), (31, 16384), (32, -1), (33, 32768), (34, -1), (35, -1), (36, -1), (37, 16384), (38, 67108864), (39, 1048576), (40, -1), (41, 134217728), (42, 524288), (43, 524288), (44, -1), (45, -1), (46, -1), (47, 67108864), (48, 16777216), (49, 67108864), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 0), (4, -1), (5, 262144), (6, -1), (7, 134217728), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 0), (15, 0), (16, 0), (17, 0), (18, 0), (19, 0), (20, -1), (21, -1), (22, 0), (23, 134217728), (24, -1), (25, -1), (26, -1), (27, 0), (28, -1), (29, 524288), (30, 4194304), (31, 4096), (32, -1), (33, 8192), (34, -1), (35, -1), (36, -1), (37, 2048), (38, 2048), (39, 0), (40, -1), (41, 67108864), (42, 131072), (43, 131072), (44, -1), (45, -1), (46, -1), (47, 67108864), (48, 16777216), (49, 67108864), (50, -1), (51, -1), (52, -1)]

Covered at level 10 : {3, 39, 14, 15, 16, 17, 18, 19, 22, 27}

After reduction : 
 pending  : [23, 38, 5, 29, 31, 37, 42, 43, 47, 48, 49, 41, 30, 33, 7]
 solution : [9, 10, 21]


Before reduction : 
 pending  : [23, 38, 5, 29, 31, 37, 42, 43, 47, 48, 49, 41, 30, 33, 7]
 solution : [9, 10, 21]

Essensial at level 10 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 0), (4, -1), (5, 262144), (6, -1), (7, 134217728), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 0), (15, 0), (16, 0), (17, 0), (18, 0), (19, 0), (20, -1), (21, -1), (22, 0), (23, 134217728), (24, -1), (25, -1), (26, -1), (27, 0), (28, -1), (29, 524288), (30, 4194304), (31, 4096), (32, -1), (33, 8192), (34, -1), (35, -1), (36, -1), (37, 2048), (38, 2048), (39, 0), (40, -1), (41, 67108864), (42, 131072), (43, 131072), (44, -1), (45, -1), (46, -1), (47, 67108864), (48, 16777216), (49, 67108864), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 262144), (6, -1), (7, 134217728), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, 134217728), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, 524288), (30, 4194304), (31, 4096), (32, -1), (33, 8192), (34, -1), (35, -1), (36, -1), (37, 2048), (38, 2048), (39, -1), (40, -1), (41, 67108864), (42, 131072), (43, 131072), (44, -1), (45, -1), (46, -1), (47, 67108864), (48, 16777216), (49, 67108864), (50, -1), (51, -1), (52, -1)]

Covered at level 10 : set()

After reduction : 
 pending  : [23, 38, 5, 29, 31, 37, 42, 43, 47, 48, 49, 41, 30, 33, 7]
 solution : [9, 10, 21]


Solution : [9, 10, 21] has cost 18.


Before backtrack at level 10
 pending : [23, 38, 5, 29, 31, 37, 42, 43, 47, 48, 49, 41, 30, 33, 7]
 solution : [9, 10, 21]

After backtrack at level 10
 pending : [23, 38, 5, 29, 31, 37, 42, 43, 47, 48, 49, 41, 30, 33, 7, 27, 39, 3, 19, 16, 22, 15, 18, 14, 17]
 solution : [9, 10, 21]


Invert decision for 21 at level 9


New level: 10
 pending : [23, 38, 5, 29, 31, 37, 42, 43, 47, 48, 49, 41, 30, 33, 7, 27, 39, 3, 19, 16, 22, 15, 18, 14, 17]
 solution : [9, 10]


Before reduction : 
 pending  : [23, 38, 5, 29, 31, 37, 42, 43, 47, 48, 49, 41, 30, 33, 7, 27, 39, 3, 19, 16, 22, 15, 18, 14, 17]
 solution : [9, 10]

Essensial at level 10 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 262144), (6, -1), (7, 134217728), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, 134217728), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, 524288), (30, 4194304), (31, 4096), (32, -1), (33, 8192), (34, -1), (35, -1), (36, -1), (37, 2048), (38, 2048), (39, -1), (40, -1), (41, 67108864), (42, 131072), (43, 131072), (44, -1), (45, -1), (46, -1), (47, 67108864), (48, 16777216), (49, 67108864), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 262144), (4, -1), (5, 1048576), (6, -1), (7, 134217728), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 4194304), (15, 2097152), (16, 131072), (17, 16777216), (18, 8388608), (19, 278528), (20, -1), (21, -1), (22, 65536), (23, 134217728), (24, -1), (25, -1), (26, -1), (27, 1048576), (28, -1), (29, 1048576), (30, 4194304), (31, 16384), (32, -1), (33, 32768), (34, -1), (35, -1), (36, -1), (37, 16384), (38, 67108864), (39, 1048576), (40, -1), (41, 134217728), (42, 524288), (43, 524288), (44, -1), (45, -1), (46, -1), (47, 67108864), (48, 16777216), (49, 67108864), (50, -1), (51, -1), (52, -1)]

Covered at level 10 : set()

After reduction : 
 pending  : [23, 38, 5, 29, 31, 37, 42, 43, 47, 48, 49, 41, 30, 33, 7, 27, 39, 3, 19, 16, 22, 15, 18, 14, 17]
 solution : [9, 10]


Solution : [9, 10] has cost 11.


Decide in level 10 among pending : [23, 38, 5, 29, 31, 37, 42, 43, 47, 48, 49, 41, 30, 33, 7, 27, 39, 3, 19, 16, 22, 15, 18, 14, 17]

Coverage : [(0, -1), (1, -1), (2, -1), (3, 262144), (4, -1), (5, 1048576), (6, -1), (7, 134217728), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 4194304), (15, 2097152), (16, 131072), (17, 16777216), (18, 8388608), (19, 278528), (20, -1), (21, -1), (22, 65536), (23, 134217728), (24, -1), (25, -1), (26, -1), (27, 1048576), (28, -1), (29, 1048576), (30, 4194304), (31, 16384), (32, -1), (33, 32768), (34, -1), (35, -1), (36, -1), (37, 16384), (38, 67108864), (39, 1048576), (40, -1), (41, 134217728), (42, 524288), (43, 524288), (44, -1), (45, -1), (46, -1), (47, 67108864), (48, 16777216), (49, 67108864), (50, -1), (51, -1), (52, -1)]

Decide 23 with phase True at level 10

After decision at level 10
 pending : [38, 5, 29, 31, 37, 42, 43, 47, 48, 49, 41, 30, 33, 7, 27, 39, 3, 19, 16, 22, 15, 18, 14, 17]
 solution : [9, 10, 23]


New level: 11
 pending : [38, 5, 29, 31, 37, 42, 43, 47, 48, 49, 41, 30, 33, 7, 27, 39, 3, 19, 16, 22, 15, 18, 14, 17]
 solution : [9, 10, 23]


Before reduction : 
 pending  : [38, 5, 29, 31, 37, 42, 43, 47, 48, 49, 41, 30, 33, 7, 27, 39, 3, 19, 16, 22, 15, 18, 14, 17]
 solution : [9, 10, 23]

Essensial at level 11 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 262144), (4, -1), (5, 1048576), (6, -1), (7, 134217728), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 4194304), (15, 2097152), (16, 131072), (17, 16777216), (18, 8388608), (19, 278528), (20, -1), (21, -1), (22, 65536), (23, 134217728), (24, -1), (25, -1), (26, -1), (27, 1048576), (28, -1), (29, 1048576), (30, 4194304), (31, 16384), (32, -1), (33, 32768), (34, -1), (35, -1), (36, -1), (37, 16384), (38, 67108864), (39, 1048576), (40, -1), (41, 134217728), (42, 524288), (43, 524288), (44, -1), (45, -1), (46, -1), (47, 67108864), (48, 16777216), (49, 67108864), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 131072), (4, -1), (5, 0), (6, -1), (7, 0), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 4194304), (15, 2097152), (16, 65536), (17, 8388608), (18, 4194304), (19, 135168), (20, -1), (21, -1), (22, 65536), (23, -1), (24, -1), (25, -1), (26, -1), (27, 524288), (28, -1), (29, 0), (30, 0), (31, 0), (32, -1), (33, 0), (34, -1), (35, -1), (36, -1), (37, 0), (38, 262144), (39, 524288), (40, -1), (41, 0), (42, 0), (43, 0), (44, -1), (45, -1), (46, -1), (47, 0), (48, 0), (49, 0), (50, -1), (51, -1), (52, -1)]

Covered at level 11 : {33, 37, 5, 7, 41, 42, 43, 47, 48, 49, 29, 30, 31}

After reduction : 
 pending  : [38, 27, 39, 3, 19, 16, 22, 15, 18, 14, 17]
 solution : [9, 10, 23]


Before reduction : 
 pending  : [38, 27, 39, 3, 19, 16, 22, 15, 18, 14, 17]
 solution : [9, 10, 23]

Essensial at level 11 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 131072), (4, -1), (5, 0), (6, -1), (7, 0), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 4194304), (15, 2097152), (16, 65536), (17, 8388608), (18, 4194304), (19, 135168), (20, -1), (21, -1), (22, 65536), (23, -1), (24, -1), (25, -1), (26, -1), (27, 524288), (28, -1), (29, 0), (30, 0), (31, 0), (32, -1), (33, 0), (34, -1), (35, -1), (36, -1), (37, 0), (38, 262144), (39, 524288), (40, -1), (41, 0), (42, 0), (43, 0), (44, -1), (45, -1), (46, -1), (47, 0), (48, 0), (49, 0), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 131072), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 4194304), (15, 2097152), (16, 65536), (17, 8388608), (18, 4194304), (19, 135168), (20, -1), (21, -1), (22, 65536), (23, -1), (24, -1), (25, -1), (26, -1), (27, 524288), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, 262144), (39, 524288), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 11 : set()

After reduction : 
 pending  : [38, 27, 39, 3, 19, 16, 22, 15, 18, 14, 17]
 solution : [9, 10, 23]


Solution : [9, 10, 23] has cost 18.


Before backtrack at level 11
 pending : [38, 27, 39, 3, 19, 16, 22, 15, 18, 14, 17]
 solution : [9, 10, 23]

After backtrack at level 11
 pending : [38, 27, 39, 3, 19, 16, 22, 15, 18, 14, 17, 5, 29, 31, 37, 42, 43, 47, 48, 49, 41, 30, 33, 7]
 solution : [9, 10, 23]


Invert decision for 23 at level 10


New level: 11
 pending : [38, 27, 39, 3, 19, 16, 22, 15, 18, 14, 17, 5, 29, 31, 37, 42, 43, 47, 48, 49, 41, 30, 33, 7]
 solution : [9, 10]


Before reduction : 
 pending  : [38, 27, 39, 3, 19, 16, 22, 15, 18, 14, 17, 5, 29, 31, 37, 42, 43, 47, 48, 49, 41, 30, 33, 7]
 solution : [9, 10]

Essensial at level 11 : {7}

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 131072), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 4194304), (15, 2097152), (16, 65536), (17, 8388608), (18, 4194304), (19, 135168), (20, -1), (21, -1), (22, 65536), (23, -1), (24, -1), (25, -1), (26, -1), (27, 524288), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, 262144), (39, 524288), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 131072), (4, -1), (5, 0), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 4194304), (15, 2097152), (16, 65536), (17, 8388608), (18, 4194304), (19, 135168), (20, -1), (21, -1), (22, 65536), (23, -1), (24, -1), (25, -1), (26, -1), (27, 524288), (28, -1), (29, 0), (30, 0), (31, 0), (32, -1), (33, 0), (34, -1), (35, -1), (36, -1), (37, 0), (38, 32768), (39, 524288), (40, -1), (41, 0), (42, 0), (43, 0), (44, -1), (45, -1), (46, -1), (47, 0), (48, 0), (49, 0), (50, -1), (51, -1), (52, -1)]

Covered at level 11 : {33, 37, 5, 41, 42, 43, 47, 48, 49, 29, 30, 31}

After reduction : 
 pending  : [38, 27, 39, 3, 19, 16, 22, 15, 18, 14, 17]
 solution : [9, 10, 7]


Before reduction : 
 pending  : [38, 27, 39, 3, 19, 16, 22, 15, 18, 14, 17]
 solution : [9, 10, 7]

Essensial at level 11 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 131072), (4, -1), (5, 0), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 4194304), (15, 2097152), (16, 65536), (17, 8388608), (18, 4194304), (19, 135168), (20, -1), (21, -1), (22, 65536), (23, -1), (24, -1), (25, -1), (26, -1), (27, 524288), (28, -1), (29, 0), (30, 0), (31, 0), (32, -1), (33, 0), (34, -1), (35, -1), (36, -1), (37, 0), (38, 32768), (39, 524288), (40, -1), (41, 0), (42, 0), (43, 0), (44, -1), (45, -1), (46, -1), (47, 0), (48, 0), (49, 0), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 131072), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 4194304), (15, 2097152), (16, 65536), (17, 8388608), (18, 4194304), (19, 135168), (20, -1), (21, -1), (22, 65536), (23, -1), (24, -1), (25, -1), (26, -1), (27, 524288), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, 32768), (39, 524288), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 11 : set()

After reduction : 
 pending  : [38, 27, 39, 3, 19, 16, 22, 15, 18, 14, 17]
 solution : [9, 10, 7]


Solution : [9, 10, 7] has cost 15.


Decide in level 11 among pending : [38, 27, 39, 3, 19, 16, 22, 15, 18, 14, 17]

Coverage : [(0, -1), (1, -1), (2, -1), (3, 131072), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 4194304), (15, 2097152), (16, 65536), (17, 8388608), (18, 4194304), (19, 135168), (20, -1), (21, -1), (22, 65536), (23, -1), (24, -1), (25, -1), (26, -1), (27, 524288), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, 32768), (39, 524288), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Decide 17 with phase True at level 11

After decision at level 11
 pending : [38, 27, 39, 3, 19, 16, 22, 15, 18, 14]
 solution : [9, 10, 7, 17]


New level: 12
 pending : [38, 27, 39, 3, 19, 16, 22, 15, 18, 14]
 solution : [9, 10, 7, 17]


Before reduction : 
 pending  : [38, 27, 39, 3, 19, 16, 22, 15, 18, 14]
 solution : [9, 10, 7, 17]

Essensial at level 12 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 131072), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 4194304), (15, 2097152), (16, 65536), (17, 8388608), (18, 4194304), (19, 135168), (20, -1), (21, -1), (22, 65536), (23, -1), (24, -1), (25, -1), (26, -1), (27, 524288), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, 32768), (39, 524288), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 0), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 65536), (15, 16384), (16, 0), (17, -1), (18, 0), (19, 0), (20, -1), (21, -1), (22, 16384), (23, -1), (24, -1), (25, -1), (26, -1), (27, 2048), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, 1024), (39, 2048), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 12 : {19, 16, 18, 3}

After reduction : 
 pending  : [38, 27, 39, 22, 15, 14]
 solution : [9, 10, 7, 17]


Before reduction : 
 pending  : [38, 27, 39, 22, 15, 14]
 solution : [9, 10, 7, 17]

Essensial at level 12 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 0), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 65536), (15, 16384), (16, 0), (17, -1), (18, 0), (19, 0), (20, -1), (21, -1), (22, 16384), (23, -1), (24, -1), (25, -1), (26, -1), (27, 2048), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, 1024), (39, 2048), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 65536), (15, 16384), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, 16384), (23, -1), (24, -1), (25, -1), (26, -1), (27, 2048), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, 1024), (39, 2048), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 12 : set()

After reduction : 
 pending  : [38, 27, 39, 22, 15, 14]
 solution : [9, 10, 7, 17]


Solution : [9, 10, 7, 17] has cost 24.


Before backtrack at level 12
 pending : [38, 27, 39, 22, 15, 14]
 solution : [9, 10, 7, 17]

After backtrack at level 12
 pending : [38, 27, 39, 22, 15, 14, 3, 19, 16, 18]
 solution : [9, 10, 7, 17]


Invert decision for 17 at level 11


New level: 12
 pending : [38, 27, 39, 22, 15, 14, 3, 19, 16, 18]
 solution : [9, 10, 7]


Before reduction : 
 pending  : [38, 27, 39, 22, 15, 14, 3, 19, 16, 18]
 solution : [9, 10, 7]

Essensial at level 12 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 65536), (15, 16384), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, 16384), (23, -1), (24, -1), (25, -1), (26, -1), (27, 2048), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, 1024), (39, 2048), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 131072), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 4194304), (15, 2097152), (16, 65536), (17, -1), (18, 4194304), (19, 135168), (20, -1), (21, -1), (22, 65536), (23, -1), (24, -1), (25, -1), (26, -1), (27, 524288), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, 32768), (39, 524288), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 12 : set()

After reduction : 
 pending  : [38, 27, 39, 22, 15, 14, 3, 19, 16, 18]
 solution : [9, 10, 7]


Solution : [9, 10, 7] has cost 15.


Decide in level 12 among pending : [38, 27, 39, 22, 15, 14, 3, 19, 16, 18]

Coverage : [(0, -1), (1, -1), (2, -1), (3, 131072), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 4194304), (15, 2097152), (16, 65536), (17, -1), (18, 4194304), (19, 135168), (20, -1), (21, -1), (22, 65536), (23, -1), (24, -1), (25, -1), (26, -1), (27, 524288), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, 32768), (39, 524288), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Decide 14 with phase True at level 12

After decision at level 12
 pending : [38, 27, 39, 22, 15, 3, 19, 16, 18]
 solution : [9, 10, 7, 14]


New level: 13
 pending : [38, 27, 39, 22, 15, 3, 19, 16, 18]
 solution : [9, 10, 7, 14]


Before reduction : 
 pending  : [38, 27, 39, 22, 15, 3, 19, 16, 18]
 solution : [9, 10, 7, 14]

Essensial at level 13 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 131072), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 4194304), (15, 2097152), (16, 65536), (17, -1), (18, 4194304), (19, 135168), (20, -1), (21, -1), (22, 65536), (23, -1), (24, -1), (25, -1), (26, -1), (27, 524288), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, 32768), (39, 524288), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 65536), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, 0), (16, 0), (17, -1), (18, 1048576), (19, 66048), (20, -1), (21, -1), (22, 0), (23, -1), (24, -1), (25, -1), (26, -1), (27, 131072), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, 512), (39, 131072), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 13 : {16, 22, 15}

After reduction : 
 pending  : [38, 27, 39, 3, 19, 18]
 solution : [9, 10, 7, 14]


Before reduction : 
 pending  : [38, 27, 39, 3, 19, 18]
 solution : [9, 10, 7, 14]

Essensial at level 13 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 65536), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, 0), (16, 0), (17, -1), (18, 1048576), (19, 66048), (20, -1), (21, -1), (22, 0), (23, -1), (24, -1), (25, -1), (26, -1), (27, 131072), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, 512), (39, 131072), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 65536), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, 1048576), (19, 66048), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, 131072), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, 512), (39, 131072), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 13 : set()

After reduction : 
 pending  : [38, 27, 39, 3, 19, 18]
 solution : [9, 10, 7, 14]


Solution : [9, 10, 7, 14] has cost 22.


Before backtrack at level 13
 pending : [38, 27, 39, 3, 19, 18]
 solution : [9, 10, 7, 14]

After backtrack at level 13
 pending : [38, 27, 39, 3, 19, 18, 22, 15, 16]
 solution : [9, 10, 7, 14]


Invert decision for 14 at level 12


New level: 13
 pending : [38, 27, 39, 3, 19, 18, 22, 15, 16]
 solution : [9, 10, 7]


Before reduction : 
 pending  : [38, 27, 39, 3, 19, 18, 22, 15, 16]
 solution : [9, 10, 7]

Essensial at level 13 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 65536), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, 1048576), (19, 66048), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, 131072), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, 512), (39, 131072), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 131072), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, 2097152), (16, 65536), (17, -1), (18, 4194304), (19, 135168), (20, -1), (21, -1), (22, 65536), (23, -1), (24, -1), (25, -1), (26, -1), (27, 524288), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, 32768), (39, 524288), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 13 : set()

After reduction : 
 pending  : [38, 27, 39, 3, 19, 18, 22, 15, 16]
 solution : [9, 10, 7]


Solution : [9, 10, 7] has cost 15.


Decide in level 13 among pending : [38, 27, 39, 3, 19, 18, 22, 15, 16]

Coverage : [(0, -1), (1, -1), (2, -1), (3, 131072), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, 2097152), (16, 65536), (17, -1), (18, 4194304), (19, 135168), (20, -1), (21, -1), (22, 65536), (23, -1), (24, -1), (25, -1), (26, -1), (27, 524288), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, 32768), (39, 524288), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Decide 18 with phase True at level 13

After decision at level 13
 pending : [38, 27, 39, 3, 19, 22, 15, 16]
 solution : [9, 10, 7, 18]


New level: 14
 pending : [38, 27, 39, 3, 19, 22, 15, 16]
 solution : [9, 10, 7, 18]


Before reduction : 
 pending  : [38, 27, 39, 3, 19, 22, 15, 16]
 solution : [9, 10, 7, 18]

Essensial at level 14 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 131072), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, 2097152), (16, 65536), (17, -1), (18, 4194304), (19, 135168), (20, -1), (21, -1), (22, 65536), (23, -1), (24, -1), (25, -1), (26, -1), (27, 524288), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, 32768), (39, 524288), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 0), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, 16384), (16, 0), (17, -1), (18, -1), (19, 0), (20, -1), (21, -1), (22, 16384), (23, -1), (24, -1), (25, -1), (26, -1), (27, 2048), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, 1024), (39, 2048), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 14 : {19, 16, 3}

After reduction : 
 pending  : [38, 27, 39, 22, 15]
 solution : [9, 10, 7, 18]


Before reduction : 
 pending  : [38, 27, 39, 22, 15]
 solution : [9, 10, 7, 18]

Essensial at level 14 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 0), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, 16384), (16, 0), (17, -1), (18, -1), (19, 0), (20, -1), (21, -1), (22, 16384), (23, -1), (24, -1), (25, -1), (26, -1), (27, 2048), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, 1024), (39, 2048), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, 16384), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, 16384), (23, -1), (24, -1), (25, -1), (26, -1), (27, 2048), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, 1024), (39, 2048), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 14 : set()

After reduction : 
 pending  : [38, 27, 39, 22, 15]
 solution : [9, 10, 7, 18]


Solution : [9, 10, 7, 18] has cost 24.


Before backtrack at level 14
 pending : [38, 27, 39, 22, 15]
 solution : [9, 10, 7, 18]

After backtrack at level 14
 pending : [38, 27, 39, 22, 15, 3, 19, 16]
 solution : [9, 10, 7, 18]


Invert decision for 18 at level 13


New level: 14
 pending : [38, 27, 39, 22, 15, 3, 19, 16]
 solution : [9, 10, 7]


Before reduction : 
 pending  : [38, 27, 39, 22, 15, 3, 19, 16]
 solution : [9, 10, 7]

Essensial at level 14 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, 16384), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, 16384), (23, -1), (24, -1), (25, -1), (26, -1), (27, 2048), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, 1024), (39, 2048), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 131072), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, 2097152), (16, 65536), (17, -1), (18, -1), (19, 135168), (20, -1), (21, -1), (22, 65536), (23, -1), (24, -1), (25, -1), (26, -1), (27, 524288), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, 32768), (39, 524288), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 14 : set()

After reduction : 
 pending  : [38, 27, 39, 22, 15, 3, 19, 16]
 solution : [9, 10, 7]


Solution : [9, 10, 7] has cost 15.


Decide in level 14 among pending : [38, 27, 39, 22, 15, 3, 19, 16]

Coverage : [(0, -1), (1, -1), (2, -1), (3, 131072), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, 2097152), (16, 65536), (17, -1), (18, -1), (19, 135168), (20, -1), (21, -1), (22, 65536), (23, -1), (24, -1), (25, -1), (26, -1), (27, 524288), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, 32768), (39, 524288), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Decide 15 with phase True at level 14

After decision at level 14
 pending : [38, 27, 39, 22, 3, 19, 16]
 solution : [9, 10, 7, 15]


New level: 15
 pending : [38, 27, 39, 22, 3, 19, 16]
 solution : [9, 10, 7, 15]


Before reduction : 
 pending  : [38, 27, 39, 22, 3, 19, 16]
 solution : [9, 10, 7, 15]

Essensial at level 15 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 131072), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, 2097152), (16, 65536), (17, -1), (18, -1), (19, 135168), (20, -1), (21, -1), (22, 65536), (23, -1), (24, -1), (25, -1), (26, -1), (27, 524288), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, 32768), (39, 524288), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 65536), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, 0), (17, -1), (18, -1), (19, 66048), (20, -1), (21, -1), (22, 0), (23, -1), (24, -1), (25, -1), (26, -1), (27, 131072), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, 512), (39, 131072), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 15 : {16, 22}

After reduction : 
 pending  : [38, 27, 39, 3, 19]
 solution : [9, 10, 7, 15]


Before reduction : 
 pending  : [38, 27, 39, 3, 19]
 solution : [9, 10, 7, 15]

Essensial at level 15 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 65536), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, 0), (17, -1), (18, -1), (19, 66048), (20, -1), (21, -1), (22, 0), (23, -1), (24, -1), (25, -1), (26, -1), (27, 131072), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, 512), (39, 131072), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 65536), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, 66048), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, 131072), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, 512), (39, 131072), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 15 : set()

After reduction : 
 pending  : [38, 27, 39, 3, 19]
 solution : [9, 10, 7, 15]


Solution : [9, 10, 7, 15] has cost 22.


Before backtrack at level 15
 pending : [38, 27, 39, 3, 19]
 solution : [9, 10, 7, 15]

After backtrack at level 15
 pending : [38, 27, 39, 3, 19, 22, 16]
 solution : [9, 10, 7, 15]


Invert decision for 15 at level 14


New level: 15
 pending : [38, 27, 39, 3, 19, 22, 16]
 solution : [9, 10, 7]


Before reduction : 
 pending  : [38, 27, 39, 3, 19, 22, 16]
 solution : [9, 10, 7]

Essensial at level 15 : {22}

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 65536), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, 66048), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, 131072), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, 512), (39, 131072), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 131072), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, 32768), (17, -1), (18, -1), (19, 135168), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, 524288), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, 32768), (39, 524288), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 15 : set()

After reduction : 
 pending  : [38, 27, 39, 3, 19, 16]
 solution : [9, 10, 7, 22]


Before reduction : 
 pending  : [38, 27, 39, 3, 19, 16]
 solution : [9, 10, 7, 22]

Essensial at level 15 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 131072), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, 32768), (17, -1), (18, -1), (19, 135168), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, 524288), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, 32768), (39, 524288), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 131072), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, 32768), (17, -1), (18, -1), (19, 135168), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, 524288), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, 32768), (39, 524288), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 15 : set()

After reduction : 
 pending  : [38, 27, 39, 3, 19, 16]
 solution : [9, 10, 7, 22]


Solution : [9, 10, 7, 22] has cost 22.


Before backtrack at level 15
 pending : [38, 27, 39, 3, 19, 16]
 solution : [9, 10, 7, 22]

After backtrack at level 15
 pending : [38, 27, 39, 3, 19, 16, 22]
 solution : [9, 10, 7]


Before backtrack at level 14
 pending : [38, 27, 39, 3, 19, 16, 22]
 solution : [9, 10, 7]

After backtrack at level 14
 pending : [38, 27, 39, 3, 19, 16, 22, 15]
 solution : [9, 10, 7]


Before backtrack at level 13
 pending : [38, 27, 39, 3, 19, 16, 22, 15]
 solution : [9, 10, 7]

After backtrack at level 13
 pending : [38, 27, 39, 3, 19, 16, 22, 15, 18]
 solution : [9, 10, 7]


Before backtrack at level 12
 pending : [38, 27, 39, 3, 19, 16, 22, 15, 18]
 solution : [9, 10, 7]

After backtrack at level 12
 pending : [38, 27, 39, 3, 19, 16, 22, 15, 18, 14]
 solution : [9, 10, 7]


Before backtrack at level 11
 pending : [38, 27, 39, 3, 19, 16, 22, 15, 18, 14]
 solution : [9, 10, 7]

After backtrack at level 11
 pending : [38, 27, 39, 3, 19, 16, 22, 15, 18, 14, 7, 5, 29, 31, 37, 42, 43, 47, 48, 49, 41, 30, 33, 17]
 solution : [9, 10]


Before backtrack at level 10
 pending : [38, 27, 39, 3, 19, 16, 22, 15, 18, 14, 7, 5, 29, 31, 37, 42, 43, 47, 48, 49, 41, 30, 33, 17]
 solution : [9, 10]

After backtrack at level 10
 pending : [38, 27, 39, 3, 19, 16, 22, 15, 18, 14, 7, 5, 29, 31, 37, 42, 43, 47, 48, 49, 41, 30, 33, 17, 23]
 solution : [9, 10]


Before backtrack at level 9
 pending : [38, 27, 39, 3, 19, 16, 22, 15, 18, 14, 7, 5, 29, 31, 37, 42, 43, 47, 48, 49, 41, 30, 33, 17, 23]
 solution : [9, 10]

After backtrack at level 9
 pending : [38, 27, 39, 3, 19, 16, 22, 15, 18, 14, 7, 5, 29, 31, 37, 42, 43, 47, 48, 49, 41, 30, 33, 17, 23, 21]
 solution : [9, 10]


Before backtrack at level 8
 pending : [38, 27, 39, 3, 19, 16, 22, 15, 18, 14, 7, 5, 29, 31, 37, 42, 43, 47, 48, 49, 41, 30, 33, 17, 23, 21]
 solution : [9, 10]

After backtrack at level 8
 pending : [38, 27, 39, 3, 19, 16, 22, 15, 18, 14, 7, 5, 29, 31, 37, 42, 43, 47, 48, 49, 41, 30, 33, 17, 23, 21, 40]
 solution : [9, 10]


Before backtrack at level 7
 pending : [38, 27, 39, 3, 19, 16, 22, 15, 18, 14, 7, 5, 29, 31, 37, 42, 43, 47, 48, 49, 41, 30, 33, 17, 23, 21, 40]
 solution : [9, 10]

After backtrack at level 7
 pending : [38, 27, 39, 3, 19, 16, 22, 15, 18, 14, 7, 5, 29, 31, 37, 42, 43, 47, 48, 49, 41, 30, 33, 17, 23, 21, 40, 13]
 solution : [9, 10]


Before backtrack at level 6
 pending : [38, 27, 39, 3, 19, 16, 22, 15, 18, 14, 7, 5, 29, 31, 37, 42, 43, 47, 48, 49, 41, 30, 33, 17, 23, 21, 40, 13]
 solution : [9, 10]

After backtrack at level 6
 pending : [38, 27, 39, 3, 19, 16, 22, 15, 18, 14, 7, 5, 29, 31, 37, 42, 43, 47, 48, 49, 41, 30, 33, 17, 23, 21, 40, 13, 28]
 solution : [9, 10]


Before backtrack at level 5
 pending : [38, 27, 39, 3, 19, 16, 22, 15, 18, 14, 7, 5, 29, 31, 37, 42, 43, 47, 48, 49, 41, 30, 33, 17, 23, 21, 40, 13, 28]
 solution : [9, 10]

After backtrack at level 5
 pending : [38, 27, 39, 3, 19, 16, 22, 15, 18, 14, 7, 5, 29, 31, 37, 42, 43, 47, 48, 49, 41, 30, 33, 17, 23, 21, 40, 13, 28, 24]
 solution : [9, 10]


Before backtrack at level 4
 pending : [38, 27, 39, 3, 19, 16, 22, 15, 18, 14, 7, 5, 29, 31, 37, 42, 43, 47, 48, 49, 41, 30, 33, 17, 23, 21, 40, 13, 28, 24]
 solution : [9, 10]

After backtrack at level 4
 pending : [38, 27, 39, 3, 19, 16, 22, 15, 18, 14, 7, 5, 29, 31, 37, 42, 43, 47, 48, 49, 41, 30, 33, 17, 23, 21, 40, 13, 28, 24, 32]
 solution : [9, 10]


Before backtrack at level 3
 pending : [38, 27, 39, 3, 19, 16, 22, 15, 18, 14, 7, 5, 29, 31, 37, 42, 43, 47, 48, 49, 41, 30, 33, 17, 23, 21, 40, 13, 28, 24, 32]
 solution : [9, 10]

After backtrack at level 3
 pending : [38, 27, 39, 3, 19, 16, 22, 15, 18, 14, 7, 5, 29, 31, 37, 42, 43, 47, 48, 49, 41, 30, 33, 17, 23, 21, 40, 13, 28, 24, 32, 26]
 solution : [9, 10]


Invert decision for 10 at level 2


New level: 3
 pending : [38, 27, 39, 3, 19, 16, 22, 15, 18, 14, 7, 5, 29, 31, 37, 42, 43, 47, 48, 49, 41, 30, 33, 17, 23, 21, 40, 13, 28, 24, 32, 26]
 solution : [9]


Before reduction : 
 pending  : [38, 27, 39, 3, 19, 16, 22, 15, 18, 14, 7, 5, 29, 31, 37, 42, 43, 47, 48, 49, 41, 30, 33, 17, 23, 21, 40, 13, 28, 24, 32, 26]
 solution : [9]

Essensial at level 3 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 131072), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, 32768), (17, -1), (18, -1), (19, 135168), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, 524288), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, 32768), (39, 524288), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 1048576), (4, -1), (5, 1048576), (6, -1), (7, 134217728), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, 2147483648), (14, 16777216), (15, 8388608), (16, 524288), (17, 67108864), (18, 33554432), (19, 1114112), (20, -1), (21, 1073741824), (22, 262144), (23, 134217728), (24, 1073741824), (25, -1), (26, 4294967296), (27, 4194304), (28, 4294967296), (29, 1048576), (30, 4194304), (31, 16384), (32, 2147483648), (33, 32768), (34, -1), (35, -1), (36, -1), (37, 16384), (38, 268435456), (39, 4194304), (40, 1073741824), (41, 134217728), (42, 524288), (43, 524288), (44, -1), (45, -1), (46, -1), (47, 67108864), (48, 16777216), (49, 67108864), (50, -1), (51, -1), (52, -1)]

Covered at level 3 : set()

After reduction : 
 pending  : [38, 27, 39, 3, 19, 16, 22, 15, 18, 14, 7, 5, 29, 31, 37, 42, 43, 47, 48, 49, 41, 30, 33, 17, 23, 21, 40, 13, 28, 24, 32, 26]
 solution : [9]


Solution : [9] has cost 6.


Decide in level 3 among pending : [38, 27, 39, 3, 19, 16, 22, 15, 18, 14, 7, 5, 29, 31, 37, 42, 43, 47, 48, 49, 41, 30, 33, 17, 23, 21, 40, 13, 28, 24, 32, 26]

Coverage : [(0, -1), (1, -1), (2, -1), (3, 1048576), (4, -1), (5, 1048576), (6, -1), (7, 134217728), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, 2147483648), (14, 16777216), (15, 8388608), (16, 524288), (17, 67108864), (18, 33554432), (19, 1114112), (20, -1), (21, 1073741824), (22, 262144), (23, 134217728), (24, 1073741824), (25, -1), (26, 4294967296), (27, 4194304), (28, 4294967296), (29, 1048576), (30, 4194304), (31, 16384), (32, 2147483648), (33, 32768), (34, -1), (35, -1), (36, -1), (37, 16384), (38, 268435456), (39, 4194304), (40, 1073741824), (41, 134217728), (42, 524288), (43, 524288), (44, -1), (45, -1), (46, -1), (47, 67108864), (48, 16777216), (49, 67108864), (50, -1), (51, -1), (52, -1)]

Decide 28 with phase True at level 3

After decision at level 3
 pending : [38, 27, 39, 3, 19, 16, 22, 15, 18, 14, 7, 5, 29, 31, 37, 42, 43, 47, 48, 49, 41, 30, 33, 17, 23, 21, 40, 13, 24, 32, 26]
 solution : [9, 28]


New level: 4
 pending : [38, 27, 39, 3, 19, 16, 22, 15, 18, 14, 7, 5, 29, 31, 37, 42, 43, 47, 48, 49, 41, 30, 33, 17, 23, 21, 40, 13, 24, 32, 26]
 solution : [9, 28]


Before reduction : 
 pending  : [38, 27, 39, 3, 19, 16, 22, 15, 18, 14, 7, 5, 29, 31, 37, 42, 43, 47, 48, 49, 41, 30, 33, 17, 23, 21, 40, 13, 24, 32, 26]
 solution : [9, 28]

Essensial at level 4 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 1048576), (4, -1), (5, 1048576), (6, -1), (7, 134217728), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, 2147483648), (14, 16777216), (15, 8388608), (16, 524288), (17, 67108864), (18, 33554432), (19, 1114112), (20, -1), (21, 1073741824), (22, 262144), (23, 134217728), (24, 1073741824), (25, -1), (26, 4294967296), (27, 4194304), (28, 4294967296), (29, 1048576), (30, 4194304), (31, 16384), (32, 2147483648), (33, 32768), (34, -1), (35, -1), (36, -1), (37, 16384), (38, 268435456), (39, 4194304), (40, 1073741824), (41, 134217728), (42, 524288), (43, 524288), (44, -1), (45, -1), (46, -1), (47, 67108864), (48, 16777216), (49, 67108864), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 0), (4, -1), (5, 262144), (6, -1), (7, 134217728), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, 0), (14, 0), (15, 0), (16, 0), (17, 0), (18, 0), (19, 0), (20, -1), (21, 0), (22, 0), (23, 134217728), (24, 1073741824), (25, -1), (26, 4294967296), (27, 0), (28, -1), (29, 524288), (30, 4194304), (31, 4096), (32, 2147483648), (33, 8192), (34, -1), (35, -1), (36, -1), (37, 2048), (38, 2048), (39, 0), (40, 4096), (41, 67108864), (42, 131072), (43, 131072), (44, -1), (45, -1), (46, -1), (47, 33554432), (48, 4194304), (49, 16777216), (50, -1), (51, -1), (52, -1)]

Covered at level 4 : {3, 39, 13, 14, 15, 16, 17, 18, 19, 21, 22, 27}

After reduction : 
 pending  : [38, 7, 5, 29, 31, 37, 42, 43, 47, 48, 49, 41, 30, 33, 23, 40, 24, 32, 26]
 solution : [9, 28]


Before reduction : 
 pending  : [38, 7, 5, 29, 31, 37, 42, 43, 47, 48, 49, 41, 30, 33, 23, 40, 24, 32, 26]
 solution : [9, 28]

Essensial at level 4 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 0), (4, -1), (5, 262144), (6, -1), (7, 134217728), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, 0), (14, 0), (15, 0), (16, 0), (17, 0), (18, 0), (19, 0), (20, -1), (21, 0), (22, 0), (23, 134217728), (24, 1073741824), (25, -1), (26, 4294967296), (27, 0), (28, -1), (29, 524288), (30, 4194304), (31, 4096), (32, 2147483648), (33, 8192), (34, -1), (35, -1), (36, -1), (37, 2048), (38, 2048), (39, 0), (40, 4096), (41, 67108864), (42, 131072), (43, 131072), (44, -1), (45, -1), (46, -1), (47, 33554432), (48, 4194304), (49, 16777216), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 262144), (6, -1), (7, 134217728), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, 134217728), (24, 1073741824), (25, -1), (26, 4294967296), (27, -1), (28, -1), (29, 524288), (30, 4194304), (31, 4096), (32, 2147483648), (33, 8192), (34, -1), (35, -1), (36, -1), (37, 2048), (38, 2048), (39, -1), (40, 4096), (41, 67108864), (42, 131072), (43, 131072), (44, -1), (45, -1), (46, -1), (47, 33554432), (48, 4194304), (49, 16777216), (50, -1), (51, -1), (52, -1)]

Covered at level 4 : set()

After reduction : 
 pending  : [38, 7, 5, 29, 31, 37, 42, 43, 47, 48, 49, 41, 30, 33, 23, 40, 24, 32, 26]
 solution : [9, 28]


Solution : [9, 28] has cost 10.


Decide in level 4 among pending : [38, 7, 5, 29, 31, 37, 42, 43, 47, 48, 49, 41, 30, 33, 23, 40, 24, 32, 26]

Coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 262144), (6, -1), (7, 134217728), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, 134217728), (24, 1073741824), (25, -1), (26, 4294967296), (27, -1), (28, -1), (29, 524288), (30, 4194304), (31, 4096), (32, 2147483648), (33, 8192), (34, -1), (35, -1), (36, -1), (37, 2048), (38, 2048), (39, -1), (40, 4096), (41, 67108864), (42, 131072), (43, 131072), (44, -1), (45, -1), (46, -1), (47, 33554432), (48, 4194304), (49, 16777216), (50, -1), (51, -1), (52, -1)]

Decide 26 with phase True at level 4

After decision at level 4
 pending : [38, 7, 5, 29, 31, 37, 42, 43, 47, 48, 49, 41, 30, 33, 23, 40, 24, 32]
 solution : [9, 28, 26]


New level: 5
 pending : [38, 7, 5, 29, 31, 37, 42, 43, 47, 48, 49, 41, 30, 33, 23, 40, 24, 32]
 solution : [9, 28, 26]


Before reduction : 
 pending  : [38, 7, 5, 29, 31, 37, 42, 43, 47, 48, 49, 41, 30, 33, 23, 40, 24, 32]
 solution : [9, 28, 26]

Essensial at level 5 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 262144), (6, -1), (7, 134217728), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, 134217728), (24, 1073741824), (25, -1), (26, 4294967296), (27, -1), (28, -1), (29, 524288), (30, 4194304), (31, 4096), (32, 2147483648), (33, 8192), (34, -1), (35, -1), (36, -1), (37, 2048), (38, 2048), (39, -1), (40, 4096), (41, 67108864), (42, 131072), (43, 131072), (44, -1), (45, -1), (46, -1), (47, 33554432), (48, 4194304), (49, 16777216), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 262144), (6, -1), (7, 134217728), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, 134217728), (24, 536870912), (25, -1), (26, -1), (27, -1), (28, -1), (29, 524288), (30, 2097152), (31, 4096), (32, 1073741824), (33, 4096), (34, -1), (35, -1), (36, -1), (37, 2048), (38, 2048), (39, -1), (40, 2048), (41, 67108864), (42, 131072), (43, 131072), (44, -1), (45, -1), (46, -1), (47, 33554432), (48, 4194304), (49, 16777216), (50, -1), (51, -1), (52, -1)]

Covered at level 5 : set()

After reduction : 
 pending  : [38, 7, 5, 29, 31, 37, 42, 43, 47, 48, 49, 41, 30, 33, 23, 40, 24, 32]
 solution : [9, 28, 26]


Solution : [9, 28, 26] has cost 14.


Decide in level 5 among pending : [38, 7, 5, 29, 31, 37, 42, 43, 47, 48, 49, 41, 30, 33, 23, 40, 24, 32]

Coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 262144), (6, -1), (7, 134217728), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, 134217728), (24, 536870912), (25, -1), (26, -1), (27, -1), (28, -1), (29, 524288), (30, 2097152), (31, 4096), (32, 1073741824), (33, 4096), (34, -1), (35, -1), (36, -1), (37, 2048), (38, 2048), (39, -1), (40, 2048), (41, 67108864), (42, 131072), (43, 131072), (44, -1), (45, -1), (46, -1), (47, 33554432), (48, 4194304), (49, 16777216), (50, -1), (51, -1), (52, -1)]

Decide 32 with phase True at level 5

After decision at level 5
 pending : [38, 7, 5, 29, 31, 37, 42, 43, 47, 48, 49, 41, 30, 33, 23, 40, 24]
 solution : [9, 28, 26, 32]


New level: 6
 pending : [38, 7, 5, 29, 31, 37, 42, 43, 47, 48, 49, 41, 30, 33, 23, 40, 24]
 solution : [9, 28, 26, 32]


Before reduction : 
 pending  : [38, 7, 5, 29, 31, 37, 42, 43, 47, 48, 49, 41, 30, 33, 23, 40, 24]
 solution : [9, 28, 26, 32]

Essensial at level 6 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 262144), (6, -1), (7, 134217728), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, 134217728), (24, 536870912), (25, -1), (26, -1), (27, -1), (28, -1), (29, 524288), (30, 2097152), (31, 4096), (32, 1073741824), (33, 4096), (34, -1), (35, -1), (36, -1), (37, 2048), (38, 2048), (39, -1), (40, 2048), (41, 67108864), (42, 131072), (43, 131072), (44, -1), (45, -1), (46, -1), (47, 33554432), (48, 4194304), (49, 16777216), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 65536), (6, -1), (7, 134217728), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, 134217728), (24, 2048), (25, -1), (26, -1), (27, -1), (28, -1), (29, 131072), (30, 0), (31, 1024), (32, -1), (33, 0), (34, -1), (35, -1), (36, -1), (37, 512), (38, 512), (39, -1), (40, 0), (41, 16777216), (42, 32768), (43, 32768), (44, -1), (45, -1), (46, -1), (47, 8388608), (48, 1048576), (49, 4194304), (50, -1), (51, -1), (52, -1)]

Covered at level 6 : {40, 33, 30}

After reduction : 
 pending  : [38, 7, 5, 29, 31, 37, 42, 43, 47, 48, 49, 41, 23, 24]
 solution : [9, 28, 26, 32]


Before reduction : 
 pending  : [38, 7, 5, 29, 31, 37, 42, 43, 47, 48, 49, 41, 23, 24]
 solution : [9, 28, 26, 32]

Essensial at level 6 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 65536), (6, -1), (7, 134217728), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, 134217728), (24, 2048), (25, -1), (26, -1), (27, -1), (28, -1), (29, 131072), (30, 0), (31, 1024), (32, -1), (33, 0), (34, -1), (35, -1), (36, -1), (37, 512), (38, 512), (39, -1), (40, 0), (41, 16777216), (42, 32768), (43, 32768), (44, -1), (45, -1), (46, -1), (47, 8388608), (48, 1048576), (49, 4194304), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 65536), (6, -1), (7, 134217728), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, 134217728), (24, 2048), (25, -1), (26, -1), (27, -1), (28, -1), (29, 131072), (30, -1), (31, 1024), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, 512), (38, 512), (39, -1), (40, -1), (41, 16777216), (42, 32768), (43, 32768), (44, -1), (45, -1), (46, -1), (47, 8388608), (48, 1048576), (49, 4194304), (50, -1), (51, -1), (52, -1)]

Covered at level 6 : set()

After reduction : 
 pending  : [38, 7, 5, 29, 31, 37, 42, 43, 47, 48, 49, 41, 23, 24]
 solution : [9, 28, 26, 32]


Solution : [9, 28, 26, 32] has cost 27.


Before backtrack at level 6
 pending : [38, 7, 5, 29, 31, 37, 42, 43, 47, 48, 49, 41, 23, 24]
 solution : [9, 28, 26, 32]

After backtrack at level 6
 pending : [38, 7, 5, 29, 31, 37, 42, 43, 47, 48, 49, 41, 23, 24, 30, 33, 40]
 solution : [9, 28, 26, 32]


Invert decision for 32 at level 5


New level: 6
 pending : [38, 7, 5, 29, 31, 37, 42, 43, 47, 48, 49, 41, 23, 24, 30, 33, 40]
 solution : [9, 28, 26]


Before reduction : 
 pending  : [38, 7, 5, 29, 31, 37, 42, 43, 47, 48, 49, 41, 23, 24, 30, 33, 40]
 solution : [9, 28, 26]

Essensial at level 6 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 65536), (6, -1), (7, 134217728), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, 134217728), (24, 2048), (25, -1), (26, -1), (27, -1), (28, -1), (29, 131072), (30, -1), (31, 1024), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, 512), (38, 512), (39, -1), (40, -1), (41, 16777216), (42, 32768), (43, 32768), (44, -1), (45, -1), (46, -1), (47, 8388608), (48, 1048576), (49, 4194304), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 262144), (6, -1), (7, 134217728), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, 134217728), (24, 536870912), (25, -1), (26, -1), (27, -1), (28, -1), (29, 524288), (30, 2097152), (31, 4096), (32, -1), (33, 4096), (34, -1), (35, -1), (36, -1), (37, 2048), (38, 2048), (39, -1), (40, 2048), (41, 67108864), (42, 131072), (43, 131072), (44, -1), (45, -1), (46, -1), (47, 33554432), (48, 4194304), (49, 16777216), (50, -1), (51, -1), (52, -1)]

Covered at level 6 : set()

After reduction : 
 pending  : [38, 7, 5, 29, 31, 37, 42, 43, 47, 48, 49, 41, 23, 24, 30, 33, 40]
 solution : [9, 28, 26]


Solution : [9, 28, 26] has cost 14.


Decide in level 6 among pending : [38, 7, 5, 29, 31, 37, 42, 43, 47, 48, 49, 41, 23, 24, 30, 33, 40]

Coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 262144), (6, -1), (7, 134217728), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, 134217728), (24, 536870912), (25, -1), (26, -1), (27, -1), (28, -1), (29, 524288), (30, 2097152), (31, 4096), (32, -1), (33, 4096), (34, -1), (35, -1), (36, -1), (37, 2048), (38, 2048), (39, -1), (40, 2048), (41, 67108864), (42, 131072), (43, 131072), (44, -1), (45, -1), (46, -1), (47, 33554432), (48, 4194304), (49, 16777216), (50, -1), (51, -1), (52, -1)]

Decide 24 with phase True at level 6

After decision at level 6
 pending : [38, 7, 5, 29, 31, 37, 42, 43, 47, 48, 49, 41, 23, 30, 33, 40]
 solution : [9, 28, 26, 24]


New level: 7
 pending : [38, 7, 5, 29, 31, 37, 42, 43, 47, 48, 49, 41, 23, 30, 33, 40]
 solution : [9, 28, 26, 24]


Before reduction : 
 pending  : [38, 7, 5, 29, 31, 37, 42, 43, 47, 48, 49, 41, 23, 30, 33, 40]
 solution : [9, 28, 26, 24]

Essensial at level 7 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 262144), (6, -1), (7, 134217728), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, 134217728), (24, 536870912), (25, -1), (26, -1), (27, -1), (28, -1), (29, 524288), (30, 2097152), (31, 4096), (32, -1), (33, 4096), (34, -1), (35, -1), (36, -1), (37, 2048), (38, 2048), (39, -1), (40, 2048), (41, 67108864), (42, 131072), (43, 131072), (44, -1), (45, -1), (46, -1), (47, 33554432), (48, 4194304), (49, 16777216), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 65536), (6, -1), (7, 33554432), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, 33554432), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, 131072), (30, 0), (31, 1024), (32, -1), (33, 0), (34, -1), (35, -1), (36, -1), (37, 512), (38, 512), (39, -1), (40, 0), (41, 33554432), (42, 32768), (43, 32768), (44, -1), (45, -1), (46, -1), (47, 8388608), (48, 1048576), (49, 8388608), (50, -1), (51, -1), (52, -1)]

Covered at level 7 : {40, 33, 30}

After reduction : 
 pending  : [38, 7, 5, 29, 31, 37, 42, 43, 47, 48, 49, 41, 23]
 solution : [9, 28, 26, 24]


Before reduction : 
 pending  : [38, 7, 5, 29, 31, 37, 42, 43, 47, 48, 49, 41, 23]
 solution : [9, 28, 26, 24]

Essensial at level 7 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 65536), (6, -1), (7, 33554432), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, 33554432), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, 131072), (30, 0), (31, 1024), (32, -1), (33, 0), (34, -1), (35, -1), (36, -1), (37, 512), (38, 512), (39, -1), (40, 0), (41, 33554432), (42, 32768), (43, 32768), (44, -1), (45, -1), (46, -1), (47, 8388608), (48, 1048576), (49, 8388608), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 65536), (6, -1), (7, 33554432), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, 33554432), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, 131072), (30, -1), (31, 1024), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, 512), (38, 512), (39, -1), (40, -1), (41, 33554432), (42, 32768), (43, 32768), (44, -1), (45, -1), (46, -1), (47, 8388608), (48, 1048576), (49, 8388608), (50, -1), (51, -1), (52, -1)]

Covered at level 7 : set()

After reduction : 
 pending  : [38, 7, 5, 29, 31, 37, 42, 43, 47, 48, 49, 41, 23]
 solution : [9, 28, 26, 24]


Solution : [9, 28, 26, 24] has cost 21.


Before backtrack at level 7
 pending : [38, 7, 5, 29, 31, 37, 42, 43, 47, 48, 49, 41, 23]
 solution : [9, 28, 26, 24]

After backtrack at level 7
 pending : [38, 7, 5, 29, 31, 37, 42, 43, 47, 48, 49, 41, 23, 30, 33, 40]
 solution : [9, 28, 26, 24]


Invert decision for 24 at level 6


New level: 7
 pending : [38, 7, 5, 29, 31, 37, 42, 43, 47, 48, 49, 41, 23, 30, 33, 40]
 solution : [9, 28, 26]


Before reduction : 
 pending  : [38, 7, 5, 29, 31, 37, 42, 43, 47, 48, 49, 41, 23, 30, 33, 40]
 solution : [9, 28, 26]

Essensial at level 7 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 65536), (6, -1), (7, 33554432), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, 33554432), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, 131072), (30, -1), (31, 1024), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, 512), (38, 512), (39, -1), (40, -1), (41, 33554432), (42, 32768), (43, 32768), (44, -1), (45, -1), (46, -1), (47, 8388608), (48, 1048576), (49, 8388608), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 262144), (6, -1), (7, 134217728), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, 134217728), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, 524288), (30, 2097152), (31, 4096), (32, -1), (33, 4096), (34, -1), (35, -1), (36, -1), (37, 2048), (38, 2048), (39, -1), (40, 2048), (41, 67108864), (42, 131072), (43, 131072), (44, -1), (45, -1), (46, -1), (47, 33554432), (48, 4194304), (49, 16777216), (50, -1), (51, -1), (52, -1)]

Covered at level 7 : set()

After reduction : 
 pending  : [38, 7, 5, 29, 31, 37, 42, 43, 47, 48, 49, 41, 23, 30, 33, 40]
 solution : [9, 28, 26]


Solution : [9, 28, 26] has cost 14.


Decide in level 7 among pending : [38, 7, 5, 29, 31, 37, 42, 43, 47, 48, 49, 41, 23, 30, 33, 40]

Coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 262144), (6, -1), (7, 134217728), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, 134217728), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, 524288), (30, 2097152), (31, 4096), (32, -1), (33, 4096), (34, -1), (35, -1), (36, -1), (37, 2048), (38, 2048), (39, -1), (40, 2048), (41, 67108864), (42, 131072), (43, 131072), (44, -1), (45, -1), (46, -1), (47, 33554432), (48, 4194304), (49, 16777216), (50, -1), (51, -1), (52, -1)]

Decide 7 with phase True at level 7

After decision at level 7
 pending : [38, 5, 29, 31, 37, 42, 43, 47, 48, 49, 41, 23, 30, 33, 40]
 solution : [9, 28, 26, 7]


New level: 8
 pending : [38, 5, 29, 31, 37, 42, 43, 47, 48, 49, 41, 23, 30, 33, 40]
 solution : [9, 28, 26, 7]


Before reduction : 
 pending  : [38, 5, 29, 31, 37, 42, 43, 47, 48, 49, 41, 23, 30, 33, 40]
 solution : [9, 28, 26, 7]

Essensial at level 8 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 262144), (6, -1), (7, 134217728), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, 134217728), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, 524288), (30, 2097152), (31, 4096), (32, -1), (33, 4096), (34, -1), (35, -1), (36, -1), (37, 2048), (38, 2048), (39, -1), (40, 2048), (41, 67108864), (42, 131072), (43, 131072), (44, -1), (45, -1), (46, -1), (47, 33554432), (48, 4194304), (49, 16777216), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 0), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, 0), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, 0), (30, 0), (31, 0), (32, -1), (33, 0), (34, -1), (35, -1), (36, -1), (37, 0), (38, 0), (39, -1), (40, 0), (41, 0), (42, 0), (43, 0), (44, -1), (45, -1), (46, -1), (47, 0), (48, 0), (49, 0), (50, -1), (51, -1), (52, -1)]

Covered at level 8 : {33, 37, 5, 38, 40, 41, 42, 43, 47, 48, 49, 23, 29, 30, 31}

After reduction : 
 pending  : []
 solution : [9, 28, 26, 7]


Before reduction : 
 pending  : []
 solution : [9, 28, 26, 7]

Essensial at level 8 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 0), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, 0), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, 0), (30, 0), (31, 0), (32, -1), (33, 0), (34, -1), (35, -1), (36, -1), (37, 0), (38, 0), (39, -1), (40, 0), (41, 0), (42, 0), (43, 0), (44, -1), (45, -1), (46, -1), (47, 0), (48, 0), (49, 0), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 8 : set()

After reduction : 
 pending  : []
 solution : [9, 28, 26, 7]


Solution : [9, 28, 26, 7] has cost 18.


Before backtrack at level 8
 pending : []
 solution : [9, 28, 26, 7]

After backtrack at level 8
 pending : [38, 5, 29, 31, 37, 42, 43, 47, 48, 49, 41, 23, 30, 33, 40]
 solution : [9, 28, 26, 7]


Invert decision for 7 at level 7


New level: 8
 pending : [38, 5, 29, 31, 37, 42, 43, 47, 48, 49, 41, 23, 30, 33, 40]
 solution : [9, 28, 26]


Before reduction : 
 pending  : [38, 5, 29, 31, 37, 42, 43, 47, 48, 49, 41, 23, 30, 33, 40]
 solution : [9, 28, 26]

Essensial at level 8 : {23}

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 0), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, 0), (30, 0), (31, 0), (32, -1), (33, 0), (34, -1), (35, -1), (36, -1), (37, 0), (38, 0), (39, -1), (40, 0), (41, 0), (42, 0), (43, 0), (44, -1), (45, -1), (46, -1), (47, 0), (48, 0), (49, 0), (50, -1), (51, -1), (52, -1)]

Covered at level 8 : {33, 37, 5, 38, 40, 41, 42, 43, 47, 48, 49, 29, 30, 31}

After reduction : 
 pending  : []
 solution : [9, 28, 26, 23]


Before reduction : 
 pending  : []
 solution : [9, 28, 26, 23]

Essensial at level 8 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 0), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, 0), (30, 0), (31, 0), (32, -1), (33, 0), (34, -1), (35, -1), (36, -1), (37, 0), (38, 0), (39, -1), (40, 0), (41, 0), (42, 0), (43, 0), (44, -1), (45, -1), (46, -1), (47, 0), (48, 0), (49, 0), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 8 : set()

After reduction : 
 pending  : []
 solution : [9, 28, 26, 23]


Solution : [9, 28, 26, 23] has cost 21.


Before backtrack at level 8
 pending : []
 solution : [9, 28, 26, 23]

After backtrack at level 8
 pending : [23, 38, 5, 29, 31, 37, 42, 43, 47, 48, 49, 41, 30, 33, 40]
 solution : [9, 28, 26]


Before backtrack at level 7
 pending : [23, 38, 5, 29, 31, 37, 42, 43, 47, 48, 49, 41, 30, 33, 40]
 solution : [9, 28, 26]

After backtrack at level 7
 pending : [23, 38, 5, 29, 31, 37, 42, 43, 47, 48, 49, 41, 30, 33, 40, 7]
 solution : [9, 28, 26]


Before backtrack at level 6
 pending : [23, 38, 5, 29, 31, 37, 42, 43, 47, 48, 49, 41, 30, 33, 40, 7]
 solution : [9, 28, 26]

After backtrack at level 6
 pending : [23, 38, 5, 29, 31, 37, 42, 43, 47, 48, 49, 41, 30, 33, 40, 7, 24]
 solution : [9, 28, 26]


Before backtrack at level 5
 pending : [23, 38, 5, 29, 31, 37, 42, 43, 47, 48, 49, 41, 30, 33, 40, 7, 24]
 solution : [9, 28, 26]

After backtrack at level 5
 pending : [23, 38, 5, 29, 31, 37, 42, 43, 47, 48, 49, 41, 30, 33, 40, 7, 24, 32]
 solution : [9, 28, 26]


Invert decision for 26 at level 4


New level: 5
 pending : [23, 38, 5, 29, 31, 37, 42, 43, 47, 48, 49, 41, 30, 33, 40, 7, 24, 32]
 solution : [9, 28]


Before reduction : 
 pending  : [23, 38, 5, 29, 31, 37, 42, 43, 47, 48, 49, 41, 30, 33, 40, 7, 24, 32]
 solution : [9, 28]

Essensial at level 5 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 262144), (6, -1), (7, 134217728), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, 134217728), (24, 1073741824), (25, -1), (26, -1), (27, -1), (28, -1), (29, 524288), (30, 4194304), (31, 4096), (32, 2147483648), (33, 8192), (34, -1), (35, -1), (36, -1), (37, 2048), (38, 2048), (39, -1), (40, 4096), (41, 67108864), (42, 131072), (43, 131072), (44, -1), (45, -1), (46, -1), (47, 33554432), (48, 4194304), (49, 16777216), (50, -1), (51, -1), (52, -1)]

Covered at level 5 : set()

After reduction : 
 pending  : [23, 38, 5, 29, 31, 37, 42, 43, 47, 48, 49, 41, 30, 33, 40, 7, 24, 32]
 solution : [9, 28]


Solution : [9, 28] has cost 10.


Decide in level 5 among pending : [23, 38, 5, 29, 31, 37, 42, 43, 47, 48, 49, 41, 30, 33, 40, 7, 24, 32]

Coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 262144), (6, -1), (7, 134217728), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, 134217728), (24, 1073741824), (25, -1), (26, -1), (27, -1), (28, -1), (29, 524288), (30, 4194304), (31, 4096), (32, 2147483648), (33, 8192), (34, -1), (35, -1), (36, -1), (37, 2048), (38, 2048), (39, -1), (40, 4096), (41, 67108864), (42, 131072), (43, 131072), (44, -1), (45, -1), (46, -1), (47, 33554432), (48, 4194304), (49, 16777216), (50, -1), (51, -1), (52, -1)]

Decide 32 with phase True at level 5

After decision at level 5
 pending : [23, 38, 5, 29, 31, 37, 42, 43, 47, 48, 49, 41, 30, 33, 40, 7, 24]
 solution : [9, 28, 32]


New level: 6
 pending : [23, 38, 5, 29, 31, 37, 42, 43, 47, 48, 49, 41, 30, 33, 40, 7, 24]
 solution : [9, 28, 32]


Before reduction : 
 pending  : [23, 38, 5, 29, 31, 37, 42, 43, 47, 48, 49, 41, 30, 33, 40, 7, 24]
 solution : [9, 28, 32]

Essensial at level 6 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 262144), (6, -1), (7, 134217728), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, 134217728), (24, 1073741824), (25, -1), (26, -1), (27, -1), (28, -1), (29, 524288), (30, 4194304), (31, 4096), (32, 2147483648), (33, 8192), (34, -1), (35, -1), (36, -1), (37, 2048), (38, 2048), (39, -1), (40, 4096), (41, 67108864), (42, 131072), (43, 131072), (44, -1), (45, -1), (46, -1), (47, 33554432), (48, 4194304), (49, 16777216), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 65536), (6, -1), (7, 134217728), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, 134217728), (24, 4096), (25, -1), (26, -1), (27, -1), (28, -1), (29, 131072), (30, 0), (31, 1024), (32, -1), (33, 0), (34, -1), (35, -1), (36, -1), (37, 512), (38, 512), (39, -1), (40, 0), (41, 16777216), (42, 32768), (43, 32768), (44, -1), (45, -1), (46, -1), (47, 8388608), (48, 1048576), (49, 4194304), (50, -1), (51, -1), (52, -1)]

Covered at level 6 : {40, 33, 30}

After reduction : 
 pending  : [23, 38, 5, 29, 31, 37, 42, 43, 47, 48, 49, 41, 7, 24]
 solution : [9, 28, 32]


Before reduction : 
 pending  : [23, 38, 5, 29, 31, 37, 42, 43, 47, 48, 49, 41, 7, 24]
 solution : [9, 28, 32]

Essensial at level 6 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 65536), (6, -1), (7, 134217728), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, 134217728), (24, 4096), (25, -1), (26, -1), (27, -1), (28, -1), (29, 131072), (30, 0), (31, 1024), (32, -1), (33, 0), (34, -1), (35, -1), (36, -1), (37, 512), (38, 512), (39, -1), (40, 0), (41, 16777216), (42, 32768), (43, 32768), (44, -1), (45, -1), (46, -1), (47, 8388608), (48, 1048576), (49, 4194304), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 65536), (6, -1), (7, 134217728), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, 134217728), (24, 4096), (25, -1), (26, -1), (27, -1), (28, -1), (29, 131072), (30, -1), (31, 1024), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, 512), (38, 512), (39, -1), (40, -1), (41, 16777216), (42, 32768), (43, 32768), (44, -1), (45, -1), (46, -1), (47, 8388608), (48, 1048576), (49, 4194304), (50, -1), (51, -1), (52, -1)]

Covered at level 6 : set()

After reduction : 
 pending  : [23, 38, 5, 29, 31, 37, 42, 43, 47, 48, 49, 41, 7, 24]
 solution : [9, 28, 32]


Solution : [9, 28, 32] has cost 23.


Before backtrack at level 6
 pending : [23, 38, 5, 29, 31, 37, 42, 43, 47, 48, 49, 41, 7, 24]
 solution : [9, 28, 32]

After backtrack at level 6
 pending : [23, 38, 5, 29, 31, 37, 42, 43, 47, 48, 49, 41, 7, 24, 30, 33, 40]
 solution : [9, 28, 32]


Invert decision for 32 at level 5


New level: 6
 pending : [23, 38, 5, 29, 31, 37, 42, 43, 47, 48, 49, 41, 7, 24, 30, 33, 40]
 solution : [9, 28]


Before reduction : 
 pending  : [23, 38, 5, 29, 31, 37, 42, 43, 47, 48, 49, 41, 7, 24, 30, 33, 40]
 solution : [9, 28]

Essensial at level 6 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 65536), (6, -1), (7, 134217728), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, 134217728), (24, 4096), (25, -1), (26, -1), (27, -1), (28, -1), (29, 131072), (30, -1), (31, 1024), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, 512), (38, 512), (39, -1), (40, -1), (41, 16777216), (42, 32768), (43, 32768), (44, -1), (45, -1), (46, -1), (47, 8388608), (48, 1048576), (49, 4194304), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 262144), (6, -1), (7, 134217728), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, 134217728), (24, 1073741824), (25, -1), (26, -1), (27, -1), (28, -1), (29, 524288), (30, 4194304), (31, 4096), (32, -1), (33, 8192), (34, -1), (35, -1), (36, -1), (37, 2048), (38, 2048), (39, -1), (40, 4096), (41, 67108864), (42, 131072), (43, 131072), (44, -1), (45, -1), (46, -1), (47, 33554432), (48, 4194304), (49, 16777216), (50, -1), (51, -1), (52, -1)]

Covered at level 6 : set()

After reduction : 
 pending  : [23, 38, 5, 29, 31, 37, 42, 43, 47, 48, 49, 41, 7, 24, 30, 33, 40]
 solution : [9, 28]


Solution : [9, 28] has cost 10.


Decide in level 6 among pending : [23, 38, 5, 29, 31, 37, 42, 43, 47, 48, 49, 41, 7, 24, 30, 33, 40]

Coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 262144), (6, -1), (7, 134217728), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, 134217728), (24, 1073741824), (25, -1), (26, -1), (27, -1), (28, -1), (29, 524288), (30, 4194304), (31, 4096), (32, -1), (33, 8192), (34, -1), (35, -1), (36, -1), (37, 2048), (38, 2048), (39, -1), (40, 4096), (41, 67108864), (42, 131072), (43, 131072), (44, -1), (45, -1), (46, -1), (47, 33554432), (48, 4194304), (49, 16777216), (50, -1), (51, -1), (52, -1)]

Decide 24 with phase True at level 6

After decision at level 6
 pending : [23, 38, 5, 29, 31, 37, 42, 43, 47, 48, 49, 41, 7, 30, 33, 40]
 solution : [9, 28, 24]


New level: 7
 pending : [23, 38, 5, 29, 31, 37, 42, 43, 47, 48, 49, 41, 7, 30, 33, 40]
 solution : [9, 28, 24]


Before reduction : 
 pending  : [23, 38, 5, 29, 31, 37, 42, 43, 47, 48, 49, 41, 7, 30, 33, 40]
 solution : [9, 28, 24]

Essensial at level 7 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 262144), (6, -1), (7, 134217728), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, 134217728), (24, 1073741824), (25, -1), (26, -1), (27, -1), (28, -1), (29, 524288), (30, 4194304), (31, 4096), (32, -1), (33, 8192), (34, -1), (35, -1), (36, -1), (37, 2048), (38, 2048), (39, -1), (40, 4096), (41, 67108864), (42, 131072), (43, 131072), (44, -1), (45, -1), (46, -1), (47, 33554432), (48, 4194304), (49, 16777216), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 65536), (6, -1), (7, 33554432), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, 33554432), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, 131072), (30, 0), (31, 1024), (32, -1), (33, 0), (34, -1), (35, -1), (36, -1), (37, 512), (38, 512), (39, -1), (40, 0), (41, 33554432), (42, 32768), (43, 32768), (44, -1), (45, -1), (46, -1), (47, 8388608), (48, 1048576), (49, 8388608), (50, -1), (51, -1), (52, -1)]

Covered at level 7 : {40, 33, 30}

After reduction : 
 pending  : [23, 38, 5, 29, 31, 37, 42, 43, 47, 48, 49, 41, 7]
 solution : [9, 28, 24]


Before reduction : 
 pending  : [23, 38, 5, 29, 31, 37, 42, 43, 47, 48, 49, 41, 7]
 solution : [9, 28, 24]

Essensial at level 7 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 65536), (6, -1), (7, 33554432), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, 33554432), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, 131072), (30, 0), (31, 1024), (32, -1), (33, 0), (34, -1), (35, -1), (36, -1), (37, 512), (38, 512), (39, -1), (40, 0), (41, 33554432), (42, 32768), (43, 32768), (44, -1), (45, -1), (46, -1), (47, 8388608), (48, 1048576), (49, 8388608), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 65536), (6, -1), (7, 33554432), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, 33554432), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, 131072), (30, -1), (31, 1024), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, 512), (38, 512), (39, -1), (40, -1), (41, 33554432), (42, 32768), (43, 32768), (44, -1), (45, -1), (46, -1), (47, 8388608), (48, 1048576), (49, 8388608), (50, -1), (51, -1), (52, -1)]

Covered at level 7 : set()

After reduction : 
 pending  : [23, 38, 5, 29, 31, 37, 42, 43, 47, 48, 49, 41, 7]
 solution : [9, 28, 24]


Solution : [9, 28, 24] has cost 17.


Decide in level 7 among pending : [23, 38, 5, 29, 31, 37, 42, 43, 47, 48, 49, 41, 7]

Coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 65536), (6, -1), (7, 33554432), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, 33554432), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, 131072), (30, -1), (31, 1024), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, 512), (38, 512), (39, -1), (40, -1), (41, 33554432), (42, 32768), (43, 32768), (44, -1), (45, -1), (46, -1), (47, 8388608), (48, 1048576), (49, 8388608), (50, -1), (51, -1), (52, -1)]

Decide 23 with phase True at level 7

After decision at level 7
 pending : [38, 5, 29, 31, 37, 42, 43, 47, 48, 49, 41, 7]
 solution : [9, 28, 24, 23]


New level: 8
 pending : [38, 5, 29, 31, 37, 42, 43, 47, 48, 49, 41, 7]
 solution : [9, 28, 24, 23]


Before reduction : 
 pending  : [38, 5, 29, 31, 37, 42, 43, 47, 48, 49, 41, 7]
 solution : [9, 28, 24, 23]

Essensial at level 8 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 65536), (6, -1), (7, 33554432), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, 33554432), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, 131072), (30, -1), (31, 1024), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, 512), (38, 512), (39, -1), (40, -1), (41, 33554432), (42, 32768), (43, 32768), (44, -1), (45, -1), (46, -1), (47, 8388608), (48, 1048576), (49, 8388608), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 0), (6, -1), (7, 0), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, 0), (30, -1), (31, 0), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, 0), (38, 0), (39, -1), (40, -1), (41, 0), (42, 0), (43, 0), (44, -1), (45, -1), (46, -1), (47, 0), (48, 0), (49, 0), (50, -1), (51, -1), (52, -1)]

Covered at level 8 : {37, 5, 38, 7, 41, 42, 43, 47, 48, 49, 29, 31}

After reduction : 
 pending  : []
 solution : [9, 28, 24, 23]


Before reduction : 
 pending  : []
 solution : [9, 28, 24, 23]

Essensial at level 8 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 0), (6, -1), (7, 0), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, 0), (30, -1), (31, 0), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, 0), (38, 0), (39, -1), (40, -1), (41, 0), (42, 0), (43, 0), (44, -1), (45, -1), (46, -1), (47, 0), (48, 0), (49, 0), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 8 : set()

After reduction : 
 pending  : []
 solution : [9, 28, 24, 23]


Solution : [9, 28, 24, 23] has cost 24.


Before backtrack at level 8
 pending : []
 solution : [9, 28, 24, 23]

After backtrack at level 8
 pending : [38, 5, 29, 31, 37, 42, 43, 47, 48, 49, 41, 7]
 solution : [9, 28, 24, 23]


Invert decision for 23 at level 7


New level: 8
 pending : [38, 5, 29, 31, 37, 42, 43, 47, 48, 49, 41, 7]
 solution : [9, 28, 24]


Before reduction : 
 pending  : [38, 5, 29, 31, 37, 42, 43, 47, 48, 49, 41, 7]
 solution : [9, 28, 24]

Essensial at level 8 : {7}

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 0), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, 0), (30, -1), (31, 0), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, 0), (38, 0), (39, -1), (40, -1), (41, 0), (42, 0), (43, 0), (44, -1), (45, -1), (46, -1), (47, 0), (48, 0), (49, 0), (50, -1), (51, -1), (52, -1)]

Covered at level 8 : {37, 5, 38, 41, 42, 43, 47, 48, 49, 29, 31}

After reduction : 
 pending  : []
 solution : [9, 28, 24, 7]


Before reduction : 
 pending  : []
 solution : [9, 28, 24, 7]

Essensial at level 8 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 0), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, 0), (30, -1), (31, 0), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, 0), (38, 0), (39, -1), (40, -1), (41, 0), (42, 0), (43, 0), (44, -1), (45, -1), (46, -1), (47, 0), (48, 0), (49, 0), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 8 : set()

After reduction : 
 pending  : []
 solution : [9, 28, 24, 7]


Solution : [9, 28, 24, 7] has cost 21.


Before backtrack at level 8
 pending : []
 solution : [9, 28, 24, 7]

After backtrack at level 8
 pending : [7, 38, 5, 29, 31, 37, 42, 43, 47, 48, 49, 41]
 solution : [9, 28, 24]


Before backtrack at level 7
 pending : [7, 38, 5, 29, 31, 37, 42, 43, 47, 48, 49, 41]
 solution : [9, 28, 24]

After backtrack at level 7
 pending : [7, 38, 5, 29, 31, 37, 42, 43, 47, 48, 49, 41, 30, 33, 40, 23]
 solution : [9, 28, 24]


Invert decision for 24 at level 6


New level: 7
 pending : [7, 38, 5, 29, 31, 37, 42, 43, 47, 48, 49, 41, 30, 33, 40, 23]
 solution : [9, 28]


Before reduction : 
 pending  : [7, 38, 5, 29, 31, 37, 42, 43, 47, 48, 49, 41, 30, 33, 40, 23]
 solution : [9, 28]

Essensial at level 7 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 262144), (6, -1), (7, 134217728), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, 134217728), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, 524288), (30, 4194304), (31, 4096), (32, -1), (33, 8192), (34, -1), (35, -1), (36, -1), (37, 2048), (38, 2048), (39, -1), (40, 4096), (41, 67108864), (42, 131072), (43, 131072), (44, -1), (45, -1), (46, -1), (47, 33554432), (48, 4194304), (49, 16777216), (50, -1), (51, -1), (52, -1)]

Covered at level 7 : set()

After reduction : 
 pending  : [7, 38, 5, 29, 31, 37, 42, 43, 47, 48, 49, 41, 30, 33, 40, 23]
 solution : [9, 28]


Solution : [9, 28] has cost 10.


Decide in level 7 among pending : [7, 38, 5, 29, 31, 37, 42, 43, 47, 48, 49, 41, 30, 33, 40, 23]

Coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 262144), (6, -1), (7, 134217728), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, 134217728), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, 524288), (30, 4194304), (31, 4096), (32, -1), (33, 8192), (34, -1), (35, -1), (36, -1), (37, 2048), (38, 2048), (39, -1), (40, 4096), (41, 67108864), (42, 131072), (43, 131072), (44, -1), (45, -1), (46, -1), (47, 33554432), (48, 4194304), (49, 16777216), (50, -1), (51, -1), (52, -1)]

Decide 7 with phase True at level 7

After decision at level 7
 pending : [38, 5, 29, 31, 37, 42, 43, 47, 48, 49, 41, 30, 33, 40, 23]
 solution : [9, 28, 7]


New level: 8
 pending : [38, 5, 29, 31, 37, 42, 43, 47, 48, 49, 41, 30, 33, 40, 23]
 solution : [9, 28, 7]


Before reduction : 
 pending  : [38, 5, 29, 31, 37, 42, 43, 47, 48, 49, 41, 30, 33, 40, 23]
 solution : [9, 28, 7]

Essensial at level 8 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 262144), (6, -1), (7, 134217728), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, 134217728), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, 524288), (30, 4194304), (31, 4096), (32, -1), (33, 8192), (34, -1), (35, -1), (36, -1), (37, 2048), (38, 2048), (39, -1), (40, 4096), (41, 67108864), (42, 131072), (43, 131072), (44, -1), (45, -1), (46, -1), (47, 33554432), (48, 4194304), (49, 16777216), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 0), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, 0), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, 0), (30, 0), (31, 0), (32, -1), (33, 0), (34, -1), (35, -1), (36, -1), (37, 0), (38, 0), (39, -1), (40, 0), (41, 0), (42, 0), (43, 0), (44, -1), (45, -1), (46, -1), (47, 0), (48, 0), (49, 0), (50, -1), (51, -1), (52, -1)]

Covered at level 8 : {33, 37, 5, 38, 40, 41, 42, 43, 47, 48, 49, 23, 29, 30, 31}

After reduction : 
 pending  : []
 solution : [9, 28, 7]


Before reduction : 
 pending  : []
 solution : [9, 28, 7]

Essensial at level 8 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 0), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, 0), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, 0), (30, 0), (31, 0), (32, -1), (33, 0), (34, -1), (35, -1), (36, -1), (37, 0), (38, 0), (39, -1), (40, 0), (41, 0), (42, 0), (43, 0), (44, -1), (45, -1), (46, -1), (47, 0), (48, 0), (49, 0), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 8 : set()

After reduction : 
 pending  : []
 solution : [9, 28, 7]


Solution : [9, 28, 7] has cost 14.


Before backtrack at level 8
 pending : []
 solution : [9, 28, 7]

After backtrack at level 8
 pending : [38, 5, 29, 31, 37, 42, 43, 47, 48, 49, 41, 30, 33, 40, 23]
 solution : [9, 28, 7]


Invert decision for 7 at level 7


New level: 8
 pending : [38, 5, 29, 31, 37, 42, 43, 47, 48, 49, 41, 30, 33, 40, 23]
 solution : [9, 28]


Before reduction : 
 pending  : [38, 5, 29, 31, 37, 42, 43, 47, 48, 49, 41, 30, 33, 40, 23]
 solution : [9, 28]

Essensial at level 8 : {23}

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 0), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, 0), (30, 0), (31, 0), (32, -1), (33, 0), (34, -1), (35, -1), (36, -1), (37, 0), (38, 0), (39, -1), (40, 0), (41, 0), (42, 0), (43, 0), (44, -1), (45, -1), (46, -1), (47, 0), (48, 0), (49, 0), (50, -1), (51, -1), (52, -1)]

Covered at level 8 : {33, 37, 5, 38, 40, 41, 42, 43, 47, 48, 49, 29, 30, 31}

After reduction : 
 pending  : []
 solution : [9, 28, 23]


Before reduction : 
 pending  : []
 solution : [9, 28, 23]

Essensial at level 8 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 0), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, 0), (30, 0), (31, 0), (32, -1), (33, 0), (34, -1), (35, -1), (36, -1), (37, 0), (38, 0), (39, -1), (40, 0), (41, 0), (42, 0), (43, 0), (44, -1), (45, -1), (46, -1), (47, 0), (48, 0), (49, 0), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 8 : set()

After reduction : 
 pending  : []
 solution : [9, 28, 23]


Solution : [9, 28, 23] has cost 17.


Before backtrack at level 8
 pending : []
 solution : [9, 28, 23]

After backtrack at level 8
 pending : [23, 38, 5, 29, 31, 37, 42, 43, 47, 48, 49, 41, 30, 33, 40]
 solution : [9, 28]


Before backtrack at level 7
 pending : [23, 38, 5, 29, 31, 37, 42, 43, 47, 48, 49, 41, 30, 33, 40]
 solution : [9, 28]

After backtrack at level 7
 pending : [23, 38, 5, 29, 31, 37, 42, 43, 47, 48, 49, 41, 30, 33, 40, 7]
 solution : [9, 28]


Before backtrack at level 6
 pending : [23, 38, 5, 29, 31, 37, 42, 43, 47, 48, 49, 41, 30, 33, 40, 7]
 solution : [9, 28]

After backtrack at level 6
 pending : [23, 38, 5, 29, 31, 37, 42, 43, 47, 48, 49, 41, 30, 33, 40, 7, 24]
 solution : [9, 28]


Before backtrack at level 5
 pending : [23, 38, 5, 29, 31, 37, 42, 43, 47, 48, 49, 41, 30, 33, 40, 7, 24]
 solution : [9, 28]

After backtrack at level 5
 pending : [23, 38, 5, 29, 31, 37, 42, 43, 47, 48, 49, 41, 30, 33, 40, 7, 24, 32]
 solution : [9, 28]


Before backtrack at level 4
 pending : [23, 38, 5, 29, 31, 37, 42, 43, 47, 48, 49, 41, 30, 33, 40, 7, 24, 32]
 solution : [9, 28]

After backtrack at level 4
 pending : [23, 38, 5, 29, 31, 37, 42, 43, 47, 48, 49, 41, 30, 33, 40, 7, 24, 32, 27, 39, 3, 19, 16, 22, 15, 18, 14, 17, 21, 13, 26]
 solution : [9, 28]


Invert decision for 28 at level 3


New level: 4
 pending : [23, 38, 5, 29, 31, 37, 42, 43, 47, 48, 49, 41, 30, 33, 40, 7, 24, 32, 27, 39, 3, 19, 16, 22, 15, 18, 14, 17, 21, 13, 26]
 solution : [9]


Before reduction : 
 pending  : [23, 38, 5, 29, 31, 37, 42, 43, 47, 48, 49, 41, 30, 33, 40, 7, 24, 32, 27, 39, 3, 19, 16, 22, 15, 18, 14, 17, 21, 13, 26]
 solution : [9]

Essensial at level 4 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 1048576), (4, -1), (5, 1048576), (6, -1), (7, 134217728), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, 2147483648), (14, 16777216), (15, 8388608), (16, 524288), (17, 67108864), (18, 33554432), (19, 1114112), (20, -1), (21, 1073741824), (22, 262144), (23, 134217728), (24, 1073741824), (25, -1), (26, 4294967296), (27, 4194304), (28, -1), (29, 1048576), (30, 4194304), (31, 16384), (32, 2147483648), (33, 32768), (34, -1), (35, -1), (36, -1), (37, 16384), (38, 268435456), (39, 4194304), (40, 1073741824), (41, 134217728), (42, 524288), (43, 524288), (44, -1), (45, -1), (46, -1), (47, 67108864), (48, 16777216), (49, 67108864), (50, -1), (51, -1), (52, -1)]

Covered at level 4 : set()

After reduction : 
 pending  : [23, 38, 5, 29, 31, 37, 42, 43, 47, 48, 49, 41, 30, 33, 40, 7, 24, 32, 27, 39, 3, 19, 16, 22, 15, 18, 14, 17, 21, 13, 26]
 solution : [9]


Solution : [9] has cost 6.


Decide in level 4 among pending : [23, 38, 5, 29, 31, 37, 42, 43, 47, 48, 49, 41, 30, 33, 40, 7, 24, 32, 27, 39, 3, 19, 16, 22, 15, 18, 14, 17, 21, 13, 26]

Coverage : [(0, -1), (1, -1), (2, -1), (3, 1048576), (4, -1), (5, 1048576), (6, -1), (7, 134217728), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, 2147483648), (14, 16777216), (15, 8388608), (16, 524288), (17, 67108864), (18, 33554432), (19, 1114112), (20, -1), (21, 1073741824), (22, 262144), (23, 134217728), (24, 1073741824), (25, -1), (26, 4294967296), (27, 4194304), (28, -1), (29, 1048576), (30, 4194304), (31, 16384), (32, 2147483648), (33, 32768), (34, -1), (35, -1), (36, -1), (37, 16384), (38, 268435456), (39, 4194304), (40, 1073741824), (41, 134217728), (42, 524288), (43, 524288), (44, -1), (45, -1), (46, -1), (47, 67108864), (48, 16777216), (49, 67108864), (50, -1), (51, -1), (52, -1)]

Decide 26 with phase True at level 4

After decision at level 4
 pending : [23, 38, 5, 29, 31, 37, 42, 43, 47, 48, 49, 41, 30, 33, 40, 7, 24, 32, 27, 39, 3, 19, 16, 22, 15, 18, 14, 17, 21, 13]
 solution : [9, 26]


New level: 5
 pending : [23, 38, 5, 29, 31, 37, 42, 43, 47, 48, 49, 41, 30, 33, 40, 7, 24, 32, 27, 39, 3, 19, 16, 22, 15, 18, 14, 17, 21, 13]
 solution : [9, 26]


Before reduction : 
 pending  : [23, 38, 5, 29, 31, 37, 42, 43, 47, 48, 49, 41, 30, 33, 40, 7, 24, 32, 27, 39, 3, 19, 16, 22, 15, 18, 14, 17, 21, 13]
 solution : [9, 26]

Essensial at level 5 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 1048576), (4, -1), (5, 1048576), (6, -1), (7, 134217728), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, 2147483648), (14, 16777216), (15, 8388608), (16, 524288), (17, 67108864), (18, 33554432), (19, 1114112), (20, -1), (21, 1073741824), (22, 262144), (23, 134217728), (24, 1073741824), (25, -1), (26, 4294967296), (27, 4194304), (28, -1), (29, 1048576), (30, 4194304), (31, 16384), (32, 2147483648), (33, 32768), (34, -1), (35, -1), (36, -1), (37, 16384), (38, 268435456), (39, 4194304), (40, 1073741824), (41, 134217728), (42, 524288), (43, 524288), (44, -1), (45, -1), (46, -1), (47, 67108864), (48, 16777216), (49, 67108864), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 1048576), (4, -1), (5, 1048576), (6, -1), (7, 134217728), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, 2147483648), (14, 16777216), (15, 8388608), (16, 524288), (17, 67108864), (18, 33554432), (19, 1114112), (20, -1), (21, 1073741824), (22, 262144), (23, 134217728), (24, 536870912), (25, -1), (26, -1), (27, 4194304), (28, -1), (29, 1048576), (30, 2097152), (31, 16384), (32, 1073741824), (33, 16384), (34, -1), (35, -1), (36, -1), (37, 16384), (38, 268435456), (39, 4194304), (40, 536870912), (41, 134217728), (42, 524288), (43, 524288), (44, -1), (45, -1), (46, -1), (47, 67108864), (48, 16777216), (49, 67108864), (50, -1), (51, -1), (52, -1)]

Covered at level 5 : set()

After reduction : 
 pending  : [23, 38, 5, 29, 31, 37, 42, 43, 47, 48, 49, 41, 30, 33, 40, 7, 24, 32, 27, 39, 3, 19, 16, 22, 15, 18, 14, 17, 21, 13]
 solution : [9, 26]


Solution : [9, 26] has cost 10.


Decide in level 5 among pending : [23, 38, 5, 29, 31, 37, 42, 43, 47, 48, 49, 41, 30, 33, 40, 7, 24, 32, 27, 39, 3, 19, 16, 22, 15, 18, 14, 17, 21, 13]

Coverage : [(0, -1), (1, -1), (2, -1), (3, 1048576), (4, -1), (5, 1048576), (6, -1), (7, 134217728), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, 2147483648), (14, 16777216), (15, 8388608), (16, 524288), (17, 67108864), (18, 33554432), (19, 1114112), (20, -1), (21, 1073741824), (22, 262144), (23, 134217728), (24, 536870912), (25, -1), (26, -1), (27, 4194304), (28, -1), (29, 1048576), (30, 2097152), (31, 16384), (32, 1073741824), (33, 16384), (34, -1), (35, -1), (36, -1), (37, 16384), (38, 268435456), (39, 4194304), (40, 536870912), (41, 134217728), (42, 524288), (43, 524288), (44, -1), (45, -1), (46, -1), (47, 67108864), (48, 16777216), (49, 67108864), (50, -1), (51, -1), (52, -1)]

Decide 13 with phase True at level 5

After decision at level 5
 pending : [23, 38, 5, 29, 31, 37, 42, 43, 47, 48, 49, 41, 30, 33, 40, 7, 24, 32, 27, 39, 3, 19, 16, 22, 15, 18, 14, 17, 21]
 solution : [9, 26, 13]


New level: 6
 pending : [23, 38, 5, 29, 31, 37, 42, 43, 47, 48, 49, 41, 30, 33, 40, 7, 24, 32, 27, 39, 3, 19, 16, 22, 15, 18, 14, 17, 21]
 solution : [9, 26, 13]


Before reduction : 
 pending  : [23, 38, 5, 29, 31, 37, 42, 43, 47, 48, 49, 41, 30, 33, 40, 7, 24, 32, 27, 39, 3, 19, 16, 22, 15, 18, 14, 17, 21]
 solution : [9, 26, 13]

Essensial at level 6 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 1048576), (4, -1), (5, 1048576), (6, -1), (7, 134217728), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, 2147483648), (14, 16777216), (15, 8388608), (16, 524288), (17, 67108864), (18, 33554432), (19, 1114112), (20, -1), (21, 1073741824), (22, 262144), (23, 134217728), (24, 536870912), (25, -1), (26, -1), (27, 4194304), (28, -1), (29, 1048576), (30, 2097152), (31, 16384), (32, 1073741824), (33, 16384), (34, -1), (35, -1), (36, -1), (37, 16384), (38, 268435456), (39, 4194304), (40, 536870912), (41, 134217728), (42, 524288), (43, 524288), (44, -1), (45, -1), (46, -1), (47, 67108864), (48, 16777216), (49, 67108864), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 0), (4, -1), (5, 262144), (6, -1), (7, 134217728), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 0), (15, 0), (16, 0), (17, 0), (18, 0), (19, 0), (20, -1), (21, 0), (22, 0), (23, 134217728), (24, 536870912), (25, -1), (26, -1), (27, 0), (28, -1), (29, 524288), (30, 2097152), (31, 4096), (32, 1073741824), (33, 4096), (34, -1), (35, -1), (36, -1), (37, 2048), (38, 2048), (39, 0), (40, 2048), (41, 67108864), (42, 131072), (43, 131072), (44, -1), (45, -1), (46, -1), (47, 33554432), (48, 4194304), (49, 67108864), (50, -1), (51, -1), (52, -1)]

Covered at level 6 : {3, 39, 14, 15, 16, 17, 18, 19, 21, 22, 27}

After reduction : 
 pending  : [23, 38, 5, 29, 31, 37, 42, 43, 47, 48, 49, 41, 30, 33, 40, 7, 24, 32]
 solution : [9, 26, 13]


Before reduction : 
 pending  : [23, 38, 5, 29, 31, 37, 42, 43, 47, 48, 49, 41, 30, 33, 40, 7, 24, 32]
 solution : [9, 26, 13]

Essensial at level 6 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 0), (4, -1), (5, 262144), (6, -1), (7, 134217728), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 0), (15, 0), (16, 0), (17, 0), (18, 0), (19, 0), (20, -1), (21, 0), (22, 0), (23, 134217728), (24, 536870912), (25, -1), (26, -1), (27, 0), (28, -1), (29, 524288), (30, 2097152), (31, 4096), (32, 1073741824), (33, 4096), (34, -1), (35, -1), (36, -1), (37, 2048), (38, 2048), (39, 0), (40, 2048), (41, 67108864), (42, 131072), (43, 131072), (44, -1), (45, -1), (46, -1), (47, 33554432), (48, 4194304), (49, 67108864), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 262144), (6, -1), (7, 134217728), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, 134217728), (24, 536870912), (25, -1), (26, -1), (27, -1), (28, -1), (29, 524288), (30, 2097152), (31, 4096), (32, 1073741824), (33, 4096), (34, -1), (35, -1), (36, -1), (37, 2048), (38, 2048), (39, -1), (40, 2048), (41, 67108864), (42, 131072), (43, 131072), (44, -1), (45, -1), (46, -1), (47, 33554432), (48, 4194304), (49, 67108864), (50, -1), (51, -1), (52, -1)]

Covered at level 6 : set()

After reduction : 
 pending  : [23, 38, 5, 29, 31, 37, 42, 43, 47, 48, 49, 41, 30, 33, 40, 7, 24, 32]
 solution : [9, 26, 13]


Solution : [9, 26, 13] has cost 17.


Before backtrack at level 6
 pending : [23, 38, 5, 29, 31, 37, 42, 43, 47, 48, 49, 41, 30, 33, 40, 7, 24, 32]
 solution : [9, 26, 13]

After backtrack at level 6
 pending : [23, 38, 5, 29, 31, 37, 42, 43, 47, 48, 49, 41, 30, 33, 40, 7, 24, 32, 27, 39, 3, 19, 16, 22, 15, 18, 14, 17, 21]
 solution : [9, 26, 13]


Invert decision for 13 at level 5


New level: 6
 pending : [23, 38, 5, 29, 31, 37, 42, 43, 47, 48, 49, 41, 30, 33, 40, 7, 24, 32, 27, 39, 3, 19, 16, 22, 15, 18, 14, 17, 21]
 solution : [9, 26]


Before reduction : 
 pending  : [23, 38, 5, 29, 31, 37, 42, 43, 47, 48, 49, 41, 30, 33, 40, 7, 24, 32, 27, 39, 3, 19, 16, 22, 15, 18, 14, 17, 21]
 solution : [9, 26]

Essensial at level 6 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 262144), (6, -1), (7, 134217728), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, 134217728), (24, 536870912), (25, -1), (26, -1), (27, -1), (28, -1), (29, 524288), (30, 2097152), (31, 4096), (32, 1073741824), (33, 4096), (34, -1), (35, -1), (36, -1), (37, 2048), (38, 2048), (39, -1), (40, 2048), (41, 67108864), (42, 131072), (43, 131072), (44, -1), (45, -1), (46, -1), (47, 33554432), (48, 4194304), (49, 67108864), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 1048576), (4, -1), (5, 1048576), (6, -1), (7, 134217728), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 16777216), (15, 8388608), (16, 524288), (17, 67108864), (18, 33554432), (19, 1114112), (20, -1), (21, 1073741824), (22, 262144), (23, 134217728), (24, 536870912), (25, -1), (26, -1), (27, 4194304), (28, -1), (29, 1048576), (30, 2097152), (31, 16384), (32, 1073741824), (33, 16384), (34, -1), (35, -1), (36, -1), (37, 16384), (38, 268435456), (39, 4194304), (40, 536870912), (41, 134217728), (42, 524288), (43, 524288), (44, -1), (45, -1), (46, -1), (47, 67108864), (48, 16777216), (49, 67108864), (50, -1), (51, -1), (52, -1)]

Covered at level 6 : set()

After reduction : 
 pending  : [23, 38, 5, 29, 31, 37, 42, 43, 47, 48, 49, 41, 30, 33, 40, 7, 24, 32, 27, 39, 3, 19, 16, 22, 15, 18, 14, 17, 21]
 solution : [9, 26]


Solution : [9, 26] has cost 10.


Decide in level 6 among pending : [23, 38, 5, 29, 31, 37, 42, 43, 47, 48, 49, 41, 30, 33, 40, 7, 24, 32, 27, 39, 3, 19, 16, 22, 15, 18, 14, 17, 21]

Coverage : [(0, -1), (1, -1), (2, -1), (3, 1048576), (4, -1), (5, 1048576), (6, -1), (7, 134217728), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 16777216), (15, 8388608), (16, 524288), (17, 67108864), (18, 33554432), (19, 1114112), (20, -1), (21, 1073741824), (22, 262144), (23, 134217728), (24, 536870912), (25, -1), (26, -1), (27, 4194304), (28, -1), (29, 1048576), (30, 2097152), (31, 16384), (32, 1073741824), (33, 16384), (34, -1), (35, -1), (36, -1), (37, 16384), (38, 268435456), (39, 4194304), (40, 536870912), (41, 134217728), (42, 524288), (43, 524288), (44, -1), (45, -1), (46, -1), (47, 67108864), (48, 16777216), (49, 67108864), (50, -1), (51, -1), (52, -1)]

Decide 32 with phase True at level 6

After decision at level 6
 pending : [23, 38, 5, 29, 31, 37, 42, 43, 47, 48, 49, 41, 30, 33, 40, 7, 24, 27, 39, 3, 19, 16, 22, 15, 18, 14, 17, 21]
 solution : [9, 26, 32]


New level: 7
 pending : [23, 38, 5, 29, 31, 37, 42, 43, 47, 48, 49, 41, 30, 33, 40, 7, 24, 27, 39, 3, 19, 16, 22, 15, 18, 14, 17, 21]
 solution : [9, 26, 32]


Before reduction : 
 pending  : [23, 38, 5, 29, 31, 37, 42, 43, 47, 48, 49, 41, 30, 33, 40, 7, 24, 27, 39, 3, 19, 16, 22, 15, 18, 14, 17, 21]
 solution : [9, 26, 32]

Essensial at level 7 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 1048576), (4, -1), (5, 1048576), (6, -1), (7, 134217728), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 16777216), (15, 8388608), (16, 524288), (17, 67108864), (18, 33554432), (19, 1114112), (20, -1), (21, 1073741824), (22, 262144), (23, 134217728), (24, 536870912), (25, -1), (26, -1), (27, 4194304), (28, -1), (29, 1048576), (30, 2097152), (31, 16384), (32, 1073741824), (33, 16384), (34, -1), (35, -1), (36, -1), (37, 16384), (38, 268435456), (39, 4194304), (40, 536870912), (41, 134217728), (42, 524288), (43, 524288), (44, -1), (45, -1), (46, -1), (47, 67108864), (48, 16777216), (49, 67108864), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 1048576), (4, -1), (5, 262144), (6, -1), (7, 134217728), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 16777216), (15, 8388608), (16, 524288), (17, 67108864), (18, 33554432), (19, 1114112), (20, -1), (21, 1073741824), (22, 262144), (23, 134217728), (24, 16384), (25, -1), (26, -1), (27, 4194304), (28, -1), (29, 262144), (30, 0), (31, 4096), (32, -1), (33, 0), (34, -1), (35, -1), (36, -1), (37, 4096), (38, 268435456), (39, 4194304), (40, 16384), (41, 33554432), (42, 131072), (43, 131072), (44, -1), (45, -1), (46, -1), (47, 16777216), (48, 4194304), (49, 16777216), (50, -1), (51, -1), (52, -1)]

Covered at level 7 : {33, 30}

After reduction : 
 pending  : [23, 38, 5, 29, 31, 37, 42, 43, 47, 48, 49, 41, 40, 7, 24, 27, 39, 3, 19, 16, 22, 15, 18, 14, 17, 21]
 solution : [9, 26, 32]


Before reduction : 
 pending  : [23, 38, 5, 29, 31, 37, 42, 43, 47, 48, 49, 41, 40, 7, 24, 27, 39, 3, 19, 16, 22, 15, 18, 14, 17, 21]
 solution : [9, 26, 32]

Essensial at level 7 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 1048576), (4, -1), (5, 262144), (6, -1), (7, 134217728), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 16777216), (15, 8388608), (16, 524288), (17, 67108864), (18, 33554432), (19, 1114112), (20, -1), (21, 1073741824), (22, 262144), (23, 134217728), (24, 16384), (25, -1), (26, -1), (27, 4194304), (28, -1), (29, 262144), (30, 0), (31, 4096), (32, -1), (33, 0), (34, -1), (35, -1), (36, -1), (37, 4096), (38, 268435456), (39, 4194304), (40, 16384), (41, 33554432), (42, 131072), (43, 131072), (44, -1), (45, -1), (46, -1), (47, 16777216), (48, 4194304), (49, 16777216), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 1048576), (4, -1), (5, 262144), (6, -1), (7, 134217728), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 16777216), (15, 8388608), (16, 524288), (17, 67108864), (18, 33554432), (19, 1114112), (20, -1), (21, 1073741824), (22, 262144), (23, 134217728), (24, 16384), (25, -1), (26, -1), (27, 4194304), (28, -1), (29, 262144), (30, -1), (31, 4096), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, 4096), (38, 268435456), (39, 4194304), (40, 16384), (41, 33554432), (42, 131072), (43, 131072), (44, -1), (45, -1), (46, -1), (47, 16777216), (48, 4194304), (49, 16777216), (50, -1), (51, -1), (52, -1)]

Covered at level 7 : set()

After reduction : 
 pending  : [23, 38, 5, 29, 31, 37, 42, 43, 47, 48, 49, 41, 40, 7, 24, 27, 39, 3, 19, 16, 22, 15, 18, 14, 17, 21]
 solution : [9, 26, 32]


Solution : [9, 26, 32] has cost 23.


Before backtrack at level 7
 pending : [23, 38, 5, 29, 31, 37, 42, 43, 47, 48, 49, 41, 40, 7, 24, 27, 39, 3, 19, 16, 22, 15, 18, 14, 17, 21]
 solution : [9, 26, 32]

After backtrack at level 7
 pending : [23, 38, 5, 29, 31, 37, 42, 43, 47, 48, 49, 41, 40, 7, 24, 27, 39, 3, 19, 16, 22, 15, 18, 14, 17, 21, 30, 33]
 solution : [9, 26, 32]


Invert decision for 32 at level 6


New level: 7
 pending : [23, 38, 5, 29, 31, 37, 42, 43, 47, 48, 49, 41, 40, 7, 24, 27, 39, 3, 19, 16, 22, 15, 18, 14, 17, 21, 30, 33]
 solution : [9, 26]


Before reduction : 
 pending  : [23, 38, 5, 29, 31, 37, 42, 43, 47, 48, 49, 41, 40, 7, 24, 27, 39, 3, 19, 16, 22, 15, 18, 14, 17, 21, 30, 33]
 solution : [9, 26]

Essensial at level 7 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 1048576), (4, -1), (5, 262144), (6, -1), (7, 134217728), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 16777216), (15, 8388608), (16, 524288), (17, 67108864), (18, 33554432), (19, 1114112), (20, -1), (21, 1073741824), (22, 262144), (23, 134217728), (24, 16384), (25, -1), (26, -1), (27, 4194304), (28, -1), (29, 262144), (30, -1), (31, 4096), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, 4096), (38, 268435456), (39, 4194304), (40, 16384), (41, 33554432), (42, 131072), (43, 131072), (44, -1), (45, -1), (46, -1), (47, 16777216), (48, 4194304), (49, 16777216), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 1048576), (4, -1), (5, 1048576), (6, -1), (7, 134217728), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 16777216), (15, 8388608), (16, 524288), (17, 67108864), (18, 33554432), (19, 1114112), (20, -1), (21, 1073741824), (22, 262144), (23, 134217728), (24, 536870912), (25, -1), (26, -1), (27, 4194304), (28, -1), (29, 1048576), (30, 2097152), (31, 16384), (32, -1), (33, 16384), (34, -1), (35, -1), (36, -1), (37, 16384), (38, 268435456), (39, 4194304), (40, 536870912), (41, 134217728), (42, 524288), (43, 524288), (44, -1), (45, -1), (46, -1), (47, 67108864), (48, 16777216), (49, 67108864), (50, -1), (51, -1), (52, -1)]

Covered at level 7 : set()

After reduction : 
 pending  : [23, 38, 5, 29, 31, 37, 42, 43, 47, 48, 49, 41, 40, 7, 24, 27, 39, 3, 19, 16, 22, 15, 18, 14, 17, 21, 30, 33]
 solution : [9, 26]


Solution : [9, 26] has cost 10.


Decide in level 7 among pending : [23, 38, 5, 29, 31, 37, 42, 43, 47, 48, 49, 41, 40, 7, 24, 27, 39, 3, 19, 16, 22, 15, 18, 14, 17, 21, 30, 33]

Coverage : [(0, -1), (1, -1), (2, -1), (3, 1048576), (4, -1), (5, 1048576), (6, -1), (7, 134217728), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 16777216), (15, 8388608), (16, 524288), (17, 67108864), (18, 33554432), (19, 1114112), (20, -1), (21, 1073741824), (22, 262144), (23, 134217728), (24, 536870912), (25, -1), (26, -1), (27, 4194304), (28, -1), (29, 1048576), (30, 2097152), (31, 16384), (32, -1), (33, 16384), (34, -1), (35, -1), (36, -1), (37, 16384), (38, 268435456), (39, 4194304), (40, 536870912), (41, 134217728), (42, 524288), (43, 524288), (44, -1), (45, -1), (46, -1), (47, 67108864), (48, 16777216), (49, 67108864), (50, -1), (51, -1), (52, -1)]

Decide 21 with phase True at level 7

After decision at level 7
 pending : [23, 38, 5, 29, 31, 37, 42, 43, 47, 48, 49, 41, 40, 7, 24, 27, 39, 3, 19, 16, 22, 15, 18, 14, 17, 30, 33]
 solution : [9, 26, 21]


New level: 8
 pending : [23, 38, 5, 29, 31, 37, 42, 43, 47, 48, 49, 41, 40, 7, 24, 27, 39, 3, 19, 16, 22, 15, 18, 14, 17, 30, 33]
 solution : [9, 26, 21]


Before reduction : 
 pending  : [23, 38, 5, 29, 31, 37, 42, 43, 47, 48, 49, 41, 40, 7, 24, 27, 39, 3, 19, 16, 22, 15, 18, 14, 17, 30, 33]
 solution : [9, 26, 21]

Essensial at level 8 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 1048576), (4, -1), (5, 1048576), (6, -1), (7, 134217728), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 16777216), (15, 8388608), (16, 524288), (17, 67108864), (18, 33554432), (19, 1114112), (20, -1), (21, 1073741824), (22, 262144), (23, 134217728), (24, 536870912), (25, -1), (26, -1), (27, 4194304), (28, -1), (29, 1048576), (30, 2097152), (31, 16384), (32, -1), (33, 16384), (34, -1), (35, -1), (36, -1), (37, 16384), (38, 268435456), (39, 4194304), (40, 536870912), (41, 134217728), (42, 524288), (43, 524288), (44, -1), (45, -1), (46, -1), (47, 67108864), (48, 16777216), (49, 67108864), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 0), (4, -1), (5, 262144), (6, -1), (7, 134217728), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 0), (15, 0), (16, 0), (17, 0), (18, 0), (19, 0), (20, -1), (21, -1), (22, 0), (23, 134217728), (24, 536870912), (25, -1), (26, -1), (27, 0), (28, -1), (29, 524288), (30, 2097152), (31, 4096), (32, -1), (33, 4096), (34, -1), (35, -1), (36, -1), (37, 2048), (38, 2048), (39, 0), (40, 2048), (41, 67108864), (42, 131072), (43, 131072), (44, -1), (45, -1), (46, -1), (47, 67108864), (48, 16777216), (49, 67108864), (50, -1), (51, -1), (52, -1)]

Covered at level 8 : {3, 39, 14, 15, 16, 17, 18, 19, 22, 27}

After reduction : 
 pending  : [23, 38, 5, 29, 31, 37, 42, 43, 47, 48, 49, 41, 40, 7, 24, 30, 33]
 solution : [9, 26, 21]


Before reduction : 
 pending  : [23, 38, 5, 29, 31, 37, 42, 43, 47, 48, 49, 41, 40, 7, 24, 30, 33]
 solution : [9, 26, 21]

Essensial at level 8 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 0), (4, -1), (5, 262144), (6, -1), (7, 134217728), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 0), (15, 0), (16, 0), (17, 0), (18, 0), (19, 0), (20, -1), (21, -1), (22, 0), (23, 134217728), (24, 536870912), (25, -1), (26, -1), (27, 0), (28, -1), (29, 524288), (30, 2097152), (31, 4096), (32, -1), (33, 4096), (34, -1), (35, -1), (36, -1), (37, 2048), (38, 2048), (39, 0), (40, 2048), (41, 67108864), (42, 131072), (43, 131072), (44, -1), (45, -1), (46, -1), (47, 67108864), (48, 16777216), (49, 67108864), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 262144), (6, -1), (7, 134217728), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, 134217728), (24, 536870912), (25, -1), (26, -1), (27, -1), (28, -1), (29, 524288), (30, 2097152), (31, 4096), (32, -1), (33, 4096), (34, -1), (35, -1), (36, -1), (37, 2048), (38, 2048), (39, -1), (40, 2048), (41, 67108864), (42, 131072), (43, 131072), (44, -1), (45, -1), (46, -1), (47, 67108864), (48, 16777216), (49, 67108864), (50, -1), (51, -1), (52, -1)]

Covered at level 8 : set()

After reduction : 
 pending  : [23, 38, 5, 29, 31, 37, 42, 43, 47, 48, 49, 41, 40, 7, 24, 30, 33]
 solution : [9, 26, 21]


Solution : [9, 26, 21] has cost 17.


Before backtrack at level 8
 pending : [23, 38, 5, 29, 31, 37, 42, 43, 47, 48, 49, 41, 40, 7, 24, 30, 33]
 solution : [9, 26, 21]

After backtrack at level 8
 pending : [23, 38, 5, 29, 31, 37, 42, 43, 47, 48, 49, 41, 40, 7, 24, 30, 33, 27, 39, 3, 19, 16, 22, 15, 18, 14, 17]
 solution : [9, 26, 21]


Invert decision for 21 at level 7


New level: 8
 pending : [23, 38, 5, 29, 31, 37, 42, 43, 47, 48, 49, 41, 40, 7, 24, 30, 33, 27, 39, 3, 19, 16, 22, 15, 18, 14, 17]
 solution : [9, 26]


Before reduction : 
 pending  : [23, 38, 5, 29, 31, 37, 42, 43, 47, 48, 49, 41, 40, 7, 24, 30, 33, 27, 39, 3, 19, 16, 22, 15, 18, 14, 17]
 solution : [9, 26]

Essensial at level 8 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 262144), (6, -1), (7, 134217728), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, 134217728), (24, 536870912), (25, -1), (26, -1), (27, -1), (28, -1), (29, 524288), (30, 2097152), (31, 4096), (32, -1), (33, 4096), (34, -1), (35, -1), (36, -1), (37, 2048), (38, 2048), (39, -1), (40, 2048), (41, 67108864), (42, 131072), (43, 131072), (44, -1), (45, -1), (46, -1), (47, 67108864), (48, 16777216), (49, 67108864), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 1048576), (4, -1), (5, 1048576), (6, -1), (7, 134217728), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 16777216), (15, 8388608), (16, 524288), (17, 67108864), (18, 33554432), (19, 1114112), (20, -1), (21, -1), (22, 262144), (23, 134217728), (24, 536870912), (25, -1), (26, -1), (27, 4194304), (28, -1), (29, 1048576), (30, 2097152), (31, 16384), (32, -1), (33, 16384), (34, -1), (35, -1), (36, -1), (37, 16384), (38, 268435456), (39, 4194304), (40, 536870912), (41, 134217728), (42, 524288), (43, 524288), (44, -1), (45, -1), (46, -1), (47, 67108864), (48, 16777216), (49, 67108864), (50, -1), (51, -1), (52, -1)]

Covered at level 8 : set()

After reduction : 
 pending  : [23, 38, 5, 29, 31, 37, 42, 43, 47, 48, 49, 41, 40, 7, 24, 30, 33, 27, 39, 3, 19, 16, 22, 15, 18, 14, 17]
 solution : [9, 26]


Solution : [9, 26] has cost 10.


Decide in level 8 among pending : [23, 38, 5, 29, 31, 37, 42, 43, 47, 48, 49, 41, 40, 7, 24, 30, 33, 27, 39, 3, 19, 16, 22, 15, 18, 14, 17]

Coverage : [(0, -1), (1, -1), (2, -1), (3, 1048576), (4, -1), (5, 1048576), (6, -1), (7, 134217728), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 16777216), (15, 8388608), (16, 524288), (17, 67108864), (18, 33554432), (19, 1114112), (20, -1), (21, -1), (22, 262144), (23, 134217728), (24, 536870912), (25, -1), (26, -1), (27, 4194304), (28, -1), (29, 1048576), (30, 2097152), (31, 16384), (32, -1), (33, 16384), (34, -1), (35, -1), (36, -1), (37, 16384), (38, 268435456), (39, 4194304), (40, 536870912), (41, 134217728), (42, 524288), (43, 524288), (44, -1), (45, -1), (46, -1), (47, 67108864), (48, 16777216), (49, 67108864), (50, -1), (51, -1), (52, -1)]

Decide 40 with phase True at level 8

After decision at level 8
 pending : [23, 38, 5, 29, 31, 37, 42, 43, 47, 48, 49, 41, 7, 24, 30, 33, 27, 39, 3, 19, 16, 22, 15, 18, 14, 17]
 solution : [9, 26, 40]


New level: 9
 pending : [23, 38, 5, 29, 31, 37, 42, 43, 47, 48, 49, 41, 7, 24, 30, 33, 27, 39, 3, 19, 16, 22, 15, 18, 14, 17]
 solution : [9, 26, 40]


Before reduction : 
 pending  : [23, 38, 5, 29, 31, 37, 42, 43, 47, 48, 49, 41, 7, 24, 30, 33, 27, 39, 3, 19, 16, 22, 15, 18, 14, 17]
 solution : [9, 26, 40]

Essensial at level 9 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 1048576), (4, -1), (5, 1048576), (6, -1), (7, 134217728), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 16777216), (15, 8388608), (16, 524288), (17, 67108864), (18, 33554432), (19, 1114112), (20, -1), (21, -1), (22, 262144), (23, 134217728), (24, 536870912), (25, -1), (26, -1), (27, 4194304), (28, -1), (29, 1048576), (30, 2097152), (31, 16384), (32, -1), (33, 16384), (34, -1), (35, -1), (36, -1), (37, 16384), (38, 268435456), (39, 4194304), (40, 536870912), (41, 134217728), (42, 524288), (43, 524288), (44, -1), (45, -1), (46, -1), (47, 67108864), (48, 16777216), (49, 67108864), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 1048576), (4, -1), (5, 1048576), (6, -1), (7, 134217728), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 16777216), (15, 8388608), (16, 524288), (17, 67108864), (18, 33554432), (19, 1114112), (20, -1), (21, -1), (22, 262144), (23, 134217728), (24, 268435456), (25, -1), (26, -1), (27, 4194304), (28, -1), (29, 1048576), (30, 1048576), (31, 16384), (32, -1), (33, 8192), (34, -1), (35, -1), (36, -1), (37, 16384), (38, 134217728), (39, 4194304), (40, -1), (41, 134217728), (42, 524288), (43, 524288), (44, -1), (45, -1), (46, -1), (47, 67108864), (48, 16777216), (49, 67108864), (50, -1), (51, -1), (52, -1)]

Covered at level 9 : set()

After reduction : 
 pending  : [23, 38, 5, 29, 31, 37, 42, 43, 47, 48, 49, 41, 7, 24, 30, 33, 27, 39, 3, 19, 16, 22, 15, 18, 14, 17]
 solution : [9, 26, 40]


Solution : [9, 26, 40] has cost 24.


Before backtrack at level 9
 pending : [23, 38, 5, 29, 31, 37, 42, 43, 47, 48, 49, 41, 7, 24, 30, 33, 27, 39, 3, 19, 16, 22, 15, 18, 14, 17]
 solution : [9, 26, 40]

After backtrack at level 9
 pending : [23, 38, 5, 29, 31, 37, 42, 43, 47, 48, 49, 41, 7, 24, 30, 33, 27, 39, 3, 19, 16, 22, 15, 18, 14, 17]
 solution : [9, 26, 40]


Invert decision for 40 at level 8


New level: 9
 pending : [23, 38, 5, 29, 31, 37, 42, 43, 47, 48, 49, 41, 7, 24, 30, 33, 27, 39, 3, 19, 16, 22, 15, 18, 14, 17]
 solution : [9, 26]


Before reduction : 
 pending  : [23, 38, 5, 29, 31, 37, 42, 43, 47, 48, 49, 41, 7, 24, 30, 33, 27, 39, 3, 19, 16, 22, 15, 18, 14, 17]
 solution : [9, 26]

Essensial at level 9 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 1048576), (4, -1), (5, 1048576), (6, -1), (7, 134217728), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 16777216), (15, 8388608), (16, 524288), (17, 67108864), (18, 33554432), (19, 1114112), (20, -1), (21, -1), (22, 262144), (23, 134217728), (24, 268435456), (25, -1), (26, -1), (27, 4194304), (28, -1), (29, 1048576), (30, 1048576), (31, 16384), (32, -1), (33, 8192), (34, -1), (35, -1), (36, -1), (37, 16384), (38, 134217728), (39, 4194304), (40, -1), (41, 134217728), (42, 524288), (43, 524288), (44, -1), (45, -1), (46, -1), (47, 67108864), (48, 16777216), (49, 67108864), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 1048576), (4, -1), (5, 1048576), (6, -1), (7, 134217728), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 16777216), (15, 8388608), (16, 524288), (17, 67108864), (18, 33554432), (19, 1114112), (20, -1), (21, -1), (22, 262144), (23, 134217728), (24, 536870912), (25, -1), (26, -1), (27, 4194304), (28, -1), (29, 1048576), (30, 2097152), (31, 16384), (32, -1), (33, 16384), (34, -1), (35, -1), (36, -1), (37, 16384), (38, 268435456), (39, 4194304), (40, -1), (41, 134217728), (42, 524288), (43, 524288), (44, -1), (45, -1), (46, -1), (47, 67108864), (48, 16777216), (49, 67108864), (50, -1), (51, -1), (52, -1)]

Covered at level 9 : set()

After reduction : 
 pending  : [23, 38, 5, 29, 31, 37, 42, 43, 47, 48, 49, 41, 7, 24, 30, 33, 27, 39, 3, 19, 16, 22, 15, 18, 14, 17]
 solution : [9, 26]


Solution : [9, 26] has cost 10.


Decide in level 9 among pending : [23, 38, 5, 29, 31, 37, 42, 43, 47, 48, 49, 41, 7, 24, 30, 33, 27, 39, 3, 19, 16, 22, 15, 18, 14, 17]

Coverage : [(0, -1), (1, -1), (2, -1), (3, 1048576), (4, -1), (5, 1048576), (6, -1), (7, 134217728), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 16777216), (15, 8388608), (16, 524288), (17, 67108864), (18, 33554432), (19, 1114112), (20, -1), (21, -1), (22, 262144), (23, 134217728), (24, 536870912), (25, -1), (26, -1), (27, 4194304), (28, -1), (29, 1048576), (30, 2097152), (31, 16384), (32, -1), (33, 16384), (34, -1), (35, -1), (36, -1), (37, 16384), (38, 268435456), (39, 4194304), (40, -1), (41, 134217728), (42, 524288), (43, 524288), (44, -1), (45, -1), (46, -1), (47, 67108864), (48, 16777216), (49, 67108864), (50, -1), (51, -1), (52, -1)]

Decide 24 with phase True at level 9

After decision at level 9
 pending : [23, 38, 5, 29, 31, 37, 42, 43, 47, 48, 49, 41, 7, 30, 33, 27, 39, 3, 19, 16, 22, 15, 18, 14, 17]
 solution : [9, 26, 24]


New level: 10
 pending : [23, 38, 5, 29, 31, 37, 42, 43, 47, 48, 49, 41, 7, 30, 33, 27, 39, 3, 19, 16, 22, 15, 18, 14, 17]
 solution : [9, 26, 24]


Before reduction : 
 pending  : [23, 38, 5, 29, 31, 37, 42, 43, 47, 48, 49, 41, 7, 30, 33, 27, 39, 3, 19, 16, 22, 15, 18, 14, 17]
 solution : [9, 26, 24]

Essensial at level 10 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 1048576), (4, -1), (5, 1048576), (6, -1), (7, 134217728), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 16777216), (15, 8388608), (16, 524288), (17, 67108864), (18, 33554432), (19, 1114112), (20, -1), (21, -1), (22, 262144), (23, 134217728), (24, 536870912), (25, -1), (26, -1), (27, 4194304), (28, -1), (29, 1048576), (30, 2097152), (31, 16384), (32, -1), (33, 16384), (34, -1), (35, -1), (36, -1), (37, 16384), (38, 268435456), (39, 4194304), (40, -1), (41, 134217728), (42, 524288), (43, 524288), (44, -1), (45, -1), (46, -1), (47, 67108864), (48, 16777216), (49, 67108864), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 1048576), (4, -1), (5, 262144), (6, -1), (7, 33554432), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 16777216), (15, 8388608), (16, 524288), (17, 67108864), (18, 33554432), (19, 1114112), (20, -1), (21, -1), (22, 262144), (23, 33554432), (24, -1), (25, -1), (26, -1), (27, 4194304), (28, -1), (29, 262144), (30, 0), (31, 4096), (32, -1), (33, 0), (34, -1), (35, -1), (36, -1), (37, 4096), (38, 134217728), (39, 4194304), (40, -1), (41, 67108864), (42, 131072), (43, 131072), (44, -1), (45, -1), (46, -1), (47, 16777216), (48, 4194304), (49, 33554432), (50, -1), (51, -1), (52, -1)]

Covered at level 10 : {33, 30}

After reduction : 
 pending  : [23, 38, 5, 29, 31, 37, 42, 43, 47, 48, 49, 41, 7, 27, 39, 3, 19, 16, 22, 15, 18, 14, 17]
 solution : [9, 26, 24]


Before reduction : 
 pending  : [23, 38, 5, 29, 31, 37, 42, 43, 47, 48, 49, 41, 7, 27, 39, 3, 19, 16, 22, 15, 18, 14, 17]
 solution : [9, 26, 24]

Essensial at level 10 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 1048576), (4, -1), (5, 262144), (6, -1), (7, 33554432), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 16777216), (15, 8388608), (16, 524288), (17, 67108864), (18, 33554432), (19, 1114112), (20, -1), (21, -1), (22, 262144), (23, 33554432), (24, -1), (25, -1), (26, -1), (27, 4194304), (28, -1), (29, 262144), (30, 0), (31, 4096), (32, -1), (33, 0), (34, -1), (35, -1), (36, -1), (37, 4096), (38, 134217728), (39, 4194304), (40, -1), (41, 67108864), (42, 131072), (43, 131072), (44, -1), (45, -1), (46, -1), (47, 16777216), (48, 4194304), (49, 33554432), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 1048576), (4, -1), (5, 262144), (6, -1), (7, 33554432), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 16777216), (15, 8388608), (16, 524288), (17, 67108864), (18, 33554432), (19, 1114112), (20, -1), (21, -1), (22, 262144), (23, 33554432), (24, -1), (25, -1), (26, -1), (27, 4194304), (28, -1), (29, 262144), (30, -1), (31, 4096), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, 4096), (38, 134217728), (39, 4194304), (40, -1), (41, 67108864), (42, 131072), (43, 131072), (44, -1), (45, -1), (46, -1), (47, 16777216), (48, 4194304), (49, 33554432), (50, -1), (51, -1), (52, -1)]

Covered at level 10 : set()

After reduction : 
 pending  : [23, 38, 5, 29, 31, 37, 42, 43, 47, 48, 49, 41, 7, 27, 39, 3, 19, 16, 22, 15, 18, 14, 17]
 solution : [9, 26, 24]


Solution : [9, 26, 24] has cost 17.


Before backtrack at level 10
 pending : [23, 38, 5, 29, 31, 37, 42, 43, 47, 48, 49, 41, 7, 27, 39, 3, 19, 16, 22, 15, 18, 14, 17]
 solution : [9, 26, 24]

After backtrack at level 10
 pending : [23, 38, 5, 29, 31, 37, 42, 43, 47, 48, 49, 41, 7, 27, 39, 3, 19, 16, 22, 15, 18, 14, 17, 30, 33]
 solution : [9, 26, 24]


Invert decision for 24 at level 9


New level: 10
 pending : [23, 38, 5, 29, 31, 37, 42, 43, 47, 48, 49, 41, 7, 27, 39, 3, 19, 16, 22, 15, 18, 14, 17, 30, 33]
 solution : [9, 26]


Before reduction : 
 pending  : [23, 38, 5, 29, 31, 37, 42, 43, 47, 48, 49, 41, 7, 27, 39, 3, 19, 16, 22, 15, 18, 14, 17, 30, 33]
 solution : [9, 26]

Essensial at level 10 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 1048576), (4, -1), (5, 262144), (6, -1), (7, 33554432), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 16777216), (15, 8388608), (16, 524288), (17, 67108864), (18, 33554432), (19, 1114112), (20, -1), (21, -1), (22, 262144), (23, 33554432), (24, -1), (25, -1), (26, -1), (27, 4194304), (28, -1), (29, 262144), (30, -1), (31, 4096), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, 4096), (38, 134217728), (39, 4194304), (40, -1), (41, 67108864), (42, 131072), (43, 131072), (44, -1), (45, -1), (46, -1), (47, 16777216), (48, 4194304), (49, 33554432), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 1048576), (4, -1), (5, 1048576), (6, -1), (7, 134217728), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 16777216), (15, 8388608), (16, 524288), (17, 67108864), (18, 33554432), (19, 1114112), (20, -1), (21, -1), (22, 262144), (23, 134217728), (24, -1), (25, -1), (26, -1), (27, 4194304), (28, -1), (29, 1048576), (30, 2097152), (31, 16384), (32, -1), (33, 16384), (34, -1), (35, -1), (36, -1), (37, 16384), (38, 268435456), (39, 4194304), (40, -1), (41, 134217728), (42, 524288), (43, 524288), (44, -1), (45, -1), (46, -1), (47, 67108864), (48, 16777216), (49, 67108864), (50, -1), (51, -1), (52, -1)]

Covered at level 10 : set()

After reduction : 
 pending  : [23, 38, 5, 29, 31, 37, 42, 43, 47, 48, 49, 41, 7, 27, 39, 3, 19, 16, 22, 15, 18, 14, 17, 30, 33]
 solution : [9, 26]


Solution : [9, 26] has cost 10.


Decide in level 10 among pending : [23, 38, 5, 29, 31, 37, 42, 43, 47, 48, 49, 41, 7, 27, 39, 3, 19, 16, 22, 15, 18, 14, 17, 30, 33]

Coverage : [(0, -1), (1, -1), (2, -1), (3, 1048576), (4, -1), (5, 1048576), (6, -1), (7, 134217728), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 16777216), (15, 8388608), (16, 524288), (17, 67108864), (18, 33554432), (19, 1114112), (20, -1), (21, -1), (22, 262144), (23, 134217728), (24, -1), (25, -1), (26, -1), (27, 4194304), (28, -1), (29, 1048576), (30, 2097152), (31, 16384), (32, -1), (33, 16384), (34, -1), (35, -1), (36, -1), (37, 16384), (38, 268435456), (39, 4194304), (40, -1), (41, 134217728), (42, 524288), (43, 524288), (44, -1), (45, -1), (46, -1), (47, 67108864), (48, 16777216), (49, 67108864), (50, -1), (51, -1), (52, -1)]

Decide 38 with phase True at level 10

After decision at level 10
 pending : [23, 5, 29, 31, 37, 42, 43, 47, 48, 49, 41, 7, 27, 39, 3, 19, 16, 22, 15, 18, 14, 17, 30, 33]
 solution : [9, 26, 38]


New level: 11
 pending : [23, 5, 29, 31, 37, 42, 43, 47, 48, 49, 41, 7, 27, 39, 3, 19, 16, 22, 15, 18, 14, 17, 30, 33]
 solution : [9, 26, 38]


Before reduction : 
 pending  : [23, 5, 29, 31, 37, 42, 43, 47, 48, 49, 41, 7, 27, 39, 3, 19, 16, 22, 15, 18, 14, 17, 30, 33]
 solution : [9, 26, 38]

Essensial at level 11 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 1048576), (4, -1), (5, 1048576), (6, -1), (7, 134217728), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 16777216), (15, 8388608), (16, 524288), (17, 67108864), (18, 33554432), (19, 1114112), (20, -1), (21, -1), (22, 262144), (23, 134217728), (24, -1), (25, -1), (26, -1), (27, 4194304), (28, -1), (29, 1048576), (30, 2097152), (31, 16384), (32, -1), (33, 16384), (34, -1), (35, -1), (36, -1), (37, 16384), (38, 268435456), (39, 4194304), (40, -1), (41, 134217728), (42, 524288), (43, 524288), (44, -1), (45, -1), (46, -1), (47, 67108864), (48, 16777216), (49, 67108864), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 524288), (4, -1), (5, 262144), (6, -1), (7, 33554432), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 16777216), (15, 8388608), (16, 262144), (17, 33554432), (18, 16777216), (19, 540672), (20, -1), (21, -1), (22, 262144), (23, 33554432), (24, -1), (25, -1), (26, -1), (27, 1048576), (28, -1), (29, 262144), (30, 2097152), (31, 4096), (32, -1), (33, 4096), (34, -1), (35, -1), (36, -1), (37, 4096), (38, -1), (39, 1048576), (40, -1), (41, 134217728), (42, 131072), (43, 131072), (44, -1), (45, -1), (46, -1), (47, 33554432), (48, 4194304), (49, 67108864), (50, -1), (51, -1), (52, -1)]

Covered at level 11 : set()

After reduction : 
 pending  : [23, 5, 29, 31, 37, 42, 43, 47, 48, 49, 41, 7, 27, 39, 3, 19, 16, 22, 15, 18, 14, 17, 30, 33]
 solution : [9, 26, 38]


Solution : [9, 26, 38] has cost 28.


Before backtrack at level 11
 pending : [23, 5, 29, 31, 37, 42, 43, 47, 48, 49, 41, 7, 27, 39, 3, 19, 16, 22, 15, 18, 14, 17, 30, 33]
 solution : [9, 26, 38]

After backtrack at level 11
 pending : [23, 5, 29, 31, 37, 42, 43, 47, 48, 49, 41, 7, 27, 39, 3, 19, 16, 22, 15, 18, 14, 17, 30, 33]
 solution : [9, 26, 38]


Invert decision for 38 at level 10


New level: 11
 pending : [23, 5, 29, 31, 37, 42, 43, 47, 48, 49, 41, 7, 27, 39, 3, 19, 16, 22, 15, 18, 14, 17, 30, 33]
 solution : [9, 26]


Before reduction : 
 pending  : [23, 5, 29, 31, 37, 42, 43, 47, 48, 49, 41, 7, 27, 39, 3, 19, 16, 22, 15, 18, 14, 17, 30, 33]
 solution : [9, 26]

Essensial at level 11 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 524288), (4, -1), (5, 262144), (6, -1), (7, 33554432), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 16777216), (15, 8388608), (16, 262144), (17, 33554432), (18, 16777216), (19, 540672), (20, -1), (21, -1), (22, 262144), (23, 33554432), (24, -1), (25, -1), (26, -1), (27, 1048576), (28, -1), (29, 262144), (30, 2097152), (31, 4096), (32, -1), (33, 4096), (34, -1), (35, -1), (36, -1), (37, 4096), (38, -1), (39, 1048576), (40, -1), (41, 134217728), (42, 131072), (43, 131072), (44, -1), (45, -1), (46, -1), (47, 33554432), (48, 4194304), (49, 67108864), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 1048576), (4, -1), (5, 1048576), (6, -1), (7, 134217728), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 16777216), (15, 8388608), (16, 524288), (17, 67108864), (18, 33554432), (19, 1114112), (20, -1), (21, -1), (22, 262144), (23, 134217728), (24, -1), (25, -1), (26, -1), (27, 4194304), (28, -1), (29, 1048576), (30, 2097152), (31, 16384), (32, -1), (33, 16384), (34, -1), (35, -1), (36, -1), (37, 16384), (38, -1), (39, 4194304), (40, -1), (41, 134217728), (42, 524288), (43, 524288), (44, -1), (45, -1), (46, -1), (47, 67108864), (48, 16777216), (49, 67108864), (50, -1), (51, -1), (52, -1)]

Covered at level 11 : set()

After reduction : 
 pending  : [23, 5, 29, 31, 37, 42, 43, 47, 48, 49, 41, 7, 27, 39, 3, 19, 16, 22, 15, 18, 14, 17, 30, 33]
 solution : [9, 26]


Solution : [9, 26] has cost 10.


Decide in level 11 among pending : [23, 5, 29, 31, 37, 42, 43, 47, 48, 49, 41, 7, 27, 39, 3, 19, 16, 22, 15, 18, 14, 17, 30, 33]

Coverage : [(0, -1), (1, -1), (2, -1), (3, 1048576), (4, -1), (5, 1048576), (6, -1), (7, 134217728), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 16777216), (15, 8388608), (16, 524288), (17, 67108864), (18, 33554432), (19, 1114112), (20, -1), (21, -1), (22, 262144), (23, 134217728), (24, -1), (25, -1), (26, -1), (27, 4194304), (28, -1), (29, 1048576), (30, 2097152), (31, 16384), (32, -1), (33, 16384), (34, -1), (35, -1), (36, -1), (37, 16384), (38, -1), (39, 4194304), (40, -1), (41, 134217728), (42, 524288), (43, 524288), (44, -1), (45, -1), (46, -1), (47, 67108864), (48, 16777216), (49, 67108864), (50, -1), (51, -1), (52, -1)]

Decide 23 with phase True at level 11

After decision at level 11
 pending : [5, 29, 31, 37, 42, 43, 47, 48, 49, 41, 7, 27, 39, 3, 19, 16, 22, 15, 18, 14, 17, 30, 33]
 solution : [9, 26, 23]


New level: 12
 pending : [5, 29, 31, 37, 42, 43, 47, 48, 49, 41, 7, 27, 39, 3, 19, 16, 22, 15, 18, 14, 17, 30, 33]
 solution : [9, 26, 23]


Before reduction : 
 pending  : [5, 29, 31, 37, 42, 43, 47, 48, 49, 41, 7, 27, 39, 3, 19, 16, 22, 15, 18, 14, 17, 30, 33]
 solution : [9, 26, 23]

Essensial at level 12 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 1048576), (4, -1), (5, 1048576), (6, -1), (7, 134217728), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 16777216), (15, 8388608), (16, 524288), (17, 67108864), (18, 33554432), (19, 1114112), (20, -1), (21, -1), (22, 262144), (23, 134217728), (24, -1), (25, -1), (26, -1), (27, 4194304), (28, -1), (29, 1048576), (30, 2097152), (31, 16384), (32, -1), (33, 16384), (34, -1), (35, -1), (36, -1), (37, 16384), (38, -1), (39, 4194304), (40, -1), (41, 134217728), (42, 524288), (43, 524288), (44, -1), (45, -1), (46, -1), (47, 67108864), (48, 16777216), (49, 67108864), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 524288), (4, -1), (5, 0), (6, -1), (7, 0), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 16777216), (15, 8388608), (16, 262144), (17, 33554432), (18, 16777216), (19, 540672), (20, -1), (21, -1), (22, 262144), (23, -1), (24, -1), (25, -1), (26, -1), (27, 2097152), (28, -1), (29, 0), (30, 0), (31, 0), (32, -1), (33, 0), (34, -1), (35, -1), (36, -1), (37, 0), (38, -1), (39, 2097152), (40, -1), (41, 0), (42, 0), (43, 0), (44, -1), (45, -1), (46, -1), (47, 0), (48, 0), (49, 0), (50, -1), (51, -1), (52, -1)]

Covered at level 12 : {33, 37, 5, 7, 41, 42, 43, 47, 48, 49, 29, 30, 31}

After reduction : 
 pending  : [27, 39, 3, 19, 16, 22, 15, 18, 14, 17]
 solution : [9, 26, 23]


Before reduction : 
 pending  : [27, 39, 3, 19, 16, 22, 15, 18, 14, 17]
 solution : [9, 26, 23]

Essensial at level 12 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 524288), (4, -1), (5, 0), (6, -1), (7, 0), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 16777216), (15, 8388608), (16, 262144), (17, 33554432), (18, 16777216), (19, 540672), (20, -1), (21, -1), (22, 262144), (23, -1), (24, -1), (25, -1), (26, -1), (27, 2097152), (28, -1), (29, 0), (30, 0), (31, 0), (32, -1), (33, 0), (34, -1), (35, -1), (36, -1), (37, 0), (38, -1), (39, 2097152), (40, -1), (41, 0), (42, 0), (43, 0), (44, -1), (45, -1), (46, -1), (47, 0), (48, 0), (49, 0), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 524288), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 16777216), (15, 8388608), (16, 262144), (17, 33554432), (18, 16777216), (19, 540672), (20, -1), (21, -1), (22, 262144), (23, -1), (24, -1), (25, -1), (26, -1), (27, 2097152), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, 2097152), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 12 : set()

After reduction : 
 pending  : [27, 39, 3, 19, 16, 22, 15, 18, 14, 17]
 solution : [9, 26, 23]


Solution : [9, 26, 23] has cost 17.


Before backtrack at level 12
 pending : [27, 39, 3, 19, 16, 22, 15, 18, 14, 17]
 solution : [9, 26, 23]

After backtrack at level 12
 pending : [27, 39, 3, 19, 16, 22, 15, 18, 14, 17, 5, 29, 31, 37, 42, 43, 47, 48, 49, 41, 7, 30, 33]
 solution : [9, 26, 23]


Invert decision for 23 at level 11


New level: 12
 pending : [27, 39, 3, 19, 16, 22, 15, 18, 14, 17, 5, 29, 31, 37, 42, 43, 47, 48, 49, 41, 7, 30, 33]
 solution : [9, 26]


Before reduction : 
 pending  : [27, 39, 3, 19, 16, 22, 15, 18, 14, 17, 5, 29, 31, 37, 42, 43, 47, 48, 49, 41, 7, 30, 33]
 solution : [9, 26]

Essensial at level 12 : {7}

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 524288), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 16777216), (15, 8388608), (16, 262144), (17, 33554432), (18, 16777216), (19, 540672), (20, -1), (21, -1), (22, 262144), (23, -1), (24, -1), (25, -1), (26, -1), (27, 2097152), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, 2097152), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 524288), (4, -1), (5, 0), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 16777216), (15, 8388608), (16, 262144), (17, 33554432), (18, 16777216), (19, 540672), (20, -1), (21, -1), (22, 262144), (23, -1), (24, -1), (25, -1), (26, -1), (27, 2097152), (28, -1), (29, 0), (30, 0), (31, 0), (32, -1), (33, 0), (34, -1), (35, -1), (36, -1), (37, 0), (38, -1), (39, 2097152), (40, -1), (41, 0), (42, 0), (43, 0), (44, -1), (45, -1), (46, -1), (47, 0), (48, 0), (49, 0), (50, -1), (51, -1), (52, -1)]

Covered at level 12 : {33, 37, 5, 41, 42, 43, 47, 48, 49, 29, 30, 31}

After reduction : 
 pending  : [27, 39, 3, 19, 16, 22, 15, 18, 14, 17]
 solution : [9, 26, 7]


Before reduction : 
 pending  : [27, 39, 3, 19, 16, 22, 15, 18, 14, 17]
 solution : [9, 26, 7]

Essensial at level 12 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 524288), (4, -1), (5, 0), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 16777216), (15, 8388608), (16, 262144), (17, 33554432), (18, 16777216), (19, 540672), (20, -1), (21, -1), (22, 262144), (23, -1), (24, -1), (25, -1), (26, -1), (27, 2097152), (28, -1), (29, 0), (30, 0), (31, 0), (32, -1), (33, 0), (34, -1), (35, -1), (36, -1), (37, 0), (38, -1), (39, 2097152), (40, -1), (41, 0), (42, 0), (43, 0), (44, -1), (45, -1), (46, -1), (47, 0), (48, 0), (49, 0), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 524288), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 16777216), (15, 8388608), (16, 262144), (17, 33554432), (18, 16777216), (19, 540672), (20, -1), (21, -1), (22, 262144), (23, -1), (24, -1), (25, -1), (26, -1), (27, 2097152), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, 2097152), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 12 : set()

After reduction : 
 pending  : [27, 39, 3, 19, 16, 22, 15, 18, 14, 17]
 solution : [9, 26, 7]


Solution : [9, 26, 7] has cost 14.


Decide in level 12 among pending : [27, 39, 3, 19, 16, 22, 15, 18, 14, 17]

Coverage : [(0, -1), (1, -1), (2, -1), (3, 524288), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 16777216), (15, 8388608), (16, 262144), (17, 33554432), (18, 16777216), (19, 540672), (20, -1), (21, -1), (22, 262144), (23, -1), (24, -1), (25, -1), (26, -1), (27, 2097152), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, 2097152), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Decide 17 with phase True at level 12

After decision at level 12
 pending : [27, 39, 3, 19, 16, 22, 15, 18, 14]
 solution : [9, 26, 7, 17]


New level: 13
 pending : [27, 39, 3, 19, 16, 22, 15, 18, 14]
 solution : [9, 26, 7, 17]


Before reduction : 
 pending  : [27, 39, 3, 19, 16, 22, 15, 18, 14]
 solution : [9, 26, 7, 17]

Essensial at level 13 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 524288), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 16777216), (15, 8388608), (16, 262144), (17, 33554432), (18, 16777216), (19, 540672), (20, -1), (21, -1), (22, 262144), (23, -1), (24, -1), (25, -1), (26, -1), (27, 2097152), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, 2097152), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 0), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 262144), (15, 65536), (16, 0), (17, -1), (18, 0), (19, 0), (20, -1), (21, -1), (22, 65536), (23, -1), (24, -1), (25, -1), (26, -1), (27, 2048), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, 2048), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 13 : {19, 16, 18, 3}

After reduction : 
 pending  : [27, 39, 22, 15, 14]
 solution : [9, 26, 7, 17]


Before reduction : 
 pending  : [27, 39, 22, 15, 14]
 solution : [9, 26, 7, 17]

Essensial at level 13 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 0), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 262144), (15, 65536), (16, 0), (17, -1), (18, 0), (19, 0), (20, -1), (21, -1), (22, 65536), (23, -1), (24, -1), (25, -1), (26, -1), (27, 2048), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, 2048), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 262144), (15, 65536), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, 65536), (23, -1), (24, -1), (25, -1), (26, -1), (27, 2048), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, 2048), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 13 : set()

After reduction : 
 pending  : [27, 39, 22, 15, 14]
 solution : [9, 26, 7, 17]


Solution : [9, 26, 7, 17] has cost 23.


Before backtrack at level 13
 pending : [27, 39, 22, 15, 14]
 solution : [9, 26, 7, 17]

After backtrack at level 13
 pending : [27, 39, 22, 15, 14, 3, 19, 16, 18]
 solution : [9, 26, 7, 17]


Invert decision for 17 at level 12


New level: 13
 pending : [27, 39, 22, 15, 14, 3, 19, 16, 18]
 solution : [9, 26, 7]


Before reduction : 
 pending  : [27, 39, 22, 15, 14, 3, 19, 16, 18]
 solution : [9, 26, 7]

Essensial at level 13 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 262144), (15, 65536), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, 65536), (23, -1), (24, -1), (25, -1), (26, -1), (27, 2048), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, 2048), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 524288), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 16777216), (15, 8388608), (16, 262144), (17, -1), (18, 16777216), (19, 540672), (20, -1), (21, -1), (22, 262144), (23, -1), (24, -1), (25, -1), (26, -1), (27, 2097152), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, 2097152), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 13 : set()

After reduction : 
 pending  : [27, 39, 22, 15, 14, 3, 19, 16, 18]
 solution : [9, 26, 7]


Solution : [9, 26, 7] has cost 14.


Decide in level 13 among pending : [27, 39, 22, 15, 14, 3, 19, 16, 18]

Coverage : [(0, -1), (1, -1), (2, -1), (3, 524288), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 16777216), (15, 8388608), (16, 262144), (17, -1), (18, 16777216), (19, 540672), (20, -1), (21, -1), (22, 262144), (23, -1), (24, -1), (25, -1), (26, -1), (27, 2097152), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, 2097152), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Decide 14 with phase True at level 13

After decision at level 13
 pending : [27, 39, 22, 15, 3, 19, 16, 18]
 solution : [9, 26, 7, 14]


New level: 14
 pending : [27, 39, 22, 15, 3, 19, 16, 18]
 solution : [9, 26, 7, 14]


Before reduction : 
 pending  : [27, 39, 22, 15, 3, 19, 16, 18]
 solution : [9, 26, 7, 14]

Essensial at level 14 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 524288), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 16777216), (15, 8388608), (16, 262144), (17, -1), (18, 16777216), (19, 540672), (20, -1), (21, -1), (22, 262144), (23, -1), (24, -1), (25, -1), (26, -1), (27, 2097152), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, 2097152), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 262144), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, 0), (16, 0), (17, -1), (18, 4194304), (19, 264192), (20, -1), (21, -1), (22, 0), (23, -1), (24, -1), (25, -1), (26, -1), (27, 524288), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, 524288), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 14 : {16, 22, 15}

After reduction : 
 pending  : [27, 39, 3, 19, 18]
 solution : [9, 26, 7, 14]


Before reduction : 
 pending  : [27, 39, 3, 19, 18]
 solution : [9, 26, 7, 14]

Essensial at level 14 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 262144), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, 0), (16, 0), (17, -1), (18, 4194304), (19, 264192), (20, -1), (21, -1), (22, 0), (23, -1), (24, -1), (25, -1), (26, -1), (27, 524288), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, 524288), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 262144), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, 4194304), (19, 264192), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, 524288), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, 524288), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 14 : set()

After reduction : 
 pending  : [27, 39, 3, 19, 18]
 solution : [9, 26, 7, 14]


Solution : [9, 26, 7, 14] has cost 21.


Before backtrack at level 14
 pending : [27, 39, 3, 19, 18]
 solution : [9, 26, 7, 14]

After backtrack at level 14
 pending : [27, 39, 3, 19, 18, 22, 15, 16]
 solution : [9, 26, 7, 14]


Invert decision for 14 at level 13


New level: 14
 pending : [27, 39, 3, 19, 18, 22, 15, 16]
 solution : [9, 26, 7]


Before reduction : 
 pending  : [27, 39, 3, 19, 18, 22, 15, 16]
 solution : [9, 26, 7]

Essensial at level 14 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 262144), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, 4194304), (19, 264192), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, 524288), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, 524288), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 524288), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, 8388608), (16, 262144), (17, -1), (18, 16777216), (19, 540672), (20, -1), (21, -1), (22, 262144), (23, -1), (24, -1), (25, -1), (26, -1), (27, 2097152), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, 2097152), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 14 : set()

After reduction : 
 pending  : [27, 39, 3, 19, 18, 22, 15, 16]
 solution : [9, 26, 7]


Solution : [9, 26, 7] has cost 14.


Decide in level 14 among pending : [27, 39, 3, 19, 18, 22, 15, 16]

Coverage : [(0, -1), (1, -1), (2, -1), (3, 524288), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, 8388608), (16, 262144), (17, -1), (18, 16777216), (19, 540672), (20, -1), (21, -1), (22, 262144), (23, -1), (24, -1), (25, -1), (26, -1), (27, 2097152), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, 2097152), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Decide 18 with phase True at level 14

After decision at level 14
 pending : [27, 39, 3, 19, 22, 15, 16]
 solution : [9, 26, 7, 18]


New level: 15
 pending : [27, 39, 3, 19, 22, 15, 16]
 solution : [9, 26, 7, 18]


Before reduction : 
 pending  : [27, 39, 3, 19, 22, 15, 16]
 solution : [9, 26, 7, 18]

Essensial at level 15 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 524288), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, 8388608), (16, 262144), (17, -1), (18, 16777216), (19, 540672), (20, -1), (21, -1), (22, 262144), (23, -1), (24, -1), (25, -1), (26, -1), (27, 2097152), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, 2097152), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 0), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, 65536), (16, 0), (17, -1), (18, -1), (19, 0), (20, -1), (21, -1), (22, 65536), (23, -1), (24, -1), (25, -1), (26, -1), (27, 2048), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, 2048), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 15 : {19, 16, 3}

After reduction : 
 pending  : [27, 39, 22, 15]
 solution : [9, 26, 7, 18]


Before reduction : 
 pending  : [27, 39, 22, 15]
 solution : [9, 26, 7, 18]

Essensial at level 15 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 0), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, 65536), (16, 0), (17, -1), (18, -1), (19, 0), (20, -1), (21, -1), (22, 65536), (23, -1), (24, -1), (25, -1), (26, -1), (27, 2048), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, 2048), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, 65536), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, 65536), (23, -1), (24, -1), (25, -1), (26, -1), (27, 2048), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, 2048), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 15 : set()

After reduction : 
 pending  : [27, 39, 22, 15]
 solution : [9, 26, 7, 18]


Solution : [9, 26, 7, 18] has cost 23.


Before backtrack at level 15
 pending : [27, 39, 22, 15]
 solution : [9, 26, 7, 18]

After backtrack at level 15
 pending : [27, 39, 22, 15, 3, 19, 16]
 solution : [9, 26, 7, 18]


Invert decision for 18 at level 14


New level: 15
 pending : [27, 39, 22, 15, 3, 19, 16]
 solution : [9, 26, 7]


Before reduction : 
 pending  : [27, 39, 22, 15, 3, 19, 16]
 solution : [9, 26, 7]

Essensial at level 15 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, 65536), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, 65536), (23, -1), (24, -1), (25, -1), (26, -1), (27, 2048), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, 2048), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 524288), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, 8388608), (16, 262144), (17, -1), (18, -1), (19, 540672), (20, -1), (21, -1), (22, 262144), (23, -1), (24, -1), (25, -1), (26, -1), (27, 2097152), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, 2097152), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 15 : set()

After reduction : 
 pending  : [27, 39, 22, 15, 3, 19, 16]
 solution : [9, 26, 7]


Solution : [9, 26, 7] has cost 14.


Decide in level 15 among pending : [27, 39, 22, 15, 3, 19, 16]

Coverage : [(0, -1), (1, -1), (2, -1), (3, 524288), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, 8388608), (16, 262144), (17, -1), (18, -1), (19, 540672), (20, -1), (21, -1), (22, 262144), (23, -1), (24, -1), (25, -1), (26, -1), (27, 2097152), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, 2097152), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Decide 15 with phase True at level 15

After decision at level 15
 pending : [27, 39, 22, 3, 19, 16]
 solution : [9, 26, 7, 15]


New level: 16
 pending : [27, 39, 22, 3, 19, 16]
 solution : [9, 26, 7, 15]


Before reduction : 
 pending  : [27, 39, 22, 3, 19, 16]
 solution : [9, 26, 7, 15]

Essensial at level 16 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 524288), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, 8388608), (16, 262144), (17, -1), (18, -1), (19, 540672), (20, -1), (21, -1), (22, 262144), (23, -1), (24, -1), (25, -1), (26, -1), (27, 2097152), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, 2097152), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 262144), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, 0), (17, -1), (18, -1), (19, 264192), (20, -1), (21, -1), (22, 0), (23, -1), (24, -1), (25, -1), (26, -1), (27, 524288), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, 524288), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 16 : {16, 22}

After reduction : 
 pending  : [27, 39, 3, 19]
 solution : [9, 26, 7, 15]


Before reduction : 
 pending  : [27, 39, 3, 19]
 solution : [9, 26, 7, 15]

Essensial at level 16 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 262144), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, 0), (17, -1), (18, -1), (19, 264192), (20, -1), (21, -1), (22, 0), (23, -1), (24, -1), (25, -1), (26, -1), (27, 524288), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, 524288), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 262144), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, 264192), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, 524288), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, 524288), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 16 : set()

After reduction : 
 pending  : [27, 39, 3, 19]
 solution : [9, 26, 7, 15]


Solution : [9, 26, 7, 15] has cost 21.


Before backtrack at level 16
 pending : [27, 39, 3, 19]
 solution : [9, 26, 7, 15]

After backtrack at level 16
 pending : [27, 39, 3, 19, 22, 16]
 solution : [9, 26, 7, 15]


Invert decision for 15 at level 15


New level: 16
 pending : [27, 39, 3, 19, 22, 16]
 solution : [9, 26, 7]


Before reduction : 
 pending  : [27, 39, 3, 19, 22, 16]
 solution : [9, 26, 7]

Essensial at level 16 : {22}

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 262144), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, 264192), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, 524288), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, 524288), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 524288), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, 131072), (17, -1), (18, -1), (19, 540672), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, 2097152), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, 2097152), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 16 : set()

After reduction : 
 pending  : [27, 39, 3, 19, 16]
 solution : [9, 26, 7, 22]


Before reduction : 
 pending  : [27, 39, 3, 19, 16]
 solution : [9, 26, 7, 22]

Essensial at level 16 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 524288), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, 131072), (17, -1), (18, -1), (19, 540672), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, 2097152), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, 2097152), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 524288), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, 131072), (17, -1), (18, -1), (19, 540672), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, 2097152), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, 2097152), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 16 : set()

After reduction : 
 pending  : [27, 39, 3, 19, 16]
 solution : [9, 26, 7, 22]


Solution : [9, 26, 7, 22] has cost 21.


Before backtrack at level 16
 pending : [27, 39, 3, 19, 16]
 solution : [9, 26, 7, 22]

After backtrack at level 16
 pending : [27, 39, 3, 19, 16, 22]
 solution : [9, 26, 7]


Before backtrack at level 15
 pending : [27, 39, 3, 19, 16, 22]
 solution : [9, 26, 7]

After backtrack at level 15
 pending : [27, 39, 3, 19, 16, 22, 15]
 solution : [9, 26, 7]


Before backtrack at level 14
 pending : [27, 39, 3, 19, 16, 22, 15]
 solution : [9, 26, 7]

After backtrack at level 14
 pending : [27, 39, 3, 19, 16, 22, 15, 18]
 solution : [9, 26, 7]


Before backtrack at level 13
 pending : [27, 39, 3, 19, 16, 22, 15, 18]
 solution : [9, 26, 7]

After backtrack at level 13
 pending : [27, 39, 3, 19, 16, 22, 15, 18, 14]
 solution : [9, 26, 7]


Before backtrack at level 12
 pending : [27, 39, 3, 19, 16, 22, 15, 18, 14]
 solution : [9, 26, 7]

After backtrack at level 12
 pending : [27, 39, 3, 19, 16, 22, 15, 18, 14, 7, 5, 29, 31, 37, 42, 43, 47, 48, 49, 41, 30, 33, 17]
 solution : [9, 26]


Before backtrack at level 11
 pending : [27, 39, 3, 19, 16, 22, 15, 18, 14, 7, 5, 29, 31, 37, 42, 43, 47, 48, 49, 41, 30, 33, 17]
 solution : [9, 26]

After backtrack at level 11
 pending : [27, 39, 3, 19, 16, 22, 15, 18, 14, 7, 5, 29, 31, 37, 42, 43, 47, 48, 49, 41, 30, 33, 17, 23]
 solution : [9, 26]


Before backtrack at level 10
 pending : [27, 39, 3, 19, 16, 22, 15, 18, 14, 7, 5, 29, 31, 37, 42, 43, 47, 48, 49, 41, 30, 33, 17, 23]
 solution : [9, 26]

After backtrack at level 10
 pending : [27, 39, 3, 19, 16, 22, 15, 18, 14, 7, 5, 29, 31, 37, 42, 43, 47, 48, 49, 41, 30, 33, 17, 23, 38]
 solution : [9, 26]


Before backtrack at level 9
 pending : [27, 39, 3, 19, 16, 22, 15, 18, 14, 7, 5, 29, 31, 37, 42, 43, 47, 48, 49, 41, 30, 33, 17, 23, 38]
 solution : [9, 26]

After backtrack at level 9
 pending : [27, 39, 3, 19, 16, 22, 15, 18, 14, 7, 5, 29, 31, 37, 42, 43, 47, 48, 49, 41, 30, 33, 17, 23, 38, 24]
 solution : [9, 26]


Before backtrack at level 8
 pending : [27, 39, 3, 19, 16, 22, 15, 18, 14, 7, 5, 29, 31, 37, 42, 43, 47, 48, 49, 41, 30, 33, 17, 23, 38, 24]
 solution : [9, 26]

After backtrack at level 8
 pending : [27, 39, 3, 19, 16, 22, 15, 18, 14, 7, 5, 29, 31, 37, 42, 43, 47, 48, 49, 41, 30, 33, 17, 23, 38, 24, 40]
 solution : [9, 26]


Before backtrack at level 7
 pending : [27, 39, 3, 19, 16, 22, 15, 18, 14, 7, 5, 29, 31, 37, 42, 43, 47, 48, 49, 41, 30, 33, 17, 23, 38, 24, 40]
 solution : [9, 26]

After backtrack at level 7
 pending : [27, 39, 3, 19, 16, 22, 15, 18, 14, 7, 5, 29, 31, 37, 42, 43, 47, 48, 49, 41, 30, 33, 17, 23, 38, 24, 40, 21]
 solution : [9, 26]


Before backtrack at level 6
 pending : [27, 39, 3, 19, 16, 22, 15, 18, 14, 7, 5, 29, 31, 37, 42, 43, 47, 48, 49, 41, 30, 33, 17, 23, 38, 24, 40, 21]
 solution : [9, 26]

After backtrack at level 6
 pending : [27, 39, 3, 19, 16, 22, 15, 18, 14, 7, 5, 29, 31, 37, 42, 43, 47, 48, 49, 41, 30, 33, 17, 23, 38, 24, 40, 21, 32]
 solution : [9, 26]


Before backtrack at level 5
 pending : [27, 39, 3, 19, 16, 22, 15, 18, 14, 7, 5, 29, 31, 37, 42, 43, 47, 48, 49, 41, 30, 33, 17, 23, 38, 24, 40, 21, 32]
 solution : [9, 26]

After backtrack at level 5
 pending : [27, 39, 3, 19, 16, 22, 15, 18, 14, 7, 5, 29, 31, 37, 42, 43, 47, 48, 49, 41, 30, 33, 17, 23, 38, 24, 40, 21, 32, 13]
 solution : [9, 26]


Invert decision for 26 at level 4


New level: 5
 pending : [27, 39, 3, 19, 16, 22, 15, 18, 14, 7, 5, 29, 31, 37, 42, 43, 47, 48, 49, 41, 30, 33, 17, 23, 38, 24, 40, 21, 32, 13]
 solution : [9]


Before reduction : 
 pending  : [27, 39, 3, 19, 16, 22, 15, 18, 14, 7, 5, 29, 31, 37, 42, 43, 47, 48, 49, 41, 30, 33, 17, 23, 38, 24, 40, 21, 32, 13]
 solution : [9]

Essensial at level 5 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 524288), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, 131072), (17, -1), (18, -1), (19, 540672), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, 2097152), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, 2097152), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 1048576), (4, -1), (5, 1048576), (6, -1), (7, 134217728), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, 2147483648), (14, 16777216), (15, 8388608), (16, 524288), (17, 67108864), (18, 33554432), (19, 1114112), (20, -1), (21, 1073741824), (22, 262144), (23, 134217728), (24, 1073741824), (25, -1), (26, -1), (27, 4194304), (28, -1), (29, 1048576), (30, 4194304), (31, 16384), (32, 2147483648), (33, 32768), (34, -1), (35, -1), (36, -1), (37, 16384), (38, 268435456), (39, 4194304), (40, 1073741824), (41, 134217728), (42, 524288), (43, 524288), (44, -1), (45, -1), (46, -1), (47, 67108864), (48, 16777216), (49, 67108864), (50, -1), (51, -1), (52, -1)]

Covered at level 5 : set()

After reduction : 
 pending  : [27, 39, 3, 19, 16, 22, 15, 18, 14, 7, 5, 29, 31, 37, 42, 43, 47, 48, 49, 41, 30, 33, 17, 23, 38, 24, 40, 21, 32, 13]
 solution : [9]


Solution : [9] has cost 6.


Decide in level 5 among pending : [27, 39, 3, 19, 16, 22, 15, 18, 14, 7, 5, 29, 31, 37, 42, 43, 47, 48, 49, 41, 30, 33, 17, 23, 38, 24, 40, 21, 32, 13]

Coverage : [(0, -1), (1, -1), (2, -1), (3, 1048576), (4, -1), (5, 1048576), (6, -1), (7, 134217728), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, 2147483648), (14, 16777216), (15, 8388608), (16, 524288), (17, 67108864), (18, 33554432), (19, 1114112), (20, -1), (21, 1073741824), (22, 262144), (23, 134217728), (24, 1073741824), (25, -1), (26, -1), (27, 4194304), (28, -1), (29, 1048576), (30, 4194304), (31, 16384), (32, 2147483648), (33, 32768), (34, -1), (35, -1), (36, -1), (37, 16384), (38, 268435456), (39, 4194304), (40, 1073741824), (41, 134217728), (42, 524288), (43, 524288), (44, -1), (45, -1), (46, -1), (47, 67108864), (48, 16777216), (49, 67108864), (50, -1), (51, -1), (52, -1)]

Decide 32 with phase True at level 5

After decision at level 5
 pending : [27, 39, 3, 19, 16, 22, 15, 18, 14, 7, 5, 29, 31, 37, 42, 43, 47, 48, 49, 41, 30, 33, 17, 23, 38, 24, 40, 21, 13]
 solution : [9, 32]


New level: 6
 pending : [27, 39, 3, 19, 16, 22, 15, 18, 14, 7, 5, 29, 31, 37, 42, 43, 47, 48, 49, 41, 30, 33, 17, 23, 38, 24, 40, 21, 13]
 solution : [9, 32]


Before reduction : 
 pending  : [27, 39, 3, 19, 16, 22, 15, 18, 14, 7, 5, 29, 31, 37, 42, 43, 47, 48, 49, 41, 30, 33, 17, 23, 38, 24, 40, 21, 13]
 solution : [9, 32]

Essensial at level 6 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 1048576), (4, -1), (5, 1048576), (6, -1), (7, 134217728), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, 2147483648), (14, 16777216), (15, 8388608), (16, 524288), (17, 67108864), (18, 33554432), (19, 1114112), (20, -1), (21, 1073741824), (22, 262144), (23, 134217728), (24, 1073741824), (25, -1), (26, -1), (27, 4194304), (28, -1), (29, 1048576), (30, 4194304), (31, 16384), (32, 2147483648), (33, 32768), (34, -1), (35, -1), (36, -1), (37, 16384), (38, 268435456), (39, 4194304), (40, 1073741824), (41, 134217728), (42, 524288), (43, 524288), (44, -1), (45, -1), (46, -1), (47, 67108864), (48, 16777216), (49, 67108864), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 1048576), (4, -1), (5, 262144), (6, -1), (7, 134217728), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, 2147483648), (14, 16777216), (15, 8388608), (16, 524288), (17, 67108864), (18, 33554432), (19, 1114112), (20, -1), (21, 1073741824), (22, 262144), (23, 134217728), (24, 32768), (25, -1), (26, -1), (27, 4194304), (28, -1), (29, 262144), (30, 0), (31, 4096), (32, -1), (33, 0), (34, -1), (35, -1), (36, -1), (37, 4096), (38, 268435456), (39, 4194304), (40, 32768), (41, 33554432), (42, 131072), (43, 131072), (44, -1), (45, -1), (46, -1), (47, 16777216), (48, 4194304), (49, 16777216), (50, -1), (51, -1), (52, -1)]

Covered at level 6 : {33, 30}

After reduction : 
 pending  : [27, 39, 3, 19, 16, 22, 15, 18, 14, 7, 5, 29, 31, 37, 42, 43, 47, 48, 49, 41, 17, 23, 38, 24, 40, 21, 13]
 solution : [9, 32]


Before reduction : 
 pending  : [27, 39, 3, 19, 16, 22, 15, 18, 14, 7, 5, 29, 31, 37, 42, 43, 47, 48, 49, 41, 17, 23, 38, 24, 40, 21, 13]
 solution : [9, 32]

Essensial at level 6 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 1048576), (4, -1), (5, 262144), (6, -1), (7, 134217728), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, 2147483648), (14, 16777216), (15, 8388608), (16, 524288), (17, 67108864), (18, 33554432), (19, 1114112), (20, -1), (21, 1073741824), (22, 262144), (23, 134217728), (24, 32768), (25, -1), (26, -1), (27, 4194304), (28, -1), (29, 262144), (30, 0), (31, 4096), (32, -1), (33, 0), (34, -1), (35, -1), (36, -1), (37, 4096), (38, 268435456), (39, 4194304), (40, 32768), (41, 33554432), (42, 131072), (43, 131072), (44, -1), (45, -1), (46, -1), (47, 16777216), (48, 4194304), (49, 16777216), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 1048576), (4, -1), (5, 262144), (6, -1), (7, 134217728), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, 2147483648), (14, 16777216), (15, 8388608), (16, 524288), (17, 67108864), (18, 33554432), (19, 1114112), (20, -1), (21, 1073741824), (22, 262144), (23, 134217728), (24, 32768), (25, -1), (26, -1), (27, 4194304), (28, -1), (29, 262144), (30, -1), (31, 4096), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, 4096), (38, 268435456), (39, 4194304), (40, 32768), (41, 33554432), (42, 131072), (43, 131072), (44, -1), (45, -1), (46, -1), (47, 16777216), (48, 4194304), (49, 16777216), (50, -1), (51, -1), (52, -1)]

Covered at level 6 : set()

After reduction : 
 pending  : [27, 39, 3, 19, 16, 22, 15, 18, 14, 7, 5, 29, 31, 37, 42, 43, 47, 48, 49, 41, 17, 23, 38, 24, 40, 21, 13]
 solution : [9, 32]


Solution : [9, 32] has cost 19.


Before backtrack at level 6
 pending : [27, 39, 3, 19, 16, 22, 15, 18, 14, 7, 5, 29, 31, 37, 42, 43, 47, 48, 49, 41, 17, 23, 38, 24, 40, 21, 13]
 solution : [9, 32]

After backtrack at level 6
 pending : [27, 39, 3, 19, 16, 22, 15, 18, 14, 7, 5, 29, 31, 37, 42, 43, 47, 48, 49, 41, 17, 23, 38, 24, 40, 21, 13, 30, 33]
 solution : [9, 32]


Invert decision for 32 at level 5


New level: 6
 pending : [27, 39, 3, 19, 16, 22, 15, 18, 14, 7, 5, 29, 31, 37, 42, 43, 47, 48, 49, 41, 17, 23, 38, 24, 40, 21, 13, 30, 33]
 solution : [9]


Before reduction : 
 pending  : [27, 39, 3, 19, 16, 22, 15, 18, 14, 7, 5, 29, 31, 37, 42, 43, 47, 48, 49, 41, 17, 23, 38, 24, 40, 21, 13, 30, 33]
 solution : [9]

Essensial at level 6 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 1048576), (4, -1), (5, 262144), (6, -1), (7, 134217728), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, 2147483648), (14, 16777216), (15, 8388608), (16, 524288), (17, 67108864), (18, 33554432), (19, 1114112), (20, -1), (21, 1073741824), (22, 262144), (23, 134217728), (24, 32768), (25, -1), (26, -1), (27, 4194304), (28, -1), (29, 262144), (30, -1), (31, 4096), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, 4096), (38, 268435456), (39, 4194304), (40, 32768), (41, 33554432), (42, 131072), (43, 131072), (44, -1), (45, -1), (46, -1), (47, 16777216), (48, 4194304), (49, 16777216), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 1048576), (4, -1), (5, 1048576), (6, -1), (7, 134217728), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, 2147483648), (14, 16777216), (15, 8388608), (16, 524288), (17, 67108864), (18, 33554432), (19, 1114112), (20, -1), (21, 1073741824), (22, 262144), (23, 134217728), (24, 1073741824), (25, -1), (26, -1), (27, 4194304), (28, -1), (29, 1048576), (30, 4194304), (31, 16384), (32, -1), (33, 32768), (34, -1), (35, -1), (36, -1), (37, 16384), (38, 268435456), (39, 4194304), (40, 1073741824), (41, 134217728), (42, 524288), (43, 524288), (44, -1), (45, -1), (46, -1), (47, 67108864), (48, 16777216), (49, 67108864), (50, -1), (51, -1), (52, -1)]

Covered at level 6 : set()

After reduction : 
 pending  : [27, 39, 3, 19, 16, 22, 15, 18, 14, 7, 5, 29, 31, 37, 42, 43, 47, 48, 49, 41, 17, 23, 38, 24, 40, 21, 13, 30, 33]
 solution : [9]


Solution : [9] has cost 6.


Decide in level 6 among pending : [27, 39, 3, 19, 16, 22, 15, 18, 14, 7, 5, 29, 31, 37, 42, 43, 47, 48, 49, 41, 17, 23, 38, 24, 40, 21, 13, 30, 33]

Coverage : [(0, -1), (1, -1), (2, -1), (3, 1048576), (4, -1), (5, 1048576), (6, -1), (7, 134217728), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, 2147483648), (14, 16777216), (15, 8388608), (16, 524288), (17, 67108864), (18, 33554432), (19, 1114112), (20, -1), (21, 1073741824), (22, 262144), (23, 134217728), (24, 1073741824), (25, -1), (26, -1), (27, 4194304), (28, -1), (29, 1048576), (30, 4194304), (31, 16384), (32, -1), (33, 32768), (34, -1), (35, -1), (36, -1), (37, 16384), (38, 268435456), (39, 4194304), (40, 1073741824), (41, 134217728), (42, 524288), (43, 524288), (44, -1), (45, -1), (46, -1), (47, 67108864), (48, 16777216), (49, 67108864), (50, -1), (51, -1), (52, -1)]

Decide 13 with phase True at level 6

After decision at level 6
 pending : [27, 39, 3, 19, 16, 22, 15, 18, 14, 7, 5, 29, 31, 37, 42, 43, 47, 48, 49, 41, 17, 23, 38, 24, 40, 21, 30, 33]
 solution : [9, 13]


New level: 7
 pending : [27, 39, 3, 19, 16, 22, 15, 18, 14, 7, 5, 29, 31, 37, 42, 43, 47, 48, 49, 41, 17, 23, 38, 24, 40, 21, 30, 33]
 solution : [9, 13]


Before reduction : 
 pending  : [27, 39, 3, 19, 16, 22, 15, 18, 14, 7, 5, 29, 31, 37, 42, 43, 47, 48, 49, 41, 17, 23, 38, 24, 40, 21, 30, 33]
 solution : [9, 13]

Essensial at level 7 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 1048576), (4, -1), (5, 1048576), (6, -1), (7, 134217728), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, 2147483648), (14, 16777216), (15, 8388608), (16, 524288), (17, 67108864), (18, 33554432), (19, 1114112), (20, -1), (21, 1073741824), (22, 262144), (23, 134217728), (24, 1073741824), (25, -1), (26, -1), (27, 4194304), (28, -1), (29, 1048576), (30, 4194304), (31, 16384), (32, -1), (33, 32768), (34, -1), (35, -1), (36, -1), (37, 16384), (38, 268435456), (39, 4194304), (40, 1073741824), (41, 134217728), (42, 524288), (43, 524288), (44, -1), (45, -1), (46, -1), (47, 67108864), (48, 16777216), (49, 67108864), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 0), (4, -1), (5, 262144), (6, -1), (7, 134217728), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 0), (15, 0), (16, 0), (17, 0), (18, 0), (19, 0), (20, -1), (21, 0), (22, 0), (23, 134217728), (24, 1073741824), (25, -1), (26, -1), (27, 0), (28, -1), (29, 524288), (30, 4194304), (31, 4096), (32, -1), (33, 8192), (34, -1), (35, -1), (36, -1), (37, 2048), (38, 2048), (39, 0), (40, 4096), (41, 67108864), (42, 131072), (43, 131072), (44, -1), (45, -1), (46, -1), (47, 33554432), (48, 4194304), (49, 67108864), (50, -1), (51, -1), (52, -1)]

Covered at level 7 : {3, 39, 14, 15, 16, 17, 18, 19, 21, 22, 27}

After reduction : 
 pending  : [7, 5, 29, 31, 37, 42, 43, 47, 48, 49, 41, 23, 38, 24, 40, 30, 33]
 solution : [9, 13]


Before reduction : 
 pending  : [7, 5, 29, 31, 37, 42, 43, 47, 48, 49, 41, 23, 38, 24, 40, 30, 33]
 solution : [9, 13]

Essensial at level 7 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 0), (4, -1), (5, 262144), (6, -1), (7, 134217728), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 0), (15, 0), (16, 0), (17, 0), (18, 0), (19, 0), (20, -1), (21, 0), (22, 0), (23, 134217728), (24, 1073741824), (25, -1), (26, -1), (27, 0), (28, -1), (29, 524288), (30, 4194304), (31, 4096), (32, -1), (33, 8192), (34, -1), (35, -1), (36, -1), (37, 2048), (38, 2048), (39, 0), (40, 4096), (41, 67108864), (42, 131072), (43, 131072), (44, -1), (45, -1), (46, -1), (47, 33554432), (48, 4194304), (49, 67108864), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 262144), (6, -1), (7, 134217728), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, 134217728), (24, 1073741824), (25, -1), (26, -1), (27, -1), (28, -1), (29, 524288), (30, 4194304), (31, 4096), (32, -1), (33, 8192), (34, -1), (35, -1), (36, -1), (37, 2048), (38, 2048), (39, -1), (40, 4096), (41, 67108864), (42, 131072), (43, 131072), (44, -1), (45, -1), (46, -1), (47, 33554432), (48, 4194304), (49, 67108864), (50, -1), (51, -1), (52, -1)]

Covered at level 7 : set()

After reduction : 
 pending  : [7, 5, 29, 31, 37, 42, 43, 47, 48, 49, 41, 23, 38, 24, 40, 30, 33]
 solution : [9, 13]


Solution : [9, 13] has cost 13.


Decide in level 7 among pending : [7, 5, 29, 31, 37, 42, 43, 47, 48, 49, 41, 23, 38, 24, 40, 30, 33]

Coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 262144), (6, -1), (7, 134217728), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, 134217728), (24, 1073741824), (25, -1), (26, -1), (27, -1), (28, -1), (29, 524288), (30, 4194304), (31, 4096), (32, -1), (33, 8192), (34, -1), (35, -1), (36, -1), (37, 2048), (38, 2048), (39, -1), (40, 4096), (41, 67108864), (42, 131072), (43, 131072), (44, -1), (45, -1), (46, -1), (47, 33554432), (48, 4194304), (49, 67108864), (50, -1), (51, -1), (52, -1)]

Decide 24 with phase True at level 7

After decision at level 7
 pending : [7, 5, 29, 31, 37, 42, 43, 47, 48, 49, 41, 23, 38, 40, 30, 33]
 solution : [9, 13, 24]


New level: 8
 pending : [7, 5, 29, 31, 37, 42, 43, 47, 48, 49, 41, 23, 38, 40, 30, 33]
 solution : [9, 13, 24]


Before reduction : 
 pending  : [7, 5, 29, 31, 37, 42, 43, 47, 48, 49, 41, 23, 38, 40, 30, 33]
 solution : [9, 13, 24]

Essensial at level 8 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 262144), (6, -1), (7, 134217728), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, 134217728), (24, 1073741824), (25, -1), (26, -1), (27, -1), (28, -1), (29, 524288), (30, 4194304), (31, 4096), (32, -1), (33, 8192), (34, -1), (35, -1), (36, -1), (37, 2048), (38, 2048), (39, -1), (40, 4096), (41, 67108864), (42, 131072), (43, 131072), (44, -1), (45, -1), (46, -1), (47, 33554432), (48, 4194304), (49, 67108864), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 65536), (6, -1), (7, 33554432), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, 33554432), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, 131072), (30, 0), (31, 1024), (32, -1), (33, 0), (34, -1), (35, -1), (36, -1), (37, 512), (38, 512), (39, -1), (40, 0), (41, 33554432), (42, 32768), (43, 32768), (44, -1), (45, -1), (46, -1), (47, 8388608), (48, 1048576), (49, 33554432), (50, -1), (51, -1), (52, -1)]

Covered at level 8 : {40, 33, 30}

After reduction : 
 pending  : [7, 5, 29, 31, 37, 42, 43, 47, 48, 49, 41, 23, 38]
 solution : [9, 13, 24]


Before reduction : 
 pending  : [7, 5, 29, 31, 37, 42, 43, 47, 48, 49, 41, 23, 38]
 solution : [9, 13, 24]

Essensial at level 8 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 65536), (6, -1), (7, 33554432), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, 33554432), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, 131072), (30, 0), (31, 1024), (32, -1), (33, 0), (34, -1), (35, -1), (36, -1), (37, 512), (38, 512), (39, -1), (40, 0), (41, 33554432), (42, 32768), (43, 32768), (44, -1), (45, -1), (46, -1), (47, 8388608), (48, 1048576), (49, 33554432), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 65536), (6, -1), (7, 33554432), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, 33554432), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, 131072), (30, -1), (31, 1024), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, 512), (38, 512), (39, -1), (40, -1), (41, 33554432), (42, 32768), (43, 32768), (44, -1), (45, -1), (46, -1), (47, 8388608), (48, 1048576), (49, 33554432), (50, -1), (51, -1), (52, -1)]

Covered at level 8 : set()

After reduction : 
 pending  : [7, 5, 29, 31, 37, 42, 43, 47, 48, 49, 41, 23, 38]
 solution : [9, 13, 24]


Solution : [9, 13, 24] has cost 20.


Before backtrack at level 8
 pending : [7, 5, 29, 31, 37, 42, 43, 47, 48, 49, 41, 23, 38]
 solution : [9, 13, 24]

After backtrack at level 8
 pending : [7, 5, 29, 31, 37, 42, 43, 47, 48, 49, 41, 23, 38, 40, 30, 33]
 solution : [9, 13, 24]


Invert decision for 24 at level 7


New level: 8
 pending : [7, 5, 29, 31, 37, 42, 43, 47, 48, 49, 41, 23, 38, 40, 30, 33]
 solution : [9, 13]


Before reduction : 
 pending  : [7, 5, 29, 31, 37, 42, 43, 47, 48, 49, 41, 23, 38, 40, 30, 33]
 solution : [9, 13]

Essensial at level 8 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 65536), (6, -1), (7, 33554432), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, 33554432), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, 131072), (30, -1), (31, 1024), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, 512), (38, 512), (39, -1), (40, -1), (41, 33554432), (42, 32768), (43, 32768), (44, -1), (45, -1), (46, -1), (47, 8388608), (48, 1048576), (49, 33554432), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 262144), (6, -1), (7, 134217728), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, 134217728), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, 524288), (30, 4194304), (31, 4096), (32, -1), (33, 8192), (34, -1), (35, -1), (36, -1), (37, 2048), (38, 2048), (39, -1), (40, 4096), (41, 67108864), (42, 131072), (43, 131072), (44, -1), (45, -1), (46, -1), (47, 33554432), (48, 4194304), (49, 67108864), (50, -1), (51, -1), (52, -1)]

Covered at level 8 : set()

After reduction : 
 pending  : [7, 5, 29, 31, 37, 42, 43, 47, 48, 49, 41, 23, 38, 40, 30, 33]
 solution : [9, 13]


Solution : [9, 13] has cost 13.


Decide in level 8 among pending : [7, 5, 29, 31, 37, 42, 43, 47, 48, 49, 41, 23, 38, 40, 30, 33]

Coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 262144), (6, -1), (7, 134217728), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, 134217728), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, 524288), (30, 4194304), (31, 4096), (32, -1), (33, 8192), (34, -1), (35, -1), (36, -1), (37, 2048), (38, 2048), (39, -1), (40, 4096), (41, 67108864), (42, 131072), (43, 131072), (44, -1), (45, -1), (46, -1), (47, 33554432), (48, 4194304), (49, 67108864), (50, -1), (51, -1), (52, -1)]

Decide 7 with phase True at level 8

After decision at level 8
 pending : [5, 29, 31, 37, 42, 43, 47, 48, 49, 41, 23, 38, 40, 30, 33]
 solution : [9, 13, 7]


New level: 9
 pending : [5, 29, 31, 37, 42, 43, 47, 48, 49, 41, 23, 38, 40, 30, 33]
 solution : [9, 13, 7]


Before reduction : 
 pending  : [5, 29, 31, 37, 42, 43, 47, 48, 49, 41, 23, 38, 40, 30, 33]
 solution : [9, 13, 7]

Essensial at level 9 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 262144), (6, -1), (7, 134217728), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, 134217728), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, 524288), (30, 4194304), (31, 4096), (32, -1), (33, 8192), (34, -1), (35, -1), (36, -1), (37, 2048), (38, 2048), (39, -1), (40, 4096), (41, 67108864), (42, 131072), (43, 131072), (44, -1), (45, -1), (46, -1), (47, 33554432), (48, 4194304), (49, 67108864), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 0), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, 0), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, 0), (30, 0), (31, 0), (32, -1), (33, 0), (34, -1), (35, -1), (36, -1), (37, 0), (38, 0), (39, -1), (40, 0), (41, 0), (42, 0), (43, 0), (44, -1), (45, -1), (46, -1), (47, 0), (48, 0), (49, 0), (50, -1), (51, -1), (52, -1)]

Covered at level 9 : {33, 37, 5, 38, 40, 41, 42, 43, 47, 48, 49, 23, 29, 30, 31}

After reduction : 
 pending  : []
 solution : [9, 13, 7]


Before reduction : 
 pending  : []
 solution : [9, 13, 7]

Essensial at level 9 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 0), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, 0), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, 0), (30, 0), (31, 0), (32, -1), (33, 0), (34, -1), (35, -1), (36, -1), (37, 0), (38, 0), (39, -1), (40, 0), (41, 0), (42, 0), (43, 0), (44, -1), (45, -1), (46, -1), (47, 0), (48, 0), (49, 0), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 9 : set()

After reduction : 
 pending  : []
 solution : [9, 13, 7]


Solution : [9, 13, 7] has cost 17.


Before backtrack at level 9
 pending : []
 solution : [9, 13, 7]

After backtrack at level 9
 pending : [5, 29, 31, 37, 42, 43, 47, 48, 49, 41, 23, 38, 40, 30, 33]
 solution : [9, 13, 7]


Invert decision for 7 at level 8


New level: 9
 pending : [5, 29, 31, 37, 42, 43, 47, 48, 49, 41, 23, 38, 40, 30, 33]
 solution : [9, 13]


Before reduction : 
 pending  : [5, 29, 31, 37, 42, 43, 47, 48, 49, 41, 23, 38, 40, 30, 33]
 solution : [9, 13]

Essensial at level 9 : {23}

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 0), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, 0), (30, 0), (31, 0), (32, -1), (33, 0), (34, -1), (35, -1), (36, -1), (37, 0), (38, 0), (39, -1), (40, 0), (41, 0), (42, 0), (43, 0), (44, -1), (45, -1), (46, -1), (47, 0), (48, 0), (49, 0), (50, -1), (51, -1), (52, -1)]

Covered at level 9 : {33, 37, 5, 38, 40, 41, 42, 43, 47, 48, 49, 29, 30, 31}

After reduction : 
 pending  : []
 solution : [9, 13, 23]


Before reduction : 
 pending  : []
 solution : [9, 13, 23]

Essensial at level 9 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 0), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, 0), (30, 0), (31, 0), (32, -1), (33, 0), (34, -1), (35, -1), (36, -1), (37, 0), (38, 0), (39, -1), (40, 0), (41, 0), (42, 0), (43, 0), (44, -1), (45, -1), (46, -1), (47, 0), (48, 0), (49, 0), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 9 : set()

After reduction : 
 pending  : []
 solution : [9, 13, 23]


Solution : [9, 13, 23] has cost 20.


Before backtrack at level 9
 pending : []
 solution : [9, 13, 23]

After backtrack at level 9
 pending : [23, 5, 29, 31, 37, 42, 43, 47, 48, 49, 41, 38, 40, 30, 33]
 solution : [9, 13]


Before backtrack at level 8
 pending : [23, 5, 29, 31, 37, 42, 43, 47, 48, 49, 41, 38, 40, 30, 33]
 solution : [9, 13]

After backtrack at level 8
 pending : [23, 5, 29, 31, 37, 42, 43, 47, 48, 49, 41, 38, 40, 30, 33, 7]
 solution : [9, 13]


Before backtrack at level 7
 pending : [23, 5, 29, 31, 37, 42, 43, 47, 48, 49, 41, 38, 40, 30, 33, 7]
 solution : [9, 13]

After backtrack at level 7
 pending : [23, 5, 29, 31, 37, 42, 43, 47, 48, 49, 41, 38, 40, 30, 33, 7, 27, 39, 3, 19, 16, 22, 15, 18, 14, 17, 21, 24]
 solution : [9, 13]


Invert decision for 13 at level 6


New level: 7
 pending : [23, 5, 29, 31, 37, 42, 43, 47, 48, 49, 41, 38, 40, 30, 33, 7, 27, 39, 3, 19, 16, 22, 15, 18, 14, 17, 21, 24]
 solution : [9]


Before reduction : 
 pending  : [23, 5, 29, 31, 37, 42, 43, 47, 48, 49, 41, 38, 40, 30, 33, 7, 27, 39, 3, 19, 16, 22, 15, 18, 14, 17, 21, 24]
 solution : [9]

Essensial at level 7 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 1048576), (4, -1), (5, 1048576), (6, -1), (7, 134217728), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 16777216), (15, 8388608), (16, 524288), (17, 67108864), (18, 33554432), (19, 1114112), (20, -1), (21, 1073741824), (22, 262144), (23, 134217728), (24, 1073741824), (25, -1), (26, -1), (27, 4194304), (28, -1), (29, 1048576), (30, 4194304), (31, 16384), (32, -1), (33, 32768), (34, -1), (35, -1), (36, -1), (37, 16384), (38, 268435456), (39, 4194304), (40, 1073741824), (41, 134217728), (42, 524288), (43, 524288), (44, -1), (45, -1), (46, -1), (47, 67108864), (48, 16777216), (49, 67108864), (50, -1), (51, -1), (52, -1)]

Covered at level 7 : set()

After reduction : 
 pending  : [23, 5, 29, 31, 37, 42, 43, 47, 48, 49, 41, 38, 40, 30, 33, 7, 27, 39, 3, 19, 16, 22, 15, 18, 14, 17, 21, 24]
 solution : [9]


Solution : [9] has cost 6.


Decide in level 7 among pending : [23, 5, 29, 31, 37, 42, 43, 47, 48, 49, 41, 38, 40, 30, 33, 7, 27, 39, 3, 19, 16, 22, 15, 18, 14, 17, 21, 24]

Coverage : [(0, -1), (1, -1), (2, -1), (3, 1048576), (4, -1), (5, 1048576), (6, -1), (7, 134217728), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 16777216), (15, 8388608), (16, 524288), (17, 67108864), (18, 33554432), (19, 1114112), (20, -1), (21, 1073741824), (22, 262144), (23, 134217728), (24, 1073741824), (25, -1), (26, -1), (27, 4194304), (28, -1), (29, 1048576), (30, 4194304), (31, 16384), (32, -1), (33, 32768), (34, -1), (35, -1), (36, -1), (37, 16384), (38, 268435456), (39, 4194304), (40, 1073741824), (41, 134217728), (42, 524288), (43, 524288), (44, -1), (45, -1), (46, -1), (47, 67108864), (48, 16777216), (49, 67108864), (50, -1), (51, -1), (52, -1)]

Decide 40 with phase True at level 7

After decision at level 7
 pending : [23, 5, 29, 31, 37, 42, 43, 47, 48, 49, 41, 38, 30, 33, 7, 27, 39, 3, 19, 16, 22, 15, 18, 14, 17, 21, 24]
 solution : [9, 40]


New level: 8
 pending : [23, 5, 29, 31, 37, 42, 43, 47, 48, 49, 41, 38, 30, 33, 7, 27, 39, 3, 19, 16, 22, 15, 18, 14, 17, 21, 24]
 solution : [9, 40]


Before reduction : 
 pending  : [23, 5, 29, 31, 37, 42, 43, 47, 48, 49, 41, 38, 30, 33, 7, 27, 39, 3, 19, 16, 22, 15, 18, 14, 17, 21, 24]
 solution : [9, 40]

Essensial at level 8 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 1048576), (4, -1), (5, 1048576), (6, -1), (7, 134217728), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 16777216), (15, 8388608), (16, 524288), (17, 67108864), (18, 33554432), (19, 1114112), (20, -1), (21, 1073741824), (22, 262144), (23, 134217728), (24, 1073741824), (25, -1), (26, -1), (27, 4194304), (28, -1), (29, 1048576), (30, 4194304), (31, 16384), (32, -1), (33, 32768), (34, -1), (35, -1), (36, -1), (37, 16384), (38, 268435456), (39, 4194304), (40, 1073741824), (41, 134217728), (42, 524288), (43, 524288), (44, -1), (45, -1), (46, -1), (47, 67108864), (48, 16777216), (49, 67108864), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 1048576), (4, -1), (5, 1048576), (6, -1), (7, 134217728), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 16777216), (15, 8388608), (16, 524288), (17, 67108864), (18, 33554432), (19, 1114112), (20, -1), (21, 1073741824), (22, 262144), (23, 134217728), (24, 536870912), (25, -1), (26, -1), (27, 4194304), (28, -1), (29, 1048576), (30, 2097152), (31, 16384), (32, -1), (33, 16384), (34, -1), (35, -1), (36, -1), (37, 16384), (38, 134217728), (39, 4194304), (40, -1), (41, 134217728), (42, 524288), (43, 524288), (44, -1), (45, -1), (46, -1), (47, 67108864), (48, 16777216), (49, 67108864), (50, -1), (51, -1), (52, -1)]

Covered at level 8 : set()

After reduction : 
 pending  : [23, 5, 29, 31, 37, 42, 43, 47, 48, 49, 41, 38, 30, 33, 7, 27, 39, 3, 19, 16, 22, 15, 18, 14, 17, 21, 24]
 solution : [9, 40]


Solution : [9, 40] has cost 20.


Before backtrack at level 8
 pending : [23, 5, 29, 31, 37, 42, 43, 47, 48, 49, 41, 38, 30, 33, 7, 27, 39, 3, 19, 16, 22, 15, 18, 14, 17, 21, 24]
 solution : [9, 40]

After backtrack at level 8
 pending : [23, 5, 29, 31, 37, 42, 43, 47, 48, 49, 41, 38, 30, 33, 7, 27, 39, 3, 19, 16, 22, 15, 18, 14, 17, 21, 24]
 solution : [9, 40]


Invert decision for 40 at level 7


New level: 8
 pending : [23, 5, 29, 31, 37, 42, 43, 47, 48, 49, 41, 38, 30, 33, 7, 27, 39, 3, 19, 16, 22, 15, 18, 14, 17, 21, 24]
 solution : [9]


Before reduction : 
 pending  : [23, 5, 29, 31, 37, 42, 43, 47, 48, 49, 41, 38, 30, 33, 7, 27, 39, 3, 19, 16, 22, 15, 18, 14, 17, 21, 24]
 solution : [9]

Essensial at level 8 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 1048576), (4, -1), (5, 1048576), (6, -1), (7, 134217728), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 16777216), (15, 8388608), (16, 524288), (17, 67108864), (18, 33554432), (19, 1114112), (20, -1), (21, 1073741824), (22, 262144), (23, 134217728), (24, 536870912), (25, -1), (26, -1), (27, 4194304), (28, -1), (29, 1048576), (30, 2097152), (31, 16384), (32, -1), (33, 16384), (34, -1), (35, -1), (36, -1), (37, 16384), (38, 134217728), (39, 4194304), (40, -1), (41, 134217728), (42, 524288), (43, 524288), (44, -1), (45, -1), (46, -1), (47, 67108864), (48, 16777216), (49, 67108864), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 1048576), (4, -1), (5, 1048576), (6, -1), (7, 134217728), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 16777216), (15, 8388608), (16, 524288), (17, 67108864), (18, 33554432), (19, 1114112), (20, -1), (21, 1073741824), (22, 262144), (23, 134217728), (24, 1073741824), (25, -1), (26, -1), (27, 4194304), (28, -1), (29, 1048576), (30, 4194304), (31, 16384), (32, -1), (33, 32768), (34, -1), (35, -1), (36, -1), (37, 16384), (38, 268435456), (39, 4194304), (40, -1), (41, 134217728), (42, 524288), (43, 524288), (44, -1), (45, -1), (46, -1), (47, 67108864), (48, 16777216), (49, 67108864), (50, -1), (51, -1), (52, -1)]

Covered at level 8 : set()

After reduction : 
 pending  : [23, 5, 29, 31, 37, 42, 43, 47, 48, 49, 41, 38, 30, 33, 7, 27, 39, 3, 19, 16, 22, 15, 18, 14, 17, 21, 24]
 solution : [9]


Solution : [9] has cost 6.


Decide in level 8 among pending : [23, 5, 29, 31, 37, 42, 43, 47, 48, 49, 41, 38, 30, 33, 7, 27, 39, 3, 19, 16, 22, 15, 18, 14, 17, 21, 24]

Coverage : [(0, -1), (1, -1), (2, -1), (3, 1048576), (4, -1), (5, 1048576), (6, -1), (7, 134217728), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 16777216), (15, 8388608), (16, 524288), (17, 67108864), (18, 33554432), (19, 1114112), (20, -1), (21, 1073741824), (22, 262144), (23, 134217728), (24, 1073741824), (25, -1), (26, -1), (27, 4194304), (28, -1), (29, 1048576), (30, 4194304), (31, 16384), (32, -1), (33, 32768), (34, -1), (35, -1), (36, -1), (37, 16384), (38, 268435456), (39, 4194304), (40, -1), (41, 134217728), (42, 524288), (43, 524288), (44, -1), (45, -1), (46, -1), (47, 67108864), (48, 16777216), (49, 67108864), (50, -1), (51, -1), (52, -1)]

Decide 21 with phase True at level 8

After decision at level 8
 pending : [23, 5, 29, 31, 37, 42, 43, 47, 48, 49, 41, 38, 30, 33, 7, 27, 39, 3, 19, 16, 22, 15, 18, 14, 17, 24]
 solution : [9, 21]


New level: 9
 pending : [23, 5, 29, 31, 37, 42, 43, 47, 48, 49, 41, 38, 30, 33, 7, 27, 39, 3, 19, 16, 22, 15, 18, 14, 17, 24]
 solution : [9, 21]


Before reduction : 
 pending  : [23, 5, 29, 31, 37, 42, 43, 47, 48, 49, 41, 38, 30, 33, 7, 27, 39, 3, 19, 16, 22, 15, 18, 14, 17, 24]
 solution : [9, 21]

Essensial at level 9 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 1048576), (4, -1), (5, 1048576), (6, -1), (7, 134217728), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 16777216), (15, 8388608), (16, 524288), (17, 67108864), (18, 33554432), (19, 1114112), (20, -1), (21, 1073741824), (22, 262144), (23, 134217728), (24, 1073741824), (25, -1), (26, -1), (27, 4194304), (28, -1), (29, 1048576), (30, 4194304), (31, 16384), (32, -1), (33, 32768), (34, -1), (35, -1), (36, -1), (37, 16384), (38, 268435456), (39, 4194304), (40, -1), (41, 134217728), (42, 524288), (43, 524288), (44, -1), (45, -1), (46, -1), (47, 67108864), (48, 16777216), (49, 67108864), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 0), (4, -1), (5, 262144), (6, -1), (7, 134217728), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 0), (15, 0), (16, 0), (17, 0), (18, 0), (19, 0), (20, -1), (21, -1), (22, 0), (23, 134217728), (24, 1073741824), (25, -1), (26, -1), (27, 0), (28, -1), (29, 524288), (30, 4194304), (31, 4096), (32, -1), (33, 8192), (34, -1), (35, -1), (36, -1), (37, 2048), (38, 2048), (39, 0), (40, -1), (41, 67108864), (42, 131072), (43, 131072), (44, -1), (45, -1), (46, -1), (47, 67108864), (48, 16777216), (49, 67108864), (50, -1), (51, -1), (52, -1)]

Covered at level 9 : {3, 39, 14, 15, 16, 17, 18, 19, 22, 27}

After reduction : 
 pending  : [23, 5, 29, 31, 37, 42, 43, 47, 48, 49, 41, 38, 30, 33, 7, 24]
 solution : [9, 21]


Before reduction : 
 pending  : [23, 5, 29, 31, 37, 42, 43, 47, 48, 49, 41, 38, 30, 33, 7, 24]
 solution : [9, 21]

Essensial at level 9 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 0), (4, -1), (5, 262144), (6, -1), (7, 134217728), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 0), (15, 0), (16, 0), (17, 0), (18, 0), (19, 0), (20, -1), (21, -1), (22, 0), (23, 134217728), (24, 1073741824), (25, -1), (26, -1), (27, 0), (28, -1), (29, 524288), (30, 4194304), (31, 4096), (32, -1), (33, 8192), (34, -1), (35, -1), (36, -1), (37, 2048), (38, 2048), (39, 0), (40, -1), (41, 67108864), (42, 131072), (43, 131072), (44, -1), (45, -1), (46, -1), (47, 67108864), (48, 16777216), (49, 67108864), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 262144), (6, -1), (7, 134217728), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, 134217728), (24, 1073741824), (25, -1), (26, -1), (27, -1), (28, -1), (29, 524288), (30, 4194304), (31, 4096), (32, -1), (33, 8192), (34, -1), (35, -1), (36, -1), (37, 2048), (38, 2048), (39, -1), (40, -1), (41, 67108864), (42, 131072), (43, 131072), (44, -1), (45, -1), (46, -1), (47, 67108864), (48, 16777216), (49, 67108864), (50, -1), (51, -1), (52, -1)]

Covered at level 9 : set()

After reduction : 
 pending  : [23, 5, 29, 31, 37, 42, 43, 47, 48, 49, 41, 38, 30, 33, 7, 24]
 solution : [9, 21]


Solution : [9, 21] has cost 13.


Decide in level 9 among pending : [23, 5, 29, 31, 37, 42, 43, 47, 48, 49, 41, 38, 30, 33, 7, 24]

Coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 262144), (6, -1), (7, 134217728), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, 134217728), (24, 1073741824), (25, -1), (26, -1), (27, -1), (28, -1), (29, 524288), (30, 4194304), (31, 4096), (32, -1), (33, 8192), (34, -1), (35, -1), (36, -1), (37, 2048), (38, 2048), (39, -1), (40, -1), (41, 67108864), (42, 131072), (43, 131072), (44, -1), (45, -1), (46, -1), (47, 67108864), (48, 16777216), (49, 67108864), (50, -1), (51, -1), (52, -1)]

Decide 24 with phase True at level 9

After decision at level 9
 pending : [23, 5, 29, 31, 37, 42, 43, 47, 48, 49, 41, 38, 30, 33, 7]
 solution : [9, 21, 24]


New level: 10
 pending : [23, 5, 29, 31, 37, 42, 43, 47, 48, 49, 41, 38, 30, 33, 7]
 solution : [9, 21, 24]


Before reduction : 
 pending  : [23, 5, 29, 31, 37, 42, 43, 47, 48, 49, 41, 38, 30, 33, 7]
 solution : [9, 21, 24]

Essensial at level 10 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 262144), (6, -1), (7, 134217728), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, 134217728), (24, 1073741824), (25, -1), (26, -1), (27, -1), (28, -1), (29, 524288), (30, 4194304), (31, 4096), (32, -1), (33, 8192), (34, -1), (35, -1), (36, -1), (37, 2048), (38, 2048), (39, -1), (40, -1), (41, 67108864), (42, 131072), (43, 131072), (44, -1), (45, -1), (46, -1), (47, 67108864), (48, 16777216), (49, 67108864), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 65536), (6, -1), (7, 33554432), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, 33554432), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, 131072), (30, 0), (31, 1024), (32, -1), (33, 0), (34, -1), (35, -1), (36, -1), (37, 512), (38, 512), (39, -1), (40, -1), (41, 33554432), (42, 32768), (43, 32768), (44, -1), (45, -1), (46, -1), (47, 16777216), (48, 4194304), (49, 33554432), (50, -1), (51, -1), (52, -1)]

Covered at level 10 : {33, 30}

After reduction : 
 pending  : [23, 5, 29, 31, 37, 42, 43, 47, 48, 49, 41, 38, 7]
 solution : [9, 21, 24]


Before reduction : 
 pending  : [23, 5, 29, 31, 37, 42, 43, 47, 48, 49, 41, 38, 7]
 solution : [9, 21, 24]

Essensial at level 10 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 65536), (6, -1), (7, 33554432), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, 33554432), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, 131072), (30, 0), (31, 1024), (32, -1), (33, 0), (34, -1), (35, -1), (36, -1), (37, 512), (38, 512), (39, -1), (40, -1), (41, 33554432), (42, 32768), (43, 32768), (44, -1), (45, -1), (46, -1), (47, 16777216), (48, 4194304), (49, 33554432), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 65536), (6, -1), (7, 33554432), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, 33554432), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, 131072), (30, -1), (31, 1024), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, 512), (38, 512), (39, -1), (40, -1), (41, 33554432), (42, 32768), (43, 32768), (44, -1), (45, -1), (46, -1), (47, 16777216), (48, 4194304), (49, 33554432), (50, -1), (51, -1), (52, -1)]

Covered at level 10 : set()

After reduction : 
 pending  : [23, 5, 29, 31, 37, 42, 43, 47, 48, 49, 41, 38, 7]
 solution : [9, 21, 24]


Solution : [9, 21, 24] has cost 20.


Before backtrack at level 10
 pending : [23, 5, 29, 31, 37, 42, 43, 47, 48, 49, 41, 38, 7]
 solution : [9, 21, 24]

After backtrack at level 10
 pending : [23, 5, 29, 31, 37, 42, 43, 47, 48, 49, 41, 38, 7, 30, 33]
 solution : [9, 21, 24]


Invert decision for 24 at level 9


New level: 10
 pending : [23, 5, 29, 31, 37, 42, 43, 47, 48, 49, 41, 38, 7, 30, 33]
 solution : [9, 21]


Before reduction : 
 pending  : [23, 5, 29, 31, 37, 42, 43, 47, 48, 49, 41, 38, 7, 30, 33]
 solution : [9, 21]

Essensial at level 10 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 65536), (6, -1), (7, 33554432), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, 33554432), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, 131072), (30, -1), (31, 1024), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, 512), (38, 512), (39, -1), (40, -1), (41, 33554432), (42, 32768), (43, 32768), (44, -1), (45, -1), (46, -1), (47, 16777216), (48, 4194304), (49, 33554432), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 262144), (6, -1), (7, 134217728), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, 134217728), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, 524288), (30, 4194304), (31, 4096), (32, -1), (33, 8192), (34, -1), (35, -1), (36, -1), (37, 2048), (38, 2048), (39, -1), (40, -1), (41, 67108864), (42, 131072), (43, 131072), (44, -1), (45, -1), (46, -1), (47, 67108864), (48, 16777216), (49, 67108864), (50, -1), (51, -1), (52, -1)]

Covered at level 10 : set()

After reduction : 
 pending  : [23, 5, 29, 31, 37, 42, 43, 47, 48, 49, 41, 38, 7, 30, 33]
 solution : [9, 21]


Solution : [9, 21] has cost 13.


Decide in level 10 among pending : [23, 5, 29, 31, 37, 42, 43, 47, 48, 49, 41, 38, 7, 30, 33]

Coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 262144), (6, -1), (7, 134217728), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, 134217728), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, 524288), (30, 4194304), (31, 4096), (32, -1), (33, 8192), (34, -1), (35, -1), (36, -1), (37, 2048), (38, 2048), (39, -1), (40, -1), (41, 67108864), (42, 131072), (43, 131072), (44, -1), (45, -1), (46, -1), (47, 67108864), (48, 16777216), (49, 67108864), (50, -1), (51, -1), (52, -1)]

Decide 23 with phase True at level 10

After decision at level 10
 pending : [5, 29, 31, 37, 42, 43, 47, 48, 49, 41, 38, 7, 30, 33]
 solution : [9, 21, 23]


New level: 11
 pending : [5, 29, 31, 37, 42, 43, 47, 48, 49, 41, 38, 7, 30, 33]
 solution : [9, 21, 23]


Before reduction : 
 pending  : [5, 29, 31, 37, 42, 43, 47, 48, 49, 41, 38, 7, 30, 33]
 solution : [9, 21, 23]

Essensial at level 11 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 262144), (6, -1), (7, 134217728), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, 134217728), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, 524288), (30, 4194304), (31, 4096), (32, -1), (33, 8192), (34, -1), (35, -1), (36, -1), (37, 2048), (38, 2048), (39, -1), (40, -1), (41, 67108864), (42, 131072), (43, 131072), (44, -1), (45, -1), (46, -1), (47, 67108864), (48, 16777216), (49, 67108864), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 0), (6, -1), (7, 0), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, 0), (30, 0), (31, 0), (32, -1), (33, 0), (34, -1), (35, -1), (36, -1), (37, 0), (38, 0), (39, -1), (40, -1), (41, 0), (42, 0), (43, 0), (44, -1), (45, -1), (46, -1), (47, 0), (48, 0), (49, 0), (50, -1), (51, -1), (52, -1)]

Covered at level 11 : {33, 37, 5, 38, 7, 41, 42, 43, 47, 48, 49, 29, 30, 31}

After reduction : 
 pending  : []
 solution : [9, 21, 23]


Before reduction : 
 pending  : []
 solution : [9, 21, 23]

Essensial at level 11 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 0), (6, -1), (7, 0), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, 0), (30, 0), (31, 0), (32, -1), (33, 0), (34, -1), (35, -1), (36, -1), (37, 0), (38, 0), (39, -1), (40, -1), (41, 0), (42, 0), (43, 0), (44, -1), (45, -1), (46, -1), (47, 0), (48, 0), (49, 0), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 11 : set()

After reduction : 
 pending  : []
 solution : [9, 21, 23]


Solution : [9, 21, 23] has cost 20.


Before backtrack at level 11
 pending : []
 solution : [9, 21, 23]

After backtrack at level 11
 pending : [5, 29, 31, 37, 42, 43, 47, 48, 49, 41, 38, 7, 30, 33]
 solution : [9, 21, 23]


Invert decision for 23 at level 10


New level: 11
 pending : [5, 29, 31, 37, 42, 43, 47, 48, 49, 41, 38, 7, 30, 33]
 solution : [9, 21]


Before reduction : 
 pending  : [5, 29, 31, 37, 42, 43, 47, 48, 49, 41, 38, 7, 30, 33]
 solution : [9, 21]

Essensial at level 11 : {7}

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 0), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, 0), (30, 0), (31, 0), (32, -1), (33, 0), (34, -1), (35, -1), (36, -1), (37, 0), (38, 0), (39, -1), (40, -1), (41, 0), (42, 0), (43, 0), (44, -1), (45, -1), (46, -1), (47, 0), (48, 0), (49, 0), (50, -1), (51, -1), (52, -1)]

Covered at level 11 : {33, 37, 5, 38, 41, 42, 43, 47, 48, 49, 29, 30, 31}

After reduction : 
 pending  : []
 solution : [9, 21, 7]


Before reduction : 
 pending  : []
 solution : [9, 21, 7]

Essensial at level 11 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 0), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, 0), (30, 0), (31, 0), (32, -1), (33, 0), (34, -1), (35, -1), (36, -1), (37, 0), (38, 0), (39, -1), (40, -1), (41, 0), (42, 0), (43, 0), (44, -1), (45, -1), (46, -1), (47, 0), (48, 0), (49, 0), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 11 : set()

After reduction : 
 pending  : []
 solution : [9, 21, 7]


Solution : [9, 21, 7] has cost 17.


Before backtrack at level 11
 pending : []
 solution : [9, 21, 7]

After backtrack at level 11
 pending : [7, 5, 29, 31, 37, 42, 43, 47, 48, 49, 41, 38, 30, 33]
 solution : [9, 21]


Before backtrack at level 10
 pending : [7, 5, 29, 31, 37, 42, 43, 47, 48, 49, 41, 38, 30, 33]
 solution : [9, 21]

After backtrack at level 10
 pending : [7, 5, 29, 31, 37, 42, 43, 47, 48, 49, 41, 38, 30, 33, 23]
 solution : [9, 21]


Before backtrack at level 9
 pending : [7, 5, 29, 31, 37, 42, 43, 47, 48, 49, 41, 38, 30, 33, 23]
 solution : [9, 21]

After backtrack at level 9
 pending : [7, 5, 29, 31, 37, 42, 43, 47, 48, 49, 41, 38, 30, 33, 23, 27, 39, 3, 19, 16, 22, 15, 18, 14, 17, 24]
 solution : [9, 21]


Invert decision for 21 at level 8


New level: 9
 pending : [7, 5, 29, 31, 37, 42, 43, 47, 48, 49, 41, 38, 30, 33, 23, 27, 39, 3, 19, 16, 22, 15, 18, 14, 17, 24]
 solution : [9]


Before reduction : 
 pending  : [7, 5, 29, 31, 37, 42, 43, 47, 48, 49, 41, 38, 30, 33, 23, 27, 39, 3, 19, 16, 22, 15, 18, 14, 17, 24]
 solution : [9]

Essensial at level 9 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 1048576), (4, -1), (5, 1048576), (6, -1), (7, 134217728), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 16777216), (15, 8388608), (16, 524288), (17, 67108864), (18, 33554432), (19, 1114112), (20, -1), (21, -1), (22, 262144), (23, 134217728), (24, 1073741824), (25, -1), (26, -1), (27, 4194304), (28, -1), (29, 1048576), (30, 4194304), (31, 16384), (32, -1), (33, 32768), (34, -1), (35, -1), (36, -1), (37, 16384), (38, 268435456), (39, 4194304), (40, -1), (41, 134217728), (42, 524288), (43, 524288), (44, -1), (45, -1), (46, -1), (47, 67108864), (48, 16777216), (49, 67108864), (50, -1), (51, -1), (52, -1)]

Covered at level 9 : set()

After reduction : 
 pending  : [7, 5, 29, 31, 37, 42, 43, 47, 48, 49, 41, 38, 30, 33, 23, 27, 39, 3, 19, 16, 22, 15, 18, 14, 17, 24]
 solution : [9]


Solution : [9] has cost 6.


Decide in level 9 among pending : [7, 5, 29, 31, 37, 42, 43, 47, 48, 49, 41, 38, 30, 33, 23, 27, 39, 3, 19, 16, 22, 15, 18, 14, 17, 24]

Coverage : [(0, -1), (1, -1), (2, -1), (3, 1048576), (4, -1), (5, 1048576), (6, -1), (7, 134217728), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 16777216), (15, 8388608), (16, 524288), (17, 67108864), (18, 33554432), (19, 1114112), (20, -1), (21, -1), (22, 262144), (23, 134217728), (24, 1073741824), (25, -1), (26, -1), (27, 4194304), (28, -1), (29, 1048576), (30, 4194304), (31, 16384), (32, -1), (33, 32768), (34, -1), (35, -1), (36, -1), (37, 16384), (38, 268435456), (39, 4194304), (40, -1), (41, 134217728), (42, 524288), (43, 524288), (44, -1), (45, -1), (46, -1), (47, 67108864), (48, 16777216), (49, 67108864), (50, -1), (51, -1), (52, -1)]

Decide 24 with phase True at level 9

After decision at level 9
 pending : [7, 5, 29, 31, 37, 42, 43, 47, 48, 49, 41, 38, 30, 33, 23, 27, 39, 3, 19, 16, 22, 15, 18, 14, 17]
 solution : [9, 24]


New level: 10
 pending : [7, 5, 29, 31, 37, 42, 43, 47, 48, 49, 41, 38, 30, 33, 23, 27, 39, 3, 19, 16, 22, 15, 18, 14, 17]
 solution : [9, 24]


Before reduction : 
 pending  : [7, 5, 29, 31, 37, 42, 43, 47, 48, 49, 41, 38, 30, 33, 23, 27, 39, 3, 19, 16, 22, 15, 18, 14, 17]
 solution : [9, 24]

Essensial at level 10 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 1048576), (4, -1), (5, 1048576), (6, -1), (7, 134217728), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 16777216), (15, 8388608), (16, 524288), (17, 67108864), (18, 33554432), (19, 1114112), (20, -1), (21, -1), (22, 262144), (23, 134217728), (24, 1073741824), (25, -1), (26, -1), (27, 4194304), (28, -1), (29, 1048576), (30, 4194304), (31, 16384), (32, -1), (33, 32768), (34, -1), (35, -1), (36, -1), (37, 16384), (38, 268435456), (39, 4194304), (40, -1), (41, 134217728), (42, 524288), (43, 524288), (44, -1), (45, -1), (46, -1), (47, 67108864), (48, 16777216), (49, 67108864), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 1048576), (4, -1), (5, 262144), (6, -1), (7, 33554432), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 16777216), (15, 8388608), (16, 524288), (17, 67108864), (18, 33554432), (19, 1114112), (20, -1), (21, -1), (22, 262144), (23, 33554432), (24, -1), (25, -1), (26, -1), (27, 4194304), (28, -1), (29, 262144), (30, 0), (31, 4096), (32, -1), (33, 0), (34, -1), (35, -1), (36, -1), (37, 4096), (38, 134217728), (39, 4194304), (40, -1), (41, 67108864), (42, 131072), (43, 131072), (44, -1), (45, -1), (46, -1), (47, 16777216), (48, 4194304), (49, 33554432), (50, -1), (51, -1), (52, -1)]

Covered at level 10 : {33, 30}

After reduction : 
 pending  : [7, 5, 29, 31, 37, 42, 43, 47, 48, 49, 41, 38, 23, 27, 39, 3, 19, 16, 22, 15, 18, 14, 17]
 solution : [9, 24]


Before reduction : 
 pending  : [7, 5, 29, 31, 37, 42, 43, 47, 48, 49, 41, 38, 23, 27, 39, 3, 19, 16, 22, 15, 18, 14, 17]
 solution : [9, 24]

Essensial at level 10 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 1048576), (4, -1), (5, 262144), (6, -1), (7, 33554432), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 16777216), (15, 8388608), (16, 524288), (17, 67108864), (18, 33554432), (19, 1114112), (20, -1), (21, -1), (22, 262144), (23, 33554432), (24, -1), (25, -1), (26, -1), (27, 4194304), (28, -1), (29, 262144), (30, 0), (31, 4096), (32, -1), (33, 0), (34, -1), (35, -1), (36, -1), (37, 4096), (38, 134217728), (39, 4194304), (40, -1), (41, 67108864), (42, 131072), (43, 131072), (44, -1), (45, -1), (46, -1), (47, 16777216), (48, 4194304), (49, 33554432), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 1048576), (4, -1), (5, 262144), (6, -1), (7, 33554432), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 16777216), (15, 8388608), (16, 524288), (17, 67108864), (18, 33554432), (19, 1114112), (20, -1), (21, -1), (22, 262144), (23, 33554432), (24, -1), (25, -1), (26, -1), (27, 4194304), (28, -1), (29, 262144), (30, -1), (31, 4096), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, 4096), (38, 134217728), (39, 4194304), (40, -1), (41, 67108864), (42, 131072), (43, 131072), (44, -1), (45, -1), (46, -1), (47, 16777216), (48, 4194304), (49, 33554432), (50, -1), (51, -1), (52, -1)]

Covered at level 10 : set()

After reduction : 
 pending  : [7, 5, 29, 31, 37, 42, 43, 47, 48, 49, 41, 38, 23, 27, 39, 3, 19, 16, 22, 15, 18, 14, 17]
 solution : [9, 24]


Solution : [9, 24] has cost 13.


Decide in level 10 among pending : [7, 5, 29, 31, 37, 42, 43, 47, 48, 49, 41, 38, 23, 27, 39, 3, 19, 16, 22, 15, 18, 14, 17]

Coverage : [(0, -1), (1, -1), (2, -1), (3, 1048576), (4, -1), (5, 262144), (6, -1), (7, 33554432), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 16777216), (15, 8388608), (16, 524288), (17, 67108864), (18, 33554432), (19, 1114112), (20, -1), (21, -1), (22, 262144), (23, 33554432), (24, -1), (25, -1), (26, -1), (27, 4194304), (28, -1), (29, 262144), (30, -1), (31, 4096), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, 4096), (38, 134217728), (39, 4194304), (40, -1), (41, 67108864), (42, 131072), (43, 131072), (44, -1), (45, -1), (46, -1), (47, 16777216), (48, 4194304), (49, 33554432), (50, -1), (51, -1), (52, -1)]

Decide 38 with phase True at level 10

After decision at level 10
 pending : [7, 5, 29, 31, 37, 42, 43, 47, 48, 49, 41, 23, 27, 39, 3, 19, 16, 22, 15, 18, 14, 17]
 solution : [9, 24, 38]


New level: 11
 pending : [7, 5, 29, 31, 37, 42, 43, 47, 48, 49, 41, 23, 27, 39, 3, 19, 16, 22, 15, 18, 14, 17]
 solution : [9, 24, 38]


Before reduction : 
 pending  : [7, 5, 29, 31, 37, 42, 43, 47, 48, 49, 41, 23, 27, 39, 3, 19, 16, 22, 15, 18, 14, 17]
 solution : [9, 24, 38]

Essensial at level 11 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 1048576), (4, -1), (5, 262144), (6, -1), (7, 33554432), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 16777216), (15, 8388608), (16, 524288), (17, 67108864), (18, 33554432), (19, 1114112), (20, -1), (21, -1), (22, 262144), (23, 33554432), (24, -1), (25, -1), (26, -1), (27, 4194304), (28, -1), (29, 262144), (30, -1), (31, 4096), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, 4096), (38, 134217728), (39, 4194304), (40, -1), (41, 67108864), (42, 131072), (43, 131072), (44, -1), (45, -1), (46, -1), (47, 16777216), (48, 4194304), (49, 33554432), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 524288), (4, -1), (5, 65536), (6, -1), (7, 8388608), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 16777216), (15, 8388608), (16, 262144), (17, 33554432), (18, 16777216), (19, 540672), (20, -1), (21, -1), (22, 262144), (23, 8388608), (24, -1), (25, -1), (26, -1), (27, 1048576), (28, -1), (29, 65536), (30, -1), (31, 1024), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, 1024), (38, -1), (39, 1048576), (40, -1), (41, 67108864), (42, 32768), (43, 32768), (44, -1), (45, -1), (46, -1), (47, 8388608), (48, 1048576), (49, 33554432), (50, -1), (51, -1), (52, -1)]

Covered at level 11 : set()

After reduction : 
 pending  : [7, 5, 29, 31, 37, 42, 43, 47, 48, 49, 41, 23, 27, 39, 3, 19, 16, 22, 15, 18, 14, 17]
 solution : [9, 24, 38]


Solution : [9, 24, 38] has cost 31.


Before backtrack at level 11
 pending : [7, 5, 29, 31, 37, 42, 43, 47, 48, 49, 41, 23, 27, 39, 3, 19, 16, 22, 15, 18, 14, 17]
 solution : [9, 24, 38]

After backtrack at level 11
 pending : [7, 5, 29, 31, 37, 42, 43, 47, 48, 49, 41, 23, 27, 39, 3, 19, 16, 22, 15, 18, 14, 17]
 solution : [9, 24, 38]


Invert decision for 38 at level 10


New level: 11
 pending : [7, 5, 29, 31, 37, 42, 43, 47, 48, 49, 41, 23, 27, 39, 3, 19, 16, 22, 15, 18, 14, 17]
 solution : [9, 24]


Before reduction : 
 pending  : [7, 5, 29, 31, 37, 42, 43, 47, 48, 49, 41, 23, 27, 39, 3, 19, 16, 22, 15, 18, 14, 17]
 solution : [9, 24]

Essensial at level 11 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 524288), (4, -1), (5, 65536), (6, -1), (7, 8388608), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 16777216), (15, 8388608), (16, 262144), (17, 33554432), (18, 16777216), (19, 540672), (20, -1), (21, -1), (22, 262144), (23, 8388608), (24, -1), (25, -1), (26, -1), (27, 1048576), (28, -1), (29, 65536), (30, -1), (31, 1024), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, 1024), (38, -1), (39, 1048576), (40, -1), (41, 67108864), (42, 32768), (43, 32768), (44, -1), (45, -1), (46, -1), (47, 8388608), (48, 1048576), (49, 33554432), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 1048576), (4, -1), (5, 262144), (6, -1), (7, 33554432), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 16777216), (15, 8388608), (16, 524288), (17, 67108864), (18, 33554432), (19, 1114112), (20, -1), (21, -1), (22, 262144), (23, 33554432), (24, -1), (25, -1), (26, -1), (27, 4194304), (28, -1), (29, 262144), (30, -1), (31, 4096), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, 4096), (38, -1), (39, 4194304), (40, -1), (41, 67108864), (42, 131072), (43, 131072), (44, -1), (45, -1), (46, -1), (47, 16777216), (48, 4194304), (49, 33554432), (50, -1), (51, -1), (52, -1)]

Covered at level 11 : set()

After reduction : 
 pending  : [7, 5, 29, 31, 37, 42, 43, 47, 48, 49, 41, 23, 27, 39, 3, 19, 16, 22, 15, 18, 14, 17]
 solution : [9, 24]


Solution : [9, 24] has cost 13.


Decide in level 11 among pending : [7, 5, 29, 31, 37, 42, 43, 47, 48, 49, 41, 23, 27, 39, 3, 19, 16, 22, 15, 18, 14, 17]

Coverage : [(0, -1), (1, -1), (2, -1), (3, 1048576), (4, -1), (5, 262144), (6, -1), (7, 33554432), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 16777216), (15, 8388608), (16, 524288), (17, 67108864), (18, 33554432), (19, 1114112), (20, -1), (21, -1), (22, 262144), (23, 33554432), (24, -1), (25, -1), (26, -1), (27, 4194304), (28, -1), (29, 262144), (30, -1), (31, 4096), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, 4096), (38, -1), (39, 4194304), (40, -1), (41, 67108864), (42, 131072), (43, 131072), (44, -1), (45, -1), (46, -1), (47, 16777216), (48, 4194304), (49, 33554432), (50, -1), (51, -1), (52, -1)]

Decide 41 with phase True at level 11

After decision at level 11
 pending : [7, 5, 29, 31, 37, 42, 43, 47, 48, 49, 23, 27, 39, 3, 19, 16, 22, 15, 18, 14, 17]
 solution : [9, 24, 41]


New level: 12
 pending : [7, 5, 29, 31, 37, 42, 43, 47, 48, 49, 23, 27, 39, 3, 19, 16, 22, 15, 18, 14, 17]
 solution : [9, 24, 41]


Before reduction : 
 pending  : [7, 5, 29, 31, 37, 42, 43, 47, 48, 49, 23, 27, 39, 3, 19, 16, 22, 15, 18, 14, 17]
 solution : [9, 24, 41]

Essensial at level 12 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 1048576), (4, -1), (5, 262144), (6, -1), (7, 33554432), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 16777216), (15, 8388608), (16, 524288), (17, 67108864), (18, 33554432), (19, 1114112), (20, -1), (21, -1), (22, 262144), (23, 33554432), (24, -1), (25, -1), (26, -1), (27, 4194304), (28, -1), (29, 262144), (30, -1), (31, 4096), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, 4096), (38, -1), (39, 4194304), (40, -1), (41, 67108864), (42, 131072), (43, 131072), (44, -1), (45, -1), (46, -1), (47, 16777216), (48, 4194304), (49, 33554432), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 524288), (4, -1), (5, 0), (6, -1), (7, 4096), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 16777216), (15, 8388608), (16, 524288), (17, 67108864), (18, 33554432), (19, 540672), (20, -1), (21, -1), (22, 262144), (23, 4096), (24, -1), (25, -1), (26, -1), (27, 4194304), (28, -1), (29, 0), (30, -1), (31, 0), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, 0), (38, -1), (39, 4194304), (40, -1), (41, -1), (42, 0), (43, 0), (44, -1), (45, -1), (46, -1), (47, 0), (48, 0), (49, 0), (50, -1), (51, -1), (52, -1)]

Covered at level 12 : {37, 5, 42, 43, 47, 48, 49, 29, 31}

After reduction : 
 pending  : [7, 23, 27, 39, 3, 19, 16, 22, 15, 18, 14, 17]
 solution : [9, 24, 41]


Before reduction : 
 pending  : [7, 23, 27, 39, 3, 19, 16, 22, 15, 18, 14, 17]
 solution : [9, 24, 41]

Essensial at level 12 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 524288), (4, -1), (5, 0), (6, -1), (7, 4096), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 16777216), (15, 8388608), (16, 524288), (17, 67108864), (18, 33554432), (19, 540672), (20, -1), (21, -1), (22, 262144), (23, 4096), (24, -1), (25, -1), (26, -1), (27, 4194304), (28, -1), (29, 0), (30, -1), (31, 0), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, 0), (38, -1), (39, 4194304), (40, -1), (41, -1), (42, 0), (43, 0), (44, -1), (45, -1), (46, -1), (47, 0), (48, 0), (49, 0), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 524288), (4, -1), (5, -1), (6, -1), (7, 4096), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 16777216), (15, 8388608), (16, 524288), (17, 67108864), (18, 33554432), (19, 540672), (20, -1), (21, -1), (22, 262144), (23, 4096), (24, -1), (25, -1), (26, -1), (27, 4194304), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, 4194304), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 12 : set()

After reduction : 
 pending  : [7, 23, 27, 39, 3, 19, 16, 22, 15, 18, 14, 17]
 solution : [9, 24, 41]


Solution : [9, 24, 41] has cost 31.


Before backtrack at level 12
 pending : [7, 23, 27, 39, 3, 19, 16, 22, 15, 18, 14, 17]
 solution : [9, 24, 41]

After backtrack at level 12
 pending : [7, 23, 27, 39, 3, 19, 16, 22, 15, 18, 14, 17, 5, 29, 31, 37, 42, 43, 47, 48, 49]
 solution : [9, 24, 41]


Invert decision for 41 at level 11


New level: 12
 pending : [7, 23, 27, 39, 3, 19, 16, 22, 15, 18, 14, 17, 5, 29, 31, 37, 42, 43, 47, 48, 49]
 solution : [9, 24]


Before reduction : 
 pending  : [7, 23, 27, 39, 3, 19, 16, 22, 15, 18, 14, 17, 5, 29, 31, 37, 42, 43, 47, 48, 49]
 solution : [9, 24]

Essensial at level 12 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 524288), (4, -1), (5, -1), (6, -1), (7, 4096), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 16777216), (15, 8388608), (16, 524288), (17, 67108864), (18, 33554432), (19, 540672), (20, -1), (21, -1), (22, 262144), (23, 4096), (24, -1), (25, -1), (26, -1), (27, 4194304), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, 4194304), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 1048576), (4, -1), (5, 262144), (6, -1), (7, 33554432), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 16777216), (15, 8388608), (16, 524288), (17, 67108864), (18, 33554432), (19, 1114112), (20, -1), (21, -1), (22, 262144), (23, 33554432), (24, -1), (25, -1), (26, -1), (27, 4194304), (28, -1), (29, 262144), (30, -1), (31, 4096), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, 4096), (38, -1), (39, 4194304), (40, -1), (41, -1), (42, 131072), (43, 131072), (44, -1), (45, -1), (46, -1), (47, 16777216), (48, 4194304), (49, 33554432), (50, -1), (51, -1), (52, -1)]

Covered at level 12 : set()

After reduction : 
 pending  : [7, 23, 27, 39, 3, 19, 16, 22, 15, 18, 14, 17, 5, 29, 31, 37, 42, 43, 47, 48, 49]
 solution : [9, 24]


Solution : [9, 24] has cost 13.


Decide in level 12 among pending : [7, 23, 27, 39, 3, 19, 16, 22, 15, 18, 14, 17, 5, 29, 31, 37, 42, 43, 47, 48, 49]

Coverage : [(0, -1), (1, -1), (2, -1), (3, 1048576), (4, -1), (5, 262144), (6, -1), (7, 33554432), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 16777216), (15, 8388608), (16, 524288), (17, 67108864), (18, 33554432), (19, 1114112), (20, -1), (21, -1), (22, 262144), (23, 33554432), (24, -1), (25, -1), (26, -1), (27, 4194304), (28, -1), (29, 262144), (30, -1), (31, 4096), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, 4096), (38, -1), (39, 4194304), (40, -1), (41, -1), (42, 131072), (43, 131072), (44, -1), (45, -1), (46, -1), (47, 16777216), (48, 4194304), (49, 33554432), (50, -1), (51, -1), (52, -1)]

Decide 17 with phase True at level 12

After decision at level 12
 pending : [7, 23, 27, 39, 3, 19, 16, 22, 15, 18, 14, 5, 29, 31, 37, 42, 43, 47, 48, 49]
 solution : [9, 24, 17]


New level: 13
 pending : [7, 23, 27, 39, 3, 19, 16, 22, 15, 18, 14, 5, 29, 31, 37, 42, 43, 47, 48, 49]
 solution : [9, 24, 17]


Before reduction : 
 pending  : [7, 23, 27, 39, 3, 19, 16, 22, 15, 18, 14, 5, 29, 31, 37, 42, 43, 47, 48, 49]
 solution : [9, 24, 17]

Essensial at level 13 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 1048576), (4, -1), (5, 262144), (6, -1), (7, 33554432), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 16777216), (15, 8388608), (16, 524288), (17, 67108864), (18, 33554432), (19, 1114112), (20, -1), (21, -1), (22, 262144), (23, 33554432), (24, -1), (25, -1), (26, -1), (27, 4194304), (28, -1), (29, 262144), (30, -1), (31, 4096), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, 4096), (38, -1), (39, 4194304), (40, -1), (41, -1), (42, 131072), (43, 131072), (44, -1), (45, -1), (46, -1), (47, 16777216), (48, 4194304), (49, 33554432), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 0), (4, -1), (5, 65536), (6, -1), (7, 33554432), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 262144), (15, 65536), (16, 0), (17, -1), (18, 0), (19, 0), (20, -1), (21, -1), (22, 65536), (23, 33554432), (24, -1), (25, -1), (26, -1), (27, 4096), (28, -1), (29, 131072), (30, -1), (31, 1024), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, 512), (38, -1), (39, 4096), (40, -1), (41, -1), (42, 65536), (43, 65536), (44, -1), (45, -1), (46, -1), (47, 16777216), (48, 4194304), (49, 33554432), (50, -1), (51, -1), (52, -1)]

Covered at level 13 : {19, 16, 18, 3}

After reduction : 
 pending  : [7, 23, 27, 39, 22, 15, 14, 5, 29, 31, 37, 42, 43, 47, 48, 49]
 solution : [9, 24, 17]


Before reduction : 
 pending  : [7, 23, 27, 39, 22, 15, 14, 5, 29, 31, 37, 42, 43, 47, 48, 49]
 solution : [9, 24, 17]

Essensial at level 13 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 0), (4, -1), (5, 65536), (6, -1), (7, 33554432), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 262144), (15, 65536), (16, 0), (17, -1), (18, 0), (19, 0), (20, -1), (21, -1), (22, 65536), (23, 33554432), (24, -1), (25, -1), (26, -1), (27, 4096), (28, -1), (29, 131072), (30, -1), (31, 1024), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, 512), (38, -1), (39, 4096), (40, -1), (41, -1), (42, 65536), (43, 65536), (44, -1), (45, -1), (46, -1), (47, 16777216), (48, 4194304), (49, 33554432), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 65536), (6, -1), (7, 33554432), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 262144), (15, 65536), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, 65536), (23, 33554432), (24, -1), (25, -1), (26, -1), (27, 4096), (28, -1), (29, 131072), (30, -1), (31, 1024), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, 512), (38, -1), (39, 4096), (40, -1), (41, -1), (42, 65536), (43, 65536), (44, -1), (45, -1), (46, -1), (47, 16777216), (48, 4194304), (49, 33554432), (50, -1), (51, -1), (52, -1)]

Covered at level 13 : set()

After reduction : 
 pending  : [7, 23, 27, 39, 22, 15, 14, 5, 29, 31, 37, 42, 43, 47, 48, 49]
 solution : [9, 24, 17]


Solution : [9, 24, 17] has cost 22.


Before backtrack at level 13
 pending : [7, 23, 27, 39, 22, 15, 14, 5, 29, 31, 37, 42, 43, 47, 48, 49]
 solution : [9, 24, 17]

After backtrack at level 13
 pending : [7, 23, 27, 39, 22, 15, 14, 5, 29, 31, 37, 42, 43, 47, 48, 49, 3, 19, 16, 18]
 solution : [9, 24, 17]


Invert decision for 17 at level 12


New level: 13
 pending : [7, 23, 27, 39, 22, 15, 14, 5, 29, 31, 37, 42, 43, 47, 48, 49, 3, 19, 16, 18]
 solution : [9, 24]


Before reduction : 
 pending  : [7, 23, 27, 39, 22, 15, 14, 5, 29, 31, 37, 42, 43, 47, 48, 49, 3, 19, 16, 18]
 solution : [9, 24]

Essensial at level 13 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 65536), (6, -1), (7, 33554432), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 262144), (15, 65536), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, 65536), (23, 33554432), (24, -1), (25, -1), (26, -1), (27, 4096), (28, -1), (29, 131072), (30, -1), (31, 1024), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, 512), (38, -1), (39, 4096), (40, -1), (41, -1), (42, 65536), (43, 65536), (44, -1), (45, -1), (46, -1), (47, 16777216), (48, 4194304), (49, 33554432), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 1048576), (4, -1), (5, 262144), (6, -1), (7, 33554432), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 16777216), (15, 8388608), (16, 524288), (17, -1), (18, 33554432), (19, 1114112), (20, -1), (21, -1), (22, 262144), (23, 33554432), (24, -1), (25, -1), (26, -1), (27, 4194304), (28, -1), (29, 262144), (30, -1), (31, 4096), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, 4096), (38, -1), (39, 4194304), (40, -1), (41, -1), (42, 131072), (43, 131072), (44, -1), (45, -1), (46, -1), (47, 16777216), (48, 4194304), (49, 33554432), (50, -1), (51, -1), (52, -1)]

Covered at level 13 : set()

After reduction : 
 pending  : [7, 23, 27, 39, 22, 15, 14, 5, 29, 31, 37, 42, 43, 47, 48, 49, 3, 19, 16, 18]
 solution : [9, 24]


Solution : [9, 24] has cost 13.


Decide in level 13 among pending : [7, 23, 27, 39, 22, 15, 14, 5, 29, 31, 37, 42, 43, 47, 48, 49, 3, 19, 16, 18]

Coverage : [(0, -1), (1, -1), (2, -1), (3, 1048576), (4, -1), (5, 262144), (6, -1), (7, 33554432), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 16777216), (15, 8388608), (16, 524288), (17, -1), (18, 33554432), (19, 1114112), (20, -1), (21, -1), (22, 262144), (23, 33554432), (24, -1), (25, -1), (26, -1), (27, 4194304), (28, -1), (29, 262144), (30, -1), (31, 4096), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, 4096), (38, -1), (39, 4194304), (40, -1), (41, -1), (42, 131072), (43, 131072), (44, -1), (45, -1), (46, -1), (47, 16777216), (48, 4194304), (49, 33554432), (50, -1), (51, -1), (52, -1)]

Decide 7 with phase True at level 13

After decision at level 13
 pending : [23, 27, 39, 22, 15, 14, 5, 29, 31, 37, 42, 43, 47, 48, 49, 3, 19, 16, 18]
 solution : [9, 24, 7]


New level: 14
 pending : [23, 27, 39, 22, 15, 14, 5, 29, 31, 37, 42, 43, 47, 48, 49, 3, 19, 16, 18]
 solution : [9, 24, 7]


Before reduction : 
 pending  : [23, 27, 39, 22, 15, 14, 5, 29, 31, 37, 42, 43, 47, 48, 49, 3, 19, 16, 18]
 solution : [9, 24, 7]

Essensial at level 14 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 1048576), (4, -1), (5, 262144), (6, -1), (7, 33554432), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 16777216), (15, 8388608), (16, 524288), (17, -1), (18, 33554432), (19, 1114112), (20, -1), (21, -1), (22, 262144), (23, 33554432), (24, -1), (25, -1), (26, -1), (27, 4194304), (28, -1), (29, 262144), (30, -1), (31, 4096), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, 4096), (38, -1), (39, 4194304), (40, -1), (41, -1), (42, 131072), (43, 131072), (44, -1), (45, -1), (46, -1), (47, 16777216), (48, 4194304), (49, 33554432), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 524288), (4, -1), (5, 0), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 16777216), (15, 8388608), (16, 262144), (17, -1), (18, 16777216), (19, 540672), (20, -1), (21, -1), (22, 262144), (23, 0), (24, -1), (25, -1), (26, -1), (27, 2097152), (28, -1), (29, 0), (30, -1), (31, 0), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, 0), (38, -1), (39, 2097152), (40, -1), (41, -1), (42, 0), (43, 0), (44, -1), (45, -1), (46, -1), (47, 0), (48, 0), (49, 0), (50, -1), (51, -1), (52, -1)]

Covered at level 14 : {37, 5, 42, 43, 47, 48, 49, 23, 29, 31}

After reduction : 
 pending  : [27, 39, 22, 15, 14, 3, 19, 16, 18]
 solution : [9, 24, 7]


Before reduction : 
 pending  : [27, 39, 22, 15, 14, 3, 19, 16, 18]
 solution : [9, 24, 7]

Essensial at level 14 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 524288), (4, -1), (5, 0), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 16777216), (15, 8388608), (16, 262144), (17, -1), (18, 16777216), (19, 540672), (20, -1), (21, -1), (22, 262144), (23, 0), (24, -1), (25, -1), (26, -1), (27, 2097152), (28, -1), (29, 0), (30, -1), (31, 0), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, 0), (38, -1), (39, 2097152), (40, -1), (41, -1), (42, 0), (43, 0), (44, -1), (45, -1), (46, -1), (47, 0), (48, 0), (49, 0), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 524288), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 16777216), (15, 8388608), (16, 262144), (17, -1), (18, 16777216), (19, 540672), (20, -1), (21, -1), (22, 262144), (23, -1), (24, -1), (25, -1), (26, -1), (27, 2097152), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, 2097152), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 14 : set()

After reduction : 
 pending  : [27, 39, 22, 15, 14, 3, 19, 16, 18]
 solution : [9, 24, 7]


Solution : [9, 24, 7] has cost 17.


Before backtrack at level 14
 pending : [27, 39, 22, 15, 14, 3, 19, 16, 18]
 solution : [9, 24, 7]

After backtrack at level 14
 pending : [27, 39, 22, 15, 14, 3, 19, 16, 18, 23, 5, 29, 31, 37, 42, 43, 47, 48, 49]
 solution : [9, 24, 7]


Invert decision for 7 at level 13


New level: 14
 pending : [27, 39, 22, 15, 14, 3, 19, 16, 18, 23, 5, 29, 31, 37, 42, 43, 47, 48, 49]
 solution : [9, 24]


Before reduction : 
 pending  : [27, 39, 22, 15, 14, 3, 19, 16, 18, 23, 5, 29, 31, 37, 42, 43, 47, 48, 49]
 solution : [9, 24]

Essensial at level 14 : {23}

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 524288), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 16777216), (15, 8388608), (16, 262144), (17, -1), (18, 16777216), (19, 540672), (20, -1), (21, -1), (22, 262144), (23, -1), (24, -1), (25, -1), (26, -1), (27, 2097152), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, 2097152), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 524288), (4, -1), (5, 0), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 16777216), (15, 8388608), (16, 262144), (17, -1), (18, 16777216), (19, 540672), (20, -1), (21, -1), (22, 262144), (23, -1), (24, -1), (25, -1), (26, -1), (27, 2097152), (28, -1), (29, 0), (30, -1), (31, 0), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, 0), (38, -1), (39, 2097152), (40, -1), (41, -1), (42, 0), (43, 0), (44, -1), (45, -1), (46, -1), (47, 0), (48, 0), (49, 0), (50, -1), (51, -1), (52, -1)]

Covered at level 14 : {37, 5, 42, 43, 47, 48, 49, 29, 31}

After reduction : 
 pending  : [27, 39, 22, 15, 14, 3, 19, 16, 18]
 solution : [9, 24, 23]


Before reduction : 
 pending  : [27, 39, 22, 15, 14, 3, 19, 16, 18]
 solution : [9, 24, 23]

Essensial at level 14 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 524288), (4, -1), (5, 0), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 16777216), (15, 8388608), (16, 262144), (17, -1), (18, 16777216), (19, 540672), (20, -1), (21, -1), (22, 262144), (23, -1), (24, -1), (25, -1), (26, -1), (27, 2097152), (28, -1), (29, 0), (30, -1), (31, 0), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, 0), (38, -1), (39, 2097152), (40, -1), (41, -1), (42, 0), (43, 0), (44, -1), (45, -1), (46, -1), (47, 0), (48, 0), (49, 0), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 524288), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 16777216), (15, 8388608), (16, 262144), (17, -1), (18, 16777216), (19, 540672), (20, -1), (21, -1), (22, 262144), (23, -1), (24, -1), (25, -1), (26, -1), (27, 2097152), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, 2097152), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 14 : set()

After reduction : 
 pending  : [27, 39, 22, 15, 14, 3, 19, 16, 18]
 solution : [9, 24, 23]


Solution : [9, 24, 23] has cost 20.


Before backtrack at level 14
 pending : [27, 39, 22, 15, 14, 3, 19, 16, 18]
 solution : [9, 24, 23]

After backtrack at level 14
 pending : [27, 39, 22, 15, 14, 3, 19, 16, 18, 23, 5, 29, 31, 37, 42, 43, 47, 48, 49]
 solution : [9, 24]


Before backtrack at level 13
 pending : [27, 39, 22, 15, 14, 3, 19, 16, 18, 23, 5, 29, 31, 37, 42, 43, 47, 48, 49]
 solution : [9, 24]

After backtrack at level 13
 pending : [27, 39, 22, 15, 14, 3, 19, 16, 18, 23, 5, 29, 31, 37, 42, 43, 47, 48, 49, 7]
 solution : [9, 24]


Before backtrack at level 12
 pending : [27, 39, 22, 15, 14, 3, 19, 16, 18, 23, 5, 29, 31, 37, 42, 43, 47, 48, 49, 7]
 solution : [9, 24]

After backtrack at level 12
 pending : [27, 39, 22, 15, 14, 3, 19, 16, 18, 23, 5, 29, 31, 37, 42, 43, 47, 48, 49, 7, 17]
 solution : [9, 24]


Before backtrack at level 11
 pending : [27, 39, 22, 15, 14, 3, 19, 16, 18, 23, 5, 29, 31, 37, 42, 43, 47, 48, 49, 7, 17]
 solution : [9, 24]

After backtrack at level 11
 pending : [27, 39, 22, 15, 14, 3, 19, 16, 18, 23, 5, 29, 31, 37, 42, 43, 47, 48, 49, 7, 17, 41]
 solution : [9, 24]


Before backtrack at level 10
 pending : [27, 39, 22, 15, 14, 3, 19, 16, 18, 23, 5, 29, 31, 37, 42, 43, 47, 48, 49, 7, 17, 41]
 solution : [9, 24]

After backtrack at level 10
 pending : [27, 39, 22, 15, 14, 3, 19, 16, 18, 23, 5, 29, 31, 37, 42, 43, 47, 48, 49, 7, 17, 41, 30, 33, 38]
 solution : [9, 24]


Invert decision for 24 at level 9


New level: 10
 pending : [27, 39, 22, 15, 14, 3, 19, 16, 18, 23, 5, 29, 31, 37, 42, 43, 47, 48, 49, 7, 17, 41, 30, 33, 38]
 solution : [9]


Before reduction : 
 pending  : [27, 39, 22, 15, 14, 3, 19, 16, 18, 23, 5, 29, 31, 37, 42, 43, 47, 48, 49, 7, 17, 41, 30, 33, 38]
 solution : [9]

Essensial at level 10 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 524288), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 16777216), (15, 8388608), (16, 262144), (17, -1), (18, 16777216), (19, 540672), (20, -1), (21, -1), (22, 262144), (23, -1), (24, -1), (25, -1), (26, -1), (27, 2097152), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, 2097152), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 1048576), (4, -1), (5, 1048576), (6, -1), (7, 134217728), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 16777216), (15, 8388608), (16, 524288), (17, 67108864), (18, 33554432), (19, 1114112), (20, -1), (21, -1), (22, 262144), (23, 134217728), (24, -1), (25, -1), (26, -1), (27, 4194304), (28, -1), (29, 1048576), (30, 4194304), (31, 16384), (32, -1), (33, 32768), (34, -1), (35, -1), (36, -1), (37, 16384), (38, 268435456), (39, 4194304), (40, -1), (41, 134217728), (42, 524288), (43, 524288), (44, -1), (45, -1), (46, -1), (47, 67108864), (48, 16777216), (49, 67108864), (50, -1), (51, -1), (52, -1)]

Covered at level 10 : set()

After reduction : 
 pending  : [27, 39, 22, 15, 14, 3, 19, 16, 18, 23, 5, 29, 31, 37, 42, 43, 47, 48, 49, 7, 17, 41, 30, 33, 38]
 solution : [9]


Solution : [9] has cost 6.


Decide in level 10 among pending : [27, 39, 22, 15, 14, 3, 19, 16, 18, 23, 5, 29, 31, 37, 42, 43, 47, 48, 49, 7, 17, 41, 30, 33, 38]

Coverage : [(0, -1), (1, -1), (2, -1), (3, 1048576), (4, -1), (5, 1048576), (6, -1), (7, 134217728), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 16777216), (15, 8388608), (16, 524288), (17, 67108864), (18, 33554432), (19, 1114112), (20, -1), (21, -1), (22, 262144), (23, 134217728), (24, -1), (25, -1), (26, -1), (27, 4194304), (28, -1), (29, 1048576), (30, 4194304), (31, 16384), (32, -1), (33, 32768), (34, -1), (35, -1), (36, -1), (37, 16384), (38, 268435456), (39, 4194304), (40, -1), (41, 134217728), (42, 524288), (43, 524288), (44, -1), (45, -1), (46, -1), (47, 67108864), (48, 16777216), (49, 67108864), (50, -1), (51, -1), (52, -1)]

Decide 38 with phase True at level 10

After decision at level 10
 pending : [27, 39, 22, 15, 14, 3, 19, 16, 18, 23, 5, 29, 31, 37, 42, 43, 47, 48, 49, 7, 17, 41, 30, 33]
 solution : [9, 38]


New level: 11
 pending : [27, 39, 22, 15, 14, 3, 19, 16, 18, 23, 5, 29, 31, 37, 42, 43, 47, 48, 49, 7, 17, 41, 30, 33]
 solution : [9, 38]


Before reduction : 
 pending  : [27, 39, 22, 15, 14, 3, 19, 16, 18, 23, 5, 29, 31, 37, 42, 43, 47, 48, 49, 7, 17, 41, 30, 33]
 solution : [9, 38]

Essensial at level 11 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 1048576), (4, -1), (5, 1048576), (6, -1), (7, 134217728), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 16777216), (15, 8388608), (16, 524288), (17, 67108864), (18, 33554432), (19, 1114112), (20, -1), (21, -1), (22, 262144), (23, 134217728), (24, -1), (25, -1), (26, -1), (27, 4194304), (28, -1), (29, 1048576), (30, 4194304), (31, 16384), (32, -1), (33, 32768), (34, -1), (35, -1), (36, -1), (37, 16384), (38, 268435456), (39, 4194304), (40, -1), (41, 134217728), (42, 524288), (43, 524288), (44, -1), (45, -1), (46, -1), (47, 67108864), (48, 16777216), (49, 67108864), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 524288), (4, -1), (5, 262144), (6, -1), (7, 33554432), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 16777216), (15, 8388608), (16, 262144), (17, 33554432), (18, 16777216), (19, 540672), (20, -1), (21, -1), (22, 262144), (23, 33554432), (24, -1), (25, -1), (26, -1), (27, 1048576), (28, -1), (29, 262144), (30, 4194304), (31, 4096), (32, -1), (33, 8192), (34, -1), (35, -1), (36, -1), (37, 4096), (38, -1), (39, 1048576), (40, -1), (41, 134217728), (42, 131072), (43, 131072), (44, -1), (45, -1), (46, -1), (47, 33554432), (48, 4194304), (49, 67108864), (50, -1), (51, -1), (52, -1)]

Covered at level 11 : set()

After reduction : 
 pending  : [27, 39, 22, 15, 14, 3, 19, 16, 18, 23, 5, 29, 31, 37, 42, 43, 47, 48, 49, 7, 17, 41, 30, 33]
 solution : [9, 38]


Solution : [9, 38] has cost 24.


Before backtrack at level 11
 pending : [27, 39, 22, 15, 14, 3, 19, 16, 18, 23, 5, 29, 31, 37, 42, 43, 47, 48, 49, 7, 17, 41, 30, 33]
 solution : [9, 38]

After backtrack at level 11
 pending : [27, 39, 22, 15, 14, 3, 19, 16, 18, 23, 5, 29, 31, 37, 42, 43, 47, 48, 49, 7, 17, 41, 30, 33]
 solution : [9, 38]


Invert decision for 38 at level 10


New level: 11
 pending : [27, 39, 22, 15, 14, 3, 19, 16, 18, 23, 5, 29, 31, 37, 42, 43, 47, 48, 49, 7, 17, 41, 30, 33]
 solution : [9]


Before reduction : 
 pending  : [27, 39, 22, 15, 14, 3, 19, 16, 18, 23, 5, 29, 31, 37, 42, 43, 47, 48, 49, 7, 17, 41, 30, 33]
 solution : [9]

Essensial at level 11 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 524288), (4, -1), (5, 262144), (6, -1), (7, 33554432), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 16777216), (15, 8388608), (16, 262144), (17, 33554432), (18, 16777216), (19, 540672), (20, -1), (21, -1), (22, 262144), (23, 33554432), (24, -1), (25, -1), (26, -1), (27, 1048576), (28, -1), (29, 262144), (30, 4194304), (31, 4096), (32, -1), (33, 8192), (34, -1), (35, -1), (36, -1), (37, 4096), (38, -1), (39, 1048576), (40, -1), (41, 134217728), (42, 131072), (43, 131072), (44, -1), (45, -1), (46, -1), (47, 33554432), (48, 4194304), (49, 67108864), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 1048576), (4, -1), (5, 1048576), (6, -1), (7, 134217728), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 16777216), (15, 8388608), (16, 524288), (17, 67108864), (18, 33554432), (19, 1114112), (20, -1), (21, -1), (22, 262144), (23, 134217728), (24, -1), (25, -1), (26, -1), (27, 4194304), (28, -1), (29, 1048576), (30, 4194304), (31, 16384), (32, -1), (33, 32768), (34, -1), (35, -1), (36, -1), (37, 16384), (38, -1), (39, 4194304), (40, -1), (41, 134217728), (42, 524288), (43, 524288), (44, -1), (45, -1), (46, -1), (47, 67108864), (48, 16777216), (49, 67108864), (50, -1), (51, -1), (52, -1)]

Covered at level 11 : set()

After reduction : 
 pending  : [27, 39, 22, 15, 14, 3, 19, 16, 18, 23, 5, 29, 31, 37, 42, 43, 47, 48, 49, 7, 17, 41, 30, 33]
 solution : [9]


Solution : [9] has cost 6.


Decide in level 11 among pending : [27, 39, 22, 15, 14, 3, 19, 16, 18, 23, 5, 29, 31, 37, 42, 43, 47, 48, 49, 7, 17, 41, 30, 33]

Coverage : [(0, -1), (1, -1), (2, -1), (3, 1048576), (4, -1), (5, 1048576), (6, -1), (7, 134217728), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 16777216), (15, 8388608), (16, 524288), (17, 67108864), (18, 33554432), (19, 1114112), (20, -1), (21, -1), (22, 262144), (23, 134217728), (24, -1), (25, -1), (26, -1), (27, 4194304), (28, -1), (29, 1048576), (30, 4194304), (31, 16384), (32, -1), (33, 32768), (34, -1), (35, -1), (36, -1), (37, 16384), (38, -1), (39, 4194304), (40, -1), (41, 134217728), (42, 524288), (43, 524288), (44, -1), (45, -1), (46, -1), (47, 67108864), (48, 16777216), (49, 67108864), (50, -1), (51, -1), (52, -1)]

Decide 23 with phase True at level 11

After decision at level 11
 pending : [27, 39, 22, 15, 14, 3, 19, 16, 18, 5, 29, 31, 37, 42, 43, 47, 48, 49, 7, 17, 41, 30, 33]
 solution : [9, 23]


New level: 12
 pending : [27, 39, 22, 15, 14, 3, 19, 16, 18, 5, 29, 31, 37, 42, 43, 47, 48, 49, 7, 17, 41, 30, 33]
 solution : [9, 23]


Before reduction : 
 pending  : [27, 39, 22, 15, 14, 3, 19, 16, 18, 5, 29, 31, 37, 42, 43, 47, 48, 49, 7, 17, 41, 30, 33]
 solution : [9, 23]

Essensial at level 12 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 1048576), (4, -1), (5, 1048576), (6, -1), (7, 134217728), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 16777216), (15, 8388608), (16, 524288), (17, 67108864), (18, 33554432), (19, 1114112), (20, -1), (21, -1), (22, 262144), (23, 134217728), (24, -1), (25, -1), (26, -1), (27, 4194304), (28, -1), (29, 1048576), (30, 4194304), (31, 16384), (32, -1), (33, 32768), (34, -1), (35, -1), (36, -1), (37, 16384), (38, -1), (39, 4194304), (40, -1), (41, 134217728), (42, 524288), (43, 524288), (44, -1), (45, -1), (46, -1), (47, 67108864), (48, 16777216), (49, 67108864), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 524288), (4, -1), (5, 0), (6, -1), (7, 0), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 16777216), (15, 8388608), (16, 262144), (17, 33554432), (18, 16777216), (19, 540672), (20, -1), (21, -1), (22, 262144), (23, -1), (24, -1), (25, -1), (26, -1), (27, 2097152), (28, -1), (29, 0), (30, 0), (31, 0), (32, -1), (33, 0), (34, -1), (35, -1), (36, -1), (37, 0), (38, -1), (39, 2097152), (40, -1), (41, 0), (42, 0), (43, 0), (44, -1), (45, -1), (46, -1), (47, 0), (48, 0), (49, 0), (50, -1), (51, -1), (52, -1)]

Covered at level 12 : {33, 37, 5, 7, 41, 42, 43, 47, 48, 49, 29, 30, 31}

After reduction : 
 pending  : [27, 39, 22, 15, 14, 3, 19, 16, 18, 17]
 solution : [9, 23]


Before reduction : 
 pending  : [27, 39, 22, 15, 14, 3, 19, 16, 18, 17]
 solution : [9, 23]

Essensial at level 12 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 524288), (4, -1), (5, 0), (6, -1), (7, 0), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 16777216), (15, 8388608), (16, 262144), (17, 33554432), (18, 16777216), (19, 540672), (20, -1), (21, -1), (22, 262144), (23, -1), (24, -1), (25, -1), (26, -1), (27, 2097152), (28, -1), (29, 0), (30, 0), (31, 0), (32, -1), (33, 0), (34, -1), (35, -1), (36, -1), (37, 0), (38, -1), (39, 2097152), (40, -1), (41, 0), (42, 0), (43, 0), (44, -1), (45, -1), (46, -1), (47, 0), (48, 0), (49, 0), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 524288), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 16777216), (15, 8388608), (16, 262144), (17, 33554432), (18, 16777216), (19, 540672), (20, -1), (21, -1), (22, 262144), (23, -1), (24, -1), (25, -1), (26, -1), (27, 2097152), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, 2097152), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 12 : set()

After reduction : 
 pending  : [27, 39, 22, 15, 14, 3, 19, 16, 18, 17]
 solution : [9, 23]


Solution : [9, 23] has cost 13.


Decide in level 12 among pending : [27, 39, 22, 15, 14, 3, 19, 16, 18, 17]

Coverage : [(0, -1), (1, -1), (2, -1), (3, 524288), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 16777216), (15, 8388608), (16, 262144), (17, 33554432), (18, 16777216), (19, 540672), (20, -1), (21, -1), (22, 262144), (23, -1), (24, -1), (25, -1), (26, -1), (27, 2097152), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, 2097152), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Decide 17 with phase True at level 12

After decision at level 12
 pending : [27, 39, 22, 15, 14, 3, 19, 16, 18]
 solution : [9, 23, 17]


New level: 13
 pending : [27, 39, 22, 15, 14, 3, 19, 16, 18]
 solution : [9, 23, 17]


Before reduction : 
 pending  : [27, 39, 22, 15, 14, 3, 19, 16, 18]
 solution : [9, 23, 17]

Essensial at level 13 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 524288), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 16777216), (15, 8388608), (16, 262144), (17, 33554432), (18, 16777216), (19, 540672), (20, -1), (21, -1), (22, 262144), (23, -1), (24, -1), (25, -1), (26, -1), (27, 2097152), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, 2097152), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 0), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 262144), (15, 65536), (16, 0), (17, -1), (18, 0), (19, 0), (20, -1), (21, -1), (22, 65536), (23, -1), (24, -1), (25, -1), (26, -1), (27, 2048), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, 2048), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 13 : {19, 16, 18, 3}

After reduction : 
 pending  : [27, 39, 22, 15, 14]
 solution : [9, 23, 17]


Before reduction : 
 pending  : [27, 39, 22, 15, 14]
 solution : [9, 23, 17]

Essensial at level 13 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 0), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 262144), (15, 65536), (16, 0), (17, -1), (18, 0), (19, 0), (20, -1), (21, -1), (22, 65536), (23, -1), (24, -1), (25, -1), (26, -1), (27, 2048), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, 2048), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 262144), (15, 65536), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, 65536), (23, -1), (24, -1), (25, -1), (26, -1), (27, 2048), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, 2048), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 13 : set()

After reduction : 
 pending  : [27, 39, 22, 15, 14]
 solution : [9, 23, 17]


Solution : [9, 23, 17] has cost 22.


Before backtrack at level 13
 pending : [27, 39, 22, 15, 14]
 solution : [9, 23, 17]

After backtrack at level 13
 pending : [27, 39, 22, 15, 14, 3, 19, 16, 18]
 solution : [9, 23, 17]


Invert decision for 17 at level 12


New level: 13
 pending : [27, 39, 22, 15, 14, 3, 19, 16, 18]
 solution : [9, 23]


Before reduction : 
 pending  : [27, 39, 22, 15, 14, 3, 19, 16, 18]
 solution : [9, 23]

Essensial at level 13 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 262144), (15, 65536), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, 65536), (23, -1), (24, -1), (25, -1), (26, -1), (27, 2048), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, 2048), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 524288), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 16777216), (15, 8388608), (16, 262144), (17, -1), (18, 16777216), (19, 540672), (20, -1), (21, -1), (22, 262144), (23, -1), (24, -1), (25, -1), (26, -1), (27, 2097152), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, 2097152), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 13 : set()

After reduction : 
 pending  : [27, 39, 22, 15, 14, 3, 19, 16, 18]
 solution : [9, 23]


Solution : [9, 23] has cost 13.


Decide in level 13 among pending : [27, 39, 22, 15, 14, 3, 19, 16, 18]

Coverage : [(0, -1), (1, -1), (2, -1), (3, 524288), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 16777216), (15, 8388608), (16, 262144), (17, -1), (18, 16777216), (19, 540672), (20, -1), (21, -1), (22, 262144), (23, -1), (24, -1), (25, -1), (26, -1), (27, 2097152), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, 2097152), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Decide 14 with phase True at level 13

After decision at level 13
 pending : [27, 39, 22, 15, 3, 19, 16, 18]
 solution : [9, 23, 14]


New level: 14
 pending : [27, 39, 22, 15, 3, 19, 16, 18]
 solution : [9, 23, 14]


Before reduction : 
 pending  : [27, 39, 22, 15, 3, 19, 16, 18]
 solution : [9, 23, 14]

Essensial at level 14 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 524288), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 16777216), (15, 8388608), (16, 262144), (17, -1), (18, 16777216), (19, 540672), (20, -1), (21, -1), (22, 262144), (23, -1), (24, -1), (25, -1), (26, -1), (27, 2097152), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, 2097152), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 262144), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, 0), (16, 0), (17, -1), (18, 4194304), (19, 264192), (20, -1), (21, -1), (22, 0), (23, -1), (24, -1), (25, -1), (26, -1), (27, 524288), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, 524288), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 14 : {16, 22, 15}

After reduction : 
 pending  : [27, 39, 3, 19, 18]
 solution : [9, 23, 14]


Before reduction : 
 pending  : [27, 39, 3, 19, 18]
 solution : [9, 23, 14]

Essensial at level 14 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 262144), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, 0), (16, 0), (17, -1), (18, 4194304), (19, 264192), (20, -1), (21, -1), (22, 0), (23, -1), (24, -1), (25, -1), (26, -1), (27, 524288), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, 524288), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 262144), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, 4194304), (19, 264192), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, 524288), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, 524288), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 14 : set()

After reduction : 
 pending  : [27, 39, 3, 19, 18]
 solution : [9, 23, 14]


Solution : [9, 23, 14] has cost 20.


Before backtrack at level 14
 pending : [27, 39, 3, 19, 18]
 solution : [9, 23, 14]

After backtrack at level 14
 pending : [27, 39, 3, 19, 18, 22, 15, 16]
 solution : [9, 23, 14]


Invert decision for 14 at level 13


New level: 14
 pending : [27, 39, 3, 19, 18, 22, 15, 16]
 solution : [9, 23]


Before reduction : 
 pending  : [27, 39, 3, 19, 18, 22, 15, 16]
 solution : [9, 23]

Essensial at level 14 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 262144), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, 4194304), (19, 264192), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, 524288), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, 524288), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 524288), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, 8388608), (16, 262144), (17, -1), (18, 16777216), (19, 540672), (20, -1), (21, -1), (22, 262144), (23, -1), (24, -1), (25, -1), (26, -1), (27, 2097152), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, 2097152), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 14 : set()

After reduction : 
 pending  : [27, 39, 3, 19, 18, 22, 15, 16]
 solution : [9, 23]


Solution : [9, 23] has cost 13.


Decide in level 14 among pending : [27, 39, 3, 19, 18, 22, 15, 16]

Coverage : [(0, -1), (1, -1), (2, -1), (3, 524288), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, 8388608), (16, 262144), (17, -1), (18, 16777216), (19, 540672), (20, -1), (21, -1), (22, 262144), (23, -1), (24, -1), (25, -1), (26, -1), (27, 2097152), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, 2097152), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Decide 18 with phase True at level 14

After decision at level 14
 pending : [27, 39, 3, 19, 22, 15, 16]
 solution : [9, 23, 18]


New level: 15
 pending : [27, 39, 3, 19, 22, 15, 16]
 solution : [9, 23, 18]


Before reduction : 
 pending  : [27, 39, 3, 19, 22, 15, 16]
 solution : [9, 23, 18]

Essensial at level 15 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 524288), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, 8388608), (16, 262144), (17, -1), (18, 16777216), (19, 540672), (20, -1), (21, -1), (22, 262144), (23, -1), (24, -1), (25, -1), (26, -1), (27, 2097152), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, 2097152), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 0), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, 65536), (16, 0), (17, -1), (18, -1), (19, 0), (20, -1), (21, -1), (22, 65536), (23, -1), (24, -1), (25, -1), (26, -1), (27, 2048), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, 2048), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 15 : {19, 16, 3}

After reduction : 
 pending  : [27, 39, 22, 15]
 solution : [9, 23, 18]


Before reduction : 
 pending  : [27, 39, 22, 15]
 solution : [9, 23, 18]

Essensial at level 15 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 0), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, 65536), (16, 0), (17, -1), (18, -1), (19, 0), (20, -1), (21, -1), (22, 65536), (23, -1), (24, -1), (25, -1), (26, -1), (27, 2048), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, 2048), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, 65536), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, 65536), (23, -1), (24, -1), (25, -1), (26, -1), (27, 2048), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, 2048), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 15 : set()

After reduction : 
 pending  : [27, 39, 22, 15]
 solution : [9, 23, 18]


Solution : [9, 23, 18] has cost 22.


Before backtrack at level 15
 pending : [27, 39, 22, 15]
 solution : [9, 23, 18]

After backtrack at level 15
 pending : [27, 39, 22, 15, 3, 19, 16]
 solution : [9, 23, 18]


Invert decision for 18 at level 14


New level: 15
 pending : [27, 39, 22, 15, 3, 19, 16]
 solution : [9, 23]


Before reduction : 
 pending  : [27, 39, 22, 15, 3, 19, 16]
 solution : [9, 23]

Essensial at level 15 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, 65536), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, 65536), (23, -1), (24, -1), (25, -1), (26, -1), (27, 2048), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, 2048), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 524288), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, 8388608), (16, 262144), (17, -1), (18, -1), (19, 540672), (20, -1), (21, -1), (22, 262144), (23, -1), (24, -1), (25, -1), (26, -1), (27, 2097152), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, 2097152), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 15 : set()

After reduction : 
 pending  : [27, 39, 22, 15, 3, 19, 16]
 solution : [9, 23]


Solution : [9, 23] has cost 13.


Decide in level 15 among pending : [27, 39, 22, 15, 3, 19, 16]

Coverage : [(0, -1), (1, -1), (2, -1), (3, 524288), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, 8388608), (16, 262144), (17, -1), (18, -1), (19, 540672), (20, -1), (21, -1), (22, 262144), (23, -1), (24, -1), (25, -1), (26, -1), (27, 2097152), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, 2097152), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Decide 15 with phase True at level 15

After decision at level 15
 pending : [27, 39, 22, 3, 19, 16]
 solution : [9, 23, 15]


New level: 16
 pending : [27, 39, 22, 3, 19, 16]
 solution : [9, 23, 15]


Before reduction : 
 pending  : [27, 39, 22, 3, 19, 16]
 solution : [9, 23, 15]

Essensial at level 16 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 524288), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, 8388608), (16, 262144), (17, -1), (18, -1), (19, 540672), (20, -1), (21, -1), (22, 262144), (23, -1), (24, -1), (25, -1), (26, -1), (27, 2097152), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, 2097152), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 262144), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, 0), (17, -1), (18, -1), (19, 264192), (20, -1), (21, -1), (22, 0), (23, -1), (24, -1), (25, -1), (26, -1), (27, 524288), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, 524288), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 16 : {16, 22}

After reduction : 
 pending  : [27, 39, 3, 19]
 solution : [9, 23, 15]


Before reduction : 
 pending  : [27, 39, 3, 19]
 solution : [9, 23, 15]

Essensial at level 16 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 262144), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, 0), (17, -1), (18, -1), (19, 264192), (20, -1), (21, -1), (22, 0), (23, -1), (24, -1), (25, -1), (26, -1), (27, 524288), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, 524288), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 262144), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, 264192), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, 524288), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, 524288), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 16 : set()

After reduction : 
 pending  : [27, 39, 3, 19]
 solution : [9, 23, 15]


Solution : [9, 23, 15] has cost 20.


Before backtrack at level 16
 pending : [27, 39, 3, 19]
 solution : [9, 23, 15]

After backtrack at level 16
 pending : [27, 39, 3, 19, 22, 16]
 solution : [9, 23, 15]


Invert decision for 15 at level 15


New level: 16
 pending : [27, 39, 3, 19, 22, 16]
 solution : [9, 23]


Before reduction : 
 pending  : [27, 39, 3, 19, 22, 16]
 solution : [9, 23]

Essensial at level 16 : {22}

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 262144), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, 264192), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, 524288), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, 524288), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 524288), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, 131072), (17, -1), (18, -1), (19, 540672), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, 2097152), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, 2097152), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 16 : set()

After reduction : 
 pending  : [27, 39, 3, 19, 16]
 solution : [9, 23, 22]


Before reduction : 
 pending  : [27, 39, 3, 19, 16]
 solution : [9, 23, 22]

Essensial at level 16 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 524288), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, 131072), (17, -1), (18, -1), (19, 540672), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, 2097152), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, 2097152), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 524288), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, 131072), (17, -1), (18, -1), (19, 540672), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, 2097152), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, 2097152), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 16 : set()

After reduction : 
 pending  : [27, 39, 3, 19, 16]
 solution : [9, 23, 22]


Solution : [9, 23, 22] has cost 20.


Before backtrack at level 16
 pending : [27, 39, 3, 19, 16]
 solution : [9, 23, 22]

After backtrack at level 16
 pending : [27, 39, 3, 19, 16, 22]
 solution : [9, 23]


Before backtrack at level 15
 pending : [27, 39, 3, 19, 16, 22]
 solution : [9, 23]

After backtrack at level 15
 pending : [27, 39, 3, 19, 16, 22, 15]
 solution : [9, 23]


Before backtrack at level 14
 pending : [27, 39, 3, 19, 16, 22, 15]
 solution : [9, 23]

After backtrack at level 14
 pending : [27, 39, 3, 19, 16, 22, 15, 18]
 solution : [9, 23]


Before backtrack at level 13
 pending : [27, 39, 3, 19, 16, 22, 15, 18]
 solution : [9, 23]

After backtrack at level 13
 pending : [27, 39, 3, 19, 16, 22, 15, 18, 14]
 solution : [9, 23]


Before backtrack at level 12
 pending : [27, 39, 3, 19, 16, 22, 15, 18, 14]
 solution : [9, 23]

After backtrack at level 12
 pending : [27, 39, 3, 19, 16, 22, 15, 18, 14, 5, 29, 31, 37, 42, 43, 47, 48, 49, 7, 41, 30, 33, 17]
 solution : [9, 23]


Invert decision for 23 at level 11


New level: 12
 pending : [27, 39, 3, 19, 16, 22, 15, 18, 14, 5, 29, 31, 37, 42, 43, 47, 48, 49, 7, 41, 30, 33, 17]
 solution : [9]


Before reduction : 
 pending  : [27, 39, 3, 19, 16, 22, 15, 18, 14, 5, 29, 31, 37, 42, 43, 47, 48, 49, 7, 41, 30, 33, 17]
 solution : [9]

Essensial at level 12 : {7}

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 524288), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, 131072), (17, -1), (18, -1), (19, 540672), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, 2097152), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, 2097152), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 524288), (4, -1), (5, 0), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 16777216), (15, 8388608), (16, 262144), (17, 33554432), (18, 16777216), (19, 540672), (20, -1), (21, -1), (22, 262144), (23, -1), (24, -1), (25, -1), (26, -1), (27, 2097152), (28, -1), (29, 0), (30, 0), (31, 0), (32, -1), (33, 0), (34, -1), (35, -1), (36, -1), (37, 0), (38, -1), (39, 2097152), (40, -1), (41, 0), (42, 0), (43, 0), (44, -1), (45, -1), (46, -1), (47, 0), (48, 0), (49, 0), (50, -1), (51, -1), (52, -1)]

Covered at level 12 : {33, 37, 5, 41, 42, 43, 47, 48, 49, 29, 30, 31}

After reduction : 
 pending  : [27, 39, 3, 19, 16, 22, 15, 18, 14, 17]
 solution : [9, 7]


Before reduction : 
 pending  : [27, 39, 3, 19, 16, 22, 15, 18, 14, 17]
 solution : [9, 7]

Essensial at level 12 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 524288), (4, -1), (5, 0), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 16777216), (15, 8388608), (16, 262144), (17, 33554432), (18, 16777216), (19, 540672), (20, -1), (21, -1), (22, 262144), (23, -1), (24, -1), (25, -1), (26, -1), (27, 2097152), (28, -1), (29, 0), (30, 0), (31, 0), (32, -1), (33, 0), (34, -1), (35, -1), (36, -1), (37, 0), (38, -1), (39, 2097152), (40, -1), (41, 0), (42, 0), (43, 0), (44, -1), (45, -1), (46, -1), (47, 0), (48, 0), (49, 0), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 524288), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 16777216), (15, 8388608), (16, 262144), (17, 33554432), (18, 16777216), (19, 540672), (20, -1), (21, -1), (22, 262144), (23, -1), (24, -1), (25, -1), (26, -1), (27, 2097152), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, 2097152), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 12 : set()

After reduction : 
 pending  : [27, 39, 3, 19, 16, 22, 15, 18, 14, 17]
 solution : [9, 7]


Solution : [9, 7] has cost 10.


Decide in level 12 among pending : [27, 39, 3, 19, 16, 22, 15, 18, 14, 17]

Coverage : [(0, -1), (1, -1), (2, -1), (3, 524288), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 16777216), (15, 8388608), (16, 262144), (17, 33554432), (18, 16777216), (19, 540672), (20, -1), (21, -1), (22, 262144), (23, -1), (24, -1), (25, -1), (26, -1), (27, 2097152), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, 2097152), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Decide 17 with phase True at level 12

After decision at level 12
 pending : [27, 39, 3, 19, 16, 22, 15, 18, 14]
 solution : [9, 7, 17]


New level: 13
 pending : [27, 39, 3, 19, 16, 22, 15, 18, 14]
 solution : [9, 7, 17]


Before reduction : 
 pending  : [27, 39, 3, 19, 16, 22, 15, 18, 14]
 solution : [9, 7, 17]

Essensial at level 13 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 524288), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 16777216), (15, 8388608), (16, 262144), (17, 33554432), (18, 16777216), (19, 540672), (20, -1), (21, -1), (22, 262144), (23, -1), (24, -1), (25, -1), (26, -1), (27, 2097152), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, 2097152), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 0), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 262144), (15, 65536), (16, 0), (17, -1), (18, 0), (19, 0), (20, -1), (21, -1), (22, 65536), (23, -1), (24, -1), (25, -1), (26, -1), (27, 2048), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, 2048), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 13 : {19, 16, 18, 3}

After reduction : 
 pending  : [27, 39, 22, 15, 14]
 solution : [9, 7, 17]


Before reduction : 
 pending  : [27, 39, 22, 15, 14]
 solution : [9, 7, 17]

Essensial at level 13 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 0), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 262144), (15, 65536), (16, 0), (17, -1), (18, 0), (19, 0), (20, -1), (21, -1), (22, 65536), (23, -1), (24, -1), (25, -1), (26, -1), (27, 2048), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, 2048), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 262144), (15, 65536), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, 65536), (23, -1), (24, -1), (25, -1), (26, -1), (27, 2048), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, 2048), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 13 : set()

After reduction : 
 pending  : [27, 39, 22, 15, 14]
 solution : [9, 7, 17]


Solution : [9, 7, 17] has cost 19.


Before backtrack at level 13
 pending : [27, 39, 22, 15, 14]
 solution : [9, 7, 17]

After backtrack at level 13
 pending : [27, 39, 22, 15, 14, 3, 19, 16, 18]
 solution : [9, 7, 17]


Invert decision for 17 at level 12


New level: 13
 pending : [27, 39, 22, 15, 14, 3, 19, 16, 18]
 solution : [9, 7]


Before reduction : 
 pending  : [27, 39, 22, 15, 14, 3, 19, 16, 18]
 solution : [9, 7]

Essensial at level 13 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 262144), (15, 65536), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, 65536), (23, -1), (24, -1), (25, -1), (26, -1), (27, 2048), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, 2048), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 524288), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 16777216), (15, 8388608), (16, 262144), (17, -1), (18, 16777216), (19, 540672), (20, -1), (21, -1), (22, 262144), (23, -1), (24, -1), (25, -1), (26, -1), (27, 2097152), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, 2097152), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 13 : set()

After reduction : 
 pending  : [27, 39, 22, 15, 14, 3, 19, 16, 18]
 solution : [9, 7]


Solution : [9, 7] has cost 10.


Decide in level 13 among pending : [27, 39, 22, 15, 14, 3, 19, 16, 18]

Coverage : [(0, -1), (1, -1), (2, -1), (3, 524288), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 16777216), (15, 8388608), (16, 262144), (17, -1), (18, 16777216), (19, 540672), (20, -1), (21, -1), (22, 262144), (23, -1), (24, -1), (25, -1), (26, -1), (27, 2097152), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, 2097152), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Decide 14 with phase True at level 13

After decision at level 13
 pending : [27, 39, 22, 15, 3, 19, 16, 18]
 solution : [9, 7, 14]


New level: 14
 pending : [27, 39, 22, 15, 3, 19, 16, 18]
 solution : [9, 7, 14]


Before reduction : 
 pending  : [27, 39, 22, 15, 3, 19, 16, 18]
 solution : [9, 7, 14]

Essensial at level 14 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 524288), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 16777216), (15, 8388608), (16, 262144), (17, -1), (18, 16777216), (19, 540672), (20, -1), (21, -1), (22, 262144), (23, -1), (24, -1), (25, -1), (26, -1), (27, 2097152), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, 2097152), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 262144), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, 0), (16, 0), (17, -1), (18, 4194304), (19, 264192), (20, -1), (21, -1), (22, 0), (23, -1), (24, -1), (25, -1), (26, -1), (27, 524288), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, 524288), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 14 : {16, 22, 15}

After reduction : 
 pending  : [27, 39, 3, 19, 18]
 solution : [9, 7, 14]


Before reduction : 
 pending  : [27, 39, 3, 19, 18]
 solution : [9, 7, 14]

Essensial at level 14 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 262144), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, 0), (16, 0), (17, -1), (18, 4194304), (19, 264192), (20, -1), (21, -1), (22, 0), (23, -1), (24, -1), (25, -1), (26, -1), (27, 524288), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, 524288), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 262144), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, 4194304), (19, 264192), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, 524288), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, 524288), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 14 : set()

After reduction : 
 pending  : [27, 39, 3, 19, 18]
 solution : [9, 7, 14]


Solution : [9, 7, 14] has cost 17.


Before backtrack at level 14
 pending : [27, 39, 3, 19, 18]
 solution : [9, 7, 14]

After backtrack at level 14
 pending : [27, 39, 3, 19, 18, 22, 15, 16]
 solution : [9, 7, 14]


Invert decision for 14 at level 13


New level: 14
 pending : [27, 39, 3, 19, 18, 22, 15, 16]
 solution : [9, 7]


Before reduction : 
 pending  : [27, 39, 3, 19, 18, 22, 15, 16]
 solution : [9, 7]

Essensial at level 14 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 262144), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, 4194304), (19, 264192), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, 524288), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, 524288), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 524288), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, 8388608), (16, 262144), (17, -1), (18, 16777216), (19, 540672), (20, -1), (21, -1), (22, 262144), (23, -1), (24, -1), (25, -1), (26, -1), (27, 2097152), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, 2097152), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 14 : set()

After reduction : 
 pending  : [27, 39, 3, 19, 18, 22, 15, 16]
 solution : [9, 7]


Solution : [9, 7] has cost 10.


Decide in level 14 among pending : [27, 39, 3, 19, 18, 22, 15, 16]

Coverage : [(0, -1), (1, -1), (2, -1), (3, 524288), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, 8388608), (16, 262144), (17, -1), (18, 16777216), (19, 540672), (20, -1), (21, -1), (22, 262144), (23, -1), (24, -1), (25, -1), (26, -1), (27, 2097152), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, 2097152), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Decide 18 with phase True at level 14

After decision at level 14
 pending : [27, 39, 3, 19, 22, 15, 16]
 solution : [9, 7, 18]


New level: 15
 pending : [27, 39, 3, 19, 22, 15, 16]
 solution : [9, 7, 18]


Before reduction : 
 pending  : [27, 39, 3, 19, 22, 15, 16]
 solution : [9, 7, 18]

Essensial at level 15 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 524288), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, 8388608), (16, 262144), (17, -1), (18, 16777216), (19, 540672), (20, -1), (21, -1), (22, 262144), (23, -1), (24, -1), (25, -1), (26, -1), (27, 2097152), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, 2097152), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 0), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, 65536), (16, 0), (17, -1), (18, -1), (19, 0), (20, -1), (21, -1), (22, 65536), (23, -1), (24, -1), (25, -1), (26, -1), (27, 2048), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, 2048), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 15 : {19, 16, 3}

After reduction : 
 pending  : [27, 39, 22, 15]
 solution : [9, 7, 18]


Before reduction : 
 pending  : [27, 39, 22, 15]
 solution : [9, 7, 18]

Essensial at level 15 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 0), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, 65536), (16, 0), (17, -1), (18, -1), (19, 0), (20, -1), (21, -1), (22, 65536), (23, -1), (24, -1), (25, -1), (26, -1), (27, 2048), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, 2048), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, 65536), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, 65536), (23, -1), (24, -1), (25, -1), (26, -1), (27, 2048), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, 2048), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 15 : set()

After reduction : 
 pending  : [27, 39, 22, 15]
 solution : [9, 7, 18]


Solution : [9, 7, 18] has cost 19.


Before backtrack at level 15
 pending : [27, 39, 22, 15]
 solution : [9, 7, 18]

After backtrack at level 15
 pending : [27, 39, 22, 15, 3, 19, 16]
 solution : [9, 7, 18]


Invert decision for 18 at level 14


New level: 15
 pending : [27, 39, 22, 15, 3, 19, 16]
 solution : [9, 7]


Before reduction : 
 pending  : [27, 39, 22, 15, 3, 19, 16]
 solution : [9, 7]

Essensial at level 15 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, 65536), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, 65536), (23, -1), (24, -1), (25, -1), (26, -1), (27, 2048), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, 2048), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 524288), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, 8388608), (16, 262144), (17, -1), (18, -1), (19, 540672), (20, -1), (21, -1), (22, 262144), (23, -1), (24, -1), (25, -1), (26, -1), (27, 2097152), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, 2097152), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 15 : set()

After reduction : 
 pending  : [27, 39, 22, 15, 3, 19, 16]
 solution : [9, 7]


Solution : [9, 7] has cost 10.


Decide in level 15 among pending : [27, 39, 22, 15, 3, 19, 16]

Coverage : [(0, -1), (1, -1), (2, -1), (3, 524288), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, 8388608), (16, 262144), (17, -1), (18, -1), (19, 540672), (20, -1), (21, -1), (22, 262144), (23, -1), (24, -1), (25, -1), (26, -1), (27, 2097152), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, 2097152), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Decide 15 with phase True at level 15

After decision at level 15
 pending : [27, 39, 22, 3, 19, 16]
 solution : [9, 7, 15]


New level: 16
 pending : [27, 39, 22, 3, 19, 16]
 solution : [9, 7, 15]


Before reduction : 
 pending  : [27, 39, 22, 3, 19, 16]
 solution : [9, 7, 15]

Essensial at level 16 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 524288), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, 8388608), (16, 262144), (17, -1), (18, -1), (19, 540672), (20, -1), (21, -1), (22, 262144), (23, -1), (24, -1), (25, -1), (26, -1), (27, 2097152), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, 2097152), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 262144), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, 0), (17, -1), (18, -1), (19, 264192), (20, -1), (21, -1), (22, 0), (23, -1), (24, -1), (25, -1), (26, -1), (27, 524288), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, 524288), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 16 : {16, 22}

After reduction : 
 pending  : [27, 39, 3, 19]
 solution : [9, 7, 15]


Before reduction : 
 pending  : [27, 39, 3, 19]
 solution : [9, 7, 15]

Essensial at level 16 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 262144), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, 0), (17, -1), (18, -1), (19, 264192), (20, -1), (21, -1), (22, 0), (23, -1), (24, -1), (25, -1), (26, -1), (27, 524288), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, 524288), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 262144), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, 264192), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, 524288), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, 524288), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 16 : set()

After reduction : 
 pending  : [27, 39, 3, 19]
 solution : [9, 7, 15]


Solution : [9, 7, 15] has cost 17.


Before backtrack at level 16
 pending : [27, 39, 3, 19]
 solution : [9, 7, 15]

After backtrack at level 16
 pending : [27, 39, 3, 19, 22, 16]
 solution : [9, 7, 15]


Invert decision for 15 at level 15


New level: 16
 pending : [27, 39, 3, 19, 22, 16]
 solution : [9, 7]


Before reduction : 
 pending  : [27, 39, 3, 19, 22, 16]
 solution : [9, 7]

Essensial at level 16 : {22}

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 262144), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, 264192), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, 524288), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, 524288), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 524288), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, 131072), (17, -1), (18, -1), (19, 540672), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, 2097152), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, 2097152), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 16 : set()

After reduction : 
 pending  : [27, 39, 3, 19, 16]
 solution : [9, 7, 22]


Before reduction : 
 pending  : [27, 39, 3, 19, 16]
 solution : [9, 7, 22]

Essensial at level 16 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 524288), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, 131072), (17, -1), (18, -1), (19, 540672), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, 2097152), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, 2097152), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 524288), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, 131072), (17, -1), (18, -1), (19, 540672), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, 2097152), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, 2097152), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 16 : set()

After reduction : 
 pending  : [27, 39, 3, 19, 16]
 solution : [9, 7, 22]


Solution : [9, 7, 22] has cost 17.


Before backtrack at level 16
 pending : [27, 39, 3, 19, 16]
 solution : [9, 7, 22]

After backtrack at level 16
 pending : [27, 39, 3, 19, 16, 22]
 solution : [9, 7]


Before backtrack at level 15
 pending : [27, 39, 3, 19, 16, 22]
 solution : [9, 7]

After backtrack at level 15
 pending : [27, 39, 3, 19, 16, 22, 15]
 solution : [9, 7]


Before backtrack at level 14
 pending : [27, 39, 3, 19, 16, 22, 15]
 solution : [9, 7]

After backtrack at level 14
 pending : [27, 39, 3, 19, 16, 22, 15, 18]
 solution : [9, 7]


Before backtrack at level 13
 pending : [27, 39, 3, 19, 16, 22, 15, 18]
 solution : [9, 7]

After backtrack at level 13
 pending : [27, 39, 3, 19, 16, 22, 15, 18, 14]
 solution : [9, 7]


Before backtrack at level 12
 pending : [27, 39, 3, 19, 16, 22, 15, 18, 14]
 solution : [9, 7]

After backtrack at level 12
 pending : [27, 39, 3, 19, 16, 22, 15, 18, 14, 7, 5, 29, 31, 37, 42, 43, 47, 48, 49, 41, 30, 33, 17]
 solution : [9]


Before backtrack at level 11
 pending : [27, 39, 3, 19, 16, 22, 15, 18, 14, 7, 5, 29, 31, 37, 42, 43, 47, 48, 49, 41, 30, 33, 17]
 solution : [9]

After backtrack at level 11
 pending : [27, 39, 3, 19, 16, 22, 15, 18, 14, 7, 5, 29, 31, 37, 42, 43, 47, 48, 49, 41, 30, 33, 17, 23]
 solution : [9]


Before backtrack at level 10
 pending : [27, 39, 3, 19, 16, 22, 15, 18, 14, 7, 5, 29, 31, 37, 42, 43, 47, 48, 49, 41, 30, 33, 17, 23]
 solution : [9]

After backtrack at level 10
 pending : [27, 39, 3, 19, 16, 22, 15, 18, 14, 7, 5, 29, 31, 37, 42, 43, 47, 48, 49, 41, 30, 33, 17, 23, 38]
 solution : [9]


Before backtrack at level 9
 pending : [27, 39, 3, 19, 16, 22, 15, 18, 14, 7, 5, 29, 31, 37, 42, 43, 47, 48, 49, 41, 30, 33, 17, 23, 38]
 solution : [9]

After backtrack at level 9
 pending : [27, 39, 3, 19, 16, 22, 15, 18, 14, 7, 5, 29, 31, 37, 42, 43, 47, 48, 49, 41, 30, 33, 17, 23, 38, 24]
 solution : [9]


Before backtrack at level 8
 pending : [27, 39, 3, 19, 16, 22, 15, 18, 14, 7, 5, 29, 31, 37, 42, 43, 47, 48, 49, 41, 30, 33, 17, 23, 38, 24]
 solution : [9]

After backtrack at level 8
 pending : [27, 39, 3, 19, 16, 22, 15, 18, 14, 7, 5, 29, 31, 37, 42, 43, 47, 48, 49, 41, 30, 33, 17, 23, 38, 24, 21]
 solution : [9]


Before backtrack at level 7
 pending : [27, 39, 3, 19, 16, 22, 15, 18, 14, 7, 5, 29, 31, 37, 42, 43, 47, 48, 49, 41, 30, 33, 17, 23, 38, 24, 21]
 solution : [9]

After backtrack at level 7
 pending : [27, 39, 3, 19, 16, 22, 15, 18, 14, 7, 5, 29, 31, 37, 42, 43, 47, 48, 49, 41, 30, 33, 17, 23, 38, 24, 21, 40]
 solution : [9]


Before backtrack at level 6
 pending : [27, 39, 3, 19, 16, 22, 15, 18, 14, 7, 5, 29, 31, 37, 42, 43, 47, 48, 49, 41, 30, 33, 17, 23, 38, 24, 21, 40]
 solution : [9]

After backtrack at level 6
 pending : [27, 39, 3, 19, 16, 22, 15, 18, 14, 7, 5, 29, 31, 37, 42, 43, 47, 48, 49, 41, 30, 33, 17, 23, 38, 24, 21, 40, 13]
 solution : [9]


Before backtrack at level 5
 pending : [27, 39, 3, 19, 16, 22, 15, 18, 14, 7, 5, 29, 31, 37, 42, 43, 47, 48, 49, 41, 30, 33, 17, 23, 38, 24, 21, 40, 13]
 solution : [9]

After backtrack at level 5
 pending : [27, 39, 3, 19, 16, 22, 15, 18, 14, 7, 5, 29, 31, 37, 42, 43, 47, 48, 49, 41, 30, 33, 17, 23, 38, 24, 21, 40, 13, 32]
 solution : [9]


Before backtrack at level 4
 pending : [27, 39, 3, 19, 16, 22, 15, 18, 14, 7, 5, 29, 31, 37, 42, 43, 47, 48, 49, 41, 30, 33, 17, 23, 38, 24, 21, 40, 13, 32]
 solution : [9]

After backtrack at level 4
 pending : [27, 39, 3, 19, 16, 22, 15, 18, 14, 7, 5, 29, 31, 37, 42, 43, 47, 48, 49, 41, 30, 33, 17, 23, 38, 24, 21, 40, 13, 32, 26]
 solution : [9]


Before backtrack at level 3
 pending : [27, 39, 3, 19, 16, 22, 15, 18, 14, 7, 5, 29, 31, 37, 42, 43, 47, 48, 49, 41, 30, 33, 17, 23, 38, 24, 21, 40, 13, 32, 26]
 solution : [9]

After backtrack at level 3
 pending : [27, 39, 3, 19, 16, 22, 15, 18, 14, 7, 5, 29, 31, 37, 42, 43, 47, 48, 49, 41, 30, 33, 17, 23, 38, 24, 21, 40, 13, 32, 26, 28]
 solution : [9]


Before backtrack at level 2
 pending : [27, 39, 3, 19, 16, 22, 15, 18, 14, 7, 5, 29, 31, 37, 42, 43, 47, 48, 49, 41, 30, 33, 17, 23, 38, 24, 21, 40, 13, 32, 26, 28]
 solution : [9]

After backtrack at level 2
 pending : [27, 39, 3, 19, 16, 22, 15, 18, 14, 7, 5, 29, 31, 37, 42, 43, 47, 48, 49, 41, 30, 33, 17, 23, 38, 24, 21, 40, 13, 32, 26, 28, 10]
 solution : [9]


Before backtrack at level 1
 pending : [27, 39, 3, 19, 16, 22, 15, 18, 14, 7, 5, 29, 31, 37, 42, 43, 47, 48, 49, 41, 30, 33, 17, 23, 38, 24, 21, 40, 13, 32, 26, 28, 10]
 solution : [9]

After backtrack at level 1
 pending : [27, 39, 3, 19, 16, 22, 15, 18, 14, 7, 5, 29, 31, 37, 42, 43, 47, 48, 49, 41, 30, 33, 17, 23, 38, 24, 21, 40, 13, 32, 26, 28, 10, 8]
 solution : [9]


=====================================================================================================================

	[MIN RESULT]: Minimized Invariants on [ivybench/sym_quorum/ivy/simple-election: acceptor=3,proposer=3]

=====================================================================================================================

[MIN NOTE]: number of minimal solution found: 1

[MIN NOTE]: total qcost: 14

[MIN NOTE]: maximum branch and bound depth: 16

Definitions (length=2)

invariant [def_didNotPromise] didNotPromise(A) = forall P. ~promise(A,P) # definition

invariant [def_chosenAt] chosenAt(Q,P) = forall A. member(A,Q) -> promise(A,P) # definition

Equality Relations (length=0)

Solution 0 : [9, 28, 7] (length = 3)

invariant [invar_9] forall ACCEPTOR0,PROPOSER0,PROPOSER1. ~promise(ACCEPTOR0,PROPOSER0) | ~promise(ACCEPTOR0,PROPOSER1) | PROPOSER0 = PROPOSER1 # qcost: 6

invariant [invar_28] forall PROPOSER0. (exists QUORUM0. ~leader(PROPOSER0) | chosenAt(QUORUM0,PROPOSER0)) # qcost: 4

invariant [invar_7] forall ACCEPTOR0,PROPOSER0. start(PROPOSER0) | ~promise(ACCEPTOR0,PROPOSER0) # qcost: 4




[QRM NOTE]: Time elapsed since start: 8.954 seconds

[QRM NOTE]: Time elapsed since last: 1.433 seconds

[QRM NOTE]: Peak memory: 3185081 bytes


=========================================================================================================

	[IVY_CHECK]: Ivy Check on [ivybench/sym_quorum/ivy/simple-election: acceptor=3,proposer=3]

=========================================================================================================

ivy_check complete=fo ivybench/sym_quorum/ivy/simple-election.acceptor_3_proposer_3.0.ivy


Isolate this:

    The following properties are assumed as axioms:
        ivybench/sym_quorum/ivy/simple-election.acceptor_3_proposer_3.0.ivy: line 17: axiom1

    The following definitions are used:
        ivybench/sym_quorum/ivy/simple-election.acceptor_3_proposer_3.0.ivy: line 29: def2
        ivybench/sym_quorum/ivy/simple-election.acceptor_3_proposer_3.0.ivy: line 30: def3

    The inductive invariant consists of the following conjectures:
        ivybench/sym_quorum/ivy/simple-election.acceptor_3_proposer_3.0.ivy: line 63: def_didNotPromise
        ivybench/sym_quorum/ivy/simple-election.acceptor_3_proposer_3.0.ivy: line 64: def_chosenAt
        ivybench/sym_quorum/ivy/simple-election.acceptor_3_proposer_3.0.ivy: line 65: invar_9
        ivybench/sym_quorum/ivy/simple-election.acceptor_3_proposer_3.0.ivy: line 66: invar_28
        ivybench/sym_quorum/ivy/simple-election.acceptor_3_proposer_3.0.ivy: line 67: invar_7

    The following action implementations are present:
        ivybench/sym_quorum/ivy/simple-election.acceptor_3_proposer_3.0.ivy: line 48: implementation of decide
        ivybench/sym_quorum/ivy/simple-election.acceptor_3_proposer_3.0.ivy: line 39: implementation of send_1a
        ivybench/sym_quorum/ivy/simple-election.acceptor_3_proposer_3.0.ivy: line 42: implementation of send_1b

    The following initializers are present:
        ivybench/sym_quorum/ivy/simple-election.acceptor_3_proposer_3.0.ivy: line 32: init[after4]

    Initialization must establish the invariant
        ivybench/sym_quorum/ivy/simple-election.acceptor_3_proposer_3.0.ivy: line 63: def_didNotPromise ... PASS
        ivybench/sym_quorum/ivy/simple-election.acceptor_3_proposer_3.0.ivy: line 64: def_chosenAt ... PASS
        ivybench/sym_quorum/ivy/simple-election.acceptor_3_proposer_3.0.ivy: line 65: invar_9 ... PASS
        ivybench/sym_quorum/ivy/simple-election.acceptor_3_proposer_3.0.ivy: line 66: invar_28 ... PASS
        ivybench/sym_quorum/ivy/simple-election.acceptor_3_proposer_3.0.ivy: line 67: invar_7 ... PASS

    The following set of external actions must preserve the invariant:
        (internal) ext:decide
            ivybench/sym_quorum/ivy/simple-election.acceptor_3_proposer_3.0.ivy: line 63: def_didNotPromise ... PASS
            ivybench/sym_quorum/ivy/simple-election.acceptor_3_proposer_3.0.ivy: line 64: def_chosenAt ... PASS
            ivybench/sym_quorum/ivy/simple-election.acceptor_3_proposer_3.0.ivy: line 65: invar_9 ... PASS
            ivybench/sym_quorum/ivy/simple-election.acceptor_3_proposer_3.0.ivy: line 66: invar_28 ... PASS
            ivybench/sym_quorum/ivy/simple-election.acceptor_3_proposer_3.0.ivy: line 67: invar_7 ... PASS
        (internal) ext:send_1a
            ivybench/sym_quorum/ivy/simple-election.acceptor_3_proposer_3.0.ivy: line 63: def_didNotPromise ... PASS
            ivybench/sym_quorum/ivy/simple-election.acceptor_3_proposer_3.0.ivy: line 64: def_chosenAt ... PASS
            ivybench/sym_quorum/ivy/simple-election.acceptor_3_proposer_3.0.ivy: line 65: invar_9 ... PASS
            ivybench/sym_quorum/ivy/simple-election.acceptor_3_proposer_3.0.ivy: line 66: invar_28 ... PASS
            ivybench/sym_quorum/ivy/simple-election.acceptor_3_proposer_3.0.ivy: line 67: invar_7 ... PASS
        (internal) ext:send_1b
            ivybench/sym_quorum/ivy/simple-election.acceptor_3_proposer_3.0.ivy: line 63: def_didNotPromise ... PASS
            ivybench/sym_quorum/ivy/simple-election.acceptor_3_proposer_3.0.ivy: line 64: def_chosenAt ... PASS
            ivybench/sym_quorum/ivy/simple-election.acceptor_3_proposer_3.0.ivy: line 65: invar_9 ... PASS
            ivybench/sym_quorum/ivy/simple-election.acceptor_3_proposer_3.0.ivy: line 66: invar_28 ... PASS
            ivybench/sym_quorum/ivy/simple-election.acceptor_3_proposer_3.0.ivy: line 67: invar_7 ... PASS

    The following program assertions are treated as assumptions:
        in action send_1b when called from the environment:
            ivybench/sym_quorum/ivy/simple-election.acceptor_3_proposer_3.0.ivy: line 43: assumption
            ivybench/sym_quorum/ivy/simple-election.acceptor_3_proposer_3.0.ivy: line 44: assumption
        in action decide when called from the environment:
            ivybench/sym_quorum/ivy/simple-election.acceptor_3_proposer_3.0.ivy: line 49: assumption

OK
[IVY_CHECK RESULT]: PASS

[R Implies P]: True

[UNSAT CORE]: ((forall A. didNotPromise(A) <-> (forall P. ~promise(A,P))) & (forall P,Q. chosenAt(Q,P) <-> (forall A. member(A,Q) -> promise(A,P))) & (forall Q1,Q2. (exists A. (member(A,Q1) & member(A,Q2)))) & (forall ACCEPTOR0,PROPOSER0,PROPOSER1. ~promise(ACCEPTOR0,PROPOSER0) | ~promise(ACCEPTOR0,PROPOSER1) | PROPOSER0 = PROPOSER1) & (forall PROPOSER0. (exists QUORUM0. ~leader(PROPOSER0) | chosenAt(QUORUM0,PROPOSER0))))

[QRM NOTE]: Time elapsed since start: 10.925 seconds

[QRM NOTE]: Time elapsed since last: 1.971 seconds

[QRM NOTE]: Peak memory: 2185892 bytes


**********************************************************************

	[QRM]: ivybench/sym_quorum/ivy/simple-election.ivy

**********************************************************************

[QRM RESULT]: PASS

